source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1 }
%2 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208001605
@global_var_1001c00c.3 = global i32 0
@global_var_1001c01c.4 = local_unnamed_addr global i32* @global_var_1001c00c.3
@global_var_1001c410.7 = global i32 0
@global_var_1001c010.8 = global i32 0
@global_var_1001c3a4.9 = local_unnamed_addr global i32 0
@global_var_1001c3a8.10 = local_unnamed_addr global i32 0
@global_var_1001c3ac.11 = local_unnamed_addr global i32 0
@global_var_1001c3b0.12 = local_unnamed_addr global i32 0
@global_var_1000a5a8.21 = constant [7 x i8] c"(null)\00"
@global_var_1001c35c = external local_unnamed_addr global i32
@global_var_10001468.29 = constant i32 939524126
@global_var_1001c3a0.30 = local_unnamed_addr global i32 0
@global_var_10001788.31 = constant i32 939524098
@global_var_10001990.32 = constant i32 939524097
@global_var_1001c398.33 = global i32 0
@global_var_1001c39c.34 = local_unnamed_addr global i32 0
@global_var_1001c3bc.35 = local_unnamed_addr global i32 0
@global_var_10001cf4.36 = constant [3 x i8] c"8`\00"
@global_var_10001d24.37 = constant [3 x i8] c"8`\00"
@global_var_10001d2c.38 = constant i32 939524096
@global_var_1000a5b0.39 = constant i32 1392508928
@global_var_1000a5b4.40 = constant i32 738197504
@global_var_10001e70.41 = constant [3 x i8] c"8`\00"
@global_var_10001e78.42 = constant [3 x i8] c"8`\00"
@global_var_10001ec4.43 = constant [3 x i8] c"8`\00"
@global_var_1000a5b8.44 = constant i32 1258291200
@global_var_1001c354.45 = local_unnamed_addr global i32 -1
@global_var_1000a578.46 = constant [14 x i8] c"66.172.10.124\00"
@global_var_1001c350.47 = global [14 x i8]* @global_var_1000a578.46
@global_var_100020d0.48 = constant i32 1006632961
@global_var_100022b8.49 = constant [3 x i8] c"8`\00"
@global_var_100022dc.50 = constant i32 1207961829
@global_var_10002308.51 = constant [3 x i8] c"8`\00"
@global_var_1000a5bc.52 = constant i32 788529152
@global_var_10002348.53 = constant [3 x i8] c"8`\00"
@global_var_10002354.54 = constant i32 1207959556
@global_var_1000a5c0.55 = constant i32 536870912
@global_var_1001c3e0.56 = global i32 0
@global_var_1001c3c0.57 = global i32 0
@global_var_1001c5f4.58 = global i32 0
@global_var_1001c428.59 = global i32 0
@global_var_1001c200.60 = global i32 0
@global_var_10004420.61 = constant [3 x i8] c"8`\00"
@global_var_1001c3ec.62 = local_unnamed_addr global i32 0
@global_var_1001e6e0.63 = global i32 0
@global_var_100033ec.64 = constant [3 x i8] c"8`\00"
@global_var_100034d0.65 = constant i32 939524098
@global_var_10003510.66 = constant [3 x i8] c"8`\00"
@global_var_10003678.67 = constant i32 939524118
@global_var_1001e638.68 = global i32 0
@global_var_1001c608.69 = global i32 0
@global_var_1001c368 = external global i32
@global_var_1001c3d0.70 = local_unnamed_addr global i32 0
@global_var_1001e6b8.71 = global i32 0
@global_var_100038d4.72 = constant i32 939524108
@global_var_1000396c.73 = constant [3 x i8] c"8`\00"
@global_var_10003b74.74 = constant i32 1207959640
@global_var_10003bb0.75 = constant i32 1207959580
@global_var_1001c130.76 = global i32 0
@global_var_1001c148 = external global i32
@global_var_1001c168.78 = global i32 -1726662223
@global_var_1001c150.79 = local_unnamed_addr global i32* @global_var_1001c168.78
@global_var_1001c14c.80 = global i32* @global_var_1001c168.78
@global_var_1000abc4.81 = constant i32 0
@global_var_10003ec4.82 = constant i32 939524118
@global_var_100042d8.83 = constant i32 939524130
@global_var_1001c1e4.84 = global i32 0
@global_var_1001c3c4.85 = local_unnamed_addr global i32 0
@global_var_1000436c.86 = constant i32 1207959585
@global_var_1001c000.87 = global i32 -1
@global_var_1001c3d4.88 = local_unnamed_addr global i32 0
@global_var_1001c3d8.89 = local_unnamed_addr global i32 0
@global_var_1000abec.90 = constant [10 x i8] c"/dev/null\00"
@global_var_1001c3dc.91 = local_unnamed_addr global i32 0
@global_var_1001c3c8.92 = local_unnamed_addr global i32 0
@global_var_1001c3cc.93 = local_unnamed_addr global i32 0
@global_var_10004738.94 = constant i32 939524096
@global_var_10004754.95 = constant i32 939524096
@global_var_1001c400.96 = local_unnamed_addr global i32 0
@global_var_1001c3e4.97 = global i32 0
@global_var_1001c620.99 = global i32 0
@global_var_1001c3e8.100 = local_unnamed_addr global i32 0
@global_var_10004ee8.102 = constant i32 1207960848
@global_var_1001c3f0.103 = local_unnamed_addr global i32 0
@global_var_1000abf8.104 = constant i32 771751936
@global_var_1001e6d0.105 = global i32 0
@global_var_10004fd8.106 = constant [3 x i8] c"8a\00"
@global_var_10004fe4.107 = constant i32 939524097
@global_var_100050b8.108 = constant i32 939524097
@global_var_1000518c.109 = constant i32 939524097
@global_var_100051b8.110 = constant i32 939524100
@global_var_10005298.111 = constant i32 1207959684
@global_var_10005414.112 = constant i32 939589631
@global_var_1000ac14.113 = constant i32 1912602624
@global_var_1000ac00.114 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1000ac18.115 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1000ac30.116 = constant [11 x i8] c"nameserver\00"
@global_var_1000ac3c.117 = constant [7 x i8] c"domain\00"
@global_var_1000ac44.118 = constant [7 x i8] c"search\00"
@global_var_1000574c.119 = constant i32 1207959568
@global_var_10005754.120 = constant i32 939524099
@global_var_1001c218.121 = global i32 0
@global_var_100058b4.122 = constant i32 939524129
@global_var_1001c3f4.123 = local_unnamed_addr global i32 0
@global_var_10005928.124 = constant [3 x i8] c"8`\00"
@global_var_10005960.125 = constant i32 939524129
@global_var_1001c3f8.126 = local_unnamed_addr global i32 0
@global_var_1001c3fc.127 = local_unnamed_addr global i32 0
@global_var_10005afc.128 = constant i32 939524118
@global_var_1001c248.129 = global i32 0
@global_var_1001c404.130 = local_unnamed_addr global i32 0
@global_var_1001c408.131 = local_unnamed_addr global i32 0
@global_var_10005c70.132 = constant i32 1207960845
@global_var_10005d00.133 = constant i32 1207960120
@global_var_1001c388.134 = local_unnamed_addr global i32 2
@global_var_1001c230.135 = global i32 0
@global_var_1001c384.136 = global i32* bitcast (i16* @global_var_1001c260.26 to i32*)
@global_var_10005f34.137 = constant i32 1207959560
@global_var_10005f84.138 = constant [3 x i8] c" c\00"
@global_var_10005fa0.139 = constant [3 x i8] c" c\00"
@global_var_1000ac4c.140 = constant i32 0
@global_var_10006350.141 = constant i32 1207959708
@global_var_100063f8.142 = constant i32 1207959612
@global_var_100068b8.143 = constant [3 x i8] c"8`\00"
@global_var_1000ac78.144 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_10006ab0.145 = constant [3 x i8] c"9 \00"
@global_var_10006abc.146 = constant i32 939524193
@global_var_10006b24.148 = constant i32 939524101
@global_var_10006c10.149 = constant i32 939524124
@global_var_10006c88.150 = constant i32 1207960116
@global_var_10006ca0.151 = constant i32 939524105
@global_var_10006e18.152 = constant [3 x i8] c"9 \00"
@global_var_1000ac8c.153 = constant [3 x i8] c"%x\00"
@global_var_10006ea4.154 = constant i32 939524124
@global_var_10006ec8.155 = constant i32 939524193
@global_var_1000ac90.156 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1000ac9c.157 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_100075b4.158 = constant i32 1207959560
@global_var_100076b8.159 = constant i32 1207959564
@global_var_1000adae.160 = constant i32 1
@global_var_1001c390.161 = local_unnamed_addr global i32* @global_var_1000adae.160
@global_var_10007acc.162 = constant i32 1207961092
@global_var_10007bf8.163 = constant i32 1207960768
@global_var_1000afcc.164 = constant i32 269488136
@global_var_1000afb0.165 = constant [6 x i8] c"(nil)\00"
@global_var_1000afb8.166 = constant [7 x i8] c"(null)\00"
@global_var_1000afc0.167 = constant i32 721431808
@global_var_10008054.168 = constant i32 939524096
@global_var_1000b04c.169 = constant i32 65793
@global_var_1000b034.170 = constant i32 524293
@global_var_1000b02c.171 = constant [8 x i8] c" +0-#'I\00"
@global_var_1000afd4.172 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1000b014.173 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1000b008.174 = constant i32 67343
@global_var_1000b007.175 = constant i32 50331911
@global_var_1000aff8.176 = constant i32 268435461
@global_var_1000afe8.177 = constant i32 520093701
@global_var_10008b34.178 = constant i32 939589631
@global_var_10008be8.179 = constant i32 939524118
@global_var_1000b068.180 = constant [8 x i8] c"Success\00"
@global_var_1000b058.181 = constant [15 x i8] c"Unknown error \00"
@global_var_100092d8.182 = constant i32 939524180
@global_var_100095d0.183 = constant i32 939524105
@global_var_10009674.184 = constant i32 939524105
@global_var_1000bbf0.185 = constant [4 x i8] c"inf\00"
@global_var_1000bbf3.187 = constant i32 4804166
@global_var_1000bc00.188 = constant i32 771763200
@global_var_1000a3e8.189 = constant i32 939524171
@global_var_1000a4b0.190 = constant i32 939589631
@global_var_1001c004.191 = global i32 0
@global_var_1001c40c.2 = local_unnamed_addr global i8 0
@global_var_1001c260.26 = global i16 288
@global_var_1001c2b0.27 = local_unnamed_addr global i16 272
@global_var_1001c1fc.101 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001c40c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001c01c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001c01c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001c01c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001c40c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001c40c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1001c010.8, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1001c010.8 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268444092, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268477780, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268436056, i32* @lr, align 4
  %v1_10000254 = call i32 @__GI_time(i32 0)
  store i32 %v1_10000254, i32* @global_var_1001c3a4.9, align 4
  store i32 268436072, i32* @lr, align 4
  %v0_10000264 = call i32 @__libc_getpid()
  store i32 268436080, i32* @lr, align 4
  %v0_1000026c = call i32 @getppid()
  %v2_10000274 = xor i32 %v0_10000264, %v0_1000026c
  store i32 %v2_10000274, i32* @global_var_1001c3a8.10, align 4
  store i32 268436100, i32* @lr, align 4
  %v1_10000280 = call i32 @clock(i32 268566528)
  store i32 %v1_10000280, i32* @global_var_1001c3ac.11, align 4
  %v3_1000029c = load i32, i32* @global_var_1001c3a8.10, align 4
  %v2_100002a0 = xor i32 %v3_1000029c, %v1_10000280
  store i32 %v2_100002a0, i32* @global_var_1001c3b0.12, align 4
  ret i32 %v1_10000280

; uselistorder directives
  uselistorder i32 %v1_10000280, { 1, 0, 2 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v3_100002d8 = load i32, i32* @global_var_1001c3a4.9, align 4
  %v1_100002e4 = mul i32 %v3_100002d8, 2048
  %v2_100002ec = xor i32 %v1_100002e4, %v3_100002d8
  %v1_100002f8 = udiv i32 %v2_100002ec, 256
  %v3_1000030c = load i32, i32* @global_var_1001c3a8.10, align 4
  store i32 %v3_1000030c, i32* @global_var_1001c3a4.9, align 4
  %v3_1000031c = load i32, i32* @global_var_1001c3ac.11, align 4
  store i32 %v3_1000031c, i32* @global_var_1001c3a8.10, align 4
  %v3_1000032c = load i32, i32* @global_var_1001c3b0.12, align 4
  store i32 %v3_1000032c, i32* @global_var_1001c3ac.11, align 4
  %v1_10000340 = udiv i32 %v3_1000032c, 524288
  %v2_1000034c = xor i32 %v1_100002f8, %v2_100002ec
  %v2_10000300 = xor i32 %v2_1000034c, %v3_1000032c
  %v2_10000364 = xor i32 %v2_10000300, %v1_10000340
  store i32 %v2_10000364, i32* @global_var_1001c3b0.12, align 4
  ret i32 %v2_10000364

; uselistorder directives
  uselistorder i32 %v3_1000032c, { 1, 0, 2 }
  uselistorder i32 %v2_100002ec, { 1, 0 }
  uselistorder i32 %v3_100002d8, { 1, 0 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_100004542 = icmp sgt i32 %arg2, 0
  br i1 %v2_100004542, label %dec_label_pc_100003b0, label %dec_label_pc_1000045c

dec_label_pc_100003b0:                            ; preds = %entry, %dec_label_pc_10000450.backedge
  %stack_var_-24.0.in5 = phi i32 [ %stack_var_-24.0.in.be, %dec_label_pc_10000450.backedge ], [ %v0_100003a4, %entry ]
  %stack_var_-20.04 = phi i32 [ %stack_var_-20.0.be, %dec_label_pc_10000450.backedge ], [ %arg2, %entry ]
  %tmp15 = icmp slt i32 %stack_var_-20.04, 4
  br i1 %tmp15, label %dec_label_pc_100003e8, label %dec_label_pc_100003bc

dec_label_pc_100003bc:                            ; preds = %dec_label_pc_100003b0
  %v0_100003c0 = call i32 @rand_next()
  store i32 %v0_100003c0, i32* %r3.global-to-local, align 4
  %v2_100003c8 = inttoptr i32 %stack_var_-24.0.in5 to i32*
  store i32 %v0_100003c0, i32* %v2_100003c8, align 4
  %v1_100003d0 = add i32 %stack_var_-24.0.in5, 4
  %v1_100003dc = add i32 %stack_var_-20.04, -4
  br label %dec_label_pc_10000450.backedge

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_100003b0
  %tmp16 = icmp slt i32 %stack_var_-20.04, 2
  br i1 %tmp16, label %dec_label_pc_10000424, label %dec_label_pc_100003f4

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8
  %v0_100003f8 = call i32 @rand_next()
  store i32 %v0_100003f8, i32* %r3.global-to-local, align 4
  %v1_10000404 = trunc i32 %v0_100003f8 to i16
  %v3_10000404 = inttoptr i32 %stack_var_-24.0.in5 to i16*
  store i16 %v1_10000404, i16* %v3_10000404, align 2
  %v1_1000040c = add i32 %stack_var_-24.0.in5, 2
  %v1_10000418 = add i32 %stack_var_-20.04, -2
  br label %dec_label_pc_10000450.backedge

dec_label_pc_10000424:                            ; preds = %dec_label_pc_100003e8
  %v0_10000424 = call i32 @rand_next()
  store i32 %v0_10000424, i32* %r3.global-to-local, align 4
  %v1_10000434 = trunc i32 %v0_10000424 to i8
  %v3_10000434 = inttoptr i32 %stack_var_-24.0.in5 to i8*
  store i8 %v1_10000434, i8* %v3_10000434, align 1
  %v1_1000043c = add i32 %stack_var_-24.0.in5, 1
  br label %dec_label_pc_10000450.backedge

dec_label_pc_10000450.backedge:                   ; preds = %dec_label_pc_10000424, %dec_label_pc_100003bc, %dec_label_pc_100003f4
  %stack_var_-20.0.be = phi i32 [ 0, %dec_label_pc_10000424 ], [ %v1_10000418, %dec_label_pc_100003f4 ], [ %v1_100003dc, %dec_label_pc_100003bc ]
  %stack_var_-24.0.in.be = phi i32 [ %v1_1000043c, %dec_label_pc_10000424 ], [ %v1_1000040c, %dec_label_pc_100003f4 ], [ %v1_100003d0, %dec_label_pc_100003bc ]
  %v2_10000454 = icmp sgt i32 %stack_var_-20.0.be, 0
  br i1 %v2_10000454, label %dec_label_pc_100003b0, label %dec_label_pc_10000450.dec_label_pc_1000045c_crit_edge

dec_label_pc_10000450.dec_label_pc_1000045c_crit_edge: ; preds = %dec_label_pc_10000450.backedge
  %v0_10000474.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000045c

dec_label_pc_1000045c:                            ; preds = %dec_label_pc_10000450.dec_label_pc_1000045c_crit_edge, %entry
  %v0_10000474 = phi i32 [ %v0_10000474.pre, %dec_label_pc_10000450.dec_label_pc_1000045c_crit_edge ], [ %v0_100003a4, %entry ]
  ret i32 %v0_10000474

; uselistorder directives
  uselistorder i32 %stack_var_-20.0.be, { 1, 0 }
  uselistorder i32 %stack_var_-20.04, { 2, 1, 3, 0 }
  uselistorder i32 %stack_var_-24.0.in5, { 4, 5, 3, 0, 2, 1 }
  uselistorder i32 %v0_100003a4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder label %dec_label_pc_10000450.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100003b0, { 1, 0 }
}

define i32 @rand_alphastr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i8, align 1
  %v0_1000048c = load i32, i32* %r3.global-to-local, align 4
  %v2_100005d413 = icmp sgt i32 %arg2, 0
  br i1 %v2_100005d413, label %dec_label_pc_100004e0.lr.ph, label %dec_label_pc_100005dc

dec_label_pc_100004e0.lr.ph:                      ; preds = %entry
  %v5_1000048c = inttoptr i32 %v0_1000048c to i8*
  %v2_10000530 = ptrtoint i8* %stack_var_-72 to i32
  br label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004e0.lr.ph, %dec_label_pc_100005d0.backedge
  %stack_var_-24.116 = phi i8* [ %v5_1000048c, %dec_label_pc_100004e0.lr.ph ], [ %stack_var_-24.1.be, %dec_label_pc_100005d0.backedge ]
  %stack_var_-20.015 = phi i32 [ %arg2, %dec_label_pc_100004e0.lr.ph ], [ %stack_var_-20.0.be, %dec_label_pc_100005d0.backedge ]
  %tmp37 = icmp ult i32 %stack_var_-20.015, 4
  br i1 %tmp37, label %dec_label_pc_1000057c, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  %v0_100004ec = call i32 @rand_next()
  store i32 %v0_100004ec, i32* %r3.global-to-local, align 4
  %v5_100004f4 = trunc i32 %v0_100004ec to i8
  br label %dec_label_pc_10000504

dec_label_pc_10000504:                            ; preds = %dec_label_pc_100004ec, %dec_label_pc_10000504
  %storemerge811 = phi i32 [ 0, %dec_label_pc_100004ec ], [ %v1_10000558, %dec_label_pc_10000504 ]
  %stack_var_-24.010 = phi i8* [ %stack_var_-24.116, %dec_label_pc_100004ec ], [ %v5_10000550, %dec_label_pc_10000504 ]
  %stack_var_-68.09 = phi i8 [ %v5_100004f4, %dec_label_pc_100004ec ], [ %v5_10000514, %dec_label_pc_10000504 ]
  %v4_10000504 = sext i8 %stack_var_-68.09 to i32
  %v1_10000510 = udiv i32 %v4_10000504, 256
  %v5_10000514 = trunc i32 %v1_10000510 to i8
  %div = udiv i8 %stack_var_-68.09, 8
  %v1_10000520 = zext i8 %div to i32
  store i8 %div, i8* %stack_var_-72, align 1
  %v2_10000534 = add i32 %v1_10000520, %v2_10000530
  %v1_10000538 = add i32 %v2_10000534, 12
  %v2_10000538 = inttoptr i32 %v1_10000538 to i8*
  %v3_10000538 = load i8, i8* %v2_10000538, align 1
  %v4_10000540 = ptrtoint i8* %stack_var_-24.010 to i32
  store i8 %v3_10000538, i8* %stack_var_-24.010, align 1
  %v1_1000054c = add i32 %v4_10000540, 1
  %v5_10000550 = inttoptr i32 %v1_1000054c to i8*
  %v1_10000558 = add nuw nsw i32 %storemerge811, 1
  %tmp38 = icmp ult i32 %v1_10000558, 4
  br i1 %tmp38, label %dec_label_pc_10000504, label %dec_label_pc_1000056c

dec_label_pc_1000056c:                            ; preds = %dec_label_pc_10000504
  %v1_10000570 = add i32 %stack_var_-20.015, -4
  br label %dec_label_pc_100005d0.backedge

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_100004e0
  %v0_1000057c = call i32 @rand_next()
  store i32 %v0_1000057c, i32* %r3.global-to-local, align 4
  %v1_10000590 = urem i32 %v0_1000057c, 30
  %v4_100005b0 = ptrtoint i8* %stack_var_-24.116 to i32
  %v1_100005b4 = trunc i32 %v1_10000590 to i8
  store i8 %v1_100005b4, i8* %stack_var_-24.116, align 1
  %v1_100005bc = add i32 %v4_100005b0, 1
  %v5_100005c0 = inttoptr i32 %v1_100005bc to i8*
  %v1_100005c8 = add i32 %stack_var_-20.015, -1
  br label %dec_label_pc_100005d0.backedge

dec_label_pc_100005d0.backedge:                   ; preds = %dec_label_pc_1000057c, %dec_label_pc_1000056c
  %stack_var_-20.0.be = phi i32 [ %v1_10000570, %dec_label_pc_1000056c ], [ %v1_100005c8, %dec_label_pc_1000057c ]
  %stack_var_-24.1.be = phi i8* [ %v5_10000550, %dec_label_pc_1000056c ], [ %v5_100005c0, %dec_label_pc_1000057c ]
  %v2_100005d4 = icmp sgt i32 %stack_var_-20.0.be, 0
  br i1 %v2_100005d4, label %dec_label_pc_100004e0, label %dec_label_pc_100005d0.dec_label_pc_100005dc_crit_edge

dec_label_pc_100005d0.dec_label_pc_100005dc_crit_edge: ; preds = %dec_label_pc_100005d0.backedge
  %v0_100005f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005dc

dec_label_pc_100005dc:                            ; preds = %dec_label_pc_100005d0.dec_label_pc_100005dc_crit_edge, %entry
  %v0_100005f0 = phi i32 [ %v0_100005f0.pre, %dec_label_pc_100005d0.dec_label_pc_100005dc_crit_edge ], [ %v0_1000048c, %entry ]
  ret i32 %v0_100005f0

; uselistorder directives
  uselistorder i32 %stack_var_-20.015, { 1, 2, 0 }
  uselistorder i8* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000504, { 1, 0 }
  uselistorder label %dec_label_pc_100004e0, { 1, 0 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000061c

dec_label_pc_10000610:                            ; preds = %dec_label_pc_1000061c
  %v4_1000061c = ptrtoint i8* %stack_var_-24.0 to i32
  %v1_10000638 = add i32 %v4_1000061c, 1
  %v5_1000063c = inttoptr i32 %v1_10000638 to i8*
  %v1_10000614 = add i32 %storemerge2, 1
  br label %dec_label_pc_1000061c

dec_label_pc_1000061c:                            ; preds = %entry, %dec_label_pc_10000610
  %stack_var_-24.0 = phi i8* [ %arg1, %entry ], [ %v5_1000063c, %dec_label_pc_10000610 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_10000614, %dec_label_pc_10000610 ]
  %v2_10000620 = load i8, i8* %stack_var_-24.0, align 1
  %tmp = icmp ne i8 %v2_10000620, 0
  %v3_10000640 = icmp eq i1 %tmp, false
  br i1 %v3_10000640, label %dec_label_pc_10000648, label %dec_label_pc_10000610

dec_label_pc_10000648:                            ; preds = %dec_label_pc_1000061c
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-24.0, { 1, 0 }
  uselistorder label %dec_label_pc_1000061c, { 1, 0 }
}

define i32 @util_memcpy(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v4_100006cc9 = icmp eq i32 %arg3, 0
  br i1 %v4_100006cc9, label %dec_label_pc_100006d4, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %entry, %dec_label_pc_1000068c
  %v1_100006bc12.in = phi i32 [ %v1_100006bc12, %dec_label_pc_1000068c ], [ %arg3, %entry ]
  %stack_var_-36.011 = phi i8* [ %v5_100006a8, %dec_label_pc_1000068c ], [ %arg1, %entry ]
  %storemerge510 = phi i32 [ %v1_100006b0, %dec_label_pc_1000068c ], [ %arg2, %entry ]
  %v1_100006bc12 = add i32 %v1_100006bc12.in, -1
  %storemerge = inttoptr i32 %storemerge510 to i8*
  %v2_10000690 = load i8, i8* %storemerge, align 1
  %v4_10000698 = ptrtoint i8* %stack_var_-36.011 to i32
  store i8 %v2_10000690, i8* %stack_var_-36.011, align 1
  %v1_100006a4 = add i32 %v4_10000698, 1
  %v5_100006a8 = inttoptr i32 %v1_100006a4 to i8*
  %v1_100006b0 = add i32 %storemerge510, 1
  %v4_100006cc = icmp eq i32 %v1_100006bc12, 0
  br i1 %v4_100006cc, label %dec_label_pc_100006b8.dec_label_pc_100006d4_crit_edge, label %dec_label_pc_1000068c

dec_label_pc_100006b8.dec_label_pc_100006d4_crit_edge: ; preds = %dec_label_pc_1000068c
  br label %dec_label_pc_100006d4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006b8.dec_label_pc_100006d4_crit_edge, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder label %dec_label_pc_1000068c, { 1, 0 }
}

define i32 @util_strcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10000704 = inttoptr i32 %arg2 to i8*
  %v2_10000704 = call i32 @util_strlen(i8* %v1_10000704)
  %v1_10000714 = add i32 %v2_10000704, 1
  %v4_10000724 = inttoptr i32 %arg1 to i8*
  %v5_10000724 = call i32 @util_memcpy(i8* %v4_10000724, i32 %arg2, i32 %v1_10000714, i32 %v2_10000704)
  ret i32 %v2_10000704

; uselistorder directives
  uselistorder i32 %v2_10000704, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_1000075c = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_10000768 = icmp eq i32 %v0_1000075c, 0
  br i1 %v3_10000768, label %dec_label_pc_1000079c, label %dec_label_pc_10000770

dec_label_pc_10000770:                            ; preds = %entry
  %v1_10000774 = inttoptr i32 %v0_1000075c to i32*
  %v2_10000774 = load i32, i32* %v1_10000774, align 4
  %v1_10000780 = trunc i32 %arg2 to i8
  %v3_10000780 = inttoptr i32 %v2_10000774 to i8*
  store i8 %v1_10000780, i8* %v3_10000780, align 1
  %v2_10000788 = load i32, i32* %v1_10000774, align 4
  %v1_1000078c = add i32 %v2_10000788, 1
  store i32 %v1_1000078c, i32* %v1_10000774, align 4
  %v0_100007c4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100007b0

dec_label_pc_1000079c:                            ; preds = %entry
  %v2_1000079c = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437424, i32* @lr, align 4
  %v2_100007ac = call i32 @__libc_write(i32 1, i32 %v2_1000079c)
  store i32 %v2_100007ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100007b0

dec_label_pc_100007b0:                            ; preds = %dec_label_pc_10000770, %dec_label_pc_1000079c
  %v0_100007c4 = phi i32 [ %v0_100007c4.pre, %dec_label_pc_10000770 ], [ %v2_100007ac, %dec_label_pc_1000079c ]
  ret i32 %v0_100007c4

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100007b0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp44 = icmp slt i32 %arg3, 1
  br i1 %tmp44, label %dec_label_pc_1000088c, label %dec_label_pc_10000808

dec_label_pc_10000808:                            ; preds = %entry
  %v2_1000083825 = load i8, i8* %arg2, align 1
  %v3_1000084028 = icmp eq i8 %v2_1000083825, 0
  br i1 %v3_1000084028, label %dec_label_pc_10000848, label %dec_label_pc_1000081c

dec_label_pc_1000081c:                            ; preds = %dec_label_pc_10000808, %dec_label_pc_1000081c
  %v4_1000083430 = phi i32 [ %v1_1000082c, %dec_label_pc_1000081c ], [ %tmp, %dec_label_pc_10000808 ]
  %stack_var_-20.029 = phi i32 [ %v1_10000820, %dec_label_pc_1000081c ], [ 0, %dec_label_pc_10000808 ]
  %v1_10000820 = add i32 %stack_var_-20.029, 1
  %v1_1000082c = add i32 %v4_1000083430, 1
  %v5_10000830 = inttoptr i32 %v1_1000082c to i8*
  %v2_10000838 = load i8, i8* %v5_10000830, align 1
  %v3_10000840 = icmp eq i8 %v2_10000838, 0
  br i1 %v3_10000840, label %dec_label_pc_10000848, label %dec_label_pc_1000081c

dec_label_pc_10000848:                            ; preds = %dec_label_pc_1000081c, %dec_label_pc_10000808
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000808 ], [ %v1_10000820, %dec_label_pc_1000081c ]
  %v2_10000850 = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_10000850, label %dec_label_pc_10000864, label %dec_label_pc_10000874

dec_label_pc_10000864:                            ; preds = %dec_label_pc_10000848
  %v2_1000086c = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000874

dec_label_pc_10000874:                            ; preds = %dec_label_pc_10000848, %dec_label_pc_10000864
  %storemerge2 = phi i32 [ %v2_1000086c, %dec_label_pc_10000864 ], [ 0, %dec_label_pc_10000848 ]
  %v1_10000878 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_1000087c = icmp eq i32 %v1_10000878, 0
  br i1 %v3_1000087c, label %dec_label_pc_1000088c, label %dec_label_pc_10000884

dec_label_pc_10000884:                            ; preds = %dec_label_pc_10000874
  br label %dec_label_pc_1000088c

dec_label_pc_1000088c:                            ; preds = %dec_label_pc_10000874, %entry, %dec_label_pc_10000884
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge2, %dec_label_pc_10000874 ], [ %storemerge2, %dec_label_pc_10000884 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000874 ], [ 48, %dec_label_pc_10000884 ]
  %v1_10000890 = urem i32 %arg4, 2
  %v3_10000894 = icmp eq i32 %v1_10000890, 0
  br i1 %v3_10000894, label %dec_label_pc_100008c4.preheader, label %dec_label_pc_10000904.preheader

dec_label_pc_100008c4.preheader:                  ; preds = %dec_label_pc_1000088c
  %v2_100008c818 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_100008c818, label %dec_label_pc_100008a0.lr.ph, label %dec_label_pc_10000904.preheader

dec_label_pc_100008a0.lr.ph:                      ; preds = %dec_label_pc_100008c4.preheader
  %v2_100008a8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100008a0

dec_label_pc_100008a0:                            ; preds = %dec_label_pc_100008a0.lr.ph, %dec_label_pc_100008a0
  %stack_var_-32.121 = phi i32 [ %stack_var_-32.0, %dec_label_pc_100008a0.lr.ph ], [ %v1_100008bc, %dec_label_pc_100008a0 ]
  %v3_100008a8 = call i32 @printchar(i32* %v2_100008a8, i32 %stack_var_-16.0)
  %v1_100008bc = add nsw i32 %stack_var_-32.121, -1
  %v2_100008c8 = icmp sgt i32 %stack_var_-32.121, 1
  br i1 %v2_100008c8, label %dec_label_pc_100008a0, label %dec_label_pc_10000904.preheader

dec_label_pc_10000904.preheader:                  ; preds = %dec_label_pc_100008a0, %dec_label_pc_100008c4.preheader, %dec_label_pc_1000088c
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_1000088c ], [ 0, %dec_label_pc_100008c4.preheader ], [ %stack_var_-32.0, %dec_label_pc_100008a0 ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_1000088c ], [ %stack_var_-32.0, %dec_label_pc_100008c4.preheader ], [ 0, %dec_label_pc_100008a0 ]
  %v2_100009089 = load i8, i8* %arg2, align 1
  %v3_1000091012 = icmp eq i8 %v2_100009089, 0
  br i1 %v3_1000091012, label %dec_label_pc_10000940.preheader, label %dec_label_pc_100008d4.lr.ph

dec_label_pc_100008d4.lr.ph:                      ; preds = %dec_label_pc_10000904.preheader
  %v2_100008e8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100008d4

dec_label_pc_100008d4:                            ; preds = %dec_label_pc_100008d4.lr.ph, %dec_label_pc_100008d4
  %v4_1000090415 = phi i32 [ %tmp, %dec_label_pc_100008d4.lr.ph ], [ %v1_100008fc, %dec_label_pc_100008d4 ]
  %stack_var_-36.014 = phi i8* [ %arg2, %dec_label_pc_100008d4.lr.ph ], [ %v5_10000900, %dec_label_pc_100008d4 ]
  %stack_var_-12.113 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_100008d4.lr.ph ], [ %v1_100008f0, %dec_label_pc_100008d4 ]
  %v2_100008d8 = load i8, i8* %stack_var_-36.014, align 1
  %v3_100008d8 = zext i8 %v2_100008d8 to i32
  %v3_100008e8 = call i32 @printchar(i32* %v2_100008e8, i32 %v3_100008d8)
  %v1_100008f0 = add i32 %stack_var_-12.113, 1
  %v1_100008fc = add i32 %v4_1000090415, 1
  %v5_10000900 = inttoptr i32 %v1_100008fc to i8*
  %v2_10000908 = load i8, i8* %v5_10000900, align 1
  %v3_10000910 = icmp eq i8 %v2_10000908, 0
  br i1 %v3_10000910, label %dec_label_pc_10000940.preheader, label %dec_label_pc_100008d4

dec_label_pc_10000940.preheader:                  ; preds = %dec_label_pc_100008d4, %dec_label_pc_10000904.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000904.preheader ], [ %v1_100008f0, %dec_label_pc_100008d4 ]
  %v2_100009444 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100009444, label %dec_label_pc_1000091c.lr.ph, label %dec_label_pc_1000094c

dec_label_pc_1000091c.lr.ph:                      ; preds = %dec_label_pc_10000940.preheader
  %v2_10000924 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_1000091c

dec_label_pc_1000091c:                            ; preds = %dec_label_pc_1000091c.lr.ph, %dec_label_pc_1000091c
  %stack_var_-32.37 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_1000091c.lr.ph ], [ %v1_10000938, %dec_label_pc_1000091c ]
  %v3_10000924 = call i32 @printchar(i32* %v2_10000924, i32 %stack_var_-16.0)
  %v1_10000938 = add nsw i32 %stack_var_-32.37, -1
  %v2_10000944 = icmp sgt i32 %stack_var_-32.37, 1
  br i1 %v2_10000944, label %dec_label_pc_1000091c, label %dec_label_pc_10000940.dec_label_pc_1000094c_crit_edge

dec_label_pc_10000940.dec_label_pc_1000094c_crit_edge: ; preds = %dec_label_pc_1000091c
  %tmp45 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_1000094c

dec_label_pc_1000094c:                            ; preds = %dec_label_pc_10000940.dec_label_pc_1000094c_crit_edge, %dec_label_pc_10000940.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp45, %dec_label_pc_10000940.dec_label_pc_1000094c_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_10000940.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_100008fc, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000082c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000091c, { 1, 0 }
  uselistorder label %dec_label_pc_100008d4, { 1, 0 }
  uselistorder label %dec_label_pc_100008a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000088c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000874, { 1, 0 }
  uselistorder label %dec_label_pc_1000081c, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_100009b8 = icmp eq i32 %arg2, 0
  br i1 %v3_100009b8, label %dec_label_pc_100009c0, label %dec_label_pc_100009f4

dec_label_pc_100009c0:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_100009e4 = bitcast i32* %stack_var_-88 to i8*
  %v5_100009e4 = call i32 @prints(i32 %arg1, i8* %v4_100009e4, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_10000b4c

dec_label_pc_100009f4:                            ; preds = %entry
  %v3_100009f8 = icmp eq i32 %arg4, 0
  br i1 %v3_100009f8, label %dec_label_pc_10000a2c, label %dec_label_pc_10000a00

dec_label_pc_10000a00:                            ; preds = %dec_label_pc_100009f4
  %v3_10000a04 = icmp eq i32 %arg3, 10
  br i1 %v3_10000a04, label %dec_label_pc_10000a0c, label %dec_label_pc_10000a2c

dec_label_pc_10000a0c:                            ; preds = %dec_label_pc_10000a00
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_10000a2c, label %dec_label_pc_10000a18

dec_label_pc_10000a18:                            ; preds = %dec_label_pc_10000a0c
  %v1_10000a24 = sub i32 0, %arg2
  br label %dec_label_pc_10000a2c

dec_label_pc_10000a2c:                            ; preds = %dec_label_pc_10000a00, %dec_label_pc_10000a0c, %dec_label_pc_100009f4, %dec_label_pc_10000a18
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_100009f4 ], [ %arg2, %dec_label_pc_10000a0c ], [ %v1_10000a24, %dec_label_pc_10000a18 ], [ %arg2, %dec_label_pc_10000a00 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_100009f4 ], [ 0, %dec_label_pc_10000a0c ], [ 1, %dec_label_pc_10000a18 ], [ 0, %dec_label_pc_10000a00 ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_10000ab85 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_10000ab85, label %dec_label_pc_10000ac0, label %dec_label_pc_10000a44.lr.ph

dec_label_pc_10000a44.lr.ph:                      ; preds = %dec_label_pc_10000a2c
  %v2_10000a74 = add i32 %arg7, -58
  br label %dec_label_pc_10000a44

dec_label_pc_10000a44:                            ; preds = %dec_label_pc_10000a44.lr.ph, %dec_label_pc_10000a80
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_10000a44.lr.ph ], [ %v2_10000aac, %dec_label_pc_10000a80 ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_10000a44.lr.ph ], [ %v5_10000a88, %dec_label_pc_10000a80 ]
  %v2_10000a4c = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_10000a4c, 10
  br i1 %tmp29, label %dec_label_pc_10000a80, label %dec_label_pc_10000a6c

dec_label_pc_10000a6c:                            ; preds = %dec_label_pc_10000a44
  %v1_10000a78 = add i32 %v2_10000a74, %v2_10000a4c
  br label %dec_label_pc_10000a80

dec_label_pc_10000a80:                            ; preds = %dec_label_pc_10000a44, %dec_label_pc_10000a6c
  %stack_var_-32.0 = phi i32 [ %v2_10000a4c, %dec_label_pc_10000a44 ], [ %v1_10000a78, %dec_label_pc_10000a6c ]
  %v4_10000a80 = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000a84 = add i32 %v4_10000a80, -1
  %v5_10000a88 = inttoptr i32 %v1_10000a84 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_10000aa0 = trunc i32 %fold to i8
  store i8 %v1_10000aa0, i8* %v5_10000a88, align 1
  %v2_10000aac = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000ab8 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000ab8, label %dec_label_pc_10000ac0, label %dec_label_pc_10000a44

dec_label_pc_10000ac0:                            ; preds = %dec_label_pc_10000a80, %dec_label_pc_10000a2c
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_10000a2c ], [ %v5_10000a88, %dec_label_pc_10000a80 ]
  %v3_10000ac4 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000ac4, label %dec_label_pc_10000b28, label %dec_label_pc_10000acc

dec_label_pc_10000acc:                            ; preds = %dec_label_pc_10000ac0
  %v3_10000ad0 = icmp eq i32 %arg5, 0
  br i1 %v3_10000ad0, label %dec_label_pc_10000b10, label %dec_label_pc_10000ad8

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000acc
  %v1_10000adc = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_10000ae0 = icmp eq i32 %v1_10000adc, 0
  br i1 %v3_10000ae0, label %dec_label_pc_10000b10, label %dec_label_pc_10000ae8

dec_label_pc_10000ae8:                            ; preds = %dec_label_pc_10000ad8
  %v2_10000af0 = inttoptr i32 %arg1 to i32*
  %v3_10000af0 = call i32 @printchar(i32* %v2_10000af0, i32 45)
  %v1_10000b04 = add i32 %arg5, -1
  br label %dec_label_pc_10000b28

dec_label_pc_10000b10:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000acc
  %v4_10000b10 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_10000b14 = add i32 %v4_10000b10, -1
  %v5_10000b18 = inttoptr i32 %v1_10000b14 to i8*
  store i8 45, i8* %v5_10000b18, align 1
  br label %dec_label_pc_10000b28

dec_label_pc_10000b28:                            ; preds = %dec_label_pc_10000ac0, %dec_label_pc_10000ae8, %dec_label_pc_10000b10
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_10000ac0 ], [ %v5_10000b18, %dec_label_pc_10000b10 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000ae8 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_10000ac0 ], [ %arg5, %dec_label_pc_10000b10 ], [ %v1_10000b04, %dec_label_pc_10000ae8 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_10000ac0 ], [ 0, %dec_label_pc_10000b10 ], [ 1, %dec_label_pc_10000ae8 ]
  %v5_10000b38 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_10000b44 = add i32 %v5_10000b38, %stack_var_-40.0
  br label %dec_label_pc_10000b4c

dec_label_pc_10000b4c:                            ; preds = %dec_label_pc_100009c0, %dec_label_pc_10000b28
  %storemerge = phi i32 [ %v2_10000b44, %dec_label_pc_10000b28 ], [ %v5_100009e4, %dec_label_pc_100009c0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000a88, { 0, 2, 1 }
  uselistorder i32 %v2_10000a4c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10000b28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000a80, { 1, 0 }
  uselistorder label %dec_label_pc_10000a44, { 1, 0 }
  uselistorder label %dec_label_pc_10000a2c, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_1000113c28 = load i8, i8* %stack_var_-68.427, align 1
  %v3_1000114431 = icmp eq i8 %v2_1000113c28, 0
  br i1 %v3_1000114431, label %dec_label_pc_1000114c, label %dec_label_pc_10000b98.lr.ph

dec_label_pc_10000b98.lr.ph:                      ; preds = %entry
  %v1_10000d0c = add i32 %arg3, 4
  %v2_10000d0c = inttoptr i32 %v1_10000d0c to i32*
  %v1_10000cd4 = add i32 %arg3, 8
  %v2_10000cd4 = inttoptr i32 %v1_10000cd4 to i32*
  %v4_100010f0 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000b98

dec_label_pc_10000b98:                            ; preds = %dec_label_pc_10000b98.lr.ph, %dec_label_pc_1000112c
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000b98.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_1000112c ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000b98.lr.ph ], [ %v1_10001130, %dec_label_pc_1000112c ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000b98.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_1000112c ]
  %v2_10000b9c = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000ba4 = icmp eq i8 %v2_10000b9c, 37
  br i1 %v3_10000ba4, label %dec_label_pc_10000bac, label %dec_label_pc_10001108

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b98
  %v1_10000bb0 = add i32 %stack_var_-68.4.in33, 1
  %v5_10000bb4 = inttoptr i32 %v1_10000bb0 to i8*
  %v2_10000bcc = load i8, i8* %v5_10000bb4, align 1
  %v3_10000bd4 = icmp eq i8 %v2_10000bcc, 0
  br i1 %v3_10000bd4, label %dec_label_pc_1000114c, label %dec_label_pc_10000bdc

dec_label_pc_10000bdc:                            ; preds = %dec_label_pc_10000bac
  %v2_10000be0 = load i8, i8* %v5_10000bb4, align 1
  %v3_10000be8 = icmp eq i8 %v2_10000be0, 37
  br i1 %v3_10000be8, label %dec_label_pc_10001108, label %dec_label_pc_10000bf0

dec_label_pc_10000bf0:                            ; preds = %dec_label_pc_10000bdc
  %v2_10000bf4 = load i8, i8* %v5_10000bb4, align 1
  %v3_10000bfc = icmp eq i8 %v2_10000bf4, 45
  br i1 %v3_10000bfc, label %dec_label_pc_10000c04, label %dec_label_pc_10000c34.preheader

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000bf0
  %v1_10000c08 = add i32 %stack_var_-68.4.in33, 2
  %v5_10000c0c = inttoptr i32 %v1_10000c08 to i8*
  br label %dec_label_pc_10000c34.preheader

dec_label_pc_10000c34.preheader:                  ; preds = %dec_label_pc_10000c04, %dec_label_pc_10000bf0
  %stack_var_-68.0.ph = phi i8* [ %v5_10000bb4, %dec_label_pc_10000bf0 ], [ %v5_10000c0c, %dec_label_pc_10000c04 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000bf0 ], [ 1, %dec_label_pc_10000c04 ]
  %v4_10000c343 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000c384 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000c408 = icmp eq i8 %v2_10000c384, 48
  br i1 %v3_10000c408, label %dec_label_pc_10000c1c, label %dec_label_pc_10000c80.preheader

dec_label_pc_10000c1c:                            ; preds = %dec_label_pc_10000c34.preheader, %dec_label_pc_10000c1c
  %v4_10000c3410 = phi i32 [ %v1_10000c20, %dec_label_pc_10000c1c ], [ %v4_10000c343, %dec_label_pc_10000c34.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000c2c, %dec_label_pc_10000c1c ], [ %stack_var_-52.0.ph, %dec_label_pc_10000c34.preheader ]
  %v1_10000c20 = add i32 %v4_10000c3410, 1
  %v5_10000c24 = inttoptr i32 %v1_10000c20 to i8*
  %v1_10000c2c = or i32 %stack_var_-52.09, 2
  %v2_10000c38 = load i8, i8* %v5_10000c24, align 1
  %v3_10000c40 = icmp eq i8 %v2_10000c38, 48
  br i1 %v3_10000c40, label %dec_label_pc_10000c1c, label %dec_label_pc_10000c80.preheader

dec_label_pc_10000c80.preheader:                  ; preds = %dec_label_pc_10000c1c, %dec_label_pc_10000c34.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000c34.preheader ], [ %v1_10000c2c, %dec_label_pc_10000c1c ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000c34.preheader ], [ %v5_10000c24, %dec_label_pc_10000c1c ]
  %v4_10000c8012 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000c8413 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000c8413, 48
  br i1 %tmp62, label %dec_label_pc_10000ca8, label %dec_label_pc_10000c94

dec_label_pc_10000c4c:                            ; preds = %dec_label_pc_10000c94
  %v1_10000c50 = mul i32 %stack_var_-48.018, 10
  %v2_10000c5c = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000c5c = zext i8 %v2_10000c5c to i32
  %v2_10000c68 = add i32 %v1_10000c50, -48
  %v1_10000c6c = add i32 %v2_10000c68, %v3_10000c5c
  %v1_10000c78 = add i32 %v4_10000c8020, 1
  %v5_10000c7c = inttoptr i32 %v1_10000c78 to i8*
  %v2_10000c84 = load i8, i8* %v5_10000c7c, align 1
  %tmp63 = icmp ult i8 %v2_10000c84, 48
  br i1 %tmp63, label %dec_label_pc_10000ca8, label %dec_label_pc_10000c94

dec_label_pc_10000c94:                            ; preds = %dec_label_pc_10000c80.preheader, %dec_label_pc_10000c4c
  %v4_10000c8020 = phi i32 [ %v1_10000c78, %dec_label_pc_10000c4c ], [ %v4_10000c8012, %dec_label_pc_10000c80.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000c7c, %dec_label_pc_10000c4c ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000c80.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000c6c, %dec_label_pc_10000c4c ], [ 0, %dec_label_pc_10000c80.preheader ]
  %v2_10000c98 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000c98, 58
  br i1 %tmp64, label %dec_label_pc_10000c4c, label %dec_label_pc_10000ca8

dec_label_pc_10000ca8:                            ; preds = %dec_label_pc_10000c4c, %dec_label_pc_10000c94, %dec_label_pc_10000c80.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000c80.preheader ], [ %v1_10000c6c, %dec_label_pc_10000c4c ], [ %stack_var_-48.018, %dec_label_pc_10000c94 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000c80.preheader ], [ %v5_10000c7c, %dec_label_pc_10000c4c ], [ %stack_var_-68.119, %dec_label_pc_10000c94 ]
  %v2_10000cac = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000cb4 = icmp eq i8 %v2_10000cac, 115
  br i1 %v3_10000cb4, label %dec_label_pc_10000cbc, label %dec_label_pc_10000d7c

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000ca8
  %v2_10000cc0 = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000cc0, 7
  br i1 %tmp65, label %dec_label_pc_10000d08, label %dec_label_pc_10000cd0

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cbc
  %v3_10000cd4 = load i32, i32* %v2_10000cd4, align 4
  %v2_10000cdc = load i8, i8* %tmp, align 1
  %v3_10000cdc = zext i8 %v2_10000cdc to i32
  %v1_10000ce8 = mul nuw nsw i32 %v3_10000cdc, 4
  %v2_10000cec = add i32 %v1_10000ce8, %v3_10000cd4
  %v1_10000cf4 = add i8 %v2_10000cdc, 1
  store i8 %v1_10000cf4, i8* %tmp, align 1
  br label %dec_label_pc_10000d20

dec_label_pc_10000d08:                            ; preds = %dec_label_pc_10000cbc
  %v3_10000d0c = load i32, i32* %v2_10000d0c, align 4
  %v1_10000d14 = add i32 %v3_10000d0c, 4
  store i32 %v1_10000d14, i32* %v2_10000d0c, align 4
  br label %dec_label_pc_10000d20

dec_label_pc_10000d20:                            ; preds = %dec_label_pc_10000cd0, %dec_label_pc_10000d08
  %stack_var_-20.0 = phi i32 [ %v3_10000d0c, %dec_label_pc_10000d08 ], [ %v2_10000cec, %dec_label_pc_10000cd0 ]
  %v1_10000d24 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000d24 = load i32, i32* %v1_10000d24, align 4
  %v3_10000d30 = icmp eq i32 %v2_10000d24, 0
  br i1 %v3_10000d30, label %dec_label_pc_10000d44, label %dec_label_pc_10000d38

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000d20
  %v5_10000d3c = inttoptr i32 %v2_10000d24 to i8*
  br label %dec_label_pc_10000d50

dec_label_pc_10000d44:                            ; preds = %dec_label_pc_10000d20
  br label %dec_label_pc_10000d50

dec_label_pc_10000d50:                            ; preds = %dec_label_pc_10000d38, %dec_label_pc_10000d44
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000a5a8.21, i32 0, i32 0), %dec_label_pc_10000d44 ], [ %v5_10000d3c, %dec_label_pc_10000d38 ]
  %v6_10000d64 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000d70 = add i32 %v6_10000d64, %stack_var_-56.132
  br label %dec_label_pc_1000112c

dec_label_pc_10000d7c:                            ; preds = %dec_label_pc_10000ca8
  %v2_10000d80 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d88 = icmp eq i8 %v2_10000d80, 100
  br i1 %v3_10000d88, label %dec_label_pc_10000d90, label %dec_label_pc_10000e30

dec_label_pc_10000d90:                            ; preds = %dec_label_pc_10000d7c
  %v2_10000d94 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000d94, 7
  br i1 %tmp66, label %dec_label_pc_10000ddc, label %dec_label_pc_10000da4

dec_label_pc_10000da4:                            ; preds = %dec_label_pc_10000d90
  %v3_10000da8 = load i32, i32* %v2_10000cd4, align 4
  %v2_10000db0 = load i8, i8* %tmp, align 1
  %v3_10000db0 = zext i8 %v2_10000db0 to i32
  %v1_10000dbc = mul nuw nsw i32 %v3_10000db0, 4
  %v2_10000dc0 = add i32 %v1_10000dbc, %v3_10000da8
  %v1_10000dc8 = add i8 %v2_10000db0, 1
  store i8 %v1_10000dc8, i8* %tmp, align 1
  br label %dec_label_pc_10000df4

dec_label_pc_10000ddc:                            ; preds = %dec_label_pc_10000d90
  %v3_10000de0 = load i32, i32* %v2_10000d0c, align 4
  %v1_10000de8 = add i32 %v3_10000de0, 4
  store i32 %v1_10000de8, i32* %v2_10000d0c, align 4
  br label %dec_label_pc_10000df4

dec_label_pc_10000df4:                            ; preds = %dec_label_pc_10000da4, %dec_label_pc_10000ddc
  %stack_var_-28.0 = phi i32 [ %v3_10000de0, %dec_label_pc_10000ddc ], [ %v2_10000dc0, %dec_label_pc_10000da4 ]
  %v1_10000df8 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000df8 = load i32, i32* %v1_10000df8, align 4
  %v7_10000e18 = call i32 @printi(i32 %tmp41, i32 %v2_10000df8, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000e24 = add i32 %v7_10000e18, %stack_var_-56.132
  br label %dec_label_pc_1000112c

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000d7c
  %v2_10000e34 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e3c = icmp eq i8 %v2_10000e34, 120
  br i1 %v3_10000e3c, label %dec_label_pc_10000e44, label %dec_label_pc_10000ee4

dec_label_pc_10000e44:                            ; preds = %dec_label_pc_10000e30
  %v2_10000e48 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000e48, 7
  br i1 %tmp67, label %dec_label_pc_10000e90, label %dec_label_pc_10000e58

dec_label_pc_10000e58:                            ; preds = %dec_label_pc_10000e44
  %v3_10000e5c = load i32, i32* %v2_10000cd4, align 4
  %v2_10000e64 = load i8, i8* %tmp, align 1
  %v3_10000e64 = zext i8 %v2_10000e64 to i32
  %v1_10000e70 = mul nuw nsw i32 %v3_10000e64, 4
  %v2_10000e74 = add i32 %v1_10000e70, %v3_10000e5c
  %v1_10000e7c = add i8 %v2_10000e64, 1
  store i8 %v1_10000e7c, i8* %tmp, align 1
  br label %dec_label_pc_10000ea8

dec_label_pc_10000e90:                            ; preds = %dec_label_pc_10000e44
  %v3_10000e94 = load i32, i32* %v2_10000d0c, align 4
  %v1_10000e9c = add i32 %v3_10000e94, 4
  store i32 %v1_10000e9c, i32* %v2_10000d0c, align 4
  br label %dec_label_pc_10000ea8

dec_label_pc_10000ea8:                            ; preds = %dec_label_pc_10000e58, %dec_label_pc_10000e90
  %stack_var_-32.0 = phi i32 [ %v3_10000e94, %dec_label_pc_10000e90 ], [ %v2_10000e74, %dec_label_pc_10000e58 ]
  %v1_10000eac = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000eac = load i32, i32* %v1_10000eac, align 4
  %v7_10000ecc = call i32 @printi(i32 %tmp41, i32 %v2_10000eac, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ed8 = add i32 %v7_10000ecc, %stack_var_-56.132
  br label %dec_label_pc_1000112c

dec_label_pc_10000ee4:                            ; preds = %dec_label_pc_10000e30
  %v2_10000ee8 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ef0 = icmp eq i8 %v2_10000ee8, 88
  br i1 %v3_10000ef0, label %dec_label_pc_10000ef8, label %dec_label_pc_10000f98

dec_label_pc_10000ef8:                            ; preds = %dec_label_pc_10000ee4
  %v2_10000efc = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000efc, 7
  br i1 %tmp68, label %dec_label_pc_10000f44, label %dec_label_pc_10000f0c

dec_label_pc_10000f0c:                            ; preds = %dec_label_pc_10000ef8
  %v3_10000f10 = load i32, i32* %v2_10000cd4, align 4
  %v2_10000f18 = load i8, i8* %tmp, align 1
  %v3_10000f18 = zext i8 %v2_10000f18 to i32
  %v1_10000f24 = mul nuw nsw i32 %v3_10000f18, 4
  %v2_10000f28 = add i32 %v1_10000f24, %v3_10000f10
  %v1_10000f30 = add i8 %v2_10000f18, 1
  store i8 %v1_10000f30, i8* %tmp, align 1
  br label %dec_label_pc_10000f5c

dec_label_pc_10000f44:                            ; preds = %dec_label_pc_10000ef8
  %v3_10000f48 = load i32, i32* %v2_10000d0c, align 4
  %v1_10000f50 = add i32 %v3_10000f48, 4
  store i32 %v1_10000f50, i32* %v2_10000d0c, align 4
  br label %dec_label_pc_10000f5c

dec_label_pc_10000f5c:                            ; preds = %dec_label_pc_10000f0c, %dec_label_pc_10000f44
  %stack_var_-36.0 = phi i32 [ %v3_10000f48, %dec_label_pc_10000f44 ], [ %v2_10000f28, %dec_label_pc_10000f0c ]
  %v1_10000f60 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000f60 = load i32, i32* %v1_10000f60, align 4
  %v7_10000f80 = call i32 @printi(i32 %tmp41, i32 %v2_10000f60, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000f8c = add i32 %v7_10000f80, %stack_var_-56.132
  br label %dec_label_pc_1000112c

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000ee4
  %v2_10000f9c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000fa4 = icmp eq i8 %v2_10000f9c, 117
  br i1 %v3_10000fa4, label %dec_label_pc_10000fac, label %dec_label_pc_1000104c

dec_label_pc_10000fac:                            ; preds = %dec_label_pc_10000f98
  %v2_10000fb0 = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000fb0, 7
  br i1 %tmp69, label %dec_label_pc_10000ff8, label %dec_label_pc_10000fc0

dec_label_pc_10000fc0:                            ; preds = %dec_label_pc_10000fac
  %v3_10000fc4 = load i32, i32* %v2_10000cd4, align 4
  %v2_10000fcc = load i8, i8* %tmp, align 1
  %v3_10000fcc = zext i8 %v2_10000fcc to i32
  %v1_10000fd8 = mul nuw nsw i32 %v3_10000fcc, 4
  %v2_10000fdc = add i32 %v1_10000fd8, %v3_10000fc4
  %v1_10000fe4 = add i8 %v2_10000fcc, 1
  store i8 %v1_10000fe4, i8* %tmp, align 1
  br label %dec_label_pc_10001010

dec_label_pc_10000ff8:                            ; preds = %dec_label_pc_10000fac
  %v3_10000ffc = load i32, i32* %v2_10000d0c, align 4
  %v1_10001004 = add i32 %v3_10000ffc, 4
  store i32 %v1_10001004, i32* %v2_10000d0c, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001010:                            ; preds = %dec_label_pc_10000fc0, %dec_label_pc_10000ff8
  %stack_var_-40.0 = phi i32 [ %v3_10000ffc, %dec_label_pc_10000ff8 ], [ %v2_10000fdc, %dec_label_pc_10000fc0 ]
  %v1_10001014 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10001014 = load i32, i32* %v1_10001014, align 4
  %v7_10001034 = call i32 @printi(i32 %tmp41, i32 %v2_10001014, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10001040 = add i32 %v7_10001034, %stack_var_-56.132
  br label %dec_label_pc_1000112c

dec_label_pc_1000104c:                            ; preds = %dec_label_pc_10000f98
  %v2_10001050 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10001058 = icmp eq i8 %v2_10001050, 99
  br i1 %v3_10001058, label %dec_label_pc_10001060, label %dec_label_pc_1000112c

dec_label_pc_10001060:                            ; preds = %dec_label_pc_1000104c
  %v2_10001064 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10001064, 7
  br i1 %tmp70, label %dec_label_pc_100010ac, label %dec_label_pc_10001074

dec_label_pc_10001074:                            ; preds = %dec_label_pc_10001060
  %v3_10001078 = load i32, i32* %v2_10000cd4, align 4
  %v2_10001080 = load i8, i8* %tmp, align 1
  %v3_10001080 = zext i8 %v2_10001080 to i32
  %v1_1000108c = mul nuw nsw i32 %v3_10001080, 4
  %v2_10001090 = add i32 %v1_1000108c, %v3_10001078
  %v1_10001098 = add i8 %v2_10001080, 1
  store i8 %v1_10001098, i8* %tmp, align 1
  br label %dec_label_pc_100010c4

dec_label_pc_100010ac:                            ; preds = %dec_label_pc_10001060
  %v3_100010b0 = load i32, i32* %v2_10000d0c, align 4
  %v1_100010b8 = add i32 %v3_100010b0, 4
  store i32 %v1_100010b8, i32* %v2_10000d0c, align 4
  br label %dec_label_pc_100010c4

dec_label_pc_100010c4:                            ; preds = %dec_label_pc_10001074, %dec_label_pc_100010ac
  %stack_var_-44.0 = phi i32 [ %v3_100010b0, %dec_label_pc_100010ac ], [ %v2_10001090, %dec_label_pc_10001074 ]
  %v1_100010c8 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_100010c8 = load i32, i32* %v1_100010c8, align 4
  %v1_100010cc = urem i32 %v2_100010c8, 256
  store i32 %v1_100010cc, i32* %stack_var_-88, align 4
  %v5_100010f0 = call i32 @prints(i32 %tmp41, i8* %v4_100010f0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_100010fc = add i32 %v5_100010f0, %stack_var_-56.132
  br label %dec_label_pc_1000112c

dec_label_pc_10001108:                            ; preds = %dec_label_pc_10000b98, %dec_label_pc_10000bdc
  %stack_var_-68.2 = phi i8* [ %v5_10000bb4, %dec_label_pc_10000bdc ], [ %stack_var_-68.434, %dec_label_pc_10000b98 ]
  %v2_1000110c = load i8, i8* %stack_var_-68.2, align 1
  %v3_1000110c = zext i8 %v2_1000110c to i32
  %v3_1000111c = call i32 @printchar(i32* %arg1, i32 %v3_1000110c)
  %v1_10001124 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_1000112c

dec_label_pc_1000112c:                            ; preds = %dec_label_pc_1000104c, %dec_label_pc_100010c4, %dec_label_pc_10001010, %dec_label_pc_10000f5c, %dec_label_pc_10000ea8, %dec_label_pc_10000df4, %dec_label_pc_10000d50, %dec_label_pc_10001108
  %stack_var_-56.0 = phi i32 [ %v1_10001124, %dec_label_pc_10001108 ], [ %v2_10000d70, %dec_label_pc_10000d50 ], [ %v2_10000e24, %dec_label_pc_10000df4 ], [ %v2_10000ed8, %dec_label_pc_10000ea8 ], [ %v2_10000f8c, %dec_label_pc_10000f5c ], [ %v2_10001040, %dec_label_pc_10001010 ], [ %v2_100010fc, %dec_label_pc_100010c4 ], [ %stack_var_-56.132, %dec_label_pc_1000104c ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10001108 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d50 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000df4 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ea8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f5c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10001010 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_100010c4 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000104c ]
  %v4_1000112c = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10001130 = add i32 %v4_1000112c, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10001130 to i8*
  %v2_1000113c = load i8, i8* %stack_var_-68.4, align 1
  %v3_10001144 = icmp eq i8 %v2_1000113c, 0
  br i1 %v3_10001144, label %dec_label_pc_1000114c, label %dec_label_pc_10000b98

dec_label_pc_1000114c:                            ; preds = %dec_label_pc_10000bac, %dec_label_pc_1000112c, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000bac ], [ %stack_var_-56.0, %dec_label_pc_1000112c ]
  %v3_10001150 = icmp eq i32* %arg1, null
  br i1 %v3_10001150, label %dec_label_pc_10001168, label %dec_label_pc_10001158

dec_label_pc_10001158:                            ; preds = %dec_label_pc_1000114c
  %v2_1000115c = load i32, i32* %arg1, align 4
  %v3_10001164 = inttoptr i32 %v2_1000115c to i8*
  store i8 0, i8* %v3_10001164, align 1
  br label %dec_label_pc_10001168

dec_label_pc_10001168:                            ; preds = %dec_label_pc_1000114c, %dec_label_pc_10001158
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000c20, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000bb4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000d0c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder i8 1, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_10001168, { 1, 0 }
  uselistorder label %dec_label_pc_1000114c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000112c, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10001108, { 1, 0 }
  uselistorder label %dec_label_pc_100010c4, { 1, 0 }
  uselistorder label %dec_label_pc_10001010, { 1, 0 }
  uselistorder label %dec_label_pc_10000f5c, { 1, 0 }
  uselistorder label %dec_label_pc_10000ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10000df4, { 1, 0 }
  uselistorder label %dec_label_pc_10000d50, { 1, 0 }
  uselistorder label %dec_label_pc_10000d20, { 1, 0 }
  uselistorder label %dec_label_pc_10000ca8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000c94, { 1, 0 }
  uselistorder label %dec_label_pc_10000c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10000b98, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_1000120c = ptrtoint i32* %stack_var_-136 to i32
  store i32 268440088, i32* @lr, align 4
  %v4_10001214 = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_1000120c)
  ret i32 %v4_10001214

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000125c = call i32 @__GI_strlen()
  br label %dec_label_pc_10001280

dec_label_pc_10001274:                            ; preds = %dec_label_pc_10001280
  %v1_10001278 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_10001280

dec_label_pc_10001280:                            ; preds = %entry, %dec_label_pc_10001274
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_10001278, %dec_label_pc_10001274 ]
  %v2_1000128c = add i32 %stack_var_-36.0, %arg1
  %v1_10001290 = inttoptr i32 %v2_1000128c to i8*
  %v2_10001290 = load i8, i8* %v1_10001290, align 1
  %v3_10001290 = zext i8 %v2_10001290 to i32
  %v1_10001298 = mul nuw nsw i32 %v3_10001290, 2
  %v3_100012a4 = load i32, i32* inttoptr (i32 268551004 to i32*), align 4
  %v2_100012a8 = add i32 %v3_100012a4, %v1_10001298
  %v1_100012ac = inttoptr i32 %v2_100012a8 to i16*
  %v2_100012ac = load i16, i16* %v1_100012ac, align 2
  %v3_100012ac = zext i16 %v2_100012ac to i32
  %v1_100012b4 = call i32 @__asm_rlwinm(i32 %v3_100012ac, i32 0, i32 26, i32 26)
  %v3_100012b8 = icmp eq i32 %v1_100012b4, 0
  br i1 %v3_100012b8, label %dec_label_pc_100012d0.preheader, label %dec_label_pc_10001274

dec_label_pc_100012d0.preheader:                  ; preds = %dec_label_pc_10001280
  %v1_10001268 = add i32 %v0_1000125c, -1
  %v2_100012d87 = icmp slt i32 %v1_10001268, %stack_var_-36.0
  br i1 %v2_100012d87, label %dec_label_pc_1000136c.preheader, label %dec_label_pc_100012e0

dec_label_pc_100012c4:                            ; preds = %dec_label_pc_100012e0
  %v1_100012c8 = add i32 %stack_var_-40.010, -1
  %v2_100012d8 = icmp slt i32 %v1_100012c8, %stack_var_-36.0
  br i1 %v2_100012d8, label %dec_label_pc_1000136c.preheader, label %dec_label_pc_100012e0

dec_label_pc_100012e0:                            ; preds = %dec_label_pc_100012d0.preheader, %dec_label_pc_100012c4
  %stack_var_-40.010 = phi i32 [ %v1_100012c8, %dec_label_pc_100012c4 ], [ %v1_10001268, %dec_label_pc_100012d0.preheader ]
  %v2_100012ec = add i32 %stack_var_-40.010, %arg1
  %v1_100012f0 = inttoptr i32 %v2_100012ec to i8*
  %v2_100012f0 = load i8, i8* %v1_100012f0, align 1
  %v3_100012f0 = zext i8 %v2_100012f0 to i32
  %v1_100012f8 = mul nuw nsw i32 %v3_100012f0, 2
  %v3_10001304 = load i32, i32* @global_var_1001c35c, align 4
  %v2_10001308 = add i32 %v3_10001304, %v1_100012f8
  %v1_1000130c = inttoptr i32 %v2_10001308 to i16*
  %v2_1000130c = load i16, i16* %v1_1000130c, align 2
  %v3_1000130c = zext i16 %v2_1000130c to i32
  %v1_10001314 = call i32 @__asm_rlwinm(i32 %v3_1000130c, i32 0, i32 26, i32 26)
  %v3_10001318 = icmp eq i32 %v1_10001314, 0
  br i1 %v3_10001318, label %dec_label_pc_1000136c.preheader, label %dec_label_pc_100012c4

dec_label_pc_1000136c.preheader:                  ; preds = %dec_label_pc_100012c4, %dec_label_pc_100012e0, %dec_label_pc_100012d0.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_10001268, %dec_label_pc_100012d0.preheader ], [ %v1_100012c8, %dec_label_pc_100012c4 ], [ %stack_var_-40.010, %dec_label_pc_100012e0 ]
  %v3_100013743 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100013743, label %dec_label_pc_1000137c, label %dec_label_pc_1000132c

dec_label_pc_1000132c:                            ; preds = %dec_label_pc_1000136c.preheader, %dec_label_pc_1000132c
  %v2_100013906 = phi i32 [ %v2_10001390, %dec_label_pc_1000132c ], [ %arg1, %dec_label_pc_1000136c.preheader ]
  %storemerge15 = phi i32 [ %v1_10001364, %dec_label_pc_1000132c ], [ %stack_var_-36.0, %dec_label_pc_1000136c.preheader ]
  %v2_10001350 = add i32 %storemerge15, %arg1
  %v1_10001354 = inttoptr i32 %v2_10001350 to i8*
  %v2_10001354 = load i8, i8* %v1_10001354, align 1
  %v3_1000135c = inttoptr i32 %v2_100013906 to i8*
  store i8 %v2_10001354, i8* %v3_1000135c, align 1
  %v1_10001364 = add i32 %storemerge15, 1
  %v3_10001374 = icmp sgt i32 %v1_10001364, %stack_var_-40.0.lcssa
  %v2_10001384 = sub i32 %v1_10001364, %stack_var_-36.0
  %v2_10001390 = add i32 %v2_10001384, %arg1
  br i1 %v3_10001374, label %dec_label_pc_1000137c, label %dec_label_pc_1000132c

dec_label_pc_1000137c:                            ; preds = %dec_label_pc_1000132c, %dec_label_pc_1000136c.preheader
  %v2_10001390.lcssa = phi i32 [ %arg1, %dec_label_pc_1000136c.preheader ], [ %v2_10001390, %dec_label_pc_1000132c ]
  %v3_10001398 = inttoptr i32 %v2_10001390.lcssa to i8*
  store i8 0, i8* %v3_10001398, align 1
  ret i32 %v0_1000125c

; uselistorder directives
  uselistorder i32 %v1_10001364, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_10001268, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder label %dec_label_pc_1000132c, { 1, 0 }
  uselistorder label %dec_label_pc_1000136c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100012e0, { 1, 0 }
  uselistorder label %dec_label_pc_10001280, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268440540, i32* @lr, align 4
  %v1_100013d8 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_100013d8, i32* %arg2, align 4
  %v4_100013f4 = icmp eq i32 %v1_100013d8, -1
  %. = zext i1 %v4_100013f4 to i32
  ret i32 %.
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10001468.29 to i32), i32* @lr, align 4
  %v4_10001464 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_10001478 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_1000148c

dec_label_pc_1000148c:                            ; preds = %entry, %dec_label_pc_1000148c
  %storemerge719 = phi i32 [ 0, %entry ], [ %v1_100014a8, %dec_label_pc_1000148c ]
  %v1_10001494 = mul nuw nsw i32 %storemerge719, 4
  %v2_10001498 = add i32 %v1_10001494, %v2_10001478
  %v2_100014a0 = inttoptr i32 %v2_10001498 to i32*
  store i32 0, i32* %v2_100014a0, align 4
  %v1_100014a8 = add nuw nsw i32 %storemerge719, 1
  %tmp43 = icmp ult i32 %v1_100014a8, 32
  br i1 %tmp43, label %dec_label_pc_1000148c, label %dec_label_pc_100014bc

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_1000148c
  %v1_100014c0 = udiv i32 %arg1, 32
  %v1_100014c8 = mul nuw nsw i32 %v1_100014c0, 4
  %v2_100014cc = ptrtoint i32* %stack_var_-200 to i32
  %v2_100014d0 = add nuw nsw i32 %v1_100014c8, 32
  %v1_100014d4 = add i32 %v2_100014d0, %v2_100014cc
  %v1_100014d8 = inttoptr i32 %v1_100014d4 to i32*
  %v2_100014d8 = load i32, i32* %v1_100014d8, align 4
  %v1_100014e0 = urem i32 %arg1, 32
  %v3_100014e8 = shl i32 1, %v1_100014e0
  %v2_100014ec = or i32 %v2_100014d8, %v3_100014e8
  store i32 %v2_100014ec, i32* %v1_100014d8, align 4
  %v1_10001508 = add i32 %arg1, 1
  %v2_10001514 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268440880, i32* @lr, align 4
  %v6_1000152c = call i32 @__libc_select(i32 %v1_10001508, i32 %v2_10001478, i32 0, i32 %v2_10001478, i32 %v2_10001514, i32 %v2_10001478)
  %v2_1000153c = icmp sgt i32 %v6_1000152c, 0
  br i1 %v2_1000153c, label %dec_label_pc_100016cc.preheader, label %dec_label_pc_10001630.preheader

dec_label_pc_10001630.preheader:                  ; preds = %dec_label_pc_100014bc
  %tmp44 = icmp slt i32 %tmp26, 10
  br i1 %tmp44, label %dec_label_pc_10001548, label %dec_label_pc_100016cc.preheader

dec_label_pc_10001548:                            ; preds = %dec_label_pc_10001630.preheader, %dec_label_pc_10001624
  %stack_var_-176.018 = phi i32 [ %v1_10001628, %dec_label_pc_10001624 ], [ %tmp26, %dec_label_pc_10001630.preheader ]
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_10001478, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge

dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge: ; preds = %dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge.dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge_crit_edge, %dec_label_pc_10001548
  %v3_10001570.pre = phi i32 [ %v2_10001478, %dec_label_pc_10001548 ], [ %v3_10001570.pre.pre, %dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge.dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge_crit_edge ]
  %v1_1000158850 = phi i32 [ 1, %dec_label_pc_10001548 ], [ %v1_10001588, %dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge.dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge_crit_edge ]
  %v1_10001574 = mul nuw nsw i32 %v1_1000158850, 4
  %v2_10001578 = add i32 %v1_10001574, %v3_10001570.pre
  %v2_10001580 = inttoptr i32 %v2_10001578 to i32*
  store i32 0, i32* %v2_10001580, align 4
  %v1_10001588 = add nuw nsw i32 %v1_1000158850, 1
  %tmp45 = icmp ult i32 %v1_10001588, 32
  br i1 %tmp45, label %dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge.dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge_crit_edge, label %dec_label_pc_1000159c

dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge.dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge
  %v3_10001570.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge

dec_label_pc_1000159c:                            ; preds = %dec_label_pc_1000156c.dec_label_pc_1000156c_crit_edge
  %v2_100015b8 = load i32, i32* %v1_100014d8, align 4
  %v2_100015cc = or i32 %v2_100015b8, %v3_100014e8
  store i32 %v2_100015cc, i32* %v1_100014d8, align 4
  store i32 268441104, i32* @lr, align 4
  %v6_1000160c = call i32 @__libc_select(i32 %v1_10001508, i32 %v2_10001478, i32 0, i32 %v2_10001478, i32 %v2_10001514, i32 %v2_10001478)
  %v2_1000161c = icmp sgt i32 %v6_1000160c, 0
  br i1 %v2_1000161c, label %dec_label_pc_100016cc.preheader, label %dec_label_pc_10001624

dec_label_pc_10001624:                            ; preds = %dec_label_pc_1000159c
  %v1_10001628 = add nsw i32 %stack_var_-176.018, 1
  %tmp46 = icmp slt i32 %v1_10001628, 10
  br i1 %tmp46, label %dec_label_pc_10001548, label %dec_label_pc_100016cc.preheader

dec_label_pc_100016cc.preheader:                  ; preds = %dec_label_pc_10001624, %dec_label_pc_1000159c, %dec_label_pc_10001630.preheader, %dec_label_pc_100014bc
  %v2_10001658 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_100016cc

dec_label_pc_10001650:                            ; preds = %dec_label_pc_100016cc
  %v3_10001654 = load i32, i32* @global_var_1001c3a0.30, align 4
  store i32 268441200, i32* @lr, align 4
  %v4_1000166c = call i32 @__libc_recv(i32 %v3_10001654, i32 %v2_10001658, i32 1, i32 0)
  %v3_10001674 = icmp eq i32 %v4_1000166c, 1
  br i1 %v3_10001674, label %dec_label_pc_10001694, label %dec_label_pc_1000167c

dec_label_pc_1000167c:                            ; preds = %dec_label_pc_10001650
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_10001708

dec_label_pc_10001694:                            ; preds = %dec_label_pc_10001650
  %v3_10001694 = load i8, i8* %stack_var_-32, align 1
  %v4_1000169c = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10001694, i8* %stack_var_-180.0, align 1
  %v1_100016a8 = add i32 %v4_1000169c, 1
  %v5_100016ac = inttoptr i32 %v1_100016a8 to i8*
  %v3_100016b0 = load i8, i8* %stack_var_-32, align 1
  %v3_100016b8 = icmp eq i8 %v3_100016b0, 10
  br i1 %v3_100016b8, label %dec_label_pc_100016f4, label %dec_label_pc_100016c0

dec_label_pc_100016c0:                            ; preds = %dec_label_pc_10001694
  %v1_100016c4 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_100016cc

dec_label_pc_100016cc:                            ; preds = %dec_label_pc_100016cc.preheader, %dec_label_pc_100016c0
  %stack_var_-180.0 = phi i8* [ %v5_100016ac, %dec_label_pc_100016c0 ], [ %arg2, %dec_label_pc_100016cc.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_100016c4, %dec_label_pc_100016c0 ], [ 0, %dec_label_pc_100016cc.preheader ]
  %v0_100016d4 = call i32 @__asm_mfcr()
  %v1_100016d8 = call i32 @__asm_rlwinm(i32 %v0_100016d4, i32 30, i32 31, i32 31)
  %v1_100016dc = urem i32 %v1_100016d8, 256
  %v3_100016ec = icmp eq i32 %v1_100016dc, 0
  br i1 %v3_100016ec, label %dec_label_pc_100016f4, label %dec_label_pc_10001650

dec_label_pc_100016f4:                            ; preds = %dec_label_pc_100016cc, %dec_label_pc_10001694
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_100016cc ], [ %v5_100016ac, %dec_label_pc_10001694 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_10001708

dec_label_pc_10001708:                            ; preds = %dec_label_pc_1000167c, %dec_label_pc_100016f4
  %storemerge = phi i32 [ -1, %dec_label_pc_1000167c ], [ %stack_var_-184.0, %dec_label_pc_100016f4 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_100016ac, { 1, 0 }
  uselistorder i32 %v1_10001628, { 1, 0 }
  uselistorder i32 %v1_10001588, { 1, 0 }
  uselistorder i32 %v2_10001514, { 1, 0 }
  uselistorder i32* %v1_100014d8, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge719, { 1, 0 }
  uselistorder i32 %v2_10001478, { 7, 6, 5, 0, 8, 4, 2, 3, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001708, { 1, 0 }
  uselistorder label %dec_label_pc_100016cc, { 1, 0 }
  uselistorder label %dec_label_pc_10001548, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268441440, i32* @lr, align 4
  %v2_1000175c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_10001788.31 to i32), i32* @lr, align 4
  %v2_10001784 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_10001794 = urem i32 %arg3, 65536
  store i32 %v1_10001794, i32* @r3, align 4
  %v1_1000179c = call i32 @htons(i32 %v1_10001794)
  %v2_100017ac = ptrtoint i32* %stack_var_-200 to i32
  %v4_100017bc = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_100017ac)
  %v3_100017c4 = icmp eq i32 %v4_100017bc, 0
  br i1 %v3_100017c4, label %dec_label_pc_100017d8, label %dec_label_pc_100017cc

dec_label_pc_100017cc:                            ; preds = %entry
  br label %dec_label_pc_10001998

dec_label_pc_100017d8:                            ; preds = %entry
  store i32 268441604, i32* @lr, align 4
  %v3_10001800 = call i32 @__libc_connect(i32 %arg1, i32 %v2_100017ac, i32 16)
  %tmp26 = icmp sgt i32 %v3_10001800, -1
  br i1 %tmp26, label %dec_label_pc_10001954, label %dec_label_pc_10001818

dec_label_pc_10001818:                            ; preds = %dec_label_pc_100017d8
  %v0_10001818 = call i32 @__errno_location()
  %v1_10001820 = inttoptr i32 %v0_10001818 to i32*
  %v2_10001820 = load i32, i32* %v1_10001820, align 4
  %v3_10001824 = icmp eq i32 %v2_10001820, 115
  br i1 %v3_10001824, label %dec_label_pc_1000182c, label %dec_label_pc_10001948

dec_label_pc_1000182c:                            ; preds = %dec_label_pc_10001818
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_1000183c = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_1000183c, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10001850.dec_label_pc_10001850_crit_edge

dec_label_pc_10001850.dec_label_pc_10001850_crit_edge: ; preds = %dec_label_pc_10001850.dec_label_pc_10001850_crit_edge.dec_label_pc_10001850.dec_label_pc_10001850_crit_edge_crit_edge, %dec_label_pc_1000182c
  %v3_10001854.pre = phi i32 [ %v2_1000183c, %dec_label_pc_1000182c ], [ %v3_10001854.pre.pre, %dec_label_pc_10001850.dec_label_pc_10001850_crit_edge.dec_label_pc_10001850.dec_label_pc_10001850_crit_edge_crit_edge ]
  %v1_1000186c30 = phi i32 [ 1, %dec_label_pc_1000182c ], [ %v1_1000186c, %dec_label_pc_10001850.dec_label_pc_10001850_crit_edge.dec_label_pc_10001850.dec_label_pc_10001850_crit_edge_crit_edge ]
  %v1_10001858 = mul nuw nsw i32 %v1_1000186c30, 4
  %v2_1000185c = add i32 %v1_10001858, %v3_10001854.pre
  %v2_10001864 = inttoptr i32 %v2_1000185c to i32*
  store i32 0, i32* %v2_10001864, align 4
  %v1_1000186c = add nuw nsw i32 %v1_1000186c30, 1
  %tmp27 = icmp ult i32 %v1_1000186c, 32
  br i1 %tmp27, label %dec_label_pc_10001850.dec_label_pc_10001850_crit_edge.dec_label_pc_10001850.dec_label_pc_10001850_crit_edge_crit_edge, label %dec_label_pc_10001880

dec_label_pc_10001850.dec_label_pc_10001850_crit_edge.dec_label_pc_10001850.dec_label_pc_10001850_crit_edge_crit_edge: ; preds = %dec_label_pc_10001850.dec_label_pc_10001850_crit_edge
  %v3_10001854.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10001850.dec_label_pc_10001850_crit_edge

dec_label_pc_10001880:                            ; preds = %dec_label_pc_10001850.dec_label_pc_10001850_crit_edge
  %v1_10001884 = udiv i32 %arg1, 32
  %v1_1000188c = mul nuw nsw i32 %v1_10001884, 4
  %v2_10001890 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10001894 = add nuw nsw i32 %v1_1000188c, 32
  %v1_10001898 = add i32 %v2_10001894, %v2_10001890
  %v1_1000189c = inttoptr i32 %v1_10001898 to i32*
  %v2_1000189c = load i32, i32* %v1_1000189c, align 4
  %v1_100018a4 = urem i32 %arg1, 32
  %v3_100018ac = shl i32 1, %v1_100018a4
  %v2_100018b0 = or i32 %v2_1000189c, %v3_100018ac
  store i32 %v2_100018b0, i32* %v1_1000189c, align 4
  %v1_100018cc = add i32 %arg1, 1
  %v2_100018d4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268441840, i32* @lr, align 4
  %v6_100018ec = call i32 @__libc_select(i32 %v1_100018cc, i32 0, i32 %v2_1000183c, i32 0, i32 %v2_100018d4, i32 %v2_1000183c)
  %tmp28 = icmp slt i32 %v6_100018ec, 1
  br i1 %tmp28, label %dec_label_pc_1000193c, label %dec_label_pc_100018fc

dec_label_pc_100018fc:                            ; preds = %dec_label_pc_10001880
  store i32 4, i32* %stack_var_-48, align 4
  %v2_10001904 = ptrtoint i32* %stack_var_-44 to i32
  %v2_10001908 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268441892, i32* @lr, align 4
  %v6_10001920 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_10001904, i32 %v2_10001908, i32 %v2_10001908)
  %v3_10001924 = load i32, i32* %stack_var_-44, align 4
  %v3_10001928 = icmp eq i32 %v3_10001924, 0
  br i1 %v3_10001928, label %dec_label_pc_10001954, label %dec_label_pc_10001930

dec_label_pc_10001930:                            ; preds = %dec_label_pc_100018fc
  br label %dec_label_pc_10001998

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_10001880
  br label %dec_label_pc_10001998

dec_label_pc_10001948:                            ; preds = %dec_label_pc_10001818
  br label %dec_label_pc_10001998

dec_label_pc_10001954:                            ; preds = %dec_label_pc_100018fc, %dec_label_pc_100017d8
  store i32 268441960, i32* @lr, align 4
  %v2_10001964 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_10001974 = call i32 @__asm_rlwinm(i32 %v2_10001964, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_10001990.32 to i32), i32* @lr, align 4
  %v2_1000198c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_1000193c, %dec_label_pc_10001930, %dec_label_pc_100017cc, %dec_label_pc_10001954
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_10001954 ], [ 0, %dec_label_pc_1000193c ], [ 0, %dec_label_pc_10001930 ], [ 0, %dec_label_pc_10001948 ], [ 0, %dec_label_pc_100017cc ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v2_10001908, { 1, 0 }
  uselistorder i32 %v1_1000186c, { 1, 0 }
  uselistorder i32 %v2_1000183c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_100017ac, { 1, 0 }
  uselistorder i32 %v1_10001794, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_select, { 2, 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_10001998, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268442064, i32* @lr, align 4
  %v0_100019cc = call i32 @__libc_fork()
  %v3_100019dc = icmp eq i32 %v0_100019cc, 0
  br i1 %v3_100019dc, label %dec_label_pc_10001b60, label %dec_label_pc_100019f0

dec_label_pc_100019f0:                            ; preds = %entry
  %v3_100019f8 = load i32, i32* @global_var_1001c39c.34, align 4
  %v2_100019fc = load i32, i32* @global_var_1001c398.33, align 4
  %v1_10001a00 = add i32 %v3_100019f8, 1
  %v2_10001a00 = icmp eq i32 %v3_100019f8, -1
  %v2_10001a04 = zext i1 %v2_10001a00 to i32
  %v3_10001a04 = add i32 %v2_10001a04, %v2_100019fc
  store i32 %v3_10001a04, i32* @global_var_1001c398.33, align 4
  store i32 %v1_10001a00, i32* @global_var_1001c39c.34, align 4
  %v1_10001a34 = mul i32 %v1_10001a00, 4
  %v1_10001a3c = add i32 %v1_10001a34, 4
  store i32 268442184, i32* @lr, align 4
  %v1_10001a44 = call i32 @malloc(i32 %v1_10001a3c)
  br label %dec_label_pc_10001a9c

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_10001a9c, %dec_label_pc_10001aec
  %v1_10001a60 = mul i32 %storemerge2, 4
  %v2_10001a6c = add i32 %v1_10001a60, %v1_10001a44
  %v3_10001a80 = load i32, i32* @global_var_1001c3bc.35, align 4
  %v2_10001a84 = add i32 %v3_10001a80, %v1_10001a60
  %v1_10001a88 = inttoptr i32 %v2_10001a84 to i32*
  %v2_10001a88 = load i32, i32* %v1_10001a88, align 4
  %v2_10001a8c = inttoptr i32 %v2_10001a6c to i32*
  store i32 %v2_10001a88, i32* %v2_10001a8c, align 4
  %v1_10001a94 = add i32 %storemerge2, 1
  br label %dec_label_pc_10001a9c

dec_label_pc_10001a9c:                            ; preds = %dec_label_pc_100019f0, %dec_label_pc_10001a5c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_100019f0 ], [ %v1_10001a94, %dec_label_pc_10001a5c ]
  %v3_10001ac4 = load i32, i32* @global_var_1001c39c.34, align 4
  %v2_10001ac8 = load i32, i32* @global_var_1001c398.33, align 4
  %v2_10001acc = icmp ne i32 %v3_10001ac4, 0
  %v3_10001ad0 = add i32 %v2_10001ac8, -1
  %v4_10001ad0 = sext i1 %v2_10001acc to i32
  %v3_10001ae4 = icmp eq i32 %v3_10001ad0, %v4_10001ad0
  br i1 %v3_10001ae4, label %dec_label_pc_10001aec, label %dec_label_pc_10001a5c

dec_label_pc_10001aec:                            ; preds = %dec_label_pc_10001a9c
  %v1_10001acc = add i32 %v3_10001ac4, -1
  %v3_10001b04 = icmp ugt i32 %v1_10001acc, %storemerge2
  br i1 %v3_10001b04, label %dec_label_pc_10001a5c, label %dec_label_pc_10001b0c

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001aec
  %v1_10001b20 = mul i32 %v3_10001ac4, 4
  %v2_10001b2c = add i32 %v1_10001a44, -4
  %v1_10001b30 = add i32 %v2_10001b2c, %v1_10001b20
  %v2_10001b38 = inttoptr i32 %v1_10001b30 to i32*
  store i32 %v0_100019cc, i32* %v2_10001b38, align 4
  %v3_10001b40 = load i32, i32* @global_var_1001c3bc.35, align 4
  store i32 268442444, i32* @lr, align 4
  %v1_10001b48 = call i32 @free(i32 %v3_10001b40)
  store i32 %v1_10001a44, i32* @global_var_1001c3bc.35, align 4
  br label %dec_label_pc_10001b60

dec_label_pc_10001b60:                            ; preds = %entry, %dec_label_pc_10001b0c
  ret i32 %v0_100019cc

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10001a60, { 1, 0 }
  uselistorder i32 %v1_10001a44, { 1, 2, 0 }
  uselistorder i32 %v3_100019f8, { 1, 0 }
  uselistorder label %dec_label_pc_10001b60, { 1, 0 }
  uselistorder label %dec_label_pc_10001a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10001a5c, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %v2_10001ba8 = icmp sgt i32 %arg4, 4096
  br i1 %v2_10001ba8, label %dec_label_pc_10001d44, label %dec_label_pc_10001bb0

dec_label_pc_10001bb0:                            ; preds = %entry
  store i32 268442560, i32* @lr, align 4
  %v3_10001bbc = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268442576, i32* @lr, align 4
  %v1_10001bcc = call i32 @__GI_time(i32 0)
  store i32 268442596, i32* @lr, align 4
  %v1_10001be0 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10001bec = ptrtoint i32* %stack_var_-80 to i32
  store i32 0, i32* %stack_var_-80, align 4
  store i32 0, i32* %stack_var_-76, align 4
  %v1_10001c14 = add i32 %v1_10001be0, 16
  %v2_10001c14 = inttoptr i32 %v1_10001c14 to i32*
  %v3_10001c14 = load i32, i32* %v2_10001c14, align 4
  %v1_10001c18 = inttoptr i32 %v3_10001c14 to i32*
  %v2_10001c18 = load i32, i32* %v1_10001c18, align 4
  %v2_10001c20 = ptrtoint i32* %stack_var_-76 to i32
  %v1_10001c28 = add i32 %v1_10001be0, 12
  %v2_10001c28 = inttoptr i32 %v1_10001c28 to i32*
  %v3_10001c28 = load i32, i32* %v2_10001c28, align 4
  store i32 %v3_10001c28, i32* @r5, align 4
  store i32 268442684, i32* @lr, align 4
  %v4_10001c38 = call i32 @bcopy(i32 %v2_10001c18, i32 %v2_10001c20, i32 %v3_10001c28, i32 %v1_10001be0)
  %v1_10001c40 = add i32 %v1_10001be0, 8
  %v2_10001c40 = inttoptr i32 %v1_10001c40 to i32*
  %v3_10001c40 = load i32, i32* %v2_10001c40, align 4
  %v1_10001c44 = urem i32 %v3_10001c40, 65536
  store i32 %v1_10001c44, i32* %stack_var_-80, align 4
  %v2_10001c9c = ptrtoint i32* %stack_var_-64 to i32
  %v3_10001ca8 = bitcast i32* %stack_var_-64 to i8*
  %v2_10001cb0 = ptrtoint i32* %stack_var_-104 to i32
  %v2_10001d08 = add i32 %v1_10001bcc, %arg3
  br label %dec_label_pc_10001c60

dec_label_pc_10001c60:                            ; preds = %dec_label_pc_10001d34, %dec_label_pc_10001bb0
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10001bb0 ], [ %v1_10001d38, %dec_label_pc_10001d34 ]
  %tmp21 = icmp ult i32 %storemerge1, 50
  br i1 %tmp21, label %dec_label_pc_10001d34, label %dec_label_pc_10001c6c

dec_label_pc_10001c6c:                            ; preds = %dec_label_pc_10001c60
  store i32 268442740, i32* @lr, align 4
  %v1_10001c70 = call i32 @__GI_time(i32 0)
  store i32 268442752, i32* @lr, align 4
  %v1_10001c7c = call i32 @srand(i32 %v1_10001c70)
  store i32 268442756, i32* @lr, align 4
  %v1_10001c80 = call i32 @rand_init(i32 %v1_10001c7c)
  %v0_10001c84 = call i32 @rand_next()
  %v1_10001c8c = mul i32 %v0_10001c84, 4
  %v1_10001c90 = and i32 %v1_10001c8c, 12
  %v1_10001c94 = add nuw nsw i32 %v1_10001c90, 12
  %v4_10001ca8 = call i32 @rand_alphastr(i8* %v3_10001ca8, i32 %v1_10001c94, i32 %v1_10001c90)
  %v2_10001cb4 = add i32 %v1_10001c94, %v2_10001cb0
  %v3_10001cbc = add i32 %v2_10001cb4, 40
  %v4_10001cbc = inttoptr i32 %v3_10001cbc to i8*
  store i8 0, i8* %v4_10001cbc, align 4
  store i32 %v2_10001c9c, i32* %stack_var_-104, align 4
  store i32 268442848, i32* @lr, align 4
  %v4_10001cdc = call i32 @__libc_send(i32 %v3_10001bbc, i32 %v2_10001c9c, i32 %arg4, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10001cf4.36 to i32), i32* @lr, align 4
  %v3_10001cf0 = call i32 @__libc_connect(i32 %v3_10001bbc, i32 %v2_10001bec, i32 16)
  store i32 268442876, i32* @lr, align 4
  %v1_10001cf8 = call i32 @__GI_time(i32 0)
  %v2_10001d0c = icmp slt i32 %v1_10001cf8, %v2_10001d08
  br i1 %v2_10001d0c, label %dec_label_pc_10001d2c, label %dec_label_pc_10001d14

dec_label_pc_10001d14:                            ; preds = %dec_label_pc_10001c6c
  store i32 268442908, i32* @lr, align 4
  %v1_10001d18 = call i32 @__libc_close(i32 %v3_10001bbc)
  %v3_10001d1c = load i32, i32* %stack_var_-104, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001d24.37 to i32), i32* @lr, align 4
  %v1_10001d20 = call i32 @free(i32 %v3_10001d1c)
  %v1_10001d28 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10001d2c

dec_label_pc_10001d2c:                            ; preds = %dec_label_pc_10001c6c, %dec_label_pc_10001d14
  br label %dec_label_pc_10001d34

dec_label_pc_10001d34:                            ; preds = %dec_label_pc_10001c60, %dec_label_pc_10001d2c
  %stack_var_-96.0 = phi i32 [ %storemerge1, %dec_label_pc_10001c60 ], [ 0, %dec_label_pc_10001d2c ]
  %v1_10001d38 = add i32 %stack_var_-96.0, 1
  br label %dec_label_pc_10001c60

dec_label_pc_10001d44:                            ; preds = %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10001c90, { 1, 0 }
  uselistorder i32 %v2_10001c9c, { 1, 0 }
  uselistorder i32 %v3_10001c28, { 1, 0 }
  uselistorder i32 %v1_10001be0, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001d34, { 1, 0 }
  uselistorder label %dec_label_pc_10001d2c, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_10001d80 = load i32, i32* %arg2, align 4
  store i32 ptrtoint (i32* @global_var_1000a5b0.39 to i32), i32* @r4, align 4
  %v2_10001d90 = inttoptr i32 %v2_10001d80 to i8*
  %v3_10001d90 = call i32 @__GI_strcoll(i8* %v2_10001d90, i32 ptrtoint (i32* @global_var_1000a5b0.39 to i32))
  %v3_10001d98 = icmp eq i32 %v3_10001d90, 0
  br i1 %v3_10001d98, label %dec_label_pc_10001da0, label %dec_label_pc_10001ecc

dec_label_pc_10001da0:                            ; preds = %entry
  %tmp30 = icmp slt i32 %arg1, 5
  br i1 %tmp30, label %dec_label_pc_10001ffc, label %dec_label_pc_10001dac

dec_label_pc_10001dac:                            ; preds = %dec_label_pc_10001da0
  %v1_10001db0 = add i32 %tmp, 4
  %v1_10001db4 = inttoptr i32 %v1_10001db0 to i32*
  %v2_10001db4 = load i32, i32* %v1_10001db4, align 4
  %v1_10001dc0 = add i32 %tmp, 8
  %v1_10001dc4 = inttoptr i32 %v1_10001dc0 to i32*
  %v2_10001dc4 = load i32, i32* %v1_10001dc4, align 4
  store i32 268443088, i32* @lr, align 4
  %v2_10001dcc = call i32 @atol(i32 %v2_10001dc4, i32 %v1_10001dc0)
  %v1_10001ddc = add i32 %tmp, 12
  %v1_10001de0 = inttoptr i32 %v1_10001ddc to i32*
  %v2_10001de0 = load i32, i32* %v1_10001de0, align 4
  store i32 268443116, i32* @lr, align 4
  %v2_10001de8 = call i32 @atol(i32 %v2_10001de0, i32 %v1_10001ddc)
  %v1_10001df8 = add i32 %tmp, 16
  %v1_10001dfc = inttoptr i32 %v1_10001df8 to i32*
  %v2_10001dfc = load i32, i32* %v1_10001dfc, align 4
  store i32 268443144, i32* @lr, align 4
  %v2_10001e04 = call i32 @atol(i32 %v2_10001dfc, i32 %v1_10001df8)
  store i32 %v2_10001db4, i32* @r3, align 4
  store i32 268443168, i32* @lr, align 4
  %v2_10001e1c = call i32 @__GI_strchr(i32 %v2_10001db4, i32 44)
  %v3_10001e24 = icmp eq i32 %v2_10001e1c, 0
  br i1 %v3_10001e24, label %dec_label_pc_10001ea0, label %dec_label_pc_10001e2c

dec_label_pc_10001e2c:                            ; preds = %dec_label_pc_10001dac
  store i32 ptrtoint (i32* @global_var_1000a5b4.40 to i32), i32* @r4, align 4
  store i32 268443200, i32* @lr, align 4
  %v3_10001e3c = call i32 @__GI_strtok(i32 %v2_10001db4, i32 ptrtoint (i32* @global_var_1000a5b4.40 to i32), i32 268500992)
  %v3_10001e947 = icmp eq i32 %v3_10001e3c, 0
  br i1 %v3_10001e947, label %dec_label_pc_10001ecc, label %dec_label_pc_10001e4c

dec_label_pc_10001e4c:                            ; preds = %dec_label_pc_10001e2c, %dec_label_pc_10001e78
  %storemerge48 = phi i32 [ %v3_10001e84, %dec_label_pc_10001e78 ], [ %v3_10001e3c, %dec_label_pc_10001e2c ]
  store i32 268443216, i32* @lr, align 4
  %v0_10001e4c = call i32 @listFork()
  %v3_10001e54 = icmp eq i32 %v0_10001e4c, 0
  br i1 %v3_10001e54, label %dec_label_pc_10001e5c, label %dec_label_pc_10001e78

dec_label_pc_10001e5c:                            ; preds = %dec_label_pc_10001e4c
  %v4_10001e6c = call i32 @sendSTD(i32 %storemerge48, i32 %v2_10001dcc, i32 %v2_10001de8, i32 %v2_10001e04)
  %v1_10001e74 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10001e78

dec_label_pc_10001e78:                            ; preds = %dec_label_pc_10001e4c, %dec_label_pc_10001e5c
  store i32 ptrtoint (i32* @global_var_1000a5b4.40 to i32), i32* @r4, align 4
  store i32 268443272, i32* @lr, align 4
  %v3_10001e84 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1000a5b4.40 to i32), i32 268500992)
  %v3_10001e94 = icmp eq i32 %v3_10001e84, 0
  br i1 %v3_10001e94, label %dec_label_pc_10001ecc, label %dec_label_pc_10001e4c

dec_label_pc_10001ea0:                            ; preds = %dec_label_pc_10001dac
  store i32 268443300, i32* @lr, align 4
  %v0_10001ea0 = call i32 @listFork()
  %v3_10001ea8 = icmp eq i32 %v0_10001ea0, 0
  br i1 %v3_10001ea8, label %dec_label_pc_10001eb0, label %dec_label_pc_10001ffc

dec_label_pc_10001eb0:                            ; preds = %dec_label_pc_10001ea0
  %v4_10001ec0 = call i32 @sendSTD(i32 %v2_10001db4, i32 %v2_10001dcc, i32 %v2_10001de8, i32 %v2_10001e04)
  %v1_10001ec8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10001ecc

dec_label_pc_10001ecc:                            ; preds = %dec_label_pc_10001e78, %dec_label_pc_10001e2c, %entry, %dec_label_pc_10001eb0
  %v2_10001ed0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint (i32* @global_var_1000a5b8.44 to i32), i32* @r4, align 4
  %v2_10001ee0 = inttoptr i32 %v2_10001ed0 to i8*
  %v3_10001ee0 = call i32 @__GI_strcoll(i8* %v2_10001ee0, i32 ptrtoint (i32* @global_var_1000a5b8.44 to i32))
  %v3_10001ee8 = icmp eq i32 %v3_10001ee0, 0
  br i1 %v3_10001ee8, label %dec_label_pc_10001ef0, label %dec_label_pc_10001ffc

dec_label_pc_10001ef0:                            ; preds = %dec_label_pc_10001ecc
  br label %dec_label_pc_10001f94

dec_label_pc_10001f04:                            ; preds = %dec_label_pc_10001f94, %dec_label_pc_10001fdc
  %v1_10001f08 = mul i32 %storemerge2, 4
  %v3_10001f14 = load i32, i32* @global_var_1001c3bc.35, align 4
  %v2_10001f18 = add i32 %v3_10001f14, %v1_10001f08
  %v1_10001f1c = inttoptr i32 %v2_10001f18 to i32*
  %v2_10001f1c = load i32, i32* %v1_10001f1c, align 4
  %v3_10001f20 = icmp eq i32 %v2_10001f1c, 0
  br i1 %v3_10001f20, label %dec_label_pc_10001f88, label %dec_label_pc_10001f28

dec_label_pc_10001f28:                            ; preds = %dec_label_pc_10001f04
  %v2_10001f40 = load i32, i32* %v1_10001f1c, align 4
  store i32 268443464, i32* @lr, align 4
  %v0_10001f44 = call i32 @__libc_getpid()
  %v4_10001f4c = icmp eq i32 %v2_10001f40, %v0_10001f44
  br i1 %v4_10001f4c, label %dec_label_pc_10001f88, label %dec_label_pc_10001f54

dec_label_pc_10001f54:                            ; preds = %dec_label_pc_10001f28
  %v3_10001f64 = load i32, i32* @global_var_1001c3bc.35, align 4
  %v2_10001f68 = add i32 %v3_10001f64, %v1_10001f08
  %v1_10001f6c = inttoptr i32 %v2_10001f68 to i32*
  %v2_10001f6c = load i32, i32* %v1_10001f6c, align 4
  store i32 268443516, i32* @lr, align 4
  %v2_10001f78 = call i32 @kill(i32 %v2_10001f6c, i32 9)
  %v1_10001f80 = add i32 %stack_var_-68.1, 1
  br label %dec_label_pc_10001f88

dec_label_pc_10001f88:                            ; preds = %dec_label_pc_10001f28, %dec_label_pc_10001f04, %dec_label_pc_10001f54
  %v0_1000201410 = phi i32 [ %v0_1000201411, %dec_label_pc_10001f04 ], [ %v0_10001f44, %dec_label_pc_10001f28 ], [ %v2_10001f78, %dec_label_pc_10001f54 ]
  %stack_var_-68.0 = phi i32 [ %stack_var_-68.1, %dec_label_pc_10001f04 ], [ %stack_var_-68.1, %dec_label_pc_10001f28 ], [ %v1_10001f80, %dec_label_pc_10001f54 ]
  %v1_10001f8c = add i32 %storemerge2, 1
  br label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001ef0, %dec_label_pc_10001f88
  %v0_1000201411 = phi i32 [ 0, %dec_label_pc_10001ef0 ], [ %v0_1000201410, %dec_label_pc_10001f88 ]
  %stack_var_-68.1 = phi i32 [ 0, %dec_label_pc_10001ef0 ], [ %stack_var_-68.0, %dec_label_pc_10001f88 ]
  %storemerge2 = phi i32 [ 0, %dec_label_pc_10001ef0 ], [ %v1_10001f8c, %dec_label_pc_10001f88 ]
  %v2_10001fbc = load i32, i32* @global_var_1001c398.33, align 4
  %v3_10001fd4 = icmp eq i32 %v2_10001fbc, 0
  br i1 %v3_10001fd4, label %dec_label_pc_10001fdc, label %dec_label_pc_10001f04

dec_label_pc_10001fdc:                            ; preds = %dec_label_pc_10001f94
  %v3_10001fc0 = load i32, i32* @global_var_1001c39c.34, align 4
  %v3_10001ff4 = icmp ugt i32 %v3_10001fc0, %storemerge2
  br i1 %v3_10001ff4, label %dec_label_pc_10001f04, label %dec_label_pc_10001ffc

dec_label_pc_10001ffc:                            ; preds = %dec_label_pc_10001fdc, %dec_label_pc_10001ea0, %dec_label_pc_10001ecc, %dec_label_pc_10001da0
  %v0_10002014 = phi i32 [ %v0_10001ea0, %dec_label_pc_10001ea0 ], [ %v3_10001ee0, %dec_label_pc_10001ecc ], [ 0, %dec_label_pc_10001da0 ], [ %v0_1000201411, %dec_label_pc_10001fdc ]
  ret i32 %v0_10002014

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %stack_var_-68.1, { 0, 2, 1 }
  uselistorder i32 %v1_10001f08, { 1, 0 }
  uselistorder i32 %v3_10001e84, { 1, 0 }
  uselistorder i32 %v2_10001e04, { 1, 0 }
  uselistorder i32 %v2_10001de8, { 1, 0 }
  uselistorder i32 %v2_10001dcc, { 1, 0 }
  uselistorder i32 %v2_10001db4, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 ()* @listFork, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000a5b4.40 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001ffc, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001f94, { 1, 0 }
  uselistorder label %dec_label_pc_10001f88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001f04, { 1, 0 }
  uselistorder label %dec_label_pc_10001ecc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001e78, { 1, 0 }
  uselistorder label %dec_label_pc_10001e4c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_1000202c = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268443716, i32* @lr, align 4
  %v3_10002040 = call i32 @__GI_memset(i32 %v2_1000202c, i32 0, i32 4096)
  %v3_10002048 = load i32, i32* @global_var_1001c3a0.30, align 4
  %v3_1000204c = icmp eq i32 %v3_10002048, 0
  br i1 %v3_1000204c, label %dec_label_pc_10002070, label %dec_label_pc_10002054

dec_label_pc_10002054:                            ; preds = %entry
  store i32 268443748, i32* @lr, align 4
  %v1_10002060 = call i32 @__libc_close(i32 %v3_10002048)
  store i32 0, i32* @global_var_1001c3a0.30, align 4
  br label %dec_label_pc_10002070

dec_label_pc_10002070:                            ; preds = %entry, %dec_label_pc_10002054
  %v3_10002074 = load i32, i32* @global_var_1001c354.45, align 4
  %v3_10002078 = icmp eq i32 %v3_10002074, 0
  br i1 %v3_10002078, label %dec_label_pc_10002080, label %dec_label_pc_10002090

dec_label_pc_10002080:                            ; preds = %dec_label_pc_10002070
  br label %dec_label_pc_100020a4

dec_label_pc_10002090:                            ; preds = %dec_label_pc_10002070
  %v1_10002098 = add i32 %v3_10002074, 1
  br label %dec_label_pc_100020a4

dec_label_pc_100020a4:                            ; preds = %dec_label_pc_10002080, %dec_label_pc_10002090
  %storemerge = phi i32 [ 0, %dec_label_pc_10002080 ], [ %v1_10002098, %dec_label_pc_10002090 ]
  store i32 %storemerge, i32* @global_var_1001c354.45, align 4
  %v1_100020b8 = mul i32 %storemerge, 4
  %v2_100020bc = add i32 %v1_100020b8, ptrtoint ([14 x i8]** @global_var_1001c350.47 to i32)
  %v1_100020c0 = inttoptr i32 %v2_100020bc to i32*
  %v2_100020c0 = load i32, i32* %v1_100020c0, align 4
  %v2_100020cc = inttoptr i32 %v2_100020c0 to i8*
  %v3_100020cc = call i32 @strcpy(i32 %v2_1000202c, i8* %v2_100020cc)
  store i32 %v2_1000202c, i32* @r3, align 4
  store i32 268443884, i32* @lr, align 4
  %v2_100020e8 = call i32 @__GI_strchr(i32 %v2_1000202c, i32 58)
  %v3_100020f0 = icmp eq i32 %v2_100020e8, 0
  br i1 %v3_100020f0, label %dec_label_pc_10002140, label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_100020a4
  store i32 %v2_1000202c, i32* @r3, align 4
  store i32 268443912, i32* @lr, align 4
  %v2_10002104 = call i32 @__GI_strchr(i32 %v2_1000202c, i32 58)
  %v1_1000210c = add i32 %v2_10002104, 1
  store i32 268443928, i32* @lr, align 4
  %v2_10002114 = call i32 @atol(i32 %v1_1000210c, i32 %v2_10002104)
  store i32 %v2_1000202c, i32* @r3, align 4
  store i32 268443952, i32* @lr, align 4
  %v2_1000212c = call i32 @__GI_strchr(i32 %v2_1000202c, i32 58)
  %v3_1000213c = inttoptr i32 %v2_1000212c to i8*
  store i8 0, i8* %v3_1000213c, align 1
  br label %dec_label_pc_10002140

dec_label_pc_10002140:                            ; preds = %dec_label_pc_100020a4, %dec_label_pc_100020f8
  %stack_var_-4136.0 = phi i32 [ 69000, %dec_label_pc_100020a4 ], [ %v2_10002114, %dec_label_pc_100020f8 ]
  store i32 268443984, i32* @lr, align 4
  %v3_1000214c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1000214c, i32* @global_var_1001c3a0.30, align 4
  store i32 268444028, i32* @lr, align 4
  %v5_10002178 = call i32 @connectTimeout(i32 %v3_1000214c, i32 %v2_1000202c, i32 %stack_var_-4136.0, i32 30, i32 %v2_1000202c)
  %v3_10002180 = icmp eq i32 %v5_10002178, 0
  %. = zext i1 %v3_10002180 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1000202c, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10002140, { 1, 0 }
  uselistorder label %dec_label_pc_100020a4, { 1, 0 }
  uselistorder label %dec_label_pc_10002070, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-4236 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  %stack_var_-4240 = alloca i32, align 4
  %stack_var_-4360 = alloca i32, align 4
  %stack_var_-4304 = alloca i32, align 4
  %tmp92 = bitcast i8** %argv to i32*
  %v3_100021e0 = load i32, i32* %tmp92, align 4
  store i32 268444140, i32* @lr, align 4
  %v3_100021e8 = call i32 @unlink(i32 %v3_100021e0, i32 %tmp)
  store i32 268444144, i32* @lr, align 4
  %v1_100021ec = call i32 @rand_init(i32 %v3_100021e8)
  %v0_100021f0 = call i32 @rand_next()
  %v1_100021f8 = mul i32 %v0_100021f0, 4
  %v1_100021fc = and i32 %v1_100021f8, 12
  %v1_10002200 = add nuw nsw i32 %v1_100021fc, 12
  %v2_10002208 = ptrtoint i32* %stack_var_-4304 to i32
  %v3_10002214 = bitcast i32* %stack_var_-4304 to i8*
  %v4_10002214 = call i32 @rand_alphastr(i8* %v3_10002214, i32 %v1_10002200, i32 %v1_100021fc)
  %v2_1000221c = ptrtoint i32* %stack_var_-4360 to i32
  %v2_10002220 = add i32 %v2_1000221c, 56
  %v3_10002228 = add i32 %v2_10002220, %v1_10002200
  %v4_10002228 = inttoptr i32 %v3_10002228 to i8*
  store i8 0, i8* %v4_10002228, align 4
  %v2_10002230 = load i32, i32* %tmp92, align 4
  store i32 268444228, i32* @lr, align 4
  %v3_10002240 = call i32 @util_strcpy(i32 %v2_10002230, i32 %v2_10002208, i32 %v2_10002208)
  %v0_10002244 = call i32 @rand_next()
  %v1_10002258 = urem i32 %v0_10002244, 6
  %v1_10002274 = mul nuw nsw i32 %v1_10002258, 4
  %v1_10002278 = add nuw nsw i32 %v1_10002274, 12
  %v4_1000228c = call i32 @rand_alphastr(i8* %v3_10002214, i32 %v1_10002278, i32 %v1_10002274)
  %v2_10002298 = add i32 %v1_10002278, %v2_1000221c
  %v3_100022a0 = add i32 %v2_10002298, 56
  %v4_100022a0 = inttoptr i32 %v3_100022a0 to i8*
  store i8 0, i8* %v4_100022a0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100022b8.49 to i32), i32* @lr, align 4
  %v3_100022b4 = call i32 @prctl(i32 15, i32 %v2_10002208, i32 %v2_10002298)
  store i32 268444352, i32* @lr, align 4
  %v1_100022bc = call i32 @__GI_time(i32 0)
  store i32 268444360, i32* @lr, align 4
  %v0_100022c4 = call i32 @__libc_getpid()
  %v2_100022cc = xor i32 %v1_100022bc, %v0_100022c4
  store i32 268444376, i32* @lr, align 4
  %v1_100022d4 = call i32 @srand(i32 %v2_100022cc)
  store i32 ptrtoint (i32* @global_var_100022dc.50 to i32), i32* @lr, align 4
  %v1_100022d8 = call i32 @rand_init(i32 %v1_100022d4)
  store i32 268444384, i32* @lr, align 4
  %v0_100022dc = call i32 @__libc_fork()
  %v3_100022ec = icmp eq i32 %v0_100022dc, 0
  br i1 %v3_100022ec, label %dec_label_pc_1000231c, label %dec_label_pc_10002310

dec_label_pc_10002310:                            ; preds = %entry
  %v2_100022f4 = ptrtoint i32* %stack_var_-4240 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_10002308.51 to i32), i32* @lr, align 4
  %v3_10002304 = call i32 @__libc_waitpid(i32 %v0_100022dc, i32 %v2_100022f4, i32 0)
  %v0_1000230c = call i32 @__GI_exit()
  br label %dec_label_pc_1000233c

dec_label_pc_1000231c:                            ; preds = %entry
  store i32 268444448, i32* @lr, align 4
  %v0_1000231c = call i32 @__libc_fork()
  %v3_1000232c = icmp eq i32 %v0_1000231c, 0
  br i1 %v3_1000232c, label %dec_label_pc_1000233c, label %dec_label_pc_10002334

dec_label_pc_10002334:                            ; preds = %dec_label_pc_1000231c
  %v0_10002338 = call i32 @__GI_exit()
  br label %dec_label_pc_1000233c

dec_label_pc_1000233c:                            ; preds = %dec_label_pc_10002310, %dec_label_pc_1000231c, %dec_label_pc_10002334
  store i32 ptrtoint ([3 x i8]* @global_var_10002348.53 to i32), i32* @lr, align 4
  %v2_10002344 = call i32 @chdir(i32 ptrtoint (i32* @global_var_1000a5bc.52 to i32), i32 268500992)
  store i32 ptrtoint (i32* @global_var_10002354.54 to i32), i32* @lr, align 4
  %v2_10002350 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_100029dc = ptrtoint i32* %stack_var_-4196 to i32
  %v4_100029ec = bitcast i32* %stack_var_-4196 to i8*
  %v1_100026f0 = or i32 %v2_100029dc, 1
  %v2_100029a4 = add i32 %v2_1000221c, 124
  br label %dec_label_pc_10002358

dec_label_pc_10002358:                            ; preds = %dec_label_pc_10002358, %dec_label_pc_100029d4, %dec_label_pc_1000233c
  %v0_10002358 = call i32 @initConnection()
  %v3_10002360 = icmp eq i32 %v0_10002358, 0
  br i1 %v3_10002360, label %dec_label_pc_10002368, label %dec_label_pc_10002358

dec_label_pc_10002368:                            ; preds = %dec_label_pc_10002358
  br label %dec_label_pc_100029d4

dec_label_pc_10002388:                            ; preds = %dec_label_pc_1000263c, %dec_label_pc_100025e0
  %v1_1000238c = mul i32 %storemerge13, 4
  %v3_10002398 = load i32, i32* @global_var_1001c3bc.35, align 4
  %v2_1000239c = add i32 %v3_10002398, %v1_1000238c
  %v1_100023a0 = inttoptr i32 %v2_1000239c to i32*
  %v2_100023a0 = load i32, i32* %v1_100023a0, align 4
  store i32 268444596, i32* @lr, align 4
  %v3_100023b0 = call i32 @__libc_waitpid(i32 %v2_100023a0, i32 0, i32 1)
  %tmp94 = icmp slt i32 %v3_100023b0, 1
  br i1 %tmp94, label %dec_label_pc_100025d4, label %dec_label_pc_10002418

dec_label_pc_100023d0:                            ; preds = %dec_label_pc_10002418, %dec_label_pc_10002460
  %v1_100023d4 = mul i32 %v1_100023c4, 4
  %v3_100023e0 = load i32, i32* @global_var_1001c3bc.35, align 4
  %v2_100023e4 = add i32 %v3_100023e0, %v1_100023d4
  %v1_100023e8 = add i32 %v2_100023e4, -4
  %v1_10002404 = inttoptr i32 %v2_100023e4 to i32*
  %v2_10002404 = load i32, i32* %v1_10002404, align 4
  %v2_10002408 = inttoptr i32 %v1_100023e8 to i32*
  store i32 %v2_10002404, i32* %v2_10002408, align 4
  br label %dec_label_pc_10002418

dec_label_pc_10002418:                            ; preds = %dec_label_pc_10002388, %dec_label_pc_100023d0
  %storemerge19 = phi i32 [ %v1_100023c4, %dec_label_pc_100023d0 ], [ %storemerge13, %dec_label_pc_10002388 ]
  %v1_100023c4 = add i32 %storemerge19, 1
  %v2_10002440 = load i32, i32* @global_var_1001c398.33, align 4
  %v3_10002458 = icmp eq i32 %v2_10002440, 0
  br i1 %v3_10002458, label %dec_label_pc_10002460, label %dec_label_pc_100023d0

dec_label_pc_10002460:                            ; preds = %dec_label_pc_10002418
  %v3_10002444 = load i32, i32* @global_var_1001c39c.34, align 4
  %v3_10002478 = icmp ugt i32 %v3_10002444, %v1_100023c4
  br i1 %v3_10002478, label %dec_label_pc_100023d0, label %dec_label_pc_10002480

dec_label_pc_10002480:                            ; preds = %dec_label_pc_10002460
  %v1_10002484 = mul i32 %v1_100023c4, 4
  %v3_10002490 = load i32, i32* @global_var_1001c3bc.35, align 4
  %v2_10002494 = add i32 %v1_10002484, -4
  %v1_10002498 = add i32 %v2_10002494, %v3_10002490
  %v2_100024a0 = inttoptr i32 %v1_10002498 to i32*
  store i32 0, i32* %v2_100024a0, align 4
  %v3_100024ac = load i32, i32* @global_var_1001c39c.34, align 4
  %v2_100024b0 = load i32, i32* @global_var_1001c398.33, align 4
  %v1_100024b4 = add i32 %v3_100024ac, -1
  %v2_100024b4 = icmp ne i32 %v3_100024ac, 0
  %v2_100024b8 = zext i1 %v2_100024b4 to i32
  %v3_100024b8 = add i32 %v2_100024b0, -1
  %v4_100024b8 = add i32 %v3_100024b8, %v2_100024b8
  store i32 %v4_100024b8, i32* @global_var_1001c398.33, align 4
  store i32 %v1_100024b4, i32* @global_var_1001c39c.34, align 4
  %v1_100024e8 = mul i32 %v1_100024b4, 4
  %v1_100024f0 = add i32 %v1_100024e8, 4
  store i32 268444924, i32* @lr, align 4
  %v1_100024f8 = call i32 @malloc(i32 %v1_100024f0)
  br label %dec_label_pc_10002550

dec_label_pc_10002510:                            ; preds = %dec_label_pc_10002550, %dec_label_pc_10002598
  %v1_10002514 = mul i32 %storemerge18, 4
  %v2_10002520 = add i32 %v1_10002514, %v1_100024f8
  %v3_10002534 = load i32, i32* @global_var_1001c3bc.35, align 4
  %v2_10002538 = add i32 %v3_10002534, %v1_10002514
  %v1_1000253c = inttoptr i32 %v2_10002538 to i32*
  %v2_1000253c = load i32, i32* %v1_1000253c, align 4
  %v2_10002540 = inttoptr i32 %v2_10002520 to i32*
  store i32 %v2_1000253c, i32* %v2_10002540, align 4
  %v1_10002548 = add i32 %storemerge18, 1
  br label %dec_label_pc_10002550

dec_label_pc_10002550:                            ; preds = %dec_label_pc_10002480, %dec_label_pc_10002510
  %storemerge18 = phi i32 [ 0, %dec_label_pc_10002480 ], [ %v1_10002548, %dec_label_pc_10002510 ]
  %v2_10002578 = load i32, i32* @global_var_1001c398.33, align 4
  %v3_10002590 = icmp eq i32 %v2_10002578, 0
  br i1 %v3_10002590, label %dec_label_pc_10002598, label %dec_label_pc_10002510

dec_label_pc_10002598:                            ; preds = %dec_label_pc_10002550
  %v3_1000257c = load i32, i32* @global_var_1001c39c.34, align 4
  %v3_100025b0 = icmp ugt i32 %v3_1000257c, %storemerge18
  br i1 %v3_100025b0, label %dec_label_pc_10002510, label %dec_label_pc_100025b8

dec_label_pc_100025b8:                            ; preds = %dec_label_pc_10002598
  %v3_100025bc = load i32, i32* @global_var_1001c3bc.35, align 4
  store i32 268445128, i32* @lr, align 4
  %v1_100025c4 = call i32 @free(i32 %v3_100025bc)
  store i32 %v1_100024f8, i32* @global_var_1001c3bc.35, align 4
  br label %dec_label_pc_100025d4

dec_label_pc_100025d4:                            ; preds = %dec_label_pc_10002388, %dec_label_pc_100025b8
  %v1_100025d8 = add i32 %storemerge13, 1
  br label %dec_label_pc_100025e0

dec_label_pc_100025e0:                            ; preds = %dec_label_pc_100029d4, %dec_label_pc_100025d4
  %storemerge13 = phi i32 [ %v1_100025d8, %dec_label_pc_100025d4 ], [ 0, %dec_label_pc_100029d4 ]
  %tmp96 = icmp slt i32 %storemerge13, 0
  %v1_100025e4 = zext i1 %tmp96 to i32
  %v2_100025e4 = ashr i32 %storemerge13, 31
  %v3_100025e4 = and i32 %v2_100025e4, -2
  %v4_100025e4 = or i32 %v3_100025e4, %v1_100025e4
  %v2_1000260c = load i32, i32* @global_var_1001c398.33, align 4
  %v3_10002610 = load i32, i32* @global_var_1001c39c.34, align 4
  %v3_10002624 = icmp ugt i32 %v2_1000260c, %v4_100025e4
  br i1 %v3_10002624, label %dec_label_pc_10002388, label %dec_label_pc_1000262c

dec_label_pc_1000262c:                            ; preds = %dec_label_pc_100025e0
  %v4_10002624 = icmp eq i32 %v2_1000260c, %v4_100025e4
  br i1 %v4_10002624, label %dec_label_pc_1000263c, label %dec_label_pc_1000264c

dec_label_pc_1000263c:                            ; preds = %dec_label_pc_1000262c
  %v3_10002644 = icmp ugt i32 %v3_10002610, %storemerge13
  br i1 %v3_10002644, label %dec_label_pc_10002388, label %dec_label_pc_1000264c

dec_label_pc_1000264c:                            ; preds = %dec_label_pc_1000262c, %dec_label_pc_1000263c
  %v2_10002654 = add i32 %v5_100029ec, %v2_1000221c
  %v3_1000265c = add i32 %v2_10002654, 164
  %v4_1000265c = inttoptr i32 %v3_1000265c to i8*
  store i8 0, i8* %v4_1000265c, align 1
  %v2_10002668 = call i32 @trim(i32 %v2_100029dc, i32 %v2_10002654)
  %v2_10002678 = load i8, i8* %v4_100029ec, align 4
  %v3_10002680 = icmp eq i8 %v2_10002678, 46
  br i1 %v3_10002680, label %dec_label_pc_100026a4, label %dec_label_pc_100029d4

dec_label_pc_100026a4:                            ; preds = %dec_label_pc_1000264c, %dec_label_pc_100026b8
  %storemerge = phi i32 [ %v1_1000268c, %dec_label_pc_100026b8 ], [ %v2_100029dc, %dec_label_pc_1000264c ]
  %v1_1000268c = add i32 %storemerge, 1
  %storemerge9 = inttoptr i32 %v1_1000268c to i8*
  %v2_100026a8 = load i8, i8* %storemerge9, align 1
  %v3_100026b0 = icmp eq i8 %v2_100026a8, 32
  br i1 %v3_100026b0, label %dec_label_pc_100026cc, label %dec_label_pc_100026b8

dec_label_pc_100026b8:                            ; preds = %dec_label_pc_100026a4
  %v2_100026bc = load i8, i8* %storemerge9, align 1
  %v3_100026c4 = icmp eq i8 %v2_100026bc, 0
  br i1 %v3_100026c4, label %dec_label_pc_100026cc, label %dec_label_pc_100026a4

dec_label_pc_100026cc:                            ; preds = %dec_label_pc_100026b8, %dec_label_pc_100026a4
  %v2_100026d0 = load i8, i8* %storemerge9, align 1
  %v3_100026d8 = icmp eq i8 %v2_100026d0, 0
  br i1 %v3_100026d8, label %dec_label_pc_100029d4, label %dec_label_pc_100026e0

dec_label_pc_100026e0:                            ; preds = %dec_label_pc_100026cc
  store i8 0, i8* %storemerge9, align 1
  store i32 %v1_100026f0, i32* @r3, align 4
  %v0_10002700 = call i32 @__GI_strlen()
  %v2_10002710 = add i32 %v0_10002700, %v2_100029dc
  %v1_10002714 = add i32 %v2_10002710, 2
  %v2_10002760 = add i32 %v2_10002710, 1
  br label %dec_label_pc_10002748

dec_label_pc_10002720:                            ; preds = %dec_label_pc_10002778, %dec_label_pc_10002748
  store i32 %v1_10002714, i32* @r3, align 4
  %v0_10002728 = call i32 @__GI_strlen()
  %v1_1000273c = add i32 %v0_10002728, %v2_10002760
  %v3_10002744 = inttoptr i32 %v1_1000273c to i8*
  store i8 0, i8* %v3_10002744, align 1
  br label %dec_label_pc_10002748

dec_label_pc_10002748:                            ; preds = %dec_label_pc_100026e0, %dec_label_pc_10002720
  store i32 %v1_10002714, i32* @r3, align 4
  %v0_10002750 = call i32 @__GI_strlen()
  %v1_10002764 = add i32 %v0_10002750, %v2_10002760
  %v1_10002768 = inttoptr i32 %v1_10002764 to i8*
  %v2_10002768 = load i8, i8* %v1_10002768, align 1
  %v3_10002770 = icmp eq i8 %v2_10002768, 10
  br i1 %v3_10002770, label %dec_label_pc_10002720, label %dec_label_pc_10002778

dec_label_pc_10002778:                            ; preds = %dec_label_pc_10002748
  store i32 %v1_10002714, i32* @r3, align 4
  %v0_10002780 = call i32 @__GI_strlen()
  %v1_10002794 = add i32 %v0_10002780, %v2_10002760
  %v1_10002798 = inttoptr i32 %v1_10002794 to i8*
  %v2_10002798 = load i8, i8* %v1_10002798, align 1
  %v3_100027a0 = icmp eq i8 %v2_10002798, 13
  br i1 %v3_100027a0, label %dec_label_pc_10002720, label %dec_label_pc_100027c0.preheader

dec_label_pc_100027c0.preheader:                  ; preds = %dec_label_pc_10002778
  %stack_var_-4328.021 = inttoptr i32 %v1_10002714 to i8*
  %v2_100027c422 = load i8, i8* %stack_var_-4328.021, align 1
  %v3_100027cc26 = icmp eq i8 %v2_100027c422, 32
  br i1 %v3_100027cc26, label %dec_label_pc_100027e8, label %dec_label_pc_100027d4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027d4
  %v1_100027b8 = add i32 %storemerge2027, 1
  %stack_var_-4328.0 = inttoptr i32 %v1_100027b8 to i8*
  %v2_100027c4 = load i8, i8* %stack_var_-4328.0, align 1
  %v3_100027cc = icmp eq i8 %v2_100027c4, 32
  br i1 %v3_100027cc, label %dec_label_pc_100027e8, label %dec_label_pc_100027d4

dec_label_pc_100027d4:                            ; preds = %dec_label_pc_100027c0.preheader, %dec_label_pc_100027b4
  %stack_var_-4328.028 = phi i8* [ %stack_var_-4328.0, %dec_label_pc_100027b4 ], [ %stack_var_-4328.021, %dec_label_pc_100027c0.preheader ]
  %storemerge2027 = phi i32 [ %v1_100027b8, %dec_label_pc_100027b4 ], [ %v1_10002714, %dec_label_pc_100027c0.preheader ]
  %v2_100027d8 = load i8, i8* %stack_var_-4328.028, align 1
  %v3_100027e0 = icmp eq i8 %v2_100027d8, 0
  br i1 %v3_100027e0, label %dec_label_pc_100027e8, label %dec_label_pc_100027b4

dec_label_pc_100027e8:                            ; preds = %dec_label_pc_100027b4, %dec_label_pc_100027d4, %dec_label_pc_100027c0.preheader
  %storemerge20.lcssa = phi i32 [ %v1_10002714, %dec_label_pc_100027c0.preheader ], [ %v1_100027b8, %dec_label_pc_100027b4 ], [ %storemerge2027, %dec_label_pc_100027d4 ]
  %stack_var_-4328.0.lcssa = phi i8* [ %stack_var_-4328.021, %dec_label_pc_100027c0.preheader ], [ %stack_var_-4328.0, %dec_label_pc_100027b4 ], [ %stack_var_-4328.028, %dec_label_pc_100027d4 ]
  store i8 0, i8* %stack_var_-4328.0.lcssa, align 1
  %v1_100027f8 = add i32 %storemerge20.lcssa, 1
  %v2_1000284033 = load i8, i8* %stack_var_-4328.021, align 1
  %v3_1000284836 = icmp eq i8 %v2_1000284033, 0
  br i1 %v3_1000284836, label %dec_label_pc_10002850, label %dec_label_pc_1000280c

dec_label_pc_1000280c:                            ; preds = %dec_label_pc_100027e8, %dec_label_pc_1000280c
  %storemerge838 = phi i8* [ %storemerge8, %dec_label_pc_1000280c ], [ %stack_var_-4328.021, %dec_label_pc_100027e8 ]
  %storemerge1537 = phi i32 [ %v1_10002834, %dec_label_pc_1000280c ], [ %v1_10002714, %dec_label_pc_100027e8 ]
  %v3_10002810 = load i8, i8* %storemerge838, align 1
  %v4_10002810 = zext i8 %v3_10002810 to i32
  store i32 268445728, i32* @lr, align 4
  %v3_1000281c = call i32 @__GI_toupper(i32 %v4_10002810, i32 %storemerge1537)
  %v1_1000282c = trunc i32 %v3_1000281c to i8
  store i8 %v1_1000282c, i8* %storemerge838, align 1
  %v1_10002834 = add i32 %storemerge1537, 1
  %storemerge8 = inttoptr i32 %v1_10002834 to i8*
  %v2_10002840 = load i8, i8* %storemerge8, align 1
  %v3_10002848 = icmp eq i8 %v2_10002840, 0
  br i1 %v3_10002848, label %dec_label_pc_10002850, label %dec_label_pc_1000280c

dec_label_pc_10002850:                            ; preds = %dec_label_pc_1000280c, %dec_label_pc_100027e8
  store i32 ptrtoint (i32* @global_var_1000a5c0.55 to i32), i32* @r4, align 4
  store i32 268445804, i32* @lr, align 4
  %v3_10002868 = call i32 @__GI_strtok(i32 %v1_100027f8, i32 ptrtoint (i32* @global_var_1000a5c0.55 to i32), i32 268500992)
  store i32 %v1_10002714, i32* %stack_var_-4236, align 4
  %v3_1000296042 = icmp eq i32 %v3_10002868, 0
  br i1 %v3_1000296042, label %dec_label_pc_10002968, label %dec_label_pc_10002880

dec_label_pc_10002880:                            ; preds = %dec_label_pc_10002850, %dec_label_pc_10002944
  %stack_var_-4356.045.in = phi i32 [ %v3_10002950, %dec_label_pc_10002944 ], [ %v3_10002868, %dec_label_pc_10002850 ]
  %stack_var_-4352.143 = phi i32 [ %stack_var_-4352.0, %dec_label_pc_10002944 ], [ 1, %dec_label_pc_10002850 ]
  %stack_var_-4356.045 = inttoptr i32 %stack_var_-4356.045.in to i8*
  %v2_10002884 = load i8, i8* %stack_var_-4356.045, align 1
  %v3_1000288c = icmp eq i8 %v2_10002884, 10
  br i1 %v3_1000288c, label %dec_label_pc_10002944, label %dec_label_pc_10002894

dec_label_pc_10002894:                            ; preds = %dec_label_pc_10002880
  store i32 %stack_var_-4352.143, i32* @r29, align 4
  store i32 %stack_var_-4356.045.in, i32* @r3, align 4
  %v0_100028a0 = call i32 @__GI_strlen()
  %v1_100028a8 = add i32 %v0_100028a0, 1
  store i32 268445876, i32* @lr, align 4
  %v1_100028b0 = call i32 @malloc(i32 %v1_100028a8)
  %v0_100028bc = load i32, i32* @r29, align 4
  %v1_100028bc = mul i32 %v0_100028bc, 4
  %v1_100028c8 = add i32 %v1_100028bc, %v2_100029a4
  %v2_100028cc = inttoptr i32 %v1_100028c8 to i32*
  store i32 %v1_100028b0, i32* %v2_100028cc, align 4
  %v1_100028d4 = mul i32 %stack_var_-4352.143, 4
  %v1_100028e0 = add i32 %v1_100028d4, %v2_100029a4
  %v1_100028e4 = inttoptr i32 %v1_100028e0 to i32*
  %v2_100028e4 = load i32, i32* %v1_100028e4, align 4
  store i32 %stack_var_-4356.045.in, i32* @r3, align 4
  %v0_100028f0 = call i32 @__GI_strlen()
  %v1_100028f8 = add i32 %v0_100028f0, 1
  store i32 268445968, i32* @lr, align 4
  %v3_1000290c = call i32 @__GI_memset(i32 %v2_100028e4, i32 0, i32 %v1_100028f8)
  %v2_10002924 = load i32, i32* %v1_100028e4, align 4
  %v4_10002934 = call i32 @strcpy(i32 %v2_10002924, i8* nonnull %stack_var_-4356.045)
  %v1_1000293c = add i32 %stack_var_-4352.143, 1
  br label %dec_label_pc_10002944

dec_label_pc_10002944:                            ; preds = %dec_label_pc_10002880, %dec_label_pc_10002894
  %stack_var_-4352.0 = phi i32 [ %stack_var_-4352.143, %dec_label_pc_10002880 ], [ %v1_1000293c, %dec_label_pc_10002894 ]
  store i32 ptrtoint (i32* @global_var_1000a5c0.55 to i32), i32* @r4, align 4
  store i32 268446036, i32* @lr, align 4
  %v3_10002950 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1000a5c0.55 to i32), i32 268500992)
  %v3_10002960 = icmp eq i32 %v3_10002950, 0
  br i1 %v3_10002960, label %dec_label_pc_10002968, label %dec_label_pc_10002880

dec_label_pc_10002968:                            ; preds = %dec_label_pc_10002944, %dec_label_pc_10002850
  %stack_var_-4352.1.lcssa = phi i32 [ 1, %dec_label_pc_10002850 ], [ %stack_var_-4352.0, %dec_label_pc_10002944 ]
  store i32 268446072, i32* @lr, align 4
  %v3_10002974 = call i32 @processCmd(i32 %stack_var_-4352.1.lcssa, i32* nonnull %stack_var_-4236)
  %tmp95 = icmp slt i32 %stack_var_-4352.1.lcssa, 2
  br i1 %tmp95, label %dec_label_pc_100029d4, label %dec_label_pc_10002998.lr.ph

dec_label_pc_10002998.lr.ph:                      ; preds = %dec_label_pc_10002968
  store i32 1, i32* %stack_var_-4360, align 4
  br label %dec_label_pc_10002998

dec_label_pc_10002998:                            ; preds = %dec_label_pc_10002998.lr.ph, %dec_label_pc_10002998
  %v3_10002998 = phi i32 [ 1, %dec_label_pc_10002998.lr.ph ], [ %v1_100029bc, %dec_label_pc_10002998 ]
  %v1_1000299c = mul i32 %v3_10002998, 4
  %v1_100029a8 = add i32 %v1_1000299c, %v2_100029a4
  %v1_100029ac = inttoptr i32 %v1_100029a8 to i32*
  %v2_100029ac = load i32, i32* %v1_100029ac, align 4
  store i32 268446136, i32* @lr, align 4
  %v1_100029b4 = call i32 @free(i32 %v2_100029ac)
  %v3_100029b8 = load i32, i32* %stack_var_-4360, align 4
  %v1_100029bc = add i32 %v3_100029b8, 1
  store i32 %v1_100029bc, i32* %stack_var_-4360, align 4
  %v2_100029cc = icmp slt i32 %v1_100029bc, %stack_var_-4352.1.lcssa
  br i1 %v2_100029cc, label %dec_label_pc_10002998, label %dec_label_pc_100029d4

dec_label_pc_100029d4:                            ; preds = %dec_label_pc_10002998, %dec_label_pc_1000264c, %dec_label_pc_10002968, %dec_label_pc_100026cc, %dec_label_pc_10002368
  %v3_100029d8 = load i32, i32* @global_var_1001c3a0.30, align 4
  %v5_100029ec = call i32 @recvLine(i32 %v3_100029d8, i8* %v4_100029ec, i32 4096, i32 %v2_100029dc)
  %v4_10002a00 = icmp eq i32 %v5_100029ec, -1
  br i1 %v4_10002a00, label %dec_label_pc_10002358, label %dec_label_pc_100025e0

; uselistorder directives
  uselistorder i32 %v5_100029ec, { 1, 0 }
  uselistorder i32 %v1_100029bc, { 1, 2, 0 }
  uselistorder i32 %stack_var_-4352.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_10002950, { 1, 0 }
  uselistorder i8* %stack_var_-4356.045, { 1, 0 }
  uselistorder i32 %stack_var_-4352.143, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge8, { 1, 0 }
  uselistorder i32 %v1_10002834, { 1, 0 }
  uselistorder i32 %storemerge1537, { 1, 0 }
  uselistorder i8* %storemerge838, { 1, 0 }
  uselistorder i8* %stack_var_-4328.021, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10002714, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_1000268c, { 1, 0 }
  uselistorder i32 %v2_1000260c, { 1, 0 }
  uselistorder i32 %storemerge13, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge18, { 1, 0, 2 }
  uselistorder i32 %v1_10002514, { 1, 0 }
  uselistorder i32 %v1_100024f8, { 1, 0 }
  uselistorder i32 %v3_100024ac, { 1, 0 }
  uselistorder i32 %v1_100023c4, { 1, 3, 0, 2 }
  uselistorder i8* %v4_100029ec, { 1, 0 }
  uselistorder i32 %v2_100029dc, { 3, 1, 0, 4, 2 }
  uselistorder i32 %v1_10002274, { 1, 0 }
  uselistorder i32 %v2_1000221c, { 0, 3, 1, 2 }
  uselistorder i32 %v2_10002208, { 0, 2, 1 }
  uselistorder i32 %v1_100021fc, { 1, 0 }
  uselistorder i32* %stack_var_-4360, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000a5c0.55 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_1001c398.33, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_next, { 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @rand_init, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100029d4, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_10002998, { 1, 0 }
  uselistorder label %dec_label_pc_10002944, { 1, 0 }
  uselistorder label %dec_label_pc_10002880, { 1, 0 }
  uselistorder label %dec_label_pc_1000280c, { 1, 0 }
  uselistorder label %dec_label_pc_100027e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100027d4, { 1, 0 }
  uselistorder label %dec_label_pc_10002748, { 1, 0 }
  uselistorder label %dec_label_pc_100026a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000264c, { 1, 0 }
  uselistorder label %dec_label_pc_100025d4, { 1, 0 }
  uselistorder label %dec_label_pc_10002550, { 1, 0 }
  uselistorder label %dec_label_pc_10002510, { 1, 0 }
  uselistorder label %dec_label_pc_10002418, { 1, 0 }
  uselistorder label %dec_label_pc_100023d0, { 1, 0 }
  uselistorder label %dec_label_pc_10002358, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000233c, { 2, 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10002a20 = add i32 %arg2, -12
  %v2_10002a24 = icmp ugt i32 %v1_10002a20, 2
  %v2_10002a2c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10002a2c, i32* %stack_var_-32, align 4
  br i1 %v2_10002a24, label %dec_label_pc_10002a58, label %dec_label_pc_10002a48

dec_label_pc_10002a48:                            ; preds = %entry
  store i32 268446288, i32* @lr, align 4
  %v2_10002a4c = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_10002a4c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002a78

dec_label_pc_10002a58:                            ; preds = %entry
  %v0_10002a5c = call i32 @__asm_mfcr()
  %v1_10002a60 = and i32 %v0_10002a5c, 268435456
  %v3_10002a60 = icmp eq i32 %v1_10002a60, 0
  store i32 %v0_10002a5c, i32* %r31.global-to-local, align 4
  br i1 %v3_10002a60, label %dec_label_pc_10002a78, label %dec_label_pc_10002a6c

dec_label_pc_10002a6c:                            ; preds = %dec_label_pc_10002a58
  %v0_10002a6c = call i32 @__errno_location()
  %v0_10002a70 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002a70 = inttoptr i32 %v0_10002a6c to i32*
  store i32 %v0_10002a70, i32* %v2_10002a70, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002a78

dec_label_pc_10002a78:                            ; preds = %dec_label_pc_10002a58, %dec_label_pc_10002a48, %dec_label_pc_10002a6c
  %v0_10002a7c = phi i32 [ %v0_10002a5c, %dec_label_pc_10002a58 ], [ %v2_10002a4c, %dec_label_pc_10002a48 ], [ -1, %dec_label_pc_10002a6c ]
  ret i32 %v0_10002a7c

; uselistorder directives
  uselistorder label %dec_label_pc_10002a78, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10002aa8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10002aa8, i32* %stack_var_-32, align 4
  %v0_10002ac4 = call i32 @__asm_mfcr()
  %v1_10002ac8 = and i32 %v0_10002ac4, 268435456
  %v3_10002ac8 = icmp eq i32 %v1_10002ac8, 0
  store i32 %v0_10002ac4, i32* %r31.global-to-local, align 4
  br i1 %v3_10002ac8, label %dec_label_pc_10002ae0, label %dec_label_pc_10002ad4

dec_label_pc_10002ad4:                            ; preds = %entry
  %v0_10002ad4 = call i32 @__errno_location()
  %v0_10002ad8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ad8 = inttoptr i32 %v0_10002ad4 to i32*
  store i32 %v0_10002ad8, i32* %v2_10002ad8, align 4
  br label %dec_label_pc_10002ae0

dec_label_pc_10002ae0:                            ; preds = %entry, %dec_label_pc_10002ad4
  %v0_10002af0 = phi i32 [ %v0_10002ac4, %entry ], [ -1, %dec_label_pc_10002ad4 ]
  ret i32 %v0_10002af0

; uselistorder directives
  uselistorder label %dec_label_pc_10002ae0, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_10002b08

dec_label_pc_10002b08:                            ; preds = %dec_label_pc_10002b08.backedge, %entry
  %v0_10002b14 = call i32 @__asm_mfcr()
  %v1_10002b18 = and i32 %v0_10002b14, 268435456
  %v3_10002b18 = icmp eq i32 %v1_10002b18, 0
  store i32 %v0_10002b14, i32* %r31.global-to-local, align 4
  br i1 %v3_10002b18, label %dec_label_pc_10002b08.backedge, label %dec_label_pc_10002b24

dec_label_pc_10002b24:                            ; preds = %dec_label_pc_10002b08
  %v0_10002b24 = call i32 @__errno_location()
  %v0_10002b28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002b28 = inttoptr i32 %v0_10002b24 to i32*
  store i32 %v0_10002b28, i32* %v2_10002b28, align 4
  br label %dec_label_pc_10002b08.backedge

dec_label_pc_10002b08.backedge:                   ; preds = %dec_label_pc_10002b24, %dec_label_pc_10002b08
  br label %dec_label_pc_10002b08
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002b48 = call i32 @__asm_mfcr()
  %v1_10002b4c = and i32 %v0_10002b48, 268435456
  %v3_10002b4c = icmp eq i32 %v1_10002b4c, 0
  store i32 %v0_10002b48, i32* %r31.global-to-local, align 4
  br i1 %v3_10002b4c, label %dec_label_pc_10002b64, label %dec_label_pc_10002b58

dec_label_pc_10002b58:                            ; preds = %entry
  %v0_10002b58 = call i32 @__errno_location()
  %v0_10002b5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002b5c = inttoptr i32 %v0_10002b58 to i32*
  store i32 %v0_10002b5c, i32* %v2_10002b5c, align 4
  br label %dec_label_pc_10002b64

dec_label_pc_10002b64:                            ; preds = %entry, %dec_label_pc_10002b58
  %v0_10002b74 = phi i32 [ %v0_10002b48, %entry ], [ -1, %dec_label_pc_10002b58 ]
  ret i32 %v0_10002b74

; uselistorder directives
  uselistorder label %dec_label_pc_10002b64, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002b90 = call i32 @__asm_mfcr()
  %v1_10002b94 = and i32 %v0_10002b90, 268435456
  %v3_10002b94 = icmp eq i32 %v1_10002b94, 0
  store i32 %v0_10002b90, i32* %r31.global-to-local, align 4
  br i1 %v3_10002b94, label %dec_label_pc_10002bac, label %dec_label_pc_10002ba0

dec_label_pc_10002ba0:                            ; preds = %entry
  %v0_10002ba0 = call i32 @__errno_location()
  %v0_10002ba4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ba4 = inttoptr i32 %v0_10002ba0 to i32*
  store i32 %v0_10002ba4, i32* %v2_10002ba4, align 4
  br label %dec_label_pc_10002bac

dec_label_pc_10002bac:                            ; preds = %entry, %dec_label_pc_10002ba0
  %v0_10002bbc = phi i32 [ %v0_10002b90, %entry ], [ -1, %dec_label_pc_10002ba0 ]
  ret i32 %v0_10002bbc

; uselistorder directives
  uselistorder label %dec_label_pc_10002bac, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002bd8 = call i32 @__asm_mfcr()
  %v1_10002bdc = and i32 %v0_10002bd8, 268435456
  %v3_10002bdc = icmp eq i32 %v1_10002bdc, 0
  store i32 %v0_10002bd8, i32* %r31.global-to-local, align 4
  br i1 %v3_10002bdc, label %dec_label_pc_10002bf4, label %dec_label_pc_10002be8

dec_label_pc_10002be8:                            ; preds = %entry
  %v0_10002be8 = call i32 @__errno_location()
  %v0_10002bec = load i32, i32* %r31.global-to-local, align 4
  %v2_10002bec = inttoptr i32 %v0_10002be8 to i32*
  store i32 %v0_10002bec, i32* %v2_10002bec, align 4
  br label %dec_label_pc_10002bf4

dec_label_pc_10002bf4:                            ; preds = %entry, %dec_label_pc_10002be8
  %v0_10002c04 = phi i32 [ %v0_10002bd8, %entry ], [ -1, %dec_label_pc_10002be8 ]
  ret i32 %v0_10002c04

; uselistorder directives
  uselistorder label %dec_label_pc_10002bf4, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002c20 = call i32 @__asm_mfcr()
  %v1_10002c24 = and i32 %v0_10002c20, 268435456
  %v3_10002c24 = icmp eq i32 %v1_10002c24, 0
  store i32 %v0_10002c20, i32* %r31.global-to-local, align 4
  br i1 %v3_10002c24, label %dec_label_pc_10002c3c, label %dec_label_pc_10002c30

dec_label_pc_10002c30:                            ; preds = %entry
  %v0_10002c30 = call i32 @__errno_location()
  %v0_10002c34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002c34 = inttoptr i32 %v0_10002c30 to i32*
  store i32 %v0_10002c34, i32* %v2_10002c34, align 4
  br label %dec_label_pc_10002c3c

dec_label_pc_10002c3c:                            ; preds = %entry, %dec_label_pc_10002c30
  %v0_10002c4c = phi i32 [ %v0_10002c20, %entry ], [ -1, %dec_label_pc_10002c30 ]
  ret i32 %v0_10002c4c

; uselistorder directives
  uselistorder label %dec_label_pc_10002c3c, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002c68 = call i32 @__asm_mfcr()
  %v1_10002c6c = and i32 %v0_10002c68, 268435456
  %v3_10002c6c = icmp eq i32 %v1_10002c6c, 0
  store i32 %v0_10002c68, i32* %r31.global-to-local, align 4
  br i1 %v3_10002c6c, label %dec_label_pc_10002c84, label %dec_label_pc_10002c78

dec_label_pc_10002c78:                            ; preds = %entry
  %v0_10002c78 = call i32 @__errno_location()
  %v0_10002c7c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002c7c = inttoptr i32 %v0_10002c78 to i32*
  store i32 %v0_10002c7c, i32* %v2_10002c7c, align 4
  br label %dec_label_pc_10002c84

dec_label_pc_10002c84:                            ; preds = %entry, %dec_label_pc_10002c78
  %v0_10002c94 = phi i32 [ %v0_10002c68, %entry ], [ -1, %dec_label_pc_10002c78 ]
  ret i32 %v0_10002c94

; uselistorder directives
  uselistorder label %dec_label_pc_10002c84, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002cb0 = call i32 @__asm_mfcr()
  %v1_10002cb4 = and i32 %v0_10002cb0, 268435456
  %v3_10002cb4 = icmp eq i32 %v1_10002cb4, 0
  store i32 %v0_10002cb0, i32* %r31.global-to-local, align 4
  br i1 %v3_10002cb4, label %dec_label_pc_10002ccc, label %dec_label_pc_10002cc0

dec_label_pc_10002cc0:                            ; preds = %entry
  %v0_10002cc0 = call i32 @__errno_location()
  %v0_10002cc4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002cc4 = inttoptr i32 %v0_10002cc0 to i32*
  store i32 %v0_10002cc4, i32* %v2_10002cc4, align 4
  br label %dec_label_pc_10002ccc

dec_label_pc_10002ccc:                            ; preds = %entry, %dec_label_pc_10002cc0
  %v0_10002cdc = phi i32 [ %v0_10002cb0, %entry ], [ -1, %dec_label_pc_10002cc0 ]
  ret i32 %v0_10002cdc

; uselistorder directives
  uselistorder label %dec_label_pc_10002ccc, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002cf8 = call i32 @__asm_mfcr()
  %v1_10002cfc = and i32 %v0_10002cf8, 268435456
  %v3_10002cfc = icmp eq i32 %v1_10002cfc, 0
  store i32 %v0_10002cf8, i32* %r31.global-to-local, align 4
  br i1 %v3_10002cfc, label %dec_label_pc_10002d14, label %dec_label_pc_10002d08

dec_label_pc_10002d08:                            ; preds = %entry
  %v0_10002d08 = call i32 @__errno_location()
  %v0_10002d0c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002d0c = inttoptr i32 %v0_10002d08 to i32*
  store i32 %v0_10002d0c, i32* %v2_10002d0c, align 4
  br label %dec_label_pc_10002d14

dec_label_pc_10002d14:                            ; preds = %entry, %dec_label_pc_10002d08
  %v0_10002d24 = phi i32 [ %v0_10002cf8, %entry ], [ -1, %dec_label_pc_10002d08 ]
  ret i32 %v0_10002d24

; uselistorder directives
  uselistorder label %dec_label_pc_10002d14, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002d40 = call i32 @__asm_mfcr()
  %v1_10002d44 = and i32 %v0_10002d40, 268435456
  %v3_10002d44 = icmp eq i32 %v1_10002d44, 0
  store i32 %v0_10002d40, i32* %r31.global-to-local, align 4
  br i1 %v3_10002d44, label %dec_label_pc_10002d5c, label %dec_label_pc_10002d50

dec_label_pc_10002d50:                            ; preds = %entry
  %v0_10002d50 = call i32 @__errno_location()
  %v0_10002d54 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002d54 = inttoptr i32 %v0_10002d50 to i32*
  store i32 %v0_10002d54, i32* %v2_10002d54, align 4
  br label %dec_label_pc_10002d5c

dec_label_pc_10002d5c:                            ; preds = %entry, %dec_label_pc_10002d50
  %v0_10002d6c = phi i32 [ %v0_10002d40, %entry ], [ -1, %dec_label_pc_10002d50 ]
  ret i32 %v0_10002d6c

; uselistorder directives
  uselistorder label %dec_label_pc_10002d5c, { 1, 0 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002d88 = call i32 @__asm_mfcr()
  %v1_10002d8c = and i32 %v0_10002d88, 268435456
  %v3_10002d8c = icmp eq i32 %v1_10002d8c, 0
  store i32 %v0_10002d88, i32* %r31.global-to-local, align 4
  br i1 %v3_10002d8c, label %dec_label_pc_10002da4, label %dec_label_pc_10002d98

dec_label_pc_10002d98:                            ; preds = %entry
  %v0_10002d98 = call i32 @__errno_location()
  %v0_10002d9c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002d9c = inttoptr i32 %v0_10002d98 to i32*
  store i32 %v0_10002d9c, i32* %v2_10002d9c, align 4
  br label %dec_label_pc_10002da4

dec_label_pc_10002da4:                            ; preds = %entry, %dec_label_pc_10002d98
  %v0_10002db4 = phi i32 [ %v0_10002d88, %entry ], [ -1, %dec_label_pc_10002d98 ]
  ret i32 %v0_10002db4

; uselistorder directives
  uselistorder label %dec_label_pc_10002da4, { 1, 0 }
}

define i32 @unlink(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002dd0 = call i32 @__asm_mfcr()
  %v1_10002dd4 = and i32 %v0_10002dd0, 268435456
  %v3_10002dd4 = icmp eq i32 %v1_10002dd4, 0
  store i32 %v0_10002dd0, i32* %r31.global-to-local, align 4
  br i1 %v3_10002dd4, label %dec_label_pc_10002dec, label %dec_label_pc_10002de0

dec_label_pc_10002de0:                            ; preds = %entry
  %v0_10002de0 = call i32 @__errno_location()
  %v0_10002de4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002de4 = inttoptr i32 %v0_10002de0 to i32*
  store i32 %v0_10002de4, i32* %v2_10002de4, align 4
  br label %dec_label_pc_10002dec

dec_label_pc_10002dec:                            ; preds = %entry, %dec_label_pc_10002de0
  %v0_10002dfc = phi i32 [ %v0_10002dd0, %entry ], [ -1, %dec_label_pc_10002de0 ]
  ret i32 %v0_10002dfc

; uselistorder directives
  uselistorder label %dec_label_pc_10002dec, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10002e04 = call i32 @wait4(i32 0)
  ret i32 %v1_10002e04
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002e20 = call i32 @__asm_mfcr()
  %v1_10002e24 = and i32 %v0_10002e20, 268435456
  %v3_10002e24 = icmp eq i32 %v1_10002e24, 0
  store i32 %v0_10002e20, i32* %r31.global-to-local, align 4
  br i1 %v3_10002e24, label %dec_label_pc_10002e3c, label %dec_label_pc_10002e30

dec_label_pc_10002e30:                            ; preds = %entry
  %v0_10002e30 = call i32 @__errno_location()
  %v0_10002e34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e34 = inttoptr i32 %v0_10002e30 to i32*
  store i32 %v0_10002e34, i32* %v2_10002e34, align 4
  br label %dec_label_pc_10002e3c

dec_label_pc_10002e3c:                            ; preds = %entry, %dec_label_pc_10002e30
  %v0_10002e4c = phi i32 [ %v0_10002e20, %entry ], [ -1, %dec_label_pc_10002e30 ]
  ret i32 %v0_10002e4c

; uselistorder directives
  uselistorder label %dec_label_pc_10002e3c, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10002e50 = add i32 %arg1, 128
  %v1_10002e54 = mul i32 %arg1, 2
  %v2_10002e58 = icmp ugt i32 %v1_10002e50, 383
  %v0_10002e5c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10002e58, i32 %v0_10002e5c)
  %v3_10002e64 = load i32, i32* inttoptr (i32 268551012 to i32*), align 4
  %v2_10002e68 = add i32 %v1_10002e54, %v3_10002e64
  %v3_10002e68 = inttoptr i32 %v2_10002e68 to i16*
  %v4_10002e68 = load i16, i16* %v3_10002e68, align 2
  %v5_10002e68 = sext i16 %v4_10002e68 to i32
  ret i32 %v5_10002e68
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1001c3e0.56 to i32)
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10002e84 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268447376, i32* @lr, align 4
  %v1_10002e8c = call i32 @times(i32 %v2_10002e84)
  %v3_10002e94 = load i32, i32* %stack_var_-24, align 4
  %v2_10002e98 = add i32 %v3_10002e94, %tmp
  %v1_10002ea0 = mul i32 %v2_10002e98, 10000
  %v1_10002eac = and i32 %v1_10002ea0, 2147483632
  ret i32 %v1_10002eac
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10002eb4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10002eb4, i32* %r9.global-to-local, align 4
  %v4_10002eb4 = icmp eq i32 %v1_10002eb4, 0
  %v1_10002ebc = add i32 %arg1, -4
  store i32 %v1_10002ebc, i32* %r11.global-to-local, align 4
  %v1_10002ec0 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10002ec4 = call i32 @__asm_rlwimi(i32 %v1_10002ec0, i32 16, i32 0, i32 15)
  %v2_10002ec4 = trunc i32 %v1_10002ec4 to i8
  br i1 %v4_10002eb4, label %dec_label_pc_10002eec, label %dec_label_pc_10002ecc

dec_label_pc_10002ecc:                            ; preds = %entry
  %v0_10002ecc = load i32, i32* %r11.global-to-local, align 4
  %v1_10002ecc = urem i32 %v0_10002ecc, 4
  %v3_10002ecc = icmp eq i32 %v1_10002ecc, 0
  br i1 %v3_10002ecc, label %dec_label_pc_10002ecc.dec_label_pc_10002ed4_crit_edge, label %dec_label_pc_10002f1c

dec_label_pc_10002ecc.dec_label_pc_10002ed4_crit_edge: ; preds = %dec_label_pc_10002ecc
  %v0_10002ed4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002ed4

dec_label_pc_10002ed4:                            ; preds = %dec_label_pc_10002f34.dec_label_pc_10002ed4_crit_edge, %dec_label_pc_10002ecc.dec_label_pc_10002ed4_crit_edge
  %v0_10002ed8.pre = phi i32 [ %v0_10002ecc, %dec_label_pc_10002ecc.dec_label_pc_10002ed4_crit_edge ], [ %v0_10002ed8.pre.pre, %dec_label_pc_10002f34.dec_label_pc_10002ed4_crit_edge ]
  %v0_10002ed4 = phi i32 [ %v0_10002ed4.pre, %dec_label_pc_10002ecc.dec_label_pc_10002ed4_crit_edge ], [ %v1_10002f34, %dec_label_pc_10002f34.dec_label_pc_10002ed4_crit_edge ]
  store i32 %v0_10002ed4, i32* %ctr.global-to-local, align 4
  %v1_10002edc = sext i8 %v2_10002ec4 to i32
  br label %dec_label_pc_10002ed8

dec_label_pc_10002ed8:                            ; preds = %dec_label_pc_10002ed8, %dec_label_pc_10002ed4
  %v0_10002ed8 = phi i32 [ %v1_10002ee4, %dec_label_pc_10002ed8 ], [ %v0_10002ed8.pre, %dec_label_pc_10002ed4 ]
  %v1_10002ed8 = add i32 %v0_10002ed8, 4
  store i32 %v1_10002ed8, i32* %r9.global-to-local, align 4
  %v4_10002edc = inttoptr i32 %v1_10002ed8 to i32*
  store i32 %v1_10002edc, i32* %v4_10002edc, align 4
  %v2_10002ee0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002ee0 = add i32 %v2_10002ee0, 4
  %v4_10002ee0 = inttoptr i32 %v3_10002ee0 to i32*
  store i32 %v1_10002edc, i32* %v4_10002ee0, align 4
  %v0_10002ee4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ee4 = add i32 %v0_10002ee4, 4
  store i32 %v1_10002ee4, i32* %r11.global-to-local, align 4
  %v0_10002ee8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002ee8 = add i32 %v0_10002ee8, -1
  store i32 %v1_10002ee8, i32* %ctr.global-to-local, align 4
  %v2_10002ee8 = icmp eq i32 %v1_10002ee8, 0
  br i1 %v2_10002ee8, label %dec_label_pc_10002eec, label %dec_label_pc_10002ed8

dec_label_pc_10002eec:                            ; preds = %dec_label_pc_10002ed8, %dec_label_pc_10002f34, %entry
  %v0_10002eec = load i32, i32* %r5.global-to-local, align 4
  %v1_10002eec = urem i32 %v0_10002eec, 8
  store i32 %v1_10002eec, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10002eec, 4
  br i1 %tmp, label %dec_label_pc_10002f00, label %dec_label_pc_10002ef8

dec_label_pc_10002ef8:                            ; preds = %dec_label_pc_10002eec
  %v1_10002ef8 = sext i8 %v2_10002ec4 to i32
  %v2_10002ef8 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002ef8 = add i32 %v2_10002ef8, 4
  %v4_10002ef8 = inttoptr i32 %v3_10002ef8 to i32*
  store i32 %v1_10002ef8, i32* %v4_10002ef8, align 4
  store i32 %v3_10002ef8, i32* %r11.global-to-local, align 4
  %v0_10002efc = load i32, i32* @r5, align 4
  %v1_10002efc = add i32 %v0_10002efc, -4
  store i32 %v1_10002efc, i32* @r5, align 4
  br label %dec_label_pc_10002f00

dec_label_pc_10002f00:                            ; preds = %dec_label_pc_10002eec, %dec_label_pc_10002ef8
  %v0_10002f00 = phi i32 [ %v1_10002eec, %dec_label_pc_10002eec ], [ %v1_10002efc, %dec_label_pc_10002ef8 ]
  %v3_10002f00 = icmp eq i32 %v0_10002f00, 0
  %v0_10002f04 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10002f00, i32 %v0_10002f04)
  %v0_10002f08 = load i32, i32* @r5, align 4
  store i32 %v0_10002f08, i32* %ctr.global-to-local, align 4
  %v0_10002f0c = load i32, i32* %r11.global-to-local, align 4
  %v1_10002f0c = add i32 %v0_10002f0c, 3
  store i32 %v1_10002f0c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002f10

dec_label_pc_10002f10:                            ; preds = %dec_label_pc_10002f10, %dec_label_pc_10002f00
  %v3_10002f10 = phi i32 [ %v4_10002f10, %dec_label_pc_10002f10 ], [ %v1_10002f0c, %dec_label_pc_10002f00 ]
  %v4_10002f10 = add i32 %v3_10002f10, 1
  %v5_10002f10 = inttoptr i32 %v4_10002f10 to i8*
  store i8 %v2_10002ec4, i8* %v5_10002f10, align 1
  store i32 %v4_10002f10, i32* %r9.global-to-local, align 4
  %v0_10002f14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002f14 = add i32 %v0_10002f14, -1
  store i32 %v1_10002f14, i32* %ctr.global-to-local, align 4
  %v2_10002f14 = icmp eq i32 %v1_10002f14, 0
  br i1 %v2_10002f14, label %dec_label_pc_10002f40, label %dec_label_pc_10002f10

dec_label_pc_10002f1c:                            ; preds = %dec_label_pc_10002ecc
  %v1_10002f1c = sub nsw i32 4, %v1_10002ecc
  store i32 %v1_10002f1c, i32* %ctr.global-to-local, align 4
  %v1_10002f24 = load i32, i32* %r5.global-to-local, align 4
  %v2_10002f24 = sub i32 %v1_10002f24, %v1_10002f1c
  store i32 %v2_10002f24, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10002f28

dec_label_pc_10002f28:                            ; preds = %dec_label_pc_10002f28, %dec_label_pc_10002f1c
  %v3_10002f28 = phi i32 [ %v1_10002f2c, %dec_label_pc_10002f28 ], [ %v0_10002ecc, %dec_label_pc_10002f1c ]
  %v4_10002f28 = add i32 %v3_10002f28, 4
  %v5_10002f28 = inttoptr i32 %v4_10002f28 to i8*
  store i8 %v2_10002ec4, i8* %v5_10002f28, align 1
  %v0_10002f2c = load i32, i32* %r11.global-to-local, align 4
  %v1_10002f2c = add i32 %v0_10002f2c, 1
  store i32 %v1_10002f2c, i32* %r11.global-to-local, align 4
  %v0_10002f30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002f30 = add i32 %v0_10002f30, -1
  store i32 %v1_10002f30, i32* %ctr.global-to-local, align 4
  %v2_10002f30 = icmp eq i32 %v1_10002f30, 0
  br i1 %v2_10002f30, label %dec_label_pc_10002f34, label %dec_label_pc_10002f28

dec_label_pc_10002f34:                            ; preds = %dec_label_pc_10002f28
  %v0_10002f34 = load i32, i32* %r5.global-to-local, align 4
  %v1_10002f34 = call i32 @__asm_rlwinm.(i32 %v0_10002f34, i32 29, i32 3, i32 31)
  store i32 %v1_10002f34, i32* %r9.global-to-local, align 4
  %v4_10002f34 = icmp eq i32 %v1_10002f34, 0
  br i1 %v4_10002f34, label %dec_label_pc_10002eec, label %dec_label_pc_10002f34.dec_label_pc_10002ed4_crit_edge

dec_label_pc_10002f34.dec_label_pc_10002ed4_crit_edge: ; preds = %dec_label_pc_10002f34
  %v0_10002ed8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10002ed4

dec_label_pc_10002f40:                            ; preds = %dec_label_pc_10002f10
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10002f34, { 1, 2, 0 }
  uselistorder i32 %v1_10002f30, { 1, 0 }
  uselistorder i32 %v1_10002f2c, { 1, 0 }
  uselistorder i32 %v1_10002f14, { 1, 0 }
  uselistorder i32 %v4_10002f10, { 1, 2, 0 }
  uselistorder i32 %v1_10002eec, { 2, 1, 0 }
  uselistorder i32 %v1_10002ee8, { 1, 0 }
  uselistorder i32 %v1_10002ee4, { 1, 0 }
  uselistorder i32 %v1_10002ecc, { 1, 0 }
  uselistorder i32 %v0_10002ecc, { 2, 1, 0 }
  uselistorder i8 %v2_10002ec4, { 2, 0, 3, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder label %dec_label_pc_10002f00, { 1, 0 }
  uselistorder label %dec_label_pc_10002eec, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10002f44 = urem i32 %arg1, 256
  store i32 %v1_10002f44, i32* %r4.global-to-local, align 4
  %v0_10002f642 = load i32, i32* @r3, align 4
  %v1_10002f643 = urem i32 %v0_10002f642, 4
  %v3_10002f645 = icmp eq i32 %v1_10002f643, 0
  br i1 %v3_10002f645, label %dec_label_pc_10002f6c, label %dec_label_pc_10002f4c

dec_label_pc_10002f4c:                            ; preds = %entry, %dec_label_pc_10002f60
  %v1_10002f50 = phi i32 [ %v0_10002f6c.pre, %dec_label_pc_10002f60 ], [ %v1_10002f44, %entry ]
  %v0_10002f4c = phi i32 [ %v1_10002f60, %dec_label_pc_10002f60 ], [ %v0_10002f642, %entry ]
  %v1_10002f4c = inttoptr i32 %v0_10002f4c to i8*
  %v2_10002f4c = load i8, i8* %v1_10002f4c, align 1
  %v3_10002f4c = zext i8 %v2_10002f4c to i32
  %v4_10002f50 = icmp eq i32 %v3_10002f4c, %v1_10002f50
  %v3_10002f54 = icmp eq i8 %v2_10002f4c, 0
  %v0_10002f58 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10002f50, i32 %v0_10002f58)
  br i1 %v3_10002f54, label %dec_label_pc_1000303c, label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002f4c
  %v0_10002f60 = load i32, i32* @r3, align 4
  %v1_10002f60 = add i32 %v0_10002f60, 1
  store i32 %v1_10002f60, i32* @r3, align 4
  %v1_10002f64 = urem i32 %v1_10002f60, 4
  %v3_10002f64 = icmp eq i32 %v1_10002f64, 0
  %v0_10002f6c.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10002f64, label %dec_label_pc_10002f6c, label %dec_label_pc_10002f4c

dec_label_pc_10002f6c:                            ; preds = %dec_label_pc_10002f60, %entry
  %v0_10002f8410 = phi i32 [ %v0_10002f642, %entry ], [ %v1_10002f60, %dec_label_pc_10002f60 ]
  %v0_10002f6c = phi i32 [ %v1_10002f44, %entry ], [ %v0_10002f6c.pre, %dec_label_pc_10002f60 ]
  %v1_10002f6c = mul i32 %v0_10002f6c, 256
  %v2_10002f74 = or i32 %v1_10002f6c, %v0_10002f6c
  %v1_10002f7c = mul i32 %v2_10002f74, 65536
  %v2_10002f80 = or i32 %v1_10002f7c, %v2_10002f74
  br label %dec_label_pc_10002f84

dec_label_pc_10002f84:                            ; preds = %dec_label_pc_10002f84, %dec_label_pc_10003038, %dec_label_pc_10002f6c
  %v0_10002fdc = phi i32 [ %v0_10002f8410, %dec_label_pc_10002f6c ], [ %v1_10002f88, %dec_label_pc_10003038 ], [ %v1_10002f88, %dec_label_pc_10002f84 ]
  %v1_10002f84 = inttoptr i32 %v0_10002fdc to i32*
  %v2_10002f84 = load i32, i32* %v1_10002f84, align 4
  %v1_10002f88 = add i32 %v0_10002fdc, 4
  %v2_10002f90 = xor i32 %v2_10002f84, %v2_10002f80
  %v1_10002f94 = add i32 %v2_10002f84, 2130640639
  %v2_10002f9c = xor i32 %v1_10002f94, %v2_10002f84
  %v1_10002fa0 = add i32 %v2_10002f90, 2130640639
  %v2_10002fa4 = and i32 %v2_10002f9c, -2130640640
  %v3_10002fa4 = xor i32 %v2_10002fa4, -2130640640
  %v2_10002fa8 = xor i32 %v1_10002fa0, %v2_10002f90
  %v2_10002fac = and i32 %v2_10002fa8, -2130640640
  %v3_10002fac = xor i32 %v2_10002fac, -2130640640
  %v1_10002fb8 = add i32 %v0_10002fdc, 1
  %tmp = or i32 %v3_10002fac, %v3_10002fa4
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_10002f84, label %dec_label_pc_10002fc4

dec_label_pc_10002fc4:                            ; preds = %dec_label_pc_10002f84
  %v2_10002fc4 = inttoptr i32 %v0_10002fdc to i8*
  %v3_10002fc4 = load i8, i8* %v2_10002fc4, align 1
  %v4_10002fc4 = zext i8 %v3_10002fc4 to i32
  %v1_10002fc8 = add i32 %v0_10002fdc, 2
  %v1_10002fcc = add i32 %v0_10002fdc, 3
  %v4_10002fd0 = icmp eq i32 %v4_10002fc4, %v0_10002f6c
  br i1 %v4_10002fd0, label %dec_label_pc_10002fdc, label %dec_label_pc_10002fe4

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_10002fc4
  ret i32 %v0_10002fdc

dec_label_pc_10002fe4:                            ; preds = %dec_label_pc_10002fc4
  %v3_10002fd4 = icmp eq i8 %v3_10002fc4, 0
  br i1 %v3_10002fd4, label %dec_label_pc_1000303c, label %dec_label_pc_10002fe8

dec_label_pc_10002fe8:                            ; preds = %dec_label_pc_10002fe4
  %v2_10002fe8 = inttoptr i32 %v1_10002fb8 to i8*
  %v3_10002fe8 = load i8, i8* %v2_10002fe8, align 1
  %v4_10002fe8 = zext i8 %v3_10002fe8 to i32
  %v4_10002fec = icmp eq i32 %v4_10002fe8, %v0_10002f6c
  br i1 %v4_10002fec, label %dec_label_pc_10002ff8, label %dec_label_pc_10003000

dec_label_pc_10002ff8:                            ; preds = %dec_label_pc_10002fe8
  ret i32 %v1_10002fb8

dec_label_pc_10003000:                            ; preds = %dec_label_pc_10002fe8
  %v3_10002ff0 = icmp eq i8 %v3_10002fe8, 0
  br i1 %v3_10002ff0, label %dec_label_pc_1000303c, label %dec_label_pc_10003004

dec_label_pc_10003004:                            ; preds = %dec_label_pc_10003000
  %v2_10003004 = inttoptr i32 %v1_10002fc8 to i8*
  %v3_10003004 = load i8, i8* %v2_10003004, align 1
  %v4_10003004 = zext i8 %v3_10003004 to i32
  %v4_10003008 = icmp eq i32 %v4_10003004, %v0_10002f6c
  br i1 %v4_10003008, label %dec_label_pc_10003014, label %dec_label_pc_1000301c

dec_label_pc_10003014:                            ; preds = %dec_label_pc_10003004
  ret i32 %v1_10002fc8

dec_label_pc_1000301c:                            ; preds = %dec_label_pc_10003004
  %v3_1000300c = icmp eq i8 %v3_10003004, 0
  br i1 %v3_1000300c, label %dec_label_pc_1000303c, label %dec_label_pc_10003020

dec_label_pc_10003020:                            ; preds = %dec_label_pc_1000301c
  %v2_10003020 = inttoptr i32 %v1_10002fcc to i8*
  %v3_10003020 = load i8, i8* %v2_10003020, align 1
  %v4_10003020 = zext i8 %v3_10003020 to i32
  %v4_10003024 = icmp eq i32 %v4_10003020, %v0_10002f6c
  br i1 %v4_10003024, label %dec_label_pc_10003030, label %dec_label_pc_10003038

dec_label_pc_10003030:                            ; preds = %dec_label_pc_10003020
  ret i32 %v1_10002fcc

dec_label_pc_10003038:                            ; preds = %dec_label_pc_10003020
  %v3_10003028 = icmp eq i8 %v3_10003020, 0
  br i1 %v3_10003028, label %dec_label_pc_1000303c, label %dec_label_pc_10002f84

dec_label_pc_1000303c:                            ; preds = %dec_label_pc_10002f4c, %dec_label_pc_10003038, %dec_label_pc_1000301c, %dec_label_pc_10003000, %dec_label_pc_10002fe4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10002f88, { 1, 0 }
  uselistorder i32 %v2_10002f84, { 0, 2, 1 }
  uselistorder i32 %v0_10002fdc, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_10002f74, { 1, 0 }
  uselistorder i32 %v0_10002f6c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10002f60, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10002f642, { 2, 1, 0 }
  uselistorder i32 %v1_10002f44, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000303c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10002f84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002f4c, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10003050.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10003048

dec_label_pc_10003048:                            ; preds = %dec_label_pc_1000306c, %entry
  %v0_10003050 = phi i32 [ %v1_10003054, %dec_label_pc_1000306c ], [ %v0_10003050.pre, %entry ]
  %v0_10003048 = phi i32 [ %v1_1000304c, %dec_label_pc_1000306c ], [ %tmp, %entry ]
  %v1_10003048 = inttoptr i32 %v0_10003048 to i8*
  %v2_10003048 = load i8, i8* %v1_10003048, align 1
  %v3_10003048 = zext i8 %v2_10003048 to i32
  %v1_10003050 = inttoptr i32 %v0_10003050 to i8*
  %v2_10003050 = load i8, i8* %v1_10003050, align 1
  %v3_10003050 = zext i8 %v2_10003050 to i32
  %v3_10003058 = icmp eq i8 %v2_10003048, 0
  br i1 %v3_10003058, label %dec_label_pc_10003064, label %dec_label_pc_1000306c

dec_label_pc_10003064:                            ; preds = %dec_label_pc_10003048
  %v1_10003064 = sub nsw i32 0, %v3_10003050
  ret i32 %v1_10003064

dec_label_pc_1000306c:                            ; preds = %dec_label_pc_10003048
  %v4_1000305c = icmp eq i8 %v2_10003048, %v2_10003050
  %v1_10003054 = add i32 %v0_10003050, 1
  %v1_1000304c = add i32 %v0_10003048, 1
  br i1 %v4_1000305c, label %dec_label_pc_10003048, label %dec_label_pc_10003070

dec_label_pc_10003070:                            ; preds = %dec_label_pc_1000306c
  %v2_10003070 = sub nsw i32 %v3_10003048, %v3_10003050
  ret i32 %v2_10003070

; uselistorder directives
  uselistorder i32 %v3_10003050, { 1, 0 }
  uselistorder i32 %v0_10003048, { 1, 0 }
  uselistorder i32 %v0_10003050, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10003078 = add i32 %arg1, -1
  %v1_1000307c = sub i32 %v2_10003078, %tmp
  store i32 %v1_1000307c, i32* %r9.global-to-local, align 4
  %v2_100030804 = load i8, i8* %arg2, align 1
  %v1_100030846 = add i32 %tmp, 1
  store i32 %v1_100030846, i32* %r4.global-to-local, align 4
  %v3_100030888 = icmp eq i8 %v2_100030804, 0
  store i1 %v3_100030888, i1* %cr7_eq.global-to-local, align 1
  %v5_1000308c9 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100030804, i8* %v5_1000308c9, align 1
  %v0_1000309010 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000309010, label %dec_label_pc_10003094, label %dec_label_pc_10003080.dec_label_pc_10003080_crit_edge

dec_label_pc_10003080.dec_label_pc_10003080_crit_edge: ; preds = %entry, %dec_label_pc_10003080.dec_label_pc_10003080_crit_edge
  %v0_10003080.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000308c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10003080 = inttoptr i32 %v0_10003080.pre to i8*
  %v2_10003080 = load i8, i8* %v1_10003080, align 1
  %v1_10003084 = add i32 %v0_10003080.pre, 1
  store i32 %v1_10003084, i32* %r4.global-to-local, align 4
  %v3_10003088 = icmp eq i8 %v2_10003080, 0
  store i1 %v3_10003088, i1* %cr7_eq.global-to-local, align 1
  %v4_1000308c = add i32 %v1_10003084, %v2_1000308c.pre
  %v5_1000308c = inttoptr i32 %v4_1000308c to i8*
  store i8 %v2_10003080, i8* %v5_1000308c, align 1
  %v0_10003090 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003090, label %dec_label_pc_10003094, label %dec_label_pc_10003080.dec_label_pc_10003080_crit_edge

dec_label_pc_10003094:                            ; preds = %dec_label_pc_10003080.dec_label_pc_10003080_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003080.dec_label_pc_10003080_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_10003098 = load i32, i32* @r3, align 4
  %v1_100030b03 = urem i32 %v0_10003098, 4
  %v3_100030b05 = icmp eq i32 %v1_100030b03, 0
  br i1 %v3_100030b05, label %dec_label_pc_100030b8, label %dec_label_pc_100030a0

dec_label_pc_100030a0:                            ; preds = %entry, %dec_label_pc_100030ac
  %v0_100030ac = phi i32 [ %v1_100030ac, %dec_label_pc_100030ac ], [ %v0_10003098, %entry ]
  %v1_100030a0 = inttoptr i32 %v0_100030ac to i8*
  %v2_100030a0 = load i8, i8* %v1_100030a0, align 1
  %v3_100030a4 = icmp eq i8 %v2_100030a0, 0
  br i1 %v3_100030a4, label %dec_label_pc_100030ec, label %dec_label_pc_100030ac

dec_label_pc_100030ac:                            ; preds = %dec_label_pc_100030a0
  %v1_100030ac = add i32 %v0_100030ac, 1
  %v1_100030b0 = urem i32 %v1_100030ac, 4
  %v3_100030b0 = icmp eq i32 %v1_100030b0, 0
  br i1 %v3_100030b0, label %dec_label_pc_100030b8, label %dec_label_pc_100030a0

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_100030ac, %entry
  %v0_100030bc = phi i32 [ %v0_10003098, %entry ], [ %v1_100030ac, %dec_label_pc_100030ac ]
  br label %dec_label_pc_100030c4

dec_label_pc_100030c4:                            ; preds = %dec_label_pc_10003124, %dec_label_pc_100030c4, %dec_label_pc_100030b8
  %v1_10003100 = phi i32 [ %v0_100030bc, %dec_label_pc_100030b8 ], [ %v1_100030c8, %dec_label_pc_100030c4 ], [ %v1_100030c8, %dec_label_pc_10003124 ]
  %v1_100030c4 = inttoptr i32 %v1_10003100 to i32*
  %v2_100030c4 = load i32, i32* %v1_100030c4, align 4
  %v1_100030c8 = add i32 %v1_10003100, 4
  %v1_100030d4 = add i32 %v2_100030c4, -16843009
  %v2_100030d8 = and i32 %v1_100030d4, -2139062144
  %v5_100030d8 = icmp eq i32 %v2_100030d8, 0
  br i1 %v5_100030d8, label %dec_label_pc_100030c4, label %dec_label_pc_100030e0

dec_label_pc_100030e0:                            ; preds = %dec_label_pc_100030c4
  %v2_100030e0 = inttoptr i32 %v1_10003100 to i8*
  %v3_100030e0 = load i8, i8* %v2_100030e0, align 1
  %v3_100030e4 = icmp eq i8 %v3_100030e0, 0
  br i1 %v3_100030e4, label %dec_label_pc_100030ec, label %dec_label_pc_100030f4

dec_label_pc_100030ec:                            ; preds = %dec_label_pc_100030a0, %dec_label_pc_100030e0
  %v1_100030ec = phi i32 [ %v1_10003100, %dec_label_pc_100030e0 ], [ %v0_100030ac, %dec_label_pc_100030a0 ]
  %v2_100030ec = sub i32 %v1_100030ec, %v0_10003098
  ret i32 %v2_100030ec

dec_label_pc_100030f4:                            ; preds = %dec_label_pc_100030e0
  %v1_100030f4 = add i32 %v1_10003100, 1
  %v2_100030f4 = inttoptr i32 %v1_100030f4 to i8*
  %v3_100030f4 = load i8, i8* %v2_100030f4, align 1
  %v3_100030f8 = icmp eq i8 %v3_100030f4, 0
  br i1 %v3_100030f8, label %dec_label_pc_10003100, label %dec_label_pc_1000310c

dec_label_pc_10003100:                            ; preds = %dec_label_pc_100030f4
  %v2_10003100 = sub i32 %v1_10003100, %v0_10003098
  %v1_10003104 = add i32 %v2_10003100, 1
  ret i32 %v1_10003104

dec_label_pc_1000310c:                            ; preds = %dec_label_pc_100030f4
  %v1_1000310c = add i32 %v1_10003100, 2
  %v2_1000310c = inttoptr i32 %v1_1000310c to i8*
  %v3_1000310c = load i8, i8* %v2_1000310c, align 1
  %v3_10003110 = icmp eq i8 %v3_1000310c, 0
  br i1 %v3_10003110, label %dec_label_pc_10003118, label %dec_label_pc_10003124

dec_label_pc_10003118:                            ; preds = %dec_label_pc_1000310c
  %v2_10003118 = sub i32 %v1_10003100, %v0_10003098
  %v1_1000311c = add i32 %v2_10003118, 2
  ret i32 %v1_1000311c

dec_label_pc_10003124:                            ; preds = %dec_label_pc_1000310c
  %v1_10003124 = add i32 %v1_10003100, 3
  %v2_10003124 = inttoptr i32 %v1_10003124 to i8*
  %v3_10003124 = load i8, i8* %v2_10003124, align 1
  %v3_10003128 = icmp eq i8 %v3_10003124, 0
  br i1 %v3_10003128, label %dec_label_pc_10003130, label %dec_label_pc_100030c4

dec_label_pc_10003130:                            ; preds = %dec_label_pc_10003124
  %v2_10003130 = sub i32 %v1_10003100, %v0_10003098
  %v1_10003134 = add i32 %v2_10003130, 3
  ret i32 %v1_10003134

; uselistorder directives
  uselistorder i32 %v1_100030c8, { 1, 0 }
  uselistorder i32 %v1_10003100, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_100030ac, { 1, 0, 2 }
  uselistorder i32 %v0_10003098, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100030ec, { 1, 0 }
  uselistorder label %dec_label_pc_100030a0, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_10003148 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_10003148
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1001c3c0.57 to i32), i32* @r5, align 4
  %v1_10003154 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1001c3c0.57 to i32))
  ret i32 %v1_10003154
}

define i32 @ntohl() local_unnamed_addr {
entry:
  %v0_10003158 = load i32, i32* @r3, align 4
  ret i32 %v0_10003158
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000315c = load i32, i32* @r3, align 4
  ret i32 %v0_1000315c
}

define i32 @htonl() local_unnamed_addr {
entry:
  %v0_10003160 = load i32, i32* @r3, align 4
  ret i32 %v0_10003160
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10003164 = load i32, i32* @r3, align 4
  ret i32 %v0_10003164
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_10003170 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10003170, i32* @r4, align 4
  store i32 268448124, i32* @lr, align 4
  %v1_10003178 = bitcast i32* %stack_var_-24 to i8*
  %v2_10003178 = call i32 @inet_aton(i8* %v1_10003178)
  %v3_1000317c = icmp eq i32 %v2_10003178, 0
  br i1 %v3_1000317c, label %dec_label_pc_1000318c, label %dec_label_pc_10003188

dec_label_pc_10003188:                            ; preds = %entry
  %v3_10003188 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000318c

dec_label_pc_1000318c:                            ; preds = %entry, %dec_label_pc_10003188
  %v0_10003198 = phi i32 [ -1, %entry ], [ %v3_10003188, %dec_label_pc_10003188 ]
  ret i32 %v0_10003198

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000318c, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_100031b0 = call i32 @__GI___h_errno_location()
  %v2_100031c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448216, i32* @lr, align 4
  %v7_100031d4 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1001c5f4.58, i32 ptrtoint (i32* @global_var_1001c428.59 to i32), i32 460, i32 %v2_100031c0, i32 %v0_100031b0)
  %v3_100031dc = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_100031dc
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_100031f4 = load i32, i32* @lr, align 4
  store i32 %v0_100031f4, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_100031fc = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000321c = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000321c, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_100031fc, label %dec_label_pc_10003520, label %dec_label_pc_10003228

dec_label_pc_10003228:                            ; preds = %entry
  %v0_10003228 = call i32 @__errno_location()
  store i32 %v0_10003228, i32* %r3.global-to-local, align 4
  %v1_10003230 = inttoptr i32 %v0_10003228 to i32*
  %v2_10003230 = load i32, i32* %v1_10003230, align 4
  store i32 %v2_10003230, i32* @r27, align 4
  store i32 %v0_10003228, i32* %r28.global-to-local, align 4
  %v0_10003238 = load i32, i32* @r31, align 4
  store i32 %v0_10003238, i32* %v1_10003230, align 4
  %v0_1000323c = load i32, i32* %r26.global-to-local, align 4
  %v0_10003240 = load i32, i32* @r23, align 4
  store i32 %v0_10003240, i32* %r3.global-to-local, align 4
  %v0_10003244 = load i32, i32* %r30.global-to-local, align 4
  %v0_10003248 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000324c = load i32, i32* %r20.global-to-local, align 4
  %v0_10003250 = load i32, i32* @r24, align 4
  store i32 268448344, i32* @lr, align 4
  %v7_10003254 = call i32 @__get_hosts_byname_r(i32 %v0_10003240, i32 2, i32 %v0_1000323c, i32 %v0_10003244, i32 %v0_10003248, i32 %v0_1000324c, i32 %v0_10003250)
  store i32 %v7_10003254, i32* %r3.global-to-local, align 4
  %v3_10003258 = icmp eq i32 %v7_10003254, 0
  br i1 %v3_10003258, label %dec_label_pc_10003520, label %dec_label_pc_10003260

dec_label_pc_10003260:                            ; preds = %dec_label_pc_10003228
  %v0_10003260 = load i32, i32* @r24, align 4
  %v1_10003260 = inttoptr i32 %v0_10003260 to i32*
  %v2_10003260 = load i32, i32* %v1_10003260, align 4
  store i32 %v2_10003260, i32* %r0.global-to-local, align 4
  %v3_10003264 = icmp eq i32 %v2_10003260, 1
  br i1 %v3_10003264, label %dec_label_pc_10003288, label %dec_label_pc_1000326c

dec_label_pc_1000326c:                            ; preds = %dec_label_pc_10003260
  %v3_1000326c = icmp eq i32 %v2_10003260, 4
  br i1 %v3_1000326c, label %dec_label_pc_10003288, label %dec_label_pc_10003274

dec_label_pc_10003274:                            ; preds = %dec_label_pc_1000326c
  %v3_10003274 = icmp eq i32 %v2_10003260, -1
  br i1 %v3_10003274, label %dec_label_pc_1000327c, label %dec_label_pc_10003520

dec_label_pc_1000327c:                            ; preds = %dec_label_pc_10003274
  %v0_1000327c = load i32, i32* @r28, align 4
  %v1_1000327c = inttoptr i32 %v0_1000327c to i32*
  %v2_1000327c = load i32, i32* %v1_1000327c, align 4
  store i32 %v2_1000327c, i32* %r0.global-to-local, align 4
  %v3_10003280 = icmp eq i32 %v2_1000327c, 2
  br i1 %v3_10003280, label %dec_label_pc_10003288, label %dec_label_pc_10003520

dec_label_pc_10003288:                            ; preds = %dec_label_pc_1000327c, %dec_label_pc_1000326c, %dec_label_pc_10003260
  %v0_10003288 = load i32, i32* @r30, align 4
  %v1_10003288 = sub i32 0, %v0_10003288
  store i32 %v1_10003288, i32* %r0.global-to-local, align 4
  %v0_1000328c = load i32, i32* @r27, align 4
  %v1_1000328c = load i32, i32* @r28, align 4
  %v2_1000328c = inttoptr i32 %v1_1000328c to i32*
  store i32 %v0_1000328c, i32* %v2_1000328c, align 4
  %v0_10003290 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003290 = urem i32 %v0_10003290, 4
  store i32 %v1_10003290, i32* %r0.global-to-local, align 4
  %v3_10003290 = icmp eq i32 %v1_10003290, 0
  %v0_100032a8.pre = load i32, i32* @r29, align 4
  br i1 %v3_10003290, label %dec_label_pc_100032a8, label %dec_label_pc_10003298

dec_label_pc_10003298:                            ; preds = %dec_label_pc_10003288
  %v2_10003298 = icmp ult i32 %v0_100032a8.pre, %v1_10003290
  br i1 %v2_10003298, label %dec_label_pc_1000351c, label %dec_label_pc_100032a0

dec_label_pc_100032a0:                            ; preds = %dec_label_pc_10003298
  %v2_100032a0 = sub i32 %v0_100032a8.pre, %v1_10003290
  store i32 %v2_100032a0, i32* @r29, align 4
  %v0_100032a4 = load i32, i32* @r30, align 4
  %v2_100032a4 = add i32 %v0_100032a4, %v1_10003290
  store i32 %v2_100032a4, i32* @r30, align 4
  br label %dec_label_pc_100032a8

dec_label_pc_100032a8:                            ; preds = %dec_label_pc_10003288, %dec_label_pc_100032a0
  %v0_100032a8 = phi i32 [ %v2_100032a0, %dec_label_pc_100032a0 ], [ %v0_100032a8.pre, %dec_label_pc_10003288 ]
  %v1_100032b0 = load i32, i32* @r24, align 4
  %v2_100032b0 = inttoptr i32 %v1_100032b0 to i32*
  store i32 -1, i32* %v2_100032b0, align 4
  %tmp29 = icmp ult i32 %v0_100032a8, 4
  br i1 %tmp29, label %dec_label_pc_1000351c, label %dec_label_pc_100032b8

dec_label_pc_100032b8:                            ; preds = %dec_label_pc_100032a8
  %v0_100032b8 = load i32, i32* @r29, align 4
  %v1_100032b8 = add i32 %v0_100032b8, -4
  store i32 %v1_100032b8, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_100032b8, 8
  br i1 %tmp30, label %dec_label_pc_1000351c, label %dec_label_pc_100032c4

dec_label_pc_100032c4:                            ; preds = %dec_label_pc_100032b8
  %v1_100032c4 = add i32 %v0_100032b8, -12
  store i32 %v1_100032c4, i32* %r0.global-to-local, align 4
  %v0_100032c8 = load i32, i32* @r30, align 4
  %v1_100032c8 = add i32 %v0_100032c8, 4
  store i32 %v1_100032c8, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_100032d4 = inttoptr i32 %v1_100032c8 to i32*
  store i32 %v0_100032c8, i32* %v3_100032d4, align 4
  %v0_100032d8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100032d8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100032d8 = add i32 %v1_100032d8, 4
  %v3_100032d8 = inttoptr i32 %v2_100032d8 to i32*
  store i32 %v0_100032d8, i32* %v3_100032d8, align 4
  %tmp31 = icmp ult i32 %v1_100032c4, 32
  br i1 %tmp31, label %dec_label_pc_1000351c, label %dec_label_pc_100032e0

dec_label_pc_100032e0:                            ; preds = %dec_label_pc_100032c4
  %v0_100032e0 = load i32, i32* @r29, align 4
  %v1_100032e0 = add i32 %v0_100032e0, -44
  %tmp32 = icmp ult i32 %v1_100032e0, 256
  br i1 %tmp32, label %dec_label_pc_1000351c, label %dec_label_pc_100032ec

dec_label_pc_100032ec:                            ; preds = %dec_label_pc_100032e0
  %v0_100032ec = load i32, i32* @r30, align 4
  %v1_100032ec = add i32 %v0_100032ec, 44
  store i32 %v1_100032ec, i32* @r31, align 4
  %v0_100032f0 = load i32, i32* @r23, align 4
  store i32 %v0_100032f0, i32* @r4, align 4
  %v1_100032f8 = add i32 %v0_100032ec, 12
  store i32 %v1_100032f8, i32* %r21.global-to-local, align 4
  store i32 %v1_100032ec, i32* %r3.global-to-local, align 4
  store i32 268448516, i32* @lr, align 4
  %v3_10003300 = call i32 @strncpy(i32 %v1_100032ec, i32 %v0_100032f0, i32 %v1_100032e0)
  %v0_10003304 = load i32, i32* @r31, align 4
  %v1_10003304 = load i32, i32* @r30, align 4
  %v2_10003304 = add i32 %v1_10003304, 12
  %v3_10003304 = inttoptr i32 %v2_10003304 to i32*
  store i32 %v0_10003304, i32* %v3_10003304, align 4
  %v0_10003308 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003308 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003308 = add i32 %v1_10003308, 4
  %v3_10003308 = inttoptr i32 %v2_10003308 to i32*
  store i32 %v0_10003308, i32* %v3_10003308, align 4
  %v0_1000330c = load i32, i32* @r23, align 4
  store i32 %v0_1000330c, i32* %r3.global-to-local, align 4
  %v0_10003310 = load i32, i32* @r30, align 4
  store i32 %v0_10003310, i32* @r4, align 4
  store i32 268448536, i32* @lr, align 4
  %v2_10003314 = inttoptr i32 %v0_1000330c to i8*
  %v3_10003314 = call i32 @inet_aton(i8* %v2_10003314)
  store i32 %v3_10003314, i32* %r3.global-to-local, align 4
  store i32 %v3_10003314, i32* %r22.global-to-local, align 4
  %v3_10003318 = icmp eq i32 %v3_10003314, 0
  br i1 %v3_10003318, label %dec_label_pc_1000334c, label %dec_label_pc_10003320

dec_label_pc_10003320:                            ; preds = %dec_label_pc_100032ec
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10003328 = load i32, i32* @r26, align 4
  %v2_10003328 = add i32 %v1_10003328, 8
  %v3_10003328 = inttoptr i32 %v2_10003328 to i32*
  store i32 2, i32* %v3_10003328, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10003330 = load i32, i32* @r31, align 4
  %v1_10003330 = load i32, i32* @r26, align 4
  %v2_10003330 = inttoptr i32 %v1_10003330 to i32*
  store i32 %v0_10003330, i32* %v2_10003330, align 4
  %v0_10003334 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003334 = load i32, i32* @r26, align 4
  %v2_10003334 = add i32 %v1_10003334, 12
  %v3_10003334 = inttoptr i32 %v2_10003334 to i32*
  store i32 %v0_10003334, i32* %v3_10003334, align 4
  %v0_10003338 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003338 = load i32, i32* @r26, align 4
  %v2_10003338 = add i32 %v1_10003338, 16
  %v3_10003338 = inttoptr i32 %v2_10003338 to i32*
  store i32 %v0_10003338, i32* %v3_10003338, align 4
  %v0_1000333c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000333c = load i32, i32* @r26, align 4
  %v2_1000333c = add i32 %v1_1000333c, 4
  %v3_1000333c = inttoptr i32 %v2_1000333c to i32*
  store i32 %v0_1000333c, i32* %v3_1000333c, align 4
  %v0_10003340 = load i32, i32* @r26, align 4
  %v1_10003340 = load i32, i32* @r20, align 4
  %v2_10003340 = inttoptr i32 %v1_10003340 to i32*
  store i32 %v0_10003340, i32* %v2_10003340, align 4
  %v0_10003344 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003344 = load i32, i32* @r24, align 4
  %v2_10003344 = inttoptr i32 %v1_10003344 to i32*
  store i32 %v0_10003344, i32* %v2_10003344, align 4
  br label %dec_label_pc_10003520

dec_label_pc_1000334c:                            ; preds = %dec_label_pc_100032ec
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268448596, i32* @lr, align 4
  %v0_10003350 = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_1001c200.60 to i32), i32* %r29.global-to-local, align 4
  %v2_10003358 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_10003358, i32* %r28.global-to-local, align 4
  store i32 %v2_10003358, i32* @r3, align 4
  %v0_1000336c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1001c200.60 to i32), i32* %r3.global-to-local, align 4
  %v0_10003374 = call i32 @__pthread_return_0()
  %v3_1000337c = load i32, i32* @global_var_1001c3ec.62, align 4
  store i32 %v3_1000337c, i32* %r29.global-to-local, align 4
  store i32 %v2_10003358, i32* @r3, align 4
  %v0_10003388 = call i32 @__pthread_return_void()
  %v0_10003390 = load i32, i32* @r23, align 4
  store i32 %v0_10003390, i32* %r3.global-to-local, align 4
  %v2_100033a0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_100033a4 = ptrtoint i32* %stack_var_-100 to i32
  %v0_100033a8 = load i32, i32* %r22.global-to-local, align 4
  store i32 268448696, i32* @lr, align 4
  %v6_100033b4 = inttoptr i32 %v0_10003390 to i8*
  %v7_100033b4 = call i32 @__dns_lookup(i8* %v6_100033b4, i32 1, i32 %v3_1000337c, i32 ptrtoint (i32* @global_var_1001e6e0.63 to i32), i32 %v2_100033a0, i32 %v2_100033a4)
  store i32 %v7_100033b4, i32* %r3.global-to-local, align 4
  %v1_100033b8 = icmp slt i32 %v7_100033b4, 0
  br i1 %v1_100033b8, label %dec_label_pc_10003500, label %dec_label_pc_100033c0

dec_label_pc_100033c0:                            ; preds = %dec_label_pc_1000334c
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_100033c8 = add i32 %tmp19, 4
  %v2_100033cc = mul i32 %v0_100033a8, %v1_100033c8
  %v1_100033d0 = add i32 %v2_100033cc, 256
  %v1_100033d4 = load i32, i32* @r27, align 4
  %v3_100033d4 = icmp ugt i32 %v1_100033d0, %v1_100033d4
  br i1 %v3_100033d4, label %dec_label_pc_100033dc, label %dec_label_pc_100033f8

dec_label_pc_100033dc:                            ; preds = %dec_label_pc_100033c0
  %v3_100033dc = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100033dc, i32* %r3.global-to-local, align 4
  store i32 268448740, i32* @lr, align 4
  %v1_100033e0 = call i32 @free(i32 %v3_100033dc)
  %v3_100033e4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100033e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100033ec.64 to i32), i32* @lr, align 4
  %v1_100033e8 = call i32 @free(i32 %v3_100033e4)
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_100033f0 = load i32, i32* @r19, align 4
  %v1_100033f0 = load i32, i32* @r24, align 4
  %v2_100033f0 = inttoptr i32 %v1_100033f0 to i32*
  store i32 %v0_100033f0, i32* %v2_100033f0, align 4
  br label %dec_label_pc_10003520

dec_label_pc_100033f8:                            ; preds = %dec_label_pc_100033c0
  %v3_100033f8 = icmp eq i32 %v0_100033a8, 0
  br i1 %v3_100033f8, label %dec_label_pc_100033f8.dec_label_pc_1000349c_crit_edge, label %dec_label_pc_10003400

dec_label_pc_100033f8.dec_label_pc_1000349c_crit_edge: ; preds = %dec_label_pc_100033f8
  %v0_100034a4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000349c

dec_label_pc_10003400:                            ; preds = %dec_label_pc_100033f8
  %v2_10003400 = mul i32 %v0_100033a8, %tmp19
  store i32 %v2_10003400, i32* @r5, align 4
  %v0_10003404 = load i32, i32* @r30, align 4
  %v1_10003404 = add i32 %v0_10003404, 36
  store i32 %v1_10003404, i32* %r3.global-to-local, align 4
  %v0_10003408 = load i32, i32* @r31, align 4
  store i32 268448784, i32* @lr, align 4
  %v2_1000340c = call i32 @memmove(i32 %v1_10003404, i32 %v0_10003408)
  store i32 %v2_1000340c, i32* %r3.global-to-local, align 4
  store i32 %v2_10003400, i32* %r0.global-to-local, align 4
  %v0_1000341c = load i32, i32* @r30, align 4
  %v1_1000341c = load i32, i32* @r31, align 4
  %v3_1000341c = add i32 %v1_1000341c, %v2_10003400
  %v4_1000341c = inttoptr i32 %v3_1000341c to i32*
  store i32 %v0_1000341c, i32* %v4_1000341c, align 4
  %v0_10003420 = load i32, i32* @r31, align 4
  %v1_10003420 = load i32, i32* %r0.global-to-local, align 4
  %v2_10003420 = add i32 %v1_10003420, %v0_10003420
  store i32 %v2_10003420, i32* @r25, align 4
  %v1_10003428 = add i32 %v0_100033a8, -1
  store i32 %v1_10003428, i32* %r11.global-to-local, align 4
  %v1_1000342c = add i32 %v0_100033a8, 1
  %v2_10003430 = icmp sgt i32 %v1_10003428, -1
  store i32 %v1_1000342c, i32* %ctr.global-to-local, align 4
  br i1 %v2_10003430, label %dec_label_pc_10003460.preheader, label %dec_label_pc_1000343c

dec_label_pc_1000343c:                            ; preds = %dec_label_pc_10003400
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10003460.preheader

dec_label_pc_10003460.preheader:                  ; preds = %dec_label_pc_1000343c, %dec_label_pc_10003400
  %v0_100034686 = phi i32 [ 1, %dec_label_pc_1000343c ], [ %v1_1000342c, %dec_label_pc_10003400 ]
  %v1_100034603 = mul i32 %v1_10003428, 4
  store i32 %v1_100034603, i32* %r0.global-to-local, align 4
  %v2_100034645 = add i32 %v2_10003420, %v1_100034603
  %v1_100034687 = add i32 %v0_100034686, -1
  store i32 %v1_100034687, i32* %ctr.global-to-local, align 4
  %v2_100034688 = icmp eq i32 %v1_100034687, 0
  br i1 %v2_100034688, label %dec_label_pc_1000346c, label %dec_label_pc_10003448

dec_label_pc_10003448:                            ; preds = %dec_label_pc_10003460.preheader, %dec_label_pc_10003448.dec_label_pc_10003448_crit_edge
  %v1_1000345c = phi i32 [ %v2_10003464, %dec_label_pc_10003448.dec_label_pc_10003448_crit_edge ], [ %v2_100034645, %dec_label_pc_10003460.preheader ]
  %v0_10003454 = phi i32 [ %v0_10003454.pre, %dec_label_pc_10003448.dec_label_pc_10003448_crit_edge ], [ %v0_10003420, %dec_label_pc_10003460.preheader ]
  %v0_1000344c = phi i32 [ %v0_10003460, %dec_label_pc_10003448.dec_label_pc_10003448_crit_edge ], [ %v1_10003428, %dec_label_pc_10003460.preheader ]
  %v2_1000344c = mul i32 %v0_1000344c, %tmp19
  %v1_10003450 = add i32 %v0_1000344c, -1
  store i32 %v1_10003450, i32* %r11.global-to-local, align 4
  %v2_10003454 = add i32 %v0_10003454, -8
  %v1_10003458 = add i32 %v2_10003454, %v2_1000344c
  %v2_1000345c = add i32 %v1_1000345c, 4
  %v3_1000345c = inttoptr i32 %v2_1000345c to i32*
  store i32 %v1_10003458, i32* %v3_1000345c, align 4
  %v0_10003460 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003460 = mul i32 %v0_10003460, 4
  store i32 %v1_10003460, i32* %r0.global-to-local, align 4
  %v1_10003464 = load i32, i32* @r25, align 4
  %v0_10003468 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10003468 = add i32 %v0_10003468, -1
  store i32 %v1_10003468, i32* %ctr.global-to-local, align 4
  %v2_10003468 = icmp eq i32 %v1_10003468, 0
  br i1 %v2_10003468, label %dec_label_pc_1000346c, label %dec_label_pc_10003448.dec_label_pc_10003448_crit_edge

dec_label_pc_10003448.dec_label_pc_10003448_crit_edge: ; preds = %dec_label_pc_10003448
  %v2_10003464 = add i32 %v1_10003464, %v1_10003460
  %v0_10003454.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003448

dec_label_pc_1000346c:                            ; preds = %dec_label_pc_10003448, %dec_label_pc_10003460.preheader
  %v1_10003478 = phi i32 [ %v2_10003420, %dec_label_pc_10003460.preheader ], [ %v1_10003464, %dec_label_pc_10003448 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003474 = mul i32 %v0_100033a8, 4
  %v2_10003478 = add i32 %v1_10003474, 4
  %v2_1000347c = add i32 %v2_10003478, %v1_10003478
  %v3_1000347c = inttoptr i32 %v2_1000347c to i32*
  store i32 0, i32* %v3_1000347c, align 4
  %v0_10003488 = load i32, i32* @r25, align 4
  %v2_10003488 = add i32 %v0_10003488, %v1_10003474
  store i32 %v2_10003488, i32* %r11.global-to-local, align 4
  %v1_1000348c = load i32, i32* @r31, align 4
  %v2_1000348c = sub i32 %v1_1000348c, %v2_10003488
  %v1_10003490 = add i32 %v2_10003488, 8
  store i32 %v1_10003490, i32* @r31, align 4
  %v0_10003494 = load i32, i32* @r27, align 4
  %v2_10003494 = add i32 %v0_10003494, %v2_1000348c
  %v1_10003498 = add i32 %v2_10003494, -8
  br label %dec_label_pc_1000349c

dec_label_pc_1000349c:                            ; preds = %dec_label_pc_100033f8.dec_label_pc_1000349c_crit_edge, %dec_label_pc_1000346c
  %v0_100034a4 = phi i32 [ %v0_100034a4.pre, %dec_label_pc_100033f8.dec_label_pc_1000349c_crit_edge ], [ %v1_10003490, %dec_label_pc_1000346c ]
  %v0_100034a0 = phi i32 [ %v1_100033d4, %dec_label_pc_100033f8.dec_label_pc_1000349c_crit_edge ], [ %v1_10003498, %dec_label_pc_1000346c ]
  %v3_1000349c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000349c, i32* @r4, align 4
  store i32 %v0_100034a4, i32* %r3.global-to-local, align 4
  store i32 268448940, i32* @lr, align 4
  %v3_100034a8 = call i32 @strncpy(i32 %v0_100034a4, i32 %v3_1000349c, i32 %v0_100034a0)
  %v3_100034ac = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100034ac, i32* %r3.global-to-local, align 4
  store i32 268448948, i32* @lr, align 4
  %v1_100034b0 = call i32 @free(i32 %v3_100034ac)
  store i32 %v1_100034b0, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_100034b8 = icmp eq i32 %tmp18, 1
  br i1 %v3_100034b8, label %dec_label_pc_100034c0, label %dec_label_pc_10003508

dec_label_pc_100034c0:                            ; preds = %dec_label_pc_1000349c
  store i32 4, i32* @r5, align 4
  %v0_100034c8 = load i32, i32* @r30, align 4
  store i32 %v0_100034c8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100034d0.65 to i32), i32* @lr, align 4
  %v0_100034cc = call i32 @memcpy()
  %v1_100034d4 = load i32, i32* @r26, align 4
  %v2_100034d4 = add i32 %v1_100034d4, 8
  %v3_100034d4 = inttoptr i32 %v2_100034d4 to i32*
  store i32 2, i32* %v3_100034d4, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100034dc = load i32, i32* @r26, align 4
  %v2_100034dc = add i32 %v1_100034dc, 12
  %v3_100034dc = inttoptr i32 %v2_100034dc to i32*
  store i32 4, i32* %v3_100034dc, align 4
  %v0_100034e0 = load i32, i32* @r31, align 4
  %v1_100034e0 = load i32, i32* @r26, align 4
  %v2_100034e0 = inttoptr i32 %v1_100034e0 to i32*
  store i32 %v0_100034e0, i32* %v2_100034e0, align 4
  %v0_100034e4 = load i32, i32* @r25, align 4
  %v1_100034e4 = load i32, i32* @r26, align 4
  %v2_100034e4 = add i32 %v1_100034e4, 16
  %v3_100034e4 = inttoptr i32 %v2_100034e4 to i32*
  store i32 %v0_100034e4, i32* %v3_100034e4, align 4
  %v0_100034e8 = load i32, i32* @r21, align 4
  %v1_100034e8 = load i32, i32* @r26, align 4
  %v2_100034e8 = add i32 %v1_100034e8, 4
  %v3_100034e8 = inttoptr i32 %v2_100034e8 to i32*
  store i32 %v0_100034e8, i32* %v3_100034e8, align 4
  %v3_100034ec = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100034ec, i32* %r3.global-to-local, align 4
  store i32 268449012, i32* @lr, align 4
  %v1_100034f0 = call i32 @free(i32 %v3_100034ec)
  store i32 %v1_100034f0, i32* %r3.global-to-local, align 4
  %v0_100034f4 = load i32, i32* @r26, align 4
  %v1_100034f4 = load i32, i32* @r20, align 4
  %v2_100034f4 = inttoptr i32 %v1_100034f4 to i32*
  store i32 %v0_100034f4, i32* %v2_100034f4, align 4
  br label %dec_label_pc_10003500

dec_label_pc_10003500:                            ; preds = %dec_label_pc_10003508, %dec_label_pc_1000334c, %dec_label_pc_100034c0
  %storemerge1 = phi i32 [ 0, %dec_label_pc_100034c0 ], [ 2, %dec_label_pc_1000334c ], [ 2, %dec_label_pc_10003508 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100034c0 ], [ 1, %dec_label_pc_1000334c ], [ 1, %dec_label_pc_10003508 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_10003500 = load i32, i32* @r24, align 4
  %v2_10003500 = inttoptr i32 %v1_10003500 to i32*
  store i32 %storemerge, i32* %v2_10003500, align 4
  br label %dec_label_pc_10003520

dec_label_pc_10003508:                            ; preds = %dec_label_pc_1000349c
  %v3_10003508 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10003508, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003510.66 to i32), i32* @lr, align 4
  %v1_1000350c = call i32 @free(i32 %v3_10003508)
  store i32 %v1_1000350c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003500

dec_label_pc_1000351c:                            ; preds = %dec_label_pc_100032e0, %dec_label_pc_100032c4, %dec_label_pc_100032b8, %dec_label_pc_100032a8, %dec_label_pc_10003298
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003520

dec_label_pc_10003520:                            ; preds = %dec_label_pc_1000327c, %dec_label_pc_10003274, %dec_label_pc_10003228, %entry, %dec_label_pc_10003500, %dec_label_pc_100033dc, %dec_label_pc_10003320, %dec_label_pc_1000351c
  store i32 %v0_100031f4, i32* %r0.global-to-local, align 4
  %v0_10003530 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003530

; uselistorder directives
  uselistorder i32 %v0_100034a4, { 1, 0 }
  uselistorder i32 %v1_10003474, { 1, 0 }
  uselistorder i32 %v1_10003468, { 1, 0 }
  uselistorder i32 %v1_10003460, { 1, 0 }
  uselistorder i32 %v0_1000344c, { 1, 0 }
  uselistorder i32 %v1_100034603, { 1, 0 }
  uselistorder i32 %v1_10003428, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10003420, { 1, 0, 2 }
  uselistorder i32 %v0_100033a8, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_100032ec, { 1, 0, 2 }
  uselistorder i32 %v0_100032a8.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10003290, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 3, 4, 5, 6, 1, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10003520, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10003500, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000349c, { 1, 0 }
  uselistorder label %dec_label_pc_10003448, { 1, 0 }
  uselistorder label %dec_label_pc_100032a8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10003548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268449112, i32* @lr, align 4
  %v2_10003554 = call i32 @__socketcall(i32 3, i32 %v2_10003548)
  ret i32 %v2_10003554

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000357c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449172, i32* @lr, align 4
  %v2_10003590 = call i32 @__socketcall(i32 15, i32 %v2_1000357c)
  ret i32 %v2_10003590

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100035b8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268449228, i32* @lr, align 4
  %v2_100035c8 = call i32 @__socketcall(i32 10, i32 %v2_100035b8)
  ret i32 %v2_100035c8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100035f0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268449284, i32* @lr, align 4
  %v2_10003600 = call i32 @__socketcall(i32 9, i32 %v2_100035f0)
  ret i32 %v2_10003600

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10003628 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268449336, i32* @lr, align 4
  %v2_10003634 = call i32 @__socketcall(i32 1, i32 %v2_10003628)
  ret i32 %v2_10003634

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 4, 3, 0, 2, 1 }
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10003648 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10003648, label %dec_label_pc_10003674, label %dec_label_pc_10003664

dec_label_pc_10003664:                            ; preds = %entry
  %tmp21 = icmp slt i32 %arg1, 1
  br i1 %tmp21, label %dec_label_pc_10003674, label %dec_label_pc_1000366c

dec_label_pc_1000366c:                            ; preds = %dec_label_pc_10003664
  %tmp22 = icmp slt i32 %arg1, 65
  br i1 %tmp22, label %dec_label_pc_100036a4.lr.ph, label %dec_label_pc_10003674

dec_label_pc_10003674:                            ; preds = %dec_label_pc_1000366c, %dec_label_pc_10003664, %entry
  %v0_10003674 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10003680 = inttoptr i32 %v0_10003674 to i32*
  store i32 22, i32* %v2_10003680, align 4
  %v0_10003714.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003710

dec_label_pc_100036a4.lr.ph:                      ; preds = %dec_label_pc_1000366c
  %v2_10003694 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10003694, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_100036a423 = add i32 %v2_10003694, 128
  %v3_100036a424 = inttoptr i32 %v2_100036a423 to i32*
  store i32 0, i32* %v3_100036a424, align 4
  %v0_100036a825 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036a826 = add i32 %v0_100036a825, -1
  store i32 %v1_100036a826, i32* %r11.global-to-local, align 4
  %v1_100036ac27 = mul i32 %v1_100036a826, 4
  %v1_100036b028 = load i32, i32* %r8.global-to-local, align 4
  %v2_100036b029 = add i32 %v1_100036b028, %v1_100036ac27
  store i32 %v2_100036b029, i32* %r9.global-to-local, align 4
  %v0_100036b430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100036b431 = add i32 %v0_100036b430, -1
  store i32 %v1_100036b431, i32* %ctr.global-to-local, align 4
  %v2_100036b432 = icmp eq i32 %v1_100036b431, 0
  br i1 %v2_100036b432, label %dec_label_pc_100036b8, label %dec_label_pc_100036a4.dec_label_pc_100036a4_crit_edge

dec_label_pc_100036a4.dec_label_pc_100036a4_crit_edge: ; preds = %dec_label_pc_100036a4.lr.ph, %dec_label_pc_100036a4.dec_label_pc_100036a4_crit_edge
  %v2_100036b033 = phi i32 [ %v2_100036b0, %dec_label_pc_100036a4.dec_label_pc_100036a4_crit_edge ], [ %v2_100036b029, %dec_label_pc_100036a4.lr.ph ]
  %v0_100036a4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100036a4 = add i32 %v2_100036b033, 4
  %v3_100036a4 = inttoptr i32 %v2_100036a4 to i32*
  store i32 %v0_100036a4.pre, i32* %v3_100036a4, align 4
  %v0_100036a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036a8 = add i32 %v0_100036a8, -1
  store i32 %v1_100036a8, i32* %r11.global-to-local, align 4
  %v1_100036ac = mul i32 %v1_100036a8, 4
  %v1_100036b0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100036b0 = add i32 %v1_100036b0, %v1_100036ac
  store i32 %v2_100036b0, i32* %r9.global-to-local, align 4
  %v0_100036b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100036b4 = add i32 %v0_100036b4, -1
  store i32 %v1_100036b4, i32* %ctr.global-to-local, align 4
  %v2_100036b4 = icmp eq i32 %v1_100036b4, 0
  br i1 %v2_100036b4, label %dec_label_pc_100036b8, label %dec_label_pc_100036a4.dec_label_pc_100036a4_crit_edge

dec_label_pc_100036b8:                            ; preds = %dec_label_pc_100036a4.dec_label_pc_100036a4_crit_edge, %dec_label_pc_100036a4.lr.ph
  %v2_100036b0.lcssa = phi i32 [ %v2_100036b029, %dec_label_pc_100036a4.lr.ph ], [ %v2_100036b0, %dec_label_pc_100036a4.dec_label_pc_100036a4_crit_edge ]
  %v0_100036bc.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_100036b8 = ptrtoint i32* %stack_var_-292 to i32
  %v3_100036c0 = call i32 @__sigaddset(i32 %v2_100036b8, i32 %v0_100036bc.pre, i32 %v2_100036b0.lcssa)
  %v1_100036c4 = icmp slt i32 %v3_100036c0, 0
  br i1 %v1_100036c4, label %dec_label_pc_1000370c, label %dec_label_pc_100036cc

dec_label_pc_100036cc:                            ; preds = %dec_label_pc_100036b8
  %v0_100036d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100036d8 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_1001e638.68 to i32), i32 %v0_100036d0)
  %v2_100036e4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268449532, i32* @lr, align 4
  %v4_100036f8 = call i32 @__libc_sigaction(i32 %v0_100036d0, i32* nonnull %stack_var_-296, i32 %v2_100036e4)
  %v1_100036fc = icmp slt i32 %v4_100036f8, 0
  br i1 %v1_100036fc, label %dec_label_pc_1000370c, label %dec_label_pc_10003704

dec_label_pc_10003704:                            ; preds = %dec_label_pc_100036cc
  %v3_10003704 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10003704, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003710

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_100036cc, %dec_label_pc_100036b8
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003710

dec_label_pc_10003710:                            ; preds = %dec_label_pc_10003704, %dec_label_pc_10003674, %dec_label_pc_1000370c
  %v0_10003714 = phi i32 [ %v3_10003704, %dec_label_pc_10003704 ], [ %v0_10003714.pre, %dec_label_pc_10003674 ], [ -1, %dec_label_pc_1000370c ]
  ret i32 %v0_10003714

; uselistorder directives
  uselistorder i32 %v1_100036b4, { 1, 0 }
  uselistorder i32 %v2_100036b0, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 65, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003710, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100036a4.dec_label_pc_100036a4_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10003728 = add i32 %arg2, -1
  %v1_1000372c = call i32 @__asm_rlwinm(i32 %v1_10003728, i32 29, i32 3, i32 29)
  %v1_10003730 = urem i32 %v1_10003728, 32
  %v2_10003734 = add i32 %v1_1000372c, %arg1
  %v3_10003734 = inttoptr i32 %v2_10003734 to i32*
  %v4_10003734 = load i32, i32* %v3_10003734, align 4
  %v3_1000373c = shl i32 1, %v1_10003730
  %v2_10003740 = and i32 %v4_10003734, %v3_1000373c
  %v2_10003744 = icmp ne i32 %v2_10003740, 0
  %v5_10003748 = zext i1 %v2_10003744 to i32
  ret i32 %v5_10003748
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10003750 = add i32 %arg2, -1
  %v1_10003758 = call i32 @__asm_rlwinm(i32 %v1_10003750, i32 29, i32 3, i32 29)
  %v1_1000375c = urem i32 %v1_10003750, 32
  %v2_10003760 = add i32 %v1_10003758, %arg1
  %v3_10003760 = inttoptr i32 %v2_10003760 to i32*
  %v4_10003760 = load i32, i32* %v3_10003760, align 4
  %v3_10003764 = shl i32 1, %v1_1000375c
  %v2_10003768 = or i32 %v3_10003764, %v4_10003760
  store i32 %v2_10003768, i32* %v3_10003760, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10003778 = add i32 %arg2, -1
  %v1_10003780 = call i32 @__asm_rlwinm(i32 %v1_10003778, i32 29, i32 3, i32 29)
  %v1_10003784 = urem i32 %v1_10003778, 32
  %v2_10003788 = add i32 %v1_10003780, %arg1
  %v3_10003788 = inttoptr i32 %v2_10003788 to i32*
  %v4_10003788 = load i32, i32* %v3_10003788, align 4
  %v3_1000378c = shl i32 -2, %v1_10003784
  %v4_1000378c = sub nsw i32 32, %v1_10003784
  %v5_1000378c = lshr i32 -2, %v4_1000378c
  %v6_1000378c = or i32 %v5_1000378c, %v3_1000378c
  %v2_10003790 = and i32 %v6_1000378c, %v4_10003788
  store i32 %v2_10003790, i32* %v3_10003788, align 4
  ret i32 0
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100037a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100037a0 = icmp eq i32 %v0_100037a0, 0
  br i1 %v3_100037a0, label %dec_label_pc_100037b8, label %dec_label_pc_100037bc

dec_label_pc_100037b8:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100037bc

dec_label_pc_100037bc:                            ; preds = %entry, %dec_label_pc_100037b8
  %v0_100037cc = phi i32 [ 1, %dec_label_pc_100037b8 ], [ %v0_100037a0, %entry ]
  %v3_100037c0 = icmp ugt i32 %v0_100037cc, -8
  br i1 %v3_100037c0, label %dec_label_pc_100038d0, label %dec_label_pc_100037c8

dec_label_pc_100037c8:                            ; preds = %dec_label_pc_100037bc
  %v1_100037cc = add i32 %v0_100037cc, 4
  store i32 ptrtoint (i32* @global_var_1001c608.69 to i32), i32* @r29, align 4
  store i32 %v1_100037cc, i32* %stack_var_-40, align 4
  store i32 ptrtoint (i32* @global_var_1001c608.69 to i32), i32* %r3.global-to-local, align 4
  %v0_100037dc = call i32 @__pthread_return_0()
  %v2_100037e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268551016, i32* %r3.global-to-local, align 4
  %v3_100037ec = call i32 @__heap_alloc(i32* inttoptr (i32 268551016 to i32*), i32 %v2_100037e4)
  store i32 %v3_100037ec, i32* %r31.global-to-local, align 4
  %v0_100037f4 = load i32, i32* @r29, align 4
  store i32 %v0_100037f4, i32* %r3.global-to-local, align 4
  %v0_100037f8 = call i32 @__pthread_return_0()
  store i32 %v0_100037f8, i32* %r3.global-to-local, align 4
  %v3_100037fc = icmp eq i32 %v3_100037ec, 0
  br i1 %v3_100037fc, label %dec_label_pc_10003804, label %dec_label_pc_100038b4.thread

dec_label_pc_100038b4.thread:                     ; preds = %dec_label_pc_100037c8
  br label %dec_label_pc_100038c8

dec_label_pc_10003804:                            ; preds = %dec_label_pc_100037c8
  %v3_10003808 = load i32, i32* @global_var_1001c3d0.70, align 4
  store i32 %v3_10003808, i32* %r31.global-to-local, align 4
  %v3_1000380c = load i32, i32* %stack_var_-40, align 4
  %v2_10003810 = icmp ult i32 %v3_1000380c, %v3_10003808
  br i1 %v2_10003810, label %dec_label_pc_10003828, label %dec_label_pc_10003818

dec_label_pc_10003818:                            ; preds = %dec_label_pc_10003804
  %v1_1000381c = sub i32 0, %v3_10003808
  %v2_10003818 = add i32 %v3_10003808, -1
  %v1_10003820 = add i32 %v2_10003818, %v3_1000380c
  %v2_10003824 = and i32 %v1_10003820, %v1_1000381c
  store i32 %v2_10003824, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10003828

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003804, %dec_label_pc_10003818
  store i32 ptrtoint (i32* @global_var_1001e6b8.71 to i32), i32* %r3.global-to-local, align 4
  %v0_10003834 = call i32 @__pthread_return_0()
  %v0_10003838 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003838, i32* %r3.global-to-local, align 4
  store i32 268449856, i32* @lr, align 4
  %v1_1000383c = call i32 @__GI_sbrk(i32 %v0_10003838)
  store i32 %v1_1000383c, i32* %r3.global-to-local, align 4
  %v3_10003840 = icmp eq i32 %v1_1000383c, -1
  br i1 %v3_10003840, label %dec_label_pc_10003860, label %dec_label_pc_10003848

dec_label_pc_10003848:                            ; preds = %dec_label_pc_10003828
  %v1_10003848 = add i32 %v1_1000383c, 3
  %v1_1000384c = call i32 @__asm_rlwinm(i32 %v1_10003848, i32 0, i32 0, i32 29)
  store i32 %v1_1000384c, i32* @r30, align 4
  %v4_10003850 = icmp eq i32 %v1_1000384c, %v1_1000383c
  br i1 %v4_10003850, label %dec_label_pc_10003860, label %dec_label_pc_10003858

dec_label_pc_10003858:                            ; preds = %dec_label_pc_10003848
  %v2_10003858 = sub i32 %v1_1000384c, %v1_1000383c
  store i32 %v2_10003858, i32* %r3.global-to-local, align 4
  store i32 268449888, i32* @lr, align 4
  %v1_1000385c = call i32 @__GI_sbrk(i32 %v2_10003858)
  store i32 %v1_1000385c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003860

dec_label_pc_10003860:                            ; preds = %dec_label_pc_10003848, %dec_label_pc_10003828, %dec_label_pc_10003858
  store i32 ptrtoint (i32* @global_var_1001e6b8.71 to i32), i32* %r3.global-to-local, align 4
  %v0_10003868 = call i32 @__pthread_return_0()
  store i32 %v0_10003868, i32* %r3.global-to-local, align 4
  %v0_1000386c = load i32, i32* @r30, align 4
  %v3_1000386c = icmp eq i32 %v0_1000386c, -1
  br i1 %v3_1000386c, label %dec_label_pc_100038d0, label %dec_label_pc_100038b4

dec_label_pc_100038b4:                            ; preds = %dec_label_pc_10003860
  store i32 ptrtoint (i32* @global_var_1001c608.69 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c368 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1001c608.69 to i32), i32* %r3.global-to-local, align 4
  %v0_10003888 = call i32 @__pthread_return_0()
  %v0_1000388c = load i32, i32* @r31, align 4
  %v0_10003890 = load i32, i32* @r30, align 4
  %v0_10003894 = load i32, i32* @r29, align 4
  store i32 %v0_10003894, i32* %r3.global-to-local, align 4
  store i32 268449948, i32* @lr, align 4
  %v3_10003898 = inttoptr i32 %v0_10003894 to i32*
  %v4_10003898 = call i32 @__heap_free(i32* %v3_10003898, i32 %v0_10003890, i32 %v0_1000388c)
  %v0_1000389c = load i32, i32* @r29, align 4
  store i32 %v0_1000389c, i32* %r3.global-to-local, align 4
  %v2_100038a4 = inttoptr i32 %v0_1000389c to i32*
  %v3_100038a4 = call i32 @__heap_alloc(i32* %v2_100038a4, i32 %v2_100037e4)
  store i32 %v3_100038a4, i32* %r31.global-to-local, align 4
  %v0_100038ac = load i32, i32* @r28, align 4
  store i32 %v0_100038ac, i32* %r3.global-to-local, align 4
  %v0_100038b0 = call i32 @__pthread_return_0()
  store i32 %v0_100038b0, i32* %r3.global-to-local, align 4
  %v3_100038b4 = icmp eq i32 %v3_100038a4, 0
  br i1 %v3_100038b4, label %dec_label_pc_100038c8.thread, label %dec_label_pc_100038c8

dec_label_pc_100038c8.thread:                     ; preds = %dec_label_pc_100038b4
  br label %dec_label_pc_100038d0

dec_label_pc_100038c8:                            ; preds = %dec_label_pc_100038b4, %dec_label_pc_100038b4.thread
  %v0_100038c8.pr6 = phi i32 [ %v3_100037ec, %dec_label_pc_100038b4.thread ], [ %v3_100038a4, %dec_label_pc_100038b4 ]
  %v3_100038bc = load i32, i32* %stack_var_-40, align 4
  %v2_100038c0 = inttoptr i32 %v0_100038c8.pr6 to i32*
  store i32 %v3_100038bc, i32* %v2_100038c0, align 4
  %v0_100038c4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100038c4 = add i32 %v0_100038c4, 4
  store i32 %v1_100038c4, i32* @r31, align 4
  %v3_100038c8 = icmp eq i32 %v1_100038c4, 0
  br i1 %v3_100038c8, label %dec_label_pc_100038d0, label %dec_label_pc_100038e0

dec_label_pc_100038d0:                            ; preds = %dec_label_pc_100038c8.thread, %dec_label_pc_100038c8, %dec_label_pc_10003860, %dec_label_pc_100037bc
  %v0_100038d0 = call i32 @__errno_location()
  store i32 %v0_100038d0, i32* %r3.global-to-local, align 4
  %v2_100038d8 = inttoptr i32 %v0_100038d0 to i32*
  store i32 12, i32* %v2_100038d8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100038e0

dec_label_pc_100038e0:                            ; preds = %dec_label_pc_100038c8, %dec_label_pc_100038d0
  %v0_100038e4 = phi i32 [ %v1_100038c4, %dec_label_pc_100038c8 ], [ 0, %dec_label_pc_100038d0 ]
  store i32 %v0_100038e4, i32* %r3.global-to-local, align 4
  ret i32 %v0_100038e4

; uselistorder directives
  uselistorder i32 %v0_100038e4, { 1, 0 }
  uselistorder i32 %v1_100038c4, { 1, 0, 2 }
  uselistorder i32 %v1_1000384c, { 1, 0, 2 }
  uselistorder i32 %v1_1000383c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_10003808, { 1, 0, 2, 3 }
  uselistorder i32 %v3_100037ec, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 19, 16, 2, 20, 4, 3, 5, 14, 6, 15, 7, 17, 9, 8, 18, 10, 11, 12, 13, 0, 1 }
  uselistorder i32 (i32*, i32)* @__heap_alloc, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c608.69 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100038e0, { 1, 0 }
  uselistorder label %dec_label_pc_100038d0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10003860, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003828, { 1, 0 }
  uselistorder label %dec_label_pc_100037bc, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100038f8 = icmp eq i32 %arg1, 0
  br i1 %v3_100038f8, label %dec_label_pc_100039e4, label %dec_label_pc_10003910

dec_label_pc_10003910:                            ; preds = %entry
  %v1_10003914 = add i32 %arg1, -4
  %v2_10003914 = inttoptr i32 %v1_10003914 to i32*
  %v3_10003914 = load i32, i32* %v2_10003914, align 4
  store i32 %v3_10003914, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_10003928 = call i32 @__pthread_return_0()
  %v0_10003930 = load i32, i32* @r28, align 4
  store i32 268450108, i32* @lr, align 4
  %v4_10003938 = call i32 @__heap_free(i32* nonnull @global_var_1001c368, i32 %v1_10003914, i32 %v0_10003930)
  %v3_10003940 = load i32, i32* @global_var_1001c3d0.70, align 4
  store i32 %v4_10003938, i32* @r29, align 4
  %v1_10003948 = inttoptr i32 %v4_10003938 to i32*
  %v2_10003948 = load i32, i32* %v1_10003948, align 4
  store i32 %v2_10003948, i32* @r27, align 4
  %v1_1000394c = mul i32 %v3_10003940, 8
  %v2_10003950 = icmp ult i32 %v2_10003948, %v1_1000394c
  br i1 %v2_10003950, label %dec_label_pc_10003984, label %dec_label_pc_10003958

dec_label_pc_10003958:                            ; preds = %dec_label_pc_10003910
  store i32 ptrtoint (i32* @global_var_1001e6b8.71 to i32), i32* @r28, align 4
  %v0_10003968 = call i32 @__pthread_return_0()
  store i32 268450164, i32* @lr, align 4
  %v1_10003970 = call i32 @__GI_sbrk(i32 0)
  %v0_10003974 = load i32, i32* @r31, align 4
  %v4_10003974 = icmp eq i32 %v0_10003974, %v1_10003970
  br i1 %v4_10003974, label %dec_label_pc_1000398c, label %dec_label_pc_1000397c

dec_label_pc_1000397c:                            ; preds = %dec_label_pc_10003958
  %v0_10003980 = call i32 @__pthread_return_0()
  br label %dec_label_pc_10003984

dec_label_pc_10003984:                            ; preds = %dec_label_pc_10003910, %dec_label_pc_1000397c
  br label %dec_label_pc_100039e0

dec_label_pc_1000398c:                            ; preds = %dec_label_pc_10003958
  %v0_1000398c = load i32, i32* @r29, align 4
  %v1_1000398c = add i32 %v0_1000398c, 4
  %v2_1000398c = inttoptr i32 %v1_1000398c to i32*
  %v3_1000398c = load i32, i32* %v2_1000398c, align 4
  %v3_10003990 = icmp eq i32 %v3_1000398c, 0
  br i1 %v3_10003990, label %dec_label_pc_100039a0, label %dec_label_pc_10003998

dec_label_pc_10003998:                            ; preds = %dec_label_pc_1000398c
  %v1_10003998 = add i32 %v0_1000398c, 8
  %v2_10003998 = inttoptr i32 %v1_10003998 to i32*
  %v3_10003998 = load i32, i32* %v2_10003998, align 4
  %v2_1000399c = add i32 %v3_1000398c, 8
  %v3_1000399c = inttoptr i32 %v2_1000399c to i32*
  store i32 %v3_10003998, i32* %v3_1000399c, align 4
  %v0_100039a0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100039a0

dec_label_pc_100039a0:                            ; preds = %dec_label_pc_1000398c, %dec_label_pc_10003998
  %v0_100039a0 = phi i32 [ %v0_1000398c, %dec_label_pc_1000398c ], [ %v0_100039a0.pre, %dec_label_pc_10003998 ]
  %v1_100039a0 = add i32 %v0_100039a0, 8
  %v2_100039a0 = inttoptr i32 %v1_100039a0 to i32*
  %v3_100039a0 = load i32, i32* %v2_100039a0, align 4
  %v1_100039a4 = add i32 %v0_100039a0, 4
  %v2_100039a4 = inttoptr i32 %v1_100039a4 to i32*
  %v3_100039a4 = load i32, i32* %v2_100039a4, align 4
  %v3_100039a8 = icmp eq i32 %v3_100039a0, 0
  br i1 %v3_100039a8, label %dec_label_pc_100039b8, label %dec_label_pc_100039b0

dec_label_pc_100039b0:                            ; preds = %dec_label_pc_100039a0
  %v2_100039b0 = add i32 %v3_100039a0, 4
  %v3_100039b0 = inttoptr i32 %v2_100039b0 to i32*
  store i32 %v3_100039a4, i32* %v3_100039b0, align 4
  br label %dec_label_pc_100039bc

dec_label_pc_100039b8:                            ; preds = %dec_label_pc_100039a0
  store i32 %v3_100039a4, i32* @global_var_1001c368, align 4
  br label %dec_label_pc_100039bc

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039b0, %dec_label_pc_100039b8
  %v0_100039c4 = call i32 @__pthread_return_0()
  %v0_100039c8 = load i32, i32* @r27, align 4
  %v1_100039c8 = load i32, i32* @r29, align 4
  %v0_100039d0 = load i32, i32* @r31, align 4
  %v2_100039c8 = sub i32 12, %v0_100039c8
  %v1_100039cc = add i32 %v2_100039c8, %v1_100039c8
  %v2_100039d0 = sub i32 %v1_100039cc, %v0_100039d0
  store i32 268450264, i32* @lr, align 4
  %v1_100039d4 = call i32 @__GI_sbrk(i32 %v2_100039d0)
  br label %dec_label_pc_100039e0

dec_label_pc_100039e0:                            ; preds = %dec_label_pc_10003984, %dec_label_pc_100039bc
  %v0_100039e0 = call i32 @__pthread_return_0()
  br label %dec_label_pc_100039e4

dec_label_pc_100039e4:                            ; preds = %entry, %dec_label_pc_100039e0
  %v0_100039f4 = phi i32 [ 0, %entry ], [ %v0_100039e0, %dec_label_pc_100039e0 ]
  ret i32 %v0_100039f4

; uselistorder directives
  uselistorder i32 %v0_100039a0, { 1, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 3, 2 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 1, 0 }
  uselistorder i32* @global_var_1001c368, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100039e4, { 1, 0 }
  uselistorder label %dec_label_pc_100039e0, { 1, 0 }
  uselistorder label %dec_label_pc_100039bc, { 1, 0 }
  uselistorder label %dec_label_pc_100039a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003984, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_100039f8 = inttoptr i32 %arg2 to i32*
  %v2_100039f8 = load i32, i32* %v1_100039f8, align 4
  %v1_100039fc = add i32 %v2_100039f8, 3
  store i32 %v1_100039fc, i32* %r9.global-to-local, align 4
  %v1_10003a00 = call i32 @__asm_rlwinm(i32 %v1_100039fc, i32 0, i32 0, i32 29)
  %v2_10003a04 = icmp ugt i32 %v1_10003a00, 11
  br i1 %v2_10003a04, label %dec_label_pc_10003a88.preheader, label %dec_label_pc_10003a0c

dec_label_pc_10003a0c:                            ; preds = %entry
  br label %dec_label_pc_10003a88.preheader

dec_label_pc_10003a88.preheader:                  ; preds = %entry, %dec_label_pc_10003a0c
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10003a0c ], [ %v1_10003a00, %entry ]
  %v0_10003a6c = phi i32 [ 12, %dec_label_pc_10003a0c ], [ %v1_10003a00, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_10003a885 = icmp eq i32 %storemerge2, 0
  br i1 %v3_10003a885, label %dec_label_pc_10003a90, label %dec_label_pc_10003a18

dec_label_pc_10003a18:                            ; preds = %dec_label_pc_10003a88.preheader, %dec_label_pc_10003a84
  %v0_10003a84 = phi i32 [ %storemerge, %dec_label_pc_10003a84 ], [ %storemerge2, %dec_label_pc_10003a88.preheader ]
  %v1_10003a18 = inttoptr i32 %v0_10003a84 to i32*
  %v2_10003a18 = load i32, i32* %v1_10003a18, align 4
  store i32 %v2_10003a18, i32* %r10.global-to-local, align 4
  %v2_10003a1c = icmp ult i32 %v2_10003a18, %v0_10003a6c
  br i1 %v2_10003a1c, label %dec_label_pc_10003a84, label %dec_label_pc_10003a24

dec_label_pc_10003a24:                            ; preds = %dec_label_pc_10003a18
  %v1_10003a24 = add i32 %v0_10003a6c, 44
  %v2_10003a28 = icmp ult i32 %v2_10003a18, %v1_10003a24
  br i1 %v2_10003a28, label %dec_label_pc_10003a30, label %dec_label_pc_10003a6c

dec_label_pc_10003a30:                            ; preds = %dec_label_pc_10003a24
  %v1_10003a30 = add i32 %v0_10003a84, 4
  %v2_10003a30 = inttoptr i32 %v1_10003a30 to i32*
  %v3_10003a30 = load i32, i32* %v2_10003a30, align 4
  store i32 %v3_10003a30, i32* %r11.global-to-local, align 4
  %v3_10003a34 = icmp eq i32 %v3_10003a30, 0
  br i1 %v3_10003a34, label %dec_label_pc_10003a44, label %dec_label_pc_10003a3c

dec_label_pc_10003a3c:                            ; preds = %dec_label_pc_10003a30
  %v1_10003a3c = add i32 %v0_10003a84, 8
  %v2_10003a3c = inttoptr i32 %v1_10003a3c to i32*
  %v3_10003a3c = load i32, i32* %v2_10003a3c, align 4
  %v2_10003a40 = add i32 %v3_10003a30, 8
  %v3_10003a40 = inttoptr i32 %v2_10003a40 to i32*
  store i32 %v3_10003a3c, i32* %v3_10003a40, align 4
  %v0_10003a44.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10003a60.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003a44

dec_label_pc_10003a44:                            ; preds = %dec_label_pc_10003a30, %dec_label_pc_10003a3c
  %v0_10003a60 = phi i32 [ %v2_10003a18, %dec_label_pc_10003a30 ], [ %v0_10003a60.pre, %dec_label_pc_10003a3c ]
  %v0_10003a44 = phi i32 [ %v0_10003a84, %dec_label_pc_10003a30 ], [ %v0_10003a44.pre, %dec_label_pc_10003a3c ]
  %v1_10003a44 = add i32 %v0_10003a44, 8
  %v2_10003a44 = inttoptr i32 %v1_10003a44 to i32*
  %v3_10003a44 = load i32, i32* %v2_10003a44, align 4
  %v1_10003a48 = add i32 %v0_10003a44, 4
  %v2_10003a48 = inttoptr i32 %v1_10003a48 to i32*
  %v3_10003a48 = load i32, i32* %v2_10003a48, align 4
  %v3_10003a4c = icmp eq i32 %v3_10003a44, 0
  store i32 %v0_10003a60, i32* %r11.global-to-local, align 4
  br i1 %v3_10003a4c, label %dec_label_pc_10003a60, label %dec_label_pc_10003a54

dec_label_pc_10003a54:                            ; preds = %dec_label_pc_10003a44
  %v2_10003a58 = add i32 %v3_10003a44, 4
  %v3_10003a58 = inttoptr i32 %v2_10003a58 to i32*
  store i32 %v3_10003a48, i32* %v3_10003a58, align 4
  br label %dec_label_pc_10003a74

dec_label_pc_10003a60:                            ; preds = %dec_label_pc_10003a44
  store i32 %v3_10003a48, i32* %arg1, align 4
  br label %dec_label_pc_10003a74

dec_label_pc_10003a6c:                            ; preds = %dec_label_pc_10003a24
  %v2_10003a6c = sub i32 %v2_10003a18, %v0_10003a6c
  store i32 %v2_10003a6c, i32* %v1_10003a18, align 4
  br label %dec_label_pc_10003a74

dec_label_pc_10003a74:                            ; preds = %dec_label_pc_10003a60, %dec_label_pc_10003a54, %dec_label_pc_10003a6c
  %v0_10003a74 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003a74 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003a74 = sub i32 %v1_10003a74, %v0_10003a74
  store i32 %v2_10003a74, i32* %r9.global-to-local, align 4
  %v0_10003a78 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10003a78, i32* %v1_100039f8, align 4
  %v0_10003a7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10003a7c = add i32 %v0_10003a7c, 12
  ret i32 %v1_10003a7c

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a18
  %v1_10003a84 = add i32 %v0_10003a84, 4
  %storemerge.in = inttoptr i32 %v1_10003a84 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10003a88 = icmp eq i32 %storemerge, 0
  br i1 %v3_10003a88, label %dec_label_pc_10003a88.dec_label_pc_10003a90_crit_edge, label %dec_label_pc_10003a18

dec_label_pc_10003a88.dec_label_pc_10003a90_crit_edge: ; preds = %dec_label_pc_10003a84
  br label %dec_label_pc_10003a90

dec_label_pc_10003a90:                            ; preds = %dec_label_pc_10003a88.dec_label_pc_10003a90_crit_edge, %dec_label_pc_10003a88.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10003a44, { 1, 0 }
  uselistorder i32 %v2_10003a18, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10003a84, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10003a6c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10003a74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003a44, { 1, 0 }
  uselistorder label %dec_label_pc_10003a18, { 1, 0 }
  uselistorder label %dec_label_pc_10003a88.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10003a98 = icmp eq i32 %arg3, 0
  %v2_10003a9c = add i32 %arg2, 4
  %v3_10003a9c = inttoptr i32 %v2_10003a9c to i32*
  store i32 %arg4, i32* %v3_10003a9c, align 4
  %v2_10003aa0 = add i32 %arg2, 8
  %v3_10003aa0 = inttoptr i32 %v2_10003aa0 to i32*
  store i32 %arg3, i32* %v3_10003aa0, align 4
  br i1 %v3_10003a98, label %dec_label_pc_10003ab0, label %dec_label_pc_10003aa8

dec_label_pc_10003aa8:                            ; preds = %entry
  %v2_10003aa8 = add i32 %arg3, 4
  %v3_10003aa8 = inttoptr i32 %v2_10003aa8 to i32*
  store i32 %arg2, i32* %v3_10003aa8, align 4
  br label %dec_label_pc_10003ab4

dec_label_pc_10003ab0:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10003ab4

dec_label_pc_10003ab4:                            ; preds = %dec_label_pc_10003aa8, %dec_label_pc_10003ab0
  %v3_10003ab4 = icmp eq i32 %arg4, 0
  %v0_10003ab8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10003ab4, i32 %v0_10003ab8)
  %v2_10003abc = add i32 %arg4, 8
  %v3_10003abc = inttoptr i32 %v2_10003abc to i32*
  store i32 %arg2, i32* %v3_10003abc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 4, 3 }
  uselistorder label %dec_label_pc_10003ab4, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10003ac4 = icmp eq i32 %arg3, 0
  br i1 %v3_10003ac4, label %dec_label_pc_10003ad4, label %dec_label_pc_10003acc

dec_label_pc_10003acc:                            ; preds = %entry
  %v2_10003acc = add i32 %arg3, 4
  %v3_10003acc = inttoptr i32 %v2_10003acc to i32*
  store i32 %arg2, i32* %v3_10003acc, align 4
  br label %dec_label_pc_10003ad8

dec_label_pc_10003ad4:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10003ad8

dec_label_pc_10003ad8:                            ; preds = %dec_label_pc_10003acc, %dec_label_pc_10003ad4
  %v2_10003ad8 = add i32 %arg2, 8
  %v3_10003ad8 = inttoptr i32 %v2_10003ad8 to i32*
  store i32 %arg3, i32* %v3_10003ad8, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 1, 2, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003ad8, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10003af8 = load i32, i32* %arg1, align 4
  store i32 %v2_10003af8, i32* @r31, align 4
  %v2_10003afc = add i32 %arg3, %arg2
  store i32 %v2_10003afc, i32* %r3.global-to-local, align 4
  %v3_10003b107 = icmp eq i32 %v2_10003af8, 0
  %v1_10003b148 = add i32 %v2_10003af8, 12
  %tmp69 = icmp uge i32 %v1_10003b148, %arg2
  %or.cond10 = or i1 %v3_10003b107, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10003b20, label %dec_label_pc_10003b08

dec_label_pc_10003b08:                            ; preds = %entry, %dec_label_pc_10003b08
  %v0_10003b6811 = phi i32 [ %v3_10003b0c, %dec_label_pc_10003b08 ], [ %v2_10003af8, %entry ]
  store i32 %v0_10003b6811, i32* %r11.global-to-local, align 4
  %v1_10003b0c = add i32 %v0_10003b6811, 4
  %v2_10003b0c = inttoptr i32 %v1_10003b0c to i32*
  %v3_10003b0c = load i32, i32* %v2_10003b0c, align 4
  store i32 %v3_10003b0c, i32* @r31, align 4
  %v3_10003b10 = icmp eq i32 %v3_10003b0c, 0
  %v1_10003b14 = add i32 %v3_10003b0c, 12
  %tmp6 = icmp uge i32 %v1_10003b14, %arg2
  %or.cond = or i1 %v3_10003b10, %tmp6
  br i1 %or.cond, label %dec_label_pc_10003b20, label %dec_label_pc_10003b08

dec_label_pc_10003b20:                            ; preds = %dec_label_pc_10003b08, %entry
  %v0_10003b5c.lcssa = phi i32 [ 0, %entry ], [ %v0_10003b6811, %dec_label_pc_10003b08 ]
  %v0_10003b68.lcssa = phi i32 [ %v2_10003af8, %entry ], [ %v3_10003b0c, %dec_label_pc_10003b08 ]
  %v3_10003b10.lcssa = phi i1 [ %v3_10003b107, %entry ], [ %v3_10003b10, %dec_label_pc_10003b08 ]
  br i1 %v3_10003b10.lcssa, label %dec_label_pc_10003bd8, label %dec_label_pc_10003b28

dec_label_pc_10003b28:                            ; preds = %dec_label_pc_10003b20
  %v1_10003b28 = inttoptr i32 %v0_10003b68.lcssa to i32*
  %v2_10003b28 = load i32, i32* %v1_10003b28, align 4
  %v2_10003b2c = sub i32 %v0_10003b68.lcssa, %v2_10003b28
  %v1_10003b30 = add i32 %v2_10003b2c, 12
  %v3_10003b34 = icmp ugt i32 %v1_10003b30, %v2_10003afc
  br i1 %v3_10003b34, label %dec_label_pc_10003bd8, label %dec_label_pc_10003b3c

dec_label_pc_10003b3c:                            ; preds = %dec_label_pc_10003b28
  %v4_10003b34 = icmp eq i32 %v1_10003b30, %v2_10003afc
  %v2_10003b40 = add i32 %v2_10003b28, %arg3
  store i32 %v2_10003b40, i32* @r29, align 4
  br i1 %v4_10003b34, label %dec_label_pc_10003b48, label %dec_label_pc_10003b78

dec_label_pc_10003b48:                            ; preds = %dec_label_pc_10003b3c
  %v3_10003b48 = icmp eq i32 %v0_10003b5c.lcssa, 0
  br i1 %v3_10003b48, label %dec_label_pc_10003bcc, label %dec_label_pc_10003b50

dec_label_pc_10003b50:                            ; preds = %dec_label_pc_10003b48
  %v1_10003b50 = add i32 %v0_10003b5c.lcssa, 12
  %v4_10003b54 = icmp eq i32 %v1_10003b50, %arg2
  br i1 %v4_10003b54, label %dec_label_pc_10003b5c, label %dec_label_pc_10003bcc

dec_label_pc_10003b5c:                            ; preds = %dec_label_pc_10003b50
  %v1_10003b5c = inttoptr i32 %v0_10003b5c.lcssa to i32*
  %v2_10003b5c = load i32, i32* %v1_10003b5c, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10003b64 = add i32 %v0_10003b5c.lcssa, 8
  %v2_10003b64 = inttoptr i32 %v1_10003b64 to i32*
  %v3_10003b64 = load i32, i32* %v2_10003b64, align 4
  %v2_10003b6c = add i32 %v2_10003b5c, %v2_10003b40
  store i32 %v2_10003b6c, i32* @r29, align 4
  %v5_10003b70 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_10003b68.lcssa, i32 %v3_10003b64, i32 %v2_10003afc)
  store i32 %v5_10003b70, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003bcc

dec_label_pc_10003b78:                            ; preds = %dec_label_pc_10003b3c
  %v1_10003b78 = add i32 %v0_10003b68.lcssa, 4
  %v2_10003b78 = inttoptr i32 %v1_10003b78 to i32*
  %v3_10003b78 = load i32, i32* %v2_10003b78, align 4
  %v3_10003b7c = icmp eq i32 %v3_10003b78, 0
  br i1 %v3_10003b7c, label %dec_label_pc_10003bb4, label %dec_label_pc_10003b84

dec_label_pc_10003b84:                            ; preds = %dec_label_pc_10003b78
  %v1_10003b84 = inttoptr i32 %v3_10003b78 to i32*
  %v2_10003b84 = load i32, i32* %v1_10003b84, align 4
  %v2_10003b88 = sub i32 %v3_10003b78, %v2_10003b84
  %v1_10003b8c = add i32 %v2_10003b88, 12
  %v4_10003b90 = icmp eq i32 %v2_10003afc, %v1_10003b8c
  br i1 %v4_10003b90, label %dec_label_pc_10003b98, label %dec_label_pc_10003bb4

dec_label_pc_10003b98:                            ; preds = %dec_label_pc_10003b84
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10003ba4 = add i32 %v2_10003b84, %v2_10003b40
  store i32 %v2_10003ba4, i32* @r29, align 4
  store i32 %v3_10003b78, i32* @r31, align 4
  %v5_10003bac = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_10003b78, i32 %v0_10003b5c.lcssa, i32 %v2_10003afc)
  store i32 %v5_10003bac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003b84, %dec_label_pc_10003b78
  %v2_10003bb4 = add i32 %v0_10003b68.lcssa, %arg3
  store i32 %v2_10003bb4, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268450764, i32* @lr, align 4
  %v5_10003bc8 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_10003bb4, i32 %v0_10003b5c.lcssa, i32 %v3_10003b78)
  store i32 %v5_10003bc8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003b50, %dec_label_pc_10003b48, %dec_label_pc_10003b98, %dec_label_pc_10003b5c, %dec_label_pc_10003bb4
  %v0_10003bcc = load i32, i32* @r31, align 4
  store i32 %v0_10003bcc, i32* @r30, align 4
  %v0_10003bd0 = load i32, i32* @r29, align 4
  %v2_10003bd0 = inttoptr i32 %v0_10003bcc to i32*
  store i32 %v0_10003bd0, i32* %v2_10003bd0, align 4
  br label %dec_label_pc_10003bf4

dec_label_pc_10003bd8:                            ; preds = %dec_label_pc_10003b28, %dec_label_pc_10003b20
  %v2_10003bd8 = add i32 %v2_10003afc, -12
  %v3_10003bd8 = inttoptr i32 %v2_10003bd8 to i32*
  store i32 %arg3, i32* %v3_10003bd8, align 4
  %v0_10003bdc = load i32, i32* %r3.global-to-local, align 4
  %v1_10003bdc = add i32 %v0_10003bdc, -12
  store i32 %v1_10003bdc, i32* @r30, align 4
  %v0_10003be0 = load i32, i32* %r11.global-to-local, align 4
  %v0_10003be4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10003be4, i32* %r3.global-to-local, align 4
  %v0_10003be8 = load i32, i32* @r31, align 4
  store i32 268450804, i32* @lr, align 4
  %v4_10003bf0 = inttoptr i32 %v0_10003be4 to i32*
  %v5_10003bf0 = call i32 @__heap_link_free_area(i32* %v4_10003bf0, i32 %v1_10003bdc, i32 %v0_10003be0, i32 %v0_10003be8)
  store i32 %v5_10003bf0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003bf4

dec_label_pc_10003bf4:                            ; preds = %dec_label_pc_10003bcc, %dec_label_pc_10003bd8
  %v0_10003bf8 = load i32, i32* @r30, align 4
  store i32 %v0_10003bf8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003bf8

; uselistorder directives
  uselistorder i32 %v3_10003b78, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10003b30, { 1, 0 }
  uselistorder i32 %v0_10003b68.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10003b5c.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10003b0c, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10003afc, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10003bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10003b08, { 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_10003c20 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10003c20, i32* @r3, align 4
  %v0_10003c38 = call i32 @__pthread_return_void()
  %v0_10003c40 = call i32 @__pthread_return_0()
  %v2_10003c48 = ptrtoint i32* %stack_var_-56 to i32
  %v3_10003c50 = call i32 @__GI_random_r(i32* inttoptr (i32 268550472 to i32*), i32 %v2_10003c48)
  store i32 %v2_10003c20, i32* @r3, align 4
  %v0_10003c5c = call i32 @__pthread_return_void()
  %v3_10003c64 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10003c64
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c130.76 to i32), i32* %r29.global-to-local, align 4
  %v2_10003c9c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10003c9c, i32* @r3, align 4
  %v0_10003ca4 = call i32 @__pthread_return_void()
  %v0_10003cac = call i32 @__pthread_return_0()
  store i32 268451016, i32* @lr, align 4
  %v3_10003cc4 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1001c148)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10003ccc = icmp slt i32 %v3_10003cc4, 0
  store i32 %v2_10003c9c, i32* @r3, align 4
  br i1 %v1_10003ccc, label %dec_label_pc_10003ce0, label %dec_label_pc_10003cdc

dec_label_pc_10003cdc:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1001c14c.80 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003ce0

dec_label_pc_10003ce0:                            ; preds = %entry, %dec_label_pc_10003cdc
  %v0_10003ce0 = call i32 @__pthread_return_void()
  %v0_10003ce8 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_10003ce8

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10003ce0, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_10003d0c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10003d0c, i32* @r3, align 4
  %v0_10003d34 = call i32 @__pthread_return_void()
  %v0_10003d3c = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268451164, i32* @lr, align 4
  %v4_10003d58 = inttoptr i32 %arg1 to i32*
  %v5_10003d58 = call i32 @__GI_initstate_r(i32* %v4_10003d58, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1001c148 to i32))
  store i32 %v2_10003d0c, i32* @r3, align 4
  %v0_10003d64 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_1001c14c.80 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003d98 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10003d98, i32* @r3, align 4
  %v0_10003db4 = call i32 @__pthread_return_void()
  %v0_10003dbc = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_1001c148 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268451280, i32* @lr, align 4
  %v0_10003dcc = call i32 @srandom_r()
  store i32 %v2_10003d98, i32* @r3, align 4
  %v0_10003dd8 = call i32 @__pthread_return_void()
  ret i32 %v0_10003dd8

; uselistorder directives
  uselistorder i32* @global_var_1001c148, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c148 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10003df0 = add i32 %tmp, 12
  %v2_10003df0 = inttoptr i32 %v1_10003df0 to i32*
  %v3_10003df0 = load i32, i32* %v2_10003df0, align 4
  store i32 %v3_10003df0, i32* %r11.global-to-local, align 4
  %v0_10003df4 = load i32, i32* @lr, align 4
  store i32 %v0_10003df4, i32* %r0.global-to-local, align 4
  %v1_10003dfc = add i32 %arg1, 4
  store i32 %v1_10003dfc, i32* %r3.global-to-local, align 4
  %v3_10003e00 = icmp eq i32 %v3_10003df0, 0
  %v1_10003e04 = add i32 %tmp, 8
  %v2_10003e04 = inttoptr i32 %v1_10003e04 to i32*
  %v3_10003e04 = load i32, i32* %v2_10003e04, align 4
  store i32 %v3_10003e04, i32* %r9.global-to-local, align 4
  br i1 %v3_10003e00, label %dec_label_pc_10003e10, label %dec_label_pc_10003e18

dec_label_pc_10003e10:                            ; preds = %entry
  %v2_10003e10 = add i32 %v3_10003e04, -4
  %v3_10003e10 = inttoptr i32 %v2_10003e10 to i32*
  store i32 0, i32* %v3_10003e10, align 4
  br label %dec_label_pc_10003e30

dec_label_pc_10003e18:                            ; preds = %entry
  %v1_10003e18 = add i32 %tmp, 4
  %v2_10003e18 = inttoptr i32 %v1_10003e18 to i32*
  %v3_10003e18 = load i32, i32* %v2_10003e18, align 4
  %v2_10003e1c = sub i32 %v3_10003e18, %v3_10003e04
  %v4_10003e20 = sdiv i32 %v2_10003e1c, 4
  %v1_10003e24 = mul i32 %v4_10003e20, 5
  %v2_10003e28 = add i32 %v1_10003e24, %v3_10003df0
  store i32 %v2_10003e28, i32* %r0.global-to-local, align 4
  %v2_10003e2c = add i32 %v3_10003e04, -4
  %v3_10003e2c = inttoptr i32 %v2_10003e2c to i32*
  store i32 %v2_10003e28, i32* %v3_10003e2c, align 4
  br label %dec_label_pc_10003e30

dec_label_pc_10003e30:                            ; preds = %dec_label_pc_10003e10, %dec_label_pc_10003e18
  %v0_10003e30 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003e30 = add i32 %v0_10003e30, -4
  %v2_10003e30 = inttoptr i32 %v1_10003e30 to i32*
  %v3_10003e30 = load i32, i32* %v2_10003e30, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000abc4.81 to i32), i32* %r9.global-to-local, align 4
  %v2_10003e40 = srem i32 %v3_10003e30, 5
  store i32 %v2_10003e40, i32* %r11.global-to-local, align 4
  %v2_10003e50 = icmp ugt i32 %v2_10003e40, 4
  %v1_10003e54 = mul nsw i32 %v2_10003e40, 4
  store i32 %v1_10003e54, i32* %r0.global-to-local, align 4
  %v2_10003e5c = add i32 %v1_10003e54, ptrtoint (i32* @global_var_1000abc4.81 to i32)
  store i32 %v2_10003e5c, i32* %r10.global-to-local, align 4
  br i1 %v2_10003e50, label %dec_label_pc_10003ec0, label %dec_label_pc_10003e64

dec_label_pc_10003e64:                            ; preds = %dec_label_pc_10003e30
  %v3_10003e58 = icmp eq i32 %v2_10003e40, 0
  %v1_10003e64 = add i32 %v1_10003e54, add (i32 ptrtoint (i32* @global_var_1000abc4.81 to i32), i32 20)
  %v2_10003e64 = inttoptr i32 %v1_10003e64 to i32*
  %v3_10003e64 = load i32, i32* %v2_10003e64, align 4
  store i32 %v3_10003e64, i32* %r10.global-to-local, align 4
  %v3_10003e68 = inttoptr i32 %v2_10003e5c to i32*
  %v4_10003e68 = load i32, i32* %v3_10003e68, align 4
  store i32 %v4_10003e68, i32* %r9.global-to-local, align 4
  %v1_10003e6c = mul i32 %v3_10003e64, 4
  store i32 %v1_10003e6c, i32* %r0.global-to-local, align 4
  %v2_10003e70 = add i32 %tmp, 16
  %v3_10003e70 = inttoptr i32 %v2_10003e70 to i32*
  store i32 %v3_10003e64, i32* %v3_10003e70, align 4
  %v0_10003e74 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003e74 = add i32 %tmp, 20
  %v3_10003e74 = inttoptr i32 %v2_10003e74 to i32*
  store i32 %v0_10003e74, i32* %v3_10003e74, align 4
  %v0_10003e78 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003e78 = load i32, i32* %r0.global-to-local, align 4
  %v2_10003e78 = add i32 %v1_10003e78, %v0_10003e78
  store i32 %v2_10003e78, i32* %r8.global-to-local, align 4
  %v0_10003e7c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10003e7c, i32* %v2_10003df0, align 4
  br i1 %v3_10003e58, label %dec_label_pc_10003eb4, label %dec_label_pc_10003e84

dec_label_pc_10003e84:                            ; preds = %dec_label_pc_10003e64
  %v0_10003e84 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003e84 = add i32 %v0_10003e84, -4
  %v2_10003e84 = inttoptr i32 %v1_10003e84 to i32*
  %v3_10003e84 = load i32, i32* %v2_10003e84, align 4
  %v1_10003e88 = load i32, i32* %r7.global-to-local, align 4
  %v2_10003e88 = sdiv i32 %v3_10003e84, %v1_10003e88
  %v1_10003e8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003e8c = add i32 %v1_10003e8c, %v2_10003e88
  store i32 %v2_10003e8c, i32* %r9.global-to-local, align 4
  %v1_10003e90 = mul i32 %v2_10003e88, 4
  %v1_10003e94 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003e94 = sdiv i32 %v2_10003e8c, %v1_10003e94
  store i32 %v2_10003e94, i32* %r11.global-to-local, align 4
  %v2_10003e98 = add i32 %v1_10003e90, %v0_10003e84
  store i32 %v2_10003e98, i32* %r0.global-to-local, align 4
  %v2_10003e9c = add i32 %tmp, 4
  %v3_10003e9c = inttoptr i32 %v2_10003e9c to i32*
  store i32 %v2_10003e98, i32* %v3_10003e9c, align 4
  %v0_10003ea0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003ea0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ea0 = mul i32 %v1_10003ea0, %v0_10003ea0
  store i32 %v2_10003ea0, i32* %r11.global-to-local, align 4
  %v1_10003ea4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003ea4 = sub i32 %v1_10003ea4, %v2_10003ea0
  %v1_10003ea8 = mul i32 %v2_10003ea4, 4
  %v0_10003eac = load i32, i32* %r3.global-to-local, align 4
  %v2_10003eac = add i32 %v1_10003ea8, %v0_10003eac
  store i32 %v2_10003eac, i32* %r9.global-to-local, align 4
  store i32 %v2_10003eac, i32* %arg2, align 4
  br label %dec_label_pc_10003eb4

dec_label_pc_10003eb4:                            ; preds = %dec_label_pc_10003e64, %dec_label_pc_10003e84
  %v0_10003eb4 = load i32, i32* %r8.global-to-local, align 4
  %v2_10003eb4 = add i32 %tmp, 24
  %v3_10003eb4 = inttoptr i32 %v2_10003eb4 to i32*
  store i32 %v0_10003eb4, i32* %v3_10003eb4, align 4
  %v0_10003eb8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10003eb8, i32* %v2_10003e04, align 4
  %v0_10003ed4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10003ed0

dec_label_pc_10003ec0:                            ; preds = %dec_label_pc_10003e30
  %v0_10003ec0 = call i32 @__errno_location()
  store i32 %v0_10003ec0, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10003ec8 = inttoptr i32 %v0_10003ec0 to i32*
  store i32 22, i32* %v2_10003ec8, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10003ed0

dec_label_pc_10003ed0:                            ; preds = %dec_label_pc_10003eb4, %dec_label_pc_10003ec0
  %v0_10003ed4 = phi i32 [ %v0_10003ed4.pre, %dec_label_pc_10003eb4 ], [ -1, %dec_label_pc_10003ec0 ]
  store i32 %v0_10003df4, i32* %r0.global-to-local, align 4
  store i32 %v0_10003ed4, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003ed4

; uselistorder directives
  uselistorder i32 %v0_10003ed4, { 1, 0 }
  uselistorder i32 %v3_10003e64, { 1, 0, 2 }
  uselistorder i32 %v1_10003e54, { 2, 1, 0 }
  uselistorder i32 %v2_10003e40, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 6, 0, 5, 4, 1, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_10003ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10003eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10003e30, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10003ee4 = add i32 %tmp, 12
  %v2_10003ee4 = inttoptr i32 %v1_10003ee4 to i32*
  %v3_10003ee4 = load i32, i32* %v2_10003ee4, align 4
  %v1_10003ef0 = add i32 %tmp, 8
  %v2_10003ef0 = inttoptr i32 %v1_10003ef0 to i32*
  %v3_10003ef0 = load i32, i32* %v2_10003ef0, align 4
  store i32 %v3_10003ef0, i32* %r7.global-to-local, align 4
  %v3_10003ef4 = icmp eq i32 %v3_10003ee4, 0
  br i1 %v3_10003ef4, label %dec_label_pc_10003efc, label %dec_label_pc_10003f18

dec_label_pc_10003efc:                            ; preds = %entry
  %v1_10003efc = inttoptr i32 %v3_10003ef0 to i32*
  %v2_10003efc = load i32, i32* %v1_10003efc, align 4
  %v2_10003f00 = mul i32 %v2_10003efc, 1103515245
  %v1_10003f04 = add i32 %v2_10003f00, 12345
  %v1_10003f08 = urem i32 %v1_10003f04, -2147483648
  store i32 %v1_10003f08, i32* %r9.global-to-local, align 4
  store i32 %v1_10003f08, i32* %v1_10003efc, align 4
  %v0_10003f10 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003f10 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10003f10, i32* %v2_10003f10, align 4
  br label %dec_label_pc_10003f6c

dec_label_pc_10003f18:                            ; preds = %entry
  %v2_10003f18 = load i32, i32* %arg1, align 4
  %v1_10003f1c = add i32 %tmp, 4
  %v2_10003f1c = inttoptr i32 %v1_10003f1c to i32*
  %v3_10003f1c = load i32, i32* %v2_10003f1c, align 4
  store i32 %v3_10003f1c, i32* %r9.global-to-local, align 4
  %v1_10003f20 = add i32 %tmp, 24
  %v2_10003f20 = inttoptr i32 %v1_10003f20 to i32*
  %v3_10003f20 = load i32, i32* %v2_10003f20, align 4
  %v1_10003f24 = add i32 %v2_10003f18, 4
  store i32 %v1_10003f24, i32* %r8.global-to-local, align 4
  %v1_10003f28 = add i32 %v3_10003f1c, 4
  %v1_10003f2c = inttoptr i32 %v3_10003f1c to i32*
  %v2_10003f2c = load i32, i32* %v1_10003f2c, align 4
  store i32 %v2_10003f2c, i32* %r9.global-to-local, align 4
  %v2_10003f30 = icmp ult i32 %v1_10003f24, %v3_10003f20
  %v1_10003f38 = inttoptr i32 %v2_10003f18 to i32*
  %v2_10003f38 = load i32, i32* %v1_10003f38, align 4
  store i32 %v1_10003f28, i32* %r10.global-to-local, align 4
  %v2_10003f40 = add i32 %v2_10003f38, %v2_10003f2c
  %v1_10003f44 = udiv i32 %v2_10003f40, 2
  store i32 %v1_10003f44, i32* %r9.global-to-local, align 4
  store i32 %v2_10003f40, i32* %v1_10003f38, align 4
  %v0_10003f4c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003f4c = inttoptr i32 %arg2 to i32*
  store i32 %v0_10003f4c, i32* %v2_10003f4c, align 4
  br i1 %v2_10003f30, label %dec_label_pc_10003f5c, label %dec_label_pc_10003f54

dec_label_pc_10003f54:                            ; preds = %dec_label_pc_10003f18
  %v0_10003f54 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10003f54, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10003f64

dec_label_pc_10003f5c:                            ; preds = %dec_label_pc_10003f18
  %v2_10003f34 = icmp ult i32 %v1_10003f28, %v3_10003f20
  br i1 %v2_10003f34, label %dec_label_pc_10003f64, label %dec_label_pc_10003f60

dec_label_pc_10003f60:                            ; preds = %dec_label_pc_10003f5c
  %v0_10003f60 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10003f60, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003f64

dec_label_pc_10003f64:                            ; preds = %dec_label_pc_10003f5c, %dec_label_pc_10003f54, %dec_label_pc_10003f60
  %v0_10003f64 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10003f64, i32* %v2_10003f1c, align 4
  %v0_10003f68 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10003f68, i32* %arg1, align 4
  br label %dec_label_pc_10003f6c

dec_label_pc_10003f6c:                            ; preds = %dec_label_pc_10003efc, %dec_label_pc_10003f64
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10003f40, { 1, 0 }
  uselistorder i32 %v1_10003f28, { 1, 0 }
  uselistorder i32 %v3_10003f1c, { 1, 0, 2 }
  uselistorder i32 %v1_10003f08, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10003f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10003f64, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10003f74 = load i32, i32* @lr, align 4
  %v0_10003f80 = load i32, i32* @r4, align 4
  store i32 %v0_10003f80, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10003f8c = add i32 %v0_10003f80, 12
  %v2_10003f8c = inttoptr i32 %v1_10003f8c to i32*
  %v3_10003f8c = load i32, i32* %v2_10003f8c, align 4
  %v2_10003f90 = icmp ugt i32 %v3_10003f8c, 4
  br i1 %v2_10003f90, label %dec_label_pc_10004040, label %dec_label_pc_10003f98

dec_label_pc_10003f98:                            ; preds = %entry
  %v0_10003f98 = load i32, i32* @r3, align 4
  %v3_10003f98 = icmp eq i32 %v0_10003f98, 0
  %v1_10003f9c = add i32 %v0_10003f80, 8
  %v2_10003f9c = inttoptr i32 %v1_10003f9c to i32*
  %v3_10003f9c = load i32, i32* %v2_10003f9c, align 4
  store i32 %v3_10003f9c, i32* %r10.global-to-local, align 4
  br i1 %v3_10003f98, label %dec_label_pc_10003fa4, label %dec_label_pc_10003fa8

dec_label_pc_10003fa4:                            ; preds = %dec_label_pc_10003f98
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_10003fa8

dec_label_pc_10003fa8:                            ; preds = %dec_label_pc_10003f98, %dec_label_pc_10003fa4
  %v0_10003fac = phi i32 [ %v0_10003f98, %dec_label_pc_10003f98 ], [ 1, %dec_label_pc_10003fa4 ]
  %v3_10003fa8 = icmp eq i32 %v3_10003f8c, 0
  %v2_10003fac = inttoptr i32 %v3_10003f9c to i32*
  store i32 %v0_10003fac, i32* %v2_10003fac, align 4
  br i1 %v3_10003fa8, label %dec_label_pc_1000403c, label %dec_label_pc_10003fb4

dec_label_pc_10003fb4:                            ; preds = %dec_label_pc_10003fa8
  %v0_10003fb4 = load i32, i32* @r30, align 4
  %v1_10003fb4 = add i32 %v0_10003fb4, 16
  %v2_10003fb4 = inttoptr i32 %v1_10003fb4 to i32*
  %v3_10003fb4 = load i32, i32* %v2_10003fb4, align 4
  store i32 %v3_10003fb4, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10003fcc = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10003fb4, i32* %ctr.global-to-local, align 4
  %tmp27 = icmp sgt i32 %v3_10003fb4, 0
  br i1 %tmp27, label %dec_label_pc_10004008.preheader, label %dec_label_pc_10004008.preheader.thread

dec_label_pc_10004008.preheader.thread:           ; preds = %dec_label_pc_10003fb4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000400c

dec_label_pc_10004008.preheader:                  ; preds = %dec_label_pc_10003fb4
  %v1_1000400811 = add i32 %v3_10003fb4, -1
  store i32 %v1_1000400811, i32* %ctr.global-to-local, align 4
  %v2_1000400812 = icmp eq i32 %v1_1000400811, 0
  br i1 %v2_1000400812, label %dec_label_pc_1000400c, label %dec_label_pc_10003fe4

dec_label_pc_10003fe4:                            ; preds = %dec_label_pc_10004008.preheader, %dec_label_pc_10004004.dec_label_pc_10003fe4_crit_edge
  %v1_10004004 = phi i32 [ %v2_10004004, %dec_label_pc_10004004.dec_label_pc_10003fe4_crit_edge ], [ %v0_10003fcc, %dec_label_pc_10004008.preheader ]
  %v1_10003fe4 = phi i32 [ %v1_10003fe4.pre, %dec_label_pc_10004004.dec_label_pc_10003fe4_crit_edge ], [ 127773, %dec_label_pc_10004008.preheader ]
  %v0_10003fe4 = load i32, i32* @r3, align 4
  %v2_10003fe4 = sdiv i32 %v0_10003fe4, %v1_10003fe4
  %v2_10003fe8 = mul i32 %v2_10003fe4, %v1_10003fe4
  %v2_10003fec = sub i32 %v0_10003fe4, %v2_10003fe8
  %v1_10003ff0 = mul i32 %v2_10003fe4, 2836
  store i32 %v1_10003ff0, i32* %r0.global-to-local, align 4
  %v1_10003ff4 = mul i32 %v2_10003fec, 16807
  %v2_10003ff8 = sub i32 %v1_10003ff4, %v1_10003ff0
  store i32 %v2_10003ff8, i32* @r3, align 4
  %tmp28 = icmp sgt i32 %v2_10003ff8, -1
  br i1 %tmp28, label %dec_label_pc_10004004, label %dec_label_pc_10004000

dec_label_pc_10004000:                            ; preds = %dec_label_pc_10003fe4
  %v1_10004000 = load i32, i32* %r7.global-to-local, align 4
  %v2_10004000 = add i32 %v1_10004000, %v2_10003ff8
  store i32 %v2_10004000, i32* @r3, align 4
  br label %dec_label_pc_10004004

dec_label_pc_10004004:                            ; preds = %dec_label_pc_10003fe4, %dec_label_pc_10004000
  %v0_10004004 = phi i32 [ %v2_10003ff8, %dec_label_pc_10003fe4 ], [ %v2_10004000, %dec_label_pc_10004000 ]
  %v2_10004004 = add i32 %v1_10004004, 4
  %v3_10004004 = inttoptr i32 %v2_10004004 to i32*
  store i32 %v0_10004004, i32* %v3_10004004, align 4
  %v0_10004008 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004008 = add i32 %v0_10004008, -1
  store i32 %v1_10004008, i32* %ctr.global-to-local, align 4
  %v2_10004008 = icmp eq i32 %v1_10004008, 0
  br i1 %v2_10004008, label %dec_label_pc_10004008.dec_label_pc_1000400c_crit_edge, label %dec_label_pc_10004004.dec_label_pc_10003fe4_crit_edge

dec_label_pc_10004004.dec_label_pc_10003fe4_crit_edge: ; preds = %dec_label_pc_10004004
  %v1_10003fe4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10003fe4

dec_label_pc_10004008.dec_label_pc_1000400c_crit_edge: ; preds = %dec_label_pc_10004004
  %v0_1000400c.pre = load i32, i32* @r30, align 4
  %v0_10004010.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10004014.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000400c

dec_label_pc_1000400c:                            ; preds = %dec_label_pc_10004008.preheader.thread, %dec_label_pc_10004008.dec_label_pc_1000400c_crit_edge, %dec_label_pc_10004008.preheader
  %v0_10004014 = phi i32 [ %v0_10004014.pre, %dec_label_pc_10004008.dec_label_pc_1000400c_crit_edge ], [ %v0_10003fcc, %dec_label_pc_10004008.preheader ], [ %v0_10003fcc, %dec_label_pc_10004008.preheader.thread ]
  %v0_10004010 = phi i32 [ %v0_10004010.pre, %dec_label_pc_10004008.dec_label_pc_1000400c_crit_edge ], [ %v3_10003fb4, %dec_label_pc_10004008.preheader ], [ %v3_10003fb4, %dec_label_pc_10004008.preheader.thread ]
  %v1_10004014 = phi i32 [ %v0_1000400c.pre, %dec_label_pc_10004008.dec_label_pc_1000400c_crit_edge ], [ %v0_10003fb4, %dec_label_pc_10004008.preheader ], [ %v0_10003fb4, %dec_label_pc_10004008.preheader.thread ]
  %v1_1000400c = add i32 %v1_10004014, 20
  %v2_1000400c = inttoptr i32 %v1_1000400c to i32*
  %v3_1000400c = load i32, i32* %v2_1000400c, align 4
  store i32 %v3_1000400c, i32* %r0.global-to-local, align 4
  %v1_10004010 = mul i32 %v0_10004010, 10
  store i32 %v1_10004010, i32* %r31.global-to-local, align 4
  %v2_10004014 = add i32 %v1_10004014, 4
  %v3_10004014 = inttoptr i32 %v2_10004014 to i32*
  store i32 %v0_10004014, i32* %v3_10004014, align 4
  %v0_10004018 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004018 = mul i32 %v0_10004018, 4
  %v0_1000401c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000401c = add i32 %v0_1000401c, %v1_10004018
  store i32 %v2_1000401c, i32* %r0.global-to-local, align 4
  %v1_10004020 = load i32, i32* @r30, align 4
  %v2_10004020 = inttoptr i32 %v1_10004020 to i32*
  store i32 %v2_1000401c, i32* %v2_10004020, align 4
  %v0_1000402c1 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000402c2 = add i32 %v0_1000402c1, -1
  store i32 %v1_1000402c2, i32* @r31, align 4
  %v2_10004034 = ptrtoint i32* %stack_var_-24 to i32
  %tmp29 = icmp sgt i32 %v1_1000402c2, -1
  br i1 %tmp29, label %dec_label_pc_10004028, label %dec_label_pc_1000403c

dec_label_pc_10004028:                            ; preds = %dec_label_pc_1000400c, %dec_label_pc_10004028
  %v0_100040309 = load i32, i32* @r30, align 4
  %v2_10004028 = inttoptr i32 %v0_100040309 to i32*
  %v3_10004028 = call i32 @__GI_random_r(i32* %v2_10004028, i32 %v2_10004034)
  %v0_1000402c = load i32, i32* @r31, align 4
  %v1_1000402c = add i32 %v0_1000402c, -1
  store i32 %v1_1000402c, i32* @r31, align 4
  %tmp30 = icmp sgt i32 %v1_1000402c, -1
  br i1 %tmp30, label %dec_label_pc_10004028, label %dec_label_pc_1000403c

dec_label_pc_1000403c:                            ; preds = %dec_label_pc_10004028, %dec_label_pc_1000400c, %dec_label_pc_10003fa8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %entry, %dec_label_pc_1000403c
  %v0_10004040 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000403c ]
  store i32 %v0_10003f74, i32* %r0.global-to-local, align 4
  ret i32 %v0_10004040

; uselistorder directives
  uselistorder i32 %v1_10004008, { 1, 0 }
  uselistorder i32 %v2_10004004, { 1, 0 }
  uselistorder i32 %v2_10003ff8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10003fe4, { 1, 0 }
  uselistorder i32 %v0_10003fcc, { 1, 2, 0 }
  uselistorder i32 %v3_10003fb4, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32*, i32)* @__GI_random_r, { 1, 0 }
  uselistorder label %dec_label_pc_10004040, { 1, 0 }
  uselistorder label %dec_label_pc_10004028, { 1, 0 }
  uselistorder label %dec_label_pc_1000400c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10004004, { 1, 0 }
  uselistorder label %dec_label_pc_10003fe4, { 1, 0 }
  uselistorder label %dec_label_pc_10003fa8, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10004058 = icmp ugt i32 %arg2, 127
  %v0_10004060 = load i32, i32* @lr, align 4
  store i32 %v0_10004060, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_1000406c = sub i32 255, %arg2
  %v2_1000406c = sub i32 -1, %arg2
  %not.v5_1000406c = icmp ugt i32 %v1_1000406c, %v2_1000406c
  %v6_10004070 = sext i1 %not.v5_1000406c to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_10004078 = add i32 %tmp, 4
  store i32 %v1_10004078, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000abc4.81 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_10004090 = sub nsw i32 3, %v6_10004070
  store i32 %v1_10004090, i32* @r31, align 4
  br i1 %v2_10004058, label %dec_label_pc_100040b8, label %dec_label_pc_10004098

dec_label_pc_10004098:                            ; preds = %entry
  %v2_10004084 = icmp ugt i32 %arg2, 31
  %v1_10004098 = sub i32 63, %arg2
  %not.v5_10004098 = icmp ugt i32 %v1_10004098, %v2_1000406c
  %v6_1000409c = sext i1 %not.v5_10004098 to i32
  %v1_100040a4 = sub nsw i32 1, %v6_1000409c
  store i32 %v1_100040a4, i32* @r31, align 4
  br i1 %v2_10004084, label %dec_label_pc_100040b8, label %dec_label_pc_100040ac

dec_label_pc_100040ac:                            ; preds = %dec_label_pc_10004098
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_10004118, label %dec_label_pc_100040b8

dec_label_pc_100040b8:                            ; preds = %dec_label_pc_100040ac, %dec_label_pc_10004098, %entry
  %v0_100040b8 = phi i32 [ 0, %dec_label_pc_100040ac ], [ %v1_100040a4, %dec_label_pc_10004098 ], [ %v1_10004090, %entry ]
  %v1_100040b8 = mul nsw i32 %v0_100040b8, 4
  store i32 %v1_100040b8, i32* %r0.global-to-local, align 4
  %v2_100040bc = add i32 %arg3, 12
  %v3_100040bc = inttoptr i32 %v2_100040bc to i32*
  store i32 %v0_100040b8, i32* %v3_100040bc, align 4
  %v0_100040c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100040c0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100040c0 = add i32 %v1_100040c0, %v0_100040c0
  store i32 %v2_100040c0, i32* %r9.global-to-local, align 4
  %v3_100040c4 = inttoptr i32 %v2_100040c0 to i32*
  %v4_100040c4 = load i32, i32* %v3_100040c4, align 4
  store i32 %v4_100040c4, i32* %r0.global-to-local, align 4
  %v1_100040c8 = add i32 %v2_100040c0, 20
  %v2_100040c8 = inttoptr i32 %v1_100040c8 to i32*
  %v3_100040c8 = load i32, i32* %v2_100040c8, align 4
  store i32 %v3_100040c8, i32* %r9.global-to-local, align 4
  %v1_100040cc = load i32, i32* %r30.global-to-local, align 4
  %v2_100040cc = add i32 %v1_100040cc, 20
  %v3_100040cc = inttoptr i32 %v2_100040cc to i32*
  store i32 %v4_100040c4, i32* %v3_100040cc, align 4
  %v0_100040d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040d0 = mul i32 %v0_100040d0, 4
  store i32 %v1_100040d0, i32* %r0.global-to-local, align 4
  %v0_100040d4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100040d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100040d4 = add i32 %v1_100040d4, 8
  %v3_100040d4 = inttoptr i32 %v2_100040d4 to i32*
  store i32 %v0_100040d4, i32* %v3_100040d4, align 4
  %v0_100040d8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100040d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_100040d8 = add i32 %v1_100040d8, %v0_100040d8
  store i32 %v2_100040d8, i32* %r0.global-to-local, align 4
  %v0_100040dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100040dc = load i32, i32* %r30.global-to-local, align 4
  %v2_100040dc = add i32 %v1_100040dc, 16
  %v3_100040dc = inttoptr i32 %v2_100040dc to i32*
  store i32 %v0_100040dc, i32* %v3_100040dc, align 4
  %v0_100040e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100040e0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100040e0 = add i32 %v1_100040e0, 24
  %v3_100040e0 = inttoptr i32 %v2_100040e0 to i32*
  store i32 %v0_100040e0, i32* %v3_100040e0, align 4
  store i32 268452072, i32* @lr, align 4
  %v0_100040e4 = call i32 @srandom_r()
  %v0_100040e8 = load i32, i32* @r31, align 4
  %v3_100040e8 = icmp eq i32 %v0_100040e8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100040f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100040f4 = inttoptr i32 %v1_100040f4 to i32*
  store i32 0, i32* %v2_100040f4, align 4
  br i1 %v3_100040e8, label %dec_label_pc_1000412c, label %dec_label_pc_100040fc

dec_label_pc_100040fc:                            ; preds = %dec_label_pc_100040b8
  %v0_100040fc = load i32, i32* @r30, align 4
  %v1_100040fc = add i32 %v0_100040fc, 4
  %v2_100040fc = inttoptr i32 %v1_100040fc to i32*
  %v3_100040fc = load i32, i32* %v2_100040fc, align 4
  %v0_10004100 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004100 = sub i32 %v3_100040fc, %v0_10004100
  %v4_10004104 = sdiv i32 %v2_10004100, 4
  %v1_10004108 = mul i32 %v4_10004104, 5
  %v1_1000410c = load i32, i32* @r31, align 4
  %v2_1000410c = add i32 %v1_10004108, %v1_1000410c
  store i32 %v2_1000410c, i32* %r0.global-to-local, align 4
  %v1_10004110 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004110 = inttoptr i32 %v1_10004110 to i32*
  store i32 %v2_1000410c, i32* %v2_10004110, align 4
  br label %dec_label_pc_1000412c

dec_label_pc_10004118:                            ; preds = %dec_label_pc_100040ac
  %v0_10004118 = call i32 @__errno_location()
  store i32 %v0_10004118, i32* %r3.global-to-local, align 4
  %v0_1000411c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000411c = inttoptr i32 %v0_10004118 to i32*
  store i32 %v0_1000411c, i32* %v2_1000411c, align 4
  %v0_10004120 = call i32 @__errno_location()
  %v0_10004124 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004124 = inttoptr i32 %v0_10004120 to i32*
  store i32 %v0_10004124, i32* %v2_10004124, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000412c

dec_label_pc_1000412c:                            ; preds = %dec_label_pc_100040b8, %dec_label_pc_100040fc, %dec_label_pc_10004118
  store i32 %v0_10004060, i32* %r0.global-to-local, align 4
  %v0_1000413c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000413c

; uselistorder directives
  uselistorder i32 %v2_100040c0, { 1, 0, 2 }
  uselistorder i32 %v0_100040b8, { 1, 0 }
  uselistorder i32 %v2_1000406c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000abc4.81 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_1000412c, { 2, 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_10004148 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_10004148
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_10004150 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_10004150
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10004164 = load i32, i32* @r4, align 4
  store i32 %v0_10004164, i32* %r25.global-to-local, align 4
  %v0_1000416c = load i32, i32* @r5, align 4
  store i32 %v0_1000416c, i32* %r30.global-to-local, align 4
  %v0_10004170 = load i32, i32* @r6, align 4
  store i32 %v0_10004170, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10004178 = load i32, i32* @global_var_1001c35c, align 4
  %v2_1000418427 = load i8, i8* %arg1, align 1
  %v3_1000418428 = zext i8 %v2_1000418427 to i32
  %v1_1000418829 = mul nuw nsw i32 %v3_1000418428, 2
  %v2_1000418c30 = add i32 %v1_1000418829, %v3_10004178
  %v3_1000418c31 = inttoptr i32 %v2_1000418c30 to i16*
  %v4_1000418c32 = load i16, i16* %v3_1000418c31, align 2
  %v1_1000419034 = and i16 %v4_1000418c32, 32
  %v3_1000419035 = icmp eq i16 %v1_1000419034, 0
  br i1 %v3_1000419035, label %dec_label_pc_10004198, label %dec_label_pc_10004180

dec_label_pc_10004180:                            ; preds = %entry, %dec_label_pc_10004180
  %v0_100041b836 = phi i32 [ %v1_10004180, %dec_label_pc_10004180 ], [ %tmp, %entry ]
  %v1_10004180 = add i32 %v0_100041b836, 1
  store i32 %v1_10004180, i32* %r31.global-to-local, align 4
  %v1_10004184 = inttoptr i32 %v1_10004180 to i8*
  %v2_10004184 = load i8, i8* %v1_10004184, align 1
  %v3_10004184 = zext i8 %v2_10004184 to i32
  %v1_10004188 = mul nuw nsw i32 %v3_10004184, 2
  %v2_1000418c = add i32 %v1_10004188, %v3_10004178
  %v3_1000418c = inttoptr i32 %v2_1000418c to i16*
  %v4_1000418c = load i16, i16* %v3_1000418c, align 2
  %v1_10004190 = and i16 %v4_1000418c, 32
  %v3_10004190 = icmp eq i16 %v1_10004190, 0
  br i1 %v3_10004190, label %dec_label_pc_10004198, label %dec_label_pc_10004180

dec_label_pc_10004198:                            ; preds = %dec_label_pc_10004180, %entry
  %v0_100041b8.lcssa = phi i32 [ %tmp, %entry ], [ %v1_10004180, %dec_label_pc_10004180 ]
  %v2_10004184.lcssa = phi i8 [ %v2_1000418427, %entry ], [ %v2_10004184, %dec_label_pc_10004180 ]
  %v3_10004198 = icmp eq i8 %v2_10004184.lcssa, 43
  br i1 %v3_10004198, label %dec_label_pc_100041b8, label %dec_label_pc_100041a0

dec_label_pc_100041a0:                            ; preds = %dec_label_pc_10004198
  %v3_100041a0 = icmp eq i8 %v2_10004184.lcssa, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_100041a0, label %dec_label_pc_100041b8, label %dec_label_pc_100041bc

dec_label_pc_100041b8:                            ; preds = %dec_label_pc_10004198, %dec_label_pc_100041a0
  %storemerge = phi i32 [ 1, %dec_label_pc_100041a0 ], [ 0, %dec_label_pc_10004198 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_100041b8 = add i32 %v0_100041b8.lcssa, 1
  store i32 %v1_100041b8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100041bc

dec_label_pc_100041bc:                            ; preds = %dec_label_pc_100041a0, %dec_label_pc_100041b8
  %v1_100041bc = call i32 @__asm_rlwinm.(i32 %v0_1000416c, i32 0, i32 28, i32 26)
  %v4_100041bc = icmp eq i32 %v1_100041bc, 0
  br i1 %v4_100041bc, label %dec_label_pc_100041c8, label %dec_label_pc_100041bc.dec_label_pc_10004204_crit_edge

dec_label_pc_100041bc.dec_label_pc_10004204_crit_edge: ; preds = %dec_label_pc_100041bc
  %v0_10004204.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004204

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_100041bc
  %v0_100041c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100041c8 = inttoptr i32 %v0_100041c8 to i8*
  %v2_100041c8 = load i8, i8* %v1_100041c8, align 1
  %v0_100041cc = load i32, i32* %r30.global-to-local, align 4
  %v1_100041cc = add i32 %v0_100041cc, 10
  store i32 %v1_100041cc, i32* %r30.global-to-local, align 4
  %v3_100041d0 = icmp eq i8 %v2_100041c8, 48
  br i1 %v3_100041d0, label %dec_label_pc_100041d8, label %dec_label_pc_100041f8

dec_label_pc_100041d8:                            ; preds = %dec_label_pc_100041c8
  %v1_100041d8 = add i32 %v0_100041c8, 1
  %v2_100041d8 = inttoptr i32 %v1_100041d8 to i8*
  %v3_100041d8 = load i8, i8* %v2_100041d8, align 1
  %v4_100041d8 = zext i8 %v3_100041d8 to i32
  store i32 %v1_100041d8, i32* %r31.global-to-local, align 4
  %v1_100041dc = add i32 %v0_100041cc, 8
  store i32 %v1_100041dc, i32* %r30.global-to-local, align 4
  %v1_100041e0 = or i32 %v4_100041d8, 32
  %v3_100041e8 = icmp eq i32 %v1_100041e0, 120
  br i1 %v3_100041e8, label %dec_label_pc_100041f0, label %dec_label_pc_100041f8

dec_label_pc_100041f0:                            ; preds = %dec_label_pc_100041d8
  %v1_100041f0 = mul i32 %v1_100041dc, 2
  store i32 %v1_100041f0, i32* %r30.global-to-local, align 4
  %v1_100041f4 = add i32 %v0_100041c8, 2
  store i32 %v1_100041f4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100041f8

dec_label_pc_100041f8:                            ; preds = %dec_label_pc_100041d8, %dec_label_pc_100041c8, %dec_label_pc_100041f0
  %v0_100042ac15 = phi i32 [ %v1_100041d8, %dec_label_pc_100041f0 ], [ %tmp, %dec_label_pc_100041c8 ], [ %v1_100041d8, %dec_label_pc_100041d8 ]
  %v0_100041f8 = phi i32 [ %v1_100041f0, %dec_label_pc_100041f0 ], [ %v1_100041cc, %dec_label_pc_100041c8 ], [ %v1_100041dc, %dec_label_pc_100041d8 ]
  %tmp22 = icmp slt i32 %v0_100041f8, 17
  br i1 %tmp22, label %dec_label_pc_10004204, label %dec_label_pc_10004200

dec_label_pc_10004200:                            ; preds = %dec_label_pc_100041f8
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004204

dec_label_pc_10004204:                            ; preds = %dec_label_pc_100041bc.dec_label_pc_10004204_crit_edge, %dec_label_pc_100041f8, %dec_label_pc_10004200
  %v0_100042ac14 = phi i32 [ %tmp, %dec_label_pc_100041bc.dec_label_pc_10004204_crit_edge ], [ %v0_100042ac15, %dec_label_pc_100041f8 ], [ %v0_100042ac15, %dec_label_pc_10004200 ]
  %v1_10004218 = phi i32 [ %v0_10004204.pre, %dec_label_pc_100041bc.dec_label_pc_10004204_crit_edge ], [ %v0_100041f8, %dec_label_pc_100041f8 ], [ 16, %dec_label_pc_10004200 ]
  %v1_10004204 = add i32 %v1_10004218, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000420c = icmp ugt i32 %v1_10004204, 34
  br i1 %v2_1000420c, label %dec_label_pc_100042a4, label %dec_label_pc_10004214

dec_label_pc_10004214:                            ; preds = %dec_label_pc_10004204
  %v2_10004218 = udiv i32 -1, %v1_10004218
  store i32 %v2_10004218, i32* %r29.global-to-local, align 4
  %v2_1000421c = mul i32 %v2_10004218, %v1_10004218
  %v1_10004220 = sub i32 -1, %v2_1000421c
  %v1_10004224 = urem i32 %v1_10004220, 256
  store i32 %v1_10004224, i32* %r27.global-to-local, align 4
  %v0_10004230.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004230

dec_label_pc_1000422c:                            ; preds = %dec_label_pc_10004298, %dec_label_pc_10004280
  %v1_10004234.pre = phi i32 [ %v1_10004238, %dec_label_pc_10004298 ], [ %v1_10004234.pre.pre, %dec_label_pc_10004280 ]
  %v0_10004234.pre = phi i32 [ %v2_1000429c, %dec_label_pc_10004298 ], [ %v0_10004234.pre.pre, %dec_label_pc_10004280 ]
  %v0_1000422c = phi i32 [ %v1_1000423c, %dec_label_pc_10004298 ], [ %v0_1000422c.pre, %dec_label_pc_10004280 ]
  br label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_10004214, %dec_label_pc_1000422c
  %v0_100042ac12 = phi i32 [ %v0_100042ac14, %dec_label_pc_10004214 ], [ %v0_1000422c, %dec_label_pc_1000422c ]
  %v0_1000423c = phi i32 [ %v0_10004230.pre, %dec_label_pc_10004214 ], [ %v0_1000422c, %dec_label_pc_1000422c ]
  %v1_10004238 = phi i32 [ %v2_10004218, %dec_label_pc_10004214 ], [ %v1_10004234.pre, %dec_label_pc_1000422c ]
  %v0_10004298 = phi i32 [ 0, %dec_label_pc_10004214 ], [ %v0_10004234.pre, %dec_label_pc_1000422c ]
  %v1_10004230 = inttoptr i32 %v0_1000423c to i8*
  %v2_10004230 = load i8, i8* %v1_10004230, align 1
  %v3_10004230 = zext i8 %v2_10004230 to i32
  %v3_10004234 = icmp ugt i32 %v0_10004298, %v1_10004238
  %v1_1000423c = add i32 %v0_1000423c, 1
  store i32 %v1_1000423c, i32* %r31.global-to-local, align 4
  %v1_10004240 = add nsw i32 %v3_10004230, -48
  %v1_10004244 = or i32 %v3_10004230, 32
  %v1_10004248 = urem i32 %v1_10004240, 256
  %tmp23 = icmp ult i32 %v1_10004248, 10
  br i1 %tmp23, label %dec_label_pc_10004268, label %dec_label_pc_10004258

dec_label_pc_10004258:                            ; preds = %dec_label_pc_10004230
  %tmp24 = icmp ult i32 %v1_10004244, 97
  br i1 %tmp24, label %dec_label_pc_10004268, label %dec_label_pc_10004264

dec_label_pc_10004264:                            ; preds = %dec_label_pc_10004258
  %v1_10004258 = add nsw i32 %v1_10004244, -87
  %v1_10004264 = urem i32 %v1_10004258, 256
  br label %dec_label_pc_10004268

dec_label_pc_10004268:                            ; preds = %dec_label_pc_10004258, %dec_label_pc_10004230, %dec_label_pc_10004264
  %v1_1000429c = phi i32 [ 40, %dec_label_pc_10004258 ], [ %v1_10004248, %dec_label_pc_10004230 ], [ %v1_10004264, %dec_label_pc_10004264 ]
  %v1_10004268 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004268 = icmp slt i32 %v1_1000429c, %v1_10004268
  br i1 %v2_10004268, label %dec_label_pc_10004270, label %dec_label_pc_100042a4

dec_label_pc_10004270:                            ; preds = %dec_label_pc_10004268
  br i1 %v3_10004234, label %dec_label_pc_10004280, label %dec_label_pc_10004274

dec_label_pc_10004274:                            ; preds = %dec_label_pc_10004270
  %v1_10004274 = load i32, i32* %r27.global-to-local, align 4
  %v0_10004278.not = icmp ne i32 %v0_10004298, %v1_10004238
  %tmp25 = icmp ule i32 %v1_1000429c, %v1_10004274
  %or.cond = or i1 %tmp25, %v0_10004278.not
  br i1 %or.cond, label %dec_label_pc_10004298, label %dec_label_pc_10004280

dec_label_pc_10004280:                            ; preds = %dec_label_pc_10004274, %dec_label_pc_10004270
  %v0_10004280 = call i32 @__errno_location()
  %v0_10004284 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004284 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004284 = and i32 %v1_10004284, %v0_10004284
  store i32 %v2_10004284, i32* %r28.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_10004290 = inttoptr i32 %v0_10004280 to i32*
  store i32 34, i32* %v2_10004290, align 4
  %v0_1000422c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10004234.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10004234.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000422c

dec_label_pc_10004298:                            ; preds = %dec_label_pc_10004274
  %v2_10004298 = mul i32 %v1_10004268, %v0_10004298
  %v2_1000429c = add i32 %v2_10004298, %v1_1000429c
  store i32 %v2_1000429c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000422c

dec_label_pc_100042a4:                            ; preds = %dec_label_pc_10004268, %dec_label_pc_10004204
  %v0_100042ac = phi i32 [ %v0_100042ac14, %dec_label_pc_10004204 ], [ %v0_100042ac12, %dec_label_pc_10004268 ]
  %v0_100042a4 = load i32, i32* %r25.global-to-local, align 4
  %v3_100042a4 = icmp eq i32 %v0_100042a4, 0
  br i1 %v3_100042a4, label %dec_label_pc_100042b0, label %dec_label_pc_100042ac

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_100042a4
  %v2_100042ac = inttoptr i32 %v0_100042a4 to i32*
  store i32 %v0_100042ac, i32* %v2_100042ac, align 4
  br label %dec_label_pc_100042b0

dec_label_pc_100042b0:                            ; preds = %dec_label_pc_100042a4, %dec_label_pc_100042ac
  %v0_100042b0 = load i32, i32* %r26.global-to-local, align 4
  %v3_100042b0 = icmp eq i32 %v0_100042b0, 0
  %v0_100042b4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100042b4 = sub i32 0, %v0_100042b4
  %tmp40 = lshr i32 %v1_100042b4, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_100042f4.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_100042b0, label %dec_label_pc_100042e4, label %dec_label_pc_100042cc

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100042b0
  %v3_100042cc = icmp ugt i32 %v0_100042f4.pre.pre, %tmp41
  br i1 %v3_100042cc, label %dec_label_pc_100042d4, label %dec_label_pc_100042e4

dec_label_pc_100042d4:                            ; preds = %dec_label_pc_100042cc
  %v0_100042d4 = call i32 @__errno_location()
  %v2_100042dc = inttoptr i32 %v0_100042d4 to i32*
  store i32 34, i32* %v2_100042dc, align 4
  %v0_100042e0 = load i32, i32* @r31, align 4
  store i32 %v0_100042e0, i32* %r8.global-to-local, align 4
  %v0_100042e4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100042e4

dec_label_pc_100042e4:                            ; preds = %dec_label_pc_100042b0, %dec_label_pc_100042cc, %dec_label_pc_100042d4
  %v0_100042f4.pre = phi i32 [ %v0_100042f4.pre.pre, %dec_label_pc_100042cc ], [ %v0_100042e0, %dec_label_pc_100042d4 ], [ %v0_100042f4.pre.pre, %dec_label_pc_100042b0 ]
  %v0_100042e4 = phi i32 [ %v0_100042b4, %dec_label_pc_100042cc ], [ %v0_100042e4.pre, %dec_label_pc_100042d4 ], [ %v0_100042b4, %dec_label_pc_100042b0 ]
  %v3_100042e4 = icmp eq i32 %v0_100042e4, 0
  br i1 %v3_100042e4, label %dec_label_pc_100042f0, label %dec_label_pc_100042ec

dec_label_pc_100042ec:                            ; preds = %dec_label_pc_100042e4
  %v1_100042ec = sub i32 0, %v0_100042f4.pre
  store i32 %v1_100042ec, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100042f0

dec_label_pc_100042f0:                            ; preds = %dec_label_pc_100042e4, %dec_label_pc_100042ec
  %v0_100042f4 = phi i32 [ %v1_100042ec, %dec_label_pc_100042ec ], [ %v0_100042f4.pre, %dec_label_pc_100042e4 ]
  ret i32 %v0_100042f4

; uselistorder directives
  uselistorder i32 %v0_100042f4.pre, { 1, 0 }
  uselistorder i32 %v0_100042f4.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000429c, { 1, 0 }
  uselistorder i32 %v1_10004248, { 1, 0 }
  uselistorder i32 %v1_10004244, { 1, 0 }
  uselistorder i32 %v1_1000423c, { 1, 0 }
  uselistorder i32 %v3_10004230, { 1, 0 }
  uselistorder i32 %v0_10004298, { 1, 0, 2 }
  uselistorder i32 %v1_10004238, { 0, 2, 1 }
  uselistorder i32 %v0_1000422c, { 1, 0 }
  uselistorder i32 %v2_10004218, { 1, 0, 2 }
  uselistorder i32 %v1_100041f0, { 1, 0 }
  uselistorder i32 %v1_100041dc, { 1, 0, 2 }
  uselistorder i8 %v2_10004184.lcssa, { 1, 0 }
  uselistorder i32 %v1_10004180, { 0, 2, 3, 1 }
  uselistorder i32 %v3_10004178, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder label %dec_label_pc_100042f0, { 1, 0 }
  uselistorder label %dec_label_pc_100042e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100042b0, { 1, 0 }
  uselistorder label %dec_label_pc_10004268, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004230, { 1, 0 }
  uselistorder label %dec_label_pc_10004204, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100041f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100041bc, { 1, 0 }
  uselistorder label %dec_label_pc_100041b8, { 1, 0 }
  uselistorder label %dec_label_pc_10004180, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004320 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000432c = load i32, i32* @r3, align 4
  store i32 %v0_1000432c, i32* @r31, align 4
  store i32 %v2_10004320, i32* @r3, align 4
  %v0_10004338 = call i32 @__pthread_return_void()
  %v0_10004340 = call i32 @__pthread_return_0()
  %v3_10004348 = load i32, i32* @global_var_1001c3c4.85, align 4
  %v3_1000434c = icmp eq i32 %v3_10004348, 0
  br i1 %v3_1000434c, label %dec_label_pc_10004360, label %dec_label_pc_10004354

dec_label_pc_10004354:                            ; preds = %entry
  %v0_10004354 = load i32, i32* @r31, align 4
  %v3_1000435c = call i32 @unknown_0(i32 %v0_10004354, i32 268566528)
  br label %dec_label_pc_10004360

dec_label_pc_10004360:                            ; preds = %entry, %dec_label_pc_10004354
  store i32 %v2_10004320, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10004368 = call i32 @__pthread_return_void()
  store i32 %v0_10004368, i32* @r3, align 4
  store i32 268452720, i32* @lr, align 4
  %v1_1000436c = call i32 @__GI___uClibc_fini(i32 %v0_10004368)
  store i32 268452740, i32* @lr, align 4
  %v2_10004380 = call i32 @_stdio_term(i32 %v1_1000436c, i32 268459992)
  %v0_10004384 = load i32, i32* @r31, align 4
  %v1_10004388 = call i32 @__GI__exit(i32 %v0_10004384)
  ret i32 %v1_10004388

; uselistorder directives
  uselistorder label %dec_label_pc_10004360, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_100043dc:
  %v3_100043e0 = load i32, i32* @global_var_1001c3d4.88, align 4
  %v3_100043e4 = icmp eq i32 %v3_100043e0, 0
  br i1 %v3_100043e4, label %dec_label_pc_100043f4, label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043dc
  %v2_100043f0 = load i32, i32* @r4, align 4
  %v3_100043f0 = call i32 @unknown_0(i32 268566528, i32 %v2_100043f0)
  store i32 %v3_100043f0, i32* @r3, align 4
  br label %dec_label_pc_100043f4

dec_label_pc_100043f4:                            ; preds = %dec_label_pc_100043dc, %dec_label_pc_100043ec
  %v3_100043f8 = load i32, i32* @global_var_1001c3d8.89, align 4
  %v3_100043fc = icmp eq i32 %v3_100043f8, 0
  br i1 %v3_100043fc, label %dec_label_pc_100043f4.dec_label_pc_1000440c_crit_edge, label %dec_label_pc_10004404

dec_label_pc_100043f4.dec_label_pc_1000440c_crit_edge: ; preds = %dec_label_pc_100043f4
  %v0_1000441c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000440c

dec_label_pc_10004404:                            ; preds = %dec_label_pc_100043f4
  %v2_10004408 = load i32, i32* @r4, align 4
  %v3_10004408 = call i32 @unknown_0(i32 268566528, i32 %v2_10004408)
  br label %dec_label_pc_1000440c

dec_label_pc_1000440c:                            ; preds = %dec_label_pc_100043f4.dec_label_pc_1000440c_crit_edge, %dec_label_pc_10004404
  %v0_1000441c = phi i32 [ %v0_1000441c.pre, %dec_label_pc_100043f4.dec_label_pc_1000440c_crit_edge ], [ %v3_10004408, %dec_label_pc_10004404 ]
  ret i32 %v0_1000441c

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000440c, { 1, 0 }
  uselistorder label %dec_label_pc_100043f4, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_10004428 = load i32, i32* @r3, align 4
  ret i32 %v0_10004428
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268452944, i32* @lr, align 4
  %v2_1000444c = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_10004450 = icmp eq i32 %v2_1000444c, -1
  br i1 %v3_10004450, label %dec_label_pc_10004458, label %dec_label_pc_10004478

dec_label_pc_10004458:                            ; preds = %entry
  %v0_1000445c = load i32, i32* @r30, align 4
  store i32 268452972, i32* @lr, align 4
  %v3_10004468 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1000abec.90 to i32), i32 %v0_1000445c)
  %v1_1000446c = load i32, i32* @r31, align 4
  %v4_1000446c = icmp eq i32 %v3_10004468, %v1_1000446c
  br i1 %v4_1000446c, label %dec_label_pc_10004478, label %dec_label_pc_10004474

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004458
  %v1_10004474 = call i32 @abort(i32 %v3_10004468)
  br label %dec_label_pc_10004478

dec_label_pc_10004478:                            ; preds = %entry, %dec_label_pc_10004458, %dec_label_pc_10004474
  %v0_10004488 = phi i32 [ %v2_1000444c, %entry ], [ %v3_10004468, %dec_label_pc_10004458 ], [ %v1_10004474, %dec_label_pc_10004474 ]
  ret i32 %v0_10004488

; uselistorder directives
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100044ac = load i32, i32* @global_var_1001c3dc.91, align 4
  %v3_100044b0 = icmp eq i32 %v3_100044ac, 0
  br i1 %v3_100044b0, label %dec_label_pc_100044d4, label %entry.dec_label_pc_100044f8_crit_edge

entry.dec_label_pc_100044f8_crit_edge:            ; preds = %entry
  %v0_10004508.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100044f8

dec_label_pc_100044d4:                            ; preds = %entry
  store i32 1, i32* @global_var_1001c3dc.91, align 4
  store i32 4096, i32* @global_var_1001c3d0.70, align 4
  %v1_100044f4 = call i32 @_stdio_init(i32 268459860)
  br label %dec_label_pc_100044f8

dec_label_pc_100044f8:                            ; preds = %entry.dec_label_pc_100044f8_crit_edge, %dec_label_pc_100044d4
  %v0_10004508 = phi i32 [ %v0_10004508.pre, %entry.dec_label_pc_100044f8_crit_edge ], [ %v1_100044f4, %dec_label_pc_100044d4 ]
  ret i32 %v0_10004508

; uselistorder directives
  uselistorder label %dec_label_pc_100044f8, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10004524 = mul i32 %arg2, 4
  %v2_10004528 = add i32 %tmp, %v1_10004524
  %v0_1000452c = load i32, i32* @r9, align 4
  store i32 %v0_1000452c, i32* @global_var_1001c3c8.92, align 4
  %v1_10004530 = add i32 %v2_10004528, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_10004530, i32* @global_var_1001c3cc.93, align 4
  store i32 %arg6, i32* @global_var_1001c3d8.89, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_10004550 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_10004558 = icmp eq i32 %v1_10004530, %v2_10004550
  br i1 %v4_10004558, label %dec_label_pc_10004560, label %dec_label_pc_10004564

dec_label_pc_10004560:                            ; preds = %entry
  store i32 %v2_10004528, i32* @global_var_1001c3cc.93, align 4
  br label %dec_label_pc_10004564

dec_label_pc_10004564:                            ; preds = %entry, %dec_label_pc_10004560
  %v2_10004564 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268453236, i32* @lr, align 4
  %v3_10004570 = call i32 @__GI_memset(i32 %v2_10004564, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001c3cc.93, align 4
  br label %dec_label_pc_10004580

dec_label_pc_10004580:                            ; preds = %dec_label_pc_10004580, %dec_label_pc_10004564
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10004564 ], [ %v1_10004584, %dec_label_pc_10004580 ]
  %v1_10004580 = inttoptr i32 %storemerge to i32*
  %v2_10004580 = load i32, i32* %v1_10004580, align 4
  %v1_10004584 = add i32 %storemerge, 4
  %v3_10004588 = icmp eq i32 %v2_10004580, 0
  br i1 %v3_10004588, label %dec_label_pc_10004590, label %dec_label_pc_10004580

dec_label_pc_10004590:                            ; preds = %dec_label_pc_10004580
  store i32 %v1_10004584, i32* %r29.global-to-local, align 4
  %v1_100045bc12 = inttoptr i32 %v1_10004584 to i32*
  %v2_100045bc13 = load i32, i32* %v1_100045bc12, align 4
  %v3_100045c016 = icmp eq i32 %v2_100045bc13, 0
  br i1 %v3_100045c016, label %dec_label_pc_100045c8, label %dec_label_pc_10004598

dec_label_pc_10004598:                            ; preds = %dec_label_pc_10004590, %dec_label_pc_100045b8
  %v0_100045ac = phi i32 [ %v1_100045b8, %dec_label_pc_100045b8 ], [ %v1_10004584, %dec_label_pc_10004590 ]
  %v0_100045a0 = phi i32 [ %v2_100045bc, %dec_label_pc_100045b8 ], [ %v2_100045bc13, %dec_label_pc_10004590 ]
  %v2_10004598 = icmp ugt i32 %v0_100045a0, 14
  br i1 %v2_10004598, label %dec_label_pc_100045b8, label %dec_label_pc_100045a0

dec_label_pc_100045a0:                            ; preds = %dec_label_pc_10004598
  %v1_100045a0 = mul i32 %v0_100045a0, 8
  %v2_100045a8 = add i32 %v1_100045a0, %v2_10004564
  store i32 %v2_100045a8, i32* @r3, align 4
  store i32 %v0_100045ac, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268453304, i32* @lr, align 4
  %v0_100045b4 = call i32 @memcpy()
  %v0_100045b8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100045b8

dec_label_pc_100045b8:                            ; preds = %dec_label_pc_10004598, %dec_label_pc_100045a0
  %v0_100045b8 = phi i32 [ %v0_100045ac, %dec_label_pc_10004598 ], [ %v0_100045b8.pre, %dec_label_pc_100045a0 ]
  %v1_100045b8 = add i32 %v0_100045b8, 8
  store i32 %v1_100045b8, i32* %r29.global-to-local, align 4
  %v1_100045bc = inttoptr i32 %v1_100045b8 to i32*
  %v2_100045bc = load i32, i32* %v1_100045bc, align 4
  %v3_100045c0 = icmp eq i32 %v2_100045bc, 0
  br i1 %v3_100045c0, label %dec_label_pc_100045c8, label %dec_label_pc_10004598

dec_label_pc_100045c8:                            ; preds = %dec_label_pc_100045b8, %dec_label_pc_10004590
  %v1_100045cc = call i32 @_dl_aux_init(i32 %v2_10004564)
  store i32 %v1_100045cc, i32* @r3, align 4
  store i32 268453332, i32* @lr, align 4
  %v1_100045d0 = call i32 @__GI___uClibc_init(i32 %v1_100045cc)
  %v3_100045d8 = icmp eq i32 %tmp27, 0
  br i1 %v3_100045d8, label %dec_label_pc_100045e0, label %dec_label_pc_100045e4

dec_label_pc_100045e0:                            ; preds = %dec_label_pc_100045c8
  br label %dec_label_pc_100045e4

dec_label_pc_100045e4:                            ; preds = %dec_label_pc_100045c8, %dec_label_pc_100045e0
  %v0_100045ec = phi i32 [ %tmp27, %dec_label_pc_100045c8 ], [ 4096, %dec_label_pc_100045e0 ]
  store i32 %v0_100045ec, i32* @global_var_1001c3d0.70, align 4
  %v3_100045f0 = icmp eq i32 %tmp26, -1
  br i1 %v3_100045f0, label %dec_label_pc_100045f8, label %dec_label_pc_1000462c

dec_label_pc_100045f8:                            ; preds = %dec_label_pc_100045e4
  store i32 268453372, i32* @lr, align 4
  %v1_100045f8 = call i32 @getuid(i32 268566528)
  store i32 %v1_100045f8, i32* %r29.global-to-local, align 4
  store i32 268453380, i32* @lr, align 4
  %v0_10004600 = call i32 @geteuid()
  %v4_10004604 = icmp eq i32 %v1_100045f8, %v0_10004600
  br i1 %v4_10004604, label %dec_label_pc_1000460c, label %dec_label_pc_10004648

dec_label_pc_1000460c:                            ; preds = %dec_label_pc_100045f8
  store i32 268453392, i32* @lr, align 4
  %v1_1000460c = call i32 @getgid(i32 %v0_10004600)
  store i32 %v1_1000460c, i32* %r29.global-to-local, align 4
  store i32 268453400, i32* @lr, align 4
  %v0_10004614 = call i32 @getegid()
  %v4_10004618 = icmp eq i32 %v1_1000460c, %v0_10004614
  br i1 %v4_10004618, label %dec_label_pc_10004620.thread, label %dec_label_pc_10004648

dec_label_pc_10004620.thread:                     ; preds = %dec_label_pc_1000460c
  br label %dec_label_pc_10004678

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_100045e4
  %v4_10004630 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10004630, label %dec_label_pc_10004638, label %dec_label_pc_10004648

dec_label_pc_10004638:                            ; preds = %dec_label_pc_1000462c
  br label %dec_label_pc_10004648

dec_label_pc_10004648:                            ; preds = %dec_label_pc_10004638, %dec_label_pc_1000462c, %dec_label_pc_1000460c, %dec_label_pc_100045f8
  store i32 268453464, i32* @lr, align 4
  %v2_10004654 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268453480, i32* @lr, align 4
  %v2_10004664 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268453496, i32* @lr, align 4
  %v2_10004674 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_10004678

dec_label_pc_10004678:                            ; preds = %dec_label_pc_10004620.thread, %dec_label_pc_10004648
  %v0_10004684 = load i32, i32* @r30, align 4
  %v1_10004684 = inttoptr i32 %v0_10004684 to i32*
  %v2_10004684 = load i32, i32* %v1_10004684, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10004684, i32* inttoptr (i32 268551020 to i32*), align 4
  %v0_100046a4 = load i32, i32* @r27, align 4
  store i32 %v0_100046a4, i32* @global_var_1001c3d4.88, align 4
  br i1 false, label %dec_label_pc_100046ac, label %dec_label_pc_10004724

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004678, %dec_label_pc_100046ac
  br i1 undef, label %dec_label_pc_100046ac, label %dec_label_pc_10004724

dec_label_pc_10004724:                            ; preds = %dec_label_pc_100046ac, %dec_label_pc_10004678
  %v0_100046d0 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_100046d0)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10004734 = call i32 @__errno_location()
  %v2_1000473c = inttoptr i32 %v0_10004734 to i32*
  store i32 0, i32* %v2_1000473c, align 4
  %v0_10004750 = call i32 @__GI___h_errno_location()
  %v2_10004758 = inttoptr i32 %v0_10004750 to i32*
  store i32 0, i32* %v2_10004758, align 4
  %v0_10004768 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10004768)
  %v0_10004774 = call i32 @__GI_exit()
  ret i32 %v0_10004774

; uselistorder directives
  uselistorder i32 %v2_100045bc, { 1, 0 }
  uselistorder i32 %v1_100045b8, { 2, 1, 0 }
  uselistorder i32 %v1_10004584, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10004564, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100046ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004678, { 1, 0 }
  uselistorder label %dec_label_pc_100045e4, { 1, 0 }
  uselistorder label %dec_label_pc_100045b8, { 1, 0 }
  uselistorder label %dec_label_pc_10004598, { 1, 0 }
  uselistorder label %dec_label_pc_10004564, { 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004790 = call i32 @__asm_mfcr()
  %v1_10004794 = and i32 %v0_10004790, 268435456
  %v3_10004794 = icmp eq i32 %v1_10004794, 0
  store i32 %v0_10004790, i32* %r31.global-to-local, align 4
  br i1 %v3_10004794, label %dec_label_pc_100047ac, label %dec_label_pc_100047a0

dec_label_pc_100047a0:                            ; preds = %entry
  %v0_100047a0 = call i32 @__errno_location()
  %v0_100047a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100047a4 = inttoptr i32 %v0_100047a0 to i32*
  store i32 %v0_100047a4, i32* %v2_100047a4, align 4
  br label %dec_label_pc_100047ac

dec_label_pc_100047ac:                            ; preds = %entry, %dec_label_pc_100047a0
  %v0_100047bc = phi i32 [ %v0_10004790, %entry ], [ -1, %dec_label_pc_100047a0 ]
  ret i32 %v0_100047bc

; uselistorder directives
  uselistorder label %dec_label_pc_100047ac, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100047d8 = call i32 @__asm_mfcr()
  %v1_100047dc = and i32 %v0_100047d8, 268435456
  %v3_100047dc = icmp eq i32 %v1_100047dc, 0
  store i32 %v0_100047d8, i32* %r31.global-to-local, align 4
  br i1 %v3_100047dc, label %dec_label_pc_100047f4, label %dec_label_pc_100047e8

dec_label_pc_100047e8:                            ; preds = %entry
  %v0_100047e8 = call i32 @__errno_location()
  %v0_100047ec = load i32, i32* %r31.global-to-local, align 4
  %v2_100047ec = inttoptr i32 %v0_100047e8 to i32*
  store i32 %v0_100047ec, i32* %v2_100047ec, align 4
  br label %dec_label_pc_100047f4

dec_label_pc_100047f4:                            ; preds = %entry, %dec_label_pc_100047e8
  %v0_10004804 = phi i32 [ %v0_100047d8, %entry ], [ -1, %dec_label_pc_100047e8 ]
  ret i32 %v0_10004804

; uselistorder directives
  uselistorder label %dec_label_pc_100047f4, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004820 = call i32 @__asm_mfcr()
  %v1_10004824 = and i32 %v0_10004820, 268435456
  %v3_10004824 = icmp eq i32 %v1_10004824, 0
  store i32 %v0_10004820, i32* %r31.global-to-local, align 4
  br i1 %v3_10004824, label %dec_label_pc_1000483c, label %dec_label_pc_10004830

dec_label_pc_10004830:                            ; preds = %entry
  %v0_10004830 = call i32 @__errno_location()
  %v0_10004834 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004834 = inttoptr i32 %v0_10004830 to i32*
  store i32 %v0_10004834, i32* %v2_10004834, align 4
  br label %dec_label_pc_1000483c

dec_label_pc_1000483c:                            ; preds = %entry, %dec_label_pc_10004830
  %v0_1000484c = phi i32 [ %v0_10004820, %entry ], [ -1, %dec_label_pc_10004830 ]
  ret i32 %v0_1000484c

; uselistorder directives
  uselistorder label %dec_label_pc_1000483c, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004868 = call i32 @__asm_mfcr()
  %v1_1000486c = and i32 %v0_10004868, 268435456
  %v3_1000486c = icmp eq i32 %v1_1000486c, 0
  store i32 %v0_10004868, i32* %r31.global-to-local, align 4
  br i1 %v3_1000486c, label %dec_label_pc_10004884, label %dec_label_pc_10004878

dec_label_pc_10004878:                            ; preds = %entry
  %v0_10004878 = call i32 @__errno_location()
  %v0_1000487c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000487c = inttoptr i32 %v0_10004878 to i32*
  store i32 %v0_1000487c, i32* %v2_1000487c, align 4
  br label %dec_label_pc_10004884

dec_label_pc_10004884:                            ; preds = %entry, %dec_label_pc_10004878
  %v0_10004894 = phi i32 [ %v0_10004868, %entry ], [ -1, %dec_label_pc_10004878 ]
  ret i32 %v0_10004894

; uselistorder directives
  uselistorder label %dec_label_pc_10004884, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100048b0 = call i32 @__asm_mfcr()
  %v1_100048b4 = and i32 %v0_100048b0, 268435456
  %v3_100048b4 = icmp eq i32 %v1_100048b4, 0
  store i32 %v0_100048b0, i32* %r31.global-to-local, align 4
  br i1 %v3_100048b4, label %dec_label_pc_100048cc, label %dec_label_pc_100048c0

dec_label_pc_100048c0:                            ; preds = %entry
  %v0_100048c0 = call i32 @__errno_location()
  %v0_100048c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100048c4 = inttoptr i32 %v0_100048c0 to i32*
  store i32 %v0_100048c4, i32* %v2_100048c4, align 4
  br label %dec_label_pc_100048cc

dec_label_pc_100048cc:                            ; preds = %entry, %dec_label_pc_100048c0
  %v0_100048dc = phi i32 [ %v0_100048b0, %entry ], [ -1, %dec_label_pc_100048c0 ]
  ret i32 %v0_100048dc

; uselistorder directives
  uselistorder label %dec_label_pc_100048cc, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100048f4 = and i32 %arg2, 64
  %v3_100048f4 = icmp eq i32 %v1_100048f4, 0
  br i1 %v3_100048f4, label %dec_label_pc_10004920, label %dec_label_pc_10004904

dec_label_pc_10004904:                            ; preds = %entry
  %v2_1000490c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000490c, i32* %stack_var_-32, align 4
  %v0_1000491c = load i32, i32* @r5, align 4
  br label %dec_label_pc_10004920

dec_label_pc_10004920:                            ; preds = %entry, %dec_label_pc_10004904
  %v0_10004920 = phi i32 [ 0, %entry ], [ %v0_1000491c, %dec_label_pc_10004904 ]
  store i32 %v0_10004920, i32* @r5, align 4
  %v0_10004928 = call i32 @__asm_mfcr()
  %v1_1000492c = and i32 %v0_10004928, 268435456
  %v3_1000492c = icmp eq i32 %v1_1000492c, 0
  store i32 %v0_10004928, i32* %r31.global-to-local, align 4
  br i1 %v3_1000492c, label %dec_label_pc_10004944, label %dec_label_pc_10004938

dec_label_pc_10004938:                            ; preds = %dec_label_pc_10004920
  %v0_10004938 = call i32 @__errno_location()
  %v0_1000493c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000493c = inttoptr i32 %v0_10004938 to i32*
  store i32 %v0_1000493c, i32* %v2_1000493c, align 4
  br label %dec_label_pc_10004944

dec_label_pc_10004944:                            ; preds = %dec_label_pc_10004920, %dec_label_pc_10004938
  %v0_10004954 = phi i32 [ %v0_10004928, %dec_label_pc_10004920 ], [ -1, %dec_label_pc_10004938 ]
  ret i32 %v0_10004954

; uselistorder directives
  uselistorder label %dec_label_pc_10004944, { 1, 0 }
  uselistorder label %dec_label_pc_10004920, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_10004964 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_10004964
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_10004984 = load i32, i32* @global_var_1001c400.96, align 4
  %v3_10004988 = icmp eq i32 %v3_10004984, 0
  br i1 %v3_10004988, label %dec_label_pc_10004990, label %dec_label_pc_1000499c

dec_label_pc_10004990:                            ; preds = %entry
  store i32 268454292, i32* @lr, align 4
  %v1_10004990 = call i32 @__GI_brk(i32 0)
  %v1_10004994 = icmp slt i32 %v1_10004990, 0
  br i1 %v1_10004994, label %dec_label_pc_100049bc, label %dec_label_pc_10004990.dec_label_pc_1000499c_crit_edge

dec_label_pc_10004990.dec_label_pc_1000499c_crit_edge: ; preds = %dec_label_pc_10004990
  %v0_1000499c.pre = load i32, i32* @r30, align 4
  %v3_100049a0.pre = load i32, i32* @global_var_1001c400.96, align 4
  br label %dec_label_pc_1000499c

dec_label_pc_1000499c:                            ; preds = %dec_label_pc_10004990.dec_label_pc_1000499c_crit_edge, %entry
  %v3_100049a0 = phi i32 [ %v3_100049a0.pre, %dec_label_pc_10004990.dec_label_pc_1000499c_crit_edge ], [ %v3_10004984, %entry ]
  %v1_100049a8 = phi i32 [ %v0_1000499c.pre, %dec_label_pc_10004990.dec_label_pc_1000499c_crit_edge ], [ %arg1, %entry ]
  %v3_1000499c = icmp eq i32 %v1_100049a8, 0
  store i32 %v3_100049a0, i32* @r31, align 4
  br i1 %v3_1000499c, label %dec_label_pc_100049c0, label %dec_label_pc_100049b0

dec_label_pc_100049b0:                            ; preds = %dec_label_pc_1000499c
  %v2_100049a8 = add i32 %v1_100049a8, %v3_100049a0
  store i32 268454324, i32* @lr, align 4
  %v1_100049b0 = call i32 @__GI_brk(i32 %v2_100049a8)
  %tmp6 = icmp sgt i32 %v1_100049b0, -1
  br i1 %tmp6, label %dec_label_pc_100049b0.dec_label_pc_100049c0_crit_edge, label %dec_label_pc_100049bc

dec_label_pc_100049b0.dec_label_pc_100049c0_crit_edge: ; preds = %dec_label_pc_100049b0
  %v0_100049c4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100049c0

dec_label_pc_100049bc:                            ; preds = %dec_label_pc_100049b0, %dec_label_pc_10004990
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_100049c0

dec_label_pc_100049c0:                            ; preds = %dec_label_pc_100049b0.dec_label_pc_100049c0_crit_edge, %dec_label_pc_1000499c, %dec_label_pc_100049bc
  %v0_100049c4 = phi i32 [ %v0_100049c4.pre, %dec_label_pc_100049b0.dec_label_pc_100049c0_crit_edge ], [ %v3_100049a0, %dec_label_pc_1000499c ], [ -1, %dec_label_pc_100049bc ]
  ret i32 %v0_100049c4

; uselistorder directives
  uselistorder i32 %v3_100049a0, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_100049c0, { 2, 0, 1 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100049f0 = call i32 @__asm_mfcr()
  %v1_100049f4 = and i32 %v0_100049f0, 268435456
  %v3_100049f4 = icmp eq i32 %v1_100049f4, 0
  store i32 %v0_100049f0, i32* %r31.global-to-local, align 4
  br i1 %v3_100049f4, label %dec_label_pc_10004a0c, label %dec_label_pc_10004a00

dec_label_pc_10004a00:                            ; preds = %entry
  %v0_10004a00 = call i32 @__errno_location()
  %v0_10004a04 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004a04 = inttoptr i32 %v0_10004a00 to i32*
  store i32 %v0_10004a04, i32* %v2_10004a04, align 4
  br label %dec_label_pc_10004a0c

dec_label_pc_10004a0c:                            ; preds = %entry, %dec_label_pc_10004a00
  %v0_10004a1c = phi i32 [ %v0_100049f0, %entry ], [ -1, %dec_label_pc_10004a00 ]
  ret i32 %v0_10004a1c

; uselistorder directives
  uselistorder label %dec_label_pc_10004a0c, { 1, 0 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004a38 = call i32 @__asm_mfcr()
  %v1_10004a3c = and i32 %v0_10004a38, 268435456
  %v3_10004a3c = icmp eq i32 %v1_10004a3c, 0
  store i32 %v0_10004a38, i32* %r31.global-to-local, align 4
  br i1 %v3_10004a3c, label %dec_label_pc_10004a54, label %dec_label_pc_10004a48

dec_label_pc_10004a48:                            ; preds = %entry
  %v0_10004a48 = call i32 @__errno_location()
  %v0_10004a4c = load i32, i32* %r31.global-to-local, align 4
  %v2_10004a4c = inttoptr i32 %v0_10004a48 to i32*
  store i32 %v0_10004a4c, i32* %v2_10004a4c, align 4
  br label %dec_label_pc_10004a54

dec_label_pc_10004a54:                            ; preds = %entry, %dec_label_pc_10004a48
  %v0_10004a64 = phi i32 [ %v0_10004a38, %entry ], [ -1, %dec_label_pc_10004a48 ]
  ret i32 %v0_10004a64

; uselistorder directives
  uselistorder label %dec_label_pc_10004a54, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1001c3e4.97 to i32)
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10004a74 = load i32, i32* @r5, align 4
  %v1_10004a74 = call i32 @__asm_rlwinm.(i32 %v0_10004a74, i32 29, i32 3, i32 31)
  store i32 %v1_10004a74, i32* %r9.global-to-local, align 4
  %v4_10004a74 = icmp eq i32 %v1_10004a74, 0
  %v0_10004a78 = load i32, i32* @r4, align 4
  %v1_10004a78 = add i32 %v0_10004a78, -4
  store i32 %v1_10004a78, i32* %r4.global-to-local, align 4
  %v0_10004a7c = load i32, i32* @r3, align 4
  %v1_10004a7c = add i32 %v0_10004a7c, -4
  store i32 %v1_10004a7c, i32* @r11, align 4
  br i1 %v4_10004a74, label %dec_label_pc_10004aa4, label %dec_label_pc_10004a84

dec_label_pc_10004a84:                            ; preds = %entry
  %v1_10004a84 = urem i32 %v1_10004a7c, 4
  %v3_10004a84 = icmp eq i32 %v1_10004a84, 0
  br i1 %v3_10004a84, label %dec_label_pc_10004a8c, label %dec_label_pc_10004ae0

dec_label_pc_10004a8c:                            ; preds = %dec_label_pc_10004b00.dec_label_pc_10004a8c_crit_edge, %dec_label_pc_10004a84
  %v1_10004a98.pre = phi i32 [ %v1_10004a7c, %dec_label_pc_10004a84 ], [ %v1_10004a98.pre.pre, %dec_label_pc_10004b00.dec_label_pc_10004a8c_crit_edge ]
  %v0_10004a8c = phi i32 [ %v1_10004a74, %dec_label_pc_10004a84 ], [ %v1_10004b00, %dec_label_pc_10004b00.dec_label_pc_10004a8c_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10004a84 ], [ %v2_10004ae8, %dec_label_pc_10004b00.dec_label_pc_10004a8c_crit_edge ]
  store i32 %v0_10004a8c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004a90

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a90, %dec_label_pc_10004a8c
  %v1_10004a98 = phi i32 [ %v2_10004a9c, %dec_label_pc_10004a90 ], [ %v1_10004a98.pre, %dec_label_pc_10004a8c ]
  %v0_10004a90 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004a90 = add i32 %v0_10004a90, 4
  %v2_10004a90 = inttoptr i32 %v1_10004a90 to i32*
  %v3_10004a90 = load i32, i32* %v2_10004a90, align 4
  %v1_10004a94 = add i32 %v0_10004a90, 8
  %v2_10004a94 = inttoptr i32 %v1_10004a94 to i32*
  %v3_10004a94 = load i32, i32* %v2_10004a94, align 4
  store i32 %v3_10004a94, i32* %r9.global-to-local, align 4
  store i32 %v1_10004a94, i32* %r4.global-to-local, align 4
  %v2_10004a98 = add i32 %v1_10004a98, 4
  %v3_10004a98 = inttoptr i32 %v2_10004a98 to i32*
  store i32 %v3_10004a90, i32* %v3_10004a98, align 4
  %v0_10004a9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10004a9c = load i32, i32* @r11, align 4
  %v2_10004a9c = add i32 %v1_10004a9c, 8
  %v3_10004a9c = inttoptr i32 %v2_10004a9c to i32*
  store i32 %v0_10004a9c, i32* %v3_10004a9c, align 4
  store i32 %v2_10004a9c, i32* @r11, align 4
  %v0_10004aa0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004aa0 = add i32 %v0_10004aa0, -1
  store i32 %v1_10004aa0, i32* %ctr.global-to-local, align 4
  %v2_10004aa0 = icmp eq i32 %v1_10004aa0, 0
  br i1 %v2_10004aa0, label %dec_label_pc_10004aa4, label %dec_label_pc_10004a90

dec_label_pc_10004aa4:                            ; preds = %dec_label_pc_10004a90, %dec_label_pc_10004b00, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_10004ae8, %dec_label_pc_10004b00 ], [ %.0, %dec_label_pc_10004a90 ]
  %v1_10004aa4 = urem i32 %.1, 8
  store i32 %v1_10004aa4, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10004aa4, 4
  br i1 %tmp, label %dec_label_pc_10004abc, label %dec_label_pc_10004ab0

dec_label_pc_10004ab0:                            ; preds = %dec_label_pc_10004aa4
  %v0_10004ab0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004ab0 = add i32 %v0_10004ab0, 4
  %v2_10004ab0 = inttoptr i32 %v1_10004ab0 to i32*
  %v3_10004ab0 = load i32, i32* %v2_10004ab0, align 4
  store i32 %v1_10004ab0, i32* %r4.global-to-local, align 4
  %v1_10004ab4 = add nsw i32 %v1_10004aa4, -4
  store i32 %v1_10004ab4, i32* @r5, align 4
  %v1_10004ab8 = load i32, i32* @r11, align 4
  %v2_10004ab8 = add i32 %v1_10004ab8, 4
  %v3_10004ab8 = inttoptr i32 %v2_10004ab8 to i32*
  store i32 %v3_10004ab0, i32* %v3_10004ab8, align 4
  store i32 %v2_10004ab8, i32* @r11, align 4
  %v0_10004abc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10004abc

dec_label_pc_10004abc:                            ; preds = %dec_label_pc_10004aa4, %dec_label_pc_10004ab0
  %v0_10004abc = phi i32 [ %v1_10004aa4, %dec_label_pc_10004aa4 ], [ %v0_10004abc.pre, %dec_label_pc_10004ab0 ]
  %v3_10004abc = icmp eq i32 %v0_10004abc, 0
  %v0_10004ac0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004abc, i32 %v0_10004ac0)
  %v0_10004ac4 = load i32, i32* @r5, align 4
  store i32 %v0_10004ac4, i32* %ctr.global-to-local, align 4
  %v0_10004ac8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004ac8 = add i32 %v0_10004ac8, 3
  store i32 %v1_10004ac8, i32* %r4.global-to-local, align 4
  %v0_10004acc = load i32, i32* @r11, align 4
  %v1_10004acc = add i32 %v0_10004acc, 3
  store i32 %v1_10004acc, i32* %r9.global-to-local, align 4
  %v1_10004ad09 = add i32 %v0_10004ac8, 4
  %v2_10004ad010 = inttoptr i32 %v1_10004ad09 to i8*
  %v3_10004ad011 = load i8, i8* %v2_10004ad010, align 1
  store i32 %v1_10004ad09, i32* %r4.global-to-local, align 4
  %v3_10004ad413 = add i32 %v0_10004acc, 4
  %v4_10004ad414 = inttoptr i32 %v3_10004ad413 to i8*
  store i8 %v3_10004ad011, i8* %v4_10004ad414, align 1
  store i32 %v3_10004ad413, i32* %r9.global-to-local, align 4
  %v0_10004ad815 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004ad816 = add i32 %v0_10004ad815, -1
  store i32 %v1_10004ad816, i32* %ctr.global-to-local, align 4
  %v2_10004ad817 = icmp eq i32 %v1_10004ad816, 0
  br i1 %v2_10004ad817, label %dec_label_pc_10004b0c, label %dec_label_pc_10004ad0.dec_label_pc_10004ad0_crit_edge

dec_label_pc_10004ad0.dec_label_pc_10004ad0_crit_edge: ; preds = %dec_label_pc_10004abc, %dec_label_pc_10004ad0.dec_label_pc_10004ad0_crit_edge
  %v3_10004ad418 = phi i32 [ %v3_10004ad4, %dec_label_pc_10004ad0.dec_label_pc_10004ad0_crit_edge ], [ %v3_10004ad413, %dec_label_pc_10004abc ]
  %v0_10004ad0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10004ad0 = add i32 %v0_10004ad0.pre, 1
  %v2_10004ad0 = inttoptr i32 %v1_10004ad0 to i8*
  %v3_10004ad0 = load i8, i8* %v2_10004ad0, align 1
  store i32 %v1_10004ad0, i32* %r4.global-to-local, align 4
  %v3_10004ad4 = add i32 %v3_10004ad418, 1
  %v4_10004ad4 = inttoptr i32 %v3_10004ad4 to i8*
  store i8 %v3_10004ad0, i8* %v4_10004ad4, align 1
  store i32 %v3_10004ad4, i32* %r9.global-to-local, align 4
  %v0_10004ad8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004ad8 = add i32 %v0_10004ad8, -1
  store i32 %v1_10004ad8, i32* %ctr.global-to-local, align 4
  %v2_10004ad8 = icmp eq i32 %v1_10004ad8, 0
  br i1 %v2_10004ad8, label %dec_label_pc_10004b0c, label %dec_label_pc_10004ad0.dec_label_pc_10004ad0_crit_edge

dec_label_pc_10004ae0:                            ; preds = %dec_label_pc_10004a84
  %v1_10004ae0 = sub nsw i32 4, %v1_10004a84
  store i32 %v1_10004ae0, i32* %ctr.global-to-local, align 4
  %v1_10004ae8 = load i32, i32* @r5, align 4
  %v2_10004ae8 = sub i32 %v1_10004ae8, %v1_10004ae0
  br label %dec_label_pc_10004aec

dec_label_pc_10004aec:                            ; preds = %dec_label_pc_10004aec.dec_label_pc_10004aec_crit_edge, %dec_label_pc_10004ae0
  %v2_10004af4 = phi i32 [ %v1_10004af8, %dec_label_pc_10004aec.dec_label_pc_10004aec_crit_edge ], [ %v1_10004a7c, %dec_label_pc_10004ae0 ]
  %v0_10004aec = phi i32 [ %v0_10004aec.pre, %dec_label_pc_10004aec.dec_label_pc_10004aec_crit_edge ], [ %v1_10004a78, %dec_label_pc_10004ae0 ]
  %v1_10004aec = add i32 %v0_10004aec, 4
  %v2_10004aec = inttoptr i32 %v1_10004aec to i8*
  %v3_10004aec = load i8, i8* %v2_10004aec, align 1
  %v1_10004af0 = add i32 %v0_10004aec, 1
  store i32 %v1_10004af0, i32* %r4.global-to-local, align 4
  %v3_10004af4 = add i32 %v2_10004af4, 4
  %v4_10004af4 = inttoptr i32 %v3_10004af4 to i8*
  store i8 %v3_10004aec, i8* %v4_10004af4, align 1
  %v0_10004af8 = load i32, i32* @r11, align 4
  %v1_10004af8 = add i32 %v0_10004af8, 1
  store i32 %v1_10004af8, i32* @r11, align 4
  %v0_10004afc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004afc = add i32 %v0_10004afc, -1
  store i32 %v1_10004afc, i32* %ctr.global-to-local, align 4
  %v2_10004afc = icmp eq i32 %v1_10004afc, 0
  br i1 %v2_10004afc, label %dec_label_pc_10004b00, label %dec_label_pc_10004aec.dec_label_pc_10004aec_crit_edge

dec_label_pc_10004aec.dec_label_pc_10004aec_crit_edge: ; preds = %dec_label_pc_10004aec
  %v0_10004aec.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10004aec

dec_label_pc_10004b00:                            ; preds = %dec_label_pc_10004aec
  %v1_10004b00 = call i32 @__asm_rlwinm.(i32 %v2_10004ae8, i32 29, i32 3, i32 31)
  store i32 %v1_10004b00, i32* %r9.global-to-local, align 4
  %v4_10004b00 = icmp eq i32 %v1_10004b00, 0
  br i1 %v4_10004b00, label %dec_label_pc_10004aa4, label %dec_label_pc_10004b00.dec_label_pc_10004a8c_crit_edge

dec_label_pc_10004b00.dec_label_pc_10004a8c_crit_edge: ; preds = %dec_label_pc_10004b00
  %v1_10004a98.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10004a8c

dec_label_pc_10004b0c:                            ; preds = %dec_label_pc_10004ad0.dec_label_pc_10004ad0_crit_edge, %dec_label_pc_10004abc
  %v0_10004b0c = load i32, i32* @r3, align 4
  ret i32 %v0_10004b0c

; uselistorder directives
  uselistorder i32 %v1_10004b00, { 1, 2, 0 }
  uselistorder i32 %v1_10004afc, { 1, 0 }
  uselistorder i32 %v1_10004af8, { 1, 0 }
  uselistorder i32 %v0_10004aec, { 1, 0 }
  uselistorder i32 %v2_10004ae8, { 2, 1, 0 }
  uselistorder i32 %v1_10004ad8, { 1, 0 }
  uselistorder i32 %v3_10004ad4, { 1, 2, 0 }
  uselistorder i32 %v1_10004aa4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10004aa0, { 1, 0 }
  uselistorder i32 %v2_10004a9c, { 1, 2, 0 }
  uselistorder i32 %v1_10004a84, { 1, 0 }
  uselistorder i32 %v1_10004a7c, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004ad0.dec_label_pc_10004ad0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10004abc, { 1, 0 }
  uselistorder label %dec_label_pc_10004aa4, { 1, 0, 2 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10004b10 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_10004b18 = load i32, i32* @r5, align 4
  store i32 %v0_10004b18, i32* @r11, align 4
  br i1 %v2_10004b10, label %dec_label_pc_10004b24, label %dec_label_pc_10004b20

dec_label_pc_10004b20:                            ; preds = %entry
  %v0_10004b20 = call i32 @memcpy()
  store i32 %v0_10004b20, i32* @r3, align 4
  %v0_10004b24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10004b24

dec_label_pc_10004b24:                            ; preds = %entry, %dec_label_pc_10004b20
  %v0_10004b24 = phi i32 [ %v0_10004b18, %entry ], [ %v0_10004b24.pre, %dec_label_pc_10004b20 ]
  %v1_10004b24 = call i32 @__asm_rlwinm.(i32 %v0_10004b24, i32 29, i32 3, i32 31)
  store i32 %v1_10004b24, i32* %r9.global-to-local, align 4
  %v4_10004b24 = icmp eq i32 %v1_10004b24, 0
  %v1_10004b28 = load i32, i32* @r5, align 4
  %v2_10004b28 = add i32 %v1_10004b28, %arg2
  store i32 %v2_10004b28, i32* %r4.global-to-local, align 4
  %v0_10004b2c = load i32, i32* @r3, align 4
  %v2_10004b2c = add i32 %v0_10004b2c, %v1_10004b28
  store i32 %v2_10004b2c, i32* %r10.global-to-local, align 4
  br i1 %v4_10004b24, label %dec_label_pc_10004b54, label %dec_label_pc_10004b34

dec_label_pc_10004b34:                            ; preds = %dec_label_pc_10004b24
  %v1_10004b34 = urem i32 %v2_10004b2c, 4
  %v3_10004b34 = icmp eq i32 %v1_10004b34, 0
  br i1 %v3_10004b34, label %dec_label_pc_10004b3c, label %dec_label_pc_10004b88

dec_label_pc_10004b3c:                            ; preds = %dec_label_pc_10004ba0.dec_label_pc_10004b3c_crit_edge, %dec_label_pc_10004b34
  %v1_10004b48.pre = phi i32 [ %v1_10004b48.pre.pre, %dec_label_pc_10004ba0.dec_label_pc_10004b3c_crit_edge ], [ %v2_10004b2c, %dec_label_pc_10004b34 ]
  %v0_10004b3c = phi i32 [ %v1_10004ba0, %dec_label_pc_10004ba0.dec_label_pc_10004b3c_crit_edge ], [ %v1_10004b24, %dec_label_pc_10004b34 ]
  store i32 %v0_10004b3c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004b40

dec_label_pc_10004b40:                            ; preds = %dec_label_pc_10004b40, %dec_label_pc_10004b3c
  %v1_10004b48 = phi i32 [ %v2_10004b4c, %dec_label_pc_10004b40 ], [ %v1_10004b48.pre, %dec_label_pc_10004b3c ]
  %v0_10004b40 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004b40 = add i32 %v0_10004b40, -4
  %v2_10004b40 = inttoptr i32 %v1_10004b40 to i32*
  %v3_10004b40 = load i32, i32* %v2_10004b40, align 4
  %v1_10004b44 = add i32 %v0_10004b40, -8
  %v2_10004b44 = inttoptr i32 %v1_10004b44 to i32*
  %v3_10004b44 = load i32, i32* %v2_10004b44, align 4
  store i32 %v3_10004b44, i32* %r9.global-to-local, align 4
  store i32 %v1_10004b44, i32* %r4.global-to-local, align 4
  %v2_10004b48 = add i32 %v1_10004b48, -4
  %v3_10004b48 = inttoptr i32 %v2_10004b48 to i32*
  store i32 %v3_10004b40, i32* %v3_10004b48, align 4
  %v0_10004b4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10004b4c = load i32, i32* %r10.global-to-local, align 4
  %v2_10004b4c = add i32 %v1_10004b4c, -8
  %v3_10004b4c = inttoptr i32 %v2_10004b4c to i32*
  store i32 %v0_10004b4c, i32* %v3_10004b4c, align 4
  store i32 %v2_10004b4c, i32* %r10.global-to-local, align 4
  %v0_10004b50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004b50 = add i32 %v0_10004b50, -1
  store i32 %v1_10004b50, i32* %ctr.global-to-local, align 4
  %v2_10004b50 = icmp eq i32 %v1_10004b50, 0
  br i1 %v2_10004b50, label %dec_label_pc_10004b54, label %dec_label_pc_10004b40

dec_label_pc_10004b54:                            ; preds = %dec_label_pc_10004b40, %dec_label_pc_10004ba0, %dec_label_pc_10004b24
  %v0_10004b54 = load i32, i32* @r11, align 4
  %v1_10004b54 = urem i32 %v0_10004b54, 8
  store i32 %v1_10004b54, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10004b54, 4
  br i1 %tmp, label %dec_label_pc_10004b6c, label %dec_label_pc_10004b60

dec_label_pc_10004b60:                            ; preds = %dec_label_pc_10004b54
  %v0_10004b60 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004b60 = add i32 %v0_10004b60, -4
  %v2_10004b60 = inttoptr i32 %v1_10004b60 to i32*
  %v3_10004b60 = load i32, i32* %v2_10004b60, align 4
  store i32 %v1_10004b60, i32* %r4.global-to-local, align 4
  %v1_10004b64 = add nsw i32 %v1_10004b54, -4
  store i32 %v1_10004b64, i32* %r5.global-to-local, align 4
  %v1_10004b68 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004b68 = add i32 %v1_10004b68, -4
  %v3_10004b68 = inttoptr i32 %v2_10004b68 to i32*
  store i32 %v3_10004b60, i32* %v3_10004b68, align 4
  store i32 %v2_10004b68, i32* %r10.global-to-local, align 4
  %v0_10004b6c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10004b6c

dec_label_pc_10004b6c:                            ; preds = %dec_label_pc_10004b54, %dec_label_pc_10004b60
  %v0_10004b74 = phi i32 [ %v1_10004b54, %dec_label_pc_10004b54 ], [ %v0_10004b6c.pre, %dec_label_pc_10004b60 ]
  %v3_10004b6c = icmp eq i32 %v0_10004b74, 0
  br i1 %v3_10004b6c, label %dec_label_pc_10004bac, label %dec_label_pc_10004b74

dec_label_pc_10004b74:                            ; preds = %dec_label_pc_10004b6c
  store i32 %v0_10004b74, i32* %ctr.global-to-local, align 4
  %v2_10004b7c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10004b78

dec_label_pc_10004b78:                            ; preds = %dec_label_pc_10004b78, %dec_label_pc_10004b74
  %v2_10004b7c = phi i32 [ %v3_10004b7c, %dec_label_pc_10004b78 ], [ %v2_10004b7c.pre, %dec_label_pc_10004b74 ]
  %v0_10004b78 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004b78 = add i32 %v0_10004b78, -1
  %v2_10004b78 = inttoptr i32 %v1_10004b78 to i8*
  %v3_10004b78 = load i8, i8* %v2_10004b78, align 1
  store i32 %v1_10004b78, i32* %r4.global-to-local, align 4
  %v3_10004b7c = add i32 %v2_10004b7c, -1
  %v4_10004b7c = inttoptr i32 %v3_10004b7c to i8*
  store i8 %v3_10004b78, i8* %v4_10004b7c, align 1
  store i32 %v3_10004b7c, i32* %r10.global-to-local, align 4
  %v0_10004b80 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004b80 = add i32 %v0_10004b80, -1
  store i32 %v1_10004b80, i32* %ctr.global-to-local, align 4
  %v2_10004b80 = icmp eq i32 %v1_10004b80, 0
  br i1 %v2_10004b80, label %dec_label_pc_10004bac, label %dec_label_pc_10004b78

dec_label_pc_10004b88:                            ; preds = %dec_label_pc_10004b34
  %v1_10004b88 = sub nsw i32 4, %v1_10004b34
  store i32 %v1_10004b88, i32* %ctr.global-to-local, align 4
  %v2_10004b90 = sub i32 %v1_10004b28, %v1_10004b88
  store i32 %v2_10004b90, i32* @r11, align 4
  %v1_10004b949 = add i32 %v2_10004b28, -1
  %v2_10004b9410 = inttoptr i32 %v1_10004b949 to i8*
  %v3_10004b9411 = load i8, i8* %v2_10004b9410, align 1
  store i32 %v1_10004b949, i32* %r4.global-to-local, align 4
  %v3_10004b9813 = add i32 %v2_10004b2c, -1
  %v4_10004b9814 = inttoptr i32 %v3_10004b9813 to i8*
  store i8 %v3_10004b9411, i8* %v4_10004b9814, align 1
  store i32 %v3_10004b9813, i32* %r10.global-to-local, align 4
  %v0_10004b9c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004b9c16 = add i32 %v0_10004b9c15, -1
  store i32 %v1_10004b9c16, i32* %ctr.global-to-local, align 4
  %v2_10004b9c17 = icmp eq i32 %v1_10004b9c16, 0
  br i1 %v2_10004b9c17, label %dec_label_pc_10004ba0, label %dec_label_pc_10004b94.dec_label_pc_10004b94_crit_edge

dec_label_pc_10004b94.dec_label_pc_10004b94_crit_edge: ; preds = %dec_label_pc_10004b88, %dec_label_pc_10004b94.dec_label_pc_10004b94_crit_edge
  %v3_10004b9818 = phi i32 [ %v3_10004b98, %dec_label_pc_10004b94.dec_label_pc_10004b94_crit_edge ], [ %v3_10004b9813, %dec_label_pc_10004b88 ]
  %v0_10004b94.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10004b94 = add i32 %v0_10004b94.pre, -1
  %v2_10004b94 = inttoptr i32 %v1_10004b94 to i8*
  %v3_10004b94 = load i8, i8* %v2_10004b94, align 1
  store i32 %v1_10004b94, i32* %r4.global-to-local, align 4
  %v3_10004b98 = add i32 %v3_10004b9818, -1
  %v4_10004b98 = inttoptr i32 %v3_10004b98 to i8*
  store i8 %v3_10004b94, i8* %v4_10004b98, align 1
  store i32 %v3_10004b98, i32* %r10.global-to-local, align 4
  %v0_10004b9c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004b9c = add i32 %v0_10004b9c, -1
  store i32 %v1_10004b9c, i32* %ctr.global-to-local, align 4
  %v2_10004b9c = icmp eq i32 %v1_10004b9c, 0
  br i1 %v2_10004b9c, label %dec_label_pc_10004ba0, label %dec_label_pc_10004b94.dec_label_pc_10004b94_crit_edge

dec_label_pc_10004ba0:                            ; preds = %dec_label_pc_10004b94.dec_label_pc_10004b94_crit_edge, %dec_label_pc_10004b88
  %v0_10004ba0 = load i32, i32* @r11, align 4
  %v1_10004ba0 = call i32 @__asm_rlwinm.(i32 %v0_10004ba0, i32 29, i32 3, i32 31)
  store i32 %v1_10004ba0, i32* %r9.global-to-local, align 4
  %v4_10004ba0 = icmp eq i32 %v1_10004ba0, 0
  br i1 %v4_10004ba0, label %dec_label_pc_10004b54, label %dec_label_pc_10004ba0.dec_label_pc_10004b3c_crit_edge

dec_label_pc_10004ba0.dec_label_pc_10004b3c_crit_edge: ; preds = %dec_label_pc_10004ba0
  %v1_10004b48.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10004b3c

dec_label_pc_10004bac:                            ; preds = %dec_label_pc_10004b78, %dec_label_pc_10004b6c
  %v0_10004bac = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10004bac

; uselistorder directives
  uselistorder i32 %v1_10004ba0, { 1, 2, 0 }
  uselistorder i32 %v1_10004b9c, { 1, 0 }
  uselistorder i32 %v3_10004b98, { 1, 2, 0 }
  uselistorder i32 %v1_10004b80, { 1, 0 }
  uselistorder i32 %v3_10004b7c, { 1, 2, 0 }
  uselistorder i32 %v1_10004b54, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10004b50, { 1, 0 }
  uselistorder i32 %v2_10004b4c, { 1, 2, 0 }
  uselistorder i32 %v1_10004b34, { 1, 0 }
  uselistorder i32 %v2_10004b2c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10004b28, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 8, 9, 1, 5, 2, 7, 3, 6, 4 }
  uselistorder i32* %r10.global-to-local, { 5, 0, 9, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_10004b94.dec_label_pc_10004b94_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10004b6c, { 1, 0 }
  uselistorder label %dec_label_pc_10004b54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004b24, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10004bb4 = icmp eq i32 %arg2, 3
  store i1 %v3_10004bb4, i1* %cr7_eq.global-to-local, align 1
  %v1_10004bb8 = add i32 %arg1, -1
  store i32 %v1_10004bb8, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_10004c34, label %dec_label_pc_10004bc0

dec_label_pc_10004bc0:                            ; preds = %entry
  %v1_10004bc0 = udiv i32 %arg2, 4
  store i32 %v1_10004bc0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004bc8

dec_label_pc_10004bc8:                            ; preds = %dec_label_pc_10004c18, %dec_label_pc_10004bc0
  %v2_10004bd8 = phi i32 [ %v3_10004c10, %dec_label_pc_10004c18 ], [ %v1_10004bb8, %dec_label_pc_10004bc0 ]
  %v0_10004bc8 = load i32, i32* @r4, align 4
  %v1_10004bc8 = inttoptr i32 %v0_10004bc8 to i8*
  %v2_10004bc8 = load i8, i8* %v1_10004bc8, align 1
  %v1_10004bcc = add i32 %v0_10004bc8, 1
  store i32 %v1_10004bcc, i32* %r10.global-to-local, align 4
  %v1_10004bd0 = add i32 %v0_10004bc8, 2
  store i32 %v1_10004bd0, i32* %r8.global-to-local, align 4
  %v3_10004bd4 = icmp eq i8 %v2_10004bc8, 0
  store i1 %v3_10004bd4, i1* %cr7_eq.global-to-local, align 1
  %v3_10004bd8 = add i32 %v2_10004bd8, 1
  %v4_10004bd8 = inttoptr i32 %v3_10004bd8 to i8*
  store i8 %v2_10004bc8, i8* %v4_10004bd8, align 1
  store i32 %v3_10004bd8, i32* %r11.global-to-local, align 4
  %v0_10004bdc = load i32, i32* %r8.global-to-local, align 4
  %v1_10004bdc = add i32 %v0_10004bdc, 1
  store i32 %v1_10004bdc, i32* %r9.global-to-local, align 4
  %v0_10004be0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004be0, label %dec_label_pc_10004c20, label %dec_label_pc_10004be4

dec_label_pc_10004be4:                            ; preds = %dec_label_pc_10004bc8
  %v0_10004be4 = load i32, i32* @r4, align 4
  %v1_10004be4 = add i32 %v0_10004be4, 1
  %v2_10004be4 = inttoptr i32 %v1_10004be4 to i8*
  %v3_10004be4 = load i8, i8* %v2_10004be4, align 1
  %v1_10004be8 = add i32 %v0_10004bdc, 2
  store i32 %v1_10004be8, i32* @r4, align 4
  %v3_10004bec = icmp eq i8 %v3_10004be4, 0
  store i1 %v3_10004bec, i1* %cr7_eq.global-to-local, align 1
  %v3_10004bf0 = add i32 %v2_10004bd8, 2
  %v4_10004bf0 = inttoptr i32 %v3_10004bf0 to i8*
  store i8 %v3_10004be4, i8* %v4_10004bf0, align 1
  store i32 %v3_10004bf0, i32* %r11.global-to-local, align 4
  %v0_10004bf4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004bf4, label %dec_label_pc_10004c20, label %dec_label_pc_10004bf8

dec_label_pc_10004bf8:                            ; preds = %dec_label_pc_10004be4
  %v0_10004bf8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004bf8 = add i32 %v0_10004bf8, 1
  %v2_10004bf8 = inttoptr i32 %v1_10004bf8 to i8*
  %v3_10004bf8 = load i8, i8* %v2_10004bf8, align 1
  %v3_10004bfc = icmp eq i8 %v3_10004bf8, 0
  store i1 %v3_10004bfc, i1* %cr7_eq.global-to-local, align 1
  %v3_10004c00 = add i32 %v2_10004bd8, 3
  %v4_10004c00 = inttoptr i32 %v3_10004c00 to i8*
  store i8 %v3_10004bf8, i8* %v4_10004c00, align 1
  store i32 %v3_10004c00, i32* %r11.global-to-local, align 4
  %v0_10004c04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004c04, label %dec_label_pc_10004c20, label %dec_label_pc_10004c08

dec_label_pc_10004c08:                            ; preds = %dec_label_pc_10004bf8
  %v0_10004c08 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004c08 = add i32 %v0_10004c08, 1
  %v2_10004c08 = inttoptr i32 %v1_10004c08 to i8*
  %v3_10004c08 = load i8, i8* %v2_10004c08, align 1
  %v3_10004c0c = icmp eq i8 %v3_10004c08, 0
  store i1 %v3_10004c0c, i1* %cr7_eq.global-to-local, align 1
  %v3_10004c10 = add i32 %v2_10004bd8, 4
  %v4_10004c10 = inttoptr i32 %v3_10004c10 to i8*
  store i8 %v3_10004c08, i8* %v4_10004c10, align 1
  store i32 %v3_10004c10, i32* %r11.global-to-local, align 4
  %v0_10004c14 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004c14, label %dec_label_pc_10004c20, label %dec_label_pc_10004c18

dec_label_pc_10004c18:                            ; preds = %dec_label_pc_10004c08
  %v0_10004c18 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004c18 = add i32 %v0_10004c18, -1
  store i32 %v1_10004c18, i32* %ctr.global-to-local, align 4
  %v2_10004c18 = icmp eq i32 %v1_10004c18, 0
  br i1 %v2_10004c18, label %dec_label_pc_10004c34, label %dec_label_pc_10004bc8

dec_label_pc_10004c20:                            ; preds = %dec_label_pc_10004c08, %dec_label_pc_10004bf8, %dec_label_pc_10004be4, %dec_label_pc_10004bc8
  %v1_10004c20 = phi i32 [ %v3_10004c10, %dec_label_pc_10004c08 ], [ %v3_10004c00, %dec_label_pc_10004bf8 ], [ %v3_10004bf0, %dec_label_pc_10004be4 ], [ %v3_10004bd8, %dec_label_pc_10004bc8 ]
  %v2_10004c2011 = sub i32 %arg1, %v1_10004c20
  %v2_10004c24 = add i32 %v2_10004c2011, %arg2
  %v1_10004c28 = add i32 %v2_10004c24, -1
  store i32 %v1_10004c28, i32* %r9.global-to-local, align 4
  %v4_10004c28 = icmp eq i32 %v1_10004c28, 0
  %v0_10004c2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10004c28, i32 %v0_10004c2c)
  %v2_10004c64.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004c5c

dec_label_pc_10004c34:                            ; preds = %dec_label_pc_10004c18, %entry
  %v1_10004c34 = urem i32 %arg2, 4
  store i32 %v1_10004c34, i32* %r9.global-to-local, align 4
  %v3_10004c34 = icmp eq i32 %v1_10004c34, 0
  %v0_10004c38 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004c34, i32 %v0_10004c38)
  store i32 %v1_10004c34, i32* %ctr.global-to-local, align 4
  %v2_10004c50.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004c40

dec_label_pc_10004c40:                            ; preds = %dec_label_pc_10004c58.dec_label_pc_10004c40_crit_edge, %dec_label_pc_10004c34
  %v2_10004c50 = phi i32 [ %v3_10004c50, %dec_label_pc_10004c58.dec_label_pc_10004c40_crit_edge ], [ %v2_10004c50.pre, %dec_label_pc_10004c34 ]
  %v0_10004c44 = phi i32 [ %v0_10004c44.pre, %dec_label_pc_10004c58.dec_label_pc_10004c40_crit_edge ], [ %v1_10004c34, %dec_label_pc_10004c34 ]
  %v0_10004c40 = load i32, i32* @r4, align 4
  %v1_10004c40 = inttoptr i32 %v0_10004c40 to i8*
  %v2_10004c40 = load i8, i8* %v1_10004c40, align 1
  %v1_10004c44 = add i32 %v0_10004c44, -1
  store i32 %v1_10004c44, i32* %r9.global-to-local, align 4
  %v1_10004c48 = add i32 %v0_10004c40, 1
  store i32 %v1_10004c48, i32* @r4, align 4
  %v3_10004c4c = icmp eq i8 %v2_10004c40, 0
  store i1 %v3_10004c4c, i1* %cr7_eq.global-to-local, align 1
  %v3_10004c50 = add i32 %v2_10004c50, 1
  %v4_10004c50 = inttoptr i32 %v3_10004c50 to i8*
  store i8 %v2_10004c40, i8* %v4_10004c50, align 1
  store i32 %v3_10004c50, i32* %r11.global-to-local, align 4
  %v0_10004c54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004c54 = add i32 %v0_10004c54, -1
  store i32 %v1_10004c54, i32* %ctr.global-to-local, align 4
  %v2_10004c54 = icmp eq i32 %v1_10004c54, 0
  br i1 %v2_10004c54, label %dec_label_pc_10004c6c, label %dec_label_pc_10004c58

dec_label_pc_10004c58:                            ; preds = %dec_label_pc_10004c40
  %v0_10004c58 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004c58, label %dec_label_pc_10004c5c, label %dec_label_pc_10004c58.dec_label_pc_10004c40_crit_edge

dec_label_pc_10004c58.dec_label_pc_10004c40_crit_edge: ; preds = %dec_label_pc_10004c58
  %v0_10004c44.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004c40

dec_label_pc_10004c5c:                            ; preds = %dec_label_pc_10004c58, %dec_label_pc_10004c20
  %v2_10004c64.pre = phi i32 [ %v2_10004c64.pre.pre, %dec_label_pc_10004c20 ], [ %v3_10004c50, %dec_label_pc_10004c58 ]
  %v0_10004c5c = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_10004c5c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004c60

dec_label_pc_10004c60:                            ; preds = %dec_label_pc_10004c60, %dec_label_pc_10004c5c
  %v2_10004c64 = phi i32 [ %v3_10004c64, %dec_label_pc_10004c60 ], [ %v2_10004c64.pre, %dec_label_pc_10004c5c ]
  %v3_10004c64 = add i32 %v2_10004c64, 1
  %v4_10004c64 = inttoptr i32 %v3_10004c64 to i8*
  store i8 0, i8* %v4_10004c64, align 1
  store i32 %v3_10004c64, i32* %r11.global-to-local, align 4
  %v0_10004c68 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004c68 = add i32 %v0_10004c68, -1
  store i32 %v1_10004c68, i32* %ctr.global-to-local, align 4
  %v2_10004c68 = icmp eq i32 %v1_10004c68, 0
  br i1 %v2_10004c68, label %dec_label_pc_10004c6c, label %dec_label_pc_10004c60

dec_label_pc_10004c6c:                            ; preds = %dec_label_pc_10004c40, %dec_label_pc_10004c60
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10004c68, { 1, 0 }
  uselistorder i32 %v3_10004c64, { 1, 2, 0 }
  uselistorder i32 %v1_10004c54, { 1, 0 }
  uselistorder i32 %v3_10004c50, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10004c34, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10004c18, { 1, 0 }
  uselistorder i32 %v3_10004c10, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004c6c, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10004c74 = load i32, i32* @lr, align 4
  store i32 %v0_10004c74, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10004c7c = icmp eq i32 %arg1, 0
  %v0_10004c84 = load i32, i32* @r5, align 4
  store i32 %v0_10004c84, i32* %r30.global-to-local, align 4
  %v0_10004c88 = load i32, i32* @r4, align 4
  store i32 %v0_10004c88, i32* %r29.global-to-local, align 4
  br i1 %v3_10004c7c, label %dec_label_pc_10004c90, label %dec_label_pc_10004c94

dec_label_pc_10004c90:                            ; preds = %entry
  %v1_10004c90 = inttoptr i32 %v0_10004c84 to i32*
  %v2_10004c90 = load i32, i32* %v1_10004c90, align 4
  store i32 %v2_10004c90, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %entry, %dec_label_pc_10004c90
  %v0_10004c94 = phi i32 [ %arg1, %entry ], [ %v2_10004c90, %dec_label_pc_10004c90 ]
  store i32 %v0_10004c94, i32* @r3, align 4
  %v1_10004c98 = inttoptr i32 %v0_10004c94 to i8*
  %v2_10004c98 = call i32 @__GI_strspn(i8* %v1_10004c98)
  %v0_10004c9c = load i32, i32* %r29.global-to-local, align 4
  %v0_10004ca0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004ca0 = add i32 %v0_10004ca0, %v2_10004c98
  %v3_10004ca0 = inttoptr i32 %v2_10004ca0 to i8*
  %v4_10004ca0 = load i8, i8* %v3_10004ca0, align 1
  store i32 %v2_10004ca0, i32* @r31, align 4
  store i32 %v2_10004ca0, i32* @r3, align 4
  %v3_10004cac = icmp eq i8 %v4_10004ca0, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10004cac, label %dec_label_pc_10004cb8, label %dec_label_pc_10004cc0

dec_label_pc_10004cb8:                            ; preds = %dec_label_pc_10004c94
  %v1_10004cb8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004cb8 = inttoptr i32 %v1_10004cb8 to i32*
  store i32 %v2_10004ca0, i32* %v2_10004cb8, align 4
  br label %dec_label_pc_10004cf8

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004c94
  store i32 268455108, i32* @lr, align 4
  %v3_10004cc0 = call i32 @__GI_strpbrk(i8* %v3_10004ca0, i32 %v0_10004c9c)
  %v4_10004cc8 = icmp eq i32 %v3_10004cc0, 0
  %v0_10004ccc = load i32, i32* @r31, align 4
  store i32 %v0_10004ccc, i32* @r3, align 4
  %v2_10004cd0 = add i32 %v3_10004cc0, 1
  store i32 %v2_10004cd0, i32* %r11.global-to-local, align 4
  br i1 %v4_10004cc8, label %dec_label_pc_10004cd8, label %dec_label_pc_10004ce8

dec_label_pc_10004cd8:                            ; preds = %dec_label_pc_10004cc0
  store i32 268455132, i32* @lr, align 4
  %v4_10004cd8 = call i32 @rawmemchr(i32 %v0_10004ccc, i32 0, i32 0)
  %v0_10004cdc = load i32, i32* @r31, align 4
  store i32 %v0_10004cdc, i32* %r0.global-to-local, align 4
  %v1_10004ce0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004ce0 = inttoptr i32 %v1_10004ce0 to i32*
  store i32 %v4_10004cd8, i32* %v2_10004ce0, align 4
  br label %dec_label_pc_10004cf8

dec_label_pc_10004ce8:                            ; preds = %dec_label_pc_10004cc0
  %v1_10004cc8 = inttoptr i32 %v3_10004cc0 to i8*
  store i8 0, i8* %v1_10004cc8, align 1
  %v0_10004cf0 = load i32, i32* @r31, align 4
  store i32 %v0_10004cf0, i32* %r0.global-to-local, align 4
  %v0_10004cf4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004cf4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10004cf4 = inttoptr i32 %v1_10004cf4 to i32*
  store i32 %v0_10004cf4, i32* %v2_10004cf4, align 4
  br label %dec_label_pc_10004cf8

dec_label_pc_10004cf8:                            ; preds = %dec_label_pc_10004cd8, %dec_label_pc_10004cb8, %dec_label_pc_10004ce8
  %v0_10004cf8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10004c74, i32* %r0.global-to-local, align 4
  ret i32 %v0_10004cf8

; uselistorder directives
  uselistorder i32 %v3_10004cc0, { 2, 0, 1 }
  uselistorder i32 %v2_10004ca0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10004c94, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_10004cf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004c94, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10004d301 = load i32, i32* @r3, align 4
  %v1_10004d302 = inttoptr i32 %v0_10004d301 to i8*
  %v2_10004d303 = load i8, i8* %v1_10004d302, align 1
  %v3_10004d304 = zext i8 %v2_10004d303 to i32
  store i32 %v3_10004d304, i32* %r11.global-to-local, align 4
  %v3_10004d346 = icmp eq i8 %v2_10004d303, 0
  br i1 %v3_10004d346, label %dec_label_pc_10004d44, label %dec_label_pc_10004d3c

dec_label_pc_10004d14:                            ; preds = %dec_label_pc_10004d18
  %v3_10004d18 = zext i8 %v2_10004d18 to i32
  %v4_10004d24 = icmp eq i32 %v3_10004d18, %v1_10004d24
  %v0_10004d14 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10004d24, i32 %v0_10004d14)
  %v0_10004d18.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10004d24.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004d18

dec_label_pc_10004d18:                            ; preds = %dec_label_pc_10004d3c, %dec_label_pc_10004d14
  %v1_10004d24 = phi i32 [ %v1_10004d249, %dec_label_pc_10004d3c ], [ %v1_10004d24.pre, %dec_label_pc_10004d14 ]
  %v0_10004d18 = phi i32 [ %tmp, %dec_label_pc_10004d3c ], [ %v0_10004d18.pre, %dec_label_pc_10004d14 ]
  %v1_10004d18 = inttoptr i32 %v0_10004d18 to i8*
  %v2_10004d18 = load i8, i8* %v1_10004d18, align 1
  %v1_10004d1c = add i32 %v0_10004d18, 1
  store i32 %v1_10004d1c, i32* %r9.global-to-local, align 4
  %v3_10004d20 = icmp eq i8 %v2_10004d18, 0
  br i1 %v3_10004d20, label %dec_label_pc_10004d2c, label %dec_label_pc_10004d14

dec_label_pc_10004d2c:                            ; preds = %dec_label_pc_10004d18
  %v0_10004d2c = load i32, i32* @r3, align 4
  %v1_10004d2c = add i32 %v0_10004d2c, 1
  store i32 %v1_10004d2c, i32* @r3, align 4
  %v1_10004d30 = inttoptr i32 %v1_10004d2c to i8*
  %v2_10004d30 = load i8, i8* %v1_10004d30, align 1
  %v3_10004d30 = zext i8 %v2_10004d30 to i32
  store i32 %v3_10004d30, i32* %r11.global-to-local, align 4
  %v3_10004d34 = icmp eq i8 %v2_10004d30, 0
  br i1 %v3_10004d34, label %dec_label_pc_10004d44, label %dec_label_pc_10004d3c

dec_label_pc_10004d3c:                            ; preds = %entry, %dec_label_pc_10004d2c
  %v1_10004d249 = phi i32 [ %v3_10004d30, %dec_label_pc_10004d2c ], [ %v3_10004d304, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004d18

dec_label_pc_10004d44:                            ; preds = %dec_label_pc_10004d2c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10004d18, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004d3c, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10004d4c = icmp eq i8* %arg1, null
  br i1 %v3_10004d4c, label %dec_label_pc_10004e04, label %dec_label_pc_10004d54

dec_label_pc_10004d54:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10004d68.pre = load i32, i32* @global_var_1001c35c, align 4
  br label %dec_label_pc_10004d64

dec_label_pc_10004d64:                            ; preds = %dec_label_pc_10004d54, %dec_label_pc_10004ddc
  %v0_10004ddc = phi i32 [ 0, %dec_label_pc_10004d54 ], [ %v2_10004de4, %dec_label_pc_10004ddc ]
  %v0_10004de0 = phi i32 [ 1, %dec_label_pc_10004d54 ], [ %v1_10004de0, %dec_label_pc_10004ddc ]
  %v0_10004d64 = phi i32 [ %tmp, %dec_label_pc_10004d54 ], [ %v0_10004d643, %dec_label_pc_10004ddc ]
  %v1_10004d64 = inttoptr i32 %v0_10004d64 to i8*
  %v2_10004d64 = load i8, i8* %v1_10004d64, align 1
  %v3_10004d64 = zext i8 %v2_10004d64 to i32
  %v1_10004d6c = mul nuw nsw i32 %v3_10004d64, 2
  %v2_10004d70 = add i32 %v1_10004d6c, %v3_10004d68.pre
  %v3_10004d70 = inttoptr i32 %v2_10004d70 to i16*
  %v4_10004d70 = load i16, i16* %v3_10004d70, align 2
  %v1_10004d74 = and i16 %v4_10004d70, 8
  %v3_10004d74 = icmp eq i16 %v1_10004d74, 0
  br i1 %v3_10004d74, label %dec_label_pc_10004e04, label %dec_label_pc_10004d7c

dec_label_pc_10004d7c:                            ; preds = %dec_label_pc_10004d64
  br label %dec_label_pc_10004d94

dec_label_pc_10004d84:                            ; preds = %dec_label_pc_10004d94
  %v1_10004d98 = mul i32 %v1_10004de4, 10
  %v2_10004da0 = add i32 %v3_10004d94, %v1_10004d98
  %v1_10004d84 = add i32 %v2_10004da0, -48
  %v1_10004d88 = add i32 %v0_10004dcc, 1
  %v2_10004d8c = icmp sgt i32 %v1_10004d84, 255
  br i1 %v2_10004d8c, label %dec_label_pc_10004e04, label %dec_label_pc_10004d94

dec_label_pc_10004d94:                            ; preds = %dec_label_pc_10004d84, %dec_label_pc_10004d7c
  %v1_10004de4 = phi i32 [ %v1_10004d84, %dec_label_pc_10004d84 ], [ 0, %dec_label_pc_10004d7c ]
  %v0_10004dcc = phi i32 [ %v1_10004d88, %dec_label_pc_10004d84 ], [ %v0_10004d64, %dec_label_pc_10004d7c ]
  %v1_10004d94 = inttoptr i32 %v0_10004dcc to i8*
  %v2_10004d94 = load i8, i8* %v1_10004d94, align 1
  %v3_10004d94 = zext i8 %v2_10004d94 to i32
  %v1_10004d9c = mul nuw nsw i32 %v3_10004d94, 2
  %v2_10004da4 = add i32 %v1_10004d9c, %v3_10004d68.pre
  %v3_10004da4 = inttoptr i32 %v2_10004da4 to i16*
  %v4_10004da4 = load i16, i16* %v3_10004da4, align 2
  %v5_10004da4 = zext i16 %v4_10004da4 to i32
  %v1_10004da8 = and i32 %v5_10004da4, 8
  %v3_10004da8 = icmp eq i32 %v1_10004da8, 0
  br i1 %v3_10004da8, label %dec_label_pc_10004db0, label %dec_label_pc_10004d84

dec_label_pc_10004db0:                            ; preds = %dec_label_pc_10004d94
  %v2_10004db0 = icmp sgt i32 %v0_10004de0, 3
  br i1 %v2_10004db0, label %dec_label_pc_10004dc8, label %dec_label_pc_10004db8

dec_label_pc_10004db8:                            ; preds = %dec_label_pc_10004db0
  %v3_10004db8 = icmp eq i8 %v2_10004d94, 46
  br i1 %v3_10004db8, label %dec_label_pc_10004dc0, label %dec_label_pc_10004e04

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004db8
  %v1_10004dc0 = add i32 %v0_10004dcc, 1
  br label %dec_label_pc_10004ddc

dec_label_pc_10004dc8:                            ; preds = %dec_label_pc_10004db0
  %v3_10004dc8 = icmp eq i8 %v2_10004d94, 0
  %v1_10004dcc = add i32 %v0_10004dcc, 1
  br i1 %v3_10004dc8, label %dec_label_pc_10004ddc, label %dec_label_pc_10004dd4

dec_label_pc_10004dd4:                            ; preds = %dec_label_pc_10004dc8
  %v1_10004dd4 = and i32 %v5_10004da4, 32
  %v3_10004dd4 = icmp eq i32 %v1_10004dd4, 0
  br i1 %v3_10004dd4, label %dec_label_pc_10004e04, label %dec_label_pc_10004ddc

dec_label_pc_10004ddc:                            ; preds = %dec_label_pc_10004dd4, %dec_label_pc_10004dc8, %dec_label_pc_10004dc0
  %v0_10004d643 = phi i32 [ %v1_10004dcc, %dec_label_pc_10004dd4 ], [ %v1_10004dcc, %dec_label_pc_10004dc8 ], [ %v1_10004dc0, %dec_label_pc_10004dc0 ]
  %v1_10004ddc = mul i32 %v0_10004ddc, 256
  %v1_10004de0 = add nuw nsw i32 %v0_10004de0, 1
  %v2_10004de4 = or i32 %v1_10004de4, %v1_10004ddc
  store i32 %v2_10004de4, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_10004de0, 5
  br i1 %tmp10, label %dec_label_pc_10004d64, label %dec_label_pc_10004df0

dec_label_pc_10004df0:                            ; preds = %dec_label_pc_10004ddc
  %v0_10004df0 = load i32, i32* @r4, align 4
  %v3_10004df0 = icmp eq i32 %v0_10004df0, 0
  %v0_10004df8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004df0, i32 %v0_10004df8)
  %v0_10004dfc = load i32, i32* %r5.global-to-local, align 4
  %v1_10004dfc = load i32, i32* @r4, align 4
  %v2_10004dfc = inttoptr i32 %v1_10004dfc to i32*
  store i32 %v0_10004dfc, i32* %v2_10004dfc, align 4
  ret i32 1

dec_label_pc_10004e04:                            ; preds = %dec_label_pc_10004db8, %dec_label_pc_10004dd4, %dec_label_pc_10004d64, %dec_label_pc_10004d84, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10004de4, { 1, 0 }
  uselistorder i32 %v1_10004de0, { 1, 0 }
  uselistorder i32 %v0_10004dcc, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10004e04, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10004d64, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10004e10 = load i32, i32* @lr, align 4
  store i32 %v0_10004e10, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268455484, i32* @lr, align 4
  %v1_10004e38 = call i32 @malloc(i32 512)
  store i32 %v1_10004e38, i32* @r30, align 4
  store i32 268455496, i32* @lr, align 4
  %v1_10004e44 = call i32 @malloc(i32 1025)
  %v0_10004e48 = load i32, i32* @r30, align 4
  %v3_10004e48 = icmp eq i32 %v0_10004e48, 0
  store i32 %v1_10004e44, i32* @r21, align 4
  br i1 %v3_10004e48, label %dec_label_pc_10005404, label %dec_label_pc_10004e54

dec_label_pc_10004e54:                            ; preds = %entry
  %v3_10004e54 = icmp eq i32 %v1_10004e44, 0
  br i1 %v3_10004e54, label %dec_label_pc_10005404, label %dec_label_pc_10004e5c

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e54
  %v0_10004e5c = load i32, i32* @r23, align 4
  %v3_10004e5c = icmp eq i32 %v0_10004e5c, 0
  br i1 %v3_10004e5c, label %dec_label_pc_10005404, label %dec_label_pc_10004e64

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e5c
  %v0_10004e64 = load i32, i32* %r14.global-to-local, align 4
  %v1_10004e64 = inttoptr i32 %v0_10004e64 to i8*
  %v2_10004e64 = load i8, i8* %v1_10004e64, align 1
  %v3_10004e64 = zext i8 %v2_10004e64 to i32
  store i32 %v3_10004e64, i32* %r0.global-to-local, align 4
  %v3_10004e68 = icmp eq i8 %v2_10004e64, 0
  br i1 %v3_10004e68, label %dec_label_pc_10005404, label %dec_label_pc_10004e70

dec_label_pc_10004e70:                            ; preds = %dec_label_pc_10004e64
  store i32 %v0_10004e64, i32* @r3, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v0_10004e78 = call i32 @__GI_strlen()
  %v0_10004e80 = load i32, i32* %r14.global-to-local, align 4
  %v2_10004e80 = add i32 %v0_10004e80, %v0_10004e78
  %v1_10004e88 = add i32 %v2_10004e80, -1
  %v2_10004e88 = inttoptr i32 %v1_10004e88 to i8*
  %v3_10004e88 = load i8, i8* %v2_10004e88, align 1
  %v4_10004e88 = zext i8 %v3_10004e88 to i32
  store i32 %v4_10004e88, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c620.99 to i32), i32* %r29.global-to-local, align 4
  %v2_10004e90 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10004e90, i32* %r28.global-to-local, align 4
  store i32 %v2_10004e90, i32* @r3, align 4
  %v1_10004e9c = xor i32 %v4_10004e88, 46
  store i32 %v1_10004e9c, i32* %r17.global-to-local, align 4
  %v0_10004ea0 = call i32 @__pthread_return_void()
  %v0_10004ea8 = call i32 @__pthread_return_0()
  %v3_10004eb0 = load i32, i32* @global_var_1001c3e8.100, align 4
  store i32 %v3_10004eb0, i32* %r11.global-to-local, align 4
  %v3_10004ebc = load i16, i16* @global_var_1001c1fc.101, align 2
  %v4_10004ebc = zext i16 %v3_10004ebc to i32
  store i32 %v4_10004ebc, i32* @r25, align 4
  %v1_10004ec0 = load i32, i32* @r23, align 4
  store i32 %v2_10004e90, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_10004ec0 = srem i32 %v3_10004eb0, %v1_10004ec0
  %v2_10004edc = sub i32 %v3_10004eb0, %v2_10004ec0
  store i32 %v2_10004edc, i32* %r0.global-to-local, align 4
  store i32 %v2_10004ec0, i32* @r26, align 4
  %v0_10004ee4 = call i32 @__pthread_return_void()
  %v0_100053f8.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_100053f8.pr19, 3
  br i1 %tmp57, label %dec_label_pc_10004eec.lr.ph.lr.ph, label %dec_label_pc_10005410

dec_label_pc_10004eec.lr.ph.lr.ph:                ; preds = %dec_label_pc_10004e70
  %v2_10004f04 = ptrtoint i32* %stack_var_-144 to i32
  %v2_10005018 = ptrtoint i32* %stack_var_-204 to i32
  %v2_10005078 = ptrtoint i16* %stack_var_-212 to i32
  %v2_100050bc = ptrtoint i32* %stack_var_-248 to i32
  %v3_10005118 = icmp eq i32 %tmp37, 0
  %v3_10005124 = icmp eq i32 %tmp36, 3
  %v2_100051a0 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_100051f4 = ptrtoint i32* %stack_var_-184 to i32
  %v3_10005220 = icmp eq i32 %tmp33, 0
  %v3_10005194 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_10004eec.lr.ph

dec_label_pc_10004eec:                            ; preds = %dec_label_pc_10004eec.lr.ph, %dec_label_pc_1000509c
  %v0_10004eec = load i32, i32* @r19, align 4
  %v3_10004eec = icmp eq i32 %v0_10004eec, -1
  br i1 %v3_10004eec, label %dec_label_pc_10004efc, label %dec_label_pc_10004ef4

dec_label_pc_10004ef4:                            ; preds = %dec_label_pc_10004eec
  store i32 268455676, i32* @lr, align 4
  %v1_10004ef8 = call i32 @__libc_close(i32 %v0_10004eec)
  br label %dec_label_pc_10004efc

dec_label_pc_10004efc:                            ; preds = %dec_label_pc_10004eec, %dec_label_pc_10004ef4
  store i32 %v2_10004f04, i32* %r29.global-to-local, align 4
  %v0_10004f08 = load i32, i32* @r30, align 4
  store i32 268455696, i32* @lr, align 4
  %v3_10004f0c = call i32 @__GI_memset(i32 %v0_10004f08, i32 0, i32 512)
  store i32 268455712, i32* @lr, align 4
  %v3_10004f1c = call i32 @__GI_memset(i32 %v2_10004f04, i32 0, i32 48)
  %v0_10004f20 = load i32, i32* @r25, align 4
  %v1_10004f20 = add i32 %v0_10004f20, 1
  %v1_10004f24 = urem i32 %v1_10004f20, 65536
  store i32 %v1_10004f24, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10004f30 = load i32, i32* @r30, align 4
  store i32 %v1_10004f24, i32* %stack_var_-144, align 4
  %v4_10004f44 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10004f30, i32 512)
  store i32 %v4_10004f44, i32* %r28.global-to-local, align 4
  %v1_10004f48 = icmp slt i32 %v4_10004f44, 0
  br i1 %v1_10004f48, label %dec_label_pc_10005410, label %dec_label_pc_10004f50

dec_label_pc_10004f50:                            ; preds = %dec_label_pc_10004efc
  %v0_10004f50 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10004f50, i32* @r4, align 4
  %v0_10004f58 = load i32, i32* @r21, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268455780, i32* @lr, align 4
  %v4_10004f60 = call i32 @strncpy(i32 %v0_10004f58, i32 %v0_10004f50, i32 1025)
  store i32 ptrtoint (i32* @global_var_1001c200.60 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10004e90, i32* @r3, align 4
  %v0_10004f78 = call i32 @__pthread_return_void()
  %v0_10004f80 = call i32 @__pthread_return_0()
  %v0_10004f84 = load i32, i32* @r22, align 4
  %v1_10004f84 = icmp slt i32 %v0_10004f84, 0
  %v0_10004f8c = load i32, i32* @r26, align 4
  %v1_10004f8c = mul i32 %v0_10004f8c, 4
  store i32 %v1_10004f8c, i32* %r0.global-to-local, align 4
  %v2_10004f90 = add i32 %v1_10004f8c, %arg4
  %v3_10004f90 = inttoptr i32 %v2_10004f90 to i32*
  %v4_10004f90 = load i32, i32* %v3_10004f90, align 4
  store i32 %v4_10004f90, i32* %r29.global-to-local, align 4
  br i1 %v1_10004f84, label %dec_label_pc_10004fd8, label %dec_label_pc_10004f98

dec_label_pc_10004f98:                            ; preds = %dec_label_pc_10004f50
  %v3_10004f9c = load i32, i32* @global_var_1001c3f0.103, align 4
  store i32 %v3_10004f9c, i32* %r0.global-to-local, align 4
  %v2_10004fa0 = icmp slt i32 %v0_10004f84, %v3_10004f9c
  br i1 %v2_10004fa0, label %dec_label_pc_10004fa8, label %dec_label_pc_10004fd8

dec_label_pc_10004fa8:                            ; preds = %dec_label_pc_10004f98
  store i32 ptrtoint (i32* @global_var_1000abf8.104 to i32), i32* @r4, align 4
  %v0_10004fb4 = load i32, i32* @r21, align 4
  store i32 268455868, i32* @lr, align 4
  %v4_10004fb8 = inttoptr i32 %v0_10004fb4 to i8*
  %v5_10004fb8 = call i32 @__GI_strncat(i8* %v4_10004fb8, i32 ptrtoint (i32* @global_var_1000abf8.104 to i32), i32 1025, i32 268566528)
  %v0_10004fc0 = load i32, i32* @r22, align 4
  %v1_10004fc0 = mul i32 %v0_10004fc0, 4
  store i32 %v1_10004fc0, i32* %r0.global-to-local, align 4
  %v2_10004fc8 = add i32 %v1_10004fc0, ptrtoint (i32* @global_var_1001e6d0.105 to i32)
  %v3_10004fc8 = inttoptr i32 %v2_10004fc8 to i32*
  %v4_10004fc8 = load i32, i32* %v3_10004fc8, align 4
  store i32 %v4_10004fc8, i32* @r4, align 4
  %v0_10004fcc = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004fd8.106 to i32), i32* @lr, align 4
  %v4_10004fd4 = inttoptr i32 %v0_10004fcc to i8*
  %v5_10004fd4 = call i32 @__GI_strncat(i8* %v4_10004fd4, i32 %v4_10004fc8, i32 1025, i32 ptrtoint (i32* @global_var_1001e6d0.105 to i32))
  br label %dec_label_pc_10004fd8

dec_label_pc_10004fd8:                            ; preds = %dec_label_pc_10004f98, %dec_label_pc_10004f50, %dec_label_pc_10004fa8
  store i32 %v2_10004e90, i32* @r3, align 4
  %v0_10004fe0 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10004fec = load i32, i32* @r30, align 4
  %v1_10004fec = load i32, i32* %r28.global-to-local, align 4
  %v2_10004fec = add i32 %v1_10004fec, %v0_10004fec
  %v1_10004ff0 = sub i32 512, %v1_10004fec
  %v0_10004ff8 = load i32, i32* @r21, align 4
  store i32 %v0_10004ff8, i32* %stack_var_-240, align 4
  store i32 268455940, i32* @lr, align 4
  %v4_10005000 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_10004fec, i32 %v1_10004ff0)
  store i32 %v4_10005000, i32* @r27, align 4
  %v1_10005004 = icmp slt i32 %v4_10005000, 0
  br i1 %v1_10005004, label %dec_label_pc_10005410, label %dec_label_pc_1000500c

dec_label_pc_1000500c:                            ; preds = %dec_label_pc_10004fd8
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10005014 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268455972, i32* @lr, align 4
  %v3_10005020 = inttoptr i32 %v0_10005014 to i8*
  %v4_10005020 = call i32 @inet_pton(i32 10, i8* %v3_10005020, i32 %v2_10005018)
  %tmp59 = icmp slt i32 %v4_10005020, 1
  br i1 %tmp59, label %dec_label_pc_10005034thread-pre-split, label %dec_label_pc_1000502c

dec_label_pc_1000502c:                            ; preds = %dec_label_pc_1000500c
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10005034

dec_label_pc_10005034thread-pre-split:            ; preds = %dec_label_pc_1000500c
  %v3_10005034.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10005034

dec_label_pc_10005034:                            ; preds = %dec_label_pc_10005034thread-pre-split, %dec_label_pc_1000502c
  %v3_10005034 = phi i16 [ %v3_10005034.pr, %dec_label_pc_10005034thread-pre-split ], [ 10, %dec_label_pc_1000502c ]
  %v3_10005038 = icmp eq i16 %v3_10005034, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10005038, label %dec_label_pc_10005060, label %dec_label_pc_1000504c

dec_label_pc_1000504c:                            ; preds = %dec_label_pc_10005034
  %v0_10005050 = load i32, i32* @r29, align 4
  store i32 268456028, i32* @lr, align 4
  %v1_10005058 = call i32 @inet_addr(i32 %v0_10005050)
  %v3_10005060.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10005060

dec_label_pc_10005060:                            ; preds = %dec_label_pc_10005034, %dec_label_pc_1000504c
  %v3_10005060 = phi i16 [ 10, %dec_label_pc_10005034 ], [ %v3_10005060.pre, %dec_label_pc_1000504c ]
  %v4_10005060 = sext i16 %v3_10005060 to i32
  store i32 268456048, i32* @lr, align 4
  %v3_1000506c = call i32 @socket(i32 %v4_10005060, i32 2, i32 17)
  store i32 %v3_1000506c, i32* @r19, align 4
  %v1_10005070 = icmp slt i32 %v3_1000506c, 0
  br i1 %v1_10005070, label %dec_label_pc_1000509c, label %dec_label_pc_10005078

dec_label_pc_10005078:                            ; preds = %dec_label_pc_10005060
  store i32 268456068, i32* @lr, align 4
  %v3_10005080 = call i32 @__libc_connect(i32 %v2_10005078, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10005080, -1
  br i1 %tmp60, label %dec_label_pc_100050a4, label %dec_label_pc_1000508c

dec_label_pc_1000508c:                            ; preds = %dec_label_pc_10005078
  %v0_1000508c = call i32 @__errno_location()
  %v1_10005090 = inttoptr i32 %v0_1000508c to i32*
  %v2_10005090 = load i32, i32* %v1_10005090, align 4
  store i32 %v2_10005090, i32* %r0.global-to-local, align 4
  %v3_10005094 = icmp eq i32 %v2_10005090, 101
  br i1 %v3_10005094, label %dec_label_pc_100053dc, label %dec_label_pc_1000509c

dec_label_pc_1000509c:                            ; preds = %dec_label_pc_1000508c, %dec_label_pc_10005060
  %v0_1000509c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000509c = add i32 %v0_1000509c, 1
  store i32 %v1_1000509c, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_1000509c, 3
  br i1 %tmp61, label %dec_label_pc_10004eec, label %dec_label_pc_10005410

dec_label_pc_100050a4:                            ; preds = %dec_label_pc_10005078
  %v0_100050a4 = load i32, i32* @r28, align 4
  %v1_100050a4 = load i32, i32* @r27, align 4
  %v2_100050a4 = add i32 %v1_100050a4, %v0_100050a4
  %v0_100050a8 = load i32, i32* @r30, align 4
  %v0_100050b0 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_100050b8.108 to i32), i32* @lr, align 4
  %v4_100050b4 = call i32 @__libc_send(i32 %v0_100050b0, i32 %v0_100050a8, i32 %v2_100050a4, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100050cc = load i32, i32* @r19, align 4
  store i32 %v0_100050cc, i32* %stack_var_-248, align 4
  store i32 268456148, i32* @lr, align 4
  %v3_100050d0 = call i32 @__libc_poll(i32 %v2_100050bc, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_100050d0, 1
  br i1 %tmp62, label %dec_label_pc_100053dc, label %dec_label_pc_100050dc

dec_label_pc_100050dc:                            ; preds = %dec_label_pc_100050a4
  %v0_100050dc = load i32, i32* @r19, align 4
  %v0_100050e0 = load i32, i32* @r30, align 4
  store i32 268456176, i32* @lr, align 4
  %v4_100050ec = call i32 @__libc_recv(i32 %v0_100050dc, i32 %v0_100050e0, i32 512, i32 0)
  store i32 %v4_100050ec, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_100050ec, 12
  br i1 %tmp63, label %dec_label_pc_10005384, label %dec_label_pc_100050fc

dec_label_pc_100050fc:                            ; preds = %dec_label_pc_100050dc
  %v0_100050fc = load i32, i32* @r30, align 4
  %v2_10005104 = inttoptr i32 %v0_100050fc to i8*
  %v3_10005104 = call i32 @__decode_header(i8* %v2_10005104, i32 %v2_10004f04)
  %v3_10005108 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10005108, i32* @r20, align 4
  %v1_1000510c = load i32, i32* @r25, align 4
  %v4_1000510c = icmp eq i32 %v3_10005108, %v1_1000510c
  br i1 %v4_1000510c, label %dec_label_pc_10005114, label %dec_label_pc_10005384

dec_label_pc_10005114:                            ; preds = %dec_label_pc_100050fc
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10005118, label %dec_label_pc_10005384, label %dec_label_pc_10005120

dec_label_pc_10005120:                            ; preds = %dec_label_pc_10005114
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10005124, label %dec_label_pc_1000512c, label %dec_label_pc_10005194

dec_label_pc_1000512c:                            ; preds = %dec_label_pc_10005120
  %v0_1000512c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000512c = icmp eq i32 %v0_1000512c, 0
  br i1 %v3_1000512c, label %dec_label_pc_10005134, label %dec_label_pc_10005188

dec_label_pc_10005134:                            ; preds = %dec_label_pc_1000512c
  store i32 ptrtoint (i32* @global_var_1001c200.60 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10004e90, i32* %r28.global-to-local, align 4
  store i32 %v2_10004e90, i32* @r3, align 4
  %v0_10005150 = call i32 @__pthread_return_void()
  %v0_10005158 = call i32 @__pthread_return_0()
  %v3_10005160 = load i32, i32* @global_var_1001c3f0.103, align 4
  store i32 %v2_10004e90, i32* @r3, align 4
  %v1_1000516c = add i32 %v3_10005160, -1
  store i32 %v1_1000516c, i32* %r29.global-to-local, align 4
  %v0_10005170 = call i32 @__pthread_return_void()
  %v0_10005174 = load i32, i32* @r22, align 4
  %v2_10005174 = icmp slt i32 %v0_10005174, %v1_1000516c
  br i1 %v2_10005174, label %dec_label_pc_1000517c, label %dec_label_pc_10005188

dec_label_pc_1000517c:                            ; preds = %dec_label_pc_10005134
  %v1_1000517c = add i32 %v0_10005174, 1
  store i32 %v1_1000517c, i32* @r22, align 4
  %v0_10005180 = load i32, i32* @r20, align 4
  store i32 %v0_10005180, i32* @r25, align 4
  br label %dec_label_pc_100053f8thread-pre-split.backedge

dec_label_pc_10005188:                            ; preds = %dec_label_pc_10005134, %dec_label_pc_1000512c
  %v0_10005188 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_100051bc

dec_label_pc_10005194:                            ; preds = %dec_label_pc_10005120
  br i1 %v3_10005194, label %dec_label_pc_1000519c, label %dec_label_pc_10005384

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_10005194
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_100051b4, label %dec_label_pc_100051a8

dec_label_pc_100051a8:                            ; preds = %dec_label_pc_1000519c
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_100051d410 = load i32, i32* @r30, align 4
  store i32 %v0_100051d410, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100051c4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_1000519c
  %v0_100051b4 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_100051bc

dec_label_pc_100051bc:                            ; preds = %dec_label_pc_10005188, %dec_label_pc_100051b4
  %storemerge3 = phi i32 [ %v0_100051b4, %dec_label_pc_100051b4 ], [ %v0_10005188, %dec_label_pc_10005188 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_100051b4 ], [ 1, %dec_label_pc_10005188 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_100051bc = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_100051bc, align 4
  br label %dec_label_pc_10005420

dec_label_pc_100051c4:                            ; preds = %dec_label_pc_100051a8, %dec_label_pc_100051c4
  %v0_100051d414 = phi i32 [ %v0_100051d410, %dec_label_pc_100051a8 ], [ %v0_100051d4, %dec_label_pc_100051c4 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_100051a8 ], [ %v2_100051c8, %dec_label_pc_100051c4 ]
  store i32 268456392, i32* @lr, align 4
  %v2_100051c4 = call i32 @__length_question(i32 %v0_100051d414, i32 %storemerge213)
  %v0_100051c8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100051c8 = add i32 %v0_100051c8, %v2_100051c4
  %v0_100051d8.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_100051c8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_100051c8, i32* @r4, align 4
  %v0_100051d4 = load i32, i32* @r30, align 4
  store i32 %v0_100051d4, i32* @r3, align 4
  %v2_100051d8 = icmp slt i32 %v0_100051d8.pr, 1
  %v1_100051dc = add i32 %v0_100051d8.pr, 1
  store i32 %v1_100051dc, i32* %r29.global-to-local, align 4
  br i1 %v2_100051d8, label %dec_label_pc_100051c4, label %dec_label_pc_100051e4

dec_label_pc_100051e4:                            ; preds = %dec_label_pc_100051c4
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_100051a0, label %dec_label_pc_10005330, label %dec_label_pc_10005338

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_10005330
  store i32 %v2_100051f4, i32* %r29.global-to-local, align 4
  %v0_100051f8 = load i32, i32* @r30, align 4
  store i32 268456460, i32* @lr, align 4
  %v5_10005208 = call i32 @__decode_answer(i32 %v0_100051f8, i32 %v0_100051fc, i32 %v1_10005330, i32* nonnull %stack_var_-184)
  store i32 %v5_10005208, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10005208, -1
  br i1 %tmp64, label %dec_label_pc_1000522c, label %dec_label_pc_10005214

dec_label_pc_10005214:                            ; preds = %dec_label_pc_100051f4
  %v0_10005214 = load i32, i32* @r24, align 4
  %v3_10005214 = icmp eq i32 %v0_10005214, 0
  br i1 %v3_10005214, label %dec_label_pc_10005384, label %dec_label_pc_1000521c

dec_label_pc_1000521c:                            ; preds = %dec_label_pc_10005214
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10005220, label %dec_label_pc_10005384, label %dec_label_pc_10005338

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_100051f4
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10005230 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10005230, label %dec_label_pc_100052d4, label %dec_label_pc_10005238

dec_label_pc_10005238:                            ; preds = %dec_label_pc_1000522c
  %v0_10005238 = load i32, i32* @r31, align 4
  store i32 %v2_100051f4, i32* @r4, align 4
  %v1_10005240 = add i32 %v0_10005238, 28
  %v2_10005240 = inttoptr i32 %v1_10005240 to i32*
  %v3_10005240 = load i32, i32* %v2_10005240, align 4
  store i32 %v3_10005240, i32* %r0.global-to-local, align 4
  store i32 %v0_10005238, i32* @r3, align 4
  %v1_10005248 = add i32 %v0_10005238, 36
  %v2_10005248 = inttoptr i32 %v1_10005248 to i32*
  %v3_10005248 = load i32, i32* %v2_10005248, align 4
  store i32 %v3_10005248, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268456544, i32* @lr, align 4
  %v0_1000525c = call i32 @memcpy()
  %v0_10005260 = load i32, i32* @r31, align 4
  %v1_10005260 = add i32 %v0_10005260, 4
  %v2_10005260 = inttoptr i32 %v1_10005260 to i32*
  %v3_10005260 = load i32, i32* %v2_10005260, align 4
  %v3_10005264 = icmp eq i32 %v3_10005260, 24
  br i1 %v3_10005264, label %dec_label_pc_10005238.dec_label_pc_10005288_crit_edge, label %dec_label_pc_1000526c

dec_label_pc_10005238.dec_label_pc_10005288_crit_edge: ; preds = %dec_label_pc_10005238
  %v1_10005288.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10005288

dec_label_pc_1000526c:                            ; preds = %dec_label_pc_10005238
  %v1_1000526c = add i32 %v0_10005260, 28
  %v2_1000526c = inttoptr i32 %v1_1000526c to i32*
  %v3_1000526c = load i32, i32* %v2_1000526c, align 4
  store i32 %v3_1000526c, i32* %r0.global-to-local, align 4
  %v3_10005270 = icmp eq i32 %v3_1000526c, 0
  br i1 %v3_10005270, label %dec_label_pc_10005338, label %dec_label_pc_10005278

dec_label_pc_10005278:                            ; preds = %dec_label_pc_1000526c
  %v0_10005278 = load i32, i32* %r16.global-to-local, align 4
  %v3_10005278 = icmp eq i32 %v0_10005278, 1
  br i1 %v3_10005278, label %dec_label_pc_10005288, label %dec_label_pc_10005280

dec_label_pc_10005280:                            ; preds = %dec_label_pc_10005278
  %v3_10005280 = icmp eq i32 %v0_10005278, 28
  br i1 %v3_10005280, label %dec_label_pc_10005288, label %dec_label_pc_10005338

dec_label_pc_10005288:                            ; preds = %dec_label_pc_10005238.dec_label_pc_10005288_crit_edge, %dec_label_pc_10005280, %dec_label_pc_10005278
  %v1_10005288 = phi i32 [ %v1_10005288.pre, %dec_label_pc_10005238.dec_label_pc_10005288_crit_edge ], [ 28, %dec_label_pc_10005280 ], [ 1, %dec_label_pc_10005278 ]
  %v4_10005288 = icmp eq i32 %v3_10005260, %v1_10005288
  br i1 %v4_10005288, label %dec_label_pc_1000529c, label %dec_label_pc_10005290

dec_label_pc_10005290:                            ; preds = %dec_label_pc_10005288
  %v1_10005290 = inttoptr i32 %v0_10005260 to i32*
  %v2_10005290 = load i32, i32* %v1_10005290, align 4
  store i32 ptrtoint (i32* @global_var_10005298.111 to i32), i32* @lr, align 4
  %v1_10005294 = call i32 @free(i32 %v2_10005290)
  br label %dec_label_pc_1000531c

dec_label_pc_1000529c:                            ; preds = %dec_label_pc_10005288
  %v1_100052a0 = add i32 %v0_10005260, 16
  %v2_100052a0 = inttoptr i32 %v1_100052a0 to i32*
  %v3_100052a0 = load i32, i32* %v2_100052a0, align 4
  store i32 %v3_100052a0, i32* %r11.global-to-local, align 4
  %v0_100052a4 = load i32, i32* @r24, align 4
  %v2_100052a4 = sub i32 %tmp35, %v0_100052a4
  %v1_100052a8 = add i32 %v0_10005260, 32
  %v2_100052a8 = inttoptr i32 %v1_100052a8 to i32*
  %v3_100052a8 = load i32, i32* %v2_100052a8, align 4
  store i32 %v3_100052a8, i32* %r0.global-to-local, align 4
  %v1_100052ac = add i32 %v2_100052a4, -1
  %v1_100052b0 = add i32 %v3_100052a0, 4
  %v2_100052b4 = mul i32 %v1_100052ac, %v1_100052b0
  store i32 %v2_100052b4, i32* %r11.global-to-local, align 4
  %v2_100052b8 = add i32 %v0_10005260, 36
  %v3_100052b8 = inttoptr i32 %v2_100052b8 to i32*
  store i32 %v1_100052ac, i32* %v3_100052b8, align 4
  %v0_100052bc = load i32, i32* %r11.global-to-local, align 4
  %v1_100052bc = load i32, i32* %r0.global-to-local, align 4
  %v3_100052bc = icmp ugt i32 %v0_100052bc, %v1_100052bc
  br i1 %v3_100052bc, label %dec_label_pc_10005338, label %dec_label_pc_100052c4

dec_label_pc_100052c4:                            ; preds = %dec_label_pc_1000529c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100052cc = load i32, i32* @r31, align 4
  %v2_100052cc = add i32 %v1_100052cc, 36
  %v3_100052cc = inttoptr i32 %v2_100052cc to i32*
  store i32 0, i32* %v3_100052cc, align 4
  br label %dec_label_pc_1000531c

dec_label_pc_100052d4:                            ; preds = %dec_label_pc_1000522c
  %v3_100052d4 = load i32, i32* %stack_var_-184, align 4
  store i32 268456668, i32* @lr, align 4
  %v1_100052d8 = call i32 @free(i32 %v3_100052d4)
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_100052e0 = load i32, i32* %r16.global-to-local, align 4
  %v4_100052e0 = icmp eq i32 %tmp29, %v1_100052e0
  br i1 %v4_100052e0, label %dec_label_pc_100052e8, label %dec_label_pc_1000531c

dec_label_pc_100052e8:                            ; preds = %dec_label_pc_100052d4
  %v0_100052e8 = load i32, i32* @r31, align 4
  %v1_100052e8 = add i32 %v0_100052e8, 16
  %v2_100052e8 = inttoptr i32 %v1_100052e8 to i32*
  %v3_100052e8 = load i32, i32* %v2_100052e8, align 4
  store i32 %v3_100052e8, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_100052f0 = icmp eq i32 %v3_100052e8, %tmp28
  br i1 %v4_100052f0, label %dec_label_pc_100052f8, label %dec_label_pc_1000537c

dec_label_pc_100052f8:                            ; preds = %dec_label_pc_100052e8
  %v1_100052f8 = add i32 %v0_100052e8, 36
  %v2_100052f8 = inttoptr i32 %v1_100052f8 to i32*
  %v3_100052f8 = load i32, i32* %v2_100052f8, align 4
  %v1_100052fc = add i32 %v0_100052e8, 28
  %v2_100052fc = inttoptr i32 %v1_100052fc to i32*
  %v3_100052fc = load i32, i32* %v2_100052fc, align 4
  store i32 %v3_100052fc, i32* %r0.global-to-local, align 4
  %v2_10005300 = mul i32 %v3_100052f8, %tmp28
  %v2_10005308 = add i32 %v3_100052fc, %v2_10005300
  store i32 %v2_10005308, i32* @r3, align 4
  store i32 268456720, i32* @lr, align 4
  %v0_1000530c = call i32 @memcpy()
  %v0_10005310 = load i32, i32* @r31, align 4
  %v1_10005310 = add i32 %v0_10005310, 36
  %v2_10005310 = inttoptr i32 %v1_10005310 to i32*
  %v3_10005310 = load i32, i32* %v2_10005310, align 4
  %v1_10005314 = add i32 %v3_10005310, 1
  store i32 %v1_10005314, i32* %v2_10005310, align 4
  br label %dec_label_pc_1000531c

dec_label_pc_1000531c:                            ; preds = %dec_label_pc_100052d4, %dec_label_pc_100052c4, %dec_label_pc_10005290, %dec_label_pc_100052f8
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_100052f8 ], [ 0, %dec_label_pc_100052d4 ], [ 0, %dec_label_pc_100052c4 ], [ %stack_var_-88.118, %dec_label_pc_10005290 ]
  %v0_1000531c = load i32, i32* @r28, align 4
  %v1_1000531c = load i32, i32* %r15.global-to-local, align 4
  %v2_1000531c = add i32 %v1_1000531c, %v0_1000531c
  store i32 %v2_1000531c, i32* %r28.global-to-local, align 4
  %v0_10005320 = load i32, i32* @r24, align 4
  %v1_10005320 = add i32 %v0_10005320, 1
  store i32 %v1_10005320, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10005328 = icmp slt i32 %v1_10005320, %tmp35
  br i1 %v2_10005328, label %dec_label_pc_10005330, label %dec_label_pc_10005338

dec_label_pc_10005330:                            ; preds = %dec_label_pc_100051e4, %dec_label_pc_1000531c
  %v0_100051fc = phi i32 [ %v2_1000531c, %dec_label_pc_1000531c ], [ %v2_100051c8, %dec_label_pc_100051e4 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_1000531c ], [ 1, %dec_label_pc_100051e4 ]
  %v1_10005330 = load i32, i32* @r27, align 4
  %v2_10005330 = icmp slt i32 %v0_100051fc, %v1_10005330
  br i1 %v2_10005330, label %dec_label_pc_100051f4, label %dec_label_pc_10005338

dec_label_pc_10005338:                            ; preds = %dec_label_pc_1000521c, %dec_label_pc_100051e4, %dec_label_pc_10005330, %dec_label_pc_1000526c, %dec_label_pc_1000529c, %dec_label_pc_1000531c, %dec_label_pc_10005280
  %v0_10005338 = load i32, i32* @r19, align 4
  store i32 268456768, i32* @lr, align 4
  %v1_1000533c = call i32 @__libc_close(i32 %v0_10005338)
  %v3_10005344 = icmp eq i32 %arg5, 0
  %v0_10005354 = load i32, i32* @r30, align 4
  br i1 %v3_10005344, label %dec_label_pc_10005354, label %dec_label_pc_1000534c

dec_label_pc_1000534c:                            ; preds = %dec_label_pc_10005338
  %v2_1000534c = inttoptr i32 %arg5 to i32*
  store i32 %v0_10005354, i32* %v2_1000534c, align 4
  br label %dec_label_pc_1000535c

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005338
  store i32 268456796, i32* @lr, align 4
  %v1_10005358 = call i32 @free(i32 %v0_10005354)
  br label %dec_label_pc_1000535c

dec_label_pc_1000535c:                            ; preds = %dec_label_pc_1000534c, %dec_label_pc_10005354
  %v0_1000535c = load i32, i32* @r21, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268456808, i32* @lr, align 4
  %v1_10005364 = call i32 @free(i32 %v0_1000535c)
  store i32 ptrtoint (i32* @global_var_1001c620.99 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005460

dec_label_pc_1000537c:                            ; preds = %dec_label_pc_100052e8
  %v1_1000537c = inttoptr i32 %v0_100052e8 to i32*
  %v2_1000537c = load i32, i32* %v1_1000537c, align 4
  store i32 268456836, i32* @lr, align 4
  %v1_10005380 = call i32 @free(i32 %v2_1000537c)
  br label %dec_label_pc_10005384

dec_label_pc_10005384:                            ; preds = %dec_label_pc_10005194, %dec_label_pc_100050fc, %dec_label_pc_1000521c, %dec_label_pc_10005214, %dec_label_pc_10005114, %dec_label_pc_100050dc, %dec_label_pc_1000537c
  %v0_10005384 = load i32, i32* %r17.global-to-local, align 4
  %v3_10005384 = icmp eq i32 %v0_10005384, 0
  br i1 %v3_10005384, label %dec_label_pc_1000538c, label %dec_label_pc_100053dc

dec_label_pc_1000538c:                            ; preds = %dec_label_pc_10005384
  store i32 ptrtoint (i32* @global_var_1001c200.60 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10004e90, i32* %r28.global-to-local, align 4
  store i32 %v2_10004e90, i32* @r3, align 4
  %v0_100053a8 = call i32 @__pthread_return_void()
  %v0_100053b0 = call i32 @__pthread_return_0()
  %v3_100053b8 = load i32, i32* @global_var_1001c3f0.103, align 4
  store i32 %v2_10004e90, i32* @r3, align 4
  %v1_100053c4 = add i32 %v3_100053b8, -1
  store i32 %v1_100053c4, i32* %r29.global-to-local, align 4
  %v0_100053c8 = call i32 @__pthread_return_void()
  %v0_100053cc = load i32, i32* @r22, align 4
  %v2_100053cc = icmp slt i32 %v0_100053cc, %v1_100053c4
  br i1 %v2_100053cc, label %dec_label_pc_100053d4, label %dec_label_pc_100053dc

dec_label_pc_100053d4:                            ; preds = %dec_label_pc_1000538c
  %v1_100053d4 = add i32 %v0_100053cc, 1
  store i32 %v1_100053d4, i32* @r22, align 4
  br label %dec_label_pc_100053f8thread-pre-split.backedge

dec_label_pc_100053f8thread-pre-split.backedge:   ; preds = %dec_label_pc_100053d4, %dec_label_pc_1000517c, %dec_label_pc_100053f4
  %v0_100053f8.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_100053f8.pr, 3
  br i1 %tmp65, label %dec_label_pc_10004eec.lr.ph, label %dec_label_pc_10005410

dec_label_pc_100053dc:                            ; preds = %dec_label_pc_1000508c, %dec_label_pc_1000538c, %dec_label_pc_10005384, %dec_label_pc_100050a4
  %v0_100053dc = load i32, i32* @r26, align 4
  %v1_100053dc = add i32 %v0_100053dc, 1
  store i32 %v1_100053dc, i32* %r0.global-to-local, align 4
  %v1_100053e0 = load i32, i32* @r23, align 4
  %v2_100053e0 = srem i32 %v1_100053dc, %v1_100053e0
  store i32 %v2_100053e0, i32* @r26, align 4
  %v5_100053e8 = icmp eq i32 %v2_100053e0, 0
  br i1 %v5_100053e8, label %dec_label_pc_100053f0, label %dec_label_pc_100053f4

dec_label_pc_100053f0:                            ; preds = %dec_label_pc_100053dc
  %v0_100053f0 = load i32, i32* %r18.global-to-local, align 4
  %v1_100053f0 = add i32 %v0_100053f0, 1
  store i32 %v1_100053f0, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_100053f4

dec_label_pc_100053f4:                            ; preds = %dec_label_pc_100053dc, %dec_label_pc_100053f0
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_100053f8thread-pre-split.backedge

dec_label_pc_10004eec.lr.ph:                      ; preds = %dec_label_pc_10004eec.lr.ph.lr.ph, %dec_label_pc_100053f8thread-pre-split.backedge
  br label %dec_label_pc_10004eec

dec_label_pc_10005404:                            ; preds = %dec_label_pc_10004e64, %dec_label_pc_10004e5c, %dec_label_pc_10004e54, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10005410

dec_label_pc_10005410:                            ; preds = %dec_label_pc_100053f8thread-pre-split.backedge, %dec_label_pc_10004efc, %dec_label_pc_10004fd8, %dec_label_pc_1000509c, %dec_label_pc_10004e70, %dec_label_pc_10005404
  %v0_10005410 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10005418 = inttoptr i32 %v0_10005410 to i32*
  store i32 -1, i32* %v2_10005418, align 4
  %v0_1000541c = load i32, i32* @r25, align 4
  store i32 %v0_1000541c, i32* @r20, align 4
  br label %dec_label_pc_10005420

dec_label_pc_10005420:                            ; preds = %dec_label_pc_100051bc, %dec_label_pc_10005410
  %v0_10005420 = load i32, i32* @r19, align 4
  %v3_10005420 = icmp eq i32 %v0_10005420, -1
  br i1 %v3_10005420, label %dec_label_pc_10005430, label %dec_label_pc_10005428

dec_label_pc_10005428:                            ; preds = %dec_label_pc_10005420
  store i32 268457008, i32* @lr, align 4
  %v1_1000542c = call i32 @__libc_close(i32 %v0_10005420)
  br label %dec_label_pc_10005430

dec_label_pc_10005430:                            ; preds = %dec_label_pc_10005420, %dec_label_pc_10005428
  %v0_10005430 = load i32, i32* @r21, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268457020, i32* @lr, align 4
  %v1_10005438 = call i32 @free(i32 %v0_10005430)
  %v0_1000543c = load i32, i32* @r30, align 4
  store i32 268457028, i32* @lr, align 4
  %v1_10005440 = call i32 @free(i32 %v0_1000543c)
  %v0_10005444 = load i32, i32* @r26, align 4
  %v3_10005444 = icmp eq i32 %v0_10005444, -1
  br i1 %v3_10005444, label %dec_label_pc_10005490, label %dec_label_pc_1000544c

dec_label_pc_1000544c:                            ; preds = %dec_label_pc_10005430
  store i32 ptrtoint (i32* @global_var_1001c620.99 to i32), i32* %r29.global-to-local, align 4
  %v2_10005458 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10005460

dec_label_pc_10005460:                            ; preds = %dec_label_pc_1000535c, %dec_label_pc_1000544c
  %storemerge68 = phi i32 [ %v2_10005458, %dec_label_pc_1000544c ], [ %v2_10004e90, %dec_label_pc_1000535c ]
  %v1_10005464.pre-phi = phi i32 [ %v2_10005458, %dec_label_pc_1000544c ], [ %v2_10004e90, %dec_label_pc_1000535c ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_10005464.pre-phi, i32* @r3, align 4
  %v0_10005468 = call i32 @__pthread_return_void()
  %v0_10005470 = call i32 @__pthread_return_0()
  %v0_10005478 = load i32, i32* @r26, align 4
  store i32 %v0_10005478, i32* @global_var_1001c3e8.100, align 4
  store i32 %v1_10005464.pre-phi, i32* @r3, align 4
  %v0_10005488 = load i32, i32* @r20, align 4
  %v1_10005488 = trunc i32 %v0_10005488 to i16
  store i16 %v1_10005488, i16* @global_var_1001c1fc.101, align 2
  %v0_1000548c = call i32 @__pthread_return_void()
  br label %dec_label_pc_10005490

dec_label_pc_10005490:                            ; preds = %dec_label_pc_10005430, %dec_label_pc_10005460
  store i32 %v0_10004e10, i32* %r0.global-to-local, align 4
  %v0_10005494 = load i32, i32* @r27, align 4
  ret i32 %v0_10005494

; uselistorder directives
  uselistorder i32 %v1_10005464.pre-phi, { 1, 0 }
  uselistorder i32 %v2_100053e0, { 1, 0 }
  uselistorder i32 %v0_10005354, { 1, 0 }
  uselistorder i32 %v1_10005330, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_100051fc, { 1, 0 }
  uselistorder i32 %v1_10005320, { 1, 0 }
  uselistorder i32 %v0_100052e8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100052ac, { 1, 0 }
  uselistorder i32 %v0_10005238, { 2, 1, 0 }
  uselistorder i32 %v0_100051d4, { 1, 0 }
  uselistorder i32 %v2_100051c8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_100050ec, { 1, 0 }
  uselistorder i32 %v1_10004fec, { 1, 0 }
  uselistorder i32 %v1_10004fc0, { 1, 0 }
  uselistorder i32 %v1_10004f8c, { 1, 0 }
  uselistorder i32 %v1_10004f24, { 1, 0 }
  uselistorder i32 %v2_10004e90, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 15, 16, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 2, 5, 1, 3, 4, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 14, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 34, 15, 0, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0 }
  uselistorder i16* @global_var_1001c1fc.101, { 1, 0 }
  uselistorder label %dec_label_pc_10005490, { 1, 0 }
  uselistorder label %dec_label_pc_10005460, { 1, 0 }
  uselistorder label %dec_label_pc_10005430, { 1, 0 }
  uselistorder label %dec_label_pc_10005420, { 1, 0 }
  uselistorder label %dec_label_pc_10005410, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10004eec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_100053f4, { 1, 0 }
  uselistorder label %dec_label_pc_100053dc, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_100053f8thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005384, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000535c, { 1, 0 }
  uselistorder label %dec_label_pc_10005338, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10005330, { 1, 0 }
  uselistorder label %dec_label_pc_1000531c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10005288, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100051c4, { 1, 0 }
  uselistorder label %dec_label_pc_100051bc, { 1, 0 }
  uselistorder label %dec_label_pc_10005060, { 1, 0 }
  uselistorder label %dec_label_pc_10004fd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004efc, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_100054c8 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_100054c8, i32* @r3, align 4
  %v0_100054d0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1001c200.60 to i32), i32* %r3.global-to-local, align 4
  %v0_100054d8 = call i32 @__pthread_return_0()
  store i32 %v0_100054d8, i32* %r3.global-to-local, align 4
  %v3_100054e0 = load i32, i32* @global_var_1001c3ec.62, align 4
  %v2_100054e4 = icmp sgt i32 %v3_100054e0, 0
  br i1 %v2_100054e4, label %dec_label_pc_1000575c, label %dec_label_pc_100054ec

dec_label_pc_100054ec:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1000ac00.114 to i32), i32* %r3.global-to-local, align 4
  store i32 268457220, i32* @lr, align 4
  %v3_10005500 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1000ac00.114 to i32), i32 ptrtoint (i32* @global_var_1000ac14.113 to i32))
  store i32 %v3_10005500, i32* %r3.global-to-local, align 4
  store i32 %v3_10005500, i32* @r26, align 4
  %v3_10005504 = icmp eq i32 %v3_10005500, 0
  br i1 %v3_10005504, label %dec_label_pc_1000550c, label %dec_label_pc_10005720.preheader

dec_label_pc_1000550c:                            ; preds = %dec_label_pc_100054ec
  %v0_10005510 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000ac18.115 to i32), i32* %r3.global-to-local, align 4
  store i32 268457244, i32* @lr, align 4
  %v3_10005518 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1000ac18.115 to i32), i32 %v0_10005510)
  store i32 %v3_10005518, i32* %r3.global-to-local, align 4
  store i32 %v3_10005518, i32* @r26, align 4
  %v3_1000551c = icmp eq i32 %v3_10005518, 0
  br i1 %v3_1000551c, label %dec_label_pc_10005750, label %dec_label_pc_10005720.preheader

dec_label_pc_10005720.preheader:                  ; preds = %dec_label_pc_100054ec, %dec_label_pc_1000550c
  %v0_1000572c16 = phi i32 [ %v3_10005500, %dec_label_pc_100054ec ], [ %v3_10005518, %dec_label_pc_1000550c ]
  %v2_10005720 = ptrtoint i32* %stack_var_-164 to i32
  %v1_1000552c2 = bitcast i32* %stack_var_-164 to i8*
  %v3_10005610 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10005720

dec_label_pc_10005528:                            ; preds = %dec_label_pc_10005540
  %v1_10005528 = add i32 %v0_100055e89, 1
  store i32 %v1_10005528, i32* %r3.global-to-local, align 4
  %v1_1000552c = inttoptr i32 %v1_10005528 to i8*
  %v2_1000552c = load i8, i8* %v1_1000552c, align 1
  %v3_1000552c = zext i8 %v2_1000552c to i32
  store i32 %v3_1000552c, i32* %r11.global-to-local, align 4
  %v3_10005534 = icmp eq i8 %v2_1000552c, 0
  br i1 %v3_10005534, label %dec_label_pc_10005720.backedge, label %dec_label_pc_10005540

dec_label_pc_10005540:                            ; preds = %dec_label_pc_10005540.lr.ph, %dec_label_pc_10005528
  %v0_10005544.in = phi i32 [ %v3_1000552c4, %dec_label_pc_10005540.lr.ph ], [ %v3_1000552c, %dec_label_pc_10005528 ]
  %v0_10005558 = phi i32 [ %v3_1000552c4, %dec_label_pc_10005540.lr.ph ], [ %v3_1000552c, %dec_label_pc_10005528 ]
  %v0_100055e89 = phi i32 [ %v2_10005720, %dec_label_pc_10005540.lr.ph ], [ %v1_10005528, %dec_label_pc_10005528 ]
  %v0_10005544 = mul nuw nsw i32 %v0_10005544.in, 2
  %v2_10005544 = add i32 %v0_10005544, %v3_10005540.pre
  %v3_10005544 = inttoptr i32 %v2_10005544 to i16*
  %v4_10005544 = load i16, i16* %v3_10005544, align 2
  %v1_10005548 = and i16 %v4_10005544, 32
  %v3_10005548 = icmp eq i16 %v1_10005548, 0
  br i1 %v3_10005548, label %dec_label_pc_10005550, label %dec_label_pc_10005528

dec_label_pc_10005550:                            ; preds = %dec_label_pc_10005540
  %v3_10005550 = icmp eq i32 %v0_10005558, 10
  br i1 %v3_10005550, label %dec_label_pc_10005720.backedge, label %dec_label_pc_10005558

dec_label_pc_10005720.backedge:                   ; preds = %dec_label_pc_10005528, %dec_label_pc_100056d4, %dec_label_pc_100056dc, %dec_label_pc_10005714, %dec_label_pc_1000552c.preheader, %dec_label_pc_10005550, %dec_label_pc_10005558, %dec_label_pc_1000567c
  %v0_1000572c.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10005720

dec_label_pc_10005558:                            ; preds = %dec_label_pc_10005550
  %v3_10005558 = icmp eq i32 %v0_10005558, 35
  br i1 %v3_10005558, label %dec_label_pc_10005720.backedge, label %dec_label_pc_10005560

dec_label_pc_10005560:                            ; preds = %dec_label_pc_10005558
  store i32 0, i32* @r27, align 4
  store i32 %v2_100054c8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100055e810 = inttoptr i32 %v0_100055e89 to i8*
  %v2_100055e811 = load i8, i8* %v1_100055e810, align 1
  %v3_100055ec14 = icmp eq i8 %v2_100055e811, 0
  br i1 %v3_100055ec14, label %dec_label_pc_100055fc, label %dec_label_pc_100055f4

dec_label_pc_10005574:                            ; preds = %dec_label_pc_100055f4
  %v1_10005574 = mul i32 %v0_10005574, 4
  %v3_10005578 = load i32, i32* @global_var_1001c35c, align 4
  store i32 %v3_10005578, i32* %r11.global-to-local, align 4
  %v1_1000557c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000557c = add i32 %v1_1000557c, %v1_10005574
  %v2_10005580 = add i32 %v2_1000557c, 16
  %v3_10005580 = inttoptr i32 %v2_10005580 to i32*
  store i32 %v0_10005580, i32* %v3_10005580, align 4
  %v0_1000558c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000558c

dec_label_pc_10005588:                            ; preds = %dec_label_pc_100055a0
  %v1_10005588 = add i32 %v0_10005588, 1
  store i32 %v1_10005588, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000558c

dec_label_pc_1000558c:                            ; preds = %dec_label_pc_10005574, %dec_label_pc_10005588
  %v0_10005588 = phi i32 [ %v0_1000558c.pre, %dec_label_pc_10005574 ], [ %v1_10005588, %dec_label_pc_10005588 ]
  %v1_1000558c = inttoptr i32 %v0_10005588 to i8*
  %v2_1000558c = load i8, i8* %v1_1000558c, align 1
  %v3_10005590 = icmp eq i8 %v2_1000558c, 0
  br i1 %v3_10005590, label %dec_label_pc_100055bc, label %dec_label_pc_100055a0

dec_label_pc_100055a0:                            ; preds = %dec_label_pc_1000558c
  %v3_10005598 = icmp eq i8 %v2_1000558c, 10
  %v3_1000558c = zext i8 %v2_1000558c to i32
  %v1_10005594 = mul nuw nsw i32 %v3_1000558c, 2
  %v1_100055a0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100055a0 = add i32 %v1_100055a0, %v1_10005594
  %v3_100055a0 = inttoptr i32 %v2_100055a0 to i16*
  %v4_100055a0 = load i16, i16* %v3_100055a0, align 2
  %v1_100055a4 = and i16 %v4_100055a0, 32
  %v3_100055a4.not = icmp ne i16 %v1_100055a4, 0
  %brmerge = or i1 %v3_10005598, %v3_100055a4.not
  br i1 %brmerge, label %dec_label_pc_100055bc, label %dec_label_pc_10005588

dec_label_pc_100055b4:                            ; preds = %dec_label_pc_100055d0
  %v0_100055b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100055b4 = trunc i32 %v0_100055b4 to i8
  store i8 %v1_100055b4, i8* %v1_100055bc, align 1
  %v0_100055b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100055b8 = add i32 %v0_100055b8, 1
  store i32 %v1_100055b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100055bc

dec_label_pc_100055bc:                            ; preds = %dec_label_pc_100055a0, %dec_label_pc_1000558c, %dec_label_pc_100055b4
  %v0_100055e8 = phi i32 [ %v1_100055b8, %dec_label_pc_100055b4 ], [ %v0_10005588, %dec_label_pc_1000558c ], [ %v0_10005588, %dec_label_pc_100055a0 ]
  %v1_100055bc = inttoptr i32 %v0_100055e8 to i8*
  %v2_100055bc = load i8, i8* %v1_100055bc, align 1
  %v3_100055bc = zext i8 %v2_100055bc to i32
  %v3_100055c0 = icmp eq i8 %v2_100055bc, 0
  %v1_100055c4 = mul nuw nsw i32 %v3_100055bc, 2
  store i32 %v1_100055c4, i32* %r11.global-to-local, align 4
  br i1 %v3_100055c0, label %dec_label_pc_100055e4, label %dec_label_pc_100055d0

dec_label_pc_100055d0:                            ; preds = %dec_label_pc_100055bc
  %v3_100055c8 = icmp eq i8 %v2_100055bc, 10
  %v3_100055d0 = load i32, i32* @global_var_1001c35c, align 4
  %v2_100055d4 = add i32 %v3_100055d0, %v1_100055c4
  %v3_100055d4 = inttoptr i32 %v2_100055d4 to i16*
  %v4_100055d4 = load i16, i16* %v3_100055d4, align 2
  %v1_100055d8 = and i16 %v4_100055d4, 32
  %v3_100055d8.not = icmp ne i16 %v1_100055d8, 0
  %brmerge27 = or i1 %v3_100055c8, %v3_100055d8.not
  br i1 %brmerge27, label %dec_label_pc_100055b4, label %dec_label_pc_100055e4

dec_label_pc_100055e4:                            ; preds = %dec_label_pc_100055d0, %dec_label_pc_100055bc
  %v0_100055e4 = load i32, i32* @r27, align 4
  %v1_100055e4 = add i32 %v0_100055e4, 1
  store i32 %v1_100055e4, i32* @r27, align 4
  %v2_100055e8 = load i8, i8* %v1_100055bc, align 1
  %v3_100055ec = icmp eq i8 %v2_100055e8, 0
  br i1 %v3_100055ec, label %dec_label_pc_100055fc, label %dec_label_pc_100055f4

dec_label_pc_100055f4:                            ; preds = %dec_label_pc_10005560, %dec_label_pc_100055e4
  %v0_10005580 = phi i32 [ %v0_100055e8, %dec_label_pc_100055e4 ], [ %v0_100055e89, %dec_label_pc_10005560 ]
  %v0_10005574 = phi i32 [ %v1_100055e4, %dec_label_pc_100055e4 ], [ 0, %dec_label_pc_10005560 ]
  %tmp33 = icmp slt i32 %v0_10005574, 5
  br i1 %tmp33, label %dec_label_pc_10005574, label %dec_label_pc_100055fc

dec_label_pc_100055fc:                            ; preds = %dec_label_pc_100055e4, %dec_label_pc_100055f4, %dec_label_pc_10005560
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000ac30.116 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10005610 = call i32 @__GI_strcoll(i8* %v3_10005610, i32 ptrtoint ([11 x i8]* @global_var_1000ac30.116 to i32))
  store i32 %v4_10005610, i32* %r3.global-to-local, align 4
  %v3_10005614 = icmp eq i32 %v4_10005610, 0
  br i1 %v3_10005614, label %dec_label_pc_10005640, label %dec_label_pc_10005664

dec_label_pc_10005620:                            ; preds = %dec_label_pc_10005658
  %v1_10005620 = add i32 %v2_10005648, 24
  %v2_10005620 = inttoptr i32 %v1_10005620 to i32*
  %v3_10005620 = load i32, i32* %v2_10005620, align 4
  store i32 %v3_10005620, i32* %r3.global-to-local, align 4
  store i32 268457512, i32* @lr, align 4
  %v1_10005624 = call i32 @__GI_strdup(i32 %v3_10005620)
  store i32 %v1_10005624, i32* %r3.global-to-local, align 4
  %v0_1000562c = load i32, i32* @r29, align 4
  %v1_1000562c = add i32 %v0_1000562c, 1
  store i32 %v1_1000562c, i32* %r11.global-to-local, align 4
  %v1_10005630 = mul i32 %v0_1000562c, 4
  store i32 %v1_1000562c, i32* @global_var_1001c3ec.62, align 4
  %v3_1000563c = add i32 %v1_10005630, ptrtoint (i32* @global_var_1001e6e0.63 to i32)
  %v4_1000563c = inttoptr i32 %v3_1000563c to i32*
  store i32 %v1_10005624, i32* %v4_1000563c, align 4
  br label %dec_label_pc_10005640

dec_label_pc_10005640:                            ; preds = %dec_label_pc_100055fc, %dec_label_pc_10005620
  %v0_10005640 = load i32, i32* @r31, align 4
  %v1_10005640 = load i32, i32* @r27, align 4
  %v2_10005640 = icmp slt i32 %v0_10005640, %v1_10005640
  %v1_10005644 = mul i32 %v0_10005640, 4
  %v0_10005648 = load i32, i32* @r1, align 4
  %v2_10005648 = add i32 %v0_10005648, %v1_10005644
  br i1 %v2_10005640, label %dec_label_pc_10005658, label %dec_label_pc_10005664

dec_label_pc_10005658:                            ; preds = %dec_label_pc_10005640
  %v3_10005658 = load i32, i32* @global_var_1001c3ec.62, align 4
  %tmp35 = icmp slt i32 %v3_10005658, 3
  br i1 %tmp35, label %dec_label_pc_10005620, label %dec_label_pc_10005664

dec_label_pc_10005664:                            ; preds = %dec_label_pc_10005658, %dec_label_pc_10005640, %dec_label_pc_100055fc
  %v0_10005668 = load i32, i32* @r30, align 4
  store i32 %v0_10005668, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000ac3c.117 to i32), i32* @r4, align 4
  %v3_10005670 = inttoptr i32 %v0_10005668 to i8*
  %v4_10005670 = call i32 @__GI_strcoll(i8* %v3_10005670, i32 ptrtoint ([7 x i8]* @global_var_1000ac3c.117 to i32))
  store i32 %v4_10005670, i32* %r3.global-to-local, align 4
  %v3_10005674 = icmp eq i32 %v4_10005670, 0
  br i1 %v3_10005674, label %dec_label_pc_100056b4.preheader, label %dec_label_pc_1000567c

dec_label_pc_1000567c:                            ; preds = %dec_label_pc_10005664
  %v0_10005680 = load i32, i32* @r30, align 4
  store i32 %v0_10005680, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000ac44.118 to i32), i32* @r4, align 4
  %v3_10005688 = inttoptr i32 %v0_10005680 to i8*
  %v4_10005688 = call i32 @__GI_strcoll(i8* %v3_10005688, i32 ptrtoint ([7 x i8]* @global_var_1000ac44.118 to i32))
  store i32 %v4_10005688, i32* %r3.global-to-local, align 4
  %v3_1000568c = icmp eq i32 %v4_10005688, 0
  br i1 %v3_1000568c, label %dec_label_pc_100056b4.preheader, label %dec_label_pc_10005720.backedge

dec_label_pc_100056b4.preheader:                  ; preds = %dec_label_pc_10005664, %dec_label_pc_1000567c
  store i32 ptrtoint (i32* @global_var_1001e6d0.105 to i32), i32* @r31, align 4
  %v3_100056c041 = load i32, i32* @global_var_1001c3f0.103, align 4
  %v2_100056c443 = icmp sgt i32 %v3_100056c041, 0
  %v1_100056c845 = add i32 %v3_100056c041, -1
  %v1_100056cc46 = mul i32 %v1_100056c845, 4
  store i32 %v1_100056cc46, i32* %r11.global-to-local, align 4
  br i1 %v2_100056c443, label %dec_label_pc_10005698, label %dec_label_pc_100056d4

dec_label_pc_10005698:                            ; preds = %dec_label_pc_100056b4.preheader, %dec_label_pc_10005698
  %v1_100056cc48 = phi i32 [ %v1_100056cc, %dec_label_pc_10005698 ], [ %v1_100056cc46, %dec_label_pc_100056b4.preheader ]
  %v1_100056c847 = phi i32 [ %v1_100056c8, %dec_label_pc_10005698 ], [ %v1_100056c845, %dec_label_pc_100056b4.preheader ]
  %v2_10005698 = add i32 %v1_100056cc48, ptrtoint (i32* @global_var_1001e6d0.105 to i32)
  %v3_10005698 = inttoptr i32 %v2_10005698 to i32*
  %v4_10005698 = load i32, i32* %v3_10005698, align 4
  store i32 %v4_10005698, i32* %r3.global-to-local, align 4
  store i32 %v1_100056c847, i32* @global_var_1001c3f0.103, align 4
  store i32 268457636, i32* @lr, align 4
  %v1_100056a0 = call i32 @free(i32 %v4_10005698)
  store i32 %v1_100056a0, i32* %r3.global-to-local, align 4
  %v3_100056a4 = load i32, i32* @global_var_1001c3f0.103, align 4
  %v1_100056ac = mul i32 %v3_100056a4, 4
  %v1_100056b0 = load i32, i32* @r31, align 4
  %v3_100056b0 = add i32 %v1_100056b0, %v1_100056ac
  %v4_100056b0 = inttoptr i32 %v3_100056b0 to i32*
  store i32 0, i32* %v4_100056b0, align 4
  store i32 ptrtoint (i32* @global_var_1001e6d0.105 to i32), i32* @r31, align 4
  %v3_100056c0 = load i32, i32* @global_var_1001c3f0.103, align 4
  %v2_100056c4 = icmp sgt i32 %v3_100056c0, 0
  %v1_100056c8 = add i32 %v3_100056c0, -1
  %v1_100056cc = mul i32 %v1_100056c8, 4
  store i32 %v1_100056cc, i32* %r11.global-to-local, align 4
  br i1 %v2_100056c4, label %dec_label_pc_10005698, label %dec_label_pc_100056d4

dec_label_pc_100056d4:                            ; preds = %dec_label_pc_10005698, %dec_label_pc_100056b4.preheader
  %v3_1000571459 = phi i32 [ %v3_100056c041, %dec_label_pc_100056b4.preheader ], [ %v3_100056c0, %dec_label_pc_10005698 ]
  %v1_100056fc49 = load i32, i32* @r27, align 4
  %v2_100056fc50 = icmp sgt i32 %v1_100056fc49, 1
  %v0_1000570453 = load i32, i32* @r1, align 4
  %v2_1000570454 = add i32 %v0_1000570453, 4
  br i1 %v2_100056fc50, label %dec_label_pc_10005714, label %dec_label_pc_10005720.backedge

dec_label_pc_100056dc:                            ; preds = %dec_label_pc_10005714
  %v1_100056dc = add i32 %v2_1000570455, 24
  %v2_100056dc = inttoptr i32 %v1_100056dc to i32*
  %v3_100056dc = load i32, i32* %v2_100056dc, align 4
  store i32 %v3_100056dc, i32* %r3.global-to-local, align 4
  store i32 268457700, i32* @lr, align 4
  %v1_100056e0 = call i32 @__GI_strdup(i32 %v3_100056dc)
  store i32 %v1_100056e0, i32* %r3.global-to-local, align 4
  %v0_100056e8 = load i32, i32* @r29, align 4
  %v1_100056e8 = add i32 %v0_100056e8, 1
  store i32 %v1_100056e8, i32* %r11.global-to-local, align 4
  %v1_100056ec = mul i32 %v0_100056e8, 4
  store i32 %v1_100056e8, i32* @global_var_1001c3f0.103, align 4
  %v3_100056f8 = add i32 %v1_100056ec, ptrtoint (i32* @global_var_1001e6d0.105 to i32)
  %v4_100056f8 = inttoptr i32 %v3_100056f8 to i32*
  store i32 %v1_100056e0, i32* %v4_100056f8, align 4
  %v0_100056fc.pre = load i32, i32* @r31, align 4
  %v1_100056fc = load i32, i32* @r27, align 4
  %v2_100056fc = icmp slt i32 %v0_100056fc.pre, %v1_100056fc
  br i1 %v2_100056fc, label %dec_label_pc_100056dc.dec_label_pc_10005714_crit_edge, label %dec_label_pc_10005720.backedge

dec_label_pc_100056dc.dec_label_pc_10005714_crit_edge: ; preds = %dec_label_pc_100056dc
  %v0_10005704 = load i32, i32* @r1, align 4
  %v1_10005700 = mul i32 %v0_100056fc.pre, 4
  %v2_10005704 = add i32 %v0_10005704, %v1_10005700
  %v3_10005714.pre = load i32, i32* @global_var_1001c3f0.103, align 4
  br label %dec_label_pc_10005714

dec_label_pc_10005714:                            ; preds = %dec_label_pc_100056d4, %dec_label_pc_100056dc.dec_label_pc_10005714_crit_edge
  %v3_10005714 = phi i32 [ %v3_10005714.pre, %dec_label_pc_100056dc.dec_label_pc_10005714_crit_edge ], [ %v3_1000571459, %dec_label_pc_100056d4 ]
  %v2_1000570455 = phi i32 [ %v2_10005704, %dec_label_pc_100056dc.dec_label_pc_10005714_crit_edge ], [ %v2_1000570454, %dec_label_pc_100056d4 ]
  %tmp37 = icmp slt i32 %v3_10005714, 4
  br i1 %tmp37, label %dec_label_pc_100056dc, label %dec_label_pc_10005720.backedge

dec_label_pc_10005720:                            ; preds = %dec_label_pc_10005720.backedge, %dec_label_pc_10005720.preheader
  %v0_1000572c = phi i32 [ %v0_1000572c.pre, %dec_label_pc_10005720.backedge ], [ %v0_1000572c16, %dec_label_pc_10005720.preheader ]
  store i32 %v2_10005720, i32* %r3.global-to-local, align 4
  store i32 268457780, i32* @lr, align 4
  %v3_10005730 = call i32 @fgets(i32 %v2_10005720, i32 128, i32 %v0_1000572c)
  store i32 %v3_10005730, i32* %r3.global-to-local, align 4
  %v3_10005734 = icmp eq i32 %v3_10005730, 0
  br i1 %v3_10005734, label %dec_label_pc_10005744, label %dec_label_pc_1000552c.preheader

dec_label_pc_1000552c.preheader:                  ; preds = %dec_label_pc_10005720
  store i32 %v2_10005720, i32* %r3.global-to-local, align 4
  %v2_1000552c3 = load i8, i8* %v1_1000552c2, align 4
  %v3_1000552c4 = zext i8 %v2_1000552c3 to i32
  store i32 %v3_1000552c4, i32* %r11.global-to-local, align 4
  %v3_100055346 = icmp eq i8 %v2_1000552c3, 0
  br i1 %v3_100055346, label %dec_label_pc_10005720.backedge, label %dec_label_pc_10005540.lr.ph

dec_label_pc_10005540.lr.ph:                      ; preds = %dec_label_pc_1000552c.preheader
  %v3_10005540.pre = load i32, i32* @global_var_1001c35c, align 4
  br label %dec_label_pc_10005540

dec_label_pc_10005744:                            ; preds = %dec_label_pc_10005720
  %v0_10005744 = load i32, i32* @r26, align 4
  store i32 %v0_10005744, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000574c.119 to i32), i32* @lr, align 4
  %v1_10005748 = inttoptr i32 %v0_10005744 to i16*
  %v2_10005748 = call i32 @__GI_fclose(i16* %v1_10005748)
  store i32 %v2_10005748, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000575c

dec_label_pc_10005750:                            ; preds = %dec_label_pc_1000550c
  %v0_10005750 = call i32 @__GI___h_errno_location()
  store i32 %v0_10005750, i32* %r3.global-to-local, align 4
  %v2_10005758 = inttoptr i32 %v0_10005750 to i32*
  store i32 3, i32* %v2_10005758, align 4
  br label %dec_label_pc_1000575c

dec_label_pc_1000575c:                            ; preds = %entry, %dec_label_pc_10005744, %dec_label_pc_10005750
  store i32 %v2_100054c8, i32* @r3, align 4
  %v0_10005764 = call i32 @__pthread_return_void()
  store i32 %v0_10005764, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005764

; uselistorder directives
  uselistorder i32 %v3_1000552c4, { 2, 0, 1 }
  uselistorder i32 %v1_100056cc46, { 1, 0 }
  uselistorder i32 %v1_100056c845, { 1, 0 }
  uselistorder i32 %v0_10005574, { 1, 0 }
  uselistorder i32 %v1_100055c4, { 1, 0 }
  uselistorder i8* %v1_100055bc, { 0, 2, 1 }
  uselistorder i8 %v2_1000558c, { 2, 0, 1 }
  uselistorder i32 %v0_10005588, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1000552c, { 1, 0, 2 }
  uselistorder i32 %v1_10005528, { 0, 2, 1 }
  uselistorder i32 %v2_10005720, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100054c8, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 29, 19, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 18, 27, 0, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r11.global-to-local, { 8, 0, 1, 7, 2, 3, 4, 5, 6 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32* @global_var_1001c3f0.103, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1001e6d0.105 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1001e6e0.63 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c200.60 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000575c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005714, { 1, 0 }
  uselistorder label %dec_label_pc_10005698, { 1, 0 }
  uselistorder label %dec_label_pc_100056b4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005640, { 1, 0 }
  uselistorder label %dec_label_pc_100055fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100055f4, { 1, 0 }
  uselistorder label %dec_label_pc_100055bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000558c, { 1, 0 }
  uselistorder label %dec_label_pc_10005720.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10005720.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_10005780 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268457920, i32* @lr, align 4
  %v9_100057bc = inttoptr i32 %arg3 to i32*
  %v10_100057bc = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_100057bc, i32 %arg4, i32 %arg5, i32 %v4_10005780, i32 %arg7)
  ret i32 %v10_100057bc
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_100057d8 = load i32, i32* @lr, align 4
  store i32 %v0_100057d8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100057e4 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_100057f4 = add i32 %tmp, 4
  store i32 %v1_100057f4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_100057fc = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_100057fc, i32* @r3, align 4
  br i1 %v3_100057e4, label %dec_label_pc_10005824, label %dec_label_pc_10005804

dec_label_pc_10005804:                            ; preds = %entry
  %v2_10005804 = load i32, i32* %arg2, align 4
  store i32 %v2_10005804, i32* %r0.global-to-local, align 4
  store i32 268458000, i32* @lr, align 4
  %v0_1000580c = call i32 @memcpy()
  %v0_10005810 = load i32, i32* @r31, align 4
  %v1_10005810 = add i32 %v0_10005810, 132
  %v2_10005810 = inttoptr i32 %v1_10005810 to i32*
  %v3_10005810 = load i32, i32* %v2_10005810, align 4
  store i32 %v3_10005810, i32* %r0.global-to-local, align 4
  %v1_1000581c = add i32 %v0_10005810, 136
  %v2_1000581c = inttoptr i32 %v1_1000581c to i32*
  %v3_1000581c = load i32, i32* %v2_1000581c, align 4
  store i32 %v3_1000581c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005824

dec_label_pc_10005824:                            ; preds = %entry, %dec_label_pc_10005804
  store i32 268458052, i32* @lr, align 4
  %v0_10005840 = call i32 @__syscall_rt_sigaction()
  %v0_10005844 = load i32, i32* %r30.global-to-local, align 4
  %v3_10005844 = icmp eq i32 %v0_10005844, 0
  store i32 %v0_10005840, i32* @r31, align 4
  br i1 %v3_10005844, label %dec_label_pc_10005880, label %dec_label_pc_10005854

dec_label_pc_10005854:                            ; preds = %dec_label_pc_10005824
  %v1_1000584c = icmp slt i32 %v0_10005840, 0
  %v1_10005854 = add i32 %v0_10005844, 4
  store i32 %v1_10005854, i32* @r3, align 4
  %v2_10005858 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_10005858, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000584c, label %dec_label_pc_10005880, label %dec_label_pc_10005864

dec_label_pc_10005864:                            ; preds = %dec_label_pc_10005854
  %v3_10005864 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_10005864, i32* %r0.global-to-local, align 4
  %v2_10005868 = inttoptr i32 %v0_10005844 to i32*
  store i32 %v3_10005864, i32* %v2_10005868, align 4
  store i32 268458096, i32* @lr, align 4
  %v0_1000586c = call i32 @memcpy()
  %v1_10005878 = load i32, i32* %r30.global-to-local, align 4
  %v2_10005878 = add i32 %v1_10005878, 136
  %v3_10005878 = inttoptr i32 %v2_10005878 to i32*
  %v0_1000587c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000587c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000587c = add i32 %v1_1000587c, 132
  %v3_1000587c = inttoptr i32 %v2_1000587c to i32*
  store i32 %v0_1000587c, i32* %v3_1000587c, align 4
  %v0_10005884.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005880

dec_label_pc_10005880:                            ; preds = %dec_label_pc_10005854, %dec_label_pc_10005824, %dec_label_pc_10005864
  %v0_10005884 = phi i32 [ %v0_10005840, %dec_label_pc_10005854 ], [ %v0_10005840, %dec_label_pc_10005824 ], [ %v0_10005884.pre, %dec_label_pc_10005864 ]
  store i32 %v0_100057d8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10005884

; uselistorder directives
  uselistorder i32 %v0_10005840, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10005880, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005824, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_100058cc.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_100058b0 = call i32 @__pthread_return_0()
  %v2_100058b8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100058b8, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_100058d034 = add i32 %v2_100058b8, 124
  %v4_100058d035 = inttoptr i32 %v3_100058d034 to i32*
  store i32 0, i32* %v4_100058d035, align 4
  %v0_100058d436 = load i32, i32* %r9.global-to-local, align 4
  %v1_100058d437 = add i32 %v0_100058d436, -1
  store i32 %v1_100058d437, i32* %r9.global-to-local, align 4
  %v0_100058d838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058d839 = add i32 %v0_100058d838, -1
  store i32 %v1_100058d839, i32* %ctr.global-to-local, align 4
  %v2_100058d840 = icmp eq i32 %v1_100058d839, 0
  br i1 %v2_100058d840, label %dec_label_pc_100058dc, label %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge

dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge: ; preds = %dec_label_pc_100058cc.lr.ph, %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge
  %v1_100058d441 = phi i32 [ %v1_100058d4, %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge ], [ %v1_100058d437, %dec_label_pc_100058cc.lr.ph ]
  %v0_100058d0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100058d0.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_100058cc = mul i32 %v1_100058d441, 4
  %v3_100058d0 = add i32 %v1_100058cc, %v1_100058d0.pre
  %v4_100058d0 = inttoptr i32 %v3_100058d0 to i32*
  store i32 %v0_100058d0.pre, i32* %v4_100058d0, align 4
  %v0_100058d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100058d4 = add i32 %v0_100058d4, -1
  store i32 %v1_100058d4, i32* %r9.global-to-local, align 4
  %v0_100058d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058d8 = add i32 %v0_100058d8, -1
  store i32 %v1_100058d8, i32* %ctr.global-to-local, align 4
  %v2_100058d8 = icmp eq i32 %v1_100058d8, 0
  br i1 %v2_100058d8, label %dec_label_pc_100058dc, label %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge, %dec_label_pc_100058cc.lr.ph
  %v1_100058d4.lcssa = phi i32 [ %v1_100058d437, %dec_label_pc_100058cc.lr.ph ], [ %v1_100058d4, %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge ]
  %v3_100058e4 = call i32 @__sigaddset(i32 %v2_100058b8, i32 6, i32 %v1_100058d4.lcssa)
  %v3_100058e8 = icmp eq i32 %v3_100058e4, 0
  br i1 %v3_100058e8, label %dec_label_pc_100058f0, label %dec_label_pc_10005900

dec_label_pc_100058f0:                            ; preds = %dec_label_pc_100058dc
  store i32 268458240, i32* @lr, align 4
  %v3_100058fc = call i32 @__GI_sigprocmask(i32 1, i32 %v2_100058b8, i32 0)
  br label %dec_label_pc_10005900

dec_label_pc_10005900:                            ; preds = %dec_label_pc_100058dc, %dec_label_pc_100058f0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005904 = load i32, i32* @global_var_1001c3f4.123, align 4
  %v3_10005908 = icmp eq i32 %v3_10005904, 0
  br i1 %v3_10005908, label %dec_label_pc_10005910, label %dec_label_pc_10005938

dec_label_pc_10005910:                            ; preds = %dec_label_pc_10005900
  store i32 1, i32* @global_var_1001c3f4.123, align 4
  br label %dec_label_pc_10005918

dec_label_pc_10005918:                            ; preds = %dec_label_pc_10005994, %dec_label_pc_10005910
  store i32 ptrtoint (i32* @global_var_1001c218.121 to i32), i32* %r29.global-to-local, align 4
  %v0_10005924 = call i32 @__pthread_return_0()
  store i32 268458288, i32* @lr, align 4
  %v1_1000592c = call i32 @__raise(i32 6)
  %v0_10005934 = call i32 @__pthread_return_0()
  %v3_1000593c.pre = load i32, i32* @global_var_1001c3f4.123, align 4
  br label %dec_label_pc_10005938

dec_label_pc_10005938:                            ; preds = %dec_label_pc_10005900, %dec_label_pc_10005918
  %v0_100059b0 = phi i32 [ %v3_10005904, %dec_label_pc_10005900 ], [ %v3_1000593c.pre, %dec_label_pc_10005918 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005940 = icmp eq i32 %v0_100059b0, 1
  br i1 %v3_10005940, label %dec_label_pc_10005980.lr.ph, label %dec_label_pc_100059b0

dec_label_pc_10005980.lr.ph:                      ; preds = %dec_label_pc_10005938
  %v2_1000594c = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001c3f4.123, align 4
  store i32 ptrtoint (i32* @global_var_10005960.125 to i32), i32* @lr, align 4
  %v3_1000595c = call i32 @__GI_memset(i32 %v2_1000594c, i32 0, i32 140)
  store i32 %v2_100058b8, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_100058d034, i32* %r9.global-to-local, align 4
  %v2_1000598826 = add i32 %v2_100058b8, 256
  %v3_1000598827 = inttoptr i32 %v2_1000598826 to i32*
  store i32 -1, i32* %v3_1000598827, align 4
  %v0_1000598c28 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000598c29 = add i32 %v0_1000598c28, -1
  store i32 %v1_1000598c29, i32* %r11.global-to-local, align 4
  %v0_1000599030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000599031 = add i32 %v0_1000599030, -1
  store i32 %v1_1000599031, i32* %ctr.global-to-local, align 4
  %v2_1000599032 = icmp eq i32 %v1_1000599031, 0
  br i1 %v2_1000599032, label %dec_label_pc_10005994, label %dec_label_pc_10005980.dec_label_pc_10005980_crit_edge

dec_label_pc_10005980.dec_label_pc_10005980_crit_edge: ; preds = %dec_label_pc_10005980.lr.ph, %dec_label_pc_10005980.dec_label_pc_10005980_crit_edge
  %v1_1000598c33 = phi i32 [ %v1_1000598c, %dec_label_pc_10005980.dec_label_pc_10005980_crit_edge ], [ %v1_1000598c29, %dec_label_pc_10005980.lr.ph ]
  %v1_10005984.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10005988.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10005980 = mul i32 %v1_1000598c33, 4
  %v2_10005984 = add i32 %v1_10005980, %v1_10005984.pre
  store i32 %v2_10005984, i32* %r9.global-to-local, align 4
  %v2_10005988 = add i32 %v2_10005984, 132
  %v3_10005988 = inttoptr i32 %v2_10005988 to i32*
  store i32 %v0_10005988.pre, i32* %v3_10005988, align 4
  %v0_1000598c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000598c = add i32 %v0_1000598c, -1
  store i32 %v1_1000598c, i32* %r11.global-to-local, align 4
  %v0_10005990 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005990 = add i32 %v0_10005990, -1
  store i32 %v1_10005990, i32* %ctr.global-to-local, align 4
  %v2_10005990 = icmp eq i32 %v1_10005990, 0
  br i1 %v2_10005990, label %dec_label_pc_10005994, label %dec_label_pc_10005980.dec_label_pc_10005980_crit_edge

dec_label_pc_10005994:                            ; preds = %dec_label_pc_10005980.dec_label_pc_10005980_crit_edge, %dec_label_pc_10005980.lr.ph
  store i32 268458412, i32* @lr, align 4
  %v4_100059a8 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10005918

dec_label_pc_100059b0:                            ; preds = %dec_label_pc_10005938
  %v3_100059b0 = icmp eq i32 %v0_100059b0, 2
  br i1 %v3_100059b0, label %dec_label_pc_100059b8, label %dec_label_pc_100059c4

dec_label_pc_100059b8:                            ; preds = %dec_label_pc_100059b0
  store i32 3, i32* @global_var_1001c3f4.123, align 4
  br label %dec_label_pc_100059c4

dec_label_pc_100059c4:                            ; preds = %dec_label_pc_100059b0, %dec_label_pc_100059b8
  %v3_100059c4 = phi i32 [ %v0_100059b0, %dec_label_pc_100059b0 ], [ 3, %dec_label_pc_100059b8 ]
  %v1_100059cc = icmp ne i32 %v3_100059c4, 3
  call void @__pseudo_cond_branch(i1 %v1_100059cc, i32 268458464)
  store i32 4, i32* @global_var_1001c3f4.123, align 4
  %v1_100059dc = call i32 @__GI__exit(i32 127)
  ret i32 %v1_100059dc

; uselistorder directives
  uselistorder i32 %v1_10005990, { 1, 0 }
  uselistorder i32 %v1_1000598c, { 1, 0 }
  uselistorder i32 %v1_100058d8, { 1, 0 }
  uselistorder i32 %v1_100058d4, { 0, 2, 1 }
  uselistorder i32 %v2_100058b8, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 2, 0, 3, 4, 6, 5, 1, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0, 5, 6, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 1, 0 }
  uselistorder i32 132, { 2, 0, 1 }
  uselistorder i32* @global_var_1001c3f4.123, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_100059c4, { 1, 0 }
  uselistorder label %dec_label_pc_10005980.dec_label_pc_10005980_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005938, { 1, 0 }
  uselistorder label %dec_label_pc_10005900, { 1, 0 }
  uselistorder label %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100059e8 = add i32 %arg1, 28
  %v2_100059e8 = inttoptr i32 %v1_100059e8 to i32*
  %v3_100059e8 = load i32, i32* %v2_100059e8, align 4
  store i32 %v3_100059e8, i32* @global_var_1001c3f8.126, align 4
  %v1_100059f8 = add i32 %arg1, 44
  %v2_100059f8 = inttoptr i32 %v1_100059f8 to i32*
  %v3_100059f8 = load i32, i32* %v2_100059f8, align 4
  store i32 %v3_100059f8, i32* @global_var_1001c3fc.127, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1001c400.96, align 4
  %v0_10005a2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10005a2c)
  %v1_10005a34 = call i32 @__syscall_error(i32 12)
  ret i32 %v1_10005a34

; uselistorder directives
  uselistorder i32* @global_var_1001c400.96, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10005a50 = call i32 @__asm_mfcr()
  %v1_10005a54 = and i32 %v0_10005a50, 268435456
  %v3_10005a54 = icmp eq i32 %v1_10005a54, 0
  store i32 %v0_10005a50, i32* %r31.global-to-local, align 4
  br i1 %v3_10005a54, label %dec_label_pc_10005a6c, label %dec_label_pc_10005a60

dec_label_pc_10005a60:                            ; preds = %entry
  %v0_10005a60 = call i32 @__errno_location()
  %v0_10005a64 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005a64 = inttoptr i32 %v0_10005a60 to i32*
  store i32 %v0_10005a64, i32* %v2_10005a64, align 4
  br label %dec_label_pc_10005a6c

dec_label_pc_10005a6c:                            ; preds = %entry, %dec_label_pc_10005a60
  %v0_10005a7c = phi i32 [ %v0_10005a50, %entry ], [ -1, %dec_label_pc_10005a60 ]
  ret i32 %v0_10005a7c

; uselistorder directives
  uselistorder label %dec_label_pc_10005a6c, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10005a98 = call i32 @__asm_mfcr()
  %v1_10005a9c = and i32 %v0_10005a98, 268435456
  %v3_10005a9c = icmp eq i32 %v1_10005a9c, 0
  store i32 %v0_10005a98, i32* %r31.global-to-local, align 4
  br i1 %v3_10005a9c, label %dec_label_pc_10005ab4, label %dec_label_pc_10005aa8

dec_label_pc_10005aa8:                            ; preds = %entry
  %v0_10005aa8 = call i32 @__errno_location()
  %v0_10005aac = load i32, i32* %r31.global-to-local, align 4
  %v2_10005aac = inttoptr i32 %v0_10005aa8 to i32*
  store i32 %v0_10005aac, i32* %v2_10005aac, align 4
  br label %dec_label_pc_10005ab4

dec_label_pc_10005ab4:                            ; preds = %entry, %dec_label_pc_10005aa8
  %v0_10005ac4 = phi i32 [ %v0_10005a98, %entry ], [ -1, %dec_label_pc_10005aa8 ]
  ret i32 %v0_10005ac4

; uselistorder directives
  uselistorder label %dec_label_pc_10005ab4, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_10005ac8 = icmp eq i32 %arg2, 0
  br i1 %v3_10005ac8, label %dec_label_pc_10005b08, label %dec_label_pc_10005af0

dec_label_pc_10005af0:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10005b08, label %dec_label_pc_10005af8

dec_label_pc_10005af8:                            ; preds = %dec_label_pc_10005af0
  %v0_10005af8 = call i32 @__errno_location()
  %v2_10005b00 = inttoptr i32 %v0_10005af8 to i32*
  store i32 22, i32* %v2_10005b00, align 4
  %v0_10005b2c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b28

dec_label_pc_10005b08:                            ; preds = %dec_label_pc_10005af0, %entry
  %v0_10005b0c = call i32 @__asm_mfcr()
  %v1_10005b10 = and i32 %v0_10005b0c, 268435456
  %v3_10005b10 = icmp eq i32 %v1_10005b10, 0
  store i32 %v0_10005b0c, i32* %r31.global-to-local, align 4
  br i1 %v3_10005b10, label %dec_label_pc_10005b28, label %dec_label_pc_10005b1c

dec_label_pc_10005b1c:                            ; preds = %dec_label_pc_10005b08
  %v0_10005b1c = call i32 @__errno_location()
  %v0_10005b20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005b20 = inttoptr i32 %v0_10005b1c to i32*
  store i32 %v0_10005b20, i32* %v2_10005b20, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b28

dec_label_pc_10005b28:                            ; preds = %dec_label_pc_10005b08, %dec_label_pc_10005af8, %dec_label_pc_10005b1c
  %v0_10005b2c = phi i32 [ %v0_10005b0c, %dec_label_pc_10005b08 ], [ %v0_10005b2c.pre, %dec_label_pc_10005af8 ], [ -1, %dec_label_pc_10005b1c ]
  ret i32 %v0_10005b2c

; uselistorder directives
  uselistorder label %dec_label_pc_10005b28, { 2, 0, 1 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10005b54 = add i32 %tmp, 52
  %v3_10005b54 = inttoptr i32 %v2_10005b54 to i32*
  %v4_10005b54 = load i32, i32* %v3_10005b54, align 4
  store i32 %v4_10005b54, i32* @r28, align 4
  %v3_10005b58 = icmp eq i32 %v4_10005b54, 0
  store i1 %v3_10005b58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005b58, label %dec_label_pc_10005b60, label %dec_label_pc_10005b80

dec_label_pc_10005b60:                            ; preds = %entry
  %v2_10005b68 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10005b68, i32* @r3, align 4
  %v0_10005b74 = call i32 @__pthread_return_void()
  %v0_10005b7c = call i32 @__pthread_return_0()
  %v0_10005b80.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005b80

dec_label_pc_10005b80:                            ; preds = %entry, %dec_label_pc_10005b60
  %v0_10005b90 = phi i32 [ %tmp, %entry ], [ %v0_10005b80.pre, %dec_label_pc_10005b60 ]
  %v1_10005b80 = inttoptr i32 %v0_10005b90 to i16*
  %v2_10005b80 = load i16, i16* %v1_10005b80, align 2
  %v3_10005b80 = zext i16 %v2_10005b80 to i32
  store i32 0, i32* @r27, align 4
  %v1_10005b88 = and i32 %v3_10005b80, 64
  %v3_10005b88 = icmp eq i32 %v1_10005b88, 0
  br i1 %v3_10005b88, label %dec_label_pc_10005b9c, label %dec_label_pc_10005b90

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005b80
  store i32 268458904, i32* @lr, align 4
  %v4_10005b94 = call i32 @fflush_unlocked(i16* %v1_10005b80, i32 %v1_10005b88)
  store i32 %v4_10005b94, i32* @r27, align 4
  %v0_10005b9c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005b9c

dec_label_pc_10005b9c:                            ; preds = %dec_label_pc_10005b80, %dec_label_pc_10005b90
  %v0_10005b9c = phi i32 [ %v0_10005b90, %dec_label_pc_10005b80 ], [ %v0_10005b9c.pre, %dec_label_pc_10005b90 ]
  %v1_10005b9c = add i32 %v0_10005b9c, 4
  %v2_10005b9c = inttoptr i32 %v1_10005b9c to i32*
  %v3_10005b9c = load i32, i32* %v2_10005b9c, align 4
  store i32 268458916, i32* @lr, align 4
  %v1_10005ba0 = call i32 @__libc_close(i32 %v3_10005b9c)
  %v3_10005ba4 = icmp eq i32 %v1_10005ba0, 0
  store i1 %v3_10005ba4, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10005ba0, -1
  br i1 %tmp8, label %dec_label_pc_10005bb0, label %dec_label_pc_10005bac

dec_label_pc_10005bac:                            ; preds = %dec_label_pc_10005b9c
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10005bb0

dec_label_pc_10005bb0:                            ; preds = %dec_label_pc_10005b9c, %dec_label_pc_10005bac
  store i32 ptrtoint ([3 x i8]* @global_var_10004420.61 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_1001c248.129 to i32), i32* @r29, align 4
  %v1_10005bc4 = load i32, i32* @r31, align 4
  %v2_10005bc4 = add i32 %v1_10005bc4, 4
  %v3_10005bc4 = inttoptr i32 %v2_10005bc4 to i32*
  store i32 -1, i32* %v3_10005bc4, align 4
  %v2_10005bc8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10005bc8, i32* @r30, align 4
  store i32 %v2_10005bc8, i32* @r3, align 4
  %v0_10005bd8 = call i32 @__pthread_return_void()
  %v0_10005be0 = call i32 @__pthread_return_0()
  %v3_10005be8 = load i32, i32* @global_var_1001c404.130, align 4
  store i32 %v2_10005bc8, i32* @r3, align 4
  %v1_10005bf4 = add i32 %v3_10005be8, 1
  store i32 %v1_10005bf4, i32* @global_var_1001c404.130, align 4
  %v0_10005bfc = call i32 @__pthread_return_void()
  %v0_10005c00 = load i32, i32* @r31, align 4
  %v1_10005c00 = inttoptr i32 %v0_10005c00 to i16*
  %v2_10005c00 = load i16, i16* %v1_10005c00, align 2
  %v3_10005c00 = zext i16 %v2_10005c00 to i32
  %v0_10005c04 = load i32, i32* @r28, align 4
  %v3_10005c04 = icmp eq i32 %v0_10005c04, 0
  store i1 %v3_10005c04, i1* %cr7_eq.global-to-local, align 1
  %v1_10005c08 = call i32 @__asm_rlwinm(i32 %v3_10005c00, i32 0, i32 17, i32 18)
  %v1_10005c10 = or i32 %v1_10005c08, 48
  %v1_10005c14 = trunc i32 %v1_10005c10 to i16
  %v2_10005c14 = load i32, i32* @r31, align 4
  %v3_10005c14 = inttoptr i32 %v2_10005c14 to i16*
  store i16 %v1_10005c14, i16* %v3_10005c14, align 2
  %v0_10005c18 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005c18, label %dec_label_pc_10005c1c, label %dec_label_pc_10005c28

dec_label_pc_10005c1c:                            ; preds = %dec_label_pc_10005bb0
  %v2_10005c1c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10005c1c, i32* @r3, align 4
  %v0_10005c24 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10005c28

dec_label_pc_10005c28:                            ; preds = %dec_label_pc_10005bb0, %dec_label_pc_10005c1c
  %v0_10005c28 = load i32, i32* @r31, align 4
  %v1_10005c28 = inttoptr i32 %v0_10005c28 to i16*
  %v2_10005c28 = load i16, i16* %v1_10005c28, align 2
  %v1_10005c2c = and i16 %v2_10005c28, 16384
  %v3_10005c2c = icmp eq i16 %v1_10005c2c, 0
  br i1 %v3_10005c2c, label %dec_label_pc_10005c3c, label %dec_label_pc_10005c34

dec_label_pc_10005c34:                            ; preds = %dec_label_pc_10005c28
  %v1_10005c34 = add i32 %v0_10005c28, 8
  %v2_10005c34 = inttoptr i32 %v1_10005c34 to i32*
  %v3_10005c34 = load i32, i32* %v2_10005c34, align 4
  store i32 268459068, i32* @lr, align 4
  %v1_10005c38 = call i32 @free(i32 %v3_10005c34)
  br label %dec_label_pc_10005c3c

dec_label_pc_10005c3c:                            ; preds = %dec_label_pc_10005c28, %dec_label_pc_10005c34
  store i32 %v2_10005bc8, i32* @r3, align 4
  %v0_10005c48 = call i32 @__pthread_return_void()
  %v0_10005c50 = call i32 @__pthread_return_0()
  %v3_10005c58 = load i32, i32* @global_var_1001c408.131, align 4
  store i32 %v2_10005bc8, i32* @r3, align 4
  %v1_10005c64 = add i32 %v3_10005c58, 1
  store i32 %v1_10005c64, i32* @global_var_1001c408.131, align 4
  %v0_10005c6c = call i32 @__pthread_return_void()
  store i32 268459124, i32* @lr, align 4
  %v0_10005c70 = call i32 @_stdio_openlist_dec_use()
  %v0_10005c78 = load i32, i32* @r27, align 4
  ret i32 %v0_10005c78

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 4, 3, 2, 1, 5, 0 }
  uselistorder label %dec_label_pc_10005c3c, { 1, 0 }
  uselistorder label %dec_label_pc_10005c28, { 1, 0 }
  uselistorder label %dec_label_pc_10005bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10005b9c, { 1, 0 }
  uselistorder label %dec_label_pc_10005b80, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10005c94 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10005c94
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10005c98 = load i32, i32* @lr, align 4
  store i32 %v0_10005c98, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10005cac = load i32, i32* @r5, align 4
  store i32 %v0_10005cac, i32* @r31, align 4
  %v0_10005cb0 = load i32, i32* @r6, align 4
  store i32 %v0_10005cb0, i32* @r29, align 4
  %v3_10005cb4 = load i8, i8* %arg2, align 1
  %v4_10005cb4 = zext i8 %v3_10005cb4 to i32
  store i32 %v4_10005cb4, i32* %r0.global-to-local, align 4
  %v3_10005cb8 = icmp eq i8 %v3_10005cb4, 114
  br i1 %v3_10005cb8, label %dec_label_pc_10005d04, label %dec_label_pc_10005cc0

dec_label_pc_10005cc0:                            ; preds = %entry
  %v3_10005cc0 = icmp eq i8 %v3_10005cb4, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10005cc0, label %dec_label_pc_10005d08, label %dec_label_pc_10005ccc

dec_label_pc_10005ccc:                            ; preds = %dec_label_pc_10005cc0
  %v3_10005ccc = icmp eq i8 %v3_10005cb4, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10005ccc, label %dec_label_pc_10005d08, label %dec_label_pc_10005cd8

dec_label_pc_10005cd8:                            ; preds = %dec_label_pc_10005d98, %dec_label_pc_10005d68, %dec_label_pc_10005ccc
  %v0_10005cd8 = call i32 @__errno_location()
  %v0_10005cdc = load i32, i32* @r31, align 4
  %v3_10005cdc = icmp eq i32 %v0_10005cdc, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10005ce4 = inttoptr i32 %v0_10005cd8 to i32*
  store i32 22, i32* %v2_10005ce4, align 4
  br i1 %v3_10005cdc, label %dec_label_pc_10005f38, label %dec_label_pc_10005cec

dec_label_pc_10005cec:                            ; preds = %dec_label_pc_10005dcc, %dec_label_pc_10005cd8
  %v0_10005cec = load i32, i32* @r31, align 4
  %v1_10005cec = inttoptr i32 %v0_10005cec to i16*
  %v2_10005cec = load i16, i16* %v1_10005cec, align 2
  %v3_10005cec = zext i16 %v2_10005cec to i32
  store i32 %v3_10005cec, i32* %r0.global-to-local, align 4
  %v1_10005cf0 = and i32 %v3_10005cec, 8192
  store i32 %v1_10005cf0, i32* %r9.global-to-local, align 4
  %v3_10005cf0 = icmp eq i32 %v1_10005cf0, 0
  store i1 %v3_10005cf0, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10005cf0, label %dec_label_pc_10005f38, label %dec_label_pc_10005cf8

dec_label_pc_10005cf8:                            ; preds = %dec_label_pc_10005cec
  store i32 ptrtoint (i32* @global_var_10005d00.133 to i32), i32* @lr, align 4
  %v2_10005cfc = call i32 @free(i32 %v0_10005cec)
  br label %dec_label_pc_10005f38

dec_label_pc_10005d04:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10005d08

dec_label_pc_10005d08:                            ; preds = %dec_label_pc_10005ccc, %dec_label_pc_10005cc0, %dec_label_pc_10005d04
  %v0_10005d28 = phi i32 [ 1089, %dec_label_pc_10005ccc ], [ 577, %dec_label_pc_10005cc0 ], [ 1, %dec_label_pc_10005d04 ]
  %v2_10005d08 = add i32 %tmp, 1
  %v3_10005d08 = inttoptr i32 %v2_10005d08 to i8*
  %v4_10005d08 = load i8, i8* %v3_10005d08, align 1
  %v5_10005d08 = zext i8 %v4_10005d08 to i32
  store i32 %v5_10005d08, i32* %r0.global-to-local, align 4
  %v3_10005d10 = icmp eq i8 %v4_10005d08, 98
  br i1 %v3_10005d10, label %dec_label_pc_10005d1c, label %dec_label_pc_10005d18

dec_label_pc_10005d18:                            ; preds = %dec_label_pc_10005d08
  br label %dec_label_pc_10005d1c

dec_label_pc_10005d1c:                            ; preds = %dec_label_pc_10005d08, %dec_label_pc_10005d18
  %storemerge = phi i32 [ %tmp, %dec_label_pc_10005d18 ], [ %v2_10005d08, %dec_label_pc_10005d08 ]
  %v0_10005d1c = phi i32 [ %tmp, %dec_label_pc_10005d18 ], [ %v2_10005d08, %dec_label_pc_10005d08 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10005d1c = add i32 %v0_10005d1c, 1
  %v2_10005d1c = inttoptr i32 %v1_10005d1c to i8*
  %v3_10005d1c = load i8, i8* %v2_10005d1c, align 1
  %v4_10005d1c = zext i8 %v3_10005d1c to i32
  store i32 %v4_10005d1c, i32* %r0.global-to-local, align 4
  %v3_10005d20 = icmp eq i8 %v3_10005d1c, 43
  br i1 %v3_10005d20, label %dec_label_pc_10005d28, label %dec_label_pc_10005d30

dec_label_pc_10005d28:                            ; preds = %dec_label_pc_10005d1c
  store i32 %v0_10005d28, i32* %r9.global-to-local, align 4
  %v1_10005d2c = add nuw nsw i32 %v0_10005d28, 1
  store i32 %v1_10005d2c, i32* @r28, align 4
  br label %dec_label_pc_10005d30

dec_label_pc_10005d30:                            ; preds = %dec_label_pc_10005d1c, %dec_label_pc_10005d28
  %v3_10005d30 = icmp eq i32 %v0_10005cac, 0
  br i1 %v3_10005d30, label %dec_label_pc_10005d38, label %dec_label_pc_10005d60

dec_label_pc_10005d38:                            ; preds = %dec_label_pc_10005d30
  store i32 268459328, i32* @lr, align 4
  %v1_10005d3c = call i32 @malloc(i32 80)
  store i32 %v1_10005d3c, i32* @r31, align 4
  %v4_10005d40 = icmp eq i32 %v1_10005d3c, 0
  store i1 %v4_10005d40, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_10005d40, label %dec_label_pc_10005f3c, label %dec_label_pc_10005d48

dec_label_pc_10005d48:                            ; preds = %dec_label_pc_10005d38
  %v1_10005d4c = add i32 %v1_10005d3c, 56
  store i32 %v1_10005d4c, i32* @r3, align 4
  %v3_10005d50 = inttoptr i32 %v1_10005d3c to i16*
  store i16 8192, i16* %v3_10005d50, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10005d58 = load i32, i32* @r31, align 4
  %v2_10005d58 = add i32 %v1_10005d58, 8
  %v3_10005d58 = inttoptr i32 %v2_10005d58 to i32*
  store i32 0, i32* %v3_10005d58, align 4
  store i32 268459360, i32* @lr, align 4
  %v0_10005d5c = call i32 @__stdio_init_mutex()
  %v0_10005d60.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10005d60

dec_label_pc_10005d60:                            ; preds = %dec_label_pc_10005d30, %dec_label_pc_10005d48
  %v0_10005dc0 = phi i32 [ %v0_10005cb0, %dec_label_pc_10005d30 ], [ %v0_10005d60.pre, %dec_label_pc_10005d48 ]
  %v1_10005d60 = icmp slt i32 %v0_10005dc0, 0
  br i1 %v1_10005d60, label %dec_label_pc_10005dc0, label %dec_label_pc_10005d68

dec_label_pc_10005d68:                            ; preds = %dec_label_pc_10005d60
  %v1_10005d6c = add i32 %arg1, 1
  store i32 %v1_10005d6c, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_10005d74 = load i32, i32* @r31, align 4
  %v2_10005d74 = add i32 %v1_10005d74, 4
  %v3_10005d74 = inttoptr i32 %v2_10005d74 to i32*
  store i32 %v0_10005dc0, i32* %v3_10005d74, align 4
  %v0_10005d78 = load i32, i32* @r28, align 4
  %v1_10005d78 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005d78 = and i32 %v1_10005d78, %v0_10005d78
  %v1_10005d7c = add i32 %v2_10005d78, 1
  store i32 %v1_10005d7c, i32* %r9.global-to-local, align 4
  %v1_10005d80 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005d80 = and i32 %v1_10005d80, %v1_10005d7c
  store i32 %v2_10005d80, i32* %r0.global-to-local, align 4
  %v4_10005d84 = icmp eq i32 %v2_10005d80, %v1_10005d7c
  br i1 %v4_10005d84, label %dec_label_pc_10005d8c, label %dec_label_pc_10005cd8

dec_label_pc_10005d8c:                            ; preds = %dec_label_pc_10005d68
  %v2_10005d8c = sub i32 -1, %arg1
  %v3_10005d8c = and i32 %v0_10005d78, %v2_10005d8c
  store i32 %v3_10005d8c, i32* %r0.global-to-local, align 4
  %v1_10005d90 = and i32 %v3_10005d8c, 1024
  store i32 %v1_10005d90, i32* %r9.global-to-local, align 4
  %v3_10005d90 = icmp eq i32 %v1_10005d90, 0
  store i1 %v3_10005d90, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10005d90, label %dec_label_pc_10005db4, label %dec_label_pc_10005d98

dec_label_pc_10005d98:                            ; preds = %dec_label_pc_10005d8c
  %v0_10005d98 = load i32, i32* @r29, align 4
  store i32 268459436, i32* @lr, align 4
  %v2_10005da8 = call i32 @__libc_fcntl(i32 %v0_10005d98, i32 4)
  %v3_10005dac = icmp eq i32 %v2_10005da8, 0
  br i1 %v3_10005dac, label %dec_label_pc_10005db4, label %dec_label_pc_10005cd8

dec_label_pc_10005db4:                            ; preds = %dec_label_pc_10005d98, %dec_label_pc_10005d8c
  %v1_10005db4 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10005db4, i32* %r0.global-to-local, align 4
  %v0_10005db8 = load i32, i32* @r28, align 4
  %v2_10005db8 = or i32 %v0_10005db8, %v1_10005db4
  store i32 %v2_10005db8, i32* @r28, align 4
  br label %dec_label_pc_10005dec

dec_label_pc_10005dc0:                            ; preds = %dec_label_pc_10005d60
  %v3_10005dc0 = icmp eq i32 %v0_10005dc0, -1
  %v0_10005dd0.pre = load i32, i32* @r28, align 4
  br i1 %v3_10005dc0, label %dec_label_pc_10005dcc, label %dec_label_pc_10005dc8

dec_label_pc_10005dc8:                            ; preds = %dec_label_pc_10005dc0
  %v1_10005dc8 = or i32 %v0_10005dd0.pre, 65536
  store i32 %v1_10005dc8, i32* @r28, align 4
  br label %dec_label_pc_10005dcc

dec_label_pc_10005dcc:                            ; preds = %dec_label_pc_10005dc0, %dec_label_pc_10005dc8
  %v0_10005dd0 = phi i32 [ %v1_10005dc8, %dec_label_pc_10005dc8 ], [ %v0_10005dd0.pre, %dec_label_pc_10005dc0 ]
  store i32 438, i32* @r5, align 4
  store i32 268459488, i32* @lr, align 4
  %v2_10005ddc = call i32 @__libc_open(i32 %arg1, i32 %v0_10005dd0)
  %v1_10005de0 = icmp slt i32 %v2_10005ddc, 0
  %v1_10005de4 = load i32, i32* @r31, align 4
  %v2_10005de4 = add i32 %v1_10005de4, 4
  %v3_10005de4 = inttoptr i32 %v2_10005de4 to i32*
  store i32 %v2_10005ddc, i32* %v3_10005de4, align 4
  br i1 %v1_10005de0, label %dec_label_pc_10005cec, label %dec_label_pc_10005dcc.dec_label_pc_10005dec_crit_edge

dec_label_pc_10005dcc.dec_label_pc_10005dec_crit_edge: ; preds = %dec_label_pc_10005dcc
  %v0_10005df0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005dec

dec_label_pc_10005dec:                            ; preds = %dec_label_pc_10005dcc.dec_label_pc_10005dec_crit_edge, %dec_label_pc_10005db4
  %v0_10005df0 = phi i32 [ %v0_10005df0.pre, %dec_label_pc_10005dcc.dec_label_pc_10005dec_crit_edge ], [ %v2_10005db8, %dec_label_pc_10005db4 ]
  %v0_10005dec = load i32, i32* @r31, align 4
  %v1_10005dec = inttoptr i32 %v0_10005dec to i16*
  %v2_10005dec = load i16, i16* %v1_10005dec, align 2
  %v3_10005dec = zext i16 %v2_10005dec to i32
  store i32 %v3_10005dec, i32* %r0.global-to-local, align 4
  %v1_10005df0 = urem i32 %v0_10005df0, 4
  store i32 %v1_10005df0, i32* %r29.global-to-local, align 4
  %v1_10005df4 = call i32 @__asm_rlwinm(i32 %v0_10005df0, i32 0, i32 21, i32 21)
  %v1_10005df8 = add nuw nsw i32 %v1_10005df0, 1
  store i32 %v1_10005df8, i32* %r29.global-to-local, align 4
  %v1_10005dfc = call i32 @__asm_rlwinm(i32 %v3_10005dec, i32 0, i32 18, i32 18)
  store i32 %v1_10005dfc, i32* %r0.global-to-local, align 4
  %v1_10005e00 = xor i32 %v1_10005df8, 3
  store i32 %v1_10005e00, i32* %r29.global-to-local, align 4
  %v1_10005e04 = urem i32 %v1_10005dfc, 65536
  store i32 %v1_10005e04, i32* %r9.global-to-local, align 4
  %v0_10005e08 = load i32, i32* @r28, align 4
  %v1_10005e08 = call i32 @__asm_rlwinm(i32 %v0_10005e08, i32 31, i32 16, i32 16)
  %v2_10005e0c = or i32 %v1_10005e08, %v1_10005df4
  store i32 %v2_10005e0c, i32* %r0.global-to-local, align 4
  %v0_10005e10 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005e10 = mul i32 %v0_10005e10, 16
  %v0_10005e14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005e14 = or i32 %v0_10005e14, %v2_10005e0c
  store i32 %v2_10005e14, i32* %r9.global-to-local, align 4
  %v2_10005e18 = or i32 %v2_10005e14, %v1_10005e10
  store i32 %v2_10005e18, i32* @r29, align 4
  %v1_10005e1c = trunc i32 %v2_10005e18 to i16
  %v2_10005e1c = load i32, i32* @r31, align 4
  %v3_10005e1c = inttoptr i32 %v2_10005e1c to i16*
  store i16 %v1_10005e1c, i16* %v3_10005e1c, align 2
  %v0_10005e20 = call i32 @__errno_location()
  store i32 %v0_10005e20, i32* @r28, align 4
  %v0_10005e28 = load i32, i32* @r31, align 4
  %v1_10005e28 = add i32 %v0_10005e28, 4
  %v2_10005e28 = inttoptr i32 %v1_10005e28 to i32*
  %v3_10005e28 = load i32, i32* %v2_10005e28, align 4
  %v1_10005e2c = inttoptr i32 %v0_10005e20 to i32*
  %v2_10005e2c = load i32, i32* %v1_10005e2c, align 4
  store i32 %v2_10005e2c, i32* @r27, align 4
  store i32 268459572, i32* @lr, align 4
  %v1_10005e30 = call i32 @isatty(i32 %v3_10005e28)
  %v1_10005e34 = mul i32 %v1_10005e30, 256
  %v0_10005e38 = load i32, i32* @r29, align 4
  %v2_10005e38 = or i32 %v0_10005e38, %v1_10005e34
  store i32 %v2_10005e38, i32* @r29, align 4
  %v1_10005e3c = trunc i32 %v2_10005e38 to i16
  %v2_10005e3c = load i32, i32* @r31, align 4
  %v3_10005e3c = inttoptr i32 %v2_10005e3c to i16*
  store i16 %v1_10005e3c, i16* %v3_10005e3c, align 2
  %v0_10005e40 = load i32, i32* @r27, align 4
  %v1_10005e40 = load i32, i32* @r28, align 4
  %v2_10005e40 = inttoptr i32 %v1_10005e40 to i32*
  store i32 %v0_10005e40, i32* %v2_10005e40, align 4
  %v0_10005e44 = load i32, i32* @r31, align 4
  %v1_10005e44 = add i32 %v0_10005e44, 8
  %v2_10005e44 = inttoptr i32 %v1_10005e44 to i32*
  %v3_10005e44 = load i32, i32* %v2_10005e44, align 4
  store i32 %v3_10005e44, i32* %r0.global-to-local, align 4
  %v3_10005e48 = icmp eq i32 %v3_10005e44, 0
  br i1 %v3_10005e48, label %dec_label_pc_10005e50, label %dec_label_pc_10005e80

dec_label_pc_10005e50:                            ; preds = %dec_label_pc_10005dec
  store i32 268459608, i32* @lr, align 4
  %v1_10005e54 = call i32 @malloc(i32 4096)
  %v3_10005e58 = icmp eq i32 %v1_10005e54, 0
  %v1_10005e5c = load i32, i32* @r31, align 4
  %v2_10005e5c = add i32 %v1_10005e5c, 8
  %v3_10005e5c = inttoptr i32 %v2_10005e5c to i32*
  store i32 %v1_10005e54, i32* %v3_10005e5c, align 4
  %v1_10005e7c = load i32, i32* @r31, align 4
  br i1 %v3_10005e58, label %dec_label_pc_10005e7c, label %dec_label_pc_10005e64

dec_label_pc_10005e64:                            ; preds = %dec_label_pc_10005e50
  %v1_10005e64 = inttoptr i32 %v1_10005e7c to i16*
  %v2_10005e64 = load i16, i16* %v1_10005e64, align 2
  %v3_10005e64 = zext i16 %v2_10005e64 to i32
  store i32 %v3_10005e64, i32* %r0.global-to-local, align 4
  %v1_10005e68 = add i32 %v1_10005e54, 4096
  store i32 %v1_10005e68, i32* %r9.global-to-local, align 4
  %v2_10005e6c = add i32 %v1_10005e7c, 12
  %v3_10005e6c = inttoptr i32 %v2_10005e6c to i32*
  store i32 %v1_10005e68, i32* %v3_10005e6c, align 4
  %v0_10005e70 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005e70 = or i32 %v0_10005e70, 16384
  store i32 %v1_10005e70, i32* %r0.global-to-local, align 4
  %v1_10005e74 = trunc i32 %v1_10005e70 to i16
  %v2_10005e74 = load i32, i32* @r31, align 4
  %v3_10005e74 = inttoptr i32 %v2_10005e74 to i16*
  store i16 %v1_10005e74, i16* %v3_10005e74, align 2
  br label %dec_label_pc_10005e80

dec_label_pc_10005e7c:                            ; preds = %dec_label_pc_10005e50
  %v2_10005e7c = add i32 %v1_10005e7c, 12
  %v3_10005e7c = inttoptr i32 %v2_10005e7c to i32*
  store i32 0, i32* %v3_10005e7c, align 4
  br label %dec_label_pc_10005e80

dec_label_pc_10005e80:                            ; preds = %dec_label_pc_10005dec, %dec_label_pc_10005e64, %dec_label_pc_10005e7c
  %v0_10005e80 = load i32, i32* @r31, align 4
  %v1_10005e80 = inttoptr i32 %v0_10005e80 to i16*
  %v2_10005e80 = load i16, i16* %v1_10005e80, align 2
  %v3_10005e80 = zext i16 %v2_10005e80 to i32
  store i32 %v3_10005e80, i32* %r0.global-to-local, align 4
  %v1_10005e84 = add i32 %v0_10005e80, 8
  %v2_10005e84 = inttoptr i32 %v1_10005e84 to i32*
  %v3_10005e84 = load i32, i32* %v2_10005e84, align 4
  store i32 %v3_10005e84, i32* %r9.global-to-local, align 4
  %v1_10005e88 = and i32 %v3_10005e80, 8192
  %v3_10005e88 = icmp eq i32 %v1_10005e88, 0
  store i1 %v3_10005e88, i1* %cr0_eq.global-to-local, align 1
  %v3_10005e90 = add i32 %v0_10005e80, 2
  %v4_10005e90 = inttoptr i32 %v3_10005e90 to i8*
  store i8 0, i8* %v4_10005e90, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005e98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e98 = load i32, i32* @r31, align 4
  %v2_10005e98 = add i32 %v1_10005e98, 20
  %v3_10005e98 = inttoptr i32 %v2_10005e98 to i32*
  store i32 %v0_10005e98, i32* %v3_10005e98, align 4
  %v0_10005e9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e9c = load i32, i32* @r31, align 4
  %v2_10005e9c = add i32 %v1_10005e9c, 24
  %v3_10005e9c = inttoptr i32 %v2_10005e9c to i32*
  store i32 %v0_10005e9c, i32* %v3_10005e9c, align 4
  %v0_10005ea0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005ea0 = load i32, i32* @r31, align 4
  %v2_10005ea0 = add i32 %v1_10005ea0, 28
  %v3_10005ea0 = inttoptr i32 %v2_10005ea0 to i32*
  store i32 %v0_10005ea0, i32* %v3_10005ea0, align 4
  %v0_10005ea4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005ea4 = load i32, i32* @r31, align 4
  %v2_10005ea4 = add i32 %v1_10005ea4, 16
  %v3_10005ea4 = inttoptr i32 %v2_10005ea4 to i32*
  store i32 %v0_10005ea4, i32* %v3_10005ea4, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_10005eac = load i32, i32* %r0.global-to-local, align 4
  %v1_10005eac = load i32, i32* @r31, align 4
  %v2_10005eac = add i32 %v1_10005eac, 44
  %v3_10005eac = inttoptr i32 %v2_10005eac to i32*
  store i32 %v0_10005eac, i32* %v3_10005eac, align 4
  %v3_10005eb0 = load i32, i32* @global_var_1001c388.134, align 4
  store i32 %v3_10005eb0, i32* %r0.global-to-local, align 4
  %v1_10005eb4 = load i32, i32* @r31, align 4
  %v2_10005eb4 = add i32 %v1_10005eb4, 52
  %v3_10005eb4 = inttoptr i32 %v2_10005eb4 to i32*
  store i32 %v3_10005eb0, i32* %v3_10005eb4, align 4
  %v0_10005eb8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10005eb8, label %dec_label_pc_10005f3c, label %dec_label_pc_10005ebc

dec_label_pc_10005ebc:                            ; preds = %dec_label_pc_10005e80
  store i32 ptrtoint ([3 x i8]* @global_var_10004420.61 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c248.129 to i32), i32* %r29.global-to-local, align 4
  %v2_10005ecc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10005ecc, i32* @r26, align 4
  store i32 %v2_10005ecc, i32* @r3, align 4
  %v0_10005edc = call i32 @__pthread_return_void()
  %v2_10005ee8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10005ee8, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1001c230.135 to i32), i32* @r29, align 4
  %v0_10005ef0 = call i32 @__pthread_return_0()
  store i32 %v2_10005ee8, i32* @r3, align 4
  %v0_10005f00 = call i32 @__pthread_return_void()
  %v0_10005f08 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005f10 = load i32, i32* bitcast (i32** @global_var_1001c384.136 to i32*), align 4
  store i32 %v3_10005f10, i32* %r0.global-to-local, align 4
  store i32 %v2_10005ee8, i32* @r3, align 4
  %v1_10005f1c = load i32, i32* @r31, align 4
  %v2_10005f1c = add i32 %v1_10005f1c, 32
  %v3_10005f1c = inttoptr i32 %v2_10005f1c to i32*
  store i32 %v3_10005f10, i32* %v3_10005f1c, align 4
  %v0_10005f20 = load i32, i32* @r31, align 4
  store i32 %v0_10005f20, i32* bitcast (i32** @global_var_1001c384.136 to i32*), align 4
  %v0_10005f24 = call i32 @__pthread_return_void()
  store i32 %v2_10005ecc, i32* @r3, align 4
  %v0_10005f30 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10005f3c

dec_label_pc_10005f38:                            ; preds = %dec_label_pc_10005cec, %dec_label_pc_10005cd8, %dec_label_pc_10005cf8
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10005f3c

dec_label_pc_10005f3c:                            ; preds = %dec_label_pc_10005e80, %dec_label_pc_10005d38, %dec_label_pc_10005ebc, %dec_label_pc_10005f38
  store i32 %v0_10005c98, i32* %r0.global-to-local, align 4
  %v0_10005f40 = load i32, i32* @r31, align 4
  ret i32 %v0_10005f40

; uselistorder directives
  uselistorder i32 %v1_10005e7c, { 2, 0, 1 }
  uselistorder i32 %v1_10005e54, { 1, 0, 2 }
  uselistorder i32 %v0_10005df0, { 1, 0 }
  uselistorder i32 %v1_10005d3c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10005d28, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 4096, { 5, 1, 0, 2, 3, 4, 6 }
  uselistorder i32 (i32, i32)* @__libc_open, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 5, 0, 4, 3, 2, 1 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10005f3c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10005f38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005e80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005dcc, { 1, 0 }
  uselistorder label %dec_label_pc_10005d60, { 1, 0 }
  uselistorder label %dec_label_pc_10005d30, { 1, 0 }
  uselistorder label %dec_label_pc_10005d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10005d08, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268566528, i32* @r28, align 4
  %v0_10005f68 = call i32 @__errno_location()
  store i32 %v0_10005f68, i32* @r26, align 4
  %v1_10005f74 = inttoptr i32 %v0_10005f68 to i32*
  %v2_10005f74 = load i32, i32* %v1_10005f74, align 4
  store i32 %v2_10005f74, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1001c260.26 to i32), i32* @r27, align 4
  %v3_10005f7c = load i16, i16* @global_var_1001c260.26, align 2
  %v4_10005f7c = zext i16 %v3_10005f7c to i32
  store i32 %v4_10005f7c, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005f84.138 to i32), i32* @lr, align 4
  %v1_10005f80 = call i32 @isatty(i32 0)
  %v1_10005f84 = sub i32 1, %v1_10005f80
  %v1_10005f88 = mul i32 %v1_10005f84, 256
  %v0_10005f8c = load i32, i32* @r29, align 4
  %v2_10005f8c = xor i32 %v1_10005f88, %v0_10005f8c
  %v1_10005f94 = trunc i32 %v2_10005f8c to i16
  store i16 %v1_10005f94, i16* @global_var_1001c260.26, align 2
  %v3_10005f98 = load i16, i16* @global_var_1001c2b0.27, align 2
  %v4_10005f98 = zext i16 %v3_10005f98 to i32
  store i32 %v4_10005f98, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005fa0.139 to i32), i32* @lr, align 4
  %v1_10005f9c = call i32 @isatty(i32 1)
  %v1_10005fa0 = sub i32 1, %v1_10005f9c
  %v1_10005fa4 = mul i32 %v1_10005fa0, 256
  %v0_10005fa8 = load i32, i32* @r29, align 4
  %v2_10005fa8 = xor i32 %v1_10005fa4, %v0_10005fa8
  %v1_10005fac = trunc i32 %v2_10005fa8 to i16
  store i16 %v1_10005fac, i16* @global_var_1001c2b0.27, align 2
  %v0_10005fb0 = load i32, i32* @r25, align 4
  %v1_10005fb0 = load i32, i32* @r26, align 4
  %v2_10005fb0 = inttoptr i32 %v1_10005fb0 to i32*
  store i32 %v0_10005fb0, i32* %v2_10005fb0, align 4
  ret i32 %v1_10005fa4

; uselistorder directives
  uselistorder i32 %v1_10005fa4, { 1, 0 }
  uselistorder i16* @global_var_1001c2b0.27, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000ac4c.140 to i32), i32* @r4, align 4
  %v0_10005fd4 = call i32 @memcpy()
  ret i32 %v0_10005fd4
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c230.135 to i32), i32* @r3, align 4
  store i32 268460020, i32* @lr, align 4
  %v0_10005ff0 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1001c248.129 to i32), i32* @r3, align 4
  store i32 268460032, i32* @lr, align 4
  %v0_10005ffc = call i32 @__stdio_init_mutex()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1001c384.136 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100060489 = icmp eq i32 %storemerge6, 0
  %v1_1000604c11 = add i32 %storemerge6, 56
  store i32 %v1_1000604c11, i32* %r30.global-to-local, align 4
  br i1 %v3_100060489, label %dec_label_pc_10006058, label %dec_label_pc_1000600c

dec_label_pc_1000600c:                            ; preds = %entry, %dec_label_pc_10006038
  %v0_1000600c = call i32 @__pthread_return_0()
  %v3_10006010 = icmp eq i32 %v0_1000600c, 0
  %v0_10006014 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10006014, i32* @r3, align 4
  br i1 %v3_10006010, label %dec_label_pc_10006038, label %dec_label_pc_1000601c

dec_label_pc_1000601c:                            ; preds = %dec_label_pc_1000600c
  %v0_1000601c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000601c = add i32 %v0_1000601c, 8
  %v2_1000601c = inttoptr i32 %v1_1000601c to i32*
  %v3_1000601c = load i32, i32* %v2_1000601c, align 4
  store i32 %v3_1000601c, i32* %r9.global-to-local, align 4
  %v3_10006024 = inttoptr i32 %v0_1000601c to i16*
  store i16 48, i16* %v3_10006024, align 2
  %v0_10006028 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006028 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006028 = add i32 %v1_10006028, 20
  %v3_10006028 = inttoptr i32 %v2_10006028 to i32*
  store i32 %v0_10006028, i32* %v3_10006028, align 4
  %v0_1000602c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000602c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000602c = add i32 %v1_1000602c, 24
  %v3_1000602c = inttoptr i32 %v2_1000602c to i32*
  store i32 %v0_1000602c, i32* %v3_1000602c, align 4
  %v0_10006030 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006030 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006030 = add i32 %v1_10006030, 28
  %v3_10006030 = inttoptr i32 %v2_10006030 to i32*
  store i32 %v0_10006030, i32* %v3_10006030, align 4
  %v0_10006034 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006034 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006034 = add i32 %v1_10006034, 16
  %v3_10006034 = inttoptr i32 %v2_10006034 to i32*
  store i32 %v0_10006034, i32* %v3_10006034, align 4
  br label %dec_label_pc_10006038

dec_label_pc_10006038:                            ; preds = %dec_label_pc_1000600c, %dec_label_pc_1000601c
  %v1_1000603c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000603c = add i32 %v1_1000603c, 52
  %v3_1000603c = inttoptr i32 %v2_1000603c to i32*
  store i32 1, i32* %v3_1000603c, align 4
  store i32 268460100, i32* @lr, align 4
  %v0_10006040 = call i32 @__stdio_init_mutex()
  %v0_10006044 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006044 = add i32 %v0_10006044, 32
  %v2_10006044 = inttoptr i32 %v1_10006044 to i32*
  %storemerge = load i32, i32* %v2_10006044, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10006048 = icmp eq i32 %storemerge, 0
  %v1_1000604c = add i32 %storemerge, 56
  store i32 %v1_1000604c, i32* %r30.global-to-local, align 4
  br i1 %v3_10006048, label %dec_label_pc_10006048.dec_label_pc_10006058_crit_edge, label %dec_label_pc_1000600c

dec_label_pc_10006048.dec_label_pc_10006058_crit_edge: ; preds = %dec_label_pc_10006038
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1001c384.136 to i32*), align 4
  br label %dec_label_pc_10006058

dec_label_pc_10006058:                            ; preds = %dec_label_pc_10006048.dec_label_pc_10006058_crit_edge, %entry
  %v0_1000609416 = phi i32 [ %v1_1000604c, %dec_label_pc_10006048.dec_label_pc_10006058_crit_edge ], [ %v1_1000604c11, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_10006048.dec_label_pc_10006058_crit_edge ], [ 0, %entry ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000607c5 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000607c5, label %dec_label_pc_10006084, label %dec_label_pc_10006064

dec_label_pc_10006064:                            ; preds = %dec_label_pc_10006058, %dec_label_pc_10006078
  %v0_10006064 = phi i32 [ %storemerge1, %dec_label_pc_10006078 ], [ %storemerge12, %dec_label_pc_10006058 ]
  %v1_10006064 = inttoptr i32 %v0_10006064 to i16*
  %v2_10006064 = load i16, i16* %v1_10006064, align 2
  %v3_10006064 = zext i16 %v2_10006064 to i32
  store i32 %v0_10006064, i32* @r3, align 4
  %v1_1000606c = and i32 %v3_10006064, 64
  store i32 %v1_1000606c, i32* %r9.global-to-local, align 4
  %v3_1000606c = icmp eq i32 %v1_1000606c, 0
  br i1 %v3_1000606c, label %dec_label_pc_10006078, label %dec_label_pc_10006074

dec_label_pc_10006074:                            ; preds = %dec_label_pc_10006064
  store i32 268460152, i32* @lr, align 4
  %v0_10006074 = call i32 @__stdio_wcommit()
  %v0_10006078.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006078

dec_label_pc_10006078:                            ; preds = %dec_label_pc_10006064, %dec_label_pc_10006074
  %v0_10006078 = phi i32 [ %v0_10006064, %dec_label_pc_10006064 ], [ %v0_10006078.pre, %dec_label_pc_10006074 ]
  %v0_1000609417 = phi i32 [ %v0_10006064, %dec_label_pc_10006064 ], [ %v0_10006074, %dec_label_pc_10006074 ]
  %v1_10006078 = add i32 %v0_10006078, 32
  %v2_10006078 = inttoptr i32 %v1_10006078 to i32*
  %storemerge1 = load i32, i32* %v2_10006078, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000607c = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000607c, label %dec_label_pc_10006084, label %dec_label_pc_10006064

dec_label_pc_10006084:                            ; preds = %dec_label_pc_10006078, %dec_label_pc_10006058
  %v0_10006094 = phi i32 [ %v0_1000609416, %dec_label_pc_10006058 ], [ %v0_1000609417, %dec_label_pc_10006078 ]
  ret i32 %v0_10006094

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_10006064, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006078, { 1, 0 }
  uselistorder label %dec_label_pc_10006064, { 1, 0 }
  uselistorder label %dec_label_pc_10006038, { 1, 0 }
  uselistorder label %dec_label_pc_1000600c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_100060a0 = load i32, i32* @r31, align 4
  %v0_100060a4 = load i32, i32* @r3, align 4
  %v1_100060ac = add i32 %v0_100060a4, 8
  %v2_100060ac = inttoptr i32 %v1_100060ac to i32*
  %v3_100060ac = load i32, i32* %v2_100060ac, align 4
  %v1_100060b0 = add i32 %v0_100060a4, 16
  %v2_100060b0 = inttoptr i32 %v1_100060b0 to i32*
  %v3_100060b0 = load i32, i32* %v2_100060b0, align 4
  %v2_100060b8 = sub i32 %v3_100060b0, %v3_100060ac
  store i32 %v2_100060b8, i32* @r5, align 4
  %v5_100060b8 = icmp eq i32 %v2_100060b8, 0
  br i1 %v5_100060b8, label %dec_label_pc_100060c8, label %dec_label_pc_100060c0

dec_label_pc_100060c0:                            ; preds = %entry
  store i32 %v3_100060ac, i32* %v2_100060b0, align 4
  store i32 268460232, i32* @lr, align 4
  %v2_100060c4 = inttoptr i32 %v3_100060ac to i16*
  %v3_100060c4 = call i32 @__stdio_WRITE(i16* %v2_100060c4, i32 %v2_100060b8)
  %v0_100060c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100060c8

dec_label_pc_100060c8:                            ; preds = %entry, %dec_label_pc_100060c0
  %v0_100060c8 = phi i32 [ %v0_100060a4, %entry ], [ %v0_100060c8.pre, %dec_label_pc_100060c0 ]
  %v1_100060c8 = add i32 %v0_100060c8, 8
  %v2_100060c8 = inttoptr i32 %v1_100060c8 to i32*
  %v3_100060c8 = load i32, i32* %v2_100060c8, align 4
  %v1_100060cc = add i32 %v0_100060c8, 16
  %v2_100060cc = inttoptr i32 %v1_100060cc to i32*
  %v3_100060cc = load i32, i32* %v2_100060cc, align 4
  store i32 %v0_100060a0, i32* @r31, align 4
  %v2_100060d4 = sub i32 %v3_100060cc, %v3_100060c8
  ret i32 %v2_100060d4

; uselistorder directives
  uselistorder i32 %v0_100060c8, { 1, 0 }
  uselistorder i32 %v3_100060ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100060c8, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100060f0 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_100060f0, i32* %r28.global-to-local, align 4
  %v1_10006114 = add i32 %arg3, 52
  %v2_10006114 = inttoptr i32 %v1_10006114 to i32*
  %v3_10006114 = load i32, i32* %v2_10006114, align 4
  %v2_10006118 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006118, i32* @r3, align 4
  %v3_10006124 = icmp eq i32 %v3_10006114, 0
  store i1 %v3_10006124, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10006124, label %dec_label_pc_1000612c, label %dec_label_pc_10006138

dec_label_pc_1000612c:                            ; preds = %entry
  %v0_1000612c = call i32 @__pthread_return_void()
  %v0_10006134 = call i32 @__pthread_return_0()
  %v0_10006138.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000613c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006140.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006138

dec_label_pc_10006138:                            ; preds = %entry, %dec_label_pc_1000612c
  %v0_10006140 = phi i32 [ %v0_100060f0, %entry ], [ %v0_10006140.pre, %dec_label_pc_1000612c ]
  %v0_1000613c = phi i32 [ %arg3, %entry ], [ %v0_1000613c.pre, %dec_label_pc_1000612c ]
  %v0_10006138 = phi i32 [ %arg2, %entry ], [ %v0_10006138.pre, %dec_label_pc_1000612c ]
  store i32 268460360, i32* @lr, align 4
  %v3_10006144 = inttoptr i32 %v0_10006140 to i8*
  %v4_10006144 = call i32 @__GI_fgets_unlocked(i8* %v3_10006144, i32 %v0_10006138, i32 %v0_1000613c)
  store i32 %v4_10006144, i32* @r31, align 4
  store i32 %v2_10006118, i32* @r3, align 4
  %v0_10006154 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10006154, label %dec_label_pc_10006158, label %dec_label_pc_1000615c

dec_label_pc_10006158:                            ; preds = %dec_label_pc_10006138
  %v0_10006158 = call i32 @__pthread_return_void()
  %v0_10006160.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000615c

dec_label_pc_1000615c:                            ; preds = %dec_label_pc_10006138, %dec_label_pc_10006158
  %v0_10006160 = phi i32 [ %v4_10006144, %dec_label_pc_10006138 ], [ %v0_10006160.pre, %dec_label_pc_10006158 ]
  %v1_10006170 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100060f0)
  %v9_10006170 = extractvalue %0 %v1_10006170, 7
  store i4 %v9_10006170, i4* @cr4, align 1
  ret i32 %v0_10006160

; uselistorder directives
  uselistorder i32 %v0_100060f0, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000615c, { 1, 0 }
  uselistorder label %dec_label_pc_10006138, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004420.61 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1001c248.129 to i32), i32* @r29, align 4
  %v2_100061a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100061a0, i32* @r3, align 4
  %v0_100061a8 = call i32 @__pthread_return_void()
  %v0_100061b0 = call i32 @__pthread_return_0()
  %v3_100061b8 = load i32, i32* @global_var_1001c404.130, align 4
  %v3_100061bc = icmp eq i32 %v3_100061b8, 1
  br i1 %v3_100061bc, label %dec_label_pc_100061c4, label %dec_label_pc_1000626c

dec_label_pc_100061c4:                            ; preds = %entry
  %v3_100061c8 = load i32, i32* @global_var_1001c408.131, align 4
  %tmp7 = icmp slt i32 %v3_100061c8, 1
  br i1 %tmp7, label %dec_label_pc_1000626c, label %dec_label_pc_100061d4

dec_label_pc_100061d4:                            ; preds = %dec_label_pc_100061c4
  %v2_100061e0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100061e0, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_100061ec = call i32 @__pthread_return_void()
  %v0_100061f4 = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_1001c384.136 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000624c11 = icmp eq i32 %storemerge8, 0
  %v0_1000625012 = load i32, i32* @r30, align 4
  br i1 %v3_1000624c11, label %dec_label_pc_10006258, label %dec_label_pc_10006204

dec_label_pc_10006204:                            ; preds = %dec_label_pc_100061d4, %dec_label_pc_1000624c.backedge
  %v0_1000625017 = phi i32 [ %v0_10006250, %dec_label_pc_1000624c.backedge ], [ %v0_1000625012, %dec_label_pc_100061d4 ]
  %v3_1000625018.in = phi i32 [ %v0_10006250, %dec_label_pc_1000624c.backedge ], [ %v0_1000625012, %dec_label_pc_100061d4 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_1000624c.backedge ], [ %storemerge8, %dec_label_pc_100061d4 ]
  %v1_10006204 = inttoptr i32 %storemerge16 to i16*
  %v2_10006204 = load i16, i16* %v1_10006204, align 2
  %v1_10006208 = add i32 %storemerge16, 32
  %v2_10006208 = inttoptr i32 %v1_10006208 to i32*
  %v3_10006208 = load i32, i32* %v2_10006208, align 4
  store i32 %v3_10006208, i32* @r31, align 4
  %v1_1000620c = and i16 %v2_10006204, -32720
  %v3_10006210 = icmp eq i16 %v1_1000620c, 48
  br i1 %v3_10006210, label %dec_label_pc_10006220, label %dec_label_pc_10006218

dec_label_pc_10006218:                            ; preds = %dec_label_pc_10006204
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_1000624c.backedge

dec_label_pc_10006220:                            ; preds = %dec_label_pc_10006204
  %v3_1000625018 = icmp eq i32 %v3_1000625018.in, 0
  br i1 %v3_1000625018, label %dec_label_pc_10006224, label %dec_label_pc_10006230

dec_label_pc_10006224:                            ; preds = %dec_label_pc_10006220
  store i32 %v3_10006208, i32* bitcast (i32** @global_var_1001c384.136 to i32*), align 4
  br label %dec_label_pc_10006234

dec_label_pc_10006230:                            ; preds = %dec_label_pc_10006220
  %v2_10006230 = add i32 %v0_1000625017, 32
  %v3_10006230 = inttoptr i32 %v2_10006230 to i32*
  store i32 %v3_10006208, i32* %v3_10006230, align 4
  %v0_10006234.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006234

dec_label_pc_10006234:                            ; preds = %dec_label_pc_10006224, %dec_label_pc_10006230
  %v0_10006234 = phi i32 [ %storemerge16, %dec_label_pc_10006224 ], [ %v0_10006234.pre, %dec_label_pc_10006230 ]
  %v1_10006234 = inttoptr i32 %v0_10006234 to i16*
  %v2_10006234 = load i16, i16* %v1_10006234, align 2
  %v1_1000623c = and i16 %v2_10006234, 8192
  %v3_1000623c = icmp eq i16 %v1_1000623c, 0
  br i1 %v3_1000623c, label %dec_label_pc_1000624c.backedge, label %dec_label_pc_10006244

dec_label_pc_1000624c.backedge:                   ; preds = %dec_label_pc_10006234, %dec_label_pc_10006218, %dec_label_pc_10006244
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1000624c = icmp eq i32 %storemerge, 0
  %v0_10006250 = load i32, i32* @r30, align 4
  br i1 %v3_1000624c, label %dec_label_pc_10006258, label %dec_label_pc_10006204

dec_label_pc_10006244:                            ; preds = %dec_label_pc_10006234
  store i32 268460616, i32* @lr, align 4
  %v2_10006244 = call i32 @free(i32 %v0_10006234)
  br label %dec_label_pc_1000624c.backedge

dec_label_pc_10006258:                            ; preds = %dec_label_pc_1000624c.backedge, %dec_label_pc_100061d4
  store i32 %v2_100061e0, i32* @r3, align 4
  %v0_10006260 = call i32 @__pthread_return_void()
  %v0_10006268 = load i32, i32* @r29, align 4
  store i32 %v0_10006268, i32* @global_var_1001c408.131, align 4
  %v3_10006274.pre = load i32, i32* @global_var_1001c404.130, align 4
  br label %dec_label_pc_1000626c

dec_label_pc_1000626c:                            ; preds = %entry, %dec_label_pc_100061c4, %dec_label_pc_10006258
  %v3_10006274 = phi i32 [ %v3_100061b8, %entry ], [ 1, %dec_label_pc_100061c4 ], [ %v3_10006274.pre, %dec_label_pc_10006258 ]
  store i32 %v2_100061a0, i32* @r3, align 4
  %v1_1000627c = add i32 %v3_10006274, -1
  store i32 %v1_1000627c, i32* @global_var_1001c404.130, align 4
  %v0_10006284 = call i32 @__pthread_return_void()
  ret i32 %v0_10006284

; uselistorder directives
  uselistorder i32 %v0_10006250, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10006234, { 1, 0 }
  uselistorder i32 %v3_10006208, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 19, 18, 1, 0 }
  uselistorder label %dec_label_pc_1000626c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000624c.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006234, { 1, 0 }
  uselistorder label %dec_label_pc_10006204, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1001c384.136 to i32), i32* %r9.global-to-local, align 4
  %v5_100062ac = icmp eq i16* %arg1, bitcast (i32** @global_var_1001c384.136 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_100062ac, label %dec_label_pc_100062d0, label %dec_label_pc_100062c4

dec_label_pc_100062c4:                            ; preds = %entry
  %v4_100062c4 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_100062c4, label %dec_label_pc_100062d0, label %dec_label_pc_100063fc

dec_label_pc_100062d0:                            ; preds = %dec_label_pc_100062c4, %entry
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004420.61 to i32), i32* @r30, align 4
  %v2_100062dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100062dc, i32* @r3, align 4
  %v0_100062f0 = call i32 @__pthread_return_void()
  %v0_100062f8 = call i32 @__pthread_return_0()
  %v3_10006300 = load i32, i32* @global_var_1001c404.130, align 4
  store i32 %v2_100062dc, i32* @r3, align 4
  %v1_10006310 = add i32 %v3_10006300, 1
  store i32 %v1_10006310, i32* %r9.global-to-local, align 4
  store i32 %v1_10006310, i32* @global_var_1001c404.130, align 4
  %v0_1000631c = call i32 @__pthread_return_void()
  store i32 %v2_100062dc, i32* @r3, align 4
  %v0_1000632c = call i32 @__pthread_return_void()
  %v0_10006334 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_100062dc, i32* @r3, align 4
  %v3_10006340 = load i32, i32* bitcast (i32** @global_var_1001c384.136 to i32*), align 4
  store i32 %v3_10006340, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_1000634c = call i32 @__pthread_return_void()
  %v0_100063ec.pr = load i32, i32* @r31, align 4
  %v3_100063ec3 = icmp eq i32 %v0_100063ec.pr, 0
  br i1 %v3_100063ec3, label %dec_label_pc_100063f4, label %dec_label_pc_10006354

dec_label_pc_10006354:                            ; preds = %dec_label_pc_100062d0, %dec_label_pc_100063e8
  %v0_10006370 = phi i32 [ %v3_100063e8, %dec_label_pc_100063e8 ], [ %v0_100063ec.pr, %dec_label_pc_100062d0 ]
  %v1_10006354 = inttoptr i32 %v0_10006370 to i16*
  %v2_10006354 = load i16, i16* %v1_10006354, align 2
  %v3_10006354 = zext i16 %v2_10006354 to i32
  %v1_10006358 = and i32 %v3_10006354, 64
  store i32 %v1_10006358, i32* %r9.global-to-local, align 4
  %v3_10006358 = icmp eq i32 %v1_10006358, 0
  br i1 %v3_10006358, label %dec_label_pc_100063e8, label %dec_label_pc_10006360

dec_label_pc_10006360:                            ; preds = %dec_label_pc_10006354
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006364 = load i32, i32* @global_var_1001c388.134, align 4
  %v3_10006368 = icmp eq i32 %v3_10006364, 2
  br i1 %v3_10006368, label %dec_label_pc_1000638c, label %dec_label_pc_10006370

dec_label_pc_10006370:                            ; preds = %dec_label_pc_10006360
  store i32 %v2_100062dc, i32* @r3, align 4
  %v0_10006380 = call i32 @__pthread_return_void()
  %v0_10006388 = call i32 @__pthread_return_0()
  %v0_1000638c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000638c

dec_label_pc_1000638c:                            ; preds = %dec_label_pc_10006360, %dec_label_pc_10006370
  %v0_100063a0 = phi i32 [ %v0_10006370, %dec_label_pc_10006360 ], [ %v0_1000638c.pre, %dec_label_pc_10006370 ]
  %v1_1000638c = inttoptr i32 %v0_100063a0 to i16*
  %v2_1000638c = load i16, i16* %v1_1000638c, align 2
  %v3_1000638c = zext i16 %v2_1000638c to i32
  %v0_10006390 = load i32, i32* @r27, align 4
  %v2_10006390 = or i32 %v0_10006390, %v3_1000638c
  %v1_10006394 = and i32 %v2_10006390, 832
  %v1_10006398 = xor i32 %v1_10006394, 320
  store i32 %v1_10006398, i32* %r9.global-to-local, align 4
  %v3_10006398 = icmp eq i32 %v1_10006398, 0
  br i1 %v3_10006398, label %dec_label_pc_100063a0, label %dec_label_pc_100063cc

dec_label_pc_100063a0:                            ; preds = %dec_label_pc_1000638c
  store i32 %v0_100063a0, i32* @r3, align 4
  store i32 268460968, i32* @lr, align 4
  %v0_100063a4 = call i32 @__stdio_wcommit()
  %v3_100063a8 = icmp eq i32 %v0_100063a4, 0
  br i1 %v3_100063a8, label %dec_label_pc_100063b8, label %dec_label_pc_100063b0

dec_label_pc_100063b0:                            ; preds = %dec_label_pc_100063a0
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_100063cc

dec_label_pc_100063b8:                            ; preds = %dec_label_pc_100063a0
  %v0_100063b8 = load i32, i32* @r31, align 4
  %v1_100063b8 = inttoptr i32 %v0_100063b8 to i16*
  %v2_100063b8 = load i16, i16* %v1_100063b8, align 2
  %v3_100063b8 = zext i16 %v2_100063b8 to i32
  %v1_100063bc = add i32 %v0_100063b8, 8
  %v2_100063bc = inttoptr i32 %v1_100063bc to i32*
  %v3_100063bc = load i32, i32* %v2_100063bc, align 4
  store i32 %v3_100063bc, i32* %r9.global-to-local, align 4
  %v1_100063c0 = call i32 @__asm_rlwinm(i32 %v3_100063b8, i32 0, i32 26, i32 24)
  %v2_100063c0 = trunc i32 %v1_100063c0 to i16
  %v1_100063c4 = load i32, i32* @r31, align 4
  %v2_100063c4 = add i32 %v1_100063c4, 28
  %v3_100063c4 = inttoptr i32 %v2_100063c4 to i32*
  store i32 %v3_100063bc, i32* %v3_100063c4, align 4
  %v3_100063c8 = load i32, i32* @r31, align 4
  %v4_100063c8 = inttoptr i32 %v3_100063c8 to i16*
  store i16 %v2_100063c0, i16* %v4_100063c8, align 2
  br label %dec_label_pc_100063cc

dec_label_pc_100063cc:                            ; preds = %dec_label_pc_1000638c, %dec_label_pc_100063b0, %dec_label_pc_100063b8
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100063d0 = load i32, i32* @global_var_1001c388.134, align 4
  %v3_100063d4 = icmp eq i32 %v3_100063d0, 2
  br i1 %v3_100063d4, label %dec_label_pc_100063e8, label %dec_label_pc_100063dc

dec_label_pc_100063dc:                            ; preds = %dec_label_pc_100063cc
  store i32 %v2_100062dc, i32* @r3, align 4
  %v0_100063e4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100063e8

dec_label_pc_100063e8:                            ; preds = %dec_label_pc_100063cc, %dec_label_pc_10006354, %dec_label_pc_100063dc
  %v0_100063e8 = load i32, i32* @r31, align 4
  %v1_100063e8 = add i32 %v0_100063e8, 32
  %v2_100063e8 = inttoptr i32 %v1_100063e8 to i32*
  %v3_100063e8 = load i32, i32* %v2_100063e8, align 4
  store i32 %v3_100063e8, i32* @r31, align 4
  %v3_100063ec = icmp eq i32 %v3_100063e8, 0
  br i1 %v3_100063ec, label %dec_label_pc_100063f4, label %dec_label_pc_10006354

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_100063e8, %dec_label_pc_100062d0
  store i32 ptrtoint (i32* @global_var_100063f8.142 to i32), i32* @lr, align 4
  %v0_100063f4 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_10006434

dec_label_pc_100063fc:                            ; preds = %dec_label_pc_100062c4
  %v3_100063fc = load i16, i16* %arg1, align 2
  %v4_100063fc = zext i16 %v3_100063fc to i32
  store i32 0, i32* @r28, align 4
  %v1_10006404 = and i32 %v4_100063fc, 64
  store i32 %v1_10006404, i32* %r9.global-to-local, align 4
  %v3_10006404 = icmp eq i32 %v1_10006404, 0
  br i1 %v3_10006404, label %dec_label_pc_10006434, label %dec_label_pc_1000640c

dec_label_pc_1000640c:                            ; preds = %dec_label_pc_100063fc
  store i32 268461072, i32* @lr, align 4
  %v0_1000640c = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_10006414 = icmp eq i32 %v0_1000640c, 0
  br i1 %v3_10006414, label %dec_label_pc_1000641c, label %dec_label_pc_10006434

dec_label_pc_1000641c:                            ; preds = %dec_label_pc_1000640c
  %v0_1000641c = load i32, i32* @r29, align 4
  %v1_1000641c = inttoptr i32 %v0_1000641c to i16*
  %v2_1000641c = load i16, i16* %v1_1000641c, align 2
  %v3_1000641c = zext i16 %v2_1000641c to i32
  store i32 0, i32* @r28, align 4
  %v1_10006424 = add i32 %v0_1000641c, 8
  %v2_10006424 = inttoptr i32 %v1_10006424 to i32*
  %v3_10006424 = load i32, i32* %v2_10006424, align 4
  store i32 %v3_10006424, i32* %r9.global-to-local, align 4
  %v1_10006428 = call i32 @__asm_rlwinm(i32 %v3_1000641c, i32 0, i32 26, i32 24)
  %v2_10006428 = trunc i32 %v1_10006428 to i16
  %v3_1000642c = load i32, i32* @r29, align 4
  %v4_1000642c = inttoptr i32 %v3_1000642c to i16*
  store i16 %v2_10006428, i16* %v4_1000642c, align 2
  %v0_10006430 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006430 = load i32, i32* @r29, align 4
  %v2_10006430 = add i32 %v1_10006430, 28
  %v3_10006430 = inttoptr i32 %v2_10006430 to i32*
  store i32 %v0_10006430, i32* %v3_10006430, align 4
  br label %dec_label_pc_10006434

dec_label_pc_10006434:                            ; preds = %dec_label_pc_1000640c, %dec_label_pc_100063fc, %dec_label_pc_100063f4, %dec_label_pc_1000641c
  %v0_10006438 = load i32, i32* @r28, align 4
  ret i32 %v0_10006438

; uselistorder directives
  uselistorder i32 %v3_100063e8, { 1, 2, 0 }
  uselistorder i32 %v1_10006398, { 1, 0 }
  uselistorder i32 %v2_100062dc, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1001c384.136 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_1001c404.130, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10006434, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100063e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100063cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000638c, { 1, 0 }
  uselistorder label %dec_label_pc_10006354, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_100064f4, label %dec_label_pc_1000646c

dec_label_pc_1000646c:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_100064d43 = add i32 %arg2, -1
  store i32 %v2_100064d43, i32* @r29, align 4
  %v4_100064dc9 = icmp eq i32 %arg2, 1
  br i1 %v4_100064dc9, label %dec_label_pc_100064e0, label %dec_label_pc_10006474

dec_label_pc_10006474:                            ; preds = %dec_label_pc_1000646c, %dec_label_pc_100064d4.backedge
  %v2_10006490 = phi i32 [ %v2_1000649012, %dec_label_pc_100064d4.backedge ], [ %tmp, %dec_label_pc_1000646c ]
  %v0_10006474 = phi i32 [ %v0_100064d8, %dec_label_pc_100064d4.backedge ], [ %arg3, %dec_label_pc_1000646c ]
  %v1_10006474 = add i32 %v0_10006474, 16
  %v2_10006474 = inttoptr i32 %v1_10006474 to i32*
  %v3_10006474 = load i32, i32* %v2_10006474, align 4
  %v1_10006478 = add i32 %v0_10006474, 24
  %v2_10006478 = inttoptr i32 %v1_10006478 to i32*
  %v3_10006478 = load i32, i32* %v2_10006478, align 4
  %v2_1000647c = add i32 %v3_10006474, 1
  store i32 %v2_1000647c, i32* %r11.global-to-local, align 4
  %v3_10006480 = icmp ult i32 %v3_10006474, %v3_10006478
  %v5_10006480 = icmp eq i32 %v3_10006474, %v3_10006478
  store i1 %v5_10006480, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006480, label %dec_label_pc_10006488, label %dec_label_pc_100064a4

dec_label_pc_10006488:                            ; preds = %dec_label_pc_10006474
  %v4_10006474 = inttoptr i32 %v3_10006474 to i8*
  %v3_10006488 = load i8, i8* %v4_10006474, align 1
  %v3_1000648c = icmp eq i8 %v3_10006488, 10
  store i1 %v3_1000648c, i1* %cr7_eq.global-to-local, align 1
  %v3_10006490 = inttoptr i32 %v2_10006490 to i8*
  store i8 %v3_10006488, i8* %v3_10006490, align 1
  %v0_10006494 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006494 = load i32, i32* @r30, align 4
  %v2_10006494 = add i32 %v1_10006494, 16
  %v3_10006494 = inttoptr i32 %v2_10006494 to i32*
  store i32 %v0_10006494, i32* %v3_10006494, align 4
  %v0_10006498 = load i32, i32* @r31, align 4
  %v1_10006498 = add i32 %v0_10006498, 1
  store i32 %v1_10006498, i32* @r31, align 4
  %v0_1000649c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000649c, label %dec_label_pc_100064e0, label %dec_label_pc_100064d4.backedge

dec_label_pc_100064a4:                            ; preds = %dec_label_pc_10006474
  %v1_100064d810 = inttoptr i32 %v0_10006474 to i16*
  store i32 268461224, i32* @lr, align 4
  %v5_100064a4 = call i32 @getc_unlocked(i16* %v1_100064d810, i32 %v3_10006474)
  %v6_100064a4 = trunc i32 %v5_100064a4 to i8
  %v4_100064a8 = icmp eq i8 %v6_100064a4, -1
  store i1 %v4_100064a8, i1* %cr7_eq.global-to-local, align 1
  %v3_100064b0 = icmp eq i8 %v6_100064a4, 10
  store i1 %v3_100064b0, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_100064a8, label %dec_label_pc_100064b8, label %dec_label_pc_100064c8

dec_label_pc_100064b8:                            ; preds = %dec_label_pc_100064a4
  %v0_100064b8 = load i32, i32* @r30, align 4
  %v1_100064b8 = inttoptr i32 %v0_100064b8 to i16*
  %v2_100064b8 = load i16, i16* %v1_100064b8, align 2
  %v1_100064bc = and i16 %v2_100064b8, 8
  %v3_100064bc = icmp eq i16 %v1_100064bc, 0
  br i1 %v3_100064bc, label %dec_label_pc_100064b8.dec_label_pc_100064e0_crit_edge, label %dec_label_pc_100064f4

dec_label_pc_100064b8.dec_label_pc_100064e0_crit_edge: ; preds = %dec_label_pc_100064b8
  %v0_100064e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100064e0

dec_label_pc_100064c8:                            ; preds = %dec_label_pc_100064a4
  %v3_100064c8 = load i32, i32* @r31, align 4
  %v4_100064c8 = inttoptr i32 %v3_100064c8 to i8*
  store i8 %v6_100064a4, i8* %v4_100064c8, align 1
  %v0_100064cc = load i32, i32* @r31, align 4
  %v1_100064cc = add i32 %v0_100064cc, 1
  store i32 %v1_100064cc, i32* @r31, align 4
  %v0_100064d0 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100064d0, label %dec_label_pc_100064e0, label %dec_label_pc_100064d4.backedge

dec_label_pc_100064d4.backedge:                   ; preds = %dec_label_pc_100064c8, %dec_label_pc_10006488
  %v2_1000649012 = phi i32 [ %v1_100064cc, %dec_label_pc_100064c8 ], [ %v1_10006498, %dec_label_pc_10006488 ]
  %v0_100064d4 = load i32, i32* @r29, align 4
  %v2_100064d4 = add i32 %v0_100064d4, -1
  store i32 %v2_100064d4, i32* @r29, align 4
  %v0_100064d8 = load i32, i32* @r30, align 4
  %v4_100064dc = icmp eq i32 %v0_100064d4, 1
  br i1 %v4_100064dc, label %dec_label_pc_100064e0, label %dec_label_pc_10006474

dec_label_pc_100064e0:                            ; preds = %dec_label_pc_100064c8, %dec_label_pc_100064d4.backedge, %dec_label_pc_10006488, %dec_label_pc_1000646c, %dec_label_pc_100064b8.dec_label_pc_100064e0_crit_edge
  %v2_100064ec = phi i32 [ %v0_100064e0.pre, %dec_label_pc_100064b8.dec_label_pc_100064e0_crit_edge ], [ %tmp, %dec_label_pc_1000646c ], [ %v1_10006498, %dec_label_pc_10006488 ], [ %v2_1000649012, %dec_label_pc_100064d4.backedge ], [ %v1_100064cc, %dec_label_pc_100064c8 ]
  %v1_100064e0 = load i32, i32* @r28, align 4
  %v3_100064e0 = icmp ugt i32 %v2_100064ec, %v1_100064e0
  %v4_100064e0 = icmp eq i32 %v2_100064ec, %v1_100064e0
  store i1 %v4_100064e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064e0, label %dec_label_pc_100064e8, label %dec_label_pc_100064f4

dec_label_pc_100064e8:                            ; preds = %dec_label_pc_100064e0
  %v3_100064ec = inttoptr i32 %v2_100064ec to i8*
  store i8 0, i8* %v3_100064ec, align 1
  %v0_100064fc.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100064f8

dec_label_pc_100064f4:                            ; preds = %dec_label_pc_100064b8, %dec_label_pc_100064e0, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100064f8

dec_label_pc_100064f8:                            ; preds = %dec_label_pc_100064e8, %dec_label_pc_100064f4
  %v0_100064fc = phi i32 [ %v0_100064fc.pre, %dec_label_pc_100064e8 ], [ 0, %dec_label_pc_100064f4 ]
  ret i32 %v0_100064fc

; uselistorder directives
  uselistorder i32 %v2_100064ec, { 0, 2, 1 }
  uselistorder i8 %v6_100064a4, { 1, 0, 2 }
  uselistorder i32 %v3_10006478, { 1, 0 }
  uselistorder i32 %v3_10006474, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10006474, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100064f8, { 1, 0 }
  uselistorder label %dec_label_pc_100064f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100064e0, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10006474, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10006510 = urem i32 %arg1, 256
  store i32 %v1_10006510, i32* %r4.global-to-local, align 4
  %v0_100065281 = load i32, i32* @r3, align 4
  %v1_100065282 = urem i32 %v0_100065281, 4
  %v3_100065284 = icmp eq i32 %v1_100065282, 0
  br i1 %v3_100065284, label %dec_label_pc_10006530, label %dec_label_pc_10006518

dec_label_pc_10006518:                            ; preds = %entry, %dec_label_pc_10006518
  %v1_1000651c = phi i32 [ %v0_10006530.pre, %dec_label_pc_10006518 ], [ %v1_10006510, %entry ]
  %v0_10006518 = phi i32 [ %v1_10006524, %dec_label_pc_10006518 ], [ %v0_100065281, %entry ]
  %v1_10006518 = inttoptr i32 %v0_10006518 to i8*
  %v2_10006518 = load i8, i8* %v1_10006518, align 1
  %v3_10006518 = zext i8 %v2_10006518 to i32
  %v4_1000651c = icmp eq i32 %v3_10006518, %v1_1000651c
  %v0_10006520 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000651c, i32 %v0_10006520)
  %v0_10006524 = load i32, i32* @r3, align 4
  %v1_10006524 = add i32 %v0_10006524, 1
  store i32 %v1_10006524, i32* @r3, align 4
  %v1_10006528 = urem i32 %v1_10006524, 4
  %v3_10006528 = icmp eq i32 %v1_10006528, 0
  %v0_10006530.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10006528, label %dec_label_pc_10006530, label %dec_label_pc_10006518

dec_label_pc_10006530:                            ; preds = %dec_label_pc_10006518, %entry
  %v0_100065489 = phi i32 [ %v0_100065281, %entry ], [ %v1_10006524, %dec_label_pc_10006518 ]
  %v0_10006530 = phi i32 [ %v1_10006510, %entry ], [ %v0_10006530.pre, %dec_label_pc_10006518 ]
  %v1_10006530 = mul i32 %v0_10006530, 256
  %v2_10006538 = or i32 %v1_10006530, %v0_10006530
  %v1_10006540 = mul i32 %v2_10006538, 65536
  %v2_10006544 = or i32 %v1_10006540, %v2_10006538
  br label %dec_label_pc_10006548

dec_label_pc_10006548:                            ; preds = %dec_label_pc_100065b4, %dec_label_pc_10006548, %dec_label_pc_10006530
  %v0_10006584 = phi i32 [ %v0_100065489, %dec_label_pc_10006530 ], [ %v1_1000654c, %dec_label_pc_10006548 ], [ %v1_1000654c, %dec_label_pc_100065b4 ]
  %v1_10006548 = inttoptr i32 %v0_10006584 to i32*
  %v2_10006548 = load i32, i32* %v1_10006548, align 4
  %v1_1000654c = add i32 %v0_10006584, 4
  %v1_10006550 = add i32 %v0_10006584, 2
  %v2_10006554 = xor i32 %v2_10006548, %v2_10006544
  %v1_1000655c = add i32 %v2_10006554, 2130640639
  %v2_10006560 = xor i32 %v1_1000655c, %v2_10006554
  %v1_10006564 = add i32 %v0_10006584, 1
  %v2_10006568 = and i32 %v2_10006560, -2130640640
  %v6_10006568 = icmp eq i32 %v2_10006568, -2130640640
  br i1 %v6_10006568, label %dec_label_pc_10006548, label %dec_label_pc_10006574

dec_label_pc_10006574:                            ; preds = %dec_label_pc_10006548
  %v2_10006574 = inttoptr i32 %v0_10006584 to i8*
  %v3_10006574 = load i8, i8* %v2_10006574, align 1
  %v4_10006574 = zext i8 %v3_10006574 to i32
  %v1_10006578 = add i32 %v0_10006584, 3
  %v4_1000657c = icmp eq i32 %v4_10006574, %v0_10006530
  br i1 %v4_1000657c, label %dec_label_pc_10006584, label %dec_label_pc_1000658c

dec_label_pc_10006584:                            ; preds = %dec_label_pc_10006574
  ret i32 %v0_10006584

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_10006574
  %v2_1000658c = inttoptr i32 %v1_10006564 to i8*
  %v3_1000658c = load i8, i8* %v2_1000658c, align 1
  %v4_1000658c = zext i8 %v3_1000658c to i32
  %v4_10006590 = icmp eq i32 %v4_1000658c, %v0_10006530
  br i1 %v4_10006590, label %dec_label_pc_10006598, label %dec_label_pc_100065a0

dec_label_pc_10006598:                            ; preds = %dec_label_pc_1000658c
  ret i32 %v1_10006564

dec_label_pc_100065a0:                            ; preds = %dec_label_pc_1000658c
  %v2_100065a0 = inttoptr i32 %v1_10006550 to i8*
  %v3_100065a0 = load i8, i8* %v2_100065a0, align 1
  %v4_100065a0 = zext i8 %v3_100065a0 to i32
  %v4_100065a4 = icmp eq i32 %v4_100065a0, %v0_10006530
  br i1 %v4_100065a4, label %dec_label_pc_100065ac, label %dec_label_pc_100065b4

dec_label_pc_100065ac:                            ; preds = %dec_label_pc_100065a0
  ret i32 %v1_10006550

dec_label_pc_100065b4:                            ; preds = %dec_label_pc_100065a0
  %v2_100065b4 = inttoptr i32 %v1_10006578 to i8*
  %v3_100065b4 = load i8, i8* %v2_100065b4, align 1
  %v4_100065b4 = zext i8 %v3_100065b4 to i32
  %v4_100065b8 = icmp eq i32 %v4_100065b4, %v0_10006530
  br i1 %v4_100065b8, label %dec_label_pc_100065c0, label %dec_label_pc_10006548

dec_label_pc_100065c0:                            ; preds = %dec_label_pc_100065b4
  ret i32 %v1_10006578

; uselistorder directives
  uselistorder i32 %v1_1000654c, { 1, 0 }
  uselistorder i32 %v0_10006584, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_10006538, { 1, 0 }
  uselistorder i32 %v0_10006530, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10006524, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100065281, { 2, 1, 0 }
  uselistorder i32 %v1_10006510, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006518, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100065cc

dec_label_pc_100065cc:                            ; preds = %dec_label_pc_100065cc, %entry
  %v0_100065cc = phi i32 [ %v1_100065d0, %dec_label_pc_100065cc ], [ %tmp, %entry ]
  %v1_100065cc = inttoptr i32 %v0_100065cc to i8*
  %v2_100065cc = load i8, i8* %v1_100065cc, align 1
  %v1_100065d0 = add i32 %v0_100065cc, 1
  store i32 %v1_100065d0, i32* %r11.global-to-local, align 4
  %v3_100065d4 = icmp eq i8 %v2_100065cc, 0
  store i1 %v3_100065d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065d4, label %dec_label_pc_100065dc, label %dec_label_pc_100065cc

dec_label_pc_100065dc:                            ; preds = %dec_label_pc_100065cc
  %v3_100065dc = icmp eq i32 %arg2, 3
  store i1 %v3_100065dc, i1* %cr7_eq.global-to-local, align 1
  %v1_100065e0 = add i32 %v0_100065cc, -1
  store i32 %v1_100065e0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1000667c, label %dec_label_pc_100065ec

dec_label_pc_100065ec:                            ; preds = %dec_label_pc_100065dc
  %v1_100065ec = udiv i32 %arg2, 4
  store i32 %v1_100065ec, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100065f4

dec_label_pc_100065f4:                            ; preds = %dec_label_pc_100065f4.dec_label_pc_100065f4_crit_edge, %dec_label_pc_100065ec
  %v2_10006604 = phi i32 [ %v0_100065f8.pre, %dec_label_pc_100065f4.dec_label_pc_100065f4_crit_edge ], [ %v1_100065e0, %dec_label_pc_100065ec ]
  %v0_100065f4 = load i32, i32* @r4, align 4
  %v1_100065f4 = inttoptr i32 %v0_100065f4 to i8*
  %v2_100065f4 = load i8, i8* %v1_100065f4, align 1
  %v1_100065f8 = add i32 %v2_10006604, 1
  store i32 %v1_100065f8, i32* %r9.global-to-local, align 4
  %v1_100065fc = add i32 %v2_10006604, 2
  store i32 %v1_100065fc, i32* %r7.global-to-local, align 4
  %v3_10006600 = icmp eq i8 %v2_100065f4, 0
  store i1 %v3_10006600, i1* %cr7_eq.global-to-local, align 1
  %v4_10006604 = inttoptr i32 %v1_100065f8 to i8*
  store i8 %v2_100065f4, i8* %v4_10006604, align 1
  %v0_10006608 = load i32, i32* @r4, align 4
  %v1_10006608 = add i32 %v0_10006608, 1
  store i32 %v1_10006608, i32* %r11.global-to-local, align 4
  %v0_1000660c = load i32, i32* @lr, align 4
  %v1_1000660c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000660c, i32 %v0_1000660c)
  %v0_10006610 = load i32, i32* @r4, align 4
  %v1_10006610 = add i32 %v0_10006610, 1
  %v2_10006610 = inttoptr i32 %v1_10006610 to i8*
  %v3_10006610 = load i8, i8* %v2_10006610, align 1
  %v0_10006614 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006614 = add i32 %v0_10006614, 1
  store i32 %v1_10006614, i32* %r8.global-to-local, align 4
  %v0_10006618 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006618 = add i32 %v0_10006618, 1
  store i32 %v1_10006618, i32* %r10.global-to-local, align 4
  %v3_1000661c = icmp eq i8 %v3_10006610, 0
  store i1 %v3_1000661c, i1* %cr7_eq.global-to-local, align 1
  %v2_10006620 = load i32, i32* %r9.global-to-local, align 4
  %v3_10006620 = add i32 %v2_10006620, 1
  %v4_10006620 = inttoptr i32 %v3_10006620 to i8*
  store i8 %v3_10006610, i8* %v4_10006620, align 1
  %v0_10006624 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006624 = add i32 %v0_10006624, 1
  store i32 %v1_10006624, i32* %r9.global-to-local, align 4
  %v1_10006628 = add i32 %v0_10006624, 2
  store i32 %v1_10006628, i32* @r4, align 4
  %v0_1000662c = load i32, i32* @lr, align 4
  %v1_1000662c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000662c, i32 %v0_1000662c)
  %v0_10006630 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006630 = add i32 %v0_10006630, 1
  %v2_10006630 = inttoptr i32 %v1_10006630 to i8*
  %v3_10006630 = load i8, i8* %v2_10006630, align 1
  %v0_10006634 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006634 = add i32 %v0_10006634, 1
  store i32 %v1_10006634, i32* %r11.global-to-local, align 4
  %v3_10006638 = icmp eq i8 %v3_10006630, 0
  store i1 %v3_10006638, i1* %cr7_eq.global-to-local, align 1
  %v2_1000663c = load i32, i32* %r7.global-to-local, align 4
  %v3_1000663c = add i32 %v2_1000663c, 1
  %v4_1000663c = inttoptr i32 %v3_1000663c to i8*
  store i8 %v3_10006630, i8* %v4_1000663c, align 1
  %v0_10006640 = load i32, i32* @lr, align 4
  %v1_10006640 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10006640, i32 %v0_10006640)
  %v0_10006644 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006644 = add i32 %v0_10006644, 1
  %v2_10006644 = inttoptr i32 %v1_10006644 to i8*
  %v3_10006644 = load i8, i8* %v2_10006644, align 1
  %v4_10006644 = zext i8 %v3_10006644 to i32
  store i32 %v4_10006644, i32* %r9.global-to-local, align 4
  %v3_10006648 = icmp eq i8 %v3_10006644, 0
  store i1 %v3_10006648, i1* %cr7_eq.global-to-local, align 1
  %v2_1000664c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000664c = add i32 %v2_1000664c, 1
  %v4_1000664c = inttoptr i32 %v3_1000664c to i8*
  store i8 %v3_10006644, i8* %v4_1000664c, align 1
  %v0_10006650 = load i32, i32* @lr, align 4
  %v1_10006650 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10006650, i32 %v0_10006650)
  %v0_10006654 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006654 = add i32 %v0_10006654, -1
  store i32 %v1_10006654, i32* %ctr.global-to-local, align 4
  %v2_10006654 = icmp eq i32 %v1_10006654, 0
  br i1 %v2_10006654, label %dec_label_pc_10006658, label %dec_label_pc_100065f4.dec_label_pc_100065f4_crit_edge

dec_label_pc_100065f4.dec_label_pc_100065f4_crit_edge: ; preds = %dec_label_pc_100065f4
  %v0_100065f8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100065f4

dec_label_pc_10006658:                            ; preds = %dec_label_pc_100065f4
  %v0_10006658 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006658 = urem i32 %v0_10006658, 4
  store i32 %v1_10006658, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000667c

dec_label_pc_10006660:                            ; preds = %dec_label_pc_1000667c, %dec_label_pc_10006660.dec_label_pc_10006660_crit_edge
  %v0_10006664 = phi i32 [ %v0_10006664.pre, %dec_label_pc_10006660.dec_label_pc_10006660_crit_edge ], [ %v0_1000667c, %dec_label_pc_1000667c ]
  %v0_10006660 = load i32, i32* @r4, align 4
  %v1_10006660 = inttoptr i32 %v0_10006660 to i8*
  %v2_10006660 = load i8, i8* %v1_10006660, align 1
  %v3_10006660 = zext i8 %v2_10006660 to i32
  store i32 %v3_10006660, i32* %r9.global-to-local, align 4
  %v1_10006664 = add i32 %v0_10006664, -1
  store i32 %v1_10006664, i32* %r5.global-to-local, align 4
  %v1_10006668 = add i32 %v0_10006660, 1
  store i32 %v1_10006668, i32* @r4, align 4
  %v3_1000666c = icmp eq i8 %v2_10006660, 0
  store i1 %v3_1000666c, i1* %cr7_eq.global-to-local, align 1
  %v2_10006670 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006670 = add i32 %v2_10006670, 1
  %v4_10006670 = inttoptr i32 %v3_10006670 to i8*
  store i8 %v2_10006660, i8* %v4_10006670, align 1
  store i32 %v3_10006670, i32* %r11.global-to-local, align 4
  %v0_10006674 = load i32, i32* @lr, align 4
  %v1_10006674 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10006674, i32 %v0_10006674)
  %v0_10006684 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006684 = add i32 %v0_10006684, -1
  store i32 %v1_10006684, i32* %ctr.global-to-local, align 4
  %v2_10006684 = icmp eq i32 %v1_10006684, 0
  br i1 %v2_10006684, label %dec_label_pc_10006688, label %dec_label_pc_10006660.dec_label_pc_10006660_crit_edge

dec_label_pc_10006660.dec_label_pc_10006660_crit_edge: ; preds = %dec_label_pc_10006660
  %v0_10006664.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10006660

dec_label_pc_1000667c:                            ; preds = %dec_label_pc_100065dc, %dec_label_pc_10006658
  %v0_1000667c = phi i32 [ %arg2, %dec_label_pc_100065dc ], [ %v1_10006658, %dec_label_pc_10006658 ]
  store i32 %v0_1000667c, i32* %ctr.global-to-local, align 4
  %v2_100066843 = icmp eq i32 %v0_1000667c, 0
  br i1 %v2_100066843, label %dec_label_pc_10006688, label %dec_label_pc_10006660

dec_label_pc_10006688:                            ; preds = %dec_label_pc_10006660, %dec_label_pc_1000667c
  %v0_10006688 = load i32, i32* %r9.global-to-local, align 4
  %v3_10006688 = icmp eq i32 %v0_10006688, 0
  store i1 %v3_10006688, i1* %cr7_eq.global-to-local, align 1
  %v0_1000668c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10006688, i32 %v0_1000668c)
  %v0_10006690 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006690 = trunc i32 %v0_10006690 to i8
  %v2_10006690 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006690 = add i32 %v2_10006690, 1
  %v4_10006690 = inttoptr i32 %v3_10006690 to i8*
  store i8 %v1_10006690, i8* %v4_10006690, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1000667c, { 1, 2, 0 }
  uselistorder i32 %v1_10006684, { 1, 0 }
  uselistorder i32 %v1_10006658, { 1, 0 }
  uselistorder i32 %v1_10006654, { 1, 0 }
  uselistorder i32 %v2_10006604, { 1, 0 }
  uselistorder i32 %v1_100065d0, { 1, 0 }
  uselistorder i32 %v0_100065cc, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10006688, { 1, 0 }
  uselistorder label %dec_label_pc_1000667c, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100066c81 = load i32, i32* @r3, align 4
  %v1_100066c82 = inttoptr i32 %v0_100066c81 to i8*
  %v2_100066c83 = load i8, i8* %v1_100066c82, align 1
  %v3_100066cc6 = icmp eq i8 %v2_100066c83, 0
  br i1 %v3_100066cc6, label %dec_label_pc_100066dc, label %dec_label_pc_100066d4

dec_label_pc_100066a4:                            ; preds = %dec_label_pc_100066a4, %dec_label_pc_100066d4
  %v0_100066a4 = phi i32 [ %v1_100066a8, %dec_label_pc_100066a4 ], [ %tmp, %dec_label_pc_100066d4 ]
  %v1_100066a4 = inttoptr i32 %v0_100066a4 to i8*
  %v2_100066a4 = load i8, i8* %v1_100066a4, align 1
  %v1_100066a8 = add i32 %v0_100066a4, 1
  %v3_100066ac = icmp eq i8 %v2_100066a4, 0
  %v4_100066b0 = icmp eq i8 %v0_100066b08.in, %v2_100066a4
  %brmerge = or i1 %v3_100066ac, %v4_100066b0
  br i1 %brmerge, label %dec_label_pc_100066b8, label %dec_label_pc_100066a4

dec_label_pc_100066b8:                            ; preds = %dec_label_pc_100066a4
  br i1 %v3_100066ac, label %dec_label_pc_100066dc, label %dec_label_pc_100066c0

dec_label_pc_100066c0:                            ; preds = %dec_label_pc_100066b8
  %v1_100066c0 = add i32 %v0_100066c0, 1
  %v1_100066c4 = add i32 %v0_100066c4, 1
  %v1_100066c8 = inttoptr i32 %v1_100066c4 to i8*
  %v2_100066c8 = load i8, i8* %v1_100066c8, align 1
  %v3_100066cc = icmp eq i8 %v2_100066c8, 0
  br i1 %v3_100066cc, label %dec_label_pc_100066dc, label %dec_label_pc_100066d4

dec_label_pc_100066d4:                            ; preds = %entry, %dec_label_pc_100066c0
  %v0_100066c4 = phi i32 [ %v1_100066c4, %dec_label_pc_100066c0 ], [ %v0_100066c81, %entry ]
  %v0_100066c0 = phi i32 [ %v1_100066c0, %dec_label_pc_100066c0 ], [ 0, %entry ]
  %v0_100066b08.in = phi i8 [ %v2_100066c8, %dec_label_pc_100066c0 ], [ %v2_100066c83, %entry ]
  br label %dec_label_pc_100066a4

dec_label_pc_100066dc:                            ; preds = %dec_label_pc_100066c0, %dec_label_pc_100066b8, %entry
  %v0_100066dc = phi i32 [ 0, %entry ], [ %v1_100066c0, %dec_label_pc_100066c0 ], [ %v0_100066c0, %dec_label_pc_100066b8 ]
  ret i32 %v0_100066dc

; uselistorder directives
  uselistorder i32 %v0_100066a4, { 1, 0 }
  uselistorder label %dec_label_pc_100066d4, { 1, 0 }
  uselistorder label %dec_label_pc_100066a4, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_100066f8 = call i32 @__GI_strlen()
  %v1_100066fc = add i32 %v0_100066f8, 1
  store i32 %v1_100066fc, i32* @r29, align 4
  store i32 268461832, i32* @lr, align 4
  %v1_10006704 = call i32 @malloc(i32 %v1_100066fc)
  store i32 %v1_10006704, i32* @r3, align 4
  %v0_10006708 = load i32, i32* @r28, align 4
  store i32 %v0_10006708, i32* @r4, align 4
  store i32 %v1_10006704, i32* @r31, align 4
  %v3_1000670c = icmp eq i32 %v1_10006704, 0
  %v0_10006710 = load i32, i32* @r29, align 4
  store i32 %v0_10006710, i32* @r5, align 4
  br i1 %v3_1000670c, label %dec_label_pc_1000671c, label %dec_label_pc_10006718

dec_label_pc_10006718:                            ; preds = %entry
  store i32 268461852, i32* @lr, align 4
  %v0_10006718 = call i32 @memcpy()
  %v0_10006720.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000671c

dec_label_pc_1000671c:                            ; preds = %entry, %dec_label_pc_10006718
  %v0_10006720 = phi i32 [ 0, %entry ], [ %v0_10006720.pre, %dec_label_pc_10006718 ]
  ret i32 %v0_10006720

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 5, 4, 3, 2, 1, 7, 6, 0 }
  uselistorder label %dec_label_pc_1000671c, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268461896, i32* @lr, align 4
  %v2_10006744 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10006764 = load i32, i32* @lr, align 4
  store i32 %v0_10006764, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10006774 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10006774, i32* @r5, align 4
  store i32 268461960, i32* @lr, align 4
  %v2_10006784 = call i32 @ioctl(i32 1076655123, i32 %v2_10006774)
  %v2_10006788 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006788, i32* @r4, align 4
  store i32 %v2_10006784, i32* @r30, align 4
  %v3_1000678c = icmp eq i32 %v2_10006784, 0
  store i32 19, i32* @r5, align 4
  %v0_10006794 = load i32, i32* @r31, align 4
  br i1 %v3_1000678c, label %dec_label_pc_1000679c, label %dec_label_pc_100067e4

dec_label_pc_1000679c:                            ; preds = %entry
  %v1_10006794 = add i32 %v0_10006794, 17
  %v3_100067b4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_100067b4, i32* %r0.global-to-local, align 4
  %v2_100067b8 = add i32 %v0_10006794, 4
  %v3_100067b8 = inttoptr i32 %v2_100067b8 to i32*
  store i32 %tmp7, i32* %v3_100067b8, align 4
  %v0_100067bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100067bc = load i32, i32* @r31, align 4
  %v2_100067bc = inttoptr i32 %v1_100067bc to i32*
  store i32 %v0_100067bc, i32* %v2_100067bc, align 4
  %v0_100067c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100067c0 = load i32, i32* @r31, align 4
  %v2_100067c0 = add i32 %v1_100067c0, 8
  %v3_100067c0 = inttoptr i32 %v2_100067c0 to i32*
  store i32 %v0_100067c0, i32* %v3_100067c0, align 4
  %v0_100067c4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100067c4 = load i32, i32* @r31, align 4
  %v2_100067c4 = add i32 %v1_100067c4, 12
  %v3_100067c4 = inttoptr i32 %v2_100067c4 to i32*
  store i32 %v0_100067c4, i32* %v3_100067c4, align 4
  %v3_100067c8 = load i32, i32* @r31, align 4
  %v4_100067c8 = add i32 %v3_100067c8, 16
  %v5_100067c8 = inttoptr i32 %v4_100067c8 to i8*
  store i8 %tmp4, i8* %v5_100067c8, align 1
  %v1_100067cc = load i32, i32* @r31, align 4
  %v2_100067cc = add i32 %v1_100067cc, 52
  %v3_100067cc = inttoptr i32 %v2_100067cc to i32*
  store i32 %tmp3, i32* %v3_100067cc, align 4
  %v1_100067d0 = load i32, i32* @r31, align 4
  %v2_100067d0 = add i32 %v1_100067d0, 56
  %v3_100067d0 = inttoptr i32 %v2_100067d0 to i32*
  store i32 %tmp2, i32* %v3_100067d0, align 4
  store i32 268462040, i32* @lr, align 4
  %v6_100067d4 = sext i8 %tmp4 to i32
  %v8_100067d4 = call i32 @__GI_mempcpy(i32 %v1_10006794, i32 %v2_10006788, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_100067d4, i32 %tmp7)
  store i32 268462052, i32* @lr, align 4
  %v3_100067e0 = call i32 @__GI_memset(i32 %v8_100067d4, i32 0, i32 13)
  %v0_100067e8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100067e4

dec_label_pc_100067e4:                            ; preds = %entry, %dec_label_pc_1000679c
  %v0_100067e8 = phi i32 [ %v2_10006784, %entry ], [ %v0_100067e8.pre, %dec_label_pc_1000679c ]
  store i32 %v0_10006764, i32* %r0.global-to-local, align 4
  ret i32 %v0_100067e8

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder label %dec_label_pc_100067e4, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100067fc = load i32, i32* @lr, align 4
  store i32 %v0_100067fc, i32* %r0.global-to-local, align 4
  %v0_10006804 = call i32 @__asm_mfcr()
  store i32 %v0_10006804, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10006810 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10006810, i32* %r7.global-to-local, align 4
  %v0_10006814 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000687c

dec_label_pc_1000682c:                            ; preds = %dec_label_pc_1000687c
  %v3_1000682c = icmp eq i32 %v0_100068a0, 4
  store i1 %v3_1000682c, i1* %cr7_eq.global-to-local, align 1
  %v0_10006830 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10006830, label %dec_label_pc_10006868, label %dec_label_pc_10006834

dec_label_pc_10006834:                            ; preds = %dec_label_pc_1000682c
  %v0_10006834 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006834 = inttoptr i32 %v0_10006834 to i8*
  %v2_10006834 = load i8, i8* %v1_10006834, align 1
  %v3_10006834 = zext i8 %v2_10006834 to i32
  %v1_10006838 = mul nuw nsw i32 %v3_10006834, 10
  %v1_1000683c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000683c = add i32 %v1_10006838, %v1_1000683c
  %v1_10006840 = add i32 %v2_1000683c, -48
  store i32 %v1_10006840, i32* %r0.global-to-local, align 4
  %v2_10006844 = icmp ugt i32 %v1_10006840, 255
  %v3_10006844 = icmp eq i32 %v1_10006840, 255
  store i1 %v3_10006844, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006844, label %dec_label_pc_100068c4, label %dec_label_pc_1000684c

dec_label_pc_1000684c:                            ; preds = %dec_label_pc_10006834
  %v1_1000684c = trunc i32 %v1_10006840 to i8
  store i8 %v1_1000684c, i8* %v1_10006834, align 1
  %v0_10006850 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10006850, label %dec_label_pc_10006854, label %dec_label_pc_1000687c.backedge

dec_label_pc_10006854:                            ; preds = %dec_label_pc_1000684c
  %v0_10006854 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006854 = add i32 %v0_10006854, 1
  store i32 %v1_10006854, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_1000685c = icmp sgt i32 %v1_10006854, 4
  %v3_1000685c = icmp eq i32 %v1_10006854, 4
  store i1 %v3_1000685c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000685c, label %dec_label_pc_100068c4, label %dec_label_pc_1000687c.backedge

dec_label_pc_10006868:                            ; preds = %dec_label_pc_1000682c
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1000686c = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_1000686c.not = xor i1 %v0_1000686c, true
  %v0_10006870 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000682c, %v0_10006870
  %or.cond = or i1 %brmerge, %v0_1000686c.not
  br i1 %or.cond, label %dec_label_pc_100068c4, label %dec_label_pc_10006878

dec_label_pc_10006878:                            ; preds = %dec_label_pc_10006868
  %v0_10006878 = load i32, i32* %r6.global-to-local, align 4
  %v1_10006878 = trunc i32 %v0_10006878 to i8
  %v2_10006878 = load i32, i32* %r7.global-to-local, align 4
  %v3_10006878 = add i32 %v2_10006878, 1
  %v4_10006878 = inttoptr i32 %v3_10006878 to i8*
  store i8 %v1_10006878, i8* %v4_10006878, align 1
  store i32 %v3_10006878, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000687c.backedge

dec_label_pc_1000687c.backedge:                   ; preds = %dec_label_pc_10006878, %dec_label_pc_1000684c, %dec_label_pc_10006854
  %v0_1000687c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10006880.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000687c

dec_label_pc_1000687c:                            ; preds = %dec_label_pc_1000687c.backedge, %entry
  %v0_10006880 = phi i32 [ %v0_10006880.pre, %dec_label_pc_1000687c.backedge ], [ 0, %entry ]
  %v0_10006884 = phi i32 [ %v0_1000687c.pre, %dec_label_pc_1000687c.backedge ], [ %v0_10006804, %entry ]
  %v1_1000687c = inttoptr i32 %v0_10006884 to i8*
  %v2_1000687c = load i8, i8* %v1_1000687c, align 1
  %v3_1000687c = zext i8 %v2_1000687c to i32
  store i32 %v3_1000687c, i32* %r11.global-to-local, align 4
  %v3_10006880 = icmp eq i32 %v0_10006880, 0
  store i1 %v3_10006880, i1* %cr4_eq.global-to-local, align 1
  %v1_10006884 = add i32 %v0_10006884, 1
  store i32 %v1_10006884, i32* %r3.global-to-local, align 4
  %v3_10006888 = icmp eq i8 %v2_1000687c, 0
  store i1 %v3_10006888, i1* %cr7_eq.global-to-local, align 1
  %v1_1000688c = add nsw i32 %v3_1000687c, -48
  store i32 %v1_1000688c, i32* %r0.global-to-local, align 4
  %v2_10006890 = icmp ugt i32 %v1_1000688c, 9
  store i1 %v2_10006890, i1* %cr6_gt.global-to-local, align 1
  %v3_10006894 = icmp eq i8 %v2_1000687c, 46
  store i1 %v3_10006894, i1* %cr1_eq.global-to-local, align 1
  %v0_10006898 = load i4, i4* @cr4, align 1
  %v1_10006898 = call %1 @__asm_mcrf_cr0_write(i4 %v0_10006898)
  %v4_10006898 = extractvalue %1 %v1_10006898, 2
  store i1 %v4_10006898, i1* %cr0_eq.global-to-local, align 1
  %v0_1000689c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_100068a0 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_1000689c, label %dec_label_pc_100068a0, label %dec_label_pc_1000682c

dec_label_pc_100068a0:                            ; preds = %dec_label_pc_1000687c
  %v3_100068a0 = icmp eq i32 %v0_100068a0, 3
  store i1 %v3_100068a0, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_100068a0, 4
  br i1 %tmp9, label %dec_label_pc_100068c4, label %dec_label_pc_100068a8

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_100068a0
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_10006810, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100068b8.143 to i32), i32* @lr, align 4
  %v0_100068b4 = call i32 @memcpy()
  br label %dec_label_pc_100068c4

dec_label_pc_100068c4:                            ; preds = %dec_label_pc_10006868, %dec_label_pc_10006834, %dec_label_pc_10006854, %dec_label_pc_100068a0, %dec_label_pc_100068a8
  %storemerge = phi i32 [ 1, %dec_label_pc_100068a8 ], [ 0, %dec_label_pc_100068a0 ], [ 0, %dec_label_pc_10006854 ], [ 0, %dec_label_pc_10006834 ], [ 0, %dec_label_pc_10006868 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_10006814, i32* %r0.global-to-local, align 4
  %v1_100068d4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006804)
  %v4_100068d4 = extractvalue %0 %v1_100068d4, 2
  store i1 %v4_100068d4, i1* %cr0_eq.global-to-local, align 1
  %v9_100068d4 = extractvalue %0 %v1_100068d4, 7
  store i4 %v9_100068d4, i4* @cr4, align 1
  %v0_100068d8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100068d8

; uselistorder directives
  uselistorder i32 %v1_10006854, { 1, 0, 2 }
  uselistorder i32 %v1_10006840, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006804, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_100068c4, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000687c.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_100068dc = icmp eq i32 %arg1, 2
  %v0_100068e0 = load i32, i32* @lr, align 4
  store i32 %v0_100068e0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_100068dc, label %dec_label_pc_10006908, label %dec_label_pc_100068fc

dec_label_pc_100068fc:                            ; preds = %entry
  %v3_100068fc = icmp eq i32 %arg1, 10
  br i1 %v3_100068fc, label %dec_label_pc_1000691c, label %dec_label_pc_10006ab8

dec_label_pc_10006908:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268462356, i32* @lr, align 4
  %v3_10006910 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_10006910, i32* %r3.global-to-local, align 4
  store i32 %v3_10006910, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ad0

dec_label_pc_1000691c:                            ; preds = %dec_label_pc_100068fc
  %v2_1000691c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000691c, i32* %r3.global-to-local, align 4
  store i32 268462380, i32* @lr, align 4
  %v3_10006928 = call i32 @__GI_memset(i32 %v2_1000691c, i32 0, i32 16)
  store i32 %v3_10006928, i32* %r3.global-to-local, align 4
  %v0_1000692c = load i32, i32* @r29, align 4
  %v1_1000692c = inttoptr i32 %v0_1000692c to i8*
  %v2_1000692c = load i8, i8* %v1_1000692c, align 1
  %v3_1000692c = zext i8 %v2_1000692c to i32
  store i32 %v3_1000692c, i32* %r0.global-to-local, align 4
  store i32 %v3_10006928, i32* @r31, align 4
  %v2_10006934 = add i32 %v3_10006928, 16
  store i32 %v2_10006934, i32* @r27, align 4
  %v3_10006938 = icmp eq i8 %v2_1000692c, 58
  br i1 %v3_10006938, label %dec_label_pc_10006940, label %dec_label_pc_1000694c

dec_label_pc_10006940:                            ; preds = %dec_label_pc_1000691c
  %v1_10006940 = add i32 %v0_1000692c, 1
  %v2_10006940 = inttoptr i32 %v1_10006940 to i8*
  %v3_10006940 = load i8, i8* %v2_10006940, align 1
  %v4_10006940 = zext i8 %v3_10006940 to i32
  store i32 %v4_10006940, i32* %r0.global-to-local, align 4
  store i32 %v1_10006940, i32* @r29, align 4
  %v3_10006944 = icmp eq i8 %v3_10006940, 58
  br i1 %v3_10006944, label %dec_label_pc_1000694c, label %dec_label_pc_10006acc

dec_label_pc_1000694c:                            ; preds = %dec_label_pc_10006940, %dec_label_pc_1000691c
  %v0_1000694c = phi i32 [ %v1_10006940, %dec_label_pc_10006940 ], [ %v0_1000692c, %dec_label_pc_1000691c ]
  store i32 %v0_1000694c, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10006a203036 = inttoptr i32 %v0_1000694c to i8*
  %v2_10006a203137 = load i8, i8* %v1_10006a203036, align 1
  %v3_10006a203238 = zext i8 %v2_10006a203137 to i32
  store i32 %v3_10006a203238, i32* %r3.global-to-local, align 4
  store i32 268462632, i32* @lr, align 4
  %v1_10006a243339 = call i32 @__GI_tolower(i32 %v3_10006a203238)
  store i32 %v1_10006a243339, i32* %r3.global-to-local, align 4
  store i32 %v1_10006a243339, i32* @r30, align 4
  %v3_10006a283440 = icmp eq i32 %v1_10006a243339, 0
  br i1 %v3_10006a283440, label %dec_label_pc_10006a30, label %dec_label_pc_10006958.lr.ph

dec_label_pc_10006958:                            ; preds = %dec_label_pc_10006958.lr.ph, %dec_label_pc_10006a20.backedge
  %v1_10006a2435 = phi i32 [ %v1_10006a243341, %dec_label_pc_10006958.lr.ph ], [ %v1_10006a24, %dec_label_pc_10006a20.backedge ]
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000ac78.144 to i32), i32* @r25, align 4
  %v0_10006964 = load i32, i32* @r29, align 4
  %v1_10006964 = add i32 %v0_10006964, 1
  store i32 %v1_10006964, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000ac78.144 to i32), i32* @r3, align 4
  store i32 268462448, i32* @lr, align 4
  %v3_1000696c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1000ac78.144 to i32), i32 %v1_10006a2435)
  store i32 %v3_1000696c, i32* %r3.global-to-local, align 4
  %v3_10006970 = icmp eq i32 %v3_1000696c, 0
  br i1 %v3_10006970, label %dec_label_pc_10006990, label %dec_label_pc_10006978

dec_label_pc_10006978:                            ; preds = %dec_label_pc_10006958
  %v0_10006978 = load i32, i32* @r25, align 4
  %v2_10006978 = sub i32 %v3_1000696c, %v0_10006978
  store i32 %v2_10006978, i32* %r0.global-to-local, align 4
  %v0_1000697c = load i32, i32* @r28, align 4
  %v1_1000697c = mul i32 %v0_1000697c, 16
  store i32 %v1_1000697c, i32* %r9.global-to-local, align 4
  %v2_10006980 = or i32 %v1_1000697c, %v2_10006978
  store i32 %v2_10006980, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10006980, 65536
  br i1 %tmp19, label %dec_label_pc_10006a1c, label %dec_label_pc_10006acc

dec_label_pc_10006990:                            ; preds = %dec_label_pc_10006958
  %v0_10006990 = load i32, i32* @r30, align 4
  %v3_10006990 = icmp eq i32 %v0_10006990, 58
  br i1 %v3_10006990, label %dec_label_pc_10006998, label %dec_label_pc_100069ec

dec_label_pc_10006998:                            ; preds = %dec_label_pc_10006990
  %v0_10006998 = load i32, i32* @r23, align 4
  %v3_10006998 = icmp eq i32 %v0_10006998, 0
  br i1 %v3_10006998, label %dec_label_pc_100069a0, label %dec_label_pc_100069b4

dec_label_pc_100069a0:                            ; preds = %dec_label_pc_10006998
  %v0_100069a0 = load i32, i32* @r24, align 4
  %v3_100069a0 = icmp eq i32 %v0_100069a0, 0
  br i1 %v3_100069a0, label %dec_label_pc_100069a8, label %dec_label_pc_10006acc

dec_label_pc_100069a8:                            ; preds = %dec_label_pc_100069a0
  %v0_100069a8 = load i32, i32* @r31, align 4
  store i32 %v0_100069a8, i32* @r24, align 4
  %v0_100069ac = load i32, i32* @r29, align 4
  store i32 %v0_100069ac, i32* @r26, align 4
  br label %dec_label_pc_10006a20.backedge

dec_label_pc_100069b4:                            ; preds = %dec_label_pc_10006998
  %v0_100069b4 = load i32, i32* @r29, align 4
  %v1_100069b4 = inttoptr i32 %v0_100069b4 to i8*
  %v2_100069b4 = load i8, i8* %v1_100069b4, align 1
  %v3_100069b4 = zext i8 %v2_100069b4 to i32
  store i32 %v3_100069b4, i32* %r0.global-to-local, align 4
  %v3_100069b8 = icmp eq i8 %v2_100069b4, 0
  br i1 %v3_100069b8, label %dec_label_pc_10006acc, label %dec_label_pc_100069c0

dec_label_pc_100069c0:                            ; preds = %dec_label_pc_100069b4
  %v0_100069c0 = load i32, i32* @r31, align 4
  %v1_100069c0 = add i32 %v0_100069c0, 2
  store i32 %v1_100069c0, i32* %r0.global-to-local, align 4
  %v1_100069c4 = load i32, i32* @r27, align 4
  %v3_100069c4 = icmp ugt i32 %v1_100069c0, %v1_100069c4
  br i1 %v3_100069c4, label %dec_label_pc_10006acc, label %dec_label_pc_100069cc

dec_label_pc_100069cc:                            ; preds = %dec_label_pc_100069c0
  %v0_100069cc = load i32, i32* @r28, align 4
  %v1_100069cc = udiv i32 %v0_100069cc, 256
  store i32 %v1_100069cc, i32* %r0.global-to-local, align 4
  %v1_100069d0 = trunc i32 %v0_100069cc to i8
  %v3_100069d0 = add i32 %v0_100069c0, 1
  %v4_100069d0 = inttoptr i32 %v3_100069d0 to i8*
  store i8 %v1_100069d0, i8* %v4_100069d0, align 1
  %v0_100069d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100069d4 = trunc i32 %v0_100069d4 to i8
  %v2_100069d4 = load i32, i32* @r31, align 4
  %v3_100069d4 = inttoptr i32 %v2_100069d4 to i8*
  store i8 %v1_100069d4, i8* %v3_100069d4, align 1
  %v0_100069d8 = load i32, i32* @r29, align 4
  store i32 %v0_100069d8, i32* @r26, align 4
  %v0_100069dc = load i32, i32* @r31, align 4
  %v1_100069dc = add i32 %v0_100069dc, 2
  store i32 %v1_100069dc, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10006a2030 = inttoptr i32 %v0_100069d8 to i8*
  %v2_10006a2031 = load i8, i8* %v1_10006a2030, align 1
  %v3_10006a2032 = zext i8 %v2_10006a2031 to i32
  store i32 %v3_10006a2032, i32* %r3.global-to-local, align 4
  store i32 268462632, i32* @lr, align 4
  %v1_10006a2433 = call i32 @__GI_tolower(i32 %v3_10006a2032)
  store i32 %v1_10006a2433, i32* %r3.global-to-local, align 4
  store i32 %v1_10006a2433, i32* @r30, align 4
  %v3_10006a2834 = icmp eq i32 %v1_10006a2433, 0
  br i1 %v3_10006a2834, label %dec_label_pc_10006a30, label %dec_label_pc_10006958.lr.ph

dec_label_pc_10006958.lr.ph:                      ; preds = %dec_label_pc_1000694c, %dec_label_pc_100069cc
  %v1_10006a243341 = phi i32 [ %v1_10006a2433, %dec_label_pc_100069cc ], [ %v1_10006a243339, %dec_label_pc_1000694c ]
  br label %dec_label_pc_10006958

dec_label_pc_100069ec:                            ; preds = %dec_label_pc_10006990
  %v3_100069ec = icmp eq i32 %v0_10006990, 46
  br i1 %v3_100069ec, label %dec_label_pc_100069f4, label %dec_label_pc_10006acc

dec_label_pc_100069f4:                            ; preds = %dec_label_pc_100069ec
  %v0_100069f4 = load i32, i32* @r31, align 4
  %v1_100069f4 = add i32 %v0_100069f4, 4
  store i32 %v1_100069f4, i32* @r30, align 4
  %v1_100069f8 = load i32, i32* @r27, align 4
  %v3_100069f8 = icmp ugt i32 %v1_100069f4, %v1_100069f8
  br i1 %v3_100069f8, label %dec_label_pc_10006acc, label %dec_label_pc_10006a00

dec_label_pc_10006a00:                            ; preds = %dec_label_pc_100069f4
  %v0_10006a04 = load i32, i32* @r26, align 4
  store i32 %v0_10006a04, i32* %r3.global-to-local, align 4
  store i32 268462604, i32* @lr, align 4
  %v3_10006a08 = call i32 @inet_pton4(i32 %v0_10006a04, i32 %v0_100069f4)
  store i32 %v3_10006a08, i32* %r3.global-to-local, align 4
  %v0_10006a0c = load i32, i32* @r30, align 4
  store i32 %v0_10006a0c, i32* @r31, align 4
  %v2_10006a10 = icmp sgt i32 %v3_10006a08, 0
  br i1 %v2_10006a10, label %dec_label_pc_10006a54, label %dec_label_pc_10006acc

dec_label_pc_10006a1c:                            ; preds = %dec_label_pc_10006978
  store i32 1, i32* @r23, align 4
  %v0_10006a20.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006a20.backedge

dec_label_pc_10006a20.backedge:                   ; preds = %dec_label_pc_10006a1c, %dec_label_pc_100069a8
  %v0_10006a20.be = phi i32 [ %v0_10006a20.pre.pre, %dec_label_pc_10006a1c ], [ %v0_100069ac, %dec_label_pc_100069a8 ]
  %v1_10006a20 = inttoptr i32 %v0_10006a20.be to i8*
  %v2_10006a20 = load i8, i8* %v1_10006a20, align 1
  %v3_10006a20 = zext i8 %v2_10006a20 to i32
  store i32 %v3_10006a20, i32* %r3.global-to-local, align 4
  store i32 268462632, i32* @lr, align 4
  %v1_10006a24 = call i32 @__GI_tolower(i32 %v3_10006a20)
  store i32 %v1_10006a24, i32* %r3.global-to-local, align 4
  store i32 %v1_10006a24, i32* @r30, align 4
  %v3_10006a28 = icmp eq i32 %v1_10006a24, 0
  br i1 %v3_10006a28, label %dec_label_pc_10006a30, label %dec_label_pc_10006958

dec_label_pc_10006a30:                            ; preds = %dec_label_pc_10006a20.backedge, %dec_label_pc_1000694c, %dec_label_pc_100069cc
  %v0_10006a30 = load i32, i32* @r23, align 4
  %v3_10006a30 = icmp eq i32 %v0_10006a30, 0
  %v0_10006a98.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10006a30, label %dec_label_pc_10006a54, label %dec_label_pc_10006a38

dec_label_pc_10006a38:                            ; preds = %dec_label_pc_10006a30
  %v1_10006a38 = add i32 %v0_10006a98.pre.pre, 2
  store i32 %v1_10006a38, i32* %r0.global-to-local, align 4
  %v1_10006a3c = load i32, i32* @r27, align 4
  %v3_10006a3c = icmp ugt i32 %v1_10006a38, %v1_10006a3c
  br i1 %v3_10006a3c, label %dec_label_pc_10006acc, label %dec_label_pc_10006a44

dec_label_pc_10006a44:                            ; preds = %dec_label_pc_10006a38
  %v0_10006a44 = load i32, i32* @r28, align 4
  %v1_10006a44 = udiv i32 %v0_10006a44, 256
  store i32 %v1_10006a44, i32* %r0.global-to-local, align 4
  %v1_10006a48 = trunc i32 %v0_10006a44 to i8
  %v3_10006a48 = add i32 %v0_10006a98.pre.pre, 1
  %v4_10006a48 = inttoptr i32 %v3_10006a48 to i8*
  store i8 %v1_10006a48, i8* %v4_10006a48, align 1
  %v0_10006a4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10006a4c = trunc i32 %v0_10006a4c to i8
  %v2_10006a4c = load i32, i32* @r31, align 4
  %v3_10006a4c = inttoptr i32 %v2_10006a4c to i8*
  store i8 %v1_10006a4c, i8* %v3_10006a4c, align 1
  %v0_10006a50 = load i32, i32* @r31, align 4
  %v1_10006a50 = add i32 %v0_10006a50, 2
  store i32 %v1_10006a50, i32* @r31, align 4
  br label %dec_label_pc_10006a54

dec_label_pc_10006a54:                            ; preds = %dec_label_pc_10006a30, %dec_label_pc_10006a00, %dec_label_pc_10006a44
  %v0_10006a98.pre = phi i32 [ %v0_10006a0c, %dec_label_pc_10006a00 ], [ %v1_10006a50, %dec_label_pc_10006a44 ], [ %v0_10006a98.pre.pre, %dec_label_pc_10006a30 ]
  %v0_10006a54 = load i32, i32* @r24, align 4
  %v3_10006a54 = icmp eq i32 %v0_10006a54, 0
  %v1_10006a98.pre = load i32, i32* @r27, align 4
  %v4_10006a98 = icmp eq i32 %v0_10006a98.pre, %v1_10006a98.pre
  br i1 %v3_10006a54, label %dec_label_pc_10006a98, label %dec_label_pc_10006a5c

dec_label_pc_10006a5c:                            ; preds = %dec_label_pc_10006a54
  %v2_10006a60 = sub i32 %v0_10006a98.pre, %v0_10006a54
  store i32 %v2_10006a60, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_10006a98, label %dec_label_pc_10006acc, label %dec_label_pc_10006a80.preheader

dec_label_pc_10006a80.preheader:                  ; preds = %dec_label_pc_10006a5c
  %v3_10006a8024 = icmp slt i32 %v2_10006a60, 1
  %v2_10006a8426 = add i32 %v2_10006a60, -1
  store i32 %v2_10006a8426, i32* %r10.global-to-local, align 4
  %v2_10006a8827 = add i32 %v1_10006a98.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_10006a8024, label %dec_label_pc_10006a98.thread, label %dec_label_pc_10006a74

dec_label_pc_10006a74:                            ; preds = %dec_label_pc_10006a80.preheader, %dec_label_pc_10006a74.dec_label_pc_10006a74_crit_edge
  %v0_10006a74 = phi i32 [ %v0_10006a74.pre, %dec_label_pc_10006a74.dec_label_pc_10006a74_crit_edge ], [ %v0_10006a54, %dec_label_pc_10006a80.preheader ]
  %v2_10006a8829 = phi i32 [ %v2_10006a88, %dec_label_pc_10006a74.dec_label_pc_10006a74_crit_edge ], [ %v2_10006a8827, %dec_label_pc_10006a80.preheader ]
  %v2_10006a8428 = phi i32 [ %v2_10006a84, %dec_label_pc_10006a74.dec_label_pc_10006a74_crit_edge ], [ %v2_10006a8426, %dec_label_pc_10006a80.preheader ]
  %v2_10006a74 = add i32 %v0_10006a74, %v2_10006a8428
  %v3_10006a74 = inttoptr i32 %v2_10006a74 to i8*
  %v4_10006a74 = load i8, i8* %v3_10006a74, align 1
  %v5_10006a74 = zext i8 %v4_10006a74 to i32
  store i32 %v5_10006a74, i32* %r0.global-to-local, align 4
  %v3_10006a78 = inttoptr i32 %v2_10006a8829 to i8*
  store i8 %v4_10006a74, i8* %v3_10006a78, align 1
  %v0_10006a7c = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a7c = load i32, i32* @r24, align 4
  %v2_10006a7c = load i32, i32* %r10.global-to-local, align 4
  %v3_10006a7c = trunc i32 %v0_10006a7c to i8
  %v4_10006a7c = add i32 %v2_10006a7c, %v1_10006a7c
  %v5_10006a7c = inttoptr i32 %v4_10006a7c to i8*
  store i8 %v3_10006a7c, i8* %v5_10006a7c, align 1
  %v0_10006a80.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10006a80.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10006a88.pre = load i32, i32* @r27, align 4
  %v3_10006a80 = icmp slt i32 %v1_10006a80.pre, %v0_10006a80.pre
  %v2_10006a84 = sub i32 %v1_10006a80.pre, %v0_10006a80.pre
  store i32 %v2_10006a84, i32* %r10.global-to-local, align 4
  %v1_10006a8c = add i32 %v0_10006a80.pre, 1
  store i32 %v1_10006a8c, i32* %r9.global-to-local, align 4
  br i1 %v3_10006a80, label %dec_label_pc_10006a98.thread, label %dec_label_pc_10006a74.dec_label_pc_10006a74_crit_edge

dec_label_pc_10006a74.dec_label_pc_10006a74_crit_edge: ; preds = %dec_label_pc_10006a74
  %v2_10006a88 = sub i32 %v1_10006a88.pre, %v0_10006a80.pre
  %v0_10006a74.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_10006a74

dec_label_pc_10006a98.thread:                     ; preds = %dec_label_pc_10006a74, %dec_label_pc_10006a80.preheader
  %v0_10006a94.lcssa = phi i32 [ %v1_10006a98.pre, %dec_label_pc_10006a80.preheader ], [ %v1_10006a88.pre, %dec_label_pc_10006a74 ]
  store i32 %v0_10006a94.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10006aa0

dec_label_pc_10006a98:                            ; preds = %dec_label_pc_10006a54
  br i1 %v4_10006a98, label %dec_label_pc_10006aa0, label %dec_label_pc_10006acc

dec_label_pc_10006aa0:                            ; preds = %dec_label_pc_10006a98.thread, %dec_label_pc_10006a98
  %v0_10006aa0 = load i32, i32* @r22, align 4
  store i32 %v0_10006aa0, i32* @r3, align 4
  store i32 %v2_1000691c, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006ab0.145 to i32), i32* @lr, align 4
  %v0_10006aac = call i32 @memcpy()
  store i32 %v0_10006aac, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ad0

dec_label_pc_10006ab8:                            ; preds = %dec_label_pc_100068fc
  %v0_10006ab8 = call i32 @__errno_location()
  store i32 %v0_10006ab8, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10006ac4 = inttoptr i32 %v0_10006ab8 to i32*
  store i32 97, i32* %v2_10006ac4, align 4
  %v0_10006ad4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ad0

dec_label_pc_10006acc:                            ; preds = %dec_label_pc_100069c0, %dec_label_pc_100069b4, %dec_label_pc_10006978, %dec_label_pc_100069a0, %dec_label_pc_10006a5c, %dec_label_pc_10006a00, %dec_label_pc_100069ec, %dec_label_pc_10006a98, %dec_label_pc_10006940, %dec_label_pc_10006a38, %dec_label_pc_100069f4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ad0

dec_label_pc_10006ad0:                            ; preds = %dec_label_pc_10006ab8, %dec_label_pc_10006aa0, %dec_label_pc_10006908, %dec_label_pc_10006acc
  %v0_10006ad4 = phi i32 [ %v0_10006ad4.pre, %dec_label_pc_10006ab8 ], [ 1, %dec_label_pc_10006aa0 ], [ %v3_10006910, %dec_label_pc_10006908 ], [ 0, %dec_label_pc_10006acc ]
  store i32 %v0_100068e0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006ad4, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006ad4

; uselistorder directives
  uselistorder i32 %v0_10006ad4, { 1, 0 }
  uselistorder i32 %v2_10006a84, { 1, 0 }
  uselistorder i32 %v0_10006a80.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10006a98, { 1, 0 }
  uselistorder i32 %v0_10006a98.pre, { 1, 0 }
  uselistorder i32 %v0_10006a44, { 1, 0 }
  uselistorder i32 %v0_10006a98.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10006a24, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100069cc, { 1, 0 }
  uselistorder i32 %v1_1000697c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 9, 10, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 6, 7, 16, 15, 8, 18, 17, 11, 12, 13, 14, 0 }
  uselistorder i32 58, { 3, 0, 1, 2 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268462632, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_10006ad0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006acc, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10006aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10006a74, { 1, 0 }
  uselistorder label %dec_label_pc_10006a54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006a30, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10006958.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10006958, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006b40.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10006ae8 = load i32, i32* @lr, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10006b14 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10006b14, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_10006b24.148 to i32), i32* @lr, align 4
  %v3_10006b20 = call i32 @__GI_memset(i32 %v2_10006b14, i32 0, i32 15)
  store i32 %v3_10006b20, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_10006be42 = load i32, i32* @r1, align 4
  store i32 %v0_10006be42, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006b40

dec_label_pc_10006b40:                            ; preds = %dec_label_pc_10006bb4.dec_label_pc_10006b40_crit_edge, %dec_label_pc_10006b40.lr.ph
  %v2_10006b60 = phi i32 [ %v2_10006be4, %dec_label_pc_10006bb4.dec_label_pc_10006b40_crit_edge ], [ %v0_10006be42, %dec_label_pc_10006b40.lr.ph ]
  %v0_10006b54 = phi i32 [ %v0_10006be4, %dec_label_pc_10006bb4.dec_label_pc_10006b40_crit_edge ], [ %v0_10006be42, %dec_label_pc_10006b40.lr.ph ]
  %v0_10006b44 = phi i32 [ %v1_10006be4, %dec_label_pc_10006bb4.dec_label_pc_10006b40_crit_edge ], [ 0, %dec_label_pc_10006b40.lr.ph ]
  %v1_10006b4c = phi i32 [ %v1_10006b40.pre, %dec_label_pc_10006bb4.dec_label_pc_10006b40_crit_edge ], [ 0, %dec_label_pc_10006b40.lr.ph ]
  %v0_10006b40 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006b40 = add i32 %v0_10006b40, %v1_10006b4c
  %v3_10006b40 = inttoptr i32 %v2_10006b40 to i8*
  %v4_10006b40 = load i8, i8* %v3_10006b40, align 1
  %v5_10006b40 = zext i8 %v4_10006b40 to i32
  store i32 %v5_10006b40, i32* %r10.global-to-local, align 4
  store i32 %v0_10006b44, i32* %r8.global-to-local, align 4
  %v1_10006b48 = add i32 %v0_10006b44, 1
  store i32 %v1_10006b48, i32* %r11.global-to-local, align 4
  store i32 %v2_10006b40, i32* %r3.global-to-local, align 4
  %v1_10006b50 = load i32, i32* @r28, align 4
  %v2_10006b50 = udiv i32 %v5_10006b40, %v1_10006b50
  %v2_10006b54 = add i32 %v1_10006b48, %v0_10006b54
  store i32 %v2_10006b54, i32* %r6.global-to-local, align 4
  %v1_10006b58 = add nuw nsw i32 %v2_10006b50, 48
  %v1_10006b5c = urem i32 %v1_10006b58, 256
  store i32 %v1_10006b5c, i32* %r0.global-to-local, align 4
  %v1_10006b60 = trunc i32 %v1_10006b58 to i8
  %v3_10006b60 = add i32 %v2_10006b60, 8
  %v4_10006b60 = inttoptr i32 %v3_10006b60 to i8*
  store i8 %v1_10006b60, i8* %v4_10006b60, align 1
  %v0_10006b64 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006b64 = icmp eq i32 %v0_10006b64, 48
  %v0_10006b6c = load i32, i32* %r10.global-to-local, align 4
  %v1_10006b6c = load i32, i32* %r5.global-to-local, align 4
  %v2_10006b6c = udiv i32 %v0_10006b6c, %v1_10006b6c
  store i32 %v2_10006b6c, i32* %r9.global-to-local, align 4
  br i1 %v3_10006b64, label %dec_label_pc_10006b6c, label %dec_label_pc_10006b98

dec_label_pc_10006b6c:                            ; preds = %dec_label_pc_10006b40
  %v2_10006b70 = udiv i32 %v2_10006b6c, %v1_10006b6c
  %tmp18 = mul i32 %v2_10006b70, -10
  %v2_10006b78 = add i32 %v2_10006b6c, 48
  %v1_10006b7c = add i32 %v2_10006b78, %tmp18
  store i32 %v1_10006b7c, i32* %r9.global-to-local, align 4
  %v1_10006b80 = urem i32 %v1_10006b7c, 256
  store i32 %v1_10006b80, i32* %r0.global-to-local, align 4
  %v1_10006b84 = trunc i32 %v1_10006b7c to i8
  %v2_10006b84 = load i32, i32* %r7.global-to-local, align 4
  %v3_10006b84 = add i32 %v2_10006b84, 8
  %v4_10006b84 = inttoptr i32 %v3_10006b84 to i8*
  store i8 %v1_10006b84, i8* %v4_10006b84, align 1
  %v0_10006b88 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006b88 = icmp eq i32 %v0_10006b88, 48
  br i1 %v3_10006b88, label %dec_label_pc_10006bb4, label %dec_label_pc_10006b90

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b6c
  %v0_10006b90 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10006b90, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10006bb4

dec_label_pc_10006b98:                            ; preds = %dec_label_pc_10006b40
  %v0_10006b9c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b9c = add i32 %v0_10006b9c, 1
  store i32 %v1_10006b9c, i32* %r8.global-to-local, align 4
  %v2_10006ba0 = udiv i32 %v2_10006b6c, %v1_10006b6c
  %v1_10006ba4 = mul i32 %v2_10006ba0, 10
  store i32 %v1_10006ba4, i32* %r0.global-to-local, align 4
  %v2_10006ba8 = sub i32 %v2_10006b6c, %v1_10006ba4
  %v1_10006bac = add i32 %v2_10006ba8, 48
  store i32 %v1_10006bac, i32* %r9.global-to-local, align 4
  %v1_10006bb0 = trunc i32 %v1_10006bac to i8
  %v2_10006bb0 = load i32, i32* %r6.global-to-local, align 4
  %v3_10006bb0 = add i32 %v2_10006bb0, 8
  %v4_10006bb0 = inttoptr i32 %v3_10006bb0 to i8*
  store i8 %v1_10006bb0, i8* %v4_10006bb0, align 1
  br label %dec_label_pc_10006bb4

dec_label_pc_10006bb4:                            ; preds = %dec_label_pc_10006b6c, %dec_label_pc_10006b90, %dec_label_pc_10006b98
  %v0_10006bb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006bb4 = inttoptr i32 %v0_10006bb4 to i8*
  %v2_10006bb4 = load i8, i8* %v1_10006bb4, align 1
  %v3_10006bb4 = zext i8 %v2_10006bb4 to i32
  %v0_10006bb8 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006bb8 = add i32 %v0_10006bb8, 1
  %v0_10006bbc = load i32, i32* @r1, align 4
  %v2_10006bbc = add i32 %v0_10006bbc, %v0_10006bb8
  store i32 %v2_10006bbc, i32* %r10.global-to-local, align 4
  %v2_10006bc0 = add i32 %v1_10006bb8, %v0_10006bbc
  store i32 %v2_10006bc0, i32* %r8.global-to-local, align 4
  %v1_10006bc4 = load i32, i32* %r5.global-to-local, align 4
  %v2_10006bc4 = udiv i32 %v3_10006bb4, %v1_10006bc4
  %v1_10006bc8 = add i32 %v0_10006bb8, 2
  store i32 %v1_10006bc8, i32* %r11.global-to-local, align 4
  %v0_10006bcc = load i32, i32* %r4.global-to-local, align 4
  %v1_10006bcc = add i32 %v0_10006bcc, 1
  store i32 %v1_10006bcc, i32* %r4.global-to-local, align 4
  %v1_10006bd0 = mul nuw nsw i32 %v2_10006bc4, 10
  store i32 %v1_10006bd0, i32* %r0.global-to-local, align 4
  %v2_10006bd4 = sub nsw i32 %v3_10006bb4, %v1_10006bd0
  %v1_10006bd8 = add nsw i32 %v2_10006bd4, 48
  store i32 %v1_10006bd8, i32* %r9.global-to-local, align 4
  %v1_10006bdc = trunc i32 %v1_10006bd8 to i8
  %v3_10006bdc = add i32 %v2_10006bbc, 8
  %v4_10006bdc = inttoptr i32 %v3_10006bdc to i8*
  store i8 %v1_10006bdc, i8* %v4_10006bdc, align 1
  %v0_10006be0 = load i32, i32* %r12.global-to-local, align 4
  %v1_10006be0 = trunc i32 %v0_10006be0 to i8
  %v2_10006be0 = load i32, i32* %r8.global-to-local, align 4
  %v3_10006be0 = add i32 %v2_10006be0, 8
  %v4_10006be0 = inttoptr i32 %v3_10006be0 to i8*
  store i8 %v1_10006be0, i8* %v4_10006be0, align 1
  %v0_10006be4 = load i32, i32* @r1, align 4
  %v1_10006be4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006be4 = add i32 %v1_10006be4, %v0_10006be4
  store i32 %v2_10006be4, i32* %r7.global-to-local, align 4
  %v0_10006be8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006be8 = add i32 %v0_10006be8, -1
  store i32 %v1_10006be8, i32* %ctr.global-to-local, align 4
  %v2_10006be8 = icmp eq i32 %v1_10006be8, 0
  br i1 %v2_10006be8, label %dec_label_pc_10006bec, label %dec_label_pc_10006bb4.dec_label_pc_10006b40_crit_edge

dec_label_pc_10006bb4.dec_label_pc_10006b40_crit_edge: ; preds = %dec_label_pc_10006bb4
  %v1_10006b40.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006b40

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006bb4
  %v2_10006bec = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_10006bec, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006bf4 = add i32 %v1_10006be4, %v2_10006bec
  store i32 %v2_10006bf4, i32* %r9.global-to-local, align 4
  store i32 %v2_10006bec, i32* @r3, align 4
  %v3_10006bfc = add i32 %v2_10006bf4, -1
  %v4_10006bfc = inttoptr i32 %v3_10006bfc to i8*
  store i8 0, i8* %v4_10006bfc, align 1
  %v0_10006c00 = call i32 @__GI_strlen()
  store i32 %v0_10006c00, i32* %r3.global-to-local, align 4
  %v1_10006c04 = load i32, i32* @r30, align 4
  %v3_10006c04 = icmp ugt i32 %v0_10006c00, %v1_10006c04
  br i1 %v3_10006c04, label %dec_label_pc_10006c0c, label %dec_label_pc_10006c20

dec_label_pc_10006c0c:                            ; preds = %dec_label_pc_10006bec
  %v0_10006c0c = call i32 @__errno_location()
  store i32 %v0_10006c0c, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10006c18 = inttoptr i32 %v0_10006c0c to i32*
  store i32 28, i32* %v2_10006c18, align 4
  %v0_10006c34.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006c30

dec_label_pc_10006c20:                            ; preds = %dec_label_pc_10006bec
  %v0_10006c20 = load i32, i32* @r29, align 4
  store i32 %v0_10006c20, i32* %r3.global-to-local, align 4
  store i32 %v2_10006bec, i32* %r4.global-to-local, align 4
  %v2_10006c28 = bitcast i16* %stack_var_-56 to i8*
  %v3_10006c28 = call i32 @strcpy(i32 %v0_10006c20, i8* %v2_10006c28)
  store i32 %v3_10006c28, i32* %r3.global-to-local, align 4
  store i32 %v3_10006c28, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006c30

dec_label_pc_10006c30:                            ; preds = %dec_label_pc_10006c0c, %dec_label_pc_10006c20
  %v0_10006c34 = phi i32 [ %v0_10006c34.pre, %dec_label_pc_10006c0c ], [ %v3_10006c28, %dec_label_pc_10006c20 ]
  store i32 %v0_10006ae8, i32* %r0.global-to-local, align 4
  store i32 %v0_10006c34, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006c34

; uselistorder directives
  uselistorder i32 %v0_10006c34, { 1, 0 }
  uselistorder i32 %v2_10006bec, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10006be8, { 1, 0 }
  uselistorder i32 %v2_10006be4, { 1, 0 }
  uselistorder i32 %v0_10006bb8, { 1, 0, 2 }
  uselistorder i32 %v1_10006b7c, { 1, 0, 2 }
  uselistorder i32 %v2_10006b6c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10006b58, { 1, 0 }
  uselistorder i32 %v0_10006b44, { 1, 0 }
  uselistorder i32 %v0_10006be42, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder label %dec_label_pc_10006c30, { 1, 0 }
  uselistorder label %dec_label_pc_10006bb4, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_10006c48 = icmp slt i32 %arg1, 2
  %v3_10006c48 = icmp eq i32 %arg1, 2
  store i1 %v1_10006c48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c48, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_10006c48, label %dec_label_pc_10006c78, label %dec_label_pc_10006c6c

dec_label_pc_10006c6c:                            ; preds = %entry
  %v1_10006c6c = icmp slt i32 %arg1, 10
  %v3_10006c6c = icmp eq i32 %arg1, 10
  store i1 %v1_10006c6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c6c, label %dec_label_pc_10006cb0.lr.ph, label %dec_label_pc_10006ec4

dec_label_pc_10006c78:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10006c88.150 to i32), i32* @lr, align 4
  %v3_10006c84 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_10006ebc

dec_label_pc_10006cb0.lr.ph:                      ; preds = %dec_label_pc_10006c6c
  %v2_10006c8c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10006c8c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006ca0.151 to i32), i32* @lr, align 4
  %v3_10006c9c = call i32 @__GI_memset(i32 %v2_10006c8c, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10006cd015 = load i32, i32* @r27, align 4
  store i32 %v0_10006cd015, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006cb0

dec_label_pc_10006cb0:                            ; preds = %dec_label_pc_10006cb0.lr.ph, %dec_label_pc_10006cb0
  %v1_10006cc4 = phi i32 [ 0, %dec_label_pc_10006cb0.lr.ph ], [ %v1_10006cd4, %dec_label_pc_10006cb0 ]
  %v0_10006cb0 = phi i32 [ %v0_10006cd015, %dec_label_pc_10006cb0.lr.ph ], [ %v0_10006cd0, %dec_label_pc_10006cb0 ]
  %v0_10006cb8 = phi i32 [ %v0_10006cd015, %dec_label_pc_10006cb0.lr.ph ], [ %v2_10006cd0, %dec_label_pc_10006cb0 ]
  %v1_10006cb0 = phi i32 [ 0, %dec_label_pc_10006cb0.lr.ph ], [ %v0_10006cc8, %dec_label_pc_10006cb0 ]
  %v2_10006cb0 = add i32 %v0_10006cb0, %v1_10006cb0
  %v3_10006cb0 = inttoptr i32 %v2_10006cb0 to i8*
  %v4_10006cb0 = load i8, i8* %v3_10006cb0, align 1
  %v5_10006cb0 = zext i8 %v4_10006cb0 to i32
  %v1_10006cb4 = add i32 %v1_10006cb0, 2
  store i32 %v1_10006cb4, i32* %r11.global-to-local, align 4
  %v1_10006cb8 = add i32 %v0_10006cb8, 1
  %v2_10006cb8 = inttoptr i32 %v1_10006cb8 to i8*
  %v3_10006cb8 = load i8, i8* %v2_10006cb8, align 1
  %v4_10006cb8 = zext i8 %v3_10006cb8 to i32
  %v1_10006cbc = mul nuw nsw i32 %v5_10006cb0, 256
  %v2_10006cc0 = or i32 %v4_10006cb8, %v1_10006cbc
  %v2_10006cc4 = load i32, i32* %r29.global-to-local, align 4
  %v3_10006cc4 = add i32 %v2_10006cc4, %v1_10006cc4
  %v4_10006cc4 = inttoptr i32 %v3_10006cc4 to i32*
  store i32 %v2_10006cc0, i32* %v4_10006cc4, align 4
  %v0_10006cc8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006cc8 = udiv i32 %v0_10006cc8, 2
  %v0_10006cd0 = load i32, i32* @r27, align 4
  %v2_10006cd0 = add i32 %v0_10006cd0, %v0_10006cc8
  store i32 %v2_10006cd0, i32* %r9.global-to-local, align 4
  %v1_10006cd4 = mul i32 %v1_10006cc8, 4
  %v0_10006cd8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006cd8 = add i32 %v0_10006cd8, -1
  store i32 %v1_10006cd8, i32* %ctr.global-to-local, align 4
  %v2_10006cd8 = icmp eq i32 %v1_10006cd8, 0
  br i1 %v2_10006cd8, label %dec_label_pc_10006cf8.lr.ph, label %dec_label_pc_10006cb0

dec_label_pc_10006cf8.lr.ph:                      ; preds = %dec_label_pc_10006cb0
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006cf8

dec_label_pc_10006cf8:                            ; preds = %dec_label_pc_10006cf8.lr.ph, %dec_label_pc_10006d44
  %v0_10006d48 = phi i32 [ 8, %dec_label_pc_10006cf8.lr.ph ], [ %v1_10006d48, %dec_label_pc_10006d44 ]
  %v0_10006d38 = phi i32 [ -1, %dec_label_pc_10006cf8.lr.ph ], [ %v0_10006d3842, %dec_label_pc_10006d44 ]
  %v0_10006d28 = phi i32 [ -1, %dec_label_pc_10006cf8.lr.ph ], [ %v0_10006d2839, %dec_label_pc_10006d44 ]
  %v0_10006cfc = phi i32 [ -1, %dec_label_pc_10006cf8.lr.ph ], [ %v0_10006cfc35, %dec_label_pc_10006d44 ]
  %v0_10006d44 = phi i32 [ 0, %dec_label_pc_10006cf8.lr.ph ], [ %v1_10006d44, %dec_label_pc_10006d44 ]
  %v1_10006cf8 = mul i32 %v0_10006d44, 4
  %v3_10006cfc = icmp eq i32 %v0_10006cfc, -1
  %v2_10006d00 = add i32 %v1_10006cf8, %v2_10006c8c
  %v3_10006d00 = inttoptr i32 %v2_10006d00 to i32*
  %v4_10006d00 = load i32, i32* %v3_10006d00, align 4
  %v3_10006d04 = icmp eq i32 %v4_10006d00, 0
  br i1 %v3_10006d04, label %dec_label_pc_10006d0c, label %dec_label_pc_10006d24

dec_label_pc_10006d0c:                            ; preds = %dec_label_pc_10006cf8
  br i1 %v3_10006cfc, label %dec_label_pc_10006d10, label %dec_label_pc_10006d1c

dec_label_pc_10006d10:                            ; preds = %dec_label_pc_10006d0c
  store i32 %v0_10006d44, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_10006d44

dec_label_pc_10006d1c:                            ; preds = %dec_label_pc_10006d0c
  %v0_10006d1c = load i32, i32* @r31, align 4
  %v1_10006d1c = add i32 %v0_10006d1c, 1
  store i32 %v1_10006d1c, i32* @r31, align 4
  br label %dec_label_pc_10006d44

dec_label_pc_10006d24:                            ; preds = %dec_label_pc_10006cf8
  br i1 %v3_10006cfc, label %dec_label_pc_10006d44, label %dec_label_pc_10006d28

dec_label_pc_10006d28:                            ; preds = %dec_label_pc_10006d24
  %v3_10006d28 = icmp eq i32 %v0_10006d28, -1
  %v0_10006d3c.pre = load i32, i32* @r31, align 4
  %v1_10006d30 = load i32, i32* @r30, align 4
  %v3_10006d30 = icmp sgt i32 %v0_10006d3c.pre, %v1_10006d30
  %or.cond = or i1 %v3_10006d28, %v3_10006d30
  br i1 %or.cond, label %dec_label_pc_10006d38, label %dec_label_pc_10006d40

dec_label_pc_10006d38:                            ; preds = %dec_label_pc_10006d28
  store i32 %v0_10006d38, i32* @r28, align 4
  store i32 %v0_10006d3c.pre, i32* @r30, align 4
  br label %dec_label_pc_10006d40

dec_label_pc_10006d40:                            ; preds = %dec_label_pc_10006d28, %dec_label_pc_10006d38
  %v0_10006d2840 = phi i32 [ %v0_10006d38, %dec_label_pc_10006d38 ], [ %v0_10006d28, %dec_label_pc_10006d28 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006d44

dec_label_pc_10006d44:                            ; preds = %dec_label_pc_10006d24, %dec_label_pc_10006d1c, %dec_label_pc_10006d10, %dec_label_pc_10006d40
  %v0_10006d3842 = phi i32 [ %v0_10006d38, %dec_label_pc_10006d24 ], [ %v0_10006d38, %dec_label_pc_10006d1c ], [ %v0_10006d44, %dec_label_pc_10006d10 ], [ -1, %dec_label_pc_10006d40 ]
  %v0_10006cfc35 = phi i32 [ -1, %dec_label_pc_10006d24 ], [ %v0_10006cfc, %dec_label_pc_10006d1c ], [ %v0_10006d44, %dec_label_pc_10006d10 ], [ -1, %dec_label_pc_10006d40 ]
  %v0_10006d2839 = phi i32 [ %v0_10006d28, %dec_label_pc_10006d24 ], [ %v0_10006d28, %dec_label_pc_10006d1c ], [ %v0_10006d28, %dec_label_pc_10006d10 ], [ %v0_10006d2840, %dec_label_pc_10006d40 ]
  %v1_10006d44 = add nuw nsw i32 %v0_10006d44, 1
  store i32 %v1_10006d44, i32* %r11.global-to-local, align 4
  %v1_10006d48 = add nsw i32 %v0_10006d48, -1
  store i32 %v1_10006d48, i32* %ctr.global-to-local, align 4
  %v2_10006d48 = icmp eq i32 %v1_10006d48, 0
  br i1 %v2_10006d48, label %dec_label_pc_10006d4c, label %dec_label_pc_10006cf8

dec_label_pc_10006d4c:                            ; preds = %dec_label_pc_10006d44
  %v3_10006d4c = icmp eq i32 %v0_10006d3842, -1
  %v1_10006d6c = icmp slt i32 %v0_10006d2839, -1
  %v3_10006d6c = icmp eq i32 %v0_10006d2839, -1
  store i1 %v1_10006d6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d4c, label %dec_label_pc_10006d6c, label %dec_label_pc_10006d54

dec_label_pc_10006d54:                            ; preds = %dec_label_pc_10006d4c
  %v0_10006d64.pre = load i32, i32* @r31, align 4
  br i1 %v3_10006d6c, label %dec_label_pc_10006d64, label %dec_label_pc_10006d5c

dec_label_pc_10006d5c:                            ; preds = %dec_label_pc_10006d54
  %v1_10006d5c = load i32, i32* @r30, align 4
  %v2_10006d5c = icmp slt i32 %v0_10006d64.pre, %v1_10006d5c
  %v3_10006d5c = icmp sgt i32 %v0_10006d64.pre, %v1_10006d5c
  %v4_10006d5c = icmp eq i32 %v0_10006d64.pre, %v1_10006d5c
  store i1 %v2_10006d5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d5c, label %dec_label_pc_10006d64, label %dec_label_pc_10006d6c.thread

dec_label_pc_10006d64:                            ; preds = %dec_label_pc_10006d54, %dec_label_pc_10006d5c
  store i32 %v0_10006d64.pre, i32* @r30, align 4
  store i32 %v0_10006d3842, i32* @r28, align 4
  br label %dec_label_pc_10006d6c.thread

dec_label_pc_10006d6c.thread:                     ; preds = %dec_label_pc_10006d64, %dec_label_pc_10006d5c
  %v0_10006d7476 = phi i32 [ %v1_10006d5c, %dec_label_pc_10006d5c ], [ %v0_10006d64.pre, %dec_label_pc_10006d64 ]
  %v0_10006d6c.ph = phi i32 [ %v0_10006d2839, %dec_label_pc_10006d5c ], [ %v0_10006d3842, %dec_label_pc_10006d64 ]
  %v1_10006d6c59 = icmp slt i32 %v0_10006d6c.ph, -1
  %v3_10006d6c61 = icmp eq i32 %v0_10006d6c.ph, -1
  store i1 %v1_10006d6c59, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d6c61, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006d74

dec_label_pc_10006d6c:                            ; preds = %dec_label_pc_10006d4c
  br i1 %v3_10006d6c, label %dec_label_pc_10006d80, label %dec_label_pc_10006d6c.dec_label_pc_10006d74_crit_edge

dec_label_pc_10006d6c.dec_label_pc_10006d74_crit_edge: ; preds = %dec_label_pc_10006d6c
  %v0_10006d74.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006d74

dec_label_pc_10006d74:                            ; preds = %dec_label_pc_10006d6c.dec_label_pc_10006d74_crit_edge, %dec_label_pc_10006d6c.thread
  %v0_10006d74 = phi i32 [ %v0_10006d7476, %dec_label_pc_10006d6c.thread ], [ %v0_10006d74.pre, %dec_label_pc_10006d6c.dec_label_pc_10006d74_crit_edge ]
  %v0_10006d6c62 = phi i32 [ %v0_10006d6c.ph, %dec_label_pc_10006d6c.thread ], [ %v0_10006d2839, %dec_label_pc_10006d6c.dec_label_pc_10006d74_crit_edge ]
  %v1_10006d74 = icmp slt i32 %v0_10006d74, 1
  %v2_10006d74 = icmp sgt i32 %v0_10006d74, 1
  %v3_10006d74 = icmp eq i32 %v0_10006d74, 1
  store i1 %v1_10006d74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006d74, label %dec_label_pc_10006d80, label %dec_label_pc_10006d7c

dec_label_pc_10006d7c:                            ; preds = %dec_label_pc_10006d74
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10006d80

dec_label_pc_10006d80:                            ; preds = %dec_label_pc_10006d74, %dec_label_pc_10006d6c, %dec_label_pc_10006d7c
  %v0_10006d8c3 = phi i32 [ %v0_10006d6c62, %dec_label_pc_10006d74 ], [ -1, %dec_label_pc_10006d6c ], [ -1, %dec_label_pc_10006d7c ]
  %v2_10006d80 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10006d80, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_10006d8c4 = icmp slt i32 %v0_10006d8c3, -1
  %v3_10006d8c6 = icmp eq i32 %v0_10006d8c3, -1
  store i1 %v1_10006d8c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d8c6, i1* %cr7_eq.global-to-local, align 1
  %v2_10006dfc = icmp slt i32 %tmp, 65535
  %v4_10006dfc = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_10006d8c

dec_label_pc_10006d8c:                            ; preds = %dec_label_pc_10006d80, %dec_label_pc_10006e58
  %v2_10006dc8 = phi i32 [ %v2_10006d80, %dec_label_pc_10006d80 ], [ %v2_10006db051, %dec_label_pc_10006e58 ]
  %v0_10006d9c = phi i32 [ %v0_10006d8c3, %dec_label_pc_10006d80 ], [ %v0_10006d8c, %dec_label_pc_10006e58 ]
  %v0_10006dbc = phi i32 [ 0, %dec_label_pc_10006d80 ], [ %v1_10006e58, %dec_label_pc_10006e58 ]
  %v3_10006d8c7 = phi i1 [ %v3_10006d8c6, %dec_label_pc_10006d80 ], [ %v3_10006d8c, %dec_label_pc_10006e58 ]
  br i1 %v3_10006d8c7, label %dec_label_pc_10006dbc, label %dec_label_pc_10006d94

dec_label_pc_10006d94:                            ; preds = %dec_label_pc_10006d8c
  %v2_10006d94 = icmp slt i32 %v0_10006dbc, %v0_10006d9c
  %v4_10006d94 = icmp eq i32 %v0_10006dbc, %v0_10006d9c
  br i1 %v2_10006d94, label %dec_label_pc_10006dbc, label %dec_label_pc_10006d9c

dec_label_pc_10006d9c:                            ; preds = %dec_label_pc_10006d94
  %v1_10006d9c = load i32, i32* @r30, align 4
  %v2_10006d9c = add i32 %v1_10006d9c, %v0_10006d9c
  %v2_10006da0 = icmp slt i32 %v0_10006dbc, %v2_10006d9c
  %v4_10006da0 = icmp eq i32 %v0_10006dbc, %v2_10006d9c
  store i1 %v2_10006da0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006da0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006da0, label %dec_label_pc_10006da8, label %dec_label_pc_10006dbc

dec_label_pc_10006da8:                            ; preds = %dec_label_pc_10006d9c
  br i1 %v4_10006d94, label %dec_label_pc_10006dac, label %dec_label_pc_10006e58

dec_label_pc_10006dac:                            ; preds = %dec_label_pc_10006da8
  %v3_10006db0 = inttoptr i32 %v2_10006dc8 to i8*
  store i8 58, i8* %v3_10006db0, align 1
  %v0_10006db4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006db4 = add i32 %v0_10006db4, 1
  store i32 %v1_10006db4, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006e58

dec_label_pc_10006dbc:                            ; preds = %dec_label_pc_10006d9c, %dec_label_pc_10006d94, %dec_label_pc_10006d8c
  %v1_10006dbc = icmp slt i32 %v0_10006dbc, 0
  %v3_10006dbc = icmp eq i32 %v0_10006dbc, 0
  store i1 %v1_10006dbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006dbc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006dbc, label %dec_label_pc_10006dd0.thread, label %dec_label_pc_10006dd0

dec_label_pc_10006dd0.thread:                     ; preds = %dec_label_pc_10006dbc
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006e34

dec_label_pc_10006dd0:                            ; preds = %dec_label_pc_10006dbc
  %v3_10006dc8 = inttoptr i32 %v2_10006dc8 to i8*
  store i8 58, i8* %v3_10006dc8, align 1
  %v0_10006dcc = load i32, i32* %r29.global-to-local, align 4
  %v1_10006dcc = add i32 %v0_10006dcc, 1
  store i32 %v1_10006dcc, i32* %r29.global-to-local, align 4
  %v0_10006dd0.pre = load i32, i32* @r31, align 4
  %v1_10006dd0 = icmp slt i32 %v0_10006dd0.pre, 6
  %v3_10006dd0 = icmp eq i32 %v0_10006dd0.pre, 6
  store i1 %v1_10006dd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006dd0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006dd0, label %dec_label_pc_10006dd8, label %dec_label_pc_10006e34

dec_label_pc_10006dd8:                            ; preds = %dec_label_pc_10006dd0
  %v0_10006dd8 = load i32, i32* @r28, align 4
  %v1_10006dd8 = icmp slt i32 %v0_10006dd8, 0
  %v3_10006dd8 = icmp eq i32 %v0_10006dd8, 0
  store i1 %v1_10006dd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006dd8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006dd8, label %dec_label_pc_10006de0, label %dec_label_pc_10006e34

dec_label_pc_10006de0:                            ; preds = %dec_label_pc_10006dd8
  %v0_10006de0 = load i32, i32* @r30, align 4
  %v1_10006de0 = icmp slt i32 %v0_10006de0, 6
  %v3_10006de0 = icmp eq i32 %v0_10006de0, 6
  store i1 %v1_10006de0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006de0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006de0, label %dec_label_pc_10006e04, label %dec_label_pc_10006de8

dec_label_pc_10006de8:                            ; preds = %dec_label_pc_10006de0
  %v1_10006de8 = icmp slt i32 %v0_10006de0, 5
  %v3_10006de8 = icmp eq i32 %v0_10006de0, 5
  store i1 %v1_10006de8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006de8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006de8, label %dec_label_pc_10006df0, label %dec_label_pc_10006e34

dec_label_pc_10006df0:                            ; preds = %dec_label_pc_10006de8
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_10006dfc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006dfc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006dfc, label %dec_label_pc_10006e04, label %dec_label_pc_10006e34

dec_label_pc_10006e04:                            ; preds = %dec_label_pc_10006df0, %dec_label_pc_10006de0
  %v1_10006e04 = load i32, i32* @r1, align 4
  %v2_10006e04 = sub i32 %v1_10006e04, %v1_10006dcc
  %v0_10006e08 = load i32, i32* @r27, align 4
  %v1_10006e08 = add i32 %v0_10006e08, 12
  %v1_10006e0c = add i32 %v2_10006e04, 86
  store i32 ptrtoint ([3 x i8]* @global_var_10006e18.152 to i32), i32* @lr, align 4
  %v3_10006e14 = call i32 @inet_ntop4(i32 %v1_10006e08, i32 %v1_10006dcc, i32 %v1_10006e0c)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10006e1c = icmp slt i32 %v3_10006e14, 0
  %v3_10006e1c = icmp eq i32 %v3_10006e14, 0
  store i1 %v1_10006e1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e1c, label %dec_label_pc_10006ed4, label %dec_label_pc_10006e24

dec_label_pc_10006e24:                            ; preds = %dec_label_pc_10006e04
  %v0_10006e24 = load i32, i32* @r29, align 4
  store i32 %v0_10006e24, i32* @r3, align 4
  %v0_10006e28 = call i32 @__GI_strlen()
  %v0_10006e2c = load i32, i32* @r29, align 4
  %v2_10006e2c = add i32 %v0_10006e2c, %v0_10006e28
  store i32 %v2_10006e2c, i32* %r29.global-to-local, align 4
  %v0_10006e6c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006e6c

dec_label_pc_10006e34:                            ; preds = %dec_label_pc_10006dd0.thread, %dec_label_pc_10006df0, %dec_label_pc_10006de8, %dec_label_pc_10006dd8, %dec_label_pc_10006dd0
  %v0_10006e3467 = phi i32 [ 0, %dec_label_pc_10006dd0.thread ], [ 6, %dec_label_pc_10006df0 ], [ 6, %dec_label_pc_10006de8 ], [ 6, %dec_label_pc_10006dd8 ], [ %v0_10006dd0.pre, %dec_label_pc_10006dd0 ]
  %v0_10006e1066 = phi i32 [ %v2_10006dc8, %dec_label_pc_10006dd0.thread ], [ %v1_10006dcc, %dec_label_pc_10006df0 ], [ %v1_10006dcc, %dec_label_pc_10006de8 ], [ %v1_10006dcc, %dec_label_pc_10006dd8 ], [ %v1_10006dcc, %dec_label_pc_10006dd0 ]
  %v1_10006e34 = mul i32 %v0_10006e3467, 4
  store i32 %v2_10006c8c, i32* %r9.global-to-local, align 4
  %v2_10006e3c = add i32 %v1_10006e34, %v2_10006c8c
  %v3_10006e3c = inttoptr i32 %v2_10006e3c to i32*
  %v4_10006e3c = load i32, i32* %v3_10006e3c, align 4
  store i32 %v0_10006e1066, i32* @r3, align 4
  store i32 268463700, i32* @lr, align 4
  %v5_10006e50 = call i32 @sprintf(i32 %v0_10006e1066, i32 ptrtoint ([3 x i8]* @global_var_1000ac8c.153 to i32), i32 %v4_10006e3c, i32 %v2_10006c8c)
  %v0_10006e54 = load i32, i32* @r29, align 4
  %v2_10006e54 = add i32 %v0_10006e54, %v5_10006e50
  store i32 %v2_10006e54, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006e58

dec_label_pc_10006e58:                            ; preds = %dec_label_pc_10006da8, %dec_label_pc_10006dac, %dec_label_pc_10006e34
  %v2_10006db051 = phi i32 [ %v2_10006dc8, %dec_label_pc_10006da8 ], [ %v1_10006db4, %dec_label_pc_10006dac ], [ %v2_10006e54, %dec_label_pc_10006e34 ]
  %v0_10006e58 = load i32, i32* @r31, align 4
  %v1_10006e58 = add i32 %v0_10006e58, 1
  store i32 %v1_10006e58, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_10006e58, 8
  %v0_10006d8c = load i32, i32* @r28, align 4
  %v1_10006d8c = icmp slt i32 %v0_10006d8c, -1
  %v3_10006d8c = icmp eq i32 %v0_10006d8c, -1
  store i1 %v1_10006d8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_10006d8c, label %dec_label_pc_10006e64

dec_label_pc_10006e64:                            ; preds = %dec_label_pc_10006e58
  br i1 %v3_10006d8c, label %dec_label_pc_10006e84, label %dec_label_pc_10006e6c

dec_label_pc_10006e6c:                            ; preds = %dec_label_pc_10006e64, %dec_label_pc_10006e24
  %v2_10006e7c = phi i32 [ %v2_10006db051, %dec_label_pc_10006e64 ], [ %v2_10006e2c, %dec_label_pc_10006e24 ]
  %v0_10006e6c = phi i32 [ %v0_10006d8c, %dec_label_pc_10006e64 ], [ %v0_10006e6c.pre, %dec_label_pc_10006e24 ]
  %v1_10006e6c = load i32, i32* @r30, align 4
  %v2_10006e6c = add i32 %v1_10006e6c, %v0_10006e6c
  %v1_10006e70 = icmp slt i32 %v2_10006e6c, 8
  %v3_10006e70 = icmp eq i32 %v2_10006e6c, 8
  store i1 %v1_10006e70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e70, label %dec_label_pc_10006e78, label %dec_label_pc_10006e84

dec_label_pc_10006e78:                            ; preds = %dec_label_pc_10006e6c
  %v3_10006e7c = inttoptr i32 %v2_10006e7c to i8*
  store i8 58, i8* %v3_10006e7c, align 1
  %v0_10006e80 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006e80 = add i32 %v0_10006e80, 1
  store i32 %v1_10006e80, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006e84

dec_label_pc_10006e84:                            ; preds = %dec_label_pc_10006e6c, %dec_label_pc_10006e64, %dec_label_pc_10006e78
  %v2_10006e98 = phi i32 [ %v2_10006e7c, %dec_label_pc_10006e6c ], [ %v2_10006db051, %dec_label_pc_10006e64 ], [ %v1_10006e80, %dec_label_pc_10006e78 ]
  %v1_10006e84 = sub i32 1, %v2_10006d80
  %v2_10006e8c = add i32 %v1_10006e84, %v2_10006e98
  %v1_10006e90 = load i32, i32* @r26, align 4
  %v2_10006e90 = icmp ult i32 %v2_10006e8c, %v1_10006e90
  %v4_10006e90 = icmp eq i32 %v2_10006e8c, %v1_10006e90
  store i1 %v2_10006e90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006e90, i1* %cr7_eq.global-to-local, align 1
  %v3_10006e98 = inttoptr i32 %v2_10006e98 to i8*
  store i8 0, i8* %v3_10006e98, align 1
  %v0_10006e9c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10006e9c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10006e9c = or i1 %v0_10006e9c, %v1_10006e9c
  br i1 %v2_10006e9c, label %dec_label_pc_10006eb4, label %dec_label_pc_10006ea0

dec_label_pc_10006ea0:                            ; preds = %dec_label_pc_10006e84
  %v0_10006ea0 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10006eac = inttoptr i32 %v0_10006ea0 to i32*
  store i32 28, i32* %v2_10006eac, align 4
  %v0_10006ed8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ed4

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006e84
  %v0_10006eb4 = load i32, i32* @r25, align 4
  %v2_10006eb8 = bitcast i32* %stack_var_-88 to i8*
  %v3_10006eb8 = call i32 @strcpy(i32 %v0_10006eb4, i8* %v2_10006eb8)
  br label %dec_label_pc_10006ebc

dec_label_pc_10006ebc:                            ; preds = %dec_label_pc_10006c78, %dec_label_pc_10006eb4
  %storemerge1 = phi i32 [ %v3_10006c84, %dec_label_pc_10006c78 ], [ %v3_10006eb8, %dec_label_pc_10006eb4 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ed4

dec_label_pc_10006ec4:                            ; preds = %dec_label_pc_10006c6c
  %v0_10006ec4 = call i32 @__errno_location()
  %v2_10006ecc = inttoptr i32 %v0_10006ec4 to i32*
  store i32 97, i32* %v2_10006ecc, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ed4

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006e04, %dec_label_pc_10006ebc, %dec_label_pc_10006ea0, %dec_label_pc_10006ec4
  %v0_10006ed8 = phi i32 [ 0, %dec_label_pc_10006e04 ], [ %storemerge1, %dec_label_pc_10006ebc ], [ %v0_10006ed8.pre, %dec_label_pc_10006ea0 ], [ 0, %dec_label_pc_10006ec4 ]
  ret i32 %v0_10006ed8

; uselistorder directives
  uselistorder i32 %v2_10006e98, { 1, 0 }
  uselistorder i32 %v2_10006e6c, { 1, 0 }
  uselistorder i1 %v3_10006d8c, { 0, 2, 1 }
  uselistorder i32 %v0_10006d8c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10006e58, { 2, 1, 0 }
  uselistorder i32 %v0_10006e1066, { 1, 0 }
  uselistorder i32 %v3_10006e14, { 1, 0 }
  uselistorder i32 %v0_10006de0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10006dd0.pre, { 2, 0, 1 }
  uselistorder i32 %v1_10006dcc, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_10006d9c, { 1, 0 }
  uselistorder i32 %v0_10006dbc, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_10006d9c, { 0, 2, 1 }
  uselistorder i32 %v2_10006dc8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10006d8c3, { 0, 2, 1 }
  uselistorder i32 %v0_10006d74, { 2, 1, 0 }
  uselistorder i32 %v0_10006d64.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_10006d6c, { 1, 0, 2 }
  uselistorder i32 %v1_10006d48, { 2, 1, 0 }
  uselistorder i32 %v1_10006d44, { 1, 0 }
  uselistorder i32 %v0_10006d2839, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_10006d3842, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10006cfc, { 1, 0 }
  uselistorder i32 %v0_10006d44, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_10006cfc, { 1, 0 }
  uselistorder i32 %v0_10006d28, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_10006d38, { 2, 3, 0, 1 }
  uselistorder i32 %v1_10006cd8, { 1, 0 }
  uselistorder i32 %v2_10006cd0, { 1, 0 }
  uselistorder i32 %v0_10006cc8, { 1, 0, 2 }
  uselistorder i32 %v1_10006cb0, { 1, 0 }
  uselistorder i32 %v2_10006c8c, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 17, 9, 10, 16, 12, 18, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5 }
  uselistorder i32 65535, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10006ed4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10006ebc, { 1, 0 }
  uselistorder label %dec_label_pc_10006e84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006e58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006e34, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10006d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006d64, { 1, 0 }
  uselistorder label %dec_label_pc_10006d44, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006d40, { 1, 0 }
  uselistorder label %dec_label_pc_10006cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10006cb0, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_10006fd0, label %dec_label_pc_10006ef8

dec_label_pc_10006ef8:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_10006ef8 = add i32 %tmp, 2
  %v2_10006ef8 = inttoptr i32 %v1_10006ef8 to i8*
  %v3_10006ef8 = load i8, i8* %v2_10006ef8, align 1
  %v4_10006ef8 = zext i8 %v3_10006ef8 to i32
  store i32 %v4_10006ef8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_10006ef8, i8* %tmp3, align 1
  %v2_10006f04 = load i32, i32* %arg1, align 4
  store i32 %v2_10006f04, i32* %r0.global-to-local, align 4
  %v1_10006f08 = trunc i32 %v2_10006f04 to i8
  %v4_10006f08 = add i32 %arg2, 1
  %v5_10006f08 = inttoptr i32 %v4_10006f08 to i8*
  store i8 %v1_10006f08, i8* %v5_10006f08, align 1
  %v1_10006f0c = add i32 %tmp, 12
  %v2_10006f0c = inttoptr i32 %v1_10006f0c to i32*
  %v3_10006f0c = load i32, i32* %v2_10006f0c, align 4
  store i32 %v3_10006f0c, i32* %r0.global-to-local, align 4
  %v1_10006f10 = add i32 %tmp, 16
  %v2_10006f10 = inttoptr i32 %v1_10006f10 to i32*
  %v3_10006f10 = load i32, i32* %v2_10006f10, align 4
  store i32 %v3_10006f10, i32* %r11.global-to-local, align 4
  %v1_10006f14 = add i32 %tmp, 4
  %v2_10006f14 = inttoptr i32 %v1_10006f14 to i32*
  %v3_10006f14 = load i32, i32* %v2_10006f14, align 4
  %v2_10006f18 = icmp ne i32 %v3_10006f0c, 0
  %v5_10006f1c = zext i1 %v2_10006f18 to i32
  store i32 %v5_10006f1c, i32* %r10.global-to-local, align 4
  %v1_10006f20 = add i32 %tmp, 8
  %v2_10006f20 = inttoptr i32 %v1_10006f20 to i32*
  %v3_10006f20 = load i32, i32* %v2_10006f20, align 4
  %v2_10006f24 = icmp ne i32 %v3_10006f10, 0
  %v5_10006f28 = zext i1 %v2_10006f24 to i32
  %v1_10006f2c = add i32 %tmp, 20
  %v2_10006f2c = inttoptr i32 %v1_10006f2c to i32*
  %v3_10006f2c = load i32, i32* %v2_10006f2c, align 4
  store i32 %v3_10006f2c, i32* %r0.global-to-local, align 4
  %not.v2_10006f30 = icmp eq i32 %v3_10006f14, 0
  %v6_10006f34 = sext i1 %not.v2_10006f30 to i32
  store i32 %v5_10006f28, i32* %r11.global-to-local, align 4
  %v1_10006f3c = call i32 @__asm_rlwinm(i32 %v6_10006f34, i32 0, i32 24, i32 24)
  %v0_10006f40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006f40 = mul i32 %v0_10006f40, 4
  store i32 %v1_10006f40, i32* %r10.global-to-local, align 4
  %v1_10006f44 = call i32 @__asm_rlwinm(i32 %v3_10006f20, i32 3, i32 25, i32 28)
  %v0_10006f48 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006f48 = icmp ne i32 %v0_10006f48, 0
  %v5_10006f4c = zext i1 %v2_10006f48 to i32
  %v2_10006f50 = or i32 %v1_10006f40, %v1_10006f44
  store i32 %v2_10006f50, i32* %r10.global-to-local, align 4
  %v1_10006f54 = add i32 %v1_10006f3c, 128
  %v0_10006f58 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006f58 = mul i32 %v0_10006f58, 2
  store i32 %v1_10006f58, i32* %r11.global-to-local, align 4
  %v2_10006f5c = or i32 %v2_10006f50, %v5_10006f4c
  store i32 %v2_10006f5c, i32* %r0.global-to-local, align 4
  %v2_10006f60 = or i32 %v2_10006f5c, %v1_10006f54
  %v2_10006f64 = or i32 %v2_10006f60, %v1_10006f58
  %v1_10006f68 = trunc i32 %v2_10006f64 to i8
  %v4_10006f68 = add i32 %arg2, 2
  %v5_10006f68 = inttoptr i32 %v4_10006f68 to i8*
  store i8 %v1_10006f68, i8* %v5_10006f68, align 1
  %v1_10006f6c = add i32 %tmp, 24
  %v2_10006f6c = inttoptr i32 %v1_10006f6c to i32*
  %v3_10006f6c = load i32, i32* %v2_10006f6c, align 4
  %v1_10006f70 = add i32 %tmp, 28
  %v2_10006f70 = inttoptr i32 %v1_10006f70 to i32*
  %v3_10006f70 = load i32, i32* %v2_10006f70, align 4
  store i32 %v3_10006f70, i32* %r0.global-to-local, align 4
  %not.v2_10006f74 = icmp eq i32 %v3_10006f6c, 0
  %v6_10006f78 = sext i1 %not.v2_10006f74 to i32
  %v1_10006f7c = call i32 @__asm_rlwinm(i32 %v6_10006f78, i32 0, i32 24, i32 24)
  %v1_10006f80 = urem i32 %v3_10006f70, 16
  store i32 %v1_10006f80, i32* %r0.global-to-local, align 4
  %v1_10006f84 = add i32 %v1_10006f7c, 128
  %v2_10006f88 = or i32 %v1_10006f80, %v1_10006f84
  %v1_10006f8c = trunc i32 %v2_10006f88 to i8
  %v4_10006f8c = add i32 %arg2, 3
  %v5_10006f8c = inttoptr i32 %v4_10006f8c to i8*
  store i8 %v1_10006f8c, i8* %v5_10006f8c, align 1
  %v1_10006f90 = add i32 %tmp, 34
  %v2_10006f90 = inttoptr i32 %v1_10006f90 to i8*
  %v3_10006f90 = load i8, i8* %v2_10006f90, align 1
  %v4_10006f90 = zext i8 %v3_10006f90 to i32
  store i32 %v4_10006f90, i32* %r0.global-to-local, align 4
  %v4_10006f94 = add i32 %arg2, 4
  %v5_10006f94 = inttoptr i32 %v4_10006f94 to i8*
  store i8 %v3_10006f90, i8* %v5_10006f94, align 1
  %v1_10006f98 = add i32 %tmp, 32
  %v2_10006f98 = inttoptr i32 %v1_10006f98 to i32*
  %v3_10006f98 = load i32, i32* %v2_10006f98, align 4
  store i32 %v3_10006f98, i32* %r0.global-to-local, align 4
  %v1_10006f9c = trunc i32 %v3_10006f98 to i8
  %v4_10006f9c = add i32 %arg2, 5
  %v5_10006f9c = inttoptr i32 %v4_10006f9c to i8*
  store i8 %v1_10006f9c, i8* %v5_10006f9c, align 1
  %v1_10006fa0 = add i32 %tmp, 38
  %v2_10006fa0 = inttoptr i32 %v1_10006fa0 to i8*
  %v3_10006fa0 = load i8, i8* %v2_10006fa0, align 1
  %v4_10006fa0 = zext i8 %v3_10006fa0 to i32
  store i32 %v4_10006fa0, i32* %r0.global-to-local, align 4
  %v4_10006fa4 = add i32 %arg2, 6
  %v5_10006fa4 = inttoptr i32 %v4_10006fa4 to i8*
  store i8 %v3_10006fa0, i8* %v5_10006fa4, align 1
  %v1_10006fa8 = add i32 %tmp, 36
  %v2_10006fa8 = inttoptr i32 %v1_10006fa8 to i32*
  %v3_10006fa8 = load i32, i32* %v2_10006fa8, align 4
  store i32 %v3_10006fa8, i32* %r0.global-to-local, align 4
  %v1_10006fac = trunc i32 %v3_10006fa8 to i8
  %v4_10006fac = add i32 %arg2, 7
  %v5_10006fac = inttoptr i32 %v4_10006fac to i8*
  store i8 %v1_10006fac, i8* %v5_10006fac, align 1
  %v1_10006fb0 = add i32 %tmp, 42
  %v2_10006fb0 = inttoptr i32 %v1_10006fb0 to i8*
  %v3_10006fb0 = load i8, i8* %v2_10006fb0, align 1
  %v4_10006fb0 = zext i8 %v3_10006fb0 to i32
  store i32 %v4_10006fb0, i32* %r0.global-to-local, align 4
  %v4_10006fb4 = add i32 %arg2, 8
  %v5_10006fb4 = inttoptr i32 %v4_10006fb4 to i8*
  store i8 %v3_10006fb0, i8* %v5_10006fb4, align 1
  %v1_10006fb8 = add i32 %tmp, 40
  %v2_10006fb8 = inttoptr i32 %v1_10006fb8 to i32*
  %v3_10006fb8 = load i32, i32* %v2_10006fb8, align 4
  store i32 %v3_10006fb8, i32* %r0.global-to-local, align 4
  %v1_10006fbc = trunc i32 %v3_10006fb8 to i8
  %v4_10006fbc = add i32 %arg2, 9
  %v5_10006fbc = inttoptr i32 %v4_10006fbc to i8*
  store i8 %v1_10006fbc, i8* %v5_10006fbc, align 1
  %v1_10006fc0 = add i32 %tmp, 46
  %v2_10006fc0 = inttoptr i32 %v1_10006fc0 to i8*
  %v3_10006fc0 = load i8, i8* %v2_10006fc0, align 1
  %v4_10006fc0 = zext i8 %v3_10006fc0 to i32
  store i32 %v4_10006fc0, i32* %r0.global-to-local, align 4
  %v4_10006fc4 = add i32 %arg2, 10
  %v5_10006fc4 = inttoptr i32 %v4_10006fc4 to i8*
  store i8 %v3_10006fc0, i8* %v5_10006fc4, align 1
  %v1_10006fc8 = add i32 %tmp, 44
  %v2_10006fc8 = inttoptr i32 %v1_10006fc8 to i32*
  %v3_10006fc8 = load i32, i32* %v2_10006fc8, align 4
  store i32 %v3_10006fc8, i32* %r0.global-to-local, align 4
  %v1_10006fcc = trunc i32 %v3_10006fc8 to i8
  %v4_10006fcc = add i32 %arg2, 11
  %v5_10006fcc = inttoptr i32 %v4_10006fcc to i8*
  store i8 %v1_10006fcc, i8* %v5_10006fcc, align 1
  %v0_10006fd0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10006fd0

dec_label_pc_10006fd0:                            ; preds = %entry, %dec_label_pc_10006ef8
  %v0_10006fd0 = phi i32 [ -1, %entry ], [ %v0_10006fd0.pre, %dec_label_pc_10006ef8 ]
  ret i32 %v0_10006fd0

; uselistorder directives
  uselistorder i32 %v1_10006f80, { 1, 0 }
  uselistorder i32 %v1_10006f58, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder label %dec_label_pc_10006fd0, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10006fd8 = load i8, i8* %arg1, align 1
  %v4_10006fd8 = zext i8 %v3_10006fd8 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10006fe0 = add i32 %tmp, 1
  %v3_10006fe0 = inttoptr i32 %v2_10006fe0 to i8*
  %v4_10006fe0 = load i8, i8* %v3_10006fe0, align 1
  %v5_10006fe0 = zext i8 %v4_10006fe0 to i32
  %v1_10006fe8 = mul nuw nsw i32 %v4_10006fd8, 256
  %v2_10006fec = or i32 %v5_10006fe0, %v1_10006fe8
  %v2_10006ff0 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10006fec, i32* %v2_10006ff0, align 4
  %v0_10006ff4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006ff4 = add i32 %v0_10006ff4, 2
  %v2_10006ff4 = inttoptr i32 %v1_10006ff4 to i8*
  %v3_10006ff4 = load i8, i8* %v2_10006ff4, align 1
  %v4_10006ff4 = zext i8 %v3_10006ff4 to i32
  %v1_10006ff8 = call i32 @__asm_rlwinm(i32 %v4_10006ff4, i32 25, i32 31, i32 31)
  %v2_10006ffc = add i32 %arg2, 4
  %v3_10006ffc = inttoptr i32 %v2_10006ffc to i32*
  store i32 %v1_10006ff8, i32* %v3_10006ffc, align 4
  %v0_10007000 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007000 = add i32 %v0_10007000, 2
  %v2_10007000 = inttoptr i32 %v1_10007000 to i8*
  %v3_10007000 = load i8, i8* %v2_10007000, align 1
  %v4_10007000 = zext i8 %v3_10007000 to i32
  %v1_10007004 = call i32 @__asm_rlwinm(i32 %v4_10007000, i32 29, i32 28, i32 31)
  %v2_10007008 = add i32 %arg2, 8
  %v3_10007008 = inttoptr i32 %v2_10007008 to i32*
  store i32 %v1_10007004, i32* %v3_10007008, align 4
  %v0_1000700c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000700c = add i32 %v0_1000700c, 2
  %v2_1000700c = inttoptr i32 %v1_1000700c to i8*
  %v3_1000700c = load i8, i8* %v2_1000700c, align 1
  %v4_1000700c = zext i8 %v3_1000700c to i32
  %v1_10007010 = call i32 @__asm_rlwinm(i32 %v4_1000700c, i32 30, i32 31, i32 31)
  %v2_10007014 = add i32 %arg2, 12
  %v3_10007014 = inttoptr i32 %v2_10007014 to i32*
  store i32 %v1_10007010, i32* %v3_10007014, align 4
  %v0_10007018 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007018 = add i32 %v0_10007018, 2
  %v2_10007018 = inttoptr i32 %v1_10007018 to i8*
  %v3_10007018 = load i8, i8* %v2_10007018, align 1
  %v4_10007018 = zext i8 %v3_10007018 to i32
  %v1_1000701c = call i32 @__asm_rlwinm(i32 %v4_10007018, i32 31, i32 31, i32 31)
  %v2_10007020 = add i32 %arg2, 16
  %v3_10007020 = inttoptr i32 %v2_10007020 to i32*
  store i32 %v1_1000701c, i32* %v3_10007020, align 4
  %v0_10007024 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007024 = add i32 %v0_10007024, 2
  %v2_10007024 = inttoptr i32 %v1_10007024 to i8*
  %v3_10007024 = load i8, i8* %v2_10007024, align 1
  %tmp1 = urem i8 %v3_10007024, 2
  %v1_10007028 = zext i8 %tmp1 to i32
  %v2_1000702c = add i32 %arg2, 20
  %v3_1000702c = inttoptr i32 %v2_1000702c to i32*
  store i32 %v1_10007028, i32* %v3_1000702c, align 4
  %v0_10007030 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007030 = add i32 %v0_10007030, 3
  %v2_10007030 = inttoptr i32 %v1_10007030 to i8*
  %v3_10007030 = load i8, i8* %v2_10007030, align 1
  %v4_10007030 = zext i8 %v3_10007030 to i32
  %v1_10007034 = call i32 @__asm_rlwinm(i32 %v4_10007030, i32 25, i32 31, i32 31)
  %v2_10007038 = add i32 %arg2, 24
  %v3_10007038 = inttoptr i32 %v2_10007038 to i32*
  store i32 %v1_10007034, i32* %v3_10007038, align 4
  %v0_1000703c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000703c = add i32 %v0_1000703c, 3
  %v2_1000703c = inttoptr i32 %v1_1000703c to i8*
  %v3_1000703c = load i8, i8* %v2_1000703c, align 1
  %tmp2 = urem i8 %v3_1000703c, 16
  %v1_10007040 = zext i8 %tmp2 to i32
  %v2_10007044 = add i32 %arg2, 28
  %v3_10007044 = inttoptr i32 %v2_10007044 to i32*
  store i32 %v1_10007040, i32* %v3_10007044, align 4
  %v0_10007048 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007048 = add i32 %v0_10007048, 4
  %v2_10007048 = inttoptr i32 %v1_10007048 to i8*
  %v3_10007048 = load i8, i8* %v2_10007048, align 1
  %v4_10007048 = zext i8 %v3_10007048 to i32
  %v1_1000704c = add i32 %v0_10007048, 5
  %v2_1000704c = inttoptr i32 %v1_1000704c to i8*
  %v3_1000704c = load i8, i8* %v2_1000704c, align 1
  %v4_1000704c = zext i8 %v3_1000704c to i32
  %v1_10007050 = mul nuw nsw i32 %v4_10007048, 256
  %v2_10007054 = or i32 %v4_1000704c, %v1_10007050
  %v2_10007058 = add i32 %arg2, 32
  %v3_10007058 = inttoptr i32 %v2_10007058 to i32*
  store i32 %v2_10007054, i32* %v3_10007058, align 4
  %v0_1000705c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000705c = add i32 %v0_1000705c, 6
  %v2_1000705c = inttoptr i32 %v1_1000705c to i8*
  %v3_1000705c = load i8, i8* %v2_1000705c, align 1
  %v4_1000705c = zext i8 %v3_1000705c to i32
  %v1_10007060 = add i32 %v0_1000705c, 7
  %v2_10007060 = inttoptr i32 %v1_10007060 to i8*
  %v3_10007060 = load i8, i8* %v2_10007060, align 1
  %v4_10007060 = zext i8 %v3_10007060 to i32
  %v1_10007064 = mul nuw nsw i32 %v4_1000705c, 256
  %v2_10007068 = or i32 %v4_10007060, %v1_10007064
  %v2_1000706c = add i32 %arg2, 36
  %v3_1000706c = inttoptr i32 %v2_1000706c to i32*
  store i32 %v2_10007068, i32* %v3_1000706c, align 4
  %v0_10007070 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007070 = add i32 %v0_10007070, 8
  %v2_10007070 = inttoptr i32 %v1_10007070 to i8*
  %v3_10007070 = load i8, i8* %v2_10007070, align 1
  %v4_10007070 = zext i8 %v3_10007070 to i32
  %v1_10007074 = add i32 %v0_10007070, 9
  %v2_10007074 = inttoptr i32 %v1_10007074 to i8*
  %v3_10007074 = load i8, i8* %v2_10007074, align 1
  %v4_10007074 = zext i8 %v3_10007074 to i32
  %v1_10007078 = mul nuw nsw i32 %v4_10007070, 256
  %v2_1000707c = or i32 %v4_10007074, %v1_10007078
  %v2_10007080 = add i32 %arg2, 40
  %v3_10007080 = inttoptr i32 %v2_10007080 to i32*
  store i32 %v2_1000707c, i32* %v3_10007080, align 4
  %v0_10007084 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007084 = add i32 %v0_10007084, 10
  %v2_10007084 = inttoptr i32 %v1_10007084 to i8*
  %v3_10007084 = load i8, i8* %v2_10007084, align 1
  %v4_10007084 = zext i8 %v3_10007084 to i32
  %v1_10007088 = add i32 %v0_10007084, 11
  %v2_10007088 = inttoptr i32 %v1_10007088 to i8*
  %v3_10007088 = load i8, i8* %v2_10007088, align 1
  %v4_10007088 = zext i8 %v3_10007088 to i32
  store i32 %v4_10007088, i32* %r9.global-to-local, align 4
  %v1_1000708c = mul nuw nsw i32 %v4_10007084, 256
  %v2_10007090 = or i32 %v4_10007088, %v1_1000708c
  %v2_10007094 = add i32 %arg2, 44
  %v3_10007094 = inttoptr i32 %v2_10007094 to i32*
  store i32 %v2_10007090, i32* %v3_10007094, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_100070b8 = load i32, i32* %arg1, align 4
  store i32 %v2_100070b8, i32* %r3.global-to-local, align 4
  store i32 268464320, i32* @lr, align 4
  %v1_100070bc = inttoptr i32 %v2_100070b8 to i8*
  %v2_100070bc = call i32 @__encode_dotted(i8* %v1_100070bc)
  store i32 %v2_100070bc, i32* %r3.global-to-local, align 4
  %v1_100070c0 = icmp slt i32 %v2_100070bc, 0
  %v1_100070c4 = load i32, i32* @r29, align 4
  %v2_100070c4 = sub i32 %v1_100070c4, %v2_100070bc
  store i32 %v2_100070c4, i32* @r29, align 4
  br i1 %v1_100070c0, label %dec_label_pc_10007104, label %dec_label_pc_100070d0

dec_label_pc_100070d0:                            ; preds = %entry
  %v2_100070c8 = icmp sgt i32 %v2_100070c4, 3
  %v0_100070d0 = load i32, i32* @r30, align 4
  %v2_100070d0 = add i32 %v0_100070d0, %v2_100070bc
  store i32 %v2_100070d0, i32* %r9.global-to-local, align 4
  br i1 %v2_100070c8, label %dec_label_pc_100070e0, label %dec_label_pc_100070d8

dec_label_pc_100070d8:                            ; preds = %dec_label_pc_100070d0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007104

dec_label_pc_100070e0:                            ; preds = %dec_label_pc_100070d0
  %v0_100070e0 = load i32, i32* @r31, align 4
  %v1_100070e0 = add i32 %v0_100070e0, 6
  %v2_100070e0 = inttoptr i32 %v1_100070e0 to i8*
  %v3_100070e0 = load i8, i8* %v2_100070e0, align 1
  %v5_100070e4 = inttoptr i32 %v2_100070d0 to i8*
  store i8 %v3_100070e0, i8* %v5_100070e4, align 1
  %v0_100070e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100070e8 = add i32 %v0_100070e8, 4
  store i32 %v1_100070e8, i32* %r3.global-to-local, align 4
  %v0_100070ec = load i32, i32* @r31, align 4
  %v1_100070ec = add i32 %v0_100070ec, 4
  %v2_100070ec = inttoptr i32 %v1_100070ec to i32*
  %v3_100070ec = load i32, i32* %v2_100070ec, align 4
  %v1_100070f0 = trunc i32 %v3_100070ec to i8
  %v2_100070f0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100070f0 = add i32 %v2_100070f0, 1
  %v4_100070f0 = inttoptr i32 %v3_100070f0 to i8*
  store i8 %v1_100070f0, i8* %v4_100070f0, align 1
  %v0_100070f4 = load i32, i32* @r31, align 4
  %v1_100070f4 = add i32 %v0_100070f4, 10
  %v2_100070f4 = inttoptr i32 %v1_100070f4 to i8*
  %v3_100070f4 = load i8, i8* %v2_100070f4, align 1
  %v2_100070f8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100070f8 = add i32 %v2_100070f8, 2
  %v4_100070f8 = inttoptr i32 %v3_100070f8 to i8*
  store i8 %v3_100070f4, i8* %v4_100070f8, align 1
  %v0_100070fc = load i32, i32* @r31, align 4
  %v1_100070fc = add i32 %v0_100070fc, 8
  %v2_100070fc = inttoptr i32 %v1_100070fc to i32*
  %v3_100070fc = load i32, i32* %v2_100070fc, align 4
  %v1_10007100 = trunc i32 %v3_100070fc to i8
  %v2_10007100 = load i32, i32* %r9.global-to-local, align 4
  %v3_10007100 = add i32 %v2_10007100, 3
  %v4_10007100 = inttoptr i32 %v3_10007100 to i8*
  store i8 %v1_10007100, i8* %v4_10007100, align 1
  %v0_10007114.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007104

dec_label_pc_10007104:                            ; preds = %entry, %dec_label_pc_100070d8, %dec_label_pc_100070e0
  %v0_10007114 = phi i32 [ %v2_100070bc, %entry ], [ -1, %dec_label_pc_100070d8 ], [ %v0_10007114.pre, %dec_label_pc_100070e0 ]
  ret i32 %v0_10007114

; uselistorder directives
  uselistorder i32 %v2_100070bc, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_10007104, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268464424, i32* @lr, align 4
  %v0_10007124 = call i32 @__length_dotted()
  %v1_10007128 = icmp slt i32 %v0_10007124, 0
  br i1 %v1_10007128, label %dec_label_pc_10007134, label %dec_label_pc_10007130

dec_label_pc_10007130:                            ; preds = %entry
  %v1_10007130 = add i32 %v0_10007124, 4
  br label %dec_label_pc_10007134

dec_label_pc_10007134:                            ; preds = %entry, %dec_label_pc_10007130
  %v0_10007140 = phi i32 [ %v0_10007124, %entry ], [ %v1_10007130, %dec_label_pc_10007130 ]
  ret i32 %v0_10007140

; uselistorder directives
  uselistorder label %dec_label_pc_10007134, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10007148 = load i32, i32* @lr, align 4
  store i32 %v0_10007148, i32* %r0.global-to-local, align 4
  %v2_10007150 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10007150, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268464500, i32* @lr, align 4
  %v2_10007170 = call i32 @__decode_dotted(i32 %v2_10007150, i32 256)
  store i32 %v2_10007170, i32* @r27, align 4
  %v1_10007174 = icmp slt i32 %v2_10007170, 0
  %v0_10007178 = load i32, i32* @r28, align 4
  %v2_10007178 = add i32 %v0_10007178, %v2_10007170
  store i32 %v2_10007178, i32* @r28, align 4
  %v1_1000717c = load i32, i32* @r29, align 4
  %v2_1000717c = sub i32 %v1_1000717c, %v2_10007178
  %v1_10007180 = add i32 %v2_1000717c, -10
  br i1 %v1_10007174, label %dec_label_pc_1000723c, label %dec_label_pc_1000718c

dec_label_pc_1000718c:                            ; preds = %entry
  %v0_10007190 = load i32, i32* @r26, align 4
  %v2_10007190 = add i32 %v0_10007190, %v2_10007178
  store i32 %v2_10007190, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10007180, -1
  br i1 %tmp6, label %dec_label_pc_100071a0, label %dec_label_pc_10007198

dec_label_pc_10007198:                            ; preds = %dec_label_pc_1000718c
  store i32 %v1_10007180, i32* @r27, align 4
  br label %dec_label_pc_1000723c

dec_label_pc_100071a0:                            ; preds = %dec_label_pc_1000718c
  store i32 268464548, i32* @lr, align 4
  %v1_100071a0 = call i32 @__GI_strdup(i32 %v2_10007150)
  %v0_100071a4 = load i32, i32* @r30, align 4
  %v1_100071a4 = add i32 %v0_100071a4, 2
  store i32 %v1_100071a4, i32* %r8.global-to-local, align 4
  %v1_100071a8 = load i32, i32* @r31, align 4
  %v2_100071a8 = inttoptr i32 %v1_100071a8 to i32*
  store i32 %v1_100071a0, i32* %v2_100071a8, align 4
  %v0_100071ac = load i32, i32* %r8.global-to-local, align 4
  %v1_100071ac = add i32 %v0_100071ac, 2
  store i32 %v1_100071ac, i32* %r10.global-to-local, align 4
  %v0_100071b0 = load i32, i32* @r30, align 4
  %v1_100071b0 = add i32 %v0_100071b0, 10
  store i32 %v1_100071b0, i32* %r6.global-to-local, align 4
  %v0_100071b4 = load i32, i32* @r26, align 4
  %v1_100071b4 = load i32, i32* @r28, align 4
  %v2_100071b4 = add i32 %v1_100071b4, %v0_100071b4
  %v3_100071b4 = inttoptr i32 %v2_100071b4 to i8*
  %v4_100071b4 = load i8, i8* %v3_100071b4, align 1
  %v5_100071b4 = zext i8 %v4_100071b4 to i32
  store i32 %v5_100071b4, i32* %r0.global-to-local, align 4
  %v1_100071b8 = add i32 %v0_100071b0, 1
  %v2_100071b8 = inttoptr i32 %v1_100071b8 to i8*
  %v3_100071b8 = load i8, i8* %v2_100071b8, align 1
  %v4_100071b8 = zext i8 %v3_100071b8 to i32
  store i32 %v4_100071b8, i32* %r9.global-to-local, align 4
  %v1_100071bc = mul nuw nsw i32 %v5_100071b4, 256
  %v2_100071c0 = or i32 %v4_100071b8, %v1_100071bc
  store i32 %v2_100071c0, i32* %r0.global-to-local, align 4
  %v1_100071c4 = load i32, i32* @r31, align 4
  %v2_100071c4 = add i32 %v1_100071c4, 4
  %v3_100071c4 = inttoptr i32 %v2_100071c4 to i32*
  store i32 %v2_100071c0, i32* %v3_100071c4, align 4
  %v0_100071c8 = load i32, i32* @r30, align 4
  %v1_100071c8 = add i32 %v0_100071c8, 2
  %v2_100071c8 = inttoptr i32 %v1_100071c8 to i8*
  %v3_100071c8 = load i8, i8* %v2_100071c8, align 1
  %v4_100071c8 = zext i8 %v3_100071c8 to i32
  store i32 %v4_100071c8, i32* %r0.global-to-local, align 4
  %v0_100071cc = load i32, i32* %r8.global-to-local, align 4
  %v1_100071cc = add i32 %v0_100071cc, 1
  %v2_100071cc = inttoptr i32 %v1_100071cc to i8*
  %v3_100071cc = load i8, i8* %v2_100071cc, align 1
  %v4_100071cc = zext i8 %v3_100071cc to i32
  store i32 %v4_100071cc, i32* %r9.global-to-local, align 4
  %v1_100071d0 = mul nuw nsw i32 %v4_100071c8, 256
  %v2_100071d4 = or i32 %v4_100071cc, %v1_100071d0
  store i32 %v2_100071d4, i32* %r0.global-to-local, align 4
  %v1_100071d8 = load i32, i32* @r31, align 4
  %v2_100071d8 = add i32 %v1_100071d8, 8
  %v3_100071d8 = inttoptr i32 %v2_100071d8 to i32*
  store i32 %v2_100071d4, i32* %v3_100071d8, align 4
  %v0_100071dc = load i32, i32* %r8.global-to-local, align 4
  %v1_100071dc = add i32 %v0_100071dc, 2
  %v2_100071dc = inttoptr i32 %v1_100071dc to i8*
  %v3_100071dc = load i8, i8* %v2_100071dc, align 1
  %v4_100071dc = zext i8 %v3_100071dc to i32
  store i32 %v4_100071dc, i32* %r0.global-to-local, align 4
  %v0_100071e0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100071e0 = add i32 %v0_100071e0, 1
  %v2_100071e0 = inttoptr i32 %v1_100071e0 to i8*
  %v3_100071e0 = load i8, i8* %v2_100071e0, align 1
  %v4_100071e0 = zext i8 %v3_100071e0 to i32
  store i32 %v4_100071e0, i32* %r11.global-to-local, align 4
  %v1_100071e4 = add i32 %v0_100071e0, 3
  %v2_100071e4 = inttoptr i32 %v1_100071e4 to i8*
  %v3_100071e4 = load i8, i8* %v2_100071e4, align 1
  %v4_100071e4 = zext i8 %v3_100071e4 to i32
  %v1_100071e8 = mul nuw i32 %v4_100071dc, 16777216
  store i32 %v1_100071e8, i32* %r0.global-to-local, align 4
  %v1_100071ec = add i32 %v0_100071e0, 2
  %v2_100071ec = inttoptr i32 %v1_100071ec to i8*
  %v3_100071ec = load i8, i8* %v2_100071ec, align 1
  %v4_100071ec = zext i8 %v3_100071ec to i32
  %v1_100071f0 = mul nuw nsw i32 %v4_100071e0, 65536
  %v2_100071f4 = or i32 %v1_100071f0, %v1_100071e8
  %v0_100071f8 = load i32, i32* @r28, align 4
  %v1_100071f8 = add i32 %v0_100071f8, 10
  store i32 %v1_100071f8, i32* %r11.global-to-local, align 4
  %v2_100071fc = or i32 %v2_100071f4, %v4_100071e4
  store i32 %v2_100071fc, i32* %r0.global-to-local, align 4
  %v1_10007200 = mul nuw nsw i32 %v4_100071ec, 256
  %v2_10007204 = or i32 %v1_10007200, %v2_100071fc
  store i32 %v2_10007204, i32* %r9.global-to-local, align 4
  %v1_10007208 = load i32, i32* @r31, align 4
  %v2_10007208 = add i32 %v1_10007208, 12
  %v3_10007208 = inttoptr i32 %v2_10007208 to i32*
  store i32 %v2_10007204, i32* %v3_10007208, align 4
  %v0_1000720c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000720c = add i32 %v0_1000720c, 6
  %v2_1000720c = inttoptr i32 %v1_1000720c to i8*
  %v3_1000720c = load i8, i8* %v2_1000720c, align 1
  %v4_1000720c = zext i8 %v3_1000720c to i32
  store i32 %v4_1000720c, i32* %r9.global-to-local, align 4
  %v0_10007210 = load i32, i32* @r30, align 4
  %v1_10007210 = add i32 %v0_10007210, 9
  %v2_10007210 = inttoptr i32 %v1_10007210 to i8*
  %v3_10007210 = load i8, i8* %v2_10007210, align 1
  %v4_10007210 = zext i8 %v3_10007210 to i32
  store i32 %v4_10007210, i32* %r0.global-to-local, align 4
  %v1_10007214 = mul nuw nsw i32 %v4_1000720c, 256
  store i32 %v1_10007214, i32* %r9.global-to-local, align 4
  %v0_10007218 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007218 = load i32, i32* @r31, align 4
  %v2_10007218 = add i32 %v1_10007218, 24
  %v3_10007218 = inttoptr i32 %v2_10007218 to i32*
  store i32 %v0_10007218, i32* %v3_10007218, align 4
  %v0_1000721c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000721c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000721c = or i32 %v1_1000721c, %v0_1000721c
  store i32 %v2_1000721c, i32* %r9.global-to-local, align 4
  %v0_10007220 = load i32, i32* %r6.global-to-local, align 4
  %v1_10007220 = load i32, i32* @r31, align 4
  %v2_10007220 = add i32 %v1_10007220, 20
  %v3_10007220 = inttoptr i32 %v2_10007220 to i32*
  store i32 %v0_10007220, i32* %v3_10007220, align 4
  %v0_10007224 = load i32, i32* @r29, align 4
  %v1_10007224 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007224 = icmp slt i32 %v0_10007224, %v1_10007224
  %v1_10007228 = add i32 %v1_10007224, 10
  store i32 %v1_10007228, i32* %r0.global-to-local, align 4
  %v0_1000722c = load i32, i32* @r27, align 4
  %v2_1000722c = add i32 %v0_1000722c, %v1_10007228
  store i32 %v2_1000722c, i32* @r27, align 4
  %v1_10007230 = load i32, i32* @r31, align 4
  %v2_10007230 = add i32 %v1_10007230, 16
  %v3_10007230 = inttoptr i32 %v2_10007230 to i32*
  store i32 %v1_10007224, i32* %v3_10007230, align 4
  br i1 %v2_10007224, label %dec_label_pc_10007238, label %dec_label_pc_100071a0.dec_label_pc_1000723c_crit_edge

dec_label_pc_100071a0.dec_label_pc_1000723c_crit_edge: ; preds = %dec_label_pc_100071a0
  %v0_10007240.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000723c

dec_label_pc_10007238:                            ; preds = %dec_label_pc_100071a0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000723c

dec_label_pc_1000723c:                            ; preds = %dec_label_pc_100071a0.dec_label_pc_1000723c_crit_edge, %entry, %dec_label_pc_10007198, %dec_label_pc_10007238
  %v0_10007240 = phi i32 [ %v0_10007240.pre, %dec_label_pc_100071a0.dec_label_pc_1000723c_crit_edge ], [ %v2_10007170, %entry ], [ %v1_10007180, %dec_label_pc_10007198 ], [ -1, %dec_label_pc_10007238 ]
  store i32 %v0_10007148, i32* %r0.global-to-local, align 4
  ret i32 %v0_10007240

; uselistorder directives
  uselistorder i32 %v1_10007224, { 1, 0, 2 }
  uselistorder i32 %v1_100071e8, { 1, 0 }
  uselistorder i32 %v1_10007180, { 1, 2, 0 }
  uselistorder i32 %v2_10007170, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10007150, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000723c, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_10007258 = load i32, i32* @lr, align 4
  store i32 268464764, i32* @lr, align 4
  %v3_10007278 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1000ac90.156 to i32), i32 ptrtoint (i32* @global_var_1000ac14.113 to i32))
  %v3_10007280 = icmp eq i32 %v3_10007278, 0
  br i1 %v3_10007280, label %dec_label_pc_10007288, label %dec_label_pc_100072a4

dec_label_pc_10007288:                            ; preds = %entry
  %v0_1000727c = load i32, i32* @r29, align 4
  store i32 %v0_10007258, i32* @lr, align 4
  %v3_100072a0 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1000ac9c.157 to i32), i32 %v0_1000727c)
  br label %dec_label_pc_100072a4

dec_label_pc_100072a4:                            ; preds = %entry, %dec_label_pc_10007288
  %v0_100072b4 = phi i32 [ %v3_10007278, %entry ], [ %v3_100072a0, %dec_label_pc_10007288 ]
  ret i32 %v0_100072b4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100072a4, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_100072b8 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_100072cc = sub i32 0, %arg6
  %v1_100072d0 = urem i32 %v1_100072cc, 4
  store i32 %v1_100072d0, i32* %r0.global-to-local, align 4
  %v3_100072d0 = icmp eq i32 %v1_100072d0, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_100072e8 = load i32, i32* @r10, align 4
  store i32 %v0_100072e8, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_10007304.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_100072d0, label %dec_label_pc_10007304, label %dec_label_pc_100072f4

dec_label_pc_100072f4:                            ; preds = %entry
  %v2_100072f4 = icmp ult i32 %v0_10007304.pr, %v1_100072d0
  br i1 %v2_100072f4, label %dec_label_pc_100075b8, label %dec_label_pc_100072fc

dec_label_pc_100072fc:                            ; preds = %dec_label_pc_100072f4
  %v2_100072fc = sub i32 %v0_10007304.pr, %v1_100072d0
  store i32 %v2_100072fc, i32* %r9.global-to-local, align 4
  %v2_10007300 = add i32 %v1_100072d0, %arg6
  store i32 %v2_10007300, i32* @r30, align 4
  br label %dec_label_pc_10007304

dec_label_pc_10007304:                            ; preds = %entry, %dec_label_pc_100072fc
  %v0_10007310 = phi i32 [ %v2_10007300, %dec_label_pc_100072fc ], [ %arg6, %entry ]
  %v0_10007314 = phi i32 [ %v2_100072fc, %dec_label_pc_100072fc ], [ %v0_10007304.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_10007314, 32
  br i1 %tmp49, label %dec_label_pc_100075b8, label %dec_label_pc_1000730c

dec_label_pc_1000730c:                            ; preds = %dec_label_pc_10007304
  %v3_1000730c = icmp eq i32 %arg4, 1
  %v1_10007310 = add i32 %v0_10007310, 32
  store i32 %v1_10007310, i32* @r24, align 4
  %v1_10007314 = add i32 %v0_10007314, -32
  store i32 %v1_10007314, i32* @r27, align 4
  br i1 %v3_1000730c, label %dec_label_pc_10007414, label %dec_label_pc_1000731c

dec_label_pc_1000731c:                            ; preds = %dec_label_pc_1000730c
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10007324 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10007324, align 4
  %tmp50 = icmp ult i32 %v1_10007314, 4
  br i1 %tmp50, label %dec_label_pc_100075b8, label %dec_label_pc_1000732c

dec_label_pc_1000732c:                            ; preds = %dec_label_pc_1000731c
  %v0_1000732c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000732c = add i32 %v0_1000732c, -36
  store i32 %v1_1000732c, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000732c, 8
  br i1 %tmp51, label %dec_label_pc_100075b8, label %dec_label_pc_10007338

dec_label_pc_10007338:                            ; preds = %dec_label_pc_1000732c
  %v0_10007338 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10007338, 16
  br i1 %tmp52, label %dec_label_pc_100075b8, label %dec_label_pc_10007340

dec_label_pc_10007340:                            ; preds = %dec_label_pc_10007338
  %v1_10007340 = add i32 %v0_1000732c, -48
  store i32 %v1_10007340, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10007340, 8
  br i1 %tmp53, label %dec_label_pc_100075b8, label %dec_label_pc_1000734c

dec_label_pc_1000734c:                            ; preds = %dec_label_pc_10007340
  %v1_1000734c = add i32 %v0_1000732c, -56
  store i32 %v1_1000734c, i32* %r0.global-to-local, align 4
  %v1_10007350 = add i32 %v0_1000732c, -44
  store i32 %v1_10007350, i32* @r27, align 4
  %v3_10007354 = icmp ugt i32 %v1_1000734c, %v1_10007350
  %v0_10007358 = load i32, i32* @r30, align 4
  %v1_10007358 = add i32 %v0_10007358, 36
  store i32 %v1_10007358, i32* @r29, align 4
  %v1_1000735c = add i32 %v0_10007358, 48
  store i32 %v1_1000735c, i32* @r26, align 4
  br i1 %v3_10007354, label %dec_label_pc_10007370, label %dec_label_pc_10007368

dec_label_pc_10007368:                            ; preds = %dec_label_pc_1000734c
  store i32 %v1_1000734c, i32* @r27, align 4
  br label %dec_label_pc_10007370

dec_label_pc_10007370:                            ; preds = %dec_label_pc_1000734c, %dec_label_pc_10007368
  %v0_10007370 = phi i32 [ %v1_1000734c, %dec_label_pc_10007368 ], [ %v1_10007350, %dec_label_pc_1000734c ]
  %tmp54 = icmp ult i32 %v0_10007370, 80
  br i1 %tmp54, label %dec_label_pc_100075b8, label %dec_label_pc_10007378

dec_label_pc_10007378:                            ; preds = %dec_label_pc_10007370
  store i32 268465020, i32* @lr, align 4
  %v0_10007378 = call i32 @__open_etc_hosts()
  store i32 %v0_10007378, i32* @r20, align 4
  %v3_1000737c = icmp eq i32 %v0_10007378, 0
  br i1 %v3_1000737c, label %dec_label_pc_1000739c, label %dec_label_pc_10007384

dec_label_pc_10007384:                            ; preds = %dec_label_pc_10007378
  %v0_10007384 = load i32, i32* @r24, align 4
  store i32 %v0_10007384, i32* @r25, align 4
  %v0_1000738c = load i32, i32* @r26, align 4
  store i32 %v0_1000738c, i32* @r23, align 4
  %v0_10007390 = load i32, i32* @r31, align 4
  store i32 %v0_10007390, i32* @r24, align 4
  store i32 %v0_10007384, i32* %r21.global-to-local, align 4
  %v1_1000742c.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10007424

dec_label_pc_1000739c:                            ; preds = %dec_label_pc_10007378
  %v1_1000739c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000739c = inttoptr i32 %v1_1000739c to i32*
  store i32 0, i32* %v2_1000739c, align 4
  %v0_100073a0 = call i32 @__errno_location()
  %v1_100073a4 = inttoptr i32 %v0_100073a0 to i32*
  %v2_100073a4 = load i32, i32* %v1_100073a4, align 4
  store i32 %v2_100073a4, i32* @r26, align 4
  br label %dec_label_pc_100075bc

dec_label_pc_100073ac:                            ; preds = %dec_label_pc_1000754c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100073b0 = load i32, i32* @r25, align 4
  %v1_100073b0 = load i32, i32* @r22, align 4
  %v2_100073b0 = inttoptr i32 %v1_100073b0 to i32*
  store i32 %v0_100073b0, i32* %v2_100073b0, align 4
  %v0_100073b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100073b4 = load i32, i32* @r22, align 4
  %v2_100073b4 = add i32 %v1_100073b4, 4
  %v3_100073b4 = inttoptr i32 %v2_100073b4 to i32*
  store i32 %v0_100073b4, i32* %v3_100073b4, align 4
  %v0_100073b8 = load i32, i32* @r30, align 4
  %v1_100073b8 = add i32 %v0_100073b8, 8
  store i32 %v1_100073b8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_100073c0 = add i32 %v0_100073b8, 4
  %v2_100073c0 = inttoptr i32 %v1_100073c0 to i32*
  %v3_100073c0 = load i32, i32* %v2_100073c0, align 4
  store i32 %v3_100073c0, i32* %r0.global-to-local, align 4
  %v0_100073c4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100073c4 = load i32, i32* @r28, align 4
  %v2_100073c4 = add i32 %v1_100073c4, 8
  %v3_100073c4 = inttoptr i32 %v2_100073c4 to i32*
  store i32 %v0_100073c4, i32* %v3_100073c4, align 4
  %v0_100073c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100073c8 = load i32, i32* @r28, align 4
  %v2_100073c8 = inttoptr i32 %v1_100073c8 to i32*
  store i32 %v0_100073c8, i32* %v2_100073c8, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100073d0 = load i32, i32* @r28, align 4
  %v2_100073d0 = add i32 %v1_100073d0, 12
  %v3_100073d0 = inttoptr i32 %v2_100073d0 to i32*
  store i32 4, i32* %v3_100073d0, align 4
  %v0_100073d4 = load i32, i32* @r22, align 4
  %v1_100073d4 = load i32, i32* @r28, align 4
  %v2_100073d4 = add i32 %v1_100073d4, 16
  %v3_100073d4 = inttoptr i32 %v2_100073d4 to i32*
  store i32 %v0_100073d4, i32* %v3_100073d4, align 4
  br label %dec_label_pc_10007408

dec_label_pc_100073dc:                            ; preds = %dec_label_pc_10007570
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100073e0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100073e0 = load i32, i32* @r23, align 4
  %v2_100073e0 = inttoptr i32 %v1_100073e0 to i32*
  store i32 %v0_100073e0, i32* %v2_100073e0, align 4
  %v0_100073e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100073e4 = load i32, i32* @r23, align 4
  %v2_100073e4 = add i32 %v1_100073e4, 4
  %v3_100073e4 = inttoptr i32 %v2_100073e4 to i32*
  store i32 %v0_100073e4, i32* %v3_100073e4, align 4
  %v0_100073e8 = load i32, i32* @r30, align 4
  %v1_100073e8 = add i32 %v0_100073e8, 8
  store i32 %v1_100073e8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_100073f0 = add i32 %v0_100073e8, 4
  %v2_100073f0 = inttoptr i32 %v1_100073f0 to i32*
  %v3_100073f0 = load i32, i32* %v2_100073f0, align 4
  store i32 %v3_100073f0, i32* %r0.global-to-local, align 4
  %v0_100073f4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100073f4 = load i32, i32* @r28, align 4
  %v2_100073f4 = add i32 %v1_100073f4, 8
  %v3_100073f4 = inttoptr i32 %v2_100073f4 to i32*
  store i32 %v0_100073f4, i32* %v3_100073f4, align 4
  %v0_100073f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100073f8 = load i32, i32* @r28, align 4
  %v2_100073f8 = inttoptr i32 %v1_100073f8 to i32*
  store i32 %v0_100073f8, i32* %v2_100073f8, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_10007400 = load i32, i32* @r28, align 4
  %v2_10007400 = add i32 %v1_10007400, 12
  %v3_10007400 = inttoptr i32 %v2_10007400 to i32*
  store i32 16, i32* %v3_10007400, align 4
  %v0_10007404 = load i32, i32* @r23, align 4
  %v1_10007404 = load i32, i32* @r28, align 4
  %v2_10007404 = add i32 %v1_10007404, 16
  %v3_10007404 = inttoptr i32 %v2_10007404 to i32*
  store i32 %v0_10007404, i32* %v3_10007404, align 4
  br label %dec_label_pc_10007408

dec_label_pc_10007408:                            ; preds = %dec_label_pc_100073ac, %dec_label_pc_100073dc
  %v0_10007408 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007408 = load i32, i32* @r28, align 4
  %v2_10007408 = add i32 %v1_10007408, 4
  %v3_10007408 = inttoptr i32 %v2_10007408 to i32*
  store i32 %v0_10007408, i32* %v3_10007408, align 4
  %v0_1000740c = load i32, i32* @r28, align 4
  %v1_1000740c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000740c = inttoptr i32 %v1_1000740c to i32*
  store i32 %v0_1000740c, i32* %v2_1000740c, align 4
  br label %dec_label_pc_100075a4

dec_label_pc_10007414:                            ; preds = %dec_label_pc_1000730c
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10007424

dec_label_pc_10007424:                            ; preds = %dec_label_pc_10007384, %dec_label_pc_10007414
  %v1_1000742c = phi i32 [ %v1_1000742c.pre, %dec_label_pc_10007384 ], [ %arg8, %dec_label_pc_10007414 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000742c = inttoptr i32 %v1_1000742c to i32*
  store i32 1, i32* %v2_1000742c, align 4
  br label %dec_label_pc_1000758c

dec_label_pc_10007434:                            ; preds = %dec_label_pc_1000758c
  %v0_10007434 = load i32, i32* @r24, align 4
  store i32 %v0_10007434, i32* @r3, align 4
  store i32 268465216, i32* @lr, align 4
  %v2_1000743c = call i32 @__GI_strchr(i32 %v0_10007434, i32 35)
  %v4_10007440 = icmp eq i32 %v2_1000743c, 0
  br i1 %v4_10007440, label %dec_label_pc_10007450, label %dec_label_pc_10007448

dec_label_pc_10007448:                            ; preds = %dec_label_pc_10007434
  %v3_1000743c = inttoptr i32 %v2_1000743c to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000743c, align 1
  br label %dec_label_pc_10007450

dec_label_pc_10007450:                            ; preds = %dec_label_pc_10007434, %dec_label_pc_10007448
  %v0_10007450 = load i32, i32* @r24, align 4
  store i32 %v0_10007450, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_100074cc17 = inttoptr i32 %v0_10007450 to i8*
  %v2_100074cc18 = load i8, i8* %v1_100074cc17, align 1
  %v3_100074cc19 = zext i8 %v2_100074cc18 to i32
  store i32 %v3_100074cc19, i32* %r0.global-to-local, align 4
  %v3_100074d021 = icmp eq i8 %v2_100074cc18, 0
  br i1 %v3_100074d021, label %dec_label_pc_100074d8, label %dec_label_pc_10007468.preheader

dec_label_pc_1000745c:                            ; preds = %dec_label_pc_10007478
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10007460 = inttoptr i32 %v0_1000749c to i8*
  store i8 0, i8* %v3_10007460, align 1
  %v0_10007464 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007464 = add i32 %v0_10007464, 1
  store i32 %v1_10007464, i32* %r11.global-to-local, align 4
  %v1_10007468 = inttoptr i32 %v1_10007464 to i8*
  %v2_10007468 = load i8, i8* %v1_10007468, align 1
  %v3_10007468 = zext i8 %v2_10007468 to i32
  store i32 %v3_10007468, i32* %r0.global-to-local, align 4
  %v3_1000746c = icmp eq i8 %v2_10007468, 0
  br i1 %v3_1000746c, label %dec_label_pc_100074d8, label %dec_label_pc_10007478

dec_label_pc_10007478:                            ; preds = %dec_label_pc_10007468.preheader, %dec_label_pc_1000745c
  %v0_1000749c = phi i32 [ %v1_10007464, %dec_label_pc_1000745c ], [ %v0_100074682, %dec_label_pc_10007468.preheader ]
  %v0_10007480.in = phi i32 [ %v3_10007468, %dec_label_pc_1000745c ], [ %v3_100074685, %dec_label_pc_10007468.preheader ]
  %v0_10007480 = mul nuw nsw i32 %v0_10007480.in, 2
  %v3_1000747c = load i32, i32* @global_var_1001c35c, align 4
  store i32 %v3_1000747c, i32* %r9.global-to-local, align 4
  %v2_10007480 = add i32 %v3_1000747c, %v0_10007480
  %v3_10007480 = inttoptr i32 %v2_10007480 to i16*
  %v4_10007480 = load i16, i16* %v3_10007480, align 2
  %v5_10007480 = zext i16 %v4_10007480 to i32
  store i32 %v5_10007480, i32* %r0.global-to-local, align 4
  %v1_10007484 = and i32 %v5_10007480, 32
  store i32 %v1_10007484, i32* %r9.global-to-local, align 4
  %v3_10007484 = icmp eq i32 %v1_10007484, 0
  br i1 %v3_10007484, label %dec_label_pc_1000748c, label %dec_label_pc_1000745c

dec_label_pc_1000748c:                            ; preds = %dec_label_pc_10007478
  %v0_1000748c = load i32, i32* @r29, align 4
  %v2_1000748c = icmp sgt i32 %v0_1000748c, 6
  br i1 %v2_1000748c, label %dec_label_pc_100074a8.preheader, label %dec_label_pc_10007494

dec_label_pc_10007494:                            ; preds = %dec_label_pc_1000748c
  %v1_10007494 = mul i32 %v0_1000748c, 4
  store i32 %v1_10007494, i32* %r0.global-to-local, align 4
  %v1_10007498 = add i32 %v0_1000748c, 1
  store i32 %v1_10007498, i32* @r29, align 4
  %v1_1000749c = load i32, i32* @r30, align 4
  %v3_1000749c = add i32 %v1_1000749c, %v1_10007494
  %v4_1000749c = inttoptr i32 %v3_1000749c to i32*
  store i32 %v0_1000749c, i32* %v4_1000749c, align 4
  %v0_100074a89.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100074a8.preheader

dec_label_pc_100074a8.preheader:                  ; preds = %dec_label_pc_10007494, %dec_label_pc_1000748c
  %v0_100074a89 = phi i32 [ %v0_100074a89.pre, %dec_label_pc_10007494 ], [ %v0_1000749c, %dec_label_pc_1000748c ]
  %v1_100074a810 = inttoptr i32 %v0_100074a89 to i8*
  %v2_100074a811 = load i8, i8* %v1_100074a810, align 1
  %v3_100074a812 = zext i8 %v2_100074a811 to i32
  store i32 %v3_100074a812, i32* %r0.global-to-local, align 4
  %v3_100074ac14 = icmp eq i8 %v2_100074a811, 0
  br i1 %v3_100074ac14, label %dec_label_pc_100074cc.loopexit, label %dec_label_pc_100074b8.lr.ph

dec_label_pc_100074b8.lr.ph:                      ; preds = %dec_label_pc_100074a8.preheader
  %v3_100074bc.pre = load i32, i32* @global_var_1001c35c, align 4
  br label %dec_label_pc_100074b8

dec_label_pc_100074a4:                            ; preds = %dec_label_pc_100074b8
  %v1_100074a4 = add i32 %v0_100074a4, 1
  store i32 %v1_100074a4, i32* %r11.global-to-local, align 4
  %v1_100074a8 = inttoptr i32 %v1_100074a4 to i8*
  %v2_100074a8 = load i8, i8* %v1_100074a8, align 1
  %v3_100074a8 = zext i8 %v2_100074a8 to i32
  store i32 %v3_100074a8, i32* %r0.global-to-local, align 4
  %v3_100074ac = icmp eq i8 %v2_100074a8, 0
  br i1 %v3_100074ac, label %dec_label_pc_100074cc.loopexit, label %dec_label_pc_100074b8

dec_label_pc_100074b8:                            ; preds = %dec_label_pc_100074b8.lr.ph, %dec_label_pc_100074a4
  %v0_100074a4 = phi i32 [ %v0_100074a89, %dec_label_pc_100074b8.lr.ph ], [ %v1_100074a4, %dec_label_pc_100074a4 ]
  %v0_100074c0.in = phi i32 [ %v3_100074a812, %dec_label_pc_100074b8.lr.ph ], [ %v3_100074a8, %dec_label_pc_100074a4 ]
  %v0_100074c0 = mul nuw nsw i32 %v0_100074c0.in, 2
  store i32 %v3_100074bc.pre, i32* %r9.global-to-local, align 4
  %v2_100074c0 = add i32 %v0_100074c0, %v3_100074bc.pre
  %v3_100074c0 = inttoptr i32 %v2_100074c0 to i16*
  %v4_100074c0 = load i16, i16* %v3_100074c0, align 2
  %v5_100074c0 = zext i16 %v4_100074c0 to i32
  store i32 %v5_100074c0, i32* %r0.global-to-local, align 4
  %v1_100074c4 = and i32 %v5_100074c0, 32
  store i32 %v1_100074c4, i32* %r9.global-to-local, align 4
  %v3_100074c4 = icmp eq i32 %v1_100074c4, 0
  br i1 %v3_100074c4, label %dec_label_pc_100074a4, label %dec_label_pc_100074cc.loopexit

dec_label_pc_100074cc.loopexit:                   ; preds = %dec_label_pc_100074b8, %dec_label_pc_100074a4, %dec_label_pc_100074a8.preheader
  %v0_100074cc = phi i32 [ %v0_100074a89, %dec_label_pc_100074a8.preheader ], [ %v0_100074a4, %dec_label_pc_100074b8 ], [ %v1_100074a4, %dec_label_pc_100074a4 ]
  %v1_100074cc = inttoptr i32 %v0_100074cc to i8*
  %v2_100074cc = load i8, i8* %v1_100074cc, align 1
  %v3_100074cc = zext i8 %v2_100074cc to i32
  store i32 %v3_100074cc, i32* %r0.global-to-local, align 4
  %v3_100074d0 = icmp eq i8 %v2_100074cc, 0
  br i1 %v3_100074d0, label %dec_label_pc_100074d8, label %dec_label_pc_10007468.preheader

dec_label_pc_10007468.preheader:                  ; preds = %dec_label_pc_10007450, %dec_label_pc_100074cc.loopexit
  %v0_100074682 = phi i32 [ %v0_100074cc, %dec_label_pc_100074cc.loopexit ], [ %v0_10007450, %dec_label_pc_10007450 ]
  %v1_100074683 = inttoptr i32 %v0_100074682 to i8*
  %v2_100074684 = load i8, i8* %v1_100074683, align 1
  %v3_100074685 = zext i8 %v2_100074684 to i32
  store i32 %v3_100074685, i32* %r0.global-to-local, align 4
  %v3_1000746c7 = icmp eq i8 %v2_100074684, 0
  br i1 %v3_1000746c7, label %dec_label_pc_100074d8, label %dec_label_pc_10007478

dec_label_pc_100074d8:                            ; preds = %dec_label_pc_100074cc.loopexit, %dec_label_pc_10007468.preheader, %dec_label_pc_1000745c, %dec_label_pc_10007450
  %v0_100074d8 = load i32, i32* @r29, align 4
  %v1_100074dc = mul i32 %v0_100074d8, 4
  store i32 %v1_100074dc, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100074e4 = load i32, i32* @r30, align 4
  %v3_100074e4 = add i32 %v2_100074e4, %v1_100074dc
  %v4_100074e4 = inttoptr i32 %v3_100074e4 to i32*
  store i32 0, i32* %v4_100074e4, align 4
  %tmp55 = icmp slt i32 %v0_100074d8, 2
  br i1 %tmp55, label %dec_label_pc_1000758c, label %dec_label_pc_100074ec

dec_label_pc_100074ec:                            ; preds = %dec_label_pc_100074d8
  %v0_100074ec = load i32, i32* %r18.global-to-local, align 4
  %v3_100074ec = icmp eq i32 %v0_100074ec, 1
  br i1 %v3_100074ec, label %dec_label_pc_100075a4, label %dec_label_pc_100074f4

dec_label_pc_100074f4:                            ; preds = %dec_label_pc_100074ec
  %v3_100074f4 = icmp eq i32 %v0_100074ec, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_100074f4, label %dec_label_pc_10007500, label %dec_label_pc_1000752c.preheader

dec_label_pc_1000752c.preheader:                  ; preds = %dec_label_pc_100074f4
  %v1_1000752c23 = load i32, i32* @r29, align 4
  %v2_1000752c24 = icmp sgt i32 %v1_1000752c23, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000753429 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000753429, i32* @r3, align 4
  br i1 %v2_1000752c24, label %dec_label_pc_10007518, label %dec_label_pc_1000753c

dec_label_pc_10007500:                            ; preds = %dec_label_pc_100074f4
  %v0_10007500 = load i32, i32* @r30, align 4
  %v1_10007500 = inttoptr i32 %v0_10007500 to i32*
  %v2_10007500 = load i32, i32* %v1_10007500, align 4
  store i32 %v2_10007500, i32* @r4, align 4
  %v0_10007504 = load i32, i32* %r15.global-to-local, align 4
  %v2_10007508 = inttoptr i32 %v0_10007504 to i8*
  %v3_10007508 = call i32 @__GI_strcoll(i8* %v2_10007508, i32 %v2_10007500)
  %v3_1000750c = icmp eq i32 %v3_10007508, 0
  br i1 %v3_1000750c, label %dec_label_pc_10007544, label %dec_label_pc_1000758c

dec_label_pc_10007518:                            ; preds = %dec_label_pc_1000752c.preheader, %dec_label_pc_10007528
  %v1_10007518 = phi i32 [ %v1_10007530, %dec_label_pc_10007528 ], [ 4, %dec_label_pc_1000752c.preheader ]
  %v0_1000753431 = phi i32 [ %v0_10007534, %dec_label_pc_10007528 ], [ %v0_1000753429, %dec_label_pc_1000752c.preheader ]
  %v0_10007518 = load i32, i32* @r30, align 4
  %v2_10007518 = add i32 %v0_10007518, %v1_10007518
  %v3_10007518 = inttoptr i32 %v2_10007518 to i32*
  %v4_10007518 = load i32, i32* %v3_10007518, align 4
  store i32 %v4_10007518, i32* @r4, align 4
  %v2_1000751c = call i32 @__GI_strcasecmp(i32 %v0_1000753431, i32 %v4_10007518)
  %v3_10007520 = icmp eq i32 %v2_1000751c, 0
  %v0_1000753c.pre = load i32, i32* @r31, align 4
  br i1 %v3_10007520, label %dec_label_pc_10007518.dec_label_pc_1000753c_crit_edge, label %dec_label_pc_10007528

dec_label_pc_10007528:                            ; preds = %dec_label_pc_10007518
  %v1_10007528 = add i32 %v0_1000753c.pre, 1
  store i32 %v1_10007528, i32* @r31, align 4
  %v1_1000752c = load i32, i32* @r29, align 4
  %v2_1000752c = icmp slt i32 %v1_10007528, %v1_1000752c
  %v1_10007530 = mul i32 %v1_10007528, 4
  store i32 %v1_10007530, i32* %r0.global-to-local, align 4
  %v0_10007534 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10007534, i32* @r3, align 4
  br i1 %v2_1000752c, label %dec_label_pc_10007518, label %dec_label_pc_1000753c

dec_label_pc_10007518.dec_label_pc_1000753c_crit_edge: ; preds = %dec_label_pc_10007518
  %v1_1000753c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000753c

dec_label_pc_1000753c:                            ; preds = %dec_label_pc_10007528, %dec_label_pc_10007518.dec_label_pc_1000753c_crit_edge, %dec_label_pc_1000752c.preheader
  %v1_1000753c = phi i32 [ %v1_1000753c.pre, %dec_label_pc_10007518.dec_label_pc_1000753c_crit_edge ], [ %v1_1000752c23, %dec_label_pc_1000752c.preheader ], [ %v1_1000752c, %dec_label_pc_10007528 ]
  %v0_1000753c = phi i32 [ %v0_1000753c.pre, %dec_label_pc_10007518.dec_label_pc_1000753c_crit_edge ], [ 1, %dec_label_pc_1000752c.preheader ], [ %v1_10007528, %dec_label_pc_10007528 ]
  %v2_1000753c = icmp slt i32 %v0_1000753c, %v1_1000753c
  br i1 %v2_1000753c, label %dec_label_pc_10007544, label %dec_label_pc_1000758c

dec_label_pc_10007544:                            ; preds = %dec_label_pc_10007500, %dec_label_pc_1000753c
  %v0_10007544 = load i32, i32* %r19.global-to-local, align 4
  %v3_10007544 = icmp eq i32 %v0_10007544, 2
  br i1 %v3_10007544, label %dec_label_pc_1000754c, label %dec_label_pc_10007568

dec_label_pc_1000754c:                            ; preds = %dec_label_pc_10007544
  %v0_1000754c = load i32, i32* @r30, align 4
  %v1_1000754c = inttoptr i32 %v0_1000754c to i32*
  %v2_1000754c = load i32, i32* %v1_1000754c, align 4
  %v0_10007554 = load i32, i32* @r25, align 4
  store i32 268465500, i32* @lr, align 4
  %v3_10007558 = inttoptr i32 %v2_1000754c to i8*
  %v4_10007558 = call i32 @inet_pton(i32 2, i8* %v3_10007558, i32 %v0_10007554)
  %v2_1000755c = icmp sgt i32 %v4_10007558, 0
  br i1 %v2_1000755c, label %dec_label_pc_100073ac, label %dec_label_pc_10007588

dec_label_pc_10007568:                            ; preds = %dec_label_pc_10007544
  %v3_10007568 = icmp eq i32 %v0_10007544, 10
  br i1 %v3_10007568, label %dec_label_pc_10007570, label %dec_label_pc_10007588

dec_label_pc_10007570:                            ; preds = %dec_label_pc_10007568
  %v0_10007570 = load i32, i32* @r30, align 4
  %v1_10007570 = inttoptr i32 %v0_10007570 to i32*
  %v2_10007570 = load i32, i32* %v1_10007570, align 4
  %v0_10007578 = load i32, i32* %r21.global-to-local, align 4
  store i32 268465536, i32* @lr, align 4
  %v3_1000757c = inttoptr i32 %v2_10007570 to i8*
  %v4_1000757c = call i32 @inet_pton(i32 10, i8* %v3_1000757c, i32 %v0_10007578)
  %v2_10007580 = icmp sgt i32 %v4_1000757c, 0
  br i1 %v2_10007580, label %dec_label_pc_100073dc, label %dec_label_pc_10007588

dec_label_pc_10007588:                            ; preds = %dec_label_pc_1000754c, %dec_label_pc_10007568, %dec_label_pc_10007570
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000758c

dec_label_pc_1000758c:                            ; preds = %dec_label_pc_1000753c, %dec_label_pc_10007500, %dec_label_pc_100074d8, %dec_label_pc_10007588, %dec_label_pc_10007424
  %v0_1000758c = load i32, i32* @r24, align 4
  %v0_10007590 = load i32, i32* @r27, align 4
  %v0_10007594 = load i32, i32* @r20, align 4
  store i32 268465564, i32* @lr, align 4
  %v3_10007598 = call i32 @fgets(i32 %v0_1000758c, i32 %v0_10007590, i32 %v0_10007594)
  %v3_1000759c = icmp eq i32 %v3_10007598, 0
  br i1 %v3_1000759c, label %dec_label_pc_100075a4, label %dec_label_pc_10007434

dec_label_pc_100075a4:                            ; preds = %dec_label_pc_1000758c, %dec_label_pc_100074ec, %dec_label_pc_10007408
  %v0_100075a4 = load i32, i32* %r18.global-to-local, align 4
  %v3_100075a4 = icmp eq i32 %v0_100075a4, 1
  br i1 %v3_100075a4, label %dec_label_pc_100075bc, label %dec_label_pc_100075ac

dec_label_pc_100075ac:                            ; preds = %dec_label_pc_100075a4
  %v0_100075ac = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_100075b4.158 to i32), i32* @lr, align 4
  %v1_100075b0 = inttoptr i32 %v0_100075ac to i16*
  %v2_100075b0 = call i32 @__GI_fclose(i16* %v1_100075b0)
  br label %dec_label_pc_100075bc

dec_label_pc_100075b8:                            ; preds = %dec_label_pc_10007370, %dec_label_pc_10007340, %dec_label_pc_10007338, %dec_label_pc_1000732c, %dec_label_pc_1000731c, %dec_label_pc_10007304, %dec_label_pc_100072f4
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_100075bc

dec_label_pc_100075bc:                            ; preds = %dec_label_pc_100075a4, %dec_label_pc_100075ac, %dec_label_pc_1000739c, %dec_label_pc_100075b8
  store i32 %v0_100072b8, i32* %r0.global-to-local, align 4
  %v0_100075c0 = load i32, i32* @r26, align 4
  ret i32 %v0_100075c0

; uselistorder directives
  uselistorder i32 %v0_10007534, { 1, 0 }
  uselistorder i32 %v1_10007528, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100074dc, { 1, 0 }
  uselistorder i32 %v0_100074d8, { 1, 0 }
  uselistorder i32 %v3_100074685, { 1, 0 }
  uselistorder i32 %v0_100074682, { 1, 0 }
  uselistorder i32 %v1_10007494, { 1, 0 }
  uselistorder i32 %v0_1000748c, { 1, 0, 2 }
  uselistorder i32 %v2_1000743c, { 1, 0 }
  uselistorder i32 %v0_1000732c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10007304.pr, { 1, 0, 2 }
  uselistorder i32 %v1_100072d0, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 30, 12, 27, 19, 13, 14, 28, 15, 16, 18, 17, 29, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100075bc, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000758c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10007588, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007544, { 1, 0 }
  uselistorder label %dec_label_pc_1000753c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007518, { 1, 0 }
  uselistorder label %dec_label_pc_100074d8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10007468.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100074b8, { 1, 0 }
  uselistorder label %dec_label_pc_10007450, { 1, 0 }
  uselistorder label %dec_label_pc_10007424, { 1, 0 }
  uselistorder label %dec_label_pc_10007408, { 1, 0 }
  uselistorder label %dec_label_pc_10007370, { 1, 0 }
  uselistorder label %dec_label_pc_10007304, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100075d4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268465644, i32* @lr, align 4
  %v0_100075e8 = call i32 @__libc_getpid()
  %v0_100075f0 = load i32, i32* @r29, align 4
  store i32 %v0_100075d4, i32* @lr, align 4
  %v2_10007600 = call i32 @kill(i32 %v0_100075e8, i32 %v0_100075f0)
  ret i32 %v2_10007600

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @__syscall_error(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r29, align 4
  %v0_10007618 = call i32 @__errno_location()
  %v0_1000761c = load i32, i32* @r29, align 4
  %v2_1000761c = inttoptr i32 %v0_10007618 to i32*
  store i32 %v0_1000761c, i32* %v2_1000761c, align 4
  ret i32 -1
}

define i32 @ioctl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10007648 = icmp eq i32 %arg2, -2143521772
  %v2_1000765c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000765c, i32* %stack_var_-32, align 4
  %v0_1000766c = load i32, i32* @r5, align 4
  br i1 %v4_10007648, label %dec_label_pc_100076bc, label %dec_label_pc_1000767c

dec_label_pc_1000767c:                            ; preds = %entry
  %v3_1000767c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000767c, label %dec_label_pc_10007694, label %dec_label_pc_10007684

dec_label_pc_10007684:                            ; preds = %dec_label_pc_1000767c
  %v3_10007688 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10007688, label %dec_label_pc_100076b0, label %dec_label_pc_100076dc

dec_label_pc_10007694:                            ; preds = %dec_label_pc_1000767c
  %v1_10007694 = xor i32 %arg2, -2143551488
  %v3_10007698 = icmp eq i32 %v1_10007694, 29717
  br i1 %v3_10007698, label %dec_label_pc_100076cc, label %dec_label_pc_100076a0

dec_label_pc_100076a0:                            ; preds = %dec_label_pc_10007694
  %v3_100076a4 = icmp eq i32 %v1_10007694, 29718
  br i1 %v3_100076a4, label %dec_label_pc_100076d4, label %dec_label_pc_100076dc

dec_label_pc_100076b0:                            ; preds = %dec_label_pc_10007684
  store i32 ptrtoint (i32* @global_var_100076b8.159 to i32), i32* @lr, align 4
  %v1_100076b4 = inttoptr i32 %v0_1000766c to i32*
  %v2_100076b4 = call i32 @__GI_tcgetattr(i32* %v1_100076b4)
  br label %dec_label_pc_100076c4

dec_label_pc_100076bc:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_100076c0

dec_label_pc_100076c0:                            ; preds = %dec_label_pc_100076d4, %dec_label_pc_100076cc, %dec_label_pc_100076bc
  store i32 268465860, i32* @lr, align 4
  %v0_100076c0 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_100076c4

dec_label_pc_100076c4:                            ; preds = %dec_label_pc_100076b0, %dec_label_pc_100076c0
  %storemerge = phi i32 [ %v0_100076c0, %dec_label_pc_100076c0 ], [ %v2_100076b4, %dec_label_pc_100076b0 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007708

dec_label_pc_100076cc:                            ; preds = %dec_label_pc_10007694
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_100076c0

dec_label_pc_100076d4:                            ; preds = %dec_label_pc_100076a0
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_100076c0

dec_label_pc_100076dc:                            ; preds = %dec_label_pc_100076a0, %dec_label_pc_10007684
  %v0_100076ec = call i32 @__asm_mfcr()
  %v1_100076f0 = and i32 %v0_100076ec, 268435456
  %v3_100076f0 = icmp eq i32 %v1_100076f0, 0
  store i32 %v0_100076ec, i32* %r31.global-to-local, align 4
  br i1 %v3_100076f0, label %dec_label_pc_10007708, label %dec_label_pc_100076fc

dec_label_pc_100076fc:                            ; preds = %dec_label_pc_100076dc
  %v0_100076fc = call i32 @__errno_location()
  %v0_10007700 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007700 = inttoptr i32 %v0_100076fc to i32*
  store i32 %v0_10007700, i32* %v2_10007700, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007708

dec_label_pc_10007708:                            ; preds = %dec_label_pc_100076dc, %dec_label_pc_100076c4, %dec_label_pc_100076fc
  %v0_1000770c = phi i32 [ %v0_100076ec, %dec_label_pc_100076dc ], [ %storemerge, %dec_label_pc_100076c4 ], [ -1, %dec_label_pc_100076fc ]
  ret i32 %v0_1000770c

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10007708, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100076c4, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10007720 = add i32 %arg1, 128
  %v1_10007724 = mul i32 %arg1, 2
  %v2_10007728 = icmp ugt i32 %v1_10007720, 383
  %v0_1000772c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10007728, i32 %v0_1000772c)
  %v3_10007734 = load i32, i32* bitcast (i32** @global_var_1001c390.161 to i32*), align 4
  %v2_10007738 = add i32 %v1_10007724, %v3_10007734
  %v3_10007738 = inttoptr i32 %v2_10007738 to i16*
  %v4_10007738 = load i16, i16* %v3_10007738, align 2
  %v5_10007738 = sext i16 %v4_10007738 to i32
  ret i32 %v5_10007738

; uselistorder directives
  uselistorder i32 383, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10007760 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10007760, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_100077b0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100077b0, i32* %stack_var_-96, align 4
  store i32 268466108, i32* @lr, align 4
  %v0_100077b8 = call i32 @__GI_vsnprintf()
  ret i32 %v0_100077b8
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_100077d8 = load i32, i32* @r4, align 4
  store i32 %v0_100077d8, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_100077f4 = load i32, i32* @r3, align 4
  %v1_100077f4 = sub i32 -1, %v0_100077f4
  store i32 %v1_100077f4, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_100077f4, i32* %r31.global-to-local, align 4
  %v2_10007808 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10007808, i32* @r3, align 4
  %v0_1000780c = load i32, i32* @r5, align 4
  store i32 %v0_1000780c, i32* %r29.global-to-local, align 4
  %v0_10007810 = load i32, i32* @r6, align 4
  store i32 %v0_10007810, i32* @r28, align 4
  store i32 268466208, i32* @lr, align 4
  %v0_1000781c = call i32 @__stdio_init_mutex()
  %v0_10007820 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007820 = load i32, i32* @r27, align 4
  %v3_10007820 = icmp ugt i32 %v0_10007820, %v1_10007820
  %v0_10007824 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10007824, i32* @r4, align 4
  %v0_10007828 = load i32, i32* @r28, align 4
  store i32 %v0_10007828, i32* @r5, align 4
  %v2_1000782c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000782c, i32* @r3, align 4
  br i1 %v3_10007820, label %dec_label_pc_10007838, label %dec_label_pc_1000783c

dec_label_pc_10007838:                            ; preds = %entry
  store i32 %v1_10007820, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000783c

dec_label_pc_1000783c:                            ; preds = %entry, %dec_label_pc_10007838
  %v1_1000783c = phi i32 [ %v0_10007820, %entry ], [ %v1_10007820, %dec_label_pc_10007838 ]
  %v0_1000783c = load i32, i32* %r31.global-to-local, align 4
  store i32 268466268, i32* @lr, align 4
  %v0_10007858 = call i32 @_vfprintf_internal()
  %v0_1000785c = load i32, i32* @r30, align 4
  %v3_1000785c = icmp eq i32 %v0_1000785c, 0
  br i1 %v3_1000785c, label %dec_label_pc_10007884, label %dec_label_pc_10007864

dec_label_pc_10007864:                            ; preds = %dec_label_pc_1000783c
  %v4_10007870 = icmp eq i32 %v1_1000783c, 0
  %v1_1000786c = sext i1 %v4_10007870 to i32
  %v0_10007878.v0_1000783c = add i32 %v0_1000783c, %v1_1000786c
  %stack_var_-88.0 = inttoptr i32 %v0_10007878.v0_1000783c to i8*
  %v0_10007880 = load i32, i32* @r26, align 4
  %v1_10007880 = trunc i32 %v0_10007880 to i8
  store i8 %v1_10007880, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_10007884

dec_label_pc_10007884:                            ; preds = %dec_label_pc_1000783c, %dec_label_pc_10007864
  ret i32 %v0_10007858

; uselistorder directives
  uselistorder i32 %v0_100077f4, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10007884, { 1, 0 }
  uselistorder label %dec_label_pc_1000783c, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10007898 = load i32, i32* @lr, align 4
  store i32 %v0_10007898, i32* %r0.global-to-local, align 4
  %v0_100078a4 = load i32, i32* @r5, align 4
  store i32 %v0_100078a4, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_100078a4, i32* @r31, align 4
  %v3_100078b83 = icmp eq i32 %v0_100078a4, 0
  store i32 %v0_100078a4, i32* @r27, align 4
  br i1 %v3_100078b83, label %dec_label_pc_10007960, label %dec_label_pc_100078c8

dec_label_pc_100078c8:                            ; preds = %entry, %dec_label_pc_100078e8
  %v0_100078d8 = phi i32 [ %v2_100078e8, %dec_label_pc_100078e8 ], [ %arg2, %entry ]
  %v1_100078c8.in = phi i32 [ %v2_100078ec, %dec_label_pc_100078e8 ], [ %v0_100078a4, %entry ]
  %v1_100078c8 = icmp sgt i32 %v1_100078c8.in, 0
  br i1 %v1_100078c8, label %dec_label_pc_100078d4, label %dec_label_pc_100078cc

dec_label_pc_100078cc:                            ; preds = %dec_label_pc_100078c8
  br label %dec_label_pc_100078d4

dec_label_pc_100078d4:                            ; preds = %dec_label_pc_100078c8, %dec_label_pc_100078cc
  %v0_100078d4 = load i32, i32* @r30, align 4
  %v1_100078d4 = add i32 %v0_100078d4, 4
  %v2_100078d4 = inttoptr i32 %v1_100078d4 to i32*
  %v3_100078d4 = load i32, i32* %v2_100078d4, align 4
  store i32 268466400, i32* @lr, align 4
  %v3_100078dc = call i32 @__libc_write(i32 %v3_100078d4, i32 %v0_100078d8)
  %v1_100078e0 = icmp slt i32 %v3_100078dc, 0
  br i1 %v1_100078e0, label %dec_label_pc_100078f4, label %dec_label_pc_100078e8

dec_label_pc_100078e8:                            ; preds = %dec_label_pc_100078d4
  %v0_100078e8 = load i32, i32* @r29, align 4
  %v2_100078e8 = add i32 %v0_100078e8, %v3_100078dc
  store i32 %v2_100078e8, i32* @r29, align 4
  %v1_100078ec = load i32, i32* @r31, align 4
  %v2_100078ec = sub i32 %v1_100078ec, %v3_100078dc
  store i32 %v2_100078ec, i32* @r31, align 4
  %v3_100078b8 = icmp eq i32 %v2_100078ec, 0
  store i32 %v2_100078ec, i32* @r27, align 4
  br i1 %v3_100078b8, label %dec_label_pc_100078b8.dec_label_pc_10007960.loopexit_crit_edge, label %dec_label_pc_100078c8

dec_label_pc_100078f4:                            ; preds = %dec_label_pc_100078d4
  %v0_100078f4 = load i32, i32* @r30, align 4
  %v1_100078f4 = add i32 %v0_100078f4, 8
  %v2_100078f4 = inttoptr i32 %v1_100078f4 to i32*
  %v3_100078f4 = load i32, i32* %v2_100078f4, align 4
  store i32 %v3_100078f4, i32* %r11.global-to-local, align 4
  %v1_100078f8 = add i32 %v0_100078f4, 12
  %v2_100078f8 = inttoptr i32 %v1_100078f8 to i32*
  %v3_100078f8 = load i32, i32* %v2_100078f8, align 4
  store i32 %v3_100078f8, i32* %r0.global-to-local, align 4
  %v1_100078fc = inttoptr i32 %v0_100078f4 to i16*
  %v2_100078fc = load i16, i16* %v1_100078fc, align 2
  %v2_10007900 = sub i32 %v3_100078f8, %v3_100078f4
  store i32 %v2_10007900, i32* %r0.global-to-local, align 4
  %v5_10007900 = icmp eq i32 %v2_10007900, 0
  %v1_10007904 = or i16 %v2_100078fc, 8
  store i16 %v1_10007904, i16* %v1_100078fc, align 2
  br i1 %v5_10007900, label %dec_label_pc_100078f4.dec_label_pc_1000795c_crit_edge, label %dec_label_pc_10007910

dec_label_pc_100078f4.dec_label_pc_1000795c_crit_edge: ; preds = %dec_label_pc_100078f4
  %v0_1000795c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000795c

dec_label_pc_10007910:                            ; preds = %dec_label_pc_100078f4
  %v0_10007910 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007910 = load i32, i32* @r31, align 4
  %v3_10007910 = icmp ugt i32 %v0_10007910, %v1_10007910
  br i1 %v3_10007910, label %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge, label %dec_label_pc_10007918

dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge: ; preds = %dec_label_pc_10007910
  %v0_1000791c.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000791c

dec_label_pc_10007918:                            ; preds = %dec_label_pc_10007910
  store i32 %v0_10007910, i32* @r27, align 4
  br label %dec_label_pc_1000791c

dec_label_pc_1000791c:                            ; preds = %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge, %dec_label_pc_10007918
  %v0_1000791c = phi i32 [ %v0_1000791c.pre, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ %v0_10007910, %dec_label_pc_10007918 ]
  store i32 %v0_1000791c, i32* %ctr.global-to-local, align 4
  %v2_10007928.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007920

dec_label_pc_10007920:                            ; preds = %dec_label_pc_10007944, %dec_label_pc_1000791c
  %v2_10007928 = phi i32 [ %v1_10007944, %dec_label_pc_10007944 ], [ %v2_10007928.pre, %dec_label_pc_1000791c ]
  %v0_10007920 = load i32, i32* @r29, align 4
  %v1_10007920 = inttoptr i32 %v0_10007920 to i8*
  %v2_10007920 = load i8, i8* %v1_10007920, align 1
  %v3_10007920 = zext i8 %v2_10007920 to i32
  store i32 %v3_10007920, i32* %r0.global-to-local, align 4
  %v1_10007924 = add i32 %v0_10007920, 1
  store i32 %v1_10007924, i32* @r29, align 4
  %v3_10007928 = inttoptr i32 %v2_10007928 to i8*
  store i8 %v2_10007920, i8* %v3_10007928, align 1
  %v0_1000792c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000792c = urem i32 %v0_1000792c, 256
  store i32 %v1_1000792c, i32* %r0.global-to-local, align 4
  %v3_10007930 = icmp eq i32 %v1_1000792c, 10
  br i1 %v3_10007930, label %dec_label_pc_10007938, label %dec_label_pc_10007944

dec_label_pc_10007938:                            ; preds = %dec_label_pc_10007920
  %v0_10007938 = load i32, i32* @r30, align 4
  %v1_10007938 = inttoptr i32 %v0_10007938 to i16*
  %v2_10007938 = load i16, i16* %v1_10007938, align 2
  %v3_10007938 = zext i16 %v2_10007938 to i32
  store i32 %v3_10007938, i32* %r0.global-to-local, align 4
  %v1_1000793c = and i32 %v3_10007938, 256
  %v3_1000793c = icmp eq i32 %v1_1000793c, 0
  br i1 %v3_1000793c, label %dec_label_pc_10007944, label %dec_label_pc_10007938.dec_label_pc_1000794c_crit_edge

dec_label_pc_10007938.dec_label_pc_1000794c_crit_edge: ; preds = %dec_label_pc_10007938
  %v0_10007950.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000794c

dec_label_pc_10007944:                            ; preds = %dec_label_pc_10007938, %dec_label_pc_10007920
  %v0_10007944 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007944 = add i32 %v0_10007944, 1
  store i32 %v1_10007944, i32* %r11.global-to-local, align 4
  %v0_10007948 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007948 = add i32 %v0_10007948, -1
  store i32 %v1_10007948, i32* %ctr.global-to-local, align 4
  %v2_10007948 = icmp eq i32 %v1_10007948, 0
  br i1 %v2_10007948, label %dec_label_pc_10007944.dec_label_pc_1000794c_crit_edge, label %dec_label_pc_10007920

dec_label_pc_10007944.dec_label_pc_1000794c_crit_edge: ; preds = %dec_label_pc_10007944
  %v0_1000794c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000794c

dec_label_pc_1000794c:                            ; preds = %dec_label_pc_10007938.dec_label_pc_1000794c_crit_edge, %dec_label_pc_10007944.dec_label_pc_1000794c_crit_edge
  %v0_10007950 = phi i32 [ %v1_10007944, %dec_label_pc_10007944.dec_label_pc_1000794c_crit_edge ], [ %v0_10007950.pre, %dec_label_pc_10007938.dec_label_pc_1000794c_crit_edge ]
  %v0_1000794c = phi i32 [ %v0_1000794c.pre, %dec_label_pc_10007944.dec_label_pc_1000794c_crit_edge ], [ %v0_10007938, %dec_label_pc_10007938.dec_label_pc_1000794c_crit_edge ]
  %v1_1000794c = add i32 %v0_1000794c, 8
  %v2_1000794c = inttoptr i32 %v1_1000794c to i32*
  %v3_1000794c = load i32, i32* %v2_1000794c, align 4
  store i32 %v3_1000794c, i32* %r0.global-to-local, align 4
  %v2_10007950 = add i32 %v0_1000794c, 16
  %v3_10007950 = inttoptr i32 %v2_10007950 to i32*
  store i32 %v0_10007950, i32* %v3_10007950, align 4
  %v0_10007954 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007954 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007954 = sub i32 %v1_10007954, %v0_10007954
  store i32 %v2_10007954, i32* %r0.global-to-local, align 4
  %v1_10007958 = load i32, i32* @r31, align 4
  %v2_10007958 = sub i32 %v1_10007958, %v2_10007954
  store i32 %v2_10007958, i32* @r31, align 4
  br label %dec_label_pc_1000795c

dec_label_pc_1000795c:                            ; preds = %dec_label_pc_100078f4.dec_label_pc_1000795c_crit_edge, %dec_label_pc_1000794c
  %v0_1000795c = phi i32 [ %v0_1000795c.pre, %dec_label_pc_100078f4.dec_label_pc_1000795c_crit_edge ], [ %v2_10007958, %dec_label_pc_1000794c ]
  %v1_1000795c = load i32, i32* @r28, align 4
  %v2_1000795c = sub i32 %v1_1000795c, %v0_1000795c
  store i32 %v2_1000795c, i32* @r28, align 4
  br label %dec_label_pc_10007960

dec_label_pc_100078b8.dec_label_pc_10007960.loopexit_crit_edge: ; preds = %dec_label_pc_100078e8
  %v0_10007964.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10007960

dec_label_pc_10007960:                            ; preds = %entry, %dec_label_pc_100078b8.dec_label_pc_10007960.loopexit_crit_edge, %dec_label_pc_1000795c
  %v0_10007964 = phi i32 [ %v2_1000795c, %dec_label_pc_1000795c ], [ %v0_10007964.pre.pre, %dec_label_pc_100078b8.dec_label_pc_10007960.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_10007898, i32* %r0.global-to-local, align 4
  ret i32 %v0_10007964

; uselistorder directives
  uselistorder i32 %v0_1000794c, { 1, 0 }
  uselistorder i32 %v1_10007948, { 1, 0 }
  uselistorder i32 %v1_10007944, { 0, 2, 1 }
  uselistorder i32 %v1_1000792c, { 1, 0 }
  uselistorder i32 %v2_100078ec, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100078e8, { 1, 0 }
  uselistorder i32 %v3_100078dc, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder label %dec_label_pc_10007960, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000795c, { 1, 0 }
  uselistorder label %dec_label_pc_1000794c, { 1, 0 }
  uselistorder label %dec_label_pc_1000791c, { 1, 0 }
  uselistorder label %dec_label_pc_100078d4, { 1, 0 }
  uselistorder label %dec_label_pc_100078c8, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100079a03 = icmp eq i32 %arg3, 0
  %v2_100079a4 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100079a03, label %dec_label_pc_100079c0, label %dec_label_pc_100079b4

dec_label_pc_1000799c:                            ; preds = %dec_label_pc_100079b4
  %v1_1000799c = add i32 %v0_1000799c, -1
  store i32 %v1_1000799c, i32* @r31, align 4
  %v3_100079a0 = icmp eq i32 %v1_1000799c, 0
  %v0_100079ac = load i32, i32* @r29, align 4
  br i1 %v3_100079a0, label %dec_label_pc_100079c0.loopexit, label %dec_label_pc_100079b4

dec_label_pc_100079b4:                            ; preds = %entry, %dec_label_pc_1000799c
  %v0_100079ac5 = phi i32 [ %v0_100079ac, %dec_label_pc_1000799c ], [ %arg1, %entry ]
  store i32 268466616, i32* @lr, align 4
  %v3_100079b4 = inttoptr i32 %v0_100079ac5 to i16*
  %v4_100079b4 = call i32 @__stdio_fwrite(i32 %v2_100079a4, i32 1, i16* %v3_100079b4)
  %v3_100079b8 = icmp eq i32 %v4_100079b4, 1
  %v0_1000799c = load i32, i32* @r31, align 4
  br i1 %v3_100079b8, label %dec_label_pc_1000799c, label %dec_label_pc_100079c0.loopexit

dec_label_pc_100079c0.loopexit:                   ; preds = %dec_label_pc_1000799c, %dec_label_pc_100079b4
  %v0_100079c4.ph = phi i32 [ %v0_1000799c, %dec_label_pc_100079b4 ], [ 0, %dec_label_pc_1000799c ]
  %v1_100079c4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100079c0

dec_label_pc_100079c0:                            ; preds = %dec_label_pc_100079c0.loopexit, %entry
  %v1_100079c4 = phi i32 [ 0, %entry ], [ %v1_100079c4.pre, %dec_label_pc_100079c0.loopexit ]
  %v0_100079c4 = phi i32 [ 0, %entry ], [ %v0_100079c4.ph, %dec_label_pc_100079c0.loopexit ]
  %v2_100079c4 = sub i32 %v1_100079c4, %v0_100079c4
  ret i32 %v2_100079c4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100079c0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100079b4, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_100079ec = and i32 %arg2, 128
  %v3_100079ec = icmp eq i32 %v1_100079ec, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_100079ec, label %dec_label_pc_10007a3c, label %dec_label_pc_10007a08

dec_label_pc_10007a08:                            ; preds = %entry
  %v0_10007a08 = call i32 @__GI_strlen()
  %v0_10007a0c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10007a08, i32* @r31, align 4
  %v0_10007a14 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007a18 = load i32, i32* %r30.global-to-local, align 4
  %v2_10007a18 = sub i32 %v1_10007a18, %v0_10007a08
  store i32 %v2_10007a18, i32* %r29.global-to-local, align 4
  store i32 %v0_10007a08, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_10007a18, 1
  br i1 %tmp7, label %dec_label_pc_10007a3c, label %dec_label_pc_10007a28

dec_label_pc_10007a28:                            ; preds = %dec_label_pc_10007a08
  %v1_10007a0c = urem i32 %v0_10007a0c, 128
  store i32 268466732, i32* @lr, align 4
  %v3_10007a28 = trunc i32 %v1_10007a0c to i8
  %v4_10007a28 = call i32 @_charpad(i32 %v0_10007a14, i8 %v3_10007a28, i32 %v2_10007a18)
  %v0_10007a2c = load i32, i32* @r31, align 4
  store i32 %v0_10007a2c, i32* %r30.global-to-local, align 4
  %v1_10007a30 = load i32, i32* @r29, align 4
  %v4_10007a30 = icmp eq i32 %v4_10007a28, %v1_10007a30
  store i32 %v4_10007a28, i32* @r28, align 4
  br i1 %v4_10007a30, label %dec_label_pc_10007a28.dec_label_pc_10007a3c_crit_edge, label %dec_label_pc_10007a60

dec_label_pc_10007a28.dec_label_pc_10007a3c_crit_edge: ; preds = %dec_label_pc_10007a28
  %v0_10007a48.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10007a3c

dec_label_pc_10007a3c:                            ; preds = %dec_label_pc_10007a28.dec_label_pc_10007a3c_crit_edge, %dec_label_pc_10007a08, %entry
  %v0_10007a48 = phi i32 [ %v0_10007a48.pre, %dec_label_pc_10007a28.dec_label_pc_10007a3c_crit_edge ], [ %v0_10007a14, %dec_label_pc_10007a08 ], [ %arg1, %entry ]
  %v0_10007a44 = phi i32 [ %v0_10007a2c, %dec_label_pc_10007a28.dec_label_pc_10007a3c_crit_edge ], [ %v0_10007a08, %dec_label_pc_10007a08 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_10007a44, 1
  br i1 %tmp8, label %dec_label_pc_10007a5c, label %dec_label_pc_10007a54

dec_label_pc_10007a54:                            ; preds = %dec_label_pc_10007a3c
  %v0_10007a40 = load i32, i32* @r27, align 4
  store i32 268466776, i32* @lr, align 4
  %v3_10007a54 = inttoptr i32 %v0_10007a48 to i16*
  %v4_10007a54 = call i32 @__stdio_fwrite(i32 %v0_10007a40, i32 %v0_10007a44, i16* %v3_10007a54)
  br label %dec_label_pc_10007a5c

dec_label_pc_10007a5c:                            ; preds = %dec_label_pc_10007a3c, %dec_label_pc_10007a54
  %v1_10007a5c = phi i32 [ 0, %dec_label_pc_10007a3c ], [ %v4_10007a54, %dec_label_pc_10007a54 ]
  %v0_10007a5c = load i32, i32* @r28, align 4
  %v2_10007a5c = add i32 %v0_10007a5c, %v1_10007a5c
  br label %dec_label_pc_10007a60

dec_label_pc_10007a60:                            ; preds = %dec_label_pc_10007a28, %dec_label_pc_10007a5c
  %v0_10007a64 = phi i32 [ %v4_10007a28, %dec_label_pc_10007a28 ], [ %v2_10007a5c, %dec_label_pc_10007a5c ]
  ret i32 %v0_10007a64

; uselistorder directives
  uselistorder i32 %v0_10007a44, { 1, 0 }
  uselistorder i32 %v2_10007a18, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10007a60, { 1, 0 }
  uselistorder label %dec_label_pc_10007a5c, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_2()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_10007a7c = load i32, i32* @lr, align 4
  store i32 %v0_10007a7c, i32* %r0.global-to-local, align 4
  %v2_10007a84 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_10007a84, i32* %r30.global-to-local, align 4
  %v0_10007a88 = load i32, i32* @r3, align 4
  store i32 %v0_10007a88, i32* %r24.global-to-local, align 4
  %v0_10007a94 = load i32, i32* @r5, align 4
  store i32 %v0_10007a94, i32* %r31.global-to-local, align 4
  %v0_10007a98 = load i32, i32* @r4, align 4
  store i32 %v0_10007a98, i32* @r29, align 4
  store i32 268466848, i32* @lr, align 4
  %v1_10007a9c = bitcast i8** %stack_var_-200 to i32*
  %v2_10007a9c = call i32 @_ppfs_init(i32* %v1_10007a9c)
  %tmp72 = icmp sgt i32 %v2_10007a9c, -1
  br i1 %tmp72, label %dec_label_pc_10007ad0, label %dec_label_pc_10007aa8

dec_label_pc_10007aa8:                            ; preds = %entry
  %v3_10007aa8 = load i8*, i8** %stack_var_-200, align 4
  %v4_10007aa8 = ptrtoint i8* %v3_10007aa8 to i32
  store i32 %v4_10007aa8, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_10007aa8, i32* @r3, align 4
  %v0_10007ab4 = call i32 @__GI_strlen()
  %v3_10007ab8 = icmp eq i32 %v0_10007ab4, 0
  br i1 %v3_10007ab8, label %dec_label_pc_100080d0, label %dec_label_pc_10007ac0

dec_label_pc_10007ac0:                            ; preds = %dec_label_pc_10007aa8
  %v0_10007ac0 = load i32, i32* @r31, align 4
  %v0_10007ac4 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007acc.162 to i32), i32* @lr, align 4
  %v3_10007ac8 = inttoptr i32 %v0_10007ac4 to i16*
  %v4_10007ac8 = call i32 @__stdio_fwrite(i32 %v0_10007ac0, i32 %v0_10007ab4, i16* %v3_10007ac8)
  br label %dec_label_pc_100080d0

dec_label_pc_10007ad0:                            ; preds = %entry
  %v0_10007ad4 = load i32, i32* @r31, align 4
  store i32 268466908, i32* @lr, align 4
  %v2_10007ad8 = call i32 @_ppfs_prepargs(i32 %v2_10007a84, i32 %v0_10007ad4)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_10007b70 = zext i8 %tmp59 to i32
  %v2_10007b74 = icmp sgt i32 %tmp60, 0
  %v2_10007b78 = ptrtoint i32* %stack_var_-112 to i32
  %v2_10007b9c = ptrtoint i32* %stack_var_-344 to i32
  %v3_10007ba0 = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_10007bd4 = icmp eq i32 %tmp57, 0
  %v2_10007f30 = ptrtoint i32* %stack_var_-328 to i32
  %v2_10007e50 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10007e54 = ptrtoint i32* %stack_var_-336 to i32
  %v5_10007cc8 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_10007da4 = icmp eq i32 %tmp57, 1
  %v2_10007d48 = icmp ugt i32 %tmp57, 2
  %v4_10007c88 = zext i8 %tmp55 to i32
  %v0_100080bc.pre = load i32, i32* @r29, align 4
  %v1_10007b88 = mul nuw nsw i32 %v4_10007b70, 8
  %v2_10007b8c = add i32 %v2_10007b78, %v1_10007b88
  %v1_10007b90 = add i32 %v2_10007b8c, -8
  %v1_10007ba4 = add i32 %tmp58, 1
  %v2_10007bfc = icmp ugt i32 %tmp57, 7
  %v2_10007ddc = icmp ugt i32 %tmp57, 15
  %v2_10007e10 = icmp ugt i32 %tmp57, 17
  %v3_10007e10 = icmp eq i32 %tmp57, 17
  %v2_10007eb8 = icmp ugt i32 %tmp57, 19
  %v3_10007eb8 = icmp eq i32 %tmp57, 19
  %v3_10007f24 = icmp eq i32 %tmp57, 20
  %v1_10007c14 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1000afcc.164 to i32), i32 -1)
  %v2_10007c14 = inttoptr i32 %v1_10007c14 to i8*
  %v3_10007d54 = icmp eq i32 %tmp57, 3
  %v3_10007d64 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_100080bc

dec_label_pc_10007ae8.backedge:                   ; preds = %dec_label_pc_10007b3c, %dec_label_pc_10007af4
  %storemerge13.in = phi i32 [ %v1_10007b04, %dec_label_pc_10007af4 ], [ %v1_10007b3c, %dec_label_pc_10007b3c ]
  %v1_10007afc16 = phi i32 [ %v0_10007b14, %dec_label_pc_10007af4 ], [ %v1_10007b3c, %dec_label_pc_10007b3c ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_10007ae8

dec_label_pc_10007ae8:                            ; preds = %dec_label_pc_10007ae8.backedge, %dec_label_pc_100080bc
  %v0_10007b14 = phi i32 [ %v1_10007afc16, %dec_label_pc_10007ae8.backedge ], [ %v0_100080bc, %dec_label_pc_100080bc ]
  %v1_10007b04 = phi i32 [ %storemerge13, %dec_label_pc_10007ae8.backedge ], [ %v0_100080bc, %dec_label_pc_100080bc ]
  %v1_10007ae8 = inttoptr i32 %v1_10007b04 to i8*
  %v2_10007ae8 = load i8, i8* %v1_10007ae8, align 1
  %v3_10007ae8 = zext i8 %v2_10007ae8 to i32
  store i32 %v3_10007ae8, i32* %r0.global-to-local, align 4
  %v3_10007aec = icmp eq i8 %v2_10007ae8, 0
  br i1 %v3_10007aec, label %dec_label_pc_10007afc, label %dec_label_pc_10007af4

dec_label_pc_10007af4:                            ; preds = %dec_label_pc_10007ae8
  %v3_10007af4 = icmp eq i8 %v2_10007ae8, 37
  br i1 %v3_10007af4, label %dec_label_pc_10007afc, label %dec_label_pc_10007ae8.backedge

dec_label_pc_10007afc:                            ; preds = %dec_label_pc_10007af4, %dec_label_pc_10007ae8
  %v4_10007afc = icmp eq i32 %v1_10007b04, %v0_10007b14
  br i1 %v4_10007afc, label %dec_label_pc_10007b30, label %dec_label_pc_10007b04

dec_label_pc_10007b04:                            ; preds = %dec_label_pc_10007afc
  %v2_10007b04 = sub i32 %v1_10007b04, %v0_10007b14
  store i32 %v2_10007b04, i32* @r31, align 4
  %v4_10007b04 = icmp sgt i32 %v2_10007b04, 0
  br i1 %v4_10007b04, label %dec_label_pc_10007b14, label %dec_label_pc_10007b24

dec_label_pc_10007b14:                            ; preds = %dec_label_pc_10007b04
  %v0_10007b1c = load i32, i32* %r24.global-to-local, align 4
  store i32 268466980, i32* @lr, align 4
  %v3_10007b20 = inttoptr i32 %v0_10007b1c to i16*
  %v4_10007b20 = call i32 @__stdio_fwrite(i32 %v0_10007b14, i32 %v2_10007b04, i16* %v3_10007b20)
  %v1_10007b24.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007b24

dec_label_pc_10007b24:                            ; preds = %dec_label_pc_10007b04, %dec_label_pc_10007b14
  %v1_10007b2c = phi i32 [ %v1_10007b24.pre, %dec_label_pc_10007b14 ], [ %v2_10007b04, %dec_label_pc_10007b04 ]
  %storemerge2 = phi i32 [ %v4_10007b20, %dec_label_pc_10007b14 ], [ 0, %dec_label_pc_10007b04 ]
  %v4_10007b24 = icmp eq i32 %storemerge2, %v1_10007b2c
  br i1 %v4_10007b24, label %dec_label_pc_10007b2c, label %dec_label_pc_100080cc

dec_label_pc_10007b2c:                            ; preds = %dec_label_pc_10007b24
  %v0_10007b2c = load i32, i32* %r23.global-to-local, align 4
  %v2_10007b2c = add i32 %v0_10007b2c, %v1_10007b2c
  store i32 %v2_10007b2c, i32* %r23.global-to-local, align 4
  %v0_10007b30.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10007b30

dec_label_pc_10007b30:                            ; preds = %dec_label_pc_10007afc, %dec_label_pc_10007b2c
  %v0_10007b3c = phi i32 [ %v0_10007b14, %dec_label_pc_10007afc ], [ %v0_10007b30.pre, %dec_label_pc_10007b2c ]
  %v1_10007b30 = inttoptr i32 %v0_10007b3c to i8*
  %v2_10007b30 = load i8, i8* %v1_10007b30, align 1
  %v3_10007b30 = zext i8 %v2_10007b30 to i32
  store i32 %v3_10007b30, i32* %r0.global-to-local, align 4
  %v3_10007b34 = icmp eq i8 %v2_10007b30, 0
  br i1 %v3_10007b34, label %dec_label_pc_100080d0, label %dec_label_pc_10007b3c

dec_label_pc_10007b3c:                            ; preds = %dec_label_pc_10007b30
  %v1_10007b3c = add i32 %v0_10007b3c, 1
  %v2_10007b3c = inttoptr i32 %v1_10007b3c to i8*
  %v3_10007b3c = load i8, i8* %v2_10007b3c, align 1
  %v4_10007b3c = zext i8 %v3_10007b3c to i32
  store i32 %v4_10007b3c, i32* %r0.global-to-local, align 4
  %v3_10007b44 = icmp eq i8 %v3_10007b3c, 37
  br i1 %v3_10007b44, label %dec_label_pc_10007ae8.backedge, label %dec_label_pc_10007b4c

dec_label_pc_10007b4c:                            ; preds = %dec_label_pc_10007b3c
  store i32 %v2_10007a84, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10007b3c, i8** %stack_var_-200, align 4
  store i32 268467044, i32* @lr, align 4
  %v3_10007b60 = call i32 @_ppfs_parsespec(i32* %v1_10007a9c, i32 %v1_10007b3c)
  store i32 %v2_10007a84, i32* @r3, align 4
  store i32 268467052, i32* @lr, align 4
  %v0_10007b68 = call i32 @_ppfs_setargs()
  store i32 %v4_10007b70, i32* %r7.global-to-local, align 4
  store i32 %v2_10007b78, i32* %r0.global-to-local, align 4
  br i1 %v2_10007b74, label %dec_label_pc_10007b88, label %dec_label_pc_10007b94

dec_label_pc_10007b88:                            ; preds = %dec_label_pc_10007b4c
  br label %dec_label_pc_10007b94

dec_label_pc_10007b94:                            ; preds = %dec_label_pc_10007b4c, %dec_label_pc_10007b88
  %v0_10007bc082 = phi i32 [ %v1_10007b90, %dec_label_pc_10007b88 ], [ %v2_10007b78, %dec_label_pc_10007b4c ]
  store i32 %v0_10007bc082, i32* %r10.global-to-local, align 4
  store i32 %v2_10007b9c, i32* %r8.global-to-local, align 4
  store i32 %v1_10007ba4, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_10007bc4.preheader, label %dec_label_pc_10007bc4.preheader.thread

dec_label_pc_10007bc4.preheader.thread:           ; preds = %dec_label_pc_10007b94
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007bd0

dec_label_pc_10007bc4.preheader:                  ; preds = %dec_label_pc_10007b94
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_10007ba0, label %dec_label_pc_10007bd0, label %dec_label_pc_10007bbc.preheader

dec_label_pc_10007bbc.preheader:                  ; preds = %dec_label_pc_10007bc4.preheader
  store i32 %v0_10007bc082, i32* %stack_var_-344, align 4
  %v1_10007bc083 = add i32 %v0_10007bc082, 8
  store i32 %v1_10007bc083, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_10007bcc88 = add i32 %tmp58, -1
  store i32 %v1_10007bcc88, i32* %ctr.global-to-local, align 4
  %v2_10007bcc89 = icmp eq i32 %v1_10007bcc88, 0
  br i1 %v2_10007bcc89, label %dec_label_pc_10007bd0, label %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge

dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge: ; preds = %dec_label_pc_10007bbc.preheader, %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge.dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge_crit_edge
  %v1_10007bbc.pre = phi i32 [ %v1_10007bbc.pre.pre, %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge.dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge_crit_edge ], [ %v2_10007b9c, %dec_label_pc_10007bbc.preheader ]
  %v1_10007bc491 = phi i32 [ %v1_10007bc4, %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge.dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge_crit_edge ], [ 4, %dec_label_pc_10007bbc.preheader ]
  %v1_10007bc090 = phi i32 [ %v1_10007bc0, %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge.dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge_crit_edge ], [ %v1_10007bc083, %dec_label_pc_10007bbc.preheader ]
  %v3_10007bbc = add i32 %v1_10007bbc.pre, %v1_10007bc491
  %v4_10007bbc = inttoptr i32 %v3_10007bbc to i32*
  store i32 %v1_10007bc090, i32* %v4_10007bbc, align 4
  %v0_10007bc0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007bc0 = add i32 %v0_10007bc0, 8
  store i32 %v1_10007bc0, i32* %r10.global-to-local, align 4
  %v0_10007bc4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007bc4 = mul i32 %v0_10007bc4, 4
  store i32 %v1_10007bc4, i32* %r0.global-to-local, align 4
  %v1_10007bc8 = add i32 %v0_10007bc4, 1
  store i32 %v1_10007bc8, i32* %r11.global-to-local, align 4
  %v0_10007bcc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007bcc = add i32 %v0_10007bcc, -1
  store i32 %v1_10007bcc, i32* %ctr.global-to-local, align 4
  %v2_10007bcc = icmp eq i32 %v1_10007bcc, 0
  br i1 %v2_10007bcc, label %dec_label_pc_10007bd0, label %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge.dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge_crit_edge

dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge.dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge_crit_edge: ; preds = %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge
  %v1_10007bbc.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge

dec_label_pc_10007bd0:                            ; preds = %dec_label_pc_10007bbc.preheader, %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge, %dec_label_pc_10007bc4.preheader.thread, %dec_label_pc_10007bc4.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_10007bd4, label %dec_label_pc_10007bdc, label %dec_label_pc_10007bfc

dec_label_pc_10007bdc:                            ; preds = %dec_label_pc_10007bd0
  %v0_10007be0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10007be0, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_10007be0, 0
  %v1_10007be8 = zext i1 %tmp96 to i32
  %v2_10007be8 = ashr i32 %v0_10007be0, 31
  %v3_10007be8 = and i32 %v2_10007be8, -2
  %v4_10007be8 = or i32 %v3_10007be8, %v1_10007be8
  store i32 %v4_10007be8, i32* @r5, align 4
  %v1_10007bf0 = call i32 @__asm_rlwinm(i32 %v0_10007d10, i32 0, i32 20, i32 23)
  store i32 %v1_10007bf0, i32* @r4, align 4
  %v1_10007bf4 = inttoptr i32 %v1_10007bf0 to i16*
  %v2_10007bf4 = call i32 @_store_inttype(i16* %v1_10007bf4)
  br label %dec_label_pc_100080b8

dec_label_pc_10007bfc:                            ; preds = %dec_label_pc_10007bd0
  br i1 %v2_10007bfc, label %dec_label_pc_10007ddc, label %dec_label_pc_10007c04

dec_label_pc_10007c04:                            ; preds = %dec_label_pc_10007bfc
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_10007c14 = load i8, i8* %v2_10007c14, align 1
  %v4_10007c14 = zext i8 %v3_10007c14 to i32
  store i32 %v4_10007c14, i32* %r30.global-to-local, align 4
  %v3_10007c18 = icmp eq i8 %v3_10007c14, 10
  br i1 %v3_10007c18, label %dec_label_pc_10007c20, label %dec_label_pc_10007c48

dec_label_pc_10007c20:                            ; preds = %dec_label_pc_10007c04
  store i32 %v0_10007d10, i32* %r0.global-to-local, align 4
  %v1_10007c24 = call i32 @__asm_rlwinm(i32 %v0_10007d10, i32 26, i32 31, i32 31)
  %v1_10007c28 = call i32 @__asm_rlwinm(i32 %v0_10007d10, i32 27, i32 31, i32 31)
  %v3_10007c2c = icmp eq i32 %v1_10007c24, 0
  %v2_10007c30 = icmp ne i32 %v1_10007c28, 0
  %not.v2_10007c30 = xor i1 %v2_10007c30, true
  %v6_10007c34 = sext i1 %not.v2_10007c30 to i32
  store i32 %v6_10007c34, i32* %r0.global-to-local, align 4
  %v1_10007c3c = select i1 %v2_10007c30, i32 44, i32 87
  store i32 %v1_10007c3c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c2c, label %dec_label_pc_10007c48, label %dec_label_pc_10007c44

dec_label_pc_10007c44:                            ; preds = %dec_label_pc_10007c20
  %v1_10007c44 = or i32 %v1_10007c3c, 128
  store i32 %v1_10007c44, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007c48

dec_label_pc_10007c48:                            ; preds = %dec_label_pc_10007c04, %dec_label_pc_10007c20, %dec_label_pc_10007c44
  %v0_10007c48 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007c48 = icmp ugt i32 %v0_10007c48, 5
  br i1 %v2_10007c48, label %dec_label_pc_10007c70, label %dec_label_pc_10007c50

dec_label_pc_10007c50:                            ; preds = %dec_label_pc_10007c48
  %v3_10007c50 = icmp eq i32 %v0_10007c48, 3
  br i1 %v3_10007c50, label %dec_label_pc_10007c58, label %dec_label_pc_10007c60

dec_label_pc_10007c58:                            ; preds = %dec_label_pc_10007c50
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007c74

dec_label_pc_10007c60:                            ; preds = %dec_label_pc_10007c50
  %v3_10007c60 = icmp eq i32 %v0_10007c48, 1
  br i1 %v3_10007c60, label %dec_label_pc_10007c78, label %dec_label_pc_10007c74

dec_label_pc_10007c70:                            ; preds = %dec_label_pc_10007c48
  %v0_10007c70 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007c70 = sub i32 0, %v0_10007c70
  store i32 %v1_10007c70, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007c74

dec_label_pc_10007c74:                            ; preds = %dec_label_pc_10007c60, %dec_label_pc_10007c58, %dec_label_pc_10007c70
  br label %dec_label_pc_10007c78

dec_label_pc_10007c78:                            ; preds = %dec_label_pc_10007c60, %dec_label_pc_10007c74
  %storemerge3 = phi i32 [ 11, %dec_label_pc_10007c74 ], [ 6, %dec_label_pc_10007c60 ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_10007c78 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10007c78, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_10007c78, -1
  br i1 %tmp75, label %dec_label_pc_10007c8c, label %dec_label_pc_10007c88

dec_label_pc_10007c88:                            ; preds = %dec_label_pc_10007c78
  br label %dec_label_pc_10007c8c

dec_label_pc_10007c8c:                            ; preds = %dec_label_pc_10007c78, %dec_label_pc_10007c88
  %storemerge = phi i32 [ %v4_10007c88, %dec_label_pc_10007c88 ], [ 32, %dec_label_pc_10007c78 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_10007c8c = icmp eq i32 %v0_10007c48, 1
  br i1 %v3_10007c8c, label %dec_label_pc_10007ca8, label %dec_label_pc_10007c98

dec_label_pc_10007c98:                            ; preds = %dec_label_pc_10007c8c
  %v0_10007c98 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007c98 = mul i32 %v0_10007c98, 4
  store i32 %v1_10007c98, i32* %r0.global-to-local, align 4
  %v0_10007c9c = load i32, i32* @r1, align 4
  %v2_10007c9c = add i32 %v0_10007c9c, %v1_10007c98
  %v1_10007ca0 = add i32 %v2_10007c9c, 188
  %v2_10007ca0 = inttoptr i32 %v1_10007ca0 to i32*
  %v3_10007ca0 = load i32, i32* %v2_10007ca0, align 4
  store i32 %v3_10007ca0, i32* %r0.global-to-local, align 4
  %v1_10007ca4 = call i32 @__asm_rlwinm(i32 %v3_10007ca0, i32 0, i32 20, i32 23)
  br label %dec_label_pc_10007ca8

dec_label_pc_10007ca8:                            ; preds = %dec_label_pc_10007c8c, %dec_label_pc_10007c98
  %v3_10007ca8 = load i32, i32* %stack_var_-344, align 4
  %v0_10007cac = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10007cac, i32* @r5, align 4
  %v2_10007cb0 = inttoptr i32 %v0_10007cac to i32*
  %v3_10007cb0 = call i32 @_load_inttype(i32 %v3_10007ca8, i32* %v2_10007cb0)
  store i32 %v0_10007cac, i32* %r7.global-to-local, align 4
  %v0_10007cc0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10007cc0, i32* %r8.global-to-local, align 4
  %v6_10007cc8 = call i32 @_uintmaxtostr(i8* %v5_10007cc8, i32 %v3_10007cb0, i32 %v3_10007ca8, i32 %v0_10007cac, i32 %v0_10007cc0)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_10007cc8, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_10007d1c, label %dec_label_pc_10007cdc

dec_label_pc_10007cdc:                            ; preds = %dec_label_pc_10007ca8
  %v7_10007cc8 = inttoptr i32 %v6_10007cc8 to i8*
  %v3_10007cdc = load i8, i8* %v7_10007cc8, align 1
  %v4_10007cdc = zext i8 %v3_10007cdc to i32
  store i32 %v4_10007cdc, i32* %r0.global-to-local, align 4
  %v3_10007ce4 = icmp eq i8 %v3_10007cdc, 45
  br i1 %v3_10007ce4, label %dec_label_pc_10007cec, label %dec_label_pc_10007d00

dec_label_pc_10007cec:                            ; preds = %dec_label_pc_10007cdc
  %v1_10007cec = or i32 %v0_10007d10, 2
  store i32 %v1_10007cec, i32* %r0.global-to-local, align 4
  %v2_10007cf0 = add i32 %v6_10007cc8, 1
  store i32 %v2_10007cf0, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_10007d1c

dec_label_pc_10007d00:                            ; preds = %dec_label_pc_10007cdc
  %v1_10007d00 = and i32 %v0_10007d10, 2
  store i32 %v1_10007d00, i32* %r0.global-to-local, align 4
  %v3_10007d00 = icmp eq i32 %v1_10007d00, 0
  br i1 %v3_10007d00, label %dec_label_pc_10007d10, label %dec_label_pc_10007d08

dec_label_pc_10007d08:                            ; preds = %dec_label_pc_10007d00
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10007d1c

dec_label_pc_10007d10:                            ; preds = %dec_label_pc_10007d00
  %v1_10007d10 = urem i32 %v0_10007d10, 2
  store i32 %v1_10007d10, i32* %r11.global-to-local, align 4
  %v3_10007d10 = icmp eq i32 %v1_10007d10, 0
  br i1 %v3_10007d10, label %dec_label_pc_10007d1c, label %dec_label_pc_10007d18

dec_label_pc_10007d18:                            ; preds = %dec_label_pc_10007d10
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_10007d1c

dec_label_pc_10007d1c:                            ; preds = %dec_label_pc_10007d10, %dec_label_pc_10007ca8, %dec_label_pc_10007d08, %dec_label_pc_10007cec, %dec_label_pc_10007d18
  %v0_10007d88 = phi i32 [ %v6_10007cc8, %dec_label_pc_10007ca8 ], [ %v2_10007cf0, %dec_label_pc_10007cec ], [ %v6_10007cc8, %dec_label_pc_10007d10 ], [ %v6_10007cc8, %dec_label_pc_10007d18 ], [ %v6_10007cc8, %dec_label_pc_10007d08 ]
  %stack_var_-184.0 = phi i32 [ %v0_10007d10, %dec_label_pc_10007ca8 ], [ %v1_10007cec, %dec_label_pc_10007cec ], [ %v0_10007d10, %dec_label_pc_10007d10 ], [ %v0_10007d10, %dec_label_pc_10007d18 ], [ %v0_10007d10, %dec_label_pc_10007d08 ]
  %v3_10007d1c = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10007f30, i32* %r0.global-to-local, align 4
  %v2_10007d24 = sub i32 %v2_10007f30, %v0_10007d88
  %v1_10007d2c = add i32 %v2_10007d24, 127
  store i32 %v1_10007d2c, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_10007d1c, -1
  br i1 %tmp76, label %dec_label_pc_10007d38, label %dec_label_pc_10007d34

dec_label_pc_10007d34:                            ; preds = %dec_label_pc_10007d1c
  br label %dec_label_pc_10007d38

dec_label_pc_10007d38:                            ; preds = %dec_label_pc_10007d1c, %dec_label_pc_10007d34
  %v0_10007d6c = phi i32 [ %v3_10007d1c, %dec_label_pc_10007d1c ], [ 1, %dec_label_pc_10007d34 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10007d3c = and i32 %stack_var_-184.0, 16
  store i32 %v1_10007d3c, i32* %r11.global-to-local, align 4
  %v3_10007d3c = icmp eq i32 %v1_10007d3c, 0
  br i1 %v3_10007d3c, label %dec_label_pc_10007d88, label %dec_label_pc_10007d44

dec_label_pc_10007d44:                            ; preds = %dec_label_pc_10007d38
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10007d48, label %dec_label_pc_10007d54, label %dec_label_pc_10007d64.thread

dec_label_pc_10007d64.thread:                     ; preds = %dec_label_pc_10007d44
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_10007d88

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d44
  br i1 %v3_10007d54, label %dec_label_pc_10007d5c, label %dec_label_pc_10007d64

dec_label_pc_10007d5c:                            ; preds = %dec_label_pc_10007d54
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_10007d88

dec_label_pc_10007d64:                            ; preds = %dec_label_pc_10007d54
  br i1 %v3_10007d64, label %dec_label_pc_10007d6c, label %dec_label_pc_10007d88

dec_label_pc_10007d6c:                            ; preds = %dec_label_pc_10007d64
  %v3_10007d6c = icmp ugt i32 %v0_10007d6c, %v1_10007d2c
  br i1 %v3_10007d6c, label %dec_label_pc_10007d88, label %dec_label_pc_10007d74

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_10007d6c
  %v1_10007d74 = inttoptr i32 %v0_10007d88 to i8*
  %v2_10007d74 = load i8, i8* %v1_10007d74, align 1
  %v3_10007d74 = zext i8 %v2_10007d74 to i32
  store i32 %v3_10007d74, i32* %r0.global-to-local, align 4
  %v3_10007d7c = icmp eq i8 %v2_10007d74, 48
  br i1 %v3_10007d7c, label %dec_label_pc_10007d88, label %dec_label_pc_10007d84

dec_label_pc_10007d84:                            ; preds = %dec_label_pc_10007d74
  %v1_10007d84 = add i32 %v2_10007d24, 128
  br label %dec_label_pc_10007d88

dec_label_pc_10007d88:                            ; preds = %dec_label_pc_10007d64.thread, %dec_label_pc_10007d64, %dec_label_pc_10007d74, %dec_label_pc_10007d6c, %dec_label_pc_10007d38, %dec_label_pc_10007d5c, %dec_label_pc_10007d84
  %v1_10007dd0 = phi i32 [ %v0_10007d6c, %dec_label_pc_10007d64 ], [ 1, %dec_label_pc_10007d74 ], [ %v0_10007d6c, %dec_label_pc_10007d6c ], [ %v0_10007d6c, %dec_label_pc_10007d38 ], [ %v0_10007d6c, %dec_label_pc_10007d5c ], [ %v1_10007d84, %dec_label_pc_10007d84 ], [ %v0_10007d6c, %dec_label_pc_10007d64.thread ]
  %v1_10007d88 = inttoptr i32 %v0_10007d88 to i8*
  %v2_10007d88 = load i8, i8* %v1_10007d88, align 1
  %v3_10007d88 = zext i8 %v2_10007d88 to i32
  store i32 %v3_10007d88, i32* %r0.global-to-local, align 4
  %v3_10007d8c = icmp eq i8 %v2_10007d88, 48
  br i1 %v3_10007d8c, label %dec_label_pc_10007d94, label %dec_label_pc_10007dcc

dec_label_pc_10007d94:                            ; preds = %dec_label_pc_10007d88
  %v0_10007d94 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_10007d94, 6
  br i1 %tmp77, label %dec_label_pc_10007da0, label %dec_label_pc_10007d9c

dec_label_pc_10007d9c:                            ; preds = %dec_label_pc_10007d94
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_10007da0

dec_label_pc_10007da0:                            ; preds = %dec_label_pc_10007d94, %dec_label_pc_10007d9c
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_10007da4, label %dec_label_pc_10007dac, label %dec_label_pc_10007dbc

dec_label_pc_10007dac:                            ; preds = %dec_label_pc_10007da0
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000afb0.165 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007f48

dec_label_pc_10007dbc:                            ; preds = %dec_label_pc_10007da0
  %v3_10007dbc = icmp eq i32 %v1_10007dd0, 0
  br i1 %v3_10007dbc, label %dec_label_pc_10007dc4, label %dec_label_pc_10007dcc

dec_label_pc_10007dc4:                            ; preds = %dec_label_pc_10007dbc
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007f48

dec_label_pc_10007dcc:                            ; preds = %dec_label_pc_10007dbc, %dec_label_pc_10007d88
  %v3_10007dcc = icmp ugt i32 %v1_10007dd0, %v1_10007d2c
  %v2_10007dd0 = sub i32 %v1_10007dd0, %v1_10007d2c
  store i32 %v2_10007dd0, i32* %r29.global-to-local, align 4
  br i1 %v3_10007dcc, label %dec_label_pc_10007f68thread-pre-split, label %dec_label_pc_10007f48

dec_label_pc_10007ddc:                            ; preds = %dec_label_pc_10007bfc
  br i1 %v2_10007ddc, label %dec_label_pc_10007e10, label %dec_label_pc_10007de4

dec_label_pc_10007de4:                            ; preds = %dec_label_pc_10007ddc
  %v3_10007de4 = load i32, i32* %stack_var_-344, align 4
  %v0_10007df0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268467712, i32* @lr, align 4
  %v5_10007dfc = call i32 @_fpmaxtostr(i32 %v0_10007df0, i32* nonnull %stack_var_-196, i32 268466648, i32 %v3_10007de4)
  %v1_10007e00 = icmp slt i32 %v5_10007dfc, 0
  br i1 %v1_10007e00, label %dec_label_pc_100080cc, label %dec_label_pc_10007e08

dec_label_pc_10007e08:                            ; preds = %dec_label_pc_10007de4
  %v0_10007e08 = load i32, i32* %r23.global-to-local, align 4
  %v2_10007e08 = add i32 %v0_10007e08, %v5_10007dfc
  store i32 %v2_10007e08, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_100080b8

dec_label_pc_10007e10:                            ; preds = %dec_label_pc_10007ddc
  br i1 %v2_10007e10, label %dec_label_pc_10007eb8, label %dec_label_pc_10007e18

dec_label_pc_10007e18:                            ; preds = %dec_label_pc_10007e10
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10007e24 = load i32, i32* %stack_var_-344, align 4
  %v1_10007e2c = inttoptr i32 %v3_10007e24 to i32*
  %v2_10007e2c = load i32, i32* %v1_10007e2c, align 4
  br i1 %v3_10007e10, label %dec_label_pc_10007e2c, label %dec_label_pc_10007e80

dec_label_pc_10007e2c:                            ; preds = %dec_label_pc_10007e18
  store i32 %v2_10007e2c, i32* %r0.global-to-local, align 4
  %v3_10007e30 = icmp eq i32 %v2_10007e2c, 0
  store i32 %v2_10007e2c, i32* %stack_var_-340, align 4
  br i1 %v3_10007e30, label %dec_label_pc_10007f50, label %dec_label_pc_10007e3c

dec_label_pc_10007e3c:                            ; preds = %dec_label_pc_10007e2c
  %v3_10007e3c = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10007e3c, i32* %r0.global-to-local, align 4
  %v1_10007e44 = icmp slt i32 %v3_10007e3c, 0
  br i1 %v1_10007e44, label %dec_label_pc_10007e50, label %dec_label_pc_10007e4c

dec_label_pc_10007e4c:                            ; preds = %dec_label_pc_10007e3c
  br label %dec_label_pc_10007e50

dec_label_pc_10007e50:                            ; preds = %dec_label_pc_10007e3c, %dec_label_pc_10007e4c
  %storemerge94 = phi i32 [ %v3_10007e3c, %dec_label_pc_10007e4c ], [ -1, %dec_label_pc_10007e3c ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_10007e50, i32* @r3, align 4
  store i32 %v2_10007e54, i32* @r6, align 4
  store i32 %v2_10007e50, i32* @r4, align 4
  store i32 268467808, i32* @lr, align 4
  %v0_10007e5c = call i32 @__GI_wcsrtombs()
  %v3_10007e60 = icmp eq i32 %v0_10007e5c, -1
  store i32 %v0_10007e5c, i32* @r31, align 4
  br i1 %v3_10007e60, label %dec_label_pc_100080cc, label %dec_label_pc_10007e6c

dec_label_pc_10007e6c:                            ; preds = %dec_label_pc_10007e50
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007f68

dec_label_pc_10007e80:                            ; preds = %dec_label_pc_10007e18
  store i32 %v2_10007f30, i32* @r28, align 4
  store i32 268467860, i32* @lr, align 4
  %v3_10007e90 = call i32 @__GI_wcrtomb(i32 %v2_10007f30, i32 %v2_10007e2c, i32 %v2_10007e54)
  %v3_10007e94 = icmp eq i32 %v3_10007e90, -1
  store i32 %v3_10007e90, i32* @r31, align 4
  br i1 %v3_10007e94, label %dec_label_pc_100080cc, label %dec_label_pc_10007ea0

dec_label_pc_10007ea0:                            ; preds = %dec_label_pc_10007e80
  store i32 %v2_10007f30, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10007eb0 = load i32, i32* @r25, align 4
  %v1_10007eb0 = load i32, i32* @r28, align 4
  %v3_10007eb0 = trunc i32 %v0_10007eb0 to i8
  %v4_10007eb0 = add i32 %v1_10007eb0, %v3_10007e90
  %v5_10007eb0 = inttoptr i32 %v4_10007eb0 to i8*
  store i8 %v3_10007eb0, i8* %v5_10007eb0, align 1
  %v0_10007f6c.pre.pre = load i32, i32* @r31, align 4
  %v1_10007f6c.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10007f68thread-pre-split

dec_label_pc_10007eb8:                            ; preds = %dec_label_pc_10007e10
  br i1 %v2_10007eb8, label %dec_label_pc_10007f24, label %dec_label_pc_10007ec0

dec_label_pc_10007ec0:                            ; preds = %dec_label_pc_10007eb8
  %v3_10007ec4 = load i32, i32* %stack_var_-344, align 4
  %v1_10007ecc = inttoptr i32 %v3_10007ec4 to i32*
  %v2_10007ecc = load i32, i32* %v1_10007ecc, align 4
  br i1 %v3_10007eb8, label %dec_label_pc_10007ecc, label %dec_label_pc_10007efc

dec_label_pc_10007ecc:                            ; preds = %dec_label_pc_10007ec0
  store i32 %v2_10007ecc, i32* %r30.global-to-local, align 4
  %v3_10007ed0 = icmp eq i32 %v2_10007ecc, 0
  br i1 %v3_10007ed0, label %dec_label_pc_10007f50, label %dec_label_pc_10007ed8

dec_label_pc_10007ed8:                            ; preds = %dec_label_pc_10007ecc, %dec_label_pc_10007f2c
  %v0_10007eec = phi i32 [ %v2_10007ecc, %dec_label_pc_10007ecc ], [ %v3_10007f3c, %dec_label_pc_10007f2c ]
  %v3_10007ed8 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10007ed8, i32* %r0.global-to-local, align 4
  %v1_10007ee0 = icmp slt i32 %v3_10007ed8, 0
  br i1 %v1_10007ee0, label %dec_label_pc_10007eec, label %dec_label_pc_10007ee8

dec_label_pc_10007ee8:                            ; preds = %dec_label_pc_10007ed8
  br label %dec_label_pc_10007eec

dec_label_pc_10007eec:                            ; preds = %dec_label_pc_10007ed8, %dec_label_pc_10007ee8
  %storemerge95 = phi i32 [ %v3_10007ed8, %dec_label_pc_10007ee8 ], [ -1, %dec_label_pc_10007ed8 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268467956, i32* @lr, align 4
  %v1_10007ef0 = inttoptr i32 %v0_10007eec to i8*
  %v2_10007ef0 = call i32 @strnlen(i8* %v1_10007ef0)
  store i32 %v2_10007ef0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007f5c

dec_label_pc_10007efc:                            ; preds = %dec_label_pc_10007ec0
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_10007ecc, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10007f30, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007f68thread-pre-split

dec_label_pc_10007f24:                            ; preds = %dec_label_pc_10007eb8
  br i1 %v3_10007f24, label %dec_label_pc_10007f2c, label %dec_label_pc_100080cc

dec_label_pc_10007f2c:                            ; preds = %dec_label_pc_10007f24
  %v0_10007f2c = call i32 @__errno_location()
  %v1_10007f34 = inttoptr i32 %v0_10007f2c to i32*
  %v2_10007f34 = load i32, i32* %v1_10007f34, align 4
  store i32 %v2_10007f34, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268468032, i32* @lr, align 4
  %v3_10007f3c = call i32 @__GI___glibc_strerror_r(i32 %v2_10007f34, i32 %v2_10007f30, i32 128)
  store i32 %v3_10007f3c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007ed8

dec_label_pc_10007f48:                            ; preds = %dec_label_pc_10007dcc, %dec_label_pc_10007dc4, %dec_label_pc_10007dac
  %v0_10007f6c.pre41 = phi i32 [ %v1_10007d2c, %dec_label_pc_10007dcc ], [ 0, %dec_label_pc_10007dc4 ], [ 5, %dec_label_pc_10007dac ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10007f68thread-pre-split

dec_label_pc_10007f50:                            ; preds = %dec_label_pc_10007ecc, %dec_label_pc_10007e2c
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000afb8.166 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007f5c

dec_label_pc_10007f5c:                            ; preds = %dec_label_pc_10007eec, %dec_label_pc_10007f50
  %v0_10007f6c29 = phi i32 [ %v2_10007ef0, %dec_label_pc_10007eec ], [ 6, %dec_label_pc_10007f50 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10007f68

dec_label_pc_10007f68thread-pre-split:            ; preds = %dec_label_pc_10007ea0, %dec_label_pc_10007efc, %dec_label_pc_10007f48, %dec_label_pc_10007dcc
  %v1_10007f6c.pre = phi i32 [ %v2_10007dd0, %dec_label_pc_10007dcc ], [ 0, %dec_label_pc_10007f48 ], [ %v1_10007f6c.pre.pre, %dec_label_pc_10007ea0 ], [ 0, %dec_label_pc_10007efc ]
  %v0_10007f6c.pre = phi i32 [ %v1_10007d2c, %dec_label_pc_10007dcc ], [ %v0_10007f6c.pre41, %dec_label_pc_10007f48 ], [ %v0_10007f6c.pre.pre, %dec_label_pc_10007ea0 ], [ 1, %dec_label_pc_10007efc ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_10007dcc ], [ %stack_var_-184.0, %dec_label_pc_10007f48 ], [ %v0_10007d10, %dec_label_pc_10007ea0 ], [ %v0_10007d10, %dec_label_pc_10007efc ]
  %v0_10007f68.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10007f68

dec_label_pc_10007f68:                            ; preds = %dec_label_pc_10007f68thread-pre-split, %dec_label_pc_10007e6c, %dec_label_pc_10007f5c
  %v1_10007f6c = phi i32 [ %v1_10007f6c.pre, %dec_label_pc_10007f68thread-pre-split ], [ 0, %dec_label_pc_10007e6c ], [ 0, %dec_label_pc_10007f5c ]
  %v0_10007f6c = phi i32 [ %v0_10007f6c.pre, %dec_label_pc_10007f68thread-pre-split ], [ %v0_10007e5c, %dec_label_pc_10007e6c ], [ %v0_10007f6c29, %dec_label_pc_10007f5c ]
  %v0_10007f74 = phi i32 [ %v0_10007f68.pr, %dec_label_pc_10007f68thread-pre-split ], [ 11, %dec_label_pc_10007e6c ], [ 11, %dec_label_pc_10007f5c ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10007f68thread-pre-split ], [ %v0_10007d10, %dec_label_pc_10007e6c ], [ %v0_10007d10, %dec_label_pc_10007f5c ]
  %v3_10007f68 = icmp eq i32 %v0_10007f74, 11
  %v2_10007f6c = add i32 %v0_10007f6c, %v1_10007f6c
  store i32 %v2_10007f6c, i32* %r0.global-to-local, align 4
  br i1 %v3_10007f68, label %dec_label_pc_10007f88, label %dec_label_pc_10007f74

dec_label_pc_10007f74:                            ; preds = %dec_label_pc_10007f68
  %v0_10007f78 = call i32 @__asm_mfcr()
  %v1_10007f7c = call i32 @__asm_rlwinm(i32 %v0_10007f78, i32 30, i32 31, i32 31)
  %v1_10007f80 = add i32 %v1_10007f7c, 1
  %v0_10007f84 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007f84 = add i32 %v0_10007f84, %v1_10007f80
  store i32 %v2_10007f84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10007f88

dec_label_pc_10007f88:                            ; preds = %dec_label_pc_10007f68, %dec_label_pc_10007f74
  %v0_10007fa0 = phi i32 [ %v2_10007f6c, %dec_label_pc_10007f68 ], [ %v2_10007f84, %dec_label_pc_10007f74 ]
  %v3_10007f90 = icmp ugt i32 %tmp, %v0_10007fa0
  br i1 %v3_10007f90, label %dec_label_pc_10007f98, label %dec_label_pc_10007f9c

dec_label_pc_10007f98:                            ; preds = %dec_label_pc_10007f88
  %v2_10007f98 = sub i32 %tmp, %v0_10007fa0
  br label %dec_label_pc_10007f9c

dec_label_pc_10007f9c:                            ; preds = %dec_label_pc_10007f88, %dec_label_pc_10007f98
  %storemerge93 = phi i32 [ %v2_10007f98, %dec_label_pc_10007f98 ], [ 0, %dec_label_pc_10007f88 ]
  %v1_10007fac = phi i32 [ %v2_10007f98, %dec_label_pc_10007f98 ], [ 0, %dec_label_pc_10007f88 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_10007f9c = load i32, i32* @r26, align 4
  %v3_10007f9c = icmp eq i32 %v0_10007f9c, 48
  %v2_10007fa0 = add i32 %v1_10007fac, %v0_10007fa0
  store i32 %v2_10007fa0, i32* %r0.global-to-local, align 4
  %v0_10007fa4 = load i32, i32* %r23.global-to-local, align 4
  %v2_10007fa4 = add i32 %v0_10007fa4, %v2_10007fa0
  store i32 %v2_10007fa4, i32* %r23.global-to-local, align 4
  br i1 %v3_10007f9c, label %dec_label_pc_10007fac, label %dec_label_pc_10007fb4

dec_label_pc_10007fac:                            ; preds = %dec_label_pc_10007f9c
  %v0_10007fac = load i32, i32* %r29.global-to-local, align 4
  %v2_10007fac = add i32 %v0_10007fac, %v1_10007fac
  store i32 %v2_10007fac, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10007fb4

dec_label_pc_10007fb4:                            ; preds = %dec_label_pc_10007f9c, %dec_label_pc_10007fac
  %v0_10007fc8 = phi i32 [ %v1_10007fac, %dec_label_pc_10007f9c ], [ 0, %dec_label_pc_10007fac ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10007fb8 = and i32 %stack_var_-184.1, 8
  %v3_10007fb8 = icmp eq i32 %v1_10007fb8, 0
  br i1 %v3_10007fb8, label %dec_label_pc_10007fc0, label %dec_label_pc_10007fdc

dec_label_pc_10007fc0:                            ; preds = %dec_label_pc_10007fb4
  %v0_10007fc0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268468176, i32* @lr, align 4
  %v4_10007fcc = call i32 @_charpad(i32 %v0_10007fc0, i8 32, i32 %v0_10007fc8)
  %v1_10007fd0 = load i32, i32* @r28, align 4
  %v4_10007fd0 = icmp eq i32 %v4_10007fcc, %v1_10007fd0
  br i1 %v4_10007fd0, label %dec_label_pc_10007fd8, label %dec_label_pc_100080cc

dec_label_pc_10007fd8:                            ; preds = %dec_label_pc_10007fc0
  br label %dec_label_pc_10007fdc

dec_label_pc_10007fdc:                            ; preds = %dec_label_pc_10007fb4, %dec_label_pc_10007fd8
  %v0_10007fe0 = load i32, i32* %r24.global-to-local, align 4
  %v0_10007fe8 = load i32, i32* @r27, align 4
  %v2_10007fe8 = add i32 %v0_10007fe8, ptrtoint (i32* @global_var_1000afc0.167 to i32)
  store i32 268468208, i32* @lr, align 4
  %v2_10007fec = call i32 @__GI_fputs_unlocked(i32 %v2_10007fe8, i32 %v0_10007fe0)
  %v0_10007ff8 = load i32, i32* @r29, align 4
  store i32 268468224, i32* @lr, align 4
  %v4_10007ffc = call i32 @_charpad(i32 %v0_10007fe0, i8 48, i32 %v0_10007ff8)
  %v1_10008000 = load i32, i32* @r29, align 4
  %v4_10008000 = icmp eq i32 %v4_10007ffc, %v1_10008000
  br i1 %v4_10008000, label %dec_label_pc_10008008, label %dec_label_pc_100080cc

dec_label_pc_10008008:                            ; preds = %dec_label_pc_10007fdc
  %v3_10008008 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10008008, i32* %r0.global-to-local, align 4
  %v3_1000800c = icmp eq i32 %v3_10008008, 0
  br i1 %v3_1000800c, label %dec_label_pc_10008014, label %dec_label_pc_1000803c

dec_label_pc_10008014:                            ; preds = %dec_label_pc_10008008
  %v0_10008014 = load i32, i32* @r31, align 4
  %v3_10008014 = icmp eq i32 %v0_10008014, 0
  br i1 %v3_10008014, label %dec_label_pc_10008030.thread, label %dec_label_pc_10008030

dec_label_pc_10008030.thread:                     ; preds = %dec_label_pc_10008014
  br label %dec_label_pc_100080a0

dec_label_pc_10008030:                            ; preds = %dec_label_pc_10008014
  %v0_10008020 = load i32, i32* @r30, align 4
  %v0_10008028 = load i32, i32* %r24.global-to-local, align 4
  store i32 268468272, i32* @lr, align 4
  %v4_1000802c = inttoptr i32 %v0_10008028 to i16*
  %v5_1000802c = call i32 @__stdio_fwrite(i32 %v0_10008020, i32 %v0_10008014, i16* %v4_1000802c)
  %v1_10008030.pre = load i32, i32* @r31, align 4
  %v4_10008030 = icmp eq i32 %v5_1000802c, %v1_10008030.pre
  br i1 %v4_10008030, label %dec_label_pc_100080a0, label %dec_label_pc_100080cc

dec_label_pc_1000803c:                            ; preds = %dec_label_pc_10008008
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10008080.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008080

dec_label_pc_10008048:                            ; preds = %dec_label_pc_10008080
  %tmp78 = icmp ult i32 %v0_10008098, 129
  br i1 %tmp78, label %dec_label_pc_10008050, label %dec_label_pc_1000804c

dec_label_pc_1000804c:                            ; preds = %dec_label_pc_10008048
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_10008050

dec_label_pc_10008050:                            ; preds = %dec_label_pc_10008048, %dec_label_pc_1000804c
  store i32 ptrtoint (i32* @global_var_10008054.168 to i32), i32* @lr, align 4
  %v0_10008050 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10008050, i32* @r30, align 4
  %v3_10008058 = icmp eq i32 %v0_10008050, 0
  br i1 %v3_10008058, label %dec_label_pc_10008074, label %dec_label_pc_1000806c

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10008050
  %v0_1000805c = load i32, i32* %r24.global-to-local, align 4
  store i32 268468336, i32* @lr, align 4
  %v3_1000806c = inttoptr i32 %v0_1000805c to i16*
  %v4_1000806c = call i32 @__stdio_fwrite(i32 %v2_10007f30, i32 %v0_10008050, i16* %v3_1000806c)
  store i32 %v4_1000806c, i32* %r0.global-to-local, align 4
  %v1_10008074.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008074

dec_label_pc_10008074:                            ; preds = %dec_label_pc_10008050, %dec_label_pc_1000806c
  %v1_10008074 = phi i32 [ 0, %dec_label_pc_10008050 ], [ %v1_10008074.pre, %dec_label_pc_1000806c ]
  %v0_10008078 = phi i32 [ 0, %dec_label_pc_10008050 ], [ %v4_1000806c, %dec_label_pc_1000806c ]
  %v4_10008074 = icmp eq i32 %v0_10008078, %v1_10008074
  %v1_10008078 = load i32, i32* @r31, align 4
  %v2_10008078 = sub i32 %v1_10008078, %v0_10008078
  store i32 %v2_10008078, i32* @r31, align 4
  br i1 %v4_10008074, label %dec_label_pc_10008080, label %dec_label_pc_100080cc

dec_label_pc_10008080:                            ; preds = %dec_label_pc_10008074, %dec_label_pc_1000803c
  %v0_10008098 = phi i32 [ %v2_10008078, %dec_label_pc_10008074 ], [ %v0_10008080.pre, %dec_label_pc_1000803c ]
  %v3_10008080 = icmp eq i32 %v0_10008098, 0
  store i32 %v2_10007f30, i32* @r29, align 4
  store i32 %v2_10007e50, i32* @r4, align 4
  store i32 %v2_10007e54, i32* @r6, align 4
  store i32 %v2_10007f30, i32* @r3, align 4
  store i32 %v0_10008098, i32* @r5, align 4
  br i1 %v3_10008080, label %dec_label_pc_100080a0, label %dec_label_pc_10008048

dec_label_pc_100080a0:                            ; preds = %dec_label_pc_10008080, %dec_label_pc_10008030.thread, %dec_label_pc_10008030
  %v0_100080a0 = load i32, i32* %r24.global-to-local, align 4
  %v0_100080a8 = load i32, i32* @r28, align 4
  store i32 268468400, i32* @lr, align 4
  %v4_100080ac = call i32 @_charpad(i32 %v0_100080a0, i8 32, i32 %v0_100080a8)
  %v1_100080b0 = load i32, i32* @r28, align 4
  %v4_100080b0 = icmp eq i32 %v4_100080ac, %v1_100080b0
  br i1 %v4_100080b0, label %dec_label_pc_100080b8, label %dec_label_pc_100080cc

dec_label_pc_100080b8:                            ; preds = %dec_label_pc_100080a0, %dec_label_pc_10007e08, %dec_label_pc_10007bdc
  %stack_var_-184.2 = phi i32 [ %v0_10007d10, %dec_label_pc_10007bdc ], [ %stack_var_-184.1, %dec_label_pc_100080a0 ], [ %v0_10007d10, %dec_label_pc_10007e08 ]
  %v3_100080b8 = load i8*, i8** %stack_var_-200, align 4
  %v4_100080b8 = ptrtoint i8* %v3_100080b8 to i32
  store i32 %v4_100080b8, i32* @r29, align 4
  br label %dec_label_pc_100080bc

dec_label_pc_100080bc:                            ; preds = %dec_label_pc_10007ad0, %dec_label_pc_100080b8
  %v0_100080bc = phi i32 [ %v0_100080bc.pre, %dec_label_pc_10007ad0 ], [ %v4_100080b8, %dec_label_pc_100080b8 ]
  %v0_10007d10 = phi i32 [ %tmp56, %dec_label_pc_10007ad0 ], [ %stack_var_-184.2, %dec_label_pc_100080b8 ]
  br label %dec_label_pc_10007ae8

dec_label_pc_100080cc:                            ; preds = %dec_label_pc_10007f24, %dec_label_pc_100080a0, %dec_label_pc_10008030, %dec_label_pc_10007fdc, %dec_label_pc_10007fc0, %dec_label_pc_10007e80, %dec_label_pc_10007e50, %dec_label_pc_10007de4, %dec_label_pc_10007b24, %dec_label_pc_10008074
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_100080d0

dec_label_pc_100080d0:                            ; preds = %dec_label_pc_10007b30, %dec_label_pc_10007aa8, %dec_label_pc_10007ac0, %dec_label_pc_100080cc
  store i32 %v0_10007a7c, i32* %r0.global-to-local, align 4
  %v0_100080d4 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_100080d4

; uselistorder directives
  uselistorder i32 %v0_10007d10, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10008098, { 1, 2, 0 }
  uselistorder i32 %v1_10007fac, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10007f3c, { 1, 0 }
  uselistorder i32 %v2_10007ecc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10007e2c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10007d10, { 1, 0 }
  uselistorder i32 %v6_10007cc8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10007cac, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10007c98, { 1, 0 }
  uselistorder i32 %v1_10007c3c, { 1, 0 }
  uselistorder i1 %v2_10007c30, { 1, 0 }
  uselistorder i32 %v0_10007be0, { 1, 0, 2 }
  uselistorder i32 %v1_10007bcc, { 1, 0 }
  uselistorder i32 %v0_10007bc4, { 1, 0 }
  uselistorder i32 %v1_10007bc0, { 1, 0 }
  uselistorder i32 %v1_10007b3c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10007b04, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10007b14, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10007f30, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_10007b78, { 1, 2, 0 }
  uselistorder i32 %v4_10007b70, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 37, 36, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %ctr.global-to-local, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 5, { 1, 5, 6, 13, 14, 7, 8, 9, 2, 3, 10, 0, 11, 12, 4 }
  uselistorder i8 10, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 15, { 3, 0, 4, 5, 6, 1, 7, 2 }
  uselistorder label %dec_label_pc_100080d0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_100080cc, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_100080bc, { 1, 0 }
  uselistorder label %dec_label_pc_100080a0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008074, { 1, 0 }
  uselistorder label %dec_label_pc_10008050, { 1, 0 }
  uselistorder label %dec_label_pc_10007fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10007fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10007f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10007f88, { 1, 0 }
  uselistorder label %dec_label_pc_10007f68, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007f68thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10007f5c, { 1, 0 }
  uselistorder label %dec_label_pc_10007eec, { 1, 0 }
  uselistorder label %dec_label_pc_10007ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10007e50, { 1, 0 }
  uselistorder label %dec_label_pc_10007da0, { 1, 0 }
  uselistorder label %dec_label_pc_10007d88, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10007d38, { 1, 0 }
  uselistorder label %dec_label_pc_10007d1c, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10007ca8, { 1, 0 }
  uselistorder label %dec_label_pc_10007c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10007c78, { 1, 0 }
  uselistorder label %dec_label_pc_10007c74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007c48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007bd0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10007bbc.dec_label_pc_10007bbc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007b94, { 1, 0 }
  uselistorder label %dec_label_pc_10007b30, { 1, 0 }
  uselistorder label %dec_label_pc_10007b24, { 1, 0 }
  uselistorder label %dec_label_pc_10007ae8, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_100080ec = load i32, i32* @lr, align 4
  store i32 %v0_100080ec, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_100080fc = load i32, i32* @r4, align 4
  store i32 %v0_100080fc, i32* @r30, align 4
  store i32 268468492, i32* @lr, align 4
  %v3_10008108 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_1000810c = load i32, i32* @r31, align 4
  %v1_1000810c = add i32 %v0_1000810c, 24
  %v2_1000810c = inttoptr i32 %v1_1000810c to i32*
  %v3_1000810c = load i32, i32* %v2_1000810c, align 4
  store i32 %v3_1000810c, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_10008114 = load i32, i32* @r30, align 4
  %v2_10008114 = inttoptr i32 %v0_1000810c to i32*
  store i32 %v0_10008114, i32* %v2_10008114, align 4
  %v0_10008118 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10008118, i32* %ctr.global-to-local, align 4
  %v0_1000811c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000811c = add i32 %v0_1000811c, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10008124 = load i32, i32* @r31, align 4
  %v2_10008124 = add i32 %v1_10008124, 24
  %v3_10008124 = inttoptr i32 %v2_10008124 to i32*
  store i32 %v1_1000811c, i32* %v3_10008124, align 4
  %v0_10008128 = load i32, i32* @r31, align 4
  %v1_10008128 = add i32 %v0_10008128, 40
  store i32 %v1_10008128, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000812c

dec_label_pc_1000812c:                            ; preds = %dec_label_pc_1000812c, %entry
  %v1_1000812c = phi i32 [ %v1_10008130, %dec_label_pc_1000812c ], [ %v1_10008128, %entry ]
  %v0_1000812c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000812c = inttoptr i32 %v1_1000812c to i32*
  store i32 %v0_1000812c, i32* %v2_1000812c, align 4
  %v0_10008130 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008130 = add i32 %v0_10008130, 4
  store i32 %v1_10008130, i32* %r9.global-to-local, align 4
  %v0_10008134 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008134 = add i32 %v0_10008134, -1
  store i32 %v1_10008134, i32* %ctr.global-to-local, align 4
  %v2_10008134 = icmp eq i32 %v1_10008134, 0
  br i1 %v2_10008134, label %dec_label_pc_10008138, label %dec_label_pc_1000812c

dec_label_pc_10008138:                            ; preds = %dec_label_pc_1000812c
  %v0_10008138 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008178

dec_label_pc_10008148:                            ; preds = %dec_label_pc_10008178
  %v3_10008180 = icmp eq i8 %v2_10008178, 37
  br i1 %v3_10008180, label %dec_label_pc_1000814c, label %dec_label_pc_10008174

dec_label_pc_1000814c:                            ; preds = %dec_label_pc_10008148
  %v1_1000814c = add i32 %v0_1000814c, 1
  %v2_1000814c = inttoptr i32 %v1_1000814c to i8*
  %v3_1000814c = load i8, i8* %v2_1000814c, align 1
  %v4_1000814c = zext i8 %v3_1000814c to i32
  store i32 %v4_1000814c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000814c, i32* %r9.global-to-local, align 4
  %v3_10008154 = icmp eq i8 %v3_1000814c, 37
  br i1 %v3_10008154, label %dec_label_pc_10008174, label %dec_label_pc_1000815c

dec_label_pc_1000815c:                            ; preds = %dec_label_pc_1000814c
  %v0_10008150 = load i32, i32* @r31, align 4
  %v2_1000815c = inttoptr i32 %v0_10008150 to i32*
  store i32 %v1_1000814c, i32* %v2_1000815c, align 4
  store i32 268468580, i32* @lr, align 4
  %v1_10008160 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008160 = call i32 @_ppfs_parsespec(i32* %v2_1000815c, i32 %v1_10008160)
  %v1_10008164 = icmp slt i32 %v3_10008160, 0
  br i1 %v1_10008164, label %dec_label_pc_10008190, label %dec_label_pc_1000816c

dec_label_pc_1000816c:                            ; preds = %dec_label_pc_1000815c
  %v0_1000816c = load i32, i32* @r31, align 4
  %v1_1000816c = inttoptr i32 %v0_1000816c to i32*
  %v2_1000816c = load i32, i32* %v1_1000816c, align 4
  br label %dec_label_pc_10008178

dec_label_pc_10008174:                            ; preds = %dec_label_pc_10008148, %dec_label_pc_1000814c
  %v0_10008174 = phi i32 [ %v0_1000814c, %dec_label_pc_10008148 ], [ %v1_1000814c, %dec_label_pc_1000814c ]
  %v1_10008174 = add i32 %v0_10008174, 1
  br label %dec_label_pc_10008178

dec_label_pc_10008178:                            ; preds = %dec_label_pc_1000816c, %dec_label_pc_10008174, %dec_label_pc_10008138
  %v0_1000814c = phi i32 [ %v0_10008138, %dec_label_pc_10008138 ], [ %v1_10008174, %dec_label_pc_10008174 ], [ %v2_1000816c, %dec_label_pc_1000816c ]
  store i32 %v0_1000814c, i32* %r9.global-to-local, align 4
  %v1_10008178 = inttoptr i32 %v0_1000814c to i8*
  %v2_10008178 = load i8, i8* %v1_10008178, align 1
  %v3_10008178 = zext i8 %v2_10008178 to i32
  store i32 %v3_10008178, i32* %r0.global-to-local, align 4
  %v3_1000817c = icmp eq i8 %v2_10008178, 0
  br i1 %v3_1000817c, label %dec_label_pc_10008188, label %dec_label_pc_10008148

dec_label_pc_10008188:                            ; preds = %dec_label_pc_10008178
  %v0_10008188 = load i32, i32* @r30, align 4
  %v1_10008188 = load i32, i32* @r31, align 4
  %v2_10008188 = inttoptr i32 %v1_10008188 to i32*
  store i32 %v0_10008188, i32* %v2_10008188, align 4
  br label %dec_label_pc_10008190

dec_label_pc_10008190:                            ; preds = %dec_label_pc_1000815c, %dec_label_pc_10008188
  %storemerge = phi i32 [ 0, %dec_label_pc_10008188 ], [ -1, %dec_label_pc_1000815c ]
  store i32 %v0_100080ec, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10008178, { 1, 2, 0 }
  uselistorder i32 %v0_1000814c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008134, { 1, 0 }
  uselistorder i32 %v1_10008130, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10008190, { 1, 0 }
  uselistorder label %dec_label_pc_10008178, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008174, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100081a4 = load i32, i32* @lr, align 4
  %v0_100081ac = load i32, i32* @r3, align 4
  store i32 %v0_100081ac, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100081c8 = add i32 %v0_100081ac, 24
  %v2_100081c8 = inttoptr i32 %v1_100081c8 to i32*
  %v3_100081c8 = load i32, i32* %v2_100081c8, align 4
  store i32 %v3_100081c8, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_100081c8, 1
  br i1 %tmp4, label %dec_label_pc_100081ec, label %dec_label_pc_100081d4

dec_label_pc_100081d4:                            ; preds = %entry
  %v2_100081d4 = add i32 %v0_100081ac, 8
  %v3_100081d4 = inttoptr i32 %v2_100081d4 to i32*
  store i32 0, i32* %v3_100081d4, align 4
  %v0_100081d8 = load i32, i32* @r30, align 4
  %v1_100081d8 = load i32, i32* @r3, align 4
  %v2_100081d8 = add i32 %v1_100081d8, 28
  %v3_100081d8 = inttoptr i32 %v2_100081d8 to i32*
  store i32 %v0_100081d8, i32* %v3_100081d8, align 4
  %v0_100081dc = load i32, i32* %r0.global-to-local, align 4
  %v1_100081dc = load i32, i32* @r3, align 4
  %v2_100081dc = add i32 %v1_100081dc, 24
  %v3_100081dc = inttoptr i32 %v2_100081dc to i32*
  store i32 %v0_100081dc, i32* %v3_100081dc, align 4
  %v0_100081e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100081e0 = load i32, i32* @r3, align 4
  %v2_100081e0 = add i32 %v1_100081e0, 4
  %v3_100081e0 = inttoptr i32 %v2_100081e0 to i32*
  store i32 %v0_100081e0, i32* %v3_100081e0, align 4
  store i32 268468712, i32* @lr, align 4
  %v0_100081e4 = call i32 @_ppfs_setargs()
  store i32 %v0_100081e4, i32* %r3.global-to-local, align 4
  %v0_100081e8 = load i32, i32* @r30, align 4
  %v1_100081e8 = load i32, i32* @r31, align 4
  %v2_100081e8 = add i32 %v1_100081e8, 24
  %v3_100081e8 = inttoptr i32 %v2_100081e8 to i32*
  store i32 %v0_100081e8, i32* %v3_100081e8, align 4
  %v0_100081fc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100081ec

dec_label_pc_100081ec:                            ; preds = %entry, %dec_label_pc_100081d4
  %v0_100081fc = phi i32 [ %v0_100081ac, %entry ], [ %v0_100081fc.pre, %dec_label_pc_100081d4 ]
  store i32 %v0_100081a4, i32* %r0.global-to-local, align 4
  ret i32 %v0_100081fc

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_100081ec, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008200 = load i32, i32* @r3, align 4
  %v1_10008200 = add i32 %v0_10008200, 24
  %v2_10008200 = inttoptr i32 %v1_10008200 to i32*
  %v3_10008200 = load i32, i32* %v2_10008200, align 4
  store i32 %v3_10008200, i32* %r0.global-to-local, align 4
  %v1_10008204 = add i32 %v0_10008200, 88
  store i32 %v1_10008204, i32* %r8.global-to-local, align 4
  %v1_10008208 = add i32 %v0_10008200, 8
  %v2_10008208 = inttoptr i32 %v1_10008208 to i32*
  %v3_10008208 = load i32, i32* %v2_10008208, align 4
  store i32 %v3_10008208, i32* %r9.global-to-local, align 4
  %v2_1000820c = icmp sgt i32 %v3_10008200, 0
  %v3_1000820c = icmp eq i32 %v3_10008200, 0
  store i1 %v2_1000820c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000820c, label %dec_label_pc_10008214, label %dec_label_pc_10008400

dec_label_pc_10008214:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10008218 = icmp ne i32 %v3_10008208, -2147483648
  %v4_10008218 = icmp eq i32 %v3_10008208, -2147483648
  store i1 %v3_10008218, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008218, label %dec_label_pc_10008220, label %dec_label_pc_10008260

dec_label_pc_10008220:                            ; preds = %dec_label_pc_10008214
  %v1_10008220 = add i32 %v0_10008200, 76
  %v2_10008220 = inttoptr i32 %v1_10008220 to i8*
  %v3_10008220 = load i8, i8* %v2_10008220, align 1
  %v4_10008220 = zext i8 %v3_10008220 to i32
  store i32 %v4_10008220, i32* %r10.global-to-local, align 4
  store i32 %v1_10008220, i32* %r11.global-to-local, align 4
  %v2_10008228 = icmp ugt i8 %v3_10008220, 8
  store i1 %v2_10008228, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10008220, 7
  br i1 %tmp, label %dec_label_pc_10008248, label %dec_label_pc_10008230

dec_label_pc_10008230:                            ; preds = %dec_label_pc_10008220
  %v1_10008230 = add i32 %v0_10008200, 84
  %v2_10008230 = inttoptr i32 %v1_10008230 to i32*
  %v3_10008230 = load i32, i32* %v2_10008230, align 4
  %v1_10008234 = mul nuw nsw i32 %v4_10008220, 4
  %v2_10008238 = add i32 %v3_10008230, %v1_10008234
  store i32 %v2_10008238, i32* %r9.global-to-local, align 4
  %v1_1000823c = add nuw nsw i32 %v4_10008220, 1
  store i32 %v1_1000823c, i32* %r0.global-to-local, align 4
  %v1_10008240 = trunc i32 %v1_1000823c to i8
  store i8 %v1_10008240, i8* %v2_10008220, align 1
  br label %dec_label_pc_10008254

dec_label_pc_10008248:                            ; preds = %dec_label_pc_10008220
  %v1_10008248 = add i32 %v0_10008200, 80
  %v2_10008248 = inttoptr i32 %v1_10008248 to i32*
  %v3_10008248 = load i32, i32* %v2_10008248, align 4
  store i32 %v3_10008248, i32* %r9.global-to-local, align 4
  %v1_1000824c = add i32 %v3_10008248, 4
  store i32 %v1_1000824c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000824c, i32* %v2_10008248, align 4
  br label %dec_label_pc_10008254

dec_label_pc_10008254:                            ; preds = %dec_label_pc_10008230, %dec_label_pc_10008248
  %v0_10008254 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008254 = inttoptr i32 %v0_10008254 to i32*
  %v2_10008254 = load i32, i32* %v1_10008254, align 4
  store i32 %v2_10008254, i32* %r0.global-to-local, align 4
  %v1_10008258 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008258 = inttoptr i32 %v1_10008258 to i32*
  store i32 %v2_10008254, i32* %v2_10008258, align 4
  %v0_1000825c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000825c = load i32, i32* @r3, align 4
  %v2_1000825c = add i32 %v1_1000825c, 8
  %v3_1000825c = inttoptr i32 %v2_1000825c to i32*
  store i32 %v0_1000825c, i32* %v3_1000825c, align 4
  %v0_10008260.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008260

dec_label_pc_10008260:                            ; preds = %dec_label_pc_10008214, %dec_label_pc_10008254
  %v2_10008290 = phi i32 [ %v0_10008200, %dec_label_pc_10008214 ], [ %v0_10008260.pre, %dec_label_pc_10008254 ]
  %v1_10008260 = add i32 %v2_10008290, 4
  %v2_10008260 = inttoptr i32 %v1_10008260 to i32*
  %v3_10008260 = load i32, i32* %v2_10008260, align 4
  store i32 %v3_10008260, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10008268 = icmp ne i32 %v3_10008260, -2147483648
  %v4_10008268 = icmp eq i32 %v3_10008260, -2147483648
  store i1 %v3_10008268, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008268, label %dec_label_pc_10008270, label %dec_label_pc_100083f0.preheader

dec_label_pc_10008270:                            ; preds = %dec_label_pc_10008260
  %v1_10008270 = add i32 %v2_10008290, 76
  %v2_10008270 = inttoptr i32 %v1_10008270 to i8*
  %v3_10008270 = load i8, i8* %v2_10008270, align 1
  %v4_10008270 = zext i8 %v3_10008270 to i32
  store i32 %v4_10008270, i32* %r10.global-to-local, align 4
  store i32 %v1_10008270, i32* %r11.global-to-local, align 4
  %v2_10008278 = icmp ugt i8 %v3_10008270, 8
  store i1 %v2_10008278, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_10008270, 7
  br i1 %tmp22, label %dec_label_pc_10008298, label %dec_label_pc_10008280

dec_label_pc_10008280:                            ; preds = %dec_label_pc_10008270
  %v1_10008280 = add i32 %v2_10008290, 84
  %v2_10008280 = inttoptr i32 %v1_10008280 to i32*
  %v3_10008280 = load i32, i32* %v2_10008280, align 4
  %v1_10008284 = mul nuw nsw i32 %v4_10008270, 4
  %v2_10008288 = add i32 %v3_10008280, %v1_10008284
  store i32 %v2_10008288, i32* %r9.global-to-local, align 4
  %v1_1000828c = add nuw nsw i32 %v4_10008270, 1
  store i32 %v1_1000828c, i32* %r0.global-to-local, align 4
  %v1_10008290 = trunc i32 %v1_1000828c to i8
  store i8 %v1_10008290, i8* %v2_10008270, align 1
  br label %dec_label_pc_100082a4

dec_label_pc_10008298:                            ; preds = %dec_label_pc_10008270
  %v1_10008298 = add i32 %v2_10008290, 80
  %v2_10008298 = inttoptr i32 %v1_10008298 to i32*
  %v3_10008298 = load i32, i32* %v2_10008298, align 4
  store i32 %v3_10008298, i32* %r9.global-to-local, align 4
  %v1_1000829c = add i32 %v3_10008298, 4
  store i32 %v1_1000829c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000829c, i32* %v2_10008298, align 4
  br label %dec_label_pc_100082a4

dec_label_pc_100082a4:                            ; preds = %dec_label_pc_10008280, %dec_label_pc_10008298
  %v0_100082a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100082a4 = inttoptr i32 %v0_100082a4 to i32*
  %v2_100082a4 = load i32, i32* %v1_100082a4, align 4
  store i32 %v2_100082a4, i32* %r0.global-to-local, align 4
  %v1_100082a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100082a8 = inttoptr i32 %v1_100082a8 to i32*
  store i32 %v2_100082a4, i32* %v2_100082a8, align 4
  %v0_100082ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100082ac = load i32, i32* @r3, align 4
  %v2_100082ac = add i32 %v1_100082ac, 4
  %v3_100082ac = inttoptr i32 %v2_100082ac to i32*
  store i32 %v0_100082ac, i32* %v3_100082ac, align 4
  %v0_100083f05.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100083f0.preheader

dec_label_pc_100083f0.preheader:                  ; preds = %dec_label_pc_10008260, %dec_label_pc_100082a4
  %v0_100083f05 = phi i32 [ %v2_10008290, %dec_label_pc_10008260 ], [ %v0_100083f05.pre, %dec_label_pc_100082a4 ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100083f06 = add i32 %v0_100083f05, 28
  %v2_100083f07 = inttoptr i32 %v1_100083f06 to i32*
  %v3_100083f08 = load i32, i32* %v2_100083f07, align 4
  store i32 %v3_100083f08, i32* %r0.global-to-local, align 4
  %v2_100083f49 = icmp sgt i32 %v3_100083f08, 0
  %v3_100083f410 = icmp slt i32 %v3_100083f08, 0
  store i1 %v3_100083f410, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100083f49, label %dec_label_pc_100082b8, label %dec_label_pc_10008440

dec_label_pc_100082b8:                            ; preds = %dec_label_pc_100083f0.preheader, %dec_label_pc_100083ec
  %v2_100083cc = phi i32 [ %v0_100083f0, %dec_label_pc_100083ec ], [ %v0_100083f05, %dec_label_pc_100083f0.preheader ]
  %v0_100082b8 = phi i32 [ %v1_100083ec, %dec_label_pc_100083ec ], [ 0, %dec_label_pc_100083f0.preheader ]
  %v1_100082b8 = mul i32 %v0_100082b8, 4
  %v2_100082bc = add i32 %v1_100082b8, %v2_100083cc
  store i32 %v2_100082bc, i32* %r9.global-to-local, align 4
  %v1_100082c0 = add i32 %v2_100082bc, 40
  %v2_100082c0 = inttoptr i32 %v1_100082c0 to i32*
  %v3_100082c0 = load i32, i32* %v2_100082c0, align 4
  store i32 %v3_100082c0, i32* %r0.global-to-local, align 4
  %v2_100082c4 = icmp sgt i32 %v3_100082c0, 8
  %v3_100082c4 = icmp eq i32 %v3_100082c0, 8
  store i1 %v2_100082c4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100082c4, label %dec_label_pc_100083ec, label %dec_label_pc_100082cc

dec_label_pc_100082cc:                            ; preds = %dec_label_pc_100082b8
  %v1_100082cc = add i32 %v2_100083cc, 76
  store i32 %v1_100082cc, i32* %r10.global-to-local, align 4
  br i1 %v2_100082c4, label %dec_label_pc_100082e8, label %dec_label_pc_100082d4

dec_label_pc_100082d4:                            ; preds = %dec_label_pc_100082cc
  %v2_100082d4 = icmp sgt i32 %v3_100082c0, 2
  store i1 %v2_100082d4, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_100082c0, 3
  br i1 %tmp23, label %dec_label_pc_100083b0, label %dec_label_pc_10008300

dec_label_pc_100082e8:                            ; preds = %dec_label_pc_100082cc
  %v2_100082e8 = icmp sgt i32 %v3_100082c0, 1024
  store i1 %v2_100082e8, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_100082c0, 1025
  br i1 %tmp24, label %dec_label_pc_100083b0, label %dec_label_pc_100082f4

dec_label_pc_100082f4:                            ; preds = %dec_label_pc_100082e8
  %v2_100082f4 = icmp sgt i32 %v3_100082c0, 2048
  %v3_100082f4 = icmp eq i32 %v3_100082c0, 2048
  store i1 %v2_100082f4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100082f4, label %dec_label_pc_10008308, label %dec_label_pc_100082fc

dec_label_pc_100082fc:                            ; preds = %dec_label_pc_100082f4
  %v2_100082fc = icmp sgt i32 %v3_100082c0, 2055
  %v3_100082fc = icmp eq i32 %v3_100082c0, 2055
  store i1 %v2_100082fc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100082fc, label %dec_label_pc_10008364, label %dec_label_pc_100083b0

dec_label_pc_10008300:                            ; preds = %dec_label_pc_100082d4
  %v3_100082e0 = icmp eq i32 %v3_100082c0, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100082e0, label %dec_label_pc_10008364, label %dec_label_pc_100083b0

dec_label_pc_10008308:                            ; preds = %dec_label_pc_100082f4
  %v2_10008308 = inttoptr i32 %v1_100082cc to i8*
  %v3_10008308 = load i8, i8* %v2_10008308, align 1
  %v4_10008308 = zext i8 %v3_10008308 to i32
  %v2_1000830c = icmp ugt i8 %v3_10008308, 6
  store i1 %v2_1000830c, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_10008308, 2
  %v1_10008310 = zext i8 %tmp28 to i32
  store i32 %v1_10008310, i32* %r9.global-to-local, align 4
  %v2_10008314 = add nuw nsw i32 %v1_10008310, %v4_10008308
  store i32 %v2_10008314, i32* %r0.global-to-local, align 4
  %v1_10008318 = trunc i32 %v2_10008314 to i8
  store i8 %v1_10008318, i8* %v2_10008308, align 1
  %v0_1000831c = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1000831c, label %dec_label_pc_1000833c, label %dec_label_pc_10008320

dec_label_pc_10008320:                            ; preds = %dec_label_pc_10008308
  %v0_10008320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008320 = urem i32 %v0_10008320, 256
  store i32 %v1_10008320, i32* %r9.global-to-local, align 4
  %v0_10008324 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008324 = add i32 %v0_10008324, 8
  %v2_10008324 = inttoptr i32 %v1_10008324 to i32*
  %v3_10008324 = load i32, i32* %v2_10008324, align 4
  %v1_10008328 = mul nuw nsw i32 %v1_10008320, 4
  store i32 %v1_10008328, i32* %r0.global-to-local, align 4
  %v1_1000832c = add nuw nsw i32 %v1_10008320, 2
  store i32 %v1_1000832c, i32* %r9.global-to-local, align 4
  %v2_10008330 = add i32 %v3_10008324, %v1_10008328
  store i32 %v2_10008330, i32* %r11.global-to-local, align 4
  %v1_10008334 = trunc i32 %v1_1000832c to i8
  %v2_10008334 = load i32, i32* @r3, align 4
  %v3_10008334 = add i32 %v2_10008334, 76
  %v4_10008334 = inttoptr i32 %v3_10008334 to i8*
  store i8 %v1_10008334, i8* %v4_10008334, align 1
  br label %dec_label_pc_10008350

dec_label_pc_1000833c:                            ; preds = %dec_label_pc_10008308
  %v0_1000833c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000833c = add i32 %v0_1000833c, 4
  %v2_1000833c = inttoptr i32 %v1_1000833c to i32*
  %v3_1000833c = load i32, i32* %v2_1000833c, align 4
  %v1_10008340 = add i32 %v3_1000833c, 7
  store i32 %v1_10008340, i32* %r9.global-to-local, align 4
  %v1_10008344 = call i32 @__asm_rlwinm(i32 %v1_10008340, i32 0, i32 0, i32 28)
  store i32 %v1_10008344, i32* %r11.global-to-local, align 4
  %v1_10008348 = add i32 %v1_10008344, 8
  store i32 %v1_10008348, i32* %r0.global-to-local, align 4
  %v1_1000834c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000834c = add i32 %v1_1000834c, 4
  %v3_1000834c = inttoptr i32 %v2_1000834c to i32*
  store i32 %v1_10008348, i32* %v3_1000834c, align 4
  br label %dec_label_pc_10008350

dec_label_pc_10008350:                            ; preds = %dec_label_pc_10008320, %dec_label_pc_1000833c
  %v0_10008350 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008350 = inttoptr i32 %v0_10008350 to i32*
  %v2_10008350 = load i32, i32* %v1_10008350, align 4
  store i32 %v2_10008350, i32* %r9.global-to-local, align 4
  %v1_10008354 = add i32 %v0_10008350, 4
  %v2_10008354 = inttoptr i32 %v1_10008354 to i32*
  %v3_10008354 = load i32, i32* %v2_10008354, align 4
  store i32 %v3_10008354, i32* %r10.global-to-local, align 4
  %v1_10008358 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008358 = inttoptr i32 %v1_10008358 to i32*
  store i32 %v2_10008350, i32* %v2_10008358, align 4
  %v0_1000835c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000835c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000835c = add i32 %v1_1000835c, 4
  %v3_1000835c = inttoptr i32 %v2_1000835c to i32*
  store i32 %v0_1000835c, i32* %v3_1000835c, align 4
  br label %dec_label_pc_100083e8

dec_label_pc_10008364:                            ; preds = %dec_label_pc_100082fc, %dec_label_pc_10008300
  store i32 %v1_100082cc, i32* %r10.global-to-local, align 4
  %v1_10008368 = add i32 %v2_100083cc, 77
  %v2_10008368 = inttoptr i32 %v1_10008368 to i8*
  %v3_10008368 = load i8, i8* %v2_10008368, align 1
  %v4_10008368 = zext i8 %v3_10008368 to i32
  store i32 %v4_10008368, i32* %r11.global-to-local, align 4
  %v2_1000836c = icmp ugt i8 %v3_10008368, 8
  store i1 %v2_1000836c, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_10008368, 7
  br i1 %tmp25, label %dec_label_pc_10008390, label %dec_label_pc_10008374

dec_label_pc_10008374:                            ; preds = %dec_label_pc_10008364
  %v1_10008374 = add i32 %v2_100083cc, 84
  %v2_10008374 = inttoptr i32 %v1_10008374 to i32*
  %v3_10008374 = load i32, i32* %v2_10008374, align 4
  %v1_10008378 = mul nuw nsw i32 %v4_10008368, 8
  %v1_1000837c = add nuw nsw i32 %v1_10008378, 32
  %v2_10008380 = add i32 %v1_1000837c, %v3_10008374
  store i32 %v2_10008380, i32* %r9.global-to-local, align 4
  %v1_10008384 = add nuw nsw i32 %v4_10008368, 1
  store i32 %v1_10008384, i32* %r0.global-to-local, align 4
  %v1_10008388 = trunc i32 %v1_10008384 to i8
  store i8 %v1_10008388, i8* %v2_10008368, align 1
  br label %dec_label_pc_100083e8

dec_label_pc_10008390:                            ; preds = %dec_label_pc_10008364
  %v1_10008390 = add i32 %v2_100083cc, 80
  %v2_10008390 = inttoptr i32 %v1_10008390 to i32*
  %v3_10008390 = load i32, i32* %v2_10008390, align 4
  %v1_10008394 = add i32 %v3_10008390, 7
  store i32 %v1_10008394, i32* %r9.global-to-local, align 4
  %v1_10008398 = call i32 @__asm_rlwinm(i32 %v1_10008394, i32 0, i32 0, i32 28)
  store i32 %v1_10008398, i32* %r9.global-to-local, align 4
  %v1_1000839c = add i32 %v1_10008398, 8
  store i32 %v1_1000839c, i32* %r0.global-to-local, align 4
  %v1_100083a0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100083a0 = add i32 %v1_100083a0, 4
  %v3_100083a0 = inttoptr i32 %v2_100083a0 to i32*
  store i32 %v1_1000839c, i32* %v3_100083a0, align 4
  br label %dec_label_pc_100083e8

dec_label_pc_100083b0:                            ; preds = %dec_label_pc_100082fc, %dec_label_pc_10008300, %dec_label_pc_100082e8, %dec_label_pc_100082d4
  %v2_100083b0 = inttoptr i32 %v1_100082cc to i8*
  %v3_100083b0 = load i8, i8* %v2_100083b0, align 1
  %v4_100083b0 = zext i8 %v3_100083b0 to i32
  store i32 %v4_100083b0, i32* %r11.global-to-local, align 4
  %v2_100083b4 = icmp ugt i8 %v3_100083b0, 8
  store i1 %v2_100083b4, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_100083b0, 7
  br i1 %tmp26, label %dec_label_pc_100083d4, label %dec_label_pc_100083bc

dec_label_pc_100083bc:                            ; preds = %dec_label_pc_100083b0
  %v1_100083bc = add i32 %v2_100083cc, 84
  %v2_100083bc = inttoptr i32 %v1_100083bc to i32*
  %v3_100083bc = load i32, i32* %v2_100083bc, align 4
  %v1_100083c0 = mul nuw nsw i32 %v4_100083b0, 4
  %v2_100083c4 = add i32 %v3_100083bc, %v1_100083c0
  store i32 %v2_100083c4, i32* %r9.global-to-local, align 4
  %v1_100083c8 = add nuw nsw i32 %v4_100083b0, 1
  store i32 %v1_100083c8, i32* %r0.global-to-local, align 4
  %v1_100083cc = trunc i32 %v1_100083c8 to i8
  store i8 %v1_100083cc, i8* %v2_100083b0, align 1
  br label %dec_label_pc_100083e0

dec_label_pc_100083d4:                            ; preds = %dec_label_pc_100083b0
  %v1_100083d4 = add i32 %v2_100083cc, 80
  %v2_100083d4 = inttoptr i32 %v1_100083d4 to i32*
  %v3_100083d4 = load i32, i32* %v2_100083d4, align 4
  store i32 %v3_100083d4, i32* %r9.global-to-local, align 4
  %v1_100083d8 = add i32 %v3_100083d4, 4
  store i32 %v1_100083d8, i32* %r0.global-to-local, align 4
  store i32 %v1_100083d8, i32* %v2_100083d4, align 4
  br label %dec_label_pc_100083e0

dec_label_pc_100083e0:                            ; preds = %dec_label_pc_100083bc, %dec_label_pc_100083d4
  %v0_100083e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100083e0 = inttoptr i32 %v0_100083e0 to i32*
  %v2_100083e0 = load i32, i32* %v1_100083e0, align 4
  store i32 %v2_100083e0, i32* %r0.global-to-local, align 4
  %v1_100083e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100083e4 = inttoptr i32 %v1_100083e4 to i32*
  store i32 %v2_100083e0, i32* %v2_100083e4, align 4
  br label %dec_label_pc_100083e8

dec_label_pc_100083e8:                            ; preds = %dec_label_pc_10008390, %dec_label_pc_10008374, %dec_label_pc_10008350, %dec_label_pc_100083e0
  %v0_100083e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100083e8 = add i32 %v0_100083e8, 8
  store i32 %v1_100083e8, i32* %r8.global-to-local, align 4
  %v0_100083ec.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_100083f0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100083ec

dec_label_pc_100083ec:                            ; preds = %dec_label_pc_100082b8, %dec_label_pc_100083e8
  %v0_100083f0 = phi i32 [ %v2_100083cc, %dec_label_pc_100082b8 ], [ %v0_100083f0.pre, %dec_label_pc_100083e8 ]
  %v0_100083ec = phi i32 [ %v0_100082b8, %dec_label_pc_100082b8 ], [ %v0_100083ec.pre, %dec_label_pc_100083e8 ]
  %v1_100083ec = add i32 %v0_100083ec, 1
  store i32 %v1_100083ec, i32* %r7.global-to-local, align 4
  %v1_100083f0 = add i32 %v0_100083f0, 28
  %v2_100083f0 = inttoptr i32 %v1_100083f0 to i32*
  %v3_100083f0 = load i32, i32* %v2_100083f0, align 4
  store i32 %v3_100083f0, i32* %r0.global-to-local, align 4
  %v2_100083f4 = icmp slt i32 %v1_100083ec, %v3_100083f0
  %v3_100083f4 = icmp sgt i32 %v1_100083ec, %v3_100083f0
  store i1 %v3_100083f4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100083f4, label %dec_label_pc_100082b8, label %dec_label_pc_10008440

dec_label_pc_10008400:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_10008404 = icmp ne i32 %v3_10008208, -2147483648
  %v4_10008404 = icmp eq i32 %v3_10008208, -2147483648
  store i1 %v3_10008404, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008404, label %dec_label_pc_1000840c, label %dec_label_pc_10008420

dec_label_pc_1000840c:                            ; preds = %dec_label_pc_10008400
  %v1_1000840c = add i32 %v0_10008200, 36
  %v2_1000840c = inttoptr i32 %v1_1000840c to i8*
  %v3_1000840c = load i8, i8* %v2_1000840c, align 1
  %v4_1000840c = zext i8 %v3_1000840c to i32
  %v1_10008410 = mul nuw nsw i32 %v4_1000840c, 8
  %v2_10008414 = add i32 %v1_10008410, %v1_10008204
  store i32 %v2_10008414, i32* %r9.global-to-local, align 4
  %v1_10008418 = add i32 %v2_10008414, -8
  %v2_10008418 = inttoptr i32 %v1_10008418 to i32*
  %v3_10008418 = load i32, i32* %v2_10008418, align 4
  store i32 %v3_10008418, i32* %r0.global-to-local, align 4
  store i32 %v3_10008418, i32* %v2_10008208, align 4
  %v0_10008420.pre = load i32, i32* @r3, align 4
  %v1_10008424.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008420

dec_label_pc_10008420:                            ; preds = %dec_label_pc_10008400, %dec_label_pc_1000840c
  %v1_10008424 = phi i32 [ -2147483648, %dec_label_pc_10008400 ], [ %v1_10008424.pre, %dec_label_pc_1000840c ]
  %v1_1000843c = phi i32 [ %v0_10008200, %dec_label_pc_10008400 ], [ %v0_10008420.pre, %dec_label_pc_1000840c ]
  %v1_10008420 = add i32 %v1_1000843c, 4
  %v2_10008420 = inttoptr i32 %v1_10008420 to i32*
  %v3_10008420 = load i32, i32* %v2_10008420, align 4
  store i32 %v3_10008420, i32* %r0.global-to-local, align 4
  %v3_10008424 = icmp sgt i32 %v3_10008420, %v1_10008424
  %v4_10008424 = icmp eq i32 %v3_10008420, %v1_10008424
  store i1 %v3_10008424, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008424, label %dec_label_pc_1000842c, label %dec_label_pc_10008440

dec_label_pc_1000842c:                            ; preds = %dec_label_pc_10008420
  %v1_1000842c = add i32 %v1_1000843c, 37
  %v2_1000842c = inttoptr i32 %v1_1000842c to i8*
  %v3_1000842c = load i8, i8* %v2_1000842c, align 1
  %v4_1000842c = zext i8 %v3_1000842c to i32
  %v1_10008430 = mul nuw nsw i32 %v4_1000842c, 8
  %v1_10008434 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008434 = add i32 %v1_10008430, %v1_10008434
  store i32 %v2_10008434, i32* %r9.global-to-local, align 4
  %v1_10008438 = add i32 %v2_10008434, -8
  %v2_10008438 = inttoptr i32 %v1_10008438 to i32*
  %v3_10008438 = load i32, i32* %v2_10008438, align 4
  store i32 %v3_10008438, i32* %r0.global-to-local, align 4
  store i32 %v3_10008438, i32* %v2_10008420, align 4
  %v0_10008440.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008440

dec_label_pc_10008440:                            ; preds = %dec_label_pc_100083ec, %dec_label_pc_100083f0.preheader, %dec_label_pc_10008420, %dec_label_pc_1000842c
  %v0_10008440 = phi i32 [ %v1_1000843c, %dec_label_pc_10008420 ], [ %v0_10008440.pre, %dec_label_pc_1000842c ], [ %v0_100083f05, %dec_label_pc_100083f0.preheader ], [ %v0_100083f0, %dec_label_pc_100083ec ]
  %v1_10008440 = add i32 %v0_10008440, 8
  %v2_10008440 = inttoptr i32 %v1_10008440 to i32*
  %v3_10008440 = load i32, i32* %v2_10008440, align 4
  store i32 %v3_10008440, i32* %r11.global-to-local, align 4
  %v2_10008444 = icmp sgt i32 %v3_10008440, 0
  store i1 %v2_10008444, i1* %cr7_gt.global-to-local, align 1
  %v0_10008448 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_10008440, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_10008448)
  %v0_1000844c = load i32, i32* @r3, align 4
  %v1_1000844c = add i32 %v0_1000844c, 16
  %v2_1000844c = inttoptr i32 %v1_1000844c to i32*
  %v3_1000844c = load i32, i32* %v2_1000844c, align 4
  store i32 %v3_1000844c, i32* %r0.global-to-local, align 4
  %v0_10008450 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008450 = sub i32 0, %v0_10008450
  store i32 %v1_10008450, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_10008458 = add i32 %v0_1000844c, 8
  %v3_10008458 = inttoptr i32 %v2_10008458 to i32*
  store i32 %v1_10008450, i32* %v3_10008458, align 4
  %v0_1000845c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000845c = or i32 %v0_1000845c, 8
  store i32 %v1_1000845c, i32* %r0.global-to-local, align 4
  %v0_10008460 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008460 = load i32, i32* @r3, align 4
  %v2_10008460 = add i32 %v1_10008460, 20
  %v3_10008460 = inttoptr i32 %v2_10008460 to i32*
  store i32 %v0_10008460, i32* %v3_10008460, align 4
  %v1_10008464 = call i32 @__asm_rlwinm(i32 %v1_1000845c, i32 0, i32 0, i32 30)
  store i32 %v1_10008464, i32* %r0.global-to-local, align 4
  %v1_10008468 = load i32, i32* @r3, align 4
  %v2_10008468 = add i32 %v1_10008468, 16
  %v3_10008468 = inttoptr i32 %v2_10008468 to i32*
  store i32 %v1_10008464, i32* %v3_10008468, align 4
  %v0_1000846c = load i32, i32* @r3, align 4
  ret i32 %v0_1000846c

; uselistorder directives
  uselistorder i32 %v3_10008420, { 1, 0, 2 }
  uselistorder i32 %v1_10008424, { 1, 0 }
  uselistorder i32 %v3_100083f0, { 1, 0, 2 }
  uselistorder i32 %v1_100083ec, { 2, 3, 1, 0 }
  uselistorder i32 %v0_100083f0, { 0, 2, 1 }
  uselistorder i32 %v4_10008368, { 1, 0, 2 }
  uselistorder i32 %v1_10008328, { 1, 0 }
  uselistorder i32 %v1_10008320, { 2, 0, 1 }
  uselistorder i32 %v1_100082cc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_100082c0, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_100082b8, { 1, 0 }
  uselistorder i32 %v2_100083cc, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_100083f05, { 1, 0, 2 }
  uselistorder i32 %v3_10008260, { 1, 0, 2 }
  uselistorder i32 %v2_10008290, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_10008208, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_10008200, { 1, 0, 2 }
  uselistorder i32 %v0_10008200, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 17, 18, 19, 20, 22, 21, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 14, 13, 15, 16 }
  uselistorder i32* %r8.global-to-local, { 2, 8, 6, 7, 4, 5, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 7, 8, 9, 10, 11, 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 20, 21, 22, 23, 24, 25, 26, 7, 27, 28, 29, 0, 1, 2, 3, 4, 5, 6, 19, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cr7_gt.global-to-local, { 17, 18, 19, 9, 1, 2, 3, 4, 0, 15, 5, 6, 7, 8, 16, 10, 11, 12, 13, 14 }
  uselistorder i32 -8, { 2, 3, 4, 5, 6, 1, 7, 0 }
  uselistorder i32 1025, { 0, 2, 3, 1, 4 }
  uselistorder i32 80, { 3, 2, 1, 0, 4, 5 }
  uselistorder i8 8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10008440, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10008420, { 1, 0 }
  uselistorder label %dec_label_pc_100083ec, { 1, 0 }
  uselistorder label %dec_label_pc_100083e8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100083e0, { 1, 0 }
  uselistorder label %dec_label_pc_100083b0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008364, { 1, 0 }
  uselistorder label %dec_label_pc_10008350, { 1, 0 }
  uselistorder label %dec_label_pc_100082b8, { 1, 0 }
  uselistorder label %dec_label_pc_100083f0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100082a4, { 1, 0 }
  uselistorder label %dec_label_pc_10008260, { 1, 0 }
  uselistorder label %dec_label_pc_10008254, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000847c

dec_label_pc_1000847c:                            ; preds = %dec_label_pc_1000847c, %entry
  %v0_1000847c = phi i32 [ ptrtoint (i32* @global_var_1000b04c.169 to i32), %entry ], [ %v1_1000847c, %dec_label_pc_1000847c ]
  %v1_1000847c = add i32 %v0_1000847c, -2
  %v2_1000847c = inttoptr i32 %v1_1000847c to i16*
  %v3_1000847c = load i16, i16* %v2_1000847c, align 2
  %v4_1000847c = sext i16 %v3_1000847c to i32
  %v4_10008480 = icmp eq i32 %v4_1000847c, %arg1
  %v3_10008484.not = icmp ule i32 %v1_1000847c, ptrtoint (i32* @global_var_1000b034.170 to i32)
  %brmerge = or i1 %v4_10008480, %v3_10008484.not
  br i1 %brmerge, label %dec_label_pc_10008490, label %dec_label_pc_1000847c

dec_label_pc_10008490:                            ; preds = %dec_label_pc_1000847c
  %v2_10008498 = sub i32 %v1_1000847c, ptrtoint (i32* @global_var_1000b034.170 to i32)
  %v1_100084a0 = udiv i32 %v2_10008498, 2
  %v2_100084a0 = and i32 %v2_10008498, -2147483648
  %v3_100084a0 = or i32 %v1_100084a0, %v2_100084a0
  %v2_100084a8 = add i32 %v3_100084a0, ptrtoint (i32* @global_var_1000b04c.169 to i32)
  %v3_100084a8 = inttoptr i32 %v2_100084a8 to i8*
  %v4_100084a8 = load i8, i8* %v3_100084a8, align 1
  %v5_100084a8 = zext i8 %v4_100084a8 to i32
  ret i32 %v5_100084a8

; uselistorder directives
  uselistorder i32 %v2_10008498, { 1, 0 }
  uselistorder i32 %v1_1000847c, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1000b034.170 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000b04c.169 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100084b0 = load i32, i32* @lr, align 4
  store i32 %v0_100084b0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_100084c8 = add i32 %tmp, 16
  %v2_100084c8 = inttoptr i32 %v1_100084c8 to i32*
  %v3_100084c8 = load i32, i32* %v2_100084c8, align 4
  %v1_100084d0 = and i32 %v3_100084c8, 128
  store i32 %v1_100084d0, i32* %r6.global-to-local, align 4
  %v3_100084d0 = icmp eq i32 %v1_100084d0, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_100084e4 = add i32 %tmp, 24
  %v2_100084e4 = inttoptr i32 %v1_100084e4 to i32*
  %v3_100084e4 = load i32, i32* %v2_100084e4, align 4
  store i32 %v3_100084e4, i32* @r26, align 4
  br i1 %v3_100084d0, label %dec_label_pc_100084ec, label %dec_label_pc_10008504

dec_label_pc_100084ec:                            ; preds = %entry
  %v2_100084ec = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_10008558

dec_label_pc_100084fc:                            ; preds = %dec_label_pc_1000872c
  %v1_100084fc = add i32 %v0_100086fc, 1
  store i32 %v1_100084fc, i32* @r30, align 4
  br label %dec_label_pc_10008744

dec_label_pc_10008504:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_10008508 = load i32, i32* %arg1, align 4
  store i32 %v2_10008508, i32* %r8.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10008514 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10008514, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10008518

dec_label_pc_10008518:                            ; preds = %dec_label_pc_10008548.dec_label_pc_10008518_crit_edge, %dec_label_pc_10008504
  %v0_10008520 = phi i32 [ %v0_10008520.pre, %dec_label_pc_10008548.dec_label_pc_10008518_crit_edge ], [ %v2_10008508, %dec_label_pc_10008504 ]
  %v0_1000851c = phi i32 [ %v0_1000851c.pre, %dec_label_pc_10008548.dec_label_pc_10008518_crit_edge ], [ %v2_10008514, %dec_label_pc_10008504 ]
  %v0_10008524 = phi i32 [ %v0_10008518.pre, %dec_label_pc_10008548.dec_label_pc_10008518_crit_edge ], [ 0, %dec_label_pc_10008504 ]
  %v1_10008518 = mul i32 %v0_10008524, 4
  %v2_1000851c = add i32 %v0_10008524, %v0_1000851c
  store i32 %v2_1000851c, i32* %r9.global-to-local, align 4
  %v2_10008520 = add i32 %v1_10008518, %v0_10008520
  store i32 %v2_10008520, i32* %r11.global-to-local, align 4
  %v1_10008524 = add i32 %v0_10008524, 1
  store i32 %v1_10008524, i32* %r10.global-to-local, align 4
  %v1_10008528 = add i32 %v2_10008520, -4
  %v2_10008528 = inttoptr i32 %v1_10008528 to i32*
  %v3_10008528 = load i32, i32* %v2_10008528, align 4
  store i32 %v3_10008528, i32* %r0.global-to-local, align 4
  %v1_1000852c = trunc i32 %v3_10008528 to i8
  %v3_1000852c = add i32 %v2_1000851c, 24
  %v4_1000852c = inttoptr i32 %v3_1000852c to i8*
  store i8 %v1_1000852c, i8* %v4_1000852c, align 1
  %v0_10008530 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008530 = urem i32 %v0_10008530, 256
  store i32 %v1_10008530, i32* %r0.global-to-local, align 4
  %v0_10008538 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008538 = add i32 %v0_10008538, -4
  %v2_10008538 = inttoptr i32 %v1_10008538 to i32*
  %v3_10008538 = load i32, i32* %v2_10008538, align 4
  store i32 %v3_10008538, i32* %r9.global-to-local, align 4
  %v4_1000853c = icmp eq i32 %v1_10008530, %v3_10008538
  br i1 %v4_1000853c, label %dec_label_pc_10008544, label %dec_label_pc_100089b4

dec_label_pc_10008544:                            ; preds = %dec_label_pc_10008518
  %v3_10008534 = icmp eq i32 %v1_10008530, 0
  br i1 %v3_10008534, label %dec_label_pc_1000854c, label %dec_label_pc_10008548

dec_label_pc_10008548:                            ; preds = %dec_label_pc_10008544
  %v0_10008548 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008548 = add i32 %v0_10008548, -1
  store i32 %v1_10008548, i32* %ctr.global-to-local, align 4
  %v2_10008548 = icmp eq i32 %v1_10008548, 0
  br i1 %v2_10008548, label %dec_label_pc_1000854c, label %dec_label_pc_10008548.dec_label_pc_10008518_crit_edge

dec_label_pc_10008548.dec_label_pc_10008518_crit_edge: ; preds = %dec_label_pc_10008548
  %v0_10008518.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000851c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10008520.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008518

dec_label_pc_1000854c:                            ; preds = %dec_label_pc_10008548, %dec_label_pc_10008544
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008550 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_10008558

dec_label_pc_10008558:                            ; preds = %dec_label_pc_100084ec, %dec_label_pc_1000854c
  %v2_10008568.pre-phi = phi i32 [ %.pre, %dec_label_pc_100084ec ], [ %v2_10008514, %dec_label_pc_1000854c ]
  %storemerge3 = phi i32 [ %v2_100084ec, %dec_label_pc_100084ec ], [ %v2_10008550, %dec_label_pc_1000854c ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268500992, i32* @r27, align 4
  store i32 %v2_10008568.pre-phi, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008578

dec_label_pc_10008574:                            ; preds = %dec_label_pc_10008684, %dec_label_pc_10008708
  %v0_10008574 = phi i32 [ %v1_10008708, %dec_label_pc_10008708 ], [ %v0_1000866c, %dec_label_pc_10008684 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_10008708 ], [ %stack_var_-84.2, %dec_label_pc_10008684 ]
  store i32 %v0_10008574, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008578

dec_label_pc_10008578:                            ; preds = %dec_label_pc_10008558, %dec_label_pc_10008574
  %v0_1000858c = phi i32 [ %storemerge3, %dec_label_pc_10008558 ], [ %v0_10008574, %dec_label_pc_10008574 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_10008558 ], [ %stack_var_-84.0, %dec_label_pc_10008574 ]
  %v1_10008578 = inttoptr i32 %v0_1000858c to i8*
  %v2_10008578 = load i8, i8* %v1_10008578, align 1
  %v3_10008578 = zext i8 %v2_10008578 to i32
  store i32 %v3_10008578, i32* %r0.global-to-local, align 4
  store i32 %v0_1000858c, i32* @r30, align 4
  %v3_10008580 = icmp eq i8 %v2_10008578, 42
  br i1 %v3_10008580, label %dec_label_pc_10008588, label %dec_label_pc_10008598

dec_label_pc_10008588:                            ; preds = %dec_label_pc_10008578
  %v0_10008588 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008588 = mul i32 %v0_10008588, -4
  store i32 %v1_10008588, i32* %r0.global-to-local, align 4
  %v1_1000858c = add i32 %v0_1000858c, 1
  store i32 %v1_1000858c, i32* @r30, align 4
  %v0_10008590 = load i32, i32* @r1, align 4
  %v2_10008590 = add i32 %v0_10008590, %v1_10008588
  store i32 %v2_10008590, i32* %r9.global-to-local, align 4
  %v0_10008594 = load i32, i32* @r29, align 4
  %v2_10008594 = add i32 %v2_10008590, 8
  %v3_10008594 = inttoptr i32 %v2_10008594 to i32*
  store i32 %v0_10008594, i32* %v3_10008594, align 4
  %v0_100085b0.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008598

dec_label_pc_10008598:                            ; preds = %dec_label_pc_10008578, %dec_label_pc_10008588
  %v0_100085b0.pre = phi i32 [ %v0_1000858c, %dec_label_pc_10008578 ], [ %v0_100085b0.pre.pre, %dec_label_pc_10008588 ]
  %v3_10008598 = load i32, i32* @global_var_1001c35c, align 4
  store i32 %v3_10008598, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100085b0

dec_label_pc_100085a4:                            ; preds = %dec_label_pc_100085b0
  %v2_100085b4 = icmp sgt i32 %v0_100085fc, 4094
  br i1 %v2_100085b4, label %dec_label_pc_100085ac, label %dec_label_pc_100085a8

dec_label_pc_100085a8:                            ; preds = %dec_label_pc_100085a4
  %v1_100085a8 = add i32 %v2_100085c8, -48
  store i32 %v1_100085a8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100085ac

dec_label_pc_100085ac:                            ; preds = %dec_label_pc_100085a4, %dec_label_pc_100085a8
  %v0_100085b415 = phi i32 [ %v0_100085fc, %dec_label_pc_100085a4 ], [ %v1_100085a8, %dec_label_pc_100085a8 ]
  %v1_100085ac = add i32 %v0_1000862c, 1
  store i32 %v1_100085ac, i32* @r30, align 4
  br label %dec_label_pc_100085b0

dec_label_pc_100085b0:                            ; preds = %dec_label_pc_10008598, %dec_label_pc_100085ac
  %v0_100085fc = phi i32 [ 0, %dec_label_pc_10008598 ], [ %v0_100085b415, %dec_label_pc_100085ac ]
  %v0_1000862c = phi i32 [ %v0_100085b0.pre, %dec_label_pc_10008598 ], [ %v1_100085ac, %dec_label_pc_100085ac ]
  %v1_100085b0 = inttoptr i32 %v0_1000862c to i8*
  %v2_100085b0 = load i8, i8* %v1_100085b0, align 1
  %v3_100085b0 = zext i8 %v2_100085b0 to i32
  store i32 %v3_100085b0, i32* %r11.global-to-local, align 4
  %v1_100085b8 = mul nuw nsw i32 %v3_100085b0, 2
  store i32 %v1_100085b8, i32* %r9.global-to-local, align 4
  %v2_100085bc = add i32 %v1_100085b8, %v3_10008598
  %v3_100085bc = inttoptr i32 %v2_100085bc to i16*
  %v4_100085bc = load i16, i16* %v3_100085bc, align 2
  %v5_100085bc = zext i16 %v4_100085bc to i32
  store i32 %v5_100085bc, i32* %r0.global-to-local, align 4
  %v1_100085c0 = mul i32 %v0_100085fc, 10
  %v1_100085c4 = and i32 %v5_100085bc, 8
  store i32 %v1_100085c4, i32* @r25, align 4
  %v3_100085c4 = icmp eq i32 %v1_100085c4, 0
  %v2_100085c8 = add i32 %v3_100085b0, %v1_100085c0
  store i32 %v2_100085c8, i32* %r9.global-to-local, align 4
  br i1 %v3_100085c4, label %dec_label_pc_100085d0, label %dec_label_pc_100085a4

dec_label_pc_100085d0:                            ; preds = %dec_label_pc_100085b0
  %v0_100085d0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100085d0 = add i32 %v0_100085d0, -1
  %v2_100085d0 = inttoptr i32 %v1_100085d0 to i8*
  %v3_100085d0 = load i8, i8* %v2_100085d0, align 1
  %v4_100085d0 = zext i8 %v3_100085d0 to i32
  store i32 %v4_100085d0, i32* %r0.global-to-local, align 4
  %v3_100085d4 = icmp eq i8 %v3_100085d0, 37
  br i1 %v3_100085d4, label %dec_label_pc_100085dc, label %dec_label_pc_100086a4

dec_label_pc_100085dc:                            ; preds = %dec_label_pc_100085d0
  %v3_100085dc = icmp eq i8 %v2_100085b0, 36
  br i1 %v3_100085dc, label %dec_label_pc_100085e4, label %dec_label_pc_10008618

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_100085dc
  %tmp58 = icmp slt i32 %v0_100085fc, 1
  br i1 %tmp58, label %dec_label_pc_10008618, label %dec_label_pc_100085ec

dec_label_pc_100085ec:                            ; preds = %dec_label_pc_100085e4
  %v0_100085ec = load i32, i32* @r26, align 4
  %v3_100085ec = icmp eq i32 %v0_100085ec, 0
  %v1_100085f0 = add i32 %v0_1000862c, 1
  store i32 %v1_100085f0, i32* %r10.global-to-local, align 4
  br i1 %v3_100085ec, label %dec_label_pc_100089b4, label %dec_label_pc_100085f8

dec_label_pc_100085f8:                            ; preds = %dec_label_pc_100085ec
  %v3_100085f8 = icmp sgt i32 %v0_100085fc, %v0_100085ec
  br i1 %v3_100085f8, label %dec_label_pc_10008604, label %dec_label_pc_10008610

dec_label_pc_10008604:                            ; preds = %dec_label_pc_100085f8
  store i32 %v0_100085fc, i32* @r26, align 4
  br label %dec_label_pc_10008610

dec_label_pc_1000860c:                            ; preds = %dec_label_pc_10008634, %dec_label_pc_1000862c
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_10008610

dec_label_pc_10008610:                            ; preds = %dec_label_pc_100085f8, %dec_label_pc_10008604, %dec_label_pc_1000860c
  %v0_10008610 = phi i32 [ %v0_100085d0, %dec_label_pc_1000860c ], [ %v1_100085f0, %dec_label_pc_10008604 ], [ %v1_100085f0, %dec_label_pc_100085f8 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000860c ], [ %v0_100085fc, %dec_label_pc_10008604 ], [ %v0_100085fc, %dec_label_pc_100085f8 ]
  br label %dec_label_pc_1000864c

dec_label_pc_10008618:                            ; preds = %dec_label_pc_100085dc, %dec_label_pc_100085e4
  %v0_10008618 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_10008618, 1
  br i1 %tmp59, label %dec_label_pc_1000862c, label %dec_label_pc_10008620

dec_label_pc_10008620:                            ; preds = %dec_label_pc_10008618
  %v3_10008620 = icmp eq i8 %v2_100085b0, 109
  br i1 %v3_10008620, label %dec_label_pc_100086a4, label %dec_label_pc_100089b4

dec_label_pc_1000862c:                            ; preds = %dec_label_pc_10008618
  %v3_1000862c = icmp ugt i32 %v0_1000862c, %v0_100085d0
  br i1 %v3_1000862c, label %dec_label_pc_10008634, label %dec_label_pc_1000860c

dec_label_pc_10008634:                            ; preds = %dec_label_pc_1000862c
  %v1_10008634 = inttoptr i32 %v0_100085d0 to i8*
  %v2_10008634 = load i8, i8* %v1_10008634, align 1
  %v3_10008634 = zext i8 %v2_10008634 to i32
  store i32 %v3_10008634, i32* %r0.global-to-local, align 4
  store i32 %v0_100085d0, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_10008640 = icmp eq i8 %v2_10008634, 48
  br i1 %v3_10008640, label %dec_label_pc_1000860c, label %dec_label_pc_100086a8

dec_label_pc_1000864c:                            ; preds = %dec_label_pc_10008668, %dec_label_pc_10008610
  %v0_1000866c = phi i32 [ %v0_10008610, %dec_label_pc_10008610 ], [ %v1_1000866c, %dec_label_pc_10008668 ]
  store i32 %v0_1000866c, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000b02c.171 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000865c = inttoptr i32 %v0_1000866c to i8*
  br label %dec_label_pc_10008654

dec_label_pc_10008654:                            ; preds = %dec_label_pc_10008674, %dec_label_pc_1000864c
  %v1_10008668 = phi i32 [ %v1_10008678, %dec_label_pc_10008674 ], [ 1, %dec_label_pc_1000864c ]
  %v0_10008654 = phi i32 [ %v1_10008658, %dec_label_pc_10008674 ], [ ptrtoint ([8 x i8]* @global_var_1000b02c.171 to i32), %dec_label_pc_1000864c ]
  %v1_10008654 = inttoptr i32 %v0_10008654 to i8*
  %v2_10008654 = load i8, i8* %v1_10008654, align 1
  %v3_10008654 = zext i8 %v2_10008654 to i32
  store i32 %v3_10008654, i32* %r9.global-to-local, align 4
  %v1_10008658 = add i32 %v0_10008654, 1
  store i32 %v1_10008658, i32* %r11.global-to-local, align 4
  %v2_1000865c = load i8, i8* %v1_1000865c, align 1
  %v3_1000865c = zext i8 %v2_1000865c to i32
  store i32 %v3_1000865c, i32* %r0.global-to-local, align 4
  %v4_10008660 = icmp eq i8 %v2_1000865c, %v2_10008654
  br i1 %v4_10008660, label %dec_label_pc_10008668, label %dec_label_pc_10008674

dec_label_pc_10008668:                            ; preds = %dec_label_pc_10008654
  %v0_10008668 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008668 = or i32 %v0_10008668, %v1_10008668
  store i32 %v2_10008668, i32* %r6.global-to-local, align 4
  %v1_1000866c = add i32 %v0_1000866c, 1
  br label %dec_label_pc_1000864c

dec_label_pc_10008674:                            ; preds = %dec_label_pc_10008654
  %v1_10008674 = inttoptr i32 %v1_10008658 to i8*
  %v2_10008674 = load i8, i8* %v1_10008674, align 1
  %v3_10008674 = zext i8 %v2_10008674 to i32
  store i32 %v3_10008674, i32* %r0.global-to-local, align 4
  %v1_10008678 = mul i32 %v1_10008668, 2
  store i32 %v1_10008678, i32* %r10.global-to-local, align 4
  %v3_1000867c = icmp eq i8 %v2_10008674, 0
  br i1 %v3_1000867c, label %dec_label_pc_10008684, label %dec_label_pc_10008654

dec_label_pc_10008684:                            ; preds = %dec_label_pc_10008674
  %v1_10008684 = add i32 %v0_1000866c, -1
  %v2_10008684 = inttoptr i32 %v1_10008684 to i8*
  %v3_10008684 = load i8, i8* %v2_10008684, align 1
  %v4_10008684 = zext i8 %v3_10008684 to i32
  store i32 %v4_10008684, i32* %r0.global-to-local, align 4
  %v0_10008688 = load i32, i32* %r6.global-to-local, align 4
  %v1_10008688 = and i32 %v0_10008688, 10
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_10008690 = icmp eq i8 %v3_10008684, 37
  %v1_10008694 = udiv i32 %v1_10008688, 2
  store i32 %v1_10008694, i32* %r9.global-to-local, align 4
  %v2_10008698 = sub nuw nsw i32 -1, %v1_10008694
  %v3_10008698 = and i32 %v0_10008688, %v2_10008698
  store i32 %v3_10008698, i32* %r6.global-to-local, align 4
  br i1 %v3_10008690, label %dec_label_pc_100086a8, label %dec_label_pc_10008574

dec_label_pc_100086a4:                            ; preds = %dec_label_pc_100085d0, %dec_label_pc_10008620
  store i32 %v0_100085d0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100086a8

dec_label_pc_100086a8:                            ; preds = %dec_label_pc_10008634, %dec_label_pc_10008684, %dec_label_pc_100086a4
  %v0_100086dc = phi i32 [ 0, %dec_label_pc_10008684 ], [ %v0_100085fc, %dec_label_pc_10008634 ], [ %v0_100085fc, %dec_label_pc_100086a4 ]
  %v1_100086e8 = phi i32 [ %v0_1000866c, %dec_label_pc_10008684 ], [ %v0_1000862c, %dec_label_pc_10008634 ], [ %v0_1000862c, %dec_label_pc_100086a4 ]
  %v0_100086e4 = phi i32 [ %v1_10008658, %dec_label_pc_10008684 ], [ %v0_100085d0, %dec_label_pc_10008634 ], [ %v0_100085d0, %dec_label_pc_100086a4 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_10008684 ], [ %stack_var_-84.1, %dec_label_pc_10008634 ], [ %stack_var_-84.1, %dec_label_pc_100086a4 ]
  %v1_100086a8 = inttoptr i32 %v0_100086e4 to i8*
  %v2_100086a8 = load i8, i8* %v1_100086a8, align 1
  %v3_100086a8 = zext i8 %v2_100086a8 to i32
  store i32 %v3_100086a8, i32* %r0.global-to-local, align 4
  %v3_100086ac = icmp eq i8 %v2_100086a8, 42
  br i1 %v3_100086ac, label %dec_label_pc_100086b4, label %dec_label_pc_100086f4

dec_label_pc_100086b4:                            ; preds = %dec_label_pc_100086a8
  %v0_100086b4 = load i32, i32* @r26, align 4
  %v3_100086b4 = icmp eq i32 %v0_100086b4, 0
  br i1 %v3_100086b4, label %dec_label_pc_100086e4, label %dec_label_pc_100086bc

dec_label_pc_100086bc:                            ; preds = %dec_label_pc_100086b4
  %v1_100086bc = inttoptr i32 %v1_100086e8 to i8*
  %v2_100086bc = load i8, i8* %v1_100086bc, align 1
  %v3_100086bc = zext i8 %v2_100086bc to i32
  store i32 %v3_100086bc, i32* %r0.global-to-local, align 4
  %v3_100086c0 = icmp eq i8 %v2_100086bc, 36
  br i1 %v3_100086c0, label %dec_label_pc_100086c8, label %dec_label_pc_100089b4

dec_label_pc_100086c8:                            ; preds = %dec_label_pc_100086bc
  %tmp60 = icmp slt i32 %v0_100086dc, 1
  br i1 %tmp60, label %dec_label_pc_100089b4, label %dec_label_pc_100086d0

dec_label_pc_100086d0:                            ; preds = %dec_label_pc_100086c8
  %v0_100086d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100086d0 = mul i32 %v0_100086d0, -4
  %v1_100086d4 = add i32 %v1_100086e8, 1
  store i32 %v1_100086d4, i32* @r30, align 4
  %v0_100086d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_100086d8 = add i32 %v0_100086d8, %v1_100086d0
  store i32 %v2_100086d8, i32* %r9.global-to-local, align 4
  %v2_100086dc = add i32 %v2_100086d8, 12
  %v3_100086dc = inttoptr i32 %v2_100086dc to i32*
  store i32 %v0_100086dc, i32* %v3_100086dc, align 4
  %v0_100086fc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100086f0

dec_label_pc_100086e4:                            ; preds = %dec_label_pc_100086b4
  %v1_100086e4 = add i32 %v0_100086e4, 1
  store i32 %v1_100086e4, i32* %r0.global-to-local, align 4
  %v4_100086e8 = icmp eq i32 %v1_100086e4, %v1_100086e8
  br i1 %v4_100086e8, label %dec_label_pc_100086f0, label %dec_label_pc_100089b4

dec_label_pc_100086f0:                            ; preds = %dec_label_pc_100086e4, %dec_label_pc_100086d0
  %v0_100086fc.pre = phi i32 [ %v1_100086e8, %dec_label_pc_100086e4 ], [ %v0_100086fc.pre.pre, %dec_label_pc_100086d0 ]
  store i32 -2147483648, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100086f4

dec_label_pc_100086f4:                            ; preds = %dec_label_pc_100086a8, %dec_label_pc_100086f0
  %v0_100086fc = phi i32 [ %v1_100086e8, %dec_label_pc_100086a8 ], [ %v0_100086fc.pre, %dec_label_pc_100086f0 ]
  %v0_1000870c = phi i32 [ %v0_100086dc, %dec_label_pc_100086a8 ], [ -2147483648, %dec_label_pc_100086f0 ]
  %v0_100086f4 = load i32, i32* %r5.global-to-local, align 4
  %v3_100086f4 = icmp eq i32 %v0_100086f4, 0
  %v1_100086fc = inttoptr i32 %v0_100086fc to i8*
  br i1 %v3_100086f4, label %dec_label_pc_100086fc, label %dec_label_pc_10008720

dec_label_pc_100086fc:                            ; preds = %dec_label_pc_100086f4
  %v2_100086fc = load i8, i8* %v1_100086fc, align 1
  %v3_100086fc = zext i8 %v2_100086fc to i32
  store i32 %v3_100086fc, i32* %r0.global-to-local, align 4
  %v3_10008700 = icmp eq i8 %v2_100086fc, 46
  br i1 %v3_10008700, label %dec_label_pc_10008708, label %dec_label_pc_10008718

dec_label_pc_10008708:                            ; preds = %dec_label_pc_100086fc
  %v1_10008708 = add i32 %v0_100086fc, 1
  store i32 %v0_1000870c, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008574

dec_label_pc_10008718:                            ; preds = %dec_label_pc_100086fc
  store i32 %v0_1000870c, i32* @r31, align 4
  br label %dec_label_pc_10008720

dec_label_pc_10008720:                            ; preds = %dec_label_pc_100086f4, %dec_label_pc_10008718
  %storemerge1 = phi i32 [ -1, %dec_label_pc_10008718 ], [ %v0_1000870c, %dec_label_pc_100086f4 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_10008724 = load i8, i8* %v1_100086fc, align 1
  %v3_10008724 = zext i8 %v2_10008724 to i32
  store i32 %v3_10008724, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000afd4.172 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000872c

dec_label_pc_1000872c:                            ; preds = %dec_label_pc_10008738, %dec_label_pc_10008720
  %v0_10008738 = phi i32 [ %v1_10008738, %dec_label_pc_10008738 ], [ ptrtoint ([9 x i8]* @global_var_1000afd4.172 to i32), %dec_label_pc_10008720 ]
  %v1_1000872c = inttoptr i32 %v0_10008738 to i8*
  %v2_1000872c = load i8, i8* %v1_1000872c, align 1
  %v3_1000872c = zext i8 %v2_1000872c to i32
  store i32 %v3_1000872c, i32* %r0.global-to-local, align 4
  %v4_10008730 = icmp eq i8 %v2_10008724, %v2_1000872c
  br i1 %v4_10008730, label %dec_label_pc_100084fc, label %dec_label_pc_10008738

dec_label_pc_10008738:                            ; preds = %dec_label_pc_1000872c
  %v1_10008738 = add i32 %v0_10008738, 1
  %v2_10008738 = inttoptr i32 %v1_10008738 to i8*
  %v3_10008738 = load i8, i8* %v2_10008738, align 1
  %v4_10008738 = zext i8 %v3_10008738 to i32
  store i32 %v4_10008738, i32* %r0.global-to-local, align 4
  store i32 %v1_10008738, i32* %r11.global-to-local, align 4
  %v3_1000873c = icmp eq i8 %v3_10008738, 0
  br i1 %v3_1000873c, label %dec_label_pc_10008744, label %dec_label_pc_1000872c

dec_label_pc_10008744:                            ; preds = %dec_label_pc_10008738, %dec_label_pc_100084fc
  %v0_1000876c = phi i32 [ %v1_100084fc, %dec_label_pc_100084fc ], [ %v0_100086fc, %dec_label_pc_10008738 ]
  %v0_10008768 = phi i32 [ %v0_10008738, %dec_label_pc_100084fc ], [ %v1_10008738, %dec_label_pc_10008738 ]
  %v2_1000874c = sub i32 %v0_10008768, ptrtoint ([9 x i8]* @global_var_1000afd4.172 to i32)
  store i32 %v2_1000874c, i32* %r9.global-to-local, align 4
  %v2_10008750 = icmp sgt i32 %v2_1000874c, 1
  br i1 %v2_10008750, label %dec_label_pc_10008770, label %dec_label_pc_10008758

dec_label_pc_10008758:                            ; preds = %dec_label_pc_10008744
  %v1_10008758 = inttoptr i32 %v0_1000876c to i8*
  %v2_10008758 = load i8, i8* %v1_10008758, align 1
  %v3_10008758 = zext i8 %v2_10008758 to i32
  store i32 %v3_10008758, i32* %r0.global-to-local, align 4
  %v1_1000875c = inttoptr i32 %v0_10008768 to i8*
  %v2_1000875c = load i8, i8* %v1_1000875c, align 1
  %v3_1000875c = zext i8 %v2_1000875c to i32
  store i32 %v3_1000875c, i32* %r9.global-to-local, align 4
  %v4_10008760 = icmp eq i8 %v2_10008758, %v2_1000875c
  br i1 %v4_10008760, label %dec_label_pc_10008768, label %dec_label_pc_10008770

dec_label_pc_10008768:                            ; preds = %dec_label_pc_10008758
  %v1_10008768 = add i32 %v0_10008768, 9
  store i32 %v1_10008768, i32* %r11.global-to-local, align 4
  %v1_1000876c = add i32 %v0_1000876c, 1
  store i32 %v1_1000876c, i32* @r30, align 4
  br label %dec_label_pc_10008770

dec_label_pc_10008770:                            ; preds = %dec_label_pc_10008758, %dec_label_pc_10008744, %dec_label_pc_10008768
  %v0_10008774 = phi i32 [ %v0_10008768, %dec_label_pc_10008758 ], [ %v0_10008768, %dec_label_pc_10008744 ], [ %v1_10008768, %dec_label_pc_10008768 ]
  %v0_10008770 = phi i32 [ %v0_1000876c, %dec_label_pc_10008758 ], [ %v0_1000876c, %dec_label_pc_10008744 ], [ %v1_1000876c, %dec_label_pc_10008768 ]
  %v1_10008770 = inttoptr i32 %v0_10008770 to i8*
  %v2_10008770 = load i8, i8* %v1_10008770, align 1
  %v3_10008770 = zext i8 %v2_10008770 to i32
  store i32 %v3_10008770, i32* %r7.global-to-local, align 4
  %v1_10008774 = add i32 %v0_10008774, 9
  %v2_10008774 = inttoptr i32 %v1_10008774 to i8*
  %v3_10008774 = load i8, i8* %v2_10008774, align 1
  %v4_10008774 = zext i8 %v3_10008774 to i32
  store i32 %v4_10008774, i32* %r0.global-to-local, align 4
  %v3_10008778 = icmp eq i8 %v2_10008770, 0
  %v1_1000877c = mul nuw nsw i32 %v4_10008774, 256
  store i32 %v1_1000877c, i32* %r10.global-to-local, align 4
  br i1 %v3_10008778, label %dec_label_pc_100089b4, label %dec_label_pc_10008784

dec_label_pc_10008784:                            ; preds = %dec_label_pc_10008770
  %v1_10008788 = and i32 %v1_1000877c, 1024
  store i32 %v1_10008788, i32* %r0.global-to-local, align 4
  %v3_10008788 = icmp eq i32 %v1_10008788, 0
  store i32 ptrtoint ([21 x i8]* @global_var_1000b014.173 to i32), i32* %r8.global-to-local, align 4
  store i32 268500992, i32* %r3.global-to-local, align 4
  %v3_10008794 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_10008794, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b008.174 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000b014.173 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100087a4

dec_label_pc_100087a4:                            ; preds = %dec_label_pc_10008808, %dec_label_pc_10008784
  %v1_100087b0 = phi i32 [ %v1_10008808, %dec_label_pc_10008808 ], [ ptrtoint ([21 x i8]* @global_var_1000b014.173 to i32), %dec_label_pc_10008784 ]
  %v1_100087a4 = inttoptr i32 %v1_100087b0 to i8*
  %v2_100087a4 = load i8, i8* %v1_100087a4, align 1
  %v3_100087a4 = zext i8 %v2_100087a4 to i32
  store i32 %v3_100087a4, i32* %r0.global-to-local, align 4
  %v4_100087a8 = icmp eq i8 %v2_100087a4, %v2_10008770
  br i1 %v4_100087a8, label %dec_label_pc_100087b0, label %dec_label_pc_10008808

dec_label_pc_100087b0:                            ; preds = %dec_label_pc_100087a4
  %v2_100087b0 = sub i32 %v1_100087b0, ptrtoint ([21 x i8]* @global_var_1000b014.173 to i32)
  %tmp61 = icmp slt i32 %v2_100087b0, 18
  %brmerge = or i1 %v3_10008788, %tmp61
  br i1 %brmerge, label %dec_label_pc_100087c4, label %dec_label_pc_100087c0

dec_label_pc_100087c0:                            ; preds = %dec_label_pc_100087b0
  %v1_100087c0 = add i32 %v2_100087b0, -2
  br label %dec_label_pc_100087c4

dec_label_pc_100087c4:                            ; preds = %dec_label_pc_100087b0, %dec_label_pc_100087c0
  %storemerge = phi i32 [ %v1_100087c0, %dec_label_pc_100087c0 ], [ %v2_100087b0, %dec_label_pc_100087b0 ]
  %v0_100087c4 = phi i32 [ %v1_100087c0, %dec_label_pc_100087c0 ], [ %v2_100087b0, %dec_label_pc_100087b0 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100087c4 = load i32, i32* @r28, align 4
  %v2_100087c4 = add i32 %v1_100087c4, 32
  %v3_100087c4 = inttoptr i32 %v2_100087c4 to i32*
  store i32 %v0_100087c4, i32* %v3_100087c4, align 4
  store i32 ptrtoint (i32* @global_var_1000b007.175 to i32), i32* %r11.global-to-local, align 4
  %v0_100087d0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100087cc

dec_label_pc_100087cc:                            ; preds = %dec_label_pc_100087cc, %dec_label_pc_100087c4
  %v0_100087cc = phi i32 [ %v1_100087cc, %dec_label_pc_100087cc ], [ ptrtoint (i32* @global_var_1000b007.175 to i32), %dec_label_pc_100087c4 ]
  %v1_100087cc = add i32 %v0_100087cc, 1
  %v2_100087cc = inttoptr i32 %v1_100087cc to i8*
  %v3_100087cc = load i8, i8* %v2_100087cc, align 1
  %v4_100087cc = zext i8 %v3_100087cc to i32
  store i32 %v4_100087cc, i32* %r0.global-to-local, align 4
  store i32 %v1_100087cc, i32* %r11.global-to-local, align 4
  %v3_100087d0 = icmp sgt i32 %v0_100087d0.pre, %v4_100087cc
  br i1 %v3_100087d0, label %dec_label_pc_100087cc, label %dec_label_pc_100087d8

dec_label_pc_100087d8:                            ; preds = %dec_label_pc_100087cc
  %v0_100087d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_100087d8 = sub i32 %v1_100087cc, %v0_100087d8
  %v1_100087e0 = mul i32 %v2_100087d8, 2
  store i32 %v1_100087e0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000aff8.176 to i32), i32* %r9.global-to-local, align 4
  %v2_100087e8 = add i32 %v1_100087e0, ptrtoint (i32* @global_var_1000aff8.176 to i32)
  %v3_100087e8 = inttoptr i32 %v2_100087e8 to i16*
  %v4_100087e8 = load i16, i16* %v3_100087e8, align 2
  %v5_100087e8 = sext i16 %v4_100087e8 to i32
  store i32 %v5_100087e8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000afe8.177 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000b014.173 to i32), i32* %r8.global-to-local, align 4
  %v2_100087f8 = add i32 %v1_100087e0, ptrtoint (i32* @global_var_1000afe8.177 to i32)
  %v3_100087f8 = inttoptr i32 %v2_100087f8 to i16*
  %v4_100087f8 = load i16, i16* %v3_100087f8, align 2
  %v5_100087f8 = sext i16 %v4_100087f8 to i32
  store i32 %v5_100087f8, i32* %r9.global-to-local, align 4
  %v2_100087fc = or i32 %v5_100087e8, %v1_1000877c
  store i32 %v2_100087fc, i32* %r0.global-to-local, align 4
  %v2_10008800 = and i32 %v5_100087f8, %v2_100087fc
  store i32 %v2_10008800, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008814

dec_label_pc_10008808:                            ; preds = %dec_label_pc_100087a4
  %v1_10008808 = add i32 %v1_100087b0, 1
  %v2_10008808 = inttoptr i32 %v1_10008808 to i8*
  %v3_10008808 = load i8, i8* %v2_10008808, align 1
  %v4_10008808 = zext i8 %v3_10008808 to i32
  store i32 %v4_10008808, i32* %r0.global-to-local, align 4
  store i32 %v1_10008808, i32* %r8.global-to-local, align 4
  %v3_1000880c = icmp eq i8 %v3_10008808, 0
  br i1 %v3_1000880c, label %dec_label_pc_10008814, label %dec_label_pc_100087a4

dec_label_pc_10008814:                            ; preds = %dec_label_pc_10008808, %dec_label_pc_100087d8
  %v0_10008814 = phi i32 [ %v2_10008800, %dec_label_pc_100087d8 ], [ %v3_10008794, %dec_label_pc_10008808 ]
  store i32 %v0_10008814, i32* %stack_var_-96, align 4
  %v0_10008818 = load i32, i32* %r6.global-to-local, align 4
  %v1_10008818 = call i32 @__asm_rlwinm(i32 %v0_10008818, i32 30, i32 31, i32 31)
  %not.v2_1000881c = icmp eq i32 %v1_10008818, 0
  %v6_10008820 = sext i1 %not.v2_1000881c to i32
  store i32 %v6_10008820, i32* %r9.global-to-local, align 4
  %v1_10008824 = call i32 @__asm_rlwinm(i32 %v1_1000877c, i32 0, i32 20, i32 23)
  store i32 %v1_10008824, i32* %r0.global-to-local, align 4
  %v1_10008828 = call i32 @__asm_rlwinm(i32 %v6_10008820, i32 0, i32 0, i32 27)
  store i32 %v1_10008828, i32* %r9.global-to-local, align 4
  %v0_1000882c = load i32, i32* @r30, align 4
  %v1_1000882c = inttoptr i32 %v0_1000882c to i8*
  %v2_1000882c = load i8, i8* %v1_1000882c, align 1
  %v3_1000882c = zext i8 %v2_1000882c to i32
  store i32 %v3_1000882c, i32* %r10.global-to-local, align 4
  %v0_10008830 = load i32, i32* %r6.global-to-local, align 4
  %v1_10008830 = call i32 @__asm_rlwinm(i32 %v0_10008830, i32 0, i32 30, i32 28)
  %v1_10008834 = add i32 %v1_10008828, 48
  store i32 %v1_10008834, i32* %r9.global-to-local, align 4
  %v2_10008838 = or i32 %v1_10008830, %v1_10008824
  store i32 %v2_10008838, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v0_10008840 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008840 = load i32, i32* @r28, align 4
  %v2_10008840 = add i32 %v1_10008840, 12
  %v3_10008840 = inttoptr i32 %v2_10008840 to i32*
  store i32 %v0_10008840, i32* %v3_10008840, align 4
  %v0_10008844 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008844 = load i32, i32* @r28, align 4
  %v2_10008844 = add i32 %v1_10008844, 4
  %v3_10008844 = inttoptr i32 %v2_10008844 to i32*
  store i32 %v0_10008844, i32* %v3_10008844, align 4
  %v0_10008848 = load i32, i32* @r31, align 4
  %v1_10008848 = load i32, i32* @r28, align 4
  %v2_10008848 = add i32 %v1_10008848, 8
  %v3_10008848 = inttoptr i32 %v2_10008848 to i32*
  store i32 %v0_10008848, i32* %v3_10008848, align 4
  %v0_1000884c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000884c = load i32, i32* @r28, align 4
  %v2_1000884c = add i32 %v1_1000884c, 20
  %v3_1000884c = inttoptr i32 %v2_1000884c to i32*
  store i32 %v0_1000884c, i32* %v3_1000884c, align 4
  %v0_10008850 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008850 = load i32, i32* @r28, align 4
  %v2_10008850 = add i32 %v1_10008850, 16
  %v3_10008850 = inttoptr i32 %v2_10008850 to i32*
  store i32 %v0_10008850, i32* %v3_10008850, align 4
  %v0_10008854 = load i32, i32* %r7.global-to-local, align 4
  %v1_10008854 = load i32, i32* @r28, align 4
  %v2_10008854 = add i32 %v1_10008854, 28
  %v3_10008854 = inttoptr i32 %v2_10008854 to i32*
  store i32 %v0_10008854, i32* %v3_10008854, align 4
  %v0_10008858 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008858 = inttoptr i32 %v0_10008858 to i8*
  %v2_10008858 = load i8, i8* %v1_10008858, align 1
  %v3_10008858 = zext i8 %v2_10008858 to i32
  store i32 %v3_10008858, i32* %r9.global-to-local, align 4
  %v3_1000885c = icmp eq i8 %v2_10008858, 0
  br i1 %v3_1000885c, label %dec_label_pc_10008864, label %dec_label_pc_1000887c

dec_label_pc_10008864:                            ; preds = %dec_label_pc_10008814
  %v0_10008864 = load i32, i32* @r30, align 4
  %v1_10008864 = inttoptr i32 %v0_10008864 to i8*
  %v2_10008864 = load i8, i8* %v1_10008864, align 1
  %v3_10008864 = zext i8 %v2_10008864 to i32
  store i32 %v3_10008864, i32* %r0.global-to-local, align 4
  %v3_10008868 = icmp eq i8 %v2_10008864, 109
  br i1 %v3_10008868, label %dec_label_pc_10008870, label %dec_label_pc_100089b4

dec_label_pc_10008870:                            ; preds = %dec_label_pc_10008864
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10008874 = load i32, i32* @r28, align 4
  %v2_10008874 = add i32 %v1_10008874, 28
  %v3_10008874 = inttoptr i32 %v2_10008874 to i32*
  store i32 %v3_10008858, i32* %v3_10008874, align 4
  %v0_10008878 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008878 = load i32, i32* @r28, align 4
  %v2_10008878 = add i32 %v1_10008878, 32
  %v3_10008878 = inttoptr i32 %v2_10008878 to i32*
  store i32 %v0_10008878, i32* %v3_10008878, align 4
  br label %dec_label_pc_1000887c

dec_label_pc_1000887c:                            ; preds = %dec_label_pc_10008814, %dec_label_pc_10008870
  %v0_1000887c = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000887c, 1
  br i1 %tmp62, label %dec_label_pc_10008958, label %dec_label_pc_10008884

dec_label_pc_10008884:                            ; preds = %dec_label_pc_1000887c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10008888

dec_label_pc_10008888:                            ; preds = %dec_label_pc_10008940, %dec_label_pc_10008884
  %v0_100088b0 = phi i32 [ 0, %dec_label_pc_10008884 ], [ %v1_10008944, %dec_label_pc_10008940 ]
  %v2_10008888 = icmp sgt i32 %v0_100088b0, 2
  br i1 %v2_10008888, label %dec_label_pc_100088ac, label %dec_label_pc_10008890

dec_label_pc_10008890:                            ; preds = %dec_label_pc_10008888
  %v1_10008890 = mul i32 %v0_100088b0, 4
  store i32 %v1_10008890, i32* %r0.global-to-local, align 4
  %v0_10008894 = load i32, i32* @r1, align 4
  %v2_10008894 = add i32 %v0_10008894, %v1_10008890
  store i32 %v2_10008894, i32* %r9.global-to-local, align 4
  %v1_10008898 = add i32 %v2_10008894, 20
  %v2_10008898 = inttoptr i32 %v1_10008898 to i32*
  %v3_10008898 = load i32, i32* %v2_10008898, align 4
  store i32 %v3_10008898, i32* %r0.global-to-local, align 4
  %v1_1000889c = load i32, i32* @r28, align 4
  %v2_1000889c = add i32 %v1_1000889c, %v0_100088b0
  store i32 %v2_1000889c, i32* %r9.global-to-local, align 4
  %v1_100088a0 = urem i32 %v3_10008898, 256
  store i32 %v1_100088a0, i32* %r11.global-to-local, align 4
  %v1_100088a4 = trunc i32 %v3_10008898 to i8
  %v3_100088a4 = add i32 %v2_1000889c, 36
  %v4_100088a4 = inttoptr i32 %v3_100088a4 to i8*
  store i8 %v1_100088a4, i8* %v4_100088a4, align 1
  %v0_100088b8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100088b8

dec_label_pc_100088ac:                            ; preds = %dec_label_pc_10008888
  %v2_100088b0 = add i32 %v0_100088b0, %stack_var_-84.3
  store i32 %v2_100088b0, i32* %r9.global-to-local, align 4
  %v1_100088b4 = add i32 %v2_100088b0, -2
  store i32 %v1_100088b4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100088b8

dec_label_pc_100088b8:                            ; preds = %dec_label_pc_10008890, %dec_label_pc_100088ac
  %v0_100088d8 = phi i32 [ %v0_100088b8.pre, %dec_label_pc_10008890 ], [ %v1_100088b4, %dec_label_pc_100088ac ]
  %v1_100088b8 = load i32, i32* @r26, align 4
  %v3_100088b8 = icmp sgt i32 %v0_100088d8, %v1_100088b8
  br i1 %v3_100088b8, label %dec_label_pc_100088c0, label %dec_label_pc_100088cc

dec_label_pc_100088c0:                            ; preds = %dec_label_pc_100088b8
  %v2_100088c0 = icmp sgt i32 %v0_100088d8, 9
  br i1 %v2_100088c0, label %dec_label_pc_100089b4, label %dec_label_pc_100088c8

dec_label_pc_100088c8:                            ; preds = %dec_label_pc_100088c0
  store i32 %v0_100088d8, i32* @r26, align 4
  br label %dec_label_pc_100088cc

dec_label_pc_100088cc:                            ; preds = %dec_label_pc_100088b8, %dec_label_pc_100088c8
  store i32 %v2_10008568.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100088d0 = load i32, i32* @r27, align 4
  %v1_100088d0 = mul i32 %v0_100088d0, 4
  store i32 %v1_100088d0, i32* %r0.global-to-local, align 4
  %v2_100088d4 = add i32 %v1_100088d0, %v2_10008568.pre-phi
  %v3_100088d4 = inttoptr i32 %v2_100088d4 to i32*
  %v4_100088d4 = load i32, i32* %v3_100088d4, align 4
  store i32 %v4_100088d4, i32* @r31, align 4
  %v1_100088d8 = add i32 %v0_100088d8, -1
  store i32 %v1_100088d8, i32* @r25, align 4
  %v1_100088dc = mul i32 %v1_100088d8, 4
  %v3_100088e0 = icmp eq i32 %v4_100088d4, 8
  %v1_100088e4 = load i32, i32* @r28, align 4
  %v2_100088e4 = add i32 %v1_100088e4, %v1_100088dc
  store i32 %v2_100088e4, i32* %r9.global-to-local, align 4
  %v1_100088e8 = add i32 %v2_100088e4, 40
  %v2_100088e8 = inttoptr i32 %v1_100088e8 to i32*
  %v3_100088e8 = load i32, i32* %v2_100088e8, align 4
  store i32 %v3_100088e8, i32* %r3.global-to-local, align 4
  br i1 %v3_100088e0, label %dec_label_pc_10008940, label %dec_label_pc_100088f0

dec_label_pc_100088f0:                            ; preds = %dec_label_pc_100088cc
  %v3_100088f0 = icmp eq i32 %v3_100088e8, 8
  br i1 %v3_100088f0, label %dec_label_pc_10008928, label %dec_label_pc_100088f8

dec_label_pc_100088f8:                            ; preds = %dec_label_pc_100088f0
  %v4_100088f8 = icmp eq i32 %v3_100088e8, %v4_100088d4
  br i1 %v4_100088f8, label %dec_label_pc_10008928, label %dec_label_pc_10008900

dec_label_pc_10008900:                            ; preds = %dec_label_pc_100088f8
  %v1_10008900 = call i32 @_promoted_size(i32 %v3_100088e8)
  store i32 %v1_10008900, i32* @r29, align 4
  %v0_10008908 = load i32, i32* @r31, align 4
  store i32 %v0_10008908, i32* %r3.global-to-local, align 4
  %v1_1000890c = call i32 @_promoted_size(i32 %v0_10008908)
  store i32 %v1_1000890c, i32* %r3.global-to-local, align 4
  %v0_10008918 = call i32 @__asm_mfcr()
  store i32 %v0_10008918, i32* %r3.global-to-local, align 4
  store i32 %v0_10008918, i32* %r0.global-to-local, align 4
  %v1_1000891c = call i32 @__asm_rlwinm(i32 %v0_10008918, i32 31, i32 31, i32 31)
  store i32 %v1_1000891c, i32* %r0.global-to-local, align 4
  %v3_10008920 = icmp eq i32 %v1_1000891c, 0
  br i1 %v3_10008920, label %dec_label_pc_10008940, label %dec_label_pc_10008900.dec_label_pc_10008928_crit_edge

dec_label_pc_10008900.dec_label_pc_10008928_crit_edge: ; preds = %dec_label_pc_10008900
  %v0_1000892c.pre = load i32, i32* @r27, align 4
  %v0_10008934.pre = load i32, i32* @r25, align 4
  %v1_10008938.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10008928

dec_label_pc_10008928:                            ; preds = %dec_label_pc_10008900.dec_label_pc_10008928_crit_edge, %dec_label_pc_100088f8, %dec_label_pc_100088f0
  %v1_10008938 = phi i32 [ %v1_10008938.pre, %dec_label_pc_10008900.dec_label_pc_10008928_crit_edge ], [ %v1_100088e4, %dec_label_pc_100088f8 ], [ %v1_100088e4, %dec_label_pc_100088f0 ]
  %v0_10008934 = phi i32 [ %v0_10008934.pre, %dec_label_pc_10008900.dec_label_pc_10008928_crit_edge ], [ %v1_100088d8, %dec_label_pc_100088f8 ], [ %v1_100088d8, %dec_label_pc_100088f0 ]
  %v0_1000892c = phi i32 [ %v0_1000892c.pre, %dec_label_pc_10008900.dec_label_pc_10008928_crit_edge ], [ %v0_100088d0, %dec_label_pc_100088f8 ], [ %v0_100088d0, %dec_label_pc_100088f0 ]
  store i32 %v2_10008568.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000892c = mul i32 %v0_1000892c, 4
  store i32 %v1_1000892c, i32* %r0.global-to-local, align 4
  %v2_10008930 = add i32 %v1_1000892c, %v2_10008568.pre-phi
  %v3_10008930 = inttoptr i32 %v2_10008930 to i32*
  %v4_10008930 = load i32, i32* %v3_10008930, align 4
  store i32 %v4_10008930, i32* %r0.global-to-local, align 4
  %v1_10008934 = mul i32 %v0_10008934, 4
  %v2_10008938 = add i32 %v1_10008934, %v1_10008938
  store i32 %v2_10008938, i32* %r9.global-to-local, align 4
  %v2_1000893c = add i32 %v2_10008938, 40
  %v3_1000893c = inttoptr i32 %v2_1000893c to i32*
  store i32 %v4_10008930, i32* %v3_1000893c, align 4
  br label %dec_label_pc_10008940

dec_label_pc_10008940:                            ; preds = %dec_label_pc_10008900, %dec_label_pc_100088cc, %dec_label_pc_10008928
  %v0_10008940 = load i32, i32* @r28, align 4
  %v1_10008940 = add i32 %v0_10008940, 28
  %v2_10008940 = inttoptr i32 %v1_10008940 to i32*
  %v3_10008940 = load i32, i32* %v2_10008940, align 4
  %v0_10008944 = load i32, i32* @r27, align 4
  %v1_10008944 = add i32 %v0_10008944, 1
  store i32 %v1_10008944, i32* @r27, align 4
  %v1_10008948 = add i32 %v3_10008940, 2
  store i32 %v1_10008948, i32* %r9.global-to-local, align 4
  %v2_1000894c = icmp slt i32 %v1_10008944, %v1_10008948
  br i1 %v2_1000894c, label %dec_label_pc_10008888, label %dec_label_pc_10008970

dec_label_pc_10008958:                            ; preds = %dec_label_pc_1000887c
  %v0_10008958 = load i32, i32* @r28, align 4
  %v1_10008958 = add i32 %v0_10008958, 28
  %v2_10008958 = inttoptr i32 %v1_10008958 to i32*
  %v3_10008958 = load i32, i32* %v2_10008958, align 4
  store i32 %v3_10008958, i32* %r5.global-to-local, align 4
  %v1_1000895c = add i32 %v0_10008958, 40
  store i32 %v1_1000895c, i32* @r3, align 4
  %v0_10008960 = load i32, i32* %r7.global-to-local, align 4
  %v1_10008960 = trunc i32 %v0_10008960 to i8
  %v3_10008960 = add i32 %v0_10008958, 38
  %v4_10008960 = inttoptr i32 %v3_10008960 to i8*
  store i8 %v1_10008960, i8* %v4_10008960, align 1
  %v2_10008964 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10008964, i32* @r4, align 4
  %v0_10008968 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008968 = mul i32 %v0_10008968, 4
  store i32 %v1_10008968, i32* @r5, align 4
  store i32 268470640, i32* @lr, align 4
  %v0_1000896c = call i32 @memcpy()
  store i32 %v0_1000896c, i32* %r3.global-to-local, align 4
  %v0_10008970.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10008970

dec_label_pc_10008970:                            ; preds = %dec_label_pc_10008940, %dec_label_pc_10008958
  %v0_10008970 = phi i32 [ %v0_10008970.pre, %dec_label_pc_10008958 ], [ %v0_10008940, %dec_label_pc_10008940 ]
  %v1_10008970 = add i32 %v0_10008970, 16
  %v2_10008970 = inttoptr i32 %v1_10008970 to i32*
  %v3_10008970 = load i32, i32* %v2_10008970, align 4
  store i32 %v3_10008970, i32* %r0.global-to-local, align 4
  %v0_10008974 = load i32, i32* @r26, align 4
  %v2_10008974 = add i32 %v0_10008970, 24
  %v3_10008974 = inttoptr i32 %v2_10008974 to i32*
  store i32 %v0_10008974, i32* %v3_10008974, align 4
  %v0_10008978 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008978 = and i32 %v0_10008978, 128
  store i32 %v1_10008978, i32* %r9.global-to-local, align 4
  %v3_10008978 = icmp eq i32 %v1_10008978, 0
  br i1 %v3_10008978, label %dec_label_pc_10008980, label %dec_label_pc_1000898c

dec_label_pc_10008980:                            ; preds = %dec_label_pc_10008970
  %v0_10008980 = load i32, i32* @r30, align 4
  %v1_10008980 = add i32 %v0_10008980, 1
  store i32 %v1_10008980, i32* %r0.global-to-local, align 4
  %v1_10008984 = load i32, i32* @r28, align 4
  %v2_10008984 = inttoptr i32 %v1_10008984 to i32*
  store i32 %v1_10008980, i32* %v2_10008984, align 4
  br label %dec_label_pc_100089a4

dec_label_pc_1000898c:                            ; preds = %dec_label_pc_10008970
  %v2_1000898c = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000898c, i32* %r0.global-to-local, align 4
  %v0_10008990 = load i32, i32* @r28, align 4
  %v1_10008990 = inttoptr i32 %v0_10008990 to i32*
  %v2_10008990 = load i32, i32* %v1_10008990, align 4
  %v1_10008994 = load i32, i32* @r30, align 4
  %v2_10008994 = sub i32 %v1_10008994, %v2_1000898c
  %v1_10008998 = mul i32 %v2_10008994, 4
  store i32 %v1_10008998, i32* %r0.global-to-local, align 4
  %v2_1000899c = add i32 %v1_10008998, %v2_10008990
  store i32 %v2_1000899c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000899c, i32* %v1_10008990, align 4
  br label %dec_label_pc_100089a4

dec_label_pc_100089a4:                            ; preds = %dec_label_pc_10008980, %dec_label_pc_1000898c
  %v0_100089a4 = load i32, i32* @r28, align 4
  %v1_100089a4 = add i32 %v0_100089a4, 28
  %v2_100089a4 = inttoptr i32 %v1_100089a4 to i32*
  %v3_100089a4 = load i32, i32* %v2_100089a4, align 4
  store i32 %v3_100089a4, i32* %r9.global-to-local, align 4
  %v1_100089a8 = add i32 %v3_100089a4, 2
  br label %dec_label_pc_100089b4

dec_label_pc_100089b4:                            ; preds = %dec_label_pc_10008518, %dec_label_pc_100085ec, %dec_label_pc_100086c8, %dec_label_pc_100086bc, %dec_label_pc_100086e4, %dec_label_pc_10008620, %dec_label_pc_100088c0, %dec_label_pc_10008770, %dec_label_pc_10008864, %dec_label_pc_100089a4
  %storemerge2 = phi i32 [ %v1_100089a8, %dec_label_pc_100089a4 ], [ -1, %dec_label_pc_10008864 ], [ -1, %dec_label_pc_10008770 ], [ -1, %dec_label_pc_100088c0 ], [ -1, %dec_label_pc_10008620 ], [ -1, %dec_label_pc_100086e4 ], [ -1, %dec_label_pc_100086bc ], [ -1, %dec_label_pc_100086c8 ], [ -1, %dec_label_pc_100085ec ], [ -1, %dec_label_pc_10008518 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_100084b0, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_10008998, { 1, 0 }
  uselistorder i32 %v0_10008970, { 1, 0 }
  uselistorder i32 %v1_10008944, { 1, 2, 0 }
  uselistorder i32 %v1_1000892c, { 1, 0 }
  uselistorder i32 %v0_10008918, { 0, 2, 1 }
  uselistorder i32 %v3_100088e8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100088e4, { 1, 2, 0 }
  uselistorder i32 %v1_100088d8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100088d0, { 1, 0 }
  uselistorder i32 %v0_100088d0, { 1, 2, 0 }
  uselistorder i32 %v3_10008898, { 1, 0, 2 }
  uselistorder i32 %v1_10008890, { 1, 0 }
  uselistorder i32 %v0_100088b0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10008808, { 1, 2, 0 }
  uselistorder i32 %v1_100087e0, { 2, 1, 0 }
  uselistorder i32 %v1_100087cc, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100087b0, { 1, 0, 2 }
  uselistorder i32 %v1_1000877c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008738, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100086fc, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100086e8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10008658, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10008654, { 1, 0 }
  uselistorder i32 %v0_1000866c, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100085d0, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_100085c8, { 1, 0 }
  uselistorder i32 %v1_100085b8, { 1, 0 }
  uselistorder i32 %v3_100085b0, { 1, 0, 2 }
  uselistorder i32 %v0_1000862c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_100085fc, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000858c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10008574, { 1, 0 }
  uselistorder i32 %v2_10008568.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10008548, { 1, 0 }
  uselistorder i32 %v1_10008530, { 1, 2, 0 }
  uselistorder i32 %v0_10008524, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 30, { 4, 5, 6, 7, 8, 1, 9, 2, 3, 10, 11, 12, 13, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1000b014.173 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1000afd4.172 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32 -48, { 1, 3, 5, 4, 6, 2, 0 }
  uselistorder i32* @global_var_1001c35c, { 3, 0, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32* @r1, { 2, 3, 4, 5, 7, 6, 1, 8, 0, 9, 10 }
  uselistorder i32 268566528, { 6, 7, 8, 9, 17, 18, 19, 10, 11, 20, 21, 12, 0, 13, 14, 1, 22, 3, 2, 4, 16, 15, 5 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100089b4, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_100089a4, { 1, 0 }
  uselistorder label %dec_label_pc_10008970, { 1, 0 }
  uselistorder label %dec_label_pc_10008940, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100088cc, { 1, 0 }
  uselistorder label %dec_label_pc_100088b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000887c, { 1, 0 }
  uselistorder label %dec_label_pc_100087c4, { 1, 0 }
  uselistorder label %dec_label_pc_10008770, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008720, { 1, 0 }
  uselistorder label %dec_label_pc_100086f4, { 1, 0 }
  uselistorder label %dec_label_pc_100086a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100086a4, { 1, 0 }
  uselistorder label %dec_label_pc_10008618, { 1, 0 }
  uselistorder label %dec_label_pc_10008610, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100085b0, { 1, 0 }
  uselistorder label %dec_label_pc_100085ac, { 1, 0 }
  uselistorder label %dec_label_pc_10008598, { 1, 0 }
  uselistorder label %dec_label_pc_10008578, { 1, 0 }
  uselistorder label %dec_label_pc_10008574, { 1, 0 }
  uselistorder label %dec_label_pc_10008558, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_100089c8 = load i32, i32* @lr, align 4
  store i32 %v0_100089c8, i32* %r0.global-to-local, align 4
  %v0_100089d0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100089dc = add i32 %tmp, 16
  %v3_100089dc = inttoptr i32 %v2_100089dc to i32*
  %v4_100089dc = load i32, i32* %v3_100089dc, align 4
  store i32 %v4_100089dc, i32* %r9.global-to-local, align 4
  %v2_100089e0 = add i32 %tmp, 24
  %v3_100089e0 = inttoptr i32 %v2_100089e0 to i32*
  %v4_100089e0 = load i32, i32* %v3_100089e0, align 4
  store i32 %v4_100089e0, i32* %r0.global-to-local, align 4
  %v2_100089e4 = icmp ult i32 %v4_100089dc, %v4_100089e0
  br i1 %v2_100089e4, label %dec_label_pc_10008a4c, label %dec_label_pc_100089ec

dec_label_pc_100089ec:                            ; preds = %entry
  %v3_100089ec = load i16, i16* %arg1, align 2
  %v4_100089ec = zext i16 %v3_100089ec to i32
  %v1_100089f0 = and i32 %v4_100089ec, 131
  store i32 %v1_100089f0, i32* %r0.global-to-local, align 4
  %v2_100089f4 = icmp ugt i32 %v1_100089f0, 128
  br i1 %v2_100089f4, label %dec_label_pc_10008a0c, label %dec_label_pc_100089fc

dec_label_pc_100089fc:                            ; preds = %dec_label_pc_100089ec
  store i32 268470788, i32* @lr, align 4
  %v3_10008a00 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_100089dc)
  store i32 %v3_10008a00, i32* %r3.global-to-local, align 4
  %v3_10008a04 = icmp eq i32 %v3_10008a00, 0
  br i1 %v3_10008a04, label %dec_label_pc_100089fc.dec_label_pc_10008a0c_crit_edge, label %dec_label_pc_10008ae8

dec_label_pc_100089fc.dec_label_pc_10008a0c_crit_edge: ; preds = %dec_label_pc_100089fc
  %v0_10008a0c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008a0c

dec_label_pc_10008a0c:                            ; preds = %dec_label_pc_100089fc.dec_label_pc_10008a0c_crit_edge, %dec_label_pc_100089ec
  %v2_10008a6c = phi i32 [ %v0_10008a0c.pre, %dec_label_pc_100089fc.dec_label_pc_10008a0c_crit_edge ], [ %tmp, %dec_label_pc_100089ec ]
  %v1_10008a0c = inttoptr i32 %v2_10008a6c to i16*
  %v2_10008a0c = load i16, i16* %v1_10008a0c, align 2
  %v3_10008a0c = zext i16 %v2_10008a0c to i32
  %v1_10008a10 = and i32 %v3_10008a0c, 2
  store i32 %v1_10008a10, i32* %r0.global-to-local, align 4
  %v3_10008a10 = icmp eq i32 %v1_10008a10, 0
  br i1 %v3_10008a10, label %dec_label_pc_10008a3c, label %dec_label_pc_10008a18

dec_label_pc_10008a18:                            ; preds = %dec_label_pc_10008a0c
  %v1_10008a18 = call i32 @__asm_rlwinm(i32 %v3_10008a0c, i32 2, i32 29, i32 29)
  %v1_10008a1c = load i32, i32* @r31, align 4
  %v2_10008a1c = add i32 %v1_10008a1c, %v1_10008a18
  store i32 %v2_10008a1c, i32* %r9.global-to-local, align 4
  %v1_10008a20 = add i32 %v2_10008a1c, 39
  %v2_10008a20 = inttoptr i32 %v1_10008a20 to i8*
  %v3_10008a20 = load i8, i8* %v2_10008a20, align 1
  %v4_10008a20 = zext i8 %v3_10008a20 to i32
  store i32 %v4_10008a20, i32* %r0.global-to-local, align 4
  %v1_10008a24 = add nsw i32 %v3_10008a0c, -1
  store i32 %v1_10008a24, i32* %r9.global-to-local, align 4
  %v1_10008a28 = trunc i32 %v1_10008a24 to i16
  %v3_10008a28 = inttoptr i32 %v1_10008a1c to i16*
  store i16 %v1_10008a28, i16* %v3_10008a28, align 2
  %v0_10008a2c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10008a2c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008a34 = load i32, i32* @r31, align 4
  %v2_10008a34 = add i32 %v1_10008a34, 40
  %v3_10008a34 = inttoptr i32 %v2_10008a34 to i32*
  store i32 0, i32* %v3_10008a34, align 4
  br label %dec_label_pc_10008aec

dec_label_pc_10008a3c:                            ; preds = %dec_label_pc_10008a0c
  %v1_10008a3c = add i32 %v2_10008a6c, 16
  %v2_10008a3c = inttoptr i32 %v1_10008a3c to i32*
  %v3_10008a3c = load i32, i32* %v2_10008a3c, align 4
  store i32 %v3_10008a3c, i32* %r9.global-to-local, align 4
  %v1_10008a40 = add i32 %v2_10008a6c, 20
  %v2_10008a40 = inttoptr i32 %v1_10008a40 to i32*
  %v3_10008a40 = load i32, i32* %v2_10008a40, align 4
  store i32 %v3_10008a40, i32* %r0.global-to-local, align 4
  %v4_10008a44 = icmp eq i32 %v3_10008a40, %v3_10008a3c
  br i1 %v4_10008a44, label %dec_label_pc_10008a58, label %dec_label_pc_10008a4c

dec_label_pc_10008a4c:                            ; preds = %dec_label_pc_10008a3c, %entry
  %v1_10008ac07 = phi i32 [ %v2_10008a6c, %dec_label_pc_10008a3c ], [ %tmp, %entry ]
  %v0_10008a4c = phi i32 [ %v3_10008a3c, %dec_label_pc_10008a3c ], [ %v4_100089dc, %entry ]
  %v1_10008a4c = inttoptr i32 %v0_10008a4c to i8*
  %v2_10008a4c = load i8, i8* %v1_10008a4c, align 1
  %v3_10008a4c = zext i8 %v2_10008a4c to i32
  store i32 %v3_10008a4c, i32* %r3.global-to-local, align 4
  %v1_10008a50 = add i32 %v0_10008a4c, 1
  store i32 %v1_10008a50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008ac0

dec_label_pc_10008a58:                            ; preds = %dec_label_pc_10008a3c
  %v1_10008a58 = add i32 %v2_10008a6c, 4
  %v2_10008a58 = inttoptr i32 %v1_10008a58 to i32*
  %v3_10008a58 = load i32, i32* %v2_10008a58, align 4
  store i32 %v3_10008a58, i32* %r0.global-to-local, align 4
  %v3_10008a5c = icmp eq i32 %v3_10008a58, -2
  br i1 %v3_10008a5c, label %dec_label_pc_10008a64, label %dec_label_pc_10008a74

dec_label_pc_10008a64:                            ; preds = %dec_label_pc_10008a58
  %v1_10008a64 = or i32 %v3_10008a0c, 4
  store i32 %v1_10008a64, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10008a6c = trunc i32 %v1_10008a64 to i16
  store i16 %v1_10008a6c, i16* %v1_10008a0c, align 2
  br label %dec_label_pc_10008aec

dec_label_pc_10008a74:                            ; preds = %dec_label_pc_10008a58
  %v1_10008a74 = and i32 %v3_10008a0c, 768
  store i32 %v1_10008a74, i32* %r0.global-to-local, align 4
  %v3_10008a74 = icmp eq i32 %v1_10008a74, 0
  br i1 %v3_10008a74, label %dec_label_pc_10008a88, label %dec_label_pc_10008a7c

dec_label_pc_10008a7c:                            ; preds = %dec_label_pc_10008a74
  store i32 ptrtoint (i32** @global_var_1001c384.136 to i32), i32* %r3.global-to-local, align 4
  store i32 268470920, i32* @lr, align 4
  %v4_10008a84 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1001c384.136 to i16*), i32 %v3_10008a3c)
  store i32 %v4_10008a84, i32* %r3.global-to-local, align 4
  %v0_10008a88.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008a88

dec_label_pc_10008a88:                            ; preds = %dec_label_pc_10008a74, %dec_label_pc_10008a7c
  %v0_10008ac8 = phi i32 [ %v2_10008a6c, %dec_label_pc_10008a74 ], [ %v0_10008a88.pre, %dec_label_pc_10008a7c ]
  %v1_10008a88 = add i32 %v0_10008ac8, 8
  %v2_10008a88 = inttoptr i32 %v1_10008a88 to i32*
  %v3_10008a88 = load i32, i32* %v2_10008a88, align 4
  store i32 %v3_10008a88, i32* %r9.global-to-local, align 4
  %v1_10008a8c = add i32 %v0_10008ac8, 12
  %v2_10008a8c = inttoptr i32 %v1_10008a8c to i32*
  %v3_10008a8c = load i32, i32* %v2_10008a8c, align 4
  store i32 %v3_10008a8c, i32* %r0.global-to-local, align 4
  %v4_10008a90 = icmp eq i32 %v3_10008a8c, %v3_10008a88
  br i1 %v4_10008a90, label %dec_label_pc_10008ac8, label %dec_label_pc_10008a98

dec_label_pc_10008a98:                            ; preds = %dec_label_pc_10008a88
  %v2_10008a98 = add i32 %v0_10008ac8, 24
  %v3_10008a98 = inttoptr i32 %v2_10008a98 to i32*
  store i32 %v3_10008a88, i32* %v3_10008a98, align 4
  %v0_10008a9c = load i32, i32* @r31, align 4
  store i32 %v0_10008a9c, i32* %r3.global-to-local, align 4
  store i32 268470948, i32* @lr, align 4
  %v3_10008aa0 = call i32 @__stdio_rfill(i32 %v0_10008a9c, i32 %v3_10008a88)
  store i32 %v3_10008aa0, i32* %r3.global-to-local, align 4
  %v3_10008aa4 = icmp eq i32 %v3_10008aa0, 0
  br i1 %v3_10008aa4, label %dec_label_pc_10008ae8, label %dec_label_pc_10008aac

dec_label_pc_10008aac:                            ; preds = %dec_label_pc_10008a98
  %v0_10008aac = load i32, i32* @r31, align 4
  %v1_10008aac = add i32 %v0_10008aac, 20
  %v2_10008aac = inttoptr i32 %v1_10008aac to i32*
  %v3_10008aac = load i32, i32* %v2_10008aac, align 4
  store i32 %v3_10008aac, i32* %r0.global-to-local, align 4
  %v1_10008ab0 = add i32 %v0_10008aac, 16
  %v2_10008ab0 = inttoptr i32 %v1_10008ab0 to i32*
  %v3_10008ab0 = load i32, i32* %v2_10008ab0, align 4
  store i32 %v3_10008ab0, i32* %r9.global-to-local, align 4
  %v2_10008ab4 = add i32 %v0_10008aac, 24
  %v3_10008ab4 = inttoptr i32 %v2_10008ab4 to i32*
  store i32 %v3_10008aac, i32* %v3_10008ab4, align 4
  %v0_10008ab8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008ab8 = add i32 %v0_10008ab8, 1
  store i32 %v1_10008ab8, i32* %r0.global-to-local, align 4
  %v1_10008abc = inttoptr i32 %v0_10008ab8 to i8*
  %v2_10008abc = load i8, i8* %v1_10008abc, align 1
  %v3_10008abc = zext i8 %v2_10008abc to i32
  store i32 %v3_10008abc, i32* %r3.global-to-local, align 4
  %v1_10008ac0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008ac0

dec_label_pc_10008ac0:                            ; preds = %dec_label_pc_10008a4c, %dec_label_pc_10008aac
  %v1_10008ac0 = phi i32 [ %v1_10008ac07, %dec_label_pc_10008a4c ], [ %v1_10008ac0.pre, %dec_label_pc_10008aac ]
  %v0_10008ac0 = phi i32 [ %v1_10008a50, %dec_label_pc_10008a4c ], [ %v1_10008ab8, %dec_label_pc_10008aac ]
  %v2_10008ac0 = add i32 %v1_10008ac0, 16
  %v3_10008ac0 = inttoptr i32 %v2_10008ac0 to i32*
  store i32 %v0_10008ac0, i32* %v3_10008ac0, align 4
  br label %dec_label_pc_10008aec

dec_label_pc_10008ac8:                            ; preds = %dec_label_pc_10008a88
  %v1_10008ac8 = inttoptr i32 %v0_10008ac8 to i16*
  store i32 %v0_10008ac8, i32* %r3.global-to-local, align 4
  %v2_10008acc = ptrtoint i8* %stack_var_-24 to i32
  store i32 268471000, i32* @lr, align 4
  %v5_10008ad4 = call i32 @__stdio_READ(i16* %v1_10008ac8, i32 %v2_10008acc, i32 1)
  store i32 %v5_10008ad4, i32* %r3.global-to-local, align 4
  %v3_10008ad8 = icmp eq i32 %v5_10008ad4, 0
  br i1 %v3_10008ad8, label %dec_label_pc_10008ae8, label %dec_label_pc_10008ae0

dec_label_pc_10008ae0:                            ; preds = %dec_label_pc_10008ac8
  %v3_10008ae0 = load i8, i8* %stack_var_-24, align 1
  %v4_10008ae0 = sext i8 %v3_10008ae0 to i32
  store i32 %v4_10008ae0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008aec

dec_label_pc_10008ae8:                            ; preds = %dec_label_pc_100089fc, %dec_label_pc_10008ac8, %dec_label_pc_10008a98
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008aec

dec_label_pc_10008aec:                            ; preds = %dec_label_pc_10008ae0, %dec_label_pc_10008ac0, %dec_label_pc_10008a64, %dec_label_pc_10008a18, %dec_label_pc_10008ae8
  store i32 %v0_100089c8, i32* %r0.global-to-local, align 4
  store i32 %v0_100089d0, i32* @r31, align 4
  %v0_10008afc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008afc

; uselistorder directives
  uselistorder i32 %v0_10008ac8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10008a4c, { 1, 0 }
  uselistorder i32 %v3_10008a3c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10008a1c, { 1, 0 }
  uselistorder i32 %v3_10008a0c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10008a6c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_1001c384.136 to i16*), { 1, 0 }
  uselistorder i16* @global_var_1001c260.26, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008aec, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10008ae8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008ac0, { 1, 0 }
  uselistorder label %dec_label_pc_10008a88, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10008b18 = call i32 @__GI_strlen()
  store i32 %v0_10008b18, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10008b34.178 to i32), i32* @lr, align 4
  %v4_10008b30 = inttoptr i32 %arg2 to i16*
  %v5_10008b30 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_10008b18, i16* %v4_10008b30)
  %v1_10008b38 = load i32, i32* @r27, align 4
  %v4_10008b38 = icmp eq i32 %v5_10008b30, %v1_10008b38
  br i1 %v4_10008b38, label %dec_label_pc_10008b40, label %dec_label_pc_10008b44

dec_label_pc_10008b40:                            ; preds = %entry
  br label %dec_label_pc_10008b44

dec_label_pc_10008b44:                            ; preds = %entry, %dec_label_pc_10008b40
  %v0_10008b44 = phi i32 [ -1, %entry ], [ %v5_10008b30, %dec_label_pc_10008b40 ]
  ret i32 %v0_10008b44

; uselistorder directives
  uselistorder label %dec_label_pc_10008b44, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_10008b74 = load i16, i16* %arg4, align 2
  %v4_10008b74 = zext i16 %v3_10008b74 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_10008b84 = call i32 @__asm_rlwinm(i32 %v4_10008b74, i32 0, i32 24, i32 25)
  %v3_10008b8c = icmp eq i32 %v1_10008b84, 192
  br i1 %v3_10008b8c, label %dec_label_pc_10008ba0, label %dec_label_pc_10008b94

dec_label_pc_10008b94:                            ; preds = %entry
  store i32 268471192, i32* @lr, align 4
  %v3_10008b94 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4)
  %v3_10008b98 = icmp eq i32 %v3_10008b94, 0
  br i1 %v3_10008b98, label %dec_label_pc_10008ba0, label %dec_label_pc_10008bf8

dec_label_pc_10008ba0:                            ; preds = %dec_label_pc_10008b94, %entry
  %v0_10008ba0 = load i32, i32* @r29, align 4
  %v3_10008ba0 = icmp eq i32 %v0_10008ba0, 0
  %v0_10008ba4 = load i32, i32* @r30, align 4
  %v3_10008ba4 = icmp eq i32 %v0_10008ba4, 0
  %brmerge = or i1 %v3_10008ba0, %v3_10008ba4
  br i1 %brmerge, label %dec_label_pc_10008bf8, label %dec_label_pc_10008bb0

dec_label_pc_10008bb0:                            ; preds = %dec_label_pc_10008ba0
  %v2_10008bb8 = udiv i32 -1, %v0_10008ba0
  %v0_10008bbc = load i32, i32* @r31, align 4
  %v3_10008bc0 = icmp ugt i32 %v0_10008ba4, %v2_10008bb8
  %v1_10008bd8 = inttoptr i32 %v0_10008bbc to i16*
  br i1 %v3_10008bc0, label %dec_label_pc_10008bd8, label %dec_label_pc_10008bc8

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_10008bb0
  %v0_10008bb4 = load i32, i32* @r28, align 4
  %v2_10008bc8 = mul i32 %v0_10008ba4, %v0_10008ba0
  store i32 %v2_10008bc8, i32* %r4.global-to-local, align 4
  store i32 268471248, i32* @lr, align 4
  %v5_10008bcc = call i32 @__stdio_fwrite(i32 %v0_10008bb4, i32 %v2_10008bc8, i16* %v1_10008bd8)
  %v1_10008bd0 = load i32, i32* @r29, align 4
  %v2_10008bd0 = udiv i32 %v5_10008bcc, %v1_10008bd0
  store i32 %v2_10008bd0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008bfc

dec_label_pc_10008bd8:                            ; preds = %dec_label_pc_10008bb0
  %v2_10008bd8 = load i16, i16* %v1_10008bd8, align 2
  %v1_10008bdc = or i16 %v2_10008bd8, 8
  store i16 %v1_10008bdc, i16* %v1_10008bd8, align 2
  %v0_10008be4 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10008bf0 = inttoptr i32 %v0_10008be4 to i32*
  store i32 22, i32* %v2_10008bf0, align 4
  %v0_10008c00.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008bfc

dec_label_pc_10008bf8:                            ; preds = %dec_label_pc_10008ba0, %dec_label_pc_10008b94
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008bfc

dec_label_pc_10008bfc:                            ; preds = %dec_label_pc_10008bd8, %dec_label_pc_10008bc8, %dec_label_pc_10008bf8
  %v0_10008c00 = phi i32 [ %v0_10008c00.pre, %dec_label_pc_10008bd8 ], [ %v2_10008bd0, %dec_label_pc_10008bc8 ], [ 0, %dec_label_pc_10008bf8 ]
  ret i32 %v0_10008c00

; uselistorder directives
  uselistorder i16* %v1_10008bd8, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder i32 128, { 8, 5, 16, 9, 10, 11, 6, 12, 13, 14, 2, 7, 17, 0, 1, 18, 19, 4, 3, 15 }
  uselistorder label %dec_label_pc_10008bfc, { 2, 0, 1 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268471344, i32* @lr, align 4
  %v0_10008c2c = call i32 @memcpy()
  %v0_10008c34 = load i32, i32* @r28, align 4
  %v1_10008c34 = load i32, i32* @r29, align 4
  %v2_10008c34 = add i32 %v1_10008c34, %v0_10008c34
  ret i32 %v2_10008c34
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10008c48 = load i32, i32* @r4, align 4
  %v3_10008c48 = icmp eq i32 %v0_10008c48, 0
  %v0_10008c54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008c48, i32 %v0_10008c54)
  %v1_10008c64 = load i32, i32* @r4, align 4
  %v2_10008c64 = add i32 %v1_10008c64, %tmp
  %v3_10008c68 = icmp ugt i32 %v2_10008c64, %tmp
  %v4_10008c68 = icmp eq i32 %v1_10008c64, 0
  %v2_10008c6c = or i1 %v4_10008c68, %v3_10008c68
  br i1 %v2_10008c6c, label %dec_label_pc_10008c74, label %dec_label_pc_10008c70

dec_label_pc_10008c5c:                            ; preds = %dec_label_pc_10008cdc
  br label %dec_label_pc_10008d20

dec_label_pc_10008c70:                            ; preds = %entry
  br label %dec_label_pc_10008c74

dec_label_pc_10008c74:                            ; preds = %entry, %dec_label_pc_10008c70
  %v0_10008d24 = phi i32 [ %v2_10008c64, %entry ], [ -1, %dec_label_pc_10008c70 ]
  %v1_10008ca46 = urem i32 %tmp, 4
  %v3_10008ca48 = icmp eq i32 %v1_10008ca46, 0
  br i1 %v3_10008ca48, label %dec_label_pc_10008cac, label %dec_label_pc_10008c7c

dec_label_pc_10008c7c:                            ; preds = %dec_label_pc_10008c74, %dec_label_pc_10008ca0
  %v0_10008c94 = phi i32 [ %v1_10008ca0, %dec_label_pc_10008ca0 ], [ %tmp, %dec_label_pc_10008c74 ]
  %v1_10008c7c = inttoptr i32 %v0_10008c94 to i8*
  %v2_10008c7c = load i8, i8* %v1_10008c7c, align 1
  %v3_10008c80 = icmp eq i8 %v2_10008c7c, 0
  br i1 %v3_10008c80, label %dec_label_pc_10008c88, label %dec_label_pc_10008ca0

dec_label_pc_10008c88:                            ; preds = %dec_label_pc_10008c7c
  %v3_10008c88 = icmp ugt i32 %v0_10008d24, %v0_10008c94
  %v0_10008c94.v0_10008d24 = select i1 %v3_10008c88, i32 %v0_10008c94, i32 %v0_10008d24
  %v2_10008c98 = sub i32 %v0_10008c94.v0_10008d24, %tmp
  ret i32 %v2_10008c98

dec_label_pc_10008ca0:                            ; preds = %dec_label_pc_10008c7c
  %v1_10008ca0 = add i32 %v0_10008c94, 1
  %v1_10008ca4 = urem i32 %v1_10008ca0, 4
  %v3_10008ca4 = icmp eq i32 %v1_10008ca4, 0
  br i1 %v3_10008ca4, label %dec_label_pc_10008cac, label %dec_label_pc_10008c7c

dec_label_pc_10008cac:                            ; preds = %dec_label_pc_10008ca0, %dec_label_pc_10008c74
  %v0_10008cb0 = phi i32 [ %tmp, %dec_label_pc_10008c74 ], [ %v1_10008ca0, %dec_label_pc_10008ca0 ]
  %v2_10008d183 = icmp ult i32 %v0_10008cb0, %v0_10008d24
  br i1 %v2_10008d183, label %dec_label_pc_10008cbc, label %dec_label_pc_10008d20

dec_label_pc_10008cbc:                            ; preds = %dec_label_pc_10008cac, %dec_label_pc_10008d14
  %v0_10008c5c = phi i32 [ %v1_10008cc0, %dec_label_pc_10008d14 ], [ %v0_10008cb0, %dec_label_pc_10008cac ]
  %v1_10008cbc = inttoptr i32 %v0_10008c5c to i32*
  %v2_10008cbc = load i32, i32* %v1_10008cbc, align 4
  %v1_10008cc0 = add i32 %v0_10008c5c, 4
  %v1_10008ccc = add i32 %v2_10008cbc, -16843009
  %v2_10008cd0 = and i32 %v1_10008ccc, -2139062144
  %v5_10008cd0 = icmp eq i32 %v2_10008cd0, 0
  %v1_10008cd4 = add i32 %v0_10008c5c, 1
  br i1 %v5_10008cd0, label %dec_label_pc_10008d14, label %dec_label_pc_10008cdc

dec_label_pc_10008cdc:                            ; preds = %dec_label_pc_10008cbc
  %v2_10008cdc = inttoptr i32 %v0_10008c5c to i8*
  %v3_10008cdc = load i8, i8* %v2_10008cdc, align 1
  %v3_10008ce0 = icmp eq i8 %v3_10008cdc, 0
  br i1 %v3_10008ce0, label %dec_label_pc_10008c5c, label %dec_label_pc_10008ce8

dec_label_pc_10008ce8:                            ; preds = %dec_label_pc_10008cdc
  %v2_10008ce8 = inttoptr i32 %v1_10008cd4 to i8*
  %v3_10008ce8 = load i8, i8* %v2_10008ce8, align 1
  %v3_10008cec = icmp eq i8 %v3_10008ce8, 0
  br i1 %v3_10008cec, label %dec_label_pc_10008d20, label %dec_label_pc_10008cf4

dec_label_pc_10008cf4:                            ; preds = %dec_label_pc_10008ce8
  %v1_10008cf4 = add i32 %v0_10008c5c, 2
  %v2_10008cf4 = inttoptr i32 %v1_10008cf4 to i8*
  %v3_10008cf4 = load i8, i8* %v2_10008cf4, align 1
  %v3_10008cfc = icmp eq i8 %v3_10008cf4, 0
  br i1 %v3_10008cfc, label %dec_label_pc_10008d20, label %dec_label_pc_10008d04

dec_label_pc_10008d04:                            ; preds = %dec_label_pc_10008cf4
  %v1_10008d04 = add i32 %v0_10008c5c, 3
  %v2_10008d04 = inttoptr i32 %v1_10008d04 to i8*
  %v3_10008d04 = load i8, i8* %v2_10008d04, align 1
  %v3_10008d0c = icmp eq i8 %v3_10008d04, 0
  br i1 %v3_10008d0c, label %dec_label_pc_10008d20, label %dec_label_pc_10008d14

dec_label_pc_10008d14:                            ; preds = %dec_label_pc_10008d04, %dec_label_pc_10008cbc
  %v2_10008d18 = icmp ult i32 %v1_10008cc0, %v0_10008d24
  br i1 %v2_10008d18, label %dec_label_pc_10008cbc, label %dec_label_pc_10008d20

dec_label_pc_10008d20:                            ; preds = %dec_label_pc_10008d14, %dec_label_pc_10008ce8, %dec_label_pc_10008cf4, %dec_label_pc_10008d04, %dec_label_pc_10008cac, %dec_label_pc_10008c5c
  %v0_10008d2c = phi i32 [ %v0_10008c5c, %dec_label_pc_10008c5c ], [ %v0_10008cb0, %dec_label_pc_10008cac ], [ %v1_10008d04, %dec_label_pc_10008d04 ], [ %v1_10008cf4, %dec_label_pc_10008cf4 ], [ %v1_10008cd4, %dec_label_pc_10008ce8 ], [ %v0_10008d24, %dec_label_pc_10008d14 ]
  %v3_10008d20 = icmp ugt i32 %v0_10008d24, %v0_10008d2c
  %v0_10008d2c.v0_10008d24 = select i1 %v3_10008d20, i32 %v0_10008d2c, i32 %v0_10008d24
  %v2_10008d30 = sub i32 %v0_10008d2c.v0_10008d24, %tmp
  ret i32 %v2_10008d30

; uselistorder directives
  uselistorder i32 %v1_10008cc0, { 1, 0 }
  uselistorder i32 %v0_10008c5c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v0_10008cb0, { 1, 0, 2 }
  uselistorder i32 %v1_10008ca0, { 1, 0, 2 }
  uselistorder i32 %v0_10008c94, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10008d24, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_10008c64, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_10008d20, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_10008cbc, { 1, 0 }
  uselistorder label %dec_label_pc_10008c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10008c74, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268471632, i32* @lr, align 4
  %v0_10008d4c = call i32 @__xpg_strerror_r()
  %v0_10008d54 = load i32, i32* @r29, align 4
  ret i32 %v0_10008d54
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_10008d68 = load i32, i32* @r3, align 4
  %v2_10008d68 = icmp ugt i32 %v0_10008d68, 124
  %v0_10008d78 = load i32, i32* @r4, align 4
  store i32 %v0_10008d78, i32* %r27.global-to-local, align 4
  %v0_10008d80 = load i32, i32* @r5, align 4
  br i1 %v2_10008d68, label %dec_label_pc_10008dc4, label %dec_label_pc_10008d88

dec_label_pc_10008d88:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1000b068.180 to i32), i32* %r30.global-to-local, align 4
  %v3_10008da47 = icmp eq i32 %v0_10008d68, 0
  br i1 %v3_10008da47, label %dec_label_pc_10008db8, label %dec_label_pc_10008d98

dec_label_pc_10008d98:                            ; preds = %dec_label_pc_10008d88, %dec_label_pc_10008d98
  %v0_10008d9c = phi i32 [ %v1_10008d9c, %dec_label_pc_10008d98 ], [ ptrtoint ([8 x i8]* @global_var_1000b068.180 to i32), %dec_label_pc_10008d88 ]
  %v1_10008d9c = add i32 %v0_10008d9c, 1
  store i32 %v1_10008d9c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008d98

dec_label_pc_10008db8:                            ; preds = %dec_label_pc_10008d88
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008df8

dec_label_pc_10008dc4:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_10008d68, 0
  %v1_10008dc8 = zext i1 %tmp to i32
  %v2_10008dc8 = ashr i32 %v0_10008d68, 31
  %v3_10008dc8 = and i32 %v2_10008dc8, -2
  %v4_10008dc8 = or i32 %v3_10008dc8, %v1_10008dc8
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_10008ddc = bitcast i32* %stack_var_-39 to i8*
  %v6_10008ddc = call i32 @_uintmaxtostr(i8* %v5_10008ddc, i32 %v4_10008dc8, i32 %v0_10008d68, i32 -10, i32 0)
  %v1_10008de4 = add i32 %v6_10008ddc, -14
  store i32 %v1_10008de4, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000b058.181 to i32), i32* @r4, align 4
  store i32 %v1_10008de4, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268471800, i32* @lr, align 4
  %v0_10008df4 = call i32 @memcpy()
  %v0_10008df8.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_10008dfc.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10008e0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10008df8

dec_label_pc_10008df8:                            ; preds = %dec_label_pc_10008db8, %dec_label_pc_10008dc4
  %v0_10008e0c = phi i32 [ %v0_10008d80, %dec_label_pc_10008db8 ], [ %v0_10008e0c.pre, %dec_label_pc_10008dc4 ]
  %v0_10008dfc = phi i32 [ ptrtoint ([8 x i8]* @global_var_1000b068.180 to i32), %dec_label_pc_10008db8 ], [ %v0_10008dfc.pre, %dec_label_pc_10008dc4 ]
  %v1_10008e00 = phi i32 [ %v0_10008d78, %dec_label_pc_10008db8 ], [ %v0_10008df8.pre, %dec_label_pc_10008dc4 ]
  %tmp19 = icmp slt i32 %v1_10008e00, 0
  %v1_10008df8 = zext i1 %tmp19 to i32
  %v2_10008df8 = ashr i32 %v1_10008e00, 31
  %v3_10008df8 = and i32 %v2_10008df8, -2
  %v4_10008df8 = or i32 %v3_10008df8, %v1_10008df8
  store i32 %v0_10008dfc, i32* @r3, align 4
  %v2_10008e00 = xor i32 %v4_10008df8, %v1_10008e00
  %v2_10008e04 = sub i32 %v4_10008df8, %v2_10008e00
  %tmp20 = icmp slt i32 %v2_10008e04, 0
  %v1_10008e08 = zext i1 %tmp20 to i32
  %v2_10008e08 = ashr i32 %v2_10008e04, 31
  %v3_10008e08 = and i32 %v2_10008e08, -2
  %v4_10008e08 = or i32 %v3_10008e08, %v1_10008e08
  %v2_10008e0c = and i32 %v4_10008e08, %v0_10008e0c
  store i32 %v2_10008e0c, i32* @r29, align 4
  %v0_10008e10 = call i32 @__GI_strlen()
  %v1_10008e14 = add i32 %v0_10008e10, 1
  store i32 %v1_10008e14, i32* %r31.global-to-local, align 4
  %v1_10008e18 = load i32, i32* @r29, align 4
  %v3_10008e18 = icmp ugt i32 %v1_10008e14, %v1_10008e18
  br i1 %v3_10008e18, label %dec_label_pc_10008e20, label %dec_label_pc_10008e28

dec_label_pc_10008e20:                            ; preds = %dec_label_pc_10008df8
  store i32 %v1_10008e18, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008e28

dec_label_pc_10008e28:                            ; preds = %dec_label_pc_10008df8, %dec_label_pc_10008e20
  %v0_10008e38 = phi i32 [ %v1_10008e18, %dec_label_pc_10008e20 ], [ %v1_10008e14, %dec_label_pc_10008df8 ]
  %v3_10008e28 = icmp eq i32 %v0_10008e38, 0
  br i1 %v3_10008e28, label %dec_label_pc_10008e4c, label %dec_label_pc_10008e30

dec_label_pc_10008e30:                            ; preds = %dec_label_pc_10008e28
  %v0_10008e30 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10008e30, i32* @r4, align 4
  %v0_10008e34 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10008e34, i32* @r3, align 4
  store i32 %v0_10008e38, i32* @r5, align 4
  store i32 268471872, i32* @lr, align 4
  %v0_10008e3c = call i32 @memcpy()
  %v1_10008e40 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e40 = add i32 %v1_10008e40, %v0_10008e34
  %v3_10008e48 = add i32 %v2_10008e40, -1
  %v4_10008e48 = inttoptr i32 %v3_10008e48 to i8*
  store i8 0, i8* %v4_10008e48, align 1
  br label %dec_label_pc_10008e4c

dec_label_pc_10008e4c:                            ; preds = %dec_label_pc_10008e28, %dec_label_pc_10008e30
  %v0_10008e4c = load i32, i32* %r28.global-to-local, align 4
  %v3_10008e4c = icmp eq i32 %v0_10008e4c, 0
  br i1 %v3_10008e4c, label %dec_label_pc_10008e5c, label %dec_label_pc_10008e54

dec_label_pc_10008e54:                            ; preds = %dec_label_pc_10008e4c
  %v0_10008e54 = call i32 @__errno_location()
  %v0_10008e58 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008e58 = inttoptr i32 %v0_10008e54 to i32*
  store i32 %v0_10008e58, i32* %v2_10008e58, align 4
  %v0_10008e60.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008e5c

dec_label_pc_10008e5c:                            ; preds = %dec_label_pc_10008e4c, %dec_label_pc_10008e54
  %v0_10008e60 = phi i32 [ 0, %dec_label_pc_10008e4c ], [ %v0_10008e60.pre, %dec_label_pc_10008e54 ]
  ret i32 %v0_10008e60

; uselistorder directives
  uselistorder i32 %v2_10008e04, { 1, 0 }
  uselistorder i32 %v4_10008df8, { 1, 0 }
  uselistorder i32 %v1_10008e00, { 1, 2, 0 }
  uselistorder i32 %v1_10008d9c, { 1, 0 }
  uselistorder i32 %v0_10008d68, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 34, { 2, 4, 5, 0, 1, 3, 6, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1000b068.180 to i32), { 1, 0, 2 }
  uselistorder i32 124, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008e5c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e28, { 1, 0 }
  uselistorder label %dec_label_pc_10008df8, { 1, 0 }
  uselistorder label %dec_label_pc_10008d98, { 1, 0 }
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10008e78 = load i32, i32* bitcast (i32** @global_var_1001c390.161 to i32*), align 4
  %v0_10008e80.pre = load i32, i32* @r3, align 4
  %v1_10008e80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10008e80

dec_label_pc_10008e80:                            ; preds = %dec_label_pc_10008ea8, %entry
  %v0_10008ebc6 = phi i32 [ %v0_10008ebc7, %dec_label_pc_10008ea8 ], [ 0, %entry ]
  %v0_10008eac = phi i32 [ %v1_10008eac, %dec_label_pc_10008ea8 ], [ %v1_10008e80.pre, %entry ]
  %v0_10008eb0 = phi i32 [ %v1_10008eb0, %dec_label_pc_10008ea8 ], [ %v0_10008e80.pre, %entry ]
  %v4_10008e80 = icmp eq i32 %v0_10008eb0, %v0_10008eac
  %.pre = inttoptr i32 %v0_10008eb0 to i8*
  br i1 %v4_10008e80, label %dec_label_pc_10008ea8, label %dec_label_pc_10008e88

dec_label_pc_10008e88:                            ; preds = %dec_label_pc_10008e80
  %v2_10008e88 = load i8, i8* %.pre, align 1
  %v3_10008e88 = zext i8 %v2_10008e88 to i32
  %v1_10008e8c = inttoptr i32 %v0_10008eac to i8*
  %v2_10008e8c = load i8, i8* %v1_10008e8c, align 1
  %v3_10008e8c = zext i8 %v2_10008e8c to i32
  %v1_10008e90 = mul nuw nsw i32 %v3_10008e88, 2
  %v1_10008e94 = mul nuw nsw i32 %v3_10008e8c, 2
  %v2_10008e98 = add i32 %v1_10008e90, %v3_10008e78
  %v3_10008e98 = inttoptr i32 %v2_10008e98 to i16*
  %v4_10008e98 = load i16, i16* %v3_10008e98, align 2
  %v5_10008e98 = sext i16 %v4_10008e98 to i32
  %v2_10008e9c = add i32 %v1_10008e94, %v3_10008e78
  %v3_10008e9c = inttoptr i32 %v2_10008e9c to i16*
  %v4_10008e9c = load i16, i16* %v3_10008e9c, align 2
  %v5_10008e9c = sext i16 %v4_10008e9c to i32
  %v2_10008ea0 = sub nsw i32 %v5_10008e98, %v5_10008e9c
  %v4_10008ea4 = icmp eq i16 %v4_10008e98, %v4_10008e9c
  br i1 %v4_10008ea4, label %dec_label_pc_10008ea8, label %dec_label_pc_10008ebc

dec_label_pc_10008ea8:                            ; preds = %dec_label_pc_10008e80, %dec_label_pc_10008e88
  %v0_10008ebc7 = phi i32 [ %v2_10008ea0, %dec_label_pc_10008e88 ], [ %v0_10008ebc6, %dec_label_pc_10008e80 ]
  %v2_10008ea8 = load i8, i8* %.pre, align 1
  %v1_10008eac = add i32 %v0_10008eac, 1
  %v1_10008eb0 = add i32 %v0_10008eb0, 1
  %v3_10008eb4 = icmp eq i8 %v2_10008ea8, 0
  br i1 %v3_10008eb4, label %dec_label_pc_10008ebc, label %dec_label_pc_10008e80

dec_label_pc_10008ebc:                            ; preds = %dec_label_pc_10008ea8, %dec_label_pc_10008e88
  %v0_10008ebc = phi i32 [ %v0_10008ebc7, %dec_label_pc_10008ea8 ], [ %v2_10008ea0, %dec_label_pc_10008e88 ]
  ret i32 %v0_10008ebc

; uselistorder directives
  uselistorder i32 %v2_10008ea0, { 1, 0 }
  uselistorder i32 %v0_10008eb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008ea8, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008ec4 = load i32, i32* @r4, align 4
  %v3_10008ec4 = icmp eq i32 %v0_10008ec4, 1
  %v0_10008ed4 = load i32, i32* @r3, align 4
  store i32 %v0_10008ed4, i32* @r27, align 4
  %v0_10008edc = load i32, i32* @r5, align 4
  store i32 %v0_10008edc, i32* @r31, align 4
  br i1 %v3_10008ec4, label %dec_label_pc_10008f00, label %dec_label_pc_10008ee4

dec_label_pc_10008ee4:                            ; preds = %entry
  %v3_10008ee4 = icmp eq i32 %v0_10008ec4, 2
  br i1 %v3_10008ee4, label %dec_label_pc_10008f20, label %dec_label_pc_10008eec

dec_label_pc_10008eec:                            ; preds = %dec_label_pc_10008ee4
  %v3_10008eec = icmp eq i32 %v0_10008ec4, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10008eec, label %dec_label_pc_10008f28, label %dec_label_pc_10008f0c

dec_label_pc_10008f00:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10008f28

dec_label_pc_10008f0c:                            ; preds = %dec_label_pc_10008eec
  %v0_10008f0c = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_10008f18 = inttoptr i32 %v0_10008f0c to i32*
  store i32 22, i32* %v2_10008f18, align 4
  br label %dec_label_pc_10009010

dec_label_pc_10008f20:                            ; preds = %dec_label_pc_10008ee4
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10008f28

dec_label_pc_10008f28:                            ; preds = %dec_label_pc_10008eec, %dec_label_pc_10008f00, %dec_label_pc_10008f20
  %v1_10008f28 = inttoptr i32 %v0_10008edc to i32*
  %v2_10008f28 = load i32, i32* %v1_10008f28, align 4
  store i32 19, i32* @r5, align 4
  %v1_10008f30 = add i32 %v0_10008edc, 4
  %v2_10008f30 = inttoptr i32 %v1_10008f30 to i32*
  %v3_10008f30 = load i32, i32* %v2_10008f30, align 4
  store i32 %v3_10008f30, i32* %r9.global-to-local, align 4
  %v1_10008f34 = add i32 %v0_10008edc, 17
  store i32 %v1_10008f34, i32* @r4, align 4
  %v1_10008f38 = add i32 %v0_10008edc, 8
  %v2_10008f38 = inttoptr i32 %v1_10008f38 to i32*
  %v3_10008f38 = load i32, i32* %v2_10008f38, align 4
  %v2_10008f3c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008f3c, i32* @r3, align 4
  %v2_10008f44 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10008f44, i32* @r26, align 4
  store i32 %v2_10008f28, i32* %stack_var_-72, align 4
  store i32 268472180, i32* @lr, align 4
  %v0_10008f70 = call i32 @memcpy()
  %v0_10008f74 = load i32, i32* @r27, align 4
  %v0_10008f78 = load i32, i32* @r30, align 4
  store i32 %v2_10008f44, i32* @r5, align 4
  store i32 268472200, i32* @lr, align 4
  %v3_10008f84 = call i32 @ioctl(i32 %v0_10008f74, i32 %v0_10008f78)
  store i32 %v3_10008f84, i32* @r28, align 4
  %v3_10008f88 = icmp eq i32 %v3_10008f84, 0
  br i1 %v3_10008f88, label %dec_label_pc_10008f90, label %dec_label_pc_10009010

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008f28
  %v0_10008f90 = load i32, i32* @r30, align 4
  %v3_10008f94 = icmp eq i32 %v0_10008f90, -2144570348
  br i1 %v3_10008f94, label %dec_label_pc_10008f9c, label %dec_label_pc_1000900c

dec_label_pc_10008f9c:                            ; preds = %dec_label_pc_10008f90
  %v0_10008f9c = call i32 @__errno_location()
  store i32 %v0_10008f9c, i32* @r29, align 4
  %v0_10008fac = load i32, i32* @r27, align 4
  store i32 %v2_10008f44, i32* @r5, align 4
  %v1_10008fb4 = inttoptr i32 %v0_10008f9c to i32*
  %v2_10008fb4 = load i32, i32* %v1_10008fb4, align 4
  store i32 %v2_10008fb4, i32* @r30, align 4
  store i32 268472256, i32* @lr, align 4
  %v3_10008fbc = call i32 @ioctl(i32 %v0_10008fac, i32 1076655123)
  %v3_10008fc0 = icmp eq i32 %v3_10008fbc, 0
  br i1 %v3_10008fc0, label %dec_label_pc_10008fd0, label %dec_label_pc_10008fc8

dec_label_pc_10008fc8:                            ; preds = %dec_label_pc_10008f9c
  %v0_10008fc8 = load i32, i32* @r30, align 4
  %v1_10008fc8 = load i32, i32* @r29, align 4
  %v2_10008fc8 = inttoptr i32 %v1_10008fc8 to i32*
  store i32 %v0_10008fc8, i32* %v2_10008fc8, align 4
  br label %dec_label_pc_10009010

dec_label_pc_10008fd0:                            ; preds = %dec_label_pc_10008f9c
  %v0_10008fd0 = load i32, i32* @r31, align 4
  %v1_10008fd0 = add i32 %v0_10008fd0, 8
  %v2_10008fd0 = inttoptr i32 %v1_10008fd0 to i32*
  %v3_10008fd0 = load i32, i32* %v2_10008fd0, align 4
  %v1_10008fd8 = call i32 @__asm_rlwinm(i32 %v3_10008fd0, i32 0, i32 19, i32 20)
  %v1_10008fdc = call i32 @__asm_rlwinm(i32 %v3_10008f38, i32 0, i32 19, i32 20)
  store i32 %v1_10008fdc, i32* %r9.global-to-local, align 4
  %v4_10008fe0 = icmp eq i32 %v1_10008fd8, %v1_10008fdc
  br i1 %v4_10008fe0, label %dec_label_pc_10008fe8, label %dec_label_pc_10008ffc

dec_label_pc_10008fe8:                            ; preds = %dec_label_pc_10008fd0
  %v1_10008fe8 = and i32 %v3_10008fd0, 768
  store i32 %v1_10008fe8, i32* %r9.global-to-local, align 4
  %v3_10008fe8 = icmp eq i32 %v1_10008fe8, 0
  br i1 %v3_10008fe8, label %dec_label_pc_1000900c, label %dec_label_pc_10008ff0

dec_label_pc_10008ff0:                            ; preds = %dec_label_pc_10008fe8
  %v1_10008ff0 = call i32 @__asm_rlwinm(i32 %v3_10008f38, i32 0, i32 22, i32 23)
  %v0_10008ff4 = load i32, i32* %r9.global-to-local, align 4
  %v4_10008ff4 = icmp eq i32 %v0_10008ff4, %v1_10008ff0
  br i1 %v4_10008ff4, label %dec_label_pc_1000900c, label %dec_label_pc_10008ffc

dec_label_pc_10008ffc:                            ; preds = %dec_label_pc_10008fd0, %dec_label_pc_10008ff0
  store i32 -1, i32* @r28, align 4
  %v1_10009004 = load i32, i32* @r29, align 4
  %v2_10009004 = inttoptr i32 %v1_10009004 to i32*
  store i32 22, i32* %v2_10009004, align 4
  br label %dec_label_pc_10009010

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10008f90, %dec_label_pc_10008ff0, %dec_label_pc_10008fe8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009010

dec_label_pc_10009010:                            ; preds = %dec_label_pc_10008f28, %dec_label_pc_10008ffc, %dec_label_pc_10008fc8, %dec_label_pc_10008f0c, %dec_label_pc_1000900c
  %v0_10009014 = load i32, i32* @r28, align 4
  ret i32 %v0_10009014

; uselistorder directives
  uselistorder i32 %v0_10008edc, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 (i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder i32 19, { 4, 5, 6, 1, 2, 0, 7, 3 }
  uselistorder label %dec_label_pc_10009010, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000900c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10008f28, { 2, 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000902c = load i32, i32* @lr, align 4
  store i32 %v0_1000902c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10009038 = load i32, i32* @r4, align 4
  store i32 %v0_10009038, i32* @r29, align 4
  %v0_1000903c = load i32, i32* @r5, align 4
  store i32 %v0_1000903c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_100090a813 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_100090a813, label %dec_label_pc_100090c4, label %dec_label_pc_100090b8

dec_label_pc_1000904c:                            ; preds = %dec_label_pc_100090b8
  store i32 268472400, i32* @lr, align 4
  %v3_1000904c = call i32 @__GI_strchr(i32 %v0_100090b814, i32 46)
  store i32 %v3_1000904c, i32* @r30, align 4
  %v3_10009050 = icmp eq i32 %v3_1000904c, 0
  %v0_10009054 = load i32, i32* @r31, align 4
  store i32 %v0_10009054, i32* @r3, align 4
  %v2_10009058 = sub i32 %v3_1000904c, %v0_10009054
  store i32 %v2_10009058, i32* %r0.global-to-local, align 4
  br i1 %v3_10009050, label %dec_label_pc_10009060, label %dec_label_pc_10009068

dec_label_pc_10009060:                            ; preds = %dec_label_pc_1000904c
  %v0_10009060 = call i32 @__GI_strlen()
  store i32 %v0_10009060, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_10009060, 16777216
  %v1_10009064 = sdiv i32 %sext, 16777216
  store i32 %v1_10009064, i32* %r0.global-to-local, align 4
  %v0_10009078.pre = load i32, i32* @r31, align 4
  %v0_10009088.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009068

dec_label_pc_10009068:                            ; preds = %dec_label_pc_1000904c, %dec_label_pc_10009060
  %v0_10009088 = phi i32 [ %v3_1000904c, %dec_label_pc_1000904c ], [ %v0_10009088.pre, %dec_label_pc_10009060 ]
  %v0_10009078 = phi i32 [ %v0_10009054, %dec_label_pc_1000904c ], [ %v0_10009078.pre, %dec_label_pc_10009060 ]
  %v0_10009094 = phi i32 [ %v2_10009058, %dec_label_pc_1000904c ], [ %v1_10009064, %dec_label_pc_10009060 ]
  %v0_1000906c = load i32, i32* @r28, align 4
  %v1_1000906c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000906c = sub i32 %v1_1000906c, %v0_1000906c
  %v1_10009070 = add i32 %v0_1000906c, 1
  store i32 %v1_10009070, i32* %r11.global-to-local, align 4
  %v1_10009074 = add i32 %v2_1000906c, -1
  store i32 %v0_10009078, i32* @r4, align 4
  %v0_1000907c = load i32, i32* @r29, align 4
  %v2_1000907c = add i32 %v0_1000907c, %v1_10009070
  store i32 %v2_1000907c, i32* @r3, align 4
  store i32 %v0_10009094, i32* @r5, align 4
  %v2_10009084 = icmp ult i32 %v0_10009094, %v1_10009074
  %v1_10009088 = add i32 %v0_10009088, 1
  store i32 %v1_10009088, i32* @r31, align 4
  %v3_10009068.not = icmp ne i32 %v0_10009094, 0
  %or.cond = and i1 %v2_10009084, %v3_10009068.not
  br i1 %or.cond, label %dec_label_pc_10009094, label %dec_label_pc_100090dc

dec_label_pc_10009094:                            ; preds = %dec_label_pc_10009068
  %v3_10009094 = trunc i32 %v0_10009094 to i8
  %v4_10009094 = add i32 %v0_1000907c, %v0_1000906c
  %v5_10009094 = inttoptr i32 %v4_10009094 to i8*
  store i8 %v3_10009094, i8* %v5_10009094, align 1
  %v0_10009098 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009098 = load i32, i32* %r0.global-to-local, align 4
  %v2_10009098 = add i32 %v1_10009098, %v0_10009098
  store i32 %v2_10009098, i32* @r28, align 4
  store i32 268472480, i32* @lr, align 4
  %v0_1000909c = call i32 @memcpy()
  store i32 %v0_1000909c, i32* %r3.global-to-local, align 4
  %v0_100090a0 = load i32, i32* @r30, align 4
  %v3_100090a0 = icmp eq i32 %v0_100090a0, 0
  br i1 %v3_100090a0, label %dec_label_pc_100090c4, label %dec_label_pc_10009094.dec_label_pc_100090a8_crit_edge

dec_label_pc_10009094.dec_label_pc_100090a8_crit_edge: ; preds = %dec_label_pc_10009094
  %v0_100090a8.pre = load i32, i32* @r31, align 4
  %v3_100090a8 = icmp eq i32 %v0_100090a8.pre, 0
  store i32 %v0_100090a8.pre, i32* @r3, align 4
  br i1 %v3_100090a8, label %dec_label_pc_100090c4, label %dec_label_pc_100090b8

dec_label_pc_100090b8:                            ; preds = %entry, %dec_label_pc_10009094.dec_label_pc_100090a8_crit_edge
  %v0_100090b814 = phi i32 [ %v0_100090a8.pre, %dec_label_pc_10009094.dec_label_pc_100090a8_crit_edge ], [ %tmp, %entry ]
  %v1_100090b8 = inttoptr i32 %v0_100090b814 to i8*
  %v2_100090b8 = load i8, i8* %v1_100090b8, align 1
  %v3_100090b8 = zext i8 %v2_100090b8 to i32
  store i32 %v3_100090b8, i32* %r0.global-to-local, align 4
  %v3_100090bc = icmp eq i8 %v2_100090b8, 0
  br i1 %v3_100090bc, label %dec_label_pc_100090c4, label %dec_label_pc_1000904c

dec_label_pc_100090c4:                            ; preds = %dec_label_pc_10009094, %dec_label_pc_10009094.dec_label_pc_100090a8_crit_edge, %dec_label_pc_100090b8, %entry
  %v0_100090c4 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_100090c4, 1
  br i1 %tmp10, label %dec_label_pc_100090dc, label %dec_label_pc_100090cc

dec_label_pc_100090cc:                            ; preds = %dec_label_pc_100090c4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100090d0 = load i32, i32* @r28, align 4
  %v1_100090d0 = add i32 %v0_100090d0, 1
  store i32 %v1_100090d0, i32* %r3.global-to-local, align 4
  %v1_100090d4 = load i32, i32* @r29, align 4
  %v4_100090d4 = add i32 %v1_100090d4, %v0_100090d0
  %v5_100090d4 = inttoptr i32 %v4_100090d4 to i8*
  store i8 0, i8* %v5_100090d4, align 1
  %v0_100090f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100090e0

dec_label_pc_100090dc:                            ; preds = %dec_label_pc_10009068, %dec_label_pc_100090c4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100090e0

dec_label_pc_100090e0:                            ; preds = %dec_label_pc_100090cc, %dec_label_pc_100090dc
  %v0_100090f0 = phi i32 [ %v0_100090f0.pre, %dec_label_pc_100090cc ], [ -1, %dec_label_pc_100090dc ]
  store i32 %v0_1000902c, i32* %r0.global-to-local, align 4
  ret i32 %v0_100090f0

; uselistorder directives
  uselistorder i32 %v0_100090b814, { 1, 0 }
  uselistorder i32 %v0_100090a8.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10009094, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10009064, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 5, 4, 6, 1 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 1, 14, 13, 12, 15, 11, 10, 3, 2, 9, 8, 7, 5, 6, 4, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 46, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_100090e0, { 1, 0 }
  uselistorder label %dec_label_pc_100090dc, { 1, 0 }
  uselistorder label %dec_label_pc_100090c4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100090b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009068, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_100090f8 = call i32 @__asm_mfcr()
  store i32 %v0_100090f8, i32* @r26, align 4
  %v3_10009104 = icmp eq i32 %v0_100090f8, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_10009114 = load i32, i32* @r6, align 4
  store i32 %v0_10009114, i32* @r24, align 4
  br i1 %v3_10009104, label %dec_label_pc_100091cc, label %dec_label_pc_1000911c

dec_label_pc_1000911c:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100091a814 = load i32, i32* @r4, align 4
  %v2_100091a815 = add i32 %v1_100091a814, %v0_100090f8
  %v3_100091a816 = inttoptr i32 %v2_100091a815 to i8*
  %v4_100091a817 = load i8, i8* %v3_100091a816, align 1
  %v5_100091a818 = zext i8 %v4_100091a817 to i32
  store i32 %v5_100091a818, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_100091b020 = icmp eq i8 %v4_100091a817, 0
  br i1 %v3_100091b020, label %dec_label_pc_100091bc, label %dec_label_pc_1000912c

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_1000911c, %dec_label_pc_100091a4
  %v3_100091ac22 = phi i1 [ %v3_100091ac, %dec_label_pc_100091a4 ], [ false, %dec_label_pc_1000911c ]
  %v5_100091a821 = phi i32 [ %v5_100091a8, %dec_label_pc_100091a4 ], [ %v5_100091a818, %dec_label_pc_1000911c ]
  br i1 %v3_100091ac22, label %dec_label_pc_10009134, label %dec_label_pc_10009130

dec_label_pc_10009130:                            ; preds = %dec_label_pc_1000912c
  %v0_10009130 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009130 = add i32 %v0_10009130, 1
  store i32 %v1_10009130, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10009134

dec_label_pc_10009134:                            ; preds = %dec_label_pc_1000912c, %dec_label_pc_10009130
  %v1_10009134 = call i32 @__asm_rlwinm(i32 %v5_100091a821, i32 0, i32 24, i32 25)
  %v0_10009138 = load i32, i32* @r4, align 4
  %v1_10009138 = add i32 %v0_10009138, 1
  store i32 %v1_10009138, i32* @r30, align 4
  %v3_1000913c = icmp eq i32 %v1_10009134, 192
  br i1 %v3_1000913c, label %dec_label_pc_10009144, label %dec_label_pc_10009164

dec_label_pc_10009144:                            ; preds = %dec_label_pc_10009134
  %v0_10009144 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10009144, label %dec_label_pc_1000914c, label %dec_label_pc_10009148

dec_label_pc_10009148:                            ; preds = %dec_label_pc_10009144
  %v0_10009148 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009148 = add i32 %v0_10009148, 1
  store i32 %v1_10009148, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000914c

dec_label_pc_1000914c:                            ; preds = %dec_label_pc_10009144, %dec_label_pc_10009148
  %v0_1000914c = load i32, i32* @r26, align 4
  %v2_1000914c = add i32 %v0_1000914c, %v1_10009138
  %v3_1000914c = inttoptr i32 %v2_1000914c to i8*
  %v4_1000914c = load i8, i8* %v3_1000914c, align 1
  %v5_1000914c = zext i8 %v4_1000914c to i32
  %v1_10009150 = call i32 @__asm_rlwinm(i32 %v5_100091a821, i32 8, i32 18, i32 23)
  %v0_10009154 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009154, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000915c = or i32 %v5_1000914c, %v1_10009150
  store i32 %v2_1000915c, i32* @r4, align 4
  br label %dec_label_pc_100091a4

dec_label_pc_10009164:                            ; preds = %dec_label_pc_10009134
  %v0_10009164 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009164 = add i32 %v0_10009164, %v5_100091a821
  store i32 %v2_10009164, i32* @r29, align 4
  %v1_10009168 = add i32 %v2_10009164, 1
  store i32 %v1_10009168, i32* @r28, align 4
  %v1_1000916c = load i32, i32* @r24, align 4
  %v2_1000916c = icmp ult i32 %v1_10009168, %v1_1000916c
  br i1 %v2_1000916c, label %dec_label_pc_10009174, label %dec_label_pc_100091cc

dec_label_pc_10009174:                            ; preds = %dec_label_pc_10009164
  %v0_10009174 = load i32, i32* @r26, align 4
  %v2_10009174 = add i32 %v0_10009174, %v1_10009138
  store i32 %v2_10009174, i32* @r4, align 4
  %v0_10009178 = load i32, i32* @r25, align 4
  %v2_10009178 = add i32 %v0_10009178, %v0_10009164
  store i32 %v2_10009178, i32* @r3, align 4
  store i32 %v5_100091a821, i32* @r5, align 4
  store i32 268472708, i32* @lr, align 4
  %v0_10009180 = call i32 @memcpy()
  %v0_10009184 = load i32, i32* @r30, align 4
  %v2_10009184 = add i32 %v0_10009184, %v5_100091a821
  store i32 %v2_10009184, i32* @r4, align 4
  %v0_10009188 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10009188, label %dec_label_pc_10009190, label %dec_label_pc_1000918c

dec_label_pc_1000918c:                            ; preds = %dec_label_pc_10009174
  %v0_1000918c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000918c = add i32 %v0_1000918c, %v5_100091a821
  store i32 %v2_1000918c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10009190

dec_label_pc_10009190:                            ; preds = %dec_label_pc_10009174, %dec_label_pc_1000918c
  %v0_10009190 = load i32, i32* @r26, align 4
  %v2_10009190 = add i32 %v0_10009190, %v2_10009184
  %v3_10009190 = inttoptr i32 %v2_10009190 to i8*
  %v4_10009190 = load i8, i8* %v3_10009190, align 1
  %v3_10009194 = icmp eq i8 %v4_10009190, 0
  br i1 %v3_10009194, label %dec_label_pc_100091a0, label %dec_label_pc_1000919c

dec_label_pc_1000919c:                            ; preds = %dec_label_pc_10009190
  br label %dec_label_pc_100091a0

dec_label_pc_100091a0:                            ; preds = %dec_label_pc_10009190, %dec_label_pc_1000919c
  %v0_100091a0.off0 = phi i8 [ 0, %dec_label_pc_10009190 ], [ 46, %dec_label_pc_1000919c ]
  %v1_100091a0 = load i32, i32* @r25, align 4
  %v2_100091a0 = load i32, i32* @r29, align 4
  %v4_100091a0 = add i32 %v2_100091a0, %v1_100091a0
  %v5_100091a0 = inttoptr i32 %v4_100091a0 to i8*
  store i8 %v0_100091a0.off0, i8* %v5_100091a0, align 1
  %v0_100091a4.pre = load i32, i32* @r28, align 4
  %v0_100091ac.pre.pre = load i32, i32* @r23, align 4
  %v1_100091a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100091a4

dec_label_pc_100091a4:                            ; preds = %dec_label_pc_1000914c, %dec_label_pc_100091a0
  %v1_100091a8 = phi i32 [ %v2_1000915c, %dec_label_pc_1000914c ], [ %v1_100091a8.pre, %dec_label_pc_100091a0 ]
  %v0_100091ac.pre = phi i32 [ 0, %dec_label_pc_1000914c ], [ %v0_100091ac.pre.pre, %dec_label_pc_100091a0 ]
  %v0_100091a4 = phi i32 [ %v0_10009154, %dec_label_pc_1000914c ], [ %v0_100091a4.pre, %dec_label_pc_100091a0 ]
  %v0_100091a8.pre = load i32, i32* @r26, align 4
  store i32 %v0_100091a4, i32* %r11.global-to-local, align 4
  %v2_100091a8 = add i32 %v1_100091a8, %v0_100091a8.pre
  %v3_100091a8 = inttoptr i32 %v2_100091a8 to i8*
  %v4_100091a8 = load i8, i8* %v3_100091a8, align 1
  %v5_100091a8 = zext i8 %v4_100091a8 to i32
  store i32 %v5_100091a8, i32* @r31, align 4
  %v3_100091ac = icmp eq i32 %v0_100091ac.pre, 0
  store i1 %v3_100091ac, i1* %cr4_eq.global-to-local, align 1
  %v3_100091b0 = icmp eq i8 %v4_100091a8, 0
  br i1 %v3_100091b0, label %dec_label_pc_100091b8, label %dec_label_pc_1000912c

dec_label_pc_100091b8:                            ; preds = %dec_label_pc_100091a4
  %v0_100091c0.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_100091ac, label %dec_label_pc_100091cc, label %dec_label_pc_100091bc

dec_label_pc_100091bc:                            ; preds = %dec_label_pc_1000911c, %dec_label_pc_100091b8
  %v0_100091c0.pre26 = phi i32 [ %v0_100091c0.pre.pre, %dec_label_pc_100091b8 ], [ 0, %dec_label_pc_1000911c ]
  %v1_100091bc = add i32 %v0_100091c0.pre26, 1
  store i32 %v1_100091bc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %dec_label_pc_10009164, %dec_label_pc_100091b8, %dec_label_pc_100091bc, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_100091bc, %dec_label_pc_100091bc ], [ %v0_100091c0.pre.pre, %dec_label_pc_100091b8 ], [ -1, %dec_label_pc_10009164 ]
  %v1_100091dc = call %0 @__asm_mtcrf(i32 8, i32 %v0_100090f8)
  %v9_100091dc = extractvalue %0 %v1_100091dc, 7
  store i4 %v9_100091dc, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_100091c0.pre.pre, { 1, 0 }
  uselistorder i1 %v3_100091ac, { 0, 2, 1 }
  uselistorder i32 %v5_100091a8, { 1, 0 }
  uselistorder i32 %v5_100091a821, { 5, 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_100090f8, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i8 46, { 0, 3, 1, 2, 4 }
  uselistorder i32 23, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 18, { 1, 0, 2, 3, 4 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r25, { 7, 8, 9, 0, 1, 2, 3, 4, 11, 12, 10, 13, 5, 6, 14, 15, 27, 28, 16, 17, 18, 19, 20, 21, 22, 29, 30, 23, 24, 25, 26 }
  uselistorder label %dec_label_pc_100091cc, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100091bc, { 1, 0 }
  uselistorder label %dec_label_pc_100091a4, { 1, 0 }
  uselistorder label %dec_label_pc_100091a0, { 1, 0 }
  uselistorder label %dec_label_pc_10009190, { 1, 0 }
  uselistorder label %dec_label_pc_1000914c, { 1, 0 }
  uselistorder label %dec_label_pc_10009134, { 1, 0 }
  uselistorder label %dec_label_pc_1000912c, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_100091e8 = load i32, i32* @r3, align 4
  store i32 %v0_100091e8, i32* %r11.global-to-local, align 4
  %v3_100091e8 = icmp eq i32 %v0_100091e8, 0
  %v0_100091f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100091e8, i32 %v0_100091f0)
  %v0_10009200 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000920c

dec_label_pc_100091f8:                            ; preds = %dec_label_pc_10009208
  %v1_100091f8 = add i32 %v1_1000920c, 2
  br label %dec_label_pc_10009228

dec_label_pc_10009208:                            ; preds = %dec_label_pc_1000920c
  %v2_10009220 = add i32 %v1_10009210, %v5_1000920c
  %v3_1000921c = icmp eq i32 %v1_10009218, 192
  br i1 %v3_1000921c, label %dec_label_pc_100091f8, label %dec_label_pc_1000920c

dec_label_pc_1000920c:                            ; preds = %dec_label_pc_10009208, %entry
  %v1_1000920c = phi i32 [ %v2_10009220, %dec_label_pc_10009208 ], [ %v0_10009200, %entry ]
  %v0_1000920c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000920c = add i32 %v0_1000920c, %v1_1000920c
  %v3_1000920c = inttoptr i32 %v2_1000920c to i8*
  %v4_1000920c = load i8, i8* %v3_1000920c, align 1
  %v5_1000920c = zext i8 %v4_1000920c to i32
  %v1_10009210 = add i32 %v1_1000920c, 1
  %v3_10009214 = icmp eq i8 %v4_1000920c, 0
  %v1_10009218 = call i32 @__asm_rlwinm(i32 %v5_1000920c, i32 0, i32 24, i32 25)
  br i1 %v3_10009214, label %dec_label_pc_10009228, label %dec_label_pc_10009208

dec_label_pc_10009228:                            ; preds = %dec_label_pc_1000920c, %dec_label_pc_100091f8
  %v1_10009228 = phi i32 [ %v1_100091f8, %dec_label_pc_100091f8 ], [ %v1_10009210, %dec_label_pc_1000920c ]
  %v0_10009228 = load i32, i32* @r4, align 4
  %v2_10009228 = sub i32 %v1_10009228, %v0_10009228
  ret i32 %v2_10009228

; uselistorder directives
  uselistorder i32 %v1_10009210, { 1, 0 }
  uselistorder i32 %v5_1000920c, { 1, 0 }
  uselistorder i32 %v1_1000920c, { 2, 1, 0 }
  uselistorder i32 %v0_100091e8, { 1, 0 }
  uselistorder i32 25, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 192, { 1, 2, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10009230 = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_1000924c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1000924c, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10009230, label %dec_label_pc_10009258, label %dec_label_pc_10009260

dec_label_pc_10009258:                            ; preds = %entry
  %v2_10009258 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009258, i32* @r3, align 4
  br label %dec_label_pc_10009260

dec_label_pc_10009260:                            ; preds = %entry, %dec_label_pc_10009258
  %v0_10009264 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_10009258 ]
  %v2_10009260 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_10009264, i32* %stack_var_-40, align 4
  store i32 %v2_10009260, i32* %stack_var_-36, align 4
  store i32 268472944, i32* @lr, align 4
  %v0_1000926c = call i32 @__GI_wcsnrtombs()
  %v3_10009270 = icmp eq i32 %v0_1000926c, 0
  br i1 %v3_10009270, label %dec_label_pc_10009278, label %dec_label_pc_1000927c

dec_label_pc_10009278:                            ; preds = %dec_label_pc_10009260
  br label %dec_label_pc_1000927c

dec_label_pc_1000927c:                            ; preds = %dec_label_pc_10009260, %dec_label_pc_10009278
  %v0_10009288 = phi i32 [ %v0_1000926c, %dec_label_pc_10009260 ], [ 1, %dec_label_pc_10009278 ]
  ret i32 %v0_10009288

; uselistorder directives
  uselistorder label %dec_label_pc_1000927c, { 1, 0 }
  uselistorder label %dec_label_pc_10009260, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_10009290 = load i32, i32* @r5, align 4
  store i32 %v0_10009290, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10009298 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_10009298

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000929c = load i32, i32* @r3, align 4
  %v3_1000929c = icmp eq i32 %v0_1000929c, 0
  %v0_100092a0 = load i32, i32* @lr, align 4
  store i32 %v0_100092a0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000929c, label %dec_label_pc_100092c8, label %dec_label_pc_100092b0

dec_label_pc_100092b0:                            ; preds = %entry
  %v1_100092b0 = load i32, i32* @r4, align 4
  %v4_100092b0 = icmp eq i32 %v0_1000929c, %v1_100092b0
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_100092b0, label %dec_label_pc_100092bc, label %dec_label_pc_100092f4

dec_label_pc_100092bc:                            ; preds = %dec_label_pc_100092b0
  %v2_100092c0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100092c0, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092f4

dec_label_pc_100092c8:                            ; preds = %entry
  %v2_100092c011 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100092c011, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_100092f4

dec_label_pc_100092d4:                            ; preds = %dec_label_pc_10009334.dec_label_pc_10009314_crit_edge, %dec_label_pc_10009314.preheader
  %v0_100092d4 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_100092e0 = inttoptr i32 %v0_100092d4 to i32*
  store i32 84, i32* %v2_100092e0, align 4
  %v0_10009358.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009354

dec_label_pc_100092e8:                            ; preds = %dec_label_pc_10009324
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10009344.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009340

dec_label_pc_100092f4:                            ; preds = %dec_label_pc_100092bc, %dec_label_pc_100092b0, %dec_label_pc_100092c8
  %v2_100093247 = phi i32 [ %v2_100092c0, %dec_label_pc_100092bc ], [ %v0_1000929c, %dec_label_pc_100092b0 ], [ %v2_100092c011, %dec_label_pc_100092c8 ]
  %v0_100092f4 = load i32, i32* @r5, align 4
  %v1_100092f4 = load i32, i32* @r6, align 4
  %v3_100092f4 = icmp ugt i32 %v0_100092f4, %v1_100092f4
  br i1 %v3_100092f4, label %dec_label_pc_100092fc, label %dec_label_pc_10009300

dec_label_pc_100092fc:                            ; preds = %dec_label_pc_100092f4
  store i32 %v1_100092f4, i32* @r5, align 4
  br label %dec_label_pc_10009300

dec_label_pc_10009300:                            ; preds = %dec_label_pc_100092f4, %dec_label_pc_100092fc
  %v0_1000930c = phi i32 [ %v0_100092f4, %dec_label_pc_100092f4 ], [ %v1_100092f4, %dec_label_pc_100092fc ]
  %v1_10009300 = add i32 %v0_1000930c, 1
  store i32 %v1_10009300, i32* %r0.global-to-local, align 4
  %v0_10009304 = load i32, i32* @r4, align 4
  %v1_10009304 = inttoptr i32 %v0_10009304 to i32*
  %v2_10009304 = load i32, i32* %v1_10009304, align 4
  store i32 %v2_10009304, i32* %r11.global-to-local, align 4
  store i32 %v0_1000930c, i32* %r9.global-to-local, align 4
  store i32 %v0_1000930c, i32* %ctr.global-to-local, align 4
  %v2_1000933c3 = icmp eq i32 %v0_1000930c, 0
  br i1 %v2_1000933c3, label %dec_label_pc_10009340, label %dec_label_pc_10009314.preheader

dec_label_pc_10009314.preheader:                  ; preds = %dec_label_pc_10009300
  %v1_1000931416 = inttoptr i32 %v2_10009304 to i32*
  %v2_1000931417 = load i32, i32* %v1_1000931416, align 4
  store i32 %v2_1000931417, i32* %r0.global-to-local, align 4
  %v1_1000931818 = add i32 %v2_10009304, 4
  store i32 %v1_1000931818, i32* %r11.global-to-local, align 4
  %v2_1000931c20 = icmp ugt i32 %v2_1000931417, 127
  br i1 %v2_1000931c20, label %dec_label_pc_100092d4, label %dec_label_pc_10009324.lr.ph

dec_label_pc_10009324.lr.ph:                      ; preds = %dec_label_pc_10009314.preheader
  %extract.t = trunc i32 %v2_1000931417 to i8
  br label %dec_label_pc_10009324

dec_label_pc_10009324:                            ; preds = %dec_label_pc_10009324.lr.ph, %dec_label_pc_10009334.dec_label_pc_10009314_crit_edge
  %v2_1000931423.off0 = phi i8 [ %extract.t, %dec_label_pc_10009324.lr.ph ], [ %extract.t24, %dec_label_pc_10009334.dec_label_pc_10009314_crit_edge ]
  %v2_1000932422 = phi i32 [ %v2_100093247, %dec_label_pc_10009324.lr.ph ], [ %v2_10009334, %dec_label_pc_10009334.dec_label_pc_10009314_crit_edge ]
  %v3_10009324 = inttoptr i32 %v2_1000932422 to i8*
  store i8 %v2_1000931423.off0, i8* %v3_10009324, align 1
  %v0_10009328 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009328 = urem i32 %v0_10009328, 256
  store i32 %v1_10009328, i32* %r0.global-to-local, align 4
  %v3_1000932c = icmp eq i32 %v1_10009328, 0
  br i1 %v3_1000932c, label %dec_label_pc_100092e8, label %dec_label_pc_10009334

dec_label_pc_10009334:                            ; preds = %dec_label_pc_10009324
  %v0_10009334 = load i32, i32* @r3, align 4
  %v1_10009334 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009334 = add i32 %v1_10009334, %v0_10009334
  store i32 %v2_10009334, i32* @r3, align 4
  %v0_10009338 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009338 = add i32 %v0_10009338, -1
  store i32 %v1_10009338, i32* %r9.global-to-local, align 4
  %v0_1000933c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000933c = add i32 %v0_1000933c, -1
  store i32 %v1_1000933c, i32* %ctr.global-to-local, align 4
  %v2_1000933c = icmp eq i32 %v1_1000933c, 0
  br i1 %v2_1000933c, label %dec_label_pc_10009340, label %dec_label_pc_10009334.dec_label_pc_10009314_crit_edge

dec_label_pc_10009334.dec_label_pc_10009314_crit_edge: ; preds = %dec_label_pc_10009334
  %v0_10009314.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009314 = inttoptr i32 %v0_10009314.pre to i32*
  %v2_10009314 = load i32, i32* %v1_10009314, align 4
  store i32 %v2_10009314, i32* %r0.global-to-local, align 4
  %v1_10009318 = add i32 %v0_10009314.pre, 4
  store i32 %v1_10009318, i32* %r11.global-to-local, align 4
  %v2_1000931c = icmp ugt i32 %v2_10009314, 127
  %extract.t24 = trunc i32 %v2_10009314 to i8
  br i1 %v2_1000931c, label %dec_label_pc_100092d4, label %dec_label_pc_10009324

dec_label_pc_10009340:                            ; preds = %dec_label_pc_10009334, %dec_label_pc_10009300, %dec_label_pc_100092e8
  %v0_10009344 = phi i32 [ %v0_10009344.pre, %dec_label_pc_100092e8 ], [ %v2_100093247, %dec_label_pc_10009300 ], [ %v2_10009334, %dec_label_pc_10009334 ]
  %v2_10009340 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009340, i32* %r0.global-to-local, align 4
  %v4_10009344 = icmp eq i32 %v0_10009344, %v2_10009340
  br i1 %v4_10009344, label %dec_label_pc_10009350, label %dec_label_pc_1000934c

dec_label_pc_1000934c:                            ; preds = %dec_label_pc_10009340
  %v0_1000934c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000934c = load i32, i32* @r4, align 4
  %v2_1000934c = inttoptr i32 %v1_1000934c to i32*
  store i32 %v0_1000934c, i32* %v2_1000934c, align 4
  br label %dec_label_pc_10009350

dec_label_pc_10009350:                            ; preds = %dec_label_pc_10009340, %dec_label_pc_1000934c
  %v0_10009350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009350 = load i32, i32* @r5, align 4
  %v2_10009350 = sub i32 %v1_10009350, %v0_10009350
  store i32 %v2_10009350, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009354

dec_label_pc_10009354:                            ; preds = %dec_label_pc_100092d4, %dec_label_pc_10009350
  %v0_10009358 = phi i32 [ %v0_10009358.pre, %dec_label_pc_100092d4 ], [ %v2_10009350, %dec_label_pc_10009350 ]
  store i32 %v0_100092a0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009358

; uselistorder directives
  uselistorder i32 %v1_1000933c, { 1, 0 }
  uselistorder i32 %v2_10009334, { 0, 2, 1 }
  uselistorder i32 %v1_10009328, { 1, 0 }
  uselistorder i32 %v0_1000930c, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100093247, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 4, 5, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 7, 8, 5, 3, 6 }
  uselistorder i32 127, { 2, 0, 3, 1, 4 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009354, { 1, 0 }
  uselistorder label %dec_label_pc_10009350, { 1, 0 }
  uselistorder label %dec_label_pc_10009324, { 1, 0 }
  uselistorder label %dec_label_pc_10009300, { 1, 0 }
  uselistorder label %dec_label_pc_100092f4, { 2, 0, 1 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009374 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009380 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10009388 = and i16 %v3_10009380, 4
  %v3_10009388 = icmp eq i16 %v1_10009388, 0
  br i1 %v3_10009388, label %dec_label_pc_10009390, label %dec_label_pc_100093c8

dec_label_pc_10009390:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1000939c, label %dec_label_pc_10009394

dec_label_pc_10009394:                            ; preds = %dec_label_pc_10009390
  br label %dec_label_pc_1000939c

dec_label_pc_1000939c:                            ; preds = %dec_label_pc_10009390, %dec_label_pc_10009394
  %v1_1000939c = add i32 %tmp, 4
  %v2_1000939c = inttoptr i32 %v1_1000939c to i32*
  %v3_1000939c = load i32, i32* %v2_1000939c, align 4
  store i32 %v3_1000939c, i32* %r3.global-to-local, align 4
  store i32 268473252, i32* @lr, align 4
  %v1_100093a0 = call i32 @__libc_read(i32 %v3_1000939c)
  store i32 %v1_100093a0, i32* %r3.global-to-local, align 4
  %v2_100093a4 = icmp sgt i32 %v1_100093a0, 0
  br i1 %v2_100093a4, label %dec_label_pc_100093c8, label %dec_label_pc_100093ac

dec_label_pc_100093ac:                            ; preds = %dec_label_pc_1000939c
  %v3_100093a4 = icmp eq i32 %v1_100093a0, 0
  %v0_100093ac = load i32, i32* @r31, align 4
  %v1_100093ac = inttoptr i32 %v0_100093ac to i16*
  %v2_100093ac = load i16, i16* %v1_100093ac, align 2
  br i1 %v3_100093a4, label %dec_label_pc_100093b4, label %dec_label_pc_100093bc

dec_label_pc_100093b4:                            ; preds = %dec_label_pc_100093ac
  %v1_100093b4 = or i16 %v2_100093ac, 4
  br label %dec_label_pc_100093c4

dec_label_pc_100093bc:                            ; preds = %dec_label_pc_100093ac
  %v1_100093bc = or i16 %v2_100093ac, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100093c4

dec_label_pc_100093c4:                            ; preds = %dec_label_pc_100093b4, %dec_label_pc_100093bc
  %v1_100093b4.sink.off0 = phi i16 [ %v1_100093b4, %dec_label_pc_100093b4 ], [ %v1_100093bc, %dec_label_pc_100093bc ]
  store i16 %v1_100093b4.sink.off0, i16* %v1_100093ac, align 2
  %v0_100093d8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100093c8

dec_label_pc_100093c8:                            ; preds = %entry, %dec_label_pc_1000939c, %dec_label_pc_100093c4
  %v0_100093d8 = phi i32 [ 0, %entry ], [ %v1_100093a0, %dec_label_pc_1000939c ], [ %v0_100093d8.pre, %dec_label_pc_100093c4 ]
  store i32 %v0_10009374, i32* @r31, align 4
  ret i32 %v0_100093d8

; uselistorder directives
  uselistorder i16 %v2_100093ac, { 1, 0 }
  uselistorder i32 %v1_100093a0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder label %dec_label_pc_100093c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100093c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000939c, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_100093dc = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_100093f8 = load i16, i16* %arg3, align 2
  %v1_100093fc = and i16 %v3_100093f8, 512
  %v3_100093fc = icmp eq i16 %v1_100093fc, 0
  br i1 %v3_100093fc, label %dec_label_pc_10009404, label %dec_label_pc_10009510

dec_label_pc_10009404:                            ; preds = %entry
  %v2_10009404 = add i32 %tmp, 4
  %v3_10009404 = inttoptr i32 %v2_10009404 to i32*
  %v4_10009404 = load i32, i32* %v3_10009404, align 4
  %v2_10009408 = add i32 %tmp, 16
  %v3_10009408 = inttoptr i32 %v2_10009408 to i32*
  %v4_10009408 = load i32, i32* %v3_10009408, align 4
  store i32 %v4_10009408, i32* @r3, align 4
  %v3_1000940c = icmp eq i32 %v4_10009404, -2
  %v2_10009410 = add i32 %tmp, 12
  %v3_10009410 = inttoptr i32 %v2_10009410 to i32*
  %v4_10009410 = load i32, i32* %v3_10009410, align 4
  %v2_10009418 = sub i32 %v4_10009410, %v4_10009408
  br i1 %v3_1000940c, label %dec_label_pc_10009418, label %dec_label_pc_10009448

dec_label_pc_10009418:                            ; preds = %dec_label_pc_10009404
  %v3_10009420 = icmp ult i32 %v2_10009418, %arg2
  br i1 %v3_10009420, label %dec_label_pc_10009428, label %dec_label_pc_1000942c

dec_label_pc_10009428:                            ; preds = %dec_label_pc_10009418
  br label %dec_label_pc_1000942c

dec_label_pc_1000942c:                            ; preds = %dec_label_pc_10009418, %dec_label_pc_10009428
  %storemerge = phi i32 [ %v2_10009418, %dec_label_pc_10009428 ], [ %arg2, %dec_label_pc_10009418 ]
  %v0_10009430 = phi i32 [ %v2_10009418, %dec_label_pc_10009428 ], [ %arg2, %dec_label_pc_10009418 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10009430, i32* @r5, align 4
  store i32 268473400, i32* @lr, align 4
  %v0_10009434 = call i32 @memcpy()
  %v0_10009438 = load i32, i32* @r30, align 4
  %v1_10009438 = add i32 %v0_10009438, 16
  %v2_10009438 = inttoptr i32 %v1_10009438 to i32*
  %v3_10009438 = load i32, i32* %v2_10009438, align 4
  %v1_1000943c = load i32, i32* @r31, align 4
  %v2_1000943c = add i32 %v1_1000943c, %v3_10009438
  store i32 %v2_1000943c, i32* %v2_10009438, align 4
  br label %dec_label_pc_10009530

dec_label_pc_10009448:                            ; preds = %dec_label_pc_10009404
  %v3_1000944c = icmp ult i32 %v2_10009418, %arg2
  br i1 %v3_1000944c, label %dec_label_pc_100094ec, label %dec_label_pc_10009454

dec_label_pc_10009454:                            ; preds = %dec_label_pc_10009448
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268473440, i32* @lr, align 4
  %v0_1000945c = call i32 @memcpy()
  %v0_10009460 = load i32, i32* @r30, align 4
  %v1_10009460 = inttoptr i32 %v0_10009460 to i16*
  %v2_10009460 = load i16, i16* %v1_10009460, align 2
  %v1_10009464 = add i32 %v0_10009460, 16
  %v2_10009464 = inttoptr i32 %v1_10009464 to i32*
  %v3_10009464 = load i32, i32* %v2_10009464, align 4
  %v1_10009468 = and i16 %v2_10009460, 256
  %v3_10009468 = icmp eq i16 %v1_10009468, 0
  %v1_1000946c = load i32, i32* @r29, align 4
  %v2_1000946c = add i32 %v1_1000946c, %v3_10009464
  store i32 %v2_1000946c, i32* %v2_10009464, align 4
  br i1 %v3_10009468, label %dec_label_pc_10009530, label %dec_label_pc_10009478

dec_label_pc_10009478:                            ; preds = %dec_label_pc_10009454
  %v0_10009478 = load i32, i32* @r28, align 4
  %v0_10009480 = load i32, i32* @r29, align 4
  store i32 268473480, i32* @lr, align 4
  %v4_10009484 = call i32 @memrchr(i32 %v0_10009478, i32 10, i32 %v0_10009480, i32 %v2_1000946c)
  %v3_10009488 = icmp eq i32 %v4_10009484, 0
  br i1 %v3_10009488, label %dec_label_pc_10009530, label %dec_label_pc_10009490

dec_label_pc_10009490:                            ; preds = %dec_label_pc_10009478
  %v0_10009490 = load i32, i32* @r30, align 4
  store i32 %v0_10009490, i32* @r3, align 4
  store i32 268473496, i32* @lr, align 4
  %v0_10009494 = call i32 @__stdio_wcommit()
  %v3_10009498 = icmp eq i32 %v0_10009494, 0
  br i1 %v3_10009498, label %dec_label_pc_10009530, label %dec_label_pc_100094a0

dec_label_pc_100094a0:                            ; preds = %dec_label_pc_10009490
  %v0_100094a0 = load i32, i32* @r29, align 4
  %v3_100094a0 = icmp ugt i32 %v0_100094a0, %v0_10009494
  %v0_10009494.v0_100094a4 = select i1 %v3_100094a0, i32 %v0_10009494, i32 %v0_100094a0
  store i32 %v0_10009494.v0_100094a4, i32* @r31, align 4
  %v2_100094b0 = sub i32 %v0_100094a0, %v0_10009494.v0_100094a4
  %v0_100094b8 = load i32, i32* @r28, align 4
  %v2_100094b8 = add i32 %v0_100094b8, %v2_100094b0
  store i32 %v2_100094b8, i32* @r28, align 4
  store i32 %v2_100094b8, i32* @r3, align 4
  store i32 268473544, i32* @lr, align 4
  %v3_100094c4 = call i32 @__GI_memchr(i32 %v2_100094b8, i32 10, i32 %v0_10009494.v0_100094a4)
  %v3_100094c8 = icmp eq i32 %v3_100094c4, 0
  br i1 %v3_100094c8, label %dec_label_pc_10009530, label %dec_label_pc_100094d0

dec_label_pc_100094d0:                            ; preds = %dec_label_pc_100094a0
  %v0_100094d0 = load i32, i32* @r30, align 4
  %v1_100094d0 = add i32 %v0_100094d0, 16
  %v2_100094d0 = inttoptr i32 %v1_100094d0 to i32*
  %v3_100094d0 = load i32, i32* %v2_100094d0, align 4
  %v0_100094d4 = load i32, i32* @r28, align 4
  %v1_100094d4 = load i32, i32* @r31, align 4
  %v2_100094d4 = sub i32 %v0_100094d4, %v3_100094c4
  %v2_100094d8 = add i32 %v2_100094d4, %v1_100094d4
  %v2_100094dc = sub i32 %v3_100094d0, %v2_100094d8
  %v1_100094e0 = load i32, i32* @r29, align 4
  %v2_100094e0 = sub i32 %v1_100094e0, %v2_100094d8
  store i32 %v2_100094e0, i32* @r29, align 4
  store i32 %v2_100094dc, i32* %v2_100094d0, align 4
  br label %dec_label_pc_10009530

dec_label_pc_100094ec:                            ; preds = %dec_label_pc_10009448
  %v2_100094ec = add i32 %tmp, 8
  %v3_100094ec = inttoptr i32 %v2_100094ec to i32*
  %v4_100094ec = load i32, i32* %v3_100094ec, align 4
  %v4_100094f0 = icmp eq i32 %v4_10009408, %v4_100094ec
  br i1 %v4_100094f0, label %dec_label_pc_10009510, label %dec_label_pc_100094f8

dec_label_pc_100094f8:                            ; preds = %dec_label_pc_100094ec
  store i32 %tmp, i32* @r3, align 4
  store i32 268473600, i32* @lr, align 4
  %v0_100094fc = call i32 @__stdio_wcommit()
  %v3_10009500 = icmp eq i32 %v0_100094fc, 0
  br i1 %v3_10009500, label %dec_label_pc_100094f8.dec_label_pc_10009510_crit_edge, label %dec_label_pc_10009508

dec_label_pc_100094f8.dec_label_pc_10009510_crit_edge: ; preds = %dec_label_pc_100094f8
  %v0_10009514.pre = load i32, i32* @r30, align 4
  %v0_10009518.pre = load i32, i32* @r28, align 4
  %v0_1000951c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009510

dec_label_pc_10009508:                            ; preds = %dec_label_pc_100094f8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009530

dec_label_pc_10009510:                            ; preds = %dec_label_pc_100094f8.dec_label_pc_10009510_crit_edge, %entry, %dec_label_pc_100094ec
  %v0_1000951c = phi i32 [ %v0_1000951c.pre, %dec_label_pc_100094f8.dec_label_pc_10009510_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_100094ec ]
  %v0_10009518 = phi i32 [ %v0_10009518.pre, %dec_label_pc_100094f8.dec_label_pc_10009510_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_100094ec ]
  %v0_10009514 = phi i32 [ %v0_10009514.pre, %dec_label_pc_100094f8.dec_label_pc_10009510_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_100094ec ]
  %v1_10009514 = inttoptr i32 %v0_10009514 to i16*
  store i32 %v0_1000951c, i32* @r5, align 4
  store i32 %v0_100093dc, i32* @lr, align 4
  %v5_1000952c = call i32 @__stdio_WRITE(i16* %v1_10009514, i32 %v0_10009518)
  br label %dec_label_pc_10009530

dec_label_pc_10009530:                            ; preds = %dec_label_pc_100094a0, %dec_label_pc_10009490, %dec_label_pc_10009478, %dec_label_pc_10009454, %dec_label_pc_10009508, %dec_label_pc_100094d0, %dec_label_pc_1000942c, %dec_label_pc_10009510
  %v0_10009534 = load i32, i32* @r29, align 4
  ret i32 %v0_10009534

; uselistorder directives
  uselistorder i32 %v2_100094d8, { 1, 0 }
  uselistorder i32 %v0_10009494.v0_100094a4, { 0, 2, 1 }
  uselistorder i32 %v0_100094a0, { 1, 0, 2 }
  uselistorder i32 %v2_10009418, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 ()* @memcpy, { 17, 16, 6, 5, 4, 15, 14, 3, 13, 12, 11, 10, 18, 2, 1, 9, 8, 19, 0, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10009530, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10009510, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000942c, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009548 = load i32, i32* @lr, align 4
  store i32 %v0_10009548, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000955c = add i32 %arg1, 8
  %v2_1000955c = inttoptr i32 %v1_1000955c to i32*
  %v3_1000955c = load i32, i32* %v2_1000955c, align 4
  %v1_10009560 = add i32 %arg1, 12
  %v2_10009560 = inttoptr i32 %v1_10009560 to i32*
  %v3_10009560 = load i32, i32* %v2_10009560, align 4
  %v2_10009564 = sub i32 %v3_10009560, %v3_1000955c
  store i32 268473708, i32* @lr, align 4
  %v3_10009568 = inttoptr i32 %v3_1000955c to i16*
  %v4_10009568 = call i32 @__stdio_READ(i16* %v3_10009568, i32 %v2_10009564, i32 %v2_10009564)
  %v0_1000956c = load i32, i32* @r29, align 4
  %v1_1000956c = add i32 %v0_1000956c, 8
  %v2_1000956c = inttoptr i32 %v1_1000956c to i32*
  %v3_1000956c = load i32, i32* %v2_1000956c, align 4
  %v2_10009570 = add i32 %v3_1000956c, %v4_10009568
  store i32 %v2_10009570, i32* %r0.global-to-local, align 4
  %v2_10009574 = add i32 %v0_1000956c, 16
  %v3_10009574 = inttoptr i32 %v2_10009574 to i32*
  store i32 %v3_1000956c, i32* %v3_10009574, align 4
  %v0_10009578 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009578 = load i32, i32* @r29, align 4
  %v2_10009578 = add i32 %v1_10009578, 20
  %v3_10009578 = inttoptr i32 %v2_10009578 to i32*
  store i32 %v0_10009578, i32* %v3_10009578, align 4
  store i32 %v0_10009548, i32* %r0.global-to-local, align 4
  ret i32 %v4_10009568

; uselistorder directives
  uselistorder i32 %v3_1000956c, { 1, 0 }
  uselistorder i32 %v4_10009568, { 1, 0 }
  uselistorder i32 %v3_1000955c, { 1, 0 }
  uselistorder i32 (i16*, i32, i32)* @__stdio_READ, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10009598 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100095a4 = load i16, i16* %arg1, align 2
  %v4_100095a4 = zext i16 %v3_100095a4 to i32
  %v2_100095a8 = and i32 %v4_100095a4, %arg2
  %v5_100095a8 = icmp eq i32 %v2_100095a8, 0
  br i1 %v5_100095a8, label %dec_label_pc_100095b0, label %dec_label_pc_100095c0

dec_label_pc_100095b0:                            ; preds = %entry
  %v1_100095b0 = and i32 %v4_100095a4, 2176
  %v3_100095b0 = icmp eq i32 %v1_100095b0, 0
  br i1 %v3_100095b0, label %dec_label_pc_100095b8, label %dec_label_pc_100095cc

dec_label_pc_100095b8:                            ; preds = %dec_label_pc_100095b0
  %v2_100095b8 = or i32 %v4_100095a4, %arg2
  %v1_100095bc = trunc i32 %v2_100095b8 to i16
  store i16 %v1_100095bc, i16* %arg1, align 2
  %v0_100095c0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100095c0

dec_label_pc_100095c0:                            ; preds = %entry, %dec_label_pc_100095b8
  %v0_100095c0 = phi i32 [ %tmp, %entry ], [ %v0_100095c0.pre, %dec_label_pc_100095b8 ]
  %v1_100095c0 = inttoptr i32 %v0_100095c0 to i16*
  %v2_100095c0 = load i16, i16* %v1_100095c0, align 2
  %v3_100095c0 = zext i16 %v2_100095c0 to i32
  %v1_100095c4 = and i32 %v3_100095c0, 16
  %v3_100095c4 = icmp eq i32 %v1_100095c4, 0
  br i1 %v3_100095c4, label %dec_label_pc_100095e8, label %dec_label_pc_100095cc

dec_label_pc_100095cc:                            ; preds = %dec_label_pc_100095b0, %dec_label_pc_100095c0
  %v0_100095cc = call i32 @__errno_location()
  store i32 %v0_100095cc, i32* %r3.global-to-local, align 4
  %v2_100095d4 = inttoptr i32 %v0_100095cc to i32*
  store i32 9, i32* %v2_100095d4, align 4
  br label %dec_label_pc_100095d8

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_100095f0, %dec_label_pc_100095cc
  %v0_100095d8 = load i32, i32* @r31, align 4
  %v1_100095d8 = inttoptr i32 %v0_100095d8 to i16*
  %v2_100095d8 = load i16, i16* %v1_100095d8, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100095e0 = or i16 %v2_100095d8, 8
  br label %dec_label_pc_1000961c

dec_label_pc_100095e8:                            ; preds = %dec_label_pc_100095c0
  %v1_100095e8 = and i32 %v3_100095c0, 64
  %v3_100095e8 = icmp eq i32 %v1_100095e8, 0
  br i1 %v3_100095e8, label %dec_label_pc_10009610, label %dec_label_pc_100095f0

dec_label_pc_100095f0:                            ; preds = %dec_label_pc_100095e8
  store i32 268473844, i32* @lr, align 4
  %v0_100095f0 = call i32 @__stdio_wcommit()
  store i32 %v0_100095f0, i32* %r3.global-to-local, align 4
  %v3_100095f4 = icmp eq i32 %v0_100095f0, 0
  br i1 %v3_100095f4, label %dec_label_pc_100095fc, label %dec_label_pc_100095d8

dec_label_pc_100095fc:                            ; preds = %dec_label_pc_100095f0
  %v0_100095fc = load i32, i32* @r31, align 4
  %v1_100095fc = inttoptr i32 %v0_100095fc to i16*
  %v2_100095fc = load i16, i16* %v1_100095fc, align 2
  %v3_100095fc = zext i16 %v2_100095fc to i32
  %v1_10009600 = add i32 %v0_100095fc, 8
  %v2_10009600 = inttoptr i32 %v1_10009600 to i32*
  %v3_10009600 = load i32, i32* %v2_10009600, align 4
  %v1_10009604 = call i32 @__asm_rlwinm(i32 %v3_100095fc, i32 0, i32 26, i32 24)
  %v2_10009604 = trunc i32 %v1_10009604 to i16
  %v1_10009608 = load i32, i32* @r31, align 4
  %v2_10009608 = add i32 %v1_10009608, 28
  %v3_10009608 = inttoptr i32 %v2_10009608 to i32*
  store i32 %v3_10009600, i32* %v3_10009608, align 4
  %v3_1000960c = load i32, i32* @r31, align 4
  %v4_1000960c = inttoptr i32 %v3_1000960c to i16*
  store i16 %v2_10009604, i16* %v4_1000960c, align 2
  %v0_10009610.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009610

dec_label_pc_10009610:                            ; preds = %dec_label_pc_100095e8, %dec_label_pc_100095fc
  %v0_10009610 = phi i32 [ %v0_100095c0, %dec_label_pc_100095e8 ], [ %v0_10009610.pre, %dec_label_pc_100095fc ]
  %v1_10009610 = inttoptr i32 %v0_10009610 to i16*
  %v2_10009610 = load i16, i16* %v1_10009610, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10009618 = or i16 %v2_10009610, 1
  br label %dec_label_pc_1000961c

dec_label_pc_1000961c:                            ; preds = %dec_label_pc_100095d8, %dec_label_pc_10009610
  %v2_1000961c = phi i32 [ %v0_100095d8, %dec_label_pc_100095d8 ], [ %v0_10009610, %dec_label_pc_10009610 ]
  %storemerge.off0 = phi i16 [ %v1_100095e0, %dec_label_pc_100095d8 ], [ %v1_10009618, %dec_label_pc_10009610 ]
  %v3_1000961c = inttoptr i32 %v2_1000961c to i16*
  store i16 %storemerge.off0, i16* %v3_1000961c, align 2
  store i32 %v0_10009598, i32* @r31, align 4
  %v0_10009630 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009630

; uselistorder directives
  uselistorder i32 %v4_100095a4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder i32 26, { 2, 0, 3, 4, 1, 5, 6, 7, 8 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000961c, { 1, 0 }
  uselistorder label %dec_label_pc_10009610, { 1, 0 }
  uselistorder label %dec_label_pc_100095cc, { 1, 0 }
  uselistorder label %dec_label_pc_100095c0, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009634 = load i32, i32* @lr, align 4
  store i32 %v0_10009634, i32* %r0.global-to-local, align 4
  %v0_1000963c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009648 = load i16, i16* %arg1, align 2
  %v4_10009648 = zext i16 %v3_10009648 to i32
  store i32 %v4_10009648, i32* %r0.global-to-local, align 4
  %v1_1000964c = load i32, i32* @r4, align 4
  %v2_1000964c = and i32 %v1_1000964c, %v4_10009648
  store i32 %v2_1000964c, i32* %r9.global-to-local, align 4
  %v5_1000964c = icmp eq i32 %v2_1000964c, 0
  br i1 %v5_1000964c, label %dec_label_pc_10009654, label %dec_label_pc_10009664

dec_label_pc_10009654:                            ; preds = %entry
  %v1_10009654 = and i32 %v4_10009648, 2176
  store i32 %v1_10009654, i32* %r9.global-to-local, align 4
  %v3_10009654 = icmp eq i32 %v1_10009654, 0
  br i1 %v3_10009654, label %dec_label_pc_1000965c, label %dec_label_pc_10009670

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_10009654
  %v2_1000965c = or i32 %v1_1000964c, %v4_10009648
  store i32 %v2_1000965c, i32* %r0.global-to-local, align 4
  %v1_10009660 = trunc i32 %v2_1000965c to i16
  store i16 %v1_10009660, i16* %arg1, align 2
  %v0_10009664.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009664

dec_label_pc_10009664:                            ; preds = %entry, %dec_label_pc_1000965c
  %v0_100096a0 = phi i32 [ %tmp, %entry ], [ %v0_10009664.pre, %dec_label_pc_1000965c ]
  %v1_10009664 = inttoptr i32 %v0_100096a0 to i16*
  %v2_10009664 = load i16, i16* %v1_10009664, align 2
  %v3_10009664 = zext i16 %v2_10009664 to i32
  %v1_10009668 = and i32 %v3_10009664, 32
  store i32 %v1_10009668, i32* %r0.global-to-local, align 4
  %v3_10009668 = icmp eq i32 %v1_10009668, 0
  br i1 %v3_10009668, label %dec_label_pc_10009690, label %dec_label_pc_10009670

dec_label_pc_10009670:                            ; preds = %dec_label_pc_10009654, %dec_label_pc_10009664
  %v0_10009670 = call i32 @__errno_location()
  store i32 %v0_10009670, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10009678 = inttoptr i32 %v0_10009670 to i32*
  store i32 9, i32* %v2_10009678, align 4
  br label %dec_label_pc_1000967c

dec_label_pc_1000967c:                            ; preds = %dec_label_pc_100096b8, %dec_label_pc_10009670
  %v0_1000967c = load i32, i32* @r31, align 4
  %v1_1000967c = inttoptr i32 %v0_1000967c to i16*
  %v2_1000967c = load i16, i16* %v1_1000967c, align 2
  %v3_1000967c = zext i16 %v2_1000967c to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10009684 = or i32 %v3_1000967c, 8
  store i32 %v1_10009684, i32* %r0.global-to-local, align 4
  %v1_10009688 = trunc i32 %v1_10009684 to i16
  store i16 %v1_10009688, i16* %v1_1000967c, align 2
  br label %dec_label_pc_10009718

dec_label_pc_10009690:                            ; preds = %dec_label_pc_10009664
  %tmp8 = urem i16 %v2_10009664, 4
  %v1_10009690 = zext i16 %tmp8 to i32
  store i32 %v1_10009690, i32* %r0.global-to-local, align 4
  %v3_10009690 = icmp eq i16 %tmp8, 0
  br i1 %v3_10009690, label %dec_label_pc_100096f4, label %dec_label_pc_10009698

dec_label_pc_10009698:                            ; preds = %dec_label_pc_10009690
  %v1_10009698 = and i32 %v3_10009664, 4
  store i32 %v1_10009698, i32* %r9.global-to-local, align 4
  %v3_10009698 = icmp eq i32 %v1_10009698, 0
  br i1 %v3_10009698, label %dec_label_pc_100096a0, label %dec_label_pc_100096d8

dec_label_pc_100096a0:                            ; preds = %dec_label_pc_10009698
  %v1_100096a0 = add i32 %v0_100096a0, 20
  %v2_100096a0 = inttoptr i32 %v1_100096a0 to i32*
  %v3_100096a0 = load i32, i32* %v2_100096a0, align 4
  store i32 %v3_100096a0, i32* %r0.global-to-local, align 4
  %v1_100096a4 = add i32 %v0_100096a0, 16
  %v2_100096a4 = inttoptr i32 %v1_100096a4 to i32*
  %v3_100096a4 = load i32, i32* %v2_100096a4, align 4
  store i32 %v3_100096a4, i32* %r9.global-to-local, align 4
  %v4_100096a8 = icmp eq i32 %v3_100096a0, %v3_100096a4
  br i1 %v4_100096a8, label %dec_label_pc_100096b0, label %dec_label_pc_100096b8

dec_label_pc_100096b0:                            ; preds = %dec_label_pc_100096a0
  %v1_100096b0 = and i32 %v3_10009664, 2
  store i32 %v1_100096b0, i32* %r0.global-to-local, align 4
  %v3_100096b0 = icmp eq i32 %v1_100096b0, 0
  br i1 %v3_100096b0, label %dec_label_pc_100096d8, label %dec_label_pc_100096b8

dec_label_pc_100096b8:                            ; preds = %dec_label_pc_100096a0, %dec_label_pc_100096b0
  %v1_100096b8 = and i32 %v3_10009664, 1024
  store i32 %v1_100096b8, i32* %r9.global-to-local, align 4
  %v0_100096c0 = call i32 @__asm_mfcr()
  store i32 %v0_100096c0, i32* %r3.global-to-local, align 4
  %v1_100096c4 = call i32 @__asm_rlwinm(i32 %v0_100096c0, i32 3, i32 31, i32 31)
  %v1_100096c8 = sub i32 2, %v1_100096c4
  store i32 %v1_100096c8, i32* @r5, align 4
  store i32 268474064, i32* @lr, align 4
  %v1_100096cc = call i32 @__GI_fseek(i32 %v1_100096c8)
  store i32 %v1_100096cc, i32* %r3.global-to-local, align 4
  %v3_100096d0 = icmp eq i32 %v1_100096cc, 0
  br i1 %v3_100096d0, label %dec_label_pc_100096b8.dec_label_pc_100096d8_crit_edge, label %dec_label_pc_1000967c

dec_label_pc_100096b8.dec_label_pc_100096d8_crit_edge: ; preds = %dec_label_pc_100096b8
  %v0_100096d8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100096d8

dec_label_pc_100096d8:                            ; preds = %dec_label_pc_100096b8.dec_label_pc_100096d8_crit_edge, %dec_label_pc_10009698, %dec_label_pc_100096b0
  %v0_100096d8 = phi i32 [ %v0_100096d8.pre, %dec_label_pc_100096b8.dec_label_pc_100096d8_crit_edge ], [ %v0_100096a0, %dec_label_pc_10009698 ], [ %v0_100096a0, %dec_label_pc_100096b0 ]
  %v1_100096d8 = inttoptr i32 %v0_100096d8 to i16*
  %v2_100096d8 = load i16, i16* %v1_100096d8, align 2
  %v3_100096d8 = zext i16 %v2_100096d8 to i32
  store i32 %v3_100096d8, i32* %r0.global-to-local, align 4
  %v1_100096dc = add i32 %v0_100096d8, 8
  %v2_100096dc = inttoptr i32 %v1_100096dc to i32*
  %v3_100096dc = load i32, i32* %v2_100096dc, align 4
  store i32 %v3_100096dc, i32* %r9.global-to-local, align 4
  %v1_100096e0 = call i32 @__asm_rlwinm(i32 %v3_100096d8, i32 0, i32 0, i32 29)
  %v2_100096e0 = trunc i32 %v1_100096e0 to i16
  store i32 %v1_100096e0, i32* %r0.global-to-local, align 4
  %v3_100096e4 = load i32, i32* @r31, align 4
  %v4_100096e4 = inttoptr i32 %v3_100096e4 to i16*
  store i16 %v2_100096e0, i16* %v4_100096e4, align 2
  %v0_100096e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100096e8 = load i32, i32* @r31, align 4
  %v2_100096e8 = add i32 %v1_100096e8, 20
  %v3_100096e8 = inttoptr i32 %v2_100096e8 to i32*
  store i32 %v0_100096e8, i32* %v3_100096e8, align 4
  %v0_100096ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100096ec = load i32, i32* @r31, align 4
  %v2_100096ec = add i32 %v1_100096ec, 24
  %v3_100096ec = inttoptr i32 %v2_100096ec to i32*
  store i32 %v0_100096ec, i32* %v3_100096ec, align 4
  %v0_100096f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100096f0 = load i32, i32* @r31, align 4
  %v2_100096f0 = add i32 %v1_100096f0, 16
  %v3_100096f0 = inttoptr i32 %v2_100096f0 to i32*
  store i32 %v0_100096f0, i32* %v3_100096f0, align 4
  %v0_100096f4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100096f4

dec_label_pc_100096f4:                            ; preds = %dec_label_pc_10009690, %dec_label_pc_100096d8
  %v2_10009700 = phi i32 [ %v0_100096a0, %dec_label_pc_10009690 ], [ %v0_100096f4.pre, %dec_label_pc_100096d8 ]
  %v1_100096f4 = inttoptr i32 %v2_10009700 to i16*
  %v2_100096f4 = load i16, i16* %v1_100096f4, align 2
  %v3_100096f4 = zext i16 %v2_100096f4 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100096fc = or i32 %v3_100096f4, 64
  store i32 %v1_100096fc, i32* %r0.global-to-local, align 4
  %v1_10009700 = trunc i32 %v1_100096fc to i16
  store i16 %v1_10009700, i16* %v1_100096f4, align 2
  %v0_10009704 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009704 = urem i32 %v0_10009704, 65536
  store i32 %v1_10009704, i32* %r0.global-to-local, align 4
  %v1_10009708 = and i32 %v0_10009704, 2816
  store i32 %v1_10009708, i32* %r9.global-to-local, align 4
  %v3_10009708 = icmp eq i32 %v1_10009708, 0
  br i1 %v3_10009708, label %dec_label_pc_10009710, label %dec_label_pc_10009718

dec_label_pc_10009710:                            ; preds = %dec_label_pc_100096f4
  %v0_10009710 = load i32, i32* @r31, align 4
  %v1_10009710 = add i32 %v0_10009710, 12
  %v2_10009710 = inttoptr i32 %v1_10009710 to i32*
  %v3_10009710 = load i32, i32* %v2_10009710, align 4
  store i32 %v3_10009710, i32* %r0.global-to-local, align 4
  %v2_10009714 = add i32 %v0_10009710, 28
  %v3_10009714 = inttoptr i32 %v2_10009714 to i32*
  store i32 %v3_10009710, i32* %v3_10009714, align 4
  br label %dec_label_pc_10009718

dec_label_pc_10009718:                            ; preds = %dec_label_pc_100096f4, %dec_label_pc_1000967c, %dec_label_pc_10009710
  store i32 %v0_10009634, i32* %r0.global-to-local, align 4
  store i32 %v0_1000963c, i32* @r31, align 4
  %v0_10009728 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009728

; uselistorder directives
  uselistorder i32 %v0_10009704, { 1, 0 }
  uselistorder i32 %v1_100096e0, { 1, 0 }
  uselistorder i32 %v0_100096d8, { 1, 0 }
  uselistorder i32 %v0_100096a0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_10009648, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 1, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 29, { 0, 5, 6, 7, 8, 9, 14, 15, 10, 11, 1, 2, 12, 13, 3, 4, 16, 17 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100096f4, { 1, 0 }
  uselistorder label %dec_label_pc_100096d8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100096b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009670, { 1, 0 }
  uselistorder label %dec_label_pc_10009664, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_1000972c = load i32, i32* @r5, align 4
  %v1_1000972c = icmp slt i32 %v0_1000972c, 0
  %v1_10009730 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_1000976c = icmp eq i32 %v1_10009730, 0
  br i1 %v1_1000972c, label %dec_label_pc_1000976c, label %dec_label_pc_10009738

dec_label_pc_10009738:                            ; preds = %entry
  br i1 %v3_1000976c, label %dec_label_pc_10009740, label %dec_label_pc_10009774

dec_label_pc_10009740:                            ; preds = %dec_label_pc_10009738
  %v3_10009740 = icmp eq i32 %arg1, 256
  br i1 %v3_10009740, label %dec_label_pc_1000974c, label %dec_label_pc_10009754

dec_label_pc_1000974c:                            ; preds = %dec_label_pc_10009740
  br label %dec_label_pc_10009760

dec_label_pc_10009754:                            ; preds = %dec_label_pc_10009740
  %v3_10009754 = icmp eq i32 %arg1, 512
  br i1 %v3_10009754, label %dec_label_pc_1000975c, label %dec_label_pc_10009760

dec_label_pc_1000975c:                            ; preds = %dec_label_pc_10009754
  br label %dec_label_pc_10009760

dec_label_pc_10009760:                            ; preds = %dec_label_pc_10009754, %dec_label_pc_1000974c, %dec_label_pc_1000975c
  ret i32 0

dec_label_pc_1000976c:                            ; preds = %entry
  br i1 %v3_1000976c, label %dec_label_pc_10009780, label %dec_label_pc_10009774

dec_label_pc_10009774:                            ; preds = %dec_label_pc_10009738, %dec_label_pc_1000976c
  %v2_10009774 = load i32, i32* %arg2, align 4
  ret i32 %v2_10009774

dec_label_pc_10009780:                            ; preds = %dec_label_pc_1000976c
  %v3_10009780 = icmp eq i32 %arg1, 256
  %v2_10009784 = load i32, i32* %arg2, align 4
  br i1 %v3_10009780, label %dec_label_pc_1000978c, label %dec_label_pc_10009794

dec_label_pc_1000978c:                            ; preds = %dec_label_pc_10009780
  %v1_1000978c = urem i32 %v2_10009784, 256
  br label %dec_label_pc_100097a0

dec_label_pc_10009794:                            ; preds = %dec_label_pc_10009780
  %v3_10009794 = icmp eq i32 %arg1, 512
  br i1 %v3_10009794, label %dec_label_pc_1000979c, label %dec_label_pc_100097a0

dec_label_pc_1000979c:                            ; preds = %dec_label_pc_10009794
  %v1_1000979c = mul i32 %v2_10009784, 65536
  %v2_1000979c = sdiv i32 %v1_1000979c, 65536
  br label %dec_label_pc_100097a0

dec_label_pc_100097a0:                            ; preds = %dec_label_pc_10009794, %dec_label_pc_1000978c, %dec_label_pc_1000979c
  %v0_100097a0 = phi i32 [ %v2_10009784, %dec_label_pc_10009794 ], [ %v1_1000978c, %dec_label_pc_1000978c ], [ %v2_1000979c, %dec_label_pc_1000979c ]
  %tmp = icmp slt i32 %v0_100097a0, 0
  %v1_100097a4 = zext i1 %tmp to i32
  %v2_100097a4 = ashr i32 %v0_100097a0, 31
  %v3_100097a4 = and i32 %v2_100097a4, -2
  %v4_100097a4 = or i32 %v3_100097a4, %v1_100097a4
  ret i32 %v4_100097a4

; uselistorder directives
  uselistorder i32 %v0_100097a0, { 1, 0 }
  uselistorder i32 %v2_10009784, { 2, 0, 1 }
  uselistorder i1 %v3_1000976c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 0, 1, 2, 19, 20, 21, 22, 47, 48, 49, 3, 23, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 17, 50, 18, 41, 42, 43, 44, 45, 46, 51 }
  uselistorder i32 %arg1, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_100097a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009774, { 1, 0 }
  uselistorder label %dec_label_pc_10009760, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_100097ac = load i32, i32* @r4, align 4
  %v3_100097ac = icmp eq i32 %v0_100097ac, 256
  br i1 %v3_100097ac, label %dec_label_pc_100097b8, label %dec_label_pc_100097c0

dec_label_pc_100097b8:                            ; preds = %entry
  %v0_100097b8 = load i32, i32* @r6, align 4
  %v1_100097b8 = trunc i32 %v0_100097b8 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_100097b8, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_100097c0:                            ; preds = %entry
  %v3_100097b0 = icmp eq i32 %v0_100097ac, 2048
  br i1 %v3_100097b0, label %dec_label_pc_100097c8, label %dec_label_pc_100097d4

dec_label_pc_100097c8:                            ; preds = %dec_label_pc_100097c0
  %v0_100097c8 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_100097c8, i32* %tmp2, align 4
  %v0_100097cc = load i32, i32* @r6, align 4
  %v3_100097cc = add i32 %tmp, 4
  %v4_100097cc = inttoptr i32 %v3_100097cc to i32*
  store i32 %v0_100097cc, i32* %v4_100097cc, align 4
  ret i32 %tmp

dec_label_pc_100097d4:                            ; preds = %dec_label_pc_100097c0
  %v3_100097c0 = icmp eq i32 %v0_100097ac, 512
  %v0_100097d8 = load i32, i32* @r6, align 4
  br i1 %v3_100097c0, label %dec_label_pc_100097d8, label %dec_label_pc_100097e0

dec_label_pc_100097d8:                            ; preds = %dec_label_pc_100097d4
  %v1_100097d8 = trunc i32 %v0_100097d8 to i16
  store i16 %v1_100097d8, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_100097e0:                            ; preds = %dec_label_pc_100097d4
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_100097d8, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 512, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder i32* @r6, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 15, 16, 17, 12, 13 }
  uselistorder i32* @r4, { 12, 13, 14, 15, 16, 17, 18, 19, 45, 46, 1, 47, 48, 49, 50, 2, 51, 52, 85, 86, 3, 20, 21, 22, 8, 23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 87, 88, 89, 53, 54, 9, 10, 55, 56, 90, 57, 58, 59, 60, 61, 62, 63, 91, 92, 93, 64, 65, 66, 67, 68, 5, 69, 70, 71, 82, 83, 38, 72, 73, 74, 75, 76, 11, 94, 96, 6, 7, 95, 39, 40, 35, 77, 78, 79, 80, 81, 84, 4, 36, 37, 41, 42, 43, 44 }
  uselistorder i16* %arg1, { 2, 3, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100097e8 = load i32, i32* %r7.global-to-local, align 4
  %v3_100097e8 = icmp eq i32 %v0_100097e8, 0
  store i1 %v3_100097e8, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp12 = icmp sgt i32 %v0_100097e8, -1
  br i1 %tmp12, label %dec_label_pc_1000981c, label %dec_label_pc_100097fc

dec_label_pc_100097fc:                            ; preds = %entry
  %v0_100097fc = load i32, i32* %r5.global-to-local, align 4
  %v1_10009800 = sub i32 0, %v0_100097e8
  store i32 %v1_10009800, i32* %r7.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_100097fc, -1
  br i1 %tmp13, label %dec_label_pc_1000981c, label %dec_label_pc_10009808

dec_label_pc_10009808:                            ; preds = %dec_label_pc_100097fc
  %v0_10009808 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009808 = sub i32 0, %v0_10009808
  %v2_10009808 = sub i32 -1, %v0_10009808
  store i32 %v1_10009808, i32* %r6.global-to-local, align 4
  %v4_10009808 = icmp uge i32 %v2_10009808, %v1_10009808
  %v1_1000980c = sub i32 -1, %v0_100097fc
  %v3_1000980c = zext i1 %v4_10009808 to i32
  %v4_1000980c = add i32 %v3_1000980c, %v1_1000980c
  store i32 %v4_1000980c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000981c

dec_label_pc_1000981c:                            ; preds = %entry, %dec_label_pc_100097fc, %dec_label_pc_10009808
  %v1_10009820 = phi i32 [ %v1_10009800, %dec_label_pc_10009808 ], [ %v1_10009800, %dec_label_pc_100097fc ], [ %v0_100097e8, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10009808 ], [ 0, %dec_label_pc_100097fc ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10009820 = udiv i32 -1, %v1_10009820
  store i32 %v2_10009820, i32* %r8.global-to-local, align 4
  %v2_10009828 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009828 = inttoptr i32 %v2_10009828 to i8*
  store i8 0, i8* %v3_10009828, align 1
  %v0_1000982c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000982c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000982c = mul i32 %v1_1000982c, %v0_1000982c
  %v1_10009830 = sub i32 0, %v2_1000982c
  store i32 %v1_10009830, i32* %r31.global-to-local, align 4
  %v4_10009834 = icmp eq i32 %v1_1000982c, %v1_10009830
  br i1 %v4_10009834, label %dec_label_pc_1000983c, label %dec_label_pc_10009844

dec_label_pc_1000983c:                            ; preds = %dec_label_pc_1000981c
  %v1_1000983c = add i32 %v0_1000982c, 1
  store i32 %v1_1000983c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009844

dec_label_pc_10009844:                            ; preds = %dec_label_pc_1000981c, %dec_label_pc_1000983c
  %v0_10009844 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10009844, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_10009848

dec_label_pc_10009848thread-pre-split:            ; preds = %dec_label_pc_1000989c
  %v0_10009848.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_1000984c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009848

dec_label_pc_10009848:                            ; preds = %dec_label_pc_10009848thread-pre-split, %dec_label_pc_10009844
  %v1_10009890 = phi i32 [ %v1_1000984c.pre, %dec_label_pc_10009848thread-pre-split ], [ %v1_1000982c, %dec_label_pc_10009844 ]
  %v1_10009860 = phi i32 [ %v0_10009848.pr, %dec_label_pc_10009848thread-pre-split ], [ %v0_10009844, %dec_label_pc_10009844 ]
  %v3_10009848 = icmp eq i32 %v1_10009860, 0
  %v0_1000984c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000984c = udiv i32 %v0_1000984c, %v1_10009890
  br i1 %v3_10009848, label %dec_label_pc_10009890, label %dec_label_pc_10009854

dec_label_pc_10009854:                            ; preds = %dec_label_pc_10009848
  %v2_10009854 = udiv i32 %v1_10009860, %v1_10009890
  %v2_10009858 = mul i32 %v2_10009854, %v1_10009890
  %v2_1000985c = mul i32 %v2_1000984c, %v1_10009890
  %v2_10009860 = sub i32 %v1_10009860, %v2_10009858
  store i32 %v2_10009854, i32* %r12.global-to-local, align 4
  %v0_10009868 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009868 = mul i32 %v0_10009868, %v2_10009860
  %v2_1000986c = sub i32 %v0_1000984c, %v2_1000985c
  %v2_10009870 = add i32 %v2_10009868, %v2_1000986c
  %v0_10009874 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009874 = mul i32 %v0_10009874, %v2_10009860
  %v2_10009878 = udiv i32 %v2_10009870, %v1_10009890
  %v2_1000987c = add i32 %v2_10009874, %v2_1000984c
  %v2_10009880 = mul i32 %v2_10009878, %v1_10009890
  %v2_10009884 = add i32 %v2_1000987c, %v2_10009878
  store i32 %v2_10009884, i32* %r6.global-to-local, align 4
  %v2_10009888 = sub i32 %v2_10009870, %v2_10009880
  store i32 %v2_10009888, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000989c

dec_label_pc_10009890:                            ; preds = %dec_label_pc_10009848
  %v2_10009890 = mul i32 %v2_1000984c, %v1_10009890
  %v2_10009894 = sub i32 %v0_1000984c, %v2_10009890
  store i32 %v2_10009894, i32* %r5.global-to-local, align 4
  store i32 %v2_1000984c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000989c

dec_label_pc_1000989c:                            ; preds = %dec_label_pc_10009854, %dec_label_pc_10009890
  %v1_100098a0 = phi i32 [ %v2_10009854, %dec_label_pc_10009854 ], [ 0, %dec_label_pc_10009890 ]
  %v0_100098a0 = phi i32 [ %v2_10009884, %dec_label_pc_10009854 ], [ %v2_1000984c, %dec_label_pc_10009890 ]
  %v0_100098a4 = phi i32 [ %v2_10009888, %dec_label_pc_10009854 ], [ %v2_10009894, %dec_label_pc_10009890 ]
  %v2_100098a0 = or i32 %v0_100098a0, %v1_100098a0
  %v5_100098a0 = icmp eq i32 %v2_100098a0, 0
  store i1 %v5_100098a0, i1* %cr0_eq.global-to-local, align 1
  %v1_100098a8 = load i32, i32* %r30.global-to-local, align 4
  %v0_100098ac = load i32, i32* %r3.global-to-local, align 4
  %v1_100098ac = add i32 %v0_100098ac, -1
  store i32 %v1_100098ac, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_100098a4, 10
  %v1_100098a4.v2_100098a8.v = select i1 %tmp14, i32 48, i32 %v1_100098a8
  %v1_100098a4.v2_100098a8 = add i32 %v0_100098a4, %v1_100098a4.v2_100098a8.v
  %extract.t9.extract.t = trunc i32 %v1_100098a4.v2_100098a8 to i8
  %v3_100098bc = inttoptr i32 %v1_100098ac to i8*
  store i8 %extract.t9.extract.t, i8* %v3_100098bc, align 1
  %v0_100098c0 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_100098c0, label %dec_label_pc_100098c4, label %dec_label_pc_10009848thread-pre-split

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_1000989c
  %v0_100098c4 = load i32, i32* @r29, align 4
  %v3_100098c4 = icmp eq i32 %v0_100098c4, 0
  br i1 %v3_100098c4, label %dec_label_pc_100098c4.dec_label_pc_100098d4_crit_edge, label %dec_label_pc_100098cc

dec_label_pc_100098c4.dec_label_pc_100098d4_crit_edge: ; preds = %dec_label_pc_100098c4
  %v0_100098dc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100098d4

dec_label_pc_100098cc:                            ; preds = %dec_label_pc_100098c4
  %v2_100098d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100098d0 = add i32 %v2_100098d0, -1
  %v4_100098d0 = inttoptr i32 %v3_100098d0 to i8*
  store i8 45, i8* %v4_100098d0, align 1
  store i32 %v3_100098d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100098d4

dec_label_pc_100098d4:                            ; preds = %dec_label_pc_100098c4.dec_label_pc_100098d4_crit_edge, %dec_label_pc_100098cc
  %v0_100098dc = phi i32 [ %v0_100098dc.pre, %dec_label_pc_100098c4.dec_label_pc_100098d4_crit_edge ], [ %v3_100098d0, %dec_label_pc_100098cc ]
  ret i32 %v0_100098dc

; uselistorder directives
  uselistorder i32 %v2_10009854, { 1, 2, 0 }
  uselistorder i32 %v2_1000984c, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10009890, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_1000982c, { 1, 2, 0 }
  uselistorder i32 %v0_1000982c, { 1, 0 }
  uselistorder i32 %v0_100097e8, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r7.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_100098d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000989c, { 1, 0 }
  uselistorder label %dec_label_pc_10009844, { 1, 0 }
  uselistorder label %dec_label_pc_1000981c, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_100098e0 = load i32, i32* @lr, align 4
  store i32 %v0_100098e0, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_100098fc = add i32 %tmp, 11
  %v2_100098fc = inttoptr i32 %v1_100098fc to i8*
  %v3_100098fc = load i8, i8* %v2_100098fc, align 1
  %v4_100098fc = zext i8 %v3_100098fc to i32
  store i32 %v4_100098fc, i32* %r31.global-to-local, align 4
  %v1_10009900 = or i32 %v4_100098fc, 32
  %v1_10009904 = icmp ult i32 %v1_10009900, 97
  %v3_10009904 = icmp eq i32 %v1_10009900, 97
  store i1 %v1_10009904, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009904, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10009910 = add i32 %tmp, 4
  %v2_10009910 = inttoptr i32 %v1_10009910 to i32*
  %v3_10009910 = load i32, i32* %v2_10009910, align 4
  store i32 %v3_10009910, i32* %r28.global-to-local, align 4
  %v2_10009914 = load i32, i32* %arg2, align 4
  store i32 %v2_10009914, i32* %r30.global-to-local, align 4
  br i1 %v3_10009904, label %dec_label_pc_1000991c, label %dec_label_pc_10009924

dec_label_pc_1000991c:                            ; preds = %entry
  %v1_1000991c = add nuw nsw i32 %v4_100098fc, 6
  store i32 %v1_1000991c, i32* %r0.global-to-local, align 4
  %v1_10009920 = urem i32 %v1_1000991c, 256
  store i32 %v1_10009920, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009924

dec_label_pc_10009924:                            ; preds = %entry, %dec_label_pc_1000991c
  %v0_100099d8 = phi i32 [ %v4_100098fc, %entry ], [ %v1_10009920, %dec_label_pc_1000991c ]
  %v1_10009924 = icmp slt i32 %v2_10009914, 0
  %v3_10009924 = icmp eq i32 %v2_10009914, 0
  store i1 %v1_10009924, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009924, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10009914, -1
  br i1 %tmp75, label %dec_label_pc_10009930, label %dec_label_pc_1000992c

dec_label_pc_1000992c:                            ; preds = %dec_label_pc_10009924
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009930

dec_label_pc_10009930:                            ; preds = %dec_label_pc_10009924, %dec_label_pc_1000992c
  %v0_10009ae844 = phi i32 [ %v2_10009914, %dec_label_pc_10009924 ], [ 6, %dec_label_pc_1000992c ]
  %v1_10009930 = add i32 %tmp, 12
  %v2_10009930 = inttoptr i32 %v1_10009930 to i32*
  %v3_10009930 = load i32, i32* %v2_10009930, align 4
  store i32 %v3_10009930, i32* %r9.global-to-local, align 4
  %v1_10009934 = and i32 %v3_10009930, 2
  %v3_10009934 = icmp eq i32 %v1_10009934, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_10009934, label %dec_label_pc_1000994c, label %dec_label_pc_10009958

dec_label_pc_1000994c:                            ; preds = %dec_label_pc_10009930
  %v1_1000994c = urem i32 %v3_10009930, 2
  store i32 %v1_1000994c, i32* %r7.global-to-local, align 4
  %v3_1000994c = icmp eq i32 %v1_1000994c, 0
  br i1 %v3_1000994c, label %dec_label_pc_1000995c, label %dec_label_pc_10009958

dec_label_pc_10009958:                            ; preds = %dec_label_pc_1000994c, %dec_label_pc_10009930
  %storemerge = phi i32 [ 43, %dec_label_pc_10009930 ], [ 32, %dec_label_pc_1000994c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10009958 = trunc i32 %storemerge to i8
  store i8 %v6_10009958, i8* %stack_var_-200, align 1
  br label %dec_label_pc_1000995c

dec_label_pc_1000995c:                            ; preds = %dec_label_pc_1000994c, %dec_label_pc_10009958
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10009924, label %dec_label_pc_10009ac0, label %dec_label_pc_100099d8

dec_label_pc_100099d8:                            ; preds = %dec_label_pc_1000995c
  %v1_100099d8 = icmp ult i32 %v0_100099d8, 96
  %v2_100099d8 = icmp ugt i32 %v0_100099d8, 96
  %v3_100099d8 = icmp eq i32 %v0_100099d8, 96
  store i1 %v1_100099d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100099d8, i1* %cr7_eq.global-to-local, align 1
  %v2_100099e0 = add i32 %tmp, 16
  %v3_100099e0 = inttoptr i32 %v2_100099e0 to i32*
  store i32 32, i32* %v3_100099e0, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_100099d8, label %dec_label_pc_10009a04, label %dec_label_pc_100099f8

dec_label_pc_100099f8:                            ; preds = %dec_label_pc_100099d8
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009a04

dec_label_pc_10009a04:                            ; preds = %dec_label_pc_100099d8, %dec_label_pc_100099f8
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1000bbf0.185 to i32), i32 8), %dec_label_pc_100099d8 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1000bbf0.185 to i32), i32 12), %dec_label_pc_100099f8 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1000bbf0.185 to i32), i32* %r9.global-to-local, align 4
  %v2_10009a10 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10009a10, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10009eb0

dec_label_pc_10009ac0:                            ; preds = %dec_label_pc_1000995c
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10009ac4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10009ac4, i32* %r6.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10009b10 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10009ae4

dec_label_pc_10009ae4:                            ; preds = %dec_label_pc_10009b64.dec_label_pc_10009ae4_crit_edge, %dec_label_pc_10009ac0
  %v0_10009ae8 = phi i32 [ %v0_10009ae8.pre, %dec_label_pc_10009b64.dec_label_pc_10009ae4_crit_edge ], [ %v0_10009ae844, %dec_label_pc_10009ac0 ]
  %v3_10009ae8 = call %2 @__asm_cror(i32 %v0_10009ae8, i32 %tmp, i32 %v0_10009ae8)
  %v0_10009aec = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009aec, label %dec_label_pc_10009b00, label %dec_label_pc_10009b14

dec_label_pc_10009b00:                            ; preds = %dec_label_pc_10009ae4
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b14

dec_label_pc_10009b14:                            ; preds = %dec_label_pc_10009ae4, %dec_label_pc_10009b00
  %storemerge2 = phi i32 [ %v1_10009b10, %dec_label_pc_10009b00 ], [ %tmp55, %dec_label_pc_10009ae4 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10009b24 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009b24 = add i32 %v0_10009b24, 9
  store i32 %v1_10009b24, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009b40

dec_label_pc_10009b40:                            ; preds = %dec_label_pc_10009b40.dec_label_pc_10009b40_crit_edge, %dec_label_pc_10009b14
  %v1_10009b48 = phi i32 [ %v1_10009b48.pre, %dec_label_pc_10009b40.dec_label_pc_10009b40_crit_edge ], [ %v1_10009b24, %dec_label_pc_10009b14 ]
  %v0_10009b44 = phi i32 [ %v0_10009b44.pre, %dec_label_pc_10009b40.dec_label_pc_10009b40_crit_edge ], [ 0, %dec_label_pc_10009b14 ]
  %v1_10009b40 = phi i32 [ %v1_10009b40.pre, %dec_label_pc_10009b40.dec_label_pc_10009b40_crit_edge ], [ 10, %dec_label_pc_10009b14 ]
  %v1_10009b50 = phi i32 [ %v0_10009b40.pre, %dec_label_pc_10009b40.dec_label_pc_10009b40_crit_edge ], [ %storemerge2, %dec_label_pc_10009b14 ]
  %v2_10009b40 = udiv i32 %v1_10009b50, %v1_10009b40
  store i32 %v2_10009b40, i32* %r0.global-to-local, align 4
  %v1_10009b44 = add i32 %v0_10009b44, 1
  store i32 %v1_10009b44, i32* %r8.global-to-local, align 4
  %v2_10009b48 = sub i32 %v1_10009b48, %v1_10009b44
  store i32 %v2_10009b48, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10009b40, -10
  store i32 %v2_10009b40, i32* %r10.global-to-local, align 4
  %v2_10009b50 = add i32 %v1_10009b50, 48
  %v1_10009b58 = add i32 %v2_10009b50, %tmp76
  store i32 %v1_10009b58, i32* %r9.global-to-local, align 4
  %v1_10009b5c = trunc i32 %v1_10009b58 to i8
  %v3_10009b5c = inttoptr i32 %v2_10009b48 to i8*
  store i8 %v1_10009b5c, i8* %v3_10009b5c, align 1
  %v0_10009b60 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009b60 = add i32 %v0_10009b60, -1
  store i32 %v1_10009b60, i32* %ctr.global-to-local, align 4
  %v2_10009b60 = icmp eq i32 %v1_10009b60, 0
  br i1 %v2_10009b60, label %dec_label_pc_10009b64, label %dec_label_pc_10009b40.dec_label_pc_10009b40_crit_edge

dec_label_pc_10009b40.dec_label_pc_10009b40_crit_edge: ; preds = %dec_label_pc_10009b40
  %v0_10009b40.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10009b40.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10009b44.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10009b48.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10009b40

dec_label_pc_10009b64:                            ; preds = %dec_label_pc_10009b40
  %v0_10009b64 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009b64 = icmp slt i32 %v0_10009b64, 0
  %v3_10009b64 = icmp eq i32 %v0_10009b64, 0
  store i1 %v1_10009b64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b64, i1* %cr7_eq.global-to-local, align 1
  %v1_10009b68 = add i32 %v0_10009b64, 1
  store i32 %v1_10009b68, i32* %r7.global-to-local, align 4
  br i1 %v3_10009b64, label %dec_label_pc_10009b64.dec_label_pc_10009ae4_crit_edge, label %dec_label_pc_10009b70

dec_label_pc_10009b64.dec_label_pc_10009ae4_crit_edge: ; preds = %dec_label_pc_10009b64
  %v0_10009ae8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009ae4

dec_label_pc_10009b70:                            ; preds = %dec_label_pc_10009b64
  %v0_10009b70 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009b70 = icmp ult i32 %v0_10009b70, 96
  %v2_10009b70 = icmp ugt i32 %v0_10009b70, 96
  %v3_10009b70 = icmp eq i32 %v0_10009b70, 96
  store i1 %v1_10009b70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10009b70, label %dec_label_pc_10009b88, label %dec_label_pc_10009b78

dec_label_pc_10009b78:                            ; preds = %dec_label_pc_10009b70
  %v1_10009b80 = add i32 %v0_10009b70, 32
  store i32 %v1_10009b80, i32* %r0.global-to-local, align 4
  %v1_10009b84 = urem i32 %v1_10009b80, 256
  store i32 %v1_10009b84, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009b88

dec_label_pc_10009b88:                            ; preds = %dec_label_pc_10009b70, %dec_label_pc_10009b78
  %v0_10009ba0 = phi i32 [ %v1_10009b84, %dec_label_pc_10009b78 ], [ %v0_10009b70, %dec_label_pc_10009b70 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10009b78 ], [ 101, %dec_label_pc_10009b70 ]
  %v1_10009b88 = icmp slt i32 %v0_10009ba0, 103
  %v3_10009b88 = icmp eq i32 %v0_10009ba0, 103
  store i1 %v1_10009b88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009b88, label %dec_label_pc_10009b90, label %dec_label_pc_10009ba0

dec_label_pc_10009b90:                            ; preds = %dec_label_pc_10009b88
  %v0_10009b90 = load i32, i32* %r30.global-to-local, align 4
  %v1_10009b90 = icmp slt i32 %v0_10009b90, 0
  %v3_10009b90 = icmp eq i32 %v0_10009b90, 0
  store i1 %v1_10009b90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009b90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009b90, label %dec_label_pc_10009ba8, label %dec_label_pc_10009b98

dec_label_pc_10009b98:                            ; preds = %dec_label_pc_10009b90
  %v1_10009b98 = add i32 %v0_10009b90, -1
  store i32 %v1_10009b98, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009ba8

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b88
  %v1_10009ba0 = icmp slt i32 %v0_10009ba0, 102
  %v3_10009ba0 = icmp eq i32 %v0_10009ba0, 102
  store i1 %v1_10009ba0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009ba0, i1* %cr7_eq.global-to-local, align 1
  %v0_10009bb0 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10009ba0, label %dec_label_pc_10009bb0, label %dec_label_pc_10009ba8

dec_label_pc_10009ba8:                            ; preds = %dec_label_pc_10009ba0, %dec_label_pc_10009b90, %dec_label_pc_10009b98
  %v0_10009ba8 = phi i32 [ 0, %dec_label_pc_10009b90 ], [ %v1_10009b98, %dec_label_pc_10009b98 ], [ %v0_10009bb0, %dec_label_pc_10009ba0 ]
  store i32 %v0_10009ba8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009bd4

dec_label_pc_10009bb0:                            ; preds = %dec_label_pc_10009ba0
  %v1_10009bb0 = load i32, i32* %r4.global-to-local, align 4
  %v2_10009bb0 = add i32 %v1_10009bb0, %v0_10009bb0
  store i32 %v2_10009bb0, i32* %r10.global-to-local, align 4
  %v1_10009bb4 = icmp slt i32 %v2_10009bb0, -1
  %v3_10009bb4 = icmp eq i32 %v2_10009bb0, -1
  store i1 %v1_10009bb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009bb4, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10009bb0, -2
  br i1 %tmp77, label %dec_label_pc_10009bd4, label %dec_label_pc_10009bbc

dec_label_pc_10009bbc:                            ; preds = %dec_label_pc_10009bb0
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_10009bc0 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10009bc0, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268475340, i32* @lr, align 4
  %v3_10009bc8 = call i32 @__GI_memset(i32 %v2_10009bc0, i32 48, i32 17)
  store i32 %v3_10009bc8, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009bd4

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bb0, %dec_label_pc_10009ba8, %dec_label_pc_10009bbc
  %v1_10009bf8 = phi i32 [ %v2_10009bb0, %dec_label_pc_10009bb0 ], [ %v0_10009ba8, %dec_label_pc_10009ba8 ], [ -1, %dec_label_pc_10009bbc ]
  %v1_10009bd4 = icmp slt i32 %v1_10009bf8, 16
  %v2_10009bd4 = icmp sgt i32 %v1_10009bf8, 16
  %v3_10009bd4 = icmp eq i32 %v1_10009bf8, 16
  store i1 %v1_10009bd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009bd4, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10009be8 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10009be8, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10009bd4, label %dec_label_pc_10009c10, label %dec_label_pc_10009bf4

dec_label_pc_10009bf4:                            ; preds = %dec_label_pc_10009bd4
  %v2_10009bf4 = ptrtoint i32* %stack_var_-177 to i32
  %v2_10009bf8 = add i32 %v1_10009bf8, %v2_10009bf4
  store i32 %v2_10009bf8, i32* %r9.global-to-local, align 4
  %v1_10009bfc = add i32 %v2_10009bf8, 2
  %v2_10009bfc = inttoptr i32 %v1_10009bfc to i8*
  %v3_10009bfc = load i8, i8* %v2_10009bfc, align 1
  %v4_10009bfc = zext i8 %v3_10009bfc to i32
  store i32 %v4_10009bfc, i32* %r0.global-to-local, align 4
  store i32 %v1_10009bfc, i32* %r11.global-to-local, align 4
  %v1_10009c04 = sub nsw i32 52, %v4_10009bfc
  %v2_10009c04 = sub nuw nsw i32 -1, %v4_10009bfc
  %not.v5_10009c04 = icmp ugt i32 %v1_10009c04, %v2_10009c04
  %v1_10009c0c = zext i1 %not.v5_10009c04 to i32
  store i32 %v1_10009c0c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009c10

dec_label_pc_10009c10:                            ; preds = %dec_label_pc_10009bd4, %dec_label_pc_10009bf4, %dec_label_pc_10009c10.backedge
  %v0_10009c14 = phi i32 [ %v0_10009c14.pre, %dec_label_pc_10009c10.backedge ], [ 0, %dec_label_pc_10009bd4 ], [ %v1_10009c0c, %dec_label_pc_10009bf4 ]
  %v0_10009c10 = phi i32 [ %v0_10009c10.pre, %dec_label_pc_10009c10.backedge ], [ %v2_10009be8, %dec_label_pc_10009bd4 ], [ %v1_10009bfc, %dec_label_pc_10009bf4 ]
  %v1_10009c10 = add i32 %v0_10009c10, -1
  %v2_10009c10 = inttoptr i32 %v1_10009c10 to i8*
  %v3_10009c10 = load i8, i8* %v2_10009c10, align 1
  %v4_10009c10 = zext i8 %v3_10009c10 to i32
  store i32 %v1_10009c10, i32* %r11.global-to-local, align 4
  %v2_10009c14 = add i32 %v4_10009c10, %v0_10009c14
  store i32 %v2_10009c14, i32* %r0.global-to-local, align 4
  %v1_10009c18 = urem i32 %v2_10009c14, 256
  store i32 %v1_10009c18, i32* %r9.global-to-local, align 4
  %v1_10009c1c = trunc i32 %v2_10009c14 to i8
  store i8 %v1_10009c1c, i8* %v2_10009c10, align 1
  %v0_10009c20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009c20 = icmp slt i32 %v0_10009c20, 48
  %v3_10009c20 = icmp eq i32 %v0_10009c20, 48
  store i1 %v1_10009c20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c20, i1* %cr7_eq.global-to-local, align 1
  %v1_10009c24 = icmp ult i32 %v0_10009c20, 57
  %v2_10009c24 = icmp ugt i32 %v0_10009c20, 57
  %v3_10009c24 = icmp eq i32 %v0_10009c20, 57
  store i1 %v1_10009c24, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009c24, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009c24, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10009c20, %v2_10009c24
  br i1 %brmerge, label %dec_label_pc_10009c10.backedge, label %dec_label_pc_10009c30

dec_label_pc_10009c10.backedge:                   ; preds = %dec_label_pc_10009c10
  %v0_10009c10.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10009c14.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009c10

dec_label_pc_10009c30:                            ; preds = %dec_label_pc_10009c10
  %v2_10009c30 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10009c30, i32* %r0.global-to-local, align 4
  %v0_10009c34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10009c34, i32* %r7.global-to-local, align 4
  %v0_10009c38 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009c38 = icmp ult i32 %v0_10009c38, %v2_10009c30
  %v3_10009c38 = icmp ugt i32 %v0_10009c38, %v2_10009c30
  %v4_10009c38 = icmp eq i32 %v0_10009c38, %v2_10009c30
  store i1 %v2_10009c38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009c38, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10009ac4, i32* %r8.global-to-local, align 4
  br i1 %v3_10009c38, label %dec_label_pc_10009c50, label %dec_label_pc_10009c44

dec_label_pc_10009c44:                            ; preds = %dec_label_pc_10009c30
  store i32 %v2_10009c30, i32* %r8.global-to-local, align 4
  %v1_10009c48 = add i32 %v0_10009c34, 1
  store i32 %v1_10009c48, i32* %r7.global-to-local, align 4
  store i32 %v2_10009c30, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009c50

dec_label_pc_10009c50:                            ; preds = %dec_label_pc_10009c30, %dec_label_pc_10009c44
  %v2_10009c58 = phi i32 [ %v0_10009c38, %dec_label_pc_10009c30 ], [ %v2_10009c30, %dec_label_pc_10009c44 ]
  %v0_10009c50 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009c50 = icmp slt i32 %v0_10009c50, 103
  %v3_10009c50 = icmp eq i32 %v0_10009c50, 103
  store i1 %v1_10009c50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c50, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10009c58 = add i32 %v2_10009c58, 1
  %v4_10009c58 = inttoptr i32 %v3_10009c58 to i8*
  store i8 0, i8* %v4_10009c58, align 1
  %v0_10009c5c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009c5c = add i32 %v0_10009c5c, 1
  store i32 %v1_10009c5c, i32* %r9.global-to-local, align 4
  %v0_10009c60 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009c60, label %dec_label_pc_10009c64, label %dec_label_pc_10009c88

dec_label_pc_10009c64:                            ; preds = %dec_label_pc_10009c50
  %v0_10009c64 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009c64 = icmp slt i32 %v0_10009c64, -4
  %v3_10009c64 = icmp eq i32 %v0_10009c64, -4
  store i1 %v1_10009c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10009c64, label %dec_label_pc_10009c80, label %dec_label_pc_10009c6c

dec_label_pc_10009c6c:                            ; preds = %dec_label_pc_10009c64
  %v1_10009c6c = load i32, i32* %r10.global-to-local, align 4
  %v2_10009c6c = icmp sgt i32 %v1_10009c6c, %v0_10009c64
  %v3_10009c6c = icmp slt i32 %v1_10009c6c, %v0_10009c64
  %v4_10009c6c = icmp eq i32 %v1_10009c6c, %v0_10009c64
  store i1 %v2_10009c6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009c6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009c6c, label %dec_label_pc_10009c80, label %dec_label_pc_10009c74

dec_label_pc_10009c74:                            ; preds = %dec_label_pc_10009c6c
  %v2_10009c74 = sub i32 %v1_10009c6c, %v0_10009c64
  store i32 %v2_10009c74, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009ca0

dec_label_pc_10009c80:                            ; preds = %dec_label_pc_10009c6c, %dec_label_pc_10009c64
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009c94

dec_label_pc_10009c88:                            ; preds = %dec_label_pc_10009c50
  %v0_10009c88 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009c88 = icmp slt i32 %v0_10009c88, 102
  %v3_10009c88 = icmp eq i32 %v0_10009c88, 102
  store i1 %v1_10009c88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c88, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10009c88, i32* %r4.global-to-local, align 4
  br i1 %v3_10009c88, label %dec_label_pc_10009ca0thread-pre-split, label %dec_label_pc_10009c94

dec_label_pc_10009c94:                            ; preds = %dec_label_pc_10009c88, %dec_label_pc_10009c80
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10009cb4

dec_label_pc_10009ca0thread-pre-split:            ; preds = %dec_label_pc_10009c88
  %v0_10009ca0.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009ca0

dec_label_pc_10009ca0:                            ; preds = %dec_label_pc_10009ca0thread-pre-split, %dec_label_pc_10009c74
  %v0_10009ca4 = phi i32 [ %v0_10009ca0.pr, %dec_label_pc_10009ca0thread-pre-split ], [ %v0_10009c64, %dec_label_pc_10009c74 ]
  %v1_10009ca0 = icmp slt i32 %v0_10009ca4, 0
  %v2_10009ca0 = icmp sgt i32 %v0_10009ca4, 0
  %v3_10009ca0 = icmp eq i32 %v0_10009ca4, 0
  store i1 %v1_10009ca0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009ca0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009ca0, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10009ca4, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10009ca4, -1
  br i1 %tmp78, label %dec_label_pc_10009cb4, label %dec_label_pc_10009cac

dec_label_pc_10009cac:                            ; preds = %dec_label_pc_10009ca0
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10009cb0 = load i32, i32* %r8.global-to-local, align 4
  %v3_10009cb0 = add i32 %v2_10009cb0, -1
  %v4_10009cb0 = inttoptr i32 %v3_10009cb0 to i8*
  store i8 48, i8* %v4_10009cb0, align 1
  store i32 %v3_10009cb0, i32* %r8.global-to-local, align 4
  %v1_10009cd0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10009ce4.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10009cb4

dec_label_pc_10009cb4:                            ; preds = %dec_label_pc_10009ca0, %dec_label_pc_10009c94, %dec_label_pc_10009cac
  %v0_10009ce4 = phi i1 [ %v1_10009ca0, %dec_label_pc_10009ca0 ], [ false, %dec_label_pc_10009c94 ], [ %v0_10009ce4.pre, %dec_label_pc_10009cac ]
  %v1_10009cd0 = phi i32 [ %v1_10009c5c, %dec_label_pc_10009ca0 ], [ %v1_10009c5c, %dec_label_pc_10009c94 ], [ %v1_10009cd0.pre, %dec_label_pc_10009cac ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_10009cc0 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_10009cc0, i32* %r0.global-to-local, align 4
  %v0_10009cc8 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009cc8 = add i32 %v0_10009cc8, 1
  store i32 %v1_10009cc8, i32* %r6.global-to-local, align 4
  %v2_10009cd0 = sub i32 %v1_10009cd0, %v1_10009cc8
  store i32 %v2_10009cd0, i32* %r11.global-to-local, align 4
  %v1_10009cd4 = inttoptr i32 %v0_10009cc8 to i8*
  %v2_10009cd4 = load i8, i8* %v1_10009cd4, align 1
  %v3_10009cd4 = zext i8 %v2_10009cd4 to i32
  store i32 %v3_10009cd4, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_10009ce4, label %dec_label_pc_10009d44, label %dec_label_pc_10009ce8

dec_label_pc_10009ce8:                            ; preds = %dec_label_pc_10009cb4
  %v0_10009ce8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009ce8 = icmp slt i32 %v0_10009ce8, %v2_10009cd0
  %v4_10009ce8 = icmp eq i32 %v0_10009ce8, %v2_10009cd0
  store i1 %v2_10009ce8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009ce8, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10009ce8, label %dec_label_pc_10009d3c, label %dec_label_pc_10009cfc

dec_label_pc_10009cfc:                            ; preds = %dec_label_pc_10009ce8
  %v2_10009cfc = sub i32 %v0_10009ce8, %v2_10009cd0
  store i32 %v2_10009cfc, i32* %r0.global-to-local, align 4
  %v4_10009cfc = icmp sgt i32 %v2_10009cfc, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10009cfc, label %dec_label_pc_10009d18, label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009cfc
  %v2_10009d0c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009d0c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009d60

dec_label_pc_10009d18:                            ; preds = %dec_label_pc_10009cfc
  store i32 ptrtoint (i32* @global_var_1000bbf3.187 to i32), i32* %r9.global-to-local, align 4
  %v2_10009d24 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10009d24, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10009d60

dec_label_pc_10009d3c:                            ; preds = %dec_label_pc_10009ce8
  %v0_10009d3c = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10009d3c, label %dec_label_pc_10009d4c, label %dec_label_pc_10009d40

dec_label_pc_10009d40:                            ; preds = %dec_label_pc_10009d3c
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009d44

dec_label_pc_10009d44:                            ; preds = %dec_label_pc_10009cb4, %dec_label_pc_10009d40
  %v2_10009d44 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10009d44, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009d60

dec_label_pc_10009d4c:                            ; preds = %dec_label_pc_10009d3c
  %v2_10009d4c = sub i32 %v2_10009cd0, %v0_10009ce8
  store i32 %v2_10009d4c, i32* %r11.global-to-local, align 4
  %v2_10009d54 = add i32 %v0_10009ce8, %v1_10009cc8
  store i32 %v2_10009d54, i32* %r6.global-to-local, align 4
  %v2_10009d58 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009d58, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009d60

dec_label_pc_10009d60:                            ; preds = %dec_label_pc_10009d44, %dec_label_pc_10009d18, %dec_label_pc_10009d08, %dec_label_pc_10009d4c
  %v1_10009d8c = phi i32 [ %v2_10009d44, %dec_label_pc_10009d44 ], [ %v2_10009d24, %dec_label_pc_10009d18 ], [ %v2_10009d0c, %dec_label_pc_10009d08 ], [ %v2_10009d58, %dec_label_pc_10009d4c ]
  %v0_10009d6c = phi i32 [ %v2_10009cd0, %dec_label_pc_10009d44 ], [ 0, %dec_label_pc_10009d18 ], [ 0, %dec_label_pc_10009d08 ], [ %v2_10009d4c, %dec_label_pc_10009d4c ]
  %v3_10009d60 = load i32, i32* %v2_10009930, align 4
  store i32 %v3_10009d60, i32* %r0.global-to-local, align 4
  %v1_10009d64 = and i32 %v3_10009d60, 16
  store i32 %v1_10009d64, i32* %r9.global-to-local, align 4
  %v3_10009d64 = icmp eq i32 %v1_10009d64, 0
  br i1 %v3_10009d64, label %dec_label_pc_10009d6c, label %dec_label_pc_10009d84

dec_label_pc_10009d6c:                            ; preds = %dec_label_pc_10009d60
  %v1_10009d6c = icmp slt i32 %v0_10009d6c, 0
  %v3_10009d6c = icmp eq i32 %v0_10009d6c, 0
  store i1 %v1_10009d6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009d6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009d6c, label %dec_label_pc_10009d74, label %dec_label_pc_10009d84

dec_label_pc_10009d74:                            ; preds = %dec_label_pc_10009d6c
  %v0_10009d74 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009d74 = icmp slt i32 %v0_10009d74, 103
  %v3_10009d74 = icmp eq i32 %v0_10009d74, 103
  store i1 %v1_10009d74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009d74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009d74, label %dec_label_pc_10009da4, label %dec_label_pc_10009d7c

dec_label_pc_10009d7c:                            ; preds = %dec_label_pc_10009d74
  %v0_10009d7c = load i32, i32* %r30.global-to-local, align 4
  %v1_10009d7c = icmp slt i32 %v0_10009d7c, 0
  %v3_10009d7c = icmp eq i32 %v0_10009d7c, 0
  store i1 %v1_10009d7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009d7c, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10009d7c, 1
  br i1 %tmp79, label %dec_label_pc_10009da4, label %dec_label_pc_10009d84

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d6c, %dec_label_pc_10009d60, %dec_label_pc_10009d7c
  %v2_10009d8c = inttoptr i32 %v1_10009d8c to i32*
  store i32 112, i32* %v2_10009d8c, align 4
  store i32 ptrtoint (i32* @global_var_1000bc00.188 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009d98 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009d98 = add i32 %v1_10009d98, 8
  %v3_10009d98 = inttoptr i32 %v2_10009d98 to i32*
  store i32 ptrtoint (i32* @global_var_1000bc00.188 to i32), i32* %v3_10009d98, align 4
  %v0_10009d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10009d9c = load i32, i32* %r8.global-to-local, align 4
  %v2_10009d9c = add i32 %v1_10009d9c, 4
  %v3_10009d9c = inttoptr i32 %v2_10009d9c to i32*
  store i32 %v0_10009d9c, i32* %v3_10009d9c, align 4
  %v0_10009da0 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009da0 = add i32 %v0_10009da0, 12
  store i32 %v1_10009da0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009da4

dec_label_pc_10009da4:                            ; preds = %dec_label_pc_10009d7c, %dec_label_pc_10009d74, %dec_label_pc_10009d84
  %v1_10009db4 = phi i32 [ %v1_10009d8c, %dec_label_pc_10009d7c ], [ %v1_10009d8c, %dec_label_pc_10009d74 ], [ %v1_10009da0, %dec_label_pc_10009d84 ]
  %v0_10009da4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009da4 = add i32 %v0_10009da4, 1
  store i32 %v1_10009da4, i32* %r10.global-to-local, align 4
  %v4_10009da4 = icmp eq i32 %v1_10009da4, 0
  br i1 %v4_10009da4, label %dec_label_pc_10009dcc, label %dec_label_pc_10009dac

dec_label_pc_10009dac:                            ; preds = %dec_label_pc_10009da4
  %v1_10009dac = sub i32 -1, %v0_10009da4
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10009db4 = add i32 %v1_10009db4, 4
  %v3_10009db4 = inttoptr i32 %v2_10009db4 to i32*
  store i32 %v1_10009dac, i32* %v3_10009db4, align 4
  store i32 ptrtoint (i32* @global_var_1000bbf3.187 to i32), i32* %r9.global-to-local, align 4
  %v0_10009dc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009dc0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009dc0 = inttoptr i32 %v1_10009dc0 to i32*
  store i32 %v0_10009dc0, i32* %v2_10009dc0, align 4
  %v0_10009dc4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009dc4 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009dc4 = add i32 %v1_10009dc4, 8
  %v3_10009dc4 = inttoptr i32 %v2_10009dc4 to i32*
  store i32 %v0_10009dc4, i32* %v3_10009dc4, align 4
  %v0_10009dc8 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009dc8 = add i32 %v0_10009dc8, 12
  store i32 %v1_10009dc8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009dcc

dec_label_pc_10009dcc:                            ; preds = %dec_label_pc_10009da4, %dec_label_pc_10009dac
  %v1_10009dd8 = phi i32 [ %v1_10009db4, %dec_label_pc_10009da4 ], [ %v1_10009dc8, %dec_label_pc_10009dac ]
  %v0_10009dcc = load i32, i32* %r11.global-to-local, align 4
  %v1_10009dcc = icmp slt i32 %v0_10009dcc, 0
  %v3_10009dcc = icmp eq i32 %v0_10009dcc, 0
  store i1 %v1_10009dcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009dcc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009dcc, label %dec_label_pc_10009de8, label %dec_label_pc_10009dd4

dec_label_pc_10009dd4:                            ; preds = %dec_label_pc_10009dcc
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_10009dd8 = load i32, i32* %r6.global-to-local, align 4
  %v2_10009dd8 = add i32 %v1_10009dd8, 8
  %v3_10009dd8 = inttoptr i32 %v2_10009dd8 to i32*
  store i32 %v0_10009dd8, i32* %v3_10009dd8, align 4
  %v0_10009ddc = load i32, i32* %r0.global-to-local, align 4
  %v1_10009ddc = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ddc = inttoptr i32 %v1_10009ddc to i32*
  store i32 %v0_10009ddc, i32* %v2_10009ddc, align 4
  %v0_10009de0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009de0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009de0 = add i32 %v1_10009de0, 4
  %v3_10009de0 = inttoptr i32 %v2_10009de0 to i32*
  store i32 %v0_10009de0, i32* %v3_10009de0, align 4
  %v0_10009de4 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009de4 = add i32 %v0_10009de4, 12
  store i32 %v1_10009de4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009de8

dec_label_pc_10009de8:                            ; preds = %dec_label_pc_10009dcc, %dec_label_pc_10009dd4
  %v1_10009e10 = phi i32 [ %v1_10009dd8, %dec_label_pc_10009dcc ], [ %v1_10009de4, %dec_label_pc_10009dd4 ]
  %v0_10009de8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009de8 = icmp slt i32 %v0_10009de8, 103
  %v3_10009de8 = icmp eq i32 %v0_10009de8, 103
  store i1 %v1_10009de8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009de8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009de8, label %dec_label_pc_10009df0, label %dec_label_pc_10009dfc

dec_label_pc_10009df0:                            ; preds = %dec_label_pc_10009de8
  %v3_10009df0 = load i32, i32* %v2_10009930, align 4
  store i32 %v3_10009df0, i32* %r0.global-to-local, align 4
  %v1_10009df4 = and i32 %v3_10009df0, 16
  store i32 %v1_10009df4, i32* %r9.global-to-local, align 4
  %v3_10009df4 = icmp eq i32 %v1_10009df4, 0
  br i1 %v3_10009df4, label %dec_label_pc_10009e28, label %dec_label_pc_10009dfc

dec_label_pc_10009dfc:                            ; preds = %dec_label_pc_10009de8, %dec_label_pc_10009df0
  %v0_10009dfc = load i32, i32* %r10.global-to-local, align 4
  %v1_10009dfc = load i32, i32* %r11.global-to-local, align 4
  %v2_10009dfc = sub i32 %v1_10009dfc, %v0_10009dfc
  store i32 %v2_10009dfc, i32* %r9.global-to-local, align 4
  %v1_10009e00 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009e00 = icmp sgt i32 %v1_10009e00, %v2_10009dfc
  %v4_10009e00 = icmp eq i32 %v1_10009e00, %v2_10009dfc
  store i1 %v2_10009e00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009e00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10009e00, label %dec_label_pc_10009e08, label %dec_label_pc_10009e28

dec_label_pc_10009e08:                            ; preds = %dec_label_pc_10009dfc
  %v2_10009e08 = sub i32 %v1_10009e00, %v2_10009dfc
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10009e10 = add i32 %v1_10009e10, 4
  %v3_10009e10 = inttoptr i32 %v2_10009e10 to i32*
  store i32 %v2_10009e08, i32* %v3_10009e10, align 4
  store i32 ptrtoint (i32* @global_var_1000bbf3.187 to i32), i32* %r9.global-to-local, align 4
  %v0_10009e1c = load i32, i32* %r0.global-to-local, align 4
  %v1_10009e1c = load i32, i32* %r8.global-to-local, align 4
  %v2_10009e1c = inttoptr i32 %v1_10009e1c to i32*
  store i32 %v0_10009e1c, i32* %v2_10009e1c, align 4
  %v0_10009e20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009e20 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009e20 = add i32 %v1_10009e20, 8
  %v3_10009e20 = inttoptr i32 %v2_10009e20 to i32*
  store i32 %v0_10009e20, i32* %v3_10009e20, align 4
  %v0_10009e24 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009e24 = add i32 %v0_10009e24, 12
  store i32 %v1_10009e24, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009e28

dec_label_pc_10009e28:                            ; preds = %dec_label_pc_10009dfc, %dec_label_pc_10009df0, %dec_label_pc_10009e08
  %v1_10009ebc37 = phi i32 [ %v1_10009e10, %dec_label_pc_10009dfc ], [ %v1_10009e10, %dec_label_pc_10009df0 ], [ %v1_10009e24, %dec_label_pc_10009e08 ]
  %v0_10009e28 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009e28 = icmp slt i32 %v0_10009e28, 102
  %v3_10009e28 = icmp eq i32 %v0_10009e28, 102
  store i1 %v1_10009e28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009e28, label %dec_label_pc_10009eb0, label %dec_label_pc_10009e30

dec_label_pc_10009e30:                            ; preds = %dec_label_pc_10009e28
  %v0_10009e30 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009e30 = icmp slt i32 %v0_10009e30, 0
  %v3_10009e30 = icmp eq i32 %v0_10009e30, 0
  store i1 %v1_10009e30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e30, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_10009e30, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_10009e30, -1
  br i1 %tmp80, label %dec_label_pc_10009e4c, label %dec_label_pc_10009e44

dec_label_pc_10009e44:                            ; preds = %dec_label_pc_10009e30
  %v1_10009e44 = sub i32 0, %v0_10009e30
  store i32 %v1_10009e44, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009e4c

dec_label_pc_10009e4c:                            ; preds = %dec_label_pc_10009e30, %dec_label_pc_10009e44
  %v0_10009e6031 = phi i32 [ %v0_10009e30, %dec_label_pc_10009e30 ], [ %v1_10009e44, %dec_label_pc_10009e44 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10009e50 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10009e50, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10009e60

dec_label_pc_10009e60:                            ; preds = %dec_label_pc_10009e60.backedge, %dec_label_pc_10009e4c
  %v2_10009e80 = phi i32 [ %v3_10009e80, %dec_label_pc_10009e60.backedge ], [ %v2_10009e50, %dec_label_pc_10009e4c ]
  %v0_10009e64 = phi i32 [ %v0_10009e64.pre, %dec_label_pc_10009e60.backedge ], [ 2, %dec_label_pc_10009e4c ]
  %v1_10009e60 = phi i32 [ %v1_10009e60.pre, %dec_label_pc_10009e60.backedge ], [ 10, %dec_label_pc_10009e4c ]
  %v1_10009e74 = phi i32 [ %v0_10009e60.pre, %dec_label_pc_10009e60.backedge ], [ %v0_10009e6031, %dec_label_pc_10009e4c ]
  %v2_10009e60 = sdiv i32 %v1_10009e74, %v1_10009e60
  store i32 %v2_10009e60, i32* %r0.global-to-local, align 4
  %v1_10009e64 = add i32 %v0_10009e64, 1
  store i32 %v1_10009e64, i32* %r7.global-to-local, align 4
  %v1_10009e68 = icmp slt i32 %v1_10009e64, 3
  %v3_10009e68 = icmp eq i32 %v1_10009e64, 3
  store i1 %v1_10009e68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e68, i1* %cr7_eq.global-to-local, align 1
  %v1_10009e70 = icmp slt i32 %v2_10009e60, 0
  %v2_10009e70 = icmp sgt i32 %v2_10009e60, 0
  %v3_10009e70 = icmp eq i32 %v2_10009e60, 0
  store i1 %v1_10009e70, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009e70, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009e70, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10009e60, -10
  store i32 %v2_10009e60, i32* %r11.global-to-local, align 4
  %v2_10009e74 = add i32 %v1_10009e74, 48
  %v1_10009e7c = add i32 %v2_10009e74, %tmp81
  store i32 %v1_10009e7c, i32* %r9.global-to-local, align 4
  %v1_10009e80 = trunc i32 %v1_10009e7c to i8
  %v3_10009e80 = add i32 %v2_10009e80, -1
  %v4_10009e80 = inttoptr i32 %v3_10009e80 to i8*
  store i8 %v1_10009e80, i8* %v4_10009e80, align 1
  store i32 %v3_10009e80, i32* %r10.global-to-local, align 4
  %v0_10009e84 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10009e84 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10009e84 = or i1 %v0_10009e84, %v1_10009e84
  br i1 %v2_10009e84, label %dec_label_pc_10009e60.backedge, label %dec_label_pc_10009e88

dec_label_pc_10009e60.backedge:                   ; preds = %dec_label_pc_10009e60, %dec_label_pc_10009e88
  %v0_10009e60.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e60.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10009e64.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009e60

dec_label_pc_10009e88:                            ; preds = %dec_label_pc_10009e60
  %v0_10009e88 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10009e88, label %dec_label_pc_10009e8c, label %dec_label_pc_10009e60.backedge

dec_label_pc_10009e8c:                            ; preds = %dec_label_pc_10009e88
  %v1_10009e8c = add i32 %v2_10009e80, -2
  store i32 %v1_10009e8c, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_10009e94 = add i32 %v2_10009e80, -3
  store i32 %v1_10009e94, i32* %r11.global-to-local, align 4
  %v0_10009e98 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009e98 = trunc i32 %v0_10009e98 to i8
  %v4_10009e98 = inttoptr i32 %v1_10009e8c to i8*
  store i8 %v1_10009e98, i8* %v4_10009e98, align 1
  %v0_10009e9c = load i32, i32* %r5.global-to-local, align 4
  %v1_10009e9c = trunc i32 %v0_10009e9c to i8
  %v2_10009e9c = load i32, i32* %r9.global-to-local, align 4
  %v3_10009e9c = add i32 %v2_10009e9c, -1
  %v4_10009e9c = inttoptr i32 %v3_10009e9c to i8*
  store i8 %v1_10009e9c, i8* %v4_10009e9c, align 1
  %v0_10009ea0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009ea0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ea0 = inttoptr i32 %v1_10009ea0 to i32*
  store i32 %v0_10009ea0, i32* %v2_10009ea0, align 4
  %v0_10009ea4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009ea4 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ea4 = add i32 %v1_10009ea4, 4
  %v3_10009ea4 = inttoptr i32 %v2_10009ea4 to i32*
  store i32 %v0_10009ea4, i32* %v3_10009ea4, align 4
  %v0_10009ea8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ea8 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ea8 = add i32 %v1_10009ea8, 8
  %v3_10009ea8 = inttoptr i32 %v2_10009ea8 to i32*
  store i32 %v0_10009ea8, i32* %v3_10009ea8, align 4
  %v0_10009eac = load i32, i32* %r8.global-to-local, align 4
  %v1_10009eac = add i32 %v0_10009eac, 12
  store i32 %v1_10009eac, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009eb0

dec_label_pc_10009eb0:                            ; preds = %dec_label_pc_10009e28, %dec_label_pc_10009a04, %dec_label_pc_10009e8c
  %v0_10009f2c = phi i32 [ %v1_10009ebc37, %dec_label_pc_10009e28 ], [ %v2_10009a10, %dec_label_pc_10009a04 ], [ %v1_10009eac, %dec_label_pc_10009e8c ]
  %v2_10009eb0 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_10009eb0, i32* %r9.global-to-local, align 4
  %v1_10009ec0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10009eb4

dec_label_pc_10009eb4:                            ; preds = %dec_label_pc_10009eb4, %dec_label_pc_10009eb0
  %v1_10009ec0 = phi i32 [ %v2_10009ec0, %dec_label_pc_10009eb4 ], [ %v1_10009ec0.pre, %dec_label_pc_10009eb0 ]
  %v0_10009eb4 = phi i32 [ %v1_10009eb8, %dec_label_pc_10009eb4 ], [ %v2_10009eb0, %dec_label_pc_10009eb0 ]
  %v1_10009eb4 = inttoptr i32 %v0_10009eb4 to i32*
  %v2_10009eb4 = load i32, i32* %v1_10009eb4, align 4
  store i32 %v2_10009eb4, i32* %r0.global-to-local, align 4
  %v1_10009eb8 = add i32 %v0_10009eb4, 12
  store i32 %v1_10009eb8, i32* %r9.global-to-local, align 4
  %v2_10009ebc = icmp ult i32 %v1_10009eb8, %v0_10009f2c
  %v2_10009ec0 = sub i32 %v1_10009ec0, %v2_10009eb4
  store i32 %v2_10009ec0, i32* @r28, align 4
  br i1 %v2_10009ebc, label %dec_label_pc_10009eb4, label %dec_label_pc_10009ec8

dec_label_pc_10009ec8:                            ; preds = %dec_label_pc_10009eb4
  %v4_10009ebc = icmp eq i32 %v1_10009eb8, %v0_10009f2c
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009ebc, i1* %cr7_eq.global-to-local, align 1
  %v3_10009ec8 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10009f2c, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_10009ec8, 0
  %v1_10009edc = zext i1 %tmp85 to i32
  store i32 %v1_10009edc, i32* %r9.global-to-local, align 4
  %v2_10009ee0 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_10009ee0, i32* %r0.global-to-local, align 4
  %v2_10009ee4 = sub i32 %v2_10009ec0, %v1_10009edc
  store i32 %v2_10009ee4, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_10009ee4, 1
  br i1 %tmp82, label %dec_label_pc_10009f50, label %dec_label_pc_10009ef4

dec_label_pc_10009ef4:                            ; preds = %dec_label_pc_10009ec8
  %v3_10009ef4 = load i32, i32* %v2_10009930, align 4
  store i32 %v3_10009ef4, i32* %r0.global-to-local, align 4
  %v1_10009ef8 = and i32 %v3_10009ef4, 8
  store i32 %v1_10009ef8, i32* %r7.global-to-local, align 4
  %v3_10009ef8 = icmp eq i32 %v1_10009ef8, 0
  br i1 %v3_10009ef8, label %dec_label_pc_10009f1c, label %dec_label_pc_10009f00

dec_label_pc_10009f00:                            ; preds = %dec_label_pc_10009ef4
  %v1_10009f04 = add i32 %v0_10009f2c, 12
  store i32 %v1_10009f04, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1000bbf3.187 to i32), i32* %r9.global-to-local, align 4
  %v2_10009f0c = inttoptr i32 %v0_10009f2c to i32*
  store i32 160, i32* %v2_10009f0c, align 4
  %v0_10009f10 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009f10 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f10 = add i32 %v1_10009f10, 4
  %v3_10009f10 = inttoptr i32 %v2_10009f10 to i32*
  store i32 %v0_10009f10, i32* %v3_10009f10, align 4
  %v0_10009f14 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f14 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f14 = add i32 %v1_10009f14, 8
  %v3_10009f14 = inttoptr i32 %v2_10009f14 to i32*
  store i32 %v0_10009f14, i32* %v3_10009f14, align 4
  br label %dec_label_pc_10009f50

dec_label_pc_10009f1c:                            ; preds = %dec_label_pc_10009ef4
  %v1_10009f1c = add i32 %tmp, 16
  %v2_10009f1c = inttoptr i32 %v1_10009f1c to i32*
  %v3_10009f1c = load i32, i32* %v2_10009f1c, align 4
  store i32 %v3_10009f1c, i32* %r0.global-to-local, align 4
  %v1_10009f20 = icmp slt i32 %v3_10009f1c, 48
  %v3_10009f20 = icmp eq i32 %v3_10009f1c, 48
  store i1 %v1_10009f20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009f20, label %dec_label_pc_10009f28, label %dec_label_pc_10009f44

dec_label_pc_10009f28:                            ; preds = %dec_label_pc_10009f1c
  %v3_10009f28 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10009f2c, i32* @r30, align 4
  %v2_10009f30 = add i32 %v3_10009f28, %v2_10009ee4
  store i32 %v2_10009f30, i32* %r0.global-to-local, align 4
  store i32 %v2_10009f30, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10009f50

dec_label_pc_10009f3c:                            ; preds = %dec_label_pc_10009f58
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10009f8c

dec_label_pc_10009f44:                            ; preds = %dec_label_pc_10009f1c
  store i32 %v2_10009ec0, i32* %r0.global-to-local, align 4
  store i32 %v0_10009f2c, i32* @r30, align 4
  br label %dec_label_pc_10009f50

dec_label_pc_10009f50:                            ; preds = %dec_label_pc_10009ec8, %dec_label_pc_10009f28, %dec_label_pc_10009f00, %dec_label_pc_10009f44
  store i32 0, i32* @r29, align 4
  %v2_10009f54 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10009f54, i32* @r31, align 4
  br label %dec_label_pc_10009f58

dec_label_pc_10009f58:                            ; preds = %dec_label_pc_10009f88, %dec_label_pc_10009f50
  %v0_10009f68 = phi i32 [ %v1_10009f74, %dec_label_pc_10009f88 ], [ %v2_10009f54, %dec_label_pc_10009f50 ]
  %v1_10009f58 = inttoptr i32 %v0_10009f68 to i32*
  %v2_10009f58 = load i32, i32* %v1_10009f58, align 4
  store i32 %v2_10009f58, i32* %r4.global-to-local, align 4
  %v0_10009f5c = load i32, i32* @r27, align 4
  store i32 %v0_10009f5c, i32* %r3.global-to-local, align 4
  %v1_10009f60 = add i32 %v0_10009f68, 4
  %v2_10009f60 = inttoptr i32 %v1_10009f60 to i32*
  %v3_10009f60 = load i32, i32* %v2_10009f60, align 4
  store i32 %v3_10009f60, i32* %r5.global-to-local, align 4
  %v0_10009f64 = load i32, i32* @r26, align 4
  store i32 %v0_10009f64, i32* %ctr.global-to-local, align 4
  %v1_10009f68 = add i32 %v0_10009f68, 8
  %v2_10009f68 = inttoptr i32 %v1_10009f68 to i32*
  %v3_10009f68 = load i32, i32* %v2_10009f68, align 4
  store i32 %v3_10009f68, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10009f64)
  %v0_10009f70 = load i32, i32* @r31, align 4
  %v1_10009f70 = add i32 %v0_10009f70, 4
  %v2_10009f70 = inttoptr i32 %v1_10009f70 to i32*
  %v3_10009f70 = load i32, i32* %v2_10009f70, align 4
  store i32 %v3_10009f70, i32* %r0.global-to-local, align 4
  %v1_10009f74 = add i32 %v0_10009f70, 12
  store i32 %v1_10009f74, i32* @r31, align 4
  %v0_10009f78 = load i32, i32* @r29, align 4
  %v1_10009f78 = load i32, i32* %r3.global-to-local, align 4
  %v2_10009f78 = add i32 %v1_10009f78, %v0_10009f78
  store i32 %v2_10009f78, i32* @r29, align 4
  %v2_10009f7c = icmp slt i32 %v1_10009f78, %v3_10009f70
  %v4_10009f7c = icmp eq i32 %v1_10009f78, %v3_10009f70
  store i1 %v2_10009f7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009f7c, i1* %cr7_eq.global-to-local, align 1
  %v1_10009f80 = load i32, i32* @r30, align 4
  %v2_10009f80 = icmp ult i32 %v1_10009f74, %v1_10009f80
  %v3_10009f80 = icmp ugt i32 %v1_10009f74, %v1_10009f80
  %v4_10009f80 = icmp eq i32 %v1_10009f74, %v1_10009f80
  store i1 %v2_10009f80, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10009f80, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10009f80, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10009f7c, label %dec_label_pc_10009f88, label %dec_label_pc_10009f3c

dec_label_pc_10009f88:                            ; preds = %dec_label_pc_10009f58
  br i1 %v2_10009f80, label %dec_label_pc_10009f58, label %dec_label_pc_10009f8c

dec_label_pc_10009f8c:                            ; preds = %dec_label_pc_10009f88, %dec_label_pc_10009f3c
  %v0_10009f90 = phi i32 [ -1, %dec_label_pc_10009f3c ], [ %v2_10009f78, %dec_label_pc_10009f88 ]
  store i32 %v0_100098e0, i32* %r0.global-to-local, align 4
  store i32 %v0_10009f90, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009f90

; uselistorder directives
  uselistorder i32 %v0_10009f90, { 1, 0 }
  uselistorder i32 %v1_10009f78, { 2, 1, 0 }
  uselistorder i32 %v1_10009f74, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10009f70, { 1, 0, 2 }
  uselistorder i32 %v0_10009f68, { 0, 2, 1 }
  uselistorder i32 %v3_10009f1c, { 1, 0, 2 }
  uselistorder i32 %v1_10009edc, { 1, 0 }
  uselistorder i32 %v2_10009ec0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10009eb8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10009eb4, { 1, 0 }
  uselistorder i32 %v0_10009f2c, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10009e80, { 1, 2, 0 }
  uselistorder i32 %v1_10009e64, { 1, 0, 2 }
  uselistorder i32 %v2_10009e60, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_10009e30, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_10009e00, { 2, 0, 1 }
  uselistorder i32 %v2_10009dfc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10009d6c, { 1, 0 }
  uselistorder i32 %v2_10009cd0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10009ca4, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10009c6c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10009c64, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10009c30, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10009c20, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10009c14, { 1, 0, 2 }
  uselistorder i32 %v1_10009bf8, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10009bb0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10009ba0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10009b84, { 1, 0 }
  uselistorder i32 %v1_10009b60, { 1, 0 }
  uselistorder i32 %v2_10009b40, { 1, 0, 2 }
  uselistorder i32 %v0_10009ae8, { 1, 0 }
  uselistorder i32 %v1_1000994c, { 1, 0 }
  uselistorder i32 %v0_100099d8, { 2, 1, 0 }
  uselistorder i32 %v1_10009920, { 1, 0 }
  uselistorder i32 %v1_10009900, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 4, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 36, 37, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 27, 25, 28, 29, 26, 31, 30, 32, 33, 34, 35, 38 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 16, 15, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 45, { 1, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 2, 3, 4, 6, 5, 7, 8, 0, 9, 1 }
  uselistorder i1 true, { 3, 0, 2, 1, 4 }
  uselistorder i1 false, { 6, 7, 8, 9, 2, 3, 4, 5, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 12, 11, 10, 9, 6, 2, 1, 5, 4, 0, 8, 7, 3 }
  uselistorder i32 17, { 0, 3, 7, 4, 5, 8, 6, 1, 2 }
  uselistorder i32 48, { 10, 11, 1, 12, 13, 14, 6, 15, 5, 16, 2, 0, 17, 18, 24, 19, 20, 21, 3, 22, 23, 25, 7, 8, 9, 4 }
  uselistorder i32 -10, { 0, 2, 3, 4, 1 }
  uselistorder i32 10, { 1, 15, 2, 16, 0, 4, 9, 17, 18, 41, 10, 26, 27, 28, 29, 30, 31, 32, 22, 23, 19, 20, 21, 34, 33, 35, 36, 5, 38, 11, 24, 12, 25, 37, 6, 13, 3, 8, 7, 40, 14, 39 }
  uselistorder i32 9, { 5, 1, 6, 2, 7, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 4 }
  uselistorder i32 -2147483648, { 9, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14, 0 }
  uselistorder i32 268500992, { 6, 0, 7, 8, 9, 11, 10, 1, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000bbf0.185 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder i32 12, { 16, 17, 18, 19, 20, 21, 22, 23, 5, 8, 24, 25, 35, 26, 36, 27, 28, 59, 37, 38, 39, 0, 40, 41, 42, 12, 29, 60, 43, 44, 13, 9, 10, 11, 14, 30, 46, 45, 31, 53, 54, 55, 56, 4, 57, 1, 2, 3, 15, 47, 48, 49, 50, 32, 33, 6, 34, 51, 7, 52, 58 }
  uselistorder i32 6, { 4, 12, 13, 5, 14, 7, 15, 6, 8, 20, 21, 22, 23, 24, 1, 2, 3, 16, 17, 18, 19, 9, 10, 11, 0 }
  uselistorder i32 97, { 7, 4, 5, 6, 8, 0, 3, 1, 2 }
  uselistorder i32 32, { 24, 17, 16, 25, 26, 27, 28, 18, 29, 30, 31, 32, 33, 34, 35, 0, 39, 40, 41, 19, 42, 43, 20, 44, 45, 46, 50, 51, 47, 10, 11, 48, 49, 37, 38, 36, 1, 2, 3, 9, 8, 5, 12, 4, 21, 22, 7, 13, 6, 23, 14, 15 }
  uselistorder i32 11, { 3, 4, 0, 1, 5, 6, 7, 8, 9, 2, 10, 11, 12 }
  uselistorder i32* @r26, { 3, 4, 1, 25, 26, 27, 28, 69, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 29, 30, 31, 34, 32, 33, 35, 36, 37, 38, 39, 23, 24, 40, 41, 42, 43, 70, 71, 44, 45, 46, 2, 47, 48, 49, 50, 51, 52, 53, 54, 55, 72, 68, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32* @r27, { 12, 13, 80, 81, 82, 14, 15, 16, 17, 1, 18, 19, 20, 21, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 9, 10, 11, 83, 2, 84, 6, 33, 34, 38, 39, 40, 41, 42, 43, 3, 44, 45, 46, 47, 35, 36, 7, 37, 5, 4, 48, 49, 50, 51, 52, 53, 54, 85, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 86, 87, 78, 79, 74, 75, 76, 77 }
  uselistorder label %dec_label_pc_10009f50, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10009eb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009e60.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10009e28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009dfc, { 1, 0 }
  uselistorder label %dec_label_pc_10009de8, { 1, 0 }
  uselistorder label %dec_label_pc_10009dcc, { 1, 0 }
  uselistorder label %dec_label_pc_10009da4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009d84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009d60, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009d44, { 1, 0 }
  uselistorder label %dec_label_pc_10009cb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009c50, { 1, 0 }
  uselistorder label %dec_label_pc_10009c10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009bd4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ba8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009b88, { 1, 0 }
  uselistorder label %dec_label_pc_10009b14, { 1, 0 }
  uselistorder label %dec_label_pc_10009a04, { 1, 0 }
  uselistorder label %dec_label_pc_1000995c, { 1, 0 }
  uselistorder label %dec_label_pc_10009930, { 1, 0 }
  uselistorder label %dec_label_pc_10009924, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10009fa8 = urem i32 %arg1, 256
  store i32 %v1_10009fa8, i32* %r4.global-to-local, align 4
  %v0_10009fc87 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_10009fcc13 = icmp eq i32 %arg2, 0
  br i1 %v2_10009fcc13, label %dec_label_pc_10009fd4, label %dec_label_pc_10009fd0

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009fd0
  %v1_10009fb4 = inttoptr i32 %v0_10009fb4 to i8*
  %v2_10009fb4 = load i8, i8* %v1_10009fb4, align 1
  %v3_10009fb4 = zext i8 %v2_10009fb4 to i32
  %v0_10009fb8 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009fb8 = add i32 %v0_10009fb8, -1
  store i32 %v1_10009fb8, i32* %r5.global-to-local, align 4
  %v1_10009fbc = load i32, i32* %r4.global-to-local, align 4
  %v4_10009fbc = icmp eq i32 %v3_10009fb4, %v1_10009fbc
  %v0_10009fc0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10009fbc, i32 %v0_10009fc0)
  %v0_10009fc4 = load i32, i32* @r3, align 4
  %v1_10009fc4 = add i32 %v0_10009fc4, 1
  store i32 %v1_10009fc4, i32* @r3, align 4
  %v0_10009fcc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009fcc = add i32 %v0_10009fcc, -1
  store i32 %v1_10009fcc, i32* %ctr.global-to-local, align 4
  %v2_10009fcc = icmp eq i32 %v1_10009fcc, 0
  br i1 %v2_10009fcc, label %dec_label_pc_10009fd4.loopexit, label %dec_label_pc_10009fd0

dec_label_pc_10009fd0:                            ; preds = %entry, %dec_label_pc_10009fb4
  %v0_10009fb4 = phi i32 [ %v1_10009fc4, %dec_label_pc_10009fb4 ], [ %v0_10009fc87, %entry ]
  %v0_10009fd0.in.in = phi i32 [ %v1_10009fc4, %dec_label_pc_10009fb4 ], [ %v0_10009fc87, %entry ]
  %v0_10009fd0.in = urem i32 %v0_10009fd0.in.in, 4
  %v0_10009fd0 = icmp eq i32 %v0_10009fd0.in, 0
  br i1 %v0_10009fd0, label %dec_label_pc_10009fd4.loopexit, label %dec_label_pc_10009fb4

dec_label_pc_10009fd4.loopexit:                   ; preds = %dec_label_pc_10009fd0, %dec_label_pc_10009fb4
  %v0_10009ffc16.ph = phi i32 [ %v1_10009fc4, %dec_label_pc_10009fb4 ], [ %v0_10009fb4, %dec_label_pc_10009fd0 ]
  %v0_10009fd4.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10009fd8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009fd4

dec_label_pc_10009fd4:                            ; preds = %dec_label_pc_10009fd4.loopexit, %entry
  %v0_10009fd8 = phi i32 [ 0, %entry ], [ %v0_10009fd8.pre, %dec_label_pc_10009fd4.loopexit ]
  %v0_10009fd4 = phi i32 [ %v1_10009fa8, %entry ], [ %v0_10009fd4.pre, %dec_label_pc_10009fd4.loopexit ]
  %v0_10009ffc16 = phi i32 [ %v0_10009fc87, %entry ], [ %v0_10009ffc16.ph, %dec_label_pc_10009fd4.loopexit ]
  %v1_10009fd4 = mul i32 %v0_10009fd4, 256
  %v1_10009fd8 = udiv i32 %v0_10009fd8, 4
  %v2_10009fdc = or i32 %v1_10009fd4, %v0_10009fd4
  %v1_10009fe4 = mul i32 %v2_10009fdc, 65536
  %v2_10009ff0 = or i32 %v1_10009fe4, %v2_10009fdc
  store i32 %v1_10009fd8, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10009fd8, 4
  br i1 %tmp, label %dec_label_pc_1000a084, label %dec_label_pc_10009ffc

dec_label_pc_10009ffc:                            ; preds = %dec_label_pc_10009fd4, %dec_label_pc_1000a080.backedge
  %v0_1000a080 = phi i32 [ %v1_1000a080, %dec_label_pc_1000a080.backedge ], [ %v1_10009fd8, %dec_label_pc_10009fd4 ]
  %v0_1000a004 = phi i32 [ %v1_1000a004, %dec_label_pc_1000a080.backedge ], [ %v0_10009fd8, %dec_label_pc_10009fd4 ]
  %v0_1000a03c = phi i32 [ %v1_1000a000, %dec_label_pc_1000a080.backedge ], [ %v0_10009ffc16, %dec_label_pc_10009fd4 ]
  %v1_10009ffc = inttoptr i32 %v0_1000a03c to i32*
  %v2_10009ffc = load i32, i32* %v1_10009ffc, align 4
  %v1_1000a000 = add i32 %v0_1000a03c, 4
  store i32 %v1_1000a000, i32* @r3, align 4
  %v1_1000a004 = add i32 %v0_1000a004, -4
  store i32 %v1_1000a004, i32* %r5.global-to-local, align 4
  %v1_1000a008 = add i32 %v0_1000a03c, 1
  %v2_1000a00c = xor i32 %v2_10009ffc, %v2_10009ff0
  %v1_1000a014 = add i32 %v2_1000a00c, 2130640639
  %v2_1000a018 = xor i32 %v1_1000a014, %v2_1000a00c
  %v2_1000a01c = and i32 %v2_1000a018, -2130640640
  %v6_1000a01c = icmp eq i32 %v2_1000a01c, -2130640640
  br i1 %v6_1000a01c, label %dec_label_pc_1000a080.backedge, label %dec_label_pc_1000a028

dec_label_pc_1000a080.backedge:                   ; preds = %dec_label_pc_10009ffc, %dec_label_pc_1000a06c
  %v1_1000a080 = add i32 %v0_1000a080, -1
  store i32 %v1_1000a080, i32* %ctr.global-to-local, align 4
  %v2_1000a080 = icmp eq i32 %v1_1000a080, 0
  br i1 %v2_1000a080, label %dec_label_pc_1000a084, label %dec_label_pc_10009ffc

dec_label_pc_1000a028:                            ; preds = %dec_label_pc_10009ffc
  %v2_1000a028 = inttoptr i32 %v0_1000a03c to i8*
  %v3_1000a028 = load i8, i8* %v2_1000a028, align 1
  %v4_1000a028 = zext i8 %v3_1000a028 to i32
  %v1_1000a02c = add i32 %v0_1000a03c, 3
  %v1_1000a030 = add i32 %v0_1000a03c, 2
  %v4_1000a034 = icmp eq i32 %v4_1000a028, %v0_10009fd4
  br i1 %v4_1000a034, label %dec_label_pc_1000a03c, label %dec_label_pc_1000a044

dec_label_pc_1000a03c:                            ; preds = %dec_label_pc_1000a028
  ret i32 %v0_1000a03c

dec_label_pc_1000a044:                            ; preds = %dec_label_pc_1000a028
  %v2_1000a044 = inttoptr i32 %v1_1000a008 to i8*
  %v3_1000a044 = load i8, i8* %v2_1000a044, align 1
  %v4_1000a044 = zext i8 %v3_1000a044 to i32
  %v4_1000a048 = icmp eq i32 %v4_1000a044, %v0_10009fd4
  br i1 %v4_1000a048, label %dec_label_pc_1000a050, label %dec_label_pc_1000a058

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_1000a044
  ret i32 %v1_1000a008

dec_label_pc_1000a058:                            ; preds = %dec_label_pc_1000a044
  %v2_1000a058 = inttoptr i32 %v1_1000a030 to i8*
  %v3_1000a058 = load i8, i8* %v2_1000a058, align 1
  %v4_1000a058 = zext i8 %v3_1000a058 to i32
  %v4_1000a05c = icmp eq i32 %v4_1000a058, %v0_10009fd4
  br i1 %v4_1000a05c, label %dec_label_pc_1000a064, label %dec_label_pc_1000a06c

dec_label_pc_1000a064:                            ; preds = %dec_label_pc_1000a058
  ret i32 %v1_1000a030

dec_label_pc_1000a06c:                            ; preds = %dec_label_pc_1000a058
  %v2_1000a06c = inttoptr i32 %v1_1000a02c to i8*
  %v3_1000a06c = load i8, i8* %v2_1000a06c, align 1
  %v4_1000a06c = zext i8 %v3_1000a06c to i32
  %v4_1000a070 = icmp eq i32 %v4_1000a06c, %v0_10009fd4
  br i1 %v4_1000a070, label %dec_label_pc_1000a078, label %dec_label_pc_1000a080.backedge

dec_label_pc_1000a078:                            ; preds = %dec_label_pc_1000a06c
  ret i32 %v1_1000a02c

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a080.backedge, %dec_label_pc_10009fd4
  %v0_1000a09026 = phi i32 [ %v0_10009ffc16, %dec_label_pc_10009fd4 ], [ %v1_1000a000, %dec_label_pc_1000a080.backedge ]
  %v0_1000a084 = phi i32 [ %v0_10009fd8, %dec_label_pc_10009fd4 ], [ %v1_1000a004, %dec_label_pc_1000a080.backedge ]
  %v1_1000a084 = add i32 %v0_1000a084, 1
  store i32 %v1_1000a084, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a084, i32* %ctr.global-to-local, align 4
  %v2_1000a0a03 = icmp eq i32 %v0_1000a084, 0
  br i1 %v2_1000a0a03, label %dec_label_pc_1000a0a4, label %dec_label_pc_1000a090

dec_label_pc_1000a090:                            ; preds = %dec_label_pc_1000a084, %dec_label_pc_1000a090.dec_label_pc_1000a090_crit_edge
  %v1_1000a094 = phi i32 [ %v1_1000a094.pre, %dec_label_pc_1000a090.dec_label_pc_1000a090_crit_edge ], [ %v0_10009fd4, %dec_label_pc_1000a084 ]
  %v0_1000a090 = phi i32 [ %v1_1000a09c, %dec_label_pc_1000a090.dec_label_pc_1000a090_crit_edge ], [ %v0_1000a09026, %dec_label_pc_1000a084 ]
  %v1_1000a090 = inttoptr i32 %v0_1000a090 to i8*
  %v2_1000a090 = load i8, i8* %v1_1000a090, align 1
  %v3_1000a090 = zext i8 %v2_1000a090 to i32
  %v4_1000a094 = icmp eq i32 %v3_1000a090, %v1_1000a094
  %v0_1000a098 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a094, i32 %v0_1000a098)
  %v0_1000a09c = load i32, i32* @r3, align 4
  %v1_1000a09c = add i32 %v0_1000a09c, 1
  store i32 %v1_1000a09c, i32* @r3, align 4
  %v0_1000a0a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a0a0 = add i32 %v0_1000a0a0, -1
  store i32 %v1_1000a0a0, i32* %ctr.global-to-local, align 4
  %v2_1000a0a0 = icmp eq i32 %v1_1000a0a0, 0
  br i1 %v2_1000a0a0, label %dec_label_pc_1000a0a4, label %dec_label_pc_1000a090.dec_label_pc_1000a090_crit_edge

dec_label_pc_1000a090.dec_label_pc_1000a090_crit_edge: ; preds = %dec_label_pc_1000a090
  %v1_1000a094.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a090

dec_label_pc_1000a0a4:                            ; preds = %dec_label_pc_1000a090, %dec_label_pc_1000a084
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000a0a0, { 1, 0 }
  uselistorder i32 %v1_1000a09c, { 1, 0 }
  uselistorder i32 %v0_1000a084, { 1, 2, 0 }
  uselistorder i32 %v1_1000a080, { 2, 1, 0 }
  uselistorder i32 %v1_1000a004, { 0, 2, 1 }
  uselistorder i32 %v1_1000a000, { 0, 2, 1 }
  uselistorder i32 %v0_1000a03c, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10009fdc, { 1, 0 }
  uselistorder i32 %v1_10009fd8, { 1, 0 }
  uselistorder i32 %v0_10009ffc16, { 1, 0 }
  uselistorder i32 %v0_10009fd4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10009fd8, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10009fcc, { 1, 0 }
  uselistorder i32 %v1_10009fc4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10009fc87, { 2, 0, 1 }
  uselistorder i32 %v1_10009fa8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a090, { 1, 0 }
  uselistorder label %dec_label_pc_1000a080.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10009fd0, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000a0b0 = urem i32 %arg2, 256
  store i32 %v1_1000a0b0, i32* %r4.global-to-local, align 4
  %v2_1000a0b8 = add i32 %arg3, %arg1
  store i32 %v2_1000a0b8, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000a0d413 = icmp eq i32 %arg3, 0
  br i1 %v2_1000a0d413, label %dec_label_pc_1000a0dc, label %dec_label_pc_1000a0d8

dec_label_pc_1000a0c0:                            ; preds = %dec_label_pc_1000a0d8
  %v1_1000a0c0 = add i32 %v0_1000a0c0, -1
  %v2_1000a0c0 = inttoptr i32 %v1_1000a0c0 to i8*
  %v3_1000a0c0 = load i8, i8* %v2_1000a0c0, align 1
  %v4_1000a0c0 = zext i8 %v3_1000a0c0 to i32
  store i32 %v1_1000a0c0, i32* %r3.global-to-local, align 4
  %v0_1000a0c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a0c4 = add i32 %v0_1000a0c4, -1
  store i32 %v1_1000a0c4, i32* %r5.global-to-local, align 4
  %v1_1000a0c8 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a0c8 = icmp eq i32 %v4_1000a0c0, %v1_1000a0c8
  %v0_1000a0cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a0c8, i32 %v0_1000a0cc)
  %v0_1000a0d0 = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a0d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a0d4 = add i32 %v0_1000a0d4, -1
  store i32 %v1_1000a0d4, i32* %ctr.global-to-local, align 4
  %v2_1000a0d4 = icmp eq i32 %v1_1000a0d4, 0
  br i1 %v2_1000a0d4, label %dec_label_pc_1000a0dc.loopexit, label %dec_label_pc_1000a0d8

dec_label_pc_1000a0d8:                            ; preds = %entry, %dec_label_pc_1000a0c0
  %v0_1000a0c0 = phi i32 [ %v0_1000a0d0, %dec_label_pc_1000a0c0 ], [ %v2_1000a0b8, %entry ]
  %v0_1000a0d8.in.in = phi i32 [ %v0_1000a0d0, %dec_label_pc_1000a0c0 ], [ %v2_1000a0b8, %entry ]
  %v0_1000a0d8.in = urem i32 %v0_1000a0d8.in.in, 4
  %v0_1000a0d8 = icmp eq i32 %v0_1000a0d8.in, 0
  br i1 %v0_1000a0d8, label %dec_label_pc_1000a0dc.loopexit, label %dec_label_pc_1000a0c0

dec_label_pc_1000a0dc.loopexit:                   ; preds = %dec_label_pc_1000a0d8, %dec_label_pc_1000a0c0
  %v0_1000a10416.ph = phi i32 [ %v0_1000a0d0, %dec_label_pc_1000a0c0 ], [ %v0_1000a0c0, %dec_label_pc_1000a0d8 ]
  %v0_1000a0dc.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000a0e0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a0dc

dec_label_pc_1000a0dc:                            ; preds = %dec_label_pc_1000a0dc.loopexit, %entry
  %v0_1000a0e0 = phi i32 [ 0, %entry ], [ %v0_1000a0e0.pre, %dec_label_pc_1000a0dc.loopexit ]
  %v0_1000a0dc = phi i32 [ %v1_1000a0b0, %entry ], [ %v0_1000a0dc.pre, %dec_label_pc_1000a0dc.loopexit ]
  %v0_1000a10416 = phi i32 [ %v2_1000a0b8, %entry ], [ %v0_1000a10416.ph, %dec_label_pc_1000a0dc.loopexit ]
  %v1_1000a0dc = mul i32 %v0_1000a0dc, 256
  %v1_1000a0e0 = udiv i32 %v0_1000a0e0, 4
  %v2_1000a0e4 = or i32 %v1_1000a0dc, %v0_1000a0dc
  %v1_1000a0ec = mul i32 %v2_1000a0e4, 65536
  %v2_1000a0f8 = or i32 %v1_1000a0ec, %v2_1000a0e4
  store i32 %v2_1000a0f8, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_1000a0e0, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000a0e0, 4
  br i1 %tmp, label %dec_label_pc_1000a17c, label %dec_label_pc_1000a104

dec_label_pc_1000a104:                            ; preds = %dec_label_pc_1000a0dc, %dec_label_pc_1000a178.backedge.dec_label_pc_1000a104_crit_edge
  %v0_1000a17821 = phi i32 [ %v1_1000a178, %dec_label_pc_1000a178.backedge.dec_label_pc_1000a104_crit_edge ], [ %v1_1000a0e0, %dec_label_pc_1000a0dc ]
  %v0_1000a124 = phi i32 [ %v0_1000a124.pre, %dec_label_pc_1000a178.backedge.dec_label_pc_1000a104_crit_edge ], [ -2130640640, %dec_label_pc_1000a0dc ]
  %v0_1000a10c = phi i32 [ %v0_1000a10c.pre, %dec_label_pc_1000a178.backedge.dec_label_pc_1000a104_crit_edge ], [ %v2_1000a0f8, %dec_label_pc_1000a0dc ]
  %v0_1000a108 = phi i32 [ %v0_1000a108.pre, %dec_label_pc_1000a178.backedge.dec_label_pc_1000a104_crit_edge ], [ %v0_1000a0e0, %dec_label_pc_1000a0dc ]
  %v0_1000a104 = phi i32 [ %v0_1000a104.pre, %dec_label_pc_1000a178.backedge.dec_label_pc_1000a104_crit_edge ], [ %v0_1000a10416, %dec_label_pc_1000a0dc ]
  %v1_1000a104 = add i32 %v0_1000a104, -4
  %v2_1000a104 = inttoptr i32 %v1_1000a104 to i32*
  %v3_1000a104 = load i32, i32* %v2_1000a104, align 4
  store i32 %v1_1000a104, i32* %r3.global-to-local, align 4
  %v1_1000a108 = add i32 %v0_1000a108, -4
  store i32 %v1_1000a108, i32* %r5.global-to-local, align 4
  %v2_1000a10c = xor i32 %v3_1000a104, %v0_1000a10c
  %v1_1000a110 = add i32 %v0_1000a104, -3
  %v1_1000a118 = add i32 %v2_1000a10c, 2130640639
  %v1_1000a120 = add i32 %v0_1000a104, -2
  %v2_1000a11c = sub i32 -1, %v2_1000a10c
  %v2_1000a124 = xor i32 %v1_1000a118, %v2_1000a11c
  %v3_1000a124 = and i32 %v2_1000a124, %v0_1000a124
  %v6_1000a124 = icmp eq i32 %v3_1000a124, 0
  %v1_1000a128 = add i32 %v0_1000a104, -1
  br i1 %v6_1000a124, label %dec_label_pc_1000a178.backedge, label %dec_label_pc_1000a130

dec_label_pc_1000a130:                            ; preds = %dec_label_pc_1000a104
  %v2_1000a130 = inttoptr i32 %v1_1000a128 to i8*
  %v3_1000a130 = load i8, i8* %v2_1000a130, align 1
  %v4_1000a130 = zext i8 %v3_1000a130 to i32
  %v1_1000a134 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a134 = icmp eq i32 %v4_1000a130, %v1_1000a134
  br i1 %v4_1000a134, label %dec_label_pc_1000a13c, label %dec_label_pc_1000a144

dec_label_pc_1000a13c:                            ; preds = %dec_label_pc_1000a130
  store i32 %v1_1000a128, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a128

dec_label_pc_1000a144:                            ; preds = %dec_label_pc_1000a130
  %v2_1000a144 = inttoptr i32 %v1_1000a120 to i8*
  %v3_1000a144 = load i8, i8* %v2_1000a144, align 1
  %v4_1000a144 = zext i8 %v3_1000a144 to i32
  %v4_1000a148 = icmp eq i32 %v4_1000a144, %v1_1000a134
  br i1 %v4_1000a148, label %dec_label_pc_1000a150, label %dec_label_pc_1000a158

dec_label_pc_1000a150:                            ; preds = %dec_label_pc_1000a144
  store i32 %v1_1000a120, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a120

dec_label_pc_1000a158:                            ; preds = %dec_label_pc_1000a144
  %v2_1000a158 = inttoptr i32 %v1_1000a110 to i8*
  %v3_1000a158 = load i8, i8* %v2_1000a158, align 1
  %v4_1000a158 = zext i8 %v3_1000a158 to i32
  %v4_1000a15c = icmp eq i32 %v4_1000a158, %v1_1000a134
  br i1 %v4_1000a15c, label %dec_label_pc_1000a164, label %dec_label_pc_1000a16c

dec_label_pc_1000a164:                            ; preds = %dec_label_pc_1000a158
  store i32 %v1_1000a110, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a110

dec_label_pc_1000a16c:                            ; preds = %dec_label_pc_1000a158
  %v1_1000a16c = inttoptr i32 %v1_1000a104 to i8*
  %v2_1000a16c = load i8, i8* %v1_1000a16c, align 1
  %v3_1000a16c = zext i8 %v2_1000a16c to i32
  %v4_1000a170 = icmp eq i32 %v3_1000a16c, %v1_1000a134
  %v0_1000a174 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a170, i32 %v0_1000a174)
  %v0_1000a178.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a178.backedge

dec_label_pc_1000a178.backedge:                   ; preds = %dec_label_pc_1000a16c, %dec_label_pc_1000a104
  %v0_1000a178 = phi i32 [ %v0_1000a178.pre, %dec_label_pc_1000a16c ], [ %v0_1000a17821, %dec_label_pc_1000a104 ]
  %v1_1000a178 = add i32 %v0_1000a178, -1
  store i32 %v1_1000a178, i32* %ctr.global-to-local, align 4
  %v2_1000a178 = icmp eq i32 %v1_1000a178, 0
  br i1 %v2_1000a178, label %dec_label_pc_1000a178.dec_label_pc_1000a17c_crit_edge, label %dec_label_pc_1000a178.backedge.dec_label_pc_1000a104_crit_edge

dec_label_pc_1000a178.backedge.dec_label_pc_1000a104_crit_edge: ; preds = %dec_label_pc_1000a178.backedge
  %v0_1000a104.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a108.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000a10c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000a124.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a104

dec_label_pc_1000a178.dec_label_pc_1000a17c_crit_edge: ; preds = %dec_label_pc_1000a178.backedge
  %v0_1000a17c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a17c

dec_label_pc_1000a17c:                            ; preds = %dec_label_pc_1000a178.dec_label_pc_1000a17c_crit_edge, %dec_label_pc_1000a0dc
  %v0_1000a17c = phi i32 [ %v0_1000a17c.pre, %dec_label_pc_1000a178.dec_label_pc_1000a17c_crit_edge ], [ %v0_1000a0e0, %dec_label_pc_1000a0dc ]
  %v1_1000a17c = add i32 %v0_1000a17c, 1
  store i32 %v1_1000a17c, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a17c, i32* %ctr.global-to-local, align 4
  %v2_1000a1943 = icmp eq i32 %v0_1000a17c, 0
  br i1 %v2_1000a1943, label %dec_label_pc_1000a198, label %dec_label_pc_1000a188

dec_label_pc_1000a188:                            ; preds = %dec_label_pc_1000a17c, %dec_label_pc_1000a188
  %v0_1000a188 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a188 = add i32 %v0_1000a188, -1
  %v2_1000a188 = inttoptr i32 %v1_1000a188 to i8*
  %v3_1000a188 = load i8, i8* %v2_1000a188, align 1
  %v4_1000a188 = zext i8 %v3_1000a188 to i32
  store i32 %v1_1000a188, i32* %r3.global-to-local, align 4
  %v1_1000a18c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a18c = icmp eq i32 %v4_1000a188, %v1_1000a18c
  %v0_1000a190 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a18c, i32 %v0_1000a190)
  %v0_1000a194 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a194 = add i32 %v0_1000a194, -1
  store i32 %v1_1000a194, i32* %ctr.global-to-local, align 4
  %v2_1000a194 = icmp eq i32 %v1_1000a194, 0
  br i1 %v2_1000a194, label %dec_label_pc_1000a198, label %dec_label_pc_1000a188

dec_label_pc_1000a198:                            ; preds = %dec_label_pc_1000a188, %dec_label_pc_1000a17c
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000a194, { 1, 0 }
  uselistorder i32 %v0_1000a17c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a178, { 2, 1, 0 }
  uselistorder i32 %v1_1000a128, { 1, 0, 2 }
  uselistorder i32 %v1_1000a120, { 1, 0, 2 }
  uselistorder i32 %v1_1000a110, { 1, 0, 2 }
  uselistorder i32 %v2_1000a0e4, { 1, 0 }
  uselistorder i32 %v1_1000a0e0, { 1, 0 }
  uselistorder i32 %v0_1000a0dc, { 1, 0 }
  uselistorder i32 %v0_1000a0e0, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000a0d4, { 1, 0 }
  uselistorder i32 %v0_1000a0d0, { 1, 0, 2 }
  uselistorder i32 %v2_1000a0b8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000a0b0, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 5, 6, 1, 7, 8, 2, 3, 4 }
  uselistorder i32 -2130640640, { 2, 9, 0, 3, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 65536, { 0, 1, 3, 2, 4, 5, 12, 6, 7, 13, 8, 9, 10, 11 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 0, 1, 2, 3, 4, 10, 5, 6, 11, 13, 14, 15, 16, 17, 18, 8, 21, 24, 23, 9, 19, 20, 25, 22, 12, 26, 7 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 46, 7, 47, 48, 8, 9, 10, 11, 12, 52, 13, 14, 15, 16, 17, 44, 49, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 30, 31, 32, 43, 33, 34, 35, 36, 51, 45, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000a188, { 1, 0 }
  uselistorder label %dec_label_pc_1000a104, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0d8, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a1b8 = call i32 @__asm_mfcr()
  %v1_1000a1bc = and i32 %v0_1000a1b8, 268435456
  %v3_1000a1bc = icmp eq i32 %v1_1000a1bc, 0
  store i32 %v0_1000a1b8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a1bc, label %dec_label_pc_1000a1d4, label %dec_label_pc_1000a1c8

dec_label_pc_1000a1c8:                            ; preds = %entry
  %v0_1000a1c8 = call i32 @__errno_location()
  %v0_1000a1cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a1cc = inttoptr i32 %v0_1000a1c8 to i32*
  store i32 %v0_1000a1cc, i32* %v2_1000a1cc, align 4
  br label %dec_label_pc_1000a1d4

dec_label_pc_1000a1d4:                            ; preds = %entry, %dec_label_pc_1000a1c8
  %v0_1000a1e4 = phi i32 [ %v0_1000a1b8, %entry ], [ -1, %dec_label_pc_1000a1c8 ]
  ret i32 %v0_1000a1e4

; uselistorder directives
  uselistorder label %dec_label_pc_1000a1d4, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000a1e8 = load i32, i32* @r5, align 4
  store i32 %v0_1000a1e8, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_1000a1f0 = zext i1 %tmp to i32
  %v2_1000a1f0 = ashr i32 %arg1, 31
  %v3_1000a1f0 = and i32 %v2_1000a1f0, -2
  %v4_1000a1f0 = or i32 %v3_1000a1f0, %v1_1000a1f0
  %v3_1000a1f4 = inttoptr i32 %v4_1000a1f0 to i16*
  %v4_1000a1f4 = call i32 @__GI_fseeko64(i16* %v3_1000a1f4, i32 %arg1, i32 %v0_1000a1e8)
  ret i32 %v4_1000a1f4

; uselistorder directives
  uselistorder i32* @r5, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 36, 37, 38, 52, 53, 54, 55, 18, 19, 20, 3, 21, 23, 22, 24, 0, 25, 26, 27, 56, 28, 29, 30, 57, 4, 39, 40, 58, 59, 41, 60, 61, 42, 43, 44, 62, 63, 45, 46, 32, 47, 1, 48, 64, 65, 2, 66, 67, 68, 31, 69, 70, 71, 33, 34, 49, 50, 35, 72, 73, 74, 75, 51 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000a1f8 = load i32, i32* @r7, align 4
  %v0_1000a1fc = load i32, i32* @lr, align 4
  store i32 %v0_1000a1fc, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a1f8, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_1000a1f8, 3
  br i1 %tmp9, label %dec_label_pc_1000a234, label %dec_label_pc_1000a220

dec_label_pc_1000a220:                            ; preds = %entry
  %v0_1000a220 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000a22c = inttoptr i32 %v0_1000a220 to i32*
  store i32 22, i32* %v2_1000a22c, align 4
  br label %dec_label_pc_1000a2fc

dec_label_pc_1000a234:                            ; preds = %entry
  %v2_1000a234 = add i32 %tmp, 52
  %v3_1000a234 = inttoptr i32 %v2_1000a234 to i32*
  %v4_1000a234 = load i32, i32* %v3_1000a234, align 4
  store i32 %v4_1000a234, i32* @r28, align 4
  %v3_1000a238 = icmp eq i32 %v4_1000a234, 0
  br i1 %v3_1000a238, label %dec_label_pc_1000a240, label %dec_label_pc_1000a260

dec_label_pc_1000a240:                            ; preds = %dec_label_pc_1000a234
  %v2_1000a240 = add i32 %tmp, 56
  store i32 %v2_1000a240, i32* @r29, align 4
  %v2_1000a248 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000a248, i32* @r3, align 4
  %v0_1000a254 = call i32 @__pthread_return_void()
  %v0_1000a25c = call i32 @__pthread_return_0()
  %v0_1000a260.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a260

dec_label_pc_1000a260:                            ; preds = %dec_label_pc_1000a234, %dec_label_pc_1000a240
  %v0_1000a26c = phi i32 [ %tmp, %dec_label_pc_1000a234 ], [ %v0_1000a260.pre, %dec_label_pc_1000a240 ]
  %v1_1000a260 = inttoptr i32 %v0_1000a26c to i16*
  %v2_1000a260 = load i16, i16* %v1_1000a260, align 2
  %v3_1000a260 = zext i16 %v2_1000a260 to i32
  store i32 %v3_1000a260, i32* %r0.global-to-local, align 4
  %v1_1000a264 = and i32 %v3_1000a260, 64
  store i32 %v1_1000a264, i32* %r9.global-to-local, align 4
  %v3_1000a264 = icmp eq i32 %v1_1000a264, 0
  br i1 %v3_1000a264, label %dec_label_pc_1000a27c, label %dec_label_pc_1000a26c

dec_label_pc_1000a26c:                            ; preds = %dec_label_pc_1000a260
  store i32 %v0_1000a26c, i32* @r3, align 4
  store i32 268477044, i32* @lr, align 4
  %v0_1000a270 = call i32 @__stdio_wcommit()
  %v3_1000a274 = icmp eq i32 %v0_1000a270, 0
  br i1 %v3_1000a274, label %dec_label_pc_1000a27c, label %dec_label_pc_1000a2e4

dec_label_pc_1000a27c:                            ; preds = %dec_label_pc_1000a26c, %dec_label_pc_1000a260
  %v0_1000a27c = load i32, i32* @r30, align 4
  %v3_1000a27c = icmp eq i32 %v0_1000a27c, 1
  br i1 %v3_1000a27c, label %dec_label_pc_1000a284, label %dec_label_pc_1000a27c.dec_label_pc_1000a298_crit_edge

dec_label_pc_1000a27c.dec_label_pc_1000a298_crit_edge: ; preds = %dec_label_pc_1000a27c
  br label %dec_label_pc_1000a298

dec_label_pc_1000a284:                            ; preds = %dec_label_pc_1000a27c
  %v0_1000a284 = load i32, i32* @r31, align 4
  %v1_1000a284 = inttoptr i32 %v0_1000a284 to i16*
  %v2_1000a288 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268477072, i32* @lr, align 4
  %v4_1000a28c = call i32 @__stdio_adjust_position(i16* %v1_1000a284, i32 %v2_1000a288)
  %v1_1000a290 = icmp slt i32 %v4_1000a28c, 0
  br i1 %v1_1000a290, label %dec_label_pc_1000a2e4, label %dec_label_pc_1000a284.dec_label_pc_1000a298_crit_edge

dec_label_pc_1000a284.dec_label_pc_1000a298_crit_edge: ; preds = %dec_label_pc_1000a284
  %v0_1000a298.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a298

dec_label_pc_1000a298:                            ; preds = %dec_label_pc_1000a27c.dec_label_pc_1000a298_crit_edge, %dec_label_pc_1000a284.dec_label_pc_1000a298_crit_edge
  %v0_1000a298 = phi i32 [ %v0_1000a27c, %dec_label_pc_1000a27c.dec_label_pc_1000a298_crit_edge ], [ %v0_1000a298.pre, %dec_label_pc_1000a284.dec_label_pc_1000a298_crit_edge ]
  %v0_1000a29c = load i32, i32* @r31, align 4
  store i32 268477096, i32* @lr, align 4
  %v5_1000a2a4 = call i32 @__stdio_seek(i32 %v0_1000a29c, i32* nonnull %stack_var_-56, i32 %v0_1000a298)
  %v1_1000a2a8 = icmp slt i32 %v5_1000a2a4, 0
  br i1 %v1_1000a2a8, label %dec_label_pc_1000a2e4, label %dec_label_pc_1000a2b0

dec_label_pc_1000a2b0:                            ; preds = %dec_label_pc_1000a298
  %v0_1000a2b0 = load i32, i32* @r31, align 4
  %v1_1000a2b0 = inttoptr i32 %v0_1000a2b0 to i16*
  %v2_1000a2b0 = load i16, i16* %v1_1000a2b0, align 2
  %v3_1000a2b0 = zext i16 %v2_1000a2b0 to i32
  store i32 %v3_1000a2b0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000a2b8 = add i32 %v0_1000a2b0, 8
  %v2_1000a2b8 = inttoptr i32 %v1_1000a2b8 to i32*
  %v3_1000a2b8 = load i32, i32* %v2_1000a2b8, align 4
  store i32 %v3_1000a2b8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000a2c0 = and i32 %v3_1000a2b0, 65464
  store i32 %v1_1000a2c0, i32* %r0.global-to-local, align 4
  %v3_1000a2c4 = add i32 %v0_1000a2b0, 2
  %v4_1000a2c4 = inttoptr i32 %v3_1000a2c4 to i8*
  store i8 0, i8* %v4_1000a2c4, align 1
  %v0_1000a2c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2c8 = load i32, i32* @r31, align 4
  %v2_1000a2c8 = add i32 %v1_1000a2c8, 28
  %v3_1000a2c8 = inttoptr i32 %v2_1000a2c8 to i32*
  store i32 %v0_1000a2c8, i32* %v3_1000a2c8, align 4
  %v0_1000a2cc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a2cc = trunc i32 %v0_1000a2cc to i16
  %v2_1000a2cc = load i32, i32* @r31, align 4
  %v3_1000a2cc = inttoptr i32 %v2_1000a2cc to i16*
  store i16 %v1_1000a2cc, i16* %v3_1000a2cc, align 2
  %v0_1000a2d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2d0 = load i32, i32* @r31, align 4
  %v2_1000a2d0 = add i32 %v1_1000a2d0, 16
  %v3_1000a2d0 = inttoptr i32 %v2_1000a2d0 to i32*
  store i32 %v0_1000a2d0, i32* %v3_1000a2d0, align 4
  %v0_1000a2d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2d4 = load i32, i32* @r31, align 4
  %v2_1000a2d4 = add i32 %v1_1000a2d4, 20
  %v3_1000a2d4 = inttoptr i32 %v2_1000a2d4 to i32*
  store i32 %v0_1000a2d4, i32* %v3_1000a2d4, align 4
  %v0_1000a2d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2d8 = load i32, i32* @r31, align 4
  %v2_1000a2d8 = add i32 %v1_1000a2d8, 24
  %v3_1000a2d8 = inttoptr i32 %v2_1000a2d8 to i32*
  store i32 %v0_1000a2d8, i32* %v3_1000a2d8, align 4
  %v0_1000a2dc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a2dc = load i32, i32* @r31, align 4
  %v2_1000a2dc = add i32 %v1_1000a2dc, 44
  %v3_1000a2dc = inttoptr i32 %v2_1000a2dc to i32*
  store i32 %v0_1000a2dc, i32* %v3_1000a2dc, align 4
  br label %dec_label_pc_1000a2e8

dec_label_pc_1000a2e4:                            ; preds = %dec_label_pc_1000a26c, %dec_label_pc_1000a298, %dec_label_pc_1000a284
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000a2e8

dec_label_pc_1000a2e8:                            ; preds = %dec_label_pc_1000a2b0, %dec_label_pc_1000a2e4
  %v0_1000a2e8 = load i32, i32* @r28, align 4
  %v3_1000a2e8 = icmp eq i32 %v0_1000a2e8, 0
  br i1 %v3_1000a2e8, label %dec_label_pc_1000a2f0, label %dec_label_pc_1000a2fc

dec_label_pc_1000a2f0:                            ; preds = %dec_label_pc_1000a2e8
  %v2_1000a2f0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000a2f0, i32* @r3, align 4
  %v0_1000a2f8 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000a2fc

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2e8, %dec_label_pc_1000a220, %dec_label_pc_1000a2f0
  store i32 %v0_1000a1fc, i32* %r0.global-to-local, align 4
  %v0_1000a300 = load i32, i32* @r30, align 4
  ret i32 %v0_1000a300

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 24, { 0, 1, 14, 15, 16, 2, 17, 18, 19, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 30, 31, 32, 33, 12, 34, 13 }
  uselistorder i32 28, { 6, 7, 20, 8, 9, 10, 11, 12, 13, 16, 14, 15, 1, 17, 21, 22, 23, 24, 2, 3, 18, 25, 26, 32, 27, 33, 28, 0, 29, 30, 31, 4, 5, 19 }
  uselistorder i8 0, { 18, 0, 31, 32, 33, 34, 30, 4, 35, 2, 36, 37, 5, 38, 40, 41, 42, 43, 39, 45, 44, 6, 46, 47, 48, 49, 50, 21, 54, 52, 20, 53, 51, 19, 55, 56, 57, 58, 7, 60, 59, 22, 8, 61, 62, 9, 63, 64, 65, 66, 24, 69, 67, 68, 23, 70, 71, 10, 73, 72, 25, 74, 75, 76, 11, 77, 78, 79, 80, 82, 83, 84, 85, 81, 86, 3, 12, 13, 14, 15, 16, 17, 88, 26, 89, 90, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 99, 101, 103, 104, 102, 27, 105, 106, 29, 107, 28, 1, 108, 109 }
  uselistorder i32 ()* @__stdio_wcommit, { 6, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 ()* @__pthread_return_0, { 38, 34, 33, 32, 31, 30, 29, 10, 28, 27, 26, 25, 24, 9, 8, 7, 23, 22, 21, 20, 19, 18, 0, 17, 37, 36, 35, 6, 5, 4, 3, 2, 1, 15, 14, 13, 12, 11, 16 }
  uselistorder i32 ()* @__pthread_return_void, { 47, 46, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 0, 5, 4, 45, 44, 43, 42, 41, 40, 3, 2 }
  uselistorder i32* @r29, { 17, 19, 20, 21, 18, 22, 14, 55, 56, 57, 23, 24, 1, 25, 26, 27, 28, 29, 30, 58, 59, 60, 61, 62, 123, 124, 125, 31, 32, 2, 33, 126, 127, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 3, 11, 4, 47, 16, 44, 45, 128, 129, 130, 131, 132, 109, 110, 133, 134, 5, 63, 12, 64, 65, 66, 67, 69, 68, 70, 71, 72, 73, 74, 48, 49, 50, 51, 52, 6, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 13, 87, 88, 89, 90, 91, 92, 15, 7, 0, 93, 135, 136, 137, 138, 94, 95, 96, 97, 98, 8, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 9, 116, 117, 118, 119, 120, 121, 122, 106, 107, 108, 10, 53, 54 }
  uselistorder i32 56, { 2, 5, 6, 1, 4, 3, 0 }
  uselistorder i32* @r28, { 14, 15, 16, 2, 17, 18, 19, 20, 21, 3, 57, 58, 59, 60, 61, 62, 118, 119, 120, 121, 122, 123, 124, 22, 23, 24, 25, 26, 4, 27, 28, 5, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0, 45, 46, 11, 12, 13, 6, 125, 126, 127, 47, 48, 67, 68, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 50, 7, 49, 51, 52, 53, 54, 55, 56, 79, 83, 80, 81, 82, 1, 84, 85, 86, 8, 87, 88, 89, 90, 91, 92, 93, 94, 128, 95, 96, 97, 98, 9, 99, 10, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 129, 130, 113, 114, 115, 116, 117, 111, 112 }
  uselistorder i32 52, { 0, 1, 5, 2, 6, 3, 4 }
  uselistorder i32 22, { 0, 8, 1, 14, 2, 9, 3, 4, 12, 5, 10, 6, 11, 7, 13 }
  uselistorder i32* @r30, { 19, 20, 21, 8, 22, 23, 24, 25, 26, 27, 28, 29, 9, 30, 31, 32, 33, 34, 67, 68, 69, 10, 70, 138, 139, 140, 141, 142, 143, 144, 35, 36, 37, 38, 39, 40, 41, 1, 43, 18, 44, 11, 45, 46, 42, 47, 48, 49, 50, 51, 52, 53, 12, 54, 55, 2, 56, 13, 145, 146, 147, 148, 57, 72, 74, 75, 76, 77, 78, 71, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 58, 59, 60, 3, 61, 62, 63, 7, 64, 65, 93, 90, 91, 5, 92, 4, 14, 149, 96, 94, 95, 97, 98, 100, 99, 6, 101, 102, 103, 104, 105, 106, 107, 108, 109, 17, 110, 111, 112, 113, 114, 115, 116, 117, 15, 131, 150, 153, 151, 152, 66, 0, 118, 16, 119, 120, 132, 133, 134, 135, 136, 137, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130 }
  uselistorder label %dec_label_pc_1000a2fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a2e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2e4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a298, { 1, 0 }
  uselistorder label %dec_label_pc_1000a260, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000a32c = load i16, i16* %arg1, align 2
  %v4_1000a32c = zext i16 %v3_1000a32c to i32
  %tmp9 = urem i16 %v3_1000a32c, 4
  %v3_1000a330 = icmp eq i16 %tmp9, 0
  br i1 %v3_1000a330, label %dec_label_pc_1000a37c, label %dec_label_pc_1000a338

dec_label_pc_1000a338:                            ; preds = %entry
  %v1_1000a330 = zext i16 %tmp9 to i32
  %v1_1000a338 = add nsw i32 %v1_1000a330, -1
  store i32 %v1_1000a338, i32* %r10.global-to-local, align 4
  %v4_1000a338 = icmp eq i32 %v1_1000a338, 0
  br i1 %v4_1000a338, label %dec_label_pc_1000a37c, label %dec_label_pc_1000a340

dec_label_pc_1000a340:                            ; preds = %dec_label_pc_1000a338
  %v1_1000a340 = and i32 %v4_1000a32c, 2048
  %v3_1000a340 = icmp eq i32 %v1_1000a340, 0
  br i1 %v3_1000a340, label %dec_label_pc_1000a37c, label %dec_label_pc_1000a348

dec_label_pc_1000a348:                            ; preds = %dec_label_pc_1000a340
  %v2_1000a348 = icmp sgt i32 %v1_1000a338, 1
  br i1 %v2_1000a348, label %dec_label_pc_1000a3f4, label %dec_label_pc_1000a350

dec_label_pc_1000a350:                            ; preds = %dec_label_pc_1000a348
  %v2_1000a350 = add i32 %tmp, 40
  %v3_1000a350 = inttoptr i32 %v2_1000a350 to i32*
  %v4_1000a350 = load i32, i32* %v3_1000a350, align 4
  %v3_1000a354 = icmp eq i32 %v4_1000a350, 0
  br i1 %v3_1000a354, label %dec_label_pc_1000a35c, label %dec_label_pc_1000a3f4

dec_label_pc_1000a35c:                            ; preds = %dec_label_pc_1000a350
  %v2_1000a35c = add i32 %tmp, 44
  %v3_1000a35c = inttoptr i32 %v2_1000a35c to i32*
  %v4_1000a35c = load i32, i32* %v3_1000a35c, align 4
  %v2_1000a360 = add i32 %tmp, 3
  %v3_1000a360 = inttoptr i32 %v2_1000a360 to i8*
  %v4_1000a360 = load i8, i8* %v3_1000a360, align 1
  %v5_1000a360 = zext i8 %v4_1000a360 to i32
  %v2_1000a368 = sub nsw i32 %v1_1000a338, %v5_1000a360
  %v1_1000a36c = add nsw i32 %v2_1000a368, -1
  store i32 %v1_1000a36c, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000a35c, 1
  br i1 %tmp7, label %dec_label_pc_1000a37c, label %dec_label_pc_1000a374

dec_label_pc_1000a374:                            ; preds = %dec_label_pc_1000a35c
  %v2_1000a374 = add i32 %tmp, 2
  %v3_1000a374 = inttoptr i32 %v2_1000a374 to i8*
  %v4_1000a374 = load i8, i8* %v3_1000a374, align 1
  %v5_1000a374 = zext i8 %v4_1000a374 to i32
  %v2_1000a378 = sub nsw i32 %v1_1000a36c, %v5_1000a374
  store i32 %v2_1000a378, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a37c

dec_label_pc_1000a37c:                            ; preds = %dec_label_pc_1000a35c, %dec_label_pc_1000a340, %dec_label_pc_1000a338, %entry, %dec_label_pc_1000a374
  %v0_1000a3a0 = phi i32 [ %v1_1000a36c, %dec_label_pc_1000a35c ], [ %v1_1000a338, %dec_label_pc_1000a340 ], [ 0, %dec_label_pc_1000a338 ], [ 0, %entry ], [ %v2_1000a378, %dec_label_pc_1000a374 ]
  %v1_1000a37c = and i32 %v4_1000a32c, 64
  %v3_1000a37c = icmp eq i32 %v1_1000a37c, 0
  %storemerge.in.in.v = select i1 %v3_1000a37c, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1000a390 = add i32 %tmp, 16
  %v3_1000a390 = inttoptr i32 %v2_1000a390 to i32*
  %v4_1000a390 = load i32, i32* %v3_1000a390, align 4
  %v1_1000a394 = inttoptr i32 %arg2 to i32*
  %v2_1000a394 = load i32, i32* %v1_1000a394, align 4
  store i32 %v2_1000a394, i32* %r4.global-to-local, align 4
  %v2_1000a398 = sub i32 %storemerge, %v4_1000a390
  %v1_1000a39c = add i32 %arg2, 4
  %v2_1000a39c = inttoptr i32 %v1_1000a39c to i32*
  %v3_1000a39c = load i32, i32* %v2_1000a39c, align 4
  store i32 %v3_1000a39c, i32* %r5.global-to-local, align 4
  %v2_1000a3a0 = add i32 %v2_1000a398, %v0_1000a3a0
  store i32 %v2_1000a3a0, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1000a3a0, 0
  %v1_1000a3a8 = zext i1 %tmp10 to i32
  %v2_1000a3a8 = ashr i32 %v2_1000a3a0, 31
  %v3_1000a3a8 = and i32 %v2_1000a3a8, -2
  %v4_1000a3a8 = or i32 %v3_1000a3a8, %v1_1000a3a8
  %v2_1000a3ac = sub i32 %v3_1000a39c, %v2_1000a3a0
  %v3_1000a3ac = sub i32 -1, %v2_1000a3a0
  store i32 %v2_1000a3ac, i32* %r10.global-to-local, align 4
  %v6_1000a3ac = icmp ule i32 %v2_1000a3ac, %v3_1000a3ac
  %v2_1000a3b0 = sub nsw i32 -1, %v4_1000a3a8
  %v3_1000a3b0 = add i32 %v2_1000a394, %v2_1000a3b0
  %v5_1000a3b0 = zext i1 %v6_1000a3ac to i32
  %v6_1000a3b0 = add i32 %v3_1000a3b0, %v5_1000a3b0
  store i32 %v6_1000a3b0, i32* %v1_1000a394, align 4
  %v0_1000a3b8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a3b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a3b8 = add i32 %v1_1000a3b8, 4
  %v3_1000a3b8 = inttoptr i32 %v2_1000a3b8 to i32*
  store i32 %v0_1000a3b8, i32* %v3_1000a3b8, align 4
  %v0_1000a3bc = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a3bc = inttoptr i32 %v0_1000a3bc to i32*
  %v2_1000a3bc = load i32, i32* %v1_1000a3bc, align 4
  %v1_1000a3c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1000a3c0 = icmp sgt i32 %v2_1000a3bc, %v1_1000a3c0
  br i1 %v3_1000a3c0, label %dec_label_pc_1000a3d8, label %dec_label_pc_1000a3c8

dec_label_pc_1000a3c8:                            ; preds = %dec_label_pc_1000a37c
  %v4_1000a3c0 = icmp eq i32 %v2_1000a3bc, %v1_1000a3c0
  br i1 %v4_1000a3c0, label %dec_label_pc_1000a3cc, label %dec_label_pc_1000a3dcthread-pre-split

dec_label_pc_1000a3cc:                            ; preds = %dec_label_pc_1000a3c8
  %v1_1000a3cc = add i32 %v0_1000a3bc, 4
  %v2_1000a3cc = inttoptr i32 %v1_1000a3cc to i32*
  %v3_1000a3cc = load i32, i32* %v2_1000a3cc, align 4
  %v1_1000a3d0 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000a3d0 = icmp ugt i32 %v3_1000a3cc, %v1_1000a3d0
  br i1 %v3_1000a3d0, label %dec_label_pc_1000a3d8, label %dec_label_pc_1000a3dcthread-pre-split

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a3cc, %dec_label_pc_1000a37c
  %v0_1000a3d8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a3d8 = sub i32 0, %v0_1000a3d8
  store i32 %v1_1000a3d8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a3dc

dec_label_pc_1000a3dcthread-pre-split:            ; preds = %dec_label_pc_1000a3c8, %dec_label_pc_1000a3cc
  %v0_1000a3dc.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a3dc

dec_label_pc_1000a3dc:                            ; preds = %dec_label_pc_1000a3dcthread-pre-split, %dec_label_pc_1000a3d8
  %v0_1000a3dc = phi i32 [ %v0_1000a3dc.pr, %dec_label_pc_1000a3dcthread-pre-split ], [ %v1_1000a3d8, %dec_label_pc_1000a3d8 ]
  %tmp8 = icmp sgt i32 %v0_1000a3dc, -1
  br i1 %tmp8, label %dec_label_pc_1000a3f8, label %dec_label_pc_1000a3e4

dec_label_pc_1000a3e4:                            ; preds = %dec_label_pc_1000a3dc
  %v0_1000a3e4 = call i32 @__errno_location()
  %v2_1000a3ec = inttoptr i32 %v0_1000a3e4 to i32*
  store i32 75, i32* %v2_1000a3ec, align 4
  %v0_1000a3fc.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a3f8

dec_label_pc_1000a3f4:                            ; preds = %dec_label_pc_1000a350, %dec_label_pc_1000a348
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a3f8

dec_label_pc_1000a3f8:                            ; preds = %dec_label_pc_1000a3dc, %dec_label_pc_1000a3e4, %dec_label_pc_1000a3f4
  %v0_1000a3fc = phi i32 [ %v0_1000a3dc, %dec_label_pc_1000a3dc ], [ %v0_1000a3fc.pre, %dec_label_pc_1000a3e4 ], [ -1, %dec_label_pc_1000a3f4 ]
  ret i32 %v0_1000a3fc

; uselistorder directives
  uselistorder i32 %v2_1000a3bc, { 1, 0 }
  uselistorder i32 %v2_1000a3a0, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 22, 23, 24, 25, 26, 39, 40, 41, 42, 27, 28, 29, 30, 31, 32, 63, 43, 6, 44, 45, 7, 46, 47, 0, 48, 49, 1, 50, 8, 64, 51, 52, 65, 66, 67, 53, 2, 54, 55, 56, 57, 58, 3, 35, 33, 59, 34, 60, 61, 68, 69, 36, 9, 62, 10, 4, 5 }
  uselistorder i32 8, { 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 10, 31, 32, 65, 66, 67, 33, 68, 69, 108, 109, 70, 34, 35, 36, 37, 38, 17, 39, 40, 41, 42, 0, 1, 43, 44, 8, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 7, 2, 110, 111, 71, 72, 73, 74, 18, 19, 75, 76, 77, 78, 79, 80, 55, 56, 20, 13, 14, 15, 57, 58, 59, 60, 61, 81, 112, 82, 83, 84, 113, 114, 115, 85, 86, 87, 88, 89, 106, 3, 4, 116, 117, 118, 119, 9, 11, 62, 12, 91, 90, 63, 99, 98, 96, 97, 100, 101, 102, 103, 104, 105, 5, 92, 93, 94, 21, 6, 120, 64, 95, 107 }
  uselistorder i32 20, { 1, 2, 3, 4, 5, 6, 18, 26, 27, 19, 20, 7, 8, 9, 10, 11, 13, 14, 12, 21, 22, 23, 28, 24, 15, 16, 25, 17, 0 }
  uselistorder i32 64, { 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32 2, { 62, 63, 30, 38, 64, 65, 4, 66, 67, 68, 0, 114, 5, 6, 31, 82, 83, 69, 70, 71, 7, 8, 9, 10, 11, 72, 73, 12, 75, 76, 77, 28, 74, 44, 13, 115, 84, 45, 85, 86, 32, 1, 2, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 14, 99, 15, 78, 79, 80, 33, 29, 100, 101, 102, 103, 104, 46, 47, 48, 105, 106, 107, 116, 39, 16, 17, 3, 49, 108, 18, 19, 34, 35, 50, 51, 36, 20, 21, 22, 23, 42, 43, 52, 53, 109, 41, 110, 111, 37, 24, 117, 54, 81, 55, 57, 56, 58, 25, 26, 59, 112, 40, 27, 113, 60, 61 }
  uselistorder i32 3, { 21, 1, 2, 22, 23, 14, 24, 25, 3, 11, 27, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 4, 40, 5, 0, 8, 15, 17, 16, 10, 18, 41, 9, 47, 6, 42, 43, 44, 51, 52, 53, 54, 28, 45, 46, 29, 50, 30, 13, 48, 49, 7, 55, 56, 57, 12, 19, 20 }
  uselistorder i32 44, { 2, 3, 0, 4, 5, 6, 9, 8, 7, 1 }
  uselistorder i32 40, { 1, 7, 2, 3, 4, 5, 6, 8, 9, 10, 0, 11 }
  uselistorder i32 2048, { 1, 2, 3, 4, 0 }
  uselistorder i16 0, { 12, 13, 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i16 4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a3f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a3dcthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000a37c, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1000a410 = load i32, i32* @lr, align 4
  store i32 %v0_1000a410, i32* %r0.global-to-local, align 4
  %v0_1000a41c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1000a428 = add i32 %arg1, 4
  %v2_1000a428 = inttoptr i32 %v1_1000a428 to i32*
  %v3_1000a428 = load i32, i32* %v2_1000a428, align 4
  %v2_1000a42c = load i32, i32* %arg2, align 4
  %v1_1000a430 = add i32 %tmp, 4
  %v2_1000a430 = inttoptr i32 %v1_1000a430 to i32*
  %v3_1000a430 = load i32, i32* %v2_1000a430, align 4
  store i32 268477496, i32* @lr, align 4
  %v4_1000a434 = call i32 @__libc_lseek64(i32 %v3_1000a428, i32 %v2_1000a42c, i32 %v3_1000a430, i32 %arg3)
  %v1_1000a438 = icmp slt i32 %v4_1000a434, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1000a438, label %dec_label_pc_1000a450, label %dec_label_pc_1000a444

dec_label_pc_1000a444:                            ; preds = %entry
  %v1_1000a444 = load i32, i32* @r31, align 4
  %v2_1000a444 = inttoptr i32 %v1_1000a444 to i32*
  store i32 %v4_1000a434, i32* %v2_1000a444, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a44c = load i32, i32* @r31, align 4
  %v2_1000a44c = add i32 %v1_1000a44c, 4
  %v3_1000a44c = inttoptr i32 %v2_1000a44c to i32*
  store i32 %tmp, i32* %v3_1000a44c, align 4
  %v0_1000a450.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a450

dec_label_pc_1000a450:                            ; preds = %entry, %dec_label_pc_1000a444
  %v0_1000a450 = phi i32 [ %tmp, %entry ], [ %v0_1000a450.pre, %dec_label_pc_1000a444 ]
  store i32 %v0_1000a410, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a41c, i32* @r31, align 4
  ret i32 %v0_1000a450

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 3, 4, 1 }
  uselistorder i32 4, { 133, 134, 135, 136, 137, 138, 2, 4, 0, 139, 3, 5, 1, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 180, 152, 96, 252, 153, 6, 7, 181, 182, 8, 9, 10, 11, 12, 13, 14, 154, 15, 155, 156, 111, 157, 158, 159, 160, 161, 16, 17, 162, 163, 112, 164, 165, 113, 166, 167, 169, 18, 19, 91, 93, 168, 253, 20, 92, 109, 21, 22, 185, 183, 184, 116, 186, 187, 188, 105, 23, 189, 190, 191, 192, 193, 194, 195, 24, 196, 25, 26, 27, 110, 197, 199, 117, 200, 201, 202, 254, 28, 29, 106, 178, 30, 31, 203, 32, 204, 118, 205, 206, 207, 119, 33, 34, 255, 256, 120, 35, 36, 97, 37, 38, 39, 40, 41, 42, 208, 209, 121, 43, 44, 45, 107, 46, 114, 210, 122, 47, 257, 258, 259, 94, 95, 260, 261, 123, 262, 263, 48, 264, 271, 49, 50, 170, 51, 52, 171, 53, 214, 215, 216, 211, 212, 213, 54, 172, 55, 56, 57, 173, 58, 174, 175, 230, 232, 231, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 59, 176, 60, 217, 124, 218, 219, 98, 61, 62, 220, 63, 221, 222, 223, 224, 225, 226, 108, 64, 227, 243, 65, 66, 198, 67, 68, 265, 266, 267, 125, 268, 269, 270, 69, 70, 71, 99, 72, 177, 73, 100, 74, 75, 76, 77, 78, 79, 179, 80, 101, 81, 242, 82, 126, 115, 127, 83, 102, 128, 103, 84, 104, 244, 85, 245, 86, 246, 87, 247, 88, 248, 89, 249, 90, 250, 129, 130, 251, 131, 132 }
  uselistorder i32* @r31, { 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 5, 63, 64, 65, 66, 67, 68, 6, 69, 70, 71, 72, 7, 73, 8, 74, 75, 122, 9, 123, 124, 125, 126, 10, 127, 128, 76, 43, 77, 0, 129, 130, 131, 132, 133, 2, 12, 134, 11, 135, 136, 254, 255, 78, 79, 137, 13, 138, 139, 14, 140, 141, 15, 142, 143, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 18, 17, 97, 16, 101, 102, 19, 103, 104, 105, 106, 47, 48, 99, 98, 100, 256, 257, 258, 20, 44, 259, 38, 144, 21, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 45, 107, 22, 39, 23, 24, 108, 109, 110, 159, 160, 161, 162, 1, 163, 164, 165, 166, 167, 168, 169, 170, 260, 261, 262, 263, 264, 265, 266, 267, 25, 171, 172, 173, 174, 26, 175, 176, 177, 178, 179, 180, 181, 182, 27, 42, 183, 3, 184, 185, 28, 186, 268, 29, 269, 46, 30, 40, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 31, 32, 217, 33, 270, 271, 272, 34, 219, 218, 4, 220, 221, 222, 223, 224, 225, 226, 227, 116, 117, 118, 119, 241, 35, 242, 276, 277, 273, 274, 275, 120, 121, 111, 112, 113, 114, 115, 228, 229, 41, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 230, 231, 232, 37, 233, 234, 235, 36, 236, 237, 238, 239, 240 }
  uselistorder label %dec_label_pc_1000a450, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a468 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000a494 = call i32 @__asm_mfcr()
  %v1_1000a498 = and i32 %v0_1000a494, 268435456
  %v3_1000a498 = icmp eq i32 %v1_1000a498, 0
  store i32 %v0_1000a494, i32* %r31.global-to-local, align 4
  store i32 %v0_1000a494, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a498, label %dec_label_pc_1000a4bc, label %dec_label_pc_1000a4ac

dec_label_pc_1000a4ac:                            ; preds = %entry
  %v0_1000a4ac = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000a4b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a4b4 = inttoptr i32 %v0_1000a4ac to i32*
  store i32 %v0_1000a4b4, i32* %v2_1000a4b4, align 4
  %v0_1000a4c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a4c0

dec_label_pc_1000a4bc:                            ; preds = %entry
  %v3_1000a4a4 = icmp eq i32 %v0_1000a494, 0
  br i1 %v3_1000a4a4, label %dec_label_pc_1000a4cc, label %dec_label_pc_1000a4c0

dec_label_pc_1000a4c0:                            ; preds = %dec_label_pc_1000a4bc, %dec_label_pc_1000a4ac
  %v0_1000a4c0 = phi i32 [ %v0_1000a494, %dec_label_pc_1000a4bc ], [ %v0_1000a4c0.pre, %dec_label_pc_1000a4ac ]
  %tmp = icmp slt i32 %v0_1000a4c0, 0
  %v1_1000a4c4 = zext i1 %tmp to i32
  %v2_1000a4c4 = ashr i32 %v0_1000a4c0, 31
  %v3_1000a4c4 = and i32 %v2_1000a4c4, -2
  %v4_1000a4c4 = or i32 %v3_1000a4c4, %v1_1000a4c4
  br label %dec_label_pc_1000a4d4

dec_label_pc_1000a4cc:                            ; preds = %dec_label_pc_1000a4bc
  %v3_1000a4cc = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a4d4

dec_label_pc_1000a4d4:                            ; preds = %dec_label_pc_1000a4c0, %dec_label_pc_1000a4cc
  %v0_1000a4e4 = phi i32 [ %v4_1000a4c4, %dec_label_pc_1000a4c0 ], [ %v3_1000a4cc, %dec_label_pc_1000a4cc ]
  store i32 %v0_1000a468, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a4e4

; uselistorder directives
  uselistorder i32 %v0_1000a4c0, { 1, 0 }
  uselistorder i32 %v0_1000a494, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12, 19, 14, 15, 13, 16, 18, 1, 0, 17, 20 }
  uselistorder i32 31, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 2, 38, 39, 42, 43, 0, 25, 3, 44, 45, 26, 40, 41 }
  uselistorder i32 ()* @__errno_location, { 58, 57, 56, 28, 55, 27, 54, 20, 19, 53, 52, 51, 17, 29, 37, 50, 49, 48, 36, 5, 35, 34, 14, 13, 33, 12, 32, 44, 23, 11, 10, 9, 8, 7, 6, 3, 39, 38, 47, 46, 45, 4, 43, 31, 18, 42, 22, 25, 41, 16, 21, 15, 24, 30, 40, 0, 2, 1, 26 }
  uselistorder i32 268435456, { 0, 5, 15, 6, 18, 7, 19, 1, 11, 20, 21, 22, 23, 24, 25, 14, 2, 12, 10, 3, 16, 13, 17, 9, 8, 4, 26, 27, 28 }
  uselistorder i32 ()* @__asm_mfcr, { 34, 26, 33, 25, 32, 31, 13, 24, 23, 10, 22, 9, 30, 17, 8, 7, 6, 5, 4, 3, 14, 29, 16, 19, 28, 12, 15, 11, 20, 21, 27, 2, 1, 0, 18 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4d4, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c000.87 to i32), i32* %r31.global-to-local, align 4
  %v3_1000a504 = load i32, i32* @global_var_1001c000.87, align 4
  %v3_1000a508 = icmp eq i32 %v3_1000a504, -1
  br i1 %v3_1000a508, label %dec_label_pc_1000a524, label %dec_label_pc_1000a510

dec_label_pc_1000a510:                            ; preds = %entry, %dec_label_pc_1000a510
  %v0_1000a510 = phi i32 [ %v3_1000a518, %dec_label_pc_1000a510 ], [ %v3_1000a504, %entry ]
  call void @__pseudo_call(i32 %v0_1000a510)
  %v0_1000a518 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a518 = add i32 %v0_1000a518, -4
  %v2_1000a518 = inttoptr i32 %v1_1000a518 to i32*
  %v3_1000a518 = load i32, i32* %v2_1000a518, align 4
  store i32 %v1_1000a518, i32* %r31.global-to-local, align 4
  %v3_1000a51c = icmp eq i32 %v3_1000a518, -1
  br i1 %v3_1000a51c, label %dec_label_pc_1000a524, label %dec_label_pc_1000a510

dec_label_pc_1000a524:                            ; preds = %dec_label_pc_1000a510, %entry
  %v0_1000a534 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a534

; uselistorder directives
  uselistorder i32 %v3_1000a518, { 1, 0 }
  uselistorder i32 -4, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 26, 27, 28, 11, 12, 13, 14, 22, 21, 29, 30, 0, 15, 1, 23, 24 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, { 302, 303, 177, 52, 178, 111, 4, 5, 179, 180, 181, 182, 53, 142, 183, 143, 45, 6, 144, 184, 185, 145, 146, 147, 186, 41, 187, 188, 189, 109, 46, 190, 191, 192, 193, 112, 194, 7, 54, 195, 196, 197, 198, 199, 148, 200, 113, 201, 202, 114, 8, 9, 115, 47, 203, 242, 48, 149, 204, 205, 206, 207, 16, 42, 55, 243, 244, 304, 305, 208, 56, 116, 57, 245, 246, 247, 17, 18, 19, 20, 21, 22, 23, 106, 107, 209, 15, 210, 10, 211, 212, 150, 117, 24, 151, 213, 214, 0, 216, 217, 1, 118, 119, 152, 27, 120, 110, 218, 121, 215, 153, 11, 219, 58, 306, 2, 122, 248, 59, 249, 49, 60, 250, 61, 251, 220, 221, 100, 101, 63, 62, 222, 43, 44, 223, 224, 225, 154, 69, 67, 65, 226, 227, 228, 68, 66, 64, 229, 230, 155, 231, 156, 252, 25, 26, 157, 253, 158, 50, 254, 102, 255, 256, 257, 258, 12, 123, 259, 124, 260, 125, 70, 307, 308, 71, 72, 159, 309, 30, 31, 32, 310, 160, 312, 28, 29, 261, 33, 262, 263, 264, 128, 265, 266, 267, 268, 269, 270, 271, 126, 272, 127, 273, 274, 275, 276, 161, 162, 277, 278, 163, 279, 164, 280, 281, 34, 35, 36, 165, 282, 283, 166, 167, 168, 37, 169, 73, 74, 75, 290, 129, 76, 77, 78, 79, 80, 81, 315, 313, 241, 13, 130, 232, 14, 82, 99, 284, 51, 104, 170, 131, 103, 285, 83, 233, 291, 292, 40, 234, 311, 235, 84, 236, 171, 237, 38, 39, 238, 239, 172, 286, 105, 287, 288, 132, 289, 85, 108, 173, 174, 175, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 314, 133, 140, 240, 293, 141, 176, 134, 135, 136, 294, 295, 296, 297, 298, 137, 299, 300, 3, 301, 138, 139 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_1000a510, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_1000a550 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a550

; uselistorder directives
  uselistorder i32* @r3, { 18, 19, 45, 46, 47, 48, 49, 50, 51, 52, 11, 20, 53, 54, 55, 56, 57, 58, 2, 1, 59, 60, 61, 21, 114, 115, 118, 116, 117, 0, 181, 182, 3, 62, 63, 64, 65, 22, 23, 66, 24, 67, 68, 69, 4, 8, 5, 70, 6, 71, 7, 72, 73, 74, 75, 76, 77, 25, 78, 79, 80, 81, 82, 83, 44, 84, 85, 86, 26, 119, 12, 120, 87, 88, 89, 121, 124, 125, 40, 35, 13, 106, 107, 14, 126, 127, 128, 129, 130, 131, 132, 27, 133, 134, 135, 136, 137, 138, 183, 184, 185, 186, 187, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 188, 189, 150, 151, 152, 153, 154, 155, 156, 157, 158, 15, 159, 160, 161, 162, 163, 164, 165, 108, 109, 16, 110, 111, 112, 166, 39, 28, 29, 190, 42, 194, 9, 30, 10, 38, 43, 191, 192, 193, 167, 168, 169, 170, 171, 172, 173, 174, 90, 91, 92, 93, 94, 95, 96, 175, 176, 177, 31, 32, 33, 34, 179, 122, 123, 17, 97, 98, 99, 101, 100, 102, 103, 104, 105, 113, 178, 180, 36, 37, 41 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268477796, i32* @lr, align 4
  %v0_1000a560 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_1000a560

; uselistorder directives
  uselistorder i32 0, { 19, 347, 348, 349, 350, 351, 20, 352, 81, 80, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 21, 604, 0, 365, 366, 136, 368, 367, 41, 1, 369, 135, 2, 370, 138, 371, 42, 3, 372, 137, 373, 374, 375, 376, 377, 220, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 82, 83, 391, 392, 393, 394, 395, 396, 397, 398, 399, 28, 400, 221, 64, 401, 402, 403, 404, 405, 84, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 85, 416, 417, 418, 213, 214, 419, 420, 421, 22, 4, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 605, 606, 607, 608, 609, 610, 611, 435, 436, 437, 438, 439, 86, 612, 613, 614, 615, 442, 441, 139, 440, 66, 443, 444, 445, 87, 446, 616, 617, 29, 620, 88, 618, 619, 44, 621, 622, 623, 626, 624, 5, 625, 627, 853, 854, 855, 856, 857, 858, 859, 860, 89, 90, 447, 448, 23, 24, 184, 25, 449, 140, 450, 451, 141, 222, 452, 91, 453, 454, 455, 456, 457, 458, 628, 629, 630, 223, 631, 632, 633, 459, 460, 67, 461, 462, 463, 464, 465, 175, 466, 467, 468, 92, 469, 470, 471, 472, 473, 93, 474, 475, 476, 477, 478, 479, 480, 94, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 30, 133, 134, 142, 492, 493, 95, 494, 224, 495, 496, 225, 499, 100, 96, 497, 498, 227, 500, 501, 502, 504, 101, 505, 6, 7, 102, 103, 97, 98, 506, 507, 99, 508, 509, 510, 511, 512, 513, 514, 515, 516, 226, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 336, 527, 528, 26, 530, 45, 68, 104, 228, 533, 215, 534, 529, 531, 532, 535, 536, 105, 343, 344, 65, 43, 62, 503, 143, 69, 861, 862, 863, 866, 864, 8, 144, 176, 537, 538, 867, 868, 649, 636, 639, 640, 641, 229, 642, 643, 645, 644, 646, 647, 648, 650, 651, 652, 634, 635, 637, 638, 106, 653, 655, 656, 654, 657, 658, 659, 660, 177, 337, 661, 178, 338, 339, 107, 108, 539, 540, 70, 541, 542, 543, 544, 545, 546, 547, 109, 145, 549, 548, 110, 550, 551, 112, 111, 552, 230, 553, 554, 555, 114, 113, 556, 557, 185, 231, 558, 115, 662, 663, 664, 665, 671, 666, 49, 672, 673, 667, 668, 669, 46, 47, 48, 674, 232, 31, 32, 33, 169, 676, 116, 675, 233, 677, 678, 679, 680, 234, 871, 9, 117, 681, 71, 34, 682, 146, 683, 684, 685, 583, 147, 118, 686, 687, 688, 689, 690, 691, 696, 692, 693, 694, 695, 148, 697, 698, 699, 10, 50, 700, 701, 872, 874, 873, 150, 119, 876, 875, 149, 186, 702, 703, 704, 120, 705, 706, 707, 708, 709, 710, 711, 712, 713, 235, 714, 715, 716, 717, 718, 719, 236, 720, 721, 722, 723, 724, 725, 726, 877, 878, 727, 879, 237, 882, 53, 238, 187, 883, 239, 884, 885, 51, 52, 886, 880, 881, 240, 241, 735, 728, 242, 54, 729, 730, 731, 35, 733, 734, 736, 737, 738, 739, 740, 741, 188, 173, 174, 244, 742, 743, 744, 746, 151, 749, 245, 189, 751, 752, 753, 754, 243, 190, 748, 745, 747, 750, 755, 179, 756, 757, 758, 11, 824, 825, 826, 122, 121, 827, 12, 123, 191, 584, 585, 586, 759, 760, 761, 762, 763, 764, 765, 55, 766, 767, 768, 769, 770, 887, 888, 889, 56, 890, 891, 892, 893, 568, 849, 789, 790, 192, 791, 894, 124, 895, 896, 897, 898, 899, 900, 246, 247, 905, 906, 248, 909, 911, 152, 912, 249, 910, 13, 901, 902, 904, 587, 588, 589, 590, 591, 125, 592, 593, 594, 216, 595, 250, 596, 251, 559, 560, 561, 126, 562, 127, 771, 773, 153, 72, 79, 774, 775, 14, 772, 563, 564, 128, 565, 566, 567, 794, 796, 36, 797, 57, 798, 795, 792, 793, 15, 801, 799, 800, 154, 802, 803, 129, 804, 805, 252, 806, 130, 807, 808, 809, 810, 811, 812, 813, 814, 16, 17, 340, 569, 570, 571, 58, 59, 572, 217, 218, 253, 776, 777, 155, 778, 779, 780, 781, 782, 783, 784, 785, 131, 786, 787, 828, 829, 830, 156, 732, 18, 63, 670, 157, 913, 914, 915, 916, 917, 918, 919, 920, 865, 254, 573, 850, 820, 574, 869, 851, 870, 815, 788, 575, 903, 907, 908, 182, 256, 257, 158, 27, 37, 180, 255, 341, 258, 181, 259, 576, 577, 260, 578, 261, 579, 262, 580, 263, 581, 264, 582, 265, 73, 183, 267, 193, 132, 597, 598, 268, 599, 601, 266, 269, 600, 159, 602, 603, 194, 271, 272, 273, 274, 270, 275, 276, 277, 278, 342, 279, 816, 195, 196, 197, 198, 817, 818, 199, 200, 280, 60, 819, 821, 170, 283, 822, 203, 282, 61, 823, 201, 281, 160, 202, 831, 832, 833, 834, 204, 74, 207, 205, 206, 284, 285, 846, 75, 38, 171, 161, 210, 211, 835, 836, 837, 838, 162, 208, 209, 212, 839, 840, 841, 164, 39, 76, 77, 163, 843, 844, 845, 219, 78, 40, 842, 286, 165, 287, 847, 167, 166, 848, 172, 168, 288, 921, 922, 923, 852, 345, 346, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946 }
  uselistorder i32* @lr, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 128, 129, 130, 21, 22, 23, 24, 25, 26, 27, 28, 131, 29, 30, 132, 133, 134, 135, 136, 306, 307, 308, 31, 32, 33, 34, 309, 35, 36, 37, 137, 138, 139, 140, 141, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 2, 3, 52, 310, 311, 66, 67, 68, 142, 312, 313, 314, 315, 316, 143, 147, 144, 145, 146, 151, 152, 148, 149, 150, 153, 154, 155, 156, 157, 69, 70, 71, 74, 72, 73, 158, 162, 159, 1, 161, 0, 163, 166, 167, 164, 165, 317, 318, 319, 320, 321, 168, 169, 170, 171, 172, 173, 174, 175, 113, 176, 177, 178, 179, 180, 181, 322, 323, 324, 325, 326, 327, 328, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 265, 333, 334, 335, 336, 329, 330, 331, 332, 194, 195, 199, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 294, 114, 115, 116, 117, 232, 233, 337, 266, 267, 340, 341, 345, 346, 347, 348, 349, 350, 351, 353, 342, 344, 338, 339, 75, 76, 234, 78, 235, 77, 79, 268, 270, 269, 271, 272, 273, 274, 275, 276, 80, 236, 237, 289, 280, 281, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 295, 160, 352, 299, 81, 343, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 296, 298, 297, 300, 301, 302, 303, 304, 305 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %1 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %2 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i8** @__decompiler_undefined_function_5() local_unnamed_addr
